//= CSAInstPrinter.h - Convert CSA MCInst to assembly syntax -------*- C++ -*-//
//
// Copyright (C) 2017-2019 Intel Corporation. All rights reserved.
//
// The information and source code contained herein is the exclusive
// property of Intel Corporation and may not be disclosed, examined
// or reproduced in whole or in part without explicit written authorization
// from the company.
//
//===----------------------------------------------------------------------===//
//
// This class prints a CSA MCInst to a .s file.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_CSA_INSTPRINTER_CSAINSTPRINTER_H
#define LLVM_LIB_TARGET_CSA_INSTPRINTER_CSAINSTPRINTER_H

#include "llvm/MC/MCInstPrinter.h"

namespace llvm {
class MCOperand;

class CSAInstPrinter : public MCInstPrinter {
  virtual void anchor();

public:
  CSAInstPrinter(const MCAsmInfo &MAI, const MCInstrInfo &MII,
                 const MCRegisterInfo &MRI);

  void printInst(const MCInst *MI, raw_ostream &O, StringRef Annot,
                 const MCSubtargetInfo &STI) override;

  static bool WrapCsaAsm();

  // Autogenerated by tblgen.
  void printInstruction(const MCInst *MI, raw_ostream &O);
  static const char *getRegisterName(unsigned RegNo);

  void printOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O,
                    const char *Modifier = nullptr);
  void printMemOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O,
                       const char *Modifier = nullptr);

  void printUnitOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O,
                        const char *Modifier = nullptr);

#define CSA_ASM_OPERAND(Asm, Enum, Default, ...) \
  void print##Asm##Operand(const MCInst *MI, unsigned OpNo, raw_ostream &O, \
                           const char *Modifier = nullptr);
#include "AsmOperands.h"

  void printPrioOrderOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O,
                            const char *Modifier = nullptr);

  void printLCacheOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O,
                          const char *Modifier = nullptr);
};
} // namespace llvm

#endif
