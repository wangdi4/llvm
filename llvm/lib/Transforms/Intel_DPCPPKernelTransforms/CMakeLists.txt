add_llvm_component_library(LLVMIntel_DPCPPKernelTransforms
  AddFastMath.cpp
  AddFunctionAttrs.cpp
  AddImplicitArgs.cpp
  AddNTAttr.cpp
  AddTLSGlobals.cpp
  BuiltinCallToInst.cpp
  BuiltinImport.cpp
  CoerceTypes.cpp
  BuiltinLibInfoAnalysis.cpp
  CoerceWin64Types.cpp
  DPCPPEqualizer.cpp
  DPCPPKernelTransforms.cpp
  DPCPPKernelVecClone.cpp
  DPCPPPrepareKernelForVecClone.cpp
  DPCPPKernelPostVec.cpp
  DPCPPKernelCompilationUtils.cpp
  DPCPPKernelLoopUtils.cpp
  DPCPPKernelWGLoopCreator.cpp
  DPCPPKernelAnalysis.cpp
  DPCPPPreprocessSPIRVFriendlyIR.cpp
  HandleVPlanMask.cpp
  ImplicitArgsAnalysis.cpp
  InternalizeNonKernelFunc.cpp
  LocalBufferAnalysis.cpp
  LocalBuffers.cpp
  LinearIdResolver.cpp
  DuplicateCalledKernelsPass.cpp
  PhiCanonicalization.cpp
  RedundantPhiNodePass.cpp
  GroupBuiltinPass.cpp
  SplitBBonBarrierPass.cpp
  KernelBarrierUtils.cpp
  WIRelatedValuePass.cpp
  DataPerBarrierPass.cpp
  DataPerValuePass.cpp
  BarrierPass.cpp
  BarrierInFunctionPass.cpp
  ResolveMatrixFill.cpp
  ResolveMatrixWISlice.cpp
  ResolveSubGroupWICall.cpp
  ResolveWICall.cpp
  SoaAllocaAnalysis.cpp
  SplitBBonBarrierPass.cpp
  WIRelatedValuePass.cpp
  PrepareKernelArgs.cpp
  CleanupWrappedKernel.cpp
  SetVectorizationFactor.cpp
  SubgroupEmulation/SGBarrierPropagate.cpp
  SubgroupEmulation/SGBarrierSimplify.cpp
  SubgroupEmulation/SGBuiltin.cpp
  SubgroupEmulation/SGFunctionWiden.cpp
  SubgroupEmulation/SGHelper.cpp
  SubgroupEmulation/SGLoopConstruct.cpp
  SubgroupEmulation/SGSizeAnalysis.cpp
  SubgroupEmulation/SGValueWiden.cpp
  TaskSeqAsyncHandling.cpp
  VectorVariant/CreateSimdVariantPropagation.cpp
  VectorVariant/IndirectCallLowering.cpp
  VectorVariant/SGSizeCollector.cpp
  VectorVariant/SGSizeCollectorIndirect.cpp
  VectorVariant/UpdateCallAttrs.cpp
  VectorVariant/VectorVariantFillIn.cpp
  VectorVariant/VectorVariantLowering.cpp
  VFAnalysis.cpp
  VectorizationDimensionAnalysis.cpp
  WGLoopBoundaries.cpp
  WorkItemAnalysis.cpp

  Utils/CPUDetect.cpp
  Utils/DPCPPStatistic.cpp
  Utils/FunctionDescriptor.cpp
  Utils/ImplicitArgsUtils.cpp
  Utils/LoopPeeling.cpp
  Utils/NameMangleAPI.cpp
  Utils/ParameterType.cpp
  Utils/RuntimeService.cpp
  Utils/TypeAlignment.cpp
  Utils/VectorizerUtils.cpp
  Utils/WGBoundDecoder.cpp

  ADDITIONAL_HEADER_DIRS
  ${LLVM_MAIN_INCLUDE_DIR}/llvm/Transforms/Intel_DPCPPKernelTransforms

  DEPENDS
  intrinsics_gen
  directives_gen

  LINK_COMPONENTS
  Analysis
  Core
  IRReader
  Linker
  Support
  TransformUtils
)

# FIXME: There is no corresponding argument in add_llvm_component_library with
# the same semantic as target_include_directories. It's not typical to include
# additional directories the way below. This require some redesign for headers
# layout. Community changes can break this.
target_include_directories(LLVMIntel_DPCPPKernelTransforms
  PRIVATE ${LLVM_MAIN_SRC_DIR}/lib/Transforms/Intel_DPCPPKernelTransforms/Utils)
