; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc < %s -mtriple=x86_64-unknown-linux-gnu -mcpu=skylake-avx512 | FileCheck %s

%struct.ST = type { i32, i32 }

; Make sure we don't use a displacement on the gather. The constant from the
; struct offset should be folded into the constant pool load for the vector
; add.
define <8 x i32> @test1(%struct.ST* %base, <8 x i64> %i1) {
; CHECK-LABEL: test1:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    vpsllq $3, %zmm0, %zmm0
; CHECK-NEXT:    vpbroadcastq %rdi, %zmm1
; CHECK-NEXT:    vpaddq %zmm1, %zmm0, %zmm0
; CHECK-NEXT:    vpaddq {{.*}}(%rip), %zmm0, %zmm1
; CHECK-NEXT:    kxnorw %k0, %k0, %k1
; CHECK-NEXT:    vpxor %xmm0, %xmm0, %xmm0
; CHECK-NEXT:    vpgatherqd (,%zmm1), %ymm0 {%k1}
; CHECK-NEXT:    retq
entry:
  %add = add <8 x i64> %i1, <i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7>
  %arrayidx = getelementptr  %struct.ST, %struct.ST* %base, <8 x i64> %add, i32 1
  %res = call <8 x i32> @llvm.masked.gather.v8i32.v8p0i32(<8 x i32*> %arrayidx, i32 4, <8 x i1> <i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true>, <8 x i32> undef)
  ret <8 x i32> %res
}
declare <8 x i32> @llvm.masked.gather.v8i32.v8p0i32(<8 x i32*>, i32, <8 x i1>, <8 x i32>)
