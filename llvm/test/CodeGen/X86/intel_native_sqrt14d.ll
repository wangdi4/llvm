; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc < %s -mtriple=x86_64-unknown-unknown -mcpu=skylake-avx512 --show-mc-encoding | FileCheck %s --check-prefix=X86-AVX512
; RUN: llc < %s -mtriple=x86_64-unknown-unknown -mcpu=skylake-avx512 -mattr=-fast-vector-fsqrt,-fast-scalar-fsqrt --show-mc-encoding | FileCheck %s --check-prefix=X86-AVX512-NO-FAST-SQRT

declare double @llvm.sqrt.f64(double)
declare <2 x double> @llvm.sqrt.v2f64(<2 x double>)
declare <4 x double> @llvm.sqrt.v4f64(<4 x double>)
declare <8 x double> @llvm.sqrt.v8f64(<8 x double>)

define double @test_native_rsqrt14_sd_recip(double %data) #0 {
; X86-AVX512-LABEL: test_native_rsqrt14_sd_recip:
; X86-AVX512:       # %bb.0:
; X86-AVX512-NEXT:    vsqrtsd %xmm0, %xmm0, %xmm0 # EVEX TO VEX Compression encoding: [0xc5,0xfb,0x51,0xc0]
; X86-AVX512-NEXT:    retq # encoding: [0xc3]
;
; X86-AVX512-NO-FAST-SQRT-LABEL: test_native_rsqrt14_sd_recip:
; X86-AVX512-NO-FAST-SQRT:       # %bb.0:
; X86-AVX512-NO-FAST-SQRT-NEXT:    vrsqrt14sd %xmm0, %xmm0, %xmm1 # encoding: [0x62,0xf2,0xfd,0x08,0x4f,0xc8]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmulsd %xmm1, %xmm0, %xmm1 # EVEX TO VEX Compression encoding: [0xc5,0xfb,0x59,0xc9]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vxorpd %xmm2, %xmm2, %xmm2 # EVEX TO VEX Compression encoding: [0xc5,0xe9,0x57,0xd2]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vandpd {{\.?LCPI[0-9]+_[0-9]+}}(%rip){1to2}, %xmm0, %xmm0 # encoding: [0x62,0xf1,0xfd,0x18,0x54,0x05,A,A,A,A]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-4, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    vcmpltsd {{\.?LCPI[0-9]+_[0-9]+}}(%rip), %xmm0, %k1 # encoding: [0x62,0xf1,0xff,0x08,0xc2,0x0d,A,A,A,A,0x01]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-5, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmovsd %xmm2, %xmm1, %xmm1 {%k1} # encoding: [0x62,0xf1,0xf7,0x09,0x10,0xca]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmovapd %xmm1, %xmm0 # EVEX TO VEX Compression encoding: [0xc5,0xf9,0x28,0xc1]
; X86-AVX512-NO-FAST-SQRT-NEXT:    retq # encoding: [0xc3]
  %sqrt = tail call fast double @llvm.sqrt.f64(double %data)
  ret double %sqrt
}

define <2 x double> @test_native_rsqrt14_pd_128_recip(<2 x double> %data) #0 {
; X86-AVX512-LABEL: test_native_rsqrt14_pd_128_recip:
; X86-AVX512:       # %bb.0:
; X86-AVX512-NEXT:    vsqrtpd %xmm0, %xmm0 # EVEX TO VEX Compression encoding: [0xc5,0xf9,0x51,0xc0]
; X86-AVX512-NEXT:    retq # encoding: [0xc3]
;
; X86-AVX512-NO-FAST-SQRT-LABEL: test_native_rsqrt14_pd_128_recip:
; X86-AVX512-NO-FAST-SQRT:       # %bb.0:
; X86-AVX512-NO-FAST-SQRT-NEXT:    vrsqrt14pd %xmm0, %xmm1 # encoding: [0x62,0xf2,0xfd,0x08,0x4e,0xc8]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vandpd {{\.?LCPI[0-9]+_[0-9]+}}(%rip){1to2}, %xmm0, %xmm2 # encoding: [0x62,0xf1,0xfd,0x18,0x54,0x15,A,A,A,A]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-4, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    vcmpgepd {{\.?LCPI[0-9]+_[0-9]+}}(%rip){1to2}, %xmm2, %k1 # encoding: [0x62,0xf1,0xed,0x18,0xc2,0x0d,A,A,A,A,0x0d]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-5, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmulpd %xmm1, %xmm0, %xmm0 {%k1} {z} # encoding: [0x62,0xf1,0xfd,0x89,0x59,0xc1]
; X86-AVX512-NO-FAST-SQRT-NEXT:    retq # encoding: [0xc3]
  %sqrt = tail call fast <2 x double> @llvm.sqrt.v2f64(<2 x double> %data)
  ret <2 x double> %sqrt
}

define <4 x double> @test_native_rsqrt14_pd_256_recip(<4 x double> %data) #0 {
; X86-AVX512-LABEL: test_native_rsqrt14_pd_256_recip:
; X86-AVX512:       # %bb.0:
; X86-AVX512-NEXT:    vsqrtpd %ymm0, %ymm0 # EVEX TO VEX Compression encoding: [0xc5,0xfd,0x51,0xc0]
; X86-AVX512-NEXT:    retq # encoding: [0xc3]
;
; X86-AVX512-NO-FAST-SQRT-LABEL: test_native_rsqrt14_pd_256_recip:
; X86-AVX512-NO-FAST-SQRT:       # %bb.0:
; X86-AVX512-NO-FAST-SQRT-NEXT:    vrsqrt14pd %ymm0, %ymm1 # encoding: [0x62,0xf2,0xfd,0x28,0x4e,0xc8]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vandpd {{\.?LCPI[0-9]+_[0-9]+}}(%rip){1to4}, %ymm0, %ymm2 # encoding: [0x62,0xf1,0xfd,0x38,0x54,0x15,A,A,A,A]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-4, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    vcmpgepd {{\.?LCPI[0-9]+_[0-9]+}}(%rip){1to4}, %ymm2, %k1 # encoding: [0x62,0xf1,0xed,0x38,0xc2,0x0d,A,A,A,A,0x0d]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-5, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmulpd %ymm1, %ymm0, %ymm0 {%k1} {z} # encoding: [0x62,0xf1,0xfd,0xa9,0x59,0xc1]
; X86-AVX512-NO-FAST-SQRT-NEXT:    retq # encoding: [0xc3]
  %sqrt = tail call fast <4 x double> @llvm.sqrt.v4f64(<4 x double> %data)
  ret <4 x double> %sqrt
}

define <8 x double> @test_native_rsqrt14_pd_512_recip(<8 x double> %data) #0 {
; X86-AVX512-LABEL: test_native_rsqrt14_pd_512_recip:
; X86-AVX512:       # %bb.0:
; X86-AVX512-NEXT:    vsqrtpd %zmm0, %zmm0 # encoding: [0x62,0xf1,0xfd,0x48,0x51,0xc0]
; X86-AVX512-NEXT:    retq # encoding: [0xc3]
;
; X86-AVX512-NO-FAST-SQRT-LABEL: test_native_rsqrt14_pd_512_recip:
; X86-AVX512-NO-FAST-SQRT:       # %bb.0:
; X86-AVX512-NO-FAST-SQRT-NEXT:    vrsqrt14pd %zmm0, %zmm1 # encoding: [0x62,0xf2,0xfd,0x48,0x4e,0xc8]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vandpd {{\.?LCPI[0-9]+_[0-9]+}}(%rip){1to8}, %zmm0, %zmm2 # encoding: [0x62,0xf1,0xfd,0x58,0x54,0x15,A,A,A,A]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-4, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    vcmpgepd {{\.?LCPI[0-9]+_[0-9]+}}(%rip){1to8}, %zmm2, %k1 # encoding: [0x62,0xf1,0xed,0x58,0xc2,0x0d,A,A,A,A,0x0d]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-5, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmulpd %zmm1, %zmm0, %zmm0 {%k1} {z} # encoding: [0x62,0xf1,0xfd,0xc9,0x59,0xc1]
; X86-AVX512-NO-FAST-SQRT-NEXT:    retq # encoding: [0xc3]
  %sqrt = tail call fast <8 x double> @llvm.sqrt.v8f64(<8 x double> %data)
  ret <8 x double> %sqrt
}

define double @test_native_rsqrt14_sd_imf_acc_bt14(double %data) #1 {
; X86-AVX512-LABEL: test_native_rsqrt14_sd_imf_acc_bt14:
; X86-AVX512:       # %bb.0:
; X86-AVX512-NEXT:    vsqrtsd %xmm0, %xmm0, %xmm0 # EVEX TO VEX Compression encoding: [0xc5,0xfb,0x51,0xc0]
; X86-AVX512-NEXT:    retq # encoding: [0xc3]
;
; X86-AVX512-NO-FAST-SQRT-LABEL: test_native_rsqrt14_sd_imf_acc_bt14:
; X86-AVX512-NO-FAST-SQRT:       # %bb.0:
; X86-AVX512-NO-FAST-SQRT-NEXT:    vrsqrt14sd %xmm0, %xmm0, %xmm1 # encoding: [0x62,0xf2,0xfd,0x08,0x4f,0xc8]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmulsd %xmm1, %xmm0, %xmm1 # EVEX TO VEX Compression encoding: [0xc5,0xfb,0x59,0xc9]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vxorpd %xmm2, %xmm2, %xmm2 # EVEX TO VEX Compression encoding: [0xc5,0xe9,0x57,0xd2]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vandpd {{\.?LCPI[0-9]+_[0-9]+}}(%rip){1to2}, %xmm0, %xmm0 # encoding: [0x62,0xf1,0xfd,0x18,0x54,0x05,A,A,A,A]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-4, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    vcmpltsd {{\.?LCPI[0-9]+_[0-9]+}}(%rip), %xmm0, %k1 # encoding: [0x62,0xf1,0xff,0x08,0xc2,0x0d,A,A,A,A,0x01]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-5, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmovsd %xmm2, %xmm1, %xmm1 {%k1} # encoding: [0x62,0xf1,0xf7,0x09,0x10,0xca]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmovapd %xmm1, %xmm0 # EVEX TO VEX Compression encoding: [0xc5,0xf9,0x28,0xc1]
; X86-AVX512-NO-FAST-SQRT-NEXT:    retq # encoding: [0xc3]
  %sqrt = tail call fast double @llvm.sqrt.f64(double %data)
  ret double %sqrt
}

define <2 x double> @test_native_rsqrt14_pd_128_imf_acc_bt14(<2 x double> %data) #1 {
; X86-AVX512-LABEL: test_native_rsqrt14_pd_128_imf_acc_bt14:
; X86-AVX512:       # %bb.0:
; X86-AVX512-NEXT:    vsqrtpd %xmm0, %xmm0 # EVEX TO VEX Compression encoding: [0xc5,0xf9,0x51,0xc0]
; X86-AVX512-NEXT:    retq # encoding: [0xc3]
;
; X86-AVX512-NO-FAST-SQRT-LABEL: test_native_rsqrt14_pd_128_imf_acc_bt14:
; X86-AVX512-NO-FAST-SQRT:       # %bb.0:
; X86-AVX512-NO-FAST-SQRT-NEXT:    vrsqrt14pd %xmm0, %xmm1 # encoding: [0x62,0xf2,0xfd,0x08,0x4e,0xc8]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vandpd {{\.?LCPI[0-9]+_[0-9]+}}(%rip){1to2}, %xmm0, %xmm2 # encoding: [0x62,0xf1,0xfd,0x18,0x54,0x15,A,A,A,A]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-4, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    vcmpgepd {{\.?LCPI[0-9]+_[0-9]+}}(%rip){1to2}, %xmm2, %k1 # encoding: [0x62,0xf1,0xed,0x18,0xc2,0x0d,A,A,A,A,0x0d]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-5, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmulpd %xmm1, %xmm0, %xmm0 {%k1} {z} # encoding: [0x62,0xf1,0xfd,0x89,0x59,0xc1]
; X86-AVX512-NO-FAST-SQRT-NEXT:    retq # encoding: [0xc3]
  %sqrt = tail call fast <2 x double> @llvm.sqrt.v2f64(<2 x double> %data)
  ret <2 x double> %sqrt
}

define <4 x double> @test_native_rsqrt14_pd_256_imf_acc_bt14(<4 x double> %data) #1 {
; X86-AVX512-LABEL: test_native_rsqrt14_pd_256_imf_acc_bt14:
; X86-AVX512:       # %bb.0:
; X86-AVX512-NEXT:    vsqrtpd %ymm0, %ymm0 # EVEX TO VEX Compression encoding: [0xc5,0xfd,0x51,0xc0]
; X86-AVX512-NEXT:    retq # encoding: [0xc3]
;
; X86-AVX512-NO-FAST-SQRT-LABEL: test_native_rsqrt14_pd_256_imf_acc_bt14:
; X86-AVX512-NO-FAST-SQRT:       # %bb.0:
; X86-AVX512-NO-FAST-SQRT-NEXT:    vrsqrt14pd %ymm0, %ymm1 # encoding: [0x62,0xf2,0xfd,0x28,0x4e,0xc8]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vandpd {{\.?LCPI[0-9]+_[0-9]+}}(%rip){1to4}, %ymm0, %ymm2 # encoding: [0x62,0xf1,0xfd,0x38,0x54,0x15,A,A,A,A]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-4, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    vcmpgepd {{\.?LCPI[0-9]+_[0-9]+}}(%rip){1to4}, %ymm2, %k1 # encoding: [0x62,0xf1,0xed,0x38,0xc2,0x0d,A,A,A,A,0x0d]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-5, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmulpd %ymm1, %ymm0, %ymm0 {%k1} {z} # encoding: [0x62,0xf1,0xfd,0xa9,0x59,0xc1]
; X86-AVX512-NO-FAST-SQRT-NEXT:    retq # encoding: [0xc3]
  %sqrt = tail call fast <4 x double> @llvm.sqrt.v4f64(<4 x double> %data)
  ret <4 x double> %sqrt
}

define <8 x double> @test_native_rsqrt14_pd_512_imf_acc_bt14(<8 x double> %data) #1 {
; X86-AVX512-LABEL: test_native_rsqrt14_pd_512_imf_acc_bt14:
; X86-AVX512:       # %bb.0:
; X86-AVX512-NEXT:    vsqrtpd %zmm0, %zmm0 # encoding: [0x62,0xf1,0xfd,0x48,0x51,0xc0]
; X86-AVX512-NEXT:    retq # encoding: [0xc3]
;
; X86-AVX512-NO-FAST-SQRT-LABEL: test_native_rsqrt14_pd_512_imf_acc_bt14:
; X86-AVX512-NO-FAST-SQRT:       # %bb.0:
; X86-AVX512-NO-FAST-SQRT-NEXT:    vrsqrt14pd %zmm0, %zmm1 # encoding: [0x62,0xf2,0xfd,0x48,0x4e,0xc8]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vandpd {{\.?LCPI[0-9]+_[0-9]+}}(%rip){1to8}, %zmm0, %zmm2 # encoding: [0x62,0xf1,0xfd,0x58,0x54,0x15,A,A,A,A]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-4, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    vcmpgepd {{\.?LCPI[0-9]+_[0-9]+}}(%rip){1to8}, %zmm2, %k1 # encoding: [0x62,0xf1,0xed,0x58,0xc2,0x0d,A,A,A,A,0x0d]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-5, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmulpd %zmm1, %zmm0, %zmm0 {%k1} {z} # encoding: [0x62,0xf1,0xfd,0xc9,0x59,0xc1]
; X86-AVX512-NO-FAST-SQRT-NEXT:    retq # encoding: [0xc3]
  %sqrt = tail call fast <8 x double> @llvm.sqrt.v8f64(<8 x double> %data)
  ret <8 x double> %sqrt
}

define double @test_native_rsqrt14_sd_imf_acc_bt26(double %data) #2 {
; X86-AVX512-LABEL: test_native_rsqrt14_sd_imf_acc_bt26:
; X86-AVX512:       # %bb.0:
; X86-AVX512-NEXT:    vsqrtsd %xmm0, %xmm0, %xmm0 # EVEX TO VEX Compression encoding: [0xc5,0xfb,0x51,0xc0]
; X86-AVX512-NEXT:    retq # encoding: [0xc3]
;
; X86-AVX512-NO-FAST-SQRT-LABEL: test_native_rsqrt14_sd_imf_acc_bt26:
; X86-AVX512-NO-FAST-SQRT:       # %bb.0:
; X86-AVX512-NO-FAST-SQRT-NEXT:    vrsqrt14sd %xmm0, %xmm0, %xmm1 # encoding: [0x62,0xf2,0xfd,0x08,0x4f,0xc8]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmulsd %xmm1, %xmm0, %xmm2 # EVEX TO VEX Compression encoding: [0xc5,0xfb,0x59,0xd1]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmovsd {{\.?LCPI[0-9]+_[0-9]+}}(%rip), %xmm3 # EVEX TO VEX Compression encoding: [0xc5,0xfb,0x10,0x1d,A,A,A,A]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 4, value: {{\.?LCPI[0-9]+_[0-9]+}}-4, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    # xmm3 = mem[0],zero
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmulsd %xmm3, %xmm1, %xmm4 # EVEX TO VEX Compression encoding: [0xc5,0xf3,0x59,0xe3]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vfnmadd213sd %xmm3, %xmm2, %xmm4 # EVEX TO VEX Compression encoding: [0xc4,0xe2,0xe9,0xad,0xe3]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # xmm4 = -(xmm2 * xmm4) + xmm3
; X86-AVX512-NO-FAST-SQRT-NEXT:    vfmadd132sd %xmm1, %xmm1, %xmm4 # EVEX TO VEX Compression encoding: [0xc4,0xe2,0xf1,0x99,0xe1]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # xmm4 = (xmm4 * xmm1) + xmm1
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmulsd %xmm4, %xmm0, %xmm1 # EVEX TO VEX Compression encoding: [0xc5,0xfb,0x59,0xcc]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vxorpd %xmm2, %xmm2, %xmm2 # EVEX TO VEX Compression encoding: [0xc5,0xe9,0x57,0xd2]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vandpd {{\.?LCPI[0-9]+_[0-9]+}}(%rip){1to2}, %xmm0, %xmm0 # encoding: [0x62,0xf1,0xfd,0x18,0x54,0x05,A,A,A,A]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-4, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    vcmpltsd {{\.?LCPI[0-9]+_[0-9]+}}(%rip), %xmm0, %k1 # encoding: [0x62,0xf1,0xff,0x08,0xc2,0x0d,A,A,A,A,0x01]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-5, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmovsd %xmm2, %xmm1, %xmm1 {%k1} # encoding: [0x62,0xf1,0xf7,0x09,0x10,0xca]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmovapd %xmm1, %xmm0 # EVEX TO VEX Compression encoding: [0xc5,0xf9,0x28,0xc1]
; X86-AVX512-NO-FAST-SQRT-NEXT:    retq # encoding: [0xc3]
  %sqrt = tail call fast double @llvm.sqrt.f64(double %data)
  ret double %sqrt
}

define <2 x double> @test_native_rsqrt14_pd_128_imf_acc_bt26(<2 x double> %data) #2 {
; X86-AVX512-LABEL: test_native_rsqrt14_pd_128_imf_acc_bt26:
; X86-AVX512:       # %bb.0:
; X86-AVX512-NEXT:    vsqrtpd %xmm0, %xmm0 # EVEX TO VEX Compression encoding: [0xc5,0xf9,0x51,0xc0]
; X86-AVX512-NEXT:    retq # encoding: [0xc3]
;
; X86-AVX512-NO-FAST-SQRT-LABEL: test_native_rsqrt14_pd_128_imf_acc_bt26:
; X86-AVX512-NO-FAST-SQRT:       # %bb.0:
; X86-AVX512-NO-FAST-SQRT-NEXT:    vrsqrt14pd %xmm0, %xmm1 # encoding: [0x62,0xf2,0xfd,0x08,0x4e,0xc8]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmulpd %xmm1, %xmm0, %xmm2 # EVEX TO VEX Compression encoding: [0xc5,0xf9,0x59,0xd1]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmovddup {{\.?LCPI[0-9]+_[0-9]+}}(%rip), %xmm3 # EVEX TO VEX Compression xmm3 = [5.0E-1,5.0E-1]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # encoding: [0xc5,0xfb,0x12,0x1d,A,A,A,A]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 4, value: {{\.?LCPI[0-9]+_[0-9]+}}-4, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    # xmm3 = mem[0,0]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmulpd %xmm3, %xmm1, %xmm4 # EVEX TO VEX Compression encoding: [0xc5,0xf1,0x59,0xe3]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vfnmadd213pd %xmm3, %xmm2, %xmm4 # EVEX TO VEX Compression encoding: [0xc4,0xe2,0xe9,0xac,0xe3]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # xmm4 = -(xmm2 * xmm4) + xmm3
; X86-AVX512-NO-FAST-SQRT-NEXT:    vfmadd132pd %xmm1, %xmm1, %xmm4 # EVEX TO VEX Compression encoding: [0xc4,0xe2,0xf1,0x98,0xe1]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # xmm4 = (xmm4 * xmm1) + xmm1
; X86-AVX512-NO-FAST-SQRT-NEXT:    vandpd {{\.?LCPI[0-9]+_[0-9]+}}(%rip){1to2}, %xmm0, %xmm1 # encoding: [0x62,0xf1,0xfd,0x18,0x54,0x0d,A,A,A,A]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-4, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    vcmpgepd {{\.?LCPI[0-9]+_[0-9]+}}(%rip){1to2}, %xmm1, %k1 # encoding: [0x62,0xf1,0xf5,0x18,0xc2,0x0d,A,A,A,A,0x0d]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-5, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmulpd %xmm4, %xmm0, %xmm0 {%k1} {z} # encoding: [0x62,0xf1,0xfd,0x89,0x59,0xc4]
; X86-AVX512-NO-FAST-SQRT-NEXT:    retq # encoding: [0xc3]
  %sqrt = tail call fast <2 x double> @llvm.sqrt.v2f64(<2 x double> %data)
  ret <2 x double> %sqrt
}

define <4 x double> @test_native_rsqrt14_pd_256_imf_acc_bt26(<4 x double> %data) #2 {
; X86-AVX512-LABEL: test_native_rsqrt14_pd_256_imf_acc_bt26:
; X86-AVX512:       # %bb.0:
; X86-AVX512-NEXT:    vsqrtpd %ymm0, %ymm0 # EVEX TO VEX Compression encoding: [0xc5,0xfd,0x51,0xc0]
; X86-AVX512-NEXT:    retq # encoding: [0xc3]
;
; X86-AVX512-NO-FAST-SQRT-LABEL: test_native_rsqrt14_pd_256_imf_acc_bt26:
; X86-AVX512-NO-FAST-SQRT:       # %bb.0:
; X86-AVX512-NO-FAST-SQRT-NEXT:    vrsqrt14pd %ymm0, %ymm1 # encoding: [0x62,0xf2,0xfd,0x28,0x4e,0xc8]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmulpd %ymm1, %ymm0, %ymm2 # EVEX TO VEX Compression encoding: [0xc5,0xfd,0x59,0xd1]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vbroadcastsd {{\.?LCPI[0-9]+_[0-9]+}}(%rip), %ymm3 # EVEX TO VEX Compression ymm3 = [5.0E-1,5.0E-1,5.0E-1,5.0E-1]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # encoding: [0xc4,0xe2,0x7d,0x19,0x1d,A,A,A,A]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 5, value: {{\.?LCPI[0-9]+_[0-9]+}}-4, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmulpd %ymm3, %ymm1, %ymm4 # EVEX TO VEX Compression encoding: [0xc5,0xf5,0x59,0xe3]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vfnmadd213pd %ymm3, %ymm2, %ymm4 # EVEX TO VEX Compression encoding: [0xc4,0xe2,0xed,0xac,0xe3]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # ymm4 = -(ymm2 * ymm4) + ymm3
; X86-AVX512-NO-FAST-SQRT-NEXT:    vfmadd132pd %ymm1, %ymm1, %ymm4 # EVEX TO VEX Compression encoding: [0xc4,0xe2,0xf5,0x98,0xe1]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # ymm4 = (ymm4 * ymm1) + ymm1
; X86-AVX512-NO-FAST-SQRT-NEXT:    vandpd {{\.?LCPI[0-9]+_[0-9]+}}(%rip){1to4}, %ymm0, %ymm1 # encoding: [0x62,0xf1,0xfd,0x38,0x54,0x0d,A,A,A,A]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-4, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    vcmpgepd {{\.?LCPI[0-9]+_[0-9]+}}(%rip){1to4}, %ymm1, %k1 # encoding: [0x62,0xf1,0xf5,0x38,0xc2,0x0d,A,A,A,A,0x0d]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-5, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmulpd %ymm4, %ymm0, %ymm0 {%k1} {z} # encoding: [0x62,0xf1,0xfd,0xa9,0x59,0xc4]
; X86-AVX512-NO-FAST-SQRT-NEXT:    retq # encoding: [0xc3]
  %sqrt = tail call fast <4 x double> @llvm.sqrt.v4f64(<4 x double> %data)
  ret <4 x double> %sqrt
}

define <8 x double> @test_native_rsqrt14_pd_512_imf_acc_bt26(<8 x double> %data) #2 {
; X86-AVX512-LABEL: test_native_rsqrt14_pd_512_imf_acc_bt26:
; X86-AVX512:       # %bb.0:
; X86-AVX512-NEXT:    vsqrtpd %zmm0, %zmm0 # encoding: [0x62,0xf1,0xfd,0x48,0x51,0xc0]
; X86-AVX512-NEXT:    retq # encoding: [0xc3]
;
; X86-AVX512-NO-FAST-SQRT-LABEL: test_native_rsqrt14_pd_512_imf_acc_bt26:
; X86-AVX512-NO-FAST-SQRT:       # %bb.0:
; X86-AVX512-NO-FAST-SQRT-NEXT:    vrsqrt14pd %zmm0, %zmm1 # encoding: [0x62,0xf2,0xfd,0x48,0x4e,0xc8]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmulpd %zmm1, %zmm0, %zmm2 # encoding: [0x62,0xf1,0xfd,0x48,0x59,0xd1]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vbroadcastsd {{.*#+}} zmm3 = [5.0E-1,5.0E-1,5.0E-1,5.0E-1,5.0E-1,5.0E-1,5.0E-1,5.0E-1]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # encoding: [0x62,0xf2,0xfd,0x48,0x19,0x1d,A,A,A,A]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-4, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmulpd %zmm3, %zmm1, %zmm4 # encoding: [0x62,0xf1,0xf5,0x48,0x59,0xe3]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vfnmadd213pd %zmm3, %zmm2, %zmm4 # encoding: [0x62,0xf2,0xed,0x48,0xac,0xe3]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # zmm4 = -(zmm2 * zmm4) + zmm3
; X86-AVX512-NO-FAST-SQRT-NEXT:    vfmadd132pd %zmm1, %zmm1, %zmm4 # encoding: [0x62,0xf2,0xf5,0x48,0x98,0xe1]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # zmm4 = (zmm4 * zmm1) + zmm1
; X86-AVX512-NO-FAST-SQRT-NEXT:    vandpd {{\.?LCPI[0-9]+_[0-9]+}}(%rip){1to8}, %zmm0, %zmm1 # encoding: [0x62,0xf1,0xfd,0x58,0x54,0x0d,A,A,A,A]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-4, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    vcmpgepd {{\.?LCPI[0-9]+_[0-9]+}}(%rip){1to8}, %zmm1, %k1 # encoding: [0x62,0xf1,0xf5,0x58,0xc2,0x0d,A,A,A,A,0x0d]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-5, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmulpd %zmm4, %zmm0, %zmm0 {%k1} {z} # encoding: [0x62,0xf1,0xfd,0xc9,0x59,0xc4]
; X86-AVX512-NO-FAST-SQRT-NEXT:    retq # encoding: [0xc3]
  %sqrt = tail call fast <8 x double> @llvm.sqrt.v8f64(<8 x double> %data)
  ret <8 x double> %sqrt
}

define double @test_native_rsqrt14_sd_imf_acc_bt50(double %data) #3 {
; X86-AVX512-LABEL: test_native_rsqrt14_sd_imf_acc_bt50:
; X86-AVX512:       # %bb.0:
; X86-AVX512-NEXT:    vsqrtsd %xmm0, %xmm0, %xmm0 # EVEX TO VEX Compression encoding: [0xc5,0xfb,0x51,0xc0]
; X86-AVX512-NEXT:    retq # encoding: [0xc3]
;
; X86-AVX512-NO-FAST-SQRT-LABEL: test_native_rsqrt14_sd_imf_acc_bt50:
; X86-AVX512-NO-FAST-SQRT:       # %bb.0:
; X86-AVX512-NO-FAST-SQRT-NEXT:    vrsqrt14sd %xmm0, %xmm0, %xmm1 # encoding: [0x62,0xf2,0xfd,0x08,0x4f,0xc8]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmulsd %xmm1, %xmm0, %xmm2 # EVEX TO VEX Compression encoding: [0xc5,0xfb,0x59,0xd1]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vfnmadd213sd {{\.?LCPI[0-9]+_[0-9]+}}(%rip), %xmm1, %xmm2 # EVEX TO VEX Compression encoding: [0xc4,0xe2,0xf1,0xad,0x15,A,A,A,A]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 5, value: {{\.?LCPI[0-9]+_[0-9]+}}-4, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    # xmm2 = -(xmm1 * xmm2) + mem
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmovsd {{\.?LCPI[0-9]+_[0-9]+}}(%rip), %xmm3 # EVEX TO VEX Compression encoding: [0xc5,0xfb,0x10,0x1d,A,A,A,A]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 4, value: {{\.?LCPI[0-9]+_[0-9]+}}-4, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    # xmm3 = mem[0],zero
; X86-AVX512-NO-FAST-SQRT-NEXT:    vfmadd213sd {{\.?LCPI[0-9]+_[0-9]+}}(%rip), %xmm2, %xmm3 # EVEX TO VEX Compression encoding: [0xc4,0xe2,0xe9,0xa9,0x1d,A,A,A,A]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 5, value: {{\.?LCPI[0-9]+_[0-9]+}}-4, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    # xmm3 = (xmm2 * xmm3) + mem
; X86-AVX512-NO-FAST-SQRT-NEXT:    vfmadd213sd {{\.?LCPI[0-9]+_[0-9]+}}(%rip), %xmm2, %xmm3 # EVEX TO VEX Compression encoding: [0xc4,0xe2,0xe9,0xa9,0x1d,A,A,A,A]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 5, value: {{\.?LCPI[0-9]+_[0-9]+}}-4, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    # xmm3 = (xmm2 * xmm3) + mem
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmulsd %xmm1, %xmm2, %xmm2 # EVEX TO VEX Compression encoding: [0xc5,0xeb,0x59,0xd1]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vfmadd213sd %xmm1, %xmm3, %xmm2 # EVEX TO VEX Compression encoding: [0xc4,0xe2,0xe1,0xa9,0xd1]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # xmm2 = (xmm3 * xmm2) + xmm1
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmulsd %xmm2, %xmm0, %xmm1 # EVEX TO VEX Compression encoding: [0xc5,0xfb,0x59,0xca]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vxorpd %xmm2, %xmm2, %xmm2 # EVEX TO VEX Compression encoding: [0xc5,0xe9,0x57,0xd2]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vandpd {{\.?LCPI[0-9]+_[0-9]+}}(%rip){1to2}, %xmm0, %xmm0 # encoding: [0x62,0xf1,0xfd,0x18,0x54,0x05,A,A,A,A]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-4, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    vcmpltsd {{\.?LCPI[0-9]+_[0-9]+}}(%rip), %xmm0, %k1 # encoding: [0x62,0xf1,0xff,0x08,0xc2,0x0d,A,A,A,A,0x01]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-5, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmovsd %xmm2, %xmm1, %xmm1 {%k1} # encoding: [0x62,0xf1,0xf7,0x09,0x10,0xca]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmovapd %xmm1, %xmm0 # EVEX TO VEX Compression encoding: [0xc5,0xf9,0x28,0xc1]
; X86-AVX512-NO-FAST-SQRT-NEXT:    retq # encoding: [0xc3]
  %sqrt = tail call fast double @llvm.sqrt.f64(double %data)
  ret double %sqrt
}

define <2 x double> @test_native_rsqrt14_pd_128_imf_acc_bt50(<2 x double> %data) #3 {
; X86-AVX512-LABEL: test_native_rsqrt14_pd_128_imf_acc_bt50:
; X86-AVX512:       # %bb.0:
; X86-AVX512-NEXT:    vsqrtpd %xmm0, %xmm0 # EVEX TO VEX Compression encoding: [0xc5,0xf9,0x51,0xc0]
; X86-AVX512-NEXT:    retq # encoding: [0xc3]
;
; X86-AVX512-NO-FAST-SQRT-LABEL: test_native_rsqrt14_pd_128_imf_acc_bt50:
; X86-AVX512-NO-FAST-SQRT:       # %bb.0:
; X86-AVX512-NO-FAST-SQRT-NEXT:    vrsqrt14pd %xmm0, %xmm1 # encoding: [0x62,0xf2,0xfd,0x08,0x4e,0xc8]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmulpd %xmm1, %xmm0, %xmm2 # EVEX TO VEX Compression encoding: [0xc5,0xf9,0x59,0xd1]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vfnmadd213pd {{\.?LCPI[0-9]+_[0-9]+}}(%rip){1to2}, %xmm1, %xmm2 # encoding: [0x62,0xf2,0xf5,0x18,0xac,0x15,A,A,A,A]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-4, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    # xmm2 = -(xmm1 * xmm2) + mem
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmovddup {{\.?LCPI[0-9]+_[0-9]+}}(%rip), %xmm3 # EVEX TO VEX Compression xmm3 = [3.1250000550062401E-1,3.1250000550062401E-1]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # encoding: [0xc5,0xfb,0x12,0x1d,A,A,A,A]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 4, value: {{\.?LCPI[0-9]+_[0-9]+}}-4, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    # xmm3 = mem[0,0]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vfmadd213pd {{\.?LCPI[0-9]+_[0-9]+}}(%rip){1to2}, %xmm2, %xmm3 # encoding: [0x62,0xf2,0xed,0x18,0xa8,0x1d,A,A,A,A]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-4, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    # xmm3 = (xmm2 * xmm3) + mem
; X86-AVX512-NO-FAST-SQRT-NEXT:    vfmadd213pd {{\.?LCPI[0-9]+_[0-9]+}}(%rip){1to2}, %xmm2, %xmm3 # encoding: [0x62,0xf2,0xed,0x18,0xa8,0x1d,A,A,A,A]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-4, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    # xmm3 = (xmm2 * xmm3) + mem
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmulpd %xmm1, %xmm2, %xmm2 # EVEX TO VEX Compression encoding: [0xc5,0xe9,0x59,0xd1]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vfmadd213pd %xmm1, %xmm3, %xmm2 # EVEX TO VEX Compression encoding: [0xc4,0xe2,0xe1,0xa8,0xd1]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # xmm2 = (xmm3 * xmm2) + xmm1
; X86-AVX512-NO-FAST-SQRT-NEXT:    vandpd {{\.?LCPI[0-9]+_[0-9]+}}(%rip){1to2}, %xmm0, %xmm1 # encoding: [0x62,0xf1,0xfd,0x18,0x54,0x0d,A,A,A,A]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-4, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    vcmpgepd {{\.?LCPI[0-9]+_[0-9]+}}(%rip){1to2}, %xmm1, %k1 # encoding: [0x62,0xf1,0xf5,0x18,0xc2,0x0d,A,A,A,A,0x0d]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-5, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmulpd %xmm2, %xmm0, %xmm0 {%k1} {z} # encoding: [0x62,0xf1,0xfd,0x89,0x59,0xc2]
; X86-AVX512-NO-FAST-SQRT-NEXT:    retq # encoding: [0xc3]
  %sqrt = tail call fast <2 x double> @llvm.sqrt.v2f64(<2 x double> %data)
  ret <2 x double> %sqrt
}

define <4 x double> @test_native_rsqrt14_pd_256_imf_acc_bt50(<4 x double> %data) #3 {
; X86-AVX512-LABEL: test_native_rsqrt14_pd_256_imf_acc_bt50:
; X86-AVX512:       # %bb.0:
; X86-AVX512-NEXT:    vsqrtpd %ymm0, %ymm0 # EVEX TO VEX Compression encoding: [0xc5,0xfd,0x51,0xc0]
; X86-AVX512-NEXT:    retq # encoding: [0xc3]
;
; X86-AVX512-NO-FAST-SQRT-LABEL: test_native_rsqrt14_pd_256_imf_acc_bt50:
; X86-AVX512-NO-FAST-SQRT:       # %bb.0:
; X86-AVX512-NO-FAST-SQRT-NEXT:    vrsqrt14pd %ymm0, %ymm1 # encoding: [0x62,0xf2,0xfd,0x28,0x4e,0xc8]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmulpd %ymm1, %ymm0, %ymm2 # EVEX TO VEX Compression encoding: [0xc5,0xfd,0x59,0xd1]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vfnmadd213pd {{\.?LCPI[0-9]+_[0-9]+}}(%rip){1to4}, %ymm1, %ymm2 # encoding: [0x62,0xf2,0xf5,0x38,0xac,0x15,A,A,A,A]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-4, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    # ymm2 = -(ymm1 * ymm2) + mem
; X86-AVX512-NO-FAST-SQRT-NEXT:    vbroadcastsd {{\.?LCPI[0-9]+_[0-9]+}}(%rip), %ymm3 # EVEX TO VEX Compression ymm3 = [3.1250000550062401E-1,3.1250000550062401E-1,3.1250000550062401E-1,3.1250000550062401E-1]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # encoding: [0xc4,0xe2,0x7d,0x19,0x1d,A,A,A,A]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 5, value: {{\.?LCPI[0-9]+_[0-9]+}}-4, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    vfmadd213pd {{\.?LCPI[0-9]+_[0-9]+}}(%rip){1to4}, %ymm2, %ymm3 # encoding: [0x62,0xf2,0xed,0x38,0xa8,0x1d,A,A,A,A]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-4, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    # ymm3 = (ymm2 * ymm3) + mem
; X86-AVX512-NO-FAST-SQRT-NEXT:    vfmadd213pd {{\.?LCPI[0-9]+_[0-9]+}}(%rip){1to4}, %ymm2, %ymm3 # encoding: [0x62,0xf2,0xed,0x38,0xa8,0x1d,A,A,A,A]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-4, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    # ymm3 = (ymm2 * ymm3) + mem
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmulpd %ymm1, %ymm2, %ymm2 # EVEX TO VEX Compression encoding: [0xc5,0xed,0x59,0xd1]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vfmadd213pd %ymm1, %ymm3, %ymm2 # EVEX TO VEX Compression encoding: [0xc4,0xe2,0xe5,0xa8,0xd1]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # ymm2 = (ymm3 * ymm2) + ymm1
; X86-AVX512-NO-FAST-SQRT-NEXT:    vandpd {{\.?LCPI[0-9]+_[0-9]+}}(%rip){1to4}, %ymm0, %ymm1 # encoding: [0x62,0xf1,0xfd,0x38,0x54,0x0d,A,A,A,A]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-4, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    vcmpgepd {{\.?LCPI[0-9]+_[0-9]+}}(%rip){1to4}, %ymm1, %k1 # encoding: [0x62,0xf1,0xf5,0x38,0xc2,0x0d,A,A,A,A,0x0d]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-5, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmulpd %ymm2, %ymm0, %ymm0 {%k1} {z} # encoding: [0x62,0xf1,0xfd,0xa9,0x59,0xc2]
; X86-AVX512-NO-FAST-SQRT-NEXT:    retq # encoding: [0xc3]
  %sqrt = tail call fast <4 x double> @llvm.sqrt.v4f64(<4 x double> %data)
  ret <4 x double> %sqrt
}

define <8 x double> @test_native_rsqrt14_pd_512_imf_acc_bt50(<8 x double> %data) #3 {
; X86-AVX512-LABEL: test_native_rsqrt14_pd_512_imf_acc_bt50:
; X86-AVX512:       # %bb.0:
; X86-AVX512-NEXT:    vsqrtpd %zmm0, %zmm0 # encoding: [0x62,0xf1,0xfd,0x48,0x51,0xc0]
; X86-AVX512-NEXT:    retq # encoding: [0xc3]
;
; X86-AVX512-NO-FAST-SQRT-LABEL: test_native_rsqrt14_pd_512_imf_acc_bt50:
; X86-AVX512-NO-FAST-SQRT:       # %bb.0:
; X86-AVX512-NO-FAST-SQRT-NEXT:    vrsqrt14pd %zmm0, %zmm1 # encoding: [0x62,0xf2,0xfd,0x48,0x4e,0xc8]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmulpd %zmm1, %zmm0, %zmm2 # encoding: [0x62,0xf1,0xfd,0x48,0x59,0xd1]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vfnmadd213pd {{\.?LCPI[0-9]+_[0-9]+}}(%rip){1to8}, %zmm1, %zmm2 # encoding: [0x62,0xf2,0xf5,0x58,0xac,0x15,A,A,A,A]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-4, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    # zmm2 = -(zmm1 * zmm2) + mem
; X86-AVX512-NO-FAST-SQRT-NEXT:    vbroadcastsd {{.*#+}} zmm3 = [3.1250000550062401E-1,3.1250000550062401E-1,3.1250000550062401E-1,3.1250000550062401E-1,3.1250000550062401E-1,3.1250000550062401E-1,3.1250000550062401E-1,3.1250000550062401E-1]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # encoding: [0x62,0xf2,0xfd,0x48,0x19,0x1d,A,A,A,A]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-4, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    vfmadd213pd {{\.?LCPI[0-9]+_[0-9]+}}(%rip){1to8}, %zmm2, %zmm3 # encoding: [0x62,0xf2,0xed,0x58,0xa8,0x1d,A,A,A,A]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-4, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    # zmm3 = (zmm2 * zmm3) + mem
; X86-AVX512-NO-FAST-SQRT-NEXT:    vfmadd213pd {{\.?LCPI[0-9]+_[0-9]+}}(%rip){1to8}, %zmm2, %zmm3 # encoding: [0x62,0xf2,0xed,0x58,0xa8,0x1d,A,A,A,A]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-4, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    # zmm3 = (zmm2 * zmm3) + mem
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmulpd %zmm1, %zmm2, %zmm2 # encoding: [0x62,0xf1,0xed,0x48,0x59,0xd1]
; X86-AVX512-NO-FAST-SQRT-NEXT:    vfmadd213pd %zmm1, %zmm3, %zmm2 # encoding: [0x62,0xf2,0xe5,0x48,0xa8,0xd1]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # zmm2 = (zmm3 * zmm2) + zmm1
; X86-AVX512-NO-FAST-SQRT-NEXT:    vandpd {{\.?LCPI[0-9]+_[0-9]+}}(%rip){1to8}, %zmm0, %zmm1 # encoding: [0x62,0xf1,0xfd,0x58,0x54,0x0d,A,A,A,A]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-4, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    vcmpgepd {{\.?LCPI[0-9]+_[0-9]+}}(%rip){1to8}, %zmm1, %k1 # encoding: [0x62,0xf1,0xf5,0x58,0xc2,0x0d,A,A,A,A,0x0d]
; X86-AVX512-NO-FAST-SQRT-NEXT:    # fixup A - offset: 6, value: {{\.?LCPI[0-9]+_[0-9]+}}-5, kind: reloc_riprel_4byte
; X86-AVX512-NO-FAST-SQRT-NEXT:    vmulpd %zmm2, %zmm0, %zmm0 {%k1} {z} # encoding: [0x62,0xf1,0xfd,0xc9,0x59,0xc2]
; X86-AVX512-NO-FAST-SQRT-NEXT:    retq # encoding: [0xc3]
  %sqrt = tail call fast <8 x double> @llvm.sqrt.v8f64(<8 x double> %data)
  ret <8 x double> %sqrt
}

attributes #0 = { "reciprocal-estimates"="sqrtd:0,vec-sqrtd:0" }
attributes #1 = { "imf-accuracy-bits-sqrt"="14" }
attributes #2 = { "imf-accuracy-bits-sqrt"="26.0" }
attributes #3 = { "imf-accuracy-bits-sqrt"="50.0" }
