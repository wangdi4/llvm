; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; REQUIRES: intel_feature_isa_avx256p
; RUN: llc < %s -mtriple=i686-apple-darwin -mattr=+avx256p --show-mc-encoding | FileCheck %s --check-prefixes=CHECK,X86
; RUN: llc < %s -mtriple=x86_64-apple-darwin -mattr=+avx256p --show-mc-encoding | FileCheck %s --check-prefixes=CHECK,X64
define void @test_demanded_haddpd_128(<2 x double> %a0, <2 x double> %a1, ptr%a2) nounwind {
; X86-LABEL: test_demanded_haddpd_128:
; X86:       ## %bb.0:
; X86-NEXT:    movl {{[0-9]+}}(%esp), %eax ## encoding: [0x8b,0x44,0x24,0x04]
; X86-NEXT:    vhaddpd %xmm0, %xmm0, %xmm0 ## encoding: [0xc5,0xf9,0x7c,0xc0]
; X86-NEXT:    vmovlpd %xmm0, (%eax) ## EVEX TO VEX Compression encoding: [0xc5,0xf9,0x13,0x00]
; X86-NEXT:    retl ## encoding: [0xc3]
;
; X64-LABEL: test_demanded_haddpd_128:
; X64:       ## %bb.0:
; X64-NEXT:    vhaddpd %xmm0, %xmm0, %xmm0 ## encoding: [0xc5,0xf9,0x7c,0xc0]
; X64-NEXT:    vmovlpd %xmm0, (%rdi) ## EVEX TO VEX Compression encoding: [0xc5,0xf9,0x13,0x07]
; X64-NEXT:    retq ## encoding: [0xc3]
  %1 = shufflevector <2 x double> %a1, <2 x double> undef, <2 x i32> zeroinitializer
  %2 = call <2 x double> @llvm.x86.sse3.hadd.pd(<2 x double> %a0, <2 x double> %1)
  %3 = extractelement <2 x double> %2, i32 0
  store double %3, ptr%a2
  ret void
}

define void @test_demanded_hsubpd_128(<2 x double> %a0, <2 x double> %a1, ptr%a2) nounwind {
; X86-LABEL: test_demanded_hsubpd_128:
; X86:       ## %bb.0:
; X86-NEXT:    movl {{[0-9]+}}(%esp), %eax ## encoding: [0x8b,0x44,0x24,0x04]
; X86-NEXT:    vhsubpd %xmm0, %xmm0, %xmm0 ## encoding: [0xc5,0xf9,0x7d,0xc0]
; X86-NEXT:    vmovlpd %xmm0, (%eax) ## EVEX TO VEX Compression encoding: [0xc5,0xf9,0x13,0x00]
; X86-NEXT:    retl ## encoding: [0xc3]
;
; X64-LABEL: test_demanded_hsubpd_128:
; X64:       ## %bb.0:
; X64-NEXT:    vhsubpd %xmm0, %xmm0, %xmm0 ## encoding: [0xc5,0xf9,0x7d,0xc0]
; X64-NEXT:    vmovlpd %xmm0, (%rdi) ## EVEX TO VEX Compression encoding: [0xc5,0xf9,0x13,0x07]
; X64-NEXT:    retq ## encoding: [0xc3]
  %1 = shufflevector <2 x double> %a1, <2 x double> undef, <2 x i32> zeroinitializer
  %2 = call <2 x double> @llvm.x86.sse3.hsub.pd(<2 x double> %a0, <2 x double> %1)
  %3 = extractelement <2 x double> %2, i32 0
  store double %3, ptr%a2
  ret void
}

declare <2 x double> @llvm.x86.sse3.hadd.pd(<2 x double>, <2 x double>)
declare <2 x double> @llvm.x86.sse3.hsub.pd(<2 x double>, <2 x double>)
;; NOTE: These prefixes are unused and the list is autogenerated. Do not add tests below this line:
; CHECK: {{.*}}
