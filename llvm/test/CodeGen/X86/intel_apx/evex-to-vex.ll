; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; Check EVEX is not compressed into VEX when egpr is used.
; RUN: llc < %s -mtriple=x86_64-unknown-unknown -mattr=+avx512vl,+egpr -show-mc-encoding | FileCheck %s

define void @test_x86_vcvtps2ph_256_m(ptr nocapture %d, <8 x float> %a) nounwind {
; CHECK-LABEL: test_x86_vcvtps2ph_256_m:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    pushq %rbp # encoding: [0x55]
; CHECK-NEXT:    pushq %r15 # encoding: [0x41,0x57]
; CHECK-NEXT:    pushq %r14 # encoding: [0x41,0x56]
; CHECK-NEXT:    pushq %r13 # encoding: [0x41,0x55]
; CHECK-NEXT:    pushq %r12 # encoding: [0x41,0x54]
; CHECK-NEXT:    pushq %rbx # encoding: [0x53]
; CHECK-NEXT:    movq %rdi, %r16 # encoding: [0xd5,0x18,0x89,0xf8]
; CHECK-NEXT:    #APP
; CHECK-NEXT:    #NO_APP
; CHECK-NEXT:    vcvtps2ph $3, %ymm0, (%r16) # encoding: [0x62,0xfb,0x7d,0x28,0x1d,0x00,0x03]
; CHECK-NEXT:    popq %rbx # encoding: [0x5b]
; CHECK-NEXT:    popq %r12 # encoding: [0x41,0x5c]
; CHECK-NEXT:    popq %r13 # encoding: [0x41,0x5d]
; CHECK-NEXT:    popq %r14 # encoding: [0x41,0x5e]
; CHECK-NEXT:    popq %r15 # encoding: [0x41,0x5f]
; CHECK-NEXT:    popq %rbp # encoding: [0x5d]
; CHECK-NEXT:    vzeroupper # encoding: [0xc5,0xf8,0x77]
; CHECK-NEXT:    retq # encoding: [0xc3]
entry:
  %0 = load i32, ptr %d, align 4
  call void asm sideeffect "", "~{eax},~{ebx},~{ecx},~{edx},~{edi},~{esi},~{ebp},~{esp},~{r8d},~{r9d},~{r10d},~{r11d},~{r12d},~{r13d},~{r14d},~{r15d},~{dirflag},~{fpsr},~{flags}"()
  %1 = tail call <8 x i16> @llvm.x86.vcvtps2ph.256(<8 x float> %a, i32 3)
  store <8 x i16> %1, ptr %d, align 16
  ret void
}

declare <8 x i16> @llvm.x86.vcvtps2ph.256(<8 x float>, i32) nounwind readonly
