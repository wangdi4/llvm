; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; REQUIRES: intel_feature_isa_apx_f
; RUN: llc < %s -mtriple=x86_64-unknown -mattr=+egpr | FileCheck %s --check-prefix=APX

define void @test_1024(ptr %a, ptr %b, ptr %out) nounwind {
; APX-LABEL: test_1024:
; APX:       # %bb.0:
; APX-NEXT:    pushq %rbp
; APX-NEXT:    pushq %r15
; APX-NEXT:    pushq %r14
; APX-NEXT:    pushq %r13
; APX-NEXT:    pushq %r12
; APX-NEXT:    pushq %rbx
; APX-NEXT:    subq $120, %rsp
; APX-NEXT:    movq %rdx, {{[-0-9]+}}(%r{{[sb]}}p) # 8-byte Spill
; APX-NEXT:    movq %rdi, {{[-0-9]+}}(%r{{[sb]}}p) # 8-byte Spill
; APX-NEXT:    movq (%rdi), %r18
; APX-NEXT:    movq 8(%rdi), %r10
; APX-NEXT:    movq 24(%rdi), %rbp
; APX-NEXT:    movq 16(%rdi), %r11
; APX-NEXT:    movq 40(%rdi), %r8
; APX-NEXT:    movq 32(%rdi), %r24
; APX-NEXT:    movq 56(%rdi), %r27
; APX-NEXT:    movq 48(%rdi), %r12
; APX-NEXT:    movq 24(%rsi), %r23
; APX-NEXT:    movq 16(%rsi), %r17
; APX-NEXT:    movq (%rsi), %r28
; APX-NEXT:    movq 8(%rsi), %rdi
; APX-NEXT:    movq %rsi, %r29
; APX-NEXT:    movq %r12, %rax
; APX-NEXT:    mulq %r28
; APX-NEXT:    movq %rdx, %r9
; APX-NEXT:    movq %rax, %r19
; APX-NEXT:    movq %r27, %rax
; APX-NEXT:    mulq %r28
; APX-NEXT:    movq %rdx, %r16
; APX-NEXT:    movq %rax, %r20
; APX-NEXT:    addq %r9, %r20
; APX-NEXT:    adcq $0, %r16
; APX-NEXT:    movq %r12, %rax
; APX-NEXT:    mulq %rdi
; APX-NEXT:    movq %rdx, %r21
; APX-NEXT:    movq %rax, %r22
; APX-NEXT:    addq %r20, %r22
; APX-NEXT:    adcq %r16, %r21
; APX-NEXT:    setb %al
; APX-NEXT:    movzbl %al, %ecx
; APX-NEXT:    movq %r27, %rax
; APX-NEXT:    mulq %rdi
; APX-NEXT:    movq %rdx, %r9
; APX-NEXT:    movq %rax, %r16
; APX-NEXT:    addq %r21, %r16
; APX-NEXT:    adcq %rcx, %r9
; APX-NEXT:    movq %r24, %rcx
; APX-NEXT:    movq %r24, %rax
; APX-NEXT:    mulq %r28
; APX-NEXT:    movq %rdx, %r20
; APX-NEXT:    movq %rax, {{[-0-9]+}}(%r{{[sb]}}p) # 8-byte Spill
; APX-NEXT:    movq %r8, %r21
; APX-NEXT:    movq %r8, %rax
; APX-NEXT:    mulq %r28
; APX-NEXT:    movq %rdx, %r24
; APX-NEXT:    movq %rax, %r30
; APX-NEXT:    addq %r20, %r30
; APX-NEXT:    adcq $0, %r24
; APX-NEXT:    movq %rcx, %rax
; APX-NEXT:    movq %rcx, %r8
; APX-NEXT:    mulq %rdi
; APX-NEXT:    movq %rdx, %r20
; APX-NEXT:    movq %rax, %r26
; APX-NEXT:    addq %r30, %r26
; APX-NEXT:    adcq %r24, %r20
; APX-NEXT:    setb %al
; APX-NEXT:    movzbl %al, %ecx
; APX-NEXT:    movq %r21, %rax
; APX-NEXT:    mulq %rdi
; APX-NEXT:    movq %rdi, %rsi
; APX-NEXT:    movq %rdx, %r24
; APX-NEXT:    movq %rax, %rbx
; APX-NEXT:    addq %r20, %rbx
; APX-NEXT:    adcq %rcx, %r24
; APX-NEXT:    addq %r19, %rbx
; APX-NEXT:    adcq %r22, %r24
; APX-NEXT:    adcq $0, %r16
; APX-NEXT:    adcq $0, %r9
; APX-NEXT:    movq %r8, {{[-0-9]+}}(%r{{[sb]}}p) # 8-byte Spill
; APX-NEXT:    movq %r8, %rax
; APX-NEXT:    mulq %r17
; APX-NEXT:    movq %rdx, %r19
; APX-NEXT:    movq %rax, %r30
; APX-NEXT:    movq %r21, {{[-0-9]+}}(%r{{[sb]}}p) # 8-byte Spill
; APX-NEXT:    movq %r21, %rax
; APX-NEXT:    mulq %r17
; APX-NEXT:    movq %rdx, %r20
; APX-NEXT:    movq %rax, %r22
; APX-NEXT:    addq %r19, %r22
; APX-NEXT:    adcq $0, %r20
; APX-NEXT:    movq %r8, %rax
; APX-NEXT:    mulq %r23
; APX-NEXT:    movq %rdx, %r19
; APX-NEXT:    movq %rax, %r31
; APX-NEXT:    addq %r22, %r31
; APX-NEXT:    adcq %r20, %r19
; APX-NEXT:    setb %al
; APX-NEXT:    movzbl %al, %ecx
; APX-NEXT:    movq %r21, %rax
; APX-NEXT:    mulq %r23
; APX-NEXT:    movq %rdx, %r14
; APX-NEXT:    movq %rax, %r15
; APX-NEXT:    addq %r19, %r15
; APX-NEXT:    adcq %rcx, %r14
; APX-NEXT:    addq %rbx, %r30
; APX-NEXT:    adcq %r24, %r31
; APX-NEXT:    adcq $0, %r15
; APX-NEXT:    adcq $0, %r14
; APX-NEXT:    addq %r16, %r15
; APX-NEXT:    adcq %r9, %r14
; APX-NEXT:    setb %al
; APX-NEXT:    movzbl %al, %ecx
; APX-NEXT:    movq %r12, {{[-0-9]+}}(%r{{[sb]}}p) # 8-byte Spill
; APX-NEXT:    movq %r12, %rax
; APX-NEXT:    mulq %r17
; APX-NEXT:    movq %rdx, %r9
; APX-NEXT:    movq %rax, %rdi
; APX-NEXT:    movq %r27, {{[-0-9]+}}(%r{{[sb]}}p) # 8-byte Spill
; APX-NEXT:    movq %r27, %rax
; APX-NEXT:    mulq %r17
; APX-NEXT:    movq %rdx, %r16
; APX-NEXT:    movq %rax, %r22
; APX-NEXT:    addq %r9, %r22
; APX-NEXT:    adcq $0, %r16
; APX-NEXT:    movq %r12, %rax
; APX-NEXT:    mulq %r23
; APX-NEXT:    movq %rdx, %r9
; APX-NEXT:    movq %rax, %r25
; APX-NEXT:    addq %r22, %r25
; APX-NEXT:    adcq %r16, %r9
; APX-NEXT:    setb %al
; APX-NEXT:    movzbl %al, %r8d
; APX-NEXT:    movq %r27, %rax
; APX-NEXT:    mulq %r23
; APX-NEXT:    movq %rdx, %r22
; APX-NEXT:    movq %rax, %r24
; APX-NEXT:    addq %r9, %r24
; APX-NEXT:    adcq %r8, %r22
; APX-NEXT:    addq %r15, %rdi
; APX-NEXT:    movq %rdi, %r19
; APX-NEXT:    adcq %r14, %r25
; APX-NEXT:    adcq %rcx, %r24
; APX-NEXT:    adcq $0, %r22
; APX-NEXT:    movq %r11, %rax
; APX-NEXT:    mulq %r28
; APX-NEXT:    movq %rdx, %r9
; APX-NEXT:    movq %rax, %rbx
; APX-NEXT:    movq %rbp, %rax
; APX-NEXT:    mulq %r28
; APX-NEXT:    movq %rdx, %r16
; APX-NEXT:    movq %rax, %r14
; APX-NEXT:    addq %r9, %r14
; APX-NEXT:    adcq $0, %r16
; APX-NEXT:    movq %r11, %rax
; APX-NEXT:    mulq %rsi
; APX-NEXT:    movq %rdx, %r15
; APX-NEXT:    movq %rax, %r12
; APX-NEXT:    addq %r14, %r12
; APX-NEXT:    adcq %r16, %r15
; APX-NEXT:    setb %al
; APX-NEXT:    movzbl %al, %ecx
; APX-NEXT:    movq %rbp, %rax
; APX-NEXT:    mulq %rsi
; APX-NEXT:    movq %rsi, {{[-0-9]+}}(%r{{[sb]}}p) # 8-byte Spill
; APX-NEXT:    movq %rdx, %r9
; APX-NEXT:    movq %rax, %r16
; APX-NEXT:    addq %r15, %r16
; APX-NEXT:    adcq %rcx, %r9
; APX-NEXT:    movq %r18, %rax
; APX-NEXT:    mulq %r28
; APX-NEXT:    movq %rdx, %r14
; APX-NEXT:    movq %rax, {{[-0-9]+}}(%r{{[sb]}}p) # 8-byte Spill
; APX-NEXT:    movq %r10, %rax
; APX-NEXT:    mulq %r28
; APX-NEXT:    movq %rdx, %r15
; APX-NEXT:    movq %rax, %r13
; APX-NEXT:    addq %r14, %r13
; APX-NEXT:    adcq $0, %r15
; APX-NEXT:    movq %r18, %rax
; APX-NEXT:    mulq %rsi
; APX-NEXT:    movq %rdx, %r14
; APX-NEXT:    addq %r13, %rax
; APX-NEXT:    movq %rax, {{[-0-9]+}}(%r{{[sb]}}p) # 8-byte Spill
; APX-NEXT:    adcq %r15, %r14
; APX-NEXT:    setb %cl
; APX-NEXT:    movq %r10, %rax
; APX-NEXT:    mulq %rsi
; APX-NEXT:    movq %rdx, %r15
; APX-NEXT:    movq %rax, %r13
; APX-NEXT:    addq %r14, %r13
; APX-NEXT:    movzbl %cl, %eax
; APX-NEXT:    adcq %rax, %r15
; APX-NEXT:    addq %rbx, %r13
; APX-NEXT:    adcq %r12, %r15
; APX-NEXT:    adcq $0, %r16
; APX-NEXT:    adcq $0, %r9
; APX-NEXT:    movq %r18, %rax
; APX-NEXT:    mulq %r17
; APX-NEXT:    movq %rdx, %rbx
; APX-NEXT:    movq %rax, %rsi
; APX-NEXT:    movq %r10, %rax
; APX-NEXT:    mulq %r17
; APX-NEXT:    movq %rdx, %r14
; APX-NEXT:    movq %rax, %r12
; APX-NEXT:    addq %rbx, %r12
; APX-NEXT:    adcq $0, %r14
; APX-NEXT:    movq %r18, %rax
; APX-NEXT:    mulq %r23
; APX-NEXT:    movq %rdx, %rbx
; APX-NEXT:    addq %r12, %rax
; APX-NEXT:    movq %rax, %r8
; APX-NEXT:    adcq %r14, %rbx
; APX-NEXT:    setb %cl
; APX-NEXT:    movq %r10, %rax
; APX-NEXT:    mulq %r23
; APX-NEXT:    movq %rdx, %r21
; APX-NEXT:    movq %rax, %r27
; APX-NEXT:    addq %rbx, %r27
; APX-NEXT:    movzbl %cl, %eax
; APX-NEXT:    adcq %rax, %r21
; APX-NEXT:    addq %r13, %rsi
; APX-NEXT:    movq %rsi, {{[-0-9]+}}(%r{{[sb]}}p) # 8-byte Spill
; APX-NEXT:    adcq %r15, %r8
; APX-NEXT:    movq %r8, {{[-0-9]+}}(%r{{[sb]}}p) # 8-byte Spill
; APX-NEXT:    adcq $0, %r27
; APX-NEXT:    adcq $0, %r21
; APX-NEXT:    addq %r16, %r27
; APX-NEXT:    adcq %r9, %r21
; APX-NEXT:    setb %cl
; APX-NEXT:    movq %r11, %rdi
; APX-NEXT:    movq %r11, %rax
; APX-NEXT:    movq %r17, {{[-0-9]+}}(%r{{[sb]}}p) # 8-byte Spill
; APX-NEXT:    mulq %r17
; APX-NEXT:    movq %rdx, %r9
; APX-NEXT:    movq %rax, %r14
; APX-NEXT:    movq %rbp, %rax
; APX-NEXT:    mulq %r17
; APX-NEXT:    movq %rdx, %r16
; APX-NEXT:    movq %rax, %rbx
; APX-NEXT:    addq %r9, %rbx
; APX-NEXT:    adcq $0, %r16
; APX-NEXT:    movq %r11, %rax
; APX-NEXT:    mulq %r23
; APX-NEXT:    movq %rdx, %r9
; APX-NEXT:    movq %rax, %r12
; APX-NEXT:    addq %rbx, %r12
; APX-NEXT:    adcq %r16, %r9
; APX-NEXT:    setb %r8b
; APX-NEXT:    movq %rbp, %rax
; APX-NEXT:    movq %rbp, %r11
; APX-NEXT:    mulq %r23
; APX-NEXT:    movq %rdx, %rbp
; APX-NEXT:    movq %rax, %r16
; APX-NEXT:    addq %r9, %r16
; APX-NEXT:    movzbl %r8b, %eax
; APX-NEXT:    adcq %rax, %rbp
; APX-NEXT:    addq %r27, %r14
; APX-NEXT:    adcq %r21, %r12
; APX-NEXT:    movzbl %cl, %eax
; APX-NEXT:    adcq %rax, %r16
; APX-NEXT:    adcq $0, %rbp
; APX-NEXT:    addq {{[-0-9]+}}(%r{{[sb]}}p), %r14 # 8-byte Folded Reload
; APX-NEXT:    movq 32(%r29), %r21
; APX-NEXT:    adcq %r26, %r12
; APX-NEXT:    adcq %r30, %r16
; APX-NEXT:    adcq %r31, %rbp
; APX-NEXT:    adcq $0, %r19
; APX-NEXT:    movq %r19, {{[-0-9]+}}(%r{{[sb]}}p) # 8-byte Spill
; APX-NEXT:    adcq $0, %r25
; APX-NEXT:    adcq $0, %r24
; APX-NEXT:    adcq $0, %r22
; APX-NEXT:    movq %rdi, %rax
; APX-NEXT:    mulq %r21
; APX-NEXT:    movq %rdx, %r9
; APX-NEXT:    movq %rax, %r26
; APX-NEXT:    movq %r11, %rax
; APX-NEXT:    mulq %r21
; APX-NEXT:    movq %rdx, %r27
; APX-NEXT:    movq %rax, %r30
; APX-NEXT:    addq %r9, %r30
; APX-NEXT:    adcq $0, %r27
; APX-NEXT:    movq 40(%r29), %r8
; APX-NEXT:    movq %rdi, %rax
; APX-NEXT:    mulq %r8
; APX-NEXT:    movq %rdx, %r31
; APX-NEXT:    movq %rax, %rbx
; APX-NEXT:    addq %r30, %rbx
; APX-NEXT:    adcq %r27, %r31
; APX-NEXT:    setb %cl
; APX-NEXT:    movq %r11, %rax
; APX-NEXT:    mulq %r8
; APX-NEXT:    movq %rdx, %r9
; APX-NEXT:    movq %rax, %r30
; APX-NEXT:    addq %r31, %r30
; APX-NEXT:    movzbl %cl, %eax
; APX-NEXT:    adcq %rax, %r9
; APX-NEXT:    movq %r18, %rax
; APX-NEXT:    mulq %r21
; APX-NEXT:    movq %rdx, %r27
; APX-NEXT:    movq %rax, %r19
; APX-NEXT:    movq %r10, %rax
; APX-NEXT:    mulq %r21
; APX-NEXT:    movq %rdx, %r31
; APX-NEXT:    movq %rax, %r15
; APX-NEXT:    addq %r27, %r15
; APX-NEXT:    adcq $0, %r31
; APX-NEXT:    movq %r18, %rax
; APX-NEXT:    mulq %r8
; APX-NEXT:    movq %rdx, %r27
; APX-NEXT:    movq %rax, %r17
; APX-NEXT:    addq %r15, %r17
; APX-NEXT:    adcq %r31, %r27
; APX-NEXT:    setb %cl
; APX-NEXT:    movq %r10, %rax
; APX-NEXT:    mulq %r8
; APX-NEXT:    movq %rdx, %r31
; APX-NEXT:    movq %rax, %r15
; APX-NEXT:    addq %r27, %r15
; APX-NEXT:    movzbl %cl, %eax
; APX-NEXT:    adcq %rax, %r31
; APX-NEXT:    addq %r26, %r15
; APX-NEXT:    adcq %rbx, %r31
; APX-NEXT:    adcq $0, %r30
; APX-NEXT:    adcq $0, %r9
; APX-NEXT:    movq %r29, {{[-0-9]+}}(%r{{[sb]}}p) # 8-byte Spill
; APX-NEXT:    movq 48(%r29), %r26
; APX-NEXT:    movq %r18, %rcx
; APX-NEXT:    movq %r18, {{[-0-9]+}}(%r{{[sb]}}p) # 8-byte Spill
; APX-NEXT:    movq %r18, %rax
; APX-NEXT:    mulq %r26
; APX-NEXT:    movq %rdx, %r27
; APX-NEXT:    movq %rax, %r20
; APX-NEXT:    movq %r10, %rax
; APX-NEXT:    movq %r10, {{[-0-9]+}}(%r{{[sb]}}p) # 8-byte Spill
; APX-NEXT:    mulq %r26
; APX-NEXT:    movq %rdx, %rbx
; APX-NEXT:    movq %rax, %r13
; APX-NEXT:    addq %r27, %r13
; APX-NEXT:    adcq $0, %rbx
; APX-NEXT:    movq 56(%r29), %r18
; APX-NEXT:    movq %rcx, %rax
; APX-NEXT:    mulq %r18
; APX-NEXT:    movq %rdx, %r27
; APX-NEXT:    addq %r13, %rax
; APX-NEXT:    movq %rax, %r13
; APX-NEXT:    adcq %rbx, %r27
; APX-NEXT:    setb %r29b
; APX-NEXT:    movq %r10, %rax
; APX-NEXT:    mulq %r18
; APX-NEXT:    movq %rdx, %rcx
; APX-NEXT:    movq %rax, %r10
; APX-NEXT:    addq %r27, %r10
; APX-NEXT:    movzbl %r29b, %eax
; APX-NEXT:    adcq %rax, %rcx
; APX-NEXT:    addq %r15, %r20
; APX-NEXT:    adcq %r31, %r13
; APX-NEXT:    adcq $0, %r10
; APX-NEXT:    adcq $0, %rcx
; APX-NEXT:    addq %r30, %r10
; APX-NEXT:    adcq %r9, %rcx
; APX-NEXT:    setb %r29b
; APX-NEXT:    movq %rdi, (%rsp) # 8-byte Spill
; APX-NEXT:    movq %rdi, %rax
; APX-NEXT:    mulq %r26
; APX-NEXT:    movq %rdx, %r9
; APX-NEXT:    movq %rax, %r30
; APX-NEXT:    movq %r11, {{[-0-9]+}}(%r{{[sb]}}p) # 8-byte Spill
; APX-NEXT:    movq %r11, %rax
; APX-NEXT:    mulq %r26
; APX-NEXT:    movq %rdx, %r27
; APX-NEXT:    movq %rax, %r31
; APX-NEXT:    addq %r9, %r31
; APX-NEXT:    adcq $0, %r27
; APX-NEXT:    movq %rdi, %rax
; APX-NEXT:    mulq %r18
; APX-NEXT:    movq %rdx, %r9
; APX-NEXT:    movq %rax, %rbx
; APX-NEXT:    addq %r31, %rbx
; APX-NEXT:    adcq %r27, %r9
; APX-NEXT:    setb %r27b
; APX-NEXT:    movq %r11, %rax
; APX-NEXT:    mulq %r18
; APX-NEXT:    movq %rdx, %r15
; APX-NEXT:    movq %rax, %r11
; APX-NEXT:    addq %r9, %r11
; APX-NEXT:    movzbl %r27b, %eax
; APX-NEXT:    adcq %rax, %r15
; APX-NEXT:    addq %r10, %r30
; APX-NEXT:    adcq %rcx, %rbx
; APX-NEXT:    movzbl %r29b, %eax
; APX-NEXT:    adcq %rax, %r11
; APX-NEXT:    adcq $0, %r15
; APX-NEXT:    addq %r14, %r19
; APX-NEXT:    movq %r19, {{[-0-9]+}}(%r{{[sb]}}p) # 8-byte Spill
; APX-NEXT:    adcq %r12, %r17
; APX-NEXT:    movq %r17, {{[-0-9]+}}(%r{{[sb]}}p) # 8-byte Spill
; APX-NEXT:    adcq %r16, %r20
; APX-NEXT:    movq %r20, {{[-0-9]+}}(%r{{[sb]}}p) # 8-byte Spill
; APX-NEXT:    adcq %rbp, %r13
; APX-NEXT:    movq %r13, {{[-0-9]+}}(%r{{[sb]}}p) # 8-byte Spill
; APX-NEXT:    adcq $0, %r30
; APX-NEXT:    adcq $0, %rbx
; APX-NEXT:    adcq $0, %r11
; APX-NEXT:    adcq $0, %r15
; APX-NEXT:    addq {{[-0-9]+}}(%r{{[sb]}}p), %r30 # 8-byte Folded Reload
; APX-NEXT:    adcq %r25, %rbx
; APX-NEXT:    adcq %r24, %r11
; APX-NEXT:    adcq %r22, %r15
; APX-NEXT:    setb %r27b
; APX-NEXT:    movq {{[-0-9]+}}(%r{{[sb]}}p), %r19 # 8-byte Reload
; APX-NEXT:    movq %r19, %rax
; APX-NEXT:    mulq %r21
; APX-NEXT:    movq %rdx, %rcx
; APX-NEXT:    movq %rax, %r10
; APX-NEXT:    movq {{[-0-9]+}}(%r{{[sb]}}p), %rsi # 8-byte Reload
; APX-NEXT:    movq %rsi, %rax
; APX-NEXT:    mulq %r21
; APX-NEXT:    movq %rdx, %r9
; APX-NEXT:    movq %rax, %r16
; APX-NEXT:    addq %rcx, %r16
; APX-NEXT:    adcq $0, %r9
; APX-NEXT:    movq %r19, %rax
; APX-NEXT:    movq %r19, %r31
; APX-NEXT:    mulq %r8
; APX-NEXT:    movq %rdx, %rcx
; APX-NEXT:    movq %rax, %r19
; APX-NEXT:    addq %r16, %r19
; APX-NEXT:    adcq %r9, %rcx
; APX-NEXT:    setb %r20b
; APX-NEXT:    movq %rsi, %rax
; APX-NEXT:    movq %rsi, %r14
; APX-NEXT:    mulq %r8
; APX-NEXT:    movq %rdx, %r9
; APX-NEXT:    movq %rax, %r16
; APX-NEXT:    addq %rcx, %r16
; APX-NEXT:    movzbl %r20b, %eax
; APX-NEXT:    adcq %rax, %r9
; APX-NEXT:    movq {{[-0-9]+}}(%r{{[sb]}}p), %r29 # 8-byte Reload
; APX-NEXT:    movq %r29, %rax
; APX-NEXT:    mulq %r21
; APX-NEXT:    movq %rdx, %rcx
; APX-NEXT:    movq %rax, %rdi
; APX-NEXT:    movq {{[-0-9]+}}(%r{{[sb]}}p), %r12 # 8-byte Reload
; APX-NEXT:    movq %r12, %rax
; APX-NEXT:    mulq %r21
; APX-NEXT:    movq %rdx, %r20
; APX-NEXT:    movq %rax, %r22
; APX-NEXT:    addq %rcx, %r22
; APX-NEXT:    adcq $0, %r20
; APX-NEXT:    movq %r29, %rax
; APX-NEXT:    mulq %r8
; APX-NEXT:    movq %rdx, %rcx
; APX-NEXT:    addq %r22, %rax
; APX-NEXT:    movq %rax, %r17
; APX-NEXT:    adcq %r20, %rcx
; APX-NEXT:    setb %r24b
; APX-NEXT:    movq %r12, %rax
; APX-NEXT:    mulq %r8
; APX-NEXT:    movq %rdx, %r20
; APX-NEXT:    movq %rax, %r22
; APX-NEXT:    addq %rcx, %r22
; APX-NEXT:    movzbl %r24b, %eax
; APX-NEXT:    adcq %rax, %r20
; APX-NEXT:    addq %r10, %r22
; APX-NEXT:    adcq %r19, %r20
; APX-NEXT:    adcq $0, %r16
; APX-NEXT:    adcq $0, %r9
; APX-NEXT:    movq %r29, %rax
; APX-NEXT:    mulq %r26
; APX-NEXT:    movq %rdx, %rcx
; APX-NEXT:    movq %rax, %rsi
; APX-NEXT:    movq %r12, %rax
; APX-NEXT:    mulq %r26
; APX-NEXT:    movq %rdx, %r10
; APX-NEXT:    movq %rax, %r19
; APX-NEXT:    addq %rcx, %r19
; APX-NEXT:    adcq $0, %r10
; APX-NEXT:    movq %r29, %rax
; APX-NEXT:    mulq %r18
; APX-NEXT:    movq %rdx, %rcx
; APX-NEXT:    addq %r19, %rax
; APX-NEXT:    movq %rax, %r29
; APX-NEXT:    adcq %r10, %rcx
; APX-NEXT:    setb %r19b
; APX-NEXT:    movq %r12, %rax
; APX-NEXT:    mulq %r18
; APX-NEXT:    movq %rdx, %r10
; APX-NEXT:    movq %rax, %r24
; APX-NEXT:    addq %rcx, %r24
; APX-NEXT:    movzbl %r19b, %eax
; APX-NEXT:    adcq %rax, %r10
; APX-NEXT:    addq %r22, %rsi
; APX-NEXT:    adcq %r20, %r29
; APX-NEXT:    adcq $0, %r24
; APX-NEXT:    adcq $0, %r10
; APX-NEXT:    addq %r16, %r24
; APX-NEXT:    adcq %r9, %r10
; APX-NEXT:    setb %r22b
; APX-NEXT:    movq %r31, %rax
; APX-NEXT:    mulq %r26
; APX-NEXT:    movq %rdx, %rcx
; APX-NEXT:    movq %rax, %r19
; APX-NEXT:    movq %r14, %rax
; APX-NEXT:    mulq %r26
; APX-NEXT:    movq %rdx, %r9
; APX-NEXT:    movq %rax, %r16
; APX-NEXT:    addq %rcx, %r16
; APX-NEXT:    adcq $0, %r9
; APX-NEXT:    movq %r31, %rax
; APX-NEXT:    mulq %r18
; APX-NEXT:    movq %rdx, %rcx
; APX-NEXT:    addq %r16, %rax
; APX-NEXT:    movq %rax, %r16
; APX-NEXT:    adcq %r9, %rcx
; APX-NEXT:    setb %r9b
; APX-NEXT:    movq %r14, %rax
; APX-NEXT:    mulq %r18
; APX-NEXT:    movq %rdx, %rbp
; APX-NEXT:    movq %rax, %r12
; APX-NEXT:    addq %rcx, %r12
; APX-NEXT:    movzbl %r9b, %eax
; APX-NEXT:    adcq %rax, %rbp
; APX-NEXT:    addq %r24, %r19
; APX-NEXT:    adcq %r10, %r16
; APX-NEXT:    movzbl %r22b, %eax
; APX-NEXT:    adcq %rax, %r12
; APX-NEXT:    adcq $0, %rbp
; APX-NEXT:    addq %r30, %rdi
; APX-NEXT:    movq %rdi, {{[-0-9]+}}(%r{{[sb]}}p) # 8-byte Spill
; APX-NEXT:    adcq %rbx, %r17
; APX-NEXT:    movq %r17, {{[-0-9]+}}(%r{{[sb]}}p) # 8-byte Spill
; APX-NEXT:    adcq %r11, %rsi
; APX-NEXT:    movq %rsi, {{[-0-9]+}}(%r{{[sb]}}p) # 8-byte Spill
; APX-NEXT:    adcq %r15, %r29
; APX-NEXT:    movq %r29, {{[-0-9]+}}(%r{{[sb]}}p) # 8-byte Spill
; APX-NEXT:    movzbl %r27b, %eax
; APX-NEXT:    adcq %rax, %r19
; APX-NEXT:    movq %r19, {{[-0-9]+}}(%r{{[sb]}}p) # 8-byte Spill
; APX-NEXT:    adcq $0, %r16
; APX-NEXT:    movq %r16, {{[-0-9]+}}(%r{{[sb]}}p) # 8-byte Spill
; APX-NEXT:    adcq $0, %r12
; APX-NEXT:    adcq $0, %rbp
; APX-NEXT:    movq {{[-0-9]+}}(%r{{[sb]}}p), %r19 # 8-byte Reload
; APX-NEXT:    movq 64(%r19), %r24
; APX-NEXT:    movq {{[-0-9]+}}(%r{{[sb]}}p), %r11 # 8-byte Reload
; APX-NEXT:    movq %r11, %rax
; APX-NEXT:    mulq %r24
; APX-NEXT:    movq %rdx, %rcx
; APX-NEXT:    movq %rax, %r10
; APX-NEXT:    movq %r23, %rax
; APX-NEXT:    mulq %r24
; APX-NEXT:    movq %rdx, %r9
; APX-NEXT:    movq %rax, %r16
; APX-NEXT:    addq %rcx, %r16
; APX-NEXT:    adcq $0, %r9
; APX-NEXT:    movq 72(%r19), %r30
; APX-NEXT:    movq %r11, %rax
; APX-NEXT:    mulq %r30
; APX-NEXT:    movq %rdx, %rcx
; APX-NEXT:    movq %rax, %r22
; APX-NEXT:    addq %r16, %r22
; APX-NEXT:    adcq %r9, %rcx
; APX-NEXT:    setb %r27b
; APX-NEXT:    movq %r23, %rax
; APX-NEXT:    mulq %r30
; APX-NEXT:    movq %rdx, %r9
; APX-NEXT:    movq %rax, %r16
; APX-NEXT:    addq %rcx, %r16
; APX-NEXT:    movzbl %r27b, %eax
; APX-NEXT:    adcq %rax, %r9
; APX-NEXT:    movq %r28, %rax
; APX-NEXT:    mulq %r24
; APX-NEXT:    movq %rdx, %rcx
; APX-NEXT:    movq %rax, {{[-0-9]+}}(%r{{[sb]}}p) # 8-byte Spill
; APX-NEXT:    movq {{[-0-9]+}}(%r{{[sb]}}p), %rdi # 8-byte Reload
; APX-NEXT:    movq %rdi, %rax
; APX-NEXT:    mulq %r24
; APX-NEXT:    movq %rdx, %r27
; APX-NEXT:    movq %rax, %r31
; APX-NEXT:    addq %rcx, %r31
; APX-NEXT:    adcq $0, %r27
; APX-NEXT:    movq %r28, %rax
; APX-NEXT:    mulq %r30
; APX-NEXT:    movq %rdx, %rcx
; APX-NEXT:    addq %r31, %rax
; APX-NEXT:    movq %rax, {{[-0-9]+}}(%r{{[sb]}}p) # 8-byte Spill
; APX-NEXT:    adcq %r27, %rcx
; APX-NEXT:    setb %r29b
; APX-NEXT:    movq %rdi, %rax
; APX-NEXT:    mulq %r30
; APX-NEXT:    movq %rdx, %r27
; APX-NEXT:    movq %rax, %r31
; APX-NEXT:    addq %rcx, %r31
; APX-NEXT:    movzbl %r29b, %eax
; APX-NEXT:    adcq %rax, %r27
; APX-NEXT:    addq %r10, %r31
; APX-NEXT:    adcq %r22, %r27
; APX-NEXT:    adcq $0, %r16
; APX-NEXT:    adcq $0, %r9
; APX-NEXT:    movq 80(%r19), %r13
; APX-NEXT:    movq %r28, %rax
; APX-NEXT:    mulq %r13
; APX-NEXT:    movq %rdx, %rcx
; APX-NEXT:    movq %rax, %rsi
; APX-NEXT:    movq %rdi, %rax
; APX-NEXT:    mulq %r13
; APX-NEXT:    movq %rdx, %r10
; APX-NEXT:    movq %rax, %rbx
; APX-NEXT:    addq %rcx, %rbx
; APX-NEXT:    adcq $0, %r10
; APX-NEXT:    movq 88(%r19), %r29
; APX-NEXT:    movq %r28, %rax
; APX-NEXT:    mulq %r29
; APX-NEXT:    movq %rdx, %rcx
; APX-NEXT:    addq %rbx, %rax
; APX-NEXT:    movq %rax, %r17
; APX-NEXT:    adcq %r10, %rcx
; APX-NEXT:    setb %bl
; APX-NEXT:    movq %rdi, %rax
; APX-NEXT:    mulq %r29
; APX-NEXT:    movq %rdx, %r10
; APX-NEXT:    movq %rax, %r15
; APX-NEXT:    addq %rcx, %r15
; APX-NEXT:    movzbl %bl, %eax
; APX-NEXT:    adcq %rax, %r10
; APX-NEXT:    addq %r31, %rsi
; APX-NEXT:    movq %rsi, {{[-0-9]+}}(%r{{[sb]}}p) # 8-byte Spill
; APX-NEXT:    adcq %r27, %r17
; APX-NEXT:    movq %r17, {{[-0-9]+}}(%r{{[sb]}}p) # 8-byte Spill
; APX-NEXT:    adcq $0, %r15
; APX-NEXT:    adcq $0, %r10
; APX-NEXT:    addq %r16, %r15
; APX-NEXT:    adcq %r9, %r10
; APX-NEXT:    setb %sil
; APX-NEXT:    movq %r11, %rax
; APX-NEXT:    mulq %r13
; APX-NEXT:    movq %rdx, %rcx
; APX-NEXT:    movq %rax, %r16
; APX-NEXT:    movq %r23, %rax
; APX-NEXT:    mulq %r13
; APX-NEXT:    movq %rdx, %r9
; APX-NEXT:    movq %rax, %r27
; APX-NEXT:    addq %rcx, %r27
; APX-NEXT:    adcq $0, %r9
; APX-NEXT:    movq %r11, %rax
; APX-NEXT:    mulq %r29
; APX-NEXT:    movq %rdx, %rcx
; APX-NEXT:    movq %rax, %rbx
; APX-NEXT:    addq %r27, %rbx
; APX-NEXT:    adcq %r9, %rcx
; APX-NEXT:    setb %r9b
; APX-NEXT:    movq %r23, %rax
; APX-NEXT:    mulq %r29
; APX-NEXT:    movq %rdx, %r14
; APX-NEXT:    movq %rax, %r31
; APX-NEXT:    addq %rcx, %r31
; APX-NEXT:    movzbl %r9b, %eax
; APX-NEXT:    adcq %rax, %r14
; APX-NEXT:    addq %r15, %r16
; APX-NEXT:    adcq %r10, %rbx
; APX-NEXT:    movzbl %sil, %eax
; APX-NEXT:    adcq %rax, %r31
; APX-NEXT:    adcq $0, %r14
; APX-NEXT:    imulq %r21, %r29
; APX-NEXT:    movq %r21, %rax
; APX-NEXT:    mulq %r13
; APX-NEXT:    movq %rax, %rcx
; APX-NEXT:    imulq %r8, %r13
; APX-NEXT:    addq %r29, %r13
; APX-NEXT:    addq %rdx, %r13
; APX-NEXT:    movq %r26, %rax
; APX-NEXT:    imulq %r30, %rax
; APX-NEXT:    imulq %r24, %r18
; APX-NEXT:    addq %rax, %r18
; APX-NEXT:    movq %r26, %rax
; APX-NEXT:    mulq %r24
; APX-NEXT:    movq %rax, %r10
; APX-NEXT:    addq %rdx, %r18
; APX-NEXT:    addq %rcx, %r10
; APX-NEXT:    adcq %r13, %r18
; APX-NEXT:    movq %r24, %rax
; APX-NEXT:    mulq %r21
; APX-NEXT:    movq %rdx, %rcx
; APX-NEXT:    movq %rax, %r9
; APX-NEXT:    movq %r30, %rax
; APX-NEXT:    mulq %r21
; APX-NEXT:    movq %rdx, %r21
; APX-NEXT:    movq %rax, %r26
; APX-NEXT:    addq %rcx, %r26
; APX-NEXT:    adcq $0, %r21
; APX-NEXT:    movq %r24, %rax
; APX-NEXT:    mulq %r8
; APX-NEXT:    movq %rdx, %rcx
; APX-NEXT:    movq %rax, %r24
; APX-NEXT:    addq %r26, %r24
; APX-NEXT:    adcq %r21, %rcx
; APX-NEXT:    setb %sil
; APX-NEXT:    movq %r30, %rax
; APX-NEXT:    mulq %r8
; APX-NEXT:    movq %rdx, %r30
; APX-NEXT:    movq %rax, %r15
; APX-NEXT:    addq %rcx, %r15
; APX-NEXT:    movzbl %sil, %eax
; APX-NEXT:    adcq %rax, %r30
; APX-NEXT:    addq %r10, %r15
; APX-NEXT:    adcq %r18, %r30
; APX-NEXT:    movq 120(%r19), %rsi
; APX-NEXT:    imulq %r28, %rsi
; APX-NEXT:    movq 112(%r19), %r8
; APX-NEXT:    movq %r28, %rax
; APX-NEXT:    mulq %r8
; APX-NEXT:    movq %rax, %rcx
; APX-NEXT:    imulq %rdi, %r8
; APX-NEXT:    addq %rsi, %r8
; APX-NEXT:    addq %rdx, %r8
; APX-NEXT:    movq 96(%r19), %r10
; APX-NEXT:    movq 104(%r19), %r26
; APX-NEXT:    movq %r11, %rax
; APX-NEXT:    imulq %r26, %rax
; APX-NEXT:    imulq %r10, %r23
; APX-NEXT:    addq %rax, %r23
; APX-NEXT:    movq %r11, %rax
; APX-NEXT:    mulq %r10
; APX-NEXT:    movq %rax, %r27
; APX-NEXT:    addq %rdx, %r23
; APX-NEXT:    addq %rcx, %r27
; APX-NEXT:    adcq %r8, %r23
; APX-NEXT:    movq %r10, %rax
; APX-NEXT:    mulq %r28
; APX-NEXT:    movq %rdx, %rcx
; APX-NEXT:    movq %rax, %r22
; APX-NEXT:    movq %r26, %rax
; APX-NEXT:    mulq %r28
; APX-NEXT:    movq %rdx, %r28
; APX-NEXT:    movq %rax, %r29
; APX-NEXT:    addq %rcx, %r29
; APX-NEXT:    adcq $0, %r28
; APX-NEXT:    movq %r10, %rax
; APX-NEXT:    mulq %rdi
; APX-NEXT:    movq %rdx, %rcx
; APX-NEXT:    movq %rax, %r21
; APX-NEXT:    addq %r29, %r21
; APX-NEXT:    adcq %r28, %rcx
; APX-NEXT:    setb %sil
; APX-NEXT:    movq %r26, %rax
; APX-NEXT:    mulq %rdi
; APX-NEXT:    movq %rdx, %r25
; APX-NEXT:    movq %rax, %r26
; APX-NEXT:    addq %rcx, %r26
; APX-NEXT:    movzbl %sil, %eax
; APX-NEXT:    adcq %rax, %r25
; APX-NEXT:    addq %r27, %r26
; APX-NEXT:    adcq %r23, %r25
; APX-NEXT:    addq %r9, %r22
; APX-NEXT:    adcq %r24, %r21
; APX-NEXT:    adcq %r15, %r26
; APX-NEXT:    adcq %r30, %r25
; APX-NEXT:    addq %r16, %r22
; APX-NEXT:    adcq %rbx, %r21
; APX-NEXT:    adcq %r31, %r26
; APX-NEXT:    adcq %r14, %r25
; APX-NEXT:    movq {{[-0-9]+}}(%r{{[sb]}}p), %r19 # 8-byte Reload
; APX-NEXT:    movq 80(%r19), %rbx
; APX-NEXT:    movq %rbx, %rax
; APX-NEXT:    movq {{[-0-9]+}}(%r{{[sb]}}p), %r17 # 8-byte Reload
; APX-NEXT:    mulq %r17
; APX-NEXT:    movq %rax, %rcx
; APX-NEXT:    movq %rdx, %r9
; APX-NEXT:    movq 88(%r19), %r29
; APX-NEXT:    movq %r29, %rax
; APX-NEXT:    mulq %r17
; APX-NEXT:    movq %rdx, %r10
; APX-NEXT:    movq %rax, %r16
; APX-NEXT:    addq %r9, %r16
; APX-NEXT:    adcq $0, %r10
; APX-NEXT:    movq %rbx, %rax
; APX-NEXT:    movq {{[-0-9]+}}(%r{{[sb]}}p), %r20 # 8-byte Reload
; APX-NEXT:    mulq %r20
; APX-NEXT:    movq %rdx, %r23
; APX-NEXT:    movq %rax, %r24
; APX-NEXT:    addq %r16, %r24
; APX-NEXT:    adcq %r10, %r23
; APX-NEXT:    setb %sil
; APX-NEXT:    movq %r29, %rax
; APX-NEXT:    mulq %r20
; APX-NEXT:    movq %rdx, %r9
; APX-NEXT:    movq %rax, %r16
; APX-NEXT:    addq %r23, %r16
; APX-NEXT:    movzbl %sil, %eax
; APX-NEXT:    adcq %rax, %r9
; APX-NEXT:    movq 64(%r19), %r15
; APX-NEXT:    movq %r15, %rax
; APX-NEXT:    mulq %r17
; APX-NEXT:    movq %rax, %r23
; APX-NEXT:    movq %rdx, %r10
; APX-NEXT:    movq 72(%r19), %r14
; APX-NEXT:    movq %r14, %rax
; APX-NEXT:    mulq %r17
; APX-NEXT:    movq %rdx, %r27
; APX-NEXT:    movq %rax, %r30
; APX-NEXT:    addq %r10, %r30
; APX-NEXT:    adcq $0, %r27
; APX-NEXT:    movq %r15, %rax
; APX-NEXT:    mulq %r20
; APX-NEXT:    movq %rdx, %r10
; APX-NEXT:    movq %rax, %r28
; APX-NEXT:    addq %r30, %r28
; APX-NEXT:    adcq %r27, %r10
; APX-NEXT:    setb %sil
; APX-NEXT:    movq %r14, %rax
; APX-NEXT:    mulq %r20
; APX-NEXT:    movq %rdx, %r27
; APX-NEXT:    movq %rax, %r31
; APX-NEXT:    addq %r10, %r31
; APX-NEXT:    movzbl %sil, %eax
; APX-NEXT:    adcq %rax, %r27
; APX-NEXT:    addq %rcx, %r31
; APX-NEXT:    adcq %r24, %r27
; APX-NEXT:    adcq $0, %r16
; APX-NEXT:    adcq $0, %r9
; APX-NEXT:    movq %r15, %rax
; APX-NEXT:    movq (%rsp), %r11 # 8-byte Reload
; APX-NEXT:    mulq %r11
; APX-NEXT:    movq %rdx, %rcx
; APX-NEXT:    movq %rax, %r30
; APX-NEXT:    movq %r14, %rax
; APX-NEXT:    mulq %r11
; APX-NEXT:    movq %rdx, %r10
; APX-NEXT:    movq %rax, %r13
; APX-NEXT:    addq %rcx, %r13
; APX-NEXT:    adcq $0, %r10
; APX-NEXT:    movq %r15, %rax
; APX-NEXT:    movq {{[-0-9]+}}(%r{{[sb]}}p), %r18 # 8-byte Reload
; APX-NEXT:    mulq %r18
; APX-NEXT:    movq %rdx, %rcx
; APX-NEXT:    movq %rax, %r24
; APX-NEXT:    addq %r13, %r24
; APX-NEXT:    adcq %r10, %rcx
; APX-NEXT:    setb %sil
; APX-NEXT:    movq %r14, %rax
; APX-NEXT:    mulq %r18
; APX-NEXT:    movq %rdx, %r10
; APX-NEXT:    movq %rax, %r8
; APX-NEXT:    addq %rcx, %r8
; APX-NEXT:    movzbl %sil, %eax
; APX-NEXT:    adcq %rax, %r10
; APX-NEXT:    addq %r31, %r30
; APX-NEXT:    adcq %r27, %r24
; APX-NEXT:    adcq $0, %r8
; APX-NEXT:    adcq $0, %r10
; APX-NEXT:    addq %r16, %r8
; APX-NEXT:    adcq %r9, %r10
; APX-NEXT:    setb %dil
; APX-NEXT:    movq %rbx, %rax
; APX-NEXT:    movq %r11, %rsi
; APX-NEXT:    mulq %r11
; APX-NEXT:    movq %rdx, %rcx
; APX-NEXT:    movq %rax, %r16
; APX-NEXT:    movq %r29, %rax
; APX-NEXT:    mulq %r11
; APX-NEXT:    movq %rdx, %r9
; APX-NEXT:    movq %rax, %r27
; APX-NEXT:    addq %rcx, %r27
; APX-NEXT:    adcq $0, %r9
; APX-NEXT:    movq %rbx, %rax
; APX-NEXT:    mulq %r18
; APX-NEXT:    movq %rdx, %rcx
; APX-NEXT:    movq %rax, %r13
; APX-NEXT:    addq %r27, %r13
; APX-NEXT:    adcq %r9, %rcx
; APX-NEXT:    setb %r11b
; APX-NEXT:    movq %r29, %rax
; APX-NEXT:    mulq %r18
; APX-NEXT:    movq %r18, %r27
; APX-NEXT:    movq %rdx, %r31
; APX-NEXT:    movq %rax, %r9
; APX-NEXT:    addq %rcx, %r9
; APX-NEXT:    movzbl %r11b, %eax
; APX-NEXT:    adcq %rax, %r31
; APX-NEXT:    addq %r8, %r16
; APX-NEXT:    adcq %r10, %r13
; APX-NEXT:    movzbl %dil, %eax
; APX-NEXT:    adcq %rax, %r9
; APX-NEXT:    adcq $0, %r31
; APX-NEXT:    movq 96(%r19), %rcx
; APX-NEXT:    imulq %rcx, %r27
; APX-NEXT:    movq %rcx, %rax
; APX-NEXT:    mulq %rsi
; APX-NEXT:    movq %rax, %r8
; APX-NEXT:    movq 104(%r19), %r18
; APX-NEXT:    imulq %r18, %rsi
; APX-NEXT:    addq %r27, %rsi
; APX-NEXT:    addq %rdx, %rsi
; APX-NEXT:    movq 112(%r19), %rax
; APX-NEXT:    movq %rax, %rdx
; APX-NEXT:    imulq %r20, %rdx
; APX-NEXT:    movq 120(%r19), %r27
; APX-NEXT:    imulq %r17, %r27
; APX-NEXT:    addq %rdx, %r27
; APX-NEXT:    mulq %r17
; APX-NEXT:    movq %rax, %r10
; APX-NEXT:    addq %rdx, %r27
; APX-NEXT:    addq %r8, %r10
; APX-NEXT:    adcq %rsi, %r27
; APX-NEXT:    movq %r17, %rax
; APX-NEXT:    movq %r17, %r11
; APX-NEXT:    mulq %rcx
; APX-NEXT:    movq %rdx, %r8
; APX-NEXT:    movq %rax, %rsi
; APX-NEXT:    movq %r20, %rax
; APX-NEXT:    mulq %rcx
; APX-NEXT:    movq %rdx, %rcx
; APX-NEXT:    movq %rax, %r17
; APX-NEXT:    addq %r8, %r17
; APX-NEXT:    adcq $0, %rcx
; APX-NEXT:    movq %r11, %rax
; APX-NEXT:    mulq %r18
; APX-NEXT:    movq %rdx, %r8
; APX-NEXT:    movq %rax, %r11
; APX-NEXT:    addq %r17, %r11
; APX-NEXT:    adcq %rcx, %r8
; APX-NEXT:    setb %cl
; APX-NEXT:    movq %r20, %rax
; APX-NEXT:    mulq %r18
; APX-NEXT:    movq %rdx, %r17
; APX-NEXT:    movq %rax, %r18
; APX-NEXT:    addq %r8, %r18
; APX-NEXT:    movzbl %cl, %eax
; APX-NEXT:    adcq %rax, %r17
; APX-NEXT:    addq %r10, %r18
; APX-NEXT:    adcq %r27, %r17
; APX-NEXT:    movq {{[-0-9]+}}(%r{{[sb]}}p), %rdi # 8-byte Reload
; APX-NEXT:    imulq %r15, %rdi
; APX-NEXT:    movq %r15, %rax
; APX-NEXT:    movq {{[-0-9]+}}(%r{{[sb]}}p), %r8 # 8-byte Reload
; APX-NEXT:    mulq %r8
; APX-NEXT:    movq %rax, %rcx
; APX-NEXT:    imulq %r14, %r8
; APX-NEXT:    addq %rdi, %r8
; APX-NEXT:    addq %rdx, %r8
; APX-NEXT:    movq %r8, %r10
; APX-NEXT:    movq %rbx, %rax
; APX-NEXT:    movq {{[-0-9]+}}(%r{{[sb]}}p), %rdi # 8-byte Reload
; APX-NEXT:    imulq %rdi, %rax
; APX-NEXT:    movq {{[-0-9]+}}(%r{{[sb]}}p), %r8 # 8-byte Reload
; APX-NEXT:    imulq %r8, %r29
; APX-NEXT:    addq %rax, %r29
; APX-NEXT:    movq %rbx, %rax
; APX-NEXT:    mulq %r8
; APX-NEXT:    movq %rax, %r27
; APX-NEXT:    addq %rdx, %r29
; APX-NEXT:    addq %rcx, %r27
; APX-NEXT:    adcq %r10, %r29
; APX-NEXT:    movq %r8, %rax
; APX-NEXT:    movq %r8, %r10
; APX-NEXT:    mulq %r15
; APX-NEXT:    movq %rdx, %rcx
; APX-NEXT:    movq %rax, %r8
; APX-NEXT:    movq %rdi, %rax
; APX-NEXT:    mulq %r15
; APX-NEXT:    movq %rdx, %rbx
; APX-NEXT:    movq %rax, %r15
; APX-NEXT:    addq %rcx, %r15
; APX-NEXT:    adcq $0, %rbx
; APX-NEXT:    movq %r10, %rax
; APX-NEXT:    mulq %r14
; APX-NEXT:    movq %rdx, %rcx
; APX-NEXT:    movq %rax, %r10
; APX-NEXT:    addq %r15, %r10
; APX-NEXT:    adcq %rbx, %rcx
; APX-NEXT:    setb %bl
; APX-NEXT:    movq %rdi, %rax
; APX-NEXT:    mulq %r14
; APX-NEXT:    addq %rcx, %rax
; APX-NEXT:    movzbl %bl, %ecx
; APX-NEXT:    adcq %rcx, %rdx
; APX-NEXT:    addq %r27, %rax
; APX-NEXT:    adcq %r29, %rdx
; APX-NEXT:    addq %rsi, %r8
; APX-NEXT:    adcq %r11, %r10
; APX-NEXT:    adcq %r18, %rax
; APX-NEXT:    adcq %r17, %rdx
; APX-NEXT:    addq %r16, %r8
; APX-NEXT:    adcq %r13, %r10
; APX-NEXT:    adcq %r9, %rax
; APX-NEXT:    adcq %r31, %rdx
; APX-NEXT:    addq {{[-0-9]+}}(%r{{[sb]}}p), %r23 # 8-byte Folded Reload
; APX-NEXT:    adcq {{[-0-9]+}}(%r{{[sb]}}p), %r28 # 8-byte Folded Reload
; APX-NEXT:    adcq {{[-0-9]+}}(%r{{[sb]}}p), %r30 # 8-byte Folded Reload
; APX-NEXT:    adcq {{[-0-9]+}}(%r{{[sb]}}p), %r24 # 8-byte Folded Reload
; APX-NEXT:    adcq %r22, %r8
; APX-NEXT:    adcq %r21, %r10
; APX-NEXT:    adcq %r26, %rax
; APX-NEXT:    adcq %r25, %rdx
; APX-NEXT:    addq {{[-0-9]+}}(%r{{[sb]}}p), %r23 # 8-byte Folded Reload
; APX-NEXT:    adcq {{[-0-9]+}}(%r{{[sb]}}p), %r28 # 8-byte Folded Reload
; APX-NEXT:    adcq {{[-0-9]+}}(%r{{[sb]}}p), %r30 # 8-byte Folded Reload
; APX-NEXT:    adcq {{[-0-9]+}}(%r{{[sb]}}p), %r24 # 8-byte Folded Reload
; APX-NEXT:    adcq {{[-0-9]+}}(%r{{[sb]}}p), %r8 # 8-byte Folded Reload
; APX-NEXT:    adcq {{[-0-9]+}}(%r{{[sb]}}p), %r10 # 8-byte Folded Reload
; APX-NEXT:    adcq %r12, %rax
; APX-NEXT:    adcq %rbp, %rdx
; APX-NEXT:    movq {{[-0-9]+}}(%r{{[sb]}}p), %rcx # 8-byte Reload
; APX-NEXT:    movq {{[-0-9]+}}(%r{{[sb]}}p), %rsi # 8-byte Reload
; APX-NEXT:    movq %rsi, (%rcx)
; APX-NEXT:    movq {{[-0-9]+}}(%r{{[sb]}}p), %rsi # 8-byte Reload
; APX-NEXT:    movq %rsi, 8(%rcx)
; APX-NEXT:    movq {{[-0-9]+}}(%r{{[sb]}}p), %rsi # 8-byte Reload
; APX-NEXT:    movq %rsi, 16(%rcx)
; APX-NEXT:    movq {{[-0-9]+}}(%r{{[sb]}}p), %rsi # 8-byte Reload
; APX-NEXT:    movq %rsi, 24(%rcx)
; APX-NEXT:    movq {{[-0-9]+}}(%r{{[sb]}}p), %rsi # 8-byte Reload
; APX-NEXT:    movq %rsi, 32(%rcx)
; APX-NEXT:    movq {{[-0-9]+}}(%r{{[sb]}}p), %rsi # 8-byte Reload
; APX-NEXT:    movq %rsi, 40(%rcx)
; APX-NEXT:    movq {{[-0-9]+}}(%r{{[sb]}}p), %rsi # 8-byte Reload
; APX-NEXT:    movq %rsi, 48(%rcx)
; APX-NEXT:    movq {{[-0-9]+}}(%r{{[sb]}}p), %rsi # 8-byte Reload
; APX-NEXT:    movq %rsi, 56(%rcx)
; APX-NEXT:    movq %r23, 64(%rcx)
; APX-NEXT:    movq %r28, 72(%rcx)
; APX-NEXT:    movq %r30, 80(%rcx)
; APX-NEXT:    movq %r24, 88(%rcx)
; APX-NEXT:    movq %r8, 96(%rcx)
; APX-NEXT:    movq %r10, 104(%rcx)
; APX-NEXT:    movq %rax, 112(%rcx)
; APX-NEXT:    movq %rdx, 120(%rcx)
; APX-NEXT:    addq $120, %rsp
; APX-NEXT:    popq %rbx
; APX-NEXT:    popq %r12
; APX-NEXT:    popq %r13
; APX-NEXT:    popq %r14
; APX-NEXT:    popq %r15
; APX-NEXT:    popq %rbp
; APX-NEXT:    retq
  %av = load i1024, ptr %a
  %bv = load i1024, ptr %b
  %r = mul i1024 %av, %bv
  store i1024 %r, ptr %out
  ret void
}
