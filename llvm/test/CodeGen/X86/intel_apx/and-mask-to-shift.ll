; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 2
; REQUIRES: intel_feature_isa_apx_f
; RUN: llc < %s -mtriple=x86_64-unknown -mattr=+ndd | FileCheck %s
define i1 @shl64ri_LeadingZeros(i64 noundef %a) {
; CHECK-LABEL: shl64ri_LeadingZeros:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    shlq $49, %rdi, %rax
; CHECK-NEXT:    sete %al
; CHECK-NEXT:    retq
entry:
  %and = and i64 %a, 32767
  %cmp = icmp eq i64 %and, 0
  ret i1 %cmp
}

define i1 @shr64ri_TrailingZeros(i64 noundef %a) {
; CHECK-LABEL: shr64ri_TrailingZeros:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    shrq $56, %rdi, %rax
; CHECK-NEXT:    sete %al
; CHECK-NEXT:    retq
entry:
  %and = and i64 %a, -72057594037927936
  %cmp = icmp eq i64 %and, 0
  ret i1 %cmp
}

define i1 @shr64ri_MidOnes8(i64 noundef %a) {
; CHECK-LABEL: shr64ri_MidOnes8:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    shrq $55, %rdi, %rax
; CHECK-NEXT:    testb %al, %al
; CHECK-NEXT:    sete %al
; CHECK-NEXT:    retq
entry:
  %and = and i64 %a, 9187343239835811840;7F80000000000000
  %cmp = icmp eq i64 %and, 0
  ret i1 %cmp
}

define i1 @shr64ri_MidOnes16(i64 noundef %a) {
; CHECK-LABEL: shr64ri_MidOnes16:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    shrq $47, %rdi, %rax
; CHECK-NEXT:    testw %ax, %ax
; CHECK-NEXT:    sete %al
; CHECK-NEXT:    retq
entry:
  %and = and i64 %a, 9223231299366420480;7FFF800000000000
  %cmp = icmp eq i64 %and, 0
  ret i1 %cmp
}

define i1 @shr64ri_MidOnes32(i64 noundef %a) {
; CHECK-LABEL: shr64ri_MidOnes32:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    shrq $31, %rdi, %rax
; CHECK-NEXT:    testl %eax, %eax
; CHECK-NEXT:    sete %al
; CHECK-NEXT:    retq
entry:
  %and = and i64 %a, 9223372034707292160;7FFFFFFF80000000
  %cmp = icmp eq i64 %and, 0
  ret i1 %cmp
}
