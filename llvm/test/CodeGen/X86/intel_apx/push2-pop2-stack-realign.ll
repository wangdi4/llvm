; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; REQUIRES: intel_feature_isa_apx_f
; RUN: llc < %s -mtriple=x86_64-unknown -mattr=+push2pop2  -stackrealign | FileCheck %s

define i32 @csr5_alloc16(ptr %argv) nounwind {
; CHECK-LABEL: csr5_alloc16:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    pushq %rbp
; CHECK-NEXT:    movq %rsp, %rbp
; CHECK-NEXT:    push2 $0, %r15, %r14, $0
; CHECK-NEXT:    push2 $0, %r13, %r12, $0
; CHECK-NEXT:    andq $-16, %rsp
; CHECK-NEXT:    subq $16, %rsp
; CHECK-NEXT:    #APP
; CHECK-NEXT:    #NO_APP
; CHECK-NEXT:    xorl %ecx, %ecx
; CHECK-NEXT:    xorl %eax, %eax
; CHECK-NEXT:    callq *%rcx
; CHECK-NEXT:    leaq -32(%rbp), %rsp
; CHECK-NEXT:    pop2 $0, %r12, %r13, $0
; CHECK-NEXT:    pop2 $0, %r14, %r15, $0
; CHECK-NEXT:    popq %rbp
; CHECK-NEXT:    retq
entry:
  tail call void asm sideeffect "", "~{rbp},~{r15},~{r14},~{r13},~{r12},~{dirflag},~{fpsr},~{flags}"()
  %a = alloca [2 x ptr], align 8
  %b = call ptr (...) null()
  ret i32 undef
}
