; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -O3 -disable-peephole -verify-machineinstrs -mtriple=x86_64-unknown-unknown -mattr=+avx2 < %s | FileCheck %s

define <16 x i16> @test_gather(<16 x i16>* %0, i16* %map) {
; CHECK-LABEL: test_gather:
; CHECK:       # %bb.0:
; CHECK-NEXT:    movswq 16(%rdi), %rax
; CHECK-NEXT:    movzwl 65536(%rsi,%rax,2), %eax
; CHECK-NEXT:    vmovd %eax, %xmm0
; CHECK-NEXT:    movswq 18(%rdi), %rax
; CHECK-NEXT:    vpinsrw $1, 65536(%rsi,%rax,2), %xmm0, %xmm0
; CHECK-NEXT:    movswq 20(%rdi), %rax
; CHECK-NEXT:    vpinsrw $2, 65536(%rsi,%rax,2), %xmm0, %xmm0
; CHECK-NEXT:    movswq 22(%rdi), %rax
; CHECK-NEXT:    vpinsrw $3, 65536(%rsi,%rax,2), %xmm0, %xmm0
; CHECK-NEXT:    movswq 24(%rdi), %rax
; CHECK-NEXT:    vpinsrw $4, 65536(%rsi,%rax,2), %xmm0, %xmm0
; CHECK-NEXT:    movswq 26(%rdi), %rax
; CHECK-NEXT:    vpinsrw $5, 65536(%rsi,%rax,2), %xmm0, %xmm0
; CHECK-NEXT:    movswq 28(%rdi), %rax
; CHECK-NEXT:    vpinsrw $6, 65536(%rsi,%rax,2), %xmm0, %xmm0
; CHECK-NEXT:    movswq 30(%rdi), %rax
; CHECK-NEXT:    vpinsrw $7, 65536(%rsi,%rax,2), %xmm0, %xmm0
; CHECK-NEXT:    movswq (%rdi), %rax
; CHECK-NEXT:    movzwl 65536(%rsi,%rax,2), %eax
; CHECK-NEXT:    vmovd %eax, %xmm1
; CHECK-NEXT:    movswq 2(%rdi), %rax
; CHECK-NEXT:    vpinsrw $1, 65536(%rsi,%rax,2), %xmm1, %xmm1
; CHECK-NEXT:    movswq 4(%rdi), %rax
; CHECK-NEXT:    vpinsrw $2, 65536(%rsi,%rax,2), %xmm1, %xmm1
; CHECK-NEXT:    movswq 6(%rdi), %rax
; CHECK-NEXT:    vpinsrw $3, 65536(%rsi,%rax,2), %xmm1, %xmm1
; CHECK-NEXT:    movswq 8(%rdi), %rax
; CHECK-NEXT:    vpinsrw $4, 65536(%rsi,%rax,2), %xmm1, %xmm1
; CHECK-NEXT:    movswq 10(%rdi), %rax
; CHECK-NEXT:    vpinsrw $5, 65536(%rsi,%rax,2), %xmm1, %xmm1
; CHECK-NEXT:    movswq 12(%rdi), %rax
; CHECK-NEXT:    vpinsrw $6, 65536(%rsi,%rax,2), %xmm1, %xmm1
; CHECK-NEXT:    movswq 14(%rdi), %rax
; CHECK-NEXT:    vpinsrw $7, 65536(%rsi,%rax,2), %xmm1, %xmm1
; CHECK-NEXT:    vinserti128 $1, %xmm0, %ymm1, %ymm0
; CHECK-NEXT:    retq
  %.splatinsert46 = insertelement <16 x i16*> poison, i16* %map, i32 0
  %.splat47 = shufflevector <16 x i16*> %.splatinsert46, <16 x i16*> poison, <16 x i32> zeroinitializer
  %ld = load <16 x i16>, <16 x i16>* %0, align 2
  %2 = sext <16 x i16> %ld to <16 x i64>
  %3 = add nsw <16 x i64> %2, <i64 32768, i64 32768, i64 32768, i64 32768, i64 32768, i64 32768, i64 32768, i64 32768, i64 32768, i64 32768, i64 32768, i64 32768, i64 32768, i64 32768, i64 32768, i64 32768>
  %4 = getelementptr inbounds i16, <16 x i16*> %.splat47, <16 x i64> %3
  %5 = call <16 x i16> @llvm.masked.gather.v16i16.v16p0i16(<16 x i16*> %4, i32 2, <16 x i1> <i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true, i1 true>, <16 x i16> undef)
  ret <16 x i16> %5
}

; Function Attrs: nofree nosync nounwind readonly willreturn
declare <16 x i16> @llvm.masked.gather.v16i16.v16p0i16(<16 x i16*>, i32, <16 x i1>, <16 x i16>)

