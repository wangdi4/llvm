; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc  < %s -mtriple=x86_64-unknown-unknown -mattr=+avx512f | FileCheck %s --check-prefix=CHECK-AVX512F
; RUN: llc  < %s -mtriple=x86_64-unknown-unknown -mattr=+avx512dq | FileCheck %s --check-prefix=CHECK-AVX512DQ

define zeroext i8 @test_regression_test1(<4 x i64> %__a, <4 x i64> %__b) local_unnamed_addr #0 {
; CHECK-AVX512F-LABEL: test_regression_test1:
; CHECK-AVX512F:       # %bb.0: # %entry
; CHECK-AVX512F-NEXT:    # kill: def $ymm1 killed $ymm1 def $zmm1
; CHECK-AVX512F-NEXT:    # kill: def $ymm0 killed $ymm0 def $zmm0
; CHECK-AVX512F-NEXT:    vpcmpeqq %zmm1, %zmm0, %k1
; CHECK-AVX512F-NEXT:    vpternlogq $255, %zmm0, %zmm0, %zmm0 {%k1} {z}
; CHECK-AVX512F-NEXT:    vptestmd %zmm0, %zmm0, %k0
; CHECK-AVX512F-NEXT:    kmovw %k0, %eax
; CHECK-AVX512F-NEXT:    # kill: def $al killed $al killed $eax
; CHECK-AVX512F-NEXT:    vzeroupper
; CHECK-AVX512F-NEXT:    retq
;
; CHECK-AVX512DQ-LABEL: test_regression_test1:
; CHECK-AVX512DQ:       # %bb.0: # %entry
; CHECK-AVX512DQ-NEXT:    # kill: def $ymm1 killed $ymm1 def $zmm1
; CHECK-AVX512DQ-NEXT:    # kill: def $ymm0 killed $ymm0 def $zmm0
; CHECK-AVX512DQ-NEXT:    vpcmpeqq %zmm1, %zmm0, %k0
; CHECK-AVX512DQ-NEXT:    vpmovm2q %k0, %zmm0
; CHECK-AVX512DQ-NEXT:    vpmovd2m %zmm0, %k0
; CHECK-AVX512DQ-NEXT:    kmovw %k0, %eax
; CHECK-AVX512DQ-NEXT:    # kill: def $al killed $al killed $eax
; CHECK-AVX512DQ-NEXT:    vzeroupper
; CHECK-AVX512DQ-NEXT:    retq
entry:
  %0 = icmp eq <4 x i64> %__a, %__b
  %1 = shufflevector <4 x i1> %0, <4 x i1> undef, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>
  %2 = bitcast <8 x i1> %1 to i8
  ret i8 %2
}

