; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=x86_64-unknown-linux < %s | FileCheck %s --check-prefix=NO-SPILL
; RUN: llc -mtriple=x86_64-unknown-linux < %s -intel-spill-parms | FileCheck %s --check-prefix=SPILL

define i32 @foo(i32 %a, float %b, i32 %c, i32* %d) uwtable {
; NO-SPILL-LABEL: foo:
; NO-SPILL:       # %bb.0: # %entry
; NO-SPILL-NEXT:    cvttss2si %xmm0, %eax
; NO-SPILL-NEXT:    imull %eax, %edi
; NO-SPILL-NEXT:    addl %esi, %edi
; NO-SPILL-NEXT:    subl (%rdx), %edi
; NO-SPILL-NEXT:    jmp foo@PLT # TAILCALL
;
; SPILL-LABEL: foo:
; SPILL:       # %bb.0: # %entry
; SPILL-NEXT:    pushq %rdx
; SPILL-NEXT:    .cfi_def_cfa_offset 16
; SPILL-NEXT:    pushq %rsi
; SPILL-NEXT:    .cfi_def_cfa_offset 24
; SPILL-NEXT:    pushq %rdi
; SPILL-NEXT:    .cfi_def_cfa_offset 32
; SPILL-NEXT:    .cfi_offset %rdi, -32
; SPILL-NEXT:    .cfi_offset %rsi, -24
; SPILL-NEXT:    .cfi_offset %rdx, -16
; SPILL-NEXT:    cvttss2si %xmm0, %eax
; SPILL-NEXT:    imull %eax, %edi
; SPILL-NEXT:    addl %esi, %edi
; SPILL-NEXT:    subl (%rdx), %edi
; SPILL-NEXT:    popq %rax
; SPILL-NEXT:    .cfi_def_cfa_offset 24
; SPILL-NEXT:    popq %rax
; SPILL-NEXT:    .cfi_def_cfa_offset 16
; SPILL-NEXT:    popq %rax
; SPILL-NEXT:    .cfi_def_cfa_offset 8
; SPILL-NEXT:    jmp foo@PLT # TAILCALL
entry:
  %conv = fptosi float %b to i32
  %mul = mul nsw i32 %conv, %a
  %add = add nsw i32 %mul, %c
  %ldd = load i32, i32* %d
  %sub = sub i32 %add, %ldd
  %ret = tail call i32 @foo(i32 %sub, float %b, i32 %c, i32* %d)
  ret i32 %ret
}

define i32 @bar(i32 %a, float %b, i32 %c, i32* %d) uwtable {
; NO-SPILL-LABEL: bar:
; NO-SPILL:       # %bb.0: # %entry
; NO-SPILL-NEXT:    pushq %rax
; NO-SPILL-NEXT:    .cfi_def_cfa_offset 16
; NO-SPILL-NEXT:    callq foo@PLT
; NO-SPILL-NEXT:    popq %rcx
; NO-SPILL-NEXT:    .cfi_def_cfa_offset 8
; NO-SPILL-NEXT:    retq
;
; SPILL-LABEL: bar:
; SPILL:       # %bb.0: # %entry
; SPILL-NEXT:    pushq %rdx
; SPILL-NEXT:    .cfi_def_cfa_offset 16
; SPILL-NEXT:    pushq %rsi
; SPILL-NEXT:    .cfi_def_cfa_offset 24
; SPILL-NEXT:    pushq %rdi
; SPILL-NEXT:    .cfi_def_cfa_offset 32
; SPILL-NEXT:    .cfi_offset %rdi, -32
; SPILL-NEXT:    .cfi_offset %rsi, -24
; SPILL-NEXT:    .cfi_offset %rdx, -16
; SPILL-NEXT:    callq foo@PLT
; SPILL-NEXT:    popq %rcx
; SPILL-NEXT:    .cfi_def_cfa_offset 24
; SPILL-NEXT:    popq %rcx
; SPILL-NEXT:    .cfi_def_cfa_offset 16
; SPILL-NEXT:    popq %rcx
; SPILL-NEXT:    .cfi_def_cfa_offset 8
; SPILL-NEXT:    retq
entry:
  %call = call i32 @foo(i32 %a, float %b, i32 %c, i32* %d)
  ret i32 %call
}

define i32 @main(i32 %argc, i8** %argv) uwtable {
; NO-SPILL-LABEL: main:
; NO-SPILL:       # %bb.0: # %entry
; NO-SPILL-NEXT:    xorl %eax, %eax
; NO-SPILL-NEXT:    retq
;
; SPILL-LABEL: main:
; SPILL:       # %bb.0: # %entry
; SPILL-NEXT:    xorl %eax, %eax
; SPILL-NEXT:    retq
entry:
  ret i32 0
}
