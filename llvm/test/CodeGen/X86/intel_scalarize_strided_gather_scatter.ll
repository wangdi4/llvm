; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -O3 -disable-peephole -enable-intel-advanced-opts=true -verify-machineinstrs -mtriple=x86_64-unknown-unknown -mattr=+avx2 < %s | FileCheck %s

target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@a = external dso_local local_unnamed_addr global [1092056 x i8], align 16
@b = external dso_local local_unnamed_addr global [10240 x [10240 x i32]], align 16

; Function Attrs: mustprogress norecurse uwtable
define dso_local <2 x i32> @test_gather_0(i64 %offset) local_unnamed_addr {
; CHECK-LABEL: test_gather_0:
; CHECK:       # %bb.0: # %header
; CHECK-NEXT:    shlq $13, %rdi
; CHECK-NEXT:    vmovd {{.*#+}} xmm0 = mem[0],zero,zero,zero
; CHECK-NEXT:    vpinsrd $1, b+40960(%rdi,%rdi,4), %xmm0, %xmm0
; CHECK-NEXT:    retq
header:
  %.splatinsert55 = insertelement <2 x i64> poison, i64 0, i32 0
  %.splat56 = shufflevector <2 x i64> %.splatinsert55, <2 x i64> poison, <2 x i32> zeroinitializer
  %.splatinsert53 = insertelement <2 x i64> poison, i64 %offset, i32 0
  %.splat54 = shufflevector <2 x i64> %.splatinsert53, <2 x i64> poison, <2 x i32> zeroinitializer
  %0 = add <2 x i64> %.splat54, <i64 0, i64 1>
  %1 = getelementptr inbounds [10240 x [10240 x i32]], [10240 x [10240 x i32]]* @b, i64 0, <2 x i64> %0, <2 x i64> %.splat56
  %2 = call <2 x i32> @llvm.masked.gather.v2i32.v2p0i32(<2 x i32*> %1, i32 4, <2 x i1> <i1 true, i1 true>, <2 x i32> undef)
  ret <2 x i32> %2
}

; Function Attrs: mustprogress norecurse uwtable
define dso_local <2 x double> @test_gather_1(i64 %offset) local_unnamed_addr {
; CHECK-LABEL: test_gather_1:
; CHECK:       # %bb.0: # %header
; CHECK-NEXT:    imulq $1200, %rdi, %rax # imm = 0x4B0
; CHECK-NEXT:    vmovsd {{.*#+}} xmm0 = mem[0],zero
; CHECK-NEXT:    vmovhps {{.*#+}} xmm0 = xmm0[0,1],mem[0,1]
; CHECK-NEXT:    retq
header:
  %i_vec = insertelement <2 x i64> poison, i64 %offset, i64 0
  %splat = shufflevector <2 x i64> %i_vec, <2 x i64> poison, <2 x i32> zeroinitializer
  %add = add <2 x i64> %splat, <i64 0, i64 1>
  %index = mul nuw nsw <2 x i64> %add, <i64 150, i64 150>
  %gep = getelementptr inbounds double, double* bitcast (i8* getelementptr inbounds ([1092056 x i8], [1092056 x i8]* @a, i64 0, i64 360000) to double*), <2 x i64> %index
  %ret = call <2 x double> @llvm.masked.gather.v2f64.v2p0f64(<2 x double*> %gep, i32 4, <2 x i1> <i1 true, i1 true>, <2 x double> undef)
  ret <2 x double> %ret
}

; Function Attrs: mustprogress norecurse uwtable
define dso_local <2 x double> @test_gather_2(i64 %offset, i64 %offset2) local_unnamed_addr {
; CHECK-LABEL: test_gather_2:
; CHECK:       # %bb.0: # %header
; CHECK-NEXT:    imulq $1200, %rdi, %rax # imm = 0x4B0
; CHECK-NEXT:    vmovsd {{.*#+}} xmm0 = mem[0],zero
; CHECK-NEXT:    vmovhps {{.*#+}} xmm0 = xmm0[0,1],mem[0,1]
; CHECK-NEXT:    retq
header:
  %i_vec = insertelement <2 x i64> poison, i64 %offset, i64 0
  %splat = shufflevector <2 x i64> %i_vec, <2 x i64> poison, <2 x i32> zeroinitializer
  %add = add <2 x i64> %splat, <i64 0, i64 1>
  %index = mul nuw nsw <2 x i64> %add, <i64 150, i64 150>
  %gep = getelementptr inbounds double, double* bitcast (i8* getelementptr inbounds ([1092056 x i8], [1092056 x i8]* @a, i64 0, i64 360000) to double*), <2 x i64> %index
  %i2_vec = insertelement <2 x i64> poison, i64 %offset2, i64 0
  %splat2 = shufflevector <2 x i64> %i2_vec, <2 x i64> poison, <2 x i32> zeroinitializer
  %gep2 = getelementptr inbounds double, <2 x double*> %gep, <2 x i64> %splat2
  %ret = call <2 x double> @llvm.masked.gather.v2f64.v2p0f64(<2 x double*> %gep2, i32 4, <2 x i1> <i1 true, i1 true>, <2 x double> undef)
  ret <2 x double> %ret
}

define dso_local void @test_scatter(i64 %offset, <2 x i32> %data) local_unnamed_addr {
; CHECK-LABEL: test_scatter:
; CHECK:       # %bb.0: # %header
; CHECK-NEXT:    shlq $13, %rdi
; CHECK-NEXT:    vmovss %xmm0, b(%rdi,%rdi,4)
; CHECK-NEXT:    vextractps $1, %xmm0, b-40960(%rdi,%rdi,4)
; CHECK-NEXT:    retq
header:
  %.splatinsert55 = insertelement <2 x i64> poison, i64 0, i32 0
  %.splat56 = shufflevector <2 x i64> %.splatinsert55, <2 x i64> poison, <2 x i32> zeroinitializer
  %.splatinsert53 = insertelement <2 x i64> poison, i64 %offset, i32 0
  %.splat54 = shufflevector <2 x i64> %.splatinsert53, <2 x i64> poison, <2 x i32> zeroinitializer
  %0 = sub <2 x i64> %.splat54, <i64 0, i64 1>
  %1 = getelementptr inbounds [10240 x [10240 x i32]], [10240 x [10240 x i32]]* @b, i64 0, <2 x i64> %0, <2 x i64> %.splat56
  call void @llvm.masked.scatter.v2i32.v2p0i32(<2 x i32> %data, <2 x i32*> %1, i32 4, <2 x i1> <i1 true, i1 true>)
  ret void
}

; Function Attrs: nofree nosync nounwind readonly willreturn
declare <2 x i32> @llvm.masked.gather.v2i32.v2p0i32(<2 x i32*>, i32 immarg, <2 x i1>, <2 x i32>)
; Function Attrs: nofree nosync nounwind readonly willreturn
declare <2 x double> @llvm.masked.gather.v2f64.v2p0f64(<2 x double*>, i32 immarg, <2 x i1>, <2 x double>)

declare void @llvm.masked.scatter.v2i32.v2p0i32(<2 x i32>, <2 x i32*>, i32, <2 x i1>)
