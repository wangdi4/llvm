; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; REQUIRES: intel_feature_isa_amx_memadvise
; RUN: llc < %s -O0 -mtriple=x86_64-unknown-unknown -mattr=+amx-tile,+amx-memadvise | FileCheck %s

define void @test_amx(i8* %base, i64 %stride){
; CHECK-LABEL: test_amx:
; CHECK:       # %bb.0:
; CHECK-NEXT:    tmovadvise $16, (%rdi,%rsi), %tmm5
; CHECK-NEXT:    tmovadvise $32, %tmm7, (%rdi,%rsi)
; CHECK-NEXT:    tilerelease
; CHECK-NEXT:    retq
call void @llvm.x86.tmovadvise.load(i8 5, i8* %base, i64 %stride, i8 16)

call void @llvm.x86.tmovadvise.store(i8* %base, i64 %stride, i8 7, i8 32)
ret void
}
declare void @llvm.x86.tmovadvise.load(i8 %tile0, i8* %base, i64 %stride, i8 %imm)
declare void @llvm.x86.tmovadvise.store(i8* %base, i64 %stride, i8 %tile0, i8 %imm)

define void @test_t2rpntlvwz0advise(i8 * %A, i64 %B) {
; CHECK-LABEL: test_t2rpntlvwz0advise:
; CHECK:       # %bb.0:
; CHECK-NEXT:    t2rpntlvwz0advise $127, (%rdi,%rsi), %tmm0
; CHECK-NEXT:    retq
  call void @llvm.x86.t2rpntlvwz0advise(i8 1, i8 * %A, i64 %B, i32 127)
  ret  void
}
declare void @llvm.x86.t2rpntlvwz0advise(i8 %A, i8 * %B, i64 %C, i32 %D)

define void @test_t2rpntlvwz1advise(i8 * %A, i64 %B) {
; CHECK-LABEL: test_t2rpntlvwz1advise:
; CHECK:       # %bb.0:
; CHECK-NEXT:    t2rpntlvwz1advise $127, (%rdi,%rsi), %tmm0
; CHECK-NEXT:    retq
  call void @llvm.x86.t2rpntlvwz1advise(i8 1, i8 * %A, i64 %B, i32 127)
  ret  void
}
declare void @llvm.x86.t2rpntlvwz1advise(i8 %A, i8 * %B, i64 %C, i32 %D)
