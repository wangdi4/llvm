; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 2
; RUN: llc -mtriple=x86_64-unknown-linux-gnu -O3 < %s | FileCheck %s

define float @log(float %a) nounwind {
; CHECK-LABEL: log:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    pushq %rax
; CHECK-NEXT:    callq *__svml_logf1@GOTPCREL(%rip)
; CHECK-NEXT:    popq %rax
; CHECK-NEXT:    retq
entry:
  %0 = tail call fast float @llvm.log.f32(float %a)
  ret float %0
}

define float @log2(float %a) nounwind {
; CHECK-LABEL: log2:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    pushq %rax
; CHECK-NEXT:    callq *__svml_log2f1@GOTPCREL(%rip)
; CHECK-NEXT:    popq %rax
; CHECK-NEXT:    retq
entry:
  %0 = tail call fast float @llvm.log2.f32(float %a)
  ret float %0
}

define float @log10(float %a) nounwind {
; CHECK-LABEL: log10:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    pushq %rax
; CHECK-NEXT:    callq *__svml_log10f1@GOTPCREL(%rip)
; CHECK-NEXT:    popq %rax
; CHECK-NEXT:    retq
entry:
  %0 = tail call fast float @llvm.log10.f32(float %a)
  ret float %0
}

define float @exp(float %a) nounwind {
; CHECK-LABEL: exp:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    pushq %rax
; CHECK-NEXT:    callq *__svml_expf1@GOTPCREL(%rip)
; CHECK-NEXT:    popq %rax
; CHECK-NEXT:    retq
entry:
  %0 = tail call fast float @llvm.exp.f32(float %a)
  ret float %0
}

define float @exp2(float %a) nounwind {
; CHECK-LABEL: exp2:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    pushq %rax
; CHECK-NEXT:    callq *__svml_exp2f1@GOTPCREL(%rip)
; CHECK-NEXT:    popq %rax
; CHECK-NEXT:    retq
entry:
  %0 = tail call fast float @llvm.exp2.f32(float %a)
  ret float %0
}

declare float @llvm.exp.f32(float)
declare float @llvm.exp2.f32(float)

declare float @llvm.log.f32(float)
declare float @llvm.log2.f32(float)
declare float @llvm.log10.f32(float)

