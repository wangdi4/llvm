; INTEL_FEATURE_ISA_BF16_BASE
; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; REQUIRES: intel_feature_isa_bf16_base
; RUN: llc < %s -mtriple=x86_64-unknown-unknown -mattr=+avx512fp16,+avx512vl | FileCheck %s --check-prefix=AVX512FP16-X64
; RUN: llc < %s -mtriple=i686-unknown-unknown -mattr=+avx512fp16,+avx512vl | FileCheck %s --check-prefix=AVX512FP16-X86

; This test checks that only a single jne gets generated in the final code
; for lowering the CMOV pseudos that get created for this IR.
define dso_local <32 x bfloat> @foo3(<32 x bfloat> %a, <32 x bfloat> %b, i1 zeroext %sign) local_unnamed_addr #0 {
; AVX512FP16-X64-LABEL: foo3:
; AVX512FP16-X64:       # %bb.0: # %entry
; AVX512FP16-X64-NEXT:    testl %edi, %edi
; AVX512FP16-X64-NEXT:    jne .LBB0_2
; AVX512FP16-X64-NEXT:  # %bb.1: # %entry
; AVX512FP16-X64-NEXT:    vmovaps %zmm1, %zmm0
; AVX512FP16-X64-NEXT:  .LBB0_2: # %entry
; AVX512FP16-X64-NEXT:    retq
;
; AVX512FP16-X86-LABEL: foo3:
; AVX512FP16-X86:       # %bb.0: # %entry
; AVX512FP16-X86-NEXT:    cmpb $0, {{[0-9]+}}(%esp)
; AVX512FP16-X86-NEXT:    jne .LBB0_2
; AVX512FP16-X86-NEXT:  # %bb.1: # %entry
; AVX512FP16-X86-NEXT:    vmovaps %zmm1, %zmm0
; AVX512FP16-X86-NEXT:  .LBB0_2: # %entry
; AVX512FP16-X86-NEXT:    retl
entry:
  %spec.select = select i1 %sign, <32 x bfloat> %a, <32 x bfloat> %b
  ret <32 x bfloat> %spec.select
}

; This test checks that only a single jne gets generated in the final code
; for lowering the CMOV pseudos that get created for this IR.
define dso_local <16 x bfloat> @foo4(<16 x bfloat> %a, <16 x bfloat> %b, i1 zeroext %sign) local_unnamed_addr #0 {
; AVX512FP16-X64-LABEL: foo4:
; AVX512FP16-X64:       # %bb.0: # %entry
; AVX512FP16-X64-NEXT:    testl %edi, %edi
; AVX512FP16-X64-NEXT:    jne .LBB1_2
; AVX512FP16-X64-NEXT:  # %bb.1: # %entry
; AVX512FP16-X64-NEXT:    vmovaps %ymm1, %ymm0
; AVX512FP16-X64-NEXT:  .LBB1_2: # %entry
; AVX512FP16-X64-NEXT:    retq
;
; AVX512FP16-X86-LABEL: foo4:
; AVX512FP16-X86:       # %bb.0: # %entry
; AVX512FP16-X86-NEXT:    cmpb $0, {{[0-9]+}}(%esp)
; AVX512FP16-X86-NEXT:    jne .LBB1_2
; AVX512FP16-X86-NEXT:  # %bb.1: # %entry
; AVX512FP16-X86-NEXT:    vmovaps %ymm1, %ymm0
; AVX512FP16-X86-NEXT:  .LBB1_2: # %entry
; AVX512FP16-X86-NEXT:    retl
entry:
  %spec.select = select i1 %sign, <16 x bfloat> %a, <16 x bfloat> %b
  ret <16 x bfloat> %spec.select
}

; This test checks that only a single jne gets generated in the final code
; for lowering the CMOV pseudos that get created for this IR.
define dso_local <8 x bfloat> @foo5(<8 x bfloat> %a, <8 x bfloat> %b, i1 zeroext %sign) local_unnamed_addr #0 {
; AVX512FP16-X64-LABEL: foo5:
; AVX512FP16-X64:       # %bb.0: # %entry
; AVX512FP16-X64-NEXT:    testl %edi, %edi
; AVX512FP16-X64-NEXT:    jne .LBB2_2
; AVX512FP16-X64-NEXT:  # %bb.1: # %entry
; AVX512FP16-X64-NEXT:    vmovaps %xmm1, %xmm0
; AVX512FP16-X64-NEXT:  .LBB2_2: # %entry
; AVX512FP16-X64-NEXT:    retq
;
; AVX512FP16-X86-LABEL: foo5:
; AVX512FP16-X86:       # %bb.0: # %entry
; AVX512FP16-X86-NEXT:    cmpb $0, {{[0-9]+}}(%esp)
; AVX512FP16-X86-NEXT:    jne .LBB2_2
; AVX512FP16-X86-NEXT:  # %bb.1: # %entry
; AVX512FP16-X86-NEXT:    vmovaps %xmm1, %xmm0
; AVX512FP16-X86-NEXT:  .LBB2_2: # %entry
; AVX512FP16-X86-NEXT:    retl
entry:
  %spec.select = select i1 %sign, <8 x bfloat> %a, <8 x bfloat> %b
  ret <8 x bfloat> %spec.select
}
; end INTEL_FEATURE_ISA_BF16_BASE
