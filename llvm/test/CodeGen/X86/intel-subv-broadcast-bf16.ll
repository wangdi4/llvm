; INTEL_FEATURE_ISA_BF16_BASE
; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; REQUIRES: intel_feature_isa_bf16_base
; RUN: llc < %s -mtriple=x86_64-apple-darwin -mcpu=skx -mattr=+avx512fp16 | FileCheck %s

define dso_local void @test_v8bf16_v32bf16(<8 x bfloat>* %x_addr, <32 x bfloat>* %y_addr) {
; CHECK-LABEL: test_v8bf16_v32bf16:
; CHECK:       ## %bb.0: ## %entry
; CHECK-NEXT:    vbroadcastf32x4 {{.*#+}} zmm0 = mem[0,1,2,3,0,1,2,3,0,1,2,3,0,1,2,3]
; CHECK-NEXT:    vmovdqa64 %zmm0, (%rsi)
; CHECK-NEXT:    vzeroupper
; CHECK-NEXT:    retq
entry:
  %0 = load <8 x bfloat>, <8 x bfloat>* %x_addr, align 16
  %shuffle.i58 = shufflevector <8 x bfloat> %0, <8 x bfloat> %0, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  store <32 x bfloat> %shuffle.i58, <32 x bfloat>* %y_addr, align 64
  ret void
}

define dso_local void @test_v8bf16_v16bf16(<8 x bfloat>* %x_addr, <16 x bfloat>* %y_addr) {
; CHECK-LABEL: test_v8bf16_v16bf16:
; CHECK:       ## %bb.0: ## %entry
; CHECK-NEXT:    vbroadcastf128 {{.*#+}} ymm0 = mem[0,1,0,1]
; CHECK-NEXT:    vmovdqa %ymm0, (%rsi)
; CHECK-NEXT:    vzeroupper
; CHECK-NEXT:    retq
entry:
  %0 = load <8 x bfloat>, <8 x bfloat>* %x_addr, align 16
  %shuffle.i58 = shufflevector <8 x bfloat> %0, <8 x bfloat> %0, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  store <16 x bfloat> %shuffle.i58, <16 x bfloat>* %y_addr, align 64
  ret void
}

define dso_local void @test_v16bf16_v32bf16(<16 x bfloat>* %x_addr, <32 x bfloat>* %y_addr) {
; CHECK-LABEL: test_v16bf16_v32bf16:
; CHECK:       ## %bb.0: ## %entry
; CHECK-NEXT:    vbroadcastf64x4 {{.*#+}} zmm0 = mem[0,1,2,3,0,1,2,3]
; CHECK-NEXT:    vmovdqa64 %zmm0, (%rsi)
; CHECK-NEXT:    vzeroupper
; CHECK-NEXT:    retq
entry:
  %0 = load <16 x bfloat>, <16 x bfloat>* %x_addr, align 16
  %shuffle.i58 = shufflevector <16 x bfloat> %0, <16 x bfloat> %0, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  store <32 x bfloat> %shuffle.i58, <32 x bfloat>* %y_addr, align 64
  ret void
}
; end INTEL_FEATURE_ISA_BF16_BASE
