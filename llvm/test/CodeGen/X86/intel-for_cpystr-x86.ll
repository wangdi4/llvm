; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=i386-unknown-linux-gnu < %s | FileCheck %s

define void @for_cpystr_libcall_test_x86(i8* %dst, i32 %dstlen, i8 *%src, i32 %srclen, i32 %padding) {
; CHECK-LABEL: for_cpystr_libcall_test_x86:
; CHECK:       # %bb.0:
; CHECK-NEXT:    subl $24, %esp
; CHECK-NEXT:    .cfi_adjust_cfa_offset 24
; CHECK-NEXT:    pushl {{[0-9]+}}(%esp)
; CHECK-NEXT:    .cfi_adjust_cfa_offset 4
; CHECK-NEXT:    pushl {{[0-9]+}}(%esp)
; CHECK-NEXT:    .cfi_adjust_cfa_offset 4
; CHECK-NEXT:    pushl {{[0-9]+}}(%esp)
; CHECK-NEXT:    .cfi_adjust_cfa_offset 4
; CHECK-NEXT:    pushl {{[0-9]+}}(%esp)
; CHECK-NEXT:    .cfi_adjust_cfa_offset 4
; CHECK-NEXT:    pushl {{[0-9]+}}(%esp)
; CHECK-NEXT:    .cfi_adjust_cfa_offset 4
; CHECK-NEXT:    calll for_cpystr
; CHECK-NEXT:    addl $44, %esp
; CHECK-NEXT:    .cfi_adjust_cfa_offset -44
; CHECK-NEXT:    retl
  call void @llvm.for.cpystr.i32.i32.i32(i8 *%dst, i32 %dstlen, i8 *%src, i32 %srclen, i32 %padding)
  ret void
}

declare void @llvm.for.cpystr.i32.i32.i32(i8 *, i32, i8 *, i32, i32)
