# REQUIRES: intel_feature_isa_apx_f
## NOTE: This file needs to be updated after promoted instruction is supported
# RUN: llvm-mc -triple x86_64 -show-encoding %s | FileCheck %s

## MRMDestMem

# CHECK: vextractf32x4	$1, %zmm0, (%r16,%r17)
# CHECK: encoding: [0x62,0xfb,0x79,0x48,0x19,0x04,0x08,0x01]
         vextractf32x4	$1, %zmm0, (%r16,%r17)

# CHECK: shldl	%cl, %r16d, 127(%r17d), %r18d
# CHECK: encoding: [0x67,0x62,0xec,0x6c,0x10,0xa5,0x41,0x7f]
         shldl	%cl, %r16d, 127(%r17d), %r18d

# CHECK: shldl	%cl, %r16d, 291(%r17d), %r18d
# CHECK: encoding: [0x67,0x62,0xec,0x6c,0x10,0xa5,0x81,0x23,0x01,0x00,0x00]
         shldl	%cl, %r16d, 291(%r17d), %r18d

# CHECK: {evex} shldl	%cl, %r16d, 127(%r17d)
# CHECK: encoding: [0x67,0x62,0xec,0x7c,0x08,0xa5,0x41,0x7f]
         {evex} shldl	%cl, %r16d, 127(%r17d)

## MRMDestMemCC

# CHECK: cfcmovbq	%r9, 123(%r8,%rax,4)
# CHECK: encoding: [0x62,0x54,0xfc,0x0c,0x42,0x4c,0x80,0x7b]
         cfcmovbq	%r9, 123(%r8,%rax,4)

## MRMSrcMem

# CHECK: vbroadcasti32x4	(%r16,%r17), %zmm0
# CHECK: encoding: [0x62,0xfa,0x79,0x48,0x5a,0x04,0x08]
         vbroadcasti32x4	(%r16,%r17), %zmm0

# CHECK: addq	127(%r16), %r17, %r18
# CHECK: encoding: [0x62,0xec,0xec,0x10,0x03,0x48,0x7f]
         addq	127(%r16), %r17, %r18

# CHECK: addq	291(%r16), %r17, %r18
# CHECK: encoding: [0x62,0xec,0xec,0x10,0x03,0x88,0x23,0x01,0x00,0x00]
         addq	291(%r16), %r17, %r18

# CHECK: {evex} addq	127(%r16), %r17
# CHECK: encoding: [0x62,0xec,0xfc,0x08,0x03,0x48,0x7f]
         {evex} addq	127(%r16), %r17

## MRMSrcMemCC

# CHECK: cfcmovbq	123(%r8,%rax,4), %r9
# CHECK: encoding: [0x62,0x54,0xfc,0x08,0x42,0x4c,0x80,0x7b]
         cfcmovbq	123(%r8,%rax,4), %r9

# CHECK: cfcmovbq	123(%r8,%rax,4), %r9, %r15
# CHECK: encoding: [0x62,0x54,0x84,0x1c,0x42,0x4c,0x80,0x7b]
         cfcmovbq	123(%r8,%rax,4), %r9, %r15

## MRM0m

# CHECK: vprorq	$0, (%r16,%r17), %zmm0
# CHECK: encoding: [0x62,0xf9,0xf9,0x48,0x72,0x04,0x08,0x00]
         vprorq	$0, (%r16,%r17), %zmm0

# CHECK: roll	%cl, 127(%r16d), %r17d
# CHECK: encoding: [0x67,0x62,0xfc,0x74,0x10,0xd3,0x40,0x7f]
         roll	%cl, 127(%r16d), %r17d

# CHECK: roll	%cl, 291(%r16d), %r17d
# CHECK: encoding: [0x67,0x62,0xfc,0x74,0x10,0xd3,0x80,0x23,0x01,0x00,0x00]
         roll	%cl, 291(%r16d), %r17d

# CHECK: {evex} roll	%cl, 127(%r16d)
# CHECK: encoding: [0x67,0x62,0xfc,0x7c,0x08,0xd3,0x40,0x7f]
         {evex} roll	%cl, 127(%r16d)

## MRM1m

# CHECK: vprolq	$0, (%r16,%r17), %zmm0
# CHECK: encoding: [0x62,0xf9,0xf9,0x48,0x72,0x0c,0x08,0x00]
         vprolq	$0, (%r16,%r17), %zmm0

# CHECK: rorl	%cl, 127(%r16d), %r17d
# CHECK: encoding: [0x67,0x62,0xfc,0x74,0x10,0xd3,0x48,0x7f]
         rorl	%cl, 127(%r16d), %r17d

# CHECK: rorl	%cl, 291(%r16d), %r17d
# CHECK: encoding: [0x67,0x62,0xfc,0x74,0x10,0xd3,0x88,0x23,0x01,0x00,0x00]
         rorl	%cl, 291(%r16d), %r17d

# CHECK: {evex} rorl	%cl, 127(%r16d)
# CHECK: encoding: [0x67,0x62,0xfc,0x7c,0x08,0xd3,0x48,0x7f]
         {evex} rorl	%cl, 127(%r16d)

## MRM2m

# CHECK: vpsrlq	$0, (%r16,%r17), %zmm0
# CHECK: encoding: [0x62,0xf9,0xf9,0x48,0x73,0x14,0x08,0x00]
         vpsrlq	$0, (%r16,%r17), %zmm0

# CHECK: rcll	%cl, 127(%r16d), %r17d
# CHECK: encoding: [0x67,0x62,0xfc,0x74,0x10,0xd3,0x50,0x7f]
         rcll	%cl, 127(%r16d), %r17d

# CHECK: rcll	%cl, 291(%r16d), %r17d
# CHECK: encoding: [0x67,0x62,0xfc,0x74,0x10,0xd3,0x90,0x23,0x01,0x00,0x00]
         rcll	%cl, 291(%r16d), %r17d

# CHECK: {evex} rcll	%cl, 127(%r16d)
# CHECK: encoding: [0x67,0x62,0xfc,0x7c,0x08,0xd3,0x50,0x7f]
         {evex} rcll	%cl, 127(%r16d)

## MRM3m

# CHECK: vpsrldq	$0, (%r16,%r17), %zmm0
# CHECK: encoding: [0x62,0xf9,0x79,0x48,0x73,0x1c,0x08,0x00]
         vpsrldq	$0, (%r16,%r17), %zmm0

# CHECK: rcrl	%cl, 127(%r16d), %r17d
# CHECK: encoding: [0x67,0x62,0xfc,0x74,0x10,0xd3,0x58,0x7f]
         rcrl	%cl, 127(%r16d), %r17d

# CHECK: rcrl	%cl, 291(%r16d), %r17d
# CHECK: encoding: [0x67,0x62,0xfc,0x74,0x10,0xd3,0x98,0x23,0x01,0x00,0x00]
         rcrl	%cl, 291(%r16d), %r17d

# CHECK: {evex} rcrl	%cl, 127(%r16d)
# CHECK: encoding: [0x67,0x62,0xfc,0x7c,0x08,0xd3,0x58,0x7f]
         {evex} rcrl	%cl, 127(%r16d)

## MRM4m

# CHECK: vpsraq	$0, (%r16,%r17), %zmm0
# CHECK: encoding: [0x62,0xf9,0xf9,0x48,0x72,0x24,0x08,0x00]
         vpsraq	$0, (%r16,%r17), %zmm0

# CHECK: shll	%cl, 127(%r16d), %r17d
# CHECK: encoding: [0x67,0x62,0xfc,0x74,0x10,0xd3,0x60,0x7f]
         shll	%cl, 127(%r16d), %r17d

# CHECK: shll	%cl, 291(%r16d), %r17d
# CHECK: encoding: [0x67,0x62,0xfc,0x74,0x10,0xd3,0xa0,0x23,0x01,0x00,0x00]
         shll	%cl, 291(%r16d), %r17d

# CHECK: {evex} shll	%cl, 127(%r16d)
# CHECK: encoding: [0x67,0x62,0xfc,0x7c,0x08,0xd3,0x60,0x7f]
         {evex} shll	%cl, 127(%r16d)

## MRM5m

# CHECK: vscatterpf0dps	(%r16,%zmm0) {%k1}
# CHECK: encoding: [0x62,0xfa,0x7d,0x49,0xc6,0x2c,0x00]
         vscatterpf0dps	(%r16,%zmm0) {%k1}

# CHECK: shrl	%cl, 127(%r16d), %r17d
# CHECK: encoding: [0x67,0x62,0xfc,0x74,0x10,0xd3,0x68,0x7f]
         shrl	%cl, 127(%r16d), %r17d

# CHECK: shrl	%cl, 291(%r16d), %r17d
# CHECK: encoding: [0x67,0x62,0xfc,0x74,0x10,0xd3,0xa8,0x23,0x01,0x00,0x00]
         shrl	%cl, 291(%r16d), %r17d

# CHECK: {evex} shrl	%cl, 127(%r16d)
# CHECK: encoding: [0x67,0x62,0xfc,0x7c,0x08,0xd3,0x68,0x7f]
         {evex} shrl	%cl, 127(%r16d)

## MRM6m

# CHECK: vpsllq	$0, (%r16,%r17), %zmm0
# CHECK: encoding: [0x62,0xf9,0xf9,0x48,0x73,0x34,0x08,0x00]
         vpsllq	$0, (%r16,%r17), %zmm0

# CHECK: {evex} divq   127(%r16)
# CHECK: encoding: [0x62,0xfc,0xfc,0x08,0xf7,0x70,0x7f]
         {evex} divq   127(%r16)

# CHECK: {evex} divq   291(%r16)
# CHECK: encoding: [0x62,0xfc,0xfc,0x08,0xf7,0xb0,0x23,0x01,0x00,0x00]
         {evex} divq   291(%r16)

# CHECK: xorq   $123, 127(%r16), %r17
# CHECK: encoding: [0x62,0xfc,0xf4,0x10,0x83,0x70,0x7f,0x7b]
         xorq   $123, 127(%r16), %r17

# CHECK: xorq   $123, 291(%r16), %r17
# CHECK: encoding: [0x62,0xfc,0xf4,0x10,0x83,0xb0,0x23,0x01,0x00,0x00,0x7b]
         xorq   $123, 291(%r16), %r17

# CHECK: {evex} xorq   $123, 127(%r16)
# CHECK: encoding: [0x62,0xfc,0xfc,0x08,0x83,0x70,0x7f,0x7b]
         {evex} xorq   $123, 127(%r16)

## MRM7m

# CHECK: vpslldq	$0, (%r16,%r17), %zmm0
# CHECK: encoding: [0x62,0xf9,0x79,0x48,0x73,0x3c,0x08,0x00]
         vpslldq	$0, (%r16,%r17), %zmm0

# CHECK: sarl	%cl, 127(%r16d), %r17d
# CHECK: encoding: [0x67,0x62,0xfc,0x74,0x10,0xd3,0x78,0x7f]
         sarl	%cl, 127(%r16d), %r17d

# CHECK: sarl	%cl, 291(%r16d), %r17d
# CHECK: encoding: [0x67,0x62,0xfc,0x74,0x10,0xd3,0xb8,0x23,0x01,0x00,0x00]
         sarl	%cl, 291(%r16d), %r17d

# CHECK: {evex} sarl	%cl, 127(%r16d)
# CHECK: encoding: [0x67,0x62,0xfc,0x7c,0x08,0xd3,0x78,0x7f]
         {evex} sarl	%cl, 127(%r16d)

## MRMSrcReg

# CHECK: imulq %r16, %r17, %r18
# CHECK: encoding: [0x62,0xec,0xec,0x10,0xaf,0xc8]
         imulq %r16, %r17, %r18

# CHECK: {evex} imulq %r16, %r17
# CHECK: encoding: [0x62,0xec,0xfc,0x08,0xaf,0xc8]
         {evex} imulq %r16, %r17

## MRMSrcRegCC

# CHECK: cfcmovbq	%r9, %r15
# CHECK: encoding: [0x62,0x54,0xfc,0x08,0x42,0xf9]
         cfcmovbq	%r9, %r15

# CHECK: cfcmovbeq	%r9, %r15, %r11
# CHECK: encoding: [0x62,0x54,0xa4,0x1c,0x46,0xf9]
         cfcmovbeq	%r9, %r15, %r11

## MRMDestReg

# CHECK: vextractps	$1, %xmm16, %r16d
# CHECK: encoding: [0x62,0xeb,0x7d,0x08,0x17,0xc0,0x01]
         vextractps	$1, %xmm16, %r16d

# CHECK: shldl	%cl, %r16d, %r17d, %r18d
# CHECK: encoding: [0x62,0xec,0x6c,0x10,0xa5,0xc1]
         shldl	%cl, %r16d, %r17d, %r18d

## MRM0r

# CHECK: roll	%cl, %r16d, %r17d
# CHECK: encoding: [0x62,0xfc,0x74,0x10,0xd3,0xc0]
         roll	%cl, %r16d, %r17d

## MRM1r

# CHECK: rorl	%cl, %r16d, %r17d
# CHECK: encoding: [0x62,0xfc,0x74,0x10,0xd3,0xc8]
         rorl	%cl, %r16d, %r17d

## MRM2r

# CHECK: rcll	%cl, %r16d, %r17d
# CHECK: encoding: [0x62,0xfc,0x74,0x10,0xd3,0xd0]
         rcll	%cl, %r16d, %r17d

## MRM3r

# CHECK: rcrl	%cl, %r16d, %r17d
# CHECK: encoding: [0x62,0xfc,0x74,0x10,0xd3,0xd8]
         rcrl	%cl, %r16d, %r17d

## MRM4r

# CHECK: shll	%r16d, %r17d
# CHECK: encoding: [0x62,0xfc,0x74,0x10,0xd1,0xe0]
         shll	%r16d, %r17d

## MRM5r

# CHECK: shrl	%cl, %r16d, %r17d
# CHECK: encoding: [0x62,0xfc,0x74,0x10,0xd3,0xe8]
         shrl	%cl, %r16d, %r17d

## MRM6r

# CHECK: {evex} divq   %r16
# CHECK: encoding: [0x62,0xfc,0xfc,0x08,0xf7,0xf0]
         {evex} divq   %r16

## MRM7r

# CHECK: sarl	%cl, %r16d, %r17d
# CHECK: encoding: [0x62,0xfc,0x74,0x10,0xd3,0xf8]
         sarl	%cl, %r16d, %r17d
