# RUN: llvm-mc -triple x86_64 -disassemble %s | FileCheck %s --check-prefix=ATT
# RUN: llvm-mc -triple x86_64 -disassemble -output-asm-variant=1 %s | FileCheck %s --check-prefix=INTEL

# ATT:   aaddl	%r16d, (%r17,%r18)
# INTEL: aadd	dword ptr [r17 + r18], r16d
0x62,0xec,0x78,0x08,0xfc,0x04,0x11

# ATT:   aaddq	%r16, 256(%r17,%r18)
# INTEL: aadd	qword ptr [r17 + r18 + 256], r16
0x62,0xec,0xf8,0x08,0xfc,0x84,0x11,0x00,0x01,0x00,0x00

# ATT:   aandl	%r16d, 256(%r17,%r18)
# INTEL: aand	dword ptr [r17 + r18 + 256], r16d
0x62,0xec,0x79,0x08,0xfc,0x84,0x11,0x00,0x01,0x00,0x00

# ATT:   aandq	%r16, 256(%r17,%r18)
# INTEL: aand	qword ptr [r17 + r18 + 256], r16
0x62,0xec,0xf9,0x08,0xfc,0x84,0x11,0x00,0x01,0x00,0x00

# ATT:   aorl	%r16d, 256(%r17,%r18)
# INTEL: aor	dword ptr [r17 + r18 + 256], r16d
0x62,0xec,0x7b,0x08,0xfc,0x84,0x11,0x00,0x01,0x00,0x00

# ATT:   aorq	%r16, 256(%r17,%r18)
# INTEL: aor	qword ptr [r17 + r18 + 256], r16
0x62,0xec,0xfb,0x08,0xfc,0x84,0x11,0x00,0x01,0x00,0x00

# ATT:   axorl	%r16d, 256(%r17,%r18)
# INTEL: axor	dword ptr [r17 + r18 + 256], r16d
0x62,0xec,0x7a,0x08,0xfc,0x84,0x11,0x00,0x01,0x00,0x00

# ATT:   axorq	%r16, 256(%r17,%r18)
# INTEL: axor	qword ptr [r17 + r18 + 256], r16
0x62,0xec,0xfa,0x08,0xfc,0x84,0x11,0x00,0x01,0x00,0x00
