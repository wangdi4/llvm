; RUN: llvm-profgen --binary=%S/Inputs/intel-win-spgo-dwarf.exe --perfscript=%S/Inputs/intel-win-spgo-dwarf.perfscript --format=text --output %t
; RUN: FileCheck %s --input-file %t --check-prefix=CHECK-SINGLE
; RUN: llvm-profgen --binary=%S/Inputs/intel-win-spgo-dwarf.exe --perfscript=%S/Inputs/intel-win-spgo-dwarf.perfscript,%S/Inputs/intel-win-spgo-dwarf.perfscript,%S/Inputs/intel-win-spgo-dwarf.perfscript --format=text --output %t
; RUN: FileCheck %s --input-file %t --check-prefix=CHECK-MULTI

; CHECK-SINGLE:      main:42585226:0
; CHECK-SINGLE-NEXT:  0: 0
; CHECK-SINGLE-NEXT:  3.1: 2
; CHECK-SINGLE-NEXT:  4: 0
; CHECK-SINGLE-NEXT:  5: 0
; CHECK-SINGLE-NEXT:  9: 0
; CHECK-SINGLE-NEXT:  65501: 2
; CHECK-SINGLE-NEXT:  1: ??$init@HG@MyNameSpace2@@YAXHPEAG@Z:11545
; CHECK-SINGLE-NEXT:   1.1: 31
; CHECK-SINGLE-NEXT:   2: 31
; CHECK-SINGLE-NEXT:   2.2: 0
; CHECK-SINGLE-NEXT:  4: ?work1@?$MyClass@GH@MyNameSpace1@@QEAAXQEAGH@Z:5595029
; CHECK-SINGLE-NEXT:   0: ?work@?$MyClass@GH@MyNameSpace1@@AEAAXQEAGHH@Z:5595029
; CHECK-SINGLE-NEXT:    1.1: 13579
; CHECK-SINGLE-NEXT:    2: 13579
; CHECK-SINGLE-NEXT:    3: 13579
; CHECK-SINGLE-NEXT:    65530: 2
; CHECK-SINGLE-NEXT:  5: ?work2@?$MyClass@GH@MyNameSpace1@@QEAAXQEAGH@Z:36978594
; CHECK-SINGLE-NEXT:   0: ?work@?$MyClass@GH@MyNameSpace1@@AEAAXQEAGHH@Z:36978594
; CHECK-SINGLE-NEXT:    1.1: 109729
; CHECK-SINGLE-NEXT:    2: 109728
; CHECK-SINGLE-NEXT:    3: 109729
; CHECK-SINGLE-NEXT:    65530: 2
; CHECK-SINGLE-NEXT:  7: ?print@MyNameSpace2@@YAXPEAGH@Z:0
; CHECK-SINGLE-NEXT:   1: 0
; CHECK-SINGLE-NEXT:   65508: 0

; CHECK-MULTI:       main:127755678:0
; CHECK-MULTI-NEXT:   0: 0
; CHECK-MULTI-NEXT:   3.1: 6
; CHECK-MULTI-NEXT:   4: 0
; CHECK-MULTI-NEXT:   5: 0
; CHECK-MULTI-NEXT:   9: 0
; CHECK-MULTI-NEXT:   65501: 6
; CHECK-MULTI-NEXT:   1: ??$init@HG@MyNameSpace2@@YAXHPEAG@Z:34635
; CHECK-MULTI-NEXT:    1.1: 93
; CHECK-MULTI-NEXT:    2: 93
; CHECK-MULTI-NEXT:    2.2: 0
; CHECK-MULTI-NEXT:   4: ?work1@?$MyClass@GH@MyNameSpace1@@QEAAXQEAGH@Z:16785087
; CHECK-MULTI-NEXT:    0: ?work@?$MyClass@GH@MyNameSpace1@@AEAAXQEAGHH@Z:16785087
; CHECK-MULTI-NEXT:     1.1: 40737
; CHECK-MULTI-NEXT:     2: 40737
; CHECK-MULTI-NEXT:     3: 40737
; CHECK-MULTI-NEXT:     65530: 6
; CHECK-MULTI-NEXT:   5: ?work2@?$MyClass@GH@MyNameSpace1@@QEAAXQEAGH@Z:110935782
; CHECK-MULTI-NEXT:    0: ?work@?$MyClass@GH@MyNameSpace1@@AEAAXQEAGHH@Z:110935782
; CHECK-MULTI-NEXT:     1.1: 329187
; CHECK-MULTI-NEXT:     2: 329184
; CHECK-MULTI-NEXT:     3: 329187
; CHECK-MULTI-NEXT:     65530: 6
; CHECK-MULTI-NEXT:   7: ?print@MyNameSpace2@@YAXPEAGH@Z:0
; CHECK-MULTI-NEXT:    1: 0
; CHECK-MULTI-NEXT:    65508: 0

; Original code:
; icx -O2 /fprofile-sample-generate intel-win-spgo.cpp /ZI -o intel-win-spgo-dwarf.exe
#include <stdio.h>

namespace MyNameSpace1 {

template <typename T1, typename T2> class MyClass {
  void work(T1 map[], T2 n, T2 m) {
    for (int i = 1; i < n; i++) {
      map[i] = map[i - 1] * map[i - 1];
      map[i] += (i * map[i - 1]) / m + i % m;
    }
  }

public:
  void work1(T1 map[], T2 n) { work(map, n, 7); }
  void work2(T1 map[], T2 n) { work(map, n, 3); }
};

} // namespace MyNameSpace1

namespace MyNameSpace2 {

template <typename T1, typename T2> void init(T1 c, T2 *p) {
  for (int i = 0; i < c * 1000000; i++) {
    p[i] = i / 3 + (i * i) % 3;
  }
}

void print(unsigned short *p, int i) {
  printf("%d %d %d\n", p[i * i * 100], p[i * i * 100 + 1], p[i * i * 100 + 2]);
}

} // namespace MyNameSpace2

unsigned short M[3000000];
int main(int argc, char *argv[]) {
  MyNameSpace2::init(argc, M);
  MyNameSpace1::MyClass<unsigned short, int> Obj;
  for (int i = 0; i <= argc * 1000; i++) {
    Obj.work1(&M[argc], argc * 100000);
    Obj.work2(&M[argc * argc], argc * 1000000);
  }
  MyNameSpace2::print(M, argc);
  return 0;
}
