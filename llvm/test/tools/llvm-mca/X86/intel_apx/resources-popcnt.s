# NOTE: Assertions have been autogenerated by utils/update_mca_test_checks.py
# REQUIRES: intel_feature_isa_apx_f
# RUN: llvm-mca -mtriple=x86_64-unknown-unknown -mcpu=diamondrapids -instruction-tables %p/../../../../MC/X86/intel_apx/popcnt-att.s | FileCheck %s

# CHECK:      Instruction Info:
# CHECK-NEXT: [1]: #uOps
# CHECK-NEXT: [2]: Latency
# CHECK-NEXT: [3]: RThroughput
# CHECK-NEXT: [4]: MayLoad
# CHECK-NEXT: [5]: MayStore
# CHECK-NEXT: [6]: HasSideEffects (U)

# CHECK:      [1]    [2]    [3]    [4]    [5]    [6]    Instructions:
# CHECK-NEXT:  1      3     1.00                        {evex}	popcntw	%dx, %ax
# CHECK-NEXT:  1      3     1.00                        {nf}	popcntw	%dx, %ax
# CHECK-NEXT:  1      3     1.00                        {evex}	popcntl	%ecx, %edx
# CHECK-NEXT:  1      3     1.00                        {nf}	popcntl	%ecx, %edx
# CHECK-NEXT:  1      3     1.00                        {evex}	popcntq	%r9, %r15
# CHECK-NEXT:  1      3     1.00                        {nf}	popcntq	%r9, %r15
# CHECK-NEXT:  2      8     1.00    *                   {evex}	popcntw	123(%r8,%rax,4), %dx
# CHECK-NEXT:  2      8     1.00    *                   {nf}	popcntw	123(%r8,%rax,4), %dx
# CHECK-NEXT:  2      8     1.00    *                   {evex}	popcntl	123(%r8,%rax,4), %ecx
# CHECK-NEXT:  2      8     1.00    *                   {nf}	popcntl	123(%r8,%rax,4), %ecx
# CHECK-NEXT:  2      8     1.00    *                   {evex}	popcntq	123(%r8,%rax,4), %r9
# CHECK-NEXT:  2      8     1.00    *                   {nf}	popcntq	123(%r8,%rax,4), %r9

# CHECK:      Resources:
# CHECK-NEXT: [0]   - SPRPort00
# CHECK-NEXT: [1]   - SPRPort01
# CHECK-NEXT: [2]   - SPRPort02
# CHECK-NEXT: [3]   - SPRPort03
# CHECK-NEXT: [4]   - SPRPort04
# CHECK-NEXT: [5]   - SPRPort05
# CHECK-NEXT: [6]   - SPRPort06
# CHECK-NEXT: [7]   - SPRPort07
# CHECK-NEXT: [8]   - SPRPort08
# CHECK-NEXT: [9]   - SPRPort09
# CHECK-NEXT: [10]  - SPRPort10
# CHECK-NEXT: [11]  - SPRPort11
# CHECK-NEXT: [12]  - SPRPortInvalid

# CHECK:      Resource pressure per iteration:
# CHECK-NEXT: [0]    [1]    [2]    [3]    [4]    [5]    [6]    [7]    [8]    [9]    [10]   [11]   [12]
# CHECK-NEXT:  -     12.00  2.00   2.00    -      -      -      -      -      -      -     2.00    -

# CHECK:      Resource pressure by instruction:
# CHECK-NEXT: [0]    [1]    [2]    [3]    [4]    [5]    [6]    [7]    [8]    [9]    [10]   [11]   [12]   Instructions:
# CHECK-NEXT:  -     1.00    -      -      -      -      -      -      -      -      -      -      -     {evex}	popcntw	%dx, %ax
# CHECK-NEXT:  -     1.00    -      -      -      -      -      -      -      -      -      -      -     {nf}	popcntw	%dx, %ax
# CHECK-NEXT:  -     1.00    -      -      -      -      -      -      -      -      -      -      -     {evex}	popcntl	%ecx, %edx
# CHECK-NEXT:  -     1.00    -      -      -      -      -      -      -      -      -      -      -     {nf}	popcntl	%ecx, %edx
# CHECK-NEXT:  -     1.00    -      -      -      -      -      -      -      -      -      -      -     {evex}	popcntq	%r9, %r15
# CHECK-NEXT:  -     1.00    -      -      -      -      -      -      -      -      -      -      -     {nf}	popcntq	%r9, %r15
# CHECK-NEXT:  -     1.00   0.33   0.33    -      -      -      -      -      -      -     0.33    -     {evex}	popcntw	123(%r8,%rax,4), %dx
# CHECK-NEXT:  -     1.00   0.33   0.33    -      -      -      -      -      -      -     0.33    -     {nf}	popcntw	123(%r8,%rax,4), %dx
# CHECK-NEXT:  -     1.00   0.33   0.33    -      -      -      -      -      -      -     0.33    -     {evex}	popcntl	123(%r8,%rax,4), %ecx
# CHECK-NEXT:  -     1.00   0.33   0.33    -      -      -      -      -      -      -     0.33    -     {nf}	popcntl	123(%r8,%rax,4), %ecx
# CHECK-NEXT:  -     1.00   0.33   0.33    -      -      -      -      -      -      -     0.33    -     {evex}	popcntq	123(%r8,%rax,4), %r9
# CHECK-NEXT:  -     1.00   0.33   0.33    -      -      -      -      -      -      -     0.33    -     {nf}	popcntq	123(%r8,%rax,4), %r9
