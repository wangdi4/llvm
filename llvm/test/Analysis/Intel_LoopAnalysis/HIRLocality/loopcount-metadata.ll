; RUN: opt < %s -passes=hir-ssa-deconstruction | opt -passes="print<hir-locality-analysis>" -hir-spatial-locality -disable-output 2>&1 | FileCheck %s

; Ensure that we prioritize loopcount metadata, such as that generated by
; VPOParopt or from '#pragma loop_count', and use a large trip count for
; locality analysis.

; The C source for this test is:
;
;     void test1(float *P, int N) {
;       #pragma loop_count max=1787569
;       for (int I = 0; I < N; I++)
;         P[I] = I;
;     }

; Verify that the trip count is understood to be larger than the default used
; for symbolic trip counts, which would result in a very small number of
; cache lines; 7 in this case.
; CHECK: Locality Info for Loop level: 1     NumCacheLines: 111724

define void @test1(ptr %P, i32 %N) {
entry:
  %cmp5 = icmp sgt i32 %N, 0
  br i1 %cmp5, label %for.body.preheader, label %for.cond.cleanup

for.body.preheader:                               ; preds = %entry
  %wide.trip.count7 = zext i32 %N to i64
  br label %for.body

for.cond.cleanup.loopexit:                        ; preds = %for.body
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond.cleanup.loopexit, %entry
  ret void

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %0 = trunc i64 %indvars.iv to i32
  %conv = sitofp i32 %0 to float
  %ptridx = getelementptr inbounds float, ptr %P, i64 %indvars.iv
  store float %conv, ptr %ptridx, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, %wide.trip.count7
  br i1 %exitcond, label %for.cond.cleanup.loopexit, label %for.body, !llvm.loop !0
}

!0 = distinct !{!0, !1}
!1 = !{!"llvm.loop.intel.loopcount_maximum", i32 1787569}
