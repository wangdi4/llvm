; REQUIRES: asserts

; RUN: opt < %s -passes="print<hir-region-identification>" -xmain-opt-level=3 -debug-only=hir-region-identification 2>&1 | FileCheck %s

; This is a test case from cpu2017/502.
; The loop is about 700 lines long. Even though most instructions are SCEVable,
; the SCEVs that are formed are huge and take a lot of compile time to analyze
; so we want to bail out on such loops even at O3.


; CHECK: Throttled due to presence of too many statements.


target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.md5_ctx = type { i32, i32, i32, i32, [2 x i32], i32, [128 x i8] }

; Function Attrs: nofree norecurse nounwind uwtable
define hidden fastcc void @md5_process_block(i8* readonly %0, i64 %1, %struct.md5_ctx* nocapture %2) unnamed_addr #0 {
  %4 = bitcast i8* %0 to i32*
  %5 = lshr i64 %1, 2
  %6 = getelementptr inbounds i32, i32* %4, i64 %5
  %7 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %2, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %2, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %2, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %2, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %2, i64 0, i32 4, i64 0
  %16 = load i32, i32* %15, align 4
  %17 = trunc i64 %1 to i32
  %18 = add i32 %16, %17
  store i32 %18, i32* %15, align 4
  %19 = zext i32 %18 to i64
  %20 = icmp ult i64 %19, %1
  br i1 %20, label %21, label %25

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.md5_ctx, %struct.md5_ctx* %2, i64 0, i32 4, i64 1
  %23 = load i32, i32* %22, align 4
  %24 = add i32 %23, 1
  store i32 %24, i32* %22, align 4
  br label %25

25:                                               ; preds = %21, %3
  %26 = icmp ugt i32* %6, %4
  br i1 %26, label %27, label %699

27:                                               ; preds = %25
  br label %28

28:                                               ; preds = %28, %27
  %29 = phi i32* [ %221, %28 ], [ %4, %27 ]
  %30 = phi i32 [ %687, %28 ], [ %8, %27 ]
  %31 = phi i32 [ %690, %28 ], [ %10, %27 ]
  %32 = phi i32 [ %691, %28 ], [ %12, %27 ]
  %33 = phi i32 [ %692, %28 ], [ %14, %27 ]
  %34 = xor i32 %32, %33
  %35 = and i32 %31, %34
  %36 = xor i32 %35, %33
  %37 = load i32, i32* %29, align 4
  %38 = add i32 %30, -680876936
  %39 = add i32 %38, %36
  %40 = add i32 %39, %37
  %41 = getelementptr inbounds i32, i32* %29, i64 1
  %42 = shl i32 %40, 7
  %43 = lshr i32 %40, 25
  %44 = add i32 %43, %31
  %45 = add i32 %44, %42
  %46 = xor i32 %31, %32
  %47 = and i32 %45, %46
  %48 = xor i32 %47, %32
  %49 = load i32, i32* %41, align 4
  %50 = add i32 %33, -389564586
  %51 = add i32 %50, %49
  %52 = add i32 %51, %48
  %53 = getelementptr inbounds i32, i32* %29, i64 2
  %54 = shl i32 %52, 12
  %55 = lshr i32 %52, 20
  %56 = add i32 %55, %45
  %57 = add i32 %56, %54
  %58 = xor i32 %45, %31
  %59 = and i32 %57, %58
  %60 = xor i32 %59, %31
  %61 = load i32, i32* %53, align 4
  %62 = add i32 %32, 606105819
  %63 = add i32 %62, %61
  %64 = add i32 %63, %60
  %65 = getelementptr inbounds i32, i32* %29, i64 3
  %66 = shl i32 %64, 17
  %67 = lshr i32 %64, 15
  %68 = add i32 %67, %57
  %69 = add i32 %68, %66
  %70 = xor i32 %57, %45
  %71 = and i32 %69, %70
  %72 = xor i32 %71, %45
  %73 = load i32, i32* %65, align 4
  %74 = add i32 %31, -1044525330
  %75 = add i32 %74, %73
  %76 = add i32 %75, %72
  %77 = getelementptr inbounds i32, i32* %29, i64 4
  %78 = shl i32 %76, 22
  %79 = lshr i32 %76, 10
  %80 = add i32 %79, %69
  %81 = add i32 %80, %78
  %82 = xor i32 %69, %57
  %83 = and i32 %81, %82
  %84 = xor i32 %83, %57
  %85 = load i32, i32* %77, align 4
  %86 = add i32 %85, -176418897
  %87 = add i32 %86, %45
  %88 = add i32 %87, %84
  %89 = getelementptr inbounds i32, i32* %29, i64 5
  %90 = shl i32 %88, 7
  %91 = lshr i32 %88, 25
  %92 = add i32 %91, %81
  %93 = add i32 %92, %90
  %94 = xor i32 %81, %69
  %95 = and i32 %93, %94
  %96 = xor i32 %95, %69
  %97 = load i32, i32* %89, align 4
  %98 = add i32 %97, 1200080426
  %99 = add i32 %98, %57
  %100 = add i32 %99, %96
  %101 = getelementptr inbounds i32, i32* %29, i64 6
  %102 = shl i32 %100, 12
  %103 = lshr i32 %100, 20
  %104 = add i32 %103, %93
  %105 = add i32 %104, %102
  %106 = xor i32 %93, %81
  %107 = and i32 %105, %106
  %108 = xor i32 %107, %81
  %109 = load i32, i32* %101, align 4
  %110 = add i32 %109, -1473231341
  %111 = add i32 %110, %69
  %112 = add i32 %111, %108
  %113 = getelementptr inbounds i32, i32* %29, i64 7
  %114 = shl i32 %112, 17
  %115 = lshr i32 %112, 15
  %116 = add i32 %115, %105
  %117 = add i32 %116, %114
  %118 = xor i32 %105, %93
  %119 = and i32 %117, %118
  %120 = xor i32 %119, %93
  %121 = load i32, i32* %113, align 4
  %122 = add i32 %121, -45705983
  %123 = add i32 %122, %81
  %124 = add i32 %123, %120
  %125 = getelementptr inbounds i32, i32* %29, i64 8
  %126 = shl i32 %124, 22
  %127 = lshr i32 %124, 10
  %128 = add i32 %127, %117
  %129 = add i32 %128, %126
  %130 = xor i32 %117, %105
  %131 = and i32 %129, %130
  %132 = xor i32 %131, %105
  %133 = load i32, i32* %125, align 4
  %134 = add i32 %133, 1770035416
  %135 = add i32 %134, %93
  %136 = add i32 %135, %132
  %137 = getelementptr inbounds i32, i32* %29, i64 9
  %138 = shl i32 %136, 7
  %139 = lshr i32 %136, 25
  %140 = add i32 %139, %129
  %141 = add i32 %140, %138
  %142 = xor i32 %129, %117
  %143 = and i32 %141, %142
  %144 = xor i32 %143, %117
  %145 = load i32, i32* %137, align 4
  %146 = add i32 %145, -1958414417
  %147 = add i32 %146, %105
  %148 = add i32 %147, %144
  %149 = getelementptr inbounds i32, i32* %29, i64 10
  %150 = shl i32 %148, 12
  %151 = lshr i32 %148, 20
  %152 = add i32 %151, %141
  %153 = add i32 %152, %150
  %154 = xor i32 %141, %129
  %155 = and i32 %153, %154
  %156 = xor i32 %155, %129
  %157 = load i32, i32* %149, align 4
  %158 = add i32 %157, -42063
  %159 = add i32 %158, %117
  %160 = add i32 %159, %156
  %161 = getelementptr inbounds i32, i32* %29, i64 11
  %162 = shl i32 %160, 17
  %163 = lshr i32 %160, 15
  %164 = add i32 %163, %153
  %165 = add i32 %164, %162
  %166 = xor i32 %153, %141
  %167 = and i32 %165, %166
  %168 = xor i32 %167, %141
  %169 = load i32, i32* %161, align 4
  %170 = add i32 %169, -1990404162
  %171 = add i32 %170, %129
  %172 = add i32 %171, %168
  %173 = getelementptr inbounds i32, i32* %29, i64 12
  %174 = shl i32 %172, 22
  %175 = lshr i32 %172, 10
  %176 = add i32 %175, %165
  %177 = add i32 %176, %174
  %178 = xor i32 %165, %153
  %179 = and i32 %177, %178
  %180 = xor i32 %179, %153
  %181 = load i32, i32* %173, align 4
  %182 = add i32 %181, 1804603682
  %183 = add i32 %182, %141
  %184 = add i32 %183, %180
  %185 = getelementptr inbounds i32, i32* %29, i64 13
  %186 = shl i32 %184, 7
  %187 = lshr i32 %184, 25
  %188 = add i32 %187, %177
  %189 = add i32 %188, %186
  %190 = xor i32 %177, %165
  %191 = and i32 %189, %190
  %192 = xor i32 %191, %165
  %193 = load i32, i32* %185, align 4
  %194 = add i32 %193, -40341101
  %195 = add i32 %194, %153
  %196 = add i32 %195, %192
  %197 = getelementptr inbounds i32, i32* %29, i64 14
  %198 = shl i32 %196, 12
  %199 = lshr i32 %196, 20
  %200 = add i32 %199, %189
  %201 = add i32 %200, %198
  %202 = xor i32 %189, %177
  %203 = and i32 %201, %202
  %204 = xor i32 %203, %177
  %205 = load i32, i32* %197, align 4
  %206 = add i32 %205, -1502002290
  %207 = add i32 %206, %165
  %208 = add i32 %207, %204
  %209 = getelementptr inbounds i32, i32* %29, i64 15
  %210 = shl i32 %208, 17
  %211 = lshr i32 %208, 15
  %212 = add i32 %211, %201
  %213 = add i32 %212, %210
  %214 = xor i32 %201, %189
  %215 = and i32 %213, %214
  %216 = xor i32 %215, %189
  %217 = load i32, i32* %209, align 4
  %218 = add i32 %217, 1236535329
  %219 = add i32 %218, %177
  %220 = add i32 %219, %216
  %221 = getelementptr inbounds i32, i32* %29, i64 16
  %222 = shl i32 %220, 22
  %223 = lshr i32 %220, 10
  %224 = add i32 %223, %213
  %225 = add i32 %224, %222
  %226 = xor i32 %225, %213
  %227 = and i32 %226, %201
  %228 = xor i32 %227, %213
  %229 = add i32 %49, -165796510
  %230 = add i32 %229, %189
  %231 = add i32 %230, %228
  %232 = shl i32 %231, 5
  %233 = lshr i32 %231, 27
  %234 = add i32 %233, %225
  %235 = add i32 %234, %232
  %236 = xor i32 %235, %225
  %237 = and i32 %236, %213
  %238 = xor i32 %237, %225
  %239 = add i32 %109, -1069501632
  %240 = add i32 %239, %201
  %241 = add i32 %240, %238
  %242 = shl i32 %241, 9
  %243 = lshr i32 %241, 23
  %244 = add i32 %243, %235
  %245 = add i32 %244, %242
  %246 = xor i32 %245, %235
  %247 = and i32 %246, %225
  %248 = xor i32 %247, %235
  %249 = add i32 %169, 643717713
  %250 = add i32 %249, %213
  %251 = add i32 %250, %248
  %252 = shl i32 %251, 14
  %253 = lshr i32 %251, 18
  %254 = add i32 %253, %245
  %255 = add i32 %254, %252
  %256 = xor i32 %255, %245
  %257 = and i32 %256, %235
  %258 = xor i32 %257, %245
  %259 = add i32 %37, -373897302
  %260 = add i32 %259, %225
  %261 = add i32 %260, %258
  %262 = shl i32 %261, 20
  %263 = lshr i32 %261, 12
  %264 = add i32 %263, %255
  %265 = add i32 %264, %262
  %266 = xor i32 %265, %255
  %267 = and i32 %266, %245
  %268 = xor i32 %267, %255
  %269 = add i32 %97, -701558691
  %270 = add i32 %269, %235
  %271 = add i32 %270, %268
  %272 = shl i32 %271, 5
  %273 = lshr i32 %271, 27
  %274 = add i32 %273, %265
  %275 = add i32 %274, %272
  %276 = xor i32 %275, %265
  %277 = and i32 %276, %255
  %278 = xor i32 %277, %265
  %279 = add i32 %157, 38016083
  %280 = add i32 %279, %245
  %281 = add i32 %280, %278
  %282 = shl i32 %281, 9
  %283 = lshr i32 %281, 23
  %284 = add i32 %283, %275
  %285 = add i32 %284, %282
  %286 = xor i32 %285, %275
  %287 = and i32 %286, %265
  %288 = xor i32 %287, %275
  %289 = add i32 %217, -660478335
  %290 = add i32 %289, %255
  %291 = add i32 %290, %288
  %292 = shl i32 %291, 14
  %293 = lshr i32 %291, 18
  %294 = add i32 %293, %285
  %295 = add i32 %294, %292
  %296 = xor i32 %295, %285
  %297 = and i32 %296, %275
  %298 = xor i32 %297, %285
  %299 = add i32 %85, -405537848
  %300 = add i32 %299, %265
  %301 = add i32 %300, %298
  %302 = shl i32 %301, 20
  %303 = lshr i32 %301, 12
  %304 = add i32 %303, %295
  %305 = add i32 %304, %302
  %306 = xor i32 %305, %295
  %307 = and i32 %306, %285
  %308 = xor i32 %307, %295
  %309 = add i32 %145, 568446438
  %310 = add i32 %309, %275
  %311 = add i32 %310, %308
  %312 = shl i32 %311, 5
  %313 = lshr i32 %311, 27
  %314 = add i32 %313, %305
  %315 = add i32 %314, %312
  %316 = xor i32 %315, %305
  %317 = and i32 %316, %295
  %318 = xor i32 %317, %305
  %319 = add i32 %205, -1019803690
  %320 = add i32 %319, %285
  %321 = add i32 %320, %318
  %322 = shl i32 %321, 9
  %323 = lshr i32 %321, 23
  %324 = add i32 %323, %315
  %325 = add i32 %324, %322
  %326 = xor i32 %325, %315
  %327 = and i32 %326, %305
  %328 = xor i32 %327, %315
  %329 = add i32 %73, -187363961
  %330 = add i32 %329, %295
  %331 = add i32 %330, %328
  %332 = shl i32 %331, 14
  %333 = lshr i32 %331, 18
  %334 = add i32 %333, %325
  %335 = add i32 %334, %332
  %336 = xor i32 %335, %325
  %337 = and i32 %336, %315
  %338 = xor i32 %337, %325
  %339 = add i32 %133, 1163531501
  %340 = add i32 %339, %305
  %341 = add i32 %340, %338
  %342 = shl i32 %341, 20
  %343 = lshr i32 %341, 12
  %344 = add i32 %343, %335
  %345 = add i32 %344, %342
  %346 = xor i32 %345, %335
  %347 = and i32 %346, %325
  %348 = xor i32 %347, %335
  %349 = add i32 %193, -1444681467
  %350 = add i32 %349, %315
  %351 = add i32 %350, %348
  %352 = shl i32 %351, 5
  %353 = lshr i32 %351, 27
  %354 = add i32 %353, %345
  %355 = add i32 %354, %352
  %356 = xor i32 %355, %345
  %357 = and i32 %356, %335
  %358 = xor i32 %357, %345
  %359 = add i32 %61, -51403784
  %360 = add i32 %359, %325
  %361 = add i32 %360, %358
  %362 = shl i32 %361, 9
  %363 = lshr i32 %361, 23
  %364 = add i32 %363, %355
  %365 = add i32 %364, %362
  %366 = xor i32 %365, %355
  %367 = and i32 %366, %345
  %368 = xor i32 %367, %355
  %369 = add i32 %121, 1735328473
  %370 = add i32 %369, %335
  %371 = add i32 %370, %368
  %372 = shl i32 %371, 14
  %373 = lshr i32 %371, 18
  %374 = add i32 %373, %365
  %375 = add i32 %374, %372
  %376 = xor i32 %375, %365
  %377 = and i32 %376, %355
  %378 = xor i32 %377, %365
  %379 = add i32 %181, -1926607734
  %380 = add i32 %379, %345
  %381 = add i32 %380, %378
  %382 = shl i32 %381, 20
  %383 = lshr i32 %381, 12
  %384 = add i32 %383, %375
  %385 = add i32 %384, %382
  %386 = xor i32 %376, %385
  %387 = add i32 %97, -378558
  %388 = add i32 %387, %355
  %389 = add i32 %388, %386
  %390 = shl i32 %389, 4
  %391 = lshr i32 %389, 28
  %392 = add i32 %391, %385
  %393 = add i32 %392, %390
  %394 = xor i32 %385, %375
  %395 = xor i32 %394, %393
  %396 = add i32 %133, -2022574463
  %397 = add i32 %396, %365
  %398 = add i32 %397, %395
  %399 = shl i32 %398, 11
  %400 = lshr i32 %398, 21
  %401 = add i32 %400, %393
  %402 = add i32 %401, %399
  %403 = xor i32 %393, %385
  %404 = xor i32 %403, %402
  %405 = add i32 %169, 1839030562
  %406 = add i32 %405, %375
  %407 = add i32 %406, %404
  %408 = shl i32 %407, 16
  %409 = lshr i32 %407, 16
  %410 = add i32 %409, %402
  %411 = add i32 %410, %408
  %412 = xor i32 %402, %393
  %413 = xor i32 %412, %411
  %414 = add i32 %205, -35309556
  %415 = add i32 %414, %385
  %416 = add i32 %415, %413
  %417 = shl i32 %416, 23
  %418 = lshr i32 %416, 9
  %419 = add i32 %418, %411
  %420 = add i32 %419, %417
  %421 = xor i32 %411, %402
  %422 = xor i32 %421, %420
  %423 = add i32 %49, -1530992060
  %424 = add i32 %423, %393
  %425 = add i32 %424, %422
  %426 = shl i32 %425, 4
  %427 = lshr i32 %425, 28
  %428 = add i32 %427, %420
  %429 = add i32 %428, %426
  %430 = xor i32 %420, %411
  %431 = xor i32 %430, %429
  %432 = add i32 %85, 1272893353
  %433 = add i32 %432, %402
  %434 = add i32 %433, %431
  %435 = shl i32 %434, 11
  %436 = lshr i32 %434, 21
  %437 = add i32 %436, %429
  %438 = add i32 %437, %435
  %439 = xor i32 %429, %420
  %440 = xor i32 %439, %438
  %441 = add i32 %121, -155497632
  %442 = add i32 %441, %411
  %443 = add i32 %442, %440
  %444 = shl i32 %443, 16
  %445 = lshr i32 %443, 16
  %446 = add i32 %445, %438
  %447 = add i32 %446, %444
  %448 = xor i32 %438, %429
  %449 = xor i32 %448, %447
  %450 = add i32 %157, -1094730640
  %451 = add i32 %450, %420
  %452 = add i32 %451, %449
  %453 = shl i32 %452, 23
  %454 = lshr i32 %452, 9
  %455 = add i32 %454, %447
  %456 = add i32 %455, %453
  %457 = xor i32 %447, %438
  %458 = xor i32 %457, %456
  %459 = add i32 %193, 681279174
  %460 = add i32 %459, %429
  %461 = add i32 %460, %458
  %462 = shl i32 %461, 4
  %463 = lshr i32 %461, 28
  %464 = add i32 %463, %456
  %465 = add i32 %464, %462
  %466 = xor i32 %456, %447
  %467 = xor i32 %466, %465
  %468 = add i32 %37, -358537222
  %469 = add i32 %468, %438
  %470 = add i32 %469, %467
  %471 = shl i32 %470, 11
  %472 = lshr i32 %470, 21
  %473 = add i32 %472, %465
  %474 = add i32 %473, %471
  %475 = xor i32 %465, %456
  %476 = xor i32 %475, %474
  %477 = add i32 %73, -722521979
  %478 = add i32 %477, %447
  %479 = add i32 %478, %476
  %480 = shl i32 %479, 16
  %481 = lshr i32 %479, 16
  %482 = add i32 %481, %474
  %483 = add i32 %482, %480
  %484 = xor i32 %474, %465
  %485 = xor i32 %484, %483
  %486 = add i32 %109, 76029189
  %487 = add i32 %486, %456
  %488 = add i32 %487, %485
  %489 = shl i32 %488, 23
  %490 = lshr i32 %488, 9
  %491 = add i32 %490, %483
  %492 = add i32 %491, %489
  %493 = xor i32 %483, %474
  %494 = xor i32 %493, %492
  %495 = add i32 %145, -640364487
  %496 = add i32 %495, %465
  %497 = add i32 %496, %494
  %498 = shl i32 %497, 4
  %499 = lshr i32 %497, 28
  %500 = add i32 %499, %492
  %501 = add i32 %500, %498
  %502 = xor i32 %492, %483
  %503 = xor i32 %502, %501
  %504 = add i32 %181, -421815835
  %505 = add i32 %504, %474
  %506 = add i32 %505, %503
  %507 = shl i32 %506, 11
  %508 = lshr i32 %506, 21
  %509 = add i32 %508, %501
  %510 = add i32 %509, %507
  %511 = xor i32 %501, %492
  %512 = xor i32 %511, %510
  %513 = add i32 %217, 530742520
  %514 = add i32 %513, %483
  %515 = add i32 %514, %512
  %516 = shl i32 %515, 16
  %517 = lshr i32 %515, 16
  %518 = add i32 %517, %510
  %519 = add i32 %518, %516
  %520 = xor i32 %510, %501
  %521 = xor i32 %520, %519
  %522 = add i32 %61, -995338651
  %523 = add i32 %522, %492
  %524 = add i32 %523, %521
  %525 = shl i32 %524, 23
  %526 = lshr i32 %524, 9
  %527 = add i32 %526, %519
  %528 = add i32 %527, %525
  %529 = xor i32 %510, -1
  %530 = or i32 %528, %529
  %531 = xor i32 %530, %519
  %532 = add i32 %37, -198630844
  %533 = add i32 %532, %501
  %534 = add i32 %533, %531
  %535 = shl i32 %534, 6
  %536 = lshr i32 %534, 26
  %537 = add i32 %536, %528
  %538 = add i32 %537, %535
  %539 = xor i32 %519, -1
  %540 = or i32 %538, %539
  %541 = xor i32 %540, %528
  %542 = add i32 %121, 1126891415
  %543 = add i32 %542, %510
  %544 = add i32 %543, %541
  %545 = shl i32 %544, 10
  %546 = lshr i32 %544, 22
  %547 = add i32 %546, %538
  %548 = add i32 %547, %545
  %549 = xor i32 %528, -1
  %550 = or i32 %548, %549
  %551 = xor i32 %550, %538
  %552 = add i32 %205, -1416354905
  %553 = add i32 %552, %519
  %554 = add i32 %553, %551
  %555 = shl i32 %554, 15
  %556 = lshr i32 %554, 17
  %557 = add i32 %556, %548
  %558 = add i32 %557, %555
  %559 = xor i32 %538, -1
  %560 = or i32 %558, %559
  %561 = xor i32 %560, %548
  %562 = add i32 %97, -57434055
  %563 = add i32 %562, %528
  %564 = add i32 %563, %561
  %565 = shl i32 %564, 21
  %566 = lshr i32 %564, 11
  %567 = add i32 %566, %558
  %568 = add i32 %567, %565
  %569 = xor i32 %548, -1
  %570 = or i32 %568, %569
  %571 = xor i32 %570, %558
  %572 = add i32 %181, 1700485571
  %573 = add i32 %572, %538
  %574 = add i32 %573, %571
  %575 = shl i32 %574, 6
  %576 = lshr i32 %574, 26
  %577 = add i32 %576, %568
  %578 = add i32 %577, %575
  %579 = xor i32 %558, -1
  %580 = or i32 %578, %579
  %581 = xor i32 %580, %568
  %582 = add i32 %73, -1894986606
  %583 = add i32 %582, %548
  %584 = add i32 %583, %581
  %585 = shl i32 %584, 10
  %586 = lshr i32 %584, 22
  %587 = add i32 %586, %578
  %588 = add i32 %587, %585
  %589 = xor i32 %568, -1
  %590 = or i32 %588, %589
  %591 = xor i32 %590, %578
  %592 = add i32 %157, -1051523
  %593 = add i32 %592, %558
  %594 = add i32 %593, %591
  %595 = shl i32 %594, 15
  %596 = lshr i32 %594, 17
  %597 = add i32 %596, %588
  %598 = add i32 %597, %595
  %599 = xor i32 %578, -1
  %600 = or i32 %598, %599
  %601 = xor i32 %600, %588
  %602 = add i32 %49, -2054922799
  %603 = add i32 %602, %568
  %604 = add i32 %603, %601
  %605 = shl i32 %604, 21
  %606 = lshr i32 %604, 11
  %607 = add i32 %606, %598
  %608 = add i32 %607, %605
  %609 = xor i32 %588, -1
  %610 = or i32 %608, %609
  %611 = xor i32 %610, %598
  %612 = add i32 %133, 1873313359
  %613 = add i32 %612, %578
  %614 = add i32 %613, %611
  %615 = shl i32 %614, 6
  %616 = lshr i32 %614, 26
  %617 = add i32 %616, %608
  %618 = add i32 %617, %615
  %619 = xor i32 %598, -1
  %620 = or i32 %618, %619
  %621 = xor i32 %620, %608
  %622 = add i32 %217, -30611744
  %623 = add i32 %622, %588
  %624 = add i32 %623, %621
  %625 = shl i32 %624, 10
  %626 = lshr i32 %624, 22
  %627 = add i32 %626, %618
  %628 = add i32 %627, %625
  %629 = xor i32 %608, -1
  %630 = or i32 %628, %629
  %631 = xor i32 %630, %618
  %632 = add i32 %109, -1560198380
  %633 = add i32 %632, %598
  %634 = add i32 %633, %631
  %635 = shl i32 %634, 15
  %636 = lshr i32 %634, 17
  %637 = add i32 %636, %628
  %638 = add i32 %637, %635
  %639 = xor i32 %618, -1
  %640 = or i32 %638, %639
  %641 = xor i32 %640, %628
  %642 = add i32 %193, 1309151649
  %643 = add i32 %642, %608
  %644 = add i32 %643, %641
  %645 = shl i32 %644, 21
  %646 = lshr i32 %644, 11
  %647 = add i32 %646, %638
  %648 = add i32 %647, %645
  %649 = xor i32 %628, -1
  %650 = or i32 %648, %649
  %651 = xor i32 %650, %638
  %652 = add i32 %85, -145523070
  %653 = add i32 %652, %618
  %654 = add i32 %653, %651
  %655 = shl i32 %654, 6
  %656 = lshr i32 %654, 26
  %657 = add i32 %656, %648
  %658 = add i32 %657, %655
  %659 = xor i32 %638, -1
  %660 = or i32 %658, %659
  %661 = xor i32 %660, %648
  %662 = add i32 %169, -1120210379
  %663 = add i32 %662, %628
  %664 = add i32 %663, %661
  %665 = shl i32 %664, 10
  %666 = lshr i32 %664, 22
  %667 = add i32 %666, %658
  %668 = add i32 %667, %665
  %669 = xor i32 %648, -1
  %670 = or i32 %668, %669
  %671 = xor i32 %670, %658
  %672 = add i32 %61, 718787259
  %673 = add i32 %672, %638
  %674 = add i32 %673, %671
  %675 = shl i32 %674, 15
  %676 = lshr i32 %674, 17
  %677 = add i32 %676, %668
  %678 = add i32 %677, %675
  %679 = xor i32 %658, -1
  %680 = or i32 %678, %679
  %681 = xor i32 %680, %668
  %682 = add i32 %145, -343485551
  %683 = add i32 %682, %648
  %684 = add i32 %683, %681
  %685 = shl i32 %684, 21
  %686 = lshr i32 %684, 11
  %687 = add i32 %658, %30
  %688 = add i32 %678, %31
  %689 = add i32 %688, %686
  %690 = add i32 %689, %685
  %691 = add i32 %678, %32
  %692 = add i32 %668, %33
  %693 = icmp ult i32* %221, %6
  br i1 %693, label %28, label %694

694:                                              ; preds = %28
  %695 = phi i32 [ %687, %28 ]
  %696 = phi i32 [ %690, %28 ]
  %697 = phi i32 [ %691, %28 ]
  %698 = phi i32 [ %692, %28 ]
  br label %699

699:                                              ; preds = %694, %25
  %700 = phi i32 [ %14, %25 ], [ %698, %694 ]
  %701 = phi i32 [ %12, %25 ], [ %697, %694 ]
  %702 = phi i32 [ %10, %25 ], [ %696, %694 ]
  %703 = phi i32 [ %8, %25 ], [ %695, %694 ]
  store i32 %703, i32* %7, align 4
  store i32 %702, i32* %9, align 4
  store i32 %701, i32* %11, align 4
  store i32 %700, i32* %13, align 4
  ret void
}
