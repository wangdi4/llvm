; NOTE: Assertions have been autogenerated by utils/update_analyze_test_checks.py
; RUN: opt < %s  -cost-model -analyze -bugpoint-enable-legacy-pm -mtriple=x86_64-apple-macosx10.8.0 | FileCheck %s --check-prefixes=CHECK

target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.8.0"

define i32 @store_aggregates(i32 %arg) {
; CHECK-LABEL: 'store_aggregates'
; CHECK-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: store { i8, i8 } undef, ptr undef
; CHECK-NEXT:  Cost Model: Found an estimated cost of 3 for instruction: store { i8, i128 } undef, ptr undef
; CHECK-NEXT:  Cost Model: Found an estimated cost of 4 for instruction: store { i8, { i8, i8 }, i8 } undef, ptr undef
; CHECK-NEXT:  Cost Model: Found an estimated cost of 6 for instruction: store [3 x i128] undef, ptr undef
; CHECK-NEXT:  Cost Model: Found an estimated cost of 0 for instruction: ret i32 undef
;
  store {i8, i8} undef, ptr undef
  store {i8, i128} undef, ptr undef
  store {i8, {i8, i8}, i8} undef, ptr undef
  store [3 x i128] undef, ptr undef

  ret i32 undef
}

define i32 @load_aggregates(i32 %arg) {
; CHECK-LABEL: 'load_aggregates'
; CHECK-NEXT:  Cost Model: Found an estimated cost of 2 for instruction: %1 = load { i8, i16 }, ptr undef
; CHECK-NEXT:  Cost Model: Found an estimated cost of 3 for instruction: %2 = load { i32, i128 }, ptr undef
; CHECK-NEXT:  Cost Model: Found an estimated cost of 4 for instruction: %3 = load { { i32, i16 }, i128 }, ptr undef
; CHECK-NEXT:  Cost Model: Found an estimated cost of 4 for instruction: %4 = load [4 x i8], ptr undef
; CHECK-NEXT:  Cost Model: Found an estimated cost of 0 for instruction: ret i32 undef
;
  load {i8, i16}, ptr undef
  load {i32, i128}, ptr undef
  load {{i32, i16}, i128}, ptr undef
  load [4 x i8], ptr undef

  ret i32 undef
}
