; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -passes=aggressive-instcombine -S %s | FileCheck %s

; The combining optimizations for the multiple loads, cannot move more than
; one GEP out of the way.

target datalayout = "e-m:w-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-windows-msvc19.28.29334"

%struct.baz.4.10.16.22 = type { %struct.wibble.2.8.14.20, %struct.baz.0.3.9.15.21, %struct.baz.0.3.9.15.21 }
%struct.wibble.2.8.14.20 = type { %struct.eggs.0.7.13.19 }
%struct.eggs.0.7.13.19 = type { i8 }
%struct.baz.0.3.9.15.21 = type { i32 }

define dso_local void @eggs(ptr %arg, ptr %arg1) local_unnamed_addr #0 align 2 {
; CHECK-LABEL: define {{[^@]+}}@eggs(
; CHECK-NEXT:  bb:
; CHECK-NEXT:    [[TMP:%.*]] = getelementptr inbounds [[STRUCT_BAZ_4_10_16_22:%.*]], ptr [[ARG1:%.*]], i64 0, i32 2
; CHECK-NEXT:    [[TMP2:%.*]] = getelementptr inbounds { i32 }, ptr [[TMP]], i64 0, i32 0
; CHECK-NEXT:    [[TMP3:%.*]] = load i32, ptr [[TMP2]], align 4
; CHECK-NEXT:    [[TMP4:%.*]] = getelementptr inbounds [[STRUCT_BAZ_4_10_16_22]], ptr [[ARG1]], i64 0, i32 1
; CHECK-NEXT:    [[TMP5:%.*]] = getelementptr inbounds { i32 }, ptr [[TMP4]], i64 0, i32 0
; CHECK-NEXT:    [[TMP6:%.*]] = load i32, ptr [[TMP5]], align 4
; CHECK-NEXT:    [[TMP7:%.*]] = zext i32 [[TMP3]] to i64
; CHECK-NEXT:    [[TMP8:%.*]] = shl nuw i64 [[TMP7]], 32
; CHECK-NEXT:    [[TMP9:%.*]] = zext i32 [[TMP6]] to i64
; CHECK-NEXT:    [[TMP10:%.*]] = or i64 [[TMP8]], [[TMP9]]
; CHECK-NEXT:    call void @wibble(ptr noundef nonnull align 1 dereferenceable(1) poison, i64 [[TMP10]])
; CHECK-NEXT:    ret void
;
bb:
  %tmp = getelementptr inbounds %struct.baz.4.10.16.22, ptr %arg1, i64 0, i32 2
  %tmp2 = getelementptr inbounds { i32 }, ptr %tmp, i64 0, i32 0
  %tmp3 = load i32, ptr %tmp2, align 4
  %tmp4 = getelementptr inbounds %struct.baz.4.10.16.22, ptr %arg1, i64 0, i32 1
  %tmp5 = getelementptr inbounds { i32 }, ptr %tmp4, i64 0, i32 0
  %tmp6 = load i32, ptr %tmp5, align 4
  %tmp7 = zext i32 %tmp3 to i64
  %tmp8 = shl nuw i64 %tmp7, 32
  %tmp9 = zext i32 %tmp6 to i64
  %tmp10 = or i64 %tmp8, %tmp9
  call void @wibble(ptr noundef nonnull align 1 dereferenceable(1) poison, i64 %tmp10)
  ret void
}

declare dso_local void @wibble(ptr, i64) local_unnamed_addr


