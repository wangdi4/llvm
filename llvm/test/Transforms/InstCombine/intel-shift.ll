; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; This test makes sure that this optimization is applied:
; ((X << C) + Y) >> C  ->  (X + (Y >> C)) & (~0 >> C)
;
; RUN: opt -passes="instcombine" < %s -S | FileCheck %s

define i32 @test1(i32 %a, i32 %b) {
; CHECK-LABEL: @test1(
; CHECK-NEXT:    [[TMP1:%.*]] = lshr i32 [[B:%.*]], 10
; CHECK-NEXT:    [[TMP2:%.*]] = add i32 [[TMP1]], [[A:%.*]]
; CHECK-NEXT:    [[C2:%.*]] = and i32 [[TMP2]], 4194303
; CHECK-NEXT:    ret i32 [[C2]]
;
  %c = shl i32 %a, 10
  %c1 = add i32 %c, %b
  %c2 = lshr i32 %c1, 10
  ret i32 %c2
}
