; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -instcombine -S %s | FileCheck %s

; Function Attrs: convergent norecurse nounwind readnone willreturn
define dso_local <4 x float> @_Z9bitselectDv4_fS_S_(<4 x float> %a, <4 x float> %b, <4 x float> %c) local_unnamed_addr #0 {
; CHECK-LABEL: @_Z9bitselectDv4_fS_S_(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[ASTYPE:%.*]] = bitcast <4 x float> [[C:%.*]] to <4 x i32>
; CHECK-NEXT:    [[NEG:%.*]] = xor <4 x i32> [[ASTYPE]], <i32 -1, i32 -1, i32 -1, i32 -1>
; CHECK-NEXT:    [[ASTYPE1:%.*]] = bitcast <4 x float> [[A:%.*]] to <4 x i32>
; CHECK-NEXT:    [[AND:%.*]] = and <4 x i32> [[NEG]], [[ASTYPE1]]
; CHECK-NEXT:    [[ASTYPE4:%.*]] = bitcast <4 x float> [[B:%.*]] to <4 x i32>
; CHECK-NEXT:    [[AND5:%.*]] = and <4 x i32> [[ASTYPE]], [[ASTYPE4]]
; CHECK-NEXT:    [[OR:%.*]] = or <4 x i32> [[AND]], [[AND5]]
; CHECK-NEXT:    [[ASTYPE9:%.*]] = bitcast <4 x i32> [[OR]] to <4 x float>
; CHECK-NEXT:    ret <4 x float> [[ASTYPE9]]
;
entry:
  %astype = bitcast <4 x float> %c to <4 x i32>
  %neg = xor <4 x i32> %astype, <i32 -1, i32 -1, i32 -1, i32 -1>
  %astype1 = bitcast <4 x float> %a to <4 x i32>
  %and = and <4 x i32> %neg, %astype1
  %astype4 = bitcast <4 x float> %b to <4 x i32>
  %and5 = and <4 x i32> %astype, %astype4
  %or = or <4 x i32> %and, %and5
  %astype9 = bitcast <4 x i32> %or to <4 x float>
  ret <4 x float> %astype9
}

attributes #0 = { convergent norecurse nounwind readnone willreturn "frame-pointer"="none" "min-legal-vector-width"="128" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "stackrealign" "target-cpu"="core2" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+ssse3,+x87" }

!opencl.enable.FP_CONTRACT = !{}
!opencl.ocl.version = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 2, i32 0}
!1 = !{!"Intel(R) oneAPI DPC++/C++ Compiler 2022.1.0 (2022.x.0.YYYYMMDD)"}

