; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt < %s -opaque-pointers -S -instcombine -verify | FileCheck %s
; RUN: opt < %s -opaque-pointers -S -passes=instcombine,verify | FileCheck %s
%struct.B = type { %struct.A }
%struct.A = type { i8 }

; Function Attrs: mustprogress nounwind uwtable
define dso_local void @_Z3fooP1BS0_(%struct.B* %in, %struct.B* %out) {
; CHECK-LABEL: @_Z3fooP1BS0_(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[TMP0:%.*]] = load i8, ptr [[IN:%.*]], align 1
; CHECK-NEXT:    store i8 [[TMP0]], ptr [[OUT:%.*]], align 1
; CHECK-NEXT:    ret void
;
entry:
  %in.addr = alloca %struct.B*, align 8
  %out.addr = alloca %struct.B*, align 8
  store %struct.B* %in, %struct.B** %in.addr, align 8, !tbaa !3
  store %struct.B* %out, %struct.B** %out.addr, align 8, !tbaa !3
  %0 = load %struct.B*, %struct.B** %in.addr, align 8, !tbaa !3
  %1 = load %struct.B*, %struct.B** %out.addr, align 8, !tbaa !3
  %2 = bitcast %struct.B* %1 to i8*
  %3 = bitcast %struct.B* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 1, i1 false), !tbaa.struct !7
  ret void
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #0

attributes #0 = { argmemonly nofree nounwind willreturn }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{!"Intel(R) oneAPI DPC++/C++ Compiler 2021.4.0 (2021.x.0.YYYYMMDD)"}
!3 = !{!4, !4, i64 0}
!4 = !{!"pointer@_ZTSP1B", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{}
