; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt < %s -mtriple=x86_64-unknown-unknown -enable-intel-advanced-opts -O3 -mattr=+sse4.2 -S | FileCheck %s

%struct.VBVHNode = type { [6 x float], ptr, ptr }

define dso_local <3 x ptr> @GEP_Splat_0(ptr nocapture readonly %node, i64 %index) {
; CHECK-LABEL: @GEP_Splat_0(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[INDEX0:%.*]] = insertelement <3 x i64> undef, i64 [[INDEX:%.*]], i64 0
; CHECK-NEXT:    [[INDEX2:%.*]] = shufflevector <3 x i64> [[INDEX0]], <3 x i64> poison, <3 x i32> zeroinitializer
; CHECK-NEXT:    [[RET:%.*]] = getelementptr inbounds [[STRUCT_VBVHNODE:%.*]], ptr [[NODE:%.*]], i64 0, i32 0, <3 x i64> [[INDEX2]]
; CHECK-NEXT:    ret <3 x ptr> [[RET]]
;
entry:
  %n0 = insertelement <3 x ptr> undef, ptr %node, i32 0
  %n1 = insertelement <3 x ptr> %n0, ptr %node, i32 1
  %n2 = insertelement <3 x ptr> %n1, ptr %node, i32 2

  %index0 = insertelement <3 x i64> undef, i64 %index, i32 0
  %index1 = insertelement <3 x i64> %index0, i64 %index, i32 1
  %index2 = insertelement <3 x i64> %index1, i64 %index, i32 2

  %ret = getelementptr inbounds %struct.VBVHNode, <3 x ptr> %n2, <3 x i64> zeroinitializer, <3 x i32> zeroinitializer, <3 x i64> %index2
  ret <3 x ptr> %ret
}

define dso_local <3 x ptr> @GEP_Splat_1(ptr nocapture readonly %node, ptr %index_ptr) {
; CHECK-LABEL: @GEP_Splat_1(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[INDEX:%.*]] = load <3 x i64>, ptr [[INDEX_PTR:%.*]], align 32
; CHECK-NEXT:    [[RET:%.*]] = getelementptr inbounds [[STRUCT_VBVHNODE:%.*]], ptr [[NODE:%.*]], i64 0, i32 0, <3 x i64> [[INDEX]]
; CHECK-NEXT:    ret <3 x ptr> [[RET]]
;
entry:
  %n0 = insertelement <3 x ptr> undef, ptr %node, i32 0
  %n1 = insertelement <3 x ptr> %n0, ptr %node, i32 1
  %n2 = insertelement <3 x ptr> %n1, ptr %node, i32 2
  %index = load <3 x i64>, ptr %index_ptr
  %ret = getelementptr inbounds %struct.VBVHNode, <3 x ptr> %n2, <3 x i64> zeroinitializer, <3 x i32> zeroinitializer, <3 x i64> %index
  ret <3 x ptr> %ret
}
