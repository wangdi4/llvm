; INTEL_FEATURE_SW_ADVANCED
; REQUIRES: intel_feature_sw_advanced

; With Intel "advanced" opts, do not hoist freeze instructions.

; RUN: opt < %s -enable-intel-advanced-opts=true -passes=instcombine -S | FileCheck %s

; This comment must be inside the adv guards.
; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 2

target triple = "i686-pc-linux-gnu"

declare void @use_i32(i32)
declare void @use_p32(ptr)

define void @freeze_dominated_uses_test1(i32 %v) #0 {
; CHECK-LABEL: define void @freeze_dominated_uses_test1
; CHECK-SAME: (i32 [[V:%.*]]) #[[ATTR0:[0-9]+]] {
; CHECK-NEXT:    [[V_FR:%.*]] = freeze i32 [[V]]
; CHECK-NEXT:    call void @use_i32(i32 [[V_FR]])
; CHECK-NEXT:    call void @use_i32(i32 [[V_FR]])
; CHECK-NEXT:    ret void
;
  %v.fr = freeze i32 %v
  call void @use_i32(i32 %v)
  call void @use_i32(i32 %v.fr)
  ret void
}

define void @freeze_dominated_uses_test2(i32 %v) #0 {
; CHECK-LABEL: define void @freeze_dominated_uses_test2
; CHECK-SAME: (i32 [[V:%.*]]) #[[ATTR0]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[A:%.*]] = alloca i32, align 4
; CHECK-NEXT:    call void @use_p32(ptr nonnull [[A]])
; CHECK-NEXT:    call void @use_i32(i32 [[V]])
; CHECK-NEXT:    [[COND:%.*]] = icmp eq i32 [[V]], 0
; CHECK-NEXT:    br i1 [[COND]], label [[BB0:%.*]], label [[BB1:%.*]]
; CHECK:       bb0:
; CHECK-NEXT:    [[V_FR:%.*]] = freeze i32 [[V]]
; CHECK-NEXT:    call void @use_i32(i32 [[V_FR]])
; CHECK-NEXT:    call void @use_i32(i32 [[V_FR]])
; CHECK-NEXT:    br label [[END:%.*]]
; CHECK:       bb1:
; CHECK-NEXT:    call void @use_i32(i32 [[V]])
; CHECK-NEXT:    br label [[END]]
; CHECK:       end:
; CHECK-NEXT:    ret void
;
entry:
  %a = alloca i32
  call void @use_p32(ptr %a)
  call void @use_i32(i32 %v)
  %cond = icmp eq i32 %v, 0
  br i1 %cond, label %bb0, label %bb1

bb0:
  %v.fr = freeze i32 %v
  call void @use_i32(i32 %v.fr)
  call void @use_i32(i32 %v)
  br label %end

bb1:
  call void @use_i32(i32 %v)
  br label %end

end:
  ret void
}

; Uses "prefer-vector-width" attribute.
define void @freeze_dominated_uses_test3(i32 %v) #1 {
; CHECK-LABEL: define void @freeze_dominated_uses_test3
; CHECK-SAME: (i32 [[V:%.*]]) #[[ATTR1:[0-9]+]] {
; CHECK-NEXT:    [[V_FR:%.*]] = freeze i32 [[V]]
; CHECK-NEXT:    call void @use_i32(i32 [[V_FR]])
; CHECK-NEXT:    call void @use_i32(i32 [[V_FR]])
; CHECK-NEXT:    ret void
;
  %v.fr = freeze i32 %v
  call void @use_i32(i32 %v)
  call void @use_i32(i32 %v.fr)
  ret void
}


attributes #0 = { "target-cpu"="skylake-avx512" "target-features"="+avx2,+avx512f,+avx512vl,+avx512dq"}
attributes #1 = { "prefer-vector-width"="256" }
; end INTEL_FEATURE_SW_ADVANCED
