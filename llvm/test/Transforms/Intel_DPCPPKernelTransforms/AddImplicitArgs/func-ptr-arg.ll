; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -dpcpp-kernel-add-implicit-args -S %s | FileCheck %s
; RUN: opt -dpcpp-kernel-add-implicit-args -enable-debugify -disable-output -S %s 2>&1 | FileCheck %s -check-prefix=DEBUGIFY
; RUN: opt -passes=dpcpp-kernel-add-implicit-args -S %s | FileCheck %s
; RUN: opt -passes=dpcpp-kernel-add-implicit-args -enable-debugify -disable-output -S %s 2>&1 | FileCheck %s -check-prefix=DEBUGIFY

define i32 @foo(i32 %a, i32 %b) {
; CHECK-LABEL: @foo(
; CHECK-NEXT:    [[S:%.*]] = add i32 [[A:%.*]], [[B:%.*]]
; CHECK-NEXT:    ret i32 [[S]]
;
  %s = add i32 %a, %b
  ret i32 %s
}

define void @bar(i32 (i32, i32)* %func.ptr, i8** %buf) {
; CHECK-LABEL: @bar(
; CHECK-NEXT:    [[BC:%.*]] = bitcast i32 (i32, i32)* [[FUNC_PTR:%.*]] to i8*
; CHECK-NEXT:    store i8* [[BC]], i8** [[BUF:%.*]], align 8
; CHECK-NEXT:    ret void
;
  %bc = bitcast i32(i32, i32)* %func.ptr to i8*
  store i8* %bc, i8** %buf
  ret void
}

define void @func() {
; CHECK-LABEL: @func(
; CHECK-NEXT:    [[BUF:%.*]] = alloca i8*, align 8
; CHECK-NEXT:    [[TMP1:%.*]] = bitcast i32 (i32, i32, i8 addrspace(3)*, { i64, [3 x i64], [3 x i64], [2 x [3 x i64]], [3 x i64], {}*, {}* }*, i64*, [4 x i64], i8*, {}*)* @foo to i32 (i32, i32)*
; CHECK-NEXT:    [[LOCALMEM_BAR:%.*]] = getelementptr i8, i8 addrspace(3)* [[PLOCALMEMBASE:%.*]], i32 0
; CHECK-NEXT:    call void @bar(i32 (i32, i32)* [[TMP1]], i8** [[BUF]], i8 addrspace(3)* noalias [[LOCALMEM_BAR]], { i64, [3 x i64], [3 x i64], [2 x [3 x i64]], [3 x i64], {}*, {}* }* noalias [[PWORKDIM:%.*]], i64* noalias [[PWGID:%.*]], [4 x i64] [[BASEGLBID:%.*]], i8* noalias [[PSPECIALBUF:%.*]], {}* noalias [[RUNTIMEHANDLE:%.*]])
; CHECK-NEXT:    ret void
;
  %buf = alloca i8*
  call void @bar(i32 (i32, i32)* @foo, i8** %buf)
  ret void
}

; DEBUGIFY-NOT: WARNING:
; DEBUGIFY: CheckModuleDebugify: PASS
