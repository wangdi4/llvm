; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt %s -bugpoint-enable-legacy-pm -S -mtriple=x86_64-unknown-unknown -float128-expand -intel-libirc-allowed | FileCheck %s

define fp128 @test_expand_fp128fma(fp128 %a, fp128 %b, fp128 %c) {
; CHECK-LABEL: @test_expand_fp128fma(
; CHECK-NEXT:    [[TMP1:%.*]] = alloca fp128, align 16
; CHECK-NEXT:    [[TMP2:%.*]] = alloca fp128, align 16
; CHECK-NEXT:    [[TMP3:%.*]] = alloca fp128, align 16
; CHECK-NEXT:    [[TMP4:%.*]] = alloca fp128, align 16
; CHECK-NEXT:    [[TMP5:%.*]] = alloca fp128, align 16
; CHECK-NEXT:    call void @llvm.lifetime.start.p0(i64 16, ptr [[TMP3]])
; CHECK-NEXT:    store fp128 [[C:%.*]], ptr [[TMP3]], align 16
; CHECK-NEXT:    call void @llvm.lifetime.start.p0(i64 16, ptr [[TMP4]])
; CHECK-NEXT:    store fp128 [[B:%.*]], ptr [[TMP4]], align 16
; CHECK-NEXT:    call void @llvm.lifetime.start.p0(i64 16, ptr [[TMP5]])
; CHECK-NEXT:    store fp128 [[A:%.*]], ptr [[TMP5]], align 16
; CHECK-NEXT:    call void @llvm.lifetime.start.p0(i64 16, ptr [[TMP2]])
; CHECK-NEXT:    call void @__mulq(ptr [[TMP2]], ptr [[TMP5]], ptr [[TMP4]])
; CHECK-NEXT:    call void @llvm.lifetime.end.p0(i64 16, ptr [[TMP4]])
; CHECK-NEXT:    call void @llvm.lifetime.end.p0(i64 16, ptr [[TMP5]])
; CHECK-NEXT:    [[TMP6:%.*]] = load fp128, ptr [[TMP2]], align 16
; CHECK-NEXT:    call void @llvm.lifetime.start.p0(i64 16, ptr [[TMP1]])
; CHECK-NEXT:    call void @__addq(ptr [[TMP1]], ptr [[TMP2]], ptr [[TMP3]])
; CHECK-NEXT:    call void @llvm.lifetime.end.p0(i64 16, ptr [[TMP2]])
; CHECK-NEXT:    call void @llvm.lifetime.end.p0(i64 16, ptr [[TMP3]])
; CHECK-NEXT:    [[TMP7:%.*]] = load fp128, ptr [[TMP1]], align 16
; CHECK-NEXT:    call void @llvm.lifetime.end.p0(i64 16, ptr [[TMP1]])
; CHECK-NEXT:    [[D:%.*]] = call fp128 @llvm.fmuladd.f128(fp128 [[A]], fp128 [[B]], fp128 [[C]])
; CHECK-NEXT:    ret fp128 [[TMP7]]
;
  %d = call fp128 @llvm.fmuladd.f128(fp128 %a, fp128 %b, fp128 %c)
  ret fp128 %d
}

declare fp128 @llvm.fmuladd.f128(fp128, fp128, fp128)
