; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt %s -S -mtriple=x86_64-unknown-unknown -float128-expand -intel-libirc-allowed | FileCheck %s

define fp128 @main1(fp128 %x, fp128 %y, fp128 %z) {
; CHECK-LABEL: @main1(
; CHECK-NEXT:    [[TMP1:%.*]] = alloca fp128, align 16
; CHECK-NEXT:    [[TMP2:%.*]] = alloca fp128, align 16
; CHECK-NEXT:    [[TMP3:%.*]] = alloca fp128, align 16
; CHECK-NEXT:    [[TMP4:%.*]] = bitcast fp128* [[TMP2]] to i8*
; CHECK-NEXT:    call void @llvm.lifetime.start.p0i8(i64 16, i8* [[TMP4]])
; CHECK-NEXT:    store fp128 [[Y:%.*]], fp128* [[TMP2]], align 16
; CHECK-NEXT:    [[TMP5:%.*]] = bitcast fp128* [[TMP3]] to i8*
; CHECK-NEXT:    call void @llvm.lifetime.start.p0i8(i64 16, i8* [[TMP5]])
; CHECK-NEXT:    store fp128 [[X:%.*]], fp128* [[TMP3]], align 16
; CHECK-NEXT:    [[TMP6:%.*]] = bitcast fp128* [[TMP1]] to i8*
; CHECK-NEXT:    call void @llvm.lifetime.start.p0i8(i64 16, i8* [[TMP6]])
; CHECK-NEXT:    call void @__addq(fp128* [[TMP1]], fp128* [[TMP3]], fp128* [[TMP2]])
; CHECK-NEXT:    [[TMP7:%.*]] = bitcast fp128* [[TMP2]] to i8*
; CHECK-NEXT:    call void @llvm.lifetime.end.p0i8(i64 16, i8* [[TMP7]])
; CHECK-NEXT:    [[TMP8:%.*]] = bitcast fp128* [[TMP3]] to i8*
; CHECK-NEXT:    call void @llvm.lifetime.end.p0i8(i64 16, i8* [[TMP8]])
; CHECK-NEXT:    [[TMP9:%.*]] = load fp128, fp128* [[TMP1]], align 16
; CHECK-NEXT:    [[TMP10:%.*]] = bitcast fp128* [[TMP1]] to i8*
; CHECK-NEXT:    call void @llvm.lifetime.end.p0i8(i64 16, i8* [[TMP10]])
; CHECK-NEXT:    ret fp128 [[TMP9]]
;
  %a = fadd fp128 %x, %y
  ret fp128 %a
}

