; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt %s -bugpoint-enable-legacy-pm -S -mtriple=x86_64-unknown-unknown -float128-expand -intel-libirc-allowed | FileCheck %s

; Function Attrs: nofree noreturn nounwind uwtable
define dso_local i32 @main2(fp128 %x) local_unnamed_addr #0 {
; CHECK-LABEL: @main2(
; CHECK-NEXT:  bb1:
; CHECK-NEXT:    [[TMP0:%.*]] = alloca fp128, align 16
; CHECK-NEXT:    [[TMP1:%.*]] = alloca fp128, align 16
; CHECK-NEXT:    [[TMP2:%.*]] = alloca fp128, align 16
; CHECK-NEXT:    call void @llvm.lifetime.start.p0(i64 16, ptr [[TMP2]])
; CHECK-NEXT:    store fp128 [[X:%.*]], ptr [[TMP2]], align 16
; CHECK-NEXT:    br i1 undef, label [[BB2:%.*]], label [[BB3:%.*]]
; CHECK:       bb2:
; CHECK-NEXT:    call void @llvm.lifetime.start.p0(i64 16, ptr [[TMP0]])
; CHECK-NEXT:    call void @__addq(ptr [[TMP0]], ptr [[TMP2]], ptr [[TMP2]])
; CHECK-NEXT:    call void @llvm.lifetime.end.p0(i64 16, ptr [[TMP2]])
; CHECK-NEXT:    [[TMP3:%.*]] = load fp128, ptr [[TMP0]], align 16
; CHECK-NEXT:    call void @llvm.lifetime.end.p0(i64 16, ptr [[TMP0]])
; CHECK-NEXT:    ret i32 0
; CHECK:       bb3:
; CHECK-NEXT:    call void @llvm.lifetime.start.p0(i64 16, ptr [[TMP1]])
; CHECK-NEXT:    call void @__subq(ptr [[TMP1]], ptr [[TMP2]], ptr [[TMP2]])
; CHECK-NEXT:    call void @llvm.lifetime.end.p0(i64 16, ptr [[TMP2]])
; CHECK-NEXT:    [[TMP4:%.*]] = load fp128, ptr [[TMP1]], align 16
; CHECK-NEXT:    call void @llvm.lifetime.end.p0(i64 16, ptr [[TMP1]])
; CHECK-NEXT:    ret i32 1
;
bb1:
  br i1 undef, label %bb2, label %bb3
bb2:
  %0 = fadd fp128 %x, %x
  ret i32 0
bb3:
  %1 = fsub fp128 %x, %x
  ret i32 1
}
