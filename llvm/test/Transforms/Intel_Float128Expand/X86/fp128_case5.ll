; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt %s -enable-new-pm=0 -S -mtriple=x86_64-unknown-unknown -float128-expand -intel-libirc-allowed | FileCheck %s

; Function Attrs: nofree noreturn nounwind uwtable
define dso_local i32 @main1(fp128 %x) local_unnamed_addr #0 {
; CHECK-LABEL: @main1(
; CHECK-NEXT:  bb1:
; CHECK-NEXT:    [[TMP0:%.*]] = alloca fp128, align 16
; CHECK-NEXT:    [[TMP1:%.*]] = alloca fp128, align 16
; CHECK-NEXT:    [[TMP2:%.*]] = alloca fp128, align 16
; CHECK-NEXT:    [[TMP3:%.*]] = bitcast fp128* [[TMP2]] to i8*
; CHECK-NEXT:    call void @llvm.lifetime.start.p0i8(i64 16, i8* [[TMP3]])
; CHECK-NEXT:    store fp128 [[X:%.*]], fp128* [[TMP2]], align 16
; CHECK-NEXT:    [[TMP4:%.*]] = icmp eq i32 1, 0
; CHECK-NEXT:    br i1 undef, label [[BB2:%.*]], label [[BB3:%.*]]
; CHECK:       bb2:
; CHECK-NEXT:    [[TMP5:%.*]] = bitcast fp128* [[TMP0]] to i8*
; CHECK-NEXT:    call void @llvm.lifetime.start.p0i8(i64 16, i8* [[TMP5]])
; CHECK-NEXT:    call void @__addq(fp128* [[TMP0]], fp128* [[TMP2]], fp128* [[TMP2]])
; CHECK-NEXT:    [[TMP6:%.*]] = load fp128, fp128* [[TMP0]], align 16
; CHECK-NEXT:    [[TMP7:%.*]] = call i32 @__eqq(fp128* [[TMP0]], fp128* [[TMP2]])
; CHECK-NEXT:    [[TMP8:%.*]] = bitcast fp128* [[TMP0]] to i8*
; CHECK-NEXT:    call void @llvm.lifetime.end.p0i8(i64 16, i8* [[TMP8]])
; CHECK-NEXT:    [[TMP9:%.*]] = trunc i32 [[TMP7]] to i1
; CHECK-NEXT:    br label [[BB4:%.*]]
; CHECK:       bb3:
; CHECK-NEXT:    [[TMP10:%.*]] = call i32 @__eqq(fp128* [[TMP2]], fp128* [[TMP2]])
; CHECK-NEXT:    [[TMP11:%.*]] = trunc i32 [[TMP10]] to i1
; CHECK-NEXT:    br label [[BB4]]
; CHECK:       bb4:
; CHECK-NEXT:    [[TMP12:%.*]] = phi i32 [ 1, [[BB3]] ], [ 2, [[BB2]] ]
; CHECK-NEXT:    [[TMP13:%.*]] = bitcast fp128* [[TMP1]] to i8*
; CHECK-NEXT:    call void @llvm.lifetime.start.p0i8(i64 16, i8* [[TMP13]])
; CHECK-NEXT:    call void @__itoq(fp128* [[TMP1]], i32 [[TMP12]])
; CHECK-NEXT:    [[TMP14:%.*]] = load fp128, fp128* [[TMP1]], align 16
; CHECK-NEXT:    [[TMP15:%.*]] = call i32 @__eqq(fp128* [[TMP2]], fp128* [[TMP1]])
; CHECK-NEXT:    [[TMP16:%.*]] = bitcast fp128* [[TMP1]] to i8*
; CHECK-NEXT:    call void @llvm.lifetime.end.p0i8(i64 16, i8* [[TMP16]])
; CHECK-NEXT:    [[TMP17:%.*]] = bitcast fp128* [[TMP2]] to i8*
; CHECK-NEXT:    call void @llvm.lifetime.end.p0i8(i64 16, i8* [[TMP17]])
; CHECK-NEXT:    [[TMP18:%.*]] = trunc i32 [[TMP15]] to i1
; CHECK-NEXT:    [[TMP19:%.*]] = zext i1 [[TMP18]] to i32
; CHECK-NEXT:    ret i32 [[TMP19]]
;
bb1:
  %0 = icmp eq i32 1, 0
  br i1 undef, label %bb2, label %bb3
bb2:
  %1 = fadd fp128 %x, %x
  %2 = fcmp oeq fp128 %1, %x
  br label %bb4
bb3:
  %3 = fcmp oeq fp128 %x, %x
  br label %bb4
bb4:
  %4 = phi i32 [1, %bb3], [2, %bb2]
  %5 = sitofp i32 %4 to fp128
  %6 = fcmp oeq fp128 %x, %5
  %7 = zext i1 %6 to i32
  ret i32 %7
}
