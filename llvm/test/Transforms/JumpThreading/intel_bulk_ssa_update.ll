; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -passes="jump-threading,simplifycfg,instcombine" -S < %s | FileCheck %s

; We had a problem when using the SSAUpdaterBulk in the JumpThreading due to our
; customization to perform jump threading accross loop header that the
; SSAUpdaterBulk was not designed to handle.
;
; Verify that we won't accidentially pull the changes from the community code
; without fixes in the updater to deal with them.
;
; NOTE: "-simplifycfg -instcombine" are needed to simplify the check lines and
; make the potential miscompilation clear in the output IR.

define void @foo(i32 %sum.7.i) {
; CHECK-LABEL: @foo(
; CHECK-NEXT:  for.body41.thread.i:
; CHECK-NEXT:    [[CALL38_I29:%.*]] = call i32 @iequals(i32 363, i32 [[SUM_7_I:%.*]], i32 1)
; CHECK-NEXT:    [[CALL54_I:%.*]] = call i32 @iequals(i32 381, i32 7, i32 7)
; CHECK-NEXT:    ret void
;
for.body41.thread.i:
  %call38.i29 = call i32 @iequals(i32 363, i32 %sum.7.i, i32 1) #4
  br label %sw.bb42.i

for.cond39.i:
  %u.093.i = phi i32 [ %u.092.i, %sw.bb42.i ], [ %inc52.i, %sw.bb44.i ], [ %inc52.i , %sw.bb46.i ], [ %inc52.i, %sw.default48.i ]
  %sum.9.i = phi i32 [ %sum.9.i, %sw.default48.i ], [ %add47.i, %sw.bb46.i ], [ %add45.i, %sw.bb44.i ], [ %add43.i, %sw.bb42.i ]
  %inc52.i = add i32 %u.093.i, 1
  switch i32 %inc52.i, label %sw.default48.i [
  i32 2, label %for.end53.i
  i32 -1, label %sw.bb42.i
  i32 0, label %sw.bb44.i
  i32 1, label %sw.bb46.i
  ]

sw.bb42.i:
  %sum.895.i = phi i32 [ 0, %for.body41.thread.i ], [ %sum.9.i, %for.cond39.i ]
  %u.092.i = phi i32 [ -1, %for.body41.thread.i ], [ %inc52.i, %for.cond39.i ]
  %add43.i = add nsw i32 %sum.895.i, 1
  br label %for.cond39.i

sw.bb44.i:
  %add45.i = add nsw i32 %sum.9.i, 2
  br label %for.cond39.i

sw.bb46.i:
  %add47.i = add nsw i32 %sum.9.i, 4
  br label %for.cond39.i

sw.default48.i:
  %call49.i = call i32 @complain(i32 379)
  br label %for.cond39.i

for.end53.i:
  %call54.i = call i32 @iequals(i32 381, i32 %sum.9.i, i32 7)
  ret void
}

declare dso_local i32 @complain(i32) local_unnamed_addr
declare dso_local i32 @iequals(i32, i32, i32) local_unnamed_addr
