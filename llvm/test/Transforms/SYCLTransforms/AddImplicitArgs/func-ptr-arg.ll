; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -opaque-pointers -passes=sycl-kernel-add-implicit-args -enable-debugify -disable-output -S %s 2>&1 | FileCheck %s -check-prefix=DEBUGIFY
; RUN: opt -opaque-pointers -passes=sycl-kernel-add-implicit-args %s -S | FileCheck %s

define i32 @foo(i32 %a, i32 %b) {
; CHECK-LABEL: @foo(
; CHECK-NEXT:    [[S:%.*]] = add i32 [[A:%.*]], [[B:%.*]]
; CHECK-NEXT:    ret i32 [[S]]
;
  %s = add i32 %a, %b
  ret i32 %s
}

define void @bar(ptr %func.ptr, ptr %buf) {
; CHECK-LABEL: @bar(
; CHECK:    store ptr %func.ptr, ptr %buf, align 8
; CHECK-NEXT:      ret void
;
  store ptr %func.ptr, ptr %buf
  ret void
}

define void @func() {
; CHECK-LABEL: @func(
; CHECK:    [[BUF:%.*]] = alloca ptr, align 8
; CHECK:    [[FUNCPTR:%.*]] = bitcast ptr @foo to ptr
; CHECK:    call void @bar(ptr [[FUNCPTR]], ptr [[BUF]], ptr addrspace(3) noalias %pLocalMemBase, ptr noalias [[PWORKDIM:%.*]], ptr noalias [[PWGID:%.*]], [4 x i64] [[BASEGLBID:%.*]], ptr noalias [[PSPECIALBUF:%.*]], ptr noalias [[RUNTIMEHANDLE:%.*]])
; CHECK-NEXT:      ret void
;
  %buf = alloca ptr
  call void @bar(ptr @foo, ptr %buf)
  ret void
}

; DEBUGIFY-NOT: WARNING:
; DEBUGIFY: CheckModuleDebugify: PASS
