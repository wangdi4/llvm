; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: -p
; RUN: opt -S -passes="simplifycfg<switch-to-lookup>" < %s | FileCheck %s ;INTEL

target triple = "x86_64-unknown-linux-gnu"

%struct.ham = type <{ i32, i32, i32, i8, i8, [2 x i8] }>

@global = external constant [75 x { i32, i32, i32, i8, i8 }]

; INTEL_CUSTOMIZATION
; original code had nulls here, but xmain will remove duplicate cases with the
; same result
@global2 = external global i64
@global3 = external global i64

; xmain folds the branches to selects, below.
; end INTEL_CUSTOMIZATION

define i1 @zot(i32 %arg) {
; CHECK-LABEL: @zot(
; CHECK-NEXT:  bb:
; CHECK-NEXT:    %cond = icmp eq i32 %arg, 1 ;INTEL
; CHECK-NEXT:    %spec.select = select i1 %cond, ptr getelementptr inbounds ([75 x { i32, i32, i32, i8, i8 }], ptr @global, i64 0, i64 6, i32 0), ptr null ;INTEL
; CHECK-NEXT:    %tmp8 = icmp eq ptr %spec.select, getelementptr inbounds ([75 x { i32, i32, i32, i8, i8 }], ptr @global, i64 1, i64 0, i32 0) ;INTEL
; CHECK-NEXT:    ret i1 %tmp8
;
bb:
  %tmp = icmp eq i32 %arg, 1
  br i1 %tmp, label %bb6, label %bb1

bb1:                                              ; preds = %bb
  %tmp2 = icmp eq i32 %arg, 2
  br i1 %tmp2, label %bb6, label %bb3

bb3:                                              ; preds = %bb1
  %tmp4 = icmp eq i32 %arg, 0
  br i1 %tmp4, label %bb6, label %bb5

bb5:                                              ; preds = %bb3
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3, %bb1, %bb
  %tmp7 = phi ptr [ null, %bb5 ], [ getelementptr inbounds ([75 x { i32, i32, i32, i8, i8 }], ptr @global, i64 0, i64 6, i32 0), %bb ], [ null, %bb1 ], [ null, %bb3 ]
  %tmp8 = icmp eq ptr %tmp7, getelementptr inbounds ([75 x { i32, i32, i32, i8, i8 }], ptr @global, i64 1, i64 0, i32 0)
  ret i1 %tmp8
}
