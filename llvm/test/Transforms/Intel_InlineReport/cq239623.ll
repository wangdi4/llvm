; Inline report
; RUN: opt -passes='cgscc(inline)' -inline-report=0xe807  < %s -S 2>&1 | FileCheck %s
; Inline report via metadata
; RUN: opt -passes='inlinereportsetup' -inline-report=0xe886 < %s -S | opt -passes='cgscc(inline)' -inline-report=0xe886 -S | opt -passes='inlinereportemitter' -inline-report=0xe886 -S 2>&1 | FileCheck %s

; CHECK: Begin
; CHECK: End Inlining Report

; ModuleID = 'cq239623.c'
source_filename = "cq239623.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.DES_bs_combined = type { %union.anon, %union.anon.0, [56 x i64], [64 x i64], i64, i64, [8 x i64], %union.anon.1, [32 x i8*], i32, i32, [48 x i64*] }
%union.anon = type { [768 x i64*] }
%union.anon.0 = type { [96 x i64*] }
%union.anon.1 = type { [8 x [8 x i64]] }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

@stdout = external global %struct._IO_FILE*, align 8
@stdin = external global %struct._IO_FILE*, align 8
@DES_bs_all = external global %struct.DES_bs_combined, align 8
@stderr = external global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [12 x i8] c"goto  body\0A\00", align 1

; Function Attrs: inlinehint nounwind uwtable
define i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) #0 {
entry:
  %__fmt.addr = alloca i8*, align 8
  %__arg.addr = alloca %struct.__va_list_tag*, align 8
  store i8* %__fmt, i8** %__fmt.addr, align 8
  store %struct.__va_list_tag* %__arg, %struct.__va_list_tag** %__arg.addr, align 8
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %1 = load i8*, i8** %__fmt.addr, align 8
  %2 = load %struct.__va_list_tag*, %struct.__va_list_tag** %__arg.addr, align 8
  %call = call i32 @vfprintf(%struct._IO_FILE* %0, i8* %1, %struct.__va_list_tag* %2)
  ret i32 %call
}

declare i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) #1

; Function Attrs: inlinehint nounwind uwtable
define i32 @getchar() #0 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %call = call i32 @_IO_getc(%struct._IO_FILE* %0)
  ret i32 %call
}

declare i32 @_IO_getc(%struct._IO_FILE*) #1

; Function Attrs: inlinehint nounwind uwtable
define i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) #0 {
entry:
  %__fp.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %__fp, %struct._IO_FILE** %__fp.addr, align 8
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %__fp.addr, align 8
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 1
  %1 = load i8*, i8** %_IO_read_ptr, align 8
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %__fp.addr, align 8
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %2, i32 0, i32 2
  %3 = load i8*, i8** %_IO_read_end, align 8
  %cmp = icmp uge i8* %1, %3
  %conv = zext i1 %cmp to i32
  %conv1 = sext i32 %conv to i64
  %tobool = icmp ne i64 %conv1, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %__fp.addr, align 8
  %call = call i32 @__uflow(%struct._IO_FILE* %4)
  br label %cond.end

cond.false:                                       ; preds = %entry
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %__fp.addr, align 8
  %_IO_read_ptr2 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %5, i32 0, i32 1
  %6 = load i8*, i8** %_IO_read_ptr2, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %6, i32 1
  store i8* %incdec.ptr, i8** %_IO_read_ptr2, align 8
  %7 = load i8, i8* %6, align 1
  %conv3 = zext i8 %7 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ]
  ret i32 %cond
}

declare i32 @__uflow(%struct._IO_FILE*) #1

; Function Attrs: inlinehint nounwind uwtable
define i32 @getc_unlocked(%struct._IO_FILE* %__fp) #0 {
entry:
  %__fp.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %__fp, %struct._IO_FILE** %__fp.addr, align 8
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %__fp.addr, align 8
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 1
  %1 = load i8*, i8** %_IO_read_ptr, align 8
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %__fp.addr, align 8
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %2, i32 0, i32 2
  %3 = load i8*, i8** %_IO_read_end, align 8
  %cmp = icmp uge i8* %1, %3
  %conv = zext i1 %cmp to i32
  %conv1 = sext i32 %conv to i64
  %tobool = icmp ne i64 %conv1, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %__fp.addr, align 8
  %call = call i32 @__uflow(%struct._IO_FILE* %4)
  br label %cond.end

cond.false:                                       ; preds = %entry
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %__fp.addr, align 8
  %_IO_read_ptr2 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %5, i32 0, i32 1
  %6 = load i8*, i8** %_IO_read_ptr2, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %6, i32 1
  store i8* %incdec.ptr, i8** %_IO_read_ptr2, align 8
  %7 = load i8, i8* %6, align 1
  %conv3 = zext i8 %7 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ]
  ret i32 %cond
}

; Function Attrs: inlinehint nounwind uwtable
define i32 @getchar_unlocked() #0 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 1
  %1 = load i8*, i8** %_IO_read_ptr, align 8
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %2, i32 0, i32 2
  %3 = load i8*, i8** %_IO_read_end, align 8
  %cmp = icmp uge i8* %1, %3
  %conv = zext i1 %cmp to i32
  %conv1 = sext i32 %conv to i64
  %tobool = icmp ne i64 %conv1, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %call = call i32 @__uflow(%struct._IO_FILE* %4)
  br label %cond.end

cond.false:                                       ; preds = %entry
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %_IO_read_ptr2 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %5, i32 0, i32 1
  %6 = load i8*, i8** %_IO_read_ptr2, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %6, i32 1
  store i8* %incdec.ptr, i8** %_IO_read_ptr2, align 8
  %7 = load i8, i8* %6, align 1
  %conv3 = zext i8 %7 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ]
  ret i32 %cond
}

; Function Attrs: inlinehint nounwind uwtable
define i32 @putchar(i32 %__c) #0 {
entry:
  %__c.addr = alloca i32, align 4
  store i32 %__c, i32* %__c.addr, align 4
  %0 = load i32, i32* %__c.addr, align 4
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %call = call i32 @_IO_putc(i32 %0, %struct._IO_FILE* %1)
  ret i32 %call
}

declare i32 @_IO_putc(i32, %struct._IO_FILE*) #1

; Function Attrs: inlinehint nounwind uwtable
define i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) #0 {
entry:
  %__c.addr = alloca i32, align 4
  %__stream.addr = alloca %struct._IO_FILE*, align 8
  store i32 %__c, i32* %__c.addr, align 4
  store %struct._IO_FILE* %__stream, %struct._IO_FILE** %__stream.addr, align 8
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %__stream.addr, align 8
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 5
  %1 = load i8*, i8** %_IO_write_ptr, align 8
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %__stream.addr, align 8
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %2, i32 0, i32 6
  %3 = load i8*, i8** %_IO_write_end, align 8
  %cmp = icmp uge i8* %1, %3
  %conv = zext i1 %cmp to i32
  %conv1 = sext i32 %conv to i64
  %tobool = icmp ne i64 %conv1, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %__stream.addr, align 8
  %5 = load i32, i32* %__c.addr, align 4
  %conv2 = trunc i32 %5 to i8
  %conv3 = zext i8 %conv2 to i32
  %call = call i32 @__overflow(%struct._IO_FILE* %4, i32 %conv3)
  br label %cond.end

cond.false:                                       ; preds = %entry
  %6 = load i32, i32* %__c.addr, align 4
  %conv4 = trunc i32 %6 to i8
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %__stream.addr, align 8
  %_IO_write_ptr5 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %7, i32 0, i32 5
  %8 = load i8*, i8** %_IO_write_ptr5, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %8, i32 1
  store i8* %incdec.ptr, i8** %_IO_write_ptr5, align 8
  store i8 %conv4, i8* %8, align 1
  %conv6 = zext i8 %conv4 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ]
  ret i32 %cond
}

declare i32 @__overflow(%struct._IO_FILE*, i32) #1

; Function Attrs: inlinehint nounwind uwtable
define i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) #0 {
entry:
  %__c.addr = alloca i32, align 4
  %__stream.addr = alloca %struct._IO_FILE*, align 8
  store i32 %__c, i32* %__c.addr, align 4
  store %struct._IO_FILE* %__stream, %struct._IO_FILE** %__stream.addr, align 8
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %__stream.addr, align 8
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 5
  %1 = load i8*, i8** %_IO_write_ptr, align 8
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %__stream.addr, align 8
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %2, i32 0, i32 6
  %3 = load i8*, i8** %_IO_write_end, align 8
  %cmp = icmp uge i8* %1, %3
  %conv = zext i1 %cmp to i32
  %conv1 = sext i32 %conv to i64
  %tobool = icmp ne i64 %conv1, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %__stream.addr, align 8
  %5 = load i32, i32* %__c.addr, align 4
  %conv2 = trunc i32 %5 to i8
  %conv3 = zext i8 %conv2 to i32
  %call = call i32 @__overflow(%struct._IO_FILE* %4, i32 %conv3)
  br label %cond.end

cond.false:                                       ; preds = %entry
  %6 = load i32, i32* %__c.addr, align 4
  %conv4 = trunc i32 %6 to i8
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %__stream.addr, align 8
  %_IO_write_ptr5 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %7, i32 0, i32 5
  %8 = load i8*, i8** %_IO_write_ptr5, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %8, i32 1
  store i8* %incdec.ptr, i8** %_IO_write_ptr5, align 8
  store i8 %conv4, i8* %8, align 1
  %conv6 = zext i8 %conv4 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ]
  ret i32 %cond
}

; Function Attrs: inlinehint nounwind uwtable
define i32 @putchar_unlocked(i32 %__c) #0 {
entry:
  %__c.addr = alloca i32, align 4
  store i32 %__c, i32* %__c.addr, align 4
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 5
  %1 = load i8*, i8** %_IO_write_ptr, align 8
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %2, i32 0, i32 6
  %3 = load i8*, i8** %_IO_write_end, align 8
  %cmp = icmp uge i8* %1, %3
  %conv = zext i1 %cmp to i32
  %conv1 = sext i32 %conv to i64
  %tobool = icmp ne i64 %conv1, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %5 = load i32, i32* %__c.addr, align 4
  %conv2 = trunc i32 %5 to i8
  %conv3 = zext i8 %conv2 to i32
  %call = call i32 @__overflow(%struct._IO_FILE* %4, i32 %conv3)
  br label %cond.end

cond.false:                                       ; preds = %entry
  %6 = load i32, i32* %__c.addr, align 4
  %conv4 = trunc i32 %6 to i8
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %_IO_write_ptr5 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %7, i32 0, i32 5
  %8 = load i8*, i8** %_IO_write_ptr5, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %8, i32 1
  store i8* %incdec.ptr, i8** %_IO_write_ptr5, align 8
  store i8 %conv4, i8* %8, align 1
  %conv6 = zext i8 %conv4 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ]
  ret i32 %cond
}

; Function Attrs: inlinehint nounwind uwtable
define i32 @feof_unlocked(%struct._IO_FILE* %__stream) #0 {
entry:
  %__stream.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %__stream, %struct._IO_FILE** %__stream.addr, align 8
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %__stream.addr, align 8
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 0
  %1 = load i32, i32* %_flags, align 8
  %and = and i32 %1, 16
  %cmp = icmp ne i32 %and, 0
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: inlinehint nounwind uwtable
define i32 @ferror_unlocked(%struct._IO_FILE* %__stream) #0 {
entry:
  %__stream.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %__stream, %struct._IO_FILE** %__stream.addr, align 8
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %__stream.addr, align 8
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 0
  %1 = load i32, i32* %_flags, align 8
  %and = and i32 %1, 32
  %cmp = icmp ne i32 %and, 0
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: inlinehint nounwind readonly uwtable
define double @atof(i8* nonnull %__nptr) #2 {
entry:
  %__nptr.addr = alloca i8*, align 8
  store i8* %__nptr, i8** %__nptr.addr, align 8
  %0 = load i8*, i8** %__nptr.addr, align 8
  %call = call double @strtod(i8* %0, i8** null) #5
  ret double %call
}

; Function Attrs: nounwind
declare double @strtod(i8*, i8**) #3

; Function Attrs: inlinehint nounwind readonly uwtable
define i32 @atoi(i8* nonnull %__nptr) #2 {
entry:
  %__nptr.addr = alloca i8*, align 8
  store i8* %__nptr, i8** %__nptr.addr, align 8
  %0 = load i8*, i8** %__nptr.addr, align 8
  %call = call i64 @strtol(i8* %0, i8** null, i32 10) #5
  %conv = trunc i64 %call to i32
  ret i32 %conv
}

; Function Attrs: nounwind
declare i64 @strtol(i8*, i8**, i32) #3

; Function Attrs: inlinehint nounwind readonly uwtable
define i64 @atol(i8* nonnull %__nptr) #2 {
entry:
  %__nptr.addr = alloca i8*, align 8
  store i8* %__nptr, i8** %__nptr.addr, align 8
  %0 = load i8*, i8** %__nptr.addr, align 8
  %call = call i64 @strtol(i8* %0, i8** null, i32 10) #5
  ret i64 %call
}

; Function Attrs: inlinehint nounwind readonly uwtable
define i64 @atoll(i8* nonnull %__nptr) #2 {
entry:
  %__nptr.addr = alloca i8*, align 8
  store i8* %__nptr, i8** %__nptr.addr, align 8
  %0 = load i8*, i8** %__nptr.addr, align 8
  %call = call i64 @strtoll(i8* %0, i8** null, i32 10) #5
  ret i64 %call
}

; Function Attrs: nounwind
declare i64 @strtoll(i8*, i8**, i32) #3

; Function Attrs: inlinehint nounwind uwtable
define i32 @gnu_dev_major(i64 %__dev) #0 {
entry:
  %__dev.addr = alloca i64, align 8
  store i64 %__dev, i64* %__dev.addr, align 8
  %0 = load i64, i64* %__dev.addr, align 8
  %shr = lshr i64 %0, 8
  %and = and i64 %shr, 4095
  %1 = load i64, i64* %__dev.addr, align 8
  %shr1 = lshr i64 %1, 32
  %conv = trunc i64 %shr1 to i32
  %and2 = and i32 %conv, -4096
  %conv3 = zext i32 %and2 to i64
  %or = or i64 %and, %conv3
  %conv4 = trunc i64 %or to i32
  ret i32 %conv4
}

; Function Attrs: inlinehint nounwind uwtable
define i32 @gnu_dev_minor(i64 %__dev) #0 {
entry:
  %__dev.addr = alloca i64, align 8
  store i64 %__dev, i64* %__dev.addr, align 8
  %0 = load i64, i64* %__dev.addr, align 8
  %and = and i64 %0, 255
  %1 = load i64, i64* %__dev.addr, align 8
  %shr = lshr i64 %1, 12
  %conv = trunc i64 %shr to i32
  %and1 = and i32 %conv, -256
  %conv2 = zext i32 %and1 to i64
  %or = or i64 %and, %conv2
  %conv3 = trunc i64 %or to i32
  ret i32 %conv3
}

; Function Attrs: inlinehint nounwind uwtable
define i64 @gnu_dev_makedev(i32 %__major, i32 %__minor) #0 {
entry:
  %__major.addr = alloca i32, align 4
  %__minor.addr = alloca i32, align 4
  store i32 %__major, i32* %__major.addr, align 4
  store i32 %__minor, i32* %__minor.addr, align 4
  %0 = load i32, i32* %__minor.addr, align 4
  %and = and i32 %0, 255
  %1 = load i32, i32* %__major.addr, align 4
  %and1 = and i32 %1, 4095
  %shl = shl i32 %and1, 8
  %or = or i32 %and, %shl
  %conv = zext i32 %or to i64
  %2 = load i32, i32* %__minor.addr, align 4
  %and2 = and i32 %2, -256
  %conv3 = zext i32 %and2 to i64
  %shl4 = shl i64 %conv3, 12
  %or5 = or i64 %conv, %shl4
  %3 = load i32, i32* %__major.addr, align 4
  %and6 = and i32 %3, -4096
  %conv7 = zext i32 %and6 to i64
  %shl8 = shl i64 %conv7, 32
  %or9 = or i64 %or5, %shl8
  ret i64 %or9
}

; Function Attrs: nounwind uwtable
define void @DES_bs_set_salt(i64 %salt) #4 {
entry:
  %salt.addr = alloca i64, align 8
  %new = alloca i32, align 4
  %old = alloca i32, align 4
  %dst = alloca i32, align 4
  %sp1 = alloca i64*, align 8
  %sp2 = alloca i64*, align 8
  %src1 = alloca i32, align 4
  %src2 = alloca i32, align 4
  store i64 %salt, i64* %salt.addr, align 8
  %0 = load i64, i64* %salt.addr, align 8
  %conv = trunc i64 %0 to i32
  store i32 %conv, i32* %new, align 4
  %1 = load i32, i32* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 10), align 4
  store i32 %1, i32* %old, align 4
  %2 = load i32, i32* %new, align 4
  store i32 %2, i32* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 10), align 4
  store i32 0, i32* %dst, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %dst, align 4
  %cmp = icmp slt i32 %3, 24
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %new, align 4
  %5 = load i32, i32* %old, align 4
  %xor = xor i32 %4, %5
  %and = and i32 %xor, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %if.end19

if.then:                                          ; preds = %for.body
  %6 = load i32, i32* %dst, align 4
  store i32 %6, i32* %src1, align 4
  %7 = load i32, i32* %dst, align 4
  %add = add nsw i32 %7, 24
  store i32 %add, i32* %src2, align 4
  %8 = load i32, i32* %new, align 4
  %and2 = and i32 %8, 1
  %tobool3 = icmp ne i32 %and2, 0
  br i1 %tobool3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.then
  %9 = load i32, i32* %src2, align 4
  store i32 %9, i32* %src1, align 4
  %10 = load i32, i32* %dst, align 4
  store i32 %10, i32* %src2, align 4
  br label %if.end

if.end:                                           ; preds = %if.then4, %if.then
  %11 = load i32, i32* %src1, align 4
  %idxprom = sext i32 %11 to i64
  %arrayidx = getelementptr inbounds [48 x i64*], [48 x i64*]* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 11), i64 0, i64 %idxprom
  %12 = load i64*, i64** %arrayidx, align 8
  store i64* %12, i64** %sp1, align 8
  %13 = load i32, i32* %src2, align 4
  %idxprom5 = sext i32 %13 to i64
  %arrayidx6 = getelementptr inbounds [48 x i64*], [48 x i64*]* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 11), i64 0, i64 %idxprom5
  %14 = load i64*, i64** %arrayidx6, align 8
  store i64* %14, i64** %sp2, align 8
  %15 = load i64*, i64** %sp1, align 8
  %16 = load i32, i32* %dst, align 4
  %idxprom7 = sext i32 %16 to i64
  %arrayidx8 = getelementptr inbounds [96 x i64*], [96 x i64*]* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0), i64 0, i64 %idxprom7
  store i64* %15, i64** %arrayidx8, align 8
  %17 = load i64*, i64** %sp2, align 8
  %18 = load i32, i32* %dst, align 4
  %add9 = add nsw i32 %18, 24
  %idxprom10 = sext i32 %add9 to i64
  %arrayidx11 = getelementptr inbounds [96 x i64*], [96 x i64*]* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0), i64 0, i64 %idxprom10
  store i64* %17, i64** %arrayidx11, align 8
  %19 = load i64*, i64** %sp1, align 8
  %add.ptr = getelementptr inbounds i64, i64* %19, i64 32
  %20 = load i32, i32* %dst, align 4
  %add12 = add nsw i32 %20, 48
  %idxprom13 = sext i32 %add12 to i64
  %arrayidx14 = getelementptr inbounds [96 x i64*], [96 x i64*]* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0), i64 0, i64 %idxprom13
  store i64* %add.ptr, i64** %arrayidx14, align 8
  %21 = load i64*, i64** %sp2, align 8
  %add.ptr15 = getelementptr inbounds i64, i64* %21, i64 32
  %22 = load i32, i32* %dst, align 4
  %add16 = add nsw i32 %22, 72
  %idxprom17 = sext i32 %add16 to i64
  %arrayidx18 = getelementptr inbounds [96 x i64*], [96 x i64*]* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0), i64 0, i64 %idxprom17
  store i64* %add.ptr15, i64** %arrayidx18, align 8
  br label %if.end19

if.end19:                                         ; preds = %if.end, %for.body
  %23 = load i32, i32* %new, align 4
  %shr = lshr i32 %23, 1
  store i32 %shr, i32* %new, align 4
  %24 = load i32, i32* %old, align 4
  %shr20 = lshr i32 %24, 1
  store i32 %shr20, i32* %old, align 4
  %25 = load i32, i32* %new, align 4
  %26 = load i32, i32* %old, align 4
  %cmp21 = icmp eq i32 %25, %26
  br i1 %cmp21, label %if.then23, label %if.end24

if.then23:                                        ; preds = %if.end19
  br label %for.end

if.end24:                                         ; preds = %if.end19
  br label %for.inc

for.inc:                                          ; preds = %if.end24
  %27 = load i32, i32* %dst, align 4
  %inc = add nsw i32 %27, 1
  store i32 %inc, i32* %dst, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then23, %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define void @DES_bs_crypt_25(i32 %keys_count) #4 {
entry:
  %a1.addr.i7952 = alloca i64, align 8
  %a2.addr.i7953 = alloca i64, align 8
  %a3.addr.i7954 = alloca i64, align 8
  %a4.addr.i7955 = alloca i64, align 8
  %a5.addr.i7956 = alloca i64, align 8
  %a6.addr.i7957 = alloca i64, align 8
  %out1.addr.i7958 = alloca i64*, align 8
  %out2.addr.i7959 = alloca i64*, align 8
  %out3.addr.i7960 = alloca i64*, align 8
  %out4.addr.i7961 = alloca i64*, align 8
  %x33CC33CC.i7962 = alloca i64, align 8
  %x55550000.i7963 = alloca i64, align 8
  %x00AA00FF.i7964 = alloca i64, align 8
  %x33BB33FF.i7965 = alloca i64, align 8
  %x33CC0000.i7966 = alloca i64, align 8
  %x11441144.i7967 = alloca i64, align 8
  %x11BB11BB.i7968 = alloca i64, align 8
  %x003311BB.i7969 = alloca i64, align 8
  %x00000F0F.i7970 = alloca i64, align 8
  %x336600FF.i7971 = alloca i64, align 8
  %x332200FF.i7972 = alloca i64, align 8
  %x332200F0.i7973 = alloca i64, align 8
  %x0302000F.i7974 = alloca i64, align 8
  %xAAAAAAAA.i7975 = alloca i64, align 8
  %xA9A8AAA5.i7976 = alloca i64, align 8
  %x33CCCC33.i7977 = alloca i64, align 8
  %x33CCC030.i7978 = alloca i64, align 8
  %x9A646A95.i7979 = alloca i64, align 8
  %x00333303.i7980 = alloca i64, align 8
  %x118822B8.i7981 = alloca i64, align 8
  %xA8208805.i7982 = alloca i64, align 8
  %x3CC3C33C.i7983 = alloca i64, align 8
  %x94E34B39.i7984 = alloca i64, align 8
  %x0331330C.i7985 = alloca i64, align 8
  %x3FF3F33C.i7986 = alloca i64, align 8
  %xA9DF596A.i7987 = alloca i64, align 8
  %xA9DF5F6F.i7988 = alloca i64, align 8
  %x962CAC53.i7989 = alloca i64, align 8
  %x97D27835.i7990 = alloca i64, align 8
  %x81D25825.i7991 = alloca i64, align 8
  %x812D58DA.i7992 = alloca i64, align 8
  %x802158DA.i7993 = alloca i64, align 8
  %x1A45324F.i7994 = alloca i64, align 8
  %x0A451047.i7995 = alloca i64, align 8
  %xBBDFDD7B.i7996 = alloca i64, align 8
  %xB19ACD3C.i7997 = alloca i64, align 8
  %x00.i7998 = alloca i64, align 8
  %x01.i7999 = alloca i64, align 8
  %x10.i8000 = alloca i64, align 8
  %x11.i8001 = alloca i64, align 8
  %x20.i8002 = alloca i64, align 8
  %x21.i8003 = alloca i64, align 8
  %x30.i8004 = alloca i64, align 8
  %x31.i8005 = alloca i64, align 8
  %a1.addr.i7832 = alloca i64, align 8
  %a2.addr.i7833 = alloca i64, align 8
  %a3.addr.i7834 = alloca i64, align 8
  %a4.addr.i7835 = alloca i64, align 8
  %a5.addr.i7836 = alloca i64, align 8
  %a6.addr.i7837 = alloca i64, align 8
  %out1.addr.i7838 = alloca i64*, align 8
  %out2.addr.i7839 = alloca i64*, align 8
  %out3.addr.i7840 = alloca i64*, align 8
  %out4.addr.i7841 = alloca i64*, align 8
  %x44444444.i7842 = alloca i64, align 8
  %x0F0FF0F0.i7843 = alloca i64, align 8
  %x4F4FF4F4.i7844 = alloca i64, align 8
  %x00FFFF00.i7845 = alloca i64, align 8
  %x00AAAA00.i7846 = alloca i64, align 8
  %x4FE55EF4.i7847 = alloca i64, align 8
  %x3C3CC3C3.i7848 = alloca i64, align 8
  %x3C3C0000.i7849 = alloca i64, align 8
  %x7373F4F4.i7850 = alloca i64, align 8
  %x0C840A00.i7851 = alloca i64, align 8
  %x00005EF4.i7852 = alloca i64, align 8
  %x00FF5EFF.i7853 = alloca i64, align 8
  %x00555455.i7854 = alloca i64, align 8
  %x3C699796.i7855 = alloca i64, align 8
  %x000FF000.i7856 = alloca i64, align 8
  %x55AA55AA.i7857 = alloca i64, align 8
  %x26D9A15E.i7858 = alloca i64, align 8
  %x2FDFAF5F.i7859 = alloca i64, align 8
  %x2FD00F5F.i7860 = alloca i64, align 8
  %x55AAFFAA.i7861 = alloca i64, align 8
  %x28410014.i7862 = alloca i64, align 8
  %x000000FF.i7863 = alloca i64, align 8
  %x000000CC.i7864 = alloca i64, align 8
  %x284100D8.i7865 = alloca i64, align 8
  %x204000D0.i7866 = alloca i64, align 8
  %x3C3CC3FF.i7867 = alloca i64, align 8
  %x1C3CC32F.i7868 = alloca i64, align 8
  %x4969967A.i7869 = alloca i64, align 8
  %x4CC44CC4.i7870 = alloca i64, align 8
  %x40C040C0.i7871 = alloca i64, align 8
  %x69963C69.i7872 = alloca i64, align 8
  %x9669C396.i7873 = alloca i64, align 8
  %xD6A98356.i7874 = alloca i64, align 8
  %x000F00F0.i7875 = alloca i64, align 8
  %xFEBDC3D7.i7876 = alloca i64, align 8
  %xFEB0C307.i7877 = alloca i64, align 8
  %x4CEEEEC4.i7878 = alloca i64, align 8
  %xB25E2DC3.i7879 = alloca i64, align 8
  %x00.i7880 = alloca i64, align 8
  %x01.i7881 = alloca i64, align 8
  %x10.i7882 = alloca i64, align 8
  %x11.i7883 = alloca i64, align 8
  %x20.i7884 = alloca i64, align 8
  %x21.i7885 = alloca i64, align 8
  %x30.i7886 = alloca i64, align 8
  %x31.i7887 = alloca i64, align 8
  %a1.addr.i7743 = alloca i64, align 8
  %a2.addr.i7744 = alloca i64, align 8
  %a3.addr.i7745 = alloca i64, align 8
  %a4.addr.i7746 = alloca i64, align 8
  %a5.addr.i7747 = alloca i64, align 8
  %a6.addr.i7748 = alloca i64, align 8
  %out1.addr.i7749 = alloca i64*, align 8
  %out2.addr.i7750 = alloca i64*, align 8
  %out3.addr.i7751 = alloca i64*, align 8
  %out4.addr.i7752 = alloca i64*, align 8
  %x5A5A5A5A.i7753 = alloca i64, align 8
  %x0F0FF0F0.i7754 = alloca i64, align 8
  %x33FF33FF.i7755 = alloca i64, align 8
  %x33FFCC00.i7756 = alloca i64, align 8
  %x0C0030F0.i7757 = alloca i64, align 8
  %x0C0CC0C0.i7758 = alloca i64, align 8
  %x0CF3C03F.i7759 = alloca i64, align 8
  %x5EFBDA7F.i7760 = alloca i64, align 8
  %x52FBCA0F.i7761 = alloca i64, align 8
  %x61C8F93C.i7762 = alloca i64, align 8
  %x00C0C03C.i7763 = alloca i64, align 8
  %x0F0F30C0.i7764 = alloca i64, align 8
  %x3B92A366.i7765 = alloca i64, align 8
  %x30908326.i7766 = alloca i64, align 8
  %x3C90B3D6.i7767 = alloca i64, align 8
  %x33CC33CC.i7768 = alloca i64, align 8
  %x0C0CFFFF.i7769 = alloca i64, align 8
  %x379E5C99.i7770 = alloca i64, align 8
  %x04124C11.i7771 = alloca i64, align 8
  %x56E9861E.i7772 = alloca i64, align 8
  %xA91679E1.i7773 = alloca i64, align 8
  %x9586CA37.i7774 = alloca i64, align 8
  %x8402C833.i7775 = alloca i64, align 8
  %x84C2C83F.i7776 = alloca i64, align 8
  %xB35C94A6.i7777 = alloca i64, align 8
  %x00.i7778 = alloca i64, align 8
  %x01.i7779 = alloca i64, align 8
  %x10.i7780 = alloca i64, align 8
  %x11.i7781 = alloca i64, align 8
  %x20.i7782 = alloca i64, align 8
  %x21.i7783 = alloca i64, align 8
  %x30.i7784 = alloca i64, align 8
  %x31.i7785 = alloca i64, align 8
  %a1.addr.i7624 = alloca i64, align 8
  %a2.addr.i7625 = alloca i64, align 8
  %a3.addr.i7626 = alloca i64, align 8
  %a4.addr.i7627 = alloca i64, align 8
  %a5.addr.i7628 = alloca i64, align 8
  %a6.addr.i7629 = alloca i64, align 8
  %out1.addr.i7630 = alloca i64*, align 8
  %out2.addr.i7631 = alloca i64*, align 8
  %out3.addr.i7632 = alloca i64*, align 8
  %out4.addr.i7633 = alloca i64*, align 8
  %x77777777.i7634 = alloca i64, align 8
  %x77770000.i7635 = alloca i64, align 8
  %x22225555.i7636 = alloca i64, align 8
  %x11116666.i7637 = alloca i64, align 8
  %x1F1F6F6F.i7638 = alloca i64, align 8
  %x70700000.i7639 = alloca i64, align 8
  %x43433333.i7640 = alloca i64, align 8
  %x00430033.i7641 = alloca i64, align 8
  %x55557777.i7642 = alloca i64, align 8
  %x55167744.i7643 = alloca i64, align 8
  %x5A19784B.i7644 = alloca i64, align 8
  %x5A1987B4.i7645 = alloca i64, align 8
  %x7A3BD7F5.i7646 = alloca i64, align 8
  %x003B00F5.i7647 = alloca i64, align 8
  %x221955A0.i7648 = alloca i64, align 8
  %x05050707.i7649 = alloca i64, align 8
  %x271C52A7.i7650 = alloca i64, align 8
  %x2A2A82A0.i7651 = alloca i64, align 8
  %x6969B193.i7652 = alloca i64, align 8
  %x1FE06F90.i7653 = alloca i64, align 8
  %x16804E00.i7654 = alloca i64, align 8
  %xE97FB1FF.i7655 = alloca i64, align 8
  %x43403302.i7656 = alloca i64, align 8
  %x35CAED30.i7657 = alloca i64, align 8
  %x37DEFFB7.i7658 = alloca i64, align 8
  %x349ECCB5.i7659 = alloca i64, align 8
  %x0B01234A.i7660 = alloca i64, align 8
  %x101884B4.i7661 = alloca i64, align 8
  %x0FF8EB24.i7662 = alloca i64, align 8
  %x41413333.i7663 = alloca i64, align 8
  %x4FF9FB37.i7664 = alloca i64, align 8
  %x4FC2FBC2.i7665 = alloca i64, align 8
  %x22222222.i7666 = alloca i64, align 8
  %x16BCEE97.i7667 = alloca i64, align 8
  %x0F080B04.i7668 = alloca i64, align 8
  %x19B4E593.i7669 = alloca i64, align 8
  %x5C5C5C5C.i7670 = alloca i64, align 8
  %x4448184C.i7671 = alloca i64, align 8
  %x2DDABE71.i7672 = alloca i64, align 8
  %x6992A63D.i7673 = alloca i64, align 8
  %x00.i7674 = alloca i64, align 8
  %x01.i7675 = alloca i64, align 8
  %x10.i7676 = alloca i64, align 8
  %x11.i7677 = alloca i64, align 8
  %x20.i7678 = alloca i64, align 8
  %x21.i7679 = alloca i64, align 8
  %x30.i7680 = alloca i64, align 8
  %x31.i7681 = alloca i64, align 8
  %a1.addr.i7510 = alloca i64, align 8
  %a2.addr.i7511 = alloca i64, align 8
  %a3.addr.i7512 = alloca i64, align 8
  %a4.addr.i7513 = alloca i64, align 8
  %a5.addr.i7514 = alloca i64, align 8
  %a6.addr.i7515 = alloca i64, align 8
  %out1.addr.i7516 = alloca i64*, align 8
  %out2.addr.i7517 = alloca i64*, align 8
  %out3.addr.i7518 = alloca i64*, align 8
  %out4.addr.i7519 = alloca i64*, align 8
  %x33CC33CC.i7520 = alloca i64, align 8
  %x3333FFFF.i7521 = alloca i64, align 8
  %x11115555.i7522 = alloca i64, align 8
  %x22DD6699.i7523 = alloca i64, align 8
  %x22DD9966.i7524 = alloca i64, align 8
  %x00220099.i7525 = alloca i64, align 8
  %x00551144.i7526 = alloca i64, align 8
  %x33662277.i7527 = alloca i64, align 8
  %x5A5A5A5A.i7528 = alloca i64, align 8
  %x7B7E7A7F.i7529 = alloca i64, align 8
  %x59A31CE6.i7530 = alloca i64, align 8
  %x09030C06.i7531 = alloca i64, align 8
  %x09030000.i7532 = alloca i64, align 8
  %x336622FF.i7533 = alloca i64, align 8
  %x3A6522FF.i7534 = alloca i64, align 8
  %x484D494C.i7535 = alloca i64, align 8
  %x0000B6B3.i7536 = alloca i64, align 8
  %x0F0FB9BC.i7537 = alloca i64, align 8
  %x00FC00F9.i7538 = alloca i64, align 8
  %x0FFFB9FD.i7539 = alloca i64, align 8
  %x5DF75DF7.i7540 = alloca i64, align 8
  %x116600F7.i7541 = alloca i64, align 8
  %x1E69B94B.i7542 = alloca i64, align 8
  %x1668B94B.i7543 = alloca i64, align 8
  %x7B7B7B7B.i7544 = alloca i64, align 8
  %x411E5984.i7545 = alloca i64, align 8
  %x1FFFFDFD.i7546 = alloca i64, align 8
  %x5EE1A479.i7547 = alloca i64, align 8
  %x3CB4DFD2.i7548 = alloca i64, align 8
  %x004B002D.i7549 = alloca i64, align 8
  %xB7B2B6B3.i7550 = alloca i64, align 8
  %xCCC9CDC8.i7551 = alloca i64, align 8
  %xCC82CDE5.i7552 = alloca i64, align 8
  %x0055EEBB.i7553 = alloca i64, align 8
  %x5A5AECE9.i7554 = alloca i64, align 8
  %x0050ECA9.i7555 = alloca i64, align 8
  %xC5CAC1CE.i7556 = alloca i64, align 8
  %xC59A2D67.i7557 = alloca i64, align 8
  %x00.i7558 = alloca i64, align 8
  %x01.i7559 = alloca i64, align 8
  %x10.i7560 = alloca i64, align 8
  %x11.i7561 = alloca i64, align 8
  %x20.i7562 = alloca i64, align 8
  %x21.i7563 = alloca i64, align 8
  %x30.i7564 = alloca i64, align 8
  %x31.i7565 = alloca i64, align 8
  %a1.addr.i7397 = alloca i64, align 8
  %a2.addr.i7398 = alloca i64, align 8
  %a3.addr.i7399 = alloca i64, align 8
  %a4.addr.i7400 = alloca i64, align 8
  %a5.addr.i7401 = alloca i64, align 8
  %a6.addr.i7402 = alloca i64, align 8
  %out1.addr.i7403 = alloca i64*, align 8
  %out2.addr.i7404 = alloca i64*, align 8
  %out3.addr.i7405 = alloca i64*, align 8
  %out4.addr.i7406 = alloca i64*, align 8
  %x0FF00FF0.i7407 = alloca i64, align 8
  %x3CC33CC3.i7408 = alloca i64, align 8
  %x00003CC3.i7409 = alloca i64, align 8
  %x0F000F00.i7410 = alloca i64, align 8
  %x5A555A55.i7411 = alloca i64, align 8
  %x00001841.i7412 = alloca i64, align 8
  %x00000F00.i7413 = alloca i64, align 8
  %x33333C33.i7414 = alloca i64, align 8
  %x7B777E77.i7415 = alloca i64, align 8
  %x0FF0F00F.i7416 = alloca i64, align 8
  %x74878E78.i7417 = alloca i64, align 8
  %x003C003C.i7418 = alloca i64, align 8
  %x5A7D5A7D.i7419 = alloca i64, align 8
  %x333300F0.i7420 = alloca i64, align 8
  %x694E5A8D.i7421 = alloca i64, align 8
  %x0FF0CCCC.i7422 = alloca i64, align 8
  %x000F0303.i7423 = alloca i64, align 8
  %x5A505854.i7424 = alloca i64, align 8
  %x33CC000F.i7425 = alloca i64, align 8
  %x699C585B.i7426 = alloca i64, align 8
  %x7F878F78.i7427 = alloca i64, align 8
  %x21101013.i7428 = alloca i64, align 8
  %x7F979F7B.i7429 = alloca i64, align 8
  %x30030CC0.i7430 = alloca i64, align 8
  %x4F9493BB.i7431 = alloca i64, align 8
  %x6F9CDBFB.i7432 = alloca i64, align 8
  %x0000DBFB.i7433 = alloca i64, align 8
  %x00005151.i7434 = alloca i64, align 8
  %x26DAC936.i7435 = alloca i64, align 8
  %x26DA9867.i7436 = alloca i64, align 8
  %x21FF10FF.i7437 = alloca i64, align 8
  %x21FFCB04.i7438 = alloca i64, align 8
  %x2625C9C9.i7439 = alloca i64, align 8
  %x27FFCBCD.i7440 = alloca i64, align 8
  %x27FF1036.i7441 = alloca i64, align 8
  %x27FF103E.i7442 = alloca i64, align 8
  %xB06B6C44.i7443 = alloca i64, align 8
  %x97947C7A.i7444 = alloca i64, align 8
  %x00.i7445 = alloca i64, align 8
  %x01.i7446 = alloca i64, align 8
  %x10.i7447 = alloca i64, align 8
  %x11.i7448 = alloca i64, align 8
  %x20.i7449 = alloca i64, align 8
  %x21.i7450 = alloca i64, align 8
  %x30.i7451 = alloca i64, align 8
  %x31.i7452 = alloca i64, align 8
  %a1.addr.i7294 = alloca i64, align 8
  %a2.addr.i7295 = alloca i64, align 8
  %a3.addr.i7296 = alloca i64, align 8
  %a4.addr.i7297 = alloca i64, align 8
  %a5.addr.i7298 = alloca i64, align 8
  %a6.addr.i7299 = alloca i64, align 8
  %out1.addr.i7300 = alloca i64*, align 8
  %out2.addr.i7301 = alloca i64*, align 8
  %out3.addr.i7302 = alloca i64*, align 8
  %out4.addr.i7303 = alloca i64*, align 8
  %x0C0C0C0C.i7304 = alloca i64, align 8
  %x0000F0F0.i7305 = alloca i64, align 8
  %x00FFF00F.i7306 = alloca i64, align 8
  %x00555005.i7307 = alloca i64, align 8
  %x00515001.i7308 = alloca i64, align 8
  %x33000330.i7309 = alloca i64, align 8
  %x77555775.i7310 = alloca i64, align 8
  %x30303030.i7311 = alloca i64, align 8
  %x3030CFCF.i7312 = alloca i64, align 8
  %x30104745.i7313 = alloca i64, align 8
  %x30555745.i7314 = alloca i64, align 8
  %xFF000FF0.i7315 = alloca i64, align 8
  %xCF1048B5.i7316 = alloca i64, align 8
  %x080A080A.i7317 = alloca i64, align 8
  %xC71A40BF.i7318 = alloca i64, align 8
  %xCB164CB3.i7319 = alloca i64, align 8
  %x9E4319E6.i7320 = alloca i64, align 8
  %x000019E6.i7321 = alloca i64, align 8
  %xF429738C.i7322 = alloca i64, align 8
  %xF4296A6A.i7323 = alloca i64, align 8
  %xC729695A.i7324 = alloca i64, align 8
  %xC47C3D2F.i7325 = alloca i64, align 8
  %xF77F3F3F.i7326 = alloca i64, align 8
  %x9E43E619.i7327 = alloca i64, align 8
  %x693CD926.i7328 = alloca i64, align 8
  %xF719A695.i7329 = alloca i64, align 8
  %xF4FF73FF.i7330 = alloca i64, align 8
  %x03E6D56A.i7331 = alloca i64, align 8
  %x56B3803F.i7332 = alloca i64, align 8
  %xF700A600.i7333 = alloca i64, align 8
  %x61008000.i7334 = alloca i64, align 8
  %x03B7856B.i7335 = alloca i64, align 8
  %x62B7056B.i7336 = alloca i64, align 8
  %x00.i7337 = alloca i64, align 8
  %x01.i7338 = alloca i64, align 8
  %x10.i7339 = alloca i64, align 8
  %x11.i7340 = alloca i64, align 8
  %x20.i7341 = alloca i64, align 8
  %x21.i7342 = alloca i64, align 8
  %x30.i7343 = alloca i64, align 8
  %x31.i7344 = alloca i64, align 8
  %a1.addr.i7171 = alloca i64, align 8
  %a2.addr.i7172 = alloca i64, align 8
  %a3.addr.i7173 = alloca i64, align 8
  %a4.addr.i7174 = alloca i64, align 8
  %a5.addr.i7175 = alloca i64, align 8
  %a6.addr.i7176 = alloca i64, align 8
  %out1.addr.i7177 = alloca i64*, align 8
  %out2.addr.i7178 = alloca i64*, align 8
  %out3.addr.i7179 = alloca i64*, align 8
  %out4.addr.i7180 = alloca i64*, align 8
  %x55005500.i7181 = alloca i64, align 8
  %x5A0F5A0F.i7182 = alloca i64, align 8
  %x3333FFFF.i7183 = alloca i64, align 8
  %x66666666.i7184 = alloca i64, align 8
  %x22226666.i7185 = alloca i64, align 8
  %x2D2D6969.i7186 = alloca i64, align 8
  %x25202160.i7187 = alloca i64, align 8
  %x00FFFF00.i7188 = alloca i64, align 8
  %x33CCCC33.i7189 = alloca i64, align 8
  %x4803120C.i7190 = alloca i64, align 8
  %x2222FFFF.i7191 = alloca i64, align 8
  %x6A21EDF3.i7192 = alloca i64, align 8
  %x4A01CC93.i7193 = alloca i64, align 8
  %x5555FFFF.i7194 = alloca i64, align 8
  %x7F75FFFF.i7195 = alloca i64, align 8
  %x00D20096.i7196 = alloca i64, align 8
  %x7FA7FF69.i7197 = alloca i64, align 8
  %x0A0A0000.i7198 = alloca i64, align 8
  %x0AD80096.i7199 = alloca i64, align 8
  %x00999900.i7200 = alloca i64, align 8
  %x0AD99996.i7201 = alloca i64, align 8
  %x22332233.i7202 = alloca i64, align 8
  %x257AA5F0.i7203 = alloca i64, align 8
  %x054885C0.i7204 = alloca i64, align 8
  %xFAB77A3F.i7205 = alloca i64, align 8
  %x2221EDF3.i7206 = alloca i64, align 8
  %xD89697CC.i7207 = alloca i64, align 8
  %x05B77AC0.i7208 = alloca i64, align 8
  %x05F77AD6.i7209 = alloca i64, align 8
  %x36C48529.i7210 = alloca i64, align 8
  %x6391D07C.i7211 = alloca i64, align 8
  %xBB0747B0.i7212 = alloca i64, align 8
  %x4C460000.i7213 = alloca i64, align 8
  %x4EDF9996.i7214 = alloca i64, align 8
  %x2D4E49EA.i7215 = alloca i64, align 8
  %xBBFFFFB0.i7216 = alloca i64, align 8
  %x96B1B65A.i7217 = alloca i64, align 8
  %x5AFF5AFF.i7218 = alloca i64, align 8
  %x52B11215.i7219 = alloca i64, align 8
  %x4201C010.i7220 = alloca i64, align 8
  %x10B0D205.i7221 = alloca i64, align 8
  %x00.i7222 = alloca i64, align 8
  %x01.i7223 = alloca i64, align 8
  %x10.i7224 = alloca i64, align 8
  %x11.i7225 = alloca i64, align 8
  %x20.i7226 = alloca i64, align 8
  %x21.i7227 = alloca i64, align 8
  %x30.i7228 = alloca i64, align 8
  %x31.i7229 = alloca i64, align 8
  %a1.addr.i7057 = alloca i64, align 8
  %a2.addr.i7058 = alloca i64, align 8
  %a3.addr.i7059 = alloca i64, align 8
  %a4.addr.i7060 = alloca i64, align 8
  %a5.addr.i7061 = alloca i64, align 8
  %a6.addr.i7062 = alloca i64, align 8
  %out1.addr.i7063 = alloca i64*, align 8
  %out2.addr.i7064 = alloca i64*, align 8
  %out3.addr.i7065 = alloca i64*, align 8
  %out4.addr.i7066 = alloca i64*, align 8
  %x33CC33CC.i7067 = alloca i64, align 8
  %x55550000.i7068 = alloca i64, align 8
  %x00AA00FF.i7069 = alloca i64, align 8
  %x33BB33FF.i7070 = alloca i64, align 8
  %x33CC0000.i7071 = alloca i64, align 8
  %x11441144.i7072 = alloca i64, align 8
  %x11BB11BB.i7073 = alloca i64, align 8
  %x003311BB.i7074 = alloca i64, align 8
  %x00000F0F.i7075 = alloca i64, align 8
  %x336600FF.i7076 = alloca i64, align 8
  %x332200FF.i7077 = alloca i64, align 8
  %x332200F0.i7078 = alloca i64, align 8
  %x0302000F.i7079 = alloca i64, align 8
  %xAAAAAAAA.i7080 = alloca i64, align 8
  %xA9A8AAA5.i7081 = alloca i64, align 8
  %x33CCCC33.i7082 = alloca i64, align 8
  %x33CCC030.i7083 = alloca i64, align 8
  %x9A646A95.i7084 = alloca i64, align 8
  %x00333303.i7085 = alloca i64, align 8
  %x118822B8.i7086 = alloca i64, align 8
  %xA8208805.i7087 = alloca i64, align 8
  %x3CC3C33C.i7088 = alloca i64, align 8
  %x94E34B39.i7089 = alloca i64, align 8
  %x0331330C.i7090 = alloca i64, align 8
  %x3FF3F33C.i7091 = alloca i64, align 8
  %xA9DF596A.i7092 = alloca i64, align 8
  %xA9DF5F6F.i7093 = alloca i64, align 8
  %x962CAC53.i7094 = alloca i64, align 8
  %x97D27835.i7095 = alloca i64, align 8
  %x81D25825.i7096 = alloca i64, align 8
  %x812D58DA.i7097 = alloca i64, align 8
  %x802158DA.i7098 = alloca i64, align 8
  %x1A45324F.i7099 = alloca i64, align 8
  %x0A451047.i7100 = alloca i64, align 8
  %xBBDFDD7B.i7101 = alloca i64, align 8
  %xB19ACD3C.i7102 = alloca i64, align 8
  %x00.i7103 = alloca i64, align 8
  %x01.i7104 = alloca i64, align 8
  %x10.i7105 = alloca i64, align 8
  %x11.i7106 = alloca i64, align 8
  %x20.i7107 = alloca i64, align 8
  %x21.i7108 = alloca i64, align 8
  %x30.i7109 = alloca i64, align 8
  %x31.i7110 = alloca i64, align 8
  %a1.addr.i6937 = alloca i64, align 8
  %a2.addr.i6938 = alloca i64, align 8
  %a3.addr.i6939 = alloca i64, align 8
  %a4.addr.i6940 = alloca i64, align 8
  %a5.addr.i6941 = alloca i64, align 8
  %a6.addr.i6942 = alloca i64, align 8
  %out1.addr.i6943 = alloca i64*, align 8
  %out2.addr.i6944 = alloca i64*, align 8
  %out3.addr.i6945 = alloca i64*, align 8
  %out4.addr.i6946 = alloca i64*, align 8
  %x44444444.i6947 = alloca i64, align 8
  %x0F0FF0F0.i6948 = alloca i64, align 8
  %x4F4FF4F4.i6949 = alloca i64, align 8
  %x00FFFF00.i6950 = alloca i64, align 8
  %x00AAAA00.i6951 = alloca i64, align 8
  %x4FE55EF4.i6952 = alloca i64, align 8
  %x3C3CC3C3.i6953 = alloca i64, align 8
  %x3C3C0000.i6954 = alloca i64, align 8
  %x7373F4F4.i6955 = alloca i64, align 8
  %x0C840A00.i6956 = alloca i64, align 8
  %x00005EF4.i6957 = alloca i64, align 8
  %x00FF5EFF.i6958 = alloca i64, align 8
  %x00555455.i6959 = alloca i64, align 8
  %x3C699796.i6960 = alloca i64, align 8
  %x000FF000.i6961 = alloca i64, align 8
  %x55AA55AA.i6962 = alloca i64, align 8
  %x26D9A15E.i6963 = alloca i64, align 8
  %x2FDFAF5F.i6964 = alloca i64, align 8
  %x2FD00F5F.i6965 = alloca i64, align 8
  %x55AAFFAA.i6966 = alloca i64, align 8
  %x28410014.i6967 = alloca i64, align 8
  %x000000FF.i6968 = alloca i64, align 8
  %x000000CC.i6969 = alloca i64, align 8
  %x284100D8.i6970 = alloca i64, align 8
  %x204000D0.i6971 = alloca i64, align 8
  %x3C3CC3FF.i6972 = alloca i64, align 8
  %x1C3CC32F.i6973 = alloca i64, align 8
  %x4969967A.i6974 = alloca i64, align 8
  %x4CC44CC4.i6975 = alloca i64, align 8
  %x40C040C0.i6976 = alloca i64, align 8
  %x69963C69.i6977 = alloca i64, align 8
  %x9669C396.i6978 = alloca i64, align 8
  %xD6A98356.i6979 = alloca i64, align 8
  %x000F00F0.i6980 = alloca i64, align 8
  %xFEBDC3D7.i6981 = alloca i64, align 8
  %xFEB0C307.i6982 = alloca i64, align 8
  %x4CEEEEC4.i6983 = alloca i64, align 8
  %xB25E2DC3.i6984 = alloca i64, align 8
  %x00.i6985 = alloca i64, align 8
  %x01.i6986 = alloca i64, align 8
  %x10.i6987 = alloca i64, align 8
  %x11.i6988 = alloca i64, align 8
  %x20.i6989 = alloca i64, align 8
  %x21.i6990 = alloca i64, align 8
  %x30.i6991 = alloca i64, align 8
  %x31.i6992 = alloca i64, align 8
  %a1.addr.i6848 = alloca i64, align 8
  %a2.addr.i6849 = alloca i64, align 8
  %a3.addr.i6850 = alloca i64, align 8
  %a4.addr.i6851 = alloca i64, align 8
  %a5.addr.i6852 = alloca i64, align 8
  %a6.addr.i6853 = alloca i64, align 8
  %out1.addr.i6854 = alloca i64*, align 8
  %out2.addr.i6855 = alloca i64*, align 8
  %out3.addr.i6856 = alloca i64*, align 8
  %out4.addr.i6857 = alloca i64*, align 8
  %x5A5A5A5A.i6858 = alloca i64, align 8
  %x0F0FF0F0.i6859 = alloca i64, align 8
  %x33FF33FF.i6860 = alloca i64, align 8
  %x33FFCC00.i6861 = alloca i64, align 8
  %x0C0030F0.i6862 = alloca i64, align 8
  %x0C0CC0C0.i6863 = alloca i64, align 8
  %x0CF3C03F.i6864 = alloca i64, align 8
  %x5EFBDA7F.i6865 = alloca i64, align 8
  %x52FBCA0F.i6866 = alloca i64, align 8
  %x61C8F93C.i6867 = alloca i64, align 8
  %x00C0C03C.i6868 = alloca i64, align 8
  %x0F0F30C0.i6869 = alloca i64, align 8
  %x3B92A366.i6870 = alloca i64, align 8
  %x30908326.i6871 = alloca i64, align 8
  %x3C90B3D6.i6872 = alloca i64, align 8
  %x33CC33CC.i6873 = alloca i64, align 8
  %x0C0CFFFF.i6874 = alloca i64, align 8
  %x379E5C99.i6875 = alloca i64, align 8
  %x04124C11.i6876 = alloca i64, align 8
  %x56E9861E.i6877 = alloca i64, align 8
  %xA91679E1.i6878 = alloca i64, align 8
  %x9586CA37.i6879 = alloca i64, align 8
  %x8402C833.i6880 = alloca i64, align 8
  %x84C2C83F.i6881 = alloca i64, align 8
  %xB35C94A6.i6882 = alloca i64, align 8
  %x00.i6883 = alloca i64, align 8
  %x01.i6884 = alloca i64, align 8
  %x10.i6885 = alloca i64, align 8
  %x11.i6886 = alloca i64, align 8
  %x20.i6887 = alloca i64, align 8
  %x21.i6888 = alloca i64, align 8
  %x30.i6889 = alloca i64, align 8
  %x31.i6890 = alloca i64, align 8
  %a1.addr.i6729 = alloca i64, align 8
  %a2.addr.i6730 = alloca i64, align 8
  %a3.addr.i6731 = alloca i64, align 8
  %a4.addr.i6732 = alloca i64, align 8
  %a5.addr.i6733 = alloca i64, align 8
  %a6.addr.i6734 = alloca i64, align 8
  %out1.addr.i6735 = alloca i64*, align 8
  %out2.addr.i6736 = alloca i64*, align 8
  %out3.addr.i6737 = alloca i64*, align 8
  %out4.addr.i6738 = alloca i64*, align 8
  %x77777777.i6739 = alloca i64, align 8
  %x77770000.i6740 = alloca i64, align 8
  %x22225555.i6741 = alloca i64, align 8
  %x11116666.i6742 = alloca i64, align 8
  %x1F1F6F6F.i6743 = alloca i64, align 8
  %x70700000.i6744 = alloca i64, align 8
  %x43433333.i6745 = alloca i64, align 8
  %x00430033.i6746 = alloca i64, align 8
  %x55557777.i6747 = alloca i64, align 8
  %x55167744.i6748 = alloca i64, align 8
  %x5A19784B.i6749 = alloca i64, align 8
  %x5A1987B4.i6750 = alloca i64, align 8
  %x7A3BD7F5.i6751 = alloca i64, align 8
  %x003B00F5.i6752 = alloca i64, align 8
  %x221955A0.i6753 = alloca i64, align 8
  %x05050707.i6754 = alloca i64, align 8
  %x271C52A7.i6755 = alloca i64, align 8
  %x2A2A82A0.i6756 = alloca i64, align 8
  %x6969B193.i6757 = alloca i64, align 8
  %x1FE06F90.i6758 = alloca i64, align 8
  %x16804E00.i6759 = alloca i64, align 8
  %xE97FB1FF.i6760 = alloca i64, align 8
  %x43403302.i6761 = alloca i64, align 8
  %x35CAED30.i6762 = alloca i64, align 8
  %x37DEFFB7.i6763 = alloca i64, align 8
  %x349ECCB5.i6764 = alloca i64, align 8
  %x0B01234A.i6765 = alloca i64, align 8
  %x101884B4.i6766 = alloca i64, align 8
  %x0FF8EB24.i6767 = alloca i64, align 8
  %x41413333.i6768 = alloca i64, align 8
  %x4FF9FB37.i6769 = alloca i64, align 8
  %x4FC2FBC2.i6770 = alloca i64, align 8
  %x22222222.i6771 = alloca i64, align 8
  %x16BCEE97.i6772 = alloca i64, align 8
  %x0F080B04.i6773 = alloca i64, align 8
  %x19B4E593.i6774 = alloca i64, align 8
  %x5C5C5C5C.i6775 = alloca i64, align 8
  %x4448184C.i6776 = alloca i64, align 8
  %x2DDABE71.i6777 = alloca i64, align 8
  %x6992A63D.i6778 = alloca i64, align 8
  %x00.i6779 = alloca i64, align 8
  %x01.i6780 = alloca i64, align 8
  %x10.i6781 = alloca i64, align 8
  %x11.i6782 = alloca i64, align 8
  %x20.i6783 = alloca i64, align 8
  %x21.i6784 = alloca i64, align 8
  %x30.i6785 = alloca i64, align 8
  %x31.i6786 = alloca i64, align 8
  %a1.addr.i6615 = alloca i64, align 8
  %a2.addr.i6616 = alloca i64, align 8
  %a3.addr.i6617 = alloca i64, align 8
  %a4.addr.i6618 = alloca i64, align 8
  %a5.addr.i6619 = alloca i64, align 8
  %a6.addr.i6620 = alloca i64, align 8
  %out1.addr.i6621 = alloca i64*, align 8
  %out2.addr.i6622 = alloca i64*, align 8
  %out3.addr.i6623 = alloca i64*, align 8
  %out4.addr.i6624 = alloca i64*, align 8
  %x33CC33CC.i6625 = alloca i64, align 8
  %x3333FFFF.i6626 = alloca i64, align 8
  %x11115555.i6627 = alloca i64, align 8
  %x22DD6699.i6628 = alloca i64, align 8
  %x22DD9966.i6629 = alloca i64, align 8
  %x00220099.i6630 = alloca i64, align 8
  %x00551144.i6631 = alloca i64, align 8
  %x33662277.i6632 = alloca i64, align 8
  %x5A5A5A5A.i6633 = alloca i64, align 8
  %x7B7E7A7F.i6634 = alloca i64, align 8
  %x59A31CE6.i6635 = alloca i64, align 8
  %x09030C06.i6636 = alloca i64, align 8
  %x09030000.i6637 = alloca i64, align 8
  %x336622FF.i6638 = alloca i64, align 8
  %x3A6522FF.i6639 = alloca i64, align 8
  %x484D494C.i6640 = alloca i64, align 8
  %x0000B6B3.i6641 = alloca i64, align 8
  %x0F0FB9BC.i6642 = alloca i64, align 8
  %x00FC00F9.i6643 = alloca i64, align 8
  %x0FFFB9FD.i6644 = alloca i64, align 8
  %x5DF75DF7.i6645 = alloca i64, align 8
  %x116600F7.i6646 = alloca i64, align 8
  %x1E69B94B.i6647 = alloca i64, align 8
  %x1668B94B.i6648 = alloca i64, align 8
  %x7B7B7B7B.i6649 = alloca i64, align 8
  %x411E5984.i6650 = alloca i64, align 8
  %x1FFFFDFD.i6651 = alloca i64, align 8
  %x5EE1A479.i6652 = alloca i64, align 8
  %x3CB4DFD2.i6653 = alloca i64, align 8
  %x004B002D.i6654 = alloca i64, align 8
  %xB7B2B6B3.i6655 = alloca i64, align 8
  %xCCC9CDC8.i6656 = alloca i64, align 8
  %xCC82CDE5.i6657 = alloca i64, align 8
  %x0055EEBB.i6658 = alloca i64, align 8
  %x5A5AECE9.i6659 = alloca i64, align 8
  %x0050ECA9.i6660 = alloca i64, align 8
  %xC5CAC1CE.i6661 = alloca i64, align 8
  %xC59A2D67.i6662 = alloca i64, align 8
  %x00.i6663 = alloca i64, align 8
  %x01.i6664 = alloca i64, align 8
  %x10.i6665 = alloca i64, align 8
  %x11.i6666 = alloca i64, align 8
  %x20.i6667 = alloca i64, align 8
  %x21.i6668 = alloca i64, align 8
  %x30.i6669 = alloca i64, align 8
  %x31.i6670 = alloca i64, align 8
  %a1.addr.i6502 = alloca i64, align 8
  %a2.addr.i6503 = alloca i64, align 8
  %a3.addr.i6504 = alloca i64, align 8
  %a4.addr.i6505 = alloca i64, align 8
  %a5.addr.i6506 = alloca i64, align 8
  %a6.addr.i6507 = alloca i64, align 8
  %out1.addr.i6508 = alloca i64*, align 8
  %out2.addr.i6509 = alloca i64*, align 8
  %out3.addr.i6510 = alloca i64*, align 8
  %out4.addr.i6511 = alloca i64*, align 8
  %x0FF00FF0.i6512 = alloca i64, align 8
  %x3CC33CC3.i6513 = alloca i64, align 8
  %x00003CC3.i6514 = alloca i64, align 8
  %x0F000F00.i6515 = alloca i64, align 8
  %x5A555A55.i6516 = alloca i64, align 8
  %x00001841.i6517 = alloca i64, align 8
  %x00000F00.i6518 = alloca i64, align 8
  %x33333C33.i6519 = alloca i64, align 8
  %x7B777E77.i6520 = alloca i64, align 8
  %x0FF0F00F.i6521 = alloca i64, align 8
  %x74878E78.i6522 = alloca i64, align 8
  %x003C003C.i6523 = alloca i64, align 8
  %x5A7D5A7D.i6524 = alloca i64, align 8
  %x333300F0.i6525 = alloca i64, align 8
  %x694E5A8D.i6526 = alloca i64, align 8
  %x0FF0CCCC.i6527 = alloca i64, align 8
  %x000F0303.i6528 = alloca i64, align 8
  %x5A505854.i6529 = alloca i64, align 8
  %x33CC000F.i6530 = alloca i64, align 8
  %x699C585B.i6531 = alloca i64, align 8
  %x7F878F78.i6532 = alloca i64, align 8
  %x21101013.i6533 = alloca i64, align 8
  %x7F979F7B.i6534 = alloca i64, align 8
  %x30030CC0.i6535 = alloca i64, align 8
  %x4F9493BB.i6536 = alloca i64, align 8
  %x6F9CDBFB.i6537 = alloca i64, align 8
  %x0000DBFB.i6538 = alloca i64, align 8
  %x00005151.i6539 = alloca i64, align 8
  %x26DAC936.i6540 = alloca i64, align 8
  %x26DA9867.i6541 = alloca i64, align 8
  %x21FF10FF.i6542 = alloca i64, align 8
  %x21FFCB04.i6543 = alloca i64, align 8
  %x2625C9C9.i6544 = alloca i64, align 8
  %x27FFCBCD.i6545 = alloca i64, align 8
  %x27FF1036.i6546 = alloca i64, align 8
  %x27FF103E.i6547 = alloca i64, align 8
  %xB06B6C44.i6548 = alloca i64, align 8
  %x97947C7A.i6549 = alloca i64, align 8
  %x00.i6550 = alloca i64, align 8
  %x01.i6551 = alloca i64, align 8
  %x10.i6552 = alloca i64, align 8
  %x11.i6553 = alloca i64, align 8
  %x20.i6554 = alloca i64, align 8
  %x21.i6555 = alloca i64, align 8
  %x30.i6556 = alloca i64, align 8
  %x31.i6557 = alloca i64, align 8
  %a1.addr.i6399 = alloca i64, align 8
  %a2.addr.i6400 = alloca i64, align 8
  %a3.addr.i6401 = alloca i64, align 8
  %a4.addr.i6402 = alloca i64, align 8
  %a5.addr.i6403 = alloca i64, align 8
  %a6.addr.i6404 = alloca i64, align 8
  %out1.addr.i6405 = alloca i64*, align 8
  %out2.addr.i6406 = alloca i64*, align 8
  %out3.addr.i6407 = alloca i64*, align 8
  %out4.addr.i6408 = alloca i64*, align 8
  %x0C0C0C0C.i6409 = alloca i64, align 8
  %x0000F0F0.i6410 = alloca i64, align 8
  %x00FFF00F.i6411 = alloca i64, align 8
  %x00555005.i6412 = alloca i64, align 8
  %x00515001.i6413 = alloca i64, align 8
  %x33000330.i6414 = alloca i64, align 8
  %x77555775.i6415 = alloca i64, align 8
  %x30303030.i6416 = alloca i64, align 8
  %x3030CFCF.i6417 = alloca i64, align 8
  %x30104745.i6418 = alloca i64, align 8
  %x30555745.i6419 = alloca i64, align 8
  %xFF000FF0.i6420 = alloca i64, align 8
  %xCF1048B5.i6421 = alloca i64, align 8
  %x080A080A.i6422 = alloca i64, align 8
  %xC71A40BF.i6423 = alloca i64, align 8
  %xCB164CB3.i6424 = alloca i64, align 8
  %x9E4319E6.i6425 = alloca i64, align 8
  %x000019E6.i6426 = alloca i64, align 8
  %xF429738C.i6427 = alloca i64, align 8
  %xF4296A6A.i6428 = alloca i64, align 8
  %xC729695A.i6429 = alloca i64, align 8
  %xC47C3D2F.i6430 = alloca i64, align 8
  %xF77F3F3F.i6431 = alloca i64, align 8
  %x9E43E619.i6432 = alloca i64, align 8
  %x693CD926.i6433 = alloca i64, align 8
  %xF719A695.i6434 = alloca i64, align 8
  %xF4FF73FF.i6435 = alloca i64, align 8
  %x03E6D56A.i6436 = alloca i64, align 8
  %x56B3803F.i6437 = alloca i64, align 8
  %xF700A600.i6438 = alloca i64, align 8
  %x61008000.i6439 = alloca i64, align 8
  %x03B7856B.i6440 = alloca i64, align 8
  %x62B7056B.i6441 = alloca i64, align 8
  %x00.i6442 = alloca i64, align 8
  %x01.i6443 = alloca i64, align 8
  %x10.i6444 = alloca i64, align 8
  %x11.i6445 = alloca i64, align 8
  %x20.i6446 = alloca i64, align 8
  %x21.i6447 = alloca i64, align 8
  %x30.i6448 = alloca i64, align 8
  %x31.i6449 = alloca i64, align 8
  %a1.addr.i6276 = alloca i64, align 8
  %a2.addr.i6277 = alloca i64, align 8
  %a3.addr.i6278 = alloca i64, align 8
  %a4.addr.i6279 = alloca i64, align 8
  %a5.addr.i6280 = alloca i64, align 8
  %a6.addr.i6281 = alloca i64, align 8
  %out1.addr.i6282 = alloca i64*, align 8
  %out2.addr.i6283 = alloca i64*, align 8
  %out3.addr.i6284 = alloca i64*, align 8
  %out4.addr.i6285 = alloca i64*, align 8
  %x55005500.i6286 = alloca i64, align 8
  %x5A0F5A0F.i6287 = alloca i64, align 8
  %x3333FFFF.i6288 = alloca i64, align 8
  %x66666666.i6289 = alloca i64, align 8
  %x22226666.i6290 = alloca i64, align 8
  %x2D2D6969.i6291 = alloca i64, align 8
  %x25202160.i6292 = alloca i64, align 8
  %x00FFFF00.i6293 = alloca i64, align 8
  %x33CCCC33.i6294 = alloca i64, align 8
  %x4803120C.i6295 = alloca i64, align 8
  %x2222FFFF.i6296 = alloca i64, align 8
  %x6A21EDF3.i6297 = alloca i64, align 8
  %x4A01CC93.i6298 = alloca i64, align 8
  %x5555FFFF.i6299 = alloca i64, align 8
  %x7F75FFFF.i6300 = alloca i64, align 8
  %x00D20096.i6301 = alloca i64, align 8
  %x7FA7FF69.i6302 = alloca i64, align 8
  %x0A0A0000.i6303 = alloca i64, align 8
  %x0AD80096.i6304 = alloca i64, align 8
  %x00999900.i6305 = alloca i64, align 8
  %x0AD99996.i6306 = alloca i64, align 8
  %x22332233.i6307 = alloca i64, align 8
  %x257AA5F0.i6308 = alloca i64, align 8
  %x054885C0.i6309 = alloca i64, align 8
  %xFAB77A3F.i6310 = alloca i64, align 8
  %x2221EDF3.i6311 = alloca i64, align 8
  %xD89697CC.i6312 = alloca i64, align 8
  %x05B77AC0.i6313 = alloca i64, align 8
  %x05F77AD6.i6314 = alloca i64, align 8
  %x36C48529.i6315 = alloca i64, align 8
  %x6391D07C.i6316 = alloca i64, align 8
  %xBB0747B0.i6317 = alloca i64, align 8
  %x4C460000.i6318 = alloca i64, align 8
  %x4EDF9996.i6319 = alloca i64, align 8
  %x2D4E49EA.i6320 = alloca i64, align 8
  %xBBFFFFB0.i6321 = alloca i64, align 8
  %x96B1B65A.i6322 = alloca i64, align 8
  %x5AFF5AFF.i6323 = alloca i64, align 8
  %x52B11215.i6324 = alloca i64, align 8
  %x4201C010.i6325 = alloca i64, align 8
  %x10B0D205.i6326 = alloca i64, align 8
  %x00.i6327 = alloca i64, align 8
  %x01.i6328 = alloca i64, align 8
  %x10.i6329 = alloca i64, align 8
  %x11.i6330 = alloca i64, align 8
  %x20.i6331 = alloca i64, align 8
  %x21.i6332 = alloca i64, align 8
  %x30.i6333 = alloca i64, align 8
  %x31.i6334 = alloca i64, align 8
  %a1.addr.i6162 = alloca i64, align 8
  %a2.addr.i6163 = alloca i64, align 8
  %a3.addr.i6164 = alloca i64, align 8
  %a4.addr.i6165 = alloca i64, align 8
  %a5.addr.i6166 = alloca i64, align 8
  %a6.addr.i6167 = alloca i64, align 8
  %out1.addr.i6168 = alloca i64*, align 8
  %out2.addr.i6169 = alloca i64*, align 8
  %out3.addr.i6170 = alloca i64*, align 8
  %out4.addr.i6171 = alloca i64*, align 8
  %x33CC33CC.i6172 = alloca i64, align 8
  %x55550000.i6173 = alloca i64, align 8
  %x00AA00FF.i6174 = alloca i64, align 8
  %x33BB33FF.i6175 = alloca i64, align 8
  %x33CC0000.i6176 = alloca i64, align 8
  %x11441144.i6177 = alloca i64, align 8
  %x11BB11BB.i6178 = alloca i64, align 8
  %x003311BB.i6179 = alloca i64, align 8
  %x00000F0F.i6180 = alloca i64, align 8
  %x336600FF.i6181 = alloca i64, align 8
  %x332200FF.i6182 = alloca i64, align 8
  %x332200F0.i6183 = alloca i64, align 8
  %x0302000F.i6184 = alloca i64, align 8
  %xAAAAAAAA.i6185 = alloca i64, align 8
  %xA9A8AAA5.i6186 = alloca i64, align 8
  %x33CCCC33.i6187 = alloca i64, align 8
  %x33CCC030.i6188 = alloca i64, align 8
  %x9A646A95.i6189 = alloca i64, align 8
  %x00333303.i6190 = alloca i64, align 8
  %x118822B8.i6191 = alloca i64, align 8
  %xA8208805.i6192 = alloca i64, align 8
  %x3CC3C33C.i6193 = alloca i64, align 8
  %x94E34B39.i6194 = alloca i64, align 8
  %x0331330C.i6195 = alloca i64, align 8
  %x3FF3F33C.i6196 = alloca i64, align 8
  %xA9DF596A.i6197 = alloca i64, align 8
  %xA9DF5F6F.i6198 = alloca i64, align 8
  %x962CAC53.i6199 = alloca i64, align 8
  %x97D27835.i6200 = alloca i64, align 8
  %x81D25825.i6201 = alloca i64, align 8
  %x812D58DA.i6202 = alloca i64, align 8
  %x802158DA.i6203 = alloca i64, align 8
  %x1A45324F.i6204 = alloca i64, align 8
  %x0A451047.i6205 = alloca i64, align 8
  %xBBDFDD7B.i6206 = alloca i64, align 8
  %xB19ACD3C.i6207 = alloca i64, align 8
  %x00.i6208 = alloca i64, align 8
  %x01.i6209 = alloca i64, align 8
  %x10.i6210 = alloca i64, align 8
  %x11.i6211 = alloca i64, align 8
  %x20.i6212 = alloca i64, align 8
  %x21.i6213 = alloca i64, align 8
  %x30.i6214 = alloca i64, align 8
  %x31.i6215 = alloca i64, align 8
  %a1.addr.i6042 = alloca i64, align 8
  %a2.addr.i6043 = alloca i64, align 8
  %a3.addr.i6044 = alloca i64, align 8
  %a4.addr.i6045 = alloca i64, align 8
  %a5.addr.i6046 = alloca i64, align 8
  %a6.addr.i6047 = alloca i64, align 8
  %out1.addr.i6048 = alloca i64*, align 8
  %out2.addr.i6049 = alloca i64*, align 8
  %out3.addr.i6050 = alloca i64*, align 8
  %out4.addr.i6051 = alloca i64*, align 8
  %x44444444.i6052 = alloca i64, align 8
  %x0F0FF0F0.i6053 = alloca i64, align 8
  %x4F4FF4F4.i6054 = alloca i64, align 8
  %x00FFFF00.i6055 = alloca i64, align 8
  %x00AAAA00.i6056 = alloca i64, align 8
  %x4FE55EF4.i6057 = alloca i64, align 8
  %x3C3CC3C3.i6058 = alloca i64, align 8
  %x3C3C0000.i6059 = alloca i64, align 8
  %x7373F4F4.i6060 = alloca i64, align 8
  %x0C840A00.i6061 = alloca i64, align 8
  %x00005EF4.i6062 = alloca i64, align 8
  %x00FF5EFF.i6063 = alloca i64, align 8
  %x00555455.i6064 = alloca i64, align 8
  %x3C699796.i6065 = alloca i64, align 8
  %x000FF000.i6066 = alloca i64, align 8
  %x55AA55AA.i6067 = alloca i64, align 8
  %x26D9A15E.i6068 = alloca i64, align 8
  %x2FDFAF5F.i6069 = alloca i64, align 8
  %x2FD00F5F.i6070 = alloca i64, align 8
  %x55AAFFAA.i6071 = alloca i64, align 8
  %x28410014.i6072 = alloca i64, align 8
  %x000000FF.i6073 = alloca i64, align 8
  %x000000CC.i6074 = alloca i64, align 8
  %x284100D8.i6075 = alloca i64, align 8
  %x204000D0.i6076 = alloca i64, align 8
  %x3C3CC3FF.i6077 = alloca i64, align 8
  %x1C3CC32F.i6078 = alloca i64, align 8
  %x4969967A.i6079 = alloca i64, align 8
  %x4CC44CC4.i6080 = alloca i64, align 8
  %x40C040C0.i6081 = alloca i64, align 8
  %x69963C69.i6082 = alloca i64, align 8
  %x9669C396.i6083 = alloca i64, align 8
  %xD6A98356.i6084 = alloca i64, align 8
  %x000F00F0.i6085 = alloca i64, align 8
  %xFEBDC3D7.i6086 = alloca i64, align 8
  %xFEB0C307.i6087 = alloca i64, align 8
  %x4CEEEEC4.i6088 = alloca i64, align 8
  %xB25E2DC3.i6089 = alloca i64, align 8
  %x00.i6090 = alloca i64, align 8
  %x01.i6091 = alloca i64, align 8
  %x10.i6092 = alloca i64, align 8
  %x11.i6093 = alloca i64, align 8
  %x20.i6094 = alloca i64, align 8
  %x21.i6095 = alloca i64, align 8
  %x30.i6096 = alloca i64, align 8
  %x31.i6097 = alloca i64, align 8
  %a1.addr.i5953 = alloca i64, align 8
  %a2.addr.i5954 = alloca i64, align 8
  %a3.addr.i5955 = alloca i64, align 8
  %a4.addr.i5956 = alloca i64, align 8
  %a5.addr.i5957 = alloca i64, align 8
  %a6.addr.i5958 = alloca i64, align 8
  %out1.addr.i5959 = alloca i64*, align 8
  %out2.addr.i5960 = alloca i64*, align 8
  %out3.addr.i5961 = alloca i64*, align 8
  %out4.addr.i5962 = alloca i64*, align 8
  %x5A5A5A5A.i5963 = alloca i64, align 8
  %x0F0FF0F0.i5964 = alloca i64, align 8
  %x33FF33FF.i5965 = alloca i64, align 8
  %x33FFCC00.i5966 = alloca i64, align 8
  %x0C0030F0.i5967 = alloca i64, align 8
  %x0C0CC0C0.i5968 = alloca i64, align 8
  %x0CF3C03F.i5969 = alloca i64, align 8
  %x5EFBDA7F.i5970 = alloca i64, align 8
  %x52FBCA0F.i5971 = alloca i64, align 8
  %x61C8F93C.i5972 = alloca i64, align 8
  %x00C0C03C.i5973 = alloca i64, align 8
  %x0F0F30C0.i5974 = alloca i64, align 8
  %x3B92A366.i5975 = alloca i64, align 8
  %x30908326.i5976 = alloca i64, align 8
  %x3C90B3D6.i5977 = alloca i64, align 8
  %x33CC33CC.i5978 = alloca i64, align 8
  %x0C0CFFFF.i5979 = alloca i64, align 8
  %x379E5C99.i5980 = alloca i64, align 8
  %x04124C11.i5981 = alloca i64, align 8
  %x56E9861E.i5982 = alloca i64, align 8
  %xA91679E1.i5983 = alloca i64, align 8
  %x9586CA37.i5984 = alloca i64, align 8
  %x8402C833.i5985 = alloca i64, align 8
  %x84C2C83F.i5986 = alloca i64, align 8
  %xB35C94A6.i5987 = alloca i64, align 8
  %x00.i5988 = alloca i64, align 8
  %x01.i5989 = alloca i64, align 8
  %x10.i5990 = alloca i64, align 8
  %x11.i5991 = alloca i64, align 8
  %x20.i5992 = alloca i64, align 8
  %x21.i5993 = alloca i64, align 8
  %x30.i5994 = alloca i64, align 8
  %x31.i5995 = alloca i64, align 8
  %a1.addr.i5834 = alloca i64, align 8
  %a2.addr.i5835 = alloca i64, align 8
  %a3.addr.i5836 = alloca i64, align 8
  %a4.addr.i5837 = alloca i64, align 8
  %a5.addr.i5838 = alloca i64, align 8
  %a6.addr.i5839 = alloca i64, align 8
  %out1.addr.i5840 = alloca i64*, align 8
  %out2.addr.i5841 = alloca i64*, align 8
  %out3.addr.i5842 = alloca i64*, align 8
  %out4.addr.i5843 = alloca i64*, align 8
  %x77777777.i5844 = alloca i64, align 8
  %x77770000.i5845 = alloca i64, align 8
  %x22225555.i5846 = alloca i64, align 8
  %x11116666.i5847 = alloca i64, align 8
  %x1F1F6F6F.i5848 = alloca i64, align 8
  %x70700000.i5849 = alloca i64, align 8
  %x43433333.i5850 = alloca i64, align 8
  %x00430033.i5851 = alloca i64, align 8
  %x55557777.i5852 = alloca i64, align 8
  %x55167744.i5853 = alloca i64, align 8
  %x5A19784B.i5854 = alloca i64, align 8
  %x5A1987B4.i5855 = alloca i64, align 8
  %x7A3BD7F5.i5856 = alloca i64, align 8
  %x003B00F5.i5857 = alloca i64, align 8
  %x221955A0.i5858 = alloca i64, align 8
  %x05050707.i5859 = alloca i64, align 8
  %x271C52A7.i5860 = alloca i64, align 8
  %x2A2A82A0.i5861 = alloca i64, align 8
  %x6969B193.i5862 = alloca i64, align 8
  %x1FE06F90.i5863 = alloca i64, align 8
  %x16804E00.i5864 = alloca i64, align 8
  %xE97FB1FF.i5865 = alloca i64, align 8
  %x43403302.i5866 = alloca i64, align 8
  %x35CAED30.i5867 = alloca i64, align 8
  %x37DEFFB7.i5868 = alloca i64, align 8
  %x349ECCB5.i5869 = alloca i64, align 8
  %x0B01234A.i5870 = alloca i64, align 8
  %x101884B4.i5871 = alloca i64, align 8
  %x0FF8EB24.i5872 = alloca i64, align 8
  %x41413333.i5873 = alloca i64, align 8
  %x4FF9FB37.i5874 = alloca i64, align 8
  %x4FC2FBC2.i5875 = alloca i64, align 8
  %x22222222.i5876 = alloca i64, align 8
  %x16BCEE97.i5877 = alloca i64, align 8
  %x0F080B04.i5878 = alloca i64, align 8
  %x19B4E593.i5879 = alloca i64, align 8
  %x5C5C5C5C.i5880 = alloca i64, align 8
  %x4448184C.i5881 = alloca i64, align 8
  %x2DDABE71.i5882 = alloca i64, align 8
  %x6992A63D.i5883 = alloca i64, align 8
  %x00.i5884 = alloca i64, align 8
  %x01.i5885 = alloca i64, align 8
  %x10.i5886 = alloca i64, align 8
  %x11.i5887 = alloca i64, align 8
  %x20.i5888 = alloca i64, align 8
  %x21.i5889 = alloca i64, align 8
  %x30.i5890 = alloca i64, align 8
  %x31.i5891 = alloca i64, align 8
  %a1.addr.i5720 = alloca i64, align 8
  %a2.addr.i5721 = alloca i64, align 8
  %a3.addr.i5722 = alloca i64, align 8
  %a4.addr.i5723 = alloca i64, align 8
  %a5.addr.i5724 = alloca i64, align 8
  %a6.addr.i5725 = alloca i64, align 8
  %out1.addr.i5726 = alloca i64*, align 8
  %out2.addr.i5727 = alloca i64*, align 8
  %out3.addr.i5728 = alloca i64*, align 8
  %out4.addr.i5729 = alloca i64*, align 8
  %x33CC33CC.i5730 = alloca i64, align 8
  %x3333FFFF.i5731 = alloca i64, align 8
  %x11115555.i5732 = alloca i64, align 8
  %x22DD6699.i5733 = alloca i64, align 8
  %x22DD9966.i5734 = alloca i64, align 8
  %x00220099.i5735 = alloca i64, align 8
  %x00551144.i5736 = alloca i64, align 8
  %x33662277.i5737 = alloca i64, align 8
  %x5A5A5A5A.i5738 = alloca i64, align 8
  %x7B7E7A7F.i5739 = alloca i64, align 8
  %x59A31CE6.i5740 = alloca i64, align 8
  %x09030C06.i5741 = alloca i64, align 8
  %x09030000.i5742 = alloca i64, align 8
  %x336622FF.i5743 = alloca i64, align 8
  %x3A6522FF.i5744 = alloca i64, align 8
  %x484D494C.i5745 = alloca i64, align 8
  %x0000B6B3.i5746 = alloca i64, align 8
  %x0F0FB9BC.i5747 = alloca i64, align 8
  %x00FC00F9.i5748 = alloca i64, align 8
  %x0FFFB9FD.i5749 = alloca i64, align 8
  %x5DF75DF7.i5750 = alloca i64, align 8
  %x116600F7.i5751 = alloca i64, align 8
  %x1E69B94B.i5752 = alloca i64, align 8
  %x1668B94B.i5753 = alloca i64, align 8
  %x7B7B7B7B.i5754 = alloca i64, align 8
  %x411E5984.i5755 = alloca i64, align 8
  %x1FFFFDFD.i5756 = alloca i64, align 8
  %x5EE1A479.i5757 = alloca i64, align 8
  %x3CB4DFD2.i5758 = alloca i64, align 8
  %x004B002D.i5759 = alloca i64, align 8
  %xB7B2B6B3.i5760 = alloca i64, align 8
  %xCCC9CDC8.i5761 = alloca i64, align 8
  %xCC82CDE5.i5762 = alloca i64, align 8
  %x0055EEBB.i5763 = alloca i64, align 8
  %x5A5AECE9.i5764 = alloca i64, align 8
  %x0050ECA9.i5765 = alloca i64, align 8
  %xC5CAC1CE.i5766 = alloca i64, align 8
  %xC59A2D67.i5767 = alloca i64, align 8
  %x00.i5768 = alloca i64, align 8
  %x01.i5769 = alloca i64, align 8
  %x10.i5770 = alloca i64, align 8
  %x11.i5771 = alloca i64, align 8
  %x20.i5772 = alloca i64, align 8
  %x21.i5773 = alloca i64, align 8
  %x30.i5774 = alloca i64, align 8
  %x31.i5775 = alloca i64, align 8
  %a1.addr.i5607 = alloca i64, align 8
  %a2.addr.i5608 = alloca i64, align 8
  %a3.addr.i5609 = alloca i64, align 8
  %a4.addr.i5610 = alloca i64, align 8
  %a5.addr.i5611 = alloca i64, align 8
  %a6.addr.i5612 = alloca i64, align 8
  %out1.addr.i5613 = alloca i64*, align 8
  %out2.addr.i5614 = alloca i64*, align 8
  %out3.addr.i5615 = alloca i64*, align 8
  %out4.addr.i5616 = alloca i64*, align 8
  %x0FF00FF0.i5617 = alloca i64, align 8
  %x3CC33CC3.i5618 = alloca i64, align 8
  %x00003CC3.i5619 = alloca i64, align 8
  %x0F000F00.i5620 = alloca i64, align 8
  %x5A555A55.i5621 = alloca i64, align 8
  %x00001841.i5622 = alloca i64, align 8
  %x00000F00.i5623 = alloca i64, align 8
  %x33333C33.i5624 = alloca i64, align 8
  %x7B777E77.i5625 = alloca i64, align 8
  %x0FF0F00F.i5626 = alloca i64, align 8
  %x74878E78.i5627 = alloca i64, align 8
  %x003C003C.i5628 = alloca i64, align 8
  %x5A7D5A7D.i5629 = alloca i64, align 8
  %x333300F0.i5630 = alloca i64, align 8
  %x694E5A8D.i5631 = alloca i64, align 8
  %x0FF0CCCC.i5632 = alloca i64, align 8
  %x000F0303.i5633 = alloca i64, align 8
  %x5A505854.i5634 = alloca i64, align 8
  %x33CC000F.i5635 = alloca i64, align 8
  %x699C585B.i5636 = alloca i64, align 8
  %x7F878F78.i5637 = alloca i64, align 8
  %x21101013.i5638 = alloca i64, align 8
  %x7F979F7B.i5639 = alloca i64, align 8
  %x30030CC0.i5640 = alloca i64, align 8
  %x4F9493BB.i5641 = alloca i64, align 8
  %x6F9CDBFB.i5642 = alloca i64, align 8
  %x0000DBFB.i5643 = alloca i64, align 8
  %x00005151.i5644 = alloca i64, align 8
  %x26DAC936.i5645 = alloca i64, align 8
  %x26DA9867.i5646 = alloca i64, align 8
  %x21FF10FF.i5647 = alloca i64, align 8
  %x21FFCB04.i5648 = alloca i64, align 8
  %x2625C9C9.i5649 = alloca i64, align 8
  %x27FFCBCD.i5650 = alloca i64, align 8
  %x27FF1036.i5651 = alloca i64, align 8
  %x27FF103E.i5652 = alloca i64, align 8
  %xB06B6C44.i5653 = alloca i64, align 8
  %x97947C7A.i5654 = alloca i64, align 8
  %x00.i5655 = alloca i64, align 8
  %x01.i5656 = alloca i64, align 8
  %x10.i5657 = alloca i64, align 8
  %x11.i5658 = alloca i64, align 8
  %x20.i5659 = alloca i64, align 8
  %x21.i5660 = alloca i64, align 8
  %x30.i5661 = alloca i64, align 8
  %x31.i5662 = alloca i64, align 8
  %a1.addr.i5504 = alloca i64, align 8
  %a2.addr.i5505 = alloca i64, align 8
  %a3.addr.i5506 = alloca i64, align 8
  %a4.addr.i5507 = alloca i64, align 8
  %a5.addr.i5508 = alloca i64, align 8
  %a6.addr.i5509 = alloca i64, align 8
  %out1.addr.i5510 = alloca i64*, align 8
  %out2.addr.i5511 = alloca i64*, align 8
  %out3.addr.i5512 = alloca i64*, align 8
  %out4.addr.i5513 = alloca i64*, align 8
  %x0C0C0C0C.i5514 = alloca i64, align 8
  %x0000F0F0.i5515 = alloca i64, align 8
  %x00FFF00F.i5516 = alloca i64, align 8
  %x00555005.i5517 = alloca i64, align 8
  %x00515001.i5518 = alloca i64, align 8
  %x33000330.i5519 = alloca i64, align 8
  %x77555775.i5520 = alloca i64, align 8
  %x30303030.i5521 = alloca i64, align 8
  %x3030CFCF.i5522 = alloca i64, align 8
  %x30104745.i5523 = alloca i64, align 8
  %x30555745.i5524 = alloca i64, align 8
  %xFF000FF0.i5525 = alloca i64, align 8
  %xCF1048B5.i5526 = alloca i64, align 8
  %x080A080A.i5527 = alloca i64, align 8
  %xC71A40BF.i5528 = alloca i64, align 8
  %xCB164CB3.i5529 = alloca i64, align 8
  %x9E4319E6.i5530 = alloca i64, align 8
  %x000019E6.i5531 = alloca i64, align 8
  %xF429738C.i5532 = alloca i64, align 8
  %xF4296A6A.i5533 = alloca i64, align 8
  %xC729695A.i5534 = alloca i64, align 8
  %xC47C3D2F.i5535 = alloca i64, align 8
  %xF77F3F3F.i5536 = alloca i64, align 8
  %x9E43E619.i5537 = alloca i64, align 8
  %x693CD926.i5538 = alloca i64, align 8
  %xF719A695.i5539 = alloca i64, align 8
  %xF4FF73FF.i5540 = alloca i64, align 8
  %x03E6D56A.i5541 = alloca i64, align 8
  %x56B3803F.i5542 = alloca i64, align 8
  %xF700A600.i5543 = alloca i64, align 8
  %x61008000.i5544 = alloca i64, align 8
  %x03B7856B.i5545 = alloca i64, align 8
  %x62B7056B.i5546 = alloca i64, align 8
  %x00.i5547 = alloca i64, align 8
  %x01.i5548 = alloca i64, align 8
  %x10.i5549 = alloca i64, align 8
  %x11.i5550 = alloca i64, align 8
  %x20.i5551 = alloca i64, align 8
  %x21.i5552 = alloca i64, align 8
  %x30.i5553 = alloca i64, align 8
  %x31.i5554 = alloca i64, align 8
  %a1.addr.i5381 = alloca i64, align 8
  %a2.addr.i5382 = alloca i64, align 8
  %a3.addr.i5383 = alloca i64, align 8
  %a4.addr.i5384 = alloca i64, align 8
  %a5.addr.i5385 = alloca i64, align 8
  %a6.addr.i5386 = alloca i64, align 8
  %out1.addr.i5387 = alloca i64*, align 8
  %out2.addr.i5388 = alloca i64*, align 8
  %out3.addr.i5389 = alloca i64*, align 8
  %out4.addr.i5390 = alloca i64*, align 8
  %x55005500.i5391 = alloca i64, align 8
  %x5A0F5A0F.i5392 = alloca i64, align 8
  %x3333FFFF.i5393 = alloca i64, align 8
  %x66666666.i5394 = alloca i64, align 8
  %x22226666.i5395 = alloca i64, align 8
  %x2D2D6969.i5396 = alloca i64, align 8
  %x25202160.i5397 = alloca i64, align 8
  %x00FFFF00.i5398 = alloca i64, align 8
  %x33CCCC33.i5399 = alloca i64, align 8
  %x4803120C.i5400 = alloca i64, align 8
  %x2222FFFF.i5401 = alloca i64, align 8
  %x6A21EDF3.i5402 = alloca i64, align 8
  %x4A01CC93.i5403 = alloca i64, align 8
  %x5555FFFF.i5404 = alloca i64, align 8
  %x7F75FFFF.i5405 = alloca i64, align 8
  %x00D20096.i5406 = alloca i64, align 8
  %x7FA7FF69.i5407 = alloca i64, align 8
  %x0A0A0000.i5408 = alloca i64, align 8
  %x0AD80096.i5409 = alloca i64, align 8
  %x00999900.i5410 = alloca i64, align 8
  %x0AD99996.i5411 = alloca i64, align 8
  %x22332233.i5412 = alloca i64, align 8
  %x257AA5F0.i5413 = alloca i64, align 8
  %x054885C0.i5414 = alloca i64, align 8
  %xFAB77A3F.i5415 = alloca i64, align 8
  %x2221EDF3.i5416 = alloca i64, align 8
  %xD89697CC.i5417 = alloca i64, align 8
  %x05B77AC0.i5418 = alloca i64, align 8
  %x05F77AD6.i5419 = alloca i64, align 8
  %x36C48529.i5420 = alloca i64, align 8
  %x6391D07C.i5421 = alloca i64, align 8
  %xBB0747B0.i5422 = alloca i64, align 8
  %x4C460000.i5423 = alloca i64, align 8
  %x4EDF9996.i5424 = alloca i64, align 8
  %x2D4E49EA.i5425 = alloca i64, align 8
  %xBBFFFFB0.i5426 = alloca i64, align 8
  %x96B1B65A.i5427 = alloca i64, align 8
  %x5AFF5AFF.i5428 = alloca i64, align 8
  %x52B11215.i5429 = alloca i64, align 8
  %x4201C010.i5430 = alloca i64, align 8
  %x10B0D205.i5431 = alloca i64, align 8
  %x00.i5432 = alloca i64, align 8
  %x01.i5433 = alloca i64, align 8
  %x10.i5434 = alloca i64, align 8
  %x11.i5435 = alloca i64, align 8
  %x20.i5436 = alloca i64, align 8
  %x21.i5437 = alloca i64, align 8
  %x30.i5438 = alloca i64, align 8
  %x31.i5439 = alloca i64, align 8
  %a1.addr.i5267 = alloca i64, align 8
  %a2.addr.i5268 = alloca i64, align 8
  %a3.addr.i5269 = alloca i64, align 8
  %a4.addr.i5270 = alloca i64, align 8
  %a5.addr.i5271 = alloca i64, align 8
  %a6.addr.i5272 = alloca i64, align 8
  %out1.addr.i5273 = alloca i64*, align 8
  %out2.addr.i5274 = alloca i64*, align 8
  %out3.addr.i5275 = alloca i64*, align 8
  %out4.addr.i5276 = alloca i64*, align 8
  %x33CC33CC.i5277 = alloca i64, align 8
  %x55550000.i5278 = alloca i64, align 8
  %x00AA00FF.i5279 = alloca i64, align 8
  %x33BB33FF.i5280 = alloca i64, align 8
  %x33CC0000.i5281 = alloca i64, align 8
  %x11441144.i5282 = alloca i64, align 8
  %x11BB11BB.i5283 = alloca i64, align 8
  %x003311BB.i5284 = alloca i64, align 8
  %x00000F0F.i5285 = alloca i64, align 8
  %x336600FF.i5286 = alloca i64, align 8
  %x332200FF.i5287 = alloca i64, align 8
  %x332200F0.i5288 = alloca i64, align 8
  %x0302000F.i5289 = alloca i64, align 8
  %xAAAAAAAA.i5290 = alloca i64, align 8
  %xA9A8AAA5.i5291 = alloca i64, align 8
  %x33CCCC33.i5292 = alloca i64, align 8
  %x33CCC030.i5293 = alloca i64, align 8
  %x9A646A95.i5294 = alloca i64, align 8
  %x00333303.i5295 = alloca i64, align 8
  %x118822B8.i5296 = alloca i64, align 8
  %xA8208805.i5297 = alloca i64, align 8
  %x3CC3C33C.i5298 = alloca i64, align 8
  %x94E34B39.i5299 = alloca i64, align 8
  %x0331330C.i5300 = alloca i64, align 8
  %x3FF3F33C.i5301 = alloca i64, align 8
  %xA9DF596A.i5302 = alloca i64, align 8
  %xA9DF5F6F.i5303 = alloca i64, align 8
  %x962CAC53.i5304 = alloca i64, align 8
  %x97D27835.i5305 = alloca i64, align 8
  %x81D25825.i5306 = alloca i64, align 8
  %x812D58DA.i5307 = alloca i64, align 8
  %x802158DA.i5308 = alloca i64, align 8
  %x1A45324F.i5309 = alloca i64, align 8
  %x0A451047.i5310 = alloca i64, align 8
  %xBBDFDD7B.i5311 = alloca i64, align 8
  %xB19ACD3C.i5312 = alloca i64, align 8
  %x00.i5313 = alloca i64, align 8
  %x01.i5314 = alloca i64, align 8
  %x10.i5315 = alloca i64, align 8
  %x11.i5316 = alloca i64, align 8
  %x20.i5317 = alloca i64, align 8
  %x21.i5318 = alloca i64, align 8
  %x30.i5319 = alloca i64, align 8
  %x31.i5320 = alloca i64, align 8
  %a1.addr.i5147 = alloca i64, align 8
  %a2.addr.i5148 = alloca i64, align 8
  %a3.addr.i5149 = alloca i64, align 8
  %a4.addr.i5150 = alloca i64, align 8
  %a5.addr.i5151 = alloca i64, align 8
  %a6.addr.i5152 = alloca i64, align 8
  %out1.addr.i5153 = alloca i64*, align 8
  %out2.addr.i5154 = alloca i64*, align 8
  %out3.addr.i5155 = alloca i64*, align 8
  %out4.addr.i5156 = alloca i64*, align 8
  %x44444444.i5157 = alloca i64, align 8
  %x0F0FF0F0.i5158 = alloca i64, align 8
  %x4F4FF4F4.i5159 = alloca i64, align 8
  %x00FFFF00.i5160 = alloca i64, align 8
  %x00AAAA00.i5161 = alloca i64, align 8
  %x4FE55EF4.i5162 = alloca i64, align 8
  %x3C3CC3C3.i5163 = alloca i64, align 8
  %x3C3C0000.i5164 = alloca i64, align 8
  %x7373F4F4.i5165 = alloca i64, align 8
  %x0C840A00.i5166 = alloca i64, align 8
  %x00005EF4.i5167 = alloca i64, align 8
  %x00FF5EFF.i5168 = alloca i64, align 8
  %x00555455.i5169 = alloca i64, align 8
  %x3C699796.i5170 = alloca i64, align 8
  %x000FF000.i5171 = alloca i64, align 8
  %x55AA55AA.i5172 = alloca i64, align 8
  %x26D9A15E.i5173 = alloca i64, align 8
  %x2FDFAF5F.i5174 = alloca i64, align 8
  %x2FD00F5F.i5175 = alloca i64, align 8
  %x55AAFFAA.i5176 = alloca i64, align 8
  %x28410014.i5177 = alloca i64, align 8
  %x000000FF.i5178 = alloca i64, align 8
  %x000000CC.i5179 = alloca i64, align 8
  %x284100D8.i5180 = alloca i64, align 8
  %x204000D0.i5181 = alloca i64, align 8
  %x3C3CC3FF.i5182 = alloca i64, align 8
  %x1C3CC32F.i5183 = alloca i64, align 8
  %x4969967A.i5184 = alloca i64, align 8
  %x4CC44CC4.i5185 = alloca i64, align 8
  %x40C040C0.i5186 = alloca i64, align 8
  %x69963C69.i5187 = alloca i64, align 8
  %x9669C396.i5188 = alloca i64, align 8
  %xD6A98356.i5189 = alloca i64, align 8
  %x000F00F0.i5190 = alloca i64, align 8
  %xFEBDC3D7.i5191 = alloca i64, align 8
  %xFEB0C307.i5192 = alloca i64, align 8
  %x4CEEEEC4.i5193 = alloca i64, align 8
  %xB25E2DC3.i5194 = alloca i64, align 8
  %x00.i5195 = alloca i64, align 8
  %x01.i5196 = alloca i64, align 8
  %x10.i5197 = alloca i64, align 8
  %x11.i5198 = alloca i64, align 8
  %x20.i5199 = alloca i64, align 8
  %x21.i5200 = alloca i64, align 8
  %x30.i5201 = alloca i64, align 8
  %x31.i5202 = alloca i64, align 8
  %a1.addr.i5058 = alloca i64, align 8
  %a2.addr.i5059 = alloca i64, align 8
  %a3.addr.i5060 = alloca i64, align 8
  %a4.addr.i5061 = alloca i64, align 8
  %a5.addr.i5062 = alloca i64, align 8
  %a6.addr.i5063 = alloca i64, align 8
  %out1.addr.i5064 = alloca i64*, align 8
  %out2.addr.i5065 = alloca i64*, align 8
  %out3.addr.i5066 = alloca i64*, align 8
  %out4.addr.i5067 = alloca i64*, align 8
  %x5A5A5A5A.i5068 = alloca i64, align 8
  %x0F0FF0F0.i5069 = alloca i64, align 8
  %x33FF33FF.i5070 = alloca i64, align 8
  %x33FFCC00.i5071 = alloca i64, align 8
  %x0C0030F0.i5072 = alloca i64, align 8
  %x0C0CC0C0.i5073 = alloca i64, align 8
  %x0CF3C03F.i5074 = alloca i64, align 8
  %x5EFBDA7F.i5075 = alloca i64, align 8
  %x52FBCA0F.i5076 = alloca i64, align 8
  %x61C8F93C.i5077 = alloca i64, align 8
  %x00C0C03C.i5078 = alloca i64, align 8
  %x0F0F30C0.i5079 = alloca i64, align 8
  %x3B92A366.i5080 = alloca i64, align 8
  %x30908326.i5081 = alloca i64, align 8
  %x3C90B3D6.i5082 = alloca i64, align 8
  %x33CC33CC.i5083 = alloca i64, align 8
  %x0C0CFFFF.i5084 = alloca i64, align 8
  %x379E5C99.i5085 = alloca i64, align 8
  %x04124C11.i5086 = alloca i64, align 8
  %x56E9861E.i5087 = alloca i64, align 8
  %xA91679E1.i5088 = alloca i64, align 8
  %x9586CA37.i5089 = alloca i64, align 8
  %x8402C833.i5090 = alloca i64, align 8
  %x84C2C83F.i5091 = alloca i64, align 8
  %xB35C94A6.i5092 = alloca i64, align 8
  %x00.i5093 = alloca i64, align 8
  %x01.i5094 = alloca i64, align 8
  %x10.i5095 = alloca i64, align 8
  %x11.i5096 = alloca i64, align 8
  %x20.i5097 = alloca i64, align 8
  %x21.i5098 = alloca i64, align 8
  %x30.i5099 = alloca i64, align 8
  %x31.i5100 = alloca i64, align 8
  %a1.addr.i4939 = alloca i64, align 8
  %a2.addr.i4940 = alloca i64, align 8
  %a3.addr.i4941 = alloca i64, align 8
  %a4.addr.i4942 = alloca i64, align 8
  %a5.addr.i4943 = alloca i64, align 8
  %a6.addr.i4944 = alloca i64, align 8
  %out1.addr.i4945 = alloca i64*, align 8
  %out2.addr.i4946 = alloca i64*, align 8
  %out3.addr.i4947 = alloca i64*, align 8
  %out4.addr.i4948 = alloca i64*, align 8
  %x77777777.i4949 = alloca i64, align 8
  %x77770000.i4950 = alloca i64, align 8
  %x22225555.i4951 = alloca i64, align 8
  %x11116666.i4952 = alloca i64, align 8
  %x1F1F6F6F.i4953 = alloca i64, align 8
  %x70700000.i4954 = alloca i64, align 8
  %x43433333.i4955 = alloca i64, align 8
  %x00430033.i4956 = alloca i64, align 8
  %x55557777.i4957 = alloca i64, align 8
  %x55167744.i4958 = alloca i64, align 8
  %x5A19784B.i4959 = alloca i64, align 8
  %x5A1987B4.i4960 = alloca i64, align 8
  %x7A3BD7F5.i4961 = alloca i64, align 8
  %x003B00F5.i4962 = alloca i64, align 8
  %x221955A0.i4963 = alloca i64, align 8
  %x05050707.i4964 = alloca i64, align 8
  %x271C52A7.i4965 = alloca i64, align 8
  %x2A2A82A0.i4966 = alloca i64, align 8
  %x6969B193.i4967 = alloca i64, align 8
  %x1FE06F90.i4968 = alloca i64, align 8
  %x16804E00.i4969 = alloca i64, align 8
  %xE97FB1FF.i4970 = alloca i64, align 8
  %x43403302.i4971 = alloca i64, align 8
  %x35CAED30.i4972 = alloca i64, align 8
  %x37DEFFB7.i4973 = alloca i64, align 8
  %x349ECCB5.i4974 = alloca i64, align 8
  %x0B01234A.i4975 = alloca i64, align 8
  %x101884B4.i4976 = alloca i64, align 8
  %x0FF8EB24.i4977 = alloca i64, align 8
  %x41413333.i4978 = alloca i64, align 8
  %x4FF9FB37.i4979 = alloca i64, align 8
  %x4FC2FBC2.i4980 = alloca i64, align 8
  %x22222222.i4981 = alloca i64, align 8
  %x16BCEE97.i4982 = alloca i64, align 8
  %x0F080B04.i4983 = alloca i64, align 8
  %x19B4E593.i4984 = alloca i64, align 8
  %x5C5C5C5C.i4985 = alloca i64, align 8
  %x4448184C.i4986 = alloca i64, align 8
  %x2DDABE71.i4987 = alloca i64, align 8
  %x6992A63D.i4988 = alloca i64, align 8
  %x00.i4989 = alloca i64, align 8
  %x01.i4990 = alloca i64, align 8
  %x10.i4991 = alloca i64, align 8
  %x11.i4992 = alloca i64, align 8
  %x20.i4993 = alloca i64, align 8
  %x21.i4994 = alloca i64, align 8
  %x30.i4995 = alloca i64, align 8
  %x31.i4996 = alloca i64, align 8
  %a1.addr.i4825 = alloca i64, align 8
  %a2.addr.i4826 = alloca i64, align 8
  %a3.addr.i4827 = alloca i64, align 8
  %a4.addr.i4828 = alloca i64, align 8
  %a5.addr.i4829 = alloca i64, align 8
  %a6.addr.i4830 = alloca i64, align 8
  %out1.addr.i4831 = alloca i64*, align 8
  %out2.addr.i4832 = alloca i64*, align 8
  %out3.addr.i4833 = alloca i64*, align 8
  %out4.addr.i4834 = alloca i64*, align 8
  %x33CC33CC.i4835 = alloca i64, align 8
  %x3333FFFF.i4836 = alloca i64, align 8
  %x11115555.i4837 = alloca i64, align 8
  %x22DD6699.i4838 = alloca i64, align 8
  %x22DD9966.i4839 = alloca i64, align 8
  %x00220099.i4840 = alloca i64, align 8
  %x00551144.i4841 = alloca i64, align 8
  %x33662277.i4842 = alloca i64, align 8
  %x5A5A5A5A.i4843 = alloca i64, align 8
  %x7B7E7A7F.i4844 = alloca i64, align 8
  %x59A31CE6.i4845 = alloca i64, align 8
  %x09030C06.i4846 = alloca i64, align 8
  %x09030000.i4847 = alloca i64, align 8
  %x336622FF.i4848 = alloca i64, align 8
  %x3A6522FF.i4849 = alloca i64, align 8
  %x484D494C.i4850 = alloca i64, align 8
  %x0000B6B3.i4851 = alloca i64, align 8
  %x0F0FB9BC.i4852 = alloca i64, align 8
  %x00FC00F9.i4853 = alloca i64, align 8
  %x0FFFB9FD.i4854 = alloca i64, align 8
  %x5DF75DF7.i4855 = alloca i64, align 8
  %x116600F7.i4856 = alloca i64, align 8
  %x1E69B94B.i4857 = alloca i64, align 8
  %x1668B94B.i4858 = alloca i64, align 8
  %x7B7B7B7B.i4859 = alloca i64, align 8
  %x411E5984.i4860 = alloca i64, align 8
  %x1FFFFDFD.i4861 = alloca i64, align 8
  %x5EE1A479.i4862 = alloca i64, align 8
  %x3CB4DFD2.i4863 = alloca i64, align 8
  %x004B002D.i4864 = alloca i64, align 8
  %xB7B2B6B3.i4865 = alloca i64, align 8
  %xCCC9CDC8.i4866 = alloca i64, align 8
  %xCC82CDE5.i4867 = alloca i64, align 8
  %x0055EEBB.i4868 = alloca i64, align 8
  %x5A5AECE9.i4869 = alloca i64, align 8
  %x0050ECA9.i4870 = alloca i64, align 8
  %xC5CAC1CE.i4871 = alloca i64, align 8
  %xC59A2D67.i4872 = alloca i64, align 8
  %x00.i4873 = alloca i64, align 8
  %x01.i4874 = alloca i64, align 8
  %x10.i4875 = alloca i64, align 8
  %x11.i4876 = alloca i64, align 8
  %x20.i4877 = alloca i64, align 8
  %x21.i4878 = alloca i64, align 8
  %x30.i4879 = alloca i64, align 8
  %x31.i4880 = alloca i64, align 8
  %a1.addr.i4712 = alloca i64, align 8
  %a2.addr.i4713 = alloca i64, align 8
  %a3.addr.i4714 = alloca i64, align 8
  %a4.addr.i4715 = alloca i64, align 8
  %a5.addr.i4716 = alloca i64, align 8
  %a6.addr.i4717 = alloca i64, align 8
  %out1.addr.i4718 = alloca i64*, align 8
  %out2.addr.i4719 = alloca i64*, align 8
  %out3.addr.i4720 = alloca i64*, align 8
  %out4.addr.i4721 = alloca i64*, align 8
  %x0FF00FF0.i4722 = alloca i64, align 8
  %x3CC33CC3.i4723 = alloca i64, align 8
  %x00003CC3.i4724 = alloca i64, align 8
  %x0F000F00.i4725 = alloca i64, align 8
  %x5A555A55.i4726 = alloca i64, align 8
  %x00001841.i4727 = alloca i64, align 8
  %x00000F00.i4728 = alloca i64, align 8
  %x33333C33.i4729 = alloca i64, align 8
  %x7B777E77.i4730 = alloca i64, align 8
  %x0FF0F00F.i4731 = alloca i64, align 8
  %x74878E78.i4732 = alloca i64, align 8
  %x003C003C.i4733 = alloca i64, align 8
  %x5A7D5A7D.i4734 = alloca i64, align 8
  %x333300F0.i4735 = alloca i64, align 8
  %x694E5A8D.i4736 = alloca i64, align 8
  %x0FF0CCCC.i4737 = alloca i64, align 8
  %x000F0303.i4738 = alloca i64, align 8
  %x5A505854.i4739 = alloca i64, align 8
  %x33CC000F.i4740 = alloca i64, align 8
  %x699C585B.i4741 = alloca i64, align 8
  %x7F878F78.i4742 = alloca i64, align 8
  %x21101013.i4743 = alloca i64, align 8
  %x7F979F7B.i4744 = alloca i64, align 8
  %x30030CC0.i4745 = alloca i64, align 8
  %x4F9493BB.i4746 = alloca i64, align 8
  %x6F9CDBFB.i4747 = alloca i64, align 8
  %x0000DBFB.i4748 = alloca i64, align 8
  %x00005151.i4749 = alloca i64, align 8
  %x26DAC936.i4750 = alloca i64, align 8
  %x26DA9867.i4751 = alloca i64, align 8
  %x21FF10FF.i4752 = alloca i64, align 8
  %x21FFCB04.i4753 = alloca i64, align 8
  %x2625C9C9.i4754 = alloca i64, align 8
  %x27FFCBCD.i4755 = alloca i64, align 8
  %x27FF1036.i4756 = alloca i64, align 8
  %x27FF103E.i4757 = alloca i64, align 8
  %xB06B6C44.i4758 = alloca i64, align 8
  %x97947C7A.i4759 = alloca i64, align 8
  %x00.i4760 = alloca i64, align 8
  %x01.i4761 = alloca i64, align 8
  %x10.i4762 = alloca i64, align 8
  %x11.i4763 = alloca i64, align 8
  %x20.i4764 = alloca i64, align 8
  %x21.i4765 = alloca i64, align 8
  %x30.i4766 = alloca i64, align 8
  %x31.i4767 = alloca i64, align 8
  %a1.addr.i4609 = alloca i64, align 8
  %a2.addr.i4610 = alloca i64, align 8
  %a3.addr.i4611 = alloca i64, align 8
  %a4.addr.i4612 = alloca i64, align 8
  %a5.addr.i4613 = alloca i64, align 8
  %a6.addr.i4614 = alloca i64, align 8
  %out1.addr.i4615 = alloca i64*, align 8
  %out2.addr.i4616 = alloca i64*, align 8
  %out3.addr.i4617 = alloca i64*, align 8
  %out4.addr.i4618 = alloca i64*, align 8
  %x0C0C0C0C.i4619 = alloca i64, align 8
  %x0000F0F0.i4620 = alloca i64, align 8
  %x00FFF00F.i4621 = alloca i64, align 8
  %x00555005.i4622 = alloca i64, align 8
  %x00515001.i4623 = alloca i64, align 8
  %x33000330.i4624 = alloca i64, align 8
  %x77555775.i4625 = alloca i64, align 8
  %x30303030.i4626 = alloca i64, align 8
  %x3030CFCF.i4627 = alloca i64, align 8
  %x30104745.i4628 = alloca i64, align 8
  %x30555745.i4629 = alloca i64, align 8
  %xFF000FF0.i4630 = alloca i64, align 8
  %xCF1048B5.i4631 = alloca i64, align 8
  %x080A080A.i4632 = alloca i64, align 8
  %xC71A40BF.i4633 = alloca i64, align 8
  %xCB164CB3.i4634 = alloca i64, align 8
  %x9E4319E6.i4635 = alloca i64, align 8
  %x000019E6.i4636 = alloca i64, align 8
  %xF429738C.i4637 = alloca i64, align 8
  %xF4296A6A.i4638 = alloca i64, align 8
  %xC729695A.i4639 = alloca i64, align 8
  %xC47C3D2F.i4640 = alloca i64, align 8
  %xF77F3F3F.i4641 = alloca i64, align 8
  %x9E43E619.i4642 = alloca i64, align 8
  %x693CD926.i4643 = alloca i64, align 8
  %xF719A695.i4644 = alloca i64, align 8
  %xF4FF73FF.i4645 = alloca i64, align 8
  %x03E6D56A.i4646 = alloca i64, align 8
  %x56B3803F.i4647 = alloca i64, align 8
  %xF700A600.i4648 = alloca i64, align 8
  %x61008000.i4649 = alloca i64, align 8
  %x03B7856B.i4650 = alloca i64, align 8
  %x62B7056B.i4651 = alloca i64, align 8
  %x00.i4652 = alloca i64, align 8
  %x01.i4653 = alloca i64, align 8
  %x10.i4654 = alloca i64, align 8
  %x11.i4655 = alloca i64, align 8
  %x20.i4656 = alloca i64, align 8
  %x21.i4657 = alloca i64, align 8
  %x30.i4658 = alloca i64, align 8
  %x31.i4659 = alloca i64, align 8
  %a1.addr.i4486 = alloca i64, align 8
  %a2.addr.i4487 = alloca i64, align 8
  %a3.addr.i4488 = alloca i64, align 8
  %a4.addr.i4489 = alloca i64, align 8
  %a5.addr.i4490 = alloca i64, align 8
  %a6.addr.i4491 = alloca i64, align 8
  %out1.addr.i4492 = alloca i64*, align 8
  %out2.addr.i4493 = alloca i64*, align 8
  %out3.addr.i4494 = alloca i64*, align 8
  %out4.addr.i4495 = alloca i64*, align 8
  %x55005500.i4496 = alloca i64, align 8
  %x5A0F5A0F.i4497 = alloca i64, align 8
  %x3333FFFF.i4498 = alloca i64, align 8
  %x66666666.i4499 = alloca i64, align 8
  %x22226666.i4500 = alloca i64, align 8
  %x2D2D6969.i4501 = alloca i64, align 8
  %x25202160.i4502 = alloca i64, align 8
  %x00FFFF00.i4503 = alloca i64, align 8
  %x33CCCC33.i4504 = alloca i64, align 8
  %x4803120C.i4505 = alloca i64, align 8
  %x2222FFFF.i4506 = alloca i64, align 8
  %x6A21EDF3.i4507 = alloca i64, align 8
  %x4A01CC93.i4508 = alloca i64, align 8
  %x5555FFFF.i4509 = alloca i64, align 8
  %x7F75FFFF.i4510 = alloca i64, align 8
  %x00D20096.i4511 = alloca i64, align 8
  %x7FA7FF69.i4512 = alloca i64, align 8
  %x0A0A0000.i4513 = alloca i64, align 8
  %x0AD80096.i4514 = alloca i64, align 8
  %x00999900.i4515 = alloca i64, align 8
  %x0AD99996.i4516 = alloca i64, align 8
  %x22332233.i4517 = alloca i64, align 8
  %x257AA5F0.i4518 = alloca i64, align 8
  %x054885C0.i4519 = alloca i64, align 8
  %xFAB77A3F.i4520 = alloca i64, align 8
  %x2221EDF3.i4521 = alloca i64, align 8
  %xD89697CC.i4522 = alloca i64, align 8
  %x05B77AC0.i4523 = alloca i64, align 8
  %x05F77AD6.i4524 = alloca i64, align 8
  %x36C48529.i4525 = alloca i64, align 8
  %x6391D07C.i4526 = alloca i64, align 8
  %xBB0747B0.i4527 = alloca i64, align 8
  %x4C460000.i4528 = alloca i64, align 8
  %x4EDF9996.i4529 = alloca i64, align 8
  %x2D4E49EA.i4530 = alloca i64, align 8
  %xBBFFFFB0.i4531 = alloca i64, align 8
  %x96B1B65A.i4532 = alloca i64, align 8
  %x5AFF5AFF.i4533 = alloca i64, align 8
  %x52B11215.i4534 = alloca i64, align 8
  %x4201C010.i4535 = alloca i64, align 8
  %x10B0D205.i4536 = alloca i64, align 8
  %x00.i4537 = alloca i64, align 8
  %x01.i4538 = alloca i64, align 8
  %x10.i4539 = alloca i64, align 8
  %x11.i4540 = alloca i64, align 8
  %x20.i4541 = alloca i64, align 8
  %x21.i4542 = alloca i64, align 8
  %x30.i4543 = alloca i64, align 8
  %x31.i4544 = alloca i64, align 8
  %a1.addr.i4372 = alloca i64, align 8
  %a2.addr.i4373 = alloca i64, align 8
  %a3.addr.i4374 = alloca i64, align 8
  %a4.addr.i4375 = alloca i64, align 8
  %a5.addr.i4376 = alloca i64, align 8
  %a6.addr.i4377 = alloca i64, align 8
  %out1.addr.i4378 = alloca i64*, align 8
  %out2.addr.i4379 = alloca i64*, align 8
  %out3.addr.i4380 = alloca i64*, align 8
  %out4.addr.i4381 = alloca i64*, align 8
  %x33CC33CC.i4382 = alloca i64, align 8
  %x55550000.i4383 = alloca i64, align 8
  %x00AA00FF.i4384 = alloca i64, align 8
  %x33BB33FF.i4385 = alloca i64, align 8
  %x33CC0000.i4386 = alloca i64, align 8
  %x11441144.i4387 = alloca i64, align 8
  %x11BB11BB.i4388 = alloca i64, align 8
  %x003311BB.i4389 = alloca i64, align 8
  %x00000F0F.i4390 = alloca i64, align 8
  %x336600FF.i4391 = alloca i64, align 8
  %x332200FF.i4392 = alloca i64, align 8
  %x332200F0.i4393 = alloca i64, align 8
  %x0302000F.i4394 = alloca i64, align 8
  %xAAAAAAAA.i4395 = alloca i64, align 8
  %xA9A8AAA5.i4396 = alloca i64, align 8
  %x33CCCC33.i4397 = alloca i64, align 8
  %x33CCC030.i4398 = alloca i64, align 8
  %x9A646A95.i4399 = alloca i64, align 8
  %x00333303.i4400 = alloca i64, align 8
  %x118822B8.i4401 = alloca i64, align 8
  %xA8208805.i4402 = alloca i64, align 8
  %x3CC3C33C.i4403 = alloca i64, align 8
  %x94E34B39.i4404 = alloca i64, align 8
  %x0331330C.i4405 = alloca i64, align 8
  %x3FF3F33C.i4406 = alloca i64, align 8
  %xA9DF596A.i4407 = alloca i64, align 8
  %xA9DF5F6F.i4408 = alloca i64, align 8
  %x962CAC53.i4409 = alloca i64, align 8
  %x97D27835.i4410 = alloca i64, align 8
  %x81D25825.i4411 = alloca i64, align 8
  %x812D58DA.i4412 = alloca i64, align 8
  %x802158DA.i4413 = alloca i64, align 8
  %x1A45324F.i4414 = alloca i64, align 8
  %x0A451047.i4415 = alloca i64, align 8
  %xBBDFDD7B.i4416 = alloca i64, align 8
  %xB19ACD3C.i4417 = alloca i64, align 8
  %x00.i4418 = alloca i64, align 8
  %x01.i4419 = alloca i64, align 8
  %x10.i4420 = alloca i64, align 8
  %x11.i4421 = alloca i64, align 8
  %x20.i4422 = alloca i64, align 8
  %x21.i4423 = alloca i64, align 8
  %x30.i4424 = alloca i64, align 8
  %x31.i4425 = alloca i64, align 8
  %a1.addr.i4252 = alloca i64, align 8
  %a2.addr.i4253 = alloca i64, align 8
  %a3.addr.i4254 = alloca i64, align 8
  %a4.addr.i4255 = alloca i64, align 8
  %a5.addr.i4256 = alloca i64, align 8
  %a6.addr.i4257 = alloca i64, align 8
  %out1.addr.i4258 = alloca i64*, align 8
  %out2.addr.i4259 = alloca i64*, align 8
  %out3.addr.i4260 = alloca i64*, align 8
  %out4.addr.i4261 = alloca i64*, align 8
  %x44444444.i4262 = alloca i64, align 8
  %x0F0FF0F0.i4263 = alloca i64, align 8
  %x4F4FF4F4.i4264 = alloca i64, align 8
  %x00FFFF00.i4265 = alloca i64, align 8
  %x00AAAA00.i4266 = alloca i64, align 8
  %x4FE55EF4.i4267 = alloca i64, align 8
  %x3C3CC3C3.i4268 = alloca i64, align 8
  %x3C3C0000.i4269 = alloca i64, align 8
  %x7373F4F4.i4270 = alloca i64, align 8
  %x0C840A00.i4271 = alloca i64, align 8
  %x00005EF4.i4272 = alloca i64, align 8
  %x00FF5EFF.i4273 = alloca i64, align 8
  %x00555455.i4274 = alloca i64, align 8
  %x3C699796.i4275 = alloca i64, align 8
  %x000FF000.i4276 = alloca i64, align 8
  %x55AA55AA.i4277 = alloca i64, align 8
  %x26D9A15E.i4278 = alloca i64, align 8
  %x2FDFAF5F.i4279 = alloca i64, align 8
  %x2FD00F5F.i4280 = alloca i64, align 8
  %x55AAFFAA.i4281 = alloca i64, align 8
  %x28410014.i4282 = alloca i64, align 8
  %x000000FF.i4283 = alloca i64, align 8
  %x000000CC.i4284 = alloca i64, align 8
  %x284100D8.i4285 = alloca i64, align 8
  %x204000D0.i4286 = alloca i64, align 8
  %x3C3CC3FF.i4287 = alloca i64, align 8
  %x1C3CC32F.i4288 = alloca i64, align 8
  %x4969967A.i4289 = alloca i64, align 8
  %x4CC44CC4.i4290 = alloca i64, align 8
  %x40C040C0.i4291 = alloca i64, align 8
  %x69963C69.i4292 = alloca i64, align 8
  %x9669C396.i4293 = alloca i64, align 8
  %xD6A98356.i4294 = alloca i64, align 8
  %x000F00F0.i4295 = alloca i64, align 8
  %xFEBDC3D7.i4296 = alloca i64, align 8
  %xFEB0C307.i4297 = alloca i64, align 8
  %x4CEEEEC4.i4298 = alloca i64, align 8
  %xB25E2DC3.i4299 = alloca i64, align 8
  %x00.i4300 = alloca i64, align 8
  %x01.i4301 = alloca i64, align 8
  %x10.i4302 = alloca i64, align 8
  %x11.i4303 = alloca i64, align 8
  %x20.i4304 = alloca i64, align 8
  %x21.i4305 = alloca i64, align 8
  %x30.i4306 = alloca i64, align 8
  %x31.i4307 = alloca i64, align 8
  %a1.addr.i4163 = alloca i64, align 8
  %a2.addr.i4164 = alloca i64, align 8
  %a3.addr.i4165 = alloca i64, align 8
  %a4.addr.i4166 = alloca i64, align 8
  %a5.addr.i4167 = alloca i64, align 8
  %a6.addr.i4168 = alloca i64, align 8
  %out1.addr.i4169 = alloca i64*, align 8
  %out2.addr.i4170 = alloca i64*, align 8
  %out3.addr.i4171 = alloca i64*, align 8
  %out4.addr.i4172 = alloca i64*, align 8
  %x5A5A5A5A.i4173 = alloca i64, align 8
  %x0F0FF0F0.i4174 = alloca i64, align 8
  %x33FF33FF.i4175 = alloca i64, align 8
  %x33FFCC00.i4176 = alloca i64, align 8
  %x0C0030F0.i4177 = alloca i64, align 8
  %x0C0CC0C0.i4178 = alloca i64, align 8
  %x0CF3C03F.i4179 = alloca i64, align 8
  %x5EFBDA7F.i4180 = alloca i64, align 8
  %x52FBCA0F.i4181 = alloca i64, align 8
  %x61C8F93C.i4182 = alloca i64, align 8
  %x00C0C03C.i4183 = alloca i64, align 8
  %x0F0F30C0.i4184 = alloca i64, align 8
  %x3B92A366.i4185 = alloca i64, align 8
  %x30908326.i4186 = alloca i64, align 8
  %x3C90B3D6.i4187 = alloca i64, align 8
  %x33CC33CC.i4188 = alloca i64, align 8
  %x0C0CFFFF.i4189 = alloca i64, align 8
  %x379E5C99.i4190 = alloca i64, align 8
  %x04124C11.i4191 = alloca i64, align 8
  %x56E9861E.i4192 = alloca i64, align 8
  %xA91679E1.i4193 = alloca i64, align 8
  %x9586CA37.i4194 = alloca i64, align 8
  %x8402C833.i4195 = alloca i64, align 8
  %x84C2C83F.i4196 = alloca i64, align 8
  %xB35C94A6.i4197 = alloca i64, align 8
  %x00.i4198 = alloca i64, align 8
  %x01.i4199 = alloca i64, align 8
  %x10.i4200 = alloca i64, align 8
  %x11.i4201 = alloca i64, align 8
  %x20.i4202 = alloca i64, align 8
  %x21.i4203 = alloca i64, align 8
  %x30.i4204 = alloca i64, align 8
  %x31.i4205 = alloca i64, align 8
  %a1.addr.i4044 = alloca i64, align 8
  %a2.addr.i4045 = alloca i64, align 8
  %a3.addr.i4046 = alloca i64, align 8
  %a4.addr.i4047 = alloca i64, align 8
  %a5.addr.i4048 = alloca i64, align 8
  %a6.addr.i4049 = alloca i64, align 8
  %out1.addr.i4050 = alloca i64*, align 8
  %out2.addr.i4051 = alloca i64*, align 8
  %out3.addr.i4052 = alloca i64*, align 8
  %out4.addr.i4053 = alloca i64*, align 8
  %x77777777.i4054 = alloca i64, align 8
  %x77770000.i4055 = alloca i64, align 8
  %x22225555.i4056 = alloca i64, align 8
  %x11116666.i4057 = alloca i64, align 8
  %x1F1F6F6F.i4058 = alloca i64, align 8
  %x70700000.i4059 = alloca i64, align 8
  %x43433333.i4060 = alloca i64, align 8
  %x00430033.i4061 = alloca i64, align 8
  %x55557777.i4062 = alloca i64, align 8
  %x55167744.i4063 = alloca i64, align 8
  %x5A19784B.i4064 = alloca i64, align 8
  %x5A1987B4.i4065 = alloca i64, align 8
  %x7A3BD7F5.i4066 = alloca i64, align 8
  %x003B00F5.i4067 = alloca i64, align 8
  %x221955A0.i4068 = alloca i64, align 8
  %x05050707.i4069 = alloca i64, align 8
  %x271C52A7.i4070 = alloca i64, align 8
  %x2A2A82A0.i4071 = alloca i64, align 8
  %x6969B193.i4072 = alloca i64, align 8
  %x1FE06F90.i4073 = alloca i64, align 8
  %x16804E00.i4074 = alloca i64, align 8
  %xE97FB1FF.i4075 = alloca i64, align 8
  %x43403302.i4076 = alloca i64, align 8
  %x35CAED30.i4077 = alloca i64, align 8
  %x37DEFFB7.i4078 = alloca i64, align 8
  %x349ECCB5.i4079 = alloca i64, align 8
  %x0B01234A.i4080 = alloca i64, align 8
  %x101884B4.i4081 = alloca i64, align 8
  %x0FF8EB24.i4082 = alloca i64, align 8
  %x41413333.i4083 = alloca i64, align 8
  %x4FF9FB37.i4084 = alloca i64, align 8
  %x4FC2FBC2.i4085 = alloca i64, align 8
  %x22222222.i4086 = alloca i64, align 8
  %x16BCEE97.i4087 = alloca i64, align 8
  %x0F080B04.i4088 = alloca i64, align 8
  %x19B4E593.i4089 = alloca i64, align 8
  %x5C5C5C5C.i4090 = alloca i64, align 8
  %x4448184C.i4091 = alloca i64, align 8
  %x2DDABE71.i4092 = alloca i64, align 8
  %x6992A63D.i4093 = alloca i64, align 8
  %x00.i4094 = alloca i64, align 8
  %x01.i4095 = alloca i64, align 8
  %x10.i4096 = alloca i64, align 8
  %x11.i4097 = alloca i64, align 8
  %x20.i4098 = alloca i64, align 8
  %x21.i4099 = alloca i64, align 8
  %x30.i4100 = alloca i64, align 8
  %x31.i4101 = alloca i64, align 8
  %a1.addr.i3930 = alloca i64, align 8
  %a2.addr.i3931 = alloca i64, align 8
  %a3.addr.i3932 = alloca i64, align 8
  %a4.addr.i3933 = alloca i64, align 8
  %a5.addr.i3934 = alloca i64, align 8
  %a6.addr.i3935 = alloca i64, align 8
  %out1.addr.i3936 = alloca i64*, align 8
  %out2.addr.i3937 = alloca i64*, align 8
  %out3.addr.i3938 = alloca i64*, align 8
  %out4.addr.i3939 = alloca i64*, align 8
  %x33CC33CC.i3940 = alloca i64, align 8
  %x3333FFFF.i3941 = alloca i64, align 8
  %x11115555.i3942 = alloca i64, align 8
  %x22DD6699.i3943 = alloca i64, align 8
  %x22DD9966.i3944 = alloca i64, align 8
  %x00220099.i3945 = alloca i64, align 8
  %x00551144.i3946 = alloca i64, align 8
  %x33662277.i3947 = alloca i64, align 8
  %x5A5A5A5A.i3948 = alloca i64, align 8
  %x7B7E7A7F.i3949 = alloca i64, align 8
  %x59A31CE6.i3950 = alloca i64, align 8
  %x09030C06.i3951 = alloca i64, align 8
  %x09030000.i3952 = alloca i64, align 8
  %x336622FF.i3953 = alloca i64, align 8
  %x3A6522FF.i3954 = alloca i64, align 8
  %x484D494C.i3955 = alloca i64, align 8
  %x0000B6B3.i3956 = alloca i64, align 8
  %x0F0FB9BC.i3957 = alloca i64, align 8
  %x00FC00F9.i3958 = alloca i64, align 8
  %x0FFFB9FD.i3959 = alloca i64, align 8
  %x5DF75DF7.i3960 = alloca i64, align 8
  %x116600F7.i3961 = alloca i64, align 8
  %x1E69B94B.i3962 = alloca i64, align 8
  %x1668B94B.i3963 = alloca i64, align 8
  %x7B7B7B7B.i3964 = alloca i64, align 8
  %x411E5984.i3965 = alloca i64, align 8
  %x1FFFFDFD.i3966 = alloca i64, align 8
  %x5EE1A479.i3967 = alloca i64, align 8
  %x3CB4DFD2.i3968 = alloca i64, align 8
  %x004B002D.i3969 = alloca i64, align 8
  %xB7B2B6B3.i3970 = alloca i64, align 8
  %xCCC9CDC8.i3971 = alloca i64, align 8
  %xCC82CDE5.i3972 = alloca i64, align 8
  %x0055EEBB.i3973 = alloca i64, align 8
  %x5A5AECE9.i3974 = alloca i64, align 8
  %x0050ECA9.i3975 = alloca i64, align 8
  %xC5CAC1CE.i3976 = alloca i64, align 8
  %xC59A2D67.i3977 = alloca i64, align 8
  %x00.i3978 = alloca i64, align 8
  %x01.i3979 = alloca i64, align 8
  %x10.i3980 = alloca i64, align 8
  %x11.i3981 = alloca i64, align 8
  %x20.i3982 = alloca i64, align 8
  %x21.i3983 = alloca i64, align 8
  %x30.i3984 = alloca i64, align 8
  %x31.i3985 = alloca i64, align 8
  %a1.addr.i3817 = alloca i64, align 8
  %a2.addr.i3818 = alloca i64, align 8
  %a3.addr.i3819 = alloca i64, align 8
  %a4.addr.i3820 = alloca i64, align 8
  %a5.addr.i3821 = alloca i64, align 8
  %a6.addr.i3822 = alloca i64, align 8
  %out1.addr.i3823 = alloca i64*, align 8
  %out2.addr.i3824 = alloca i64*, align 8
  %out3.addr.i3825 = alloca i64*, align 8
  %out4.addr.i3826 = alloca i64*, align 8
  %x0FF00FF0.i3827 = alloca i64, align 8
  %x3CC33CC3.i3828 = alloca i64, align 8
  %x00003CC3.i3829 = alloca i64, align 8
  %x0F000F00.i3830 = alloca i64, align 8
  %x5A555A55.i3831 = alloca i64, align 8
  %x00001841.i3832 = alloca i64, align 8
  %x00000F00.i3833 = alloca i64, align 8
  %x33333C33.i3834 = alloca i64, align 8
  %x7B777E77.i3835 = alloca i64, align 8
  %x0FF0F00F.i3836 = alloca i64, align 8
  %x74878E78.i3837 = alloca i64, align 8
  %x003C003C.i3838 = alloca i64, align 8
  %x5A7D5A7D.i3839 = alloca i64, align 8
  %x333300F0.i3840 = alloca i64, align 8
  %x694E5A8D.i3841 = alloca i64, align 8
  %x0FF0CCCC.i3842 = alloca i64, align 8
  %x000F0303.i3843 = alloca i64, align 8
  %x5A505854.i3844 = alloca i64, align 8
  %x33CC000F.i3845 = alloca i64, align 8
  %x699C585B.i3846 = alloca i64, align 8
  %x7F878F78.i3847 = alloca i64, align 8
  %x21101013.i3848 = alloca i64, align 8
  %x7F979F7B.i3849 = alloca i64, align 8
  %x30030CC0.i3850 = alloca i64, align 8
  %x4F9493BB.i3851 = alloca i64, align 8
  %x6F9CDBFB.i3852 = alloca i64, align 8
  %x0000DBFB.i3853 = alloca i64, align 8
  %x00005151.i3854 = alloca i64, align 8
  %x26DAC936.i3855 = alloca i64, align 8
  %x26DA9867.i3856 = alloca i64, align 8
  %x21FF10FF.i3857 = alloca i64, align 8
  %x21FFCB04.i3858 = alloca i64, align 8
  %x2625C9C9.i3859 = alloca i64, align 8
  %x27FFCBCD.i3860 = alloca i64, align 8
  %x27FF1036.i3861 = alloca i64, align 8
  %x27FF103E.i3862 = alloca i64, align 8
  %xB06B6C44.i3863 = alloca i64, align 8
  %x97947C7A.i3864 = alloca i64, align 8
  %x00.i3865 = alloca i64, align 8
  %x01.i3866 = alloca i64, align 8
  %x10.i3867 = alloca i64, align 8
  %x11.i3868 = alloca i64, align 8
  %x20.i3869 = alloca i64, align 8
  %x21.i3870 = alloca i64, align 8
  %x30.i3871 = alloca i64, align 8
  %x31.i3872 = alloca i64, align 8
  %a1.addr.i3714 = alloca i64, align 8
  %a2.addr.i3715 = alloca i64, align 8
  %a3.addr.i3716 = alloca i64, align 8
  %a4.addr.i3717 = alloca i64, align 8
  %a5.addr.i3718 = alloca i64, align 8
  %a6.addr.i3719 = alloca i64, align 8
  %out1.addr.i3720 = alloca i64*, align 8
  %out2.addr.i3721 = alloca i64*, align 8
  %out3.addr.i3722 = alloca i64*, align 8
  %out4.addr.i3723 = alloca i64*, align 8
  %x0C0C0C0C.i3724 = alloca i64, align 8
  %x0000F0F0.i3725 = alloca i64, align 8
  %x00FFF00F.i3726 = alloca i64, align 8
  %x00555005.i3727 = alloca i64, align 8
  %x00515001.i3728 = alloca i64, align 8
  %x33000330.i3729 = alloca i64, align 8
  %x77555775.i3730 = alloca i64, align 8
  %x30303030.i3731 = alloca i64, align 8
  %x3030CFCF.i3732 = alloca i64, align 8
  %x30104745.i3733 = alloca i64, align 8
  %x30555745.i3734 = alloca i64, align 8
  %xFF000FF0.i3735 = alloca i64, align 8
  %xCF1048B5.i3736 = alloca i64, align 8
  %x080A080A.i3737 = alloca i64, align 8
  %xC71A40BF.i3738 = alloca i64, align 8
  %xCB164CB3.i3739 = alloca i64, align 8
  %x9E4319E6.i3740 = alloca i64, align 8
  %x000019E6.i3741 = alloca i64, align 8
  %xF429738C.i3742 = alloca i64, align 8
  %xF4296A6A.i3743 = alloca i64, align 8
  %xC729695A.i3744 = alloca i64, align 8
  %xC47C3D2F.i3745 = alloca i64, align 8
  %xF77F3F3F.i3746 = alloca i64, align 8
  %x9E43E619.i3747 = alloca i64, align 8
  %x693CD926.i3748 = alloca i64, align 8
  %xF719A695.i3749 = alloca i64, align 8
  %xF4FF73FF.i3750 = alloca i64, align 8
  %x03E6D56A.i3751 = alloca i64, align 8
  %x56B3803F.i3752 = alloca i64, align 8
  %xF700A600.i3753 = alloca i64, align 8
  %x61008000.i3754 = alloca i64, align 8
  %x03B7856B.i3755 = alloca i64, align 8
  %x62B7056B.i3756 = alloca i64, align 8
  %x00.i3757 = alloca i64, align 8
  %x01.i3758 = alloca i64, align 8
  %x10.i3759 = alloca i64, align 8
  %x11.i3760 = alloca i64, align 8
  %x20.i3761 = alloca i64, align 8
  %x21.i3762 = alloca i64, align 8
  %x30.i3763 = alloca i64, align 8
  %x31.i3764 = alloca i64, align 8
  %a1.addr.i3591 = alloca i64, align 8
  %a2.addr.i3592 = alloca i64, align 8
  %a3.addr.i3593 = alloca i64, align 8
  %a4.addr.i3594 = alloca i64, align 8
  %a5.addr.i3595 = alloca i64, align 8
  %a6.addr.i3596 = alloca i64, align 8
  %out1.addr.i3597 = alloca i64*, align 8
  %out2.addr.i3598 = alloca i64*, align 8
  %out3.addr.i3599 = alloca i64*, align 8
  %out4.addr.i3600 = alloca i64*, align 8
  %x55005500.i3601 = alloca i64, align 8
  %x5A0F5A0F.i3602 = alloca i64, align 8
  %x3333FFFF.i3603 = alloca i64, align 8
  %x66666666.i3604 = alloca i64, align 8
  %x22226666.i3605 = alloca i64, align 8
  %x2D2D6969.i3606 = alloca i64, align 8
  %x25202160.i3607 = alloca i64, align 8
  %x00FFFF00.i3608 = alloca i64, align 8
  %x33CCCC33.i3609 = alloca i64, align 8
  %x4803120C.i3610 = alloca i64, align 8
  %x2222FFFF.i3611 = alloca i64, align 8
  %x6A21EDF3.i3612 = alloca i64, align 8
  %x4A01CC93.i3613 = alloca i64, align 8
  %x5555FFFF.i3614 = alloca i64, align 8
  %x7F75FFFF.i3615 = alloca i64, align 8
  %x00D20096.i3616 = alloca i64, align 8
  %x7FA7FF69.i3617 = alloca i64, align 8
  %x0A0A0000.i3618 = alloca i64, align 8
  %x0AD80096.i3619 = alloca i64, align 8
  %x00999900.i3620 = alloca i64, align 8
  %x0AD99996.i3621 = alloca i64, align 8
  %x22332233.i3622 = alloca i64, align 8
  %x257AA5F0.i3623 = alloca i64, align 8
  %x054885C0.i3624 = alloca i64, align 8
  %xFAB77A3F.i3625 = alloca i64, align 8
  %x2221EDF3.i3626 = alloca i64, align 8
  %xD89697CC.i3627 = alloca i64, align 8
  %x05B77AC0.i3628 = alloca i64, align 8
  %x05F77AD6.i3629 = alloca i64, align 8
  %x36C48529.i3630 = alloca i64, align 8
  %x6391D07C.i3631 = alloca i64, align 8
  %xBB0747B0.i3632 = alloca i64, align 8
  %x4C460000.i3633 = alloca i64, align 8
  %x4EDF9996.i3634 = alloca i64, align 8
  %x2D4E49EA.i3635 = alloca i64, align 8
  %xBBFFFFB0.i3636 = alloca i64, align 8
  %x96B1B65A.i3637 = alloca i64, align 8
  %x5AFF5AFF.i3638 = alloca i64, align 8
  %x52B11215.i3639 = alloca i64, align 8
  %x4201C010.i3640 = alloca i64, align 8
  %x10B0D205.i3641 = alloca i64, align 8
  %x00.i3642 = alloca i64, align 8
  %x01.i3643 = alloca i64, align 8
  %x10.i3644 = alloca i64, align 8
  %x11.i3645 = alloca i64, align 8
  %x20.i3646 = alloca i64, align 8
  %x21.i3647 = alloca i64, align 8
  %x30.i3648 = alloca i64, align 8
  %x31.i3649 = alloca i64, align 8
  %a1.addr.i3477 = alloca i64, align 8
  %a2.addr.i3478 = alloca i64, align 8
  %a3.addr.i3479 = alloca i64, align 8
  %a4.addr.i3480 = alloca i64, align 8
  %a5.addr.i3481 = alloca i64, align 8
  %a6.addr.i3482 = alloca i64, align 8
  %out1.addr.i3483 = alloca i64*, align 8
  %out2.addr.i3484 = alloca i64*, align 8
  %out3.addr.i3485 = alloca i64*, align 8
  %out4.addr.i3486 = alloca i64*, align 8
  %x33CC33CC.i3487 = alloca i64, align 8
  %x55550000.i3488 = alloca i64, align 8
  %x00AA00FF.i3489 = alloca i64, align 8
  %x33BB33FF.i3490 = alloca i64, align 8
  %x33CC0000.i3491 = alloca i64, align 8
  %x11441144.i3492 = alloca i64, align 8
  %x11BB11BB.i3493 = alloca i64, align 8
  %x003311BB.i3494 = alloca i64, align 8
  %x00000F0F.i3495 = alloca i64, align 8
  %x336600FF.i3496 = alloca i64, align 8
  %x332200FF.i3497 = alloca i64, align 8
  %x332200F0.i3498 = alloca i64, align 8
  %x0302000F.i3499 = alloca i64, align 8
  %xAAAAAAAA.i3500 = alloca i64, align 8
  %xA9A8AAA5.i3501 = alloca i64, align 8
  %x33CCCC33.i3502 = alloca i64, align 8
  %x33CCC030.i3503 = alloca i64, align 8
  %x9A646A95.i3504 = alloca i64, align 8
  %x00333303.i3505 = alloca i64, align 8
  %x118822B8.i3506 = alloca i64, align 8
  %xA8208805.i3507 = alloca i64, align 8
  %x3CC3C33C.i3508 = alloca i64, align 8
  %x94E34B39.i3509 = alloca i64, align 8
  %x0331330C.i3510 = alloca i64, align 8
  %x3FF3F33C.i3511 = alloca i64, align 8
  %xA9DF596A.i3512 = alloca i64, align 8
  %xA9DF5F6F.i3513 = alloca i64, align 8
  %x962CAC53.i3514 = alloca i64, align 8
  %x97D27835.i3515 = alloca i64, align 8
  %x81D25825.i3516 = alloca i64, align 8
  %x812D58DA.i3517 = alloca i64, align 8
  %x802158DA.i3518 = alloca i64, align 8
  %x1A45324F.i3519 = alloca i64, align 8
  %x0A451047.i3520 = alloca i64, align 8
  %xBBDFDD7B.i3521 = alloca i64, align 8
  %xB19ACD3C.i3522 = alloca i64, align 8
  %x00.i3523 = alloca i64, align 8
  %x01.i3524 = alloca i64, align 8
  %x10.i3525 = alloca i64, align 8
  %x11.i3526 = alloca i64, align 8
  %x20.i3527 = alloca i64, align 8
  %x21.i3528 = alloca i64, align 8
  %x30.i3529 = alloca i64, align 8
  %x31.i3530 = alloca i64, align 8
  %a1.addr.i3357 = alloca i64, align 8
  %a2.addr.i3358 = alloca i64, align 8
  %a3.addr.i3359 = alloca i64, align 8
  %a4.addr.i3360 = alloca i64, align 8
  %a5.addr.i3361 = alloca i64, align 8
  %a6.addr.i3362 = alloca i64, align 8
  %out1.addr.i3363 = alloca i64*, align 8
  %out2.addr.i3364 = alloca i64*, align 8
  %out3.addr.i3365 = alloca i64*, align 8
  %out4.addr.i3366 = alloca i64*, align 8
  %x44444444.i3367 = alloca i64, align 8
  %x0F0FF0F0.i3368 = alloca i64, align 8
  %x4F4FF4F4.i3369 = alloca i64, align 8
  %x00FFFF00.i3370 = alloca i64, align 8
  %x00AAAA00.i3371 = alloca i64, align 8
  %x4FE55EF4.i3372 = alloca i64, align 8
  %x3C3CC3C3.i3373 = alloca i64, align 8
  %x3C3C0000.i3374 = alloca i64, align 8
  %x7373F4F4.i3375 = alloca i64, align 8
  %x0C840A00.i3376 = alloca i64, align 8
  %x00005EF4.i3377 = alloca i64, align 8
  %x00FF5EFF.i3378 = alloca i64, align 8
  %x00555455.i3379 = alloca i64, align 8
  %x3C699796.i3380 = alloca i64, align 8
  %x000FF000.i3381 = alloca i64, align 8
  %x55AA55AA.i3382 = alloca i64, align 8
  %x26D9A15E.i3383 = alloca i64, align 8
  %x2FDFAF5F.i3384 = alloca i64, align 8
  %x2FD00F5F.i3385 = alloca i64, align 8
  %x55AAFFAA.i3386 = alloca i64, align 8
  %x28410014.i3387 = alloca i64, align 8
  %x000000FF.i3388 = alloca i64, align 8
  %x000000CC.i3389 = alloca i64, align 8
  %x284100D8.i3390 = alloca i64, align 8
  %x204000D0.i3391 = alloca i64, align 8
  %x3C3CC3FF.i3392 = alloca i64, align 8
  %x1C3CC32F.i3393 = alloca i64, align 8
  %x4969967A.i3394 = alloca i64, align 8
  %x4CC44CC4.i3395 = alloca i64, align 8
  %x40C040C0.i3396 = alloca i64, align 8
  %x69963C69.i3397 = alloca i64, align 8
  %x9669C396.i3398 = alloca i64, align 8
  %xD6A98356.i3399 = alloca i64, align 8
  %x000F00F0.i3400 = alloca i64, align 8
  %xFEBDC3D7.i3401 = alloca i64, align 8
  %xFEB0C307.i3402 = alloca i64, align 8
  %x4CEEEEC4.i3403 = alloca i64, align 8
  %xB25E2DC3.i3404 = alloca i64, align 8
  %x00.i3405 = alloca i64, align 8
  %x01.i3406 = alloca i64, align 8
  %x10.i3407 = alloca i64, align 8
  %x11.i3408 = alloca i64, align 8
  %x20.i3409 = alloca i64, align 8
  %x21.i3410 = alloca i64, align 8
  %x30.i3411 = alloca i64, align 8
  %x31.i3412 = alloca i64, align 8
  %a1.addr.i3268 = alloca i64, align 8
  %a2.addr.i3269 = alloca i64, align 8
  %a3.addr.i3270 = alloca i64, align 8
  %a4.addr.i3271 = alloca i64, align 8
  %a5.addr.i3272 = alloca i64, align 8
  %a6.addr.i3273 = alloca i64, align 8
  %out1.addr.i3274 = alloca i64*, align 8
  %out2.addr.i3275 = alloca i64*, align 8
  %out3.addr.i3276 = alloca i64*, align 8
  %out4.addr.i3277 = alloca i64*, align 8
  %x5A5A5A5A.i3278 = alloca i64, align 8
  %x0F0FF0F0.i3279 = alloca i64, align 8
  %x33FF33FF.i3280 = alloca i64, align 8
  %x33FFCC00.i3281 = alloca i64, align 8
  %x0C0030F0.i3282 = alloca i64, align 8
  %x0C0CC0C0.i3283 = alloca i64, align 8
  %x0CF3C03F.i3284 = alloca i64, align 8
  %x5EFBDA7F.i3285 = alloca i64, align 8
  %x52FBCA0F.i3286 = alloca i64, align 8
  %x61C8F93C.i3287 = alloca i64, align 8
  %x00C0C03C.i3288 = alloca i64, align 8
  %x0F0F30C0.i3289 = alloca i64, align 8
  %x3B92A366.i3290 = alloca i64, align 8
  %x30908326.i3291 = alloca i64, align 8
  %x3C90B3D6.i3292 = alloca i64, align 8
  %x33CC33CC.i3293 = alloca i64, align 8
  %x0C0CFFFF.i3294 = alloca i64, align 8
  %x379E5C99.i3295 = alloca i64, align 8
  %x04124C11.i3296 = alloca i64, align 8
  %x56E9861E.i3297 = alloca i64, align 8
  %xA91679E1.i3298 = alloca i64, align 8
  %x9586CA37.i3299 = alloca i64, align 8
  %x8402C833.i3300 = alloca i64, align 8
  %x84C2C83F.i3301 = alloca i64, align 8
  %xB35C94A6.i3302 = alloca i64, align 8
  %x00.i3303 = alloca i64, align 8
  %x01.i3304 = alloca i64, align 8
  %x10.i3305 = alloca i64, align 8
  %x11.i3306 = alloca i64, align 8
  %x20.i3307 = alloca i64, align 8
  %x21.i3308 = alloca i64, align 8
  %x30.i3309 = alloca i64, align 8
  %x31.i3310 = alloca i64, align 8
  %a1.addr.i3149 = alloca i64, align 8
  %a2.addr.i3150 = alloca i64, align 8
  %a3.addr.i3151 = alloca i64, align 8
  %a4.addr.i3152 = alloca i64, align 8
  %a5.addr.i3153 = alloca i64, align 8
  %a6.addr.i3154 = alloca i64, align 8
  %out1.addr.i3155 = alloca i64*, align 8
  %out2.addr.i3156 = alloca i64*, align 8
  %out3.addr.i3157 = alloca i64*, align 8
  %out4.addr.i3158 = alloca i64*, align 8
  %x77777777.i3159 = alloca i64, align 8
  %x77770000.i3160 = alloca i64, align 8
  %x22225555.i3161 = alloca i64, align 8
  %x11116666.i3162 = alloca i64, align 8
  %x1F1F6F6F.i3163 = alloca i64, align 8
  %x70700000.i3164 = alloca i64, align 8
  %x43433333.i3165 = alloca i64, align 8
  %x00430033.i3166 = alloca i64, align 8
  %x55557777.i3167 = alloca i64, align 8
  %x55167744.i3168 = alloca i64, align 8
  %x5A19784B.i3169 = alloca i64, align 8
  %x5A1987B4.i3170 = alloca i64, align 8
  %x7A3BD7F5.i3171 = alloca i64, align 8
  %x003B00F5.i3172 = alloca i64, align 8
  %x221955A0.i3173 = alloca i64, align 8
  %x05050707.i3174 = alloca i64, align 8
  %x271C52A7.i3175 = alloca i64, align 8
  %x2A2A82A0.i3176 = alloca i64, align 8
  %x6969B193.i3177 = alloca i64, align 8
  %x1FE06F90.i3178 = alloca i64, align 8
  %x16804E00.i3179 = alloca i64, align 8
  %xE97FB1FF.i3180 = alloca i64, align 8
  %x43403302.i3181 = alloca i64, align 8
  %x35CAED30.i3182 = alloca i64, align 8
  %x37DEFFB7.i3183 = alloca i64, align 8
  %x349ECCB5.i3184 = alloca i64, align 8
  %x0B01234A.i3185 = alloca i64, align 8
  %x101884B4.i3186 = alloca i64, align 8
  %x0FF8EB24.i3187 = alloca i64, align 8
  %x41413333.i3188 = alloca i64, align 8
  %x4FF9FB37.i3189 = alloca i64, align 8
  %x4FC2FBC2.i3190 = alloca i64, align 8
  %x22222222.i3191 = alloca i64, align 8
  %x16BCEE97.i3192 = alloca i64, align 8
  %x0F080B04.i3193 = alloca i64, align 8
  %x19B4E593.i3194 = alloca i64, align 8
  %x5C5C5C5C.i3195 = alloca i64, align 8
  %x4448184C.i3196 = alloca i64, align 8
  %x2DDABE71.i3197 = alloca i64, align 8
  %x6992A63D.i3198 = alloca i64, align 8
  %x00.i3199 = alloca i64, align 8
  %x01.i3200 = alloca i64, align 8
  %x10.i3201 = alloca i64, align 8
  %x11.i3202 = alloca i64, align 8
  %x20.i3203 = alloca i64, align 8
  %x21.i3204 = alloca i64, align 8
  %x30.i3205 = alloca i64, align 8
  %x31.i3206 = alloca i64, align 8
  %a1.addr.i3035 = alloca i64, align 8
  %a2.addr.i3036 = alloca i64, align 8
  %a3.addr.i3037 = alloca i64, align 8
  %a4.addr.i3038 = alloca i64, align 8
  %a5.addr.i3039 = alloca i64, align 8
  %a6.addr.i3040 = alloca i64, align 8
  %out1.addr.i3041 = alloca i64*, align 8
  %out2.addr.i3042 = alloca i64*, align 8
  %out3.addr.i3043 = alloca i64*, align 8
  %out4.addr.i3044 = alloca i64*, align 8
  %x33CC33CC.i3045 = alloca i64, align 8
  %x3333FFFF.i3046 = alloca i64, align 8
  %x11115555.i3047 = alloca i64, align 8
  %x22DD6699.i3048 = alloca i64, align 8
  %x22DD9966.i3049 = alloca i64, align 8
  %x00220099.i3050 = alloca i64, align 8
  %x00551144.i3051 = alloca i64, align 8
  %x33662277.i3052 = alloca i64, align 8
  %x5A5A5A5A.i3053 = alloca i64, align 8
  %x7B7E7A7F.i3054 = alloca i64, align 8
  %x59A31CE6.i3055 = alloca i64, align 8
  %x09030C06.i3056 = alloca i64, align 8
  %x09030000.i3057 = alloca i64, align 8
  %x336622FF.i3058 = alloca i64, align 8
  %x3A6522FF.i3059 = alloca i64, align 8
  %x484D494C.i3060 = alloca i64, align 8
  %x0000B6B3.i3061 = alloca i64, align 8
  %x0F0FB9BC.i3062 = alloca i64, align 8
  %x00FC00F9.i3063 = alloca i64, align 8
  %x0FFFB9FD.i3064 = alloca i64, align 8
  %x5DF75DF7.i3065 = alloca i64, align 8
  %x116600F7.i3066 = alloca i64, align 8
  %x1E69B94B.i3067 = alloca i64, align 8
  %x1668B94B.i3068 = alloca i64, align 8
  %x7B7B7B7B.i3069 = alloca i64, align 8
  %x411E5984.i3070 = alloca i64, align 8
  %x1FFFFDFD.i3071 = alloca i64, align 8
  %x5EE1A479.i3072 = alloca i64, align 8
  %x3CB4DFD2.i3073 = alloca i64, align 8
  %x004B002D.i3074 = alloca i64, align 8
  %xB7B2B6B3.i3075 = alloca i64, align 8
  %xCCC9CDC8.i3076 = alloca i64, align 8
  %xCC82CDE5.i3077 = alloca i64, align 8
  %x0055EEBB.i3078 = alloca i64, align 8
  %x5A5AECE9.i3079 = alloca i64, align 8
  %x0050ECA9.i3080 = alloca i64, align 8
  %xC5CAC1CE.i3081 = alloca i64, align 8
  %xC59A2D67.i3082 = alloca i64, align 8
  %x00.i3083 = alloca i64, align 8
  %x01.i3084 = alloca i64, align 8
  %x10.i3085 = alloca i64, align 8
  %x11.i3086 = alloca i64, align 8
  %x20.i3087 = alloca i64, align 8
  %x21.i3088 = alloca i64, align 8
  %x30.i3089 = alloca i64, align 8
  %x31.i3090 = alloca i64, align 8
  %a1.addr.i2922 = alloca i64, align 8
  %a2.addr.i2923 = alloca i64, align 8
  %a3.addr.i2924 = alloca i64, align 8
  %a4.addr.i2925 = alloca i64, align 8
  %a5.addr.i2926 = alloca i64, align 8
  %a6.addr.i2927 = alloca i64, align 8
  %out1.addr.i2928 = alloca i64*, align 8
  %out2.addr.i2929 = alloca i64*, align 8
  %out3.addr.i2930 = alloca i64*, align 8
  %out4.addr.i2931 = alloca i64*, align 8
  %x0FF00FF0.i2932 = alloca i64, align 8
  %x3CC33CC3.i2933 = alloca i64, align 8
  %x00003CC3.i2934 = alloca i64, align 8
  %x0F000F00.i2935 = alloca i64, align 8
  %x5A555A55.i2936 = alloca i64, align 8
  %x00001841.i2937 = alloca i64, align 8
  %x00000F00.i2938 = alloca i64, align 8
  %x33333C33.i2939 = alloca i64, align 8
  %x7B777E77.i2940 = alloca i64, align 8
  %x0FF0F00F.i2941 = alloca i64, align 8
  %x74878E78.i2942 = alloca i64, align 8
  %x003C003C.i2943 = alloca i64, align 8
  %x5A7D5A7D.i2944 = alloca i64, align 8
  %x333300F0.i2945 = alloca i64, align 8
  %x694E5A8D.i2946 = alloca i64, align 8
  %x0FF0CCCC.i2947 = alloca i64, align 8
  %x000F0303.i2948 = alloca i64, align 8
  %x5A505854.i2949 = alloca i64, align 8
  %x33CC000F.i2950 = alloca i64, align 8
  %x699C585B.i2951 = alloca i64, align 8
  %x7F878F78.i2952 = alloca i64, align 8
  %x21101013.i2953 = alloca i64, align 8
  %x7F979F7B.i2954 = alloca i64, align 8
  %x30030CC0.i2955 = alloca i64, align 8
  %x4F9493BB.i2956 = alloca i64, align 8
  %x6F9CDBFB.i2957 = alloca i64, align 8
  %x0000DBFB.i2958 = alloca i64, align 8
  %x00005151.i2959 = alloca i64, align 8
  %x26DAC936.i2960 = alloca i64, align 8
  %x26DA9867.i2961 = alloca i64, align 8
  %x21FF10FF.i2962 = alloca i64, align 8
  %x21FFCB04.i2963 = alloca i64, align 8
  %x2625C9C9.i2964 = alloca i64, align 8
  %x27FFCBCD.i2965 = alloca i64, align 8
  %x27FF1036.i2966 = alloca i64, align 8
  %x27FF103E.i2967 = alloca i64, align 8
  %xB06B6C44.i2968 = alloca i64, align 8
  %x97947C7A.i2969 = alloca i64, align 8
  %x00.i2970 = alloca i64, align 8
  %x01.i2971 = alloca i64, align 8
  %x10.i2972 = alloca i64, align 8
  %x11.i2973 = alloca i64, align 8
  %x20.i2974 = alloca i64, align 8
  %x21.i2975 = alloca i64, align 8
  %x30.i2976 = alloca i64, align 8
  %x31.i2977 = alloca i64, align 8
  %a1.addr.i2819 = alloca i64, align 8
  %a2.addr.i2820 = alloca i64, align 8
  %a3.addr.i2821 = alloca i64, align 8
  %a4.addr.i2822 = alloca i64, align 8
  %a5.addr.i2823 = alloca i64, align 8
  %a6.addr.i2824 = alloca i64, align 8
  %out1.addr.i2825 = alloca i64*, align 8
  %out2.addr.i2826 = alloca i64*, align 8
  %out3.addr.i2827 = alloca i64*, align 8
  %out4.addr.i2828 = alloca i64*, align 8
  %x0C0C0C0C.i2829 = alloca i64, align 8
  %x0000F0F0.i2830 = alloca i64, align 8
  %x00FFF00F.i2831 = alloca i64, align 8
  %x00555005.i2832 = alloca i64, align 8
  %x00515001.i2833 = alloca i64, align 8
  %x33000330.i2834 = alloca i64, align 8
  %x77555775.i2835 = alloca i64, align 8
  %x30303030.i2836 = alloca i64, align 8
  %x3030CFCF.i2837 = alloca i64, align 8
  %x30104745.i2838 = alloca i64, align 8
  %x30555745.i2839 = alloca i64, align 8
  %xFF000FF0.i2840 = alloca i64, align 8
  %xCF1048B5.i2841 = alloca i64, align 8
  %x080A080A.i2842 = alloca i64, align 8
  %xC71A40BF.i2843 = alloca i64, align 8
  %xCB164CB3.i2844 = alloca i64, align 8
  %x9E4319E6.i2845 = alloca i64, align 8
  %x000019E6.i2846 = alloca i64, align 8
  %xF429738C.i2847 = alloca i64, align 8
  %xF4296A6A.i2848 = alloca i64, align 8
  %xC729695A.i2849 = alloca i64, align 8
  %xC47C3D2F.i2850 = alloca i64, align 8
  %xF77F3F3F.i2851 = alloca i64, align 8
  %x9E43E619.i2852 = alloca i64, align 8
  %x693CD926.i2853 = alloca i64, align 8
  %xF719A695.i2854 = alloca i64, align 8
  %xF4FF73FF.i2855 = alloca i64, align 8
  %x03E6D56A.i2856 = alloca i64, align 8
  %x56B3803F.i2857 = alloca i64, align 8
  %xF700A600.i2858 = alloca i64, align 8
  %x61008000.i2859 = alloca i64, align 8
  %x03B7856B.i2860 = alloca i64, align 8
  %x62B7056B.i2861 = alloca i64, align 8
  %x00.i2862 = alloca i64, align 8
  %x01.i2863 = alloca i64, align 8
  %x10.i2864 = alloca i64, align 8
  %x11.i2865 = alloca i64, align 8
  %x20.i2866 = alloca i64, align 8
  %x21.i2867 = alloca i64, align 8
  %x30.i2868 = alloca i64, align 8
  %x31.i2869 = alloca i64, align 8
  %a1.addr.i2696 = alloca i64, align 8
  %a2.addr.i2697 = alloca i64, align 8
  %a3.addr.i2698 = alloca i64, align 8
  %a4.addr.i2699 = alloca i64, align 8
  %a5.addr.i2700 = alloca i64, align 8
  %a6.addr.i2701 = alloca i64, align 8
  %out1.addr.i2702 = alloca i64*, align 8
  %out2.addr.i2703 = alloca i64*, align 8
  %out3.addr.i2704 = alloca i64*, align 8
  %out4.addr.i2705 = alloca i64*, align 8
  %x55005500.i2706 = alloca i64, align 8
  %x5A0F5A0F.i2707 = alloca i64, align 8
  %x3333FFFF.i2708 = alloca i64, align 8
  %x66666666.i2709 = alloca i64, align 8
  %x22226666.i2710 = alloca i64, align 8
  %x2D2D6969.i2711 = alloca i64, align 8
  %x25202160.i2712 = alloca i64, align 8
  %x00FFFF00.i2713 = alloca i64, align 8
  %x33CCCC33.i2714 = alloca i64, align 8
  %x4803120C.i2715 = alloca i64, align 8
  %x2222FFFF.i2716 = alloca i64, align 8
  %x6A21EDF3.i2717 = alloca i64, align 8
  %x4A01CC93.i2718 = alloca i64, align 8
  %x5555FFFF.i2719 = alloca i64, align 8
  %x7F75FFFF.i2720 = alloca i64, align 8
  %x00D20096.i2721 = alloca i64, align 8
  %x7FA7FF69.i2722 = alloca i64, align 8
  %x0A0A0000.i2723 = alloca i64, align 8
  %x0AD80096.i2724 = alloca i64, align 8
  %x00999900.i2725 = alloca i64, align 8
  %x0AD99996.i2726 = alloca i64, align 8
  %x22332233.i2727 = alloca i64, align 8
  %x257AA5F0.i2728 = alloca i64, align 8
  %x054885C0.i2729 = alloca i64, align 8
  %xFAB77A3F.i2730 = alloca i64, align 8
  %x2221EDF3.i2731 = alloca i64, align 8
  %xD89697CC.i2732 = alloca i64, align 8
  %x05B77AC0.i2733 = alloca i64, align 8
  %x05F77AD6.i2734 = alloca i64, align 8
  %x36C48529.i2735 = alloca i64, align 8
  %x6391D07C.i2736 = alloca i64, align 8
  %xBB0747B0.i2737 = alloca i64, align 8
  %x4C460000.i2738 = alloca i64, align 8
  %x4EDF9996.i2739 = alloca i64, align 8
  %x2D4E49EA.i2740 = alloca i64, align 8
  %xBBFFFFB0.i2741 = alloca i64, align 8
  %x96B1B65A.i2742 = alloca i64, align 8
  %x5AFF5AFF.i2743 = alloca i64, align 8
  %x52B11215.i2744 = alloca i64, align 8
  %x4201C010.i2745 = alloca i64, align 8
  %x10B0D205.i2746 = alloca i64, align 8
  %x00.i2747 = alloca i64, align 8
  %x01.i2748 = alloca i64, align 8
  %x10.i2749 = alloca i64, align 8
  %x11.i2750 = alloca i64, align 8
  %x20.i2751 = alloca i64, align 8
  %x21.i2752 = alloca i64, align 8
  %x30.i2753 = alloca i64, align 8
  %x31.i2754 = alloca i64, align 8
  %a1.addr.i2582 = alloca i64, align 8
  %a2.addr.i2583 = alloca i64, align 8
  %a3.addr.i2584 = alloca i64, align 8
  %a4.addr.i2585 = alloca i64, align 8
  %a5.addr.i2586 = alloca i64, align 8
  %a6.addr.i2587 = alloca i64, align 8
  %out1.addr.i2588 = alloca i64*, align 8
  %out2.addr.i2589 = alloca i64*, align 8
  %out3.addr.i2590 = alloca i64*, align 8
  %out4.addr.i2591 = alloca i64*, align 8
  %x33CC33CC.i2592 = alloca i64, align 8
  %x55550000.i2593 = alloca i64, align 8
  %x00AA00FF.i2594 = alloca i64, align 8
  %x33BB33FF.i2595 = alloca i64, align 8
  %x33CC0000.i2596 = alloca i64, align 8
  %x11441144.i2597 = alloca i64, align 8
  %x11BB11BB.i2598 = alloca i64, align 8
  %x003311BB.i2599 = alloca i64, align 8
  %x00000F0F.i2600 = alloca i64, align 8
  %x336600FF.i2601 = alloca i64, align 8
  %x332200FF.i2602 = alloca i64, align 8
  %x332200F0.i2603 = alloca i64, align 8
  %x0302000F.i2604 = alloca i64, align 8
  %xAAAAAAAA.i2605 = alloca i64, align 8
  %xA9A8AAA5.i2606 = alloca i64, align 8
  %x33CCCC33.i2607 = alloca i64, align 8
  %x33CCC030.i2608 = alloca i64, align 8
  %x9A646A95.i2609 = alloca i64, align 8
  %x00333303.i2610 = alloca i64, align 8
  %x118822B8.i2611 = alloca i64, align 8
  %xA8208805.i2612 = alloca i64, align 8
  %x3CC3C33C.i2613 = alloca i64, align 8
  %x94E34B39.i2614 = alloca i64, align 8
  %x0331330C.i2615 = alloca i64, align 8
  %x3FF3F33C.i2616 = alloca i64, align 8
  %xA9DF596A.i2617 = alloca i64, align 8
  %xA9DF5F6F.i2618 = alloca i64, align 8
  %x962CAC53.i2619 = alloca i64, align 8
  %x97D27835.i2620 = alloca i64, align 8
  %x81D25825.i2621 = alloca i64, align 8
  %x812D58DA.i2622 = alloca i64, align 8
  %x802158DA.i2623 = alloca i64, align 8
  %x1A45324F.i2624 = alloca i64, align 8
  %x0A451047.i2625 = alloca i64, align 8
  %xBBDFDD7B.i2626 = alloca i64, align 8
  %xB19ACD3C.i2627 = alloca i64, align 8
  %x00.i2628 = alloca i64, align 8
  %x01.i2629 = alloca i64, align 8
  %x10.i2630 = alloca i64, align 8
  %x11.i2631 = alloca i64, align 8
  %x20.i2632 = alloca i64, align 8
  %x21.i2633 = alloca i64, align 8
  %x30.i2634 = alloca i64, align 8
  %x31.i2635 = alloca i64, align 8
  %a1.addr.i2462 = alloca i64, align 8
  %a2.addr.i2463 = alloca i64, align 8
  %a3.addr.i2464 = alloca i64, align 8
  %a4.addr.i2465 = alloca i64, align 8
  %a5.addr.i2466 = alloca i64, align 8
  %a6.addr.i2467 = alloca i64, align 8
  %out1.addr.i2468 = alloca i64*, align 8
  %out2.addr.i2469 = alloca i64*, align 8
  %out3.addr.i2470 = alloca i64*, align 8
  %out4.addr.i2471 = alloca i64*, align 8
  %x44444444.i2472 = alloca i64, align 8
  %x0F0FF0F0.i2473 = alloca i64, align 8
  %x4F4FF4F4.i2474 = alloca i64, align 8
  %x00FFFF00.i2475 = alloca i64, align 8
  %x00AAAA00.i2476 = alloca i64, align 8
  %x4FE55EF4.i2477 = alloca i64, align 8
  %x3C3CC3C3.i2478 = alloca i64, align 8
  %x3C3C0000.i2479 = alloca i64, align 8
  %x7373F4F4.i2480 = alloca i64, align 8
  %x0C840A00.i2481 = alloca i64, align 8
  %x00005EF4.i2482 = alloca i64, align 8
  %x00FF5EFF.i2483 = alloca i64, align 8
  %x00555455.i2484 = alloca i64, align 8
  %x3C699796.i2485 = alloca i64, align 8
  %x000FF000.i2486 = alloca i64, align 8
  %x55AA55AA.i2487 = alloca i64, align 8
  %x26D9A15E.i2488 = alloca i64, align 8
  %x2FDFAF5F.i2489 = alloca i64, align 8
  %x2FD00F5F.i2490 = alloca i64, align 8
  %x55AAFFAA.i2491 = alloca i64, align 8
  %x28410014.i2492 = alloca i64, align 8
  %x000000FF.i2493 = alloca i64, align 8
  %x000000CC.i2494 = alloca i64, align 8
  %x284100D8.i2495 = alloca i64, align 8
  %x204000D0.i2496 = alloca i64, align 8
  %x3C3CC3FF.i2497 = alloca i64, align 8
  %x1C3CC32F.i2498 = alloca i64, align 8
  %x4969967A.i2499 = alloca i64, align 8
  %x4CC44CC4.i2500 = alloca i64, align 8
  %x40C040C0.i2501 = alloca i64, align 8
  %x69963C69.i2502 = alloca i64, align 8
  %x9669C396.i2503 = alloca i64, align 8
  %xD6A98356.i2504 = alloca i64, align 8
  %x000F00F0.i2505 = alloca i64, align 8
  %xFEBDC3D7.i2506 = alloca i64, align 8
  %xFEB0C307.i2507 = alloca i64, align 8
  %x4CEEEEC4.i2508 = alloca i64, align 8
  %xB25E2DC3.i2509 = alloca i64, align 8
  %x00.i2510 = alloca i64, align 8
  %x01.i2511 = alloca i64, align 8
  %x10.i2512 = alloca i64, align 8
  %x11.i2513 = alloca i64, align 8
  %x20.i2514 = alloca i64, align 8
  %x21.i2515 = alloca i64, align 8
  %x30.i2516 = alloca i64, align 8
  %x31.i2517 = alloca i64, align 8
  %a1.addr.i2373 = alloca i64, align 8
  %a2.addr.i2374 = alloca i64, align 8
  %a3.addr.i2375 = alloca i64, align 8
  %a4.addr.i2376 = alloca i64, align 8
  %a5.addr.i2377 = alloca i64, align 8
  %a6.addr.i2378 = alloca i64, align 8
  %out1.addr.i2379 = alloca i64*, align 8
  %out2.addr.i2380 = alloca i64*, align 8
  %out3.addr.i2381 = alloca i64*, align 8
  %out4.addr.i2382 = alloca i64*, align 8
  %x5A5A5A5A.i2383 = alloca i64, align 8
  %x0F0FF0F0.i2384 = alloca i64, align 8
  %x33FF33FF.i2385 = alloca i64, align 8
  %x33FFCC00.i2386 = alloca i64, align 8
  %x0C0030F0.i2387 = alloca i64, align 8
  %x0C0CC0C0.i2388 = alloca i64, align 8
  %x0CF3C03F.i2389 = alloca i64, align 8
  %x5EFBDA7F.i2390 = alloca i64, align 8
  %x52FBCA0F.i2391 = alloca i64, align 8
  %x61C8F93C.i2392 = alloca i64, align 8
  %x00C0C03C.i2393 = alloca i64, align 8
  %x0F0F30C0.i2394 = alloca i64, align 8
  %x3B92A366.i2395 = alloca i64, align 8
  %x30908326.i2396 = alloca i64, align 8
  %x3C90B3D6.i2397 = alloca i64, align 8
  %x33CC33CC.i2398 = alloca i64, align 8
  %x0C0CFFFF.i2399 = alloca i64, align 8
  %x379E5C99.i2400 = alloca i64, align 8
  %x04124C11.i2401 = alloca i64, align 8
  %x56E9861E.i2402 = alloca i64, align 8
  %xA91679E1.i2403 = alloca i64, align 8
  %x9586CA37.i2404 = alloca i64, align 8
  %x8402C833.i2405 = alloca i64, align 8
  %x84C2C83F.i2406 = alloca i64, align 8
  %xB35C94A6.i2407 = alloca i64, align 8
  %x00.i2408 = alloca i64, align 8
  %x01.i2409 = alloca i64, align 8
  %x10.i2410 = alloca i64, align 8
  %x11.i2411 = alloca i64, align 8
  %x20.i2412 = alloca i64, align 8
  %x21.i2413 = alloca i64, align 8
  %x30.i2414 = alloca i64, align 8
  %x31.i2415 = alloca i64, align 8
  %a1.addr.i2254 = alloca i64, align 8
  %a2.addr.i2255 = alloca i64, align 8
  %a3.addr.i2256 = alloca i64, align 8
  %a4.addr.i2257 = alloca i64, align 8
  %a5.addr.i2258 = alloca i64, align 8
  %a6.addr.i2259 = alloca i64, align 8
  %out1.addr.i2260 = alloca i64*, align 8
  %out2.addr.i2261 = alloca i64*, align 8
  %out3.addr.i2262 = alloca i64*, align 8
  %out4.addr.i2263 = alloca i64*, align 8
  %x77777777.i2264 = alloca i64, align 8
  %x77770000.i2265 = alloca i64, align 8
  %x22225555.i2266 = alloca i64, align 8
  %x11116666.i2267 = alloca i64, align 8
  %x1F1F6F6F.i2268 = alloca i64, align 8
  %x70700000.i2269 = alloca i64, align 8
  %x43433333.i2270 = alloca i64, align 8
  %x00430033.i2271 = alloca i64, align 8
  %x55557777.i2272 = alloca i64, align 8
  %x55167744.i2273 = alloca i64, align 8
  %x5A19784B.i2274 = alloca i64, align 8
  %x5A1987B4.i2275 = alloca i64, align 8
  %x7A3BD7F5.i2276 = alloca i64, align 8
  %x003B00F5.i2277 = alloca i64, align 8
  %x221955A0.i2278 = alloca i64, align 8
  %x05050707.i2279 = alloca i64, align 8
  %x271C52A7.i2280 = alloca i64, align 8
  %x2A2A82A0.i2281 = alloca i64, align 8
  %x6969B193.i2282 = alloca i64, align 8
  %x1FE06F90.i2283 = alloca i64, align 8
  %x16804E00.i2284 = alloca i64, align 8
  %xE97FB1FF.i2285 = alloca i64, align 8
  %x43403302.i2286 = alloca i64, align 8
  %x35CAED30.i2287 = alloca i64, align 8
  %x37DEFFB7.i2288 = alloca i64, align 8
  %x349ECCB5.i2289 = alloca i64, align 8
  %x0B01234A.i2290 = alloca i64, align 8
  %x101884B4.i2291 = alloca i64, align 8
  %x0FF8EB24.i2292 = alloca i64, align 8
  %x41413333.i2293 = alloca i64, align 8
  %x4FF9FB37.i2294 = alloca i64, align 8
  %x4FC2FBC2.i2295 = alloca i64, align 8
  %x22222222.i2296 = alloca i64, align 8
  %x16BCEE97.i2297 = alloca i64, align 8
  %x0F080B04.i2298 = alloca i64, align 8
  %x19B4E593.i2299 = alloca i64, align 8
  %x5C5C5C5C.i2300 = alloca i64, align 8
  %x4448184C.i2301 = alloca i64, align 8
  %x2DDABE71.i2302 = alloca i64, align 8
  %x6992A63D.i2303 = alloca i64, align 8
  %x00.i2304 = alloca i64, align 8
  %x01.i2305 = alloca i64, align 8
  %x10.i2306 = alloca i64, align 8
  %x11.i2307 = alloca i64, align 8
  %x20.i2308 = alloca i64, align 8
  %x21.i2309 = alloca i64, align 8
  %x30.i2310 = alloca i64, align 8
  %x31.i2311 = alloca i64, align 8
  %a1.addr.i2140 = alloca i64, align 8
  %a2.addr.i2141 = alloca i64, align 8
  %a3.addr.i2142 = alloca i64, align 8
  %a4.addr.i2143 = alloca i64, align 8
  %a5.addr.i2144 = alloca i64, align 8
  %a6.addr.i2145 = alloca i64, align 8
  %out1.addr.i2146 = alloca i64*, align 8
  %out2.addr.i2147 = alloca i64*, align 8
  %out3.addr.i2148 = alloca i64*, align 8
  %out4.addr.i2149 = alloca i64*, align 8
  %x33CC33CC.i2150 = alloca i64, align 8
  %x3333FFFF.i2151 = alloca i64, align 8
  %x11115555.i2152 = alloca i64, align 8
  %x22DD6699.i2153 = alloca i64, align 8
  %x22DD9966.i2154 = alloca i64, align 8
  %x00220099.i2155 = alloca i64, align 8
  %x00551144.i2156 = alloca i64, align 8
  %x33662277.i2157 = alloca i64, align 8
  %x5A5A5A5A.i2158 = alloca i64, align 8
  %x7B7E7A7F.i2159 = alloca i64, align 8
  %x59A31CE6.i2160 = alloca i64, align 8
  %x09030C06.i2161 = alloca i64, align 8
  %x09030000.i2162 = alloca i64, align 8
  %x336622FF.i2163 = alloca i64, align 8
  %x3A6522FF.i2164 = alloca i64, align 8
  %x484D494C.i2165 = alloca i64, align 8
  %x0000B6B3.i2166 = alloca i64, align 8
  %x0F0FB9BC.i2167 = alloca i64, align 8
  %x00FC00F9.i2168 = alloca i64, align 8
  %x0FFFB9FD.i2169 = alloca i64, align 8
  %x5DF75DF7.i2170 = alloca i64, align 8
  %x116600F7.i2171 = alloca i64, align 8
  %x1E69B94B.i2172 = alloca i64, align 8
  %x1668B94B.i2173 = alloca i64, align 8
  %x7B7B7B7B.i2174 = alloca i64, align 8
  %x411E5984.i2175 = alloca i64, align 8
  %x1FFFFDFD.i2176 = alloca i64, align 8
  %x5EE1A479.i2177 = alloca i64, align 8
  %x3CB4DFD2.i2178 = alloca i64, align 8
  %x004B002D.i2179 = alloca i64, align 8
  %xB7B2B6B3.i2180 = alloca i64, align 8
  %xCCC9CDC8.i2181 = alloca i64, align 8
  %xCC82CDE5.i2182 = alloca i64, align 8
  %x0055EEBB.i2183 = alloca i64, align 8
  %x5A5AECE9.i2184 = alloca i64, align 8
  %x0050ECA9.i2185 = alloca i64, align 8
  %xC5CAC1CE.i2186 = alloca i64, align 8
  %xC59A2D67.i2187 = alloca i64, align 8
  %x00.i2188 = alloca i64, align 8
  %x01.i2189 = alloca i64, align 8
  %x10.i2190 = alloca i64, align 8
  %x11.i2191 = alloca i64, align 8
  %x20.i2192 = alloca i64, align 8
  %x21.i2193 = alloca i64, align 8
  %x30.i2194 = alloca i64, align 8
  %x31.i2195 = alloca i64, align 8
  %a1.addr.i2027 = alloca i64, align 8
  %a2.addr.i2028 = alloca i64, align 8
  %a3.addr.i2029 = alloca i64, align 8
  %a4.addr.i2030 = alloca i64, align 8
  %a5.addr.i2031 = alloca i64, align 8
  %a6.addr.i2032 = alloca i64, align 8
  %out1.addr.i2033 = alloca i64*, align 8
  %out2.addr.i2034 = alloca i64*, align 8
  %out3.addr.i2035 = alloca i64*, align 8
  %out4.addr.i2036 = alloca i64*, align 8
  %x0FF00FF0.i2037 = alloca i64, align 8
  %x3CC33CC3.i2038 = alloca i64, align 8
  %x00003CC3.i2039 = alloca i64, align 8
  %x0F000F00.i2040 = alloca i64, align 8
  %x5A555A55.i2041 = alloca i64, align 8
  %x00001841.i2042 = alloca i64, align 8
  %x00000F00.i2043 = alloca i64, align 8
  %x33333C33.i2044 = alloca i64, align 8
  %x7B777E77.i2045 = alloca i64, align 8
  %x0FF0F00F.i2046 = alloca i64, align 8
  %x74878E78.i2047 = alloca i64, align 8
  %x003C003C.i2048 = alloca i64, align 8
  %x5A7D5A7D.i2049 = alloca i64, align 8
  %x333300F0.i2050 = alloca i64, align 8
  %x694E5A8D.i2051 = alloca i64, align 8
  %x0FF0CCCC.i2052 = alloca i64, align 8
  %x000F0303.i2053 = alloca i64, align 8
  %x5A505854.i2054 = alloca i64, align 8
  %x33CC000F.i2055 = alloca i64, align 8
  %x699C585B.i2056 = alloca i64, align 8
  %x7F878F78.i2057 = alloca i64, align 8
  %x21101013.i2058 = alloca i64, align 8
  %x7F979F7B.i2059 = alloca i64, align 8
  %x30030CC0.i2060 = alloca i64, align 8
  %x4F9493BB.i2061 = alloca i64, align 8
  %x6F9CDBFB.i2062 = alloca i64, align 8
  %x0000DBFB.i2063 = alloca i64, align 8
  %x00005151.i2064 = alloca i64, align 8
  %x26DAC936.i2065 = alloca i64, align 8
  %x26DA9867.i2066 = alloca i64, align 8
  %x21FF10FF.i2067 = alloca i64, align 8
  %x21FFCB04.i2068 = alloca i64, align 8
  %x2625C9C9.i2069 = alloca i64, align 8
  %x27FFCBCD.i2070 = alloca i64, align 8
  %x27FF1036.i2071 = alloca i64, align 8
  %x27FF103E.i2072 = alloca i64, align 8
  %xB06B6C44.i2073 = alloca i64, align 8
  %x97947C7A.i2074 = alloca i64, align 8
  %x00.i2075 = alloca i64, align 8
  %x01.i2076 = alloca i64, align 8
  %x10.i2077 = alloca i64, align 8
  %x11.i2078 = alloca i64, align 8
  %x20.i2079 = alloca i64, align 8
  %x21.i2080 = alloca i64, align 8
  %x30.i2081 = alloca i64, align 8
  %x31.i2082 = alloca i64, align 8
  %a1.addr.i1924 = alloca i64, align 8
  %a2.addr.i1925 = alloca i64, align 8
  %a3.addr.i1926 = alloca i64, align 8
  %a4.addr.i1927 = alloca i64, align 8
  %a5.addr.i1928 = alloca i64, align 8
  %a6.addr.i1929 = alloca i64, align 8
  %out1.addr.i1930 = alloca i64*, align 8
  %out2.addr.i1931 = alloca i64*, align 8
  %out3.addr.i1932 = alloca i64*, align 8
  %out4.addr.i1933 = alloca i64*, align 8
  %x0C0C0C0C.i1934 = alloca i64, align 8
  %x0000F0F0.i1935 = alloca i64, align 8
  %x00FFF00F.i1936 = alloca i64, align 8
  %x00555005.i1937 = alloca i64, align 8
  %x00515001.i1938 = alloca i64, align 8
  %x33000330.i1939 = alloca i64, align 8
  %x77555775.i1940 = alloca i64, align 8
  %x30303030.i1941 = alloca i64, align 8
  %x3030CFCF.i1942 = alloca i64, align 8
  %x30104745.i1943 = alloca i64, align 8
  %x30555745.i1944 = alloca i64, align 8
  %xFF000FF0.i1945 = alloca i64, align 8
  %xCF1048B5.i1946 = alloca i64, align 8
  %x080A080A.i1947 = alloca i64, align 8
  %xC71A40BF.i1948 = alloca i64, align 8
  %xCB164CB3.i1949 = alloca i64, align 8
  %x9E4319E6.i1950 = alloca i64, align 8
  %x000019E6.i1951 = alloca i64, align 8
  %xF429738C.i1952 = alloca i64, align 8
  %xF4296A6A.i1953 = alloca i64, align 8
  %xC729695A.i1954 = alloca i64, align 8
  %xC47C3D2F.i1955 = alloca i64, align 8
  %xF77F3F3F.i1956 = alloca i64, align 8
  %x9E43E619.i1957 = alloca i64, align 8
  %x693CD926.i1958 = alloca i64, align 8
  %xF719A695.i1959 = alloca i64, align 8
  %xF4FF73FF.i1960 = alloca i64, align 8
  %x03E6D56A.i1961 = alloca i64, align 8
  %x56B3803F.i1962 = alloca i64, align 8
  %xF700A600.i1963 = alloca i64, align 8
  %x61008000.i1964 = alloca i64, align 8
  %x03B7856B.i1965 = alloca i64, align 8
  %x62B7056B.i1966 = alloca i64, align 8
  %x00.i1967 = alloca i64, align 8
  %x01.i1968 = alloca i64, align 8
  %x10.i1969 = alloca i64, align 8
  %x11.i1970 = alloca i64, align 8
  %x20.i1971 = alloca i64, align 8
  %x21.i1972 = alloca i64, align 8
  %x30.i1973 = alloca i64, align 8
  %x31.i1974 = alloca i64, align 8
  %a1.addr.i1801 = alloca i64, align 8
  %a2.addr.i1802 = alloca i64, align 8
  %a3.addr.i1803 = alloca i64, align 8
  %a4.addr.i1804 = alloca i64, align 8
  %a5.addr.i1805 = alloca i64, align 8
  %a6.addr.i1806 = alloca i64, align 8
  %out1.addr.i1807 = alloca i64*, align 8
  %out2.addr.i1808 = alloca i64*, align 8
  %out3.addr.i1809 = alloca i64*, align 8
  %out4.addr.i1810 = alloca i64*, align 8
  %x55005500.i1811 = alloca i64, align 8
  %x5A0F5A0F.i1812 = alloca i64, align 8
  %x3333FFFF.i1813 = alloca i64, align 8
  %x66666666.i1814 = alloca i64, align 8
  %x22226666.i1815 = alloca i64, align 8
  %x2D2D6969.i1816 = alloca i64, align 8
  %x25202160.i1817 = alloca i64, align 8
  %x00FFFF00.i1818 = alloca i64, align 8
  %x33CCCC33.i1819 = alloca i64, align 8
  %x4803120C.i1820 = alloca i64, align 8
  %x2222FFFF.i1821 = alloca i64, align 8
  %x6A21EDF3.i1822 = alloca i64, align 8
  %x4A01CC93.i1823 = alloca i64, align 8
  %x5555FFFF.i1824 = alloca i64, align 8
  %x7F75FFFF.i1825 = alloca i64, align 8
  %x00D20096.i1826 = alloca i64, align 8
  %x7FA7FF69.i1827 = alloca i64, align 8
  %x0A0A0000.i1828 = alloca i64, align 8
  %x0AD80096.i1829 = alloca i64, align 8
  %x00999900.i1830 = alloca i64, align 8
  %x0AD99996.i1831 = alloca i64, align 8
  %x22332233.i1832 = alloca i64, align 8
  %x257AA5F0.i1833 = alloca i64, align 8
  %x054885C0.i1834 = alloca i64, align 8
  %xFAB77A3F.i1835 = alloca i64, align 8
  %x2221EDF3.i1836 = alloca i64, align 8
  %xD89697CC.i1837 = alloca i64, align 8
  %x05B77AC0.i1838 = alloca i64, align 8
  %x05F77AD6.i1839 = alloca i64, align 8
  %x36C48529.i1840 = alloca i64, align 8
  %x6391D07C.i1841 = alloca i64, align 8
  %xBB0747B0.i1842 = alloca i64, align 8
  %x4C460000.i1843 = alloca i64, align 8
  %x4EDF9996.i1844 = alloca i64, align 8
  %x2D4E49EA.i1845 = alloca i64, align 8
  %xBBFFFFB0.i1846 = alloca i64, align 8
  %x96B1B65A.i1847 = alloca i64, align 8
  %x5AFF5AFF.i1848 = alloca i64, align 8
  %x52B11215.i1849 = alloca i64, align 8
  %x4201C010.i1850 = alloca i64, align 8
  %x10B0D205.i1851 = alloca i64, align 8
  %x00.i1852 = alloca i64, align 8
  %x01.i1853 = alloca i64, align 8
  %x10.i1854 = alloca i64, align 8
  %x11.i1855 = alloca i64, align 8
  %x20.i1856 = alloca i64, align 8
  %x21.i1857 = alloca i64, align 8
  %x30.i1858 = alloca i64, align 8
  %x31.i1859 = alloca i64, align 8
  %a1.addr.i1725 = alloca i64, align 8
  %a2.addr.i1726 = alloca i64, align 8
  %a3.addr.i1727 = alloca i64, align 8
  %a4.addr.i1728 = alloca i64, align 8
  %a5.addr.i1729 = alloca i64, align 8
  %a6.addr.i1730 = alloca i64, align 8
  %out1.addr.i1731 = alloca i64*, align 8
  %out2.addr.i1732 = alloca i64*, align 8
  %out3.addr.i1733 = alloca i64*, align 8
  %out4.addr.i1734 = alloca i64*, align 8
  %x33CC33CC.i1735 = alloca i64, align 8
  %x55550000.i = alloca i64, align 8
  %x00AA00FF.i = alloca i64, align 8
  %x33BB33FF.i = alloca i64, align 8
  %x33CC0000.i = alloca i64, align 8
  %x11441144.i = alloca i64, align 8
  %x11BB11BB.i = alloca i64, align 8
  %x003311BB.i = alloca i64, align 8
  %x00000F0F.i = alloca i64, align 8
  %x336600FF.i = alloca i64, align 8
  %x332200FF.i = alloca i64, align 8
  %x332200F0.i = alloca i64, align 8
  %x0302000F.i = alloca i64, align 8
  %xAAAAAAAA.i = alloca i64, align 8
  %xA9A8AAA5.i = alloca i64, align 8
  %x33CCCC33.i1736 = alloca i64, align 8
  %x33CCC030.i = alloca i64, align 8
  %x9A646A95.i = alloca i64, align 8
  %x00333303.i = alloca i64, align 8
  %x118822B8.i = alloca i64, align 8
  %xA8208805.i = alloca i64, align 8
  %x3CC3C33C.i = alloca i64, align 8
  %x94E34B39.i = alloca i64, align 8
  %x0331330C.i = alloca i64, align 8
  %x3FF3F33C.i = alloca i64, align 8
  %xA9DF596A.i = alloca i64, align 8
  %xA9DF5F6F.i = alloca i64, align 8
  %x962CAC53.i = alloca i64, align 8
  %x97D27835.i = alloca i64, align 8
  %x81D25825.i = alloca i64, align 8
  %x812D58DA.i = alloca i64, align 8
  %x802158DA.i = alloca i64, align 8
  %x1A45324F.i = alloca i64, align 8
  %x0A451047.i = alloca i64, align 8
  %xBBDFDD7B.i = alloca i64, align 8
  %xB19ACD3C.i = alloca i64, align 8
  %x00.i1737 = alloca i64, align 8
  %x01.i1738 = alloca i64, align 8
  %x10.i1739 = alloca i64, align 8
  %x11.i1740 = alloca i64, align 8
  %x20.i1741 = alloca i64, align 8
  %x21.i1742 = alloca i64, align 8
  %x30.i1743 = alloca i64, align 8
  %x31.i1744 = alloca i64, align 8
  %a1.addr.i1657 = alloca i64, align 8
  %a2.addr.i1658 = alloca i64, align 8
  %a3.addr.i1659 = alloca i64, align 8
  %a4.addr.i1660 = alloca i64, align 8
  %a5.addr.i1661 = alloca i64, align 8
  %a6.addr.i1662 = alloca i64, align 8
  %out1.addr.i1663 = alloca i64*, align 8
  %out2.addr.i1664 = alloca i64*, align 8
  %out3.addr.i1665 = alloca i64*, align 8
  %out4.addr.i1666 = alloca i64*, align 8
  %x44444444.i = alloca i64, align 8
  %x0F0FF0F0.i1667 = alloca i64, align 8
  %x4F4FF4F4.i = alloca i64, align 8
  %x00FFFF00.i1668 = alloca i64, align 8
  %x00AAAA00.i = alloca i64, align 8
  %x4FE55EF4.i = alloca i64, align 8
  %x3C3CC3C3.i = alloca i64, align 8
  %x3C3C0000.i = alloca i64, align 8
  %x7373F4F4.i = alloca i64, align 8
  %x0C840A00.i = alloca i64, align 8
  %x00005EF4.i = alloca i64, align 8
  %x00FF5EFF.i = alloca i64, align 8
  %x00555455.i = alloca i64, align 8
  %x3C699796.i = alloca i64, align 8
  %x000FF000.i = alloca i64, align 8
  %x55AA55AA.i = alloca i64, align 8
  %x26D9A15E.i = alloca i64, align 8
  %x2FDFAF5F.i = alloca i64, align 8
  %x2FD00F5F.i = alloca i64, align 8
  %x55AAFFAA.i = alloca i64, align 8
  %x28410014.i = alloca i64, align 8
  %x000000FF.i = alloca i64, align 8
  %x000000CC.i = alloca i64, align 8
  %x284100D8.i = alloca i64, align 8
  %x204000D0.i = alloca i64, align 8
  %x3C3CC3FF.i = alloca i64, align 8
  %x1C3CC32F.i = alloca i64, align 8
  %x4969967A.i = alloca i64, align 8
  %x4CC44CC4.i = alloca i64, align 8
  %x40C040C0.i = alloca i64, align 8
  %x69963C69.i = alloca i64, align 8
  %x9669C396.i = alloca i64, align 8
  %xD6A98356.i = alloca i64, align 8
  %x000F00F0.i = alloca i64, align 8
  %xFEBDC3D7.i = alloca i64, align 8
  %xFEB0C307.i = alloca i64, align 8
  %x4CEEEEC4.i = alloca i64, align 8
  %xB25E2DC3.i = alloca i64, align 8
  %x00.i1669 = alloca i64, align 8
  %x01.i1670 = alloca i64, align 8
  %x10.i1671 = alloca i64, align 8
  %x11.i1672 = alloca i64, align 8
  %x20.i1673 = alloca i64, align 8
  %x21.i1674 = alloca i64, align 8
  %x30.i1675 = alloca i64, align 8
  %x31.i1676 = alloca i64, align 8
  %a1.addr.i1598 = alloca i64, align 8
  %a2.addr.i1599 = alloca i64, align 8
  %a3.addr.i1600 = alloca i64, align 8
  %a4.addr.i1601 = alloca i64, align 8
  %a5.addr.i1602 = alloca i64, align 8
  %a6.addr.i1603 = alloca i64, align 8
  %out1.addr.i1604 = alloca i64*, align 8
  %out2.addr.i1605 = alloca i64*, align 8
  %out3.addr.i1606 = alloca i64*, align 8
  %out4.addr.i1607 = alloca i64*, align 8
  %x5A5A5A5A.i1608 = alloca i64, align 8
  %x0F0FF0F0.i = alloca i64, align 8
  %x33FF33FF.i = alloca i64, align 8
  %x33FFCC00.i = alloca i64, align 8
  %x0C0030F0.i = alloca i64, align 8
  %x0C0CC0C0.i = alloca i64, align 8
  %x0CF3C03F.i = alloca i64, align 8
  %x5EFBDA7F.i = alloca i64, align 8
  %x52FBCA0F.i = alloca i64, align 8
  %x61C8F93C.i = alloca i64, align 8
  %x00C0C03C.i = alloca i64, align 8
  %x0F0F30C0.i = alloca i64, align 8
  %x3B92A366.i = alloca i64, align 8
  %x30908326.i = alloca i64, align 8
  %x3C90B3D6.i = alloca i64, align 8
  %x33CC33CC.i1609 = alloca i64, align 8
  %x0C0CFFFF.i = alloca i64, align 8
  %x379E5C99.i = alloca i64, align 8
  %x04124C11.i = alloca i64, align 8
  %x56E9861E.i = alloca i64, align 8
  %xA91679E1.i = alloca i64, align 8
  %x9586CA37.i = alloca i64, align 8
  %x8402C833.i = alloca i64, align 8
  %x84C2C83F.i = alloca i64, align 8
  %xB35C94A6.i = alloca i64, align 8
  %x00.i1610 = alloca i64, align 8
  %x01.i1611 = alloca i64, align 8
  %x10.i1612 = alloca i64, align 8
  %x11.i1613 = alloca i64, align 8
  %x20.i1614 = alloca i64, align 8
  %x21.i1615 = alloca i64, align 8
  %x30.i1616 = alloca i64, align 8
  %x31.i1617 = alloca i64, align 8
  %a1.addr.i1534 = alloca i64, align 8
  %a2.addr.i1535 = alloca i64, align 8
  %a3.addr.i1536 = alloca i64, align 8
  %a4.addr.i1537 = alloca i64, align 8
  %a5.addr.i1538 = alloca i64, align 8
  %a6.addr.i1539 = alloca i64, align 8
  %out1.addr.i1540 = alloca i64*, align 8
  %out2.addr.i1541 = alloca i64*, align 8
  %out3.addr.i1542 = alloca i64*, align 8
  %out4.addr.i1543 = alloca i64*, align 8
  %x77777777.i = alloca i64, align 8
  %x77770000.i = alloca i64, align 8
  %x22225555.i = alloca i64, align 8
  %x11116666.i = alloca i64, align 8
  %x1F1F6F6F.i = alloca i64, align 8
  %x70700000.i = alloca i64, align 8
  %x43433333.i = alloca i64, align 8
  %x00430033.i = alloca i64, align 8
  %x55557777.i = alloca i64, align 8
  %x55167744.i = alloca i64, align 8
  %x5A19784B.i = alloca i64, align 8
  %x5A1987B4.i = alloca i64, align 8
  %x7A3BD7F5.i = alloca i64, align 8
  %x003B00F5.i = alloca i64, align 8
  %x221955A0.i = alloca i64, align 8
  %x05050707.i = alloca i64, align 8
  %x271C52A7.i = alloca i64, align 8
  %x2A2A82A0.i = alloca i64, align 8
  %x6969B193.i = alloca i64, align 8
  %x1FE06F90.i = alloca i64, align 8
  %x16804E00.i = alloca i64, align 8
  %xE97FB1FF.i = alloca i64, align 8
  %x43403302.i = alloca i64, align 8
  %x35CAED30.i = alloca i64, align 8
  %x37DEFFB7.i = alloca i64, align 8
  %x349ECCB5.i = alloca i64, align 8
  %x0B01234A.i = alloca i64, align 8
  %x101884B4.i = alloca i64, align 8
  %x0FF8EB24.i = alloca i64, align 8
  %x41413333.i = alloca i64, align 8
  %x4FF9FB37.i = alloca i64, align 8
  %x4FC2FBC2.i = alloca i64, align 8
  %x22222222.i = alloca i64, align 8
  %x16BCEE97.i = alloca i64, align 8
  %x0F080B04.i = alloca i64, align 8
  %x19B4E593.i = alloca i64, align 8
  %x5C5C5C5C.i = alloca i64, align 8
  %x4448184C.i = alloca i64, align 8
  %x2DDABE71.i = alloca i64, align 8
  %x6992A63D.i = alloca i64, align 8
  %x00.i1544 = alloca i64, align 8
  %x01.i1545 = alloca i64, align 8
  %x10.i1546 = alloca i64, align 8
  %x11.i1547 = alloca i64, align 8
  %x20.i1548 = alloca i64, align 8
  %x21.i1549 = alloca i64, align 8
  %x30.i1550 = alloca i64, align 8
  %x31.i1551 = alloca i64, align 8
  %a1.addr.i1475 = alloca i64, align 8
  %a2.addr.i1476 = alloca i64, align 8
  %a3.addr.i1477 = alloca i64, align 8
  %a4.addr.i1478 = alloca i64, align 8
  %a5.addr.i1479 = alloca i64, align 8
  %a6.addr.i1480 = alloca i64, align 8
  %out1.addr.i1481 = alloca i64*, align 8
  %out2.addr.i1482 = alloca i64*, align 8
  %out3.addr.i1483 = alloca i64*, align 8
  %out4.addr.i1484 = alloca i64*, align 8
  %x33CC33CC.i = alloca i64, align 8
  %x3333FFFF.i1485 = alloca i64, align 8
  %x11115555.i = alloca i64, align 8
  %x22DD6699.i = alloca i64, align 8
  %x22DD9966.i = alloca i64, align 8
  %x00220099.i = alloca i64, align 8
  %x00551144.i = alloca i64, align 8
  %x33662277.i = alloca i64, align 8
  %x5A5A5A5A.i = alloca i64, align 8
  %x7B7E7A7F.i = alloca i64, align 8
  %x59A31CE6.i = alloca i64, align 8
  %x09030C06.i = alloca i64, align 8
  %x09030000.i = alloca i64, align 8
  %x336622FF.i = alloca i64, align 8
  %x3A6522FF.i = alloca i64, align 8
  %x484D494C.i = alloca i64, align 8
  %x0000B6B3.i = alloca i64, align 8
  %x0F0FB9BC.i = alloca i64, align 8
  %x00FC00F9.i = alloca i64, align 8
  %x0FFFB9FD.i = alloca i64, align 8
  %x5DF75DF7.i = alloca i64, align 8
  %x116600F7.i = alloca i64, align 8
  %x1E69B94B.i = alloca i64, align 8
  %x1668B94B.i = alloca i64, align 8
  %x7B7B7B7B.i = alloca i64, align 8
  %x411E5984.i = alloca i64, align 8
  %x1FFFFDFD.i = alloca i64, align 8
  %x5EE1A479.i = alloca i64, align 8
  %x3CB4DFD2.i = alloca i64, align 8
  %x004B002D.i = alloca i64, align 8
  %xB7B2B6B3.i = alloca i64, align 8
  %xCCC9CDC8.i = alloca i64, align 8
  %xCC82CDE5.i = alloca i64, align 8
  %x0055EEBB.i = alloca i64, align 8
  %x5A5AECE9.i = alloca i64, align 8
  %x0050ECA9.i = alloca i64, align 8
  %xC5CAC1CE.i = alloca i64, align 8
  %xC59A2D67.i = alloca i64, align 8
  %x00.i1486 = alloca i64, align 8
  %x01.i1487 = alloca i64, align 8
  %x10.i1488 = alloca i64, align 8
  %x11.i1489 = alloca i64, align 8
  %x20.i1490 = alloca i64, align 8
  %x21.i1491 = alloca i64, align 8
  %x30.i1492 = alloca i64, align 8
  %x31.i1493 = alloca i64, align 8
  %a1.addr.i1420 = alloca i64, align 8
  %a2.addr.i1421 = alloca i64, align 8
  %a3.addr.i1422 = alloca i64, align 8
  %a4.addr.i1423 = alloca i64, align 8
  %a5.addr.i1424 = alloca i64, align 8
  %a6.addr.i1425 = alloca i64, align 8
  %out1.addr.i1426 = alloca i64*, align 8
  %out2.addr.i1427 = alloca i64*, align 8
  %out3.addr.i1428 = alloca i64*, align 8
  %out4.addr.i1429 = alloca i64*, align 8
  %x0FF00FF0.i = alloca i64, align 8
  %x3CC33CC3.i = alloca i64, align 8
  %x00003CC3.i = alloca i64, align 8
  %x0F000F00.i = alloca i64, align 8
  %x5A555A55.i = alloca i64, align 8
  %x00001841.i = alloca i64, align 8
  %x00000F00.i = alloca i64, align 8
  %x33333C33.i = alloca i64, align 8
  %x7B777E77.i = alloca i64, align 8
  %x0FF0F00F.i = alloca i64, align 8
  %x74878E78.i = alloca i64, align 8
  %x003C003C.i = alloca i64, align 8
  %x5A7D5A7D.i = alloca i64, align 8
  %x333300F0.i = alloca i64, align 8
  %x694E5A8D.i = alloca i64, align 8
  %x0FF0CCCC.i = alloca i64, align 8
  %x000F0303.i = alloca i64, align 8
  %x5A505854.i = alloca i64, align 8
  %x33CC000F.i = alloca i64, align 8
  %x699C585B.i = alloca i64, align 8
  %x7F878F78.i = alloca i64, align 8
  %x21101013.i = alloca i64, align 8
  %x7F979F7B.i = alloca i64, align 8
  %x30030CC0.i = alloca i64, align 8
  %x4F9493BB.i = alloca i64, align 8
  %x6F9CDBFB.i = alloca i64, align 8
  %x0000DBFB.i = alloca i64, align 8
  %x00005151.i = alloca i64, align 8
  %x26DAC936.i = alloca i64, align 8
  %x26DA9867.i = alloca i64, align 8
  %x21FF10FF.i = alloca i64, align 8
  %x21FFCB04.i = alloca i64, align 8
  %x2625C9C9.i = alloca i64, align 8
  %x27FFCBCD.i = alloca i64, align 8
  %x27FF1036.i = alloca i64, align 8
  %x27FF103E.i = alloca i64, align 8
  %xB06B6C44.i = alloca i64, align 8
  %x97947C7A.i = alloca i64, align 8
  %x00.i1430 = alloca i64, align 8
  %x01.i1431 = alloca i64, align 8
  %x10.i1432 = alloca i64, align 8
  %x11.i1433 = alloca i64, align 8
  %x20.i1434 = alloca i64, align 8
  %x21.i1435 = alloca i64, align 8
  %x30.i1436 = alloca i64, align 8
  %x31.i1437 = alloca i64, align 8
  %a1.addr.i1374 = alloca i64, align 8
  %a2.addr.i1375 = alloca i64, align 8
  %a3.addr.i1376 = alloca i64, align 8
  %a4.addr.i1377 = alloca i64, align 8
  %a5.addr.i1378 = alloca i64, align 8
  %a6.addr.i1379 = alloca i64, align 8
  %out1.addr.i1380 = alloca i64*, align 8
  %out2.addr.i1381 = alloca i64*, align 8
  %out3.addr.i1382 = alloca i64*, align 8
  %out4.addr.i1383 = alloca i64*, align 8
  %x0C0C0C0C.i = alloca i64, align 8
  %x0000F0F0.i = alloca i64, align 8
  %x00FFF00F.i = alloca i64, align 8
  %x00555005.i = alloca i64, align 8
  %x00515001.i = alloca i64, align 8
  %x33000330.i = alloca i64, align 8
  %x77555775.i = alloca i64, align 8
  %x30303030.i = alloca i64, align 8
  %x3030CFCF.i = alloca i64, align 8
  %x30104745.i = alloca i64, align 8
  %x30555745.i = alloca i64, align 8
  %xFF000FF0.i = alloca i64, align 8
  %xCF1048B5.i = alloca i64, align 8
  %x080A080A.i = alloca i64, align 8
  %xC71A40BF.i = alloca i64, align 8
  %xCB164CB3.i = alloca i64, align 8
  %x9E4319E6.i = alloca i64, align 8
  %x000019E6.i = alloca i64, align 8
  %xF429738C.i = alloca i64, align 8
  %xF4296A6A.i = alloca i64, align 8
  %xC729695A.i = alloca i64, align 8
  %xC47C3D2F.i = alloca i64, align 8
  %xF77F3F3F.i = alloca i64, align 8
  %x9E43E619.i = alloca i64, align 8
  %x693CD926.i = alloca i64, align 8
  %xF719A695.i = alloca i64, align 8
  %xF4FF73FF.i = alloca i64, align 8
  %x03E6D56A.i = alloca i64, align 8
  %x56B3803F.i = alloca i64, align 8
  %xF700A600.i = alloca i64, align 8
  %x61008000.i = alloca i64, align 8
  %x03B7856B.i = alloca i64, align 8
  %x62B7056B.i = alloca i64, align 8
  %x00.i1384 = alloca i64, align 8
  %x01.i1385 = alloca i64, align 8
  %x10.i1386 = alloca i64, align 8
  %x11.i1387 = alloca i64, align 8
  %x20.i1388 = alloca i64, align 8
  %x21.i1389 = alloca i64, align 8
  %x30.i1390 = alloca i64, align 8
  %x31.i1391 = alloca i64, align 8
  %kp.i = alloca i64*, align 8
  %ic.i = alloca i32, align 4
  %vp.i = alloca i64*, align 8
  %v0.i = alloca i64, align 8
  %v1.i = alloca i64, align 8
  %v2.i = alloca i64, align 8
  %v3.i = alloca i64, align 8
  %v4.i = alloca i64, align 8
  %v5.i = alloca i64, align 8
  %v6.i = alloca i64, align 8
  %v7.i = alloca i64, align 8
  %m.i = alloca i64, align 8
  %va.i = alloca i64, align 8
  %vb.i = alloca i64, align 8
  %tmp.i = alloca i64, align 8
  %m30.i = alloca i64, align 8
  %va32.i = alloca i64, align 8
  %vb34.i = alloca i64, align 8
  %tmp36.i = alloca i64, align 8
  %m60.i = alloca i64, align 8
  %va62.i = alloca i64, align 8
  %vb64.i = alloca i64, align 8
  %tmp66.i = alloca i64, align 8
  %m91.i = alloca i64, align 8
  %va93.i = alloca i64, align 8
  %vb95.i = alloca i64, align 8
  %tmp97.i = alloca i64, align 8
  %m122.i = alloca i64, align 8
  %va124.i = alloca i64, align 8
  %vb126.i = alloca i64, align 8
  %tmp128.i = alloca i64, align 8
  %m153.i = alloca i64, align 8
  %va155.i = alloca i64, align 8
  %vb157.i = alloca i64, align 8
  %tmp159.i = alloca i64, align 8
  %m184.i = alloca i64, align 8
  %va186.i = alloca i64, align 8
  %vb188.i = alloca i64, align 8
  %tmp190.i = alloca i64, align 8
  %a1.addr.i = alloca i64, align 8
  %a2.addr.i = alloca i64, align 8
  %a3.addr.i = alloca i64, align 8
  %a4.addr.i = alloca i64, align 8
  %a5.addr.i = alloca i64, align 8
  %a6.addr.i = alloca i64, align 8
  %out1.addr.i = alloca i64*, align 8
  %out2.addr.i = alloca i64*, align 8
  %out3.addr.i = alloca i64*, align 8
  %out4.addr.i = alloca i64*, align 8
  %x55005500.i = alloca i64, align 8
  %x5A0F5A0F.i = alloca i64, align 8
  %x3333FFFF.i = alloca i64, align 8
  %x66666666.i = alloca i64, align 8
  %x22226666.i = alloca i64, align 8
  %x2D2D6969.i = alloca i64, align 8
  %x25202160.i = alloca i64, align 8
  %x00FFFF00.i = alloca i64, align 8
  %x33CCCC33.i = alloca i64, align 8
  %x4803120C.i = alloca i64, align 8
  %x2222FFFF.i = alloca i64, align 8
  %x6A21EDF3.i = alloca i64, align 8
  %x4A01CC93.i = alloca i64, align 8
  %x5555FFFF.i = alloca i64, align 8
  %x7F75FFFF.i = alloca i64, align 8
  %x00D20096.i = alloca i64, align 8
  %x7FA7FF69.i = alloca i64, align 8
  %x0A0A0000.i = alloca i64, align 8
  %x0AD80096.i = alloca i64, align 8
  %x00999900.i = alloca i64, align 8
  %x0AD99996.i = alloca i64, align 8
  %x22332233.i = alloca i64, align 8
  %x257AA5F0.i = alloca i64, align 8
  %x054885C0.i = alloca i64, align 8
  %xFAB77A3F.i = alloca i64, align 8
  %x2221EDF3.i = alloca i64, align 8
  %xD89697CC.i = alloca i64, align 8
  %x05B77AC0.i = alloca i64, align 8
  %x05F77AD6.i = alloca i64, align 8
  %x36C48529.i = alloca i64, align 8
  %x6391D07C.i = alloca i64, align 8
  %xBB0747B0.i = alloca i64, align 8
  %x4C460000.i = alloca i64, align 8
  %x4EDF9996.i = alloca i64, align 8
  %x2D4E49EA.i = alloca i64, align 8
  %xBBFFFFB0.i = alloca i64, align 8
  %x96B1B65A.i = alloca i64, align 8
  %x5AFF5AFF.i = alloca i64, align 8
  %x52B11215.i = alloca i64, align 8
  %x4201C010.i = alloca i64, align 8
  %x10B0D205.i = alloca i64, align 8
  %x00.i = alloca i64, align 8
  %x01.i = alloca i64, align 8
  %x10.i = alloca i64, align 8
  %x11.i = alloca i64, align 8
  %x20.i = alloca i64, align 8
  %x21.i = alloca i64, align 8
  %x30.i = alloca i64, align 8
  %x31.i = alloca i64, align 8
  %keys_count.addr = alloca i32, align 4
  %k = alloca i64**, align 8
  %zero = alloca i64, align 8
  %ii = alloca i32, align 4
  %jj = alloca i32, align 4
  store i32 %keys_count, i32* %keys_count.addr, align 4
  %0 = load i32, i32* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 9), align 8
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %finalize_keys

if.end:                                           ; preds = %entry
  br label %body

body:                                             ; preds = %DES_bs_finalize_keys.exit, %if.end
  store i64 0, i64* %zero, align 8
  %1 = load i64, i64* %zero, align 8
  store i64 %1, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 0), align 8
  %2 = load i64, i64* %zero, align 8
  store i64 %2, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 1), align 8
  %3 = load i64, i64* %zero, align 8
  store i64 %3, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 2), align 8
  %4 = load i64, i64* %zero, align 8
  store i64 %4, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 3), align 8
  %5 = load i64, i64* %zero, align 8
  store i64 %5, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 4), align 8
  %6 = load i64, i64* %zero, align 8
  store i64 %6, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 5), align 8
  %7 = load i64, i64* %zero, align 8
  store i64 %7, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 6), align 8
  %8 = load i64, i64* %zero, align 8
  store i64 %8, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 7), align 8
  %9 = load i64, i64* %zero, align 8
  store i64 %9, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 8), align 8
  %10 = load i64, i64* %zero, align 8
  store i64 %10, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 9), align 8
  %11 = load i64, i64* %zero, align 8
  store i64 %11, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 10), align 8
  %12 = load i64, i64* %zero, align 8
  store i64 %12, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 11), align 8
  %13 = load i64, i64* %zero, align 8
  store i64 %13, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 12), align 8
  %14 = load i64, i64* %zero, align 8
  store i64 %14, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 13), align 8
  %15 = load i64, i64* %zero, align 8
  store i64 %15, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 14), align 8
  %16 = load i64, i64* %zero, align 8
  store i64 %16, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 15), align 8
  %17 = load i64, i64* %zero, align 8
  store i64 %17, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 16), align 8
  %18 = load i64, i64* %zero, align 8
  store i64 %18, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 17), align 8
  %19 = load i64, i64* %zero, align 8
  store i64 %19, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 18), align 8
  %20 = load i64, i64* %zero, align 8
  store i64 %20, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 19), align 8
  %21 = load i64, i64* %zero, align 8
  store i64 %21, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 20), align 8
  %22 = load i64, i64* %zero, align 8
  store i64 %22, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 21), align 8
  %23 = load i64, i64* %zero, align 8
  store i64 %23, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 22), align 8
  %24 = load i64, i64* %zero, align 8
  store i64 %24, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 23), align 8
  %25 = load i64, i64* %zero, align 8
  store i64 %25, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 24), align 8
  %26 = load i64, i64* %zero, align 8
  store i64 %26, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 25), align 8
  %27 = load i64, i64* %zero, align 8
  store i64 %27, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 26), align 8
  %28 = load i64, i64* %zero, align 8
  store i64 %28, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 27), align 8
  %29 = load i64, i64* %zero, align 8
  store i64 %29, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 28), align 8
  %30 = load i64, i64* %zero, align 8
  store i64 %30, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 29), align 8
  %31 = load i64, i64* %zero, align 8
  store i64 %31, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 30), align 8
  %32 = load i64, i64* %zero, align 8
  store i64 %32, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 31), align 8
  %33 = load i64, i64* %zero, align 8
  store i64 %33, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 32), align 8
  %34 = load i64, i64* %zero, align 8
  store i64 %34, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 33), align 8
  %35 = load i64, i64* %zero, align 8
  store i64 %35, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 34), align 8
  %36 = load i64, i64* %zero, align 8
  store i64 %36, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 35), align 8
  %37 = load i64, i64* %zero, align 8
  store i64 %37, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 36), align 8
  %38 = load i64, i64* %zero, align 8
  store i64 %38, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 37), align 8
  %39 = load i64, i64* %zero, align 8
  store i64 %39, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 38), align 8
  %40 = load i64, i64* %zero, align 8
  store i64 %40, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 39), align 8
  %41 = load i64, i64* %zero, align 8
  store i64 %41, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 40), align 8
  %42 = load i64, i64* %zero, align 8
  store i64 %42, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 41), align 8
  %43 = load i64, i64* %zero, align 8
  store i64 %43, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 42), align 8
  %44 = load i64, i64* %zero, align 8
  store i64 %44, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 43), align 8
  %45 = load i64, i64* %zero, align 8
  store i64 %45, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 44), align 8
  %46 = load i64, i64* %zero, align 8
  store i64 %46, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 45), align 8
  %47 = load i64, i64* %zero, align 8
  store i64 %47, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 46), align 8
  %48 = load i64, i64* %zero, align 8
  store i64 %48, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 47), align 8
  %49 = load i64, i64* %zero, align 8
  store i64 %49, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 48), align 8
  %50 = load i64, i64* %zero, align 8
  store i64 %50, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 49), align 8
  %51 = load i64, i64* %zero, align 8
  store i64 %51, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 50), align 8
  %52 = load i64, i64* %zero, align 8
  store i64 %52, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 51), align 8
  %53 = load i64, i64* %zero, align 8
  store i64 %53, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 52), align 8
  %54 = load i64, i64* %zero, align 8
  store i64 %54, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 53), align 8
  %55 = load i64, i64* %zero, align 8
  store i64 %55, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 54), align 8
  %56 = load i64, i64* %zero, align 8
  store i64 %56, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 55), align 8
  %57 = load i64, i64* %zero, align 8
  store i64 %57, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 56), align 8
  %58 = load i64, i64* %zero, align 8
  store i64 %58, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 57), align 8
  %59 = load i64, i64* %zero, align 8
  store i64 %59, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 58), align 8
  %60 = load i64, i64* %zero, align 8
  store i64 %60, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 59), align 8
  %61 = load i64, i64* %zero, align 8
  store i64 %61, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 60), align 8
  %62 = load i64, i64* %zero, align 8
  store i64 %62, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 61), align 8
  %63 = load i64, i64* %zero, align 8
  store i64 %63, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 62), align 8
  %64 = load i64, i64* %zero, align 8
  store i64 %64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 63), align 8
  store i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 0, i32 0, i32 0), i64*** %k, align 8
  br label %start

start:                                            ; preds = %body
  store i32 0, i32* %ii, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc1020, %start
  %65 = load i32, i32* %ii, align 4
  %cmp = icmp slt i32 %65, 12
  br i1 %cmp, label %for.body, label %for.end1022

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %jj, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %66 = load i32, i32* %jj, align 4
  %cmp2 = icmp slt i32 %66, 8
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %67 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 0), align 8
  %arrayidx = getelementptr inbounds i64, i64* %67, i64 0
  %68 = load i64, i64* %arrayidx, align 8
  %69 = load i64**, i64*** %k, align 8
  %arrayidx4 = getelementptr inbounds i64*, i64** %69, i64 0
  %70 = load i64*, i64** %arrayidx4, align 8
  %arrayidx5 = getelementptr inbounds i64, i64* %70, i64 0
  %71 = load i64, i64* %arrayidx5, align 8
  %xor = xor i64 %68, %71
  %72 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 1), align 8
  %arrayidx6 = getelementptr inbounds i64, i64* %72, i64 0
  %73 = load i64, i64* %arrayidx6, align 8
  %74 = load i64**, i64*** %k, align 8
  %arrayidx7 = getelementptr inbounds i64*, i64** %74, i64 1
  %75 = load i64*, i64** %arrayidx7, align 8
  %arrayidx8 = getelementptr inbounds i64, i64* %75, i64 0
  %76 = load i64, i64* %arrayidx8, align 8
  %xor9 = xor i64 %73, %76
  %77 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 2), align 8
  %arrayidx10 = getelementptr inbounds i64, i64* %77, i64 0
  %78 = load i64, i64* %arrayidx10, align 8
  %79 = load i64**, i64*** %k, align 8
  %arrayidx11 = getelementptr inbounds i64*, i64** %79, i64 2
  %80 = load i64*, i64** %arrayidx11, align 8
  %arrayidx12 = getelementptr inbounds i64, i64* %80, i64 0
  %81 = load i64, i64* %arrayidx12, align 8
  %xor13 = xor i64 %78, %81
  %82 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 3), align 8
  %arrayidx14 = getelementptr inbounds i64, i64* %82, i64 0
  %83 = load i64, i64* %arrayidx14, align 8
  %84 = load i64**, i64*** %k, align 8
  %arrayidx15 = getelementptr inbounds i64*, i64** %84, i64 3
  %85 = load i64*, i64** %arrayidx15, align 8
  %arrayidx16 = getelementptr inbounds i64, i64* %85, i64 0
  %86 = load i64, i64* %arrayidx16, align 8
  %xor17 = xor i64 %83, %86
  %87 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 4), align 8
  %arrayidx18 = getelementptr inbounds i64, i64* %87, i64 0
  %88 = load i64, i64* %arrayidx18, align 8
  %89 = load i64**, i64*** %k, align 8
  %arrayidx19 = getelementptr inbounds i64*, i64** %89, i64 4
  %90 = load i64*, i64** %arrayidx19, align 8
  %arrayidx20 = getelementptr inbounds i64, i64* %90, i64 0
  %91 = load i64, i64* %arrayidx20, align 8
  %xor21 = xor i64 %88, %91
  %92 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 5), align 8
  %arrayidx22 = getelementptr inbounds i64, i64* %92, i64 0
  %93 = load i64, i64* %arrayidx22, align 8
  %94 = load i64**, i64*** %k, align 8
  %arrayidx23 = getelementptr inbounds i64*, i64** %94, i64 5
  %95 = load i64*, i64** %arrayidx23, align 8
  %arrayidx24 = getelementptr inbounds i64, i64* %95, i64 0
  %96 = load i64, i64* %arrayidx24, align 8
  %xor25 = xor i64 %93, %96
  store i64 %xor, i64* %a1.addr.i, align 8
  store i64 %xor9, i64* %a2.addr.i, align 8
  store i64 %xor13, i64* %a3.addr.i, align 8
  store i64 %xor17, i64* %a4.addr.i, align 8
  store i64 %xor21, i64* %a5.addr.i, align 8
  store i64 %xor25, i64* %a6.addr.i, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 40), i64** %out1.addr.i, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 48), i64** %out2.addr.i, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 54), i64** %out3.addr.i, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 62), i64** %out4.addr.i, align 8
  %97 = load i64, i64* %a1.addr.i, align 8
  %98 = load i64, i64* %a5.addr.i, align 8
  %neg.i = xor i64 %98, -1
  %and.i = and i64 %97, %neg.i
  store i64 %and.i, i64* %x55005500.i, align 8
  %99 = load i64, i64* %a4.addr.i, align 8
  %100 = load i64, i64* %x55005500.i, align 8
  %xor.i = xor i64 %99, %100
  store i64 %xor.i, i64* %x5A0F5A0F.i, align 8
  %101 = load i64, i64* %a3.addr.i, align 8
  %102 = load i64, i64* %a6.addr.i, align 8
  %or.i = or i64 %101, %102
  store i64 %or.i, i64* %x3333FFFF.i, align 8
  %103 = load i64, i64* %a1.addr.i, align 8
  %104 = load i64, i64* %a3.addr.i, align 8
  %xor1.i = xor i64 %103, %104
  store i64 %xor1.i, i64* %x66666666.i, align 8
  %105 = load i64, i64* %x3333FFFF.i, align 8
  %106 = load i64, i64* %x66666666.i, align 8
  %and2.i = and i64 %105, %106
  store i64 %and2.i, i64* %x22226666.i, align 8
  %107 = load i64, i64* %a4.addr.i, align 8
  %108 = load i64, i64* %x22226666.i, align 8
  %xor3.i = xor i64 %107, %108
  store i64 %xor3.i, i64* %x2D2D6969.i, align 8
  %109 = load i64, i64* %x2D2D6969.i, align 8
  %110 = load i64, i64* %x5A0F5A0F.i, align 8
  %neg4.i = xor i64 %110, -1
  %and5.i = and i64 %109, %neg4.i
  store i64 %and5.i, i64* %x25202160.i, align 8
  %111 = load i64, i64* %a5.addr.i, align 8
  %112 = load i64, i64* %a6.addr.i, align 8
  %xor6.i = xor i64 %111, %112
  store i64 %xor6.i, i64* %x00FFFF00.i, align 8
  %113 = load i64, i64* %a3.addr.i, align 8
  %114 = load i64, i64* %x00FFFF00.i, align 8
  %xor7.i = xor i64 %113, %114
  store i64 %xor7.i, i64* %x33CCCC33.i, align 8
  %115 = load i64, i64* %x5A0F5A0F.i, align 8
  %116 = load i64, i64* %x33CCCC33.i, align 8
  %neg8.i = xor i64 %116, -1
  %and9.i = and i64 %115, %neg8.i
  store i64 %and9.i, i64* %x4803120C.i, align 8
  %117 = load i64, i64* %a6.addr.i, align 8
  %118 = load i64, i64* %x22226666.i, align 8
  %or10.i = or i64 %117, %118
  store i64 %or10.i, i64* %x2222FFFF.i, align 8
  %119 = load i64, i64* %x4803120C.i, align 8
  %120 = load i64, i64* %x2222FFFF.i, align 8
  %xor11.i = xor i64 %119, %120
  store i64 %xor11.i, i64* %x6A21EDF3.i, align 8
  %121 = load i64, i64* %x6A21EDF3.i, align 8
  %122 = load i64, i64* %x25202160.i, align 8
  %neg12.i = xor i64 %122, -1
  %and13.i = and i64 %121, %neg12.i
  store i64 %and13.i, i64* %x4A01CC93.i, align 8
  %123 = load i64, i64* %a1.addr.i, align 8
  %124 = load i64, i64* %a6.addr.i, align 8
  %or14.i = or i64 %123, %124
  store i64 %or14.i, i64* %x5555FFFF.i, align 8
  %125 = load i64, i64* %x6A21EDF3.i, align 8
  %126 = load i64, i64* %x5555FFFF.i, align 8
  %or15.i = or i64 %125, %126
  store i64 %or15.i, i64* %x7F75FFFF.i, align 8
  %127 = load i64, i64* %a5.addr.i, align 8
  %128 = load i64, i64* %x2D2D6969.i, align 8
  %neg16.i = xor i64 %128, -1
  %and17.i = and i64 %127, %neg16.i
  store i64 %and17.i, i64* %x00D20096.i, align 8
  %129 = load i64, i64* %x7F75FFFF.i, align 8
  %130 = load i64, i64* %x00D20096.i, align 8
  %xor18.i = xor i64 %129, %130
  store i64 %xor18.i, i64* %x7FA7FF69.i, align 8
  %131 = load i64, i64* %a4.addr.i, align 8
  %132 = load i64, i64* %x5555FFFF.i, align 8
  %neg19.i = xor i64 %132, -1
  %and20.i = and i64 %131, %neg19.i
  store i64 %and20.i, i64* %x0A0A0000.i, align 8
  %133 = load i64, i64* %x00D20096.i, align 8
  %134 = load i64, i64* %x0A0A0000.i, align 8
  %xor21.i = xor i64 %133, %134
  store i64 %xor21.i, i64* %x0AD80096.i, align 8
  %135 = load i64, i64* %x00FFFF00.i, align 8
  %136 = load i64, i64* %x66666666.i, align 8
  %neg22.i = xor i64 %136, -1
  %and23.i = and i64 %135, %neg22.i
  store i64 %and23.i, i64* %x00999900.i, align 8
  %137 = load i64, i64* %x0AD80096.i, align 8
  %138 = load i64, i64* %x00999900.i, align 8
  %or24.i = or i64 %137, %138
  store i64 %or24.i, i64* %x0AD99996.i, align 8
  %139 = load i64, i64* %a3.addr.i, align 8
  %140 = load i64, i64* %x55005500.i, align 8
  %neg25.i = xor i64 %140, -1
  %and26.i = and i64 %139, %neg25.i
  store i64 %and26.i, i64* %x22332233.i, align 8
  %141 = load i64, i64* %x5A0F5A0F.i, align 8
  %142 = load i64, i64* %x7F75FFFF.i, align 8
  %xor27.i = xor i64 %141, %142
  store i64 %xor27.i, i64* %x257AA5F0.i, align 8
  %143 = load i64, i64* %x257AA5F0.i, align 8
  %144 = load i64, i64* %x22332233.i, align 8
  %neg28.i = xor i64 %144, -1
  %and29.i = and i64 %143, %neg28.i
  store i64 %and29.i, i64* %x054885C0.i, align 8
  %145 = load i64, i64* %x054885C0.i, align 8
  %neg30.i = xor i64 %145, -1
  store i64 %neg30.i, i64* %xFAB77A3F.i, align 8
  %146 = load i64, i64* %x3333FFFF.i, align 8
  %147 = load i64, i64* %x6A21EDF3.i, align 8
  %and31.i = and i64 %146, %147
  store i64 %and31.i, i64* %x2221EDF3.i, align 8
  %148 = load i64, i64* %xFAB77A3F.i, align 8
  %149 = load i64, i64* %x2221EDF3.i, align 8
  %xor32.i = xor i64 %148, %149
  store i64 %xor32.i, i64* %xD89697CC.i, align 8
  %150 = load i64, i64* %x7FA7FF69.i, align 8
  %151 = load i64, i64* %a2.addr.i, align 8
  %neg33.i = xor i64 %151, -1
  %and34.i = and i64 %150, %neg33.i
  store i64 %and34.i, i64* %x20.i, align 8
  %152 = load i64, i64* %x20.i, align 8
  %153 = load i64, i64* %xD89697CC.i, align 8
  %xor35.i = xor i64 %152, %153
  store i64 %xor35.i, i64* %x21.i, align 8
  %154 = load i64*, i64** %out3.addr.i, align 8
  %155 = load i64, i64* %154, align 8
  %156 = load i64, i64* %x21.i, align 8
  %xor36.i = xor i64 %155, %156
  %157 = load i64*, i64** %out3.addr.i, align 8
  store i64 %xor36.i, i64* %157, align 8
  %158 = load i64, i64* %x00FFFF00.i, align 8
  %159 = load i64, i64* %x054885C0.i, align 8
  %xor37.i = xor i64 %158, %159
  store i64 %xor37.i, i64* %x05B77AC0.i, align 8
  %160 = load i64, i64* %x00D20096.i, align 8
  %161 = load i64, i64* %x05B77AC0.i, align 8
  %or38.i = or i64 %160, %161
  store i64 %or38.i, i64* %x05F77AD6.i, align 8
  %162 = load i64, i64* %x3333FFFF.i, align 8
  %163 = load i64, i64* %x05F77AD6.i, align 8
  %xor39.i = xor i64 %162, %163
  store i64 %xor39.i, i64* %x36C48529.i, align 8
  %164 = load i64, i64* %a1.addr.i, align 8
  %165 = load i64, i64* %x36C48529.i, align 8
  %xor40.i = xor i64 %164, %165
  store i64 %xor40.i, i64* %x6391D07C.i, align 8
  %166 = load i64, i64* %xD89697CC.i, align 8
  %167 = load i64, i64* %x6391D07C.i, align 8
  %xor41.i = xor i64 %166, %167
  store i64 %xor41.i, i64* %xBB0747B0.i, align 8
  %168 = load i64, i64* %x25202160.i, align 8
  %169 = load i64, i64* %a2.addr.i, align 8
  %or42.i = or i64 %168, %169
  store i64 %or42.i, i64* %x00.i, align 8
  %170 = load i64, i64* %x00.i, align 8
  %171 = load i64, i64* %xBB0747B0.i, align 8
  %xor43.i = xor i64 %170, %171
  store i64 %xor43.i, i64* %x01.i, align 8
  %172 = load i64*, i64** %out1.addr.i, align 8
  %173 = load i64, i64* %172, align 8
  %174 = load i64, i64* %x01.i, align 8
  %xor44.i = xor i64 %173, %174
  %175 = load i64*, i64** %out1.addr.i, align 8
  store i64 %xor44.i, i64* %175, align 8
  %176 = load i64, i64* %x3333FFFF.i, align 8
  %177 = load i64, i64* %x7F75FFFF.i, align 8
  %xor45.i = xor i64 %176, %177
  store i64 %xor45.i, i64* %x4C460000.i, align 8
  %178 = load i64, i64* %x0AD99996.i, align 8
  %179 = load i64, i64* %x4C460000.i, align 8
  %or46.i = or i64 %178, %179
  store i64 %or46.i, i64* %x4EDF9996.i, align 8
  %180 = load i64, i64* %x6391D07C.i, align 8
  %181 = load i64, i64* %x4EDF9996.i, align 8
  %xor47.i = xor i64 %180, %181
  store i64 %xor47.i, i64* %x2D4E49EA.i, align 8
  %182 = load i64, i64* %x00FFFF00.i, align 8
  %183 = load i64, i64* %xBB0747B0.i, align 8
  %or48.i = or i64 %182, %183
  store i64 %or48.i, i64* %xBBFFFFB0.i, align 8
  %184 = load i64, i64* %x2D4E49EA.i, align 8
  %185 = load i64, i64* %xBBFFFFB0.i, align 8
  %xor49.i = xor i64 %184, %185
  store i64 %xor49.i, i64* %x96B1B65A.i, align 8
  %186 = load i64, i64* %x4A01CC93.i, align 8
  %187 = load i64, i64* %a2.addr.i, align 8
  %or50.i = or i64 %186, %187
  store i64 %or50.i, i64* %x10.i, align 8
  %188 = load i64, i64* %x10.i, align 8
  %189 = load i64, i64* %x96B1B65A.i, align 8
  %xor51.i = xor i64 %188, %189
  store i64 %xor51.i, i64* %x11.i, align 8
  %190 = load i64*, i64** %out2.addr.i, align 8
  %191 = load i64, i64* %190, align 8
  %192 = load i64, i64* %x11.i, align 8
  %xor52.i = xor i64 %191, %192
  %193 = load i64*, i64** %out2.addr.i, align 8
  store i64 %xor52.i, i64* %193, align 8
  %194 = load i64, i64* %a5.addr.i, align 8
  %195 = load i64, i64* %x5A0F5A0F.i, align 8
  %or53.i = or i64 %194, %195
  store i64 %or53.i, i64* %x5AFF5AFF.i, align 8
  %196 = load i64, i64* %x5AFF5AFF.i, align 8
  %197 = load i64, i64* %x2D4E49EA.i, align 8
  %neg54.i = xor i64 %197, -1
  %and55.i = and i64 %196, %neg54.i
  store i64 %and55.i, i64* %x52B11215.i, align 8
  %198 = load i64, i64* %x4A01CC93.i, align 8
  %199 = load i64, i64* %x6391D07C.i, align 8
  %and56.i = and i64 %198, %199
  store i64 %and56.i, i64* %x4201C010.i, align 8
  %200 = load i64, i64* %x52B11215.i, align 8
  %201 = load i64, i64* %x4201C010.i, align 8
  %xor57.i = xor i64 %200, %201
  store i64 %xor57.i, i64* %x10B0D205.i, align 8
  %202 = load i64, i64* %x10B0D205.i, align 8
  %203 = load i64, i64* %a2.addr.i, align 8
  %or58.i = or i64 %202, %203
  store i64 %or58.i, i64* %x30.i, align 8
  %204 = load i64, i64* %x30.i, align 8
  %205 = load i64, i64* %x0AD99996.i, align 8
  %xor59.i = xor i64 %204, %205
  store i64 %xor59.i, i64* %x31.i, align 8
  %206 = load i64*, i64** %out4.addr.i, align 8
  %207 = load i64, i64* %206, align 8
  %208 = load i64, i64* %x31.i, align 8
  %xor60.i = xor i64 %207, %208
  %209 = load i64*, i64** %out4.addr.i, align 8
  store i64 %xor60.i, i64* %209, align 8
  %210 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 6), align 8
  %arrayidx26 = getelementptr inbounds i64, i64* %210, i64 0
  %211 = load i64, i64* %arrayidx26, align 8
  %212 = load i64**, i64*** %k, align 8
  %arrayidx27 = getelementptr inbounds i64*, i64** %212, i64 6
  %213 = load i64*, i64** %arrayidx27, align 8
  %arrayidx28 = getelementptr inbounds i64, i64* %213, i64 0
  %214 = load i64, i64* %arrayidx28, align 8
  %xor29 = xor i64 %211, %214
  %215 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 7), align 8
  %arrayidx30 = getelementptr inbounds i64, i64* %215, i64 0
  %216 = load i64, i64* %arrayidx30, align 8
  %217 = load i64**, i64*** %k, align 8
  %arrayidx31 = getelementptr inbounds i64*, i64** %217, i64 7
  %218 = load i64*, i64** %arrayidx31, align 8
  %arrayidx32 = getelementptr inbounds i64, i64* %218, i64 0
  %219 = load i64, i64* %arrayidx32, align 8
  %xor33 = xor i64 %216, %219
  %220 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 8), align 8
  %arrayidx34 = getelementptr inbounds i64, i64* %220, i64 0
  %221 = load i64, i64* %arrayidx34, align 8
  %222 = load i64**, i64*** %k, align 8
  %arrayidx35 = getelementptr inbounds i64*, i64** %222, i64 8
  %223 = load i64*, i64** %arrayidx35, align 8
  %arrayidx36 = getelementptr inbounds i64, i64* %223, i64 0
  %224 = load i64, i64* %arrayidx36, align 8
  %xor37 = xor i64 %221, %224
  %225 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 9), align 8
  %arrayidx38 = getelementptr inbounds i64, i64* %225, i64 0
  %226 = load i64, i64* %arrayidx38, align 8
  %227 = load i64**, i64*** %k, align 8
  %arrayidx39 = getelementptr inbounds i64*, i64** %227, i64 9
  %228 = load i64*, i64** %arrayidx39, align 8
  %arrayidx40 = getelementptr inbounds i64, i64* %228, i64 0
  %229 = load i64, i64* %arrayidx40, align 8
  %xor41 = xor i64 %226, %229
  %230 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 10), align 8
  %arrayidx42 = getelementptr inbounds i64, i64* %230, i64 0
  %231 = load i64, i64* %arrayidx42, align 8
  %232 = load i64**, i64*** %k, align 8
  %arrayidx43 = getelementptr inbounds i64*, i64** %232, i64 10
  %233 = load i64*, i64** %arrayidx43, align 8
  %arrayidx44 = getelementptr inbounds i64, i64* %233, i64 0
  %234 = load i64, i64* %arrayidx44, align 8
  %xor45 = xor i64 %231, %234
  %235 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 11), align 8
  %arrayidx46 = getelementptr inbounds i64, i64* %235, i64 0
  %236 = load i64, i64* %arrayidx46, align 8
  %237 = load i64**, i64*** %k, align 8
  %arrayidx47 = getelementptr inbounds i64*, i64** %237, i64 11
  %238 = load i64*, i64** %arrayidx47, align 8
  %arrayidx48 = getelementptr inbounds i64, i64* %238, i64 0
  %239 = load i64, i64* %arrayidx48, align 8
  %xor49 = xor i64 %236, %239
  store i64 %xor29, i64* %a1.addr.i7952, align 8
  store i64 %xor33, i64* %a2.addr.i7953, align 8
  store i64 %xor37, i64* %a3.addr.i7954, align 8
  store i64 %xor41, i64* %a4.addr.i7955, align 8
  store i64 %xor45, i64* %a5.addr.i7956, align 8
  store i64 %xor49, i64* %a6.addr.i7957, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 44), i64** %out1.addr.i7958, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 59), i64** %out2.addr.i7959, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 33), i64** %out3.addr.i7960, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 49), i64** %out4.addr.i7961, align 8
  %240 = load i64, i64* %a2.addr.i7953, align 8
  %241 = load i64, i64* %a5.addr.i7956, align 8
  %xor.i8006 = xor i64 %240, %241
  store i64 %xor.i8006, i64* %x33CC33CC.i7962, align 8
  %242 = load i64, i64* %a1.addr.i7952, align 8
  %243 = load i64, i64* %a6.addr.i7957, align 8
  %neg.i8007 = xor i64 %243, -1
  %and.i8008 = and i64 %242, %neg.i8007
  store i64 %and.i8008, i64* %x55550000.i7963, align 8
  %244 = load i64, i64* %a5.addr.i7956, align 8
  %245 = load i64, i64* %x55550000.i7963, align 8
  %neg1.i8009 = xor i64 %245, -1
  %and2.i8010 = and i64 %244, %neg1.i8009
  store i64 %and2.i8010, i64* %x00AA00FF.i7964, align 8
  %246 = load i64, i64* %a2.addr.i7953, align 8
  %247 = load i64, i64* %x00AA00FF.i7964, align 8
  %or.i8011 = or i64 %246, %247
  store i64 %or.i8011, i64* %x33BB33FF.i7965, align 8
  %248 = load i64, i64* %x33CC33CC.i7962, align 8
  %249 = load i64, i64* %a6.addr.i7957, align 8
  %neg3.i8012 = xor i64 %249, -1
  %and4.i8013 = and i64 %248, %neg3.i8012
  store i64 %and4.i8013, i64* %x33CC0000.i7966, align 8
  %250 = load i64, i64* %a1.addr.i7952, align 8
  %251 = load i64, i64* %x33CC33CC.i7962, align 8
  %and5.i8014 = and i64 %250, %251
  store i64 %and5.i8014, i64* %x11441144.i7967, align 8
  %252 = load i64, i64* %a5.addr.i7956, align 8
  %253 = load i64, i64* %x11441144.i7967, align 8
  %xor6.i8015 = xor i64 %252, %253
  store i64 %xor6.i8015, i64* %x11BB11BB.i7968, align 8
  %254 = load i64, i64* %x11BB11BB.i7968, align 8
  %255 = load i64, i64* %x33CC0000.i7966, align 8
  %neg7.i8016 = xor i64 %255, -1
  %and8.i8017 = and i64 %254, %neg7.i8016
  store i64 %and8.i8017, i64* %x003311BB.i7969, align 8
  %256 = load i64, i64* %a3.addr.i7954, align 8
  %257 = load i64, i64* %a6.addr.i7957, align 8
  %and9.i8018 = and i64 %256, %257
  store i64 %and9.i8018, i64* %x00000F0F.i7970, align 8
  %258 = load i64, i64* %x00AA00FF.i7964, align 8
  %259 = load i64, i64* %x33CC0000.i7966, align 8
  %xor10.i8019 = xor i64 %258, %259
  store i64 %xor10.i8019, i64* %x336600FF.i7971, align 8
  %260 = load i64, i64* %x33BB33FF.i7965, align 8
  %261 = load i64, i64* %x336600FF.i7971, align 8
  %and11.i8020 = and i64 %260, %261
  store i64 %and11.i8020, i64* %x332200FF.i7972, align 8
  %262 = load i64, i64* %x332200FF.i7972, align 8
  %263 = load i64, i64* %x00000F0F.i7970, align 8
  %neg12.i8021 = xor i64 %263, -1
  %and13.i8022 = and i64 %262, %neg12.i8021
  store i64 %and13.i8022, i64* %x332200F0.i7973, align 8
  %264 = load i64, i64* %a3.addr.i7954, align 8
  %265 = load i64, i64* %x332200FF.i7972, align 8
  %and14.i8023 = and i64 %264, %265
  store i64 %and14.i8023, i64* %x0302000F.i7974, align 8
  %266 = load i64, i64* %a1.addr.i7952, align 8
  %neg15.i8024 = xor i64 %266, -1
  store i64 %neg15.i8024, i64* %xAAAAAAAA.i7975, align 8
  %267 = load i64, i64* %x0302000F.i7974, align 8
  %268 = load i64, i64* %xAAAAAAAA.i7975, align 8
  %xor16.i8025 = xor i64 %267, %268
  store i64 %xor16.i8025, i64* %xA9A8AAA5.i7976, align 8
  %269 = load i64, i64* %a6.addr.i7957, align 8
  %270 = load i64, i64* %x33CC33CC.i7962, align 8
  %xor17.i8026 = xor i64 %269, %270
  store i64 %xor17.i8026, i64* %x33CCCC33.i7977, align 8
  %271 = load i64, i64* %x33CCCC33.i7977, align 8
  %272 = load i64, i64* %x00000F0F.i7970, align 8
  %neg18.i8027 = xor i64 %272, -1
  %and19.i8028 = and i64 %271, %neg18.i8027
  store i64 %and19.i8028, i64* %x33CCC030.i7978, align 8
  %273 = load i64, i64* %xA9A8AAA5.i7976, align 8
  %274 = load i64, i64* %x33CCC030.i7978, align 8
  %xor20.i8029 = xor i64 %273, %274
  store i64 %xor20.i8029, i64* %x9A646A95.i7979, align 8
  %275 = load i64, i64* %a4.addr.i7955, align 8
  %276 = load i64, i64* %x332200F0.i7973, align 8
  %neg21.i8030 = xor i64 %276, -1
  %and22.i8031 = and i64 %275, %neg21.i8030
  store i64 %and22.i8031, i64* %x10.i8000, align 8
  %277 = load i64, i64* %x10.i8000, align 8
  %278 = load i64, i64* %x9A646A95.i7979, align 8
  %xor23.i8032 = xor i64 %277, %278
  store i64 %xor23.i8032, i64* %x11.i8001, align 8
  %279 = load i64*, i64** %out2.addr.i7959, align 8
  %280 = load i64, i64* %279, align 8
  %281 = load i64, i64* %x11.i8001, align 8
  %xor24.i8033 = xor i64 %280, %281
  %282 = load i64*, i64** %out2.addr.i7959, align 8
  store i64 %xor24.i8033, i64* %282, align 8
  %283 = load i64, i64* %a2.addr.i7953, align 8
  %284 = load i64, i64* %x33CCC030.i7978, align 8
  %neg25.i8034 = xor i64 %284, -1
  %and26.i8035 = and i64 %283, %neg25.i8034
  store i64 %and26.i8035, i64* %x00333303.i7980, align 8
  %285 = load i64, i64* %x11BB11BB.i7968, align 8
  %286 = load i64, i64* %x00333303.i7980, align 8
  %xor27.i8036 = xor i64 %285, %286
  store i64 %xor27.i8036, i64* %x118822B8.i7981, align 8
  %287 = load i64, i64* %xA9A8AAA5.i7976, align 8
  %288 = load i64, i64* %x118822B8.i7981, align 8
  %neg28.i8037 = xor i64 %288, -1
  %and29.i8038 = and i64 %287, %neg28.i8037
  store i64 %and29.i8038, i64* %xA8208805.i7982, align 8
  %289 = load i64, i64* %a3.addr.i7954, align 8
  %290 = load i64, i64* %x33CCCC33.i7977, align 8
  %xor30.i8039 = xor i64 %289, %290
  store i64 %xor30.i8039, i64* %x3CC3C33C.i7983, align 8
  %291 = load i64, i64* %xA8208805.i7982, align 8
  %292 = load i64, i64* %x3CC3C33C.i7983, align 8
  %xor31.i8040 = xor i64 %291, %292
  store i64 %xor31.i8040, i64* %x94E34B39.i7984, align 8
  %293 = load i64, i64* %x33BB33FF.i7965, align 8
  %294 = load i64, i64* %a4.addr.i7955, align 8
  %neg32.i8041 = xor i64 %294, -1
  %and33.i8042 = and i64 %293, %neg32.i8041
  store i64 %and33.i8042, i64* %x00.i7998, align 8
  %295 = load i64, i64* %x00.i7998, align 8
  %296 = load i64, i64* %x94E34B39.i7984, align 8
  %xor34.i8043 = xor i64 %295, %296
  store i64 %xor34.i8043, i64* %x01.i7999, align 8
  %297 = load i64*, i64** %out1.addr.i7958, align 8
  %298 = load i64, i64* %297, align 8
  %299 = load i64, i64* %x01.i7999, align 8
  %xor35.i8044 = xor i64 %298, %299
  %300 = load i64*, i64** %out1.addr.i7958, align 8
  store i64 %xor35.i8044, i64* %300, align 8
  %301 = load i64, i64* %x0302000F.i7974, align 8
  %302 = load i64, i64* %x00333303.i7980, align 8
  %xor36.i8045 = xor i64 %301, %302
  store i64 %xor36.i8045, i64* %x0331330C.i7985, align 8
  %303 = load i64, i64* %x3CC3C33C.i7983, align 8
  %304 = load i64, i64* %x0331330C.i7985, align 8
  %or37.i8046 = or i64 %303, %304
  store i64 %or37.i8046, i64* %x3FF3F33C.i7986, align 8
  %305 = load i64, i64* %x33BB33FF.i7965, align 8
  %306 = load i64, i64* %x9A646A95.i7979, align 8
  %xor38.i8047 = xor i64 %305, %306
  store i64 %xor38.i8047, i64* %xA9DF596A.i7987, align 8
  %307 = load i64, i64* %x00000F0F.i7970, align 8
  %308 = load i64, i64* %xA9DF596A.i7987, align 8
  %or39.i8048 = or i64 %307, %308
  store i64 %or39.i8048, i64* %xA9DF5F6F.i7988, align 8
  %309 = load i64, i64* %x3FF3F33C.i7986, align 8
  %310 = load i64, i64* %xA9DF5F6F.i7988, align 8
  %xor40.i8049 = xor i64 %309, %310
  store i64 %xor40.i8049, i64* %x962CAC53.i7989, align 8
  %311 = load i64, i64* %x94E34B39.i7984, align 8
  %312 = load i64, i64* %x0331330C.i7985, align 8
  %xor41.i8050 = xor i64 %311, %312
  store i64 %xor41.i8050, i64* %x97D27835.i7990, align 8
  %313 = load i64, i64* %xA9DF5F6F.i7988, align 8
  %314 = load i64, i64* %x97D27835.i7990, align 8
  %and42.i8051 = and i64 %313, %314
  store i64 %and42.i8051, i64* %x81D25825.i7991, align 8
  %315 = load i64, i64* %a5.addr.i7956, align 8
  %316 = load i64, i64* %x81D25825.i7991, align 8
  %xor43.i8052 = xor i64 %315, %316
  store i64 %xor43.i8052, i64* %x812D58DA.i7992, align 8
  %317 = load i64, i64* %x812D58DA.i7992, align 8
  %318 = load i64, i64* %x33CC0000.i7966, align 8
  %neg44.i8053 = xor i64 %318, -1
  %and45.i8054 = and i64 %317, %neg44.i8053
  store i64 %and45.i8054, i64* %x802158DA.i7993, align 8
  %319 = load i64, i64* %x9A646A95.i7979, align 8
  %320 = load i64, i64* %x802158DA.i7993, align 8
  %xor46.i8055 = xor i64 %319, %320
  store i64 %xor46.i8055, i64* %x1A45324F.i7994, align 8
  %321 = load i64, i64* %x1A45324F.i7994, align 8
  %322 = load i64, i64* %a4.addr.i7955, align 8
  %or47.i8056 = or i64 %321, %322
  store i64 %or47.i8056, i64* %x20.i8002, align 8
  %323 = load i64, i64* %x20.i8002, align 8
  %324 = load i64, i64* %x962CAC53.i7989, align 8
  %xor48.i8057 = xor i64 %323, %324
  store i64 %xor48.i8057, i64* %x21.i8003, align 8
  %325 = load i64*, i64** %out3.addr.i7960, align 8
  %326 = load i64, i64* %325, align 8
  %327 = load i64, i64* %x21.i8003, align 8
  %xor49.i8058 = xor i64 %326, %327
  %328 = load i64*, i64** %out3.addr.i7960, align 8
  store i64 %xor49.i8058, i64* %328, align 8
  %329 = load i64, i64* %x1A45324F.i7994, align 8
  %330 = load i64, i64* %x118822B8.i7981, align 8
  %neg50.i8059 = xor i64 %330, -1
  %and51.i8060 = and i64 %329, %neg50.i8059
  store i64 %and51.i8060, i64* %x0A451047.i7995, align 8
  %331 = load i64, i64* %x33CCCC33.i7977, align 8
  %332 = load i64, i64* %xA9DF596A.i7987, align 8
  %or52.i8061 = or i64 %331, %332
  store i64 %or52.i8061, i64* %xBBDFDD7B.i7996, align 8
  %333 = load i64, i64* %x0A451047.i7995, align 8
  %334 = load i64, i64* %xBBDFDD7B.i7996, align 8
  %xor53.i8062 = xor i64 %333, %334
  store i64 %xor53.i8062, i64* %xB19ACD3C.i7997, align 8
  %335 = load i64, i64* %x003311BB.i7969, align 8
  %336 = load i64, i64* %a4.addr.i7955, align 8
  %or54.i8063 = or i64 %335, %336
  store i64 %or54.i8063, i64* %x30.i8004, align 8
  %337 = load i64, i64* %x30.i8004, align 8
  %338 = load i64, i64* %xB19ACD3C.i7997, align 8
  %xor55.i8064 = xor i64 %337, %338
  store i64 %xor55.i8064, i64* %x31.i8005, align 8
  %339 = load i64*, i64** %out4.addr.i7961, align 8
  %340 = load i64, i64* %339, align 8
  %341 = load i64, i64* %x31.i8005, align 8
  %xor56.i8065 = xor i64 %340, %341
  %342 = load i64*, i64** %out4.addr.i7961, align 8
  store i64 %xor56.i8065, i64* %342, align 8
  %343 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 7), align 8
  %344 = load i64**, i64*** %k, align 8
  %arrayidx50 = getelementptr inbounds i64*, i64** %344, i64 12
  %345 = load i64*, i64** %arrayidx50, align 8
  %arrayidx51 = getelementptr inbounds i64, i64* %345, i64 0
  %346 = load i64, i64* %arrayidx51, align 8
  %xor52 = xor i64 %343, %346
  %347 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 8), align 8
  %348 = load i64**, i64*** %k, align 8
  %arrayidx53 = getelementptr inbounds i64*, i64** %348, i64 13
  %349 = load i64*, i64** %arrayidx53, align 8
  %arrayidx54 = getelementptr inbounds i64, i64* %349, i64 0
  %350 = load i64, i64* %arrayidx54, align 8
  %xor55 = xor i64 %347, %350
  %351 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 9), align 8
  %352 = load i64**, i64*** %k, align 8
  %arrayidx56 = getelementptr inbounds i64*, i64** %352, i64 14
  %353 = load i64*, i64** %arrayidx56, align 8
  %arrayidx57 = getelementptr inbounds i64, i64* %353, i64 0
  %354 = load i64, i64* %arrayidx57, align 8
  %xor58 = xor i64 %351, %354
  %355 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 10), align 8
  %356 = load i64**, i64*** %k, align 8
  %arrayidx59 = getelementptr inbounds i64*, i64** %356, i64 15
  %357 = load i64*, i64** %arrayidx59, align 8
  %arrayidx60 = getelementptr inbounds i64, i64* %357, i64 0
  %358 = load i64, i64* %arrayidx60, align 8
  %xor61 = xor i64 %355, %358
  %359 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 11), align 8
  %360 = load i64**, i64*** %k, align 8
  %arrayidx62 = getelementptr inbounds i64*, i64** %360, i64 16
  %361 = load i64*, i64** %arrayidx62, align 8
  %arrayidx63 = getelementptr inbounds i64, i64* %361, i64 0
  %362 = load i64, i64* %arrayidx63, align 8
  %xor64 = xor i64 %359, %362
  %363 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 12), align 8
  %364 = load i64**, i64*** %k, align 8
  %arrayidx65 = getelementptr inbounds i64*, i64** %364, i64 17
  %365 = load i64*, i64** %arrayidx65, align 8
  %arrayidx66 = getelementptr inbounds i64, i64* %365, i64 0
  %366 = load i64, i64* %arrayidx66, align 8
  %xor67 = xor i64 %363, %366
  store i64 %xor52, i64* %a1.addr.i7832, align 8
  store i64 %xor55, i64* %a2.addr.i7833, align 8
  store i64 %xor58, i64* %a3.addr.i7834, align 8
  store i64 %xor61, i64* %a4.addr.i7835, align 8
  store i64 %xor64, i64* %a5.addr.i7836, align 8
  store i64 %xor67, i64* %a6.addr.i7837, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 55), i64** %out1.addr.i7838, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 47), i64** %out2.addr.i7839, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 61), i64** %out3.addr.i7840, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 37), i64** %out4.addr.i7841, align 8
  %367 = load i64, i64* %a1.addr.i7832, align 8
  %368 = load i64, i64* %a2.addr.i7833, align 8
  %neg.i7888 = xor i64 %368, -1
  %and.i7889 = and i64 %367, %neg.i7888
  store i64 %and.i7889, i64* %x44444444.i7842, align 8
  %369 = load i64, i64* %a3.addr.i7834, align 8
  %370 = load i64, i64* %a6.addr.i7837, align 8
  %xor.i7890 = xor i64 %369, %370
  store i64 %xor.i7890, i64* %x0F0FF0F0.i7843, align 8
  %371 = load i64, i64* %x44444444.i7842, align 8
  %372 = load i64, i64* %x0F0FF0F0.i7843, align 8
  %or.i7891 = or i64 %371, %372
  store i64 %or.i7891, i64* %x4F4FF4F4.i7844, align 8
  %373 = load i64, i64* %a4.addr.i7835, align 8
  %374 = load i64, i64* %a6.addr.i7837, align 8
  %xor1.i7892 = xor i64 %373, %374
  store i64 %xor1.i7892, i64* %x00FFFF00.i7845, align 8
  %375 = load i64, i64* %x00FFFF00.i7845, align 8
  %376 = load i64, i64* %a1.addr.i7832, align 8
  %neg2.i7893 = xor i64 %376, -1
  %and3.i7894 = and i64 %375, %neg2.i7893
  store i64 %and3.i7894, i64* %x00AAAA00.i7846, align 8
  %377 = load i64, i64* %x4F4FF4F4.i7844, align 8
  %378 = load i64, i64* %x00AAAA00.i7846, align 8
  %xor4.i7895 = xor i64 %377, %378
  store i64 %xor4.i7895, i64* %x4FE55EF4.i7847, align 8
  %379 = load i64, i64* %a2.addr.i7833, align 8
  %380 = load i64, i64* %x0F0FF0F0.i7843, align 8
  %xor5.i7896 = xor i64 %379, %380
  store i64 %xor5.i7896, i64* %x3C3CC3C3.i7848, align 8
  %381 = load i64, i64* %x3C3CC3C3.i7848, align 8
  %382 = load i64, i64* %a6.addr.i7837, align 8
  %neg6.i7897 = xor i64 %382, -1
  %and7.i7898 = and i64 %381, %neg6.i7897
  store i64 %and7.i7898, i64* %x3C3C0000.i7849, align 8
  %383 = load i64, i64* %x4F4FF4F4.i7844, align 8
  %384 = load i64, i64* %x3C3C0000.i7849, align 8
  %xor8.i7899 = xor i64 %383, %384
  store i64 %xor8.i7899, i64* %x7373F4F4.i7850, align 8
  %385 = load i64, i64* %x4FE55EF4.i7847, align 8
  %386 = load i64, i64* %x7373F4F4.i7850, align 8
  %neg9.i7900 = xor i64 %386, -1
  %and10.i7901 = and i64 %385, %neg9.i7900
  store i64 %and10.i7901, i64* %x0C840A00.i7851, align 8
  %387 = load i64, i64* %a6.addr.i7837, align 8
  %388 = load i64, i64* %x4FE55EF4.i7847, align 8
  %and11.i7902 = and i64 %387, %388
  store i64 %and11.i7902, i64* %x00005EF4.i7852, align 8
  %389 = load i64, i64* %a4.addr.i7835, align 8
  %390 = load i64, i64* %x00005EF4.i7852, align 8
  %or12.i7903 = or i64 %389, %390
  store i64 %or12.i7903, i64* %x00FF5EFF.i7853, align 8
  %391 = load i64, i64* %a1.addr.i7832, align 8
  %392 = load i64, i64* %x00FF5EFF.i7853, align 8
  %and13.i7904 = and i64 %391, %392
  store i64 %and13.i7904, i64* %x00555455.i7854, align 8
  %393 = load i64, i64* %x3C3CC3C3.i7848, align 8
  %394 = load i64, i64* %x00555455.i7854, align 8
  %xor14.i7905 = xor i64 %393, %394
  store i64 %xor14.i7905, i64* %x3C699796.i7855, align 8
  %395 = load i64, i64* %x4FE55EF4.i7847, align 8
  %396 = load i64, i64* %a5.addr.i7836, align 8
  %neg15.i7906 = xor i64 %396, -1
  %and16.i7907 = and i64 %395, %neg15.i7906
  store i64 %and16.i7907, i64* %x30.i7886, align 8
  %397 = load i64, i64* %x30.i7886, align 8
  %398 = load i64, i64* %x3C699796.i7855, align 8
  %xor17.i7908 = xor i64 %397, %398
  store i64 %xor17.i7908, i64* %x31.i7887, align 8
  %399 = load i64*, i64** %out4.addr.i7841, align 8
  %400 = load i64, i64* %399, align 8
  %401 = load i64, i64* %x31.i7887, align 8
  %xor18.i7909 = xor i64 %400, %401
  %402 = load i64*, i64** %out4.addr.i7841, align 8
  store i64 %xor18.i7909, i64* %402, align 8
  %403 = load i64, i64* %x0F0FF0F0.i7843, align 8
  %404 = load i64, i64* %x00FFFF00.i7845, align 8
  %and19.i7910 = and i64 %403, %404
  store i64 %and19.i7910, i64* %x000FF000.i7856, align 8
  %405 = load i64, i64* %a1.addr.i7832, align 8
  %406 = load i64, i64* %a4.addr.i7835, align 8
  %xor20.i7911 = xor i64 %405, %406
  store i64 %xor20.i7911, i64* %x55AA55AA.i7857, align 8
  %407 = load i64, i64* %x7373F4F4.i7850, align 8
  %408 = load i64, i64* %x55AA55AA.i7857, align 8
  %xor21.i7912 = xor i64 %407, %408
  store i64 %xor21.i7912, i64* %x26D9A15E.i7858, align 8
  %409 = load i64, i64* %a3.addr.i7834, align 8
  %410 = load i64, i64* %x26D9A15E.i7858, align 8
  %or22.i7913 = or i64 %409, %410
  store i64 %or22.i7913, i64* %x2FDFAF5F.i7859, align 8
  %411 = load i64, i64* %x2FDFAF5F.i7859, align 8
  %412 = load i64, i64* %x000FF000.i7856, align 8
  %neg23.i7914 = xor i64 %412, -1
  %and24.i7915 = and i64 %411, %neg23.i7914
  store i64 %and24.i7915, i64* %x2FD00F5F.i7860, align 8
  %413 = load i64, i64* %x00AAAA00.i7846, align 8
  %414 = load i64, i64* %x55AA55AA.i7857, align 8
  %or25.i7916 = or i64 %413, %414
  store i64 %or25.i7916, i64* %x55AAFFAA.i7861, align 8
  %415 = load i64, i64* %x3C699796.i7855, align 8
  %416 = load i64, i64* %x55AAFFAA.i7861, align 8
  %neg26.i7917 = xor i64 %416, -1
  %and27.i7918 = and i64 %415, %neg26.i7917
  store i64 %and27.i7918, i64* %x28410014.i7862, align 8
  %417 = load i64, i64* %a4.addr.i7835, align 8
  %418 = load i64, i64* %a6.addr.i7837, align 8
  %and28.i7919 = and i64 %417, %418
  store i64 %and28.i7919, i64* %x000000FF.i7863, align 8
  %419 = load i64, i64* %x000000FF.i7863, align 8
  %420 = load i64, i64* %a2.addr.i7833, align 8
  %neg29.i7920 = xor i64 %420, -1
  %and30.i7921 = and i64 %419, %neg29.i7920
  store i64 %and30.i7921, i64* %x000000CC.i7864, align 8
  %421 = load i64, i64* %x28410014.i7862, align 8
  %422 = load i64, i64* %x000000CC.i7864, align 8
  %xor31.i7922 = xor i64 %421, %422
  store i64 %xor31.i7922, i64* %x284100D8.i7865, align 8
  %423 = load i64, i64* %x284100D8.i7865, align 8
  %424 = load i64, i64* %a3.addr.i7834, align 8
  %neg32.i7923 = xor i64 %424, -1
  %and33.i7924 = and i64 %423, %neg32.i7923
  store i64 %and33.i7924, i64* %x204000D0.i7866, align 8
  %425 = load i64, i64* %x3C3CC3C3.i7848, align 8
  %426 = load i64, i64* %x000000FF.i7863, align 8
  %or34.i7925 = or i64 %425, %426
  store i64 %or34.i7925, i64* %x3C3CC3FF.i7867, align 8
  %427 = load i64, i64* %x3C3CC3FF.i7867, align 8
  %428 = load i64, i64* %x204000D0.i7866, align 8
  %neg35.i7926 = xor i64 %428, -1
  %and36.i7927 = and i64 %427, %neg35.i7926
  store i64 %and36.i7927, i64* %x1C3CC32F.i7868, align 8
  %429 = load i64, i64* %a1.addr.i7832, align 8
  %430 = load i64, i64* %x1C3CC32F.i7868, align 8
  %xor37.i7928 = xor i64 %429, %430
  store i64 %xor37.i7928, i64* %x4969967A.i7869, align 8
  %431 = load i64, i64* %x2FD00F5F.i7860, align 8
  %432 = load i64, i64* %a5.addr.i7836, align 8
  %and38.i7929 = and i64 %431, %432
  store i64 %and38.i7929, i64* %x10.i7882, align 8
  %433 = load i64, i64* %x10.i7882, align 8
  %434 = load i64, i64* %x4969967A.i7869, align 8
  %xor39.i7930 = xor i64 %433, %434
  store i64 %xor39.i7930, i64* %x11.i7883, align 8
  %435 = load i64*, i64** %out2.addr.i7839, align 8
  %436 = load i64, i64* %435, align 8
  %437 = load i64, i64* %x11.i7883, align 8
  %xor40.i7931 = xor i64 %436, %437
  %438 = load i64*, i64** %out2.addr.i7839, align 8
  store i64 %xor40.i7931, i64* %438, align 8
  %439 = load i64, i64* %x4FE55EF4.i7847, align 8
  %440 = load i64, i64* %a2.addr.i7833, align 8
  %neg41.i7932 = xor i64 %440, -1
  %and42.i7933 = and i64 %439, %neg41.i7932
  store i64 %and42.i7933, i64* %x4CC44CC4.i7870, align 8
  %441 = load i64, i64* %x4CC44CC4.i7870, align 8
  %442 = load i64, i64* %a3.addr.i7834, align 8
  %neg43.i7934 = xor i64 %442, -1
  %and44.i7935 = and i64 %441, %neg43.i7934
  store i64 %and44.i7935, i64* %x40C040C0.i7871, align 8
  %443 = load i64, i64* %x3C3CC3C3.i7848, align 8
  %444 = load i64, i64* %x55AAFFAA.i7861, align 8
  %xor45.i7936 = xor i64 %443, %444
  store i64 %xor45.i7936, i64* %x69963C69.i7872, align 8
  %445 = load i64, i64* %x69963C69.i7872, align 8
  %neg46.i7937 = xor i64 %445, -1
  store i64 %neg46.i7937, i64* %x9669C396.i7873, align 8
  %446 = load i64, i64* %x40C040C0.i7871, align 8
  %447 = load i64, i64* %x9669C396.i7873, align 8
  %xor47.i7938 = xor i64 %446, %447
  store i64 %xor47.i7938, i64* %xD6A98356.i7874, align 8
  %448 = load i64, i64* %a5.addr.i7836, align 8
  %449 = load i64, i64* %x0C840A00.i7851, align 8
  %neg48.i7939 = xor i64 %449, -1
  %and49.i7940 = and i64 %448, %neg48.i7939
  store i64 %and49.i7940, i64* %x00.i7880, align 8
  %450 = load i64, i64* %x00.i7880, align 8
  %451 = load i64, i64* %xD6A98356.i7874, align 8
  %xor50.i7941 = xor i64 %450, %451
  store i64 %xor50.i7941, i64* %x01.i7881, align 8
  %452 = load i64*, i64** %out1.addr.i7838, align 8
  %453 = load i64, i64* %452, align 8
  %454 = load i64, i64* %x01.i7881, align 8
  %xor51.i7942 = xor i64 %453, %454
  %455 = load i64*, i64** %out1.addr.i7838, align 8
  store i64 %xor51.i7942, i64* %455, align 8
  %456 = load i64, i64* %a4.addr.i7835, align 8
  %457 = load i64, i64* %x0F0FF0F0.i7843, align 8
  %and52.i7943 = and i64 %456, %457
  store i64 %and52.i7943, i64* %x000F00F0.i7875, align 8
  %458 = load i64, i64* %x3C3CC3C3.i7848, align 8
  %459 = load i64, i64* %xD6A98356.i7874, align 8
  %or53.i7944 = or i64 %458, %459
  store i64 %or53.i7944, i64* %xFEBDC3D7.i7876, align 8
  %460 = load i64, i64* %xFEBDC3D7.i7876, align 8
  %461 = load i64, i64* %x000F00F0.i7875, align 8
  %neg54.i7945 = xor i64 %461, -1
  %and55.i7946 = and i64 %460, %neg54.i7945
  store i64 %and55.i7946, i64* %xFEB0C307.i7877, align 8
  %462 = load i64, i64* %x00AAAA00.i7846, align 8
  %463 = load i64, i64* %x4CC44CC4.i7870, align 8
  %or56.i7947 = or i64 %462, %463
  store i64 %or56.i7947, i64* %x4CEEEEC4.i7878, align 8
  %464 = load i64, i64* %xFEB0C307.i7877, align 8
  %465 = load i64, i64* %x4CEEEEC4.i7878, align 8
  %xor57.i7948 = xor i64 %464, %465
  store i64 %xor57.i7948, i64* %xB25E2DC3.i7879, align 8
  %466 = load i64, i64* %x284100D8.i7865, align 8
  %467 = load i64, i64* %a5.addr.i7836, align 8
  %or58.i7949 = or i64 %466, %467
  store i64 %or58.i7949, i64* %x20.i7884, align 8
  %468 = load i64, i64* %x20.i7884, align 8
  %469 = load i64, i64* %xB25E2DC3.i7879, align 8
  %xor59.i7950 = xor i64 %468, %469
  store i64 %xor59.i7950, i64* %x21.i7885, align 8
  %470 = load i64*, i64** %out3.addr.i7840, align 8
  %471 = load i64, i64* %470, align 8
  %472 = load i64, i64* %x21.i7885, align 8
  %xor60.i7951 = xor i64 %471, %472
  %473 = load i64*, i64** %out3.addr.i7840, align 8
  store i64 %xor60.i7951, i64* %473, align 8
  %474 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 11), align 8
  %475 = load i64**, i64*** %k, align 8
  %arrayidx68 = getelementptr inbounds i64*, i64** %475, i64 18
  %476 = load i64*, i64** %arrayidx68, align 8
  %arrayidx69 = getelementptr inbounds i64, i64* %476, i64 0
  %477 = load i64, i64* %arrayidx69, align 8
  %xor70 = xor i64 %474, %477
  %478 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 12), align 8
  %479 = load i64**, i64*** %k, align 8
  %arrayidx71 = getelementptr inbounds i64*, i64** %479, i64 19
  %480 = load i64*, i64** %arrayidx71, align 8
  %arrayidx72 = getelementptr inbounds i64, i64* %480, i64 0
  %481 = load i64, i64* %arrayidx72, align 8
  %xor73 = xor i64 %478, %481
  %482 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 13), align 8
  %483 = load i64**, i64*** %k, align 8
  %arrayidx74 = getelementptr inbounds i64*, i64** %483, i64 20
  %484 = load i64*, i64** %arrayidx74, align 8
  %arrayidx75 = getelementptr inbounds i64, i64* %484, i64 0
  %485 = load i64, i64* %arrayidx75, align 8
  %xor76 = xor i64 %482, %485
  %486 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 14), align 8
  %487 = load i64**, i64*** %k, align 8
  %arrayidx77 = getelementptr inbounds i64*, i64** %487, i64 21
  %488 = load i64*, i64** %arrayidx77, align 8
  %arrayidx78 = getelementptr inbounds i64, i64* %488, i64 0
  %489 = load i64, i64* %arrayidx78, align 8
  %xor79 = xor i64 %486, %489
  %490 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 15), align 8
  %491 = load i64**, i64*** %k, align 8
  %arrayidx80 = getelementptr inbounds i64*, i64** %491, i64 22
  %492 = load i64*, i64** %arrayidx80, align 8
  %arrayidx81 = getelementptr inbounds i64, i64* %492, i64 0
  %493 = load i64, i64* %arrayidx81, align 8
  %xor82 = xor i64 %490, %493
  %494 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 16), align 8
  %495 = load i64**, i64*** %k, align 8
  %arrayidx83 = getelementptr inbounds i64*, i64** %495, i64 23
  %496 = load i64*, i64** %arrayidx83, align 8
  %arrayidx84 = getelementptr inbounds i64, i64* %496, i64 0
  %497 = load i64, i64* %arrayidx84, align 8
  %xor85 = xor i64 %494, %497
  store i64 %xor70, i64* %a1.addr.i7743, align 8
  store i64 %xor73, i64* %a2.addr.i7744, align 8
  store i64 %xor76, i64* %a3.addr.i7745, align 8
  store i64 %xor79, i64* %a4.addr.i7746, align 8
  store i64 %xor82, i64* %a5.addr.i7747, align 8
  store i64 %xor85, i64* %a6.addr.i7748, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 57), i64** %out1.addr.i7749, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 51), i64** %out2.addr.i7750, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 41), i64** %out3.addr.i7751, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 32), i64** %out4.addr.i7752, align 8
  %498 = load i64, i64* %a1.addr.i7743, align 8
  %499 = load i64, i64* %a3.addr.i7745, align 8
  %xor.i7786 = xor i64 %498, %499
  store i64 %xor.i7786, i64* %x5A5A5A5A.i7753, align 8
  %500 = load i64, i64* %a3.addr.i7745, align 8
  %501 = load i64, i64* %a5.addr.i7747, align 8
  %xor1.i7787 = xor i64 %500, %501
  store i64 %xor1.i7787, i64* %x0F0FF0F0.i7754, align 8
  %502 = load i64, i64* %a2.addr.i7744, align 8
  %503 = load i64, i64* %a4.addr.i7746, align 8
  %or.i7788 = or i64 %502, %503
  store i64 %or.i7788, i64* %x33FF33FF.i7755, align 8
  %504 = load i64, i64* %a5.addr.i7747, align 8
  %505 = load i64, i64* %x33FF33FF.i7755, align 8
  %xor2.i7789 = xor i64 %504, %505
  store i64 %xor2.i7789, i64* %x33FFCC00.i7756, align 8
  %506 = load i64, i64* %x0F0FF0F0.i7754, align 8
  %507 = load i64, i64* %x33FFCC00.i7756, align 8
  %neg.i7790 = xor i64 %507, -1
  %and.i7791 = and i64 %506, %neg.i7790
  store i64 %and.i7791, i64* %x0C0030F0.i7757, align 8
  %508 = load i64, i64* %x0F0FF0F0.i7754, align 8
  %509 = load i64, i64* %a2.addr.i7744, align 8
  %neg3.i7792 = xor i64 %509, -1
  %and4.i7793 = and i64 %508, %neg3.i7792
  store i64 %and4.i7793, i64* %x0C0CC0C0.i7758, align 8
  %510 = load i64, i64* %a4.addr.i7746, align 8
  %511 = load i64, i64* %x0C0CC0C0.i7758, align 8
  %xor5.i7794 = xor i64 %510, %511
  store i64 %xor5.i7794, i64* %x0CF3C03F.i7759, align 8
  %512 = load i64, i64* %x5A5A5A5A.i7753, align 8
  %513 = load i64, i64* %x0CF3C03F.i7759, align 8
  %or6.i7795 = or i64 %512, %513
  store i64 %or6.i7795, i64* %x5EFBDA7F.i7760, align 8
  %514 = load i64, i64* %x5EFBDA7F.i7760, align 8
  %515 = load i64, i64* %x0C0030F0.i7757, align 8
  %neg7.i7796 = xor i64 %515, -1
  %and8.i7797 = and i64 %514, %neg7.i7796
  store i64 %and8.i7797, i64* %x52FBCA0F.i7761, align 8
  %516 = load i64, i64* %a2.addr.i7744, align 8
  %517 = load i64, i64* %x52FBCA0F.i7761, align 8
  %xor9.i7798 = xor i64 %516, %517
  store i64 %xor9.i7798, i64* %x61C8F93C.i7762, align 8
  %518 = load i64, i64* %x0CF3C03F.i7759, align 8
  %519 = load i64, i64* %x61C8F93C.i7762, align 8
  %and10.i7799 = and i64 %518, %519
  store i64 %and10.i7799, i64* %x00C0C03C.i7763, align 8
  %520 = load i64, i64* %x0F0FF0F0.i7754, align 8
  %521 = load i64, i64* %x00C0C03C.i7763, align 8
  %neg11.i7800 = xor i64 %521, -1
  %and12.i7801 = and i64 %520, %neg11.i7800
  store i64 %and12.i7801, i64* %x0F0F30C0.i7764, align 8
  %522 = load i64, i64* %x5A5A5A5A.i7753, align 8
  %523 = load i64, i64* %x61C8F93C.i7762, align 8
  %xor13.i7802 = xor i64 %522, %523
  store i64 %xor13.i7802, i64* %x3B92A366.i7765, align 8
  %524 = load i64, i64* %x3B92A366.i7765, align 8
  %525 = load i64, i64* %x0F0F30C0.i7764, align 8
  %neg14.i7803 = xor i64 %525, -1
  %and15.i7804 = and i64 %524, %neg14.i7803
  store i64 %and15.i7804, i64* %x30908326.i7766, align 8
  %526 = load i64, i64* %x0C0030F0.i7757, align 8
  %527 = load i64, i64* %x30908326.i7766, align 8
  %xor16.i7805 = xor i64 %526, %527
  store i64 %xor16.i7805, i64* %x3C90B3D6.i7767, align 8
  %528 = load i64, i64* %a2.addr.i7744, align 8
  %529 = load i64, i64* %a4.addr.i7746, align 8
  %xor17.i7806 = xor i64 %528, %529
  store i64 %xor17.i7806, i64* %x33CC33CC.i7768, align 8
  %530 = load i64, i64* %a5.addr.i7747, align 8
  %531 = load i64, i64* %x0C0CC0C0.i7758, align 8
  %or18.i7807 = or i64 %530, %531
  store i64 %or18.i7807, i64* %x0C0CFFFF.i7769, align 8
  %532 = load i64, i64* %x3B92A366.i7765, align 8
  %533 = load i64, i64* %x0C0CFFFF.i7769, align 8
  %xor19.i7808 = xor i64 %532, %533
  store i64 %xor19.i7808, i64* %x379E5C99.i7770, align 8
  %534 = load i64, i64* %x379E5C99.i7770, align 8
  %535 = load i64, i64* %x33CC33CC.i7768, align 8
  %neg20.i7809 = xor i64 %535, -1
  %and21.i7810 = and i64 %534, %neg20.i7809
  store i64 %and21.i7810, i64* %x04124C11.i7771, align 8
  %536 = load i64, i64* %x52FBCA0F.i7761, align 8
  %537 = load i64, i64* %x04124C11.i7771, align 8
  %xor22.i7811 = xor i64 %536, %537
  store i64 %xor22.i7811, i64* %x56E9861E.i7772, align 8
  %538 = load i64, i64* %a6.addr.i7748, align 8
  %539 = load i64, i64* %x3C90B3D6.i7767, align 8
  %neg23.i7812 = xor i64 %539, -1
  %and24.i7813 = and i64 %538, %neg23.i7812
  store i64 %and24.i7813, i64* %x00.i7778, align 8
  %540 = load i64, i64* %x00.i7778, align 8
  %541 = load i64, i64* %x56E9861E.i7772, align 8
  %xor25.i7814 = xor i64 %540, %541
  store i64 %xor25.i7814, i64* %x01.i7779, align 8
  %542 = load i64*, i64** %out1.addr.i7749, align 8
  %543 = load i64, i64* %542, align 8
  %544 = load i64, i64* %x01.i7779, align 8
  %xor26.i7815 = xor i64 %543, %544
  %545 = load i64*, i64** %out1.addr.i7749, align 8
  store i64 %xor26.i7815, i64* %545, align 8
  %546 = load i64, i64* %x56E9861E.i7772, align 8
  %neg27.i7816 = xor i64 %546, -1
  store i64 %neg27.i7816, i64* %xA91679E1.i7773, align 8
  %547 = load i64, i64* %x3C90B3D6.i7767, align 8
  %548 = load i64, i64* %a6.addr.i7748, align 8
  %neg28.i7817 = xor i64 %548, -1
  %and29.i7818 = and i64 %547, %neg28.i7817
  store i64 %and29.i7818, i64* %x10.i7780, align 8
  %549 = load i64, i64* %x10.i7780, align 8
  %550 = load i64, i64* %xA91679E1.i7773, align 8
  %xor30.i7819 = xor i64 %549, %550
  store i64 %xor30.i7819, i64* %x11.i7781, align 8
  %551 = load i64*, i64** %out2.addr.i7750, align 8
  %552 = load i64, i64* %551, align 8
  %553 = load i64, i64* %x11.i7781, align 8
  %xor31.i7820 = xor i64 %552, %553
  %554 = load i64*, i64** %out2.addr.i7750, align 8
  store i64 %xor31.i7820, i64* %554, align 8
  %555 = load i64, i64* %x3C90B3D6.i7767, align 8
  %556 = load i64, i64* %xA91679E1.i7773, align 8
  %xor32.i7821 = xor i64 %555, %556
  store i64 %xor32.i7821, i64* %x9586CA37.i7774, align 8
  %557 = load i64, i64* %x9586CA37.i7774, align 8
  %558 = load i64, i64* %x33CC33CC.i7768, align 8
  %neg33.i7822 = xor i64 %558, -1
  %and34.i7823 = and i64 %557, %neg33.i7822
  store i64 %and34.i7823, i64* %x8402C833.i7775, align 8
  %559 = load i64, i64* %x00C0C03C.i7763, align 8
  %560 = load i64, i64* %x8402C833.i7775, align 8
  %or35.i7824 = or i64 %559, %560
  store i64 %or35.i7824, i64* %x84C2C83F.i7776, align 8
  %561 = load i64, i64* %x379E5C99.i7770, align 8
  %562 = load i64, i64* %x84C2C83F.i7776, align 8
  %xor36.i7825 = xor i64 %561, %562
  store i64 %xor36.i7825, i64* %xB35C94A6.i7777, align 8
  %563 = load i64, i64* %x61C8F93C.i7762, align 8
  %564 = load i64, i64* %a6.addr.i7748, align 8
  %or37.i7826 = or i64 %563, %564
  store i64 %or37.i7826, i64* %x20.i7782, align 8
  %565 = load i64, i64* %x20.i7782, align 8
  %566 = load i64, i64* %xB35C94A6.i7777, align 8
  %xor38.i7827 = xor i64 %565, %566
  store i64 %xor38.i7827, i64* %x21.i7783, align 8
  %567 = load i64*, i64** %out3.addr.i7751, align 8
  %568 = load i64, i64* %567, align 8
  %569 = load i64, i64* %x21.i7783, align 8
  %xor39.i7828 = xor i64 %568, %569
  %570 = load i64*, i64** %out3.addr.i7751, align 8
  store i64 %xor39.i7828, i64* %570, align 8
  %571 = load i64, i64* %a6.addr.i7748, align 8
  %572 = load i64, i64* %x61C8F93C.i7762, align 8
  %and40.i7829 = and i64 %571, %572
  store i64 %and40.i7829, i64* %x30.i7784, align 8
  %573 = load i64, i64* %x30.i7784, align 8
  %574 = load i64, i64* %xB35C94A6.i7777, align 8
  %xor41.i7830 = xor i64 %573, %574
  store i64 %xor41.i7830, i64* %x31.i7785, align 8
  %575 = load i64*, i64** %out4.addr.i7752, align 8
  %576 = load i64, i64* %575, align 8
  %577 = load i64, i64* %x31.i7785, align 8
  %xor42.i7831 = xor i64 %576, %577
  %578 = load i64*, i64** %out4.addr.i7752, align 8
  store i64 %xor42.i7831, i64* %578, align 8
  %579 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 24), align 8
  %arrayidx86 = getelementptr inbounds i64, i64* %579, i64 0
  %580 = load i64, i64* %arrayidx86, align 8
  %581 = load i64**, i64*** %k, align 8
  %arrayidx87 = getelementptr inbounds i64*, i64** %581, i64 24
  %582 = load i64*, i64** %arrayidx87, align 8
  %arrayidx88 = getelementptr inbounds i64, i64* %582, i64 0
  %583 = load i64, i64* %arrayidx88, align 8
  %xor89 = xor i64 %580, %583
  %584 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 25), align 8
  %arrayidx90 = getelementptr inbounds i64, i64* %584, i64 0
  %585 = load i64, i64* %arrayidx90, align 8
  %586 = load i64**, i64*** %k, align 8
  %arrayidx91 = getelementptr inbounds i64*, i64** %586, i64 25
  %587 = load i64*, i64** %arrayidx91, align 8
  %arrayidx92 = getelementptr inbounds i64, i64* %587, i64 0
  %588 = load i64, i64* %arrayidx92, align 8
  %xor93 = xor i64 %585, %588
  %589 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 26), align 8
  %arrayidx94 = getelementptr inbounds i64, i64* %589, i64 0
  %590 = load i64, i64* %arrayidx94, align 8
  %591 = load i64**, i64*** %k, align 8
  %arrayidx95 = getelementptr inbounds i64*, i64** %591, i64 26
  %592 = load i64*, i64** %arrayidx95, align 8
  %arrayidx96 = getelementptr inbounds i64, i64* %592, i64 0
  %593 = load i64, i64* %arrayidx96, align 8
  %xor97 = xor i64 %590, %593
  %594 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 27), align 8
  %arrayidx98 = getelementptr inbounds i64, i64* %594, i64 0
  %595 = load i64, i64* %arrayidx98, align 8
  %596 = load i64**, i64*** %k, align 8
  %arrayidx99 = getelementptr inbounds i64*, i64** %596, i64 27
  %597 = load i64*, i64** %arrayidx99, align 8
  %arrayidx100 = getelementptr inbounds i64, i64* %597, i64 0
  %598 = load i64, i64* %arrayidx100, align 8
  %xor101 = xor i64 %595, %598
  %599 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 28), align 8
  %arrayidx102 = getelementptr inbounds i64, i64* %599, i64 0
  %600 = load i64, i64* %arrayidx102, align 8
  %601 = load i64**, i64*** %k, align 8
  %arrayidx103 = getelementptr inbounds i64*, i64** %601, i64 28
  %602 = load i64*, i64** %arrayidx103, align 8
  %arrayidx104 = getelementptr inbounds i64, i64* %602, i64 0
  %603 = load i64, i64* %arrayidx104, align 8
  %xor105 = xor i64 %600, %603
  %604 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 29), align 8
  %arrayidx106 = getelementptr inbounds i64, i64* %604, i64 0
  %605 = load i64, i64* %arrayidx106, align 8
  %606 = load i64**, i64*** %k, align 8
  %arrayidx107 = getelementptr inbounds i64*, i64** %606, i64 29
  %607 = load i64*, i64** %arrayidx107, align 8
  %arrayidx108 = getelementptr inbounds i64, i64* %607, i64 0
  %608 = load i64, i64* %arrayidx108, align 8
  %xor109 = xor i64 %605, %608
  store i64 %xor89, i64* %a1.addr.i7624, align 8
  store i64 %xor93, i64* %a2.addr.i7625, align 8
  store i64 %xor97, i64* %a3.addr.i7626, align 8
  store i64 %xor101, i64* %a4.addr.i7627, align 8
  store i64 %xor105, i64* %a5.addr.i7628, align 8
  store i64 %xor109, i64* %a6.addr.i7629, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 39), i64** %out1.addr.i7630, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 45), i64** %out2.addr.i7631, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 56), i64** %out3.addr.i7632, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 34), i64** %out4.addr.i7633, align 8
  %609 = load i64, i64* %a1.addr.i7624, align 8
  %610 = load i64, i64* %a3.addr.i7626, align 8
  %or.i7682 = or i64 %609, %610
  store i64 %or.i7682, i64* %x77777777.i7634, align 8
  %611 = load i64, i64* %x77777777.i7634, align 8
  %612 = load i64, i64* %a6.addr.i7629, align 8
  %neg.i7683 = xor i64 %612, -1
  %and.i7684 = and i64 %611, %neg.i7683
  store i64 %and.i7684, i64* %x77770000.i7635, align 8
  %613 = load i64, i64* %a1.addr.i7624, align 8
  %614 = load i64, i64* %x77770000.i7635, align 8
  %xor.i7685 = xor i64 %613, %614
  store i64 %xor.i7685, i64* %x22225555.i7636, align 8
  %615 = load i64, i64* %a3.addr.i7626, align 8
  %616 = load i64, i64* %x22225555.i7636, align 8
  %xor1.i7686 = xor i64 %615, %616
  store i64 %xor1.i7686, i64* %x11116666.i7637, align 8
  %617 = load i64, i64* %a4.addr.i7627, align 8
  %618 = load i64, i64* %x11116666.i7637, align 8
  %or2.i7687 = or i64 %617, %618
  store i64 %or2.i7687, i64* %x1F1F6F6F.i7638, align 8
  %619 = load i64, i64* %x77770000.i7635, align 8
  %620 = load i64, i64* %a4.addr.i7627, align 8
  %neg3.i7688 = xor i64 %620, -1
  %and4.i7689 = and i64 %619, %neg3.i7688
  store i64 %and4.i7689, i64* %x70700000.i7639, align 8
  %621 = load i64, i64* %a3.addr.i7626, align 8
  %622 = load i64, i64* %x70700000.i7639, align 8
  %xor5.i7690 = xor i64 %621, %622
  store i64 %xor5.i7690, i64* %x43433333.i7640, align 8
  %623 = load i64, i64* %a5.addr.i7628, align 8
  %624 = load i64, i64* %x43433333.i7640, align 8
  %and6.i7691 = and i64 %623, %624
  store i64 %and6.i7691, i64* %x00430033.i7641, align 8
  %625 = load i64, i64* %a1.addr.i7624, align 8
  %626 = load i64, i64* %x11116666.i7637, align 8
  %or7.i7692 = or i64 %625, %626
  store i64 %or7.i7692, i64* %x55557777.i7642, align 8
  %627 = load i64, i64* %x00430033.i7641, align 8
  %628 = load i64, i64* %x55557777.i7642, align 8
  %xor8.i7693 = xor i64 %627, %628
  store i64 %xor8.i7693, i64* %x55167744.i7643, align 8
  %629 = load i64, i64* %a4.addr.i7627, align 8
  %630 = load i64, i64* %x55167744.i7643, align 8
  %xor9.i7694 = xor i64 %629, %630
  store i64 %xor9.i7694, i64* %x5A19784B.i7644, align 8
  %631 = load i64, i64* %a6.addr.i7629, align 8
  %632 = load i64, i64* %x5A19784B.i7644, align 8
  %xor10.i7695 = xor i64 %631, %632
  store i64 %xor10.i7695, i64* %x5A1987B4.i7645, align 8
  %633 = load i64, i64* %x22225555.i7636, align 8
  %634 = load i64, i64* %x5A1987B4.i7645, align 8
  %or11.i7696 = or i64 %633, %634
  store i64 %or11.i7696, i64* %x7A3BD7F5.i7646, align 8
  %635 = load i64, i64* %a5.addr.i7628, align 8
  %636 = load i64, i64* %x7A3BD7F5.i7646, align 8
  %and12.i7697 = and i64 %635, %636
  store i64 %and12.i7697, i64* %x003B00F5.i7647, align 8
  %637 = load i64, i64* %x22225555.i7636, align 8
  %638 = load i64, i64* %x003B00F5.i7647, align 8
  %xor13.i7698 = xor i64 %637, %638
  store i64 %xor13.i7698, i64* %x221955A0.i7648, align 8
  %639 = load i64, i64* %a4.addr.i7627, align 8
  %640 = load i64, i64* %x55557777.i7642, align 8
  %and14.i7699 = and i64 %639, %640
  store i64 %and14.i7699, i64* %x05050707.i7649, align 8
  %641 = load i64, i64* %x221955A0.i7648, align 8
  %642 = load i64, i64* %x05050707.i7649, align 8
  %xor15.i7700 = xor i64 %641, %642
  store i64 %xor15.i7700, i64* %x271C52A7.i7650, align 8
  %643 = load i64, i64* %x7A3BD7F5.i7646, align 8
  %644 = load i64, i64* %a1.addr.i7624, align 8
  %neg16.i7701 = xor i64 %644, -1
  %and17.i7702 = and i64 %643, %neg16.i7701
  store i64 %and17.i7702, i64* %x2A2A82A0.i7651, align 8
  %645 = load i64, i64* %x43433333.i7640, align 8
  %646 = load i64, i64* %x2A2A82A0.i7651, align 8
  %xor18.i7703 = xor i64 %645, %646
  store i64 %xor18.i7703, i64* %x6969B193.i7652, align 8
  %647 = load i64, i64* %a5.addr.i7628, align 8
  %648 = load i64, i64* %x1F1F6F6F.i7638, align 8
  %xor19.i7704 = xor i64 %647, %648
  store i64 %xor19.i7704, i64* %x1FE06F90.i7653, align 8
  %649 = load i64, i64* %x1FE06F90.i7653, align 8
  %650 = load i64, i64* %x6969B193.i7652, align 8
  %neg20.i7705 = xor i64 %650, -1
  %and21.i7706 = and i64 %649, %neg20.i7705
  store i64 %and21.i7706, i64* %x16804E00.i7654, align 8
  %651 = load i64, i64* %x16804E00.i7654, align 8
  %neg22.i7707 = xor i64 %651, -1
  store i64 %neg22.i7707, i64* %xE97FB1FF.i7655, align 8
  %652 = load i64, i64* %xE97FB1FF.i7655, align 8
  %653 = load i64, i64* %a2.addr.i7625, align 8
  %neg23.i7708 = xor i64 %653, -1
  %and24.i7709 = and i64 %652, %neg23.i7708
  store i64 %and24.i7709, i64* %x20.i7678, align 8
  %654 = load i64, i64* %x20.i7678, align 8
  %655 = load i64, i64* %x5A19784B.i7644, align 8
  %xor25.i7710 = xor i64 %654, %655
  store i64 %xor25.i7710, i64* %x21.i7679, align 8
  %656 = load i64*, i64** %out3.addr.i7632, align 8
  %657 = load i64, i64* %656, align 8
  %658 = load i64, i64* %x21.i7679, align 8
  %xor26.i7711 = xor i64 %657, %658
  %659 = load i64*, i64** %out3.addr.i7632, align 8
  store i64 %xor26.i7711, i64* %659, align 8
  %660 = load i64, i64* %x43433333.i7640, align 8
  %661 = load i64, i64* %x003B00F5.i7647, align 8
  %neg27.i7712 = xor i64 %661, -1
  %and28.i7713 = and i64 %660, %neg27.i7712
  store i64 %and28.i7713, i64* %x43403302.i7656, align 8
  %662 = load i64, i64* %x2A2A82A0.i7651, align 8
  %663 = load i64, i64* %x1FE06F90.i7653, align 8
  %xor29.i7714 = xor i64 %662, %663
  store i64 %xor29.i7714, i64* %x35CAED30.i7657, align 8
  %664 = load i64, i64* %x271C52A7.i7650, align 8
  %665 = load i64, i64* %x35CAED30.i7657, align 8
  %or30.i7715 = or i64 %664, %665
  store i64 %or30.i7715, i64* %x37DEFFB7.i7658, align 8
  %666 = load i64, i64* %x37DEFFB7.i7658, align 8
  %667 = load i64, i64* %x43403302.i7656, align 8
  %neg31.i7716 = xor i64 %667, -1
  %and32.i7717 = and i64 %666, %neg31.i7716
  store i64 %and32.i7717, i64* %x349ECCB5.i7659, align 8
  %668 = load i64, i64* %x1F1F6F6F.i7638, align 8
  %669 = load i64, i64* %x349ECCB5.i7659, align 8
  %neg33.i7718 = xor i64 %669, -1
  %and34.i7719 = and i64 %668, %neg33.i7718
  store i64 %and34.i7719, i64* %x0B01234A.i7660, align 8
  %670 = load i64, i64* %x5A1987B4.i7645, align 8
  %671 = load i64, i64* %x349ECCB5.i7659, align 8
  %and35.i7720 = and i64 %670, %671
  store i64 %and35.i7720, i64* %x101884B4.i7661, align 8
  %672 = load i64, i64* %x1FE06F90.i7653, align 8
  %673 = load i64, i64* %x101884B4.i7661, align 8
  %xor36.i7721 = xor i64 %672, %673
  store i64 %xor36.i7721, i64* %x0FF8EB24.i7662, align 8
  %674 = load i64, i64* %x43433333.i7640, align 8
  %675 = load i64, i64* %x55557777.i7642, align 8
  %and37.i7722 = and i64 %674, %675
  store i64 %and37.i7722, i64* %x41413333.i7663, align 8
  %676 = load i64, i64* %x0FF8EB24.i7662, align 8
  %677 = load i64, i64* %x41413333.i7663, align 8
  %or38.i7723 = or i64 %676, %677
  store i64 %or38.i7723, i64* %x4FF9FB37.i7664, align 8
  %678 = load i64, i64* %x003B00F5.i7647, align 8
  %679 = load i64, i64* %x4FF9FB37.i7664, align 8
  %xor39.i7724 = xor i64 %678, %679
  store i64 %xor39.i7724, i64* %x4FC2FBC2.i7665, align 8
  %680 = load i64, i64* %x4FC2FBC2.i7665, align 8
  %681 = load i64, i64* %a2.addr.i7625, align 8
  %and40.i7725 = and i64 %680, %681
  store i64 %and40.i7725, i64* %x30.i7680, align 8
  %682 = load i64, i64* %x30.i7680, align 8
  %683 = load i64, i64* %x271C52A7.i7650, align 8
  %xor41.i7726 = xor i64 %682, %683
  store i64 %xor41.i7726, i64* %x31.i7681, align 8
  %684 = load i64*, i64** %out4.addr.i7633, align 8
  %685 = load i64, i64* %684, align 8
  %686 = load i64, i64* %x31.i7681, align 8
  %xor42.i7727 = xor i64 %685, %686
  %687 = load i64*, i64** %out4.addr.i7633, align 8
  store i64 %xor42.i7727, i64* %687, align 8
  %688 = load i64, i64* %a1.addr.i7624, align 8
  %689 = load i64, i64* %x77777777.i7634, align 8
  %xor43.i7728 = xor i64 %688, %689
  store i64 %xor43.i7728, i64* %x22222222.i7666, align 8
  %690 = load i64, i64* %x349ECCB5.i7659, align 8
  %691 = load i64, i64* %x22222222.i7666, align 8
  %xor44.i7729 = xor i64 %690, %691
  store i64 %xor44.i7729, i64* %x16BCEE97.i7667, align 8
  %692 = load i64, i64* %a4.addr.i7627, align 8
  %693 = load i64, i64* %x0FF8EB24.i7662, align 8
  %and45.i7730 = and i64 %692, %693
  store i64 %and45.i7730, i64* %x0F080B04.i7668, align 8
  %694 = load i64, i64* %x16BCEE97.i7667, align 8
  %695 = load i64, i64* %x0F080B04.i7668, align 8
  %xor46.i7731 = xor i64 %694, %695
  store i64 %xor46.i7731, i64* %x19B4E593.i7669, align 8
  %696 = load i64, i64* %x0B01234A.i7660, align 8
  %697 = load i64, i64* %a2.addr.i7625, align 8
  %or47.i7732 = or i64 %696, %697
  store i64 %or47.i7732, i64* %x00.i7674, align 8
  %698 = load i64, i64* %x00.i7674, align 8
  %699 = load i64, i64* %x19B4E593.i7669, align 8
  %xor48.i7733 = xor i64 %698, %699
  store i64 %xor48.i7733, i64* %x01.i7675, align 8
  %700 = load i64*, i64** %out1.addr.i7630, align 8
  %701 = load i64, i64* %700, align 8
  %702 = load i64, i64* %x01.i7675, align 8
  %xor49.i7734 = xor i64 %701, %702
  %703 = load i64*, i64** %out1.addr.i7630, align 8
  store i64 %xor49.i7734, i64* %703, align 8
  %704 = load i64, i64* %x1F1F6F6F.i7638, align 8
  %705 = load i64, i64* %x43433333.i7640, align 8
  %xor50.i7735 = xor i64 %704, %705
  store i64 %xor50.i7735, i64* %x5C5C5C5C.i7670, align 8
  %706 = load i64, i64* %x5C5C5C5C.i7670, align 8
  %707 = load i64, i64* %x19B4E593.i7669, align 8
  %neg51.i7736 = xor i64 %707, -1
  %and52.i7737 = and i64 %706, %neg51.i7736
  store i64 %and52.i7737, i64* %x4448184C.i7671, align 8
  %708 = load i64, i64* %x22225555.i7636, align 8
  %709 = load i64, i64* %x0FF8EB24.i7662, align 8
  %xor53.i7738 = xor i64 %708, %709
  store i64 %xor53.i7738, i64* %x2DDABE71.i7672, align 8
  %710 = load i64, i64* %x4448184C.i7671, align 8
  %711 = load i64, i64* %x2DDABE71.i7672, align 8
  %xor54.i7739 = xor i64 %710, %711
  store i64 %xor54.i7739, i64* %x6992A63D.i7673, align 8
  %712 = load i64, i64* %x1F1F6F6F.i7638, align 8
  %713 = load i64, i64* %a2.addr.i7625, align 8
  %and55.i7740 = and i64 %712, %713
  store i64 %and55.i7740, i64* %x10.i7676, align 8
  %714 = load i64, i64* %x10.i7676, align 8
  %715 = load i64, i64* %x6992A63D.i7673, align 8
  %xor56.i7741 = xor i64 %714, %715
  store i64 %xor56.i7741, i64* %x11.i7677, align 8
  %716 = load i64*, i64** %out2.addr.i7631, align 8
  %717 = load i64, i64* %716, align 8
  %718 = load i64, i64* %x11.i7677, align 8
  %xor57.i7742 = xor i64 %717, %718
  %719 = load i64*, i64** %out2.addr.i7631, align 8
  store i64 %xor57.i7742, i64* %719, align 8
  %720 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 30), align 8
  %arrayidx110 = getelementptr inbounds i64, i64* %720, i64 0
  %721 = load i64, i64* %arrayidx110, align 8
  %722 = load i64**, i64*** %k, align 8
  %arrayidx111 = getelementptr inbounds i64*, i64** %722, i64 30
  %723 = load i64*, i64** %arrayidx111, align 8
  %arrayidx112 = getelementptr inbounds i64, i64* %723, i64 0
  %724 = load i64, i64* %arrayidx112, align 8
  %xor113 = xor i64 %721, %724
  %725 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 31), align 8
  %arrayidx114 = getelementptr inbounds i64, i64* %725, i64 0
  %726 = load i64, i64* %arrayidx114, align 8
  %727 = load i64**, i64*** %k, align 8
  %arrayidx115 = getelementptr inbounds i64*, i64** %727, i64 31
  %728 = load i64*, i64** %arrayidx115, align 8
  %arrayidx116 = getelementptr inbounds i64, i64* %728, i64 0
  %729 = load i64, i64* %arrayidx116, align 8
  %xor117 = xor i64 %726, %729
  %730 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 32), align 8
  %arrayidx118 = getelementptr inbounds i64, i64* %730, i64 0
  %731 = load i64, i64* %arrayidx118, align 8
  %732 = load i64**, i64*** %k, align 8
  %arrayidx119 = getelementptr inbounds i64*, i64** %732, i64 32
  %733 = load i64*, i64** %arrayidx119, align 8
  %arrayidx120 = getelementptr inbounds i64, i64* %733, i64 0
  %734 = load i64, i64* %arrayidx120, align 8
  %xor121 = xor i64 %731, %734
  %735 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 33), align 8
  %arrayidx122 = getelementptr inbounds i64, i64* %735, i64 0
  %736 = load i64, i64* %arrayidx122, align 8
  %737 = load i64**, i64*** %k, align 8
  %arrayidx123 = getelementptr inbounds i64*, i64** %737, i64 33
  %738 = load i64*, i64** %arrayidx123, align 8
  %arrayidx124 = getelementptr inbounds i64, i64* %738, i64 0
  %739 = load i64, i64* %arrayidx124, align 8
  %xor125 = xor i64 %736, %739
  %740 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 34), align 8
  %arrayidx126 = getelementptr inbounds i64, i64* %740, i64 0
  %741 = load i64, i64* %arrayidx126, align 8
  %742 = load i64**, i64*** %k, align 8
  %arrayidx127 = getelementptr inbounds i64*, i64** %742, i64 34
  %743 = load i64*, i64** %arrayidx127, align 8
  %arrayidx128 = getelementptr inbounds i64, i64* %743, i64 0
  %744 = load i64, i64* %arrayidx128, align 8
  %xor129 = xor i64 %741, %744
  %745 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 35), align 8
  %arrayidx130 = getelementptr inbounds i64, i64* %745, i64 0
  %746 = load i64, i64* %arrayidx130, align 8
  %747 = load i64**, i64*** %k, align 8
  %arrayidx131 = getelementptr inbounds i64*, i64** %747, i64 35
  %748 = load i64*, i64** %arrayidx131, align 8
  %arrayidx132 = getelementptr inbounds i64, i64* %748, i64 0
  %749 = load i64, i64* %arrayidx132, align 8
  %xor133 = xor i64 %746, %749
  store i64 %xor113, i64* %a1.addr.i7510, align 8
  store i64 %xor117, i64* %a2.addr.i7511, align 8
  store i64 %xor121, i64* %a3.addr.i7512, align 8
  store i64 %xor125, i64* %a4.addr.i7513, align 8
  store i64 %xor129, i64* %a5.addr.i7514, align 8
  store i64 %xor133, i64* %a6.addr.i7515, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 35), i64** %out1.addr.i7516, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 60), i64** %out2.addr.i7517, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 42), i64** %out3.addr.i7518, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 50), i64** %out4.addr.i7519, align 8
  %750 = load i64, i64* %a2.addr.i7511, align 8
  %751 = load i64, i64* %a5.addr.i7514, align 8
  %xor.i7566 = xor i64 %750, %751
  store i64 %xor.i7566, i64* %x33CC33CC.i7520, align 8
  %752 = load i64, i64* %a2.addr.i7511, align 8
  %753 = load i64, i64* %a6.addr.i7515, align 8
  %or.i7567 = or i64 %752, %753
  store i64 %or.i7567, i64* %x3333FFFF.i7521, align 8
  %754 = load i64, i64* %a1.addr.i7510, align 8
  %755 = load i64, i64* %x3333FFFF.i7521, align 8
  %and.i7568 = and i64 %754, %755
  store i64 %and.i7568, i64* %x11115555.i7522, align 8
  %756 = load i64, i64* %x33CC33CC.i7520, align 8
  %757 = load i64, i64* %x11115555.i7522, align 8
  %xor1.i7569 = xor i64 %756, %757
  store i64 %xor1.i7569, i64* %x22DD6699.i7523, align 8
  %758 = load i64, i64* %a6.addr.i7515, align 8
  %759 = load i64, i64* %x22DD6699.i7523, align 8
  %xor2.i7570 = xor i64 %758, %759
  store i64 %xor2.i7570, i64* %x22DD9966.i7524, align 8
  %760 = load i64, i64* %a5.addr.i7514, align 8
  %761 = load i64, i64* %x22DD9966.i7524, align 8
  %neg.i7571 = xor i64 %761, -1
  %and3.i7572 = and i64 %760, %neg.i7571
  store i64 %and3.i7572, i64* %x00220099.i7525, align 8
  %762 = load i64, i64* %a1.addr.i7510, align 8
  %763 = load i64, i64* %x22DD9966.i7524, align 8
  %and4.i7573 = and i64 %762, %763
  store i64 %and4.i7573, i64* %x00551144.i7526, align 8
  %764 = load i64, i64* %a2.addr.i7511, align 8
  %765 = load i64, i64* %x00551144.i7526, align 8
  %xor5.i7574 = xor i64 %764, %765
  store i64 %xor5.i7574, i64* %x33662277.i7527, align 8
  %766 = load i64, i64* %a1.addr.i7510, align 8
  %767 = load i64, i64* %a3.addr.i7512, align 8
  %xor6.i7575 = xor i64 %766, %767
  store i64 %xor6.i7575, i64* %x5A5A5A5A.i7528, align 8
  %768 = load i64, i64* %x33662277.i7527, align 8
  %769 = load i64, i64* %x5A5A5A5A.i7528, align 8
  %or7.i7576 = or i64 %768, %769
  store i64 %or7.i7576, i64* %x7B7E7A7F.i7529, align 8
  %770 = load i64, i64* %x22DD6699.i7523, align 8
  %771 = load i64, i64* %x7B7E7A7F.i7529, align 8
  %xor8.i7577 = xor i64 %770, %771
  store i64 %xor8.i7577, i64* %x59A31CE6.i7530, align 8
  %772 = load i64, i64* %a3.addr.i7512, align 8
  %773 = load i64, i64* %x59A31CE6.i7530, align 8
  %and9.i7578 = and i64 %772, %773
  store i64 %and9.i7578, i64* %x09030C06.i7531, align 8
  %774 = load i64, i64* %x09030C06.i7531, align 8
  %775 = load i64, i64* %a6.addr.i7515, align 8
  %neg10.i7579 = xor i64 %775, -1
  %and11.i7580 = and i64 %774, %neg10.i7579
  store i64 %and11.i7580, i64* %x09030000.i7532, align 8
  %776 = load i64, i64* %x00220099.i7525, align 8
  %777 = load i64, i64* %x33662277.i7527, align 8
  %or12.i7581 = or i64 %776, %777
  store i64 %or12.i7581, i64* %x336622FF.i7533, align 8
  %778 = load i64, i64* %x09030000.i7532, align 8
  %779 = load i64, i64* %x336622FF.i7533, align 8
  %xor13.i7582 = xor i64 %778, %779
  store i64 %xor13.i7582, i64* %x3A6522FF.i7534, align 8
  %780 = load i64, i64* %x3A6522FF.i7534, align 8
  %781 = load i64, i64* %a4.addr.i7513, align 8
  %and14.i7583 = and i64 %780, %781
  store i64 %and14.i7583, i64* %x30.i7564, align 8
  %782 = load i64, i64* %x30.i7564, align 8
  %783 = load i64, i64* %x59A31CE6.i7530, align 8
  %xor15.i7584 = xor i64 %782, %783
  store i64 %xor15.i7584, i64* %x31.i7565, align 8
  %784 = load i64*, i64** %out4.addr.i7519, align 8
  %785 = load i64, i64* %784, align 8
  %786 = load i64, i64* %x31.i7565, align 8
  %xor16.i7585 = xor i64 %785, %786
  %787 = load i64*, i64** %out4.addr.i7519, align 8
  store i64 %xor16.i7585, i64* %787, align 8
  %788 = load i64, i64* %a2.addr.i7511, align 8
  %789 = load i64, i64* %x7B7E7A7F.i7529, align 8
  %xor17.i7586 = xor i64 %788, %789
  store i64 %xor17.i7586, i64* %x484D494C.i7535, align 8
  %790 = load i64, i64* %a6.addr.i7515, align 8
  %791 = load i64, i64* %x484D494C.i7535, align 8
  %neg18.i7587 = xor i64 %791, -1
  %and19.i7588 = and i64 %790, %neg18.i7587
  store i64 %and19.i7588, i64* %x0000B6B3.i7536, align 8
  %792 = load i64, i64* %a3.addr.i7512, align 8
  %793 = load i64, i64* %x0000B6B3.i7536, align 8
  %xor20.i7589 = xor i64 %792, %793
  store i64 %xor20.i7589, i64* %x0F0FB9BC.i7537, align 8
  %794 = load i64, i64* %a5.addr.i7514, align 8
  %795 = load i64, i64* %x09030C06.i7531, align 8
  %neg21.i7590 = xor i64 %795, -1
  %and22.i7591 = and i64 %794, %neg21.i7590
  store i64 %and22.i7591, i64* %x00FC00F9.i7538, align 8
  %796 = load i64, i64* %x0F0FB9BC.i7537, align 8
  %797 = load i64, i64* %x00FC00F9.i7538, align 8
  %or23.i7592 = or i64 %796, %797
  store i64 %or23.i7592, i64* %x0FFFB9FD.i7539, align 8
  %798 = load i64, i64* %a1.addr.i7510, align 8
  %799 = load i64, i64* %x59A31CE6.i7530, align 8
  %or24.i7593 = or i64 %798, %799
  store i64 %or24.i7593, i64* %x5DF75DF7.i7540, align 8
  %800 = load i64, i64* %x336622FF.i7533, align 8
  %801 = load i64, i64* %x5DF75DF7.i7540, align 8
  %and25.i7594 = and i64 %800, %801
  store i64 %and25.i7594, i64* %x116600F7.i7541, align 8
  %802 = load i64, i64* %x0F0FB9BC.i7537, align 8
  %803 = load i64, i64* %x116600F7.i7541, align 8
  %xor26.i7595 = xor i64 %802, %803
  store i64 %xor26.i7595, i64* %x1E69B94B.i7542, align 8
  %804 = load i64, i64* %x1E69B94B.i7542, align 8
  %805 = load i64, i64* %x09030000.i7532, align 8
  %neg27.i7596 = xor i64 %805, -1
  %and28.i7597 = and i64 %804, %neg27.i7596
  store i64 %and28.i7597, i64* %x1668B94B.i7543, align 8
  %806 = load i64, i64* %x00220099.i7525, align 8
  %807 = load i64, i64* %a4.addr.i7513, align 8
  %or29.i7598 = or i64 %806, %807
  store i64 %or29.i7598, i64* %x20.i7562, align 8
  %808 = load i64, i64* %x20.i7562, align 8
  %809 = load i64, i64* %x1668B94B.i7543, align 8
  %xor30.i7599 = xor i64 %808, %809
  store i64 %xor30.i7599, i64* %x21.i7563, align 8
  %810 = load i64*, i64** %out3.addr.i7518, align 8
  %811 = load i64, i64* %810, align 8
  %812 = load i64, i64* %x21.i7563, align 8
  %xor31.i7600 = xor i64 %811, %812
  %813 = load i64*, i64** %out3.addr.i7518, align 8
  store i64 %xor31.i7600, i64* %813, align 8
  %814 = load i64, i64* %a2.addr.i7511, align 8
  %815 = load i64, i64* %x5A5A5A5A.i7528, align 8
  %or32.i7601 = or i64 %814, %815
  store i64 %or32.i7601, i64* %x7B7B7B7B.i7544, align 8
  %816 = load i64, i64* %x3A6522FF.i7534, align 8
  %817 = load i64, i64* %x7B7B7B7B.i7544, align 8
  %xor33.i7602 = xor i64 %816, %817
  store i64 %xor33.i7602, i64* %x411E5984.i7545, align 8
  %818 = load i64, i64* %x11115555.i7522, align 8
  %819 = load i64, i64* %x0FFFB9FD.i7539, align 8
  %or34.i7603 = or i64 %818, %819
  store i64 %or34.i7603, i64* %x1FFFFDFD.i7546, align 8
  %820 = load i64, i64* %x411E5984.i7545, align 8
  %821 = load i64, i64* %x1FFFFDFD.i7546, align 8
  %xor35.i7604 = xor i64 %820, %821
  store i64 %xor35.i7604, i64* %x5EE1A479.i7547, align 8
  %822 = load i64, i64* %x22DD6699.i7523, align 8
  %823 = load i64, i64* %x1E69B94B.i7542, align 8
  %xor36.i7605 = xor i64 %822, %823
  store i64 %xor36.i7605, i64* %x3CB4DFD2.i7548, align 8
  %824 = load i64, i64* %a5.addr.i7514, align 8
  %825 = load i64, i64* %x3CB4DFD2.i7548, align 8
  %neg37.i7606 = xor i64 %825, -1
  %and38.i7607 = and i64 %824, %neg37.i7606
  store i64 %and38.i7607, i64* %x004B002D.i7549, align 8
  %826 = load i64, i64* %x484D494C.i7535, align 8
  %neg39.i7608 = xor i64 %826, -1
  store i64 %neg39.i7608, i64* %xB7B2B6B3.i7550, align 8
  %827 = load i64, i64* %x7B7B7B7B.i7544, align 8
  %828 = load i64, i64* %xB7B2B6B3.i7550, align 8
  %xor40.i7609 = xor i64 %827, %828
  store i64 %xor40.i7609, i64* %xCCC9CDC8.i7551, align 8
  %829 = load i64, i64* %x004B002D.i7549, align 8
  %830 = load i64, i64* %xCCC9CDC8.i7551, align 8
  %xor41.i7610 = xor i64 %829, %830
  store i64 %xor41.i7610, i64* %xCC82CDE5.i7552, align 8
  %831 = load i64, i64* %xCC82CDE5.i7552, align 8
  %832 = load i64, i64* %a4.addr.i7513, align 8
  %neg42.i7611 = xor i64 %832, -1
  %and43.i7612 = and i64 %831, %neg42.i7611
  store i64 %and43.i7612, i64* %x10.i7560, align 8
  %833 = load i64, i64* %x10.i7560, align 8
  %834 = load i64, i64* %x5EE1A479.i7547, align 8
  %xor44.i7613 = xor i64 %833, %834
  store i64 %xor44.i7613, i64* %x11.i7561, align 8
  %835 = load i64*, i64** %out2.addr.i7517, align 8
  %836 = load i64, i64* %835, align 8
  %837 = load i64, i64* %x11.i7561, align 8
  %xor45.i7614 = xor i64 %836, %837
  %838 = load i64*, i64** %out2.addr.i7517, align 8
  store i64 %xor45.i7614, i64* %838, align 8
  %839 = load i64, i64* %a6.addr.i7515, align 8
  %840 = load i64, i64* %x00551144.i7526, align 8
  %xor46.i7615 = xor i64 %839, %840
  store i64 %xor46.i7615, i64* %x0055EEBB.i7553, align 8
  %841 = load i64, i64* %a1.addr.i7510, align 8
  %842 = load i64, i64* %x0F0FB9BC.i7537, align 8
  %xor47.i7616 = xor i64 %841, %842
  store i64 %xor47.i7616, i64* %x5A5AECE9.i7554, align 8
  %843 = load i64, i64* %x0055EEBB.i7553, align 8
  %844 = load i64, i64* %x5A5AECE9.i7554, align 8
  %and48.i7617 = and i64 %843, %844
  store i64 %and48.i7617, i64* %x0050ECA9.i7555, align 8
  %845 = load i64, i64* %x09030C06.i7531, align 8
  %846 = load i64, i64* %xCCC9CDC8.i7551, align 8
  %xor49.i7618 = xor i64 %845, %846
  store i64 %xor49.i7618, i64* %xC5CAC1CE.i7556, align 8
  %847 = load i64, i64* %x0050ECA9.i7555, align 8
  %848 = load i64, i64* %xC5CAC1CE.i7556, align 8
  %xor50.i7619 = xor i64 %847, %848
  store i64 %xor50.i7619, i64* %xC59A2D67.i7557, align 8
  %849 = load i64, i64* %x0FFFB9FD.i7539, align 8
  %850 = load i64, i64* %a4.addr.i7513, align 8
  %neg51.i7620 = xor i64 %850, -1
  %and52.i7621 = and i64 %849, %neg51.i7620
  store i64 %and52.i7621, i64* %x00.i7558, align 8
  %851 = load i64, i64* %x00.i7558, align 8
  %852 = load i64, i64* %xC59A2D67.i7557, align 8
  %xor53.i7622 = xor i64 %851, %852
  store i64 %xor53.i7622, i64* %x01.i7559, align 8
  %853 = load i64*, i64** %out1.addr.i7516, align 8
  %854 = load i64, i64* %853, align 8
  %855 = load i64, i64* %x01.i7559, align 8
  %xor54.i7623 = xor i64 %854, %855
  %856 = load i64*, i64** %out1.addr.i7516, align 8
  store i64 %xor54.i7623, i64* %856, align 8
  %857 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 23), align 8
  %858 = load i64**, i64*** %k, align 8
  %arrayidx134 = getelementptr inbounds i64*, i64** %858, i64 36
  %859 = load i64*, i64** %arrayidx134, align 8
  %arrayidx135 = getelementptr inbounds i64, i64* %859, i64 0
  %860 = load i64, i64* %arrayidx135, align 8
  %xor136 = xor i64 %857, %860
  %861 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 24), align 8
  %862 = load i64**, i64*** %k, align 8
  %arrayidx137 = getelementptr inbounds i64*, i64** %862, i64 37
  %863 = load i64*, i64** %arrayidx137, align 8
  %arrayidx138 = getelementptr inbounds i64, i64* %863, i64 0
  %864 = load i64, i64* %arrayidx138, align 8
  %xor139 = xor i64 %861, %864
  %865 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 25), align 8
  %866 = load i64**, i64*** %k, align 8
  %arrayidx140 = getelementptr inbounds i64*, i64** %866, i64 38
  %867 = load i64*, i64** %arrayidx140, align 8
  %arrayidx141 = getelementptr inbounds i64, i64* %867, i64 0
  %868 = load i64, i64* %arrayidx141, align 8
  %xor142 = xor i64 %865, %868
  %869 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 26), align 8
  %870 = load i64**, i64*** %k, align 8
  %arrayidx143 = getelementptr inbounds i64*, i64** %870, i64 39
  %871 = load i64*, i64** %arrayidx143, align 8
  %arrayidx144 = getelementptr inbounds i64, i64* %871, i64 0
  %872 = load i64, i64* %arrayidx144, align 8
  %xor145 = xor i64 %869, %872
  %873 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 27), align 8
  %874 = load i64**, i64*** %k, align 8
  %arrayidx146 = getelementptr inbounds i64*, i64** %874, i64 40
  %875 = load i64*, i64** %arrayidx146, align 8
  %arrayidx147 = getelementptr inbounds i64, i64* %875, i64 0
  %876 = load i64, i64* %arrayidx147, align 8
  %xor148 = xor i64 %873, %876
  %877 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 28), align 8
  %878 = load i64**, i64*** %k, align 8
  %arrayidx149 = getelementptr inbounds i64*, i64** %878, i64 41
  %879 = load i64*, i64** %arrayidx149, align 8
  %arrayidx150 = getelementptr inbounds i64, i64* %879, i64 0
  %880 = load i64, i64* %arrayidx150, align 8
  %xor151 = xor i64 %877, %880
  store i64 %xor136, i64* %a1.addr.i7397, align 8
  store i64 %xor139, i64* %a2.addr.i7398, align 8
  store i64 %xor142, i64* %a3.addr.i7399, align 8
  store i64 %xor145, i64* %a4.addr.i7400, align 8
  store i64 %xor148, i64* %a5.addr.i7401, align 8
  store i64 %xor151, i64* %a6.addr.i7402, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 63), i64** %out1.addr.i7403, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 43), i64** %out2.addr.i7404, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 53), i64** %out3.addr.i7405, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 38), i64** %out4.addr.i7406, align 8
  %881 = load i64, i64* %a4.addr.i7400, align 8
  %882 = load i64, i64* %a5.addr.i7401, align 8
  %xor.i7453 = xor i64 %881, %882
  store i64 %xor.i7453, i64* %x0FF00FF0.i7407, align 8
  %883 = load i64, i64* %a3.addr.i7399, align 8
  %884 = load i64, i64* %x0FF00FF0.i7407, align 8
  %xor1.i7454 = xor i64 %883, %884
  store i64 %xor1.i7454, i64* %x3CC33CC3.i7408, align 8
  %885 = load i64, i64* %a6.addr.i7402, align 8
  %886 = load i64, i64* %x3CC33CC3.i7408, align 8
  %and.i7455 = and i64 %885, %886
  store i64 %and.i7455, i64* %x00003CC3.i7409, align 8
  %887 = load i64, i64* %a4.addr.i7400, align 8
  %888 = load i64, i64* %x0FF00FF0.i7407, align 8
  %and2.i7456 = and i64 %887, %888
  store i64 %and2.i7456, i64* %x0F000F00.i7410, align 8
  %889 = load i64, i64* %a2.addr.i7398, align 8
  %890 = load i64, i64* %x0F000F00.i7410, align 8
  %xor3.i7457 = xor i64 %889, %890
  store i64 %xor3.i7457, i64* %x5A555A55.i7411, align 8
  %891 = load i64, i64* %x00003CC3.i7409, align 8
  %892 = load i64, i64* %x5A555A55.i7411, align 8
  %and4.i7458 = and i64 %891, %892
  store i64 %and4.i7458, i64* %x00001841.i7412, align 8
  %893 = load i64, i64* %a6.addr.i7402, align 8
  %894 = load i64, i64* %x0F000F00.i7410, align 8
  %and5.i7459 = and i64 %893, %894
  store i64 %and5.i7459, i64* %x00000F00.i7413, align 8
  %895 = load i64, i64* %a3.addr.i7399, align 8
  %896 = load i64, i64* %x00000F00.i7413, align 8
  %xor6.i7460 = xor i64 %895, %896
  store i64 %xor6.i7460, i64* %x33333C33.i7414, align 8
  %897 = load i64, i64* %x5A555A55.i7411, align 8
  %898 = load i64, i64* %x33333C33.i7414, align 8
  %or.i7461 = or i64 %897, %898
  store i64 %or.i7461, i64* %x7B777E77.i7415, align 8
  %899 = load i64, i64* %a6.addr.i7402, align 8
  %900 = load i64, i64* %x0FF00FF0.i7407, align 8
  %xor7.i7462 = xor i64 %899, %900
  store i64 %xor7.i7462, i64* %x0FF0F00F.i7416, align 8
  %901 = load i64, i64* %x7B777E77.i7415, align 8
  %902 = load i64, i64* %x0FF0F00F.i7416, align 8
  %xor8.i7463 = xor i64 %901, %902
  store i64 %xor8.i7463, i64* %x74878E78.i7417, align 8
  %903 = load i64, i64* %a1.addr.i7397, align 8
  %904 = load i64, i64* %x00001841.i7412, align 8
  %neg.i7464 = xor i64 %904, -1
  %and9.i7465 = and i64 %903, %neg.i7464
  store i64 %and9.i7465, i64* %x30.i7451, align 8
  %905 = load i64, i64* %x30.i7451, align 8
  %906 = load i64, i64* %x74878E78.i7417, align 8
  %xor10.i7466 = xor i64 %905, %906
  store i64 %xor10.i7466, i64* %x31.i7452, align 8
  %907 = load i64*, i64** %out4.addr.i7406, align 8
  %908 = load i64, i64* %907, align 8
  %909 = load i64, i64* %x31.i7452, align 8
  %xor11.i7467 = xor i64 %908, %909
  %910 = load i64*, i64** %out4.addr.i7406, align 8
  store i64 %xor11.i7467, i64* %910, align 8
  %911 = load i64, i64* %a5.addr.i7401, align 8
  %912 = load i64, i64* %x3CC33CC3.i7408, align 8
  %neg12.i7468 = xor i64 %912, -1
  %and13.i7469 = and i64 %911, %neg12.i7468
  store i64 %and13.i7469, i64* %x003C003C.i7418, align 8
  %913 = load i64, i64* %x5A555A55.i7411, align 8
  %914 = load i64, i64* %x003C003C.i7418, align 8
  %or14.i7470 = or i64 %913, %914
  store i64 %or14.i7470, i64* %x5A7D5A7D.i7419, align 8
  %915 = load i64, i64* %x00003CC3.i7409, align 8
  %916 = load i64, i64* %x33333C33.i7414, align 8
  %xor15.i7471 = xor i64 %915, %916
  store i64 %xor15.i7471, i64* %x333300F0.i7420, align 8
  %917 = load i64, i64* %x5A7D5A7D.i7419, align 8
  %918 = load i64, i64* %x333300F0.i7420, align 8
  %xor16.i7472 = xor i64 %917, %918
  store i64 %xor16.i7472, i64* %x694E5A8D.i7421, align 8
  %919 = load i64, i64* %x00003CC3.i7409, align 8
  %920 = load i64, i64* %x0FF0F00F.i7416, align 8
  %xor17.i7473 = xor i64 %919, %920
  store i64 %xor17.i7473, i64* %x0FF0CCCC.i7422, align 8
  %921 = load i64, i64* %a4.addr.i7400, align 8
  %922 = load i64, i64* %x0FF0CCCC.i7422, align 8
  %neg18.i7474 = xor i64 %922, -1
  %and19.i7475 = and i64 %921, %neg18.i7474
  store i64 %and19.i7475, i64* %x000F0303.i7423, align 8
  %923 = load i64, i64* %x5A555A55.i7411, align 8
  %924 = load i64, i64* %x000F0303.i7423, align 8
  %neg20.i7476 = xor i64 %924, -1
  %and21.i7477 = and i64 %923, %neg20.i7476
  store i64 %and21.i7477, i64* %x5A505854.i7424, align 8
  %925 = load i64, i64* %a5.addr.i7401, align 8
  %926 = load i64, i64* %x333300F0.i7420, align 8
  %xor22.i7478 = xor i64 %925, %926
  store i64 %xor22.i7478, i64* %x33CC000F.i7425, align 8
  %927 = load i64, i64* %x5A505854.i7424, align 8
  %928 = load i64, i64* %x33CC000F.i7425, align 8
  %xor23.i7479 = xor i64 %927, %928
  store i64 %xor23.i7479, i64* %x699C585B.i7426, align 8
  %929 = load i64, i64* %x0F000F00.i7410, align 8
  %930 = load i64, i64* %x74878E78.i7417, align 8
  %or24.i7480 = or i64 %929, %930
  store i64 %or24.i7480, i64* %x7F878F78.i7427, align 8
  %931 = load i64, i64* %a3.addr.i7399, align 8
  %932 = load i64, i64* %x699C585B.i7426, align 8
  %and25.i7481 = and i64 %931, %932
  store i64 %and25.i7481, i64* %x21101013.i7428, align 8
  %933 = load i64, i64* %x7F878F78.i7427, align 8
  %934 = load i64, i64* %x21101013.i7428, align 8
  %or26.i7482 = or i64 %933, %934
  store i64 %or26.i7482, i64* %x7F979F7B.i7429, align 8
  %935 = load i64, i64* %x3CC33CC3.i7408, align 8
  %936 = load i64, i64* %x0FF0F00F.i7416, align 8
  %neg27.i7483 = xor i64 %936, -1
  %and28.i7484 = and i64 %935, %neg27.i7483
  store i64 %and28.i7484, i64* %x30030CC0.i7430, align 8
  %937 = load i64, i64* %x7F979F7B.i7429, align 8
  %938 = load i64, i64* %x30030CC0.i7430, align 8
  %xor29.i7485 = xor i64 %937, %938
  store i64 %xor29.i7485, i64* %x4F9493BB.i7431, align 8
  %939 = load i64, i64* %x4F9493BB.i7431, align 8
  %940 = load i64, i64* %a1.addr.i7397, align 8
  %neg30.i7486 = xor i64 %940, -1
  %and31.i7487 = and i64 %939, %neg30.i7486
  store i64 %and31.i7487, i64* %x00.i7445, align 8
  %941 = load i64, i64* %x00.i7445, align 8
  %942 = load i64, i64* %x694E5A8D.i7421, align 8
  %xor32.i7488 = xor i64 %941, %942
  store i64 %xor32.i7488, i64* %x01.i7446, align 8
  %943 = load i64*, i64** %out1.addr.i7403, align 8
  %944 = load i64, i64* %943, align 8
  %945 = load i64, i64* %x01.i7446, align 8
  %xor33.i7489 = xor i64 %944, %945
  %946 = load i64*, i64** %out1.addr.i7403, align 8
  store i64 %xor33.i7489, i64* %946, align 8
  %947 = load i64, i64* %x699C585B.i7426, align 8
  %948 = load i64, i64* %x4F9493BB.i7431, align 8
  %or34.i7490 = or i64 %947, %948
  store i64 %or34.i7490, i64* %x6F9CDBFB.i7432, align 8
  %949 = load i64, i64* %a6.addr.i7402, align 8
  %950 = load i64, i64* %x6F9CDBFB.i7432, align 8
  %and35.i7491 = and i64 %949, %950
  store i64 %and35.i7491, i64* %x0000DBFB.i7433, align 8
  %951 = load i64, i64* %a2.addr.i7398, align 8
  %952 = load i64, i64* %x0000DBFB.i7433, align 8
  %and36.i7492 = and i64 %951, %952
  store i64 %and36.i7492, i64* %x00005151.i7434, align 8
  %953 = load i64, i64* %x694E5A8D.i7421, align 8
  %954 = load i64, i64* %x4F9493BB.i7431, align 8
  %xor37.i7493 = xor i64 %953, %954
  store i64 %xor37.i7493, i64* %x26DAC936.i7435, align 8
  %955 = load i64, i64* %x00005151.i7434, align 8
  %956 = load i64, i64* %x26DAC936.i7435, align 8
  %xor38.i7494 = xor i64 %955, %956
  store i64 %xor38.i7494, i64* %x26DA9867.i7436, align 8
  %957 = load i64, i64* %a5.addr.i7401, align 8
  %958 = load i64, i64* %x21101013.i7428, align 8
  %or39.i7495 = or i64 %957, %958
  store i64 %or39.i7495, i64* %x21FF10FF.i7437, align 8
  %959 = load i64, i64* %x0000DBFB.i7433, align 8
  %960 = load i64, i64* %x21FF10FF.i7437, align 8
  %xor40.i7496 = xor i64 %959, %960
  store i64 %xor40.i7496, i64* %x21FFCB04.i7438, align 8
  %961 = load i64, i64* %a5.addr.i7401, align 8
  %962 = load i64, i64* %x26DAC936.i7435, align 8
  %xor41.i7497 = xor i64 %961, %962
  store i64 %xor41.i7497, i64* %x2625C9C9.i7439, align 8
  %963 = load i64, i64* %x21FFCB04.i7438, align 8
  %964 = load i64, i64* %x2625C9C9.i7439, align 8
  %or42.i7498 = or i64 %963, %964
  store i64 %or42.i7498, i64* %x27FFCBCD.i7440, align 8
  %965 = load i64, i64* %x27FFCBCD.i7440, align 8
  %966 = load i64, i64* %a1.addr.i7397, align 8
  %and43.i7499 = and i64 %965, %966
  store i64 %and43.i7499, i64* %x20.i7449, align 8
  %967 = load i64, i64* %x20.i7449, align 8
  %968 = load i64, i64* %x699C585B.i7426, align 8
  %xor44.i7500 = xor i64 %967, %968
  store i64 %xor44.i7500, i64* %x21.i7450, align 8
  %969 = load i64*, i64** %out3.addr.i7405, align 8
  %970 = load i64, i64* %969, align 8
  %971 = load i64, i64* %x21.i7450, align 8
  %xor45.i7501 = xor i64 %970, %971
  %972 = load i64*, i64** %out3.addr.i7405, align 8
  store i64 %xor45.i7501, i64* %972, align 8
  %973 = load i64, i64* %x0000DBFB.i7433, align 8
  %974 = load i64, i64* %x27FFCBCD.i7440, align 8
  %xor46.i7502 = xor i64 %973, %974
  store i64 %xor46.i7502, i64* %x27FF1036.i7441, align 8
  %975 = load i64, i64* %x003C003C.i7418, align 8
  %976 = load i64, i64* %x27FF1036.i7441, align 8
  %or47.i7503 = or i64 %975, %976
  store i64 %or47.i7503, i64* %x27FF103E.i7442, align 8
  %977 = load i64, i64* %x4F9493BB.i7431, align 8
  %neg48.i7504 = xor i64 %977, -1
  store i64 %neg48.i7504, i64* %xB06B6C44.i7443, align 8
  %978 = load i64, i64* %x27FF103E.i7442, align 8
  %979 = load i64, i64* %xB06B6C44.i7443, align 8
  %xor49.i7505 = xor i64 %978, %979
  store i64 %xor49.i7505, i64* %x97947C7A.i7444, align 8
  %980 = load i64, i64* %x97947C7A.i7444, align 8
  %981 = load i64, i64* %a1.addr.i7397, align 8
  %neg50.i7506 = xor i64 %981, -1
  %and51.i7507 = and i64 %980, %neg50.i7506
  store i64 %and51.i7507, i64* %x10.i7447, align 8
  %982 = load i64, i64* %x10.i7447, align 8
  %983 = load i64, i64* %x26DA9867.i7436, align 8
  %xor52.i7508 = xor i64 %982, %983
  store i64 %xor52.i7508, i64* %x11.i7448, align 8
  %984 = load i64*, i64** %out2.addr.i7404, align 8
  %985 = load i64, i64* %984, align 8
  %986 = load i64, i64* %x11.i7448, align 8
  %xor53.i7509 = xor i64 %985, %986
  %987 = load i64*, i64** %out2.addr.i7404, align 8
  store i64 %xor53.i7509, i64* %987, align 8
  %988 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 27), align 8
  %989 = load i64**, i64*** %k, align 8
  %arrayidx152 = getelementptr inbounds i64*, i64** %989, i64 42
  %990 = load i64*, i64** %arrayidx152, align 8
  %arrayidx153 = getelementptr inbounds i64, i64* %990, i64 0
  %991 = load i64, i64* %arrayidx153, align 8
  %xor154 = xor i64 %988, %991
  %992 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 28), align 8
  %993 = load i64**, i64*** %k, align 8
  %arrayidx155 = getelementptr inbounds i64*, i64** %993, i64 43
  %994 = load i64*, i64** %arrayidx155, align 8
  %arrayidx156 = getelementptr inbounds i64, i64* %994, i64 0
  %995 = load i64, i64* %arrayidx156, align 8
  %xor157 = xor i64 %992, %995
  %996 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 29), align 8
  %997 = load i64**, i64*** %k, align 8
  %arrayidx158 = getelementptr inbounds i64*, i64** %997, i64 44
  %998 = load i64*, i64** %arrayidx158, align 8
  %arrayidx159 = getelementptr inbounds i64, i64* %998, i64 0
  %999 = load i64, i64* %arrayidx159, align 8
  %xor160 = xor i64 %996, %999
  %1000 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 30), align 8
  %1001 = load i64**, i64*** %k, align 8
  %arrayidx161 = getelementptr inbounds i64*, i64** %1001, i64 45
  %1002 = load i64*, i64** %arrayidx161, align 8
  %arrayidx162 = getelementptr inbounds i64, i64* %1002, i64 0
  %1003 = load i64, i64* %arrayidx162, align 8
  %xor163 = xor i64 %1000, %1003
  %1004 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 31), align 8
  %1005 = load i64**, i64*** %k, align 8
  %arrayidx164 = getelementptr inbounds i64*, i64** %1005, i64 46
  %1006 = load i64*, i64** %arrayidx164, align 8
  %arrayidx165 = getelementptr inbounds i64, i64* %1006, i64 0
  %1007 = load i64, i64* %arrayidx165, align 8
  %xor166 = xor i64 %1004, %1007
  %1008 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 0), align 8
  %1009 = load i64**, i64*** %k, align 8
  %arrayidx167 = getelementptr inbounds i64*, i64** %1009, i64 47
  %1010 = load i64*, i64** %arrayidx167, align 8
  %arrayidx168 = getelementptr inbounds i64, i64* %1010, i64 0
  %1011 = load i64, i64* %arrayidx168, align 8
  %xor169 = xor i64 %1008, %1011
  store i64 %xor154, i64* %a1.addr.i7294, align 8
  store i64 %xor157, i64* %a2.addr.i7295, align 8
  store i64 %xor160, i64* %a3.addr.i7296, align 8
  store i64 %xor163, i64* %a4.addr.i7297, align 8
  store i64 %xor166, i64* %a5.addr.i7298, align 8
  store i64 %xor169, i64* %a6.addr.i7299, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 36), i64** %out1.addr.i7300, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 58), i64** %out2.addr.i7301, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 46), i64** %out3.addr.i7302, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 52), i64** %out4.addr.i7303, align 8
  %1012 = load i64, i64* %a3.addr.i7296, align 8
  %1013 = load i64, i64* %a2.addr.i7295, align 8
  %neg.i7345 = xor i64 %1013, -1
  %and.i7346 = and i64 %1012, %neg.i7345
  store i64 %and.i7346, i64* %x0C0C0C0C.i7304, align 8
  %1014 = load i64, i64* %a5.addr.i7298, align 8
  %1015 = load i64, i64* %a3.addr.i7296, align 8
  %neg1.i7347 = xor i64 %1015, -1
  %and2.i7348 = and i64 %1014, %neg1.i7347
  store i64 %and2.i7348, i64* %x0000F0F0.i7305, align 8
  %1016 = load i64, i64* %a4.addr.i7297, align 8
  %1017 = load i64, i64* %x0000F0F0.i7305, align 8
  %xor.i7349 = xor i64 %1016, %1017
  store i64 %xor.i7349, i64* %x00FFF00F.i7306, align 8
  %1018 = load i64, i64* %a1.addr.i7294, align 8
  %1019 = load i64, i64* %x00FFF00F.i7306, align 8
  %and3.i7350 = and i64 %1018, %1019
  store i64 %and3.i7350, i64* %x00555005.i7307, align 8
  %1020 = load i64, i64* %x00555005.i7307, align 8
  %1021 = load i64, i64* %x0C0C0C0C.i7304, align 8
  %neg4.i7351 = xor i64 %1021, -1
  %and5.i7352 = and i64 %1020, %neg4.i7351
  store i64 %and5.i7352, i64* %x00515001.i7308, align 8
  %1022 = load i64, i64* %a2.addr.i7295, align 8
  %1023 = load i64, i64* %x00FFF00F.i7306, align 8
  %neg6.i7353 = xor i64 %1023, -1
  %and7.i7354 = and i64 %1022, %neg6.i7353
  store i64 %and7.i7354, i64* %x33000330.i7309, align 8
  %1024 = load i64, i64* %a1.addr.i7294, align 8
  %1025 = load i64, i64* %x33000330.i7309, align 8
  %or.i7355 = or i64 %1024, %1025
  store i64 %or.i7355, i64* %x77555775.i7310, align 8
  %1026 = load i64, i64* %a2.addr.i7295, align 8
  %1027 = load i64, i64* %a3.addr.i7296, align 8
  %neg8.i7356 = xor i64 %1027, -1
  %and9.i7357 = and i64 %1026, %neg8.i7356
  store i64 %and9.i7357, i64* %x30303030.i7311, align 8
  %1028 = load i64, i64* %a5.addr.i7298, align 8
  %1029 = load i64, i64* %x30303030.i7311, align 8
  %xor10.i7358 = xor i64 %1028, %1029
  store i64 %xor10.i7358, i64* %x3030CFCF.i7312, align 8
  %1030 = load i64, i64* %x77555775.i7310, align 8
  %1031 = load i64, i64* %x3030CFCF.i7312, align 8
  %and11.i7359 = and i64 %1030, %1031
  store i64 %and11.i7359, i64* %x30104745.i7313, align 8
  %1032 = load i64, i64* %x00555005.i7307, align 8
  %1033 = load i64, i64* %x30104745.i7313, align 8
  %or12.i7360 = or i64 %1032, %1033
  store i64 %or12.i7360, i64* %x30555745.i7314, align 8
  %1034 = load i64, i64* %x00FFF00F.i7306, align 8
  %neg13.i7361 = xor i64 %1034, -1
  store i64 %neg13.i7361, i64* %xFF000FF0.i7315, align 8
  %1035 = load i64, i64* %x30104745.i7313, align 8
  %1036 = load i64, i64* %xFF000FF0.i7315, align 8
  %xor14.i7362 = xor i64 %1035, %1036
  store i64 %xor14.i7362, i64* %xCF1048B5.i7316, align 8
  %1037 = load i64, i64* %a3.addr.i7296, align 8
  %1038 = load i64, i64* %x77555775.i7310, align 8
  %neg15.i7363 = xor i64 %1038, -1
  %and16.i7364 = and i64 %1037, %neg15.i7363
  store i64 %and16.i7364, i64* %x080A080A.i7317, align 8
  %1039 = load i64, i64* %xCF1048B5.i7316, align 8
  %1040 = load i64, i64* %x080A080A.i7317, align 8
  %xor17.i7365 = xor i64 %1039, %1040
  store i64 %xor17.i7365, i64* %xC71A40BF.i7318, align 8
  %1041 = load i64, i64* %x0C0C0C0C.i7304, align 8
  %1042 = load i64, i64* %xC71A40BF.i7318, align 8
  %xor18.i7366 = xor i64 %1041, %1042
  store i64 %xor18.i7366, i64* %xCB164CB3.i7319, align 8
  %1043 = load i64, i64* %x00515001.i7308, align 8
  %1044 = load i64, i64* %a6.addr.i7299, align 8
  %or19.i7367 = or i64 %1043, %1044
  store i64 %or19.i7367, i64* %x10.i7339, align 8
  %1045 = load i64, i64* %x10.i7339, align 8
  %1046 = load i64, i64* %xCB164CB3.i7319, align 8
  %xor20.i7368 = xor i64 %1045, %1046
  store i64 %xor20.i7368, i64* %x11.i7340, align 8
  %1047 = load i64*, i64** %out2.addr.i7301, align 8
  %1048 = load i64, i64* %1047, align 8
  %1049 = load i64, i64* %x11.i7340, align 8
  %xor21.i7369 = xor i64 %1048, %1049
  %1050 = load i64*, i64** %out2.addr.i7301, align 8
  store i64 %xor21.i7369, i64* %1050, align 8
  %1051 = load i64, i64* %a1.addr.i7294, align 8
  %1052 = load i64, i64* %xCB164CB3.i7319, align 8
  %xor22.i7370 = xor i64 %1051, %1052
  store i64 %xor22.i7370, i64* %x9E4319E6.i7320, align 8
  %1053 = load i64, i64* %a5.addr.i7298, align 8
  %1054 = load i64, i64* %x9E4319E6.i7320, align 8
  %and23.i7371 = and i64 %1053, %1054
  store i64 %and23.i7371, i64* %x000019E6.i7321, align 8
  %1055 = load i64, i64* %a2.addr.i7295, align 8
  %1056 = load i64, i64* %xC71A40BF.i7318, align 8
  %xor24.i7372 = xor i64 %1055, %1056
  store i64 %xor24.i7372, i64* %xF429738C.i7322, align 8
  %1057 = load i64, i64* %x000019E6.i7321, align 8
  %1058 = load i64, i64* %xF429738C.i7322, align 8
  %xor25.i7373 = xor i64 %1057, %1058
  store i64 %xor25.i7373, i64* %xF4296A6A.i7323, align 8
  %1059 = load i64, i64* %x33000330.i7309, align 8
  %1060 = load i64, i64* %xF4296A6A.i7323, align 8
  %xor26.i7374 = xor i64 %1059, %1060
  store i64 %xor26.i7374, i64* %xC729695A.i7324, align 8
  %1061 = load i64, i64* %x30555745.i7314, align 8
  %1062 = load i64, i64* %xF4296A6A.i7323, align 8
  %xor27.i7375 = xor i64 %1061, %1062
  store i64 %xor27.i7375, i64* %xC47C3D2F.i7325, align 8
  %1063 = load i64, i64* %a2.addr.i7295, align 8
  %1064 = load i64, i64* %xC47C3D2F.i7325, align 8
  %or28.i7376 = or i64 %1063, %1064
  store i64 %or28.i7376, i64* %xF77F3F3F.i7326, align 8
  %1065 = load i64, i64* %a5.addr.i7298, align 8
  %1066 = load i64, i64* %x9E4319E6.i7320, align 8
  %xor29.i7377 = xor i64 %1065, %1066
  store i64 %xor29.i7377, i64* %x9E43E619.i7327, align 8
  %1067 = load i64, i64* %xF77F3F3F.i7326, align 8
  %1068 = load i64, i64* %x9E43E619.i7327, align 8
  %xor30.i7378 = xor i64 %1067, %1068
  store i64 %xor30.i7378, i64* %x693CD926.i7328, align 8
  %1069 = load i64, i64* %x30555745.i7314, align 8
  %1070 = load i64, i64* %a6.addr.i7299, align 8
  %and31.i7379 = and i64 %1069, %1070
  store i64 %and31.i7379, i64* %x20.i7341, align 8
  %1071 = load i64, i64* %x20.i7341, align 8
  %1072 = load i64, i64* %x693CD926.i7328, align 8
  %xor32.i7380 = xor i64 %1071, %1072
  store i64 %xor32.i7380, i64* %x21.i7342, align 8
  %1073 = load i64*, i64** %out3.addr.i7302, align 8
  %1074 = load i64, i64* %1073, align 8
  %1075 = load i64, i64* %x21.i7342, align 8
  %xor33.i7381 = xor i64 %1074, %1075
  %1076 = load i64*, i64** %out3.addr.i7302, align 8
  store i64 %xor33.i7381, i64* %1076, align 8
  %1077 = load i64, i64* %x3030CFCF.i7312, align 8
  %1078 = load i64, i64* %xC729695A.i7324, align 8
  %xor34.i7382 = xor i64 %1077, %1078
  store i64 %xor34.i7382, i64* %xF719A695.i7329, align 8
  %1079 = load i64, i64* %a4.addr.i7297, align 8
  %1080 = load i64, i64* %xF429738C.i7322, align 8
  %or35.i7383 = or i64 %1079, %1080
  store i64 %or35.i7383, i64* %xF4FF73FF.i7330, align 8
  %1081 = load i64, i64* %xF719A695.i7329, align 8
  %1082 = load i64, i64* %xF4FF73FF.i7330, align 8
  %xor36.i7384 = xor i64 %1081, %1082
  store i64 %xor36.i7384, i64* %x03E6D56A.i7331, align 8
  %1083 = load i64, i64* %a1.addr.i7294, align 8
  %1084 = load i64, i64* %x03E6D56A.i7331, align 8
  %xor37.i7385 = xor i64 %1083, %1084
  store i64 %xor37.i7385, i64* %x56B3803F.i7332, align 8
  %1085 = load i64, i64* %x56B3803F.i7332, align 8
  %1086 = load i64, i64* %a6.addr.i7299, align 8
  %and38.i7386 = and i64 %1085, %1086
  store i64 %and38.i7386, i64* %x30.i7343, align 8
  %1087 = load i64, i64* %x30.i7343, align 8
  %1088 = load i64, i64* %xC729695A.i7324, align 8
  %xor39.i7387 = xor i64 %1087, %1088
  store i64 %xor39.i7387, i64* %x31.i7344, align 8
  %1089 = load i64*, i64** %out4.addr.i7303, align 8
  %1090 = load i64, i64* %1089, align 8
  %1091 = load i64, i64* %x31.i7344, align 8
  %xor40.i7388 = xor i64 %1090, %1091
  %1092 = load i64*, i64** %out4.addr.i7303, align 8
  store i64 %xor40.i7388, i64* %1092, align 8
  %1093 = load i64, i64* %xF719A695.i7329, align 8
  %1094 = load i64, i64* %a4.addr.i7297, align 8
  %neg41.i7389 = xor i64 %1094, -1
  %and42.i7390 = and i64 %1093, %neg41.i7389
  store i64 %and42.i7390, i64* %xF700A600.i7333, align 8
  %1095 = load i64, i64* %x693CD926.i7328, align 8
  %1096 = load i64, i64* %xF700A600.i7333, align 8
  %and43.i7391 = and i64 %1095, %1096
  store i64 %and43.i7391, i64* %x61008000.i7334, align 8
  %1097 = load i64, i64* %x00515001.i7308, align 8
  %1098 = load i64, i64* %x03E6D56A.i7331, align 8
  %xor44.i7392 = xor i64 %1097, %1098
  store i64 %xor44.i7392, i64* %x03B7856B.i7335, align 8
  %1099 = load i64, i64* %x61008000.i7334, align 8
  %1100 = load i64, i64* %x03B7856B.i7335, align 8
  %xor45.i7393 = xor i64 %1099, %1100
  store i64 %xor45.i7393, i64* %x62B7056B.i7336, align 8
  %1101 = load i64, i64* %x62B7056B.i7336, align 8
  %1102 = load i64, i64* %a6.addr.i7299, align 8
  %or46.i7394 = or i64 %1101, %1102
  store i64 %or46.i7394, i64* %x00.i7337, align 8
  %1103 = load i64, i64* %x00.i7337, align 8
  %1104 = load i64, i64* %xC729695A.i7324, align 8
  %xor47.i7395 = xor i64 %1103, %1104
  store i64 %xor47.i7395, i64* %x01.i7338, align 8
  %1105 = load i64*, i64** %out1.addr.i7300, align 8
  %1106 = load i64, i64* %1105, align 8
  %1107 = load i64, i64* %x01.i7338, align 8
  %xor48.i7396 = xor i64 %1106, %1107
  %1108 = load i64*, i64** %out1.addr.i7300, align 8
  store i64 %xor48.i7396, i64* %1108, align 8
  %1109 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 48), align 8
  %arrayidx170 = getelementptr inbounds i64, i64* %1109, i64 0
  %1110 = load i64, i64* %arrayidx170, align 8
  %1111 = load i64**, i64*** %k, align 8
  %arrayidx171 = getelementptr inbounds i64*, i64** %1111, i64 48
  %1112 = load i64*, i64** %arrayidx171, align 8
  %arrayidx172 = getelementptr inbounds i64, i64* %1112, i64 0
  %1113 = load i64, i64* %arrayidx172, align 8
  %xor173 = xor i64 %1110, %1113
  %1114 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 49), align 8
  %arrayidx174 = getelementptr inbounds i64, i64* %1114, i64 0
  %1115 = load i64, i64* %arrayidx174, align 8
  %1116 = load i64**, i64*** %k, align 8
  %arrayidx175 = getelementptr inbounds i64*, i64** %1116, i64 49
  %1117 = load i64*, i64** %arrayidx175, align 8
  %arrayidx176 = getelementptr inbounds i64, i64* %1117, i64 0
  %1118 = load i64, i64* %arrayidx176, align 8
  %xor177 = xor i64 %1115, %1118
  %1119 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 50), align 8
  %arrayidx178 = getelementptr inbounds i64, i64* %1119, i64 0
  %1120 = load i64, i64* %arrayidx178, align 8
  %1121 = load i64**, i64*** %k, align 8
  %arrayidx179 = getelementptr inbounds i64*, i64** %1121, i64 50
  %1122 = load i64*, i64** %arrayidx179, align 8
  %arrayidx180 = getelementptr inbounds i64, i64* %1122, i64 0
  %1123 = load i64, i64* %arrayidx180, align 8
  %xor181 = xor i64 %1120, %1123
  %1124 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 51), align 8
  %arrayidx182 = getelementptr inbounds i64, i64* %1124, i64 0
  %1125 = load i64, i64* %arrayidx182, align 8
  %1126 = load i64**, i64*** %k, align 8
  %arrayidx183 = getelementptr inbounds i64*, i64** %1126, i64 51
  %1127 = load i64*, i64** %arrayidx183, align 8
  %arrayidx184 = getelementptr inbounds i64, i64* %1127, i64 0
  %1128 = load i64, i64* %arrayidx184, align 8
  %xor185 = xor i64 %1125, %1128
  %1129 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 52), align 8
  %arrayidx186 = getelementptr inbounds i64, i64* %1129, i64 0
  %1130 = load i64, i64* %arrayidx186, align 8
  %1131 = load i64**, i64*** %k, align 8
  %arrayidx187 = getelementptr inbounds i64*, i64** %1131, i64 52
  %1132 = load i64*, i64** %arrayidx187, align 8
  %arrayidx188 = getelementptr inbounds i64, i64* %1132, i64 0
  %1133 = load i64, i64* %arrayidx188, align 8
  %xor189 = xor i64 %1130, %1133
  %1134 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 53), align 8
  %arrayidx190 = getelementptr inbounds i64, i64* %1134, i64 0
  %1135 = load i64, i64* %arrayidx190, align 8
  %1136 = load i64**, i64*** %k, align 8
  %arrayidx191 = getelementptr inbounds i64*, i64** %1136, i64 53
  %1137 = load i64*, i64** %arrayidx191, align 8
  %arrayidx192 = getelementptr inbounds i64, i64* %1137, i64 0
  %1138 = load i64, i64* %arrayidx192, align 8
  %xor193 = xor i64 %1135, %1138
  store i64 %xor173, i64* %a1.addr.i7171, align 8
  store i64 %xor177, i64* %a2.addr.i7172, align 8
  store i64 %xor181, i64* %a3.addr.i7173, align 8
  store i64 %xor185, i64* %a4.addr.i7174, align 8
  store i64 %xor189, i64* %a5.addr.i7175, align 8
  store i64 %xor193, i64* %a6.addr.i7176, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 8), i64** %out1.addr.i7177, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 16), i64** %out2.addr.i7178, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 22), i64** %out3.addr.i7179, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 30), i64** %out4.addr.i7180, align 8
  %1139 = load i64, i64* %a1.addr.i7171, align 8
  %1140 = load i64, i64* %a5.addr.i7175, align 8
  %neg.i7230 = xor i64 %1140, -1
  %and.i7231 = and i64 %1139, %neg.i7230
  store i64 %and.i7231, i64* %x55005500.i7181, align 8
  %1141 = load i64, i64* %a4.addr.i7174, align 8
  %1142 = load i64, i64* %x55005500.i7181, align 8
  %xor.i7232 = xor i64 %1141, %1142
  store i64 %xor.i7232, i64* %x5A0F5A0F.i7182, align 8
  %1143 = load i64, i64* %a3.addr.i7173, align 8
  %1144 = load i64, i64* %a6.addr.i7176, align 8
  %or.i7233 = or i64 %1143, %1144
  store i64 %or.i7233, i64* %x3333FFFF.i7183, align 8
  %1145 = load i64, i64* %a1.addr.i7171, align 8
  %1146 = load i64, i64* %a3.addr.i7173, align 8
  %xor1.i7234 = xor i64 %1145, %1146
  store i64 %xor1.i7234, i64* %x66666666.i7184, align 8
  %1147 = load i64, i64* %x3333FFFF.i7183, align 8
  %1148 = load i64, i64* %x66666666.i7184, align 8
  %and2.i7235 = and i64 %1147, %1148
  store i64 %and2.i7235, i64* %x22226666.i7185, align 8
  %1149 = load i64, i64* %a4.addr.i7174, align 8
  %1150 = load i64, i64* %x22226666.i7185, align 8
  %xor3.i7236 = xor i64 %1149, %1150
  store i64 %xor3.i7236, i64* %x2D2D6969.i7186, align 8
  %1151 = load i64, i64* %x2D2D6969.i7186, align 8
  %1152 = load i64, i64* %x5A0F5A0F.i7182, align 8
  %neg4.i7237 = xor i64 %1152, -1
  %and5.i7238 = and i64 %1151, %neg4.i7237
  store i64 %and5.i7238, i64* %x25202160.i7187, align 8
  %1153 = load i64, i64* %a5.addr.i7175, align 8
  %1154 = load i64, i64* %a6.addr.i7176, align 8
  %xor6.i7239 = xor i64 %1153, %1154
  store i64 %xor6.i7239, i64* %x00FFFF00.i7188, align 8
  %1155 = load i64, i64* %a3.addr.i7173, align 8
  %1156 = load i64, i64* %x00FFFF00.i7188, align 8
  %xor7.i7240 = xor i64 %1155, %1156
  store i64 %xor7.i7240, i64* %x33CCCC33.i7189, align 8
  %1157 = load i64, i64* %x5A0F5A0F.i7182, align 8
  %1158 = load i64, i64* %x33CCCC33.i7189, align 8
  %neg8.i7241 = xor i64 %1158, -1
  %and9.i7242 = and i64 %1157, %neg8.i7241
  store i64 %and9.i7242, i64* %x4803120C.i7190, align 8
  %1159 = load i64, i64* %a6.addr.i7176, align 8
  %1160 = load i64, i64* %x22226666.i7185, align 8
  %or10.i7243 = or i64 %1159, %1160
  store i64 %or10.i7243, i64* %x2222FFFF.i7191, align 8
  %1161 = load i64, i64* %x4803120C.i7190, align 8
  %1162 = load i64, i64* %x2222FFFF.i7191, align 8
  %xor11.i7244 = xor i64 %1161, %1162
  store i64 %xor11.i7244, i64* %x6A21EDF3.i7192, align 8
  %1163 = load i64, i64* %x6A21EDF3.i7192, align 8
  %1164 = load i64, i64* %x25202160.i7187, align 8
  %neg12.i7245 = xor i64 %1164, -1
  %and13.i7246 = and i64 %1163, %neg12.i7245
  store i64 %and13.i7246, i64* %x4A01CC93.i7193, align 8
  %1165 = load i64, i64* %a1.addr.i7171, align 8
  %1166 = load i64, i64* %a6.addr.i7176, align 8
  %or14.i7247 = or i64 %1165, %1166
  store i64 %or14.i7247, i64* %x5555FFFF.i7194, align 8
  %1167 = load i64, i64* %x6A21EDF3.i7192, align 8
  %1168 = load i64, i64* %x5555FFFF.i7194, align 8
  %or15.i7248 = or i64 %1167, %1168
  store i64 %or15.i7248, i64* %x7F75FFFF.i7195, align 8
  %1169 = load i64, i64* %a5.addr.i7175, align 8
  %1170 = load i64, i64* %x2D2D6969.i7186, align 8
  %neg16.i7249 = xor i64 %1170, -1
  %and17.i7250 = and i64 %1169, %neg16.i7249
  store i64 %and17.i7250, i64* %x00D20096.i7196, align 8
  %1171 = load i64, i64* %x7F75FFFF.i7195, align 8
  %1172 = load i64, i64* %x00D20096.i7196, align 8
  %xor18.i7251 = xor i64 %1171, %1172
  store i64 %xor18.i7251, i64* %x7FA7FF69.i7197, align 8
  %1173 = load i64, i64* %a4.addr.i7174, align 8
  %1174 = load i64, i64* %x5555FFFF.i7194, align 8
  %neg19.i7252 = xor i64 %1174, -1
  %and20.i7253 = and i64 %1173, %neg19.i7252
  store i64 %and20.i7253, i64* %x0A0A0000.i7198, align 8
  %1175 = load i64, i64* %x00D20096.i7196, align 8
  %1176 = load i64, i64* %x0A0A0000.i7198, align 8
  %xor21.i7254 = xor i64 %1175, %1176
  store i64 %xor21.i7254, i64* %x0AD80096.i7199, align 8
  %1177 = load i64, i64* %x00FFFF00.i7188, align 8
  %1178 = load i64, i64* %x66666666.i7184, align 8
  %neg22.i7255 = xor i64 %1178, -1
  %and23.i7256 = and i64 %1177, %neg22.i7255
  store i64 %and23.i7256, i64* %x00999900.i7200, align 8
  %1179 = load i64, i64* %x0AD80096.i7199, align 8
  %1180 = load i64, i64* %x00999900.i7200, align 8
  %or24.i7257 = or i64 %1179, %1180
  store i64 %or24.i7257, i64* %x0AD99996.i7201, align 8
  %1181 = load i64, i64* %a3.addr.i7173, align 8
  %1182 = load i64, i64* %x55005500.i7181, align 8
  %neg25.i7258 = xor i64 %1182, -1
  %and26.i7259 = and i64 %1181, %neg25.i7258
  store i64 %and26.i7259, i64* %x22332233.i7202, align 8
  %1183 = load i64, i64* %x5A0F5A0F.i7182, align 8
  %1184 = load i64, i64* %x7F75FFFF.i7195, align 8
  %xor27.i7260 = xor i64 %1183, %1184
  store i64 %xor27.i7260, i64* %x257AA5F0.i7203, align 8
  %1185 = load i64, i64* %x257AA5F0.i7203, align 8
  %1186 = load i64, i64* %x22332233.i7202, align 8
  %neg28.i7261 = xor i64 %1186, -1
  %and29.i7262 = and i64 %1185, %neg28.i7261
  store i64 %and29.i7262, i64* %x054885C0.i7204, align 8
  %1187 = load i64, i64* %x054885C0.i7204, align 8
  %neg30.i7263 = xor i64 %1187, -1
  store i64 %neg30.i7263, i64* %xFAB77A3F.i7205, align 8
  %1188 = load i64, i64* %x3333FFFF.i7183, align 8
  %1189 = load i64, i64* %x6A21EDF3.i7192, align 8
  %and31.i7264 = and i64 %1188, %1189
  store i64 %and31.i7264, i64* %x2221EDF3.i7206, align 8
  %1190 = load i64, i64* %xFAB77A3F.i7205, align 8
  %1191 = load i64, i64* %x2221EDF3.i7206, align 8
  %xor32.i7265 = xor i64 %1190, %1191
  store i64 %xor32.i7265, i64* %xD89697CC.i7207, align 8
  %1192 = load i64, i64* %x7FA7FF69.i7197, align 8
  %1193 = load i64, i64* %a2.addr.i7172, align 8
  %neg33.i7266 = xor i64 %1193, -1
  %and34.i7267 = and i64 %1192, %neg33.i7266
  store i64 %and34.i7267, i64* %x20.i7226, align 8
  %1194 = load i64, i64* %x20.i7226, align 8
  %1195 = load i64, i64* %xD89697CC.i7207, align 8
  %xor35.i7268 = xor i64 %1194, %1195
  store i64 %xor35.i7268, i64* %x21.i7227, align 8
  %1196 = load i64*, i64** %out3.addr.i7179, align 8
  %1197 = load i64, i64* %1196, align 8
  %1198 = load i64, i64* %x21.i7227, align 8
  %xor36.i7269 = xor i64 %1197, %1198
  %1199 = load i64*, i64** %out3.addr.i7179, align 8
  store i64 %xor36.i7269, i64* %1199, align 8
  %1200 = load i64, i64* %x00FFFF00.i7188, align 8
  %1201 = load i64, i64* %x054885C0.i7204, align 8
  %xor37.i7270 = xor i64 %1200, %1201
  store i64 %xor37.i7270, i64* %x05B77AC0.i7208, align 8
  %1202 = load i64, i64* %x00D20096.i7196, align 8
  %1203 = load i64, i64* %x05B77AC0.i7208, align 8
  %or38.i7271 = or i64 %1202, %1203
  store i64 %or38.i7271, i64* %x05F77AD6.i7209, align 8
  %1204 = load i64, i64* %x3333FFFF.i7183, align 8
  %1205 = load i64, i64* %x05F77AD6.i7209, align 8
  %xor39.i7272 = xor i64 %1204, %1205
  store i64 %xor39.i7272, i64* %x36C48529.i7210, align 8
  %1206 = load i64, i64* %a1.addr.i7171, align 8
  %1207 = load i64, i64* %x36C48529.i7210, align 8
  %xor40.i7273 = xor i64 %1206, %1207
  store i64 %xor40.i7273, i64* %x6391D07C.i7211, align 8
  %1208 = load i64, i64* %xD89697CC.i7207, align 8
  %1209 = load i64, i64* %x6391D07C.i7211, align 8
  %xor41.i7274 = xor i64 %1208, %1209
  store i64 %xor41.i7274, i64* %xBB0747B0.i7212, align 8
  %1210 = load i64, i64* %x25202160.i7187, align 8
  %1211 = load i64, i64* %a2.addr.i7172, align 8
  %or42.i7275 = or i64 %1210, %1211
  store i64 %or42.i7275, i64* %x00.i7222, align 8
  %1212 = load i64, i64* %x00.i7222, align 8
  %1213 = load i64, i64* %xBB0747B0.i7212, align 8
  %xor43.i7276 = xor i64 %1212, %1213
  store i64 %xor43.i7276, i64* %x01.i7223, align 8
  %1214 = load i64*, i64** %out1.addr.i7177, align 8
  %1215 = load i64, i64* %1214, align 8
  %1216 = load i64, i64* %x01.i7223, align 8
  %xor44.i7277 = xor i64 %1215, %1216
  %1217 = load i64*, i64** %out1.addr.i7177, align 8
  store i64 %xor44.i7277, i64* %1217, align 8
  %1218 = load i64, i64* %x3333FFFF.i7183, align 8
  %1219 = load i64, i64* %x7F75FFFF.i7195, align 8
  %xor45.i7278 = xor i64 %1218, %1219
  store i64 %xor45.i7278, i64* %x4C460000.i7213, align 8
  %1220 = load i64, i64* %x0AD99996.i7201, align 8
  %1221 = load i64, i64* %x4C460000.i7213, align 8
  %or46.i7279 = or i64 %1220, %1221
  store i64 %or46.i7279, i64* %x4EDF9996.i7214, align 8
  %1222 = load i64, i64* %x6391D07C.i7211, align 8
  %1223 = load i64, i64* %x4EDF9996.i7214, align 8
  %xor47.i7280 = xor i64 %1222, %1223
  store i64 %xor47.i7280, i64* %x2D4E49EA.i7215, align 8
  %1224 = load i64, i64* %x00FFFF00.i7188, align 8
  %1225 = load i64, i64* %xBB0747B0.i7212, align 8
  %or48.i7281 = or i64 %1224, %1225
  store i64 %or48.i7281, i64* %xBBFFFFB0.i7216, align 8
  %1226 = load i64, i64* %x2D4E49EA.i7215, align 8
  %1227 = load i64, i64* %xBBFFFFB0.i7216, align 8
  %xor49.i7282 = xor i64 %1226, %1227
  store i64 %xor49.i7282, i64* %x96B1B65A.i7217, align 8
  %1228 = load i64, i64* %x4A01CC93.i7193, align 8
  %1229 = load i64, i64* %a2.addr.i7172, align 8
  %or50.i7283 = or i64 %1228, %1229
  store i64 %or50.i7283, i64* %x10.i7224, align 8
  %1230 = load i64, i64* %x10.i7224, align 8
  %1231 = load i64, i64* %x96B1B65A.i7217, align 8
  %xor51.i7284 = xor i64 %1230, %1231
  store i64 %xor51.i7284, i64* %x11.i7225, align 8
  %1232 = load i64*, i64** %out2.addr.i7178, align 8
  %1233 = load i64, i64* %1232, align 8
  %1234 = load i64, i64* %x11.i7225, align 8
  %xor52.i7285 = xor i64 %1233, %1234
  %1235 = load i64*, i64** %out2.addr.i7178, align 8
  store i64 %xor52.i7285, i64* %1235, align 8
  %1236 = load i64, i64* %a5.addr.i7175, align 8
  %1237 = load i64, i64* %x5A0F5A0F.i7182, align 8
  %or53.i7286 = or i64 %1236, %1237
  store i64 %or53.i7286, i64* %x5AFF5AFF.i7218, align 8
  %1238 = load i64, i64* %x5AFF5AFF.i7218, align 8
  %1239 = load i64, i64* %x2D4E49EA.i7215, align 8
  %neg54.i7287 = xor i64 %1239, -1
  %and55.i7288 = and i64 %1238, %neg54.i7287
  store i64 %and55.i7288, i64* %x52B11215.i7219, align 8
  %1240 = load i64, i64* %x4A01CC93.i7193, align 8
  %1241 = load i64, i64* %x6391D07C.i7211, align 8
  %and56.i7289 = and i64 %1240, %1241
  store i64 %and56.i7289, i64* %x4201C010.i7220, align 8
  %1242 = load i64, i64* %x52B11215.i7219, align 8
  %1243 = load i64, i64* %x4201C010.i7220, align 8
  %xor57.i7290 = xor i64 %1242, %1243
  store i64 %xor57.i7290, i64* %x10B0D205.i7221, align 8
  %1244 = load i64, i64* %x10B0D205.i7221, align 8
  %1245 = load i64, i64* %a2.addr.i7172, align 8
  %or58.i7291 = or i64 %1244, %1245
  store i64 %or58.i7291, i64* %x30.i7228, align 8
  %1246 = load i64, i64* %x30.i7228, align 8
  %1247 = load i64, i64* %x0AD99996.i7201, align 8
  %xor59.i7292 = xor i64 %1246, %1247
  store i64 %xor59.i7292, i64* %x31.i7229, align 8
  %1248 = load i64*, i64** %out4.addr.i7180, align 8
  %1249 = load i64, i64* %1248, align 8
  %1250 = load i64, i64* %x31.i7229, align 8
  %xor60.i7293 = xor i64 %1249, %1250
  %1251 = load i64*, i64** %out4.addr.i7180, align 8
  store i64 %xor60.i7293, i64* %1251, align 8
  %1252 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 54), align 8
  %arrayidx194 = getelementptr inbounds i64, i64* %1252, i64 0
  %1253 = load i64, i64* %arrayidx194, align 8
  %1254 = load i64**, i64*** %k, align 8
  %arrayidx195 = getelementptr inbounds i64*, i64** %1254, i64 54
  %1255 = load i64*, i64** %arrayidx195, align 8
  %arrayidx196 = getelementptr inbounds i64, i64* %1255, i64 0
  %1256 = load i64, i64* %arrayidx196, align 8
  %xor197 = xor i64 %1253, %1256
  %1257 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 55), align 8
  %arrayidx198 = getelementptr inbounds i64, i64* %1257, i64 0
  %1258 = load i64, i64* %arrayidx198, align 8
  %1259 = load i64**, i64*** %k, align 8
  %arrayidx199 = getelementptr inbounds i64*, i64** %1259, i64 55
  %1260 = load i64*, i64** %arrayidx199, align 8
  %arrayidx200 = getelementptr inbounds i64, i64* %1260, i64 0
  %1261 = load i64, i64* %arrayidx200, align 8
  %xor201 = xor i64 %1258, %1261
  %1262 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 56), align 8
  %arrayidx202 = getelementptr inbounds i64, i64* %1262, i64 0
  %1263 = load i64, i64* %arrayidx202, align 8
  %1264 = load i64**, i64*** %k, align 8
  %arrayidx203 = getelementptr inbounds i64*, i64** %1264, i64 56
  %1265 = load i64*, i64** %arrayidx203, align 8
  %arrayidx204 = getelementptr inbounds i64, i64* %1265, i64 0
  %1266 = load i64, i64* %arrayidx204, align 8
  %xor205 = xor i64 %1263, %1266
  %1267 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 57), align 8
  %arrayidx206 = getelementptr inbounds i64, i64* %1267, i64 0
  %1268 = load i64, i64* %arrayidx206, align 8
  %1269 = load i64**, i64*** %k, align 8
  %arrayidx207 = getelementptr inbounds i64*, i64** %1269, i64 57
  %1270 = load i64*, i64** %arrayidx207, align 8
  %arrayidx208 = getelementptr inbounds i64, i64* %1270, i64 0
  %1271 = load i64, i64* %arrayidx208, align 8
  %xor209 = xor i64 %1268, %1271
  %1272 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 58), align 8
  %arrayidx210 = getelementptr inbounds i64, i64* %1272, i64 0
  %1273 = load i64, i64* %arrayidx210, align 8
  %1274 = load i64**, i64*** %k, align 8
  %arrayidx211 = getelementptr inbounds i64*, i64** %1274, i64 58
  %1275 = load i64*, i64** %arrayidx211, align 8
  %arrayidx212 = getelementptr inbounds i64, i64* %1275, i64 0
  %1276 = load i64, i64* %arrayidx212, align 8
  %xor213 = xor i64 %1273, %1276
  %1277 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 59), align 8
  %arrayidx214 = getelementptr inbounds i64, i64* %1277, i64 0
  %1278 = load i64, i64* %arrayidx214, align 8
  %1279 = load i64**, i64*** %k, align 8
  %arrayidx215 = getelementptr inbounds i64*, i64** %1279, i64 59
  %1280 = load i64*, i64** %arrayidx215, align 8
  %arrayidx216 = getelementptr inbounds i64, i64* %1280, i64 0
  %1281 = load i64, i64* %arrayidx216, align 8
  %xor217 = xor i64 %1278, %1281
  store i64 %xor197, i64* %a1.addr.i7057, align 8
  store i64 %xor201, i64* %a2.addr.i7058, align 8
  store i64 %xor205, i64* %a3.addr.i7059, align 8
  store i64 %xor209, i64* %a4.addr.i7060, align 8
  store i64 %xor213, i64* %a5.addr.i7061, align 8
  store i64 %xor217, i64* %a6.addr.i7062, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 12), i64** %out1.addr.i7063, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 27), i64** %out2.addr.i7064, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 1), i64** %out3.addr.i7065, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 17), i64** %out4.addr.i7066, align 8
  %1282 = load i64, i64* %a2.addr.i7058, align 8
  %1283 = load i64, i64* %a5.addr.i7061, align 8
  %xor.i7111 = xor i64 %1282, %1283
  store i64 %xor.i7111, i64* %x33CC33CC.i7067, align 8
  %1284 = load i64, i64* %a1.addr.i7057, align 8
  %1285 = load i64, i64* %a6.addr.i7062, align 8
  %neg.i7112 = xor i64 %1285, -1
  %and.i7113 = and i64 %1284, %neg.i7112
  store i64 %and.i7113, i64* %x55550000.i7068, align 8
  %1286 = load i64, i64* %a5.addr.i7061, align 8
  %1287 = load i64, i64* %x55550000.i7068, align 8
  %neg1.i7114 = xor i64 %1287, -1
  %and2.i7115 = and i64 %1286, %neg1.i7114
  store i64 %and2.i7115, i64* %x00AA00FF.i7069, align 8
  %1288 = load i64, i64* %a2.addr.i7058, align 8
  %1289 = load i64, i64* %x00AA00FF.i7069, align 8
  %or.i7116 = or i64 %1288, %1289
  store i64 %or.i7116, i64* %x33BB33FF.i7070, align 8
  %1290 = load i64, i64* %x33CC33CC.i7067, align 8
  %1291 = load i64, i64* %a6.addr.i7062, align 8
  %neg3.i7117 = xor i64 %1291, -1
  %and4.i7118 = and i64 %1290, %neg3.i7117
  store i64 %and4.i7118, i64* %x33CC0000.i7071, align 8
  %1292 = load i64, i64* %a1.addr.i7057, align 8
  %1293 = load i64, i64* %x33CC33CC.i7067, align 8
  %and5.i7119 = and i64 %1292, %1293
  store i64 %and5.i7119, i64* %x11441144.i7072, align 8
  %1294 = load i64, i64* %a5.addr.i7061, align 8
  %1295 = load i64, i64* %x11441144.i7072, align 8
  %xor6.i7120 = xor i64 %1294, %1295
  store i64 %xor6.i7120, i64* %x11BB11BB.i7073, align 8
  %1296 = load i64, i64* %x11BB11BB.i7073, align 8
  %1297 = load i64, i64* %x33CC0000.i7071, align 8
  %neg7.i7121 = xor i64 %1297, -1
  %and8.i7122 = and i64 %1296, %neg7.i7121
  store i64 %and8.i7122, i64* %x003311BB.i7074, align 8
  %1298 = load i64, i64* %a3.addr.i7059, align 8
  %1299 = load i64, i64* %a6.addr.i7062, align 8
  %and9.i7123 = and i64 %1298, %1299
  store i64 %and9.i7123, i64* %x00000F0F.i7075, align 8
  %1300 = load i64, i64* %x00AA00FF.i7069, align 8
  %1301 = load i64, i64* %x33CC0000.i7071, align 8
  %xor10.i7124 = xor i64 %1300, %1301
  store i64 %xor10.i7124, i64* %x336600FF.i7076, align 8
  %1302 = load i64, i64* %x33BB33FF.i7070, align 8
  %1303 = load i64, i64* %x336600FF.i7076, align 8
  %and11.i7125 = and i64 %1302, %1303
  store i64 %and11.i7125, i64* %x332200FF.i7077, align 8
  %1304 = load i64, i64* %x332200FF.i7077, align 8
  %1305 = load i64, i64* %x00000F0F.i7075, align 8
  %neg12.i7126 = xor i64 %1305, -1
  %and13.i7127 = and i64 %1304, %neg12.i7126
  store i64 %and13.i7127, i64* %x332200F0.i7078, align 8
  %1306 = load i64, i64* %a3.addr.i7059, align 8
  %1307 = load i64, i64* %x332200FF.i7077, align 8
  %and14.i7128 = and i64 %1306, %1307
  store i64 %and14.i7128, i64* %x0302000F.i7079, align 8
  %1308 = load i64, i64* %a1.addr.i7057, align 8
  %neg15.i7129 = xor i64 %1308, -1
  store i64 %neg15.i7129, i64* %xAAAAAAAA.i7080, align 8
  %1309 = load i64, i64* %x0302000F.i7079, align 8
  %1310 = load i64, i64* %xAAAAAAAA.i7080, align 8
  %xor16.i7130 = xor i64 %1309, %1310
  store i64 %xor16.i7130, i64* %xA9A8AAA5.i7081, align 8
  %1311 = load i64, i64* %a6.addr.i7062, align 8
  %1312 = load i64, i64* %x33CC33CC.i7067, align 8
  %xor17.i7131 = xor i64 %1311, %1312
  store i64 %xor17.i7131, i64* %x33CCCC33.i7082, align 8
  %1313 = load i64, i64* %x33CCCC33.i7082, align 8
  %1314 = load i64, i64* %x00000F0F.i7075, align 8
  %neg18.i7132 = xor i64 %1314, -1
  %and19.i7133 = and i64 %1313, %neg18.i7132
  store i64 %and19.i7133, i64* %x33CCC030.i7083, align 8
  %1315 = load i64, i64* %xA9A8AAA5.i7081, align 8
  %1316 = load i64, i64* %x33CCC030.i7083, align 8
  %xor20.i7134 = xor i64 %1315, %1316
  store i64 %xor20.i7134, i64* %x9A646A95.i7084, align 8
  %1317 = load i64, i64* %a4.addr.i7060, align 8
  %1318 = load i64, i64* %x332200F0.i7078, align 8
  %neg21.i7135 = xor i64 %1318, -1
  %and22.i7136 = and i64 %1317, %neg21.i7135
  store i64 %and22.i7136, i64* %x10.i7105, align 8
  %1319 = load i64, i64* %x10.i7105, align 8
  %1320 = load i64, i64* %x9A646A95.i7084, align 8
  %xor23.i7137 = xor i64 %1319, %1320
  store i64 %xor23.i7137, i64* %x11.i7106, align 8
  %1321 = load i64*, i64** %out2.addr.i7064, align 8
  %1322 = load i64, i64* %1321, align 8
  %1323 = load i64, i64* %x11.i7106, align 8
  %xor24.i7138 = xor i64 %1322, %1323
  %1324 = load i64*, i64** %out2.addr.i7064, align 8
  store i64 %xor24.i7138, i64* %1324, align 8
  %1325 = load i64, i64* %a2.addr.i7058, align 8
  %1326 = load i64, i64* %x33CCC030.i7083, align 8
  %neg25.i7139 = xor i64 %1326, -1
  %and26.i7140 = and i64 %1325, %neg25.i7139
  store i64 %and26.i7140, i64* %x00333303.i7085, align 8
  %1327 = load i64, i64* %x11BB11BB.i7073, align 8
  %1328 = load i64, i64* %x00333303.i7085, align 8
  %xor27.i7141 = xor i64 %1327, %1328
  store i64 %xor27.i7141, i64* %x118822B8.i7086, align 8
  %1329 = load i64, i64* %xA9A8AAA5.i7081, align 8
  %1330 = load i64, i64* %x118822B8.i7086, align 8
  %neg28.i7142 = xor i64 %1330, -1
  %and29.i7143 = and i64 %1329, %neg28.i7142
  store i64 %and29.i7143, i64* %xA8208805.i7087, align 8
  %1331 = load i64, i64* %a3.addr.i7059, align 8
  %1332 = load i64, i64* %x33CCCC33.i7082, align 8
  %xor30.i7144 = xor i64 %1331, %1332
  store i64 %xor30.i7144, i64* %x3CC3C33C.i7088, align 8
  %1333 = load i64, i64* %xA8208805.i7087, align 8
  %1334 = load i64, i64* %x3CC3C33C.i7088, align 8
  %xor31.i7145 = xor i64 %1333, %1334
  store i64 %xor31.i7145, i64* %x94E34B39.i7089, align 8
  %1335 = load i64, i64* %x33BB33FF.i7070, align 8
  %1336 = load i64, i64* %a4.addr.i7060, align 8
  %neg32.i7146 = xor i64 %1336, -1
  %and33.i7147 = and i64 %1335, %neg32.i7146
  store i64 %and33.i7147, i64* %x00.i7103, align 8
  %1337 = load i64, i64* %x00.i7103, align 8
  %1338 = load i64, i64* %x94E34B39.i7089, align 8
  %xor34.i7148 = xor i64 %1337, %1338
  store i64 %xor34.i7148, i64* %x01.i7104, align 8
  %1339 = load i64*, i64** %out1.addr.i7063, align 8
  %1340 = load i64, i64* %1339, align 8
  %1341 = load i64, i64* %x01.i7104, align 8
  %xor35.i7149 = xor i64 %1340, %1341
  %1342 = load i64*, i64** %out1.addr.i7063, align 8
  store i64 %xor35.i7149, i64* %1342, align 8
  %1343 = load i64, i64* %x0302000F.i7079, align 8
  %1344 = load i64, i64* %x00333303.i7085, align 8
  %xor36.i7150 = xor i64 %1343, %1344
  store i64 %xor36.i7150, i64* %x0331330C.i7090, align 8
  %1345 = load i64, i64* %x3CC3C33C.i7088, align 8
  %1346 = load i64, i64* %x0331330C.i7090, align 8
  %or37.i7151 = or i64 %1345, %1346
  store i64 %or37.i7151, i64* %x3FF3F33C.i7091, align 8
  %1347 = load i64, i64* %x33BB33FF.i7070, align 8
  %1348 = load i64, i64* %x9A646A95.i7084, align 8
  %xor38.i7152 = xor i64 %1347, %1348
  store i64 %xor38.i7152, i64* %xA9DF596A.i7092, align 8
  %1349 = load i64, i64* %x00000F0F.i7075, align 8
  %1350 = load i64, i64* %xA9DF596A.i7092, align 8
  %or39.i7153 = or i64 %1349, %1350
  store i64 %or39.i7153, i64* %xA9DF5F6F.i7093, align 8
  %1351 = load i64, i64* %x3FF3F33C.i7091, align 8
  %1352 = load i64, i64* %xA9DF5F6F.i7093, align 8
  %xor40.i7154 = xor i64 %1351, %1352
  store i64 %xor40.i7154, i64* %x962CAC53.i7094, align 8
  %1353 = load i64, i64* %x94E34B39.i7089, align 8
  %1354 = load i64, i64* %x0331330C.i7090, align 8
  %xor41.i7155 = xor i64 %1353, %1354
  store i64 %xor41.i7155, i64* %x97D27835.i7095, align 8
  %1355 = load i64, i64* %xA9DF5F6F.i7093, align 8
  %1356 = load i64, i64* %x97D27835.i7095, align 8
  %and42.i7156 = and i64 %1355, %1356
  store i64 %and42.i7156, i64* %x81D25825.i7096, align 8
  %1357 = load i64, i64* %a5.addr.i7061, align 8
  %1358 = load i64, i64* %x81D25825.i7096, align 8
  %xor43.i7157 = xor i64 %1357, %1358
  store i64 %xor43.i7157, i64* %x812D58DA.i7097, align 8
  %1359 = load i64, i64* %x812D58DA.i7097, align 8
  %1360 = load i64, i64* %x33CC0000.i7071, align 8
  %neg44.i7158 = xor i64 %1360, -1
  %and45.i7159 = and i64 %1359, %neg44.i7158
  store i64 %and45.i7159, i64* %x802158DA.i7098, align 8
  %1361 = load i64, i64* %x9A646A95.i7084, align 8
  %1362 = load i64, i64* %x802158DA.i7098, align 8
  %xor46.i7160 = xor i64 %1361, %1362
  store i64 %xor46.i7160, i64* %x1A45324F.i7099, align 8
  %1363 = load i64, i64* %x1A45324F.i7099, align 8
  %1364 = load i64, i64* %a4.addr.i7060, align 8
  %or47.i7161 = or i64 %1363, %1364
  store i64 %or47.i7161, i64* %x20.i7107, align 8
  %1365 = load i64, i64* %x20.i7107, align 8
  %1366 = load i64, i64* %x962CAC53.i7094, align 8
  %xor48.i7162 = xor i64 %1365, %1366
  store i64 %xor48.i7162, i64* %x21.i7108, align 8
  %1367 = load i64*, i64** %out3.addr.i7065, align 8
  %1368 = load i64, i64* %1367, align 8
  %1369 = load i64, i64* %x21.i7108, align 8
  %xor49.i7163 = xor i64 %1368, %1369
  %1370 = load i64*, i64** %out3.addr.i7065, align 8
  store i64 %xor49.i7163, i64* %1370, align 8
  %1371 = load i64, i64* %x1A45324F.i7099, align 8
  %1372 = load i64, i64* %x118822B8.i7086, align 8
  %neg50.i7164 = xor i64 %1372, -1
  %and51.i7165 = and i64 %1371, %neg50.i7164
  store i64 %and51.i7165, i64* %x0A451047.i7100, align 8
  %1373 = load i64, i64* %x33CCCC33.i7082, align 8
  %1374 = load i64, i64* %xA9DF596A.i7092, align 8
  %or52.i7166 = or i64 %1373, %1374
  store i64 %or52.i7166, i64* %xBBDFDD7B.i7101, align 8
  %1375 = load i64, i64* %x0A451047.i7100, align 8
  %1376 = load i64, i64* %xBBDFDD7B.i7101, align 8
  %xor53.i7167 = xor i64 %1375, %1376
  store i64 %xor53.i7167, i64* %xB19ACD3C.i7102, align 8
  %1377 = load i64, i64* %x003311BB.i7074, align 8
  %1378 = load i64, i64* %a4.addr.i7060, align 8
  %or54.i7168 = or i64 %1377, %1378
  store i64 %or54.i7168, i64* %x30.i7109, align 8
  %1379 = load i64, i64* %x30.i7109, align 8
  %1380 = load i64, i64* %xB19ACD3C.i7102, align 8
  %xor55.i7169 = xor i64 %1379, %1380
  store i64 %xor55.i7169, i64* %x31.i7110, align 8
  %1381 = load i64*, i64** %out4.addr.i7066, align 8
  %1382 = load i64, i64* %1381, align 8
  %1383 = load i64, i64* %x31.i7110, align 8
  %xor56.i7170 = xor i64 %1382, %1383
  %1384 = load i64*, i64** %out4.addr.i7066, align 8
  store i64 %xor56.i7170, i64* %1384, align 8
  %1385 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 39), align 8
  %1386 = load i64**, i64*** %k, align 8
  %arrayidx218 = getelementptr inbounds i64*, i64** %1386, i64 60
  %1387 = load i64*, i64** %arrayidx218, align 8
  %arrayidx219 = getelementptr inbounds i64, i64* %1387, i64 0
  %1388 = load i64, i64* %arrayidx219, align 8
  %xor220 = xor i64 %1385, %1388
  %1389 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 40), align 8
  %1390 = load i64**, i64*** %k, align 8
  %arrayidx221 = getelementptr inbounds i64*, i64** %1390, i64 61
  %1391 = load i64*, i64** %arrayidx221, align 8
  %arrayidx222 = getelementptr inbounds i64, i64* %1391, i64 0
  %1392 = load i64, i64* %arrayidx222, align 8
  %xor223 = xor i64 %1389, %1392
  %1393 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 41), align 8
  %1394 = load i64**, i64*** %k, align 8
  %arrayidx224 = getelementptr inbounds i64*, i64** %1394, i64 62
  %1395 = load i64*, i64** %arrayidx224, align 8
  %arrayidx225 = getelementptr inbounds i64, i64* %1395, i64 0
  %1396 = load i64, i64* %arrayidx225, align 8
  %xor226 = xor i64 %1393, %1396
  %1397 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 42), align 8
  %1398 = load i64**, i64*** %k, align 8
  %arrayidx227 = getelementptr inbounds i64*, i64** %1398, i64 63
  %1399 = load i64*, i64** %arrayidx227, align 8
  %arrayidx228 = getelementptr inbounds i64, i64* %1399, i64 0
  %1400 = load i64, i64* %arrayidx228, align 8
  %xor229 = xor i64 %1397, %1400
  %1401 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 43), align 8
  %1402 = load i64**, i64*** %k, align 8
  %arrayidx230 = getelementptr inbounds i64*, i64** %1402, i64 64
  %1403 = load i64*, i64** %arrayidx230, align 8
  %arrayidx231 = getelementptr inbounds i64, i64* %1403, i64 0
  %1404 = load i64, i64* %arrayidx231, align 8
  %xor232 = xor i64 %1401, %1404
  %1405 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 44), align 8
  %1406 = load i64**, i64*** %k, align 8
  %arrayidx233 = getelementptr inbounds i64*, i64** %1406, i64 65
  %1407 = load i64*, i64** %arrayidx233, align 8
  %arrayidx234 = getelementptr inbounds i64, i64* %1407, i64 0
  %1408 = load i64, i64* %arrayidx234, align 8
  %xor235 = xor i64 %1405, %1408
  store i64 %xor220, i64* %a1.addr.i6937, align 8
  store i64 %xor223, i64* %a2.addr.i6938, align 8
  store i64 %xor226, i64* %a3.addr.i6939, align 8
  store i64 %xor229, i64* %a4.addr.i6940, align 8
  store i64 %xor232, i64* %a5.addr.i6941, align 8
  store i64 %xor235, i64* %a6.addr.i6942, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 23), i64** %out1.addr.i6943, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 15), i64** %out2.addr.i6944, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 29), i64** %out3.addr.i6945, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 5), i64** %out4.addr.i6946, align 8
  %1409 = load i64, i64* %a1.addr.i6937, align 8
  %1410 = load i64, i64* %a2.addr.i6938, align 8
  %neg.i6993 = xor i64 %1410, -1
  %and.i6994 = and i64 %1409, %neg.i6993
  store i64 %and.i6994, i64* %x44444444.i6947, align 8
  %1411 = load i64, i64* %a3.addr.i6939, align 8
  %1412 = load i64, i64* %a6.addr.i6942, align 8
  %xor.i6995 = xor i64 %1411, %1412
  store i64 %xor.i6995, i64* %x0F0FF0F0.i6948, align 8
  %1413 = load i64, i64* %x44444444.i6947, align 8
  %1414 = load i64, i64* %x0F0FF0F0.i6948, align 8
  %or.i6996 = or i64 %1413, %1414
  store i64 %or.i6996, i64* %x4F4FF4F4.i6949, align 8
  %1415 = load i64, i64* %a4.addr.i6940, align 8
  %1416 = load i64, i64* %a6.addr.i6942, align 8
  %xor1.i6997 = xor i64 %1415, %1416
  store i64 %xor1.i6997, i64* %x00FFFF00.i6950, align 8
  %1417 = load i64, i64* %x00FFFF00.i6950, align 8
  %1418 = load i64, i64* %a1.addr.i6937, align 8
  %neg2.i6998 = xor i64 %1418, -1
  %and3.i6999 = and i64 %1417, %neg2.i6998
  store i64 %and3.i6999, i64* %x00AAAA00.i6951, align 8
  %1419 = load i64, i64* %x4F4FF4F4.i6949, align 8
  %1420 = load i64, i64* %x00AAAA00.i6951, align 8
  %xor4.i7000 = xor i64 %1419, %1420
  store i64 %xor4.i7000, i64* %x4FE55EF4.i6952, align 8
  %1421 = load i64, i64* %a2.addr.i6938, align 8
  %1422 = load i64, i64* %x0F0FF0F0.i6948, align 8
  %xor5.i7001 = xor i64 %1421, %1422
  store i64 %xor5.i7001, i64* %x3C3CC3C3.i6953, align 8
  %1423 = load i64, i64* %x3C3CC3C3.i6953, align 8
  %1424 = load i64, i64* %a6.addr.i6942, align 8
  %neg6.i7002 = xor i64 %1424, -1
  %and7.i7003 = and i64 %1423, %neg6.i7002
  store i64 %and7.i7003, i64* %x3C3C0000.i6954, align 8
  %1425 = load i64, i64* %x4F4FF4F4.i6949, align 8
  %1426 = load i64, i64* %x3C3C0000.i6954, align 8
  %xor8.i7004 = xor i64 %1425, %1426
  store i64 %xor8.i7004, i64* %x7373F4F4.i6955, align 8
  %1427 = load i64, i64* %x4FE55EF4.i6952, align 8
  %1428 = load i64, i64* %x7373F4F4.i6955, align 8
  %neg9.i7005 = xor i64 %1428, -1
  %and10.i7006 = and i64 %1427, %neg9.i7005
  store i64 %and10.i7006, i64* %x0C840A00.i6956, align 8
  %1429 = load i64, i64* %a6.addr.i6942, align 8
  %1430 = load i64, i64* %x4FE55EF4.i6952, align 8
  %and11.i7007 = and i64 %1429, %1430
  store i64 %and11.i7007, i64* %x00005EF4.i6957, align 8
  %1431 = load i64, i64* %a4.addr.i6940, align 8
  %1432 = load i64, i64* %x00005EF4.i6957, align 8
  %or12.i7008 = or i64 %1431, %1432
  store i64 %or12.i7008, i64* %x00FF5EFF.i6958, align 8
  %1433 = load i64, i64* %a1.addr.i6937, align 8
  %1434 = load i64, i64* %x00FF5EFF.i6958, align 8
  %and13.i7009 = and i64 %1433, %1434
  store i64 %and13.i7009, i64* %x00555455.i6959, align 8
  %1435 = load i64, i64* %x3C3CC3C3.i6953, align 8
  %1436 = load i64, i64* %x00555455.i6959, align 8
  %xor14.i7010 = xor i64 %1435, %1436
  store i64 %xor14.i7010, i64* %x3C699796.i6960, align 8
  %1437 = load i64, i64* %x4FE55EF4.i6952, align 8
  %1438 = load i64, i64* %a5.addr.i6941, align 8
  %neg15.i7011 = xor i64 %1438, -1
  %and16.i7012 = and i64 %1437, %neg15.i7011
  store i64 %and16.i7012, i64* %x30.i6991, align 8
  %1439 = load i64, i64* %x30.i6991, align 8
  %1440 = load i64, i64* %x3C699796.i6960, align 8
  %xor17.i7013 = xor i64 %1439, %1440
  store i64 %xor17.i7013, i64* %x31.i6992, align 8
  %1441 = load i64*, i64** %out4.addr.i6946, align 8
  %1442 = load i64, i64* %1441, align 8
  %1443 = load i64, i64* %x31.i6992, align 8
  %xor18.i7014 = xor i64 %1442, %1443
  %1444 = load i64*, i64** %out4.addr.i6946, align 8
  store i64 %xor18.i7014, i64* %1444, align 8
  %1445 = load i64, i64* %x0F0FF0F0.i6948, align 8
  %1446 = load i64, i64* %x00FFFF00.i6950, align 8
  %and19.i7015 = and i64 %1445, %1446
  store i64 %and19.i7015, i64* %x000FF000.i6961, align 8
  %1447 = load i64, i64* %a1.addr.i6937, align 8
  %1448 = load i64, i64* %a4.addr.i6940, align 8
  %xor20.i7016 = xor i64 %1447, %1448
  store i64 %xor20.i7016, i64* %x55AA55AA.i6962, align 8
  %1449 = load i64, i64* %x7373F4F4.i6955, align 8
  %1450 = load i64, i64* %x55AA55AA.i6962, align 8
  %xor21.i7017 = xor i64 %1449, %1450
  store i64 %xor21.i7017, i64* %x26D9A15E.i6963, align 8
  %1451 = load i64, i64* %a3.addr.i6939, align 8
  %1452 = load i64, i64* %x26D9A15E.i6963, align 8
  %or22.i7018 = or i64 %1451, %1452
  store i64 %or22.i7018, i64* %x2FDFAF5F.i6964, align 8
  %1453 = load i64, i64* %x2FDFAF5F.i6964, align 8
  %1454 = load i64, i64* %x000FF000.i6961, align 8
  %neg23.i7019 = xor i64 %1454, -1
  %and24.i7020 = and i64 %1453, %neg23.i7019
  store i64 %and24.i7020, i64* %x2FD00F5F.i6965, align 8
  %1455 = load i64, i64* %x00AAAA00.i6951, align 8
  %1456 = load i64, i64* %x55AA55AA.i6962, align 8
  %or25.i7021 = or i64 %1455, %1456
  store i64 %or25.i7021, i64* %x55AAFFAA.i6966, align 8
  %1457 = load i64, i64* %x3C699796.i6960, align 8
  %1458 = load i64, i64* %x55AAFFAA.i6966, align 8
  %neg26.i7022 = xor i64 %1458, -1
  %and27.i7023 = and i64 %1457, %neg26.i7022
  store i64 %and27.i7023, i64* %x28410014.i6967, align 8
  %1459 = load i64, i64* %a4.addr.i6940, align 8
  %1460 = load i64, i64* %a6.addr.i6942, align 8
  %and28.i7024 = and i64 %1459, %1460
  store i64 %and28.i7024, i64* %x000000FF.i6968, align 8
  %1461 = load i64, i64* %x000000FF.i6968, align 8
  %1462 = load i64, i64* %a2.addr.i6938, align 8
  %neg29.i7025 = xor i64 %1462, -1
  %and30.i7026 = and i64 %1461, %neg29.i7025
  store i64 %and30.i7026, i64* %x000000CC.i6969, align 8
  %1463 = load i64, i64* %x28410014.i6967, align 8
  %1464 = load i64, i64* %x000000CC.i6969, align 8
  %xor31.i7027 = xor i64 %1463, %1464
  store i64 %xor31.i7027, i64* %x284100D8.i6970, align 8
  %1465 = load i64, i64* %x284100D8.i6970, align 8
  %1466 = load i64, i64* %a3.addr.i6939, align 8
  %neg32.i7028 = xor i64 %1466, -1
  %and33.i7029 = and i64 %1465, %neg32.i7028
  store i64 %and33.i7029, i64* %x204000D0.i6971, align 8
  %1467 = load i64, i64* %x3C3CC3C3.i6953, align 8
  %1468 = load i64, i64* %x000000FF.i6968, align 8
  %or34.i7030 = or i64 %1467, %1468
  store i64 %or34.i7030, i64* %x3C3CC3FF.i6972, align 8
  %1469 = load i64, i64* %x3C3CC3FF.i6972, align 8
  %1470 = load i64, i64* %x204000D0.i6971, align 8
  %neg35.i7031 = xor i64 %1470, -1
  %and36.i7032 = and i64 %1469, %neg35.i7031
  store i64 %and36.i7032, i64* %x1C3CC32F.i6973, align 8
  %1471 = load i64, i64* %a1.addr.i6937, align 8
  %1472 = load i64, i64* %x1C3CC32F.i6973, align 8
  %xor37.i7033 = xor i64 %1471, %1472
  store i64 %xor37.i7033, i64* %x4969967A.i6974, align 8
  %1473 = load i64, i64* %x2FD00F5F.i6965, align 8
  %1474 = load i64, i64* %a5.addr.i6941, align 8
  %and38.i7034 = and i64 %1473, %1474
  store i64 %and38.i7034, i64* %x10.i6987, align 8
  %1475 = load i64, i64* %x10.i6987, align 8
  %1476 = load i64, i64* %x4969967A.i6974, align 8
  %xor39.i7035 = xor i64 %1475, %1476
  store i64 %xor39.i7035, i64* %x11.i6988, align 8
  %1477 = load i64*, i64** %out2.addr.i6944, align 8
  %1478 = load i64, i64* %1477, align 8
  %1479 = load i64, i64* %x11.i6988, align 8
  %xor40.i7036 = xor i64 %1478, %1479
  %1480 = load i64*, i64** %out2.addr.i6944, align 8
  store i64 %xor40.i7036, i64* %1480, align 8
  %1481 = load i64, i64* %x4FE55EF4.i6952, align 8
  %1482 = load i64, i64* %a2.addr.i6938, align 8
  %neg41.i7037 = xor i64 %1482, -1
  %and42.i7038 = and i64 %1481, %neg41.i7037
  store i64 %and42.i7038, i64* %x4CC44CC4.i6975, align 8
  %1483 = load i64, i64* %x4CC44CC4.i6975, align 8
  %1484 = load i64, i64* %a3.addr.i6939, align 8
  %neg43.i7039 = xor i64 %1484, -1
  %and44.i7040 = and i64 %1483, %neg43.i7039
  store i64 %and44.i7040, i64* %x40C040C0.i6976, align 8
  %1485 = load i64, i64* %x3C3CC3C3.i6953, align 8
  %1486 = load i64, i64* %x55AAFFAA.i6966, align 8
  %xor45.i7041 = xor i64 %1485, %1486
  store i64 %xor45.i7041, i64* %x69963C69.i6977, align 8
  %1487 = load i64, i64* %x69963C69.i6977, align 8
  %neg46.i7042 = xor i64 %1487, -1
  store i64 %neg46.i7042, i64* %x9669C396.i6978, align 8
  %1488 = load i64, i64* %x40C040C0.i6976, align 8
  %1489 = load i64, i64* %x9669C396.i6978, align 8
  %xor47.i7043 = xor i64 %1488, %1489
  store i64 %xor47.i7043, i64* %xD6A98356.i6979, align 8
  %1490 = load i64, i64* %a5.addr.i6941, align 8
  %1491 = load i64, i64* %x0C840A00.i6956, align 8
  %neg48.i7044 = xor i64 %1491, -1
  %and49.i7045 = and i64 %1490, %neg48.i7044
  store i64 %and49.i7045, i64* %x00.i6985, align 8
  %1492 = load i64, i64* %x00.i6985, align 8
  %1493 = load i64, i64* %xD6A98356.i6979, align 8
  %xor50.i7046 = xor i64 %1492, %1493
  store i64 %xor50.i7046, i64* %x01.i6986, align 8
  %1494 = load i64*, i64** %out1.addr.i6943, align 8
  %1495 = load i64, i64* %1494, align 8
  %1496 = load i64, i64* %x01.i6986, align 8
  %xor51.i7047 = xor i64 %1495, %1496
  %1497 = load i64*, i64** %out1.addr.i6943, align 8
  store i64 %xor51.i7047, i64* %1497, align 8
  %1498 = load i64, i64* %a4.addr.i6940, align 8
  %1499 = load i64, i64* %x0F0FF0F0.i6948, align 8
  %and52.i7048 = and i64 %1498, %1499
  store i64 %and52.i7048, i64* %x000F00F0.i6980, align 8
  %1500 = load i64, i64* %x3C3CC3C3.i6953, align 8
  %1501 = load i64, i64* %xD6A98356.i6979, align 8
  %or53.i7049 = or i64 %1500, %1501
  store i64 %or53.i7049, i64* %xFEBDC3D7.i6981, align 8
  %1502 = load i64, i64* %xFEBDC3D7.i6981, align 8
  %1503 = load i64, i64* %x000F00F0.i6980, align 8
  %neg54.i7050 = xor i64 %1503, -1
  %and55.i7051 = and i64 %1502, %neg54.i7050
  store i64 %and55.i7051, i64* %xFEB0C307.i6982, align 8
  %1504 = load i64, i64* %x00AAAA00.i6951, align 8
  %1505 = load i64, i64* %x4CC44CC4.i6975, align 8
  %or56.i7052 = or i64 %1504, %1505
  store i64 %or56.i7052, i64* %x4CEEEEC4.i6983, align 8
  %1506 = load i64, i64* %xFEB0C307.i6982, align 8
  %1507 = load i64, i64* %x4CEEEEC4.i6983, align 8
  %xor57.i7053 = xor i64 %1506, %1507
  store i64 %xor57.i7053, i64* %xB25E2DC3.i6984, align 8
  %1508 = load i64, i64* %x284100D8.i6970, align 8
  %1509 = load i64, i64* %a5.addr.i6941, align 8
  %or58.i7054 = or i64 %1508, %1509
  store i64 %or58.i7054, i64* %x20.i6989, align 8
  %1510 = load i64, i64* %x20.i6989, align 8
  %1511 = load i64, i64* %xB25E2DC3.i6984, align 8
  %xor59.i7055 = xor i64 %1510, %1511
  store i64 %xor59.i7055, i64* %x21.i6990, align 8
  %1512 = load i64*, i64** %out3.addr.i6945, align 8
  %1513 = load i64, i64* %1512, align 8
  %1514 = load i64, i64* %x21.i6990, align 8
  %xor60.i7056 = xor i64 %1513, %1514
  %1515 = load i64*, i64** %out3.addr.i6945, align 8
  store i64 %xor60.i7056, i64* %1515, align 8
  %1516 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 43), align 8
  %1517 = load i64**, i64*** %k, align 8
  %arrayidx236 = getelementptr inbounds i64*, i64** %1517, i64 66
  %1518 = load i64*, i64** %arrayidx236, align 8
  %arrayidx237 = getelementptr inbounds i64, i64* %1518, i64 0
  %1519 = load i64, i64* %arrayidx237, align 8
  %xor238 = xor i64 %1516, %1519
  %1520 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 44), align 8
  %1521 = load i64**, i64*** %k, align 8
  %arrayidx239 = getelementptr inbounds i64*, i64** %1521, i64 67
  %1522 = load i64*, i64** %arrayidx239, align 8
  %arrayidx240 = getelementptr inbounds i64, i64* %1522, i64 0
  %1523 = load i64, i64* %arrayidx240, align 8
  %xor241 = xor i64 %1520, %1523
  %1524 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 45), align 8
  %1525 = load i64**, i64*** %k, align 8
  %arrayidx242 = getelementptr inbounds i64*, i64** %1525, i64 68
  %1526 = load i64*, i64** %arrayidx242, align 8
  %arrayidx243 = getelementptr inbounds i64, i64* %1526, i64 0
  %1527 = load i64, i64* %arrayidx243, align 8
  %xor244 = xor i64 %1524, %1527
  %1528 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 46), align 8
  %1529 = load i64**, i64*** %k, align 8
  %arrayidx245 = getelementptr inbounds i64*, i64** %1529, i64 69
  %1530 = load i64*, i64** %arrayidx245, align 8
  %arrayidx246 = getelementptr inbounds i64, i64* %1530, i64 0
  %1531 = load i64, i64* %arrayidx246, align 8
  %xor247 = xor i64 %1528, %1531
  %1532 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 47), align 8
  %1533 = load i64**, i64*** %k, align 8
  %arrayidx248 = getelementptr inbounds i64*, i64** %1533, i64 70
  %1534 = load i64*, i64** %arrayidx248, align 8
  %arrayidx249 = getelementptr inbounds i64, i64* %1534, i64 0
  %1535 = load i64, i64* %arrayidx249, align 8
  %xor250 = xor i64 %1532, %1535
  %1536 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 48), align 8
  %1537 = load i64**, i64*** %k, align 8
  %arrayidx251 = getelementptr inbounds i64*, i64** %1537, i64 71
  %1538 = load i64*, i64** %arrayidx251, align 8
  %arrayidx252 = getelementptr inbounds i64, i64* %1538, i64 0
  %1539 = load i64, i64* %arrayidx252, align 8
  %xor253 = xor i64 %1536, %1539
  store i64 %xor238, i64* %a1.addr.i6848, align 8
  store i64 %xor241, i64* %a2.addr.i6849, align 8
  store i64 %xor244, i64* %a3.addr.i6850, align 8
  store i64 %xor247, i64* %a4.addr.i6851, align 8
  store i64 %xor250, i64* %a5.addr.i6852, align 8
  store i64 %xor253, i64* %a6.addr.i6853, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 25), i64** %out1.addr.i6854, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 19), i64** %out2.addr.i6855, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 9), i64** %out3.addr.i6856, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 0), i64** %out4.addr.i6857, align 8
  %1540 = load i64, i64* %a1.addr.i6848, align 8
  %1541 = load i64, i64* %a3.addr.i6850, align 8
  %xor.i6891 = xor i64 %1540, %1541
  store i64 %xor.i6891, i64* %x5A5A5A5A.i6858, align 8
  %1542 = load i64, i64* %a3.addr.i6850, align 8
  %1543 = load i64, i64* %a5.addr.i6852, align 8
  %xor1.i6892 = xor i64 %1542, %1543
  store i64 %xor1.i6892, i64* %x0F0FF0F0.i6859, align 8
  %1544 = load i64, i64* %a2.addr.i6849, align 8
  %1545 = load i64, i64* %a4.addr.i6851, align 8
  %or.i6893 = or i64 %1544, %1545
  store i64 %or.i6893, i64* %x33FF33FF.i6860, align 8
  %1546 = load i64, i64* %a5.addr.i6852, align 8
  %1547 = load i64, i64* %x33FF33FF.i6860, align 8
  %xor2.i6894 = xor i64 %1546, %1547
  store i64 %xor2.i6894, i64* %x33FFCC00.i6861, align 8
  %1548 = load i64, i64* %x0F0FF0F0.i6859, align 8
  %1549 = load i64, i64* %x33FFCC00.i6861, align 8
  %neg.i6895 = xor i64 %1549, -1
  %and.i6896 = and i64 %1548, %neg.i6895
  store i64 %and.i6896, i64* %x0C0030F0.i6862, align 8
  %1550 = load i64, i64* %x0F0FF0F0.i6859, align 8
  %1551 = load i64, i64* %a2.addr.i6849, align 8
  %neg3.i6897 = xor i64 %1551, -1
  %and4.i6898 = and i64 %1550, %neg3.i6897
  store i64 %and4.i6898, i64* %x0C0CC0C0.i6863, align 8
  %1552 = load i64, i64* %a4.addr.i6851, align 8
  %1553 = load i64, i64* %x0C0CC0C0.i6863, align 8
  %xor5.i6899 = xor i64 %1552, %1553
  store i64 %xor5.i6899, i64* %x0CF3C03F.i6864, align 8
  %1554 = load i64, i64* %x5A5A5A5A.i6858, align 8
  %1555 = load i64, i64* %x0CF3C03F.i6864, align 8
  %or6.i6900 = or i64 %1554, %1555
  store i64 %or6.i6900, i64* %x5EFBDA7F.i6865, align 8
  %1556 = load i64, i64* %x5EFBDA7F.i6865, align 8
  %1557 = load i64, i64* %x0C0030F0.i6862, align 8
  %neg7.i6901 = xor i64 %1557, -1
  %and8.i6902 = and i64 %1556, %neg7.i6901
  store i64 %and8.i6902, i64* %x52FBCA0F.i6866, align 8
  %1558 = load i64, i64* %a2.addr.i6849, align 8
  %1559 = load i64, i64* %x52FBCA0F.i6866, align 8
  %xor9.i6903 = xor i64 %1558, %1559
  store i64 %xor9.i6903, i64* %x61C8F93C.i6867, align 8
  %1560 = load i64, i64* %x0CF3C03F.i6864, align 8
  %1561 = load i64, i64* %x61C8F93C.i6867, align 8
  %and10.i6904 = and i64 %1560, %1561
  store i64 %and10.i6904, i64* %x00C0C03C.i6868, align 8
  %1562 = load i64, i64* %x0F0FF0F0.i6859, align 8
  %1563 = load i64, i64* %x00C0C03C.i6868, align 8
  %neg11.i6905 = xor i64 %1563, -1
  %and12.i6906 = and i64 %1562, %neg11.i6905
  store i64 %and12.i6906, i64* %x0F0F30C0.i6869, align 8
  %1564 = load i64, i64* %x5A5A5A5A.i6858, align 8
  %1565 = load i64, i64* %x61C8F93C.i6867, align 8
  %xor13.i6907 = xor i64 %1564, %1565
  store i64 %xor13.i6907, i64* %x3B92A366.i6870, align 8
  %1566 = load i64, i64* %x3B92A366.i6870, align 8
  %1567 = load i64, i64* %x0F0F30C0.i6869, align 8
  %neg14.i6908 = xor i64 %1567, -1
  %and15.i6909 = and i64 %1566, %neg14.i6908
  store i64 %and15.i6909, i64* %x30908326.i6871, align 8
  %1568 = load i64, i64* %x0C0030F0.i6862, align 8
  %1569 = load i64, i64* %x30908326.i6871, align 8
  %xor16.i6910 = xor i64 %1568, %1569
  store i64 %xor16.i6910, i64* %x3C90B3D6.i6872, align 8
  %1570 = load i64, i64* %a2.addr.i6849, align 8
  %1571 = load i64, i64* %a4.addr.i6851, align 8
  %xor17.i6911 = xor i64 %1570, %1571
  store i64 %xor17.i6911, i64* %x33CC33CC.i6873, align 8
  %1572 = load i64, i64* %a5.addr.i6852, align 8
  %1573 = load i64, i64* %x0C0CC0C0.i6863, align 8
  %or18.i6912 = or i64 %1572, %1573
  store i64 %or18.i6912, i64* %x0C0CFFFF.i6874, align 8
  %1574 = load i64, i64* %x3B92A366.i6870, align 8
  %1575 = load i64, i64* %x0C0CFFFF.i6874, align 8
  %xor19.i6913 = xor i64 %1574, %1575
  store i64 %xor19.i6913, i64* %x379E5C99.i6875, align 8
  %1576 = load i64, i64* %x379E5C99.i6875, align 8
  %1577 = load i64, i64* %x33CC33CC.i6873, align 8
  %neg20.i6914 = xor i64 %1577, -1
  %and21.i6915 = and i64 %1576, %neg20.i6914
  store i64 %and21.i6915, i64* %x04124C11.i6876, align 8
  %1578 = load i64, i64* %x52FBCA0F.i6866, align 8
  %1579 = load i64, i64* %x04124C11.i6876, align 8
  %xor22.i6916 = xor i64 %1578, %1579
  store i64 %xor22.i6916, i64* %x56E9861E.i6877, align 8
  %1580 = load i64, i64* %a6.addr.i6853, align 8
  %1581 = load i64, i64* %x3C90B3D6.i6872, align 8
  %neg23.i6917 = xor i64 %1581, -1
  %and24.i6918 = and i64 %1580, %neg23.i6917
  store i64 %and24.i6918, i64* %x00.i6883, align 8
  %1582 = load i64, i64* %x00.i6883, align 8
  %1583 = load i64, i64* %x56E9861E.i6877, align 8
  %xor25.i6919 = xor i64 %1582, %1583
  store i64 %xor25.i6919, i64* %x01.i6884, align 8
  %1584 = load i64*, i64** %out1.addr.i6854, align 8
  %1585 = load i64, i64* %1584, align 8
  %1586 = load i64, i64* %x01.i6884, align 8
  %xor26.i6920 = xor i64 %1585, %1586
  %1587 = load i64*, i64** %out1.addr.i6854, align 8
  store i64 %xor26.i6920, i64* %1587, align 8
  %1588 = load i64, i64* %x56E9861E.i6877, align 8
  %neg27.i6921 = xor i64 %1588, -1
  store i64 %neg27.i6921, i64* %xA91679E1.i6878, align 8
  %1589 = load i64, i64* %x3C90B3D6.i6872, align 8
  %1590 = load i64, i64* %a6.addr.i6853, align 8
  %neg28.i6922 = xor i64 %1590, -1
  %and29.i6923 = and i64 %1589, %neg28.i6922
  store i64 %and29.i6923, i64* %x10.i6885, align 8
  %1591 = load i64, i64* %x10.i6885, align 8
  %1592 = load i64, i64* %xA91679E1.i6878, align 8
  %xor30.i6924 = xor i64 %1591, %1592
  store i64 %xor30.i6924, i64* %x11.i6886, align 8
  %1593 = load i64*, i64** %out2.addr.i6855, align 8
  %1594 = load i64, i64* %1593, align 8
  %1595 = load i64, i64* %x11.i6886, align 8
  %xor31.i6925 = xor i64 %1594, %1595
  %1596 = load i64*, i64** %out2.addr.i6855, align 8
  store i64 %xor31.i6925, i64* %1596, align 8
  %1597 = load i64, i64* %x3C90B3D6.i6872, align 8
  %1598 = load i64, i64* %xA91679E1.i6878, align 8
  %xor32.i6926 = xor i64 %1597, %1598
  store i64 %xor32.i6926, i64* %x9586CA37.i6879, align 8
  %1599 = load i64, i64* %x9586CA37.i6879, align 8
  %1600 = load i64, i64* %x33CC33CC.i6873, align 8
  %neg33.i6927 = xor i64 %1600, -1
  %and34.i6928 = and i64 %1599, %neg33.i6927
  store i64 %and34.i6928, i64* %x8402C833.i6880, align 8
  %1601 = load i64, i64* %x00C0C03C.i6868, align 8
  %1602 = load i64, i64* %x8402C833.i6880, align 8
  %or35.i6929 = or i64 %1601, %1602
  store i64 %or35.i6929, i64* %x84C2C83F.i6881, align 8
  %1603 = load i64, i64* %x379E5C99.i6875, align 8
  %1604 = load i64, i64* %x84C2C83F.i6881, align 8
  %xor36.i6930 = xor i64 %1603, %1604
  store i64 %xor36.i6930, i64* %xB35C94A6.i6882, align 8
  %1605 = load i64, i64* %x61C8F93C.i6867, align 8
  %1606 = load i64, i64* %a6.addr.i6853, align 8
  %or37.i6931 = or i64 %1605, %1606
  store i64 %or37.i6931, i64* %x20.i6887, align 8
  %1607 = load i64, i64* %x20.i6887, align 8
  %1608 = load i64, i64* %xB35C94A6.i6882, align 8
  %xor38.i6932 = xor i64 %1607, %1608
  store i64 %xor38.i6932, i64* %x21.i6888, align 8
  %1609 = load i64*, i64** %out3.addr.i6856, align 8
  %1610 = load i64, i64* %1609, align 8
  %1611 = load i64, i64* %x21.i6888, align 8
  %xor39.i6933 = xor i64 %1610, %1611
  %1612 = load i64*, i64** %out3.addr.i6856, align 8
  store i64 %xor39.i6933, i64* %1612, align 8
  %1613 = load i64, i64* %a6.addr.i6853, align 8
  %1614 = load i64, i64* %x61C8F93C.i6867, align 8
  %and40.i6934 = and i64 %1613, %1614
  store i64 %and40.i6934, i64* %x30.i6889, align 8
  %1615 = load i64, i64* %x30.i6889, align 8
  %1616 = load i64, i64* %xB35C94A6.i6882, align 8
  %xor41.i6935 = xor i64 %1615, %1616
  store i64 %xor41.i6935, i64* %x31.i6890, align 8
  %1617 = load i64*, i64** %out4.addr.i6857, align 8
  %1618 = load i64, i64* %1617, align 8
  %1619 = load i64, i64* %x31.i6890, align 8
  %xor42.i6936 = xor i64 %1618, %1619
  %1620 = load i64*, i64** %out4.addr.i6857, align 8
  store i64 %xor42.i6936, i64* %1620, align 8
  %1621 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 72), align 8
  %arrayidx254 = getelementptr inbounds i64, i64* %1621, i64 0
  %1622 = load i64, i64* %arrayidx254, align 8
  %1623 = load i64**, i64*** %k, align 8
  %arrayidx255 = getelementptr inbounds i64*, i64** %1623, i64 72
  %1624 = load i64*, i64** %arrayidx255, align 8
  %arrayidx256 = getelementptr inbounds i64, i64* %1624, i64 0
  %1625 = load i64, i64* %arrayidx256, align 8
  %xor257 = xor i64 %1622, %1625
  %1626 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 73), align 8
  %arrayidx258 = getelementptr inbounds i64, i64* %1626, i64 0
  %1627 = load i64, i64* %arrayidx258, align 8
  %1628 = load i64**, i64*** %k, align 8
  %arrayidx259 = getelementptr inbounds i64*, i64** %1628, i64 73
  %1629 = load i64*, i64** %arrayidx259, align 8
  %arrayidx260 = getelementptr inbounds i64, i64* %1629, i64 0
  %1630 = load i64, i64* %arrayidx260, align 8
  %xor261 = xor i64 %1627, %1630
  %1631 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 74), align 8
  %arrayidx262 = getelementptr inbounds i64, i64* %1631, i64 0
  %1632 = load i64, i64* %arrayidx262, align 8
  %1633 = load i64**, i64*** %k, align 8
  %arrayidx263 = getelementptr inbounds i64*, i64** %1633, i64 74
  %1634 = load i64*, i64** %arrayidx263, align 8
  %arrayidx264 = getelementptr inbounds i64, i64* %1634, i64 0
  %1635 = load i64, i64* %arrayidx264, align 8
  %xor265 = xor i64 %1632, %1635
  %1636 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 75), align 8
  %arrayidx266 = getelementptr inbounds i64, i64* %1636, i64 0
  %1637 = load i64, i64* %arrayidx266, align 8
  %1638 = load i64**, i64*** %k, align 8
  %arrayidx267 = getelementptr inbounds i64*, i64** %1638, i64 75
  %1639 = load i64*, i64** %arrayidx267, align 8
  %arrayidx268 = getelementptr inbounds i64, i64* %1639, i64 0
  %1640 = load i64, i64* %arrayidx268, align 8
  %xor269 = xor i64 %1637, %1640
  %1641 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 76), align 8
  %arrayidx270 = getelementptr inbounds i64, i64* %1641, i64 0
  %1642 = load i64, i64* %arrayidx270, align 8
  %1643 = load i64**, i64*** %k, align 8
  %arrayidx271 = getelementptr inbounds i64*, i64** %1643, i64 76
  %1644 = load i64*, i64** %arrayidx271, align 8
  %arrayidx272 = getelementptr inbounds i64, i64* %1644, i64 0
  %1645 = load i64, i64* %arrayidx272, align 8
  %xor273 = xor i64 %1642, %1645
  %1646 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 77), align 8
  %arrayidx274 = getelementptr inbounds i64, i64* %1646, i64 0
  %1647 = load i64, i64* %arrayidx274, align 8
  %1648 = load i64**, i64*** %k, align 8
  %arrayidx275 = getelementptr inbounds i64*, i64** %1648, i64 77
  %1649 = load i64*, i64** %arrayidx275, align 8
  %arrayidx276 = getelementptr inbounds i64, i64* %1649, i64 0
  %1650 = load i64, i64* %arrayidx276, align 8
  %xor277 = xor i64 %1647, %1650
  store i64 %xor257, i64* %a1.addr.i6729, align 8
  store i64 %xor261, i64* %a2.addr.i6730, align 8
  store i64 %xor265, i64* %a3.addr.i6731, align 8
  store i64 %xor269, i64* %a4.addr.i6732, align 8
  store i64 %xor273, i64* %a5.addr.i6733, align 8
  store i64 %xor277, i64* %a6.addr.i6734, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 7), i64** %out1.addr.i6735, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 13), i64** %out2.addr.i6736, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 24), i64** %out3.addr.i6737, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 2), i64** %out4.addr.i6738, align 8
  %1651 = load i64, i64* %a1.addr.i6729, align 8
  %1652 = load i64, i64* %a3.addr.i6731, align 8
  %or.i6787 = or i64 %1651, %1652
  store i64 %or.i6787, i64* %x77777777.i6739, align 8
  %1653 = load i64, i64* %x77777777.i6739, align 8
  %1654 = load i64, i64* %a6.addr.i6734, align 8
  %neg.i6788 = xor i64 %1654, -1
  %and.i6789 = and i64 %1653, %neg.i6788
  store i64 %and.i6789, i64* %x77770000.i6740, align 8
  %1655 = load i64, i64* %a1.addr.i6729, align 8
  %1656 = load i64, i64* %x77770000.i6740, align 8
  %xor.i6790 = xor i64 %1655, %1656
  store i64 %xor.i6790, i64* %x22225555.i6741, align 8
  %1657 = load i64, i64* %a3.addr.i6731, align 8
  %1658 = load i64, i64* %x22225555.i6741, align 8
  %xor1.i6791 = xor i64 %1657, %1658
  store i64 %xor1.i6791, i64* %x11116666.i6742, align 8
  %1659 = load i64, i64* %a4.addr.i6732, align 8
  %1660 = load i64, i64* %x11116666.i6742, align 8
  %or2.i6792 = or i64 %1659, %1660
  store i64 %or2.i6792, i64* %x1F1F6F6F.i6743, align 8
  %1661 = load i64, i64* %x77770000.i6740, align 8
  %1662 = load i64, i64* %a4.addr.i6732, align 8
  %neg3.i6793 = xor i64 %1662, -1
  %and4.i6794 = and i64 %1661, %neg3.i6793
  store i64 %and4.i6794, i64* %x70700000.i6744, align 8
  %1663 = load i64, i64* %a3.addr.i6731, align 8
  %1664 = load i64, i64* %x70700000.i6744, align 8
  %xor5.i6795 = xor i64 %1663, %1664
  store i64 %xor5.i6795, i64* %x43433333.i6745, align 8
  %1665 = load i64, i64* %a5.addr.i6733, align 8
  %1666 = load i64, i64* %x43433333.i6745, align 8
  %and6.i6796 = and i64 %1665, %1666
  store i64 %and6.i6796, i64* %x00430033.i6746, align 8
  %1667 = load i64, i64* %a1.addr.i6729, align 8
  %1668 = load i64, i64* %x11116666.i6742, align 8
  %or7.i6797 = or i64 %1667, %1668
  store i64 %or7.i6797, i64* %x55557777.i6747, align 8
  %1669 = load i64, i64* %x00430033.i6746, align 8
  %1670 = load i64, i64* %x55557777.i6747, align 8
  %xor8.i6798 = xor i64 %1669, %1670
  store i64 %xor8.i6798, i64* %x55167744.i6748, align 8
  %1671 = load i64, i64* %a4.addr.i6732, align 8
  %1672 = load i64, i64* %x55167744.i6748, align 8
  %xor9.i6799 = xor i64 %1671, %1672
  store i64 %xor9.i6799, i64* %x5A19784B.i6749, align 8
  %1673 = load i64, i64* %a6.addr.i6734, align 8
  %1674 = load i64, i64* %x5A19784B.i6749, align 8
  %xor10.i6800 = xor i64 %1673, %1674
  store i64 %xor10.i6800, i64* %x5A1987B4.i6750, align 8
  %1675 = load i64, i64* %x22225555.i6741, align 8
  %1676 = load i64, i64* %x5A1987B4.i6750, align 8
  %or11.i6801 = or i64 %1675, %1676
  store i64 %or11.i6801, i64* %x7A3BD7F5.i6751, align 8
  %1677 = load i64, i64* %a5.addr.i6733, align 8
  %1678 = load i64, i64* %x7A3BD7F5.i6751, align 8
  %and12.i6802 = and i64 %1677, %1678
  store i64 %and12.i6802, i64* %x003B00F5.i6752, align 8
  %1679 = load i64, i64* %x22225555.i6741, align 8
  %1680 = load i64, i64* %x003B00F5.i6752, align 8
  %xor13.i6803 = xor i64 %1679, %1680
  store i64 %xor13.i6803, i64* %x221955A0.i6753, align 8
  %1681 = load i64, i64* %a4.addr.i6732, align 8
  %1682 = load i64, i64* %x55557777.i6747, align 8
  %and14.i6804 = and i64 %1681, %1682
  store i64 %and14.i6804, i64* %x05050707.i6754, align 8
  %1683 = load i64, i64* %x221955A0.i6753, align 8
  %1684 = load i64, i64* %x05050707.i6754, align 8
  %xor15.i6805 = xor i64 %1683, %1684
  store i64 %xor15.i6805, i64* %x271C52A7.i6755, align 8
  %1685 = load i64, i64* %x7A3BD7F5.i6751, align 8
  %1686 = load i64, i64* %a1.addr.i6729, align 8
  %neg16.i6806 = xor i64 %1686, -1
  %and17.i6807 = and i64 %1685, %neg16.i6806
  store i64 %and17.i6807, i64* %x2A2A82A0.i6756, align 8
  %1687 = load i64, i64* %x43433333.i6745, align 8
  %1688 = load i64, i64* %x2A2A82A0.i6756, align 8
  %xor18.i6808 = xor i64 %1687, %1688
  store i64 %xor18.i6808, i64* %x6969B193.i6757, align 8
  %1689 = load i64, i64* %a5.addr.i6733, align 8
  %1690 = load i64, i64* %x1F1F6F6F.i6743, align 8
  %xor19.i6809 = xor i64 %1689, %1690
  store i64 %xor19.i6809, i64* %x1FE06F90.i6758, align 8
  %1691 = load i64, i64* %x1FE06F90.i6758, align 8
  %1692 = load i64, i64* %x6969B193.i6757, align 8
  %neg20.i6810 = xor i64 %1692, -1
  %and21.i6811 = and i64 %1691, %neg20.i6810
  store i64 %and21.i6811, i64* %x16804E00.i6759, align 8
  %1693 = load i64, i64* %x16804E00.i6759, align 8
  %neg22.i6812 = xor i64 %1693, -1
  store i64 %neg22.i6812, i64* %xE97FB1FF.i6760, align 8
  %1694 = load i64, i64* %xE97FB1FF.i6760, align 8
  %1695 = load i64, i64* %a2.addr.i6730, align 8
  %neg23.i6813 = xor i64 %1695, -1
  %and24.i6814 = and i64 %1694, %neg23.i6813
  store i64 %and24.i6814, i64* %x20.i6783, align 8
  %1696 = load i64, i64* %x20.i6783, align 8
  %1697 = load i64, i64* %x5A19784B.i6749, align 8
  %xor25.i6815 = xor i64 %1696, %1697
  store i64 %xor25.i6815, i64* %x21.i6784, align 8
  %1698 = load i64*, i64** %out3.addr.i6737, align 8
  %1699 = load i64, i64* %1698, align 8
  %1700 = load i64, i64* %x21.i6784, align 8
  %xor26.i6816 = xor i64 %1699, %1700
  %1701 = load i64*, i64** %out3.addr.i6737, align 8
  store i64 %xor26.i6816, i64* %1701, align 8
  %1702 = load i64, i64* %x43433333.i6745, align 8
  %1703 = load i64, i64* %x003B00F5.i6752, align 8
  %neg27.i6817 = xor i64 %1703, -1
  %and28.i6818 = and i64 %1702, %neg27.i6817
  store i64 %and28.i6818, i64* %x43403302.i6761, align 8
  %1704 = load i64, i64* %x2A2A82A0.i6756, align 8
  %1705 = load i64, i64* %x1FE06F90.i6758, align 8
  %xor29.i6819 = xor i64 %1704, %1705
  store i64 %xor29.i6819, i64* %x35CAED30.i6762, align 8
  %1706 = load i64, i64* %x271C52A7.i6755, align 8
  %1707 = load i64, i64* %x35CAED30.i6762, align 8
  %or30.i6820 = or i64 %1706, %1707
  store i64 %or30.i6820, i64* %x37DEFFB7.i6763, align 8
  %1708 = load i64, i64* %x37DEFFB7.i6763, align 8
  %1709 = load i64, i64* %x43403302.i6761, align 8
  %neg31.i6821 = xor i64 %1709, -1
  %and32.i6822 = and i64 %1708, %neg31.i6821
  store i64 %and32.i6822, i64* %x349ECCB5.i6764, align 8
  %1710 = load i64, i64* %x1F1F6F6F.i6743, align 8
  %1711 = load i64, i64* %x349ECCB5.i6764, align 8
  %neg33.i6823 = xor i64 %1711, -1
  %and34.i6824 = and i64 %1710, %neg33.i6823
  store i64 %and34.i6824, i64* %x0B01234A.i6765, align 8
  %1712 = load i64, i64* %x5A1987B4.i6750, align 8
  %1713 = load i64, i64* %x349ECCB5.i6764, align 8
  %and35.i6825 = and i64 %1712, %1713
  store i64 %and35.i6825, i64* %x101884B4.i6766, align 8
  %1714 = load i64, i64* %x1FE06F90.i6758, align 8
  %1715 = load i64, i64* %x101884B4.i6766, align 8
  %xor36.i6826 = xor i64 %1714, %1715
  store i64 %xor36.i6826, i64* %x0FF8EB24.i6767, align 8
  %1716 = load i64, i64* %x43433333.i6745, align 8
  %1717 = load i64, i64* %x55557777.i6747, align 8
  %and37.i6827 = and i64 %1716, %1717
  store i64 %and37.i6827, i64* %x41413333.i6768, align 8
  %1718 = load i64, i64* %x0FF8EB24.i6767, align 8
  %1719 = load i64, i64* %x41413333.i6768, align 8
  %or38.i6828 = or i64 %1718, %1719
  store i64 %or38.i6828, i64* %x4FF9FB37.i6769, align 8
  %1720 = load i64, i64* %x003B00F5.i6752, align 8
  %1721 = load i64, i64* %x4FF9FB37.i6769, align 8
  %xor39.i6829 = xor i64 %1720, %1721
  store i64 %xor39.i6829, i64* %x4FC2FBC2.i6770, align 8
  %1722 = load i64, i64* %x4FC2FBC2.i6770, align 8
  %1723 = load i64, i64* %a2.addr.i6730, align 8
  %and40.i6830 = and i64 %1722, %1723
  store i64 %and40.i6830, i64* %x30.i6785, align 8
  %1724 = load i64, i64* %x30.i6785, align 8
  %1725 = load i64, i64* %x271C52A7.i6755, align 8
  %xor41.i6831 = xor i64 %1724, %1725
  store i64 %xor41.i6831, i64* %x31.i6786, align 8
  %1726 = load i64*, i64** %out4.addr.i6738, align 8
  %1727 = load i64, i64* %1726, align 8
  %1728 = load i64, i64* %x31.i6786, align 8
  %xor42.i6832 = xor i64 %1727, %1728
  %1729 = load i64*, i64** %out4.addr.i6738, align 8
  store i64 %xor42.i6832, i64* %1729, align 8
  %1730 = load i64, i64* %a1.addr.i6729, align 8
  %1731 = load i64, i64* %x77777777.i6739, align 8
  %xor43.i6833 = xor i64 %1730, %1731
  store i64 %xor43.i6833, i64* %x22222222.i6771, align 8
  %1732 = load i64, i64* %x349ECCB5.i6764, align 8
  %1733 = load i64, i64* %x22222222.i6771, align 8
  %xor44.i6834 = xor i64 %1732, %1733
  store i64 %xor44.i6834, i64* %x16BCEE97.i6772, align 8
  %1734 = load i64, i64* %a4.addr.i6732, align 8
  %1735 = load i64, i64* %x0FF8EB24.i6767, align 8
  %and45.i6835 = and i64 %1734, %1735
  store i64 %and45.i6835, i64* %x0F080B04.i6773, align 8
  %1736 = load i64, i64* %x16BCEE97.i6772, align 8
  %1737 = load i64, i64* %x0F080B04.i6773, align 8
  %xor46.i6836 = xor i64 %1736, %1737
  store i64 %xor46.i6836, i64* %x19B4E593.i6774, align 8
  %1738 = load i64, i64* %x0B01234A.i6765, align 8
  %1739 = load i64, i64* %a2.addr.i6730, align 8
  %or47.i6837 = or i64 %1738, %1739
  store i64 %or47.i6837, i64* %x00.i6779, align 8
  %1740 = load i64, i64* %x00.i6779, align 8
  %1741 = load i64, i64* %x19B4E593.i6774, align 8
  %xor48.i6838 = xor i64 %1740, %1741
  store i64 %xor48.i6838, i64* %x01.i6780, align 8
  %1742 = load i64*, i64** %out1.addr.i6735, align 8
  %1743 = load i64, i64* %1742, align 8
  %1744 = load i64, i64* %x01.i6780, align 8
  %xor49.i6839 = xor i64 %1743, %1744
  %1745 = load i64*, i64** %out1.addr.i6735, align 8
  store i64 %xor49.i6839, i64* %1745, align 8
  %1746 = load i64, i64* %x1F1F6F6F.i6743, align 8
  %1747 = load i64, i64* %x43433333.i6745, align 8
  %xor50.i6840 = xor i64 %1746, %1747
  store i64 %xor50.i6840, i64* %x5C5C5C5C.i6775, align 8
  %1748 = load i64, i64* %x5C5C5C5C.i6775, align 8
  %1749 = load i64, i64* %x19B4E593.i6774, align 8
  %neg51.i6841 = xor i64 %1749, -1
  %and52.i6842 = and i64 %1748, %neg51.i6841
  store i64 %and52.i6842, i64* %x4448184C.i6776, align 8
  %1750 = load i64, i64* %x22225555.i6741, align 8
  %1751 = load i64, i64* %x0FF8EB24.i6767, align 8
  %xor53.i6843 = xor i64 %1750, %1751
  store i64 %xor53.i6843, i64* %x2DDABE71.i6777, align 8
  %1752 = load i64, i64* %x4448184C.i6776, align 8
  %1753 = load i64, i64* %x2DDABE71.i6777, align 8
  %xor54.i6844 = xor i64 %1752, %1753
  store i64 %xor54.i6844, i64* %x6992A63D.i6778, align 8
  %1754 = load i64, i64* %x1F1F6F6F.i6743, align 8
  %1755 = load i64, i64* %a2.addr.i6730, align 8
  %and55.i6845 = and i64 %1754, %1755
  store i64 %and55.i6845, i64* %x10.i6781, align 8
  %1756 = load i64, i64* %x10.i6781, align 8
  %1757 = load i64, i64* %x6992A63D.i6778, align 8
  %xor56.i6846 = xor i64 %1756, %1757
  store i64 %xor56.i6846, i64* %x11.i6782, align 8
  %1758 = load i64*, i64** %out2.addr.i6736, align 8
  %1759 = load i64, i64* %1758, align 8
  %1760 = load i64, i64* %x11.i6782, align 8
  %xor57.i6847 = xor i64 %1759, %1760
  %1761 = load i64*, i64** %out2.addr.i6736, align 8
  store i64 %xor57.i6847, i64* %1761, align 8
  %1762 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 78), align 8
  %arrayidx278 = getelementptr inbounds i64, i64* %1762, i64 0
  %1763 = load i64, i64* %arrayidx278, align 8
  %1764 = load i64**, i64*** %k, align 8
  %arrayidx279 = getelementptr inbounds i64*, i64** %1764, i64 78
  %1765 = load i64*, i64** %arrayidx279, align 8
  %arrayidx280 = getelementptr inbounds i64, i64* %1765, i64 0
  %1766 = load i64, i64* %arrayidx280, align 8
  %xor281 = xor i64 %1763, %1766
  %1767 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 79), align 8
  %arrayidx282 = getelementptr inbounds i64, i64* %1767, i64 0
  %1768 = load i64, i64* %arrayidx282, align 8
  %1769 = load i64**, i64*** %k, align 8
  %arrayidx283 = getelementptr inbounds i64*, i64** %1769, i64 79
  %1770 = load i64*, i64** %arrayidx283, align 8
  %arrayidx284 = getelementptr inbounds i64, i64* %1770, i64 0
  %1771 = load i64, i64* %arrayidx284, align 8
  %xor285 = xor i64 %1768, %1771
  %1772 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 80), align 8
  %arrayidx286 = getelementptr inbounds i64, i64* %1772, i64 0
  %1773 = load i64, i64* %arrayidx286, align 8
  %1774 = load i64**, i64*** %k, align 8
  %arrayidx287 = getelementptr inbounds i64*, i64** %1774, i64 80
  %1775 = load i64*, i64** %arrayidx287, align 8
  %arrayidx288 = getelementptr inbounds i64, i64* %1775, i64 0
  %1776 = load i64, i64* %arrayidx288, align 8
  %xor289 = xor i64 %1773, %1776
  %1777 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 81), align 8
  %arrayidx290 = getelementptr inbounds i64, i64* %1777, i64 0
  %1778 = load i64, i64* %arrayidx290, align 8
  %1779 = load i64**, i64*** %k, align 8
  %arrayidx291 = getelementptr inbounds i64*, i64** %1779, i64 81
  %1780 = load i64*, i64** %arrayidx291, align 8
  %arrayidx292 = getelementptr inbounds i64, i64* %1780, i64 0
  %1781 = load i64, i64* %arrayidx292, align 8
  %xor293 = xor i64 %1778, %1781
  %1782 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 82), align 8
  %arrayidx294 = getelementptr inbounds i64, i64* %1782, i64 0
  %1783 = load i64, i64* %arrayidx294, align 8
  %1784 = load i64**, i64*** %k, align 8
  %arrayidx295 = getelementptr inbounds i64*, i64** %1784, i64 82
  %1785 = load i64*, i64** %arrayidx295, align 8
  %arrayidx296 = getelementptr inbounds i64, i64* %1785, i64 0
  %1786 = load i64, i64* %arrayidx296, align 8
  %xor297 = xor i64 %1783, %1786
  %1787 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 83), align 8
  %arrayidx298 = getelementptr inbounds i64, i64* %1787, i64 0
  %1788 = load i64, i64* %arrayidx298, align 8
  %1789 = load i64**, i64*** %k, align 8
  %arrayidx299 = getelementptr inbounds i64*, i64** %1789, i64 83
  %1790 = load i64*, i64** %arrayidx299, align 8
  %arrayidx300 = getelementptr inbounds i64, i64* %1790, i64 0
  %1791 = load i64, i64* %arrayidx300, align 8
  %xor301 = xor i64 %1788, %1791
  store i64 %xor281, i64* %a1.addr.i6615, align 8
  store i64 %xor285, i64* %a2.addr.i6616, align 8
  store i64 %xor289, i64* %a3.addr.i6617, align 8
  store i64 %xor293, i64* %a4.addr.i6618, align 8
  store i64 %xor297, i64* %a5.addr.i6619, align 8
  store i64 %xor301, i64* %a6.addr.i6620, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 3), i64** %out1.addr.i6621, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 28), i64** %out2.addr.i6622, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 10), i64** %out3.addr.i6623, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 18), i64** %out4.addr.i6624, align 8
  %1792 = load i64, i64* %a2.addr.i6616, align 8
  %1793 = load i64, i64* %a5.addr.i6619, align 8
  %xor.i6671 = xor i64 %1792, %1793
  store i64 %xor.i6671, i64* %x33CC33CC.i6625, align 8
  %1794 = load i64, i64* %a2.addr.i6616, align 8
  %1795 = load i64, i64* %a6.addr.i6620, align 8
  %or.i6672 = or i64 %1794, %1795
  store i64 %or.i6672, i64* %x3333FFFF.i6626, align 8
  %1796 = load i64, i64* %a1.addr.i6615, align 8
  %1797 = load i64, i64* %x3333FFFF.i6626, align 8
  %and.i6673 = and i64 %1796, %1797
  store i64 %and.i6673, i64* %x11115555.i6627, align 8
  %1798 = load i64, i64* %x33CC33CC.i6625, align 8
  %1799 = load i64, i64* %x11115555.i6627, align 8
  %xor1.i6674 = xor i64 %1798, %1799
  store i64 %xor1.i6674, i64* %x22DD6699.i6628, align 8
  %1800 = load i64, i64* %a6.addr.i6620, align 8
  %1801 = load i64, i64* %x22DD6699.i6628, align 8
  %xor2.i6675 = xor i64 %1800, %1801
  store i64 %xor2.i6675, i64* %x22DD9966.i6629, align 8
  %1802 = load i64, i64* %a5.addr.i6619, align 8
  %1803 = load i64, i64* %x22DD9966.i6629, align 8
  %neg.i6676 = xor i64 %1803, -1
  %and3.i6677 = and i64 %1802, %neg.i6676
  store i64 %and3.i6677, i64* %x00220099.i6630, align 8
  %1804 = load i64, i64* %a1.addr.i6615, align 8
  %1805 = load i64, i64* %x22DD9966.i6629, align 8
  %and4.i6678 = and i64 %1804, %1805
  store i64 %and4.i6678, i64* %x00551144.i6631, align 8
  %1806 = load i64, i64* %a2.addr.i6616, align 8
  %1807 = load i64, i64* %x00551144.i6631, align 8
  %xor5.i6679 = xor i64 %1806, %1807
  store i64 %xor5.i6679, i64* %x33662277.i6632, align 8
  %1808 = load i64, i64* %a1.addr.i6615, align 8
  %1809 = load i64, i64* %a3.addr.i6617, align 8
  %xor6.i6680 = xor i64 %1808, %1809
  store i64 %xor6.i6680, i64* %x5A5A5A5A.i6633, align 8
  %1810 = load i64, i64* %x33662277.i6632, align 8
  %1811 = load i64, i64* %x5A5A5A5A.i6633, align 8
  %or7.i6681 = or i64 %1810, %1811
  store i64 %or7.i6681, i64* %x7B7E7A7F.i6634, align 8
  %1812 = load i64, i64* %x22DD6699.i6628, align 8
  %1813 = load i64, i64* %x7B7E7A7F.i6634, align 8
  %xor8.i6682 = xor i64 %1812, %1813
  store i64 %xor8.i6682, i64* %x59A31CE6.i6635, align 8
  %1814 = load i64, i64* %a3.addr.i6617, align 8
  %1815 = load i64, i64* %x59A31CE6.i6635, align 8
  %and9.i6683 = and i64 %1814, %1815
  store i64 %and9.i6683, i64* %x09030C06.i6636, align 8
  %1816 = load i64, i64* %x09030C06.i6636, align 8
  %1817 = load i64, i64* %a6.addr.i6620, align 8
  %neg10.i6684 = xor i64 %1817, -1
  %and11.i6685 = and i64 %1816, %neg10.i6684
  store i64 %and11.i6685, i64* %x09030000.i6637, align 8
  %1818 = load i64, i64* %x00220099.i6630, align 8
  %1819 = load i64, i64* %x33662277.i6632, align 8
  %or12.i6686 = or i64 %1818, %1819
  store i64 %or12.i6686, i64* %x336622FF.i6638, align 8
  %1820 = load i64, i64* %x09030000.i6637, align 8
  %1821 = load i64, i64* %x336622FF.i6638, align 8
  %xor13.i6687 = xor i64 %1820, %1821
  store i64 %xor13.i6687, i64* %x3A6522FF.i6639, align 8
  %1822 = load i64, i64* %x3A6522FF.i6639, align 8
  %1823 = load i64, i64* %a4.addr.i6618, align 8
  %and14.i6688 = and i64 %1822, %1823
  store i64 %and14.i6688, i64* %x30.i6669, align 8
  %1824 = load i64, i64* %x30.i6669, align 8
  %1825 = load i64, i64* %x59A31CE6.i6635, align 8
  %xor15.i6689 = xor i64 %1824, %1825
  store i64 %xor15.i6689, i64* %x31.i6670, align 8
  %1826 = load i64*, i64** %out4.addr.i6624, align 8
  %1827 = load i64, i64* %1826, align 8
  %1828 = load i64, i64* %x31.i6670, align 8
  %xor16.i6690 = xor i64 %1827, %1828
  %1829 = load i64*, i64** %out4.addr.i6624, align 8
  store i64 %xor16.i6690, i64* %1829, align 8
  %1830 = load i64, i64* %a2.addr.i6616, align 8
  %1831 = load i64, i64* %x7B7E7A7F.i6634, align 8
  %xor17.i6691 = xor i64 %1830, %1831
  store i64 %xor17.i6691, i64* %x484D494C.i6640, align 8
  %1832 = load i64, i64* %a6.addr.i6620, align 8
  %1833 = load i64, i64* %x484D494C.i6640, align 8
  %neg18.i6692 = xor i64 %1833, -1
  %and19.i6693 = and i64 %1832, %neg18.i6692
  store i64 %and19.i6693, i64* %x0000B6B3.i6641, align 8
  %1834 = load i64, i64* %a3.addr.i6617, align 8
  %1835 = load i64, i64* %x0000B6B3.i6641, align 8
  %xor20.i6694 = xor i64 %1834, %1835
  store i64 %xor20.i6694, i64* %x0F0FB9BC.i6642, align 8
  %1836 = load i64, i64* %a5.addr.i6619, align 8
  %1837 = load i64, i64* %x09030C06.i6636, align 8
  %neg21.i6695 = xor i64 %1837, -1
  %and22.i6696 = and i64 %1836, %neg21.i6695
  store i64 %and22.i6696, i64* %x00FC00F9.i6643, align 8
  %1838 = load i64, i64* %x0F0FB9BC.i6642, align 8
  %1839 = load i64, i64* %x00FC00F9.i6643, align 8
  %or23.i6697 = or i64 %1838, %1839
  store i64 %or23.i6697, i64* %x0FFFB9FD.i6644, align 8
  %1840 = load i64, i64* %a1.addr.i6615, align 8
  %1841 = load i64, i64* %x59A31CE6.i6635, align 8
  %or24.i6698 = or i64 %1840, %1841
  store i64 %or24.i6698, i64* %x5DF75DF7.i6645, align 8
  %1842 = load i64, i64* %x336622FF.i6638, align 8
  %1843 = load i64, i64* %x5DF75DF7.i6645, align 8
  %and25.i6699 = and i64 %1842, %1843
  store i64 %and25.i6699, i64* %x116600F7.i6646, align 8
  %1844 = load i64, i64* %x0F0FB9BC.i6642, align 8
  %1845 = load i64, i64* %x116600F7.i6646, align 8
  %xor26.i6700 = xor i64 %1844, %1845
  store i64 %xor26.i6700, i64* %x1E69B94B.i6647, align 8
  %1846 = load i64, i64* %x1E69B94B.i6647, align 8
  %1847 = load i64, i64* %x09030000.i6637, align 8
  %neg27.i6701 = xor i64 %1847, -1
  %and28.i6702 = and i64 %1846, %neg27.i6701
  store i64 %and28.i6702, i64* %x1668B94B.i6648, align 8
  %1848 = load i64, i64* %x00220099.i6630, align 8
  %1849 = load i64, i64* %a4.addr.i6618, align 8
  %or29.i6703 = or i64 %1848, %1849
  store i64 %or29.i6703, i64* %x20.i6667, align 8
  %1850 = load i64, i64* %x20.i6667, align 8
  %1851 = load i64, i64* %x1668B94B.i6648, align 8
  %xor30.i6704 = xor i64 %1850, %1851
  store i64 %xor30.i6704, i64* %x21.i6668, align 8
  %1852 = load i64*, i64** %out3.addr.i6623, align 8
  %1853 = load i64, i64* %1852, align 8
  %1854 = load i64, i64* %x21.i6668, align 8
  %xor31.i6705 = xor i64 %1853, %1854
  %1855 = load i64*, i64** %out3.addr.i6623, align 8
  store i64 %xor31.i6705, i64* %1855, align 8
  %1856 = load i64, i64* %a2.addr.i6616, align 8
  %1857 = load i64, i64* %x5A5A5A5A.i6633, align 8
  %or32.i6706 = or i64 %1856, %1857
  store i64 %or32.i6706, i64* %x7B7B7B7B.i6649, align 8
  %1858 = load i64, i64* %x3A6522FF.i6639, align 8
  %1859 = load i64, i64* %x7B7B7B7B.i6649, align 8
  %xor33.i6707 = xor i64 %1858, %1859
  store i64 %xor33.i6707, i64* %x411E5984.i6650, align 8
  %1860 = load i64, i64* %x11115555.i6627, align 8
  %1861 = load i64, i64* %x0FFFB9FD.i6644, align 8
  %or34.i6708 = or i64 %1860, %1861
  store i64 %or34.i6708, i64* %x1FFFFDFD.i6651, align 8
  %1862 = load i64, i64* %x411E5984.i6650, align 8
  %1863 = load i64, i64* %x1FFFFDFD.i6651, align 8
  %xor35.i6709 = xor i64 %1862, %1863
  store i64 %xor35.i6709, i64* %x5EE1A479.i6652, align 8
  %1864 = load i64, i64* %x22DD6699.i6628, align 8
  %1865 = load i64, i64* %x1E69B94B.i6647, align 8
  %xor36.i6710 = xor i64 %1864, %1865
  store i64 %xor36.i6710, i64* %x3CB4DFD2.i6653, align 8
  %1866 = load i64, i64* %a5.addr.i6619, align 8
  %1867 = load i64, i64* %x3CB4DFD2.i6653, align 8
  %neg37.i6711 = xor i64 %1867, -1
  %and38.i6712 = and i64 %1866, %neg37.i6711
  store i64 %and38.i6712, i64* %x004B002D.i6654, align 8
  %1868 = load i64, i64* %x484D494C.i6640, align 8
  %neg39.i6713 = xor i64 %1868, -1
  store i64 %neg39.i6713, i64* %xB7B2B6B3.i6655, align 8
  %1869 = load i64, i64* %x7B7B7B7B.i6649, align 8
  %1870 = load i64, i64* %xB7B2B6B3.i6655, align 8
  %xor40.i6714 = xor i64 %1869, %1870
  store i64 %xor40.i6714, i64* %xCCC9CDC8.i6656, align 8
  %1871 = load i64, i64* %x004B002D.i6654, align 8
  %1872 = load i64, i64* %xCCC9CDC8.i6656, align 8
  %xor41.i6715 = xor i64 %1871, %1872
  store i64 %xor41.i6715, i64* %xCC82CDE5.i6657, align 8
  %1873 = load i64, i64* %xCC82CDE5.i6657, align 8
  %1874 = load i64, i64* %a4.addr.i6618, align 8
  %neg42.i6716 = xor i64 %1874, -1
  %and43.i6717 = and i64 %1873, %neg42.i6716
  store i64 %and43.i6717, i64* %x10.i6665, align 8
  %1875 = load i64, i64* %x10.i6665, align 8
  %1876 = load i64, i64* %x5EE1A479.i6652, align 8
  %xor44.i6718 = xor i64 %1875, %1876
  store i64 %xor44.i6718, i64* %x11.i6666, align 8
  %1877 = load i64*, i64** %out2.addr.i6622, align 8
  %1878 = load i64, i64* %1877, align 8
  %1879 = load i64, i64* %x11.i6666, align 8
  %xor45.i6719 = xor i64 %1878, %1879
  %1880 = load i64*, i64** %out2.addr.i6622, align 8
  store i64 %xor45.i6719, i64* %1880, align 8
  %1881 = load i64, i64* %a6.addr.i6620, align 8
  %1882 = load i64, i64* %x00551144.i6631, align 8
  %xor46.i6720 = xor i64 %1881, %1882
  store i64 %xor46.i6720, i64* %x0055EEBB.i6658, align 8
  %1883 = load i64, i64* %a1.addr.i6615, align 8
  %1884 = load i64, i64* %x0F0FB9BC.i6642, align 8
  %xor47.i6721 = xor i64 %1883, %1884
  store i64 %xor47.i6721, i64* %x5A5AECE9.i6659, align 8
  %1885 = load i64, i64* %x0055EEBB.i6658, align 8
  %1886 = load i64, i64* %x5A5AECE9.i6659, align 8
  %and48.i6722 = and i64 %1885, %1886
  store i64 %and48.i6722, i64* %x0050ECA9.i6660, align 8
  %1887 = load i64, i64* %x09030C06.i6636, align 8
  %1888 = load i64, i64* %xCCC9CDC8.i6656, align 8
  %xor49.i6723 = xor i64 %1887, %1888
  store i64 %xor49.i6723, i64* %xC5CAC1CE.i6661, align 8
  %1889 = load i64, i64* %x0050ECA9.i6660, align 8
  %1890 = load i64, i64* %xC5CAC1CE.i6661, align 8
  %xor50.i6724 = xor i64 %1889, %1890
  store i64 %xor50.i6724, i64* %xC59A2D67.i6662, align 8
  %1891 = load i64, i64* %x0FFFB9FD.i6644, align 8
  %1892 = load i64, i64* %a4.addr.i6618, align 8
  %neg51.i6725 = xor i64 %1892, -1
  %and52.i6726 = and i64 %1891, %neg51.i6725
  store i64 %and52.i6726, i64* %x00.i6663, align 8
  %1893 = load i64, i64* %x00.i6663, align 8
  %1894 = load i64, i64* %xC59A2D67.i6662, align 8
  %xor53.i6727 = xor i64 %1893, %1894
  store i64 %xor53.i6727, i64* %x01.i6664, align 8
  %1895 = load i64*, i64** %out1.addr.i6621, align 8
  %1896 = load i64, i64* %1895, align 8
  %1897 = load i64, i64* %x01.i6664, align 8
  %xor54.i6728 = xor i64 %1896, %1897
  %1898 = load i64*, i64** %out1.addr.i6621, align 8
  store i64 %xor54.i6728, i64* %1898, align 8
  %1899 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 55), align 8
  %1900 = load i64**, i64*** %k, align 8
  %arrayidx302 = getelementptr inbounds i64*, i64** %1900, i64 84
  %1901 = load i64*, i64** %arrayidx302, align 8
  %arrayidx303 = getelementptr inbounds i64, i64* %1901, i64 0
  %1902 = load i64, i64* %arrayidx303, align 8
  %xor304 = xor i64 %1899, %1902
  %1903 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 56), align 8
  %1904 = load i64**, i64*** %k, align 8
  %arrayidx305 = getelementptr inbounds i64*, i64** %1904, i64 85
  %1905 = load i64*, i64** %arrayidx305, align 8
  %arrayidx306 = getelementptr inbounds i64, i64* %1905, i64 0
  %1906 = load i64, i64* %arrayidx306, align 8
  %xor307 = xor i64 %1903, %1906
  %1907 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 57), align 8
  %1908 = load i64**, i64*** %k, align 8
  %arrayidx308 = getelementptr inbounds i64*, i64** %1908, i64 86
  %1909 = load i64*, i64** %arrayidx308, align 8
  %arrayidx309 = getelementptr inbounds i64, i64* %1909, i64 0
  %1910 = load i64, i64* %arrayidx309, align 8
  %xor310 = xor i64 %1907, %1910
  %1911 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 58), align 8
  %1912 = load i64**, i64*** %k, align 8
  %arrayidx311 = getelementptr inbounds i64*, i64** %1912, i64 87
  %1913 = load i64*, i64** %arrayidx311, align 8
  %arrayidx312 = getelementptr inbounds i64, i64* %1913, i64 0
  %1914 = load i64, i64* %arrayidx312, align 8
  %xor313 = xor i64 %1911, %1914
  %1915 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 59), align 8
  %1916 = load i64**, i64*** %k, align 8
  %arrayidx314 = getelementptr inbounds i64*, i64** %1916, i64 88
  %1917 = load i64*, i64** %arrayidx314, align 8
  %arrayidx315 = getelementptr inbounds i64, i64* %1917, i64 0
  %1918 = load i64, i64* %arrayidx315, align 8
  %xor316 = xor i64 %1915, %1918
  %1919 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 60), align 8
  %1920 = load i64**, i64*** %k, align 8
  %arrayidx317 = getelementptr inbounds i64*, i64** %1920, i64 89
  %1921 = load i64*, i64** %arrayidx317, align 8
  %arrayidx318 = getelementptr inbounds i64, i64* %1921, i64 0
  %1922 = load i64, i64* %arrayidx318, align 8
  %xor319 = xor i64 %1919, %1922
  store i64 %xor304, i64* %a1.addr.i6502, align 8
  store i64 %xor307, i64* %a2.addr.i6503, align 8
  store i64 %xor310, i64* %a3.addr.i6504, align 8
  store i64 %xor313, i64* %a4.addr.i6505, align 8
  store i64 %xor316, i64* %a5.addr.i6506, align 8
  store i64 %xor319, i64* %a6.addr.i6507, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 31), i64** %out1.addr.i6508, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 11), i64** %out2.addr.i6509, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 21), i64** %out3.addr.i6510, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 6), i64** %out4.addr.i6511, align 8
  %1923 = load i64, i64* %a4.addr.i6505, align 8
  %1924 = load i64, i64* %a5.addr.i6506, align 8
  %xor.i6558 = xor i64 %1923, %1924
  store i64 %xor.i6558, i64* %x0FF00FF0.i6512, align 8
  %1925 = load i64, i64* %a3.addr.i6504, align 8
  %1926 = load i64, i64* %x0FF00FF0.i6512, align 8
  %xor1.i6559 = xor i64 %1925, %1926
  store i64 %xor1.i6559, i64* %x3CC33CC3.i6513, align 8
  %1927 = load i64, i64* %a6.addr.i6507, align 8
  %1928 = load i64, i64* %x3CC33CC3.i6513, align 8
  %and.i6560 = and i64 %1927, %1928
  store i64 %and.i6560, i64* %x00003CC3.i6514, align 8
  %1929 = load i64, i64* %a4.addr.i6505, align 8
  %1930 = load i64, i64* %x0FF00FF0.i6512, align 8
  %and2.i6561 = and i64 %1929, %1930
  store i64 %and2.i6561, i64* %x0F000F00.i6515, align 8
  %1931 = load i64, i64* %a2.addr.i6503, align 8
  %1932 = load i64, i64* %x0F000F00.i6515, align 8
  %xor3.i6562 = xor i64 %1931, %1932
  store i64 %xor3.i6562, i64* %x5A555A55.i6516, align 8
  %1933 = load i64, i64* %x00003CC3.i6514, align 8
  %1934 = load i64, i64* %x5A555A55.i6516, align 8
  %and4.i6563 = and i64 %1933, %1934
  store i64 %and4.i6563, i64* %x00001841.i6517, align 8
  %1935 = load i64, i64* %a6.addr.i6507, align 8
  %1936 = load i64, i64* %x0F000F00.i6515, align 8
  %and5.i6564 = and i64 %1935, %1936
  store i64 %and5.i6564, i64* %x00000F00.i6518, align 8
  %1937 = load i64, i64* %a3.addr.i6504, align 8
  %1938 = load i64, i64* %x00000F00.i6518, align 8
  %xor6.i6565 = xor i64 %1937, %1938
  store i64 %xor6.i6565, i64* %x33333C33.i6519, align 8
  %1939 = load i64, i64* %x5A555A55.i6516, align 8
  %1940 = load i64, i64* %x33333C33.i6519, align 8
  %or.i6566 = or i64 %1939, %1940
  store i64 %or.i6566, i64* %x7B777E77.i6520, align 8
  %1941 = load i64, i64* %a6.addr.i6507, align 8
  %1942 = load i64, i64* %x0FF00FF0.i6512, align 8
  %xor7.i6567 = xor i64 %1941, %1942
  store i64 %xor7.i6567, i64* %x0FF0F00F.i6521, align 8
  %1943 = load i64, i64* %x7B777E77.i6520, align 8
  %1944 = load i64, i64* %x0FF0F00F.i6521, align 8
  %xor8.i6568 = xor i64 %1943, %1944
  store i64 %xor8.i6568, i64* %x74878E78.i6522, align 8
  %1945 = load i64, i64* %a1.addr.i6502, align 8
  %1946 = load i64, i64* %x00001841.i6517, align 8
  %neg.i6569 = xor i64 %1946, -1
  %and9.i6570 = and i64 %1945, %neg.i6569
  store i64 %and9.i6570, i64* %x30.i6556, align 8
  %1947 = load i64, i64* %x30.i6556, align 8
  %1948 = load i64, i64* %x74878E78.i6522, align 8
  %xor10.i6571 = xor i64 %1947, %1948
  store i64 %xor10.i6571, i64* %x31.i6557, align 8
  %1949 = load i64*, i64** %out4.addr.i6511, align 8
  %1950 = load i64, i64* %1949, align 8
  %1951 = load i64, i64* %x31.i6557, align 8
  %xor11.i6572 = xor i64 %1950, %1951
  %1952 = load i64*, i64** %out4.addr.i6511, align 8
  store i64 %xor11.i6572, i64* %1952, align 8
  %1953 = load i64, i64* %a5.addr.i6506, align 8
  %1954 = load i64, i64* %x3CC33CC3.i6513, align 8
  %neg12.i6573 = xor i64 %1954, -1
  %and13.i6574 = and i64 %1953, %neg12.i6573
  store i64 %and13.i6574, i64* %x003C003C.i6523, align 8
  %1955 = load i64, i64* %x5A555A55.i6516, align 8
  %1956 = load i64, i64* %x003C003C.i6523, align 8
  %or14.i6575 = or i64 %1955, %1956
  store i64 %or14.i6575, i64* %x5A7D5A7D.i6524, align 8
  %1957 = load i64, i64* %x00003CC3.i6514, align 8
  %1958 = load i64, i64* %x33333C33.i6519, align 8
  %xor15.i6576 = xor i64 %1957, %1958
  store i64 %xor15.i6576, i64* %x333300F0.i6525, align 8
  %1959 = load i64, i64* %x5A7D5A7D.i6524, align 8
  %1960 = load i64, i64* %x333300F0.i6525, align 8
  %xor16.i6577 = xor i64 %1959, %1960
  store i64 %xor16.i6577, i64* %x694E5A8D.i6526, align 8
  %1961 = load i64, i64* %x00003CC3.i6514, align 8
  %1962 = load i64, i64* %x0FF0F00F.i6521, align 8
  %xor17.i6578 = xor i64 %1961, %1962
  store i64 %xor17.i6578, i64* %x0FF0CCCC.i6527, align 8
  %1963 = load i64, i64* %a4.addr.i6505, align 8
  %1964 = load i64, i64* %x0FF0CCCC.i6527, align 8
  %neg18.i6579 = xor i64 %1964, -1
  %and19.i6580 = and i64 %1963, %neg18.i6579
  store i64 %and19.i6580, i64* %x000F0303.i6528, align 8
  %1965 = load i64, i64* %x5A555A55.i6516, align 8
  %1966 = load i64, i64* %x000F0303.i6528, align 8
  %neg20.i6581 = xor i64 %1966, -1
  %and21.i6582 = and i64 %1965, %neg20.i6581
  store i64 %and21.i6582, i64* %x5A505854.i6529, align 8
  %1967 = load i64, i64* %a5.addr.i6506, align 8
  %1968 = load i64, i64* %x333300F0.i6525, align 8
  %xor22.i6583 = xor i64 %1967, %1968
  store i64 %xor22.i6583, i64* %x33CC000F.i6530, align 8
  %1969 = load i64, i64* %x5A505854.i6529, align 8
  %1970 = load i64, i64* %x33CC000F.i6530, align 8
  %xor23.i6584 = xor i64 %1969, %1970
  store i64 %xor23.i6584, i64* %x699C585B.i6531, align 8
  %1971 = load i64, i64* %x0F000F00.i6515, align 8
  %1972 = load i64, i64* %x74878E78.i6522, align 8
  %or24.i6585 = or i64 %1971, %1972
  store i64 %or24.i6585, i64* %x7F878F78.i6532, align 8
  %1973 = load i64, i64* %a3.addr.i6504, align 8
  %1974 = load i64, i64* %x699C585B.i6531, align 8
  %and25.i6586 = and i64 %1973, %1974
  store i64 %and25.i6586, i64* %x21101013.i6533, align 8
  %1975 = load i64, i64* %x7F878F78.i6532, align 8
  %1976 = load i64, i64* %x21101013.i6533, align 8
  %or26.i6587 = or i64 %1975, %1976
  store i64 %or26.i6587, i64* %x7F979F7B.i6534, align 8
  %1977 = load i64, i64* %x3CC33CC3.i6513, align 8
  %1978 = load i64, i64* %x0FF0F00F.i6521, align 8
  %neg27.i6588 = xor i64 %1978, -1
  %and28.i6589 = and i64 %1977, %neg27.i6588
  store i64 %and28.i6589, i64* %x30030CC0.i6535, align 8
  %1979 = load i64, i64* %x7F979F7B.i6534, align 8
  %1980 = load i64, i64* %x30030CC0.i6535, align 8
  %xor29.i6590 = xor i64 %1979, %1980
  store i64 %xor29.i6590, i64* %x4F9493BB.i6536, align 8
  %1981 = load i64, i64* %x4F9493BB.i6536, align 8
  %1982 = load i64, i64* %a1.addr.i6502, align 8
  %neg30.i6591 = xor i64 %1982, -1
  %and31.i6592 = and i64 %1981, %neg30.i6591
  store i64 %and31.i6592, i64* %x00.i6550, align 8
  %1983 = load i64, i64* %x00.i6550, align 8
  %1984 = load i64, i64* %x694E5A8D.i6526, align 8
  %xor32.i6593 = xor i64 %1983, %1984
  store i64 %xor32.i6593, i64* %x01.i6551, align 8
  %1985 = load i64*, i64** %out1.addr.i6508, align 8
  %1986 = load i64, i64* %1985, align 8
  %1987 = load i64, i64* %x01.i6551, align 8
  %xor33.i6594 = xor i64 %1986, %1987
  %1988 = load i64*, i64** %out1.addr.i6508, align 8
  store i64 %xor33.i6594, i64* %1988, align 8
  %1989 = load i64, i64* %x699C585B.i6531, align 8
  %1990 = load i64, i64* %x4F9493BB.i6536, align 8
  %or34.i6595 = or i64 %1989, %1990
  store i64 %or34.i6595, i64* %x6F9CDBFB.i6537, align 8
  %1991 = load i64, i64* %a6.addr.i6507, align 8
  %1992 = load i64, i64* %x6F9CDBFB.i6537, align 8
  %and35.i6596 = and i64 %1991, %1992
  store i64 %and35.i6596, i64* %x0000DBFB.i6538, align 8
  %1993 = load i64, i64* %a2.addr.i6503, align 8
  %1994 = load i64, i64* %x0000DBFB.i6538, align 8
  %and36.i6597 = and i64 %1993, %1994
  store i64 %and36.i6597, i64* %x00005151.i6539, align 8
  %1995 = load i64, i64* %x694E5A8D.i6526, align 8
  %1996 = load i64, i64* %x4F9493BB.i6536, align 8
  %xor37.i6598 = xor i64 %1995, %1996
  store i64 %xor37.i6598, i64* %x26DAC936.i6540, align 8
  %1997 = load i64, i64* %x00005151.i6539, align 8
  %1998 = load i64, i64* %x26DAC936.i6540, align 8
  %xor38.i6599 = xor i64 %1997, %1998
  store i64 %xor38.i6599, i64* %x26DA9867.i6541, align 8
  %1999 = load i64, i64* %a5.addr.i6506, align 8
  %2000 = load i64, i64* %x21101013.i6533, align 8
  %or39.i6600 = or i64 %1999, %2000
  store i64 %or39.i6600, i64* %x21FF10FF.i6542, align 8
  %2001 = load i64, i64* %x0000DBFB.i6538, align 8
  %2002 = load i64, i64* %x21FF10FF.i6542, align 8
  %xor40.i6601 = xor i64 %2001, %2002
  store i64 %xor40.i6601, i64* %x21FFCB04.i6543, align 8
  %2003 = load i64, i64* %a5.addr.i6506, align 8
  %2004 = load i64, i64* %x26DAC936.i6540, align 8
  %xor41.i6602 = xor i64 %2003, %2004
  store i64 %xor41.i6602, i64* %x2625C9C9.i6544, align 8
  %2005 = load i64, i64* %x21FFCB04.i6543, align 8
  %2006 = load i64, i64* %x2625C9C9.i6544, align 8
  %or42.i6603 = or i64 %2005, %2006
  store i64 %or42.i6603, i64* %x27FFCBCD.i6545, align 8
  %2007 = load i64, i64* %x27FFCBCD.i6545, align 8
  %2008 = load i64, i64* %a1.addr.i6502, align 8
  %and43.i6604 = and i64 %2007, %2008
  store i64 %and43.i6604, i64* %x20.i6554, align 8
  %2009 = load i64, i64* %x20.i6554, align 8
  %2010 = load i64, i64* %x699C585B.i6531, align 8
  %xor44.i6605 = xor i64 %2009, %2010
  store i64 %xor44.i6605, i64* %x21.i6555, align 8
  %2011 = load i64*, i64** %out3.addr.i6510, align 8
  %2012 = load i64, i64* %2011, align 8
  %2013 = load i64, i64* %x21.i6555, align 8
  %xor45.i6606 = xor i64 %2012, %2013
  %2014 = load i64*, i64** %out3.addr.i6510, align 8
  store i64 %xor45.i6606, i64* %2014, align 8
  %2015 = load i64, i64* %x0000DBFB.i6538, align 8
  %2016 = load i64, i64* %x27FFCBCD.i6545, align 8
  %xor46.i6607 = xor i64 %2015, %2016
  store i64 %xor46.i6607, i64* %x27FF1036.i6546, align 8
  %2017 = load i64, i64* %x003C003C.i6523, align 8
  %2018 = load i64, i64* %x27FF1036.i6546, align 8
  %or47.i6608 = or i64 %2017, %2018
  store i64 %or47.i6608, i64* %x27FF103E.i6547, align 8
  %2019 = load i64, i64* %x4F9493BB.i6536, align 8
  %neg48.i6609 = xor i64 %2019, -1
  store i64 %neg48.i6609, i64* %xB06B6C44.i6548, align 8
  %2020 = load i64, i64* %x27FF103E.i6547, align 8
  %2021 = load i64, i64* %xB06B6C44.i6548, align 8
  %xor49.i6610 = xor i64 %2020, %2021
  store i64 %xor49.i6610, i64* %x97947C7A.i6549, align 8
  %2022 = load i64, i64* %x97947C7A.i6549, align 8
  %2023 = load i64, i64* %a1.addr.i6502, align 8
  %neg50.i6611 = xor i64 %2023, -1
  %and51.i6612 = and i64 %2022, %neg50.i6611
  store i64 %and51.i6612, i64* %x10.i6552, align 8
  %2024 = load i64, i64* %x10.i6552, align 8
  %2025 = load i64, i64* %x26DA9867.i6541, align 8
  %xor52.i6613 = xor i64 %2024, %2025
  store i64 %xor52.i6613, i64* %x11.i6553, align 8
  %2026 = load i64*, i64** %out2.addr.i6509, align 8
  %2027 = load i64, i64* %2026, align 8
  %2028 = load i64, i64* %x11.i6553, align 8
  %xor53.i6614 = xor i64 %2027, %2028
  %2029 = load i64*, i64** %out2.addr.i6509, align 8
  store i64 %xor53.i6614, i64* %2029, align 8
  %2030 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 59), align 8
  %2031 = load i64**, i64*** %k, align 8
  %arrayidx320 = getelementptr inbounds i64*, i64** %2031, i64 90
  %2032 = load i64*, i64** %arrayidx320, align 8
  %arrayidx321 = getelementptr inbounds i64, i64* %2032, i64 0
  %2033 = load i64, i64* %arrayidx321, align 8
  %xor322 = xor i64 %2030, %2033
  %2034 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 60), align 8
  %2035 = load i64**, i64*** %k, align 8
  %arrayidx323 = getelementptr inbounds i64*, i64** %2035, i64 91
  %2036 = load i64*, i64** %arrayidx323, align 8
  %arrayidx324 = getelementptr inbounds i64, i64* %2036, i64 0
  %2037 = load i64, i64* %arrayidx324, align 8
  %xor325 = xor i64 %2034, %2037
  %2038 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 61), align 8
  %2039 = load i64**, i64*** %k, align 8
  %arrayidx326 = getelementptr inbounds i64*, i64** %2039, i64 92
  %2040 = load i64*, i64** %arrayidx326, align 8
  %arrayidx327 = getelementptr inbounds i64, i64* %2040, i64 0
  %2041 = load i64, i64* %arrayidx327, align 8
  %xor328 = xor i64 %2038, %2041
  %2042 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 62), align 8
  %2043 = load i64**, i64*** %k, align 8
  %arrayidx329 = getelementptr inbounds i64*, i64** %2043, i64 93
  %2044 = load i64*, i64** %arrayidx329, align 8
  %arrayidx330 = getelementptr inbounds i64, i64* %2044, i64 0
  %2045 = load i64, i64* %arrayidx330, align 8
  %xor331 = xor i64 %2042, %2045
  %2046 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 63), align 8
  %2047 = load i64**, i64*** %k, align 8
  %arrayidx332 = getelementptr inbounds i64*, i64** %2047, i64 94
  %2048 = load i64*, i64** %arrayidx332, align 8
  %arrayidx333 = getelementptr inbounds i64, i64* %2048, i64 0
  %2049 = load i64, i64* %arrayidx333, align 8
  %xor334 = xor i64 %2046, %2049
  %2050 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 32), align 8
  %2051 = load i64**, i64*** %k, align 8
  %arrayidx335 = getelementptr inbounds i64*, i64** %2051, i64 95
  %2052 = load i64*, i64** %arrayidx335, align 8
  %arrayidx336 = getelementptr inbounds i64, i64* %2052, i64 0
  %2053 = load i64, i64* %arrayidx336, align 8
  %xor337 = xor i64 %2050, %2053
  store i64 %xor322, i64* %a1.addr.i6399, align 8
  store i64 %xor325, i64* %a2.addr.i6400, align 8
  store i64 %xor328, i64* %a3.addr.i6401, align 8
  store i64 %xor331, i64* %a4.addr.i6402, align 8
  store i64 %xor334, i64* %a5.addr.i6403, align 8
  store i64 %xor337, i64* %a6.addr.i6404, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 4), i64** %out1.addr.i6405, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 26), i64** %out2.addr.i6406, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 14), i64** %out3.addr.i6407, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 20), i64** %out4.addr.i6408, align 8
  %2054 = load i64, i64* %a3.addr.i6401, align 8
  %2055 = load i64, i64* %a2.addr.i6400, align 8
  %neg.i6450 = xor i64 %2055, -1
  %and.i6451 = and i64 %2054, %neg.i6450
  store i64 %and.i6451, i64* %x0C0C0C0C.i6409, align 8
  %2056 = load i64, i64* %a5.addr.i6403, align 8
  %2057 = load i64, i64* %a3.addr.i6401, align 8
  %neg1.i6452 = xor i64 %2057, -1
  %and2.i6453 = and i64 %2056, %neg1.i6452
  store i64 %and2.i6453, i64* %x0000F0F0.i6410, align 8
  %2058 = load i64, i64* %a4.addr.i6402, align 8
  %2059 = load i64, i64* %x0000F0F0.i6410, align 8
  %xor.i6454 = xor i64 %2058, %2059
  store i64 %xor.i6454, i64* %x00FFF00F.i6411, align 8
  %2060 = load i64, i64* %a1.addr.i6399, align 8
  %2061 = load i64, i64* %x00FFF00F.i6411, align 8
  %and3.i6455 = and i64 %2060, %2061
  store i64 %and3.i6455, i64* %x00555005.i6412, align 8
  %2062 = load i64, i64* %x00555005.i6412, align 8
  %2063 = load i64, i64* %x0C0C0C0C.i6409, align 8
  %neg4.i6456 = xor i64 %2063, -1
  %and5.i6457 = and i64 %2062, %neg4.i6456
  store i64 %and5.i6457, i64* %x00515001.i6413, align 8
  %2064 = load i64, i64* %a2.addr.i6400, align 8
  %2065 = load i64, i64* %x00FFF00F.i6411, align 8
  %neg6.i6458 = xor i64 %2065, -1
  %and7.i6459 = and i64 %2064, %neg6.i6458
  store i64 %and7.i6459, i64* %x33000330.i6414, align 8
  %2066 = load i64, i64* %a1.addr.i6399, align 8
  %2067 = load i64, i64* %x33000330.i6414, align 8
  %or.i6460 = or i64 %2066, %2067
  store i64 %or.i6460, i64* %x77555775.i6415, align 8
  %2068 = load i64, i64* %a2.addr.i6400, align 8
  %2069 = load i64, i64* %a3.addr.i6401, align 8
  %neg8.i6461 = xor i64 %2069, -1
  %and9.i6462 = and i64 %2068, %neg8.i6461
  store i64 %and9.i6462, i64* %x30303030.i6416, align 8
  %2070 = load i64, i64* %a5.addr.i6403, align 8
  %2071 = load i64, i64* %x30303030.i6416, align 8
  %xor10.i6463 = xor i64 %2070, %2071
  store i64 %xor10.i6463, i64* %x3030CFCF.i6417, align 8
  %2072 = load i64, i64* %x77555775.i6415, align 8
  %2073 = load i64, i64* %x3030CFCF.i6417, align 8
  %and11.i6464 = and i64 %2072, %2073
  store i64 %and11.i6464, i64* %x30104745.i6418, align 8
  %2074 = load i64, i64* %x00555005.i6412, align 8
  %2075 = load i64, i64* %x30104745.i6418, align 8
  %or12.i6465 = or i64 %2074, %2075
  store i64 %or12.i6465, i64* %x30555745.i6419, align 8
  %2076 = load i64, i64* %x00FFF00F.i6411, align 8
  %neg13.i6466 = xor i64 %2076, -1
  store i64 %neg13.i6466, i64* %xFF000FF0.i6420, align 8
  %2077 = load i64, i64* %x30104745.i6418, align 8
  %2078 = load i64, i64* %xFF000FF0.i6420, align 8
  %xor14.i6467 = xor i64 %2077, %2078
  store i64 %xor14.i6467, i64* %xCF1048B5.i6421, align 8
  %2079 = load i64, i64* %a3.addr.i6401, align 8
  %2080 = load i64, i64* %x77555775.i6415, align 8
  %neg15.i6468 = xor i64 %2080, -1
  %and16.i6469 = and i64 %2079, %neg15.i6468
  store i64 %and16.i6469, i64* %x080A080A.i6422, align 8
  %2081 = load i64, i64* %xCF1048B5.i6421, align 8
  %2082 = load i64, i64* %x080A080A.i6422, align 8
  %xor17.i6470 = xor i64 %2081, %2082
  store i64 %xor17.i6470, i64* %xC71A40BF.i6423, align 8
  %2083 = load i64, i64* %x0C0C0C0C.i6409, align 8
  %2084 = load i64, i64* %xC71A40BF.i6423, align 8
  %xor18.i6471 = xor i64 %2083, %2084
  store i64 %xor18.i6471, i64* %xCB164CB3.i6424, align 8
  %2085 = load i64, i64* %x00515001.i6413, align 8
  %2086 = load i64, i64* %a6.addr.i6404, align 8
  %or19.i6472 = or i64 %2085, %2086
  store i64 %or19.i6472, i64* %x10.i6444, align 8
  %2087 = load i64, i64* %x10.i6444, align 8
  %2088 = load i64, i64* %xCB164CB3.i6424, align 8
  %xor20.i6473 = xor i64 %2087, %2088
  store i64 %xor20.i6473, i64* %x11.i6445, align 8
  %2089 = load i64*, i64** %out2.addr.i6406, align 8
  %2090 = load i64, i64* %2089, align 8
  %2091 = load i64, i64* %x11.i6445, align 8
  %xor21.i6474 = xor i64 %2090, %2091
  %2092 = load i64*, i64** %out2.addr.i6406, align 8
  store i64 %xor21.i6474, i64* %2092, align 8
  %2093 = load i64, i64* %a1.addr.i6399, align 8
  %2094 = load i64, i64* %xCB164CB3.i6424, align 8
  %xor22.i6475 = xor i64 %2093, %2094
  store i64 %xor22.i6475, i64* %x9E4319E6.i6425, align 8
  %2095 = load i64, i64* %a5.addr.i6403, align 8
  %2096 = load i64, i64* %x9E4319E6.i6425, align 8
  %and23.i6476 = and i64 %2095, %2096
  store i64 %and23.i6476, i64* %x000019E6.i6426, align 8
  %2097 = load i64, i64* %a2.addr.i6400, align 8
  %2098 = load i64, i64* %xC71A40BF.i6423, align 8
  %xor24.i6477 = xor i64 %2097, %2098
  store i64 %xor24.i6477, i64* %xF429738C.i6427, align 8
  %2099 = load i64, i64* %x000019E6.i6426, align 8
  %2100 = load i64, i64* %xF429738C.i6427, align 8
  %xor25.i6478 = xor i64 %2099, %2100
  store i64 %xor25.i6478, i64* %xF4296A6A.i6428, align 8
  %2101 = load i64, i64* %x33000330.i6414, align 8
  %2102 = load i64, i64* %xF4296A6A.i6428, align 8
  %xor26.i6479 = xor i64 %2101, %2102
  store i64 %xor26.i6479, i64* %xC729695A.i6429, align 8
  %2103 = load i64, i64* %x30555745.i6419, align 8
  %2104 = load i64, i64* %xF4296A6A.i6428, align 8
  %xor27.i6480 = xor i64 %2103, %2104
  store i64 %xor27.i6480, i64* %xC47C3D2F.i6430, align 8
  %2105 = load i64, i64* %a2.addr.i6400, align 8
  %2106 = load i64, i64* %xC47C3D2F.i6430, align 8
  %or28.i6481 = or i64 %2105, %2106
  store i64 %or28.i6481, i64* %xF77F3F3F.i6431, align 8
  %2107 = load i64, i64* %a5.addr.i6403, align 8
  %2108 = load i64, i64* %x9E4319E6.i6425, align 8
  %xor29.i6482 = xor i64 %2107, %2108
  store i64 %xor29.i6482, i64* %x9E43E619.i6432, align 8
  %2109 = load i64, i64* %xF77F3F3F.i6431, align 8
  %2110 = load i64, i64* %x9E43E619.i6432, align 8
  %xor30.i6483 = xor i64 %2109, %2110
  store i64 %xor30.i6483, i64* %x693CD926.i6433, align 8
  %2111 = load i64, i64* %x30555745.i6419, align 8
  %2112 = load i64, i64* %a6.addr.i6404, align 8
  %and31.i6484 = and i64 %2111, %2112
  store i64 %and31.i6484, i64* %x20.i6446, align 8
  %2113 = load i64, i64* %x20.i6446, align 8
  %2114 = load i64, i64* %x693CD926.i6433, align 8
  %xor32.i6485 = xor i64 %2113, %2114
  store i64 %xor32.i6485, i64* %x21.i6447, align 8
  %2115 = load i64*, i64** %out3.addr.i6407, align 8
  %2116 = load i64, i64* %2115, align 8
  %2117 = load i64, i64* %x21.i6447, align 8
  %xor33.i6486 = xor i64 %2116, %2117
  %2118 = load i64*, i64** %out3.addr.i6407, align 8
  store i64 %xor33.i6486, i64* %2118, align 8
  %2119 = load i64, i64* %x3030CFCF.i6417, align 8
  %2120 = load i64, i64* %xC729695A.i6429, align 8
  %xor34.i6487 = xor i64 %2119, %2120
  store i64 %xor34.i6487, i64* %xF719A695.i6434, align 8
  %2121 = load i64, i64* %a4.addr.i6402, align 8
  %2122 = load i64, i64* %xF429738C.i6427, align 8
  %or35.i6488 = or i64 %2121, %2122
  store i64 %or35.i6488, i64* %xF4FF73FF.i6435, align 8
  %2123 = load i64, i64* %xF719A695.i6434, align 8
  %2124 = load i64, i64* %xF4FF73FF.i6435, align 8
  %xor36.i6489 = xor i64 %2123, %2124
  store i64 %xor36.i6489, i64* %x03E6D56A.i6436, align 8
  %2125 = load i64, i64* %a1.addr.i6399, align 8
  %2126 = load i64, i64* %x03E6D56A.i6436, align 8
  %xor37.i6490 = xor i64 %2125, %2126
  store i64 %xor37.i6490, i64* %x56B3803F.i6437, align 8
  %2127 = load i64, i64* %x56B3803F.i6437, align 8
  %2128 = load i64, i64* %a6.addr.i6404, align 8
  %and38.i6491 = and i64 %2127, %2128
  store i64 %and38.i6491, i64* %x30.i6448, align 8
  %2129 = load i64, i64* %x30.i6448, align 8
  %2130 = load i64, i64* %xC729695A.i6429, align 8
  %xor39.i6492 = xor i64 %2129, %2130
  store i64 %xor39.i6492, i64* %x31.i6449, align 8
  %2131 = load i64*, i64** %out4.addr.i6408, align 8
  %2132 = load i64, i64* %2131, align 8
  %2133 = load i64, i64* %x31.i6449, align 8
  %xor40.i6493 = xor i64 %2132, %2133
  %2134 = load i64*, i64** %out4.addr.i6408, align 8
  store i64 %xor40.i6493, i64* %2134, align 8
  %2135 = load i64, i64* %xF719A695.i6434, align 8
  %2136 = load i64, i64* %a4.addr.i6402, align 8
  %neg41.i6494 = xor i64 %2136, -1
  %and42.i6495 = and i64 %2135, %neg41.i6494
  store i64 %and42.i6495, i64* %xF700A600.i6438, align 8
  %2137 = load i64, i64* %x693CD926.i6433, align 8
  %2138 = load i64, i64* %xF700A600.i6438, align 8
  %and43.i6496 = and i64 %2137, %2138
  store i64 %and43.i6496, i64* %x61008000.i6439, align 8
  %2139 = load i64, i64* %x00515001.i6413, align 8
  %2140 = load i64, i64* %x03E6D56A.i6436, align 8
  %xor44.i6497 = xor i64 %2139, %2140
  store i64 %xor44.i6497, i64* %x03B7856B.i6440, align 8
  %2141 = load i64, i64* %x61008000.i6439, align 8
  %2142 = load i64, i64* %x03B7856B.i6440, align 8
  %xor45.i6498 = xor i64 %2141, %2142
  store i64 %xor45.i6498, i64* %x62B7056B.i6441, align 8
  %2143 = load i64, i64* %x62B7056B.i6441, align 8
  %2144 = load i64, i64* %a6.addr.i6404, align 8
  %or46.i6499 = or i64 %2143, %2144
  store i64 %or46.i6499, i64* %x00.i6442, align 8
  %2145 = load i64, i64* %x00.i6442, align 8
  %2146 = load i64, i64* %xC729695A.i6429, align 8
  %xor47.i6500 = xor i64 %2145, %2146
  store i64 %xor47.i6500, i64* %x01.i6443, align 8
  %2147 = load i64*, i64** %out1.addr.i6405, align 8
  %2148 = load i64, i64* %2147, align 8
  %2149 = load i64, i64* %x01.i6443, align 8
  %xor48.i6501 = xor i64 %2148, %2149
  %2150 = load i64*, i64** %out1.addr.i6405, align 8
  store i64 %xor48.i6501, i64* %2150, align 8
  %2151 = load i64**, i64*** %k, align 8
  %add.ptr = getelementptr inbounds i64*, i64** %2151, i64 96
  store i64** %add.ptr, i64*** %k, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %2152 = load i32, i32* %jj, align 4
  %inc = add nsw i32 %2152, 1
  store i32 %inc, i32* %jj, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  %2153 = load i64**, i64*** %k, align 8
  %add.ptr338 = getelementptr inbounds i64*, i64** %2153, i64 -816
  store i64** %add.ptr338, i64*** %k, align 8
  %2154 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 48), align 8
  %arrayidx339 = getelementptr inbounds i64, i64* %2154, i64 0
  %2155 = load i64, i64* %arrayidx339, align 8
  %2156 = load i64**, i64*** %k, align 8
  %arrayidx340 = getelementptr inbounds i64*, i64** %2156, i64 48
  %2157 = load i64*, i64** %arrayidx340, align 8
  %arrayidx341 = getelementptr inbounds i64, i64* %2157, i64 0
  %2158 = load i64, i64* %arrayidx341, align 8
  %xor342 = xor i64 %2155, %2158
  %2159 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 49), align 8
  %arrayidx343 = getelementptr inbounds i64, i64* %2159, i64 0
  %2160 = load i64, i64* %arrayidx343, align 8
  %2161 = load i64**, i64*** %k, align 8
  %arrayidx344 = getelementptr inbounds i64*, i64** %2161, i64 49
  %2162 = load i64*, i64** %arrayidx344, align 8
  %arrayidx345 = getelementptr inbounds i64, i64* %2162, i64 0
  %2163 = load i64, i64* %arrayidx345, align 8
  %xor346 = xor i64 %2160, %2163
  %2164 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 50), align 8
  %arrayidx347 = getelementptr inbounds i64, i64* %2164, i64 0
  %2165 = load i64, i64* %arrayidx347, align 8
  %2166 = load i64**, i64*** %k, align 8
  %arrayidx348 = getelementptr inbounds i64*, i64** %2166, i64 50
  %2167 = load i64*, i64** %arrayidx348, align 8
  %arrayidx349 = getelementptr inbounds i64, i64* %2167, i64 0
  %2168 = load i64, i64* %arrayidx349, align 8
  %xor350 = xor i64 %2165, %2168
  %2169 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 51), align 8
  %arrayidx351 = getelementptr inbounds i64, i64* %2169, i64 0
  %2170 = load i64, i64* %arrayidx351, align 8
  %2171 = load i64**, i64*** %k, align 8
  %arrayidx352 = getelementptr inbounds i64*, i64** %2171, i64 51
  %2172 = load i64*, i64** %arrayidx352, align 8
  %arrayidx353 = getelementptr inbounds i64, i64* %2172, i64 0
  %2173 = load i64, i64* %arrayidx353, align 8
  %xor354 = xor i64 %2170, %2173
  %2174 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 52), align 8
  %arrayidx355 = getelementptr inbounds i64, i64* %2174, i64 0
  %2175 = load i64, i64* %arrayidx355, align 8
  %2176 = load i64**, i64*** %k, align 8
  %arrayidx356 = getelementptr inbounds i64*, i64** %2176, i64 52
  %2177 = load i64*, i64** %arrayidx356, align 8
  %arrayidx357 = getelementptr inbounds i64, i64* %2177, i64 0
  %2178 = load i64, i64* %arrayidx357, align 8
  %xor358 = xor i64 %2175, %2178
  %2179 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 53), align 8
  %arrayidx359 = getelementptr inbounds i64, i64* %2179, i64 0
  %2180 = load i64, i64* %arrayidx359, align 8
  %2181 = load i64**, i64*** %k, align 8
  %arrayidx360 = getelementptr inbounds i64*, i64** %2181, i64 53
  %2182 = load i64*, i64** %arrayidx360, align 8
  %arrayidx361 = getelementptr inbounds i64, i64* %2182, i64 0
  %2183 = load i64, i64* %arrayidx361, align 8
  %xor362 = xor i64 %2180, %2183
  store i64 %xor342, i64* %a1.addr.i6276, align 8
  store i64 %xor346, i64* %a2.addr.i6277, align 8
  store i64 %xor350, i64* %a3.addr.i6278, align 8
  store i64 %xor354, i64* %a4.addr.i6279, align 8
  store i64 %xor358, i64* %a5.addr.i6280, align 8
  store i64 %xor362, i64* %a6.addr.i6281, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 8), i64** %out1.addr.i6282, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 16), i64** %out2.addr.i6283, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 22), i64** %out3.addr.i6284, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 30), i64** %out4.addr.i6285, align 8
  %2184 = load i64, i64* %a1.addr.i6276, align 8
  %2185 = load i64, i64* %a5.addr.i6280, align 8
  %neg.i6335 = xor i64 %2185, -1
  %and.i6336 = and i64 %2184, %neg.i6335
  store i64 %and.i6336, i64* %x55005500.i6286, align 8
  %2186 = load i64, i64* %a4.addr.i6279, align 8
  %2187 = load i64, i64* %x55005500.i6286, align 8
  %xor.i6337 = xor i64 %2186, %2187
  store i64 %xor.i6337, i64* %x5A0F5A0F.i6287, align 8
  %2188 = load i64, i64* %a3.addr.i6278, align 8
  %2189 = load i64, i64* %a6.addr.i6281, align 8
  %or.i6338 = or i64 %2188, %2189
  store i64 %or.i6338, i64* %x3333FFFF.i6288, align 8
  %2190 = load i64, i64* %a1.addr.i6276, align 8
  %2191 = load i64, i64* %a3.addr.i6278, align 8
  %xor1.i6339 = xor i64 %2190, %2191
  store i64 %xor1.i6339, i64* %x66666666.i6289, align 8
  %2192 = load i64, i64* %x3333FFFF.i6288, align 8
  %2193 = load i64, i64* %x66666666.i6289, align 8
  %and2.i6340 = and i64 %2192, %2193
  store i64 %and2.i6340, i64* %x22226666.i6290, align 8
  %2194 = load i64, i64* %a4.addr.i6279, align 8
  %2195 = load i64, i64* %x22226666.i6290, align 8
  %xor3.i6341 = xor i64 %2194, %2195
  store i64 %xor3.i6341, i64* %x2D2D6969.i6291, align 8
  %2196 = load i64, i64* %x2D2D6969.i6291, align 8
  %2197 = load i64, i64* %x5A0F5A0F.i6287, align 8
  %neg4.i6342 = xor i64 %2197, -1
  %and5.i6343 = and i64 %2196, %neg4.i6342
  store i64 %and5.i6343, i64* %x25202160.i6292, align 8
  %2198 = load i64, i64* %a5.addr.i6280, align 8
  %2199 = load i64, i64* %a6.addr.i6281, align 8
  %xor6.i6344 = xor i64 %2198, %2199
  store i64 %xor6.i6344, i64* %x00FFFF00.i6293, align 8
  %2200 = load i64, i64* %a3.addr.i6278, align 8
  %2201 = load i64, i64* %x00FFFF00.i6293, align 8
  %xor7.i6345 = xor i64 %2200, %2201
  store i64 %xor7.i6345, i64* %x33CCCC33.i6294, align 8
  %2202 = load i64, i64* %x5A0F5A0F.i6287, align 8
  %2203 = load i64, i64* %x33CCCC33.i6294, align 8
  %neg8.i6346 = xor i64 %2203, -1
  %and9.i6347 = and i64 %2202, %neg8.i6346
  store i64 %and9.i6347, i64* %x4803120C.i6295, align 8
  %2204 = load i64, i64* %a6.addr.i6281, align 8
  %2205 = load i64, i64* %x22226666.i6290, align 8
  %or10.i6348 = or i64 %2204, %2205
  store i64 %or10.i6348, i64* %x2222FFFF.i6296, align 8
  %2206 = load i64, i64* %x4803120C.i6295, align 8
  %2207 = load i64, i64* %x2222FFFF.i6296, align 8
  %xor11.i6349 = xor i64 %2206, %2207
  store i64 %xor11.i6349, i64* %x6A21EDF3.i6297, align 8
  %2208 = load i64, i64* %x6A21EDF3.i6297, align 8
  %2209 = load i64, i64* %x25202160.i6292, align 8
  %neg12.i6350 = xor i64 %2209, -1
  %and13.i6351 = and i64 %2208, %neg12.i6350
  store i64 %and13.i6351, i64* %x4A01CC93.i6298, align 8
  %2210 = load i64, i64* %a1.addr.i6276, align 8
  %2211 = load i64, i64* %a6.addr.i6281, align 8
  %or14.i6352 = or i64 %2210, %2211
  store i64 %or14.i6352, i64* %x5555FFFF.i6299, align 8
  %2212 = load i64, i64* %x6A21EDF3.i6297, align 8
  %2213 = load i64, i64* %x5555FFFF.i6299, align 8
  %or15.i6353 = or i64 %2212, %2213
  store i64 %or15.i6353, i64* %x7F75FFFF.i6300, align 8
  %2214 = load i64, i64* %a5.addr.i6280, align 8
  %2215 = load i64, i64* %x2D2D6969.i6291, align 8
  %neg16.i6354 = xor i64 %2215, -1
  %and17.i6355 = and i64 %2214, %neg16.i6354
  store i64 %and17.i6355, i64* %x00D20096.i6301, align 8
  %2216 = load i64, i64* %x7F75FFFF.i6300, align 8
  %2217 = load i64, i64* %x00D20096.i6301, align 8
  %xor18.i6356 = xor i64 %2216, %2217
  store i64 %xor18.i6356, i64* %x7FA7FF69.i6302, align 8
  %2218 = load i64, i64* %a4.addr.i6279, align 8
  %2219 = load i64, i64* %x5555FFFF.i6299, align 8
  %neg19.i6357 = xor i64 %2219, -1
  %and20.i6358 = and i64 %2218, %neg19.i6357
  store i64 %and20.i6358, i64* %x0A0A0000.i6303, align 8
  %2220 = load i64, i64* %x00D20096.i6301, align 8
  %2221 = load i64, i64* %x0A0A0000.i6303, align 8
  %xor21.i6359 = xor i64 %2220, %2221
  store i64 %xor21.i6359, i64* %x0AD80096.i6304, align 8
  %2222 = load i64, i64* %x00FFFF00.i6293, align 8
  %2223 = load i64, i64* %x66666666.i6289, align 8
  %neg22.i6360 = xor i64 %2223, -1
  %and23.i6361 = and i64 %2222, %neg22.i6360
  store i64 %and23.i6361, i64* %x00999900.i6305, align 8
  %2224 = load i64, i64* %x0AD80096.i6304, align 8
  %2225 = load i64, i64* %x00999900.i6305, align 8
  %or24.i6362 = or i64 %2224, %2225
  store i64 %or24.i6362, i64* %x0AD99996.i6306, align 8
  %2226 = load i64, i64* %a3.addr.i6278, align 8
  %2227 = load i64, i64* %x55005500.i6286, align 8
  %neg25.i6363 = xor i64 %2227, -1
  %and26.i6364 = and i64 %2226, %neg25.i6363
  store i64 %and26.i6364, i64* %x22332233.i6307, align 8
  %2228 = load i64, i64* %x5A0F5A0F.i6287, align 8
  %2229 = load i64, i64* %x7F75FFFF.i6300, align 8
  %xor27.i6365 = xor i64 %2228, %2229
  store i64 %xor27.i6365, i64* %x257AA5F0.i6308, align 8
  %2230 = load i64, i64* %x257AA5F0.i6308, align 8
  %2231 = load i64, i64* %x22332233.i6307, align 8
  %neg28.i6366 = xor i64 %2231, -1
  %and29.i6367 = and i64 %2230, %neg28.i6366
  store i64 %and29.i6367, i64* %x054885C0.i6309, align 8
  %2232 = load i64, i64* %x054885C0.i6309, align 8
  %neg30.i6368 = xor i64 %2232, -1
  store i64 %neg30.i6368, i64* %xFAB77A3F.i6310, align 8
  %2233 = load i64, i64* %x3333FFFF.i6288, align 8
  %2234 = load i64, i64* %x6A21EDF3.i6297, align 8
  %and31.i6369 = and i64 %2233, %2234
  store i64 %and31.i6369, i64* %x2221EDF3.i6311, align 8
  %2235 = load i64, i64* %xFAB77A3F.i6310, align 8
  %2236 = load i64, i64* %x2221EDF3.i6311, align 8
  %xor32.i6370 = xor i64 %2235, %2236
  store i64 %xor32.i6370, i64* %xD89697CC.i6312, align 8
  %2237 = load i64, i64* %x7FA7FF69.i6302, align 8
  %2238 = load i64, i64* %a2.addr.i6277, align 8
  %neg33.i6371 = xor i64 %2238, -1
  %and34.i6372 = and i64 %2237, %neg33.i6371
  store i64 %and34.i6372, i64* %x20.i6331, align 8
  %2239 = load i64, i64* %x20.i6331, align 8
  %2240 = load i64, i64* %xD89697CC.i6312, align 8
  %xor35.i6373 = xor i64 %2239, %2240
  store i64 %xor35.i6373, i64* %x21.i6332, align 8
  %2241 = load i64*, i64** %out3.addr.i6284, align 8
  %2242 = load i64, i64* %2241, align 8
  %2243 = load i64, i64* %x21.i6332, align 8
  %xor36.i6374 = xor i64 %2242, %2243
  %2244 = load i64*, i64** %out3.addr.i6284, align 8
  store i64 %xor36.i6374, i64* %2244, align 8
  %2245 = load i64, i64* %x00FFFF00.i6293, align 8
  %2246 = load i64, i64* %x054885C0.i6309, align 8
  %xor37.i6375 = xor i64 %2245, %2246
  store i64 %xor37.i6375, i64* %x05B77AC0.i6313, align 8
  %2247 = load i64, i64* %x00D20096.i6301, align 8
  %2248 = load i64, i64* %x05B77AC0.i6313, align 8
  %or38.i6376 = or i64 %2247, %2248
  store i64 %or38.i6376, i64* %x05F77AD6.i6314, align 8
  %2249 = load i64, i64* %x3333FFFF.i6288, align 8
  %2250 = load i64, i64* %x05F77AD6.i6314, align 8
  %xor39.i6377 = xor i64 %2249, %2250
  store i64 %xor39.i6377, i64* %x36C48529.i6315, align 8
  %2251 = load i64, i64* %a1.addr.i6276, align 8
  %2252 = load i64, i64* %x36C48529.i6315, align 8
  %xor40.i6378 = xor i64 %2251, %2252
  store i64 %xor40.i6378, i64* %x6391D07C.i6316, align 8
  %2253 = load i64, i64* %xD89697CC.i6312, align 8
  %2254 = load i64, i64* %x6391D07C.i6316, align 8
  %xor41.i6379 = xor i64 %2253, %2254
  store i64 %xor41.i6379, i64* %xBB0747B0.i6317, align 8
  %2255 = load i64, i64* %x25202160.i6292, align 8
  %2256 = load i64, i64* %a2.addr.i6277, align 8
  %or42.i6380 = or i64 %2255, %2256
  store i64 %or42.i6380, i64* %x00.i6327, align 8
  %2257 = load i64, i64* %x00.i6327, align 8
  %2258 = load i64, i64* %xBB0747B0.i6317, align 8
  %xor43.i6381 = xor i64 %2257, %2258
  store i64 %xor43.i6381, i64* %x01.i6328, align 8
  %2259 = load i64*, i64** %out1.addr.i6282, align 8
  %2260 = load i64, i64* %2259, align 8
  %2261 = load i64, i64* %x01.i6328, align 8
  %xor44.i6382 = xor i64 %2260, %2261
  %2262 = load i64*, i64** %out1.addr.i6282, align 8
  store i64 %xor44.i6382, i64* %2262, align 8
  %2263 = load i64, i64* %x3333FFFF.i6288, align 8
  %2264 = load i64, i64* %x7F75FFFF.i6300, align 8
  %xor45.i6383 = xor i64 %2263, %2264
  store i64 %xor45.i6383, i64* %x4C460000.i6318, align 8
  %2265 = load i64, i64* %x0AD99996.i6306, align 8
  %2266 = load i64, i64* %x4C460000.i6318, align 8
  %or46.i6384 = or i64 %2265, %2266
  store i64 %or46.i6384, i64* %x4EDF9996.i6319, align 8
  %2267 = load i64, i64* %x6391D07C.i6316, align 8
  %2268 = load i64, i64* %x4EDF9996.i6319, align 8
  %xor47.i6385 = xor i64 %2267, %2268
  store i64 %xor47.i6385, i64* %x2D4E49EA.i6320, align 8
  %2269 = load i64, i64* %x00FFFF00.i6293, align 8
  %2270 = load i64, i64* %xBB0747B0.i6317, align 8
  %or48.i6386 = or i64 %2269, %2270
  store i64 %or48.i6386, i64* %xBBFFFFB0.i6321, align 8
  %2271 = load i64, i64* %x2D4E49EA.i6320, align 8
  %2272 = load i64, i64* %xBBFFFFB0.i6321, align 8
  %xor49.i6387 = xor i64 %2271, %2272
  store i64 %xor49.i6387, i64* %x96B1B65A.i6322, align 8
  %2273 = load i64, i64* %x4A01CC93.i6298, align 8
  %2274 = load i64, i64* %a2.addr.i6277, align 8
  %or50.i6388 = or i64 %2273, %2274
  store i64 %or50.i6388, i64* %x10.i6329, align 8
  %2275 = load i64, i64* %x10.i6329, align 8
  %2276 = load i64, i64* %x96B1B65A.i6322, align 8
  %xor51.i6389 = xor i64 %2275, %2276
  store i64 %xor51.i6389, i64* %x11.i6330, align 8
  %2277 = load i64*, i64** %out2.addr.i6283, align 8
  %2278 = load i64, i64* %2277, align 8
  %2279 = load i64, i64* %x11.i6330, align 8
  %xor52.i6390 = xor i64 %2278, %2279
  %2280 = load i64*, i64** %out2.addr.i6283, align 8
  store i64 %xor52.i6390, i64* %2280, align 8
  %2281 = load i64, i64* %a5.addr.i6280, align 8
  %2282 = load i64, i64* %x5A0F5A0F.i6287, align 8
  %or53.i6391 = or i64 %2281, %2282
  store i64 %or53.i6391, i64* %x5AFF5AFF.i6323, align 8
  %2283 = load i64, i64* %x5AFF5AFF.i6323, align 8
  %2284 = load i64, i64* %x2D4E49EA.i6320, align 8
  %neg54.i6392 = xor i64 %2284, -1
  %and55.i6393 = and i64 %2283, %neg54.i6392
  store i64 %and55.i6393, i64* %x52B11215.i6324, align 8
  %2285 = load i64, i64* %x4A01CC93.i6298, align 8
  %2286 = load i64, i64* %x6391D07C.i6316, align 8
  %and56.i6394 = and i64 %2285, %2286
  store i64 %and56.i6394, i64* %x4201C010.i6325, align 8
  %2287 = load i64, i64* %x52B11215.i6324, align 8
  %2288 = load i64, i64* %x4201C010.i6325, align 8
  %xor57.i6395 = xor i64 %2287, %2288
  store i64 %xor57.i6395, i64* %x10B0D205.i6326, align 8
  %2289 = load i64, i64* %x10B0D205.i6326, align 8
  %2290 = load i64, i64* %a2.addr.i6277, align 8
  %or58.i6396 = or i64 %2289, %2290
  store i64 %or58.i6396, i64* %x30.i6333, align 8
  %2291 = load i64, i64* %x30.i6333, align 8
  %2292 = load i64, i64* %x0AD99996.i6306, align 8
  %xor59.i6397 = xor i64 %2291, %2292
  store i64 %xor59.i6397, i64* %x31.i6334, align 8
  %2293 = load i64*, i64** %out4.addr.i6285, align 8
  %2294 = load i64, i64* %2293, align 8
  %2295 = load i64, i64* %x31.i6334, align 8
  %xor60.i6398 = xor i64 %2294, %2295
  %2296 = load i64*, i64** %out4.addr.i6285, align 8
  store i64 %xor60.i6398, i64* %2296, align 8
  %2297 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 54), align 8
  %arrayidx363 = getelementptr inbounds i64, i64* %2297, i64 0
  %2298 = load i64, i64* %arrayidx363, align 8
  %2299 = load i64**, i64*** %k, align 8
  %arrayidx364 = getelementptr inbounds i64*, i64** %2299, i64 54
  %2300 = load i64*, i64** %arrayidx364, align 8
  %arrayidx365 = getelementptr inbounds i64, i64* %2300, i64 0
  %2301 = load i64, i64* %arrayidx365, align 8
  %xor366 = xor i64 %2298, %2301
  %2302 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 55), align 8
  %arrayidx367 = getelementptr inbounds i64, i64* %2302, i64 0
  %2303 = load i64, i64* %arrayidx367, align 8
  %2304 = load i64**, i64*** %k, align 8
  %arrayidx368 = getelementptr inbounds i64*, i64** %2304, i64 55
  %2305 = load i64*, i64** %arrayidx368, align 8
  %arrayidx369 = getelementptr inbounds i64, i64* %2305, i64 0
  %2306 = load i64, i64* %arrayidx369, align 8
  %xor370 = xor i64 %2303, %2306
  %2307 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 56), align 8
  %arrayidx371 = getelementptr inbounds i64, i64* %2307, i64 0
  %2308 = load i64, i64* %arrayidx371, align 8
  %2309 = load i64**, i64*** %k, align 8
  %arrayidx372 = getelementptr inbounds i64*, i64** %2309, i64 56
  %2310 = load i64*, i64** %arrayidx372, align 8
  %arrayidx373 = getelementptr inbounds i64, i64* %2310, i64 0
  %2311 = load i64, i64* %arrayidx373, align 8
  %xor374 = xor i64 %2308, %2311
  %2312 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 57), align 8
  %arrayidx375 = getelementptr inbounds i64, i64* %2312, i64 0
  %2313 = load i64, i64* %arrayidx375, align 8
  %2314 = load i64**, i64*** %k, align 8
  %arrayidx376 = getelementptr inbounds i64*, i64** %2314, i64 57
  %2315 = load i64*, i64** %arrayidx376, align 8
  %arrayidx377 = getelementptr inbounds i64, i64* %2315, i64 0
  %2316 = load i64, i64* %arrayidx377, align 8
  %xor378 = xor i64 %2313, %2316
  %2317 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 58), align 8
  %arrayidx379 = getelementptr inbounds i64, i64* %2317, i64 0
  %2318 = load i64, i64* %arrayidx379, align 8
  %2319 = load i64**, i64*** %k, align 8
  %arrayidx380 = getelementptr inbounds i64*, i64** %2319, i64 58
  %2320 = load i64*, i64** %arrayidx380, align 8
  %arrayidx381 = getelementptr inbounds i64, i64* %2320, i64 0
  %2321 = load i64, i64* %arrayidx381, align 8
  %xor382 = xor i64 %2318, %2321
  %2322 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 59), align 8
  %arrayidx383 = getelementptr inbounds i64, i64* %2322, i64 0
  %2323 = load i64, i64* %arrayidx383, align 8
  %2324 = load i64**, i64*** %k, align 8
  %arrayidx384 = getelementptr inbounds i64*, i64** %2324, i64 59
  %2325 = load i64*, i64** %arrayidx384, align 8
  %arrayidx385 = getelementptr inbounds i64, i64* %2325, i64 0
  %2326 = load i64, i64* %arrayidx385, align 8
  %xor386 = xor i64 %2323, %2326
  store i64 %xor366, i64* %a1.addr.i6162, align 8
  store i64 %xor370, i64* %a2.addr.i6163, align 8
  store i64 %xor374, i64* %a3.addr.i6164, align 8
  store i64 %xor378, i64* %a4.addr.i6165, align 8
  store i64 %xor382, i64* %a5.addr.i6166, align 8
  store i64 %xor386, i64* %a6.addr.i6167, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 12), i64** %out1.addr.i6168, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 27), i64** %out2.addr.i6169, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 1), i64** %out3.addr.i6170, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 17), i64** %out4.addr.i6171, align 8
  %2327 = load i64, i64* %a2.addr.i6163, align 8
  %2328 = load i64, i64* %a5.addr.i6166, align 8
  %xor.i6216 = xor i64 %2327, %2328
  store i64 %xor.i6216, i64* %x33CC33CC.i6172, align 8
  %2329 = load i64, i64* %a1.addr.i6162, align 8
  %2330 = load i64, i64* %a6.addr.i6167, align 8
  %neg.i6217 = xor i64 %2330, -1
  %and.i6218 = and i64 %2329, %neg.i6217
  store i64 %and.i6218, i64* %x55550000.i6173, align 8
  %2331 = load i64, i64* %a5.addr.i6166, align 8
  %2332 = load i64, i64* %x55550000.i6173, align 8
  %neg1.i6219 = xor i64 %2332, -1
  %and2.i6220 = and i64 %2331, %neg1.i6219
  store i64 %and2.i6220, i64* %x00AA00FF.i6174, align 8
  %2333 = load i64, i64* %a2.addr.i6163, align 8
  %2334 = load i64, i64* %x00AA00FF.i6174, align 8
  %or.i6221 = or i64 %2333, %2334
  store i64 %or.i6221, i64* %x33BB33FF.i6175, align 8
  %2335 = load i64, i64* %x33CC33CC.i6172, align 8
  %2336 = load i64, i64* %a6.addr.i6167, align 8
  %neg3.i6222 = xor i64 %2336, -1
  %and4.i6223 = and i64 %2335, %neg3.i6222
  store i64 %and4.i6223, i64* %x33CC0000.i6176, align 8
  %2337 = load i64, i64* %a1.addr.i6162, align 8
  %2338 = load i64, i64* %x33CC33CC.i6172, align 8
  %and5.i6224 = and i64 %2337, %2338
  store i64 %and5.i6224, i64* %x11441144.i6177, align 8
  %2339 = load i64, i64* %a5.addr.i6166, align 8
  %2340 = load i64, i64* %x11441144.i6177, align 8
  %xor6.i6225 = xor i64 %2339, %2340
  store i64 %xor6.i6225, i64* %x11BB11BB.i6178, align 8
  %2341 = load i64, i64* %x11BB11BB.i6178, align 8
  %2342 = load i64, i64* %x33CC0000.i6176, align 8
  %neg7.i6226 = xor i64 %2342, -1
  %and8.i6227 = and i64 %2341, %neg7.i6226
  store i64 %and8.i6227, i64* %x003311BB.i6179, align 8
  %2343 = load i64, i64* %a3.addr.i6164, align 8
  %2344 = load i64, i64* %a6.addr.i6167, align 8
  %and9.i6228 = and i64 %2343, %2344
  store i64 %and9.i6228, i64* %x00000F0F.i6180, align 8
  %2345 = load i64, i64* %x00AA00FF.i6174, align 8
  %2346 = load i64, i64* %x33CC0000.i6176, align 8
  %xor10.i6229 = xor i64 %2345, %2346
  store i64 %xor10.i6229, i64* %x336600FF.i6181, align 8
  %2347 = load i64, i64* %x33BB33FF.i6175, align 8
  %2348 = load i64, i64* %x336600FF.i6181, align 8
  %and11.i6230 = and i64 %2347, %2348
  store i64 %and11.i6230, i64* %x332200FF.i6182, align 8
  %2349 = load i64, i64* %x332200FF.i6182, align 8
  %2350 = load i64, i64* %x00000F0F.i6180, align 8
  %neg12.i6231 = xor i64 %2350, -1
  %and13.i6232 = and i64 %2349, %neg12.i6231
  store i64 %and13.i6232, i64* %x332200F0.i6183, align 8
  %2351 = load i64, i64* %a3.addr.i6164, align 8
  %2352 = load i64, i64* %x332200FF.i6182, align 8
  %and14.i6233 = and i64 %2351, %2352
  store i64 %and14.i6233, i64* %x0302000F.i6184, align 8
  %2353 = load i64, i64* %a1.addr.i6162, align 8
  %neg15.i6234 = xor i64 %2353, -1
  store i64 %neg15.i6234, i64* %xAAAAAAAA.i6185, align 8
  %2354 = load i64, i64* %x0302000F.i6184, align 8
  %2355 = load i64, i64* %xAAAAAAAA.i6185, align 8
  %xor16.i6235 = xor i64 %2354, %2355
  store i64 %xor16.i6235, i64* %xA9A8AAA5.i6186, align 8
  %2356 = load i64, i64* %a6.addr.i6167, align 8
  %2357 = load i64, i64* %x33CC33CC.i6172, align 8
  %xor17.i6236 = xor i64 %2356, %2357
  store i64 %xor17.i6236, i64* %x33CCCC33.i6187, align 8
  %2358 = load i64, i64* %x33CCCC33.i6187, align 8
  %2359 = load i64, i64* %x00000F0F.i6180, align 8
  %neg18.i6237 = xor i64 %2359, -1
  %and19.i6238 = and i64 %2358, %neg18.i6237
  store i64 %and19.i6238, i64* %x33CCC030.i6188, align 8
  %2360 = load i64, i64* %xA9A8AAA5.i6186, align 8
  %2361 = load i64, i64* %x33CCC030.i6188, align 8
  %xor20.i6239 = xor i64 %2360, %2361
  store i64 %xor20.i6239, i64* %x9A646A95.i6189, align 8
  %2362 = load i64, i64* %a4.addr.i6165, align 8
  %2363 = load i64, i64* %x332200F0.i6183, align 8
  %neg21.i6240 = xor i64 %2363, -1
  %and22.i6241 = and i64 %2362, %neg21.i6240
  store i64 %and22.i6241, i64* %x10.i6210, align 8
  %2364 = load i64, i64* %x10.i6210, align 8
  %2365 = load i64, i64* %x9A646A95.i6189, align 8
  %xor23.i6242 = xor i64 %2364, %2365
  store i64 %xor23.i6242, i64* %x11.i6211, align 8
  %2366 = load i64*, i64** %out2.addr.i6169, align 8
  %2367 = load i64, i64* %2366, align 8
  %2368 = load i64, i64* %x11.i6211, align 8
  %xor24.i6243 = xor i64 %2367, %2368
  %2369 = load i64*, i64** %out2.addr.i6169, align 8
  store i64 %xor24.i6243, i64* %2369, align 8
  %2370 = load i64, i64* %a2.addr.i6163, align 8
  %2371 = load i64, i64* %x33CCC030.i6188, align 8
  %neg25.i6244 = xor i64 %2371, -1
  %and26.i6245 = and i64 %2370, %neg25.i6244
  store i64 %and26.i6245, i64* %x00333303.i6190, align 8
  %2372 = load i64, i64* %x11BB11BB.i6178, align 8
  %2373 = load i64, i64* %x00333303.i6190, align 8
  %xor27.i6246 = xor i64 %2372, %2373
  store i64 %xor27.i6246, i64* %x118822B8.i6191, align 8
  %2374 = load i64, i64* %xA9A8AAA5.i6186, align 8
  %2375 = load i64, i64* %x118822B8.i6191, align 8
  %neg28.i6247 = xor i64 %2375, -1
  %and29.i6248 = and i64 %2374, %neg28.i6247
  store i64 %and29.i6248, i64* %xA8208805.i6192, align 8
  %2376 = load i64, i64* %a3.addr.i6164, align 8
  %2377 = load i64, i64* %x33CCCC33.i6187, align 8
  %xor30.i6249 = xor i64 %2376, %2377
  store i64 %xor30.i6249, i64* %x3CC3C33C.i6193, align 8
  %2378 = load i64, i64* %xA8208805.i6192, align 8
  %2379 = load i64, i64* %x3CC3C33C.i6193, align 8
  %xor31.i6250 = xor i64 %2378, %2379
  store i64 %xor31.i6250, i64* %x94E34B39.i6194, align 8
  %2380 = load i64, i64* %x33BB33FF.i6175, align 8
  %2381 = load i64, i64* %a4.addr.i6165, align 8
  %neg32.i6251 = xor i64 %2381, -1
  %and33.i6252 = and i64 %2380, %neg32.i6251
  store i64 %and33.i6252, i64* %x00.i6208, align 8
  %2382 = load i64, i64* %x00.i6208, align 8
  %2383 = load i64, i64* %x94E34B39.i6194, align 8
  %xor34.i6253 = xor i64 %2382, %2383
  store i64 %xor34.i6253, i64* %x01.i6209, align 8
  %2384 = load i64*, i64** %out1.addr.i6168, align 8
  %2385 = load i64, i64* %2384, align 8
  %2386 = load i64, i64* %x01.i6209, align 8
  %xor35.i6254 = xor i64 %2385, %2386
  %2387 = load i64*, i64** %out1.addr.i6168, align 8
  store i64 %xor35.i6254, i64* %2387, align 8
  %2388 = load i64, i64* %x0302000F.i6184, align 8
  %2389 = load i64, i64* %x00333303.i6190, align 8
  %xor36.i6255 = xor i64 %2388, %2389
  store i64 %xor36.i6255, i64* %x0331330C.i6195, align 8
  %2390 = load i64, i64* %x3CC3C33C.i6193, align 8
  %2391 = load i64, i64* %x0331330C.i6195, align 8
  %or37.i6256 = or i64 %2390, %2391
  store i64 %or37.i6256, i64* %x3FF3F33C.i6196, align 8
  %2392 = load i64, i64* %x33BB33FF.i6175, align 8
  %2393 = load i64, i64* %x9A646A95.i6189, align 8
  %xor38.i6257 = xor i64 %2392, %2393
  store i64 %xor38.i6257, i64* %xA9DF596A.i6197, align 8
  %2394 = load i64, i64* %x00000F0F.i6180, align 8
  %2395 = load i64, i64* %xA9DF596A.i6197, align 8
  %or39.i6258 = or i64 %2394, %2395
  store i64 %or39.i6258, i64* %xA9DF5F6F.i6198, align 8
  %2396 = load i64, i64* %x3FF3F33C.i6196, align 8
  %2397 = load i64, i64* %xA9DF5F6F.i6198, align 8
  %xor40.i6259 = xor i64 %2396, %2397
  store i64 %xor40.i6259, i64* %x962CAC53.i6199, align 8
  %2398 = load i64, i64* %x94E34B39.i6194, align 8
  %2399 = load i64, i64* %x0331330C.i6195, align 8
  %xor41.i6260 = xor i64 %2398, %2399
  store i64 %xor41.i6260, i64* %x97D27835.i6200, align 8
  %2400 = load i64, i64* %xA9DF5F6F.i6198, align 8
  %2401 = load i64, i64* %x97D27835.i6200, align 8
  %and42.i6261 = and i64 %2400, %2401
  store i64 %and42.i6261, i64* %x81D25825.i6201, align 8
  %2402 = load i64, i64* %a5.addr.i6166, align 8
  %2403 = load i64, i64* %x81D25825.i6201, align 8
  %xor43.i6262 = xor i64 %2402, %2403
  store i64 %xor43.i6262, i64* %x812D58DA.i6202, align 8
  %2404 = load i64, i64* %x812D58DA.i6202, align 8
  %2405 = load i64, i64* %x33CC0000.i6176, align 8
  %neg44.i6263 = xor i64 %2405, -1
  %and45.i6264 = and i64 %2404, %neg44.i6263
  store i64 %and45.i6264, i64* %x802158DA.i6203, align 8
  %2406 = load i64, i64* %x9A646A95.i6189, align 8
  %2407 = load i64, i64* %x802158DA.i6203, align 8
  %xor46.i6265 = xor i64 %2406, %2407
  store i64 %xor46.i6265, i64* %x1A45324F.i6204, align 8
  %2408 = load i64, i64* %x1A45324F.i6204, align 8
  %2409 = load i64, i64* %a4.addr.i6165, align 8
  %or47.i6266 = or i64 %2408, %2409
  store i64 %or47.i6266, i64* %x20.i6212, align 8
  %2410 = load i64, i64* %x20.i6212, align 8
  %2411 = load i64, i64* %x962CAC53.i6199, align 8
  %xor48.i6267 = xor i64 %2410, %2411
  store i64 %xor48.i6267, i64* %x21.i6213, align 8
  %2412 = load i64*, i64** %out3.addr.i6170, align 8
  %2413 = load i64, i64* %2412, align 8
  %2414 = load i64, i64* %x21.i6213, align 8
  %xor49.i6268 = xor i64 %2413, %2414
  %2415 = load i64*, i64** %out3.addr.i6170, align 8
  store i64 %xor49.i6268, i64* %2415, align 8
  %2416 = load i64, i64* %x1A45324F.i6204, align 8
  %2417 = load i64, i64* %x118822B8.i6191, align 8
  %neg50.i6269 = xor i64 %2417, -1
  %and51.i6270 = and i64 %2416, %neg50.i6269
  store i64 %and51.i6270, i64* %x0A451047.i6205, align 8
  %2418 = load i64, i64* %x33CCCC33.i6187, align 8
  %2419 = load i64, i64* %xA9DF596A.i6197, align 8
  %or52.i6271 = or i64 %2418, %2419
  store i64 %or52.i6271, i64* %xBBDFDD7B.i6206, align 8
  %2420 = load i64, i64* %x0A451047.i6205, align 8
  %2421 = load i64, i64* %xBBDFDD7B.i6206, align 8
  %xor53.i6272 = xor i64 %2420, %2421
  store i64 %xor53.i6272, i64* %xB19ACD3C.i6207, align 8
  %2422 = load i64, i64* %x003311BB.i6179, align 8
  %2423 = load i64, i64* %a4.addr.i6165, align 8
  %or54.i6273 = or i64 %2422, %2423
  store i64 %or54.i6273, i64* %x30.i6214, align 8
  %2424 = load i64, i64* %x30.i6214, align 8
  %2425 = load i64, i64* %xB19ACD3C.i6207, align 8
  %xor55.i6274 = xor i64 %2424, %2425
  store i64 %xor55.i6274, i64* %x31.i6215, align 8
  %2426 = load i64*, i64** %out4.addr.i6171, align 8
  %2427 = load i64, i64* %2426, align 8
  %2428 = load i64, i64* %x31.i6215, align 8
  %xor56.i6275 = xor i64 %2427, %2428
  %2429 = load i64*, i64** %out4.addr.i6171, align 8
  store i64 %xor56.i6275, i64* %2429, align 8
  %2430 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 39), align 8
  %2431 = load i64**, i64*** %k, align 8
  %arrayidx387 = getelementptr inbounds i64*, i64** %2431, i64 60
  %2432 = load i64*, i64** %arrayidx387, align 8
  %arrayidx388 = getelementptr inbounds i64, i64* %2432, i64 0
  %2433 = load i64, i64* %arrayidx388, align 8
  %xor389 = xor i64 %2430, %2433
  %2434 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 40), align 8
  %2435 = load i64**, i64*** %k, align 8
  %arrayidx390 = getelementptr inbounds i64*, i64** %2435, i64 61
  %2436 = load i64*, i64** %arrayidx390, align 8
  %arrayidx391 = getelementptr inbounds i64, i64* %2436, i64 0
  %2437 = load i64, i64* %arrayidx391, align 8
  %xor392 = xor i64 %2434, %2437
  %2438 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 41), align 8
  %2439 = load i64**, i64*** %k, align 8
  %arrayidx393 = getelementptr inbounds i64*, i64** %2439, i64 62
  %2440 = load i64*, i64** %arrayidx393, align 8
  %arrayidx394 = getelementptr inbounds i64, i64* %2440, i64 0
  %2441 = load i64, i64* %arrayidx394, align 8
  %xor395 = xor i64 %2438, %2441
  %2442 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 42), align 8
  %2443 = load i64**, i64*** %k, align 8
  %arrayidx396 = getelementptr inbounds i64*, i64** %2443, i64 63
  %2444 = load i64*, i64** %arrayidx396, align 8
  %arrayidx397 = getelementptr inbounds i64, i64* %2444, i64 0
  %2445 = load i64, i64* %arrayidx397, align 8
  %xor398 = xor i64 %2442, %2445
  %2446 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 43), align 8
  %2447 = load i64**, i64*** %k, align 8
  %arrayidx399 = getelementptr inbounds i64*, i64** %2447, i64 64
  %2448 = load i64*, i64** %arrayidx399, align 8
  %arrayidx400 = getelementptr inbounds i64, i64* %2448, i64 0
  %2449 = load i64, i64* %arrayidx400, align 8
  %xor401 = xor i64 %2446, %2449
  %2450 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 44), align 8
  %2451 = load i64**, i64*** %k, align 8
  %arrayidx402 = getelementptr inbounds i64*, i64** %2451, i64 65
  %2452 = load i64*, i64** %arrayidx402, align 8
  %arrayidx403 = getelementptr inbounds i64, i64* %2452, i64 0
  %2453 = load i64, i64* %arrayidx403, align 8
  %xor404 = xor i64 %2450, %2453
  store i64 %xor389, i64* %a1.addr.i6042, align 8
  store i64 %xor392, i64* %a2.addr.i6043, align 8
  store i64 %xor395, i64* %a3.addr.i6044, align 8
  store i64 %xor398, i64* %a4.addr.i6045, align 8
  store i64 %xor401, i64* %a5.addr.i6046, align 8
  store i64 %xor404, i64* %a6.addr.i6047, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 23), i64** %out1.addr.i6048, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 15), i64** %out2.addr.i6049, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 29), i64** %out3.addr.i6050, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 5), i64** %out4.addr.i6051, align 8
  %2454 = load i64, i64* %a1.addr.i6042, align 8
  %2455 = load i64, i64* %a2.addr.i6043, align 8
  %neg.i6098 = xor i64 %2455, -1
  %and.i6099 = and i64 %2454, %neg.i6098
  store i64 %and.i6099, i64* %x44444444.i6052, align 8
  %2456 = load i64, i64* %a3.addr.i6044, align 8
  %2457 = load i64, i64* %a6.addr.i6047, align 8
  %xor.i6100 = xor i64 %2456, %2457
  store i64 %xor.i6100, i64* %x0F0FF0F0.i6053, align 8
  %2458 = load i64, i64* %x44444444.i6052, align 8
  %2459 = load i64, i64* %x0F0FF0F0.i6053, align 8
  %or.i6101 = or i64 %2458, %2459
  store i64 %or.i6101, i64* %x4F4FF4F4.i6054, align 8
  %2460 = load i64, i64* %a4.addr.i6045, align 8
  %2461 = load i64, i64* %a6.addr.i6047, align 8
  %xor1.i6102 = xor i64 %2460, %2461
  store i64 %xor1.i6102, i64* %x00FFFF00.i6055, align 8
  %2462 = load i64, i64* %x00FFFF00.i6055, align 8
  %2463 = load i64, i64* %a1.addr.i6042, align 8
  %neg2.i6103 = xor i64 %2463, -1
  %and3.i6104 = and i64 %2462, %neg2.i6103
  store i64 %and3.i6104, i64* %x00AAAA00.i6056, align 8
  %2464 = load i64, i64* %x4F4FF4F4.i6054, align 8
  %2465 = load i64, i64* %x00AAAA00.i6056, align 8
  %xor4.i6105 = xor i64 %2464, %2465
  store i64 %xor4.i6105, i64* %x4FE55EF4.i6057, align 8
  %2466 = load i64, i64* %a2.addr.i6043, align 8
  %2467 = load i64, i64* %x0F0FF0F0.i6053, align 8
  %xor5.i6106 = xor i64 %2466, %2467
  store i64 %xor5.i6106, i64* %x3C3CC3C3.i6058, align 8
  %2468 = load i64, i64* %x3C3CC3C3.i6058, align 8
  %2469 = load i64, i64* %a6.addr.i6047, align 8
  %neg6.i6107 = xor i64 %2469, -1
  %and7.i6108 = and i64 %2468, %neg6.i6107
  store i64 %and7.i6108, i64* %x3C3C0000.i6059, align 8
  %2470 = load i64, i64* %x4F4FF4F4.i6054, align 8
  %2471 = load i64, i64* %x3C3C0000.i6059, align 8
  %xor8.i6109 = xor i64 %2470, %2471
  store i64 %xor8.i6109, i64* %x7373F4F4.i6060, align 8
  %2472 = load i64, i64* %x4FE55EF4.i6057, align 8
  %2473 = load i64, i64* %x7373F4F4.i6060, align 8
  %neg9.i6110 = xor i64 %2473, -1
  %and10.i6111 = and i64 %2472, %neg9.i6110
  store i64 %and10.i6111, i64* %x0C840A00.i6061, align 8
  %2474 = load i64, i64* %a6.addr.i6047, align 8
  %2475 = load i64, i64* %x4FE55EF4.i6057, align 8
  %and11.i6112 = and i64 %2474, %2475
  store i64 %and11.i6112, i64* %x00005EF4.i6062, align 8
  %2476 = load i64, i64* %a4.addr.i6045, align 8
  %2477 = load i64, i64* %x00005EF4.i6062, align 8
  %or12.i6113 = or i64 %2476, %2477
  store i64 %or12.i6113, i64* %x00FF5EFF.i6063, align 8
  %2478 = load i64, i64* %a1.addr.i6042, align 8
  %2479 = load i64, i64* %x00FF5EFF.i6063, align 8
  %and13.i6114 = and i64 %2478, %2479
  store i64 %and13.i6114, i64* %x00555455.i6064, align 8
  %2480 = load i64, i64* %x3C3CC3C3.i6058, align 8
  %2481 = load i64, i64* %x00555455.i6064, align 8
  %xor14.i6115 = xor i64 %2480, %2481
  store i64 %xor14.i6115, i64* %x3C699796.i6065, align 8
  %2482 = load i64, i64* %x4FE55EF4.i6057, align 8
  %2483 = load i64, i64* %a5.addr.i6046, align 8
  %neg15.i6116 = xor i64 %2483, -1
  %and16.i6117 = and i64 %2482, %neg15.i6116
  store i64 %and16.i6117, i64* %x30.i6096, align 8
  %2484 = load i64, i64* %x30.i6096, align 8
  %2485 = load i64, i64* %x3C699796.i6065, align 8
  %xor17.i6118 = xor i64 %2484, %2485
  store i64 %xor17.i6118, i64* %x31.i6097, align 8
  %2486 = load i64*, i64** %out4.addr.i6051, align 8
  %2487 = load i64, i64* %2486, align 8
  %2488 = load i64, i64* %x31.i6097, align 8
  %xor18.i6119 = xor i64 %2487, %2488
  %2489 = load i64*, i64** %out4.addr.i6051, align 8
  store i64 %xor18.i6119, i64* %2489, align 8
  %2490 = load i64, i64* %x0F0FF0F0.i6053, align 8
  %2491 = load i64, i64* %x00FFFF00.i6055, align 8
  %and19.i6120 = and i64 %2490, %2491
  store i64 %and19.i6120, i64* %x000FF000.i6066, align 8
  %2492 = load i64, i64* %a1.addr.i6042, align 8
  %2493 = load i64, i64* %a4.addr.i6045, align 8
  %xor20.i6121 = xor i64 %2492, %2493
  store i64 %xor20.i6121, i64* %x55AA55AA.i6067, align 8
  %2494 = load i64, i64* %x7373F4F4.i6060, align 8
  %2495 = load i64, i64* %x55AA55AA.i6067, align 8
  %xor21.i6122 = xor i64 %2494, %2495
  store i64 %xor21.i6122, i64* %x26D9A15E.i6068, align 8
  %2496 = load i64, i64* %a3.addr.i6044, align 8
  %2497 = load i64, i64* %x26D9A15E.i6068, align 8
  %or22.i6123 = or i64 %2496, %2497
  store i64 %or22.i6123, i64* %x2FDFAF5F.i6069, align 8
  %2498 = load i64, i64* %x2FDFAF5F.i6069, align 8
  %2499 = load i64, i64* %x000FF000.i6066, align 8
  %neg23.i6124 = xor i64 %2499, -1
  %and24.i6125 = and i64 %2498, %neg23.i6124
  store i64 %and24.i6125, i64* %x2FD00F5F.i6070, align 8
  %2500 = load i64, i64* %x00AAAA00.i6056, align 8
  %2501 = load i64, i64* %x55AA55AA.i6067, align 8
  %or25.i6126 = or i64 %2500, %2501
  store i64 %or25.i6126, i64* %x55AAFFAA.i6071, align 8
  %2502 = load i64, i64* %x3C699796.i6065, align 8
  %2503 = load i64, i64* %x55AAFFAA.i6071, align 8
  %neg26.i6127 = xor i64 %2503, -1
  %and27.i6128 = and i64 %2502, %neg26.i6127
  store i64 %and27.i6128, i64* %x28410014.i6072, align 8
  %2504 = load i64, i64* %a4.addr.i6045, align 8
  %2505 = load i64, i64* %a6.addr.i6047, align 8
  %and28.i6129 = and i64 %2504, %2505
  store i64 %and28.i6129, i64* %x000000FF.i6073, align 8
  %2506 = load i64, i64* %x000000FF.i6073, align 8
  %2507 = load i64, i64* %a2.addr.i6043, align 8
  %neg29.i6130 = xor i64 %2507, -1
  %and30.i6131 = and i64 %2506, %neg29.i6130
  store i64 %and30.i6131, i64* %x000000CC.i6074, align 8
  %2508 = load i64, i64* %x28410014.i6072, align 8
  %2509 = load i64, i64* %x000000CC.i6074, align 8
  %xor31.i6132 = xor i64 %2508, %2509
  store i64 %xor31.i6132, i64* %x284100D8.i6075, align 8
  %2510 = load i64, i64* %x284100D8.i6075, align 8
  %2511 = load i64, i64* %a3.addr.i6044, align 8
  %neg32.i6133 = xor i64 %2511, -1
  %and33.i6134 = and i64 %2510, %neg32.i6133
  store i64 %and33.i6134, i64* %x204000D0.i6076, align 8
  %2512 = load i64, i64* %x3C3CC3C3.i6058, align 8
  %2513 = load i64, i64* %x000000FF.i6073, align 8
  %or34.i6135 = or i64 %2512, %2513
  store i64 %or34.i6135, i64* %x3C3CC3FF.i6077, align 8
  %2514 = load i64, i64* %x3C3CC3FF.i6077, align 8
  %2515 = load i64, i64* %x204000D0.i6076, align 8
  %neg35.i6136 = xor i64 %2515, -1
  %and36.i6137 = and i64 %2514, %neg35.i6136
  store i64 %and36.i6137, i64* %x1C3CC32F.i6078, align 8
  %2516 = load i64, i64* %a1.addr.i6042, align 8
  %2517 = load i64, i64* %x1C3CC32F.i6078, align 8
  %xor37.i6138 = xor i64 %2516, %2517
  store i64 %xor37.i6138, i64* %x4969967A.i6079, align 8
  %2518 = load i64, i64* %x2FD00F5F.i6070, align 8
  %2519 = load i64, i64* %a5.addr.i6046, align 8
  %and38.i6139 = and i64 %2518, %2519
  store i64 %and38.i6139, i64* %x10.i6092, align 8
  %2520 = load i64, i64* %x10.i6092, align 8
  %2521 = load i64, i64* %x4969967A.i6079, align 8
  %xor39.i6140 = xor i64 %2520, %2521
  store i64 %xor39.i6140, i64* %x11.i6093, align 8
  %2522 = load i64*, i64** %out2.addr.i6049, align 8
  %2523 = load i64, i64* %2522, align 8
  %2524 = load i64, i64* %x11.i6093, align 8
  %xor40.i6141 = xor i64 %2523, %2524
  %2525 = load i64*, i64** %out2.addr.i6049, align 8
  store i64 %xor40.i6141, i64* %2525, align 8
  %2526 = load i64, i64* %x4FE55EF4.i6057, align 8
  %2527 = load i64, i64* %a2.addr.i6043, align 8
  %neg41.i6142 = xor i64 %2527, -1
  %and42.i6143 = and i64 %2526, %neg41.i6142
  store i64 %and42.i6143, i64* %x4CC44CC4.i6080, align 8
  %2528 = load i64, i64* %x4CC44CC4.i6080, align 8
  %2529 = load i64, i64* %a3.addr.i6044, align 8
  %neg43.i6144 = xor i64 %2529, -1
  %and44.i6145 = and i64 %2528, %neg43.i6144
  store i64 %and44.i6145, i64* %x40C040C0.i6081, align 8
  %2530 = load i64, i64* %x3C3CC3C3.i6058, align 8
  %2531 = load i64, i64* %x55AAFFAA.i6071, align 8
  %xor45.i6146 = xor i64 %2530, %2531
  store i64 %xor45.i6146, i64* %x69963C69.i6082, align 8
  %2532 = load i64, i64* %x69963C69.i6082, align 8
  %neg46.i6147 = xor i64 %2532, -1
  store i64 %neg46.i6147, i64* %x9669C396.i6083, align 8
  %2533 = load i64, i64* %x40C040C0.i6081, align 8
  %2534 = load i64, i64* %x9669C396.i6083, align 8
  %xor47.i6148 = xor i64 %2533, %2534
  store i64 %xor47.i6148, i64* %xD6A98356.i6084, align 8
  %2535 = load i64, i64* %a5.addr.i6046, align 8
  %2536 = load i64, i64* %x0C840A00.i6061, align 8
  %neg48.i6149 = xor i64 %2536, -1
  %and49.i6150 = and i64 %2535, %neg48.i6149
  store i64 %and49.i6150, i64* %x00.i6090, align 8
  %2537 = load i64, i64* %x00.i6090, align 8
  %2538 = load i64, i64* %xD6A98356.i6084, align 8
  %xor50.i6151 = xor i64 %2537, %2538
  store i64 %xor50.i6151, i64* %x01.i6091, align 8
  %2539 = load i64*, i64** %out1.addr.i6048, align 8
  %2540 = load i64, i64* %2539, align 8
  %2541 = load i64, i64* %x01.i6091, align 8
  %xor51.i6152 = xor i64 %2540, %2541
  %2542 = load i64*, i64** %out1.addr.i6048, align 8
  store i64 %xor51.i6152, i64* %2542, align 8
  %2543 = load i64, i64* %a4.addr.i6045, align 8
  %2544 = load i64, i64* %x0F0FF0F0.i6053, align 8
  %and52.i6153 = and i64 %2543, %2544
  store i64 %and52.i6153, i64* %x000F00F0.i6085, align 8
  %2545 = load i64, i64* %x3C3CC3C3.i6058, align 8
  %2546 = load i64, i64* %xD6A98356.i6084, align 8
  %or53.i6154 = or i64 %2545, %2546
  store i64 %or53.i6154, i64* %xFEBDC3D7.i6086, align 8
  %2547 = load i64, i64* %xFEBDC3D7.i6086, align 8
  %2548 = load i64, i64* %x000F00F0.i6085, align 8
  %neg54.i6155 = xor i64 %2548, -1
  %and55.i6156 = and i64 %2547, %neg54.i6155
  store i64 %and55.i6156, i64* %xFEB0C307.i6087, align 8
  %2549 = load i64, i64* %x00AAAA00.i6056, align 8
  %2550 = load i64, i64* %x4CC44CC4.i6080, align 8
  %or56.i6157 = or i64 %2549, %2550
  store i64 %or56.i6157, i64* %x4CEEEEC4.i6088, align 8
  %2551 = load i64, i64* %xFEB0C307.i6087, align 8
  %2552 = load i64, i64* %x4CEEEEC4.i6088, align 8
  %xor57.i6158 = xor i64 %2551, %2552
  store i64 %xor57.i6158, i64* %xB25E2DC3.i6089, align 8
  %2553 = load i64, i64* %x284100D8.i6075, align 8
  %2554 = load i64, i64* %a5.addr.i6046, align 8
  %or58.i6159 = or i64 %2553, %2554
  store i64 %or58.i6159, i64* %x20.i6094, align 8
  %2555 = load i64, i64* %x20.i6094, align 8
  %2556 = load i64, i64* %xB25E2DC3.i6089, align 8
  %xor59.i6160 = xor i64 %2555, %2556
  store i64 %xor59.i6160, i64* %x21.i6095, align 8
  %2557 = load i64*, i64** %out3.addr.i6050, align 8
  %2558 = load i64, i64* %2557, align 8
  %2559 = load i64, i64* %x21.i6095, align 8
  %xor60.i6161 = xor i64 %2558, %2559
  %2560 = load i64*, i64** %out3.addr.i6050, align 8
  store i64 %xor60.i6161, i64* %2560, align 8
  %2561 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 43), align 8
  %2562 = load i64**, i64*** %k, align 8
  %arrayidx405 = getelementptr inbounds i64*, i64** %2562, i64 66
  %2563 = load i64*, i64** %arrayidx405, align 8
  %arrayidx406 = getelementptr inbounds i64, i64* %2563, i64 0
  %2564 = load i64, i64* %arrayidx406, align 8
  %xor407 = xor i64 %2561, %2564
  %2565 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 44), align 8
  %2566 = load i64**, i64*** %k, align 8
  %arrayidx408 = getelementptr inbounds i64*, i64** %2566, i64 67
  %2567 = load i64*, i64** %arrayidx408, align 8
  %arrayidx409 = getelementptr inbounds i64, i64* %2567, i64 0
  %2568 = load i64, i64* %arrayidx409, align 8
  %xor410 = xor i64 %2565, %2568
  %2569 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 45), align 8
  %2570 = load i64**, i64*** %k, align 8
  %arrayidx411 = getelementptr inbounds i64*, i64** %2570, i64 68
  %2571 = load i64*, i64** %arrayidx411, align 8
  %arrayidx412 = getelementptr inbounds i64, i64* %2571, i64 0
  %2572 = load i64, i64* %arrayidx412, align 8
  %xor413 = xor i64 %2569, %2572
  %2573 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 46), align 8
  %2574 = load i64**, i64*** %k, align 8
  %arrayidx414 = getelementptr inbounds i64*, i64** %2574, i64 69
  %2575 = load i64*, i64** %arrayidx414, align 8
  %arrayidx415 = getelementptr inbounds i64, i64* %2575, i64 0
  %2576 = load i64, i64* %arrayidx415, align 8
  %xor416 = xor i64 %2573, %2576
  %2577 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 47), align 8
  %2578 = load i64**, i64*** %k, align 8
  %arrayidx417 = getelementptr inbounds i64*, i64** %2578, i64 70
  %2579 = load i64*, i64** %arrayidx417, align 8
  %arrayidx418 = getelementptr inbounds i64, i64* %2579, i64 0
  %2580 = load i64, i64* %arrayidx418, align 8
  %xor419 = xor i64 %2577, %2580
  %2581 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 48), align 8
  %2582 = load i64**, i64*** %k, align 8
  %arrayidx420 = getelementptr inbounds i64*, i64** %2582, i64 71
  %2583 = load i64*, i64** %arrayidx420, align 8
  %arrayidx421 = getelementptr inbounds i64, i64* %2583, i64 0
  %2584 = load i64, i64* %arrayidx421, align 8
  %xor422 = xor i64 %2581, %2584
  store i64 %xor407, i64* %a1.addr.i5953, align 8
  store i64 %xor410, i64* %a2.addr.i5954, align 8
  store i64 %xor413, i64* %a3.addr.i5955, align 8
  store i64 %xor416, i64* %a4.addr.i5956, align 8
  store i64 %xor419, i64* %a5.addr.i5957, align 8
  store i64 %xor422, i64* %a6.addr.i5958, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 25), i64** %out1.addr.i5959, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 19), i64** %out2.addr.i5960, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 9), i64** %out3.addr.i5961, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 0), i64** %out4.addr.i5962, align 8
  %2585 = load i64, i64* %a1.addr.i5953, align 8
  %2586 = load i64, i64* %a3.addr.i5955, align 8
  %xor.i5996 = xor i64 %2585, %2586
  store i64 %xor.i5996, i64* %x5A5A5A5A.i5963, align 8
  %2587 = load i64, i64* %a3.addr.i5955, align 8
  %2588 = load i64, i64* %a5.addr.i5957, align 8
  %xor1.i5997 = xor i64 %2587, %2588
  store i64 %xor1.i5997, i64* %x0F0FF0F0.i5964, align 8
  %2589 = load i64, i64* %a2.addr.i5954, align 8
  %2590 = load i64, i64* %a4.addr.i5956, align 8
  %or.i5998 = or i64 %2589, %2590
  store i64 %or.i5998, i64* %x33FF33FF.i5965, align 8
  %2591 = load i64, i64* %a5.addr.i5957, align 8
  %2592 = load i64, i64* %x33FF33FF.i5965, align 8
  %xor2.i5999 = xor i64 %2591, %2592
  store i64 %xor2.i5999, i64* %x33FFCC00.i5966, align 8
  %2593 = load i64, i64* %x0F0FF0F0.i5964, align 8
  %2594 = load i64, i64* %x33FFCC00.i5966, align 8
  %neg.i6000 = xor i64 %2594, -1
  %and.i6001 = and i64 %2593, %neg.i6000
  store i64 %and.i6001, i64* %x0C0030F0.i5967, align 8
  %2595 = load i64, i64* %x0F0FF0F0.i5964, align 8
  %2596 = load i64, i64* %a2.addr.i5954, align 8
  %neg3.i6002 = xor i64 %2596, -1
  %and4.i6003 = and i64 %2595, %neg3.i6002
  store i64 %and4.i6003, i64* %x0C0CC0C0.i5968, align 8
  %2597 = load i64, i64* %a4.addr.i5956, align 8
  %2598 = load i64, i64* %x0C0CC0C0.i5968, align 8
  %xor5.i6004 = xor i64 %2597, %2598
  store i64 %xor5.i6004, i64* %x0CF3C03F.i5969, align 8
  %2599 = load i64, i64* %x5A5A5A5A.i5963, align 8
  %2600 = load i64, i64* %x0CF3C03F.i5969, align 8
  %or6.i6005 = or i64 %2599, %2600
  store i64 %or6.i6005, i64* %x5EFBDA7F.i5970, align 8
  %2601 = load i64, i64* %x5EFBDA7F.i5970, align 8
  %2602 = load i64, i64* %x0C0030F0.i5967, align 8
  %neg7.i6006 = xor i64 %2602, -1
  %and8.i6007 = and i64 %2601, %neg7.i6006
  store i64 %and8.i6007, i64* %x52FBCA0F.i5971, align 8
  %2603 = load i64, i64* %a2.addr.i5954, align 8
  %2604 = load i64, i64* %x52FBCA0F.i5971, align 8
  %xor9.i6008 = xor i64 %2603, %2604
  store i64 %xor9.i6008, i64* %x61C8F93C.i5972, align 8
  %2605 = load i64, i64* %x0CF3C03F.i5969, align 8
  %2606 = load i64, i64* %x61C8F93C.i5972, align 8
  %and10.i6009 = and i64 %2605, %2606
  store i64 %and10.i6009, i64* %x00C0C03C.i5973, align 8
  %2607 = load i64, i64* %x0F0FF0F0.i5964, align 8
  %2608 = load i64, i64* %x00C0C03C.i5973, align 8
  %neg11.i6010 = xor i64 %2608, -1
  %and12.i6011 = and i64 %2607, %neg11.i6010
  store i64 %and12.i6011, i64* %x0F0F30C0.i5974, align 8
  %2609 = load i64, i64* %x5A5A5A5A.i5963, align 8
  %2610 = load i64, i64* %x61C8F93C.i5972, align 8
  %xor13.i6012 = xor i64 %2609, %2610
  store i64 %xor13.i6012, i64* %x3B92A366.i5975, align 8
  %2611 = load i64, i64* %x3B92A366.i5975, align 8
  %2612 = load i64, i64* %x0F0F30C0.i5974, align 8
  %neg14.i6013 = xor i64 %2612, -1
  %and15.i6014 = and i64 %2611, %neg14.i6013
  store i64 %and15.i6014, i64* %x30908326.i5976, align 8
  %2613 = load i64, i64* %x0C0030F0.i5967, align 8
  %2614 = load i64, i64* %x30908326.i5976, align 8
  %xor16.i6015 = xor i64 %2613, %2614
  store i64 %xor16.i6015, i64* %x3C90B3D6.i5977, align 8
  %2615 = load i64, i64* %a2.addr.i5954, align 8
  %2616 = load i64, i64* %a4.addr.i5956, align 8
  %xor17.i6016 = xor i64 %2615, %2616
  store i64 %xor17.i6016, i64* %x33CC33CC.i5978, align 8
  %2617 = load i64, i64* %a5.addr.i5957, align 8
  %2618 = load i64, i64* %x0C0CC0C0.i5968, align 8
  %or18.i6017 = or i64 %2617, %2618
  store i64 %or18.i6017, i64* %x0C0CFFFF.i5979, align 8
  %2619 = load i64, i64* %x3B92A366.i5975, align 8
  %2620 = load i64, i64* %x0C0CFFFF.i5979, align 8
  %xor19.i6018 = xor i64 %2619, %2620
  store i64 %xor19.i6018, i64* %x379E5C99.i5980, align 8
  %2621 = load i64, i64* %x379E5C99.i5980, align 8
  %2622 = load i64, i64* %x33CC33CC.i5978, align 8
  %neg20.i6019 = xor i64 %2622, -1
  %and21.i6020 = and i64 %2621, %neg20.i6019
  store i64 %and21.i6020, i64* %x04124C11.i5981, align 8
  %2623 = load i64, i64* %x52FBCA0F.i5971, align 8
  %2624 = load i64, i64* %x04124C11.i5981, align 8
  %xor22.i6021 = xor i64 %2623, %2624
  store i64 %xor22.i6021, i64* %x56E9861E.i5982, align 8
  %2625 = load i64, i64* %a6.addr.i5958, align 8
  %2626 = load i64, i64* %x3C90B3D6.i5977, align 8
  %neg23.i6022 = xor i64 %2626, -1
  %and24.i6023 = and i64 %2625, %neg23.i6022
  store i64 %and24.i6023, i64* %x00.i5988, align 8
  %2627 = load i64, i64* %x00.i5988, align 8
  %2628 = load i64, i64* %x56E9861E.i5982, align 8
  %xor25.i6024 = xor i64 %2627, %2628
  store i64 %xor25.i6024, i64* %x01.i5989, align 8
  %2629 = load i64*, i64** %out1.addr.i5959, align 8
  %2630 = load i64, i64* %2629, align 8
  %2631 = load i64, i64* %x01.i5989, align 8
  %xor26.i6025 = xor i64 %2630, %2631
  %2632 = load i64*, i64** %out1.addr.i5959, align 8
  store i64 %xor26.i6025, i64* %2632, align 8
  %2633 = load i64, i64* %x56E9861E.i5982, align 8
  %neg27.i6026 = xor i64 %2633, -1
  store i64 %neg27.i6026, i64* %xA91679E1.i5983, align 8
  %2634 = load i64, i64* %x3C90B3D6.i5977, align 8
  %2635 = load i64, i64* %a6.addr.i5958, align 8
  %neg28.i6027 = xor i64 %2635, -1
  %and29.i6028 = and i64 %2634, %neg28.i6027
  store i64 %and29.i6028, i64* %x10.i5990, align 8
  %2636 = load i64, i64* %x10.i5990, align 8
  %2637 = load i64, i64* %xA91679E1.i5983, align 8
  %xor30.i6029 = xor i64 %2636, %2637
  store i64 %xor30.i6029, i64* %x11.i5991, align 8
  %2638 = load i64*, i64** %out2.addr.i5960, align 8
  %2639 = load i64, i64* %2638, align 8
  %2640 = load i64, i64* %x11.i5991, align 8
  %xor31.i6030 = xor i64 %2639, %2640
  %2641 = load i64*, i64** %out2.addr.i5960, align 8
  store i64 %xor31.i6030, i64* %2641, align 8
  %2642 = load i64, i64* %x3C90B3D6.i5977, align 8
  %2643 = load i64, i64* %xA91679E1.i5983, align 8
  %xor32.i6031 = xor i64 %2642, %2643
  store i64 %xor32.i6031, i64* %x9586CA37.i5984, align 8
  %2644 = load i64, i64* %x9586CA37.i5984, align 8
  %2645 = load i64, i64* %x33CC33CC.i5978, align 8
  %neg33.i6032 = xor i64 %2645, -1
  %and34.i6033 = and i64 %2644, %neg33.i6032
  store i64 %and34.i6033, i64* %x8402C833.i5985, align 8
  %2646 = load i64, i64* %x00C0C03C.i5973, align 8
  %2647 = load i64, i64* %x8402C833.i5985, align 8
  %or35.i6034 = or i64 %2646, %2647
  store i64 %or35.i6034, i64* %x84C2C83F.i5986, align 8
  %2648 = load i64, i64* %x379E5C99.i5980, align 8
  %2649 = load i64, i64* %x84C2C83F.i5986, align 8
  %xor36.i6035 = xor i64 %2648, %2649
  store i64 %xor36.i6035, i64* %xB35C94A6.i5987, align 8
  %2650 = load i64, i64* %x61C8F93C.i5972, align 8
  %2651 = load i64, i64* %a6.addr.i5958, align 8
  %or37.i6036 = or i64 %2650, %2651
  store i64 %or37.i6036, i64* %x20.i5992, align 8
  %2652 = load i64, i64* %x20.i5992, align 8
  %2653 = load i64, i64* %xB35C94A6.i5987, align 8
  %xor38.i6037 = xor i64 %2652, %2653
  store i64 %xor38.i6037, i64* %x21.i5993, align 8
  %2654 = load i64*, i64** %out3.addr.i5961, align 8
  %2655 = load i64, i64* %2654, align 8
  %2656 = load i64, i64* %x21.i5993, align 8
  %xor39.i6038 = xor i64 %2655, %2656
  %2657 = load i64*, i64** %out3.addr.i5961, align 8
  store i64 %xor39.i6038, i64* %2657, align 8
  %2658 = load i64, i64* %a6.addr.i5958, align 8
  %2659 = load i64, i64* %x61C8F93C.i5972, align 8
  %and40.i6039 = and i64 %2658, %2659
  store i64 %and40.i6039, i64* %x30.i5994, align 8
  %2660 = load i64, i64* %x30.i5994, align 8
  %2661 = load i64, i64* %xB35C94A6.i5987, align 8
  %xor41.i6040 = xor i64 %2660, %2661
  store i64 %xor41.i6040, i64* %x31.i5995, align 8
  %2662 = load i64*, i64** %out4.addr.i5962, align 8
  %2663 = load i64, i64* %2662, align 8
  %2664 = load i64, i64* %x31.i5995, align 8
  %xor42.i6041 = xor i64 %2663, %2664
  %2665 = load i64*, i64** %out4.addr.i5962, align 8
  store i64 %xor42.i6041, i64* %2665, align 8
  %2666 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 72), align 8
  %arrayidx423 = getelementptr inbounds i64, i64* %2666, i64 0
  %2667 = load i64, i64* %arrayidx423, align 8
  %2668 = load i64**, i64*** %k, align 8
  %arrayidx424 = getelementptr inbounds i64*, i64** %2668, i64 72
  %2669 = load i64*, i64** %arrayidx424, align 8
  %arrayidx425 = getelementptr inbounds i64, i64* %2669, i64 0
  %2670 = load i64, i64* %arrayidx425, align 8
  %xor426 = xor i64 %2667, %2670
  %2671 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 73), align 8
  %arrayidx427 = getelementptr inbounds i64, i64* %2671, i64 0
  %2672 = load i64, i64* %arrayidx427, align 8
  %2673 = load i64**, i64*** %k, align 8
  %arrayidx428 = getelementptr inbounds i64*, i64** %2673, i64 73
  %2674 = load i64*, i64** %arrayidx428, align 8
  %arrayidx429 = getelementptr inbounds i64, i64* %2674, i64 0
  %2675 = load i64, i64* %arrayidx429, align 8
  %xor430 = xor i64 %2672, %2675
  %2676 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 74), align 8
  %arrayidx431 = getelementptr inbounds i64, i64* %2676, i64 0
  %2677 = load i64, i64* %arrayidx431, align 8
  %2678 = load i64**, i64*** %k, align 8
  %arrayidx432 = getelementptr inbounds i64*, i64** %2678, i64 74
  %2679 = load i64*, i64** %arrayidx432, align 8
  %arrayidx433 = getelementptr inbounds i64, i64* %2679, i64 0
  %2680 = load i64, i64* %arrayidx433, align 8
  %xor434 = xor i64 %2677, %2680
  %2681 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 75), align 8
  %arrayidx435 = getelementptr inbounds i64, i64* %2681, i64 0
  %2682 = load i64, i64* %arrayidx435, align 8
  %2683 = load i64**, i64*** %k, align 8
  %arrayidx436 = getelementptr inbounds i64*, i64** %2683, i64 75
  %2684 = load i64*, i64** %arrayidx436, align 8
  %arrayidx437 = getelementptr inbounds i64, i64* %2684, i64 0
  %2685 = load i64, i64* %arrayidx437, align 8
  %xor438 = xor i64 %2682, %2685
  %2686 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 76), align 8
  %arrayidx439 = getelementptr inbounds i64, i64* %2686, i64 0
  %2687 = load i64, i64* %arrayidx439, align 8
  %2688 = load i64**, i64*** %k, align 8
  %arrayidx440 = getelementptr inbounds i64*, i64** %2688, i64 76
  %2689 = load i64*, i64** %arrayidx440, align 8
  %arrayidx441 = getelementptr inbounds i64, i64* %2689, i64 0
  %2690 = load i64, i64* %arrayidx441, align 8
  %xor442 = xor i64 %2687, %2690
  %2691 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 77), align 8
  %arrayidx443 = getelementptr inbounds i64, i64* %2691, i64 0
  %2692 = load i64, i64* %arrayidx443, align 8
  %2693 = load i64**, i64*** %k, align 8
  %arrayidx444 = getelementptr inbounds i64*, i64** %2693, i64 77
  %2694 = load i64*, i64** %arrayidx444, align 8
  %arrayidx445 = getelementptr inbounds i64, i64* %2694, i64 0
  %2695 = load i64, i64* %arrayidx445, align 8
  %xor446 = xor i64 %2692, %2695
  store i64 %xor426, i64* %a1.addr.i5834, align 8
  store i64 %xor430, i64* %a2.addr.i5835, align 8
  store i64 %xor434, i64* %a3.addr.i5836, align 8
  store i64 %xor438, i64* %a4.addr.i5837, align 8
  store i64 %xor442, i64* %a5.addr.i5838, align 8
  store i64 %xor446, i64* %a6.addr.i5839, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 7), i64** %out1.addr.i5840, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 13), i64** %out2.addr.i5841, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 24), i64** %out3.addr.i5842, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 2), i64** %out4.addr.i5843, align 8
  %2696 = load i64, i64* %a1.addr.i5834, align 8
  %2697 = load i64, i64* %a3.addr.i5836, align 8
  %or.i5892 = or i64 %2696, %2697
  store i64 %or.i5892, i64* %x77777777.i5844, align 8
  %2698 = load i64, i64* %x77777777.i5844, align 8
  %2699 = load i64, i64* %a6.addr.i5839, align 8
  %neg.i5893 = xor i64 %2699, -1
  %and.i5894 = and i64 %2698, %neg.i5893
  store i64 %and.i5894, i64* %x77770000.i5845, align 8
  %2700 = load i64, i64* %a1.addr.i5834, align 8
  %2701 = load i64, i64* %x77770000.i5845, align 8
  %xor.i5895 = xor i64 %2700, %2701
  store i64 %xor.i5895, i64* %x22225555.i5846, align 8
  %2702 = load i64, i64* %a3.addr.i5836, align 8
  %2703 = load i64, i64* %x22225555.i5846, align 8
  %xor1.i5896 = xor i64 %2702, %2703
  store i64 %xor1.i5896, i64* %x11116666.i5847, align 8
  %2704 = load i64, i64* %a4.addr.i5837, align 8
  %2705 = load i64, i64* %x11116666.i5847, align 8
  %or2.i5897 = or i64 %2704, %2705
  store i64 %or2.i5897, i64* %x1F1F6F6F.i5848, align 8
  %2706 = load i64, i64* %x77770000.i5845, align 8
  %2707 = load i64, i64* %a4.addr.i5837, align 8
  %neg3.i5898 = xor i64 %2707, -1
  %and4.i5899 = and i64 %2706, %neg3.i5898
  store i64 %and4.i5899, i64* %x70700000.i5849, align 8
  %2708 = load i64, i64* %a3.addr.i5836, align 8
  %2709 = load i64, i64* %x70700000.i5849, align 8
  %xor5.i5900 = xor i64 %2708, %2709
  store i64 %xor5.i5900, i64* %x43433333.i5850, align 8
  %2710 = load i64, i64* %a5.addr.i5838, align 8
  %2711 = load i64, i64* %x43433333.i5850, align 8
  %and6.i5901 = and i64 %2710, %2711
  store i64 %and6.i5901, i64* %x00430033.i5851, align 8
  %2712 = load i64, i64* %a1.addr.i5834, align 8
  %2713 = load i64, i64* %x11116666.i5847, align 8
  %or7.i5902 = or i64 %2712, %2713
  store i64 %or7.i5902, i64* %x55557777.i5852, align 8
  %2714 = load i64, i64* %x00430033.i5851, align 8
  %2715 = load i64, i64* %x55557777.i5852, align 8
  %xor8.i5903 = xor i64 %2714, %2715
  store i64 %xor8.i5903, i64* %x55167744.i5853, align 8
  %2716 = load i64, i64* %a4.addr.i5837, align 8
  %2717 = load i64, i64* %x55167744.i5853, align 8
  %xor9.i5904 = xor i64 %2716, %2717
  store i64 %xor9.i5904, i64* %x5A19784B.i5854, align 8
  %2718 = load i64, i64* %a6.addr.i5839, align 8
  %2719 = load i64, i64* %x5A19784B.i5854, align 8
  %xor10.i5905 = xor i64 %2718, %2719
  store i64 %xor10.i5905, i64* %x5A1987B4.i5855, align 8
  %2720 = load i64, i64* %x22225555.i5846, align 8
  %2721 = load i64, i64* %x5A1987B4.i5855, align 8
  %or11.i5906 = or i64 %2720, %2721
  store i64 %or11.i5906, i64* %x7A3BD7F5.i5856, align 8
  %2722 = load i64, i64* %a5.addr.i5838, align 8
  %2723 = load i64, i64* %x7A3BD7F5.i5856, align 8
  %and12.i5907 = and i64 %2722, %2723
  store i64 %and12.i5907, i64* %x003B00F5.i5857, align 8
  %2724 = load i64, i64* %x22225555.i5846, align 8
  %2725 = load i64, i64* %x003B00F5.i5857, align 8
  %xor13.i5908 = xor i64 %2724, %2725
  store i64 %xor13.i5908, i64* %x221955A0.i5858, align 8
  %2726 = load i64, i64* %a4.addr.i5837, align 8
  %2727 = load i64, i64* %x55557777.i5852, align 8
  %and14.i5909 = and i64 %2726, %2727
  store i64 %and14.i5909, i64* %x05050707.i5859, align 8
  %2728 = load i64, i64* %x221955A0.i5858, align 8
  %2729 = load i64, i64* %x05050707.i5859, align 8
  %xor15.i5910 = xor i64 %2728, %2729
  store i64 %xor15.i5910, i64* %x271C52A7.i5860, align 8
  %2730 = load i64, i64* %x7A3BD7F5.i5856, align 8
  %2731 = load i64, i64* %a1.addr.i5834, align 8
  %neg16.i5911 = xor i64 %2731, -1
  %and17.i5912 = and i64 %2730, %neg16.i5911
  store i64 %and17.i5912, i64* %x2A2A82A0.i5861, align 8
  %2732 = load i64, i64* %x43433333.i5850, align 8
  %2733 = load i64, i64* %x2A2A82A0.i5861, align 8
  %xor18.i5913 = xor i64 %2732, %2733
  store i64 %xor18.i5913, i64* %x6969B193.i5862, align 8
  %2734 = load i64, i64* %a5.addr.i5838, align 8
  %2735 = load i64, i64* %x1F1F6F6F.i5848, align 8
  %xor19.i5914 = xor i64 %2734, %2735
  store i64 %xor19.i5914, i64* %x1FE06F90.i5863, align 8
  %2736 = load i64, i64* %x1FE06F90.i5863, align 8
  %2737 = load i64, i64* %x6969B193.i5862, align 8
  %neg20.i5915 = xor i64 %2737, -1
  %and21.i5916 = and i64 %2736, %neg20.i5915
  store i64 %and21.i5916, i64* %x16804E00.i5864, align 8
  %2738 = load i64, i64* %x16804E00.i5864, align 8
  %neg22.i5917 = xor i64 %2738, -1
  store i64 %neg22.i5917, i64* %xE97FB1FF.i5865, align 8
  %2739 = load i64, i64* %xE97FB1FF.i5865, align 8
  %2740 = load i64, i64* %a2.addr.i5835, align 8
  %neg23.i5918 = xor i64 %2740, -1
  %and24.i5919 = and i64 %2739, %neg23.i5918
  store i64 %and24.i5919, i64* %x20.i5888, align 8
  %2741 = load i64, i64* %x20.i5888, align 8
  %2742 = load i64, i64* %x5A19784B.i5854, align 8
  %xor25.i5920 = xor i64 %2741, %2742
  store i64 %xor25.i5920, i64* %x21.i5889, align 8
  %2743 = load i64*, i64** %out3.addr.i5842, align 8
  %2744 = load i64, i64* %2743, align 8
  %2745 = load i64, i64* %x21.i5889, align 8
  %xor26.i5921 = xor i64 %2744, %2745
  %2746 = load i64*, i64** %out3.addr.i5842, align 8
  store i64 %xor26.i5921, i64* %2746, align 8
  %2747 = load i64, i64* %x43433333.i5850, align 8
  %2748 = load i64, i64* %x003B00F5.i5857, align 8
  %neg27.i5922 = xor i64 %2748, -1
  %and28.i5923 = and i64 %2747, %neg27.i5922
  store i64 %and28.i5923, i64* %x43403302.i5866, align 8
  %2749 = load i64, i64* %x2A2A82A0.i5861, align 8
  %2750 = load i64, i64* %x1FE06F90.i5863, align 8
  %xor29.i5924 = xor i64 %2749, %2750
  store i64 %xor29.i5924, i64* %x35CAED30.i5867, align 8
  %2751 = load i64, i64* %x271C52A7.i5860, align 8
  %2752 = load i64, i64* %x35CAED30.i5867, align 8
  %or30.i5925 = or i64 %2751, %2752
  store i64 %or30.i5925, i64* %x37DEFFB7.i5868, align 8
  %2753 = load i64, i64* %x37DEFFB7.i5868, align 8
  %2754 = load i64, i64* %x43403302.i5866, align 8
  %neg31.i5926 = xor i64 %2754, -1
  %and32.i5927 = and i64 %2753, %neg31.i5926
  store i64 %and32.i5927, i64* %x349ECCB5.i5869, align 8
  %2755 = load i64, i64* %x1F1F6F6F.i5848, align 8
  %2756 = load i64, i64* %x349ECCB5.i5869, align 8
  %neg33.i5928 = xor i64 %2756, -1
  %and34.i5929 = and i64 %2755, %neg33.i5928
  store i64 %and34.i5929, i64* %x0B01234A.i5870, align 8
  %2757 = load i64, i64* %x5A1987B4.i5855, align 8
  %2758 = load i64, i64* %x349ECCB5.i5869, align 8
  %and35.i5930 = and i64 %2757, %2758
  store i64 %and35.i5930, i64* %x101884B4.i5871, align 8
  %2759 = load i64, i64* %x1FE06F90.i5863, align 8
  %2760 = load i64, i64* %x101884B4.i5871, align 8
  %xor36.i5931 = xor i64 %2759, %2760
  store i64 %xor36.i5931, i64* %x0FF8EB24.i5872, align 8
  %2761 = load i64, i64* %x43433333.i5850, align 8
  %2762 = load i64, i64* %x55557777.i5852, align 8
  %and37.i5932 = and i64 %2761, %2762
  store i64 %and37.i5932, i64* %x41413333.i5873, align 8
  %2763 = load i64, i64* %x0FF8EB24.i5872, align 8
  %2764 = load i64, i64* %x41413333.i5873, align 8
  %or38.i5933 = or i64 %2763, %2764
  store i64 %or38.i5933, i64* %x4FF9FB37.i5874, align 8
  %2765 = load i64, i64* %x003B00F5.i5857, align 8
  %2766 = load i64, i64* %x4FF9FB37.i5874, align 8
  %xor39.i5934 = xor i64 %2765, %2766
  store i64 %xor39.i5934, i64* %x4FC2FBC2.i5875, align 8
  %2767 = load i64, i64* %x4FC2FBC2.i5875, align 8
  %2768 = load i64, i64* %a2.addr.i5835, align 8
  %and40.i5935 = and i64 %2767, %2768
  store i64 %and40.i5935, i64* %x30.i5890, align 8
  %2769 = load i64, i64* %x30.i5890, align 8
  %2770 = load i64, i64* %x271C52A7.i5860, align 8
  %xor41.i5936 = xor i64 %2769, %2770
  store i64 %xor41.i5936, i64* %x31.i5891, align 8
  %2771 = load i64*, i64** %out4.addr.i5843, align 8
  %2772 = load i64, i64* %2771, align 8
  %2773 = load i64, i64* %x31.i5891, align 8
  %xor42.i5937 = xor i64 %2772, %2773
  %2774 = load i64*, i64** %out4.addr.i5843, align 8
  store i64 %xor42.i5937, i64* %2774, align 8
  %2775 = load i64, i64* %a1.addr.i5834, align 8
  %2776 = load i64, i64* %x77777777.i5844, align 8
  %xor43.i5938 = xor i64 %2775, %2776
  store i64 %xor43.i5938, i64* %x22222222.i5876, align 8
  %2777 = load i64, i64* %x349ECCB5.i5869, align 8
  %2778 = load i64, i64* %x22222222.i5876, align 8
  %xor44.i5939 = xor i64 %2777, %2778
  store i64 %xor44.i5939, i64* %x16BCEE97.i5877, align 8
  %2779 = load i64, i64* %a4.addr.i5837, align 8
  %2780 = load i64, i64* %x0FF8EB24.i5872, align 8
  %and45.i5940 = and i64 %2779, %2780
  store i64 %and45.i5940, i64* %x0F080B04.i5878, align 8
  %2781 = load i64, i64* %x16BCEE97.i5877, align 8
  %2782 = load i64, i64* %x0F080B04.i5878, align 8
  %xor46.i5941 = xor i64 %2781, %2782
  store i64 %xor46.i5941, i64* %x19B4E593.i5879, align 8
  %2783 = load i64, i64* %x0B01234A.i5870, align 8
  %2784 = load i64, i64* %a2.addr.i5835, align 8
  %or47.i5942 = or i64 %2783, %2784
  store i64 %or47.i5942, i64* %x00.i5884, align 8
  %2785 = load i64, i64* %x00.i5884, align 8
  %2786 = load i64, i64* %x19B4E593.i5879, align 8
  %xor48.i5943 = xor i64 %2785, %2786
  store i64 %xor48.i5943, i64* %x01.i5885, align 8
  %2787 = load i64*, i64** %out1.addr.i5840, align 8
  %2788 = load i64, i64* %2787, align 8
  %2789 = load i64, i64* %x01.i5885, align 8
  %xor49.i5944 = xor i64 %2788, %2789
  %2790 = load i64*, i64** %out1.addr.i5840, align 8
  store i64 %xor49.i5944, i64* %2790, align 8
  %2791 = load i64, i64* %x1F1F6F6F.i5848, align 8
  %2792 = load i64, i64* %x43433333.i5850, align 8
  %xor50.i5945 = xor i64 %2791, %2792
  store i64 %xor50.i5945, i64* %x5C5C5C5C.i5880, align 8
  %2793 = load i64, i64* %x5C5C5C5C.i5880, align 8
  %2794 = load i64, i64* %x19B4E593.i5879, align 8
  %neg51.i5946 = xor i64 %2794, -1
  %and52.i5947 = and i64 %2793, %neg51.i5946
  store i64 %and52.i5947, i64* %x4448184C.i5881, align 8
  %2795 = load i64, i64* %x22225555.i5846, align 8
  %2796 = load i64, i64* %x0FF8EB24.i5872, align 8
  %xor53.i5948 = xor i64 %2795, %2796
  store i64 %xor53.i5948, i64* %x2DDABE71.i5882, align 8
  %2797 = load i64, i64* %x4448184C.i5881, align 8
  %2798 = load i64, i64* %x2DDABE71.i5882, align 8
  %xor54.i5949 = xor i64 %2797, %2798
  store i64 %xor54.i5949, i64* %x6992A63D.i5883, align 8
  %2799 = load i64, i64* %x1F1F6F6F.i5848, align 8
  %2800 = load i64, i64* %a2.addr.i5835, align 8
  %and55.i5950 = and i64 %2799, %2800
  store i64 %and55.i5950, i64* %x10.i5886, align 8
  %2801 = load i64, i64* %x10.i5886, align 8
  %2802 = load i64, i64* %x6992A63D.i5883, align 8
  %xor56.i5951 = xor i64 %2801, %2802
  store i64 %xor56.i5951, i64* %x11.i5887, align 8
  %2803 = load i64*, i64** %out2.addr.i5841, align 8
  %2804 = load i64, i64* %2803, align 8
  %2805 = load i64, i64* %x11.i5887, align 8
  %xor57.i5952 = xor i64 %2804, %2805
  %2806 = load i64*, i64** %out2.addr.i5841, align 8
  store i64 %xor57.i5952, i64* %2806, align 8
  %2807 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 78), align 8
  %arrayidx447 = getelementptr inbounds i64, i64* %2807, i64 0
  %2808 = load i64, i64* %arrayidx447, align 8
  %2809 = load i64**, i64*** %k, align 8
  %arrayidx448 = getelementptr inbounds i64*, i64** %2809, i64 78
  %2810 = load i64*, i64** %arrayidx448, align 8
  %arrayidx449 = getelementptr inbounds i64, i64* %2810, i64 0
  %2811 = load i64, i64* %arrayidx449, align 8
  %xor450 = xor i64 %2808, %2811
  %2812 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 79), align 8
  %arrayidx451 = getelementptr inbounds i64, i64* %2812, i64 0
  %2813 = load i64, i64* %arrayidx451, align 8
  %2814 = load i64**, i64*** %k, align 8
  %arrayidx452 = getelementptr inbounds i64*, i64** %2814, i64 79
  %2815 = load i64*, i64** %arrayidx452, align 8
  %arrayidx453 = getelementptr inbounds i64, i64* %2815, i64 0
  %2816 = load i64, i64* %arrayidx453, align 8
  %xor454 = xor i64 %2813, %2816
  %2817 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 80), align 8
  %arrayidx455 = getelementptr inbounds i64, i64* %2817, i64 0
  %2818 = load i64, i64* %arrayidx455, align 8
  %2819 = load i64**, i64*** %k, align 8
  %arrayidx456 = getelementptr inbounds i64*, i64** %2819, i64 80
  %2820 = load i64*, i64** %arrayidx456, align 8
  %arrayidx457 = getelementptr inbounds i64, i64* %2820, i64 0
  %2821 = load i64, i64* %arrayidx457, align 8
  %xor458 = xor i64 %2818, %2821
  %2822 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 81), align 8
  %arrayidx459 = getelementptr inbounds i64, i64* %2822, i64 0
  %2823 = load i64, i64* %arrayidx459, align 8
  %2824 = load i64**, i64*** %k, align 8
  %arrayidx460 = getelementptr inbounds i64*, i64** %2824, i64 81
  %2825 = load i64*, i64** %arrayidx460, align 8
  %arrayidx461 = getelementptr inbounds i64, i64* %2825, i64 0
  %2826 = load i64, i64* %arrayidx461, align 8
  %xor462 = xor i64 %2823, %2826
  %2827 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 82), align 8
  %arrayidx463 = getelementptr inbounds i64, i64* %2827, i64 0
  %2828 = load i64, i64* %arrayidx463, align 8
  %2829 = load i64**, i64*** %k, align 8
  %arrayidx464 = getelementptr inbounds i64*, i64** %2829, i64 82
  %2830 = load i64*, i64** %arrayidx464, align 8
  %arrayidx465 = getelementptr inbounds i64, i64* %2830, i64 0
  %2831 = load i64, i64* %arrayidx465, align 8
  %xor466 = xor i64 %2828, %2831
  %2832 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 83), align 8
  %arrayidx467 = getelementptr inbounds i64, i64* %2832, i64 0
  %2833 = load i64, i64* %arrayidx467, align 8
  %2834 = load i64**, i64*** %k, align 8
  %arrayidx468 = getelementptr inbounds i64*, i64** %2834, i64 83
  %2835 = load i64*, i64** %arrayidx468, align 8
  %arrayidx469 = getelementptr inbounds i64, i64* %2835, i64 0
  %2836 = load i64, i64* %arrayidx469, align 8
  %xor470 = xor i64 %2833, %2836
  store i64 %xor450, i64* %a1.addr.i5720, align 8
  store i64 %xor454, i64* %a2.addr.i5721, align 8
  store i64 %xor458, i64* %a3.addr.i5722, align 8
  store i64 %xor462, i64* %a4.addr.i5723, align 8
  store i64 %xor466, i64* %a5.addr.i5724, align 8
  store i64 %xor470, i64* %a6.addr.i5725, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 3), i64** %out1.addr.i5726, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 28), i64** %out2.addr.i5727, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 10), i64** %out3.addr.i5728, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 18), i64** %out4.addr.i5729, align 8
  %2837 = load i64, i64* %a2.addr.i5721, align 8
  %2838 = load i64, i64* %a5.addr.i5724, align 8
  %xor.i5776 = xor i64 %2837, %2838
  store i64 %xor.i5776, i64* %x33CC33CC.i5730, align 8
  %2839 = load i64, i64* %a2.addr.i5721, align 8
  %2840 = load i64, i64* %a6.addr.i5725, align 8
  %or.i5777 = or i64 %2839, %2840
  store i64 %or.i5777, i64* %x3333FFFF.i5731, align 8
  %2841 = load i64, i64* %a1.addr.i5720, align 8
  %2842 = load i64, i64* %x3333FFFF.i5731, align 8
  %and.i5778 = and i64 %2841, %2842
  store i64 %and.i5778, i64* %x11115555.i5732, align 8
  %2843 = load i64, i64* %x33CC33CC.i5730, align 8
  %2844 = load i64, i64* %x11115555.i5732, align 8
  %xor1.i5779 = xor i64 %2843, %2844
  store i64 %xor1.i5779, i64* %x22DD6699.i5733, align 8
  %2845 = load i64, i64* %a6.addr.i5725, align 8
  %2846 = load i64, i64* %x22DD6699.i5733, align 8
  %xor2.i5780 = xor i64 %2845, %2846
  store i64 %xor2.i5780, i64* %x22DD9966.i5734, align 8
  %2847 = load i64, i64* %a5.addr.i5724, align 8
  %2848 = load i64, i64* %x22DD9966.i5734, align 8
  %neg.i5781 = xor i64 %2848, -1
  %and3.i5782 = and i64 %2847, %neg.i5781
  store i64 %and3.i5782, i64* %x00220099.i5735, align 8
  %2849 = load i64, i64* %a1.addr.i5720, align 8
  %2850 = load i64, i64* %x22DD9966.i5734, align 8
  %and4.i5783 = and i64 %2849, %2850
  store i64 %and4.i5783, i64* %x00551144.i5736, align 8
  %2851 = load i64, i64* %a2.addr.i5721, align 8
  %2852 = load i64, i64* %x00551144.i5736, align 8
  %xor5.i5784 = xor i64 %2851, %2852
  store i64 %xor5.i5784, i64* %x33662277.i5737, align 8
  %2853 = load i64, i64* %a1.addr.i5720, align 8
  %2854 = load i64, i64* %a3.addr.i5722, align 8
  %xor6.i5785 = xor i64 %2853, %2854
  store i64 %xor6.i5785, i64* %x5A5A5A5A.i5738, align 8
  %2855 = load i64, i64* %x33662277.i5737, align 8
  %2856 = load i64, i64* %x5A5A5A5A.i5738, align 8
  %or7.i5786 = or i64 %2855, %2856
  store i64 %or7.i5786, i64* %x7B7E7A7F.i5739, align 8
  %2857 = load i64, i64* %x22DD6699.i5733, align 8
  %2858 = load i64, i64* %x7B7E7A7F.i5739, align 8
  %xor8.i5787 = xor i64 %2857, %2858
  store i64 %xor8.i5787, i64* %x59A31CE6.i5740, align 8
  %2859 = load i64, i64* %a3.addr.i5722, align 8
  %2860 = load i64, i64* %x59A31CE6.i5740, align 8
  %and9.i5788 = and i64 %2859, %2860
  store i64 %and9.i5788, i64* %x09030C06.i5741, align 8
  %2861 = load i64, i64* %x09030C06.i5741, align 8
  %2862 = load i64, i64* %a6.addr.i5725, align 8
  %neg10.i5789 = xor i64 %2862, -1
  %and11.i5790 = and i64 %2861, %neg10.i5789
  store i64 %and11.i5790, i64* %x09030000.i5742, align 8
  %2863 = load i64, i64* %x00220099.i5735, align 8
  %2864 = load i64, i64* %x33662277.i5737, align 8
  %or12.i5791 = or i64 %2863, %2864
  store i64 %or12.i5791, i64* %x336622FF.i5743, align 8
  %2865 = load i64, i64* %x09030000.i5742, align 8
  %2866 = load i64, i64* %x336622FF.i5743, align 8
  %xor13.i5792 = xor i64 %2865, %2866
  store i64 %xor13.i5792, i64* %x3A6522FF.i5744, align 8
  %2867 = load i64, i64* %x3A6522FF.i5744, align 8
  %2868 = load i64, i64* %a4.addr.i5723, align 8
  %and14.i5793 = and i64 %2867, %2868
  store i64 %and14.i5793, i64* %x30.i5774, align 8
  %2869 = load i64, i64* %x30.i5774, align 8
  %2870 = load i64, i64* %x59A31CE6.i5740, align 8
  %xor15.i5794 = xor i64 %2869, %2870
  store i64 %xor15.i5794, i64* %x31.i5775, align 8
  %2871 = load i64*, i64** %out4.addr.i5729, align 8
  %2872 = load i64, i64* %2871, align 8
  %2873 = load i64, i64* %x31.i5775, align 8
  %xor16.i5795 = xor i64 %2872, %2873
  %2874 = load i64*, i64** %out4.addr.i5729, align 8
  store i64 %xor16.i5795, i64* %2874, align 8
  %2875 = load i64, i64* %a2.addr.i5721, align 8
  %2876 = load i64, i64* %x7B7E7A7F.i5739, align 8
  %xor17.i5796 = xor i64 %2875, %2876
  store i64 %xor17.i5796, i64* %x484D494C.i5745, align 8
  %2877 = load i64, i64* %a6.addr.i5725, align 8
  %2878 = load i64, i64* %x484D494C.i5745, align 8
  %neg18.i5797 = xor i64 %2878, -1
  %and19.i5798 = and i64 %2877, %neg18.i5797
  store i64 %and19.i5798, i64* %x0000B6B3.i5746, align 8
  %2879 = load i64, i64* %a3.addr.i5722, align 8
  %2880 = load i64, i64* %x0000B6B3.i5746, align 8
  %xor20.i5799 = xor i64 %2879, %2880
  store i64 %xor20.i5799, i64* %x0F0FB9BC.i5747, align 8
  %2881 = load i64, i64* %a5.addr.i5724, align 8
  %2882 = load i64, i64* %x09030C06.i5741, align 8
  %neg21.i5800 = xor i64 %2882, -1
  %and22.i5801 = and i64 %2881, %neg21.i5800
  store i64 %and22.i5801, i64* %x00FC00F9.i5748, align 8
  %2883 = load i64, i64* %x0F0FB9BC.i5747, align 8
  %2884 = load i64, i64* %x00FC00F9.i5748, align 8
  %or23.i5802 = or i64 %2883, %2884
  store i64 %or23.i5802, i64* %x0FFFB9FD.i5749, align 8
  %2885 = load i64, i64* %a1.addr.i5720, align 8
  %2886 = load i64, i64* %x59A31CE6.i5740, align 8
  %or24.i5803 = or i64 %2885, %2886
  store i64 %or24.i5803, i64* %x5DF75DF7.i5750, align 8
  %2887 = load i64, i64* %x336622FF.i5743, align 8
  %2888 = load i64, i64* %x5DF75DF7.i5750, align 8
  %and25.i5804 = and i64 %2887, %2888
  store i64 %and25.i5804, i64* %x116600F7.i5751, align 8
  %2889 = load i64, i64* %x0F0FB9BC.i5747, align 8
  %2890 = load i64, i64* %x116600F7.i5751, align 8
  %xor26.i5805 = xor i64 %2889, %2890
  store i64 %xor26.i5805, i64* %x1E69B94B.i5752, align 8
  %2891 = load i64, i64* %x1E69B94B.i5752, align 8
  %2892 = load i64, i64* %x09030000.i5742, align 8
  %neg27.i5806 = xor i64 %2892, -1
  %and28.i5807 = and i64 %2891, %neg27.i5806
  store i64 %and28.i5807, i64* %x1668B94B.i5753, align 8
  %2893 = load i64, i64* %x00220099.i5735, align 8
  %2894 = load i64, i64* %a4.addr.i5723, align 8
  %or29.i5808 = or i64 %2893, %2894
  store i64 %or29.i5808, i64* %x20.i5772, align 8
  %2895 = load i64, i64* %x20.i5772, align 8
  %2896 = load i64, i64* %x1668B94B.i5753, align 8
  %xor30.i5809 = xor i64 %2895, %2896
  store i64 %xor30.i5809, i64* %x21.i5773, align 8
  %2897 = load i64*, i64** %out3.addr.i5728, align 8
  %2898 = load i64, i64* %2897, align 8
  %2899 = load i64, i64* %x21.i5773, align 8
  %xor31.i5810 = xor i64 %2898, %2899
  %2900 = load i64*, i64** %out3.addr.i5728, align 8
  store i64 %xor31.i5810, i64* %2900, align 8
  %2901 = load i64, i64* %a2.addr.i5721, align 8
  %2902 = load i64, i64* %x5A5A5A5A.i5738, align 8
  %or32.i5811 = or i64 %2901, %2902
  store i64 %or32.i5811, i64* %x7B7B7B7B.i5754, align 8
  %2903 = load i64, i64* %x3A6522FF.i5744, align 8
  %2904 = load i64, i64* %x7B7B7B7B.i5754, align 8
  %xor33.i5812 = xor i64 %2903, %2904
  store i64 %xor33.i5812, i64* %x411E5984.i5755, align 8
  %2905 = load i64, i64* %x11115555.i5732, align 8
  %2906 = load i64, i64* %x0FFFB9FD.i5749, align 8
  %or34.i5813 = or i64 %2905, %2906
  store i64 %or34.i5813, i64* %x1FFFFDFD.i5756, align 8
  %2907 = load i64, i64* %x411E5984.i5755, align 8
  %2908 = load i64, i64* %x1FFFFDFD.i5756, align 8
  %xor35.i5814 = xor i64 %2907, %2908
  store i64 %xor35.i5814, i64* %x5EE1A479.i5757, align 8
  %2909 = load i64, i64* %x22DD6699.i5733, align 8
  %2910 = load i64, i64* %x1E69B94B.i5752, align 8
  %xor36.i5815 = xor i64 %2909, %2910
  store i64 %xor36.i5815, i64* %x3CB4DFD2.i5758, align 8
  %2911 = load i64, i64* %a5.addr.i5724, align 8
  %2912 = load i64, i64* %x3CB4DFD2.i5758, align 8
  %neg37.i5816 = xor i64 %2912, -1
  %and38.i5817 = and i64 %2911, %neg37.i5816
  store i64 %and38.i5817, i64* %x004B002D.i5759, align 8
  %2913 = load i64, i64* %x484D494C.i5745, align 8
  %neg39.i5818 = xor i64 %2913, -1
  store i64 %neg39.i5818, i64* %xB7B2B6B3.i5760, align 8
  %2914 = load i64, i64* %x7B7B7B7B.i5754, align 8
  %2915 = load i64, i64* %xB7B2B6B3.i5760, align 8
  %xor40.i5819 = xor i64 %2914, %2915
  store i64 %xor40.i5819, i64* %xCCC9CDC8.i5761, align 8
  %2916 = load i64, i64* %x004B002D.i5759, align 8
  %2917 = load i64, i64* %xCCC9CDC8.i5761, align 8
  %xor41.i5820 = xor i64 %2916, %2917
  store i64 %xor41.i5820, i64* %xCC82CDE5.i5762, align 8
  %2918 = load i64, i64* %xCC82CDE5.i5762, align 8
  %2919 = load i64, i64* %a4.addr.i5723, align 8
  %neg42.i5821 = xor i64 %2919, -1
  %and43.i5822 = and i64 %2918, %neg42.i5821
  store i64 %and43.i5822, i64* %x10.i5770, align 8
  %2920 = load i64, i64* %x10.i5770, align 8
  %2921 = load i64, i64* %x5EE1A479.i5757, align 8
  %xor44.i5823 = xor i64 %2920, %2921
  store i64 %xor44.i5823, i64* %x11.i5771, align 8
  %2922 = load i64*, i64** %out2.addr.i5727, align 8
  %2923 = load i64, i64* %2922, align 8
  %2924 = load i64, i64* %x11.i5771, align 8
  %xor45.i5824 = xor i64 %2923, %2924
  %2925 = load i64*, i64** %out2.addr.i5727, align 8
  store i64 %xor45.i5824, i64* %2925, align 8
  %2926 = load i64, i64* %a6.addr.i5725, align 8
  %2927 = load i64, i64* %x00551144.i5736, align 8
  %xor46.i5825 = xor i64 %2926, %2927
  store i64 %xor46.i5825, i64* %x0055EEBB.i5763, align 8
  %2928 = load i64, i64* %a1.addr.i5720, align 8
  %2929 = load i64, i64* %x0F0FB9BC.i5747, align 8
  %xor47.i5826 = xor i64 %2928, %2929
  store i64 %xor47.i5826, i64* %x5A5AECE9.i5764, align 8
  %2930 = load i64, i64* %x0055EEBB.i5763, align 8
  %2931 = load i64, i64* %x5A5AECE9.i5764, align 8
  %and48.i5827 = and i64 %2930, %2931
  store i64 %and48.i5827, i64* %x0050ECA9.i5765, align 8
  %2932 = load i64, i64* %x09030C06.i5741, align 8
  %2933 = load i64, i64* %xCCC9CDC8.i5761, align 8
  %xor49.i5828 = xor i64 %2932, %2933
  store i64 %xor49.i5828, i64* %xC5CAC1CE.i5766, align 8
  %2934 = load i64, i64* %x0050ECA9.i5765, align 8
  %2935 = load i64, i64* %xC5CAC1CE.i5766, align 8
  %xor50.i5829 = xor i64 %2934, %2935
  store i64 %xor50.i5829, i64* %xC59A2D67.i5767, align 8
  %2936 = load i64, i64* %x0FFFB9FD.i5749, align 8
  %2937 = load i64, i64* %a4.addr.i5723, align 8
  %neg51.i5830 = xor i64 %2937, -1
  %and52.i5831 = and i64 %2936, %neg51.i5830
  store i64 %and52.i5831, i64* %x00.i5768, align 8
  %2938 = load i64, i64* %x00.i5768, align 8
  %2939 = load i64, i64* %xC59A2D67.i5767, align 8
  %xor53.i5832 = xor i64 %2938, %2939
  store i64 %xor53.i5832, i64* %x01.i5769, align 8
  %2940 = load i64*, i64** %out1.addr.i5726, align 8
  %2941 = load i64, i64* %2940, align 8
  %2942 = load i64, i64* %x01.i5769, align 8
  %xor54.i5833 = xor i64 %2941, %2942
  %2943 = load i64*, i64** %out1.addr.i5726, align 8
  store i64 %xor54.i5833, i64* %2943, align 8
  %2944 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 55), align 8
  %2945 = load i64**, i64*** %k, align 8
  %arrayidx471 = getelementptr inbounds i64*, i64** %2945, i64 84
  %2946 = load i64*, i64** %arrayidx471, align 8
  %arrayidx472 = getelementptr inbounds i64, i64* %2946, i64 0
  %2947 = load i64, i64* %arrayidx472, align 8
  %xor473 = xor i64 %2944, %2947
  %2948 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 56), align 8
  %2949 = load i64**, i64*** %k, align 8
  %arrayidx474 = getelementptr inbounds i64*, i64** %2949, i64 85
  %2950 = load i64*, i64** %arrayidx474, align 8
  %arrayidx475 = getelementptr inbounds i64, i64* %2950, i64 0
  %2951 = load i64, i64* %arrayidx475, align 8
  %xor476 = xor i64 %2948, %2951
  %2952 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 57), align 8
  %2953 = load i64**, i64*** %k, align 8
  %arrayidx477 = getelementptr inbounds i64*, i64** %2953, i64 86
  %2954 = load i64*, i64** %arrayidx477, align 8
  %arrayidx478 = getelementptr inbounds i64, i64* %2954, i64 0
  %2955 = load i64, i64* %arrayidx478, align 8
  %xor479 = xor i64 %2952, %2955
  %2956 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 58), align 8
  %2957 = load i64**, i64*** %k, align 8
  %arrayidx480 = getelementptr inbounds i64*, i64** %2957, i64 87
  %2958 = load i64*, i64** %arrayidx480, align 8
  %arrayidx481 = getelementptr inbounds i64, i64* %2958, i64 0
  %2959 = load i64, i64* %arrayidx481, align 8
  %xor482 = xor i64 %2956, %2959
  %2960 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 59), align 8
  %2961 = load i64**, i64*** %k, align 8
  %arrayidx483 = getelementptr inbounds i64*, i64** %2961, i64 88
  %2962 = load i64*, i64** %arrayidx483, align 8
  %arrayidx484 = getelementptr inbounds i64, i64* %2962, i64 0
  %2963 = load i64, i64* %arrayidx484, align 8
  %xor485 = xor i64 %2960, %2963
  %2964 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 60), align 8
  %2965 = load i64**, i64*** %k, align 8
  %arrayidx486 = getelementptr inbounds i64*, i64** %2965, i64 89
  %2966 = load i64*, i64** %arrayidx486, align 8
  %arrayidx487 = getelementptr inbounds i64, i64* %2966, i64 0
  %2967 = load i64, i64* %arrayidx487, align 8
  %xor488 = xor i64 %2964, %2967
  store i64 %xor473, i64* %a1.addr.i5607, align 8
  store i64 %xor476, i64* %a2.addr.i5608, align 8
  store i64 %xor479, i64* %a3.addr.i5609, align 8
  store i64 %xor482, i64* %a4.addr.i5610, align 8
  store i64 %xor485, i64* %a5.addr.i5611, align 8
  store i64 %xor488, i64* %a6.addr.i5612, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 31), i64** %out1.addr.i5613, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 11), i64** %out2.addr.i5614, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 21), i64** %out3.addr.i5615, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 6), i64** %out4.addr.i5616, align 8
  %2968 = load i64, i64* %a4.addr.i5610, align 8
  %2969 = load i64, i64* %a5.addr.i5611, align 8
  %xor.i5663 = xor i64 %2968, %2969
  store i64 %xor.i5663, i64* %x0FF00FF0.i5617, align 8
  %2970 = load i64, i64* %a3.addr.i5609, align 8
  %2971 = load i64, i64* %x0FF00FF0.i5617, align 8
  %xor1.i5664 = xor i64 %2970, %2971
  store i64 %xor1.i5664, i64* %x3CC33CC3.i5618, align 8
  %2972 = load i64, i64* %a6.addr.i5612, align 8
  %2973 = load i64, i64* %x3CC33CC3.i5618, align 8
  %and.i5665 = and i64 %2972, %2973
  store i64 %and.i5665, i64* %x00003CC3.i5619, align 8
  %2974 = load i64, i64* %a4.addr.i5610, align 8
  %2975 = load i64, i64* %x0FF00FF0.i5617, align 8
  %and2.i5666 = and i64 %2974, %2975
  store i64 %and2.i5666, i64* %x0F000F00.i5620, align 8
  %2976 = load i64, i64* %a2.addr.i5608, align 8
  %2977 = load i64, i64* %x0F000F00.i5620, align 8
  %xor3.i5667 = xor i64 %2976, %2977
  store i64 %xor3.i5667, i64* %x5A555A55.i5621, align 8
  %2978 = load i64, i64* %x00003CC3.i5619, align 8
  %2979 = load i64, i64* %x5A555A55.i5621, align 8
  %and4.i5668 = and i64 %2978, %2979
  store i64 %and4.i5668, i64* %x00001841.i5622, align 8
  %2980 = load i64, i64* %a6.addr.i5612, align 8
  %2981 = load i64, i64* %x0F000F00.i5620, align 8
  %and5.i5669 = and i64 %2980, %2981
  store i64 %and5.i5669, i64* %x00000F00.i5623, align 8
  %2982 = load i64, i64* %a3.addr.i5609, align 8
  %2983 = load i64, i64* %x00000F00.i5623, align 8
  %xor6.i5670 = xor i64 %2982, %2983
  store i64 %xor6.i5670, i64* %x33333C33.i5624, align 8
  %2984 = load i64, i64* %x5A555A55.i5621, align 8
  %2985 = load i64, i64* %x33333C33.i5624, align 8
  %or.i5671 = or i64 %2984, %2985
  store i64 %or.i5671, i64* %x7B777E77.i5625, align 8
  %2986 = load i64, i64* %a6.addr.i5612, align 8
  %2987 = load i64, i64* %x0FF00FF0.i5617, align 8
  %xor7.i5672 = xor i64 %2986, %2987
  store i64 %xor7.i5672, i64* %x0FF0F00F.i5626, align 8
  %2988 = load i64, i64* %x7B777E77.i5625, align 8
  %2989 = load i64, i64* %x0FF0F00F.i5626, align 8
  %xor8.i5673 = xor i64 %2988, %2989
  store i64 %xor8.i5673, i64* %x74878E78.i5627, align 8
  %2990 = load i64, i64* %a1.addr.i5607, align 8
  %2991 = load i64, i64* %x00001841.i5622, align 8
  %neg.i5674 = xor i64 %2991, -1
  %and9.i5675 = and i64 %2990, %neg.i5674
  store i64 %and9.i5675, i64* %x30.i5661, align 8
  %2992 = load i64, i64* %x30.i5661, align 8
  %2993 = load i64, i64* %x74878E78.i5627, align 8
  %xor10.i5676 = xor i64 %2992, %2993
  store i64 %xor10.i5676, i64* %x31.i5662, align 8
  %2994 = load i64*, i64** %out4.addr.i5616, align 8
  %2995 = load i64, i64* %2994, align 8
  %2996 = load i64, i64* %x31.i5662, align 8
  %xor11.i5677 = xor i64 %2995, %2996
  %2997 = load i64*, i64** %out4.addr.i5616, align 8
  store i64 %xor11.i5677, i64* %2997, align 8
  %2998 = load i64, i64* %a5.addr.i5611, align 8
  %2999 = load i64, i64* %x3CC33CC3.i5618, align 8
  %neg12.i5678 = xor i64 %2999, -1
  %and13.i5679 = and i64 %2998, %neg12.i5678
  store i64 %and13.i5679, i64* %x003C003C.i5628, align 8
  %3000 = load i64, i64* %x5A555A55.i5621, align 8
  %3001 = load i64, i64* %x003C003C.i5628, align 8
  %or14.i5680 = or i64 %3000, %3001
  store i64 %or14.i5680, i64* %x5A7D5A7D.i5629, align 8
  %3002 = load i64, i64* %x00003CC3.i5619, align 8
  %3003 = load i64, i64* %x33333C33.i5624, align 8
  %xor15.i5681 = xor i64 %3002, %3003
  store i64 %xor15.i5681, i64* %x333300F0.i5630, align 8
  %3004 = load i64, i64* %x5A7D5A7D.i5629, align 8
  %3005 = load i64, i64* %x333300F0.i5630, align 8
  %xor16.i5682 = xor i64 %3004, %3005
  store i64 %xor16.i5682, i64* %x694E5A8D.i5631, align 8
  %3006 = load i64, i64* %x00003CC3.i5619, align 8
  %3007 = load i64, i64* %x0FF0F00F.i5626, align 8
  %xor17.i5683 = xor i64 %3006, %3007
  store i64 %xor17.i5683, i64* %x0FF0CCCC.i5632, align 8
  %3008 = load i64, i64* %a4.addr.i5610, align 8
  %3009 = load i64, i64* %x0FF0CCCC.i5632, align 8
  %neg18.i5684 = xor i64 %3009, -1
  %and19.i5685 = and i64 %3008, %neg18.i5684
  store i64 %and19.i5685, i64* %x000F0303.i5633, align 8
  %3010 = load i64, i64* %x5A555A55.i5621, align 8
  %3011 = load i64, i64* %x000F0303.i5633, align 8
  %neg20.i5686 = xor i64 %3011, -1
  %and21.i5687 = and i64 %3010, %neg20.i5686
  store i64 %and21.i5687, i64* %x5A505854.i5634, align 8
  %3012 = load i64, i64* %a5.addr.i5611, align 8
  %3013 = load i64, i64* %x333300F0.i5630, align 8
  %xor22.i5688 = xor i64 %3012, %3013
  store i64 %xor22.i5688, i64* %x33CC000F.i5635, align 8
  %3014 = load i64, i64* %x5A505854.i5634, align 8
  %3015 = load i64, i64* %x33CC000F.i5635, align 8
  %xor23.i5689 = xor i64 %3014, %3015
  store i64 %xor23.i5689, i64* %x699C585B.i5636, align 8
  %3016 = load i64, i64* %x0F000F00.i5620, align 8
  %3017 = load i64, i64* %x74878E78.i5627, align 8
  %or24.i5690 = or i64 %3016, %3017
  store i64 %or24.i5690, i64* %x7F878F78.i5637, align 8
  %3018 = load i64, i64* %a3.addr.i5609, align 8
  %3019 = load i64, i64* %x699C585B.i5636, align 8
  %and25.i5691 = and i64 %3018, %3019
  store i64 %and25.i5691, i64* %x21101013.i5638, align 8
  %3020 = load i64, i64* %x7F878F78.i5637, align 8
  %3021 = load i64, i64* %x21101013.i5638, align 8
  %or26.i5692 = or i64 %3020, %3021
  store i64 %or26.i5692, i64* %x7F979F7B.i5639, align 8
  %3022 = load i64, i64* %x3CC33CC3.i5618, align 8
  %3023 = load i64, i64* %x0FF0F00F.i5626, align 8
  %neg27.i5693 = xor i64 %3023, -1
  %and28.i5694 = and i64 %3022, %neg27.i5693
  store i64 %and28.i5694, i64* %x30030CC0.i5640, align 8
  %3024 = load i64, i64* %x7F979F7B.i5639, align 8
  %3025 = load i64, i64* %x30030CC0.i5640, align 8
  %xor29.i5695 = xor i64 %3024, %3025
  store i64 %xor29.i5695, i64* %x4F9493BB.i5641, align 8
  %3026 = load i64, i64* %x4F9493BB.i5641, align 8
  %3027 = load i64, i64* %a1.addr.i5607, align 8
  %neg30.i5696 = xor i64 %3027, -1
  %and31.i5697 = and i64 %3026, %neg30.i5696
  store i64 %and31.i5697, i64* %x00.i5655, align 8
  %3028 = load i64, i64* %x00.i5655, align 8
  %3029 = load i64, i64* %x694E5A8D.i5631, align 8
  %xor32.i5698 = xor i64 %3028, %3029
  store i64 %xor32.i5698, i64* %x01.i5656, align 8
  %3030 = load i64*, i64** %out1.addr.i5613, align 8
  %3031 = load i64, i64* %3030, align 8
  %3032 = load i64, i64* %x01.i5656, align 8
  %xor33.i5699 = xor i64 %3031, %3032
  %3033 = load i64*, i64** %out1.addr.i5613, align 8
  store i64 %xor33.i5699, i64* %3033, align 8
  %3034 = load i64, i64* %x699C585B.i5636, align 8
  %3035 = load i64, i64* %x4F9493BB.i5641, align 8
  %or34.i5700 = or i64 %3034, %3035
  store i64 %or34.i5700, i64* %x6F9CDBFB.i5642, align 8
  %3036 = load i64, i64* %a6.addr.i5612, align 8
  %3037 = load i64, i64* %x6F9CDBFB.i5642, align 8
  %and35.i5701 = and i64 %3036, %3037
  store i64 %and35.i5701, i64* %x0000DBFB.i5643, align 8
  %3038 = load i64, i64* %a2.addr.i5608, align 8
  %3039 = load i64, i64* %x0000DBFB.i5643, align 8
  %and36.i5702 = and i64 %3038, %3039
  store i64 %and36.i5702, i64* %x00005151.i5644, align 8
  %3040 = load i64, i64* %x694E5A8D.i5631, align 8
  %3041 = load i64, i64* %x4F9493BB.i5641, align 8
  %xor37.i5703 = xor i64 %3040, %3041
  store i64 %xor37.i5703, i64* %x26DAC936.i5645, align 8
  %3042 = load i64, i64* %x00005151.i5644, align 8
  %3043 = load i64, i64* %x26DAC936.i5645, align 8
  %xor38.i5704 = xor i64 %3042, %3043
  store i64 %xor38.i5704, i64* %x26DA9867.i5646, align 8
  %3044 = load i64, i64* %a5.addr.i5611, align 8
  %3045 = load i64, i64* %x21101013.i5638, align 8
  %or39.i5705 = or i64 %3044, %3045
  store i64 %or39.i5705, i64* %x21FF10FF.i5647, align 8
  %3046 = load i64, i64* %x0000DBFB.i5643, align 8
  %3047 = load i64, i64* %x21FF10FF.i5647, align 8
  %xor40.i5706 = xor i64 %3046, %3047
  store i64 %xor40.i5706, i64* %x21FFCB04.i5648, align 8
  %3048 = load i64, i64* %a5.addr.i5611, align 8
  %3049 = load i64, i64* %x26DAC936.i5645, align 8
  %xor41.i5707 = xor i64 %3048, %3049
  store i64 %xor41.i5707, i64* %x2625C9C9.i5649, align 8
  %3050 = load i64, i64* %x21FFCB04.i5648, align 8
  %3051 = load i64, i64* %x2625C9C9.i5649, align 8
  %or42.i5708 = or i64 %3050, %3051
  store i64 %or42.i5708, i64* %x27FFCBCD.i5650, align 8
  %3052 = load i64, i64* %x27FFCBCD.i5650, align 8
  %3053 = load i64, i64* %a1.addr.i5607, align 8
  %and43.i5709 = and i64 %3052, %3053
  store i64 %and43.i5709, i64* %x20.i5659, align 8
  %3054 = load i64, i64* %x20.i5659, align 8
  %3055 = load i64, i64* %x699C585B.i5636, align 8
  %xor44.i5710 = xor i64 %3054, %3055
  store i64 %xor44.i5710, i64* %x21.i5660, align 8
  %3056 = load i64*, i64** %out3.addr.i5615, align 8
  %3057 = load i64, i64* %3056, align 8
  %3058 = load i64, i64* %x21.i5660, align 8
  %xor45.i5711 = xor i64 %3057, %3058
  %3059 = load i64*, i64** %out3.addr.i5615, align 8
  store i64 %xor45.i5711, i64* %3059, align 8
  %3060 = load i64, i64* %x0000DBFB.i5643, align 8
  %3061 = load i64, i64* %x27FFCBCD.i5650, align 8
  %xor46.i5712 = xor i64 %3060, %3061
  store i64 %xor46.i5712, i64* %x27FF1036.i5651, align 8
  %3062 = load i64, i64* %x003C003C.i5628, align 8
  %3063 = load i64, i64* %x27FF1036.i5651, align 8
  %or47.i5713 = or i64 %3062, %3063
  store i64 %or47.i5713, i64* %x27FF103E.i5652, align 8
  %3064 = load i64, i64* %x4F9493BB.i5641, align 8
  %neg48.i5714 = xor i64 %3064, -1
  store i64 %neg48.i5714, i64* %xB06B6C44.i5653, align 8
  %3065 = load i64, i64* %x27FF103E.i5652, align 8
  %3066 = load i64, i64* %xB06B6C44.i5653, align 8
  %xor49.i5715 = xor i64 %3065, %3066
  store i64 %xor49.i5715, i64* %x97947C7A.i5654, align 8
  %3067 = load i64, i64* %x97947C7A.i5654, align 8
  %3068 = load i64, i64* %a1.addr.i5607, align 8
  %neg50.i5716 = xor i64 %3068, -1
  %and51.i5717 = and i64 %3067, %neg50.i5716
  store i64 %and51.i5717, i64* %x10.i5657, align 8
  %3069 = load i64, i64* %x10.i5657, align 8
  %3070 = load i64, i64* %x26DA9867.i5646, align 8
  %xor52.i5718 = xor i64 %3069, %3070
  store i64 %xor52.i5718, i64* %x11.i5658, align 8
  %3071 = load i64*, i64** %out2.addr.i5614, align 8
  %3072 = load i64, i64* %3071, align 8
  %3073 = load i64, i64* %x11.i5658, align 8
  %xor53.i5719 = xor i64 %3072, %3073
  %3074 = load i64*, i64** %out2.addr.i5614, align 8
  store i64 %xor53.i5719, i64* %3074, align 8
  %3075 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 59), align 8
  %3076 = load i64**, i64*** %k, align 8
  %arrayidx489 = getelementptr inbounds i64*, i64** %3076, i64 90
  %3077 = load i64*, i64** %arrayidx489, align 8
  %arrayidx490 = getelementptr inbounds i64, i64* %3077, i64 0
  %3078 = load i64, i64* %arrayidx490, align 8
  %xor491 = xor i64 %3075, %3078
  %3079 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 60), align 8
  %3080 = load i64**, i64*** %k, align 8
  %arrayidx492 = getelementptr inbounds i64*, i64** %3080, i64 91
  %3081 = load i64*, i64** %arrayidx492, align 8
  %arrayidx493 = getelementptr inbounds i64, i64* %3081, i64 0
  %3082 = load i64, i64* %arrayidx493, align 8
  %xor494 = xor i64 %3079, %3082
  %3083 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 61), align 8
  %3084 = load i64**, i64*** %k, align 8
  %arrayidx495 = getelementptr inbounds i64*, i64** %3084, i64 92
  %3085 = load i64*, i64** %arrayidx495, align 8
  %arrayidx496 = getelementptr inbounds i64, i64* %3085, i64 0
  %3086 = load i64, i64* %arrayidx496, align 8
  %xor497 = xor i64 %3083, %3086
  %3087 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 62), align 8
  %3088 = load i64**, i64*** %k, align 8
  %arrayidx498 = getelementptr inbounds i64*, i64** %3088, i64 93
  %3089 = load i64*, i64** %arrayidx498, align 8
  %arrayidx499 = getelementptr inbounds i64, i64* %3089, i64 0
  %3090 = load i64, i64* %arrayidx499, align 8
  %xor500 = xor i64 %3087, %3090
  %3091 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 63), align 8
  %3092 = load i64**, i64*** %k, align 8
  %arrayidx501 = getelementptr inbounds i64*, i64** %3092, i64 94
  %3093 = load i64*, i64** %arrayidx501, align 8
  %arrayidx502 = getelementptr inbounds i64, i64* %3093, i64 0
  %3094 = load i64, i64* %arrayidx502, align 8
  %xor503 = xor i64 %3091, %3094
  %3095 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 32), align 8
  %3096 = load i64**, i64*** %k, align 8
  %arrayidx504 = getelementptr inbounds i64*, i64** %3096, i64 95
  %3097 = load i64*, i64** %arrayidx504, align 8
  %arrayidx505 = getelementptr inbounds i64, i64* %3097, i64 0
  %3098 = load i64, i64* %arrayidx505, align 8
  %xor506 = xor i64 %3095, %3098
  store i64 %xor491, i64* %a1.addr.i5504, align 8
  store i64 %xor494, i64* %a2.addr.i5505, align 8
  store i64 %xor497, i64* %a3.addr.i5506, align 8
  store i64 %xor500, i64* %a4.addr.i5507, align 8
  store i64 %xor503, i64* %a5.addr.i5508, align 8
  store i64 %xor506, i64* %a6.addr.i5509, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 4), i64** %out1.addr.i5510, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 26), i64** %out2.addr.i5511, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 14), i64** %out3.addr.i5512, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 20), i64** %out4.addr.i5513, align 8
  %3099 = load i64, i64* %a3.addr.i5506, align 8
  %3100 = load i64, i64* %a2.addr.i5505, align 8
  %neg.i5555 = xor i64 %3100, -1
  %and.i5556 = and i64 %3099, %neg.i5555
  store i64 %and.i5556, i64* %x0C0C0C0C.i5514, align 8
  %3101 = load i64, i64* %a5.addr.i5508, align 8
  %3102 = load i64, i64* %a3.addr.i5506, align 8
  %neg1.i5557 = xor i64 %3102, -1
  %and2.i5558 = and i64 %3101, %neg1.i5557
  store i64 %and2.i5558, i64* %x0000F0F0.i5515, align 8
  %3103 = load i64, i64* %a4.addr.i5507, align 8
  %3104 = load i64, i64* %x0000F0F0.i5515, align 8
  %xor.i5559 = xor i64 %3103, %3104
  store i64 %xor.i5559, i64* %x00FFF00F.i5516, align 8
  %3105 = load i64, i64* %a1.addr.i5504, align 8
  %3106 = load i64, i64* %x00FFF00F.i5516, align 8
  %and3.i5560 = and i64 %3105, %3106
  store i64 %and3.i5560, i64* %x00555005.i5517, align 8
  %3107 = load i64, i64* %x00555005.i5517, align 8
  %3108 = load i64, i64* %x0C0C0C0C.i5514, align 8
  %neg4.i5561 = xor i64 %3108, -1
  %and5.i5562 = and i64 %3107, %neg4.i5561
  store i64 %and5.i5562, i64* %x00515001.i5518, align 8
  %3109 = load i64, i64* %a2.addr.i5505, align 8
  %3110 = load i64, i64* %x00FFF00F.i5516, align 8
  %neg6.i5563 = xor i64 %3110, -1
  %and7.i5564 = and i64 %3109, %neg6.i5563
  store i64 %and7.i5564, i64* %x33000330.i5519, align 8
  %3111 = load i64, i64* %a1.addr.i5504, align 8
  %3112 = load i64, i64* %x33000330.i5519, align 8
  %or.i5565 = or i64 %3111, %3112
  store i64 %or.i5565, i64* %x77555775.i5520, align 8
  %3113 = load i64, i64* %a2.addr.i5505, align 8
  %3114 = load i64, i64* %a3.addr.i5506, align 8
  %neg8.i5566 = xor i64 %3114, -1
  %and9.i5567 = and i64 %3113, %neg8.i5566
  store i64 %and9.i5567, i64* %x30303030.i5521, align 8
  %3115 = load i64, i64* %a5.addr.i5508, align 8
  %3116 = load i64, i64* %x30303030.i5521, align 8
  %xor10.i5568 = xor i64 %3115, %3116
  store i64 %xor10.i5568, i64* %x3030CFCF.i5522, align 8
  %3117 = load i64, i64* %x77555775.i5520, align 8
  %3118 = load i64, i64* %x3030CFCF.i5522, align 8
  %and11.i5569 = and i64 %3117, %3118
  store i64 %and11.i5569, i64* %x30104745.i5523, align 8
  %3119 = load i64, i64* %x00555005.i5517, align 8
  %3120 = load i64, i64* %x30104745.i5523, align 8
  %or12.i5570 = or i64 %3119, %3120
  store i64 %or12.i5570, i64* %x30555745.i5524, align 8
  %3121 = load i64, i64* %x00FFF00F.i5516, align 8
  %neg13.i5571 = xor i64 %3121, -1
  store i64 %neg13.i5571, i64* %xFF000FF0.i5525, align 8
  %3122 = load i64, i64* %x30104745.i5523, align 8
  %3123 = load i64, i64* %xFF000FF0.i5525, align 8
  %xor14.i5572 = xor i64 %3122, %3123
  store i64 %xor14.i5572, i64* %xCF1048B5.i5526, align 8
  %3124 = load i64, i64* %a3.addr.i5506, align 8
  %3125 = load i64, i64* %x77555775.i5520, align 8
  %neg15.i5573 = xor i64 %3125, -1
  %and16.i5574 = and i64 %3124, %neg15.i5573
  store i64 %and16.i5574, i64* %x080A080A.i5527, align 8
  %3126 = load i64, i64* %xCF1048B5.i5526, align 8
  %3127 = load i64, i64* %x080A080A.i5527, align 8
  %xor17.i5575 = xor i64 %3126, %3127
  store i64 %xor17.i5575, i64* %xC71A40BF.i5528, align 8
  %3128 = load i64, i64* %x0C0C0C0C.i5514, align 8
  %3129 = load i64, i64* %xC71A40BF.i5528, align 8
  %xor18.i5576 = xor i64 %3128, %3129
  store i64 %xor18.i5576, i64* %xCB164CB3.i5529, align 8
  %3130 = load i64, i64* %x00515001.i5518, align 8
  %3131 = load i64, i64* %a6.addr.i5509, align 8
  %or19.i5577 = or i64 %3130, %3131
  store i64 %or19.i5577, i64* %x10.i5549, align 8
  %3132 = load i64, i64* %x10.i5549, align 8
  %3133 = load i64, i64* %xCB164CB3.i5529, align 8
  %xor20.i5578 = xor i64 %3132, %3133
  store i64 %xor20.i5578, i64* %x11.i5550, align 8
  %3134 = load i64*, i64** %out2.addr.i5511, align 8
  %3135 = load i64, i64* %3134, align 8
  %3136 = load i64, i64* %x11.i5550, align 8
  %xor21.i5579 = xor i64 %3135, %3136
  %3137 = load i64*, i64** %out2.addr.i5511, align 8
  store i64 %xor21.i5579, i64* %3137, align 8
  %3138 = load i64, i64* %a1.addr.i5504, align 8
  %3139 = load i64, i64* %xCB164CB3.i5529, align 8
  %xor22.i5580 = xor i64 %3138, %3139
  store i64 %xor22.i5580, i64* %x9E4319E6.i5530, align 8
  %3140 = load i64, i64* %a5.addr.i5508, align 8
  %3141 = load i64, i64* %x9E4319E6.i5530, align 8
  %and23.i5581 = and i64 %3140, %3141
  store i64 %and23.i5581, i64* %x000019E6.i5531, align 8
  %3142 = load i64, i64* %a2.addr.i5505, align 8
  %3143 = load i64, i64* %xC71A40BF.i5528, align 8
  %xor24.i5582 = xor i64 %3142, %3143
  store i64 %xor24.i5582, i64* %xF429738C.i5532, align 8
  %3144 = load i64, i64* %x000019E6.i5531, align 8
  %3145 = load i64, i64* %xF429738C.i5532, align 8
  %xor25.i5583 = xor i64 %3144, %3145
  store i64 %xor25.i5583, i64* %xF4296A6A.i5533, align 8
  %3146 = load i64, i64* %x33000330.i5519, align 8
  %3147 = load i64, i64* %xF4296A6A.i5533, align 8
  %xor26.i5584 = xor i64 %3146, %3147
  store i64 %xor26.i5584, i64* %xC729695A.i5534, align 8
  %3148 = load i64, i64* %x30555745.i5524, align 8
  %3149 = load i64, i64* %xF4296A6A.i5533, align 8
  %xor27.i5585 = xor i64 %3148, %3149
  store i64 %xor27.i5585, i64* %xC47C3D2F.i5535, align 8
  %3150 = load i64, i64* %a2.addr.i5505, align 8
  %3151 = load i64, i64* %xC47C3D2F.i5535, align 8
  %or28.i5586 = or i64 %3150, %3151
  store i64 %or28.i5586, i64* %xF77F3F3F.i5536, align 8
  %3152 = load i64, i64* %a5.addr.i5508, align 8
  %3153 = load i64, i64* %x9E4319E6.i5530, align 8
  %xor29.i5587 = xor i64 %3152, %3153
  store i64 %xor29.i5587, i64* %x9E43E619.i5537, align 8
  %3154 = load i64, i64* %xF77F3F3F.i5536, align 8
  %3155 = load i64, i64* %x9E43E619.i5537, align 8
  %xor30.i5588 = xor i64 %3154, %3155
  store i64 %xor30.i5588, i64* %x693CD926.i5538, align 8
  %3156 = load i64, i64* %x30555745.i5524, align 8
  %3157 = load i64, i64* %a6.addr.i5509, align 8
  %and31.i5589 = and i64 %3156, %3157
  store i64 %and31.i5589, i64* %x20.i5551, align 8
  %3158 = load i64, i64* %x20.i5551, align 8
  %3159 = load i64, i64* %x693CD926.i5538, align 8
  %xor32.i5590 = xor i64 %3158, %3159
  store i64 %xor32.i5590, i64* %x21.i5552, align 8
  %3160 = load i64*, i64** %out3.addr.i5512, align 8
  %3161 = load i64, i64* %3160, align 8
  %3162 = load i64, i64* %x21.i5552, align 8
  %xor33.i5591 = xor i64 %3161, %3162
  %3163 = load i64*, i64** %out3.addr.i5512, align 8
  store i64 %xor33.i5591, i64* %3163, align 8
  %3164 = load i64, i64* %x3030CFCF.i5522, align 8
  %3165 = load i64, i64* %xC729695A.i5534, align 8
  %xor34.i5592 = xor i64 %3164, %3165
  store i64 %xor34.i5592, i64* %xF719A695.i5539, align 8
  %3166 = load i64, i64* %a4.addr.i5507, align 8
  %3167 = load i64, i64* %xF429738C.i5532, align 8
  %or35.i5593 = or i64 %3166, %3167
  store i64 %or35.i5593, i64* %xF4FF73FF.i5540, align 8
  %3168 = load i64, i64* %xF719A695.i5539, align 8
  %3169 = load i64, i64* %xF4FF73FF.i5540, align 8
  %xor36.i5594 = xor i64 %3168, %3169
  store i64 %xor36.i5594, i64* %x03E6D56A.i5541, align 8
  %3170 = load i64, i64* %a1.addr.i5504, align 8
  %3171 = load i64, i64* %x03E6D56A.i5541, align 8
  %xor37.i5595 = xor i64 %3170, %3171
  store i64 %xor37.i5595, i64* %x56B3803F.i5542, align 8
  %3172 = load i64, i64* %x56B3803F.i5542, align 8
  %3173 = load i64, i64* %a6.addr.i5509, align 8
  %and38.i5596 = and i64 %3172, %3173
  store i64 %and38.i5596, i64* %x30.i5553, align 8
  %3174 = load i64, i64* %x30.i5553, align 8
  %3175 = load i64, i64* %xC729695A.i5534, align 8
  %xor39.i5597 = xor i64 %3174, %3175
  store i64 %xor39.i5597, i64* %x31.i5554, align 8
  %3176 = load i64*, i64** %out4.addr.i5513, align 8
  %3177 = load i64, i64* %3176, align 8
  %3178 = load i64, i64* %x31.i5554, align 8
  %xor40.i5598 = xor i64 %3177, %3178
  %3179 = load i64*, i64** %out4.addr.i5513, align 8
  store i64 %xor40.i5598, i64* %3179, align 8
  %3180 = load i64, i64* %xF719A695.i5539, align 8
  %3181 = load i64, i64* %a4.addr.i5507, align 8
  %neg41.i5599 = xor i64 %3181, -1
  %and42.i5600 = and i64 %3180, %neg41.i5599
  store i64 %and42.i5600, i64* %xF700A600.i5543, align 8
  %3182 = load i64, i64* %x693CD926.i5538, align 8
  %3183 = load i64, i64* %xF700A600.i5543, align 8
  %and43.i5601 = and i64 %3182, %3183
  store i64 %and43.i5601, i64* %x61008000.i5544, align 8
  %3184 = load i64, i64* %x00515001.i5518, align 8
  %3185 = load i64, i64* %x03E6D56A.i5541, align 8
  %xor44.i5602 = xor i64 %3184, %3185
  store i64 %xor44.i5602, i64* %x03B7856B.i5545, align 8
  %3186 = load i64, i64* %x61008000.i5544, align 8
  %3187 = load i64, i64* %x03B7856B.i5545, align 8
  %xor45.i5603 = xor i64 %3186, %3187
  store i64 %xor45.i5603, i64* %x62B7056B.i5546, align 8
  %3188 = load i64, i64* %x62B7056B.i5546, align 8
  %3189 = load i64, i64* %a6.addr.i5509, align 8
  %or46.i5604 = or i64 %3188, %3189
  store i64 %or46.i5604, i64* %x00.i5547, align 8
  %3190 = load i64, i64* %x00.i5547, align 8
  %3191 = load i64, i64* %xC729695A.i5534, align 8
  %xor47.i5605 = xor i64 %3190, %3191
  store i64 %xor47.i5605, i64* %x01.i5548, align 8
  %3192 = load i64*, i64** %out1.addr.i5510, align 8
  %3193 = load i64, i64* %3192, align 8
  %3194 = load i64, i64* %x01.i5548, align 8
  %xor48.i5606 = xor i64 %3193, %3194
  %3195 = load i64*, i64** %out1.addr.i5510, align 8
  store i64 %xor48.i5606, i64* %3195, align 8
  %3196 = load i64**, i64*** %k, align 8
  %add.ptr507 = getelementptr inbounds i64*, i64** %3196, i64 96
  store i64** %add.ptr507, i64*** %k, align 8
  store i32 0, i32* %jj, align 4
  br label %for.cond508

for.cond508:                                      ; preds = %for.inc848, %for.end
  %3197 = load i32, i32* %jj, align 4
  %cmp509 = icmp slt i32 %3197, 7
  br i1 %cmp509, label %for.body510, label %for.end850

for.body510:                                      ; preds = %for.cond508
  %3198 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 0), align 8
  %arrayidx511 = getelementptr inbounds i64, i64* %3198, i64 0
  %3199 = load i64, i64* %arrayidx511, align 8
  %3200 = load i64**, i64*** %k, align 8
  %arrayidx512 = getelementptr inbounds i64*, i64** %3200, i64 0
  %3201 = load i64*, i64** %arrayidx512, align 8
  %arrayidx513 = getelementptr inbounds i64, i64* %3201, i64 0
  %3202 = load i64, i64* %arrayidx513, align 8
  %xor514 = xor i64 %3199, %3202
  %3203 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 1), align 8
  %arrayidx515 = getelementptr inbounds i64, i64* %3203, i64 0
  %3204 = load i64, i64* %arrayidx515, align 8
  %3205 = load i64**, i64*** %k, align 8
  %arrayidx516 = getelementptr inbounds i64*, i64** %3205, i64 1
  %3206 = load i64*, i64** %arrayidx516, align 8
  %arrayidx517 = getelementptr inbounds i64, i64* %3206, i64 0
  %3207 = load i64, i64* %arrayidx517, align 8
  %xor518 = xor i64 %3204, %3207
  %3208 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 2), align 8
  %arrayidx519 = getelementptr inbounds i64, i64* %3208, i64 0
  %3209 = load i64, i64* %arrayidx519, align 8
  %3210 = load i64**, i64*** %k, align 8
  %arrayidx520 = getelementptr inbounds i64*, i64** %3210, i64 2
  %3211 = load i64*, i64** %arrayidx520, align 8
  %arrayidx521 = getelementptr inbounds i64, i64* %3211, i64 0
  %3212 = load i64, i64* %arrayidx521, align 8
  %xor522 = xor i64 %3209, %3212
  %3213 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 3), align 8
  %arrayidx523 = getelementptr inbounds i64, i64* %3213, i64 0
  %3214 = load i64, i64* %arrayidx523, align 8
  %3215 = load i64**, i64*** %k, align 8
  %arrayidx524 = getelementptr inbounds i64*, i64** %3215, i64 3
  %3216 = load i64*, i64** %arrayidx524, align 8
  %arrayidx525 = getelementptr inbounds i64, i64* %3216, i64 0
  %3217 = load i64, i64* %arrayidx525, align 8
  %xor526 = xor i64 %3214, %3217
  %3218 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 4), align 8
  %arrayidx527 = getelementptr inbounds i64, i64* %3218, i64 0
  %3219 = load i64, i64* %arrayidx527, align 8
  %3220 = load i64**, i64*** %k, align 8
  %arrayidx528 = getelementptr inbounds i64*, i64** %3220, i64 4
  %3221 = load i64*, i64** %arrayidx528, align 8
  %arrayidx529 = getelementptr inbounds i64, i64* %3221, i64 0
  %3222 = load i64, i64* %arrayidx529, align 8
  %xor530 = xor i64 %3219, %3222
  %3223 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 5), align 8
  %arrayidx531 = getelementptr inbounds i64, i64* %3223, i64 0
  %3224 = load i64, i64* %arrayidx531, align 8
  %3225 = load i64**, i64*** %k, align 8
  %arrayidx532 = getelementptr inbounds i64*, i64** %3225, i64 5
  %3226 = load i64*, i64** %arrayidx532, align 8
  %arrayidx533 = getelementptr inbounds i64, i64* %3226, i64 0
  %3227 = load i64, i64* %arrayidx533, align 8
  %xor534 = xor i64 %3224, %3227
  store i64 %xor514, i64* %a1.addr.i5381, align 8
  store i64 %xor518, i64* %a2.addr.i5382, align 8
  store i64 %xor522, i64* %a3.addr.i5383, align 8
  store i64 %xor526, i64* %a4.addr.i5384, align 8
  store i64 %xor530, i64* %a5.addr.i5385, align 8
  store i64 %xor534, i64* %a6.addr.i5386, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 40), i64** %out1.addr.i5387, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 48), i64** %out2.addr.i5388, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 54), i64** %out3.addr.i5389, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 62), i64** %out4.addr.i5390, align 8
  %3228 = load i64, i64* %a1.addr.i5381, align 8
  %3229 = load i64, i64* %a5.addr.i5385, align 8
  %neg.i5440 = xor i64 %3229, -1
  %and.i5441 = and i64 %3228, %neg.i5440
  store i64 %and.i5441, i64* %x55005500.i5391, align 8
  %3230 = load i64, i64* %a4.addr.i5384, align 8
  %3231 = load i64, i64* %x55005500.i5391, align 8
  %xor.i5442 = xor i64 %3230, %3231
  store i64 %xor.i5442, i64* %x5A0F5A0F.i5392, align 8
  %3232 = load i64, i64* %a3.addr.i5383, align 8
  %3233 = load i64, i64* %a6.addr.i5386, align 8
  %or.i5443 = or i64 %3232, %3233
  store i64 %or.i5443, i64* %x3333FFFF.i5393, align 8
  %3234 = load i64, i64* %a1.addr.i5381, align 8
  %3235 = load i64, i64* %a3.addr.i5383, align 8
  %xor1.i5444 = xor i64 %3234, %3235
  store i64 %xor1.i5444, i64* %x66666666.i5394, align 8
  %3236 = load i64, i64* %x3333FFFF.i5393, align 8
  %3237 = load i64, i64* %x66666666.i5394, align 8
  %and2.i5445 = and i64 %3236, %3237
  store i64 %and2.i5445, i64* %x22226666.i5395, align 8
  %3238 = load i64, i64* %a4.addr.i5384, align 8
  %3239 = load i64, i64* %x22226666.i5395, align 8
  %xor3.i5446 = xor i64 %3238, %3239
  store i64 %xor3.i5446, i64* %x2D2D6969.i5396, align 8
  %3240 = load i64, i64* %x2D2D6969.i5396, align 8
  %3241 = load i64, i64* %x5A0F5A0F.i5392, align 8
  %neg4.i5447 = xor i64 %3241, -1
  %and5.i5448 = and i64 %3240, %neg4.i5447
  store i64 %and5.i5448, i64* %x25202160.i5397, align 8
  %3242 = load i64, i64* %a5.addr.i5385, align 8
  %3243 = load i64, i64* %a6.addr.i5386, align 8
  %xor6.i5449 = xor i64 %3242, %3243
  store i64 %xor6.i5449, i64* %x00FFFF00.i5398, align 8
  %3244 = load i64, i64* %a3.addr.i5383, align 8
  %3245 = load i64, i64* %x00FFFF00.i5398, align 8
  %xor7.i5450 = xor i64 %3244, %3245
  store i64 %xor7.i5450, i64* %x33CCCC33.i5399, align 8
  %3246 = load i64, i64* %x5A0F5A0F.i5392, align 8
  %3247 = load i64, i64* %x33CCCC33.i5399, align 8
  %neg8.i5451 = xor i64 %3247, -1
  %and9.i5452 = and i64 %3246, %neg8.i5451
  store i64 %and9.i5452, i64* %x4803120C.i5400, align 8
  %3248 = load i64, i64* %a6.addr.i5386, align 8
  %3249 = load i64, i64* %x22226666.i5395, align 8
  %or10.i5453 = or i64 %3248, %3249
  store i64 %or10.i5453, i64* %x2222FFFF.i5401, align 8
  %3250 = load i64, i64* %x4803120C.i5400, align 8
  %3251 = load i64, i64* %x2222FFFF.i5401, align 8
  %xor11.i5454 = xor i64 %3250, %3251
  store i64 %xor11.i5454, i64* %x6A21EDF3.i5402, align 8
  %3252 = load i64, i64* %x6A21EDF3.i5402, align 8
  %3253 = load i64, i64* %x25202160.i5397, align 8
  %neg12.i5455 = xor i64 %3253, -1
  %and13.i5456 = and i64 %3252, %neg12.i5455
  store i64 %and13.i5456, i64* %x4A01CC93.i5403, align 8
  %3254 = load i64, i64* %a1.addr.i5381, align 8
  %3255 = load i64, i64* %a6.addr.i5386, align 8
  %or14.i5457 = or i64 %3254, %3255
  store i64 %or14.i5457, i64* %x5555FFFF.i5404, align 8
  %3256 = load i64, i64* %x6A21EDF3.i5402, align 8
  %3257 = load i64, i64* %x5555FFFF.i5404, align 8
  %or15.i5458 = or i64 %3256, %3257
  store i64 %or15.i5458, i64* %x7F75FFFF.i5405, align 8
  %3258 = load i64, i64* %a5.addr.i5385, align 8
  %3259 = load i64, i64* %x2D2D6969.i5396, align 8
  %neg16.i5459 = xor i64 %3259, -1
  %and17.i5460 = and i64 %3258, %neg16.i5459
  store i64 %and17.i5460, i64* %x00D20096.i5406, align 8
  %3260 = load i64, i64* %x7F75FFFF.i5405, align 8
  %3261 = load i64, i64* %x00D20096.i5406, align 8
  %xor18.i5461 = xor i64 %3260, %3261
  store i64 %xor18.i5461, i64* %x7FA7FF69.i5407, align 8
  %3262 = load i64, i64* %a4.addr.i5384, align 8
  %3263 = load i64, i64* %x5555FFFF.i5404, align 8
  %neg19.i5462 = xor i64 %3263, -1
  %and20.i5463 = and i64 %3262, %neg19.i5462
  store i64 %and20.i5463, i64* %x0A0A0000.i5408, align 8
  %3264 = load i64, i64* %x00D20096.i5406, align 8
  %3265 = load i64, i64* %x0A0A0000.i5408, align 8
  %xor21.i5464 = xor i64 %3264, %3265
  store i64 %xor21.i5464, i64* %x0AD80096.i5409, align 8
  %3266 = load i64, i64* %x00FFFF00.i5398, align 8
  %3267 = load i64, i64* %x66666666.i5394, align 8
  %neg22.i5465 = xor i64 %3267, -1
  %and23.i5466 = and i64 %3266, %neg22.i5465
  store i64 %and23.i5466, i64* %x00999900.i5410, align 8
  %3268 = load i64, i64* %x0AD80096.i5409, align 8
  %3269 = load i64, i64* %x00999900.i5410, align 8
  %or24.i5467 = or i64 %3268, %3269
  store i64 %or24.i5467, i64* %x0AD99996.i5411, align 8
  %3270 = load i64, i64* %a3.addr.i5383, align 8
  %3271 = load i64, i64* %x55005500.i5391, align 8
  %neg25.i5468 = xor i64 %3271, -1
  %and26.i5469 = and i64 %3270, %neg25.i5468
  store i64 %and26.i5469, i64* %x22332233.i5412, align 8
  %3272 = load i64, i64* %x5A0F5A0F.i5392, align 8
  %3273 = load i64, i64* %x7F75FFFF.i5405, align 8
  %xor27.i5470 = xor i64 %3272, %3273
  store i64 %xor27.i5470, i64* %x257AA5F0.i5413, align 8
  %3274 = load i64, i64* %x257AA5F0.i5413, align 8
  %3275 = load i64, i64* %x22332233.i5412, align 8
  %neg28.i5471 = xor i64 %3275, -1
  %and29.i5472 = and i64 %3274, %neg28.i5471
  store i64 %and29.i5472, i64* %x054885C0.i5414, align 8
  %3276 = load i64, i64* %x054885C0.i5414, align 8
  %neg30.i5473 = xor i64 %3276, -1
  store i64 %neg30.i5473, i64* %xFAB77A3F.i5415, align 8
  %3277 = load i64, i64* %x3333FFFF.i5393, align 8
  %3278 = load i64, i64* %x6A21EDF3.i5402, align 8
  %and31.i5474 = and i64 %3277, %3278
  store i64 %and31.i5474, i64* %x2221EDF3.i5416, align 8
  %3279 = load i64, i64* %xFAB77A3F.i5415, align 8
  %3280 = load i64, i64* %x2221EDF3.i5416, align 8
  %xor32.i5475 = xor i64 %3279, %3280
  store i64 %xor32.i5475, i64* %xD89697CC.i5417, align 8
  %3281 = load i64, i64* %x7FA7FF69.i5407, align 8
  %3282 = load i64, i64* %a2.addr.i5382, align 8
  %neg33.i5476 = xor i64 %3282, -1
  %and34.i5477 = and i64 %3281, %neg33.i5476
  store i64 %and34.i5477, i64* %x20.i5436, align 8
  %3283 = load i64, i64* %x20.i5436, align 8
  %3284 = load i64, i64* %xD89697CC.i5417, align 8
  %xor35.i5478 = xor i64 %3283, %3284
  store i64 %xor35.i5478, i64* %x21.i5437, align 8
  %3285 = load i64*, i64** %out3.addr.i5389, align 8
  %3286 = load i64, i64* %3285, align 8
  %3287 = load i64, i64* %x21.i5437, align 8
  %xor36.i5479 = xor i64 %3286, %3287
  %3288 = load i64*, i64** %out3.addr.i5389, align 8
  store i64 %xor36.i5479, i64* %3288, align 8
  %3289 = load i64, i64* %x00FFFF00.i5398, align 8
  %3290 = load i64, i64* %x054885C0.i5414, align 8
  %xor37.i5480 = xor i64 %3289, %3290
  store i64 %xor37.i5480, i64* %x05B77AC0.i5418, align 8
  %3291 = load i64, i64* %x00D20096.i5406, align 8
  %3292 = load i64, i64* %x05B77AC0.i5418, align 8
  %or38.i5481 = or i64 %3291, %3292
  store i64 %or38.i5481, i64* %x05F77AD6.i5419, align 8
  %3293 = load i64, i64* %x3333FFFF.i5393, align 8
  %3294 = load i64, i64* %x05F77AD6.i5419, align 8
  %xor39.i5482 = xor i64 %3293, %3294
  store i64 %xor39.i5482, i64* %x36C48529.i5420, align 8
  %3295 = load i64, i64* %a1.addr.i5381, align 8
  %3296 = load i64, i64* %x36C48529.i5420, align 8
  %xor40.i5483 = xor i64 %3295, %3296
  store i64 %xor40.i5483, i64* %x6391D07C.i5421, align 8
  %3297 = load i64, i64* %xD89697CC.i5417, align 8
  %3298 = load i64, i64* %x6391D07C.i5421, align 8
  %xor41.i5484 = xor i64 %3297, %3298
  store i64 %xor41.i5484, i64* %xBB0747B0.i5422, align 8
  %3299 = load i64, i64* %x25202160.i5397, align 8
  %3300 = load i64, i64* %a2.addr.i5382, align 8
  %or42.i5485 = or i64 %3299, %3300
  store i64 %or42.i5485, i64* %x00.i5432, align 8
  %3301 = load i64, i64* %x00.i5432, align 8
  %3302 = load i64, i64* %xBB0747B0.i5422, align 8
  %xor43.i5486 = xor i64 %3301, %3302
  store i64 %xor43.i5486, i64* %x01.i5433, align 8
  %3303 = load i64*, i64** %out1.addr.i5387, align 8
  %3304 = load i64, i64* %3303, align 8
  %3305 = load i64, i64* %x01.i5433, align 8
  %xor44.i5487 = xor i64 %3304, %3305
  %3306 = load i64*, i64** %out1.addr.i5387, align 8
  store i64 %xor44.i5487, i64* %3306, align 8
  %3307 = load i64, i64* %x3333FFFF.i5393, align 8
  %3308 = load i64, i64* %x7F75FFFF.i5405, align 8
  %xor45.i5488 = xor i64 %3307, %3308
  store i64 %xor45.i5488, i64* %x4C460000.i5423, align 8
  %3309 = load i64, i64* %x0AD99996.i5411, align 8
  %3310 = load i64, i64* %x4C460000.i5423, align 8
  %or46.i5489 = or i64 %3309, %3310
  store i64 %or46.i5489, i64* %x4EDF9996.i5424, align 8
  %3311 = load i64, i64* %x6391D07C.i5421, align 8
  %3312 = load i64, i64* %x4EDF9996.i5424, align 8
  %xor47.i5490 = xor i64 %3311, %3312
  store i64 %xor47.i5490, i64* %x2D4E49EA.i5425, align 8
  %3313 = load i64, i64* %x00FFFF00.i5398, align 8
  %3314 = load i64, i64* %xBB0747B0.i5422, align 8
  %or48.i5491 = or i64 %3313, %3314
  store i64 %or48.i5491, i64* %xBBFFFFB0.i5426, align 8
  %3315 = load i64, i64* %x2D4E49EA.i5425, align 8
  %3316 = load i64, i64* %xBBFFFFB0.i5426, align 8
  %xor49.i5492 = xor i64 %3315, %3316
  store i64 %xor49.i5492, i64* %x96B1B65A.i5427, align 8
  %3317 = load i64, i64* %x4A01CC93.i5403, align 8
  %3318 = load i64, i64* %a2.addr.i5382, align 8
  %or50.i5493 = or i64 %3317, %3318
  store i64 %or50.i5493, i64* %x10.i5434, align 8
  %3319 = load i64, i64* %x10.i5434, align 8
  %3320 = load i64, i64* %x96B1B65A.i5427, align 8
  %xor51.i5494 = xor i64 %3319, %3320
  store i64 %xor51.i5494, i64* %x11.i5435, align 8
  %3321 = load i64*, i64** %out2.addr.i5388, align 8
  %3322 = load i64, i64* %3321, align 8
  %3323 = load i64, i64* %x11.i5435, align 8
  %xor52.i5495 = xor i64 %3322, %3323
  %3324 = load i64*, i64** %out2.addr.i5388, align 8
  store i64 %xor52.i5495, i64* %3324, align 8
  %3325 = load i64, i64* %a5.addr.i5385, align 8
  %3326 = load i64, i64* %x5A0F5A0F.i5392, align 8
  %or53.i5496 = or i64 %3325, %3326
  store i64 %or53.i5496, i64* %x5AFF5AFF.i5428, align 8
  %3327 = load i64, i64* %x5AFF5AFF.i5428, align 8
  %3328 = load i64, i64* %x2D4E49EA.i5425, align 8
  %neg54.i5497 = xor i64 %3328, -1
  %and55.i5498 = and i64 %3327, %neg54.i5497
  store i64 %and55.i5498, i64* %x52B11215.i5429, align 8
  %3329 = load i64, i64* %x4A01CC93.i5403, align 8
  %3330 = load i64, i64* %x6391D07C.i5421, align 8
  %and56.i5499 = and i64 %3329, %3330
  store i64 %and56.i5499, i64* %x4201C010.i5430, align 8
  %3331 = load i64, i64* %x52B11215.i5429, align 8
  %3332 = load i64, i64* %x4201C010.i5430, align 8
  %xor57.i5500 = xor i64 %3331, %3332
  store i64 %xor57.i5500, i64* %x10B0D205.i5431, align 8
  %3333 = load i64, i64* %x10B0D205.i5431, align 8
  %3334 = load i64, i64* %a2.addr.i5382, align 8
  %or58.i5501 = or i64 %3333, %3334
  store i64 %or58.i5501, i64* %x30.i5438, align 8
  %3335 = load i64, i64* %x30.i5438, align 8
  %3336 = load i64, i64* %x0AD99996.i5411, align 8
  %xor59.i5502 = xor i64 %3335, %3336
  store i64 %xor59.i5502, i64* %x31.i5439, align 8
  %3337 = load i64*, i64** %out4.addr.i5390, align 8
  %3338 = load i64, i64* %3337, align 8
  %3339 = load i64, i64* %x31.i5439, align 8
  %xor60.i5503 = xor i64 %3338, %3339
  %3340 = load i64*, i64** %out4.addr.i5390, align 8
  store i64 %xor60.i5503, i64* %3340, align 8
  %3341 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 6), align 8
  %arrayidx535 = getelementptr inbounds i64, i64* %3341, i64 0
  %3342 = load i64, i64* %arrayidx535, align 8
  %3343 = load i64**, i64*** %k, align 8
  %arrayidx536 = getelementptr inbounds i64*, i64** %3343, i64 6
  %3344 = load i64*, i64** %arrayidx536, align 8
  %arrayidx537 = getelementptr inbounds i64, i64* %3344, i64 0
  %3345 = load i64, i64* %arrayidx537, align 8
  %xor538 = xor i64 %3342, %3345
  %3346 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 7), align 8
  %arrayidx539 = getelementptr inbounds i64, i64* %3346, i64 0
  %3347 = load i64, i64* %arrayidx539, align 8
  %3348 = load i64**, i64*** %k, align 8
  %arrayidx540 = getelementptr inbounds i64*, i64** %3348, i64 7
  %3349 = load i64*, i64** %arrayidx540, align 8
  %arrayidx541 = getelementptr inbounds i64, i64* %3349, i64 0
  %3350 = load i64, i64* %arrayidx541, align 8
  %xor542 = xor i64 %3347, %3350
  %3351 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 8), align 8
  %arrayidx543 = getelementptr inbounds i64, i64* %3351, i64 0
  %3352 = load i64, i64* %arrayidx543, align 8
  %3353 = load i64**, i64*** %k, align 8
  %arrayidx544 = getelementptr inbounds i64*, i64** %3353, i64 8
  %3354 = load i64*, i64** %arrayidx544, align 8
  %arrayidx545 = getelementptr inbounds i64, i64* %3354, i64 0
  %3355 = load i64, i64* %arrayidx545, align 8
  %xor546 = xor i64 %3352, %3355
  %3356 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 9), align 8
  %arrayidx547 = getelementptr inbounds i64, i64* %3356, i64 0
  %3357 = load i64, i64* %arrayidx547, align 8
  %3358 = load i64**, i64*** %k, align 8
  %arrayidx548 = getelementptr inbounds i64*, i64** %3358, i64 9
  %3359 = load i64*, i64** %arrayidx548, align 8
  %arrayidx549 = getelementptr inbounds i64, i64* %3359, i64 0
  %3360 = load i64, i64* %arrayidx549, align 8
  %xor550 = xor i64 %3357, %3360
  %3361 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 10), align 8
  %arrayidx551 = getelementptr inbounds i64, i64* %3361, i64 0
  %3362 = load i64, i64* %arrayidx551, align 8
  %3363 = load i64**, i64*** %k, align 8
  %arrayidx552 = getelementptr inbounds i64*, i64** %3363, i64 10
  %3364 = load i64*, i64** %arrayidx552, align 8
  %arrayidx553 = getelementptr inbounds i64, i64* %3364, i64 0
  %3365 = load i64, i64* %arrayidx553, align 8
  %xor554 = xor i64 %3362, %3365
  %3366 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 11), align 8
  %arrayidx555 = getelementptr inbounds i64, i64* %3366, i64 0
  %3367 = load i64, i64* %arrayidx555, align 8
  %3368 = load i64**, i64*** %k, align 8
  %arrayidx556 = getelementptr inbounds i64*, i64** %3368, i64 11
  %3369 = load i64*, i64** %arrayidx556, align 8
  %arrayidx557 = getelementptr inbounds i64, i64* %3369, i64 0
  %3370 = load i64, i64* %arrayidx557, align 8
  %xor558 = xor i64 %3367, %3370
  store i64 %xor538, i64* %a1.addr.i5267, align 8
  store i64 %xor542, i64* %a2.addr.i5268, align 8
  store i64 %xor546, i64* %a3.addr.i5269, align 8
  store i64 %xor550, i64* %a4.addr.i5270, align 8
  store i64 %xor554, i64* %a5.addr.i5271, align 8
  store i64 %xor558, i64* %a6.addr.i5272, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 44), i64** %out1.addr.i5273, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 59), i64** %out2.addr.i5274, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 33), i64** %out3.addr.i5275, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 49), i64** %out4.addr.i5276, align 8
  %3371 = load i64, i64* %a2.addr.i5268, align 8
  %3372 = load i64, i64* %a5.addr.i5271, align 8
  %xor.i5321 = xor i64 %3371, %3372
  store i64 %xor.i5321, i64* %x33CC33CC.i5277, align 8
  %3373 = load i64, i64* %a1.addr.i5267, align 8
  %3374 = load i64, i64* %a6.addr.i5272, align 8
  %neg.i5322 = xor i64 %3374, -1
  %and.i5323 = and i64 %3373, %neg.i5322
  store i64 %and.i5323, i64* %x55550000.i5278, align 8
  %3375 = load i64, i64* %a5.addr.i5271, align 8
  %3376 = load i64, i64* %x55550000.i5278, align 8
  %neg1.i5324 = xor i64 %3376, -1
  %and2.i5325 = and i64 %3375, %neg1.i5324
  store i64 %and2.i5325, i64* %x00AA00FF.i5279, align 8
  %3377 = load i64, i64* %a2.addr.i5268, align 8
  %3378 = load i64, i64* %x00AA00FF.i5279, align 8
  %or.i5326 = or i64 %3377, %3378
  store i64 %or.i5326, i64* %x33BB33FF.i5280, align 8
  %3379 = load i64, i64* %x33CC33CC.i5277, align 8
  %3380 = load i64, i64* %a6.addr.i5272, align 8
  %neg3.i5327 = xor i64 %3380, -1
  %and4.i5328 = and i64 %3379, %neg3.i5327
  store i64 %and4.i5328, i64* %x33CC0000.i5281, align 8
  %3381 = load i64, i64* %a1.addr.i5267, align 8
  %3382 = load i64, i64* %x33CC33CC.i5277, align 8
  %and5.i5329 = and i64 %3381, %3382
  store i64 %and5.i5329, i64* %x11441144.i5282, align 8
  %3383 = load i64, i64* %a5.addr.i5271, align 8
  %3384 = load i64, i64* %x11441144.i5282, align 8
  %xor6.i5330 = xor i64 %3383, %3384
  store i64 %xor6.i5330, i64* %x11BB11BB.i5283, align 8
  %3385 = load i64, i64* %x11BB11BB.i5283, align 8
  %3386 = load i64, i64* %x33CC0000.i5281, align 8
  %neg7.i5331 = xor i64 %3386, -1
  %and8.i5332 = and i64 %3385, %neg7.i5331
  store i64 %and8.i5332, i64* %x003311BB.i5284, align 8
  %3387 = load i64, i64* %a3.addr.i5269, align 8
  %3388 = load i64, i64* %a6.addr.i5272, align 8
  %and9.i5333 = and i64 %3387, %3388
  store i64 %and9.i5333, i64* %x00000F0F.i5285, align 8
  %3389 = load i64, i64* %x00AA00FF.i5279, align 8
  %3390 = load i64, i64* %x33CC0000.i5281, align 8
  %xor10.i5334 = xor i64 %3389, %3390
  store i64 %xor10.i5334, i64* %x336600FF.i5286, align 8
  %3391 = load i64, i64* %x33BB33FF.i5280, align 8
  %3392 = load i64, i64* %x336600FF.i5286, align 8
  %and11.i5335 = and i64 %3391, %3392
  store i64 %and11.i5335, i64* %x332200FF.i5287, align 8
  %3393 = load i64, i64* %x332200FF.i5287, align 8
  %3394 = load i64, i64* %x00000F0F.i5285, align 8
  %neg12.i5336 = xor i64 %3394, -1
  %and13.i5337 = and i64 %3393, %neg12.i5336
  store i64 %and13.i5337, i64* %x332200F0.i5288, align 8
  %3395 = load i64, i64* %a3.addr.i5269, align 8
  %3396 = load i64, i64* %x332200FF.i5287, align 8
  %and14.i5338 = and i64 %3395, %3396
  store i64 %and14.i5338, i64* %x0302000F.i5289, align 8
  %3397 = load i64, i64* %a1.addr.i5267, align 8
  %neg15.i5339 = xor i64 %3397, -1
  store i64 %neg15.i5339, i64* %xAAAAAAAA.i5290, align 8
  %3398 = load i64, i64* %x0302000F.i5289, align 8
  %3399 = load i64, i64* %xAAAAAAAA.i5290, align 8
  %xor16.i5340 = xor i64 %3398, %3399
  store i64 %xor16.i5340, i64* %xA9A8AAA5.i5291, align 8
  %3400 = load i64, i64* %a6.addr.i5272, align 8
  %3401 = load i64, i64* %x33CC33CC.i5277, align 8
  %xor17.i5341 = xor i64 %3400, %3401
  store i64 %xor17.i5341, i64* %x33CCCC33.i5292, align 8
  %3402 = load i64, i64* %x33CCCC33.i5292, align 8
  %3403 = load i64, i64* %x00000F0F.i5285, align 8
  %neg18.i5342 = xor i64 %3403, -1
  %and19.i5343 = and i64 %3402, %neg18.i5342
  store i64 %and19.i5343, i64* %x33CCC030.i5293, align 8
  %3404 = load i64, i64* %xA9A8AAA5.i5291, align 8
  %3405 = load i64, i64* %x33CCC030.i5293, align 8
  %xor20.i5344 = xor i64 %3404, %3405
  store i64 %xor20.i5344, i64* %x9A646A95.i5294, align 8
  %3406 = load i64, i64* %a4.addr.i5270, align 8
  %3407 = load i64, i64* %x332200F0.i5288, align 8
  %neg21.i5345 = xor i64 %3407, -1
  %and22.i5346 = and i64 %3406, %neg21.i5345
  store i64 %and22.i5346, i64* %x10.i5315, align 8
  %3408 = load i64, i64* %x10.i5315, align 8
  %3409 = load i64, i64* %x9A646A95.i5294, align 8
  %xor23.i5347 = xor i64 %3408, %3409
  store i64 %xor23.i5347, i64* %x11.i5316, align 8
  %3410 = load i64*, i64** %out2.addr.i5274, align 8
  %3411 = load i64, i64* %3410, align 8
  %3412 = load i64, i64* %x11.i5316, align 8
  %xor24.i5348 = xor i64 %3411, %3412
  %3413 = load i64*, i64** %out2.addr.i5274, align 8
  store i64 %xor24.i5348, i64* %3413, align 8
  %3414 = load i64, i64* %a2.addr.i5268, align 8
  %3415 = load i64, i64* %x33CCC030.i5293, align 8
  %neg25.i5349 = xor i64 %3415, -1
  %and26.i5350 = and i64 %3414, %neg25.i5349
  store i64 %and26.i5350, i64* %x00333303.i5295, align 8
  %3416 = load i64, i64* %x11BB11BB.i5283, align 8
  %3417 = load i64, i64* %x00333303.i5295, align 8
  %xor27.i5351 = xor i64 %3416, %3417
  store i64 %xor27.i5351, i64* %x118822B8.i5296, align 8
  %3418 = load i64, i64* %xA9A8AAA5.i5291, align 8
  %3419 = load i64, i64* %x118822B8.i5296, align 8
  %neg28.i5352 = xor i64 %3419, -1
  %and29.i5353 = and i64 %3418, %neg28.i5352
  store i64 %and29.i5353, i64* %xA8208805.i5297, align 8
  %3420 = load i64, i64* %a3.addr.i5269, align 8
  %3421 = load i64, i64* %x33CCCC33.i5292, align 8
  %xor30.i5354 = xor i64 %3420, %3421
  store i64 %xor30.i5354, i64* %x3CC3C33C.i5298, align 8
  %3422 = load i64, i64* %xA8208805.i5297, align 8
  %3423 = load i64, i64* %x3CC3C33C.i5298, align 8
  %xor31.i5355 = xor i64 %3422, %3423
  store i64 %xor31.i5355, i64* %x94E34B39.i5299, align 8
  %3424 = load i64, i64* %x33BB33FF.i5280, align 8
  %3425 = load i64, i64* %a4.addr.i5270, align 8
  %neg32.i5356 = xor i64 %3425, -1
  %and33.i5357 = and i64 %3424, %neg32.i5356
  store i64 %and33.i5357, i64* %x00.i5313, align 8
  %3426 = load i64, i64* %x00.i5313, align 8
  %3427 = load i64, i64* %x94E34B39.i5299, align 8
  %xor34.i5358 = xor i64 %3426, %3427
  store i64 %xor34.i5358, i64* %x01.i5314, align 8
  %3428 = load i64*, i64** %out1.addr.i5273, align 8
  %3429 = load i64, i64* %3428, align 8
  %3430 = load i64, i64* %x01.i5314, align 8
  %xor35.i5359 = xor i64 %3429, %3430
  %3431 = load i64*, i64** %out1.addr.i5273, align 8
  store i64 %xor35.i5359, i64* %3431, align 8
  %3432 = load i64, i64* %x0302000F.i5289, align 8
  %3433 = load i64, i64* %x00333303.i5295, align 8
  %xor36.i5360 = xor i64 %3432, %3433
  store i64 %xor36.i5360, i64* %x0331330C.i5300, align 8
  %3434 = load i64, i64* %x3CC3C33C.i5298, align 8
  %3435 = load i64, i64* %x0331330C.i5300, align 8
  %or37.i5361 = or i64 %3434, %3435
  store i64 %or37.i5361, i64* %x3FF3F33C.i5301, align 8
  %3436 = load i64, i64* %x33BB33FF.i5280, align 8
  %3437 = load i64, i64* %x9A646A95.i5294, align 8
  %xor38.i5362 = xor i64 %3436, %3437
  store i64 %xor38.i5362, i64* %xA9DF596A.i5302, align 8
  %3438 = load i64, i64* %x00000F0F.i5285, align 8
  %3439 = load i64, i64* %xA9DF596A.i5302, align 8
  %or39.i5363 = or i64 %3438, %3439
  store i64 %or39.i5363, i64* %xA9DF5F6F.i5303, align 8
  %3440 = load i64, i64* %x3FF3F33C.i5301, align 8
  %3441 = load i64, i64* %xA9DF5F6F.i5303, align 8
  %xor40.i5364 = xor i64 %3440, %3441
  store i64 %xor40.i5364, i64* %x962CAC53.i5304, align 8
  %3442 = load i64, i64* %x94E34B39.i5299, align 8
  %3443 = load i64, i64* %x0331330C.i5300, align 8
  %xor41.i5365 = xor i64 %3442, %3443
  store i64 %xor41.i5365, i64* %x97D27835.i5305, align 8
  %3444 = load i64, i64* %xA9DF5F6F.i5303, align 8
  %3445 = load i64, i64* %x97D27835.i5305, align 8
  %and42.i5366 = and i64 %3444, %3445
  store i64 %and42.i5366, i64* %x81D25825.i5306, align 8
  %3446 = load i64, i64* %a5.addr.i5271, align 8
  %3447 = load i64, i64* %x81D25825.i5306, align 8
  %xor43.i5367 = xor i64 %3446, %3447
  store i64 %xor43.i5367, i64* %x812D58DA.i5307, align 8
  %3448 = load i64, i64* %x812D58DA.i5307, align 8
  %3449 = load i64, i64* %x33CC0000.i5281, align 8
  %neg44.i5368 = xor i64 %3449, -1
  %and45.i5369 = and i64 %3448, %neg44.i5368
  store i64 %and45.i5369, i64* %x802158DA.i5308, align 8
  %3450 = load i64, i64* %x9A646A95.i5294, align 8
  %3451 = load i64, i64* %x802158DA.i5308, align 8
  %xor46.i5370 = xor i64 %3450, %3451
  store i64 %xor46.i5370, i64* %x1A45324F.i5309, align 8
  %3452 = load i64, i64* %x1A45324F.i5309, align 8
  %3453 = load i64, i64* %a4.addr.i5270, align 8
  %or47.i5371 = or i64 %3452, %3453
  store i64 %or47.i5371, i64* %x20.i5317, align 8
  %3454 = load i64, i64* %x20.i5317, align 8
  %3455 = load i64, i64* %x962CAC53.i5304, align 8
  %xor48.i5372 = xor i64 %3454, %3455
  store i64 %xor48.i5372, i64* %x21.i5318, align 8
  %3456 = load i64*, i64** %out3.addr.i5275, align 8
  %3457 = load i64, i64* %3456, align 8
  %3458 = load i64, i64* %x21.i5318, align 8
  %xor49.i5373 = xor i64 %3457, %3458
  %3459 = load i64*, i64** %out3.addr.i5275, align 8
  store i64 %xor49.i5373, i64* %3459, align 8
  %3460 = load i64, i64* %x1A45324F.i5309, align 8
  %3461 = load i64, i64* %x118822B8.i5296, align 8
  %neg50.i5374 = xor i64 %3461, -1
  %and51.i5375 = and i64 %3460, %neg50.i5374
  store i64 %and51.i5375, i64* %x0A451047.i5310, align 8
  %3462 = load i64, i64* %x33CCCC33.i5292, align 8
  %3463 = load i64, i64* %xA9DF596A.i5302, align 8
  %or52.i5376 = or i64 %3462, %3463
  store i64 %or52.i5376, i64* %xBBDFDD7B.i5311, align 8
  %3464 = load i64, i64* %x0A451047.i5310, align 8
  %3465 = load i64, i64* %xBBDFDD7B.i5311, align 8
  %xor53.i5377 = xor i64 %3464, %3465
  store i64 %xor53.i5377, i64* %xB19ACD3C.i5312, align 8
  %3466 = load i64, i64* %x003311BB.i5284, align 8
  %3467 = load i64, i64* %a4.addr.i5270, align 8
  %or54.i5378 = or i64 %3466, %3467
  store i64 %or54.i5378, i64* %x30.i5319, align 8
  %3468 = load i64, i64* %x30.i5319, align 8
  %3469 = load i64, i64* %xB19ACD3C.i5312, align 8
  %xor55.i5379 = xor i64 %3468, %3469
  store i64 %xor55.i5379, i64* %x31.i5320, align 8
  %3470 = load i64*, i64** %out4.addr.i5276, align 8
  %3471 = load i64, i64* %3470, align 8
  %3472 = load i64, i64* %x31.i5320, align 8
  %xor56.i5380 = xor i64 %3471, %3472
  %3473 = load i64*, i64** %out4.addr.i5276, align 8
  store i64 %xor56.i5380, i64* %3473, align 8
  %3474 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 7), align 8
  %3475 = load i64**, i64*** %k, align 8
  %arrayidx559 = getelementptr inbounds i64*, i64** %3475, i64 12
  %3476 = load i64*, i64** %arrayidx559, align 8
  %arrayidx560 = getelementptr inbounds i64, i64* %3476, i64 0
  %3477 = load i64, i64* %arrayidx560, align 8
  %xor561 = xor i64 %3474, %3477
  %3478 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 8), align 8
  %3479 = load i64**, i64*** %k, align 8
  %arrayidx562 = getelementptr inbounds i64*, i64** %3479, i64 13
  %3480 = load i64*, i64** %arrayidx562, align 8
  %arrayidx563 = getelementptr inbounds i64, i64* %3480, i64 0
  %3481 = load i64, i64* %arrayidx563, align 8
  %xor564 = xor i64 %3478, %3481
  %3482 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 9), align 8
  %3483 = load i64**, i64*** %k, align 8
  %arrayidx565 = getelementptr inbounds i64*, i64** %3483, i64 14
  %3484 = load i64*, i64** %arrayidx565, align 8
  %arrayidx566 = getelementptr inbounds i64, i64* %3484, i64 0
  %3485 = load i64, i64* %arrayidx566, align 8
  %xor567 = xor i64 %3482, %3485
  %3486 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 10), align 8
  %3487 = load i64**, i64*** %k, align 8
  %arrayidx568 = getelementptr inbounds i64*, i64** %3487, i64 15
  %3488 = load i64*, i64** %arrayidx568, align 8
  %arrayidx569 = getelementptr inbounds i64, i64* %3488, i64 0
  %3489 = load i64, i64* %arrayidx569, align 8
  %xor570 = xor i64 %3486, %3489
  %3490 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 11), align 8
  %3491 = load i64**, i64*** %k, align 8
  %arrayidx571 = getelementptr inbounds i64*, i64** %3491, i64 16
  %3492 = load i64*, i64** %arrayidx571, align 8
  %arrayidx572 = getelementptr inbounds i64, i64* %3492, i64 0
  %3493 = load i64, i64* %arrayidx572, align 8
  %xor573 = xor i64 %3490, %3493
  %3494 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 12), align 8
  %3495 = load i64**, i64*** %k, align 8
  %arrayidx574 = getelementptr inbounds i64*, i64** %3495, i64 17
  %3496 = load i64*, i64** %arrayidx574, align 8
  %arrayidx575 = getelementptr inbounds i64, i64* %3496, i64 0
  %3497 = load i64, i64* %arrayidx575, align 8
  %xor576 = xor i64 %3494, %3497
  store i64 %xor561, i64* %a1.addr.i5147, align 8
  store i64 %xor564, i64* %a2.addr.i5148, align 8
  store i64 %xor567, i64* %a3.addr.i5149, align 8
  store i64 %xor570, i64* %a4.addr.i5150, align 8
  store i64 %xor573, i64* %a5.addr.i5151, align 8
  store i64 %xor576, i64* %a6.addr.i5152, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 55), i64** %out1.addr.i5153, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 47), i64** %out2.addr.i5154, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 61), i64** %out3.addr.i5155, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 37), i64** %out4.addr.i5156, align 8
  %3498 = load i64, i64* %a1.addr.i5147, align 8
  %3499 = load i64, i64* %a2.addr.i5148, align 8
  %neg.i5203 = xor i64 %3499, -1
  %and.i5204 = and i64 %3498, %neg.i5203
  store i64 %and.i5204, i64* %x44444444.i5157, align 8
  %3500 = load i64, i64* %a3.addr.i5149, align 8
  %3501 = load i64, i64* %a6.addr.i5152, align 8
  %xor.i5205 = xor i64 %3500, %3501
  store i64 %xor.i5205, i64* %x0F0FF0F0.i5158, align 8
  %3502 = load i64, i64* %x44444444.i5157, align 8
  %3503 = load i64, i64* %x0F0FF0F0.i5158, align 8
  %or.i5206 = or i64 %3502, %3503
  store i64 %or.i5206, i64* %x4F4FF4F4.i5159, align 8
  %3504 = load i64, i64* %a4.addr.i5150, align 8
  %3505 = load i64, i64* %a6.addr.i5152, align 8
  %xor1.i5207 = xor i64 %3504, %3505
  store i64 %xor1.i5207, i64* %x00FFFF00.i5160, align 8
  %3506 = load i64, i64* %x00FFFF00.i5160, align 8
  %3507 = load i64, i64* %a1.addr.i5147, align 8
  %neg2.i5208 = xor i64 %3507, -1
  %and3.i5209 = and i64 %3506, %neg2.i5208
  store i64 %and3.i5209, i64* %x00AAAA00.i5161, align 8
  %3508 = load i64, i64* %x4F4FF4F4.i5159, align 8
  %3509 = load i64, i64* %x00AAAA00.i5161, align 8
  %xor4.i5210 = xor i64 %3508, %3509
  store i64 %xor4.i5210, i64* %x4FE55EF4.i5162, align 8
  %3510 = load i64, i64* %a2.addr.i5148, align 8
  %3511 = load i64, i64* %x0F0FF0F0.i5158, align 8
  %xor5.i5211 = xor i64 %3510, %3511
  store i64 %xor5.i5211, i64* %x3C3CC3C3.i5163, align 8
  %3512 = load i64, i64* %x3C3CC3C3.i5163, align 8
  %3513 = load i64, i64* %a6.addr.i5152, align 8
  %neg6.i5212 = xor i64 %3513, -1
  %and7.i5213 = and i64 %3512, %neg6.i5212
  store i64 %and7.i5213, i64* %x3C3C0000.i5164, align 8
  %3514 = load i64, i64* %x4F4FF4F4.i5159, align 8
  %3515 = load i64, i64* %x3C3C0000.i5164, align 8
  %xor8.i5214 = xor i64 %3514, %3515
  store i64 %xor8.i5214, i64* %x7373F4F4.i5165, align 8
  %3516 = load i64, i64* %x4FE55EF4.i5162, align 8
  %3517 = load i64, i64* %x7373F4F4.i5165, align 8
  %neg9.i5215 = xor i64 %3517, -1
  %and10.i5216 = and i64 %3516, %neg9.i5215
  store i64 %and10.i5216, i64* %x0C840A00.i5166, align 8
  %3518 = load i64, i64* %a6.addr.i5152, align 8
  %3519 = load i64, i64* %x4FE55EF4.i5162, align 8
  %and11.i5217 = and i64 %3518, %3519
  store i64 %and11.i5217, i64* %x00005EF4.i5167, align 8
  %3520 = load i64, i64* %a4.addr.i5150, align 8
  %3521 = load i64, i64* %x00005EF4.i5167, align 8
  %or12.i5218 = or i64 %3520, %3521
  store i64 %or12.i5218, i64* %x00FF5EFF.i5168, align 8
  %3522 = load i64, i64* %a1.addr.i5147, align 8
  %3523 = load i64, i64* %x00FF5EFF.i5168, align 8
  %and13.i5219 = and i64 %3522, %3523
  store i64 %and13.i5219, i64* %x00555455.i5169, align 8
  %3524 = load i64, i64* %x3C3CC3C3.i5163, align 8
  %3525 = load i64, i64* %x00555455.i5169, align 8
  %xor14.i5220 = xor i64 %3524, %3525
  store i64 %xor14.i5220, i64* %x3C699796.i5170, align 8
  %3526 = load i64, i64* %x4FE55EF4.i5162, align 8
  %3527 = load i64, i64* %a5.addr.i5151, align 8
  %neg15.i5221 = xor i64 %3527, -1
  %and16.i5222 = and i64 %3526, %neg15.i5221
  store i64 %and16.i5222, i64* %x30.i5201, align 8
  %3528 = load i64, i64* %x30.i5201, align 8
  %3529 = load i64, i64* %x3C699796.i5170, align 8
  %xor17.i5223 = xor i64 %3528, %3529
  store i64 %xor17.i5223, i64* %x31.i5202, align 8
  %3530 = load i64*, i64** %out4.addr.i5156, align 8
  %3531 = load i64, i64* %3530, align 8
  %3532 = load i64, i64* %x31.i5202, align 8
  %xor18.i5224 = xor i64 %3531, %3532
  %3533 = load i64*, i64** %out4.addr.i5156, align 8
  store i64 %xor18.i5224, i64* %3533, align 8
  %3534 = load i64, i64* %x0F0FF0F0.i5158, align 8
  %3535 = load i64, i64* %x00FFFF00.i5160, align 8
  %and19.i5225 = and i64 %3534, %3535
  store i64 %and19.i5225, i64* %x000FF000.i5171, align 8
  %3536 = load i64, i64* %a1.addr.i5147, align 8
  %3537 = load i64, i64* %a4.addr.i5150, align 8
  %xor20.i5226 = xor i64 %3536, %3537
  store i64 %xor20.i5226, i64* %x55AA55AA.i5172, align 8
  %3538 = load i64, i64* %x7373F4F4.i5165, align 8
  %3539 = load i64, i64* %x55AA55AA.i5172, align 8
  %xor21.i5227 = xor i64 %3538, %3539
  store i64 %xor21.i5227, i64* %x26D9A15E.i5173, align 8
  %3540 = load i64, i64* %a3.addr.i5149, align 8
  %3541 = load i64, i64* %x26D9A15E.i5173, align 8
  %or22.i5228 = or i64 %3540, %3541
  store i64 %or22.i5228, i64* %x2FDFAF5F.i5174, align 8
  %3542 = load i64, i64* %x2FDFAF5F.i5174, align 8
  %3543 = load i64, i64* %x000FF000.i5171, align 8
  %neg23.i5229 = xor i64 %3543, -1
  %and24.i5230 = and i64 %3542, %neg23.i5229
  store i64 %and24.i5230, i64* %x2FD00F5F.i5175, align 8
  %3544 = load i64, i64* %x00AAAA00.i5161, align 8
  %3545 = load i64, i64* %x55AA55AA.i5172, align 8
  %or25.i5231 = or i64 %3544, %3545
  store i64 %or25.i5231, i64* %x55AAFFAA.i5176, align 8
  %3546 = load i64, i64* %x3C699796.i5170, align 8
  %3547 = load i64, i64* %x55AAFFAA.i5176, align 8
  %neg26.i5232 = xor i64 %3547, -1
  %and27.i5233 = and i64 %3546, %neg26.i5232
  store i64 %and27.i5233, i64* %x28410014.i5177, align 8
  %3548 = load i64, i64* %a4.addr.i5150, align 8
  %3549 = load i64, i64* %a6.addr.i5152, align 8
  %and28.i5234 = and i64 %3548, %3549
  store i64 %and28.i5234, i64* %x000000FF.i5178, align 8
  %3550 = load i64, i64* %x000000FF.i5178, align 8
  %3551 = load i64, i64* %a2.addr.i5148, align 8
  %neg29.i5235 = xor i64 %3551, -1
  %and30.i5236 = and i64 %3550, %neg29.i5235
  store i64 %and30.i5236, i64* %x000000CC.i5179, align 8
  %3552 = load i64, i64* %x28410014.i5177, align 8
  %3553 = load i64, i64* %x000000CC.i5179, align 8
  %xor31.i5237 = xor i64 %3552, %3553
  store i64 %xor31.i5237, i64* %x284100D8.i5180, align 8
  %3554 = load i64, i64* %x284100D8.i5180, align 8
  %3555 = load i64, i64* %a3.addr.i5149, align 8
  %neg32.i5238 = xor i64 %3555, -1
  %and33.i5239 = and i64 %3554, %neg32.i5238
  store i64 %and33.i5239, i64* %x204000D0.i5181, align 8
  %3556 = load i64, i64* %x3C3CC3C3.i5163, align 8
  %3557 = load i64, i64* %x000000FF.i5178, align 8
  %or34.i5240 = or i64 %3556, %3557
  store i64 %or34.i5240, i64* %x3C3CC3FF.i5182, align 8
  %3558 = load i64, i64* %x3C3CC3FF.i5182, align 8
  %3559 = load i64, i64* %x204000D0.i5181, align 8
  %neg35.i5241 = xor i64 %3559, -1
  %and36.i5242 = and i64 %3558, %neg35.i5241
  store i64 %and36.i5242, i64* %x1C3CC32F.i5183, align 8
  %3560 = load i64, i64* %a1.addr.i5147, align 8
  %3561 = load i64, i64* %x1C3CC32F.i5183, align 8
  %xor37.i5243 = xor i64 %3560, %3561
  store i64 %xor37.i5243, i64* %x4969967A.i5184, align 8
  %3562 = load i64, i64* %x2FD00F5F.i5175, align 8
  %3563 = load i64, i64* %a5.addr.i5151, align 8
  %and38.i5244 = and i64 %3562, %3563
  store i64 %and38.i5244, i64* %x10.i5197, align 8
  %3564 = load i64, i64* %x10.i5197, align 8
  %3565 = load i64, i64* %x4969967A.i5184, align 8
  %xor39.i5245 = xor i64 %3564, %3565
  store i64 %xor39.i5245, i64* %x11.i5198, align 8
  %3566 = load i64*, i64** %out2.addr.i5154, align 8
  %3567 = load i64, i64* %3566, align 8
  %3568 = load i64, i64* %x11.i5198, align 8
  %xor40.i5246 = xor i64 %3567, %3568
  %3569 = load i64*, i64** %out2.addr.i5154, align 8
  store i64 %xor40.i5246, i64* %3569, align 8
  %3570 = load i64, i64* %x4FE55EF4.i5162, align 8
  %3571 = load i64, i64* %a2.addr.i5148, align 8
  %neg41.i5247 = xor i64 %3571, -1
  %and42.i5248 = and i64 %3570, %neg41.i5247
  store i64 %and42.i5248, i64* %x4CC44CC4.i5185, align 8
  %3572 = load i64, i64* %x4CC44CC4.i5185, align 8
  %3573 = load i64, i64* %a3.addr.i5149, align 8
  %neg43.i5249 = xor i64 %3573, -1
  %and44.i5250 = and i64 %3572, %neg43.i5249
  store i64 %and44.i5250, i64* %x40C040C0.i5186, align 8
  %3574 = load i64, i64* %x3C3CC3C3.i5163, align 8
  %3575 = load i64, i64* %x55AAFFAA.i5176, align 8
  %xor45.i5251 = xor i64 %3574, %3575
  store i64 %xor45.i5251, i64* %x69963C69.i5187, align 8
  %3576 = load i64, i64* %x69963C69.i5187, align 8
  %neg46.i5252 = xor i64 %3576, -1
  store i64 %neg46.i5252, i64* %x9669C396.i5188, align 8
  %3577 = load i64, i64* %x40C040C0.i5186, align 8
  %3578 = load i64, i64* %x9669C396.i5188, align 8
  %xor47.i5253 = xor i64 %3577, %3578
  store i64 %xor47.i5253, i64* %xD6A98356.i5189, align 8
  %3579 = load i64, i64* %a5.addr.i5151, align 8
  %3580 = load i64, i64* %x0C840A00.i5166, align 8
  %neg48.i5254 = xor i64 %3580, -1
  %and49.i5255 = and i64 %3579, %neg48.i5254
  store i64 %and49.i5255, i64* %x00.i5195, align 8
  %3581 = load i64, i64* %x00.i5195, align 8
  %3582 = load i64, i64* %xD6A98356.i5189, align 8
  %xor50.i5256 = xor i64 %3581, %3582
  store i64 %xor50.i5256, i64* %x01.i5196, align 8
  %3583 = load i64*, i64** %out1.addr.i5153, align 8
  %3584 = load i64, i64* %3583, align 8
  %3585 = load i64, i64* %x01.i5196, align 8
  %xor51.i5257 = xor i64 %3584, %3585
  %3586 = load i64*, i64** %out1.addr.i5153, align 8
  store i64 %xor51.i5257, i64* %3586, align 8
  %3587 = load i64, i64* %a4.addr.i5150, align 8
  %3588 = load i64, i64* %x0F0FF0F0.i5158, align 8
  %and52.i5258 = and i64 %3587, %3588
  store i64 %and52.i5258, i64* %x000F00F0.i5190, align 8
  %3589 = load i64, i64* %x3C3CC3C3.i5163, align 8
  %3590 = load i64, i64* %xD6A98356.i5189, align 8
  %or53.i5259 = or i64 %3589, %3590
  store i64 %or53.i5259, i64* %xFEBDC3D7.i5191, align 8
  %3591 = load i64, i64* %xFEBDC3D7.i5191, align 8
  %3592 = load i64, i64* %x000F00F0.i5190, align 8
  %neg54.i5260 = xor i64 %3592, -1
  %and55.i5261 = and i64 %3591, %neg54.i5260
  store i64 %and55.i5261, i64* %xFEB0C307.i5192, align 8
  %3593 = load i64, i64* %x00AAAA00.i5161, align 8
  %3594 = load i64, i64* %x4CC44CC4.i5185, align 8
  %or56.i5262 = or i64 %3593, %3594
  store i64 %or56.i5262, i64* %x4CEEEEC4.i5193, align 8
  %3595 = load i64, i64* %xFEB0C307.i5192, align 8
  %3596 = load i64, i64* %x4CEEEEC4.i5193, align 8
  %xor57.i5263 = xor i64 %3595, %3596
  store i64 %xor57.i5263, i64* %xB25E2DC3.i5194, align 8
  %3597 = load i64, i64* %x284100D8.i5180, align 8
  %3598 = load i64, i64* %a5.addr.i5151, align 8
  %or58.i5264 = or i64 %3597, %3598
  store i64 %or58.i5264, i64* %x20.i5199, align 8
  %3599 = load i64, i64* %x20.i5199, align 8
  %3600 = load i64, i64* %xB25E2DC3.i5194, align 8
  %xor59.i5265 = xor i64 %3599, %3600
  store i64 %xor59.i5265, i64* %x21.i5200, align 8
  %3601 = load i64*, i64** %out3.addr.i5155, align 8
  %3602 = load i64, i64* %3601, align 8
  %3603 = load i64, i64* %x21.i5200, align 8
  %xor60.i5266 = xor i64 %3602, %3603
  %3604 = load i64*, i64** %out3.addr.i5155, align 8
  store i64 %xor60.i5266, i64* %3604, align 8
  %3605 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 11), align 8
  %3606 = load i64**, i64*** %k, align 8
  %arrayidx577 = getelementptr inbounds i64*, i64** %3606, i64 18
  %3607 = load i64*, i64** %arrayidx577, align 8
  %arrayidx578 = getelementptr inbounds i64, i64* %3607, i64 0
  %3608 = load i64, i64* %arrayidx578, align 8
  %xor579 = xor i64 %3605, %3608
  %3609 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 12), align 8
  %3610 = load i64**, i64*** %k, align 8
  %arrayidx580 = getelementptr inbounds i64*, i64** %3610, i64 19
  %3611 = load i64*, i64** %arrayidx580, align 8
  %arrayidx581 = getelementptr inbounds i64, i64* %3611, i64 0
  %3612 = load i64, i64* %arrayidx581, align 8
  %xor582 = xor i64 %3609, %3612
  %3613 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 13), align 8
  %3614 = load i64**, i64*** %k, align 8
  %arrayidx583 = getelementptr inbounds i64*, i64** %3614, i64 20
  %3615 = load i64*, i64** %arrayidx583, align 8
  %arrayidx584 = getelementptr inbounds i64, i64* %3615, i64 0
  %3616 = load i64, i64* %arrayidx584, align 8
  %xor585 = xor i64 %3613, %3616
  %3617 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 14), align 8
  %3618 = load i64**, i64*** %k, align 8
  %arrayidx586 = getelementptr inbounds i64*, i64** %3618, i64 21
  %3619 = load i64*, i64** %arrayidx586, align 8
  %arrayidx587 = getelementptr inbounds i64, i64* %3619, i64 0
  %3620 = load i64, i64* %arrayidx587, align 8
  %xor588 = xor i64 %3617, %3620
  %3621 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 15), align 8
  %3622 = load i64**, i64*** %k, align 8
  %arrayidx589 = getelementptr inbounds i64*, i64** %3622, i64 22
  %3623 = load i64*, i64** %arrayidx589, align 8
  %arrayidx590 = getelementptr inbounds i64, i64* %3623, i64 0
  %3624 = load i64, i64* %arrayidx590, align 8
  %xor591 = xor i64 %3621, %3624
  %3625 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 16), align 8
  %3626 = load i64**, i64*** %k, align 8
  %arrayidx592 = getelementptr inbounds i64*, i64** %3626, i64 23
  %3627 = load i64*, i64** %arrayidx592, align 8
  %arrayidx593 = getelementptr inbounds i64, i64* %3627, i64 0
  %3628 = load i64, i64* %arrayidx593, align 8
  %xor594 = xor i64 %3625, %3628
  store i64 %xor579, i64* %a1.addr.i5058, align 8
  store i64 %xor582, i64* %a2.addr.i5059, align 8
  store i64 %xor585, i64* %a3.addr.i5060, align 8
  store i64 %xor588, i64* %a4.addr.i5061, align 8
  store i64 %xor591, i64* %a5.addr.i5062, align 8
  store i64 %xor594, i64* %a6.addr.i5063, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 57), i64** %out1.addr.i5064, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 51), i64** %out2.addr.i5065, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 41), i64** %out3.addr.i5066, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 32), i64** %out4.addr.i5067, align 8
  %3629 = load i64, i64* %a1.addr.i5058, align 8
  %3630 = load i64, i64* %a3.addr.i5060, align 8
  %xor.i5101 = xor i64 %3629, %3630
  store i64 %xor.i5101, i64* %x5A5A5A5A.i5068, align 8
  %3631 = load i64, i64* %a3.addr.i5060, align 8
  %3632 = load i64, i64* %a5.addr.i5062, align 8
  %xor1.i5102 = xor i64 %3631, %3632
  store i64 %xor1.i5102, i64* %x0F0FF0F0.i5069, align 8
  %3633 = load i64, i64* %a2.addr.i5059, align 8
  %3634 = load i64, i64* %a4.addr.i5061, align 8
  %or.i5103 = or i64 %3633, %3634
  store i64 %or.i5103, i64* %x33FF33FF.i5070, align 8
  %3635 = load i64, i64* %a5.addr.i5062, align 8
  %3636 = load i64, i64* %x33FF33FF.i5070, align 8
  %xor2.i5104 = xor i64 %3635, %3636
  store i64 %xor2.i5104, i64* %x33FFCC00.i5071, align 8
  %3637 = load i64, i64* %x0F0FF0F0.i5069, align 8
  %3638 = load i64, i64* %x33FFCC00.i5071, align 8
  %neg.i5105 = xor i64 %3638, -1
  %and.i5106 = and i64 %3637, %neg.i5105
  store i64 %and.i5106, i64* %x0C0030F0.i5072, align 8
  %3639 = load i64, i64* %x0F0FF0F0.i5069, align 8
  %3640 = load i64, i64* %a2.addr.i5059, align 8
  %neg3.i5107 = xor i64 %3640, -1
  %and4.i5108 = and i64 %3639, %neg3.i5107
  store i64 %and4.i5108, i64* %x0C0CC0C0.i5073, align 8
  %3641 = load i64, i64* %a4.addr.i5061, align 8
  %3642 = load i64, i64* %x0C0CC0C0.i5073, align 8
  %xor5.i5109 = xor i64 %3641, %3642
  store i64 %xor5.i5109, i64* %x0CF3C03F.i5074, align 8
  %3643 = load i64, i64* %x5A5A5A5A.i5068, align 8
  %3644 = load i64, i64* %x0CF3C03F.i5074, align 8
  %or6.i5110 = or i64 %3643, %3644
  store i64 %or6.i5110, i64* %x5EFBDA7F.i5075, align 8
  %3645 = load i64, i64* %x5EFBDA7F.i5075, align 8
  %3646 = load i64, i64* %x0C0030F0.i5072, align 8
  %neg7.i5111 = xor i64 %3646, -1
  %and8.i5112 = and i64 %3645, %neg7.i5111
  store i64 %and8.i5112, i64* %x52FBCA0F.i5076, align 8
  %3647 = load i64, i64* %a2.addr.i5059, align 8
  %3648 = load i64, i64* %x52FBCA0F.i5076, align 8
  %xor9.i5113 = xor i64 %3647, %3648
  store i64 %xor9.i5113, i64* %x61C8F93C.i5077, align 8
  %3649 = load i64, i64* %x0CF3C03F.i5074, align 8
  %3650 = load i64, i64* %x61C8F93C.i5077, align 8
  %and10.i5114 = and i64 %3649, %3650
  store i64 %and10.i5114, i64* %x00C0C03C.i5078, align 8
  %3651 = load i64, i64* %x0F0FF0F0.i5069, align 8
  %3652 = load i64, i64* %x00C0C03C.i5078, align 8
  %neg11.i5115 = xor i64 %3652, -1
  %and12.i5116 = and i64 %3651, %neg11.i5115
  store i64 %and12.i5116, i64* %x0F0F30C0.i5079, align 8
  %3653 = load i64, i64* %x5A5A5A5A.i5068, align 8
  %3654 = load i64, i64* %x61C8F93C.i5077, align 8
  %xor13.i5117 = xor i64 %3653, %3654
  store i64 %xor13.i5117, i64* %x3B92A366.i5080, align 8
  %3655 = load i64, i64* %x3B92A366.i5080, align 8
  %3656 = load i64, i64* %x0F0F30C0.i5079, align 8
  %neg14.i5118 = xor i64 %3656, -1
  %and15.i5119 = and i64 %3655, %neg14.i5118
  store i64 %and15.i5119, i64* %x30908326.i5081, align 8
  %3657 = load i64, i64* %x0C0030F0.i5072, align 8
  %3658 = load i64, i64* %x30908326.i5081, align 8
  %xor16.i5120 = xor i64 %3657, %3658
  store i64 %xor16.i5120, i64* %x3C90B3D6.i5082, align 8
  %3659 = load i64, i64* %a2.addr.i5059, align 8
  %3660 = load i64, i64* %a4.addr.i5061, align 8
  %xor17.i5121 = xor i64 %3659, %3660
  store i64 %xor17.i5121, i64* %x33CC33CC.i5083, align 8
  %3661 = load i64, i64* %a5.addr.i5062, align 8
  %3662 = load i64, i64* %x0C0CC0C0.i5073, align 8
  %or18.i5122 = or i64 %3661, %3662
  store i64 %or18.i5122, i64* %x0C0CFFFF.i5084, align 8
  %3663 = load i64, i64* %x3B92A366.i5080, align 8
  %3664 = load i64, i64* %x0C0CFFFF.i5084, align 8
  %xor19.i5123 = xor i64 %3663, %3664
  store i64 %xor19.i5123, i64* %x379E5C99.i5085, align 8
  %3665 = load i64, i64* %x379E5C99.i5085, align 8
  %3666 = load i64, i64* %x33CC33CC.i5083, align 8
  %neg20.i5124 = xor i64 %3666, -1
  %and21.i5125 = and i64 %3665, %neg20.i5124
  store i64 %and21.i5125, i64* %x04124C11.i5086, align 8
  %3667 = load i64, i64* %x52FBCA0F.i5076, align 8
  %3668 = load i64, i64* %x04124C11.i5086, align 8
  %xor22.i5126 = xor i64 %3667, %3668
  store i64 %xor22.i5126, i64* %x56E9861E.i5087, align 8
  %3669 = load i64, i64* %a6.addr.i5063, align 8
  %3670 = load i64, i64* %x3C90B3D6.i5082, align 8
  %neg23.i5127 = xor i64 %3670, -1
  %and24.i5128 = and i64 %3669, %neg23.i5127
  store i64 %and24.i5128, i64* %x00.i5093, align 8
  %3671 = load i64, i64* %x00.i5093, align 8
  %3672 = load i64, i64* %x56E9861E.i5087, align 8
  %xor25.i5129 = xor i64 %3671, %3672
  store i64 %xor25.i5129, i64* %x01.i5094, align 8
  %3673 = load i64*, i64** %out1.addr.i5064, align 8
  %3674 = load i64, i64* %3673, align 8
  %3675 = load i64, i64* %x01.i5094, align 8
  %xor26.i5130 = xor i64 %3674, %3675
  %3676 = load i64*, i64** %out1.addr.i5064, align 8
  store i64 %xor26.i5130, i64* %3676, align 8
  %3677 = load i64, i64* %x56E9861E.i5087, align 8
  %neg27.i5131 = xor i64 %3677, -1
  store i64 %neg27.i5131, i64* %xA91679E1.i5088, align 8
  %3678 = load i64, i64* %x3C90B3D6.i5082, align 8
  %3679 = load i64, i64* %a6.addr.i5063, align 8
  %neg28.i5132 = xor i64 %3679, -1
  %and29.i5133 = and i64 %3678, %neg28.i5132
  store i64 %and29.i5133, i64* %x10.i5095, align 8
  %3680 = load i64, i64* %x10.i5095, align 8
  %3681 = load i64, i64* %xA91679E1.i5088, align 8
  %xor30.i5134 = xor i64 %3680, %3681
  store i64 %xor30.i5134, i64* %x11.i5096, align 8
  %3682 = load i64*, i64** %out2.addr.i5065, align 8
  %3683 = load i64, i64* %3682, align 8
  %3684 = load i64, i64* %x11.i5096, align 8
  %xor31.i5135 = xor i64 %3683, %3684
  %3685 = load i64*, i64** %out2.addr.i5065, align 8
  store i64 %xor31.i5135, i64* %3685, align 8
  %3686 = load i64, i64* %x3C90B3D6.i5082, align 8
  %3687 = load i64, i64* %xA91679E1.i5088, align 8
  %xor32.i5136 = xor i64 %3686, %3687
  store i64 %xor32.i5136, i64* %x9586CA37.i5089, align 8
  %3688 = load i64, i64* %x9586CA37.i5089, align 8
  %3689 = load i64, i64* %x33CC33CC.i5083, align 8
  %neg33.i5137 = xor i64 %3689, -1
  %and34.i5138 = and i64 %3688, %neg33.i5137
  store i64 %and34.i5138, i64* %x8402C833.i5090, align 8
  %3690 = load i64, i64* %x00C0C03C.i5078, align 8
  %3691 = load i64, i64* %x8402C833.i5090, align 8
  %or35.i5139 = or i64 %3690, %3691
  store i64 %or35.i5139, i64* %x84C2C83F.i5091, align 8
  %3692 = load i64, i64* %x379E5C99.i5085, align 8
  %3693 = load i64, i64* %x84C2C83F.i5091, align 8
  %xor36.i5140 = xor i64 %3692, %3693
  store i64 %xor36.i5140, i64* %xB35C94A6.i5092, align 8
  %3694 = load i64, i64* %x61C8F93C.i5077, align 8
  %3695 = load i64, i64* %a6.addr.i5063, align 8
  %or37.i5141 = or i64 %3694, %3695
  store i64 %or37.i5141, i64* %x20.i5097, align 8
  %3696 = load i64, i64* %x20.i5097, align 8
  %3697 = load i64, i64* %xB35C94A6.i5092, align 8
  %xor38.i5142 = xor i64 %3696, %3697
  store i64 %xor38.i5142, i64* %x21.i5098, align 8
  %3698 = load i64*, i64** %out3.addr.i5066, align 8
  %3699 = load i64, i64* %3698, align 8
  %3700 = load i64, i64* %x21.i5098, align 8
  %xor39.i5143 = xor i64 %3699, %3700
  %3701 = load i64*, i64** %out3.addr.i5066, align 8
  store i64 %xor39.i5143, i64* %3701, align 8
  %3702 = load i64, i64* %a6.addr.i5063, align 8
  %3703 = load i64, i64* %x61C8F93C.i5077, align 8
  %and40.i5144 = and i64 %3702, %3703
  store i64 %and40.i5144, i64* %x30.i5099, align 8
  %3704 = load i64, i64* %x30.i5099, align 8
  %3705 = load i64, i64* %xB35C94A6.i5092, align 8
  %xor41.i5145 = xor i64 %3704, %3705
  store i64 %xor41.i5145, i64* %x31.i5100, align 8
  %3706 = load i64*, i64** %out4.addr.i5067, align 8
  %3707 = load i64, i64* %3706, align 8
  %3708 = load i64, i64* %x31.i5100, align 8
  %xor42.i5146 = xor i64 %3707, %3708
  %3709 = load i64*, i64** %out4.addr.i5067, align 8
  store i64 %xor42.i5146, i64* %3709, align 8
  %3710 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 24), align 8
  %arrayidx595 = getelementptr inbounds i64, i64* %3710, i64 0
  %3711 = load i64, i64* %arrayidx595, align 8
  %3712 = load i64**, i64*** %k, align 8
  %arrayidx596 = getelementptr inbounds i64*, i64** %3712, i64 24
  %3713 = load i64*, i64** %arrayidx596, align 8
  %arrayidx597 = getelementptr inbounds i64, i64* %3713, i64 0
  %3714 = load i64, i64* %arrayidx597, align 8
  %xor598 = xor i64 %3711, %3714
  %3715 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 25), align 8
  %arrayidx599 = getelementptr inbounds i64, i64* %3715, i64 0
  %3716 = load i64, i64* %arrayidx599, align 8
  %3717 = load i64**, i64*** %k, align 8
  %arrayidx600 = getelementptr inbounds i64*, i64** %3717, i64 25
  %3718 = load i64*, i64** %arrayidx600, align 8
  %arrayidx601 = getelementptr inbounds i64, i64* %3718, i64 0
  %3719 = load i64, i64* %arrayidx601, align 8
  %xor602 = xor i64 %3716, %3719
  %3720 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 26), align 8
  %arrayidx603 = getelementptr inbounds i64, i64* %3720, i64 0
  %3721 = load i64, i64* %arrayidx603, align 8
  %3722 = load i64**, i64*** %k, align 8
  %arrayidx604 = getelementptr inbounds i64*, i64** %3722, i64 26
  %3723 = load i64*, i64** %arrayidx604, align 8
  %arrayidx605 = getelementptr inbounds i64, i64* %3723, i64 0
  %3724 = load i64, i64* %arrayidx605, align 8
  %xor606 = xor i64 %3721, %3724
  %3725 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 27), align 8
  %arrayidx607 = getelementptr inbounds i64, i64* %3725, i64 0
  %3726 = load i64, i64* %arrayidx607, align 8
  %3727 = load i64**, i64*** %k, align 8
  %arrayidx608 = getelementptr inbounds i64*, i64** %3727, i64 27
  %3728 = load i64*, i64** %arrayidx608, align 8
  %arrayidx609 = getelementptr inbounds i64, i64* %3728, i64 0
  %3729 = load i64, i64* %arrayidx609, align 8
  %xor610 = xor i64 %3726, %3729
  %3730 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 28), align 8
  %arrayidx611 = getelementptr inbounds i64, i64* %3730, i64 0
  %3731 = load i64, i64* %arrayidx611, align 8
  %3732 = load i64**, i64*** %k, align 8
  %arrayidx612 = getelementptr inbounds i64*, i64** %3732, i64 28
  %3733 = load i64*, i64** %arrayidx612, align 8
  %arrayidx613 = getelementptr inbounds i64, i64* %3733, i64 0
  %3734 = load i64, i64* %arrayidx613, align 8
  %xor614 = xor i64 %3731, %3734
  %3735 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 29), align 8
  %arrayidx615 = getelementptr inbounds i64, i64* %3735, i64 0
  %3736 = load i64, i64* %arrayidx615, align 8
  %3737 = load i64**, i64*** %k, align 8
  %arrayidx616 = getelementptr inbounds i64*, i64** %3737, i64 29
  %3738 = load i64*, i64** %arrayidx616, align 8
  %arrayidx617 = getelementptr inbounds i64, i64* %3738, i64 0
  %3739 = load i64, i64* %arrayidx617, align 8
  %xor618 = xor i64 %3736, %3739
  store i64 %xor598, i64* %a1.addr.i4939, align 8
  store i64 %xor602, i64* %a2.addr.i4940, align 8
  store i64 %xor606, i64* %a3.addr.i4941, align 8
  store i64 %xor610, i64* %a4.addr.i4942, align 8
  store i64 %xor614, i64* %a5.addr.i4943, align 8
  store i64 %xor618, i64* %a6.addr.i4944, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 39), i64** %out1.addr.i4945, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 45), i64** %out2.addr.i4946, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 56), i64** %out3.addr.i4947, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 34), i64** %out4.addr.i4948, align 8
  %3740 = load i64, i64* %a1.addr.i4939, align 8
  %3741 = load i64, i64* %a3.addr.i4941, align 8
  %or.i4997 = or i64 %3740, %3741
  store i64 %or.i4997, i64* %x77777777.i4949, align 8
  %3742 = load i64, i64* %x77777777.i4949, align 8
  %3743 = load i64, i64* %a6.addr.i4944, align 8
  %neg.i4998 = xor i64 %3743, -1
  %and.i4999 = and i64 %3742, %neg.i4998
  store i64 %and.i4999, i64* %x77770000.i4950, align 8
  %3744 = load i64, i64* %a1.addr.i4939, align 8
  %3745 = load i64, i64* %x77770000.i4950, align 8
  %xor.i5000 = xor i64 %3744, %3745
  store i64 %xor.i5000, i64* %x22225555.i4951, align 8
  %3746 = load i64, i64* %a3.addr.i4941, align 8
  %3747 = load i64, i64* %x22225555.i4951, align 8
  %xor1.i5001 = xor i64 %3746, %3747
  store i64 %xor1.i5001, i64* %x11116666.i4952, align 8
  %3748 = load i64, i64* %a4.addr.i4942, align 8
  %3749 = load i64, i64* %x11116666.i4952, align 8
  %or2.i5002 = or i64 %3748, %3749
  store i64 %or2.i5002, i64* %x1F1F6F6F.i4953, align 8
  %3750 = load i64, i64* %x77770000.i4950, align 8
  %3751 = load i64, i64* %a4.addr.i4942, align 8
  %neg3.i5003 = xor i64 %3751, -1
  %and4.i5004 = and i64 %3750, %neg3.i5003
  store i64 %and4.i5004, i64* %x70700000.i4954, align 8
  %3752 = load i64, i64* %a3.addr.i4941, align 8
  %3753 = load i64, i64* %x70700000.i4954, align 8
  %xor5.i5005 = xor i64 %3752, %3753
  store i64 %xor5.i5005, i64* %x43433333.i4955, align 8
  %3754 = load i64, i64* %a5.addr.i4943, align 8
  %3755 = load i64, i64* %x43433333.i4955, align 8
  %and6.i5006 = and i64 %3754, %3755
  store i64 %and6.i5006, i64* %x00430033.i4956, align 8
  %3756 = load i64, i64* %a1.addr.i4939, align 8
  %3757 = load i64, i64* %x11116666.i4952, align 8
  %or7.i5007 = or i64 %3756, %3757
  store i64 %or7.i5007, i64* %x55557777.i4957, align 8
  %3758 = load i64, i64* %x00430033.i4956, align 8
  %3759 = load i64, i64* %x55557777.i4957, align 8
  %xor8.i5008 = xor i64 %3758, %3759
  store i64 %xor8.i5008, i64* %x55167744.i4958, align 8
  %3760 = load i64, i64* %a4.addr.i4942, align 8
  %3761 = load i64, i64* %x55167744.i4958, align 8
  %xor9.i5009 = xor i64 %3760, %3761
  store i64 %xor9.i5009, i64* %x5A19784B.i4959, align 8
  %3762 = load i64, i64* %a6.addr.i4944, align 8
  %3763 = load i64, i64* %x5A19784B.i4959, align 8
  %xor10.i5010 = xor i64 %3762, %3763
  store i64 %xor10.i5010, i64* %x5A1987B4.i4960, align 8
  %3764 = load i64, i64* %x22225555.i4951, align 8
  %3765 = load i64, i64* %x5A1987B4.i4960, align 8
  %or11.i5011 = or i64 %3764, %3765
  store i64 %or11.i5011, i64* %x7A3BD7F5.i4961, align 8
  %3766 = load i64, i64* %a5.addr.i4943, align 8
  %3767 = load i64, i64* %x7A3BD7F5.i4961, align 8
  %and12.i5012 = and i64 %3766, %3767
  store i64 %and12.i5012, i64* %x003B00F5.i4962, align 8
  %3768 = load i64, i64* %x22225555.i4951, align 8
  %3769 = load i64, i64* %x003B00F5.i4962, align 8
  %xor13.i5013 = xor i64 %3768, %3769
  store i64 %xor13.i5013, i64* %x221955A0.i4963, align 8
  %3770 = load i64, i64* %a4.addr.i4942, align 8
  %3771 = load i64, i64* %x55557777.i4957, align 8
  %and14.i5014 = and i64 %3770, %3771
  store i64 %and14.i5014, i64* %x05050707.i4964, align 8
  %3772 = load i64, i64* %x221955A0.i4963, align 8
  %3773 = load i64, i64* %x05050707.i4964, align 8
  %xor15.i5015 = xor i64 %3772, %3773
  store i64 %xor15.i5015, i64* %x271C52A7.i4965, align 8
  %3774 = load i64, i64* %x7A3BD7F5.i4961, align 8
  %3775 = load i64, i64* %a1.addr.i4939, align 8
  %neg16.i5016 = xor i64 %3775, -1
  %and17.i5017 = and i64 %3774, %neg16.i5016
  store i64 %and17.i5017, i64* %x2A2A82A0.i4966, align 8
  %3776 = load i64, i64* %x43433333.i4955, align 8
  %3777 = load i64, i64* %x2A2A82A0.i4966, align 8
  %xor18.i5018 = xor i64 %3776, %3777
  store i64 %xor18.i5018, i64* %x6969B193.i4967, align 8
  %3778 = load i64, i64* %a5.addr.i4943, align 8
  %3779 = load i64, i64* %x1F1F6F6F.i4953, align 8
  %xor19.i5019 = xor i64 %3778, %3779
  store i64 %xor19.i5019, i64* %x1FE06F90.i4968, align 8
  %3780 = load i64, i64* %x1FE06F90.i4968, align 8
  %3781 = load i64, i64* %x6969B193.i4967, align 8
  %neg20.i5020 = xor i64 %3781, -1
  %and21.i5021 = and i64 %3780, %neg20.i5020
  store i64 %and21.i5021, i64* %x16804E00.i4969, align 8
  %3782 = load i64, i64* %x16804E00.i4969, align 8
  %neg22.i5022 = xor i64 %3782, -1
  store i64 %neg22.i5022, i64* %xE97FB1FF.i4970, align 8
  %3783 = load i64, i64* %xE97FB1FF.i4970, align 8
  %3784 = load i64, i64* %a2.addr.i4940, align 8
  %neg23.i5023 = xor i64 %3784, -1
  %and24.i5024 = and i64 %3783, %neg23.i5023
  store i64 %and24.i5024, i64* %x20.i4993, align 8
  %3785 = load i64, i64* %x20.i4993, align 8
  %3786 = load i64, i64* %x5A19784B.i4959, align 8
  %xor25.i5025 = xor i64 %3785, %3786
  store i64 %xor25.i5025, i64* %x21.i4994, align 8
  %3787 = load i64*, i64** %out3.addr.i4947, align 8
  %3788 = load i64, i64* %3787, align 8
  %3789 = load i64, i64* %x21.i4994, align 8
  %xor26.i5026 = xor i64 %3788, %3789
  %3790 = load i64*, i64** %out3.addr.i4947, align 8
  store i64 %xor26.i5026, i64* %3790, align 8
  %3791 = load i64, i64* %x43433333.i4955, align 8
  %3792 = load i64, i64* %x003B00F5.i4962, align 8
  %neg27.i5027 = xor i64 %3792, -1
  %and28.i5028 = and i64 %3791, %neg27.i5027
  store i64 %and28.i5028, i64* %x43403302.i4971, align 8
  %3793 = load i64, i64* %x2A2A82A0.i4966, align 8
  %3794 = load i64, i64* %x1FE06F90.i4968, align 8
  %xor29.i5029 = xor i64 %3793, %3794
  store i64 %xor29.i5029, i64* %x35CAED30.i4972, align 8
  %3795 = load i64, i64* %x271C52A7.i4965, align 8
  %3796 = load i64, i64* %x35CAED30.i4972, align 8
  %or30.i5030 = or i64 %3795, %3796
  store i64 %or30.i5030, i64* %x37DEFFB7.i4973, align 8
  %3797 = load i64, i64* %x37DEFFB7.i4973, align 8
  %3798 = load i64, i64* %x43403302.i4971, align 8
  %neg31.i5031 = xor i64 %3798, -1
  %and32.i5032 = and i64 %3797, %neg31.i5031
  store i64 %and32.i5032, i64* %x349ECCB5.i4974, align 8
  %3799 = load i64, i64* %x1F1F6F6F.i4953, align 8
  %3800 = load i64, i64* %x349ECCB5.i4974, align 8
  %neg33.i5033 = xor i64 %3800, -1
  %and34.i5034 = and i64 %3799, %neg33.i5033
  store i64 %and34.i5034, i64* %x0B01234A.i4975, align 8
  %3801 = load i64, i64* %x5A1987B4.i4960, align 8
  %3802 = load i64, i64* %x349ECCB5.i4974, align 8
  %and35.i5035 = and i64 %3801, %3802
  store i64 %and35.i5035, i64* %x101884B4.i4976, align 8
  %3803 = load i64, i64* %x1FE06F90.i4968, align 8
  %3804 = load i64, i64* %x101884B4.i4976, align 8
  %xor36.i5036 = xor i64 %3803, %3804
  store i64 %xor36.i5036, i64* %x0FF8EB24.i4977, align 8
  %3805 = load i64, i64* %x43433333.i4955, align 8
  %3806 = load i64, i64* %x55557777.i4957, align 8
  %and37.i5037 = and i64 %3805, %3806
  store i64 %and37.i5037, i64* %x41413333.i4978, align 8
  %3807 = load i64, i64* %x0FF8EB24.i4977, align 8
  %3808 = load i64, i64* %x41413333.i4978, align 8
  %or38.i5038 = or i64 %3807, %3808
  store i64 %or38.i5038, i64* %x4FF9FB37.i4979, align 8
  %3809 = load i64, i64* %x003B00F5.i4962, align 8
  %3810 = load i64, i64* %x4FF9FB37.i4979, align 8
  %xor39.i5039 = xor i64 %3809, %3810
  store i64 %xor39.i5039, i64* %x4FC2FBC2.i4980, align 8
  %3811 = load i64, i64* %x4FC2FBC2.i4980, align 8
  %3812 = load i64, i64* %a2.addr.i4940, align 8
  %and40.i5040 = and i64 %3811, %3812
  store i64 %and40.i5040, i64* %x30.i4995, align 8
  %3813 = load i64, i64* %x30.i4995, align 8
  %3814 = load i64, i64* %x271C52A7.i4965, align 8
  %xor41.i5041 = xor i64 %3813, %3814
  store i64 %xor41.i5041, i64* %x31.i4996, align 8
  %3815 = load i64*, i64** %out4.addr.i4948, align 8
  %3816 = load i64, i64* %3815, align 8
  %3817 = load i64, i64* %x31.i4996, align 8
  %xor42.i5042 = xor i64 %3816, %3817
  %3818 = load i64*, i64** %out4.addr.i4948, align 8
  store i64 %xor42.i5042, i64* %3818, align 8
  %3819 = load i64, i64* %a1.addr.i4939, align 8
  %3820 = load i64, i64* %x77777777.i4949, align 8
  %xor43.i5043 = xor i64 %3819, %3820
  store i64 %xor43.i5043, i64* %x22222222.i4981, align 8
  %3821 = load i64, i64* %x349ECCB5.i4974, align 8
  %3822 = load i64, i64* %x22222222.i4981, align 8
  %xor44.i5044 = xor i64 %3821, %3822
  store i64 %xor44.i5044, i64* %x16BCEE97.i4982, align 8
  %3823 = load i64, i64* %a4.addr.i4942, align 8
  %3824 = load i64, i64* %x0FF8EB24.i4977, align 8
  %and45.i5045 = and i64 %3823, %3824
  store i64 %and45.i5045, i64* %x0F080B04.i4983, align 8
  %3825 = load i64, i64* %x16BCEE97.i4982, align 8
  %3826 = load i64, i64* %x0F080B04.i4983, align 8
  %xor46.i5046 = xor i64 %3825, %3826
  store i64 %xor46.i5046, i64* %x19B4E593.i4984, align 8
  %3827 = load i64, i64* %x0B01234A.i4975, align 8
  %3828 = load i64, i64* %a2.addr.i4940, align 8
  %or47.i5047 = or i64 %3827, %3828
  store i64 %or47.i5047, i64* %x00.i4989, align 8
  %3829 = load i64, i64* %x00.i4989, align 8
  %3830 = load i64, i64* %x19B4E593.i4984, align 8
  %xor48.i5048 = xor i64 %3829, %3830
  store i64 %xor48.i5048, i64* %x01.i4990, align 8
  %3831 = load i64*, i64** %out1.addr.i4945, align 8
  %3832 = load i64, i64* %3831, align 8
  %3833 = load i64, i64* %x01.i4990, align 8
  %xor49.i5049 = xor i64 %3832, %3833
  %3834 = load i64*, i64** %out1.addr.i4945, align 8
  store i64 %xor49.i5049, i64* %3834, align 8
  %3835 = load i64, i64* %x1F1F6F6F.i4953, align 8
  %3836 = load i64, i64* %x43433333.i4955, align 8
  %xor50.i5050 = xor i64 %3835, %3836
  store i64 %xor50.i5050, i64* %x5C5C5C5C.i4985, align 8
  %3837 = load i64, i64* %x5C5C5C5C.i4985, align 8
  %3838 = load i64, i64* %x19B4E593.i4984, align 8
  %neg51.i5051 = xor i64 %3838, -1
  %and52.i5052 = and i64 %3837, %neg51.i5051
  store i64 %and52.i5052, i64* %x4448184C.i4986, align 8
  %3839 = load i64, i64* %x22225555.i4951, align 8
  %3840 = load i64, i64* %x0FF8EB24.i4977, align 8
  %xor53.i5053 = xor i64 %3839, %3840
  store i64 %xor53.i5053, i64* %x2DDABE71.i4987, align 8
  %3841 = load i64, i64* %x4448184C.i4986, align 8
  %3842 = load i64, i64* %x2DDABE71.i4987, align 8
  %xor54.i5054 = xor i64 %3841, %3842
  store i64 %xor54.i5054, i64* %x6992A63D.i4988, align 8
  %3843 = load i64, i64* %x1F1F6F6F.i4953, align 8
  %3844 = load i64, i64* %a2.addr.i4940, align 8
  %and55.i5055 = and i64 %3843, %3844
  store i64 %and55.i5055, i64* %x10.i4991, align 8
  %3845 = load i64, i64* %x10.i4991, align 8
  %3846 = load i64, i64* %x6992A63D.i4988, align 8
  %xor56.i5056 = xor i64 %3845, %3846
  store i64 %xor56.i5056, i64* %x11.i4992, align 8
  %3847 = load i64*, i64** %out2.addr.i4946, align 8
  %3848 = load i64, i64* %3847, align 8
  %3849 = load i64, i64* %x11.i4992, align 8
  %xor57.i5057 = xor i64 %3848, %3849
  %3850 = load i64*, i64** %out2.addr.i4946, align 8
  store i64 %xor57.i5057, i64* %3850, align 8
  %3851 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 30), align 8
  %arrayidx619 = getelementptr inbounds i64, i64* %3851, i64 0
  %3852 = load i64, i64* %arrayidx619, align 8
  %3853 = load i64**, i64*** %k, align 8
  %arrayidx620 = getelementptr inbounds i64*, i64** %3853, i64 30
  %3854 = load i64*, i64** %arrayidx620, align 8
  %arrayidx621 = getelementptr inbounds i64, i64* %3854, i64 0
  %3855 = load i64, i64* %arrayidx621, align 8
  %xor622 = xor i64 %3852, %3855
  %3856 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 31), align 8
  %arrayidx623 = getelementptr inbounds i64, i64* %3856, i64 0
  %3857 = load i64, i64* %arrayidx623, align 8
  %3858 = load i64**, i64*** %k, align 8
  %arrayidx624 = getelementptr inbounds i64*, i64** %3858, i64 31
  %3859 = load i64*, i64** %arrayidx624, align 8
  %arrayidx625 = getelementptr inbounds i64, i64* %3859, i64 0
  %3860 = load i64, i64* %arrayidx625, align 8
  %xor626 = xor i64 %3857, %3860
  %3861 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 32), align 8
  %arrayidx627 = getelementptr inbounds i64, i64* %3861, i64 0
  %3862 = load i64, i64* %arrayidx627, align 8
  %3863 = load i64**, i64*** %k, align 8
  %arrayidx628 = getelementptr inbounds i64*, i64** %3863, i64 32
  %3864 = load i64*, i64** %arrayidx628, align 8
  %arrayidx629 = getelementptr inbounds i64, i64* %3864, i64 0
  %3865 = load i64, i64* %arrayidx629, align 8
  %xor630 = xor i64 %3862, %3865
  %3866 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 33), align 8
  %arrayidx631 = getelementptr inbounds i64, i64* %3866, i64 0
  %3867 = load i64, i64* %arrayidx631, align 8
  %3868 = load i64**, i64*** %k, align 8
  %arrayidx632 = getelementptr inbounds i64*, i64** %3868, i64 33
  %3869 = load i64*, i64** %arrayidx632, align 8
  %arrayidx633 = getelementptr inbounds i64, i64* %3869, i64 0
  %3870 = load i64, i64* %arrayidx633, align 8
  %xor634 = xor i64 %3867, %3870
  %3871 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 34), align 8
  %arrayidx635 = getelementptr inbounds i64, i64* %3871, i64 0
  %3872 = load i64, i64* %arrayidx635, align 8
  %3873 = load i64**, i64*** %k, align 8
  %arrayidx636 = getelementptr inbounds i64*, i64** %3873, i64 34
  %3874 = load i64*, i64** %arrayidx636, align 8
  %arrayidx637 = getelementptr inbounds i64, i64* %3874, i64 0
  %3875 = load i64, i64* %arrayidx637, align 8
  %xor638 = xor i64 %3872, %3875
  %3876 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 35), align 8
  %arrayidx639 = getelementptr inbounds i64, i64* %3876, i64 0
  %3877 = load i64, i64* %arrayidx639, align 8
  %3878 = load i64**, i64*** %k, align 8
  %arrayidx640 = getelementptr inbounds i64*, i64** %3878, i64 35
  %3879 = load i64*, i64** %arrayidx640, align 8
  %arrayidx641 = getelementptr inbounds i64, i64* %3879, i64 0
  %3880 = load i64, i64* %arrayidx641, align 8
  %xor642 = xor i64 %3877, %3880
  store i64 %xor622, i64* %a1.addr.i4825, align 8
  store i64 %xor626, i64* %a2.addr.i4826, align 8
  store i64 %xor630, i64* %a3.addr.i4827, align 8
  store i64 %xor634, i64* %a4.addr.i4828, align 8
  store i64 %xor638, i64* %a5.addr.i4829, align 8
  store i64 %xor642, i64* %a6.addr.i4830, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 35), i64** %out1.addr.i4831, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 60), i64** %out2.addr.i4832, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 42), i64** %out3.addr.i4833, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 50), i64** %out4.addr.i4834, align 8
  %3881 = load i64, i64* %a2.addr.i4826, align 8
  %3882 = load i64, i64* %a5.addr.i4829, align 8
  %xor.i4881 = xor i64 %3881, %3882
  store i64 %xor.i4881, i64* %x33CC33CC.i4835, align 8
  %3883 = load i64, i64* %a2.addr.i4826, align 8
  %3884 = load i64, i64* %a6.addr.i4830, align 8
  %or.i4882 = or i64 %3883, %3884
  store i64 %or.i4882, i64* %x3333FFFF.i4836, align 8
  %3885 = load i64, i64* %a1.addr.i4825, align 8
  %3886 = load i64, i64* %x3333FFFF.i4836, align 8
  %and.i4883 = and i64 %3885, %3886
  store i64 %and.i4883, i64* %x11115555.i4837, align 8
  %3887 = load i64, i64* %x33CC33CC.i4835, align 8
  %3888 = load i64, i64* %x11115555.i4837, align 8
  %xor1.i4884 = xor i64 %3887, %3888
  store i64 %xor1.i4884, i64* %x22DD6699.i4838, align 8
  %3889 = load i64, i64* %a6.addr.i4830, align 8
  %3890 = load i64, i64* %x22DD6699.i4838, align 8
  %xor2.i4885 = xor i64 %3889, %3890
  store i64 %xor2.i4885, i64* %x22DD9966.i4839, align 8
  %3891 = load i64, i64* %a5.addr.i4829, align 8
  %3892 = load i64, i64* %x22DD9966.i4839, align 8
  %neg.i4886 = xor i64 %3892, -1
  %and3.i4887 = and i64 %3891, %neg.i4886
  store i64 %and3.i4887, i64* %x00220099.i4840, align 8
  %3893 = load i64, i64* %a1.addr.i4825, align 8
  %3894 = load i64, i64* %x22DD9966.i4839, align 8
  %and4.i4888 = and i64 %3893, %3894
  store i64 %and4.i4888, i64* %x00551144.i4841, align 8
  %3895 = load i64, i64* %a2.addr.i4826, align 8
  %3896 = load i64, i64* %x00551144.i4841, align 8
  %xor5.i4889 = xor i64 %3895, %3896
  store i64 %xor5.i4889, i64* %x33662277.i4842, align 8
  %3897 = load i64, i64* %a1.addr.i4825, align 8
  %3898 = load i64, i64* %a3.addr.i4827, align 8
  %xor6.i4890 = xor i64 %3897, %3898
  store i64 %xor6.i4890, i64* %x5A5A5A5A.i4843, align 8
  %3899 = load i64, i64* %x33662277.i4842, align 8
  %3900 = load i64, i64* %x5A5A5A5A.i4843, align 8
  %or7.i4891 = or i64 %3899, %3900
  store i64 %or7.i4891, i64* %x7B7E7A7F.i4844, align 8
  %3901 = load i64, i64* %x22DD6699.i4838, align 8
  %3902 = load i64, i64* %x7B7E7A7F.i4844, align 8
  %xor8.i4892 = xor i64 %3901, %3902
  store i64 %xor8.i4892, i64* %x59A31CE6.i4845, align 8
  %3903 = load i64, i64* %a3.addr.i4827, align 8
  %3904 = load i64, i64* %x59A31CE6.i4845, align 8
  %and9.i4893 = and i64 %3903, %3904
  store i64 %and9.i4893, i64* %x09030C06.i4846, align 8
  %3905 = load i64, i64* %x09030C06.i4846, align 8
  %3906 = load i64, i64* %a6.addr.i4830, align 8
  %neg10.i4894 = xor i64 %3906, -1
  %and11.i4895 = and i64 %3905, %neg10.i4894
  store i64 %and11.i4895, i64* %x09030000.i4847, align 8
  %3907 = load i64, i64* %x00220099.i4840, align 8
  %3908 = load i64, i64* %x33662277.i4842, align 8
  %or12.i4896 = or i64 %3907, %3908
  store i64 %or12.i4896, i64* %x336622FF.i4848, align 8
  %3909 = load i64, i64* %x09030000.i4847, align 8
  %3910 = load i64, i64* %x336622FF.i4848, align 8
  %xor13.i4897 = xor i64 %3909, %3910
  store i64 %xor13.i4897, i64* %x3A6522FF.i4849, align 8
  %3911 = load i64, i64* %x3A6522FF.i4849, align 8
  %3912 = load i64, i64* %a4.addr.i4828, align 8
  %and14.i4898 = and i64 %3911, %3912
  store i64 %and14.i4898, i64* %x30.i4879, align 8
  %3913 = load i64, i64* %x30.i4879, align 8
  %3914 = load i64, i64* %x59A31CE6.i4845, align 8
  %xor15.i4899 = xor i64 %3913, %3914
  store i64 %xor15.i4899, i64* %x31.i4880, align 8
  %3915 = load i64*, i64** %out4.addr.i4834, align 8
  %3916 = load i64, i64* %3915, align 8
  %3917 = load i64, i64* %x31.i4880, align 8
  %xor16.i4900 = xor i64 %3916, %3917
  %3918 = load i64*, i64** %out4.addr.i4834, align 8
  store i64 %xor16.i4900, i64* %3918, align 8
  %3919 = load i64, i64* %a2.addr.i4826, align 8
  %3920 = load i64, i64* %x7B7E7A7F.i4844, align 8
  %xor17.i4901 = xor i64 %3919, %3920
  store i64 %xor17.i4901, i64* %x484D494C.i4850, align 8
  %3921 = load i64, i64* %a6.addr.i4830, align 8
  %3922 = load i64, i64* %x484D494C.i4850, align 8
  %neg18.i4902 = xor i64 %3922, -1
  %and19.i4903 = and i64 %3921, %neg18.i4902
  store i64 %and19.i4903, i64* %x0000B6B3.i4851, align 8
  %3923 = load i64, i64* %a3.addr.i4827, align 8
  %3924 = load i64, i64* %x0000B6B3.i4851, align 8
  %xor20.i4904 = xor i64 %3923, %3924
  store i64 %xor20.i4904, i64* %x0F0FB9BC.i4852, align 8
  %3925 = load i64, i64* %a5.addr.i4829, align 8
  %3926 = load i64, i64* %x09030C06.i4846, align 8
  %neg21.i4905 = xor i64 %3926, -1
  %and22.i4906 = and i64 %3925, %neg21.i4905
  store i64 %and22.i4906, i64* %x00FC00F9.i4853, align 8
  %3927 = load i64, i64* %x0F0FB9BC.i4852, align 8
  %3928 = load i64, i64* %x00FC00F9.i4853, align 8
  %or23.i4907 = or i64 %3927, %3928
  store i64 %or23.i4907, i64* %x0FFFB9FD.i4854, align 8
  %3929 = load i64, i64* %a1.addr.i4825, align 8
  %3930 = load i64, i64* %x59A31CE6.i4845, align 8
  %or24.i4908 = or i64 %3929, %3930
  store i64 %or24.i4908, i64* %x5DF75DF7.i4855, align 8
  %3931 = load i64, i64* %x336622FF.i4848, align 8
  %3932 = load i64, i64* %x5DF75DF7.i4855, align 8
  %and25.i4909 = and i64 %3931, %3932
  store i64 %and25.i4909, i64* %x116600F7.i4856, align 8
  %3933 = load i64, i64* %x0F0FB9BC.i4852, align 8
  %3934 = load i64, i64* %x116600F7.i4856, align 8
  %xor26.i4910 = xor i64 %3933, %3934
  store i64 %xor26.i4910, i64* %x1E69B94B.i4857, align 8
  %3935 = load i64, i64* %x1E69B94B.i4857, align 8
  %3936 = load i64, i64* %x09030000.i4847, align 8
  %neg27.i4911 = xor i64 %3936, -1
  %and28.i4912 = and i64 %3935, %neg27.i4911
  store i64 %and28.i4912, i64* %x1668B94B.i4858, align 8
  %3937 = load i64, i64* %x00220099.i4840, align 8
  %3938 = load i64, i64* %a4.addr.i4828, align 8
  %or29.i4913 = or i64 %3937, %3938
  store i64 %or29.i4913, i64* %x20.i4877, align 8
  %3939 = load i64, i64* %x20.i4877, align 8
  %3940 = load i64, i64* %x1668B94B.i4858, align 8
  %xor30.i4914 = xor i64 %3939, %3940
  store i64 %xor30.i4914, i64* %x21.i4878, align 8
  %3941 = load i64*, i64** %out3.addr.i4833, align 8
  %3942 = load i64, i64* %3941, align 8
  %3943 = load i64, i64* %x21.i4878, align 8
  %xor31.i4915 = xor i64 %3942, %3943
  %3944 = load i64*, i64** %out3.addr.i4833, align 8
  store i64 %xor31.i4915, i64* %3944, align 8
  %3945 = load i64, i64* %a2.addr.i4826, align 8
  %3946 = load i64, i64* %x5A5A5A5A.i4843, align 8
  %or32.i4916 = or i64 %3945, %3946
  store i64 %or32.i4916, i64* %x7B7B7B7B.i4859, align 8
  %3947 = load i64, i64* %x3A6522FF.i4849, align 8
  %3948 = load i64, i64* %x7B7B7B7B.i4859, align 8
  %xor33.i4917 = xor i64 %3947, %3948
  store i64 %xor33.i4917, i64* %x411E5984.i4860, align 8
  %3949 = load i64, i64* %x11115555.i4837, align 8
  %3950 = load i64, i64* %x0FFFB9FD.i4854, align 8
  %or34.i4918 = or i64 %3949, %3950
  store i64 %or34.i4918, i64* %x1FFFFDFD.i4861, align 8
  %3951 = load i64, i64* %x411E5984.i4860, align 8
  %3952 = load i64, i64* %x1FFFFDFD.i4861, align 8
  %xor35.i4919 = xor i64 %3951, %3952
  store i64 %xor35.i4919, i64* %x5EE1A479.i4862, align 8
  %3953 = load i64, i64* %x22DD6699.i4838, align 8
  %3954 = load i64, i64* %x1E69B94B.i4857, align 8
  %xor36.i4920 = xor i64 %3953, %3954
  store i64 %xor36.i4920, i64* %x3CB4DFD2.i4863, align 8
  %3955 = load i64, i64* %a5.addr.i4829, align 8
  %3956 = load i64, i64* %x3CB4DFD2.i4863, align 8
  %neg37.i4921 = xor i64 %3956, -1
  %and38.i4922 = and i64 %3955, %neg37.i4921
  store i64 %and38.i4922, i64* %x004B002D.i4864, align 8
  %3957 = load i64, i64* %x484D494C.i4850, align 8
  %neg39.i4923 = xor i64 %3957, -1
  store i64 %neg39.i4923, i64* %xB7B2B6B3.i4865, align 8
  %3958 = load i64, i64* %x7B7B7B7B.i4859, align 8
  %3959 = load i64, i64* %xB7B2B6B3.i4865, align 8
  %xor40.i4924 = xor i64 %3958, %3959
  store i64 %xor40.i4924, i64* %xCCC9CDC8.i4866, align 8
  %3960 = load i64, i64* %x004B002D.i4864, align 8
  %3961 = load i64, i64* %xCCC9CDC8.i4866, align 8
  %xor41.i4925 = xor i64 %3960, %3961
  store i64 %xor41.i4925, i64* %xCC82CDE5.i4867, align 8
  %3962 = load i64, i64* %xCC82CDE5.i4867, align 8
  %3963 = load i64, i64* %a4.addr.i4828, align 8
  %neg42.i4926 = xor i64 %3963, -1
  %and43.i4927 = and i64 %3962, %neg42.i4926
  store i64 %and43.i4927, i64* %x10.i4875, align 8
  %3964 = load i64, i64* %x10.i4875, align 8
  %3965 = load i64, i64* %x5EE1A479.i4862, align 8
  %xor44.i4928 = xor i64 %3964, %3965
  store i64 %xor44.i4928, i64* %x11.i4876, align 8
  %3966 = load i64*, i64** %out2.addr.i4832, align 8
  %3967 = load i64, i64* %3966, align 8
  %3968 = load i64, i64* %x11.i4876, align 8
  %xor45.i4929 = xor i64 %3967, %3968
  %3969 = load i64*, i64** %out2.addr.i4832, align 8
  store i64 %xor45.i4929, i64* %3969, align 8
  %3970 = load i64, i64* %a6.addr.i4830, align 8
  %3971 = load i64, i64* %x00551144.i4841, align 8
  %xor46.i4930 = xor i64 %3970, %3971
  store i64 %xor46.i4930, i64* %x0055EEBB.i4868, align 8
  %3972 = load i64, i64* %a1.addr.i4825, align 8
  %3973 = load i64, i64* %x0F0FB9BC.i4852, align 8
  %xor47.i4931 = xor i64 %3972, %3973
  store i64 %xor47.i4931, i64* %x5A5AECE9.i4869, align 8
  %3974 = load i64, i64* %x0055EEBB.i4868, align 8
  %3975 = load i64, i64* %x5A5AECE9.i4869, align 8
  %and48.i4932 = and i64 %3974, %3975
  store i64 %and48.i4932, i64* %x0050ECA9.i4870, align 8
  %3976 = load i64, i64* %x09030C06.i4846, align 8
  %3977 = load i64, i64* %xCCC9CDC8.i4866, align 8
  %xor49.i4933 = xor i64 %3976, %3977
  store i64 %xor49.i4933, i64* %xC5CAC1CE.i4871, align 8
  %3978 = load i64, i64* %x0050ECA9.i4870, align 8
  %3979 = load i64, i64* %xC5CAC1CE.i4871, align 8
  %xor50.i4934 = xor i64 %3978, %3979
  store i64 %xor50.i4934, i64* %xC59A2D67.i4872, align 8
  %3980 = load i64, i64* %x0FFFB9FD.i4854, align 8
  %3981 = load i64, i64* %a4.addr.i4828, align 8
  %neg51.i4935 = xor i64 %3981, -1
  %and52.i4936 = and i64 %3980, %neg51.i4935
  store i64 %and52.i4936, i64* %x00.i4873, align 8
  %3982 = load i64, i64* %x00.i4873, align 8
  %3983 = load i64, i64* %xC59A2D67.i4872, align 8
  %xor53.i4937 = xor i64 %3982, %3983
  store i64 %xor53.i4937, i64* %x01.i4874, align 8
  %3984 = load i64*, i64** %out1.addr.i4831, align 8
  %3985 = load i64, i64* %3984, align 8
  %3986 = load i64, i64* %x01.i4874, align 8
  %xor54.i4938 = xor i64 %3985, %3986
  %3987 = load i64*, i64** %out1.addr.i4831, align 8
  store i64 %xor54.i4938, i64* %3987, align 8
  %3988 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 23), align 8
  %3989 = load i64**, i64*** %k, align 8
  %arrayidx643 = getelementptr inbounds i64*, i64** %3989, i64 36
  %3990 = load i64*, i64** %arrayidx643, align 8
  %arrayidx644 = getelementptr inbounds i64, i64* %3990, i64 0
  %3991 = load i64, i64* %arrayidx644, align 8
  %xor645 = xor i64 %3988, %3991
  %3992 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 24), align 8
  %3993 = load i64**, i64*** %k, align 8
  %arrayidx646 = getelementptr inbounds i64*, i64** %3993, i64 37
  %3994 = load i64*, i64** %arrayidx646, align 8
  %arrayidx647 = getelementptr inbounds i64, i64* %3994, i64 0
  %3995 = load i64, i64* %arrayidx647, align 8
  %xor648 = xor i64 %3992, %3995
  %3996 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 25), align 8
  %3997 = load i64**, i64*** %k, align 8
  %arrayidx649 = getelementptr inbounds i64*, i64** %3997, i64 38
  %3998 = load i64*, i64** %arrayidx649, align 8
  %arrayidx650 = getelementptr inbounds i64, i64* %3998, i64 0
  %3999 = load i64, i64* %arrayidx650, align 8
  %xor651 = xor i64 %3996, %3999
  %4000 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 26), align 8
  %4001 = load i64**, i64*** %k, align 8
  %arrayidx652 = getelementptr inbounds i64*, i64** %4001, i64 39
  %4002 = load i64*, i64** %arrayidx652, align 8
  %arrayidx653 = getelementptr inbounds i64, i64* %4002, i64 0
  %4003 = load i64, i64* %arrayidx653, align 8
  %xor654 = xor i64 %4000, %4003
  %4004 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 27), align 8
  %4005 = load i64**, i64*** %k, align 8
  %arrayidx655 = getelementptr inbounds i64*, i64** %4005, i64 40
  %4006 = load i64*, i64** %arrayidx655, align 8
  %arrayidx656 = getelementptr inbounds i64, i64* %4006, i64 0
  %4007 = load i64, i64* %arrayidx656, align 8
  %xor657 = xor i64 %4004, %4007
  %4008 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 28), align 8
  %4009 = load i64**, i64*** %k, align 8
  %arrayidx658 = getelementptr inbounds i64*, i64** %4009, i64 41
  %4010 = load i64*, i64** %arrayidx658, align 8
  %arrayidx659 = getelementptr inbounds i64, i64* %4010, i64 0
  %4011 = load i64, i64* %arrayidx659, align 8
  %xor660 = xor i64 %4008, %4011
  store i64 %xor645, i64* %a1.addr.i4712, align 8
  store i64 %xor648, i64* %a2.addr.i4713, align 8
  store i64 %xor651, i64* %a3.addr.i4714, align 8
  store i64 %xor654, i64* %a4.addr.i4715, align 8
  store i64 %xor657, i64* %a5.addr.i4716, align 8
  store i64 %xor660, i64* %a6.addr.i4717, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 63), i64** %out1.addr.i4718, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 43), i64** %out2.addr.i4719, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 53), i64** %out3.addr.i4720, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 38), i64** %out4.addr.i4721, align 8
  %4012 = load i64, i64* %a4.addr.i4715, align 8
  %4013 = load i64, i64* %a5.addr.i4716, align 8
  %xor.i4768 = xor i64 %4012, %4013
  store i64 %xor.i4768, i64* %x0FF00FF0.i4722, align 8
  %4014 = load i64, i64* %a3.addr.i4714, align 8
  %4015 = load i64, i64* %x0FF00FF0.i4722, align 8
  %xor1.i4769 = xor i64 %4014, %4015
  store i64 %xor1.i4769, i64* %x3CC33CC3.i4723, align 8
  %4016 = load i64, i64* %a6.addr.i4717, align 8
  %4017 = load i64, i64* %x3CC33CC3.i4723, align 8
  %and.i4770 = and i64 %4016, %4017
  store i64 %and.i4770, i64* %x00003CC3.i4724, align 8
  %4018 = load i64, i64* %a4.addr.i4715, align 8
  %4019 = load i64, i64* %x0FF00FF0.i4722, align 8
  %and2.i4771 = and i64 %4018, %4019
  store i64 %and2.i4771, i64* %x0F000F00.i4725, align 8
  %4020 = load i64, i64* %a2.addr.i4713, align 8
  %4021 = load i64, i64* %x0F000F00.i4725, align 8
  %xor3.i4772 = xor i64 %4020, %4021
  store i64 %xor3.i4772, i64* %x5A555A55.i4726, align 8
  %4022 = load i64, i64* %x00003CC3.i4724, align 8
  %4023 = load i64, i64* %x5A555A55.i4726, align 8
  %and4.i4773 = and i64 %4022, %4023
  store i64 %and4.i4773, i64* %x00001841.i4727, align 8
  %4024 = load i64, i64* %a6.addr.i4717, align 8
  %4025 = load i64, i64* %x0F000F00.i4725, align 8
  %and5.i4774 = and i64 %4024, %4025
  store i64 %and5.i4774, i64* %x00000F00.i4728, align 8
  %4026 = load i64, i64* %a3.addr.i4714, align 8
  %4027 = load i64, i64* %x00000F00.i4728, align 8
  %xor6.i4775 = xor i64 %4026, %4027
  store i64 %xor6.i4775, i64* %x33333C33.i4729, align 8
  %4028 = load i64, i64* %x5A555A55.i4726, align 8
  %4029 = load i64, i64* %x33333C33.i4729, align 8
  %or.i4776 = or i64 %4028, %4029
  store i64 %or.i4776, i64* %x7B777E77.i4730, align 8
  %4030 = load i64, i64* %a6.addr.i4717, align 8
  %4031 = load i64, i64* %x0FF00FF0.i4722, align 8
  %xor7.i4777 = xor i64 %4030, %4031
  store i64 %xor7.i4777, i64* %x0FF0F00F.i4731, align 8
  %4032 = load i64, i64* %x7B777E77.i4730, align 8
  %4033 = load i64, i64* %x0FF0F00F.i4731, align 8
  %xor8.i4778 = xor i64 %4032, %4033
  store i64 %xor8.i4778, i64* %x74878E78.i4732, align 8
  %4034 = load i64, i64* %a1.addr.i4712, align 8
  %4035 = load i64, i64* %x00001841.i4727, align 8
  %neg.i4779 = xor i64 %4035, -1
  %and9.i4780 = and i64 %4034, %neg.i4779
  store i64 %and9.i4780, i64* %x30.i4766, align 8
  %4036 = load i64, i64* %x30.i4766, align 8
  %4037 = load i64, i64* %x74878E78.i4732, align 8
  %xor10.i4781 = xor i64 %4036, %4037
  store i64 %xor10.i4781, i64* %x31.i4767, align 8
  %4038 = load i64*, i64** %out4.addr.i4721, align 8
  %4039 = load i64, i64* %4038, align 8
  %4040 = load i64, i64* %x31.i4767, align 8
  %xor11.i4782 = xor i64 %4039, %4040
  %4041 = load i64*, i64** %out4.addr.i4721, align 8
  store i64 %xor11.i4782, i64* %4041, align 8
  %4042 = load i64, i64* %a5.addr.i4716, align 8
  %4043 = load i64, i64* %x3CC33CC3.i4723, align 8
  %neg12.i4783 = xor i64 %4043, -1
  %and13.i4784 = and i64 %4042, %neg12.i4783
  store i64 %and13.i4784, i64* %x003C003C.i4733, align 8
  %4044 = load i64, i64* %x5A555A55.i4726, align 8
  %4045 = load i64, i64* %x003C003C.i4733, align 8
  %or14.i4785 = or i64 %4044, %4045
  store i64 %or14.i4785, i64* %x5A7D5A7D.i4734, align 8
  %4046 = load i64, i64* %x00003CC3.i4724, align 8
  %4047 = load i64, i64* %x33333C33.i4729, align 8
  %xor15.i4786 = xor i64 %4046, %4047
  store i64 %xor15.i4786, i64* %x333300F0.i4735, align 8
  %4048 = load i64, i64* %x5A7D5A7D.i4734, align 8
  %4049 = load i64, i64* %x333300F0.i4735, align 8
  %xor16.i4787 = xor i64 %4048, %4049
  store i64 %xor16.i4787, i64* %x694E5A8D.i4736, align 8
  %4050 = load i64, i64* %x00003CC3.i4724, align 8
  %4051 = load i64, i64* %x0FF0F00F.i4731, align 8
  %xor17.i4788 = xor i64 %4050, %4051
  store i64 %xor17.i4788, i64* %x0FF0CCCC.i4737, align 8
  %4052 = load i64, i64* %a4.addr.i4715, align 8
  %4053 = load i64, i64* %x0FF0CCCC.i4737, align 8
  %neg18.i4789 = xor i64 %4053, -1
  %and19.i4790 = and i64 %4052, %neg18.i4789
  store i64 %and19.i4790, i64* %x000F0303.i4738, align 8
  %4054 = load i64, i64* %x5A555A55.i4726, align 8
  %4055 = load i64, i64* %x000F0303.i4738, align 8
  %neg20.i4791 = xor i64 %4055, -1
  %and21.i4792 = and i64 %4054, %neg20.i4791
  store i64 %and21.i4792, i64* %x5A505854.i4739, align 8
  %4056 = load i64, i64* %a5.addr.i4716, align 8
  %4057 = load i64, i64* %x333300F0.i4735, align 8
  %xor22.i4793 = xor i64 %4056, %4057
  store i64 %xor22.i4793, i64* %x33CC000F.i4740, align 8
  %4058 = load i64, i64* %x5A505854.i4739, align 8
  %4059 = load i64, i64* %x33CC000F.i4740, align 8
  %xor23.i4794 = xor i64 %4058, %4059
  store i64 %xor23.i4794, i64* %x699C585B.i4741, align 8
  %4060 = load i64, i64* %x0F000F00.i4725, align 8
  %4061 = load i64, i64* %x74878E78.i4732, align 8
  %or24.i4795 = or i64 %4060, %4061
  store i64 %or24.i4795, i64* %x7F878F78.i4742, align 8
  %4062 = load i64, i64* %a3.addr.i4714, align 8
  %4063 = load i64, i64* %x699C585B.i4741, align 8
  %and25.i4796 = and i64 %4062, %4063
  store i64 %and25.i4796, i64* %x21101013.i4743, align 8
  %4064 = load i64, i64* %x7F878F78.i4742, align 8
  %4065 = load i64, i64* %x21101013.i4743, align 8
  %or26.i4797 = or i64 %4064, %4065
  store i64 %or26.i4797, i64* %x7F979F7B.i4744, align 8
  %4066 = load i64, i64* %x3CC33CC3.i4723, align 8
  %4067 = load i64, i64* %x0FF0F00F.i4731, align 8
  %neg27.i4798 = xor i64 %4067, -1
  %and28.i4799 = and i64 %4066, %neg27.i4798
  store i64 %and28.i4799, i64* %x30030CC0.i4745, align 8
  %4068 = load i64, i64* %x7F979F7B.i4744, align 8
  %4069 = load i64, i64* %x30030CC0.i4745, align 8
  %xor29.i4800 = xor i64 %4068, %4069
  store i64 %xor29.i4800, i64* %x4F9493BB.i4746, align 8
  %4070 = load i64, i64* %x4F9493BB.i4746, align 8
  %4071 = load i64, i64* %a1.addr.i4712, align 8
  %neg30.i4801 = xor i64 %4071, -1
  %and31.i4802 = and i64 %4070, %neg30.i4801
  store i64 %and31.i4802, i64* %x00.i4760, align 8
  %4072 = load i64, i64* %x00.i4760, align 8
  %4073 = load i64, i64* %x694E5A8D.i4736, align 8
  %xor32.i4803 = xor i64 %4072, %4073
  store i64 %xor32.i4803, i64* %x01.i4761, align 8
  %4074 = load i64*, i64** %out1.addr.i4718, align 8
  %4075 = load i64, i64* %4074, align 8
  %4076 = load i64, i64* %x01.i4761, align 8
  %xor33.i4804 = xor i64 %4075, %4076
  %4077 = load i64*, i64** %out1.addr.i4718, align 8
  store i64 %xor33.i4804, i64* %4077, align 8
  %4078 = load i64, i64* %x699C585B.i4741, align 8
  %4079 = load i64, i64* %x4F9493BB.i4746, align 8
  %or34.i4805 = or i64 %4078, %4079
  store i64 %or34.i4805, i64* %x6F9CDBFB.i4747, align 8
  %4080 = load i64, i64* %a6.addr.i4717, align 8
  %4081 = load i64, i64* %x6F9CDBFB.i4747, align 8
  %and35.i4806 = and i64 %4080, %4081
  store i64 %and35.i4806, i64* %x0000DBFB.i4748, align 8
  %4082 = load i64, i64* %a2.addr.i4713, align 8
  %4083 = load i64, i64* %x0000DBFB.i4748, align 8
  %and36.i4807 = and i64 %4082, %4083
  store i64 %and36.i4807, i64* %x00005151.i4749, align 8
  %4084 = load i64, i64* %x694E5A8D.i4736, align 8
  %4085 = load i64, i64* %x4F9493BB.i4746, align 8
  %xor37.i4808 = xor i64 %4084, %4085
  store i64 %xor37.i4808, i64* %x26DAC936.i4750, align 8
  %4086 = load i64, i64* %x00005151.i4749, align 8
  %4087 = load i64, i64* %x26DAC936.i4750, align 8
  %xor38.i4809 = xor i64 %4086, %4087
  store i64 %xor38.i4809, i64* %x26DA9867.i4751, align 8
  %4088 = load i64, i64* %a5.addr.i4716, align 8
  %4089 = load i64, i64* %x21101013.i4743, align 8
  %or39.i4810 = or i64 %4088, %4089
  store i64 %or39.i4810, i64* %x21FF10FF.i4752, align 8
  %4090 = load i64, i64* %x0000DBFB.i4748, align 8
  %4091 = load i64, i64* %x21FF10FF.i4752, align 8
  %xor40.i4811 = xor i64 %4090, %4091
  store i64 %xor40.i4811, i64* %x21FFCB04.i4753, align 8
  %4092 = load i64, i64* %a5.addr.i4716, align 8
  %4093 = load i64, i64* %x26DAC936.i4750, align 8
  %xor41.i4812 = xor i64 %4092, %4093
  store i64 %xor41.i4812, i64* %x2625C9C9.i4754, align 8
  %4094 = load i64, i64* %x21FFCB04.i4753, align 8
  %4095 = load i64, i64* %x2625C9C9.i4754, align 8
  %or42.i4813 = or i64 %4094, %4095
  store i64 %or42.i4813, i64* %x27FFCBCD.i4755, align 8
  %4096 = load i64, i64* %x27FFCBCD.i4755, align 8
  %4097 = load i64, i64* %a1.addr.i4712, align 8
  %and43.i4814 = and i64 %4096, %4097
  store i64 %and43.i4814, i64* %x20.i4764, align 8
  %4098 = load i64, i64* %x20.i4764, align 8
  %4099 = load i64, i64* %x699C585B.i4741, align 8
  %xor44.i4815 = xor i64 %4098, %4099
  store i64 %xor44.i4815, i64* %x21.i4765, align 8
  %4100 = load i64*, i64** %out3.addr.i4720, align 8
  %4101 = load i64, i64* %4100, align 8
  %4102 = load i64, i64* %x21.i4765, align 8
  %xor45.i4816 = xor i64 %4101, %4102
  %4103 = load i64*, i64** %out3.addr.i4720, align 8
  store i64 %xor45.i4816, i64* %4103, align 8
  %4104 = load i64, i64* %x0000DBFB.i4748, align 8
  %4105 = load i64, i64* %x27FFCBCD.i4755, align 8
  %xor46.i4817 = xor i64 %4104, %4105
  store i64 %xor46.i4817, i64* %x27FF1036.i4756, align 8
  %4106 = load i64, i64* %x003C003C.i4733, align 8
  %4107 = load i64, i64* %x27FF1036.i4756, align 8
  %or47.i4818 = or i64 %4106, %4107
  store i64 %or47.i4818, i64* %x27FF103E.i4757, align 8
  %4108 = load i64, i64* %x4F9493BB.i4746, align 8
  %neg48.i4819 = xor i64 %4108, -1
  store i64 %neg48.i4819, i64* %xB06B6C44.i4758, align 8
  %4109 = load i64, i64* %x27FF103E.i4757, align 8
  %4110 = load i64, i64* %xB06B6C44.i4758, align 8
  %xor49.i4820 = xor i64 %4109, %4110
  store i64 %xor49.i4820, i64* %x97947C7A.i4759, align 8
  %4111 = load i64, i64* %x97947C7A.i4759, align 8
  %4112 = load i64, i64* %a1.addr.i4712, align 8
  %neg50.i4821 = xor i64 %4112, -1
  %and51.i4822 = and i64 %4111, %neg50.i4821
  store i64 %and51.i4822, i64* %x10.i4762, align 8
  %4113 = load i64, i64* %x10.i4762, align 8
  %4114 = load i64, i64* %x26DA9867.i4751, align 8
  %xor52.i4823 = xor i64 %4113, %4114
  store i64 %xor52.i4823, i64* %x11.i4763, align 8
  %4115 = load i64*, i64** %out2.addr.i4719, align 8
  %4116 = load i64, i64* %4115, align 8
  %4117 = load i64, i64* %x11.i4763, align 8
  %xor53.i4824 = xor i64 %4116, %4117
  %4118 = load i64*, i64** %out2.addr.i4719, align 8
  store i64 %xor53.i4824, i64* %4118, align 8
  %4119 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 27), align 8
  %4120 = load i64**, i64*** %k, align 8
  %arrayidx661 = getelementptr inbounds i64*, i64** %4120, i64 42
  %4121 = load i64*, i64** %arrayidx661, align 8
  %arrayidx662 = getelementptr inbounds i64, i64* %4121, i64 0
  %4122 = load i64, i64* %arrayidx662, align 8
  %xor663 = xor i64 %4119, %4122
  %4123 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 28), align 8
  %4124 = load i64**, i64*** %k, align 8
  %arrayidx664 = getelementptr inbounds i64*, i64** %4124, i64 43
  %4125 = load i64*, i64** %arrayidx664, align 8
  %arrayidx665 = getelementptr inbounds i64, i64* %4125, i64 0
  %4126 = load i64, i64* %arrayidx665, align 8
  %xor666 = xor i64 %4123, %4126
  %4127 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 29), align 8
  %4128 = load i64**, i64*** %k, align 8
  %arrayidx667 = getelementptr inbounds i64*, i64** %4128, i64 44
  %4129 = load i64*, i64** %arrayidx667, align 8
  %arrayidx668 = getelementptr inbounds i64, i64* %4129, i64 0
  %4130 = load i64, i64* %arrayidx668, align 8
  %xor669 = xor i64 %4127, %4130
  %4131 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 30), align 8
  %4132 = load i64**, i64*** %k, align 8
  %arrayidx670 = getelementptr inbounds i64*, i64** %4132, i64 45
  %4133 = load i64*, i64** %arrayidx670, align 8
  %arrayidx671 = getelementptr inbounds i64, i64* %4133, i64 0
  %4134 = load i64, i64* %arrayidx671, align 8
  %xor672 = xor i64 %4131, %4134
  %4135 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 31), align 8
  %4136 = load i64**, i64*** %k, align 8
  %arrayidx673 = getelementptr inbounds i64*, i64** %4136, i64 46
  %4137 = load i64*, i64** %arrayidx673, align 8
  %arrayidx674 = getelementptr inbounds i64, i64* %4137, i64 0
  %4138 = load i64, i64* %arrayidx674, align 8
  %xor675 = xor i64 %4135, %4138
  %4139 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 0), align 8
  %4140 = load i64**, i64*** %k, align 8
  %arrayidx676 = getelementptr inbounds i64*, i64** %4140, i64 47
  %4141 = load i64*, i64** %arrayidx676, align 8
  %arrayidx677 = getelementptr inbounds i64, i64* %4141, i64 0
  %4142 = load i64, i64* %arrayidx677, align 8
  %xor678 = xor i64 %4139, %4142
  store i64 %xor663, i64* %a1.addr.i4609, align 8
  store i64 %xor666, i64* %a2.addr.i4610, align 8
  store i64 %xor669, i64* %a3.addr.i4611, align 8
  store i64 %xor672, i64* %a4.addr.i4612, align 8
  store i64 %xor675, i64* %a5.addr.i4613, align 8
  store i64 %xor678, i64* %a6.addr.i4614, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 36), i64** %out1.addr.i4615, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 58), i64** %out2.addr.i4616, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 46), i64** %out3.addr.i4617, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 52), i64** %out4.addr.i4618, align 8
  %4143 = load i64, i64* %a3.addr.i4611, align 8
  %4144 = load i64, i64* %a2.addr.i4610, align 8
  %neg.i4660 = xor i64 %4144, -1
  %and.i4661 = and i64 %4143, %neg.i4660
  store i64 %and.i4661, i64* %x0C0C0C0C.i4619, align 8
  %4145 = load i64, i64* %a5.addr.i4613, align 8
  %4146 = load i64, i64* %a3.addr.i4611, align 8
  %neg1.i4662 = xor i64 %4146, -1
  %and2.i4663 = and i64 %4145, %neg1.i4662
  store i64 %and2.i4663, i64* %x0000F0F0.i4620, align 8
  %4147 = load i64, i64* %a4.addr.i4612, align 8
  %4148 = load i64, i64* %x0000F0F0.i4620, align 8
  %xor.i4664 = xor i64 %4147, %4148
  store i64 %xor.i4664, i64* %x00FFF00F.i4621, align 8
  %4149 = load i64, i64* %a1.addr.i4609, align 8
  %4150 = load i64, i64* %x00FFF00F.i4621, align 8
  %and3.i4665 = and i64 %4149, %4150
  store i64 %and3.i4665, i64* %x00555005.i4622, align 8
  %4151 = load i64, i64* %x00555005.i4622, align 8
  %4152 = load i64, i64* %x0C0C0C0C.i4619, align 8
  %neg4.i4666 = xor i64 %4152, -1
  %and5.i4667 = and i64 %4151, %neg4.i4666
  store i64 %and5.i4667, i64* %x00515001.i4623, align 8
  %4153 = load i64, i64* %a2.addr.i4610, align 8
  %4154 = load i64, i64* %x00FFF00F.i4621, align 8
  %neg6.i4668 = xor i64 %4154, -1
  %and7.i4669 = and i64 %4153, %neg6.i4668
  store i64 %and7.i4669, i64* %x33000330.i4624, align 8
  %4155 = load i64, i64* %a1.addr.i4609, align 8
  %4156 = load i64, i64* %x33000330.i4624, align 8
  %or.i4670 = or i64 %4155, %4156
  store i64 %or.i4670, i64* %x77555775.i4625, align 8
  %4157 = load i64, i64* %a2.addr.i4610, align 8
  %4158 = load i64, i64* %a3.addr.i4611, align 8
  %neg8.i4671 = xor i64 %4158, -1
  %and9.i4672 = and i64 %4157, %neg8.i4671
  store i64 %and9.i4672, i64* %x30303030.i4626, align 8
  %4159 = load i64, i64* %a5.addr.i4613, align 8
  %4160 = load i64, i64* %x30303030.i4626, align 8
  %xor10.i4673 = xor i64 %4159, %4160
  store i64 %xor10.i4673, i64* %x3030CFCF.i4627, align 8
  %4161 = load i64, i64* %x77555775.i4625, align 8
  %4162 = load i64, i64* %x3030CFCF.i4627, align 8
  %and11.i4674 = and i64 %4161, %4162
  store i64 %and11.i4674, i64* %x30104745.i4628, align 8
  %4163 = load i64, i64* %x00555005.i4622, align 8
  %4164 = load i64, i64* %x30104745.i4628, align 8
  %or12.i4675 = or i64 %4163, %4164
  store i64 %or12.i4675, i64* %x30555745.i4629, align 8
  %4165 = load i64, i64* %x00FFF00F.i4621, align 8
  %neg13.i4676 = xor i64 %4165, -1
  store i64 %neg13.i4676, i64* %xFF000FF0.i4630, align 8
  %4166 = load i64, i64* %x30104745.i4628, align 8
  %4167 = load i64, i64* %xFF000FF0.i4630, align 8
  %xor14.i4677 = xor i64 %4166, %4167
  store i64 %xor14.i4677, i64* %xCF1048B5.i4631, align 8
  %4168 = load i64, i64* %a3.addr.i4611, align 8
  %4169 = load i64, i64* %x77555775.i4625, align 8
  %neg15.i4678 = xor i64 %4169, -1
  %and16.i4679 = and i64 %4168, %neg15.i4678
  store i64 %and16.i4679, i64* %x080A080A.i4632, align 8
  %4170 = load i64, i64* %xCF1048B5.i4631, align 8
  %4171 = load i64, i64* %x080A080A.i4632, align 8
  %xor17.i4680 = xor i64 %4170, %4171
  store i64 %xor17.i4680, i64* %xC71A40BF.i4633, align 8
  %4172 = load i64, i64* %x0C0C0C0C.i4619, align 8
  %4173 = load i64, i64* %xC71A40BF.i4633, align 8
  %xor18.i4681 = xor i64 %4172, %4173
  store i64 %xor18.i4681, i64* %xCB164CB3.i4634, align 8
  %4174 = load i64, i64* %x00515001.i4623, align 8
  %4175 = load i64, i64* %a6.addr.i4614, align 8
  %or19.i4682 = or i64 %4174, %4175
  store i64 %or19.i4682, i64* %x10.i4654, align 8
  %4176 = load i64, i64* %x10.i4654, align 8
  %4177 = load i64, i64* %xCB164CB3.i4634, align 8
  %xor20.i4683 = xor i64 %4176, %4177
  store i64 %xor20.i4683, i64* %x11.i4655, align 8
  %4178 = load i64*, i64** %out2.addr.i4616, align 8
  %4179 = load i64, i64* %4178, align 8
  %4180 = load i64, i64* %x11.i4655, align 8
  %xor21.i4684 = xor i64 %4179, %4180
  %4181 = load i64*, i64** %out2.addr.i4616, align 8
  store i64 %xor21.i4684, i64* %4181, align 8
  %4182 = load i64, i64* %a1.addr.i4609, align 8
  %4183 = load i64, i64* %xCB164CB3.i4634, align 8
  %xor22.i4685 = xor i64 %4182, %4183
  store i64 %xor22.i4685, i64* %x9E4319E6.i4635, align 8
  %4184 = load i64, i64* %a5.addr.i4613, align 8
  %4185 = load i64, i64* %x9E4319E6.i4635, align 8
  %and23.i4686 = and i64 %4184, %4185
  store i64 %and23.i4686, i64* %x000019E6.i4636, align 8
  %4186 = load i64, i64* %a2.addr.i4610, align 8
  %4187 = load i64, i64* %xC71A40BF.i4633, align 8
  %xor24.i4687 = xor i64 %4186, %4187
  store i64 %xor24.i4687, i64* %xF429738C.i4637, align 8
  %4188 = load i64, i64* %x000019E6.i4636, align 8
  %4189 = load i64, i64* %xF429738C.i4637, align 8
  %xor25.i4688 = xor i64 %4188, %4189
  store i64 %xor25.i4688, i64* %xF4296A6A.i4638, align 8
  %4190 = load i64, i64* %x33000330.i4624, align 8
  %4191 = load i64, i64* %xF4296A6A.i4638, align 8
  %xor26.i4689 = xor i64 %4190, %4191
  store i64 %xor26.i4689, i64* %xC729695A.i4639, align 8
  %4192 = load i64, i64* %x30555745.i4629, align 8
  %4193 = load i64, i64* %xF4296A6A.i4638, align 8
  %xor27.i4690 = xor i64 %4192, %4193
  store i64 %xor27.i4690, i64* %xC47C3D2F.i4640, align 8
  %4194 = load i64, i64* %a2.addr.i4610, align 8
  %4195 = load i64, i64* %xC47C3D2F.i4640, align 8
  %or28.i4691 = or i64 %4194, %4195
  store i64 %or28.i4691, i64* %xF77F3F3F.i4641, align 8
  %4196 = load i64, i64* %a5.addr.i4613, align 8
  %4197 = load i64, i64* %x9E4319E6.i4635, align 8
  %xor29.i4692 = xor i64 %4196, %4197
  store i64 %xor29.i4692, i64* %x9E43E619.i4642, align 8
  %4198 = load i64, i64* %xF77F3F3F.i4641, align 8
  %4199 = load i64, i64* %x9E43E619.i4642, align 8
  %xor30.i4693 = xor i64 %4198, %4199
  store i64 %xor30.i4693, i64* %x693CD926.i4643, align 8
  %4200 = load i64, i64* %x30555745.i4629, align 8
  %4201 = load i64, i64* %a6.addr.i4614, align 8
  %and31.i4694 = and i64 %4200, %4201
  store i64 %and31.i4694, i64* %x20.i4656, align 8
  %4202 = load i64, i64* %x20.i4656, align 8
  %4203 = load i64, i64* %x693CD926.i4643, align 8
  %xor32.i4695 = xor i64 %4202, %4203
  store i64 %xor32.i4695, i64* %x21.i4657, align 8
  %4204 = load i64*, i64** %out3.addr.i4617, align 8
  %4205 = load i64, i64* %4204, align 8
  %4206 = load i64, i64* %x21.i4657, align 8
  %xor33.i4696 = xor i64 %4205, %4206
  %4207 = load i64*, i64** %out3.addr.i4617, align 8
  store i64 %xor33.i4696, i64* %4207, align 8
  %4208 = load i64, i64* %x3030CFCF.i4627, align 8
  %4209 = load i64, i64* %xC729695A.i4639, align 8
  %xor34.i4697 = xor i64 %4208, %4209
  store i64 %xor34.i4697, i64* %xF719A695.i4644, align 8
  %4210 = load i64, i64* %a4.addr.i4612, align 8
  %4211 = load i64, i64* %xF429738C.i4637, align 8
  %or35.i4698 = or i64 %4210, %4211
  store i64 %or35.i4698, i64* %xF4FF73FF.i4645, align 8
  %4212 = load i64, i64* %xF719A695.i4644, align 8
  %4213 = load i64, i64* %xF4FF73FF.i4645, align 8
  %xor36.i4699 = xor i64 %4212, %4213
  store i64 %xor36.i4699, i64* %x03E6D56A.i4646, align 8
  %4214 = load i64, i64* %a1.addr.i4609, align 8
  %4215 = load i64, i64* %x03E6D56A.i4646, align 8
  %xor37.i4700 = xor i64 %4214, %4215
  store i64 %xor37.i4700, i64* %x56B3803F.i4647, align 8
  %4216 = load i64, i64* %x56B3803F.i4647, align 8
  %4217 = load i64, i64* %a6.addr.i4614, align 8
  %and38.i4701 = and i64 %4216, %4217
  store i64 %and38.i4701, i64* %x30.i4658, align 8
  %4218 = load i64, i64* %x30.i4658, align 8
  %4219 = load i64, i64* %xC729695A.i4639, align 8
  %xor39.i4702 = xor i64 %4218, %4219
  store i64 %xor39.i4702, i64* %x31.i4659, align 8
  %4220 = load i64*, i64** %out4.addr.i4618, align 8
  %4221 = load i64, i64* %4220, align 8
  %4222 = load i64, i64* %x31.i4659, align 8
  %xor40.i4703 = xor i64 %4221, %4222
  %4223 = load i64*, i64** %out4.addr.i4618, align 8
  store i64 %xor40.i4703, i64* %4223, align 8
  %4224 = load i64, i64* %xF719A695.i4644, align 8
  %4225 = load i64, i64* %a4.addr.i4612, align 8
  %neg41.i4704 = xor i64 %4225, -1
  %and42.i4705 = and i64 %4224, %neg41.i4704
  store i64 %and42.i4705, i64* %xF700A600.i4648, align 8
  %4226 = load i64, i64* %x693CD926.i4643, align 8
  %4227 = load i64, i64* %xF700A600.i4648, align 8
  %and43.i4706 = and i64 %4226, %4227
  store i64 %and43.i4706, i64* %x61008000.i4649, align 8
  %4228 = load i64, i64* %x00515001.i4623, align 8
  %4229 = load i64, i64* %x03E6D56A.i4646, align 8
  %xor44.i4707 = xor i64 %4228, %4229
  store i64 %xor44.i4707, i64* %x03B7856B.i4650, align 8
  %4230 = load i64, i64* %x61008000.i4649, align 8
  %4231 = load i64, i64* %x03B7856B.i4650, align 8
  %xor45.i4708 = xor i64 %4230, %4231
  store i64 %xor45.i4708, i64* %x62B7056B.i4651, align 8
  %4232 = load i64, i64* %x62B7056B.i4651, align 8
  %4233 = load i64, i64* %a6.addr.i4614, align 8
  %or46.i4709 = or i64 %4232, %4233
  store i64 %or46.i4709, i64* %x00.i4652, align 8
  %4234 = load i64, i64* %x00.i4652, align 8
  %4235 = load i64, i64* %xC729695A.i4639, align 8
  %xor47.i4710 = xor i64 %4234, %4235
  store i64 %xor47.i4710, i64* %x01.i4653, align 8
  %4236 = load i64*, i64** %out1.addr.i4615, align 8
  %4237 = load i64, i64* %4236, align 8
  %4238 = load i64, i64* %x01.i4653, align 8
  %xor48.i4711 = xor i64 %4237, %4238
  %4239 = load i64*, i64** %out1.addr.i4615, align 8
  store i64 %xor48.i4711, i64* %4239, align 8
  %4240 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 48), align 8
  %arrayidx679 = getelementptr inbounds i64, i64* %4240, i64 0
  %4241 = load i64, i64* %arrayidx679, align 8
  %4242 = load i64**, i64*** %k, align 8
  %arrayidx680 = getelementptr inbounds i64*, i64** %4242, i64 48
  %4243 = load i64*, i64** %arrayidx680, align 8
  %arrayidx681 = getelementptr inbounds i64, i64* %4243, i64 0
  %4244 = load i64, i64* %arrayidx681, align 8
  %xor682 = xor i64 %4241, %4244
  %4245 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 49), align 8
  %arrayidx683 = getelementptr inbounds i64, i64* %4245, i64 0
  %4246 = load i64, i64* %arrayidx683, align 8
  %4247 = load i64**, i64*** %k, align 8
  %arrayidx684 = getelementptr inbounds i64*, i64** %4247, i64 49
  %4248 = load i64*, i64** %arrayidx684, align 8
  %arrayidx685 = getelementptr inbounds i64, i64* %4248, i64 0
  %4249 = load i64, i64* %arrayidx685, align 8
  %xor686 = xor i64 %4246, %4249
  %4250 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 50), align 8
  %arrayidx687 = getelementptr inbounds i64, i64* %4250, i64 0
  %4251 = load i64, i64* %arrayidx687, align 8
  %4252 = load i64**, i64*** %k, align 8
  %arrayidx688 = getelementptr inbounds i64*, i64** %4252, i64 50
  %4253 = load i64*, i64** %arrayidx688, align 8
  %arrayidx689 = getelementptr inbounds i64, i64* %4253, i64 0
  %4254 = load i64, i64* %arrayidx689, align 8
  %xor690 = xor i64 %4251, %4254
  %4255 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 51), align 8
  %arrayidx691 = getelementptr inbounds i64, i64* %4255, i64 0
  %4256 = load i64, i64* %arrayidx691, align 8
  %4257 = load i64**, i64*** %k, align 8
  %arrayidx692 = getelementptr inbounds i64*, i64** %4257, i64 51
  %4258 = load i64*, i64** %arrayidx692, align 8
  %arrayidx693 = getelementptr inbounds i64, i64* %4258, i64 0
  %4259 = load i64, i64* %arrayidx693, align 8
  %xor694 = xor i64 %4256, %4259
  %4260 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 52), align 8
  %arrayidx695 = getelementptr inbounds i64, i64* %4260, i64 0
  %4261 = load i64, i64* %arrayidx695, align 8
  %4262 = load i64**, i64*** %k, align 8
  %arrayidx696 = getelementptr inbounds i64*, i64** %4262, i64 52
  %4263 = load i64*, i64** %arrayidx696, align 8
  %arrayidx697 = getelementptr inbounds i64, i64* %4263, i64 0
  %4264 = load i64, i64* %arrayidx697, align 8
  %xor698 = xor i64 %4261, %4264
  %4265 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 53), align 8
  %arrayidx699 = getelementptr inbounds i64, i64* %4265, i64 0
  %4266 = load i64, i64* %arrayidx699, align 8
  %4267 = load i64**, i64*** %k, align 8
  %arrayidx700 = getelementptr inbounds i64*, i64** %4267, i64 53
  %4268 = load i64*, i64** %arrayidx700, align 8
  %arrayidx701 = getelementptr inbounds i64, i64* %4268, i64 0
  %4269 = load i64, i64* %arrayidx701, align 8
  %xor702 = xor i64 %4266, %4269
  store i64 %xor682, i64* %a1.addr.i4486, align 8
  store i64 %xor686, i64* %a2.addr.i4487, align 8
  store i64 %xor690, i64* %a3.addr.i4488, align 8
  store i64 %xor694, i64* %a4.addr.i4489, align 8
  store i64 %xor698, i64* %a5.addr.i4490, align 8
  store i64 %xor702, i64* %a6.addr.i4491, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 8), i64** %out1.addr.i4492, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 16), i64** %out2.addr.i4493, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 22), i64** %out3.addr.i4494, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 30), i64** %out4.addr.i4495, align 8
  %4270 = load i64, i64* %a1.addr.i4486, align 8
  %4271 = load i64, i64* %a5.addr.i4490, align 8
  %neg.i4545 = xor i64 %4271, -1
  %and.i4546 = and i64 %4270, %neg.i4545
  store i64 %and.i4546, i64* %x55005500.i4496, align 8
  %4272 = load i64, i64* %a4.addr.i4489, align 8
  %4273 = load i64, i64* %x55005500.i4496, align 8
  %xor.i4547 = xor i64 %4272, %4273
  store i64 %xor.i4547, i64* %x5A0F5A0F.i4497, align 8
  %4274 = load i64, i64* %a3.addr.i4488, align 8
  %4275 = load i64, i64* %a6.addr.i4491, align 8
  %or.i4548 = or i64 %4274, %4275
  store i64 %or.i4548, i64* %x3333FFFF.i4498, align 8
  %4276 = load i64, i64* %a1.addr.i4486, align 8
  %4277 = load i64, i64* %a3.addr.i4488, align 8
  %xor1.i4549 = xor i64 %4276, %4277
  store i64 %xor1.i4549, i64* %x66666666.i4499, align 8
  %4278 = load i64, i64* %x3333FFFF.i4498, align 8
  %4279 = load i64, i64* %x66666666.i4499, align 8
  %and2.i4550 = and i64 %4278, %4279
  store i64 %and2.i4550, i64* %x22226666.i4500, align 8
  %4280 = load i64, i64* %a4.addr.i4489, align 8
  %4281 = load i64, i64* %x22226666.i4500, align 8
  %xor3.i4551 = xor i64 %4280, %4281
  store i64 %xor3.i4551, i64* %x2D2D6969.i4501, align 8
  %4282 = load i64, i64* %x2D2D6969.i4501, align 8
  %4283 = load i64, i64* %x5A0F5A0F.i4497, align 8
  %neg4.i4552 = xor i64 %4283, -1
  %and5.i4553 = and i64 %4282, %neg4.i4552
  store i64 %and5.i4553, i64* %x25202160.i4502, align 8
  %4284 = load i64, i64* %a5.addr.i4490, align 8
  %4285 = load i64, i64* %a6.addr.i4491, align 8
  %xor6.i4554 = xor i64 %4284, %4285
  store i64 %xor6.i4554, i64* %x00FFFF00.i4503, align 8
  %4286 = load i64, i64* %a3.addr.i4488, align 8
  %4287 = load i64, i64* %x00FFFF00.i4503, align 8
  %xor7.i4555 = xor i64 %4286, %4287
  store i64 %xor7.i4555, i64* %x33CCCC33.i4504, align 8
  %4288 = load i64, i64* %x5A0F5A0F.i4497, align 8
  %4289 = load i64, i64* %x33CCCC33.i4504, align 8
  %neg8.i4556 = xor i64 %4289, -1
  %and9.i4557 = and i64 %4288, %neg8.i4556
  store i64 %and9.i4557, i64* %x4803120C.i4505, align 8
  %4290 = load i64, i64* %a6.addr.i4491, align 8
  %4291 = load i64, i64* %x22226666.i4500, align 8
  %or10.i4558 = or i64 %4290, %4291
  store i64 %or10.i4558, i64* %x2222FFFF.i4506, align 8
  %4292 = load i64, i64* %x4803120C.i4505, align 8
  %4293 = load i64, i64* %x2222FFFF.i4506, align 8
  %xor11.i4559 = xor i64 %4292, %4293
  store i64 %xor11.i4559, i64* %x6A21EDF3.i4507, align 8
  %4294 = load i64, i64* %x6A21EDF3.i4507, align 8
  %4295 = load i64, i64* %x25202160.i4502, align 8
  %neg12.i4560 = xor i64 %4295, -1
  %and13.i4561 = and i64 %4294, %neg12.i4560
  store i64 %and13.i4561, i64* %x4A01CC93.i4508, align 8
  %4296 = load i64, i64* %a1.addr.i4486, align 8
  %4297 = load i64, i64* %a6.addr.i4491, align 8
  %or14.i4562 = or i64 %4296, %4297
  store i64 %or14.i4562, i64* %x5555FFFF.i4509, align 8
  %4298 = load i64, i64* %x6A21EDF3.i4507, align 8
  %4299 = load i64, i64* %x5555FFFF.i4509, align 8
  %or15.i4563 = or i64 %4298, %4299
  store i64 %or15.i4563, i64* %x7F75FFFF.i4510, align 8
  %4300 = load i64, i64* %a5.addr.i4490, align 8
  %4301 = load i64, i64* %x2D2D6969.i4501, align 8
  %neg16.i4564 = xor i64 %4301, -1
  %and17.i4565 = and i64 %4300, %neg16.i4564
  store i64 %and17.i4565, i64* %x00D20096.i4511, align 8
  %4302 = load i64, i64* %x7F75FFFF.i4510, align 8
  %4303 = load i64, i64* %x00D20096.i4511, align 8
  %xor18.i4566 = xor i64 %4302, %4303
  store i64 %xor18.i4566, i64* %x7FA7FF69.i4512, align 8
  %4304 = load i64, i64* %a4.addr.i4489, align 8
  %4305 = load i64, i64* %x5555FFFF.i4509, align 8
  %neg19.i4567 = xor i64 %4305, -1
  %and20.i4568 = and i64 %4304, %neg19.i4567
  store i64 %and20.i4568, i64* %x0A0A0000.i4513, align 8
  %4306 = load i64, i64* %x00D20096.i4511, align 8
  %4307 = load i64, i64* %x0A0A0000.i4513, align 8
  %xor21.i4569 = xor i64 %4306, %4307
  store i64 %xor21.i4569, i64* %x0AD80096.i4514, align 8
  %4308 = load i64, i64* %x00FFFF00.i4503, align 8
  %4309 = load i64, i64* %x66666666.i4499, align 8
  %neg22.i4570 = xor i64 %4309, -1
  %and23.i4571 = and i64 %4308, %neg22.i4570
  store i64 %and23.i4571, i64* %x00999900.i4515, align 8
  %4310 = load i64, i64* %x0AD80096.i4514, align 8
  %4311 = load i64, i64* %x00999900.i4515, align 8
  %or24.i4572 = or i64 %4310, %4311
  store i64 %or24.i4572, i64* %x0AD99996.i4516, align 8
  %4312 = load i64, i64* %a3.addr.i4488, align 8
  %4313 = load i64, i64* %x55005500.i4496, align 8
  %neg25.i4573 = xor i64 %4313, -1
  %and26.i4574 = and i64 %4312, %neg25.i4573
  store i64 %and26.i4574, i64* %x22332233.i4517, align 8
  %4314 = load i64, i64* %x5A0F5A0F.i4497, align 8
  %4315 = load i64, i64* %x7F75FFFF.i4510, align 8
  %xor27.i4575 = xor i64 %4314, %4315
  store i64 %xor27.i4575, i64* %x257AA5F0.i4518, align 8
  %4316 = load i64, i64* %x257AA5F0.i4518, align 8
  %4317 = load i64, i64* %x22332233.i4517, align 8
  %neg28.i4576 = xor i64 %4317, -1
  %and29.i4577 = and i64 %4316, %neg28.i4576
  store i64 %and29.i4577, i64* %x054885C0.i4519, align 8
  %4318 = load i64, i64* %x054885C0.i4519, align 8
  %neg30.i4578 = xor i64 %4318, -1
  store i64 %neg30.i4578, i64* %xFAB77A3F.i4520, align 8
  %4319 = load i64, i64* %x3333FFFF.i4498, align 8
  %4320 = load i64, i64* %x6A21EDF3.i4507, align 8
  %and31.i4579 = and i64 %4319, %4320
  store i64 %and31.i4579, i64* %x2221EDF3.i4521, align 8
  %4321 = load i64, i64* %xFAB77A3F.i4520, align 8
  %4322 = load i64, i64* %x2221EDF3.i4521, align 8
  %xor32.i4580 = xor i64 %4321, %4322
  store i64 %xor32.i4580, i64* %xD89697CC.i4522, align 8
  %4323 = load i64, i64* %x7FA7FF69.i4512, align 8
  %4324 = load i64, i64* %a2.addr.i4487, align 8
  %neg33.i4581 = xor i64 %4324, -1
  %and34.i4582 = and i64 %4323, %neg33.i4581
  store i64 %and34.i4582, i64* %x20.i4541, align 8
  %4325 = load i64, i64* %x20.i4541, align 8
  %4326 = load i64, i64* %xD89697CC.i4522, align 8
  %xor35.i4583 = xor i64 %4325, %4326
  store i64 %xor35.i4583, i64* %x21.i4542, align 8
  %4327 = load i64*, i64** %out3.addr.i4494, align 8
  %4328 = load i64, i64* %4327, align 8
  %4329 = load i64, i64* %x21.i4542, align 8
  %xor36.i4584 = xor i64 %4328, %4329
  %4330 = load i64*, i64** %out3.addr.i4494, align 8
  store i64 %xor36.i4584, i64* %4330, align 8
  %4331 = load i64, i64* %x00FFFF00.i4503, align 8
  %4332 = load i64, i64* %x054885C0.i4519, align 8
  %xor37.i4585 = xor i64 %4331, %4332
  store i64 %xor37.i4585, i64* %x05B77AC0.i4523, align 8
  %4333 = load i64, i64* %x00D20096.i4511, align 8
  %4334 = load i64, i64* %x05B77AC0.i4523, align 8
  %or38.i4586 = or i64 %4333, %4334
  store i64 %or38.i4586, i64* %x05F77AD6.i4524, align 8
  %4335 = load i64, i64* %x3333FFFF.i4498, align 8
  %4336 = load i64, i64* %x05F77AD6.i4524, align 8
  %xor39.i4587 = xor i64 %4335, %4336
  store i64 %xor39.i4587, i64* %x36C48529.i4525, align 8
  %4337 = load i64, i64* %a1.addr.i4486, align 8
  %4338 = load i64, i64* %x36C48529.i4525, align 8
  %xor40.i4588 = xor i64 %4337, %4338
  store i64 %xor40.i4588, i64* %x6391D07C.i4526, align 8
  %4339 = load i64, i64* %xD89697CC.i4522, align 8
  %4340 = load i64, i64* %x6391D07C.i4526, align 8
  %xor41.i4589 = xor i64 %4339, %4340
  store i64 %xor41.i4589, i64* %xBB0747B0.i4527, align 8
  %4341 = load i64, i64* %x25202160.i4502, align 8
  %4342 = load i64, i64* %a2.addr.i4487, align 8
  %or42.i4590 = or i64 %4341, %4342
  store i64 %or42.i4590, i64* %x00.i4537, align 8
  %4343 = load i64, i64* %x00.i4537, align 8
  %4344 = load i64, i64* %xBB0747B0.i4527, align 8
  %xor43.i4591 = xor i64 %4343, %4344
  store i64 %xor43.i4591, i64* %x01.i4538, align 8
  %4345 = load i64*, i64** %out1.addr.i4492, align 8
  %4346 = load i64, i64* %4345, align 8
  %4347 = load i64, i64* %x01.i4538, align 8
  %xor44.i4592 = xor i64 %4346, %4347
  %4348 = load i64*, i64** %out1.addr.i4492, align 8
  store i64 %xor44.i4592, i64* %4348, align 8
  %4349 = load i64, i64* %x3333FFFF.i4498, align 8
  %4350 = load i64, i64* %x7F75FFFF.i4510, align 8
  %xor45.i4593 = xor i64 %4349, %4350
  store i64 %xor45.i4593, i64* %x4C460000.i4528, align 8
  %4351 = load i64, i64* %x0AD99996.i4516, align 8
  %4352 = load i64, i64* %x4C460000.i4528, align 8
  %or46.i4594 = or i64 %4351, %4352
  store i64 %or46.i4594, i64* %x4EDF9996.i4529, align 8
  %4353 = load i64, i64* %x6391D07C.i4526, align 8
  %4354 = load i64, i64* %x4EDF9996.i4529, align 8
  %xor47.i4595 = xor i64 %4353, %4354
  store i64 %xor47.i4595, i64* %x2D4E49EA.i4530, align 8
  %4355 = load i64, i64* %x00FFFF00.i4503, align 8
  %4356 = load i64, i64* %xBB0747B0.i4527, align 8
  %or48.i4596 = or i64 %4355, %4356
  store i64 %or48.i4596, i64* %xBBFFFFB0.i4531, align 8
  %4357 = load i64, i64* %x2D4E49EA.i4530, align 8
  %4358 = load i64, i64* %xBBFFFFB0.i4531, align 8
  %xor49.i4597 = xor i64 %4357, %4358
  store i64 %xor49.i4597, i64* %x96B1B65A.i4532, align 8
  %4359 = load i64, i64* %x4A01CC93.i4508, align 8
  %4360 = load i64, i64* %a2.addr.i4487, align 8
  %or50.i4598 = or i64 %4359, %4360
  store i64 %or50.i4598, i64* %x10.i4539, align 8
  %4361 = load i64, i64* %x10.i4539, align 8
  %4362 = load i64, i64* %x96B1B65A.i4532, align 8
  %xor51.i4599 = xor i64 %4361, %4362
  store i64 %xor51.i4599, i64* %x11.i4540, align 8
  %4363 = load i64*, i64** %out2.addr.i4493, align 8
  %4364 = load i64, i64* %4363, align 8
  %4365 = load i64, i64* %x11.i4540, align 8
  %xor52.i4600 = xor i64 %4364, %4365
  %4366 = load i64*, i64** %out2.addr.i4493, align 8
  store i64 %xor52.i4600, i64* %4366, align 8
  %4367 = load i64, i64* %a5.addr.i4490, align 8
  %4368 = load i64, i64* %x5A0F5A0F.i4497, align 8
  %or53.i4601 = or i64 %4367, %4368
  store i64 %or53.i4601, i64* %x5AFF5AFF.i4533, align 8
  %4369 = load i64, i64* %x5AFF5AFF.i4533, align 8
  %4370 = load i64, i64* %x2D4E49EA.i4530, align 8
  %neg54.i4602 = xor i64 %4370, -1
  %and55.i4603 = and i64 %4369, %neg54.i4602
  store i64 %and55.i4603, i64* %x52B11215.i4534, align 8
  %4371 = load i64, i64* %x4A01CC93.i4508, align 8
  %4372 = load i64, i64* %x6391D07C.i4526, align 8
  %and56.i4604 = and i64 %4371, %4372
  store i64 %and56.i4604, i64* %x4201C010.i4535, align 8
  %4373 = load i64, i64* %x52B11215.i4534, align 8
  %4374 = load i64, i64* %x4201C010.i4535, align 8
  %xor57.i4605 = xor i64 %4373, %4374
  store i64 %xor57.i4605, i64* %x10B0D205.i4536, align 8
  %4375 = load i64, i64* %x10B0D205.i4536, align 8
  %4376 = load i64, i64* %a2.addr.i4487, align 8
  %or58.i4606 = or i64 %4375, %4376
  store i64 %or58.i4606, i64* %x30.i4543, align 8
  %4377 = load i64, i64* %x30.i4543, align 8
  %4378 = load i64, i64* %x0AD99996.i4516, align 8
  %xor59.i4607 = xor i64 %4377, %4378
  store i64 %xor59.i4607, i64* %x31.i4544, align 8
  %4379 = load i64*, i64** %out4.addr.i4495, align 8
  %4380 = load i64, i64* %4379, align 8
  %4381 = load i64, i64* %x31.i4544, align 8
  %xor60.i4608 = xor i64 %4380, %4381
  %4382 = load i64*, i64** %out4.addr.i4495, align 8
  store i64 %xor60.i4608, i64* %4382, align 8
  %4383 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 54), align 8
  %arrayidx703 = getelementptr inbounds i64, i64* %4383, i64 0
  %4384 = load i64, i64* %arrayidx703, align 8
  %4385 = load i64**, i64*** %k, align 8
  %arrayidx704 = getelementptr inbounds i64*, i64** %4385, i64 54
  %4386 = load i64*, i64** %arrayidx704, align 8
  %arrayidx705 = getelementptr inbounds i64, i64* %4386, i64 0
  %4387 = load i64, i64* %arrayidx705, align 8
  %xor706 = xor i64 %4384, %4387
  %4388 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 55), align 8
  %arrayidx707 = getelementptr inbounds i64, i64* %4388, i64 0
  %4389 = load i64, i64* %arrayidx707, align 8
  %4390 = load i64**, i64*** %k, align 8
  %arrayidx708 = getelementptr inbounds i64*, i64** %4390, i64 55
  %4391 = load i64*, i64** %arrayidx708, align 8
  %arrayidx709 = getelementptr inbounds i64, i64* %4391, i64 0
  %4392 = load i64, i64* %arrayidx709, align 8
  %xor710 = xor i64 %4389, %4392
  %4393 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 56), align 8
  %arrayidx711 = getelementptr inbounds i64, i64* %4393, i64 0
  %4394 = load i64, i64* %arrayidx711, align 8
  %4395 = load i64**, i64*** %k, align 8
  %arrayidx712 = getelementptr inbounds i64*, i64** %4395, i64 56
  %4396 = load i64*, i64** %arrayidx712, align 8
  %arrayidx713 = getelementptr inbounds i64, i64* %4396, i64 0
  %4397 = load i64, i64* %arrayidx713, align 8
  %xor714 = xor i64 %4394, %4397
  %4398 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 57), align 8
  %arrayidx715 = getelementptr inbounds i64, i64* %4398, i64 0
  %4399 = load i64, i64* %arrayidx715, align 8
  %4400 = load i64**, i64*** %k, align 8
  %arrayidx716 = getelementptr inbounds i64*, i64** %4400, i64 57
  %4401 = load i64*, i64** %arrayidx716, align 8
  %arrayidx717 = getelementptr inbounds i64, i64* %4401, i64 0
  %4402 = load i64, i64* %arrayidx717, align 8
  %xor718 = xor i64 %4399, %4402
  %4403 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 58), align 8
  %arrayidx719 = getelementptr inbounds i64, i64* %4403, i64 0
  %4404 = load i64, i64* %arrayidx719, align 8
  %4405 = load i64**, i64*** %k, align 8
  %arrayidx720 = getelementptr inbounds i64*, i64** %4405, i64 58
  %4406 = load i64*, i64** %arrayidx720, align 8
  %arrayidx721 = getelementptr inbounds i64, i64* %4406, i64 0
  %4407 = load i64, i64* %arrayidx721, align 8
  %xor722 = xor i64 %4404, %4407
  %4408 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 59), align 8
  %arrayidx723 = getelementptr inbounds i64, i64* %4408, i64 0
  %4409 = load i64, i64* %arrayidx723, align 8
  %4410 = load i64**, i64*** %k, align 8
  %arrayidx724 = getelementptr inbounds i64*, i64** %4410, i64 59
  %4411 = load i64*, i64** %arrayidx724, align 8
  %arrayidx725 = getelementptr inbounds i64, i64* %4411, i64 0
  %4412 = load i64, i64* %arrayidx725, align 8
  %xor726 = xor i64 %4409, %4412
  store i64 %xor706, i64* %a1.addr.i4372, align 8
  store i64 %xor710, i64* %a2.addr.i4373, align 8
  store i64 %xor714, i64* %a3.addr.i4374, align 8
  store i64 %xor718, i64* %a4.addr.i4375, align 8
  store i64 %xor722, i64* %a5.addr.i4376, align 8
  store i64 %xor726, i64* %a6.addr.i4377, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 12), i64** %out1.addr.i4378, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 27), i64** %out2.addr.i4379, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 1), i64** %out3.addr.i4380, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 17), i64** %out4.addr.i4381, align 8
  %4413 = load i64, i64* %a2.addr.i4373, align 8
  %4414 = load i64, i64* %a5.addr.i4376, align 8
  %xor.i4426 = xor i64 %4413, %4414
  store i64 %xor.i4426, i64* %x33CC33CC.i4382, align 8
  %4415 = load i64, i64* %a1.addr.i4372, align 8
  %4416 = load i64, i64* %a6.addr.i4377, align 8
  %neg.i4427 = xor i64 %4416, -1
  %and.i4428 = and i64 %4415, %neg.i4427
  store i64 %and.i4428, i64* %x55550000.i4383, align 8
  %4417 = load i64, i64* %a5.addr.i4376, align 8
  %4418 = load i64, i64* %x55550000.i4383, align 8
  %neg1.i4429 = xor i64 %4418, -1
  %and2.i4430 = and i64 %4417, %neg1.i4429
  store i64 %and2.i4430, i64* %x00AA00FF.i4384, align 8
  %4419 = load i64, i64* %a2.addr.i4373, align 8
  %4420 = load i64, i64* %x00AA00FF.i4384, align 8
  %or.i4431 = or i64 %4419, %4420
  store i64 %or.i4431, i64* %x33BB33FF.i4385, align 8
  %4421 = load i64, i64* %x33CC33CC.i4382, align 8
  %4422 = load i64, i64* %a6.addr.i4377, align 8
  %neg3.i4432 = xor i64 %4422, -1
  %and4.i4433 = and i64 %4421, %neg3.i4432
  store i64 %and4.i4433, i64* %x33CC0000.i4386, align 8
  %4423 = load i64, i64* %a1.addr.i4372, align 8
  %4424 = load i64, i64* %x33CC33CC.i4382, align 8
  %and5.i4434 = and i64 %4423, %4424
  store i64 %and5.i4434, i64* %x11441144.i4387, align 8
  %4425 = load i64, i64* %a5.addr.i4376, align 8
  %4426 = load i64, i64* %x11441144.i4387, align 8
  %xor6.i4435 = xor i64 %4425, %4426
  store i64 %xor6.i4435, i64* %x11BB11BB.i4388, align 8
  %4427 = load i64, i64* %x11BB11BB.i4388, align 8
  %4428 = load i64, i64* %x33CC0000.i4386, align 8
  %neg7.i4436 = xor i64 %4428, -1
  %and8.i4437 = and i64 %4427, %neg7.i4436
  store i64 %and8.i4437, i64* %x003311BB.i4389, align 8
  %4429 = load i64, i64* %a3.addr.i4374, align 8
  %4430 = load i64, i64* %a6.addr.i4377, align 8
  %and9.i4438 = and i64 %4429, %4430
  store i64 %and9.i4438, i64* %x00000F0F.i4390, align 8
  %4431 = load i64, i64* %x00AA00FF.i4384, align 8
  %4432 = load i64, i64* %x33CC0000.i4386, align 8
  %xor10.i4439 = xor i64 %4431, %4432
  store i64 %xor10.i4439, i64* %x336600FF.i4391, align 8
  %4433 = load i64, i64* %x33BB33FF.i4385, align 8
  %4434 = load i64, i64* %x336600FF.i4391, align 8
  %and11.i4440 = and i64 %4433, %4434
  store i64 %and11.i4440, i64* %x332200FF.i4392, align 8
  %4435 = load i64, i64* %x332200FF.i4392, align 8
  %4436 = load i64, i64* %x00000F0F.i4390, align 8
  %neg12.i4441 = xor i64 %4436, -1
  %and13.i4442 = and i64 %4435, %neg12.i4441
  store i64 %and13.i4442, i64* %x332200F0.i4393, align 8
  %4437 = load i64, i64* %a3.addr.i4374, align 8
  %4438 = load i64, i64* %x332200FF.i4392, align 8
  %and14.i4443 = and i64 %4437, %4438
  store i64 %and14.i4443, i64* %x0302000F.i4394, align 8
  %4439 = load i64, i64* %a1.addr.i4372, align 8
  %neg15.i4444 = xor i64 %4439, -1
  store i64 %neg15.i4444, i64* %xAAAAAAAA.i4395, align 8
  %4440 = load i64, i64* %x0302000F.i4394, align 8
  %4441 = load i64, i64* %xAAAAAAAA.i4395, align 8
  %xor16.i4445 = xor i64 %4440, %4441
  store i64 %xor16.i4445, i64* %xA9A8AAA5.i4396, align 8
  %4442 = load i64, i64* %a6.addr.i4377, align 8
  %4443 = load i64, i64* %x33CC33CC.i4382, align 8
  %xor17.i4446 = xor i64 %4442, %4443
  store i64 %xor17.i4446, i64* %x33CCCC33.i4397, align 8
  %4444 = load i64, i64* %x33CCCC33.i4397, align 8
  %4445 = load i64, i64* %x00000F0F.i4390, align 8
  %neg18.i4447 = xor i64 %4445, -1
  %and19.i4448 = and i64 %4444, %neg18.i4447
  store i64 %and19.i4448, i64* %x33CCC030.i4398, align 8
  %4446 = load i64, i64* %xA9A8AAA5.i4396, align 8
  %4447 = load i64, i64* %x33CCC030.i4398, align 8
  %xor20.i4449 = xor i64 %4446, %4447
  store i64 %xor20.i4449, i64* %x9A646A95.i4399, align 8
  %4448 = load i64, i64* %a4.addr.i4375, align 8
  %4449 = load i64, i64* %x332200F0.i4393, align 8
  %neg21.i4450 = xor i64 %4449, -1
  %and22.i4451 = and i64 %4448, %neg21.i4450
  store i64 %and22.i4451, i64* %x10.i4420, align 8
  %4450 = load i64, i64* %x10.i4420, align 8
  %4451 = load i64, i64* %x9A646A95.i4399, align 8
  %xor23.i4452 = xor i64 %4450, %4451
  store i64 %xor23.i4452, i64* %x11.i4421, align 8
  %4452 = load i64*, i64** %out2.addr.i4379, align 8
  %4453 = load i64, i64* %4452, align 8
  %4454 = load i64, i64* %x11.i4421, align 8
  %xor24.i4453 = xor i64 %4453, %4454
  %4455 = load i64*, i64** %out2.addr.i4379, align 8
  store i64 %xor24.i4453, i64* %4455, align 8
  %4456 = load i64, i64* %a2.addr.i4373, align 8
  %4457 = load i64, i64* %x33CCC030.i4398, align 8
  %neg25.i4454 = xor i64 %4457, -1
  %and26.i4455 = and i64 %4456, %neg25.i4454
  store i64 %and26.i4455, i64* %x00333303.i4400, align 8
  %4458 = load i64, i64* %x11BB11BB.i4388, align 8
  %4459 = load i64, i64* %x00333303.i4400, align 8
  %xor27.i4456 = xor i64 %4458, %4459
  store i64 %xor27.i4456, i64* %x118822B8.i4401, align 8
  %4460 = load i64, i64* %xA9A8AAA5.i4396, align 8
  %4461 = load i64, i64* %x118822B8.i4401, align 8
  %neg28.i4457 = xor i64 %4461, -1
  %and29.i4458 = and i64 %4460, %neg28.i4457
  store i64 %and29.i4458, i64* %xA8208805.i4402, align 8
  %4462 = load i64, i64* %a3.addr.i4374, align 8
  %4463 = load i64, i64* %x33CCCC33.i4397, align 8
  %xor30.i4459 = xor i64 %4462, %4463
  store i64 %xor30.i4459, i64* %x3CC3C33C.i4403, align 8
  %4464 = load i64, i64* %xA8208805.i4402, align 8
  %4465 = load i64, i64* %x3CC3C33C.i4403, align 8
  %xor31.i4460 = xor i64 %4464, %4465
  store i64 %xor31.i4460, i64* %x94E34B39.i4404, align 8
  %4466 = load i64, i64* %x33BB33FF.i4385, align 8
  %4467 = load i64, i64* %a4.addr.i4375, align 8
  %neg32.i4461 = xor i64 %4467, -1
  %and33.i4462 = and i64 %4466, %neg32.i4461
  store i64 %and33.i4462, i64* %x00.i4418, align 8
  %4468 = load i64, i64* %x00.i4418, align 8
  %4469 = load i64, i64* %x94E34B39.i4404, align 8
  %xor34.i4463 = xor i64 %4468, %4469
  store i64 %xor34.i4463, i64* %x01.i4419, align 8
  %4470 = load i64*, i64** %out1.addr.i4378, align 8
  %4471 = load i64, i64* %4470, align 8
  %4472 = load i64, i64* %x01.i4419, align 8
  %xor35.i4464 = xor i64 %4471, %4472
  %4473 = load i64*, i64** %out1.addr.i4378, align 8
  store i64 %xor35.i4464, i64* %4473, align 8
  %4474 = load i64, i64* %x0302000F.i4394, align 8
  %4475 = load i64, i64* %x00333303.i4400, align 8
  %xor36.i4465 = xor i64 %4474, %4475
  store i64 %xor36.i4465, i64* %x0331330C.i4405, align 8
  %4476 = load i64, i64* %x3CC3C33C.i4403, align 8
  %4477 = load i64, i64* %x0331330C.i4405, align 8
  %or37.i4466 = or i64 %4476, %4477
  store i64 %or37.i4466, i64* %x3FF3F33C.i4406, align 8
  %4478 = load i64, i64* %x33BB33FF.i4385, align 8
  %4479 = load i64, i64* %x9A646A95.i4399, align 8
  %xor38.i4467 = xor i64 %4478, %4479
  store i64 %xor38.i4467, i64* %xA9DF596A.i4407, align 8
  %4480 = load i64, i64* %x00000F0F.i4390, align 8
  %4481 = load i64, i64* %xA9DF596A.i4407, align 8
  %or39.i4468 = or i64 %4480, %4481
  store i64 %or39.i4468, i64* %xA9DF5F6F.i4408, align 8
  %4482 = load i64, i64* %x3FF3F33C.i4406, align 8
  %4483 = load i64, i64* %xA9DF5F6F.i4408, align 8
  %xor40.i4469 = xor i64 %4482, %4483
  store i64 %xor40.i4469, i64* %x962CAC53.i4409, align 8
  %4484 = load i64, i64* %x94E34B39.i4404, align 8
  %4485 = load i64, i64* %x0331330C.i4405, align 8
  %xor41.i4470 = xor i64 %4484, %4485
  store i64 %xor41.i4470, i64* %x97D27835.i4410, align 8
  %4486 = load i64, i64* %xA9DF5F6F.i4408, align 8
  %4487 = load i64, i64* %x97D27835.i4410, align 8
  %and42.i4471 = and i64 %4486, %4487
  store i64 %and42.i4471, i64* %x81D25825.i4411, align 8
  %4488 = load i64, i64* %a5.addr.i4376, align 8
  %4489 = load i64, i64* %x81D25825.i4411, align 8
  %xor43.i4472 = xor i64 %4488, %4489
  store i64 %xor43.i4472, i64* %x812D58DA.i4412, align 8
  %4490 = load i64, i64* %x812D58DA.i4412, align 8
  %4491 = load i64, i64* %x33CC0000.i4386, align 8
  %neg44.i4473 = xor i64 %4491, -1
  %and45.i4474 = and i64 %4490, %neg44.i4473
  store i64 %and45.i4474, i64* %x802158DA.i4413, align 8
  %4492 = load i64, i64* %x9A646A95.i4399, align 8
  %4493 = load i64, i64* %x802158DA.i4413, align 8
  %xor46.i4475 = xor i64 %4492, %4493
  store i64 %xor46.i4475, i64* %x1A45324F.i4414, align 8
  %4494 = load i64, i64* %x1A45324F.i4414, align 8
  %4495 = load i64, i64* %a4.addr.i4375, align 8
  %or47.i4476 = or i64 %4494, %4495
  store i64 %or47.i4476, i64* %x20.i4422, align 8
  %4496 = load i64, i64* %x20.i4422, align 8
  %4497 = load i64, i64* %x962CAC53.i4409, align 8
  %xor48.i4477 = xor i64 %4496, %4497
  store i64 %xor48.i4477, i64* %x21.i4423, align 8
  %4498 = load i64*, i64** %out3.addr.i4380, align 8
  %4499 = load i64, i64* %4498, align 8
  %4500 = load i64, i64* %x21.i4423, align 8
  %xor49.i4478 = xor i64 %4499, %4500
  %4501 = load i64*, i64** %out3.addr.i4380, align 8
  store i64 %xor49.i4478, i64* %4501, align 8
  %4502 = load i64, i64* %x1A45324F.i4414, align 8
  %4503 = load i64, i64* %x118822B8.i4401, align 8
  %neg50.i4479 = xor i64 %4503, -1
  %and51.i4480 = and i64 %4502, %neg50.i4479
  store i64 %and51.i4480, i64* %x0A451047.i4415, align 8
  %4504 = load i64, i64* %x33CCCC33.i4397, align 8
  %4505 = load i64, i64* %xA9DF596A.i4407, align 8
  %or52.i4481 = or i64 %4504, %4505
  store i64 %or52.i4481, i64* %xBBDFDD7B.i4416, align 8
  %4506 = load i64, i64* %x0A451047.i4415, align 8
  %4507 = load i64, i64* %xBBDFDD7B.i4416, align 8
  %xor53.i4482 = xor i64 %4506, %4507
  store i64 %xor53.i4482, i64* %xB19ACD3C.i4417, align 8
  %4508 = load i64, i64* %x003311BB.i4389, align 8
  %4509 = load i64, i64* %a4.addr.i4375, align 8
  %or54.i4483 = or i64 %4508, %4509
  store i64 %or54.i4483, i64* %x30.i4424, align 8
  %4510 = load i64, i64* %x30.i4424, align 8
  %4511 = load i64, i64* %xB19ACD3C.i4417, align 8
  %xor55.i4484 = xor i64 %4510, %4511
  store i64 %xor55.i4484, i64* %x31.i4425, align 8
  %4512 = load i64*, i64** %out4.addr.i4381, align 8
  %4513 = load i64, i64* %4512, align 8
  %4514 = load i64, i64* %x31.i4425, align 8
  %xor56.i4485 = xor i64 %4513, %4514
  %4515 = load i64*, i64** %out4.addr.i4381, align 8
  store i64 %xor56.i4485, i64* %4515, align 8
  %4516 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 39), align 8
  %4517 = load i64**, i64*** %k, align 8
  %arrayidx727 = getelementptr inbounds i64*, i64** %4517, i64 60
  %4518 = load i64*, i64** %arrayidx727, align 8
  %arrayidx728 = getelementptr inbounds i64, i64* %4518, i64 0
  %4519 = load i64, i64* %arrayidx728, align 8
  %xor729 = xor i64 %4516, %4519
  %4520 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 40), align 8
  %4521 = load i64**, i64*** %k, align 8
  %arrayidx730 = getelementptr inbounds i64*, i64** %4521, i64 61
  %4522 = load i64*, i64** %arrayidx730, align 8
  %arrayidx731 = getelementptr inbounds i64, i64* %4522, i64 0
  %4523 = load i64, i64* %arrayidx731, align 8
  %xor732 = xor i64 %4520, %4523
  %4524 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 41), align 8
  %4525 = load i64**, i64*** %k, align 8
  %arrayidx733 = getelementptr inbounds i64*, i64** %4525, i64 62
  %4526 = load i64*, i64** %arrayidx733, align 8
  %arrayidx734 = getelementptr inbounds i64, i64* %4526, i64 0
  %4527 = load i64, i64* %arrayidx734, align 8
  %xor735 = xor i64 %4524, %4527
  %4528 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 42), align 8
  %4529 = load i64**, i64*** %k, align 8
  %arrayidx736 = getelementptr inbounds i64*, i64** %4529, i64 63
  %4530 = load i64*, i64** %arrayidx736, align 8
  %arrayidx737 = getelementptr inbounds i64, i64* %4530, i64 0
  %4531 = load i64, i64* %arrayidx737, align 8
  %xor738 = xor i64 %4528, %4531
  %4532 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 43), align 8
  %4533 = load i64**, i64*** %k, align 8
  %arrayidx739 = getelementptr inbounds i64*, i64** %4533, i64 64
  %4534 = load i64*, i64** %arrayidx739, align 8
  %arrayidx740 = getelementptr inbounds i64, i64* %4534, i64 0
  %4535 = load i64, i64* %arrayidx740, align 8
  %xor741 = xor i64 %4532, %4535
  %4536 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 44), align 8
  %4537 = load i64**, i64*** %k, align 8
  %arrayidx742 = getelementptr inbounds i64*, i64** %4537, i64 65
  %4538 = load i64*, i64** %arrayidx742, align 8
  %arrayidx743 = getelementptr inbounds i64, i64* %4538, i64 0
  %4539 = load i64, i64* %arrayidx743, align 8
  %xor744 = xor i64 %4536, %4539
  store i64 %xor729, i64* %a1.addr.i4252, align 8
  store i64 %xor732, i64* %a2.addr.i4253, align 8
  store i64 %xor735, i64* %a3.addr.i4254, align 8
  store i64 %xor738, i64* %a4.addr.i4255, align 8
  store i64 %xor741, i64* %a5.addr.i4256, align 8
  store i64 %xor744, i64* %a6.addr.i4257, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 23), i64** %out1.addr.i4258, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 15), i64** %out2.addr.i4259, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 29), i64** %out3.addr.i4260, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 5), i64** %out4.addr.i4261, align 8
  %4540 = load i64, i64* %a1.addr.i4252, align 8
  %4541 = load i64, i64* %a2.addr.i4253, align 8
  %neg.i4308 = xor i64 %4541, -1
  %and.i4309 = and i64 %4540, %neg.i4308
  store i64 %and.i4309, i64* %x44444444.i4262, align 8
  %4542 = load i64, i64* %a3.addr.i4254, align 8
  %4543 = load i64, i64* %a6.addr.i4257, align 8
  %xor.i4310 = xor i64 %4542, %4543
  store i64 %xor.i4310, i64* %x0F0FF0F0.i4263, align 8
  %4544 = load i64, i64* %x44444444.i4262, align 8
  %4545 = load i64, i64* %x0F0FF0F0.i4263, align 8
  %or.i4311 = or i64 %4544, %4545
  store i64 %or.i4311, i64* %x4F4FF4F4.i4264, align 8
  %4546 = load i64, i64* %a4.addr.i4255, align 8
  %4547 = load i64, i64* %a6.addr.i4257, align 8
  %xor1.i4312 = xor i64 %4546, %4547
  store i64 %xor1.i4312, i64* %x00FFFF00.i4265, align 8
  %4548 = load i64, i64* %x00FFFF00.i4265, align 8
  %4549 = load i64, i64* %a1.addr.i4252, align 8
  %neg2.i4313 = xor i64 %4549, -1
  %and3.i4314 = and i64 %4548, %neg2.i4313
  store i64 %and3.i4314, i64* %x00AAAA00.i4266, align 8
  %4550 = load i64, i64* %x4F4FF4F4.i4264, align 8
  %4551 = load i64, i64* %x00AAAA00.i4266, align 8
  %xor4.i4315 = xor i64 %4550, %4551
  store i64 %xor4.i4315, i64* %x4FE55EF4.i4267, align 8
  %4552 = load i64, i64* %a2.addr.i4253, align 8
  %4553 = load i64, i64* %x0F0FF0F0.i4263, align 8
  %xor5.i4316 = xor i64 %4552, %4553
  store i64 %xor5.i4316, i64* %x3C3CC3C3.i4268, align 8
  %4554 = load i64, i64* %x3C3CC3C3.i4268, align 8
  %4555 = load i64, i64* %a6.addr.i4257, align 8
  %neg6.i4317 = xor i64 %4555, -1
  %and7.i4318 = and i64 %4554, %neg6.i4317
  store i64 %and7.i4318, i64* %x3C3C0000.i4269, align 8
  %4556 = load i64, i64* %x4F4FF4F4.i4264, align 8
  %4557 = load i64, i64* %x3C3C0000.i4269, align 8
  %xor8.i4319 = xor i64 %4556, %4557
  store i64 %xor8.i4319, i64* %x7373F4F4.i4270, align 8
  %4558 = load i64, i64* %x4FE55EF4.i4267, align 8
  %4559 = load i64, i64* %x7373F4F4.i4270, align 8
  %neg9.i4320 = xor i64 %4559, -1
  %and10.i4321 = and i64 %4558, %neg9.i4320
  store i64 %and10.i4321, i64* %x0C840A00.i4271, align 8
  %4560 = load i64, i64* %a6.addr.i4257, align 8
  %4561 = load i64, i64* %x4FE55EF4.i4267, align 8
  %and11.i4322 = and i64 %4560, %4561
  store i64 %and11.i4322, i64* %x00005EF4.i4272, align 8
  %4562 = load i64, i64* %a4.addr.i4255, align 8
  %4563 = load i64, i64* %x00005EF4.i4272, align 8
  %or12.i4323 = or i64 %4562, %4563
  store i64 %or12.i4323, i64* %x00FF5EFF.i4273, align 8
  %4564 = load i64, i64* %a1.addr.i4252, align 8
  %4565 = load i64, i64* %x00FF5EFF.i4273, align 8
  %and13.i4324 = and i64 %4564, %4565
  store i64 %and13.i4324, i64* %x00555455.i4274, align 8
  %4566 = load i64, i64* %x3C3CC3C3.i4268, align 8
  %4567 = load i64, i64* %x00555455.i4274, align 8
  %xor14.i4325 = xor i64 %4566, %4567
  store i64 %xor14.i4325, i64* %x3C699796.i4275, align 8
  %4568 = load i64, i64* %x4FE55EF4.i4267, align 8
  %4569 = load i64, i64* %a5.addr.i4256, align 8
  %neg15.i4326 = xor i64 %4569, -1
  %and16.i4327 = and i64 %4568, %neg15.i4326
  store i64 %and16.i4327, i64* %x30.i4306, align 8
  %4570 = load i64, i64* %x30.i4306, align 8
  %4571 = load i64, i64* %x3C699796.i4275, align 8
  %xor17.i4328 = xor i64 %4570, %4571
  store i64 %xor17.i4328, i64* %x31.i4307, align 8
  %4572 = load i64*, i64** %out4.addr.i4261, align 8
  %4573 = load i64, i64* %4572, align 8
  %4574 = load i64, i64* %x31.i4307, align 8
  %xor18.i4329 = xor i64 %4573, %4574
  %4575 = load i64*, i64** %out4.addr.i4261, align 8
  store i64 %xor18.i4329, i64* %4575, align 8
  %4576 = load i64, i64* %x0F0FF0F0.i4263, align 8
  %4577 = load i64, i64* %x00FFFF00.i4265, align 8
  %and19.i4330 = and i64 %4576, %4577
  store i64 %and19.i4330, i64* %x000FF000.i4276, align 8
  %4578 = load i64, i64* %a1.addr.i4252, align 8
  %4579 = load i64, i64* %a4.addr.i4255, align 8
  %xor20.i4331 = xor i64 %4578, %4579
  store i64 %xor20.i4331, i64* %x55AA55AA.i4277, align 8
  %4580 = load i64, i64* %x7373F4F4.i4270, align 8
  %4581 = load i64, i64* %x55AA55AA.i4277, align 8
  %xor21.i4332 = xor i64 %4580, %4581
  store i64 %xor21.i4332, i64* %x26D9A15E.i4278, align 8
  %4582 = load i64, i64* %a3.addr.i4254, align 8
  %4583 = load i64, i64* %x26D9A15E.i4278, align 8
  %or22.i4333 = or i64 %4582, %4583
  store i64 %or22.i4333, i64* %x2FDFAF5F.i4279, align 8
  %4584 = load i64, i64* %x2FDFAF5F.i4279, align 8
  %4585 = load i64, i64* %x000FF000.i4276, align 8
  %neg23.i4334 = xor i64 %4585, -1
  %and24.i4335 = and i64 %4584, %neg23.i4334
  store i64 %and24.i4335, i64* %x2FD00F5F.i4280, align 8
  %4586 = load i64, i64* %x00AAAA00.i4266, align 8
  %4587 = load i64, i64* %x55AA55AA.i4277, align 8
  %or25.i4336 = or i64 %4586, %4587
  store i64 %or25.i4336, i64* %x55AAFFAA.i4281, align 8
  %4588 = load i64, i64* %x3C699796.i4275, align 8
  %4589 = load i64, i64* %x55AAFFAA.i4281, align 8
  %neg26.i4337 = xor i64 %4589, -1
  %and27.i4338 = and i64 %4588, %neg26.i4337
  store i64 %and27.i4338, i64* %x28410014.i4282, align 8
  %4590 = load i64, i64* %a4.addr.i4255, align 8
  %4591 = load i64, i64* %a6.addr.i4257, align 8
  %and28.i4339 = and i64 %4590, %4591
  store i64 %and28.i4339, i64* %x000000FF.i4283, align 8
  %4592 = load i64, i64* %x000000FF.i4283, align 8
  %4593 = load i64, i64* %a2.addr.i4253, align 8
  %neg29.i4340 = xor i64 %4593, -1
  %and30.i4341 = and i64 %4592, %neg29.i4340
  store i64 %and30.i4341, i64* %x000000CC.i4284, align 8
  %4594 = load i64, i64* %x28410014.i4282, align 8
  %4595 = load i64, i64* %x000000CC.i4284, align 8
  %xor31.i4342 = xor i64 %4594, %4595
  store i64 %xor31.i4342, i64* %x284100D8.i4285, align 8
  %4596 = load i64, i64* %x284100D8.i4285, align 8
  %4597 = load i64, i64* %a3.addr.i4254, align 8
  %neg32.i4343 = xor i64 %4597, -1
  %and33.i4344 = and i64 %4596, %neg32.i4343
  store i64 %and33.i4344, i64* %x204000D0.i4286, align 8
  %4598 = load i64, i64* %x3C3CC3C3.i4268, align 8
  %4599 = load i64, i64* %x000000FF.i4283, align 8
  %or34.i4345 = or i64 %4598, %4599
  store i64 %or34.i4345, i64* %x3C3CC3FF.i4287, align 8
  %4600 = load i64, i64* %x3C3CC3FF.i4287, align 8
  %4601 = load i64, i64* %x204000D0.i4286, align 8
  %neg35.i4346 = xor i64 %4601, -1
  %and36.i4347 = and i64 %4600, %neg35.i4346
  store i64 %and36.i4347, i64* %x1C3CC32F.i4288, align 8
  %4602 = load i64, i64* %a1.addr.i4252, align 8
  %4603 = load i64, i64* %x1C3CC32F.i4288, align 8
  %xor37.i4348 = xor i64 %4602, %4603
  store i64 %xor37.i4348, i64* %x4969967A.i4289, align 8
  %4604 = load i64, i64* %x2FD00F5F.i4280, align 8
  %4605 = load i64, i64* %a5.addr.i4256, align 8
  %and38.i4349 = and i64 %4604, %4605
  store i64 %and38.i4349, i64* %x10.i4302, align 8
  %4606 = load i64, i64* %x10.i4302, align 8
  %4607 = load i64, i64* %x4969967A.i4289, align 8
  %xor39.i4350 = xor i64 %4606, %4607
  store i64 %xor39.i4350, i64* %x11.i4303, align 8
  %4608 = load i64*, i64** %out2.addr.i4259, align 8
  %4609 = load i64, i64* %4608, align 8
  %4610 = load i64, i64* %x11.i4303, align 8
  %xor40.i4351 = xor i64 %4609, %4610
  %4611 = load i64*, i64** %out2.addr.i4259, align 8
  store i64 %xor40.i4351, i64* %4611, align 8
  %4612 = load i64, i64* %x4FE55EF4.i4267, align 8
  %4613 = load i64, i64* %a2.addr.i4253, align 8
  %neg41.i4352 = xor i64 %4613, -1
  %and42.i4353 = and i64 %4612, %neg41.i4352
  store i64 %and42.i4353, i64* %x4CC44CC4.i4290, align 8
  %4614 = load i64, i64* %x4CC44CC4.i4290, align 8
  %4615 = load i64, i64* %a3.addr.i4254, align 8
  %neg43.i4354 = xor i64 %4615, -1
  %and44.i4355 = and i64 %4614, %neg43.i4354
  store i64 %and44.i4355, i64* %x40C040C0.i4291, align 8
  %4616 = load i64, i64* %x3C3CC3C3.i4268, align 8
  %4617 = load i64, i64* %x55AAFFAA.i4281, align 8
  %xor45.i4356 = xor i64 %4616, %4617
  store i64 %xor45.i4356, i64* %x69963C69.i4292, align 8
  %4618 = load i64, i64* %x69963C69.i4292, align 8
  %neg46.i4357 = xor i64 %4618, -1
  store i64 %neg46.i4357, i64* %x9669C396.i4293, align 8
  %4619 = load i64, i64* %x40C040C0.i4291, align 8
  %4620 = load i64, i64* %x9669C396.i4293, align 8
  %xor47.i4358 = xor i64 %4619, %4620
  store i64 %xor47.i4358, i64* %xD6A98356.i4294, align 8
  %4621 = load i64, i64* %a5.addr.i4256, align 8
  %4622 = load i64, i64* %x0C840A00.i4271, align 8
  %neg48.i4359 = xor i64 %4622, -1
  %and49.i4360 = and i64 %4621, %neg48.i4359
  store i64 %and49.i4360, i64* %x00.i4300, align 8
  %4623 = load i64, i64* %x00.i4300, align 8
  %4624 = load i64, i64* %xD6A98356.i4294, align 8
  %xor50.i4361 = xor i64 %4623, %4624
  store i64 %xor50.i4361, i64* %x01.i4301, align 8
  %4625 = load i64*, i64** %out1.addr.i4258, align 8
  %4626 = load i64, i64* %4625, align 8
  %4627 = load i64, i64* %x01.i4301, align 8
  %xor51.i4362 = xor i64 %4626, %4627
  %4628 = load i64*, i64** %out1.addr.i4258, align 8
  store i64 %xor51.i4362, i64* %4628, align 8
  %4629 = load i64, i64* %a4.addr.i4255, align 8
  %4630 = load i64, i64* %x0F0FF0F0.i4263, align 8
  %and52.i4363 = and i64 %4629, %4630
  store i64 %and52.i4363, i64* %x000F00F0.i4295, align 8
  %4631 = load i64, i64* %x3C3CC3C3.i4268, align 8
  %4632 = load i64, i64* %xD6A98356.i4294, align 8
  %or53.i4364 = or i64 %4631, %4632
  store i64 %or53.i4364, i64* %xFEBDC3D7.i4296, align 8
  %4633 = load i64, i64* %xFEBDC3D7.i4296, align 8
  %4634 = load i64, i64* %x000F00F0.i4295, align 8
  %neg54.i4365 = xor i64 %4634, -1
  %and55.i4366 = and i64 %4633, %neg54.i4365
  store i64 %and55.i4366, i64* %xFEB0C307.i4297, align 8
  %4635 = load i64, i64* %x00AAAA00.i4266, align 8
  %4636 = load i64, i64* %x4CC44CC4.i4290, align 8
  %or56.i4367 = or i64 %4635, %4636
  store i64 %or56.i4367, i64* %x4CEEEEC4.i4298, align 8
  %4637 = load i64, i64* %xFEB0C307.i4297, align 8
  %4638 = load i64, i64* %x4CEEEEC4.i4298, align 8
  %xor57.i4368 = xor i64 %4637, %4638
  store i64 %xor57.i4368, i64* %xB25E2DC3.i4299, align 8
  %4639 = load i64, i64* %x284100D8.i4285, align 8
  %4640 = load i64, i64* %a5.addr.i4256, align 8
  %or58.i4369 = or i64 %4639, %4640
  store i64 %or58.i4369, i64* %x20.i4304, align 8
  %4641 = load i64, i64* %x20.i4304, align 8
  %4642 = load i64, i64* %xB25E2DC3.i4299, align 8
  %xor59.i4370 = xor i64 %4641, %4642
  store i64 %xor59.i4370, i64* %x21.i4305, align 8
  %4643 = load i64*, i64** %out3.addr.i4260, align 8
  %4644 = load i64, i64* %4643, align 8
  %4645 = load i64, i64* %x21.i4305, align 8
  %xor60.i4371 = xor i64 %4644, %4645
  %4646 = load i64*, i64** %out3.addr.i4260, align 8
  store i64 %xor60.i4371, i64* %4646, align 8
  %4647 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 43), align 8
  %4648 = load i64**, i64*** %k, align 8
  %arrayidx745 = getelementptr inbounds i64*, i64** %4648, i64 66
  %4649 = load i64*, i64** %arrayidx745, align 8
  %arrayidx746 = getelementptr inbounds i64, i64* %4649, i64 0
  %4650 = load i64, i64* %arrayidx746, align 8
  %xor747 = xor i64 %4647, %4650
  %4651 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 44), align 8
  %4652 = load i64**, i64*** %k, align 8
  %arrayidx748 = getelementptr inbounds i64*, i64** %4652, i64 67
  %4653 = load i64*, i64** %arrayidx748, align 8
  %arrayidx749 = getelementptr inbounds i64, i64* %4653, i64 0
  %4654 = load i64, i64* %arrayidx749, align 8
  %xor750 = xor i64 %4651, %4654
  %4655 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 45), align 8
  %4656 = load i64**, i64*** %k, align 8
  %arrayidx751 = getelementptr inbounds i64*, i64** %4656, i64 68
  %4657 = load i64*, i64** %arrayidx751, align 8
  %arrayidx752 = getelementptr inbounds i64, i64* %4657, i64 0
  %4658 = load i64, i64* %arrayidx752, align 8
  %xor753 = xor i64 %4655, %4658
  %4659 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 46), align 8
  %4660 = load i64**, i64*** %k, align 8
  %arrayidx754 = getelementptr inbounds i64*, i64** %4660, i64 69
  %4661 = load i64*, i64** %arrayidx754, align 8
  %arrayidx755 = getelementptr inbounds i64, i64* %4661, i64 0
  %4662 = load i64, i64* %arrayidx755, align 8
  %xor756 = xor i64 %4659, %4662
  %4663 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 47), align 8
  %4664 = load i64**, i64*** %k, align 8
  %arrayidx757 = getelementptr inbounds i64*, i64** %4664, i64 70
  %4665 = load i64*, i64** %arrayidx757, align 8
  %arrayidx758 = getelementptr inbounds i64, i64* %4665, i64 0
  %4666 = load i64, i64* %arrayidx758, align 8
  %xor759 = xor i64 %4663, %4666
  %4667 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 48), align 8
  %4668 = load i64**, i64*** %k, align 8
  %arrayidx760 = getelementptr inbounds i64*, i64** %4668, i64 71
  %4669 = load i64*, i64** %arrayidx760, align 8
  %arrayidx761 = getelementptr inbounds i64, i64* %4669, i64 0
  %4670 = load i64, i64* %arrayidx761, align 8
  %xor762 = xor i64 %4667, %4670
  store i64 %xor747, i64* %a1.addr.i4163, align 8
  store i64 %xor750, i64* %a2.addr.i4164, align 8
  store i64 %xor753, i64* %a3.addr.i4165, align 8
  store i64 %xor756, i64* %a4.addr.i4166, align 8
  store i64 %xor759, i64* %a5.addr.i4167, align 8
  store i64 %xor762, i64* %a6.addr.i4168, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 25), i64** %out1.addr.i4169, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 19), i64** %out2.addr.i4170, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 9), i64** %out3.addr.i4171, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 0), i64** %out4.addr.i4172, align 8
  %4671 = load i64, i64* %a1.addr.i4163, align 8
  %4672 = load i64, i64* %a3.addr.i4165, align 8
  %xor.i4206 = xor i64 %4671, %4672
  store i64 %xor.i4206, i64* %x5A5A5A5A.i4173, align 8
  %4673 = load i64, i64* %a3.addr.i4165, align 8
  %4674 = load i64, i64* %a5.addr.i4167, align 8
  %xor1.i4207 = xor i64 %4673, %4674
  store i64 %xor1.i4207, i64* %x0F0FF0F0.i4174, align 8
  %4675 = load i64, i64* %a2.addr.i4164, align 8
  %4676 = load i64, i64* %a4.addr.i4166, align 8
  %or.i4208 = or i64 %4675, %4676
  store i64 %or.i4208, i64* %x33FF33FF.i4175, align 8
  %4677 = load i64, i64* %a5.addr.i4167, align 8
  %4678 = load i64, i64* %x33FF33FF.i4175, align 8
  %xor2.i4209 = xor i64 %4677, %4678
  store i64 %xor2.i4209, i64* %x33FFCC00.i4176, align 8
  %4679 = load i64, i64* %x0F0FF0F0.i4174, align 8
  %4680 = load i64, i64* %x33FFCC00.i4176, align 8
  %neg.i4210 = xor i64 %4680, -1
  %and.i4211 = and i64 %4679, %neg.i4210
  store i64 %and.i4211, i64* %x0C0030F0.i4177, align 8
  %4681 = load i64, i64* %x0F0FF0F0.i4174, align 8
  %4682 = load i64, i64* %a2.addr.i4164, align 8
  %neg3.i4212 = xor i64 %4682, -1
  %and4.i4213 = and i64 %4681, %neg3.i4212
  store i64 %and4.i4213, i64* %x0C0CC0C0.i4178, align 8
  %4683 = load i64, i64* %a4.addr.i4166, align 8
  %4684 = load i64, i64* %x0C0CC0C0.i4178, align 8
  %xor5.i4214 = xor i64 %4683, %4684
  store i64 %xor5.i4214, i64* %x0CF3C03F.i4179, align 8
  %4685 = load i64, i64* %x5A5A5A5A.i4173, align 8
  %4686 = load i64, i64* %x0CF3C03F.i4179, align 8
  %or6.i4215 = or i64 %4685, %4686
  store i64 %or6.i4215, i64* %x5EFBDA7F.i4180, align 8
  %4687 = load i64, i64* %x5EFBDA7F.i4180, align 8
  %4688 = load i64, i64* %x0C0030F0.i4177, align 8
  %neg7.i4216 = xor i64 %4688, -1
  %and8.i4217 = and i64 %4687, %neg7.i4216
  store i64 %and8.i4217, i64* %x52FBCA0F.i4181, align 8
  %4689 = load i64, i64* %a2.addr.i4164, align 8
  %4690 = load i64, i64* %x52FBCA0F.i4181, align 8
  %xor9.i4218 = xor i64 %4689, %4690
  store i64 %xor9.i4218, i64* %x61C8F93C.i4182, align 8
  %4691 = load i64, i64* %x0CF3C03F.i4179, align 8
  %4692 = load i64, i64* %x61C8F93C.i4182, align 8
  %and10.i4219 = and i64 %4691, %4692
  store i64 %and10.i4219, i64* %x00C0C03C.i4183, align 8
  %4693 = load i64, i64* %x0F0FF0F0.i4174, align 8
  %4694 = load i64, i64* %x00C0C03C.i4183, align 8
  %neg11.i4220 = xor i64 %4694, -1
  %and12.i4221 = and i64 %4693, %neg11.i4220
  store i64 %and12.i4221, i64* %x0F0F30C0.i4184, align 8
  %4695 = load i64, i64* %x5A5A5A5A.i4173, align 8
  %4696 = load i64, i64* %x61C8F93C.i4182, align 8
  %xor13.i4222 = xor i64 %4695, %4696
  store i64 %xor13.i4222, i64* %x3B92A366.i4185, align 8
  %4697 = load i64, i64* %x3B92A366.i4185, align 8
  %4698 = load i64, i64* %x0F0F30C0.i4184, align 8
  %neg14.i4223 = xor i64 %4698, -1
  %and15.i4224 = and i64 %4697, %neg14.i4223
  store i64 %and15.i4224, i64* %x30908326.i4186, align 8
  %4699 = load i64, i64* %x0C0030F0.i4177, align 8
  %4700 = load i64, i64* %x30908326.i4186, align 8
  %xor16.i4225 = xor i64 %4699, %4700
  store i64 %xor16.i4225, i64* %x3C90B3D6.i4187, align 8
  %4701 = load i64, i64* %a2.addr.i4164, align 8
  %4702 = load i64, i64* %a4.addr.i4166, align 8
  %xor17.i4226 = xor i64 %4701, %4702
  store i64 %xor17.i4226, i64* %x33CC33CC.i4188, align 8
  %4703 = load i64, i64* %a5.addr.i4167, align 8
  %4704 = load i64, i64* %x0C0CC0C0.i4178, align 8
  %or18.i4227 = or i64 %4703, %4704
  store i64 %or18.i4227, i64* %x0C0CFFFF.i4189, align 8
  %4705 = load i64, i64* %x3B92A366.i4185, align 8
  %4706 = load i64, i64* %x0C0CFFFF.i4189, align 8
  %xor19.i4228 = xor i64 %4705, %4706
  store i64 %xor19.i4228, i64* %x379E5C99.i4190, align 8
  %4707 = load i64, i64* %x379E5C99.i4190, align 8
  %4708 = load i64, i64* %x33CC33CC.i4188, align 8
  %neg20.i4229 = xor i64 %4708, -1
  %and21.i4230 = and i64 %4707, %neg20.i4229
  store i64 %and21.i4230, i64* %x04124C11.i4191, align 8
  %4709 = load i64, i64* %x52FBCA0F.i4181, align 8
  %4710 = load i64, i64* %x04124C11.i4191, align 8
  %xor22.i4231 = xor i64 %4709, %4710
  store i64 %xor22.i4231, i64* %x56E9861E.i4192, align 8
  %4711 = load i64, i64* %a6.addr.i4168, align 8
  %4712 = load i64, i64* %x3C90B3D6.i4187, align 8
  %neg23.i4232 = xor i64 %4712, -1
  %and24.i4233 = and i64 %4711, %neg23.i4232
  store i64 %and24.i4233, i64* %x00.i4198, align 8
  %4713 = load i64, i64* %x00.i4198, align 8
  %4714 = load i64, i64* %x56E9861E.i4192, align 8
  %xor25.i4234 = xor i64 %4713, %4714
  store i64 %xor25.i4234, i64* %x01.i4199, align 8
  %4715 = load i64*, i64** %out1.addr.i4169, align 8
  %4716 = load i64, i64* %4715, align 8
  %4717 = load i64, i64* %x01.i4199, align 8
  %xor26.i4235 = xor i64 %4716, %4717
  %4718 = load i64*, i64** %out1.addr.i4169, align 8
  store i64 %xor26.i4235, i64* %4718, align 8
  %4719 = load i64, i64* %x56E9861E.i4192, align 8
  %neg27.i4236 = xor i64 %4719, -1
  store i64 %neg27.i4236, i64* %xA91679E1.i4193, align 8
  %4720 = load i64, i64* %x3C90B3D6.i4187, align 8
  %4721 = load i64, i64* %a6.addr.i4168, align 8
  %neg28.i4237 = xor i64 %4721, -1
  %and29.i4238 = and i64 %4720, %neg28.i4237
  store i64 %and29.i4238, i64* %x10.i4200, align 8
  %4722 = load i64, i64* %x10.i4200, align 8
  %4723 = load i64, i64* %xA91679E1.i4193, align 8
  %xor30.i4239 = xor i64 %4722, %4723
  store i64 %xor30.i4239, i64* %x11.i4201, align 8
  %4724 = load i64*, i64** %out2.addr.i4170, align 8
  %4725 = load i64, i64* %4724, align 8
  %4726 = load i64, i64* %x11.i4201, align 8
  %xor31.i4240 = xor i64 %4725, %4726
  %4727 = load i64*, i64** %out2.addr.i4170, align 8
  store i64 %xor31.i4240, i64* %4727, align 8
  %4728 = load i64, i64* %x3C90B3D6.i4187, align 8
  %4729 = load i64, i64* %xA91679E1.i4193, align 8
  %xor32.i4241 = xor i64 %4728, %4729
  store i64 %xor32.i4241, i64* %x9586CA37.i4194, align 8
  %4730 = load i64, i64* %x9586CA37.i4194, align 8
  %4731 = load i64, i64* %x33CC33CC.i4188, align 8
  %neg33.i4242 = xor i64 %4731, -1
  %and34.i4243 = and i64 %4730, %neg33.i4242
  store i64 %and34.i4243, i64* %x8402C833.i4195, align 8
  %4732 = load i64, i64* %x00C0C03C.i4183, align 8
  %4733 = load i64, i64* %x8402C833.i4195, align 8
  %or35.i4244 = or i64 %4732, %4733
  store i64 %or35.i4244, i64* %x84C2C83F.i4196, align 8
  %4734 = load i64, i64* %x379E5C99.i4190, align 8
  %4735 = load i64, i64* %x84C2C83F.i4196, align 8
  %xor36.i4245 = xor i64 %4734, %4735
  store i64 %xor36.i4245, i64* %xB35C94A6.i4197, align 8
  %4736 = load i64, i64* %x61C8F93C.i4182, align 8
  %4737 = load i64, i64* %a6.addr.i4168, align 8
  %or37.i4246 = or i64 %4736, %4737
  store i64 %or37.i4246, i64* %x20.i4202, align 8
  %4738 = load i64, i64* %x20.i4202, align 8
  %4739 = load i64, i64* %xB35C94A6.i4197, align 8
  %xor38.i4247 = xor i64 %4738, %4739
  store i64 %xor38.i4247, i64* %x21.i4203, align 8
  %4740 = load i64*, i64** %out3.addr.i4171, align 8
  %4741 = load i64, i64* %4740, align 8
  %4742 = load i64, i64* %x21.i4203, align 8
  %xor39.i4248 = xor i64 %4741, %4742
  %4743 = load i64*, i64** %out3.addr.i4171, align 8
  store i64 %xor39.i4248, i64* %4743, align 8
  %4744 = load i64, i64* %a6.addr.i4168, align 8
  %4745 = load i64, i64* %x61C8F93C.i4182, align 8
  %and40.i4249 = and i64 %4744, %4745
  store i64 %and40.i4249, i64* %x30.i4204, align 8
  %4746 = load i64, i64* %x30.i4204, align 8
  %4747 = load i64, i64* %xB35C94A6.i4197, align 8
  %xor41.i4250 = xor i64 %4746, %4747
  store i64 %xor41.i4250, i64* %x31.i4205, align 8
  %4748 = load i64*, i64** %out4.addr.i4172, align 8
  %4749 = load i64, i64* %4748, align 8
  %4750 = load i64, i64* %x31.i4205, align 8
  %xor42.i4251 = xor i64 %4749, %4750
  %4751 = load i64*, i64** %out4.addr.i4172, align 8
  store i64 %xor42.i4251, i64* %4751, align 8
  %4752 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 72), align 8
  %arrayidx763 = getelementptr inbounds i64, i64* %4752, i64 0
  %4753 = load i64, i64* %arrayidx763, align 8
  %4754 = load i64**, i64*** %k, align 8
  %arrayidx764 = getelementptr inbounds i64*, i64** %4754, i64 72
  %4755 = load i64*, i64** %arrayidx764, align 8
  %arrayidx765 = getelementptr inbounds i64, i64* %4755, i64 0
  %4756 = load i64, i64* %arrayidx765, align 8
  %xor766 = xor i64 %4753, %4756
  %4757 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 73), align 8
  %arrayidx767 = getelementptr inbounds i64, i64* %4757, i64 0
  %4758 = load i64, i64* %arrayidx767, align 8
  %4759 = load i64**, i64*** %k, align 8
  %arrayidx768 = getelementptr inbounds i64*, i64** %4759, i64 73
  %4760 = load i64*, i64** %arrayidx768, align 8
  %arrayidx769 = getelementptr inbounds i64, i64* %4760, i64 0
  %4761 = load i64, i64* %arrayidx769, align 8
  %xor770 = xor i64 %4758, %4761
  %4762 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 74), align 8
  %arrayidx771 = getelementptr inbounds i64, i64* %4762, i64 0
  %4763 = load i64, i64* %arrayidx771, align 8
  %4764 = load i64**, i64*** %k, align 8
  %arrayidx772 = getelementptr inbounds i64*, i64** %4764, i64 74
  %4765 = load i64*, i64** %arrayidx772, align 8
  %arrayidx773 = getelementptr inbounds i64, i64* %4765, i64 0
  %4766 = load i64, i64* %arrayidx773, align 8
  %xor774 = xor i64 %4763, %4766
  %4767 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 75), align 8
  %arrayidx775 = getelementptr inbounds i64, i64* %4767, i64 0
  %4768 = load i64, i64* %arrayidx775, align 8
  %4769 = load i64**, i64*** %k, align 8
  %arrayidx776 = getelementptr inbounds i64*, i64** %4769, i64 75
  %4770 = load i64*, i64** %arrayidx776, align 8
  %arrayidx777 = getelementptr inbounds i64, i64* %4770, i64 0
  %4771 = load i64, i64* %arrayidx777, align 8
  %xor778 = xor i64 %4768, %4771
  %4772 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 76), align 8
  %arrayidx779 = getelementptr inbounds i64, i64* %4772, i64 0
  %4773 = load i64, i64* %arrayidx779, align 8
  %4774 = load i64**, i64*** %k, align 8
  %arrayidx780 = getelementptr inbounds i64*, i64** %4774, i64 76
  %4775 = load i64*, i64** %arrayidx780, align 8
  %arrayidx781 = getelementptr inbounds i64, i64* %4775, i64 0
  %4776 = load i64, i64* %arrayidx781, align 8
  %xor782 = xor i64 %4773, %4776
  %4777 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 77), align 8
  %arrayidx783 = getelementptr inbounds i64, i64* %4777, i64 0
  %4778 = load i64, i64* %arrayidx783, align 8
  %4779 = load i64**, i64*** %k, align 8
  %arrayidx784 = getelementptr inbounds i64*, i64** %4779, i64 77
  %4780 = load i64*, i64** %arrayidx784, align 8
  %arrayidx785 = getelementptr inbounds i64, i64* %4780, i64 0
  %4781 = load i64, i64* %arrayidx785, align 8
  %xor786 = xor i64 %4778, %4781
  store i64 %xor766, i64* %a1.addr.i4044, align 8
  store i64 %xor770, i64* %a2.addr.i4045, align 8
  store i64 %xor774, i64* %a3.addr.i4046, align 8
  store i64 %xor778, i64* %a4.addr.i4047, align 8
  store i64 %xor782, i64* %a5.addr.i4048, align 8
  store i64 %xor786, i64* %a6.addr.i4049, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 7), i64** %out1.addr.i4050, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 13), i64** %out2.addr.i4051, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 24), i64** %out3.addr.i4052, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 2), i64** %out4.addr.i4053, align 8
  %4782 = load i64, i64* %a1.addr.i4044, align 8
  %4783 = load i64, i64* %a3.addr.i4046, align 8
  %or.i4102 = or i64 %4782, %4783
  store i64 %or.i4102, i64* %x77777777.i4054, align 8
  %4784 = load i64, i64* %x77777777.i4054, align 8
  %4785 = load i64, i64* %a6.addr.i4049, align 8
  %neg.i4103 = xor i64 %4785, -1
  %and.i4104 = and i64 %4784, %neg.i4103
  store i64 %and.i4104, i64* %x77770000.i4055, align 8
  %4786 = load i64, i64* %a1.addr.i4044, align 8
  %4787 = load i64, i64* %x77770000.i4055, align 8
  %xor.i4105 = xor i64 %4786, %4787
  store i64 %xor.i4105, i64* %x22225555.i4056, align 8
  %4788 = load i64, i64* %a3.addr.i4046, align 8
  %4789 = load i64, i64* %x22225555.i4056, align 8
  %xor1.i4106 = xor i64 %4788, %4789
  store i64 %xor1.i4106, i64* %x11116666.i4057, align 8
  %4790 = load i64, i64* %a4.addr.i4047, align 8
  %4791 = load i64, i64* %x11116666.i4057, align 8
  %or2.i4107 = or i64 %4790, %4791
  store i64 %or2.i4107, i64* %x1F1F6F6F.i4058, align 8
  %4792 = load i64, i64* %x77770000.i4055, align 8
  %4793 = load i64, i64* %a4.addr.i4047, align 8
  %neg3.i4108 = xor i64 %4793, -1
  %and4.i4109 = and i64 %4792, %neg3.i4108
  store i64 %and4.i4109, i64* %x70700000.i4059, align 8
  %4794 = load i64, i64* %a3.addr.i4046, align 8
  %4795 = load i64, i64* %x70700000.i4059, align 8
  %xor5.i4110 = xor i64 %4794, %4795
  store i64 %xor5.i4110, i64* %x43433333.i4060, align 8
  %4796 = load i64, i64* %a5.addr.i4048, align 8
  %4797 = load i64, i64* %x43433333.i4060, align 8
  %and6.i4111 = and i64 %4796, %4797
  store i64 %and6.i4111, i64* %x00430033.i4061, align 8
  %4798 = load i64, i64* %a1.addr.i4044, align 8
  %4799 = load i64, i64* %x11116666.i4057, align 8
  %or7.i4112 = or i64 %4798, %4799
  store i64 %or7.i4112, i64* %x55557777.i4062, align 8
  %4800 = load i64, i64* %x00430033.i4061, align 8
  %4801 = load i64, i64* %x55557777.i4062, align 8
  %xor8.i4113 = xor i64 %4800, %4801
  store i64 %xor8.i4113, i64* %x55167744.i4063, align 8
  %4802 = load i64, i64* %a4.addr.i4047, align 8
  %4803 = load i64, i64* %x55167744.i4063, align 8
  %xor9.i4114 = xor i64 %4802, %4803
  store i64 %xor9.i4114, i64* %x5A19784B.i4064, align 8
  %4804 = load i64, i64* %a6.addr.i4049, align 8
  %4805 = load i64, i64* %x5A19784B.i4064, align 8
  %xor10.i4115 = xor i64 %4804, %4805
  store i64 %xor10.i4115, i64* %x5A1987B4.i4065, align 8
  %4806 = load i64, i64* %x22225555.i4056, align 8
  %4807 = load i64, i64* %x5A1987B4.i4065, align 8
  %or11.i4116 = or i64 %4806, %4807
  store i64 %or11.i4116, i64* %x7A3BD7F5.i4066, align 8
  %4808 = load i64, i64* %a5.addr.i4048, align 8
  %4809 = load i64, i64* %x7A3BD7F5.i4066, align 8
  %and12.i4117 = and i64 %4808, %4809
  store i64 %and12.i4117, i64* %x003B00F5.i4067, align 8
  %4810 = load i64, i64* %x22225555.i4056, align 8
  %4811 = load i64, i64* %x003B00F5.i4067, align 8
  %xor13.i4118 = xor i64 %4810, %4811
  store i64 %xor13.i4118, i64* %x221955A0.i4068, align 8
  %4812 = load i64, i64* %a4.addr.i4047, align 8
  %4813 = load i64, i64* %x55557777.i4062, align 8
  %and14.i4119 = and i64 %4812, %4813
  store i64 %and14.i4119, i64* %x05050707.i4069, align 8
  %4814 = load i64, i64* %x221955A0.i4068, align 8
  %4815 = load i64, i64* %x05050707.i4069, align 8
  %xor15.i4120 = xor i64 %4814, %4815
  store i64 %xor15.i4120, i64* %x271C52A7.i4070, align 8
  %4816 = load i64, i64* %x7A3BD7F5.i4066, align 8
  %4817 = load i64, i64* %a1.addr.i4044, align 8
  %neg16.i4121 = xor i64 %4817, -1
  %and17.i4122 = and i64 %4816, %neg16.i4121
  store i64 %and17.i4122, i64* %x2A2A82A0.i4071, align 8
  %4818 = load i64, i64* %x43433333.i4060, align 8
  %4819 = load i64, i64* %x2A2A82A0.i4071, align 8
  %xor18.i4123 = xor i64 %4818, %4819
  store i64 %xor18.i4123, i64* %x6969B193.i4072, align 8
  %4820 = load i64, i64* %a5.addr.i4048, align 8
  %4821 = load i64, i64* %x1F1F6F6F.i4058, align 8
  %xor19.i4124 = xor i64 %4820, %4821
  store i64 %xor19.i4124, i64* %x1FE06F90.i4073, align 8
  %4822 = load i64, i64* %x1FE06F90.i4073, align 8
  %4823 = load i64, i64* %x6969B193.i4072, align 8
  %neg20.i4125 = xor i64 %4823, -1
  %and21.i4126 = and i64 %4822, %neg20.i4125
  store i64 %and21.i4126, i64* %x16804E00.i4074, align 8
  %4824 = load i64, i64* %x16804E00.i4074, align 8
  %neg22.i4127 = xor i64 %4824, -1
  store i64 %neg22.i4127, i64* %xE97FB1FF.i4075, align 8
  %4825 = load i64, i64* %xE97FB1FF.i4075, align 8
  %4826 = load i64, i64* %a2.addr.i4045, align 8
  %neg23.i4128 = xor i64 %4826, -1
  %and24.i4129 = and i64 %4825, %neg23.i4128
  store i64 %and24.i4129, i64* %x20.i4098, align 8
  %4827 = load i64, i64* %x20.i4098, align 8
  %4828 = load i64, i64* %x5A19784B.i4064, align 8
  %xor25.i4130 = xor i64 %4827, %4828
  store i64 %xor25.i4130, i64* %x21.i4099, align 8
  %4829 = load i64*, i64** %out3.addr.i4052, align 8
  %4830 = load i64, i64* %4829, align 8
  %4831 = load i64, i64* %x21.i4099, align 8
  %xor26.i4131 = xor i64 %4830, %4831
  %4832 = load i64*, i64** %out3.addr.i4052, align 8
  store i64 %xor26.i4131, i64* %4832, align 8
  %4833 = load i64, i64* %x43433333.i4060, align 8
  %4834 = load i64, i64* %x003B00F5.i4067, align 8
  %neg27.i4132 = xor i64 %4834, -1
  %and28.i4133 = and i64 %4833, %neg27.i4132
  store i64 %and28.i4133, i64* %x43403302.i4076, align 8
  %4835 = load i64, i64* %x2A2A82A0.i4071, align 8
  %4836 = load i64, i64* %x1FE06F90.i4073, align 8
  %xor29.i4134 = xor i64 %4835, %4836
  store i64 %xor29.i4134, i64* %x35CAED30.i4077, align 8
  %4837 = load i64, i64* %x271C52A7.i4070, align 8
  %4838 = load i64, i64* %x35CAED30.i4077, align 8
  %or30.i4135 = or i64 %4837, %4838
  store i64 %or30.i4135, i64* %x37DEFFB7.i4078, align 8
  %4839 = load i64, i64* %x37DEFFB7.i4078, align 8
  %4840 = load i64, i64* %x43403302.i4076, align 8
  %neg31.i4136 = xor i64 %4840, -1
  %and32.i4137 = and i64 %4839, %neg31.i4136
  store i64 %and32.i4137, i64* %x349ECCB5.i4079, align 8
  %4841 = load i64, i64* %x1F1F6F6F.i4058, align 8
  %4842 = load i64, i64* %x349ECCB5.i4079, align 8
  %neg33.i4138 = xor i64 %4842, -1
  %and34.i4139 = and i64 %4841, %neg33.i4138
  store i64 %and34.i4139, i64* %x0B01234A.i4080, align 8
  %4843 = load i64, i64* %x5A1987B4.i4065, align 8
  %4844 = load i64, i64* %x349ECCB5.i4079, align 8
  %and35.i4140 = and i64 %4843, %4844
  store i64 %and35.i4140, i64* %x101884B4.i4081, align 8
  %4845 = load i64, i64* %x1FE06F90.i4073, align 8
  %4846 = load i64, i64* %x101884B4.i4081, align 8
  %xor36.i4141 = xor i64 %4845, %4846
  store i64 %xor36.i4141, i64* %x0FF8EB24.i4082, align 8
  %4847 = load i64, i64* %x43433333.i4060, align 8
  %4848 = load i64, i64* %x55557777.i4062, align 8
  %and37.i4142 = and i64 %4847, %4848
  store i64 %and37.i4142, i64* %x41413333.i4083, align 8
  %4849 = load i64, i64* %x0FF8EB24.i4082, align 8
  %4850 = load i64, i64* %x41413333.i4083, align 8
  %or38.i4143 = or i64 %4849, %4850
  store i64 %or38.i4143, i64* %x4FF9FB37.i4084, align 8
  %4851 = load i64, i64* %x003B00F5.i4067, align 8
  %4852 = load i64, i64* %x4FF9FB37.i4084, align 8
  %xor39.i4144 = xor i64 %4851, %4852
  store i64 %xor39.i4144, i64* %x4FC2FBC2.i4085, align 8
  %4853 = load i64, i64* %x4FC2FBC2.i4085, align 8
  %4854 = load i64, i64* %a2.addr.i4045, align 8
  %and40.i4145 = and i64 %4853, %4854
  store i64 %and40.i4145, i64* %x30.i4100, align 8
  %4855 = load i64, i64* %x30.i4100, align 8
  %4856 = load i64, i64* %x271C52A7.i4070, align 8
  %xor41.i4146 = xor i64 %4855, %4856
  store i64 %xor41.i4146, i64* %x31.i4101, align 8
  %4857 = load i64*, i64** %out4.addr.i4053, align 8
  %4858 = load i64, i64* %4857, align 8
  %4859 = load i64, i64* %x31.i4101, align 8
  %xor42.i4147 = xor i64 %4858, %4859
  %4860 = load i64*, i64** %out4.addr.i4053, align 8
  store i64 %xor42.i4147, i64* %4860, align 8
  %4861 = load i64, i64* %a1.addr.i4044, align 8
  %4862 = load i64, i64* %x77777777.i4054, align 8
  %xor43.i4148 = xor i64 %4861, %4862
  store i64 %xor43.i4148, i64* %x22222222.i4086, align 8
  %4863 = load i64, i64* %x349ECCB5.i4079, align 8
  %4864 = load i64, i64* %x22222222.i4086, align 8
  %xor44.i4149 = xor i64 %4863, %4864
  store i64 %xor44.i4149, i64* %x16BCEE97.i4087, align 8
  %4865 = load i64, i64* %a4.addr.i4047, align 8
  %4866 = load i64, i64* %x0FF8EB24.i4082, align 8
  %and45.i4150 = and i64 %4865, %4866
  store i64 %and45.i4150, i64* %x0F080B04.i4088, align 8
  %4867 = load i64, i64* %x16BCEE97.i4087, align 8
  %4868 = load i64, i64* %x0F080B04.i4088, align 8
  %xor46.i4151 = xor i64 %4867, %4868
  store i64 %xor46.i4151, i64* %x19B4E593.i4089, align 8
  %4869 = load i64, i64* %x0B01234A.i4080, align 8
  %4870 = load i64, i64* %a2.addr.i4045, align 8
  %or47.i4152 = or i64 %4869, %4870
  store i64 %or47.i4152, i64* %x00.i4094, align 8
  %4871 = load i64, i64* %x00.i4094, align 8
  %4872 = load i64, i64* %x19B4E593.i4089, align 8
  %xor48.i4153 = xor i64 %4871, %4872
  store i64 %xor48.i4153, i64* %x01.i4095, align 8
  %4873 = load i64*, i64** %out1.addr.i4050, align 8
  %4874 = load i64, i64* %4873, align 8
  %4875 = load i64, i64* %x01.i4095, align 8
  %xor49.i4154 = xor i64 %4874, %4875
  %4876 = load i64*, i64** %out1.addr.i4050, align 8
  store i64 %xor49.i4154, i64* %4876, align 8
  %4877 = load i64, i64* %x1F1F6F6F.i4058, align 8
  %4878 = load i64, i64* %x43433333.i4060, align 8
  %xor50.i4155 = xor i64 %4877, %4878
  store i64 %xor50.i4155, i64* %x5C5C5C5C.i4090, align 8
  %4879 = load i64, i64* %x5C5C5C5C.i4090, align 8
  %4880 = load i64, i64* %x19B4E593.i4089, align 8
  %neg51.i4156 = xor i64 %4880, -1
  %and52.i4157 = and i64 %4879, %neg51.i4156
  store i64 %and52.i4157, i64* %x4448184C.i4091, align 8
  %4881 = load i64, i64* %x22225555.i4056, align 8
  %4882 = load i64, i64* %x0FF8EB24.i4082, align 8
  %xor53.i4158 = xor i64 %4881, %4882
  store i64 %xor53.i4158, i64* %x2DDABE71.i4092, align 8
  %4883 = load i64, i64* %x4448184C.i4091, align 8
  %4884 = load i64, i64* %x2DDABE71.i4092, align 8
  %xor54.i4159 = xor i64 %4883, %4884
  store i64 %xor54.i4159, i64* %x6992A63D.i4093, align 8
  %4885 = load i64, i64* %x1F1F6F6F.i4058, align 8
  %4886 = load i64, i64* %a2.addr.i4045, align 8
  %and55.i4160 = and i64 %4885, %4886
  store i64 %and55.i4160, i64* %x10.i4096, align 8
  %4887 = load i64, i64* %x10.i4096, align 8
  %4888 = load i64, i64* %x6992A63D.i4093, align 8
  %xor56.i4161 = xor i64 %4887, %4888
  store i64 %xor56.i4161, i64* %x11.i4097, align 8
  %4889 = load i64*, i64** %out2.addr.i4051, align 8
  %4890 = load i64, i64* %4889, align 8
  %4891 = load i64, i64* %x11.i4097, align 8
  %xor57.i4162 = xor i64 %4890, %4891
  %4892 = load i64*, i64** %out2.addr.i4051, align 8
  store i64 %xor57.i4162, i64* %4892, align 8
  %4893 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 78), align 8
  %arrayidx787 = getelementptr inbounds i64, i64* %4893, i64 0
  %4894 = load i64, i64* %arrayidx787, align 8
  %4895 = load i64**, i64*** %k, align 8
  %arrayidx788 = getelementptr inbounds i64*, i64** %4895, i64 78
  %4896 = load i64*, i64** %arrayidx788, align 8
  %arrayidx789 = getelementptr inbounds i64, i64* %4896, i64 0
  %4897 = load i64, i64* %arrayidx789, align 8
  %xor790 = xor i64 %4894, %4897
  %4898 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 79), align 8
  %arrayidx791 = getelementptr inbounds i64, i64* %4898, i64 0
  %4899 = load i64, i64* %arrayidx791, align 8
  %4900 = load i64**, i64*** %k, align 8
  %arrayidx792 = getelementptr inbounds i64*, i64** %4900, i64 79
  %4901 = load i64*, i64** %arrayidx792, align 8
  %arrayidx793 = getelementptr inbounds i64, i64* %4901, i64 0
  %4902 = load i64, i64* %arrayidx793, align 8
  %xor794 = xor i64 %4899, %4902
  %4903 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 80), align 8
  %arrayidx795 = getelementptr inbounds i64, i64* %4903, i64 0
  %4904 = load i64, i64* %arrayidx795, align 8
  %4905 = load i64**, i64*** %k, align 8
  %arrayidx796 = getelementptr inbounds i64*, i64** %4905, i64 80
  %4906 = load i64*, i64** %arrayidx796, align 8
  %arrayidx797 = getelementptr inbounds i64, i64* %4906, i64 0
  %4907 = load i64, i64* %arrayidx797, align 8
  %xor798 = xor i64 %4904, %4907
  %4908 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 81), align 8
  %arrayidx799 = getelementptr inbounds i64, i64* %4908, i64 0
  %4909 = load i64, i64* %arrayidx799, align 8
  %4910 = load i64**, i64*** %k, align 8
  %arrayidx800 = getelementptr inbounds i64*, i64** %4910, i64 81
  %4911 = load i64*, i64** %arrayidx800, align 8
  %arrayidx801 = getelementptr inbounds i64, i64* %4911, i64 0
  %4912 = load i64, i64* %arrayidx801, align 8
  %xor802 = xor i64 %4909, %4912
  %4913 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 82), align 8
  %arrayidx803 = getelementptr inbounds i64, i64* %4913, i64 0
  %4914 = load i64, i64* %arrayidx803, align 8
  %4915 = load i64**, i64*** %k, align 8
  %arrayidx804 = getelementptr inbounds i64*, i64** %4915, i64 82
  %4916 = load i64*, i64** %arrayidx804, align 8
  %arrayidx805 = getelementptr inbounds i64, i64* %4916, i64 0
  %4917 = load i64, i64* %arrayidx805, align 8
  %xor806 = xor i64 %4914, %4917
  %4918 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 83), align 8
  %arrayidx807 = getelementptr inbounds i64, i64* %4918, i64 0
  %4919 = load i64, i64* %arrayidx807, align 8
  %4920 = load i64**, i64*** %k, align 8
  %arrayidx808 = getelementptr inbounds i64*, i64** %4920, i64 83
  %4921 = load i64*, i64** %arrayidx808, align 8
  %arrayidx809 = getelementptr inbounds i64, i64* %4921, i64 0
  %4922 = load i64, i64* %arrayidx809, align 8
  %xor810 = xor i64 %4919, %4922
  store i64 %xor790, i64* %a1.addr.i3930, align 8
  store i64 %xor794, i64* %a2.addr.i3931, align 8
  store i64 %xor798, i64* %a3.addr.i3932, align 8
  store i64 %xor802, i64* %a4.addr.i3933, align 8
  store i64 %xor806, i64* %a5.addr.i3934, align 8
  store i64 %xor810, i64* %a6.addr.i3935, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 3), i64** %out1.addr.i3936, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 28), i64** %out2.addr.i3937, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 10), i64** %out3.addr.i3938, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 18), i64** %out4.addr.i3939, align 8
  %4923 = load i64, i64* %a2.addr.i3931, align 8
  %4924 = load i64, i64* %a5.addr.i3934, align 8
  %xor.i3986 = xor i64 %4923, %4924
  store i64 %xor.i3986, i64* %x33CC33CC.i3940, align 8
  %4925 = load i64, i64* %a2.addr.i3931, align 8
  %4926 = load i64, i64* %a6.addr.i3935, align 8
  %or.i3987 = or i64 %4925, %4926
  store i64 %or.i3987, i64* %x3333FFFF.i3941, align 8
  %4927 = load i64, i64* %a1.addr.i3930, align 8
  %4928 = load i64, i64* %x3333FFFF.i3941, align 8
  %and.i3988 = and i64 %4927, %4928
  store i64 %and.i3988, i64* %x11115555.i3942, align 8
  %4929 = load i64, i64* %x33CC33CC.i3940, align 8
  %4930 = load i64, i64* %x11115555.i3942, align 8
  %xor1.i3989 = xor i64 %4929, %4930
  store i64 %xor1.i3989, i64* %x22DD6699.i3943, align 8
  %4931 = load i64, i64* %a6.addr.i3935, align 8
  %4932 = load i64, i64* %x22DD6699.i3943, align 8
  %xor2.i3990 = xor i64 %4931, %4932
  store i64 %xor2.i3990, i64* %x22DD9966.i3944, align 8
  %4933 = load i64, i64* %a5.addr.i3934, align 8
  %4934 = load i64, i64* %x22DD9966.i3944, align 8
  %neg.i3991 = xor i64 %4934, -1
  %and3.i3992 = and i64 %4933, %neg.i3991
  store i64 %and3.i3992, i64* %x00220099.i3945, align 8
  %4935 = load i64, i64* %a1.addr.i3930, align 8
  %4936 = load i64, i64* %x22DD9966.i3944, align 8
  %and4.i3993 = and i64 %4935, %4936
  store i64 %and4.i3993, i64* %x00551144.i3946, align 8
  %4937 = load i64, i64* %a2.addr.i3931, align 8
  %4938 = load i64, i64* %x00551144.i3946, align 8
  %xor5.i3994 = xor i64 %4937, %4938
  store i64 %xor5.i3994, i64* %x33662277.i3947, align 8
  %4939 = load i64, i64* %a1.addr.i3930, align 8
  %4940 = load i64, i64* %a3.addr.i3932, align 8
  %xor6.i3995 = xor i64 %4939, %4940
  store i64 %xor6.i3995, i64* %x5A5A5A5A.i3948, align 8
  %4941 = load i64, i64* %x33662277.i3947, align 8
  %4942 = load i64, i64* %x5A5A5A5A.i3948, align 8
  %or7.i3996 = or i64 %4941, %4942
  store i64 %or7.i3996, i64* %x7B7E7A7F.i3949, align 8
  %4943 = load i64, i64* %x22DD6699.i3943, align 8
  %4944 = load i64, i64* %x7B7E7A7F.i3949, align 8
  %xor8.i3997 = xor i64 %4943, %4944
  store i64 %xor8.i3997, i64* %x59A31CE6.i3950, align 8
  %4945 = load i64, i64* %a3.addr.i3932, align 8
  %4946 = load i64, i64* %x59A31CE6.i3950, align 8
  %and9.i3998 = and i64 %4945, %4946
  store i64 %and9.i3998, i64* %x09030C06.i3951, align 8
  %4947 = load i64, i64* %x09030C06.i3951, align 8
  %4948 = load i64, i64* %a6.addr.i3935, align 8
  %neg10.i3999 = xor i64 %4948, -1
  %and11.i4000 = and i64 %4947, %neg10.i3999
  store i64 %and11.i4000, i64* %x09030000.i3952, align 8
  %4949 = load i64, i64* %x00220099.i3945, align 8
  %4950 = load i64, i64* %x33662277.i3947, align 8
  %or12.i4001 = or i64 %4949, %4950
  store i64 %or12.i4001, i64* %x336622FF.i3953, align 8
  %4951 = load i64, i64* %x09030000.i3952, align 8
  %4952 = load i64, i64* %x336622FF.i3953, align 8
  %xor13.i4002 = xor i64 %4951, %4952
  store i64 %xor13.i4002, i64* %x3A6522FF.i3954, align 8
  %4953 = load i64, i64* %x3A6522FF.i3954, align 8
  %4954 = load i64, i64* %a4.addr.i3933, align 8
  %and14.i4003 = and i64 %4953, %4954
  store i64 %and14.i4003, i64* %x30.i3984, align 8
  %4955 = load i64, i64* %x30.i3984, align 8
  %4956 = load i64, i64* %x59A31CE6.i3950, align 8
  %xor15.i4004 = xor i64 %4955, %4956
  store i64 %xor15.i4004, i64* %x31.i3985, align 8
  %4957 = load i64*, i64** %out4.addr.i3939, align 8
  %4958 = load i64, i64* %4957, align 8
  %4959 = load i64, i64* %x31.i3985, align 8
  %xor16.i4005 = xor i64 %4958, %4959
  %4960 = load i64*, i64** %out4.addr.i3939, align 8
  store i64 %xor16.i4005, i64* %4960, align 8
  %4961 = load i64, i64* %a2.addr.i3931, align 8
  %4962 = load i64, i64* %x7B7E7A7F.i3949, align 8
  %xor17.i4006 = xor i64 %4961, %4962
  store i64 %xor17.i4006, i64* %x484D494C.i3955, align 8
  %4963 = load i64, i64* %a6.addr.i3935, align 8
  %4964 = load i64, i64* %x484D494C.i3955, align 8
  %neg18.i4007 = xor i64 %4964, -1
  %and19.i4008 = and i64 %4963, %neg18.i4007
  store i64 %and19.i4008, i64* %x0000B6B3.i3956, align 8
  %4965 = load i64, i64* %a3.addr.i3932, align 8
  %4966 = load i64, i64* %x0000B6B3.i3956, align 8
  %xor20.i4009 = xor i64 %4965, %4966
  store i64 %xor20.i4009, i64* %x0F0FB9BC.i3957, align 8
  %4967 = load i64, i64* %a5.addr.i3934, align 8
  %4968 = load i64, i64* %x09030C06.i3951, align 8
  %neg21.i4010 = xor i64 %4968, -1
  %and22.i4011 = and i64 %4967, %neg21.i4010
  store i64 %and22.i4011, i64* %x00FC00F9.i3958, align 8
  %4969 = load i64, i64* %x0F0FB9BC.i3957, align 8
  %4970 = load i64, i64* %x00FC00F9.i3958, align 8
  %or23.i4012 = or i64 %4969, %4970
  store i64 %or23.i4012, i64* %x0FFFB9FD.i3959, align 8
  %4971 = load i64, i64* %a1.addr.i3930, align 8
  %4972 = load i64, i64* %x59A31CE6.i3950, align 8
  %or24.i4013 = or i64 %4971, %4972
  store i64 %or24.i4013, i64* %x5DF75DF7.i3960, align 8
  %4973 = load i64, i64* %x336622FF.i3953, align 8
  %4974 = load i64, i64* %x5DF75DF7.i3960, align 8
  %and25.i4014 = and i64 %4973, %4974
  store i64 %and25.i4014, i64* %x116600F7.i3961, align 8
  %4975 = load i64, i64* %x0F0FB9BC.i3957, align 8
  %4976 = load i64, i64* %x116600F7.i3961, align 8
  %xor26.i4015 = xor i64 %4975, %4976
  store i64 %xor26.i4015, i64* %x1E69B94B.i3962, align 8
  %4977 = load i64, i64* %x1E69B94B.i3962, align 8
  %4978 = load i64, i64* %x09030000.i3952, align 8
  %neg27.i4016 = xor i64 %4978, -1
  %and28.i4017 = and i64 %4977, %neg27.i4016
  store i64 %and28.i4017, i64* %x1668B94B.i3963, align 8
  %4979 = load i64, i64* %x00220099.i3945, align 8
  %4980 = load i64, i64* %a4.addr.i3933, align 8
  %or29.i4018 = or i64 %4979, %4980
  store i64 %or29.i4018, i64* %x20.i3982, align 8
  %4981 = load i64, i64* %x20.i3982, align 8
  %4982 = load i64, i64* %x1668B94B.i3963, align 8
  %xor30.i4019 = xor i64 %4981, %4982
  store i64 %xor30.i4019, i64* %x21.i3983, align 8
  %4983 = load i64*, i64** %out3.addr.i3938, align 8
  %4984 = load i64, i64* %4983, align 8
  %4985 = load i64, i64* %x21.i3983, align 8
  %xor31.i4020 = xor i64 %4984, %4985
  %4986 = load i64*, i64** %out3.addr.i3938, align 8
  store i64 %xor31.i4020, i64* %4986, align 8
  %4987 = load i64, i64* %a2.addr.i3931, align 8
  %4988 = load i64, i64* %x5A5A5A5A.i3948, align 8
  %or32.i4021 = or i64 %4987, %4988
  store i64 %or32.i4021, i64* %x7B7B7B7B.i3964, align 8
  %4989 = load i64, i64* %x3A6522FF.i3954, align 8
  %4990 = load i64, i64* %x7B7B7B7B.i3964, align 8
  %xor33.i4022 = xor i64 %4989, %4990
  store i64 %xor33.i4022, i64* %x411E5984.i3965, align 8
  %4991 = load i64, i64* %x11115555.i3942, align 8
  %4992 = load i64, i64* %x0FFFB9FD.i3959, align 8
  %or34.i4023 = or i64 %4991, %4992
  store i64 %or34.i4023, i64* %x1FFFFDFD.i3966, align 8
  %4993 = load i64, i64* %x411E5984.i3965, align 8
  %4994 = load i64, i64* %x1FFFFDFD.i3966, align 8
  %xor35.i4024 = xor i64 %4993, %4994
  store i64 %xor35.i4024, i64* %x5EE1A479.i3967, align 8
  %4995 = load i64, i64* %x22DD6699.i3943, align 8
  %4996 = load i64, i64* %x1E69B94B.i3962, align 8
  %xor36.i4025 = xor i64 %4995, %4996
  store i64 %xor36.i4025, i64* %x3CB4DFD2.i3968, align 8
  %4997 = load i64, i64* %a5.addr.i3934, align 8
  %4998 = load i64, i64* %x3CB4DFD2.i3968, align 8
  %neg37.i4026 = xor i64 %4998, -1
  %and38.i4027 = and i64 %4997, %neg37.i4026
  store i64 %and38.i4027, i64* %x004B002D.i3969, align 8
  %4999 = load i64, i64* %x484D494C.i3955, align 8
  %neg39.i4028 = xor i64 %4999, -1
  store i64 %neg39.i4028, i64* %xB7B2B6B3.i3970, align 8
  %5000 = load i64, i64* %x7B7B7B7B.i3964, align 8
  %5001 = load i64, i64* %xB7B2B6B3.i3970, align 8
  %xor40.i4029 = xor i64 %5000, %5001
  store i64 %xor40.i4029, i64* %xCCC9CDC8.i3971, align 8
  %5002 = load i64, i64* %x004B002D.i3969, align 8
  %5003 = load i64, i64* %xCCC9CDC8.i3971, align 8
  %xor41.i4030 = xor i64 %5002, %5003
  store i64 %xor41.i4030, i64* %xCC82CDE5.i3972, align 8
  %5004 = load i64, i64* %xCC82CDE5.i3972, align 8
  %5005 = load i64, i64* %a4.addr.i3933, align 8
  %neg42.i4031 = xor i64 %5005, -1
  %and43.i4032 = and i64 %5004, %neg42.i4031
  store i64 %and43.i4032, i64* %x10.i3980, align 8
  %5006 = load i64, i64* %x10.i3980, align 8
  %5007 = load i64, i64* %x5EE1A479.i3967, align 8
  %xor44.i4033 = xor i64 %5006, %5007
  store i64 %xor44.i4033, i64* %x11.i3981, align 8
  %5008 = load i64*, i64** %out2.addr.i3937, align 8
  %5009 = load i64, i64* %5008, align 8
  %5010 = load i64, i64* %x11.i3981, align 8
  %xor45.i4034 = xor i64 %5009, %5010
  %5011 = load i64*, i64** %out2.addr.i3937, align 8
  store i64 %xor45.i4034, i64* %5011, align 8
  %5012 = load i64, i64* %a6.addr.i3935, align 8
  %5013 = load i64, i64* %x00551144.i3946, align 8
  %xor46.i4035 = xor i64 %5012, %5013
  store i64 %xor46.i4035, i64* %x0055EEBB.i3973, align 8
  %5014 = load i64, i64* %a1.addr.i3930, align 8
  %5015 = load i64, i64* %x0F0FB9BC.i3957, align 8
  %xor47.i4036 = xor i64 %5014, %5015
  store i64 %xor47.i4036, i64* %x5A5AECE9.i3974, align 8
  %5016 = load i64, i64* %x0055EEBB.i3973, align 8
  %5017 = load i64, i64* %x5A5AECE9.i3974, align 8
  %and48.i4037 = and i64 %5016, %5017
  store i64 %and48.i4037, i64* %x0050ECA9.i3975, align 8
  %5018 = load i64, i64* %x09030C06.i3951, align 8
  %5019 = load i64, i64* %xCCC9CDC8.i3971, align 8
  %xor49.i4038 = xor i64 %5018, %5019
  store i64 %xor49.i4038, i64* %xC5CAC1CE.i3976, align 8
  %5020 = load i64, i64* %x0050ECA9.i3975, align 8
  %5021 = load i64, i64* %xC5CAC1CE.i3976, align 8
  %xor50.i4039 = xor i64 %5020, %5021
  store i64 %xor50.i4039, i64* %xC59A2D67.i3977, align 8
  %5022 = load i64, i64* %x0FFFB9FD.i3959, align 8
  %5023 = load i64, i64* %a4.addr.i3933, align 8
  %neg51.i4040 = xor i64 %5023, -1
  %and52.i4041 = and i64 %5022, %neg51.i4040
  store i64 %and52.i4041, i64* %x00.i3978, align 8
  %5024 = load i64, i64* %x00.i3978, align 8
  %5025 = load i64, i64* %xC59A2D67.i3977, align 8
  %xor53.i4042 = xor i64 %5024, %5025
  store i64 %xor53.i4042, i64* %x01.i3979, align 8
  %5026 = load i64*, i64** %out1.addr.i3936, align 8
  %5027 = load i64, i64* %5026, align 8
  %5028 = load i64, i64* %x01.i3979, align 8
  %xor54.i4043 = xor i64 %5027, %5028
  %5029 = load i64*, i64** %out1.addr.i3936, align 8
  store i64 %xor54.i4043, i64* %5029, align 8
  %5030 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 55), align 8
  %5031 = load i64**, i64*** %k, align 8
  %arrayidx811 = getelementptr inbounds i64*, i64** %5031, i64 84
  %5032 = load i64*, i64** %arrayidx811, align 8
  %arrayidx812 = getelementptr inbounds i64, i64* %5032, i64 0
  %5033 = load i64, i64* %arrayidx812, align 8
  %xor813 = xor i64 %5030, %5033
  %5034 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 56), align 8
  %5035 = load i64**, i64*** %k, align 8
  %arrayidx814 = getelementptr inbounds i64*, i64** %5035, i64 85
  %5036 = load i64*, i64** %arrayidx814, align 8
  %arrayidx815 = getelementptr inbounds i64, i64* %5036, i64 0
  %5037 = load i64, i64* %arrayidx815, align 8
  %xor816 = xor i64 %5034, %5037
  %5038 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 57), align 8
  %5039 = load i64**, i64*** %k, align 8
  %arrayidx817 = getelementptr inbounds i64*, i64** %5039, i64 86
  %5040 = load i64*, i64** %arrayidx817, align 8
  %arrayidx818 = getelementptr inbounds i64, i64* %5040, i64 0
  %5041 = load i64, i64* %arrayidx818, align 8
  %xor819 = xor i64 %5038, %5041
  %5042 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 58), align 8
  %5043 = load i64**, i64*** %k, align 8
  %arrayidx820 = getelementptr inbounds i64*, i64** %5043, i64 87
  %5044 = load i64*, i64** %arrayidx820, align 8
  %arrayidx821 = getelementptr inbounds i64, i64* %5044, i64 0
  %5045 = load i64, i64* %arrayidx821, align 8
  %xor822 = xor i64 %5042, %5045
  %5046 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 59), align 8
  %5047 = load i64**, i64*** %k, align 8
  %arrayidx823 = getelementptr inbounds i64*, i64** %5047, i64 88
  %5048 = load i64*, i64** %arrayidx823, align 8
  %arrayidx824 = getelementptr inbounds i64, i64* %5048, i64 0
  %5049 = load i64, i64* %arrayidx824, align 8
  %xor825 = xor i64 %5046, %5049
  %5050 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 60), align 8
  %5051 = load i64**, i64*** %k, align 8
  %arrayidx826 = getelementptr inbounds i64*, i64** %5051, i64 89
  %5052 = load i64*, i64** %arrayidx826, align 8
  %arrayidx827 = getelementptr inbounds i64, i64* %5052, i64 0
  %5053 = load i64, i64* %arrayidx827, align 8
  %xor828 = xor i64 %5050, %5053
  store i64 %xor813, i64* %a1.addr.i3817, align 8
  store i64 %xor816, i64* %a2.addr.i3818, align 8
  store i64 %xor819, i64* %a3.addr.i3819, align 8
  store i64 %xor822, i64* %a4.addr.i3820, align 8
  store i64 %xor825, i64* %a5.addr.i3821, align 8
  store i64 %xor828, i64* %a6.addr.i3822, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 31), i64** %out1.addr.i3823, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 11), i64** %out2.addr.i3824, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 21), i64** %out3.addr.i3825, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 6), i64** %out4.addr.i3826, align 8
  %5054 = load i64, i64* %a4.addr.i3820, align 8
  %5055 = load i64, i64* %a5.addr.i3821, align 8
  %xor.i3873 = xor i64 %5054, %5055
  store i64 %xor.i3873, i64* %x0FF00FF0.i3827, align 8
  %5056 = load i64, i64* %a3.addr.i3819, align 8
  %5057 = load i64, i64* %x0FF00FF0.i3827, align 8
  %xor1.i3874 = xor i64 %5056, %5057
  store i64 %xor1.i3874, i64* %x3CC33CC3.i3828, align 8
  %5058 = load i64, i64* %a6.addr.i3822, align 8
  %5059 = load i64, i64* %x3CC33CC3.i3828, align 8
  %and.i3875 = and i64 %5058, %5059
  store i64 %and.i3875, i64* %x00003CC3.i3829, align 8
  %5060 = load i64, i64* %a4.addr.i3820, align 8
  %5061 = load i64, i64* %x0FF00FF0.i3827, align 8
  %and2.i3876 = and i64 %5060, %5061
  store i64 %and2.i3876, i64* %x0F000F00.i3830, align 8
  %5062 = load i64, i64* %a2.addr.i3818, align 8
  %5063 = load i64, i64* %x0F000F00.i3830, align 8
  %xor3.i3877 = xor i64 %5062, %5063
  store i64 %xor3.i3877, i64* %x5A555A55.i3831, align 8
  %5064 = load i64, i64* %x00003CC3.i3829, align 8
  %5065 = load i64, i64* %x5A555A55.i3831, align 8
  %and4.i3878 = and i64 %5064, %5065
  store i64 %and4.i3878, i64* %x00001841.i3832, align 8
  %5066 = load i64, i64* %a6.addr.i3822, align 8
  %5067 = load i64, i64* %x0F000F00.i3830, align 8
  %and5.i3879 = and i64 %5066, %5067
  store i64 %and5.i3879, i64* %x00000F00.i3833, align 8
  %5068 = load i64, i64* %a3.addr.i3819, align 8
  %5069 = load i64, i64* %x00000F00.i3833, align 8
  %xor6.i3880 = xor i64 %5068, %5069
  store i64 %xor6.i3880, i64* %x33333C33.i3834, align 8
  %5070 = load i64, i64* %x5A555A55.i3831, align 8
  %5071 = load i64, i64* %x33333C33.i3834, align 8
  %or.i3881 = or i64 %5070, %5071
  store i64 %or.i3881, i64* %x7B777E77.i3835, align 8
  %5072 = load i64, i64* %a6.addr.i3822, align 8
  %5073 = load i64, i64* %x0FF00FF0.i3827, align 8
  %xor7.i3882 = xor i64 %5072, %5073
  store i64 %xor7.i3882, i64* %x0FF0F00F.i3836, align 8
  %5074 = load i64, i64* %x7B777E77.i3835, align 8
  %5075 = load i64, i64* %x0FF0F00F.i3836, align 8
  %xor8.i3883 = xor i64 %5074, %5075
  store i64 %xor8.i3883, i64* %x74878E78.i3837, align 8
  %5076 = load i64, i64* %a1.addr.i3817, align 8
  %5077 = load i64, i64* %x00001841.i3832, align 8
  %neg.i3884 = xor i64 %5077, -1
  %and9.i3885 = and i64 %5076, %neg.i3884
  store i64 %and9.i3885, i64* %x30.i3871, align 8
  %5078 = load i64, i64* %x30.i3871, align 8
  %5079 = load i64, i64* %x74878E78.i3837, align 8
  %xor10.i3886 = xor i64 %5078, %5079
  store i64 %xor10.i3886, i64* %x31.i3872, align 8
  %5080 = load i64*, i64** %out4.addr.i3826, align 8
  %5081 = load i64, i64* %5080, align 8
  %5082 = load i64, i64* %x31.i3872, align 8
  %xor11.i3887 = xor i64 %5081, %5082
  %5083 = load i64*, i64** %out4.addr.i3826, align 8
  store i64 %xor11.i3887, i64* %5083, align 8
  %5084 = load i64, i64* %a5.addr.i3821, align 8
  %5085 = load i64, i64* %x3CC33CC3.i3828, align 8
  %neg12.i3888 = xor i64 %5085, -1
  %and13.i3889 = and i64 %5084, %neg12.i3888
  store i64 %and13.i3889, i64* %x003C003C.i3838, align 8
  %5086 = load i64, i64* %x5A555A55.i3831, align 8
  %5087 = load i64, i64* %x003C003C.i3838, align 8
  %or14.i3890 = or i64 %5086, %5087
  store i64 %or14.i3890, i64* %x5A7D5A7D.i3839, align 8
  %5088 = load i64, i64* %x00003CC3.i3829, align 8
  %5089 = load i64, i64* %x33333C33.i3834, align 8
  %xor15.i3891 = xor i64 %5088, %5089
  store i64 %xor15.i3891, i64* %x333300F0.i3840, align 8
  %5090 = load i64, i64* %x5A7D5A7D.i3839, align 8
  %5091 = load i64, i64* %x333300F0.i3840, align 8
  %xor16.i3892 = xor i64 %5090, %5091
  store i64 %xor16.i3892, i64* %x694E5A8D.i3841, align 8
  %5092 = load i64, i64* %x00003CC3.i3829, align 8
  %5093 = load i64, i64* %x0FF0F00F.i3836, align 8
  %xor17.i3893 = xor i64 %5092, %5093
  store i64 %xor17.i3893, i64* %x0FF0CCCC.i3842, align 8
  %5094 = load i64, i64* %a4.addr.i3820, align 8
  %5095 = load i64, i64* %x0FF0CCCC.i3842, align 8
  %neg18.i3894 = xor i64 %5095, -1
  %and19.i3895 = and i64 %5094, %neg18.i3894
  store i64 %and19.i3895, i64* %x000F0303.i3843, align 8
  %5096 = load i64, i64* %x5A555A55.i3831, align 8
  %5097 = load i64, i64* %x000F0303.i3843, align 8
  %neg20.i3896 = xor i64 %5097, -1
  %and21.i3897 = and i64 %5096, %neg20.i3896
  store i64 %and21.i3897, i64* %x5A505854.i3844, align 8
  %5098 = load i64, i64* %a5.addr.i3821, align 8
  %5099 = load i64, i64* %x333300F0.i3840, align 8
  %xor22.i3898 = xor i64 %5098, %5099
  store i64 %xor22.i3898, i64* %x33CC000F.i3845, align 8
  %5100 = load i64, i64* %x5A505854.i3844, align 8
  %5101 = load i64, i64* %x33CC000F.i3845, align 8
  %xor23.i3899 = xor i64 %5100, %5101
  store i64 %xor23.i3899, i64* %x699C585B.i3846, align 8
  %5102 = load i64, i64* %x0F000F00.i3830, align 8
  %5103 = load i64, i64* %x74878E78.i3837, align 8
  %or24.i3900 = or i64 %5102, %5103
  store i64 %or24.i3900, i64* %x7F878F78.i3847, align 8
  %5104 = load i64, i64* %a3.addr.i3819, align 8
  %5105 = load i64, i64* %x699C585B.i3846, align 8
  %and25.i3901 = and i64 %5104, %5105
  store i64 %and25.i3901, i64* %x21101013.i3848, align 8
  %5106 = load i64, i64* %x7F878F78.i3847, align 8
  %5107 = load i64, i64* %x21101013.i3848, align 8
  %or26.i3902 = or i64 %5106, %5107
  store i64 %or26.i3902, i64* %x7F979F7B.i3849, align 8
  %5108 = load i64, i64* %x3CC33CC3.i3828, align 8
  %5109 = load i64, i64* %x0FF0F00F.i3836, align 8
  %neg27.i3903 = xor i64 %5109, -1
  %and28.i3904 = and i64 %5108, %neg27.i3903
  store i64 %and28.i3904, i64* %x30030CC0.i3850, align 8
  %5110 = load i64, i64* %x7F979F7B.i3849, align 8
  %5111 = load i64, i64* %x30030CC0.i3850, align 8
  %xor29.i3905 = xor i64 %5110, %5111
  store i64 %xor29.i3905, i64* %x4F9493BB.i3851, align 8
  %5112 = load i64, i64* %x4F9493BB.i3851, align 8
  %5113 = load i64, i64* %a1.addr.i3817, align 8
  %neg30.i3906 = xor i64 %5113, -1
  %and31.i3907 = and i64 %5112, %neg30.i3906
  store i64 %and31.i3907, i64* %x00.i3865, align 8
  %5114 = load i64, i64* %x00.i3865, align 8
  %5115 = load i64, i64* %x694E5A8D.i3841, align 8
  %xor32.i3908 = xor i64 %5114, %5115
  store i64 %xor32.i3908, i64* %x01.i3866, align 8
  %5116 = load i64*, i64** %out1.addr.i3823, align 8
  %5117 = load i64, i64* %5116, align 8
  %5118 = load i64, i64* %x01.i3866, align 8
  %xor33.i3909 = xor i64 %5117, %5118
  %5119 = load i64*, i64** %out1.addr.i3823, align 8
  store i64 %xor33.i3909, i64* %5119, align 8
  %5120 = load i64, i64* %x699C585B.i3846, align 8
  %5121 = load i64, i64* %x4F9493BB.i3851, align 8
  %or34.i3910 = or i64 %5120, %5121
  store i64 %or34.i3910, i64* %x6F9CDBFB.i3852, align 8
  %5122 = load i64, i64* %a6.addr.i3822, align 8
  %5123 = load i64, i64* %x6F9CDBFB.i3852, align 8
  %and35.i3911 = and i64 %5122, %5123
  store i64 %and35.i3911, i64* %x0000DBFB.i3853, align 8
  %5124 = load i64, i64* %a2.addr.i3818, align 8
  %5125 = load i64, i64* %x0000DBFB.i3853, align 8
  %and36.i3912 = and i64 %5124, %5125
  store i64 %and36.i3912, i64* %x00005151.i3854, align 8
  %5126 = load i64, i64* %x694E5A8D.i3841, align 8
  %5127 = load i64, i64* %x4F9493BB.i3851, align 8
  %xor37.i3913 = xor i64 %5126, %5127
  store i64 %xor37.i3913, i64* %x26DAC936.i3855, align 8
  %5128 = load i64, i64* %x00005151.i3854, align 8
  %5129 = load i64, i64* %x26DAC936.i3855, align 8
  %xor38.i3914 = xor i64 %5128, %5129
  store i64 %xor38.i3914, i64* %x26DA9867.i3856, align 8
  %5130 = load i64, i64* %a5.addr.i3821, align 8
  %5131 = load i64, i64* %x21101013.i3848, align 8
  %or39.i3915 = or i64 %5130, %5131
  store i64 %or39.i3915, i64* %x21FF10FF.i3857, align 8
  %5132 = load i64, i64* %x0000DBFB.i3853, align 8
  %5133 = load i64, i64* %x21FF10FF.i3857, align 8
  %xor40.i3916 = xor i64 %5132, %5133
  store i64 %xor40.i3916, i64* %x21FFCB04.i3858, align 8
  %5134 = load i64, i64* %a5.addr.i3821, align 8
  %5135 = load i64, i64* %x26DAC936.i3855, align 8
  %xor41.i3917 = xor i64 %5134, %5135
  store i64 %xor41.i3917, i64* %x2625C9C9.i3859, align 8
  %5136 = load i64, i64* %x21FFCB04.i3858, align 8
  %5137 = load i64, i64* %x2625C9C9.i3859, align 8
  %or42.i3918 = or i64 %5136, %5137
  store i64 %or42.i3918, i64* %x27FFCBCD.i3860, align 8
  %5138 = load i64, i64* %x27FFCBCD.i3860, align 8
  %5139 = load i64, i64* %a1.addr.i3817, align 8
  %and43.i3919 = and i64 %5138, %5139
  store i64 %and43.i3919, i64* %x20.i3869, align 8
  %5140 = load i64, i64* %x20.i3869, align 8
  %5141 = load i64, i64* %x699C585B.i3846, align 8
  %xor44.i3920 = xor i64 %5140, %5141
  store i64 %xor44.i3920, i64* %x21.i3870, align 8
  %5142 = load i64*, i64** %out3.addr.i3825, align 8
  %5143 = load i64, i64* %5142, align 8
  %5144 = load i64, i64* %x21.i3870, align 8
  %xor45.i3921 = xor i64 %5143, %5144
  %5145 = load i64*, i64** %out3.addr.i3825, align 8
  store i64 %xor45.i3921, i64* %5145, align 8
  %5146 = load i64, i64* %x0000DBFB.i3853, align 8
  %5147 = load i64, i64* %x27FFCBCD.i3860, align 8
  %xor46.i3922 = xor i64 %5146, %5147
  store i64 %xor46.i3922, i64* %x27FF1036.i3861, align 8
  %5148 = load i64, i64* %x003C003C.i3838, align 8
  %5149 = load i64, i64* %x27FF1036.i3861, align 8
  %or47.i3923 = or i64 %5148, %5149
  store i64 %or47.i3923, i64* %x27FF103E.i3862, align 8
  %5150 = load i64, i64* %x4F9493BB.i3851, align 8
  %neg48.i3924 = xor i64 %5150, -1
  store i64 %neg48.i3924, i64* %xB06B6C44.i3863, align 8
  %5151 = load i64, i64* %x27FF103E.i3862, align 8
  %5152 = load i64, i64* %xB06B6C44.i3863, align 8
  %xor49.i3925 = xor i64 %5151, %5152
  store i64 %xor49.i3925, i64* %x97947C7A.i3864, align 8
  %5153 = load i64, i64* %x97947C7A.i3864, align 8
  %5154 = load i64, i64* %a1.addr.i3817, align 8
  %neg50.i3926 = xor i64 %5154, -1
  %and51.i3927 = and i64 %5153, %neg50.i3926
  store i64 %and51.i3927, i64* %x10.i3867, align 8
  %5155 = load i64, i64* %x10.i3867, align 8
  %5156 = load i64, i64* %x26DA9867.i3856, align 8
  %xor52.i3928 = xor i64 %5155, %5156
  store i64 %xor52.i3928, i64* %x11.i3868, align 8
  %5157 = load i64*, i64** %out2.addr.i3824, align 8
  %5158 = load i64, i64* %5157, align 8
  %5159 = load i64, i64* %x11.i3868, align 8
  %xor53.i3929 = xor i64 %5158, %5159
  %5160 = load i64*, i64** %out2.addr.i3824, align 8
  store i64 %xor53.i3929, i64* %5160, align 8
  %5161 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 59), align 8
  %5162 = load i64**, i64*** %k, align 8
  %arrayidx829 = getelementptr inbounds i64*, i64** %5162, i64 90
  %5163 = load i64*, i64** %arrayidx829, align 8
  %arrayidx830 = getelementptr inbounds i64, i64* %5163, i64 0
  %5164 = load i64, i64* %arrayidx830, align 8
  %xor831 = xor i64 %5161, %5164
  %5165 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 60), align 8
  %5166 = load i64**, i64*** %k, align 8
  %arrayidx832 = getelementptr inbounds i64*, i64** %5166, i64 91
  %5167 = load i64*, i64** %arrayidx832, align 8
  %arrayidx833 = getelementptr inbounds i64, i64* %5167, i64 0
  %5168 = load i64, i64* %arrayidx833, align 8
  %xor834 = xor i64 %5165, %5168
  %5169 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 61), align 8
  %5170 = load i64**, i64*** %k, align 8
  %arrayidx835 = getelementptr inbounds i64*, i64** %5170, i64 92
  %5171 = load i64*, i64** %arrayidx835, align 8
  %arrayidx836 = getelementptr inbounds i64, i64* %5171, i64 0
  %5172 = load i64, i64* %arrayidx836, align 8
  %xor837 = xor i64 %5169, %5172
  %5173 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 62), align 8
  %5174 = load i64**, i64*** %k, align 8
  %arrayidx838 = getelementptr inbounds i64*, i64** %5174, i64 93
  %5175 = load i64*, i64** %arrayidx838, align 8
  %arrayidx839 = getelementptr inbounds i64, i64* %5175, i64 0
  %5176 = load i64, i64* %arrayidx839, align 8
  %xor840 = xor i64 %5173, %5176
  %5177 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 63), align 8
  %5178 = load i64**, i64*** %k, align 8
  %arrayidx841 = getelementptr inbounds i64*, i64** %5178, i64 94
  %5179 = load i64*, i64** %arrayidx841, align 8
  %arrayidx842 = getelementptr inbounds i64, i64* %5179, i64 0
  %5180 = load i64, i64* %arrayidx842, align 8
  %xor843 = xor i64 %5177, %5180
  %5181 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 32), align 8
  %5182 = load i64**, i64*** %k, align 8
  %arrayidx844 = getelementptr inbounds i64*, i64** %5182, i64 95
  %5183 = load i64*, i64** %arrayidx844, align 8
  %arrayidx845 = getelementptr inbounds i64, i64* %5183, i64 0
  %5184 = load i64, i64* %arrayidx845, align 8
  %xor846 = xor i64 %5181, %5184
  store i64 %xor831, i64* %a1.addr.i3714, align 8
  store i64 %xor834, i64* %a2.addr.i3715, align 8
  store i64 %xor837, i64* %a3.addr.i3716, align 8
  store i64 %xor840, i64* %a4.addr.i3717, align 8
  store i64 %xor843, i64* %a5.addr.i3718, align 8
  store i64 %xor846, i64* %a6.addr.i3719, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 4), i64** %out1.addr.i3720, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 26), i64** %out2.addr.i3721, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 14), i64** %out3.addr.i3722, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 20), i64** %out4.addr.i3723, align 8
  %5185 = load i64, i64* %a3.addr.i3716, align 8
  %5186 = load i64, i64* %a2.addr.i3715, align 8
  %neg.i3765 = xor i64 %5186, -1
  %and.i3766 = and i64 %5185, %neg.i3765
  store i64 %and.i3766, i64* %x0C0C0C0C.i3724, align 8
  %5187 = load i64, i64* %a5.addr.i3718, align 8
  %5188 = load i64, i64* %a3.addr.i3716, align 8
  %neg1.i3767 = xor i64 %5188, -1
  %and2.i3768 = and i64 %5187, %neg1.i3767
  store i64 %and2.i3768, i64* %x0000F0F0.i3725, align 8
  %5189 = load i64, i64* %a4.addr.i3717, align 8
  %5190 = load i64, i64* %x0000F0F0.i3725, align 8
  %xor.i3769 = xor i64 %5189, %5190
  store i64 %xor.i3769, i64* %x00FFF00F.i3726, align 8
  %5191 = load i64, i64* %a1.addr.i3714, align 8
  %5192 = load i64, i64* %x00FFF00F.i3726, align 8
  %and3.i3770 = and i64 %5191, %5192
  store i64 %and3.i3770, i64* %x00555005.i3727, align 8
  %5193 = load i64, i64* %x00555005.i3727, align 8
  %5194 = load i64, i64* %x0C0C0C0C.i3724, align 8
  %neg4.i3771 = xor i64 %5194, -1
  %and5.i3772 = and i64 %5193, %neg4.i3771
  store i64 %and5.i3772, i64* %x00515001.i3728, align 8
  %5195 = load i64, i64* %a2.addr.i3715, align 8
  %5196 = load i64, i64* %x00FFF00F.i3726, align 8
  %neg6.i3773 = xor i64 %5196, -1
  %and7.i3774 = and i64 %5195, %neg6.i3773
  store i64 %and7.i3774, i64* %x33000330.i3729, align 8
  %5197 = load i64, i64* %a1.addr.i3714, align 8
  %5198 = load i64, i64* %x33000330.i3729, align 8
  %or.i3775 = or i64 %5197, %5198
  store i64 %or.i3775, i64* %x77555775.i3730, align 8
  %5199 = load i64, i64* %a2.addr.i3715, align 8
  %5200 = load i64, i64* %a3.addr.i3716, align 8
  %neg8.i3776 = xor i64 %5200, -1
  %and9.i3777 = and i64 %5199, %neg8.i3776
  store i64 %and9.i3777, i64* %x30303030.i3731, align 8
  %5201 = load i64, i64* %a5.addr.i3718, align 8
  %5202 = load i64, i64* %x30303030.i3731, align 8
  %xor10.i3778 = xor i64 %5201, %5202
  store i64 %xor10.i3778, i64* %x3030CFCF.i3732, align 8
  %5203 = load i64, i64* %x77555775.i3730, align 8
  %5204 = load i64, i64* %x3030CFCF.i3732, align 8
  %and11.i3779 = and i64 %5203, %5204
  store i64 %and11.i3779, i64* %x30104745.i3733, align 8
  %5205 = load i64, i64* %x00555005.i3727, align 8
  %5206 = load i64, i64* %x30104745.i3733, align 8
  %or12.i3780 = or i64 %5205, %5206
  store i64 %or12.i3780, i64* %x30555745.i3734, align 8
  %5207 = load i64, i64* %x00FFF00F.i3726, align 8
  %neg13.i3781 = xor i64 %5207, -1
  store i64 %neg13.i3781, i64* %xFF000FF0.i3735, align 8
  %5208 = load i64, i64* %x30104745.i3733, align 8
  %5209 = load i64, i64* %xFF000FF0.i3735, align 8
  %xor14.i3782 = xor i64 %5208, %5209
  store i64 %xor14.i3782, i64* %xCF1048B5.i3736, align 8
  %5210 = load i64, i64* %a3.addr.i3716, align 8
  %5211 = load i64, i64* %x77555775.i3730, align 8
  %neg15.i3783 = xor i64 %5211, -1
  %and16.i3784 = and i64 %5210, %neg15.i3783
  store i64 %and16.i3784, i64* %x080A080A.i3737, align 8
  %5212 = load i64, i64* %xCF1048B5.i3736, align 8
  %5213 = load i64, i64* %x080A080A.i3737, align 8
  %xor17.i3785 = xor i64 %5212, %5213
  store i64 %xor17.i3785, i64* %xC71A40BF.i3738, align 8
  %5214 = load i64, i64* %x0C0C0C0C.i3724, align 8
  %5215 = load i64, i64* %xC71A40BF.i3738, align 8
  %xor18.i3786 = xor i64 %5214, %5215
  store i64 %xor18.i3786, i64* %xCB164CB3.i3739, align 8
  %5216 = load i64, i64* %x00515001.i3728, align 8
  %5217 = load i64, i64* %a6.addr.i3719, align 8
  %or19.i3787 = or i64 %5216, %5217
  store i64 %or19.i3787, i64* %x10.i3759, align 8
  %5218 = load i64, i64* %x10.i3759, align 8
  %5219 = load i64, i64* %xCB164CB3.i3739, align 8
  %xor20.i3788 = xor i64 %5218, %5219
  store i64 %xor20.i3788, i64* %x11.i3760, align 8
  %5220 = load i64*, i64** %out2.addr.i3721, align 8
  %5221 = load i64, i64* %5220, align 8
  %5222 = load i64, i64* %x11.i3760, align 8
  %xor21.i3789 = xor i64 %5221, %5222
  %5223 = load i64*, i64** %out2.addr.i3721, align 8
  store i64 %xor21.i3789, i64* %5223, align 8
  %5224 = load i64, i64* %a1.addr.i3714, align 8
  %5225 = load i64, i64* %xCB164CB3.i3739, align 8
  %xor22.i3790 = xor i64 %5224, %5225
  store i64 %xor22.i3790, i64* %x9E4319E6.i3740, align 8
  %5226 = load i64, i64* %a5.addr.i3718, align 8
  %5227 = load i64, i64* %x9E4319E6.i3740, align 8
  %and23.i3791 = and i64 %5226, %5227
  store i64 %and23.i3791, i64* %x000019E6.i3741, align 8
  %5228 = load i64, i64* %a2.addr.i3715, align 8
  %5229 = load i64, i64* %xC71A40BF.i3738, align 8
  %xor24.i3792 = xor i64 %5228, %5229
  store i64 %xor24.i3792, i64* %xF429738C.i3742, align 8
  %5230 = load i64, i64* %x000019E6.i3741, align 8
  %5231 = load i64, i64* %xF429738C.i3742, align 8
  %xor25.i3793 = xor i64 %5230, %5231
  store i64 %xor25.i3793, i64* %xF4296A6A.i3743, align 8
  %5232 = load i64, i64* %x33000330.i3729, align 8
  %5233 = load i64, i64* %xF4296A6A.i3743, align 8
  %xor26.i3794 = xor i64 %5232, %5233
  store i64 %xor26.i3794, i64* %xC729695A.i3744, align 8
  %5234 = load i64, i64* %x30555745.i3734, align 8
  %5235 = load i64, i64* %xF4296A6A.i3743, align 8
  %xor27.i3795 = xor i64 %5234, %5235
  store i64 %xor27.i3795, i64* %xC47C3D2F.i3745, align 8
  %5236 = load i64, i64* %a2.addr.i3715, align 8
  %5237 = load i64, i64* %xC47C3D2F.i3745, align 8
  %or28.i3796 = or i64 %5236, %5237
  store i64 %or28.i3796, i64* %xF77F3F3F.i3746, align 8
  %5238 = load i64, i64* %a5.addr.i3718, align 8
  %5239 = load i64, i64* %x9E4319E6.i3740, align 8
  %xor29.i3797 = xor i64 %5238, %5239
  store i64 %xor29.i3797, i64* %x9E43E619.i3747, align 8
  %5240 = load i64, i64* %xF77F3F3F.i3746, align 8
  %5241 = load i64, i64* %x9E43E619.i3747, align 8
  %xor30.i3798 = xor i64 %5240, %5241
  store i64 %xor30.i3798, i64* %x693CD926.i3748, align 8
  %5242 = load i64, i64* %x30555745.i3734, align 8
  %5243 = load i64, i64* %a6.addr.i3719, align 8
  %and31.i3799 = and i64 %5242, %5243
  store i64 %and31.i3799, i64* %x20.i3761, align 8
  %5244 = load i64, i64* %x20.i3761, align 8
  %5245 = load i64, i64* %x693CD926.i3748, align 8
  %xor32.i3800 = xor i64 %5244, %5245
  store i64 %xor32.i3800, i64* %x21.i3762, align 8
  %5246 = load i64*, i64** %out3.addr.i3722, align 8
  %5247 = load i64, i64* %5246, align 8
  %5248 = load i64, i64* %x21.i3762, align 8
  %xor33.i3801 = xor i64 %5247, %5248
  %5249 = load i64*, i64** %out3.addr.i3722, align 8
  store i64 %xor33.i3801, i64* %5249, align 8
  %5250 = load i64, i64* %x3030CFCF.i3732, align 8
  %5251 = load i64, i64* %xC729695A.i3744, align 8
  %xor34.i3802 = xor i64 %5250, %5251
  store i64 %xor34.i3802, i64* %xF719A695.i3749, align 8
  %5252 = load i64, i64* %a4.addr.i3717, align 8
  %5253 = load i64, i64* %xF429738C.i3742, align 8
  %or35.i3803 = or i64 %5252, %5253
  store i64 %or35.i3803, i64* %xF4FF73FF.i3750, align 8
  %5254 = load i64, i64* %xF719A695.i3749, align 8
  %5255 = load i64, i64* %xF4FF73FF.i3750, align 8
  %xor36.i3804 = xor i64 %5254, %5255
  store i64 %xor36.i3804, i64* %x03E6D56A.i3751, align 8
  %5256 = load i64, i64* %a1.addr.i3714, align 8
  %5257 = load i64, i64* %x03E6D56A.i3751, align 8
  %xor37.i3805 = xor i64 %5256, %5257
  store i64 %xor37.i3805, i64* %x56B3803F.i3752, align 8
  %5258 = load i64, i64* %x56B3803F.i3752, align 8
  %5259 = load i64, i64* %a6.addr.i3719, align 8
  %and38.i3806 = and i64 %5258, %5259
  store i64 %and38.i3806, i64* %x30.i3763, align 8
  %5260 = load i64, i64* %x30.i3763, align 8
  %5261 = load i64, i64* %xC729695A.i3744, align 8
  %xor39.i3807 = xor i64 %5260, %5261
  store i64 %xor39.i3807, i64* %x31.i3764, align 8
  %5262 = load i64*, i64** %out4.addr.i3723, align 8
  %5263 = load i64, i64* %5262, align 8
  %5264 = load i64, i64* %x31.i3764, align 8
  %xor40.i3808 = xor i64 %5263, %5264
  %5265 = load i64*, i64** %out4.addr.i3723, align 8
  store i64 %xor40.i3808, i64* %5265, align 8
  %5266 = load i64, i64* %xF719A695.i3749, align 8
  %5267 = load i64, i64* %a4.addr.i3717, align 8
  %neg41.i3809 = xor i64 %5267, -1
  %and42.i3810 = and i64 %5266, %neg41.i3809
  store i64 %and42.i3810, i64* %xF700A600.i3753, align 8
  %5268 = load i64, i64* %x693CD926.i3748, align 8
  %5269 = load i64, i64* %xF700A600.i3753, align 8
  %and43.i3811 = and i64 %5268, %5269
  store i64 %and43.i3811, i64* %x61008000.i3754, align 8
  %5270 = load i64, i64* %x00515001.i3728, align 8
  %5271 = load i64, i64* %x03E6D56A.i3751, align 8
  %xor44.i3812 = xor i64 %5270, %5271
  store i64 %xor44.i3812, i64* %x03B7856B.i3755, align 8
  %5272 = load i64, i64* %x61008000.i3754, align 8
  %5273 = load i64, i64* %x03B7856B.i3755, align 8
  %xor45.i3813 = xor i64 %5272, %5273
  store i64 %xor45.i3813, i64* %x62B7056B.i3756, align 8
  %5274 = load i64, i64* %x62B7056B.i3756, align 8
  %5275 = load i64, i64* %a6.addr.i3719, align 8
  %or46.i3814 = or i64 %5274, %5275
  store i64 %or46.i3814, i64* %x00.i3757, align 8
  %5276 = load i64, i64* %x00.i3757, align 8
  %5277 = load i64, i64* %xC729695A.i3744, align 8
  %xor47.i3815 = xor i64 %5276, %5277
  store i64 %xor47.i3815, i64* %x01.i3758, align 8
  %5278 = load i64*, i64** %out1.addr.i3720, align 8
  %5279 = load i64, i64* %5278, align 8
  %5280 = load i64, i64* %x01.i3758, align 8
  %xor48.i3816 = xor i64 %5279, %5280
  %5281 = load i64*, i64** %out1.addr.i3720, align 8
  store i64 %xor48.i3816, i64* %5281, align 8
  %5282 = load i64**, i64*** %k, align 8
  %add.ptr847 = getelementptr inbounds i64*, i64** %5282, i64 96
  store i64** %add.ptr847, i64*** %k, align 8
  br label %for.inc848

for.inc848:                                       ; preds = %for.body510
  %5283 = load i32, i32* %jj, align 4
  %inc849 = add nsw i32 %5283, 1
  store i32 %inc849, i32* %jj, align 4
  br label %for.cond508

for.end850:                                       ; preds = %for.cond508
  %5284 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 0), align 8
  %arrayidx851 = getelementptr inbounds i64, i64* %5284, i64 0
  %5285 = load i64, i64* %arrayidx851, align 8
  %5286 = load i64**, i64*** %k, align 8
  %arrayidx852 = getelementptr inbounds i64*, i64** %5286, i64 0
  %5287 = load i64*, i64** %arrayidx852, align 8
  %arrayidx853 = getelementptr inbounds i64, i64* %5287, i64 0
  %5288 = load i64, i64* %arrayidx853, align 8
  %xor854 = xor i64 %5285, %5288
  %5289 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 1), align 8
  %arrayidx855 = getelementptr inbounds i64, i64* %5289, i64 0
  %5290 = load i64, i64* %arrayidx855, align 8
  %5291 = load i64**, i64*** %k, align 8
  %arrayidx856 = getelementptr inbounds i64*, i64** %5291, i64 1
  %5292 = load i64*, i64** %arrayidx856, align 8
  %arrayidx857 = getelementptr inbounds i64, i64* %5292, i64 0
  %5293 = load i64, i64* %arrayidx857, align 8
  %xor858 = xor i64 %5290, %5293
  %5294 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 2), align 8
  %arrayidx859 = getelementptr inbounds i64, i64* %5294, i64 0
  %5295 = load i64, i64* %arrayidx859, align 8
  %5296 = load i64**, i64*** %k, align 8
  %arrayidx860 = getelementptr inbounds i64*, i64** %5296, i64 2
  %5297 = load i64*, i64** %arrayidx860, align 8
  %arrayidx861 = getelementptr inbounds i64, i64* %5297, i64 0
  %5298 = load i64, i64* %arrayidx861, align 8
  %xor862 = xor i64 %5295, %5298
  %5299 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 3), align 8
  %arrayidx863 = getelementptr inbounds i64, i64* %5299, i64 0
  %5300 = load i64, i64* %arrayidx863, align 8
  %5301 = load i64**, i64*** %k, align 8
  %arrayidx864 = getelementptr inbounds i64*, i64** %5301, i64 3
  %5302 = load i64*, i64** %arrayidx864, align 8
  %arrayidx865 = getelementptr inbounds i64, i64* %5302, i64 0
  %5303 = load i64, i64* %arrayidx865, align 8
  %xor866 = xor i64 %5300, %5303
  %5304 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 4), align 8
  %arrayidx867 = getelementptr inbounds i64, i64* %5304, i64 0
  %5305 = load i64, i64* %arrayidx867, align 8
  %5306 = load i64**, i64*** %k, align 8
  %arrayidx868 = getelementptr inbounds i64*, i64** %5306, i64 4
  %5307 = load i64*, i64** %arrayidx868, align 8
  %arrayidx869 = getelementptr inbounds i64, i64* %5307, i64 0
  %5308 = load i64, i64* %arrayidx869, align 8
  %xor870 = xor i64 %5305, %5308
  %5309 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 5), align 8
  %arrayidx871 = getelementptr inbounds i64, i64* %5309, i64 0
  %5310 = load i64, i64* %arrayidx871, align 8
  %5311 = load i64**, i64*** %k, align 8
  %arrayidx872 = getelementptr inbounds i64*, i64** %5311, i64 5
  %5312 = load i64*, i64** %arrayidx872, align 8
  %arrayidx873 = getelementptr inbounds i64, i64* %5312, i64 0
  %5313 = load i64, i64* %arrayidx873, align 8
  %xor874 = xor i64 %5310, %5313
  store i64 %xor854, i64* %a1.addr.i3591, align 8
  store i64 %xor858, i64* %a2.addr.i3592, align 8
  store i64 %xor862, i64* %a3.addr.i3593, align 8
  store i64 %xor866, i64* %a4.addr.i3594, align 8
  store i64 %xor870, i64* %a5.addr.i3595, align 8
  store i64 %xor874, i64* %a6.addr.i3596, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 40), i64** %out1.addr.i3597, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 48), i64** %out2.addr.i3598, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 54), i64** %out3.addr.i3599, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 62), i64** %out4.addr.i3600, align 8
  %5314 = load i64, i64* %a1.addr.i3591, align 8
  %5315 = load i64, i64* %a5.addr.i3595, align 8
  %neg.i3650 = xor i64 %5315, -1
  %and.i3651 = and i64 %5314, %neg.i3650
  store i64 %and.i3651, i64* %x55005500.i3601, align 8
  %5316 = load i64, i64* %a4.addr.i3594, align 8
  %5317 = load i64, i64* %x55005500.i3601, align 8
  %xor.i3652 = xor i64 %5316, %5317
  store i64 %xor.i3652, i64* %x5A0F5A0F.i3602, align 8
  %5318 = load i64, i64* %a3.addr.i3593, align 8
  %5319 = load i64, i64* %a6.addr.i3596, align 8
  %or.i3653 = or i64 %5318, %5319
  store i64 %or.i3653, i64* %x3333FFFF.i3603, align 8
  %5320 = load i64, i64* %a1.addr.i3591, align 8
  %5321 = load i64, i64* %a3.addr.i3593, align 8
  %xor1.i3654 = xor i64 %5320, %5321
  store i64 %xor1.i3654, i64* %x66666666.i3604, align 8
  %5322 = load i64, i64* %x3333FFFF.i3603, align 8
  %5323 = load i64, i64* %x66666666.i3604, align 8
  %and2.i3655 = and i64 %5322, %5323
  store i64 %and2.i3655, i64* %x22226666.i3605, align 8
  %5324 = load i64, i64* %a4.addr.i3594, align 8
  %5325 = load i64, i64* %x22226666.i3605, align 8
  %xor3.i3656 = xor i64 %5324, %5325
  store i64 %xor3.i3656, i64* %x2D2D6969.i3606, align 8
  %5326 = load i64, i64* %x2D2D6969.i3606, align 8
  %5327 = load i64, i64* %x5A0F5A0F.i3602, align 8
  %neg4.i3657 = xor i64 %5327, -1
  %and5.i3658 = and i64 %5326, %neg4.i3657
  store i64 %and5.i3658, i64* %x25202160.i3607, align 8
  %5328 = load i64, i64* %a5.addr.i3595, align 8
  %5329 = load i64, i64* %a6.addr.i3596, align 8
  %xor6.i3659 = xor i64 %5328, %5329
  store i64 %xor6.i3659, i64* %x00FFFF00.i3608, align 8
  %5330 = load i64, i64* %a3.addr.i3593, align 8
  %5331 = load i64, i64* %x00FFFF00.i3608, align 8
  %xor7.i3660 = xor i64 %5330, %5331
  store i64 %xor7.i3660, i64* %x33CCCC33.i3609, align 8
  %5332 = load i64, i64* %x5A0F5A0F.i3602, align 8
  %5333 = load i64, i64* %x33CCCC33.i3609, align 8
  %neg8.i3661 = xor i64 %5333, -1
  %and9.i3662 = and i64 %5332, %neg8.i3661
  store i64 %and9.i3662, i64* %x4803120C.i3610, align 8
  %5334 = load i64, i64* %a6.addr.i3596, align 8
  %5335 = load i64, i64* %x22226666.i3605, align 8
  %or10.i3663 = or i64 %5334, %5335
  store i64 %or10.i3663, i64* %x2222FFFF.i3611, align 8
  %5336 = load i64, i64* %x4803120C.i3610, align 8
  %5337 = load i64, i64* %x2222FFFF.i3611, align 8
  %xor11.i3664 = xor i64 %5336, %5337
  store i64 %xor11.i3664, i64* %x6A21EDF3.i3612, align 8
  %5338 = load i64, i64* %x6A21EDF3.i3612, align 8
  %5339 = load i64, i64* %x25202160.i3607, align 8
  %neg12.i3665 = xor i64 %5339, -1
  %and13.i3666 = and i64 %5338, %neg12.i3665
  store i64 %and13.i3666, i64* %x4A01CC93.i3613, align 8
  %5340 = load i64, i64* %a1.addr.i3591, align 8
  %5341 = load i64, i64* %a6.addr.i3596, align 8
  %or14.i3667 = or i64 %5340, %5341
  store i64 %or14.i3667, i64* %x5555FFFF.i3614, align 8
  %5342 = load i64, i64* %x6A21EDF3.i3612, align 8
  %5343 = load i64, i64* %x5555FFFF.i3614, align 8
  %or15.i3668 = or i64 %5342, %5343
  store i64 %or15.i3668, i64* %x7F75FFFF.i3615, align 8
  %5344 = load i64, i64* %a5.addr.i3595, align 8
  %5345 = load i64, i64* %x2D2D6969.i3606, align 8
  %neg16.i3669 = xor i64 %5345, -1
  %and17.i3670 = and i64 %5344, %neg16.i3669
  store i64 %and17.i3670, i64* %x00D20096.i3616, align 8
  %5346 = load i64, i64* %x7F75FFFF.i3615, align 8
  %5347 = load i64, i64* %x00D20096.i3616, align 8
  %xor18.i3671 = xor i64 %5346, %5347
  store i64 %xor18.i3671, i64* %x7FA7FF69.i3617, align 8
  %5348 = load i64, i64* %a4.addr.i3594, align 8
  %5349 = load i64, i64* %x5555FFFF.i3614, align 8
  %neg19.i3672 = xor i64 %5349, -1
  %and20.i3673 = and i64 %5348, %neg19.i3672
  store i64 %and20.i3673, i64* %x0A0A0000.i3618, align 8
  %5350 = load i64, i64* %x00D20096.i3616, align 8
  %5351 = load i64, i64* %x0A0A0000.i3618, align 8
  %xor21.i3674 = xor i64 %5350, %5351
  store i64 %xor21.i3674, i64* %x0AD80096.i3619, align 8
  %5352 = load i64, i64* %x00FFFF00.i3608, align 8
  %5353 = load i64, i64* %x66666666.i3604, align 8
  %neg22.i3675 = xor i64 %5353, -1
  %and23.i3676 = and i64 %5352, %neg22.i3675
  store i64 %and23.i3676, i64* %x00999900.i3620, align 8
  %5354 = load i64, i64* %x0AD80096.i3619, align 8
  %5355 = load i64, i64* %x00999900.i3620, align 8
  %or24.i3677 = or i64 %5354, %5355
  store i64 %or24.i3677, i64* %x0AD99996.i3621, align 8
  %5356 = load i64, i64* %a3.addr.i3593, align 8
  %5357 = load i64, i64* %x55005500.i3601, align 8
  %neg25.i3678 = xor i64 %5357, -1
  %and26.i3679 = and i64 %5356, %neg25.i3678
  store i64 %and26.i3679, i64* %x22332233.i3622, align 8
  %5358 = load i64, i64* %x5A0F5A0F.i3602, align 8
  %5359 = load i64, i64* %x7F75FFFF.i3615, align 8
  %xor27.i3680 = xor i64 %5358, %5359
  store i64 %xor27.i3680, i64* %x257AA5F0.i3623, align 8
  %5360 = load i64, i64* %x257AA5F0.i3623, align 8
  %5361 = load i64, i64* %x22332233.i3622, align 8
  %neg28.i3681 = xor i64 %5361, -1
  %and29.i3682 = and i64 %5360, %neg28.i3681
  store i64 %and29.i3682, i64* %x054885C0.i3624, align 8
  %5362 = load i64, i64* %x054885C0.i3624, align 8
  %neg30.i3683 = xor i64 %5362, -1
  store i64 %neg30.i3683, i64* %xFAB77A3F.i3625, align 8
  %5363 = load i64, i64* %x3333FFFF.i3603, align 8
  %5364 = load i64, i64* %x6A21EDF3.i3612, align 8
  %and31.i3684 = and i64 %5363, %5364
  store i64 %and31.i3684, i64* %x2221EDF3.i3626, align 8
  %5365 = load i64, i64* %xFAB77A3F.i3625, align 8
  %5366 = load i64, i64* %x2221EDF3.i3626, align 8
  %xor32.i3685 = xor i64 %5365, %5366
  store i64 %xor32.i3685, i64* %xD89697CC.i3627, align 8
  %5367 = load i64, i64* %x7FA7FF69.i3617, align 8
  %5368 = load i64, i64* %a2.addr.i3592, align 8
  %neg33.i3686 = xor i64 %5368, -1
  %and34.i3687 = and i64 %5367, %neg33.i3686
  store i64 %and34.i3687, i64* %x20.i3646, align 8
  %5369 = load i64, i64* %x20.i3646, align 8
  %5370 = load i64, i64* %xD89697CC.i3627, align 8
  %xor35.i3688 = xor i64 %5369, %5370
  store i64 %xor35.i3688, i64* %x21.i3647, align 8
  %5371 = load i64*, i64** %out3.addr.i3599, align 8
  %5372 = load i64, i64* %5371, align 8
  %5373 = load i64, i64* %x21.i3647, align 8
  %xor36.i3689 = xor i64 %5372, %5373
  %5374 = load i64*, i64** %out3.addr.i3599, align 8
  store i64 %xor36.i3689, i64* %5374, align 8
  %5375 = load i64, i64* %x00FFFF00.i3608, align 8
  %5376 = load i64, i64* %x054885C0.i3624, align 8
  %xor37.i3690 = xor i64 %5375, %5376
  store i64 %xor37.i3690, i64* %x05B77AC0.i3628, align 8
  %5377 = load i64, i64* %x00D20096.i3616, align 8
  %5378 = load i64, i64* %x05B77AC0.i3628, align 8
  %or38.i3691 = or i64 %5377, %5378
  store i64 %or38.i3691, i64* %x05F77AD6.i3629, align 8
  %5379 = load i64, i64* %x3333FFFF.i3603, align 8
  %5380 = load i64, i64* %x05F77AD6.i3629, align 8
  %xor39.i3692 = xor i64 %5379, %5380
  store i64 %xor39.i3692, i64* %x36C48529.i3630, align 8
  %5381 = load i64, i64* %a1.addr.i3591, align 8
  %5382 = load i64, i64* %x36C48529.i3630, align 8
  %xor40.i3693 = xor i64 %5381, %5382
  store i64 %xor40.i3693, i64* %x6391D07C.i3631, align 8
  %5383 = load i64, i64* %xD89697CC.i3627, align 8
  %5384 = load i64, i64* %x6391D07C.i3631, align 8
  %xor41.i3694 = xor i64 %5383, %5384
  store i64 %xor41.i3694, i64* %xBB0747B0.i3632, align 8
  %5385 = load i64, i64* %x25202160.i3607, align 8
  %5386 = load i64, i64* %a2.addr.i3592, align 8
  %or42.i3695 = or i64 %5385, %5386
  store i64 %or42.i3695, i64* %x00.i3642, align 8
  %5387 = load i64, i64* %x00.i3642, align 8
  %5388 = load i64, i64* %xBB0747B0.i3632, align 8
  %xor43.i3696 = xor i64 %5387, %5388
  store i64 %xor43.i3696, i64* %x01.i3643, align 8
  %5389 = load i64*, i64** %out1.addr.i3597, align 8
  %5390 = load i64, i64* %5389, align 8
  %5391 = load i64, i64* %x01.i3643, align 8
  %xor44.i3697 = xor i64 %5390, %5391
  %5392 = load i64*, i64** %out1.addr.i3597, align 8
  store i64 %xor44.i3697, i64* %5392, align 8
  %5393 = load i64, i64* %x3333FFFF.i3603, align 8
  %5394 = load i64, i64* %x7F75FFFF.i3615, align 8
  %xor45.i3698 = xor i64 %5393, %5394
  store i64 %xor45.i3698, i64* %x4C460000.i3633, align 8
  %5395 = load i64, i64* %x0AD99996.i3621, align 8
  %5396 = load i64, i64* %x4C460000.i3633, align 8
  %or46.i3699 = or i64 %5395, %5396
  store i64 %or46.i3699, i64* %x4EDF9996.i3634, align 8
  %5397 = load i64, i64* %x6391D07C.i3631, align 8
  %5398 = load i64, i64* %x4EDF9996.i3634, align 8
  %xor47.i3700 = xor i64 %5397, %5398
  store i64 %xor47.i3700, i64* %x2D4E49EA.i3635, align 8
  %5399 = load i64, i64* %x00FFFF00.i3608, align 8
  %5400 = load i64, i64* %xBB0747B0.i3632, align 8
  %or48.i3701 = or i64 %5399, %5400
  store i64 %or48.i3701, i64* %xBBFFFFB0.i3636, align 8
  %5401 = load i64, i64* %x2D4E49EA.i3635, align 8
  %5402 = load i64, i64* %xBBFFFFB0.i3636, align 8
  %xor49.i3702 = xor i64 %5401, %5402
  store i64 %xor49.i3702, i64* %x96B1B65A.i3637, align 8
  %5403 = load i64, i64* %x4A01CC93.i3613, align 8
  %5404 = load i64, i64* %a2.addr.i3592, align 8
  %or50.i3703 = or i64 %5403, %5404
  store i64 %or50.i3703, i64* %x10.i3644, align 8
  %5405 = load i64, i64* %x10.i3644, align 8
  %5406 = load i64, i64* %x96B1B65A.i3637, align 8
  %xor51.i3704 = xor i64 %5405, %5406
  store i64 %xor51.i3704, i64* %x11.i3645, align 8
  %5407 = load i64*, i64** %out2.addr.i3598, align 8
  %5408 = load i64, i64* %5407, align 8
  %5409 = load i64, i64* %x11.i3645, align 8
  %xor52.i3705 = xor i64 %5408, %5409
  %5410 = load i64*, i64** %out2.addr.i3598, align 8
  store i64 %xor52.i3705, i64* %5410, align 8
  %5411 = load i64, i64* %a5.addr.i3595, align 8
  %5412 = load i64, i64* %x5A0F5A0F.i3602, align 8
  %or53.i3706 = or i64 %5411, %5412
  store i64 %or53.i3706, i64* %x5AFF5AFF.i3638, align 8
  %5413 = load i64, i64* %x5AFF5AFF.i3638, align 8
  %5414 = load i64, i64* %x2D4E49EA.i3635, align 8
  %neg54.i3707 = xor i64 %5414, -1
  %and55.i3708 = and i64 %5413, %neg54.i3707
  store i64 %and55.i3708, i64* %x52B11215.i3639, align 8
  %5415 = load i64, i64* %x4A01CC93.i3613, align 8
  %5416 = load i64, i64* %x6391D07C.i3631, align 8
  %and56.i3709 = and i64 %5415, %5416
  store i64 %and56.i3709, i64* %x4201C010.i3640, align 8
  %5417 = load i64, i64* %x52B11215.i3639, align 8
  %5418 = load i64, i64* %x4201C010.i3640, align 8
  %xor57.i3710 = xor i64 %5417, %5418
  store i64 %xor57.i3710, i64* %x10B0D205.i3641, align 8
  %5419 = load i64, i64* %x10B0D205.i3641, align 8
  %5420 = load i64, i64* %a2.addr.i3592, align 8
  %or58.i3711 = or i64 %5419, %5420
  store i64 %or58.i3711, i64* %x30.i3648, align 8
  %5421 = load i64, i64* %x30.i3648, align 8
  %5422 = load i64, i64* %x0AD99996.i3621, align 8
  %xor59.i3712 = xor i64 %5421, %5422
  store i64 %xor59.i3712, i64* %x31.i3649, align 8
  %5423 = load i64*, i64** %out4.addr.i3600, align 8
  %5424 = load i64, i64* %5423, align 8
  %5425 = load i64, i64* %x31.i3649, align 8
  %xor60.i3713 = xor i64 %5424, %5425
  %5426 = load i64*, i64** %out4.addr.i3600, align 8
  store i64 %xor60.i3713, i64* %5426, align 8
  %5427 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 6), align 8
  %arrayidx875 = getelementptr inbounds i64, i64* %5427, i64 0
  %5428 = load i64, i64* %arrayidx875, align 8
  %5429 = load i64**, i64*** %k, align 8
  %arrayidx876 = getelementptr inbounds i64*, i64** %5429, i64 6
  %5430 = load i64*, i64** %arrayidx876, align 8
  %arrayidx877 = getelementptr inbounds i64, i64* %5430, i64 0
  %5431 = load i64, i64* %arrayidx877, align 8
  %xor878 = xor i64 %5428, %5431
  %5432 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 7), align 8
  %arrayidx879 = getelementptr inbounds i64, i64* %5432, i64 0
  %5433 = load i64, i64* %arrayidx879, align 8
  %5434 = load i64**, i64*** %k, align 8
  %arrayidx880 = getelementptr inbounds i64*, i64** %5434, i64 7
  %5435 = load i64*, i64** %arrayidx880, align 8
  %arrayidx881 = getelementptr inbounds i64, i64* %5435, i64 0
  %5436 = load i64, i64* %arrayidx881, align 8
  %xor882 = xor i64 %5433, %5436
  %5437 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 8), align 8
  %arrayidx883 = getelementptr inbounds i64, i64* %5437, i64 0
  %5438 = load i64, i64* %arrayidx883, align 8
  %5439 = load i64**, i64*** %k, align 8
  %arrayidx884 = getelementptr inbounds i64*, i64** %5439, i64 8
  %5440 = load i64*, i64** %arrayidx884, align 8
  %arrayidx885 = getelementptr inbounds i64, i64* %5440, i64 0
  %5441 = load i64, i64* %arrayidx885, align 8
  %xor886 = xor i64 %5438, %5441
  %5442 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 9), align 8
  %arrayidx887 = getelementptr inbounds i64, i64* %5442, i64 0
  %5443 = load i64, i64* %arrayidx887, align 8
  %5444 = load i64**, i64*** %k, align 8
  %arrayidx888 = getelementptr inbounds i64*, i64** %5444, i64 9
  %5445 = load i64*, i64** %arrayidx888, align 8
  %arrayidx889 = getelementptr inbounds i64, i64* %5445, i64 0
  %5446 = load i64, i64* %arrayidx889, align 8
  %xor890 = xor i64 %5443, %5446
  %5447 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 10), align 8
  %arrayidx891 = getelementptr inbounds i64, i64* %5447, i64 0
  %5448 = load i64, i64* %arrayidx891, align 8
  %5449 = load i64**, i64*** %k, align 8
  %arrayidx892 = getelementptr inbounds i64*, i64** %5449, i64 10
  %5450 = load i64*, i64** %arrayidx892, align 8
  %arrayidx893 = getelementptr inbounds i64, i64* %5450, i64 0
  %5451 = load i64, i64* %arrayidx893, align 8
  %xor894 = xor i64 %5448, %5451
  %5452 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 11), align 8
  %arrayidx895 = getelementptr inbounds i64, i64* %5452, i64 0
  %5453 = load i64, i64* %arrayidx895, align 8
  %5454 = load i64**, i64*** %k, align 8
  %arrayidx896 = getelementptr inbounds i64*, i64** %5454, i64 11
  %5455 = load i64*, i64** %arrayidx896, align 8
  %arrayidx897 = getelementptr inbounds i64, i64* %5455, i64 0
  %5456 = load i64, i64* %arrayidx897, align 8
  %xor898 = xor i64 %5453, %5456
  store i64 %xor878, i64* %a1.addr.i3477, align 8
  store i64 %xor882, i64* %a2.addr.i3478, align 8
  store i64 %xor886, i64* %a3.addr.i3479, align 8
  store i64 %xor890, i64* %a4.addr.i3480, align 8
  store i64 %xor894, i64* %a5.addr.i3481, align 8
  store i64 %xor898, i64* %a6.addr.i3482, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 44), i64** %out1.addr.i3483, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 59), i64** %out2.addr.i3484, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 33), i64** %out3.addr.i3485, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 49), i64** %out4.addr.i3486, align 8
  %5457 = load i64, i64* %a2.addr.i3478, align 8
  %5458 = load i64, i64* %a5.addr.i3481, align 8
  %xor.i3531 = xor i64 %5457, %5458
  store i64 %xor.i3531, i64* %x33CC33CC.i3487, align 8
  %5459 = load i64, i64* %a1.addr.i3477, align 8
  %5460 = load i64, i64* %a6.addr.i3482, align 8
  %neg.i3532 = xor i64 %5460, -1
  %and.i3533 = and i64 %5459, %neg.i3532
  store i64 %and.i3533, i64* %x55550000.i3488, align 8
  %5461 = load i64, i64* %a5.addr.i3481, align 8
  %5462 = load i64, i64* %x55550000.i3488, align 8
  %neg1.i3534 = xor i64 %5462, -1
  %and2.i3535 = and i64 %5461, %neg1.i3534
  store i64 %and2.i3535, i64* %x00AA00FF.i3489, align 8
  %5463 = load i64, i64* %a2.addr.i3478, align 8
  %5464 = load i64, i64* %x00AA00FF.i3489, align 8
  %or.i3536 = or i64 %5463, %5464
  store i64 %or.i3536, i64* %x33BB33FF.i3490, align 8
  %5465 = load i64, i64* %x33CC33CC.i3487, align 8
  %5466 = load i64, i64* %a6.addr.i3482, align 8
  %neg3.i3537 = xor i64 %5466, -1
  %and4.i3538 = and i64 %5465, %neg3.i3537
  store i64 %and4.i3538, i64* %x33CC0000.i3491, align 8
  %5467 = load i64, i64* %a1.addr.i3477, align 8
  %5468 = load i64, i64* %x33CC33CC.i3487, align 8
  %and5.i3539 = and i64 %5467, %5468
  store i64 %and5.i3539, i64* %x11441144.i3492, align 8
  %5469 = load i64, i64* %a5.addr.i3481, align 8
  %5470 = load i64, i64* %x11441144.i3492, align 8
  %xor6.i3540 = xor i64 %5469, %5470
  store i64 %xor6.i3540, i64* %x11BB11BB.i3493, align 8
  %5471 = load i64, i64* %x11BB11BB.i3493, align 8
  %5472 = load i64, i64* %x33CC0000.i3491, align 8
  %neg7.i3541 = xor i64 %5472, -1
  %and8.i3542 = and i64 %5471, %neg7.i3541
  store i64 %and8.i3542, i64* %x003311BB.i3494, align 8
  %5473 = load i64, i64* %a3.addr.i3479, align 8
  %5474 = load i64, i64* %a6.addr.i3482, align 8
  %and9.i3543 = and i64 %5473, %5474
  store i64 %and9.i3543, i64* %x00000F0F.i3495, align 8
  %5475 = load i64, i64* %x00AA00FF.i3489, align 8
  %5476 = load i64, i64* %x33CC0000.i3491, align 8
  %xor10.i3544 = xor i64 %5475, %5476
  store i64 %xor10.i3544, i64* %x336600FF.i3496, align 8
  %5477 = load i64, i64* %x33BB33FF.i3490, align 8
  %5478 = load i64, i64* %x336600FF.i3496, align 8
  %and11.i3545 = and i64 %5477, %5478
  store i64 %and11.i3545, i64* %x332200FF.i3497, align 8
  %5479 = load i64, i64* %x332200FF.i3497, align 8
  %5480 = load i64, i64* %x00000F0F.i3495, align 8
  %neg12.i3546 = xor i64 %5480, -1
  %and13.i3547 = and i64 %5479, %neg12.i3546
  store i64 %and13.i3547, i64* %x332200F0.i3498, align 8
  %5481 = load i64, i64* %a3.addr.i3479, align 8
  %5482 = load i64, i64* %x332200FF.i3497, align 8
  %and14.i3548 = and i64 %5481, %5482
  store i64 %and14.i3548, i64* %x0302000F.i3499, align 8
  %5483 = load i64, i64* %a1.addr.i3477, align 8
  %neg15.i3549 = xor i64 %5483, -1
  store i64 %neg15.i3549, i64* %xAAAAAAAA.i3500, align 8
  %5484 = load i64, i64* %x0302000F.i3499, align 8
  %5485 = load i64, i64* %xAAAAAAAA.i3500, align 8
  %xor16.i3550 = xor i64 %5484, %5485
  store i64 %xor16.i3550, i64* %xA9A8AAA5.i3501, align 8
  %5486 = load i64, i64* %a6.addr.i3482, align 8
  %5487 = load i64, i64* %x33CC33CC.i3487, align 8
  %xor17.i3551 = xor i64 %5486, %5487
  store i64 %xor17.i3551, i64* %x33CCCC33.i3502, align 8
  %5488 = load i64, i64* %x33CCCC33.i3502, align 8
  %5489 = load i64, i64* %x00000F0F.i3495, align 8
  %neg18.i3552 = xor i64 %5489, -1
  %and19.i3553 = and i64 %5488, %neg18.i3552
  store i64 %and19.i3553, i64* %x33CCC030.i3503, align 8
  %5490 = load i64, i64* %xA9A8AAA5.i3501, align 8
  %5491 = load i64, i64* %x33CCC030.i3503, align 8
  %xor20.i3554 = xor i64 %5490, %5491
  store i64 %xor20.i3554, i64* %x9A646A95.i3504, align 8
  %5492 = load i64, i64* %a4.addr.i3480, align 8
  %5493 = load i64, i64* %x332200F0.i3498, align 8
  %neg21.i3555 = xor i64 %5493, -1
  %and22.i3556 = and i64 %5492, %neg21.i3555
  store i64 %and22.i3556, i64* %x10.i3525, align 8
  %5494 = load i64, i64* %x10.i3525, align 8
  %5495 = load i64, i64* %x9A646A95.i3504, align 8
  %xor23.i3557 = xor i64 %5494, %5495
  store i64 %xor23.i3557, i64* %x11.i3526, align 8
  %5496 = load i64*, i64** %out2.addr.i3484, align 8
  %5497 = load i64, i64* %5496, align 8
  %5498 = load i64, i64* %x11.i3526, align 8
  %xor24.i3558 = xor i64 %5497, %5498
  %5499 = load i64*, i64** %out2.addr.i3484, align 8
  store i64 %xor24.i3558, i64* %5499, align 8
  %5500 = load i64, i64* %a2.addr.i3478, align 8
  %5501 = load i64, i64* %x33CCC030.i3503, align 8
  %neg25.i3559 = xor i64 %5501, -1
  %and26.i3560 = and i64 %5500, %neg25.i3559
  store i64 %and26.i3560, i64* %x00333303.i3505, align 8
  %5502 = load i64, i64* %x11BB11BB.i3493, align 8
  %5503 = load i64, i64* %x00333303.i3505, align 8
  %xor27.i3561 = xor i64 %5502, %5503
  store i64 %xor27.i3561, i64* %x118822B8.i3506, align 8
  %5504 = load i64, i64* %xA9A8AAA5.i3501, align 8
  %5505 = load i64, i64* %x118822B8.i3506, align 8
  %neg28.i3562 = xor i64 %5505, -1
  %and29.i3563 = and i64 %5504, %neg28.i3562
  store i64 %and29.i3563, i64* %xA8208805.i3507, align 8
  %5506 = load i64, i64* %a3.addr.i3479, align 8
  %5507 = load i64, i64* %x33CCCC33.i3502, align 8
  %xor30.i3564 = xor i64 %5506, %5507
  store i64 %xor30.i3564, i64* %x3CC3C33C.i3508, align 8
  %5508 = load i64, i64* %xA8208805.i3507, align 8
  %5509 = load i64, i64* %x3CC3C33C.i3508, align 8
  %xor31.i3565 = xor i64 %5508, %5509
  store i64 %xor31.i3565, i64* %x94E34B39.i3509, align 8
  %5510 = load i64, i64* %x33BB33FF.i3490, align 8
  %5511 = load i64, i64* %a4.addr.i3480, align 8
  %neg32.i3566 = xor i64 %5511, -1
  %and33.i3567 = and i64 %5510, %neg32.i3566
  store i64 %and33.i3567, i64* %x00.i3523, align 8
  %5512 = load i64, i64* %x00.i3523, align 8
  %5513 = load i64, i64* %x94E34B39.i3509, align 8
  %xor34.i3568 = xor i64 %5512, %5513
  store i64 %xor34.i3568, i64* %x01.i3524, align 8
  %5514 = load i64*, i64** %out1.addr.i3483, align 8
  %5515 = load i64, i64* %5514, align 8
  %5516 = load i64, i64* %x01.i3524, align 8
  %xor35.i3569 = xor i64 %5515, %5516
  %5517 = load i64*, i64** %out1.addr.i3483, align 8
  store i64 %xor35.i3569, i64* %5517, align 8
  %5518 = load i64, i64* %x0302000F.i3499, align 8
  %5519 = load i64, i64* %x00333303.i3505, align 8
  %xor36.i3570 = xor i64 %5518, %5519
  store i64 %xor36.i3570, i64* %x0331330C.i3510, align 8
  %5520 = load i64, i64* %x3CC3C33C.i3508, align 8
  %5521 = load i64, i64* %x0331330C.i3510, align 8
  %or37.i3571 = or i64 %5520, %5521
  store i64 %or37.i3571, i64* %x3FF3F33C.i3511, align 8
  %5522 = load i64, i64* %x33BB33FF.i3490, align 8
  %5523 = load i64, i64* %x9A646A95.i3504, align 8
  %xor38.i3572 = xor i64 %5522, %5523
  store i64 %xor38.i3572, i64* %xA9DF596A.i3512, align 8
  %5524 = load i64, i64* %x00000F0F.i3495, align 8
  %5525 = load i64, i64* %xA9DF596A.i3512, align 8
  %or39.i3573 = or i64 %5524, %5525
  store i64 %or39.i3573, i64* %xA9DF5F6F.i3513, align 8
  %5526 = load i64, i64* %x3FF3F33C.i3511, align 8
  %5527 = load i64, i64* %xA9DF5F6F.i3513, align 8
  %xor40.i3574 = xor i64 %5526, %5527
  store i64 %xor40.i3574, i64* %x962CAC53.i3514, align 8
  %5528 = load i64, i64* %x94E34B39.i3509, align 8
  %5529 = load i64, i64* %x0331330C.i3510, align 8
  %xor41.i3575 = xor i64 %5528, %5529
  store i64 %xor41.i3575, i64* %x97D27835.i3515, align 8
  %5530 = load i64, i64* %xA9DF5F6F.i3513, align 8
  %5531 = load i64, i64* %x97D27835.i3515, align 8
  %and42.i3576 = and i64 %5530, %5531
  store i64 %and42.i3576, i64* %x81D25825.i3516, align 8
  %5532 = load i64, i64* %a5.addr.i3481, align 8
  %5533 = load i64, i64* %x81D25825.i3516, align 8
  %xor43.i3577 = xor i64 %5532, %5533
  store i64 %xor43.i3577, i64* %x812D58DA.i3517, align 8
  %5534 = load i64, i64* %x812D58DA.i3517, align 8
  %5535 = load i64, i64* %x33CC0000.i3491, align 8
  %neg44.i3578 = xor i64 %5535, -1
  %and45.i3579 = and i64 %5534, %neg44.i3578
  store i64 %and45.i3579, i64* %x802158DA.i3518, align 8
  %5536 = load i64, i64* %x9A646A95.i3504, align 8
  %5537 = load i64, i64* %x802158DA.i3518, align 8
  %xor46.i3580 = xor i64 %5536, %5537
  store i64 %xor46.i3580, i64* %x1A45324F.i3519, align 8
  %5538 = load i64, i64* %x1A45324F.i3519, align 8
  %5539 = load i64, i64* %a4.addr.i3480, align 8
  %or47.i3581 = or i64 %5538, %5539
  store i64 %or47.i3581, i64* %x20.i3527, align 8
  %5540 = load i64, i64* %x20.i3527, align 8
  %5541 = load i64, i64* %x962CAC53.i3514, align 8
  %xor48.i3582 = xor i64 %5540, %5541
  store i64 %xor48.i3582, i64* %x21.i3528, align 8
  %5542 = load i64*, i64** %out3.addr.i3485, align 8
  %5543 = load i64, i64* %5542, align 8
  %5544 = load i64, i64* %x21.i3528, align 8
  %xor49.i3583 = xor i64 %5543, %5544
  %5545 = load i64*, i64** %out3.addr.i3485, align 8
  store i64 %xor49.i3583, i64* %5545, align 8
  %5546 = load i64, i64* %x1A45324F.i3519, align 8
  %5547 = load i64, i64* %x118822B8.i3506, align 8
  %neg50.i3584 = xor i64 %5547, -1
  %and51.i3585 = and i64 %5546, %neg50.i3584
  store i64 %and51.i3585, i64* %x0A451047.i3520, align 8
  %5548 = load i64, i64* %x33CCCC33.i3502, align 8
  %5549 = load i64, i64* %xA9DF596A.i3512, align 8
  %or52.i3586 = or i64 %5548, %5549
  store i64 %or52.i3586, i64* %xBBDFDD7B.i3521, align 8
  %5550 = load i64, i64* %x0A451047.i3520, align 8
  %5551 = load i64, i64* %xBBDFDD7B.i3521, align 8
  %xor53.i3587 = xor i64 %5550, %5551
  store i64 %xor53.i3587, i64* %xB19ACD3C.i3522, align 8
  %5552 = load i64, i64* %x003311BB.i3494, align 8
  %5553 = load i64, i64* %a4.addr.i3480, align 8
  %or54.i3588 = or i64 %5552, %5553
  store i64 %or54.i3588, i64* %x30.i3529, align 8
  %5554 = load i64, i64* %x30.i3529, align 8
  %5555 = load i64, i64* %xB19ACD3C.i3522, align 8
  %xor55.i3589 = xor i64 %5554, %5555
  store i64 %xor55.i3589, i64* %x31.i3530, align 8
  %5556 = load i64*, i64** %out4.addr.i3486, align 8
  %5557 = load i64, i64* %5556, align 8
  %5558 = load i64, i64* %x31.i3530, align 8
  %xor56.i3590 = xor i64 %5557, %5558
  %5559 = load i64*, i64** %out4.addr.i3486, align 8
  store i64 %xor56.i3590, i64* %5559, align 8
  %5560 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 7), align 8
  %5561 = load i64**, i64*** %k, align 8
  %arrayidx899 = getelementptr inbounds i64*, i64** %5561, i64 12
  %5562 = load i64*, i64** %arrayidx899, align 8
  %arrayidx900 = getelementptr inbounds i64, i64* %5562, i64 0
  %5563 = load i64, i64* %arrayidx900, align 8
  %xor901 = xor i64 %5560, %5563
  %5564 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 8), align 8
  %5565 = load i64**, i64*** %k, align 8
  %arrayidx902 = getelementptr inbounds i64*, i64** %5565, i64 13
  %5566 = load i64*, i64** %arrayidx902, align 8
  %arrayidx903 = getelementptr inbounds i64, i64* %5566, i64 0
  %5567 = load i64, i64* %arrayidx903, align 8
  %xor904 = xor i64 %5564, %5567
  %5568 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 9), align 8
  %5569 = load i64**, i64*** %k, align 8
  %arrayidx905 = getelementptr inbounds i64*, i64** %5569, i64 14
  %5570 = load i64*, i64** %arrayidx905, align 8
  %arrayidx906 = getelementptr inbounds i64, i64* %5570, i64 0
  %5571 = load i64, i64* %arrayidx906, align 8
  %xor907 = xor i64 %5568, %5571
  %5572 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 10), align 8
  %5573 = load i64**, i64*** %k, align 8
  %arrayidx908 = getelementptr inbounds i64*, i64** %5573, i64 15
  %5574 = load i64*, i64** %arrayidx908, align 8
  %arrayidx909 = getelementptr inbounds i64, i64* %5574, i64 0
  %5575 = load i64, i64* %arrayidx909, align 8
  %xor910 = xor i64 %5572, %5575
  %5576 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 11), align 8
  %5577 = load i64**, i64*** %k, align 8
  %arrayidx911 = getelementptr inbounds i64*, i64** %5577, i64 16
  %5578 = load i64*, i64** %arrayidx911, align 8
  %arrayidx912 = getelementptr inbounds i64, i64* %5578, i64 0
  %5579 = load i64, i64* %arrayidx912, align 8
  %xor913 = xor i64 %5576, %5579
  %5580 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 12), align 8
  %5581 = load i64**, i64*** %k, align 8
  %arrayidx914 = getelementptr inbounds i64*, i64** %5581, i64 17
  %5582 = load i64*, i64** %arrayidx914, align 8
  %arrayidx915 = getelementptr inbounds i64, i64* %5582, i64 0
  %5583 = load i64, i64* %arrayidx915, align 8
  %xor916 = xor i64 %5580, %5583
  store i64 %xor901, i64* %a1.addr.i3357, align 8
  store i64 %xor904, i64* %a2.addr.i3358, align 8
  store i64 %xor907, i64* %a3.addr.i3359, align 8
  store i64 %xor910, i64* %a4.addr.i3360, align 8
  store i64 %xor913, i64* %a5.addr.i3361, align 8
  store i64 %xor916, i64* %a6.addr.i3362, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 55), i64** %out1.addr.i3363, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 47), i64** %out2.addr.i3364, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 61), i64** %out3.addr.i3365, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 37), i64** %out4.addr.i3366, align 8
  %5584 = load i64, i64* %a1.addr.i3357, align 8
  %5585 = load i64, i64* %a2.addr.i3358, align 8
  %neg.i3413 = xor i64 %5585, -1
  %and.i3414 = and i64 %5584, %neg.i3413
  store i64 %and.i3414, i64* %x44444444.i3367, align 8
  %5586 = load i64, i64* %a3.addr.i3359, align 8
  %5587 = load i64, i64* %a6.addr.i3362, align 8
  %xor.i3415 = xor i64 %5586, %5587
  store i64 %xor.i3415, i64* %x0F0FF0F0.i3368, align 8
  %5588 = load i64, i64* %x44444444.i3367, align 8
  %5589 = load i64, i64* %x0F0FF0F0.i3368, align 8
  %or.i3416 = or i64 %5588, %5589
  store i64 %or.i3416, i64* %x4F4FF4F4.i3369, align 8
  %5590 = load i64, i64* %a4.addr.i3360, align 8
  %5591 = load i64, i64* %a6.addr.i3362, align 8
  %xor1.i3417 = xor i64 %5590, %5591
  store i64 %xor1.i3417, i64* %x00FFFF00.i3370, align 8
  %5592 = load i64, i64* %x00FFFF00.i3370, align 8
  %5593 = load i64, i64* %a1.addr.i3357, align 8
  %neg2.i3418 = xor i64 %5593, -1
  %and3.i3419 = and i64 %5592, %neg2.i3418
  store i64 %and3.i3419, i64* %x00AAAA00.i3371, align 8
  %5594 = load i64, i64* %x4F4FF4F4.i3369, align 8
  %5595 = load i64, i64* %x00AAAA00.i3371, align 8
  %xor4.i3420 = xor i64 %5594, %5595
  store i64 %xor4.i3420, i64* %x4FE55EF4.i3372, align 8
  %5596 = load i64, i64* %a2.addr.i3358, align 8
  %5597 = load i64, i64* %x0F0FF0F0.i3368, align 8
  %xor5.i3421 = xor i64 %5596, %5597
  store i64 %xor5.i3421, i64* %x3C3CC3C3.i3373, align 8
  %5598 = load i64, i64* %x3C3CC3C3.i3373, align 8
  %5599 = load i64, i64* %a6.addr.i3362, align 8
  %neg6.i3422 = xor i64 %5599, -1
  %and7.i3423 = and i64 %5598, %neg6.i3422
  store i64 %and7.i3423, i64* %x3C3C0000.i3374, align 8
  %5600 = load i64, i64* %x4F4FF4F4.i3369, align 8
  %5601 = load i64, i64* %x3C3C0000.i3374, align 8
  %xor8.i3424 = xor i64 %5600, %5601
  store i64 %xor8.i3424, i64* %x7373F4F4.i3375, align 8
  %5602 = load i64, i64* %x4FE55EF4.i3372, align 8
  %5603 = load i64, i64* %x7373F4F4.i3375, align 8
  %neg9.i3425 = xor i64 %5603, -1
  %and10.i3426 = and i64 %5602, %neg9.i3425
  store i64 %and10.i3426, i64* %x0C840A00.i3376, align 8
  %5604 = load i64, i64* %a6.addr.i3362, align 8
  %5605 = load i64, i64* %x4FE55EF4.i3372, align 8
  %and11.i3427 = and i64 %5604, %5605
  store i64 %and11.i3427, i64* %x00005EF4.i3377, align 8
  %5606 = load i64, i64* %a4.addr.i3360, align 8
  %5607 = load i64, i64* %x00005EF4.i3377, align 8
  %or12.i3428 = or i64 %5606, %5607
  store i64 %or12.i3428, i64* %x00FF5EFF.i3378, align 8
  %5608 = load i64, i64* %a1.addr.i3357, align 8
  %5609 = load i64, i64* %x00FF5EFF.i3378, align 8
  %and13.i3429 = and i64 %5608, %5609
  store i64 %and13.i3429, i64* %x00555455.i3379, align 8
  %5610 = load i64, i64* %x3C3CC3C3.i3373, align 8
  %5611 = load i64, i64* %x00555455.i3379, align 8
  %xor14.i3430 = xor i64 %5610, %5611
  store i64 %xor14.i3430, i64* %x3C699796.i3380, align 8
  %5612 = load i64, i64* %x4FE55EF4.i3372, align 8
  %5613 = load i64, i64* %a5.addr.i3361, align 8
  %neg15.i3431 = xor i64 %5613, -1
  %and16.i3432 = and i64 %5612, %neg15.i3431
  store i64 %and16.i3432, i64* %x30.i3411, align 8
  %5614 = load i64, i64* %x30.i3411, align 8
  %5615 = load i64, i64* %x3C699796.i3380, align 8
  %xor17.i3433 = xor i64 %5614, %5615
  store i64 %xor17.i3433, i64* %x31.i3412, align 8
  %5616 = load i64*, i64** %out4.addr.i3366, align 8
  %5617 = load i64, i64* %5616, align 8
  %5618 = load i64, i64* %x31.i3412, align 8
  %xor18.i3434 = xor i64 %5617, %5618
  %5619 = load i64*, i64** %out4.addr.i3366, align 8
  store i64 %xor18.i3434, i64* %5619, align 8
  %5620 = load i64, i64* %x0F0FF0F0.i3368, align 8
  %5621 = load i64, i64* %x00FFFF00.i3370, align 8
  %and19.i3435 = and i64 %5620, %5621
  store i64 %and19.i3435, i64* %x000FF000.i3381, align 8
  %5622 = load i64, i64* %a1.addr.i3357, align 8
  %5623 = load i64, i64* %a4.addr.i3360, align 8
  %xor20.i3436 = xor i64 %5622, %5623
  store i64 %xor20.i3436, i64* %x55AA55AA.i3382, align 8
  %5624 = load i64, i64* %x7373F4F4.i3375, align 8
  %5625 = load i64, i64* %x55AA55AA.i3382, align 8
  %xor21.i3437 = xor i64 %5624, %5625
  store i64 %xor21.i3437, i64* %x26D9A15E.i3383, align 8
  %5626 = load i64, i64* %a3.addr.i3359, align 8
  %5627 = load i64, i64* %x26D9A15E.i3383, align 8
  %or22.i3438 = or i64 %5626, %5627
  store i64 %or22.i3438, i64* %x2FDFAF5F.i3384, align 8
  %5628 = load i64, i64* %x2FDFAF5F.i3384, align 8
  %5629 = load i64, i64* %x000FF000.i3381, align 8
  %neg23.i3439 = xor i64 %5629, -1
  %and24.i3440 = and i64 %5628, %neg23.i3439
  store i64 %and24.i3440, i64* %x2FD00F5F.i3385, align 8
  %5630 = load i64, i64* %x00AAAA00.i3371, align 8
  %5631 = load i64, i64* %x55AA55AA.i3382, align 8
  %or25.i3441 = or i64 %5630, %5631
  store i64 %or25.i3441, i64* %x55AAFFAA.i3386, align 8
  %5632 = load i64, i64* %x3C699796.i3380, align 8
  %5633 = load i64, i64* %x55AAFFAA.i3386, align 8
  %neg26.i3442 = xor i64 %5633, -1
  %and27.i3443 = and i64 %5632, %neg26.i3442
  store i64 %and27.i3443, i64* %x28410014.i3387, align 8
  %5634 = load i64, i64* %a4.addr.i3360, align 8
  %5635 = load i64, i64* %a6.addr.i3362, align 8
  %and28.i3444 = and i64 %5634, %5635
  store i64 %and28.i3444, i64* %x000000FF.i3388, align 8
  %5636 = load i64, i64* %x000000FF.i3388, align 8
  %5637 = load i64, i64* %a2.addr.i3358, align 8
  %neg29.i3445 = xor i64 %5637, -1
  %and30.i3446 = and i64 %5636, %neg29.i3445
  store i64 %and30.i3446, i64* %x000000CC.i3389, align 8
  %5638 = load i64, i64* %x28410014.i3387, align 8
  %5639 = load i64, i64* %x000000CC.i3389, align 8
  %xor31.i3447 = xor i64 %5638, %5639
  store i64 %xor31.i3447, i64* %x284100D8.i3390, align 8
  %5640 = load i64, i64* %x284100D8.i3390, align 8
  %5641 = load i64, i64* %a3.addr.i3359, align 8
  %neg32.i3448 = xor i64 %5641, -1
  %and33.i3449 = and i64 %5640, %neg32.i3448
  store i64 %and33.i3449, i64* %x204000D0.i3391, align 8
  %5642 = load i64, i64* %x3C3CC3C3.i3373, align 8
  %5643 = load i64, i64* %x000000FF.i3388, align 8
  %or34.i3450 = or i64 %5642, %5643
  store i64 %or34.i3450, i64* %x3C3CC3FF.i3392, align 8
  %5644 = load i64, i64* %x3C3CC3FF.i3392, align 8
  %5645 = load i64, i64* %x204000D0.i3391, align 8
  %neg35.i3451 = xor i64 %5645, -1
  %and36.i3452 = and i64 %5644, %neg35.i3451
  store i64 %and36.i3452, i64* %x1C3CC32F.i3393, align 8
  %5646 = load i64, i64* %a1.addr.i3357, align 8
  %5647 = load i64, i64* %x1C3CC32F.i3393, align 8
  %xor37.i3453 = xor i64 %5646, %5647
  store i64 %xor37.i3453, i64* %x4969967A.i3394, align 8
  %5648 = load i64, i64* %x2FD00F5F.i3385, align 8
  %5649 = load i64, i64* %a5.addr.i3361, align 8
  %and38.i3454 = and i64 %5648, %5649
  store i64 %and38.i3454, i64* %x10.i3407, align 8
  %5650 = load i64, i64* %x10.i3407, align 8
  %5651 = load i64, i64* %x4969967A.i3394, align 8
  %xor39.i3455 = xor i64 %5650, %5651
  store i64 %xor39.i3455, i64* %x11.i3408, align 8
  %5652 = load i64*, i64** %out2.addr.i3364, align 8
  %5653 = load i64, i64* %5652, align 8
  %5654 = load i64, i64* %x11.i3408, align 8
  %xor40.i3456 = xor i64 %5653, %5654
  %5655 = load i64*, i64** %out2.addr.i3364, align 8
  store i64 %xor40.i3456, i64* %5655, align 8
  %5656 = load i64, i64* %x4FE55EF4.i3372, align 8
  %5657 = load i64, i64* %a2.addr.i3358, align 8
  %neg41.i3457 = xor i64 %5657, -1
  %and42.i3458 = and i64 %5656, %neg41.i3457
  store i64 %and42.i3458, i64* %x4CC44CC4.i3395, align 8
  %5658 = load i64, i64* %x4CC44CC4.i3395, align 8
  %5659 = load i64, i64* %a3.addr.i3359, align 8
  %neg43.i3459 = xor i64 %5659, -1
  %and44.i3460 = and i64 %5658, %neg43.i3459
  store i64 %and44.i3460, i64* %x40C040C0.i3396, align 8
  %5660 = load i64, i64* %x3C3CC3C3.i3373, align 8
  %5661 = load i64, i64* %x55AAFFAA.i3386, align 8
  %xor45.i3461 = xor i64 %5660, %5661
  store i64 %xor45.i3461, i64* %x69963C69.i3397, align 8
  %5662 = load i64, i64* %x69963C69.i3397, align 8
  %neg46.i3462 = xor i64 %5662, -1
  store i64 %neg46.i3462, i64* %x9669C396.i3398, align 8
  %5663 = load i64, i64* %x40C040C0.i3396, align 8
  %5664 = load i64, i64* %x9669C396.i3398, align 8
  %xor47.i3463 = xor i64 %5663, %5664
  store i64 %xor47.i3463, i64* %xD6A98356.i3399, align 8
  %5665 = load i64, i64* %a5.addr.i3361, align 8
  %5666 = load i64, i64* %x0C840A00.i3376, align 8
  %neg48.i3464 = xor i64 %5666, -1
  %and49.i3465 = and i64 %5665, %neg48.i3464
  store i64 %and49.i3465, i64* %x00.i3405, align 8
  %5667 = load i64, i64* %x00.i3405, align 8
  %5668 = load i64, i64* %xD6A98356.i3399, align 8
  %xor50.i3466 = xor i64 %5667, %5668
  store i64 %xor50.i3466, i64* %x01.i3406, align 8
  %5669 = load i64*, i64** %out1.addr.i3363, align 8
  %5670 = load i64, i64* %5669, align 8
  %5671 = load i64, i64* %x01.i3406, align 8
  %xor51.i3467 = xor i64 %5670, %5671
  %5672 = load i64*, i64** %out1.addr.i3363, align 8
  store i64 %xor51.i3467, i64* %5672, align 8
  %5673 = load i64, i64* %a4.addr.i3360, align 8
  %5674 = load i64, i64* %x0F0FF0F0.i3368, align 8
  %and52.i3468 = and i64 %5673, %5674
  store i64 %and52.i3468, i64* %x000F00F0.i3400, align 8
  %5675 = load i64, i64* %x3C3CC3C3.i3373, align 8
  %5676 = load i64, i64* %xD6A98356.i3399, align 8
  %or53.i3469 = or i64 %5675, %5676
  store i64 %or53.i3469, i64* %xFEBDC3D7.i3401, align 8
  %5677 = load i64, i64* %xFEBDC3D7.i3401, align 8
  %5678 = load i64, i64* %x000F00F0.i3400, align 8
  %neg54.i3470 = xor i64 %5678, -1
  %and55.i3471 = and i64 %5677, %neg54.i3470
  store i64 %and55.i3471, i64* %xFEB0C307.i3402, align 8
  %5679 = load i64, i64* %x00AAAA00.i3371, align 8
  %5680 = load i64, i64* %x4CC44CC4.i3395, align 8
  %or56.i3472 = or i64 %5679, %5680
  store i64 %or56.i3472, i64* %x4CEEEEC4.i3403, align 8
  %5681 = load i64, i64* %xFEB0C307.i3402, align 8
  %5682 = load i64, i64* %x4CEEEEC4.i3403, align 8
  %xor57.i3473 = xor i64 %5681, %5682
  store i64 %xor57.i3473, i64* %xB25E2DC3.i3404, align 8
  %5683 = load i64, i64* %x284100D8.i3390, align 8
  %5684 = load i64, i64* %a5.addr.i3361, align 8
  %or58.i3474 = or i64 %5683, %5684
  store i64 %or58.i3474, i64* %x20.i3409, align 8
  %5685 = load i64, i64* %x20.i3409, align 8
  %5686 = load i64, i64* %xB25E2DC3.i3404, align 8
  %xor59.i3475 = xor i64 %5685, %5686
  store i64 %xor59.i3475, i64* %x21.i3410, align 8
  %5687 = load i64*, i64** %out3.addr.i3365, align 8
  %5688 = load i64, i64* %5687, align 8
  %5689 = load i64, i64* %x21.i3410, align 8
  %xor60.i3476 = xor i64 %5688, %5689
  %5690 = load i64*, i64** %out3.addr.i3365, align 8
  store i64 %xor60.i3476, i64* %5690, align 8
  %5691 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 11), align 8
  %5692 = load i64**, i64*** %k, align 8
  %arrayidx917 = getelementptr inbounds i64*, i64** %5692, i64 18
  %5693 = load i64*, i64** %arrayidx917, align 8
  %arrayidx918 = getelementptr inbounds i64, i64* %5693, i64 0
  %5694 = load i64, i64* %arrayidx918, align 8
  %xor919 = xor i64 %5691, %5694
  %5695 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 12), align 8
  %5696 = load i64**, i64*** %k, align 8
  %arrayidx920 = getelementptr inbounds i64*, i64** %5696, i64 19
  %5697 = load i64*, i64** %arrayidx920, align 8
  %arrayidx921 = getelementptr inbounds i64, i64* %5697, i64 0
  %5698 = load i64, i64* %arrayidx921, align 8
  %xor922 = xor i64 %5695, %5698
  %5699 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 13), align 8
  %5700 = load i64**, i64*** %k, align 8
  %arrayidx923 = getelementptr inbounds i64*, i64** %5700, i64 20
  %5701 = load i64*, i64** %arrayidx923, align 8
  %arrayidx924 = getelementptr inbounds i64, i64* %5701, i64 0
  %5702 = load i64, i64* %arrayidx924, align 8
  %xor925 = xor i64 %5699, %5702
  %5703 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 14), align 8
  %5704 = load i64**, i64*** %k, align 8
  %arrayidx926 = getelementptr inbounds i64*, i64** %5704, i64 21
  %5705 = load i64*, i64** %arrayidx926, align 8
  %arrayidx927 = getelementptr inbounds i64, i64* %5705, i64 0
  %5706 = load i64, i64* %arrayidx927, align 8
  %xor928 = xor i64 %5703, %5706
  %5707 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 15), align 8
  %5708 = load i64**, i64*** %k, align 8
  %arrayidx929 = getelementptr inbounds i64*, i64** %5708, i64 22
  %5709 = load i64*, i64** %arrayidx929, align 8
  %arrayidx930 = getelementptr inbounds i64, i64* %5709, i64 0
  %5710 = load i64, i64* %arrayidx930, align 8
  %xor931 = xor i64 %5707, %5710
  %5711 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 16), align 8
  %5712 = load i64**, i64*** %k, align 8
  %arrayidx932 = getelementptr inbounds i64*, i64** %5712, i64 23
  %5713 = load i64*, i64** %arrayidx932, align 8
  %arrayidx933 = getelementptr inbounds i64, i64* %5713, i64 0
  %5714 = load i64, i64* %arrayidx933, align 8
  %xor934 = xor i64 %5711, %5714
  store i64 %xor919, i64* %a1.addr.i3268, align 8
  store i64 %xor922, i64* %a2.addr.i3269, align 8
  store i64 %xor925, i64* %a3.addr.i3270, align 8
  store i64 %xor928, i64* %a4.addr.i3271, align 8
  store i64 %xor931, i64* %a5.addr.i3272, align 8
  store i64 %xor934, i64* %a6.addr.i3273, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 57), i64** %out1.addr.i3274, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 51), i64** %out2.addr.i3275, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 41), i64** %out3.addr.i3276, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 32), i64** %out4.addr.i3277, align 8
  %5715 = load i64, i64* %a1.addr.i3268, align 8
  %5716 = load i64, i64* %a3.addr.i3270, align 8
  %xor.i3311 = xor i64 %5715, %5716
  store i64 %xor.i3311, i64* %x5A5A5A5A.i3278, align 8
  %5717 = load i64, i64* %a3.addr.i3270, align 8
  %5718 = load i64, i64* %a5.addr.i3272, align 8
  %xor1.i3312 = xor i64 %5717, %5718
  store i64 %xor1.i3312, i64* %x0F0FF0F0.i3279, align 8
  %5719 = load i64, i64* %a2.addr.i3269, align 8
  %5720 = load i64, i64* %a4.addr.i3271, align 8
  %or.i3313 = or i64 %5719, %5720
  store i64 %or.i3313, i64* %x33FF33FF.i3280, align 8
  %5721 = load i64, i64* %a5.addr.i3272, align 8
  %5722 = load i64, i64* %x33FF33FF.i3280, align 8
  %xor2.i3314 = xor i64 %5721, %5722
  store i64 %xor2.i3314, i64* %x33FFCC00.i3281, align 8
  %5723 = load i64, i64* %x0F0FF0F0.i3279, align 8
  %5724 = load i64, i64* %x33FFCC00.i3281, align 8
  %neg.i3315 = xor i64 %5724, -1
  %and.i3316 = and i64 %5723, %neg.i3315
  store i64 %and.i3316, i64* %x0C0030F0.i3282, align 8
  %5725 = load i64, i64* %x0F0FF0F0.i3279, align 8
  %5726 = load i64, i64* %a2.addr.i3269, align 8
  %neg3.i3317 = xor i64 %5726, -1
  %and4.i3318 = and i64 %5725, %neg3.i3317
  store i64 %and4.i3318, i64* %x0C0CC0C0.i3283, align 8
  %5727 = load i64, i64* %a4.addr.i3271, align 8
  %5728 = load i64, i64* %x0C0CC0C0.i3283, align 8
  %xor5.i3319 = xor i64 %5727, %5728
  store i64 %xor5.i3319, i64* %x0CF3C03F.i3284, align 8
  %5729 = load i64, i64* %x5A5A5A5A.i3278, align 8
  %5730 = load i64, i64* %x0CF3C03F.i3284, align 8
  %or6.i3320 = or i64 %5729, %5730
  store i64 %or6.i3320, i64* %x5EFBDA7F.i3285, align 8
  %5731 = load i64, i64* %x5EFBDA7F.i3285, align 8
  %5732 = load i64, i64* %x0C0030F0.i3282, align 8
  %neg7.i3321 = xor i64 %5732, -1
  %and8.i3322 = and i64 %5731, %neg7.i3321
  store i64 %and8.i3322, i64* %x52FBCA0F.i3286, align 8
  %5733 = load i64, i64* %a2.addr.i3269, align 8
  %5734 = load i64, i64* %x52FBCA0F.i3286, align 8
  %xor9.i3323 = xor i64 %5733, %5734
  store i64 %xor9.i3323, i64* %x61C8F93C.i3287, align 8
  %5735 = load i64, i64* %x0CF3C03F.i3284, align 8
  %5736 = load i64, i64* %x61C8F93C.i3287, align 8
  %and10.i3324 = and i64 %5735, %5736
  store i64 %and10.i3324, i64* %x00C0C03C.i3288, align 8
  %5737 = load i64, i64* %x0F0FF0F0.i3279, align 8
  %5738 = load i64, i64* %x00C0C03C.i3288, align 8
  %neg11.i3325 = xor i64 %5738, -1
  %and12.i3326 = and i64 %5737, %neg11.i3325
  store i64 %and12.i3326, i64* %x0F0F30C0.i3289, align 8
  %5739 = load i64, i64* %x5A5A5A5A.i3278, align 8
  %5740 = load i64, i64* %x61C8F93C.i3287, align 8
  %xor13.i3327 = xor i64 %5739, %5740
  store i64 %xor13.i3327, i64* %x3B92A366.i3290, align 8
  %5741 = load i64, i64* %x3B92A366.i3290, align 8
  %5742 = load i64, i64* %x0F0F30C0.i3289, align 8
  %neg14.i3328 = xor i64 %5742, -1
  %and15.i3329 = and i64 %5741, %neg14.i3328
  store i64 %and15.i3329, i64* %x30908326.i3291, align 8
  %5743 = load i64, i64* %x0C0030F0.i3282, align 8
  %5744 = load i64, i64* %x30908326.i3291, align 8
  %xor16.i3330 = xor i64 %5743, %5744
  store i64 %xor16.i3330, i64* %x3C90B3D6.i3292, align 8
  %5745 = load i64, i64* %a2.addr.i3269, align 8
  %5746 = load i64, i64* %a4.addr.i3271, align 8
  %xor17.i3331 = xor i64 %5745, %5746
  store i64 %xor17.i3331, i64* %x33CC33CC.i3293, align 8
  %5747 = load i64, i64* %a5.addr.i3272, align 8
  %5748 = load i64, i64* %x0C0CC0C0.i3283, align 8
  %or18.i3332 = or i64 %5747, %5748
  store i64 %or18.i3332, i64* %x0C0CFFFF.i3294, align 8
  %5749 = load i64, i64* %x3B92A366.i3290, align 8
  %5750 = load i64, i64* %x0C0CFFFF.i3294, align 8
  %xor19.i3333 = xor i64 %5749, %5750
  store i64 %xor19.i3333, i64* %x379E5C99.i3295, align 8
  %5751 = load i64, i64* %x379E5C99.i3295, align 8
  %5752 = load i64, i64* %x33CC33CC.i3293, align 8
  %neg20.i3334 = xor i64 %5752, -1
  %and21.i3335 = and i64 %5751, %neg20.i3334
  store i64 %and21.i3335, i64* %x04124C11.i3296, align 8
  %5753 = load i64, i64* %x52FBCA0F.i3286, align 8
  %5754 = load i64, i64* %x04124C11.i3296, align 8
  %xor22.i3336 = xor i64 %5753, %5754
  store i64 %xor22.i3336, i64* %x56E9861E.i3297, align 8
  %5755 = load i64, i64* %a6.addr.i3273, align 8
  %5756 = load i64, i64* %x3C90B3D6.i3292, align 8
  %neg23.i3337 = xor i64 %5756, -1
  %and24.i3338 = and i64 %5755, %neg23.i3337
  store i64 %and24.i3338, i64* %x00.i3303, align 8
  %5757 = load i64, i64* %x00.i3303, align 8
  %5758 = load i64, i64* %x56E9861E.i3297, align 8
  %xor25.i3339 = xor i64 %5757, %5758
  store i64 %xor25.i3339, i64* %x01.i3304, align 8
  %5759 = load i64*, i64** %out1.addr.i3274, align 8
  %5760 = load i64, i64* %5759, align 8
  %5761 = load i64, i64* %x01.i3304, align 8
  %xor26.i3340 = xor i64 %5760, %5761
  %5762 = load i64*, i64** %out1.addr.i3274, align 8
  store i64 %xor26.i3340, i64* %5762, align 8
  %5763 = load i64, i64* %x56E9861E.i3297, align 8
  %neg27.i3341 = xor i64 %5763, -1
  store i64 %neg27.i3341, i64* %xA91679E1.i3298, align 8
  %5764 = load i64, i64* %x3C90B3D6.i3292, align 8
  %5765 = load i64, i64* %a6.addr.i3273, align 8
  %neg28.i3342 = xor i64 %5765, -1
  %and29.i3343 = and i64 %5764, %neg28.i3342
  store i64 %and29.i3343, i64* %x10.i3305, align 8
  %5766 = load i64, i64* %x10.i3305, align 8
  %5767 = load i64, i64* %xA91679E1.i3298, align 8
  %xor30.i3344 = xor i64 %5766, %5767
  store i64 %xor30.i3344, i64* %x11.i3306, align 8
  %5768 = load i64*, i64** %out2.addr.i3275, align 8
  %5769 = load i64, i64* %5768, align 8
  %5770 = load i64, i64* %x11.i3306, align 8
  %xor31.i3345 = xor i64 %5769, %5770
  %5771 = load i64*, i64** %out2.addr.i3275, align 8
  store i64 %xor31.i3345, i64* %5771, align 8
  %5772 = load i64, i64* %x3C90B3D6.i3292, align 8
  %5773 = load i64, i64* %xA91679E1.i3298, align 8
  %xor32.i3346 = xor i64 %5772, %5773
  store i64 %xor32.i3346, i64* %x9586CA37.i3299, align 8
  %5774 = load i64, i64* %x9586CA37.i3299, align 8
  %5775 = load i64, i64* %x33CC33CC.i3293, align 8
  %neg33.i3347 = xor i64 %5775, -1
  %and34.i3348 = and i64 %5774, %neg33.i3347
  store i64 %and34.i3348, i64* %x8402C833.i3300, align 8
  %5776 = load i64, i64* %x00C0C03C.i3288, align 8
  %5777 = load i64, i64* %x8402C833.i3300, align 8
  %or35.i3349 = or i64 %5776, %5777
  store i64 %or35.i3349, i64* %x84C2C83F.i3301, align 8
  %5778 = load i64, i64* %x379E5C99.i3295, align 8
  %5779 = load i64, i64* %x84C2C83F.i3301, align 8
  %xor36.i3350 = xor i64 %5778, %5779
  store i64 %xor36.i3350, i64* %xB35C94A6.i3302, align 8
  %5780 = load i64, i64* %x61C8F93C.i3287, align 8
  %5781 = load i64, i64* %a6.addr.i3273, align 8
  %or37.i3351 = or i64 %5780, %5781
  store i64 %or37.i3351, i64* %x20.i3307, align 8
  %5782 = load i64, i64* %x20.i3307, align 8
  %5783 = load i64, i64* %xB35C94A6.i3302, align 8
  %xor38.i3352 = xor i64 %5782, %5783
  store i64 %xor38.i3352, i64* %x21.i3308, align 8
  %5784 = load i64*, i64** %out3.addr.i3276, align 8
  %5785 = load i64, i64* %5784, align 8
  %5786 = load i64, i64* %x21.i3308, align 8
  %xor39.i3353 = xor i64 %5785, %5786
  %5787 = load i64*, i64** %out3.addr.i3276, align 8
  store i64 %xor39.i3353, i64* %5787, align 8
  %5788 = load i64, i64* %a6.addr.i3273, align 8
  %5789 = load i64, i64* %x61C8F93C.i3287, align 8
  %and40.i3354 = and i64 %5788, %5789
  store i64 %and40.i3354, i64* %x30.i3309, align 8
  %5790 = load i64, i64* %x30.i3309, align 8
  %5791 = load i64, i64* %xB35C94A6.i3302, align 8
  %xor41.i3355 = xor i64 %5790, %5791
  store i64 %xor41.i3355, i64* %x31.i3310, align 8
  %5792 = load i64*, i64** %out4.addr.i3277, align 8
  %5793 = load i64, i64* %5792, align 8
  %5794 = load i64, i64* %x31.i3310, align 8
  %xor42.i3356 = xor i64 %5793, %5794
  %5795 = load i64*, i64** %out4.addr.i3277, align 8
  store i64 %xor42.i3356, i64* %5795, align 8
  %5796 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 24), align 8
  %arrayidx935 = getelementptr inbounds i64, i64* %5796, i64 0
  %5797 = load i64, i64* %arrayidx935, align 8
  %5798 = load i64**, i64*** %k, align 8
  %arrayidx936 = getelementptr inbounds i64*, i64** %5798, i64 24
  %5799 = load i64*, i64** %arrayidx936, align 8
  %arrayidx937 = getelementptr inbounds i64, i64* %5799, i64 0
  %5800 = load i64, i64* %arrayidx937, align 8
  %xor938 = xor i64 %5797, %5800
  %5801 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 25), align 8
  %arrayidx939 = getelementptr inbounds i64, i64* %5801, i64 0
  %5802 = load i64, i64* %arrayidx939, align 8
  %5803 = load i64**, i64*** %k, align 8
  %arrayidx940 = getelementptr inbounds i64*, i64** %5803, i64 25
  %5804 = load i64*, i64** %arrayidx940, align 8
  %arrayidx941 = getelementptr inbounds i64, i64* %5804, i64 0
  %5805 = load i64, i64* %arrayidx941, align 8
  %xor942 = xor i64 %5802, %5805
  %5806 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 26), align 8
  %arrayidx943 = getelementptr inbounds i64, i64* %5806, i64 0
  %5807 = load i64, i64* %arrayidx943, align 8
  %5808 = load i64**, i64*** %k, align 8
  %arrayidx944 = getelementptr inbounds i64*, i64** %5808, i64 26
  %5809 = load i64*, i64** %arrayidx944, align 8
  %arrayidx945 = getelementptr inbounds i64, i64* %5809, i64 0
  %5810 = load i64, i64* %arrayidx945, align 8
  %xor946 = xor i64 %5807, %5810
  %5811 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 27), align 8
  %arrayidx947 = getelementptr inbounds i64, i64* %5811, i64 0
  %5812 = load i64, i64* %arrayidx947, align 8
  %5813 = load i64**, i64*** %k, align 8
  %arrayidx948 = getelementptr inbounds i64*, i64** %5813, i64 27
  %5814 = load i64*, i64** %arrayidx948, align 8
  %arrayidx949 = getelementptr inbounds i64, i64* %5814, i64 0
  %5815 = load i64, i64* %arrayidx949, align 8
  %xor950 = xor i64 %5812, %5815
  %5816 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 28), align 8
  %arrayidx951 = getelementptr inbounds i64, i64* %5816, i64 0
  %5817 = load i64, i64* %arrayidx951, align 8
  %5818 = load i64**, i64*** %k, align 8
  %arrayidx952 = getelementptr inbounds i64*, i64** %5818, i64 28
  %5819 = load i64*, i64** %arrayidx952, align 8
  %arrayidx953 = getelementptr inbounds i64, i64* %5819, i64 0
  %5820 = load i64, i64* %arrayidx953, align 8
  %xor954 = xor i64 %5817, %5820
  %5821 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 29), align 8
  %arrayidx955 = getelementptr inbounds i64, i64* %5821, i64 0
  %5822 = load i64, i64* %arrayidx955, align 8
  %5823 = load i64**, i64*** %k, align 8
  %arrayidx956 = getelementptr inbounds i64*, i64** %5823, i64 29
  %5824 = load i64*, i64** %arrayidx956, align 8
  %arrayidx957 = getelementptr inbounds i64, i64* %5824, i64 0
  %5825 = load i64, i64* %arrayidx957, align 8
  %xor958 = xor i64 %5822, %5825
  store i64 %xor938, i64* %a1.addr.i3149, align 8
  store i64 %xor942, i64* %a2.addr.i3150, align 8
  store i64 %xor946, i64* %a3.addr.i3151, align 8
  store i64 %xor950, i64* %a4.addr.i3152, align 8
  store i64 %xor954, i64* %a5.addr.i3153, align 8
  store i64 %xor958, i64* %a6.addr.i3154, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 39), i64** %out1.addr.i3155, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 45), i64** %out2.addr.i3156, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 56), i64** %out3.addr.i3157, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 34), i64** %out4.addr.i3158, align 8
  %5826 = load i64, i64* %a1.addr.i3149, align 8
  %5827 = load i64, i64* %a3.addr.i3151, align 8
  %or.i3207 = or i64 %5826, %5827
  store i64 %or.i3207, i64* %x77777777.i3159, align 8
  %5828 = load i64, i64* %x77777777.i3159, align 8
  %5829 = load i64, i64* %a6.addr.i3154, align 8
  %neg.i3208 = xor i64 %5829, -1
  %and.i3209 = and i64 %5828, %neg.i3208
  store i64 %and.i3209, i64* %x77770000.i3160, align 8
  %5830 = load i64, i64* %a1.addr.i3149, align 8
  %5831 = load i64, i64* %x77770000.i3160, align 8
  %xor.i3210 = xor i64 %5830, %5831
  store i64 %xor.i3210, i64* %x22225555.i3161, align 8
  %5832 = load i64, i64* %a3.addr.i3151, align 8
  %5833 = load i64, i64* %x22225555.i3161, align 8
  %xor1.i3211 = xor i64 %5832, %5833
  store i64 %xor1.i3211, i64* %x11116666.i3162, align 8
  %5834 = load i64, i64* %a4.addr.i3152, align 8
  %5835 = load i64, i64* %x11116666.i3162, align 8
  %or2.i3212 = or i64 %5834, %5835
  store i64 %or2.i3212, i64* %x1F1F6F6F.i3163, align 8
  %5836 = load i64, i64* %x77770000.i3160, align 8
  %5837 = load i64, i64* %a4.addr.i3152, align 8
  %neg3.i3213 = xor i64 %5837, -1
  %and4.i3214 = and i64 %5836, %neg3.i3213
  store i64 %and4.i3214, i64* %x70700000.i3164, align 8
  %5838 = load i64, i64* %a3.addr.i3151, align 8
  %5839 = load i64, i64* %x70700000.i3164, align 8
  %xor5.i3215 = xor i64 %5838, %5839
  store i64 %xor5.i3215, i64* %x43433333.i3165, align 8
  %5840 = load i64, i64* %a5.addr.i3153, align 8
  %5841 = load i64, i64* %x43433333.i3165, align 8
  %and6.i3216 = and i64 %5840, %5841
  store i64 %and6.i3216, i64* %x00430033.i3166, align 8
  %5842 = load i64, i64* %a1.addr.i3149, align 8
  %5843 = load i64, i64* %x11116666.i3162, align 8
  %or7.i3217 = or i64 %5842, %5843
  store i64 %or7.i3217, i64* %x55557777.i3167, align 8
  %5844 = load i64, i64* %x00430033.i3166, align 8
  %5845 = load i64, i64* %x55557777.i3167, align 8
  %xor8.i3218 = xor i64 %5844, %5845
  store i64 %xor8.i3218, i64* %x55167744.i3168, align 8
  %5846 = load i64, i64* %a4.addr.i3152, align 8
  %5847 = load i64, i64* %x55167744.i3168, align 8
  %xor9.i3219 = xor i64 %5846, %5847
  store i64 %xor9.i3219, i64* %x5A19784B.i3169, align 8
  %5848 = load i64, i64* %a6.addr.i3154, align 8
  %5849 = load i64, i64* %x5A19784B.i3169, align 8
  %xor10.i3220 = xor i64 %5848, %5849
  store i64 %xor10.i3220, i64* %x5A1987B4.i3170, align 8
  %5850 = load i64, i64* %x22225555.i3161, align 8
  %5851 = load i64, i64* %x5A1987B4.i3170, align 8
  %or11.i3221 = or i64 %5850, %5851
  store i64 %or11.i3221, i64* %x7A3BD7F5.i3171, align 8
  %5852 = load i64, i64* %a5.addr.i3153, align 8
  %5853 = load i64, i64* %x7A3BD7F5.i3171, align 8
  %and12.i3222 = and i64 %5852, %5853
  store i64 %and12.i3222, i64* %x003B00F5.i3172, align 8
  %5854 = load i64, i64* %x22225555.i3161, align 8
  %5855 = load i64, i64* %x003B00F5.i3172, align 8
  %xor13.i3223 = xor i64 %5854, %5855
  store i64 %xor13.i3223, i64* %x221955A0.i3173, align 8
  %5856 = load i64, i64* %a4.addr.i3152, align 8
  %5857 = load i64, i64* %x55557777.i3167, align 8
  %and14.i3224 = and i64 %5856, %5857
  store i64 %and14.i3224, i64* %x05050707.i3174, align 8
  %5858 = load i64, i64* %x221955A0.i3173, align 8
  %5859 = load i64, i64* %x05050707.i3174, align 8
  %xor15.i3225 = xor i64 %5858, %5859
  store i64 %xor15.i3225, i64* %x271C52A7.i3175, align 8
  %5860 = load i64, i64* %x7A3BD7F5.i3171, align 8
  %5861 = load i64, i64* %a1.addr.i3149, align 8
  %neg16.i3226 = xor i64 %5861, -1
  %and17.i3227 = and i64 %5860, %neg16.i3226
  store i64 %and17.i3227, i64* %x2A2A82A0.i3176, align 8
  %5862 = load i64, i64* %x43433333.i3165, align 8
  %5863 = load i64, i64* %x2A2A82A0.i3176, align 8
  %xor18.i3228 = xor i64 %5862, %5863
  store i64 %xor18.i3228, i64* %x6969B193.i3177, align 8
  %5864 = load i64, i64* %a5.addr.i3153, align 8
  %5865 = load i64, i64* %x1F1F6F6F.i3163, align 8
  %xor19.i3229 = xor i64 %5864, %5865
  store i64 %xor19.i3229, i64* %x1FE06F90.i3178, align 8
  %5866 = load i64, i64* %x1FE06F90.i3178, align 8
  %5867 = load i64, i64* %x6969B193.i3177, align 8
  %neg20.i3230 = xor i64 %5867, -1
  %and21.i3231 = and i64 %5866, %neg20.i3230
  store i64 %and21.i3231, i64* %x16804E00.i3179, align 8
  %5868 = load i64, i64* %x16804E00.i3179, align 8
  %neg22.i3232 = xor i64 %5868, -1
  store i64 %neg22.i3232, i64* %xE97FB1FF.i3180, align 8
  %5869 = load i64, i64* %xE97FB1FF.i3180, align 8
  %5870 = load i64, i64* %a2.addr.i3150, align 8
  %neg23.i3233 = xor i64 %5870, -1
  %and24.i3234 = and i64 %5869, %neg23.i3233
  store i64 %and24.i3234, i64* %x20.i3203, align 8
  %5871 = load i64, i64* %x20.i3203, align 8
  %5872 = load i64, i64* %x5A19784B.i3169, align 8
  %xor25.i3235 = xor i64 %5871, %5872
  store i64 %xor25.i3235, i64* %x21.i3204, align 8
  %5873 = load i64*, i64** %out3.addr.i3157, align 8
  %5874 = load i64, i64* %5873, align 8
  %5875 = load i64, i64* %x21.i3204, align 8
  %xor26.i3236 = xor i64 %5874, %5875
  %5876 = load i64*, i64** %out3.addr.i3157, align 8
  store i64 %xor26.i3236, i64* %5876, align 8
  %5877 = load i64, i64* %x43433333.i3165, align 8
  %5878 = load i64, i64* %x003B00F5.i3172, align 8
  %neg27.i3237 = xor i64 %5878, -1
  %and28.i3238 = and i64 %5877, %neg27.i3237
  store i64 %and28.i3238, i64* %x43403302.i3181, align 8
  %5879 = load i64, i64* %x2A2A82A0.i3176, align 8
  %5880 = load i64, i64* %x1FE06F90.i3178, align 8
  %xor29.i3239 = xor i64 %5879, %5880
  store i64 %xor29.i3239, i64* %x35CAED30.i3182, align 8
  %5881 = load i64, i64* %x271C52A7.i3175, align 8
  %5882 = load i64, i64* %x35CAED30.i3182, align 8
  %or30.i3240 = or i64 %5881, %5882
  store i64 %or30.i3240, i64* %x37DEFFB7.i3183, align 8
  %5883 = load i64, i64* %x37DEFFB7.i3183, align 8
  %5884 = load i64, i64* %x43403302.i3181, align 8
  %neg31.i3241 = xor i64 %5884, -1
  %and32.i3242 = and i64 %5883, %neg31.i3241
  store i64 %and32.i3242, i64* %x349ECCB5.i3184, align 8
  %5885 = load i64, i64* %x1F1F6F6F.i3163, align 8
  %5886 = load i64, i64* %x349ECCB5.i3184, align 8
  %neg33.i3243 = xor i64 %5886, -1
  %and34.i3244 = and i64 %5885, %neg33.i3243
  store i64 %and34.i3244, i64* %x0B01234A.i3185, align 8
  %5887 = load i64, i64* %x5A1987B4.i3170, align 8
  %5888 = load i64, i64* %x349ECCB5.i3184, align 8
  %and35.i3245 = and i64 %5887, %5888
  store i64 %and35.i3245, i64* %x101884B4.i3186, align 8
  %5889 = load i64, i64* %x1FE06F90.i3178, align 8
  %5890 = load i64, i64* %x101884B4.i3186, align 8
  %xor36.i3246 = xor i64 %5889, %5890
  store i64 %xor36.i3246, i64* %x0FF8EB24.i3187, align 8
  %5891 = load i64, i64* %x43433333.i3165, align 8
  %5892 = load i64, i64* %x55557777.i3167, align 8
  %and37.i3247 = and i64 %5891, %5892
  store i64 %and37.i3247, i64* %x41413333.i3188, align 8
  %5893 = load i64, i64* %x0FF8EB24.i3187, align 8
  %5894 = load i64, i64* %x41413333.i3188, align 8
  %or38.i3248 = or i64 %5893, %5894
  store i64 %or38.i3248, i64* %x4FF9FB37.i3189, align 8
  %5895 = load i64, i64* %x003B00F5.i3172, align 8
  %5896 = load i64, i64* %x4FF9FB37.i3189, align 8
  %xor39.i3249 = xor i64 %5895, %5896
  store i64 %xor39.i3249, i64* %x4FC2FBC2.i3190, align 8
  %5897 = load i64, i64* %x4FC2FBC2.i3190, align 8
  %5898 = load i64, i64* %a2.addr.i3150, align 8
  %and40.i3250 = and i64 %5897, %5898
  store i64 %and40.i3250, i64* %x30.i3205, align 8
  %5899 = load i64, i64* %x30.i3205, align 8
  %5900 = load i64, i64* %x271C52A7.i3175, align 8
  %xor41.i3251 = xor i64 %5899, %5900
  store i64 %xor41.i3251, i64* %x31.i3206, align 8
  %5901 = load i64*, i64** %out4.addr.i3158, align 8
  %5902 = load i64, i64* %5901, align 8
  %5903 = load i64, i64* %x31.i3206, align 8
  %xor42.i3252 = xor i64 %5902, %5903
  %5904 = load i64*, i64** %out4.addr.i3158, align 8
  store i64 %xor42.i3252, i64* %5904, align 8
  %5905 = load i64, i64* %a1.addr.i3149, align 8
  %5906 = load i64, i64* %x77777777.i3159, align 8
  %xor43.i3253 = xor i64 %5905, %5906
  store i64 %xor43.i3253, i64* %x22222222.i3191, align 8
  %5907 = load i64, i64* %x349ECCB5.i3184, align 8
  %5908 = load i64, i64* %x22222222.i3191, align 8
  %xor44.i3254 = xor i64 %5907, %5908
  store i64 %xor44.i3254, i64* %x16BCEE97.i3192, align 8
  %5909 = load i64, i64* %a4.addr.i3152, align 8
  %5910 = load i64, i64* %x0FF8EB24.i3187, align 8
  %and45.i3255 = and i64 %5909, %5910
  store i64 %and45.i3255, i64* %x0F080B04.i3193, align 8
  %5911 = load i64, i64* %x16BCEE97.i3192, align 8
  %5912 = load i64, i64* %x0F080B04.i3193, align 8
  %xor46.i3256 = xor i64 %5911, %5912
  store i64 %xor46.i3256, i64* %x19B4E593.i3194, align 8
  %5913 = load i64, i64* %x0B01234A.i3185, align 8
  %5914 = load i64, i64* %a2.addr.i3150, align 8
  %or47.i3257 = or i64 %5913, %5914
  store i64 %or47.i3257, i64* %x00.i3199, align 8
  %5915 = load i64, i64* %x00.i3199, align 8
  %5916 = load i64, i64* %x19B4E593.i3194, align 8
  %xor48.i3258 = xor i64 %5915, %5916
  store i64 %xor48.i3258, i64* %x01.i3200, align 8
  %5917 = load i64*, i64** %out1.addr.i3155, align 8
  %5918 = load i64, i64* %5917, align 8
  %5919 = load i64, i64* %x01.i3200, align 8
  %xor49.i3259 = xor i64 %5918, %5919
  %5920 = load i64*, i64** %out1.addr.i3155, align 8
  store i64 %xor49.i3259, i64* %5920, align 8
  %5921 = load i64, i64* %x1F1F6F6F.i3163, align 8
  %5922 = load i64, i64* %x43433333.i3165, align 8
  %xor50.i3260 = xor i64 %5921, %5922
  store i64 %xor50.i3260, i64* %x5C5C5C5C.i3195, align 8
  %5923 = load i64, i64* %x5C5C5C5C.i3195, align 8
  %5924 = load i64, i64* %x19B4E593.i3194, align 8
  %neg51.i3261 = xor i64 %5924, -1
  %and52.i3262 = and i64 %5923, %neg51.i3261
  store i64 %and52.i3262, i64* %x4448184C.i3196, align 8
  %5925 = load i64, i64* %x22225555.i3161, align 8
  %5926 = load i64, i64* %x0FF8EB24.i3187, align 8
  %xor53.i3263 = xor i64 %5925, %5926
  store i64 %xor53.i3263, i64* %x2DDABE71.i3197, align 8
  %5927 = load i64, i64* %x4448184C.i3196, align 8
  %5928 = load i64, i64* %x2DDABE71.i3197, align 8
  %xor54.i3264 = xor i64 %5927, %5928
  store i64 %xor54.i3264, i64* %x6992A63D.i3198, align 8
  %5929 = load i64, i64* %x1F1F6F6F.i3163, align 8
  %5930 = load i64, i64* %a2.addr.i3150, align 8
  %and55.i3265 = and i64 %5929, %5930
  store i64 %and55.i3265, i64* %x10.i3201, align 8
  %5931 = load i64, i64* %x10.i3201, align 8
  %5932 = load i64, i64* %x6992A63D.i3198, align 8
  %xor56.i3266 = xor i64 %5931, %5932
  store i64 %xor56.i3266, i64* %x11.i3202, align 8
  %5933 = load i64*, i64** %out2.addr.i3156, align 8
  %5934 = load i64, i64* %5933, align 8
  %5935 = load i64, i64* %x11.i3202, align 8
  %xor57.i3267 = xor i64 %5934, %5935
  %5936 = load i64*, i64** %out2.addr.i3156, align 8
  store i64 %xor57.i3267, i64* %5936, align 8
  %5937 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 30), align 8
  %arrayidx959 = getelementptr inbounds i64, i64* %5937, i64 0
  %5938 = load i64, i64* %arrayidx959, align 8
  %5939 = load i64**, i64*** %k, align 8
  %arrayidx960 = getelementptr inbounds i64*, i64** %5939, i64 30
  %5940 = load i64*, i64** %arrayidx960, align 8
  %arrayidx961 = getelementptr inbounds i64, i64* %5940, i64 0
  %5941 = load i64, i64* %arrayidx961, align 8
  %xor962 = xor i64 %5938, %5941
  %5942 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 31), align 8
  %arrayidx963 = getelementptr inbounds i64, i64* %5942, i64 0
  %5943 = load i64, i64* %arrayidx963, align 8
  %5944 = load i64**, i64*** %k, align 8
  %arrayidx964 = getelementptr inbounds i64*, i64** %5944, i64 31
  %5945 = load i64*, i64** %arrayidx964, align 8
  %arrayidx965 = getelementptr inbounds i64, i64* %5945, i64 0
  %5946 = load i64, i64* %arrayidx965, align 8
  %xor966 = xor i64 %5943, %5946
  %5947 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 32), align 8
  %arrayidx967 = getelementptr inbounds i64, i64* %5947, i64 0
  %5948 = load i64, i64* %arrayidx967, align 8
  %5949 = load i64**, i64*** %k, align 8
  %arrayidx968 = getelementptr inbounds i64*, i64** %5949, i64 32
  %5950 = load i64*, i64** %arrayidx968, align 8
  %arrayidx969 = getelementptr inbounds i64, i64* %5950, i64 0
  %5951 = load i64, i64* %arrayidx969, align 8
  %xor970 = xor i64 %5948, %5951
  %5952 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 33), align 8
  %arrayidx971 = getelementptr inbounds i64, i64* %5952, i64 0
  %5953 = load i64, i64* %arrayidx971, align 8
  %5954 = load i64**, i64*** %k, align 8
  %arrayidx972 = getelementptr inbounds i64*, i64** %5954, i64 33
  %5955 = load i64*, i64** %arrayidx972, align 8
  %arrayidx973 = getelementptr inbounds i64, i64* %5955, i64 0
  %5956 = load i64, i64* %arrayidx973, align 8
  %xor974 = xor i64 %5953, %5956
  %5957 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 34), align 8
  %arrayidx975 = getelementptr inbounds i64, i64* %5957, i64 0
  %5958 = load i64, i64* %arrayidx975, align 8
  %5959 = load i64**, i64*** %k, align 8
  %arrayidx976 = getelementptr inbounds i64*, i64** %5959, i64 34
  %5960 = load i64*, i64** %arrayidx976, align 8
  %arrayidx977 = getelementptr inbounds i64, i64* %5960, i64 0
  %5961 = load i64, i64* %arrayidx977, align 8
  %xor978 = xor i64 %5958, %5961
  %5962 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 35), align 8
  %arrayidx979 = getelementptr inbounds i64, i64* %5962, i64 0
  %5963 = load i64, i64* %arrayidx979, align 8
  %5964 = load i64**, i64*** %k, align 8
  %arrayidx980 = getelementptr inbounds i64*, i64** %5964, i64 35
  %5965 = load i64*, i64** %arrayidx980, align 8
  %arrayidx981 = getelementptr inbounds i64, i64* %5965, i64 0
  %5966 = load i64, i64* %arrayidx981, align 8
  %xor982 = xor i64 %5963, %5966
  store i64 %xor962, i64* %a1.addr.i3035, align 8
  store i64 %xor966, i64* %a2.addr.i3036, align 8
  store i64 %xor970, i64* %a3.addr.i3037, align 8
  store i64 %xor974, i64* %a4.addr.i3038, align 8
  store i64 %xor978, i64* %a5.addr.i3039, align 8
  store i64 %xor982, i64* %a6.addr.i3040, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 35), i64** %out1.addr.i3041, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 60), i64** %out2.addr.i3042, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 42), i64** %out3.addr.i3043, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 50), i64** %out4.addr.i3044, align 8
  %5967 = load i64, i64* %a2.addr.i3036, align 8
  %5968 = load i64, i64* %a5.addr.i3039, align 8
  %xor.i3091 = xor i64 %5967, %5968
  store i64 %xor.i3091, i64* %x33CC33CC.i3045, align 8
  %5969 = load i64, i64* %a2.addr.i3036, align 8
  %5970 = load i64, i64* %a6.addr.i3040, align 8
  %or.i3092 = or i64 %5969, %5970
  store i64 %or.i3092, i64* %x3333FFFF.i3046, align 8
  %5971 = load i64, i64* %a1.addr.i3035, align 8
  %5972 = load i64, i64* %x3333FFFF.i3046, align 8
  %and.i3093 = and i64 %5971, %5972
  store i64 %and.i3093, i64* %x11115555.i3047, align 8
  %5973 = load i64, i64* %x33CC33CC.i3045, align 8
  %5974 = load i64, i64* %x11115555.i3047, align 8
  %xor1.i3094 = xor i64 %5973, %5974
  store i64 %xor1.i3094, i64* %x22DD6699.i3048, align 8
  %5975 = load i64, i64* %a6.addr.i3040, align 8
  %5976 = load i64, i64* %x22DD6699.i3048, align 8
  %xor2.i3095 = xor i64 %5975, %5976
  store i64 %xor2.i3095, i64* %x22DD9966.i3049, align 8
  %5977 = load i64, i64* %a5.addr.i3039, align 8
  %5978 = load i64, i64* %x22DD9966.i3049, align 8
  %neg.i3096 = xor i64 %5978, -1
  %and3.i3097 = and i64 %5977, %neg.i3096
  store i64 %and3.i3097, i64* %x00220099.i3050, align 8
  %5979 = load i64, i64* %a1.addr.i3035, align 8
  %5980 = load i64, i64* %x22DD9966.i3049, align 8
  %and4.i3098 = and i64 %5979, %5980
  store i64 %and4.i3098, i64* %x00551144.i3051, align 8
  %5981 = load i64, i64* %a2.addr.i3036, align 8
  %5982 = load i64, i64* %x00551144.i3051, align 8
  %xor5.i3099 = xor i64 %5981, %5982
  store i64 %xor5.i3099, i64* %x33662277.i3052, align 8
  %5983 = load i64, i64* %a1.addr.i3035, align 8
  %5984 = load i64, i64* %a3.addr.i3037, align 8
  %xor6.i3100 = xor i64 %5983, %5984
  store i64 %xor6.i3100, i64* %x5A5A5A5A.i3053, align 8
  %5985 = load i64, i64* %x33662277.i3052, align 8
  %5986 = load i64, i64* %x5A5A5A5A.i3053, align 8
  %or7.i3101 = or i64 %5985, %5986
  store i64 %or7.i3101, i64* %x7B7E7A7F.i3054, align 8
  %5987 = load i64, i64* %x22DD6699.i3048, align 8
  %5988 = load i64, i64* %x7B7E7A7F.i3054, align 8
  %xor8.i3102 = xor i64 %5987, %5988
  store i64 %xor8.i3102, i64* %x59A31CE6.i3055, align 8
  %5989 = load i64, i64* %a3.addr.i3037, align 8
  %5990 = load i64, i64* %x59A31CE6.i3055, align 8
  %and9.i3103 = and i64 %5989, %5990
  store i64 %and9.i3103, i64* %x09030C06.i3056, align 8
  %5991 = load i64, i64* %x09030C06.i3056, align 8
  %5992 = load i64, i64* %a6.addr.i3040, align 8
  %neg10.i3104 = xor i64 %5992, -1
  %and11.i3105 = and i64 %5991, %neg10.i3104
  store i64 %and11.i3105, i64* %x09030000.i3057, align 8
  %5993 = load i64, i64* %x00220099.i3050, align 8
  %5994 = load i64, i64* %x33662277.i3052, align 8
  %or12.i3106 = or i64 %5993, %5994
  store i64 %or12.i3106, i64* %x336622FF.i3058, align 8
  %5995 = load i64, i64* %x09030000.i3057, align 8
  %5996 = load i64, i64* %x336622FF.i3058, align 8
  %xor13.i3107 = xor i64 %5995, %5996
  store i64 %xor13.i3107, i64* %x3A6522FF.i3059, align 8
  %5997 = load i64, i64* %x3A6522FF.i3059, align 8
  %5998 = load i64, i64* %a4.addr.i3038, align 8
  %and14.i3108 = and i64 %5997, %5998
  store i64 %and14.i3108, i64* %x30.i3089, align 8
  %5999 = load i64, i64* %x30.i3089, align 8
  %6000 = load i64, i64* %x59A31CE6.i3055, align 8
  %xor15.i3109 = xor i64 %5999, %6000
  store i64 %xor15.i3109, i64* %x31.i3090, align 8
  %6001 = load i64*, i64** %out4.addr.i3044, align 8
  %6002 = load i64, i64* %6001, align 8
  %6003 = load i64, i64* %x31.i3090, align 8
  %xor16.i3110 = xor i64 %6002, %6003
  %6004 = load i64*, i64** %out4.addr.i3044, align 8
  store i64 %xor16.i3110, i64* %6004, align 8
  %6005 = load i64, i64* %a2.addr.i3036, align 8
  %6006 = load i64, i64* %x7B7E7A7F.i3054, align 8
  %xor17.i3111 = xor i64 %6005, %6006
  store i64 %xor17.i3111, i64* %x484D494C.i3060, align 8
  %6007 = load i64, i64* %a6.addr.i3040, align 8
  %6008 = load i64, i64* %x484D494C.i3060, align 8
  %neg18.i3112 = xor i64 %6008, -1
  %and19.i3113 = and i64 %6007, %neg18.i3112
  store i64 %and19.i3113, i64* %x0000B6B3.i3061, align 8
  %6009 = load i64, i64* %a3.addr.i3037, align 8
  %6010 = load i64, i64* %x0000B6B3.i3061, align 8
  %xor20.i3114 = xor i64 %6009, %6010
  store i64 %xor20.i3114, i64* %x0F0FB9BC.i3062, align 8
  %6011 = load i64, i64* %a5.addr.i3039, align 8
  %6012 = load i64, i64* %x09030C06.i3056, align 8
  %neg21.i3115 = xor i64 %6012, -1
  %and22.i3116 = and i64 %6011, %neg21.i3115
  store i64 %and22.i3116, i64* %x00FC00F9.i3063, align 8
  %6013 = load i64, i64* %x0F0FB9BC.i3062, align 8
  %6014 = load i64, i64* %x00FC00F9.i3063, align 8
  %or23.i3117 = or i64 %6013, %6014
  store i64 %or23.i3117, i64* %x0FFFB9FD.i3064, align 8
  %6015 = load i64, i64* %a1.addr.i3035, align 8
  %6016 = load i64, i64* %x59A31CE6.i3055, align 8
  %or24.i3118 = or i64 %6015, %6016
  store i64 %or24.i3118, i64* %x5DF75DF7.i3065, align 8
  %6017 = load i64, i64* %x336622FF.i3058, align 8
  %6018 = load i64, i64* %x5DF75DF7.i3065, align 8
  %and25.i3119 = and i64 %6017, %6018
  store i64 %and25.i3119, i64* %x116600F7.i3066, align 8
  %6019 = load i64, i64* %x0F0FB9BC.i3062, align 8
  %6020 = load i64, i64* %x116600F7.i3066, align 8
  %xor26.i3120 = xor i64 %6019, %6020
  store i64 %xor26.i3120, i64* %x1E69B94B.i3067, align 8
  %6021 = load i64, i64* %x1E69B94B.i3067, align 8
  %6022 = load i64, i64* %x09030000.i3057, align 8
  %neg27.i3121 = xor i64 %6022, -1
  %and28.i3122 = and i64 %6021, %neg27.i3121
  store i64 %and28.i3122, i64* %x1668B94B.i3068, align 8
  %6023 = load i64, i64* %x00220099.i3050, align 8
  %6024 = load i64, i64* %a4.addr.i3038, align 8
  %or29.i3123 = or i64 %6023, %6024
  store i64 %or29.i3123, i64* %x20.i3087, align 8
  %6025 = load i64, i64* %x20.i3087, align 8
  %6026 = load i64, i64* %x1668B94B.i3068, align 8
  %xor30.i3124 = xor i64 %6025, %6026
  store i64 %xor30.i3124, i64* %x21.i3088, align 8
  %6027 = load i64*, i64** %out3.addr.i3043, align 8
  %6028 = load i64, i64* %6027, align 8
  %6029 = load i64, i64* %x21.i3088, align 8
  %xor31.i3125 = xor i64 %6028, %6029
  %6030 = load i64*, i64** %out3.addr.i3043, align 8
  store i64 %xor31.i3125, i64* %6030, align 8
  %6031 = load i64, i64* %a2.addr.i3036, align 8
  %6032 = load i64, i64* %x5A5A5A5A.i3053, align 8
  %or32.i3126 = or i64 %6031, %6032
  store i64 %or32.i3126, i64* %x7B7B7B7B.i3069, align 8
  %6033 = load i64, i64* %x3A6522FF.i3059, align 8
  %6034 = load i64, i64* %x7B7B7B7B.i3069, align 8
  %xor33.i3127 = xor i64 %6033, %6034
  store i64 %xor33.i3127, i64* %x411E5984.i3070, align 8
  %6035 = load i64, i64* %x11115555.i3047, align 8
  %6036 = load i64, i64* %x0FFFB9FD.i3064, align 8
  %or34.i3128 = or i64 %6035, %6036
  store i64 %or34.i3128, i64* %x1FFFFDFD.i3071, align 8
  %6037 = load i64, i64* %x411E5984.i3070, align 8
  %6038 = load i64, i64* %x1FFFFDFD.i3071, align 8
  %xor35.i3129 = xor i64 %6037, %6038
  store i64 %xor35.i3129, i64* %x5EE1A479.i3072, align 8
  %6039 = load i64, i64* %x22DD6699.i3048, align 8
  %6040 = load i64, i64* %x1E69B94B.i3067, align 8
  %xor36.i3130 = xor i64 %6039, %6040
  store i64 %xor36.i3130, i64* %x3CB4DFD2.i3073, align 8
  %6041 = load i64, i64* %a5.addr.i3039, align 8
  %6042 = load i64, i64* %x3CB4DFD2.i3073, align 8
  %neg37.i3131 = xor i64 %6042, -1
  %and38.i3132 = and i64 %6041, %neg37.i3131
  store i64 %and38.i3132, i64* %x004B002D.i3074, align 8
  %6043 = load i64, i64* %x484D494C.i3060, align 8
  %neg39.i3133 = xor i64 %6043, -1
  store i64 %neg39.i3133, i64* %xB7B2B6B3.i3075, align 8
  %6044 = load i64, i64* %x7B7B7B7B.i3069, align 8
  %6045 = load i64, i64* %xB7B2B6B3.i3075, align 8
  %xor40.i3134 = xor i64 %6044, %6045
  store i64 %xor40.i3134, i64* %xCCC9CDC8.i3076, align 8
  %6046 = load i64, i64* %x004B002D.i3074, align 8
  %6047 = load i64, i64* %xCCC9CDC8.i3076, align 8
  %xor41.i3135 = xor i64 %6046, %6047
  store i64 %xor41.i3135, i64* %xCC82CDE5.i3077, align 8
  %6048 = load i64, i64* %xCC82CDE5.i3077, align 8
  %6049 = load i64, i64* %a4.addr.i3038, align 8
  %neg42.i3136 = xor i64 %6049, -1
  %and43.i3137 = and i64 %6048, %neg42.i3136
  store i64 %and43.i3137, i64* %x10.i3085, align 8
  %6050 = load i64, i64* %x10.i3085, align 8
  %6051 = load i64, i64* %x5EE1A479.i3072, align 8
  %xor44.i3138 = xor i64 %6050, %6051
  store i64 %xor44.i3138, i64* %x11.i3086, align 8
  %6052 = load i64*, i64** %out2.addr.i3042, align 8
  %6053 = load i64, i64* %6052, align 8
  %6054 = load i64, i64* %x11.i3086, align 8
  %xor45.i3139 = xor i64 %6053, %6054
  %6055 = load i64*, i64** %out2.addr.i3042, align 8
  store i64 %xor45.i3139, i64* %6055, align 8
  %6056 = load i64, i64* %a6.addr.i3040, align 8
  %6057 = load i64, i64* %x00551144.i3051, align 8
  %xor46.i3140 = xor i64 %6056, %6057
  store i64 %xor46.i3140, i64* %x0055EEBB.i3078, align 8
  %6058 = load i64, i64* %a1.addr.i3035, align 8
  %6059 = load i64, i64* %x0F0FB9BC.i3062, align 8
  %xor47.i3141 = xor i64 %6058, %6059
  store i64 %xor47.i3141, i64* %x5A5AECE9.i3079, align 8
  %6060 = load i64, i64* %x0055EEBB.i3078, align 8
  %6061 = load i64, i64* %x5A5AECE9.i3079, align 8
  %and48.i3142 = and i64 %6060, %6061
  store i64 %and48.i3142, i64* %x0050ECA9.i3080, align 8
  %6062 = load i64, i64* %x09030C06.i3056, align 8
  %6063 = load i64, i64* %xCCC9CDC8.i3076, align 8
  %xor49.i3143 = xor i64 %6062, %6063
  store i64 %xor49.i3143, i64* %xC5CAC1CE.i3081, align 8
  %6064 = load i64, i64* %x0050ECA9.i3080, align 8
  %6065 = load i64, i64* %xC5CAC1CE.i3081, align 8
  %xor50.i3144 = xor i64 %6064, %6065
  store i64 %xor50.i3144, i64* %xC59A2D67.i3082, align 8
  %6066 = load i64, i64* %x0FFFB9FD.i3064, align 8
  %6067 = load i64, i64* %a4.addr.i3038, align 8
  %neg51.i3145 = xor i64 %6067, -1
  %and52.i3146 = and i64 %6066, %neg51.i3145
  store i64 %and52.i3146, i64* %x00.i3083, align 8
  %6068 = load i64, i64* %x00.i3083, align 8
  %6069 = load i64, i64* %xC59A2D67.i3082, align 8
  %xor53.i3147 = xor i64 %6068, %6069
  store i64 %xor53.i3147, i64* %x01.i3084, align 8
  %6070 = load i64*, i64** %out1.addr.i3041, align 8
  %6071 = load i64, i64* %6070, align 8
  %6072 = load i64, i64* %x01.i3084, align 8
  %xor54.i3148 = xor i64 %6071, %6072
  %6073 = load i64*, i64** %out1.addr.i3041, align 8
  store i64 %xor54.i3148, i64* %6073, align 8
  %6074 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 23), align 8
  %6075 = load i64**, i64*** %k, align 8
  %arrayidx983 = getelementptr inbounds i64*, i64** %6075, i64 36
  %6076 = load i64*, i64** %arrayidx983, align 8
  %arrayidx984 = getelementptr inbounds i64, i64* %6076, i64 0
  %6077 = load i64, i64* %arrayidx984, align 8
  %xor985 = xor i64 %6074, %6077
  %6078 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 24), align 8
  %6079 = load i64**, i64*** %k, align 8
  %arrayidx986 = getelementptr inbounds i64*, i64** %6079, i64 37
  %6080 = load i64*, i64** %arrayidx986, align 8
  %arrayidx987 = getelementptr inbounds i64, i64* %6080, i64 0
  %6081 = load i64, i64* %arrayidx987, align 8
  %xor988 = xor i64 %6078, %6081
  %6082 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 25), align 8
  %6083 = load i64**, i64*** %k, align 8
  %arrayidx989 = getelementptr inbounds i64*, i64** %6083, i64 38
  %6084 = load i64*, i64** %arrayidx989, align 8
  %arrayidx990 = getelementptr inbounds i64, i64* %6084, i64 0
  %6085 = load i64, i64* %arrayidx990, align 8
  %xor991 = xor i64 %6082, %6085
  %6086 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 26), align 8
  %6087 = load i64**, i64*** %k, align 8
  %arrayidx992 = getelementptr inbounds i64*, i64** %6087, i64 39
  %6088 = load i64*, i64** %arrayidx992, align 8
  %arrayidx993 = getelementptr inbounds i64, i64* %6088, i64 0
  %6089 = load i64, i64* %arrayidx993, align 8
  %xor994 = xor i64 %6086, %6089
  %6090 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 27), align 8
  %6091 = load i64**, i64*** %k, align 8
  %arrayidx995 = getelementptr inbounds i64*, i64** %6091, i64 40
  %6092 = load i64*, i64** %arrayidx995, align 8
  %arrayidx996 = getelementptr inbounds i64, i64* %6092, i64 0
  %6093 = load i64, i64* %arrayidx996, align 8
  %xor997 = xor i64 %6090, %6093
  %6094 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 28), align 8
  %6095 = load i64**, i64*** %k, align 8
  %arrayidx998 = getelementptr inbounds i64*, i64** %6095, i64 41
  %6096 = load i64*, i64** %arrayidx998, align 8
  %arrayidx999 = getelementptr inbounds i64, i64* %6096, i64 0
  %6097 = load i64, i64* %arrayidx999, align 8
  %xor1000 = xor i64 %6094, %6097
  store i64 %xor985, i64* %a1.addr.i2922, align 8
  store i64 %xor988, i64* %a2.addr.i2923, align 8
  store i64 %xor991, i64* %a3.addr.i2924, align 8
  store i64 %xor994, i64* %a4.addr.i2925, align 8
  store i64 %xor997, i64* %a5.addr.i2926, align 8
  store i64 %xor1000, i64* %a6.addr.i2927, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 63), i64** %out1.addr.i2928, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 43), i64** %out2.addr.i2929, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 53), i64** %out3.addr.i2930, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 38), i64** %out4.addr.i2931, align 8
  %6098 = load i64, i64* %a4.addr.i2925, align 8
  %6099 = load i64, i64* %a5.addr.i2926, align 8
  %xor.i2978 = xor i64 %6098, %6099
  store i64 %xor.i2978, i64* %x0FF00FF0.i2932, align 8
  %6100 = load i64, i64* %a3.addr.i2924, align 8
  %6101 = load i64, i64* %x0FF00FF0.i2932, align 8
  %xor1.i2979 = xor i64 %6100, %6101
  store i64 %xor1.i2979, i64* %x3CC33CC3.i2933, align 8
  %6102 = load i64, i64* %a6.addr.i2927, align 8
  %6103 = load i64, i64* %x3CC33CC3.i2933, align 8
  %and.i2980 = and i64 %6102, %6103
  store i64 %and.i2980, i64* %x00003CC3.i2934, align 8
  %6104 = load i64, i64* %a4.addr.i2925, align 8
  %6105 = load i64, i64* %x0FF00FF0.i2932, align 8
  %and2.i2981 = and i64 %6104, %6105
  store i64 %and2.i2981, i64* %x0F000F00.i2935, align 8
  %6106 = load i64, i64* %a2.addr.i2923, align 8
  %6107 = load i64, i64* %x0F000F00.i2935, align 8
  %xor3.i2982 = xor i64 %6106, %6107
  store i64 %xor3.i2982, i64* %x5A555A55.i2936, align 8
  %6108 = load i64, i64* %x00003CC3.i2934, align 8
  %6109 = load i64, i64* %x5A555A55.i2936, align 8
  %and4.i2983 = and i64 %6108, %6109
  store i64 %and4.i2983, i64* %x00001841.i2937, align 8
  %6110 = load i64, i64* %a6.addr.i2927, align 8
  %6111 = load i64, i64* %x0F000F00.i2935, align 8
  %and5.i2984 = and i64 %6110, %6111
  store i64 %and5.i2984, i64* %x00000F00.i2938, align 8
  %6112 = load i64, i64* %a3.addr.i2924, align 8
  %6113 = load i64, i64* %x00000F00.i2938, align 8
  %xor6.i2985 = xor i64 %6112, %6113
  store i64 %xor6.i2985, i64* %x33333C33.i2939, align 8
  %6114 = load i64, i64* %x5A555A55.i2936, align 8
  %6115 = load i64, i64* %x33333C33.i2939, align 8
  %or.i2986 = or i64 %6114, %6115
  store i64 %or.i2986, i64* %x7B777E77.i2940, align 8
  %6116 = load i64, i64* %a6.addr.i2927, align 8
  %6117 = load i64, i64* %x0FF00FF0.i2932, align 8
  %xor7.i2987 = xor i64 %6116, %6117
  store i64 %xor7.i2987, i64* %x0FF0F00F.i2941, align 8
  %6118 = load i64, i64* %x7B777E77.i2940, align 8
  %6119 = load i64, i64* %x0FF0F00F.i2941, align 8
  %xor8.i2988 = xor i64 %6118, %6119
  store i64 %xor8.i2988, i64* %x74878E78.i2942, align 8
  %6120 = load i64, i64* %a1.addr.i2922, align 8
  %6121 = load i64, i64* %x00001841.i2937, align 8
  %neg.i2989 = xor i64 %6121, -1
  %and9.i2990 = and i64 %6120, %neg.i2989
  store i64 %and9.i2990, i64* %x30.i2976, align 8
  %6122 = load i64, i64* %x30.i2976, align 8
  %6123 = load i64, i64* %x74878E78.i2942, align 8
  %xor10.i2991 = xor i64 %6122, %6123
  store i64 %xor10.i2991, i64* %x31.i2977, align 8
  %6124 = load i64*, i64** %out4.addr.i2931, align 8
  %6125 = load i64, i64* %6124, align 8
  %6126 = load i64, i64* %x31.i2977, align 8
  %xor11.i2992 = xor i64 %6125, %6126
  %6127 = load i64*, i64** %out4.addr.i2931, align 8
  store i64 %xor11.i2992, i64* %6127, align 8
  %6128 = load i64, i64* %a5.addr.i2926, align 8
  %6129 = load i64, i64* %x3CC33CC3.i2933, align 8
  %neg12.i2993 = xor i64 %6129, -1
  %and13.i2994 = and i64 %6128, %neg12.i2993
  store i64 %and13.i2994, i64* %x003C003C.i2943, align 8
  %6130 = load i64, i64* %x5A555A55.i2936, align 8
  %6131 = load i64, i64* %x003C003C.i2943, align 8
  %or14.i2995 = or i64 %6130, %6131
  store i64 %or14.i2995, i64* %x5A7D5A7D.i2944, align 8
  %6132 = load i64, i64* %x00003CC3.i2934, align 8
  %6133 = load i64, i64* %x33333C33.i2939, align 8
  %xor15.i2996 = xor i64 %6132, %6133
  store i64 %xor15.i2996, i64* %x333300F0.i2945, align 8
  %6134 = load i64, i64* %x5A7D5A7D.i2944, align 8
  %6135 = load i64, i64* %x333300F0.i2945, align 8
  %xor16.i2997 = xor i64 %6134, %6135
  store i64 %xor16.i2997, i64* %x694E5A8D.i2946, align 8
  %6136 = load i64, i64* %x00003CC3.i2934, align 8
  %6137 = load i64, i64* %x0FF0F00F.i2941, align 8
  %xor17.i2998 = xor i64 %6136, %6137
  store i64 %xor17.i2998, i64* %x0FF0CCCC.i2947, align 8
  %6138 = load i64, i64* %a4.addr.i2925, align 8
  %6139 = load i64, i64* %x0FF0CCCC.i2947, align 8
  %neg18.i2999 = xor i64 %6139, -1
  %and19.i3000 = and i64 %6138, %neg18.i2999
  store i64 %and19.i3000, i64* %x000F0303.i2948, align 8
  %6140 = load i64, i64* %x5A555A55.i2936, align 8
  %6141 = load i64, i64* %x000F0303.i2948, align 8
  %neg20.i3001 = xor i64 %6141, -1
  %and21.i3002 = and i64 %6140, %neg20.i3001
  store i64 %and21.i3002, i64* %x5A505854.i2949, align 8
  %6142 = load i64, i64* %a5.addr.i2926, align 8
  %6143 = load i64, i64* %x333300F0.i2945, align 8
  %xor22.i3003 = xor i64 %6142, %6143
  store i64 %xor22.i3003, i64* %x33CC000F.i2950, align 8
  %6144 = load i64, i64* %x5A505854.i2949, align 8
  %6145 = load i64, i64* %x33CC000F.i2950, align 8
  %xor23.i3004 = xor i64 %6144, %6145
  store i64 %xor23.i3004, i64* %x699C585B.i2951, align 8
  %6146 = load i64, i64* %x0F000F00.i2935, align 8
  %6147 = load i64, i64* %x74878E78.i2942, align 8
  %or24.i3005 = or i64 %6146, %6147
  store i64 %or24.i3005, i64* %x7F878F78.i2952, align 8
  %6148 = load i64, i64* %a3.addr.i2924, align 8
  %6149 = load i64, i64* %x699C585B.i2951, align 8
  %and25.i3006 = and i64 %6148, %6149
  store i64 %and25.i3006, i64* %x21101013.i2953, align 8
  %6150 = load i64, i64* %x7F878F78.i2952, align 8
  %6151 = load i64, i64* %x21101013.i2953, align 8
  %or26.i3007 = or i64 %6150, %6151
  store i64 %or26.i3007, i64* %x7F979F7B.i2954, align 8
  %6152 = load i64, i64* %x3CC33CC3.i2933, align 8
  %6153 = load i64, i64* %x0FF0F00F.i2941, align 8
  %neg27.i3008 = xor i64 %6153, -1
  %and28.i3009 = and i64 %6152, %neg27.i3008
  store i64 %and28.i3009, i64* %x30030CC0.i2955, align 8
  %6154 = load i64, i64* %x7F979F7B.i2954, align 8
  %6155 = load i64, i64* %x30030CC0.i2955, align 8
  %xor29.i3010 = xor i64 %6154, %6155
  store i64 %xor29.i3010, i64* %x4F9493BB.i2956, align 8
  %6156 = load i64, i64* %x4F9493BB.i2956, align 8
  %6157 = load i64, i64* %a1.addr.i2922, align 8
  %neg30.i3011 = xor i64 %6157, -1
  %and31.i3012 = and i64 %6156, %neg30.i3011
  store i64 %and31.i3012, i64* %x00.i2970, align 8
  %6158 = load i64, i64* %x00.i2970, align 8
  %6159 = load i64, i64* %x694E5A8D.i2946, align 8
  %xor32.i3013 = xor i64 %6158, %6159
  store i64 %xor32.i3013, i64* %x01.i2971, align 8
  %6160 = load i64*, i64** %out1.addr.i2928, align 8
  %6161 = load i64, i64* %6160, align 8
  %6162 = load i64, i64* %x01.i2971, align 8
  %xor33.i3014 = xor i64 %6161, %6162
  %6163 = load i64*, i64** %out1.addr.i2928, align 8
  store i64 %xor33.i3014, i64* %6163, align 8
  %6164 = load i64, i64* %x699C585B.i2951, align 8
  %6165 = load i64, i64* %x4F9493BB.i2956, align 8
  %or34.i3015 = or i64 %6164, %6165
  store i64 %or34.i3015, i64* %x6F9CDBFB.i2957, align 8
  %6166 = load i64, i64* %a6.addr.i2927, align 8
  %6167 = load i64, i64* %x6F9CDBFB.i2957, align 8
  %and35.i3016 = and i64 %6166, %6167
  store i64 %and35.i3016, i64* %x0000DBFB.i2958, align 8
  %6168 = load i64, i64* %a2.addr.i2923, align 8
  %6169 = load i64, i64* %x0000DBFB.i2958, align 8
  %and36.i3017 = and i64 %6168, %6169
  store i64 %and36.i3017, i64* %x00005151.i2959, align 8
  %6170 = load i64, i64* %x694E5A8D.i2946, align 8
  %6171 = load i64, i64* %x4F9493BB.i2956, align 8
  %xor37.i3018 = xor i64 %6170, %6171
  store i64 %xor37.i3018, i64* %x26DAC936.i2960, align 8
  %6172 = load i64, i64* %x00005151.i2959, align 8
  %6173 = load i64, i64* %x26DAC936.i2960, align 8
  %xor38.i3019 = xor i64 %6172, %6173
  store i64 %xor38.i3019, i64* %x26DA9867.i2961, align 8
  %6174 = load i64, i64* %a5.addr.i2926, align 8
  %6175 = load i64, i64* %x21101013.i2953, align 8
  %or39.i3020 = or i64 %6174, %6175
  store i64 %or39.i3020, i64* %x21FF10FF.i2962, align 8
  %6176 = load i64, i64* %x0000DBFB.i2958, align 8
  %6177 = load i64, i64* %x21FF10FF.i2962, align 8
  %xor40.i3021 = xor i64 %6176, %6177
  store i64 %xor40.i3021, i64* %x21FFCB04.i2963, align 8
  %6178 = load i64, i64* %a5.addr.i2926, align 8
  %6179 = load i64, i64* %x26DAC936.i2960, align 8
  %xor41.i3022 = xor i64 %6178, %6179
  store i64 %xor41.i3022, i64* %x2625C9C9.i2964, align 8
  %6180 = load i64, i64* %x21FFCB04.i2963, align 8
  %6181 = load i64, i64* %x2625C9C9.i2964, align 8
  %or42.i3023 = or i64 %6180, %6181
  store i64 %or42.i3023, i64* %x27FFCBCD.i2965, align 8
  %6182 = load i64, i64* %x27FFCBCD.i2965, align 8
  %6183 = load i64, i64* %a1.addr.i2922, align 8
  %and43.i3024 = and i64 %6182, %6183
  store i64 %and43.i3024, i64* %x20.i2974, align 8
  %6184 = load i64, i64* %x20.i2974, align 8
  %6185 = load i64, i64* %x699C585B.i2951, align 8
  %xor44.i3025 = xor i64 %6184, %6185
  store i64 %xor44.i3025, i64* %x21.i2975, align 8
  %6186 = load i64*, i64** %out3.addr.i2930, align 8
  %6187 = load i64, i64* %6186, align 8
  %6188 = load i64, i64* %x21.i2975, align 8
  %xor45.i3026 = xor i64 %6187, %6188
  %6189 = load i64*, i64** %out3.addr.i2930, align 8
  store i64 %xor45.i3026, i64* %6189, align 8
  %6190 = load i64, i64* %x0000DBFB.i2958, align 8
  %6191 = load i64, i64* %x27FFCBCD.i2965, align 8
  %xor46.i3027 = xor i64 %6190, %6191
  store i64 %xor46.i3027, i64* %x27FF1036.i2966, align 8
  %6192 = load i64, i64* %x003C003C.i2943, align 8
  %6193 = load i64, i64* %x27FF1036.i2966, align 8
  %or47.i3028 = or i64 %6192, %6193
  store i64 %or47.i3028, i64* %x27FF103E.i2967, align 8
  %6194 = load i64, i64* %x4F9493BB.i2956, align 8
  %neg48.i3029 = xor i64 %6194, -1
  store i64 %neg48.i3029, i64* %xB06B6C44.i2968, align 8
  %6195 = load i64, i64* %x27FF103E.i2967, align 8
  %6196 = load i64, i64* %xB06B6C44.i2968, align 8
  %xor49.i3030 = xor i64 %6195, %6196
  store i64 %xor49.i3030, i64* %x97947C7A.i2969, align 8
  %6197 = load i64, i64* %x97947C7A.i2969, align 8
  %6198 = load i64, i64* %a1.addr.i2922, align 8
  %neg50.i3031 = xor i64 %6198, -1
  %and51.i3032 = and i64 %6197, %neg50.i3031
  store i64 %and51.i3032, i64* %x10.i2972, align 8
  %6199 = load i64, i64* %x10.i2972, align 8
  %6200 = load i64, i64* %x26DA9867.i2961, align 8
  %xor52.i3033 = xor i64 %6199, %6200
  store i64 %xor52.i3033, i64* %x11.i2973, align 8
  %6201 = load i64*, i64** %out2.addr.i2929, align 8
  %6202 = load i64, i64* %6201, align 8
  %6203 = load i64, i64* %x11.i2973, align 8
  %xor53.i3034 = xor i64 %6202, %6203
  %6204 = load i64*, i64** %out2.addr.i2929, align 8
  store i64 %xor53.i3034, i64* %6204, align 8
  %6205 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 27), align 8
  %6206 = load i64**, i64*** %k, align 8
  %arrayidx1001 = getelementptr inbounds i64*, i64** %6206, i64 42
  %6207 = load i64*, i64** %arrayidx1001, align 8
  %arrayidx1002 = getelementptr inbounds i64, i64* %6207, i64 0
  %6208 = load i64, i64* %arrayidx1002, align 8
  %xor1003 = xor i64 %6205, %6208
  %6209 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 28), align 8
  %6210 = load i64**, i64*** %k, align 8
  %arrayidx1004 = getelementptr inbounds i64*, i64** %6210, i64 43
  %6211 = load i64*, i64** %arrayidx1004, align 8
  %arrayidx1005 = getelementptr inbounds i64, i64* %6211, i64 0
  %6212 = load i64, i64* %arrayidx1005, align 8
  %xor1006 = xor i64 %6209, %6212
  %6213 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 29), align 8
  %6214 = load i64**, i64*** %k, align 8
  %arrayidx1007 = getelementptr inbounds i64*, i64** %6214, i64 44
  %6215 = load i64*, i64** %arrayidx1007, align 8
  %arrayidx1008 = getelementptr inbounds i64, i64* %6215, i64 0
  %6216 = load i64, i64* %arrayidx1008, align 8
  %xor1009 = xor i64 %6213, %6216
  %6217 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 30), align 8
  %6218 = load i64**, i64*** %k, align 8
  %arrayidx1010 = getelementptr inbounds i64*, i64** %6218, i64 45
  %6219 = load i64*, i64** %arrayidx1010, align 8
  %arrayidx1011 = getelementptr inbounds i64, i64* %6219, i64 0
  %6220 = load i64, i64* %arrayidx1011, align 8
  %xor1012 = xor i64 %6217, %6220
  %6221 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 31), align 8
  %6222 = load i64**, i64*** %k, align 8
  %arrayidx1013 = getelementptr inbounds i64*, i64** %6222, i64 46
  %6223 = load i64*, i64** %arrayidx1013, align 8
  %arrayidx1014 = getelementptr inbounds i64, i64* %6223, i64 0
  %6224 = load i64, i64* %arrayidx1014, align 8
  %xor1015 = xor i64 %6221, %6224
  %6225 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 0), align 8
  %6226 = load i64**, i64*** %k, align 8
  %arrayidx1016 = getelementptr inbounds i64*, i64** %6226, i64 47
  %6227 = load i64*, i64** %arrayidx1016, align 8
  %arrayidx1017 = getelementptr inbounds i64, i64* %6227, i64 0
  %6228 = load i64, i64* %arrayidx1017, align 8
  %xor1018 = xor i64 %6225, %6228
  store i64 %xor1003, i64* %a1.addr.i2819, align 8
  store i64 %xor1006, i64* %a2.addr.i2820, align 8
  store i64 %xor1009, i64* %a3.addr.i2821, align 8
  store i64 %xor1012, i64* %a4.addr.i2822, align 8
  store i64 %xor1015, i64* %a5.addr.i2823, align 8
  store i64 %xor1018, i64* %a6.addr.i2824, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 36), i64** %out1.addr.i2825, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 58), i64** %out2.addr.i2826, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 46), i64** %out3.addr.i2827, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 52), i64** %out4.addr.i2828, align 8
  %6229 = load i64, i64* %a3.addr.i2821, align 8
  %6230 = load i64, i64* %a2.addr.i2820, align 8
  %neg.i2870 = xor i64 %6230, -1
  %and.i2871 = and i64 %6229, %neg.i2870
  store i64 %and.i2871, i64* %x0C0C0C0C.i2829, align 8
  %6231 = load i64, i64* %a5.addr.i2823, align 8
  %6232 = load i64, i64* %a3.addr.i2821, align 8
  %neg1.i2872 = xor i64 %6232, -1
  %and2.i2873 = and i64 %6231, %neg1.i2872
  store i64 %and2.i2873, i64* %x0000F0F0.i2830, align 8
  %6233 = load i64, i64* %a4.addr.i2822, align 8
  %6234 = load i64, i64* %x0000F0F0.i2830, align 8
  %xor.i2874 = xor i64 %6233, %6234
  store i64 %xor.i2874, i64* %x00FFF00F.i2831, align 8
  %6235 = load i64, i64* %a1.addr.i2819, align 8
  %6236 = load i64, i64* %x00FFF00F.i2831, align 8
  %and3.i2875 = and i64 %6235, %6236
  store i64 %and3.i2875, i64* %x00555005.i2832, align 8
  %6237 = load i64, i64* %x00555005.i2832, align 8
  %6238 = load i64, i64* %x0C0C0C0C.i2829, align 8
  %neg4.i2876 = xor i64 %6238, -1
  %and5.i2877 = and i64 %6237, %neg4.i2876
  store i64 %and5.i2877, i64* %x00515001.i2833, align 8
  %6239 = load i64, i64* %a2.addr.i2820, align 8
  %6240 = load i64, i64* %x00FFF00F.i2831, align 8
  %neg6.i2878 = xor i64 %6240, -1
  %and7.i2879 = and i64 %6239, %neg6.i2878
  store i64 %and7.i2879, i64* %x33000330.i2834, align 8
  %6241 = load i64, i64* %a1.addr.i2819, align 8
  %6242 = load i64, i64* %x33000330.i2834, align 8
  %or.i2880 = or i64 %6241, %6242
  store i64 %or.i2880, i64* %x77555775.i2835, align 8
  %6243 = load i64, i64* %a2.addr.i2820, align 8
  %6244 = load i64, i64* %a3.addr.i2821, align 8
  %neg8.i2881 = xor i64 %6244, -1
  %and9.i2882 = and i64 %6243, %neg8.i2881
  store i64 %and9.i2882, i64* %x30303030.i2836, align 8
  %6245 = load i64, i64* %a5.addr.i2823, align 8
  %6246 = load i64, i64* %x30303030.i2836, align 8
  %xor10.i2883 = xor i64 %6245, %6246
  store i64 %xor10.i2883, i64* %x3030CFCF.i2837, align 8
  %6247 = load i64, i64* %x77555775.i2835, align 8
  %6248 = load i64, i64* %x3030CFCF.i2837, align 8
  %and11.i2884 = and i64 %6247, %6248
  store i64 %and11.i2884, i64* %x30104745.i2838, align 8
  %6249 = load i64, i64* %x00555005.i2832, align 8
  %6250 = load i64, i64* %x30104745.i2838, align 8
  %or12.i2885 = or i64 %6249, %6250
  store i64 %or12.i2885, i64* %x30555745.i2839, align 8
  %6251 = load i64, i64* %x00FFF00F.i2831, align 8
  %neg13.i2886 = xor i64 %6251, -1
  store i64 %neg13.i2886, i64* %xFF000FF0.i2840, align 8
  %6252 = load i64, i64* %x30104745.i2838, align 8
  %6253 = load i64, i64* %xFF000FF0.i2840, align 8
  %xor14.i2887 = xor i64 %6252, %6253
  store i64 %xor14.i2887, i64* %xCF1048B5.i2841, align 8
  %6254 = load i64, i64* %a3.addr.i2821, align 8
  %6255 = load i64, i64* %x77555775.i2835, align 8
  %neg15.i2888 = xor i64 %6255, -1
  %and16.i2889 = and i64 %6254, %neg15.i2888
  store i64 %and16.i2889, i64* %x080A080A.i2842, align 8
  %6256 = load i64, i64* %xCF1048B5.i2841, align 8
  %6257 = load i64, i64* %x080A080A.i2842, align 8
  %xor17.i2890 = xor i64 %6256, %6257
  store i64 %xor17.i2890, i64* %xC71A40BF.i2843, align 8
  %6258 = load i64, i64* %x0C0C0C0C.i2829, align 8
  %6259 = load i64, i64* %xC71A40BF.i2843, align 8
  %xor18.i2891 = xor i64 %6258, %6259
  store i64 %xor18.i2891, i64* %xCB164CB3.i2844, align 8
  %6260 = load i64, i64* %x00515001.i2833, align 8
  %6261 = load i64, i64* %a6.addr.i2824, align 8
  %or19.i2892 = or i64 %6260, %6261
  store i64 %or19.i2892, i64* %x10.i2864, align 8
  %6262 = load i64, i64* %x10.i2864, align 8
  %6263 = load i64, i64* %xCB164CB3.i2844, align 8
  %xor20.i2893 = xor i64 %6262, %6263
  store i64 %xor20.i2893, i64* %x11.i2865, align 8
  %6264 = load i64*, i64** %out2.addr.i2826, align 8
  %6265 = load i64, i64* %6264, align 8
  %6266 = load i64, i64* %x11.i2865, align 8
  %xor21.i2894 = xor i64 %6265, %6266
  %6267 = load i64*, i64** %out2.addr.i2826, align 8
  store i64 %xor21.i2894, i64* %6267, align 8
  %6268 = load i64, i64* %a1.addr.i2819, align 8
  %6269 = load i64, i64* %xCB164CB3.i2844, align 8
  %xor22.i2895 = xor i64 %6268, %6269
  store i64 %xor22.i2895, i64* %x9E4319E6.i2845, align 8
  %6270 = load i64, i64* %a5.addr.i2823, align 8
  %6271 = load i64, i64* %x9E4319E6.i2845, align 8
  %and23.i2896 = and i64 %6270, %6271
  store i64 %and23.i2896, i64* %x000019E6.i2846, align 8
  %6272 = load i64, i64* %a2.addr.i2820, align 8
  %6273 = load i64, i64* %xC71A40BF.i2843, align 8
  %xor24.i2897 = xor i64 %6272, %6273
  store i64 %xor24.i2897, i64* %xF429738C.i2847, align 8
  %6274 = load i64, i64* %x000019E6.i2846, align 8
  %6275 = load i64, i64* %xF429738C.i2847, align 8
  %xor25.i2898 = xor i64 %6274, %6275
  store i64 %xor25.i2898, i64* %xF4296A6A.i2848, align 8
  %6276 = load i64, i64* %x33000330.i2834, align 8
  %6277 = load i64, i64* %xF4296A6A.i2848, align 8
  %xor26.i2899 = xor i64 %6276, %6277
  store i64 %xor26.i2899, i64* %xC729695A.i2849, align 8
  %6278 = load i64, i64* %x30555745.i2839, align 8
  %6279 = load i64, i64* %xF4296A6A.i2848, align 8
  %xor27.i2900 = xor i64 %6278, %6279
  store i64 %xor27.i2900, i64* %xC47C3D2F.i2850, align 8
  %6280 = load i64, i64* %a2.addr.i2820, align 8
  %6281 = load i64, i64* %xC47C3D2F.i2850, align 8
  %or28.i2901 = or i64 %6280, %6281
  store i64 %or28.i2901, i64* %xF77F3F3F.i2851, align 8
  %6282 = load i64, i64* %a5.addr.i2823, align 8
  %6283 = load i64, i64* %x9E4319E6.i2845, align 8
  %xor29.i2902 = xor i64 %6282, %6283
  store i64 %xor29.i2902, i64* %x9E43E619.i2852, align 8
  %6284 = load i64, i64* %xF77F3F3F.i2851, align 8
  %6285 = load i64, i64* %x9E43E619.i2852, align 8
  %xor30.i2903 = xor i64 %6284, %6285
  store i64 %xor30.i2903, i64* %x693CD926.i2853, align 8
  %6286 = load i64, i64* %x30555745.i2839, align 8
  %6287 = load i64, i64* %a6.addr.i2824, align 8
  %and31.i2904 = and i64 %6286, %6287
  store i64 %and31.i2904, i64* %x20.i2866, align 8
  %6288 = load i64, i64* %x20.i2866, align 8
  %6289 = load i64, i64* %x693CD926.i2853, align 8
  %xor32.i2905 = xor i64 %6288, %6289
  store i64 %xor32.i2905, i64* %x21.i2867, align 8
  %6290 = load i64*, i64** %out3.addr.i2827, align 8
  %6291 = load i64, i64* %6290, align 8
  %6292 = load i64, i64* %x21.i2867, align 8
  %xor33.i2906 = xor i64 %6291, %6292
  %6293 = load i64*, i64** %out3.addr.i2827, align 8
  store i64 %xor33.i2906, i64* %6293, align 8
  %6294 = load i64, i64* %x3030CFCF.i2837, align 8
  %6295 = load i64, i64* %xC729695A.i2849, align 8
  %xor34.i2907 = xor i64 %6294, %6295
  store i64 %xor34.i2907, i64* %xF719A695.i2854, align 8
  %6296 = load i64, i64* %a4.addr.i2822, align 8
  %6297 = load i64, i64* %xF429738C.i2847, align 8
  %or35.i2908 = or i64 %6296, %6297
  store i64 %or35.i2908, i64* %xF4FF73FF.i2855, align 8
  %6298 = load i64, i64* %xF719A695.i2854, align 8
  %6299 = load i64, i64* %xF4FF73FF.i2855, align 8
  %xor36.i2909 = xor i64 %6298, %6299
  store i64 %xor36.i2909, i64* %x03E6D56A.i2856, align 8
  %6300 = load i64, i64* %a1.addr.i2819, align 8
  %6301 = load i64, i64* %x03E6D56A.i2856, align 8
  %xor37.i2910 = xor i64 %6300, %6301
  store i64 %xor37.i2910, i64* %x56B3803F.i2857, align 8
  %6302 = load i64, i64* %x56B3803F.i2857, align 8
  %6303 = load i64, i64* %a6.addr.i2824, align 8
  %and38.i2911 = and i64 %6302, %6303
  store i64 %and38.i2911, i64* %x30.i2868, align 8
  %6304 = load i64, i64* %x30.i2868, align 8
  %6305 = load i64, i64* %xC729695A.i2849, align 8
  %xor39.i2912 = xor i64 %6304, %6305
  store i64 %xor39.i2912, i64* %x31.i2869, align 8
  %6306 = load i64*, i64** %out4.addr.i2828, align 8
  %6307 = load i64, i64* %6306, align 8
  %6308 = load i64, i64* %x31.i2869, align 8
  %xor40.i2913 = xor i64 %6307, %6308
  %6309 = load i64*, i64** %out4.addr.i2828, align 8
  store i64 %xor40.i2913, i64* %6309, align 8
  %6310 = load i64, i64* %xF719A695.i2854, align 8
  %6311 = load i64, i64* %a4.addr.i2822, align 8
  %neg41.i2914 = xor i64 %6311, -1
  %and42.i2915 = and i64 %6310, %neg41.i2914
  store i64 %and42.i2915, i64* %xF700A600.i2858, align 8
  %6312 = load i64, i64* %x693CD926.i2853, align 8
  %6313 = load i64, i64* %xF700A600.i2858, align 8
  %and43.i2916 = and i64 %6312, %6313
  store i64 %and43.i2916, i64* %x61008000.i2859, align 8
  %6314 = load i64, i64* %x00515001.i2833, align 8
  %6315 = load i64, i64* %x03E6D56A.i2856, align 8
  %xor44.i2917 = xor i64 %6314, %6315
  store i64 %xor44.i2917, i64* %x03B7856B.i2860, align 8
  %6316 = load i64, i64* %x61008000.i2859, align 8
  %6317 = load i64, i64* %x03B7856B.i2860, align 8
  %xor45.i2918 = xor i64 %6316, %6317
  store i64 %xor45.i2918, i64* %x62B7056B.i2861, align 8
  %6318 = load i64, i64* %x62B7056B.i2861, align 8
  %6319 = load i64, i64* %a6.addr.i2824, align 8
  %or46.i2919 = or i64 %6318, %6319
  store i64 %or46.i2919, i64* %x00.i2862, align 8
  %6320 = load i64, i64* %x00.i2862, align 8
  %6321 = load i64, i64* %xC729695A.i2849, align 8
  %xor47.i2920 = xor i64 %6320, %6321
  store i64 %xor47.i2920, i64* %x01.i2863, align 8
  %6322 = load i64*, i64** %out1.addr.i2825, align 8
  %6323 = load i64, i64* %6322, align 8
  %6324 = load i64, i64* %x01.i2863, align 8
  %xor48.i2921 = xor i64 %6323, %6324
  %6325 = load i64*, i64** %out1.addr.i2825, align 8
  store i64 %xor48.i2921, i64* %6325, align 8
  %6326 = load i64**, i64*** %k, align 8
  %add.ptr1019 = getelementptr inbounds i64*, i64** %6326, i64 -720
  store i64** %add.ptr1019, i64*** %k, align 8
  br label %for.inc1020

for.inc1020:                                      ; preds = %for.end850
  %6327 = load i32, i32* %ii, align 4
  %inc1021 = add nsw i32 %6327, 1
  store i32 %inc1021, i32* %ii, align 4
  br label %for.cond

for.end1022:                                      ; preds = %for.cond
  store i32 0, i32* %jj, align 4
  br label %for.cond1023

for.cond1023:                                     ; preds = %for.inc1363, %for.end1022
  %6328 = load i32, i32* %jj, align 4
  %cmp1024 = icmp slt i32 %6328, 8
  br i1 %cmp1024, label %for.body1025, label %for.end1365

for.body1025:                                     ; preds = %for.cond1023
  %6329 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 0), align 8
  %arrayidx1026 = getelementptr inbounds i64, i64* %6329, i64 0
  %6330 = load i64, i64* %arrayidx1026, align 8
  %6331 = load i64**, i64*** %k, align 8
  %arrayidx1027 = getelementptr inbounds i64*, i64** %6331, i64 0
  %6332 = load i64*, i64** %arrayidx1027, align 8
  %arrayidx1028 = getelementptr inbounds i64, i64* %6332, i64 0
  %6333 = load i64, i64* %arrayidx1028, align 8
  %xor1029 = xor i64 %6330, %6333
  %6334 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 1), align 8
  %arrayidx1030 = getelementptr inbounds i64, i64* %6334, i64 0
  %6335 = load i64, i64* %arrayidx1030, align 8
  %6336 = load i64**, i64*** %k, align 8
  %arrayidx1031 = getelementptr inbounds i64*, i64** %6336, i64 1
  %6337 = load i64*, i64** %arrayidx1031, align 8
  %arrayidx1032 = getelementptr inbounds i64, i64* %6337, i64 0
  %6338 = load i64, i64* %arrayidx1032, align 8
  %xor1033 = xor i64 %6335, %6338
  %6339 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 2), align 8
  %arrayidx1034 = getelementptr inbounds i64, i64* %6339, i64 0
  %6340 = load i64, i64* %arrayidx1034, align 8
  %6341 = load i64**, i64*** %k, align 8
  %arrayidx1035 = getelementptr inbounds i64*, i64** %6341, i64 2
  %6342 = load i64*, i64** %arrayidx1035, align 8
  %arrayidx1036 = getelementptr inbounds i64, i64* %6342, i64 0
  %6343 = load i64, i64* %arrayidx1036, align 8
  %xor1037 = xor i64 %6340, %6343
  %6344 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 3), align 8
  %arrayidx1038 = getelementptr inbounds i64, i64* %6344, i64 0
  %6345 = load i64, i64* %arrayidx1038, align 8
  %6346 = load i64**, i64*** %k, align 8
  %arrayidx1039 = getelementptr inbounds i64*, i64** %6346, i64 3
  %6347 = load i64*, i64** %arrayidx1039, align 8
  %arrayidx1040 = getelementptr inbounds i64, i64* %6347, i64 0
  %6348 = load i64, i64* %arrayidx1040, align 8
  %xor1041 = xor i64 %6345, %6348
  %6349 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 4), align 8
  %arrayidx1042 = getelementptr inbounds i64, i64* %6349, i64 0
  %6350 = load i64, i64* %arrayidx1042, align 8
  %6351 = load i64**, i64*** %k, align 8
  %arrayidx1043 = getelementptr inbounds i64*, i64** %6351, i64 4
  %6352 = load i64*, i64** %arrayidx1043, align 8
  %arrayidx1044 = getelementptr inbounds i64, i64* %6352, i64 0
  %6353 = load i64, i64* %arrayidx1044, align 8
  %xor1045 = xor i64 %6350, %6353
  %6354 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 5), align 8
  %arrayidx1046 = getelementptr inbounds i64, i64* %6354, i64 0
  %6355 = load i64, i64* %arrayidx1046, align 8
  %6356 = load i64**, i64*** %k, align 8
  %arrayidx1047 = getelementptr inbounds i64*, i64** %6356, i64 5
  %6357 = load i64*, i64** %arrayidx1047, align 8
  %arrayidx1048 = getelementptr inbounds i64, i64* %6357, i64 0
  %6358 = load i64, i64* %arrayidx1048, align 8
  %xor1049 = xor i64 %6355, %6358
  store i64 %xor1029, i64* %a1.addr.i2696, align 8
  store i64 %xor1033, i64* %a2.addr.i2697, align 8
  store i64 %xor1037, i64* %a3.addr.i2698, align 8
  store i64 %xor1041, i64* %a4.addr.i2699, align 8
  store i64 %xor1045, i64* %a5.addr.i2700, align 8
  store i64 %xor1049, i64* %a6.addr.i2701, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 40), i64** %out1.addr.i2702, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 48), i64** %out2.addr.i2703, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 54), i64** %out3.addr.i2704, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 62), i64** %out4.addr.i2705, align 8
  %6359 = load i64, i64* %a1.addr.i2696, align 8
  %6360 = load i64, i64* %a5.addr.i2700, align 8
  %neg.i2755 = xor i64 %6360, -1
  %and.i2756 = and i64 %6359, %neg.i2755
  store i64 %and.i2756, i64* %x55005500.i2706, align 8
  %6361 = load i64, i64* %a4.addr.i2699, align 8
  %6362 = load i64, i64* %x55005500.i2706, align 8
  %xor.i2757 = xor i64 %6361, %6362
  store i64 %xor.i2757, i64* %x5A0F5A0F.i2707, align 8
  %6363 = load i64, i64* %a3.addr.i2698, align 8
  %6364 = load i64, i64* %a6.addr.i2701, align 8
  %or.i2758 = or i64 %6363, %6364
  store i64 %or.i2758, i64* %x3333FFFF.i2708, align 8
  %6365 = load i64, i64* %a1.addr.i2696, align 8
  %6366 = load i64, i64* %a3.addr.i2698, align 8
  %xor1.i2759 = xor i64 %6365, %6366
  store i64 %xor1.i2759, i64* %x66666666.i2709, align 8
  %6367 = load i64, i64* %x3333FFFF.i2708, align 8
  %6368 = load i64, i64* %x66666666.i2709, align 8
  %and2.i2760 = and i64 %6367, %6368
  store i64 %and2.i2760, i64* %x22226666.i2710, align 8
  %6369 = load i64, i64* %a4.addr.i2699, align 8
  %6370 = load i64, i64* %x22226666.i2710, align 8
  %xor3.i2761 = xor i64 %6369, %6370
  store i64 %xor3.i2761, i64* %x2D2D6969.i2711, align 8
  %6371 = load i64, i64* %x2D2D6969.i2711, align 8
  %6372 = load i64, i64* %x5A0F5A0F.i2707, align 8
  %neg4.i2762 = xor i64 %6372, -1
  %and5.i2763 = and i64 %6371, %neg4.i2762
  store i64 %and5.i2763, i64* %x25202160.i2712, align 8
  %6373 = load i64, i64* %a5.addr.i2700, align 8
  %6374 = load i64, i64* %a6.addr.i2701, align 8
  %xor6.i2764 = xor i64 %6373, %6374
  store i64 %xor6.i2764, i64* %x00FFFF00.i2713, align 8
  %6375 = load i64, i64* %a3.addr.i2698, align 8
  %6376 = load i64, i64* %x00FFFF00.i2713, align 8
  %xor7.i2765 = xor i64 %6375, %6376
  store i64 %xor7.i2765, i64* %x33CCCC33.i2714, align 8
  %6377 = load i64, i64* %x5A0F5A0F.i2707, align 8
  %6378 = load i64, i64* %x33CCCC33.i2714, align 8
  %neg8.i2766 = xor i64 %6378, -1
  %and9.i2767 = and i64 %6377, %neg8.i2766
  store i64 %and9.i2767, i64* %x4803120C.i2715, align 8
  %6379 = load i64, i64* %a6.addr.i2701, align 8
  %6380 = load i64, i64* %x22226666.i2710, align 8
  %or10.i2768 = or i64 %6379, %6380
  store i64 %or10.i2768, i64* %x2222FFFF.i2716, align 8
  %6381 = load i64, i64* %x4803120C.i2715, align 8
  %6382 = load i64, i64* %x2222FFFF.i2716, align 8
  %xor11.i2769 = xor i64 %6381, %6382
  store i64 %xor11.i2769, i64* %x6A21EDF3.i2717, align 8
  %6383 = load i64, i64* %x6A21EDF3.i2717, align 8
  %6384 = load i64, i64* %x25202160.i2712, align 8
  %neg12.i2770 = xor i64 %6384, -1
  %and13.i2771 = and i64 %6383, %neg12.i2770
  store i64 %and13.i2771, i64* %x4A01CC93.i2718, align 8
  %6385 = load i64, i64* %a1.addr.i2696, align 8
  %6386 = load i64, i64* %a6.addr.i2701, align 8
  %or14.i2772 = or i64 %6385, %6386
  store i64 %or14.i2772, i64* %x5555FFFF.i2719, align 8
  %6387 = load i64, i64* %x6A21EDF3.i2717, align 8
  %6388 = load i64, i64* %x5555FFFF.i2719, align 8
  %or15.i2773 = or i64 %6387, %6388
  store i64 %or15.i2773, i64* %x7F75FFFF.i2720, align 8
  %6389 = load i64, i64* %a5.addr.i2700, align 8
  %6390 = load i64, i64* %x2D2D6969.i2711, align 8
  %neg16.i2774 = xor i64 %6390, -1
  %and17.i2775 = and i64 %6389, %neg16.i2774
  store i64 %and17.i2775, i64* %x00D20096.i2721, align 8
  %6391 = load i64, i64* %x7F75FFFF.i2720, align 8
  %6392 = load i64, i64* %x00D20096.i2721, align 8
  %xor18.i2776 = xor i64 %6391, %6392
  store i64 %xor18.i2776, i64* %x7FA7FF69.i2722, align 8
  %6393 = load i64, i64* %a4.addr.i2699, align 8
  %6394 = load i64, i64* %x5555FFFF.i2719, align 8
  %neg19.i2777 = xor i64 %6394, -1
  %and20.i2778 = and i64 %6393, %neg19.i2777
  store i64 %and20.i2778, i64* %x0A0A0000.i2723, align 8
  %6395 = load i64, i64* %x00D20096.i2721, align 8
  %6396 = load i64, i64* %x0A0A0000.i2723, align 8
  %xor21.i2779 = xor i64 %6395, %6396
  store i64 %xor21.i2779, i64* %x0AD80096.i2724, align 8
  %6397 = load i64, i64* %x00FFFF00.i2713, align 8
  %6398 = load i64, i64* %x66666666.i2709, align 8
  %neg22.i2780 = xor i64 %6398, -1
  %and23.i2781 = and i64 %6397, %neg22.i2780
  store i64 %and23.i2781, i64* %x00999900.i2725, align 8
  %6399 = load i64, i64* %x0AD80096.i2724, align 8
  %6400 = load i64, i64* %x00999900.i2725, align 8
  %or24.i2782 = or i64 %6399, %6400
  store i64 %or24.i2782, i64* %x0AD99996.i2726, align 8
  %6401 = load i64, i64* %a3.addr.i2698, align 8
  %6402 = load i64, i64* %x55005500.i2706, align 8
  %neg25.i2783 = xor i64 %6402, -1
  %and26.i2784 = and i64 %6401, %neg25.i2783
  store i64 %and26.i2784, i64* %x22332233.i2727, align 8
  %6403 = load i64, i64* %x5A0F5A0F.i2707, align 8
  %6404 = load i64, i64* %x7F75FFFF.i2720, align 8
  %xor27.i2785 = xor i64 %6403, %6404
  store i64 %xor27.i2785, i64* %x257AA5F0.i2728, align 8
  %6405 = load i64, i64* %x257AA5F0.i2728, align 8
  %6406 = load i64, i64* %x22332233.i2727, align 8
  %neg28.i2786 = xor i64 %6406, -1
  %and29.i2787 = and i64 %6405, %neg28.i2786
  store i64 %and29.i2787, i64* %x054885C0.i2729, align 8
  %6407 = load i64, i64* %x054885C0.i2729, align 8
  %neg30.i2788 = xor i64 %6407, -1
  store i64 %neg30.i2788, i64* %xFAB77A3F.i2730, align 8
  %6408 = load i64, i64* %x3333FFFF.i2708, align 8
  %6409 = load i64, i64* %x6A21EDF3.i2717, align 8
  %and31.i2789 = and i64 %6408, %6409
  store i64 %and31.i2789, i64* %x2221EDF3.i2731, align 8
  %6410 = load i64, i64* %xFAB77A3F.i2730, align 8
  %6411 = load i64, i64* %x2221EDF3.i2731, align 8
  %xor32.i2790 = xor i64 %6410, %6411
  store i64 %xor32.i2790, i64* %xD89697CC.i2732, align 8
  %6412 = load i64, i64* %x7FA7FF69.i2722, align 8
  %6413 = load i64, i64* %a2.addr.i2697, align 8
  %neg33.i2791 = xor i64 %6413, -1
  %and34.i2792 = and i64 %6412, %neg33.i2791
  store i64 %and34.i2792, i64* %x20.i2751, align 8
  %6414 = load i64, i64* %x20.i2751, align 8
  %6415 = load i64, i64* %xD89697CC.i2732, align 8
  %xor35.i2793 = xor i64 %6414, %6415
  store i64 %xor35.i2793, i64* %x21.i2752, align 8
  %6416 = load i64*, i64** %out3.addr.i2704, align 8
  %6417 = load i64, i64* %6416, align 8
  %6418 = load i64, i64* %x21.i2752, align 8
  %xor36.i2794 = xor i64 %6417, %6418
  %6419 = load i64*, i64** %out3.addr.i2704, align 8
  store i64 %xor36.i2794, i64* %6419, align 8
  %6420 = load i64, i64* %x00FFFF00.i2713, align 8
  %6421 = load i64, i64* %x054885C0.i2729, align 8
  %xor37.i2795 = xor i64 %6420, %6421
  store i64 %xor37.i2795, i64* %x05B77AC0.i2733, align 8
  %6422 = load i64, i64* %x00D20096.i2721, align 8
  %6423 = load i64, i64* %x05B77AC0.i2733, align 8
  %or38.i2796 = or i64 %6422, %6423
  store i64 %or38.i2796, i64* %x05F77AD6.i2734, align 8
  %6424 = load i64, i64* %x3333FFFF.i2708, align 8
  %6425 = load i64, i64* %x05F77AD6.i2734, align 8
  %xor39.i2797 = xor i64 %6424, %6425
  store i64 %xor39.i2797, i64* %x36C48529.i2735, align 8
  %6426 = load i64, i64* %a1.addr.i2696, align 8
  %6427 = load i64, i64* %x36C48529.i2735, align 8
  %xor40.i2798 = xor i64 %6426, %6427
  store i64 %xor40.i2798, i64* %x6391D07C.i2736, align 8
  %6428 = load i64, i64* %xD89697CC.i2732, align 8
  %6429 = load i64, i64* %x6391D07C.i2736, align 8
  %xor41.i2799 = xor i64 %6428, %6429
  store i64 %xor41.i2799, i64* %xBB0747B0.i2737, align 8
  %6430 = load i64, i64* %x25202160.i2712, align 8
  %6431 = load i64, i64* %a2.addr.i2697, align 8
  %or42.i2800 = or i64 %6430, %6431
  store i64 %or42.i2800, i64* %x00.i2747, align 8
  %6432 = load i64, i64* %x00.i2747, align 8
  %6433 = load i64, i64* %xBB0747B0.i2737, align 8
  %xor43.i2801 = xor i64 %6432, %6433
  store i64 %xor43.i2801, i64* %x01.i2748, align 8
  %6434 = load i64*, i64** %out1.addr.i2702, align 8
  %6435 = load i64, i64* %6434, align 8
  %6436 = load i64, i64* %x01.i2748, align 8
  %xor44.i2802 = xor i64 %6435, %6436
  %6437 = load i64*, i64** %out1.addr.i2702, align 8
  store i64 %xor44.i2802, i64* %6437, align 8
  %6438 = load i64, i64* %x3333FFFF.i2708, align 8
  %6439 = load i64, i64* %x7F75FFFF.i2720, align 8
  %xor45.i2803 = xor i64 %6438, %6439
  store i64 %xor45.i2803, i64* %x4C460000.i2738, align 8
  %6440 = load i64, i64* %x0AD99996.i2726, align 8
  %6441 = load i64, i64* %x4C460000.i2738, align 8
  %or46.i2804 = or i64 %6440, %6441
  store i64 %or46.i2804, i64* %x4EDF9996.i2739, align 8
  %6442 = load i64, i64* %x6391D07C.i2736, align 8
  %6443 = load i64, i64* %x4EDF9996.i2739, align 8
  %xor47.i2805 = xor i64 %6442, %6443
  store i64 %xor47.i2805, i64* %x2D4E49EA.i2740, align 8
  %6444 = load i64, i64* %x00FFFF00.i2713, align 8
  %6445 = load i64, i64* %xBB0747B0.i2737, align 8
  %or48.i2806 = or i64 %6444, %6445
  store i64 %or48.i2806, i64* %xBBFFFFB0.i2741, align 8
  %6446 = load i64, i64* %x2D4E49EA.i2740, align 8
  %6447 = load i64, i64* %xBBFFFFB0.i2741, align 8
  %xor49.i2807 = xor i64 %6446, %6447
  store i64 %xor49.i2807, i64* %x96B1B65A.i2742, align 8
  %6448 = load i64, i64* %x4A01CC93.i2718, align 8
  %6449 = load i64, i64* %a2.addr.i2697, align 8
  %or50.i2808 = or i64 %6448, %6449
  store i64 %or50.i2808, i64* %x10.i2749, align 8
  %6450 = load i64, i64* %x10.i2749, align 8
  %6451 = load i64, i64* %x96B1B65A.i2742, align 8
  %xor51.i2809 = xor i64 %6450, %6451
  store i64 %xor51.i2809, i64* %x11.i2750, align 8
  %6452 = load i64*, i64** %out2.addr.i2703, align 8
  %6453 = load i64, i64* %6452, align 8
  %6454 = load i64, i64* %x11.i2750, align 8
  %xor52.i2810 = xor i64 %6453, %6454
  %6455 = load i64*, i64** %out2.addr.i2703, align 8
  store i64 %xor52.i2810, i64* %6455, align 8
  %6456 = load i64, i64* %a5.addr.i2700, align 8
  %6457 = load i64, i64* %x5A0F5A0F.i2707, align 8
  %or53.i2811 = or i64 %6456, %6457
  store i64 %or53.i2811, i64* %x5AFF5AFF.i2743, align 8
  %6458 = load i64, i64* %x5AFF5AFF.i2743, align 8
  %6459 = load i64, i64* %x2D4E49EA.i2740, align 8
  %neg54.i2812 = xor i64 %6459, -1
  %and55.i2813 = and i64 %6458, %neg54.i2812
  store i64 %and55.i2813, i64* %x52B11215.i2744, align 8
  %6460 = load i64, i64* %x4A01CC93.i2718, align 8
  %6461 = load i64, i64* %x6391D07C.i2736, align 8
  %and56.i2814 = and i64 %6460, %6461
  store i64 %and56.i2814, i64* %x4201C010.i2745, align 8
  %6462 = load i64, i64* %x52B11215.i2744, align 8
  %6463 = load i64, i64* %x4201C010.i2745, align 8
  %xor57.i2815 = xor i64 %6462, %6463
  store i64 %xor57.i2815, i64* %x10B0D205.i2746, align 8
  %6464 = load i64, i64* %x10B0D205.i2746, align 8
  %6465 = load i64, i64* %a2.addr.i2697, align 8
  %or58.i2816 = or i64 %6464, %6465
  store i64 %or58.i2816, i64* %x30.i2753, align 8
  %6466 = load i64, i64* %x30.i2753, align 8
  %6467 = load i64, i64* %x0AD99996.i2726, align 8
  %xor59.i2817 = xor i64 %6466, %6467
  store i64 %xor59.i2817, i64* %x31.i2754, align 8
  %6468 = load i64*, i64** %out4.addr.i2705, align 8
  %6469 = load i64, i64* %6468, align 8
  %6470 = load i64, i64* %x31.i2754, align 8
  %xor60.i2818 = xor i64 %6469, %6470
  %6471 = load i64*, i64** %out4.addr.i2705, align 8
  store i64 %xor60.i2818, i64* %6471, align 8
  %6472 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 6), align 8
  %arrayidx1050 = getelementptr inbounds i64, i64* %6472, i64 0
  %6473 = load i64, i64* %arrayidx1050, align 8
  %6474 = load i64**, i64*** %k, align 8
  %arrayidx1051 = getelementptr inbounds i64*, i64** %6474, i64 6
  %6475 = load i64*, i64** %arrayidx1051, align 8
  %arrayidx1052 = getelementptr inbounds i64, i64* %6475, i64 0
  %6476 = load i64, i64* %arrayidx1052, align 8
  %xor1053 = xor i64 %6473, %6476
  %6477 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 7), align 8
  %arrayidx1054 = getelementptr inbounds i64, i64* %6477, i64 0
  %6478 = load i64, i64* %arrayidx1054, align 8
  %6479 = load i64**, i64*** %k, align 8
  %arrayidx1055 = getelementptr inbounds i64*, i64** %6479, i64 7
  %6480 = load i64*, i64** %arrayidx1055, align 8
  %arrayidx1056 = getelementptr inbounds i64, i64* %6480, i64 0
  %6481 = load i64, i64* %arrayidx1056, align 8
  %xor1057 = xor i64 %6478, %6481
  %6482 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 8), align 8
  %arrayidx1058 = getelementptr inbounds i64, i64* %6482, i64 0
  %6483 = load i64, i64* %arrayidx1058, align 8
  %6484 = load i64**, i64*** %k, align 8
  %arrayidx1059 = getelementptr inbounds i64*, i64** %6484, i64 8
  %6485 = load i64*, i64** %arrayidx1059, align 8
  %arrayidx1060 = getelementptr inbounds i64, i64* %6485, i64 0
  %6486 = load i64, i64* %arrayidx1060, align 8
  %xor1061 = xor i64 %6483, %6486
  %6487 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 9), align 8
  %arrayidx1062 = getelementptr inbounds i64, i64* %6487, i64 0
  %6488 = load i64, i64* %arrayidx1062, align 8
  %6489 = load i64**, i64*** %k, align 8
  %arrayidx1063 = getelementptr inbounds i64*, i64** %6489, i64 9
  %6490 = load i64*, i64** %arrayidx1063, align 8
  %arrayidx1064 = getelementptr inbounds i64, i64* %6490, i64 0
  %6491 = load i64, i64* %arrayidx1064, align 8
  %xor1065 = xor i64 %6488, %6491
  %6492 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 10), align 8
  %arrayidx1066 = getelementptr inbounds i64, i64* %6492, i64 0
  %6493 = load i64, i64* %arrayidx1066, align 8
  %6494 = load i64**, i64*** %k, align 8
  %arrayidx1067 = getelementptr inbounds i64*, i64** %6494, i64 10
  %6495 = load i64*, i64** %arrayidx1067, align 8
  %arrayidx1068 = getelementptr inbounds i64, i64* %6495, i64 0
  %6496 = load i64, i64* %arrayidx1068, align 8
  %xor1069 = xor i64 %6493, %6496
  %6497 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 11), align 8
  %arrayidx1070 = getelementptr inbounds i64, i64* %6497, i64 0
  %6498 = load i64, i64* %arrayidx1070, align 8
  %6499 = load i64**, i64*** %k, align 8
  %arrayidx1071 = getelementptr inbounds i64*, i64** %6499, i64 11
  %6500 = load i64*, i64** %arrayidx1071, align 8
  %arrayidx1072 = getelementptr inbounds i64, i64* %6500, i64 0
  %6501 = load i64, i64* %arrayidx1072, align 8
  %xor1073 = xor i64 %6498, %6501
  store i64 %xor1053, i64* %a1.addr.i2582, align 8
  store i64 %xor1057, i64* %a2.addr.i2583, align 8
  store i64 %xor1061, i64* %a3.addr.i2584, align 8
  store i64 %xor1065, i64* %a4.addr.i2585, align 8
  store i64 %xor1069, i64* %a5.addr.i2586, align 8
  store i64 %xor1073, i64* %a6.addr.i2587, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 44), i64** %out1.addr.i2588, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 59), i64** %out2.addr.i2589, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 33), i64** %out3.addr.i2590, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 49), i64** %out4.addr.i2591, align 8
  %6502 = load i64, i64* %a2.addr.i2583, align 8
  %6503 = load i64, i64* %a5.addr.i2586, align 8
  %xor.i2636 = xor i64 %6502, %6503
  store i64 %xor.i2636, i64* %x33CC33CC.i2592, align 8
  %6504 = load i64, i64* %a1.addr.i2582, align 8
  %6505 = load i64, i64* %a6.addr.i2587, align 8
  %neg.i2637 = xor i64 %6505, -1
  %and.i2638 = and i64 %6504, %neg.i2637
  store i64 %and.i2638, i64* %x55550000.i2593, align 8
  %6506 = load i64, i64* %a5.addr.i2586, align 8
  %6507 = load i64, i64* %x55550000.i2593, align 8
  %neg1.i2639 = xor i64 %6507, -1
  %and2.i2640 = and i64 %6506, %neg1.i2639
  store i64 %and2.i2640, i64* %x00AA00FF.i2594, align 8
  %6508 = load i64, i64* %a2.addr.i2583, align 8
  %6509 = load i64, i64* %x00AA00FF.i2594, align 8
  %or.i2641 = or i64 %6508, %6509
  store i64 %or.i2641, i64* %x33BB33FF.i2595, align 8
  %6510 = load i64, i64* %x33CC33CC.i2592, align 8
  %6511 = load i64, i64* %a6.addr.i2587, align 8
  %neg3.i2642 = xor i64 %6511, -1
  %and4.i2643 = and i64 %6510, %neg3.i2642
  store i64 %and4.i2643, i64* %x33CC0000.i2596, align 8
  %6512 = load i64, i64* %a1.addr.i2582, align 8
  %6513 = load i64, i64* %x33CC33CC.i2592, align 8
  %and5.i2644 = and i64 %6512, %6513
  store i64 %and5.i2644, i64* %x11441144.i2597, align 8
  %6514 = load i64, i64* %a5.addr.i2586, align 8
  %6515 = load i64, i64* %x11441144.i2597, align 8
  %xor6.i2645 = xor i64 %6514, %6515
  store i64 %xor6.i2645, i64* %x11BB11BB.i2598, align 8
  %6516 = load i64, i64* %x11BB11BB.i2598, align 8
  %6517 = load i64, i64* %x33CC0000.i2596, align 8
  %neg7.i2646 = xor i64 %6517, -1
  %and8.i2647 = and i64 %6516, %neg7.i2646
  store i64 %and8.i2647, i64* %x003311BB.i2599, align 8
  %6518 = load i64, i64* %a3.addr.i2584, align 8
  %6519 = load i64, i64* %a6.addr.i2587, align 8
  %and9.i2648 = and i64 %6518, %6519
  store i64 %and9.i2648, i64* %x00000F0F.i2600, align 8
  %6520 = load i64, i64* %x00AA00FF.i2594, align 8
  %6521 = load i64, i64* %x33CC0000.i2596, align 8
  %xor10.i2649 = xor i64 %6520, %6521
  store i64 %xor10.i2649, i64* %x336600FF.i2601, align 8
  %6522 = load i64, i64* %x33BB33FF.i2595, align 8
  %6523 = load i64, i64* %x336600FF.i2601, align 8
  %and11.i2650 = and i64 %6522, %6523
  store i64 %and11.i2650, i64* %x332200FF.i2602, align 8
  %6524 = load i64, i64* %x332200FF.i2602, align 8
  %6525 = load i64, i64* %x00000F0F.i2600, align 8
  %neg12.i2651 = xor i64 %6525, -1
  %and13.i2652 = and i64 %6524, %neg12.i2651
  store i64 %and13.i2652, i64* %x332200F0.i2603, align 8
  %6526 = load i64, i64* %a3.addr.i2584, align 8
  %6527 = load i64, i64* %x332200FF.i2602, align 8
  %and14.i2653 = and i64 %6526, %6527
  store i64 %and14.i2653, i64* %x0302000F.i2604, align 8
  %6528 = load i64, i64* %a1.addr.i2582, align 8
  %neg15.i2654 = xor i64 %6528, -1
  store i64 %neg15.i2654, i64* %xAAAAAAAA.i2605, align 8
  %6529 = load i64, i64* %x0302000F.i2604, align 8
  %6530 = load i64, i64* %xAAAAAAAA.i2605, align 8
  %xor16.i2655 = xor i64 %6529, %6530
  store i64 %xor16.i2655, i64* %xA9A8AAA5.i2606, align 8
  %6531 = load i64, i64* %a6.addr.i2587, align 8
  %6532 = load i64, i64* %x33CC33CC.i2592, align 8
  %xor17.i2656 = xor i64 %6531, %6532
  store i64 %xor17.i2656, i64* %x33CCCC33.i2607, align 8
  %6533 = load i64, i64* %x33CCCC33.i2607, align 8
  %6534 = load i64, i64* %x00000F0F.i2600, align 8
  %neg18.i2657 = xor i64 %6534, -1
  %and19.i2658 = and i64 %6533, %neg18.i2657
  store i64 %and19.i2658, i64* %x33CCC030.i2608, align 8
  %6535 = load i64, i64* %xA9A8AAA5.i2606, align 8
  %6536 = load i64, i64* %x33CCC030.i2608, align 8
  %xor20.i2659 = xor i64 %6535, %6536
  store i64 %xor20.i2659, i64* %x9A646A95.i2609, align 8
  %6537 = load i64, i64* %a4.addr.i2585, align 8
  %6538 = load i64, i64* %x332200F0.i2603, align 8
  %neg21.i2660 = xor i64 %6538, -1
  %and22.i2661 = and i64 %6537, %neg21.i2660
  store i64 %and22.i2661, i64* %x10.i2630, align 8
  %6539 = load i64, i64* %x10.i2630, align 8
  %6540 = load i64, i64* %x9A646A95.i2609, align 8
  %xor23.i2662 = xor i64 %6539, %6540
  store i64 %xor23.i2662, i64* %x11.i2631, align 8
  %6541 = load i64*, i64** %out2.addr.i2589, align 8
  %6542 = load i64, i64* %6541, align 8
  %6543 = load i64, i64* %x11.i2631, align 8
  %xor24.i2663 = xor i64 %6542, %6543
  %6544 = load i64*, i64** %out2.addr.i2589, align 8
  store i64 %xor24.i2663, i64* %6544, align 8
  %6545 = load i64, i64* %a2.addr.i2583, align 8
  %6546 = load i64, i64* %x33CCC030.i2608, align 8
  %neg25.i2664 = xor i64 %6546, -1
  %and26.i2665 = and i64 %6545, %neg25.i2664
  store i64 %and26.i2665, i64* %x00333303.i2610, align 8
  %6547 = load i64, i64* %x11BB11BB.i2598, align 8
  %6548 = load i64, i64* %x00333303.i2610, align 8
  %xor27.i2666 = xor i64 %6547, %6548
  store i64 %xor27.i2666, i64* %x118822B8.i2611, align 8
  %6549 = load i64, i64* %xA9A8AAA5.i2606, align 8
  %6550 = load i64, i64* %x118822B8.i2611, align 8
  %neg28.i2667 = xor i64 %6550, -1
  %and29.i2668 = and i64 %6549, %neg28.i2667
  store i64 %and29.i2668, i64* %xA8208805.i2612, align 8
  %6551 = load i64, i64* %a3.addr.i2584, align 8
  %6552 = load i64, i64* %x33CCCC33.i2607, align 8
  %xor30.i2669 = xor i64 %6551, %6552
  store i64 %xor30.i2669, i64* %x3CC3C33C.i2613, align 8
  %6553 = load i64, i64* %xA8208805.i2612, align 8
  %6554 = load i64, i64* %x3CC3C33C.i2613, align 8
  %xor31.i2670 = xor i64 %6553, %6554
  store i64 %xor31.i2670, i64* %x94E34B39.i2614, align 8
  %6555 = load i64, i64* %x33BB33FF.i2595, align 8
  %6556 = load i64, i64* %a4.addr.i2585, align 8
  %neg32.i2671 = xor i64 %6556, -1
  %and33.i2672 = and i64 %6555, %neg32.i2671
  store i64 %and33.i2672, i64* %x00.i2628, align 8
  %6557 = load i64, i64* %x00.i2628, align 8
  %6558 = load i64, i64* %x94E34B39.i2614, align 8
  %xor34.i2673 = xor i64 %6557, %6558
  store i64 %xor34.i2673, i64* %x01.i2629, align 8
  %6559 = load i64*, i64** %out1.addr.i2588, align 8
  %6560 = load i64, i64* %6559, align 8
  %6561 = load i64, i64* %x01.i2629, align 8
  %xor35.i2674 = xor i64 %6560, %6561
  %6562 = load i64*, i64** %out1.addr.i2588, align 8
  store i64 %xor35.i2674, i64* %6562, align 8
  %6563 = load i64, i64* %x0302000F.i2604, align 8
  %6564 = load i64, i64* %x00333303.i2610, align 8
  %xor36.i2675 = xor i64 %6563, %6564
  store i64 %xor36.i2675, i64* %x0331330C.i2615, align 8
  %6565 = load i64, i64* %x3CC3C33C.i2613, align 8
  %6566 = load i64, i64* %x0331330C.i2615, align 8
  %or37.i2676 = or i64 %6565, %6566
  store i64 %or37.i2676, i64* %x3FF3F33C.i2616, align 8
  %6567 = load i64, i64* %x33BB33FF.i2595, align 8
  %6568 = load i64, i64* %x9A646A95.i2609, align 8
  %xor38.i2677 = xor i64 %6567, %6568
  store i64 %xor38.i2677, i64* %xA9DF596A.i2617, align 8
  %6569 = load i64, i64* %x00000F0F.i2600, align 8
  %6570 = load i64, i64* %xA9DF596A.i2617, align 8
  %or39.i2678 = or i64 %6569, %6570
  store i64 %or39.i2678, i64* %xA9DF5F6F.i2618, align 8
  %6571 = load i64, i64* %x3FF3F33C.i2616, align 8
  %6572 = load i64, i64* %xA9DF5F6F.i2618, align 8
  %xor40.i2679 = xor i64 %6571, %6572
  store i64 %xor40.i2679, i64* %x962CAC53.i2619, align 8
  %6573 = load i64, i64* %x94E34B39.i2614, align 8
  %6574 = load i64, i64* %x0331330C.i2615, align 8
  %xor41.i2680 = xor i64 %6573, %6574
  store i64 %xor41.i2680, i64* %x97D27835.i2620, align 8
  %6575 = load i64, i64* %xA9DF5F6F.i2618, align 8
  %6576 = load i64, i64* %x97D27835.i2620, align 8
  %and42.i2681 = and i64 %6575, %6576
  store i64 %and42.i2681, i64* %x81D25825.i2621, align 8
  %6577 = load i64, i64* %a5.addr.i2586, align 8
  %6578 = load i64, i64* %x81D25825.i2621, align 8
  %xor43.i2682 = xor i64 %6577, %6578
  store i64 %xor43.i2682, i64* %x812D58DA.i2622, align 8
  %6579 = load i64, i64* %x812D58DA.i2622, align 8
  %6580 = load i64, i64* %x33CC0000.i2596, align 8
  %neg44.i2683 = xor i64 %6580, -1
  %and45.i2684 = and i64 %6579, %neg44.i2683
  store i64 %and45.i2684, i64* %x802158DA.i2623, align 8
  %6581 = load i64, i64* %x9A646A95.i2609, align 8
  %6582 = load i64, i64* %x802158DA.i2623, align 8
  %xor46.i2685 = xor i64 %6581, %6582
  store i64 %xor46.i2685, i64* %x1A45324F.i2624, align 8
  %6583 = load i64, i64* %x1A45324F.i2624, align 8
  %6584 = load i64, i64* %a4.addr.i2585, align 8
  %or47.i2686 = or i64 %6583, %6584
  store i64 %or47.i2686, i64* %x20.i2632, align 8
  %6585 = load i64, i64* %x20.i2632, align 8
  %6586 = load i64, i64* %x962CAC53.i2619, align 8
  %xor48.i2687 = xor i64 %6585, %6586
  store i64 %xor48.i2687, i64* %x21.i2633, align 8
  %6587 = load i64*, i64** %out3.addr.i2590, align 8
  %6588 = load i64, i64* %6587, align 8
  %6589 = load i64, i64* %x21.i2633, align 8
  %xor49.i2688 = xor i64 %6588, %6589
  %6590 = load i64*, i64** %out3.addr.i2590, align 8
  store i64 %xor49.i2688, i64* %6590, align 8
  %6591 = load i64, i64* %x1A45324F.i2624, align 8
  %6592 = load i64, i64* %x118822B8.i2611, align 8
  %neg50.i2689 = xor i64 %6592, -1
  %and51.i2690 = and i64 %6591, %neg50.i2689
  store i64 %and51.i2690, i64* %x0A451047.i2625, align 8
  %6593 = load i64, i64* %x33CCCC33.i2607, align 8
  %6594 = load i64, i64* %xA9DF596A.i2617, align 8
  %or52.i2691 = or i64 %6593, %6594
  store i64 %or52.i2691, i64* %xBBDFDD7B.i2626, align 8
  %6595 = load i64, i64* %x0A451047.i2625, align 8
  %6596 = load i64, i64* %xBBDFDD7B.i2626, align 8
  %xor53.i2692 = xor i64 %6595, %6596
  store i64 %xor53.i2692, i64* %xB19ACD3C.i2627, align 8
  %6597 = load i64, i64* %x003311BB.i2599, align 8
  %6598 = load i64, i64* %a4.addr.i2585, align 8
  %or54.i2693 = or i64 %6597, %6598
  store i64 %or54.i2693, i64* %x30.i2634, align 8
  %6599 = load i64, i64* %x30.i2634, align 8
  %6600 = load i64, i64* %xB19ACD3C.i2627, align 8
  %xor55.i2694 = xor i64 %6599, %6600
  store i64 %xor55.i2694, i64* %x31.i2635, align 8
  %6601 = load i64*, i64** %out4.addr.i2591, align 8
  %6602 = load i64, i64* %6601, align 8
  %6603 = load i64, i64* %x31.i2635, align 8
  %xor56.i2695 = xor i64 %6602, %6603
  %6604 = load i64*, i64** %out4.addr.i2591, align 8
  store i64 %xor56.i2695, i64* %6604, align 8
  %6605 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 7), align 8
  %6606 = load i64**, i64*** %k, align 8
  %arrayidx1074 = getelementptr inbounds i64*, i64** %6606, i64 12
  %6607 = load i64*, i64** %arrayidx1074, align 8
  %arrayidx1075 = getelementptr inbounds i64, i64* %6607, i64 0
  %6608 = load i64, i64* %arrayidx1075, align 8
  %xor1076 = xor i64 %6605, %6608
  %6609 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 8), align 8
  %6610 = load i64**, i64*** %k, align 8
  %arrayidx1077 = getelementptr inbounds i64*, i64** %6610, i64 13
  %6611 = load i64*, i64** %arrayidx1077, align 8
  %arrayidx1078 = getelementptr inbounds i64, i64* %6611, i64 0
  %6612 = load i64, i64* %arrayidx1078, align 8
  %xor1079 = xor i64 %6609, %6612
  %6613 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 9), align 8
  %6614 = load i64**, i64*** %k, align 8
  %arrayidx1080 = getelementptr inbounds i64*, i64** %6614, i64 14
  %6615 = load i64*, i64** %arrayidx1080, align 8
  %arrayidx1081 = getelementptr inbounds i64, i64* %6615, i64 0
  %6616 = load i64, i64* %arrayidx1081, align 8
  %xor1082 = xor i64 %6613, %6616
  %6617 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 10), align 8
  %6618 = load i64**, i64*** %k, align 8
  %arrayidx1083 = getelementptr inbounds i64*, i64** %6618, i64 15
  %6619 = load i64*, i64** %arrayidx1083, align 8
  %arrayidx1084 = getelementptr inbounds i64, i64* %6619, i64 0
  %6620 = load i64, i64* %arrayidx1084, align 8
  %xor1085 = xor i64 %6617, %6620
  %6621 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 11), align 8
  %6622 = load i64**, i64*** %k, align 8
  %arrayidx1086 = getelementptr inbounds i64*, i64** %6622, i64 16
  %6623 = load i64*, i64** %arrayidx1086, align 8
  %arrayidx1087 = getelementptr inbounds i64, i64* %6623, i64 0
  %6624 = load i64, i64* %arrayidx1087, align 8
  %xor1088 = xor i64 %6621, %6624
  %6625 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 12), align 8
  %6626 = load i64**, i64*** %k, align 8
  %arrayidx1089 = getelementptr inbounds i64*, i64** %6626, i64 17
  %6627 = load i64*, i64** %arrayidx1089, align 8
  %arrayidx1090 = getelementptr inbounds i64, i64* %6627, i64 0
  %6628 = load i64, i64* %arrayidx1090, align 8
  %xor1091 = xor i64 %6625, %6628
  store i64 %xor1076, i64* %a1.addr.i2462, align 8
  store i64 %xor1079, i64* %a2.addr.i2463, align 8
  store i64 %xor1082, i64* %a3.addr.i2464, align 8
  store i64 %xor1085, i64* %a4.addr.i2465, align 8
  store i64 %xor1088, i64* %a5.addr.i2466, align 8
  store i64 %xor1091, i64* %a6.addr.i2467, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 55), i64** %out1.addr.i2468, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 47), i64** %out2.addr.i2469, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 61), i64** %out3.addr.i2470, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 37), i64** %out4.addr.i2471, align 8
  %6629 = load i64, i64* %a1.addr.i2462, align 8
  %6630 = load i64, i64* %a2.addr.i2463, align 8
  %neg.i2518 = xor i64 %6630, -1
  %and.i2519 = and i64 %6629, %neg.i2518
  store i64 %and.i2519, i64* %x44444444.i2472, align 8
  %6631 = load i64, i64* %a3.addr.i2464, align 8
  %6632 = load i64, i64* %a6.addr.i2467, align 8
  %xor.i2520 = xor i64 %6631, %6632
  store i64 %xor.i2520, i64* %x0F0FF0F0.i2473, align 8
  %6633 = load i64, i64* %x44444444.i2472, align 8
  %6634 = load i64, i64* %x0F0FF0F0.i2473, align 8
  %or.i2521 = or i64 %6633, %6634
  store i64 %or.i2521, i64* %x4F4FF4F4.i2474, align 8
  %6635 = load i64, i64* %a4.addr.i2465, align 8
  %6636 = load i64, i64* %a6.addr.i2467, align 8
  %xor1.i2522 = xor i64 %6635, %6636
  store i64 %xor1.i2522, i64* %x00FFFF00.i2475, align 8
  %6637 = load i64, i64* %x00FFFF00.i2475, align 8
  %6638 = load i64, i64* %a1.addr.i2462, align 8
  %neg2.i2523 = xor i64 %6638, -1
  %and3.i2524 = and i64 %6637, %neg2.i2523
  store i64 %and3.i2524, i64* %x00AAAA00.i2476, align 8
  %6639 = load i64, i64* %x4F4FF4F4.i2474, align 8
  %6640 = load i64, i64* %x00AAAA00.i2476, align 8
  %xor4.i2525 = xor i64 %6639, %6640
  store i64 %xor4.i2525, i64* %x4FE55EF4.i2477, align 8
  %6641 = load i64, i64* %a2.addr.i2463, align 8
  %6642 = load i64, i64* %x0F0FF0F0.i2473, align 8
  %xor5.i2526 = xor i64 %6641, %6642
  store i64 %xor5.i2526, i64* %x3C3CC3C3.i2478, align 8
  %6643 = load i64, i64* %x3C3CC3C3.i2478, align 8
  %6644 = load i64, i64* %a6.addr.i2467, align 8
  %neg6.i2527 = xor i64 %6644, -1
  %and7.i2528 = and i64 %6643, %neg6.i2527
  store i64 %and7.i2528, i64* %x3C3C0000.i2479, align 8
  %6645 = load i64, i64* %x4F4FF4F4.i2474, align 8
  %6646 = load i64, i64* %x3C3C0000.i2479, align 8
  %xor8.i2529 = xor i64 %6645, %6646
  store i64 %xor8.i2529, i64* %x7373F4F4.i2480, align 8
  %6647 = load i64, i64* %x4FE55EF4.i2477, align 8
  %6648 = load i64, i64* %x7373F4F4.i2480, align 8
  %neg9.i2530 = xor i64 %6648, -1
  %and10.i2531 = and i64 %6647, %neg9.i2530
  store i64 %and10.i2531, i64* %x0C840A00.i2481, align 8
  %6649 = load i64, i64* %a6.addr.i2467, align 8
  %6650 = load i64, i64* %x4FE55EF4.i2477, align 8
  %and11.i2532 = and i64 %6649, %6650
  store i64 %and11.i2532, i64* %x00005EF4.i2482, align 8
  %6651 = load i64, i64* %a4.addr.i2465, align 8
  %6652 = load i64, i64* %x00005EF4.i2482, align 8
  %or12.i2533 = or i64 %6651, %6652
  store i64 %or12.i2533, i64* %x00FF5EFF.i2483, align 8
  %6653 = load i64, i64* %a1.addr.i2462, align 8
  %6654 = load i64, i64* %x00FF5EFF.i2483, align 8
  %and13.i2534 = and i64 %6653, %6654
  store i64 %and13.i2534, i64* %x00555455.i2484, align 8
  %6655 = load i64, i64* %x3C3CC3C3.i2478, align 8
  %6656 = load i64, i64* %x00555455.i2484, align 8
  %xor14.i2535 = xor i64 %6655, %6656
  store i64 %xor14.i2535, i64* %x3C699796.i2485, align 8
  %6657 = load i64, i64* %x4FE55EF4.i2477, align 8
  %6658 = load i64, i64* %a5.addr.i2466, align 8
  %neg15.i2536 = xor i64 %6658, -1
  %and16.i2537 = and i64 %6657, %neg15.i2536
  store i64 %and16.i2537, i64* %x30.i2516, align 8
  %6659 = load i64, i64* %x30.i2516, align 8
  %6660 = load i64, i64* %x3C699796.i2485, align 8
  %xor17.i2538 = xor i64 %6659, %6660
  store i64 %xor17.i2538, i64* %x31.i2517, align 8
  %6661 = load i64*, i64** %out4.addr.i2471, align 8
  %6662 = load i64, i64* %6661, align 8
  %6663 = load i64, i64* %x31.i2517, align 8
  %xor18.i2539 = xor i64 %6662, %6663
  %6664 = load i64*, i64** %out4.addr.i2471, align 8
  store i64 %xor18.i2539, i64* %6664, align 8
  %6665 = load i64, i64* %x0F0FF0F0.i2473, align 8
  %6666 = load i64, i64* %x00FFFF00.i2475, align 8
  %and19.i2540 = and i64 %6665, %6666
  store i64 %and19.i2540, i64* %x000FF000.i2486, align 8
  %6667 = load i64, i64* %a1.addr.i2462, align 8
  %6668 = load i64, i64* %a4.addr.i2465, align 8
  %xor20.i2541 = xor i64 %6667, %6668
  store i64 %xor20.i2541, i64* %x55AA55AA.i2487, align 8
  %6669 = load i64, i64* %x7373F4F4.i2480, align 8
  %6670 = load i64, i64* %x55AA55AA.i2487, align 8
  %xor21.i2542 = xor i64 %6669, %6670
  store i64 %xor21.i2542, i64* %x26D9A15E.i2488, align 8
  %6671 = load i64, i64* %a3.addr.i2464, align 8
  %6672 = load i64, i64* %x26D9A15E.i2488, align 8
  %or22.i2543 = or i64 %6671, %6672
  store i64 %or22.i2543, i64* %x2FDFAF5F.i2489, align 8
  %6673 = load i64, i64* %x2FDFAF5F.i2489, align 8
  %6674 = load i64, i64* %x000FF000.i2486, align 8
  %neg23.i2544 = xor i64 %6674, -1
  %and24.i2545 = and i64 %6673, %neg23.i2544
  store i64 %and24.i2545, i64* %x2FD00F5F.i2490, align 8
  %6675 = load i64, i64* %x00AAAA00.i2476, align 8
  %6676 = load i64, i64* %x55AA55AA.i2487, align 8
  %or25.i2546 = or i64 %6675, %6676
  store i64 %or25.i2546, i64* %x55AAFFAA.i2491, align 8
  %6677 = load i64, i64* %x3C699796.i2485, align 8
  %6678 = load i64, i64* %x55AAFFAA.i2491, align 8
  %neg26.i2547 = xor i64 %6678, -1
  %and27.i2548 = and i64 %6677, %neg26.i2547
  store i64 %and27.i2548, i64* %x28410014.i2492, align 8
  %6679 = load i64, i64* %a4.addr.i2465, align 8
  %6680 = load i64, i64* %a6.addr.i2467, align 8
  %and28.i2549 = and i64 %6679, %6680
  store i64 %and28.i2549, i64* %x000000FF.i2493, align 8
  %6681 = load i64, i64* %x000000FF.i2493, align 8
  %6682 = load i64, i64* %a2.addr.i2463, align 8
  %neg29.i2550 = xor i64 %6682, -1
  %and30.i2551 = and i64 %6681, %neg29.i2550
  store i64 %and30.i2551, i64* %x000000CC.i2494, align 8
  %6683 = load i64, i64* %x28410014.i2492, align 8
  %6684 = load i64, i64* %x000000CC.i2494, align 8
  %xor31.i2552 = xor i64 %6683, %6684
  store i64 %xor31.i2552, i64* %x284100D8.i2495, align 8
  %6685 = load i64, i64* %x284100D8.i2495, align 8
  %6686 = load i64, i64* %a3.addr.i2464, align 8
  %neg32.i2553 = xor i64 %6686, -1
  %and33.i2554 = and i64 %6685, %neg32.i2553
  store i64 %and33.i2554, i64* %x204000D0.i2496, align 8
  %6687 = load i64, i64* %x3C3CC3C3.i2478, align 8
  %6688 = load i64, i64* %x000000FF.i2493, align 8
  %or34.i2555 = or i64 %6687, %6688
  store i64 %or34.i2555, i64* %x3C3CC3FF.i2497, align 8
  %6689 = load i64, i64* %x3C3CC3FF.i2497, align 8
  %6690 = load i64, i64* %x204000D0.i2496, align 8
  %neg35.i2556 = xor i64 %6690, -1
  %and36.i2557 = and i64 %6689, %neg35.i2556
  store i64 %and36.i2557, i64* %x1C3CC32F.i2498, align 8
  %6691 = load i64, i64* %a1.addr.i2462, align 8
  %6692 = load i64, i64* %x1C3CC32F.i2498, align 8
  %xor37.i2558 = xor i64 %6691, %6692
  store i64 %xor37.i2558, i64* %x4969967A.i2499, align 8
  %6693 = load i64, i64* %x2FD00F5F.i2490, align 8
  %6694 = load i64, i64* %a5.addr.i2466, align 8
  %and38.i2559 = and i64 %6693, %6694
  store i64 %and38.i2559, i64* %x10.i2512, align 8
  %6695 = load i64, i64* %x10.i2512, align 8
  %6696 = load i64, i64* %x4969967A.i2499, align 8
  %xor39.i2560 = xor i64 %6695, %6696
  store i64 %xor39.i2560, i64* %x11.i2513, align 8
  %6697 = load i64*, i64** %out2.addr.i2469, align 8
  %6698 = load i64, i64* %6697, align 8
  %6699 = load i64, i64* %x11.i2513, align 8
  %xor40.i2561 = xor i64 %6698, %6699
  %6700 = load i64*, i64** %out2.addr.i2469, align 8
  store i64 %xor40.i2561, i64* %6700, align 8
  %6701 = load i64, i64* %x4FE55EF4.i2477, align 8
  %6702 = load i64, i64* %a2.addr.i2463, align 8
  %neg41.i2562 = xor i64 %6702, -1
  %and42.i2563 = and i64 %6701, %neg41.i2562
  store i64 %and42.i2563, i64* %x4CC44CC4.i2500, align 8
  %6703 = load i64, i64* %x4CC44CC4.i2500, align 8
  %6704 = load i64, i64* %a3.addr.i2464, align 8
  %neg43.i2564 = xor i64 %6704, -1
  %and44.i2565 = and i64 %6703, %neg43.i2564
  store i64 %and44.i2565, i64* %x40C040C0.i2501, align 8
  %6705 = load i64, i64* %x3C3CC3C3.i2478, align 8
  %6706 = load i64, i64* %x55AAFFAA.i2491, align 8
  %xor45.i2566 = xor i64 %6705, %6706
  store i64 %xor45.i2566, i64* %x69963C69.i2502, align 8
  %6707 = load i64, i64* %x69963C69.i2502, align 8
  %neg46.i2567 = xor i64 %6707, -1
  store i64 %neg46.i2567, i64* %x9669C396.i2503, align 8
  %6708 = load i64, i64* %x40C040C0.i2501, align 8
  %6709 = load i64, i64* %x9669C396.i2503, align 8
  %xor47.i2568 = xor i64 %6708, %6709
  store i64 %xor47.i2568, i64* %xD6A98356.i2504, align 8
  %6710 = load i64, i64* %a5.addr.i2466, align 8
  %6711 = load i64, i64* %x0C840A00.i2481, align 8
  %neg48.i2569 = xor i64 %6711, -1
  %and49.i2570 = and i64 %6710, %neg48.i2569
  store i64 %and49.i2570, i64* %x00.i2510, align 8
  %6712 = load i64, i64* %x00.i2510, align 8
  %6713 = load i64, i64* %xD6A98356.i2504, align 8
  %xor50.i2571 = xor i64 %6712, %6713
  store i64 %xor50.i2571, i64* %x01.i2511, align 8
  %6714 = load i64*, i64** %out1.addr.i2468, align 8
  %6715 = load i64, i64* %6714, align 8
  %6716 = load i64, i64* %x01.i2511, align 8
  %xor51.i2572 = xor i64 %6715, %6716
  %6717 = load i64*, i64** %out1.addr.i2468, align 8
  store i64 %xor51.i2572, i64* %6717, align 8
  %6718 = load i64, i64* %a4.addr.i2465, align 8
  %6719 = load i64, i64* %x0F0FF0F0.i2473, align 8
  %and52.i2573 = and i64 %6718, %6719
  store i64 %and52.i2573, i64* %x000F00F0.i2505, align 8
  %6720 = load i64, i64* %x3C3CC3C3.i2478, align 8
  %6721 = load i64, i64* %xD6A98356.i2504, align 8
  %or53.i2574 = or i64 %6720, %6721
  store i64 %or53.i2574, i64* %xFEBDC3D7.i2506, align 8
  %6722 = load i64, i64* %xFEBDC3D7.i2506, align 8
  %6723 = load i64, i64* %x000F00F0.i2505, align 8
  %neg54.i2575 = xor i64 %6723, -1
  %and55.i2576 = and i64 %6722, %neg54.i2575
  store i64 %and55.i2576, i64* %xFEB0C307.i2507, align 8
  %6724 = load i64, i64* %x00AAAA00.i2476, align 8
  %6725 = load i64, i64* %x4CC44CC4.i2500, align 8
  %or56.i2577 = or i64 %6724, %6725
  store i64 %or56.i2577, i64* %x4CEEEEC4.i2508, align 8
  %6726 = load i64, i64* %xFEB0C307.i2507, align 8
  %6727 = load i64, i64* %x4CEEEEC4.i2508, align 8
  %xor57.i2578 = xor i64 %6726, %6727
  store i64 %xor57.i2578, i64* %xB25E2DC3.i2509, align 8
  %6728 = load i64, i64* %x284100D8.i2495, align 8
  %6729 = load i64, i64* %a5.addr.i2466, align 8
  %or58.i2579 = or i64 %6728, %6729
  store i64 %or58.i2579, i64* %x20.i2514, align 8
  %6730 = load i64, i64* %x20.i2514, align 8
  %6731 = load i64, i64* %xB25E2DC3.i2509, align 8
  %xor59.i2580 = xor i64 %6730, %6731
  store i64 %xor59.i2580, i64* %x21.i2515, align 8
  %6732 = load i64*, i64** %out3.addr.i2470, align 8
  %6733 = load i64, i64* %6732, align 8
  %6734 = load i64, i64* %x21.i2515, align 8
  %xor60.i2581 = xor i64 %6733, %6734
  %6735 = load i64*, i64** %out3.addr.i2470, align 8
  store i64 %xor60.i2581, i64* %6735, align 8
  %6736 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 11), align 8
  %6737 = load i64**, i64*** %k, align 8
  %arrayidx1092 = getelementptr inbounds i64*, i64** %6737, i64 18
  %6738 = load i64*, i64** %arrayidx1092, align 8
  %arrayidx1093 = getelementptr inbounds i64, i64* %6738, i64 0
  %6739 = load i64, i64* %arrayidx1093, align 8
  %xor1094 = xor i64 %6736, %6739
  %6740 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 12), align 8
  %6741 = load i64**, i64*** %k, align 8
  %arrayidx1095 = getelementptr inbounds i64*, i64** %6741, i64 19
  %6742 = load i64*, i64** %arrayidx1095, align 8
  %arrayidx1096 = getelementptr inbounds i64, i64* %6742, i64 0
  %6743 = load i64, i64* %arrayidx1096, align 8
  %xor1097 = xor i64 %6740, %6743
  %6744 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 13), align 8
  %6745 = load i64**, i64*** %k, align 8
  %arrayidx1098 = getelementptr inbounds i64*, i64** %6745, i64 20
  %6746 = load i64*, i64** %arrayidx1098, align 8
  %arrayidx1099 = getelementptr inbounds i64, i64* %6746, i64 0
  %6747 = load i64, i64* %arrayidx1099, align 8
  %xor1100 = xor i64 %6744, %6747
  %6748 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 14), align 8
  %6749 = load i64**, i64*** %k, align 8
  %arrayidx1101 = getelementptr inbounds i64*, i64** %6749, i64 21
  %6750 = load i64*, i64** %arrayidx1101, align 8
  %arrayidx1102 = getelementptr inbounds i64, i64* %6750, i64 0
  %6751 = load i64, i64* %arrayidx1102, align 8
  %xor1103 = xor i64 %6748, %6751
  %6752 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 15), align 8
  %6753 = load i64**, i64*** %k, align 8
  %arrayidx1104 = getelementptr inbounds i64*, i64** %6753, i64 22
  %6754 = load i64*, i64** %arrayidx1104, align 8
  %arrayidx1105 = getelementptr inbounds i64, i64* %6754, i64 0
  %6755 = load i64, i64* %arrayidx1105, align 8
  %xor1106 = xor i64 %6752, %6755
  %6756 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 16), align 8
  %6757 = load i64**, i64*** %k, align 8
  %arrayidx1107 = getelementptr inbounds i64*, i64** %6757, i64 23
  %6758 = load i64*, i64** %arrayidx1107, align 8
  %arrayidx1108 = getelementptr inbounds i64, i64* %6758, i64 0
  %6759 = load i64, i64* %arrayidx1108, align 8
  %xor1109 = xor i64 %6756, %6759
  store i64 %xor1094, i64* %a1.addr.i2373, align 8
  store i64 %xor1097, i64* %a2.addr.i2374, align 8
  store i64 %xor1100, i64* %a3.addr.i2375, align 8
  store i64 %xor1103, i64* %a4.addr.i2376, align 8
  store i64 %xor1106, i64* %a5.addr.i2377, align 8
  store i64 %xor1109, i64* %a6.addr.i2378, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 57), i64** %out1.addr.i2379, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 51), i64** %out2.addr.i2380, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 41), i64** %out3.addr.i2381, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 32), i64** %out4.addr.i2382, align 8
  %6760 = load i64, i64* %a1.addr.i2373, align 8
  %6761 = load i64, i64* %a3.addr.i2375, align 8
  %xor.i2416 = xor i64 %6760, %6761
  store i64 %xor.i2416, i64* %x5A5A5A5A.i2383, align 8
  %6762 = load i64, i64* %a3.addr.i2375, align 8
  %6763 = load i64, i64* %a5.addr.i2377, align 8
  %xor1.i2417 = xor i64 %6762, %6763
  store i64 %xor1.i2417, i64* %x0F0FF0F0.i2384, align 8
  %6764 = load i64, i64* %a2.addr.i2374, align 8
  %6765 = load i64, i64* %a4.addr.i2376, align 8
  %or.i2418 = or i64 %6764, %6765
  store i64 %or.i2418, i64* %x33FF33FF.i2385, align 8
  %6766 = load i64, i64* %a5.addr.i2377, align 8
  %6767 = load i64, i64* %x33FF33FF.i2385, align 8
  %xor2.i2419 = xor i64 %6766, %6767
  store i64 %xor2.i2419, i64* %x33FFCC00.i2386, align 8
  %6768 = load i64, i64* %x0F0FF0F0.i2384, align 8
  %6769 = load i64, i64* %x33FFCC00.i2386, align 8
  %neg.i2420 = xor i64 %6769, -1
  %and.i2421 = and i64 %6768, %neg.i2420
  store i64 %and.i2421, i64* %x0C0030F0.i2387, align 8
  %6770 = load i64, i64* %x0F0FF0F0.i2384, align 8
  %6771 = load i64, i64* %a2.addr.i2374, align 8
  %neg3.i2422 = xor i64 %6771, -1
  %and4.i2423 = and i64 %6770, %neg3.i2422
  store i64 %and4.i2423, i64* %x0C0CC0C0.i2388, align 8
  %6772 = load i64, i64* %a4.addr.i2376, align 8
  %6773 = load i64, i64* %x0C0CC0C0.i2388, align 8
  %xor5.i2424 = xor i64 %6772, %6773
  store i64 %xor5.i2424, i64* %x0CF3C03F.i2389, align 8
  %6774 = load i64, i64* %x5A5A5A5A.i2383, align 8
  %6775 = load i64, i64* %x0CF3C03F.i2389, align 8
  %or6.i2425 = or i64 %6774, %6775
  store i64 %or6.i2425, i64* %x5EFBDA7F.i2390, align 8
  %6776 = load i64, i64* %x5EFBDA7F.i2390, align 8
  %6777 = load i64, i64* %x0C0030F0.i2387, align 8
  %neg7.i2426 = xor i64 %6777, -1
  %and8.i2427 = and i64 %6776, %neg7.i2426
  store i64 %and8.i2427, i64* %x52FBCA0F.i2391, align 8
  %6778 = load i64, i64* %a2.addr.i2374, align 8
  %6779 = load i64, i64* %x52FBCA0F.i2391, align 8
  %xor9.i2428 = xor i64 %6778, %6779
  store i64 %xor9.i2428, i64* %x61C8F93C.i2392, align 8
  %6780 = load i64, i64* %x0CF3C03F.i2389, align 8
  %6781 = load i64, i64* %x61C8F93C.i2392, align 8
  %and10.i2429 = and i64 %6780, %6781
  store i64 %and10.i2429, i64* %x00C0C03C.i2393, align 8
  %6782 = load i64, i64* %x0F0FF0F0.i2384, align 8
  %6783 = load i64, i64* %x00C0C03C.i2393, align 8
  %neg11.i2430 = xor i64 %6783, -1
  %and12.i2431 = and i64 %6782, %neg11.i2430
  store i64 %and12.i2431, i64* %x0F0F30C0.i2394, align 8
  %6784 = load i64, i64* %x5A5A5A5A.i2383, align 8
  %6785 = load i64, i64* %x61C8F93C.i2392, align 8
  %xor13.i2432 = xor i64 %6784, %6785
  store i64 %xor13.i2432, i64* %x3B92A366.i2395, align 8
  %6786 = load i64, i64* %x3B92A366.i2395, align 8
  %6787 = load i64, i64* %x0F0F30C0.i2394, align 8
  %neg14.i2433 = xor i64 %6787, -1
  %and15.i2434 = and i64 %6786, %neg14.i2433
  store i64 %and15.i2434, i64* %x30908326.i2396, align 8
  %6788 = load i64, i64* %x0C0030F0.i2387, align 8
  %6789 = load i64, i64* %x30908326.i2396, align 8
  %xor16.i2435 = xor i64 %6788, %6789
  store i64 %xor16.i2435, i64* %x3C90B3D6.i2397, align 8
  %6790 = load i64, i64* %a2.addr.i2374, align 8
  %6791 = load i64, i64* %a4.addr.i2376, align 8
  %xor17.i2436 = xor i64 %6790, %6791
  store i64 %xor17.i2436, i64* %x33CC33CC.i2398, align 8
  %6792 = load i64, i64* %a5.addr.i2377, align 8
  %6793 = load i64, i64* %x0C0CC0C0.i2388, align 8
  %or18.i2437 = or i64 %6792, %6793
  store i64 %or18.i2437, i64* %x0C0CFFFF.i2399, align 8
  %6794 = load i64, i64* %x3B92A366.i2395, align 8
  %6795 = load i64, i64* %x0C0CFFFF.i2399, align 8
  %xor19.i2438 = xor i64 %6794, %6795
  store i64 %xor19.i2438, i64* %x379E5C99.i2400, align 8
  %6796 = load i64, i64* %x379E5C99.i2400, align 8
  %6797 = load i64, i64* %x33CC33CC.i2398, align 8
  %neg20.i2439 = xor i64 %6797, -1
  %and21.i2440 = and i64 %6796, %neg20.i2439
  store i64 %and21.i2440, i64* %x04124C11.i2401, align 8
  %6798 = load i64, i64* %x52FBCA0F.i2391, align 8
  %6799 = load i64, i64* %x04124C11.i2401, align 8
  %xor22.i2441 = xor i64 %6798, %6799
  store i64 %xor22.i2441, i64* %x56E9861E.i2402, align 8
  %6800 = load i64, i64* %a6.addr.i2378, align 8
  %6801 = load i64, i64* %x3C90B3D6.i2397, align 8
  %neg23.i2442 = xor i64 %6801, -1
  %and24.i2443 = and i64 %6800, %neg23.i2442
  store i64 %and24.i2443, i64* %x00.i2408, align 8
  %6802 = load i64, i64* %x00.i2408, align 8
  %6803 = load i64, i64* %x56E9861E.i2402, align 8
  %xor25.i2444 = xor i64 %6802, %6803
  store i64 %xor25.i2444, i64* %x01.i2409, align 8
  %6804 = load i64*, i64** %out1.addr.i2379, align 8
  %6805 = load i64, i64* %6804, align 8
  %6806 = load i64, i64* %x01.i2409, align 8
  %xor26.i2445 = xor i64 %6805, %6806
  %6807 = load i64*, i64** %out1.addr.i2379, align 8
  store i64 %xor26.i2445, i64* %6807, align 8
  %6808 = load i64, i64* %x56E9861E.i2402, align 8
  %neg27.i2446 = xor i64 %6808, -1
  store i64 %neg27.i2446, i64* %xA91679E1.i2403, align 8
  %6809 = load i64, i64* %x3C90B3D6.i2397, align 8
  %6810 = load i64, i64* %a6.addr.i2378, align 8
  %neg28.i2447 = xor i64 %6810, -1
  %and29.i2448 = and i64 %6809, %neg28.i2447
  store i64 %and29.i2448, i64* %x10.i2410, align 8
  %6811 = load i64, i64* %x10.i2410, align 8
  %6812 = load i64, i64* %xA91679E1.i2403, align 8
  %xor30.i2449 = xor i64 %6811, %6812
  store i64 %xor30.i2449, i64* %x11.i2411, align 8
  %6813 = load i64*, i64** %out2.addr.i2380, align 8
  %6814 = load i64, i64* %6813, align 8
  %6815 = load i64, i64* %x11.i2411, align 8
  %xor31.i2450 = xor i64 %6814, %6815
  %6816 = load i64*, i64** %out2.addr.i2380, align 8
  store i64 %xor31.i2450, i64* %6816, align 8
  %6817 = load i64, i64* %x3C90B3D6.i2397, align 8
  %6818 = load i64, i64* %xA91679E1.i2403, align 8
  %xor32.i2451 = xor i64 %6817, %6818
  store i64 %xor32.i2451, i64* %x9586CA37.i2404, align 8
  %6819 = load i64, i64* %x9586CA37.i2404, align 8
  %6820 = load i64, i64* %x33CC33CC.i2398, align 8
  %neg33.i2452 = xor i64 %6820, -1
  %and34.i2453 = and i64 %6819, %neg33.i2452
  store i64 %and34.i2453, i64* %x8402C833.i2405, align 8
  %6821 = load i64, i64* %x00C0C03C.i2393, align 8
  %6822 = load i64, i64* %x8402C833.i2405, align 8
  %or35.i2454 = or i64 %6821, %6822
  store i64 %or35.i2454, i64* %x84C2C83F.i2406, align 8
  %6823 = load i64, i64* %x379E5C99.i2400, align 8
  %6824 = load i64, i64* %x84C2C83F.i2406, align 8
  %xor36.i2455 = xor i64 %6823, %6824
  store i64 %xor36.i2455, i64* %xB35C94A6.i2407, align 8
  %6825 = load i64, i64* %x61C8F93C.i2392, align 8
  %6826 = load i64, i64* %a6.addr.i2378, align 8
  %or37.i2456 = or i64 %6825, %6826
  store i64 %or37.i2456, i64* %x20.i2412, align 8
  %6827 = load i64, i64* %x20.i2412, align 8
  %6828 = load i64, i64* %xB35C94A6.i2407, align 8
  %xor38.i2457 = xor i64 %6827, %6828
  store i64 %xor38.i2457, i64* %x21.i2413, align 8
  %6829 = load i64*, i64** %out3.addr.i2381, align 8
  %6830 = load i64, i64* %6829, align 8
  %6831 = load i64, i64* %x21.i2413, align 8
  %xor39.i2458 = xor i64 %6830, %6831
  %6832 = load i64*, i64** %out3.addr.i2381, align 8
  store i64 %xor39.i2458, i64* %6832, align 8
  %6833 = load i64, i64* %a6.addr.i2378, align 8
  %6834 = load i64, i64* %x61C8F93C.i2392, align 8
  %and40.i2459 = and i64 %6833, %6834
  store i64 %and40.i2459, i64* %x30.i2414, align 8
  %6835 = load i64, i64* %x30.i2414, align 8
  %6836 = load i64, i64* %xB35C94A6.i2407, align 8
  %xor41.i2460 = xor i64 %6835, %6836
  store i64 %xor41.i2460, i64* %x31.i2415, align 8
  %6837 = load i64*, i64** %out4.addr.i2382, align 8
  %6838 = load i64, i64* %6837, align 8
  %6839 = load i64, i64* %x31.i2415, align 8
  %xor42.i2461 = xor i64 %6838, %6839
  %6840 = load i64*, i64** %out4.addr.i2382, align 8
  store i64 %xor42.i2461, i64* %6840, align 8
  %6841 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 24), align 8
  %arrayidx1110 = getelementptr inbounds i64, i64* %6841, i64 0
  %6842 = load i64, i64* %arrayidx1110, align 8
  %6843 = load i64**, i64*** %k, align 8
  %arrayidx1111 = getelementptr inbounds i64*, i64** %6843, i64 24
  %6844 = load i64*, i64** %arrayidx1111, align 8
  %arrayidx1112 = getelementptr inbounds i64, i64* %6844, i64 0
  %6845 = load i64, i64* %arrayidx1112, align 8
  %xor1113 = xor i64 %6842, %6845
  %6846 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 25), align 8
  %arrayidx1114 = getelementptr inbounds i64, i64* %6846, i64 0
  %6847 = load i64, i64* %arrayidx1114, align 8
  %6848 = load i64**, i64*** %k, align 8
  %arrayidx1115 = getelementptr inbounds i64*, i64** %6848, i64 25
  %6849 = load i64*, i64** %arrayidx1115, align 8
  %arrayidx1116 = getelementptr inbounds i64, i64* %6849, i64 0
  %6850 = load i64, i64* %arrayidx1116, align 8
  %xor1117 = xor i64 %6847, %6850
  %6851 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 26), align 8
  %arrayidx1118 = getelementptr inbounds i64, i64* %6851, i64 0
  %6852 = load i64, i64* %arrayidx1118, align 8
  %6853 = load i64**, i64*** %k, align 8
  %arrayidx1119 = getelementptr inbounds i64*, i64** %6853, i64 26
  %6854 = load i64*, i64** %arrayidx1119, align 8
  %arrayidx1120 = getelementptr inbounds i64, i64* %6854, i64 0
  %6855 = load i64, i64* %arrayidx1120, align 8
  %xor1121 = xor i64 %6852, %6855
  %6856 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 27), align 8
  %arrayidx1122 = getelementptr inbounds i64, i64* %6856, i64 0
  %6857 = load i64, i64* %arrayidx1122, align 8
  %6858 = load i64**, i64*** %k, align 8
  %arrayidx1123 = getelementptr inbounds i64*, i64** %6858, i64 27
  %6859 = load i64*, i64** %arrayidx1123, align 8
  %arrayidx1124 = getelementptr inbounds i64, i64* %6859, i64 0
  %6860 = load i64, i64* %arrayidx1124, align 8
  %xor1125 = xor i64 %6857, %6860
  %6861 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 28), align 8
  %arrayidx1126 = getelementptr inbounds i64, i64* %6861, i64 0
  %6862 = load i64, i64* %arrayidx1126, align 8
  %6863 = load i64**, i64*** %k, align 8
  %arrayidx1127 = getelementptr inbounds i64*, i64** %6863, i64 28
  %6864 = load i64*, i64** %arrayidx1127, align 8
  %arrayidx1128 = getelementptr inbounds i64, i64* %6864, i64 0
  %6865 = load i64, i64* %arrayidx1128, align 8
  %xor1129 = xor i64 %6862, %6865
  %6866 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 29), align 8
  %arrayidx1130 = getelementptr inbounds i64, i64* %6866, i64 0
  %6867 = load i64, i64* %arrayidx1130, align 8
  %6868 = load i64**, i64*** %k, align 8
  %arrayidx1131 = getelementptr inbounds i64*, i64** %6868, i64 29
  %6869 = load i64*, i64** %arrayidx1131, align 8
  %arrayidx1132 = getelementptr inbounds i64, i64* %6869, i64 0
  %6870 = load i64, i64* %arrayidx1132, align 8
  %xor1133 = xor i64 %6867, %6870
  store i64 %xor1113, i64* %a1.addr.i2254, align 8
  store i64 %xor1117, i64* %a2.addr.i2255, align 8
  store i64 %xor1121, i64* %a3.addr.i2256, align 8
  store i64 %xor1125, i64* %a4.addr.i2257, align 8
  store i64 %xor1129, i64* %a5.addr.i2258, align 8
  store i64 %xor1133, i64* %a6.addr.i2259, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 39), i64** %out1.addr.i2260, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 45), i64** %out2.addr.i2261, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 56), i64** %out3.addr.i2262, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 34), i64** %out4.addr.i2263, align 8
  %6871 = load i64, i64* %a1.addr.i2254, align 8
  %6872 = load i64, i64* %a3.addr.i2256, align 8
  %or.i2312 = or i64 %6871, %6872
  store i64 %or.i2312, i64* %x77777777.i2264, align 8
  %6873 = load i64, i64* %x77777777.i2264, align 8
  %6874 = load i64, i64* %a6.addr.i2259, align 8
  %neg.i2313 = xor i64 %6874, -1
  %and.i2314 = and i64 %6873, %neg.i2313
  store i64 %and.i2314, i64* %x77770000.i2265, align 8
  %6875 = load i64, i64* %a1.addr.i2254, align 8
  %6876 = load i64, i64* %x77770000.i2265, align 8
  %xor.i2315 = xor i64 %6875, %6876
  store i64 %xor.i2315, i64* %x22225555.i2266, align 8
  %6877 = load i64, i64* %a3.addr.i2256, align 8
  %6878 = load i64, i64* %x22225555.i2266, align 8
  %xor1.i2316 = xor i64 %6877, %6878
  store i64 %xor1.i2316, i64* %x11116666.i2267, align 8
  %6879 = load i64, i64* %a4.addr.i2257, align 8
  %6880 = load i64, i64* %x11116666.i2267, align 8
  %or2.i2317 = or i64 %6879, %6880
  store i64 %or2.i2317, i64* %x1F1F6F6F.i2268, align 8
  %6881 = load i64, i64* %x77770000.i2265, align 8
  %6882 = load i64, i64* %a4.addr.i2257, align 8
  %neg3.i2318 = xor i64 %6882, -1
  %and4.i2319 = and i64 %6881, %neg3.i2318
  store i64 %and4.i2319, i64* %x70700000.i2269, align 8
  %6883 = load i64, i64* %a3.addr.i2256, align 8
  %6884 = load i64, i64* %x70700000.i2269, align 8
  %xor5.i2320 = xor i64 %6883, %6884
  store i64 %xor5.i2320, i64* %x43433333.i2270, align 8
  %6885 = load i64, i64* %a5.addr.i2258, align 8
  %6886 = load i64, i64* %x43433333.i2270, align 8
  %and6.i2321 = and i64 %6885, %6886
  store i64 %and6.i2321, i64* %x00430033.i2271, align 8
  %6887 = load i64, i64* %a1.addr.i2254, align 8
  %6888 = load i64, i64* %x11116666.i2267, align 8
  %or7.i2322 = or i64 %6887, %6888
  store i64 %or7.i2322, i64* %x55557777.i2272, align 8
  %6889 = load i64, i64* %x00430033.i2271, align 8
  %6890 = load i64, i64* %x55557777.i2272, align 8
  %xor8.i2323 = xor i64 %6889, %6890
  store i64 %xor8.i2323, i64* %x55167744.i2273, align 8
  %6891 = load i64, i64* %a4.addr.i2257, align 8
  %6892 = load i64, i64* %x55167744.i2273, align 8
  %xor9.i2324 = xor i64 %6891, %6892
  store i64 %xor9.i2324, i64* %x5A19784B.i2274, align 8
  %6893 = load i64, i64* %a6.addr.i2259, align 8
  %6894 = load i64, i64* %x5A19784B.i2274, align 8
  %xor10.i2325 = xor i64 %6893, %6894
  store i64 %xor10.i2325, i64* %x5A1987B4.i2275, align 8
  %6895 = load i64, i64* %x22225555.i2266, align 8
  %6896 = load i64, i64* %x5A1987B4.i2275, align 8
  %or11.i2326 = or i64 %6895, %6896
  store i64 %or11.i2326, i64* %x7A3BD7F5.i2276, align 8
  %6897 = load i64, i64* %a5.addr.i2258, align 8
  %6898 = load i64, i64* %x7A3BD7F5.i2276, align 8
  %and12.i2327 = and i64 %6897, %6898
  store i64 %and12.i2327, i64* %x003B00F5.i2277, align 8
  %6899 = load i64, i64* %x22225555.i2266, align 8
  %6900 = load i64, i64* %x003B00F5.i2277, align 8
  %xor13.i2328 = xor i64 %6899, %6900
  store i64 %xor13.i2328, i64* %x221955A0.i2278, align 8
  %6901 = load i64, i64* %a4.addr.i2257, align 8
  %6902 = load i64, i64* %x55557777.i2272, align 8
  %and14.i2329 = and i64 %6901, %6902
  store i64 %and14.i2329, i64* %x05050707.i2279, align 8
  %6903 = load i64, i64* %x221955A0.i2278, align 8
  %6904 = load i64, i64* %x05050707.i2279, align 8
  %xor15.i2330 = xor i64 %6903, %6904
  store i64 %xor15.i2330, i64* %x271C52A7.i2280, align 8
  %6905 = load i64, i64* %x7A3BD7F5.i2276, align 8
  %6906 = load i64, i64* %a1.addr.i2254, align 8
  %neg16.i2331 = xor i64 %6906, -1
  %and17.i2332 = and i64 %6905, %neg16.i2331
  store i64 %and17.i2332, i64* %x2A2A82A0.i2281, align 8
  %6907 = load i64, i64* %x43433333.i2270, align 8
  %6908 = load i64, i64* %x2A2A82A0.i2281, align 8
  %xor18.i2333 = xor i64 %6907, %6908
  store i64 %xor18.i2333, i64* %x6969B193.i2282, align 8
  %6909 = load i64, i64* %a5.addr.i2258, align 8
  %6910 = load i64, i64* %x1F1F6F6F.i2268, align 8
  %xor19.i2334 = xor i64 %6909, %6910
  store i64 %xor19.i2334, i64* %x1FE06F90.i2283, align 8
  %6911 = load i64, i64* %x1FE06F90.i2283, align 8
  %6912 = load i64, i64* %x6969B193.i2282, align 8
  %neg20.i2335 = xor i64 %6912, -1
  %and21.i2336 = and i64 %6911, %neg20.i2335
  store i64 %and21.i2336, i64* %x16804E00.i2284, align 8
  %6913 = load i64, i64* %x16804E00.i2284, align 8
  %neg22.i2337 = xor i64 %6913, -1
  store i64 %neg22.i2337, i64* %xE97FB1FF.i2285, align 8
  %6914 = load i64, i64* %xE97FB1FF.i2285, align 8
  %6915 = load i64, i64* %a2.addr.i2255, align 8
  %neg23.i2338 = xor i64 %6915, -1
  %and24.i2339 = and i64 %6914, %neg23.i2338
  store i64 %and24.i2339, i64* %x20.i2308, align 8
  %6916 = load i64, i64* %x20.i2308, align 8
  %6917 = load i64, i64* %x5A19784B.i2274, align 8
  %xor25.i2340 = xor i64 %6916, %6917
  store i64 %xor25.i2340, i64* %x21.i2309, align 8
  %6918 = load i64*, i64** %out3.addr.i2262, align 8
  %6919 = load i64, i64* %6918, align 8
  %6920 = load i64, i64* %x21.i2309, align 8
  %xor26.i2341 = xor i64 %6919, %6920
  %6921 = load i64*, i64** %out3.addr.i2262, align 8
  store i64 %xor26.i2341, i64* %6921, align 8
  %6922 = load i64, i64* %x43433333.i2270, align 8
  %6923 = load i64, i64* %x003B00F5.i2277, align 8
  %neg27.i2342 = xor i64 %6923, -1
  %and28.i2343 = and i64 %6922, %neg27.i2342
  store i64 %and28.i2343, i64* %x43403302.i2286, align 8
  %6924 = load i64, i64* %x2A2A82A0.i2281, align 8
  %6925 = load i64, i64* %x1FE06F90.i2283, align 8
  %xor29.i2344 = xor i64 %6924, %6925
  store i64 %xor29.i2344, i64* %x35CAED30.i2287, align 8
  %6926 = load i64, i64* %x271C52A7.i2280, align 8
  %6927 = load i64, i64* %x35CAED30.i2287, align 8
  %or30.i2345 = or i64 %6926, %6927
  store i64 %or30.i2345, i64* %x37DEFFB7.i2288, align 8
  %6928 = load i64, i64* %x37DEFFB7.i2288, align 8
  %6929 = load i64, i64* %x43403302.i2286, align 8
  %neg31.i2346 = xor i64 %6929, -1
  %and32.i2347 = and i64 %6928, %neg31.i2346
  store i64 %and32.i2347, i64* %x349ECCB5.i2289, align 8
  %6930 = load i64, i64* %x1F1F6F6F.i2268, align 8
  %6931 = load i64, i64* %x349ECCB5.i2289, align 8
  %neg33.i2348 = xor i64 %6931, -1
  %and34.i2349 = and i64 %6930, %neg33.i2348
  store i64 %and34.i2349, i64* %x0B01234A.i2290, align 8
  %6932 = load i64, i64* %x5A1987B4.i2275, align 8
  %6933 = load i64, i64* %x349ECCB5.i2289, align 8
  %and35.i2350 = and i64 %6932, %6933
  store i64 %and35.i2350, i64* %x101884B4.i2291, align 8
  %6934 = load i64, i64* %x1FE06F90.i2283, align 8
  %6935 = load i64, i64* %x101884B4.i2291, align 8
  %xor36.i2351 = xor i64 %6934, %6935
  store i64 %xor36.i2351, i64* %x0FF8EB24.i2292, align 8
  %6936 = load i64, i64* %x43433333.i2270, align 8
  %6937 = load i64, i64* %x55557777.i2272, align 8
  %and37.i2352 = and i64 %6936, %6937
  store i64 %and37.i2352, i64* %x41413333.i2293, align 8
  %6938 = load i64, i64* %x0FF8EB24.i2292, align 8
  %6939 = load i64, i64* %x41413333.i2293, align 8
  %or38.i2353 = or i64 %6938, %6939
  store i64 %or38.i2353, i64* %x4FF9FB37.i2294, align 8
  %6940 = load i64, i64* %x003B00F5.i2277, align 8
  %6941 = load i64, i64* %x4FF9FB37.i2294, align 8
  %xor39.i2354 = xor i64 %6940, %6941
  store i64 %xor39.i2354, i64* %x4FC2FBC2.i2295, align 8
  %6942 = load i64, i64* %x4FC2FBC2.i2295, align 8
  %6943 = load i64, i64* %a2.addr.i2255, align 8
  %and40.i2355 = and i64 %6942, %6943
  store i64 %and40.i2355, i64* %x30.i2310, align 8
  %6944 = load i64, i64* %x30.i2310, align 8
  %6945 = load i64, i64* %x271C52A7.i2280, align 8
  %xor41.i2356 = xor i64 %6944, %6945
  store i64 %xor41.i2356, i64* %x31.i2311, align 8
  %6946 = load i64*, i64** %out4.addr.i2263, align 8
  %6947 = load i64, i64* %6946, align 8
  %6948 = load i64, i64* %x31.i2311, align 8
  %xor42.i2357 = xor i64 %6947, %6948
  %6949 = load i64*, i64** %out4.addr.i2263, align 8
  store i64 %xor42.i2357, i64* %6949, align 8
  %6950 = load i64, i64* %a1.addr.i2254, align 8
  %6951 = load i64, i64* %x77777777.i2264, align 8
  %xor43.i2358 = xor i64 %6950, %6951
  store i64 %xor43.i2358, i64* %x22222222.i2296, align 8
  %6952 = load i64, i64* %x349ECCB5.i2289, align 8
  %6953 = load i64, i64* %x22222222.i2296, align 8
  %xor44.i2359 = xor i64 %6952, %6953
  store i64 %xor44.i2359, i64* %x16BCEE97.i2297, align 8
  %6954 = load i64, i64* %a4.addr.i2257, align 8
  %6955 = load i64, i64* %x0FF8EB24.i2292, align 8
  %and45.i2360 = and i64 %6954, %6955
  store i64 %and45.i2360, i64* %x0F080B04.i2298, align 8
  %6956 = load i64, i64* %x16BCEE97.i2297, align 8
  %6957 = load i64, i64* %x0F080B04.i2298, align 8
  %xor46.i2361 = xor i64 %6956, %6957
  store i64 %xor46.i2361, i64* %x19B4E593.i2299, align 8
  %6958 = load i64, i64* %x0B01234A.i2290, align 8
  %6959 = load i64, i64* %a2.addr.i2255, align 8
  %or47.i2362 = or i64 %6958, %6959
  store i64 %or47.i2362, i64* %x00.i2304, align 8
  %6960 = load i64, i64* %x00.i2304, align 8
  %6961 = load i64, i64* %x19B4E593.i2299, align 8
  %xor48.i2363 = xor i64 %6960, %6961
  store i64 %xor48.i2363, i64* %x01.i2305, align 8
  %6962 = load i64*, i64** %out1.addr.i2260, align 8
  %6963 = load i64, i64* %6962, align 8
  %6964 = load i64, i64* %x01.i2305, align 8
  %xor49.i2364 = xor i64 %6963, %6964
  %6965 = load i64*, i64** %out1.addr.i2260, align 8
  store i64 %xor49.i2364, i64* %6965, align 8
  %6966 = load i64, i64* %x1F1F6F6F.i2268, align 8
  %6967 = load i64, i64* %x43433333.i2270, align 8
  %xor50.i2365 = xor i64 %6966, %6967
  store i64 %xor50.i2365, i64* %x5C5C5C5C.i2300, align 8
  %6968 = load i64, i64* %x5C5C5C5C.i2300, align 8
  %6969 = load i64, i64* %x19B4E593.i2299, align 8
  %neg51.i2366 = xor i64 %6969, -1
  %and52.i2367 = and i64 %6968, %neg51.i2366
  store i64 %and52.i2367, i64* %x4448184C.i2301, align 8
  %6970 = load i64, i64* %x22225555.i2266, align 8
  %6971 = load i64, i64* %x0FF8EB24.i2292, align 8
  %xor53.i2368 = xor i64 %6970, %6971
  store i64 %xor53.i2368, i64* %x2DDABE71.i2302, align 8
  %6972 = load i64, i64* %x4448184C.i2301, align 8
  %6973 = load i64, i64* %x2DDABE71.i2302, align 8
  %xor54.i2369 = xor i64 %6972, %6973
  store i64 %xor54.i2369, i64* %x6992A63D.i2303, align 8
  %6974 = load i64, i64* %x1F1F6F6F.i2268, align 8
  %6975 = load i64, i64* %a2.addr.i2255, align 8
  %and55.i2370 = and i64 %6974, %6975
  store i64 %and55.i2370, i64* %x10.i2306, align 8
  %6976 = load i64, i64* %x10.i2306, align 8
  %6977 = load i64, i64* %x6992A63D.i2303, align 8
  %xor56.i2371 = xor i64 %6976, %6977
  store i64 %xor56.i2371, i64* %x11.i2307, align 8
  %6978 = load i64*, i64** %out2.addr.i2261, align 8
  %6979 = load i64, i64* %6978, align 8
  %6980 = load i64, i64* %x11.i2307, align 8
  %xor57.i2372 = xor i64 %6979, %6980
  %6981 = load i64*, i64** %out2.addr.i2261, align 8
  store i64 %xor57.i2372, i64* %6981, align 8
  %6982 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 30), align 8
  %arrayidx1134 = getelementptr inbounds i64, i64* %6982, i64 0
  %6983 = load i64, i64* %arrayidx1134, align 8
  %6984 = load i64**, i64*** %k, align 8
  %arrayidx1135 = getelementptr inbounds i64*, i64** %6984, i64 30
  %6985 = load i64*, i64** %arrayidx1135, align 8
  %arrayidx1136 = getelementptr inbounds i64, i64* %6985, i64 0
  %6986 = load i64, i64* %arrayidx1136, align 8
  %xor1137 = xor i64 %6983, %6986
  %6987 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 31), align 8
  %arrayidx1138 = getelementptr inbounds i64, i64* %6987, i64 0
  %6988 = load i64, i64* %arrayidx1138, align 8
  %6989 = load i64**, i64*** %k, align 8
  %arrayidx1139 = getelementptr inbounds i64*, i64** %6989, i64 31
  %6990 = load i64*, i64** %arrayidx1139, align 8
  %arrayidx1140 = getelementptr inbounds i64, i64* %6990, i64 0
  %6991 = load i64, i64* %arrayidx1140, align 8
  %xor1141 = xor i64 %6988, %6991
  %6992 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 32), align 8
  %arrayidx1142 = getelementptr inbounds i64, i64* %6992, i64 0
  %6993 = load i64, i64* %arrayidx1142, align 8
  %6994 = load i64**, i64*** %k, align 8
  %arrayidx1143 = getelementptr inbounds i64*, i64** %6994, i64 32
  %6995 = load i64*, i64** %arrayidx1143, align 8
  %arrayidx1144 = getelementptr inbounds i64, i64* %6995, i64 0
  %6996 = load i64, i64* %arrayidx1144, align 8
  %xor1145 = xor i64 %6993, %6996
  %6997 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 33), align 8
  %arrayidx1146 = getelementptr inbounds i64, i64* %6997, i64 0
  %6998 = load i64, i64* %arrayidx1146, align 8
  %6999 = load i64**, i64*** %k, align 8
  %arrayidx1147 = getelementptr inbounds i64*, i64** %6999, i64 33
  %7000 = load i64*, i64** %arrayidx1147, align 8
  %arrayidx1148 = getelementptr inbounds i64, i64* %7000, i64 0
  %7001 = load i64, i64* %arrayidx1148, align 8
  %xor1149 = xor i64 %6998, %7001
  %7002 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 34), align 8
  %arrayidx1150 = getelementptr inbounds i64, i64* %7002, i64 0
  %7003 = load i64, i64* %arrayidx1150, align 8
  %7004 = load i64**, i64*** %k, align 8
  %arrayidx1151 = getelementptr inbounds i64*, i64** %7004, i64 34
  %7005 = load i64*, i64** %arrayidx1151, align 8
  %arrayidx1152 = getelementptr inbounds i64, i64* %7005, i64 0
  %7006 = load i64, i64* %arrayidx1152, align 8
  %xor1153 = xor i64 %7003, %7006
  %7007 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 35), align 8
  %arrayidx1154 = getelementptr inbounds i64, i64* %7007, i64 0
  %7008 = load i64, i64* %arrayidx1154, align 8
  %7009 = load i64**, i64*** %k, align 8
  %arrayidx1155 = getelementptr inbounds i64*, i64** %7009, i64 35
  %7010 = load i64*, i64** %arrayidx1155, align 8
  %arrayidx1156 = getelementptr inbounds i64, i64* %7010, i64 0
  %7011 = load i64, i64* %arrayidx1156, align 8
  %xor1157 = xor i64 %7008, %7011
  store i64 %xor1137, i64* %a1.addr.i2140, align 8
  store i64 %xor1141, i64* %a2.addr.i2141, align 8
  store i64 %xor1145, i64* %a3.addr.i2142, align 8
  store i64 %xor1149, i64* %a4.addr.i2143, align 8
  store i64 %xor1153, i64* %a5.addr.i2144, align 8
  store i64 %xor1157, i64* %a6.addr.i2145, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 35), i64** %out1.addr.i2146, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 60), i64** %out2.addr.i2147, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 42), i64** %out3.addr.i2148, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 50), i64** %out4.addr.i2149, align 8
  %7012 = load i64, i64* %a2.addr.i2141, align 8
  %7013 = load i64, i64* %a5.addr.i2144, align 8
  %xor.i2196 = xor i64 %7012, %7013
  store i64 %xor.i2196, i64* %x33CC33CC.i2150, align 8
  %7014 = load i64, i64* %a2.addr.i2141, align 8
  %7015 = load i64, i64* %a6.addr.i2145, align 8
  %or.i2197 = or i64 %7014, %7015
  store i64 %or.i2197, i64* %x3333FFFF.i2151, align 8
  %7016 = load i64, i64* %a1.addr.i2140, align 8
  %7017 = load i64, i64* %x3333FFFF.i2151, align 8
  %and.i2198 = and i64 %7016, %7017
  store i64 %and.i2198, i64* %x11115555.i2152, align 8
  %7018 = load i64, i64* %x33CC33CC.i2150, align 8
  %7019 = load i64, i64* %x11115555.i2152, align 8
  %xor1.i2199 = xor i64 %7018, %7019
  store i64 %xor1.i2199, i64* %x22DD6699.i2153, align 8
  %7020 = load i64, i64* %a6.addr.i2145, align 8
  %7021 = load i64, i64* %x22DD6699.i2153, align 8
  %xor2.i2200 = xor i64 %7020, %7021
  store i64 %xor2.i2200, i64* %x22DD9966.i2154, align 8
  %7022 = load i64, i64* %a5.addr.i2144, align 8
  %7023 = load i64, i64* %x22DD9966.i2154, align 8
  %neg.i2201 = xor i64 %7023, -1
  %and3.i2202 = and i64 %7022, %neg.i2201
  store i64 %and3.i2202, i64* %x00220099.i2155, align 8
  %7024 = load i64, i64* %a1.addr.i2140, align 8
  %7025 = load i64, i64* %x22DD9966.i2154, align 8
  %and4.i2203 = and i64 %7024, %7025
  store i64 %and4.i2203, i64* %x00551144.i2156, align 8
  %7026 = load i64, i64* %a2.addr.i2141, align 8
  %7027 = load i64, i64* %x00551144.i2156, align 8
  %xor5.i2204 = xor i64 %7026, %7027
  store i64 %xor5.i2204, i64* %x33662277.i2157, align 8
  %7028 = load i64, i64* %a1.addr.i2140, align 8
  %7029 = load i64, i64* %a3.addr.i2142, align 8
  %xor6.i2205 = xor i64 %7028, %7029
  store i64 %xor6.i2205, i64* %x5A5A5A5A.i2158, align 8
  %7030 = load i64, i64* %x33662277.i2157, align 8
  %7031 = load i64, i64* %x5A5A5A5A.i2158, align 8
  %or7.i2206 = or i64 %7030, %7031
  store i64 %or7.i2206, i64* %x7B7E7A7F.i2159, align 8
  %7032 = load i64, i64* %x22DD6699.i2153, align 8
  %7033 = load i64, i64* %x7B7E7A7F.i2159, align 8
  %xor8.i2207 = xor i64 %7032, %7033
  store i64 %xor8.i2207, i64* %x59A31CE6.i2160, align 8
  %7034 = load i64, i64* %a3.addr.i2142, align 8
  %7035 = load i64, i64* %x59A31CE6.i2160, align 8
  %and9.i2208 = and i64 %7034, %7035
  store i64 %and9.i2208, i64* %x09030C06.i2161, align 8
  %7036 = load i64, i64* %x09030C06.i2161, align 8
  %7037 = load i64, i64* %a6.addr.i2145, align 8
  %neg10.i2209 = xor i64 %7037, -1
  %and11.i2210 = and i64 %7036, %neg10.i2209
  store i64 %and11.i2210, i64* %x09030000.i2162, align 8
  %7038 = load i64, i64* %x00220099.i2155, align 8
  %7039 = load i64, i64* %x33662277.i2157, align 8
  %or12.i2211 = or i64 %7038, %7039
  store i64 %or12.i2211, i64* %x336622FF.i2163, align 8
  %7040 = load i64, i64* %x09030000.i2162, align 8
  %7041 = load i64, i64* %x336622FF.i2163, align 8
  %xor13.i2212 = xor i64 %7040, %7041
  store i64 %xor13.i2212, i64* %x3A6522FF.i2164, align 8
  %7042 = load i64, i64* %x3A6522FF.i2164, align 8
  %7043 = load i64, i64* %a4.addr.i2143, align 8
  %and14.i2213 = and i64 %7042, %7043
  store i64 %and14.i2213, i64* %x30.i2194, align 8
  %7044 = load i64, i64* %x30.i2194, align 8
  %7045 = load i64, i64* %x59A31CE6.i2160, align 8
  %xor15.i2214 = xor i64 %7044, %7045
  store i64 %xor15.i2214, i64* %x31.i2195, align 8
  %7046 = load i64*, i64** %out4.addr.i2149, align 8
  %7047 = load i64, i64* %7046, align 8
  %7048 = load i64, i64* %x31.i2195, align 8
  %xor16.i2215 = xor i64 %7047, %7048
  %7049 = load i64*, i64** %out4.addr.i2149, align 8
  store i64 %xor16.i2215, i64* %7049, align 8
  %7050 = load i64, i64* %a2.addr.i2141, align 8
  %7051 = load i64, i64* %x7B7E7A7F.i2159, align 8
  %xor17.i2216 = xor i64 %7050, %7051
  store i64 %xor17.i2216, i64* %x484D494C.i2165, align 8
  %7052 = load i64, i64* %a6.addr.i2145, align 8
  %7053 = load i64, i64* %x484D494C.i2165, align 8
  %neg18.i2217 = xor i64 %7053, -1
  %and19.i2218 = and i64 %7052, %neg18.i2217
  store i64 %and19.i2218, i64* %x0000B6B3.i2166, align 8
  %7054 = load i64, i64* %a3.addr.i2142, align 8
  %7055 = load i64, i64* %x0000B6B3.i2166, align 8
  %xor20.i2219 = xor i64 %7054, %7055
  store i64 %xor20.i2219, i64* %x0F0FB9BC.i2167, align 8
  %7056 = load i64, i64* %a5.addr.i2144, align 8
  %7057 = load i64, i64* %x09030C06.i2161, align 8
  %neg21.i2220 = xor i64 %7057, -1
  %and22.i2221 = and i64 %7056, %neg21.i2220
  store i64 %and22.i2221, i64* %x00FC00F9.i2168, align 8
  %7058 = load i64, i64* %x0F0FB9BC.i2167, align 8
  %7059 = load i64, i64* %x00FC00F9.i2168, align 8
  %or23.i2222 = or i64 %7058, %7059
  store i64 %or23.i2222, i64* %x0FFFB9FD.i2169, align 8
  %7060 = load i64, i64* %a1.addr.i2140, align 8
  %7061 = load i64, i64* %x59A31CE6.i2160, align 8
  %or24.i2223 = or i64 %7060, %7061
  store i64 %or24.i2223, i64* %x5DF75DF7.i2170, align 8
  %7062 = load i64, i64* %x336622FF.i2163, align 8
  %7063 = load i64, i64* %x5DF75DF7.i2170, align 8
  %and25.i2224 = and i64 %7062, %7063
  store i64 %and25.i2224, i64* %x116600F7.i2171, align 8
  %7064 = load i64, i64* %x0F0FB9BC.i2167, align 8
  %7065 = load i64, i64* %x116600F7.i2171, align 8
  %xor26.i2225 = xor i64 %7064, %7065
  store i64 %xor26.i2225, i64* %x1E69B94B.i2172, align 8
  %7066 = load i64, i64* %x1E69B94B.i2172, align 8
  %7067 = load i64, i64* %x09030000.i2162, align 8
  %neg27.i2226 = xor i64 %7067, -1
  %and28.i2227 = and i64 %7066, %neg27.i2226
  store i64 %and28.i2227, i64* %x1668B94B.i2173, align 8
  %7068 = load i64, i64* %x00220099.i2155, align 8
  %7069 = load i64, i64* %a4.addr.i2143, align 8
  %or29.i2228 = or i64 %7068, %7069
  store i64 %or29.i2228, i64* %x20.i2192, align 8
  %7070 = load i64, i64* %x20.i2192, align 8
  %7071 = load i64, i64* %x1668B94B.i2173, align 8
  %xor30.i2229 = xor i64 %7070, %7071
  store i64 %xor30.i2229, i64* %x21.i2193, align 8
  %7072 = load i64*, i64** %out3.addr.i2148, align 8
  %7073 = load i64, i64* %7072, align 8
  %7074 = load i64, i64* %x21.i2193, align 8
  %xor31.i2230 = xor i64 %7073, %7074
  %7075 = load i64*, i64** %out3.addr.i2148, align 8
  store i64 %xor31.i2230, i64* %7075, align 8
  %7076 = load i64, i64* %a2.addr.i2141, align 8
  %7077 = load i64, i64* %x5A5A5A5A.i2158, align 8
  %or32.i2231 = or i64 %7076, %7077
  store i64 %or32.i2231, i64* %x7B7B7B7B.i2174, align 8
  %7078 = load i64, i64* %x3A6522FF.i2164, align 8
  %7079 = load i64, i64* %x7B7B7B7B.i2174, align 8
  %xor33.i2232 = xor i64 %7078, %7079
  store i64 %xor33.i2232, i64* %x411E5984.i2175, align 8
  %7080 = load i64, i64* %x11115555.i2152, align 8
  %7081 = load i64, i64* %x0FFFB9FD.i2169, align 8
  %or34.i2233 = or i64 %7080, %7081
  store i64 %or34.i2233, i64* %x1FFFFDFD.i2176, align 8
  %7082 = load i64, i64* %x411E5984.i2175, align 8
  %7083 = load i64, i64* %x1FFFFDFD.i2176, align 8
  %xor35.i2234 = xor i64 %7082, %7083
  store i64 %xor35.i2234, i64* %x5EE1A479.i2177, align 8
  %7084 = load i64, i64* %x22DD6699.i2153, align 8
  %7085 = load i64, i64* %x1E69B94B.i2172, align 8
  %xor36.i2235 = xor i64 %7084, %7085
  store i64 %xor36.i2235, i64* %x3CB4DFD2.i2178, align 8
  %7086 = load i64, i64* %a5.addr.i2144, align 8
  %7087 = load i64, i64* %x3CB4DFD2.i2178, align 8
  %neg37.i2236 = xor i64 %7087, -1
  %and38.i2237 = and i64 %7086, %neg37.i2236
  store i64 %and38.i2237, i64* %x004B002D.i2179, align 8
  %7088 = load i64, i64* %x484D494C.i2165, align 8
  %neg39.i2238 = xor i64 %7088, -1
  store i64 %neg39.i2238, i64* %xB7B2B6B3.i2180, align 8
  %7089 = load i64, i64* %x7B7B7B7B.i2174, align 8
  %7090 = load i64, i64* %xB7B2B6B3.i2180, align 8
  %xor40.i2239 = xor i64 %7089, %7090
  store i64 %xor40.i2239, i64* %xCCC9CDC8.i2181, align 8
  %7091 = load i64, i64* %x004B002D.i2179, align 8
  %7092 = load i64, i64* %xCCC9CDC8.i2181, align 8
  %xor41.i2240 = xor i64 %7091, %7092
  store i64 %xor41.i2240, i64* %xCC82CDE5.i2182, align 8
  %7093 = load i64, i64* %xCC82CDE5.i2182, align 8
  %7094 = load i64, i64* %a4.addr.i2143, align 8
  %neg42.i2241 = xor i64 %7094, -1
  %and43.i2242 = and i64 %7093, %neg42.i2241
  store i64 %and43.i2242, i64* %x10.i2190, align 8
  %7095 = load i64, i64* %x10.i2190, align 8
  %7096 = load i64, i64* %x5EE1A479.i2177, align 8
  %xor44.i2243 = xor i64 %7095, %7096
  store i64 %xor44.i2243, i64* %x11.i2191, align 8
  %7097 = load i64*, i64** %out2.addr.i2147, align 8
  %7098 = load i64, i64* %7097, align 8
  %7099 = load i64, i64* %x11.i2191, align 8
  %xor45.i2244 = xor i64 %7098, %7099
  %7100 = load i64*, i64** %out2.addr.i2147, align 8
  store i64 %xor45.i2244, i64* %7100, align 8
  %7101 = load i64, i64* %a6.addr.i2145, align 8
  %7102 = load i64, i64* %x00551144.i2156, align 8
  %xor46.i2245 = xor i64 %7101, %7102
  store i64 %xor46.i2245, i64* %x0055EEBB.i2183, align 8
  %7103 = load i64, i64* %a1.addr.i2140, align 8
  %7104 = load i64, i64* %x0F0FB9BC.i2167, align 8
  %xor47.i2246 = xor i64 %7103, %7104
  store i64 %xor47.i2246, i64* %x5A5AECE9.i2184, align 8
  %7105 = load i64, i64* %x0055EEBB.i2183, align 8
  %7106 = load i64, i64* %x5A5AECE9.i2184, align 8
  %and48.i2247 = and i64 %7105, %7106
  store i64 %and48.i2247, i64* %x0050ECA9.i2185, align 8
  %7107 = load i64, i64* %x09030C06.i2161, align 8
  %7108 = load i64, i64* %xCCC9CDC8.i2181, align 8
  %xor49.i2248 = xor i64 %7107, %7108
  store i64 %xor49.i2248, i64* %xC5CAC1CE.i2186, align 8
  %7109 = load i64, i64* %x0050ECA9.i2185, align 8
  %7110 = load i64, i64* %xC5CAC1CE.i2186, align 8
  %xor50.i2249 = xor i64 %7109, %7110
  store i64 %xor50.i2249, i64* %xC59A2D67.i2187, align 8
  %7111 = load i64, i64* %x0FFFB9FD.i2169, align 8
  %7112 = load i64, i64* %a4.addr.i2143, align 8
  %neg51.i2250 = xor i64 %7112, -1
  %and52.i2251 = and i64 %7111, %neg51.i2250
  store i64 %and52.i2251, i64* %x00.i2188, align 8
  %7113 = load i64, i64* %x00.i2188, align 8
  %7114 = load i64, i64* %xC59A2D67.i2187, align 8
  %xor53.i2252 = xor i64 %7113, %7114
  store i64 %xor53.i2252, i64* %x01.i2189, align 8
  %7115 = load i64*, i64** %out1.addr.i2146, align 8
  %7116 = load i64, i64* %7115, align 8
  %7117 = load i64, i64* %x01.i2189, align 8
  %xor54.i2253 = xor i64 %7116, %7117
  %7118 = load i64*, i64** %out1.addr.i2146, align 8
  store i64 %xor54.i2253, i64* %7118, align 8
  %7119 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 23), align 8
  %7120 = load i64**, i64*** %k, align 8
  %arrayidx1158 = getelementptr inbounds i64*, i64** %7120, i64 36
  %7121 = load i64*, i64** %arrayidx1158, align 8
  %arrayidx1159 = getelementptr inbounds i64, i64* %7121, i64 0
  %7122 = load i64, i64* %arrayidx1159, align 8
  %xor1160 = xor i64 %7119, %7122
  %7123 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 24), align 8
  %7124 = load i64**, i64*** %k, align 8
  %arrayidx1161 = getelementptr inbounds i64*, i64** %7124, i64 37
  %7125 = load i64*, i64** %arrayidx1161, align 8
  %arrayidx1162 = getelementptr inbounds i64, i64* %7125, i64 0
  %7126 = load i64, i64* %arrayidx1162, align 8
  %xor1163 = xor i64 %7123, %7126
  %7127 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 25), align 8
  %7128 = load i64**, i64*** %k, align 8
  %arrayidx1164 = getelementptr inbounds i64*, i64** %7128, i64 38
  %7129 = load i64*, i64** %arrayidx1164, align 8
  %arrayidx1165 = getelementptr inbounds i64, i64* %7129, i64 0
  %7130 = load i64, i64* %arrayidx1165, align 8
  %xor1166 = xor i64 %7127, %7130
  %7131 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 26), align 8
  %7132 = load i64**, i64*** %k, align 8
  %arrayidx1167 = getelementptr inbounds i64*, i64** %7132, i64 39
  %7133 = load i64*, i64** %arrayidx1167, align 8
  %arrayidx1168 = getelementptr inbounds i64, i64* %7133, i64 0
  %7134 = load i64, i64* %arrayidx1168, align 8
  %xor1169 = xor i64 %7131, %7134
  %7135 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 27), align 8
  %7136 = load i64**, i64*** %k, align 8
  %arrayidx1170 = getelementptr inbounds i64*, i64** %7136, i64 40
  %7137 = load i64*, i64** %arrayidx1170, align 8
  %arrayidx1171 = getelementptr inbounds i64, i64* %7137, i64 0
  %7138 = load i64, i64* %arrayidx1171, align 8
  %xor1172 = xor i64 %7135, %7138
  %7139 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 28), align 8
  %7140 = load i64**, i64*** %k, align 8
  %arrayidx1173 = getelementptr inbounds i64*, i64** %7140, i64 41
  %7141 = load i64*, i64** %arrayidx1173, align 8
  %arrayidx1174 = getelementptr inbounds i64, i64* %7141, i64 0
  %7142 = load i64, i64* %arrayidx1174, align 8
  %xor1175 = xor i64 %7139, %7142
  store i64 %xor1160, i64* %a1.addr.i2027, align 8
  store i64 %xor1163, i64* %a2.addr.i2028, align 8
  store i64 %xor1166, i64* %a3.addr.i2029, align 8
  store i64 %xor1169, i64* %a4.addr.i2030, align 8
  store i64 %xor1172, i64* %a5.addr.i2031, align 8
  store i64 %xor1175, i64* %a6.addr.i2032, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 63), i64** %out1.addr.i2033, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 43), i64** %out2.addr.i2034, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 53), i64** %out3.addr.i2035, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 38), i64** %out4.addr.i2036, align 8
  %7143 = load i64, i64* %a4.addr.i2030, align 8
  %7144 = load i64, i64* %a5.addr.i2031, align 8
  %xor.i2083 = xor i64 %7143, %7144
  store i64 %xor.i2083, i64* %x0FF00FF0.i2037, align 8
  %7145 = load i64, i64* %a3.addr.i2029, align 8
  %7146 = load i64, i64* %x0FF00FF0.i2037, align 8
  %xor1.i2084 = xor i64 %7145, %7146
  store i64 %xor1.i2084, i64* %x3CC33CC3.i2038, align 8
  %7147 = load i64, i64* %a6.addr.i2032, align 8
  %7148 = load i64, i64* %x3CC33CC3.i2038, align 8
  %and.i2085 = and i64 %7147, %7148
  store i64 %and.i2085, i64* %x00003CC3.i2039, align 8
  %7149 = load i64, i64* %a4.addr.i2030, align 8
  %7150 = load i64, i64* %x0FF00FF0.i2037, align 8
  %and2.i2086 = and i64 %7149, %7150
  store i64 %and2.i2086, i64* %x0F000F00.i2040, align 8
  %7151 = load i64, i64* %a2.addr.i2028, align 8
  %7152 = load i64, i64* %x0F000F00.i2040, align 8
  %xor3.i2087 = xor i64 %7151, %7152
  store i64 %xor3.i2087, i64* %x5A555A55.i2041, align 8
  %7153 = load i64, i64* %x00003CC3.i2039, align 8
  %7154 = load i64, i64* %x5A555A55.i2041, align 8
  %and4.i2088 = and i64 %7153, %7154
  store i64 %and4.i2088, i64* %x00001841.i2042, align 8
  %7155 = load i64, i64* %a6.addr.i2032, align 8
  %7156 = load i64, i64* %x0F000F00.i2040, align 8
  %and5.i2089 = and i64 %7155, %7156
  store i64 %and5.i2089, i64* %x00000F00.i2043, align 8
  %7157 = load i64, i64* %a3.addr.i2029, align 8
  %7158 = load i64, i64* %x00000F00.i2043, align 8
  %xor6.i2090 = xor i64 %7157, %7158
  store i64 %xor6.i2090, i64* %x33333C33.i2044, align 8
  %7159 = load i64, i64* %x5A555A55.i2041, align 8
  %7160 = load i64, i64* %x33333C33.i2044, align 8
  %or.i2091 = or i64 %7159, %7160
  store i64 %or.i2091, i64* %x7B777E77.i2045, align 8
  %7161 = load i64, i64* %a6.addr.i2032, align 8
  %7162 = load i64, i64* %x0FF00FF0.i2037, align 8
  %xor7.i2092 = xor i64 %7161, %7162
  store i64 %xor7.i2092, i64* %x0FF0F00F.i2046, align 8
  %7163 = load i64, i64* %x7B777E77.i2045, align 8
  %7164 = load i64, i64* %x0FF0F00F.i2046, align 8
  %xor8.i2093 = xor i64 %7163, %7164
  store i64 %xor8.i2093, i64* %x74878E78.i2047, align 8
  %7165 = load i64, i64* %a1.addr.i2027, align 8
  %7166 = load i64, i64* %x00001841.i2042, align 8
  %neg.i2094 = xor i64 %7166, -1
  %and9.i2095 = and i64 %7165, %neg.i2094
  store i64 %and9.i2095, i64* %x30.i2081, align 8
  %7167 = load i64, i64* %x30.i2081, align 8
  %7168 = load i64, i64* %x74878E78.i2047, align 8
  %xor10.i2096 = xor i64 %7167, %7168
  store i64 %xor10.i2096, i64* %x31.i2082, align 8
  %7169 = load i64*, i64** %out4.addr.i2036, align 8
  %7170 = load i64, i64* %7169, align 8
  %7171 = load i64, i64* %x31.i2082, align 8
  %xor11.i2097 = xor i64 %7170, %7171
  %7172 = load i64*, i64** %out4.addr.i2036, align 8
  store i64 %xor11.i2097, i64* %7172, align 8
  %7173 = load i64, i64* %a5.addr.i2031, align 8
  %7174 = load i64, i64* %x3CC33CC3.i2038, align 8
  %neg12.i2098 = xor i64 %7174, -1
  %and13.i2099 = and i64 %7173, %neg12.i2098
  store i64 %and13.i2099, i64* %x003C003C.i2048, align 8
  %7175 = load i64, i64* %x5A555A55.i2041, align 8
  %7176 = load i64, i64* %x003C003C.i2048, align 8
  %or14.i2100 = or i64 %7175, %7176
  store i64 %or14.i2100, i64* %x5A7D5A7D.i2049, align 8
  %7177 = load i64, i64* %x00003CC3.i2039, align 8
  %7178 = load i64, i64* %x33333C33.i2044, align 8
  %xor15.i2101 = xor i64 %7177, %7178
  store i64 %xor15.i2101, i64* %x333300F0.i2050, align 8
  %7179 = load i64, i64* %x5A7D5A7D.i2049, align 8
  %7180 = load i64, i64* %x333300F0.i2050, align 8
  %xor16.i2102 = xor i64 %7179, %7180
  store i64 %xor16.i2102, i64* %x694E5A8D.i2051, align 8
  %7181 = load i64, i64* %x00003CC3.i2039, align 8
  %7182 = load i64, i64* %x0FF0F00F.i2046, align 8
  %xor17.i2103 = xor i64 %7181, %7182
  store i64 %xor17.i2103, i64* %x0FF0CCCC.i2052, align 8
  %7183 = load i64, i64* %a4.addr.i2030, align 8
  %7184 = load i64, i64* %x0FF0CCCC.i2052, align 8
  %neg18.i2104 = xor i64 %7184, -1
  %and19.i2105 = and i64 %7183, %neg18.i2104
  store i64 %and19.i2105, i64* %x000F0303.i2053, align 8
  %7185 = load i64, i64* %x5A555A55.i2041, align 8
  %7186 = load i64, i64* %x000F0303.i2053, align 8
  %neg20.i2106 = xor i64 %7186, -1
  %and21.i2107 = and i64 %7185, %neg20.i2106
  store i64 %and21.i2107, i64* %x5A505854.i2054, align 8
  %7187 = load i64, i64* %a5.addr.i2031, align 8
  %7188 = load i64, i64* %x333300F0.i2050, align 8
  %xor22.i2108 = xor i64 %7187, %7188
  store i64 %xor22.i2108, i64* %x33CC000F.i2055, align 8
  %7189 = load i64, i64* %x5A505854.i2054, align 8
  %7190 = load i64, i64* %x33CC000F.i2055, align 8
  %xor23.i2109 = xor i64 %7189, %7190
  store i64 %xor23.i2109, i64* %x699C585B.i2056, align 8
  %7191 = load i64, i64* %x0F000F00.i2040, align 8
  %7192 = load i64, i64* %x74878E78.i2047, align 8
  %or24.i2110 = or i64 %7191, %7192
  store i64 %or24.i2110, i64* %x7F878F78.i2057, align 8
  %7193 = load i64, i64* %a3.addr.i2029, align 8
  %7194 = load i64, i64* %x699C585B.i2056, align 8
  %and25.i2111 = and i64 %7193, %7194
  store i64 %and25.i2111, i64* %x21101013.i2058, align 8
  %7195 = load i64, i64* %x7F878F78.i2057, align 8
  %7196 = load i64, i64* %x21101013.i2058, align 8
  %or26.i2112 = or i64 %7195, %7196
  store i64 %or26.i2112, i64* %x7F979F7B.i2059, align 8
  %7197 = load i64, i64* %x3CC33CC3.i2038, align 8
  %7198 = load i64, i64* %x0FF0F00F.i2046, align 8
  %neg27.i2113 = xor i64 %7198, -1
  %and28.i2114 = and i64 %7197, %neg27.i2113
  store i64 %and28.i2114, i64* %x30030CC0.i2060, align 8
  %7199 = load i64, i64* %x7F979F7B.i2059, align 8
  %7200 = load i64, i64* %x30030CC0.i2060, align 8
  %xor29.i2115 = xor i64 %7199, %7200
  store i64 %xor29.i2115, i64* %x4F9493BB.i2061, align 8
  %7201 = load i64, i64* %x4F9493BB.i2061, align 8
  %7202 = load i64, i64* %a1.addr.i2027, align 8
  %neg30.i2116 = xor i64 %7202, -1
  %and31.i2117 = and i64 %7201, %neg30.i2116
  store i64 %and31.i2117, i64* %x00.i2075, align 8
  %7203 = load i64, i64* %x00.i2075, align 8
  %7204 = load i64, i64* %x694E5A8D.i2051, align 8
  %xor32.i2118 = xor i64 %7203, %7204
  store i64 %xor32.i2118, i64* %x01.i2076, align 8
  %7205 = load i64*, i64** %out1.addr.i2033, align 8
  %7206 = load i64, i64* %7205, align 8
  %7207 = load i64, i64* %x01.i2076, align 8
  %xor33.i2119 = xor i64 %7206, %7207
  %7208 = load i64*, i64** %out1.addr.i2033, align 8
  store i64 %xor33.i2119, i64* %7208, align 8
  %7209 = load i64, i64* %x699C585B.i2056, align 8
  %7210 = load i64, i64* %x4F9493BB.i2061, align 8
  %or34.i2120 = or i64 %7209, %7210
  store i64 %or34.i2120, i64* %x6F9CDBFB.i2062, align 8
  %7211 = load i64, i64* %a6.addr.i2032, align 8
  %7212 = load i64, i64* %x6F9CDBFB.i2062, align 8
  %and35.i2121 = and i64 %7211, %7212
  store i64 %and35.i2121, i64* %x0000DBFB.i2063, align 8
  %7213 = load i64, i64* %a2.addr.i2028, align 8
  %7214 = load i64, i64* %x0000DBFB.i2063, align 8
  %and36.i2122 = and i64 %7213, %7214
  store i64 %and36.i2122, i64* %x00005151.i2064, align 8
  %7215 = load i64, i64* %x694E5A8D.i2051, align 8
  %7216 = load i64, i64* %x4F9493BB.i2061, align 8
  %xor37.i2123 = xor i64 %7215, %7216
  store i64 %xor37.i2123, i64* %x26DAC936.i2065, align 8
  %7217 = load i64, i64* %x00005151.i2064, align 8
  %7218 = load i64, i64* %x26DAC936.i2065, align 8
  %xor38.i2124 = xor i64 %7217, %7218
  store i64 %xor38.i2124, i64* %x26DA9867.i2066, align 8
  %7219 = load i64, i64* %a5.addr.i2031, align 8
  %7220 = load i64, i64* %x21101013.i2058, align 8
  %or39.i2125 = or i64 %7219, %7220
  store i64 %or39.i2125, i64* %x21FF10FF.i2067, align 8
  %7221 = load i64, i64* %x0000DBFB.i2063, align 8
  %7222 = load i64, i64* %x21FF10FF.i2067, align 8
  %xor40.i2126 = xor i64 %7221, %7222
  store i64 %xor40.i2126, i64* %x21FFCB04.i2068, align 8
  %7223 = load i64, i64* %a5.addr.i2031, align 8
  %7224 = load i64, i64* %x26DAC936.i2065, align 8
  %xor41.i2127 = xor i64 %7223, %7224
  store i64 %xor41.i2127, i64* %x2625C9C9.i2069, align 8
  %7225 = load i64, i64* %x21FFCB04.i2068, align 8
  %7226 = load i64, i64* %x2625C9C9.i2069, align 8
  %or42.i2128 = or i64 %7225, %7226
  store i64 %or42.i2128, i64* %x27FFCBCD.i2070, align 8
  %7227 = load i64, i64* %x27FFCBCD.i2070, align 8
  %7228 = load i64, i64* %a1.addr.i2027, align 8
  %and43.i2129 = and i64 %7227, %7228
  store i64 %and43.i2129, i64* %x20.i2079, align 8
  %7229 = load i64, i64* %x20.i2079, align 8
  %7230 = load i64, i64* %x699C585B.i2056, align 8
  %xor44.i2130 = xor i64 %7229, %7230
  store i64 %xor44.i2130, i64* %x21.i2080, align 8
  %7231 = load i64*, i64** %out3.addr.i2035, align 8
  %7232 = load i64, i64* %7231, align 8
  %7233 = load i64, i64* %x21.i2080, align 8
  %xor45.i2131 = xor i64 %7232, %7233
  %7234 = load i64*, i64** %out3.addr.i2035, align 8
  store i64 %xor45.i2131, i64* %7234, align 8
  %7235 = load i64, i64* %x0000DBFB.i2063, align 8
  %7236 = load i64, i64* %x27FFCBCD.i2070, align 8
  %xor46.i2132 = xor i64 %7235, %7236
  store i64 %xor46.i2132, i64* %x27FF1036.i2071, align 8
  %7237 = load i64, i64* %x003C003C.i2048, align 8
  %7238 = load i64, i64* %x27FF1036.i2071, align 8
  %or47.i2133 = or i64 %7237, %7238
  store i64 %or47.i2133, i64* %x27FF103E.i2072, align 8
  %7239 = load i64, i64* %x4F9493BB.i2061, align 8
  %neg48.i2134 = xor i64 %7239, -1
  store i64 %neg48.i2134, i64* %xB06B6C44.i2073, align 8
  %7240 = load i64, i64* %x27FF103E.i2072, align 8
  %7241 = load i64, i64* %xB06B6C44.i2073, align 8
  %xor49.i2135 = xor i64 %7240, %7241
  store i64 %xor49.i2135, i64* %x97947C7A.i2074, align 8
  %7242 = load i64, i64* %x97947C7A.i2074, align 8
  %7243 = load i64, i64* %a1.addr.i2027, align 8
  %neg50.i2136 = xor i64 %7243, -1
  %and51.i2137 = and i64 %7242, %neg50.i2136
  store i64 %and51.i2137, i64* %x10.i2077, align 8
  %7244 = load i64, i64* %x10.i2077, align 8
  %7245 = load i64, i64* %x26DA9867.i2066, align 8
  %xor52.i2138 = xor i64 %7244, %7245
  store i64 %xor52.i2138, i64* %x11.i2078, align 8
  %7246 = load i64*, i64** %out2.addr.i2034, align 8
  %7247 = load i64, i64* %7246, align 8
  %7248 = load i64, i64* %x11.i2078, align 8
  %xor53.i2139 = xor i64 %7247, %7248
  %7249 = load i64*, i64** %out2.addr.i2034, align 8
  store i64 %xor53.i2139, i64* %7249, align 8
  %7250 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 27), align 8
  %7251 = load i64**, i64*** %k, align 8
  %arrayidx1176 = getelementptr inbounds i64*, i64** %7251, i64 42
  %7252 = load i64*, i64** %arrayidx1176, align 8
  %arrayidx1177 = getelementptr inbounds i64, i64* %7252, i64 0
  %7253 = load i64, i64* %arrayidx1177, align 8
  %xor1178 = xor i64 %7250, %7253
  %7254 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 28), align 8
  %7255 = load i64**, i64*** %k, align 8
  %arrayidx1179 = getelementptr inbounds i64*, i64** %7255, i64 43
  %7256 = load i64*, i64** %arrayidx1179, align 8
  %arrayidx1180 = getelementptr inbounds i64, i64* %7256, i64 0
  %7257 = load i64, i64* %arrayidx1180, align 8
  %xor1181 = xor i64 %7254, %7257
  %7258 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 29), align 8
  %7259 = load i64**, i64*** %k, align 8
  %arrayidx1182 = getelementptr inbounds i64*, i64** %7259, i64 44
  %7260 = load i64*, i64** %arrayidx1182, align 8
  %arrayidx1183 = getelementptr inbounds i64, i64* %7260, i64 0
  %7261 = load i64, i64* %arrayidx1183, align 8
  %xor1184 = xor i64 %7258, %7261
  %7262 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 30), align 8
  %7263 = load i64**, i64*** %k, align 8
  %arrayidx1185 = getelementptr inbounds i64*, i64** %7263, i64 45
  %7264 = load i64*, i64** %arrayidx1185, align 8
  %arrayidx1186 = getelementptr inbounds i64, i64* %7264, i64 0
  %7265 = load i64, i64* %arrayidx1186, align 8
  %xor1187 = xor i64 %7262, %7265
  %7266 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 31), align 8
  %7267 = load i64**, i64*** %k, align 8
  %arrayidx1188 = getelementptr inbounds i64*, i64** %7267, i64 46
  %7268 = load i64*, i64** %arrayidx1188, align 8
  %arrayidx1189 = getelementptr inbounds i64, i64* %7268, i64 0
  %7269 = load i64, i64* %arrayidx1189, align 8
  %xor1190 = xor i64 %7266, %7269
  %7270 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 0), align 8
  %7271 = load i64**, i64*** %k, align 8
  %arrayidx1191 = getelementptr inbounds i64*, i64** %7271, i64 47
  %7272 = load i64*, i64** %arrayidx1191, align 8
  %arrayidx1192 = getelementptr inbounds i64, i64* %7272, i64 0
  %7273 = load i64, i64* %arrayidx1192, align 8
  %xor1193 = xor i64 %7270, %7273
  store i64 %xor1178, i64* %a1.addr.i1924, align 8
  store i64 %xor1181, i64* %a2.addr.i1925, align 8
  store i64 %xor1184, i64* %a3.addr.i1926, align 8
  store i64 %xor1187, i64* %a4.addr.i1927, align 8
  store i64 %xor1190, i64* %a5.addr.i1928, align 8
  store i64 %xor1193, i64* %a6.addr.i1929, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 36), i64** %out1.addr.i1930, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 58), i64** %out2.addr.i1931, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 46), i64** %out3.addr.i1932, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 52), i64** %out4.addr.i1933, align 8
  %7274 = load i64, i64* %a3.addr.i1926, align 8
  %7275 = load i64, i64* %a2.addr.i1925, align 8
  %neg.i1975 = xor i64 %7275, -1
  %and.i1976 = and i64 %7274, %neg.i1975
  store i64 %and.i1976, i64* %x0C0C0C0C.i1934, align 8
  %7276 = load i64, i64* %a5.addr.i1928, align 8
  %7277 = load i64, i64* %a3.addr.i1926, align 8
  %neg1.i1977 = xor i64 %7277, -1
  %and2.i1978 = and i64 %7276, %neg1.i1977
  store i64 %and2.i1978, i64* %x0000F0F0.i1935, align 8
  %7278 = load i64, i64* %a4.addr.i1927, align 8
  %7279 = load i64, i64* %x0000F0F0.i1935, align 8
  %xor.i1979 = xor i64 %7278, %7279
  store i64 %xor.i1979, i64* %x00FFF00F.i1936, align 8
  %7280 = load i64, i64* %a1.addr.i1924, align 8
  %7281 = load i64, i64* %x00FFF00F.i1936, align 8
  %and3.i1980 = and i64 %7280, %7281
  store i64 %and3.i1980, i64* %x00555005.i1937, align 8
  %7282 = load i64, i64* %x00555005.i1937, align 8
  %7283 = load i64, i64* %x0C0C0C0C.i1934, align 8
  %neg4.i1981 = xor i64 %7283, -1
  %and5.i1982 = and i64 %7282, %neg4.i1981
  store i64 %and5.i1982, i64* %x00515001.i1938, align 8
  %7284 = load i64, i64* %a2.addr.i1925, align 8
  %7285 = load i64, i64* %x00FFF00F.i1936, align 8
  %neg6.i1983 = xor i64 %7285, -1
  %and7.i1984 = and i64 %7284, %neg6.i1983
  store i64 %and7.i1984, i64* %x33000330.i1939, align 8
  %7286 = load i64, i64* %a1.addr.i1924, align 8
  %7287 = load i64, i64* %x33000330.i1939, align 8
  %or.i1985 = or i64 %7286, %7287
  store i64 %or.i1985, i64* %x77555775.i1940, align 8
  %7288 = load i64, i64* %a2.addr.i1925, align 8
  %7289 = load i64, i64* %a3.addr.i1926, align 8
  %neg8.i1986 = xor i64 %7289, -1
  %and9.i1987 = and i64 %7288, %neg8.i1986
  store i64 %and9.i1987, i64* %x30303030.i1941, align 8
  %7290 = load i64, i64* %a5.addr.i1928, align 8
  %7291 = load i64, i64* %x30303030.i1941, align 8
  %xor10.i1988 = xor i64 %7290, %7291
  store i64 %xor10.i1988, i64* %x3030CFCF.i1942, align 8
  %7292 = load i64, i64* %x77555775.i1940, align 8
  %7293 = load i64, i64* %x3030CFCF.i1942, align 8
  %and11.i1989 = and i64 %7292, %7293
  store i64 %and11.i1989, i64* %x30104745.i1943, align 8
  %7294 = load i64, i64* %x00555005.i1937, align 8
  %7295 = load i64, i64* %x30104745.i1943, align 8
  %or12.i1990 = or i64 %7294, %7295
  store i64 %or12.i1990, i64* %x30555745.i1944, align 8
  %7296 = load i64, i64* %x00FFF00F.i1936, align 8
  %neg13.i1991 = xor i64 %7296, -1
  store i64 %neg13.i1991, i64* %xFF000FF0.i1945, align 8
  %7297 = load i64, i64* %x30104745.i1943, align 8
  %7298 = load i64, i64* %xFF000FF0.i1945, align 8
  %xor14.i1992 = xor i64 %7297, %7298
  store i64 %xor14.i1992, i64* %xCF1048B5.i1946, align 8
  %7299 = load i64, i64* %a3.addr.i1926, align 8
  %7300 = load i64, i64* %x77555775.i1940, align 8
  %neg15.i1993 = xor i64 %7300, -1
  %and16.i1994 = and i64 %7299, %neg15.i1993
  store i64 %and16.i1994, i64* %x080A080A.i1947, align 8
  %7301 = load i64, i64* %xCF1048B5.i1946, align 8
  %7302 = load i64, i64* %x080A080A.i1947, align 8
  %xor17.i1995 = xor i64 %7301, %7302
  store i64 %xor17.i1995, i64* %xC71A40BF.i1948, align 8
  %7303 = load i64, i64* %x0C0C0C0C.i1934, align 8
  %7304 = load i64, i64* %xC71A40BF.i1948, align 8
  %xor18.i1996 = xor i64 %7303, %7304
  store i64 %xor18.i1996, i64* %xCB164CB3.i1949, align 8
  %7305 = load i64, i64* %x00515001.i1938, align 8
  %7306 = load i64, i64* %a6.addr.i1929, align 8
  %or19.i1997 = or i64 %7305, %7306
  store i64 %or19.i1997, i64* %x10.i1969, align 8
  %7307 = load i64, i64* %x10.i1969, align 8
  %7308 = load i64, i64* %xCB164CB3.i1949, align 8
  %xor20.i1998 = xor i64 %7307, %7308
  store i64 %xor20.i1998, i64* %x11.i1970, align 8
  %7309 = load i64*, i64** %out2.addr.i1931, align 8
  %7310 = load i64, i64* %7309, align 8
  %7311 = load i64, i64* %x11.i1970, align 8
  %xor21.i1999 = xor i64 %7310, %7311
  %7312 = load i64*, i64** %out2.addr.i1931, align 8
  store i64 %xor21.i1999, i64* %7312, align 8
  %7313 = load i64, i64* %a1.addr.i1924, align 8
  %7314 = load i64, i64* %xCB164CB3.i1949, align 8
  %xor22.i2000 = xor i64 %7313, %7314
  store i64 %xor22.i2000, i64* %x9E4319E6.i1950, align 8
  %7315 = load i64, i64* %a5.addr.i1928, align 8
  %7316 = load i64, i64* %x9E4319E6.i1950, align 8
  %and23.i2001 = and i64 %7315, %7316
  store i64 %and23.i2001, i64* %x000019E6.i1951, align 8
  %7317 = load i64, i64* %a2.addr.i1925, align 8
  %7318 = load i64, i64* %xC71A40BF.i1948, align 8
  %xor24.i2002 = xor i64 %7317, %7318
  store i64 %xor24.i2002, i64* %xF429738C.i1952, align 8
  %7319 = load i64, i64* %x000019E6.i1951, align 8
  %7320 = load i64, i64* %xF429738C.i1952, align 8
  %xor25.i2003 = xor i64 %7319, %7320
  store i64 %xor25.i2003, i64* %xF4296A6A.i1953, align 8
  %7321 = load i64, i64* %x33000330.i1939, align 8
  %7322 = load i64, i64* %xF4296A6A.i1953, align 8
  %xor26.i2004 = xor i64 %7321, %7322
  store i64 %xor26.i2004, i64* %xC729695A.i1954, align 8
  %7323 = load i64, i64* %x30555745.i1944, align 8
  %7324 = load i64, i64* %xF4296A6A.i1953, align 8
  %xor27.i2005 = xor i64 %7323, %7324
  store i64 %xor27.i2005, i64* %xC47C3D2F.i1955, align 8
  %7325 = load i64, i64* %a2.addr.i1925, align 8
  %7326 = load i64, i64* %xC47C3D2F.i1955, align 8
  %or28.i2006 = or i64 %7325, %7326
  store i64 %or28.i2006, i64* %xF77F3F3F.i1956, align 8
  %7327 = load i64, i64* %a5.addr.i1928, align 8
  %7328 = load i64, i64* %x9E4319E6.i1950, align 8
  %xor29.i2007 = xor i64 %7327, %7328
  store i64 %xor29.i2007, i64* %x9E43E619.i1957, align 8
  %7329 = load i64, i64* %xF77F3F3F.i1956, align 8
  %7330 = load i64, i64* %x9E43E619.i1957, align 8
  %xor30.i2008 = xor i64 %7329, %7330
  store i64 %xor30.i2008, i64* %x693CD926.i1958, align 8
  %7331 = load i64, i64* %x30555745.i1944, align 8
  %7332 = load i64, i64* %a6.addr.i1929, align 8
  %and31.i2009 = and i64 %7331, %7332
  store i64 %and31.i2009, i64* %x20.i1971, align 8
  %7333 = load i64, i64* %x20.i1971, align 8
  %7334 = load i64, i64* %x693CD926.i1958, align 8
  %xor32.i2010 = xor i64 %7333, %7334
  store i64 %xor32.i2010, i64* %x21.i1972, align 8
  %7335 = load i64*, i64** %out3.addr.i1932, align 8
  %7336 = load i64, i64* %7335, align 8
  %7337 = load i64, i64* %x21.i1972, align 8
  %xor33.i2011 = xor i64 %7336, %7337
  %7338 = load i64*, i64** %out3.addr.i1932, align 8
  store i64 %xor33.i2011, i64* %7338, align 8
  %7339 = load i64, i64* %x3030CFCF.i1942, align 8
  %7340 = load i64, i64* %xC729695A.i1954, align 8
  %xor34.i2012 = xor i64 %7339, %7340
  store i64 %xor34.i2012, i64* %xF719A695.i1959, align 8
  %7341 = load i64, i64* %a4.addr.i1927, align 8
  %7342 = load i64, i64* %xF429738C.i1952, align 8
  %or35.i2013 = or i64 %7341, %7342
  store i64 %or35.i2013, i64* %xF4FF73FF.i1960, align 8
  %7343 = load i64, i64* %xF719A695.i1959, align 8
  %7344 = load i64, i64* %xF4FF73FF.i1960, align 8
  %xor36.i2014 = xor i64 %7343, %7344
  store i64 %xor36.i2014, i64* %x03E6D56A.i1961, align 8
  %7345 = load i64, i64* %a1.addr.i1924, align 8
  %7346 = load i64, i64* %x03E6D56A.i1961, align 8
  %xor37.i2015 = xor i64 %7345, %7346
  store i64 %xor37.i2015, i64* %x56B3803F.i1962, align 8
  %7347 = load i64, i64* %x56B3803F.i1962, align 8
  %7348 = load i64, i64* %a6.addr.i1929, align 8
  %and38.i2016 = and i64 %7347, %7348
  store i64 %and38.i2016, i64* %x30.i1973, align 8
  %7349 = load i64, i64* %x30.i1973, align 8
  %7350 = load i64, i64* %xC729695A.i1954, align 8
  %xor39.i2017 = xor i64 %7349, %7350
  store i64 %xor39.i2017, i64* %x31.i1974, align 8
  %7351 = load i64*, i64** %out4.addr.i1933, align 8
  %7352 = load i64, i64* %7351, align 8
  %7353 = load i64, i64* %x31.i1974, align 8
  %xor40.i2018 = xor i64 %7352, %7353
  %7354 = load i64*, i64** %out4.addr.i1933, align 8
  store i64 %xor40.i2018, i64* %7354, align 8
  %7355 = load i64, i64* %xF719A695.i1959, align 8
  %7356 = load i64, i64* %a4.addr.i1927, align 8
  %neg41.i2019 = xor i64 %7356, -1
  %and42.i2020 = and i64 %7355, %neg41.i2019
  store i64 %and42.i2020, i64* %xF700A600.i1963, align 8
  %7357 = load i64, i64* %x693CD926.i1958, align 8
  %7358 = load i64, i64* %xF700A600.i1963, align 8
  %and43.i2021 = and i64 %7357, %7358
  store i64 %and43.i2021, i64* %x61008000.i1964, align 8
  %7359 = load i64, i64* %x00515001.i1938, align 8
  %7360 = load i64, i64* %x03E6D56A.i1961, align 8
  %xor44.i2022 = xor i64 %7359, %7360
  store i64 %xor44.i2022, i64* %x03B7856B.i1965, align 8
  %7361 = load i64, i64* %x61008000.i1964, align 8
  %7362 = load i64, i64* %x03B7856B.i1965, align 8
  %xor45.i2023 = xor i64 %7361, %7362
  store i64 %xor45.i2023, i64* %x62B7056B.i1966, align 8
  %7363 = load i64, i64* %x62B7056B.i1966, align 8
  %7364 = load i64, i64* %a6.addr.i1929, align 8
  %or46.i2024 = or i64 %7363, %7364
  store i64 %or46.i2024, i64* %x00.i1967, align 8
  %7365 = load i64, i64* %x00.i1967, align 8
  %7366 = load i64, i64* %xC729695A.i1954, align 8
  %xor47.i2025 = xor i64 %7365, %7366
  store i64 %xor47.i2025, i64* %x01.i1968, align 8
  %7367 = load i64*, i64** %out1.addr.i1930, align 8
  %7368 = load i64, i64* %7367, align 8
  %7369 = load i64, i64* %x01.i1968, align 8
  %xor48.i2026 = xor i64 %7368, %7369
  %7370 = load i64*, i64** %out1.addr.i1930, align 8
  store i64 %xor48.i2026, i64* %7370, align 8
  %7371 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 48), align 8
  %arrayidx1194 = getelementptr inbounds i64, i64* %7371, i64 0
  %7372 = load i64, i64* %arrayidx1194, align 8
  %7373 = load i64**, i64*** %k, align 8
  %arrayidx1195 = getelementptr inbounds i64*, i64** %7373, i64 48
  %7374 = load i64*, i64** %arrayidx1195, align 8
  %arrayidx1196 = getelementptr inbounds i64, i64* %7374, i64 0
  %7375 = load i64, i64* %arrayidx1196, align 8
  %xor1197 = xor i64 %7372, %7375
  %7376 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 49), align 8
  %arrayidx1198 = getelementptr inbounds i64, i64* %7376, i64 0
  %7377 = load i64, i64* %arrayidx1198, align 8
  %7378 = load i64**, i64*** %k, align 8
  %arrayidx1199 = getelementptr inbounds i64*, i64** %7378, i64 49
  %7379 = load i64*, i64** %arrayidx1199, align 8
  %arrayidx1200 = getelementptr inbounds i64, i64* %7379, i64 0
  %7380 = load i64, i64* %arrayidx1200, align 8
  %xor1201 = xor i64 %7377, %7380
  %7381 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 50), align 8
  %arrayidx1202 = getelementptr inbounds i64, i64* %7381, i64 0
  %7382 = load i64, i64* %arrayidx1202, align 8
  %7383 = load i64**, i64*** %k, align 8
  %arrayidx1203 = getelementptr inbounds i64*, i64** %7383, i64 50
  %7384 = load i64*, i64** %arrayidx1203, align 8
  %arrayidx1204 = getelementptr inbounds i64, i64* %7384, i64 0
  %7385 = load i64, i64* %arrayidx1204, align 8
  %xor1205 = xor i64 %7382, %7385
  %7386 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 51), align 8
  %arrayidx1206 = getelementptr inbounds i64, i64* %7386, i64 0
  %7387 = load i64, i64* %arrayidx1206, align 8
  %7388 = load i64**, i64*** %k, align 8
  %arrayidx1207 = getelementptr inbounds i64*, i64** %7388, i64 51
  %7389 = load i64*, i64** %arrayidx1207, align 8
  %arrayidx1208 = getelementptr inbounds i64, i64* %7389, i64 0
  %7390 = load i64, i64* %arrayidx1208, align 8
  %xor1209 = xor i64 %7387, %7390
  %7391 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 52), align 8
  %arrayidx1210 = getelementptr inbounds i64, i64* %7391, i64 0
  %7392 = load i64, i64* %arrayidx1210, align 8
  %7393 = load i64**, i64*** %k, align 8
  %arrayidx1211 = getelementptr inbounds i64*, i64** %7393, i64 52
  %7394 = load i64*, i64** %arrayidx1211, align 8
  %arrayidx1212 = getelementptr inbounds i64, i64* %7394, i64 0
  %7395 = load i64, i64* %arrayidx1212, align 8
  %xor1213 = xor i64 %7392, %7395
  %7396 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 53), align 8
  %arrayidx1214 = getelementptr inbounds i64, i64* %7396, i64 0
  %7397 = load i64, i64* %arrayidx1214, align 8
  %7398 = load i64**, i64*** %k, align 8
  %arrayidx1215 = getelementptr inbounds i64*, i64** %7398, i64 53
  %7399 = load i64*, i64** %arrayidx1215, align 8
  %arrayidx1216 = getelementptr inbounds i64, i64* %7399, i64 0
  %7400 = load i64, i64* %arrayidx1216, align 8
  %xor1217 = xor i64 %7397, %7400
  store i64 %xor1197, i64* %a1.addr.i1801, align 8
  store i64 %xor1201, i64* %a2.addr.i1802, align 8
  store i64 %xor1205, i64* %a3.addr.i1803, align 8
  store i64 %xor1209, i64* %a4.addr.i1804, align 8
  store i64 %xor1213, i64* %a5.addr.i1805, align 8
  store i64 %xor1217, i64* %a6.addr.i1806, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 8), i64** %out1.addr.i1807, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 16), i64** %out2.addr.i1808, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 22), i64** %out3.addr.i1809, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 30), i64** %out4.addr.i1810, align 8
  %7401 = load i64, i64* %a1.addr.i1801, align 8
  %7402 = load i64, i64* %a5.addr.i1805, align 8
  %neg.i1860 = xor i64 %7402, -1
  %and.i1861 = and i64 %7401, %neg.i1860
  store i64 %and.i1861, i64* %x55005500.i1811, align 8
  %7403 = load i64, i64* %a4.addr.i1804, align 8
  %7404 = load i64, i64* %x55005500.i1811, align 8
  %xor.i1862 = xor i64 %7403, %7404
  store i64 %xor.i1862, i64* %x5A0F5A0F.i1812, align 8
  %7405 = load i64, i64* %a3.addr.i1803, align 8
  %7406 = load i64, i64* %a6.addr.i1806, align 8
  %or.i1863 = or i64 %7405, %7406
  store i64 %or.i1863, i64* %x3333FFFF.i1813, align 8
  %7407 = load i64, i64* %a1.addr.i1801, align 8
  %7408 = load i64, i64* %a3.addr.i1803, align 8
  %xor1.i1864 = xor i64 %7407, %7408
  store i64 %xor1.i1864, i64* %x66666666.i1814, align 8
  %7409 = load i64, i64* %x3333FFFF.i1813, align 8
  %7410 = load i64, i64* %x66666666.i1814, align 8
  %and2.i1865 = and i64 %7409, %7410
  store i64 %and2.i1865, i64* %x22226666.i1815, align 8
  %7411 = load i64, i64* %a4.addr.i1804, align 8
  %7412 = load i64, i64* %x22226666.i1815, align 8
  %xor3.i1866 = xor i64 %7411, %7412
  store i64 %xor3.i1866, i64* %x2D2D6969.i1816, align 8
  %7413 = load i64, i64* %x2D2D6969.i1816, align 8
  %7414 = load i64, i64* %x5A0F5A0F.i1812, align 8
  %neg4.i1867 = xor i64 %7414, -1
  %and5.i1868 = and i64 %7413, %neg4.i1867
  store i64 %and5.i1868, i64* %x25202160.i1817, align 8
  %7415 = load i64, i64* %a5.addr.i1805, align 8
  %7416 = load i64, i64* %a6.addr.i1806, align 8
  %xor6.i1869 = xor i64 %7415, %7416
  store i64 %xor6.i1869, i64* %x00FFFF00.i1818, align 8
  %7417 = load i64, i64* %a3.addr.i1803, align 8
  %7418 = load i64, i64* %x00FFFF00.i1818, align 8
  %xor7.i1870 = xor i64 %7417, %7418
  store i64 %xor7.i1870, i64* %x33CCCC33.i1819, align 8
  %7419 = load i64, i64* %x5A0F5A0F.i1812, align 8
  %7420 = load i64, i64* %x33CCCC33.i1819, align 8
  %neg8.i1871 = xor i64 %7420, -1
  %and9.i1872 = and i64 %7419, %neg8.i1871
  store i64 %and9.i1872, i64* %x4803120C.i1820, align 8
  %7421 = load i64, i64* %a6.addr.i1806, align 8
  %7422 = load i64, i64* %x22226666.i1815, align 8
  %or10.i1873 = or i64 %7421, %7422
  store i64 %or10.i1873, i64* %x2222FFFF.i1821, align 8
  %7423 = load i64, i64* %x4803120C.i1820, align 8
  %7424 = load i64, i64* %x2222FFFF.i1821, align 8
  %xor11.i1874 = xor i64 %7423, %7424
  store i64 %xor11.i1874, i64* %x6A21EDF3.i1822, align 8
  %7425 = load i64, i64* %x6A21EDF3.i1822, align 8
  %7426 = load i64, i64* %x25202160.i1817, align 8
  %neg12.i1875 = xor i64 %7426, -1
  %and13.i1876 = and i64 %7425, %neg12.i1875
  store i64 %and13.i1876, i64* %x4A01CC93.i1823, align 8
  %7427 = load i64, i64* %a1.addr.i1801, align 8
  %7428 = load i64, i64* %a6.addr.i1806, align 8
  %or14.i1877 = or i64 %7427, %7428
  store i64 %or14.i1877, i64* %x5555FFFF.i1824, align 8
  %7429 = load i64, i64* %x6A21EDF3.i1822, align 8
  %7430 = load i64, i64* %x5555FFFF.i1824, align 8
  %or15.i1878 = or i64 %7429, %7430
  store i64 %or15.i1878, i64* %x7F75FFFF.i1825, align 8
  %7431 = load i64, i64* %a5.addr.i1805, align 8
  %7432 = load i64, i64* %x2D2D6969.i1816, align 8
  %neg16.i1879 = xor i64 %7432, -1
  %and17.i1880 = and i64 %7431, %neg16.i1879
  store i64 %and17.i1880, i64* %x00D20096.i1826, align 8
  %7433 = load i64, i64* %x7F75FFFF.i1825, align 8
  %7434 = load i64, i64* %x00D20096.i1826, align 8
  %xor18.i1881 = xor i64 %7433, %7434
  store i64 %xor18.i1881, i64* %x7FA7FF69.i1827, align 8
  %7435 = load i64, i64* %a4.addr.i1804, align 8
  %7436 = load i64, i64* %x5555FFFF.i1824, align 8
  %neg19.i1882 = xor i64 %7436, -1
  %and20.i1883 = and i64 %7435, %neg19.i1882
  store i64 %and20.i1883, i64* %x0A0A0000.i1828, align 8
  %7437 = load i64, i64* %x00D20096.i1826, align 8
  %7438 = load i64, i64* %x0A0A0000.i1828, align 8
  %xor21.i1884 = xor i64 %7437, %7438
  store i64 %xor21.i1884, i64* %x0AD80096.i1829, align 8
  %7439 = load i64, i64* %x00FFFF00.i1818, align 8
  %7440 = load i64, i64* %x66666666.i1814, align 8
  %neg22.i1885 = xor i64 %7440, -1
  %and23.i1886 = and i64 %7439, %neg22.i1885
  store i64 %and23.i1886, i64* %x00999900.i1830, align 8
  %7441 = load i64, i64* %x0AD80096.i1829, align 8
  %7442 = load i64, i64* %x00999900.i1830, align 8
  %or24.i1887 = or i64 %7441, %7442
  store i64 %or24.i1887, i64* %x0AD99996.i1831, align 8
  %7443 = load i64, i64* %a3.addr.i1803, align 8
  %7444 = load i64, i64* %x55005500.i1811, align 8
  %neg25.i1888 = xor i64 %7444, -1
  %and26.i1889 = and i64 %7443, %neg25.i1888
  store i64 %and26.i1889, i64* %x22332233.i1832, align 8
  %7445 = load i64, i64* %x5A0F5A0F.i1812, align 8
  %7446 = load i64, i64* %x7F75FFFF.i1825, align 8
  %xor27.i1890 = xor i64 %7445, %7446
  store i64 %xor27.i1890, i64* %x257AA5F0.i1833, align 8
  %7447 = load i64, i64* %x257AA5F0.i1833, align 8
  %7448 = load i64, i64* %x22332233.i1832, align 8
  %neg28.i1891 = xor i64 %7448, -1
  %and29.i1892 = and i64 %7447, %neg28.i1891
  store i64 %and29.i1892, i64* %x054885C0.i1834, align 8
  %7449 = load i64, i64* %x054885C0.i1834, align 8
  %neg30.i1893 = xor i64 %7449, -1
  store i64 %neg30.i1893, i64* %xFAB77A3F.i1835, align 8
  %7450 = load i64, i64* %x3333FFFF.i1813, align 8
  %7451 = load i64, i64* %x6A21EDF3.i1822, align 8
  %and31.i1894 = and i64 %7450, %7451
  store i64 %and31.i1894, i64* %x2221EDF3.i1836, align 8
  %7452 = load i64, i64* %xFAB77A3F.i1835, align 8
  %7453 = load i64, i64* %x2221EDF3.i1836, align 8
  %xor32.i1895 = xor i64 %7452, %7453
  store i64 %xor32.i1895, i64* %xD89697CC.i1837, align 8
  %7454 = load i64, i64* %x7FA7FF69.i1827, align 8
  %7455 = load i64, i64* %a2.addr.i1802, align 8
  %neg33.i1896 = xor i64 %7455, -1
  %and34.i1897 = and i64 %7454, %neg33.i1896
  store i64 %and34.i1897, i64* %x20.i1856, align 8
  %7456 = load i64, i64* %x20.i1856, align 8
  %7457 = load i64, i64* %xD89697CC.i1837, align 8
  %xor35.i1898 = xor i64 %7456, %7457
  store i64 %xor35.i1898, i64* %x21.i1857, align 8
  %7458 = load i64*, i64** %out3.addr.i1809, align 8
  %7459 = load i64, i64* %7458, align 8
  %7460 = load i64, i64* %x21.i1857, align 8
  %xor36.i1899 = xor i64 %7459, %7460
  %7461 = load i64*, i64** %out3.addr.i1809, align 8
  store i64 %xor36.i1899, i64* %7461, align 8
  %7462 = load i64, i64* %x00FFFF00.i1818, align 8
  %7463 = load i64, i64* %x054885C0.i1834, align 8
  %xor37.i1900 = xor i64 %7462, %7463
  store i64 %xor37.i1900, i64* %x05B77AC0.i1838, align 8
  %7464 = load i64, i64* %x00D20096.i1826, align 8
  %7465 = load i64, i64* %x05B77AC0.i1838, align 8
  %or38.i1901 = or i64 %7464, %7465
  store i64 %or38.i1901, i64* %x05F77AD6.i1839, align 8
  %7466 = load i64, i64* %x3333FFFF.i1813, align 8
  %7467 = load i64, i64* %x05F77AD6.i1839, align 8
  %xor39.i1902 = xor i64 %7466, %7467
  store i64 %xor39.i1902, i64* %x36C48529.i1840, align 8
  %7468 = load i64, i64* %a1.addr.i1801, align 8
  %7469 = load i64, i64* %x36C48529.i1840, align 8
  %xor40.i1903 = xor i64 %7468, %7469
  store i64 %xor40.i1903, i64* %x6391D07C.i1841, align 8
  %7470 = load i64, i64* %xD89697CC.i1837, align 8
  %7471 = load i64, i64* %x6391D07C.i1841, align 8
  %xor41.i1904 = xor i64 %7470, %7471
  store i64 %xor41.i1904, i64* %xBB0747B0.i1842, align 8
  %7472 = load i64, i64* %x25202160.i1817, align 8
  %7473 = load i64, i64* %a2.addr.i1802, align 8
  %or42.i1905 = or i64 %7472, %7473
  store i64 %or42.i1905, i64* %x00.i1852, align 8
  %7474 = load i64, i64* %x00.i1852, align 8
  %7475 = load i64, i64* %xBB0747B0.i1842, align 8
  %xor43.i1906 = xor i64 %7474, %7475
  store i64 %xor43.i1906, i64* %x01.i1853, align 8
  %7476 = load i64*, i64** %out1.addr.i1807, align 8
  %7477 = load i64, i64* %7476, align 8
  %7478 = load i64, i64* %x01.i1853, align 8
  %xor44.i1907 = xor i64 %7477, %7478
  %7479 = load i64*, i64** %out1.addr.i1807, align 8
  store i64 %xor44.i1907, i64* %7479, align 8
  %7480 = load i64, i64* %x3333FFFF.i1813, align 8
  %7481 = load i64, i64* %x7F75FFFF.i1825, align 8
  %xor45.i1908 = xor i64 %7480, %7481
  store i64 %xor45.i1908, i64* %x4C460000.i1843, align 8
  %7482 = load i64, i64* %x0AD99996.i1831, align 8
  %7483 = load i64, i64* %x4C460000.i1843, align 8
  %or46.i1909 = or i64 %7482, %7483
  store i64 %or46.i1909, i64* %x4EDF9996.i1844, align 8
  %7484 = load i64, i64* %x6391D07C.i1841, align 8
  %7485 = load i64, i64* %x4EDF9996.i1844, align 8
  %xor47.i1910 = xor i64 %7484, %7485
  store i64 %xor47.i1910, i64* %x2D4E49EA.i1845, align 8
  %7486 = load i64, i64* %x00FFFF00.i1818, align 8
  %7487 = load i64, i64* %xBB0747B0.i1842, align 8
  %or48.i1911 = or i64 %7486, %7487
  store i64 %or48.i1911, i64* %xBBFFFFB0.i1846, align 8
  %7488 = load i64, i64* %x2D4E49EA.i1845, align 8
  %7489 = load i64, i64* %xBBFFFFB0.i1846, align 8
  %xor49.i1912 = xor i64 %7488, %7489
  store i64 %xor49.i1912, i64* %x96B1B65A.i1847, align 8
  %7490 = load i64, i64* %x4A01CC93.i1823, align 8
  %7491 = load i64, i64* %a2.addr.i1802, align 8
  %or50.i1913 = or i64 %7490, %7491
  store i64 %or50.i1913, i64* %x10.i1854, align 8
  %7492 = load i64, i64* %x10.i1854, align 8
  %7493 = load i64, i64* %x96B1B65A.i1847, align 8
  %xor51.i1914 = xor i64 %7492, %7493
  store i64 %xor51.i1914, i64* %x11.i1855, align 8
  %7494 = load i64*, i64** %out2.addr.i1808, align 8
  %7495 = load i64, i64* %7494, align 8
  %7496 = load i64, i64* %x11.i1855, align 8
  %xor52.i1915 = xor i64 %7495, %7496
  %7497 = load i64*, i64** %out2.addr.i1808, align 8
  store i64 %xor52.i1915, i64* %7497, align 8
  %7498 = load i64, i64* %a5.addr.i1805, align 8
  %7499 = load i64, i64* %x5A0F5A0F.i1812, align 8
  %or53.i1916 = or i64 %7498, %7499
  store i64 %or53.i1916, i64* %x5AFF5AFF.i1848, align 8
  %7500 = load i64, i64* %x5AFF5AFF.i1848, align 8
  %7501 = load i64, i64* %x2D4E49EA.i1845, align 8
  %neg54.i1917 = xor i64 %7501, -1
  %and55.i1918 = and i64 %7500, %neg54.i1917
  store i64 %and55.i1918, i64* %x52B11215.i1849, align 8
  %7502 = load i64, i64* %x4A01CC93.i1823, align 8
  %7503 = load i64, i64* %x6391D07C.i1841, align 8
  %and56.i1919 = and i64 %7502, %7503
  store i64 %and56.i1919, i64* %x4201C010.i1850, align 8
  %7504 = load i64, i64* %x52B11215.i1849, align 8
  %7505 = load i64, i64* %x4201C010.i1850, align 8
  %xor57.i1920 = xor i64 %7504, %7505
  store i64 %xor57.i1920, i64* %x10B0D205.i1851, align 8
  %7506 = load i64, i64* %x10B0D205.i1851, align 8
  %7507 = load i64, i64* %a2.addr.i1802, align 8
  %or58.i1921 = or i64 %7506, %7507
  store i64 %or58.i1921, i64* %x30.i1858, align 8
  %7508 = load i64, i64* %x30.i1858, align 8
  %7509 = load i64, i64* %x0AD99996.i1831, align 8
  %xor59.i1922 = xor i64 %7508, %7509
  store i64 %xor59.i1922, i64* %x31.i1859, align 8
  %7510 = load i64*, i64** %out4.addr.i1810, align 8
  %7511 = load i64, i64* %7510, align 8
  %7512 = load i64, i64* %x31.i1859, align 8
  %xor60.i1923 = xor i64 %7511, %7512
  %7513 = load i64*, i64** %out4.addr.i1810, align 8
  store i64 %xor60.i1923, i64* %7513, align 8
  %7514 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 54), align 8
  %arrayidx1218 = getelementptr inbounds i64, i64* %7514, i64 0
  %7515 = load i64, i64* %arrayidx1218, align 8
  %7516 = load i64**, i64*** %k, align 8
  %arrayidx1219 = getelementptr inbounds i64*, i64** %7516, i64 54
  %7517 = load i64*, i64** %arrayidx1219, align 8
  %arrayidx1220 = getelementptr inbounds i64, i64* %7517, i64 0
  %7518 = load i64, i64* %arrayidx1220, align 8
  %xor1221 = xor i64 %7515, %7518
  %7519 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 55), align 8
  %arrayidx1222 = getelementptr inbounds i64, i64* %7519, i64 0
  %7520 = load i64, i64* %arrayidx1222, align 8
  %7521 = load i64**, i64*** %k, align 8
  %arrayidx1223 = getelementptr inbounds i64*, i64** %7521, i64 55
  %7522 = load i64*, i64** %arrayidx1223, align 8
  %arrayidx1224 = getelementptr inbounds i64, i64* %7522, i64 0
  %7523 = load i64, i64* %arrayidx1224, align 8
  %xor1225 = xor i64 %7520, %7523
  %7524 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 56), align 8
  %arrayidx1226 = getelementptr inbounds i64, i64* %7524, i64 0
  %7525 = load i64, i64* %arrayidx1226, align 8
  %7526 = load i64**, i64*** %k, align 8
  %arrayidx1227 = getelementptr inbounds i64*, i64** %7526, i64 56
  %7527 = load i64*, i64** %arrayidx1227, align 8
  %arrayidx1228 = getelementptr inbounds i64, i64* %7527, i64 0
  %7528 = load i64, i64* %arrayidx1228, align 8
  %xor1229 = xor i64 %7525, %7528
  %7529 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 57), align 8
  %arrayidx1230 = getelementptr inbounds i64, i64* %7529, i64 0
  %7530 = load i64, i64* %arrayidx1230, align 8
  %7531 = load i64**, i64*** %k, align 8
  %arrayidx1231 = getelementptr inbounds i64*, i64** %7531, i64 57
  %7532 = load i64*, i64** %arrayidx1231, align 8
  %arrayidx1232 = getelementptr inbounds i64, i64* %7532, i64 0
  %7533 = load i64, i64* %arrayidx1232, align 8
  %xor1233 = xor i64 %7530, %7533
  %7534 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 58), align 8
  %arrayidx1234 = getelementptr inbounds i64, i64* %7534, i64 0
  %7535 = load i64, i64* %arrayidx1234, align 8
  %7536 = load i64**, i64*** %k, align 8
  %arrayidx1235 = getelementptr inbounds i64*, i64** %7536, i64 58
  %7537 = load i64*, i64** %arrayidx1235, align 8
  %arrayidx1236 = getelementptr inbounds i64, i64* %7537, i64 0
  %7538 = load i64, i64* %arrayidx1236, align 8
  %xor1237 = xor i64 %7535, %7538
  %7539 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 59), align 8
  %arrayidx1238 = getelementptr inbounds i64, i64* %7539, i64 0
  %7540 = load i64, i64* %arrayidx1238, align 8
  %7541 = load i64**, i64*** %k, align 8
  %arrayidx1239 = getelementptr inbounds i64*, i64** %7541, i64 59
  %7542 = load i64*, i64** %arrayidx1239, align 8
  %arrayidx1240 = getelementptr inbounds i64, i64* %7542, i64 0
  %7543 = load i64, i64* %arrayidx1240, align 8
  %xor1241 = xor i64 %7540, %7543
  store i64 %xor1221, i64* %a1.addr.i1725, align 8
  store i64 %xor1225, i64* %a2.addr.i1726, align 8
  store i64 %xor1229, i64* %a3.addr.i1727, align 8
  store i64 %xor1233, i64* %a4.addr.i1728, align 8
  store i64 %xor1237, i64* %a5.addr.i1729, align 8
  store i64 %xor1241, i64* %a6.addr.i1730, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 12), i64** %out1.addr.i1731, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 27), i64** %out2.addr.i1732, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 1), i64** %out3.addr.i1733, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 17), i64** %out4.addr.i1734, align 8
  %7544 = load i64, i64* %a2.addr.i1726, align 8
  %7545 = load i64, i64* %a5.addr.i1729, align 8
  %xor.i1745 = xor i64 %7544, %7545
  store i64 %xor.i1745, i64* %x33CC33CC.i1735, align 8
  %7546 = load i64, i64* %a1.addr.i1725, align 8
  %7547 = load i64, i64* %a6.addr.i1730, align 8
  %neg.i1746 = xor i64 %7547, -1
  %and.i1747 = and i64 %7546, %neg.i1746
  store i64 %and.i1747, i64* %x55550000.i, align 8
  %7548 = load i64, i64* %a5.addr.i1729, align 8
  %7549 = load i64, i64* %x55550000.i, align 8
  %neg1.i1748 = xor i64 %7549, -1
  %and2.i1749 = and i64 %7548, %neg1.i1748
  store i64 %and2.i1749, i64* %x00AA00FF.i, align 8
  %7550 = load i64, i64* %a2.addr.i1726, align 8
  %7551 = load i64, i64* %x00AA00FF.i, align 8
  %or.i1750 = or i64 %7550, %7551
  store i64 %or.i1750, i64* %x33BB33FF.i, align 8
  %7552 = load i64, i64* %x33CC33CC.i1735, align 8
  %7553 = load i64, i64* %a6.addr.i1730, align 8
  %neg3.i1751 = xor i64 %7553, -1
  %and4.i1752 = and i64 %7552, %neg3.i1751
  store i64 %and4.i1752, i64* %x33CC0000.i, align 8
  %7554 = load i64, i64* %a1.addr.i1725, align 8
  %7555 = load i64, i64* %x33CC33CC.i1735, align 8
  %and5.i1753 = and i64 %7554, %7555
  store i64 %and5.i1753, i64* %x11441144.i, align 8
  %7556 = load i64, i64* %a5.addr.i1729, align 8
  %7557 = load i64, i64* %x11441144.i, align 8
  %xor6.i1754 = xor i64 %7556, %7557
  store i64 %xor6.i1754, i64* %x11BB11BB.i, align 8
  %7558 = load i64, i64* %x11BB11BB.i, align 8
  %7559 = load i64, i64* %x33CC0000.i, align 8
  %neg7.i1755 = xor i64 %7559, -1
  %and8.i1756 = and i64 %7558, %neg7.i1755
  store i64 %and8.i1756, i64* %x003311BB.i, align 8
  %7560 = load i64, i64* %a3.addr.i1727, align 8
  %7561 = load i64, i64* %a6.addr.i1730, align 8
  %and9.i1757 = and i64 %7560, %7561
  store i64 %and9.i1757, i64* %x00000F0F.i, align 8
  %7562 = load i64, i64* %x00AA00FF.i, align 8
  %7563 = load i64, i64* %x33CC0000.i, align 8
  %xor10.i1758 = xor i64 %7562, %7563
  store i64 %xor10.i1758, i64* %x336600FF.i, align 8
  %7564 = load i64, i64* %x33BB33FF.i, align 8
  %7565 = load i64, i64* %x336600FF.i, align 8
  %and11.i1759 = and i64 %7564, %7565
  store i64 %and11.i1759, i64* %x332200FF.i, align 8
  %7566 = load i64, i64* %x332200FF.i, align 8
  %7567 = load i64, i64* %x00000F0F.i, align 8
  %neg12.i1760 = xor i64 %7567, -1
  %and13.i1761 = and i64 %7566, %neg12.i1760
  store i64 %and13.i1761, i64* %x332200F0.i, align 8
  %7568 = load i64, i64* %a3.addr.i1727, align 8
  %7569 = load i64, i64* %x332200FF.i, align 8
  %and14.i1762 = and i64 %7568, %7569
  store i64 %and14.i1762, i64* %x0302000F.i, align 8
  %7570 = load i64, i64* %a1.addr.i1725, align 8
  %neg15.i1763 = xor i64 %7570, -1
  store i64 %neg15.i1763, i64* %xAAAAAAAA.i, align 8
  %7571 = load i64, i64* %x0302000F.i, align 8
  %7572 = load i64, i64* %xAAAAAAAA.i, align 8
  %xor16.i1764 = xor i64 %7571, %7572
  store i64 %xor16.i1764, i64* %xA9A8AAA5.i, align 8
  %7573 = load i64, i64* %a6.addr.i1730, align 8
  %7574 = load i64, i64* %x33CC33CC.i1735, align 8
  %xor17.i1765 = xor i64 %7573, %7574
  store i64 %xor17.i1765, i64* %x33CCCC33.i1736, align 8
  %7575 = load i64, i64* %x33CCCC33.i1736, align 8
  %7576 = load i64, i64* %x00000F0F.i, align 8
  %neg18.i1766 = xor i64 %7576, -1
  %and19.i1767 = and i64 %7575, %neg18.i1766
  store i64 %and19.i1767, i64* %x33CCC030.i, align 8
  %7577 = load i64, i64* %xA9A8AAA5.i, align 8
  %7578 = load i64, i64* %x33CCC030.i, align 8
  %xor20.i1768 = xor i64 %7577, %7578
  store i64 %xor20.i1768, i64* %x9A646A95.i, align 8
  %7579 = load i64, i64* %a4.addr.i1728, align 8
  %7580 = load i64, i64* %x332200F0.i, align 8
  %neg21.i1769 = xor i64 %7580, -1
  %and22.i1770 = and i64 %7579, %neg21.i1769
  store i64 %and22.i1770, i64* %x10.i1739, align 8
  %7581 = load i64, i64* %x10.i1739, align 8
  %7582 = load i64, i64* %x9A646A95.i, align 8
  %xor23.i1771 = xor i64 %7581, %7582
  store i64 %xor23.i1771, i64* %x11.i1740, align 8
  %7583 = load i64*, i64** %out2.addr.i1732, align 8
  %7584 = load i64, i64* %7583, align 8
  %7585 = load i64, i64* %x11.i1740, align 8
  %xor24.i1772 = xor i64 %7584, %7585
  %7586 = load i64*, i64** %out2.addr.i1732, align 8
  store i64 %xor24.i1772, i64* %7586, align 8
  %7587 = load i64, i64* %a2.addr.i1726, align 8
  %7588 = load i64, i64* %x33CCC030.i, align 8
  %neg25.i1773 = xor i64 %7588, -1
  %and26.i1774 = and i64 %7587, %neg25.i1773
  store i64 %and26.i1774, i64* %x00333303.i, align 8
  %7589 = load i64, i64* %x11BB11BB.i, align 8
  %7590 = load i64, i64* %x00333303.i, align 8
  %xor27.i1775 = xor i64 %7589, %7590
  store i64 %xor27.i1775, i64* %x118822B8.i, align 8
  %7591 = load i64, i64* %xA9A8AAA5.i, align 8
  %7592 = load i64, i64* %x118822B8.i, align 8
  %neg28.i1776 = xor i64 %7592, -1
  %and29.i1777 = and i64 %7591, %neg28.i1776
  store i64 %and29.i1777, i64* %xA8208805.i, align 8
  %7593 = load i64, i64* %a3.addr.i1727, align 8
  %7594 = load i64, i64* %x33CCCC33.i1736, align 8
  %xor30.i1778 = xor i64 %7593, %7594
  store i64 %xor30.i1778, i64* %x3CC3C33C.i, align 8
  %7595 = load i64, i64* %xA8208805.i, align 8
  %7596 = load i64, i64* %x3CC3C33C.i, align 8
  %xor31.i1779 = xor i64 %7595, %7596
  store i64 %xor31.i1779, i64* %x94E34B39.i, align 8
  %7597 = load i64, i64* %x33BB33FF.i, align 8
  %7598 = load i64, i64* %a4.addr.i1728, align 8
  %neg32.i1780 = xor i64 %7598, -1
  %and33.i1781 = and i64 %7597, %neg32.i1780
  store i64 %and33.i1781, i64* %x00.i1737, align 8
  %7599 = load i64, i64* %x00.i1737, align 8
  %7600 = load i64, i64* %x94E34B39.i, align 8
  %xor34.i1782 = xor i64 %7599, %7600
  store i64 %xor34.i1782, i64* %x01.i1738, align 8
  %7601 = load i64*, i64** %out1.addr.i1731, align 8
  %7602 = load i64, i64* %7601, align 8
  %7603 = load i64, i64* %x01.i1738, align 8
  %xor35.i1783 = xor i64 %7602, %7603
  %7604 = load i64*, i64** %out1.addr.i1731, align 8
  store i64 %xor35.i1783, i64* %7604, align 8
  %7605 = load i64, i64* %x0302000F.i, align 8
  %7606 = load i64, i64* %x00333303.i, align 8
  %xor36.i1784 = xor i64 %7605, %7606
  store i64 %xor36.i1784, i64* %x0331330C.i, align 8
  %7607 = load i64, i64* %x3CC3C33C.i, align 8
  %7608 = load i64, i64* %x0331330C.i, align 8
  %or37.i1785 = or i64 %7607, %7608
  store i64 %or37.i1785, i64* %x3FF3F33C.i, align 8
  %7609 = load i64, i64* %x33BB33FF.i, align 8
  %7610 = load i64, i64* %x9A646A95.i, align 8
  %xor38.i1786 = xor i64 %7609, %7610
  store i64 %xor38.i1786, i64* %xA9DF596A.i, align 8
  %7611 = load i64, i64* %x00000F0F.i, align 8
  %7612 = load i64, i64* %xA9DF596A.i, align 8
  %or39.i1787 = or i64 %7611, %7612
  store i64 %or39.i1787, i64* %xA9DF5F6F.i, align 8
  %7613 = load i64, i64* %x3FF3F33C.i, align 8
  %7614 = load i64, i64* %xA9DF5F6F.i, align 8
  %xor40.i1788 = xor i64 %7613, %7614
  store i64 %xor40.i1788, i64* %x962CAC53.i, align 8
  %7615 = load i64, i64* %x94E34B39.i, align 8
  %7616 = load i64, i64* %x0331330C.i, align 8
  %xor41.i1789 = xor i64 %7615, %7616
  store i64 %xor41.i1789, i64* %x97D27835.i, align 8
  %7617 = load i64, i64* %xA9DF5F6F.i, align 8
  %7618 = load i64, i64* %x97D27835.i, align 8
  %and42.i1790 = and i64 %7617, %7618
  store i64 %and42.i1790, i64* %x81D25825.i, align 8
  %7619 = load i64, i64* %a5.addr.i1729, align 8
  %7620 = load i64, i64* %x81D25825.i, align 8
  %xor43.i1791 = xor i64 %7619, %7620
  store i64 %xor43.i1791, i64* %x812D58DA.i, align 8
  %7621 = load i64, i64* %x812D58DA.i, align 8
  %7622 = load i64, i64* %x33CC0000.i, align 8
  %neg44.i = xor i64 %7622, -1
  %and45.i1792 = and i64 %7621, %neg44.i
  store i64 %and45.i1792, i64* %x802158DA.i, align 8
  %7623 = load i64, i64* %x9A646A95.i, align 8
  %7624 = load i64, i64* %x802158DA.i, align 8
  %xor46.i1793 = xor i64 %7623, %7624
  store i64 %xor46.i1793, i64* %x1A45324F.i, align 8
  %7625 = load i64, i64* %x1A45324F.i, align 8
  %7626 = load i64, i64* %a4.addr.i1728, align 8
  %or47.i1794 = or i64 %7625, %7626
  store i64 %or47.i1794, i64* %x20.i1741, align 8
  %7627 = load i64, i64* %x20.i1741, align 8
  %7628 = load i64, i64* %x962CAC53.i, align 8
  %xor48.i1795 = xor i64 %7627, %7628
  store i64 %xor48.i1795, i64* %x21.i1742, align 8
  %7629 = load i64*, i64** %out3.addr.i1733, align 8
  %7630 = load i64, i64* %7629, align 8
  %7631 = load i64, i64* %x21.i1742, align 8
  %xor49.i1796 = xor i64 %7630, %7631
  %7632 = load i64*, i64** %out3.addr.i1733, align 8
  store i64 %xor49.i1796, i64* %7632, align 8
  %7633 = load i64, i64* %x1A45324F.i, align 8
  %7634 = load i64, i64* %x118822B8.i, align 8
  %neg50.i1797 = xor i64 %7634, -1
  %and51.i1798 = and i64 %7633, %neg50.i1797
  store i64 %and51.i1798, i64* %x0A451047.i, align 8
  %7635 = load i64, i64* %x33CCCC33.i1736, align 8
  %7636 = load i64, i64* %xA9DF596A.i, align 8
  %or52.i = or i64 %7635, %7636
  store i64 %or52.i, i64* %xBBDFDD7B.i, align 8
  %7637 = load i64, i64* %x0A451047.i, align 8
  %7638 = load i64, i64* %xBBDFDD7B.i, align 8
  %xor53.i1799 = xor i64 %7637, %7638
  store i64 %xor53.i1799, i64* %xB19ACD3C.i, align 8
  %7639 = load i64, i64* %x003311BB.i, align 8
  %7640 = load i64, i64* %a4.addr.i1728, align 8
  %or54.i = or i64 %7639, %7640
  store i64 %or54.i, i64* %x30.i1743, align 8
  %7641 = load i64, i64* %x30.i1743, align 8
  %7642 = load i64, i64* %xB19ACD3C.i, align 8
  %xor55.i = xor i64 %7641, %7642
  store i64 %xor55.i, i64* %x31.i1744, align 8
  %7643 = load i64*, i64** %out4.addr.i1734, align 8
  %7644 = load i64, i64* %7643, align 8
  %7645 = load i64, i64* %x31.i1744, align 8
  %xor56.i1800 = xor i64 %7644, %7645
  %7646 = load i64*, i64** %out4.addr.i1734, align 8
  store i64 %xor56.i1800, i64* %7646, align 8
  %7647 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 39), align 8
  %7648 = load i64**, i64*** %k, align 8
  %arrayidx1242 = getelementptr inbounds i64*, i64** %7648, i64 60
  %7649 = load i64*, i64** %arrayidx1242, align 8
  %arrayidx1243 = getelementptr inbounds i64, i64* %7649, i64 0
  %7650 = load i64, i64* %arrayidx1243, align 8
  %xor1244 = xor i64 %7647, %7650
  %7651 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 40), align 8
  %7652 = load i64**, i64*** %k, align 8
  %arrayidx1245 = getelementptr inbounds i64*, i64** %7652, i64 61
  %7653 = load i64*, i64** %arrayidx1245, align 8
  %arrayidx1246 = getelementptr inbounds i64, i64* %7653, i64 0
  %7654 = load i64, i64* %arrayidx1246, align 8
  %xor1247 = xor i64 %7651, %7654
  %7655 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 41), align 8
  %7656 = load i64**, i64*** %k, align 8
  %arrayidx1248 = getelementptr inbounds i64*, i64** %7656, i64 62
  %7657 = load i64*, i64** %arrayidx1248, align 8
  %arrayidx1249 = getelementptr inbounds i64, i64* %7657, i64 0
  %7658 = load i64, i64* %arrayidx1249, align 8
  %xor1250 = xor i64 %7655, %7658
  %7659 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 42), align 8
  %7660 = load i64**, i64*** %k, align 8
  %arrayidx1251 = getelementptr inbounds i64*, i64** %7660, i64 63
  %7661 = load i64*, i64** %arrayidx1251, align 8
  %arrayidx1252 = getelementptr inbounds i64, i64* %7661, i64 0
  %7662 = load i64, i64* %arrayidx1252, align 8
  %xor1253 = xor i64 %7659, %7662
  %7663 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 43), align 8
  %7664 = load i64**, i64*** %k, align 8
  %arrayidx1254 = getelementptr inbounds i64*, i64** %7664, i64 64
  %7665 = load i64*, i64** %arrayidx1254, align 8
  %arrayidx1255 = getelementptr inbounds i64, i64* %7665, i64 0
  %7666 = load i64, i64* %arrayidx1255, align 8
  %xor1256 = xor i64 %7663, %7666
  %7667 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 44), align 8
  %7668 = load i64**, i64*** %k, align 8
  %arrayidx1257 = getelementptr inbounds i64*, i64** %7668, i64 65
  %7669 = load i64*, i64** %arrayidx1257, align 8
  %arrayidx1258 = getelementptr inbounds i64, i64* %7669, i64 0
  %7670 = load i64, i64* %arrayidx1258, align 8
  %xor1259 = xor i64 %7667, %7670
  store i64 %xor1244, i64* %a1.addr.i1657, align 8
  store i64 %xor1247, i64* %a2.addr.i1658, align 8
  store i64 %xor1250, i64* %a3.addr.i1659, align 8
  store i64 %xor1253, i64* %a4.addr.i1660, align 8
  store i64 %xor1256, i64* %a5.addr.i1661, align 8
  store i64 %xor1259, i64* %a6.addr.i1662, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 23), i64** %out1.addr.i1663, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 15), i64** %out2.addr.i1664, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 29), i64** %out3.addr.i1665, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 5), i64** %out4.addr.i1666, align 8
  %7671 = load i64, i64* %a1.addr.i1657, align 8
  %7672 = load i64, i64* %a2.addr.i1658, align 8
  %neg.i1677 = xor i64 %7672, -1
  %and.i1678 = and i64 %7671, %neg.i1677
  store i64 %and.i1678, i64* %x44444444.i, align 8
  %7673 = load i64, i64* %a3.addr.i1659, align 8
  %7674 = load i64, i64* %a6.addr.i1662, align 8
  %xor.i1679 = xor i64 %7673, %7674
  store i64 %xor.i1679, i64* %x0F0FF0F0.i1667, align 8
  %7675 = load i64, i64* %x44444444.i, align 8
  %7676 = load i64, i64* %x0F0FF0F0.i1667, align 8
  %or.i1680 = or i64 %7675, %7676
  store i64 %or.i1680, i64* %x4F4FF4F4.i, align 8
  %7677 = load i64, i64* %a4.addr.i1660, align 8
  %7678 = load i64, i64* %a6.addr.i1662, align 8
  %xor1.i1681 = xor i64 %7677, %7678
  store i64 %xor1.i1681, i64* %x00FFFF00.i1668, align 8
  %7679 = load i64, i64* %x00FFFF00.i1668, align 8
  %7680 = load i64, i64* %a1.addr.i1657, align 8
  %neg2.i = xor i64 %7680, -1
  %and3.i1682 = and i64 %7679, %neg2.i
  store i64 %and3.i1682, i64* %x00AAAA00.i, align 8
  %7681 = load i64, i64* %x4F4FF4F4.i, align 8
  %7682 = load i64, i64* %x00AAAA00.i, align 8
  %xor4.i = xor i64 %7681, %7682
  store i64 %xor4.i, i64* %x4FE55EF4.i, align 8
  %7683 = load i64, i64* %a2.addr.i1658, align 8
  %7684 = load i64, i64* %x0F0FF0F0.i1667, align 8
  %xor5.i1683 = xor i64 %7683, %7684
  store i64 %xor5.i1683, i64* %x3C3CC3C3.i, align 8
  %7685 = load i64, i64* %x3C3CC3C3.i, align 8
  %7686 = load i64, i64* %a6.addr.i1662, align 8
  %neg6.i1684 = xor i64 %7686, -1
  %and7.i1685 = and i64 %7685, %neg6.i1684
  store i64 %and7.i1685, i64* %x3C3C0000.i, align 8
  %7687 = load i64, i64* %x4F4FF4F4.i, align 8
  %7688 = load i64, i64* %x3C3C0000.i, align 8
  %xor8.i1686 = xor i64 %7687, %7688
  store i64 %xor8.i1686, i64* %x7373F4F4.i, align 8
  %7689 = load i64, i64* %x4FE55EF4.i, align 8
  %7690 = load i64, i64* %x7373F4F4.i, align 8
  %neg9.i = xor i64 %7690, -1
  %and10.i1687 = and i64 %7689, %neg9.i
  store i64 %and10.i1687, i64* %x0C840A00.i, align 8
  %7691 = load i64, i64* %a6.addr.i1662, align 8
  %7692 = load i64, i64* %x4FE55EF4.i, align 8
  %and11.i1688 = and i64 %7691, %7692
  store i64 %and11.i1688, i64* %x00005EF4.i, align 8
  %7693 = load i64, i64* %a4.addr.i1660, align 8
  %7694 = load i64, i64* %x00005EF4.i, align 8
  %or12.i1689 = or i64 %7693, %7694
  store i64 %or12.i1689, i64* %x00FF5EFF.i, align 8
  %7695 = load i64, i64* %a1.addr.i1657, align 8
  %7696 = load i64, i64* %x00FF5EFF.i, align 8
  %and13.i1690 = and i64 %7695, %7696
  store i64 %and13.i1690, i64* %x00555455.i, align 8
  %7697 = load i64, i64* %x3C3CC3C3.i, align 8
  %7698 = load i64, i64* %x00555455.i, align 8
  %xor14.i1691 = xor i64 %7697, %7698
  store i64 %xor14.i1691, i64* %x3C699796.i, align 8
  %7699 = load i64, i64* %x4FE55EF4.i, align 8
  %7700 = load i64, i64* %a5.addr.i1661, align 8
  %neg15.i1692 = xor i64 %7700, -1
  %and16.i1693 = and i64 %7699, %neg15.i1692
  store i64 %and16.i1693, i64* %x30.i1675, align 8
  %7701 = load i64, i64* %x30.i1675, align 8
  %7702 = load i64, i64* %x3C699796.i, align 8
  %xor17.i1694 = xor i64 %7701, %7702
  store i64 %xor17.i1694, i64* %x31.i1676, align 8
  %7703 = load i64*, i64** %out4.addr.i1666, align 8
  %7704 = load i64, i64* %7703, align 8
  %7705 = load i64, i64* %x31.i1676, align 8
  %xor18.i1695 = xor i64 %7704, %7705
  %7706 = load i64*, i64** %out4.addr.i1666, align 8
  store i64 %xor18.i1695, i64* %7706, align 8
  %7707 = load i64, i64* %x0F0FF0F0.i1667, align 8
  %7708 = load i64, i64* %x00FFFF00.i1668, align 8
  %and19.i1696 = and i64 %7707, %7708
  store i64 %and19.i1696, i64* %x000FF000.i, align 8
  %7709 = load i64, i64* %a1.addr.i1657, align 8
  %7710 = load i64, i64* %a4.addr.i1660, align 8
  %xor20.i1697 = xor i64 %7709, %7710
  store i64 %xor20.i1697, i64* %x55AA55AA.i, align 8
  %7711 = load i64, i64* %x7373F4F4.i, align 8
  %7712 = load i64, i64* %x55AA55AA.i, align 8
  %xor21.i1698 = xor i64 %7711, %7712
  store i64 %xor21.i1698, i64* %x26D9A15E.i, align 8
  %7713 = load i64, i64* %a3.addr.i1659, align 8
  %7714 = load i64, i64* %x26D9A15E.i, align 8
  %or22.i = or i64 %7713, %7714
  store i64 %or22.i, i64* %x2FDFAF5F.i, align 8
  %7715 = load i64, i64* %x2FDFAF5F.i, align 8
  %7716 = load i64, i64* %x000FF000.i, align 8
  %neg23.i1699 = xor i64 %7716, -1
  %and24.i1700 = and i64 %7715, %neg23.i1699
  store i64 %and24.i1700, i64* %x2FD00F5F.i, align 8
  %7717 = load i64, i64* %x00AAAA00.i, align 8
  %7718 = load i64, i64* %x55AA55AA.i, align 8
  %or25.i = or i64 %7717, %7718
  store i64 %or25.i, i64* %x55AAFFAA.i, align 8
  %7719 = load i64, i64* %x3C699796.i, align 8
  %7720 = load i64, i64* %x55AAFFAA.i, align 8
  %neg26.i = xor i64 %7720, -1
  %and27.i = and i64 %7719, %neg26.i
  store i64 %and27.i, i64* %x28410014.i, align 8
  %7721 = load i64, i64* %a4.addr.i1660, align 8
  %7722 = load i64, i64* %a6.addr.i1662, align 8
  %and28.i1701 = and i64 %7721, %7722
  store i64 %and28.i1701, i64* %x000000FF.i, align 8
  %7723 = load i64, i64* %x000000FF.i, align 8
  %7724 = load i64, i64* %a2.addr.i1658, align 8
  %neg29.i = xor i64 %7724, -1
  %and30.i = and i64 %7723, %neg29.i
  store i64 %and30.i, i64* %x000000CC.i, align 8
  %7725 = load i64, i64* %x28410014.i, align 8
  %7726 = load i64, i64* %x000000CC.i, align 8
  %xor31.i1702 = xor i64 %7725, %7726
  store i64 %xor31.i1702, i64* %x284100D8.i, align 8
  %7727 = load i64, i64* %x284100D8.i, align 8
  %7728 = load i64, i64* %a3.addr.i1659, align 8
  %neg32.i = xor i64 %7728, -1
  %and33.i = and i64 %7727, %neg32.i
  store i64 %and33.i, i64* %x204000D0.i, align 8
  %7729 = load i64, i64* %x3C3CC3C3.i, align 8
  %7730 = load i64, i64* %x000000FF.i, align 8
  %or34.i1703 = or i64 %7729, %7730
  store i64 %or34.i1703, i64* %x3C3CC3FF.i, align 8
  %7731 = load i64, i64* %x3C3CC3FF.i, align 8
  %7732 = load i64, i64* %x204000D0.i, align 8
  %neg35.i = xor i64 %7732, -1
  %and36.i1704 = and i64 %7731, %neg35.i
  store i64 %and36.i1704, i64* %x1C3CC32F.i, align 8
  %7733 = load i64, i64* %a1.addr.i1657, align 8
  %7734 = load i64, i64* %x1C3CC32F.i, align 8
  %xor37.i1705 = xor i64 %7733, %7734
  store i64 %xor37.i1705, i64* %x4969967A.i, align 8
  %7735 = load i64, i64* %x2FD00F5F.i, align 8
  %7736 = load i64, i64* %a5.addr.i1661, align 8
  %and38.i1706 = and i64 %7735, %7736
  store i64 %and38.i1706, i64* %x10.i1671, align 8
  %7737 = load i64, i64* %x10.i1671, align 8
  %7738 = load i64, i64* %x4969967A.i, align 8
  %xor39.i1707 = xor i64 %7737, %7738
  store i64 %xor39.i1707, i64* %x11.i1672, align 8
  %7739 = load i64*, i64** %out2.addr.i1664, align 8
  %7740 = load i64, i64* %7739, align 8
  %7741 = load i64, i64* %x11.i1672, align 8
  %xor40.i1708 = xor i64 %7740, %7741
  %7742 = load i64*, i64** %out2.addr.i1664, align 8
  store i64 %xor40.i1708, i64* %7742, align 8
  %7743 = load i64, i64* %x4FE55EF4.i, align 8
  %7744 = load i64, i64* %a2.addr.i1658, align 8
  %neg41.i1709 = xor i64 %7744, -1
  %and42.i1710 = and i64 %7743, %neg41.i1709
  store i64 %and42.i1710, i64* %x4CC44CC4.i, align 8
  %7745 = load i64, i64* %x4CC44CC4.i, align 8
  %7746 = load i64, i64* %a3.addr.i1659, align 8
  %neg43.i = xor i64 %7746, -1
  %and44.i = and i64 %7745, %neg43.i
  store i64 %and44.i, i64* %x40C040C0.i, align 8
  %7747 = load i64, i64* %x3C3CC3C3.i, align 8
  %7748 = load i64, i64* %x55AAFFAA.i, align 8
  %xor45.i1711 = xor i64 %7747, %7748
  store i64 %xor45.i1711, i64* %x69963C69.i, align 8
  %7749 = load i64, i64* %x69963C69.i, align 8
  %neg46.i = xor i64 %7749, -1
  store i64 %neg46.i, i64* %x9669C396.i, align 8
  %7750 = load i64, i64* %x40C040C0.i, align 8
  %7751 = load i64, i64* %x9669C396.i, align 8
  %xor47.i1712 = xor i64 %7750, %7751
  store i64 %xor47.i1712, i64* %xD6A98356.i, align 8
  %7752 = load i64, i64* %a5.addr.i1661, align 8
  %7753 = load i64, i64* %x0C840A00.i, align 8
  %neg48.i1713 = xor i64 %7753, -1
  %and49.i = and i64 %7752, %neg48.i1713
  store i64 %and49.i, i64* %x00.i1669, align 8
  %7754 = load i64, i64* %x00.i1669, align 8
  %7755 = load i64, i64* %xD6A98356.i, align 8
  %xor50.i1714 = xor i64 %7754, %7755
  store i64 %xor50.i1714, i64* %x01.i1670, align 8
  %7756 = load i64*, i64** %out1.addr.i1663, align 8
  %7757 = load i64, i64* %7756, align 8
  %7758 = load i64, i64* %x01.i1670, align 8
  %xor51.i1715 = xor i64 %7757, %7758
  %7759 = load i64*, i64** %out1.addr.i1663, align 8
  store i64 %xor51.i1715, i64* %7759, align 8
  %7760 = load i64, i64* %a4.addr.i1660, align 8
  %7761 = load i64, i64* %x0F0FF0F0.i1667, align 8
  %and52.i1716 = and i64 %7760, %7761
  store i64 %and52.i1716, i64* %x000F00F0.i, align 8
  %7762 = load i64, i64* %x3C3CC3C3.i, align 8
  %7763 = load i64, i64* %xD6A98356.i, align 8
  %or53.i1717 = or i64 %7762, %7763
  store i64 %or53.i1717, i64* %xFEBDC3D7.i, align 8
  %7764 = load i64, i64* %xFEBDC3D7.i, align 8
  %7765 = load i64, i64* %x000F00F0.i, align 8
  %neg54.i1718 = xor i64 %7765, -1
  %and55.i1719 = and i64 %7764, %neg54.i1718
  store i64 %and55.i1719, i64* %xFEB0C307.i, align 8
  %7766 = load i64, i64* %x00AAAA00.i, align 8
  %7767 = load i64, i64* %x4CC44CC4.i, align 8
  %or56.i1720 = or i64 %7766, %7767
  store i64 %or56.i1720, i64* %x4CEEEEC4.i, align 8
  %7768 = load i64, i64* %xFEB0C307.i, align 8
  %7769 = load i64, i64* %x4CEEEEC4.i, align 8
  %xor57.i1721 = xor i64 %7768, %7769
  store i64 %xor57.i1721, i64* %xB25E2DC3.i, align 8
  %7770 = load i64, i64* %x284100D8.i, align 8
  %7771 = load i64, i64* %a5.addr.i1661, align 8
  %or58.i1722 = or i64 %7770, %7771
  store i64 %or58.i1722, i64* %x20.i1673, align 8
  %7772 = load i64, i64* %x20.i1673, align 8
  %7773 = load i64, i64* %xB25E2DC3.i, align 8
  %xor59.i1723 = xor i64 %7772, %7773
  store i64 %xor59.i1723, i64* %x21.i1674, align 8
  %7774 = load i64*, i64** %out3.addr.i1665, align 8
  %7775 = load i64, i64* %7774, align 8
  %7776 = load i64, i64* %x21.i1674, align 8
  %xor60.i1724 = xor i64 %7775, %7776
  %7777 = load i64*, i64** %out3.addr.i1665, align 8
  store i64 %xor60.i1724, i64* %7777, align 8
  %7778 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 43), align 8
  %7779 = load i64**, i64*** %k, align 8
  %arrayidx1260 = getelementptr inbounds i64*, i64** %7779, i64 66
  %7780 = load i64*, i64** %arrayidx1260, align 8
  %arrayidx1261 = getelementptr inbounds i64, i64* %7780, i64 0
  %7781 = load i64, i64* %arrayidx1261, align 8
  %xor1262 = xor i64 %7778, %7781
  %7782 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 44), align 8
  %7783 = load i64**, i64*** %k, align 8
  %arrayidx1263 = getelementptr inbounds i64*, i64** %7783, i64 67
  %7784 = load i64*, i64** %arrayidx1263, align 8
  %arrayidx1264 = getelementptr inbounds i64, i64* %7784, i64 0
  %7785 = load i64, i64* %arrayidx1264, align 8
  %xor1265 = xor i64 %7782, %7785
  %7786 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 45), align 8
  %7787 = load i64**, i64*** %k, align 8
  %arrayidx1266 = getelementptr inbounds i64*, i64** %7787, i64 68
  %7788 = load i64*, i64** %arrayidx1266, align 8
  %arrayidx1267 = getelementptr inbounds i64, i64* %7788, i64 0
  %7789 = load i64, i64* %arrayidx1267, align 8
  %xor1268 = xor i64 %7786, %7789
  %7790 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 46), align 8
  %7791 = load i64**, i64*** %k, align 8
  %arrayidx1269 = getelementptr inbounds i64*, i64** %7791, i64 69
  %7792 = load i64*, i64** %arrayidx1269, align 8
  %arrayidx1270 = getelementptr inbounds i64, i64* %7792, i64 0
  %7793 = load i64, i64* %arrayidx1270, align 8
  %xor1271 = xor i64 %7790, %7793
  %7794 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 47), align 8
  %7795 = load i64**, i64*** %k, align 8
  %arrayidx1272 = getelementptr inbounds i64*, i64** %7795, i64 70
  %7796 = load i64*, i64** %arrayidx1272, align 8
  %arrayidx1273 = getelementptr inbounds i64, i64* %7796, i64 0
  %7797 = load i64, i64* %arrayidx1273, align 8
  %xor1274 = xor i64 %7794, %7797
  %7798 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 48), align 8
  %7799 = load i64**, i64*** %k, align 8
  %arrayidx1275 = getelementptr inbounds i64*, i64** %7799, i64 71
  %7800 = load i64*, i64** %arrayidx1275, align 8
  %arrayidx1276 = getelementptr inbounds i64, i64* %7800, i64 0
  %7801 = load i64, i64* %arrayidx1276, align 8
  %xor1277 = xor i64 %7798, %7801
  store i64 %xor1262, i64* %a1.addr.i1598, align 8
  store i64 %xor1265, i64* %a2.addr.i1599, align 8
  store i64 %xor1268, i64* %a3.addr.i1600, align 8
  store i64 %xor1271, i64* %a4.addr.i1601, align 8
  store i64 %xor1274, i64* %a5.addr.i1602, align 8
  store i64 %xor1277, i64* %a6.addr.i1603, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 25), i64** %out1.addr.i1604, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 19), i64** %out2.addr.i1605, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 9), i64** %out3.addr.i1606, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 0), i64** %out4.addr.i1607, align 8
  %7802 = load i64, i64* %a1.addr.i1598, align 8
  %7803 = load i64, i64* %a3.addr.i1600, align 8
  %xor.i1618 = xor i64 %7802, %7803
  store i64 %xor.i1618, i64* %x5A5A5A5A.i1608, align 8
  %7804 = load i64, i64* %a3.addr.i1600, align 8
  %7805 = load i64, i64* %a5.addr.i1602, align 8
  %xor1.i1619 = xor i64 %7804, %7805
  store i64 %xor1.i1619, i64* %x0F0FF0F0.i, align 8
  %7806 = load i64, i64* %a2.addr.i1599, align 8
  %7807 = load i64, i64* %a4.addr.i1601, align 8
  %or.i1620 = or i64 %7806, %7807
  store i64 %or.i1620, i64* %x33FF33FF.i, align 8
  %7808 = load i64, i64* %a5.addr.i1602, align 8
  %7809 = load i64, i64* %x33FF33FF.i, align 8
  %xor2.i1621 = xor i64 %7808, %7809
  store i64 %xor2.i1621, i64* %x33FFCC00.i, align 8
  %7810 = load i64, i64* %x0F0FF0F0.i, align 8
  %7811 = load i64, i64* %x33FFCC00.i, align 8
  %neg.i1622 = xor i64 %7811, -1
  %and.i1623 = and i64 %7810, %neg.i1622
  store i64 %and.i1623, i64* %x0C0030F0.i, align 8
  %7812 = load i64, i64* %x0F0FF0F0.i, align 8
  %7813 = load i64, i64* %a2.addr.i1599, align 8
  %neg3.i1624 = xor i64 %7813, -1
  %and4.i1625 = and i64 %7812, %neg3.i1624
  store i64 %and4.i1625, i64* %x0C0CC0C0.i, align 8
  %7814 = load i64, i64* %a4.addr.i1601, align 8
  %7815 = load i64, i64* %x0C0CC0C0.i, align 8
  %xor5.i1626 = xor i64 %7814, %7815
  store i64 %xor5.i1626, i64* %x0CF3C03F.i, align 8
  %7816 = load i64, i64* %x5A5A5A5A.i1608, align 8
  %7817 = load i64, i64* %x0CF3C03F.i, align 8
  %or6.i = or i64 %7816, %7817
  store i64 %or6.i, i64* %x5EFBDA7F.i, align 8
  %7818 = load i64, i64* %x5EFBDA7F.i, align 8
  %7819 = load i64, i64* %x0C0030F0.i, align 8
  %neg7.i = xor i64 %7819, -1
  %and8.i = and i64 %7818, %neg7.i
  store i64 %and8.i, i64* %x52FBCA0F.i, align 8
  %7820 = load i64, i64* %a2.addr.i1599, align 8
  %7821 = load i64, i64* %x52FBCA0F.i, align 8
  %xor9.i1627 = xor i64 %7820, %7821
  store i64 %xor9.i1627, i64* %x61C8F93C.i, align 8
  %7822 = load i64, i64* %x0CF3C03F.i, align 8
  %7823 = load i64, i64* %x61C8F93C.i, align 8
  %and10.i1628 = and i64 %7822, %7823
  store i64 %and10.i1628, i64* %x00C0C03C.i, align 8
  %7824 = load i64, i64* %x0F0FF0F0.i, align 8
  %7825 = load i64, i64* %x00C0C03C.i, align 8
  %neg11.i = xor i64 %7825, -1
  %and12.i1629 = and i64 %7824, %neg11.i
  store i64 %and12.i1629, i64* %x0F0F30C0.i, align 8
  %7826 = load i64, i64* %x5A5A5A5A.i1608, align 8
  %7827 = load i64, i64* %x61C8F93C.i, align 8
  %xor13.i1630 = xor i64 %7826, %7827
  store i64 %xor13.i1630, i64* %x3B92A366.i, align 8
  %7828 = load i64, i64* %x3B92A366.i, align 8
  %7829 = load i64, i64* %x0F0F30C0.i, align 8
  %neg14.i = xor i64 %7829, -1
  %and15.i = and i64 %7828, %neg14.i
  store i64 %and15.i, i64* %x30908326.i, align 8
  %7830 = load i64, i64* %x0C0030F0.i, align 8
  %7831 = load i64, i64* %x30908326.i, align 8
  %xor16.i1631 = xor i64 %7830, %7831
  store i64 %xor16.i1631, i64* %x3C90B3D6.i, align 8
  %7832 = load i64, i64* %a2.addr.i1599, align 8
  %7833 = load i64, i64* %a4.addr.i1601, align 8
  %xor17.i1632 = xor i64 %7832, %7833
  store i64 %xor17.i1632, i64* %x33CC33CC.i1609, align 8
  %7834 = load i64, i64* %a5.addr.i1602, align 8
  %7835 = load i64, i64* %x0C0CC0C0.i, align 8
  %or18.i1633 = or i64 %7834, %7835
  store i64 %or18.i1633, i64* %x0C0CFFFF.i, align 8
  %7836 = load i64, i64* %x3B92A366.i, align 8
  %7837 = load i64, i64* %x0C0CFFFF.i, align 8
  %xor19.i1634 = xor i64 %7836, %7837
  store i64 %xor19.i1634, i64* %x379E5C99.i, align 8
  %7838 = load i64, i64* %x379E5C99.i, align 8
  %7839 = load i64, i64* %x33CC33CC.i1609, align 8
  %neg20.i1635 = xor i64 %7839, -1
  %and21.i1636 = and i64 %7838, %neg20.i1635
  store i64 %and21.i1636, i64* %x04124C11.i, align 8
  %7840 = load i64, i64* %x52FBCA0F.i, align 8
  %7841 = load i64, i64* %x04124C11.i, align 8
  %xor22.i1637 = xor i64 %7840, %7841
  store i64 %xor22.i1637, i64* %x56E9861E.i, align 8
  %7842 = load i64, i64* %a6.addr.i1603, align 8
  %7843 = load i64, i64* %x3C90B3D6.i, align 8
  %neg23.i1638 = xor i64 %7843, -1
  %and24.i1639 = and i64 %7842, %neg23.i1638
  store i64 %and24.i1639, i64* %x00.i1610, align 8
  %7844 = load i64, i64* %x00.i1610, align 8
  %7845 = load i64, i64* %x56E9861E.i, align 8
  %xor25.i1640 = xor i64 %7844, %7845
  store i64 %xor25.i1640, i64* %x01.i1611, align 8
  %7846 = load i64*, i64** %out1.addr.i1604, align 8
  %7847 = load i64, i64* %7846, align 8
  %7848 = load i64, i64* %x01.i1611, align 8
  %xor26.i1641 = xor i64 %7847, %7848
  %7849 = load i64*, i64** %out1.addr.i1604, align 8
  store i64 %xor26.i1641, i64* %7849, align 8
  %7850 = load i64, i64* %x56E9861E.i, align 8
  %neg27.i1642 = xor i64 %7850, -1
  store i64 %neg27.i1642, i64* %xA91679E1.i, align 8
  %7851 = load i64, i64* %x3C90B3D6.i, align 8
  %7852 = load i64, i64* %a6.addr.i1603, align 8
  %neg28.i1643 = xor i64 %7852, -1
  %and29.i1644 = and i64 %7851, %neg28.i1643
  store i64 %and29.i1644, i64* %x10.i1612, align 8
  %7853 = load i64, i64* %x10.i1612, align 8
  %7854 = load i64, i64* %xA91679E1.i, align 8
  %xor30.i1645 = xor i64 %7853, %7854
  store i64 %xor30.i1645, i64* %x11.i1613, align 8
  %7855 = load i64*, i64** %out2.addr.i1605, align 8
  %7856 = load i64, i64* %7855, align 8
  %7857 = load i64, i64* %x11.i1613, align 8
  %xor31.i1646 = xor i64 %7856, %7857
  %7858 = load i64*, i64** %out2.addr.i1605, align 8
  store i64 %xor31.i1646, i64* %7858, align 8
  %7859 = load i64, i64* %x3C90B3D6.i, align 8
  %7860 = load i64, i64* %xA91679E1.i, align 8
  %xor32.i1647 = xor i64 %7859, %7860
  store i64 %xor32.i1647, i64* %x9586CA37.i, align 8
  %7861 = load i64, i64* %x9586CA37.i, align 8
  %7862 = load i64, i64* %x33CC33CC.i1609, align 8
  %neg33.i1648 = xor i64 %7862, -1
  %and34.i1649 = and i64 %7861, %neg33.i1648
  store i64 %and34.i1649, i64* %x8402C833.i, align 8
  %7863 = load i64, i64* %x00C0C03C.i, align 8
  %7864 = load i64, i64* %x8402C833.i, align 8
  %or35.i1650 = or i64 %7863, %7864
  store i64 %or35.i1650, i64* %x84C2C83F.i, align 8
  %7865 = load i64, i64* %x379E5C99.i, align 8
  %7866 = load i64, i64* %x84C2C83F.i, align 8
  %xor36.i1651 = xor i64 %7865, %7866
  store i64 %xor36.i1651, i64* %xB35C94A6.i, align 8
  %7867 = load i64, i64* %x61C8F93C.i, align 8
  %7868 = load i64, i64* %a6.addr.i1603, align 8
  %or37.i = or i64 %7867, %7868
  store i64 %or37.i, i64* %x20.i1614, align 8
  %7869 = load i64, i64* %x20.i1614, align 8
  %7870 = load i64, i64* %xB35C94A6.i, align 8
  %xor38.i1652 = xor i64 %7869, %7870
  store i64 %xor38.i1652, i64* %x21.i1615, align 8
  %7871 = load i64*, i64** %out3.addr.i1606, align 8
  %7872 = load i64, i64* %7871, align 8
  %7873 = load i64, i64* %x21.i1615, align 8
  %xor39.i1653 = xor i64 %7872, %7873
  %7874 = load i64*, i64** %out3.addr.i1606, align 8
  store i64 %xor39.i1653, i64* %7874, align 8
  %7875 = load i64, i64* %a6.addr.i1603, align 8
  %7876 = load i64, i64* %x61C8F93C.i, align 8
  %and40.i1654 = and i64 %7875, %7876
  store i64 %and40.i1654, i64* %x30.i1616, align 8
  %7877 = load i64, i64* %x30.i1616, align 8
  %7878 = load i64, i64* %xB35C94A6.i, align 8
  %xor41.i1655 = xor i64 %7877, %7878
  store i64 %xor41.i1655, i64* %x31.i1617, align 8
  %7879 = load i64*, i64** %out4.addr.i1607, align 8
  %7880 = load i64, i64* %7879, align 8
  %7881 = load i64, i64* %x31.i1617, align 8
  %xor42.i1656 = xor i64 %7880, %7881
  %7882 = load i64*, i64** %out4.addr.i1607, align 8
  store i64 %xor42.i1656, i64* %7882, align 8
  %7883 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 72), align 8
  %arrayidx1278 = getelementptr inbounds i64, i64* %7883, i64 0
  %7884 = load i64, i64* %arrayidx1278, align 8
  %7885 = load i64**, i64*** %k, align 8
  %arrayidx1279 = getelementptr inbounds i64*, i64** %7885, i64 72
  %7886 = load i64*, i64** %arrayidx1279, align 8
  %arrayidx1280 = getelementptr inbounds i64, i64* %7886, i64 0
  %7887 = load i64, i64* %arrayidx1280, align 8
  %xor1281 = xor i64 %7884, %7887
  %7888 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 73), align 8
  %arrayidx1282 = getelementptr inbounds i64, i64* %7888, i64 0
  %7889 = load i64, i64* %arrayidx1282, align 8
  %7890 = load i64**, i64*** %k, align 8
  %arrayidx1283 = getelementptr inbounds i64*, i64** %7890, i64 73
  %7891 = load i64*, i64** %arrayidx1283, align 8
  %arrayidx1284 = getelementptr inbounds i64, i64* %7891, i64 0
  %7892 = load i64, i64* %arrayidx1284, align 8
  %xor1285 = xor i64 %7889, %7892
  %7893 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 74), align 8
  %arrayidx1286 = getelementptr inbounds i64, i64* %7893, i64 0
  %7894 = load i64, i64* %arrayidx1286, align 8
  %7895 = load i64**, i64*** %k, align 8
  %arrayidx1287 = getelementptr inbounds i64*, i64** %7895, i64 74
  %7896 = load i64*, i64** %arrayidx1287, align 8
  %arrayidx1288 = getelementptr inbounds i64, i64* %7896, i64 0
  %7897 = load i64, i64* %arrayidx1288, align 8
  %xor1289 = xor i64 %7894, %7897
  %7898 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 75), align 8
  %arrayidx1290 = getelementptr inbounds i64, i64* %7898, i64 0
  %7899 = load i64, i64* %arrayidx1290, align 8
  %7900 = load i64**, i64*** %k, align 8
  %arrayidx1291 = getelementptr inbounds i64*, i64** %7900, i64 75
  %7901 = load i64*, i64** %arrayidx1291, align 8
  %arrayidx1292 = getelementptr inbounds i64, i64* %7901, i64 0
  %7902 = load i64, i64* %arrayidx1292, align 8
  %xor1293 = xor i64 %7899, %7902
  %7903 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 76), align 8
  %arrayidx1294 = getelementptr inbounds i64, i64* %7903, i64 0
  %7904 = load i64, i64* %arrayidx1294, align 8
  %7905 = load i64**, i64*** %k, align 8
  %arrayidx1295 = getelementptr inbounds i64*, i64** %7905, i64 76
  %7906 = load i64*, i64** %arrayidx1295, align 8
  %arrayidx1296 = getelementptr inbounds i64, i64* %7906, i64 0
  %7907 = load i64, i64* %arrayidx1296, align 8
  %xor1297 = xor i64 %7904, %7907
  %7908 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 77), align 8
  %arrayidx1298 = getelementptr inbounds i64, i64* %7908, i64 0
  %7909 = load i64, i64* %arrayidx1298, align 8
  %7910 = load i64**, i64*** %k, align 8
  %arrayidx1299 = getelementptr inbounds i64*, i64** %7910, i64 77
  %7911 = load i64*, i64** %arrayidx1299, align 8
  %arrayidx1300 = getelementptr inbounds i64, i64* %7911, i64 0
  %7912 = load i64, i64* %arrayidx1300, align 8
  %xor1301 = xor i64 %7909, %7912
  store i64 %xor1281, i64* %a1.addr.i1534, align 8
  store i64 %xor1285, i64* %a2.addr.i1535, align 8
  store i64 %xor1289, i64* %a3.addr.i1536, align 8
  store i64 %xor1293, i64* %a4.addr.i1537, align 8
  store i64 %xor1297, i64* %a5.addr.i1538, align 8
  store i64 %xor1301, i64* %a6.addr.i1539, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 7), i64** %out1.addr.i1540, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 13), i64** %out2.addr.i1541, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 24), i64** %out3.addr.i1542, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 2), i64** %out4.addr.i1543, align 8
  %7913 = load i64, i64* %a1.addr.i1534, align 8
  %7914 = load i64, i64* %a3.addr.i1536, align 8
  %or.i1552 = or i64 %7913, %7914
  store i64 %or.i1552, i64* %x77777777.i, align 8
  %7915 = load i64, i64* %x77777777.i, align 8
  %7916 = load i64, i64* %a6.addr.i1539, align 8
  %neg.i1553 = xor i64 %7916, -1
  %and.i1554 = and i64 %7915, %neg.i1553
  store i64 %and.i1554, i64* %x77770000.i, align 8
  %7917 = load i64, i64* %a1.addr.i1534, align 8
  %7918 = load i64, i64* %x77770000.i, align 8
  %xor.i1555 = xor i64 %7917, %7918
  store i64 %xor.i1555, i64* %x22225555.i, align 8
  %7919 = load i64, i64* %a3.addr.i1536, align 8
  %7920 = load i64, i64* %x22225555.i, align 8
  %xor1.i1556 = xor i64 %7919, %7920
  store i64 %xor1.i1556, i64* %x11116666.i, align 8
  %7921 = load i64, i64* %a4.addr.i1537, align 8
  %7922 = load i64, i64* %x11116666.i, align 8
  %or2.i = or i64 %7921, %7922
  store i64 %or2.i, i64* %x1F1F6F6F.i, align 8
  %7923 = load i64, i64* %x77770000.i, align 8
  %7924 = load i64, i64* %a4.addr.i1537, align 8
  %neg3.i = xor i64 %7924, -1
  %and4.i1557 = and i64 %7923, %neg3.i
  store i64 %and4.i1557, i64* %x70700000.i, align 8
  %7925 = load i64, i64* %a3.addr.i1536, align 8
  %7926 = load i64, i64* %x70700000.i, align 8
  %xor5.i1558 = xor i64 %7925, %7926
  store i64 %xor5.i1558, i64* %x43433333.i, align 8
  %7927 = load i64, i64* %a5.addr.i1538, align 8
  %7928 = load i64, i64* %x43433333.i, align 8
  %and6.i = and i64 %7927, %7928
  store i64 %and6.i, i64* %x00430033.i, align 8
  %7929 = load i64, i64* %a1.addr.i1534, align 8
  %7930 = load i64, i64* %x11116666.i, align 8
  %or7.i1559 = or i64 %7929, %7930
  store i64 %or7.i1559, i64* %x55557777.i, align 8
  %7931 = load i64, i64* %x00430033.i, align 8
  %7932 = load i64, i64* %x55557777.i, align 8
  %xor8.i1560 = xor i64 %7931, %7932
  store i64 %xor8.i1560, i64* %x55167744.i, align 8
  %7933 = load i64, i64* %a4.addr.i1537, align 8
  %7934 = load i64, i64* %x55167744.i, align 8
  %xor9.i = xor i64 %7933, %7934
  store i64 %xor9.i, i64* %x5A19784B.i, align 8
  %7935 = load i64, i64* %a6.addr.i1539, align 8
  %7936 = load i64, i64* %x5A19784B.i, align 8
  %xor10.i1561 = xor i64 %7935, %7936
  store i64 %xor10.i1561, i64* %x5A1987B4.i, align 8
  %7937 = load i64, i64* %x22225555.i, align 8
  %7938 = load i64, i64* %x5A1987B4.i, align 8
  %or11.i = or i64 %7937, %7938
  store i64 %or11.i, i64* %x7A3BD7F5.i, align 8
  %7939 = load i64, i64* %a5.addr.i1538, align 8
  %7940 = load i64, i64* %x7A3BD7F5.i, align 8
  %and12.i = and i64 %7939, %7940
  store i64 %and12.i, i64* %x003B00F5.i, align 8
  %7941 = load i64, i64* %x22225555.i, align 8
  %7942 = load i64, i64* %x003B00F5.i, align 8
  %xor13.i1562 = xor i64 %7941, %7942
  store i64 %xor13.i1562, i64* %x221955A0.i, align 8
  %7943 = load i64, i64* %a4.addr.i1537, align 8
  %7944 = load i64, i64* %x55557777.i, align 8
  %and14.i1563 = and i64 %7943, %7944
  store i64 %and14.i1563, i64* %x05050707.i, align 8
  %7945 = load i64, i64* %x221955A0.i, align 8
  %7946 = load i64, i64* %x05050707.i, align 8
  %xor15.i1564 = xor i64 %7945, %7946
  store i64 %xor15.i1564, i64* %x271C52A7.i, align 8
  %7947 = load i64, i64* %x7A3BD7F5.i, align 8
  %7948 = load i64, i64* %a1.addr.i1534, align 8
  %neg16.i1565 = xor i64 %7948, -1
  %and17.i1566 = and i64 %7947, %neg16.i1565
  store i64 %and17.i1566, i64* %x2A2A82A0.i, align 8
  %7949 = load i64, i64* %x43433333.i, align 8
  %7950 = load i64, i64* %x2A2A82A0.i, align 8
  %xor18.i1567 = xor i64 %7949, %7950
  store i64 %xor18.i1567, i64* %x6969B193.i, align 8
  %7951 = load i64, i64* %a5.addr.i1538, align 8
  %7952 = load i64, i64* %x1F1F6F6F.i, align 8
  %xor19.i = xor i64 %7951, %7952
  store i64 %xor19.i, i64* %x1FE06F90.i, align 8
  %7953 = load i64, i64* %x1FE06F90.i, align 8
  %7954 = load i64, i64* %x6969B193.i, align 8
  %neg20.i1568 = xor i64 %7954, -1
  %and21.i1569 = and i64 %7953, %neg20.i1568
  store i64 %and21.i1569, i64* %x16804E00.i, align 8
  %7955 = load i64, i64* %x16804E00.i, align 8
  %neg22.i1570 = xor i64 %7955, -1
  store i64 %neg22.i1570, i64* %xE97FB1FF.i, align 8
  %7956 = load i64, i64* %xE97FB1FF.i, align 8
  %7957 = load i64, i64* %a2.addr.i1535, align 8
  %neg23.i = xor i64 %7957, -1
  %and24.i = and i64 %7956, %neg23.i
  store i64 %and24.i, i64* %x20.i1548, align 8
  %7958 = load i64, i64* %x20.i1548, align 8
  %7959 = load i64, i64* %x5A19784B.i, align 8
  %xor25.i1571 = xor i64 %7958, %7959
  store i64 %xor25.i1571, i64* %x21.i1549, align 8
  %7960 = load i64*, i64** %out3.addr.i1542, align 8
  %7961 = load i64, i64* %7960, align 8
  %7962 = load i64, i64* %x21.i1549, align 8
  %xor26.i1572 = xor i64 %7961, %7962
  %7963 = load i64*, i64** %out3.addr.i1542, align 8
  store i64 %xor26.i1572, i64* %7963, align 8
  %7964 = load i64, i64* %x43433333.i, align 8
  %7965 = load i64, i64* %x003B00F5.i, align 8
  %neg27.i1573 = xor i64 %7965, -1
  %and28.i1574 = and i64 %7964, %neg27.i1573
  store i64 %and28.i1574, i64* %x43403302.i, align 8
  %7966 = load i64, i64* %x2A2A82A0.i, align 8
  %7967 = load i64, i64* %x1FE06F90.i, align 8
  %xor29.i1575 = xor i64 %7966, %7967
  store i64 %xor29.i1575, i64* %x35CAED30.i, align 8
  %7968 = load i64, i64* %x271C52A7.i, align 8
  %7969 = load i64, i64* %x35CAED30.i, align 8
  %or30.i = or i64 %7968, %7969
  store i64 %or30.i, i64* %x37DEFFB7.i, align 8
  %7970 = load i64, i64* %x37DEFFB7.i, align 8
  %7971 = load i64, i64* %x43403302.i, align 8
  %neg31.i = xor i64 %7971, -1
  %and32.i = and i64 %7970, %neg31.i
  store i64 %and32.i, i64* %x349ECCB5.i, align 8
  %7972 = load i64, i64* %x1F1F6F6F.i, align 8
  %7973 = load i64, i64* %x349ECCB5.i, align 8
  %neg33.i1576 = xor i64 %7973, -1
  %and34.i1577 = and i64 %7972, %neg33.i1576
  store i64 %and34.i1577, i64* %x0B01234A.i, align 8
  %7974 = load i64, i64* %x5A1987B4.i, align 8
  %7975 = load i64, i64* %x349ECCB5.i, align 8
  %and35.i1578 = and i64 %7974, %7975
  store i64 %and35.i1578, i64* %x101884B4.i, align 8
  %7976 = load i64, i64* %x1FE06F90.i, align 8
  %7977 = load i64, i64* %x101884B4.i, align 8
  %xor36.i1579 = xor i64 %7976, %7977
  store i64 %xor36.i1579, i64* %x0FF8EB24.i, align 8
  %7978 = load i64, i64* %x43433333.i, align 8
  %7979 = load i64, i64* %x55557777.i, align 8
  %and37.i1580 = and i64 %7978, %7979
  store i64 %and37.i1580, i64* %x41413333.i, align 8
  %7980 = load i64, i64* %x0FF8EB24.i, align 8
  %7981 = load i64, i64* %x41413333.i, align 8
  %or38.i1581 = or i64 %7980, %7981
  store i64 %or38.i1581, i64* %x4FF9FB37.i, align 8
  %7982 = load i64, i64* %x003B00F5.i, align 8
  %7983 = load i64, i64* %x4FF9FB37.i, align 8
  %xor39.i1582 = xor i64 %7982, %7983
  store i64 %xor39.i1582, i64* %x4FC2FBC2.i, align 8
  %7984 = load i64, i64* %x4FC2FBC2.i, align 8
  %7985 = load i64, i64* %a2.addr.i1535, align 8
  %and40.i = and i64 %7984, %7985
  store i64 %and40.i, i64* %x30.i1550, align 8
  %7986 = load i64, i64* %x30.i1550, align 8
  %7987 = load i64, i64* %x271C52A7.i, align 8
  %xor41.i1583 = xor i64 %7986, %7987
  store i64 %xor41.i1583, i64* %x31.i1551, align 8
  %7988 = load i64*, i64** %out4.addr.i1543, align 8
  %7989 = load i64, i64* %7988, align 8
  %7990 = load i64, i64* %x31.i1551, align 8
  %xor42.i = xor i64 %7989, %7990
  %7991 = load i64*, i64** %out4.addr.i1543, align 8
  store i64 %xor42.i, i64* %7991, align 8
  %7992 = load i64, i64* %a1.addr.i1534, align 8
  %7993 = load i64, i64* %x77777777.i, align 8
  %xor43.i1584 = xor i64 %7992, %7993
  store i64 %xor43.i1584, i64* %x22222222.i, align 8
  %7994 = load i64, i64* %x349ECCB5.i, align 8
  %7995 = load i64, i64* %x22222222.i, align 8
  %xor44.i1585 = xor i64 %7994, %7995
  store i64 %xor44.i1585, i64* %x16BCEE97.i, align 8
  %7996 = load i64, i64* %a4.addr.i1537, align 8
  %7997 = load i64, i64* %x0FF8EB24.i, align 8
  %and45.i1586 = and i64 %7996, %7997
  store i64 %and45.i1586, i64* %x0F080B04.i, align 8
  %7998 = load i64, i64* %x16BCEE97.i, align 8
  %7999 = load i64, i64* %x0F080B04.i, align 8
  %xor46.i1587 = xor i64 %7998, %7999
  store i64 %xor46.i1587, i64* %x19B4E593.i, align 8
  %8000 = load i64, i64* %x0B01234A.i, align 8
  %8001 = load i64, i64* %a2.addr.i1535, align 8
  %or47.i1588 = or i64 %8000, %8001
  store i64 %or47.i1588, i64* %x00.i1544, align 8
  %8002 = load i64, i64* %x00.i1544, align 8
  %8003 = load i64, i64* %x19B4E593.i, align 8
  %xor48.i1589 = xor i64 %8002, %8003
  store i64 %xor48.i1589, i64* %x01.i1545, align 8
  %8004 = load i64*, i64** %out1.addr.i1540, align 8
  %8005 = load i64, i64* %8004, align 8
  %8006 = load i64, i64* %x01.i1545, align 8
  %xor49.i1590 = xor i64 %8005, %8006
  %8007 = load i64*, i64** %out1.addr.i1540, align 8
  store i64 %xor49.i1590, i64* %8007, align 8
  %8008 = load i64, i64* %x1F1F6F6F.i, align 8
  %8009 = load i64, i64* %x43433333.i, align 8
  %xor50.i1591 = xor i64 %8008, %8009
  store i64 %xor50.i1591, i64* %x5C5C5C5C.i, align 8
  %8010 = load i64, i64* %x5C5C5C5C.i, align 8
  %8011 = load i64, i64* %x19B4E593.i, align 8
  %neg51.i1592 = xor i64 %8011, -1
  %and52.i1593 = and i64 %8010, %neg51.i1592
  store i64 %and52.i1593, i64* %x4448184C.i, align 8
  %8012 = load i64, i64* %x22225555.i, align 8
  %8013 = load i64, i64* %x0FF8EB24.i, align 8
  %xor53.i1594 = xor i64 %8012, %8013
  store i64 %xor53.i1594, i64* %x2DDABE71.i, align 8
  %8014 = load i64, i64* %x4448184C.i, align 8
  %8015 = load i64, i64* %x2DDABE71.i, align 8
  %xor54.i1595 = xor i64 %8014, %8015
  store i64 %xor54.i1595, i64* %x6992A63D.i, align 8
  %8016 = load i64, i64* %x1F1F6F6F.i, align 8
  %8017 = load i64, i64* %a2.addr.i1535, align 8
  %and55.i1596 = and i64 %8016, %8017
  store i64 %and55.i1596, i64* %x10.i1546, align 8
  %8018 = load i64, i64* %x10.i1546, align 8
  %8019 = load i64, i64* %x6992A63D.i, align 8
  %xor56.i = xor i64 %8018, %8019
  store i64 %xor56.i, i64* %x11.i1547, align 8
  %8020 = load i64*, i64** %out2.addr.i1541, align 8
  %8021 = load i64, i64* %8020, align 8
  %8022 = load i64, i64* %x11.i1547, align 8
  %xor57.i1597 = xor i64 %8021, %8022
  %8023 = load i64*, i64** %out2.addr.i1541, align 8
  store i64 %xor57.i1597, i64* %8023, align 8
  %8024 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 78), align 8
  %arrayidx1302 = getelementptr inbounds i64, i64* %8024, i64 0
  %8025 = load i64, i64* %arrayidx1302, align 8
  %8026 = load i64**, i64*** %k, align 8
  %arrayidx1303 = getelementptr inbounds i64*, i64** %8026, i64 78
  %8027 = load i64*, i64** %arrayidx1303, align 8
  %arrayidx1304 = getelementptr inbounds i64, i64* %8027, i64 0
  %8028 = load i64, i64* %arrayidx1304, align 8
  %xor1305 = xor i64 %8025, %8028
  %8029 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 79), align 8
  %arrayidx1306 = getelementptr inbounds i64, i64* %8029, i64 0
  %8030 = load i64, i64* %arrayidx1306, align 8
  %8031 = load i64**, i64*** %k, align 8
  %arrayidx1307 = getelementptr inbounds i64*, i64** %8031, i64 79
  %8032 = load i64*, i64** %arrayidx1307, align 8
  %arrayidx1308 = getelementptr inbounds i64, i64* %8032, i64 0
  %8033 = load i64, i64* %arrayidx1308, align 8
  %xor1309 = xor i64 %8030, %8033
  %8034 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 80), align 8
  %arrayidx1310 = getelementptr inbounds i64, i64* %8034, i64 0
  %8035 = load i64, i64* %arrayidx1310, align 8
  %8036 = load i64**, i64*** %k, align 8
  %arrayidx1311 = getelementptr inbounds i64*, i64** %8036, i64 80
  %8037 = load i64*, i64** %arrayidx1311, align 8
  %arrayidx1312 = getelementptr inbounds i64, i64* %8037, i64 0
  %8038 = load i64, i64* %arrayidx1312, align 8
  %xor1313 = xor i64 %8035, %8038
  %8039 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 81), align 8
  %arrayidx1314 = getelementptr inbounds i64, i64* %8039, i64 0
  %8040 = load i64, i64* %arrayidx1314, align 8
  %8041 = load i64**, i64*** %k, align 8
  %arrayidx1315 = getelementptr inbounds i64*, i64** %8041, i64 81
  %8042 = load i64*, i64** %arrayidx1315, align 8
  %arrayidx1316 = getelementptr inbounds i64, i64* %8042, i64 0
  %8043 = load i64, i64* %arrayidx1316, align 8
  %xor1317 = xor i64 %8040, %8043
  %8044 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 82), align 8
  %arrayidx1318 = getelementptr inbounds i64, i64* %8044, i64 0
  %8045 = load i64, i64* %arrayidx1318, align 8
  %8046 = load i64**, i64*** %k, align 8
  %arrayidx1319 = getelementptr inbounds i64*, i64** %8046, i64 82
  %8047 = load i64*, i64** %arrayidx1319, align 8
  %arrayidx1320 = getelementptr inbounds i64, i64* %8047, i64 0
  %8048 = load i64, i64* %arrayidx1320, align 8
  %xor1321 = xor i64 %8045, %8048
  %8049 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 83), align 8
  %arrayidx1322 = getelementptr inbounds i64, i64* %8049, i64 0
  %8050 = load i64, i64* %arrayidx1322, align 8
  %8051 = load i64**, i64*** %k, align 8
  %arrayidx1323 = getelementptr inbounds i64*, i64** %8051, i64 83
  %8052 = load i64*, i64** %arrayidx1323, align 8
  %arrayidx1324 = getelementptr inbounds i64, i64* %8052, i64 0
  %8053 = load i64, i64* %arrayidx1324, align 8
  %xor1325 = xor i64 %8050, %8053
  store i64 %xor1305, i64* %a1.addr.i1475, align 8
  store i64 %xor1309, i64* %a2.addr.i1476, align 8
  store i64 %xor1313, i64* %a3.addr.i1477, align 8
  store i64 %xor1317, i64* %a4.addr.i1478, align 8
  store i64 %xor1321, i64* %a5.addr.i1479, align 8
  store i64 %xor1325, i64* %a6.addr.i1480, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 3), i64** %out1.addr.i1481, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 28), i64** %out2.addr.i1482, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 10), i64** %out3.addr.i1483, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 18), i64** %out4.addr.i1484, align 8
  %8054 = load i64, i64* %a2.addr.i1476, align 8
  %8055 = load i64, i64* %a5.addr.i1479, align 8
  %xor.i1494 = xor i64 %8054, %8055
  store i64 %xor.i1494, i64* %x33CC33CC.i, align 8
  %8056 = load i64, i64* %a2.addr.i1476, align 8
  %8057 = load i64, i64* %a6.addr.i1480, align 8
  %or.i1495 = or i64 %8056, %8057
  store i64 %or.i1495, i64* %x3333FFFF.i1485, align 8
  %8058 = load i64, i64* %a1.addr.i1475, align 8
  %8059 = load i64, i64* %x3333FFFF.i1485, align 8
  %and.i1496 = and i64 %8058, %8059
  store i64 %and.i1496, i64* %x11115555.i, align 8
  %8060 = load i64, i64* %x33CC33CC.i, align 8
  %8061 = load i64, i64* %x11115555.i, align 8
  %xor1.i1497 = xor i64 %8060, %8061
  store i64 %xor1.i1497, i64* %x22DD6699.i, align 8
  %8062 = load i64, i64* %a6.addr.i1480, align 8
  %8063 = load i64, i64* %x22DD6699.i, align 8
  %xor2.i = xor i64 %8062, %8063
  store i64 %xor2.i, i64* %x22DD9966.i, align 8
  %8064 = load i64, i64* %a5.addr.i1479, align 8
  %8065 = load i64, i64* %x22DD9966.i, align 8
  %neg.i1498 = xor i64 %8065, -1
  %and3.i1499 = and i64 %8064, %neg.i1498
  store i64 %and3.i1499, i64* %x00220099.i, align 8
  %8066 = load i64, i64* %a1.addr.i1475, align 8
  %8067 = load i64, i64* %x22DD9966.i, align 8
  %and4.i1500 = and i64 %8066, %8067
  store i64 %and4.i1500, i64* %x00551144.i, align 8
  %8068 = load i64, i64* %a2.addr.i1476, align 8
  %8069 = load i64, i64* %x00551144.i, align 8
  %xor5.i = xor i64 %8068, %8069
  store i64 %xor5.i, i64* %x33662277.i, align 8
  %8070 = load i64, i64* %a1.addr.i1475, align 8
  %8071 = load i64, i64* %a3.addr.i1477, align 8
  %xor6.i1501 = xor i64 %8070, %8071
  store i64 %xor6.i1501, i64* %x5A5A5A5A.i, align 8
  %8072 = load i64, i64* %x33662277.i, align 8
  %8073 = load i64, i64* %x5A5A5A5A.i, align 8
  %or7.i = or i64 %8072, %8073
  store i64 %or7.i, i64* %x7B7E7A7F.i, align 8
  %8074 = load i64, i64* %x22DD6699.i, align 8
  %8075 = load i64, i64* %x7B7E7A7F.i, align 8
  %xor8.i1502 = xor i64 %8074, %8075
  store i64 %xor8.i1502, i64* %x59A31CE6.i, align 8
  %8076 = load i64, i64* %a3.addr.i1477, align 8
  %8077 = load i64, i64* %x59A31CE6.i, align 8
  %and9.i1503 = and i64 %8076, %8077
  store i64 %and9.i1503, i64* %x09030C06.i, align 8
  %8078 = load i64, i64* %x09030C06.i, align 8
  %8079 = load i64, i64* %a6.addr.i1480, align 8
  %neg10.i = xor i64 %8079, -1
  %and11.i1504 = and i64 %8078, %neg10.i
  store i64 %and11.i1504, i64* %x09030000.i, align 8
  %8080 = load i64, i64* %x00220099.i, align 8
  %8081 = load i64, i64* %x33662277.i, align 8
  %or12.i1505 = or i64 %8080, %8081
  store i64 %or12.i1505, i64* %x336622FF.i, align 8
  %8082 = load i64, i64* %x09030000.i, align 8
  %8083 = load i64, i64* %x336622FF.i, align 8
  %xor13.i = xor i64 %8082, %8083
  store i64 %xor13.i, i64* %x3A6522FF.i, align 8
  %8084 = load i64, i64* %x3A6522FF.i, align 8
  %8085 = load i64, i64* %a4.addr.i1478, align 8
  %and14.i = and i64 %8084, %8085
  store i64 %and14.i, i64* %x30.i1492, align 8
  %8086 = load i64, i64* %x30.i1492, align 8
  %8087 = load i64, i64* %x59A31CE6.i, align 8
  %xor15.i1506 = xor i64 %8086, %8087
  store i64 %xor15.i1506, i64* %x31.i1493, align 8
  %8088 = load i64*, i64** %out4.addr.i1484, align 8
  %8089 = load i64, i64* %8088, align 8
  %8090 = load i64, i64* %x31.i1493, align 8
  %xor16.i1507 = xor i64 %8089, %8090
  %8091 = load i64*, i64** %out4.addr.i1484, align 8
  store i64 %xor16.i1507, i64* %8091, align 8
  %8092 = load i64, i64* %a2.addr.i1476, align 8
  %8093 = load i64, i64* %x7B7E7A7F.i, align 8
  %xor17.i1508 = xor i64 %8092, %8093
  store i64 %xor17.i1508, i64* %x484D494C.i, align 8
  %8094 = load i64, i64* %a6.addr.i1480, align 8
  %8095 = load i64, i64* %x484D494C.i, align 8
  %neg18.i1509 = xor i64 %8095, -1
  %and19.i1510 = and i64 %8094, %neg18.i1509
  store i64 %and19.i1510, i64* %x0000B6B3.i, align 8
  %8096 = load i64, i64* %a3.addr.i1477, align 8
  %8097 = load i64, i64* %x0000B6B3.i, align 8
  %xor20.i1511 = xor i64 %8096, %8097
  store i64 %xor20.i1511, i64* %x0F0FB9BC.i, align 8
  %8098 = load i64, i64* %a5.addr.i1479, align 8
  %8099 = load i64, i64* %x09030C06.i, align 8
  %neg21.i = xor i64 %8099, -1
  %and22.i1512 = and i64 %8098, %neg21.i
  store i64 %and22.i1512, i64* %x00FC00F9.i, align 8
  %8100 = load i64, i64* %x0F0FB9BC.i, align 8
  %8101 = load i64, i64* %x00FC00F9.i, align 8
  %or23.i = or i64 %8100, %8101
  store i64 %or23.i, i64* %x0FFFB9FD.i, align 8
  %8102 = load i64, i64* %a1.addr.i1475, align 8
  %8103 = load i64, i64* %x59A31CE6.i, align 8
  %or24.i1513 = or i64 %8102, %8103
  store i64 %or24.i1513, i64* %x5DF75DF7.i, align 8
  %8104 = load i64, i64* %x336622FF.i, align 8
  %8105 = load i64, i64* %x5DF75DF7.i, align 8
  %and25.i1514 = and i64 %8104, %8105
  store i64 %and25.i1514, i64* %x116600F7.i, align 8
  %8106 = load i64, i64* %x0F0FB9BC.i, align 8
  %8107 = load i64, i64* %x116600F7.i, align 8
  %xor26.i1515 = xor i64 %8106, %8107
  store i64 %xor26.i1515, i64* %x1E69B94B.i, align 8
  %8108 = load i64, i64* %x1E69B94B.i, align 8
  %8109 = load i64, i64* %x09030000.i, align 8
  %neg27.i1516 = xor i64 %8109, -1
  %and28.i1517 = and i64 %8108, %neg27.i1516
  store i64 %and28.i1517, i64* %x1668B94B.i, align 8
  %8110 = load i64, i64* %x00220099.i, align 8
  %8111 = load i64, i64* %a4.addr.i1478, align 8
  %or29.i = or i64 %8110, %8111
  store i64 %or29.i, i64* %x20.i1490, align 8
  %8112 = load i64, i64* %x20.i1490, align 8
  %8113 = load i64, i64* %x1668B94B.i, align 8
  %xor30.i1518 = xor i64 %8112, %8113
  store i64 %xor30.i1518, i64* %x21.i1491, align 8
  %8114 = load i64*, i64** %out3.addr.i1483, align 8
  %8115 = load i64, i64* %8114, align 8
  %8116 = load i64, i64* %x21.i1491, align 8
  %xor31.i = xor i64 %8115, %8116
  %8117 = load i64*, i64** %out3.addr.i1483, align 8
  store i64 %xor31.i, i64* %8117, align 8
  %8118 = load i64, i64* %a2.addr.i1476, align 8
  %8119 = load i64, i64* %x5A5A5A5A.i, align 8
  %or32.i = or i64 %8118, %8119
  store i64 %or32.i, i64* %x7B7B7B7B.i, align 8
  %8120 = load i64, i64* %x3A6522FF.i, align 8
  %8121 = load i64, i64* %x7B7B7B7B.i, align 8
  %xor33.i1519 = xor i64 %8120, %8121
  store i64 %xor33.i1519, i64* %x411E5984.i, align 8
  %8122 = load i64, i64* %x11115555.i, align 8
  %8123 = load i64, i64* %x0FFFB9FD.i, align 8
  %or34.i1520 = or i64 %8122, %8123
  store i64 %or34.i1520, i64* %x1FFFFDFD.i, align 8
  %8124 = load i64, i64* %x411E5984.i, align 8
  %8125 = load i64, i64* %x1FFFFDFD.i, align 8
  %xor35.i1521 = xor i64 %8124, %8125
  store i64 %xor35.i1521, i64* %x5EE1A479.i, align 8
  %8126 = load i64, i64* %x22DD6699.i, align 8
  %8127 = load i64, i64* %x1E69B94B.i, align 8
  %xor36.i1522 = xor i64 %8126, %8127
  store i64 %xor36.i1522, i64* %x3CB4DFD2.i, align 8
  %8128 = load i64, i64* %a5.addr.i1479, align 8
  %8129 = load i64, i64* %x3CB4DFD2.i, align 8
  %neg37.i = xor i64 %8129, -1
  %and38.i1523 = and i64 %8128, %neg37.i
  store i64 %and38.i1523, i64* %x004B002D.i, align 8
  %8130 = load i64, i64* %x484D494C.i, align 8
  %neg39.i = xor i64 %8130, -1
  store i64 %neg39.i, i64* %xB7B2B6B3.i, align 8
  %8131 = load i64, i64* %x7B7B7B7B.i, align 8
  %8132 = load i64, i64* %xB7B2B6B3.i, align 8
  %xor40.i1524 = xor i64 %8131, %8132
  store i64 %xor40.i1524, i64* %xCCC9CDC8.i, align 8
  %8133 = load i64, i64* %x004B002D.i, align 8
  %8134 = load i64, i64* %xCCC9CDC8.i, align 8
  %xor41.i1525 = xor i64 %8133, %8134
  store i64 %xor41.i1525, i64* %xCC82CDE5.i, align 8
  %8135 = load i64, i64* %xCC82CDE5.i, align 8
  %8136 = load i64, i64* %a4.addr.i1478, align 8
  %neg42.i = xor i64 %8136, -1
  %and43.i1526 = and i64 %8135, %neg42.i
  store i64 %and43.i1526, i64* %x10.i1488, align 8
  %8137 = load i64, i64* %x10.i1488, align 8
  %8138 = load i64, i64* %x5EE1A479.i, align 8
  %xor44.i1527 = xor i64 %8137, %8138
  store i64 %xor44.i1527, i64* %x11.i1489, align 8
  %8139 = load i64*, i64** %out2.addr.i1482, align 8
  %8140 = load i64, i64* %8139, align 8
  %8141 = load i64, i64* %x11.i1489, align 8
  %xor45.i1528 = xor i64 %8140, %8141
  %8142 = load i64*, i64** %out2.addr.i1482, align 8
  store i64 %xor45.i1528, i64* %8142, align 8
  %8143 = load i64, i64* %a6.addr.i1480, align 8
  %8144 = load i64, i64* %x00551144.i, align 8
  %xor46.i1529 = xor i64 %8143, %8144
  store i64 %xor46.i1529, i64* %x0055EEBB.i, align 8
  %8145 = load i64, i64* %a1.addr.i1475, align 8
  %8146 = load i64, i64* %x0F0FB9BC.i, align 8
  %xor47.i1530 = xor i64 %8145, %8146
  store i64 %xor47.i1530, i64* %x5A5AECE9.i, align 8
  %8147 = load i64, i64* %x0055EEBB.i, align 8
  %8148 = load i64, i64* %x5A5AECE9.i, align 8
  %and48.i1531 = and i64 %8147, %8148
  store i64 %and48.i1531, i64* %x0050ECA9.i, align 8
  %8149 = load i64, i64* %x09030C06.i, align 8
  %8150 = load i64, i64* %xCCC9CDC8.i, align 8
  %xor49.i1532 = xor i64 %8149, %8150
  store i64 %xor49.i1532, i64* %xC5CAC1CE.i, align 8
  %8151 = load i64, i64* %x0050ECA9.i, align 8
  %8152 = load i64, i64* %xC5CAC1CE.i, align 8
  %xor50.i = xor i64 %8151, %8152
  store i64 %xor50.i, i64* %xC59A2D67.i, align 8
  %8153 = load i64, i64* %x0FFFB9FD.i, align 8
  %8154 = load i64, i64* %a4.addr.i1478, align 8
  %neg51.i = xor i64 %8154, -1
  %and52.i = and i64 %8153, %neg51.i
  store i64 %and52.i, i64* %x00.i1486, align 8
  %8155 = load i64, i64* %x00.i1486, align 8
  %8156 = load i64, i64* %xC59A2D67.i, align 8
  %xor53.i1533 = xor i64 %8155, %8156
  store i64 %xor53.i1533, i64* %x01.i1487, align 8
  %8157 = load i64*, i64** %out1.addr.i1481, align 8
  %8158 = load i64, i64* %8157, align 8
  %8159 = load i64, i64* %x01.i1487, align 8
  %xor54.i = xor i64 %8158, %8159
  %8160 = load i64*, i64** %out1.addr.i1481, align 8
  store i64 %xor54.i, i64* %8160, align 8
  %8161 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 55), align 8
  %8162 = load i64**, i64*** %k, align 8
  %arrayidx1326 = getelementptr inbounds i64*, i64** %8162, i64 84
  %8163 = load i64*, i64** %arrayidx1326, align 8
  %arrayidx1327 = getelementptr inbounds i64, i64* %8163, i64 0
  %8164 = load i64, i64* %arrayidx1327, align 8
  %xor1328 = xor i64 %8161, %8164
  %8165 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 56), align 8
  %8166 = load i64**, i64*** %k, align 8
  %arrayidx1329 = getelementptr inbounds i64*, i64** %8166, i64 85
  %8167 = load i64*, i64** %arrayidx1329, align 8
  %arrayidx1330 = getelementptr inbounds i64, i64* %8167, i64 0
  %8168 = load i64, i64* %arrayidx1330, align 8
  %xor1331 = xor i64 %8165, %8168
  %8169 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 57), align 8
  %8170 = load i64**, i64*** %k, align 8
  %arrayidx1332 = getelementptr inbounds i64*, i64** %8170, i64 86
  %8171 = load i64*, i64** %arrayidx1332, align 8
  %arrayidx1333 = getelementptr inbounds i64, i64* %8171, i64 0
  %8172 = load i64, i64* %arrayidx1333, align 8
  %xor1334 = xor i64 %8169, %8172
  %8173 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 58), align 8
  %8174 = load i64**, i64*** %k, align 8
  %arrayidx1335 = getelementptr inbounds i64*, i64** %8174, i64 87
  %8175 = load i64*, i64** %arrayidx1335, align 8
  %arrayidx1336 = getelementptr inbounds i64, i64* %8175, i64 0
  %8176 = load i64, i64* %arrayidx1336, align 8
  %xor1337 = xor i64 %8173, %8176
  %8177 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 59), align 8
  %8178 = load i64**, i64*** %k, align 8
  %arrayidx1338 = getelementptr inbounds i64*, i64** %8178, i64 88
  %8179 = load i64*, i64** %arrayidx1338, align 8
  %arrayidx1339 = getelementptr inbounds i64, i64* %8179, i64 0
  %8180 = load i64, i64* %arrayidx1339, align 8
  %xor1340 = xor i64 %8177, %8180
  %8181 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 60), align 8
  %8182 = load i64**, i64*** %k, align 8
  %arrayidx1341 = getelementptr inbounds i64*, i64** %8182, i64 89
  %8183 = load i64*, i64** %arrayidx1341, align 8
  %arrayidx1342 = getelementptr inbounds i64, i64* %8183, i64 0
  %8184 = load i64, i64* %arrayidx1342, align 8
  %xor1343 = xor i64 %8181, %8184
  store i64 %xor1328, i64* %a1.addr.i1420, align 8
  store i64 %xor1331, i64* %a2.addr.i1421, align 8
  store i64 %xor1334, i64* %a3.addr.i1422, align 8
  store i64 %xor1337, i64* %a4.addr.i1423, align 8
  store i64 %xor1340, i64* %a5.addr.i1424, align 8
  store i64 %xor1343, i64* %a6.addr.i1425, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 31), i64** %out1.addr.i1426, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 11), i64** %out2.addr.i1427, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 21), i64** %out3.addr.i1428, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 6), i64** %out4.addr.i1429, align 8
  %8185 = load i64, i64* %a4.addr.i1423, align 8
  %8186 = load i64, i64* %a5.addr.i1424, align 8
  %xor.i1438 = xor i64 %8185, %8186
  store i64 %xor.i1438, i64* %x0FF00FF0.i, align 8
  %8187 = load i64, i64* %a3.addr.i1422, align 8
  %8188 = load i64, i64* %x0FF00FF0.i, align 8
  %xor1.i1439 = xor i64 %8187, %8188
  store i64 %xor1.i1439, i64* %x3CC33CC3.i, align 8
  %8189 = load i64, i64* %a6.addr.i1425, align 8
  %8190 = load i64, i64* %x3CC33CC3.i, align 8
  %and.i1440 = and i64 %8189, %8190
  store i64 %and.i1440, i64* %x00003CC3.i, align 8
  %8191 = load i64, i64* %a4.addr.i1423, align 8
  %8192 = load i64, i64* %x0FF00FF0.i, align 8
  %and2.i1441 = and i64 %8191, %8192
  store i64 %and2.i1441, i64* %x0F000F00.i, align 8
  %8193 = load i64, i64* %a2.addr.i1421, align 8
  %8194 = load i64, i64* %x0F000F00.i, align 8
  %xor3.i1442 = xor i64 %8193, %8194
  store i64 %xor3.i1442, i64* %x5A555A55.i, align 8
  %8195 = load i64, i64* %x00003CC3.i, align 8
  %8196 = load i64, i64* %x5A555A55.i, align 8
  %and4.i = and i64 %8195, %8196
  store i64 %and4.i, i64* %x00001841.i, align 8
  %8197 = load i64, i64* %a6.addr.i1425, align 8
  %8198 = load i64, i64* %x0F000F00.i, align 8
  %and5.i1443 = and i64 %8197, %8198
  store i64 %and5.i1443, i64* %x00000F00.i, align 8
  %8199 = load i64, i64* %a3.addr.i1422, align 8
  %8200 = load i64, i64* %x00000F00.i, align 8
  %xor6.i1444 = xor i64 %8199, %8200
  store i64 %xor6.i1444, i64* %x33333C33.i, align 8
  %8201 = load i64, i64* %x5A555A55.i, align 8
  %8202 = load i64, i64* %x33333C33.i, align 8
  %or.i1445 = or i64 %8201, %8202
  store i64 %or.i1445, i64* %x7B777E77.i, align 8
  %8203 = load i64, i64* %a6.addr.i1425, align 8
  %8204 = load i64, i64* %x0FF00FF0.i, align 8
  %xor7.i1446 = xor i64 %8203, %8204
  store i64 %xor7.i1446, i64* %x0FF0F00F.i, align 8
  %8205 = load i64, i64* %x7B777E77.i, align 8
  %8206 = load i64, i64* %x0FF0F00F.i, align 8
  %xor8.i = xor i64 %8205, %8206
  store i64 %xor8.i, i64* %x74878E78.i, align 8
  %8207 = load i64, i64* %a1.addr.i1420, align 8
  %8208 = load i64, i64* %x00001841.i, align 8
  %neg.i1447 = xor i64 %8208, -1
  %and9.i1448 = and i64 %8207, %neg.i1447
  store i64 %and9.i1448, i64* %x30.i1436, align 8
  %8209 = load i64, i64* %x30.i1436, align 8
  %8210 = load i64, i64* %x74878E78.i, align 8
  %xor10.i1449 = xor i64 %8209, %8210
  store i64 %xor10.i1449, i64* %x31.i1437, align 8
  %8211 = load i64*, i64** %out4.addr.i1429, align 8
  %8212 = load i64, i64* %8211, align 8
  %8213 = load i64, i64* %x31.i1437, align 8
  %xor11.i1450 = xor i64 %8212, %8213
  %8214 = load i64*, i64** %out4.addr.i1429, align 8
  store i64 %xor11.i1450, i64* %8214, align 8
  %8215 = load i64, i64* %a5.addr.i1424, align 8
  %8216 = load i64, i64* %x3CC33CC3.i, align 8
  %neg12.i1451 = xor i64 %8216, -1
  %and13.i1452 = and i64 %8215, %neg12.i1451
  store i64 %and13.i1452, i64* %x003C003C.i, align 8
  %8217 = load i64, i64* %x5A555A55.i, align 8
  %8218 = load i64, i64* %x003C003C.i, align 8
  %or14.i1453 = or i64 %8217, %8218
  store i64 %or14.i1453, i64* %x5A7D5A7D.i, align 8
  %8219 = load i64, i64* %x00003CC3.i, align 8
  %8220 = load i64, i64* %x33333C33.i, align 8
  %xor15.i = xor i64 %8219, %8220
  store i64 %xor15.i, i64* %x333300F0.i, align 8
  %8221 = load i64, i64* %x5A7D5A7D.i, align 8
  %8222 = load i64, i64* %x333300F0.i, align 8
  %xor16.i = xor i64 %8221, %8222
  store i64 %xor16.i, i64* %x694E5A8D.i, align 8
  %8223 = load i64, i64* %x00003CC3.i, align 8
  %8224 = load i64, i64* %x0FF0F00F.i, align 8
  %xor17.i1454 = xor i64 %8223, %8224
  store i64 %xor17.i1454, i64* %x0FF0CCCC.i, align 8
  %8225 = load i64, i64* %a4.addr.i1423, align 8
  %8226 = load i64, i64* %x0FF0CCCC.i, align 8
  %neg18.i = xor i64 %8226, -1
  %and19.i1455 = and i64 %8225, %neg18.i
  store i64 %and19.i1455, i64* %x000F0303.i, align 8
  %8227 = load i64, i64* %x5A555A55.i, align 8
  %8228 = load i64, i64* %x000F0303.i, align 8
  %neg20.i = xor i64 %8228, -1
  %and21.i = and i64 %8227, %neg20.i
  store i64 %and21.i, i64* %x5A505854.i, align 8
  %8229 = load i64, i64* %a5.addr.i1424, align 8
  %8230 = load i64, i64* %x333300F0.i, align 8
  %xor22.i1456 = xor i64 %8229, %8230
  store i64 %xor22.i1456, i64* %x33CC000F.i, align 8
  %8231 = load i64, i64* %x5A505854.i, align 8
  %8232 = load i64, i64* %x33CC000F.i, align 8
  %xor23.i = xor i64 %8231, %8232
  store i64 %xor23.i, i64* %x699C585B.i, align 8
  %8233 = load i64, i64* %x0F000F00.i, align 8
  %8234 = load i64, i64* %x74878E78.i, align 8
  %or24.i1457 = or i64 %8233, %8234
  store i64 %or24.i1457, i64* %x7F878F78.i, align 8
  %8235 = load i64, i64* %a3.addr.i1422, align 8
  %8236 = load i64, i64* %x699C585B.i, align 8
  %and25.i1458 = and i64 %8235, %8236
  store i64 %and25.i1458, i64* %x21101013.i, align 8
  %8237 = load i64, i64* %x7F878F78.i, align 8
  %8238 = load i64, i64* %x21101013.i, align 8
  %or26.i = or i64 %8237, %8238
  store i64 %or26.i, i64* %x7F979F7B.i, align 8
  %8239 = load i64, i64* %x3CC33CC3.i, align 8
  %8240 = load i64, i64* %x0FF0F00F.i, align 8
  %neg27.i = xor i64 %8240, -1
  %and28.i = and i64 %8239, %neg27.i
  store i64 %and28.i, i64* %x30030CC0.i, align 8
  %8241 = load i64, i64* %x7F979F7B.i, align 8
  %8242 = load i64, i64* %x30030CC0.i, align 8
  %xor29.i1459 = xor i64 %8241, %8242
  store i64 %xor29.i1459, i64* %x4F9493BB.i, align 8
  %8243 = load i64, i64* %x4F9493BB.i, align 8
  %8244 = load i64, i64* %a1.addr.i1420, align 8
  %neg30.i1460 = xor i64 %8244, -1
  %and31.i1461 = and i64 %8243, %neg30.i1460
  store i64 %and31.i1461, i64* %x00.i1430, align 8
  %8245 = load i64, i64* %x00.i1430, align 8
  %8246 = load i64, i64* %x694E5A8D.i, align 8
  %xor32.i1462 = xor i64 %8245, %8246
  store i64 %xor32.i1462, i64* %x01.i1431, align 8
  %8247 = load i64*, i64** %out1.addr.i1426, align 8
  %8248 = load i64, i64* %8247, align 8
  %8249 = load i64, i64* %x01.i1431, align 8
  %xor33.i1463 = xor i64 %8248, %8249
  %8250 = load i64*, i64** %out1.addr.i1426, align 8
  store i64 %xor33.i1463, i64* %8250, align 8
  %8251 = load i64, i64* %x699C585B.i, align 8
  %8252 = load i64, i64* %x4F9493BB.i, align 8
  %or34.i = or i64 %8251, %8252
  store i64 %or34.i, i64* %x6F9CDBFB.i, align 8
  %8253 = load i64, i64* %a6.addr.i1425, align 8
  %8254 = load i64, i64* %x6F9CDBFB.i, align 8
  %and35.i = and i64 %8253, %8254
  store i64 %and35.i, i64* %x0000DBFB.i, align 8
  %8255 = load i64, i64* %a2.addr.i1421, align 8
  %8256 = load i64, i64* %x0000DBFB.i, align 8
  %and36.i = and i64 %8255, %8256
  store i64 %and36.i, i64* %x00005151.i, align 8
  %8257 = load i64, i64* %x694E5A8D.i, align 8
  %8258 = load i64, i64* %x4F9493BB.i, align 8
  %xor37.i1464 = xor i64 %8257, %8258
  store i64 %xor37.i1464, i64* %x26DAC936.i, align 8
  %8259 = load i64, i64* %x00005151.i, align 8
  %8260 = load i64, i64* %x26DAC936.i, align 8
  %xor38.i = xor i64 %8259, %8260
  store i64 %xor38.i, i64* %x26DA9867.i, align 8
  %8261 = load i64, i64* %a5.addr.i1424, align 8
  %8262 = load i64, i64* %x21101013.i, align 8
  %or39.i = or i64 %8261, %8262
  store i64 %or39.i, i64* %x21FF10FF.i, align 8
  %8263 = load i64, i64* %x0000DBFB.i, align 8
  %8264 = load i64, i64* %x21FF10FF.i, align 8
  %xor40.i1465 = xor i64 %8263, %8264
  store i64 %xor40.i1465, i64* %x21FFCB04.i, align 8
  %8265 = load i64, i64* %a5.addr.i1424, align 8
  %8266 = load i64, i64* %x26DAC936.i, align 8
  %xor41.i1466 = xor i64 %8265, %8266
  store i64 %xor41.i1466, i64* %x2625C9C9.i, align 8
  %8267 = load i64, i64* %x21FFCB04.i, align 8
  %8268 = load i64, i64* %x2625C9C9.i, align 8
  %or42.i1467 = or i64 %8267, %8268
  store i64 %or42.i1467, i64* %x27FFCBCD.i, align 8
  %8269 = load i64, i64* %x27FFCBCD.i, align 8
  %8270 = load i64, i64* %a1.addr.i1420, align 8
  %and43.i1468 = and i64 %8269, %8270
  store i64 %and43.i1468, i64* %x20.i1434, align 8
  %8271 = load i64, i64* %x20.i1434, align 8
  %8272 = load i64, i64* %x699C585B.i, align 8
  %xor44.i1469 = xor i64 %8271, %8272
  store i64 %xor44.i1469, i64* %x21.i1435, align 8
  %8273 = load i64*, i64** %out3.addr.i1428, align 8
  %8274 = load i64, i64* %8273, align 8
  %8275 = load i64, i64* %x21.i1435, align 8
  %xor45.i1470 = xor i64 %8274, %8275
  %8276 = load i64*, i64** %out3.addr.i1428, align 8
  store i64 %xor45.i1470, i64* %8276, align 8
  %8277 = load i64, i64* %x0000DBFB.i, align 8
  %8278 = load i64, i64* %x27FFCBCD.i, align 8
  %xor46.i = xor i64 %8277, %8278
  store i64 %xor46.i, i64* %x27FF1036.i, align 8
  %8279 = load i64, i64* %x003C003C.i, align 8
  %8280 = load i64, i64* %x27FF1036.i, align 8
  %or47.i1471 = or i64 %8279, %8280
  store i64 %or47.i1471, i64* %x27FF103E.i, align 8
  %8281 = load i64, i64* %x4F9493BB.i, align 8
  %neg48.i = xor i64 %8281, -1
  store i64 %neg48.i, i64* %xB06B6C44.i, align 8
  %8282 = load i64, i64* %x27FF103E.i, align 8
  %8283 = load i64, i64* %xB06B6C44.i, align 8
  %xor49.i1472 = xor i64 %8282, %8283
  store i64 %xor49.i1472, i64* %x97947C7A.i, align 8
  %8284 = load i64, i64* %x97947C7A.i, align 8
  %8285 = load i64, i64* %a1.addr.i1420, align 8
  %neg50.i = xor i64 %8285, -1
  %and51.i1473 = and i64 %8284, %neg50.i
  store i64 %and51.i1473, i64* %x10.i1432, align 8
  %8286 = load i64, i64* %x10.i1432, align 8
  %8287 = load i64, i64* %x26DA9867.i, align 8
  %xor52.i1474 = xor i64 %8286, %8287
  store i64 %xor52.i1474, i64* %x11.i1433, align 8
  %8288 = load i64*, i64** %out2.addr.i1427, align 8
  %8289 = load i64, i64* %8288, align 8
  %8290 = load i64, i64* %x11.i1433, align 8
  %xor53.i = xor i64 %8289, %8290
  %8291 = load i64*, i64** %out2.addr.i1427, align 8
  store i64 %xor53.i, i64* %8291, align 8
  %8292 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 59), align 8
  %8293 = load i64**, i64*** %k, align 8
  %arrayidx1344 = getelementptr inbounds i64*, i64** %8293, i64 90
  %8294 = load i64*, i64** %arrayidx1344, align 8
  %arrayidx1345 = getelementptr inbounds i64, i64* %8294, i64 0
  %8295 = load i64, i64* %arrayidx1345, align 8
  %xor1346 = xor i64 %8292, %8295
  %8296 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 60), align 8
  %8297 = load i64**, i64*** %k, align 8
  %arrayidx1347 = getelementptr inbounds i64*, i64** %8297, i64 91
  %8298 = load i64*, i64** %arrayidx1347, align 8
  %arrayidx1348 = getelementptr inbounds i64, i64* %8298, i64 0
  %8299 = load i64, i64* %arrayidx1348, align 8
  %xor1349 = xor i64 %8296, %8299
  %8300 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 61), align 8
  %8301 = load i64**, i64*** %k, align 8
  %arrayidx1350 = getelementptr inbounds i64*, i64** %8301, i64 92
  %8302 = load i64*, i64** %arrayidx1350, align 8
  %arrayidx1351 = getelementptr inbounds i64, i64* %8302, i64 0
  %8303 = load i64, i64* %arrayidx1351, align 8
  %xor1352 = xor i64 %8300, %8303
  %8304 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 62), align 8
  %8305 = load i64**, i64*** %k, align 8
  %arrayidx1353 = getelementptr inbounds i64*, i64** %8305, i64 93
  %8306 = load i64*, i64** %arrayidx1353, align 8
  %arrayidx1354 = getelementptr inbounds i64, i64* %8306, i64 0
  %8307 = load i64, i64* %arrayidx1354, align 8
  %xor1355 = xor i64 %8304, %8307
  %8308 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 63), align 8
  %8309 = load i64**, i64*** %k, align 8
  %arrayidx1356 = getelementptr inbounds i64*, i64** %8309, i64 94
  %8310 = load i64*, i64** %arrayidx1356, align 8
  %arrayidx1357 = getelementptr inbounds i64, i64* %8310, i64 0
  %8311 = load i64, i64* %arrayidx1357, align 8
  %xor1358 = xor i64 %8308, %8311
  %8312 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 32), align 8
  %8313 = load i64**, i64*** %k, align 8
  %arrayidx1359 = getelementptr inbounds i64*, i64** %8313, i64 95
  %8314 = load i64*, i64** %arrayidx1359, align 8
  %arrayidx1360 = getelementptr inbounds i64, i64* %8314, i64 0
  %8315 = load i64, i64* %arrayidx1360, align 8
  %xor1361 = xor i64 %8312, %8315
  store i64 %xor1346, i64* %a1.addr.i1374, align 8
  store i64 %xor1349, i64* %a2.addr.i1375, align 8
  store i64 %xor1352, i64* %a3.addr.i1376, align 8
  store i64 %xor1355, i64* %a4.addr.i1377, align 8
  store i64 %xor1358, i64* %a5.addr.i1378, align 8
  store i64 %xor1361, i64* %a6.addr.i1379, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 4), i64** %out1.addr.i1380, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 26), i64** %out2.addr.i1381, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 14), i64** %out3.addr.i1382, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 20), i64** %out4.addr.i1383, align 8
  %8316 = load i64, i64* %a3.addr.i1376, align 8
  %8317 = load i64, i64* %a2.addr.i1375, align 8
  %neg.i1392 = xor i64 %8317, -1
  %and.i1393 = and i64 %8316, %neg.i1392
  store i64 %and.i1393, i64* %x0C0C0C0C.i, align 8
  %8318 = load i64, i64* %a5.addr.i1378, align 8
  %8319 = load i64, i64* %a3.addr.i1376, align 8
  %neg1.i = xor i64 %8319, -1
  %and2.i1394 = and i64 %8318, %neg1.i
  store i64 %and2.i1394, i64* %x0000F0F0.i, align 8
  %8320 = load i64, i64* %a4.addr.i1377, align 8
  %8321 = load i64, i64* %x0000F0F0.i, align 8
  %xor.i1395 = xor i64 %8320, %8321
  store i64 %xor.i1395, i64* %x00FFF00F.i, align 8
  %8322 = load i64, i64* %a1.addr.i1374, align 8
  %8323 = load i64, i64* %x00FFF00F.i, align 8
  %and3.i = and i64 %8322, %8323
  store i64 %and3.i, i64* %x00555005.i, align 8
  %8324 = load i64, i64* %x00555005.i, align 8
  %8325 = load i64, i64* %x0C0C0C0C.i, align 8
  %neg4.i1396 = xor i64 %8325, -1
  %and5.i1397 = and i64 %8324, %neg4.i1396
  store i64 %and5.i1397, i64* %x00515001.i, align 8
  %8326 = load i64, i64* %a2.addr.i1375, align 8
  %8327 = load i64, i64* %x00FFF00F.i, align 8
  %neg6.i = xor i64 %8327, -1
  %and7.i = and i64 %8326, %neg6.i
  store i64 %and7.i, i64* %x33000330.i, align 8
  %8328 = load i64, i64* %a1.addr.i1374, align 8
  %8329 = load i64, i64* %x33000330.i, align 8
  %or.i1398 = or i64 %8328, %8329
  store i64 %or.i1398, i64* %x77555775.i, align 8
  %8330 = load i64, i64* %a2.addr.i1375, align 8
  %8331 = load i64, i64* %a3.addr.i1376, align 8
  %neg8.i1399 = xor i64 %8331, -1
  %and9.i1400 = and i64 %8330, %neg8.i1399
  store i64 %and9.i1400, i64* %x30303030.i, align 8
  %8332 = load i64, i64* %a5.addr.i1378, align 8
  %8333 = load i64, i64* %x30303030.i, align 8
  %xor10.i = xor i64 %8332, %8333
  store i64 %xor10.i, i64* %x3030CFCF.i, align 8
  %8334 = load i64, i64* %x77555775.i, align 8
  %8335 = load i64, i64* %x3030CFCF.i, align 8
  %and11.i1401 = and i64 %8334, %8335
  store i64 %and11.i1401, i64* %x30104745.i, align 8
  %8336 = load i64, i64* %x00555005.i, align 8
  %8337 = load i64, i64* %x30104745.i, align 8
  %or12.i = or i64 %8336, %8337
  store i64 %or12.i, i64* %x30555745.i, align 8
  %8338 = load i64, i64* %x00FFF00F.i, align 8
  %neg13.i = xor i64 %8338, -1
  store i64 %neg13.i, i64* %xFF000FF0.i, align 8
  %8339 = load i64, i64* %x30104745.i, align 8
  %8340 = load i64, i64* %xFF000FF0.i, align 8
  %xor14.i = xor i64 %8339, %8340
  store i64 %xor14.i, i64* %xCF1048B5.i, align 8
  %8341 = load i64, i64* %a3.addr.i1376, align 8
  %8342 = load i64, i64* %x77555775.i, align 8
  %neg15.i = xor i64 %8342, -1
  %and16.i1402 = and i64 %8341, %neg15.i
  store i64 %and16.i1402, i64* %x080A080A.i, align 8
  %8343 = load i64, i64* %xCF1048B5.i, align 8
  %8344 = load i64, i64* %x080A080A.i, align 8
  %xor17.i = xor i64 %8343, %8344
  store i64 %xor17.i, i64* %xC71A40BF.i, align 8
  %8345 = load i64, i64* %x0C0C0C0C.i, align 8
  %8346 = load i64, i64* %xC71A40BF.i, align 8
  %xor18.i1403 = xor i64 %8345, %8346
  store i64 %xor18.i1403, i64* %xCB164CB3.i, align 8
  %8347 = load i64, i64* %x00515001.i, align 8
  %8348 = load i64, i64* %a6.addr.i1379, align 8
  %or19.i = or i64 %8347, %8348
  store i64 %or19.i, i64* %x10.i1386, align 8
  %8349 = load i64, i64* %x10.i1386, align 8
  %8350 = load i64, i64* %xCB164CB3.i, align 8
  %xor20.i = xor i64 %8349, %8350
  store i64 %xor20.i, i64* %x11.i1387, align 8
  %8351 = load i64*, i64** %out2.addr.i1381, align 8
  %8352 = load i64, i64* %8351, align 8
  %8353 = load i64, i64* %x11.i1387, align 8
  %xor21.i1404 = xor i64 %8352, %8353
  %8354 = load i64*, i64** %out2.addr.i1381, align 8
  store i64 %xor21.i1404, i64* %8354, align 8
  %8355 = load i64, i64* %a1.addr.i1374, align 8
  %8356 = load i64, i64* %xCB164CB3.i, align 8
  %xor22.i = xor i64 %8355, %8356
  store i64 %xor22.i, i64* %x9E4319E6.i, align 8
  %8357 = load i64, i64* %a5.addr.i1378, align 8
  %8358 = load i64, i64* %x9E4319E6.i, align 8
  %and23.i1405 = and i64 %8357, %8358
  store i64 %and23.i1405, i64* %x000019E6.i, align 8
  %8359 = load i64, i64* %a2.addr.i1375, align 8
  %8360 = load i64, i64* %xC71A40BF.i, align 8
  %xor24.i = xor i64 %8359, %8360
  store i64 %xor24.i, i64* %xF429738C.i, align 8
  %8361 = load i64, i64* %x000019E6.i, align 8
  %8362 = load i64, i64* %xF429738C.i, align 8
  %xor25.i = xor i64 %8361, %8362
  store i64 %xor25.i, i64* %xF4296A6A.i, align 8
  %8363 = load i64, i64* %x33000330.i, align 8
  %8364 = load i64, i64* %xF4296A6A.i, align 8
  %xor26.i = xor i64 %8363, %8364
  store i64 %xor26.i, i64* %xC729695A.i, align 8
  %8365 = load i64, i64* %x30555745.i, align 8
  %8366 = load i64, i64* %xF4296A6A.i, align 8
  %xor27.i1406 = xor i64 %8365, %8366
  store i64 %xor27.i1406, i64* %xC47C3D2F.i, align 8
  %8367 = load i64, i64* %a2.addr.i1375, align 8
  %8368 = load i64, i64* %xC47C3D2F.i, align 8
  %or28.i1407 = or i64 %8367, %8368
  store i64 %or28.i1407, i64* %xF77F3F3F.i, align 8
  %8369 = load i64, i64* %a5.addr.i1378, align 8
  %8370 = load i64, i64* %x9E4319E6.i, align 8
  %xor29.i = xor i64 %8369, %8370
  store i64 %xor29.i, i64* %x9E43E619.i, align 8
  %8371 = load i64, i64* %xF77F3F3F.i, align 8
  %8372 = load i64, i64* %x9E43E619.i, align 8
  %xor30.i = xor i64 %8371, %8372
  store i64 %xor30.i, i64* %x693CD926.i, align 8
  %8373 = load i64, i64* %x30555745.i, align 8
  %8374 = load i64, i64* %a6.addr.i1379, align 8
  %and31.i1408 = and i64 %8373, %8374
  store i64 %and31.i1408, i64* %x20.i1388, align 8
  %8375 = load i64, i64* %x20.i1388, align 8
  %8376 = load i64, i64* %x693CD926.i, align 8
  %xor32.i1409 = xor i64 %8375, %8376
  store i64 %xor32.i1409, i64* %x21.i1389, align 8
  %8377 = load i64*, i64** %out3.addr.i1382, align 8
  %8378 = load i64, i64* %8377, align 8
  %8379 = load i64, i64* %x21.i1389, align 8
  %xor33.i = xor i64 %8378, %8379
  %8380 = load i64*, i64** %out3.addr.i1382, align 8
  store i64 %xor33.i, i64* %8380, align 8
  %8381 = load i64, i64* %x3030CFCF.i, align 8
  %8382 = load i64, i64* %xC729695A.i, align 8
  %xor34.i = xor i64 %8381, %8382
  store i64 %xor34.i, i64* %xF719A695.i, align 8
  %8383 = load i64, i64* %a4.addr.i1377, align 8
  %8384 = load i64, i64* %xF429738C.i, align 8
  %or35.i = or i64 %8383, %8384
  store i64 %or35.i, i64* %xF4FF73FF.i, align 8
  %8385 = load i64, i64* %xF719A695.i, align 8
  %8386 = load i64, i64* %xF4FF73FF.i, align 8
  %xor36.i1410 = xor i64 %8385, %8386
  store i64 %xor36.i1410, i64* %x03E6D56A.i, align 8
  %8387 = load i64, i64* %a1.addr.i1374, align 8
  %8388 = load i64, i64* %x03E6D56A.i, align 8
  %xor37.i1411 = xor i64 %8387, %8388
  store i64 %xor37.i1411, i64* %x56B3803F.i, align 8
  %8389 = load i64, i64* %x56B3803F.i, align 8
  %8390 = load i64, i64* %a6.addr.i1379, align 8
  %and38.i1412 = and i64 %8389, %8390
  store i64 %and38.i1412, i64* %x30.i1390, align 8
  %8391 = load i64, i64* %x30.i1390, align 8
  %8392 = load i64, i64* %xC729695A.i, align 8
  %xor39.i1413 = xor i64 %8391, %8392
  store i64 %xor39.i1413, i64* %x31.i1391, align 8
  %8393 = load i64*, i64** %out4.addr.i1383, align 8
  %8394 = load i64, i64* %8393, align 8
  %8395 = load i64, i64* %x31.i1391, align 8
  %xor40.i1414 = xor i64 %8394, %8395
  %8396 = load i64*, i64** %out4.addr.i1383, align 8
  store i64 %xor40.i1414, i64* %8396, align 8
  %8397 = load i64, i64* %xF719A695.i, align 8
  %8398 = load i64, i64* %a4.addr.i1377, align 8
  %neg41.i = xor i64 %8398, -1
  %and42.i1415 = and i64 %8397, %neg41.i
  store i64 %and42.i1415, i64* %xF700A600.i, align 8
  %8399 = load i64, i64* %x693CD926.i, align 8
  %8400 = load i64, i64* %xF700A600.i, align 8
  %and43.i = and i64 %8399, %8400
  store i64 %and43.i, i64* %x61008000.i, align 8
  %8401 = load i64, i64* %x00515001.i, align 8
  %8402 = load i64, i64* %x03E6D56A.i, align 8
  %xor44.i1416 = xor i64 %8401, %8402
  store i64 %xor44.i1416, i64* %x03B7856B.i, align 8
  %8403 = load i64, i64* %x61008000.i, align 8
  %8404 = load i64, i64* %x03B7856B.i, align 8
  %xor45.i1417 = xor i64 %8403, %8404
  store i64 %xor45.i1417, i64* %x62B7056B.i, align 8
  %8405 = load i64, i64* %x62B7056B.i, align 8
  %8406 = load i64, i64* %a6.addr.i1379, align 8
  %or46.i1418 = or i64 %8405, %8406
  store i64 %or46.i1418, i64* %x00.i1384, align 8
  %8407 = load i64, i64* %x00.i1384, align 8
  %8408 = load i64, i64* %xC729695A.i, align 8
  %xor47.i1419 = xor i64 %8407, %8408
  store i64 %xor47.i1419, i64* %x01.i1385, align 8
  %8409 = load i64*, i64** %out1.addr.i1380, align 8
  %8410 = load i64, i64* %8409, align 8
  %8411 = load i64, i64* %x01.i1385, align 8
  %xor48.i = xor i64 %8410, %8411
  %8412 = load i64*, i64** %out1.addr.i1380, align 8
  store i64 %xor48.i, i64* %8412, align 8
  %8413 = load i64**, i64*** %k, align 8
  %add.ptr1362 = getelementptr inbounds i64*, i64** %8413, i64 96
  store i64** %add.ptr1362, i64*** %k, align 8
  br label %for.inc1363

for.inc1363:                                      ; preds = %for.body1025
  %8414 = load i32, i32* %jj, align 4
  %inc1364 = add nsw i32 %8414, 1
  store i32 %inc1364, i32* %jj, align 4
  br label %for.cond1023

for.end1365:                                      ; preds = %for.cond1023
  %8415 = load i64**, i64*** %k, align 8
  %add.ptr1366 = getelementptr inbounds i64*, i64** %8415, i64 -816
  store i64** %add.ptr1366, i64*** %k, align 8
  ret void

finalize_keys:                                    ; preds = %if.then
  store i32 0, i32* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 9), align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 2, i64 0), i64** %kp.i, align 8
  store i32 0, i32* %ic.i, align 4
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i, %finalize_keys
  %8416 = load i32, i32* %ic.i, align 4
  %cmp.i = icmp slt i32 %8416, 8
  br i1 %cmp.i, label %for.body.i, label %DES_bs_finalize_keys.exit

for.body.i:                                       ; preds = %for.cond.i
  %8417 = load i32, i32* %ic.i, align 4
  %idxprom.i = sext i32 %8417 to i64
  %arrayidx.i = getelementptr inbounds [8 x [8 x i64]], [8 x [8 x i64]]* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 7, i32 0), i64 0, i64 %idxprom.i
  %arrayidx1.i = getelementptr inbounds [8 x i64], [8 x i64]* %arrayidx.i, i64 0, i64 0
  store i64* %arrayidx1.i, i64** %vp.i, align 8
  %8418 = load i64*, i64** %vp.i, align 8
  %8419 = load i64, i64* %8418, align 8
  store i64 %8419, i64* %v0.i, align 8
  %8420 = load i64*, i64** %vp.i, align 8
  %arrayidx3.i = getelementptr inbounds i64, i64* %8420, i64 1
  %8421 = load i64, i64* %arrayidx3.i, align 8
  store i64 %8421, i64* %v1.i, align 8
  %8422 = load i64*, i64** %vp.i, align 8
  %arrayidx4.i = getelementptr inbounds i64, i64* %8422, i64 2
  %8423 = load i64, i64* %arrayidx4.i, align 8
  store i64 %8423, i64* %v2.i, align 8
  %8424 = load i64*, i64** %vp.i, align 8
  %arrayidx5.i = getelementptr inbounds i64, i64* %8424, i64 3
  %8425 = load i64, i64* %arrayidx5.i, align 8
  store i64 %8425, i64* %v3.i, align 8
  %8426 = load i64*, i64** %vp.i, align 8
  %arrayidx6.i = getelementptr inbounds i64, i64* %8426, i64 4
  %8427 = load i64, i64* %arrayidx6.i, align 8
  store i64 %8427, i64* %v4.i, align 8
  %8428 = load i64*, i64** %vp.i, align 8
  %arrayidx7.i = getelementptr inbounds i64, i64* %8428, i64 5
  %8429 = load i64, i64* %arrayidx7.i, align 8
  store i64 %8429, i64* %v5.i, align 8
  %8430 = load i64*, i64** %vp.i, align 8
  %arrayidx8.i = getelementptr inbounds i64, i64* %8430, i64 6
  %8431 = load i64, i64* %arrayidx8.i, align 8
  store i64 %8431, i64* %v6.i, align 8
  %8432 = load i64*, i64** %vp.i, align 8
  %arrayidx9.i = getelementptr inbounds i64, i64* %8432, i64 7
  %8433 = load i64, i64* %arrayidx9.i, align 8
  store i64 %8433, i64* %v7.i, align 8
  store i64 72340172838076673, i64* %m.i, align 8
  %8434 = load i64, i64* %v0.i, align 8
  %8435 = load i64, i64* %m.i, align 8
  %and.i1367 = and i64 %8434, %8435
  store i64 %and.i1367, i64* %va.i, align 8
  %8436 = load i64, i64* %v1.i, align 8
  %8437 = load i64, i64* %m.i, align 8
  %and10.i = and i64 %8436, %8437
  store i64 %and10.i, i64* %tmp.i, align 8
  %8438 = load i64, i64* %tmp.i, align 8
  %shl.i = shl i64 %8438, 1
  store i64 %shl.i, i64* %vb.i, align 8
  %8439 = load i64, i64* %v2.i, align 8
  %8440 = load i64, i64* %m.i, align 8
  %and11.i = and i64 %8439, %8440
  store i64 %and11.i, i64* %tmp.i, align 8
  %8441 = load i64, i64* %tmp.i, align 8
  %shl12.i = shl i64 %8441, 2
  store i64 %shl12.i, i64* %tmp.i, align 8
  %8442 = load i64, i64* %va.i, align 8
  %8443 = load i64, i64* %tmp.i, align 8
  %or.i1368 = or i64 %8442, %8443
  store i64 %or.i1368, i64* %va.i, align 8
  %8444 = load i64, i64* %v3.i, align 8
  %8445 = load i64, i64* %m.i, align 8
  %and13.i1369 = and i64 %8444, %8445
  store i64 %and13.i1369, i64* %tmp.i, align 8
  %8446 = load i64, i64* %tmp.i, align 8
  %shl14.i = shl i64 %8446, 3
  store i64 %shl14.i, i64* %tmp.i, align 8
  %8447 = load i64, i64* %vb.i, align 8
  %8448 = load i64, i64* %tmp.i, align 8
  %or15.i1370 = or i64 %8447, %8448
  store i64 %or15.i1370, i64* %vb.i, align 8
  %8449 = load i64, i64* %v4.i, align 8
  %8450 = load i64, i64* %m.i, align 8
  %and16.i = and i64 %8449, %8450
  store i64 %and16.i, i64* %tmp.i, align 8
  %8451 = load i64, i64* %tmp.i, align 8
  %shl17.i = shl i64 %8451, 4
  store i64 %shl17.i, i64* %tmp.i, align 8
  %8452 = load i64, i64* %va.i, align 8
  %8453 = load i64, i64* %tmp.i, align 8
  %or18.i = or i64 %8452, %8453
  store i64 %or18.i, i64* %va.i, align 8
  %8454 = load i64, i64* %v5.i, align 8
  %8455 = load i64, i64* %m.i, align 8
  %and19.i = and i64 %8454, %8455
  store i64 %and19.i, i64* %tmp.i, align 8
  %8456 = load i64, i64* %tmp.i, align 8
  %shl20.i = shl i64 %8456, 5
  store i64 %shl20.i, i64* %tmp.i, align 8
  %8457 = load i64, i64* %vb.i, align 8
  %8458 = load i64, i64* %tmp.i, align 8
  %or21.i = or i64 %8457, %8458
  store i64 %or21.i, i64* %vb.i, align 8
  %8459 = load i64, i64* %v6.i, align 8
  %8460 = load i64, i64* %m.i, align 8
  %and22.i = and i64 %8459, %8460
  store i64 %and22.i, i64* %tmp.i, align 8
  %8461 = load i64, i64* %tmp.i, align 8
  %shl23.i = shl i64 %8461, 6
  store i64 %shl23.i, i64* %tmp.i, align 8
  %8462 = load i64, i64* %va.i, align 8
  %8463 = load i64, i64* %tmp.i, align 8
  %or24.i1371 = or i64 %8462, %8463
  store i64 %or24.i1371, i64* %va.i, align 8
  %8464 = load i64, i64* %v7.i, align 8
  %8465 = load i64, i64* %m.i, align 8
  %and25.i = and i64 %8464, %8465
  store i64 %and25.i, i64* %tmp.i, align 8
  %8466 = load i64, i64* %tmp.i, align 8
  %shl26.i = shl i64 %8466, 7
  store i64 %shl26.i, i64* %tmp.i, align 8
  %8467 = load i64, i64* %vb.i, align 8
  %8468 = load i64, i64* %tmp.i, align 8
  %or27.i = or i64 %8467, %8468
  store i64 %or27.i, i64* %vb.i, align 8
  %8469 = load i64, i64* %va.i, align 8
  %8470 = load i64, i64* %vb.i, align 8
  %or28.i = or i64 %8469, %8470
  %8471 = load i64*, i64** %kp.i, align 8
  store i64 %or28.i, i64* %8471, align 8
  %8472 = load i64*, i64** %kp.i, align 8
  %incdec.ptr.i = getelementptr inbounds i64, i64* %8472, i32 1
  store i64* %incdec.ptr.i, i64** %kp.i, align 8
  store i64 144680345676153346, i64* %m30.i, align 8
  %8473 = load i64, i64* %v0.i, align 8
  %8474 = load i64, i64* %m30.i, align 8
  %and37.i = and i64 %8473, %8474
  store i64 %and37.i, i64* %tmp36.i, align 8
  %8475 = load i64, i64* %tmp36.i, align 8
  %shr.i = lshr i64 %8475, 1
  store i64 %shr.i, i64* %va32.i, align 8
  %8476 = load i64, i64* %v1.i, align 8
  %8477 = load i64, i64* %m30.i, align 8
  %and38.i = and i64 %8476, %8477
  store i64 %and38.i, i64* %vb34.i, align 8
  %8478 = load i64, i64* %v2.i, align 8
  %8479 = load i64, i64* %m30.i, align 8
  %and39.i = and i64 %8478, %8479
  store i64 %and39.i, i64* %tmp36.i, align 8
  %8480 = load i64, i64* %tmp36.i, align 8
  %shl40.i = shl i64 %8480, 1
  store i64 %shl40.i, i64* %tmp36.i, align 8
  %8481 = load i64, i64* %va32.i, align 8
  %8482 = load i64, i64* %tmp36.i, align 8
  %or41.i = or i64 %8481, %8482
  store i64 %or41.i, i64* %va32.i, align 8
  %8483 = load i64, i64* %v3.i, align 8
  %8484 = load i64, i64* %m30.i, align 8
  %and42.i = and i64 %8483, %8484
  store i64 %and42.i, i64* %tmp36.i, align 8
  %8485 = load i64, i64* %tmp36.i, align 8
  %shl43.i = shl i64 %8485, 2
  store i64 %shl43.i, i64* %tmp36.i, align 8
  %8486 = load i64, i64* %vb34.i, align 8
  %8487 = load i64, i64* %tmp36.i, align 8
  %or44.i = or i64 %8486, %8487
  store i64 %or44.i, i64* %vb34.i, align 8
  %8488 = load i64, i64* %v4.i, align 8
  %8489 = load i64, i64* %m30.i, align 8
  %and45.i = and i64 %8488, %8489
  store i64 %and45.i, i64* %tmp36.i, align 8
  %8490 = load i64, i64* %tmp36.i, align 8
  %shl46.i = shl i64 %8490, 3
  store i64 %shl46.i, i64* %tmp36.i, align 8
  %8491 = load i64, i64* %va32.i, align 8
  %8492 = load i64, i64* %tmp36.i, align 8
  %or47.i = or i64 %8491, %8492
  store i64 %or47.i, i64* %va32.i, align 8
  %8493 = load i64, i64* %v5.i, align 8
  %8494 = load i64, i64* %m30.i, align 8
  %and48.i = and i64 %8493, %8494
  store i64 %and48.i, i64* %tmp36.i, align 8
  %8495 = load i64, i64* %tmp36.i, align 8
  %shl49.i = shl i64 %8495, 4
  store i64 %shl49.i, i64* %tmp36.i, align 8
  %8496 = load i64, i64* %vb34.i, align 8
  %8497 = load i64, i64* %tmp36.i, align 8
  %or50.i1372 = or i64 %8496, %8497
  store i64 %or50.i1372, i64* %vb34.i, align 8
  %8498 = load i64, i64* %v6.i, align 8
  %8499 = load i64, i64* %m30.i, align 8
  %and51.i = and i64 %8498, %8499
  store i64 %and51.i, i64* %tmp36.i, align 8
  %8500 = load i64, i64* %tmp36.i, align 8
  %shl52.i = shl i64 %8500, 5
  store i64 %shl52.i, i64* %tmp36.i, align 8
  %8501 = load i64, i64* %va32.i, align 8
  %8502 = load i64, i64* %tmp36.i, align 8
  %or53.i1373 = or i64 %8501, %8502
  store i64 %or53.i1373, i64* %va32.i, align 8
  %8503 = load i64, i64* %v7.i, align 8
  %8504 = load i64, i64* %m30.i, align 8
  %and54.i = and i64 %8503, %8504
  store i64 %and54.i, i64* %tmp36.i, align 8
  %8505 = load i64, i64* %tmp36.i, align 8
  %shl55.i = shl i64 %8505, 6
  store i64 %shl55.i, i64* %tmp36.i, align 8
  %8506 = load i64, i64* %vb34.i, align 8
  %8507 = load i64, i64* %tmp36.i, align 8
  %or56.i = or i64 %8506, %8507
  store i64 %or56.i, i64* %vb34.i, align 8
  %8508 = load i64, i64* %va32.i, align 8
  %8509 = load i64, i64* %vb34.i, align 8
  %or57.i = or i64 %8508, %8509
  %8510 = load i64*, i64** %kp.i, align 8
  store i64 %or57.i, i64* %8510, align 8
  %8511 = load i64*, i64** %kp.i, align 8
  %incdec.ptr58.i = getelementptr inbounds i64, i64* %8511, i32 1
  store i64* %incdec.ptr58.i, i64** %kp.i, align 8
  store i64 289360691352306692, i64* %m60.i, align 8
  %8512 = load i64, i64* %v0.i, align 8
  %8513 = load i64, i64* %m60.i, align 8
  %and67.i = and i64 %8512, %8513
  store i64 %and67.i, i64* %tmp66.i, align 8
  %8514 = load i64, i64* %tmp66.i, align 8
  %shr68.i = lshr i64 %8514, 2
  store i64 %shr68.i, i64* %va62.i, align 8
  %8515 = load i64, i64* %v1.i, align 8
  %8516 = load i64, i64* %m60.i, align 8
  %and69.i = and i64 %8515, %8516
  store i64 %and69.i, i64* %tmp66.i, align 8
  %8517 = load i64, i64* %tmp66.i, align 8
  %shr70.i = lshr i64 %8517, 1
  store i64 %shr70.i, i64* %vb64.i, align 8
  %8518 = load i64, i64* %v2.i, align 8
  %8519 = load i64, i64* %m60.i, align 8
  %and71.i = and i64 %8518, %8519
  store i64 %and71.i, i64* %tmp66.i, align 8
  %8520 = load i64, i64* %va62.i, align 8
  %8521 = load i64, i64* %tmp66.i, align 8
  %or72.i = or i64 %8520, %8521
  store i64 %or72.i, i64* %va62.i, align 8
  %8522 = load i64, i64* %v3.i, align 8
  %8523 = load i64, i64* %m60.i, align 8
  %and73.i = and i64 %8522, %8523
  store i64 %and73.i, i64* %tmp66.i, align 8
  %8524 = load i64, i64* %tmp66.i, align 8
  %shl74.i = shl i64 %8524, 1
  store i64 %shl74.i, i64* %tmp66.i, align 8
  %8525 = load i64, i64* %vb64.i, align 8
  %8526 = load i64, i64* %tmp66.i, align 8
  %or75.i = or i64 %8525, %8526
  store i64 %or75.i, i64* %vb64.i, align 8
  %8527 = load i64, i64* %v4.i, align 8
  %8528 = load i64, i64* %m60.i, align 8
  %and76.i = and i64 %8527, %8528
  store i64 %and76.i, i64* %tmp66.i, align 8
  %8529 = load i64, i64* %tmp66.i, align 8
  %shl77.i = shl i64 %8529, 2
  store i64 %shl77.i, i64* %tmp66.i, align 8
  %8530 = load i64, i64* %va62.i, align 8
  %8531 = load i64, i64* %tmp66.i, align 8
  %or78.i = or i64 %8530, %8531
  store i64 %or78.i, i64* %va62.i, align 8
  %8532 = load i64, i64* %v5.i, align 8
  %8533 = load i64, i64* %m60.i, align 8
  %and79.i = and i64 %8532, %8533
  store i64 %and79.i, i64* %tmp66.i, align 8
  %8534 = load i64, i64* %tmp66.i, align 8
  %shl80.i = shl i64 %8534, 3
  store i64 %shl80.i, i64* %tmp66.i, align 8
  %8535 = load i64, i64* %vb64.i, align 8
  %8536 = load i64, i64* %tmp66.i, align 8
  %or81.i = or i64 %8535, %8536
  store i64 %or81.i, i64* %vb64.i, align 8
  %8537 = load i64, i64* %v6.i, align 8
  %8538 = load i64, i64* %m60.i, align 8
  %and82.i = and i64 %8537, %8538
  store i64 %and82.i, i64* %tmp66.i, align 8
  %8539 = load i64, i64* %tmp66.i, align 8
  %shl83.i = shl i64 %8539, 4
  store i64 %shl83.i, i64* %tmp66.i, align 8
  %8540 = load i64, i64* %va62.i, align 8
  %8541 = load i64, i64* %tmp66.i, align 8
  %or84.i = or i64 %8540, %8541
  store i64 %or84.i, i64* %va62.i, align 8
  %8542 = load i64, i64* %v7.i, align 8
  %8543 = load i64, i64* %m60.i, align 8
  %and85.i = and i64 %8542, %8543
  store i64 %and85.i, i64* %tmp66.i, align 8
  %8544 = load i64, i64* %tmp66.i, align 8
  %shl86.i = shl i64 %8544, 5
  store i64 %shl86.i, i64* %tmp66.i, align 8
  %8545 = load i64, i64* %vb64.i, align 8
  %8546 = load i64, i64* %tmp66.i, align 8
  %or87.i = or i64 %8545, %8546
  store i64 %or87.i, i64* %vb64.i, align 8
  %8547 = load i64, i64* %va62.i, align 8
  %8548 = load i64, i64* %vb64.i, align 8
  %or88.i = or i64 %8547, %8548
  %8549 = load i64*, i64** %kp.i, align 8
  store i64 %or88.i, i64* %8549, align 8
  %8550 = load i64*, i64** %kp.i, align 8
  %incdec.ptr89.i = getelementptr inbounds i64, i64* %8550, i32 1
  store i64* %incdec.ptr89.i, i64** %kp.i, align 8
  store i64 578721382704613384, i64* %m91.i, align 8
  %8551 = load i64, i64* %v0.i, align 8
  %8552 = load i64, i64* %m91.i, align 8
  %and98.i = and i64 %8551, %8552
  store i64 %and98.i, i64* %tmp97.i, align 8
  %8553 = load i64, i64* %tmp97.i, align 8
  %shr99.i = lshr i64 %8553, 3
  store i64 %shr99.i, i64* %va93.i, align 8
  %8554 = load i64, i64* %v1.i, align 8
  %8555 = load i64, i64* %m91.i, align 8
  %and100.i = and i64 %8554, %8555
  store i64 %and100.i, i64* %tmp97.i, align 8
  %8556 = load i64, i64* %tmp97.i, align 8
  %shr101.i = lshr i64 %8556, 2
  store i64 %shr101.i, i64* %vb95.i, align 8
  %8557 = load i64, i64* %v2.i, align 8
  %8558 = load i64, i64* %m91.i, align 8
  %and102.i = and i64 %8557, %8558
  store i64 %and102.i, i64* %tmp97.i, align 8
  %8559 = load i64, i64* %tmp97.i, align 8
  %shr103.i = lshr i64 %8559, 1
  store i64 %shr103.i, i64* %tmp97.i, align 8
  %8560 = load i64, i64* %va93.i, align 8
  %8561 = load i64, i64* %tmp97.i, align 8
  %or104.i = or i64 %8560, %8561
  store i64 %or104.i, i64* %va93.i, align 8
  %8562 = load i64, i64* %v3.i, align 8
  %8563 = load i64, i64* %m91.i, align 8
  %and105.i = and i64 %8562, %8563
  store i64 %and105.i, i64* %tmp97.i, align 8
  %8564 = load i64, i64* %vb95.i, align 8
  %8565 = load i64, i64* %tmp97.i, align 8
  %or106.i = or i64 %8564, %8565
  store i64 %or106.i, i64* %vb95.i, align 8
  %8566 = load i64, i64* %v4.i, align 8
  %8567 = load i64, i64* %m91.i, align 8
  %and107.i = and i64 %8566, %8567
  store i64 %and107.i, i64* %tmp97.i, align 8
  %8568 = load i64, i64* %tmp97.i, align 8
  %shl108.i = shl i64 %8568, 1
  store i64 %shl108.i, i64* %tmp97.i, align 8
  %8569 = load i64, i64* %va93.i, align 8
  %8570 = load i64, i64* %tmp97.i, align 8
  %or109.i = or i64 %8569, %8570
  store i64 %or109.i, i64* %va93.i, align 8
  %8571 = load i64, i64* %v5.i, align 8
  %8572 = load i64, i64* %m91.i, align 8
  %and110.i = and i64 %8571, %8572
  store i64 %and110.i, i64* %tmp97.i, align 8
  %8573 = load i64, i64* %tmp97.i, align 8
  %shl111.i = shl i64 %8573, 2
  store i64 %shl111.i, i64* %tmp97.i, align 8
  %8574 = load i64, i64* %vb95.i, align 8
  %8575 = load i64, i64* %tmp97.i, align 8
  %or112.i = or i64 %8574, %8575
  store i64 %or112.i, i64* %vb95.i, align 8
  %8576 = load i64, i64* %v6.i, align 8
  %8577 = load i64, i64* %m91.i, align 8
  %and113.i = and i64 %8576, %8577
  store i64 %and113.i, i64* %tmp97.i, align 8
  %8578 = load i64, i64* %tmp97.i, align 8
  %shl114.i = shl i64 %8578, 3
  store i64 %shl114.i, i64* %tmp97.i, align 8
  %8579 = load i64, i64* %va93.i, align 8
  %8580 = load i64, i64* %tmp97.i, align 8
  %or115.i = or i64 %8579, %8580
  store i64 %or115.i, i64* %va93.i, align 8
  %8581 = load i64, i64* %v7.i, align 8
  %8582 = load i64, i64* %m91.i, align 8
  %and116.i = and i64 %8581, %8582
  store i64 %and116.i, i64* %tmp97.i, align 8
  %8583 = load i64, i64* %tmp97.i, align 8
  %shl117.i = shl i64 %8583, 4
  store i64 %shl117.i, i64* %tmp97.i, align 8
  %8584 = load i64, i64* %vb95.i, align 8
  %8585 = load i64, i64* %tmp97.i, align 8
  %or118.i = or i64 %8584, %8585
  store i64 %or118.i, i64* %vb95.i, align 8
  %8586 = load i64, i64* %va93.i, align 8
  %8587 = load i64, i64* %vb95.i, align 8
  %or119.i = or i64 %8586, %8587
  %8588 = load i64*, i64** %kp.i, align 8
  store i64 %or119.i, i64* %8588, align 8
  %8589 = load i64*, i64** %kp.i, align 8
  %incdec.ptr120.i = getelementptr inbounds i64, i64* %8589, i32 1
  store i64* %incdec.ptr120.i, i64** %kp.i, align 8
  store i64 1157442765409226768, i64* %m122.i, align 8
  %8590 = load i64, i64* %v0.i, align 8
  %8591 = load i64, i64* %m122.i, align 8
  %and129.i = and i64 %8590, %8591
  store i64 %and129.i, i64* %tmp128.i, align 8
  %8592 = load i64, i64* %tmp128.i, align 8
  %shr130.i = lshr i64 %8592, 4
  store i64 %shr130.i, i64* %va124.i, align 8
  %8593 = load i64, i64* %v1.i, align 8
  %8594 = load i64, i64* %m122.i, align 8
  %and131.i = and i64 %8593, %8594
  store i64 %and131.i, i64* %tmp128.i, align 8
  %8595 = load i64, i64* %tmp128.i, align 8
  %shr132.i = lshr i64 %8595, 3
  store i64 %shr132.i, i64* %vb126.i, align 8
  %8596 = load i64, i64* %v2.i, align 8
  %8597 = load i64, i64* %m122.i, align 8
  %and133.i = and i64 %8596, %8597
  store i64 %and133.i, i64* %tmp128.i, align 8
  %8598 = load i64, i64* %tmp128.i, align 8
  %shr134.i = lshr i64 %8598, 2
  store i64 %shr134.i, i64* %tmp128.i, align 8
  %8599 = load i64, i64* %va124.i, align 8
  %8600 = load i64, i64* %tmp128.i, align 8
  %or135.i = or i64 %8599, %8600
  store i64 %or135.i, i64* %va124.i, align 8
  %8601 = load i64, i64* %v3.i, align 8
  %8602 = load i64, i64* %m122.i, align 8
  %and136.i = and i64 %8601, %8602
  store i64 %and136.i, i64* %tmp128.i, align 8
  %8603 = load i64, i64* %tmp128.i, align 8
  %shr137.i = lshr i64 %8603, 1
  store i64 %shr137.i, i64* %tmp128.i, align 8
  %8604 = load i64, i64* %vb126.i, align 8
  %8605 = load i64, i64* %tmp128.i, align 8
  %or138.i = or i64 %8604, %8605
  store i64 %or138.i, i64* %vb126.i, align 8
  %8606 = load i64, i64* %v4.i, align 8
  %8607 = load i64, i64* %m122.i, align 8
  %and139.i = and i64 %8606, %8607
  store i64 %and139.i, i64* %tmp128.i, align 8
  %8608 = load i64, i64* %va124.i, align 8
  %8609 = load i64, i64* %tmp128.i, align 8
  %or140.i = or i64 %8608, %8609
  store i64 %or140.i, i64* %va124.i, align 8
  %8610 = load i64, i64* %v5.i, align 8
  %8611 = load i64, i64* %m122.i, align 8
  %and141.i = and i64 %8610, %8611
  store i64 %and141.i, i64* %tmp128.i, align 8
  %8612 = load i64, i64* %tmp128.i, align 8
  %shl142.i = shl i64 %8612, 1
  store i64 %shl142.i, i64* %tmp128.i, align 8
  %8613 = load i64, i64* %vb126.i, align 8
  %8614 = load i64, i64* %tmp128.i, align 8
  %or143.i = or i64 %8613, %8614
  store i64 %or143.i, i64* %vb126.i, align 8
  %8615 = load i64, i64* %v6.i, align 8
  %8616 = load i64, i64* %m122.i, align 8
  %and144.i = and i64 %8615, %8616
  store i64 %and144.i, i64* %tmp128.i, align 8
  %8617 = load i64, i64* %tmp128.i, align 8
  %shl145.i = shl i64 %8617, 2
  store i64 %shl145.i, i64* %tmp128.i, align 8
  %8618 = load i64, i64* %va124.i, align 8
  %8619 = load i64, i64* %tmp128.i, align 8
  %or146.i = or i64 %8618, %8619
  store i64 %or146.i, i64* %va124.i, align 8
  %8620 = load i64, i64* %v7.i, align 8
  %8621 = load i64, i64* %m122.i, align 8
  %and147.i = and i64 %8620, %8621
  store i64 %and147.i, i64* %tmp128.i, align 8
  %8622 = load i64, i64* %tmp128.i, align 8
  %shl148.i = shl i64 %8622, 3
  store i64 %shl148.i, i64* %tmp128.i, align 8
  %8623 = load i64, i64* %vb126.i, align 8
  %8624 = load i64, i64* %tmp128.i, align 8
  %or149.i = or i64 %8623, %8624
  store i64 %or149.i, i64* %vb126.i, align 8
  %8625 = load i64, i64* %va124.i, align 8
  %8626 = load i64, i64* %vb126.i, align 8
  %or150.i = or i64 %8625, %8626
  %8627 = load i64*, i64** %kp.i, align 8
  store i64 %or150.i, i64* %8627, align 8
  %8628 = load i64*, i64** %kp.i, align 8
  %incdec.ptr151.i = getelementptr inbounds i64, i64* %8628, i32 1
  store i64* %incdec.ptr151.i, i64** %kp.i, align 8
  store i64 2314885530818453536, i64* %m153.i, align 8
  %8629 = load i64, i64* %v0.i, align 8
  %8630 = load i64, i64* %m153.i, align 8
  %and160.i = and i64 %8629, %8630
  store i64 %and160.i, i64* %tmp159.i, align 8
  %8631 = load i64, i64* %tmp159.i, align 8
  %shr161.i = lshr i64 %8631, 5
  store i64 %shr161.i, i64* %va155.i, align 8
  %8632 = load i64, i64* %v1.i, align 8
  %8633 = load i64, i64* %m153.i, align 8
  %and162.i = and i64 %8632, %8633
  store i64 %and162.i, i64* %tmp159.i, align 8
  %8634 = load i64, i64* %tmp159.i, align 8
  %shr163.i = lshr i64 %8634, 4
  store i64 %shr163.i, i64* %vb157.i, align 8
  %8635 = load i64, i64* %v2.i, align 8
  %8636 = load i64, i64* %m153.i, align 8
  %and164.i = and i64 %8635, %8636
  store i64 %and164.i, i64* %tmp159.i, align 8
  %8637 = load i64, i64* %tmp159.i, align 8
  %shr165.i = lshr i64 %8637, 3
  store i64 %shr165.i, i64* %tmp159.i, align 8
  %8638 = load i64, i64* %va155.i, align 8
  %8639 = load i64, i64* %tmp159.i, align 8
  %or166.i = or i64 %8638, %8639
  store i64 %or166.i, i64* %va155.i, align 8
  %8640 = load i64, i64* %v3.i, align 8
  %8641 = load i64, i64* %m153.i, align 8
  %and167.i = and i64 %8640, %8641
  store i64 %and167.i, i64* %tmp159.i, align 8
  %8642 = load i64, i64* %tmp159.i, align 8
  %shr168.i = lshr i64 %8642, 2
  store i64 %shr168.i, i64* %tmp159.i, align 8
  %8643 = load i64, i64* %vb157.i, align 8
  %8644 = load i64, i64* %tmp159.i, align 8
  %or169.i = or i64 %8643, %8644
  store i64 %or169.i, i64* %vb157.i, align 8
  %8645 = load i64, i64* %v4.i, align 8
  %8646 = load i64, i64* %m153.i, align 8
  %and170.i = and i64 %8645, %8646
  store i64 %and170.i, i64* %tmp159.i, align 8
  %8647 = load i64, i64* %tmp159.i, align 8
  %shr171.i = lshr i64 %8647, 1
  store i64 %shr171.i, i64* %tmp159.i, align 8
  %8648 = load i64, i64* %va155.i, align 8
  %8649 = load i64, i64* %tmp159.i, align 8
  %or172.i = or i64 %8648, %8649
  store i64 %or172.i, i64* %va155.i, align 8
  %8650 = load i64, i64* %v5.i, align 8
  %8651 = load i64, i64* %m153.i, align 8
  %and173.i = and i64 %8650, %8651
  store i64 %and173.i, i64* %tmp159.i, align 8
  %8652 = load i64, i64* %vb157.i, align 8
  %8653 = load i64, i64* %tmp159.i, align 8
  %or174.i = or i64 %8652, %8653
  store i64 %or174.i, i64* %vb157.i, align 8
  %8654 = load i64, i64* %v6.i, align 8
  %8655 = load i64, i64* %m153.i, align 8
  %and175.i = and i64 %8654, %8655
  store i64 %and175.i, i64* %tmp159.i, align 8
  %8656 = load i64, i64* %tmp159.i, align 8
  %shl176.i = shl i64 %8656, 1
  store i64 %shl176.i, i64* %tmp159.i, align 8
  %8657 = load i64, i64* %va155.i, align 8
  %8658 = load i64, i64* %tmp159.i, align 8
  %or177.i = or i64 %8657, %8658
  store i64 %or177.i, i64* %va155.i, align 8
  %8659 = load i64, i64* %v7.i, align 8
  %8660 = load i64, i64* %m153.i, align 8
  %and178.i = and i64 %8659, %8660
  store i64 %and178.i, i64* %tmp159.i, align 8
  %8661 = load i64, i64* %tmp159.i, align 8
  %shl179.i = shl i64 %8661, 2
  store i64 %shl179.i, i64* %tmp159.i, align 8
  %8662 = load i64, i64* %vb157.i, align 8
  %8663 = load i64, i64* %tmp159.i, align 8
  %or180.i = or i64 %8662, %8663
  store i64 %or180.i, i64* %vb157.i, align 8
  %8664 = load i64, i64* %va155.i, align 8
  %8665 = load i64, i64* %vb157.i, align 8
  %or181.i = or i64 %8664, %8665
  %8666 = load i64*, i64** %kp.i, align 8
  store i64 %or181.i, i64* %8666, align 8
  %8667 = load i64*, i64** %kp.i, align 8
  %incdec.ptr182.i = getelementptr inbounds i64, i64* %8667, i32 1
  store i64* %incdec.ptr182.i, i64** %kp.i, align 8
  store i64 4629771061636907072, i64* %m184.i, align 8
  %8668 = load i64, i64* %v0.i, align 8
  %8669 = load i64, i64* %m184.i, align 8
  %and191.i = and i64 %8668, %8669
  store i64 %and191.i, i64* %tmp190.i, align 8
  %8670 = load i64, i64* %tmp190.i, align 8
  %shr192.i = lshr i64 %8670, 6
  store i64 %shr192.i, i64* %va186.i, align 8
  %8671 = load i64, i64* %v1.i, align 8
  %8672 = load i64, i64* %m184.i, align 8
  %and193.i = and i64 %8671, %8672
  store i64 %and193.i, i64* %tmp190.i, align 8
  %8673 = load i64, i64* %tmp190.i, align 8
  %shr194.i = lshr i64 %8673, 5
  store i64 %shr194.i, i64* %vb188.i, align 8
  %8674 = load i64, i64* %v2.i, align 8
  %8675 = load i64, i64* %m184.i, align 8
  %and195.i = and i64 %8674, %8675
  store i64 %and195.i, i64* %tmp190.i, align 8
  %8676 = load i64, i64* %tmp190.i, align 8
  %shr196.i = lshr i64 %8676, 4
  store i64 %shr196.i, i64* %tmp190.i, align 8
  %8677 = load i64, i64* %va186.i, align 8
  %8678 = load i64, i64* %tmp190.i, align 8
  %or197.i = or i64 %8677, %8678
  store i64 %or197.i, i64* %va186.i, align 8
  %8679 = load i64, i64* %v3.i, align 8
  %8680 = load i64, i64* %m184.i, align 8
  %and198.i = and i64 %8679, %8680
  store i64 %and198.i, i64* %tmp190.i, align 8
  %8681 = load i64, i64* %tmp190.i, align 8
  %shr199.i = lshr i64 %8681, 3
  store i64 %shr199.i, i64* %tmp190.i, align 8
  %8682 = load i64, i64* %vb188.i, align 8
  %8683 = load i64, i64* %tmp190.i, align 8
  %or200.i = or i64 %8682, %8683
  store i64 %or200.i, i64* %vb188.i, align 8
  %8684 = load i64, i64* %v4.i, align 8
  %8685 = load i64, i64* %m184.i, align 8
  %and201.i = and i64 %8684, %8685
  store i64 %and201.i, i64* %tmp190.i, align 8
  %8686 = load i64, i64* %tmp190.i, align 8
  %shr202.i = lshr i64 %8686, 2
  store i64 %shr202.i, i64* %tmp190.i, align 8
  %8687 = load i64, i64* %va186.i, align 8
  %8688 = load i64, i64* %tmp190.i, align 8
  %or203.i = or i64 %8687, %8688
  store i64 %or203.i, i64* %va186.i, align 8
  %8689 = load i64, i64* %v5.i, align 8
  %8690 = load i64, i64* %m184.i, align 8
  %and204.i = and i64 %8689, %8690
  store i64 %and204.i, i64* %tmp190.i, align 8
  %8691 = load i64, i64* %tmp190.i, align 8
  %shr205.i = lshr i64 %8691, 1
  store i64 %shr205.i, i64* %tmp190.i, align 8
  %8692 = load i64, i64* %vb188.i, align 8
  %8693 = load i64, i64* %tmp190.i, align 8
  %or206.i = or i64 %8692, %8693
  store i64 %or206.i, i64* %vb188.i, align 8
  %8694 = load i64, i64* %v6.i, align 8
  %8695 = load i64, i64* %m184.i, align 8
  %and207.i = and i64 %8694, %8695
  store i64 %and207.i, i64* %tmp190.i, align 8
  %8696 = load i64, i64* %va186.i, align 8
  %8697 = load i64, i64* %tmp190.i, align 8
  %or208.i = or i64 %8696, %8697
  store i64 %or208.i, i64* %va186.i, align 8
  %8698 = load i64, i64* %v7.i, align 8
  %8699 = load i64, i64* %m184.i, align 8
  %and209.i = and i64 %8698, %8699
  store i64 %and209.i, i64* %tmp190.i, align 8
  %8700 = load i64, i64* %tmp190.i, align 8
  %shl210.i = shl i64 %8700, 1
  store i64 %shl210.i, i64* %tmp190.i, align 8
  %8701 = load i64, i64* %vb188.i, align 8
  %8702 = load i64, i64* %tmp190.i, align 8
  %or211.i = or i64 %8701, %8702
  store i64 %or211.i, i64* %vb188.i, align 8
  %8703 = load i64, i64* %va186.i, align 8
  %8704 = load i64, i64* %vb188.i, align 8
  %or212.i = or i64 %8703, %8704
  %8705 = load i64*, i64** %kp.i, align 8
  store i64 %or212.i, i64* %8705, align 8
  %8706 = load i64*, i64** %kp.i, align 8
  %incdec.ptr213.i = getelementptr inbounds i64, i64* %8706, i32 1
  store i64* %incdec.ptr213.i, i64** %kp.i, align 8
  %8707 = load i32, i32* %ic.i, align 4
  %inc.i = add nsw i32 %8707, 1
  store i32 %inc.i, i32* %ic.i, align 4
  br label %for.cond.i

DES_bs_finalize_keys.exit:                        ; preds = %for.cond.i
  br label %body
}

; Function Attrs: nounwind uwtable
define void @DES_bs_crypt(i32 %count, i32 %keys_count) #4 {
entry:
  %a1.addr.i1613 = alloca i64, align 8
  %a2.addr.i1614 = alloca i64, align 8
  %a3.addr.i1615 = alloca i64, align 8
  %a4.addr.i1616 = alloca i64, align 8
  %a5.addr.i1617 = alloca i64, align 8
  %a6.addr.i1618 = alloca i64, align 8
  %out1.addr.i1619 = alloca i64*, align 8
  %out2.addr.i1620 = alloca i64*, align 8
  %out3.addr.i1621 = alloca i64*, align 8
  %out4.addr.i1622 = alloca i64*, align 8
  %x33CC33CC.i1623 = alloca i64, align 8
  %x55550000.i1624 = alloca i64, align 8
  %x00AA00FF.i1625 = alloca i64, align 8
  %x33BB33FF.i1626 = alloca i64, align 8
  %x33CC0000.i1627 = alloca i64, align 8
  %x11441144.i1628 = alloca i64, align 8
  %x11BB11BB.i1629 = alloca i64, align 8
  %x003311BB.i1630 = alloca i64, align 8
  %x00000F0F.i1631 = alloca i64, align 8
  %x336600FF.i1632 = alloca i64, align 8
  %x332200FF.i1633 = alloca i64, align 8
  %x332200F0.i1634 = alloca i64, align 8
  %x0302000F.i1635 = alloca i64, align 8
  %xAAAAAAAA.i1636 = alloca i64, align 8
  %xA9A8AAA5.i1637 = alloca i64, align 8
  %x33CCCC33.i1638 = alloca i64, align 8
  %x33CCC030.i1639 = alloca i64, align 8
  %x9A646A95.i1640 = alloca i64, align 8
  %x00333303.i1641 = alloca i64, align 8
  %x118822B8.i1642 = alloca i64, align 8
  %xA8208805.i1643 = alloca i64, align 8
  %x3CC3C33C.i1644 = alloca i64, align 8
  %x94E34B39.i1645 = alloca i64, align 8
  %x0331330C.i1646 = alloca i64, align 8
  %x3FF3F33C.i1647 = alloca i64, align 8
  %xA9DF596A.i1648 = alloca i64, align 8
  %xA9DF5F6F.i1649 = alloca i64, align 8
  %x962CAC53.i1650 = alloca i64, align 8
  %x97D27835.i1651 = alloca i64, align 8
  %x81D25825.i1652 = alloca i64, align 8
  %x812D58DA.i1653 = alloca i64, align 8
  %x802158DA.i1654 = alloca i64, align 8
  %x1A45324F.i1655 = alloca i64, align 8
  %x0A451047.i1656 = alloca i64, align 8
  %xBBDFDD7B.i1657 = alloca i64, align 8
  %xB19ACD3C.i1658 = alloca i64, align 8
  %x00.i1659 = alloca i64, align 8
  %x01.i1660 = alloca i64, align 8
  %x10.i1661 = alloca i64, align 8
  %x11.i1662 = alloca i64, align 8
  %x20.i1663 = alloca i64, align 8
  %x21.i1664 = alloca i64, align 8
  %x30.i1665 = alloca i64, align 8
  %x31.i1666 = alloca i64, align 8
  %a1.addr.i1493 = alloca i64, align 8
  %a2.addr.i1494 = alloca i64, align 8
  %a3.addr.i1495 = alloca i64, align 8
  %a4.addr.i1496 = alloca i64, align 8
  %a5.addr.i1497 = alloca i64, align 8
  %a6.addr.i1498 = alloca i64, align 8
  %out1.addr.i1499 = alloca i64*, align 8
  %out2.addr.i1500 = alloca i64*, align 8
  %out3.addr.i1501 = alloca i64*, align 8
  %out4.addr.i1502 = alloca i64*, align 8
  %x44444444.i1503 = alloca i64, align 8
  %x0F0FF0F0.i1504 = alloca i64, align 8
  %x4F4FF4F4.i1505 = alloca i64, align 8
  %x00FFFF00.i1506 = alloca i64, align 8
  %x00AAAA00.i1507 = alloca i64, align 8
  %x4FE55EF4.i1508 = alloca i64, align 8
  %x3C3CC3C3.i1509 = alloca i64, align 8
  %x3C3C0000.i1510 = alloca i64, align 8
  %x7373F4F4.i1511 = alloca i64, align 8
  %x0C840A00.i1512 = alloca i64, align 8
  %x00005EF4.i1513 = alloca i64, align 8
  %x00FF5EFF.i1514 = alloca i64, align 8
  %x00555455.i1515 = alloca i64, align 8
  %x3C699796.i1516 = alloca i64, align 8
  %x000FF000.i1517 = alloca i64, align 8
  %x55AA55AA.i1518 = alloca i64, align 8
  %x26D9A15E.i1519 = alloca i64, align 8
  %x2FDFAF5F.i1520 = alloca i64, align 8
  %x2FD00F5F.i1521 = alloca i64, align 8
  %x55AAFFAA.i1522 = alloca i64, align 8
  %x28410014.i1523 = alloca i64, align 8
  %x000000FF.i1524 = alloca i64, align 8
  %x000000CC.i1525 = alloca i64, align 8
  %x284100D8.i1526 = alloca i64, align 8
  %x204000D0.i1527 = alloca i64, align 8
  %x3C3CC3FF.i1528 = alloca i64, align 8
  %x1C3CC32F.i1529 = alloca i64, align 8
  %x4969967A.i1530 = alloca i64, align 8
  %x4CC44CC4.i1531 = alloca i64, align 8
  %x40C040C0.i1532 = alloca i64, align 8
  %x69963C69.i1533 = alloca i64, align 8
  %x9669C396.i1534 = alloca i64, align 8
  %xD6A98356.i1535 = alloca i64, align 8
  %x000F00F0.i1536 = alloca i64, align 8
  %xFEBDC3D7.i1537 = alloca i64, align 8
  %xFEB0C307.i1538 = alloca i64, align 8
  %x4CEEEEC4.i1539 = alloca i64, align 8
  %xB25E2DC3.i1540 = alloca i64, align 8
  %x00.i1541 = alloca i64, align 8
  %x01.i1542 = alloca i64, align 8
  %x10.i1543 = alloca i64, align 8
  %x11.i1544 = alloca i64, align 8
  %x20.i1545 = alloca i64, align 8
  %x21.i1546 = alloca i64, align 8
  %x30.i1547 = alloca i64, align 8
  %x31.i1548 = alloca i64, align 8
  %a1.addr.i1404 = alloca i64, align 8
  %a2.addr.i1405 = alloca i64, align 8
  %a3.addr.i1406 = alloca i64, align 8
  %a4.addr.i1407 = alloca i64, align 8
  %a5.addr.i1408 = alloca i64, align 8
  %a6.addr.i1409 = alloca i64, align 8
  %out1.addr.i1410 = alloca i64*, align 8
  %out2.addr.i1411 = alloca i64*, align 8
  %out3.addr.i1412 = alloca i64*, align 8
  %out4.addr.i1413 = alloca i64*, align 8
  %x5A5A5A5A.i1414 = alloca i64, align 8
  %x0F0FF0F0.i1415 = alloca i64, align 8
  %x33FF33FF.i1416 = alloca i64, align 8
  %x33FFCC00.i1417 = alloca i64, align 8
  %x0C0030F0.i1418 = alloca i64, align 8
  %x0C0CC0C0.i1419 = alloca i64, align 8
  %x0CF3C03F.i1420 = alloca i64, align 8
  %x5EFBDA7F.i1421 = alloca i64, align 8
  %x52FBCA0F.i1422 = alloca i64, align 8
  %x61C8F93C.i1423 = alloca i64, align 8
  %x00C0C03C.i1424 = alloca i64, align 8
  %x0F0F30C0.i1425 = alloca i64, align 8
  %x3B92A366.i1426 = alloca i64, align 8
  %x30908326.i1427 = alloca i64, align 8
  %x3C90B3D6.i1428 = alloca i64, align 8
  %x33CC33CC.i1429 = alloca i64, align 8
  %x0C0CFFFF.i1430 = alloca i64, align 8
  %x379E5C99.i1431 = alloca i64, align 8
  %x04124C11.i1432 = alloca i64, align 8
  %x56E9861E.i1433 = alloca i64, align 8
  %xA91679E1.i1434 = alloca i64, align 8
  %x9586CA37.i1435 = alloca i64, align 8
  %x8402C833.i1436 = alloca i64, align 8
  %x84C2C83F.i1437 = alloca i64, align 8
  %xB35C94A6.i1438 = alloca i64, align 8
  %x00.i1439 = alloca i64, align 8
  %x01.i1440 = alloca i64, align 8
  %x10.i1441 = alloca i64, align 8
  %x11.i1442 = alloca i64, align 8
  %x20.i1443 = alloca i64, align 8
  %x21.i1444 = alloca i64, align 8
  %x30.i1445 = alloca i64, align 8
  %x31.i1446 = alloca i64, align 8
  %a1.addr.i1285 = alloca i64, align 8
  %a2.addr.i1286 = alloca i64, align 8
  %a3.addr.i1287 = alloca i64, align 8
  %a4.addr.i1288 = alloca i64, align 8
  %a5.addr.i1289 = alloca i64, align 8
  %a6.addr.i1290 = alloca i64, align 8
  %out1.addr.i1291 = alloca i64*, align 8
  %out2.addr.i1292 = alloca i64*, align 8
  %out3.addr.i1293 = alloca i64*, align 8
  %out4.addr.i1294 = alloca i64*, align 8
  %x77777777.i1295 = alloca i64, align 8
  %x77770000.i1296 = alloca i64, align 8
  %x22225555.i1297 = alloca i64, align 8
  %x11116666.i1298 = alloca i64, align 8
  %x1F1F6F6F.i1299 = alloca i64, align 8
  %x70700000.i1300 = alloca i64, align 8
  %x43433333.i1301 = alloca i64, align 8
  %x00430033.i1302 = alloca i64, align 8
  %x55557777.i1303 = alloca i64, align 8
  %x55167744.i1304 = alloca i64, align 8
  %x5A19784B.i1305 = alloca i64, align 8
  %x5A1987B4.i1306 = alloca i64, align 8
  %x7A3BD7F5.i1307 = alloca i64, align 8
  %x003B00F5.i1308 = alloca i64, align 8
  %x221955A0.i1309 = alloca i64, align 8
  %x05050707.i1310 = alloca i64, align 8
  %x271C52A7.i1311 = alloca i64, align 8
  %x2A2A82A0.i1312 = alloca i64, align 8
  %x6969B193.i1313 = alloca i64, align 8
  %x1FE06F90.i1314 = alloca i64, align 8
  %x16804E00.i1315 = alloca i64, align 8
  %xE97FB1FF.i1316 = alloca i64, align 8
  %x43403302.i1317 = alloca i64, align 8
  %x35CAED30.i1318 = alloca i64, align 8
  %x37DEFFB7.i1319 = alloca i64, align 8
  %x349ECCB5.i1320 = alloca i64, align 8
  %x0B01234A.i1321 = alloca i64, align 8
  %x101884B4.i1322 = alloca i64, align 8
  %x0FF8EB24.i1323 = alloca i64, align 8
  %x41413333.i1324 = alloca i64, align 8
  %x4FF9FB37.i1325 = alloca i64, align 8
  %x4FC2FBC2.i1326 = alloca i64, align 8
  %x22222222.i1327 = alloca i64, align 8
  %x16BCEE97.i1328 = alloca i64, align 8
  %x0F080B04.i1329 = alloca i64, align 8
  %x19B4E593.i1330 = alloca i64, align 8
  %x5C5C5C5C.i1331 = alloca i64, align 8
  %x4448184C.i1332 = alloca i64, align 8
  %x2DDABE71.i1333 = alloca i64, align 8
  %x6992A63D.i1334 = alloca i64, align 8
  %x00.i1335 = alloca i64, align 8
  %x01.i1336 = alloca i64, align 8
  %x10.i1337 = alloca i64, align 8
  %x11.i1338 = alloca i64, align 8
  %x20.i1339 = alloca i64, align 8
  %x21.i1340 = alloca i64, align 8
  %x30.i1341 = alloca i64, align 8
  %x31.i1342 = alloca i64, align 8
  %a1.addr.i1171 = alloca i64, align 8
  %a2.addr.i1172 = alloca i64, align 8
  %a3.addr.i1173 = alloca i64, align 8
  %a4.addr.i1174 = alloca i64, align 8
  %a5.addr.i1175 = alloca i64, align 8
  %a6.addr.i1176 = alloca i64, align 8
  %out1.addr.i1177 = alloca i64*, align 8
  %out2.addr.i1178 = alloca i64*, align 8
  %out3.addr.i1179 = alloca i64*, align 8
  %out4.addr.i1180 = alloca i64*, align 8
  %x33CC33CC.i1181 = alloca i64, align 8
  %x3333FFFF.i1182 = alloca i64, align 8
  %x11115555.i1183 = alloca i64, align 8
  %x22DD6699.i1184 = alloca i64, align 8
  %x22DD9966.i1185 = alloca i64, align 8
  %x00220099.i1186 = alloca i64, align 8
  %x00551144.i1187 = alloca i64, align 8
  %x33662277.i1188 = alloca i64, align 8
  %x5A5A5A5A.i1189 = alloca i64, align 8
  %x7B7E7A7F.i1190 = alloca i64, align 8
  %x59A31CE6.i1191 = alloca i64, align 8
  %x09030C06.i1192 = alloca i64, align 8
  %x09030000.i1193 = alloca i64, align 8
  %x336622FF.i1194 = alloca i64, align 8
  %x3A6522FF.i1195 = alloca i64, align 8
  %x484D494C.i1196 = alloca i64, align 8
  %x0000B6B3.i1197 = alloca i64, align 8
  %x0F0FB9BC.i1198 = alloca i64, align 8
  %x00FC00F9.i1199 = alloca i64, align 8
  %x0FFFB9FD.i1200 = alloca i64, align 8
  %x5DF75DF7.i1201 = alloca i64, align 8
  %x116600F7.i1202 = alloca i64, align 8
  %x1E69B94B.i1203 = alloca i64, align 8
  %x1668B94B.i1204 = alloca i64, align 8
  %x7B7B7B7B.i1205 = alloca i64, align 8
  %x411E5984.i1206 = alloca i64, align 8
  %x1FFFFDFD.i1207 = alloca i64, align 8
  %x5EE1A479.i1208 = alloca i64, align 8
  %x3CB4DFD2.i1209 = alloca i64, align 8
  %x004B002D.i1210 = alloca i64, align 8
  %xB7B2B6B3.i1211 = alloca i64, align 8
  %xCCC9CDC8.i1212 = alloca i64, align 8
  %xCC82CDE5.i1213 = alloca i64, align 8
  %x0055EEBB.i1214 = alloca i64, align 8
  %x5A5AECE9.i1215 = alloca i64, align 8
  %x0050ECA9.i1216 = alloca i64, align 8
  %xC5CAC1CE.i1217 = alloca i64, align 8
  %xC59A2D67.i1218 = alloca i64, align 8
  %x00.i1219 = alloca i64, align 8
  %x01.i1220 = alloca i64, align 8
  %x10.i1221 = alloca i64, align 8
  %x11.i1222 = alloca i64, align 8
  %x20.i1223 = alloca i64, align 8
  %x21.i1224 = alloca i64, align 8
  %x30.i1225 = alloca i64, align 8
  %x31.i1226 = alloca i64, align 8
  %a1.addr.i1058 = alloca i64, align 8
  %a2.addr.i1059 = alloca i64, align 8
  %a3.addr.i1060 = alloca i64, align 8
  %a4.addr.i1061 = alloca i64, align 8
  %a5.addr.i1062 = alloca i64, align 8
  %a6.addr.i1063 = alloca i64, align 8
  %out1.addr.i1064 = alloca i64*, align 8
  %out2.addr.i1065 = alloca i64*, align 8
  %out3.addr.i1066 = alloca i64*, align 8
  %out4.addr.i1067 = alloca i64*, align 8
  %x0FF00FF0.i1068 = alloca i64, align 8
  %x3CC33CC3.i1069 = alloca i64, align 8
  %x00003CC3.i1070 = alloca i64, align 8
  %x0F000F00.i1071 = alloca i64, align 8
  %x5A555A55.i1072 = alloca i64, align 8
  %x00001841.i1073 = alloca i64, align 8
  %x00000F00.i1074 = alloca i64, align 8
  %x33333C33.i1075 = alloca i64, align 8
  %x7B777E77.i1076 = alloca i64, align 8
  %x0FF0F00F.i1077 = alloca i64, align 8
  %x74878E78.i1078 = alloca i64, align 8
  %x003C003C.i1079 = alloca i64, align 8
  %x5A7D5A7D.i1080 = alloca i64, align 8
  %x333300F0.i1081 = alloca i64, align 8
  %x694E5A8D.i1082 = alloca i64, align 8
  %x0FF0CCCC.i1083 = alloca i64, align 8
  %x000F0303.i1084 = alloca i64, align 8
  %x5A505854.i1085 = alloca i64, align 8
  %x33CC000F.i1086 = alloca i64, align 8
  %x699C585B.i1087 = alloca i64, align 8
  %x7F878F78.i1088 = alloca i64, align 8
  %x21101013.i1089 = alloca i64, align 8
  %x7F979F7B.i1090 = alloca i64, align 8
  %x30030CC0.i1091 = alloca i64, align 8
  %x4F9493BB.i1092 = alloca i64, align 8
  %x6F9CDBFB.i1093 = alloca i64, align 8
  %x0000DBFB.i1094 = alloca i64, align 8
  %x00005151.i1095 = alloca i64, align 8
  %x26DAC936.i1096 = alloca i64, align 8
  %x26DA9867.i1097 = alloca i64, align 8
  %x21FF10FF.i1098 = alloca i64, align 8
  %x21FFCB04.i1099 = alloca i64, align 8
  %x2625C9C9.i1100 = alloca i64, align 8
  %x27FFCBCD.i1101 = alloca i64, align 8
  %x27FF1036.i1102 = alloca i64, align 8
  %x27FF103E.i1103 = alloca i64, align 8
  %xB06B6C44.i1104 = alloca i64, align 8
  %x97947C7A.i1105 = alloca i64, align 8
  %x00.i1106 = alloca i64, align 8
  %x01.i1107 = alloca i64, align 8
  %x10.i1108 = alloca i64, align 8
  %x11.i1109 = alloca i64, align 8
  %x20.i1110 = alloca i64, align 8
  %x21.i1111 = alloca i64, align 8
  %x30.i1112 = alloca i64, align 8
  %x31.i1113 = alloca i64, align 8
  %a1.addr.i955 = alloca i64, align 8
  %a2.addr.i956 = alloca i64, align 8
  %a3.addr.i957 = alloca i64, align 8
  %a4.addr.i958 = alloca i64, align 8
  %a5.addr.i959 = alloca i64, align 8
  %a6.addr.i960 = alloca i64, align 8
  %out1.addr.i961 = alloca i64*, align 8
  %out2.addr.i962 = alloca i64*, align 8
  %out3.addr.i963 = alloca i64*, align 8
  %out4.addr.i964 = alloca i64*, align 8
  %x0C0C0C0C.i965 = alloca i64, align 8
  %x0000F0F0.i966 = alloca i64, align 8
  %x00FFF00F.i967 = alloca i64, align 8
  %x00555005.i968 = alloca i64, align 8
  %x00515001.i969 = alloca i64, align 8
  %x33000330.i970 = alloca i64, align 8
  %x77555775.i971 = alloca i64, align 8
  %x30303030.i972 = alloca i64, align 8
  %x3030CFCF.i973 = alloca i64, align 8
  %x30104745.i974 = alloca i64, align 8
  %x30555745.i975 = alloca i64, align 8
  %xFF000FF0.i976 = alloca i64, align 8
  %xCF1048B5.i977 = alloca i64, align 8
  %x080A080A.i978 = alloca i64, align 8
  %xC71A40BF.i979 = alloca i64, align 8
  %xCB164CB3.i980 = alloca i64, align 8
  %x9E4319E6.i981 = alloca i64, align 8
  %x000019E6.i982 = alloca i64, align 8
  %xF429738C.i983 = alloca i64, align 8
  %xF4296A6A.i984 = alloca i64, align 8
  %xC729695A.i985 = alloca i64, align 8
  %xC47C3D2F.i986 = alloca i64, align 8
  %xF77F3F3F.i987 = alloca i64, align 8
  %x9E43E619.i988 = alloca i64, align 8
  %x693CD926.i989 = alloca i64, align 8
  %xF719A695.i990 = alloca i64, align 8
  %xF4FF73FF.i991 = alloca i64, align 8
  %x03E6D56A.i992 = alloca i64, align 8
  %x56B3803F.i993 = alloca i64, align 8
  %xF700A600.i994 = alloca i64, align 8
  %x61008000.i995 = alloca i64, align 8
  %x03B7856B.i996 = alloca i64, align 8
  %x62B7056B.i997 = alloca i64, align 8
  %x00.i998 = alloca i64, align 8
  %x01.i999 = alloca i64, align 8
  %x10.i1000 = alloca i64, align 8
  %x11.i1001 = alloca i64, align 8
  %x20.i1002 = alloca i64, align 8
  %x21.i1003 = alloca i64, align 8
  %x30.i1004 = alloca i64, align 8
  %x31.i1005 = alloca i64, align 8
  %a1.addr.i832 = alloca i64, align 8
  %a2.addr.i833 = alloca i64, align 8
  %a3.addr.i834 = alloca i64, align 8
  %a4.addr.i835 = alloca i64, align 8
  %a5.addr.i836 = alloca i64, align 8
  %a6.addr.i837 = alloca i64, align 8
  %out1.addr.i838 = alloca i64*, align 8
  %out2.addr.i839 = alloca i64*, align 8
  %out3.addr.i840 = alloca i64*, align 8
  %out4.addr.i841 = alloca i64*, align 8
  %x55005500.i842 = alloca i64, align 8
  %x5A0F5A0F.i843 = alloca i64, align 8
  %x3333FFFF.i844 = alloca i64, align 8
  %x66666666.i845 = alloca i64, align 8
  %x22226666.i846 = alloca i64, align 8
  %x2D2D6969.i847 = alloca i64, align 8
  %x25202160.i848 = alloca i64, align 8
  %x00FFFF00.i849 = alloca i64, align 8
  %x33CCCC33.i850 = alloca i64, align 8
  %x4803120C.i851 = alloca i64, align 8
  %x2222FFFF.i852 = alloca i64, align 8
  %x6A21EDF3.i853 = alloca i64, align 8
  %x4A01CC93.i854 = alloca i64, align 8
  %x5555FFFF.i855 = alloca i64, align 8
  %x7F75FFFF.i856 = alloca i64, align 8
  %x00D20096.i857 = alloca i64, align 8
  %x7FA7FF69.i858 = alloca i64, align 8
  %x0A0A0000.i859 = alloca i64, align 8
  %x0AD80096.i860 = alloca i64, align 8
  %x00999900.i861 = alloca i64, align 8
  %x0AD99996.i862 = alloca i64, align 8
  %x22332233.i863 = alloca i64, align 8
  %x257AA5F0.i864 = alloca i64, align 8
  %x054885C0.i865 = alloca i64, align 8
  %xFAB77A3F.i866 = alloca i64, align 8
  %x2221EDF3.i867 = alloca i64, align 8
  %xD89697CC.i868 = alloca i64, align 8
  %x05B77AC0.i869 = alloca i64, align 8
  %x05F77AD6.i870 = alloca i64, align 8
  %x36C48529.i871 = alloca i64, align 8
  %x6391D07C.i872 = alloca i64, align 8
  %xBB0747B0.i873 = alloca i64, align 8
  %x4C460000.i874 = alloca i64, align 8
  %x4EDF9996.i875 = alloca i64, align 8
  %x2D4E49EA.i876 = alloca i64, align 8
  %xBBFFFFB0.i877 = alloca i64, align 8
  %x96B1B65A.i878 = alloca i64, align 8
  %x5AFF5AFF.i879 = alloca i64, align 8
  %x52B11215.i880 = alloca i64, align 8
  %x4201C010.i881 = alloca i64, align 8
  %x10B0D205.i882 = alloca i64, align 8
  %x00.i883 = alloca i64, align 8
  %x01.i884 = alloca i64, align 8
  %x10.i885 = alloca i64, align 8
  %x11.i886 = alloca i64, align 8
  %x20.i887 = alloca i64, align 8
  %x21.i888 = alloca i64, align 8
  %x30.i889 = alloca i64, align 8
  %x31.i890 = alloca i64, align 8
  %a1.addr.i756 = alloca i64, align 8
  %a2.addr.i757 = alloca i64, align 8
  %a3.addr.i758 = alloca i64, align 8
  %a4.addr.i759 = alloca i64, align 8
  %a5.addr.i760 = alloca i64, align 8
  %a6.addr.i761 = alloca i64, align 8
  %out1.addr.i762 = alloca i64*, align 8
  %out2.addr.i763 = alloca i64*, align 8
  %out3.addr.i764 = alloca i64*, align 8
  %out4.addr.i765 = alloca i64*, align 8
  %x33CC33CC.i766 = alloca i64, align 8
  %x55550000.i = alloca i64, align 8
  %x00AA00FF.i = alloca i64, align 8
  %x33BB33FF.i = alloca i64, align 8
  %x33CC0000.i = alloca i64, align 8
  %x11441144.i = alloca i64, align 8
  %x11BB11BB.i = alloca i64, align 8
  %x003311BB.i = alloca i64, align 8
  %x00000F0F.i = alloca i64, align 8
  %x336600FF.i = alloca i64, align 8
  %x332200FF.i = alloca i64, align 8
  %x332200F0.i = alloca i64, align 8
  %x0302000F.i = alloca i64, align 8
  %xAAAAAAAA.i = alloca i64, align 8
  %xA9A8AAA5.i = alloca i64, align 8
  %x33CCCC33.i767 = alloca i64, align 8
  %x33CCC030.i = alloca i64, align 8
  %x9A646A95.i = alloca i64, align 8
  %x00333303.i = alloca i64, align 8
  %x118822B8.i = alloca i64, align 8
  %xA8208805.i = alloca i64, align 8
  %x3CC3C33C.i = alloca i64, align 8
  %x94E34B39.i = alloca i64, align 8
  %x0331330C.i = alloca i64, align 8
  %x3FF3F33C.i = alloca i64, align 8
  %xA9DF596A.i = alloca i64, align 8
  %xA9DF5F6F.i = alloca i64, align 8
  %x962CAC53.i = alloca i64, align 8
  %x97D27835.i = alloca i64, align 8
  %x81D25825.i = alloca i64, align 8
  %x812D58DA.i = alloca i64, align 8
  %x802158DA.i = alloca i64, align 8
  %x1A45324F.i = alloca i64, align 8
  %x0A451047.i = alloca i64, align 8
  %xBBDFDD7B.i = alloca i64, align 8
  %xB19ACD3C.i = alloca i64, align 8
  %x00.i768 = alloca i64, align 8
  %x01.i769 = alloca i64, align 8
  %x10.i770 = alloca i64, align 8
  %x11.i771 = alloca i64, align 8
  %x20.i772 = alloca i64, align 8
  %x21.i773 = alloca i64, align 8
  %x30.i774 = alloca i64, align 8
  %x31.i775 = alloca i64, align 8
  %a1.addr.i688 = alloca i64, align 8
  %a2.addr.i689 = alloca i64, align 8
  %a3.addr.i690 = alloca i64, align 8
  %a4.addr.i691 = alloca i64, align 8
  %a5.addr.i692 = alloca i64, align 8
  %a6.addr.i693 = alloca i64, align 8
  %out1.addr.i694 = alloca i64*, align 8
  %out2.addr.i695 = alloca i64*, align 8
  %out3.addr.i696 = alloca i64*, align 8
  %out4.addr.i697 = alloca i64*, align 8
  %x44444444.i = alloca i64, align 8
  %x0F0FF0F0.i698 = alloca i64, align 8
  %x4F4FF4F4.i = alloca i64, align 8
  %x00FFFF00.i699 = alloca i64, align 8
  %x00AAAA00.i = alloca i64, align 8
  %x4FE55EF4.i = alloca i64, align 8
  %x3C3CC3C3.i = alloca i64, align 8
  %x3C3C0000.i = alloca i64, align 8
  %x7373F4F4.i = alloca i64, align 8
  %x0C840A00.i = alloca i64, align 8
  %x00005EF4.i = alloca i64, align 8
  %x00FF5EFF.i = alloca i64, align 8
  %x00555455.i = alloca i64, align 8
  %x3C699796.i = alloca i64, align 8
  %x000FF000.i = alloca i64, align 8
  %x55AA55AA.i = alloca i64, align 8
  %x26D9A15E.i = alloca i64, align 8
  %x2FDFAF5F.i = alloca i64, align 8
  %x2FD00F5F.i = alloca i64, align 8
  %x55AAFFAA.i = alloca i64, align 8
  %x28410014.i = alloca i64, align 8
  %x000000FF.i = alloca i64, align 8
  %x000000CC.i = alloca i64, align 8
  %x284100D8.i = alloca i64, align 8
  %x204000D0.i = alloca i64, align 8
  %x3C3CC3FF.i = alloca i64, align 8
  %x1C3CC32F.i = alloca i64, align 8
  %x4969967A.i = alloca i64, align 8
  %x4CC44CC4.i = alloca i64, align 8
  %x40C040C0.i = alloca i64, align 8
  %x69963C69.i = alloca i64, align 8
  %x9669C396.i = alloca i64, align 8
  %xD6A98356.i = alloca i64, align 8
  %x000F00F0.i = alloca i64, align 8
  %xFEBDC3D7.i = alloca i64, align 8
  %xFEB0C307.i = alloca i64, align 8
  %x4CEEEEC4.i = alloca i64, align 8
  %xB25E2DC3.i = alloca i64, align 8
  %x00.i700 = alloca i64, align 8
  %x01.i701 = alloca i64, align 8
  %x10.i702 = alloca i64, align 8
  %x11.i703 = alloca i64, align 8
  %x20.i704 = alloca i64, align 8
  %x21.i705 = alloca i64, align 8
  %x30.i706 = alloca i64, align 8
  %x31.i707 = alloca i64, align 8
  %a1.addr.i629 = alloca i64, align 8
  %a2.addr.i630 = alloca i64, align 8
  %a3.addr.i631 = alloca i64, align 8
  %a4.addr.i632 = alloca i64, align 8
  %a5.addr.i633 = alloca i64, align 8
  %a6.addr.i634 = alloca i64, align 8
  %out1.addr.i635 = alloca i64*, align 8
  %out2.addr.i636 = alloca i64*, align 8
  %out3.addr.i637 = alloca i64*, align 8
  %out4.addr.i638 = alloca i64*, align 8
  %x5A5A5A5A.i639 = alloca i64, align 8
  %x0F0FF0F0.i = alloca i64, align 8
  %x33FF33FF.i = alloca i64, align 8
  %x33FFCC00.i = alloca i64, align 8
  %x0C0030F0.i = alloca i64, align 8
  %x0C0CC0C0.i = alloca i64, align 8
  %x0CF3C03F.i = alloca i64, align 8
  %x5EFBDA7F.i = alloca i64, align 8
  %x52FBCA0F.i = alloca i64, align 8
  %x61C8F93C.i = alloca i64, align 8
  %x00C0C03C.i = alloca i64, align 8
  %x0F0F30C0.i = alloca i64, align 8
  %x3B92A366.i = alloca i64, align 8
  %x30908326.i = alloca i64, align 8
  %x3C90B3D6.i = alloca i64, align 8
  %x33CC33CC.i640 = alloca i64, align 8
  %x0C0CFFFF.i = alloca i64, align 8
  %x379E5C99.i = alloca i64, align 8
  %x04124C11.i = alloca i64, align 8
  %x56E9861E.i = alloca i64, align 8
  %xA91679E1.i = alloca i64, align 8
  %x9586CA37.i = alloca i64, align 8
  %x8402C833.i = alloca i64, align 8
  %x84C2C83F.i = alloca i64, align 8
  %xB35C94A6.i = alloca i64, align 8
  %x00.i641 = alloca i64, align 8
  %x01.i642 = alloca i64, align 8
  %x10.i643 = alloca i64, align 8
  %x11.i644 = alloca i64, align 8
  %x20.i645 = alloca i64, align 8
  %x21.i646 = alloca i64, align 8
  %x30.i647 = alloca i64, align 8
  %x31.i648 = alloca i64, align 8
  %a1.addr.i565 = alloca i64, align 8
  %a2.addr.i566 = alloca i64, align 8
  %a3.addr.i567 = alloca i64, align 8
  %a4.addr.i568 = alloca i64, align 8
  %a5.addr.i569 = alloca i64, align 8
  %a6.addr.i570 = alloca i64, align 8
  %out1.addr.i571 = alloca i64*, align 8
  %out2.addr.i572 = alloca i64*, align 8
  %out3.addr.i573 = alloca i64*, align 8
  %out4.addr.i574 = alloca i64*, align 8
  %x77777777.i = alloca i64, align 8
  %x77770000.i = alloca i64, align 8
  %x22225555.i = alloca i64, align 8
  %x11116666.i = alloca i64, align 8
  %x1F1F6F6F.i = alloca i64, align 8
  %x70700000.i = alloca i64, align 8
  %x43433333.i = alloca i64, align 8
  %x00430033.i = alloca i64, align 8
  %x55557777.i = alloca i64, align 8
  %x55167744.i = alloca i64, align 8
  %x5A19784B.i = alloca i64, align 8
  %x5A1987B4.i = alloca i64, align 8
  %x7A3BD7F5.i = alloca i64, align 8
  %x003B00F5.i = alloca i64, align 8
  %x221955A0.i = alloca i64, align 8
  %x05050707.i = alloca i64, align 8
  %x271C52A7.i = alloca i64, align 8
  %x2A2A82A0.i = alloca i64, align 8
  %x6969B193.i = alloca i64, align 8
  %x1FE06F90.i = alloca i64, align 8
  %x16804E00.i = alloca i64, align 8
  %xE97FB1FF.i = alloca i64, align 8
  %x43403302.i = alloca i64, align 8
  %x35CAED30.i = alloca i64, align 8
  %x37DEFFB7.i = alloca i64, align 8
  %x349ECCB5.i = alloca i64, align 8
  %x0B01234A.i = alloca i64, align 8
  %x101884B4.i = alloca i64, align 8
  %x0FF8EB24.i = alloca i64, align 8
  %x41413333.i = alloca i64, align 8
  %x4FF9FB37.i = alloca i64, align 8
  %x4FC2FBC2.i = alloca i64, align 8
  %x22222222.i = alloca i64, align 8
  %x16BCEE97.i = alloca i64, align 8
  %x0F080B04.i = alloca i64, align 8
  %x19B4E593.i = alloca i64, align 8
  %x5C5C5C5C.i = alloca i64, align 8
  %x4448184C.i = alloca i64, align 8
  %x2DDABE71.i = alloca i64, align 8
  %x6992A63D.i = alloca i64, align 8
  %x00.i575 = alloca i64, align 8
  %x01.i576 = alloca i64, align 8
  %x10.i577 = alloca i64, align 8
  %x11.i578 = alloca i64, align 8
  %x20.i579 = alloca i64, align 8
  %x21.i580 = alloca i64, align 8
  %x30.i581 = alloca i64, align 8
  %x31.i582 = alloca i64, align 8
  %a1.addr.i506 = alloca i64, align 8
  %a2.addr.i507 = alloca i64, align 8
  %a3.addr.i508 = alloca i64, align 8
  %a4.addr.i509 = alloca i64, align 8
  %a5.addr.i510 = alloca i64, align 8
  %a6.addr.i511 = alloca i64, align 8
  %out1.addr.i512 = alloca i64*, align 8
  %out2.addr.i513 = alloca i64*, align 8
  %out3.addr.i514 = alloca i64*, align 8
  %out4.addr.i515 = alloca i64*, align 8
  %x33CC33CC.i = alloca i64, align 8
  %x3333FFFF.i516 = alloca i64, align 8
  %x11115555.i = alloca i64, align 8
  %x22DD6699.i = alloca i64, align 8
  %x22DD9966.i = alloca i64, align 8
  %x00220099.i = alloca i64, align 8
  %x00551144.i = alloca i64, align 8
  %x33662277.i = alloca i64, align 8
  %x5A5A5A5A.i = alloca i64, align 8
  %x7B7E7A7F.i = alloca i64, align 8
  %x59A31CE6.i = alloca i64, align 8
  %x09030C06.i = alloca i64, align 8
  %x09030000.i = alloca i64, align 8
  %x336622FF.i = alloca i64, align 8
  %x3A6522FF.i = alloca i64, align 8
  %x484D494C.i = alloca i64, align 8
  %x0000B6B3.i = alloca i64, align 8
  %x0F0FB9BC.i = alloca i64, align 8
  %x00FC00F9.i = alloca i64, align 8
  %x0FFFB9FD.i = alloca i64, align 8
  %x5DF75DF7.i = alloca i64, align 8
  %x116600F7.i = alloca i64, align 8
  %x1E69B94B.i = alloca i64, align 8
  %x1668B94B.i = alloca i64, align 8
  %x7B7B7B7B.i = alloca i64, align 8
  %x411E5984.i = alloca i64, align 8
  %x1FFFFDFD.i = alloca i64, align 8
  %x5EE1A479.i = alloca i64, align 8
  %x3CB4DFD2.i = alloca i64, align 8
  %x004B002D.i = alloca i64, align 8
  %xB7B2B6B3.i = alloca i64, align 8
  %xCCC9CDC8.i = alloca i64, align 8
  %xCC82CDE5.i = alloca i64, align 8
  %x0055EEBB.i = alloca i64, align 8
  %x5A5AECE9.i = alloca i64, align 8
  %x0050ECA9.i = alloca i64, align 8
  %xC5CAC1CE.i = alloca i64, align 8
  %xC59A2D67.i = alloca i64, align 8
  %x00.i517 = alloca i64, align 8
  %x01.i518 = alloca i64, align 8
  %x10.i519 = alloca i64, align 8
  %x11.i520 = alloca i64, align 8
  %x20.i521 = alloca i64, align 8
  %x21.i522 = alloca i64, align 8
  %x30.i523 = alloca i64, align 8
  %x31.i524 = alloca i64, align 8
  %a1.addr.i451 = alloca i64, align 8
  %a2.addr.i452 = alloca i64, align 8
  %a3.addr.i453 = alloca i64, align 8
  %a4.addr.i454 = alloca i64, align 8
  %a5.addr.i455 = alloca i64, align 8
  %a6.addr.i456 = alloca i64, align 8
  %out1.addr.i457 = alloca i64*, align 8
  %out2.addr.i458 = alloca i64*, align 8
  %out3.addr.i459 = alloca i64*, align 8
  %out4.addr.i460 = alloca i64*, align 8
  %x0FF00FF0.i = alloca i64, align 8
  %x3CC33CC3.i = alloca i64, align 8
  %x00003CC3.i = alloca i64, align 8
  %x0F000F00.i = alloca i64, align 8
  %x5A555A55.i = alloca i64, align 8
  %x00001841.i = alloca i64, align 8
  %x00000F00.i = alloca i64, align 8
  %x33333C33.i = alloca i64, align 8
  %x7B777E77.i = alloca i64, align 8
  %x0FF0F00F.i = alloca i64, align 8
  %x74878E78.i = alloca i64, align 8
  %x003C003C.i = alloca i64, align 8
  %x5A7D5A7D.i = alloca i64, align 8
  %x333300F0.i = alloca i64, align 8
  %x694E5A8D.i = alloca i64, align 8
  %x0FF0CCCC.i = alloca i64, align 8
  %x000F0303.i = alloca i64, align 8
  %x5A505854.i = alloca i64, align 8
  %x33CC000F.i = alloca i64, align 8
  %x699C585B.i = alloca i64, align 8
  %x7F878F78.i = alloca i64, align 8
  %x21101013.i = alloca i64, align 8
  %x7F979F7B.i = alloca i64, align 8
  %x30030CC0.i = alloca i64, align 8
  %x4F9493BB.i = alloca i64, align 8
  %x6F9CDBFB.i = alloca i64, align 8
  %x0000DBFB.i = alloca i64, align 8
  %x00005151.i = alloca i64, align 8
  %x26DAC936.i = alloca i64, align 8
  %x26DA9867.i = alloca i64, align 8
  %x21FF10FF.i = alloca i64, align 8
  %x21FFCB04.i = alloca i64, align 8
  %x2625C9C9.i = alloca i64, align 8
  %x27FFCBCD.i = alloca i64, align 8
  %x27FF1036.i = alloca i64, align 8
  %x27FF103E.i = alloca i64, align 8
  %xB06B6C44.i = alloca i64, align 8
  %x97947C7A.i = alloca i64, align 8
  %x00.i461 = alloca i64, align 8
  %x01.i462 = alloca i64, align 8
  %x10.i463 = alloca i64, align 8
  %x11.i464 = alloca i64, align 8
  %x20.i465 = alloca i64, align 8
  %x21.i466 = alloca i64, align 8
  %x30.i467 = alloca i64, align 8
  %x31.i468 = alloca i64, align 8
  %a1.addr.i405 = alloca i64, align 8
  %a2.addr.i406 = alloca i64, align 8
  %a3.addr.i407 = alloca i64, align 8
  %a4.addr.i408 = alloca i64, align 8
  %a5.addr.i409 = alloca i64, align 8
  %a6.addr.i410 = alloca i64, align 8
  %out1.addr.i411 = alloca i64*, align 8
  %out2.addr.i412 = alloca i64*, align 8
  %out3.addr.i413 = alloca i64*, align 8
  %out4.addr.i414 = alloca i64*, align 8
  %x0C0C0C0C.i = alloca i64, align 8
  %x0000F0F0.i = alloca i64, align 8
  %x00FFF00F.i = alloca i64, align 8
  %x00555005.i = alloca i64, align 8
  %x00515001.i = alloca i64, align 8
  %x33000330.i = alloca i64, align 8
  %x77555775.i = alloca i64, align 8
  %x30303030.i = alloca i64, align 8
  %x3030CFCF.i = alloca i64, align 8
  %x30104745.i = alloca i64, align 8
  %x30555745.i = alloca i64, align 8
  %xFF000FF0.i = alloca i64, align 8
  %xCF1048B5.i = alloca i64, align 8
  %x080A080A.i = alloca i64, align 8
  %xC71A40BF.i = alloca i64, align 8
  %xCB164CB3.i = alloca i64, align 8
  %x9E4319E6.i = alloca i64, align 8
  %x000019E6.i = alloca i64, align 8
  %xF429738C.i = alloca i64, align 8
  %xF4296A6A.i = alloca i64, align 8
  %xC729695A.i = alloca i64, align 8
  %xC47C3D2F.i = alloca i64, align 8
  %xF77F3F3F.i = alloca i64, align 8
  %x9E43E619.i = alloca i64, align 8
  %x693CD926.i = alloca i64, align 8
  %xF719A695.i = alloca i64, align 8
  %xF4FF73FF.i = alloca i64, align 8
  %x03E6D56A.i = alloca i64, align 8
  %x56B3803F.i = alloca i64, align 8
  %xF700A600.i = alloca i64, align 8
  %x61008000.i = alloca i64, align 8
  %x03B7856B.i = alloca i64, align 8
  %x62B7056B.i = alloca i64, align 8
  %x00.i415 = alloca i64, align 8
  %x01.i416 = alloca i64, align 8
  %x10.i417 = alloca i64, align 8
  %x11.i418 = alloca i64, align 8
  %x20.i419 = alloca i64, align 8
  %x21.i420 = alloca i64, align 8
  %x30.i421 = alloca i64, align 8
  %x31.i422 = alloca i64, align 8
  %kp.i = alloca i64*, align 8
  %ic.i = alloca i32, align 4
  %vp.i = alloca i64*, align 8
  %v0.i = alloca i64, align 8
  %v1.i = alloca i64, align 8
  %v2.i = alloca i64, align 8
  %v3.i = alloca i64, align 8
  %v4.i = alloca i64, align 8
  %v5.i = alloca i64, align 8
  %v6.i = alloca i64, align 8
  %v7.i = alloca i64, align 8
  %m.i = alloca i64, align 8
  %va.i = alloca i64, align 8
  %vb.i = alloca i64, align 8
  %tmp.i = alloca i64, align 8
  %m30.i = alloca i64, align 8
  %va32.i = alloca i64, align 8
  %vb34.i = alloca i64, align 8
  %tmp36.i = alloca i64, align 8
  %m60.i = alloca i64, align 8
  %va62.i = alloca i64, align 8
  %vb64.i = alloca i64, align 8
  %tmp66.i = alloca i64, align 8
  %m91.i = alloca i64, align 8
  %va93.i = alloca i64, align 8
  %vb95.i = alloca i64, align 8
  %tmp97.i = alloca i64, align 8
  %m122.i = alloca i64, align 8
  %va124.i = alloca i64, align 8
  %vb126.i = alloca i64, align 8
  %tmp128.i = alloca i64, align 8
  %m153.i = alloca i64, align 8
  %va155.i = alloca i64, align 8
  %vb157.i = alloca i64, align 8
  %tmp159.i = alloca i64, align 8
  %m184.i = alloca i64, align 8
  %va186.i = alloca i64, align 8
  %vb188.i = alloca i64, align 8
  %tmp190.i = alloca i64, align 8
  %a1.addr.i = alloca i64, align 8
  %a2.addr.i = alloca i64, align 8
  %a3.addr.i = alloca i64, align 8
  %a4.addr.i = alloca i64, align 8
  %a5.addr.i = alloca i64, align 8
  %a6.addr.i = alloca i64, align 8
  %out1.addr.i = alloca i64*, align 8
  %out2.addr.i = alloca i64*, align 8
  %out3.addr.i = alloca i64*, align 8
  %out4.addr.i = alloca i64*, align 8
  %x55005500.i = alloca i64, align 8
  %x5A0F5A0F.i = alloca i64, align 8
  %x3333FFFF.i = alloca i64, align 8
  %x66666666.i = alloca i64, align 8
  %x22226666.i = alloca i64, align 8
  %x2D2D6969.i = alloca i64, align 8
  %x25202160.i = alloca i64, align 8
  %x00FFFF00.i = alloca i64, align 8
  %x33CCCC33.i = alloca i64, align 8
  %x4803120C.i = alloca i64, align 8
  %x2222FFFF.i = alloca i64, align 8
  %x6A21EDF3.i = alloca i64, align 8
  %x4A01CC93.i = alloca i64, align 8
  %x5555FFFF.i = alloca i64, align 8
  %x7F75FFFF.i = alloca i64, align 8
  %x00D20096.i = alloca i64, align 8
  %x7FA7FF69.i = alloca i64, align 8
  %x0A0A0000.i = alloca i64, align 8
  %x0AD80096.i = alloca i64, align 8
  %x00999900.i = alloca i64, align 8
  %x0AD99996.i = alloca i64, align 8
  %x22332233.i = alloca i64, align 8
  %x257AA5F0.i = alloca i64, align 8
  %x054885C0.i = alloca i64, align 8
  %xFAB77A3F.i = alloca i64, align 8
  %x2221EDF3.i = alloca i64, align 8
  %xD89697CC.i = alloca i64, align 8
  %x05B77AC0.i = alloca i64, align 8
  %x05F77AD6.i = alloca i64, align 8
  %x36C48529.i = alloca i64, align 8
  %x6391D07C.i = alloca i64, align 8
  %xBB0747B0.i = alloca i64, align 8
  %x4C460000.i = alloca i64, align 8
  %x4EDF9996.i = alloca i64, align 8
  %x2D4E49EA.i = alloca i64, align 8
  %xBBFFFFB0.i = alloca i64, align 8
  %x96B1B65A.i = alloca i64, align 8
  %x5AFF5AFF.i = alloca i64, align 8
  %x52B11215.i = alloca i64, align 8
  %x4201C010.i = alloca i64, align 8
  %x10B0D205.i = alloca i64, align 8
  %x00.i = alloca i64, align 8
  %x01.i = alloca i64, align 8
  %x10.i = alloca i64, align 8
  %x11.i = alloca i64, align 8
  %x20.i = alloca i64, align 8
  %x21.i = alloca i64, align 8
  %x30.i = alloca i64, align 8
  %x31.i = alloca i64, align 8
  %count.addr = alloca i32, align 4
  %keys_count.addr = alloca i32, align 4
  %k = alloca i64**, align 8
  %iterations = alloca i32, align 4
  %rounds_and_swapped = alloca i32, align 4
  %zero = alloca i64, align 8
  store i32 %count, i32* %count.addr, align 4
  store i32 %keys_count, i32* %keys_count.addr, align 4
  %0 = load i32, i32* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 9), align 8
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %finalize_keys

if.end:                                           ; preds = %entry
  br label %body

body:                                             ; preds = %DES_bs_finalize_keys.exit, %if.end
  store i64 0, i64* %zero, align 8
  %1 = load i64, i64* %zero, align 8
  store i64 %1, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 0), align 8
  %2 = load i64, i64* %zero, align 8
  store i64 %2, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 1), align 8
  %3 = load i64, i64* %zero, align 8
  store i64 %3, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 2), align 8
  %4 = load i64, i64* %zero, align 8
  store i64 %4, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 3), align 8
  %5 = load i64, i64* %zero, align 8
  store i64 %5, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 4), align 8
  %6 = load i64, i64* %zero, align 8
  store i64 %6, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 5), align 8
  %7 = load i64, i64* %zero, align 8
  store i64 %7, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 6), align 8
  %8 = load i64, i64* %zero, align 8
  store i64 %8, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 7), align 8
  %9 = load i64, i64* %zero, align 8
  store i64 %9, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 8), align 8
  %10 = load i64, i64* %zero, align 8
  store i64 %10, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 9), align 8
  %11 = load i64, i64* %zero, align 8
  store i64 %11, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 10), align 8
  %12 = load i64, i64* %zero, align 8
  store i64 %12, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 11), align 8
  %13 = load i64, i64* %zero, align 8
  store i64 %13, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 12), align 8
  %14 = load i64, i64* %zero, align 8
  store i64 %14, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 13), align 8
  %15 = load i64, i64* %zero, align 8
  store i64 %15, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 14), align 8
  %16 = load i64, i64* %zero, align 8
  store i64 %16, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 15), align 8
  %17 = load i64, i64* %zero, align 8
  store i64 %17, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 16), align 8
  %18 = load i64, i64* %zero, align 8
  store i64 %18, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 17), align 8
  %19 = load i64, i64* %zero, align 8
  store i64 %19, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 18), align 8
  %20 = load i64, i64* %zero, align 8
  store i64 %20, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 19), align 8
  %21 = load i64, i64* %zero, align 8
  store i64 %21, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 20), align 8
  %22 = load i64, i64* %zero, align 8
  store i64 %22, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 21), align 8
  %23 = load i64, i64* %zero, align 8
  store i64 %23, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 22), align 8
  %24 = load i64, i64* %zero, align 8
  store i64 %24, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 23), align 8
  %25 = load i64, i64* %zero, align 8
  store i64 %25, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 24), align 8
  %26 = load i64, i64* %zero, align 8
  store i64 %26, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 25), align 8
  %27 = load i64, i64* %zero, align 8
  store i64 %27, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 26), align 8
  %28 = load i64, i64* %zero, align 8
  store i64 %28, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 27), align 8
  %29 = load i64, i64* %zero, align 8
  store i64 %29, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 28), align 8
  %30 = load i64, i64* %zero, align 8
  store i64 %30, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 29), align 8
  %31 = load i64, i64* %zero, align 8
  store i64 %31, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 30), align 8
  %32 = load i64, i64* %zero, align 8
  store i64 %32, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 31), align 8
  %33 = load i64, i64* %zero, align 8
  store i64 %33, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 32), align 8
  %34 = load i64, i64* %zero, align 8
  store i64 %34, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 33), align 8
  %35 = load i64, i64* %zero, align 8
  store i64 %35, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 34), align 8
  %36 = load i64, i64* %zero, align 8
  store i64 %36, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 35), align 8
  %37 = load i64, i64* %zero, align 8
  store i64 %37, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 36), align 8
  %38 = load i64, i64* %zero, align 8
  store i64 %38, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 37), align 8
  %39 = load i64, i64* %zero, align 8
  store i64 %39, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 38), align 8
  %40 = load i64, i64* %zero, align 8
  store i64 %40, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 39), align 8
  %41 = load i64, i64* %zero, align 8
  store i64 %41, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 40), align 8
  %42 = load i64, i64* %zero, align 8
  store i64 %42, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 41), align 8
  %43 = load i64, i64* %zero, align 8
  store i64 %43, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 42), align 8
  %44 = load i64, i64* %zero, align 8
  store i64 %44, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 43), align 8
  %45 = load i64, i64* %zero, align 8
  store i64 %45, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 44), align 8
  %46 = load i64, i64* %zero, align 8
  store i64 %46, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 45), align 8
  %47 = load i64, i64* %zero, align 8
  store i64 %47, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 46), align 8
  %48 = load i64, i64* %zero, align 8
  store i64 %48, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 47), align 8
  %49 = load i64, i64* %zero, align 8
  store i64 %49, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 48), align 8
  %50 = load i64, i64* %zero, align 8
  store i64 %50, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 49), align 8
  %51 = load i64, i64* %zero, align 8
  store i64 %51, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 50), align 8
  %52 = load i64, i64* %zero, align 8
  store i64 %52, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 51), align 8
  %53 = load i64, i64* %zero, align 8
  store i64 %53, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 52), align 8
  %54 = load i64, i64* %zero, align 8
  store i64 %54, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 53), align 8
  %55 = load i64, i64* %zero, align 8
  store i64 %55, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 54), align 8
  %56 = load i64, i64* %zero, align 8
  store i64 %56, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 55), align 8
  %57 = load i64, i64* %zero, align 8
  store i64 %57, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 56), align 8
  %58 = load i64, i64* %zero, align 8
  store i64 %58, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 57), align 8
  %59 = load i64, i64* %zero, align 8
  store i64 %59, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 58), align 8
  %60 = load i64, i64* %zero, align 8
  store i64 %60, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 59), align 8
  %61 = load i64, i64* %zero, align 8
  store i64 %61, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 60), align 8
  %62 = load i64, i64* %zero, align 8
  store i64 %62, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 61), align 8
  %63 = load i64, i64* %zero, align 8
  store i64 %63, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 62), align 8
  %64 = load i64, i64* %zero, align 8
  store i64 %64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 63), align 8
  store i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 0, i32 0, i32 0), i64*** %k, align 8
  store i32 8, i32* %rounds_and_swapped, align 4
  %65 = load i32, i32* %count.addr, align 4
  store i32 %65, i32* %iterations, align 4
  br label %start

start:                                            ; preds = %if.then396, %if.then386, %body
  %66 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 0), align 8
  %arrayidx = getelementptr inbounds i64, i64* %66, i64 0
  %67 = load i64, i64* %arrayidx, align 8
  %68 = load i64**, i64*** %k, align 8
  %arrayidx1 = getelementptr inbounds i64*, i64** %68, i64 0
  %69 = load i64*, i64** %arrayidx1, align 8
  %arrayidx2 = getelementptr inbounds i64, i64* %69, i64 0
  %70 = load i64, i64* %arrayidx2, align 8
  %xor = xor i64 %67, %70
  %71 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 1), align 8
  %arrayidx3 = getelementptr inbounds i64, i64* %71, i64 0
  %72 = load i64, i64* %arrayidx3, align 8
  %73 = load i64**, i64*** %k, align 8
  %arrayidx4 = getelementptr inbounds i64*, i64** %73, i64 1
  %74 = load i64*, i64** %arrayidx4, align 8
  %arrayidx5 = getelementptr inbounds i64, i64* %74, i64 0
  %75 = load i64, i64* %arrayidx5, align 8
  %xor6 = xor i64 %72, %75
  %76 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 2), align 8
  %arrayidx7 = getelementptr inbounds i64, i64* %76, i64 0
  %77 = load i64, i64* %arrayidx7, align 8
  %78 = load i64**, i64*** %k, align 8
  %arrayidx8 = getelementptr inbounds i64*, i64** %78, i64 2
  %79 = load i64*, i64** %arrayidx8, align 8
  %arrayidx9 = getelementptr inbounds i64, i64* %79, i64 0
  %80 = load i64, i64* %arrayidx9, align 8
  %xor10 = xor i64 %77, %80
  %81 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 3), align 8
  %arrayidx11 = getelementptr inbounds i64, i64* %81, i64 0
  %82 = load i64, i64* %arrayidx11, align 8
  %83 = load i64**, i64*** %k, align 8
  %arrayidx12 = getelementptr inbounds i64*, i64** %83, i64 3
  %84 = load i64*, i64** %arrayidx12, align 8
  %arrayidx13 = getelementptr inbounds i64, i64* %84, i64 0
  %85 = load i64, i64* %arrayidx13, align 8
  %xor14 = xor i64 %82, %85
  %86 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 4), align 8
  %arrayidx15 = getelementptr inbounds i64, i64* %86, i64 0
  %87 = load i64, i64* %arrayidx15, align 8
  %88 = load i64**, i64*** %k, align 8
  %arrayidx16 = getelementptr inbounds i64*, i64** %88, i64 4
  %89 = load i64*, i64** %arrayidx16, align 8
  %arrayidx17 = getelementptr inbounds i64, i64* %89, i64 0
  %90 = load i64, i64* %arrayidx17, align 8
  %xor18 = xor i64 %87, %90
  %91 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 5), align 8
  %arrayidx19 = getelementptr inbounds i64, i64* %91, i64 0
  %92 = load i64, i64* %arrayidx19, align 8
  %93 = load i64**, i64*** %k, align 8
  %arrayidx20 = getelementptr inbounds i64*, i64** %93, i64 5
  %94 = load i64*, i64** %arrayidx20, align 8
  %arrayidx21 = getelementptr inbounds i64, i64* %94, i64 0
  %95 = load i64, i64* %arrayidx21, align 8
  %xor22 = xor i64 %92, %95
  store i64 %xor, i64* %a1.addr.i, align 8
  store i64 %xor6, i64* %a2.addr.i, align 8
  store i64 %xor10, i64* %a3.addr.i, align 8
  store i64 %xor14, i64* %a4.addr.i, align 8
  store i64 %xor18, i64* %a5.addr.i, align 8
  store i64 %xor22, i64* %a6.addr.i, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 40), i64** %out1.addr.i, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 48), i64** %out2.addr.i, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 54), i64** %out3.addr.i, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 62), i64** %out4.addr.i, align 8
  %96 = load i64, i64* %a1.addr.i, align 8
  %97 = load i64, i64* %a5.addr.i, align 8
  %neg.i = xor i64 %97, -1
  %and.i = and i64 %96, %neg.i
  store i64 %and.i, i64* %x55005500.i, align 8
  %98 = load i64, i64* %a4.addr.i, align 8
  %99 = load i64, i64* %x55005500.i, align 8
  %xor.i = xor i64 %98, %99
  store i64 %xor.i, i64* %x5A0F5A0F.i, align 8
  %100 = load i64, i64* %a3.addr.i, align 8
  %101 = load i64, i64* %a6.addr.i, align 8
  %or.i = or i64 %100, %101
  store i64 %or.i, i64* %x3333FFFF.i, align 8
  %102 = load i64, i64* %a1.addr.i, align 8
  %103 = load i64, i64* %a3.addr.i, align 8
  %xor1.i = xor i64 %102, %103
  store i64 %xor1.i, i64* %x66666666.i, align 8
  %104 = load i64, i64* %x3333FFFF.i, align 8
  %105 = load i64, i64* %x66666666.i, align 8
  %and2.i = and i64 %104, %105
  store i64 %and2.i, i64* %x22226666.i, align 8
  %106 = load i64, i64* %a4.addr.i, align 8
  %107 = load i64, i64* %x22226666.i, align 8
  %xor3.i = xor i64 %106, %107
  store i64 %xor3.i, i64* %x2D2D6969.i, align 8
  %108 = load i64, i64* %x2D2D6969.i, align 8
  %109 = load i64, i64* %x5A0F5A0F.i, align 8
  %neg4.i = xor i64 %109, -1
  %and5.i = and i64 %108, %neg4.i
  store i64 %and5.i, i64* %x25202160.i, align 8
  %110 = load i64, i64* %a5.addr.i, align 8
  %111 = load i64, i64* %a6.addr.i, align 8
  %xor6.i = xor i64 %110, %111
  store i64 %xor6.i, i64* %x00FFFF00.i, align 8
  %112 = load i64, i64* %a3.addr.i, align 8
  %113 = load i64, i64* %x00FFFF00.i, align 8
  %xor7.i = xor i64 %112, %113
  store i64 %xor7.i, i64* %x33CCCC33.i, align 8
  %114 = load i64, i64* %x5A0F5A0F.i, align 8
  %115 = load i64, i64* %x33CCCC33.i, align 8
  %neg8.i = xor i64 %115, -1
  %and9.i = and i64 %114, %neg8.i
  store i64 %and9.i, i64* %x4803120C.i, align 8
  %116 = load i64, i64* %a6.addr.i, align 8
  %117 = load i64, i64* %x22226666.i, align 8
  %or10.i = or i64 %116, %117
  store i64 %or10.i, i64* %x2222FFFF.i, align 8
  %118 = load i64, i64* %x4803120C.i, align 8
  %119 = load i64, i64* %x2222FFFF.i, align 8
  %xor11.i = xor i64 %118, %119
  store i64 %xor11.i, i64* %x6A21EDF3.i, align 8
  %120 = load i64, i64* %x6A21EDF3.i, align 8
  %121 = load i64, i64* %x25202160.i, align 8
  %neg12.i = xor i64 %121, -1
  %and13.i = and i64 %120, %neg12.i
  store i64 %and13.i, i64* %x4A01CC93.i, align 8
  %122 = load i64, i64* %a1.addr.i, align 8
  %123 = load i64, i64* %a6.addr.i, align 8
  %or14.i = or i64 %122, %123
  store i64 %or14.i, i64* %x5555FFFF.i, align 8
  %124 = load i64, i64* %x6A21EDF3.i, align 8
  %125 = load i64, i64* %x5555FFFF.i, align 8
  %or15.i = or i64 %124, %125
  store i64 %or15.i, i64* %x7F75FFFF.i, align 8
  %126 = load i64, i64* %a5.addr.i, align 8
  %127 = load i64, i64* %x2D2D6969.i, align 8
  %neg16.i = xor i64 %127, -1
  %and17.i = and i64 %126, %neg16.i
  store i64 %and17.i, i64* %x00D20096.i, align 8
  %128 = load i64, i64* %x7F75FFFF.i, align 8
  %129 = load i64, i64* %x00D20096.i, align 8
  %xor18.i = xor i64 %128, %129
  store i64 %xor18.i, i64* %x7FA7FF69.i, align 8
  %130 = load i64, i64* %a4.addr.i, align 8
  %131 = load i64, i64* %x5555FFFF.i, align 8
  %neg19.i = xor i64 %131, -1
  %and20.i = and i64 %130, %neg19.i
  store i64 %and20.i, i64* %x0A0A0000.i, align 8
  %132 = load i64, i64* %x00D20096.i, align 8
  %133 = load i64, i64* %x0A0A0000.i, align 8
  %xor21.i = xor i64 %132, %133
  store i64 %xor21.i, i64* %x0AD80096.i, align 8
  %134 = load i64, i64* %x00FFFF00.i, align 8
  %135 = load i64, i64* %x66666666.i, align 8
  %neg22.i = xor i64 %135, -1
  %and23.i = and i64 %134, %neg22.i
  store i64 %and23.i, i64* %x00999900.i, align 8
  %136 = load i64, i64* %x0AD80096.i, align 8
  %137 = load i64, i64* %x00999900.i, align 8
  %or24.i = or i64 %136, %137
  store i64 %or24.i, i64* %x0AD99996.i, align 8
  %138 = load i64, i64* %a3.addr.i, align 8
  %139 = load i64, i64* %x55005500.i, align 8
  %neg25.i = xor i64 %139, -1
  %and26.i = and i64 %138, %neg25.i
  store i64 %and26.i, i64* %x22332233.i, align 8
  %140 = load i64, i64* %x5A0F5A0F.i, align 8
  %141 = load i64, i64* %x7F75FFFF.i, align 8
  %xor27.i = xor i64 %140, %141
  store i64 %xor27.i, i64* %x257AA5F0.i, align 8
  %142 = load i64, i64* %x257AA5F0.i, align 8
  %143 = load i64, i64* %x22332233.i, align 8
  %neg28.i = xor i64 %143, -1
  %and29.i = and i64 %142, %neg28.i
  store i64 %and29.i, i64* %x054885C0.i, align 8
  %144 = load i64, i64* %x054885C0.i, align 8
  %neg30.i = xor i64 %144, -1
  store i64 %neg30.i, i64* %xFAB77A3F.i, align 8
  %145 = load i64, i64* %x3333FFFF.i, align 8
  %146 = load i64, i64* %x6A21EDF3.i, align 8
  %and31.i = and i64 %145, %146
  store i64 %and31.i, i64* %x2221EDF3.i, align 8
  %147 = load i64, i64* %xFAB77A3F.i, align 8
  %148 = load i64, i64* %x2221EDF3.i, align 8
  %xor32.i = xor i64 %147, %148
  store i64 %xor32.i, i64* %xD89697CC.i, align 8
  %149 = load i64, i64* %x7FA7FF69.i, align 8
  %150 = load i64, i64* %a2.addr.i, align 8
  %neg33.i = xor i64 %150, -1
  %and34.i = and i64 %149, %neg33.i
  store i64 %and34.i, i64* %x20.i, align 8
  %151 = load i64, i64* %x20.i, align 8
  %152 = load i64, i64* %xD89697CC.i, align 8
  %xor35.i = xor i64 %151, %152
  store i64 %xor35.i, i64* %x21.i, align 8
  %153 = load i64*, i64** %out3.addr.i, align 8
  %154 = load i64, i64* %153, align 8
  %155 = load i64, i64* %x21.i, align 8
  %xor36.i = xor i64 %154, %155
  %156 = load i64*, i64** %out3.addr.i, align 8
  store i64 %xor36.i, i64* %156, align 8
  %157 = load i64, i64* %x00FFFF00.i, align 8
  %158 = load i64, i64* %x054885C0.i, align 8
  %xor37.i = xor i64 %157, %158
  store i64 %xor37.i, i64* %x05B77AC0.i, align 8
  %159 = load i64, i64* %x00D20096.i, align 8
  %160 = load i64, i64* %x05B77AC0.i, align 8
  %or38.i = or i64 %159, %160
  store i64 %or38.i, i64* %x05F77AD6.i, align 8
  %161 = load i64, i64* %x3333FFFF.i, align 8
  %162 = load i64, i64* %x05F77AD6.i, align 8
  %xor39.i = xor i64 %161, %162
  store i64 %xor39.i, i64* %x36C48529.i, align 8
  %163 = load i64, i64* %a1.addr.i, align 8
  %164 = load i64, i64* %x36C48529.i, align 8
  %xor40.i = xor i64 %163, %164
  store i64 %xor40.i, i64* %x6391D07C.i, align 8
  %165 = load i64, i64* %xD89697CC.i, align 8
  %166 = load i64, i64* %x6391D07C.i, align 8
  %xor41.i = xor i64 %165, %166
  store i64 %xor41.i, i64* %xBB0747B0.i, align 8
  %167 = load i64, i64* %x25202160.i, align 8
  %168 = load i64, i64* %a2.addr.i, align 8
  %or42.i = or i64 %167, %168
  store i64 %or42.i, i64* %x00.i, align 8
  %169 = load i64, i64* %x00.i, align 8
  %170 = load i64, i64* %xBB0747B0.i, align 8
  %xor43.i = xor i64 %169, %170
  store i64 %xor43.i, i64* %x01.i, align 8
  %171 = load i64*, i64** %out1.addr.i, align 8
  %172 = load i64, i64* %171, align 8
  %173 = load i64, i64* %x01.i, align 8
  %xor44.i = xor i64 %172, %173
  %174 = load i64*, i64** %out1.addr.i, align 8
  store i64 %xor44.i, i64* %174, align 8
  %175 = load i64, i64* %x3333FFFF.i, align 8
  %176 = load i64, i64* %x7F75FFFF.i, align 8
  %xor45.i = xor i64 %175, %176
  store i64 %xor45.i, i64* %x4C460000.i, align 8
  %177 = load i64, i64* %x0AD99996.i, align 8
  %178 = load i64, i64* %x4C460000.i, align 8
  %or46.i = or i64 %177, %178
  store i64 %or46.i, i64* %x4EDF9996.i, align 8
  %179 = load i64, i64* %x6391D07C.i, align 8
  %180 = load i64, i64* %x4EDF9996.i, align 8
  %xor47.i = xor i64 %179, %180
  store i64 %xor47.i, i64* %x2D4E49EA.i, align 8
  %181 = load i64, i64* %x00FFFF00.i, align 8
  %182 = load i64, i64* %xBB0747B0.i, align 8
  %or48.i = or i64 %181, %182
  store i64 %or48.i, i64* %xBBFFFFB0.i, align 8
  %183 = load i64, i64* %x2D4E49EA.i, align 8
  %184 = load i64, i64* %xBBFFFFB0.i, align 8
  %xor49.i = xor i64 %183, %184
  store i64 %xor49.i, i64* %x96B1B65A.i, align 8
  %185 = load i64, i64* %x4A01CC93.i, align 8
  %186 = load i64, i64* %a2.addr.i, align 8
  %or50.i = or i64 %185, %186
  store i64 %or50.i, i64* %x10.i, align 8
  %187 = load i64, i64* %x10.i, align 8
  %188 = load i64, i64* %x96B1B65A.i, align 8
  %xor51.i = xor i64 %187, %188
  store i64 %xor51.i, i64* %x11.i, align 8
  %189 = load i64*, i64** %out2.addr.i, align 8
  %190 = load i64, i64* %189, align 8
  %191 = load i64, i64* %x11.i, align 8
  %xor52.i = xor i64 %190, %191
  %192 = load i64*, i64** %out2.addr.i, align 8
  store i64 %xor52.i, i64* %192, align 8
  %193 = load i64, i64* %a5.addr.i, align 8
  %194 = load i64, i64* %x5A0F5A0F.i, align 8
  %or53.i = or i64 %193, %194
  store i64 %or53.i, i64* %x5AFF5AFF.i, align 8
  %195 = load i64, i64* %x5AFF5AFF.i, align 8
  %196 = load i64, i64* %x2D4E49EA.i, align 8
  %neg54.i = xor i64 %196, -1
  %and55.i = and i64 %195, %neg54.i
  store i64 %and55.i, i64* %x52B11215.i, align 8
  %197 = load i64, i64* %x4A01CC93.i, align 8
  %198 = load i64, i64* %x6391D07C.i, align 8
  %and56.i = and i64 %197, %198
  store i64 %and56.i, i64* %x4201C010.i, align 8
  %199 = load i64, i64* %x52B11215.i, align 8
  %200 = load i64, i64* %x4201C010.i, align 8
  %xor57.i = xor i64 %199, %200
  store i64 %xor57.i, i64* %x10B0D205.i, align 8
  %201 = load i64, i64* %x10B0D205.i, align 8
  %202 = load i64, i64* %a2.addr.i, align 8
  %or58.i = or i64 %201, %202
  store i64 %or58.i, i64* %x30.i, align 8
  %203 = load i64, i64* %x30.i, align 8
  %204 = load i64, i64* %x0AD99996.i, align 8
  %xor59.i = xor i64 %203, %204
  store i64 %xor59.i, i64* %x31.i, align 8
  %205 = load i64*, i64** %out4.addr.i, align 8
  %206 = load i64, i64* %205, align 8
  %207 = load i64, i64* %x31.i, align 8
  %xor60.i = xor i64 %206, %207
  %208 = load i64*, i64** %out4.addr.i, align 8
  store i64 %xor60.i, i64* %208, align 8
  %209 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 6), align 8
  %arrayidx23 = getelementptr inbounds i64, i64* %209, i64 0
  %210 = load i64, i64* %arrayidx23, align 8
  %211 = load i64**, i64*** %k, align 8
  %arrayidx24 = getelementptr inbounds i64*, i64** %211, i64 6
  %212 = load i64*, i64** %arrayidx24, align 8
  %arrayidx25 = getelementptr inbounds i64, i64* %212, i64 0
  %213 = load i64, i64* %arrayidx25, align 8
  %xor26 = xor i64 %210, %213
  %214 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 7), align 8
  %arrayidx27 = getelementptr inbounds i64, i64* %214, i64 0
  %215 = load i64, i64* %arrayidx27, align 8
  %216 = load i64**, i64*** %k, align 8
  %arrayidx28 = getelementptr inbounds i64*, i64** %216, i64 7
  %217 = load i64*, i64** %arrayidx28, align 8
  %arrayidx29 = getelementptr inbounds i64, i64* %217, i64 0
  %218 = load i64, i64* %arrayidx29, align 8
  %xor30 = xor i64 %215, %218
  %219 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 8), align 8
  %arrayidx31 = getelementptr inbounds i64, i64* %219, i64 0
  %220 = load i64, i64* %arrayidx31, align 8
  %221 = load i64**, i64*** %k, align 8
  %arrayidx32 = getelementptr inbounds i64*, i64** %221, i64 8
  %222 = load i64*, i64** %arrayidx32, align 8
  %arrayidx33 = getelementptr inbounds i64, i64* %222, i64 0
  %223 = load i64, i64* %arrayidx33, align 8
  %xor34 = xor i64 %220, %223
  %224 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 9), align 8
  %arrayidx35 = getelementptr inbounds i64, i64* %224, i64 0
  %225 = load i64, i64* %arrayidx35, align 8
  %226 = load i64**, i64*** %k, align 8
  %arrayidx36 = getelementptr inbounds i64*, i64** %226, i64 9
  %227 = load i64*, i64** %arrayidx36, align 8
  %arrayidx37 = getelementptr inbounds i64, i64* %227, i64 0
  %228 = load i64, i64* %arrayidx37, align 8
  %xor38 = xor i64 %225, %228
  %229 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 10), align 8
  %arrayidx39 = getelementptr inbounds i64, i64* %229, i64 0
  %230 = load i64, i64* %arrayidx39, align 8
  %231 = load i64**, i64*** %k, align 8
  %arrayidx40 = getelementptr inbounds i64*, i64** %231, i64 10
  %232 = load i64*, i64** %arrayidx40, align 8
  %arrayidx41 = getelementptr inbounds i64, i64* %232, i64 0
  %233 = load i64, i64* %arrayidx41, align 8
  %xor42 = xor i64 %230, %233
  %234 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 11), align 8
  %arrayidx43 = getelementptr inbounds i64, i64* %234, i64 0
  %235 = load i64, i64* %arrayidx43, align 8
  %236 = load i64**, i64*** %k, align 8
  %arrayidx44 = getelementptr inbounds i64*, i64** %236, i64 11
  %237 = load i64*, i64** %arrayidx44, align 8
  %arrayidx45 = getelementptr inbounds i64, i64* %237, i64 0
  %238 = load i64, i64* %arrayidx45, align 8
  %xor46 = xor i64 %235, %238
  store i64 %xor26, i64* %a1.addr.i1613, align 8
  store i64 %xor30, i64* %a2.addr.i1614, align 8
  store i64 %xor34, i64* %a3.addr.i1615, align 8
  store i64 %xor38, i64* %a4.addr.i1616, align 8
  store i64 %xor42, i64* %a5.addr.i1617, align 8
  store i64 %xor46, i64* %a6.addr.i1618, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 44), i64** %out1.addr.i1619, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 59), i64** %out2.addr.i1620, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 33), i64** %out3.addr.i1621, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 49), i64** %out4.addr.i1622, align 8
  %239 = load i64, i64* %a2.addr.i1614, align 8
  %240 = load i64, i64* %a5.addr.i1617, align 8
  %xor.i1667 = xor i64 %239, %240
  store i64 %xor.i1667, i64* %x33CC33CC.i1623, align 8
  %241 = load i64, i64* %a1.addr.i1613, align 8
  %242 = load i64, i64* %a6.addr.i1618, align 8
  %neg.i1668 = xor i64 %242, -1
  %and.i1669 = and i64 %241, %neg.i1668
  store i64 %and.i1669, i64* %x55550000.i1624, align 8
  %243 = load i64, i64* %a5.addr.i1617, align 8
  %244 = load i64, i64* %x55550000.i1624, align 8
  %neg1.i1670 = xor i64 %244, -1
  %and2.i1671 = and i64 %243, %neg1.i1670
  store i64 %and2.i1671, i64* %x00AA00FF.i1625, align 8
  %245 = load i64, i64* %a2.addr.i1614, align 8
  %246 = load i64, i64* %x00AA00FF.i1625, align 8
  %or.i1672 = or i64 %245, %246
  store i64 %or.i1672, i64* %x33BB33FF.i1626, align 8
  %247 = load i64, i64* %x33CC33CC.i1623, align 8
  %248 = load i64, i64* %a6.addr.i1618, align 8
  %neg3.i1673 = xor i64 %248, -1
  %and4.i1674 = and i64 %247, %neg3.i1673
  store i64 %and4.i1674, i64* %x33CC0000.i1627, align 8
  %249 = load i64, i64* %a1.addr.i1613, align 8
  %250 = load i64, i64* %x33CC33CC.i1623, align 8
  %and5.i1675 = and i64 %249, %250
  store i64 %and5.i1675, i64* %x11441144.i1628, align 8
  %251 = load i64, i64* %a5.addr.i1617, align 8
  %252 = load i64, i64* %x11441144.i1628, align 8
  %xor6.i1676 = xor i64 %251, %252
  store i64 %xor6.i1676, i64* %x11BB11BB.i1629, align 8
  %253 = load i64, i64* %x11BB11BB.i1629, align 8
  %254 = load i64, i64* %x33CC0000.i1627, align 8
  %neg7.i1677 = xor i64 %254, -1
  %and8.i1678 = and i64 %253, %neg7.i1677
  store i64 %and8.i1678, i64* %x003311BB.i1630, align 8
  %255 = load i64, i64* %a3.addr.i1615, align 8
  %256 = load i64, i64* %a6.addr.i1618, align 8
  %and9.i1679 = and i64 %255, %256
  store i64 %and9.i1679, i64* %x00000F0F.i1631, align 8
  %257 = load i64, i64* %x00AA00FF.i1625, align 8
  %258 = load i64, i64* %x33CC0000.i1627, align 8
  %xor10.i1680 = xor i64 %257, %258
  store i64 %xor10.i1680, i64* %x336600FF.i1632, align 8
  %259 = load i64, i64* %x33BB33FF.i1626, align 8
  %260 = load i64, i64* %x336600FF.i1632, align 8
  %and11.i1681 = and i64 %259, %260
  store i64 %and11.i1681, i64* %x332200FF.i1633, align 8
  %261 = load i64, i64* %x332200FF.i1633, align 8
  %262 = load i64, i64* %x00000F0F.i1631, align 8
  %neg12.i1682 = xor i64 %262, -1
  %and13.i1683 = and i64 %261, %neg12.i1682
  store i64 %and13.i1683, i64* %x332200F0.i1634, align 8
  %263 = load i64, i64* %a3.addr.i1615, align 8
  %264 = load i64, i64* %x332200FF.i1633, align 8
  %and14.i1684 = and i64 %263, %264
  store i64 %and14.i1684, i64* %x0302000F.i1635, align 8
  %265 = load i64, i64* %a1.addr.i1613, align 8
  %neg15.i1685 = xor i64 %265, -1
  store i64 %neg15.i1685, i64* %xAAAAAAAA.i1636, align 8
  %266 = load i64, i64* %x0302000F.i1635, align 8
  %267 = load i64, i64* %xAAAAAAAA.i1636, align 8
  %xor16.i1686 = xor i64 %266, %267
  store i64 %xor16.i1686, i64* %xA9A8AAA5.i1637, align 8
  %268 = load i64, i64* %a6.addr.i1618, align 8
  %269 = load i64, i64* %x33CC33CC.i1623, align 8
  %xor17.i1687 = xor i64 %268, %269
  store i64 %xor17.i1687, i64* %x33CCCC33.i1638, align 8
  %270 = load i64, i64* %x33CCCC33.i1638, align 8
  %271 = load i64, i64* %x00000F0F.i1631, align 8
  %neg18.i1688 = xor i64 %271, -1
  %and19.i1689 = and i64 %270, %neg18.i1688
  store i64 %and19.i1689, i64* %x33CCC030.i1639, align 8
  %272 = load i64, i64* %xA9A8AAA5.i1637, align 8
  %273 = load i64, i64* %x33CCC030.i1639, align 8
  %xor20.i1690 = xor i64 %272, %273
  store i64 %xor20.i1690, i64* %x9A646A95.i1640, align 8
  %274 = load i64, i64* %a4.addr.i1616, align 8
  %275 = load i64, i64* %x332200F0.i1634, align 8
  %neg21.i1691 = xor i64 %275, -1
  %and22.i1692 = and i64 %274, %neg21.i1691
  store i64 %and22.i1692, i64* %x10.i1661, align 8
  %276 = load i64, i64* %x10.i1661, align 8
  %277 = load i64, i64* %x9A646A95.i1640, align 8
  %xor23.i1693 = xor i64 %276, %277
  store i64 %xor23.i1693, i64* %x11.i1662, align 8
  %278 = load i64*, i64** %out2.addr.i1620, align 8
  %279 = load i64, i64* %278, align 8
  %280 = load i64, i64* %x11.i1662, align 8
  %xor24.i1694 = xor i64 %279, %280
  %281 = load i64*, i64** %out2.addr.i1620, align 8
  store i64 %xor24.i1694, i64* %281, align 8
  %282 = load i64, i64* %a2.addr.i1614, align 8
  %283 = load i64, i64* %x33CCC030.i1639, align 8
  %neg25.i1695 = xor i64 %283, -1
  %and26.i1696 = and i64 %282, %neg25.i1695
  store i64 %and26.i1696, i64* %x00333303.i1641, align 8
  %284 = load i64, i64* %x11BB11BB.i1629, align 8
  %285 = load i64, i64* %x00333303.i1641, align 8
  %xor27.i1697 = xor i64 %284, %285
  store i64 %xor27.i1697, i64* %x118822B8.i1642, align 8
  %286 = load i64, i64* %xA9A8AAA5.i1637, align 8
  %287 = load i64, i64* %x118822B8.i1642, align 8
  %neg28.i1698 = xor i64 %287, -1
  %and29.i1699 = and i64 %286, %neg28.i1698
  store i64 %and29.i1699, i64* %xA8208805.i1643, align 8
  %288 = load i64, i64* %a3.addr.i1615, align 8
  %289 = load i64, i64* %x33CCCC33.i1638, align 8
  %xor30.i1700 = xor i64 %288, %289
  store i64 %xor30.i1700, i64* %x3CC3C33C.i1644, align 8
  %290 = load i64, i64* %xA8208805.i1643, align 8
  %291 = load i64, i64* %x3CC3C33C.i1644, align 8
  %xor31.i1701 = xor i64 %290, %291
  store i64 %xor31.i1701, i64* %x94E34B39.i1645, align 8
  %292 = load i64, i64* %x33BB33FF.i1626, align 8
  %293 = load i64, i64* %a4.addr.i1616, align 8
  %neg32.i1702 = xor i64 %293, -1
  %and33.i1703 = and i64 %292, %neg32.i1702
  store i64 %and33.i1703, i64* %x00.i1659, align 8
  %294 = load i64, i64* %x00.i1659, align 8
  %295 = load i64, i64* %x94E34B39.i1645, align 8
  %xor34.i1704 = xor i64 %294, %295
  store i64 %xor34.i1704, i64* %x01.i1660, align 8
  %296 = load i64*, i64** %out1.addr.i1619, align 8
  %297 = load i64, i64* %296, align 8
  %298 = load i64, i64* %x01.i1660, align 8
  %xor35.i1705 = xor i64 %297, %298
  %299 = load i64*, i64** %out1.addr.i1619, align 8
  store i64 %xor35.i1705, i64* %299, align 8
  %300 = load i64, i64* %x0302000F.i1635, align 8
  %301 = load i64, i64* %x00333303.i1641, align 8
  %xor36.i1706 = xor i64 %300, %301
  store i64 %xor36.i1706, i64* %x0331330C.i1646, align 8
  %302 = load i64, i64* %x3CC3C33C.i1644, align 8
  %303 = load i64, i64* %x0331330C.i1646, align 8
  %or37.i1707 = or i64 %302, %303
  store i64 %or37.i1707, i64* %x3FF3F33C.i1647, align 8
  %304 = load i64, i64* %x33BB33FF.i1626, align 8
  %305 = load i64, i64* %x9A646A95.i1640, align 8
  %xor38.i1708 = xor i64 %304, %305
  store i64 %xor38.i1708, i64* %xA9DF596A.i1648, align 8
  %306 = load i64, i64* %x00000F0F.i1631, align 8
  %307 = load i64, i64* %xA9DF596A.i1648, align 8
  %or39.i1709 = or i64 %306, %307
  store i64 %or39.i1709, i64* %xA9DF5F6F.i1649, align 8
  %308 = load i64, i64* %x3FF3F33C.i1647, align 8
  %309 = load i64, i64* %xA9DF5F6F.i1649, align 8
  %xor40.i1710 = xor i64 %308, %309
  store i64 %xor40.i1710, i64* %x962CAC53.i1650, align 8
  %310 = load i64, i64* %x94E34B39.i1645, align 8
  %311 = load i64, i64* %x0331330C.i1646, align 8
  %xor41.i1711 = xor i64 %310, %311
  store i64 %xor41.i1711, i64* %x97D27835.i1651, align 8
  %312 = load i64, i64* %xA9DF5F6F.i1649, align 8
  %313 = load i64, i64* %x97D27835.i1651, align 8
  %and42.i1712 = and i64 %312, %313
  store i64 %and42.i1712, i64* %x81D25825.i1652, align 8
  %314 = load i64, i64* %a5.addr.i1617, align 8
  %315 = load i64, i64* %x81D25825.i1652, align 8
  %xor43.i1713 = xor i64 %314, %315
  store i64 %xor43.i1713, i64* %x812D58DA.i1653, align 8
  %316 = load i64, i64* %x812D58DA.i1653, align 8
  %317 = load i64, i64* %x33CC0000.i1627, align 8
  %neg44.i1714 = xor i64 %317, -1
  %and45.i1715 = and i64 %316, %neg44.i1714
  store i64 %and45.i1715, i64* %x802158DA.i1654, align 8
  %318 = load i64, i64* %x9A646A95.i1640, align 8
  %319 = load i64, i64* %x802158DA.i1654, align 8
  %xor46.i1716 = xor i64 %318, %319
  store i64 %xor46.i1716, i64* %x1A45324F.i1655, align 8
  %320 = load i64, i64* %x1A45324F.i1655, align 8
  %321 = load i64, i64* %a4.addr.i1616, align 8
  %or47.i1717 = or i64 %320, %321
  store i64 %or47.i1717, i64* %x20.i1663, align 8
  %322 = load i64, i64* %x20.i1663, align 8
  %323 = load i64, i64* %x962CAC53.i1650, align 8
  %xor48.i1718 = xor i64 %322, %323
  store i64 %xor48.i1718, i64* %x21.i1664, align 8
  %324 = load i64*, i64** %out3.addr.i1621, align 8
  %325 = load i64, i64* %324, align 8
  %326 = load i64, i64* %x21.i1664, align 8
  %xor49.i1719 = xor i64 %325, %326
  %327 = load i64*, i64** %out3.addr.i1621, align 8
  store i64 %xor49.i1719, i64* %327, align 8
  %328 = load i64, i64* %x1A45324F.i1655, align 8
  %329 = load i64, i64* %x118822B8.i1642, align 8
  %neg50.i1720 = xor i64 %329, -1
  %and51.i1721 = and i64 %328, %neg50.i1720
  store i64 %and51.i1721, i64* %x0A451047.i1656, align 8
  %330 = load i64, i64* %x33CCCC33.i1638, align 8
  %331 = load i64, i64* %xA9DF596A.i1648, align 8
  %or52.i1722 = or i64 %330, %331
  store i64 %or52.i1722, i64* %xBBDFDD7B.i1657, align 8
  %332 = load i64, i64* %x0A451047.i1656, align 8
  %333 = load i64, i64* %xBBDFDD7B.i1657, align 8
  %xor53.i1723 = xor i64 %332, %333
  store i64 %xor53.i1723, i64* %xB19ACD3C.i1658, align 8
  %334 = load i64, i64* %x003311BB.i1630, align 8
  %335 = load i64, i64* %a4.addr.i1616, align 8
  %or54.i1724 = or i64 %334, %335
  store i64 %or54.i1724, i64* %x30.i1665, align 8
  %336 = load i64, i64* %x30.i1665, align 8
  %337 = load i64, i64* %xB19ACD3C.i1658, align 8
  %xor55.i1725 = xor i64 %336, %337
  store i64 %xor55.i1725, i64* %x31.i1666, align 8
  %338 = load i64*, i64** %out4.addr.i1622, align 8
  %339 = load i64, i64* %338, align 8
  %340 = load i64, i64* %x31.i1666, align 8
  %xor56.i1726 = xor i64 %339, %340
  %341 = load i64*, i64** %out4.addr.i1622, align 8
  store i64 %xor56.i1726, i64* %341, align 8
  %342 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 12), align 8
  %arrayidx47 = getelementptr inbounds i64, i64* %342, i64 0
  %343 = load i64, i64* %arrayidx47, align 8
  %344 = load i64**, i64*** %k, align 8
  %arrayidx48 = getelementptr inbounds i64*, i64** %344, i64 12
  %345 = load i64*, i64** %arrayidx48, align 8
  %arrayidx49 = getelementptr inbounds i64, i64* %345, i64 0
  %346 = load i64, i64* %arrayidx49, align 8
  %xor50 = xor i64 %343, %346
  %347 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 13), align 8
  %arrayidx51 = getelementptr inbounds i64, i64* %347, i64 0
  %348 = load i64, i64* %arrayidx51, align 8
  %349 = load i64**, i64*** %k, align 8
  %arrayidx52 = getelementptr inbounds i64*, i64** %349, i64 13
  %350 = load i64*, i64** %arrayidx52, align 8
  %arrayidx53 = getelementptr inbounds i64, i64* %350, i64 0
  %351 = load i64, i64* %arrayidx53, align 8
  %xor54 = xor i64 %348, %351
  %352 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 14), align 8
  %arrayidx55 = getelementptr inbounds i64, i64* %352, i64 0
  %353 = load i64, i64* %arrayidx55, align 8
  %354 = load i64**, i64*** %k, align 8
  %arrayidx56 = getelementptr inbounds i64*, i64** %354, i64 14
  %355 = load i64*, i64** %arrayidx56, align 8
  %arrayidx57 = getelementptr inbounds i64, i64* %355, i64 0
  %356 = load i64, i64* %arrayidx57, align 8
  %xor58 = xor i64 %353, %356
  %357 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 15), align 8
  %arrayidx59 = getelementptr inbounds i64, i64* %357, i64 0
  %358 = load i64, i64* %arrayidx59, align 8
  %359 = load i64**, i64*** %k, align 8
  %arrayidx60 = getelementptr inbounds i64*, i64** %359, i64 15
  %360 = load i64*, i64** %arrayidx60, align 8
  %arrayidx61 = getelementptr inbounds i64, i64* %360, i64 0
  %361 = load i64, i64* %arrayidx61, align 8
  %xor62 = xor i64 %358, %361
  %362 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 16), align 8
  %arrayidx63 = getelementptr inbounds i64, i64* %362, i64 0
  %363 = load i64, i64* %arrayidx63, align 8
  %364 = load i64**, i64*** %k, align 8
  %arrayidx64 = getelementptr inbounds i64*, i64** %364, i64 16
  %365 = load i64*, i64** %arrayidx64, align 8
  %arrayidx65 = getelementptr inbounds i64, i64* %365, i64 0
  %366 = load i64, i64* %arrayidx65, align 8
  %xor66 = xor i64 %363, %366
  %367 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 17), align 8
  %arrayidx67 = getelementptr inbounds i64, i64* %367, i64 0
  %368 = load i64, i64* %arrayidx67, align 8
  %369 = load i64**, i64*** %k, align 8
  %arrayidx68 = getelementptr inbounds i64*, i64** %369, i64 17
  %370 = load i64*, i64** %arrayidx68, align 8
  %arrayidx69 = getelementptr inbounds i64, i64* %370, i64 0
  %371 = load i64, i64* %arrayidx69, align 8
  %xor70 = xor i64 %368, %371
  store i64 %xor50, i64* %a1.addr.i1493, align 8
  store i64 %xor54, i64* %a2.addr.i1494, align 8
  store i64 %xor58, i64* %a3.addr.i1495, align 8
  store i64 %xor62, i64* %a4.addr.i1496, align 8
  store i64 %xor66, i64* %a5.addr.i1497, align 8
  store i64 %xor70, i64* %a6.addr.i1498, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 55), i64** %out1.addr.i1499, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 47), i64** %out2.addr.i1500, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 61), i64** %out3.addr.i1501, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 37), i64** %out4.addr.i1502, align 8
  %372 = load i64, i64* %a1.addr.i1493, align 8
  %373 = load i64, i64* %a2.addr.i1494, align 8
  %neg.i1549 = xor i64 %373, -1
  %and.i1550 = and i64 %372, %neg.i1549
  store i64 %and.i1550, i64* %x44444444.i1503, align 8
  %374 = load i64, i64* %a3.addr.i1495, align 8
  %375 = load i64, i64* %a6.addr.i1498, align 8
  %xor.i1551 = xor i64 %374, %375
  store i64 %xor.i1551, i64* %x0F0FF0F0.i1504, align 8
  %376 = load i64, i64* %x44444444.i1503, align 8
  %377 = load i64, i64* %x0F0FF0F0.i1504, align 8
  %or.i1552 = or i64 %376, %377
  store i64 %or.i1552, i64* %x4F4FF4F4.i1505, align 8
  %378 = load i64, i64* %a4.addr.i1496, align 8
  %379 = load i64, i64* %a6.addr.i1498, align 8
  %xor1.i1553 = xor i64 %378, %379
  store i64 %xor1.i1553, i64* %x00FFFF00.i1506, align 8
  %380 = load i64, i64* %x00FFFF00.i1506, align 8
  %381 = load i64, i64* %a1.addr.i1493, align 8
  %neg2.i1554 = xor i64 %381, -1
  %and3.i1555 = and i64 %380, %neg2.i1554
  store i64 %and3.i1555, i64* %x00AAAA00.i1507, align 8
  %382 = load i64, i64* %x4F4FF4F4.i1505, align 8
  %383 = load i64, i64* %x00AAAA00.i1507, align 8
  %xor4.i1556 = xor i64 %382, %383
  store i64 %xor4.i1556, i64* %x4FE55EF4.i1508, align 8
  %384 = load i64, i64* %a2.addr.i1494, align 8
  %385 = load i64, i64* %x0F0FF0F0.i1504, align 8
  %xor5.i1557 = xor i64 %384, %385
  store i64 %xor5.i1557, i64* %x3C3CC3C3.i1509, align 8
  %386 = load i64, i64* %x3C3CC3C3.i1509, align 8
  %387 = load i64, i64* %a6.addr.i1498, align 8
  %neg6.i1558 = xor i64 %387, -1
  %and7.i1559 = and i64 %386, %neg6.i1558
  store i64 %and7.i1559, i64* %x3C3C0000.i1510, align 8
  %388 = load i64, i64* %x4F4FF4F4.i1505, align 8
  %389 = load i64, i64* %x3C3C0000.i1510, align 8
  %xor8.i1560 = xor i64 %388, %389
  store i64 %xor8.i1560, i64* %x7373F4F4.i1511, align 8
  %390 = load i64, i64* %x4FE55EF4.i1508, align 8
  %391 = load i64, i64* %x7373F4F4.i1511, align 8
  %neg9.i1561 = xor i64 %391, -1
  %and10.i1562 = and i64 %390, %neg9.i1561
  store i64 %and10.i1562, i64* %x0C840A00.i1512, align 8
  %392 = load i64, i64* %a6.addr.i1498, align 8
  %393 = load i64, i64* %x4FE55EF4.i1508, align 8
  %and11.i1563 = and i64 %392, %393
  store i64 %and11.i1563, i64* %x00005EF4.i1513, align 8
  %394 = load i64, i64* %a4.addr.i1496, align 8
  %395 = load i64, i64* %x00005EF4.i1513, align 8
  %or12.i1564 = or i64 %394, %395
  store i64 %or12.i1564, i64* %x00FF5EFF.i1514, align 8
  %396 = load i64, i64* %a1.addr.i1493, align 8
  %397 = load i64, i64* %x00FF5EFF.i1514, align 8
  %and13.i1565 = and i64 %396, %397
  store i64 %and13.i1565, i64* %x00555455.i1515, align 8
  %398 = load i64, i64* %x3C3CC3C3.i1509, align 8
  %399 = load i64, i64* %x00555455.i1515, align 8
  %xor14.i1566 = xor i64 %398, %399
  store i64 %xor14.i1566, i64* %x3C699796.i1516, align 8
  %400 = load i64, i64* %x4FE55EF4.i1508, align 8
  %401 = load i64, i64* %a5.addr.i1497, align 8
  %neg15.i1567 = xor i64 %401, -1
  %and16.i1568 = and i64 %400, %neg15.i1567
  store i64 %and16.i1568, i64* %x30.i1547, align 8
  %402 = load i64, i64* %x30.i1547, align 8
  %403 = load i64, i64* %x3C699796.i1516, align 8
  %xor17.i1569 = xor i64 %402, %403
  store i64 %xor17.i1569, i64* %x31.i1548, align 8
  %404 = load i64*, i64** %out4.addr.i1502, align 8
  %405 = load i64, i64* %404, align 8
  %406 = load i64, i64* %x31.i1548, align 8
  %xor18.i1570 = xor i64 %405, %406
  %407 = load i64*, i64** %out4.addr.i1502, align 8
  store i64 %xor18.i1570, i64* %407, align 8
  %408 = load i64, i64* %x0F0FF0F0.i1504, align 8
  %409 = load i64, i64* %x00FFFF00.i1506, align 8
  %and19.i1571 = and i64 %408, %409
  store i64 %and19.i1571, i64* %x000FF000.i1517, align 8
  %410 = load i64, i64* %a1.addr.i1493, align 8
  %411 = load i64, i64* %a4.addr.i1496, align 8
  %xor20.i1572 = xor i64 %410, %411
  store i64 %xor20.i1572, i64* %x55AA55AA.i1518, align 8
  %412 = load i64, i64* %x7373F4F4.i1511, align 8
  %413 = load i64, i64* %x55AA55AA.i1518, align 8
  %xor21.i1573 = xor i64 %412, %413
  store i64 %xor21.i1573, i64* %x26D9A15E.i1519, align 8
  %414 = load i64, i64* %a3.addr.i1495, align 8
  %415 = load i64, i64* %x26D9A15E.i1519, align 8
  %or22.i1574 = or i64 %414, %415
  store i64 %or22.i1574, i64* %x2FDFAF5F.i1520, align 8
  %416 = load i64, i64* %x2FDFAF5F.i1520, align 8
  %417 = load i64, i64* %x000FF000.i1517, align 8
  %neg23.i1575 = xor i64 %417, -1
  %and24.i1576 = and i64 %416, %neg23.i1575
  store i64 %and24.i1576, i64* %x2FD00F5F.i1521, align 8
  %418 = load i64, i64* %x00AAAA00.i1507, align 8
  %419 = load i64, i64* %x55AA55AA.i1518, align 8
  %or25.i1577 = or i64 %418, %419
  store i64 %or25.i1577, i64* %x55AAFFAA.i1522, align 8
  %420 = load i64, i64* %x3C699796.i1516, align 8
  %421 = load i64, i64* %x55AAFFAA.i1522, align 8
  %neg26.i1578 = xor i64 %421, -1
  %and27.i1579 = and i64 %420, %neg26.i1578
  store i64 %and27.i1579, i64* %x28410014.i1523, align 8
  %422 = load i64, i64* %a4.addr.i1496, align 8
  %423 = load i64, i64* %a6.addr.i1498, align 8
  %and28.i1580 = and i64 %422, %423
  store i64 %and28.i1580, i64* %x000000FF.i1524, align 8
  %424 = load i64, i64* %x000000FF.i1524, align 8
  %425 = load i64, i64* %a2.addr.i1494, align 8
  %neg29.i1581 = xor i64 %425, -1
  %and30.i1582 = and i64 %424, %neg29.i1581
  store i64 %and30.i1582, i64* %x000000CC.i1525, align 8
  %426 = load i64, i64* %x28410014.i1523, align 8
  %427 = load i64, i64* %x000000CC.i1525, align 8
  %xor31.i1583 = xor i64 %426, %427
  store i64 %xor31.i1583, i64* %x284100D8.i1526, align 8
  %428 = load i64, i64* %x284100D8.i1526, align 8
  %429 = load i64, i64* %a3.addr.i1495, align 8
  %neg32.i1584 = xor i64 %429, -1
  %and33.i1585 = and i64 %428, %neg32.i1584
  store i64 %and33.i1585, i64* %x204000D0.i1527, align 8
  %430 = load i64, i64* %x3C3CC3C3.i1509, align 8
  %431 = load i64, i64* %x000000FF.i1524, align 8
  %or34.i1586 = or i64 %430, %431
  store i64 %or34.i1586, i64* %x3C3CC3FF.i1528, align 8
  %432 = load i64, i64* %x3C3CC3FF.i1528, align 8
  %433 = load i64, i64* %x204000D0.i1527, align 8
  %neg35.i1587 = xor i64 %433, -1
  %and36.i1588 = and i64 %432, %neg35.i1587
  store i64 %and36.i1588, i64* %x1C3CC32F.i1529, align 8
  %434 = load i64, i64* %a1.addr.i1493, align 8
  %435 = load i64, i64* %x1C3CC32F.i1529, align 8
  %xor37.i1589 = xor i64 %434, %435
  store i64 %xor37.i1589, i64* %x4969967A.i1530, align 8
  %436 = load i64, i64* %x2FD00F5F.i1521, align 8
  %437 = load i64, i64* %a5.addr.i1497, align 8
  %and38.i1590 = and i64 %436, %437
  store i64 %and38.i1590, i64* %x10.i1543, align 8
  %438 = load i64, i64* %x10.i1543, align 8
  %439 = load i64, i64* %x4969967A.i1530, align 8
  %xor39.i1591 = xor i64 %438, %439
  store i64 %xor39.i1591, i64* %x11.i1544, align 8
  %440 = load i64*, i64** %out2.addr.i1500, align 8
  %441 = load i64, i64* %440, align 8
  %442 = load i64, i64* %x11.i1544, align 8
  %xor40.i1592 = xor i64 %441, %442
  %443 = load i64*, i64** %out2.addr.i1500, align 8
  store i64 %xor40.i1592, i64* %443, align 8
  %444 = load i64, i64* %x4FE55EF4.i1508, align 8
  %445 = load i64, i64* %a2.addr.i1494, align 8
  %neg41.i1593 = xor i64 %445, -1
  %and42.i1594 = and i64 %444, %neg41.i1593
  store i64 %and42.i1594, i64* %x4CC44CC4.i1531, align 8
  %446 = load i64, i64* %x4CC44CC4.i1531, align 8
  %447 = load i64, i64* %a3.addr.i1495, align 8
  %neg43.i1595 = xor i64 %447, -1
  %and44.i1596 = and i64 %446, %neg43.i1595
  store i64 %and44.i1596, i64* %x40C040C0.i1532, align 8
  %448 = load i64, i64* %x3C3CC3C3.i1509, align 8
  %449 = load i64, i64* %x55AAFFAA.i1522, align 8
  %xor45.i1597 = xor i64 %448, %449
  store i64 %xor45.i1597, i64* %x69963C69.i1533, align 8
  %450 = load i64, i64* %x69963C69.i1533, align 8
  %neg46.i1598 = xor i64 %450, -1
  store i64 %neg46.i1598, i64* %x9669C396.i1534, align 8
  %451 = load i64, i64* %x40C040C0.i1532, align 8
  %452 = load i64, i64* %x9669C396.i1534, align 8
  %xor47.i1599 = xor i64 %451, %452
  store i64 %xor47.i1599, i64* %xD6A98356.i1535, align 8
  %453 = load i64, i64* %a5.addr.i1497, align 8
  %454 = load i64, i64* %x0C840A00.i1512, align 8
  %neg48.i1600 = xor i64 %454, -1
  %and49.i1601 = and i64 %453, %neg48.i1600
  store i64 %and49.i1601, i64* %x00.i1541, align 8
  %455 = load i64, i64* %x00.i1541, align 8
  %456 = load i64, i64* %xD6A98356.i1535, align 8
  %xor50.i1602 = xor i64 %455, %456
  store i64 %xor50.i1602, i64* %x01.i1542, align 8
  %457 = load i64*, i64** %out1.addr.i1499, align 8
  %458 = load i64, i64* %457, align 8
  %459 = load i64, i64* %x01.i1542, align 8
  %xor51.i1603 = xor i64 %458, %459
  %460 = load i64*, i64** %out1.addr.i1499, align 8
  store i64 %xor51.i1603, i64* %460, align 8
  %461 = load i64, i64* %a4.addr.i1496, align 8
  %462 = load i64, i64* %x0F0FF0F0.i1504, align 8
  %and52.i1604 = and i64 %461, %462
  store i64 %and52.i1604, i64* %x000F00F0.i1536, align 8
  %463 = load i64, i64* %x3C3CC3C3.i1509, align 8
  %464 = load i64, i64* %xD6A98356.i1535, align 8
  %or53.i1605 = or i64 %463, %464
  store i64 %or53.i1605, i64* %xFEBDC3D7.i1537, align 8
  %465 = load i64, i64* %xFEBDC3D7.i1537, align 8
  %466 = load i64, i64* %x000F00F0.i1536, align 8
  %neg54.i1606 = xor i64 %466, -1
  %and55.i1607 = and i64 %465, %neg54.i1606
  store i64 %and55.i1607, i64* %xFEB0C307.i1538, align 8
  %467 = load i64, i64* %x00AAAA00.i1507, align 8
  %468 = load i64, i64* %x4CC44CC4.i1531, align 8
  %or56.i1608 = or i64 %467, %468
  store i64 %or56.i1608, i64* %x4CEEEEC4.i1539, align 8
  %469 = load i64, i64* %xFEB0C307.i1538, align 8
  %470 = load i64, i64* %x4CEEEEC4.i1539, align 8
  %xor57.i1609 = xor i64 %469, %470
  store i64 %xor57.i1609, i64* %xB25E2DC3.i1540, align 8
  %471 = load i64, i64* %x284100D8.i1526, align 8
  %472 = load i64, i64* %a5.addr.i1497, align 8
  %or58.i1610 = or i64 %471, %472
  store i64 %or58.i1610, i64* %x20.i1545, align 8
  %473 = load i64, i64* %x20.i1545, align 8
  %474 = load i64, i64* %xB25E2DC3.i1540, align 8
  %xor59.i1611 = xor i64 %473, %474
  store i64 %xor59.i1611, i64* %x21.i1546, align 8
  %475 = load i64*, i64** %out3.addr.i1501, align 8
  %476 = load i64, i64* %475, align 8
  %477 = load i64, i64* %x21.i1546, align 8
  %xor60.i1612 = xor i64 %476, %477
  %478 = load i64*, i64** %out3.addr.i1501, align 8
  store i64 %xor60.i1612, i64* %478, align 8
  %479 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 18), align 8
  %arrayidx71 = getelementptr inbounds i64, i64* %479, i64 0
  %480 = load i64, i64* %arrayidx71, align 8
  %481 = load i64**, i64*** %k, align 8
  %arrayidx72 = getelementptr inbounds i64*, i64** %481, i64 18
  %482 = load i64*, i64** %arrayidx72, align 8
  %arrayidx73 = getelementptr inbounds i64, i64* %482, i64 0
  %483 = load i64, i64* %arrayidx73, align 8
  %xor74 = xor i64 %480, %483
  %484 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 19), align 8
  %arrayidx75 = getelementptr inbounds i64, i64* %484, i64 0
  %485 = load i64, i64* %arrayidx75, align 8
  %486 = load i64**, i64*** %k, align 8
  %arrayidx76 = getelementptr inbounds i64*, i64** %486, i64 19
  %487 = load i64*, i64** %arrayidx76, align 8
  %arrayidx77 = getelementptr inbounds i64, i64* %487, i64 0
  %488 = load i64, i64* %arrayidx77, align 8
  %xor78 = xor i64 %485, %488
  %489 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 20), align 8
  %arrayidx79 = getelementptr inbounds i64, i64* %489, i64 0
  %490 = load i64, i64* %arrayidx79, align 8
  %491 = load i64**, i64*** %k, align 8
  %arrayidx80 = getelementptr inbounds i64*, i64** %491, i64 20
  %492 = load i64*, i64** %arrayidx80, align 8
  %arrayidx81 = getelementptr inbounds i64, i64* %492, i64 0
  %493 = load i64, i64* %arrayidx81, align 8
  %xor82 = xor i64 %490, %493
  %494 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 21), align 8
  %arrayidx83 = getelementptr inbounds i64, i64* %494, i64 0
  %495 = load i64, i64* %arrayidx83, align 8
  %496 = load i64**, i64*** %k, align 8
  %arrayidx84 = getelementptr inbounds i64*, i64** %496, i64 21
  %497 = load i64*, i64** %arrayidx84, align 8
  %arrayidx85 = getelementptr inbounds i64, i64* %497, i64 0
  %498 = load i64, i64* %arrayidx85, align 8
  %xor86 = xor i64 %495, %498
  %499 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 22), align 8
  %arrayidx87 = getelementptr inbounds i64, i64* %499, i64 0
  %500 = load i64, i64* %arrayidx87, align 8
  %501 = load i64**, i64*** %k, align 8
  %arrayidx88 = getelementptr inbounds i64*, i64** %501, i64 22
  %502 = load i64*, i64** %arrayidx88, align 8
  %arrayidx89 = getelementptr inbounds i64, i64* %502, i64 0
  %503 = load i64, i64* %arrayidx89, align 8
  %xor90 = xor i64 %500, %503
  %504 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 23), align 8
  %arrayidx91 = getelementptr inbounds i64, i64* %504, i64 0
  %505 = load i64, i64* %arrayidx91, align 8
  %506 = load i64**, i64*** %k, align 8
  %arrayidx92 = getelementptr inbounds i64*, i64** %506, i64 23
  %507 = load i64*, i64** %arrayidx92, align 8
  %arrayidx93 = getelementptr inbounds i64, i64* %507, i64 0
  %508 = load i64, i64* %arrayidx93, align 8
  %xor94 = xor i64 %505, %508
  store i64 %xor74, i64* %a1.addr.i1404, align 8
  store i64 %xor78, i64* %a2.addr.i1405, align 8
  store i64 %xor82, i64* %a3.addr.i1406, align 8
  store i64 %xor86, i64* %a4.addr.i1407, align 8
  store i64 %xor90, i64* %a5.addr.i1408, align 8
  store i64 %xor94, i64* %a6.addr.i1409, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 57), i64** %out1.addr.i1410, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 51), i64** %out2.addr.i1411, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 41), i64** %out3.addr.i1412, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 32), i64** %out4.addr.i1413, align 8
  %509 = load i64, i64* %a1.addr.i1404, align 8
  %510 = load i64, i64* %a3.addr.i1406, align 8
  %xor.i1447 = xor i64 %509, %510
  store i64 %xor.i1447, i64* %x5A5A5A5A.i1414, align 8
  %511 = load i64, i64* %a3.addr.i1406, align 8
  %512 = load i64, i64* %a5.addr.i1408, align 8
  %xor1.i1448 = xor i64 %511, %512
  store i64 %xor1.i1448, i64* %x0F0FF0F0.i1415, align 8
  %513 = load i64, i64* %a2.addr.i1405, align 8
  %514 = load i64, i64* %a4.addr.i1407, align 8
  %or.i1449 = or i64 %513, %514
  store i64 %or.i1449, i64* %x33FF33FF.i1416, align 8
  %515 = load i64, i64* %a5.addr.i1408, align 8
  %516 = load i64, i64* %x33FF33FF.i1416, align 8
  %xor2.i1450 = xor i64 %515, %516
  store i64 %xor2.i1450, i64* %x33FFCC00.i1417, align 8
  %517 = load i64, i64* %x0F0FF0F0.i1415, align 8
  %518 = load i64, i64* %x33FFCC00.i1417, align 8
  %neg.i1451 = xor i64 %518, -1
  %and.i1452 = and i64 %517, %neg.i1451
  store i64 %and.i1452, i64* %x0C0030F0.i1418, align 8
  %519 = load i64, i64* %x0F0FF0F0.i1415, align 8
  %520 = load i64, i64* %a2.addr.i1405, align 8
  %neg3.i1453 = xor i64 %520, -1
  %and4.i1454 = and i64 %519, %neg3.i1453
  store i64 %and4.i1454, i64* %x0C0CC0C0.i1419, align 8
  %521 = load i64, i64* %a4.addr.i1407, align 8
  %522 = load i64, i64* %x0C0CC0C0.i1419, align 8
  %xor5.i1455 = xor i64 %521, %522
  store i64 %xor5.i1455, i64* %x0CF3C03F.i1420, align 8
  %523 = load i64, i64* %x5A5A5A5A.i1414, align 8
  %524 = load i64, i64* %x0CF3C03F.i1420, align 8
  %or6.i1456 = or i64 %523, %524
  store i64 %or6.i1456, i64* %x5EFBDA7F.i1421, align 8
  %525 = load i64, i64* %x5EFBDA7F.i1421, align 8
  %526 = load i64, i64* %x0C0030F0.i1418, align 8
  %neg7.i1457 = xor i64 %526, -1
  %and8.i1458 = and i64 %525, %neg7.i1457
  store i64 %and8.i1458, i64* %x52FBCA0F.i1422, align 8
  %527 = load i64, i64* %a2.addr.i1405, align 8
  %528 = load i64, i64* %x52FBCA0F.i1422, align 8
  %xor9.i1459 = xor i64 %527, %528
  store i64 %xor9.i1459, i64* %x61C8F93C.i1423, align 8
  %529 = load i64, i64* %x0CF3C03F.i1420, align 8
  %530 = load i64, i64* %x61C8F93C.i1423, align 8
  %and10.i1460 = and i64 %529, %530
  store i64 %and10.i1460, i64* %x00C0C03C.i1424, align 8
  %531 = load i64, i64* %x0F0FF0F0.i1415, align 8
  %532 = load i64, i64* %x00C0C03C.i1424, align 8
  %neg11.i1461 = xor i64 %532, -1
  %and12.i1462 = and i64 %531, %neg11.i1461
  store i64 %and12.i1462, i64* %x0F0F30C0.i1425, align 8
  %533 = load i64, i64* %x5A5A5A5A.i1414, align 8
  %534 = load i64, i64* %x61C8F93C.i1423, align 8
  %xor13.i1463 = xor i64 %533, %534
  store i64 %xor13.i1463, i64* %x3B92A366.i1426, align 8
  %535 = load i64, i64* %x3B92A366.i1426, align 8
  %536 = load i64, i64* %x0F0F30C0.i1425, align 8
  %neg14.i1464 = xor i64 %536, -1
  %and15.i1465 = and i64 %535, %neg14.i1464
  store i64 %and15.i1465, i64* %x30908326.i1427, align 8
  %537 = load i64, i64* %x0C0030F0.i1418, align 8
  %538 = load i64, i64* %x30908326.i1427, align 8
  %xor16.i1466 = xor i64 %537, %538
  store i64 %xor16.i1466, i64* %x3C90B3D6.i1428, align 8
  %539 = load i64, i64* %a2.addr.i1405, align 8
  %540 = load i64, i64* %a4.addr.i1407, align 8
  %xor17.i1467 = xor i64 %539, %540
  store i64 %xor17.i1467, i64* %x33CC33CC.i1429, align 8
  %541 = load i64, i64* %a5.addr.i1408, align 8
  %542 = load i64, i64* %x0C0CC0C0.i1419, align 8
  %or18.i1468 = or i64 %541, %542
  store i64 %or18.i1468, i64* %x0C0CFFFF.i1430, align 8
  %543 = load i64, i64* %x3B92A366.i1426, align 8
  %544 = load i64, i64* %x0C0CFFFF.i1430, align 8
  %xor19.i1469 = xor i64 %543, %544
  store i64 %xor19.i1469, i64* %x379E5C99.i1431, align 8
  %545 = load i64, i64* %x379E5C99.i1431, align 8
  %546 = load i64, i64* %x33CC33CC.i1429, align 8
  %neg20.i1470 = xor i64 %546, -1
  %and21.i1471 = and i64 %545, %neg20.i1470
  store i64 %and21.i1471, i64* %x04124C11.i1432, align 8
  %547 = load i64, i64* %x52FBCA0F.i1422, align 8
  %548 = load i64, i64* %x04124C11.i1432, align 8
  %xor22.i1472 = xor i64 %547, %548
  store i64 %xor22.i1472, i64* %x56E9861E.i1433, align 8
  %549 = load i64, i64* %a6.addr.i1409, align 8
  %550 = load i64, i64* %x3C90B3D6.i1428, align 8
  %neg23.i1473 = xor i64 %550, -1
  %and24.i1474 = and i64 %549, %neg23.i1473
  store i64 %and24.i1474, i64* %x00.i1439, align 8
  %551 = load i64, i64* %x00.i1439, align 8
  %552 = load i64, i64* %x56E9861E.i1433, align 8
  %xor25.i1475 = xor i64 %551, %552
  store i64 %xor25.i1475, i64* %x01.i1440, align 8
  %553 = load i64*, i64** %out1.addr.i1410, align 8
  %554 = load i64, i64* %553, align 8
  %555 = load i64, i64* %x01.i1440, align 8
  %xor26.i1476 = xor i64 %554, %555
  %556 = load i64*, i64** %out1.addr.i1410, align 8
  store i64 %xor26.i1476, i64* %556, align 8
  %557 = load i64, i64* %x56E9861E.i1433, align 8
  %neg27.i1477 = xor i64 %557, -1
  store i64 %neg27.i1477, i64* %xA91679E1.i1434, align 8
  %558 = load i64, i64* %x3C90B3D6.i1428, align 8
  %559 = load i64, i64* %a6.addr.i1409, align 8
  %neg28.i1478 = xor i64 %559, -1
  %and29.i1479 = and i64 %558, %neg28.i1478
  store i64 %and29.i1479, i64* %x10.i1441, align 8
  %560 = load i64, i64* %x10.i1441, align 8
  %561 = load i64, i64* %xA91679E1.i1434, align 8
  %xor30.i1480 = xor i64 %560, %561
  store i64 %xor30.i1480, i64* %x11.i1442, align 8
  %562 = load i64*, i64** %out2.addr.i1411, align 8
  %563 = load i64, i64* %562, align 8
  %564 = load i64, i64* %x11.i1442, align 8
  %xor31.i1481 = xor i64 %563, %564
  %565 = load i64*, i64** %out2.addr.i1411, align 8
  store i64 %xor31.i1481, i64* %565, align 8
  %566 = load i64, i64* %x3C90B3D6.i1428, align 8
  %567 = load i64, i64* %xA91679E1.i1434, align 8
  %xor32.i1482 = xor i64 %566, %567
  store i64 %xor32.i1482, i64* %x9586CA37.i1435, align 8
  %568 = load i64, i64* %x9586CA37.i1435, align 8
  %569 = load i64, i64* %x33CC33CC.i1429, align 8
  %neg33.i1483 = xor i64 %569, -1
  %and34.i1484 = and i64 %568, %neg33.i1483
  store i64 %and34.i1484, i64* %x8402C833.i1436, align 8
  %570 = load i64, i64* %x00C0C03C.i1424, align 8
  %571 = load i64, i64* %x8402C833.i1436, align 8
  %or35.i1485 = or i64 %570, %571
  store i64 %or35.i1485, i64* %x84C2C83F.i1437, align 8
  %572 = load i64, i64* %x379E5C99.i1431, align 8
  %573 = load i64, i64* %x84C2C83F.i1437, align 8
  %xor36.i1486 = xor i64 %572, %573
  store i64 %xor36.i1486, i64* %xB35C94A6.i1438, align 8
  %574 = load i64, i64* %x61C8F93C.i1423, align 8
  %575 = load i64, i64* %a6.addr.i1409, align 8
  %or37.i1487 = or i64 %574, %575
  store i64 %or37.i1487, i64* %x20.i1443, align 8
  %576 = load i64, i64* %x20.i1443, align 8
  %577 = load i64, i64* %xB35C94A6.i1438, align 8
  %xor38.i1488 = xor i64 %576, %577
  store i64 %xor38.i1488, i64* %x21.i1444, align 8
  %578 = load i64*, i64** %out3.addr.i1412, align 8
  %579 = load i64, i64* %578, align 8
  %580 = load i64, i64* %x21.i1444, align 8
  %xor39.i1489 = xor i64 %579, %580
  %581 = load i64*, i64** %out3.addr.i1412, align 8
  store i64 %xor39.i1489, i64* %581, align 8
  %582 = load i64, i64* %a6.addr.i1409, align 8
  %583 = load i64, i64* %x61C8F93C.i1423, align 8
  %and40.i1490 = and i64 %582, %583
  store i64 %and40.i1490, i64* %x30.i1445, align 8
  %584 = load i64, i64* %x30.i1445, align 8
  %585 = load i64, i64* %xB35C94A6.i1438, align 8
  %xor41.i1491 = xor i64 %584, %585
  store i64 %xor41.i1491, i64* %x31.i1446, align 8
  %586 = load i64*, i64** %out4.addr.i1413, align 8
  %587 = load i64, i64* %586, align 8
  %588 = load i64, i64* %x31.i1446, align 8
  %xor42.i1492 = xor i64 %587, %588
  %589 = load i64*, i64** %out4.addr.i1413, align 8
  store i64 %xor42.i1492, i64* %589, align 8
  %590 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 24), align 8
  %arrayidx95 = getelementptr inbounds i64, i64* %590, i64 0
  %591 = load i64, i64* %arrayidx95, align 8
  %592 = load i64**, i64*** %k, align 8
  %arrayidx96 = getelementptr inbounds i64*, i64** %592, i64 24
  %593 = load i64*, i64** %arrayidx96, align 8
  %arrayidx97 = getelementptr inbounds i64, i64* %593, i64 0
  %594 = load i64, i64* %arrayidx97, align 8
  %xor98 = xor i64 %591, %594
  %595 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 25), align 8
  %arrayidx99 = getelementptr inbounds i64, i64* %595, i64 0
  %596 = load i64, i64* %arrayidx99, align 8
  %597 = load i64**, i64*** %k, align 8
  %arrayidx100 = getelementptr inbounds i64*, i64** %597, i64 25
  %598 = load i64*, i64** %arrayidx100, align 8
  %arrayidx101 = getelementptr inbounds i64, i64* %598, i64 0
  %599 = load i64, i64* %arrayidx101, align 8
  %xor102 = xor i64 %596, %599
  %600 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 26), align 8
  %arrayidx103 = getelementptr inbounds i64, i64* %600, i64 0
  %601 = load i64, i64* %arrayidx103, align 8
  %602 = load i64**, i64*** %k, align 8
  %arrayidx104 = getelementptr inbounds i64*, i64** %602, i64 26
  %603 = load i64*, i64** %arrayidx104, align 8
  %arrayidx105 = getelementptr inbounds i64, i64* %603, i64 0
  %604 = load i64, i64* %arrayidx105, align 8
  %xor106 = xor i64 %601, %604
  %605 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 27), align 8
  %arrayidx107 = getelementptr inbounds i64, i64* %605, i64 0
  %606 = load i64, i64* %arrayidx107, align 8
  %607 = load i64**, i64*** %k, align 8
  %arrayidx108 = getelementptr inbounds i64*, i64** %607, i64 27
  %608 = load i64*, i64** %arrayidx108, align 8
  %arrayidx109 = getelementptr inbounds i64, i64* %608, i64 0
  %609 = load i64, i64* %arrayidx109, align 8
  %xor110 = xor i64 %606, %609
  %610 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 28), align 8
  %arrayidx111 = getelementptr inbounds i64, i64* %610, i64 0
  %611 = load i64, i64* %arrayidx111, align 8
  %612 = load i64**, i64*** %k, align 8
  %arrayidx112 = getelementptr inbounds i64*, i64** %612, i64 28
  %613 = load i64*, i64** %arrayidx112, align 8
  %arrayidx113 = getelementptr inbounds i64, i64* %613, i64 0
  %614 = load i64, i64* %arrayidx113, align 8
  %xor114 = xor i64 %611, %614
  %615 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 29), align 8
  %arrayidx115 = getelementptr inbounds i64, i64* %615, i64 0
  %616 = load i64, i64* %arrayidx115, align 8
  %617 = load i64**, i64*** %k, align 8
  %arrayidx116 = getelementptr inbounds i64*, i64** %617, i64 29
  %618 = load i64*, i64** %arrayidx116, align 8
  %arrayidx117 = getelementptr inbounds i64, i64* %618, i64 0
  %619 = load i64, i64* %arrayidx117, align 8
  %xor118 = xor i64 %616, %619
  store i64 %xor98, i64* %a1.addr.i1285, align 8
  store i64 %xor102, i64* %a2.addr.i1286, align 8
  store i64 %xor106, i64* %a3.addr.i1287, align 8
  store i64 %xor110, i64* %a4.addr.i1288, align 8
  store i64 %xor114, i64* %a5.addr.i1289, align 8
  store i64 %xor118, i64* %a6.addr.i1290, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 39), i64** %out1.addr.i1291, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 45), i64** %out2.addr.i1292, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 56), i64** %out3.addr.i1293, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 34), i64** %out4.addr.i1294, align 8
  %620 = load i64, i64* %a1.addr.i1285, align 8
  %621 = load i64, i64* %a3.addr.i1287, align 8
  %or.i1343 = or i64 %620, %621
  store i64 %or.i1343, i64* %x77777777.i1295, align 8
  %622 = load i64, i64* %x77777777.i1295, align 8
  %623 = load i64, i64* %a6.addr.i1290, align 8
  %neg.i1344 = xor i64 %623, -1
  %and.i1345 = and i64 %622, %neg.i1344
  store i64 %and.i1345, i64* %x77770000.i1296, align 8
  %624 = load i64, i64* %a1.addr.i1285, align 8
  %625 = load i64, i64* %x77770000.i1296, align 8
  %xor.i1346 = xor i64 %624, %625
  store i64 %xor.i1346, i64* %x22225555.i1297, align 8
  %626 = load i64, i64* %a3.addr.i1287, align 8
  %627 = load i64, i64* %x22225555.i1297, align 8
  %xor1.i1347 = xor i64 %626, %627
  store i64 %xor1.i1347, i64* %x11116666.i1298, align 8
  %628 = load i64, i64* %a4.addr.i1288, align 8
  %629 = load i64, i64* %x11116666.i1298, align 8
  %or2.i1348 = or i64 %628, %629
  store i64 %or2.i1348, i64* %x1F1F6F6F.i1299, align 8
  %630 = load i64, i64* %x77770000.i1296, align 8
  %631 = load i64, i64* %a4.addr.i1288, align 8
  %neg3.i1349 = xor i64 %631, -1
  %and4.i1350 = and i64 %630, %neg3.i1349
  store i64 %and4.i1350, i64* %x70700000.i1300, align 8
  %632 = load i64, i64* %a3.addr.i1287, align 8
  %633 = load i64, i64* %x70700000.i1300, align 8
  %xor5.i1351 = xor i64 %632, %633
  store i64 %xor5.i1351, i64* %x43433333.i1301, align 8
  %634 = load i64, i64* %a5.addr.i1289, align 8
  %635 = load i64, i64* %x43433333.i1301, align 8
  %and6.i1352 = and i64 %634, %635
  store i64 %and6.i1352, i64* %x00430033.i1302, align 8
  %636 = load i64, i64* %a1.addr.i1285, align 8
  %637 = load i64, i64* %x11116666.i1298, align 8
  %or7.i1353 = or i64 %636, %637
  store i64 %or7.i1353, i64* %x55557777.i1303, align 8
  %638 = load i64, i64* %x00430033.i1302, align 8
  %639 = load i64, i64* %x55557777.i1303, align 8
  %xor8.i1354 = xor i64 %638, %639
  store i64 %xor8.i1354, i64* %x55167744.i1304, align 8
  %640 = load i64, i64* %a4.addr.i1288, align 8
  %641 = load i64, i64* %x55167744.i1304, align 8
  %xor9.i1355 = xor i64 %640, %641
  store i64 %xor9.i1355, i64* %x5A19784B.i1305, align 8
  %642 = load i64, i64* %a6.addr.i1290, align 8
  %643 = load i64, i64* %x5A19784B.i1305, align 8
  %xor10.i1356 = xor i64 %642, %643
  store i64 %xor10.i1356, i64* %x5A1987B4.i1306, align 8
  %644 = load i64, i64* %x22225555.i1297, align 8
  %645 = load i64, i64* %x5A1987B4.i1306, align 8
  %or11.i1357 = or i64 %644, %645
  store i64 %or11.i1357, i64* %x7A3BD7F5.i1307, align 8
  %646 = load i64, i64* %a5.addr.i1289, align 8
  %647 = load i64, i64* %x7A3BD7F5.i1307, align 8
  %and12.i1358 = and i64 %646, %647
  store i64 %and12.i1358, i64* %x003B00F5.i1308, align 8
  %648 = load i64, i64* %x22225555.i1297, align 8
  %649 = load i64, i64* %x003B00F5.i1308, align 8
  %xor13.i1359 = xor i64 %648, %649
  store i64 %xor13.i1359, i64* %x221955A0.i1309, align 8
  %650 = load i64, i64* %a4.addr.i1288, align 8
  %651 = load i64, i64* %x55557777.i1303, align 8
  %and14.i1360 = and i64 %650, %651
  store i64 %and14.i1360, i64* %x05050707.i1310, align 8
  %652 = load i64, i64* %x221955A0.i1309, align 8
  %653 = load i64, i64* %x05050707.i1310, align 8
  %xor15.i1361 = xor i64 %652, %653
  store i64 %xor15.i1361, i64* %x271C52A7.i1311, align 8
  %654 = load i64, i64* %x7A3BD7F5.i1307, align 8
  %655 = load i64, i64* %a1.addr.i1285, align 8
  %neg16.i1362 = xor i64 %655, -1
  %and17.i1363 = and i64 %654, %neg16.i1362
  store i64 %and17.i1363, i64* %x2A2A82A0.i1312, align 8
  %656 = load i64, i64* %x43433333.i1301, align 8
  %657 = load i64, i64* %x2A2A82A0.i1312, align 8
  %xor18.i1364 = xor i64 %656, %657
  store i64 %xor18.i1364, i64* %x6969B193.i1313, align 8
  %658 = load i64, i64* %a5.addr.i1289, align 8
  %659 = load i64, i64* %x1F1F6F6F.i1299, align 8
  %xor19.i1365 = xor i64 %658, %659
  store i64 %xor19.i1365, i64* %x1FE06F90.i1314, align 8
  %660 = load i64, i64* %x1FE06F90.i1314, align 8
  %661 = load i64, i64* %x6969B193.i1313, align 8
  %neg20.i1366 = xor i64 %661, -1
  %and21.i1367 = and i64 %660, %neg20.i1366
  store i64 %and21.i1367, i64* %x16804E00.i1315, align 8
  %662 = load i64, i64* %x16804E00.i1315, align 8
  %neg22.i1368 = xor i64 %662, -1
  store i64 %neg22.i1368, i64* %xE97FB1FF.i1316, align 8
  %663 = load i64, i64* %xE97FB1FF.i1316, align 8
  %664 = load i64, i64* %a2.addr.i1286, align 8
  %neg23.i1369 = xor i64 %664, -1
  %and24.i1370 = and i64 %663, %neg23.i1369
  store i64 %and24.i1370, i64* %x20.i1339, align 8
  %665 = load i64, i64* %x20.i1339, align 8
  %666 = load i64, i64* %x5A19784B.i1305, align 8
  %xor25.i1371 = xor i64 %665, %666
  store i64 %xor25.i1371, i64* %x21.i1340, align 8
  %667 = load i64*, i64** %out3.addr.i1293, align 8
  %668 = load i64, i64* %667, align 8
  %669 = load i64, i64* %x21.i1340, align 8
  %xor26.i1372 = xor i64 %668, %669
  %670 = load i64*, i64** %out3.addr.i1293, align 8
  store i64 %xor26.i1372, i64* %670, align 8
  %671 = load i64, i64* %x43433333.i1301, align 8
  %672 = load i64, i64* %x003B00F5.i1308, align 8
  %neg27.i1373 = xor i64 %672, -1
  %and28.i1374 = and i64 %671, %neg27.i1373
  store i64 %and28.i1374, i64* %x43403302.i1317, align 8
  %673 = load i64, i64* %x2A2A82A0.i1312, align 8
  %674 = load i64, i64* %x1FE06F90.i1314, align 8
  %xor29.i1375 = xor i64 %673, %674
  store i64 %xor29.i1375, i64* %x35CAED30.i1318, align 8
  %675 = load i64, i64* %x271C52A7.i1311, align 8
  %676 = load i64, i64* %x35CAED30.i1318, align 8
  %or30.i1376 = or i64 %675, %676
  store i64 %or30.i1376, i64* %x37DEFFB7.i1319, align 8
  %677 = load i64, i64* %x37DEFFB7.i1319, align 8
  %678 = load i64, i64* %x43403302.i1317, align 8
  %neg31.i1377 = xor i64 %678, -1
  %and32.i1378 = and i64 %677, %neg31.i1377
  store i64 %and32.i1378, i64* %x349ECCB5.i1320, align 8
  %679 = load i64, i64* %x1F1F6F6F.i1299, align 8
  %680 = load i64, i64* %x349ECCB5.i1320, align 8
  %neg33.i1379 = xor i64 %680, -1
  %and34.i1380 = and i64 %679, %neg33.i1379
  store i64 %and34.i1380, i64* %x0B01234A.i1321, align 8
  %681 = load i64, i64* %x5A1987B4.i1306, align 8
  %682 = load i64, i64* %x349ECCB5.i1320, align 8
  %and35.i1381 = and i64 %681, %682
  store i64 %and35.i1381, i64* %x101884B4.i1322, align 8
  %683 = load i64, i64* %x1FE06F90.i1314, align 8
  %684 = load i64, i64* %x101884B4.i1322, align 8
  %xor36.i1382 = xor i64 %683, %684
  store i64 %xor36.i1382, i64* %x0FF8EB24.i1323, align 8
  %685 = load i64, i64* %x43433333.i1301, align 8
  %686 = load i64, i64* %x55557777.i1303, align 8
  %and37.i1383 = and i64 %685, %686
  store i64 %and37.i1383, i64* %x41413333.i1324, align 8
  %687 = load i64, i64* %x0FF8EB24.i1323, align 8
  %688 = load i64, i64* %x41413333.i1324, align 8
  %or38.i1384 = or i64 %687, %688
  store i64 %or38.i1384, i64* %x4FF9FB37.i1325, align 8
  %689 = load i64, i64* %x003B00F5.i1308, align 8
  %690 = load i64, i64* %x4FF9FB37.i1325, align 8
  %xor39.i1385 = xor i64 %689, %690
  store i64 %xor39.i1385, i64* %x4FC2FBC2.i1326, align 8
  %691 = load i64, i64* %x4FC2FBC2.i1326, align 8
  %692 = load i64, i64* %a2.addr.i1286, align 8
  %and40.i1386 = and i64 %691, %692
  store i64 %and40.i1386, i64* %x30.i1341, align 8
  %693 = load i64, i64* %x30.i1341, align 8
  %694 = load i64, i64* %x271C52A7.i1311, align 8
  %xor41.i1387 = xor i64 %693, %694
  store i64 %xor41.i1387, i64* %x31.i1342, align 8
  %695 = load i64*, i64** %out4.addr.i1294, align 8
  %696 = load i64, i64* %695, align 8
  %697 = load i64, i64* %x31.i1342, align 8
  %xor42.i1388 = xor i64 %696, %697
  %698 = load i64*, i64** %out4.addr.i1294, align 8
  store i64 %xor42.i1388, i64* %698, align 8
  %699 = load i64, i64* %a1.addr.i1285, align 8
  %700 = load i64, i64* %x77777777.i1295, align 8
  %xor43.i1389 = xor i64 %699, %700
  store i64 %xor43.i1389, i64* %x22222222.i1327, align 8
  %701 = load i64, i64* %x349ECCB5.i1320, align 8
  %702 = load i64, i64* %x22222222.i1327, align 8
  %xor44.i1390 = xor i64 %701, %702
  store i64 %xor44.i1390, i64* %x16BCEE97.i1328, align 8
  %703 = load i64, i64* %a4.addr.i1288, align 8
  %704 = load i64, i64* %x0FF8EB24.i1323, align 8
  %and45.i1391 = and i64 %703, %704
  store i64 %and45.i1391, i64* %x0F080B04.i1329, align 8
  %705 = load i64, i64* %x16BCEE97.i1328, align 8
  %706 = load i64, i64* %x0F080B04.i1329, align 8
  %xor46.i1392 = xor i64 %705, %706
  store i64 %xor46.i1392, i64* %x19B4E593.i1330, align 8
  %707 = load i64, i64* %x0B01234A.i1321, align 8
  %708 = load i64, i64* %a2.addr.i1286, align 8
  %or47.i1393 = or i64 %707, %708
  store i64 %or47.i1393, i64* %x00.i1335, align 8
  %709 = load i64, i64* %x00.i1335, align 8
  %710 = load i64, i64* %x19B4E593.i1330, align 8
  %xor48.i1394 = xor i64 %709, %710
  store i64 %xor48.i1394, i64* %x01.i1336, align 8
  %711 = load i64*, i64** %out1.addr.i1291, align 8
  %712 = load i64, i64* %711, align 8
  %713 = load i64, i64* %x01.i1336, align 8
  %xor49.i1395 = xor i64 %712, %713
  %714 = load i64*, i64** %out1.addr.i1291, align 8
  store i64 %xor49.i1395, i64* %714, align 8
  %715 = load i64, i64* %x1F1F6F6F.i1299, align 8
  %716 = load i64, i64* %x43433333.i1301, align 8
  %xor50.i1396 = xor i64 %715, %716
  store i64 %xor50.i1396, i64* %x5C5C5C5C.i1331, align 8
  %717 = load i64, i64* %x5C5C5C5C.i1331, align 8
  %718 = load i64, i64* %x19B4E593.i1330, align 8
  %neg51.i1397 = xor i64 %718, -1
  %and52.i1398 = and i64 %717, %neg51.i1397
  store i64 %and52.i1398, i64* %x4448184C.i1332, align 8
  %719 = load i64, i64* %x22225555.i1297, align 8
  %720 = load i64, i64* %x0FF8EB24.i1323, align 8
  %xor53.i1399 = xor i64 %719, %720
  store i64 %xor53.i1399, i64* %x2DDABE71.i1333, align 8
  %721 = load i64, i64* %x4448184C.i1332, align 8
  %722 = load i64, i64* %x2DDABE71.i1333, align 8
  %xor54.i1400 = xor i64 %721, %722
  store i64 %xor54.i1400, i64* %x6992A63D.i1334, align 8
  %723 = load i64, i64* %x1F1F6F6F.i1299, align 8
  %724 = load i64, i64* %a2.addr.i1286, align 8
  %and55.i1401 = and i64 %723, %724
  store i64 %and55.i1401, i64* %x10.i1337, align 8
  %725 = load i64, i64* %x10.i1337, align 8
  %726 = load i64, i64* %x6992A63D.i1334, align 8
  %xor56.i1402 = xor i64 %725, %726
  store i64 %xor56.i1402, i64* %x11.i1338, align 8
  %727 = load i64*, i64** %out2.addr.i1292, align 8
  %728 = load i64, i64* %727, align 8
  %729 = load i64, i64* %x11.i1338, align 8
  %xor57.i1403 = xor i64 %728, %729
  %730 = load i64*, i64** %out2.addr.i1292, align 8
  store i64 %xor57.i1403, i64* %730, align 8
  %731 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 30), align 8
  %arrayidx119 = getelementptr inbounds i64, i64* %731, i64 0
  %732 = load i64, i64* %arrayidx119, align 8
  %733 = load i64**, i64*** %k, align 8
  %arrayidx120 = getelementptr inbounds i64*, i64** %733, i64 30
  %734 = load i64*, i64** %arrayidx120, align 8
  %arrayidx121 = getelementptr inbounds i64, i64* %734, i64 0
  %735 = load i64, i64* %arrayidx121, align 8
  %xor122 = xor i64 %732, %735
  %736 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 31), align 8
  %arrayidx123 = getelementptr inbounds i64, i64* %736, i64 0
  %737 = load i64, i64* %arrayidx123, align 8
  %738 = load i64**, i64*** %k, align 8
  %arrayidx124 = getelementptr inbounds i64*, i64** %738, i64 31
  %739 = load i64*, i64** %arrayidx124, align 8
  %arrayidx125 = getelementptr inbounds i64, i64* %739, i64 0
  %740 = load i64, i64* %arrayidx125, align 8
  %xor126 = xor i64 %737, %740
  %741 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 32), align 8
  %arrayidx127 = getelementptr inbounds i64, i64* %741, i64 0
  %742 = load i64, i64* %arrayidx127, align 8
  %743 = load i64**, i64*** %k, align 8
  %arrayidx128 = getelementptr inbounds i64*, i64** %743, i64 32
  %744 = load i64*, i64** %arrayidx128, align 8
  %arrayidx129 = getelementptr inbounds i64, i64* %744, i64 0
  %745 = load i64, i64* %arrayidx129, align 8
  %xor130 = xor i64 %742, %745
  %746 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 33), align 8
  %arrayidx131 = getelementptr inbounds i64, i64* %746, i64 0
  %747 = load i64, i64* %arrayidx131, align 8
  %748 = load i64**, i64*** %k, align 8
  %arrayidx132 = getelementptr inbounds i64*, i64** %748, i64 33
  %749 = load i64*, i64** %arrayidx132, align 8
  %arrayidx133 = getelementptr inbounds i64, i64* %749, i64 0
  %750 = load i64, i64* %arrayidx133, align 8
  %xor134 = xor i64 %747, %750
  %751 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 34), align 8
  %arrayidx135 = getelementptr inbounds i64, i64* %751, i64 0
  %752 = load i64, i64* %arrayidx135, align 8
  %753 = load i64**, i64*** %k, align 8
  %arrayidx136 = getelementptr inbounds i64*, i64** %753, i64 34
  %754 = load i64*, i64** %arrayidx136, align 8
  %arrayidx137 = getelementptr inbounds i64, i64* %754, i64 0
  %755 = load i64, i64* %arrayidx137, align 8
  %xor138 = xor i64 %752, %755
  %756 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 35), align 8
  %arrayidx139 = getelementptr inbounds i64, i64* %756, i64 0
  %757 = load i64, i64* %arrayidx139, align 8
  %758 = load i64**, i64*** %k, align 8
  %arrayidx140 = getelementptr inbounds i64*, i64** %758, i64 35
  %759 = load i64*, i64** %arrayidx140, align 8
  %arrayidx141 = getelementptr inbounds i64, i64* %759, i64 0
  %760 = load i64, i64* %arrayidx141, align 8
  %xor142 = xor i64 %757, %760
  store i64 %xor122, i64* %a1.addr.i1171, align 8
  store i64 %xor126, i64* %a2.addr.i1172, align 8
  store i64 %xor130, i64* %a3.addr.i1173, align 8
  store i64 %xor134, i64* %a4.addr.i1174, align 8
  store i64 %xor138, i64* %a5.addr.i1175, align 8
  store i64 %xor142, i64* %a6.addr.i1176, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 35), i64** %out1.addr.i1177, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 60), i64** %out2.addr.i1178, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 42), i64** %out3.addr.i1179, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 50), i64** %out4.addr.i1180, align 8
  %761 = load i64, i64* %a2.addr.i1172, align 8
  %762 = load i64, i64* %a5.addr.i1175, align 8
  %xor.i1227 = xor i64 %761, %762
  store i64 %xor.i1227, i64* %x33CC33CC.i1181, align 8
  %763 = load i64, i64* %a2.addr.i1172, align 8
  %764 = load i64, i64* %a6.addr.i1176, align 8
  %or.i1228 = or i64 %763, %764
  store i64 %or.i1228, i64* %x3333FFFF.i1182, align 8
  %765 = load i64, i64* %a1.addr.i1171, align 8
  %766 = load i64, i64* %x3333FFFF.i1182, align 8
  %and.i1229 = and i64 %765, %766
  store i64 %and.i1229, i64* %x11115555.i1183, align 8
  %767 = load i64, i64* %x33CC33CC.i1181, align 8
  %768 = load i64, i64* %x11115555.i1183, align 8
  %xor1.i1230 = xor i64 %767, %768
  store i64 %xor1.i1230, i64* %x22DD6699.i1184, align 8
  %769 = load i64, i64* %a6.addr.i1176, align 8
  %770 = load i64, i64* %x22DD6699.i1184, align 8
  %xor2.i1231 = xor i64 %769, %770
  store i64 %xor2.i1231, i64* %x22DD9966.i1185, align 8
  %771 = load i64, i64* %a5.addr.i1175, align 8
  %772 = load i64, i64* %x22DD9966.i1185, align 8
  %neg.i1232 = xor i64 %772, -1
  %and3.i1233 = and i64 %771, %neg.i1232
  store i64 %and3.i1233, i64* %x00220099.i1186, align 8
  %773 = load i64, i64* %a1.addr.i1171, align 8
  %774 = load i64, i64* %x22DD9966.i1185, align 8
  %and4.i1234 = and i64 %773, %774
  store i64 %and4.i1234, i64* %x00551144.i1187, align 8
  %775 = load i64, i64* %a2.addr.i1172, align 8
  %776 = load i64, i64* %x00551144.i1187, align 8
  %xor5.i1235 = xor i64 %775, %776
  store i64 %xor5.i1235, i64* %x33662277.i1188, align 8
  %777 = load i64, i64* %a1.addr.i1171, align 8
  %778 = load i64, i64* %a3.addr.i1173, align 8
  %xor6.i1236 = xor i64 %777, %778
  store i64 %xor6.i1236, i64* %x5A5A5A5A.i1189, align 8
  %779 = load i64, i64* %x33662277.i1188, align 8
  %780 = load i64, i64* %x5A5A5A5A.i1189, align 8
  %or7.i1237 = or i64 %779, %780
  store i64 %or7.i1237, i64* %x7B7E7A7F.i1190, align 8
  %781 = load i64, i64* %x22DD6699.i1184, align 8
  %782 = load i64, i64* %x7B7E7A7F.i1190, align 8
  %xor8.i1238 = xor i64 %781, %782
  store i64 %xor8.i1238, i64* %x59A31CE6.i1191, align 8
  %783 = load i64, i64* %a3.addr.i1173, align 8
  %784 = load i64, i64* %x59A31CE6.i1191, align 8
  %and9.i1239 = and i64 %783, %784
  store i64 %and9.i1239, i64* %x09030C06.i1192, align 8
  %785 = load i64, i64* %x09030C06.i1192, align 8
  %786 = load i64, i64* %a6.addr.i1176, align 8
  %neg10.i1240 = xor i64 %786, -1
  %and11.i1241 = and i64 %785, %neg10.i1240
  store i64 %and11.i1241, i64* %x09030000.i1193, align 8
  %787 = load i64, i64* %x00220099.i1186, align 8
  %788 = load i64, i64* %x33662277.i1188, align 8
  %or12.i1242 = or i64 %787, %788
  store i64 %or12.i1242, i64* %x336622FF.i1194, align 8
  %789 = load i64, i64* %x09030000.i1193, align 8
  %790 = load i64, i64* %x336622FF.i1194, align 8
  %xor13.i1243 = xor i64 %789, %790
  store i64 %xor13.i1243, i64* %x3A6522FF.i1195, align 8
  %791 = load i64, i64* %x3A6522FF.i1195, align 8
  %792 = load i64, i64* %a4.addr.i1174, align 8
  %and14.i1244 = and i64 %791, %792
  store i64 %and14.i1244, i64* %x30.i1225, align 8
  %793 = load i64, i64* %x30.i1225, align 8
  %794 = load i64, i64* %x59A31CE6.i1191, align 8
  %xor15.i1245 = xor i64 %793, %794
  store i64 %xor15.i1245, i64* %x31.i1226, align 8
  %795 = load i64*, i64** %out4.addr.i1180, align 8
  %796 = load i64, i64* %795, align 8
  %797 = load i64, i64* %x31.i1226, align 8
  %xor16.i1246 = xor i64 %796, %797
  %798 = load i64*, i64** %out4.addr.i1180, align 8
  store i64 %xor16.i1246, i64* %798, align 8
  %799 = load i64, i64* %a2.addr.i1172, align 8
  %800 = load i64, i64* %x7B7E7A7F.i1190, align 8
  %xor17.i1247 = xor i64 %799, %800
  store i64 %xor17.i1247, i64* %x484D494C.i1196, align 8
  %801 = load i64, i64* %a6.addr.i1176, align 8
  %802 = load i64, i64* %x484D494C.i1196, align 8
  %neg18.i1248 = xor i64 %802, -1
  %and19.i1249 = and i64 %801, %neg18.i1248
  store i64 %and19.i1249, i64* %x0000B6B3.i1197, align 8
  %803 = load i64, i64* %a3.addr.i1173, align 8
  %804 = load i64, i64* %x0000B6B3.i1197, align 8
  %xor20.i1250 = xor i64 %803, %804
  store i64 %xor20.i1250, i64* %x0F0FB9BC.i1198, align 8
  %805 = load i64, i64* %a5.addr.i1175, align 8
  %806 = load i64, i64* %x09030C06.i1192, align 8
  %neg21.i1251 = xor i64 %806, -1
  %and22.i1252 = and i64 %805, %neg21.i1251
  store i64 %and22.i1252, i64* %x00FC00F9.i1199, align 8
  %807 = load i64, i64* %x0F0FB9BC.i1198, align 8
  %808 = load i64, i64* %x00FC00F9.i1199, align 8
  %or23.i1253 = or i64 %807, %808
  store i64 %or23.i1253, i64* %x0FFFB9FD.i1200, align 8
  %809 = load i64, i64* %a1.addr.i1171, align 8
  %810 = load i64, i64* %x59A31CE6.i1191, align 8
  %or24.i1254 = or i64 %809, %810
  store i64 %or24.i1254, i64* %x5DF75DF7.i1201, align 8
  %811 = load i64, i64* %x336622FF.i1194, align 8
  %812 = load i64, i64* %x5DF75DF7.i1201, align 8
  %and25.i1255 = and i64 %811, %812
  store i64 %and25.i1255, i64* %x116600F7.i1202, align 8
  %813 = load i64, i64* %x0F0FB9BC.i1198, align 8
  %814 = load i64, i64* %x116600F7.i1202, align 8
  %xor26.i1256 = xor i64 %813, %814
  store i64 %xor26.i1256, i64* %x1E69B94B.i1203, align 8
  %815 = load i64, i64* %x1E69B94B.i1203, align 8
  %816 = load i64, i64* %x09030000.i1193, align 8
  %neg27.i1257 = xor i64 %816, -1
  %and28.i1258 = and i64 %815, %neg27.i1257
  store i64 %and28.i1258, i64* %x1668B94B.i1204, align 8
  %817 = load i64, i64* %x00220099.i1186, align 8
  %818 = load i64, i64* %a4.addr.i1174, align 8
  %or29.i1259 = or i64 %817, %818
  store i64 %or29.i1259, i64* %x20.i1223, align 8
  %819 = load i64, i64* %x20.i1223, align 8
  %820 = load i64, i64* %x1668B94B.i1204, align 8
  %xor30.i1260 = xor i64 %819, %820
  store i64 %xor30.i1260, i64* %x21.i1224, align 8
  %821 = load i64*, i64** %out3.addr.i1179, align 8
  %822 = load i64, i64* %821, align 8
  %823 = load i64, i64* %x21.i1224, align 8
  %xor31.i1261 = xor i64 %822, %823
  %824 = load i64*, i64** %out3.addr.i1179, align 8
  store i64 %xor31.i1261, i64* %824, align 8
  %825 = load i64, i64* %a2.addr.i1172, align 8
  %826 = load i64, i64* %x5A5A5A5A.i1189, align 8
  %or32.i1262 = or i64 %825, %826
  store i64 %or32.i1262, i64* %x7B7B7B7B.i1205, align 8
  %827 = load i64, i64* %x3A6522FF.i1195, align 8
  %828 = load i64, i64* %x7B7B7B7B.i1205, align 8
  %xor33.i1263 = xor i64 %827, %828
  store i64 %xor33.i1263, i64* %x411E5984.i1206, align 8
  %829 = load i64, i64* %x11115555.i1183, align 8
  %830 = load i64, i64* %x0FFFB9FD.i1200, align 8
  %or34.i1264 = or i64 %829, %830
  store i64 %or34.i1264, i64* %x1FFFFDFD.i1207, align 8
  %831 = load i64, i64* %x411E5984.i1206, align 8
  %832 = load i64, i64* %x1FFFFDFD.i1207, align 8
  %xor35.i1265 = xor i64 %831, %832
  store i64 %xor35.i1265, i64* %x5EE1A479.i1208, align 8
  %833 = load i64, i64* %x22DD6699.i1184, align 8
  %834 = load i64, i64* %x1E69B94B.i1203, align 8
  %xor36.i1266 = xor i64 %833, %834
  store i64 %xor36.i1266, i64* %x3CB4DFD2.i1209, align 8
  %835 = load i64, i64* %a5.addr.i1175, align 8
  %836 = load i64, i64* %x3CB4DFD2.i1209, align 8
  %neg37.i1267 = xor i64 %836, -1
  %and38.i1268 = and i64 %835, %neg37.i1267
  store i64 %and38.i1268, i64* %x004B002D.i1210, align 8
  %837 = load i64, i64* %x484D494C.i1196, align 8
  %neg39.i1269 = xor i64 %837, -1
  store i64 %neg39.i1269, i64* %xB7B2B6B3.i1211, align 8
  %838 = load i64, i64* %x7B7B7B7B.i1205, align 8
  %839 = load i64, i64* %xB7B2B6B3.i1211, align 8
  %xor40.i1270 = xor i64 %838, %839
  store i64 %xor40.i1270, i64* %xCCC9CDC8.i1212, align 8
  %840 = load i64, i64* %x004B002D.i1210, align 8
  %841 = load i64, i64* %xCCC9CDC8.i1212, align 8
  %xor41.i1271 = xor i64 %840, %841
  store i64 %xor41.i1271, i64* %xCC82CDE5.i1213, align 8
  %842 = load i64, i64* %xCC82CDE5.i1213, align 8
  %843 = load i64, i64* %a4.addr.i1174, align 8
  %neg42.i1272 = xor i64 %843, -1
  %and43.i1273 = and i64 %842, %neg42.i1272
  store i64 %and43.i1273, i64* %x10.i1221, align 8
  %844 = load i64, i64* %x10.i1221, align 8
  %845 = load i64, i64* %x5EE1A479.i1208, align 8
  %xor44.i1274 = xor i64 %844, %845
  store i64 %xor44.i1274, i64* %x11.i1222, align 8
  %846 = load i64*, i64** %out2.addr.i1178, align 8
  %847 = load i64, i64* %846, align 8
  %848 = load i64, i64* %x11.i1222, align 8
  %xor45.i1275 = xor i64 %847, %848
  %849 = load i64*, i64** %out2.addr.i1178, align 8
  store i64 %xor45.i1275, i64* %849, align 8
  %850 = load i64, i64* %a6.addr.i1176, align 8
  %851 = load i64, i64* %x00551144.i1187, align 8
  %xor46.i1276 = xor i64 %850, %851
  store i64 %xor46.i1276, i64* %x0055EEBB.i1214, align 8
  %852 = load i64, i64* %a1.addr.i1171, align 8
  %853 = load i64, i64* %x0F0FB9BC.i1198, align 8
  %xor47.i1277 = xor i64 %852, %853
  store i64 %xor47.i1277, i64* %x5A5AECE9.i1215, align 8
  %854 = load i64, i64* %x0055EEBB.i1214, align 8
  %855 = load i64, i64* %x5A5AECE9.i1215, align 8
  %and48.i1278 = and i64 %854, %855
  store i64 %and48.i1278, i64* %x0050ECA9.i1216, align 8
  %856 = load i64, i64* %x09030C06.i1192, align 8
  %857 = load i64, i64* %xCCC9CDC8.i1212, align 8
  %xor49.i1279 = xor i64 %856, %857
  store i64 %xor49.i1279, i64* %xC5CAC1CE.i1217, align 8
  %858 = load i64, i64* %x0050ECA9.i1216, align 8
  %859 = load i64, i64* %xC5CAC1CE.i1217, align 8
  %xor50.i1280 = xor i64 %858, %859
  store i64 %xor50.i1280, i64* %xC59A2D67.i1218, align 8
  %860 = load i64, i64* %x0FFFB9FD.i1200, align 8
  %861 = load i64, i64* %a4.addr.i1174, align 8
  %neg51.i1281 = xor i64 %861, -1
  %and52.i1282 = and i64 %860, %neg51.i1281
  store i64 %and52.i1282, i64* %x00.i1219, align 8
  %862 = load i64, i64* %x00.i1219, align 8
  %863 = load i64, i64* %xC59A2D67.i1218, align 8
  %xor53.i1283 = xor i64 %862, %863
  store i64 %xor53.i1283, i64* %x01.i1220, align 8
  %864 = load i64*, i64** %out1.addr.i1177, align 8
  %865 = load i64, i64* %864, align 8
  %866 = load i64, i64* %x01.i1220, align 8
  %xor54.i1284 = xor i64 %865, %866
  %867 = load i64*, i64** %out1.addr.i1177, align 8
  store i64 %xor54.i1284, i64* %867, align 8
  %868 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 36), align 8
  %arrayidx143 = getelementptr inbounds i64, i64* %868, i64 0
  %869 = load i64, i64* %arrayidx143, align 8
  %870 = load i64**, i64*** %k, align 8
  %arrayidx144 = getelementptr inbounds i64*, i64** %870, i64 36
  %871 = load i64*, i64** %arrayidx144, align 8
  %arrayidx145 = getelementptr inbounds i64, i64* %871, i64 0
  %872 = load i64, i64* %arrayidx145, align 8
  %xor146 = xor i64 %869, %872
  %873 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 37), align 8
  %arrayidx147 = getelementptr inbounds i64, i64* %873, i64 0
  %874 = load i64, i64* %arrayidx147, align 8
  %875 = load i64**, i64*** %k, align 8
  %arrayidx148 = getelementptr inbounds i64*, i64** %875, i64 37
  %876 = load i64*, i64** %arrayidx148, align 8
  %arrayidx149 = getelementptr inbounds i64, i64* %876, i64 0
  %877 = load i64, i64* %arrayidx149, align 8
  %xor150 = xor i64 %874, %877
  %878 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 38), align 8
  %arrayidx151 = getelementptr inbounds i64, i64* %878, i64 0
  %879 = load i64, i64* %arrayidx151, align 8
  %880 = load i64**, i64*** %k, align 8
  %arrayidx152 = getelementptr inbounds i64*, i64** %880, i64 38
  %881 = load i64*, i64** %arrayidx152, align 8
  %arrayidx153 = getelementptr inbounds i64, i64* %881, i64 0
  %882 = load i64, i64* %arrayidx153, align 8
  %xor154 = xor i64 %879, %882
  %883 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 39), align 8
  %arrayidx155 = getelementptr inbounds i64, i64* %883, i64 0
  %884 = load i64, i64* %arrayidx155, align 8
  %885 = load i64**, i64*** %k, align 8
  %arrayidx156 = getelementptr inbounds i64*, i64** %885, i64 39
  %886 = load i64*, i64** %arrayidx156, align 8
  %arrayidx157 = getelementptr inbounds i64, i64* %886, i64 0
  %887 = load i64, i64* %arrayidx157, align 8
  %xor158 = xor i64 %884, %887
  %888 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 40), align 8
  %arrayidx159 = getelementptr inbounds i64, i64* %888, i64 0
  %889 = load i64, i64* %arrayidx159, align 8
  %890 = load i64**, i64*** %k, align 8
  %arrayidx160 = getelementptr inbounds i64*, i64** %890, i64 40
  %891 = load i64*, i64** %arrayidx160, align 8
  %arrayidx161 = getelementptr inbounds i64, i64* %891, i64 0
  %892 = load i64, i64* %arrayidx161, align 8
  %xor162 = xor i64 %889, %892
  %893 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 41), align 8
  %arrayidx163 = getelementptr inbounds i64, i64* %893, i64 0
  %894 = load i64, i64* %arrayidx163, align 8
  %895 = load i64**, i64*** %k, align 8
  %arrayidx164 = getelementptr inbounds i64*, i64** %895, i64 41
  %896 = load i64*, i64** %arrayidx164, align 8
  %arrayidx165 = getelementptr inbounds i64, i64* %896, i64 0
  %897 = load i64, i64* %arrayidx165, align 8
  %xor166 = xor i64 %894, %897
  store i64 %xor146, i64* %a1.addr.i1058, align 8
  store i64 %xor150, i64* %a2.addr.i1059, align 8
  store i64 %xor154, i64* %a3.addr.i1060, align 8
  store i64 %xor158, i64* %a4.addr.i1061, align 8
  store i64 %xor162, i64* %a5.addr.i1062, align 8
  store i64 %xor166, i64* %a6.addr.i1063, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 63), i64** %out1.addr.i1064, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 43), i64** %out2.addr.i1065, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 53), i64** %out3.addr.i1066, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 38), i64** %out4.addr.i1067, align 8
  %898 = load i64, i64* %a4.addr.i1061, align 8
  %899 = load i64, i64* %a5.addr.i1062, align 8
  %xor.i1114 = xor i64 %898, %899
  store i64 %xor.i1114, i64* %x0FF00FF0.i1068, align 8
  %900 = load i64, i64* %a3.addr.i1060, align 8
  %901 = load i64, i64* %x0FF00FF0.i1068, align 8
  %xor1.i1115 = xor i64 %900, %901
  store i64 %xor1.i1115, i64* %x3CC33CC3.i1069, align 8
  %902 = load i64, i64* %a6.addr.i1063, align 8
  %903 = load i64, i64* %x3CC33CC3.i1069, align 8
  %and.i1116 = and i64 %902, %903
  store i64 %and.i1116, i64* %x00003CC3.i1070, align 8
  %904 = load i64, i64* %a4.addr.i1061, align 8
  %905 = load i64, i64* %x0FF00FF0.i1068, align 8
  %and2.i1117 = and i64 %904, %905
  store i64 %and2.i1117, i64* %x0F000F00.i1071, align 8
  %906 = load i64, i64* %a2.addr.i1059, align 8
  %907 = load i64, i64* %x0F000F00.i1071, align 8
  %xor3.i1118 = xor i64 %906, %907
  store i64 %xor3.i1118, i64* %x5A555A55.i1072, align 8
  %908 = load i64, i64* %x00003CC3.i1070, align 8
  %909 = load i64, i64* %x5A555A55.i1072, align 8
  %and4.i1119 = and i64 %908, %909
  store i64 %and4.i1119, i64* %x00001841.i1073, align 8
  %910 = load i64, i64* %a6.addr.i1063, align 8
  %911 = load i64, i64* %x0F000F00.i1071, align 8
  %and5.i1120 = and i64 %910, %911
  store i64 %and5.i1120, i64* %x00000F00.i1074, align 8
  %912 = load i64, i64* %a3.addr.i1060, align 8
  %913 = load i64, i64* %x00000F00.i1074, align 8
  %xor6.i1121 = xor i64 %912, %913
  store i64 %xor6.i1121, i64* %x33333C33.i1075, align 8
  %914 = load i64, i64* %x5A555A55.i1072, align 8
  %915 = load i64, i64* %x33333C33.i1075, align 8
  %or.i1122 = or i64 %914, %915
  store i64 %or.i1122, i64* %x7B777E77.i1076, align 8
  %916 = load i64, i64* %a6.addr.i1063, align 8
  %917 = load i64, i64* %x0FF00FF0.i1068, align 8
  %xor7.i1123 = xor i64 %916, %917
  store i64 %xor7.i1123, i64* %x0FF0F00F.i1077, align 8
  %918 = load i64, i64* %x7B777E77.i1076, align 8
  %919 = load i64, i64* %x0FF0F00F.i1077, align 8
  %xor8.i1124 = xor i64 %918, %919
  store i64 %xor8.i1124, i64* %x74878E78.i1078, align 8
  %920 = load i64, i64* %a1.addr.i1058, align 8
  %921 = load i64, i64* %x00001841.i1073, align 8
  %neg.i1125 = xor i64 %921, -1
  %and9.i1126 = and i64 %920, %neg.i1125
  store i64 %and9.i1126, i64* %x30.i1112, align 8
  %922 = load i64, i64* %x30.i1112, align 8
  %923 = load i64, i64* %x74878E78.i1078, align 8
  %xor10.i1127 = xor i64 %922, %923
  store i64 %xor10.i1127, i64* %x31.i1113, align 8
  %924 = load i64*, i64** %out4.addr.i1067, align 8
  %925 = load i64, i64* %924, align 8
  %926 = load i64, i64* %x31.i1113, align 8
  %xor11.i1128 = xor i64 %925, %926
  %927 = load i64*, i64** %out4.addr.i1067, align 8
  store i64 %xor11.i1128, i64* %927, align 8
  %928 = load i64, i64* %a5.addr.i1062, align 8
  %929 = load i64, i64* %x3CC33CC3.i1069, align 8
  %neg12.i1129 = xor i64 %929, -1
  %and13.i1130 = and i64 %928, %neg12.i1129
  store i64 %and13.i1130, i64* %x003C003C.i1079, align 8
  %930 = load i64, i64* %x5A555A55.i1072, align 8
  %931 = load i64, i64* %x003C003C.i1079, align 8
  %or14.i1131 = or i64 %930, %931
  store i64 %or14.i1131, i64* %x5A7D5A7D.i1080, align 8
  %932 = load i64, i64* %x00003CC3.i1070, align 8
  %933 = load i64, i64* %x33333C33.i1075, align 8
  %xor15.i1132 = xor i64 %932, %933
  store i64 %xor15.i1132, i64* %x333300F0.i1081, align 8
  %934 = load i64, i64* %x5A7D5A7D.i1080, align 8
  %935 = load i64, i64* %x333300F0.i1081, align 8
  %xor16.i1133 = xor i64 %934, %935
  store i64 %xor16.i1133, i64* %x694E5A8D.i1082, align 8
  %936 = load i64, i64* %x00003CC3.i1070, align 8
  %937 = load i64, i64* %x0FF0F00F.i1077, align 8
  %xor17.i1134 = xor i64 %936, %937
  store i64 %xor17.i1134, i64* %x0FF0CCCC.i1083, align 8
  %938 = load i64, i64* %a4.addr.i1061, align 8
  %939 = load i64, i64* %x0FF0CCCC.i1083, align 8
  %neg18.i1135 = xor i64 %939, -1
  %and19.i1136 = and i64 %938, %neg18.i1135
  store i64 %and19.i1136, i64* %x000F0303.i1084, align 8
  %940 = load i64, i64* %x5A555A55.i1072, align 8
  %941 = load i64, i64* %x000F0303.i1084, align 8
  %neg20.i1137 = xor i64 %941, -1
  %and21.i1138 = and i64 %940, %neg20.i1137
  store i64 %and21.i1138, i64* %x5A505854.i1085, align 8
  %942 = load i64, i64* %a5.addr.i1062, align 8
  %943 = load i64, i64* %x333300F0.i1081, align 8
  %xor22.i1139 = xor i64 %942, %943
  store i64 %xor22.i1139, i64* %x33CC000F.i1086, align 8
  %944 = load i64, i64* %x5A505854.i1085, align 8
  %945 = load i64, i64* %x33CC000F.i1086, align 8
  %xor23.i1140 = xor i64 %944, %945
  store i64 %xor23.i1140, i64* %x699C585B.i1087, align 8
  %946 = load i64, i64* %x0F000F00.i1071, align 8
  %947 = load i64, i64* %x74878E78.i1078, align 8
  %or24.i1141 = or i64 %946, %947
  store i64 %or24.i1141, i64* %x7F878F78.i1088, align 8
  %948 = load i64, i64* %a3.addr.i1060, align 8
  %949 = load i64, i64* %x699C585B.i1087, align 8
  %and25.i1142 = and i64 %948, %949
  store i64 %and25.i1142, i64* %x21101013.i1089, align 8
  %950 = load i64, i64* %x7F878F78.i1088, align 8
  %951 = load i64, i64* %x21101013.i1089, align 8
  %or26.i1143 = or i64 %950, %951
  store i64 %or26.i1143, i64* %x7F979F7B.i1090, align 8
  %952 = load i64, i64* %x3CC33CC3.i1069, align 8
  %953 = load i64, i64* %x0FF0F00F.i1077, align 8
  %neg27.i1144 = xor i64 %953, -1
  %and28.i1145 = and i64 %952, %neg27.i1144
  store i64 %and28.i1145, i64* %x30030CC0.i1091, align 8
  %954 = load i64, i64* %x7F979F7B.i1090, align 8
  %955 = load i64, i64* %x30030CC0.i1091, align 8
  %xor29.i1146 = xor i64 %954, %955
  store i64 %xor29.i1146, i64* %x4F9493BB.i1092, align 8
  %956 = load i64, i64* %x4F9493BB.i1092, align 8
  %957 = load i64, i64* %a1.addr.i1058, align 8
  %neg30.i1147 = xor i64 %957, -1
  %and31.i1148 = and i64 %956, %neg30.i1147
  store i64 %and31.i1148, i64* %x00.i1106, align 8
  %958 = load i64, i64* %x00.i1106, align 8
  %959 = load i64, i64* %x694E5A8D.i1082, align 8
  %xor32.i1149 = xor i64 %958, %959
  store i64 %xor32.i1149, i64* %x01.i1107, align 8
  %960 = load i64*, i64** %out1.addr.i1064, align 8
  %961 = load i64, i64* %960, align 8
  %962 = load i64, i64* %x01.i1107, align 8
  %xor33.i1150 = xor i64 %961, %962
  %963 = load i64*, i64** %out1.addr.i1064, align 8
  store i64 %xor33.i1150, i64* %963, align 8
  %964 = load i64, i64* %x699C585B.i1087, align 8
  %965 = load i64, i64* %x4F9493BB.i1092, align 8
  %or34.i1151 = or i64 %964, %965
  store i64 %or34.i1151, i64* %x6F9CDBFB.i1093, align 8
  %966 = load i64, i64* %a6.addr.i1063, align 8
  %967 = load i64, i64* %x6F9CDBFB.i1093, align 8
  %and35.i1152 = and i64 %966, %967
  store i64 %and35.i1152, i64* %x0000DBFB.i1094, align 8
  %968 = load i64, i64* %a2.addr.i1059, align 8
  %969 = load i64, i64* %x0000DBFB.i1094, align 8
  %and36.i1153 = and i64 %968, %969
  store i64 %and36.i1153, i64* %x00005151.i1095, align 8
  %970 = load i64, i64* %x694E5A8D.i1082, align 8
  %971 = load i64, i64* %x4F9493BB.i1092, align 8
  %xor37.i1154 = xor i64 %970, %971
  store i64 %xor37.i1154, i64* %x26DAC936.i1096, align 8
  %972 = load i64, i64* %x00005151.i1095, align 8
  %973 = load i64, i64* %x26DAC936.i1096, align 8
  %xor38.i1155 = xor i64 %972, %973
  store i64 %xor38.i1155, i64* %x26DA9867.i1097, align 8
  %974 = load i64, i64* %a5.addr.i1062, align 8
  %975 = load i64, i64* %x21101013.i1089, align 8
  %or39.i1156 = or i64 %974, %975
  store i64 %or39.i1156, i64* %x21FF10FF.i1098, align 8
  %976 = load i64, i64* %x0000DBFB.i1094, align 8
  %977 = load i64, i64* %x21FF10FF.i1098, align 8
  %xor40.i1157 = xor i64 %976, %977
  store i64 %xor40.i1157, i64* %x21FFCB04.i1099, align 8
  %978 = load i64, i64* %a5.addr.i1062, align 8
  %979 = load i64, i64* %x26DAC936.i1096, align 8
  %xor41.i1158 = xor i64 %978, %979
  store i64 %xor41.i1158, i64* %x2625C9C9.i1100, align 8
  %980 = load i64, i64* %x21FFCB04.i1099, align 8
  %981 = load i64, i64* %x2625C9C9.i1100, align 8
  %or42.i1159 = or i64 %980, %981
  store i64 %or42.i1159, i64* %x27FFCBCD.i1101, align 8
  %982 = load i64, i64* %x27FFCBCD.i1101, align 8
  %983 = load i64, i64* %a1.addr.i1058, align 8
  %and43.i1160 = and i64 %982, %983
  store i64 %and43.i1160, i64* %x20.i1110, align 8
  %984 = load i64, i64* %x20.i1110, align 8
  %985 = load i64, i64* %x699C585B.i1087, align 8
  %xor44.i1161 = xor i64 %984, %985
  store i64 %xor44.i1161, i64* %x21.i1111, align 8
  %986 = load i64*, i64** %out3.addr.i1066, align 8
  %987 = load i64, i64* %986, align 8
  %988 = load i64, i64* %x21.i1111, align 8
  %xor45.i1162 = xor i64 %987, %988
  %989 = load i64*, i64** %out3.addr.i1066, align 8
  store i64 %xor45.i1162, i64* %989, align 8
  %990 = load i64, i64* %x0000DBFB.i1094, align 8
  %991 = load i64, i64* %x27FFCBCD.i1101, align 8
  %xor46.i1163 = xor i64 %990, %991
  store i64 %xor46.i1163, i64* %x27FF1036.i1102, align 8
  %992 = load i64, i64* %x003C003C.i1079, align 8
  %993 = load i64, i64* %x27FF1036.i1102, align 8
  %or47.i1164 = or i64 %992, %993
  store i64 %or47.i1164, i64* %x27FF103E.i1103, align 8
  %994 = load i64, i64* %x4F9493BB.i1092, align 8
  %neg48.i1165 = xor i64 %994, -1
  store i64 %neg48.i1165, i64* %xB06B6C44.i1104, align 8
  %995 = load i64, i64* %x27FF103E.i1103, align 8
  %996 = load i64, i64* %xB06B6C44.i1104, align 8
  %xor49.i1166 = xor i64 %995, %996
  store i64 %xor49.i1166, i64* %x97947C7A.i1105, align 8
  %997 = load i64, i64* %x97947C7A.i1105, align 8
  %998 = load i64, i64* %a1.addr.i1058, align 8
  %neg50.i1167 = xor i64 %998, -1
  %and51.i1168 = and i64 %997, %neg50.i1167
  store i64 %and51.i1168, i64* %x10.i1108, align 8
  %999 = load i64, i64* %x10.i1108, align 8
  %1000 = load i64, i64* %x26DA9867.i1097, align 8
  %xor52.i1169 = xor i64 %999, %1000
  store i64 %xor52.i1169, i64* %x11.i1109, align 8
  %1001 = load i64*, i64** %out2.addr.i1065, align 8
  %1002 = load i64, i64* %1001, align 8
  %1003 = load i64, i64* %x11.i1109, align 8
  %xor53.i1170 = xor i64 %1002, %1003
  %1004 = load i64*, i64** %out2.addr.i1065, align 8
  store i64 %xor53.i1170, i64* %1004, align 8
  %1005 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 42), align 8
  %arrayidx167 = getelementptr inbounds i64, i64* %1005, i64 0
  %1006 = load i64, i64* %arrayidx167, align 8
  %1007 = load i64**, i64*** %k, align 8
  %arrayidx168 = getelementptr inbounds i64*, i64** %1007, i64 42
  %1008 = load i64*, i64** %arrayidx168, align 8
  %arrayidx169 = getelementptr inbounds i64, i64* %1008, i64 0
  %1009 = load i64, i64* %arrayidx169, align 8
  %xor170 = xor i64 %1006, %1009
  %1010 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 43), align 8
  %arrayidx171 = getelementptr inbounds i64, i64* %1010, i64 0
  %1011 = load i64, i64* %arrayidx171, align 8
  %1012 = load i64**, i64*** %k, align 8
  %arrayidx172 = getelementptr inbounds i64*, i64** %1012, i64 43
  %1013 = load i64*, i64** %arrayidx172, align 8
  %arrayidx173 = getelementptr inbounds i64, i64* %1013, i64 0
  %1014 = load i64, i64* %arrayidx173, align 8
  %xor174 = xor i64 %1011, %1014
  %1015 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 44), align 8
  %arrayidx175 = getelementptr inbounds i64, i64* %1015, i64 0
  %1016 = load i64, i64* %arrayidx175, align 8
  %1017 = load i64**, i64*** %k, align 8
  %arrayidx176 = getelementptr inbounds i64*, i64** %1017, i64 44
  %1018 = load i64*, i64** %arrayidx176, align 8
  %arrayidx177 = getelementptr inbounds i64, i64* %1018, i64 0
  %1019 = load i64, i64* %arrayidx177, align 8
  %xor178 = xor i64 %1016, %1019
  %1020 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 45), align 8
  %arrayidx179 = getelementptr inbounds i64, i64* %1020, i64 0
  %1021 = load i64, i64* %arrayidx179, align 8
  %1022 = load i64**, i64*** %k, align 8
  %arrayidx180 = getelementptr inbounds i64*, i64** %1022, i64 45
  %1023 = load i64*, i64** %arrayidx180, align 8
  %arrayidx181 = getelementptr inbounds i64, i64* %1023, i64 0
  %1024 = load i64, i64* %arrayidx181, align 8
  %xor182 = xor i64 %1021, %1024
  %1025 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 46), align 8
  %arrayidx183 = getelementptr inbounds i64, i64* %1025, i64 0
  %1026 = load i64, i64* %arrayidx183, align 8
  %1027 = load i64**, i64*** %k, align 8
  %arrayidx184 = getelementptr inbounds i64*, i64** %1027, i64 46
  %1028 = load i64*, i64** %arrayidx184, align 8
  %arrayidx185 = getelementptr inbounds i64, i64* %1028, i64 0
  %1029 = load i64, i64* %arrayidx185, align 8
  %xor186 = xor i64 %1026, %1029
  %1030 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 47), align 8
  %arrayidx187 = getelementptr inbounds i64, i64* %1030, i64 0
  %1031 = load i64, i64* %arrayidx187, align 8
  %1032 = load i64**, i64*** %k, align 8
  %arrayidx188 = getelementptr inbounds i64*, i64** %1032, i64 47
  %1033 = load i64*, i64** %arrayidx188, align 8
  %arrayidx189 = getelementptr inbounds i64, i64* %1033, i64 0
  %1034 = load i64, i64* %arrayidx189, align 8
  %xor190 = xor i64 %1031, %1034
  store i64 %xor170, i64* %a1.addr.i955, align 8
  store i64 %xor174, i64* %a2.addr.i956, align 8
  store i64 %xor178, i64* %a3.addr.i957, align 8
  store i64 %xor182, i64* %a4.addr.i958, align 8
  store i64 %xor186, i64* %a5.addr.i959, align 8
  store i64 %xor190, i64* %a6.addr.i960, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 36), i64** %out1.addr.i961, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 58), i64** %out2.addr.i962, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 46), i64** %out3.addr.i963, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 52), i64** %out4.addr.i964, align 8
  %1035 = load i64, i64* %a3.addr.i957, align 8
  %1036 = load i64, i64* %a2.addr.i956, align 8
  %neg.i1006 = xor i64 %1036, -1
  %and.i1007 = and i64 %1035, %neg.i1006
  store i64 %and.i1007, i64* %x0C0C0C0C.i965, align 8
  %1037 = load i64, i64* %a5.addr.i959, align 8
  %1038 = load i64, i64* %a3.addr.i957, align 8
  %neg1.i1008 = xor i64 %1038, -1
  %and2.i1009 = and i64 %1037, %neg1.i1008
  store i64 %and2.i1009, i64* %x0000F0F0.i966, align 8
  %1039 = load i64, i64* %a4.addr.i958, align 8
  %1040 = load i64, i64* %x0000F0F0.i966, align 8
  %xor.i1010 = xor i64 %1039, %1040
  store i64 %xor.i1010, i64* %x00FFF00F.i967, align 8
  %1041 = load i64, i64* %a1.addr.i955, align 8
  %1042 = load i64, i64* %x00FFF00F.i967, align 8
  %and3.i1011 = and i64 %1041, %1042
  store i64 %and3.i1011, i64* %x00555005.i968, align 8
  %1043 = load i64, i64* %x00555005.i968, align 8
  %1044 = load i64, i64* %x0C0C0C0C.i965, align 8
  %neg4.i1012 = xor i64 %1044, -1
  %and5.i1013 = and i64 %1043, %neg4.i1012
  store i64 %and5.i1013, i64* %x00515001.i969, align 8
  %1045 = load i64, i64* %a2.addr.i956, align 8
  %1046 = load i64, i64* %x00FFF00F.i967, align 8
  %neg6.i1014 = xor i64 %1046, -1
  %and7.i1015 = and i64 %1045, %neg6.i1014
  store i64 %and7.i1015, i64* %x33000330.i970, align 8
  %1047 = load i64, i64* %a1.addr.i955, align 8
  %1048 = load i64, i64* %x33000330.i970, align 8
  %or.i1016 = or i64 %1047, %1048
  store i64 %or.i1016, i64* %x77555775.i971, align 8
  %1049 = load i64, i64* %a2.addr.i956, align 8
  %1050 = load i64, i64* %a3.addr.i957, align 8
  %neg8.i1017 = xor i64 %1050, -1
  %and9.i1018 = and i64 %1049, %neg8.i1017
  store i64 %and9.i1018, i64* %x30303030.i972, align 8
  %1051 = load i64, i64* %a5.addr.i959, align 8
  %1052 = load i64, i64* %x30303030.i972, align 8
  %xor10.i1019 = xor i64 %1051, %1052
  store i64 %xor10.i1019, i64* %x3030CFCF.i973, align 8
  %1053 = load i64, i64* %x77555775.i971, align 8
  %1054 = load i64, i64* %x3030CFCF.i973, align 8
  %and11.i1020 = and i64 %1053, %1054
  store i64 %and11.i1020, i64* %x30104745.i974, align 8
  %1055 = load i64, i64* %x00555005.i968, align 8
  %1056 = load i64, i64* %x30104745.i974, align 8
  %or12.i1021 = or i64 %1055, %1056
  store i64 %or12.i1021, i64* %x30555745.i975, align 8
  %1057 = load i64, i64* %x00FFF00F.i967, align 8
  %neg13.i1022 = xor i64 %1057, -1
  store i64 %neg13.i1022, i64* %xFF000FF0.i976, align 8
  %1058 = load i64, i64* %x30104745.i974, align 8
  %1059 = load i64, i64* %xFF000FF0.i976, align 8
  %xor14.i1023 = xor i64 %1058, %1059
  store i64 %xor14.i1023, i64* %xCF1048B5.i977, align 8
  %1060 = load i64, i64* %a3.addr.i957, align 8
  %1061 = load i64, i64* %x77555775.i971, align 8
  %neg15.i1024 = xor i64 %1061, -1
  %and16.i1025 = and i64 %1060, %neg15.i1024
  store i64 %and16.i1025, i64* %x080A080A.i978, align 8
  %1062 = load i64, i64* %xCF1048B5.i977, align 8
  %1063 = load i64, i64* %x080A080A.i978, align 8
  %xor17.i1026 = xor i64 %1062, %1063
  store i64 %xor17.i1026, i64* %xC71A40BF.i979, align 8
  %1064 = load i64, i64* %x0C0C0C0C.i965, align 8
  %1065 = load i64, i64* %xC71A40BF.i979, align 8
  %xor18.i1027 = xor i64 %1064, %1065
  store i64 %xor18.i1027, i64* %xCB164CB3.i980, align 8
  %1066 = load i64, i64* %x00515001.i969, align 8
  %1067 = load i64, i64* %a6.addr.i960, align 8
  %or19.i1028 = or i64 %1066, %1067
  store i64 %or19.i1028, i64* %x10.i1000, align 8
  %1068 = load i64, i64* %x10.i1000, align 8
  %1069 = load i64, i64* %xCB164CB3.i980, align 8
  %xor20.i1029 = xor i64 %1068, %1069
  store i64 %xor20.i1029, i64* %x11.i1001, align 8
  %1070 = load i64*, i64** %out2.addr.i962, align 8
  %1071 = load i64, i64* %1070, align 8
  %1072 = load i64, i64* %x11.i1001, align 8
  %xor21.i1030 = xor i64 %1071, %1072
  %1073 = load i64*, i64** %out2.addr.i962, align 8
  store i64 %xor21.i1030, i64* %1073, align 8
  %1074 = load i64, i64* %a1.addr.i955, align 8
  %1075 = load i64, i64* %xCB164CB3.i980, align 8
  %xor22.i1031 = xor i64 %1074, %1075
  store i64 %xor22.i1031, i64* %x9E4319E6.i981, align 8
  %1076 = load i64, i64* %a5.addr.i959, align 8
  %1077 = load i64, i64* %x9E4319E6.i981, align 8
  %and23.i1032 = and i64 %1076, %1077
  store i64 %and23.i1032, i64* %x000019E6.i982, align 8
  %1078 = load i64, i64* %a2.addr.i956, align 8
  %1079 = load i64, i64* %xC71A40BF.i979, align 8
  %xor24.i1033 = xor i64 %1078, %1079
  store i64 %xor24.i1033, i64* %xF429738C.i983, align 8
  %1080 = load i64, i64* %x000019E6.i982, align 8
  %1081 = load i64, i64* %xF429738C.i983, align 8
  %xor25.i1034 = xor i64 %1080, %1081
  store i64 %xor25.i1034, i64* %xF4296A6A.i984, align 8
  %1082 = load i64, i64* %x33000330.i970, align 8
  %1083 = load i64, i64* %xF4296A6A.i984, align 8
  %xor26.i1035 = xor i64 %1082, %1083
  store i64 %xor26.i1035, i64* %xC729695A.i985, align 8
  %1084 = load i64, i64* %x30555745.i975, align 8
  %1085 = load i64, i64* %xF4296A6A.i984, align 8
  %xor27.i1036 = xor i64 %1084, %1085
  store i64 %xor27.i1036, i64* %xC47C3D2F.i986, align 8
  %1086 = load i64, i64* %a2.addr.i956, align 8
  %1087 = load i64, i64* %xC47C3D2F.i986, align 8
  %or28.i1037 = or i64 %1086, %1087
  store i64 %or28.i1037, i64* %xF77F3F3F.i987, align 8
  %1088 = load i64, i64* %a5.addr.i959, align 8
  %1089 = load i64, i64* %x9E4319E6.i981, align 8
  %xor29.i1038 = xor i64 %1088, %1089
  store i64 %xor29.i1038, i64* %x9E43E619.i988, align 8
  %1090 = load i64, i64* %xF77F3F3F.i987, align 8
  %1091 = load i64, i64* %x9E43E619.i988, align 8
  %xor30.i1039 = xor i64 %1090, %1091
  store i64 %xor30.i1039, i64* %x693CD926.i989, align 8
  %1092 = load i64, i64* %x30555745.i975, align 8
  %1093 = load i64, i64* %a6.addr.i960, align 8
  %and31.i1040 = and i64 %1092, %1093
  store i64 %and31.i1040, i64* %x20.i1002, align 8
  %1094 = load i64, i64* %x20.i1002, align 8
  %1095 = load i64, i64* %x693CD926.i989, align 8
  %xor32.i1041 = xor i64 %1094, %1095
  store i64 %xor32.i1041, i64* %x21.i1003, align 8
  %1096 = load i64*, i64** %out3.addr.i963, align 8
  %1097 = load i64, i64* %1096, align 8
  %1098 = load i64, i64* %x21.i1003, align 8
  %xor33.i1042 = xor i64 %1097, %1098
  %1099 = load i64*, i64** %out3.addr.i963, align 8
  store i64 %xor33.i1042, i64* %1099, align 8
  %1100 = load i64, i64* %x3030CFCF.i973, align 8
  %1101 = load i64, i64* %xC729695A.i985, align 8
  %xor34.i1043 = xor i64 %1100, %1101
  store i64 %xor34.i1043, i64* %xF719A695.i990, align 8
  %1102 = load i64, i64* %a4.addr.i958, align 8
  %1103 = load i64, i64* %xF429738C.i983, align 8
  %or35.i1044 = or i64 %1102, %1103
  store i64 %or35.i1044, i64* %xF4FF73FF.i991, align 8
  %1104 = load i64, i64* %xF719A695.i990, align 8
  %1105 = load i64, i64* %xF4FF73FF.i991, align 8
  %xor36.i1045 = xor i64 %1104, %1105
  store i64 %xor36.i1045, i64* %x03E6D56A.i992, align 8
  %1106 = load i64, i64* %a1.addr.i955, align 8
  %1107 = load i64, i64* %x03E6D56A.i992, align 8
  %xor37.i1046 = xor i64 %1106, %1107
  store i64 %xor37.i1046, i64* %x56B3803F.i993, align 8
  %1108 = load i64, i64* %x56B3803F.i993, align 8
  %1109 = load i64, i64* %a6.addr.i960, align 8
  %and38.i1047 = and i64 %1108, %1109
  store i64 %and38.i1047, i64* %x30.i1004, align 8
  %1110 = load i64, i64* %x30.i1004, align 8
  %1111 = load i64, i64* %xC729695A.i985, align 8
  %xor39.i1048 = xor i64 %1110, %1111
  store i64 %xor39.i1048, i64* %x31.i1005, align 8
  %1112 = load i64*, i64** %out4.addr.i964, align 8
  %1113 = load i64, i64* %1112, align 8
  %1114 = load i64, i64* %x31.i1005, align 8
  %xor40.i1049 = xor i64 %1113, %1114
  %1115 = load i64*, i64** %out4.addr.i964, align 8
  store i64 %xor40.i1049, i64* %1115, align 8
  %1116 = load i64, i64* %xF719A695.i990, align 8
  %1117 = load i64, i64* %a4.addr.i958, align 8
  %neg41.i1050 = xor i64 %1117, -1
  %and42.i1051 = and i64 %1116, %neg41.i1050
  store i64 %and42.i1051, i64* %xF700A600.i994, align 8
  %1118 = load i64, i64* %x693CD926.i989, align 8
  %1119 = load i64, i64* %xF700A600.i994, align 8
  %and43.i1052 = and i64 %1118, %1119
  store i64 %and43.i1052, i64* %x61008000.i995, align 8
  %1120 = load i64, i64* %x00515001.i969, align 8
  %1121 = load i64, i64* %x03E6D56A.i992, align 8
  %xor44.i1053 = xor i64 %1120, %1121
  store i64 %xor44.i1053, i64* %x03B7856B.i996, align 8
  %1122 = load i64, i64* %x61008000.i995, align 8
  %1123 = load i64, i64* %x03B7856B.i996, align 8
  %xor45.i1054 = xor i64 %1122, %1123
  store i64 %xor45.i1054, i64* %x62B7056B.i997, align 8
  %1124 = load i64, i64* %x62B7056B.i997, align 8
  %1125 = load i64, i64* %a6.addr.i960, align 8
  %or46.i1055 = or i64 %1124, %1125
  store i64 %or46.i1055, i64* %x00.i998, align 8
  %1126 = load i64, i64* %x00.i998, align 8
  %1127 = load i64, i64* %xC729695A.i985, align 8
  %xor47.i1056 = xor i64 %1126, %1127
  store i64 %xor47.i1056, i64* %x01.i999, align 8
  %1128 = load i64*, i64** %out1.addr.i961, align 8
  %1129 = load i64, i64* %1128, align 8
  %1130 = load i64, i64* %x01.i999, align 8
  %xor48.i1057 = xor i64 %1129, %1130
  %1131 = load i64*, i64** %out1.addr.i961, align 8
  store i64 %xor48.i1057, i64* %1131, align 8
  %1132 = load i32, i32* %rounds_and_swapped, align 4
  %cmp = icmp eq i32 %1132, 256
  br i1 %cmp, label %if.then191, label %if.end192

if.then191:                                       ; preds = %start
  br label %next

if.end192:                                        ; preds = %start
  br label %swap

swap:                                             ; preds = %if.then391, %if.end192
  %1133 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 48), align 8
  %arrayidx193 = getelementptr inbounds i64, i64* %1133, i64 0
  %1134 = load i64, i64* %arrayidx193, align 8
  %1135 = load i64**, i64*** %k, align 8
  %arrayidx194 = getelementptr inbounds i64*, i64** %1135, i64 48
  %1136 = load i64*, i64** %arrayidx194, align 8
  %arrayidx195 = getelementptr inbounds i64, i64* %1136, i64 0
  %1137 = load i64, i64* %arrayidx195, align 8
  %xor196 = xor i64 %1134, %1137
  %1138 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 49), align 8
  %arrayidx197 = getelementptr inbounds i64, i64* %1138, i64 0
  %1139 = load i64, i64* %arrayidx197, align 8
  %1140 = load i64**, i64*** %k, align 8
  %arrayidx198 = getelementptr inbounds i64*, i64** %1140, i64 49
  %1141 = load i64*, i64** %arrayidx198, align 8
  %arrayidx199 = getelementptr inbounds i64, i64* %1141, i64 0
  %1142 = load i64, i64* %arrayidx199, align 8
  %xor200 = xor i64 %1139, %1142
  %1143 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 50), align 8
  %arrayidx201 = getelementptr inbounds i64, i64* %1143, i64 0
  %1144 = load i64, i64* %arrayidx201, align 8
  %1145 = load i64**, i64*** %k, align 8
  %arrayidx202 = getelementptr inbounds i64*, i64** %1145, i64 50
  %1146 = load i64*, i64** %arrayidx202, align 8
  %arrayidx203 = getelementptr inbounds i64, i64* %1146, i64 0
  %1147 = load i64, i64* %arrayidx203, align 8
  %xor204 = xor i64 %1144, %1147
  %1148 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 51), align 8
  %arrayidx205 = getelementptr inbounds i64, i64* %1148, i64 0
  %1149 = load i64, i64* %arrayidx205, align 8
  %1150 = load i64**, i64*** %k, align 8
  %arrayidx206 = getelementptr inbounds i64*, i64** %1150, i64 51
  %1151 = load i64*, i64** %arrayidx206, align 8
  %arrayidx207 = getelementptr inbounds i64, i64* %1151, i64 0
  %1152 = load i64, i64* %arrayidx207, align 8
  %xor208 = xor i64 %1149, %1152
  %1153 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 52), align 8
  %arrayidx209 = getelementptr inbounds i64, i64* %1153, i64 0
  %1154 = load i64, i64* %arrayidx209, align 8
  %1155 = load i64**, i64*** %k, align 8
  %arrayidx210 = getelementptr inbounds i64*, i64** %1155, i64 52
  %1156 = load i64*, i64** %arrayidx210, align 8
  %arrayidx211 = getelementptr inbounds i64, i64* %1156, i64 0
  %1157 = load i64, i64* %arrayidx211, align 8
  %xor212 = xor i64 %1154, %1157
  %1158 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 53), align 8
  %arrayidx213 = getelementptr inbounds i64, i64* %1158, i64 0
  %1159 = load i64, i64* %arrayidx213, align 8
  %1160 = load i64**, i64*** %k, align 8
  %arrayidx214 = getelementptr inbounds i64*, i64** %1160, i64 53
  %1161 = load i64*, i64** %arrayidx214, align 8
  %arrayidx215 = getelementptr inbounds i64, i64* %1161, i64 0
  %1162 = load i64, i64* %arrayidx215, align 8
  %xor216 = xor i64 %1159, %1162
  store i64 %xor196, i64* %a1.addr.i832, align 8
  store i64 %xor200, i64* %a2.addr.i833, align 8
  store i64 %xor204, i64* %a3.addr.i834, align 8
  store i64 %xor208, i64* %a4.addr.i835, align 8
  store i64 %xor212, i64* %a5.addr.i836, align 8
  store i64 %xor216, i64* %a6.addr.i837, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 8), i64** %out1.addr.i838, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 16), i64** %out2.addr.i839, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 22), i64** %out3.addr.i840, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 30), i64** %out4.addr.i841, align 8
  %1163 = load i64, i64* %a1.addr.i832, align 8
  %1164 = load i64, i64* %a5.addr.i836, align 8
  %neg.i891 = xor i64 %1164, -1
  %and.i892 = and i64 %1163, %neg.i891
  store i64 %and.i892, i64* %x55005500.i842, align 8
  %1165 = load i64, i64* %a4.addr.i835, align 8
  %1166 = load i64, i64* %x55005500.i842, align 8
  %xor.i893 = xor i64 %1165, %1166
  store i64 %xor.i893, i64* %x5A0F5A0F.i843, align 8
  %1167 = load i64, i64* %a3.addr.i834, align 8
  %1168 = load i64, i64* %a6.addr.i837, align 8
  %or.i894 = or i64 %1167, %1168
  store i64 %or.i894, i64* %x3333FFFF.i844, align 8
  %1169 = load i64, i64* %a1.addr.i832, align 8
  %1170 = load i64, i64* %a3.addr.i834, align 8
  %xor1.i895 = xor i64 %1169, %1170
  store i64 %xor1.i895, i64* %x66666666.i845, align 8
  %1171 = load i64, i64* %x3333FFFF.i844, align 8
  %1172 = load i64, i64* %x66666666.i845, align 8
  %and2.i896 = and i64 %1171, %1172
  store i64 %and2.i896, i64* %x22226666.i846, align 8
  %1173 = load i64, i64* %a4.addr.i835, align 8
  %1174 = load i64, i64* %x22226666.i846, align 8
  %xor3.i897 = xor i64 %1173, %1174
  store i64 %xor3.i897, i64* %x2D2D6969.i847, align 8
  %1175 = load i64, i64* %x2D2D6969.i847, align 8
  %1176 = load i64, i64* %x5A0F5A0F.i843, align 8
  %neg4.i898 = xor i64 %1176, -1
  %and5.i899 = and i64 %1175, %neg4.i898
  store i64 %and5.i899, i64* %x25202160.i848, align 8
  %1177 = load i64, i64* %a5.addr.i836, align 8
  %1178 = load i64, i64* %a6.addr.i837, align 8
  %xor6.i900 = xor i64 %1177, %1178
  store i64 %xor6.i900, i64* %x00FFFF00.i849, align 8
  %1179 = load i64, i64* %a3.addr.i834, align 8
  %1180 = load i64, i64* %x00FFFF00.i849, align 8
  %xor7.i901 = xor i64 %1179, %1180
  store i64 %xor7.i901, i64* %x33CCCC33.i850, align 8
  %1181 = load i64, i64* %x5A0F5A0F.i843, align 8
  %1182 = load i64, i64* %x33CCCC33.i850, align 8
  %neg8.i902 = xor i64 %1182, -1
  %and9.i903 = and i64 %1181, %neg8.i902
  store i64 %and9.i903, i64* %x4803120C.i851, align 8
  %1183 = load i64, i64* %a6.addr.i837, align 8
  %1184 = load i64, i64* %x22226666.i846, align 8
  %or10.i904 = or i64 %1183, %1184
  store i64 %or10.i904, i64* %x2222FFFF.i852, align 8
  %1185 = load i64, i64* %x4803120C.i851, align 8
  %1186 = load i64, i64* %x2222FFFF.i852, align 8
  %xor11.i905 = xor i64 %1185, %1186
  store i64 %xor11.i905, i64* %x6A21EDF3.i853, align 8
  %1187 = load i64, i64* %x6A21EDF3.i853, align 8
  %1188 = load i64, i64* %x25202160.i848, align 8
  %neg12.i906 = xor i64 %1188, -1
  %and13.i907 = and i64 %1187, %neg12.i906
  store i64 %and13.i907, i64* %x4A01CC93.i854, align 8
  %1189 = load i64, i64* %a1.addr.i832, align 8
  %1190 = load i64, i64* %a6.addr.i837, align 8
  %or14.i908 = or i64 %1189, %1190
  store i64 %or14.i908, i64* %x5555FFFF.i855, align 8
  %1191 = load i64, i64* %x6A21EDF3.i853, align 8
  %1192 = load i64, i64* %x5555FFFF.i855, align 8
  %or15.i909 = or i64 %1191, %1192
  store i64 %or15.i909, i64* %x7F75FFFF.i856, align 8
  %1193 = load i64, i64* %a5.addr.i836, align 8
  %1194 = load i64, i64* %x2D2D6969.i847, align 8
  %neg16.i910 = xor i64 %1194, -1
  %and17.i911 = and i64 %1193, %neg16.i910
  store i64 %and17.i911, i64* %x00D20096.i857, align 8
  %1195 = load i64, i64* %x7F75FFFF.i856, align 8
  %1196 = load i64, i64* %x00D20096.i857, align 8
  %xor18.i912 = xor i64 %1195, %1196
  store i64 %xor18.i912, i64* %x7FA7FF69.i858, align 8
  %1197 = load i64, i64* %a4.addr.i835, align 8
  %1198 = load i64, i64* %x5555FFFF.i855, align 8
  %neg19.i913 = xor i64 %1198, -1
  %and20.i914 = and i64 %1197, %neg19.i913
  store i64 %and20.i914, i64* %x0A0A0000.i859, align 8
  %1199 = load i64, i64* %x00D20096.i857, align 8
  %1200 = load i64, i64* %x0A0A0000.i859, align 8
  %xor21.i915 = xor i64 %1199, %1200
  store i64 %xor21.i915, i64* %x0AD80096.i860, align 8
  %1201 = load i64, i64* %x00FFFF00.i849, align 8
  %1202 = load i64, i64* %x66666666.i845, align 8
  %neg22.i916 = xor i64 %1202, -1
  %and23.i917 = and i64 %1201, %neg22.i916
  store i64 %and23.i917, i64* %x00999900.i861, align 8
  %1203 = load i64, i64* %x0AD80096.i860, align 8
  %1204 = load i64, i64* %x00999900.i861, align 8
  %or24.i918 = or i64 %1203, %1204
  store i64 %or24.i918, i64* %x0AD99996.i862, align 8
  %1205 = load i64, i64* %a3.addr.i834, align 8
  %1206 = load i64, i64* %x55005500.i842, align 8
  %neg25.i919 = xor i64 %1206, -1
  %and26.i920 = and i64 %1205, %neg25.i919
  store i64 %and26.i920, i64* %x22332233.i863, align 8
  %1207 = load i64, i64* %x5A0F5A0F.i843, align 8
  %1208 = load i64, i64* %x7F75FFFF.i856, align 8
  %xor27.i921 = xor i64 %1207, %1208
  store i64 %xor27.i921, i64* %x257AA5F0.i864, align 8
  %1209 = load i64, i64* %x257AA5F0.i864, align 8
  %1210 = load i64, i64* %x22332233.i863, align 8
  %neg28.i922 = xor i64 %1210, -1
  %and29.i923 = and i64 %1209, %neg28.i922
  store i64 %and29.i923, i64* %x054885C0.i865, align 8
  %1211 = load i64, i64* %x054885C0.i865, align 8
  %neg30.i924 = xor i64 %1211, -1
  store i64 %neg30.i924, i64* %xFAB77A3F.i866, align 8
  %1212 = load i64, i64* %x3333FFFF.i844, align 8
  %1213 = load i64, i64* %x6A21EDF3.i853, align 8
  %and31.i925 = and i64 %1212, %1213
  store i64 %and31.i925, i64* %x2221EDF3.i867, align 8
  %1214 = load i64, i64* %xFAB77A3F.i866, align 8
  %1215 = load i64, i64* %x2221EDF3.i867, align 8
  %xor32.i926 = xor i64 %1214, %1215
  store i64 %xor32.i926, i64* %xD89697CC.i868, align 8
  %1216 = load i64, i64* %x7FA7FF69.i858, align 8
  %1217 = load i64, i64* %a2.addr.i833, align 8
  %neg33.i927 = xor i64 %1217, -1
  %and34.i928 = and i64 %1216, %neg33.i927
  store i64 %and34.i928, i64* %x20.i887, align 8
  %1218 = load i64, i64* %x20.i887, align 8
  %1219 = load i64, i64* %xD89697CC.i868, align 8
  %xor35.i929 = xor i64 %1218, %1219
  store i64 %xor35.i929, i64* %x21.i888, align 8
  %1220 = load i64*, i64** %out3.addr.i840, align 8
  %1221 = load i64, i64* %1220, align 8
  %1222 = load i64, i64* %x21.i888, align 8
  %xor36.i930 = xor i64 %1221, %1222
  %1223 = load i64*, i64** %out3.addr.i840, align 8
  store i64 %xor36.i930, i64* %1223, align 8
  %1224 = load i64, i64* %x00FFFF00.i849, align 8
  %1225 = load i64, i64* %x054885C0.i865, align 8
  %xor37.i931 = xor i64 %1224, %1225
  store i64 %xor37.i931, i64* %x05B77AC0.i869, align 8
  %1226 = load i64, i64* %x00D20096.i857, align 8
  %1227 = load i64, i64* %x05B77AC0.i869, align 8
  %or38.i932 = or i64 %1226, %1227
  store i64 %or38.i932, i64* %x05F77AD6.i870, align 8
  %1228 = load i64, i64* %x3333FFFF.i844, align 8
  %1229 = load i64, i64* %x05F77AD6.i870, align 8
  %xor39.i933 = xor i64 %1228, %1229
  store i64 %xor39.i933, i64* %x36C48529.i871, align 8
  %1230 = load i64, i64* %a1.addr.i832, align 8
  %1231 = load i64, i64* %x36C48529.i871, align 8
  %xor40.i934 = xor i64 %1230, %1231
  store i64 %xor40.i934, i64* %x6391D07C.i872, align 8
  %1232 = load i64, i64* %xD89697CC.i868, align 8
  %1233 = load i64, i64* %x6391D07C.i872, align 8
  %xor41.i935 = xor i64 %1232, %1233
  store i64 %xor41.i935, i64* %xBB0747B0.i873, align 8
  %1234 = load i64, i64* %x25202160.i848, align 8
  %1235 = load i64, i64* %a2.addr.i833, align 8
  %or42.i936 = or i64 %1234, %1235
  store i64 %or42.i936, i64* %x00.i883, align 8
  %1236 = load i64, i64* %x00.i883, align 8
  %1237 = load i64, i64* %xBB0747B0.i873, align 8
  %xor43.i937 = xor i64 %1236, %1237
  store i64 %xor43.i937, i64* %x01.i884, align 8
  %1238 = load i64*, i64** %out1.addr.i838, align 8
  %1239 = load i64, i64* %1238, align 8
  %1240 = load i64, i64* %x01.i884, align 8
  %xor44.i938 = xor i64 %1239, %1240
  %1241 = load i64*, i64** %out1.addr.i838, align 8
  store i64 %xor44.i938, i64* %1241, align 8
  %1242 = load i64, i64* %x3333FFFF.i844, align 8
  %1243 = load i64, i64* %x7F75FFFF.i856, align 8
  %xor45.i939 = xor i64 %1242, %1243
  store i64 %xor45.i939, i64* %x4C460000.i874, align 8
  %1244 = load i64, i64* %x0AD99996.i862, align 8
  %1245 = load i64, i64* %x4C460000.i874, align 8
  %or46.i940 = or i64 %1244, %1245
  store i64 %or46.i940, i64* %x4EDF9996.i875, align 8
  %1246 = load i64, i64* %x6391D07C.i872, align 8
  %1247 = load i64, i64* %x4EDF9996.i875, align 8
  %xor47.i941 = xor i64 %1246, %1247
  store i64 %xor47.i941, i64* %x2D4E49EA.i876, align 8
  %1248 = load i64, i64* %x00FFFF00.i849, align 8
  %1249 = load i64, i64* %xBB0747B0.i873, align 8
  %or48.i942 = or i64 %1248, %1249
  store i64 %or48.i942, i64* %xBBFFFFB0.i877, align 8
  %1250 = load i64, i64* %x2D4E49EA.i876, align 8
  %1251 = load i64, i64* %xBBFFFFB0.i877, align 8
  %xor49.i943 = xor i64 %1250, %1251
  store i64 %xor49.i943, i64* %x96B1B65A.i878, align 8
  %1252 = load i64, i64* %x4A01CC93.i854, align 8
  %1253 = load i64, i64* %a2.addr.i833, align 8
  %or50.i944 = or i64 %1252, %1253
  store i64 %or50.i944, i64* %x10.i885, align 8
  %1254 = load i64, i64* %x10.i885, align 8
  %1255 = load i64, i64* %x96B1B65A.i878, align 8
  %xor51.i945 = xor i64 %1254, %1255
  store i64 %xor51.i945, i64* %x11.i886, align 8
  %1256 = load i64*, i64** %out2.addr.i839, align 8
  %1257 = load i64, i64* %1256, align 8
  %1258 = load i64, i64* %x11.i886, align 8
  %xor52.i946 = xor i64 %1257, %1258
  %1259 = load i64*, i64** %out2.addr.i839, align 8
  store i64 %xor52.i946, i64* %1259, align 8
  %1260 = load i64, i64* %a5.addr.i836, align 8
  %1261 = load i64, i64* %x5A0F5A0F.i843, align 8
  %or53.i947 = or i64 %1260, %1261
  store i64 %or53.i947, i64* %x5AFF5AFF.i879, align 8
  %1262 = load i64, i64* %x5AFF5AFF.i879, align 8
  %1263 = load i64, i64* %x2D4E49EA.i876, align 8
  %neg54.i948 = xor i64 %1263, -1
  %and55.i949 = and i64 %1262, %neg54.i948
  store i64 %and55.i949, i64* %x52B11215.i880, align 8
  %1264 = load i64, i64* %x4A01CC93.i854, align 8
  %1265 = load i64, i64* %x6391D07C.i872, align 8
  %and56.i950 = and i64 %1264, %1265
  store i64 %and56.i950, i64* %x4201C010.i881, align 8
  %1266 = load i64, i64* %x52B11215.i880, align 8
  %1267 = load i64, i64* %x4201C010.i881, align 8
  %xor57.i951 = xor i64 %1266, %1267
  store i64 %xor57.i951, i64* %x10B0D205.i882, align 8
  %1268 = load i64, i64* %x10B0D205.i882, align 8
  %1269 = load i64, i64* %a2.addr.i833, align 8
  %or58.i952 = or i64 %1268, %1269
  store i64 %or58.i952, i64* %x30.i889, align 8
  %1270 = load i64, i64* %x30.i889, align 8
  %1271 = load i64, i64* %x0AD99996.i862, align 8
  %xor59.i953 = xor i64 %1270, %1271
  store i64 %xor59.i953, i64* %x31.i890, align 8
  %1272 = load i64*, i64** %out4.addr.i841, align 8
  %1273 = load i64, i64* %1272, align 8
  %1274 = load i64, i64* %x31.i890, align 8
  %xor60.i954 = xor i64 %1273, %1274
  %1275 = load i64*, i64** %out4.addr.i841, align 8
  store i64 %xor60.i954, i64* %1275, align 8
  %1276 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 54), align 8
  %arrayidx217 = getelementptr inbounds i64, i64* %1276, i64 0
  %1277 = load i64, i64* %arrayidx217, align 8
  %1278 = load i64**, i64*** %k, align 8
  %arrayidx218 = getelementptr inbounds i64*, i64** %1278, i64 54
  %1279 = load i64*, i64** %arrayidx218, align 8
  %arrayidx219 = getelementptr inbounds i64, i64* %1279, i64 0
  %1280 = load i64, i64* %arrayidx219, align 8
  %xor220 = xor i64 %1277, %1280
  %1281 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 55), align 8
  %arrayidx221 = getelementptr inbounds i64, i64* %1281, i64 0
  %1282 = load i64, i64* %arrayidx221, align 8
  %1283 = load i64**, i64*** %k, align 8
  %arrayidx222 = getelementptr inbounds i64*, i64** %1283, i64 55
  %1284 = load i64*, i64** %arrayidx222, align 8
  %arrayidx223 = getelementptr inbounds i64, i64* %1284, i64 0
  %1285 = load i64, i64* %arrayidx223, align 8
  %xor224 = xor i64 %1282, %1285
  %1286 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 56), align 8
  %arrayidx225 = getelementptr inbounds i64, i64* %1286, i64 0
  %1287 = load i64, i64* %arrayidx225, align 8
  %1288 = load i64**, i64*** %k, align 8
  %arrayidx226 = getelementptr inbounds i64*, i64** %1288, i64 56
  %1289 = load i64*, i64** %arrayidx226, align 8
  %arrayidx227 = getelementptr inbounds i64, i64* %1289, i64 0
  %1290 = load i64, i64* %arrayidx227, align 8
  %xor228 = xor i64 %1287, %1290
  %1291 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 57), align 8
  %arrayidx229 = getelementptr inbounds i64, i64* %1291, i64 0
  %1292 = load i64, i64* %arrayidx229, align 8
  %1293 = load i64**, i64*** %k, align 8
  %arrayidx230 = getelementptr inbounds i64*, i64** %1293, i64 57
  %1294 = load i64*, i64** %arrayidx230, align 8
  %arrayidx231 = getelementptr inbounds i64, i64* %1294, i64 0
  %1295 = load i64, i64* %arrayidx231, align 8
  %xor232 = xor i64 %1292, %1295
  %1296 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 58), align 8
  %arrayidx233 = getelementptr inbounds i64, i64* %1296, i64 0
  %1297 = load i64, i64* %arrayidx233, align 8
  %1298 = load i64**, i64*** %k, align 8
  %arrayidx234 = getelementptr inbounds i64*, i64** %1298, i64 58
  %1299 = load i64*, i64** %arrayidx234, align 8
  %arrayidx235 = getelementptr inbounds i64, i64* %1299, i64 0
  %1300 = load i64, i64* %arrayidx235, align 8
  %xor236 = xor i64 %1297, %1300
  %1301 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 59), align 8
  %arrayidx237 = getelementptr inbounds i64, i64* %1301, i64 0
  %1302 = load i64, i64* %arrayidx237, align 8
  %1303 = load i64**, i64*** %k, align 8
  %arrayidx238 = getelementptr inbounds i64*, i64** %1303, i64 59
  %1304 = load i64*, i64** %arrayidx238, align 8
  %arrayidx239 = getelementptr inbounds i64, i64* %1304, i64 0
  %1305 = load i64, i64* %arrayidx239, align 8
  %xor240 = xor i64 %1302, %1305
  store i64 %xor220, i64* %a1.addr.i756, align 8
  store i64 %xor224, i64* %a2.addr.i757, align 8
  store i64 %xor228, i64* %a3.addr.i758, align 8
  store i64 %xor232, i64* %a4.addr.i759, align 8
  store i64 %xor236, i64* %a5.addr.i760, align 8
  store i64 %xor240, i64* %a6.addr.i761, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 12), i64** %out1.addr.i762, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 27), i64** %out2.addr.i763, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 1), i64** %out3.addr.i764, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 17), i64** %out4.addr.i765, align 8
  %1306 = load i64, i64* %a2.addr.i757, align 8
  %1307 = load i64, i64* %a5.addr.i760, align 8
  %xor.i776 = xor i64 %1306, %1307
  store i64 %xor.i776, i64* %x33CC33CC.i766, align 8
  %1308 = load i64, i64* %a1.addr.i756, align 8
  %1309 = load i64, i64* %a6.addr.i761, align 8
  %neg.i777 = xor i64 %1309, -1
  %and.i778 = and i64 %1308, %neg.i777
  store i64 %and.i778, i64* %x55550000.i, align 8
  %1310 = load i64, i64* %a5.addr.i760, align 8
  %1311 = load i64, i64* %x55550000.i, align 8
  %neg1.i779 = xor i64 %1311, -1
  %and2.i780 = and i64 %1310, %neg1.i779
  store i64 %and2.i780, i64* %x00AA00FF.i, align 8
  %1312 = load i64, i64* %a2.addr.i757, align 8
  %1313 = load i64, i64* %x00AA00FF.i, align 8
  %or.i781 = or i64 %1312, %1313
  store i64 %or.i781, i64* %x33BB33FF.i, align 8
  %1314 = load i64, i64* %x33CC33CC.i766, align 8
  %1315 = load i64, i64* %a6.addr.i761, align 8
  %neg3.i782 = xor i64 %1315, -1
  %and4.i783 = and i64 %1314, %neg3.i782
  store i64 %and4.i783, i64* %x33CC0000.i, align 8
  %1316 = load i64, i64* %a1.addr.i756, align 8
  %1317 = load i64, i64* %x33CC33CC.i766, align 8
  %and5.i784 = and i64 %1316, %1317
  store i64 %and5.i784, i64* %x11441144.i, align 8
  %1318 = load i64, i64* %a5.addr.i760, align 8
  %1319 = load i64, i64* %x11441144.i, align 8
  %xor6.i785 = xor i64 %1318, %1319
  store i64 %xor6.i785, i64* %x11BB11BB.i, align 8
  %1320 = load i64, i64* %x11BB11BB.i, align 8
  %1321 = load i64, i64* %x33CC0000.i, align 8
  %neg7.i786 = xor i64 %1321, -1
  %and8.i787 = and i64 %1320, %neg7.i786
  store i64 %and8.i787, i64* %x003311BB.i, align 8
  %1322 = load i64, i64* %a3.addr.i758, align 8
  %1323 = load i64, i64* %a6.addr.i761, align 8
  %and9.i788 = and i64 %1322, %1323
  store i64 %and9.i788, i64* %x00000F0F.i, align 8
  %1324 = load i64, i64* %x00AA00FF.i, align 8
  %1325 = load i64, i64* %x33CC0000.i, align 8
  %xor10.i789 = xor i64 %1324, %1325
  store i64 %xor10.i789, i64* %x336600FF.i, align 8
  %1326 = load i64, i64* %x33BB33FF.i, align 8
  %1327 = load i64, i64* %x336600FF.i, align 8
  %and11.i790 = and i64 %1326, %1327
  store i64 %and11.i790, i64* %x332200FF.i, align 8
  %1328 = load i64, i64* %x332200FF.i, align 8
  %1329 = load i64, i64* %x00000F0F.i, align 8
  %neg12.i791 = xor i64 %1329, -1
  %and13.i792 = and i64 %1328, %neg12.i791
  store i64 %and13.i792, i64* %x332200F0.i, align 8
  %1330 = load i64, i64* %a3.addr.i758, align 8
  %1331 = load i64, i64* %x332200FF.i, align 8
  %and14.i793 = and i64 %1330, %1331
  store i64 %and14.i793, i64* %x0302000F.i, align 8
  %1332 = load i64, i64* %a1.addr.i756, align 8
  %neg15.i794 = xor i64 %1332, -1
  store i64 %neg15.i794, i64* %xAAAAAAAA.i, align 8
  %1333 = load i64, i64* %x0302000F.i, align 8
  %1334 = load i64, i64* %xAAAAAAAA.i, align 8
  %xor16.i795 = xor i64 %1333, %1334
  store i64 %xor16.i795, i64* %xA9A8AAA5.i, align 8
  %1335 = load i64, i64* %a6.addr.i761, align 8
  %1336 = load i64, i64* %x33CC33CC.i766, align 8
  %xor17.i796 = xor i64 %1335, %1336
  store i64 %xor17.i796, i64* %x33CCCC33.i767, align 8
  %1337 = load i64, i64* %x33CCCC33.i767, align 8
  %1338 = load i64, i64* %x00000F0F.i, align 8
  %neg18.i797 = xor i64 %1338, -1
  %and19.i798 = and i64 %1337, %neg18.i797
  store i64 %and19.i798, i64* %x33CCC030.i, align 8
  %1339 = load i64, i64* %xA9A8AAA5.i, align 8
  %1340 = load i64, i64* %x33CCC030.i, align 8
  %xor20.i799 = xor i64 %1339, %1340
  store i64 %xor20.i799, i64* %x9A646A95.i, align 8
  %1341 = load i64, i64* %a4.addr.i759, align 8
  %1342 = load i64, i64* %x332200F0.i, align 8
  %neg21.i800 = xor i64 %1342, -1
  %and22.i801 = and i64 %1341, %neg21.i800
  store i64 %and22.i801, i64* %x10.i770, align 8
  %1343 = load i64, i64* %x10.i770, align 8
  %1344 = load i64, i64* %x9A646A95.i, align 8
  %xor23.i802 = xor i64 %1343, %1344
  store i64 %xor23.i802, i64* %x11.i771, align 8
  %1345 = load i64*, i64** %out2.addr.i763, align 8
  %1346 = load i64, i64* %1345, align 8
  %1347 = load i64, i64* %x11.i771, align 8
  %xor24.i803 = xor i64 %1346, %1347
  %1348 = load i64*, i64** %out2.addr.i763, align 8
  store i64 %xor24.i803, i64* %1348, align 8
  %1349 = load i64, i64* %a2.addr.i757, align 8
  %1350 = load i64, i64* %x33CCC030.i, align 8
  %neg25.i804 = xor i64 %1350, -1
  %and26.i805 = and i64 %1349, %neg25.i804
  store i64 %and26.i805, i64* %x00333303.i, align 8
  %1351 = load i64, i64* %x11BB11BB.i, align 8
  %1352 = load i64, i64* %x00333303.i, align 8
  %xor27.i806 = xor i64 %1351, %1352
  store i64 %xor27.i806, i64* %x118822B8.i, align 8
  %1353 = load i64, i64* %xA9A8AAA5.i, align 8
  %1354 = load i64, i64* %x118822B8.i, align 8
  %neg28.i807 = xor i64 %1354, -1
  %and29.i808 = and i64 %1353, %neg28.i807
  store i64 %and29.i808, i64* %xA8208805.i, align 8
  %1355 = load i64, i64* %a3.addr.i758, align 8
  %1356 = load i64, i64* %x33CCCC33.i767, align 8
  %xor30.i809 = xor i64 %1355, %1356
  store i64 %xor30.i809, i64* %x3CC3C33C.i, align 8
  %1357 = load i64, i64* %xA8208805.i, align 8
  %1358 = load i64, i64* %x3CC3C33C.i, align 8
  %xor31.i810 = xor i64 %1357, %1358
  store i64 %xor31.i810, i64* %x94E34B39.i, align 8
  %1359 = load i64, i64* %x33BB33FF.i, align 8
  %1360 = load i64, i64* %a4.addr.i759, align 8
  %neg32.i811 = xor i64 %1360, -1
  %and33.i812 = and i64 %1359, %neg32.i811
  store i64 %and33.i812, i64* %x00.i768, align 8
  %1361 = load i64, i64* %x00.i768, align 8
  %1362 = load i64, i64* %x94E34B39.i, align 8
  %xor34.i813 = xor i64 %1361, %1362
  store i64 %xor34.i813, i64* %x01.i769, align 8
  %1363 = load i64*, i64** %out1.addr.i762, align 8
  %1364 = load i64, i64* %1363, align 8
  %1365 = load i64, i64* %x01.i769, align 8
  %xor35.i814 = xor i64 %1364, %1365
  %1366 = load i64*, i64** %out1.addr.i762, align 8
  store i64 %xor35.i814, i64* %1366, align 8
  %1367 = load i64, i64* %x0302000F.i, align 8
  %1368 = load i64, i64* %x00333303.i, align 8
  %xor36.i815 = xor i64 %1367, %1368
  store i64 %xor36.i815, i64* %x0331330C.i, align 8
  %1369 = load i64, i64* %x3CC3C33C.i, align 8
  %1370 = load i64, i64* %x0331330C.i, align 8
  %or37.i816 = or i64 %1369, %1370
  store i64 %or37.i816, i64* %x3FF3F33C.i, align 8
  %1371 = load i64, i64* %x33BB33FF.i, align 8
  %1372 = load i64, i64* %x9A646A95.i, align 8
  %xor38.i817 = xor i64 %1371, %1372
  store i64 %xor38.i817, i64* %xA9DF596A.i, align 8
  %1373 = load i64, i64* %x00000F0F.i, align 8
  %1374 = load i64, i64* %xA9DF596A.i, align 8
  %or39.i818 = or i64 %1373, %1374
  store i64 %or39.i818, i64* %xA9DF5F6F.i, align 8
  %1375 = load i64, i64* %x3FF3F33C.i, align 8
  %1376 = load i64, i64* %xA9DF5F6F.i, align 8
  %xor40.i819 = xor i64 %1375, %1376
  store i64 %xor40.i819, i64* %x962CAC53.i, align 8
  %1377 = load i64, i64* %x94E34B39.i, align 8
  %1378 = load i64, i64* %x0331330C.i, align 8
  %xor41.i820 = xor i64 %1377, %1378
  store i64 %xor41.i820, i64* %x97D27835.i, align 8
  %1379 = load i64, i64* %xA9DF5F6F.i, align 8
  %1380 = load i64, i64* %x97D27835.i, align 8
  %and42.i821 = and i64 %1379, %1380
  store i64 %and42.i821, i64* %x81D25825.i, align 8
  %1381 = load i64, i64* %a5.addr.i760, align 8
  %1382 = load i64, i64* %x81D25825.i, align 8
  %xor43.i822 = xor i64 %1381, %1382
  store i64 %xor43.i822, i64* %x812D58DA.i, align 8
  %1383 = load i64, i64* %x812D58DA.i, align 8
  %1384 = load i64, i64* %x33CC0000.i, align 8
  %neg44.i = xor i64 %1384, -1
  %and45.i823 = and i64 %1383, %neg44.i
  store i64 %and45.i823, i64* %x802158DA.i, align 8
  %1385 = load i64, i64* %x9A646A95.i, align 8
  %1386 = load i64, i64* %x802158DA.i, align 8
  %xor46.i824 = xor i64 %1385, %1386
  store i64 %xor46.i824, i64* %x1A45324F.i, align 8
  %1387 = load i64, i64* %x1A45324F.i, align 8
  %1388 = load i64, i64* %a4.addr.i759, align 8
  %or47.i825 = or i64 %1387, %1388
  store i64 %or47.i825, i64* %x20.i772, align 8
  %1389 = load i64, i64* %x20.i772, align 8
  %1390 = load i64, i64* %x962CAC53.i, align 8
  %xor48.i826 = xor i64 %1389, %1390
  store i64 %xor48.i826, i64* %x21.i773, align 8
  %1391 = load i64*, i64** %out3.addr.i764, align 8
  %1392 = load i64, i64* %1391, align 8
  %1393 = load i64, i64* %x21.i773, align 8
  %xor49.i827 = xor i64 %1392, %1393
  %1394 = load i64*, i64** %out3.addr.i764, align 8
  store i64 %xor49.i827, i64* %1394, align 8
  %1395 = load i64, i64* %x1A45324F.i, align 8
  %1396 = load i64, i64* %x118822B8.i, align 8
  %neg50.i828 = xor i64 %1396, -1
  %and51.i829 = and i64 %1395, %neg50.i828
  store i64 %and51.i829, i64* %x0A451047.i, align 8
  %1397 = load i64, i64* %x33CCCC33.i767, align 8
  %1398 = load i64, i64* %xA9DF596A.i, align 8
  %or52.i = or i64 %1397, %1398
  store i64 %or52.i, i64* %xBBDFDD7B.i, align 8
  %1399 = load i64, i64* %x0A451047.i, align 8
  %1400 = load i64, i64* %xBBDFDD7B.i, align 8
  %xor53.i830 = xor i64 %1399, %1400
  store i64 %xor53.i830, i64* %xB19ACD3C.i, align 8
  %1401 = load i64, i64* %x003311BB.i, align 8
  %1402 = load i64, i64* %a4.addr.i759, align 8
  %or54.i = or i64 %1401, %1402
  store i64 %or54.i, i64* %x30.i774, align 8
  %1403 = load i64, i64* %x30.i774, align 8
  %1404 = load i64, i64* %xB19ACD3C.i, align 8
  %xor55.i = xor i64 %1403, %1404
  store i64 %xor55.i, i64* %x31.i775, align 8
  %1405 = load i64*, i64** %out4.addr.i765, align 8
  %1406 = load i64, i64* %1405, align 8
  %1407 = load i64, i64* %x31.i775, align 8
  %xor56.i831 = xor i64 %1406, %1407
  %1408 = load i64*, i64** %out4.addr.i765, align 8
  store i64 %xor56.i831, i64* %1408, align 8
  %1409 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 60), align 8
  %arrayidx241 = getelementptr inbounds i64, i64* %1409, i64 0
  %1410 = load i64, i64* %arrayidx241, align 8
  %1411 = load i64**, i64*** %k, align 8
  %arrayidx242 = getelementptr inbounds i64*, i64** %1411, i64 60
  %1412 = load i64*, i64** %arrayidx242, align 8
  %arrayidx243 = getelementptr inbounds i64, i64* %1412, i64 0
  %1413 = load i64, i64* %arrayidx243, align 8
  %xor244 = xor i64 %1410, %1413
  %1414 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 61), align 8
  %arrayidx245 = getelementptr inbounds i64, i64* %1414, i64 0
  %1415 = load i64, i64* %arrayidx245, align 8
  %1416 = load i64**, i64*** %k, align 8
  %arrayidx246 = getelementptr inbounds i64*, i64** %1416, i64 61
  %1417 = load i64*, i64** %arrayidx246, align 8
  %arrayidx247 = getelementptr inbounds i64, i64* %1417, i64 0
  %1418 = load i64, i64* %arrayidx247, align 8
  %xor248 = xor i64 %1415, %1418
  %1419 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 62), align 8
  %arrayidx249 = getelementptr inbounds i64, i64* %1419, i64 0
  %1420 = load i64, i64* %arrayidx249, align 8
  %1421 = load i64**, i64*** %k, align 8
  %arrayidx250 = getelementptr inbounds i64*, i64** %1421, i64 62
  %1422 = load i64*, i64** %arrayidx250, align 8
  %arrayidx251 = getelementptr inbounds i64, i64* %1422, i64 0
  %1423 = load i64, i64* %arrayidx251, align 8
  %xor252 = xor i64 %1420, %1423
  %1424 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 63), align 8
  %arrayidx253 = getelementptr inbounds i64, i64* %1424, i64 0
  %1425 = load i64, i64* %arrayidx253, align 8
  %1426 = load i64**, i64*** %k, align 8
  %arrayidx254 = getelementptr inbounds i64*, i64** %1426, i64 63
  %1427 = load i64*, i64** %arrayidx254, align 8
  %arrayidx255 = getelementptr inbounds i64, i64* %1427, i64 0
  %1428 = load i64, i64* %arrayidx255, align 8
  %xor256 = xor i64 %1425, %1428
  %1429 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 64), align 8
  %arrayidx257 = getelementptr inbounds i64, i64* %1429, i64 0
  %1430 = load i64, i64* %arrayidx257, align 8
  %1431 = load i64**, i64*** %k, align 8
  %arrayidx258 = getelementptr inbounds i64*, i64** %1431, i64 64
  %1432 = load i64*, i64** %arrayidx258, align 8
  %arrayidx259 = getelementptr inbounds i64, i64* %1432, i64 0
  %1433 = load i64, i64* %arrayidx259, align 8
  %xor260 = xor i64 %1430, %1433
  %1434 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 65), align 8
  %arrayidx261 = getelementptr inbounds i64, i64* %1434, i64 0
  %1435 = load i64, i64* %arrayidx261, align 8
  %1436 = load i64**, i64*** %k, align 8
  %arrayidx262 = getelementptr inbounds i64*, i64** %1436, i64 65
  %1437 = load i64*, i64** %arrayidx262, align 8
  %arrayidx263 = getelementptr inbounds i64, i64* %1437, i64 0
  %1438 = load i64, i64* %arrayidx263, align 8
  %xor264 = xor i64 %1435, %1438
  store i64 %xor244, i64* %a1.addr.i688, align 8
  store i64 %xor248, i64* %a2.addr.i689, align 8
  store i64 %xor252, i64* %a3.addr.i690, align 8
  store i64 %xor256, i64* %a4.addr.i691, align 8
  store i64 %xor260, i64* %a5.addr.i692, align 8
  store i64 %xor264, i64* %a6.addr.i693, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 23), i64** %out1.addr.i694, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 15), i64** %out2.addr.i695, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 29), i64** %out3.addr.i696, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 5), i64** %out4.addr.i697, align 8
  %1439 = load i64, i64* %a1.addr.i688, align 8
  %1440 = load i64, i64* %a2.addr.i689, align 8
  %neg.i708 = xor i64 %1440, -1
  %and.i709 = and i64 %1439, %neg.i708
  store i64 %and.i709, i64* %x44444444.i, align 8
  %1441 = load i64, i64* %a3.addr.i690, align 8
  %1442 = load i64, i64* %a6.addr.i693, align 8
  %xor.i710 = xor i64 %1441, %1442
  store i64 %xor.i710, i64* %x0F0FF0F0.i698, align 8
  %1443 = load i64, i64* %x44444444.i, align 8
  %1444 = load i64, i64* %x0F0FF0F0.i698, align 8
  %or.i711 = or i64 %1443, %1444
  store i64 %or.i711, i64* %x4F4FF4F4.i, align 8
  %1445 = load i64, i64* %a4.addr.i691, align 8
  %1446 = load i64, i64* %a6.addr.i693, align 8
  %xor1.i712 = xor i64 %1445, %1446
  store i64 %xor1.i712, i64* %x00FFFF00.i699, align 8
  %1447 = load i64, i64* %x00FFFF00.i699, align 8
  %1448 = load i64, i64* %a1.addr.i688, align 8
  %neg2.i = xor i64 %1448, -1
  %and3.i713 = and i64 %1447, %neg2.i
  store i64 %and3.i713, i64* %x00AAAA00.i, align 8
  %1449 = load i64, i64* %x4F4FF4F4.i, align 8
  %1450 = load i64, i64* %x00AAAA00.i, align 8
  %xor4.i = xor i64 %1449, %1450
  store i64 %xor4.i, i64* %x4FE55EF4.i, align 8
  %1451 = load i64, i64* %a2.addr.i689, align 8
  %1452 = load i64, i64* %x0F0FF0F0.i698, align 8
  %xor5.i714 = xor i64 %1451, %1452
  store i64 %xor5.i714, i64* %x3C3CC3C3.i, align 8
  %1453 = load i64, i64* %x3C3CC3C3.i, align 8
  %1454 = load i64, i64* %a6.addr.i693, align 8
  %neg6.i715 = xor i64 %1454, -1
  %and7.i716 = and i64 %1453, %neg6.i715
  store i64 %and7.i716, i64* %x3C3C0000.i, align 8
  %1455 = load i64, i64* %x4F4FF4F4.i, align 8
  %1456 = load i64, i64* %x3C3C0000.i, align 8
  %xor8.i717 = xor i64 %1455, %1456
  store i64 %xor8.i717, i64* %x7373F4F4.i, align 8
  %1457 = load i64, i64* %x4FE55EF4.i, align 8
  %1458 = load i64, i64* %x7373F4F4.i, align 8
  %neg9.i = xor i64 %1458, -1
  %and10.i718 = and i64 %1457, %neg9.i
  store i64 %and10.i718, i64* %x0C840A00.i, align 8
  %1459 = load i64, i64* %a6.addr.i693, align 8
  %1460 = load i64, i64* %x4FE55EF4.i, align 8
  %and11.i719 = and i64 %1459, %1460
  store i64 %and11.i719, i64* %x00005EF4.i, align 8
  %1461 = load i64, i64* %a4.addr.i691, align 8
  %1462 = load i64, i64* %x00005EF4.i, align 8
  %or12.i720 = or i64 %1461, %1462
  store i64 %or12.i720, i64* %x00FF5EFF.i, align 8
  %1463 = load i64, i64* %a1.addr.i688, align 8
  %1464 = load i64, i64* %x00FF5EFF.i, align 8
  %and13.i721 = and i64 %1463, %1464
  store i64 %and13.i721, i64* %x00555455.i, align 8
  %1465 = load i64, i64* %x3C3CC3C3.i, align 8
  %1466 = load i64, i64* %x00555455.i, align 8
  %xor14.i722 = xor i64 %1465, %1466
  store i64 %xor14.i722, i64* %x3C699796.i, align 8
  %1467 = load i64, i64* %x4FE55EF4.i, align 8
  %1468 = load i64, i64* %a5.addr.i692, align 8
  %neg15.i723 = xor i64 %1468, -1
  %and16.i724 = and i64 %1467, %neg15.i723
  store i64 %and16.i724, i64* %x30.i706, align 8
  %1469 = load i64, i64* %x30.i706, align 8
  %1470 = load i64, i64* %x3C699796.i, align 8
  %xor17.i725 = xor i64 %1469, %1470
  store i64 %xor17.i725, i64* %x31.i707, align 8
  %1471 = load i64*, i64** %out4.addr.i697, align 8
  %1472 = load i64, i64* %1471, align 8
  %1473 = load i64, i64* %x31.i707, align 8
  %xor18.i726 = xor i64 %1472, %1473
  %1474 = load i64*, i64** %out4.addr.i697, align 8
  store i64 %xor18.i726, i64* %1474, align 8
  %1475 = load i64, i64* %x0F0FF0F0.i698, align 8
  %1476 = load i64, i64* %x00FFFF00.i699, align 8
  %and19.i727 = and i64 %1475, %1476
  store i64 %and19.i727, i64* %x000FF000.i, align 8
  %1477 = load i64, i64* %a1.addr.i688, align 8
  %1478 = load i64, i64* %a4.addr.i691, align 8
  %xor20.i728 = xor i64 %1477, %1478
  store i64 %xor20.i728, i64* %x55AA55AA.i, align 8
  %1479 = load i64, i64* %x7373F4F4.i, align 8
  %1480 = load i64, i64* %x55AA55AA.i, align 8
  %xor21.i729 = xor i64 %1479, %1480
  store i64 %xor21.i729, i64* %x26D9A15E.i, align 8
  %1481 = load i64, i64* %a3.addr.i690, align 8
  %1482 = load i64, i64* %x26D9A15E.i, align 8
  %or22.i = or i64 %1481, %1482
  store i64 %or22.i, i64* %x2FDFAF5F.i, align 8
  %1483 = load i64, i64* %x2FDFAF5F.i, align 8
  %1484 = load i64, i64* %x000FF000.i, align 8
  %neg23.i730 = xor i64 %1484, -1
  %and24.i731 = and i64 %1483, %neg23.i730
  store i64 %and24.i731, i64* %x2FD00F5F.i, align 8
  %1485 = load i64, i64* %x00AAAA00.i, align 8
  %1486 = load i64, i64* %x55AA55AA.i, align 8
  %or25.i = or i64 %1485, %1486
  store i64 %or25.i, i64* %x55AAFFAA.i, align 8
  %1487 = load i64, i64* %x3C699796.i, align 8
  %1488 = load i64, i64* %x55AAFFAA.i, align 8
  %neg26.i = xor i64 %1488, -1
  %and27.i = and i64 %1487, %neg26.i
  store i64 %and27.i, i64* %x28410014.i, align 8
  %1489 = load i64, i64* %a4.addr.i691, align 8
  %1490 = load i64, i64* %a6.addr.i693, align 8
  %and28.i732 = and i64 %1489, %1490
  store i64 %and28.i732, i64* %x000000FF.i, align 8
  %1491 = load i64, i64* %x000000FF.i, align 8
  %1492 = load i64, i64* %a2.addr.i689, align 8
  %neg29.i = xor i64 %1492, -1
  %and30.i = and i64 %1491, %neg29.i
  store i64 %and30.i, i64* %x000000CC.i, align 8
  %1493 = load i64, i64* %x28410014.i, align 8
  %1494 = load i64, i64* %x000000CC.i, align 8
  %xor31.i733 = xor i64 %1493, %1494
  store i64 %xor31.i733, i64* %x284100D8.i, align 8
  %1495 = load i64, i64* %x284100D8.i, align 8
  %1496 = load i64, i64* %a3.addr.i690, align 8
  %neg32.i = xor i64 %1496, -1
  %and33.i = and i64 %1495, %neg32.i
  store i64 %and33.i, i64* %x204000D0.i, align 8
  %1497 = load i64, i64* %x3C3CC3C3.i, align 8
  %1498 = load i64, i64* %x000000FF.i, align 8
  %or34.i734 = or i64 %1497, %1498
  store i64 %or34.i734, i64* %x3C3CC3FF.i, align 8
  %1499 = load i64, i64* %x3C3CC3FF.i, align 8
  %1500 = load i64, i64* %x204000D0.i, align 8
  %neg35.i = xor i64 %1500, -1
  %and36.i735 = and i64 %1499, %neg35.i
  store i64 %and36.i735, i64* %x1C3CC32F.i, align 8
  %1501 = load i64, i64* %a1.addr.i688, align 8
  %1502 = load i64, i64* %x1C3CC32F.i, align 8
  %xor37.i736 = xor i64 %1501, %1502
  store i64 %xor37.i736, i64* %x4969967A.i, align 8
  %1503 = load i64, i64* %x2FD00F5F.i, align 8
  %1504 = load i64, i64* %a5.addr.i692, align 8
  %and38.i737 = and i64 %1503, %1504
  store i64 %and38.i737, i64* %x10.i702, align 8
  %1505 = load i64, i64* %x10.i702, align 8
  %1506 = load i64, i64* %x4969967A.i, align 8
  %xor39.i738 = xor i64 %1505, %1506
  store i64 %xor39.i738, i64* %x11.i703, align 8
  %1507 = load i64*, i64** %out2.addr.i695, align 8
  %1508 = load i64, i64* %1507, align 8
  %1509 = load i64, i64* %x11.i703, align 8
  %xor40.i739 = xor i64 %1508, %1509
  %1510 = load i64*, i64** %out2.addr.i695, align 8
  store i64 %xor40.i739, i64* %1510, align 8
  %1511 = load i64, i64* %x4FE55EF4.i, align 8
  %1512 = load i64, i64* %a2.addr.i689, align 8
  %neg41.i740 = xor i64 %1512, -1
  %and42.i741 = and i64 %1511, %neg41.i740
  store i64 %and42.i741, i64* %x4CC44CC4.i, align 8
  %1513 = load i64, i64* %x4CC44CC4.i, align 8
  %1514 = load i64, i64* %a3.addr.i690, align 8
  %neg43.i = xor i64 %1514, -1
  %and44.i = and i64 %1513, %neg43.i
  store i64 %and44.i, i64* %x40C040C0.i, align 8
  %1515 = load i64, i64* %x3C3CC3C3.i, align 8
  %1516 = load i64, i64* %x55AAFFAA.i, align 8
  %xor45.i742 = xor i64 %1515, %1516
  store i64 %xor45.i742, i64* %x69963C69.i, align 8
  %1517 = load i64, i64* %x69963C69.i, align 8
  %neg46.i = xor i64 %1517, -1
  store i64 %neg46.i, i64* %x9669C396.i, align 8
  %1518 = load i64, i64* %x40C040C0.i, align 8
  %1519 = load i64, i64* %x9669C396.i, align 8
  %xor47.i743 = xor i64 %1518, %1519
  store i64 %xor47.i743, i64* %xD6A98356.i, align 8
  %1520 = load i64, i64* %a5.addr.i692, align 8
  %1521 = load i64, i64* %x0C840A00.i, align 8
  %neg48.i744 = xor i64 %1521, -1
  %and49.i = and i64 %1520, %neg48.i744
  store i64 %and49.i, i64* %x00.i700, align 8
  %1522 = load i64, i64* %x00.i700, align 8
  %1523 = load i64, i64* %xD6A98356.i, align 8
  %xor50.i745 = xor i64 %1522, %1523
  store i64 %xor50.i745, i64* %x01.i701, align 8
  %1524 = load i64*, i64** %out1.addr.i694, align 8
  %1525 = load i64, i64* %1524, align 8
  %1526 = load i64, i64* %x01.i701, align 8
  %xor51.i746 = xor i64 %1525, %1526
  %1527 = load i64*, i64** %out1.addr.i694, align 8
  store i64 %xor51.i746, i64* %1527, align 8
  %1528 = load i64, i64* %a4.addr.i691, align 8
  %1529 = load i64, i64* %x0F0FF0F0.i698, align 8
  %and52.i747 = and i64 %1528, %1529
  store i64 %and52.i747, i64* %x000F00F0.i, align 8
  %1530 = load i64, i64* %x3C3CC3C3.i, align 8
  %1531 = load i64, i64* %xD6A98356.i, align 8
  %or53.i748 = or i64 %1530, %1531
  store i64 %or53.i748, i64* %xFEBDC3D7.i, align 8
  %1532 = load i64, i64* %xFEBDC3D7.i, align 8
  %1533 = load i64, i64* %x000F00F0.i, align 8
  %neg54.i749 = xor i64 %1533, -1
  %and55.i750 = and i64 %1532, %neg54.i749
  store i64 %and55.i750, i64* %xFEB0C307.i, align 8
  %1534 = load i64, i64* %x00AAAA00.i, align 8
  %1535 = load i64, i64* %x4CC44CC4.i, align 8
  %or56.i751 = or i64 %1534, %1535
  store i64 %or56.i751, i64* %x4CEEEEC4.i, align 8
  %1536 = load i64, i64* %xFEB0C307.i, align 8
  %1537 = load i64, i64* %x4CEEEEC4.i, align 8
  %xor57.i752 = xor i64 %1536, %1537
  store i64 %xor57.i752, i64* %xB25E2DC3.i, align 8
  %1538 = load i64, i64* %x284100D8.i, align 8
  %1539 = load i64, i64* %a5.addr.i692, align 8
  %or58.i753 = or i64 %1538, %1539
  store i64 %or58.i753, i64* %x20.i704, align 8
  %1540 = load i64, i64* %x20.i704, align 8
  %1541 = load i64, i64* %xB25E2DC3.i, align 8
  %xor59.i754 = xor i64 %1540, %1541
  store i64 %xor59.i754, i64* %x21.i705, align 8
  %1542 = load i64*, i64** %out3.addr.i696, align 8
  %1543 = load i64, i64* %1542, align 8
  %1544 = load i64, i64* %x21.i705, align 8
  %xor60.i755 = xor i64 %1543, %1544
  %1545 = load i64*, i64** %out3.addr.i696, align 8
  store i64 %xor60.i755, i64* %1545, align 8
  %1546 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 66), align 8
  %arrayidx265 = getelementptr inbounds i64, i64* %1546, i64 0
  %1547 = load i64, i64* %arrayidx265, align 8
  %1548 = load i64**, i64*** %k, align 8
  %arrayidx266 = getelementptr inbounds i64*, i64** %1548, i64 66
  %1549 = load i64*, i64** %arrayidx266, align 8
  %arrayidx267 = getelementptr inbounds i64, i64* %1549, i64 0
  %1550 = load i64, i64* %arrayidx267, align 8
  %xor268 = xor i64 %1547, %1550
  %1551 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 67), align 8
  %arrayidx269 = getelementptr inbounds i64, i64* %1551, i64 0
  %1552 = load i64, i64* %arrayidx269, align 8
  %1553 = load i64**, i64*** %k, align 8
  %arrayidx270 = getelementptr inbounds i64*, i64** %1553, i64 67
  %1554 = load i64*, i64** %arrayidx270, align 8
  %arrayidx271 = getelementptr inbounds i64, i64* %1554, i64 0
  %1555 = load i64, i64* %arrayidx271, align 8
  %xor272 = xor i64 %1552, %1555
  %1556 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 68), align 8
  %arrayidx273 = getelementptr inbounds i64, i64* %1556, i64 0
  %1557 = load i64, i64* %arrayidx273, align 8
  %1558 = load i64**, i64*** %k, align 8
  %arrayidx274 = getelementptr inbounds i64*, i64** %1558, i64 68
  %1559 = load i64*, i64** %arrayidx274, align 8
  %arrayidx275 = getelementptr inbounds i64, i64* %1559, i64 0
  %1560 = load i64, i64* %arrayidx275, align 8
  %xor276 = xor i64 %1557, %1560
  %1561 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 69), align 8
  %arrayidx277 = getelementptr inbounds i64, i64* %1561, i64 0
  %1562 = load i64, i64* %arrayidx277, align 8
  %1563 = load i64**, i64*** %k, align 8
  %arrayidx278 = getelementptr inbounds i64*, i64** %1563, i64 69
  %1564 = load i64*, i64** %arrayidx278, align 8
  %arrayidx279 = getelementptr inbounds i64, i64* %1564, i64 0
  %1565 = load i64, i64* %arrayidx279, align 8
  %xor280 = xor i64 %1562, %1565
  %1566 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 70), align 8
  %arrayidx281 = getelementptr inbounds i64, i64* %1566, i64 0
  %1567 = load i64, i64* %arrayidx281, align 8
  %1568 = load i64**, i64*** %k, align 8
  %arrayidx282 = getelementptr inbounds i64*, i64** %1568, i64 70
  %1569 = load i64*, i64** %arrayidx282, align 8
  %arrayidx283 = getelementptr inbounds i64, i64* %1569, i64 0
  %1570 = load i64, i64* %arrayidx283, align 8
  %xor284 = xor i64 %1567, %1570
  %1571 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 71), align 8
  %arrayidx285 = getelementptr inbounds i64, i64* %1571, i64 0
  %1572 = load i64, i64* %arrayidx285, align 8
  %1573 = load i64**, i64*** %k, align 8
  %arrayidx286 = getelementptr inbounds i64*, i64** %1573, i64 71
  %1574 = load i64*, i64** %arrayidx286, align 8
  %arrayidx287 = getelementptr inbounds i64, i64* %1574, i64 0
  %1575 = load i64, i64* %arrayidx287, align 8
  %xor288 = xor i64 %1572, %1575
  store i64 %xor268, i64* %a1.addr.i629, align 8
  store i64 %xor272, i64* %a2.addr.i630, align 8
  store i64 %xor276, i64* %a3.addr.i631, align 8
  store i64 %xor280, i64* %a4.addr.i632, align 8
  store i64 %xor284, i64* %a5.addr.i633, align 8
  store i64 %xor288, i64* %a6.addr.i634, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 25), i64** %out1.addr.i635, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 19), i64** %out2.addr.i636, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 9), i64** %out3.addr.i637, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 0), i64** %out4.addr.i638, align 8
  %1576 = load i64, i64* %a1.addr.i629, align 8
  %1577 = load i64, i64* %a3.addr.i631, align 8
  %xor.i649 = xor i64 %1576, %1577
  store i64 %xor.i649, i64* %x5A5A5A5A.i639, align 8
  %1578 = load i64, i64* %a3.addr.i631, align 8
  %1579 = load i64, i64* %a5.addr.i633, align 8
  %xor1.i650 = xor i64 %1578, %1579
  store i64 %xor1.i650, i64* %x0F0FF0F0.i, align 8
  %1580 = load i64, i64* %a2.addr.i630, align 8
  %1581 = load i64, i64* %a4.addr.i632, align 8
  %or.i651 = or i64 %1580, %1581
  store i64 %or.i651, i64* %x33FF33FF.i, align 8
  %1582 = load i64, i64* %a5.addr.i633, align 8
  %1583 = load i64, i64* %x33FF33FF.i, align 8
  %xor2.i652 = xor i64 %1582, %1583
  store i64 %xor2.i652, i64* %x33FFCC00.i, align 8
  %1584 = load i64, i64* %x0F0FF0F0.i, align 8
  %1585 = load i64, i64* %x33FFCC00.i, align 8
  %neg.i653 = xor i64 %1585, -1
  %and.i654 = and i64 %1584, %neg.i653
  store i64 %and.i654, i64* %x0C0030F0.i, align 8
  %1586 = load i64, i64* %x0F0FF0F0.i, align 8
  %1587 = load i64, i64* %a2.addr.i630, align 8
  %neg3.i655 = xor i64 %1587, -1
  %and4.i656 = and i64 %1586, %neg3.i655
  store i64 %and4.i656, i64* %x0C0CC0C0.i, align 8
  %1588 = load i64, i64* %a4.addr.i632, align 8
  %1589 = load i64, i64* %x0C0CC0C0.i, align 8
  %xor5.i657 = xor i64 %1588, %1589
  store i64 %xor5.i657, i64* %x0CF3C03F.i, align 8
  %1590 = load i64, i64* %x5A5A5A5A.i639, align 8
  %1591 = load i64, i64* %x0CF3C03F.i, align 8
  %or6.i = or i64 %1590, %1591
  store i64 %or6.i, i64* %x5EFBDA7F.i, align 8
  %1592 = load i64, i64* %x5EFBDA7F.i, align 8
  %1593 = load i64, i64* %x0C0030F0.i, align 8
  %neg7.i = xor i64 %1593, -1
  %and8.i = and i64 %1592, %neg7.i
  store i64 %and8.i, i64* %x52FBCA0F.i, align 8
  %1594 = load i64, i64* %a2.addr.i630, align 8
  %1595 = load i64, i64* %x52FBCA0F.i, align 8
  %xor9.i658 = xor i64 %1594, %1595
  store i64 %xor9.i658, i64* %x61C8F93C.i, align 8
  %1596 = load i64, i64* %x0CF3C03F.i, align 8
  %1597 = load i64, i64* %x61C8F93C.i, align 8
  %and10.i659 = and i64 %1596, %1597
  store i64 %and10.i659, i64* %x00C0C03C.i, align 8
  %1598 = load i64, i64* %x0F0FF0F0.i, align 8
  %1599 = load i64, i64* %x00C0C03C.i, align 8
  %neg11.i = xor i64 %1599, -1
  %and12.i660 = and i64 %1598, %neg11.i
  store i64 %and12.i660, i64* %x0F0F30C0.i, align 8
  %1600 = load i64, i64* %x5A5A5A5A.i639, align 8
  %1601 = load i64, i64* %x61C8F93C.i, align 8
  %xor13.i661 = xor i64 %1600, %1601
  store i64 %xor13.i661, i64* %x3B92A366.i, align 8
  %1602 = load i64, i64* %x3B92A366.i, align 8
  %1603 = load i64, i64* %x0F0F30C0.i, align 8
  %neg14.i = xor i64 %1603, -1
  %and15.i = and i64 %1602, %neg14.i
  store i64 %and15.i, i64* %x30908326.i, align 8
  %1604 = load i64, i64* %x0C0030F0.i, align 8
  %1605 = load i64, i64* %x30908326.i, align 8
  %xor16.i662 = xor i64 %1604, %1605
  store i64 %xor16.i662, i64* %x3C90B3D6.i, align 8
  %1606 = load i64, i64* %a2.addr.i630, align 8
  %1607 = load i64, i64* %a4.addr.i632, align 8
  %xor17.i663 = xor i64 %1606, %1607
  store i64 %xor17.i663, i64* %x33CC33CC.i640, align 8
  %1608 = load i64, i64* %a5.addr.i633, align 8
  %1609 = load i64, i64* %x0C0CC0C0.i, align 8
  %or18.i664 = or i64 %1608, %1609
  store i64 %or18.i664, i64* %x0C0CFFFF.i, align 8
  %1610 = load i64, i64* %x3B92A366.i, align 8
  %1611 = load i64, i64* %x0C0CFFFF.i, align 8
  %xor19.i665 = xor i64 %1610, %1611
  store i64 %xor19.i665, i64* %x379E5C99.i, align 8
  %1612 = load i64, i64* %x379E5C99.i, align 8
  %1613 = load i64, i64* %x33CC33CC.i640, align 8
  %neg20.i666 = xor i64 %1613, -1
  %and21.i667 = and i64 %1612, %neg20.i666
  store i64 %and21.i667, i64* %x04124C11.i, align 8
  %1614 = load i64, i64* %x52FBCA0F.i, align 8
  %1615 = load i64, i64* %x04124C11.i, align 8
  %xor22.i668 = xor i64 %1614, %1615
  store i64 %xor22.i668, i64* %x56E9861E.i, align 8
  %1616 = load i64, i64* %a6.addr.i634, align 8
  %1617 = load i64, i64* %x3C90B3D6.i, align 8
  %neg23.i669 = xor i64 %1617, -1
  %and24.i670 = and i64 %1616, %neg23.i669
  store i64 %and24.i670, i64* %x00.i641, align 8
  %1618 = load i64, i64* %x00.i641, align 8
  %1619 = load i64, i64* %x56E9861E.i, align 8
  %xor25.i671 = xor i64 %1618, %1619
  store i64 %xor25.i671, i64* %x01.i642, align 8
  %1620 = load i64*, i64** %out1.addr.i635, align 8
  %1621 = load i64, i64* %1620, align 8
  %1622 = load i64, i64* %x01.i642, align 8
  %xor26.i672 = xor i64 %1621, %1622
  %1623 = load i64*, i64** %out1.addr.i635, align 8
  store i64 %xor26.i672, i64* %1623, align 8
  %1624 = load i64, i64* %x56E9861E.i, align 8
  %neg27.i673 = xor i64 %1624, -1
  store i64 %neg27.i673, i64* %xA91679E1.i, align 8
  %1625 = load i64, i64* %x3C90B3D6.i, align 8
  %1626 = load i64, i64* %a6.addr.i634, align 8
  %neg28.i674 = xor i64 %1626, -1
  %and29.i675 = and i64 %1625, %neg28.i674
  store i64 %and29.i675, i64* %x10.i643, align 8
  %1627 = load i64, i64* %x10.i643, align 8
  %1628 = load i64, i64* %xA91679E1.i, align 8
  %xor30.i676 = xor i64 %1627, %1628
  store i64 %xor30.i676, i64* %x11.i644, align 8
  %1629 = load i64*, i64** %out2.addr.i636, align 8
  %1630 = load i64, i64* %1629, align 8
  %1631 = load i64, i64* %x11.i644, align 8
  %xor31.i677 = xor i64 %1630, %1631
  %1632 = load i64*, i64** %out2.addr.i636, align 8
  store i64 %xor31.i677, i64* %1632, align 8
  %1633 = load i64, i64* %x3C90B3D6.i, align 8
  %1634 = load i64, i64* %xA91679E1.i, align 8
  %xor32.i678 = xor i64 %1633, %1634
  store i64 %xor32.i678, i64* %x9586CA37.i, align 8
  %1635 = load i64, i64* %x9586CA37.i, align 8
  %1636 = load i64, i64* %x33CC33CC.i640, align 8
  %neg33.i679 = xor i64 %1636, -1
  %and34.i680 = and i64 %1635, %neg33.i679
  store i64 %and34.i680, i64* %x8402C833.i, align 8
  %1637 = load i64, i64* %x00C0C03C.i, align 8
  %1638 = load i64, i64* %x8402C833.i, align 8
  %or35.i681 = or i64 %1637, %1638
  store i64 %or35.i681, i64* %x84C2C83F.i, align 8
  %1639 = load i64, i64* %x379E5C99.i, align 8
  %1640 = load i64, i64* %x84C2C83F.i, align 8
  %xor36.i682 = xor i64 %1639, %1640
  store i64 %xor36.i682, i64* %xB35C94A6.i, align 8
  %1641 = load i64, i64* %x61C8F93C.i, align 8
  %1642 = load i64, i64* %a6.addr.i634, align 8
  %or37.i = or i64 %1641, %1642
  store i64 %or37.i, i64* %x20.i645, align 8
  %1643 = load i64, i64* %x20.i645, align 8
  %1644 = load i64, i64* %xB35C94A6.i, align 8
  %xor38.i683 = xor i64 %1643, %1644
  store i64 %xor38.i683, i64* %x21.i646, align 8
  %1645 = load i64*, i64** %out3.addr.i637, align 8
  %1646 = load i64, i64* %1645, align 8
  %1647 = load i64, i64* %x21.i646, align 8
  %xor39.i684 = xor i64 %1646, %1647
  %1648 = load i64*, i64** %out3.addr.i637, align 8
  store i64 %xor39.i684, i64* %1648, align 8
  %1649 = load i64, i64* %a6.addr.i634, align 8
  %1650 = load i64, i64* %x61C8F93C.i, align 8
  %and40.i685 = and i64 %1649, %1650
  store i64 %and40.i685, i64* %x30.i647, align 8
  %1651 = load i64, i64* %x30.i647, align 8
  %1652 = load i64, i64* %xB35C94A6.i, align 8
  %xor41.i686 = xor i64 %1651, %1652
  store i64 %xor41.i686, i64* %x31.i648, align 8
  %1653 = load i64*, i64** %out4.addr.i638, align 8
  %1654 = load i64, i64* %1653, align 8
  %1655 = load i64, i64* %x31.i648, align 8
  %xor42.i687 = xor i64 %1654, %1655
  %1656 = load i64*, i64** %out4.addr.i638, align 8
  store i64 %xor42.i687, i64* %1656, align 8
  %1657 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 72), align 8
  %arrayidx289 = getelementptr inbounds i64, i64* %1657, i64 0
  %1658 = load i64, i64* %arrayidx289, align 8
  %1659 = load i64**, i64*** %k, align 8
  %arrayidx290 = getelementptr inbounds i64*, i64** %1659, i64 72
  %1660 = load i64*, i64** %arrayidx290, align 8
  %arrayidx291 = getelementptr inbounds i64, i64* %1660, i64 0
  %1661 = load i64, i64* %arrayidx291, align 8
  %xor292 = xor i64 %1658, %1661
  %1662 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 73), align 8
  %arrayidx293 = getelementptr inbounds i64, i64* %1662, i64 0
  %1663 = load i64, i64* %arrayidx293, align 8
  %1664 = load i64**, i64*** %k, align 8
  %arrayidx294 = getelementptr inbounds i64*, i64** %1664, i64 73
  %1665 = load i64*, i64** %arrayidx294, align 8
  %arrayidx295 = getelementptr inbounds i64, i64* %1665, i64 0
  %1666 = load i64, i64* %arrayidx295, align 8
  %xor296 = xor i64 %1663, %1666
  %1667 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 74), align 8
  %arrayidx297 = getelementptr inbounds i64, i64* %1667, i64 0
  %1668 = load i64, i64* %arrayidx297, align 8
  %1669 = load i64**, i64*** %k, align 8
  %arrayidx298 = getelementptr inbounds i64*, i64** %1669, i64 74
  %1670 = load i64*, i64** %arrayidx298, align 8
  %arrayidx299 = getelementptr inbounds i64, i64* %1670, i64 0
  %1671 = load i64, i64* %arrayidx299, align 8
  %xor300 = xor i64 %1668, %1671
  %1672 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 75), align 8
  %arrayidx301 = getelementptr inbounds i64, i64* %1672, i64 0
  %1673 = load i64, i64* %arrayidx301, align 8
  %1674 = load i64**, i64*** %k, align 8
  %arrayidx302 = getelementptr inbounds i64*, i64** %1674, i64 75
  %1675 = load i64*, i64** %arrayidx302, align 8
  %arrayidx303 = getelementptr inbounds i64, i64* %1675, i64 0
  %1676 = load i64, i64* %arrayidx303, align 8
  %xor304 = xor i64 %1673, %1676
  %1677 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 76), align 8
  %arrayidx305 = getelementptr inbounds i64, i64* %1677, i64 0
  %1678 = load i64, i64* %arrayidx305, align 8
  %1679 = load i64**, i64*** %k, align 8
  %arrayidx306 = getelementptr inbounds i64*, i64** %1679, i64 76
  %1680 = load i64*, i64** %arrayidx306, align 8
  %arrayidx307 = getelementptr inbounds i64, i64* %1680, i64 0
  %1681 = load i64, i64* %arrayidx307, align 8
  %xor308 = xor i64 %1678, %1681
  %1682 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 77), align 8
  %arrayidx309 = getelementptr inbounds i64, i64* %1682, i64 0
  %1683 = load i64, i64* %arrayidx309, align 8
  %1684 = load i64**, i64*** %k, align 8
  %arrayidx310 = getelementptr inbounds i64*, i64** %1684, i64 77
  %1685 = load i64*, i64** %arrayidx310, align 8
  %arrayidx311 = getelementptr inbounds i64, i64* %1685, i64 0
  %1686 = load i64, i64* %arrayidx311, align 8
  %xor312 = xor i64 %1683, %1686
  store i64 %xor292, i64* %a1.addr.i565, align 8
  store i64 %xor296, i64* %a2.addr.i566, align 8
  store i64 %xor300, i64* %a3.addr.i567, align 8
  store i64 %xor304, i64* %a4.addr.i568, align 8
  store i64 %xor308, i64* %a5.addr.i569, align 8
  store i64 %xor312, i64* %a6.addr.i570, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 7), i64** %out1.addr.i571, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 13), i64** %out2.addr.i572, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 24), i64** %out3.addr.i573, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 2), i64** %out4.addr.i574, align 8
  %1687 = load i64, i64* %a1.addr.i565, align 8
  %1688 = load i64, i64* %a3.addr.i567, align 8
  %or.i583 = or i64 %1687, %1688
  store i64 %or.i583, i64* %x77777777.i, align 8
  %1689 = load i64, i64* %x77777777.i, align 8
  %1690 = load i64, i64* %a6.addr.i570, align 8
  %neg.i584 = xor i64 %1690, -1
  %and.i585 = and i64 %1689, %neg.i584
  store i64 %and.i585, i64* %x77770000.i, align 8
  %1691 = load i64, i64* %a1.addr.i565, align 8
  %1692 = load i64, i64* %x77770000.i, align 8
  %xor.i586 = xor i64 %1691, %1692
  store i64 %xor.i586, i64* %x22225555.i, align 8
  %1693 = load i64, i64* %a3.addr.i567, align 8
  %1694 = load i64, i64* %x22225555.i, align 8
  %xor1.i587 = xor i64 %1693, %1694
  store i64 %xor1.i587, i64* %x11116666.i, align 8
  %1695 = load i64, i64* %a4.addr.i568, align 8
  %1696 = load i64, i64* %x11116666.i, align 8
  %or2.i = or i64 %1695, %1696
  store i64 %or2.i, i64* %x1F1F6F6F.i, align 8
  %1697 = load i64, i64* %x77770000.i, align 8
  %1698 = load i64, i64* %a4.addr.i568, align 8
  %neg3.i = xor i64 %1698, -1
  %and4.i588 = and i64 %1697, %neg3.i
  store i64 %and4.i588, i64* %x70700000.i, align 8
  %1699 = load i64, i64* %a3.addr.i567, align 8
  %1700 = load i64, i64* %x70700000.i, align 8
  %xor5.i589 = xor i64 %1699, %1700
  store i64 %xor5.i589, i64* %x43433333.i, align 8
  %1701 = load i64, i64* %a5.addr.i569, align 8
  %1702 = load i64, i64* %x43433333.i, align 8
  %and6.i = and i64 %1701, %1702
  store i64 %and6.i, i64* %x00430033.i, align 8
  %1703 = load i64, i64* %a1.addr.i565, align 8
  %1704 = load i64, i64* %x11116666.i, align 8
  %or7.i590 = or i64 %1703, %1704
  store i64 %or7.i590, i64* %x55557777.i, align 8
  %1705 = load i64, i64* %x00430033.i, align 8
  %1706 = load i64, i64* %x55557777.i, align 8
  %xor8.i591 = xor i64 %1705, %1706
  store i64 %xor8.i591, i64* %x55167744.i, align 8
  %1707 = load i64, i64* %a4.addr.i568, align 8
  %1708 = load i64, i64* %x55167744.i, align 8
  %xor9.i = xor i64 %1707, %1708
  store i64 %xor9.i, i64* %x5A19784B.i, align 8
  %1709 = load i64, i64* %a6.addr.i570, align 8
  %1710 = load i64, i64* %x5A19784B.i, align 8
  %xor10.i592 = xor i64 %1709, %1710
  store i64 %xor10.i592, i64* %x5A1987B4.i, align 8
  %1711 = load i64, i64* %x22225555.i, align 8
  %1712 = load i64, i64* %x5A1987B4.i, align 8
  %or11.i = or i64 %1711, %1712
  store i64 %or11.i, i64* %x7A3BD7F5.i, align 8
  %1713 = load i64, i64* %a5.addr.i569, align 8
  %1714 = load i64, i64* %x7A3BD7F5.i, align 8
  %and12.i = and i64 %1713, %1714
  store i64 %and12.i, i64* %x003B00F5.i, align 8
  %1715 = load i64, i64* %x22225555.i, align 8
  %1716 = load i64, i64* %x003B00F5.i, align 8
  %xor13.i593 = xor i64 %1715, %1716
  store i64 %xor13.i593, i64* %x221955A0.i, align 8
  %1717 = load i64, i64* %a4.addr.i568, align 8
  %1718 = load i64, i64* %x55557777.i, align 8
  %and14.i594 = and i64 %1717, %1718
  store i64 %and14.i594, i64* %x05050707.i, align 8
  %1719 = load i64, i64* %x221955A0.i, align 8
  %1720 = load i64, i64* %x05050707.i, align 8
  %xor15.i595 = xor i64 %1719, %1720
  store i64 %xor15.i595, i64* %x271C52A7.i, align 8
  %1721 = load i64, i64* %x7A3BD7F5.i, align 8
  %1722 = load i64, i64* %a1.addr.i565, align 8
  %neg16.i596 = xor i64 %1722, -1
  %and17.i597 = and i64 %1721, %neg16.i596
  store i64 %and17.i597, i64* %x2A2A82A0.i, align 8
  %1723 = load i64, i64* %x43433333.i, align 8
  %1724 = load i64, i64* %x2A2A82A0.i, align 8
  %xor18.i598 = xor i64 %1723, %1724
  store i64 %xor18.i598, i64* %x6969B193.i, align 8
  %1725 = load i64, i64* %a5.addr.i569, align 8
  %1726 = load i64, i64* %x1F1F6F6F.i, align 8
  %xor19.i = xor i64 %1725, %1726
  store i64 %xor19.i, i64* %x1FE06F90.i, align 8
  %1727 = load i64, i64* %x1FE06F90.i, align 8
  %1728 = load i64, i64* %x6969B193.i, align 8
  %neg20.i599 = xor i64 %1728, -1
  %and21.i600 = and i64 %1727, %neg20.i599
  store i64 %and21.i600, i64* %x16804E00.i, align 8
  %1729 = load i64, i64* %x16804E00.i, align 8
  %neg22.i601 = xor i64 %1729, -1
  store i64 %neg22.i601, i64* %xE97FB1FF.i, align 8
  %1730 = load i64, i64* %xE97FB1FF.i, align 8
  %1731 = load i64, i64* %a2.addr.i566, align 8
  %neg23.i = xor i64 %1731, -1
  %and24.i = and i64 %1730, %neg23.i
  store i64 %and24.i, i64* %x20.i579, align 8
  %1732 = load i64, i64* %x20.i579, align 8
  %1733 = load i64, i64* %x5A19784B.i, align 8
  %xor25.i602 = xor i64 %1732, %1733
  store i64 %xor25.i602, i64* %x21.i580, align 8
  %1734 = load i64*, i64** %out3.addr.i573, align 8
  %1735 = load i64, i64* %1734, align 8
  %1736 = load i64, i64* %x21.i580, align 8
  %xor26.i603 = xor i64 %1735, %1736
  %1737 = load i64*, i64** %out3.addr.i573, align 8
  store i64 %xor26.i603, i64* %1737, align 8
  %1738 = load i64, i64* %x43433333.i, align 8
  %1739 = load i64, i64* %x003B00F5.i, align 8
  %neg27.i604 = xor i64 %1739, -1
  %and28.i605 = and i64 %1738, %neg27.i604
  store i64 %and28.i605, i64* %x43403302.i, align 8
  %1740 = load i64, i64* %x2A2A82A0.i, align 8
  %1741 = load i64, i64* %x1FE06F90.i, align 8
  %xor29.i606 = xor i64 %1740, %1741
  store i64 %xor29.i606, i64* %x35CAED30.i, align 8
  %1742 = load i64, i64* %x271C52A7.i, align 8
  %1743 = load i64, i64* %x35CAED30.i, align 8
  %or30.i = or i64 %1742, %1743
  store i64 %or30.i, i64* %x37DEFFB7.i, align 8
  %1744 = load i64, i64* %x37DEFFB7.i, align 8
  %1745 = load i64, i64* %x43403302.i, align 8
  %neg31.i = xor i64 %1745, -1
  %and32.i = and i64 %1744, %neg31.i
  store i64 %and32.i, i64* %x349ECCB5.i, align 8
  %1746 = load i64, i64* %x1F1F6F6F.i, align 8
  %1747 = load i64, i64* %x349ECCB5.i, align 8
  %neg33.i607 = xor i64 %1747, -1
  %and34.i608 = and i64 %1746, %neg33.i607
  store i64 %and34.i608, i64* %x0B01234A.i, align 8
  %1748 = load i64, i64* %x5A1987B4.i, align 8
  %1749 = load i64, i64* %x349ECCB5.i, align 8
  %and35.i609 = and i64 %1748, %1749
  store i64 %and35.i609, i64* %x101884B4.i, align 8
  %1750 = load i64, i64* %x1FE06F90.i, align 8
  %1751 = load i64, i64* %x101884B4.i, align 8
  %xor36.i610 = xor i64 %1750, %1751
  store i64 %xor36.i610, i64* %x0FF8EB24.i, align 8
  %1752 = load i64, i64* %x43433333.i, align 8
  %1753 = load i64, i64* %x55557777.i, align 8
  %and37.i611 = and i64 %1752, %1753
  store i64 %and37.i611, i64* %x41413333.i, align 8
  %1754 = load i64, i64* %x0FF8EB24.i, align 8
  %1755 = load i64, i64* %x41413333.i, align 8
  %or38.i612 = or i64 %1754, %1755
  store i64 %or38.i612, i64* %x4FF9FB37.i, align 8
  %1756 = load i64, i64* %x003B00F5.i, align 8
  %1757 = load i64, i64* %x4FF9FB37.i, align 8
  %xor39.i613 = xor i64 %1756, %1757
  store i64 %xor39.i613, i64* %x4FC2FBC2.i, align 8
  %1758 = load i64, i64* %x4FC2FBC2.i, align 8
  %1759 = load i64, i64* %a2.addr.i566, align 8
  %and40.i = and i64 %1758, %1759
  store i64 %and40.i, i64* %x30.i581, align 8
  %1760 = load i64, i64* %x30.i581, align 8
  %1761 = load i64, i64* %x271C52A7.i, align 8
  %xor41.i614 = xor i64 %1760, %1761
  store i64 %xor41.i614, i64* %x31.i582, align 8
  %1762 = load i64*, i64** %out4.addr.i574, align 8
  %1763 = load i64, i64* %1762, align 8
  %1764 = load i64, i64* %x31.i582, align 8
  %xor42.i = xor i64 %1763, %1764
  %1765 = load i64*, i64** %out4.addr.i574, align 8
  store i64 %xor42.i, i64* %1765, align 8
  %1766 = load i64, i64* %a1.addr.i565, align 8
  %1767 = load i64, i64* %x77777777.i, align 8
  %xor43.i615 = xor i64 %1766, %1767
  store i64 %xor43.i615, i64* %x22222222.i, align 8
  %1768 = load i64, i64* %x349ECCB5.i, align 8
  %1769 = load i64, i64* %x22222222.i, align 8
  %xor44.i616 = xor i64 %1768, %1769
  store i64 %xor44.i616, i64* %x16BCEE97.i, align 8
  %1770 = load i64, i64* %a4.addr.i568, align 8
  %1771 = load i64, i64* %x0FF8EB24.i, align 8
  %and45.i617 = and i64 %1770, %1771
  store i64 %and45.i617, i64* %x0F080B04.i, align 8
  %1772 = load i64, i64* %x16BCEE97.i, align 8
  %1773 = load i64, i64* %x0F080B04.i, align 8
  %xor46.i618 = xor i64 %1772, %1773
  store i64 %xor46.i618, i64* %x19B4E593.i, align 8
  %1774 = load i64, i64* %x0B01234A.i, align 8
  %1775 = load i64, i64* %a2.addr.i566, align 8
  %or47.i619 = or i64 %1774, %1775
  store i64 %or47.i619, i64* %x00.i575, align 8
  %1776 = load i64, i64* %x00.i575, align 8
  %1777 = load i64, i64* %x19B4E593.i, align 8
  %xor48.i620 = xor i64 %1776, %1777
  store i64 %xor48.i620, i64* %x01.i576, align 8
  %1778 = load i64*, i64** %out1.addr.i571, align 8
  %1779 = load i64, i64* %1778, align 8
  %1780 = load i64, i64* %x01.i576, align 8
  %xor49.i621 = xor i64 %1779, %1780
  %1781 = load i64*, i64** %out1.addr.i571, align 8
  store i64 %xor49.i621, i64* %1781, align 8
  %1782 = load i64, i64* %x1F1F6F6F.i, align 8
  %1783 = load i64, i64* %x43433333.i, align 8
  %xor50.i622 = xor i64 %1782, %1783
  store i64 %xor50.i622, i64* %x5C5C5C5C.i, align 8
  %1784 = load i64, i64* %x5C5C5C5C.i, align 8
  %1785 = load i64, i64* %x19B4E593.i, align 8
  %neg51.i623 = xor i64 %1785, -1
  %and52.i624 = and i64 %1784, %neg51.i623
  store i64 %and52.i624, i64* %x4448184C.i, align 8
  %1786 = load i64, i64* %x22225555.i, align 8
  %1787 = load i64, i64* %x0FF8EB24.i, align 8
  %xor53.i625 = xor i64 %1786, %1787
  store i64 %xor53.i625, i64* %x2DDABE71.i, align 8
  %1788 = load i64, i64* %x4448184C.i, align 8
  %1789 = load i64, i64* %x2DDABE71.i, align 8
  %xor54.i626 = xor i64 %1788, %1789
  store i64 %xor54.i626, i64* %x6992A63D.i, align 8
  %1790 = load i64, i64* %x1F1F6F6F.i, align 8
  %1791 = load i64, i64* %a2.addr.i566, align 8
  %and55.i627 = and i64 %1790, %1791
  store i64 %and55.i627, i64* %x10.i577, align 8
  %1792 = load i64, i64* %x10.i577, align 8
  %1793 = load i64, i64* %x6992A63D.i, align 8
  %xor56.i = xor i64 %1792, %1793
  store i64 %xor56.i, i64* %x11.i578, align 8
  %1794 = load i64*, i64** %out2.addr.i572, align 8
  %1795 = load i64, i64* %1794, align 8
  %1796 = load i64, i64* %x11.i578, align 8
  %xor57.i628 = xor i64 %1795, %1796
  %1797 = load i64*, i64** %out2.addr.i572, align 8
  store i64 %xor57.i628, i64* %1797, align 8
  %1798 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 78), align 8
  %arrayidx313 = getelementptr inbounds i64, i64* %1798, i64 0
  %1799 = load i64, i64* %arrayidx313, align 8
  %1800 = load i64**, i64*** %k, align 8
  %arrayidx314 = getelementptr inbounds i64*, i64** %1800, i64 78
  %1801 = load i64*, i64** %arrayidx314, align 8
  %arrayidx315 = getelementptr inbounds i64, i64* %1801, i64 0
  %1802 = load i64, i64* %arrayidx315, align 8
  %xor316 = xor i64 %1799, %1802
  %1803 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 79), align 8
  %arrayidx317 = getelementptr inbounds i64, i64* %1803, i64 0
  %1804 = load i64, i64* %arrayidx317, align 8
  %1805 = load i64**, i64*** %k, align 8
  %arrayidx318 = getelementptr inbounds i64*, i64** %1805, i64 79
  %1806 = load i64*, i64** %arrayidx318, align 8
  %arrayidx319 = getelementptr inbounds i64, i64* %1806, i64 0
  %1807 = load i64, i64* %arrayidx319, align 8
  %xor320 = xor i64 %1804, %1807
  %1808 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 80), align 8
  %arrayidx321 = getelementptr inbounds i64, i64* %1808, i64 0
  %1809 = load i64, i64* %arrayidx321, align 8
  %1810 = load i64**, i64*** %k, align 8
  %arrayidx322 = getelementptr inbounds i64*, i64** %1810, i64 80
  %1811 = load i64*, i64** %arrayidx322, align 8
  %arrayidx323 = getelementptr inbounds i64, i64* %1811, i64 0
  %1812 = load i64, i64* %arrayidx323, align 8
  %xor324 = xor i64 %1809, %1812
  %1813 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 81), align 8
  %arrayidx325 = getelementptr inbounds i64, i64* %1813, i64 0
  %1814 = load i64, i64* %arrayidx325, align 8
  %1815 = load i64**, i64*** %k, align 8
  %arrayidx326 = getelementptr inbounds i64*, i64** %1815, i64 81
  %1816 = load i64*, i64** %arrayidx326, align 8
  %arrayidx327 = getelementptr inbounds i64, i64* %1816, i64 0
  %1817 = load i64, i64* %arrayidx327, align 8
  %xor328 = xor i64 %1814, %1817
  %1818 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 82), align 8
  %arrayidx329 = getelementptr inbounds i64, i64* %1818, i64 0
  %1819 = load i64, i64* %arrayidx329, align 8
  %1820 = load i64**, i64*** %k, align 8
  %arrayidx330 = getelementptr inbounds i64*, i64** %1820, i64 82
  %1821 = load i64*, i64** %arrayidx330, align 8
  %arrayidx331 = getelementptr inbounds i64, i64* %1821, i64 0
  %1822 = load i64, i64* %arrayidx331, align 8
  %xor332 = xor i64 %1819, %1822
  %1823 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 83), align 8
  %arrayidx333 = getelementptr inbounds i64, i64* %1823, i64 0
  %1824 = load i64, i64* %arrayidx333, align 8
  %1825 = load i64**, i64*** %k, align 8
  %arrayidx334 = getelementptr inbounds i64*, i64** %1825, i64 83
  %1826 = load i64*, i64** %arrayidx334, align 8
  %arrayidx335 = getelementptr inbounds i64, i64* %1826, i64 0
  %1827 = load i64, i64* %arrayidx335, align 8
  %xor336 = xor i64 %1824, %1827
  store i64 %xor316, i64* %a1.addr.i506, align 8
  store i64 %xor320, i64* %a2.addr.i507, align 8
  store i64 %xor324, i64* %a3.addr.i508, align 8
  store i64 %xor328, i64* %a4.addr.i509, align 8
  store i64 %xor332, i64* %a5.addr.i510, align 8
  store i64 %xor336, i64* %a6.addr.i511, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 3), i64** %out1.addr.i512, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 28), i64** %out2.addr.i513, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 10), i64** %out3.addr.i514, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 18), i64** %out4.addr.i515, align 8
  %1828 = load i64, i64* %a2.addr.i507, align 8
  %1829 = load i64, i64* %a5.addr.i510, align 8
  %xor.i525 = xor i64 %1828, %1829
  store i64 %xor.i525, i64* %x33CC33CC.i, align 8
  %1830 = load i64, i64* %a2.addr.i507, align 8
  %1831 = load i64, i64* %a6.addr.i511, align 8
  %or.i526 = or i64 %1830, %1831
  store i64 %or.i526, i64* %x3333FFFF.i516, align 8
  %1832 = load i64, i64* %a1.addr.i506, align 8
  %1833 = load i64, i64* %x3333FFFF.i516, align 8
  %and.i527 = and i64 %1832, %1833
  store i64 %and.i527, i64* %x11115555.i, align 8
  %1834 = load i64, i64* %x33CC33CC.i, align 8
  %1835 = load i64, i64* %x11115555.i, align 8
  %xor1.i528 = xor i64 %1834, %1835
  store i64 %xor1.i528, i64* %x22DD6699.i, align 8
  %1836 = load i64, i64* %a6.addr.i511, align 8
  %1837 = load i64, i64* %x22DD6699.i, align 8
  %xor2.i = xor i64 %1836, %1837
  store i64 %xor2.i, i64* %x22DD9966.i, align 8
  %1838 = load i64, i64* %a5.addr.i510, align 8
  %1839 = load i64, i64* %x22DD9966.i, align 8
  %neg.i529 = xor i64 %1839, -1
  %and3.i530 = and i64 %1838, %neg.i529
  store i64 %and3.i530, i64* %x00220099.i, align 8
  %1840 = load i64, i64* %a1.addr.i506, align 8
  %1841 = load i64, i64* %x22DD9966.i, align 8
  %and4.i531 = and i64 %1840, %1841
  store i64 %and4.i531, i64* %x00551144.i, align 8
  %1842 = load i64, i64* %a2.addr.i507, align 8
  %1843 = load i64, i64* %x00551144.i, align 8
  %xor5.i = xor i64 %1842, %1843
  store i64 %xor5.i, i64* %x33662277.i, align 8
  %1844 = load i64, i64* %a1.addr.i506, align 8
  %1845 = load i64, i64* %a3.addr.i508, align 8
  %xor6.i532 = xor i64 %1844, %1845
  store i64 %xor6.i532, i64* %x5A5A5A5A.i, align 8
  %1846 = load i64, i64* %x33662277.i, align 8
  %1847 = load i64, i64* %x5A5A5A5A.i, align 8
  %or7.i = or i64 %1846, %1847
  store i64 %or7.i, i64* %x7B7E7A7F.i, align 8
  %1848 = load i64, i64* %x22DD6699.i, align 8
  %1849 = load i64, i64* %x7B7E7A7F.i, align 8
  %xor8.i533 = xor i64 %1848, %1849
  store i64 %xor8.i533, i64* %x59A31CE6.i, align 8
  %1850 = load i64, i64* %a3.addr.i508, align 8
  %1851 = load i64, i64* %x59A31CE6.i, align 8
  %and9.i534 = and i64 %1850, %1851
  store i64 %and9.i534, i64* %x09030C06.i, align 8
  %1852 = load i64, i64* %x09030C06.i, align 8
  %1853 = load i64, i64* %a6.addr.i511, align 8
  %neg10.i = xor i64 %1853, -1
  %and11.i535 = and i64 %1852, %neg10.i
  store i64 %and11.i535, i64* %x09030000.i, align 8
  %1854 = load i64, i64* %x00220099.i, align 8
  %1855 = load i64, i64* %x33662277.i, align 8
  %or12.i536 = or i64 %1854, %1855
  store i64 %or12.i536, i64* %x336622FF.i, align 8
  %1856 = load i64, i64* %x09030000.i, align 8
  %1857 = load i64, i64* %x336622FF.i, align 8
  %xor13.i = xor i64 %1856, %1857
  store i64 %xor13.i, i64* %x3A6522FF.i, align 8
  %1858 = load i64, i64* %x3A6522FF.i, align 8
  %1859 = load i64, i64* %a4.addr.i509, align 8
  %and14.i = and i64 %1858, %1859
  store i64 %and14.i, i64* %x30.i523, align 8
  %1860 = load i64, i64* %x30.i523, align 8
  %1861 = load i64, i64* %x59A31CE6.i, align 8
  %xor15.i537 = xor i64 %1860, %1861
  store i64 %xor15.i537, i64* %x31.i524, align 8
  %1862 = load i64*, i64** %out4.addr.i515, align 8
  %1863 = load i64, i64* %1862, align 8
  %1864 = load i64, i64* %x31.i524, align 8
  %xor16.i538 = xor i64 %1863, %1864
  %1865 = load i64*, i64** %out4.addr.i515, align 8
  store i64 %xor16.i538, i64* %1865, align 8
  %1866 = load i64, i64* %a2.addr.i507, align 8
  %1867 = load i64, i64* %x7B7E7A7F.i, align 8
  %xor17.i539 = xor i64 %1866, %1867
  store i64 %xor17.i539, i64* %x484D494C.i, align 8
  %1868 = load i64, i64* %a6.addr.i511, align 8
  %1869 = load i64, i64* %x484D494C.i, align 8
  %neg18.i540 = xor i64 %1869, -1
  %and19.i541 = and i64 %1868, %neg18.i540
  store i64 %and19.i541, i64* %x0000B6B3.i, align 8
  %1870 = load i64, i64* %a3.addr.i508, align 8
  %1871 = load i64, i64* %x0000B6B3.i, align 8
  %xor20.i542 = xor i64 %1870, %1871
  store i64 %xor20.i542, i64* %x0F0FB9BC.i, align 8
  %1872 = load i64, i64* %a5.addr.i510, align 8
  %1873 = load i64, i64* %x09030C06.i, align 8
  %neg21.i = xor i64 %1873, -1
  %and22.i543 = and i64 %1872, %neg21.i
  store i64 %and22.i543, i64* %x00FC00F9.i, align 8
  %1874 = load i64, i64* %x0F0FB9BC.i, align 8
  %1875 = load i64, i64* %x00FC00F9.i, align 8
  %or23.i = or i64 %1874, %1875
  store i64 %or23.i, i64* %x0FFFB9FD.i, align 8
  %1876 = load i64, i64* %a1.addr.i506, align 8
  %1877 = load i64, i64* %x59A31CE6.i, align 8
  %or24.i544 = or i64 %1876, %1877
  store i64 %or24.i544, i64* %x5DF75DF7.i, align 8
  %1878 = load i64, i64* %x336622FF.i, align 8
  %1879 = load i64, i64* %x5DF75DF7.i, align 8
  %and25.i545 = and i64 %1878, %1879
  store i64 %and25.i545, i64* %x116600F7.i, align 8
  %1880 = load i64, i64* %x0F0FB9BC.i, align 8
  %1881 = load i64, i64* %x116600F7.i, align 8
  %xor26.i546 = xor i64 %1880, %1881
  store i64 %xor26.i546, i64* %x1E69B94B.i, align 8
  %1882 = load i64, i64* %x1E69B94B.i, align 8
  %1883 = load i64, i64* %x09030000.i, align 8
  %neg27.i547 = xor i64 %1883, -1
  %and28.i548 = and i64 %1882, %neg27.i547
  store i64 %and28.i548, i64* %x1668B94B.i, align 8
  %1884 = load i64, i64* %x00220099.i, align 8
  %1885 = load i64, i64* %a4.addr.i509, align 8
  %or29.i = or i64 %1884, %1885
  store i64 %or29.i, i64* %x20.i521, align 8
  %1886 = load i64, i64* %x20.i521, align 8
  %1887 = load i64, i64* %x1668B94B.i, align 8
  %xor30.i549 = xor i64 %1886, %1887
  store i64 %xor30.i549, i64* %x21.i522, align 8
  %1888 = load i64*, i64** %out3.addr.i514, align 8
  %1889 = load i64, i64* %1888, align 8
  %1890 = load i64, i64* %x21.i522, align 8
  %xor31.i = xor i64 %1889, %1890
  %1891 = load i64*, i64** %out3.addr.i514, align 8
  store i64 %xor31.i, i64* %1891, align 8
  %1892 = load i64, i64* %a2.addr.i507, align 8
  %1893 = load i64, i64* %x5A5A5A5A.i, align 8
  %or32.i = or i64 %1892, %1893
  store i64 %or32.i, i64* %x7B7B7B7B.i, align 8
  %1894 = load i64, i64* %x3A6522FF.i, align 8
  %1895 = load i64, i64* %x7B7B7B7B.i, align 8
  %xor33.i550 = xor i64 %1894, %1895
  store i64 %xor33.i550, i64* %x411E5984.i, align 8
  %1896 = load i64, i64* %x11115555.i, align 8
  %1897 = load i64, i64* %x0FFFB9FD.i, align 8
  %or34.i551 = or i64 %1896, %1897
  store i64 %or34.i551, i64* %x1FFFFDFD.i, align 8
  %1898 = load i64, i64* %x411E5984.i, align 8
  %1899 = load i64, i64* %x1FFFFDFD.i, align 8
  %xor35.i552 = xor i64 %1898, %1899
  store i64 %xor35.i552, i64* %x5EE1A479.i, align 8
  %1900 = load i64, i64* %x22DD6699.i, align 8
  %1901 = load i64, i64* %x1E69B94B.i, align 8
  %xor36.i553 = xor i64 %1900, %1901
  store i64 %xor36.i553, i64* %x3CB4DFD2.i, align 8
  %1902 = load i64, i64* %a5.addr.i510, align 8
  %1903 = load i64, i64* %x3CB4DFD2.i, align 8
  %neg37.i = xor i64 %1903, -1
  %and38.i554 = and i64 %1902, %neg37.i
  store i64 %and38.i554, i64* %x004B002D.i, align 8
  %1904 = load i64, i64* %x484D494C.i, align 8
  %neg39.i = xor i64 %1904, -1
  store i64 %neg39.i, i64* %xB7B2B6B3.i, align 8
  %1905 = load i64, i64* %x7B7B7B7B.i, align 8
  %1906 = load i64, i64* %xB7B2B6B3.i, align 8
  %xor40.i555 = xor i64 %1905, %1906
  store i64 %xor40.i555, i64* %xCCC9CDC8.i, align 8
  %1907 = load i64, i64* %x004B002D.i, align 8
  %1908 = load i64, i64* %xCCC9CDC8.i, align 8
  %xor41.i556 = xor i64 %1907, %1908
  store i64 %xor41.i556, i64* %xCC82CDE5.i, align 8
  %1909 = load i64, i64* %xCC82CDE5.i, align 8
  %1910 = load i64, i64* %a4.addr.i509, align 8
  %neg42.i = xor i64 %1910, -1
  %and43.i557 = and i64 %1909, %neg42.i
  store i64 %and43.i557, i64* %x10.i519, align 8
  %1911 = load i64, i64* %x10.i519, align 8
  %1912 = load i64, i64* %x5EE1A479.i, align 8
  %xor44.i558 = xor i64 %1911, %1912
  store i64 %xor44.i558, i64* %x11.i520, align 8
  %1913 = load i64*, i64** %out2.addr.i513, align 8
  %1914 = load i64, i64* %1913, align 8
  %1915 = load i64, i64* %x11.i520, align 8
  %xor45.i559 = xor i64 %1914, %1915
  %1916 = load i64*, i64** %out2.addr.i513, align 8
  store i64 %xor45.i559, i64* %1916, align 8
  %1917 = load i64, i64* %a6.addr.i511, align 8
  %1918 = load i64, i64* %x00551144.i, align 8
  %xor46.i560 = xor i64 %1917, %1918
  store i64 %xor46.i560, i64* %x0055EEBB.i, align 8
  %1919 = load i64, i64* %a1.addr.i506, align 8
  %1920 = load i64, i64* %x0F0FB9BC.i, align 8
  %xor47.i561 = xor i64 %1919, %1920
  store i64 %xor47.i561, i64* %x5A5AECE9.i, align 8
  %1921 = load i64, i64* %x0055EEBB.i, align 8
  %1922 = load i64, i64* %x5A5AECE9.i, align 8
  %and48.i562 = and i64 %1921, %1922
  store i64 %and48.i562, i64* %x0050ECA9.i, align 8
  %1923 = load i64, i64* %x09030C06.i, align 8
  %1924 = load i64, i64* %xCCC9CDC8.i, align 8
  %xor49.i563 = xor i64 %1923, %1924
  store i64 %xor49.i563, i64* %xC5CAC1CE.i, align 8
  %1925 = load i64, i64* %x0050ECA9.i, align 8
  %1926 = load i64, i64* %xC5CAC1CE.i, align 8
  %xor50.i = xor i64 %1925, %1926
  store i64 %xor50.i, i64* %xC59A2D67.i, align 8
  %1927 = load i64, i64* %x0FFFB9FD.i, align 8
  %1928 = load i64, i64* %a4.addr.i509, align 8
  %neg51.i = xor i64 %1928, -1
  %and52.i = and i64 %1927, %neg51.i
  store i64 %and52.i, i64* %x00.i517, align 8
  %1929 = load i64, i64* %x00.i517, align 8
  %1930 = load i64, i64* %xC59A2D67.i, align 8
  %xor53.i564 = xor i64 %1929, %1930
  store i64 %xor53.i564, i64* %x01.i518, align 8
  %1931 = load i64*, i64** %out1.addr.i512, align 8
  %1932 = load i64, i64* %1931, align 8
  %1933 = load i64, i64* %x01.i518, align 8
  %xor54.i = xor i64 %1932, %1933
  %1934 = load i64*, i64** %out1.addr.i512, align 8
  store i64 %xor54.i, i64* %1934, align 8
  %1935 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 84), align 8
  %arrayidx337 = getelementptr inbounds i64, i64* %1935, i64 0
  %1936 = load i64, i64* %arrayidx337, align 8
  %1937 = load i64**, i64*** %k, align 8
  %arrayidx338 = getelementptr inbounds i64*, i64** %1937, i64 84
  %1938 = load i64*, i64** %arrayidx338, align 8
  %arrayidx339 = getelementptr inbounds i64, i64* %1938, i64 0
  %1939 = load i64, i64* %arrayidx339, align 8
  %xor340 = xor i64 %1936, %1939
  %1940 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 85), align 8
  %arrayidx341 = getelementptr inbounds i64, i64* %1940, i64 0
  %1941 = load i64, i64* %arrayidx341, align 8
  %1942 = load i64**, i64*** %k, align 8
  %arrayidx342 = getelementptr inbounds i64*, i64** %1942, i64 85
  %1943 = load i64*, i64** %arrayidx342, align 8
  %arrayidx343 = getelementptr inbounds i64, i64* %1943, i64 0
  %1944 = load i64, i64* %arrayidx343, align 8
  %xor344 = xor i64 %1941, %1944
  %1945 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 86), align 8
  %arrayidx345 = getelementptr inbounds i64, i64* %1945, i64 0
  %1946 = load i64, i64* %arrayidx345, align 8
  %1947 = load i64**, i64*** %k, align 8
  %arrayidx346 = getelementptr inbounds i64*, i64** %1947, i64 86
  %1948 = load i64*, i64** %arrayidx346, align 8
  %arrayidx347 = getelementptr inbounds i64, i64* %1948, i64 0
  %1949 = load i64, i64* %arrayidx347, align 8
  %xor348 = xor i64 %1946, %1949
  %1950 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 87), align 8
  %arrayidx349 = getelementptr inbounds i64, i64* %1950, i64 0
  %1951 = load i64, i64* %arrayidx349, align 8
  %1952 = load i64**, i64*** %k, align 8
  %arrayidx350 = getelementptr inbounds i64*, i64** %1952, i64 87
  %1953 = load i64*, i64** %arrayidx350, align 8
  %arrayidx351 = getelementptr inbounds i64, i64* %1953, i64 0
  %1954 = load i64, i64* %arrayidx351, align 8
  %xor352 = xor i64 %1951, %1954
  %1955 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 88), align 8
  %arrayidx353 = getelementptr inbounds i64, i64* %1955, i64 0
  %1956 = load i64, i64* %arrayidx353, align 8
  %1957 = load i64**, i64*** %k, align 8
  %arrayidx354 = getelementptr inbounds i64*, i64** %1957, i64 88
  %1958 = load i64*, i64** %arrayidx354, align 8
  %arrayidx355 = getelementptr inbounds i64, i64* %1958, i64 0
  %1959 = load i64, i64* %arrayidx355, align 8
  %xor356 = xor i64 %1956, %1959
  %1960 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 89), align 8
  %arrayidx357 = getelementptr inbounds i64, i64* %1960, i64 0
  %1961 = load i64, i64* %arrayidx357, align 8
  %1962 = load i64**, i64*** %k, align 8
  %arrayidx358 = getelementptr inbounds i64*, i64** %1962, i64 89
  %1963 = load i64*, i64** %arrayidx358, align 8
  %arrayidx359 = getelementptr inbounds i64, i64* %1963, i64 0
  %1964 = load i64, i64* %arrayidx359, align 8
  %xor360 = xor i64 %1961, %1964
  store i64 %xor340, i64* %a1.addr.i451, align 8
  store i64 %xor344, i64* %a2.addr.i452, align 8
  store i64 %xor348, i64* %a3.addr.i453, align 8
  store i64 %xor352, i64* %a4.addr.i454, align 8
  store i64 %xor356, i64* %a5.addr.i455, align 8
  store i64 %xor360, i64* %a6.addr.i456, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 31), i64** %out1.addr.i457, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 11), i64** %out2.addr.i458, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 21), i64** %out3.addr.i459, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 6), i64** %out4.addr.i460, align 8
  %1965 = load i64, i64* %a4.addr.i454, align 8
  %1966 = load i64, i64* %a5.addr.i455, align 8
  %xor.i469 = xor i64 %1965, %1966
  store i64 %xor.i469, i64* %x0FF00FF0.i, align 8
  %1967 = load i64, i64* %a3.addr.i453, align 8
  %1968 = load i64, i64* %x0FF00FF0.i, align 8
  %xor1.i470 = xor i64 %1967, %1968
  store i64 %xor1.i470, i64* %x3CC33CC3.i, align 8
  %1969 = load i64, i64* %a6.addr.i456, align 8
  %1970 = load i64, i64* %x3CC33CC3.i, align 8
  %and.i471 = and i64 %1969, %1970
  store i64 %and.i471, i64* %x00003CC3.i, align 8
  %1971 = load i64, i64* %a4.addr.i454, align 8
  %1972 = load i64, i64* %x0FF00FF0.i, align 8
  %and2.i472 = and i64 %1971, %1972
  store i64 %and2.i472, i64* %x0F000F00.i, align 8
  %1973 = load i64, i64* %a2.addr.i452, align 8
  %1974 = load i64, i64* %x0F000F00.i, align 8
  %xor3.i473 = xor i64 %1973, %1974
  store i64 %xor3.i473, i64* %x5A555A55.i, align 8
  %1975 = load i64, i64* %x00003CC3.i, align 8
  %1976 = load i64, i64* %x5A555A55.i, align 8
  %and4.i = and i64 %1975, %1976
  store i64 %and4.i, i64* %x00001841.i, align 8
  %1977 = load i64, i64* %a6.addr.i456, align 8
  %1978 = load i64, i64* %x0F000F00.i, align 8
  %and5.i474 = and i64 %1977, %1978
  store i64 %and5.i474, i64* %x00000F00.i, align 8
  %1979 = load i64, i64* %a3.addr.i453, align 8
  %1980 = load i64, i64* %x00000F00.i, align 8
  %xor6.i475 = xor i64 %1979, %1980
  store i64 %xor6.i475, i64* %x33333C33.i, align 8
  %1981 = load i64, i64* %x5A555A55.i, align 8
  %1982 = load i64, i64* %x33333C33.i, align 8
  %or.i476 = or i64 %1981, %1982
  store i64 %or.i476, i64* %x7B777E77.i, align 8
  %1983 = load i64, i64* %a6.addr.i456, align 8
  %1984 = load i64, i64* %x0FF00FF0.i, align 8
  %xor7.i477 = xor i64 %1983, %1984
  store i64 %xor7.i477, i64* %x0FF0F00F.i, align 8
  %1985 = load i64, i64* %x7B777E77.i, align 8
  %1986 = load i64, i64* %x0FF0F00F.i, align 8
  %xor8.i = xor i64 %1985, %1986
  store i64 %xor8.i, i64* %x74878E78.i, align 8
  %1987 = load i64, i64* %a1.addr.i451, align 8
  %1988 = load i64, i64* %x00001841.i, align 8
  %neg.i478 = xor i64 %1988, -1
  %and9.i479 = and i64 %1987, %neg.i478
  store i64 %and9.i479, i64* %x30.i467, align 8
  %1989 = load i64, i64* %x30.i467, align 8
  %1990 = load i64, i64* %x74878E78.i, align 8
  %xor10.i480 = xor i64 %1989, %1990
  store i64 %xor10.i480, i64* %x31.i468, align 8
  %1991 = load i64*, i64** %out4.addr.i460, align 8
  %1992 = load i64, i64* %1991, align 8
  %1993 = load i64, i64* %x31.i468, align 8
  %xor11.i481 = xor i64 %1992, %1993
  %1994 = load i64*, i64** %out4.addr.i460, align 8
  store i64 %xor11.i481, i64* %1994, align 8
  %1995 = load i64, i64* %a5.addr.i455, align 8
  %1996 = load i64, i64* %x3CC33CC3.i, align 8
  %neg12.i482 = xor i64 %1996, -1
  %and13.i483 = and i64 %1995, %neg12.i482
  store i64 %and13.i483, i64* %x003C003C.i, align 8
  %1997 = load i64, i64* %x5A555A55.i, align 8
  %1998 = load i64, i64* %x003C003C.i, align 8
  %or14.i484 = or i64 %1997, %1998
  store i64 %or14.i484, i64* %x5A7D5A7D.i, align 8
  %1999 = load i64, i64* %x00003CC3.i, align 8
  %2000 = load i64, i64* %x33333C33.i, align 8
  %xor15.i = xor i64 %1999, %2000
  store i64 %xor15.i, i64* %x333300F0.i, align 8
  %2001 = load i64, i64* %x5A7D5A7D.i, align 8
  %2002 = load i64, i64* %x333300F0.i, align 8
  %xor16.i = xor i64 %2001, %2002
  store i64 %xor16.i, i64* %x694E5A8D.i, align 8
  %2003 = load i64, i64* %x00003CC3.i, align 8
  %2004 = load i64, i64* %x0FF0F00F.i, align 8
  %xor17.i485 = xor i64 %2003, %2004
  store i64 %xor17.i485, i64* %x0FF0CCCC.i, align 8
  %2005 = load i64, i64* %a4.addr.i454, align 8
  %2006 = load i64, i64* %x0FF0CCCC.i, align 8
  %neg18.i = xor i64 %2006, -1
  %and19.i486 = and i64 %2005, %neg18.i
  store i64 %and19.i486, i64* %x000F0303.i, align 8
  %2007 = load i64, i64* %x5A555A55.i, align 8
  %2008 = load i64, i64* %x000F0303.i, align 8
  %neg20.i = xor i64 %2008, -1
  %and21.i = and i64 %2007, %neg20.i
  store i64 %and21.i, i64* %x5A505854.i, align 8
  %2009 = load i64, i64* %a5.addr.i455, align 8
  %2010 = load i64, i64* %x333300F0.i, align 8
  %xor22.i487 = xor i64 %2009, %2010
  store i64 %xor22.i487, i64* %x33CC000F.i, align 8
  %2011 = load i64, i64* %x5A505854.i, align 8
  %2012 = load i64, i64* %x33CC000F.i, align 8
  %xor23.i = xor i64 %2011, %2012
  store i64 %xor23.i, i64* %x699C585B.i, align 8
  %2013 = load i64, i64* %x0F000F00.i, align 8
  %2014 = load i64, i64* %x74878E78.i, align 8
  %or24.i488 = or i64 %2013, %2014
  store i64 %or24.i488, i64* %x7F878F78.i, align 8
  %2015 = load i64, i64* %a3.addr.i453, align 8
  %2016 = load i64, i64* %x699C585B.i, align 8
  %and25.i489 = and i64 %2015, %2016
  store i64 %and25.i489, i64* %x21101013.i, align 8
  %2017 = load i64, i64* %x7F878F78.i, align 8
  %2018 = load i64, i64* %x21101013.i, align 8
  %or26.i = or i64 %2017, %2018
  store i64 %or26.i, i64* %x7F979F7B.i, align 8
  %2019 = load i64, i64* %x3CC33CC3.i, align 8
  %2020 = load i64, i64* %x0FF0F00F.i, align 8
  %neg27.i = xor i64 %2020, -1
  %and28.i = and i64 %2019, %neg27.i
  store i64 %and28.i, i64* %x30030CC0.i, align 8
  %2021 = load i64, i64* %x7F979F7B.i, align 8
  %2022 = load i64, i64* %x30030CC0.i, align 8
  %xor29.i490 = xor i64 %2021, %2022
  store i64 %xor29.i490, i64* %x4F9493BB.i, align 8
  %2023 = load i64, i64* %x4F9493BB.i, align 8
  %2024 = load i64, i64* %a1.addr.i451, align 8
  %neg30.i491 = xor i64 %2024, -1
  %and31.i492 = and i64 %2023, %neg30.i491
  store i64 %and31.i492, i64* %x00.i461, align 8
  %2025 = load i64, i64* %x00.i461, align 8
  %2026 = load i64, i64* %x694E5A8D.i, align 8
  %xor32.i493 = xor i64 %2025, %2026
  store i64 %xor32.i493, i64* %x01.i462, align 8
  %2027 = load i64*, i64** %out1.addr.i457, align 8
  %2028 = load i64, i64* %2027, align 8
  %2029 = load i64, i64* %x01.i462, align 8
  %xor33.i494 = xor i64 %2028, %2029
  %2030 = load i64*, i64** %out1.addr.i457, align 8
  store i64 %xor33.i494, i64* %2030, align 8
  %2031 = load i64, i64* %x699C585B.i, align 8
  %2032 = load i64, i64* %x4F9493BB.i, align 8
  %or34.i = or i64 %2031, %2032
  store i64 %or34.i, i64* %x6F9CDBFB.i, align 8
  %2033 = load i64, i64* %a6.addr.i456, align 8
  %2034 = load i64, i64* %x6F9CDBFB.i, align 8
  %and35.i = and i64 %2033, %2034
  store i64 %and35.i, i64* %x0000DBFB.i, align 8
  %2035 = load i64, i64* %a2.addr.i452, align 8
  %2036 = load i64, i64* %x0000DBFB.i, align 8
  %and36.i = and i64 %2035, %2036
  store i64 %and36.i, i64* %x00005151.i, align 8
  %2037 = load i64, i64* %x694E5A8D.i, align 8
  %2038 = load i64, i64* %x4F9493BB.i, align 8
  %xor37.i495 = xor i64 %2037, %2038
  store i64 %xor37.i495, i64* %x26DAC936.i, align 8
  %2039 = load i64, i64* %x00005151.i, align 8
  %2040 = load i64, i64* %x26DAC936.i, align 8
  %xor38.i = xor i64 %2039, %2040
  store i64 %xor38.i, i64* %x26DA9867.i, align 8
  %2041 = load i64, i64* %a5.addr.i455, align 8
  %2042 = load i64, i64* %x21101013.i, align 8
  %or39.i = or i64 %2041, %2042
  store i64 %or39.i, i64* %x21FF10FF.i, align 8
  %2043 = load i64, i64* %x0000DBFB.i, align 8
  %2044 = load i64, i64* %x21FF10FF.i, align 8
  %xor40.i496 = xor i64 %2043, %2044
  store i64 %xor40.i496, i64* %x21FFCB04.i, align 8
  %2045 = load i64, i64* %a5.addr.i455, align 8
  %2046 = load i64, i64* %x26DAC936.i, align 8
  %xor41.i497 = xor i64 %2045, %2046
  store i64 %xor41.i497, i64* %x2625C9C9.i, align 8
  %2047 = load i64, i64* %x21FFCB04.i, align 8
  %2048 = load i64, i64* %x2625C9C9.i, align 8
  %or42.i498 = or i64 %2047, %2048
  store i64 %or42.i498, i64* %x27FFCBCD.i, align 8
  %2049 = load i64, i64* %x27FFCBCD.i, align 8
  %2050 = load i64, i64* %a1.addr.i451, align 8
  %and43.i499 = and i64 %2049, %2050
  store i64 %and43.i499, i64* %x20.i465, align 8
  %2051 = load i64, i64* %x20.i465, align 8
  %2052 = load i64, i64* %x699C585B.i, align 8
  %xor44.i500 = xor i64 %2051, %2052
  store i64 %xor44.i500, i64* %x21.i466, align 8
  %2053 = load i64*, i64** %out3.addr.i459, align 8
  %2054 = load i64, i64* %2053, align 8
  %2055 = load i64, i64* %x21.i466, align 8
  %xor45.i501 = xor i64 %2054, %2055
  %2056 = load i64*, i64** %out3.addr.i459, align 8
  store i64 %xor45.i501, i64* %2056, align 8
  %2057 = load i64, i64* %x0000DBFB.i, align 8
  %2058 = load i64, i64* %x27FFCBCD.i, align 8
  %xor46.i = xor i64 %2057, %2058
  store i64 %xor46.i, i64* %x27FF1036.i, align 8
  %2059 = load i64, i64* %x003C003C.i, align 8
  %2060 = load i64, i64* %x27FF1036.i, align 8
  %or47.i502 = or i64 %2059, %2060
  store i64 %or47.i502, i64* %x27FF103E.i, align 8
  %2061 = load i64, i64* %x4F9493BB.i, align 8
  %neg48.i = xor i64 %2061, -1
  store i64 %neg48.i, i64* %xB06B6C44.i, align 8
  %2062 = load i64, i64* %x27FF103E.i, align 8
  %2063 = load i64, i64* %xB06B6C44.i, align 8
  %xor49.i503 = xor i64 %2062, %2063
  store i64 %xor49.i503, i64* %x97947C7A.i, align 8
  %2064 = load i64, i64* %x97947C7A.i, align 8
  %2065 = load i64, i64* %a1.addr.i451, align 8
  %neg50.i = xor i64 %2065, -1
  %and51.i504 = and i64 %2064, %neg50.i
  store i64 %and51.i504, i64* %x10.i463, align 8
  %2066 = load i64, i64* %x10.i463, align 8
  %2067 = load i64, i64* %x26DA9867.i, align 8
  %xor52.i505 = xor i64 %2066, %2067
  store i64 %xor52.i505, i64* %x11.i464, align 8
  %2068 = load i64*, i64** %out2.addr.i458, align 8
  %2069 = load i64, i64* %2068, align 8
  %2070 = load i64, i64* %x11.i464, align 8
  %xor53.i = xor i64 %2069, %2070
  %2071 = load i64*, i64** %out2.addr.i458, align 8
  store i64 %xor53.i, i64* %2071, align 8
  %2072 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 90), align 8
  %arrayidx361 = getelementptr inbounds i64, i64* %2072, i64 0
  %2073 = load i64, i64* %arrayidx361, align 8
  %2074 = load i64**, i64*** %k, align 8
  %arrayidx362 = getelementptr inbounds i64*, i64** %2074, i64 90
  %2075 = load i64*, i64** %arrayidx362, align 8
  %arrayidx363 = getelementptr inbounds i64, i64* %2075, i64 0
  %2076 = load i64, i64* %arrayidx363, align 8
  %xor364 = xor i64 %2073, %2076
  %2077 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 91), align 8
  %arrayidx365 = getelementptr inbounds i64, i64* %2077, i64 0
  %2078 = load i64, i64* %arrayidx365, align 8
  %2079 = load i64**, i64*** %k, align 8
  %arrayidx366 = getelementptr inbounds i64*, i64** %2079, i64 91
  %2080 = load i64*, i64** %arrayidx366, align 8
  %arrayidx367 = getelementptr inbounds i64, i64* %2080, i64 0
  %2081 = load i64, i64* %arrayidx367, align 8
  %xor368 = xor i64 %2078, %2081
  %2082 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 92), align 8
  %arrayidx369 = getelementptr inbounds i64, i64* %2082, i64 0
  %2083 = load i64, i64* %arrayidx369, align 8
  %2084 = load i64**, i64*** %k, align 8
  %arrayidx370 = getelementptr inbounds i64*, i64** %2084, i64 92
  %2085 = load i64*, i64** %arrayidx370, align 8
  %arrayidx371 = getelementptr inbounds i64, i64* %2085, i64 0
  %2086 = load i64, i64* %arrayidx371, align 8
  %xor372 = xor i64 %2083, %2086
  %2087 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 93), align 8
  %arrayidx373 = getelementptr inbounds i64, i64* %2087, i64 0
  %2088 = load i64, i64* %arrayidx373, align 8
  %2089 = load i64**, i64*** %k, align 8
  %arrayidx374 = getelementptr inbounds i64*, i64** %2089, i64 93
  %2090 = load i64*, i64** %arrayidx374, align 8
  %arrayidx375 = getelementptr inbounds i64, i64* %2090, i64 0
  %2091 = load i64, i64* %arrayidx375, align 8
  %xor376 = xor i64 %2088, %2091
  %2092 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 94), align 8
  %arrayidx377 = getelementptr inbounds i64, i64* %2092, i64 0
  %2093 = load i64, i64* %arrayidx377, align 8
  %2094 = load i64**, i64*** %k, align 8
  %arrayidx378 = getelementptr inbounds i64*, i64** %2094, i64 94
  %2095 = load i64*, i64** %arrayidx378, align 8
  %arrayidx379 = getelementptr inbounds i64, i64* %2095, i64 0
  %2096 = load i64, i64* %arrayidx379, align 8
  %xor380 = xor i64 %2093, %2096
  %2097 = load i64*, i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 1, i32 0, i64 95), align 8
  %arrayidx381 = getelementptr inbounds i64, i64* %2097, i64 0
  %2098 = load i64, i64* %arrayidx381, align 8
  %2099 = load i64**, i64*** %k, align 8
  %arrayidx382 = getelementptr inbounds i64*, i64** %2099, i64 95
  %2100 = load i64*, i64** %arrayidx382, align 8
  %arrayidx383 = getelementptr inbounds i64, i64* %2100, i64 0
  %2101 = load i64, i64* %arrayidx383, align 8
  %xor384 = xor i64 %2098, %2101
  store i64 %xor364, i64* %a1.addr.i405, align 8
  store i64 %xor368, i64* %a2.addr.i406, align 8
  store i64 %xor372, i64* %a3.addr.i407, align 8
  store i64 %xor376, i64* %a4.addr.i408, align 8
  store i64 %xor380, i64* %a5.addr.i409, align 8
  store i64 %xor384, i64* %a6.addr.i410, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 4), i64** %out1.addr.i411, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 26), i64** %out2.addr.i412, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 14), i64** %out3.addr.i413, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 20), i64** %out4.addr.i414, align 8
  %2102 = load i64, i64* %a3.addr.i407, align 8
  %2103 = load i64, i64* %a2.addr.i406, align 8
  %neg.i423 = xor i64 %2103, -1
  %and.i424 = and i64 %2102, %neg.i423
  store i64 %and.i424, i64* %x0C0C0C0C.i, align 8
  %2104 = load i64, i64* %a5.addr.i409, align 8
  %2105 = load i64, i64* %a3.addr.i407, align 8
  %neg1.i = xor i64 %2105, -1
  %and2.i425 = and i64 %2104, %neg1.i
  store i64 %and2.i425, i64* %x0000F0F0.i, align 8
  %2106 = load i64, i64* %a4.addr.i408, align 8
  %2107 = load i64, i64* %x0000F0F0.i, align 8
  %xor.i426 = xor i64 %2106, %2107
  store i64 %xor.i426, i64* %x00FFF00F.i, align 8
  %2108 = load i64, i64* %a1.addr.i405, align 8
  %2109 = load i64, i64* %x00FFF00F.i, align 8
  %and3.i = and i64 %2108, %2109
  store i64 %and3.i, i64* %x00555005.i, align 8
  %2110 = load i64, i64* %x00555005.i, align 8
  %2111 = load i64, i64* %x0C0C0C0C.i, align 8
  %neg4.i427 = xor i64 %2111, -1
  %and5.i428 = and i64 %2110, %neg4.i427
  store i64 %and5.i428, i64* %x00515001.i, align 8
  %2112 = load i64, i64* %a2.addr.i406, align 8
  %2113 = load i64, i64* %x00FFF00F.i, align 8
  %neg6.i = xor i64 %2113, -1
  %and7.i = and i64 %2112, %neg6.i
  store i64 %and7.i, i64* %x33000330.i, align 8
  %2114 = load i64, i64* %a1.addr.i405, align 8
  %2115 = load i64, i64* %x33000330.i, align 8
  %or.i429 = or i64 %2114, %2115
  store i64 %or.i429, i64* %x77555775.i, align 8
  %2116 = load i64, i64* %a2.addr.i406, align 8
  %2117 = load i64, i64* %a3.addr.i407, align 8
  %neg8.i430 = xor i64 %2117, -1
  %and9.i431 = and i64 %2116, %neg8.i430
  store i64 %and9.i431, i64* %x30303030.i, align 8
  %2118 = load i64, i64* %a5.addr.i409, align 8
  %2119 = load i64, i64* %x30303030.i, align 8
  %xor10.i = xor i64 %2118, %2119
  store i64 %xor10.i, i64* %x3030CFCF.i, align 8
  %2120 = load i64, i64* %x77555775.i, align 8
  %2121 = load i64, i64* %x3030CFCF.i, align 8
  %and11.i432 = and i64 %2120, %2121
  store i64 %and11.i432, i64* %x30104745.i, align 8
  %2122 = load i64, i64* %x00555005.i, align 8
  %2123 = load i64, i64* %x30104745.i, align 8
  %or12.i = or i64 %2122, %2123
  store i64 %or12.i, i64* %x30555745.i, align 8
  %2124 = load i64, i64* %x00FFF00F.i, align 8
  %neg13.i = xor i64 %2124, -1
  store i64 %neg13.i, i64* %xFF000FF0.i, align 8
  %2125 = load i64, i64* %x30104745.i, align 8
  %2126 = load i64, i64* %xFF000FF0.i, align 8
  %xor14.i = xor i64 %2125, %2126
  store i64 %xor14.i, i64* %xCF1048B5.i, align 8
  %2127 = load i64, i64* %a3.addr.i407, align 8
  %2128 = load i64, i64* %x77555775.i, align 8
  %neg15.i = xor i64 %2128, -1
  %and16.i433 = and i64 %2127, %neg15.i
  store i64 %and16.i433, i64* %x080A080A.i, align 8
  %2129 = load i64, i64* %xCF1048B5.i, align 8
  %2130 = load i64, i64* %x080A080A.i, align 8
  %xor17.i = xor i64 %2129, %2130
  store i64 %xor17.i, i64* %xC71A40BF.i, align 8
  %2131 = load i64, i64* %x0C0C0C0C.i, align 8
  %2132 = load i64, i64* %xC71A40BF.i, align 8
  %xor18.i434 = xor i64 %2131, %2132
  store i64 %xor18.i434, i64* %xCB164CB3.i, align 8
  %2133 = load i64, i64* %x00515001.i, align 8
  %2134 = load i64, i64* %a6.addr.i410, align 8
  %or19.i = or i64 %2133, %2134
  store i64 %or19.i, i64* %x10.i417, align 8
  %2135 = load i64, i64* %x10.i417, align 8
  %2136 = load i64, i64* %xCB164CB3.i, align 8
  %xor20.i = xor i64 %2135, %2136
  store i64 %xor20.i, i64* %x11.i418, align 8
  %2137 = load i64*, i64** %out2.addr.i412, align 8
  %2138 = load i64, i64* %2137, align 8
  %2139 = load i64, i64* %x11.i418, align 8
  %xor21.i435 = xor i64 %2138, %2139
  %2140 = load i64*, i64** %out2.addr.i412, align 8
  store i64 %xor21.i435, i64* %2140, align 8
  %2141 = load i64, i64* %a1.addr.i405, align 8
  %2142 = load i64, i64* %xCB164CB3.i, align 8
  %xor22.i = xor i64 %2141, %2142
  store i64 %xor22.i, i64* %x9E4319E6.i, align 8
  %2143 = load i64, i64* %a5.addr.i409, align 8
  %2144 = load i64, i64* %x9E4319E6.i, align 8
  %and23.i436 = and i64 %2143, %2144
  store i64 %and23.i436, i64* %x000019E6.i, align 8
  %2145 = load i64, i64* %a2.addr.i406, align 8
  %2146 = load i64, i64* %xC71A40BF.i, align 8
  %xor24.i = xor i64 %2145, %2146
  store i64 %xor24.i, i64* %xF429738C.i, align 8
  %2147 = load i64, i64* %x000019E6.i, align 8
  %2148 = load i64, i64* %xF429738C.i, align 8
  %xor25.i = xor i64 %2147, %2148
  store i64 %xor25.i, i64* %xF4296A6A.i, align 8
  %2149 = load i64, i64* %x33000330.i, align 8
  %2150 = load i64, i64* %xF4296A6A.i, align 8
  %xor26.i = xor i64 %2149, %2150
  store i64 %xor26.i, i64* %xC729695A.i, align 8
  %2151 = load i64, i64* %x30555745.i, align 8
  %2152 = load i64, i64* %xF4296A6A.i, align 8
  %xor27.i437 = xor i64 %2151, %2152
  store i64 %xor27.i437, i64* %xC47C3D2F.i, align 8
  %2153 = load i64, i64* %a2.addr.i406, align 8
  %2154 = load i64, i64* %xC47C3D2F.i, align 8
  %or28.i438 = or i64 %2153, %2154
  store i64 %or28.i438, i64* %xF77F3F3F.i, align 8
  %2155 = load i64, i64* %a5.addr.i409, align 8
  %2156 = load i64, i64* %x9E4319E6.i, align 8
  %xor29.i = xor i64 %2155, %2156
  store i64 %xor29.i, i64* %x9E43E619.i, align 8
  %2157 = load i64, i64* %xF77F3F3F.i, align 8
  %2158 = load i64, i64* %x9E43E619.i, align 8
  %xor30.i = xor i64 %2157, %2158
  store i64 %xor30.i, i64* %x693CD926.i, align 8
  %2159 = load i64, i64* %x30555745.i, align 8
  %2160 = load i64, i64* %a6.addr.i410, align 8
  %and31.i439 = and i64 %2159, %2160
  store i64 %and31.i439, i64* %x20.i419, align 8
  %2161 = load i64, i64* %x20.i419, align 8
  %2162 = load i64, i64* %x693CD926.i, align 8
  %xor32.i440 = xor i64 %2161, %2162
  store i64 %xor32.i440, i64* %x21.i420, align 8
  %2163 = load i64*, i64** %out3.addr.i413, align 8
  %2164 = load i64, i64* %2163, align 8
  %2165 = load i64, i64* %x21.i420, align 8
  %xor33.i = xor i64 %2164, %2165
  %2166 = load i64*, i64** %out3.addr.i413, align 8
  store i64 %xor33.i, i64* %2166, align 8
  %2167 = load i64, i64* %x3030CFCF.i, align 8
  %2168 = load i64, i64* %xC729695A.i, align 8
  %xor34.i = xor i64 %2167, %2168
  store i64 %xor34.i, i64* %xF719A695.i, align 8
  %2169 = load i64, i64* %a4.addr.i408, align 8
  %2170 = load i64, i64* %xF429738C.i, align 8
  %or35.i = or i64 %2169, %2170
  store i64 %or35.i, i64* %xF4FF73FF.i, align 8
  %2171 = load i64, i64* %xF719A695.i, align 8
  %2172 = load i64, i64* %xF4FF73FF.i, align 8
  %xor36.i441 = xor i64 %2171, %2172
  store i64 %xor36.i441, i64* %x03E6D56A.i, align 8
  %2173 = load i64, i64* %a1.addr.i405, align 8
  %2174 = load i64, i64* %x03E6D56A.i, align 8
  %xor37.i442 = xor i64 %2173, %2174
  store i64 %xor37.i442, i64* %x56B3803F.i, align 8
  %2175 = load i64, i64* %x56B3803F.i, align 8
  %2176 = load i64, i64* %a6.addr.i410, align 8
  %and38.i443 = and i64 %2175, %2176
  store i64 %and38.i443, i64* %x30.i421, align 8
  %2177 = load i64, i64* %x30.i421, align 8
  %2178 = load i64, i64* %xC729695A.i, align 8
  %xor39.i444 = xor i64 %2177, %2178
  store i64 %xor39.i444, i64* %x31.i422, align 8
  %2179 = load i64*, i64** %out4.addr.i414, align 8
  %2180 = load i64, i64* %2179, align 8
  %2181 = load i64, i64* %x31.i422, align 8
  %xor40.i445 = xor i64 %2180, %2181
  %2182 = load i64*, i64** %out4.addr.i414, align 8
  store i64 %xor40.i445, i64* %2182, align 8
  %2183 = load i64, i64* %xF719A695.i, align 8
  %2184 = load i64, i64* %a4.addr.i408, align 8
  %neg41.i = xor i64 %2184, -1
  %and42.i446 = and i64 %2183, %neg41.i
  store i64 %and42.i446, i64* %xF700A600.i, align 8
  %2185 = load i64, i64* %x693CD926.i, align 8
  %2186 = load i64, i64* %xF700A600.i, align 8
  %and43.i = and i64 %2185, %2186
  store i64 %and43.i, i64* %x61008000.i, align 8
  %2187 = load i64, i64* %x00515001.i, align 8
  %2188 = load i64, i64* %x03E6D56A.i, align 8
  %xor44.i447 = xor i64 %2187, %2188
  store i64 %xor44.i447, i64* %x03B7856B.i, align 8
  %2189 = load i64, i64* %x61008000.i, align 8
  %2190 = load i64, i64* %x03B7856B.i, align 8
  %xor45.i448 = xor i64 %2189, %2190
  store i64 %xor45.i448, i64* %x62B7056B.i, align 8
  %2191 = load i64, i64* %x62B7056B.i, align 8
  %2192 = load i64, i64* %a6.addr.i410, align 8
  %or46.i449 = or i64 %2191, %2192
  store i64 %or46.i449, i64* %x00.i415, align 8
  %2193 = load i64, i64* %x00.i415, align 8
  %2194 = load i64, i64* %xC729695A.i, align 8
  %xor47.i450 = xor i64 %2193, %2194
  store i64 %xor47.i450, i64* %x01.i416, align 8
  %2195 = load i64*, i64** %out1.addr.i411, align 8
  %2196 = load i64, i64* %2195, align 8
  %2197 = load i64, i64* %x01.i416, align 8
  %xor48.i = xor i64 %2196, %2197
  %2198 = load i64*, i64** %out1.addr.i411, align 8
  store i64 %xor48.i, i64* %2198, align 8
  %2199 = load i64**, i64*** %k, align 8
  %add.ptr = getelementptr inbounds i64*, i64** %2199, i64 96
  store i64** %add.ptr, i64*** %k, align 8
  %2200 = load i32, i32* %rounds_and_swapped, align 4
  %dec = add nsw i32 %2200, -1
  store i32 %dec, i32* %rounds_and_swapped, align 4
  %tobool385 = icmp ne i32 %dec, 0
  br i1 %tobool385, label %if.then386, label %if.end387

if.then386:                                       ; preds = %swap
  br label %start

if.end387:                                        ; preds = %swap
  %2201 = load i64**, i64*** %k, align 8
  %add.ptr388 = getelementptr inbounds i64*, i64** %2201, i64 -816
  store i64** %add.ptr388, i64*** %k, align 8
  store i32 264, i32* %rounds_and_swapped, align 4
  %2202 = load i32, i32* %iterations, align 4
  %dec389 = add nsw i32 %2202, -1
  store i32 %dec389, i32* %iterations, align 4
  %tobool390 = icmp ne i32 %dec389, 0
  br i1 %tobool390, label %if.then391, label %if.end392

if.then391:                                       ; preds = %if.end387
  br label %swap

if.end392:                                        ; preds = %if.end387
  br label %return

next:                                             ; preds = %if.then191
  %2203 = load i64**, i64*** %k, align 8
  %add.ptr393 = getelementptr inbounds i64*, i64** %2203, i64 -720
  store i64** %add.ptr393, i64*** %k, align 8
  store i32 8, i32* %rounds_and_swapped, align 4
  %2204 = load i32, i32* %iterations, align 4
  %dec394 = add nsw i32 %2204, -1
  store i32 %dec394, i32* %iterations, align 4
  %tobool395 = icmp ne i32 %dec394, 0
  br i1 %tobool395, label %if.then396, label %if.end397

if.then396:                                       ; preds = %next
  br label %start

if.end397:                                        ; preds = %next
  br label %return

finalize_keys:                                    ; preds = %if.then
  store i32 0, i32* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 9), align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 2, i64 0), i64** %kp.i, align 8
  store i32 0, i32* %ic.i, align 4
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i, %finalize_keys
  %2205 = load i32, i32* %ic.i, align 4
  %cmp.i = icmp slt i32 %2205, 8
  br i1 %cmp.i, label %for.body.i, label %DES_bs_finalize_keys.exit

for.body.i:                                       ; preds = %for.cond.i
  %2206 = load i32, i32* %ic.i, align 4
  %idxprom.i = sext i32 %2206 to i64
  %arrayidx.i = getelementptr inbounds [8 x [8 x i64]], [8 x [8 x i64]]* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 7, i32 0), i64 0, i64 %idxprom.i
  %arrayidx1.i = getelementptr inbounds [8 x i64], [8 x i64]* %arrayidx.i, i64 0, i64 0
  store i64* %arrayidx1.i, i64** %vp.i, align 8
  %2207 = load i64*, i64** %vp.i, align 8
  %2208 = load i64, i64* %2207, align 8
  store i64 %2208, i64* %v0.i, align 8
  %2209 = load i64*, i64** %vp.i, align 8
  %arrayidx3.i = getelementptr inbounds i64, i64* %2209, i64 1
  %2210 = load i64, i64* %arrayidx3.i, align 8
  store i64 %2210, i64* %v1.i, align 8
  %2211 = load i64*, i64** %vp.i, align 8
  %arrayidx4.i = getelementptr inbounds i64, i64* %2211, i64 2
  %2212 = load i64, i64* %arrayidx4.i, align 8
  store i64 %2212, i64* %v2.i, align 8
  %2213 = load i64*, i64** %vp.i, align 8
  %arrayidx5.i = getelementptr inbounds i64, i64* %2213, i64 3
  %2214 = load i64, i64* %arrayidx5.i, align 8
  store i64 %2214, i64* %v3.i, align 8
  %2215 = load i64*, i64** %vp.i, align 8
  %arrayidx6.i = getelementptr inbounds i64, i64* %2215, i64 4
  %2216 = load i64, i64* %arrayidx6.i, align 8
  store i64 %2216, i64* %v4.i, align 8
  %2217 = load i64*, i64** %vp.i, align 8
  %arrayidx7.i = getelementptr inbounds i64, i64* %2217, i64 5
  %2218 = load i64, i64* %arrayidx7.i, align 8
  store i64 %2218, i64* %v5.i, align 8
  %2219 = load i64*, i64** %vp.i, align 8
  %arrayidx8.i = getelementptr inbounds i64, i64* %2219, i64 6
  %2220 = load i64, i64* %arrayidx8.i, align 8
  store i64 %2220, i64* %v6.i, align 8
  %2221 = load i64*, i64** %vp.i, align 8
  %arrayidx9.i = getelementptr inbounds i64, i64* %2221, i64 7
  %2222 = load i64, i64* %arrayidx9.i, align 8
  store i64 %2222, i64* %v7.i, align 8
  store i64 72340172838076673, i64* %m.i, align 8
  %2223 = load i64, i64* %v0.i, align 8
  %2224 = load i64, i64* %m.i, align 8
  %and.i398 = and i64 %2223, %2224
  store i64 %and.i398, i64* %va.i, align 8
  %2225 = load i64, i64* %v1.i, align 8
  %2226 = load i64, i64* %m.i, align 8
  %and10.i = and i64 %2225, %2226
  store i64 %and10.i, i64* %tmp.i, align 8
  %2227 = load i64, i64* %tmp.i, align 8
  %shl.i = shl i64 %2227, 1
  store i64 %shl.i, i64* %vb.i, align 8
  %2228 = load i64, i64* %v2.i, align 8
  %2229 = load i64, i64* %m.i, align 8
  %and11.i = and i64 %2228, %2229
  store i64 %and11.i, i64* %tmp.i, align 8
  %2230 = load i64, i64* %tmp.i, align 8
  %shl12.i = shl i64 %2230, 2
  store i64 %shl12.i, i64* %tmp.i, align 8
  %2231 = load i64, i64* %va.i, align 8
  %2232 = load i64, i64* %tmp.i, align 8
  %or.i399 = or i64 %2231, %2232
  store i64 %or.i399, i64* %va.i, align 8
  %2233 = load i64, i64* %v3.i, align 8
  %2234 = load i64, i64* %m.i, align 8
  %and13.i400 = and i64 %2233, %2234
  store i64 %and13.i400, i64* %tmp.i, align 8
  %2235 = load i64, i64* %tmp.i, align 8
  %shl14.i = shl i64 %2235, 3
  store i64 %shl14.i, i64* %tmp.i, align 8
  %2236 = load i64, i64* %vb.i, align 8
  %2237 = load i64, i64* %tmp.i, align 8
  %or15.i401 = or i64 %2236, %2237
  store i64 %or15.i401, i64* %vb.i, align 8
  %2238 = load i64, i64* %v4.i, align 8
  %2239 = load i64, i64* %m.i, align 8
  %and16.i = and i64 %2238, %2239
  store i64 %and16.i, i64* %tmp.i, align 8
  %2240 = load i64, i64* %tmp.i, align 8
  %shl17.i = shl i64 %2240, 4
  store i64 %shl17.i, i64* %tmp.i, align 8
  %2241 = load i64, i64* %va.i, align 8
  %2242 = load i64, i64* %tmp.i, align 8
  %or18.i = or i64 %2241, %2242
  store i64 %or18.i, i64* %va.i, align 8
  %2243 = load i64, i64* %v5.i, align 8
  %2244 = load i64, i64* %m.i, align 8
  %and19.i = and i64 %2243, %2244
  store i64 %and19.i, i64* %tmp.i, align 8
  %2245 = load i64, i64* %tmp.i, align 8
  %shl20.i = shl i64 %2245, 5
  store i64 %shl20.i, i64* %tmp.i, align 8
  %2246 = load i64, i64* %vb.i, align 8
  %2247 = load i64, i64* %tmp.i, align 8
  %or21.i = or i64 %2246, %2247
  store i64 %or21.i, i64* %vb.i, align 8
  %2248 = load i64, i64* %v6.i, align 8
  %2249 = load i64, i64* %m.i, align 8
  %and22.i = and i64 %2248, %2249
  store i64 %and22.i, i64* %tmp.i, align 8
  %2250 = load i64, i64* %tmp.i, align 8
  %shl23.i = shl i64 %2250, 6
  store i64 %shl23.i, i64* %tmp.i, align 8
  %2251 = load i64, i64* %va.i, align 8
  %2252 = load i64, i64* %tmp.i, align 8
  %or24.i402 = or i64 %2251, %2252
  store i64 %or24.i402, i64* %va.i, align 8
  %2253 = load i64, i64* %v7.i, align 8
  %2254 = load i64, i64* %m.i, align 8
  %and25.i = and i64 %2253, %2254
  store i64 %and25.i, i64* %tmp.i, align 8
  %2255 = load i64, i64* %tmp.i, align 8
  %shl26.i = shl i64 %2255, 7
  store i64 %shl26.i, i64* %tmp.i, align 8
  %2256 = load i64, i64* %vb.i, align 8
  %2257 = load i64, i64* %tmp.i, align 8
  %or27.i = or i64 %2256, %2257
  store i64 %or27.i, i64* %vb.i, align 8
  %2258 = load i64, i64* %va.i, align 8
  %2259 = load i64, i64* %vb.i, align 8
  %or28.i = or i64 %2258, %2259
  %2260 = load i64*, i64** %kp.i, align 8
  store i64 %or28.i, i64* %2260, align 8
  %2261 = load i64*, i64** %kp.i, align 8
  %incdec.ptr.i = getelementptr inbounds i64, i64* %2261, i32 1
  store i64* %incdec.ptr.i, i64** %kp.i, align 8
  store i64 144680345676153346, i64* %m30.i, align 8
  %2262 = load i64, i64* %v0.i, align 8
  %2263 = load i64, i64* %m30.i, align 8
  %and37.i = and i64 %2262, %2263
  store i64 %and37.i, i64* %tmp36.i, align 8
  %2264 = load i64, i64* %tmp36.i, align 8
  %shr.i = lshr i64 %2264, 1
  store i64 %shr.i, i64* %va32.i, align 8
  %2265 = load i64, i64* %v1.i, align 8
  %2266 = load i64, i64* %m30.i, align 8
  %and38.i = and i64 %2265, %2266
  store i64 %and38.i, i64* %vb34.i, align 8
  %2267 = load i64, i64* %v2.i, align 8
  %2268 = load i64, i64* %m30.i, align 8
  %and39.i = and i64 %2267, %2268
  store i64 %and39.i, i64* %tmp36.i, align 8
  %2269 = load i64, i64* %tmp36.i, align 8
  %shl40.i = shl i64 %2269, 1
  store i64 %shl40.i, i64* %tmp36.i, align 8
  %2270 = load i64, i64* %va32.i, align 8
  %2271 = load i64, i64* %tmp36.i, align 8
  %or41.i = or i64 %2270, %2271
  store i64 %or41.i, i64* %va32.i, align 8
  %2272 = load i64, i64* %v3.i, align 8
  %2273 = load i64, i64* %m30.i, align 8
  %and42.i = and i64 %2272, %2273
  store i64 %and42.i, i64* %tmp36.i, align 8
  %2274 = load i64, i64* %tmp36.i, align 8
  %shl43.i = shl i64 %2274, 2
  store i64 %shl43.i, i64* %tmp36.i, align 8
  %2275 = load i64, i64* %vb34.i, align 8
  %2276 = load i64, i64* %tmp36.i, align 8
  %or44.i = or i64 %2275, %2276
  store i64 %or44.i, i64* %vb34.i, align 8
  %2277 = load i64, i64* %v4.i, align 8
  %2278 = load i64, i64* %m30.i, align 8
  %and45.i = and i64 %2277, %2278
  store i64 %and45.i, i64* %tmp36.i, align 8
  %2279 = load i64, i64* %tmp36.i, align 8
  %shl46.i = shl i64 %2279, 3
  store i64 %shl46.i, i64* %tmp36.i, align 8
  %2280 = load i64, i64* %va32.i, align 8
  %2281 = load i64, i64* %tmp36.i, align 8
  %or47.i = or i64 %2280, %2281
  store i64 %or47.i, i64* %va32.i, align 8
  %2282 = load i64, i64* %v5.i, align 8
  %2283 = load i64, i64* %m30.i, align 8
  %and48.i = and i64 %2282, %2283
  store i64 %and48.i, i64* %tmp36.i, align 8
  %2284 = load i64, i64* %tmp36.i, align 8
  %shl49.i = shl i64 %2284, 4
  store i64 %shl49.i, i64* %tmp36.i, align 8
  %2285 = load i64, i64* %vb34.i, align 8
  %2286 = load i64, i64* %tmp36.i, align 8
  %or50.i403 = or i64 %2285, %2286
  store i64 %or50.i403, i64* %vb34.i, align 8
  %2287 = load i64, i64* %v6.i, align 8
  %2288 = load i64, i64* %m30.i, align 8
  %and51.i = and i64 %2287, %2288
  store i64 %and51.i, i64* %tmp36.i, align 8
  %2289 = load i64, i64* %tmp36.i, align 8
  %shl52.i = shl i64 %2289, 5
  store i64 %shl52.i, i64* %tmp36.i, align 8
  %2290 = load i64, i64* %va32.i, align 8
  %2291 = load i64, i64* %tmp36.i, align 8
  %or53.i404 = or i64 %2290, %2291
  store i64 %or53.i404, i64* %va32.i, align 8
  %2292 = load i64, i64* %v7.i, align 8
  %2293 = load i64, i64* %m30.i, align 8
  %and54.i = and i64 %2292, %2293
  store i64 %and54.i, i64* %tmp36.i, align 8
  %2294 = load i64, i64* %tmp36.i, align 8
  %shl55.i = shl i64 %2294, 6
  store i64 %shl55.i, i64* %tmp36.i, align 8
  %2295 = load i64, i64* %vb34.i, align 8
  %2296 = load i64, i64* %tmp36.i, align 8
  %or56.i = or i64 %2295, %2296
  store i64 %or56.i, i64* %vb34.i, align 8
  %2297 = load i64, i64* %va32.i, align 8
  %2298 = load i64, i64* %vb34.i, align 8
  %or57.i = or i64 %2297, %2298
  %2299 = load i64*, i64** %kp.i, align 8
  store i64 %or57.i, i64* %2299, align 8
  %2300 = load i64*, i64** %kp.i, align 8
  %incdec.ptr58.i = getelementptr inbounds i64, i64* %2300, i32 1
  store i64* %incdec.ptr58.i, i64** %kp.i, align 8
  store i64 289360691352306692, i64* %m60.i, align 8
  %2301 = load i64, i64* %v0.i, align 8
  %2302 = load i64, i64* %m60.i, align 8
  %and67.i = and i64 %2301, %2302
  store i64 %and67.i, i64* %tmp66.i, align 8
  %2303 = load i64, i64* %tmp66.i, align 8
  %shr68.i = lshr i64 %2303, 2
  store i64 %shr68.i, i64* %va62.i, align 8
  %2304 = load i64, i64* %v1.i, align 8
  %2305 = load i64, i64* %m60.i, align 8
  %and69.i = and i64 %2304, %2305
  store i64 %and69.i, i64* %tmp66.i, align 8
  %2306 = load i64, i64* %tmp66.i, align 8
  %shr70.i = lshr i64 %2306, 1
  store i64 %shr70.i, i64* %vb64.i, align 8
  %2307 = load i64, i64* %v2.i, align 8
  %2308 = load i64, i64* %m60.i, align 8
  %and71.i = and i64 %2307, %2308
  store i64 %and71.i, i64* %tmp66.i, align 8
  %2309 = load i64, i64* %va62.i, align 8
  %2310 = load i64, i64* %tmp66.i, align 8
  %or72.i = or i64 %2309, %2310
  store i64 %or72.i, i64* %va62.i, align 8
  %2311 = load i64, i64* %v3.i, align 8
  %2312 = load i64, i64* %m60.i, align 8
  %and73.i = and i64 %2311, %2312
  store i64 %and73.i, i64* %tmp66.i, align 8
  %2313 = load i64, i64* %tmp66.i, align 8
  %shl74.i = shl i64 %2313, 1
  store i64 %shl74.i, i64* %tmp66.i, align 8
  %2314 = load i64, i64* %vb64.i, align 8
  %2315 = load i64, i64* %tmp66.i, align 8
  %or75.i = or i64 %2314, %2315
  store i64 %or75.i, i64* %vb64.i, align 8
  %2316 = load i64, i64* %v4.i, align 8
  %2317 = load i64, i64* %m60.i, align 8
  %and76.i = and i64 %2316, %2317
  store i64 %and76.i, i64* %tmp66.i, align 8
  %2318 = load i64, i64* %tmp66.i, align 8
  %shl77.i = shl i64 %2318, 2
  store i64 %shl77.i, i64* %tmp66.i, align 8
  %2319 = load i64, i64* %va62.i, align 8
  %2320 = load i64, i64* %tmp66.i, align 8
  %or78.i = or i64 %2319, %2320
  store i64 %or78.i, i64* %va62.i, align 8
  %2321 = load i64, i64* %v5.i, align 8
  %2322 = load i64, i64* %m60.i, align 8
  %and79.i = and i64 %2321, %2322
  store i64 %and79.i, i64* %tmp66.i, align 8
  %2323 = load i64, i64* %tmp66.i, align 8
  %shl80.i = shl i64 %2323, 3
  store i64 %shl80.i, i64* %tmp66.i, align 8
  %2324 = load i64, i64* %vb64.i, align 8
  %2325 = load i64, i64* %tmp66.i, align 8
  %or81.i = or i64 %2324, %2325
  store i64 %or81.i, i64* %vb64.i, align 8
  %2326 = load i64, i64* %v6.i, align 8
  %2327 = load i64, i64* %m60.i, align 8
  %and82.i = and i64 %2326, %2327
  store i64 %and82.i, i64* %tmp66.i, align 8
  %2328 = load i64, i64* %tmp66.i, align 8
  %shl83.i = shl i64 %2328, 4
  store i64 %shl83.i, i64* %tmp66.i, align 8
  %2329 = load i64, i64* %va62.i, align 8
  %2330 = load i64, i64* %tmp66.i, align 8
  %or84.i = or i64 %2329, %2330
  store i64 %or84.i, i64* %va62.i, align 8
  %2331 = load i64, i64* %v7.i, align 8
  %2332 = load i64, i64* %m60.i, align 8
  %and85.i = and i64 %2331, %2332
  store i64 %and85.i, i64* %tmp66.i, align 8
  %2333 = load i64, i64* %tmp66.i, align 8
  %shl86.i = shl i64 %2333, 5
  store i64 %shl86.i, i64* %tmp66.i, align 8
  %2334 = load i64, i64* %vb64.i, align 8
  %2335 = load i64, i64* %tmp66.i, align 8
  %or87.i = or i64 %2334, %2335
  store i64 %or87.i, i64* %vb64.i, align 8
  %2336 = load i64, i64* %va62.i, align 8
  %2337 = load i64, i64* %vb64.i, align 8
  %or88.i = or i64 %2336, %2337
  %2338 = load i64*, i64** %kp.i, align 8
  store i64 %or88.i, i64* %2338, align 8
  %2339 = load i64*, i64** %kp.i, align 8
  %incdec.ptr89.i = getelementptr inbounds i64, i64* %2339, i32 1
  store i64* %incdec.ptr89.i, i64** %kp.i, align 8
  store i64 578721382704613384, i64* %m91.i, align 8
  %2340 = load i64, i64* %v0.i, align 8
  %2341 = load i64, i64* %m91.i, align 8
  %and98.i = and i64 %2340, %2341
  store i64 %and98.i, i64* %tmp97.i, align 8
  %2342 = load i64, i64* %tmp97.i, align 8
  %shr99.i = lshr i64 %2342, 3
  store i64 %shr99.i, i64* %va93.i, align 8
  %2343 = load i64, i64* %v1.i, align 8
  %2344 = load i64, i64* %m91.i, align 8
  %and100.i = and i64 %2343, %2344
  store i64 %and100.i, i64* %tmp97.i, align 8
  %2345 = load i64, i64* %tmp97.i, align 8
  %shr101.i = lshr i64 %2345, 2
  store i64 %shr101.i, i64* %vb95.i, align 8
  %2346 = load i64, i64* %v2.i, align 8
  %2347 = load i64, i64* %m91.i, align 8
  %and102.i = and i64 %2346, %2347
  store i64 %and102.i, i64* %tmp97.i, align 8
  %2348 = load i64, i64* %tmp97.i, align 8
  %shr103.i = lshr i64 %2348, 1
  store i64 %shr103.i, i64* %tmp97.i, align 8
  %2349 = load i64, i64* %va93.i, align 8
  %2350 = load i64, i64* %tmp97.i, align 8
  %or104.i = or i64 %2349, %2350
  store i64 %or104.i, i64* %va93.i, align 8
  %2351 = load i64, i64* %v3.i, align 8
  %2352 = load i64, i64* %m91.i, align 8
  %and105.i = and i64 %2351, %2352
  store i64 %and105.i, i64* %tmp97.i, align 8
  %2353 = load i64, i64* %vb95.i, align 8
  %2354 = load i64, i64* %tmp97.i, align 8
  %or106.i = or i64 %2353, %2354
  store i64 %or106.i, i64* %vb95.i, align 8
  %2355 = load i64, i64* %v4.i, align 8
  %2356 = load i64, i64* %m91.i, align 8
  %and107.i = and i64 %2355, %2356
  store i64 %and107.i, i64* %tmp97.i, align 8
  %2357 = load i64, i64* %tmp97.i, align 8
  %shl108.i = shl i64 %2357, 1
  store i64 %shl108.i, i64* %tmp97.i, align 8
  %2358 = load i64, i64* %va93.i, align 8
  %2359 = load i64, i64* %tmp97.i, align 8
  %or109.i = or i64 %2358, %2359
  store i64 %or109.i, i64* %va93.i, align 8
  %2360 = load i64, i64* %v5.i, align 8
  %2361 = load i64, i64* %m91.i, align 8
  %and110.i = and i64 %2360, %2361
  store i64 %and110.i, i64* %tmp97.i, align 8
  %2362 = load i64, i64* %tmp97.i, align 8
  %shl111.i = shl i64 %2362, 2
  store i64 %shl111.i, i64* %tmp97.i, align 8
  %2363 = load i64, i64* %vb95.i, align 8
  %2364 = load i64, i64* %tmp97.i, align 8
  %or112.i = or i64 %2363, %2364
  store i64 %or112.i, i64* %vb95.i, align 8
  %2365 = load i64, i64* %v6.i, align 8
  %2366 = load i64, i64* %m91.i, align 8
  %and113.i = and i64 %2365, %2366
  store i64 %and113.i, i64* %tmp97.i, align 8
  %2367 = load i64, i64* %tmp97.i, align 8
  %shl114.i = shl i64 %2367, 3
  store i64 %shl114.i, i64* %tmp97.i, align 8
  %2368 = load i64, i64* %va93.i, align 8
  %2369 = load i64, i64* %tmp97.i, align 8
  %or115.i = or i64 %2368, %2369
  store i64 %or115.i, i64* %va93.i, align 8
  %2370 = load i64, i64* %v7.i, align 8
  %2371 = load i64, i64* %m91.i, align 8
  %and116.i = and i64 %2370, %2371
  store i64 %and116.i, i64* %tmp97.i, align 8
  %2372 = load i64, i64* %tmp97.i, align 8
  %shl117.i = shl i64 %2372, 4
  store i64 %shl117.i, i64* %tmp97.i, align 8
  %2373 = load i64, i64* %vb95.i, align 8
  %2374 = load i64, i64* %tmp97.i, align 8
  %or118.i = or i64 %2373, %2374
  store i64 %or118.i, i64* %vb95.i, align 8
  %2375 = load i64, i64* %va93.i, align 8
  %2376 = load i64, i64* %vb95.i, align 8
  %or119.i = or i64 %2375, %2376
  %2377 = load i64*, i64** %kp.i, align 8
  store i64 %or119.i, i64* %2377, align 8
  %2378 = load i64*, i64** %kp.i, align 8
  %incdec.ptr120.i = getelementptr inbounds i64, i64* %2378, i32 1
  store i64* %incdec.ptr120.i, i64** %kp.i, align 8
  store i64 1157442765409226768, i64* %m122.i, align 8
  %2379 = load i64, i64* %v0.i, align 8
  %2380 = load i64, i64* %m122.i, align 8
  %and129.i = and i64 %2379, %2380
  store i64 %and129.i, i64* %tmp128.i, align 8
  %2381 = load i64, i64* %tmp128.i, align 8
  %shr130.i = lshr i64 %2381, 4
  store i64 %shr130.i, i64* %va124.i, align 8
  %2382 = load i64, i64* %v1.i, align 8
  %2383 = load i64, i64* %m122.i, align 8
  %and131.i = and i64 %2382, %2383
  store i64 %and131.i, i64* %tmp128.i, align 8
  %2384 = load i64, i64* %tmp128.i, align 8
  %shr132.i = lshr i64 %2384, 3
  store i64 %shr132.i, i64* %vb126.i, align 8
  %2385 = load i64, i64* %v2.i, align 8
  %2386 = load i64, i64* %m122.i, align 8
  %and133.i = and i64 %2385, %2386
  store i64 %and133.i, i64* %tmp128.i, align 8
  %2387 = load i64, i64* %tmp128.i, align 8
  %shr134.i = lshr i64 %2387, 2
  store i64 %shr134.i, i64* %tmp128.i, align 8
  %2388 = load i64, i64* %va124.i, align 8
  %2389 = load i64, i64* %tmp128.i, align 8
  %or135.i = or i64 %2388, %2389
  store i64 %or135.i, i64* %va124.i, align 8
  %2390 = load i64, i64* %v3.i, align 8
  %2391 = load i64, i64* %m122.i, align 8
  %and136.i = and i64 %2390, %2391
  store i64 %and136.i, i64* %tmp128.i, align 8
  %2392 = load i64, i64* %tmp128.i, align 8
  %shr137.i = lshr i64 %2392, 1
  store i64 %shr137.i, i64* %tmp128.i, align 8
  %2393 = load i64, i64* %vb126.i, align 8
  %2394 = load i64, i64* %tmp128.i, align 8
  %or138.i = or i64 %2393, %2394
  store i64 %or138.i, i64* %vb126.i, align 8
  %2395 = load i64, i64* %v4.i, align 8
  %2396 = load i64, i64* %m122.i, align 8
  %and139.i = and i64 %2395, %2396
  store i64 %and139.i, i64* %tmp128.i, align 8
  %2397 = load i64, i64* %va124.i, align 8
  %2398 = load i64, i64* %tmp128.i, align 8
  %or140.i = or i64 %2397, %2398
  store i64 %or140.i, i64* %va124.i, align 8
  %2399 = load i64, i64* %v5.i, align 8
  %2400 = load i64, i64* %m122.i, align 8
  %and141.i = and i64 %2399, %2400
  store i64 %and141.i, i64* %tmp128.i, align 8
  %2401 = load i64, i64* %tmp128.i, align 8
  %shl142.i = shl i64 %2401, 1
  store i64 %shl142.i, i64* %tmp128.i, align 8
  %2402 = load i64, i64* %vb126.i, align 8
  %2403 = load i64, i64* %tmp128.i, align 8
  %or143.i = or i64 %2402, %2403
  store i64 %or143.i, i64* %vb126.i, align 8
  %2404 = load i64, i64* %v6.i, align 8
  %2405 = load i64, i64* %m122.i, align 8
  %and144.i = and i64 %2404, %2405
  store i64 %and144.i, i64* %tmp128.i, align 8
  %2406 = load i64, i64* %tmp128.i, align 8
  %shl145.i = shl i64 %2406, 2
  store i64 %shl145.i, i64* %tmp128.i, align 8
  %2407 = load i64, i64* %va124.i, align 8
  %2408 = load i64, i64* %tmp128.i, align 8
  %or146.i = or i64 %2407, %2408
  store i64 %or146.i, i64* %va124.i, align 8
  %2409 = load i64, i64* %v7.i, align 8
  %2410 = load i64, i64* %m122.i, align 8
  %and147.i = and i64 %2409, %2410
  store i64 %and147.i, i64* %tmp128.i, align 8
  %2411 = load i64, i64* %tmp128.i, align 8
  %shl148.i = shl i64 %2411, 3
  store i64 %shl148.i, i64* %tmp128.i, align 8
  %2412 = load i64, i64* %vb126.i, align 8
  %2413 = load i64, i64* %tmp128.i, align 8
  %or149.i = or i64 %2412, %2413
  store i64 %or149.i, i64* %vb126.i, align 8
  %2414 = load i64, i64* %va124.i, align 8
  %2415 = load i64, i64* %vb126.i, align 8
  %or150.i = or i64 %2414, %2415
  %2416 = load i64*, i64** %kp.i, align 8
  store i64 %or150.i, i64* %2416, align 8
  %2417 = load i64*, i64** %kp.i, align 8
  %incdec.ptr151.i = getelementptr inbounds i64, i64* %2417, i32 1
  store i64* %incdec.ptr151.i, i64** %kp.i, align 8
  store i64 2314885530818453536, i64* %m153.i, align 8
  %2418 = load i64, i64* %v0.i, align 8
  %2419 = load i64, i64* %m153.i, align 8
  %and160.i = and i64 %2418, %2419
  store i64 %and160.i, i64* %tmp159.i, align 8
  %2420 = load i64, i64* %tmp159.i, align 8
  %shr161.i = lshr i64 %2420, 5
  store i64 %shr161.i, i64* %va155.i, align 8
  %2421 = load i64, i64* %v1.i, align 8
  %2422 = load i64, i64* %m153.i, align 8
  %and162.i = and i64 %2421, %2422
  store i64 %and162.i, i64* %tmp159.i, align 8
  %2423 = load i64, i64* %tmp159.i, align 8
  %shr163.i = lshr i64 %2423, 4
  store i64 %shr163.i, i64* %vb157.i, align 8
  %2424 = load i64, i64* %v2.i, align 8
  %2425 = load i64, i64* %m153.i, align 8
  %and164.i = and i64 %2424, %2425
  store i64 %and164.i, i64* %tmp159.i, align 8
  %2426 = load i64, i64* %tmp159.i, align 8
  %shr165.i = lshr i64 %2426, 3
  store i64 %shr165.i, i64* %tmp159.i, align 8
  %2427 = load i64, i64* %va155.i, align 8
  %2428 = load i64, i64* %tmp159.i, align 8
  %or166.i = or i64 %2427, %2428
  store i64 %or166.i, i64* %va155.i, align 8
  %2429 = load i64, i64* %v3.i, align 8
  %2430 = load i64, i64* %m153.i, align 8
  %and167.i = and i64 %2429, %2430
  store i64 %and167.i, i64* %tmp159.i, align 8
  %2431 = load i64, i64* %tmp159.i, align 8
  %shr168.i = lshr i64 %2431, 2
  store i64 %shr168.i, i64* %tmp159.i, align 8
  %2432 = load i64, i64* %vb157.i, align 8
  %2433 = load i64, i64* %tmp159.i, align 8
  %or169.i = or i64 %2432, %2433
  store i64 %or169.i, i64* %vb157.i, align 8
  %2434 = load i64, i64* %v4.i, align 8
  %2435 = load i64, i64* %m153.i, align 8
  %and170.i = and i64 %2434, %2435
  store i64 %and170.i, i64* %tmp159.i, align 8
  %2436 = load i64, i64* %tmp159.i, align 8
  %shr171.i = lshr i64 %2436, 1
  store i64 %shr171.i, i64* %tmp159.i, align 8
  %2437 = load i64, i64* %va155.i, align 8
  %2438 = load i64, i64* %tmp159.i, align 8
  %or172.i = or i64 %2437, %2438
  store i64 %or172.i, i64* %va155.i, align 8
  %2439 = load i64, i64* %v5.i, align 8
  %2440 = load i64, i64* %m153.i, align 8
  %and173.i = and i64 %2439, %2440
  store i64 %and173.i, i64* %tmp159.i, align 8
  %2441 = load i64, i64* %vb157.i, align 8
  %2442 = load i64, i64* %tmp159.i, align 8
  %or174.i = or i64 %2441, %2442
  store i64 %or174.i, i64* %vb157.i, align 8
  %2443 = load i64, i64* %v6.i, align 8
  %2444 = load i64, i64* %m153.i, align 8
  %and175.i = and i64 %2443, %2444
  store i64 %and175.i, i64* %tmp159.i, align 8
  %2445 = load i64, i64* %tmp159.i, align 8
  %shl176.i = shl i64 %2445, 1
  store i64 %shl176.i, i64* %tmp159.i, align 8
  %2446 = load i64, i64* %va155.i, align 8
  %2447 = load i64, i64* %tmp159.i, align 8
  %or177.i = or i64 %2446, %2447
  store i64 %or177.i, i64* %va155.i, align 8
  %2448 = load i64, i64* %v7.i, align 8
  %2449 = load i64, i64* %m153.i, align 8
  %and178.i = and i64 %2448, %2449
  store i64 %and178.i, i64* %tmp159.i, align 8
  %2450 = load i64, i64* %tmp159.i, align 8
  %shl179.i = shl i64 %2450, 2
  store i64 %shl179.i, i64* %tmp159.i, align 8
  %2451 = load i64, i64* %vb157.i, align 8
  %2452 = load i64, i64* %tmp159.i, align 8
  %or180.i = or i64 %2451, %2452
  store i64 %or180.i, i64* %vb157.i, align 8
  %2453 = load i64, i64* %va155.i, align 8
  %2454 = load i64, i64* %vb157.i, align 8
  %or181.i = or i64 %2453, %2454
  %2455 = load i64*, i64** %kp.i, align 8
  store i64 %or181.i, i64* %2455, align 8
  %2456 = load i64*, i64** %kp.i, align 8
  %incdec.ptr182.i = getelementptr inbounds i64, i64* %2456, i32 1
  store i64* %incdec.ptr182.i, i64** %kp.i, align 8
  store i64 4629771061636907072, i64* %m184.i, align 8
  %2457 = load i64, i64* %v0.i, align 8
  %2458 = load i64, i64* %m184.i, align 8
  %and191.i = and i64 %2457, %2458
  store i64 %and191.i, i64* %tmp190.i, align 8
  %2459 = load i64, i64* %tmp190.i, align 8
  %shr192.i = lshr i64 %2459, 6
  store i64 %shr192.i, i64* %va186.i, align 8
  %2460 = load i64, i64* %v1.i, align 8
  %2461 = load i64, i64* %m184.i, align 8
  %and193.i = and i64 %2460, %2461
  store i64 %and193.i, i64* %tmp190.i, align 8
  %2462 = load i64, i64* %tmp190.i, align 8
  %shr194.i = lshr i64 %2462, 5
  store i64 %shr194.i, i64* %vb188.i, align 8
  %2463 = load i64, i64* %v2.i, align 8
  %2464 = load i64, i64* %m184.i, align 8
  %and195.i = and i64 %2463, %2464
  store i64 %and195.i, i64* %tmp190.i, align 8
  %2465 = load i64, i64* %tmp190.i, align 8
  %shr196.i = lshr i64 %2465, 4
  store i64 %shr196.i, i64* %tmp190.i, align 8
  %2466 = load i64, i64* %va186.i, align 8
  %2467 = load i64, i64* %tmp190.i, align 8
  %or197.i = or i64 %2466, %2467
  store i64 %or197.i, i64* %va186.i, align 8
  %2468 = load i64, i64* %v3.i, align 8
  %2469 = load i64, i64* %m184.i, align 8
  %and198.i = and i64 %2468, %2469
  store i64 %and198.i, i64* %tmp190.i, align 8
  %2470 = load i64, i64* %tmp190.i, align 8
  %shr199.i = lshr i64 %2470, 3
  store i64 %shr199.i, i64* %tmp190.i, align 8
  %2471 = load i64, i64* %vb188.i, align 8
  %2472 = load i64, i64* %tmp190.i, align 8
  %or200.i = or i64 %2471, %2472
  store i64 %or200.i, i64* %vb188.i, align 8
  %2473 = load i64, i64* %v4.i, align 8
  %2474 = load i64, i64* %m184.i, align 8
  %and201.i = and i64 %2473, %2474
  store i64 %and201.i, i64* %tmp190.i, align 8
  %2475 = load i64, i64* %tmp190.i, align 8
  %shr202.i = lshr i64 %2475, 2
  store i64 %shr202.i, i64* %tmp190.i, align 8
  %2476 = load i64, i64* %va186.i, align 8
  %2477 = load i64, i64* %tmp190.i, align 8
  %or203.i = or i64 %2476, %2477
  store i64 %or203.i, i64* %va186.i, align 8
  %2478 = load i64, i64* %v5.i, align 8
  %2479 = load i64, i64* %m184.i, align 8
  %and204.i = and i64 %2478, %2479
  store i64 %and204.i, i64* %tmp190.i, align 8
  %2480 = load i64, i64* %tmp190.i, align 8
  %shr205.i = lshr i64 %2480, 1
  store i64 %shr205.i, i64* %tmp190.i, align 8
  %2481 = load i64, i64* %vb188.i, align 8
  %2482 = load i64, i64* %tmp190.i, align 8
  %or206.i = or i64 %2481, %2482
  store i64 %or206.i, i64* %vb188.i, align 8
  %2483 = load i64, i64* %v6.i, align 8
  %2484 = load i64, i64* %m184.i, align 8
  %and207.i = and i64 %2483, %2484
  store i64 %and207.i, i64* %tmp190.i, align 8
  %2485 = load i64, i64* %va186.i, align 8
  %2486 = load i64, i64* %tmp190.i, align 8
  %or208.i = or i64 %2485, %2486
  store i64 %or208.i, i64* %va186.i, align 8
  %2487 = load i64, i64* %v7.i, align 8
  %2488 = load i64, i64* %m184.i, align 8
  %and209.i = and i64 %2487, %2488
  store i64 %and209.i, i64* %tmp190.i, align 8
  %2489 = load i64, i64* %tmp190.i, align 8
  %shl210.i = shl i64 %2489, 1
  store i64 %shl210.i, i64* %tmp190.i, align 8
  %2490 = load i64, i64* %vb188.i, align 8
  %2491 = load i64, i64* %tmp190.i, align 8
  %or211.i = or i64 %2490, %2491
  store i64 %or211.i, i64* %vb188.i, align 8
  %2492 = load i64, i64* %va186.i, align 8
  %2493 = load i64, i64* %vb188.i, align 8
  %or212.i = or i64 %2492, %2493
  %2494 = load i64*, i64** %kp.i, align 8
  store i64 %or212.i, i64* %2494, align 8
  %2495 = load i64*, i64** %kp.i, align 8
  %incdec.ptr213.i = getelementptr inbounds i64, i64* %2495, i32 1
  store i64* %incdec.ptr213.i, i64** %kp.i, align 8
  %2496 = load i32, i32* %ic.i, align 4
  %inc.i = add nsw i32 %2496, 1
  store i32 %inc.i, i32* %ic.i, align 4
  br label %for.cond.i

DES_bs_finalize_keys.exit:                        ; preds = %for.cond.i
  %2497 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2497, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0))
  br label %body

return:                                           ; preds = %if.end397, %if.end392
  ret void
}

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #1

; Function Attrs: nounwind uwtable
define void @DES_bs_crypt_LM(i32 %keys_count) #4 {
entry:
  %a1.addr.i1493 = alloca i64, align 8
  %a2.addr.i1494 = alloca i64, align 8
  %a3.addr.i1495 = alloca i64, align 8
  %a4.addr.i1496 = alloca i64, align 8
  %a5.addr.i1497 = alloca i64, align 8
  %a6.addr.i1498 = alloca i64, align 8
  %out1.addr.i1499 = alloca i64*, align 8
  %out2.addr.i1500 = alloca i64*, align 8
  %out3.addr.i1501 = alloca i64*, align 8
  %out4.addr.i1502 = alloca i64*, align 8
  %x55005500.i1503 = alloca i64, align 8
  %x5A0F5A0F.i1504 = alloca i64, align 8
  %x3333FFFF.i1505 = alloca i64, align 8
  %x66666666.i1506 = alloca i64, align 8
  %x22226666.i1507 = alloca i64, align 8
  %x2D2D6969.i1508 = alloca i64, align 8
  %x25202160.i1509 = alloca i64, align 8
  %x00FFFF00.i1510 = alloca i64, align 8
  %x33CCCC33.i1511 = alloca i64, align 8
  %x4803120C.i1512 = alloca i64, align 8
  %x2222FFFF.i1513 = alloca i64, align 8
  %x6A21EDF3.i1514 = alloca i64, align 8
  %x4A01CC93.i1515 = alloca i64, align 8
  %x5555FFFF.i1516 = alloca i64, align 8
  %x7F75FFFF.i1517 = alloca i64, align 8
  %x00D20096.i1518 = alloca i64, align 8
  %x7FA7FF69.i1519 = alloca i64, align 8
  %x0A0A0000.i1520 = alloca i64, align 8
  %x0AD80096.i1521 = alloca i64, align 8
  %x00999900.i1522 = alloca i64, align 8
  %x0AD99996.i1523 = alloca i64, align 8
  %x22332233.i1524 = alloca i64, align 8
  %x257AA5F0.i1525 = alloca i64, align 8
  %x054885C0.i1526 = alloca i64, align 8
  %xFAB77A3F.i1527 = alloca i64, align 8
  %x2221EDF3.i1528 = alloca i64, align 8
  %xD89697CC.i1529 = alloca i64, align 8
  %x05B77AC0.i1530 = alloca i64, align 8
  %x05F77AD6.i1531 = alloca i64, align 8
  %x36C48529.i1532 = alloca i64, align 8
  %x6391D07C.i1533 = alloca i64, align 8
  %xBB0747B0.i1534 = alloca i64, align 8
  %x4C460000.i1535 = alloca i64, align 8
  %x4EDF9996.i1536 = alloca i64, align 8
  %x2D4E49EA.i1537 = alloca i64, align 8
  %xBBFFFFB0.i1538 = alloca i64, align 8
  %x96B1B65A.i1539 = alloca i64, align 8
  %x5AFF5AFF.i1540 = alloca i64, align 8
  %x52B11215.i1541 = alloca i64, align 8
  %x4201C010.i1542 = alloca i64, align 8
  %x10B0D205.i1543 = alloca i64, align 8
  %x00.i1544 = alloca i64, align 8
  %x01.i1545 = alloca i64, align 8
  %x10.i1546 = alloca i64, align 8
  %x11.i1547 = alloca i64, align 8
  %x20.i1548 = alloca i64, align 8
  %x21.i1549 = alloca i64, align 8
  %x30.i1550 = alloca i64, align 8
  %x31.i1551 = alloca i64, align 8
  %a1.addr.i1379 = alloca i64, align 8
  %a2.addr.i1380 = alloca i64, align 8
  %a3.addr.i1381 = alloca i64, align 8
  %a4.addr.i1382 = alloca i64, align 8
  %a5.addr.i1383 = alloca i64, align 8
  %a6.addr.i1384 = alloca i64, align 8
  %out1.addr.i1385 = alloca i64*, align 8
  %out2.addr.i1386 = alloca i64*, align 8
  %out3.addr.i1387 = alloca i64*, align 8
  %out4.addr.i1388 = alloca i64*, align 8
  %x33CC33CC.i1389 = alloca i64, align 8
  %x55550000.i1390 = alloca i64, align 8
  %x00AA00FF.i1391 = alloca i64, align 8
  %x33BB33FF.i1392 = alloca i64, align 8
  %x33CC0000.i1393 = alloca i64, align 8
  %x11441144.i1394 = alloca i64, align 8
  %x11BB11BB.i1395 = alloca i64, align 8
  %x003311BB.i1396 = alloca i64, align 8
  %x00000F0F.i1397 = alloca i64, align 8
  %x336600FF.i1398 = alloca i64, align 8
  %x332200FF.i1399 = alloca i64, align 8
  %x332200F0.i1400 = alloca i64, align 8
  %x0302000F.i1401 = alloca i64, align 8
  %xAAAAAAAA.i1402 = alloca i64, align 8
  %xA9A8AAA5.i1403 = alloca i64, align 8
  %x33CCCC33.i1404 = alloca i64, align 8
  %x33CCC030.i1405 = alloca i64, align 8
  %x9A646A95.i1406 = alloca i64, align 8
  %x00333303.i1407 = alloca i64, align 8
  %x118822B8.i1408 = alloca i64, align 8
  %xA8208805.i1409 = alloca i64, align 8
  %x3CC3C33C.i1410 = alloca i64, align 8
  %x94E34B39.i1411 = alloca i64, align 8
  %x0331330C.i1412 = alloca i64, align 8
  %x3FF3F33C.i1413 = alloca i64, align 8
  %xA9DF596A.i1414 = alloca i64, align 8
  %xA9DF5F6F.i1415 = alloca i64, align 8
  %x962CAC53.i1416 = alloca i64, align 8
  %x97D27835.i1417 = alloca i64, align 8
  %x81D25825.i1418 = alloca i64, align 8
  %x812D58DA.i1419 = alloca i64, align 8
  %x802158DA.i1420 = alloca i64, align 8
  %x1A45324F.i1421 = alloca i64, align 8
  %x0A451047.i1422 = alloca i64, align 8
  %xBBDFDD7B.i1423 = alloca i64, align 8
  %xB19ACD3C.i1424 = alloca i64, align 8
  %x00.i1425 = alloca i64, align 8
  %x01.i1426 = alloca i64, align 8
  %x10.i1427 = alloca i64, align 8
  %x11.i1428 = alloca i64, align 8
  %x20.i1429 = alloca i64, align 8
  %x21.i1430 = alloca i64, align 8
  %x30.i1431 = alloca i64, align 8
  %x31.i1432 = alloca i64, align 8
  %a1.addr.i1259 = alloca i64, align 8
  %a2.addr.i1260 = alloca i64, align 8
  %a3.addr.i1261 = alloca i64, align 8
  %a4.addr.i1262 = alloca i64, align 8
  %a5.addr.i1263 = alloca i64, align 8
  %a6.addr.i1264 = alloca i64, align 8
  %out1.addr.i1265 = alloca i64*, align 8
  %out2.addr.i1266 = alloca i64*, align 8
  %out3.addr.i1267 = alloca i64*, align 8
  %out4.addr.i1268 = alloca i64*, align 8
  %x44444444.i1269 = alloca i64, align 8
  %x0F0FF0F0.i1270 = alloca i64, align 8
  %x4F4FF4F4.i1271 = alloca i64, align 8
  %x00FFFF00.i1272 = alloca i64, align 8
  %x00AAAA00.i1273 = alloca i64, align 8
  %x4FE55EF4.i1274 = alloca i64, align 8
  %x3C3CC3C3.i1275 = alloca i64, align 8
  %x3C3C0000.i1276 = alloca i64, align 8
  %x7373F4F4.i1277 = alloca i64, align 8
  %x0C840A00.i1278 = alloca i64, align 8
  %x00005EF4.i1279 = alloca i64, align 8
  %x00FF5EFF.i1280 = alloca i64, align 8
  %x00555455.i1281 = alloca i64, align 8
  %x3C699796.i1282 = alloca i64, align 8
  %x000FF000.i1283 = alloca i64, align 8
  %x55AA55AA.i1284 = alloca i64, align 8
  %x26D9A15E.i1285 = alloca i64, align 8
  %x2FDFAF5F.i1286 = alloca i64, align 8
  %x2FD00F5F.i1287 = alloca i64, align 8
  %x55AAFFAA.i1288 = alloca i64, align 8
  %x28410014.i1289 = alloca i64, align 8
  %x000000FF.i1290 = alloca i64, align 8
  %x000000CC.i1291 = alloca i64, align 8
  %x284100D8.i1292 = alloca i64, align 8
  %x204000D0.i1293 = alloca i64, align 8
  %x3C3CC3FF.i1294 = alloca i64, align 8
  %x1C3CC32F.i1295 = alloca i64, align 8
  %x4969967A.i1296 = alloca i64, align 8
  %x4CC44CC4.i1297 = alloca i64, align 8
  %x40C040C0.i1298 = alloca i64, align 8
  %x69963C69.i1299 = alloca i64, align 8
  %x9669C396.i1300 = alloca i64, align 8
  %xD6A98356.i1301 = alloca i64, align 8
  %x000F00F0.i1302 = alloca i64, align 8
  %xFEBDC3D7.i1303 = alloca i64, align 8
  %xFEB0C307.i1304 = alloca i64, align 8
  %x4CEEEEC4.i1305 = alloca i64, align 8
  %xB25E2DC3.i1306 = alloca i64, align 8
  %x00.i1307 = alloca i64, align 8
  %x01.i1308 = alloca i64, align 8
  %x10.i1309 = alloca i64, align 8
  %x11.i1310 = alloca i64, align 8
  %x20.i1311 = alloca i64, align 8
  %x21.i1312 = alloca i64, align 8
  %x30.i1313 = alloca i64, align 8
  %x31.i1314 = alloca i64, align 8
  %a1.addr.i1170 = alloca i64, align 8
  %a2.addr.i1171 = alloca i64, align 8
  %a3.addr.i1172 = alloca i64, align 8
  %a4.addr.i1173 = alloca i64, align 8
  %a5.addr.i1174 = alloca i64, align 8
  %a6.addr.i1175 = alloca i64, align 8
  %out1.addr.i1176 = alloca i64*, align 8
  %out2.addr.i1177 = alloca i64*, align 8
  %out3.addr.i1178 = alloca i64*, align 8
  %out4.addr.i1179 = alloca i64*, align 8
  %x5A5A5A5A.i1180 = alloca i64, align 8
  %x0F0FF0F0.i1181 = alloca i64, align 8
  %x33FF33FF.i1182 = alloca i64, align 8
  %x33FFCC00.i1183 = alloca i64, align 8
  %x0C0030F0.i1184 = alloca i64, align 8
  %x0C0CC0C0.i1185 = alloca i64, align 8
  %x0CF3C03F.i1186 = alloca i64, align 8
  %x5EFBDA7F.i1187 = alloca i64, align 8
  %x52FBCA0F.i1188 = alloca i64, align 8
  %x61C8F93C.i1189 = alloca i64, align 8
  %x00C0C03C.i1190 = alloca i64, align 8
  %x0F0F30C0.i1191 = alloca i64, align 8
  %x3B92A366.i1192 = alloca i64, align 8
  %x30908326.i1193 = alloca i64, align 8
  %x3C90B3D6.i1194 = alloca i64, align 8
  %x33CC33CC.i1195 = alloca i64, align 8
  %x0C0CFFFF.i1196 = alloca i64, align 8
  %x379E5C99.i1197 = alloca i64, align 8
  %x04124C11.i1198 = alloca i64, align 8
  %x56E9861E.i1199 = alloca i64, align 8
  %xA91679E1.i1200 = alloca i64, align 8
  %x9586CA37.i1201 = alloca i64, align 8
  %x8402C833.i1202 = alloca i64, align 8
  %x84C2C83F.i1203 = alloca i64, align 8
  %xB35C94A6.i1204 = alloca i64, align 8
  %x00.i1205 = alloca i64, align 8
  %x01.i1206 = alloca i64, align 8
  %x10.i1207 = alloca i64, align 8
  %x11.i1208 = alloca i64, align 8
  %x20.i1209 = alloca i64, align 8
  %x21.i1210 = alloca i64, align 8
  %x30.i1211 = alloca i64, align 8
  %x31.i1212 = alloca i64, align 8
  %a1.addr.i1051 = alloca i64, align 8
  %a2.addr.i1052 = alloca i64, align 8
  %a3.addr.i1053 = alloca i64, align 8
  %a4.addr.i1054 = alloca i64, align 8
  %a5.addr.i1055 = alloca i64, align 8
  %a6.addr.i1056 = alloca i64, align 8
  %out1.addr.i1057 = alloca i64*, align 8
  %out2.addr.i1058 = alloca i64*, align 8
  %out3.addr.i1059 = alloca i64*, align 8
  %out4.addr.i1060 = alloca i64*, align 8
  %x77777777.i1061 = alloca i64, align 8
  %x77770000.i1062 = alloca i64, align 8
  %x22225555.i1063 = alloca i64, align 8
  %x11116666.i1064 = alloca i64, align 8
  %x1F1F6F6F.i1065 = alloca i64, align 8
  %x70700000.i1066 = alloca i64, align 8
  %x43433333.i1067 = alloca i64, align 8
  %x00430033.i1068 = alloca i64, align 8
  %x55557777.i1069 = alloca i64, align 8
  %x55167744.i1070 = alloca i64, align 8
  %x5A19784B.i1071 = alloca i64, align 8
  %x5A1987B4.i1072 = alloca i64, align 8
  %x7A3BD7F5.i1073 = alloca i64, align 8
  %x003B00F5.i1074 = alloca i64, align 8
  %x221955A0.i1075 = alloca i64, align 8
  %x05050707.i1076 = alloca i64, align 8
  %x271C52A7.i1077 = alloca i64, align 8
  %x2A2A82A0.i1078 = alloca i64, align 8
  %x6969B193.i1079 = alloca i64, align 8
  %x1FE06F90.i1080 = alloca i64, align 8
  %x16804E00.i1081 = alloca i64, align 8
  %xE97FB1FF.i1082 = alloca i64, align 8
  %x43403302.i1083 = alloca i64, align 8
  %x35CAED30.i1084 = alloca i64, align 8
  %x37DEFFB7.i1085 = alloca i64, align 8
  %x349ECCB5.i1086 = alloca i64, align 8
  %x0B01234A.i1087 = alloca i64, align 8
  %x101884B4.i1088 = alloca i64, align 8
  %x0FF8EB24.i1089 = alloca i64, align 8
  %x41413333.i1090 = alloca i64, align 8
  %x4FF9FB37.i1091 = alloca i64, align 8
  %x4FC2FBC2.i1092 = alloca i64, align 8
  %x22222222.i1093 = alloca i64, align 8
  %x16BCEE97.i1094 = alloca i64, align 8
  %x0F080B04.i1095 = alloca i64, align 8
  %x19B4E593.i1096 = alloca i64, align 8
  %x5C5C5C5C.i1097 = alloca i64, align 8
  %x4448184C.i1098 = alloca i64, align 8
  %x2DDABE71.i1099 = alloca i64, align 8
  %x6992A63D.i1100 = alloca i64, align 8
  %x00.i1101 = alloca i64, align 8
  %x01.i1102 = alloca i64, align 8
  %x10.i1103 = alloca i64, align 8
  %x11.i1104 = alloca i64, align 8
  %x20.i1105 = alloca i64, align 8
  %x21.i1106 = alloca i64, align 8
  %x30.i1107 = alloca i64, align 8
  %x31.i1108 = alloca i64, align 8
  %a1.addr.i937 = alloca i64, align 8
  %a2.addr.i938 = alloca i64, align 8
  %a3.addr.i939 = alloca i64, align 8
  %a4.addr.i940 = alloca i64, align 8
  %a5.addr.i941 = alloca i64, align 8
  %a6.addr.i942 = alloca i64, align 8
  %out1.addr.i943 = alloca i64*, align 8
  %out2.addr.i944 = alloca i64*, align 8
  %out3.addr.i945 = alloca i64*, align 8
  %out4.addr.i946 = alloca i64*, align 8
  %x33CC33CC.i947 = alloca i64, align 8
  %x3333FFFF.i948 = alloca i64, align 8
  %x11115555.i949 = alloca i64, align 8
  %x22DD6699.i950 = alloca i64, align 8
  %x22DD9966.i951 = alloca i64, align 8
  %x00220099.i952 = alloca i64, align 8
  %x00551144.i953 = alloca i64, align 8
  %x33662277.i954 = alloca i64, align 8
  %x5A5A5A5A.i955 = alloca i64, align 8
  %x7B7E7A7F.i956 = alloca i64, align 8
  %x59A31CE6.i957 = alloca i64, align 8
  %x09030C06.i958 = alloca i64, align 8
  %x09030000.i959 = alloca i64, align 8
  %x336622FF.i960 = alloca i64, align 8
  %x3A6522FF.i961 = alloca i64, align 8
  %x484D494C.i962 = alloca i64, align 8
  %x0000B6B3.i963 = alloca i64, align 8
  %x0F0FB9BC.i964 = alloca i64, align 8
  %x00FC00F9.i965 = alloca i64, align 8
  %x0FFFB9FD.i966 = alloca i64, align 8
  %x5DF75DF7.i967 = alloca i64, align 8
  %x116600F7.i968 = alloca i64, align 8
  %x1E69B94B.i969 = alloca i64, align 8
  %x1668B94B.i970 = alloca i64, align 8
  %x7B7B7B7B.i971 = alloca i64, align 8
  %x411E5984.i972 = alloca i64, align 8
  %x1FFFFDFD.i973 = alloca i64, align 8
  %x5EE1A479.i974 = alloca i64, align 8
  %x3CB4DFD2.i975 = alloca i64, align 8
  %x004B002D.i976 = alloca i64, align 8
  %xB7B2B6B3.i977 = alloca i64, align 8
  %xCCC9CDC8.i978 = alloca i64, align 8
  %xCC82CDE5.i979 = alloca i64, align 8
  %x0055EEBB.i980 = alloca i64, align 8
  %x5A5AECE9.i981 = alloca i64, align 8
  %x0050ECA9.i982 = alloca i64, align 8
  %xC5CAC1CE.i983 = alloca i64, align 8
  %xC59A2D67.i984 = alloca i64, align 8
  %x00.i985 = alloca i64, align 8
  %x01.i986 = alloca i64, align 8
  %x10.i987 = alloca i64, align 8
  %x11.i988 = alloca i64, align 8
  %x20.i989 = alloca i64, align 8
  %x21.i990 = alloca i64, align 8
  %x30.i991 = alloca i64, align 8
  %x31.i992 = alloca i64, align 8
  %a1.addr.i824 = alloca i64, align 8
  %a2.addr.i825 = alloca i64, align 8
  %a3.addr.i826 = alloca i64, align 8
  %a4.addr.i827 = alloca i64, align 8
  %a5.addr.i828 = alloca i64, align 8
  %a6.addr.i829 = alloca i64, align 8
  %out1.addr.i830 = alloca i64*, align 8
  %out2.addr.i831 = alloca i64*, align 8
  %out3.addr.i832 = alloca i64*, align 8
  %out4.addr.i833 = alloca i64*, align 8
  %x0FF00FF0.i834 = alloca i64, align 8
  %x3CC33CC3.i835 = alloca i64, align 8
  %x00003CC3.i836 = alloca i64, align 8
  %x0F000F00.i837 = alloca i64, align 8
  %x5A555A55.i838 = alloca i64, align 8
  %x00001841.i839 = alloca i64, align 8
  %x00000F00.i840 = alloca i64, align 8
  %x33333C33.i841 = alloca i64, align 8
  %x7B777E77.i842 = alloca i64, align 8
  %x0FF0F00F.i843 = alloca i64, align 8
  %x74878E78.i844 = alloca i64, align 8
  %x003C003C.i845 = alloca i64, align 8
  %x5A7D5A7D.i846 = alloca i64, align 8
  %x333300F0.i847 = alloca i64, align 8
  %x694E5A8D.i848 = alloca i64, align 8
  %x0FF0CCCC.i849 = alloca i64, align 8
  %x000F0303.i850 = alloca i64, align 8
  %x5A505854.i851 = alloca i64, align 8
  %x33CC000F.i852 = alloca i64, align 8
  %x699C585B.i853 = alloca i64, align 8
  %x7F878F78.i854 = alloca i64, align 8
  %x21101013.i855 = alloca i64, align 8
  %x7F979F7B.i856 = alloca i64, align 8
  %x30030CC0.i857 = alloca i64, align 8
  %x4F9493BB.i858 = alloca i64, align 8
  %x6F9CDBFB.i859 = alloca i64, align 8
  %x0000DBFB.i860 = alloca i64, align 8
  %x00005151.i861 = alloca i64, align 8
  %x26DAC936.i862 = alloca i64, align 8
  %x26DA9867.i863 = alloca i64, align 8
  %x21FF10FF.i864 = alloca i64, align 8
  %x21FFCB04.i865 = alloca i64, align 8
  %x2625C9C9.i866 = alloca i64, align 8
  %x27FFCBCD.i867 = alloca i64, align 8
  %x27FF1036.i868 = alloca i64, align 8
  %x27FF103E.i869 = alloca i64, align 8
  %xB06B6C44.i870 = alloca i64, align 8
  %x97947C7A.i871 = alloca i64, align 8
  %x00.i872 = alloca i64, align 8
  %x01.i873 = alloca i64, align 8
  %x10.i874 = alloca i64, align 8
  %x11.i875 = alloca i64, align 8
  %x20.i876 = alloca i64, align 8
  %x21.i877 = alloca i64, align 8
  %x30.i878 = alloca i64, align 8
  %x31.i879 = alloca i64, align 8
  %a1.addr.i721 = alloca i64, align 8
  %a2.addr.i722 = alloca i64, align 8
  %a3.addr.i723 = alloca i64, align 8
  %a4.addr.i724 = alloca i64, align 8
  %a5.addr.i725 = alloca i64, align 8
  %a6.addr.i726 = alloca i64, align 8
  %out1.addr.i727 = alloca i64*, align 8
  %out2.addr.i728 = alloca i64*, align 8
  %out3.addr.i729 = alloca i64*, align 8
  %out4.addr.i730 = alloca i64*, align 8
  %x0C0C0C0C.i731 = alloca i64, align 8
  %x0000F0F0.i732 = alloca i64, align 8
  %x00FFF00F.i733 = alloca i64, align 8
  %x00555005.i734 = alloca i64, align 8
  %x00515001.i735 = alloca i64, align 8
  %x33000330.i736 = alloca i64, align 8
  %x77555775.i737 = alloca i64, align 8
  %x30303030.i738 = alloca i64, align 8
  %x3030CFCF.i739 = alloca i64, align 8
  %x30104745.i740 = alloca i64, align 8
  %x30555745.i741 = alloca i64, align 8
  %xFF000FF0.i742 = alloca i64, align 8
  %xCF1048B5.i743 = alloca i64, align 8
  %x080A080A.i744 = alloca i64, align 8
  %xC71A40BF.i745 = alloca i64, align 8
  %xCB164CB3.i746 = alloca i64, align 8
  %x9E4319E6.i747 = alloca i64, align 8
  %x000019E6.i748 = alloca i64, align 8
  %xF429738C.i749 = alloca i64, align 8
  %xF4296A6A.i750 = alloca i64, align 8
  %xC729695A.i751 = alloca i64, align 8
  %xC47C3D2F.i752 = alloca i64, align 8
  %xF77F3F3F.i753 = alloca i64, align 8
  %x9E43E619.i754 = alloca i64, align 8
  %x693CD926.i755 = alloca i64, align 8
  %xF719A695.i756 = alloca i64, align 8
  %xF4FF73FF.i757 = alloca i64, align 8
  %x03E6D56A.i758 = alloca i64, align 8
  %x56B3803F.i759 = alloca i64, align 8
  %xF700A600.i760 = alloca i64, align 8
  %x61008000.i761 = alloca i64, align 8
  %x03B7856B.i762 = alloca i64, align 8
  %x62B7056B.i763 = alloca i64, align 8
  %x00.i764 = alloca i64, align 8
  %x01.i765 = alloca i64, align 8
  %x10.i766 = alloca i64, align 8
  %x11.i767 = alloca i64, align 8
  %x20.i768 = alloca i64, align 8
  %x21.i769 = alloca i64, align 8
  %x30.i770 = alloca i64, align 8
  %x31.i771 = alloca i64, align 8
  %a1.addr.i641 = alloca i64, align 8
  %a2.addr.i642 = alloca i64, align 8
  %a3.addr.i643 = alloca i64, align 8
  %a4.addr.i644 = alloca i64, align 8
  %a5.addr.i645 = alloca i64, align 8
  %a6.addr.i646 = alloca i64, align 8
  %out1.addr.i647 = alloca i64*, align 8
  %out2.addr.i648 = alloca i64*, align 8
  %out3.addr.i649 = alloca i64*, align 8
  %out4.addr.i650 = alloca i64*, align 8
  %x55005500.i = alloca i64, align 8
  %x5A0F5A0F.i = alloca i64, align 8
  %x3333FFFF.i651 = alloca i64, align 8
  %x66666666.i = alloca i64, align 8
  %x22226666.i = alloca i64, align 8
  %x2D2D6969.i = alloca i64, align 8
  %x25202160.i = alloca i64, align 8
  %x00FFFF00.i652 = alloca i64, align 8
  %x33CCCC33.i653 = alloca i64, align 8
  %x4803120C.i = alloca i64, align 8
  %x2222FFFF.i = alloca i64, align 8
  %x6A21EDF3.i = alloca i64, align 8
  %x4A01CC93.i = alloca i64, align 8
  %x5555FFFF.i = alloca i64, align 8
  %x7F75FFFF.i = alloca i64, align 8
  %x00D20096.i = alloca i64, align 8
  %x7FA7FF69.i = alloca i64, align 8
  %x0A0A0000.i = alloca i64, align 8
  %x0AD80096.i = alloca i64, align 8
  %x00999900.i = alloca i64, align 8
  %x0AD99996.i = alloca i64, align 8
  %x22332233.i = alloca i64, align 8
  %x257AA5F0.i = alloca i64, align 8
  %x054885C0.i = alloca i64, align 8
  %xFAB77A3F.i = alloca i64, align 8
  %x2221EDF3.i = alloca i64, align 8
  %xD89697CC.i = alloca i64, align 8
  %x05B77AC0.i = alloca i64, align 8
  %x05F77AD6.i = alloca i64, align 8
  %x36C48529.i = alloca i64, align 8
  %x6391D07C.i = alloca i64, align 8
  %xBB0747B0.i = alloca i64, align 8
  %x4C460000.i = alloca i64, align 8
  %x4EDF9996.i = alloca i64, align 8
  %x2D4E49EA.i = alloca i64, align 8
  %xBBFFFFB0.i = alloca i64, align 8
  %x96B1B65A.i = alloca i64, align 8
  %x5AFF5AFF.i = alloca i64, align 8
  %x52B11215.i = alloca i64, align 8
  %x4201C010.i = alloca i64, align 8
  %x10B0D205.i = alloca i64, align 8
  %x00.i654 = alloca i64, align 8
  %x01.i655 = alloca i64, align 8
  %x10.i656 = alloca i64, align 8
  %x11.i657 = alloca i64, align 8
  %x20.i658 = alloca i64, align 8
  %x21.i659 = alloca i64, align 8
  %x30.i660 = alloca i64, align 8
  %x31.i661 = alloca i64, align 8
  %a1.addr.i568 = alloca i64, align 8
  %a2.addr.i569 = alloca i64, align 8
  %a3.addr.i570 = alloca i64, align 8
  %a4.addr.i571 = alloca i64, align 8
  %a5.addr.i572 = alloca i64, align 8
  %a6.addr.i573 = alloca i64, align 8
  %out1.addr.i574 = alloca i64*, align 8
  %out2.addr.i575 = alloca i64*, align 8
  %out3.addr.i576 = alloca i64*, align 8
  %out4.addr.i577 = alloca i64*, align 8
  %x33CC33CC.i578 = alloca i64, align 8
  %x55550000.i = alloca i64, align 8
  %x00AA00FF.i = alloca i64, align 8
  %x33BB33FF.i = alloca i64, align 8
  %x33CC0000.i = alloca i64, align 8
  %x11441144.i = alloca i64, align 8
  %x11BB11BB.i = alloca i64, align 8
  %x003311BB.i = alloca i64, align 8
  %x00000F0F.i = alloca i64, align 8
  %x336600FF.i = alloca i64, align 8
  %x332200FF.i = alloca i64, align 8
  %x332200F0.i = alloca i64, align 8
  %x0302000F.i = alloca i64, align 8
  %xAAAAAAAA.i = alloca i64, align 8
  %xA9A8AAA5.i = alloca i64, align 8
  %x33CCCC33.i = alloca i64, align 8
  %x33CCC030.i = alloca i64, align 8
  %x9A646A95.i = alloca i64, align 8
  %x00333303.i = alloca i64, align 8
  %x118822B8.i = alloca i64, align 8
  %xA8208805.i = alloca i64, align 8
  %x3CC3C33C.i = alloca i64, align 8
  %x94E34B39.i = alloca i64, align 8
  %x0331330C.i = alloca i64, align 8
  %x3FF3F33C.i = alloca i64, align 8
  %xA9DF596A.i = alloca i64, align 8
  %xA9DF5F6F.i = alloca i64, align 8
  %x962CAC53.i = alloca i64, align 8
  %x97D27835.i = alloca i64, align 8
  %x81D25825.i = alloca i64, align 8
  %x812D58DA.i = alloca i64, align 8
  %x802158DA.i = alloca i64, align 8
  %x1A45324F.i = alloca i64, align 8
  %x0A451047.i = alloca i64, align 8
  %xBBDFDD7B.i = alloca i64, align 8
  %xB19ACD3C.i = alloca i64, align 8
  %x00.i579 = alloca i64, align 8
  %x01.i580 = alloca i64, align 8
  %x10.i581 = alloca i64, align 8
  %x11.i582 = alloca i64, align 8
  %x20.i583 = alloca i64, align 8
  %x21.i584 = alloca i64, align 8
  %x30.i585 = alloca i64, align 8
  %x31.i586 = alloca i64, align 8
  %a1.addr.i506 = alloca i64, align 8
  %a2.addr.i507 = alloca i64, align 8
  %a3.addr.i508 = alloca i64, align 8
  %a4.addr.i509 = alloca i64, align 8
  %a5.addr.i510 = alloca i64, align 8
  %a6.addr.i511 = alloca i64, align 8
  %out1.addr.i512 = alloca i64*, align 8
  %out2.addr.i513 = alloca i64*, align 8
  %out3.addr.i514 = alloca i64*, align 8
  %out4.addr.i515 = alloca i64*, align 8
  %x44444444.i = alloca i64, align 8
  %x0F0FF0F0.i516 = alloca i64, align 8
  %x4F4FF4F4.i = alloca i64, align 8
  %x00FFFF00.i = alloca i64, align 8
  %x00AAAA00.i = alloca i64, align 8
  %x4FE55EF4.i = alloca i64, align 8
  %x3C3CC3C3.i = alloca i64, align 8
  %x3C3C0000.i = alloca i64, align 8
  %x7373F4F4.i = alloca i64, align 8
  %x0C840A00.i = alloca i64, align 8
  %x00005EF4.i = alloca i64, align 8
  %x00FF5EFF.i = alloca i64, align 8
  %x00555455.i = alloca i64, align 8
  %x3C699796.i = alloca i64, align 8
  %x000FF000.i = alloca i64, align 8
  %x55AA55AA.i = alloca i64, align 8
  %x26D9A15E.i = alloca i64, align 8
  %x2FDFAF5F.i = alloca i64, align 8
  %x2FD00F5F.i = alloca i64, align 8
  %x55AAFFAA.i = alloca i64, align 8
  %x28410014.i = alloca i64, align 8
  %x000000FF.i = alloca i64, align 8
  %x000000CC.i = alloca i64, align 8
  %x284100D8.i = alloca i64, align 8
  %x204000D0.i = alloca i64, align 8
  %x3C3CC3FF.i = alloca i64, align 8
  %x1C3CC32F.i = alloca i64, align 8
  %x4969967A.i = alloca i64, align 8
  %x4CC44CC4.i = alloca i64, align 8
  %x40C040C0.i = alloca i64, align 8
  %x69963C69.i = alloca i64, align 8
  %x9669C396.i = alloca i64, align 8
  %xD6A98356.i = alloca i64, align 8
  %x000F00F0.i = alloca i64, align 8
  %xFEBDC3D7.i = alloca i64, align 8
  %xFEB0C307.i = alloca i64, align 8
  %x4CEEEEC4.i = alloca i64, align 8
  %xB25E2DC3.i = alloca i64, align 8
  %x00.i517 = alloca i64, align 8
  %x01.i518 = alloca i64, align 8
  %x10.i519 = alloca i64, align 8
  %x11.i520 = alloca i64, align 8
  %x20.i521 = alloca i64, align 8
  %x21.i522 = alloca i64, align 8
  %x30.i523 = alloca i64, align 8
  %x31.i524 = alloca i64, align 8
  %a1.addr.i449 = alloca i64, align 8
  %a2.addr.i450 = alloca i64, align 8
  %a3.addr.i451 = alloca i64, align 8
  %a4.addr.i452 = alloca i64, align 8
  %a5.addr.i453 = alloca i64, align 8
  %a6.addr.i454 = alloca i64, align 8
  %out1.addr.i455 = alloca i64*, align 8
  %out2.addr.i456 = alloca i64*, align 8
  %out3.addr.i457 = alloca i64*, align 8
  %out4.addr.i458 = alloca i64*, align 8
  %x5A5A5A5A.i459 = alloca i64, align 8
  %x0F0FF0F0.i = alloca i64, align 8
  %x33FF33FF.i = alloca i64, align 8
  %x33FFCC00.i = alloca i64, align 8
  %x0C0030F0.i = alloca i64, align 8
  %x0C0CC0C0.i = alloca i64, align 8
  %x0CF3C03F.i = alloca i64, align 8
  %x5EFBDA7F.i = alloca i64, align 8
  %x52FBCA0F.i = alloca i64, align 8
  %x61C8F93C.i = alloca i64, align 8
  %x00C0C03C.i = alloca i64, align 8
  %x0F0F30C0.i = alloca i64, align 8
  %x3B92A366.i = alloca i64, align 8
  %x30908326.i = alloca i64, align 8
  %x3C90B3D6.i = alloca i64, align 8
  %x33CC33CC.i460 = alloca i64, align 8
  %x0C0CFFFF.i = alloca i64, align 8
  %x379E5C99.i = alloca i64, align 8
  %x04124C11.i = alloca i64, align 8
  %x56E9861E.i = alloca i64, align 8
  %xA91679E1.i = alloca i64, align 8
  %x9586CA37.i = alloca i64, align 8
  %x8402C833.i = alloca i64, align 8
  %x84C2C83F.i = alloca i64, align 8
  %xB35C94A6.i = alloca i64, align 8
  %x00.i461 = alloca i64, align 8
  %x01.i462 = alloca i64, align 8
  %x10.i463 = alloca i64, align 8
  %x11.i464 = alloca i64, align 8
  %x20.i465 = alloca i64, align 8
  %x21.i466 = alloca i64, align 8
  %x30.i467 = alloca i64, align 8
  %x31.i468 = alloca i64, align 8
  %a1.addr.i394 = alloca i64, align 8
  %a2.addr.i395 = alloca i64, align 8
  %a3.addr.i396 = alloca i64, align 8
  %a4.addr.i397 = alloca i64, align 8
  %a5.addr.i398 = alloca i64, align 8
  %a6.addr.i399 = alloca i64, align 8
  %out1.addr.i400 = alloca i64*, align 8
  %out2.addr.i401 = alloca i64*, align 8
  %out3.addr.i402 = alloca i64*, align 8
  %out4.addr.i403 = alloca i64*, align 8
  %x77777777.i = alloca i64, align 8
  %x77770000.i = alloca i64, align 8
  %x22225555.i = alloca i64, align 8
  %x11116666.i = alloca i64, align 8
  %x1F1F6F6F.i = alloca i64, align 8
  %x70700000.i = alloca i64, align 8
  %x43433333.i = alloca i64, align 8
  %x00430033.i = alloca i64, align 8
  %x55557777.i = alloca i64, align 8
  %x55167744.i = alloca i64, align 8
  %x5A19784B.i = alloca i64, align 8
  %x5A1987B4.i = alloca i64, align 8
  %x7A3BD7F5.i = alloca i64, align 8
  %x003B00F5.i = alloca i64, align 8
  %x221955A0.i = alloca i64, align 8
  %x05050707.i = alloca i64, align 8
  %x271C52A7.i = alloca i64, align 8
  %x2A2A82A0.i = alloca i64, align 8
  %x6969B193.i = alloca i64, align 8
  %x1FE06F90.i = alloca i64, align 8
  %x16804E00.i = alloca i64, align 8
  %xE97FB1FF.i = alloca i64, align 8
  %x43403302.i = alloca i64, align 8
  %x35CAED30.i = alloca i64, align 8
  %x37DEFFB7.i = alloca i64, align 8
  %x349ECCB5.i = alloca i64, align 8
  %x0B01234A.i = alloca i64, align 8
  %x101884B4.i = alloca i64, align 8
  %x0FF8EB24.i = alloca i64, align 8
  %x41413333.i = alloca i64, align 8
  %x4FF9FB37.i = alloca i64, align 8
  %x4FC2FBC2.i = alloca i64, align 8
  %x22222222.i = alloca i64, align 8
  %x16BCEE97.i = alloca i64, align 8
  %x0F080B04.i = alloca i64, align 8
  %x19B4E593.i = alloca i64, align 8
  %x5C5C5C5C.i = alloca i64, align 8
  %x4448184C.i = alloca i64, align 8
  %x2DDABE71.i = alloca i64, align 8
  %x6992A63D.i = alloca i64, align 8
  %x00.i404 = alloca i64, align 8
  %x01.i405 = alloca i64, align 8
  %x10.i406 = alloca i64, align 8
  %x11.i407 = alloca i64, align 8
  %x20.i408 = alloca i64, align 8
  %x21.i409 = alloca i64, align 8
  %x30.i410 = alloca i64, align 8
  %x31.i411 = alloca i64, align 8
  %a1.addr.i337 = alloca i64, align 8
  %a2.addr.i338 = alloca i64, align 8
  %a3.addr.i339 = alloca i64, align 8
  %a4.addr.i340 = alloca i64, align 8
  %a5.addr.i341 = alloca i64, align 8
  %a6.addr.i342 = alloca i64, align 8
  %out1.addr.i343 = alloca i64*, align 8
  %out2.addr.i344 = alloca i64*, align 8
  %out3.addr.i345 = alloca i64*, align 8
  %out4.addr.i346 = alloca i64*, align 8
  %x33CC33CC.i = alloca i64, align 8
  %x3333FFFF.i = alloca i64, align 8
  %x11115555.i = alloca i64, align 8
  %x22DD6699.i = alloca i64, align 8
  %x22DD9966.i = alloca i64, align 8
  %x00220099.i = alloca i64, align 8
  %x00551144.i = alloca i64, align 8
  %x33662277.i = alloca i64, align 8
  %x5A5A5A5A.i = alloca i64, align 8
  %x7B7E7A7F.i = alloca i64, align 8
  %x59A31CE6.i = alloca i64, align 8
  %x09030C06.i = alloca i64, align 8
  %x09030000.i = alloca i64, align 8
  %x336622FF.i = alloca i64, align 8
  %x3A6522FF.i = alloca i64, align 8
  %x484D494C.i = alloca i64, align 8
  %x0000B6B3.i = alloca i64, align 8
  %x0F0FB9BC.i = alloca i64, align 8
  %x00FC00F9.i = alloca i64, align 8
  %x0FFFB9FD.i = alloca i64, align 8
  %x5DF75DF7.i = alloca i64, align 8
  %x116600F7.i = alloca i64, align 8
  %x1E69B94B.i = alloca i64, align 8
  %x1668B94B.i = alloca i64, align 8
  %x7B7B7B7B.i = alloca i64, align 8
  %x411E5984.i = alloca i64, align 8
  %x1FFFFDFD.i = alloca i64, align 8
  %x5EE1A479.i = alloca i64, align 8
  %x3CB4DFD2.i = alloca i64, align 8
  %x004B002D.i = alloca i64, align 8
  %xB7B2B6B3.i = alloca i64, align 8
  %xCCC9CDC8.i = alloca i64, align 8
  %xCC82CDE5.i = alloca i64, align 8
  %x0055EEBB.i = alloca i64, align 8
  %x5A5AECE9.i = alloca i64, align 8
  %x0050ECA9.i = alloca i64, align 8
  %xC5CAC1CE.i = alloca i64, align 8
  %xC59A2D67.i = alloca i64, align 8
  %x00.i347 = alloca i64, align 8
  %x01.i348 = alloca i64, align 8
  %x10.i349 = alloca i64, align 8
  %x11.i350 = alloca i64, align 8
  %x20.i351 = alloca i64, align 8
  %x21.i352 = alloca i64, align 8
  %x30.i353 = alloca i64, align 8
  %x31.i354 = alloca i64, align 8
  %a1.addr.i294 = alloca i64, align 8
  %a2.addr.i295 = alloca i64, align 8
  %a3.addr.i296 = alloca i64, align 8
  %a4.addr.i297 = alloca i64, align 8
  %a5.addr.i298 = alloca i64, align 8
  %a6.addr.i299 = alloca i64, align 8
  %out1.addr.i300 = alloca i64*, align 8
  %out2.addr.i301 = alloca i64*, align 8
  %out3.addr.i302 = alloca i64*, align 8
  %out4.addr.i303 = alloca i64*, align 8
  %x0FF00FF0.i = alloca i64, align 8
  %x3CC33CC3.i = alloca i64, align 8
  %x00003CC3.i = alloca i64, align 8
  %x0F000F00.i = alloca i64, align 8
  %x5A555A55.i = alloca i64, align 8
  %x00001841.i = alloca i64, align 8
  %x00000F00.i = alloca i64, align 8
  %x33333C33.i = alloca i64, align 8
  %x7B777E77.i = alloca i64, align 8
  %x0FF0F00F.i = alloca i64, align 8
  %x74878E78.i = alloca i64, align 8
  %x003C003C.i = alloca i64, align 8
  %x5A7D5A7D.i = alloca i64, align 8
  %x333300F0.i = alloca i64, align 8
  %x694E5A8D.i = alloca i64, align 8
  %x0FF0CCCC.i = alloca i64, align 8
  %x000F0303.i = alloca i64, align 8
  %x5A505854.i = alloca i64, align 8
  %x33CC000F.i = alloca i64, align 8
  %x699C585B.i = alloca i64, align 8
  %x7F878F78.i = alloca i64, align 8
  %x21101013.i = alloca i64, align 8
  %x7F979F7B.i = alloca i64, align 8
  %x30030CC0.i = alloca i64, align 8
  %x4F9493BB.i = alloca i64, align 8
  %x6F9CDBFB.i = alloca i64, align 8
  %x0000DBFB.i = alloca i64, align 8
  %x00005151.i = alloca i64, align 8
  %x26DAC936.i = alloca i64, align 8
  %x26DA9867.i = alloca i64, align 8
  %x21FF10FF.i = alloca i64, align 8
  %x21FFCB04.i = alloca i64, align 8
  %x2625C9C9.i = alloca i64, align 8
  %x27FFCBCD.i = alloca i64, align 8
  %x27FF1036.i = alloca i64, align 8
  %x27FF103E.i = alloca i64, align 8
  %xB06B6C44.i = alloca i64, align 8
  %x97947C7A.i = alloca i64, align 8
  %x00.i304 = alloca i64, align 8
  %x01.i305 = alloca i64, align 8
  %x10.i306 = alloca i64, align 8
  %x11.i307 = alloca i64, align 8
  %x20.i308 = alloca i64, align 8
  %x21.i309 = alloca i64, align 8
  %x30.i310 = alloca i64, align 8
  %x31.i311 = alloca i64, align 8
  %a1.addr.i = alloca i64, align 8
  %a2.addr.i = alloca i64, align 8
  %a3.addr.i = alloca i64, align 8
  %a4.addr.i = alloca i64, align 8
  %a5.addr.i = alloca i64, align 8
  %a6.addr.i = alloca i64, align 8
  %out1.addr.i = alloca i64*, align 8
  %out2.addr.i = alloca i64*, align 8
  %out3.addr.i = alloca i64*, align 8
  %out4.addr.i = alloca i64*, align 8
  %x0C0C0C0C.i = alloca i64, align 8
  %x0000F0F0.i = alloca i64, align 8
  %x00FFF00F.i = alloca i64, align 8
  %x00555005.i = alloca i64, align 8
  %x00515001.i = alloca i64, align 8
  %x33000330.i = alloca i64, align 8
  %x77555775.i = alloca i64, align 8
  %x30303030.i = alloca i64, align 8
  %x3030CFCF.i = alloca i64, align 8
  %x30104745.i = alloca i64, align 8
  %x30555745.i = alloca i64, align 8
  %xFF000FF0.i = alloca i64, align 8
  %xCF1048B5.i = alloca i64, align 8
  %x080A080A.i = alloca i64, align 8
  %xC71A40BF.i = alloca i64, align 8
  %xCB164CB3.i = alloca i64, align 8
  %x9E4319E6.i = alloca i64, align 8
  %x000019E6.i = alloca i64, align 8
  %xF429738C.i = alloca i64, align 8
  %xF4296A6A.i = alloca i64, align 8
  %xC729695A.i = alloca i64, align 8
  %xC47C3D2F.i = alloca i64, align 8
  %xF77F3F3F.i = alloca i64, align 8
  %x9E43E619.i = alloca i64, align 8
  %x693CD926.i = alloca i64, align 8
  %xF719A695.i = alloca i64, align 8
  %xF4FF73FF.i = alloca i64, align 8
  %x03E6D56A.i = alloca i64, align 8
  %x56B3803F.i = alloca i64, align 8
  %xF700A600.i = alloca i64, align 8
  %x61008000.i = alloca i64, align 8
  %x03B7856B.i = alloca i64, align 8
  %x62B7056B.i = alloca i64, align 8
  %x00.i = alloca i64, align 8
  %x01.i = alloca i64, align 8
  %x10.i = alloca i64, align 8
  %x11.i = alloca i64, align 8
  %x20.i = alloca i64, align 8
  %x21.i = alloca i64, align 8
  %x30.i = alloca i64, align 8
  %x31.i = alloca i64, align 8
  %kp.i = alloca i64*, align 8
  %ic.i = alloca i32, align 4
  %vp.i = alloca i64*, align 8
  %v0.i = alloca i64, align 8
  %v1.i = alloca i64, align 8
  %v2.i = alloca i64, align 8
  %v3.i = alloca i64, align 8
  %v4.i = alloca i64, align 8
  %v5.i = alloca i64, align 8
  %v6.i = alloca i64, align 8
  %v7.i = alloca i64, align 8
  %m.i = alloca i64, align 8
  %va.i = alloca i64, align 8
  %vb.i = alloca i64, align 8
  %tmp.i = alloca i64, align 8
  %m30.i = alloca i64, align 8
  %va32.i = alloca i64, align 8
  %vb34.i = alloca i64, align 8
  %tmp36.i = alloca i64, align 8
  %m60.i = alloca i64, align 8
  %va62.i = alloca i64, align 8
  %vb64.i = alloca i64, align 8
  %tmp66.i = alloca i64, align 8
  %m91.i = alloca i64, align 8
  %va93.i = alloca i64, align 8
  %vb95.i = alloca i64, align 8
  %tmp97.i = alloca i64, align 8
  %m122.i = alloca i64, align 8
  %va124.i = alloca i64, align 8
  %vb126.i = alloca i64, align 8
  %tmp128.i = alloca i64, align 8
  %m153.i = alloca i64, align 8
  %va155.i = alloca i64, align 8
  %vb157.i = alloca i64, align 8
  %tmp159.i = alloca i64, align 8
  %m184.i = alloca i64, align 8
  %va186.i = alloca i64, align 8
  %vb188.i = alloca i64, align 8
  %tmp190.i = alloca i64, align 8
  %m215.i = alloca i64, align 8
  %va217.i = alloca i64, align 8
  %vb219.i = alloca i64, align 8
  %tmp221.i = alloca i64, align 8
  %keys_count.addr = alloca i32, align 4
  %k = alloca i64**, align 8
  %rounds = alloca i32, align 4
  %z = alloca i64, align 8
  %o = alloca i64, align 8
  store i32 %keys_count, i32* %keys_count.addr, align 4
  store i64 0, i64* %z, align 8
  store i64 -1, i64* %o, align 8
  %0 = load i64, i64* %z, align 8
  store i64 %0, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 0), align 8
  %1 = load i64, i64* %z, align 8
  store i64 %1, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 1), align 8
  %2 = load i64, i64* %z, align 8
  store i64 %2, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 2), align 8
  %3 = load i64, i64* %z, align 8
  store i64 %3, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 3), align 8
  %4 = load i64, i64* %z, align 8
  store i64 %4, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 4), align 8
  %5 = load i64, i64* %z, align 8
  store i64 %5, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 5), align 8
  %6 = load i64, i64* %z, align 8
  store i64 %6, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 6), align 8
  %7 = load i64, i64* %z, align 8
  store i64 %7, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 7), align 8
  %8 = load i64, i64* %o, align 8
  store i64 %8, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 8), align 8
  %9 = load i64, i64* %o, align 8
  store i64 %9, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 9), align 8
  %10 = load i64, i64* %o, align 8
  store i64 %10, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 10), align 8
  %11 = load i64, i64* %z, align 8
  store i64 %11, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 11), align 8
  %12 = load i64, i64* %o, align 8
  store i64 %12, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 12), align 8
  %13 = load i64, i64* %z, align 8
  store i64 %13, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 13), align 8
  %14 = load i64, i64* %z, align 8
  store i64 %14, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 14), align 8
  %15 = load i64, i64* %z, align 8
  store i64 %15, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 15), align 8
  %16 = load i64, i64* %z, align 8
  store i64 %16, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 16), align 8
  %17 = load i64, i64* %z, align 8
  store i64 %17, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 17), align 8
  %18 = load i64, i64* %z, align 8
  store i64 %18, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 18), align 8
  %19 = load i64, i64* %z, align 8
  store i64 %19, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 19), align 8
  %20 = load i64, i64* %z, align 8
  store i64 %20, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 20), align 8
  %21 = load i64, i64* %z, align 8
  store i64 %21, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 21), align 8
  %22 = load i64, i64* %z, align 8
  store i64 %22, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 22), align 8
  %23 = load i64, i64* %o, align 8
  store i64 %23, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 23), align 8
  %24 = load i64, i64* %z, align 8
  store i64 %24, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 24), align 8
  %25 = load i64, i64* %z, align 8
  store i64 %25, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 25), align 8
  %26 = load i64, i64* %o, align 8
  store i64 %26, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 26), align 8
  %27 = load i64, i64* %z, align 8
  store i64 %27, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 27), align 8
  %28 = load i64, i64* %z, align 8
  store i64 %28, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 28), align 8
  %29 = load i64, i64* %o, align 8
  store i64 %29, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 29), align 8
  %30 = load i64, i64* %o, align 8
  store i64 %30, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 30), align 8
  %31 = load i64, i64* %o, align 8
  store i64 %31, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 31), align 8
  %32 = load i64, i64* %z, align 8
  store i64 %32, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 32), align 8
  %33 = load i64, i64* %z, align 8
  store i64 %33, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 33), align 8
  %34 = load i64, i64* %z, align 8
  store i64 %34, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 34), align 8
  %35 = load i64, i64* %o, align 8
  store i64 %35, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 35), align 8
  %36 = load i64, i64* %z, align 8
  store i64 %36, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 36), align 8
  %37 = load i64, i64* %o, align 8
  store i64 %37, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 37), align 8
  %38 = load i64, i64* %o, align 8
  store i64 %38, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 38), align 8
  %39 = load i64, i64* %o, align 8
  store i64 %39, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 39), align 8
  %40 = load i64, i64* %z, align 8
  store i64 %40, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 40), align 8
  %41 = load i64, i64* %z, align 8
  store i64 %41, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 41), align 8
  %42 = load i64, i64* %z, align 8
  store i64 %42, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 42), align 8
  %43 = load i64, i64* %z, align 8
  store i64 %43, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 43), align 8
  %44 = load i64, i64* %z, align 8
  store i64 %44, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 44), align 8
  %45 = load i64, i64* %o, align 8
  store i64 %45, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 45), align 8
  %46 = load i64, i64* %z, align 8
  store i64 %46, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 46), align 8
  %47 = load i64, i64* %z, align 8
  store i64 %47, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 47), align 8
  %48 = load i64, i64* %o, align 8
  store i64 %48, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 48), align 8
  %49 = load i64, i64* %o, align 8
  store i64 %49, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 49), align 8
  %50 = load i64, i64* %z, align 8
  store i64 %50, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 50), align 8
  %51 = load i64, i64* %z, align 8
  store i64 %51, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 51), align 8
  %52 = load i64, i64* %z, align 8
  store i64 %52, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 52), align 8
  %53 = load i64, i64* %z, align 8
  store i64 %53, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 53), align 8
  %54 = load i64, i64* %o, align 8
  store i64 %54, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 54), align 8
  %55 = load i64, i64* %z, align 8
  store i64 %55, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 55), align 8
  %56 = load i64, i64* %o, align 8
  store i64 %56, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 56), align 8
  %57 = load i64, i64* %z, align 8
  store i64 %57, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 57), align 8
  %58 = load i64, i64* %o, align 8
  store i64 %58, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 58), align 8
  %59 = load i64, i64* %z, align 8
  store i64 %59, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 59), align 8
  %60 = load i64, i64* %o, align 8
  store i64 %60, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 60), align 8
  %61 = load i64, i64* %o, align 8
  store i64 %61, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 61), align 8
  %62 = load i64, i64* %o, align 8
  store i64 %62, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 62), align 8
  %63 = load i64, i64* %o, align 8
  store i64 %63, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 63), align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 2, i64 0), i64** %kp.i, align 8
  store i32 0, i32* %ic.i, align 4
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i, %entry
  %64 = load i32, i32* %ic.i, align 4
  %cmp.i = icmp slt i32 %64, 7
  br i1 %cmp.i, label %for.body.i, label %DES_bs_finalize_keys_LM.exit

for.body.i:                                       ; preds = %for.cond.i
  %65 = load i32, i32* %ic.i, align 4
  %idxprom.i = sext i32 %65 to i64
  %arrayidx.i = getelementptr inbounds [8 x [8 x i64]], [8 x [8 x i64]]* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 7, i32 0), i64 0, i64 %idxprom.i
  %arrayidx1.i = getelementptr inbounds [8 x i64], [8 x i64]* %arrayidx.i, i64 0, i64 0
  store i64* %arrayidx1.i, i64** %vp.i, align 8
  %66 = load i64*, i64** %vp.i, align 8
  %67 = load i64, i64* %66, align 8
  store i64 %67, i64* %v0.i, align 8
  %68 = load i64*, i64** %vp.i, align 8
  %arrayidx3.i = getelementptr inbounds i64, i64* %68, i64 1
  %69 = load i64, i64* %arrayidx3.i, align 8
  store i64 %69, i64* %v1.i, align 8
  %70 = load i64*, i64** %vp.i, align 8
  %arrayidx4.i = getelementptr inbounds i64, i64* %70, i64 2
  %71 = load i64, i64* %arrayidx4.i, align 8
  store i64 %71, i64* %v2.i, align 8
  %72 = load i64*, i64** %vp.i, align 8
  %arrayidx5.i = getelementptr inbounds i64, i64* %72, i64 3
  %73 = load i64, i64* %arrayidx5.i, align 8
  store i64 %73, i64* %v3.i, align 8
  %74 = load i64*, i64** %vp.i, align 8
  %arrayidx6.i = getelementptr inbounds i64, i64* %74, i64 4
  %75 = load i64, i64* %arrayidx6.i, align 8
  store i64 %75, i64* %v4.i, align 8
  %76 = load i64*, i64** %vp.i, align 8
  %arrayidx7.i = getelementptr inbounds i64, i64* %76, i64 5
  %77 = load i64, i64* %arrayidx7.i, align 8
  store i64 %77, i64* %v5.i, align 8
  %78 = load i64*, i64** %vp.i, align 8
  %arrayidx8.i = getelementptr inbounds i64, i64* %78, i64 6
  %79 = load i64, i64* %arrayidx8.i, align 8
  store i64 %79, i64* %v6.i, align 8
  %80 = load i64*, i64** %vp.i, align 8
  %arrayidx9.i = getelementptr inbounds i64, i64* %80, i64 7
  %81 = load i64, i64* %arrayidx9.i, align 8
  store i64 %81, i64* %v7.i, align 8
  store i64 72340172838076673, i64* %m.i, align 8
  %82 = load i64, i64* %v0.i, align 8
  %83 = load i64, i64* %m.i, align 8
  %and.i = and i64 %82, %83
  store i64 %and.i, i64* %va.i, align 8
  %84 = load i64, i64* %v1.i, align 8
  %85 = load i64, i64* %m.i, align 8
  %and10.i = and i64 %84, %85
  store i64 %and10.i, i64* %tmp.i, align 8
  %86 = load i64, i64* %tmp.i, align 8
  %shl.i = shl i64 %86, 1
  store i64 %shl.i, i64* %vb.i, align 8
  %87 = load i64, i64* %v2.i, align 8
  %88 = load i64, i64* %m.i, align 8
  %and11.i = and i64 %87, %88
  store i64 %and11.i, i64* %tmp.i, align 8
  %89 = load i64, i64* %tmp.i, align 8
  %shl12.i = shl i64 %89, 2
  store i64 %shl12.i, i64* %tmp.i, align 8
  %90 = load i64, i64* %va.i, align 8
  %91 = load i64, i64* %tmp.i, align 8
  %or.i = or i64 %90, %91
  store i64 %or.i, i64* %va.i, align 8
  %92 = load i64, i64* %v3.i, align 8
  %93 = load i64, i64* %m.i, align 8
  %and13.i = and i64 %92, %93
  store i64 %and13.i, i64* %tmp.i, align 8
  %94 = load i64, i64* %tmp.i, align 8
  %shl14.i = shl i64 %94, 3
  store i64 %shl14.i, i64* %tmp.i, align 8
  %95 = load i64, i64* %vb.i, align 8
  %96 = load i64, i64* %tmp.i, align 8
  %or15.i = or i64 %95, %96
  store i64 %or15.i, i64* %vb.i, align 8
  %97 = load i64, i64* %v4.i, align 8
  %98 = load i64, i64* %m.i, align 8
  %and16.i = and i64 %97, %98
  store i64 %and16.i, i64* %tmp.i, align 8
  %99 = load i64, i64* %tmp.i, align 8
  %shl17.i = shl i64 %99, 4
  store i64 %shl17.i, i64* %tmp.i, align 8
  %100 = load i64, i64* %va.i, align 8
  %101 = load i64, i64* %tmp.i, align 8
  %or18.i = or i64 %100, %101
  store i64 %or18.i, i64* %va.i, align 8
  %102 = load i64, i64* %v5.i, align 8
  %103 = load i64, i64* %m.i, align 8
  %and19.i = and i64 %102, %103
  store i64 %and19.i, i64* %tmp.i, align 8
  %104 = load i64, i64* %tmp.i, align 8
  %shl20.i = shl i64 %104, 5
  store i64 %shl20.i, i64* %tmp.i, align 8
  %105 = load i64, i64* %vb.i, align 8
  %106 = load i64, i64* %tmp.i, align 8
  %or21.i = or i64 %105, %106
  store i64 %or21.i, i64* %vb.i, align 8
  %107 = load i64, i64* %v6.i, align 8
  %108 = load i64, i64* %m.i, align 8
  %and22.i = and i64 %107, %108
  store i64 %and22.i, i64* %tmp.i, align 8
  %109 = load i64, i64* %tmp.i, align 8
  %shl23.i = shl i64 %109, 6
  store i64 %shl23.i, i64* %tmp.i, align 8
  %110 = load i64, i64* %va.i, align 8
  %111 = load i64, i64* %tmp.i, align 8
  %or24.i = or i64 %110, %111
  store i64 %or24.i, i64* %va.i, align 8
  %112 = load i64, i64* %v7.i, align 8
  %113 = load i64, i64* %m.i, align 8
  %and25.i = and i64 %112, %113
  store i64 %and25.i, i64* %tmp.i, align 8
  %114 = load i64, i64* %tmp.i, align 8
  %shl26.i = shl i64 %114, 7
  store i64 %shl26.i, i64* %tmp.i, align 8
  %115 = load i64, i64* %vb.i, align 8
  %116 = load i64, i64* %tmp.i, align 8
  %or27.i = or i64 %115, %116
  store i64 %or27.i, i64* %vb.i, align 8
  %117 = load i64, i64* %va.i, align 8
  %118 = load i64, i64* %vb.i, align 8
  %or28.i = or i64 %117, %118
  %119 = load i64*, i64** %kp.i, align 8
  store i64 %or28.i, i64* %119, align 8
  %120 = load i64*, i64** %kp.i, align 8
  %incdec.ptr.i = getelementptr inbounds i64, i64* %120, i32 1
  store i64* %incdec.ptr.i, i64** %kp.i, align 8
  store i64 144680345676153346, i64* %m30.i, align 8
  %121 = load i64, i64* %v0.i, align 8
  %122 = load i64, i64* %m30.i, align 8
  %and37.i = and i64 %121, %122
  store i64 %and37.i, i64* %tmp36.i, align 8
  %123 = load i64, i64* %tmp36.i, align 8
  %shr.i = lshr i64 %123, 1
  store i64 %shr.i, i64* %va32.i, align 8
  %124 = load i64, i64* %v1.i, align 8
  %125 = load i64, i64* %m30.i, align 8
  %and38.i = and i64 %124, %125
  store i64 %and38.i, i64* %vb34.i, align 8
  %126 = load i64, i64* %v2.i, align 8
  %127 = load i64, i64* %m30.i, align 8
  %and39.i = and i64 %126, %127
  store i64 %and39.i, i64* %tmp36.i, align 8
  %128 = load i64, i64* %tmp36.i, align 8
  %shl40.i = shl i64 %128, 1
  store i64 %shl40.i, i64* %tmp36.i, align 8
  %129 = load i64, i64* %va32.i, align 8
  %130 = load i64, i64* %tmp36.i, align 8
  %or41.i = or i64 %129, %130
  store i64 %or41.i, i64* %va32.i, align 8
  %131 = load i64, i64* %v3.i, align 8
  %132 = load i64, i64* %m30.i, align 8
  %and42.i = and i64 %131, %132
  store i64 %and42.i, i64* %tmp36.i, align 8
  %133 = load i64, i64* %tmp36.i, align 8
  %shl43.i = shl i64 %133, 2
  store i64 %shl43.i, i64* %tmp36.i, align 8
  %134 = load i64, i64* %vb34.i, align 8
  %135 = load i64, i64* %tmp36.i, align 8
  %or44.i = or i64 %134, %135
  store i64 %or44.i, i64* %vb34.i, align 8
  %136 = load i64, i64* %v4.i, align 8
  %137 = load i64, i64* %m30.i, align 8
  %and45.i = and i64 %136, %137
  store i64 %and45.i, i64* %tmp36.i, align 8
  %138 = load i64, i64* %tmp36.i, align 8
  %shl46.i = shl i64 %138, 3
  store i64 %shl46.i, i64* %tmp36.i, align 8
  %139 = load i64, i64* %va32.i, align 8
  %140 = load i64, i64* %tmp36.i, align 8
  %or47.i = or i64 %139, %140
  store i64 %or47.i, i64* %va32.i, align 8
  %141 = load i64, i64* %v5.i, align 8
  %142 = load i64, i64* %m30.i, align 8
  %and48.i = and i64 %141, %142
  store i64 %and48.i, i64* %tmp36.i, align 8
  %143 = load i64, i64* %tmp36.i, align 8
  %shl49.i = shl i64 %143, 4
  store i64 %shl49.i, i64* %tmp36.i, align 8
  %144 = load i64, i64* %vb34.i, align 8
  %145 = load i64, i64* %tmp36.i, align 8
  %or50.i = or i64 %144, %145
  store i64 %or50.i, i64* %vb34.i, align 8
  %146 = load i64, i64* %v6.i, align 8
  %147 = load i64, i64* %m30.i, align 8
  %and51.i = and i64 %146, %147
  store i64 %and51.i, i64* %tmp36.i, align 8
  %148 = load i64, i64* %tmp36.i, align 8
  %shl52.i = shl i64 %148, 5
  store i64 %shl52.i, i64* %tmp36.i, align 8
  %149 = load i64, i64* %va32.i, align 8
  %150 = load i64, i64* %tmp36.i, align 8
  %or53.i = or i64 %149, %150
  store i64 %or53.i, i64* %va32.i, align 8
  %151 = load i64, i64* %v7.i, align 8
  %152 = load i64, i64* %m30.i, align 8
  %and54.i = and i64 %151, %152
  store i64 %and54.i, i64* %tmp36.i, align 8
  %153 = load i64, i64* %tmp36.i, align 8
  %shl55.i = shl i64 %153, 6
  store i64 %shl55.i, i64* %tmp36.i, align 8
  %154 = load i64, i64* %vb34.i, align 8
  %155 = load i64, i64* %tmp36.i, align 8
  %or56.i = or i64 %154, %155
  store i64 %or56.i, i64* %vb34.i, align 8
  %156 = load i64, i64* %va32.i, align 8
  %157 = load i64, i64* %vb34.i, align 8
  %or57.i = or i64 %156, %157
  %158 = load i64*, i64** %kp.i, align 8
  store i64 %or57.i, i64* %158, align 8
  %159 = load i64*, i64** %kp.i, align 8
  %incdec.ptr58.i = getelementptr inbounds i64, i64* %159, i32 1
  store i64* %incdec.ptr58.i, i64** %kp.i, align 8
  store i64 289360691352306692, i64* %m60.i, align 8
  %160 = load i64, i64* %v0.i, align 8
  %161 = load i64, i64* %m60.i, align 8
  %and67.i = and i64 %160, %161
  store i64 %and67.i, i64* %tmp66.i, align 8
  %162 = load i64, i64* %tmp66.i, align 8
  %shr68.i = lshr i64 %162, 2
  store i64 %shr68.i, i64* %va62.i, align 8
  %163 = load i64, i64* %v1.i, align 8
  %164 = load i64, i64* %m60.i, align 8
  %and69.i = and i64 %163, %164
  store i64 %and69.i, i64* %tmp66.i, align 8
  %165 = load i64, i64* %tmp66.i, align 8
  %shr70.i = lshr i64 %165, 1
  store i64 %shr70.i, i64* %vb64.i, align 8
  %166 = load i64, i64* %v2.i, align 8
  %167 = load i64, i64* %m60.i, align 8
  %and71.i = and i64 %166, %167
  store i64 %and71.i, i64* %tmp66.i, align 8
  %168 = load i64, i64* %va62.i, align 8
  %169 = load i64, i64* %tmp66.i, align 8
  %or72.i = or i64 %168, %169
  store i64 %or72.i, i64* %va62.i, align 8
  %170 = load i64, i64* %v3.i, align 8
  %171 = load i64, i64* %m60.i, align 8
  %and73.i = and i64 %170, %171
  store i64 %and73.i, i64* %tmp66.i, align 8
  %172 = load i64, i64* %tmp66.i, align 8
  %shl74.i = shl i64 %172, 1
  store i64 %shl74.i, i64* %tmp66.i, align 8
  %173 = load i64, i64* %vb64.i, align 8
  %174 = load i64, i64* %tmp66.i, align 8
  %or75.i = or i64 %173, %174
  store i64 %or75.i, i64* %vb64.i, align 8
  %175 = load i64, i64* %v4.i, align 8
  %176 = load i64, i64* %m60.i, align 8
  %and76.i = and i64 %175, %176
  store i64 %and76.i, i64* %tmp66.i, align 8
  %177 = load i64, i64* %tmp66.i, align 8
  %shl77.i = shl i64 %177, 2
  store i64 %shl77.i, i64* %tmp66.i, align 8
  %178 = load i64, i64* %va62.i, align 8
  %179 = load i64, i64* %tmp66.i, align 8
  %or78.i = or i64 %178, %179
  store i64 %or78.i, i64* %va62.i, align 8
  %180 = load i64, i64* %v5.i, align 8
  %181 = load i64, i64* %m60.i, align 8
  %and79.i = and i64 %180, %181
  store i64 %and79.i, i64* %tmp66.i, align 8
  %182 = load i64, i64* %tmp66.i, align 8
  %shl80.i = shl i64 %182, 3
  store i64 %shl80.i, i64* %tmp66.i, align 8
  %183 = load i64, i64* %vb64.i, align 8
  %184 = load i64, i64* %tmp66.i, align 8
  %or81.i = or i64 %183, %184
  store i64 %or81.i, i64* %vb64.i, align 8
  %185 = load i64, i64* %v6.i, align 8
  %186 = load i64, i64* %m60.i, align 8
  %and82.i = and i64 %185, %186
  store i64 %and82.i, i64* %tmp66.i, align 8
  %187 = load i64, i64* %tmp66.i, align 8
  %shl83.i = shl i64 %187, 4
  store i64 %shl83.i, i64* %tmp66.i, align 8
  %188 = load i64, i64* %va62.i, align 8
  %189 = load i64, i64* %tmp66.i, align 8
  %or84.i = or i64 %188, %189
  store i64 %or84.i, i64* %va62.i, align 8
  %190 = load i64, i64* %v7.i, align 8
  %191 = load i64, i64* %m60.i, align 8
  %and85.i = and i64 %190, %191
  store i64 %and85.i, i64* %tmp66.i, align 8
  %192 = load i64, i64* %tmp66.i, align 8
  %shl86.i = shl i64 %192, 5
  store i64 %shl86.i, i64* %tmp66.i, align 8
  %193 = load i64, i64* %vb64.i, align 8
  %194 = load i64, i64* %tmp66.i, align 8
  %or87.i = or i64 %193, %194
  store i64 %or87.i, i64* %vb64.i, align 8
  %195 = load i64, i64* %va62.i, align 8
  %196 = load i64, i64* %vb64.i, align 8
  %or88.i = or i64 %195, %196
  %197 = load i64*, i64** %kp.i, align 8
  store i64 %or88.i, i64* %197, align 8
  %198 = load i64*, i64** %kp.i, align 8
  %incdec.ptr89.i = getelementptr inbounds i64, i64* %198, i32 1
  store i64* %incdec.ptr89.i, i64** %kp.i, align 8
  store i64 578721382704613384, i64* %m91.i, align 8
  %199 = load i64, i64* %v0.i, align 8
  %200 = load i64, i64* %m91.i, align 8
  %and98.i = and i64 %199, %200
  store i64 %and98.i, i64* %tmp97.i, align 8
  %201 = load i64, i64* %tmp97.i, align 8
  %shr99.i = lshr i64 %201, 3
  store i64 %shr99.i, i64* %va93.i, align 8
  %202 = load i64, i64* %v1.i, align 8
  %203 = load i64, i64* %m91.i, align 8
  %and100.i = and i64 %202, %203
  store i64 %and100.i, i64* %tmp97.i, align 8
  %204 = load i64, i64* %tmp97.i, align 8
  %shr101.i = lshr i64 %204, 2
  store i64 %shr101.i, i64* %vb95.i, align 8
  %205 = load i64, i64* %v2.i, align 8
  %206 = load i64, i64* %m91.i, align 8
  %and102.i = and i64 %205, %206
  store i64 %and102.i, i64* %tmp97.i, align 8
  %207 = load i64, i64* %tmp97.i, align 8
  %shr103.i = lshr i64 %207, 1
  store i64 %shr103.i, i64* %tmp97.i, align 8
  %208 = load i64, i64* %va93.i, align 8
  %209 = load i64, i64* %tmp97.i, align 8
  %or104.i = or i64 %208, %209
  store i64 %or104.i, i64* %va93.i, align 8
  %210 = load i64, i64* %v3.i, align 8
  %211 = load i64, i64* %m91.i, align 8
  %and105.i = and i64 %210, %211
  store i64 %and105.i, i64* %tmp97.i, align 8
  %212 = load i64, i64* %vb95.i, align 8
  %213 = load i64, i64* %tmp97.i, align 8
  %or106.i = or i64 %212, %213
  store i64 %or106.i, i64* %vb95.i, align 8
  %214 = load i64, i64* %v4.i, align 8
  %215 = load i64, i64* %m91.i, align 8
  %and107.i = and i64 %214, %215
  store i64 %and107.i, i64* %tmp97.i, align 8
  %216 = load i64, i64* %tmp97.i, align 8
  %shl108.i = shl i64 %216, 1
  store i64 %shl108.i, i64* %tmp97.i, align 8
  %217 = load i64, i64* %va93.i, align 8
  %218 = load i64, i64* %tmp97.i, align 8
  %or109.i = or i64 %217, %218
  store i64 %or109.i, i64* %va93.i, align 8
  %219 = load i64, i64* %v5.i, align 8
  %220 = load i64, i64* %m91.i, align 8
  %and110.i = and i64 %219, %220
  store i64 %and110.i, i64* %tmp97.i, align 8
  %221 = load i64, i64* %tmp97.i, align 8
  %shl111.i = shl i64 %221, 2
  store i64 %shl111.i, i64* %tmp97.i, align 8
  %222 = load i64, i64* %vb95.i, align 8
  %223 = load i64, i64* %tmp97.i, align 8
  %or112.i = or i64 %222, %223
  store i64 %or112.i, i64* %vb95.i, align 8
  %224 = load i64, i64* %v6.i, align 8
  %225 = load i64, i64* %m91.i, align 8
  %and113.i = and i64 %224, %225
  store i64 %and113.i, i64* %tmp97.i, align 8
  %226 = load i64, i64* %tmp97.i, align 8
  %shl114.i = shl i64 %226, 3
  store i64 %shl114.i, i64* %tmp97.i, align 8
  %227 = load i64, i64* %va93.i, align 8
  %228 = load i64, i64* %tmp97.i, align 8
  %or115.i = or i64 %227, %228
  store i64 %or115.i, i64* %va93.i, align 8
  %229 = load i64, i64* %v7.i, align 8
  %230 = load i64, i64* %m91.i, align 8
  %and116.i = and i64 %229, %230
  store i64 %and116.i, i64* %tmp97.i, align 8
  %231 = load i64, i64* %tmp97.i, align 8
  %shl117.i = shl i64 %231, 4
  store i64 %shl117.i, i64* %tmp97.i, align 8
  %232 = load i64, i64* %vb95.i, align 8
  %233 = load i64, i64* %tmp97.i, align 8
  %or118.i = or i64 %232, %233
  store i64 %or118.i, i64* %vb95.i, align 8
  %234 = load i64, i64* %va93.i, align 8
  %235 = load i64, i64* %vb95.i, align 8
  %or119.i = or i64 %234, %235
  %236 = load i64*, i64** %kp.i, align 8
  store i64 %or119.i, i64* %236, align 8
  %237 = load i64*, i64** %kp.i, align 8
  %incdec.ptr120.i = getelementptr inbounds i64, i64* %237, i32 1
  store i64* %incdec.ptr120.i, i64** %kp.i, align 8
  store i64 1157442765409226768, i64* %m122.i, align 8
  %238 = load i64, i64* %v0.i, align 8
  %239 = load i64, i64* %m122.i, align 8
  %and129.i = and i64 %238, %239
  store i64 %and129.i, i64* %tmp128.i, align 8
  %240 = load i64, i64* %tmp128.i, align 8
  %shr130.i = lshr i64 %240, 4
  store i64 %shr130.i, i64* %va124.i, align 8
  %241 = load i64, i64* %v1.i, align 8
  %242 = load i64, i64* %m122.i, align 8
  %and131.i = and i64 %241, %242
  store i64 %and131.i, i64* %tmp128.i, align 8
  %243 = load i64, i64* %tmp128.i, align 8
  %shr132.i = lshr i64 %243, 3
  store i64 %shr132.i, i64* %vb126.i, align 8
  %244 = load i64, i64* %v2.i, align 8
  %245 = load i64, i64* %m122.i, align 8
  %and133.i = and i64 %244, %245
  store i64 %and133.i, i64* %tmp128.i, align 8
  %246 = load i64, i64* %tmp128.i, align 8
  %shr134.i = lshr i64 %246, 2
  store i64 %shr134.i, i64* %tmp128.i, align 8
  %247 = load i64, i64* %va124.i, align 8
  %248 = load i64, i64* %tmp128.i, align 8
  %or135.i = or i64 %247, %248
  store i64 %or135.i, i64* %va124.i, align 8
  %249 = load i64, i64* %v3.i, align 8
  %250 = load i64, i64* %m122.i, align 8
  %and136.i = and i64 %249, %250
  store i64 %and136.i, i64* %tmp128.i, align 8
  %251 = load i64, i64* %tmp128.i, align 8
  %shr137.i = lshr i64 %251, 1
  store i64 %shr137.i, i64* %tmp128.i, align 8
  %252 = load i64, i64* %vb126.i, align 8
  %253 = load i64, i64* %tmp128.i, align 8
  %or138.i = or i64 %252, %253
  store i64 %or138.i, i64* %vb126.i, align 8
  %254 = load i64, i64* %v4.i, align 8
  %255 = load i64, i64* %m122.i, align 8
  %and139.i = and i64 %254, %255
  store i64 %and139.i, i64* %tmp128.i, align 8
  %256 = load i64, i64* %va124.i, align 8
  %257 = load i64, i64* %tmp128.i, align 8
  %or140.i = or i64 %256, %257
  store i64 %or140.i, i64* %va124.i, align 8
  %258 = load i64, i64* %v5.i, align 8
  %259 = load i64, i64* %m122.i, align 8
  %and141.i = and i64 %258, %259
  store i64 %and141.i, i64* %tmp128.i, align 8
  %260 = load i64, i64* %tmp128.i, align 8
  %shl142.i = shl i64 %260, 1
  store i64 %shl142.i, i64* %tmp128.i, align 8
  %261 = load i64, i64* %vb126.i, align 8
  %262 = load i64, i64* %tmp128.i, align 8
  %or143.i = or i64 %261, %262
  store i64 %or143.i, i64* %vb126.i, align 8
  %263 = load i64, i64* %v6.i, align 8
  %264 = load i64, i64* %m122.i, align 8
  %and144.i = and i64 %263, %264
  store i64 %and144.i, i64* %tmp128.i, align 8
  %265 = load i64, i64* %tmp128.i, align 8
  %shl145.i = shl i64 %265, 2
  store i64 %shl145.i, i64* %tmp128.i, align 8
  %266 = load i64, i64* %va124.i, align 8
  %267 = load i64, i64* %tmp128.i, align 8
  %or146.i = or i64 %266, %267
  store i64 %or146.i, i64* %va124.i, align 8
  %268 = load i64, i64* %v7.i, align 8
  %269 = load i64, i64* %m122.i, align 8
  %and147.i = and i64 %268, %269
  store i64 %and147.i, i64* %tmp128.i, align 8
  %270 = load i64, i64* %tmp128.i, align 8
  %shl148.i = shl i64 %270, 3
  store i64 %shl148.i, i64* %tmp128.i, align 8
  %271 = load i64, i64* %vb126.i, align 8
  %272 = load i64, i64* %tmp128.i, align 8
  %or149.i = or i64 %271, %272
  store i64 %or149.i, i64* %vb126.i, align 8
  %273 = load i64, i64* %va124.i, align 8
  %274 = load i64, i64* %vb126.i, align 8
  %or150.i = or i64 %273, %274
  %275 = load i64*, i64** %kp.i, align 8
  store i64 %or150.i, i64* %275, align 8
  %276 = load i64*, i64** %kp.i, align 8
  %incdec.ptr151.i = getelementptr inbounds i64, i64* %276, i32 1
  store i64* %incdec.ptr151.i, i64** %kp.i, align 8
  store i64 2314885530818453536, i64* %m153.i, align 8
  %277 = load i64, i64* %v0.i, align 8
  %278 = load i64, i64* %m153.i, align 8
  %and160.i = and i64 %277, %278
  store i64 %and160.i, i64* %tmp159.i, align 8
  %279 = load i64, i64* %tmp159.i, align 8
  %shr161.i = lshr i64 %279, 5
  store i64 %shr161.i, i64* %va155.i, align 8
  %280 = load i64, i64* %v1.i, align 8
  %281 = load i64, i64* %m153.i, align 8
  %and162.i = and i64 %280, %281
  store i64 %and162.i, i64* %tmp159.i, align 8
  %282 = load i64, i64* %tmp159.i, align 8
  %shr163.i = lshr i64 %282, 4
  store i64 %shr163.i, i64* %vb157.i, align 8
  %283 = load i64, i64* %v2.i, align 8
  %284 = load i64, i64* %m153.i, align 8
  %and164.i = and i64 %283, %284
  store i64 %and164.i, i64* %tmp159.i, align 8
  %285 = load i64, i64* %tmp159.i, align 8
  %shr165.i = lshr i64 %285, 3
  store i64 %shr165.i, i64* %tmp159.i, align 8
  %286 = load i64, i64* %va155.i, align 8
  %287 = load i64, i64* %tmp159.i, align 8
  %or166.i = or i64 %286, %287
  store i64 %or166.i, i64* %va155.i, align 8
  %288 = load i64, i64* %v3.i, align 8
  %289 = load i64, i64* %m153.i, align 8
  %and167.i = and i64 %288, %289
  store i64 %and167.i, i64* %tmp159.i, align 8
  %290 = load i64, i64* %tmp159.i, align 8
  %shr168.i = lshr i64 %290, 2
  store i64 %shr168.i, i64* %tmp159.i, align 8
  %291 = load i64, i64* %vb157.i, align 8
  %292 = load i64, i64* %tmp159.i, align 8
  %or169.i = or i64 %291, %292
  store i64 %or169.i, i64* %vb157.i, align 8
  %293 = load i64, i64* %v4.i, align 8
  %294 = load i64, i64* %m153.i, align 8
  %and170.i = and i64 %293, %294
  store i64 %and170.i, i64* %tmp159.i, align 8
  %295 = load i64, i64* %tmp159.i, align 8
  %shr171.i = lshr i64 %295, 1
  store i64 %shr171.i, i64* %tmp159.i, align 8
  %296 = load i64, i64* %va155.i, align 8
  %297 = load i64, i64* %tmp159.i, align 8
  %or172.i = or i64 %296, %297
  store i64 %or172.i, i64* %va155.i, align 8
  %298 = load i64, i64* %v5.i, align 8
  %299 = load i64, i64* %m153.i, align 8
  %and173.i = and i64 %298, %299
  store i64 %and173.i, i64* %tmp159.i, align 8
  %300 = load i64, i64* %vb157.i, align 8
  %301 = load i64, i64* %tmp159.i, align 8
  %or174.i = or i64 %300, %301
  store i64 %or174.i, i64* %vb157.i, align 8
  %302 = load i64, i64* %v6.i, align 8
  %303 = load i64, i64* %m153.i, align 8
  %and175.i = and i64 %302, %303
  store i64 %and175.i, i64* %tmp159.i, align 8
  %304 = load i64, i64* %tmp159.i, align 8
  %shl176.i = shl i64 %304, 1
  store i64 %shl176.i, i64* %tmp159.i, align 8
  %305 = load i64, i64* %va155.i, align 8
  %306 = load i64, i64* %tmp159.i, align 8
  %or177.i = or i64 %305, %306
  store i64 %or177.i, i64* %va155.i, align 8
  %307 = load i64, i64* %v7.i, align 8
  %308 = load i64, i64* %m153.i, align 8
  %and178.i = and i64 %307, %308
  store i64 %and178.i, i64* %tmp159.i, align 8
  %309 = load i64, i64* %tmp159.i, align 8
  %shl179.i = shl i64 %309, 2
  store i64 %shl179.i, i64* %tmp159.i, align 8
  %310 = load i64, i64* %vb157.i, align 8
  %311 = load i64, i64* %tmp159.i, align 8
  %or180.i = or i64 %310, %311
  store i64 %or180.i, i64* %vb157.i, align 8
  %312 = load i64, i64* %va155.i, align 8
  %313 = load i64, i64* %vb157.i, align 8
  %or181.i = or i64 %312, %313
  %314 = load i64*, i64** %kp.i, align 8
  store i64 %or181.i, i64* %314, align 8
  %315 = load i64*, i64** %kp.i, align 8
  %incdec.ptr182.i = getelementptr inbounds i64, i64* %315, i32 1
  store i64* %incdec.ptr182.i, i64** %kp.i, align 8
  store i64 4629771061636907072, i64* %m184.i, align 8
  %316 = load i64, i64* %v0.i, align 8
  %317 = load i64, i64* %m184.i, align 8
  %and191.i = and i64 %316, %317
  store i64 %and191.i, i64* %tmp190.i, align 8
  %318 = load i64, i64* %tmp190.i, align 8
  %shr192.i = lshr i64 %318, 6
  store i64 %shr192.i, i64* %va186.i, align 8
  %319 = load i64, i64* %v1.i, align 8
  %320 = load i64, i64* %m184.i, align 8
  %and193.i = and i64 %319, %320
  store i64 %and193.i, i64* %tmp190.i, align 8
  %321 = load i64, i64* %tmp190.i, align 8
  %shr194.i = lshr i64 %321, 5
  store i64 %shr194.i, i64* %vb188.i, align 8
  %322 = load i64, i64* %v2.i, align 8
  %323 = load i64, i64* %m184.i, align 8
  %and195.i = and i64 %322, %323
  store i64 %and195.i, i64* %tmp190.i, align 8
  %324 = load i64, i64* %tmp190.i, align 8
  %shr196.i = lshr i64 %324, 4
  store i64 %shr196.i, i64* %tmp190.i, align 8
  %325 = load i64, i64* %va186.i, align 8
  %326 = load i64, i64* %tmp190.i, align 8
  %or197.i = or i64 %325, %326
  store i64 %or197.i, i64* %va186.i, align 8
  %327 = load i64, i64* %v3.i, align 8
  %328 = load i64, i64* %m184.i, align 8
  %and198.i = and i64 %327, %328
  store i64 %and198.i, i64* %tmp190.i, align 8
  %329 = load i64, i64* %tmp190.i, align 8
  %shr199.i = lshr i64 %329, 3
  store i64 %shr199.i, i64* %tmp190.i, align 8
  %330 = load i64, i64* %vb188.i, align 8
  %331 = load i64, i64* %tmp190.i, align 8
  %or200.i = or i64 %330, %331
  store i64 %or200.i, i64* %vb188.i, align 8
  %332 = load i64, i64* %v4.i, align 8
  %333 = load i64, i64* %m184.i, align 8
  %and201.i = and i64 %332, %333
  store i64 %and201.i, i64* %tmp190.i, align 8
  %334 = load i64, i64* %tmp190.i, align 8
  %shr202.i = lshr i64 %334, 2
  store i64 %shr202.i, i64* %tmp190.i, align 8
  %335 = load i64, i64* %va186.i, align 8
  %336 = load i64, i64* %tmp190.i, align 8
  %or203.i = or i64 %335, %336
  store i64 %or203.i, i64* %va186.i, align 8
  %337 = load i64, i64* %v5.i, align 8
  %338 = load i64, i64* %m184.i, align 8
  %and204.i = and i64 %337, %338
  store i64 %and204.i, i64* %tmp190.i, align 8
  %339 = load i64, i64* %tmp190.i, align 8
  %shr205.i = lshr i64 %339, 1
  store i64 %shr205.i, i64* %tmp190.i, align 8
  %340 = load i64, i64* %vb188.i, align 8
  %341 = load i64, i64* %tmp190.i, align 8
  %or206.i = or i64 %340, %341
  store i64 %or206.i, i64* %vb188.i, align 8
  %342 = load i64, i64* %v6.i, align 8
  %343 = load i64, i64* %m184.i, align 8
  %and207.i = and i64 %342, %343
  store i64 %and207.i, i64* %tmp190.i, align 8
  %344 = load i64, i64* %va186.i, align 8
  %345 = load i64, i64* %tmp190.i, align 8
  %or208.i = or i64 %344, %345
  store i64 %or208.i, i64* %va186.i, align 8
  %346 = load i64, i64* %v7.i, align 8
  %347 = load i64, i64* %m184.i, align 8
  %and209.i = and i64 %346, %347
  store i64 %and209.i, i64* %tmp190.i, align 8
  %348 = load i64, i64* %tmp190.i, align 8
  %shl210.i = shl i64 %348, 1
  store i64 %shl210.i, i64* %tmp190.i, align 8
  %349 = load i64, i64* %vb188.i, align 8
  %350 = load i64, i64* %tmp190.i, align 8
  %or211.i = or i64 %349, %350
  store i64 %or211.i, i64* %vb188.i, align 8
  %351 = load i64, i64* %va186.i, align 8
  %352 = load i64, i64* %vb188.i, align 8
  %or212.i = or i64 %351, %352
  %353 = load i64*, i64** %kp.i, align 8
  store i64 %or212.i, i64* %353, align 8
  %354 = load i64*, i64** %kp.i, align 8
  %incdec.ptr213.i = getelementptr inbounds i64, i64* %354, i32 1
  store i64* %incdec.ptr213.i, i64** %kp.i, align 8
  store i64 -9187201950435737472, i64* %m215.i, align 8
  %355 = load i64, i64* %v0.i, align 8
  %356 = load i64, i64* %m215.i, align 8
  %and222.i = and i64 %355, %356
  store i64 %and222.i, i64* %tmp221.i, align 8
  %357 = load i64, i64* %tmp221.i, align 8
  %shr223.i = lshr i64 %357, 7
  store i64 %shr223.i, i64* %va217.i, align 8
  %358 = load i64, i64* %v1.i, align 8
  %359 = load i64, i64* %m215.i, align 8
  %and224.i = and i64 %358, %359
  store i64 %and224.i, i64* %tmp221.i, align 8
  %360 = load i64, i64* %tmp221.i, align 8
  %shr225.i = lshr i64 %360, 6
  store i64 %shr225.i, i64* %vb219.i, align 8
  %361 = load i64, i64* %v2.i, align 8
  %362 = load i64, i64* %m215.i, align 8
  %and226.i = and i64 %361, %362
  store i64 %and226.i, i64* %tmp221.i, align 8
  %363 = load i64, i64* %tmp221.i, align 8
  %shr227.i = lshr i64 %363, 5
  store i64 %shr227.i, i64* %tmp221.i, align 8
  %364 = load i64, i64* %va217.i, align 8
  %365 = load i64, i64* %tmp221.i, align 8
  %or228.i = or i64 %364, %365
  store i64 %or228.i, i64* %va217.i, align 8
  %366 = load i64, i64* %v3.i, align 8
  %367 = load i64, i64* %m215.i, align 8
  %and229.i = and i64 %366, %367
  store i64 %and229.i, i64* %tmp221.i, align 8
  %368 = load i64, i64* %tmp221.i, align 8
  %shr230.i = lshr i64 %368, 4
  store i64 %shr230.i, i64* %tmp221.i, align 8
  %369 = load i64, i64* %vb219.i, align 8
  %370 = load i64, i64* %tmp221.i, align 8
  %or231.i = or i64 %369, %370
  store i64 %or231.i, i64* %vb219.i, align 8
  %371 = load i64, i64* %v4.i, align 8
  %372 = load i64, i64* %m215.i, align 8
  %and232.i = and i64 %371, %372
  store i64 %and232.i, i64* %tmp221.i, align 8
  %373 = load i64, i64* %tmp221.i, align 8
  %shr233.i = lshr i64 %373, 3
  store i64 %shr233.i, i64* %tmp221.i, align 8
  %374 = load i64, i64* %va217.i, align 8
  %375 = load i64, i64* %tmp221.i, align 8
  %or234.i = or i64 %374, %375
  store i64 %or234.i, i64* %va217.i, align 8
  %376 = load i64, i64* %v5.i, align 8
  %377 = load i64, i64* %m215.i, align 8
  %and235.i = and i64 %376, %377
  store i64 %and235.i, i64* %tmp221.i, align 8
  %378 = load i64, i64* %tmp221.i, align 8
  %shr236.i = lshr i64 %378, 2
  store i64 %shr236.i, i64* %tmp221.i, align 8
  %379 = load i64, i64* %vb219.i, align 8
  %380 = load i64, i64* %tmp221.i, align 8
  %or237.i = or i64 %379, %380
  store i64 %or237.i, i64* %vb219.i, align 8
  %381 = load i64, i64* %v6.i, align 8
  %382 = load i64, i64* %m215.i, align 8
  %and238.i = and i64 %381, %382
  store i64 %and238.i, i64* %tmp221.i, align 8
  %383 = load i64, i64* %tmp221.i, align 8
  %shr239.i = lshr i64 %383, 1
  store i64 %shr239.i, i64* %tmp221.i, align 8
  %384 = load i64, i64* %va217.i, align 8
  %385 = load i64, i64* %tmp221.i, align 8
  %or240.i = or i64 %384, %385
  store i64 %or240.i, i64* %va217.i, align 8
  %386 = load i64, i64* %v7.i, align 8
  %387 = load i64, i64* %m215.i, align 8
  %and241.i = and i64 %386, %387
  store i64 %and241.i, i64* %tmp221.i, align 8
  %388 = load i64, i64* %vb219.i, align 8
  %389 = load i64, i64* %tmp221.i, align 8
  %or242.i = or i64 %388, %389
  store i64 %or242.i, i64* %vb219.i, align 8
  %390 = load i64, i64* %va217.i, align 8
  %391 = load i64, i64* %vb219.i, align 8
  %or243.i = or i64 %390, %391
  %392 = load i64*, i64** %kp.i, align 8
  store i64 %or243.i, i64* %392, align 8
  %393 = load i64*, i64** %kp.i, align 8
  %incdec.ptr244.i = getelementptr inbounds i64, i64* %393, i32 1
  store i64* %incdec.ptr244.i, i64** %kp.i, align 8
  %394 = load i32, i32* %ic.i, align 4
  %inc.i = add nsw i32 %394, 1
  store i32 %inc.i, i32* %ic.i, align 4
  br label %for.cond.i

DES_bs_finalize_keys_LM.exit:                     ; preds = %for.cond.i
  store i64** getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 0, i32 0, i32 0), i64*** %k, align 8
  store i32 8, i32* %rounds, align 4
  br label %do.body

do.body:                                          ; preds = %do.cond, %DES_bs_finalize_keys_LM.exit
  %395 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 31), align 8
  %396 = load i64**, i64*** %k, align 8
  %arrayidx = getelementptr inbounds i64*, i64** %396, i64 0
  %397 = load i64*, i64** %arrayidx, align 8
  %arrayidx1 = getelementptr inbounds i64, i64* %397, i64 0
  %398 = load i64, i64* %arrayidx1, align 8
  %xor = xor i64 %395, %398
  %399 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 0), align 8
  %400 = load i64**, i64*** %k, align 8
  %arrayidx2 = getelementptr inbounds i64*, i64** %400, i64 1
  %401 = load i64*, i64** %arrayidx2, align 8
  %arrayidx3 = getelementptr inbounds i64, i64* %401, i64 0
  %402 = load i64, i64* %arrayidx3, align 8
  %xor4 = xor i64 %399, %402
  %403 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 1), align 8
  %404 = load i64**, i64*** %k, align 8
  %arrayidx5 = getelementptr inbounds i64*, i64** %404, i64 2
  %405 = load i64*, i64** %arrayidx5, align 8
  %arrayidx6 = getelementptr inbounds i64, i64* %405, i64 0
  %406 = load i64, i64* %arrayidx6, align 8
  %xor7 = xor i64 %403, %406
  %407 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 2), align 8
  %408 = load i64**, i64*** %k, align 8
  %arrayidx8 = getelementptr inbounds i64*, i64** %408, i64 3
  %409 = load i64*, i64** %arrayidx8, align 8
  %arrayidx9 = getelementptr inbounds i64, i64* %409, i64 0
  %410 = load i64, i64* %arrayidx9, align 8
  %xor10 = xor i64 %407, %410
  %411 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 3), align 8
  %412 = load i64**, i64*** %k, align 8
  %arrayidx11 = getelementptr inbounds i64*, i64** %412, i64 4
  %413 = load i64*, i64** %arrayidx11, align 8
  %arrayidx12 = getelementptr inbounds i64, i64* %413, i64 0
  %414 = load i64, i64* %arrayidx12, align 8
  %xor13 = xor i64 %411, %414
  %415 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 4), align 8
  %416 = load i64**, i64*** %k, align 8
  %arrayidx14 = getelementptr inbounds i64*, i64** %416, i64 5
  %417 = load i64*, i64** %arrayidx14, align 8
  %arrayidx15 = getelementptr inbounds i64, i64* %417, i64 0
  %418 = load i64, i64* %arrayidx15, align 8
  %xor16 = xor i64 %415, %418
  store i64 %xor, i64* %a1.addr.i1493, align 8
  store i64 %xor4, i64* %a2.addr.i1494, align 8
  store i64 %xor7, i64* %a3.addr.i1495, align 8
  store i64 %xor10, i64* %a4.addr.i1496, align 8
  store i64 %xor13, i64* %a5.addr.i1497, align 8
  store i64 %xor16, i64* %a6.addr.i1498, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 40), i64** %out1.addr.i1499, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 48), i64** %out2.addr.i1500, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 54), i64** %out3.addr.i1501, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 62), i64** %out4.addr.i1502, align 8
  %419 = load i64, i64* %a1.addr.i1493, align 8
  %420 = load i64, i64* %a5.addr.i1497, align 8
  %neg.i1552 = xor i64 %420, -1
  %and.i1553 = and i64 %419, %neg.i1552
  store i64 %and.i1553, i64* %x55005500.i1503, align 8
  %421 = load i64, i64* %a4.addr.i1496, align 8
  %422 = load i64, i64* %x55005500.i1503, align 8
  %xor.i1554 = xor i64 %421, %422
  store i64 %xor.i1554, i64* %x5A0F5A0F.i1504, align 8
  %423 = load i64, i64* %a3.addr.i1495, align 8
  %424 = load i64, i64* %a6.addr.i1498, align 8
  %or.i1555 = or i64 %423, %424
  store i64 %or.i1555, i64* %x3333FFFF.i1505, align 8
  %425 = load i64, i64* %a1.addr.i1493, align 8
  %426 = load i64, i64* %a3.addr.i1495, align 8
  %xor1.i1556 = xor i64 %425, %426
  store i64 %xor1.i1556, i64* %x66666666.i1506, align 8
  %427 = load i64, i64* %x3333FFFF.i1505, align 8
  %428 = load i64, i64* %x66666666.i1506, align 8
  %and2.i1557 = and i64 %427, %428
  store i64 %and2.i1557, i64* %x22226666.i1507, align 8
  %429 = load i64, i64* %a4.addr.i1496, align 8
  %430 = load i64, i64* %x22226666.i1507, align 8
  %xor3.i1558 = xor i64 %429, %430
  store i64 %xor3.i1558, i64* %x2D2D6969.i1508, align 8
  %431 = load i64, i64* %x2D2D6969.i1508, align 8
  %432 = load i64, i64* %x5A0F5A0F.i1504, align 8
  %neg4.i1559 = xor i64 %432, -1
  %and5.i1560 = and i64 %431, %neg4.i1559
  store i64 %and5.i1560, i64* %x25202160.i1509, align 8
  %433 = load i64, i64* %a5.addr.i1497, align 8
  %434 = load i64, i64* %a6.addr.i1498, align 8
  %xor6.i1561 = xor i64 %433, %434
  store i64 %xor6.i1561, i64* %x00FFFF00.i1510, align 8
  %435 = load i64, i64* %a3.addr.i1495, align 8
  %436 = load i64, i64* %x00FFFF00.i1510, align 8
  %xor7.i1562 = xor i64 %435, %436
  store i64 %xor7.i1562, i64* %x33CCCC33.i1511, align 8
  %437 = load i64, i64* %x5A0F5A0F.i1504, align 8
  %438 = load i64, i64* %x33CCCC33.i1511, align 8
  %neg8.i1563 = xor i64 %438, -1
  %and9.i1564 = and i64 %437, %neg8.i1563
  store i64 %and9.i1564, i64* %x4803120C.i1512, align 8
  %439 = load i64, i64* %a6.addr.i1498, align 8
  %440 = load i64, i64* %x22226666.i1507, align 8
  %or10.i1565 = or i64 %439, %440
  store i64 %or10.i1565, i64* %x2222FFFF.i1513, align 8
  %441 = load i64, i64* %x4803120C.i1512, align 8
  %442 = load i64, i64* %x2222FFFF.i1513, align 8
  %xor11.i1566 = xor i64 %441, %442
  store i64 %xor11.i1566, i64* %x6A21EDF3.i1514, align 8
  %443 = load i64, i64* %x6A21EDF3.i1514, align 8
  %444 = load i64, i64* %x25202160.i1509, align 8
  %neg12.i1567 = xor i64 %444, -1
  %and13.i1568 = and i64 %443, %neg12.i1567
  store i64 %and13.i1568, i64* %x4A01CC93.i1515, align 8
  %445 = load i64, i64* %a1.addr.i1493, align 8
  %446 = load i64, i64* %a6.addr.i1498, align 8
  %or14.i1569 = or i64 %445, %446
  store i64 %or14.i1569, i64* %x5555FFFF.i1516, align 8
  %447 = load i64, i64* %x6A21EDF3.i1514, align 8
  %448 = load i64, i64* %x5555FFFF.i1516, align 8
  %or15.i1570 = or i64 %447, %448
  store i64 %or15.i1570, i64* %x7F75FFFF.i1517, align 8
  %449 = load i64, i64* %a5.addr.i1497, align 8
  %450 = load i64, i64* %x2D2D6969.i1508, align 8
  %neg16.i1571 = xor i64 %450, -1
  %and17.i1572 = and i64 %449, %neg16.i1571
  store i64 %and17.i1572, i64* %x00D20096.i1518, align 8
  %451 = load i64, i64* %x7F75FFFF.i1517, align 8
  %452 = load i64, i64* %x00D20096.i1518, align 8
  %xor18.i1573 = xor i64 %451, %452
  store i64 %xor18.i1573, i64* %x7FA7FF69.i1519, align 8
  %453 = load i64, i64* %a4.addr.i1496, align 8
  %454 = load i64, i64* %x5555FFFF.i1516, align 8
  %neg19.i1574 = xor i64 %454, -1
  %and20.i1575 = and i64 %453, %neg19.i1574
  store i64 %and20.i1575, i64* %x0A0A0000.i1520, align 8
  %455 = load i64, i64* %x00D20096.i1518, align 8
  %456 = load i64, i64* %x0A0A0000.i1520, align 8
  %xor21.i1576 = xor i64 %455, %456
  store i64 %xor21.i1576, i64* %x0AD80096.i1521, align 8
  %457 = load i64, i64* %x00FFFF00.i1510, align 8
  %458 = load i64, i64* %x66666666.i1506, align 8
  %neg22.i1577 = xor i64 %458, -1
  %and23.i1578 = and i64 %457, %neg22.i1577
  store i64 %and23.i1578, i64* %x00999900.i1522, align 8
  %459 = load i64, i64* %x0AD80096.i1521, align 8
  %460 = load i64, i64* %x00999900.i1522, align 8
  %or24.i1579 = or i64 %459, %460
  store i64 %or24.i1579, i64* %x0AD99996.i1523, align 8
  %461 = load i64, i64* %a3.addr.i1495, align 8
  %462 = load i64, i64* %x55005500.i1503, align 8
  %neg25.i1580 = xor i64 %462, -1
  %and26.i1581 = and i64 %461, %neg25.i1580
  store i64 %and26.i1581, i64* %x22332233.i1524, align 8
  %463 = load i64, i64* %x5A0F5A0F.i1504, align 8
  %464 = load i64, i64* %x7F75FFFF.i1517, align 8
  %xor27.i1582 = xor i64 %463, %464
  store i64 %xor27.i1582, i64* %x257AA5F0.i1525, align 8
  %465 = load i64, i64* %x257AA5F0.i1525, align 8
  %466 = load i64, i64* %x22332233.i1524, align 8
  %neg28.i1583 = xor i64 %466, -1
  %and29.i1584 = and i64 %465, %neg28.i1583
  store i64 %and29.i1584, i64* %x054885C0.i1526, align 8
  %467 = load i64, i64* %x054885C0.i1526, align 8
  %neg30.i1585 = xor i64 %467, -1
  store i64 %neg30.i1585, i64* %xFAB77A3F.i1527, align 8
  %468 = load i64, i64* %x3333FFFF.i1505, align 8
  %469 = load i64, i64* %x6A21EDF3.i1514, align 8
  %and31.i1586 = and i64 %468, %469
  store i64 %and31.i1586, i64* %x2221EDF3.i1528, align 8
  %470 = load i64, i64* %xFAB77A3F.i1527, align 8
  %471 = load i64, i64* %x2221EDF3.i1528, align 8
  %xor32.i1587 = xor i64 %470, %471
  store i64 %xor32.i1587, i64* %xD89697CC.i1529, align 8
  %472 = load i64, i64* %x7FA7FF69.i1519, align 8
  %473 = load i64, i64* %a2.addr.i1494, align 8
  %neg33.i1588 = xor i64 %473, -1
  %and34.i1589 = and i64 %472, %neg33.i1588
  store i64 %and34.i1589, i64* %x20.i1548, align 8
  %474 = load i64, i64* %x20.i1548, align 8
  %475 = load i64, i64* %xD89697CC.i1529, align 8
  %xor35.i1590 = xor i64 %474, %475
  store i64 %xor35.i1590, i64* %x21.i1549, align 8
  %476 = load i64*, i64** %out3.addr.i1501, align 8
  %477 = load i64, i64* %476, align 8
  %478 = load i64, i64* %x21.i1549, align 8
  %xor36.i1591 = xor i64 %477, %478
  %479 = load i64*, i64** %out3.addr.i1501, align 8
  store i64 %xor36.i1591, i64* %479, align 8
  %480 = load i64, i64* %x00FFFF00.i1510, align 8
  %481 = load i64, i64* %x054885C0.i1526, align 8
  %xor37.i1592 = xor i64 %480, %481
  store i64 %xor37.i1592, i64* %x05B77AC0.i1530, align 8
  %482 = load i64, i64* %x00D20096.i1518, align 8
  %483 = load i64, i64* %x05B77AC0.i1530, align 8
  %or38.i1593 = or i64 %482, %483
  store i64 %or38.i1593, i64* %x05F77AD6.i1531, align 8
  %484 = load i64, i64* %x3333FFFF.i1505, align 8
  %485 = load i64, i64* %x05F77AD6.i1531, align 8
  %xor39.i1594 = xor i64 %484, %485
  store i64 %xor39.i1594, i64* %x36C48529.i1532, align 8
  %486 = load i64, i64* %a1.addr.i1493, align 8
  %487 = load i64, i64* %x36C48529.i1532, align 8
  %xor40.i1595 = xor i64 %486, %487
  store i64 %xor40.i1595, i64* %x6391D07C.i1533, align 8
  %488 = load i64, i64* %xD89697CC.i1529, align 8
  %489 = load i64, i64* %x6391D07C.i1533, align 8
  %xor41.i1596 = xor i64 %488, %489
  store i64 %xor41.i1596, i64* %xBB0747B0.i1534, align 8
  %490 = load i64, i64* %x25202160.i1509, align 8
  %491 = load i64, i64* %a2.addr.i1494, align 8
  %or42.i1597 = or i64 %490, %491
  store i64 %or42.i1597, i64* %x00.i1544, align 8
  %492 = load i64, i64* %x00.i1544, align 8
  %493 = load i64, i64* %xBB0747B0.i1534, align 8
  %xor43.i1598 = xor i64 %492, %493
  store i64 %xor43.i1598, i64* %x01.i1545, align 8
  %494 = load i64*, i64** %out1.addr.i1499, align 8
  %495 = load i64, i64* %494, align 8
  %496 = load i64, i64* %x01.i1545, align 8
  %xor44.i1599 = xor i64 %495, %496
  %497 = load i64*, i64** %out1.addr.i1499, align 8
  store i64 %xor44.i1599, i64* %497, align 8
  %498 = load i64, i64* %x3333FFFF.i1505, align 8
  %499 = load i64, i64* %x7F75FFFF.i1517, align 8
  %xor45.i1600 = xor i64 %498, %499
  store i64 %xor45.i1600, i64* %x4C460000.i1535, align 8
  %500 = load i64, i64* %x0AD99996.i1523, align 8
  %501 = load i64, i64* %x4C460000.i1535, align 8
  %or46.i1601 = or i64 %500, %501
  store i64 %or46.i1601, i64* %x4EDF9996.i1536, align 8
  %502 = load i64, i64* %x6391D07C.i1533, align 8
  %503 = load i64, i64* %x4EDF9996.i1536, align 8
  %xor47.i1602 = xor i64 %502, %503
  store i64 %xor47.i1602, i64* %x2D4E49EA.i1537, align 8
  %504 = load i64, i64* %x00FFFF00.i1510, align 8
  %505 = load i64, i64* %xBB0747B0.i1534, align 8
  %or48.i1603 = or i64 %504, %505
  store i64 %or48.i1603, i64* %xBBFFFFB0.i1538, align 8
  %506 = load i64, i64* %x2D4E49EA.i1537, align 8
  %507 = load i64, i64* %xBBFFFFB0.i1538, align 8
  %xor49.i1604 = xor i64 %506, %507
  store i64 %xor49.i1604, i64* %x96B1B65A.i1539, align 8
  %508 = load i64, i64* %x4A01CC93.i1515, align 8
  %509 = load i64, i64* %a2.addr.i1494, align 8
  %or50.i1605 = or i64 %508, %509
  store i64 %or50.i1605, i64* %x10.i1546, align 8
  %510 = load i64, i64* %x10.i1546, align 8
  %511 = load i64, i64* %x96B1B65A.i1539, align 8
  %xor51.i1606 = xor i64 %510, %511
  store i64 %xor51.i1606, i64* %x11.i1547, align 8
  %512 = load i64*, i64** %out2.addr.i1500, align 8
  %513 = load i64, i64* %512, align 8
  %514 = load i64, i64* %x11.i1547, align 8
  %xor52.i1607 = xor i64 %513, %514
  %515 = load i64*, i64** %out2.addr.i1500, align 8
  store i64 %xor52.i1607, i64* %515, align 8
  %516 = load i64, i64* %a5.addr.i1497, align 8
  %517 = load i64, i64* %x5A0F5A0F.i1504, align 8
  %or53.i1608 = or i64 %516, %517
  store i64 %or53.i1608, i64* %x5AFF5AFF.i1540, align 8
  %518 = load i64, i64* %x5AFF5AFF.i1540, align 8
  %519 = load i64, i64* %x2D4E49EA.i1537, align 8
  %neg54.i1609 = xor i64 %519, -1
  %and55.i1610 = and i64 %518, %neg54.i1609
  store i64 %and55.i1610, i64* %x52B11215.i1541, align 8
  %520 = load i64, i64* %x4A01CC93.i1515, align 8
  %521 = load i64, i64* %x6391D07C.i1533, align 8
  %and56.i1611 = and i64 %520, %521
  store i64 %and56.i1611, i64* %x4201C010.i1542, align 8
  %522 = load i64, i64* %x52B11215.i1541, align 8
  %523 = load i64, i64* %x4201C010.i1542, align 8
  %xor57.i1612 = xor i64 %522, %523
  store i64 %xor57.i1612, i64* %x10B0D205.i1543, align 8
  %524 = load i64, i64* %x10B0D205.i1543, align 8
  %525 = load i64, i64* %a2.addr.i1494, align 8
  %or58.i1613 = or i64 %524, %525
  store i64 %or58.i1613, i64* %x30.i1550, align 8
  %526 = load i64, i64* %x30.i1550, align 8
  %527 = load i64, i64* %x0AD99996.i1523, align 8
  %xor59.i1614 = xor i64 %526, %527
  store i64 %xor59.i1614, i64* %x31.i1551, align 8
  %528 = load i64*, i64** %out4.addr.i1502, align 8
  %529 = load i64, i64* %528, align 8
  %530 = load i64, i64* %x31.i1551, align 8
  %xor60.i1615 = xor i64 %529, %530
  %531 = load i64*, i64** %out4.addr.i1502, align 8
  store i64 %xor60.i1615, i64* %531, align 8
  %532 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 3), align 8
  %533 = load i64**, i64*** %k, align 8
  %arrayidx17 = getelementptr inbounds i64*, i64** %533, i64 6
  %534 = load i64*, i64** %arrayidx17, align 8
  %arrayidx18 = getelementptr inbounds i64, i64* %534, i64 0
  %535 = load i64, i64* %arrayidx18, align 8
  %xor19 = xor i64 %532, %535
  %536 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 4), align 8
  %537 = load i64**, i64*** %k, align 8
  %arrayidx20 = getelementptr inbounds i64*, i64** %537, i64 7
  %538 = load i64*, i64** %arrayidx20, align 8
  %arrayidx21 = getelementptr inbounds i64, i64* %538, i64 0
  %539 = load i64, i64* %arrayidx21, align 8
  %xor22 = xor i64 %536, %539
  %540 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 5), align 8
  %541 = load i64**, i64*** %k, align 8
  %arrayidx23 = getelementptr inbounds i64*, i64** %541, i64 8
  %542 = load i64*, i64** %arrayidx23, align 8
  %arrayidx24 = getelementptr inbounds i64, i64* %542, i64 0
  %543 = load i64, i64* %arrayidx24, align 8
  %xor25 = xor i64 %540, %543
  %544 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 6), align 8
  %545 = load i64**, i64*** %k, align 8
  %arrayidx26 = getelementptr inbounds i64*, i64** %545, i64 9
  %546 = load i64*, i64** %arrayidx26, align 8
  %arrayidx27 = getelementptr inbounds i64, i64* %546, i64 0
  %547 = load i64, i64* %arrayidx27, align 8
  %xor28 = xor i64 %544, %547
  %548 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 7), align 8
  %549 = load i64**, i64*** %k, align 8
  %arrayidx29 = getelementptr inbounds i64*, i64** %549, i64 10
  %550 = load i64*, i64** %arrayidx29, align 8
  %arrayidx30 = getelementptr inbounds i64, i64* %550, i64 0
  %551 = load i64, i64* %arrayidx30, align 8
  %xor31 = xor i64 %548, %551
  %552 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 8), align 8
  %553 = load i64**, i64*** %k, align 8
  %arrayidx32 = getelementptr inbounds i64*, i64** %553, i64 11
  %554 = load i64*, i64** %arrayidx32, align 8
  %arrayidx33 = getelementptr inbounds i64, i64* %554, i64 0
  %555 = load i64, i64* %arrayidx33, align 8
  %xor34 = xor i64 %552, %555
  store i64 %xor19, i64* %a1.addr.i1379, align 8
  store i64 %xor22, i64* %a2.addr.i1380, align 8
  store i64 %xor25, i64* %a3.addr.i1381, align 8
  store i64 %xor28, i64* %a4.addr.i1382, align 8
  store i64 %xor31, i64* %a5.addr.i1383, align 8
  store i64 %xor34, i64* %a6.addr.i1384, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 44), i64** %out1.addr.i1385, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 59), i64** %out2.addr.i1386, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 33), i64** %out3.addr.i1387, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 49), i64** %out4.addr.i1388, align 8
  %556 = load i64, i64* %a2.addr.i1380, align 8
  %557 = load i64, i64* %a5.addr.i1383, align 8
  %xor.i1433 = xor i64 %556, %557
  store i64 %xor.i1433, i64* %x33CC33CC.i1389, align 8
  %558 = load i64, i64* %a1.addr.i1379, align 8
  %559 = load i64, i64* %a6.addr.i1384, align 8
  %neg.i1434 = xor i64 %559, -1
  %and.i1435 = and i64 %558, %neg.i1434
  store i64 %and.i1435, i64* %x55550000.i1390, align 8
  %560 = load i64, i64* %a5.addr.i1383, align 8
  %561 = load i64, i64* %x55550000.i1390, align 8
  %neg1.i1436 = xor i64 %561, -1
  %and2.i1437 = and i64 %560, %neg1.i1436
  store i64 %and2.i1437, i64* %x00AA00FF.i1391, align 8
  %562 = load i64, i64* %a2.addr.i1380, align 8
  %563 = load i64, i64* %x00AA00FF.i1391, align 8
  %or.i1438 = or i64 %562, %563
  store i64 %or.i1438, i64* %x33BB33FF.i1392, align 8
  %564 = load i64, i64* %x33CC33CC.i1389, align 8
  %565 = load i64, i64* %a6.addr.i1384, align 8
  %neg3.i1439 = xor i64 %565, -1
  %and4.i1440 = and i64 %564, %neg3.i1439
  store i64 %and4.i1440, i64* %x33CC0000.i1393, align 8
  %566 = load i64, i64* %a1.addr.i1379, align 8
  %567 = load i64, i64* %x33CC33CC.i1389, align 8
  %and5.i1441 = and i64 %566, %567
  store i64 %and5.i1441, i64* %x11441144.i1394, align 8
  %568 = load i64, i64* %a5.addr.i1383, align 8
  %569 = load i64, i64* %x11441144.i1394, align 8
  %xor6.i1442 = xor i64 %568, %569
  store i64 %xor6.i1442, i64* %x11BB11BB.i1395, align 8
  %570 = load i64, i64* %x11BB11BB.i1395, align 8
  %571 = load i64, i64* %x33CC0000.i1393, align 8
  %neg7.i1443 = xor i64 %571, -1
  %and8.i1444 = and i64 %570, %neg7.i1443
  store i64 %and8.i1444, i64* %x003311BB.i1396, align 8
  %572 = load i64, i64* %a3.addr.i1381, align 8
  %573 = load i64, i64* %a6.addr.i1384, align 8
  %and9.i1445 = and i64 %572, %573
  store i64 %and9.i1445, i64* %x00000F0F.i1397, align 8
  %574 = load i64, i64* %x00AA00FF.i1391, align 8
  %575 = load i64, i64* %x33CC0000.i1393, align 8
  %xor10.i1446 = xor i64 %574, %575
  store i64 %xor10.i1446, i64* %x336600FF.i1398, align 8
  %576 = load i64, i64* %x33BB33FF.i1392, align 8
  %577 = load i64, i64* %x336600FF.i1398, align 8
  %and11.i1447 = and i64 %576, %577
  store i64 %and11.i1447, i64* %x332200FF.i1399, align 8
  %578 = load i64, i64* %x332200FF.i1399, align 8
  %579 = load i64, i64* %x00000F0F.i1397, align 8
  %neg12.i1448 = xor i64 %579, -1
  %and13.i1449 = and i64 %578, %neg12.i1448
  store i64 %and13.i1449, i64* %x332200F0.i1400, align 8
  %580 = load i64, i64* %a3.addr.i1381, align 8
  %581 = load i64, i64* %x332200FF.i1399, align 8
  %and14.i1450 = and i64 %580, %581
  store i64 %and14.i1450, i64* %x0302000F.i1401, align 8
  %582 = load i64, i64* %a1.addr.i1379, align 8
  %neg15.i1451 = xor i64 %582, -1
  store i64 %neg15.i1451, i64* %xAAAAAAAA.i1402, align 8
  %583 = load i64, i64* %x0302000F.i1401, align 8
  %584 = load i64, i64* %xAAAAAAAA.i1402, align 8
  %xor16.i1452 = xor i64 %583, %584
  store i64 %xor16.i1452, i64* %xA9A8AAA5.i1403, align 8
  %585 = load i64, i64* %a6.addr.i1384, align 8
  %586 = load i64, i64* %x33CC33CC.i1389, align 8
  %xor17.i1453 = xor i64 %585, %586
  store i64 %xor17.i1453, i64* %x33CCCC33.i1404, align 8
  %587 = load i64, i64* %x33CCCC33.i1404, align 8
  %588 = load i64, i64* %x00000F0F.i1397, align 8
  %neg18.i1454 = xor i64 %588, -1
  %and19.i1455 = and i64 %587, %neg18.i1454
  store i64 %and19.i1455, i64* %x33CCC030.i1405, align 8
  %589 = load i64, i64* %xA9A8AAA5.i1403, align 8
  %590 = load i64, i64* %x33CCC030.i1405, align 8
  %xor20.i1456 = xor i64 %589, %590
  store i64 %xor20.i1456, i64* %x9A646A95.i1406, align 8
  %591 = load i64, i64* %a4.addr.i1382, align 8
  %592 = load i64, i64* %x332200F0.i1400, align 8
  %neg21.i1457 = xor i64 %592, -1
  %and22.i1458 = and i64 %591, %neg21.i1457
  store i64 %and22.i1458, i64* %x10.i1427, align 8
  %593 = load i64, i64* %x10.i1427, align 8
  %594 = load i64, i64* %x9A646A95.i1406, align 8
  %xor23.i1459 = xor i64 %593, %594
  store i64 %xor23.i1459, i64* %x11.i1428, align 8
  %595 = load i64*, i64** %out2.addr.i1386, align 8
  %596 = load i64, i64* %595, align 8
  %597 = load i64, i64* %x11.i1428, align 8
  %xor24.i1460 = xor i64 %596, %597
  %598 = load i64*, i64** %out2.addr.i1386, align 8
  store i64 %xor24.i1460, i64* %598, align 8
  %599 = load i64, i64* %a2.addr.i1380, align 8
  %600 = load i64, i64* %x33CCC030.i1405, align 8
  %neg25.i1461 = xor i64 %600, -1
  %and26.i1462 = and i64 %599, %neg25.i1461
  store i64 %and26.i1462, i64* %x00333303.i1407, align 8
  %601 = load i64, i64* %x11BB11BB.i1395, align 8
  %602 = load i64, i64* %x00333303.i1407, align 8
  %xor27.i1463 = xor i64 %601, %602
  store i64 %xor27.i1463, i64* %x118822B8.i1408, align 8
  %603 = load i64, i64* %xA9A8AAA5.i1403, align 8
  %604 = load i64, i64* %x118822B8.i1408, align 8
  %neg28.i1464 = xor i64 %604, -1
  %and29.i1465 = and i64 %603, %neg28.i1464
  store i64 %and29.i1465, i64* %xA8208805.i1409, align 8
  %605 = load i64, i64* %a3.addr.i1381, align 8
  %606 = load i64, i64* %x33CCCC33.i1404, align 8
  %xor30.i1466 = xor i64 %605, %606
  store i64 %xor30.i1466, i64* %x3CC3C33C.i1410, align 8
  %607 = load i64, i64* %xA8208805.i1409, align 8
  %608 = load i64, i64* %x3CC3C33C.i1410, align 8
  %xor31.i1467 = xor i64 %607, %608
  store i64 %xor31.i1467, i64* %x94E34B39.i1411, align 8
  %609 = load i64, i64* %x33BB33FF.i1392, align 8
  %610 = load i64, i64* %a4.addr.i1382, align 8
  %neg32.i1468 = xor i64 %610, -1
  %and33.i1469 = and i64 %609, %neg32.i1468
  store i64 %and33.i1469, i64* %x00.i1425, align 8
  %611 = load i64, i64* %x00.i1425, align 8
  %612 = load i64, i64* %x94E34B39.i1411, align 8
  %xor34.i1470 = xor i64 %611, %612
  store i64 %xor34.i1470, i64* %x01.i1426, align 8
  %613 = load i64*, i64** %out1.addr.i1385, align 8
  %614 = load i64, i64* %613, align 8
  %615 = load i64, i64* %x01.i1426, align 8
  %xor35.i1471 = xor i64 %614, %615
  %616 = load i64*, i64** %out1.addr.i1385, align 8
  store i64 %xor35.i1471, i64* %616, align 8
  %617 = load i64, i64* %x0302000F.i1401, align 8
  %618 = load i64, i64* %x00333303.i1407, align 8
  %xor36.i1472 = xor i64 %617, %618
  store i64 %xor36.i1472, i64* %x0331330C.i1412, align 8
  %619 = load i64, i64* %x3CC3C33C.i1410, align 8
  %620 = load i64, i64* %x0331330C.i1412, align 8
  %or37.i1473 = or i64 %619, %620
  store i64 %or37.i1473, i64* %x3FF3F33C.i1413, align 8
  %621 = load i64, i64* %x33BB33FF.i1392, align 8
  %622 = load i64, i64* %x9A646A95.i1406, align 8
  %xor38.i1474 = xor i64 %621, %622
  store i64 %xor38.i1474, i64* %xA9DF596A.i1414, align 8
  %623 = load i64, i64* %x00000F0F.i1397, align 8
  %624 = load i64, i64* %xA9DF596A.i1414, align 8
  %or39.i1475 = or i64 %623, %624
  store i64 %or39.i1475, i64* %xA9DF5F6F.i1415, align 8
  %625 = load i64, i64* %x3FF3F33C.i1413, align 8
  %626 = load i64, i64* %xA9DF5F6F.i1415, align 8
  %xor40.i1476 = xor i64 %625, %626
  store i64 %xor40.i1476, i64* %x962CAC53.i1416, align 8
  %627 = load i64, i64* %x94E34B39.i1411, align 8
  %628 = load i64, i64* %x0331330C.i1412, align 8
  %xor41.i1477 = xor i64 %627, %628
  store i64 %xor41.i1477, i64* %x97D27835.i1417, align 8
  %629 = load i64, i64* %xA9DF5F6F.i1415, align 8
  %630 = load i64, i64* %x97D27835.i1417, align 8
  %and42.i1478 = and i64 %629, %630
  store i64 %and42.i1478, i64* %x81D25825.i1418, align 8
  %631 = load i64, i64* %a5.addr.i1383, align 8
  %632 = load i64, i64* %x81D25825.i1418, align 8
  %xor43.i1479 = xor i64 %631, %632
  store i64 %xor43.i1479, i64* %x812D58DA.i1419, align 8
  %633 = load i64, i64* %x812D58DA.i1419, align 8
  %634 = load i64, i64* %x33CC0000.i1393, align 8
  %neg44.i1480 = xor i64 %634, -1
  %and45.i1481 = and i64 %633, %neg44.i1480
  store i64 %and45.i1481, i64* %x802158DA.i1420, align 8
  %635 = load i64, i64* %x9A646A95.i1406, align 8
  %636 = load i64, i64* %x802158DA.i1420, align 8
  %xor46.i1482 = xor i64 %635, %636
  store i64 %xor46.i1482, i64* %x1A45324F.i1421, align 8
  %637 = load i64, i64* %x1A45324F.i1421, align 8
  %638 = load i64, i64* %a4.addr.i1382, align 8
  %or47.i1483 = or i64 %637, %638
  store i64 %or47.i1483, i64* %x20.i1429, align 8
  %639 = load i64, i64* %x20.i1429, align 8
  %640 = load i64, i64* %x962CAC53.i1416, align 8
  %xor48.i1484 = xor i64 %639, %640
  store i64 %xor48.i1484, i64* %x21.i1430, align 8
  %641 = load i64*, i64** %out3.addr.i1387, align 8
  %642 = load i64, i64* %641, align 8
  %643 = load i64, i64* %x21.i1430, align 8
  %xor49.i1485 = xor i64 %642, %643
  %644 = load i64*, i64** %out3.addr.i1387, align 8
  store i64 %xor49.i1485, i64* %644, align 8
  %645 = load i64, i64* %x1A45324F.i1421, align 8
  %646 = load i64, i64* %x118822B8.i1408, align 8
  %neg50.i1486 = xor i64 %646, -1
  %and51.i1487 = and i64 %645, %neg50.i1486
  store i64 %and51.i1487, i64* %x0A451047.i1422, align 8
  %647 = load i64, i64* %x33CCCC33.i1404, align 8
  %648 = load i64, i64* %xA9DF596A.i1414, align 8
  %or52.i1488 = or i64 %647, %648
  store i64 %or52.i1488, i64* %xBBDFDD7B.i1423, align 8
  %649 = load i64, i64* %x0A451047.i1422, align 8
  %650 = load i64, i64* %xBBDFDD7B.i1423, align 8
  %xor53.i1489 = xor i64 %649, %650
  store i64 %xor53.i1489, i64* %xB19ACD3C.i1424, align 8
  %651 = load i64, i64* %x003311BB.i1396, align 8
  %652 = load i64, i64* %a4.addr.i1382, align 8
  %or54.i1490 = or i64 %651, %652
  store i64 %or54.i1490, i64* %x30.i1431, align 8
  %653 = load i64, i64* %x30.i1431, align 8
  %654 = load i64, i64* %xB19ACD3C.i1424, align 8
  %xor55.i1491 = xor i64 %653, %654
  store i64 %xor55.i1491, i64* %x31.i1432, align 8
  %655 = load i64*, i64** %out4.addr.i1388, align 8
  %656 = load i64, i64* %655, align 8
  %657 = load i64, i64* %x31.i1432, align 8
  %xor56.i1492 = xor i64 %656, %657
  %658 = load i64*, i64** %out4.addr.i1388, align 8
  store i64 %xor56.i1492, i64* %658, align 8
  %659 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 7), align 8
  %660 = load i64**, i64*** %k, align 8
  %arrayidx35 = getelementptr inbounds i64*, i64** %660, i64 12
  %661 = load i64*, i64** %arrayidx35, align 8
  %arrayidx36 = getelementptr inbounds i64, i64* %661, i64 0
  %662 = load i64, i64* %arrayidx36, align 8
  %xor37 = xor i64 %659, %662
  %663 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 8), align 8
  %664 = load i64**, i64*** %k, align 8
  %arrayidx38 = getelementptr inbounds i64*, i64** %664, i64 13
  %665 = load i64*, i64** %arrayidx38, align 8
  %arrayidx39 = getelementptr inbounds i64, i64* %665, i64 0
  %666 = load i64, i64* %arrayidx39, align 8
  %xor40 = xor i64 %663, %666
  %667 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 9), align 8
  %668 = load i64**, i64*** %k, align 8
  %arrayidx41 = getelementptr inbounds i64*, i64** %668, i64 14
  %669 = load i64*, i64** %arrayidx41, align 8
  %arrayidx42 = getelementptr inbounds i64, i64* %669, i64 0
  %670 = load i64, i64* %arrayidx42, align 8
  %xor43 = xor i64 %667, %670
  %671 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 10), align 8
  %672 = load i64**, i64*** %k, align 8
  %arrayidx44 = getelementptr inbounds i64*, i64** %672, i64 15
  %673 = load i64*, i64** %arrayidx44, align 8
  %arrayidx45 = getelementptr inbounds i64, i64* %673, i64 0
  %674 = load i64, i64* %arrayidx45, align 8
  %xor46 = xor i64 %671, %674
  %675 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 11), align 8
  %676 = load i64**, i64*** %k, align 8
  %arrayidx47 = getelementptr inbounds i64*, i64** %676, i64 16
  %677 = load i64*, i64** %arrayidx47, align 8
  %arrayidx48 = getelementptr inbounds i64, i64* %677, i64 0
  %678 = load i64, i64* %arrayidx48, align 8
  %xor49 = xor i64 %675, %678
  %679 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 12), align 8
  %680 = load i64**, i64*** %k, align 8
  %arrayidx50 = getelementptr inbounds i64*, i64** %680, i64 17
  %681 = load i64*, i64** %arrayidx50, align 8
  %arrayidx51 = getelementptr inbounds i64, i64* %681, i64 0
  %682 = load i64, i64* %arrayidx51, align 8
  %xor52 = xor i64 %679, %682
  store i64 %xor37, i64* %a1.addr.i1259, align 8
  store i64 %xor40, i64* %a2.addr.i1260, align 8
  store i64 %xor43, i64* %a3.addr.i1261, align 8
  store i64 %xor46, i64* %a4.addr.i1262, align 8
  store i64 %xor49, i64* %a5.addr.i1263, align 8
  store i64 %xor52, i64* %a6.addr.i1264, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 55), i64** %out1.addr.i1265, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 47), i64** %out2.addr.i1266, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 61), i64** %out3.addr.i1267, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 37), i64** %out4.addr.i1268, align 8
  %683 = load i64, i64* %a1.addr.i1259, align 8
  %684 = load i64, i64* %a2.addr.i1260, align 8
  %neg.i1315 = xor i64 %684, -1
  %and.i1316 = and i64 %683, %neg.i1315
  store i64 %and.i1316, i64* %x44444444.i1269, align 8
  %685 = load i64, i64* %a3.addr.i1261, align 8
  %686 = load i64, i64* %a6.addr.i1264, align 8
  %xor.i1317 = xor i64 %685, %686
  store i64 %xor.i1317, i64* %x0F0FF0F0.i1270, align 8
  %687 = load i64, i64* %x44444444.i1269, align 8
  %688 = load i64, i64* %x0F0FF0F0.i1270, align 8
  %or.i1318 = or i64 %687, %688
  store i64 %or.i1318, i64* %x4F4FF4F4.i1271, align 8
  %689 = load i64, i64* %a4.addr.i1262, align 8
  %690 = load i64, i64* %a6.addr.i1264, align 8
  %xor1.i1319 = xor i64 %689, %690
  store i64 %xor1.i1319, i64* %x00FFFF00.i1272, align 8
  %691 = load i64, i64* %x00FFFF00.i1272, align 8
  %692 = load i64, i64* %a1.addr.i1259, align 8
  %neg2.i1320 = xor i64 %692, -1
  %and3.i1321 = and i64 %691, %neg2.i1320
  store i64 %and3.i1321, i64* %x00AAAA00.i1273, align 8
  %693 = load i64, i64* %x4F4FF4F4.i1271, align 8
  %694 = load i64, i64* %x00AAAA00.i1273, align 8
  %xor4.i1322 = xor i64 %693, %694
  store i64 %xor4.i1322, i64* %x4FE55EF4.i1274, align 8
  %695 = load i64, i64* %a2.addr.i1260, align 8
  %696 = load i64, i64* %x0F0FF0F0.i1270, align 8
  %xor5.i1323 = xor i64 %695, %696
  store i64 %xor5.i1323, i64* %x3C3CC3C3.i1275, align 8
  %697 = load i64, i64* %x3C3CC3C3.i1275, align 8
  %698 = load i64, i64* %a6.addr.i1264, align 8
  %neg6.i1324 = xor i64 %698, -1
  %and7.i1325 = and i64 %697, %neg6.i1324
  store i64 %and7.i1325, i64* %x3C3C0000.i1276, align 8
  %699 = load i64, i64* %x4F4FF4F4.i1271, align 8
  %700 = load i64, i64* %x3C3C0000.i1276, align 8
  %xor8.i1326 = xor i64 %699, %700
  store i64 %xor8.i1326, i64* %x7373F4F4.i1277, align 8
  %701 = load i64, i64* %x4FE55EF4.i1274, align 8
  %702 = load i64, i64* %x7373F4F4.i1277, align 8
  %neg9.i1327 = xor i64 %702, -1
  %and10.i1328 = and i64 %701, %neg9.i1327
  store i64 %and10.i1328, i64* %x0C840A00.i1278, align 8
  %703 = load i64, i64* %a6.addr.i1264, align 8
  %704 = load i64, i64* %x4FE55EF4.i1274, align 8
  %and11.i1329 = and i64 %703, %704
  store i64 %and11.i1329, i64* %x00005EF4.i1279, align 8
  %705 = load i64, i64* %a4.addr.i1262, align 8
  %706 = load i64, i64* %x00005EF4.i1279, align 8
  %or12.i1330 = or i64 %705, %706
  store i64 %or12.i1330, i64* %x00FF5EFF.i1280, align 8
  %707 = load i64, i64* %a1.addr.i1259, align 8
  %708 = load i64, i64* %x00FF5EFF.i1280, align 8
  %and13.i1331 = and i64 %707, %708
  store i64 %and13.i1331, i64* %x00555455.i1281, align 8
  %709 = load i64, i64* %x3C3CC3C3.i1275, align 8
  %710 = load i64, i64* %x00555455.i1281, align 8
  %xor14.i1332 = xor i64 %709, %710
  store i64 %xor14.i1332, i64* %x3C699796.i1282, align 8
  %711 = load i64, i64* %x4FE55EF4.i1274, align 8
  %712 = load i64, i64* %a5.addr.i1263, align 8
  %neg15.i1333 = xor i64 %712, -1
  %and16.i1334 = and i64 %711, %neg15.i1333
  store i64 %and16.i1334, i64* %x30.i1313, align 8
  %713 = load i64, i64* %x30.i1313, align 8
  %714 = load i64, i64* %x3C699796.i1282, align 8
  %xor17.i1335 = xor i64 %713, %714
  store i64 %xor17.i1335, i64* %x31.i1314, align 8
  %715 = load i64*, i64** %out4.addr.i1268, align 8
  %716 = load i64, i64* %715, align 8
  %717 = load i64, i64* %x31.i1314, align 8
  %xor18.i1336 = xor i64 %716, %717
  %718 = load i64*, i64** %out4.addr.i1268, align 8
  store i64 %xor18.i1336, i64* %718, align 8
  %719 = load i64, i64* %x0F0FF0F0.i1270, align 8
  %720 = load i64, i64* %x00FFFF00.i1272, align 8
  %and19.i1337 = and i64 %719, %720
  store i64 %and19.i1337, i64* %x000FF000.i1283, align 8
  %721 = load i64, i64* %a1.addr.i1259, align 8
  %722 = load i64, i64* %a4.addr.i1262, align 8
  %xor20.i1338 = xor i64 %721, %722
  store i64 %xor20.i1338, i64* %x55AA55AA.i1284, align 8
  %723 = load i64, i64* %x7373F4F4.i1277, align 8
  %724 = load i64, i64* %x55AA55AA.i1284, align 8
  %xor21.i1339 = xor i64 %723, %724
  store i64 %xor21.i1339, i64* %x26D9A15E.i1285, align 8
  %725 = load i64, i64* %a3.addr.i1261, align 8
  %726 = load i64, i64* %x26D9A15E.i1285, align 8
  %or22.i1340 = or i64 %725, %726
  store i64 %or22.i1340, i64* %x2FDFAF5F.i1286, align 8
  %727 = load i64, i64* %x2FDFAF5F.i1286, align 8
  %728 = load i64, i64* %x000FF000.i1283, align 8
  %neg23.i1341 = xor i64 %728, -1
  %and24.i1342 = and i64 %727, %neg23.i1341
  store i64 %and24.i1342, i64* %x2FD00F5F.i1287, align 8
  %729 = load i64, i64* %x00AAAA00.i1273, align 8
  %730 = load i64, i64* %x55AA55AA.i1284, align 8
  %or25.i1343 = or i64 %729, %730
  store i64 %or25.i1343, i64* %x55AAFFAA.i1288, align 8
  %731 = load i64, i64* %x3C699796.i1282, align 8
  %732 = load i64, i64* %x55AAFFAA.i1288, align 8
  %neg26.i1344 = xor i64 %732, -1
  %and27.i1345 = and i64 %731, %neg26.i1344
  store i64 %and27.i1345, i64* %x28410014.i1289, align 8
  %733 = load i64, i64* %a4.addr.i1262, align 8
  %734 = load i64, i64* %a6.addr.i1264, align 8
  %and28.i1346 = and i64 %733, %734
  store i64 %and28.i1346, i64* %x000000FF.i1290, align 8
  %735 = load i64, i64* %x000000FF.i1290, align 8
  %736 = load i64, i64* %a2.addr.i1260, align 8
  %neg29.i1347 = xor i64 %736, -1
  %and30.i1348 = and i64 %735, %neg29.i1347
  store i64 %and30.i1348, i64* %x000000CC.i1291, align 8
  %737 = load i64, i64* %x28410014.i1289, align 8
  %738 = load i64, i64* %x000000CC.i1291, align 8
  %xor31.i1349 = xor i64 %737, %738
  store i64 %xor31.i1349, i64* %x284100D8.i1292, align 8
  %739 = load i64, i64* %x284100D8.i1292, align 8
  %740 = load i64, i64* %a3.addr.i1261, align 8
  %neg32.i1350 = xor i64 %740, -1
  %and33.i1351 = and i64 %739, %neg32.i1350
  store i64 %and33.i1351, i64* %x204000D0.i1293, align 8
  %741 = load i64, i64* %x3C3CC3C3.i1275, align 8
  %742 = load i64, i64* %x000000FF.i1290, align 8
  %or34.i1352 = or i64 %741, %742
  store i64 %or34.i1352, i64* %x3C3CC3FF.i1294, align 8
  %743 = load i64, i64* %x3C3CC3FF.i1294, align 8
  %744 = load i64, i64* %x204000D0.i1293, align 8
  %neg35.i1353 = xor i64 %744, -1
  %and36.i1354 = and i64 %743, %neg35.i1353
  store i64 %and36.i1354, i64* %x1C3CC32F.i1295, align 8
  %745 = load i64, i64* %a1.addr.i1259, align 8
  %746 = load i64, i64* %x1C3CC32F.i1295, align 8
  %xor37.i1355 = xor i64 %745, %746
  store i64 %xor37.i1355, i64* %x4969967A.i1296, align 8
  %747 = load i64, i64* %x2FD00F5F.i1287, align 8
  %748 = load i64, i64* %a5.addr.i1263, align 8
  %and38.i1356 = and i64 %747, %748
  store i64 %and38.i1356, i64* %x10.i1309, align 8
  %749 = load i64, i64* %x10.i1309, align 8
  %750 = load i64, i64* %x4969967A.i1296, align 8
  %xor39.i1357 = xor i64 %749, %750
  store i64 %xor39.i1357, i64* %x11.i1310, align 8
  %751 = load i64*, i64** %out2.addr.i1266, align 8
  %752 = load i64, i64* %751, align 8
  %753 = load i64, i64* %x11.i1310, align 8
  %xor40.i1358 = xor i64 %752, %753
  %754 = load i64*, i64** %out2.addr.i1266, align 8
  store i64 %xor40.i1358, i64* %754, align 8
  %755 = load i64, i64* %x4FE55EF4.i1274, align 8
  %756 = load i64, i64* %a2.addr.i1260, align 8
  %neg41.i1359 = xor i64 %756, -1
  %and42.i1360 = and i64 %755, %neg41.i1359
  store i64 %and42.i1360, i64* %x4CC44CC4.i1297, align 8
  %757 = load i64, i64* %x4CC44CC4.i1297, align 8
  %758 = load i64, i64* %a3.addr.i1261, align 8
  %neg43.i1361 = xor i64 %758, -1
  %and44.i1362 = and i64 %757, %neg43.i1361
  store i64 %and44.i1362, i64* %x40C040C0.i1298, align 8
  %759 = load i64, i64* %x3C3CC3C3.i1275, align 8
  %760 = load i64, i64* %x55AAFFAA.i1288, align 8
  %xor45.i1363 = xor i64 %759, %760
  store i64 %xor45.i1363, i64* %x69963C69.i1299, align 8
  %761 = load i64, i64* %x69963C69.i1299, align 8
  %neg46.i1364 = xor i64 %761, -1
  store i64 %neg46.i1364, i64* %x9669C396.i1300, align 8
  %762 = load i64, i64* %x40C040C0.i1298, align 8
  %763 = load i64, i64* %x9669C396.i1300, align 8
  %xor47.i1365 = xor i64 %762, %763
  store i64 %xor47.i1365, i64* %xD6A98356.i1301, align 8
  %764 = load i64, i64* %a5.addr.i1263, align 8
  %765 = load i64, i64* %x0C840A00.i1278, align 8
  %neg48.i1366 = xor i64 %765, -1
  %and49.i1367 = and i64 %764, %neg48.i1366
  store i64 %and49.i1367, i64* %x00.i1307, align 8
  %766 = load i64, i64* %x00.i1307, align 8
  %767 = load i64, i64* %xD6A98356.i1301, align 8
  %xor50.i1368 = xor i64 %766, %767
  store i64 %xor50.i1368, i64* %x01.i1308, align 8
  %768 = load i64*, i64** %out1.addr.i1265, align 8
  %769 = load i64, i64* %768, align 8
  %770 = load i64, i64* %x01.i1308, align 8
  %xor51.i1369 = xor i64 %769, %770
  %771 = load i64*, i64** %out1.addr.i1265, align 8
  store i64 %xor51.i1369, i64* %771, align 8
  %772 = load i64, i64* %a4.addr.i1262, align 8
  %773 = load i64, i64* %x0F0FF0F0.i1270, align 8
  %and52.i1370 = and i64 %772, %773
  store i64 %and52.i1370, i64* %x000F00F0.i1302, align 8
  %774 = load i64, i64* %x3C3CC3C3.i1275, align 8
  %775 = load i64, i64* %xD6A98356.i1301, align 8
  %or53.i1371 = or i64 %774, %775
  store i64 %or53.i1371, i64* %xFEBDC3D7.i1303, align 8
  %776 = load i64, i64* %xFEBDC3D7.i1303, align 8
  %777 = load i64, i64* %x000F00F0.i1302, align 8
  %neg54.i1372 = xor i64 %777, -1
  %and55.i1373 = and i64 %776, %neg54.i1372
  store i64 %and55.i1373, i64* %xFEB0C307.i1304, align 8
  %778 = load i64, i64* %x00AAAA00.i1273, align 8
  %779 = load i64, i64* %x4CC44CC4.i1297, align 8
  %or56.i1374 = or i64 %778, %779
  store i64 %or56.i1374, i64* %x4CEEEEC4.i1305, align 8
  %780 = load i64, i64* %xFEB0C307.i1304, align 8
  %781 = load i64, i64* %x4CEEEEC4.i1305, align 8
  %xor57.i1375 = xor i64 %780, %781
  store i64 %xor57.i1375, i64* %xB25E2DC3.i1306, align 8
  %782 = load i64, i64* %x284100D8.i1292, align 8
  %783 = load i64, i64* %a5.addr.i1263, align 8
  %or58.i1376 = or i64 %782, %783
  store i64 %or58.i1376, i64* %x20.i1311, align 8
  %784 = load i64, i64* %x20.i1311, align 8
  %785 = load i64, i64* %xB25E2DC3.i1306, align 8
  %xor59.i1377 = xor i64 %784, %785
  store i64 %xor59.i1377, i64* %x21.i1312, align 8
  %786 = load i64*, i64** %out3.addr.i1267, align 8
  %787 = load i64, i64* %786, align 8
  %788 = load i64, i64* %x21.i1312, align 8
  %xor60.i1378 = xor i64 %787, %788
  %789 = load i64*, i64** %out3.addr.i1267, align 8
  store i64 %xor60.i1378, i64* %789, align 8
  %790 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 11), align 8
  %791 = load i64**, i64*** %k, align 8
  %arrayidx53 = getelementptr inbounds i64*, i64** %791, i64 18
  %792 = load i64*, i64** %arrayidx53, align 8
  %arrayidx54 = getelementptr inbounds i64, i64* %792, i64 0
  %793 = load i64, i64* %arrayidx54, align 8
  %xor55 = xor i64 %790, %793
  %794 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 12), align 8
  %795 = load i64**, i64*** %k, align 8
  %arrayidx56 = getelementptr inbounds i64*, i64** %795, i64 19
  %796 = load i64*, i64** %arrayidx56, align 8
  %arrayidx57 = getelementptr inbounds i64, i64* %796, i64 0
  %797 = load i64, i64* %arrayidx57, align 8
  %xor58 = xor i64 %794, %797
  %798 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 13), align 8
  %799 = load i64**, i64*** %k, align 8
  %arrayidx59 = getelementptr inbounds i64*, i64** %799, i64 20
  %800 = load i64*, i64** %arrayidx59, align 8
  %arrayidx60 = getelementptr inbounds i64, i64* %800, i64 0
  %801 = load i64, i64* %arrayidx60, align 8
  %xor61 = xor i64 %798, %801
  %802 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 14), align 8
  %803 = load i64**, i64*** %k, align 8
  %arrayidx62 = getelementptr inbounds i64*, i64** %803, i64 21
  %804 = load i64*, i64** %arrayidx62, align 8
  %arrayidx63 = getelementptr inbounds i64, i64* %804, i64 0
  %805 = load i64, i64* %arrayidx63, align 8
  %xor64 = xor i64 %802, %805
  %806 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 15), align 8
  %807 = load i64**, i64*** %k, align 8
  %arrayidx65 = getelementptr inbounds i64*, i64** %807, i64 22
  %808 = load i64*, i64** %arrayidx65, align 8
  %arrayidx66 = getelementptr inbounds i64, i64* %808, i64 0
  %809 = load i64, i64* %arrayidx66, align 8
  %xor67 = xor i64 %806, %809
  %810 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 16), align 8
  %811 = load i64**, i64*** %k, align 8
  %arrayidx68 = getelementptr inbounds i64*, i64** %811, i64 23
  %812 = load i64*, i64** %arrayidx68, align 8
  %arrayidx69 = getelementptr inbounds i64, i64* %812, i64 0
  %813 = load i64, i64* %arrayidx69, align 8
  %xor70 = xor i64 %810, %813
  store i64 %xor55, i64* %a1.addr.i1170, align 8
  store i64 %xor58, i64* %a2.addr.i1171, align 8
  store i64 %xor61, i64* %a3.addr.i1172, align 8
  store i64 %xor64, i64* %a4.addr.i1173, align 8
  store i64 %xor67, i64* %a5.addr.i1174, align 8
  store i64 %xor70, i64* %a6.addr.i1175, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 57), i64** %out1.addr.i1176, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 51), i64** %out2.addr.i1177, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 41), i64** %out3.addr.i1178, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 32), i64** %out4.addr.i1179, align 8
  %814 = load i64, i64* %a1.addr.i1170, align 8
  %815 = load i64, i64* %a3.addr.i1172, align 8
  %xor.i1213 = xor i64 %814, %815
  store i64 %xor.i1213, i64* %x5A5A5A5A.i1180, align 8
  %816 = load i64, i64* %a3.addr.i1172, align 8
  %817 = load i64, i64* %a5.addr.i1174, align 8
  %xor1.i1214 = xor i64 %816, %817
  store i64 %xor1.i1214, i64* %x0F0FF0F0.i1181, align 8
  %818 = load i64, i64* %a2.addr.i1171, align 8
  %819 = load i64, i64* %a4.addr.i1173, align 8
  %or.i1215 = or i64 %818, %819
  store i64 %or.i1215, i64* %x33FF33FF.i1182, align 8
  %820 = load i64, i64* %a5.addr.i1174, align 8
  %821 = load i64, i64* %x33FF33FF.i1182, align 8
  %xor2.i1216 = xor i64 %820, %821
  store i64 %xor2.i1216, i64* %x33FFCC00.i1183, align 8
  %822 = load i64, i64* %x0F0FF0F0.i1181, align 8
  %823 = load i64, i64* %x33FFCC00.i1183, align 8
  %neg.i1217 = xor i64 %823, -1
  %and.i1218 = and i64 %822, %neg.i1217
  store i64 %and.i1218, i64* %x0C0030F0.i1184, align 8
  %824 = load i64, i64* %x0F0FF0F0.i1181, align 8
  %825 = load i64, i64* %a2.addr.i1171, align 8
  %neg3.i1219 = xor i64 %825, -1
  %and4.i1220 = and i64 %824, %neg3.i1219
  store i64 %and4.i1220, i64* %x0C0CC0C0.i1185, align 8
  %826 = load i64, i64* %a4.addr.i1173, align 8
  %827 = load i64, i64* %x0C0CC0C0.i1185, align 8
  %xor5.i1221 = xor i64 %826, %827
  store i64 %xor5.i1221, i64* %x0CF3C03F.i1186, align 8
  %828 = load i64, i64* %x5A5A5A5A.i1180, align 8
  %829 = load i64, i64* %x0CF3C03F.i1186, align 8
  %or6.i1222 = or i64 %828, %829
  store i64 %or6.i1222, i64* %x5EFBDA7F.i1187, align 8
  %830 = load i64, i64* %x5EFBDA7F.i1187, align 8
  %831 = load i64, i64* %x0C0030F0.i1184, align 8
  %neg7.i1223 = xor i64 %831, -1
  %and8.i1224 = and i64 %830, %neg7.i1223
  store i64 %and8.i1224, i64* %x52FBCA0F.i1188, align 8
  %832 = load i64, i64* %a2.addr.i1171, align 8
  %833 = load i64, i64* %x52FBCA0F.i1188, align 8
  %xor9.i1225 = xor i64 %832, %833
  store i64 %xor9.i1225, i64* %x61C8F93C.i1189, align 8
  %834 = load i64, i64* %x0CF3C03F.i1186, align 8
  %835 = load i64, i64* %x61C8F93C.i1189, align 8
  %and10.i1226 = and i64 %834, %835
  store i64 %and10.i1226, i64* %x00C0C03C.i1190, align 8
  %836 = load i64, i64* %x0F0FF0F0.i1181, align 8
  %837 = load i64, i64* %x00C0C03C.i1190, align 8
  %neg11.i1227 = xor i64 %837, -1
  %and12.i1228 = and i64 %836, %neg11.i1227
  store i64 %and12.i1228, i64* %x0F0F30C0.i1191, align 8
  %838 = load i64, i64* %x5A5A5A5A.i1180, align 8
  %839 = load i64, i64* %x61C8F93C.i1189, align 8
  %xor13.i1229 = xor i64 %838, %839
  store i64 %xor13.i1229, i64* %x3B92A366.i1192, align 8
  %840 = load i64, i64* %x3B92A366.i1192, align 8
  %841 = load i64, i64* %x0F0F30C0.i1191, align 8
  %neg14.i1230 = xor i64 %841, -1
  %and15.i1231 = and i64 %840, %neg14.i1230
  store i64 %and15.i1231, i64* %x30908326.i1193, align 8
  %842 = load i64, i64* %x0C0030F0.i1184, align 8
  %843 = load i64, i64* %x30908326.i1193, align 8
  %xor16.i1232 = xor i64 %842, %843
  store i64 %xor16.i1232, i64* %x3C90B3D6.i1194, align 8
  %844 = load i64, i64* %a2.addr.i1171, align 8
  %845 = load i64, i64* %a4.addr.i1173, align 8
  %xor17.i1233 = xor i64 %844, %845
  store i64 %xor17.i1233, i64* %x33CC33CC.i1195, align 8
  %846 = load i64, i64* %a5.addr.i1174, align 8
  %847 = load i64, i64* %x0C0CC0C0.i1185, align 8
  %or18.i1234 = or i64 %846, %847
  store i64 %or18.i1234, i64* %x0C0CFFFF.i1196, align 8
  %848 = load i64, i64* %x3B92A366.i1192, align 8
  %849 = load i64, i64* %x0C0CFFFF.i1196, align 8
  %xor19.i1235 = xor i64 %848, %849
  store i64 %xor19.i1235, i64* %x379E5C99.i1197, align 8
  %850 = load i64, i64* %x379E5C99.i1197, align 8
  %851 = load i64, i64* %x33CC33CC.i1195, align 8
  %neg20.i1236 = xor i64 %851, -1
  %and21.i1237 = and i64 %850, %neg20.i1236
  store i64 %and21.i1237, i64* %x04124C11.i1198, align 8
  %852 = load i64, i64* %x52FBCA0F.i1188, align 8
  %853 = load i64, i64* %x04124C11.i1198, align 8
  %xor22.i1238 = xor i64 %852, %853
  store i64 %xor22.i1238, i64* %x56E9861E.i1199, align 8
  %854 = load i64, i64* %a6.addr.i1175, align 8
  %855 = load i64, i64* %x3C90B3D6.i1194, align 8
  %neg23.i1239 = xor i64 %855, -1
  %and24.i1240 = and i64 %854, %neg23.i1239
  store i64 %and24.i1240, i64* %x00.i1205, align 8
  %856 = load i64, i64* %x00.i1205, align 8
  %857 = load i64, i64* %x56E9861E.i1199, align 8
  %xor25.i1241 = xor i64 %856, %857
  store i64 %xor25.i1241, i64* %x01.i1206, align 8
  %858 = load i64*, i64** %out1.addr.i1176, align 8
  %859 = load i64, i64* %858, align 8
  %860 = load i64, i64* %x01.i1206, align 8
  %xor26.i1242 = xor i64 %859, %860
  %861 = load i64*, i64** %out1.addr.i1176, align 8
  store i64 %xor26.i1242, i64* %861, align 8
  %862 = load i64, i64* %x56E9861E.i1199, align 8
  %neg27.i1243 = xor i64 %862, -1
  store i64 %neg27.i1243, i64* %xA91679E1.i1200, align 8
  %863 = load i64, i64* %x3C90B3D6.i1194, align 8
  %864 = load i64, i64* %a6.addr.i1175, align 8
  %neg28.i1244 = xor i64 %864, -1
  %and29.i1245 = and i64 %863, %neg28.i1244
  store i64 %and29.i1245, i64* %x10.i1207, align 8
  %865 = load i64, i64* %x10.i1207, align 8
  %866 = load i64, i64* %xA91679E1.i1200, align 8
  %xor30.i1246 = xor i64 %865, %866
  store i64 %xor30.i1246, i64* %x11.i1208, align 8
  %867 = load i64*, i64** %out2.addr.i1177, align 8
  %868 = load i64, i64* %867, align 8
  %869 = load i64, i64* %x11.i1208, align 8
  %xor31.i1247 = xor i64 %868, %869
  %870 = load i64*, i64** %out2.addr.i1177, align 8
  store i64 %xor31.i1247, i64* %870, align 8
  %871 = load i64, i64* %x3C90B3D6.i1194, align 8
  %872 = load i64, i64* %xA91679E1.i1200, align 8
  %xor32.i1248 = xor i64 %871, %872
  store i64 %xor32.i1248, i64* %x9586CA37.i1201, align 8
  %873 = load i64, i64* %x9586CA37.i1201, align 8
  %874 = load i64, i64* %x33CC33CC.i1195, align 8
  %neg33.i1249 = xor i64 %874, -1
  %and34.i1250 = and i64 %873, %neg33.i1249
  store i64 %and34.i1250, i64* %x8402C833.i1202, align 8
  %875 = load i64, i64* %x00C0C03C.i1190, align 8
  %876 = load i64, i64* %x8402C833.i1202, align 8
  %or35.i1251 = or i64 %875, %876
  store i64 %or35.i1251, i64* %x84C2C83F.i1203, align 8
  %877 = load i64, i64* %x379E5C99.i1197, align 8
  %878 = load i64, i64* %x84C2C83F.i1203, align 8
  %xor36.i1252 = xor i64 %877, %878
  store i64 %xor36.i1252, i64* %xB35C94A6.i1204, align 8
  %879 = load i64, i64* %x61C8F93C.i1189, align 8
  %880 = load i64, i64* %a6.addr.i1175, align 8
  %or37.i1253 = or i64 %879, %880
  store i64 %or37.i1253, i64* %x20.i1209, align 8
  %881 = load i64, i64* %x20.i1209, align 8
  %882 = load i64, i64* %xB35C94A6.i1204, align 8
  %xor38.i1254 = xor i64 %881, %882
  store i64 %xor38.i1254, i64* %x21.i1210, align 8
  %883 = load i64*, i64** %out3.addr.i1178, align 8
  %884 = load i64, i64* %883, align 8
  %885 = load i64, i64* %x21.i1210, align 8
  %xor39.i1255 = xor i64 %884, %885
  %886 = load i64*, i64** %out3.addr.i1178, align 8
  store i64 %xor39.i1255, i64* %886, align 8
  %887 = load i64, i64* %a6.addr.i1175, align 8
  %888 = load i64, i64* %x61C8F93C.i1189, align 8
  %and40.i1256 = and i64 %887, %888
  store i64 %and40.i1256, i64* %x30.i1211, align 8
  %889 = load i64, i64* %x30.i1211, align 8
  %890 = load i64, i64* %xB35C94A6.i1204, align 8
  %xor41.i1257 = xor i64 %889, %890
  store i64 %xor41.i1257, i64* %x31.i1212, align 8
  %891 = load i64*, i64** %out4.addr.i1179, align 8
  %892 = load i64, i64* %891, align 8
  %893 = load i64, i64* %x31.i1212, align 8
  %xor42.i1258 = xor i64 %892, %893
  %894 = load i64*, i64** %out4.addr.i1179, align 8
  store i64 %xor42.i1258, i64* %894, align 8
  %895 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 15), align 8
  %896 = load i64**, i64*** %k, align 8
  %arrayidx71 = getelementptr inbounds i64*, i64** %896, i64 24
  %897 = load i64*, i64** %arrayidx71, align 8
  %arrayidx72 = getelementptr inbounds i64, i64* %897, i64 0
  %898 = load i64, i64* %arrayidx72, align 8
  %xor73 = xor i64 %895, %898
  %899 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 16), align 8
  %900 = load i64**, i64*** %k, align 8
  %arrayidx74 = getelementptr inbounds i64*, i64** %900, i64 25
  %901 = load i64*, i64** %arrayidx74, align 8
  %arrayidx75 = getelementptr inbounds i64, i64* %901, i64 0
  %902 = load i64, i64* %arrayidx75, align 8
  %xor76 = xor i64 %899, %902
  %903 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 17), align 8
  %904 = load i64**, i64*** %k, align 8
  %arrayidx77 = getelementptr inbounds i64*, i64** %904, i64 26
  %905 = load i64*, i64** %arrayidx77, align 8
  %arrayidx78 = getelementptr inbounds i64, i64* %905, i64 0
  %906 = load i64, i64* %arrayidx78, align 8
  %xor79 = xor i64 %903, %906
  %907 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 18), align 8
  %908 = load i64**, i64*** %k, align 8
  %arrayidx80 = getelementptr inbounds i64*, i64** %908, i64 27
  %909 = load i64*, i64** %arrayidx80, align 8
  %arrayidx81 = getelementptr inbounds i64, i64* %909, i64 0
  %910 = load i64, i64* %arrayidx81, align 8
  %xor82 = xor i64 %907, %910
  %911 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 19), align 8
  %912 = load i64**, i64*** %k, align 8
  %arrayidx83 = getelementptr inbounds i64*, i64** %912, i64 28
  %913 = load i64*, i64** %arrayidx83, align 8
  %arrayidx84 = getelementptr inbounds i64, i64* %913, i64 0
  %914 = load i64, i64* %arrayidx84, align 8
  %xor85 = xor i64 %911, %914
  %915 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 20), align 8
  %916 = load i64**, i64*** %k, align 8
  %arrayidx86 = getelementptr inbounds i64*, i64** %916, i64 29
  %917 = load i64*, i64** %arrayidx86, align 8
  %arrayidx87 = getelementptr inbounds i64, i64* %917, i64 0
  %918 = load i64, i64* %arrayidx87, align 8
  %xor88 = xor i64 %915, %918
  store i64 %xor73, i64* %a1.addr.i1051, align 8
  store i64 %xor76, i64* %a2.addr.i1052, align 8
  store i64 %xor79, i64* %a3.addr.i1053, align 8
  store i64 %xor82, i64* %a4.addr.i1054, align 8
  store i64 %xor85, i64* %a5.addr.i1055, align 8
  store i64 %xor88, i64* %a6.addr.i1056, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 39), i64** %out1.addr.i1057, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 45), i64** %out2.addr.i1058, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 56), i64** %out3.addr.i1059, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 34), i64** %out4.addr.i1060, align 8
  %919 = load i64, i64* %a1.addr.i1051, align 8
  %920 = load i64, i64* %a3.addr.i1053, align 8
  %or.i1109 = or i64 %919, %920
  store i64 %or.i1109, i64* %x77777777.i1061, align 8
  %921 = load i64, i64* %x77777777.i1061, align 8
  %922 = load i64, i64* %a6.addr.i1056, align 8
  %neg.i1110 = xor i64 %922, -1
  %and.i1111 = and i64 %921, %neg.i1110
  store i64 %and.i1111, i64* %x77770000.i1062, align 8
  %923 = load i64, i64* %a1.addr.i1051, align 8
  %924 = load i64, i64* %x77770000.i1062, align 8
  %xor.i1112 = xor i64 %923, %924
  store i64 %xor.i1112, i64* %x22225555.i1063, align 8
  %925 = load i64, i64* %a3.addr.i1053, align 8
  %926 = load i64, i64* %x22225555.i1063, align 8
  %xor1.i1113 = xor i64 %925, %926
  store i64 %xor1.i1113, i64* %x11116666.i1064, align 8
  %927 = load i64, i64* %a4.addr.i1054, align 8
  %928 = load i64, i64* %x11116666.i1064, align 8
  %or2.i1114 = or i64 %927, %928
  store i64 %or2.i1114, i64* %x1F1F6F6F.i1065, align 8
  %929 = load i64, i64* %x77770000.i1062, align 8
  %930 = load i64, i64* %a4.addr.i1054, align 8
  %neg3.i1115 = xor i64 %930, -1
  %and4.i1116 = and i64 %929, %neg3.i1115
  store i64 %and4.i1116, i64* %x70700000.i1066, align 8
  %931 = load i64, i64* %a3.addr.i1053, align 8
  %932 = load i64, i64* %x70700000.i1066, align 8
  %xor5.i1117 = xor i64 %931, %932
  store i64 %xor5.i1117, i64* %x43433333.i1067, align 8
  %933 = load i64, i64* %a5.addr.i1055, align 8
  %934 = load i64, i64* %x43433333.i1067, align 8
  %and6.i1118 = and i64 %933, %934
  store i64 %and6.i1118, i64* %x00430033.i1068, align 8
  %935 = load i64, i64* %a1.addr.i1051, align 8
  %936 = load i64, i64* %x11116666.i1064, align 8
  %or7.i1119 = or i64 %935, %936
  store i64 %or7.i1119, i64* %x55557777.i1069, align 8
  %937 = load i64, i64* %x00430033.i1068, align 8
  %938 = load i64, i64* %x55557777.i1069, align 8
  %xor8.i1120 = xor i64 %937, %938
  store i64 %xor8.i1120, i64* %x55167744.i1070, align 8
  %939 = load i64, i64* %a4.addr.i1054, align 8
  %940 = load i64, i64* %x55167744.i1070, align 8
  %xor9.i1121 = xor i64 %939, %940
  store i64 %xor9.i1121, i64* %x5A19784B.i1071, align 8
  %941 = load i64, i64* %a6.addr.i1056, align 8
  %942 = load i64, i64* %x5A19784B.i1071, align 8
  %xor10.i1122 = xor i64 %941, %942
  store i64 %xor10.i1122, i64* %x5A1987B4.i1072, align 8
  %943 = load i64, i64* %x22225555.i1063, align 8
  %944 = load i64, i64* %x5A1987B4.i1072, align 8
  %or11.i1123 = or i64 %943, %944
  store i64 %or11.i1123, i64* %x7A3BD7F5.i1073, align 8
  %945 = load i64, i64* %a5.addr.i1055, align 8
  %946 = load i64, i64* %x7A3BD7F5.i1073, align 8
  %and12.i1124 = and i64 %945, %946
  store i64 %and12.i1124, i64* %x003B00F5.i1074, align 8
  %947 = load i64, i64* %x22225555.i1063, align 8
  %948 = load i64, i64* %x003B00F5.i1074, align 8
  %xor13.i1125 = xor i64 %947, %948
  store i64 %xor13.i1125, i64* %x221955A0.i1075, align 8
  %949 = load i64, i64* %a4.addr.i1054, align 8
  %950 = load i64, i64* %x55557777.i1069, align 8
  %and14.i1126 = and i64 %949, %950
  store i64 %and14.i1126, i64* %x05050707.i1076, align 8
  %951 = load i64, i64* %x221955A0.i1075, align 8
  %952 = load i64, i64* %x05050707.i1076, align 8
  %xor15.i1127 = xor i64 %951, %952
  store i64 %xor15.i1127, i64* %x271C52A7.i1077, align 8
  %953 = load i64, i64* %x7A3BD7F5.i1073, align 8
  %954 = load i64, i64* %a1.addr.i1051, align 8
  %neg16.i1128 = xor i64 %954, -1
  %and17.i1129 = and i64 %953, %neg16.i1128
  store i64 %and17.i1129, i64* %x2A2A82A0.i1078, align 8
  %955 = load i64, i64* %x43433333.i1067, align 8
  %956 = load i64, i64* %x2A2A82A0.i1078, align 8
  %xor18.i1130 = xor i64 %955, %956
  store i64 %xor18.i1130, i64* %x6969B193.i1079, align 8
  %957 = load i64, i64* %a5.addr.i1055, align 8
  %958 = load i64, i64* %x1F1F6F6F.i1065, align 8
  %xor19.i1131 = xor i64 %957, %958
  store i64 %xor19.i1131, i64* %x1FE06F90.i1080, align 8
  %959 = load i64, i64* %x1FE06F90.i1080, align 8
  %960 = load i64, i64* %x6969B193.i1079, align 8
  %neg20.i1132 = xor i64 %960, -1
  %and21.i1133 = and i64 %959, %neg20.i1132
  store i64 %and21.i1133, i64* %x16804E00.i1081, align 8
  %961 = load i64, i64* %x16804E00.i1081, align 8
  %neg22.i1134 = xor i64 %961, -1
  store i64 %neg22.i1134, i64* %xE97FB1FF.i1082, align 8
  %962 = load i64, i64* %xE97FB1FF.i1082, align 8
  %963 = load i64, i64* %a2.addr.i1052, align 8
  %neg23.i1135 = xor i64 %963, -1
  %and24.i1136 = and i64 %962, %neg23.i1135
  store i64 %and24.i1136, i64* %x20.i1105, align 8
  %964 = load i64, i64* %x20.i1105, align 8
  %965 = load i64, i64* %x5A19784B.i1071, align 8
  %xor25.i1137 = xor i64 %964, %965
  store i64 %xor25.i1137, i64* %x21.i1106, align 8
  %966 = load i64*, i64** %out3.addr.i1059, align 8
  %967 = load i64, i64* %966, align 8
  %968 = load i64, i64* %x21.i1106, align 8
  %xor26.i1138 = xor i64 %967, %968
  %969 = load i64*, i64** %out3.addr.i1059, align 8
  store i64 %xor26.i1138, i64* %969, align 8
  %970 = load i64, i64* %x43433333.i1067, align 8
  %971 = load i64, i64* %x003B00F5.i1074, align 8
  %neg27.i1139 = xor i64 %971, -1
  %and28.i1140 = and i64 %970, %neg27.i1139
  store i64 %and28.i1140, i64* %x43403302.i1083, align 8
  %972 = load i64, i64* %x2A2A82A0.i1078, align 8
  %973 = load i64, i64* %x1FE06F90.i1080, align 8
  %xor29.i1141 = xor i64 %972, %973
  store i64 %xor29.i1141, i64* %x35CAED30.i1084, align 8
  %974 = load i64, i64* %x271C52A7.i1077, align 8
  %975 = load i64, i64* %x35CAED30.i1084, align 8
  %or30.i1142 = or i64 %974, %975
  store i64 %or30.i1142, i64* %x37DEFFB7.i1085, align 8
  %976 = load i64, i64* %x37DEFFB7.i1085, align 8
  %977 = load i64, i64* %x43403302.i1083, align 8
  %neg31.i1143 = xor i64 %977, -1
  %and32.i1144 = and i64 %976, %neg31.i1143
  store i64 %and32.i1144, i64* %x349ECCB5.i1086, align 8
  %978 = load i64, i64* %x1F1F6F6F.i1065, align 8
  %979 = load i64, i64* %x349ECCB5.i1086, align 8
  %neg33.i1145 = xor i64 %979, -1
  %and34.i1146 = and i64 %978, %neg33.i1145
  store i64 %and34.i1146, i64* %x0B01234A.i1087, align 8
  %980 = load i64, i64* %x5A1987B4.i1072, align 8
  %981 = load i64, i64* %x349ECCB5.i1086, align 8
  %and35.i1147 = and i64 %980, %981
  store i64 %and35.i1147, i64* %x101884B4.i1088, align 8
  %982 = load i64, i64* %x1FE06F90.i1080, align 8
  %983 = load i64, i64* %x101884B4.i1088, align 8
  %xor36.i1148 = xor i64 %982, %983
  store i64 %xor36.i1148, i64* %x0FF8EB24.i1089, align 8
  %984 = load i64, i64* %x43433333.i1067, align 8
  %985 = load i64, i64* %x55557777.i1069, align 8
  %and37.i1149 = and i64 %984, %985
  store i64 %and37.i1149, i64* %x41413333.i1090, align 8
  %986 = load i64, i64* %x0FF8EB24.i1089, align 8
  %987 = load i64, i64* %x41413333.i1090, align 8
  %or38.i1150 = or i64 %986, %987
  store i64 %or38.i1150, i64* %x4FF9FB37.i1091, align 8
  %988 = load i64, i64* %x003B00F5.i1074, align 8
  %989 = load i64, i64* %x4FF9FB37.i1091, align 8
  %xor39.i1151 = xor i64 %988, %989
  store i64 %xor39.i1151, i64* %x4FC2FBC2.i1092, align 8
  %990 = load i64, i64* %x4FC2FBC2.i1092, align 8
  %991 = load i64, i64* %a2.addr.i1052, align 8
  %and40.i1152 = and i64 %990, %991
  store i64 %and40.i1152, i64* %x30.i1107, align 8
  %992 = load i64, i64* %x30.i1107, align 8
  %993 = load i64, i64* %x271C52A7.i1077, align 8
  %xor41.i1153 = xor i64 %992, %993
  store i64 %xor41.i1153, i64* %x31.i1108, align 8
  %994 = load i64*, i64** %out4.addr.i1060, align 8
  %995 = load i64, i64* %994, align 8
  %996 = load i64, i64* %x31.i1108, align 8
  %xor42.i1154 = xor i64 %995, %996
  %997 = load i64*, i64** %out4.addr.i1060, align 8
  store i64 %xor42.i1154, i64* %997, align 8
  %998 = load i64, i64* %a1.addr.i1051, align 8
  %999 = load i64, i64* %x77777777.i1061, align 8
  %xor43.i1155 = xor i64 %998, %999
  store i64 %xor43.i1155, i64* %x22222222.i1093, align 8
  %1000 = load i64, i64* %x349ECCB5.i1086, align 8
  %1001 = load i64, i64* %x22222222.i1093, align 8
  %xor44.i1156 = xor i64 %1000, %1001
  store i64 %xor44.i1156, i64* %x16BCEE97.i1094, align 8
  %1002 = load i64, i64* %a4.addr.i1054, align 8
  %1003 = load i64, i64* %x0FF8EB24.i1089, align 8
  %and45.i1157 = and i64 %1002, %1003
  store i64 %and45.i1157, i64* %x0F080B04.i1095, align 8
  %1004 = load i64, i64* %x16BCEE97.i1094, align 8
  %1005 = load i64, i64* %x0F080B04.i1095, align 8
  %xor46.i1158 = xor i64 %1004, %1005
  store i64 %xor46.i1158, i64* %x19B4E593.i1096, align 8
  %1006 = load i64, i64* %x0B01234A.i1087, align 8
  %1007 = load i64, i64* %a2.addr.i1052, align 8
  %or47.i1159 = or i64 %1006, %1007
  store i64 %or47.i1159, i64* %x00.i1101, align 8
  %1008 = load i64, i64* %x00.i1101, align 8
  %1009 = load i64, i64* %x19B4E593.i1096, align 8
  %xor48.i1160 = xor i64 %1008, %1009
  store i64 %xor48.i1160, i64* %x01.i1102, align 8
  %1010 = load i64*, i64** %out1.addr.i1057, align 8
  %1011 = load i64, i64* %1010, align 8
  %1012 = load i64, i64* %x01.i1102, align 8
  %xor49.i1161 = xor i64 %1011, %1012
  %1013 = load i64*, i64** %out1.addr.i1057, align 8
  store i64 %xor49.i1161, i64* %1013, align 8
  %1014 = load i64, i64* %x1F1F6F6F.i1065, align 8
  %1015 = load i64, i64* %x43433333.i1067, align 8
  %xor50.i1162 = xor i64 %1014, %1015
  store i64 %xor50.i1162, i64* %x5C5C5C5C.i1097, align 8
  %1016 = load i64, i64* %x5C5C5C5C.i1097, align 8
  %1017 = load i64, i64* %x19B4E593.i1096, align 8
  %neg51.i1163 = xor i64 %1017, -1
  %and52.i1164 = and i64 %1016, %neg51.i1163
  store i64 %and52.i1164, i64* %x4448184C.i1098, align 8
  %1018 = load i64, i64* %x22225555.i1063, align 8
  %1019 = load i64, i64* %x0FF8EB24.i1089, align 8
  %xor53.i1165 = xor i64 %1018, %1019
  store i64 %xor53.i1165, i64* %x2DDABE71.i1099, align 8
  %1020 = load i64, i64* %x4448184C.i1098, align 8
  %1021 = load i64, i64* %x2DDABE71.i1099, align 8
  %xor54.i1166 = xor i64 %1020, %1021
  store i64 %xor54.i1166, i64* %x6992A63D.i1100, align 8
  %1022 = load i64, i64* %x1F1F6F6F.i1065, align 8
  %1023 = load i64, i64* %a2.addr.i1052, align 8
  %and55.i1167 = and i64 %1022, %1023
  store i64 %and55.i1167, i64* %x10.i1103, align 8
  %1024 = load i64, i64* %x10.i1103, align 8
  %1025 = load i64, i64* %x6992A63D.i1100, align 8
  %xor56.i1168 = xor i64 %1024, %1025
  store i64 %xor56.i1168, i64* %x11.i1104, align 8
  %1026 = load i64*, i64** %out2.addr.i1058, align 8
  %1027 = load i64, i64* %1026, align 8
  %1028 = load i64, i64* %x11.i1104, align 8
  %xor57.i1169 = xor i64 %1027, %1028
  %1029 = load i64*, i64** %out2.addr.i1058, align 8
  store i64 %xor57.i1169, i64* %1029, align 8
  %1030 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 19), align 8
  %1031 = load i64**, i64*** %k, align 8
  %arrayidx89 = getelementptr inbounds i64*, i64** %1031, i64 30
  %1032 = load i64*, i64** %arrayidx89, align 8
  %arrayidx90 = getelementptr inbounds i64, i64* %1032, i64 0
  %1033 = load i64, i64* %arrayidx90, align 8
  %xor91 = xor i64 %1030, %1033
  %1034 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 20), align 8
  %1035 = load i64**, i64*** %k, align 8
  %arrayidx92 = getelementptr inbounds i64*, i64** %1035, i64 31
  %1036 = load i64*, i64** %arrayidx92, align 8
  %arrayidx93 = getelementptr inbounds i64, i64* %1036, i64 0
  %1037 = load i64, i64* %arrayidx93, align 8
  %xor94 = xor i64 %1034, %1037
  %1038 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 21), align 8
  %1039 = load i64**, i64*** %k, align 8
  %arrayidx95 = getelementptr inbounds i64*, i64** %1039, i64 32
  %1040 = load i64*, i64** %arrayidx95, align 8
  %arrayidx96 = getelementptr inbounds i64, i64* %1040, i64 0
  %1041 = load i64, i64* %arrayidx96, align 8
  %xor97 = xor i64 %1038, %1041
  %1042 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 22), align 8
  %1043 = load i64**, i64*** %k, align 8
  %arrayidx98 = getelementptr inbounds i64*, i64** %1043, i64 33
  %1044 = load i64*, i64** %arrayidx98, align 8
  %arrayidx99 = getelementptr inbounds i64, i64* %1044, i64 0
  %1045 = load i64, i64* %arrayidx99, align 8
  %xor100 = xor i64 %1042, %1045
  %1046 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 23), align 8
  %1047 = load i64**, i64*** %k, align 8
  %arrayidx101 = getelementptr inbounds i64*, i64** %1047, i64 34
  %1048 = load i64*, i64** %arrayidx101, align 8
  %arrayidx102 = getelementptr inbounds i64, i64* %1048, i64 0
  %1049 = load i64, i64* %arrayidx102, align 8
  %xor103 = xor i64 %1046, %1049
  %1050 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 24), align 8
  %1051 = load i64**, i64*** %k, align 8
  %arrayidx104 = getelementptr inbounds i64*, i64** %1051, i64 35
  %1052 = load i64*, i64** %arrayidx104, align 8
  %arrayidx105 = getelementptr inbounds i64, i64* %1052, i64 0
  %1053 = load i64, i64* %arrayidx105, align 8
  %xor106 = xor i64 %1050, %1053
  store i64 %xor91, i64* %a1.addr.i937, align 8
  store i64 %xor94, i64* %a2.addr.i938, align 8
  store i64 %xor97, i64* %a3.addr.i939, align 8
  store i64 %xor100, i64* %a4.addr.i940, align 8
  store i64 %xor103, i64* %a5.addr.i941, align 8
  store i64 %xor106, i64* %a6.addr.i942, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 35), i64** %out1.addr.i943, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 60), i64** %out2.addr.i944, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 42), i64** %out3.addr.i945, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 50), i64** %out4.addr.i946, align 8
  %1054 = load i64, i64* %a2.addr.i938, align 8
  %1055 = load i64, i64* %a5.addr.i941, align 8
  %xor.i993 = xor i64 %1054, %1055
  store i64 %xor.i993, i64* %x33CC33CC.i947, align 8
  %1056 = load i64, i64* %a2.addr.i938, align 8
  %1057 = load i64, i64* %a6.addr.i942, align 8
  %or.i994 = or i64 %1056, %1057
  store i64 %or.i994, i64* %x3333FFFF.i948, align 8
  %1058 = load i64, i64* %a1.addr.i937, align 8
  %1059 = load i64, i64* %x3333FFFF.i948, align 8
  %and.i995 = and i64 %1058, %1059
  store i64 %and.i995, i64* %x11115555.i949, align 8
  %1060 = load i64, i64* %x33CC33CC.i947, align 8
  %1061 = load i64, i64* %x11115555.i949, align 8
  %xor1.i996 = xor i64 %1060, %1061
  store i64 %xor1.i996, i64* %x22DD6699.i950, align 8
  %1062 = load i64, i64* %a6.addr.i942, align 8
  %1063 = load i64, i64* %x22DD6699.i950, align 8
  %xor2.i997 = xor i64 %1062, %1063
  store i64 %xor2.i997, i64* %x22DD9966.i951, align 8
  %1064 = load i64, i64* %a5.addr.i941, align 8
  %1065 = load i64, i64* %x22DD9966.i951, align 8
  %neg.i998 = xor i64 %1065, -1
  %and3.i999 = and i64 %1064, %neg.i998
  store i64 %and3.i999, i64* %x00220099.i952, align 8
  %1066 = load i64, i64* %a1.addr.i937, align 8
  %1067 = load i64, i64* %x22DD9966.i951, align 8
  %and4.i1000 = and i64 %1066, %1067
  store i64 %and4.i1000, i64* %x00551144.i953, align 8
  %1068 = load i64, i64* %a2.addr.i938, align 8
  %1069 = load i64, i64* %x00551144.i953, align 8
  %xor5.i1001 = xor i64 %1068, %1069
  store i64 %xor5.i1001, i64* %x33662277.i954, align 8
  %1070 = load i64, i64* %a1.addr.i937, align 8
  %1071 = load i64, i64* %a3.addr.i939, align 8
  %xor6.i1002 = xor i64 %1070, %1071
  store i64 %xor6.i1002, i64* %x5A5A5A5A.i955, align 8
  %1072 = load i64, i64* %x33662277.i954, align 8
  %1073 = load i64, i64* %x5A5A5A5A.i955, align 8
  %or7.i1003 = or i64 %1072, %1073
  store i64 %or7.i1003, i64* %x7B7E7A7F.i956, align 8
  %1074 = load i64, i64* %x22DD6699.i950, align 8
  %1075 = load i64, i64* %x7B7E7A7F.i956, align 8
  %xor8.i1004 = xor i64 %1074, %1075
  store i64 %xor8.i1004, i64* %x59A31CE6.i957, align 8
  %1076 = load i64, i64* %a3.addr.i939, align 8
  %1077 = load i64, i64* %x59A31CE6.i957, align 8
  %and9.i1005 = and i64 %1076, %1077
  store i64 %and9.i1005, i64* %x09030C06.i958, align 8
  %1078 = load i64, i64* %x09030C06.i958, align 8
  %1079 = load i64, i64* %a6.addr.i942, align 8
  %neg10.i1006 = xor i64 %1079, -1
  %and11.i1007 = and i64 %1078, %neg10.i1006
  store i64 %and11.i1007, i64* %x09030000.i959, align 8
  %1080 = load i64, i64* %x00220099.i952, align 8
  %1081 = load i64, i64* %x33662277.i954, align 8
  %or12.i1008 = or i64 %1080, %1081
  store i64 %or12.i1008, i64* %x336622FF.i960, align 8
  %1082 = load i64, i64* %x09030000.i959, align 8
  %1083 = load i64, i64* %x336622FF.i960, align 8
  %xor13.i1009 = xor i64 %1082, %1083
  store i64 %xor13.i1009, i64* %x3A6522FF.i961, align 8
  %1084 = load i64, i64* %x3A6522FF.i961, align 8
  %1085 = load i64, i64* %a4.addr.i940, align 8
  %and14.i1010 = and i64 %1084, %1085
  store i64 %and14.i1010, i64* %x30.i991, align 8
  %1086 = load i64, i64* %x30.i991, align 8
  %1087 = load i64, i64* %x59A31CE6.i957, align 8
  %xor15.i1011 = xor i64 %1086, %1087
  store i64 %xor15.i1011, i64* %x31.i992, align 8
  %1088 = load i64*, i64** %out4.addr.i946, align 8
  %1089 = load i64, i64* %1088, align 8
  %1090 = load i64, i64* %x31.i992, align 8
  %xor16.i1012 = xor i64 %1089, %1090
  %1091 = load i64*, i64** %out4.addr.i946, align 8
  store i64 %xor16.i1012, i64* %1091, align 8
  %1092 = load i64, i64* %a2.addr.i938, align 8
  %1093 = load i64, i64* %x7B7E7A7F.i956, align 8
  %xor17.i1013 = xor i64 %1092, %1093
  store i64 %xor17.i1013, i64* %x484D494C.i962, align 8
  %1094 = load i64, i64* %a6.addr.i942, align 8
  %1095 = load i64, i64* %x484D494C.i962, align 8
  %neg18.i1014 = xor i64 %1095, -1
  %and19.i1015 = and i64 %1094, %neg18.i1014
  store i64 %and19.i1015, i64* %x0000B6B3.i963, align 8
  %1096 = load i64, i64* %a3.addr.i939, align 8
  %1097 = load i64, i64* %x0000B6B3.i963, align 8
  %xor20.i1016 = xor i64 %1096, %1097
  store i64 %xor20.i1016, i64* %x0F0FB9BC.i964, align 8
  %1098 = load i64, i64* %a5.addr.i941, align 8
  %1099 = load i64, i64* %x09030C06.i958, align 8
  %neg21.i1017 = xor i64 %1099, -1
  %and22.i1018 = and i64 %1098, %neg21.i1017
  store i64 %and22.i1018, i64* %x00FC00F9.i965, align 8
  %1100 = load i64, i64* %x0F0FB9BC.i964, align 8
  %1101 = load i64, i64* %x00FC00F9.i965, align 8
  %or23.i1019 = or i64 %1100, %1101
  store i64 %or23.i1019, i64* %x0FFFB9FD.i966, align 8
  %1102 = load i64, i64* %a1.addr.i937, align 8
  %1103 = load i64, i64* %x59A31CE6.i957, align 8
  %or24.i1020 = or i64 %1102, %1103
  store i64 %or24.i1020, i64* %x5DF75DF7.i967, align 8
  %1104 = load i64, i64* %x336622FF.i960, align 8
  %1105 = load i64, i64* %x5DF75DF7.i967, align 8
  %and25.i1021 = and i64 %1104, %1105
  store i64 %and25.i1021, i64* %x116600F7.i968, align 8
  %1106 = load i64, i64* %x0F0FB9BC.i964, align 8
  %1107 = load i64, i64* %x116600F7.i968, align 8
  %xor26.i1022 = xor i64 %1106, %1107
  store i64 %xor26.i1022, i64* %x1E69B94B.i969, align 8
  %1108 = load i64, i64* %x1E69B94B.i969, align 8
  %1109 = load i64, i64* %x09030000.i959, align 8
  %neg27.i1023 = xor i64 %1109, -1
  %and28.i1024 = and i64 %1108, %neg27.i1023
  store i64 %and28.i1024, i64* %x1668B94B.i970, align 8
  %1110 = load i64, i64* %x00220099.i952, align 8
  %1111 = load i64, i64* %a4.addr.i940, align 8
  %or29.i1025 = or i64 %1110, %1111
  store i64 %or29.i1025, i64* %x20.i989, align 8
  %1112 = load i64, i64* %x20.i989, align 8
  %1113 = load i64, i64* %x1668B94B.i970, align 8
  %xor30.i1026 = xor i64 %1112, %1113
  store i64 %xor30.i1026, i64* %x21.i990, align 8
  %1114 = load i64*, i64** %out3.addr.i945, align 8
  %1115 = load i64, i64* %1114, align 8
  %1116 = load i64, i64* %x21.i990, align 8
  %xor31.i1027 = xor i64 %1115, %1116
  %1117 = load i64*, i64** %out3.addr.i945, align 8
  store i64 %xor31.i1027, i64* %1117, align 8
  %1118 = load i64, i64* %a2.addr.i938, align 8
  %1119 = load i64, i64* %x5A5A5A5A.i955, align 8
  %or32.i1028 = or i64 %1118, %1119
  store i64 %or32.i1028, i64* %x7B7B7B7B.i971, align 8
  %1120 = load i64, i64* %x3A6522FF.i961, align 8
  %1121 = load i64, i64* %x7B7B7B7B.i971, align 8
  %xor33.i1029 = xor i64 %1120, %1121
  store i64 %xor33.i1029, i64* %x411E5984.i972, align 8
  %1122 = load i64, i64* %x11115555.i949, align 8
  %1123 = load i64, i64* %x0FFFB9FD.i966, align 8
  %or34.i1030 = or i64 %1122, %1123
  store i64 %or34.i1030, i64* %x1FFFFDFD.i973, align 8
  %1124 = load i64, i64* %x411E5984.i972, align 8
  %1125 = load i64, i64* %x1FFFFDFD.i973, align 8
  %xor35.i1031 = xor i64 %1124, %1125
  store i64 %xor35.i1031, i64* %x5EE1A479.i974, align 8
  %1126 = load i64, i64* %x22DD6699.i950, align 8
  %1127 = load i64, i64* %x1E69B94B.i969, align 8
  %xor36.i1032 = xor i64 %1126, %1127
  store i64 %xor36.i1032, i64* %x3CB4DFD2.i975, align 8
  %1128 = load i64, i64* %a5.addr.i941, align 8
  %1129 = load i64, i64* %x3CB4DFD2.i975, align 8
  %neg37.i1033 = xor i64 %1129, -1
  %and38.i1034 = and i64 %1128, %neg37.i1033
  store i64 %and38.i1034, i64* %x004B002D.i976, align 8
  %1130 = load i64, i64* %x484D494C.i962, align 8
  %neg39.i1035 = xor i64 %1130, -1
  store i64 %neg39.i1035, i64* %xB7B2B6B3.i977, align 8
  %1131 = load i64, i64* %x7B7B7B7B.i971, align 8
  %1132 = load i64, i64* %xB7B2B6B3.i977, align 8
  %xor40.i1036 = xor i64 %1131, %1132
  store i64 %xor40.i1036, i64* %xCCC9CDC8.i978, align 8
  %1133 = load i64, i64* %x004B002D.i976, align 8
  %1134 = load i64, i64* %xCCC9CDC8.i978, align 8
  %xor41.i1037 = xor i64 %1133, %1134
  store i64 %xor41.i1037, i64* %xCC82CDE5.i979, align 8
  %1135 = load i64, i64* %xCC82CDE5.i979, align 8
  %1136 = load i64, i64* %a4.addr.i940, align 8
  %neg42.i1038 = xor i64 %1136, -1
  %and43.i1039 = and i64 %1135, %neg42.i1038
  store i64 %and43.i1039, i64* %x10.i987, align 8
  %1137 = load i64, i64* %x10.i987, align 8
  %1138 = load i64, i64* %x5EE1A479.i974, align 8
  %xor44.i1040 = xor i64 %1137, %1138
  store i64 %xor44.i1040, i64* %x11.i988, align 8
  %1139 = load i64*, i64** %out2.addr.i944, align 8
  %1140 = load i64, i64* %1139, align 8
  %1141 = load i64, i64* %x11.i988, align 8
  %xor45.i1041 = xor i64 %1140, %1141
  %1142 = load i64*, i64** %out2.addr.i944, align 8
  store i64 %xor45.i1041, i64* %1142, align 8
  %1143 = load i64, i64* %a6.addr.i942, align 8
  %1144 = load i64, i64* %x00551144.i953, align 8
  %xor46.i1042 = xor i64 %1143, %1144
  store i64 %xor46.i1042, i64* %x0055EEBB.i980, align 8
  %1145 = load i64, i64* %a1.addr.i937, align 8
  %1146 = load i64, i64* %x0F0FB9BC.i964, align 8
  %xor47.i1043 = xor i64 %1145, %1146
  store i64 %xor47.i1043, i64* %x5A5AECE9.i981, align 8
  %1147 = load i64, i64* %x0055EEBB.i980, align 8
  %1148 = load i64, i64* %x5A5AECE9.i981, align 8
  %and48.i1044 = and i64 %1147, %1148
  store i64 %and48.i1044, i64* %x0050ECA9.i982, align 8
  %1149 = load i64, i64* %x09030C06.i958, align 8
  %1150 = load i64, i64* %xCCC9CDC8.i978, align 8
  %xor49.i1045 = xor i64 %1149, %1150
  store i64 %xor49.i1045, i64* %xC5CAC1CE.i983, align 8
  %1151 = load i64, i64* %x0050ECA9.i982, align 8
  %1152 = load i64, i64* %xC5CAC1CE.i983, align 8
  %xor50.i1046 = xor i64 %1151, %1152
  store i64 %xor50.i1046, i64* %xC59A2D67.i984, align 8
  %1153 = load i64, i64* %x0FFFB9FD.i966, align 8
  %1154 = load i64, i64* %a4.addr.i940, align 8
  %neg51.i1047 = xor i64 %1154, -1
  %and52.i1048 = and i64 %1153, %neg51.i1047
  store i64 %and52.i1048, i64* %x00.i985, align 8
  %1155 = load i64, i64* %x00.i985, align 8
  %1156 = load i64, i64* %xC59A2D67.i984, align 8
  %xor53.i1049 = xor i64 %1155, %1156
  store i64 %xor53.i1049, i64* %x01.i986, align 8
  %1157 = load i64*, i64** %out1.addr.i943, align 8
  %1158 = load i64, i64* %1157, align 8
  %1159 = load i64, i64* %x01.i986, align 8
  %xor54.i1050 = xor i64 %1158, %1159
  %1160 = load i64*, i64** %out1.addr.i943, align 8
  store i64 %xor54.i1050, i64* %1160, align 8
  %1161 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 23), align 8
  %1162 = load i64**, i64*** %k, align 8
  %arrayidx107 = getelementptr inbounds i64*, i64** %1162, i64 36
  %1163 = load i64*, i64** %arrayidx107, align 8
  %arrayidx108 = getelementptr inbounds i64, i64* %1163, i64 0
  %1164 = load i64, i64* %arrayidx108, align 8
  %xor109 = xor i64 %1161, %1164
  %1165 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 24), align 8
  %1166 = load i64**, i64*** %k, align 8
  %arrayidx110 = getelementptr inbounds i64*, i64** %1166, i64 37
  %1167 = load i64*, i64** %arrayidx110, align 8
  %arrayidx111 = getelementptr inbounds i64, i64* %1167, i64 0
  %1168 = load i64, i64* %arrayidx111, align 8
  %xor112 = xor i64 %1165, %1168
  %1169 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 25), align 8
  %1170 = load i64**, i64*** %k, align 8
  %arrayidx113 = getelementptr inbounds i64*, i64** %1170, i64 38
  %1171 = load i64*, i64** %arrayidx113, align 8
  %arrayidx114 = getelementptr inbounds i64, i64* %1171, i64 0
  %1172 = load i64, i64* %arrayidx114, align 8
  %xor115 = xor i64 %1169, %1172
  %1173 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 26), align 8
  %1174 = load i64**, i64*** %k, align 8
  %arrayidx116 = getelementptr inbounds i64*, i64** %1174, i64 39
  %1175 = load i64*, i64** %arrayidx116, align 8
  %arrayidx117 = getelementptr inbounds i64, i64* %1175, i64 0
  %1176 = load i64, i64* %arrayidx117, align 8
  %xor118 = xor i64 %1173, %1176
  %1177 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 27), align 8
  %1178 = load i64**, i64*** %k, align 8
  %arrayidx119 = getelementptr inbounds i64*, i64** %1178, i64 40
  %1179 = load i64*, i64** %arrayidx119, align 8
  %arrayidx120 = getelementptr inbounds i64, i64* %1179, i64 0
  %1180 = load i64, i64* %arrayidx120, align 8
  %xor121 = xor i64 %1177, %1180
  %1181 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 28), align 8
  %1182 = load i64**, i64*** %k, align 8
  %arrayidx122 = getelementptr inbounds i64*, i64** %1182, i64 41
  %1183 = load i64*, i64** %arrayidx122, align 8
  %arrayidx123 = getelementptr inbounds i64, i64* %1183, i64 0
  %1184 = load i64, i64* %arrayidx123, align 8
  %xor124 = xor i64 %1181, %1184
  store i64 %xor109, i64* %a1.addr.i824, align 8
  store i64 %xor112, i64* %a2.addr.i825, align 8
  store i64 %xor115, i64* %a3.addr.i826, align 8
  store i64 %xor118, i64* %a4.addr.i827, align 8
  store i64 %xor121, i64* %a5.addr.i828, align 8
  store i64 %xor124, i64* %a6.addr.i829, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 63), i64** %out1.addr.i830, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 43), i64** %out2.addr.i831, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 53), i64** %out3.addr.i832, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 38), i64** %out4.addr.i833, align 8
  %1185 = load i64, i64* %a4.addr.i827, align 8
  %1186 = load i64, i64* %a5.addr.i828, align 8
  %xor.i880 = xor i64 %1185, %1186
  store i64 %xor.i880, i64* %x0FF00FF0.i834, align 8
  %1187 = load i64, i64* %a3.addr.i826, align 8
  %1188 = load i64, i64* %x0FF00FF0.i834, align 8
  %xor1.i881 = xor i64 %1187, %1188
  store i64 %xor1.i881, i64* %x3CC33CC3.i835, align 8
  %1189 = load i64, i64* %a6.addr.i829, align 8
  %1190 = load i64, i64* %x3CC33CC3.i835, align 8
  %and.i882 = and i64 %1189, %1190
  store i64 %and.i882, i64* %x00003CC3.i836, align 8
  %1191 = load i64, i64* %a4.addr.i827, align 8
  %1192 = load i64, i64* %x0FF00FF0.i834, align 8
  %and2.i883 = and i64 %1191, %1192
  store i64 %and2.i883, i64* %x0F000F00.i837, align 8
  %1193 = load i64, i64* %a2.addr.i825, align 8
  %1194 = load i64, i64* %x0F000F00.i837, align 8
  %xor3.i884 = xor i64 %1193, %1194
  store i64 %xor3.i884, i64* %x5A555A55.i838, align 8
  %1195 = load i64, i64* %x00003CC3.i836, align 8
  %1196 = load i64, i64* %x5A555A55.i838, align 8
  %and4.i885 = and i64 %1195, %1196
  store i64 %and4.i885, i64* %x00001841.i839, align 8
  %1197 = load i64, i64* %a6.addr.i829, align 8
  %1198 = load i64, i64* %x0F000F00.i837, align 8
  %and5.i886 = and i64 %1197, %1198
  store i64 %and5.i886, i64* %x00000F00.i840, align 8
  %1199 = load i64, i64* %a3.addr.i826, align 8
  %1200 = load i64, i64* %x00000F00.i840, align 8
  %xor6.i887 = xor i64 %1199, %1200
  store i64 %xor6.i887, i64* %x33333C33.i841, align 8
  %1201 = load i64, i64* %x5A555A55.i838, align 8
  %1202 = load i64, i64* %x33333C33.i841, align 8
  %or.i888 = or i64 %1201, %1202
  store i64 %or.i888, i64* %x7B777E77.i842, align 8
  %1203 = load i64, i64* %a6.addr.i829, align 8
  %1204 = load i64, i64* %x0FF00FF0.i834, align 8
  %xor7.i889 = xor i64 %1203, %1204
  store i64 %xor7.i889, i64* %x0FF0F00F.i843, align 8
  %1205 = load i64, i64* %x7B777E77.i842, align 8
  %1206 = load i64, i64* %x0FF0F00F.i843, align 8
  %xor8.i890 = xor i64 %1205, %1206
  store i64 %xor8.i890, i64* %x74878E78.i844, align 8
  %1207 = load i64, i64* %a1.addr.i824, align 8
  %1208 = load i64, i64* %x00001841.i839, align 8
  %neg.i891 = xor i64 %1208, -1
  %and9.i892 = and i64 %1207, %neg.i891
  store i64 %and9.i892, i64* %x30.i878, align 8
  %1209 = load i64, i64* %x30.i878, align 8
  %1210 = load i64, i64* %x74878E78.i844, align 8
  %xor10.i893 = xor i64 %1209, %1210
  store i64 %xor10.i893, i64* %x31.i879, align 8
  %1211 = load i64*, i64** %out4.addr.i833, align 8
  %1212 = load i64, i64* %1211, align 8
  %1213 = load i64, i64* %x31.i879, align 8
  %xor11.i894 = xor i64 %1212, %1213
  %1214 = load i64*, i64** %out4.addr.i833, align 8
  store i64 %xor11.i894, i64* %1214, align 8
  %1215 = load i64, i64* %a5.addr.i828, align 8
  %1216 = load i64, i64* %x3CC33CC3.i835, align 8
  %neg12.i895 = xor i64 %1216, -1
  %and13.i896 = and i64 %1215, %neg12.i895
  store i64 %and13.i896, i64* %x003C003C.i845, align 8
  %1217 = load i64, i64* %x5A555A55.i838, align 8
  %1218 = load i64, i64* %x003C003C.i845, align 8
  %or14.i897 = or i64 %1217, %1218
  store i64 %or14.i897, i64* %x5A7D5A7D.i846, align 8
  %1219 = load i64, i64* %x00003CC3.i836, align 8
  %1220 = load i64, i64* %x33333C33.i841, align 8
  %xor15.i898 = xor i64 %1219, %1220
  store i64 %xor15.i898, i64* %x333300F0.i847, align 8
  %1221 = load i64, i64* %x5A7D5A7D.i846, align 8
  %1222 = load i64, i64* %x333300F0.i847, align 8
  %xor16.i899 = xor i64 %1221, %1222
  store i64 %xor16.i899, i64* %x694E5A8D.i848, align 8
  %1223 = load i64, i64* %x00003CC3.i836, align 8
  %1224 = load i64, i64* %x0FF0F00F.i843, align 8
  %xor17.i900 = xor i64 %1223, %1224
  store i64 %xor17.i900, i64* %x0FF0CCCC.i849, align 8
  %1225 = load i64, i64* %a4.addr.i827, align 8
  %1226 = load i64, i64* %x0FF0CCCC.i849, align 8
  %neg18.i901 = xor i64 %1226, -1
  %and19.i902 = and i64 %1225, %neg18.i901
  store i64 %and19.i902, i64* %x000F0303.i850, align 8
  %1227 = load i64, i64* %x5A555A55.i838, align 8
  %1228 = load i64, i64* %x000F0303.i850, align 8
  %neg20.i903 = xor i64 %1228, -1
  %and21.i904 = and i64 %1227, %neg20.i903
  store i64 %and21.i904, i64* %x5A505854.i851, align 8
  %1229 = load i64, i64* %a5.addr.i828, align 8
  %1230 = load i64, i64* %x333300F0.i847, align 8
  %xor22.i905 = xor i64 %1229, %1230
  store i64 %xor22.i905, i64* %x33CC000F.i852, align 8
  %1231 = load i64, i64* %x5A505854.i851, align 8
  %1232 = load i64, i64* %x33CC000F.i852, align 8
  %xor23.i906 = xor i64 %1231, %1232
  store i64 %xor23.i906, i64* %x699C585B.i853, align 8
  %1233 = load i64, i64* %x0F000F00.i837, align 8
  %1234 = load i64, i64* %x74878E78.i844, align 8
  %or24.i907 = or i64 %1233, %1234
  store i64 %or24.i907, i64* %x7F878F78.i854, align 8
  %1235 = load i64, i64* %a3.addr.i826, align 8
  %1236 = load i64, i64* %x699C585B.i853, align 8
  %and25.i908 = and i64 %1235, %1236
  store i64 %and25.i908, i64* %x21101013.i855, align 8
  %1237 = load i64, i64* %x7F878F78.i854, align 8
  %1238 = load i64, i64* %x21101013.i855, align 8
  %or26.i909 = or i64 %1237, %1238
  store i64 %or26.i909, i64* %x7F979F7B.i856, align 8
  %1239 = load i64, i64* %x3CC33CC3.i835, align 8
  %1240 = load i64, i64* %x0FF0F00F.i843, align 8
  %neg27.i910 = xor i64 %1240, -1
  %and28.i911 = and i64 %1239, %neg27.i910
  store i64 %and28.i911, i64* %x30030CC0.i857, align 8
  %1241 = load i64, i64* %x7F979F7B.i856, align 8
  %1242 = load i64, i64* %x30030CC0.i857, align 8
  %xor29.i912 = xor i64 %1241, %1242
  store i64 %xor29.i912, i64* %x4F9493BB.i858, align 8
  %1243 = load i64, i64* %x4F9493BB.i858, align 8
  %1244 = load i64, i64* %a1.addr.i824, align 8
  %neg30.i913 = xor i64 %1244, -1
  %and31.i914 = and i64 %1243, %neg30.i913
  store i64 %and31.i914, i64* %x00.i872, align 8
  %1245 = load i64, i64* %x00.i872, align 8
  %1246 = load i64, i64* %x694E5A8D.i848, align 8
  %xor32.i915 = xor i64 %1245, %1246
  store i64 %xor32.i915, i64* %x01.i873, align 8
  %1247 = load i64*, i64** %out1.addr.i830, align 8
  %1248 = load i64, i64* %1247, align 8
  %1249 = load i64, i64* %x01.i873, align 8
  %xor33.i916 = xor i64 %1248, %1249
  %1250 = load i64*, i64** %out1.addr.i830, align 8
  store i64 %xor33.i916, i64* %1250, align 8
  %1251 = load i64, i64* %x699C585B.i853, align 8
  %1252 = load i64, i64* %x4F9493BB.i858, align 8
  %or34.i917 = or i64 %1251, %1252
  store i64 %or34.i917, i64* %x6F9CDBFB.i859, align 8
  %1253 = load i64, i64* %a6.addr.i829, align 8
  %1254 = load i64, i64* %x6F9CDBFB.i859, align 8
  %and35.i918 = and i64 %1253, %1254
  store i64 %and35.i918, i64* %x0000DBFB.i860, align 8
  %1255 = load i64, i64* %a2.addr.i825, align 8
  %1256 = load i64, i64* %x0000DBFB.i860, align 8
  %and36.i919 = and i64 %1255, %1256
  store i64 %and36.i919, i64* %x00005151.i861, align 8
  %1257 = load i64, i64* %x694E5A8D.i848, align 8
  %1258 = load i64, i64* %x4F9493BB.i858, align 8
  %xor37.i920 = xor i64 %1257, %1258
  store i64 %xor37.i920, i64* %x26DAC936.i862, align 8
  %1259 = load i64, i64* %x00005151.i861, align 8
  %1260 = load i64, i64* %x26DAC936.i862, align 8
  %xor38.i921 = xor i64 %1259, %1260
  store i64 %xor38.i921, i64* %x26DA9867.i863, align 8
  %1261 = load i64, i64* %a5.addr.i828, align 8
  %1262 = load i64, i64* %x21101013.i855, align 8
  %or39.i922 = or i64 %1261, %1262
  store i64 %or39.i922, i64* %x21FF10FF.i864, align 8
  %1263 = load i64, i64* %x0000DBFB.i860, align 8
  %1264 = load i64, i64* %x21FF10FF.i864, align 8
  %xor40.i923 = xor i64 %1263, %1264
  store i64 %xor40.i923, i64* %x21FFCB04.i865, align 8
  %1265 = load i64, i64* %a5.addr.i828, align 8
  %1266 = load i64, i64* %x26DAC936.i862, align 8
  %xor41.i924 = xor i64 %1265, %1266
  store i64 %xor41.i924, i64* %x2625C9C9.i866, align 8
  %1267 = load i64, i64* %x21FFCB04.i865, align 8
  %1268 = load i64, i64* %x2625C9C9.i866, align 8
  %or42.i925 = or i64 %1267, %1268
  store i64 %or42.i925, i64* %x27FFCBCD.i867, align 8
  %1269 = load i64, i64* %x27FFCBCD.i867, align 8
  %1270 = load i64, i64* %a1.addr.i824, align 8
  %and43.i926 = and i64 %1269, %1270
  store i64 %and43.i926, i64* %x20.i876, align 8
  %1271 = load i64, i64* %x20.i876, align 8
  %1272 = load i64, i64* %x699C585B.i853, align 8
  %xor44.i927 = xor i64 %1271, %1272
  store i64 %xor44.i927, i64* %x21.i877, align 8
  %1273 = load i64*, i64** %out3.addr.i832, align 8
  %1274 = load i64, i64* %1273, align 8
  %1275 = load i64, i64* %x21.i877, align 8
  %xor45.i928 = xor i64 %1274, %1275
  %1276 = load i64*, i64** %out3.addr.i832, align 8
  store i64 %xor45.i928, i64* %1276, align 8
  %1277 = load i64, i64* %x0000DBFB.i860, align 8
  %1278 = load i64, i64* %x27FFCBCD.i867, align 8
  %xor46.i929 = xor i64 %1277, %1278
  store i64 %xor46.i929, i64* %x27FF1036.i868, align 8
  %1279 = load i64, i64* %x003C003C.i845, align 8
  %1280 = load i64, i64* %x27FF1036.i868, align 8
  %or47.i930 = or i64 %1279, %1280
  store i64 %or47.i930, i64* %x27FF103E.i869, align 8
  %1281 = load i64, i64* %x4F9493BB.i858, align 8
  %neg48.i931 = xor i64 %1281, -1
  store i64 %neg48.i931, i64* %xB06B6C44.i870, align 8
  %1282 = load i64, i64* %x27FF103E.i869, align 8
  %1283 = load i64, i64* %xB06B6C44.i870, align 8
  %xor49.i932 = xor i64 %1282, %1283
  store i64 %xor49.i932, i64* %x97947C7A.i871, align 8
  %1284 = load i64, i64* %x97947C7A.i871, align 8
  %1285 = load i64, i64* %a1.addr.i824, align 8
  %neg50.i933 = xor i64 %1285, -1
  %and51.i934 = and i64 %1284, %neg50.i933
  store i64 %and51.i934, i64* %x10.i874, align 8
  %1286 = load i64, i64* %x10.i874, align 8
  %1287 = load i64, i64* %x26DA9867.i863, align 8
  %xor52.i935 = xor i64 %1286, %1287
  store i64 %xor52.i935, i64* %x11.i875, align 8
  %1288 = load i64*, i64** %out2.addr.i831, align 8
  %1289 = load i64, i64* %1288, align 8
  %1290 = load i64, i64* %x11.i875, align 8
  %xor53.i936 = xor i64 %1289, %1290
  %1291 = load i64*, i64** %out2.addr.i831, align 8
  store i64 %xor53.i936, i64* %1291, align 8
  %1292 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 27), align 8
  %1293 = load i64**, i64*** %k, align 8
  %arrayidx125 = getelementptr inbounds i64*, i64** %1293, i64 42
  %1294 = load i64*, i64** %arrayidx125, align 8
  %arrayidx126 = getelementptr inbounds i64, i64* %1294, i64 0
  %1295 = load i64, i64* %arrayidx126, align 8
  %xor127 = xor i64 %1292, %1295
  %1296 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 28), align 8
  %1297 = load i64**, i64*** %k, align 8
  %arrayidx128 = getelementptr inbounds i64*, i64** %1297, i64 43
  %1298 = load i64*, i64** %arrayidx128, align 8
  %arrayidx129 = getelementptr inbounds i64, i64* %1298, i64 0
  %1299 = load i64, i64* %arrayidx129, align 8
  %xor130 = xor i64 %1296, %1299
  %1300 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 29), align 8
  %1301 = load i64**, i64*** %k, align 8
  %arrayidx131 = getelementptr inbounds i64*, i64** %1301, i64 44
  %1302 = load i64*, i64** %arrayidx131, align 8
  %arrayidx132 = getelementptr inbounds i64, i64* %1302, i64 0
  %1303 = load i64, i64* %arrayidx132, align 8
  %xor133 = xor i64 %1300, %1303
  %1304 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 30), align 8
  %1305 = load i64**, i64*** %k, align 8
  %arrayidx134 = getelementptr inbounds i64*, i64** %1305, i64 45
  %1306 = load i64*, i64** %arrayidx134, align 8
  %arrayidx135 = getelementptr inbounds i64, i64* %1306, i64 0
  %1307 = load i64, i64* %arrayidx135, align 8
  %xor136 = xor i64 %1304, %1307
  %1308 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 31), align 8
  %1309 = load i64**, i64*** %k, align 8
  %arrayidx137 = getelementptr inbounds i64*, i64** %1309, i64 46
  %1310 = load i64*, i64** %arrayidx137, align 8
  %arrayidx138 = getelementptr inbounds i64, i64* %1310, i64 0
  %1311 = load i64, i64* %arrayidx138, align 8
  %xor139 = xor i64 %1308, %1311
  %1312 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 0), align 8
  %1313 = load i64**, i64*** %k, align 8
  %arrayidx140 = getelementptr inbounds i64*, i64** %1313, i64 47
  %1314 = load i64*, i64** %arrayidx140, align 8
  %arrayidx141 = getelementptr inbounds i64, i64* %1314, i64 0
  %1315 = load i64, i64* %arrayidx141, align 8
  %xor142 = xor i64 %1312, %1315
  store i64 %xor127, i64* %a1.addr.i721, align 8
  store i64 %xor130, i64* %a2.addr.i722, align 8
  store i64 %xor133, i64* %a3.addr.i723, align 8
  store i64 %xor136, i64* %a4.addr.i724, align 8
  store i64 %xor139, i64* %a5.addr.i725, align 8
  store i64 %xor142, i64* %a6.addr.i726, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 36), i64** %out1.addr.i727, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 58), i64** %out2.addr.i728, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 46), i64** %out3.addr.i729, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 52), i64** %out4.addr.i730, align 8
  %1316 = load i64, i64* %a3.addr.i723, align 8
  %1317 = load i64, i64* %a2.addr.i722, align 8
  %neg.i772 = xor i64 %1317, -1
  %and.i773 = and i64 %1316, %neg.i772
  store i64 %and.i773, i64* %x0C0C0C0C.i731, align 8
  %1318 = load i64, i64* %a5.addr.i725, align 8
  %1319 = load i64, i64* %a3.addr.i723, align 8
  %neg1.i774 = xor i64 %1319, -1
  %and2.i775 = and i64 %1318, %neg1.i774
  store i64 %and2.i775, i64* %x0000F0F0.i732, align 8
  %1320 = load i64, i64* %a4.addr.i724, align 8
  %1321 = load i64, i64* %x0000F0F0.i732, align 8
  %xor.i776 = xor i64 %1320, %1321
  store i64 %xor.i776, i64* %x00FFF00F.i733, align 8
  %1322 = load i64, i64* %a1.addr.i721, align 8
  %1323 = load i64, i64* %x00FFF00F.i733, align 8
  %and3.i777 = and i64 %1322, %1323
  store i64 %and3.i777, i64* %x00555005.i734, align 8
  %1324 = load i64, i64* %x00555005.i734, align 8
  %1325 = load i64, i64* %x0C0C0C0C.i731, align 8
  %neg4.i778 = xor i64 %1325, -1
  %and5.i779 = and i64 %1324, %neg4.i778
  store i64 %and5.i779, i64* %x00515001.i735, align 8
  %1326 = load i64, i64* %a2.addr.i722, align 8
  %1327 = load i64, i64* %x00FFF00F.i733, align 8
  %neg6.i780 = xor i64 %1327, -1
  %and7.i781 = and i64 %1326, %neg6.i780
  store i64 %and7.i781, i64* %x33000330.i736, align 8
  %1328 = load i64, i64* %a1.addr.i721, align 8
  %1329 = load i64, i64* %x33000330.i736, align 8
  %or.i782 = or i64 %1328, %1329
  store i64 %or.i782, i64* %x77555775.i737, align 8
  %1330 = load i64, i64* %a2.addr.i722, align 8
  %1331 = load i64, i64* %a3.addr.i723, align 8
  %neg8.i783 = xor i64 %1331, -1
  %and9.i784 = and i64 %1330, %neg8.i783
  store i64 %and9.i784, i64* %x30303030.i738, align 8
  %1332 = load i64, i64* %a5.addr.i725, align 8
  %1333 = load i64, i64* %x30303030.i738, align 8
  %xor10.i785 = xor i64 %1332, %1333
  store i64 %xor10.i785, i64* %x3030CFCF.i739, align 8
  %1334 = load i64, i64* %x77555775.i737, align 8
  %1335 = load i64, i64* %x3030CFCF.i739, align 8
  %and11.i786 = and i64 %1334, %1335
  store i64 %and11.i786, i64* %x30104745.i740, align 8
  %1336 = load i64, i64* %x00555005.i734, align 8
  %1337 = load i64, i64* %x30104745.i740, align 8
  %or12.i787 = or i64 %1336, %1337
  store i64 %or12.i787, i64* %x30555745.i741, align 8
  %1338 = load i64, i64* %x00FFF00F.i733, align 8
  %neg13.i788 = xor i64 %1338, -1
  store i64 %neg13.i788, i64* %xFF000FF0.i742, align 8
  %1339 = load i64, i64* %x30104745.i740, align 8
  %1340 = load i64, i64* %xFF000FF0.i742, align 8
  %xor14.i789 = xor i64 %1339, %1340
  store i64 %xor14.i789, i64* %xCF1048B5.i743, align 8
  %1341 = load i64, i64* %a3.addr.i723, align 8
  %1342 = load i64, i64* %x77555775.i737, align 8
  %neg15.i790 = xor i64 %1342, -1
  %and16.i791 = and i64 %1341, %neg15.i790
  store i64 %and16.i791, i64* %x080A080A.i744, align 8
  %1343 = load i64, i64* %xCF1048B5.i743, align 8
  %1344 = load i64, i64* %x080A080A.i744, align 8
  %xor17.i792 = xor i64 %1343, %1344
  store i64 %xor17.i792, i64* %xC71A40BF.i745, align 8
  %1345 = load i64, i64* %x0C0C0C0C.i731, align 8
  %1346 = load i64, i64* %xC71A40BF.i745, align 8
  %xor18.i793 = xor i64 %1345, %1346
  store i64 %xor18.i793, i64* %xCB164CB3.i746, align 8
  %1347 = load i64, i64* %x00515001.i735, align 8
  %1348 = load i64, i64* %a6.addr.i726, align 8
  %or19.i794 = or i64 %1347, %1348
  store i64 %or19.i794, i64* %x10.i766, align 8
  %1349 = load i64, i64* %x10.i766, align 8
  %1350 = load i64, i64* %xCB164CB3.i746, align 8
  %xor20.i795 = xor i64 %1349, %1350
  store i64 %xor20.i795, i64* %x11.i767, align 8
  %1351 = load i64*, i64** %out2.addr.i728, align 8
  %1352 = load i64, i64* %1351, align 8
  %1353 = load i64, i64* %x11.i767, align 8
  %xor21.i796 = xor i64 %1352, %1353
  %1354 = load i64*, i64** %out2.addr.i728, align 8
  store i64 %xor21.i796, i64* %1354, align 8
  %1355 = load i64, i64* %a1.addr.i721, align 8
  %1356 = load i64, i64* %xCB164CB3.i746, align 8
  %xor22.i797 = xor i64 %1355, %1356
  store i64 %xor22.i797, i64* %x9E4319E6.i747, align 8
  %1357 = load i64, i64* %a5.addr.i725, align 8
  %1358 = load i64, i64* %x9E4319E6.i747, align 8
  %and23.i798 = and i64 %1357, %1358
  store i64 %and23.i798, i64* %x000019E6.i748, align 8
  %1359 = load i64, i64* %a2.addr.i722, align 8
  %1360 = load i64, i64* %xC71A40BF.i745, align 8
  %xor24.i799 = xor i64 %1359, %1360
  store i64 %xor24.i799, i64* %xF429738C.i749, align 8
  %1361 = load i64, i64* %x000019E6.i748, align 8
  %1362 = load i64, i64* %xF429738C.i749, align 8
  %xor25.i800 = xor i64 %1361, %1362
  store i64 %xor25.i800, i64* %xF4296A6A.i750, align 8
  %1363 = load i64, i64* %x33000330.i736, align 8
  %1364 = load i64, i64* %xF4296A6A.i750, align 8
  %xor26.i801 = xor i64 %1363, %1364
  store i64 %xor26.i801, i64* %xC729695A.i751, align 8
  %1365 = load i64, i64* %x30555745.i741, align 8
  %1366 = load i64, i64* %xF4296A6A.i750, align 8
  %xor27.i802 = xor i64 %1365, %1366
  store i64 %xor27.i802, i64* %xC47C3D2F.i752, align 8
  %1367 = load i64, i64* %a2.addr.i722, align 8
  %1368 = load i64, i64* %xC47C3D2F.i752, align 8
  %or28.i803 = or i64 %1367, %1368
  store i64 %or28.i803, i64* %xF77F3F3F.i753, align 8
  %1369 = load i64, i64* %a5.addr.i725, align 8
  %1370 = load i64, i64* %x9E4319E6.i747, align 8
  %xor29.i804 = xor i64 %1369, %1370
  store i64 %xor29.i804, i64* %x9E43E619.i754, align 8
  %1371 = load i64, i64* %xF77F3F3F.i753, align 8
  %1372 = load i64, i64* %x9E43E619.i754, align 8
  %xor30.i805 = xor i64 %1371, %1372
  store i64 %xor30.i805, i64* %x693CD926.i755, align 8
  %1373 = load i64, i64* %x30555745.i741, align 8
  %1374 = load i64, i64* %a6.addr.i726, align 8
  %and31.i806 = and i64 %1373, %1374
  store i64 %and31.i806, i64* %x20.i768, align 8
  %1375 = load i64, i64* %x20.i768, align 8
  %1376 = load i64, i64* %x693CD926.i755, align 8
  %xor32.i807 = xor i64 %1375, %1376
  store i64 %xor32.i807, i64* %x21.i769, align 8
  %1377 = load i64*, i64** %out3.addr.i729, align 8
  %1378 = load i64, i64* %1377, align 8
  %1379 = load i64, i64* %x21.i769, align 8
  %xor33.i808 = xor i64 %1378, %1379
  %1380 = load i64*, i64** %out3.addr.i729, align 8
  store i64 %xor33.i808, i64* %1380, align 8
  %1381 = load i64, i64* %x3030CFCF.i739, align 8
  %1382 = load i64, i64* %xC729695A.i751, align 8
  %xor34.i809 = xor i64 %1381, %1382
  store i64 %xor34.i809, i64* %xF719A695.i756, align 8
  %1383 = load i64, i64* %a4.addr.i724, align 8
  %1384 = load i64, i64* %xF429738C.i749, align 8
  %or35.i810 = or i64 %1383, %1384
  store i64 %or35.i810, i64* %xF4FF73FF.i757, align 8
  %1385 = load i64, i64* %xF719A695.i756, align 8
  %1386 = load i64, i64* %xF4FF73FF.i757, align 8
  %xor36.i811 = xor i64 %1385, %1386
  store i64 %xor36.i811, i64* %x03E6D56A.i758, align 8
  %1387 = load i64, i64* %a1.addr.i721, align 8
  %1388 = load i64, i64* %x03E6D56A.i758, align 8
  %xor37.i812 = xor i64 %1387, %1388
  store i64 %xor37.i812, i64* %x56B3803F.i759, align 8
  %1389 = load i64, i64* %x56B3803F.i759, align 8
  %1390 = load i64, i64* %a6.addr.i726, align 8
  %and38.i813 = and i64 %1389, %1390
  store i64 %and38.i813, i64* %x30.i770, align 8
  %1391 = load i64, i64* %x30.i770, align 8
  %1392 = load i64, i64* %xC729695A.i751, align 8
  %xor39.i814 = xor i64 %1391, %1392
  store i64 %xor39.i814, i64* %x31.i771, align 8
  %1393 = load i64*, i64** %out4.addr.i730, align 8
  %1394 = load i64, i64* %1393, align 8
  %1395 = load i64, i64* %x31.i771, align 8
  %xor40.i815 = xor i64 %1394, %1395
  %1396 = load i64*, i64** %out4.addr.i730, align 8
  store i64 %xor40.i815, i64* %1396, align 8
  %1397 = load i64, i64* %xF719A695.i756, align 8
  %1398 = load i64, i64* %a4.addr.i724, align 8
  %neg41.i816 = xor i64 %1398, -1
  %and42.i817 = and i64 %1397, %neg41.i816
  store i64 %and42.i817, i64* %xF700A600.i760, align 8
  %1399 = load i64, i64* %x693CD926.i755, align 8
  %1400 = load i64, i64* %xF700A600.i760, align 8
  %and43.i818 = and i64 %1399, %1400
  store i64 %and43.i818, i64* %x61008000.i761, align 8
  %1401 = load i64, i64* %x00515001.i735, align 8
  %1402 = load i64, i64* %x03E6D56A.i758, align 8
  %xor44.i819 = xor i64 %1401, %1402
  store i64 %xor44.i819, i64* %x03B7856B.i762, align 8
  %1403 = load i64, i64* %x61008000.i761, align 8
  %1404 = load i64, i64* %x03B7856B.i762, align 8
  %xor45.i820 = xor i64 %1403, %1404
  store i64 %xor45.i820, i64* %x62B7056B.i763, align 8
  %1405 = load i64, i64* %x62B7056B.i763, align 8
  %1406 = load i64, i64* %a6.addr.i726, align 8
  %or46.i821 = or i64 %1405, %1406
  store i64 %or46.i821, i64* %x00.i764, align 8
  %1407 = load i64, i64* %x00.i764, align 8
  %1408 = load i64, i64* %xC729695A.i751, align 8
  %xor47.i822 = xor i64 %1407, %1408
  store i64 %xor47.i822, i64* %x01.i765, align 8
  %1409 = load i64*, i64** %out1.addr.i727, align 8
  %1410 = load i64, i64* %1409, align 8
  %1411 = load i64, i64* %x01.i765, align 8
  %xor48.i823 = xor i64 %1410, %1411
  %1412 = load i64*, i64** %out1.addr.i727, align 8
  store i64 %xor48.i823, i64* %1412, align 8
  %1413 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 63), align 8
  %1414 = load i64**, i64*** %k, align 8
  %arrayidx143 = getelementptr inbounds i64*, i64** %1414, i64 48
  %1415 = load i64*, i64** %arrayidx143, align 8
  %arrayidx144 = getelementptr inbounds i64, i64* %1415, i64 0
  %1416 = load i64, i64* %arrayidx144, align 8
  %xor145 = xor i64 %1413, %1416
  %1417 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 32), align 8
  %1418 = load i64**, i64*** %k, align 8
  %arrayidx146 = getelementptr inbounds i64*, i64** %1418, i64 49
  %1419 = load i64*, i64** %arrayidx146, align 8
  %arrayidx147 = getelementptr inbounds i64, i64* %1419, i64 0
  %1420 = load i64, i64* %arrayidx147, align 8
  %xor148 = xor i64 %1417, %1420
  %1421 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 33), align 8
  %1422 = load i64**, i64*** %k, align 8
  %arrayidx149 = getelementptr inbounds i64*, i64** %1422, i64 50
  %1423 = load i64*, i64** %arrayidx149, align 8
  %arrayidx150 = getelementptr inbounds i64, i64* %1423, i64 0
  %1424 = load i64, i64* %arrayidx150, align 8
  %xor151 = xor i64 %1421, %1424
  %1425 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 34), align 8
  %1426 = load i64**, i64*** %k, align 8
  %arrayidx152 = getelementptr inbounds i64*, i64** %1426, i64 51
  %1427 = load i64*, i64** %arrayidx152, align 8
  %arrayidx153 = getelementptr inbounds i64, i64* %1427, i64 0
  %1428 = load i64, i64* %arrayidx153, align 8
  %xor154 = xor i64 %1425, %1428
  %1429 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 35), align 8
  %1430 = load i64**, i64*** %k, align 8
  %arrayidx155 = getelementptr inbounds i64*, i64** %1430, i64 52
  %1431 = load i64*, i64** %arrayidx155, align 8
  %arrayidx156 = getelementptr inbounds i64, i64* %1431, i64 0
  %1432 = load i64, i64* %arrayidx156, align 8
  %xor157 = xor i64 %1429, %1432
  %1433 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 36), align 8
  %1434 = load i64**, i64*** %k, align 8
  %arrayidx158 = getelementptr inbounds i64*, i64** %1434, i64 53
  %1435 = load i64*, i64** %arrayidx158, align 8
  %arrayidx159 = getelementptr inbounds i64, i64* %1435, i64 0
  %1436 = load i64, i64* %arrayidx159, align 8
  %xor160 = xor i64 %1433, %1436
  store i64 %xor145, i64* %a1.addr.i641, align 8
  store i64 %xor148, i64* %a2.addr.i642, align 8
  store i64 %xor151, i64* %a3.addr.i643, align 8
  store i64 %xor154, i64* %a4.addr.i644, align 8
  store i64 %xor157, i64* %a5.addr.i645, align 8
  store i64 %xor160, i64* %a6.addr.i646, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 8), i64** %out1.addr.i647, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 16), i64** %out2.addr.i648, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 22), i64** %out3.addr.i649, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 30), i64** %out4.addr.i650, align 8
  %1437 = load i64, i64* %a1.addr.i641, align 8
  %1438 = load i64, i64* %a5.addr.i645, align 8
  %neg.i662 = xor i64 %1438, -1
  %and.i663 = and i64 %1437, %neg.i662
  store i64 %and.i663, i64* %x55005500.i, align 8
  %1439 = load i64, i64* %a4.addr.i644, align 8
  %1440 = load i64, i64* %x55005500.i, align 8
  %xor.i664 = xor i64 %1439, %1440
  store i64 %xor.i664, i64* %x5A0F5A0F.i, align 8
  %1441 = load i64, i64* %a3.addr.i643, align 8
  %1442 = load i64, i64* %a6.addr.i646, align 8
  %or.i665 = or i64 %1441, %1442
  store i64 %or.i665, i64* %x3333FFFF.i651, align 8
  %1443 = load i64, i64* %a1.addr.i641, align 8
  %1444 = load i64, i64* %a3.addr.i643, align 8
  %xor1.i666 = xor i64 %1443, %1444
  store i64 %xor1.i666, i64* %x66666666.i, align 8
  %1445 = load i64, i64* %x3333FFFF.i651, align 8
  %1446 = load i64, i64* %x66666666.i, align 8
  %and2.i667 = and i64 %1445, %1446
  store i64 %and2.i667, i64* %x22226666.i, align 8
  %1447 = load i64, i64* %a4.addr.i644, align 8
  %1448 = load i64, i64* %x22226666.i, align 8
  %xor3.i668 = xor i64 %1447, %1448
  store i64 %xor3.i668, i64* %x2D2D6969.i, align 8
  %1449 = load i64, i64* %x2D2D6969.i, align 8
  %1450 = load i64, i64* %x5A0F5A0F.i, align 8
  %neg4.i669 = xor i64 %1450, -1
  %and5.i670 = and i64 %1449, %neg4.i669
  store i64 %and5.i670, i64* %x25202160.i, align 8
  %1451 = load i64, i64* %a5.addr.i645, align 8
  %1452 = load i64, i64* %a6.addr.i646, align 8
  %xor6.i671 = xor i64 %1451, %1452
  store i64 %xor6.i671, i64* %x00FFFF00.i652, align 8
  %1453 = load i64, i64* %a3.addr.i643, align 8
  %1454 = load i64, i64* %x00FFFF00.i652, align 8
  %xor7.i672 = xor i64 %1453, %1454
  store i64 %xor7.i672, i64* %x33CCCC33.i653, align 8
  %1455 = load i64, i64* %x5A0F5A0F.i, align 8
  %1456 = load i64, i64* %x33CCCC33.i653, align 8
  %neg8.i673 = xor i64 %1456, -1
  %and9.i674 = and i64 %1455, %neg8.i673
  store i64 %and9.i674, i64* %x4803120C.i, align 8
  %1457 = load i64, i64* %a6.addr.i646, align 8
  %1458 = load i64, i64* %x22226666.i, align 8
  %or10.i = or i64 %1457, %1458
  store i64 %or10.i, i64* %x2222FFFF.i, align 8
  %1459 = load i64, i64* %x4803120C.i, align 8
  %1460 = load i64, i64* %x2222FFFF.i, align 8
  %xor11.i675 = xor i64 %1459, %1460
  store i64 %xor11.i675, i64* %x6A21EDF3.i, align 8
  %1461 = load i64, i64* %x6A21EDF3.i, align 8
  %1462 = load i64, i64* %x25202160.i, align 8
  %neg12.i676 = xor i64 %1462, -1
  %and13.i677 = and i64 %1461, %neg12.i676
  store i64 %and13.i677, i64* %x4A01CC93.i, align 8
  %1463 = load i64, i64* %a1.addr.i641, align 8
  %1464 = load i64, i64* %a6.addr.i646, align 8
  %or14.i678 = or i64 %1463, %1464
  store i64 %or14.i678, i64* %x5555FFFF.i, align 8
  %1465 = load i64, i64* %x6A21EDF3.i, align 8
  %1466 = load i64, i64* %x5555FFFF.i, align 8
  %or15.i679 = or i64 %1465, %1466
  store i64 %or15.i679, i64* %x7F75FFFF.i, align 8
  %1467 = load i64, i64* %a5.addr.i645, align 8
  %1468 = load i64, i64* %x2D2D6969.i, align 8
  %neg16.i680 = xor i64 %1468, -1
  %and17.i681 = and i64 %1467, %neg16.i680
  store i64 %and17.i681, i64* %x00D20096.i, align 8
  %1469 = load i64, i64* %x7F75FFFF.i, align 8
  %1470 = load i64, i64* %x00D20096.i, align 8
  %xor18.i682 = xor i64 %1469, %1470
  store i64 %xor18.i682, i64* %x7FA7FF69.i, align 8
  %1471 = load i64, i64* %a4.addr.i644, align 8
  %1472 = load i64, i64* %x5555FFFF.i, align 8
  %neg19.i = xor i64 %1472, -1
  %and20.i = and i64 %1471, %neg19.i
  store i64 %and20.i, i64* %x0A0A0000.i, align 8
  %1473 = load i64, i64* %x00D20096.i, align 8
  %1474 = load i64, i64* %x0A0A0000.i, align 8
  %xor21.i683 = xor i64 %1473, %1474
  store i64 %xor21.i683, i64* %x0AD80096.i, align 8
  %1475 = load i64, i64* %x00FFFF00.i652, align 8
  %1476 = load i64, i64* %x66666666.i, align 8
  %neg22.i684 = xor i64 %1476, -1
  %and23.i685 = and i64 %1475, %neg22.i684
  store i64 %and23.i685, i64* %x00999900.i, align 8
  %1477 = load i64, i64* %x0AD80096.i, align 8
  %1478 = load i64, i64* %x00999900.i, align 8
  %or24.i686 = or i64 %1477, %1478
  store i64 %or24.i686, i64* %x0AD99996.i, align 8
  %1479 = load i64, i64* %a3.addr.i643, align 8
  %1480 = load i64, i64* %x55005500.i, align 8
  %neg25.i687 = xor i64 %1480, -1
  %and26.i688 = and i64 %1479, %neg25.i687
  store i64 %and26.i688, i64* %x22332233.i, align 8
  %1481 = load i64, i64* %x5A0F5A0F.i, align 8
  %1482 = load i64, i64* %x7F75FFFF.i, align 8
  %xor27.i689 = xor i64 %1481, %1482
  store i64 %xor27.i689, i64* %x257AA5F0.i, align 8
  %1483 = load i64, i64* %x257AA5F0.i, align 8
  %1484 = load i64, i64* %x22332233.i, align 8
  %neg28.i690 = xor i64 %1484, -1
  %and29.i691 = and i64 %1483, %neg28.i690
  store i64 %and29.i691, i64* %x054885C0.i, align 8
  %1485 = load i64, i64* %x054885C0.i, align 8
  %neg30.i692 = xor i64 %1485, -1
  store i64 %neg30.i692, i64* %xFAB77A3F.i, align 8
  %1486 = load i64, i64* %x3333FFFF.i651, align 8
  %1487 = load i64, i64* %x6A21EDF3.i, align 8
  %and31.i693 = and i64 %1486, %1487
  store i64 %and31.i693, i64* %x2221EDF3.i, align 8
  %1488 = load i64, i64* %xFAB77A3F.i, align 8
  %1489 = load i64, i64* %x2221EDF3.i, align 8
  %xor32.i694 = xor i64 %1488, %1489
  store i64 %xor32.i694, i64* %xD89697CC.i, align 8
  %1490 = load i64, i64* %x7FA7FF69.i, align 8
  %1491 = load i64, i64* %a2.addr.i642, align 8
  %neg33.i695 = xor i64 %1491, -1
  %and34.i696 = and i64 %1490, %neg33.i695
  store i64 %and34.i696, i64* %x20.i658, align 8
  %1492 = load i64, i64* %x20.i658, align 8
  %1493 = load i64, i64* %xD89697CC.i, align 8
  %xor35.i697 = xor i64 %1492, %1493
  store i64 %xor35.i697, i64* %x21.i659, align 8
  %1494 = load i64*, i64** %out3.addr.i649, align 8
  %1495 = load i64, i64* %1494, align 8
  %1496 = load i64, i64* %x21.i659, align 8
  %xor36.i698 = xor i64 %1495, %1496
  %1497 = load i64*, i64** %out3.addr.i649, align 8
  store i64 %xor36.i698, i64* %1497, align 8
  %1498 = load i64, i64* %x00FFFF00.i652, align 8
  %1499 = load i64, i64* %x054885C0.i, align 8
  %xor37.i699 = xor i64 %1498, %1499
  store i64 %xor37.i699, i64* %x05B77AC0.i, align 8
  %1500 = load i64, i64* %x00D20096.i, align 8
  %1501 = load i64, i64* %x05B77AC0.i, align 8
  %or38.i700 = or i64 %1500, %1501
  store i64 %or38.i700, i64* %x05F77AD6.i, align 8
  %1502 = load i64, i64* %x3333FFFF.i651, align 8
  %1503 = load i64, i64* %x05F77AD6.i, align 8
  %xor39.i701 = xor i64 %1502, %1503
  store i64 %xor39.i701, i64* %x36C48529.i, align 8
  %1504 = load i64, i64* %a1.addr.i641, align 8
  %1505 = load i64, i64* %x36C48529.i, align 8
  %xor40.i702 = xor i64 %1504, %1505
  store i64 %xor40.i702, i64* %x6391D07C.i, align 8
  %1506 = load i64, i64* %xD89697CC.i, align 8
  %1507 = load i64, i64* %x6391D07C.i, align 8
  %xor41.i703 = xor i64 %1506, %1507
  store i64 %xor41.i703, i64* %xBB0747B0.i, align 8
  %1508 = load i64, i64* %x25202160.i, align 8
  %1509 = load i64, i64* %a2.addr.i642, align 8
  %or42.i704 = or i64 %1508, %1509
  store i64 %or42.i704, i64* %x00.i654, align 8
  %1510 = load i64, i64* %x00.i654, align 8
  %1511 = load i64, i64* %xBB0747B0.i, align 8
  %xor43.i705 = xor i64 %1510, %1511
  store i64 %xor43.i705, i64* %x01.i655, align 8
  %1512 = load i64*, i64** %out1.addr.i647, align 8
  %1513 = load i64, i64* %1512, align 8
  %1514 = load i64, i64* %x01.i655, align 8
  %xor44.i706 = xor i64 %1513, %1514
  %1515 = load i64*, i64** %out1.addr.i647, align 8
  store i64 %xor44.i706, i64* %1515, align 8
  %1516 = load i64, i64* %x3333FFFF.i651, align 8
  %1517 = load i64, i64* %x7F75FFFF.i, align 8
  %xor45.i707 = xor i64 %1516, %1517
  store i64 %xor45.i707, i64* %x4C460000.i, align 8
  %1518 = load i64, i64* %x0AD99996.i, align 8
  %1519 = load i64, i64* %x4C460000.i, align 8
  %or46.i708 = or i64 %1518, %1519
  store i64 %or46.i708, i64* %x4EDF9996.i, align 8
  %1520 = load i64, i64* %x6391D07C.i, align 8
  %1521 = load i64, i64* %x4EDF9996.i, align 8
  %xor47.i709 = xor i64 %1520, %1521
  store i64 %xor47.i709, i64* %x2D4E49EA.i, align 8
  %1522 = load i64, i64* %x00FFFF00.i652, align 8
  %1523 = load i64, i64* %xBB0747B0.i, align 8
  %or48.i = or i64 %1522, %1523
  store i64 %or48.i, i64* %xBBFFFFB0.i, align 8
  %1524 = load i64, i64* %x2D4E49EA.i, align 8
  %1525 = load i64, i64* %xBBFFFFB0.i, align 8
  %xor49.i710 = xor i64 %1524, %1525
  store i64 %xor49.i710, i64* %x96B1B65A.i, align 8
  %1526 = load i64, i64* %x4A01CC93.i, align 8
  %1527 = load i64, i64* %a2.addr.i642, align 8
  %or50.i711 = or i64 %1526, %1527
  store i64 %or50.i711, i64* %x10.i656, align 8
  %1528 = load i64, i64* %x10.i656, align 8
  %1529 = load i64, i64* %x96B1B65A.i, align 8
  %xor51.i712 = xor i64 %1528, %1529
  store i64 %xor51.i712, i64* %x11.i657, align 8
  %1530 = load i64*, i64** %out2.addr.i648, align 8
  %1531 = load i64, i64* %1530, align 8
  %1532 = load i64, i64* %x11.i657, align 8
  %xor52.i713 = xor i64 %1531, %1532
  %1533 = load i64*, i64** %out2.addr.i648, align 8
  store i64 %xor52.i713, i64* %1533, align 8
  %1534 = load i64, i64* %a5.addr.i645, align 8
  %1535 = load i64, i64* %x5A0F5A0F.i, align 8
  %or53.i714 = or i64 %1534, %1535
  store i64 %or53.i714, i64* %x5AFF5AFF.i, align 8
  %1536 = load i64, i64* %x5AFF5AFF.i, align 8
  %1537 = load i64, i64* %x2D4E49EA.i, align 8
  %neg54.i715 = xor i64 %1537, -1
  %and55.i716 = and i64 %1536, %neg54.i715
  store i64 %and55.i716, i64* %x52B11215.i, align 8
  %1538 = load i64, i64* %x4A01CC93.i, align 8
  %1539 = load i64, i64* %x6391D07C.i, align 8
  %and56.i = and i64 %1538, %1539
  store i64 %and56.i, i64* %x4201C010.i, align 8
  %1540 = load i64, i64* %x52B11215.i, align 8
  %1541 = load i64, i64* %x4201C010.i, align 8
  %xor57.i717 = xor i64 %1540, %1541
  store i64 %xor57.i717, i64* %x10B0D205.i, align 8
  %1542 = load i64, i64* %x10B0D205.i, align 8
  %1543 = load i64, i64* %a2.addr.i642, align 8
  %or58.i718 = or i64 %1542, %1543
  store i64 %or58.i718, i64* %x30.i660, align 8
  %1544 = load i64, i64* %x30.i660, align 8
  %1545 = load i64, i64* %x0AD99996.i, align 8
  %xor59.i719 = xor i64 %1544, %1545
  store i64 %xor59.i719, i64* %x31.i661, align 8
  %1546 = load i64*, i64** %out4.addr.i650, align 8
  %1547 = load i64, i64* %1546, align 8
  %1548 = load i64, i64* %x31.i661, align 8
  %xor60.i720 = xor i64 %1547, %1548
  %1549 = load i64*, i64** %out4.addr.i650, align 8
  store i64 %xor60.i720, i64* %1549, align 8
  %1550 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 35), align 8
  %1551 = load i64**, i64*** %k, align 8
  %arrayidx161 = getelementptr inbounds i64*, i64** %1551, i64 54
  %1552 = load i64*, i64** %arrayidx161, align 8
  %arrayidx162 = getelementptr inbounds i64, i64* %1552, i64 0
  %1553 = load i64, i64* %arrayidx162, align 8
  %xor163 = xor i64 %1550, %1553
  %1554 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 36), align 8
  %1555 = load i64**, i64*** %k, align 8
  %arrayidx164 = getelementptr inbounds i64*, i64** %1555, i64 55
  %1556 = load i64*, i64** %arrayidx164, align 8
  %arrayidx165 = getelementptr inbounds i64, i64* %1556, i64 0
  %1557 = load i64, i64* %arrayidx165, align 8
  %xor166 = xor i64 %1554, %1557
  %1558 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 37), align 8
  %1559 = load i64**, i64*** %k, align 8
  %arrayidx167 = getelementptr inbounds i64*, i64** %1559, i64 56
  %1560 = load i64*, i64** %arrayidx167, align 8
  %arrayidx168 = getelementptr inbounds i64, i64* %1560, i64 0
  %1561 = load i64, i64* %arrayidx168, align 8
  %xor169 = xor i64 %1558, %1561
  %1562 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 38), align 8
  %1563 = load i64**, i64*** %k, align 8
  %arrayidx170 = getelementptr inbounds i64*, i64** %1563, i64 57
  %1564 = load i64*, i64** %arrayidx170, align 8
  %arrayidx171 = getelementptr inbounds i64, i64* %1564, i64 0
  %1565 = load i64, i64* %arrayidx171, align 8
  %xor172 = xor i64 %1562, %1565
  %1566 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 39), align 8
  %1567 = load i64**, i64*** %k, align 8
  %arrayidx173 = getelementptr inbounds i64*, i64** %1567, i64 58
  %1568 = load i64*, i64** %arrayidx173, align 8
  %arrayidx174 = getelementptr inbounds i64, i64* %1568, i64 0
  %1569 = load i64, i64* %arrayidx174, align 8
  %xor175 = xor i64 %1566, %1569
  %1570 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 40), align 8
  %1571 = load i64**, i64*** %k, align 8
  %arrayidx176 = getelementptr inbounds i64*, i64** %1571, i64 59
  %1572 = load i64*, i64** %arrayidx176, align 8
  %arrayidx177 = getelementptr inbounds i64, i64* %1572, i64 0
  %1573 = load i64, i64* %arrayidx177, align 8
  %xor178 = xor i64 %1570, %1573
  store i64 %xor163, i64* %a1.addr.i568, align 8
  store i64 %xor166, i64* %a2.addr.i569, align 8
  store i64 %xor169, i64* %a3.addr.i570, align 8
  store i64 %xor172, i64* %a4.addr.i571, align 8
  store i64 %xor175, i64* %a5.addr.i572, align 8
  store i64 %xor178, i64* %a6.addr.i573, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 12), i64** %out1.addr.i574, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 27), i64** %out2.addr.i575, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 1), i64** %out3.addr.i576, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 17), i64** %out4.addr.i577, align 8
  %1574 = load i64, i64* %a2.addr.i569, align 8
  %1575 = load i64, i64* %a5.addr.i572, align 8
  %xor.i587 = xor i64 %1574, %1575
  store i64 %xor.i587, i64* %x33CC33CC.i578, align 8
  %1576 = load i64, i64* %a1.addr.i568, align 8
  %1577 = load i64, i64* %a6.addr.i573, align 8
  %neg.i588 = xor i64 %1577, -1
  %and.i589 = and i64 %1576, %neg.i588
  store i64 %and.i589, i64* %x55550000.i, align 8
  %1578 = load i64, i64* %a5.addr.i572, align 8
  %1579 = load i64, i64* %x55550000.i, align 8
  %neg1.i590 = xor i64 %1579, -1
  %and2.i591 = and i64 %1578, %neg1.i590
  store i64 %and2.i591, i64* %x00AA00FF.i, align 8
  %1580 = load i64, i64* %a2.addr.i569, align 8
  %1581 = load i64, i64* %x00AA00FF.i, align 8
  %or.i592 = or i64 %1580, %1581
  store i64 %or.i592, i64* %x33BB33FF.i, align 8
  %1582 = load i64, i64* %x33CC33CC.i578, align 8
  %1583 = load i64, i64* %a6.addr.i573, align 8
  %neg3.i593 = xor i64 %1583, -1
  %and4.i594 = and i64 %1582, %neg3.i593
  store i64 %and4.i594, i64* %x33CC0000.i, align 8
  %1584 = load i64, i64* %a1.addr.i568, align 8
  %1585 = load i64, i64* %x33CC33CC.i578, align 8
  %and5.i595 = and i64 %1584, %1585
  store i64 %and5.i595, i64* %x11441144.i, align 8
  %1586 = load i64, i64* %a5.addr.i572, align 8
  %1587 = load i64, i64* %x11441144.i, align 8
  %xor6.i596 = xor i64 %1586, %1587
  store i64 %xor6.i596, i64* %x11BB11BB.i, align 8
  %1588 = load i64, i64* %x11BB11BB.i, align 8
  %1589 = load i64, i64* %x33CC0000.i, align 8
  %neg7.i597 = xor i64 %1589, -1
  %and8.i598 = and i64 %1588, %neg7.i597
  store i64 %and8.i598, i64* %x003311BB.i, align 8
  %1590 = load i64, i64* %a3.addr.i570, align 8
  %1591 = load i64, i64* %a6.addr.i573, align 8
  %and9.i599 = and i64 %1590, %1591
  store i64 %and9.i599, i64* %x00000F0F.i, align 8
  %1592 = load i64, i64* %x00AA00FF.i, align 8
  %1593 = load i64, i64* %x33CC0000.i, align 8
  %xor10.i600 = xor i64 %1592, %1593
  store i64 %xor10.i600, i64* %x336600FF.i, align 8
  %1594 = load i64, i64* %x33BB33FF.i, align 8
  %1595 = load i64, i64* %x336600FF.i, align 8
  %and11.i601 = and i64 %1594, %1595
  store i64 %and11.i601, i64* %x332200FF.i, align 8
  %1596 = load i64, i64* %x332200FF.i, align 8
  %1597 = load i64, i64* %x00000F0F.i, align 8
  %neg12.i602 = xor i64 %1597, -1
  %and13.i603 = and i64 %1596, %neg12.i602
  store i64 %and13.i603, i64* %x332200F0.i, align 8
  %1598 = load i64, i64* %a3.addr.i570, align 8
  %1599 = load i64, i64* %x332200FF.i, align 8
  %and14.i604 = and i64 %1598, %1599
  store i64 %and14.i604, i64* %x0302000F.i, align 8
  %1600 = load i64, i64* %a1.addr.i568, align 8
  %neg15.i605 = xor i64 %1600, -1
  store i64 %neg15.i605, i64* %xAAAAAAAA.i, align 8
  %1601 = load i64, i64* %x0302000F.i, align 8
  %1602 = load i64, i64* %xAAAAAAAA.i, align 8
  %xor16.i606 = xor i64 %1601, %1602
  store i64 %xor16.i606, i64* %xA9A8AAA5.i, align 8
  %1603 = load i64, i64* %a6.addr.i573, align 8
  %1604 = load i64, i64* %x33CC33CC.i578, align 8
  %xor17.i607 = xor i64 %1603, %1604
  store i64 %xor17.i607, i64* %x33CCCC33.i, align 8
  %1605 = load i64, i64* %x33CCCC33.i, align 8
  %1606 = load i64, i64* %x00000F0F.i, align 8
  %neg18.i608 = xor i64 %1606, -1
  %and19.i609 = and i64 %1605, %neg18.i608
  store i64 %and19.i609, i64* %x33CCC030.i, align 8
  %1607 = load i64, i64* %xA9A8AAA5.i, align 8
  %1608 = load i64, i64* %x33CCC030.i, align 8
  %xor20.i610 = xor i64 %1607, %1608
  store i64 %xor20.i610, i64* %x9A646A95.i, align 8
  %1609 = load i64, i64* %a4.addr.i571, align 8
  %1610 = load i64, i64* %x332200F0.i, align 8
  %neg21.i611 = xor i64 %1610, -1
  %and22.i612 = and i64 %1609, %neg21.i611
  store i64 %and22.i612, i64* %x10.i581, align 8
  %1611 = load i64, i64* %x10.i581, align 8
  %1612 = load i64, i64* %x9A646A95.i, align 8
  %xor23.i613 = xor i64 %1611, %1612
  store i64 %xor23.i613, i64* %x11.i582, align 8
  %1613 = load i64*, i64** %out2.addr.i575, align 8
  %1614 = load i64, i64* %1613, align 8
  %1615 = load i64, i64* %x11.i582, align 8
  %xor24.i614 = xor i64 %1614, %1615
  %1616 = load i64*, i64** %out2.addr.i575, align 8
  store i64 %xor24.i614, i64* %1616, align 8
  %1617 = load i64, i64* %a2.addr.i569, align 8
  %1618 = load i64, i64* %x33CCC030.i, align 8
  %neg25.i = xor i64 %1618, -1
  %and26.i = and i64 %1617, %neg25.i
  store i64 %and26.i, i64* %x00333303.i, align 8
  %1619 = load i64, i64* %x11BB11BB.i, align 8
  %1620 = load i64, i64* %x00333303.i, align 8
  %xor27.i615 = xor i64 %1619, %1620
  store i64 %xor27.i615, i64* %x118822B8.i, align 8
  %1621 = load i64, i64* %xA9A8AAA5.i, align 8
  %1622 = load i64, i64* %x118822B8.i, align 8
  %neg28.i616 = xor i64 %1622, -1
  %and29.i617 = and i64 %1621, %neg28.i616
  store i64 %and29.i617, i64* %xA8208805.i, align 8
  %1623 = load i64, i64* %a3.addr.i570, align 8
  %1624 = load i64, i64* %x33CCCC33.i, align 8
  %xor30.i618 = xor i64 %1623, %1624
  store i64 %xor30.i618, i64* %x3CC3C33C.i, align 8
  %1625 = load i64, i64* %xA8208805.i, align 8
  %1626 = load i64, i64* %x3CC3C33C.i, align 8
  %xor31.i619 = xor i64 %1625, %1626
  store i64 %xor31.i619, i64* %x94E34B39.i, align 8
  %1627 = load i64, i64* %x33BB33FF.i, align 8
  %1628 = load i64, i64* %a4.addr.i571, align 8
  %neg32.i620 = xor i64 %1628, -1
  %and33.i621 = and i64 %1627, %neg32.i620
  store i64 %and33.i621, i64* %x00.i579, align 8
  %1629 = load i64, i64* %x00.i579, align 8
  %1630 = load i64, i64* %x94E34B39.i, align 8
  %xor34.i622 = xor i64 %1629, %1630
  store i64 %xor34.i622, i64* %x01.i580, align 8
  %1631 = load i64*, i64** %out1.addr.i574, align 8
  %1632 = load i64, i64* %1631, align 8
  %1633 = load i64, i64* %x01.i580, align 8
  %xor35.i623 = xor i64 %1632, %1633
  %1634 = load i64*, i64** %out1.addr.i574, align 8
  store i64 %xor35.i623, i64* %1634, align 8
  %1635 = load i64, i64* %x0302000F.i, align 8
  %1636 = load i64, i64* %x00333303.i, align 8
  %xor36.i624 = xor i64 %1635, %1636
  store i64 %xor36.i624, i64* %x0331330C.i, align 8
  %1637 = load i64, i64* %x3CC3C33C.i, align 8
  %1638 = load i64, i64* %x0331330C.i, align 8
  %or37.i625 = or i64 %1637, %1638
  store i64 %or37.i625, i64* %x3FF3F33C.i, align 8
  %1639 = load i64, i64* %x33BB33FF.i, align 8
  %1640 = load i64, i64* %x9A646A95.i, align 8
  %xor38.i626 = xor i64 %1639, %1640
  store i64 %xor38.i626, i64* %xA9DF596A.i, align 8
  %1641 = load i64, i64* %x00000F0F.i, align 8
  %1642 = load i64, i64* %xA9DF596A.i, align 8
  %or39.i627 = or i64 %1641, %1642
  store i64 %or39.i627, i64* %xA9DF5F6F.i, align 8
  %1643 = load i64, i64* %x3FF3F33C.i, align 8
  %1644 = load i64, i64* %xA9DF5F6F.i, align 8
  %xor40.i628 = xor i64 %1643, %1644
  store i64 %xor40.i628, i64* %x962CAC53.i, align 8
  %1645 = load i64, i64* %x94E34B39.i, align 8
  %1646 = load i64, i64* %x0331330C.i, align 8
  %xor41.i629 = xor i64 %1645, %1646
  store i64 %xor41.i629, i64* %x97D27835.i, align 8
  %1647 = load i64, i64* %xA9DF5F6F.i, align 8
  %1648 = load i64, i64* %x97D27835.i, align 8
  %and42.i630 = and i64 %1647, %1648
  store i64 %and42.i630, i64* %x81D25825.i, align 8
  %1649 = load i64, i64* %a5.addr.i572, align 8
  %1650 = load i64, i64* %x81D25825.i, align 8
  %xor43.i631 = xor i64 %1649, %1650
  store i64 %xor43.i631, i64* %x812D58DA.i, align 8
  %1651 = load i64, i64* %x812D58DA.i, align 8
  %1652 = load i64, i64* %x33CC0000.i, align 8
  %neg44.i = xor i64 %1652, -1
  %and45.i632 = and i64 %1651, %neg44.i
  store i64 %and45.i632, i64* %x802158DA.i, align 8
  %1653 = load i64, i64* %x9A646A95.i, align 8
  %1654 = load i64, i64* %x802158DA.i, align 8
  %xor46.i633 = xor i64 %1653, %1654
  store i64 %xor46.i633, i64* %x1A45324F.i, align 8
  %1655 = load i64, i64* %x1A45324F.i, align 8
  %1656 = load i64, i64* %a4.addr.i571, align 8
  %or47.i634 = or i64 %1655, %1656
  store i64 %or47.i634, i64* %x20.i583, align 8
  %1657 = load i64, i64* %x20.i583, align 8
  %1658 = load i64, i64* %x962CAC53.i, align 8
  %xor48.i635 = xor i64 %1657, %1658
  store i64 %xor48.i635, i64* %x21.i584, align 8
  %1659 = load i64*, i64** %out3.addr.i576, align 8
  %1660 = load i64, i64* %1659, align 8
  %1661 = load i64, i64* %x21.i584, align 8
  %xor49.i636 = xor i64 %1660, %1661
  %1662 = load i64*, i64** %out3.addr.i576, align 8
  store i64 %xor49.i636, i64* %1662, align 8
  %1663 = load i64, i64* %x1A45324F.i, align 8
  %1664 = load i64, i64* %x118822B8.i, align 8
  %neg50.i637 = xor i64 %1664, -1
  %and51.i638 = and i64 %1663, %neg50.i637
  store i64 %and51.i638, i64* %x0A451047.i, align 8
  %1665 = load i64, i64* %x33CCCC33.i, align 8
  %1666 = load i64, i64* %xA9DF596A.i, align 8
  %or52.i = or i64 %1665, %1666
  store i64 %or52.i, i64* %xBBDFDD7B.i, align 8
  %1667 = load i64, i64* %x0A451047.i, align 8
  %1668 = load i64, i64* %xBBDFDD7B.i, align 8
  %xor53.i639 = xor i64 %1667, %1668
  store i64 %xor53.i639, i64* %xB19ACD3C.i, align 8
  %1669 = load i64, i64* %x003311BB.i, align 8
  %1670 = load i64, i64* %a4.addr.i571, align 8
  %or54.i = or i64 %1669, %1670
  store i64 %or54.i, i64* %x30.i585, align 8
  %1671 = load i64, i64* %x30.i585, align 8
  %1672 = load i64, i64* %xB19ACD3C.i, align 8
  %xor55.i = xor i64 %1671, %1672
  store i64 %xor55.i, i64* %x31.i586, align 8
  %1673 = load i64*, i64** %out4.addr.i577, align 8
  %1674 = load i64, i64* %1673, align 8
  %1675 = load i64, i64* %x31.i586, align 8
  %xor56.i640 = xor i64 %1674, %1675
  %1676 = load i64*, i64** %out4.addr.i577, align 8
  store i64 %xor56.i640, i64* %1676, align 8
  %1677 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 39), align 8
  %1678 = load i64**, i64*** %k, align 8
  %arrayidx179 = getelementptr inbounds i64*, i64** %1678, i64 60
  %1679 = load i64*, i64** %arrayidx179, align 8
  %arrayidx180 = getelementptr inbounds i64, i64* %1679, i64 0
  %1680 = load i64, i64* %arrayidx180, align 8
  %xor181 = xor i64 %1677, %1680
  %1681 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 40), align 8
  %1682 = load i64**, i64*** %k, align 8
  %arrayidx182 = getelementptr inbounds i64*, i64** %1682, i64 61
  %1683 = load i64*, i64** %arrayidx182, align 8
  %arrayidx183 = getelementptr inbounds i64, i64* %1683, i64 0
  %1684 = load i64, i64* %arrayidx183, align 8
  %xor184 = xor i64 %1681, %1684
  %1685 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 41), align 8
  %1686 = load i64**, i64*** %k, align 8
  %arrayidx185 = getelementptr inbounds i64*, i64** %1686, i64 62
  %1687 = load i64*, i64** %arrayidx185, align 8
  %arrayidx186 = getelementptr inbounds i64, i64* %1687, i64 0
  %1688 = load i64, i64* %arrayidx186, align 8
  %xor187 = xor i64 %1685, %1688
  %1689 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 42), align 8
  %1690 = load i64**, i64*** %k, align 8
  %arrayidx188 = getelementptr inbounds i64*, i64** %1690, i64 63
  %1691 = load i64*, i64** %arrayidx188, align 8
  %arrayidx189 = getelementptr inbounds i64, i64* %1691, i64 0
  %1692 = load i64, i64* %arrayidx189, align 8
  %xor190 = xor i64 %1689, %1692
  %1693 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 43), align 8
  %1694 = load i64**, i64*** %k, align 8
  %arrayidx191 = getelementptr inbounds i64*, i64** %1694, i64 64
  %1695 = load i64*, i64** %arrayidx191, align 8
  %arrayidx192 = getelementptr inbounds i64, i64* %1695, i64 0
  %1696 = load i64, i64* %arrayidx192, align 8
  %xor193 = xor i64 %1693, %1696
  %1697 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 44), align 8
  %1698 = load i64**, i64*** %k, align 8
  %arrayidx194 = getelementptr inbounds i64*, i64** %1698, i64 65
  %1699 = load i64*, i64** %arrayidx194, align 8
  %arrayidx195 = getelementptr inbounds i64, i64* %1699, i64 0
  %1700 = load i64, i64* %arrayidx195, align 8
  %xor196 = xor i64 %1697, %1700
  store i64 %xor181, i64* %a1.addr.i506, align 8
  store i64 %xor184, i64* %a2.addr.i507, align 8
  store i64 %xor187, i64* %a3.addr.i508, align 8
  store i64 %xor190, i64* %a4.addr.i509, align 8
  store i64 %xor193, i64* %a5.addr.i510, align 8
  store i64 %xor196, i64* %a6.addr.i511, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 23), i64** %out1.addr.i512, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 15), i64** %out2.addr.i513, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 29), i64** %out3.addr.i514, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 5), i64** %out4.addr.i515, align 8
  %1701 = load i64, i64* %a1.addr.i506, align 8
  %1702 = load i64, i64* %a2.addr.i507, align 8
  %neg.i525 = xor i64 %1702, -1
  %and.i526 = and i64 %1701, %neg.i525
  store i64 %and.i526, i64* %x44444444.i, align 8
  %1703 = load i64, i64* %a3.addr.i508, align 8
  %1704 = load i64, i64* %a6.addr.i511, align 8
  %xor.i527 = xor i64 %1703, %1704
  store i64 %xor.i527, i64* %x0F0FF0F0.i516, align 8
  %1705 = load i64, i64* %x44444444.i, align 8
  %1706 = load i64, i64* %x0F0FF0F0.i516, align 8
  %or.i528 = or i64 %1705, %1706
  store i64 %or.i528, i64* %x4F4FF4F4.i, align 8
  %1707 = load i64, i64* %a4.addr.i509, align 8
  %1708 = load i64, i64* %a6.addr.i511, align 8
  %xor1.i529 = xor i64 %1707, %1708
  store i64 %xor1.i529, i64* %x00FFFF00.i, align 8
  %1709 = load i64, i64* %x00FFFF00.i, align 8
  %1710 = load i64, i64* %a1.addr.i506, align 8
  %neg2.i = xor i64 %1710, -1
  %and3.i530 = and i64 %1709, %neg2.i
  store i64 %and3.i530, i64* %x00AAAA00.i, align 8
  %1711 = load i64, i64* %x4F4FF4F4.i, align 8
  %1712 = load i64, i64* %x00AAAA00.i, align 8
  %xor4.i = xor i64 %1711, %1712
  store i64 %xor4.i, i64* %x4FE55EF4.i, align 8
  %1713 = load i64, i64* %a2.addr.i507, align 8
  %1714 = load i64, i64* %x0F0FF0F0.i516, align 8
  %xor5.i531 = xor i64 %1713, %1714
  store i64 %xor5.i531, i64* %x3C3CC3C3.i, align 8
  %1715 = load i64, i64* %x3C3CC3C3.i, align 8
  %1716 = load i64, i64* %a6.addr.i511, align 8
  %neg6.i532 = xor i64 %1716, -1
  %and7.i533 = and i64 %1715, %neg6.i532
  store i64 %and7.i533, i64* %x3C3C0000.i, align 8
  %1717 = load i64, i64* %x4F4FF4F4.i, align 8
  %1718 = load i64, i64* %x3C3C0000.i, align 8
  %xor8.i534 = xor i64 %1717, %1718
  store i64 %xor8.i534, i64* %x7373F4F4.i, align 8
  %1719 = load i64, i64* %x4FE55EF4.i, align 8
  %1720 = load i64, i64* %x7373F4F4.i, align 8
  %neg9.i = xor i64 %1720, -1
  %and10.i535 = and i64 %1719, %neg9.i
  store i64 %and10.i535, i64* %x0C840A00.i, align 8
  %1721 = load i64, i64* %a6.addr.i511, align 8
  %1722 = load i64, i64* %x4FE55EF4.i, align 8
  %and11.i536 = and i64 %1721, %1722
  store i64 %and11.i536, i64* %x00005EF4.i, align 8
  %1723 = load i64, i64* %a4.addr.i509, align 8
  %1724 = load i64, i64* %x00005EF4.i, align 8
  %or12.i537 = or i64 %1723, %1724
  store i64 %or12.i537, i64* %x00FF5EFF.i, align 8
  %1725 = load i64, i64* %a1.addr.i506, align 8
  %1726 = load i64, i64* %x00FF5EFF.i, align 8
  %and13.i538 = and i64 %1725, %1726
  store i64 %and13.i538, i64* %x00555455.i, align 8
  %1727 = load i64, i64* %x3C3CC3C3.i, align 8
  %1728 = load i64, i64* %x00555455.i, align 8
  %xor14.i539 = xor i64 %1727, %1728
  store i64 %xor14.i539, i64* %x3C699796.i, align 8
  %1729 = load i64, i64* %x4FE55EF4.i, align 8
  %1730 = load i64, i64* %a5.addr.i510, align 8
  %neg15.i540 = xor i64 %1730, -1
  %and16.i541 = and i64 %1729, %neg15.i540
  store i64 %and16.i541, i64* %x30.i523, align 8
  %1731 = load i64, i64* %x30.i523, align 8
  %1732 = load i64, i64* %x3C699796.i, align 8
  %xor17.i542 = xor i64 %1731, %1732
  store i64 %xor17.i542, i64* %x31.i524, align 8
  %1733 = load i64*, i64** %out4.addr.i515, align 8
  %1734 = load i64, i64* %1733, align 8
  %1735 = load i64, i64* %x31.i524, align 8
  %xor18.i543 = xor i64 %1734, %1735
  %1736 = load i64*, i64** %out4.addr.i515, align 8
  store i64 %xor18.i543, i64* %1736, align 8
  %1737 = load i64, i64* %x0F0FF0F0.i516, align 8
  %1738 = load i64, i64* %x00FFFF00.i, align 8
  %and19.i544 = and i64 %1737, %1738
  store i64 %and19.i544, i64* %x000FF000.i, align 8
  %1739 = load i64, i64* %a1.addr.i506, align 8
  %1740 = load i64, i64* %a4.addr.i509, align 8
  %xor20.i545 = xor i64 %1739, %1740
  store i64 %xor20.i545, i64* %x55AA55AA.i, align 8
  %1741 = load i64, i64* %x7373F4F4.i, align 8
  %1742 = load i64, i64* %x55AA55AA.i, align 8
  %xor21.i546 = xor i64 %1741, %1742
  store i64 %xor21.i546, i64* %x26D9A15E.i, align 8
  %1743 = load i64, i64* %a3.addr.i508, align 8
  %1744 = load i64, i64* %x26D9A15E.i, align 8
  %or22.i = or i64 %1743, %1744
  store i64 %or22.i, i64* %x2FDFAF5F.i, align 8
  %1745 = load i64, i64* %x2FDFAF5F.i, align 8
  %1746 = load i64, i64* %x000FF000.i, align 8
  %neg23.i547 = xor i64 %1746, -1
  %and24.i548 = and i64 %1745, %neg23.i547
  store i64 %and24.i548, i64* %x2FD00F5F.i, align 8
  %1747 = load i64, i64* %x00AAAA00.i, align 8
  %1748 = load i64, i64* %x55AA55AA.i, align 8
  %or25.i = or i64 %1747, %1748
  store i64 %or25.i, i64* %x55AAFFAA.i, align 8
  %1749 = load i64, i64* %x3C699796.i, align 8
  %1750 = load i64, i64* %x55AAFFAA.i, align 8
  %neg26.i = xor i64 %1750, -1
  %and27.i = and i64 %1749, %neg26.i
  store i64 %and27.i, i64* %x28410014.i, align 8
  %1751 = load i64, i64* %a4.addr.i509, align 8
  %1752 = load i64, i64* %a6.addr.i511, align 8
  %and28.i549 = and i64 %1751, %1752
  store i64 %and28.i549, i64* %x000000FF.i, align 8
  %1753 = load i64, i64* %x000000FF.i, align 8
  %1754 = load i64, i64* %a2.addr.i507, align 8
  %neg29.i = xor i64 %1754, -1
  %and30.i = and i64 %1753, %neg29.i
  store i64 %and30.i, i64* %x000000CC.i, align 8
  %1755 = load i64, i64* %x28410014.i, align 8
  %1756 = load i64, i64* %x000000CC.i, align 8
  %xor31.i550 = xor i64 %1755, %1756
  store i64 %xor31.i550, i64* %x284100D8.i, align 8
  %1757 = load i64, i64* %x284100D8.i, align 8
  %1758 = load i64, i64* %a3.addr.i508, align 8
  %neg32.i = xor i64 %1758, -1
  %and33.i = and i64 %1757, %neg32.i
  store i64 %and33.i, i64* %x204000D0.i, align 8
  %1759 = load i64, i64* %x3C3CC3C3.i, align 8
  %1760 = load i64, i64* %x000000FF.i, align 8
  %or34.i551 = or i64 %1759, %1760
  store i64 %or34.i551, i64* %x3C3CC3FF.i, align 8
  %1761 = load i64, i64* %x3C3CC3FF.i, align 8
  %1762 = load i64, i64* %x204000D0.i, align 8
  %neg35.i = xor i64 %1762, -1
  %and36.i552 = and i64 %1761, %neg35.i
  store i64 %and36.i552, i64* %x1C3CC32F.i, align 8
  %1763 = load i64, i64* %a1.addr.i506, align 8
  %1764 = load i64, i64* %x1C3CC32F.i, align 8
  %xor37.i553 = xor i64 %1763, %1764
  store i64 %xor37.i553, i64* %x4969967A.i, align 8
  %1765 = load i64, i64* %x2FD00F5F.i, align 8
  %1766 = load i64, i64* %a5.addr.i510, align 8
  %and38.i554 = and i64 %1765, %1766
  store i64 %and38.i554, i64* %x10.i519, align 8
  %1767 = load i64, i64* %x10.i519, align 8
  %1768 = load i64, i64* %x4969967A.i, align 8
  %xor39.i555 = xor i64 %1767, %1768
  store i64 %xor39.i555, i64* %x11.i520, align 8
  %1769 = load i64*, i64** %out2.addr.i513, align 8
  %1770 = load i64, i64* %1769, align 8
  %1771 = load i64, i64* %x11.i520, align 8
  %xor40.i556 = xor i64 %1770, %1771
  %1772 = load i64*, i64** %out2.addr.i513, align 8
  store i64 %xor40.i556, i64* %1772, align 8
  %1773 = load i64, i64* %x4FE55EF4.i, align 8
  %1774 = load i64, i64* %a2.addr.i507, align 8
  %neg41.i557 = xor i64 %1774, -1
  %and42.i558 = and i64 %1773, %neg41.i557
  store i64 %and42.i558, i64* %x4CC44CC4.i, align 8
  %1775 = load i64, i64* %x4CC44CC4.i, align 8
  %1776 = load i64, i64* %a3.addr.i508, align 8
  %neg43.i = xor i64 %1776, -1
  %and44.i = and i64 %1775, %neg43.i
  store i64 %and44.i, i64* %x40C040C0.i, align 8
  %1777 = load i64, i64* %x3C3CC3C3.i, align 8
  %1778 = load i64, i64* %x55AAFFAA.i, align 8
  %xor45.i559 = xor i64 %1777, %1778
  store i64 %xor45.i559, i64* %x69963C69.i, align 8
  %1779 = load i64, i64* %x69963C69.i, align 8
  %neg46.i = xor i64 %1779, -1
  store i64 %neg46.i, i64* %x9669C396.i, align 8
  %1780 = load i64, i64* %x40C040C0.i, align 8
  %1781 = load i64, i64* %x9669C396.i, align 8
  %xor47.i560 = xor i64 %1780, %1781
  store i64 %xor47.i560, i64* %xD6A98356.i, align 8
  %1782 = load i64, i64* %a5.addr.i510, align 8
  %1783 = load i64, i64* %x0C840A00.i, align 8
  %neg48.i561 = xor i64 %1783, -1
  %and49.i = and i64 %1782, %neg48.i561
  store i64 %and49.i, i64* %x00.i517, align 8
  %1784 = load i64, i64* %x00.i517, align 8
  %1785 = load i64, i64* %xD6A98356.i, align 8
  %xor50.i562 = xor i64 %1784, %1785
  store i64 %xor50.i562, i64* %x01.i518, align 8
  %1786 = load i64*, i64** %out1.addr.i512, align 8
  %1787 = load i64, i64* %1786, align 8
  %1788 = load i64, i64* %x01.i518, align 8
  %xor51.i = xor i64 %1787, %1788
  %1789 = load i64*, i64** %out1.addr.i512, align 8
  store i64 %xor51.i, i64* %1789, align 8
  %1790 = load i64, i64* %a4.addr.i509, align 8
  %1791 = load i64, i64* %x0F0FF0F0.i516, align 8
  %and52.i563 = and i64 %1790, %1791
  store i64 %and52.i563, i64* %x000F00F0.i, align 8
  %1792 = load i64, i64* %x3C3CC3C3.i, align 8
  %1793 = load i64, i64* %xD6A98356.i, align 8
  %or53.i564 = or i64 %1792, %1793
  store i64 %or53.i564, i64* %xFEBDC3D7.i, align 8
  %1794 = load i64, i64* %xFEBDC3D7.i, align 8
  %1795 = load i64, i64* %x000F00F0.i, align 8
  %neg54.i = xor i64 %1795, -1
  %and55.i565 = and i64 %1794, %neg54.i
  store i64 %and55.i565, i64* %xFEB0C307.i, align 8
  %1796 = load i64, i64* %x00AAAA00.i, align 8
  %1797 = load i64, i64* %x4CC44CC4.i, align 8
  %or56.i566 = or i64 %1796, %1797
  store i64 %or56.i566, i64* %x4CEEEEC4.i, align 8
  %1798 = load i64, i64* %xFEB0C307.i, align 8
  %1799 = load i64, i64* %x4CEEEEC4.i, align 8
  %xor57.i567 = xor i64 %1798, %1799
  store i64 %xor57.i567, i64* %xB25E2DC3.i, align 8
  %1800 = load i64, i64* %x284100D8.i, align 8
  %1801 = load i64, i64* %a5.addr.i510, align 8
  %or58.i = or i64 %1800, %1801
  store i64 %or58.i, i64* %x20.i521, align 8
  %1802 = load i64, i64* %x20.i521, align 8
  %1803 = load i64, i64* %xB25E2DC3.i, align 8
  %xor59.i = xor i64 %1802, %1803
  store i64 %xor59.i, i64* %x21.i522, align 8
  %1804 = load i64*, i64** %out3.addr.i514, align 8
  %1805 = load i64, i64* %1804, align 8
  %1806 = load i64, i64* %x21.i522, align 8
  %xor60.i = xor i64 %1805, %1806
  %1807 = load i64*, i64** %out3.addr.i514, align 8
  store i64 %xor60.i, i64* %1807, align 8
  %1808 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 43), align 8
  %1809 = load i64**, i64*** %k, align 8
  %arrayidx197 = getelementptr inbounds i64*, i64** %1809, i64 66
  %1810 = load i64*, i64** %arrayidx197, align 8
  %arrayidx198 = getelementptr inbounds i64, i64* %1810, i64 0
  %1811 = load i64, i64* %arrayidx198, align 8
  %xor199 = xor i64 %1808, %1811
  %1812 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 44), align 8
  %1813 = load i64**, i64*** %k, align 8
  %arrayidx200 = getelementptr inbounds i64*, i64** %1813, i64 67
  %1814 = load i64*, i64** %arrayidx200, align 8
  %arrayidx201 = getelementptr inbounds i64, i64* %1814, i64 0
  %1815 = load i64, i64* %arrayidx201, align 8
  %xor202 = xor i64 %1812, %1815
  %1816 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 45), align 8
  %1817 = load i64**, i64*** %k, align 8
  %arrayidx203 = getelementptr inbounds i64*, i64** %1817, i64 68
  %1818 = load i64*, i64** %arrayidx203, align 8
  %arrayidx204 = getelementptr inbounds i64, i64* %1818, i64 0
  %1819 = load i64, i64* %arrayidx204, align 8
  %xor205 = xor i64 %1816, %1819
  %1820 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 46), align 8
  %1821 = load i64**, i64*** %k, align 8
  %arrayidx206 = getelementptr inbounds i64*, i64** %1821, i64 69
  %1822 = load i64*, i64** %arrayidx206, align 8
  %arrayidx207 = getelementptr inbounds i64, i64* %1822, i64 0
  %1823 = load i64, i64* %arrayidx207, align 8
  %xor208 = xor i64 %1820, %1823
  %1824 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 47), align 8
  %1825 = load i64**, i64*** %k, align 8
  %arrayidx209 = getelementptr inbounds i64*, i64** %1825, i64 70
  %1826 = load i64*, i64** %arrayidx209, align 8
  %arrayidx210 = getelementptr inbounds i64, i64* %1826, i64 0
  %1827 = load i64, i64* %arrayidx210, align 8
  %xor211 = xor i64 %1824, %1827
  %1828 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 48), align 8
  %1829 = load i64**, i64*** %k, align 8
  %arrayidx212 = getelementptr inbounds i64*, i64** %1829, i64 71
  %1830 = load i64*, i64** %arrayidx212, align 8
  %arrayidx213 = getelementptr inbounds i64, i64* %1830, i64 0
  %1831 = load i64, i64* %arrayidx213, align 8
  %xor214 = xor i64 %1828, %1831
  store i64 %xor199, i64* %a1.addr.i449, align 8
  store i64 %xor202, i64* %a2.addr.i450, align 8
  store i64 %xor205, i64* %a3.addr.i451, align 8
  store i64 %xor208, i64* %a4.addr.i452, align 8
  store i64 %xor211, i64* %a5.addr.i453, align 8
  store i64 %xor214, i64* %a6.addr.i454, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 25), i64** %out1.addr.i455, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 19), i64** %out2.addr.i456, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 9), i64** %out3.addr.i457, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 0), i64** %out4.addr.i458, align 8
  %1832 = load i64, i64* %a1.addr.i449, align 8
  %1833 = load i64, i64* %a3.addr.i451, align 8
  %xor.i469 = xor i64 %1832, %1833
  store i64 %xor.i469, i64* %x5A5A5A5A.i459, align 8
  %1834 = load i64, i64* %a3.addr.i451, align 8
  %1835 = load i64, i64* %a5.addr.i453, align 8
  %xor1.i470 = xor i64 %1834, %1835
  store i64 %xor1.i470, i64* %x0F0FF0F0.i, align 8
  %1836 = load i64, i64* %a2.addr.i450, align 8
  %1837 = load i64, i64* %a4.addr.i452, align 8
  %or.i471 = or i64 %1836, %1837
  store i64 %or.i471, i64* %x33FF33FF.i, align 8
  %1838 = load i64, i64* %a5.addr.i453, align 8
  %1839 = load i64, i64* %x33FF33FF.i, align 8
  %xor2.i472 = xor i64 %1838, %1839
  store i64 %xor2.i472, i64* %x33FFCC00.i, align 8
  %1840 = load i64, i64* %x0F0FF0F0.i, align 8
  %1841 = load i64, i64* %x33FFCC00.i, align 8
  %neg.i473 = xor i64 %1841, -1
  %and.i474 = and i64 %1840, %neg.i473
  store i64 %and.i474, i64* %x0C0030F0.i, align 8
  %1842 = load i64, i64* %x0F0FF0F0.i, align 8
  %1843 = load i64, i64* %a2.addr.i450, align 8
  %neg3.i475 = xor i64 %1843, -1
  %and4.i476 = and i64 %1842, %neg3.i475
  store i64 %and4.i476, i64* %x0C0CC0C0.i, align 8
  %1844 = load i64, i64* %a4.addr.i452, align 8
  %1845 = load i64, i64* %x0C0CC0C0.i, align 8
  %xor5.i477 = xor i64 %1844, %1845
  store i64 %xor5.i477, i64* %x0CF3C03F.i, align 8
  %1846 = load i64, i64* %x5A5A5A5A.i459, align 8
  %1847 = load i64, i64* %x0CF3C03F.i, align 8
  %or6.i = or i64 %1846, %1847
  store i64 %or6.i, i64* %x5EFBDA7F.i, align 8
  %1848 = load i64, i64* %x5EFBDA7F.i, align 8
  %1849 = load i64, i64* %x0C0030F0.i, align 8
  %neg7.i = xor i64 %1849, -1
  %and8.i = and i64 %1848, %neg7.i
  store i64 %and8.i, i64* %x52FBCA0F.i, align 8
  %1850 = load i64, i64* %a2.addr.i450, align 8
  %1851 = load i64, i64* %x52FBCA0F.i, align 8
  %xor9.i478 = xor i64 %1850, %1851
  store i64 %xor9.i478, i64* %x61C8F93C.i, align 8
  %1852 = load i64, i64* %x0CF3C03F.i, align 8
  %1853 = load i64, i64* %x61C8F93C.i, align 8
  %and10.i479 = and i64 %1852, %1853
  store i64 %and10.i479, i64* %x00C0C03C.i, align 8
  %1854 = load i64, i64* %x0F0FF0F0.i, align 8
  %1855 = load i64, i64* %x00C0C03C.i, align 8
  %neg11.i = xor i64 %1855, -1
  %and12.i480 = and i64 %1854, %neg11.i
  store i64 %and12.i480, i64* %x0F0F30C0.i, align 8
  %1856 = load i64, i64* %x5A5A5A5A.i459, align 8
  %1857 = load i64, i64* %x61C8F93C.i, align 8
  %xor13.i481 = xor i64 %1856, %1857
  store i64 %xor13.i481, i64* %x3B92A366.i, align 8
  %1858 = load i64, i64* %x3B92A366.i, align 8
  %1859 = load i64, i64* %x0F0F30C0.i, align 8
  %neg14.i = xor i64 %1859, -1
  %and15.i = and i64 %1858, %neg14.i
  store i64 %and15.i, i64* %x30908326.i, align 8
  %1860 = load i64, i64* %x0C0030F0.i, align 8
  %1861 = load i64, i64* %x30908326.i, align 8
  %xor16.i482 = xor i64 %1860, %1861
  store i64 %xor16.i482, i64* %x3C90B3D6.i, align 8
  %1862 = load i64, i64* %a2.addr.i450, align 8
  %1863 = load i64, i64* %a4.addr.i452, align 8
  %xor17.i483 = xor i64 %1862, %1863
  store i64 %xor17.i483, i64* %x33CC33CC.i460, align 8
  %1864 = load i64, i64* %a5.addr.i453, align 8
  %1865 = load i64, i64* %x0C0CC0C0.i, align 8
  %or18.i484 = or i64 %1864, %1865
  store i64 %or18.i484, i64* %x0C0CFFFF.i, align 8
  %1866 = load i64, i64* %x3B92A366.i, align 8
  %1867 = load i64, i64* %x0C0CFFFF.i, align 8
  %xor19.i485 = xor i64 %1866, %1867
  store i64 %xor19.i485, i64* %x379E5C99.i, align 8
  %1868 = load i64, i64* %x379E5C99.i, align 8
  %1869 = load i64, i64* %x33CC33CC.i460, align 8
  %neg20.i486 = xor i64 %1869, -1
  %and21.i487 = and i64 %1868, %neg20.i486
  store i64 %and21.i487, i64* %x04124C11.i, align 8
  %1870 = load i64, i64* %x52FBCA0F.i, align 8
  %1871 = load i64, i64* %x04124C11.i, align 8
  %xor22.i488 = xor i64 %1870, %1871
  store i64 %xor22.i488, i64* %x56E9861E.i, align 8
  %1872 = load i64, i64* %a6.addr.i454, align 8
  %1873 = load i64, i64* %x3C90B3D6.i, align 8
  %neg23.i489 = xor i64 %1873, -1
  %and24.i490 = and i64 %1872, %neg23.i489
  store i64 %and24.i490, i64* %x00.i461, align 8
  %1874 = load i64, i64* %x00.i461, align 8
  %1875 = load i64, i64* %x56E9861E.i, align 8
  %xor25.i491 = xor i64 %1874, %1875
  store i64 %xor25.i491, i64* %x01.i462, align 8
  %1876 = load i64*, i64** %out1.addr.i455, align 8
  %1877 = load i64, i64* %1876, align 8
  %1878 = load i64, i64* %x01.i462, align 8
  %xor26.i492 = xor i64 %1877, %1878
  %1879 = load i64*, i64** %out1.addr.i455, align 8
  store i64 %xor26.i492, i64* %1879, align 8
  %1880 = load i64, i64* %x56E9861E.i, align 8
  %neg27.i493 = xor i64 %1880, -1
  store i64 %neg27.i493, i64* %xA91679E1.i, align 8
  %1881 = load i64, i64* %x3C90B3D6.i, align 8
  %1882 = load i64, i64* %a6.addr.i454, align 8
  %neg28.i = xor i64 %1882, -1
  %and29.i = and i64 %1881, %neg28.i
  store i64 %and29.i, i64* %x10.i463, align 8
  %1883 = load i64, i64* %x10.i463, align 8
  %1884 = load i64, i64* %xA91679E1.i, align 8
  %xor30.i494 = xor i64 %1883, %1884
  store i64 %xor30.i494, i64* %x11.i464, align 8
  %1885 = load i64*, i64** %out2.addr.i456, align 8
  %1886 = load i64, i64* %1885, align 8
  %1887 = load i64, i64* %x11.i464, align 8
  %xor31.i495 = xor i64 %1886, %1887
  %1888 = load i64*, i64** %out2.addr.i456, align 8
  store i64 %xor31.i495, i64* %1888, align 8
  %1889 = load i64, i64* %x3C90B3D6.i, align 8
  %1890 = load i64, i64* %xA91679E1.i, align 8
  %xor32.i496 = xor i64 %1889, %1890
  store i64 %xor32.i496, i64* %x9586CA37.i, align 8
  %1891 = load i64, i64* %x9586CA37.i, align 8
  %1892 = load i64, i64* %x33CC33CC.i460, align 8
  %neg33.i497 = xor i64 %1892, -1
  %and34.i498 = and i64 %1891, %neg33.i497
  store i64 %and34.i498, i64* %x8402C833.i, align 8
  %1893 = load i64, i64* %x00C0C03C.i, align 8
  %1894 = load i64, i64* %x8402C833.i, align 8
  %or35.i499 = or i64 %1893, %1894
  store i64 %or35.i499, i64* %x84C2C83F.i, align 8
  %1895 = load i64, i64* %x379E5C99.i, align 8
  %1896 = load i64, i64* %x84C2C83F.i, align 8
  %xor36.i500 = xor i64 %1895, %1896
  store i64 %xor36.i500, i64* %xB35C94A6.i, align 8
  %1897 = load i64, i64* %x61C8F93C.i, align 8
  %1898 = load i64, i64* %a6.addr.i454, align 8
  %or37.i = or i64 %1897, %1898
  store i64 %or37.i, i64* %x20.i465, align 8
  %1899 = load i64, i64* %x20.i465, align 8
  %1900 = load i64, i64* %xB35C94A6.i, align 8
  %xor38.i501 = xor i64 %1899, %1900
  store i64 %xor38.i501, i64* %x21.i466, align 8
  %1901 = load i64*, i64** %out3.addr.i457, align 8
  %1902 = load i64, i64* %1901, align 8
  %1903 = load i64, i64* %x21.i466, align 8
  %xor39.i502 = xor i64 %1902, %1903
  %1904 = load i64*, i64** %out3.addr.i457, align 8
  store i64 %xor39.i502, i64* %1904, align 8
  %1905 = load i64, i64* %a6.addr.i454, align 8
  %1906 = load i64, i64* %x61C8F93C.i, align 8
  %and40.i503 = and i64 %1905, %1906
  store i64 %and40.i503, i64* %x30.i467, align 8
  %1907 = load i64, i64* %x30.i467, align 8
  %1908 = load i64, i64* %xB35C94A6.i, align 8
  %xor41.i504 = xor i64 %1907, %1908
  store i64 %xor41.i504, i64* %x31.i468, align 8
  %1909 = load i64*, i64** %out4.addr.i458, align 8
  %1910 = load i64, i64* %1909, align 8
  %1911 = load i64, i64* %x31.i468, align 8
  %xor42.i505 = xor i64 %1910, %1911
  %1912 = load i64*, i64** %out4.addr.i458, align 8
  store i64 %xor42.i505, i64* %1912, align 8
  %1913 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 47), align 8
  %1914 = load i64**, i64*** %k, align 8
  %arrayidx215 = getelementptr inbounds i64*, i64** %1914, i64 72
  %1915 = load i64*, i64** %arrayidx215, align 8
  %arrayidx216 = getelementptr inbounds i64, i64* %1915, i64 0
  %1916 = load i64, i64* %arrayidx216, align 8
  %xor217 = xor i64 %1913, %1916
  %1917 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 48), align 8
  %1918 = load i64**, i64*** %k, align 8
  %arrayidx218 = getelementptr inbounds i64*, i64** %1918, i64 73
  %1919 = load i64*, i64** %arrayidx218, align 8
  %arrayidx219 = getelementptr inbounds i64, i64* %1919, i64 0
  %1920 = load i64, i64* %arrayidx219, align 8
  %xor220 = xor i64 %1917, %1920
  %1921 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 49), align 8
  %1922 = load i64**, i64*** %k, align 8
  %arrayidx221 = getelementptr inbounds i64*, i64** %1922, i64 74
  %1923 = load i64*, i64** %arrayidx221, align 8
  %arrayidx222 = getelementptr inbounds i64, i64* %1923, i64 0
  %1924 = load i64, i64* %arrayidx222, align 8
  %xor223 = xor i64 %1921, %1924
  %1925 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 50), align 8
  %1926 = load i64**, i64*** %k, align 8
  %arrayidx224 = getelementptr inbounds i64*, i64** %1926, i64 75
  %1927 = load i64*, i64** %arrayidx224, align 8
  %arrayidx225 = getelementptr inbounds i64, i64* %1927, i64 0
  %1928 = load i64, i64* %arrayidx225, align 8
  %xor226 = xor i64 %1925, %1928
  %1929 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 51), align 8
  %1930 = load i64**, i64*** %k, align 8
  %arrayidx227 = getelementptr inbounds i64*, i64** %1930, i64 76
  %1931 = load i64*, i64** %arrayidx227, align 8
  %arrayidx228 = getelementptr inbounds i64, i64* %1931, i64 0
  %1932 = load i64, i64* %arrayidx228, align 8
  %xor229 = xor i64 %1929, %1932
  %1933 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 52), align 8
  %1934 = load i64**, i64*** %k, align 8
  %arrayidx230 = getelementptr inbounds i64*, i64** %1934, i64 77
  %1935 = load i64*, i64** %arrayidx230, align 8
  %arrayidx231 = getelementptr inbounds i64, i64* %1935, i64 0
  %1936 = load i64, i64* %arrayidx231, align 8
  %xor232 = xor i64 %1933, %1936
  store i64 %xor217, i64* %a1.addr.i394, align 8
  store i64 %xor220, i64* %a2.addr.i395, align 8
  store i64 %xor223, i64* %a3.addr.i396, align 8
  store i64 %xor226, i64* %a4.addr.i397, align 8
  store i64 %xor229, i64* %a5.addr.i398, align 8
  store i64 %xor232, i64* %a6.addr.i399, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 7), i64** %out1.addr.i400, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 13), i64** %out2.addr.i401, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 24), i64** %out3.addr.i402, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 2), i64** %out4.addr.i403, align 8
  %1937 = load i64, i64* %a1.addr.i394, align 8
  %1938 = load i64, i64* %a3.addr.i396, align 8
  %or.i412 = or i64 %1937, %1938
  store i64 %or.i412, i64* %x77777777.i, align 8
  %1939 = load i64, i64* %x77777777.i, align 8
  %1940 = load i64, i64* %a6.addr.i399, align 8
  %neg.i413 = xor i64 %1940, -1
  %and.i414 = and i64 %1939, %neg.i413
  store i64 %and.i414, i64* %x77770000.i, align 8
  %1941 = load i64, i64* %a1.addr.i394, align 8
  %1942 = load i64, i64* %x77770000.i, align 8
  %xor.i415 = xor i64 %1941, %1942
  store i64 %xor.i415, i64* %x22225555.i, align 8
  %1943 = load i64, i64* %a3.addr.i396, align 8
  %1944 = load i64, i64* %x22225555.i, align 8
  %xor1.i416 = xor i64 %1943, %1944
  store i64 %xor1.i416, i64* %x11116666.i, align 8
  %1945 = load i64, i64* %a4.addr.i397, align 8
  %1946 = load i64, i64* %x11116666.i, align 8
  %or2.i = or i64 %1945, %1946
  store i64 %or2.i, i64* %x1F1F6F6F.i, align 8
  %1947 = load i64, i64* %x77770000.i, align 8
  %1948 = load i64, i64* %a4.addr.i397, align 8
  %neg3.i = xor i64 %1948, -1
  %and4.i417 = and i64 %1947, %neg3.i
  store i64 %and4.i417, i64* %x70700000.i, align 8
  %1949 = load i64, i64* %a3.addr.i396, align 8
  %1950 = load i64, i64* %x70700000.i, align 8
  %xor5.i418 = xor i64 %1949, %1950
  store i64 %xor5.i418, i64* %x43433333.i, align 8
  %1951 = load i64, i64* %a5.addr.i398, align 8
  %1952 = load i64, i64* %x43433333.i, align 8
  %and6.i = and i64 %1951, %1952
  store i64 %and6.i, i64* %x00430033.i, align 8
  %1953 = load i64, i64* %a1.addr.i394, align 8
  %1954 = load i64, i64* %x11116666.i, align 8
  %or7.i419 = or i64 %1953, %1954
  store i64 %or7.i419, i64* %x55557777.i, align 8
  %1955 = load i64, i64* %x00430033.i, align 8
  %1956 = load i64, i64* %x55557777.i, align 8
  %xor8.i420 = xor i64 %1955, %1956
  store i64 %xor8.i420, i64* %x55167744.i, align 8
  %1957 = load i64, i64* %a4.addr.i397, align 8
  %1958 = load i64, i64* %x55167744.i, align 8
  %xor9.i = xor i64 %1957, %1958
  store i64 %xor9.i, i64* %x5A19784B.i, align 8
  %1959 = load i64, i64* %a6.addr.i399, align 8
  %1960 = load i64, i64* %x5A19784B.i, align 8
  %xor10.i421 = xor i64 %1959, %1960
  store i64 %xor10.i421, i64* %x5A1987B4.i, align 8
  %1961 = load i64, i64* %x22225555.i, align 8
  %1962 = load i64, i64* %x5A1987B4.i, align 8
  %or11.i = or i64 %1961, %1962
  store i64 %or11.i, i64* %x7A3BD7F5.i, align 8
  %1963 = load i64, i64* %a5.addr.i398, align 8
  %1964 = load i64, i64* %x7A3BD7F5.i, align 8
  %and12.i = and i64 %1963, %1964
  store i64 %and12.i, i64* %x003B00F5.i, align 8
  %1965 = load i64, i64* %x22225555.i, align 8
  %1966 = load i64, i64* %x003B00F5.i, align 8
  %xor13.i422 = xor i64 %1965, %1966
  store i64 %xor13.i422, i64* %x221955A0.i, align 8
  %1967 = load i64, i64* %a4.addr.i397, align 8
  %1968 = load i64, i64* %x55557777.i, align 8
  %and14.i423 = and i64 %1967, %1968
  store i64 %and14.i423, i64* %x05050707.i, align 8
  %1969 = load i64, i64* %x221955A0.i, align 8
  %1970 = load i64, i64* %x05050707.i, align 8
  %xor15.i424 = xor i64 %1969, %1970
  store i64 %xor15.i424, i64* %x271C52A7.i, align 8
  %1971 = load i64, i64* %x7A3BD7F5.i, align 8
  %1972 = load i64, i64* %a1.addr.i394, align 8
  %neg16.i = xor i64 %1972, -1
  %and17.i = and i64 %1971, %neg16.i
  store i64 %and17.i, i64* %x2A2A82A0.i, align 8
  %1973 = load i64, i64* %x43433333.i, align 8
  %1974 = load i64, i64* %x2A2A82A0.i, align 8
  %xor18.i425 = xor i64 %1973, %1974
  store i64 %xor18.i425, i64* %x6969B193.i, align 8
  %1975 = load i64, i64* %a5.addr.i398, align 8
  %1976 = load i64, i64* %x1F1F6F6F.i, align 8
  %xor19.i = xor i64 %1975, %1976
  store i64 %xor19.i, i64* %x1FE06F90.i, align 8
  %1977 = load i64, i64* %x1FE06F90.i, align 8
  %1978 = load i64, i64* %x6969B193.i, align 8
  %neg20.i426 = xor i64 %1978, -1
  %and21.i427 = and i64 %1977, %neg20.i426
  store i64 %and21.i427, i64* %x16804E00.i, align 8
  %1979 = load i64, i64* %x16804E00.i, align 8
  %neg22.i = xor i64 %1979, -1
  store i64 %neg22.i, i64* %xE97FB1FF.i, align 8
  %1980 = load i64, i64* %xE97FB1FF.i, align 8
  %1981 = load i64, i64* %a2.addr.i395, align 8
  %neg23.i = xor i64 %1981, -1
  %and24.i = and i64 %1980, %neg23.i
  store i64 %and24.i, i64* %x20.i408, align 8
  %1982 = load i64, i64* %x20.i408, align 8
  %1983 = load i64, i64* %x5A19784B.i, align 8
  %xor25.i428 = xor i64 %1982, %1983
  store i64 %xor25.i428, i64* %x21.i409, align 8
  %1984 = load i64*, i64** %out3.addr.i402, align 8
  %1985 = load i64, i64* %1984, align 8
  %1986 = load i64, i64* %x21.i409, align 8
  %xor26.i429 = xor i64 %1985, %1986
  %1987 = load i64*, i64** %out3.addr.i402, align 8
  store i64 %xor26.i429, i64* %1987, align 8
  %1988 = load i64, i64* %x43433333.i, align 8
  %1989 = load i64, i64* %x003B00F5.i, align 8
  %neg27.i430 = xor i64 %1989, -1
  %and28.i431 = and i64 %1988, %neg27.i430
  store i64 %and28.i431, i64* %x43403302.i, align 8
  %1990 = load i64, i64* %x2A2A82A0.i, align 8
  %1991 = load i64, i64* %x1FE06F90.i, align 8
  %xor29.i432 = xor i64 %1990, %1991
  store i64 %xor29.i432, i64* %x35CAED30.i, align 8
  %1992 = load i64, i64* %x271C52A7.i, align 8
  %1993 = load i64, i64* %x35CAED30.i, align 8
  %or30.i = or i64 %1992, %1993
  store i64 %or30.i, i64* %x37DEFFB7.i, align 8
  %1994 = load i64, i64* %x37DEFFB7.i, align 8
  %1995 = load i64, i64* %x43403302.i, align 8
  %neg31.i = xor i64 %1995, -1
  %and32.i = and i64 %1994, %neg31.i
  store i64 %and32.i, i64* %x349ECCB5.i, align 8
  %1996 = load i64, i64* %x1F1F6F6F.i, align 8
  %1997 = load i64, i64* %x349ECCB5.i, align 8
  %neg33.i = xor i64 %1997, -1
  %and34.i = and i64 %1996, %neg33.i
  store i64 %and34.i, i64* %x0B01234A.i, align 8
  %1998 = load i64, i64* %x5A1987B4.i, align 8
  %1999 = load i64, i64* %x349ECCB5.i, align 8
  %and35.i433 = and i64 %1998, %1999
  store i64 %and35.i433, i64* %x101884B4.i, align 8
  %2000 = load i64, i64* %x1FE06F90.i, align 8
  %2001 = load i64, i64* %x101884B4.i, align 8
  %xor36.i434 = xor i64 %2000, %2001
  store i64 %xor36.i434, i64* %x0FF8EB24.i, align 8
  %2002 = load i64, i64* %x43433333.i, align 8
  %2003 = load i64, i64* %x55557777.i, align 8
  %and37.i435 = and i64 %2002, %2003
  store i64 %and37.i435, i64* %x41413333.i, align 8
  %2004 = load i64, i64* %x0FF8EB24.i, align 8
  %2005 = load i64, i64* %x41413333.i, align 8
  %or38.i = or i64 %2004, %2005
  store i64 %or38.i, i64* %x4FF9FB37.i, align 8
  %2006 = load i64, i64* %x003B00F5.i, align 8
  %2007 = load i64, i64* %x4FF9FB37.i, align 8
  %xor39.i436 = xor i64 %2006, %2007
  store i64 %xor39.i436, i64* %x4FC2FBC2.i, align 8
  %2008 = load i64, i64* %x4FC2FBC2.i, align 8
  %2009 = load i64, i64* %a2.addr.i395, align 8
  %and40.i = and i64 %2008, %2009
  store i64 %and40.i, i64* %x30.i410, align 8
  %2010 = load i64, i64* %x30.i410, align 8
  %2011 = load i64, i64* %x271C52A7.i, align 8
  %xor41.i437 = xor i64 %2010, %2011
  store i64 %xor41.i437, i64* %x31.i411, align 8
  %2012 = load i64*, i64** %out4.addr.i403, align 8
  %2013 = load i64, i64* %2012, align 8
  %2014 = load i64, i64* %x31.i411, align 8
  %xor42.i = xor i64 %2013, %2014
  %2015 = load i64*, i64** %out4.addr.i403, align 8
  store i64 %xor42.i, i64* %2015, align 8
  %2016 = load i64, i64* %a1.addr.i394, align 8
  %2017 = load i64, i64* %x77777777.i, align 8
  %xor43.i = xor i64 %2016, %2017
  store i64 %xor43.i, i64* %x22222222.i, align 8
  %2018 = load i64, i64* %x349ECCB5.i, align 8
  %2019 = load i64, i64* %x22222222.i, align 8
  %xor44.i438 = xor i64 %2018, %2019
  store i64 %xor44.i438, i64* %x16BCEE97.i, align 8
  %2020 = load i64, i64* %a4.addr.i397, align 8
  %2021 = load i64, i64* %x0FF8EB24.i, align 8
  %and45.i439 = and i64 %2020, %2021
  store i64 %and45.i439, i64* %x0F080B04.i, align 8
  %2022 = load i64, i64* %x16BCEE97.i, align 8
  %2023 = load i64, i64* %x0F080B04.i, align 8
  %xor46.i440 = xor i64 %2022, %2023
  store i64 %xor46.i440, i64* %x19B4E593.i, align 8
  %2024 = load i64, i64* %x0B01234A.i, align 8
  %2025 = load i64, i64* %a2.addr.i395, align 8
  %or47.i441 = or i64 %2024, %2025
  store i64 %or47.i441, i64* %x00.i404, align 8
  %2026 = load i64, i64* %x00.i404, align 8
  %2027 = load i64, i64* %x19B4E593.i, align 8
  %xor48.i442 = xor i64 %2026, %2027
  store i64 %xor48.i442, i64* %x01.i405, align 8
  %2028 = load i64*, i64** %out1.addr.i400, align 8
  %2029 = load i64, i64* %2028, align 8
  %2030 = load i64, i64* %x01.i405, align 8
  %xor49.i443 = xor i64 %2029, %2030
  %2031 = load i64*, i64** %out1.addr.i400, align 8
  store i64 %xor49.i443, i64* %2031, align 8
  %2032 = load i64, i64* %x1F1F6F6F.i, align 8
  %2033 = load i64, i64* %x43433333.i, align 8
  %xor50.i444 = xor i64 %2032, %2033
  store i64 %xor50.i444, i64* %x5C5C5C5C.i, align 8
  %2034 = load i64, i64* %x5C5C5C5C.i, align 8
  %2035 = load i64, i64* %x19B4E593.i, align 8
  %neg51.i445 = xor i64 %2035, -1
  %and52.i446 = and i64 %2034, %neg51.i445
  store i64 %and52.i446, i64* %x4448184C.i, align 8
  %2036 = load i64, i64* %x22225555.i, align 8
  %2037 = load i64, i64* %x0FF8EB24.i, align 8
  %xor53.i447 = xor i64 %2036, %2037
  store i64 %xor53.i447, i64* %x2DDABE71.i, align 8
  %2038 = load i64, i64* %x4448184C.i, align 8
  %2039 = load i64, i64* %x2DDABE71.i, align 8
  %xor54.i448 = xor i64 %2038, %2039
  store i64 %xor54.i448, i64* %x6992A63D.i, align 8
  %2040 = load i64, i64* %x1F1F6F6F.i, align 8
  %2041 = load i64, i64* %a2.addr.i395, align 8
  %and55.i = and i64 %2040, %2041
  store i64 %and55.i, i64* %x10.i406, align 8
  %2042 = load i64, i64* %x10.i406, align 8
  %2043 = load i64, i64* %x6992A63D.i, align 8
  %xor56.i = xor i64 %2042, %2043
  store i64 %xor56.i, i64* %x11.i407, align 8
  %2044 = load i64*, i64** %out2.addr.i401, align 8
  %2045 = load i64, i64* %2044, align 8
  %2046 = load i64, i64* %x11.i407, align 8
  %xor57.i = xor i64 %2045, %2046
  %2047 = load i64*, i64** %out2.addr.i401, align 8
  store i64 %xor57.i, i64* %2047, align 8
  %2048 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 51), align 8
  %2049 = load i64**, i64*** %k, align 8
  %arrayidx233 = getelementptr inbounds i64*, i64** %2049, i64 78
  %2050 = load i64*, i64** %arrayidx233, align 8
  %arrayidx234 = getelementptr inbounds i64, i64* %2050, i64 0
  %2051 = load i64, i64* %arrayidx234, align 8
  %xor235 = xor i64 %2048, %2051
  %2052 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 52), align 8
  %2053 = load i64**, i64*** %k, align 8
  %arrayidx236 = getelementptr inbounds i64*, i64** %2053, i64 79
  %2054 = load i64*, i64** %arrayidx236, align 8
  %arrayidx237 = getelementptr inbounds i64, i64* %2054, i64 0
  %2055 = load i64, i64* %arrayidx237, align 8
  %xor238 = xor i64 %2052, %2055
  %2056 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 53), align 8
  %2057 = load i64**, i64*** %k, align 8
  %arrayidx239 = getelementptr inbounds i64*, i64** %2057, i64 80
  %2058 = load i64*, i64** %arrayidx239, align 8
  %arrayidx240 = getelementptr inbounds i64, i64* %2058, i64 0
  %2059 = load i64, i64* %arrayidx240, align 8
  %xor241 = xor i64 %2056, %2059
  %2060 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 54), align 8
  %2061 = load i64**, i64*** %k, align 8
  %arrayidx242 = getelementptr inbounds i64*, i64** %2061, i64 81
  %2062 = load i64*, i64** %arrayidx242, align 8
  %arrayidx243 = getelementptr inbounds i64, i64* %2062, i64 0
  %2063 = load i64, i64* %arrayidx243, align 8
  %xor244 = xor i64 %2060, %2063
  %2064 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 55), align 8
  %2065 = load i64**, i64*** %k, align 8
  %arrayidx245 = getelementptr inbounds i64*, i64** %2065, i64 82
  %2066 = load i64*, i64** %arrayidx245, align 8
  %arrayidx246 = getelementptr inbounds i64, i64* %2066, i64 0
  %2067 = load i64, i64* %arrayidx246, align 8
  %xor247 = xor i64 %2064, %2067
  %2068 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 56), align 8
  %2069 = load i64**, i64*** %k, align 8
  %arrayidx248 = getelementptr inbounds i64*, i64** %2069, i64 83
  %2070 = load i64*, i64** %arrayidx248, align 8
  %arrayidx249 = getelementptr inbounds i64, i64* %2070, i64 0
  %2071 = load i64, i64* %arrayidx249, align 8
  %xor250 = xor i64 %2068, %2071
  store i64 %xor235, i64* %a1.addr.i337, align 8
  store i64 %xor238, i64* %a2.addr.i338, align 8
  store i64 %xor241, i64* %a3.addr.i339, align 8
  store i64 %xor244, i64* %a4.addr.i340, align 8
  store i64 %xor247, i64* %a5.addr.i341, align 8
  store i64 %xor250, i64* %a6.addr.i342, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 3), i64** %out1.addr.i343, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 28), i64** %out2.addr.i344, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 10), i64** %out3.addr.i345, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 18), i64** %out4.addr.i346, align 8
  %2072 = load i64, i64* %a2.addr.i338, align 8
  %2073 = load i64, i64* %a5.addr.i341, align 8
  %xor.i355 = xor i64 %2072, %2073
  store i64 %xor.i355, i64* %x33CC33CC.i, align 8
  %2074 = load i64, i64* %a2.addr.i338, align 8
  %2075 = load i64, i64* %a6.addr.i342, align 8
  %or.i356 = or i64 %2074, %2075
  store i64 %or.i356, i64* %x3333FFFF.i, align 8
  %2076 = load i64, i64* %a1.addr.i337, align 8
  %2077 = load i64, i64* %x3333FFFF.i, align 8
  %and.i357 = and i64 %2076, %2077
  store i64 %and.i357, i64* %x11115555.i, align 8
  %2078 = load i64, i64* %x33CC33CC.i, align 8
  %2079 = load i64, i64* %x11115555.i, align 8
  %xor1.i358 = xor i64 %2078, %2079
  store i64 %xor1.i358, i64* %x22DD6699.i, align 8
  %2080 = load i64, i64* %a6.addr.i342, align 8
  %2081 = load i64, i64* %x22DD6699.i, align 8
  %xor2.i = xor i64 %2080, %2081
  store i64 %xor2.i, i64* %x22DD9966.i, align 8
  %2082 = load i64, i64* %a5.addr.i341, align 8
  %2083 = load i64, i64* %x22DD9966.i, align 8
  %neg.i359 = xor i64 %2083, -1
  %and3.i360 = and i64 %2082, %neg.i359
  store i64 %and3.i360, i64* %x00220099.i, align 8
  %2084 = load i64, i64* %a1.addr.i337, align 8
  %2085 = load i64, i64* %x22DD9966.i, align 8
  %and4.i361 = and i64 %2084, %2085
  store i64 %and4.i361, i64* %x00551144.i, align 8
  %2086 = load i64, i64* %a2.addr.i338, align 8
  %2087 = load i64, i64* %x00551144.i, align 8
  %xor5.i = xor i64 %2086, %2087
  store i64 %xor5.i, i64* %x33662277.i, align 8
  %2088 = load i64, i64* %a1.addr.i337, align 8
  %2089 = load i64, i64* %a3.addr.i339, align 8
  %xor6.i362 = xor i64 %2088, %2089
  store i64 %xor6.i362, i64* %x5A5A5A5A.i, align 8
  %2090 = load i64, i64* %x33662277.i, align 8
  %2091 = load i64, i64* %x5A5A5A5A.i, align 8
  %or7.i = or i64 %2090, %2091
  store i64 %or7.i, i64* %x7B7E7A7F.i, align 8
  %2092 = load i64, i64* %x22DD6699.i, align 8
  %2093 = load i64, i64* %x7B7E7A7F.i, align 8
  %xor8.i363 = xor i64 %2092, %2093
  store i64 %xor8.i363, i64* %x59A31CE6.i, align 8
  %2094 = load i64, i64* %a3.addr.i339, align 8
  %2095 = load i64, i64* %x59A31CE6.i, align 8
  %and9.i364 = and i64 %2094, %2095
  store i64 %and9.i364, i64* %x09030C06.i, align 8
  %2096 = load i64, i64* %x09030C06.i, align 8
  %2097 = load i64, i64* %a6.addr.i342, align 8
  %neg10.i = xor i64 %2097, -1
  %and11.i365 = and i64 %2096, %neg10.i
  store i64 %and11.i365, i64* %x09030000.i, align 8
  %2098 = load i64, i64* %x00220099.i, align 8
  %2099 = load i64, i64* %x33662277.i, align 8
  %or12.i366 = or i64 %2098, %2099
  store i64 %or12.i366, i64* %x336622FF.i, align 8
  %2100 = load i64, i64* %x09030000.i, align 8
  %2101 = load i64, i64* %x336622FF.i, align 8
  %xor13.i = xor i64 %2100, %2101
  store i64 %xor13.i, i64* %x3A6522FF.i, align 8
  %2102 = load i64, i64* %x3A6522FF.i, align 8
  %2103 = load i64, i64* %a4.addr.i340, align 8
  %and14.i = and i64 %2102, %2103
  store i64 %and14.i, i64* %x30.i353, align 8
  %2104 = load i64, i64* %x30.i353, align 8
  %2105 = load i64, i64* %x59A31CE6.i, align 8
  %xor15.i367 = xor i64 %2104, %2105
  store i64 %xor15.i367, i64* %x31.i354, align 8
  %2106 = load i64*, i64** %out4.addr.i346, align 8
  %2107 = load i64, i64* %2106, align 8
  %2108 = load i64, i64* %x31.i354, align 8
  %xor16.i368 = xor i64 %2107, %2108
  %2109 = load i64*, i64** %out4.addr.i346, align 8
  store i64 %xor16.i368, i64* %2109, align 8
  %2110 = load i64, i64* %a2.addr.i338, align 8
  %2111 = load i64, i64* %x7B7E7A7F.i, align 8
  %xor17.i369 = xor i64 %2110, %2111
  store i64 %xor17.i369, i64* %x484D494C.i, align 8
  %2112 = load i64, i64* %a6.addr.i342, align 8
  %2113 = load i64, i64* %x484D494C.i, align 8
  %neg18.i370 = xor i64 %2113, -1
  %and19.i371 = and i64 %2112, %neg18.i370
  store i64 %and19.i371, i64* %x0000B6B3.i, align 8
  %2114 = load i64, i64* %a3.addr.i339, align 8
  %2115 = load i64, i64* %x0000B6B3.i, align 8
  %xor20.i372 = xor i64 %2114, %2115
  store i64 %xor20.i372, i64* %x0F0FB9BC.i, align 8
  %2116 = load i64, i64* %a5.addr.i341, align 8
  %2117 = load i64, i64* %x09030C06.i, align 8
  %neg21.i = xor i64 %2117, -1
  %and22.i373 = and i64 %2116, %neg21.i
  store i64 %and22.i373, i64* %x00FC00F9.i, align 8
  %2118 = load i64, i64* %x0F0FB9BC.i, align 8
  %2119 = load i64, i64* %x00FC00F9.i, align 8
  %or23.i = or i64 %2118, %2119
  store i64 %or23.i, i64* %x0FFFB9FD.i, align 8
  %2120 = load i64, i64* %a1.addr.i337, align 8
  %2121 = load i64, i64* %x59A31CE6.i, align 8
  %or24.i374 = or i64 %2120, %2121
  store i64 %or24.i374, i64* %x5DF75DF7.i, align 8
  %2122 = load i64, i64* %x336622FF.i, align 8
  %2123 = load i64, i64* %x5DF75DF7.i, align 8
  %and25.i375 = and i64 %2122, %2123
  store i64 %and25.i375, i64* %x116600F7.i, align 8
  %2124 = load i64, i64* %x0F0FB9BC.i, align 8
  %2125 = load i64, i64* %x116600F7.i, align 8
  %xor26.i376 = xor i64 %2124, %2125
  store i64 %xor26.i376, i64* %x1E69B94B.i, align 8
  %2126 = load i64, i64* %x1E69B94B.i, align 8
  %2127 = load i64, i64* %x09030000.i, align 8
  %neg27.i377 = xor i64 %2127, -1
  %and28.i378 = and i64 %2126, %neg27.i377
  store i64 %and28.i378, i64* %x1668B94B.i, align 8
  %2128 = load i64, i64* %x00220099.i, align 8
  %2129 = load i64, i64* %a4.addr.i340, align 8
  %or29.i = or i64 %2128, %2129
  store i64 %or29.i, i64* %x20.i351, align 8
  %2130 = load i64, i64* %x20.i351, align 8
  %2131 = load i64, i64* %x1668B94B.i, align 8
  %xor30.i379 = xor i64 %2130, %2131
  store i64 %xor30.i379, i64* %x21.i352, align 8
  %2132 = load i64*, i64** %out3.addr.i345, align 8
  %2133 = load i64, i64* %2132, align 8
  %2134 = load i64, i64* %x21.i352, align 8
  %xor31.i = xor i64 %2133, %2134
  %2135 = load i64*, i64** %out3.addr.i345, align 8
  store i64 %xor31.i, i64* %2135, align 8
  %2136 = load i64, i64* %a2.addr.i338, align 8
  %2137 = load i64, i64* %x5A5A5A5A.i, align 8
  %or32.i = or i64 %2136, %2137
  store i64 %or32.i, i64* %x7B7B7B7B.i, align 8
  %2138 = load i64, i64* %x3A6522FF.i, align 8
  %2139 = load i64, i64* %x7B7B7B7B.i, align 8
  %xor33.i380 = xor i64 %2138, %2139
  store i64 %xor33.i380, i64* %x411E5984.i, align 8
  %2140 = load i64, i64* %x11115555.i, align 8
  %2141 = load i64, i64* %x0FFFB9FD.i, align 8
  %or34.i381 = or i64 %2140, %2141
  store i64 %or34.i381, i64* %x1FFFFDFD.i, align 8
  %2142 = load i64, i64* %x411E5984.i, align 8
  %2143 = load i64, i64* %x1FFFFDFD.i, align 8
  %xor35.i = xor i64 %2142, %2143
  store i64 %xor35.i, i64* %x5EE1A479.i, align 8
  %2144 = load i64, i64* %x22DD6699.i, align 8
  %2145 = load i64, i64* %x1E69B94B.i, align 8
  %xor36.i382 = xor i64 %2144, %2145
  store i64 %xor36.i382, i64* %x3CB4DFD2.i, align 8
  %2146 = load i64, i64* %a5.addr.i341, align 8
  %2147 = load i64, i64* %x3CB4DFD2.i, align 8
  %neg37.i = xor i64 %2147, -1
  %and38.i383 = and i64 %2146, %neg37.i
  store i64 %and38.i383, i64* %x004B002D.i, align 8
  %2148 = load i64, i64* %x484D494C.i, align 8
  %neg39.i = xor i64 %2148, -1
  store i64 %neg39.i, i64* %xB7B2B6B3.i, align 8
  %2149 = load i64, i64* %x7B7B7B7B.i, align 8
  %2150 = load i64, i64* %xB7B2B6B3.i, align 8
  %xor40.i384 = xor i64 %2149, %2150
  store i64 %xor40.i384, i64* %xCCC9CDC8.i, align 8
  %2151 = load i64, i64* %x004B002D.i, align 8
  %2152 = load i64, i64* %xCCC9CDC8.i, align 8
  %xor41.i385 = xor i64 %2151, %2152
  store i64 %xor41.i385, i64* %xCC82CDE5.i, align 8
  %2153 = load i64, i64* %xCC82CDE5.i, align 8
  %2154 = load i64, i64* %a4.addr.i340, align 8
  %neg42.i = xor i64 %2154, -1
  %and43.i386 = and i64 %2153, %neg42.i
  store i64 %and43.i386, i64* %x10.i349, align 8
  %2155 = load i64, i64* %x10.i349, align 8
  %2156 = load i64, i64* %x5EE1A479.i, align 8
  %xor44.i387 = xor i64 %2155, %2156
  store i64 %xor44.i387, i64* %x11.i350, align 8
  %2157 = load i64*, i64** %out2.addr.i344, align 8
  %2158 = load i64, i64* %2157, align 8
  %2159 = load i64, i64* %x11.i350, align 8
  %xor45.i388 = xor i64 %2158, %2159
  %2160 = load i64*, i64** %out2.addr.i344, align 8
  store i64 %xor45.i388, i64* %2160, align 8
  %2161 = load i64, i64* %a6.addr.i342, align 8
  %2162 = load i64, i64* %x00551144.i, align 8
  %xor46.i389 = xor i64 %2161, %2162
  store i64 %xor46.i389, i64* %x0055EEBB.i, align 8
  %2163 = load i64, i64* %a1.addr.i337, align 8
  %2164 = load i64, i64* %x0F0FB9BC.i, align 8
  %xor47.i390 = xor i64 %2163, %2164
  store i64 %xor47.i390, i64* %x5A5AECE9.i, align 8
  %2165 = load i64, i64* %x0055EEBB.i, align 8
  %2166 = load i64, i64* %x5A5AECE9.i, align 8
  %and48.i391 = and i64 %2165, %2166
  store i64 %and48.i391, i64* %x0050ECA9.i, align 8
  %2167 = load i64, i64* %x09030C06.i, align 8
  %2168 = load i64, i64* %xCCC9CDC8.i, align 8
  %xor49.i392 = xor i64 %2167, %2168
  store i64 %xor49.i392, i64* %xC5CAC1CE.i, align 8
  %2169 = load i64, i64* %x0050ECA9.i, align 8
  %2170 = load i64, i64* %xC5CAC1CE.i, align 8
  %xor50.i = xor i64 %2169, %2170
  store i64 %xor50.i, i64* %xC59A2D67.i, align 8
  %2171 = load i64, i64* %x0FFFB9FD.i, align 8
  %2172 = load i64, i64* %a4.addr.i340, align 8
  %neg51.i = xor i64 %2172, -1
  %and52.i = and i64 %2171, %neg51.i
  store i64 %and52.i, i64* %x00.i347, align 8
  %2173 = load i64, i64* %x00.i347, align 8
  %2174 = load i64, i64* %xC59A2D67.i, align 8
  %xor53.i393 = xor i64 %2173, %2174
  store i64 %xor53.i393, i64* %x01.i348, align 8
  %2175 = load i64*, i64** %out1.addr.i343, align 8
  %2176 = load i64, i64* %2175, align 8
  %2177 = load i64, i64* %x01.i348, align 8
  %xor54.i = xor i64 %2176, %2177
  %2178 = load i64*, i64** %out1.addr.i343, align 8
  store i64 %xor54.i, i64* %2178, align 8
  %2179 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 55), align 8
  %2180 = load i64**, i64*** %k, align 8
  %arrayidx251 = getelementptr inbounds i64*, i64** %2180, i64 84
  %2181 = load i64*, i64** %arrayidx251, align 8
  %arrayidx252 = getelementptr inbounds i64, i64* %2181, i64 0
  %2182 = load i64, i64* %arrayidx252, align 8
  %xor253 = xor i64 %2179, %2182
  %2183 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 56), align 8
  %2184 = load i64**, i64*** %k, align 8
  %arrayidx254 = getelementptr inbounds i64*, i64** %2184, i64 85
  %2185 = load i64*, i64** %arrayidx254, align 8
  %arrayidx255 = getelementptr inbounds i64, i64* %2185, i64 0
  %2186 = load i64, i64* %arrayidx255, align 8
  %xor256 = xor i64 %2183, %2186
  %2187 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 57), align 8
  %2188 = load i64**, i64*** %k, align 8
  %arrayidx257 = getelementptr inbounds i64*, i64** %2188, i64 86
  %2189 = load i64*, i64** %arrayidx257, align 8
  %arrayidx258 = getelementptr inbounds i64, i64* %2189, i64 0
  %2190 = load i64, i64* %arrayidx258, align 8
  %xor259 = xor i64 %2187, %2190
  %2191 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 58), align 8
  %2192 = load i64**, i64*** %k, align 8
  %arrayidx260 = getelementptr inbounds i64*, i64** %2192, i64 87
  %2193 = load i64*, i64** %arrayidx260, align 8
  %arrayidx261 = getelementptr inbounds i64, i64* %2193, i64 0
  %2194 = load i64, i64* %arrayidx261, align 8
  %xor262 = xor i64 %2191, %2194
  %2195 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 59), align 8
  %2196 = load i64**, i64*** %k, align 8
  %arrayidx263 = getelementptr inbounds i64*, i64** %2196, i64 88
  %2197 = load i64*, i64** %arrayidx263, align 8
  %arrayidx264 = getelementptr inbounds i64, i64* %2197, i64 0
  %2198 = load i64, i64* %arrayidx264, align 8
  %xor265 = xor i64 %2195, %2198
  %2199 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 60), align 8
  %2200 = load i64**, i64*** %k, align 8
  %arrayidx266 = getelementptr inbounds i64*, i64** %2200, i64 89
  %2201 = load i64*, i64** %arrayidx266, align 8
  %arrayidx267 = getelementptr inbounds i64, i64* %2201, i64 0
  %2202 = load i64, i64* %arrayidx267, align 8
  %xor268 = xor i64 %2199, %2202
  store i64 %xor253, i64* %a1.addr.i294, align 8
  store i64 %xor256, i64* %a2.addr.i295, align 8
  store i64 %xor259, i64* %a3.addr.i296, align 8
  store i64 %xor262, i64* %a4.addr.i297, align 8
  store i64 %xor265, i64* %a5.addr.i298, align 8
  store i64 %xor268, i64* %a6.addr.i299, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 31), i64** %out1.addr.i300, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 11), i64** %out2.addr.i301, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 21), i64** %out3.addr.i302, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 6), i64** %out4.addr.i303, align 8
  %2203 = load i64, i64* %a4.addr.i297, align 8
  %2204 = load i64, i64* %a5.addr.i298, align 8
  %xor.i312 = xor i64 %2203, %2204
  store i64 %xor.i312, i64* %x0FF00FF0.i, align 8
  %2205 = load i64, i64* %a3.addr.i296, align 8
  %2206 = load i64, i64* %x0FF00FF0.i, align 8
  %xor1.i = xor i64 %2205, %2206
  store i64 %xor1.i, i64* %x3CC33CC3.i, align 8
  %2207 = load i64, i64* %a6.addr.i299, align 8
  %2208 = load i64, i64* %x3CC33CC3.i, align 8
  %and.i313 = and i64 %2207, %2208
  store i64 %and.i313, i64* %x00003CC3.i, align 8
  %2209 = load i64, i64* %a4.addr.i297, align 8
  %2210 = load i64, i64* %x0FF00FF0.i, align 8
  %and2.i314 = and i64 %2209, %2210
  store i64 %and2.i314, i64* %x0F000F00.i, align 8
  %2211 = load i64, i64* %a2.addr.i295, align 8
  %2212 = load i64, i64* %x0F000F00.i, align 8
  %xor3.i = xor i64 %2211, %2212
  store i64 %xor3.i, i64* %x5A555A55.i, align 8
  %2213 = load i64, i64* %x00003CC3.i, align 8
  %2214 = load i64, i64* %x5A555A55.i, align 8
  %and4.i = and i64 %2213, %2214
  store i64 %and4.i, i64* %x00001841.i, align 8
  %2215 = load i64, i64* %a6.addr.i299, align 8
  %2216 = load i64, i64* %x0F000F00.i, align 8
  %and5.i315 = and i64 %2215, %2216
  store i64 %and5.i315, i64* %x00000F00.i, align 8
  %2217 = load i64, i64* %a3.addr.i296, align 8
  %2218 = load i64, i64* %x00000F00.i, align 8
  %xor6.i = xor i64 %2217, %2218
  store i64 %xor6.i, i64* %x33333C33.i, align 8
  %2219 = load i64, i64* %x5A555A55.i, align 8
  %2220 = load i64, i64* %x33333C33.i, align 8
  %or.i316 = or i64 %2219, %2220
  store i64 %or.i316, i64* %x7B777E77.i, align 8
  %2221 = load i64, i64* %a6.addr.i299, align 8
  %2222 = load i64, i64* %x0FF00FF0.i, align 8
  %xor7.i = xor i64 %2221, %2222
  store i64 %xor7.i, i64* %x0FF0F00F.i, align 8
  %2223 = load i64, i64* %x7B777E77.i, align 8
  %2224 = load i64, i64* %x0FF0F00F.i, align 8
  %xor8.i = xor i64 %2223, %2224
  store i64 %xor8.i, i64* %x74878E78.i, align 8
  %2225 = load i64, i64* %a1.addr.i294, align 8
  %2226 = load i64, i64* %x00001841.i, align 8
  %neg.i317 = xor i64 %2226, -1
  %and9.i318 = and i64 %2225, %neg.i317
  store i64 %and9.i318, i64* %x30.i310, align 8
  %2227 = load i64, i64* %x30.i310, align 8
  %2228 = load i64, i64* %x74878E78.i, align 8
  %xor10.i319 = xor i64 %2227, %2228
  store i64 %xor10.i319, i64* %x31.i311, align 8
  %2229 = load i64*, i64** %out4.addr.i303, align 8
  %2230 = load i64, i64* %2229, align 8
  %2231 = load i64, i64* %x31.i311, align 8
  %xor11.i = xor i64 %2230, %2231
  %2232 = load i64*, i64** %out4.addr.i303, align 8
  store i64 %xor11.i, i64* %2232, align 8
  %2233 = load i64, i64* %a5.addr.i298, align 8
  %2234 = load i64, i64* %x3CC33CC3.i, align 8
  %neg12.i = xor i64 %2234, -1
  %and13.i320 = and i64 %2233, %neg12.i
  store i64 %and13.i320, i64* %x003C003C.i, align 8
  %2235 = load i64, i64* %x5A555A55.i, align 8
  %2236 = load i64, i64* %x003C003C.i, align 8
  %or14.i = or i64 %2235, %2236
  store i64 %or14.i, i64* %x5A7D5A7D.i, align 8
  %2237 = load i64, i64* %x00003CC3.i, align 8
  %2238 = load i64, i64* %x33333C33.i, align 8
  %xor15.i = xor i64 %2237, %2238
  store i64 %xor15.i, i64* %x333300F0.i, align 8
  %2239 = load i64, i64* %x5A7D5A7D.i, align 8
  %2240 = load i64, i64* %x333300F0.i, align 8
  %xor16.i = xor i64 %2239, %2240
  store i64 %xor16.i, i64* %x694E5A8D.i, align 8
  %2241 = load i64, i64* %x00003CC3.i, align 8
  %2242 = load i64, i64* %x0FF0F00F.i, align 8
  %xor17.i321 = xor i64 %2241, %2242
  store i64 %xor17.i321, i64* %x0FF0CCCC.i, align 8
  %2243 = load i64, i64* %a4.addr.i297, align 8
  %2244 = load i64, i64* %x0FF0CCCC.i, align 8
  %neg18.i = xor i64 %2244, -1
  %and19.i322 = and i64 %2243, %neg18.i
  store i64 %and19.i322, i64* %x000F0303.i, align 8
  %2245 = load i64, i64* %x5A555A55.i, align 8
  %2246 = load i64, i64* %x000F0303.i, align 8
  %neg20.i = xor i64 %2246, -1
  %and21.i = and i64 %2245, %neg20.i
  store i64 %and21.i, i64* %x5A505854.i, align 8
  %2247 = load i64, i64* %a5.addr.i298, align 8
  %2248 = load i64, i64* %x333300F0.i, align 8
  %xor22.i323 = xor i64 %2247, %2248
  store i64 %xor22.i323, i64* %x33CC000F.i, align 8
  %2249 = load i64, i64* %x5A505854.i, align 8
  %2250 = load i64, i64* %x33CC000F.i, align 8
  %xor23.i = xor i64 %2249, %2250
  store i64 %xor23.i, i64* %x699C585B.i, align 8
  %2251 = load i64, i64* %x0F000F00.i, align 8
  %2252 = load i64, i64* %x74878E78.i, align 8
  %or24.i324 = or i64 %2251, %2252
  store i64 %or24.i324, i64* %x7F878F78.i, align 8
  %2253 = load i64, i64* %a3.addr.i296, align 8
  %2254 = load i64, i64* %x699C585B.i, align 8
  %and25.i325 = and i64 %2253, %2254
  store i64 %and25.i325, i64* %x21101013.i, align 8
  %2255 = load i64, i64* %x7F878F78.i, align 8
  %2256 = load i64, i64* %x21101013.i, align 8
  %or26.i = or i64 %2255, %2256
  store i64 %or26.i, i64* %x7F979F7B.i, align 8
  %2257 = load i64, i64* %x3CC33CC3.i, align 8
  %2258 = load i64, i64* %x0FF0F00F.i, align 8
  %neg27.i = xor i64 %2258, -1
  %and28.i = and i64 %2257, %neg27.i
  store i64 %and28.i, i64* %x30030CC0.i, align 8
  %2259 = load i64, i64* %x7F979F7B.i, align 8
  %2260 = load i64, i64* %x30030CC0.i, align 8
  %xor29.i326 = xor i64 %2259, %2260
  store i64 %xor29.i326, i64* %x4F9493BB.i, align 8
  %2261 = load i64, i64* %x4F9493BB.i, align 8
  %2262 = load i64, i64* %a1.addr.i294, align 8
  %neg30.i = xor i64 %2262, -1
  %and31.i327 = and i64 %2261, %neg30.i
  store i64 %and31.i327, i64* %x00.i304, align 8
  %2263 = load i64, i64* %x00.i304, align 8
  %2264 = load i64, i64* %x694E5A8D.i, align 8
  %xor32.i328 = xor i64 %2263, %2264
  store i64 %xor32.i328, i64* %x01.i305, align 8
  %2265 = load i64*, i64** %out1.addr.i300, align 8
  %2266 = load i64, i64* %2265, align 8
  %2267 = load i64, i64* %x01.i305, align 8
  %xor33.i329 = xor i64 %2266, %2267
  %2268 = load i64*, i64** %out1.addr.i300, align 8
  store i64 %xor33.i329, i64* %2268, align 8
  %2269 = load i64, i64* %x699C585B.i, align 8
  %2270 = load i64, i64* %x4F9493BB.i, align 8
  %or34.i = or i64 %2269, %2270
  store i64 %or34.i, i64* %x6F9CDBFB.i, align 8
  %2271 = load i64, i64* %a6.addr.i299, align 8
  %2272 = load i64, i64* %x6F9CDBFB.i, align 8
  %and35.i = and i64 %2271, %2272
  store i64 %and35.i, i64* %x0000DBFB.i, align 8
  %2273 = load i64, i64* %a2.addr.i295, align 8
  %2274 = load i64, i64* %x0000DBFB.i, align 8
  %and36.i = and i64 %2273, %2274
  store i64 %and36.i, i64* %x00005151.i, align 8
  %2275 = load i64, i64* %x694E5A8D.i, align 8
  %2276 = load i64, i64* %x4F9493BB.i, align 8
  %xor37.i330 = xor i64 %2275, %2276
  store i64 %xor37.i330, i64* %x26DAC936.i, align 8
  %2277 = load i64, i64* %x00005151.i, align 8
  %2278 = load i64, i64* %x26DAC936.i, align 8
  %xor38.i = xor i64 %2277, %2278
  store i64 %xor38.i, i64* %x26DA9867.i, align 8
  %2279 = load i64, i64* %a5.addr.i298, align 8
  %2280 = load i64, i64* %x21101013.i, align 8
  %or39.i = or i64 %2279, %2280
  store i64 %or39.i, i64* %x21FF10FF.i, align 8
  %2281 = load i64, i64* %x0000DBFB.i, align 8
  %2282 = load i64, i64* %x21FF10FF.i, align 8
  %xor40.i331 = xor i64 %2281, %2282
  store i64 %xor40.i331, i64* %x21FFCB04.i, align 8
  %2283 = load i64, i64* %a5.addr.i298, align 8
  %2284 = load i64, i64* %x26DAC936.i, align 8
  %xor41.i = xor i64 %2283, %2284
  store i64 %xor41.i, i64* %x2625C9C9.i, align 8
  %2285 = load i64, i64* %x21FFCB04.i, align 8
  %2286 = load i64, i64* %x2625C9C9.i, align 8
  %or42.i = or i64 %2285, %2286
  store i64 %or42.i, i64* %x27FFCBCD.i, align 8
  %2287 = load i64, i64* %x27FFCBCD.i, align 8
  %2288 = load i64, i64* %a1.addr.i294, align 8
  %and43.i332 = and i64 %2287, %2288
  store i64 %and43.i332, i64* %x20.i308, align 8
  %2289 = load i64, i64* %x20.i308, align 8
  %2290 = load i64, i64* %x699C585B.i, align 8
  %xor44.i333 = xor i64 %2289, %2290
  store i64 %xor44.i333, i64* %x21.i309, align 8
  %2291 = load i64*, i64** %out3.addr.i302, align 8
  %2292 = load i64, i64* %2291, align 8
  %2293 = load i64, i64* %x21.i309, align 8
  %xor45.i334 = xor i64 %2292, %2293
  %2294 = load i64*, i64** %out3.addr.i302, align 8
  store i64 %xor45.i334, i64* %2294, align 8
  %2295 = load i64, i64* %x0000DBFB.i, align 8
  %2296 = load i64, i64* %x27FFCBCD.i, align 8
  %xor46.i = xor i64 %2295, %2296
  store i64 %xor46.i, i64* %x27FF1036.i, align 8
  %2297 = load i64, i64* %x003C003C.i, align 8
  %2298 = load i64, i64* %x27FF1036.i, align 8
  %or47.i335 = or i64 %2297, %2298
  store i64 %or47.i335, i64* %x27FF103E.i, align 8
  %2299 = load i64, i64* %x4F9493BB.i, align 8
  %neg48.i = xor i64 %2299, -1
  store i64 %neg48.i, i64* %xB06B6C44.i, align 8
  %2300 = load i64, i64* %x27FF103E.i, align 8
  %2301 = load i64, i64* %xB06B6C44.i, align 8
  %xor49.i = xor i64 %2300, %2301
  store i64 %xor49.i, i64* %x97947C7A.i, align 8
  %2302 = load i64, i64* %x97947C7A.i, align 8
  %2303 = load i64, i64* %a1.addr.i294, align 8
  %neg50.i = xor i64 %2303, -1
  %and51.i336 = and i64 %2302, %neg50.i
  store i64 %and51.i336, i64* %x10.i306, align 8
  %2304 = load i64, i64* %x10.i306, align 8
  %2305 = load i64, i64* %x26DA9867.i, align 8
  %xor52.i = xor i64 %2304, %2305
  store i64 %xor52.i, i64* %x11.i307, align 8
  %2306 = load i64*, i64** %out2.addr.i301, align 8
  %2307 = load i64, i64* %2306, align 8
  %2308 = load i64, i64* %x11.i307, align 8
  %xor53.i = xor i64 %2307, %2308
  %2309 = load i64*, i64** %out2.addr.i301, align 8
  store i64 %xor53.i, i64* %2309, align 8
  %2310 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 59), align 8
  %2311 = load i64**, i64*** %k, align 8
  %arrayidx269 = getelementptr inbounds i64*, i64** %2311, i64 90
  %2312 = load i64*, i64** %arrayidx269, align 8
  %arrayidx270 = getelementptr inbounds i64, i64* %2312, i64 0
  %2313 = load i64, i64* %arrayidx270, align 8
  %xor271 = xor i64 %2310, %2313
  %2314 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 60), align 8
  %2315 = load i64**, i64*** %k, align 8
  %arrayidx272 = getelementptr inbounds i64*, i64** %2315, i64 91
  %2316 = load i64*, i64** %arrayidx272, align 8
  %arrayidx273 = getelementptr inbounds i64, i64* %2316, i64 0
  %2317 = load i64, i64* %arrayidx273, align 8
  %xor274 = xor i64 %2314, %2317
  %2318 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 61), align 8
  %2319 = load i64**, i64*** %k, align 8
  %arrayidx275 = getelementptr inbounds i64*, i64** %2319, i64 92
  %2320 = load i64*, i64** %arrayidx275, align 8
  %arrayidx276 = getelementptr inbounds i64, i64* %2320, i64 0
  %2321 = load i64, i64* %arrayidx276, align 8
  %xor277 = xor i64 %2318, %2321
  %2322 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 62), align 8
  %2323 = load i64**, i64*** %k, align 8
  %arrayidx278 = getelementptr inbounds i64*, i64** %2323, i64 93
  %2324 = load i64*, i64** %arrayidx278, align 8
  %arrayidx279 = getelementptr inbounds i64, i64* %2324, i64 0
  %2325 = load i64, i64* %arrayidx279, align 8
  %xor280 = xor i64 %2322, %2325
  %2326 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 63), align 8
  %2327 = load i64**, i64*** %k, align 8
  %arrayidx281 = getelementptr inbounds i64*, i64** %2327, i64 94
  %2328 = load i64*, i64** %arrayidx281, align 8
  %arrayidx282 = getelementptr inbounds i64, i64* %2328, i64 0
  %2329 = load i64, i64* %arrayidx282, align 8
  %xor283 = xor i64 %2326, %2329
  %2330 = load i64, i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 32), align 8
  %2331 = load i64**, i64*** %k, align 8
  %arrayidx284 = getelementptr inbounds i64*, i64** %2331, i64 95
  %2332 = load i64*, i64** %arrayidx284, align 8
  %arrayidx285 = getelementptr inbounds i64, i64* %2332, i64 0
  %2333 = load i64, i64* %arrayidx285, align 8
  %xor286 = xor i64 %2330, %2333
  store i64 %xor271, i64* %a1.addr.i, align 8
  store i64 %xor274, i64* %a2.addr.i, align 8
  store i64 %xor277, i64* %a3.addr.i, align 8
  store i64 %xor280, i64* %a4.addr.i, align 8
  store i64 %xor283, i64* %a5.addr.i, align 8
  store i64 %xor286, i64* %a6.addr.i, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 4), i64** %out1.addr.i, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 26), i64** %out2.addr.i, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 14), i64** %out3.addr.i, align 8
  store i64* getelementptr inbounds (%struct.DES_bs_combined, %struct.DES_bs_combined* @DES_bs_all, i32 0, i32 3, i64 20), i64** %out4.addr.i, align 8
  %2334 = load i64, i64* %a3.addr.i, align 8
  %2335 = load i64, i64* %a2.addr.i, align 8
  %neg.i = xor i64 %2335, -1
  %and.i287 = and i64 %2334, %neg.i
  store i64 %and.i287, i64* %x0C0C0C0C.i, align 8
  %2336 = load i64, i64* %a5.addr.i, align 8
  %2337 = load i64, i64* %a3.addr.i, align 8
  %neg1.i = xor i64 %2337, -1
  %and2.i = and i64 %2336, %neg1.i
  store i64 %and2.i, i64* %x0000F0F0.i, align 8
  %2338 = load i64, i64* %a4.addr.i, align 8
  %2339 = load i64, i64* %x0000F0F0.i, align 8
  %xor.i = xor i64 %2338, %2339
  store i64 %xor.i, i64* %x00FFF00F.i, align 8
  %2340 = load i64, i64* %a1.addr.i, align 8
  %2341 = load i64, i64* %x00FFF00F.i, align 8
  %and3.i = and i64 %2340, %2341
  store i64 %and3.i, i64* %x00555005.i, align 8
  %2342 = load i64, i64* %x00555005.i, align 8
  %2343 = load i64, i64* %x0C0C0C0C.i, align 8
  %neg4.i = xor i64 %2343, -1
  %and5.i = and i64 %2342, %neg4.i
  store i64 %and5.i, i64* %x00515001.i, align 8
  %2344 = load i64, i64* %a2.addr.i, align 8
  %2345 = load i64, i64* %x00FFF00F.i, align 8
  %neg6.i = xor i64 %2345, -1
  %and7.i = and i64 %2344, %neg6.i
  store i64 %and7.i, i64* %x33000330.i, align 8
  %2346 = load i64, i64* %a1.addr.i, align 8
  %2347 = load i64, i64* %x33000330.i, align 8
  %or.i288 = or i64 %2346, %2347
  store i64 %or.i288, i64* %x77555775.i, align 8
  %2348 = load i64, i64* %a2.addr.i, align 8
  %2349 = load i64, i64* %a3.addr.i, align 8
  %neg8.i = xor i64 %2349, -1
  %and9.i = and i64 %2348, %neg8.i
  store i64 %and9.i, i64* %x30303030.i, align 8
  %2350 = load i64, i64* %a5.addr.i, align 8
  %2351 = load i64, i64* %x30303030.i, align 8
  %xor10.i = xor i64 %2350, %2351
  store i64 %xor10.i, i64* %x3030CFCF.i, align 8
  %2352 = load i64, i64* %x77555775.i, align 8
  %2353 = load i64, i64* %x3030CFCF.i, align 8
  %and11.i289 = and i64 %2352, %2353
  store i64 %and11.i289, i64* %x30104745.i, align 8
  %2354 = load i64, i64* %x00555005.i, align 8
  %2355 = load i64, i64* %x30104745.i, align 8
  %or12.i = or i64 %2354, %2355
  store i64 %or12.i, i64* %x30555745.i, align 8
  %2356 = load i64, i64* %x00FFF00F.i, align 8
  %neg13.i = xor i64 %2356, -1
  store i64 %neg13.i, i64* %xFF000FF0.i, align 8
  %2357 = load i64, i64* %x30104745.i, align 8
  %2358 = load i64, i64* %xFF000FF0.i, align 8
  %xor14.i = xor i64 %2357, %2358
  store i64 %xor14.i, i64* %xCF1048B5.i, align 8
  %2359 = load i64, i64* %a3.addr.i, align 8
  %2360 = load i64, i64* %x77555775.i, align 8
  %neg15.i = xor i64 %2360, -1
  %and16.i290 = and i64 %2359, %neg15.i
  store i64 %and16.i290, i64* %x080A080A.i, align 8
  %2361 = load i64, i64* %xCF1048B5.i, align 8
  %2362 = load i64, i64* %x080A080A.i, align 8
  %xor17.i = xor i64 %2361, %2362
  store i64 %xor17.i, i64* %xC71A40BF.i, align 8
  %2363 = load i64, i64* %x0C0C0C0C.i, align 8
  %2364 = load i64, i64* %xC71A40BF.i, align 8
  %xor18.i = xor i64 %2363, %2364
  store i64 %xor18.i, i64* %xCB164CB3.i, align 8
  %2365 = load i64, i64* %x00515001.i, align 8
  %2366 = load i64, i64* %a6.addr.i, align 8
  %or19.i = or i64 %2365, %2366
  store i64 %or19.i, i64* %x10.i, align 8
  %2367 = load i64, i64* %x10.i, align 8
  %2368 = load i64, i64* %xCB164CB3.i, align 8
  %xor20.i = xor i64 %2367, %2368
  store i64 %xor20.i, i64* %x11.i, align 8
  %2369 = load i64*, i64** %out2.addr.i, align 8
  %2370 = load i64, i64* %2369, align 8
  %2371 = load i64, i64* %x11.i, align 8
  %xor21.i = xor i64 %2370, %2371
  %2372 = load i64*, i64** %out2.addr.i, align 8
  store i64 %xor21.i, i64* %2372, align 8
  %2373 = load i64, i64* %a1.addr.i, align 8
  %2374 = load i64, i64* %xCB164CB3.i, align 8
  %xor22.i = xor i64 %2373, %2374
  store i64 %xor22.i, i64* %x9E4319E6.i, align 8
  %2375 = load i64, i64* %a5.addr.i, align 8
  %2376 = load i64, i64* %x9E4319E6.i, align 8
  %and23.i = and i64 %2375, %2376
  store i64 %and23.i, i64* %x000019E6.i, align 8
  %2377 = load i64, i64* %a2.addr.i, align 8
  %2378 = load i64, i64* %xC71A40BF.i, align 8
  %xor24.i = xor i64 %2377, %2378
  store i64 %xor24.i, i64* %xF429738C.i, align 8
  %2379 = load i64, i64* %x000019E6.i, align 8
  %2380 = load i64, i64* %xF429738C.i, align 8
  %xor25.i = xor i64 %2379, %2380
  store i64 %xor25.i, i64* %xF4296A6A.i, align 8
  %2381 = load i64, i64* %x33000330.i, align 8
  %2382 = load i64, i64* %xF4296A6A.i, align 8
  %xor26.i = xor i64 %2381, %2382
  store i64 %xor26.i, i64* %xC729695A.i, align 8
  %2383 = load i64, i64* %x30555745.i, align 8
  %2384 = load i64, i64* %xF4296A6A.i, align 8
  %xor27.i = xor i64 %2383, %2384
  store i64 %xor27.i, i64* %xC47C3D2F.i, align 8
  %2385 = load i64, i64* %a2.addr.i, align 8
  %2386 = load i64, i64* %xC47C3D2F.i, align 8
  %or28.i291 = or i64 %2385, %2386
  store i64 %or28.i291, i64* %xF77F3F3F.i, align 8
  %2387 = load i64, i64* %a5.addr.i, align 8
  %2388 = load i64, i64* %x9E4319E6.i, align 8
  %xor29.i = xor i64 %2387, %2388
  store i64 %xor29.i, i64* %x9E43E619.i, align 8
  %2389 = load i64, i64* %xF77F3F3F.i, align 8
  %2390 = load i64, i64* %x9E43E619.i, align 8
  %xor30.i = xor i64 %2389, %2390
  store i64 %xor30.i, i64* %x693CD926.i, align 8
  %2391 = load i64, i64* %x30555745.i, align 8
  %2392 = load i64, i64* %a6.addr.i, align 8
  %and31.i = and i64 %2391, %2392
  store i64 %and31.i, i64* %x20.i, align 8
  %2393 = load i64, i64* %x20.i, align 8
  %2394 = load i64, i64* %x693CD926.i, align 8
  %xor32.i = xor i64 %2393, %2394
  store i64 %xor32.i, i64* %x21.i, align 8
  %2395 = load i64*, i64** %out3.addr.i, align 8
  %2396 = load i64, i64* %2395, align 8
  %2397 = load i64, i64* %x21.i, align 8
  %xor33.i = xor i64 %2396, %2397
  %2398 = load i64*, i64** %out3.addr.i, align 8
  store i64 %xor33.i, i64* %2398, align 8
  %2399 = load i64, i64* %x3030CFCF.i, align 8
  %2400 = load i64, i64* %xC729695A.i, align 8
  %xor34.i = xor i64 %2399, %2400
  store i64 %xor34.i, i64* %xF719A695.i, align 8
  %2401 = load i64, i64* %a4.addr.i, align 8
  %2402 = load i64, i64* %xF429738C.i, align 8
  %or35.i = or i64 %2401, %2402
  store i64 %or35.i, i64* %xF4FF73FF.i, align 8
  %2403 = load i64, i64* %xF719A695.i, align 8
  %2404 = load i64, i64* %xF4FF73FF.i, align 8
  %xor36.i = xor i64 %2403, %2404
  store i64 %xor36.i, i64* %x03E6D56A.i, align 8
  %2405 = load i64, i64* %a1.addr.i, align 8
  %2406 = load i64, i64* %x03E6D56A.i, align 8
  %xor37.i = xor i64 %2405, %2406
  store i64 %xor37.i, i64* %x56B3803F.i, align 8
  %2407 = load i64, i64* %x56B3803F.i, align 8
  %2408 = load i64, i64* %a6.addr.i, align 8
  %and38.i292 = and i64 %2407, %2408
  store i64 %and38.i292, i64* %x30.i, align 8
  %2409 = load i64, i64* %x30.i, align 8
  %2410 = load i64, i64* %xC729695A.i, align 8
  %xor39.i = xor i64 %2409, %2410
  store i64 %xor39.i, i64* %x31.i, align 8
  %2411 = load i64*, i64** %out4.addr.i, align 8
  %2412 = load i64, i64* %2411, align 8
  %2413 = load i64, i64* %x31.i, align 8
  %xor40.i = xor i64 %2412, %2413
  %2414 = load i64*, i64** %out4.addr.i, align 8
  store i64 %xor40.i, i64* %2414, align 8
  %2415 = load i64, i64* %xF719A695.i, align 8
  %2416 = load i64, i64* %a4.addr.i, align 8
  %neg41.i = xor i64 %2416, -1
  %and42.i293 = and i64 %2415, %neg41.i
  store i64 %and42.i293, i64* %xF700A600.i, align 8
  %2417 = load i64, i64* %x693CD926.i, align 8
  %2418 = load i64, i64* %xF700A600.i, align 8
  %and43.i = and i64 %2417, %2418
  store i64 %and43.i, i64* %x61008000.i, align 8
  %2419 = load i64, i64* %x00515001.i, align 8
  %2420 = load i64, i64* %x03E6D56A.i, align 8
  %xor44.i = xor i64 %2419, %2420
  store i64 %xor44.i, i64* %x03B7856B.i, align 8
  %2421 = load i64, i64* %x61008000.i, align 8
  %2422 = load i64, i64* %x03B7856B.i, align 8
  %xor45.i = xor i64 %2421, %2422
  store i64 %xor45.i, i64* %x62B7056B.i, align 8
  %2423 = load i64, i64* %x62B7056B.i, align 8
  %2424 = load i64, i64* %a6.addr.i, align 8
  %or46.i = or i64 %2423, %2424
  store i64 %or46.i, i64* %x00.i, align 8
  %2425 = load i64, i64* %x00.i, align 8
  %2426 = load i64, i64* %xC729695A.i, align 8
  %xor47.i = xor i64 %2425, %2426
  store i64 %xor47.i, i64* %x01.i, align 8
  %2427 = load i64*, i64** %out1.addr.i, align 8
  %2428 = load i64, i64* %2427, align 8
  %2429 = load i64, i64* %x01.i, align 8
  %xor48.i = xor i64 %2428, %2429
  %2430 = load i64*, i64** %out1.addr.i, align 8
  store i64 %xor48.i, i64* %2430, align 8
  %2431 = load i64**, i64*** %k, align 8
  %add.ptr = getelementptr inbounds i64*, i64** %2431, i64 96
  store i64** %add.ptr, i64*** %k, align 8
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %2432 = load i32, i32* %rounds, align 4
  %dec = add nsw i32 %2432, -1
  store i32 %dec, i32* %rounds, align 4
  %tobool = icmp ne i32 %dec, 0
  br i1 %tobool, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  ret void
}

attributes #0 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { inlinehint nounwind readonly uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"clang version 4.0.0 (trunk 18873)"}
