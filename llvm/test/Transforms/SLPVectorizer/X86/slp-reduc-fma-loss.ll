; INTEL_COLLAB
; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -slp-vectorizer -S -mcpu=core-avx2 < %s | FileCheck %s

; This test checks for a case when a horizontal reduction of floating-point
; adds may look profitable, but is not because it eliminates generation of
; floating-point FMAs that would be more profitable.

target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

define void @foo() #0 {
; CHECK-LABEL: @foo(
; CHECK-NEXT:    br label [[LOOP:%.*]]
; CHECK:       loop:
; CHECK-NEXT:    [[X_544:%.*]] = phi double [ 0.000000e+00, [[TMP0:%.*]] ], [ [[X_616:%.*]], [[LOOP]] ]
; CHECK-NEXT:    [[X_557:%.*]] = uitofp i16 undef to double
; CHECK-NEXT:    [[X_558:%.*]] = fmul fast double undef, [[X_557]]
; CHECK-NEXT:    [[X_559:%.*]] = fadd fast double [[X_558]], [[X_544]]
; CHECK-NEXT:    [[X_577:%.*]] = fmul fast double undef, undef
; CHECK-NEXT:    [[X_578:%.*]] = fadd fast double [[X_577]], [[X_559]]
; CHECK-NEXT:    [[X_596:%.*]] = fmul fast double undef, undef
; CHECK-NEXT:    [[X_597:%.*]] = fadd fast double [[X_596]], [[X_578]]
; CHECK-NEXT:    [[X_615:%.*]] = fmul fast double undef, undef
; CHECK-NEXT:    [[X_616]] = fadd fast double [[X_615]], [[X_597]]
; CHECK-NEXT:    br i1 undef, label [[EXIT:%.*]], label [[LOOP]]
; CHECK:       exit:
; CHECK-NEXT:    ret void
;
  br label %loop

loop:                                             ; preds = %loop, %0
  %x.544 = phi double [ 0.000000e+00, %0 ], [ %x.616, %loop ]
  %x.557 = uitofp i16 undef to double
  %x.558 = fmul fast double undef, %x.557
  %x.559 = fadd fast double %x.558, %x.544
  %x.577 = fmul fast double undef, undef
  %x.578 = fadd fast double %x.577, %x.559
  %x.596 = fmul fast double undef, undef
  %x.597 = fadd fast double %x.596, %x.578
  %x.615 = fmul fast double undef, undef
  %x.616 = fadd fast double %x.615, %x.597
  br i1 undef, label %exit, label %loop

exit:                                             ; preds = %loop
  ret void
}

attributes #0 = { "unsafe-fp-math"="true" }
; end INTEL_COLLAB
