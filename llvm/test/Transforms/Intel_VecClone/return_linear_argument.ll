; NOTE: Assertions have been autogenerated by utils/intel_update_vplan_checks.py
; RUN: opt -opaque-pointers=0 -vec-clone -S < %s | FileCheck %s
; RUN: opt -opaque-pointers=0 -passes="vec-clone" -S < %s | FileCheck %s

; CHECK: define dso_local void @_ZGVbN4l__Z3fooi
; CHECK:       simd.loop.preheader:
; CHECK-NEXT:    [[LOAD_A0:%.*]] = load i32, i32* [[ALLOCA_A0:%.*]], align 4
; CHECK-NEXT:    br label [[SIMD_LOOP_HEADER0:%.*]]
; CHECK-EMPTY:
; CHECK-NEXT:  simd.loop.header:
; CHECK-NEXT:    [[INDEX0:%.*]] = phi i32 [ 0, [[SIMD_LOOP_PREHEADER0:%.*]] ], [ [[INDVAR0:%.*]], [[SIMD_LOOP_LATCH0:%.*]] ]
; CHECK-NEXT:    [[STRIDE_MUL0:%.*]] = mul i32 1, [[INDEX0]]
; CHECK-NEXT:    [[STRIDE_ADD0:%.*]] = add i32 [[LOAD_A0]], [[STRIDE_MUL0]]
; CHECK-NEXT:    [[TOBOOL0:%.*]] = icmp eq i32 [[STRIDE_ADD0]], 0
; CHECK-NEXT:    br i1 [[TOBOOL0]], label [[FOR_END_SPLIT0:%.*]], label [[FOR_COND_PREHEADER0:%.*]]
;
; CHECK: define dso_local void @_ZGVcN8l__Z3fooi
; CHECK: define dso_local void @_ZGVdN8l__Z3fooi
; CHECK: define dso_local void @_ZGVeN16l__Z3fooi
; CHECK: define dso_local void @_ZGVbM4l__Z3fooi
; CHECK: define dso_local void @_ZGVcM8l__Z3fooi
; CHECK: define dso_local void @_ZGVdM8l__Z3fooi
; CHECK: define dso_local void @_ZGVeM16l__Z3fooi

target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local void @_Z3fooi(i32 %a) local_unnamed_addr #0 {
entry:
  %tobool = icmp eq i32 %a, 0
  br i1 %tobool, label %for.end.split, label %for.cond.preheader

for.cond.preheader:
  br label %for.cond

for.cond:
  br label %for.cond

for.end.split:
  ret void
}

; CHECK: define dso_local void @_ZGVbN4l__Z4fooi
; CHECK:       simd.loop.preheader:
; CHECK-NEXT:    [[LOAD_A0:%.*]] = load i64, i64* [[ALLOCA_A0:%.*]], align 8
; CHECK-NEXT:    br label [[SIMD_LOOP_HEADER0:%.*]]
; CHECK-EMPTY:
; CHECK-NEXT:  simd.loop.header:
; CHECK-NEXT:    [[INDEX0:%.*]] = phi i32 [ 0, [[SIMD_LOOP_PREHEADER0:%.*]] ], [ [[INDVAR0:%.*]], [[SIMD_LOOP_LATCH0:%.*]] ]
; CHECK-NEXT:    [[PHI_CAST0:%.*]] = zext i32 [[INDEX0]] to i64
; CHECK-NEXT:    [[STRIDE_MUL0:%.*]] = mul i64 1, [[PHI_CAST0]]
; CHECK-NEXT:    [[STRIDE_ADD0:%.*]] = add i64 [[LOAD_A0]], [[STRIDE_MUL0]]
; CHECK-NEXT:    [[TOBOOL0:%.*]] = icmp eq i64 [[STRIDE_ADD0]], 0
; CHECK-NEXT:    br i1 [[TOBOOL0]], label [[FOR_END_SPLIT0:%.*]], label [[FOR_COND_PREHEADER0:%.*]]
;
; CHECK: define dso_local void @_ZGVcN8l__Z4fooi
; CHECK: define dso_local void @_ZGVdN8l__Z4fooi
; CHECK: define dso_local void @_ZGVeN16l__Z4fooi
; CHECK: define dso_local void @_ZGVbM4l__Z4fooi
; CHECK: define dso_local void @_ZGVcM8l__Z4fooi
; CHECK: define dso_local void @_ZGVdM8l__Z4fooi
; CHECK: define dso_local void @_ZGVeM16l__Z4fooi

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local void @_Z4fooi(i64 %a) local_unnamed_addr #1 {
entry:
  %tobool = icmp eq i64 %a, 0
  br i1 %tobool, label %for.end.split, label %for.cond.preheader

for.cond.preheader:
  br label %for.cond

for.cond:
  br label %for.cond

for.end.split:
  ret void
}

attributes #0 = { "vector-variants"="_ZGVbN4l__Z3fooi,_ZGVcN8l__Z3fooi,_ZGVdN8l__Z3fooi,_ZGVeN16l__Z3fooi,_ZGVbM4l__Z3fooi,_ZGVcM8l__Z3fooi,_ZGVdM8l__Z3fooi,_ZGVeM16l__Z3fooi" }
attributes #1 = { "vector-variants"="_ZGVbN4l__Z4fooi,_ZGVcN8l__Z4fooi,_ZGVdN8l__Z4fooi,_ZGVeN16l__Z4fooi,_ZGVbM4l__Z4fooi,_ZGVcM8l__Z4fooi,_ZGVdM8l__Z4fooi,_ZGVeM16l__Z4fooi" }

