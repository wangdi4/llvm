; NOTE: Assertions have been autogenerated by utils/intel_update_vplan_checks.py
; RUN: opt -opaque-pointers=0 -vec-clone -S < %s | FileCheck %s
; RUN: opt -opaque-pointers=0 -passes="vec-clone" -S < %s | FileCheck %s

; CHECK: define dso_local void @_ZGVbN4vl__Z3barfi
; CHECK:       simd.loop.preheader:
; CHECK-NEXT:    [[LOAD_B0:%.*]] = load i32, i32* [[ALLOCA_B0:%.*]], align 4
; CHECK-NEXT:    br label [[SIMD_LOOP_HEADER0:%.*]]
; CHECK-EMPTY:
; CHECK-NEXT:  simd.loop.header:
; CHECK-NEXT:    [[INDEX0:%.*]] = phi i32 [ 0, [[SIMD_LOOP_PREHEADER0:%.*]] ], [ [[INDVAR0:%.*]], [[SIMD_LOOP_LATCH0:%.*]] ]
; CHECK-NEXT:    [[STRIDE_MUL0:%.*]] = mul i32 1, [[INDEX0]]
; CHECK-NEXT:    [[STRIDE_ADD0:%.*]] = add i32 [[LOAD_B0]], [[STRIDE_MUL0]]
; CHECK-NEXT:    [[CONV0:%.*]] = sitofp i32 [[STRIDE_ADD0]] to float
; CHECK-NEXT:    [[VEC_D_CAST_GEP0:%.*]] = getelementptr float, float* [[VEC_D_CAST0:%.*]], i32 [[INDEX0]]
; CHECK-NEXT:    [[VEC_D_ELEM0:%.*]] = load float, float* [[VEC_D_CAST_GEP0]], align 4
; CHECK-NEXT:    [[CMP0:%.*]] = fcmp fast ugt float [[CONV0]], [[VEC_D_ELEM0]]
; CHECK-NEXT:    br i1 [[CMP0]], label [[IF_END0:%.*]], label [[IF_THEN0:%.*]]
; CHECK: define dso_local void @_ZGVcN8vl__Z3barfi
; CHECK: define dso_local void @_ZGVdN8vl__Z3barfi
; CHECK: define dso_local void @_ZGVeN16vl__Z3barfi
; CHECK: define dso_local void @_ZGVbM4vl__Z3barfi
; CHECK: define dso_local void @_ZGVcM8vl__Z3barfi
; CHECK: define dso_local void @_ZGVdM8vl__Z3barfi
; CHECK: define dso_local void @_ZGVeM16vl__Z3barfi

target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: uwtable
define dso_local void @_Z3barfi(float %d, i32 %b) local_unnamed_addr #0 {
entry:
  %conv = sitofp i32 %b to float
  %cmp = fcmp fast ugt float %conv, %d
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @_Z3foov()
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

declare dso_local void @_Z3foov() local_unnamed_addr

attributes #0 = { "vector-variants"="_ZGVbN4vl__Z3barfi,_ZGVcN8vl__Z3barfi,_ZGVdN8vl__Z3barfi,_ZGVeN16vl__Z3barfi,_ZGVbM4vl__Z3barfi,_ZGVcM8vl__Z3barfi,_ZGVdM8vl__Z3barfi,_ZGVeM16vl__Z3barfi" }
