; NOTE: Assertions have been autogenerated by utils/intel_update_vplan_checks.py

; Test to verify that VecClone does not emit invalid stores with incompatible
; types during updateScalarMemRefsWithVector.

; RUN: opt -vec-clone -S < %s | FileCheck %s

target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nofree norecurse nounwind uwtable writeonly
define dso_local void @foo(float* nocapture %p) local_unnamed_addr #0 {
; CHECK:  define dso_local void @_ZGVbN2v_foo(<2 x float*> nocapture [[P0:%.*]]) local_unnamed_addr #0 {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[VEC_P0:%.*]] = alloca <2 x float*>, align 16
; CHECK-NEXT:    [[VEC_P_CAST0:%.*]] = bitcast <2 x float*>* [[VEC_P0]] to float**
; CHECK-NEXT:    br label [[SIMD_BEGIN_REGION0:%.*]]
; CHECK-EMPTY:
; CHECK-NEXT:  simd.begin.region:
; CHECK-NEXT:    [[ENTRY_REGION0:%.*]] = call token @llvm.directive.region.entry() [ "DIR.OMP.SIMD"(), "QUAL.OMP.SIMDLEN"(i32 2) ]
; CHECK-NEXT:    br label [[SIMD_LOOP0:%.*]]
; CHECK-EMPTY:
; CHECK-NEXT:  simd.loop:
; CHECK-NEXT:    [[INDEX0:%.*]] = phi i32 [ 0, [[SIMD_BEGIN_REGION0]] ], [ [[INDVAR0:%.*]], [[SIMD_LOOP_EXIT0:%.*]] ]
; CHECK-NEXT:    [[VEC_P_CAST_GEP0:%.*]] = getelementptr float*, float** [[VEC_P_CAST0]], i32 [[INDEX0]]
; CHECK-NEXT:    [[VEC_P_ELEM0:%.*]] = load float*, float** [[VEC_P_CAST_GEP0]], align 8
; CHECK-NEXT:    store float 0.000000e+00, float* [[VEC_P_ELEM0]], align 4
; CHECK-NEXT:    br label [[SIMD_LOOP_EXIT0]]
; CHECK-EMPTY:
; CHECK-NEXT:  simd.loop.exit:
; CHECK-NEXT:    [[INDVAR0]] = add nuw i32 [[INDEX0]], 1
; CHECK-NEXT:    [[VL_COND0:%.*]] = icmp ult i32 [[INDVAR0]], 2
; CHECK-NEXT:    br i1 [[VL_COND0]], label [[SIMD_LOOP0]], label [[SIMD_END_REGION0:%.*]], !llvm.loop !0
; CHECK-EMPTY:
; CHECK-NEXT:  simd.end.region:
; CHECK-NEXT:    call void @llvm.directive.region.exit(token [[ENTRY_REGION0]]) [ "DIR.OMP.END.SIMD"() ]
; CHECK-NEXT:    br label [[RETURN0:%.*]]
; CHECK-EMPTY:
; CHECK-NEXT:  return:
; CHECK-NEXT:    ret void
; CHECK-NEXT:  }
;
entry:
  store float 0.000000e+00, float* %p, align 4
  ret void
}

attributes #0 = { nounwind uwtable "vector-variants"="_ZGVbN2v_foo" }
