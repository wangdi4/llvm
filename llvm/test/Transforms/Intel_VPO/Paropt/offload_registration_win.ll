; RUN: opt -enable-new-pm=0 -opaque-pointers -vpo-cfg-restructuring -vpo-paropt-prepare -vpo-restore-operands -vpo-cfg-restructuring -vpo-paropt -S %s | FileCheck %s
; RUN: opt -opaque-pointers -passes='function(vpo-cfg-restructuring,vpo-paropt-prepare,vpo-restore-operands,vpo-cfg-restructuring),vpo-paropt' -S %s | FileCheck %s
;
; This tests checks offload registration code generated by the paropt.

; CHECK-DAG: %struct.__tgt_offload_entry = type { ptr, ptr, i64, i32, i32 }
; CHECK-DAG: [[FOONAME:.*]] = internal target_declare unnamed_addr constant [{{[0-9]+}} x i8] c{{.*}}__omp_offloading_{{.*}}_foo_l32\00
; CHECK-DAG: {{.*}} = weak target_declare constant %struct.__tgt_offload_entry { ptr @__omp_offloading_{{.*}}_foo_l32.region_id, ptr [[FOONAME]], i64 0, i32 0, i32 0 }, section "omp_offloading_entries$B", align 32

; CHECK-DAG: [[BARNAME:.*]] = internal target_declare unnamed_addr constant [{{[0-9]+}} x i8] c{{.*}}__omp_offloading_{{.*}}_bar_l40\00
; CHECK-DAG: {{.*}} = weak target_declare constant %struct.__tgt_offload_entry { ptr @__omp_offloading_{{.*}}_bar_l40.region_id, ptr [[BARNAME]], i64 0, i32 0, i32 0 }, section "omp_offloading_entries$B", align 32

; __tgt_register/unregister_lib are generated by clang-offload-wrapper on Windows.
; CHECK-NOT: __tgt_register_lib
; CHECK-NOT: __tgt_unregister_lib

target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-windows"
target device_triples = "x86_64-pc-windows"

define dso_local void @foo() {
entry:
  %0 = call token @llvm.directive.region.entry() [ "DIR.OMP.TARGET"(),
    "QUAL.OMP.OFFLOAD.ENTRY.IDX"(i32 0) ]

  call void @llvm.directive.region.exit(token %0) [ "DIR.OMP.END.TARGET"() ]

  ret void
}

define dso_local void @bar() {
entry:
  %0 = call token @llvm.directive.region.entry() [ "DIR.OMP.TARGET"(),
    "QUAL.OMP.OFFLOAD.ENTRY.IDX"(i32 1) ]

  call void @llvm.directive.region.exit(token %0) [ "DIR.OMP.END.TARGET"() ]

  ret void
}

declare token @llvm.directive.region.entry()
declare void @llvm.directive.region.exit(token)

!omp_offload.info = !{!0, !1}

!0 = !{i32 0, i32 54, i32 -698850821, !"foo", i32 32, i32 0, i32 0}
!1 = !{i32 0, i32 54, i32 -698850821, !"bar", i32 40, i32 1, i32 0}
