; NOTE: Assertions have been autogenerated by utils/intel_update_vplan_checks.py UTC_ARGS: --version 2
; RUN: opt %s -disable-output -passes="hir-ssa-deconstruction,hir-vec-dir-insert,hir-vplan-vec" -vplan-print-after-merge-skeleton 2>&1 | FileCheck %s
; RUN: opt %s -disable-output -passes="vplan-vec" -vplan-force-vf=16 -vplan-print-after-merge-skeleton 2>&1 | FileCheck %s

target triple = "x86_64-unknown-linux-gnu"

define i32 @foo(ptr %a, i64 %n) #0 {
; CHECK-LABEL:  VPlan after merge skeleton creation:
; CHECK:         [[BB0:BB[0-9]+]]: # preds:
; CHECK:          [DA: Uni] pushvf VF=16 UF=1
; CHECK:           [[BB1:BB[0-9]+]]: # preds: [[BB0]]
; CHECK-NEXT:       [DA: Uni] i1 [[VP1:%.*]] = icmp ult i64 [[N0:%.*]] i64 5
; CHECK-NEXT:       [DA: Uni] br i1 [[VP1]], [[MERGE_BLK1:merge.blk[0-9]+]], [[BB2:BB[0-9]+]]
; CHECK:             [[MERGE_BLK0:merge.blk[0-9]+]]: # preds: [[BB7:BB[0-9]+]], [[BB0]]
; CHECK-NEXT:         [DA: Uni] i64 [[VP3:%.*]] = phi-merge  [ i64 live-out0, [[BB7]] ],  [ i64 0, [[BB0]] ]
; CHECK-NEXT:         [DA: Uni] br [[BB8:BB[0-9]+]]
; CHECK-EMPTY:
; CHECK-NEXT:        [[BB8]]: # preds: [[MERGE_BLK0]]
; CHECK-NEXT:         [DA: Uni] i64 [[VP4:%.*]] = sub i64 [[N0]] i64 [[VP3]]
; CHECK-NEXT:         [DA: Uni] i1 [[VP5:%.*]] = icmp ult i64 [[VP4]] i64 5
; CHECK-NEXT:         [DA: Uni] br i1 [[VP5]], [[MERGE_BLK1]], [[BB9:BB[0-9]+]]
; CHECK-EMPTY:
; CHECK-NEXT:        [[BB9]]: # preds: [[BB8]]
; CHECK-NEXT:         [DA: Uni] token [[VP_VPLAN_ADAPTER:%.*]] = vplan-adapter for VPlan {foo:{{.*}}.#{{[0-9]+}}.cloned.masked} i64 [[VP3]]
; CHECK-NEXT:         [DA: Uni] br final.merge
; CHECK-EMPTY:
; CHECK-NEXT:      [[MERGE_BLK1]]: # preds: [[BB8]], [[BB1]]
; CHECK-NEXT:       [DA: Uni] i64 [[VP6:%.*]] = phi-merge  [ i64 [[VP3]], [[BB8]] ],  [ i64 0, [[BB1]] ]
; CHECK-NEXT:       [DA: Uni] br [[BB10:BB[0-9]+]]
; CHECK-EMPTY:
; CHECK-NEXT:      [[BB10]]: # preds: [[MERGE_BLK1]]
; CHECK-NEXT:       [DA: Uni] token [[VP_VPLAN_ADAPTER_1:%.*]] = vplan-adapter for VPlan {{{.*}}.ScalarRemainder} i64 [[VP6]]
; CHECK-NEXT:       [DA: Uni] br final.merge
; CHECK-EMPTY:
; CHECK-NEXT:    final.merge: # preds: [[BB10]], [[BB9]], [[BB7]]
; CHECK-NEXT:     [DA: Uni] i64 [[VP7:%.*]] = phi-merge  [ token [[VP_VPLAN_ADAPTER_1]], [[BB10]] ],  [ token [[VP_VPLAN_ADAPTER]], [[BB9]] ],  [ i64 live-out0, [[BB7]] ]
; CHECK-NEXT:     [DA: Uni] popvf
;
entry:
  br label %header

header:
  %token = call token @llvm.directive.region.entry() [ "DIR.OMP.SIMD"() ]
  br label %body

body:
  %i = phi i64 [ 0, %header ], [ %next, %body ]
  %idx = getelementptr i32, ptr %a, i64 %i
  %0 = load i32, ptr %idx
  %next = add i64 %i, 1
  %cmp = icmp slt i64 %next, %n
  br i1 %cmp, label %body, label %exit

exit:
  call void @llvm.directive.region.exit(token %token) [ "DIR.OMP.END.SIMD"() ]
  br label %end

end:
  ret i32 0
}

declare token @llvm.directive.region.entry()
declare void @llvm.directive.region.exit(token)

attributes #0 = { "target-cpu"="skylake-avx512" }
