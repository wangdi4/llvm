; NOTE: Assertions have been autogenerated by utils/intel_update_vplan_checks.py
; RUN: opt -hir-ssa-deconstruction -hir-temp-cleanup -hir-vec-dir-insert -VPlanDriverHIR -print-after=VPlanDriverHIR -enable-mmindex=1 -disable-output %s 2>&1 | FileCheck %s
;
; The test checks the situation when value of main reduciton in minmax+index idiom is unused after loop.
; In this case, we should generate a correct assignment to the incoming variable.
; CHECK-LABEL: IR Dump After VPlan Vectorization Driver HIR
; CHECK:              BEGIN REGION { modified }
; CHECK-NEXT:              %tgu = (zext.i32.i64(%n) + -1)/u4;
; CHECK-NEXT:              if (0 <u 4 * %tgu)
; CHECK-NEXT:              {
; CHECK-NEXT:                    %red.var = %max.018;
; CHECK-NEXT:                    %red.var1 = %indmax.017;
; CHECK-NEXT:                 + DO i1 = 0, 4 * %tgu + -1, 4   <DO_LOOP> <nounroll> <novectorize>
; CHECK-NEXT:                 |   %.vec = (<4 x i64>*)(%x)[i1 + 1];
; CHECK-NEXT:                 |   %red.var1 = (%.vec > %red.var) ? i1 + <i64 0, i64 1, i64 2, i64 3> + 1 : %red.var1;
; CHECK-NEXT:                 |   %red.var = (%.vec > %red.var) ? %.vec : %red.var;
; CHECK-NEXT:                 + END LOOP
; CHECK-NEXT:                    %max.018 = @llvm.experimental.vector.reduce.smax.v4i64(%red.var);
; CHECK-NEXT:                    %idx.blend = (%max.018 == %red.var) ? %red.var1 : <i64 9223372036854775807, i64 9223372036854775807, i64 9223372036854775807, i64 9223372036854775807>;
; CHECK-NEXT:                    %indmax.017 = @llvm.experimental.vector.reduce.smin.v4i64(%idx.blend);
; CHECK-NEXT:              }
; CHECK:                   + DO i1 = 4 * %tgu, zext.i32.i64(%n) + -2, 1   <DO_LOOP>  <MAX_TC_EST = 3> <nounroll> <novectorize> <max_trip_count = 3>
; CHECK-NEXT:              |   %1 = (%x)[i1 + 1];
; CHECK-NEXT:              |   %indmax.017 = (%1 > %max.018) ? i1 + 1 : %indmax.017;
; CHECK-NEXT:              |   %max.018 = (%1 > %max.018) ? %1 : %max.018;
; CHECK-NEXT:              + END LOOP
; CHECK-NEXT:        END REGION
;
; Function Attrs: nounwind readonly uwtable
define dso_local i64 @_Z3fooPdi(i64* nocapture readonly %x, i32 %n) local_unnamed_addr #0 {
entry:
  br label %for.body.preheader

for.body.preheader:                               ; preds = %entry
  %0 = load i64, i64* %x, align 8
  %wide.trip.count20 = zext i32 %n to i64
  br label %for.body

for.cond.cleanup.loopexit:                        ; preds = %for.body
  %indmax.0.lcssa = phi i64 [ %2, %for.body ]
  ret i64 %indmax.0.lcssa

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 1, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %max.018 = phi i64 [ %0, %for.body.preheader ], [ %3, %for.body ]
  %indmax.017 = phi i64 [ 0, %for.body.preheader ], [ %2, %for.body ]
  %ptridx1 = getelementptr inbounds i64, i64* %x, i64 %indvars.iv
  %1 = load i64, i64* %ptridx1, align 8
  %cmp2 = icmp sgt i64 %1, %max.018
  %2 = select i1 %cmp2, i64 %indvars.iv, i64 %indmax.017
  %3 = select i1 %cmp2, i64 %1, i64 %max.018
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, %wide.trip.count20
  br i1 %exitcond, label %for.cond.cleanup.loopexit, label %for.body
}

