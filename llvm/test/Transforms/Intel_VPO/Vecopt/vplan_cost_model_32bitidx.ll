; NOTE: Assertions have been autogenerated by utils/intel_update_vplan_checks.py
; RUN: opt < %s -hir-ssa-deconstruction -hir-vec-dir-insert -VPlanDriverHIR \
; RUN:     -mtriple=x86_64-unknown-unknown -mcpu=skylake \
; RUN:     -disable-output -vplan-cost-model-print-analysis-for-vf=8 \
; RUN:     | FileCheck %s --check-prefix=VPLAN-HIR-CM-VF8

@arr.i32.1 = common local_unnamed_addr global [1024 x i32] zeroinitializer, align 16

define void @test_fit_32bitindex_gather() local_unnamed_addr #0 {
; VPLAN-HIR-CM-VF8-LABEL:  HIR Cost Model for VPlan test_fit_32bitindex_gather.21 with VF = 8:
; VPLAN-HIR-CM-VF8-NEXT:  Total Cost: 24
; VPLAN-HIR-CM-VF8-NEXT:  Analyzing VPBasicBlock [[BB0:BB[0-9]+]], total cost: 0
; VPLAN-HIR-CM-VF8-NEXT:  Analyzing VPBasicBlock [[BB1:BB[0-9]+]], total cost: 0
; VPLAN-HIR-CM-VF8-NEXT:    Cost Unknown for i32 [[VP__IND_INIT:%.*]] = induction-init{add} i32 0 i32 1
; VPLAN-HIR-CM-VF8-NEXT:    Cost Unknown for i32 [[VP__IND_INIT_STEP:%.*]] = induction-init-step{add} i32 1
; VPLAN-HIR-CM-VF8-NEXT:  Analyzing VPBasicBlock [[BB2:BB[0-9]+]], total cost: 24
; VPLAN-HIR-CM-VF8-NEXT:    Cost Unknown for i32 [[VP0:%.*]] = phi  [ i32 [[VP__IND_INIT]], [[BB1]] ],  [ i32 [[VP1:%.*]], [[BB2]] ]
; VPLAN-HIR-CM-VF8-NEXT:    Cost Unknown for i32 [[VP2:%.*]] = mul i32 3 i32 [[VP0]]
; VPLAN-HIR-CM-VF8-NEXT:    Cost Unknown for i64 [[VP3:%.*]] = sext i32 [[VP2]] to i64
; VPLAN-HIR-CM-VF8-NEXT:    Cost 0 for i32* [[VP4:%.*]] = getelementptr inbounds [1024 x i32]* @arr.i32.1 i64 0 i64 [[VP3]]
; VPLAN-HIR-CM-VF8-NEXT:    Cost 12 for i32 [[VP5:%.*]] = load i32* [[VP4]]
; VPLAN-HIR-CM-VF8-NEXT:    Cost Unknown for i64 [[VP6:%.*]] = sext i32 [[VP5]] to i64
; VPLAN-HIR-CM-VF8-NEXT:    Cost Unknown for i32* [[VP7:%.*]] = inttoptr i64 [[VP6]] to i32*
; VPLAN-HIR-CM-VF8-NEXT:    Cost 12 for i32 [[VP8:%.*]] = load i32* [[VP7]]
; VPLAN-HIR-CM-VF8-NEXT:    Cost Unknown for i32 [[VP1]] = add i32 [[VP0]] i32 [[VP__IND_INIT_STEP]]
; VPLAN-HIR-CM-VF8-NEXT:    Cost Unknown for i1 [[VP9:%.*]] = icmp i32 [[VP1]] i32 340
; VPLAN-HIR-CM-VF8-NEXT:  Analyzing VPBasicBlock [[BB3:BB[0-9]+]], total cost: 0
; VPLAN-HIR-CM-VF8-NEXT:    Cost Unknown for i32 [[VP__IND_FINAL:%.*]] = induction-final{add} i32 0 i32 1
; VPLAN-HIR-CM-VF8-NEXT:  Analyzing VPBasicBlock [[BB4:BB[0-9]+]], total cost: 0
;
entry:
  %tok = call token @llvm.directive.region.entry() [ "DIR.OMP.SIMD"() ]
  br label %for.body

for.body:
  %indvars.iv = phi i32 [ 0, %entry ], [ %indvars.iv.next, %for.body ]
  %indvars.iv64 = sext i32 %indvars.iv to i64
  %ld.idx = getelementptr inbounds [1024 x i32], [1024 x i32]* @arr.i32.1, i64 0, i64 %indvars.iv64
  %ld.addr = load i32, i32* %ld.idx
  %ld.addr.64 = sext i32 %ld.addr to i64
  %ld.addr.64.cast = inttoptr i64 %ld.addr.64 to i32*
  %ld.data = load i32, i32* %ld.addr.64.cast

  %indvars.iv.next = add nuw nsw i32 %indvars.iv, 3
  %exitcond = icmp eq i32 %indvars.iv.next, 1024
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  call void @llvm.directive.region.exit(token %tok) [ "DIR.OMP.END.SIMD"()]
  ret void

}

; Function Attrs: nounwind
declare token @llvm.directive.region.entry() #1

; Function Attrs: nounwind
declare void @llvm.directive.region.exit(token) #1

attributes #1 = { nounwind }
