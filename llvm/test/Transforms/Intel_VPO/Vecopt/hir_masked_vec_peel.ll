; NOTE: Assertions have been autogenerated by utils/intel_update_vplan_checks.py
; RUN: opt -disable-output -enable-new-pm=0 -hir-ssa-deconstruction -hir-temp-cleanup -hir-runtime-dd -hir-vec-dir-insert -hir-vplan-vec -print-after=hir-vplan-vec -vplan-enable-peeling -vplan-enable-vectorized-peel  -vplan-vec-scenario="m8;v8;s1" %s 2>&1 | FileCheck %s
; RUN: opt -disable-output -passes="hir-ssa-deconstruction,hir-temp-cleanup,hir-runtime-dd,hir-vec-dir-insert,hir-vplan-vec" -print-after=hir-vplan-vec -vplan-enable-peeling -vplan-enable-vectorized-peel  -vplan-vec-scenario="m8;v8;s1" %s 2>&1 | FileCheck %s
;
; Test to check that we don't crash when vectorizing peel. The two reasons:
;   - looking at the MainLoop's level when it's detached
;   - induction last value is used while it was not calculated (assert in getUniformScalarRef())
;
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: argmemonly nofree norecurse nosync nounwind writeonly uwtable
define dso_local void @init(i32* nocapture noundef writeonly %a, i32 noundef %n, i32 noundef %seed) local_unnamed_addr #0 {
;
; CHECK:  BEGIN REGION { modified }
; masked peel
; CHECK:        + DO i1 = 0, [[LOOP_UB0:%.*]], 8   <DO_LOOP>  <MAX_TC_EST = 1>  <LEGAL_MAX_TC = 1> <nounroll> <novectorize> <max_trip_count = 1>
; CHECK:        + END LOOP
; CHECK:        [[IND_FINAL0:%.*]] = [[LOOP_UB0]]  +  1
; CHECK:        [[PHI_TEMP0:%.*]] = [[IND_FINAL0]]
; main loop
; CHECK:        + DO i1 = [[PHI_TEMP0]], [[LOOP_UB210:%.*]], 8   <DO_LOOP>  <MAX_TC_EST = 536870911>  <LEGAL_MAX_TC = 536870911> <auto-vectorized> <nounroll> <novectorize>
; CHECK:        + END LOOP
; CHECK:        [[IND_FINAL240:%.*]] = [[LOOP_UB210]]  +  1
; CHECK:        [[PHI_TEMP60:%.*]] = [[IND_FINAL240]]
; CHECK:        [[LB_TMP0:%.*]] = [[PHI_TEMP60]]
; scalar remainder
; CHECK:        + DO i1 = [[LB_TMP0]], zext.i32.i64([[N0:%.*]]) + -1, 1   <DO_LOOP>  <MAX_TC_EST = 7>  <LEGAL_MAX_TC = 7> <nounroll> <novectorize> <max_trip_count = 7>
; CHECK:        + END LOOP
; CHECK:  END REGION
;
; masked peel
; main loop
; scalar remainder
entry:
  %cmp10.not = icmp eq i32 %n, 0
  br i1 %cmp10.not, label %for.end, label %for.body.preheader

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %n to i64
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.preheader
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %0 = trunc i64 %indvars.iv to i32
  %rem = and i32 %0, 1
  %cmp1 = icmp eq i32 %rem, 0
  %1 = sub i32 0, %0
  %.p = select i1 %cmp1, i32 %0, i32 %1
  %2 = add i32 %.p, %seed
  %rem2 = urem i32 %2, 101
  %arrayidx = getelementptr inbounds i32, i32* %a, i64 %indvars.iv
  store i32 %rem2, i32* %arrayidx, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end.loopexit, label %for.body

for.end.loopexit:                                 ; preds = %for.body
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %entry
  ret void
}

attributes #0 = {"unsafe-fp-math"="true" }
