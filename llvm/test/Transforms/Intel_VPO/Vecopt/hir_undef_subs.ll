; NOTE: Assertions have been autogenerated by utils/intel_update_vplan_checks.py
; RUN: opt -disable-output -passes="hir-ssa-deconstruction,hir-temp-cleanup,hir-vec-dir-insert,hir-vplan-vec,print<hir>" -vplan-force-vf=4 %s 2>&1 | FileCheck %s

target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nofree noreturn nosync nounwind uwtable
define void @ocn_diagnostic_solve_() local_unnamed_addr #0 {
; CHECK: <DO_LOOP> <MAX_TC_EST = 536870911> <LEGAL_MAX_TC = 536870911> <auto-vectorized> <nounroll> <novectorize>
;
alloca_0:
  %"addr_a0$_fetch.32[]" = tail call ptr @llvm.intel.subscript.p0.i64.i64.p0.i64(i8 1, i64 undef, i64 undef, ptr elementtype(float) null, i64 0)
  br label %bb1

bb1:                                              ; preds = %bb6, %alloca_0
  %indvars.iv123 = phi i64 [ %indvars.iv.next124, %bb6 ], [ 1, %alloca_0 ]
  %"addr_a0$2_fetch.4[]" = tail call ptr @llvm.intel.subscript.p0.i64.i64.p0.i64(i8 0, i64 undef, i64 undef, ptr elementtype(i32) null, i64 %indvars.iv123)
  %"addr_a0$2_fetch.4[]_fetch.10" = load i32, ptr %"addr_a0$2_fetch.4[]", align 1
  %rel.2 = icmp slt i32 %"addr_a0$2_fetch.4[]_fetch.10", 1
  br i1 %rel.2, label %bb6, label %bb5.preheader120

bb5.preheader120:                                 ; preds = %bb1
  %"addr_a0$_fetch.20[]" = tail call ptr @llvm.intel.subscript.p0.i64.i64.p0.i64(i8 1, i64 undef, i64 undef, ptr elementtype(float) null, i64 %indvars.iv123)
  %0 = add nuw nsw i32 %"addr_a0$2_fetch.4[]_fetch.10", 1
  %wide.trip.count = sext i32 %0 to i64
  br label %bb5

bb5:                                              ; preds = %bb5.preheader120, %bb10
  %"I.0" = phi i32 [ %add.6, %bb10 ], [ 1, %bb5.preheader120 ]
  %indvars.iv.in = call i64 @llvm.ssa.copy.i64(i64 1)
  br label %bb9

bb9:                                              ; preds = %bb5, %bb9
  %indvars.iv = phi i64 [ 1, %bb5 ], [ %indvars.iv.next, %bb9 ]
  %"addr_a0$_fetch.20[][]" = tail call ptr @llvm.intel.subscript.p0.i64.i64.p0.i64(i8 0, i64 undef, i64 undef, ptr elementtype(float) %"addr_a0$_fetch.20[]", i64 %indvars.iv)
  %"addr_a0$_fetch.20[][]_fetch.31" = load float, ptr %"addr_a0$_fetch.20[][]", align 1
  %"addr_a0$_fetch.32[][]" = tail call ptr @llvm.intel.subscript.p0.i64.i64.p0.i64(i8 0, i64 undef, i64 undef, ptr elementtype(float) %"addr_a0$_fetch.32[]", i64 %indvars.iv)
  %"addr_a0$_fetch.32[][]_fetch.43" = load float, ptr %"addr_a0$_fetch.32[][]", align 1
  %add.3 = fadd reassoc ninf nsz arcp contract afn float %"addr_a0$_fetch.20[][]_fetch.31", %"addr_a0$_fetch.32[][]_fetch.43"
  store float %add.3, ptr %"addr_a0$_fetch.20[][]", align 1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, %wide.trip.count
  %indvars.iv.in125 = call i64 @llvm.ssa.copy.i64(i64 %indvars.iv.next)
  br i1 %exitcond, label %bb10, label %bb9

bb10:                                             ; preds = %bb9
  %add.6 = add nuw nsw i32 %"I.0", 1
  %exitcond122 = icmp eq i32 %add.6, %0
  %"I.0.in" = call i32 @llvm.ssa.copy.i32(i32 %add.6)
  br i1 %exitcond122, label %bb6.loopexit, label %bb5

bb6.loopexit:                                     ; preds = %bb10
  br label %bb6

bb6:                                              ; preds = %bb6.loopexit, %bb1
  %indvars.iv.next124 = add nuw i64 %indvars.iv123, 1
  br label %bb1
}

; Function Attrs: nofree nosync nounwind readnone speculatable
declare ptr @llvm.intel.subscript.p0.i64.i64.p0.i64(i8, i64, i64, ptr, i64) #1

; Function Attrs: nofree nosync nounwind readnone speculatable

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i32 @llvm.ssa.copy.i32(i32 returned) #2

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i64 @llvm.ssa.copy.i64(i64 returned) #2

attributes #0 = { nofree noreturn nosync nounwind uwtable "denormal-fp-math"="preserve_sign,preserve_sign" "frame-pointer"="none" "intel-lang"="fortran" "loopopt-pipeline"="full" "min-legal-vector-width"="0" "pre_loopopt" "target-cpu"="corei7-avx" "target-features"="+avx,+crc32,+cx16,+cx8,+fxsr,+mmx,+pclmul,+popcnt,+sahf,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsaveopt" }
attributes #1 = { nofree nosync nounwind readnone speculatable }
attributes #2 = { nofree nosync nounwind readnone willreturn }


