; NOTE: Assertions have been autogenerated by utils/intel_update_vplan_checks.py
; RUN: opt %s -hir-ssa-deconstruction -hir-temp-cleanup -hir-vec-dir-insert -hir-vplan-vec -print-after=hir-vplan-vec -disable-output 2>&1 | FileCheck %s

define i32 @main() {
; CHECK:       BEGIN REGION { modified }
; CHECK-NEXT:        + DO i1 = 0, 19999, 8   <DO_LOOP> <auto-vectorized> <nounroll> <novectorize>
; CHECK-NEXT:        |   [[DOTVEC0:%.*]] = (<4 x i64>*)([[DOTLCSSA680:%.*]])[i1]
; CHECK-NEXT:        |   [[DOTVEC30:%.*]] = (<4 x i64>*)([[DOTLCSSA680]])[i1]
; CHECK-NEXT:        |   [[DOTVEC40:%.*]] = [[DOTVEC0]]  ^  [[DOTVEC30]]
; CHECK-NEXT:        |   (<4 x i64>*)([[DOTLCSSA680]])[i1] = [[DOTVEC40]]
; CHECK-NEXT:        |   [[DOTVEC50:%.*]] = (<4 x i64>*)([[DOTLCSSA680]])[i1 + 4]
; CHECK-NEXT:        |   [[DOTVEC60:%.*]] = (<4 x i64>*)([[DOTLCSSA680]])[i1 + 4]
; CHECK-NEXT:        |   [[DOTVEC70:%.*]] = [[DOTVEC50]]  ^  [[DOTVEC60]]
; CHECK-NEXT:        |   (<4 x i64>*)([[DOTLCSSA680]])[i1 + 4] = [[DOTVEC70]]
; CHECK-NEXT:        + END LOOP
; CHECK:       END REGION
;
entry:
  %b = alloca i64*, align 8
  %0 = load i64*, i64** %b, align 8
  br label %for.end

for.end:                                          ; preds = %entry
  %.lcssa68 = phi i64* [ %0, %entry ]
  br label %for.body30

for.body30:                                       ; preds = %for.body30, %for.end
  %i.463 = phi i64 [ 0, %for.end ], [ %inc36, %for.body30 ]
  %arrayidx31 = getelementptr inbounds i64, i64* %.lcssa68, i64 %i.463
  %1 = load i64, i64* %arrayidx31, align 8
  %2 = load i64, i64* %arrayidx31, align 8
  %xor33 = xor i64 %2, %1
  store i64 %xor33, i64* %arrayidx31, align 8
  %inc36 = add nuw nsw i64 %i.463, 1
  %exitcond.not = icmp eq i64 %inc36, 20000
  br i1 %exitcond.not, label %for.end37, label %for.body30, !llvm.loop !0

for.end37:                                        ; preds = %for.body30
  ret i32 0
}

!0 = distinct !{!0, !1, !2, !3, !4, !5}
!1 = !{!"llvm.loop.mustprogress"}
!2 = !{!"llvm.loop.vectorize.width", i32 4}
!3 = !{!"llvm.loop.vectorize.scalable.enable", i1 false}
!4 = !{!"llvm.loop.interleave.count", i32 2}
!5 = !{!"llvm.loop.vectorize.enable", i1 true}
