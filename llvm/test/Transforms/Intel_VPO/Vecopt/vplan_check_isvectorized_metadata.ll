; NOTE: Assertions have been autogenerated by utils/intel_update_vplan_checks.py
; Tests whether we emit the right metadata in vector and scalar loops.

; RUN: opt < %s -S -vplan-vec -vplan-force-vf=2 | FileCheck %s

target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@A = dso_local local_unnamed_addr global [1024 x i32] zeroinitializer, align 16
@B = dso_local local_unnamed_addr global [1024 x i32] zeroinitializer, align 16
@C = dso_local local_unnamed_addr global [1024 x i32] zeroinitializer, align 16

declare token @llvm.directive.region.entry() nounwind
declare void @llvm.directive.region.exit(token) nounwind

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local void @test() local_unnamed_addr {
; CHECK:    br i1 [[TMP7:%.*]], label [[VPLANNEDBB0:%.*]], label [[VECTOR_BODY0:%.*]], !llvm.loop !0
; CHECK:    br i1 [[EXITCOND0:%.*]], label [[FOR_END0:%.*]], label [[FOR_BODY0:%.*]], !llvm.loop !2
;
; CHECK: !0 = distinct !{!0, !1}
; CHECK: !1 = !{!"llvm.loop.isvectorized", i32 1}
; CHECK: !2 = distinct !{!2, !3, !1}
; CHECK: !3 = !{!"llvm.loop.vectorize.enable", i32 1}
;
entry:
  br label %preheader

preheader:
  %tok = call token @llvm.directive.region.entry() [ "DIR.OMP.SIMD"() ]
  br label %for.body

for.body:
  %indvars.iv = phi i64 [ 0, %preheader ], [ %indvars.iv.next, %for.body ]
  %arrayidx = getelementptr inbounds [1024 x i32], [1024 x i32]* @B, i64 0, i64 %indvars.iv
  %0 = load i32, i32* %arrayidx, align 4
  %arrayidx2 = getelementptr inbounds [1024 x i32], [1024 x i32]* @C, i64 0, i64 %indvars.iv
  %1 = load i32, i32* %arrayidx2, align 4
  %add = add nsw i32 %1, %0
  %arrayidx4 = getelementptr inbounds [1024 x i32], [1024 x i32]* @A, i64 0, i64 %indvars.iv
  store i32 %add, i32* %arrayidx4, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 1024
  br i1 %exitcond, label %for.end, label %for.body

for.end:
  call void @llvm.directive.region.exit(token %tok) [ "DIR.OMP.END.SIMD"()]
  br label %exit

exit:
  ret void
}
