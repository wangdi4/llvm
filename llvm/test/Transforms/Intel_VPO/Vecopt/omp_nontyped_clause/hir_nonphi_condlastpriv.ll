; NOTE: Assertions have been autogenerated by utils/intel_update_vplan_checks.py

; Test to show the bug in recognition of implicit last privates.
; RUN: opt -enable-new-pm=0 -disable-output -hir-ssa-deconstruction -hir-temp-cleanup -hir-vplan-vec -print-after=hir-vplan-vec %s 2>&1 | FileCheck %s
; RUN: opt -passes="hir-ssa-deconstruction,hir-temp-cleanup,hir-vplan-vec,print<hir>" -disable-output %s 2>&1 | FileCheck %s

target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Incoming HIR: conditionally incremented pointer
; BEGIN REGION { }
;       [[TMP0:%.*]] = @llvm.directive.region.entry()
;       [[TMP1:%.*]] = &(([[P0:%.*]])[0])
;
;       + DO i1 = 0, 1023, 1   <DO_LOOP> <simd>
;       |   [[SPEC_SELECT_IDX0:%.*]] = (i1 == 9) ? 4 : 0
;       |   [[TMP1]] = &(([[TMP1]])[%spec.select.idx])
;       + END LOOP
;
;       (null)[0] = &(([[TMP1]])[0])
;       @llvm.directive.region.exit([[TMP0]])
;       ret
; END REGION

; Function Attrs: nounwind
declare token @llvm.directive.region.entry() #0

; Function Attrs: nounwind
declare void @llvm.directive.region.exit(token) #0

define dso_local void @_Z27CQ417746_private_simple_ptrv(i16* %p) local_unnamed_addr #1 {
; CHECK:             + DO i1 = 0, 1023, 1   <DO_LOOP> <simd> <vectorize>
entry:
  br label %DIR.OMP.SIMD.1

DIR.OMP.SIMD.1:
  %0 = call token @llvm.directive.region.entry() #0 [ "DIR.OMP.SIMD"(), "QUAL.OMP.PRIVATE"(i16** null), "QUAL.OMP.LINEAR:IV"(i32* undef, i32 1) ]
  br label %omp.inner.for.body.i.i

omp.inner.for.body.i.i:
  %1 = phi i16* [ %spec.select, %omp.inner.for.body.i.i ], [ %p, %DIR.OMP.SIMD.1 ]
  %.omp.iv.i.i.local.021 = phi i32 [ %add4.i.i, %omp.inner.for.body.i.i ], [ 0, %DIR.OMP.SIMD.1 ]
  %cmp3.i.i = icmp eq i32 %.omp.iv.i.i.local.021, 9
  %spec.select.idx = select i1 %cmp3.i.i, i64 4, i64 0
  %spec.select = getelementptr i16, i16* %1, i64 %spec.select.idx
  %add4.i.i = add nuw nsw i32 %.omp.iv.i.i.local.021, 1
  %exitcond39 = icmp eq i32 %add4.i.i, 1024
  br i1 %exitcond39, label %DIR.OMP.END.SIMD.2, label %omp.inner.for.body.i.i

DIR.OMP.END.SIMD.2:
  %spec.select.lcssa = phi i16* [ %spec.select, %omp.inner.for.body.i.i ]
  store i16* %spec.select.lcssa, i16** null, align 8
  br label %DIR.OMP.END.SIMD.243

DIR.OMP.END.SIMD.243:
  call void @llvm.directive.region.exit(token %0) #0 [ "DIR.OMP.END.SIMD"() ]
  ret void
}

attributes #0 = { nounwind }
attributes #1 = { "unsafe-fp-math"="true" }

