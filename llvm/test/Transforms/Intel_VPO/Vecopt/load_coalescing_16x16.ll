
; RUN: opt -passes='load-coalescing' -mtriple=x86_64-unknown-linux-gnu -mcpu=skylake-avx512 -S < %s 2>&1 | FileCheck %s

; source_filename = "x264_pixel_satd_16x16.ll"

; Function Attrs: nounwind readonly uwtable
define internal i32 @x264_pixel_satd_16x16(ptr nocapture readonly %pix1, i32 %i_pix1, ptr nocapture readonly %pix2, i32 %i_pix2) #8 {
entry:
  %idx.ext.i = sext i32 %i_pix1 to i64
  %idx.ext63.i = sext i32 %i_pix2 to i64
  %alloca = alloca [16 x [8 x i32]], align 4
  %alloca842 = alloca <8 x i32>, align 16
  %alloca843 = alloca <8 x i32>, align 16
  %alloca844 = alloca <8 x i32>, align 16
  %alloca845 = alloca <8 x i32>, align 16
  %arrayIdx = getelementptr inbounds i8, ptr %pix1, i64 4
  %arrayIdx924 = getelementptr inbounds i8, ptr %pix2, i64 4
  %arrayIdx926 = getelementptr inbounds i8, ptr %pix1, i64 1
  %arrayIdx928 = getelementptr inbounds i8, ptr %pix2, i64 1
  %arrayIdx930 = getelementptr inbounds i8, ptr %pix1, i64 5
  %arrayIdx932 = getelementptr inbounds i8, ptr %pix2, i64 5
  %arrayIdx934 = getelementptr inbounds i8, ptr %pix1, i64 2
  %arrayIdx936 = getelementptr inbounds i8, ptr %pix2, i64 2
  %arrayIdx938 = getelementptr inbounds i8, ptr %pix1, i64 6
  %arrayIdx940 = getelementptr inbounds i8, ptr %pix2, i64 6
  %arrayIdx942 = getelementptr inbounds i8, ptr %pix1, i64 3
  %arrayIdx944 = getelementptr inbounds i8, ptr %pix2, i64 3
  %arrayIdx946 = getelementptr inbounds i8, ptr %pix1, i64 7
  %arrayIdx948 = getelementptr inbounds i8, ptr %pix2, i64 7
  %arrayIdx952 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 0, i64 2
  %arrayIdx970 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 0, i64 1
  %arrayIdx988 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 0, i64 3
  %arrayIdx1005 = getelementptr inbounds i8, ptr %pix1, i64 8
  %arrayIdx1007 = getelementptr inbounds i8, ptr %pix2, i64 8
  %arrayIdx1009 = getelementptr inbounds i8, ptr %pix1, i64 12
  %arrayIdx1011 = getelementptr inbounds i8, ptr %pix2, i64 12
  %arrayIdx1013 = getelementptr inbounds i8, ptr %pix1, i64 9
  %arrayIdx1015 = getelementptr inbounds i8, ptr %pix2, i64 9
  %arrayIdx1017 = getelementptr inbounds i8, ptr %pix1, i64 13
  %arrayIdx1019 = getelementptr inbounds i8, ptr %pix2, i64 13
  %arrayIdx1021 = getelementptr inbounds i8, ptr %pix1, i64 10
  %arrayIdx1023 = getelementptr inbounds i8, ptr %pix2, i64 10
  %arrayIdx1025 = getelementptr inbounds i8, ptr %pix1, i64 14
  %arrayIdx1027 = getelementptr inbounds i8, ptr %pix2, i64 14
  %arrayIdx1029 = getelementptr inbounds i8, ptr %pix1, i64 11
  %0 = load <4 x i8>, ptr %pix1, align 1, !tbaa !12
  %1 = load <4 x i8>, ptr %arrayIdx1005, align 1, !tbaa !12
  %SplitLoadShuffle6884 = shufflevector <4 x i8> %0, <4 x i8> %1, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %arrayIdx1031 = getelementptr inbounds i8, ptr %pix2, i64 11
  %2 = load <4 x i8>, ptr %pix2, align 1, !tbaa !12
  %3 = load <4 x i8>, ptr %arrayIdx1007, align 1, !tbaa !12
  %SplitLoadShuffle6882 = shufflevector <4 x i8> %2, <4 x i8> %3, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %arrayIdx1033 = getelementptr inbounds i8, ptr %pix1, i64 15
  %4 = load <4 x i8>, ptr %arrayIdx, align 1, !tbaa !12
  %5 = load <4 x i8>, ptr %arrayIdx1009, align 1, !tbaa !12
  %SplitLoadShuffle = shufflevector <4 x i8> %4, <4 x i8> %5, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %arrayIdx1035 = getelementptr inbounds i8, ptr %pix2, i64 15
  %6 = load <4 x i8>, ptr %arrayIdx924, align 1, !tbaa !12
  %7 = load <4 x i8>, ptr %arrayIdx1011, align 1, !tbaa !12
  %SplitLoadShuffle6883 = shufflevector <4 x i8> %6, <4 x i8> %7, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %arrayIdx1038 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 0, i64 4
  %8 = zext <8 x i8> %SplitLoadShuffle6884 to <8 x i32>
  %9 = zext <8 x i8> %SplitLoadShuffle to <8 x i32>
  %10 = zext <8 x i8> %SplitLoadShuffle6883 to <8 x i32>
  %11 = zext <8 x i8> %SplitLoadShuffle6882 to <8 x i32>
  %12 = shl nuw nsw <8 x i32> %9, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %13 = shl nuw nsw <8 x i32> %10, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %14 = sub nsw <8 x i32> %12, %11
  %15 = sub nsw <8 x i32> %14, %13
  %16 = add nsw <8 x i32> %15, %8
  %arrayIdx1040 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 0, i64 6
  %arrayIdx1058 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 0, i64 5
  %arrayIdx1076 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 0, i64 7
  %17 = extractelement <8 x i32> %16, i32 3
  %18 = insertelement <8 x i32> undef, i32 %17, i32 0
  %19 = extractelement <8 x i32> %16, i32 0
  %20 = insertelement <8 x i32> %18, i32 %19, i32 1
  %21 = insertelement <8 x i32> %20, i32 %19, i32 2
  %22 = insertelement <8 x i32> %21, i32 %19, i32 3
  %23 = extractelement <8 x i32> %16, i32 7
  %24 = insertelement <8 x i32> %22, i32 %23, i32 4
  %25 = extractelement <8 x i32> %16, i32 4
  %26 = insertelement <8 x i32> %24, i32 %25, i32 5
  %27 = insertelement <8 x i32> %26, i32 %25, i32 6
  %28 = insertelement <8 x i32> %27, i32 %25, i32 7
  %29 = extractelement <8 x i32> %16, i32 1
  %30 = insertelement <8 x i32> undef, i32 %29, i32 0
  %31 = insertelement <8 x i32> %30, i32 %17, i32 1
  %32 = insertelement <8 x i32> %31, i32 %29, i32 2
  %33 = insertelement <8 x i32> %32, i32 %29, i32 3
  %34 = extractelement <8 x i32> %16, i32 5
  %35 = insertelement <8 x i32> %33, i32 %34, i32 4
  %36 = insertelement <8 x i32> %35, i32 %23, i32 5
  %37 = insertelement <8 x i32> %36, i32 %34, i32 6
  %38 = insertelement <8 x i32> %37, i32 %34, i32 7
  %39 = add nsw <8 x i32> %28, %38
  %40 = sub nsw <8 x i32> %28, %38
  %41 = select <8 x i1> <i1 true, i1 false, i1 true, i1 false, i1 true, i1 false, i1 true, i1 false>, <8 x i32> %39, <8 x i32> %40
  %42 = extractelement <8 x i32> %16, i32 2
  %43 = insertelement <8 x i32> undef, i32 %42, i32 0
  %44 = insertelement <8 x i32> %43, i32 %42, i32 1
  %45 = insertelement <8 x i32> %44, i32 %17, i32 2
  %46 = insertelement <8 x i32> %45, i32 %42, i32 3
  %47 = extractelement <8 x i32> %16, i32 6
  %48 = insertelement <8 x i32> %46, i32 %47, i32 4
  %49 = insertelement <8 x i32> %48, i32 %47, i32 5
  %50 = insertelement <8 x i32> %49, i32 %23, i32 6
  %51 = insertelement <8 x i32> %50, i32 %47, i32 7
  %52 = add nsw <8 x i32> %41, %51
  %53 = sub nsw <8 x i32> %41, %51
  %54 = select <8 x i1> <i1 true, i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false>, <8 x i32> %52, <8 x i32> %53
  %55 = sub <8 x i32> %54, %16
  %56 = add <8 x i32> %54, %16
  %57 = select <8 x i1> <i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false, i1 true>, <8 x i32> %56, <8 x i32> %55
  store <8 x i32> %57, ptr %alloca, align 4
  %arrayIdx1093 = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext.i
  %arrayIdx1095 = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext63.i
  %58 = add nsw i64 %idx.ext.i, 4
  %arrayIdx1097 = getelementptr inbounds i8, ptr %pix1, i64 %58
  %59 = add nsw i64 %idx.ext63.i, 4
  %arrayIdx1099 = getelementptr inbounds i8, ptr %pix2, i64 %59
  %60 = add nsw i64 %idx.ext.i, 1
  %arrayIdx1101 = getelementptr inbounds i8, ptr %pix1, i64 %60
  %61 = add nsw i64 %idx.ext63.i, 1
  %arrayIdx1103 = getelementptr inbounds i8, ptr %pix2, i64 %61
  %62 = add nsw i64 %idx.ext.i, 5
  %arrayIdx1105 = getelementptr inbounds i8, ptr %pix1, i64 %62
  %63 = add nsw i64 %idx.ext63.i, 5
  %arrayIdx1107 = getelementptr inbounds i8, ptr %pix2, i64 %63
  %64 = add nsw i64 %idx.ext.i, 2
  %arrayIdx1109 = getelementptr inbounds i8, ptr %pix1, i64 %64
  %65 = add nsw i64 %idx.ext63.i, 2
  %arrayIdx1111 = getelementptr inbounds i8, ptr %pix2, i64 %65
  %66 = add nsw i64 %idx.ext.i, 6
  %arrayIdx1113 = getelementptr inbounds i8, ptr %pix1, i64 %66
  %67 = add nsw i64 %idx.ext63.i, 6
  %arrayIdx1115 = getelementptr inbounds i8, ptr %pix2, i64 %67
  %68 = add nsw i64 %idx.ext.i, 3
  %arrayIdx1117 = getelementptr inbounds i8, ptr %pix1, i64 %68
  %69 = add nsw i64 %idx.ext63.i, 3
  %arrayIdx1119 = getelementptr inbounds i8, ptr %pix2, i64 %69
  %70 = add nsw i64 %idx.ext.i, 7
  %arrayIdx1121 = getelementptr inbounds i8, ptr %pix1, i64 %70
  %71 = add nsw i64 %idx.ext63.i, 7
  %arrayIdx1123 = getelementptr inbounds i8, ptr %pix2, i64 %71
  %arrayIdx1126 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 1, i64 0
  %arrayIdx1144 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 1, i64 2
  %arrayIdx1162 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 1, i64 1
  %arrayIdx1180 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 1, i64 3
  %72 = add nsw i64 %idx.ext.i, 8
  %arrayIdx1197 = getelementptr inbounds i8, ptr %pix1, i64 %72
  %73 = add nsw i64 %idx.ext63.i, 8
  %arrayIdx1199 = getelementptr inbounds i8, ptr %pix2, i64 %73
  %74 = add nsw i64 %idx.ext.i, 12
  %arrayIdx1201 = getelementptr inbounds i8, ptr %pix1, i64 %74
  %75 = add nsw i64 %idx.ext63.i, 12
  %arrayIdx1203 = getelementptr inbounds i8, ptr %pix2, i64 %75
  %76 = add nsw i64 %idx.ext.i, 9
  %arrayIdx1205 = getelementptr inbounds i8, ptr %pix1, i64 %76
  %77 = add nsw i64 %idx.ext63.i, 9
  %arrayIdx1207 = getelementptr inbounds i8, ptr %pix2, i64 %77
  %78 = add nsw i64 %idx.ext.i, 13
  %arrayIdx1209 = getelementptr inbounds i8, ptr %pix1, i64 %78
  %79 = add nsw i64 %idx.ext63.i, 13
  %arrayIdx1211 = getelementptr inbounds i8, ptr %pix2, i64 %79
  %80 = add nsw i64 %idx.ext.i, 10
  %arrayIdx1213 = getelementptr inbounds i8, ptr %pix1, i64 %80
  %81 = add nsw i64 %idx.ext63.i, 10
  %arrayIdx1215 = getelementptr inbounds i8, ptr %pix2, i64 %81
  %82 = add nsw i64 %idx.ext.i, 14
  %arrayIdx1217 = getelementptr inbounds i8, ptr %pix1, i64 %82
  %83 = add nsw i64 %idx.ext63.i, 14
  %arrayIdx1219 = getelementptr inbounds i8, ptr %pix2, i64 %83
  %84 = add nsw i64 %idx.ext.i, 11
  %arrayIdx1221 = getelementptr inbounds i8, ptr %pix1, i64 %84
  %85 = load <4 x i8>, ptr %arrayIdx1093, align 1, !tbaa !12
  %86 = load <4 x i8>, ptr %arrayIdx1197, align 1, !tbaa !12
  %SplitLoadShuffle6933 = shufflevector <4 x i8> %85, <4 x i8> %86, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %87 = add nsw i64 %idx.ext63.i, 11
  %arrayIdx1223 = getelementptr inbounds i8, ptr %pix2, i64 %87
  %88 = load <4 x i8>, ptr %arrayIdx1095, align 1, !tbaa !12
  %89 = load <4 x i8>, ptr %arrayIdx1199, align 1, !tbaa !12
  %SplitLoadShuffle6931 = shufflevector <4 x i8> %88, <4 x i8> %89, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %90 = add nsw i64 %idx.ext.i, 15
  %arrayIdx1225 = getelementptr inbounds i8, ptr %pix1, i64 %90
  %91 = load <4 x i8>, ptr %arrayIdx1097, align 1, !tbaa !12
  %92 = load <4 x i8>, ptr %arrayIdx1201, align 1, !tbaa !12
  %SplitLoadShuffle6930 = shufflevector <4 x i8> %91, <4 x i8> %92, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %93 = add nsw i64 %idx.ext63.i, 15
  %arrayIdx1227 = getelementptr inbounds i8, ptr %pix2, i64 %93
  %94 = load <4 x i8>, ptr %arrayIdx1099, align 1, !tbaa !12
  %95 = load <4 x i8>, ptr %arrayIdx1203, align 1, !tbaa !12
  %SplitLoadShuffle6932 = shufflevector <4 x i8> %94, <4 x i8> %95, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %arrayIdx1230 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 1, i64 4
  %96 = zext <8 x i8> %SplitLoadShuffle6933 to <8 x i32>
  %97 = zext <8 x i8> %SplitLoadShuffle6930 to <8 x i32>
  %98 = zext <8 x i8> %SplitLoadShuffle6932 to <8 x i32>
  %99 = zext <8 x i8> %SplitLoadShuffle6931 to <8 x i32>
  %100 = shl nuw nsw <8 x i32> %97, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %101 = shl nuw nsw <8 x i32> %98, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %102 = sub nsw <8 x i32> %100, %99
  %103 = sub nsw <8 x i32> %102, %101
  %104 = add nsw <8 x i32> %103, %96
  %arrayIdx1248 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 1, i64 6
  %arrayIdx1266 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 1, i64 5
  %arrayIdx1284 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 1, i64 7
  %105 = extractelement <8 x i32> %104, i32 3
  %106 = insertelement <8 x i32> undef, i32 %105, i32 0
  %107 = extractelement <8 x i32> %104, i32 0
  %108 = insertelement <8 x i32> %106, i32 %107, i32 1
  %109 = insertelement <8 x i32> %108, i32 %107, i32 2
  %110 = insertelement <8 x i32> %109, i32 %107, i32 3
  %111 = extractelement <8 x i32> %104, i32 7
  %112 = insertelement <8 x i32> %110, i32 %111, i32 4
  %113 = extractelement <8 x i32> %104, i32 4
  %114 = insertelement <8 x i32> %112, i32 %113, i32 5
  %115 = insertelement <8 x i32> %114, i32 %113, i32 6
  %116 = insertelement <8 x i32> %115, i32 %113, i32 7
  %117 = extractelement <8 x i32> %104, i32 1
  %118 = insertelement <8 x i32> undef, i32 %117, i32 0
  %119 = insertelement <8 x i32> %118, i32 %105, i32 1
  %120 = insertelement <8 x i32> %119, i32 %117, i32 2
  %121 = insertelement <8 x i32> %120, i32 %117, i32 3
  %122 = extractelement <8 x i32> %104, i32 5
  %123 = insertelement <8 x i32> %121, i32 %122, i32 4
  %124 = insertelement <8 x i32> %123, i32 %111, i32 5
  %125 = insertelement <8 x i32> %124, i32 %122, i32 6
  %126 = insertelement <8 x i32> %125, i32 %122, i32 7
  %127 = add nsw <8 x i32> %116, %126
  %128 = sub nsw <8 x i32> %116, %126
  %129 = select <8 x i1> <i1 true, i1 false, i1 true, i1 false, i1 true, i1 false, i1 true, i1 false>, <8 x i32> %127, <8 x i32> %128
  %130 = extractelement <8 x i32> %104, i32 2
  %131 = insertelement <8 x i32> undef, i32 %130, i32 0
  %132 = insertelement <8 x i32> %131, i32 %130, i32 1
  %133 = insertelement <8 x i32> %132, i32 %105, i32 2
  %134 = insertelement <8 x i32> %133, i32 %130, i32 3
  %135 = extractelement <8 x i32> %104, i32 6
  %136 = insertelement <8 x i32> %134, i32 %135, i32 4
  %137 = insertelement <8 x i32> %136, i32 %135, i32 5
  %138 = insertelement <8 x i32> %137, i32 %111, i32 6
  %139 = insertelement <8 x i32> %138, i32 %135, i32 7
  %140 = add nsw <8 x i32> %129, %139
  %141 = sub nsw <8 x i32> %129, %139
  %142 = select <8 x i1> <i1 true, i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false>, <8 x i32> %140, <8 x i32> %141
  %143 = sub <8 x i32> %142, %104
  %144 = add <8 x i32> %142, %104
  %145 = select <8 x i1> <i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false, i1 true>, <8 x i32> %144, <8 x i32> %143
  store <8 x i32> %145, ptr %arrayIdx1126, align 4
  %146 = shl nsw i64 %idx.ext.i, 1
  %arrayIdx1301 = getelementptr inbounds i8, ptr %pix1, i64 %146
  %147 = shl nsw i64 %idx.ext63.i, 1
  %arrayIdx1303 = getelementptr inbounds i8, ptr %pix2, i64 %147
  %148 = add nsw i64 %146, 4
  %arrayIdx1305 = getelementptr inbounds i8, ptr %pix1, i64 %148
  %149 = add nsw i64 %147, 4
  %arrayIdx1307 = getelementptr inbounds i8, ptr %pix2, i64 %149
  %150 = or i64 %146, 1
  %arrayIdx1309 = getelementptr inbounds i8, ptr %pix1, i64 %150
  %151 = or i64 %147, 1
  %arrayIdx1311 = getelementptr inbounds i8, ptr %pix2, i64 %151
  %152 = add nsw i64 %146, 5
  %arrayIdx1313 = getelementptr inbounds i8, ptr %pix1, i64 %152
  %153 = add nsw i64 %147, 5
  %arrayIdx1315 = getelementptr inbounds i8, ptr %pix2, i64 %153
  %154 = add nsw i64 %146, 2
  %arrayIdx1317 = getelementptr inbounds i8, ptr %pix1, i64 %154
  %155 = add nsw i64 %147, 2
  %arrayIdx1319 = getelementptr inbounds i8, ptr %pix2, i64 %155
  %156 = add nsw i64 %146, 6
  %arrayIdx1321 = getelementptr inbounds i8, ptr %pix1, i64 %156
  %157 = add nsw i64 %147, 6
  %arrayIdx1323 = getelementptr inbounds i8, ptr %pix2, i64 %157
  %158 = add nsw i64 %146, 3
  %arrayIdx1325 = getelementptr inbounds i8, ptr %pix1, i64 %158
  %159 = add nsw i64 %147, 3
  %arrayIdx1327 = getelementptr inbounds i8, ptr %pix2, i64 %159
  %160 = add nsw i64 %146, 7
  %arrayIdx1329 = getelementptr inbounds i8, ptr %pix1, i64 %160
  %161 = add nsw i64 %147, 7
  %arrayIdx1331 = getelementptr inbounds i8, ptr %pix2, i64 %161
  %arrayIdx1334 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 2, i64 0
  %arrayIdx1352 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 2, i64 2
  %arrayIdx1370 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 2, i64 1
  %arrayIdx1388 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 2, i64 3
  %162 = add nsw i64 %146, 8
  %arrayIdx1405 = getelementptr inbounds i8, ptr %pix1, i64 %162
  %163 = add nsw i64 %147, 8
  %arrayIdx1407 = getelementptr inbounds i8, ptr %pix2, i64 %163
  %164 = add nsw i64 %146, 12
  %arrayIdx1409 = getelementptr inbounds i8, ptr %pix1, i64 %164
  %165 = add nsw i64 %147, 12
  %arrayIdx1411 = getelementptr inbounds i8, ptr %pix2, i64 %165
  %166 = add nsw i64 %146, 9
  %arrayIdx1413 = getelementptr inbounds i8, ptr %pix1, i64 %166
  %167 = add nsw i64 %147, 9
  %arrayIdx1415 = getelementptr inbounds i8, ptr %pix2, i64 %167
  %168 = add nsw i64 %146, 13
  %arrayIdx1417 = getelementptr inbounds i8, ptr %pix1, i64 %168
  %169 = add nsw i64 %147, 13
  %arrayIdx1419 = getelementptr inbounds i8, ptr %pix2, i64 %169
  %170 = add nsw i64 %146, 10
  %arrayIdx1421 = getelementptr inbounds i8, ptr %pix1, i64 %170
  %171 = add nsw i64 %147, 10
  %arrayIdx1423 = getelementptr inbounds i8, ptr %pix2, i64 %171
  %172 = add nsw i64 %146, 14
  %arrayIdx1425 = getelementptr inbounds i8, ptr %pix1, i64 %172
  %173 = add nsw i64 %147, 14
  %arrayIdx1427 = getelementptr inbounds i8, ptr %pix2, i64 %173
  %174 = add nsw i64 %146, 11
  %arrayIdx1429 = getelementptr inbounds i8, ptr %pix1, i64 %174
  %175 = load <4 x i8>, ptr %arrayIdx1301, align 1, !tbaa !12
  %176 = load <4 x i8>, ptr %arrayIdx1405, align 1, !tbaa !12
  %SplitLoadShuffle6982 = shufflevector <4 x i8> %175, <4 x i8> %176, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %177 = add nsw i64 %147, 11
  %arrayIdx1431 = getelementptr inbounds i8, ptr %pix2, i64 %177
  %178 = load <4 x i8>, ptr %arrayIdx1303, align 1, !tbaa !12
  %179 = load <4 x i8>, ptr %arrayIdx1407, align 1, !tbaa !12
  %SplitLoadShuffle6980 = shufflevector <4 x i8> %178, <4 x i8> %179, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %180 = add nsw i64 %146, 15
  %arrayIdx1433 = getelementptr inbounds i8, ptr %pix1, i64 %180
  %181 = load <4 x i8>, ptr %arrayIdx1305, align 1, !tbaa !12
  %182 = load <4 x i8>, ptr %arrayIdx1409, align 1, !tbaa !12
  %SplitLoadShuffle6979 = shufflevector <4 x i8> %181, <4 x i8> %182, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %183 = add nsw i64 %147, 15
  %arrayIdx1435 = getelementptr inbounds i8, ptr %pix2, i64 %183
  %184 = load <4 x i8>, ptr %arrayIdx1307, align 1, !tbaa !12
  %185 = load <4 x i8>, ptr %arrayIdx1411, align 1, !tbaa !12
  %SplitLoadShuffle6981 = shufflevector <4 x i8> %184, <4 x i8> %185, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %arrayIdx1438 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 2, i64 4
  %186 = zext <8 x i8> %SplitLoadShuffle6982 to <8 x i32>
  %187 = zext <8 x i8> %SplitLoadShuffle6979 to <8 x i32>
  %188 = zext <8 x i8> %SplitLoadShuffle6981 to <8 x i32>
  %189 = zext <8 x i8> %SplitLoadShuffle6980 to <8 x i32>
  %190 = shl nuw nsw <8 x i32> %187, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %191 = shl nuw nsw <8 x i32> %188, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %192 = sub nsw <8 x i32> %190, %189
  %193 = sub nsw <8 x i32> %192, %191
  %194 = add nsw <8 x i32> %193, %186
  %arrayIdx1456 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 2, i64 6
  %arrayIdx1474 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 2, i64 5
  %arrayIdx1492 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 2, i64 7
  %195 = extractelement <8 x i32> %194, i32 3
  %196 = insertelement <8 x i32> undef, i32 %195, i32 0
  %197 = extractelement <8 x i32> %194, i32 0
  %198 = insertelement <8 x i32> %196, i32 %197, i32 1
  %199 = insertelement <8 x i32> %198, i32 %197, i32 2
  %200 = insertelement <8 x i32> %199, i32 %197, i32 3
  %201 = extractelement <8 x i32> %194, i32 7
  %202 = insertelement <8 x i32> %200, i32 %201, i32 4
  %203 = extractelement <8 x i32> %194, i32 4
  %204 = insertelement <8 x i32> %202, i32 %203, i32 5
  %205 = insertelement <8 x i32> %204, i32 %203, i32 6
  %206 = insertelement <8 x i32> %205, i32 %203, i32 7
  %207 = extractelement <8 x i32> %194, i32 1
  %208 = insertelement <8 x i32> undef, i32 %207, i32 0
  %209 = insertelement <8 x i32> %208, i32 %195, i32 1
  %210 = insertelement <8 x i32> %209, i32 %207, i32 2
  %211 = insertelement <8 x i32> %210, i32 %207, i32 3
  %212 = extractelement <8 x i32> %194, i32 5
  %213 = insertelement <8 x i32> %211, i32 %212, i32 4
  %214 = insertelement <8 x i32> %213, i32 %201, i32 5
  %215 = insertelement <8 x i32> %214, i32 %212, i32 6
  %216 = insertelement <8 x i32> %215, i32 %212, i32 7
  %217 = add nsw <8 x i32> %206, %216
  %218 = sub nsw <8 x i32> %206, %216
  %219 = select <8 x i1> <i1 true, i1 false, i1 true, i1 false, i1 true, i1 false, i1 true, i1 false>, <8 x i32> %217, <8 x i32> %218
  %220 = extractelement <8 x i32> %194, i32 2
  %221 = insertelement <8 x i32> undef, i32 %220, i32 0
  %222 = insertelement <8 x i32> %221, i32 %220, i32 1
  %223 = insertelement <8 x i32> %222, i32 %195, i32 2
  %224 = insertelement <8 x i32> %223, i32 %220, i32 3
  %225 = extractelement <8 x i32> %194, i32 6
  %226 = insertelement <8 x i32> %224, i32 %225, i32 4
  %227 = insertelement <8 x i32> %226, i32 %225, i32 5
  %228 = insertelement <8 x i32> %227, i32 %201, i32 6
  %229 = insertelement <8 x i32> %228, i32 %225, i32 7
  %230 = add nsw <8 x i32> %219, %229
  %231 = sub nsw <8 x i32> %219, %229
  %232 = select <8 x i1> <i1 true, i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false>, <8 x i32> %230, <8 x i32> %231
  %233 = sub <8 x i32> %232, %194
  %234 = add <8 x i32> %232, %194
  %235 = select <8 x i1> <i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false, i1 true>, <8 x i32> %234, <8 x i32> %233
  store <8 x i32> %235, ptr %arrayIdx1334, align 4
  %236 = mul nsw i64 %idx.ext.i, 3
  %arrayIdx1509 = getelementptr inbounds i8, ptr %pix1, i64 %236
  %237 = mul nsw i64 %idx.ext63.i, 3
  %arrayIdx1511 = getelementptr inbounds i8, ptr %pix2, i64 %237
  %238 = add nsw i64 %236, 4
  %arrayIdx1513 = getelementptr inbounds i8, ptr %pix1, i64 %238
  %239 = add nsw i64 %237, 4
  %arrayIdx1515 = getelementptr inbounds i8, ptr %pix2, i64 %239
  %240 = add nsw i64 %236, 1
  %arrayIdx1517 = getelementptr inbounds i8, ptr %pix1, i64 %240
  %241 = add nsw i64 %237, 1
  %arrayIdx1519 = getelementptr inbounds i8, ptr %pix2, i64 %241
  %242 = add nsw i64 %236, 5
  %arrayIdx1521 = getelementptr inbounds i8, ptr %pix1, i64 %242
  %243 = add nsw i64 %237, 5
  %arrayIdx1523 = getelementptr inbounds i8, ptr %pix2, i64 %243
  %244 = add nsw i64 %236, 2
  %arrayIdx1525 = getelementptr inbounds i8, ptr %pix1, i64 %244
  %245 = add nsw i64 %237, 2
  %arrayIdx1527 = getelementptr inbounds i8, ptr %pix2, i64 %245
  %246 = add nsw i64 %236, 6
  %arrayIdx1529 = getelementptr inbounds i8, ptr %pix1, i64 %246
  %247 = add nsw i64 %237, 6
  %arrayIdx1531 = getelementptr inbounds i8, ptr %pix2, i64 %247
  %248 = add nsw i64 %236, 3
  %arrayIdx1533 = getelementptr inbounds i8, ptr %pix1, i64 %248
  %249 = add nsw i64 %237, 3
  %arrayIdx1535 = getelementptr inbounds i8, ptr %pix2, i64 %249
  %250 = add nsw i64 %236, 7
  %arrayIdx1537 = getelementptr inbounds i8, ptr %pix1, i64 %250
  %251 = add nsw i64 %237, 7
  %arrayIdx1539 = getelementptr inbounds i8, ptr %pix2, i64 %251
  %arrayIdx1542 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 3, i64 0
  %arrayIdx1560 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 3, i64 2
  %arrayIdx1578 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 3, i64 1
  %arrayIdx1596 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 3, i64 3
  %252 = add nsw i64 %236, 8
  %arrayIdx1613 = getelementptr inbounds i8, ptr %pix1, i64 %252
  %253 = add nsw i64 %237, 8
  %arrayIdx1615 = getelementptr inbounds i8, ptr %pix2, i64 %253
  %254 = add nsw i64 %236, 12
  %arrayIdx1617 = getelementptr inbounds i8, ptr %pix1, i64 %254
  %255 = add nsw i64 %237, 12
  %arrayIdx1619 = getelementptr inbounds i8, ptr %pix2, i64 %255
  %256 = add nsw i64 %236, 9
  %arrayIdx1621 = getelementptr inbounds i8, ptr %pix1, i64 %256
  %257 = add nsw i64 %237, 9
  %arrayIdx1623 = getelementptr inbounds i8, ptr %pix2, i64 %257
  %258 = add nsw i64 %236, 13
  %arrayIdx1625 = getelementptr inbounds i8, ptr %pix1, i64 %258
  %259 = add nsw i64 %237, 13
  %arrayIdx1627 = getelementptr inbounds i8, ptr %pix2, i64 %259
  %260 = add nsw i64 %236, 10
  %arrayIdx1629 = getelementptr inbounds i8, ptr %pix1, i64 %260
  %261 = add nsw i64 %237, 10
  %arrayIdx1631 = getelementptr inbounds i8, ptr %pix2, i64 %261
  %262 = add nsw i64 %236, 14
  %arrayIdx1633 = getelementptr inbounds i8, ptr %pix1, i64 %262
  %263 = add nsw i64 %237, 14
  %arrayIdx1635 = getelementptr inbounds i8, ptr %pix2, i64 %263
  %264 = add nsw i64 %236, 11
  %arrayIdx1637 = getelementptr inbounds i8, ptr %pix1, i64 %264
  %265 = load <4 x i8>, ptr %arrayIdx1509, align 1, !tbaa !12
  %266 = load <4 x i8>, ptr %arrayIdx1613, align 1, !tbaa !12
  %SplitLoadShuffle7031 = shufflevector <4 x i8> %265, <4 x i8> %266, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %267 = add nsw i64 %237, 11
  %arrayIdx1639 = getelementptr inbounds i8, ptr %pix2, i64 %267
  %268 = load <4 x i8>, ptr %arrayIdx1511, align 1, !tbaa !12
  %269 = load <4 x i8>, ptr %arrayIdx1615, align 1, !tbaa !12
  %SplitLoadShuffle7029 = shufflevector <4 x i8> %268, <4 x i8> %269, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %270 = add nsw i64 %236, 15
  %arrayIdx1641 = getelementptr inbounds i8, ptr %pix1, i64 %270
  %271 = load <4 x i8>, ptr %arrayIdx1513, align 1, !tbaa !12
  %272 = load <4 x i8>, ptr %arrayIdx1617, align 1, !tbaa !12
  %SplitLoadShuffle7028 = shufflevector <4 x i8> %271, <4 x i8> %272, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %273 = add nsw i64 %237, 15
  %arrayIdx1643 = getelementptr inbounds i8, ptr %pix2, i64 %273
  %274 = load <4 x i8>, ptr %arrayIdx1515, align 1, !tbaa !12
  %275 = load <4 x i8>, ptr %arrayIdx1619, align 1, !tbaa !12
  %SplitLoadShuffle7030 = shufflevector <4 x i8> %274, <4 x i8> %275, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %arrayIdx1646 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 3, i64 4
  %276 = zext <8 x i8> %SplitLoadShuffle7031 to <8 x i32>
  %277 = zext <8 x i8> %SplitLoadShuffle7028 to <8 x i32>
  %278 = zext <8 x i8> %SplitLoadShuffle7030 to <8 x i32>
  %279 = zext <8 x i8> %SplitLoadShuffle7029 to <8 x i32>
  %280 = shl nuw nsw <8 x i32> %277, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %281 = shl nuw nsw <8 x i32> %278, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %282 = sub nsw <8 x i32> %280, %279
  %283 = sub nsw <8 x i32> %282, %281
  %284 = add nsw <8 x i32> %283, %276
  %arrayIdx1664 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 3, i64 6
  %arrayIdx1682 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 3, i64 5
  %arrayIdx1700 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 3, i64 7
  %285 = extractelement <8 x i32> %284, i32 3
  %286 = insertelement <8 x i32> undef, i32 %285, i32 0
  %287 = extractelement <8 x i32> %284, i32 0
  %288 = insertelement <8 x i32> %286, i32 %287, i32 1
  %289 = insertelement <8 x i32> %288, i32 %287, i32 2
  %290 = insertelement <8 x i32> %289, i32 %287, i32 3
  %291 = extractelement <8 x i32> %284, i32 7
  %292 = insertelement <8 x i32> %290, i32 %291, i32 4
  %293 = extractelement <8 x i32> %284, i32 4
  %294 = insertelement <8 x i32> %292, i32 %293, i32 5
  %295 = insertelement <8 x i32> %294, i32 %293, i32 6
  %296 = insertelement <8 x i32> %295, i32 %293, i32 7
  %297 = extractelement <8 x i32> %284, i32 1
  %298 = insertelement <8 x i32> undef, i32 %297, i32 0
  %299 = insertelement <8 x i32> %298, i32 %285, i32 1
  %300 = insertelement <8 x i32> %299, i32 %297, i32 2
  %301 = insertelement <8 x i32> %300, i32 %297, i32 3
  %302 = extractelement <8 x i32> %284, i32 5
  %303 = insertelement <8 x i32> %301, i32 %302, i32 4
  %304 = insertelement <8 x i32> %303, i32 %291, i32 5
  %305 = insertelement <8 x i32> %304, i32 %302, i32 6
  %306 = insertelement <8 x i32> %305, i32 %302, i32 7
  %307 = add nsw <8 x i32> %296, %306
  %308 = sub nsw <8 x i32> %296, %306
  %309 = select <8 x i1> <i1 true, i1 false, i1 true, i1 false, i1 true, i1 false, i1 true, i1 false>, <8 x i32> %307, <8 x i32> %308
  %310 = extractelement <8 x i32> %284, i32 2
  %311 = insertelement <8 x i32> undef, i32 %310, i32 0
  %312 = insertelement <8 x i32> %311, i32 %310, i32 1
  %313 = insertelement <8 x i32> %312, i32 %285, i32 2
  %314 = insertelement <8 x i32> %313, i32 %310, i32 3
  %315 = extractelement <8 x i32> %284, i32 6
  %316 = insertelement <8 x i32> %314, i32 %315, i32 4
  %317 = insertelement <8 x i32> %316, i32 %315, i32 5
  %318 = insertelement <8 x i32> %317, i32 %291, i32 6
  %319 = insertelement <8 x i32> %318, i32 %315, i32 7
  %320 = add nsw <8 x i32> %309, %319
  %321 = sub nsw <8 x i32> %309, %319
  %322 = select <8 x i1> <i1 true, i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false>, <8 x i32> %320, <8 x i32> %321
  %323 = sub <8 x i32> %322, %284
  %324 = add <8 x i32> %322, %284
  %325 = select <8 x i1> <i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false, i1 true>, <8 x i32> %324, <8 x i32> %323
  store <8 x i32> %325, ptr %arrayIdx1542, align 4
  %326 = shl nsw i64 %idx.ext.i, 2
  %arrayIdx1717 = getelementptr inbounds i8, ptr %pix1, i64 %326
  %327 = shl nsw i64 %idx.ext63.i, 2
  %arrayIdx1719 = getelementptr inbounds i8, ptr %pix2, i64 %327
  %328 = add nsw i64 %326, 4
  %arrayIdx1721 = getelementptr inbounds i8, ptr %pix1, i64 %328
  %329 = add nsw i64 %327, 4
  %arrayIdx1723 = getelementptr inbounds i8, ptr %pix2, i64 %329
  %330 = or i64 %326, 1
  %arrayIdx1725 = getelementptr inbounds i8, ptr %pix1, i64 %330
  %331 = or i64 %327, 1
  %arrayIdx1727 = getelementptr inbounds i8, ptr %pix2, i64 %331
  %332 = add nsw i64 %326, 5
  %arrayIdx1729 = getelementptr inbounds i8, ptr %pix1, i64 %332
  %333 = add nsw i64 %327, 5
  %arrayIdx1731 = getelementptr inbounds i8, ptr %pix2, i64 %333
  %334 = or i64 %326, 2
  %arrayIdx1733 = getelementptr inbounds i8, ptr %pix1, i64 %334
  %335 = or i64 %327, 2
  %arrayIdx1735 = getelementptr inbounds i8, ptr %pix2, i64 %335
  %336 = add nsw i64 %326, 6
  %arrayIdx1737 = getelementptr inbounds i8, ptr %pix1, i64 %336
  %337 = add nsw i64 %327, 6
  %arrayIdx1739 = getelementptr inbounds i8, ptr %pix2, i64 %337
  %338 = or i64 %326, 3
  %arrayIdx1741 = getelementptr inbounds i8, ptr %pix1, i64 %338
  %339 = or i64 %327, 3
  %arrayIdx1743 = getelementptr inbounds i8, ptr %pix2, i64 %339
  %340 = add nsw i64 %326, 7
  %arrayIdx1745 = getelementptr inbounds i8, ptr %pix1, i64 %340
  %341 = add nsw i64 %327, 7
  %arrayIdx1747 = getelementptr inbounds i8, ptr %pix2, i64 %341
  %arrayIdx1750 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 4, i64 0
  %arrayIdx1768 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 4, i64 2
  %arrayIdx1786 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 4, i64 1
  %arrayIdx1804 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 4, i64 3
  %342 = add nsw i64 %326, 8
  %arrayIdx1821 = getelementptr inbounds i8, ptr %pix1, i64 %342
  %343 = add nsw i64 %327, 8
  %arrayIdx1823 = getelementptr inbounds i8, ptr %pix2, i64 %343
  %344 = add nsw i64 %326, 12
  %arrayIdx1825 = getelementptr inbounds i8, ptr %pix1, i64 %344
  %345 = add nsw i64 %327, 12
  %arrayIdx1827 = getelementptr inbounds i8, ptr %pix2, i64 %345
  %346 = add nsw i64 %326, 9
  %arrayIdx1829 = getelementptr inbounds i8, ptr %pix1, i64 %346
  %347 = add nsw i64 %327, 9
  %arrayIdx1831 = getelementptr inbounds i8, ptr %pix2, i64 %347
  %348 = add nsw i64 %326, 13
  %arrayIdx1833 = getelementptr inbounds i8, ptr %pix1, i64 %348
  %349 = add nsw i64 %327, 13
  %arrayIdx1835 = getelementptr inbounds i8, ptr %pix2, i64 %349
  %350 = add nsw i64 %326, 10
  %arrayIdx1837 = getelementptr inbounds i8, ptr %pix1, i64 %350
  %351 = add nsw i64 %327, 10
  %arrayIdx1839 = getelementptr inbounds i8, ptr %pix2, i64 %351
  %352 = add nsw i64 %326, 14
  %arrayIdx1841 = getelementptr inbounds i8, ptr %pix1, i64 %352
  %353 = add nsw i64 %327, 14
  %arrayIdx1843 = getelementptr inbounds i8, ptr %pix2, i64 %353
  %354 = add nsw i64 %326, 11
  %arrayIdx1845 = getelementptr inbounds i8, ptr %pix1, i64 %354
  %355 = load <4 x i8>, ptr %arrayIdx1717, align 1, !tbaa !12
  %356 = load <4 x i8>, ptr %arrayIdx1821, align 1, !tbaa !12
  %SplitLoadShuffle7080 = shufflevector <4 x i8> %355, <4 x i8> %356, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %357 = add nsw i64 %327, 11
  %arrayIdx1847 = getelementptr inbounds i8, ptr %pix2, i64 %357
  %358 = load <4 x i8>, ptr %arrayIdx1719, align 1, !tbaa !12
  %359 = load <4 x i8>, ptr %arrayIdx1823, align 1, !tbaa !12
  %SplitLoadShuffle7078 = shufflevector <4 x i8> %358, <4 x i8> %359, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %360 = add nsw i64 %326, 15
  %arrayIdx1849 = getelementptr inbounds i8, ptr %pix1, i64 %360
  %361 = load <4 x i8>, ptr %arrayIdx1721, align 1, !tbaa !12
  %362 = load <4 x i8>, ptr %arrayIdx1825, align 1, !tbaa !12
  %SplitLoadShuffle7077 = shufflevector <4 x i8> %361, <4 x i8> %362, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %363 = add nsw i64 %327, 15
  %arrayIdx1851 = getelementptr inbounds i8, ptr %pix2, i64 %363
  %364 = load <4 x i8>, ptr %arrayIdx1723, align 1, !tbaa !12
  %365 = load <4 x i8>, ptr %arrayIdx1827, align 1, !tbaa !12
  %SplitLoadShuffle7079 = shufflevector <4 x i8> %364, <4 x i8> %365, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %arrayIdx1854 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 4, i64 4
  %366 = zext <8 x i8> %SplitLoadShuffle7080 to <8 x i32>
  %367 = zext <8 x i8> %SplitLoadShuffle7077 to <8 x i32>
  %368 = zext <8 x i8> %SplitLoadShuffle7079 to <8 x i32>
  %369 = zext <8 x i8> %SplitLoadShuffle7078 to <8 x i32>
  %370 = shl nuw nsw <8 x i32> %367, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %371 = shl nuw nsw <8 x i32> %368, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %372 = sub nsw <8 x i32> %370, %369
  %373 = sub nsw <8 x i32> %372, %371
  %374 = add nsw <8 x i32> %373, %366
  %arrayIdx1872 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 4, i64 6
  %arrayIdx1890 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 4, i64 5
  %arrayIdx1908 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 4, i64 7
  %375 = extractelement <8 x i32> %374, i32 3
  %376 = insertelement <8 x i32> undef, i32 %375, i32 0
  %377 = extractelement <8 x i32> %374, i32 0
  %378 = insertelement <8 x i32> %376, i32 %377, i32 1
  %379 = insertelement <8 x i32> %378, i32 %377, i32 2
  %380 = insertelement <8 x i32> %379, i32 %377, i32 3
  %381 = extractelement <8 x i32> %374, i32 7
  %382 = insertelement <8 x i32> %380, i32 %381, i32 4
  %383 = extractelement <8 x i32> %374, i32 4
  %384 = insertelement <8 x i32> %382, i32 %383, i32 5
  %385 = insertelement <8 x i32> %384, i32 %383, i32 6
  %386 = insertelement <8 x i32> %385, i32 %383, i32 7
  %387 = extractelement <8 x i32> %374, i32 1
  %388 = insertelement <8 x i32> undef, i32 %387, i32 0
  %389 = insertelement <8 x i32> %388, i32 %375, i32 1
  %390 = insertelement <8 x i32> %389, i32 %387, i32 2
  %391 = insertelement <8 x i32> %390, i32 %387, i32 3
  %392 = extractelement <8 x i32> %374, i32 5
  %393 = insertelement <8 x i32> %391, i32 %392, i32 4
  %394 = insertelement <8 x i32> %393, i32 %381, i32 5
  %395 = insertelement <8 x i32> %394, i32 %392, i32 6
  %396 = insertelement <8 x i32> %395, i32 %392, i32 7
  %397 = add nsw <8 x i32> %386, %396
  %398 = sub nsw <8 x i32> %386, %396
  %399 = select <8 x i1> <i1 true, i1 false, i1 true, i1 false, i1 true, i1 false, i1 true, i1 false>, <8 x i32> %397, <8 x i32> %398
  %400 = extractelement <8 x i32> %374, i32 2
  %401 = insertelement <8 x i32> undef, i32 %400, i32 0
  %402 = insertelement <8 x i32> %401, i32 %400, i32 1
  %403 = insertelement <8 x i32> %402, i32 %375, i32 2
  %404 = insertelement <8 x i32> %403, i32 %400, i32 3
  %405 = extractelement <8 x i32> %374, i32 6
  %406 = insertelement <8 x i32> %404, i32 %405, i32 4
  %407 = insertelement <8 x i32> %406, i32 %405, i32 5
  %408 = insertelement <8 x i32> %407, i32 %381, i32 6
  %409 = insertelement <8 x i32> %408, i32 %405, i32 7
  %410 = add nsw <8 x i32> %399, %409
  %411 = sub nsw <8 x i32> %399, %409
  %412 = select <8 x i1> <i1 true, i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false>, <8 x i32> %410, <8 x i32> %411
  %413 = sub <8 x i32> %412, %374
  %414 = add <8 x i32> %412, %374
  %415 = select <8 x i1> <i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false, i1 true>, <8 x i32> %414, <8 x i32> %413
  store <8 x i32> %415, ptr %arrayIdx1750, align 4
  %416 = mul nsw i64 %idx.ext.i, 5
  %arrayIdx1925 = getelementptr inbounds i8, ptr %pix1, i64 %416
  %417 = mul nsw i64 %idx.ext63.i, 5
  %arrayIdx1927 = getelementptr inbounds i8, ptr %pix2, i64 %417
  %418 = add nsw i64 %416, 4
  %arrayIdx1929 = getelementptr inbounds i8, ptr %pix1, i64 %418
  %419 = add nsw i64 %417, 4
  %arrayIdx1931 = getelementptr inbounds i8, ptr %pix2, i64 %419
  %420 = add nsw i64 %416, 1
  %arrayIdx1933 = getelementptr inbounds i8, ptr %pix1, i64 %420
  %421 = add nsw i64 %417, 1
  %arrayIdx1935 = getelementptr inbounds i8, ptr %pix2, i64 %421
  %422 = add nsw i64 %416, 5
  %arrayIdx1937 = getelementptr inbounds i8, ptr %pix1, i64 %422
  %423 = add nsw i64 %417, 5
  %arrayIdx1939 = getelementptr inbounds i8, ptr %pix2, i64 %423
  %424 = add nsw i64 %416, 2
  %arrayIdx1941 = getelementptr inbounds i8, ptr %pix1, i64 %424
  %425 = add nsw i64 %417, 2
  %arrayIdx1943 = getelementptr inbounds i8, ptr %pix2, i64 %425
  %426 = add nsw i64 %416, 6
  %arrayIdx1945 = getelementptr inbounds i8, ptr %pix1, i64 %426
  %427 = add nsw i64 %417, 6
  %arrayIdx1947 = getelementptr inbounds i8, ptr %pix2, i64 %427
  %428 = add nsw i64 %416, 3
  %arrayIdx1949 = getelementptr inbounds i8, ptr %pix1, i64 %428
  %429 = add nsw i64 %417, 3
  %arrayIdx1951 = getelementptr inbounds i8, ptr %pix2, i64 %429
  %430 = add nsw i64 %416, 7
  %arrayIdx1953 = getelementptr inbounds i8, ptr %pix1, i64 %430
  %431 = add nsw i64 %417, 7
  %arrayIdx1955 = getelementptr inbounds i8, ptr %pix2, i64 %431
  %arrayIdx1958 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 5, i64 0
  %arrayIdx1976 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 5, i64 2
  %arrayIdx1994 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 5, i64 1
  %arrayIdx2012 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 5, i64 3
  %432 = add nsw i64 %416, 8
  %arrayIdx2029 = getelementptr inbounds i8, ptr %pix1, i64 %432
  %433 = add nsw i64 %417, 8
  %arrayIdx2031 = getelementptr inbounds i8, ptr %pix2, i64 %433
  %434 = add nsw i64 %416, 12
  %arrayIdx2033 = getelementptr inbounds i8, ptr %pix1, i64 %434
  %435 = add nsw i64 %417, 12
  %arrayIdx2035 = getelementptr inbounds i8, ptr %pix2, i64 %435
  %436 = add nsw i64 %416, 9
  %arrayIdx2037 = getelementptr inbounds i8, ptr %pix1, i64 %436
  %437 = add nsw i64 %417, 9
  %arrayIdx2039 = getelementptr inbounds i8, ptr %pix2, i64 %437
  %438 = add nsw i64 %416, 13
  %arrayIdx2041 = getelementptr inbounds i8, ptr %pix1, i64 %438
  %439 = add nsw i64 %417, 13
  %arrayIdx2043 = getelementptr inbounds i8, ptr %pix2, i64 %439
  %440 = add nsw i64 %416, 10
  %arrayIdx2045 = getelementptr inbounds i8, ptr %pix1, i64 %440
  %441 = add nsw i64 %417, 10
  %arrayIdx2047 = getelementptr inbounds i8, ptr %pix2, i64 %441
  %442 = add nsw i64 %416, 14
  %arrayIdx2049 = getelementptr inbounds i8, ptr %pix1, i64 %442
  %443 = add nsw i64 %417, 14
  %arrayIdx2051 = getelementptr inbounds i8, ptr %pix2, i64 %443
  %444 = add nsw i64 %416, 11
  %arrayIdx2053 = getelementptr inbounds i8, ptr %pix1, i64 %444
  %445 = load <4 x i8>, ptr %arrayIdx1925, align 1, !tbaa !12
  %446 = load <4 x i8>, ptr %arrayIdx2029, align 1, !tbaa !12
  %SplitLoadShuffle7129 = shufflevector <4 x i8> %445, <4 x i8> %446, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %447 = add nsw i64 %417, 11
  %arrayIdx2055 = getelementptr inbounds i8, ptr %pix2, i64 %447
  %448 = load <4 x i8>, ptr %arrayIdx1927, align 1, !tbaa !12
  %449 = load <4 x i8>, ptr %arrayIdx2031, align 1, !tbaa !12
  %SplitLoadShuffle7127 = shufflevector <4 x i8> %448, <4 x i8> %449, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %450 = add nsw i64 %416, 15
  %arrayIdx2057 = getelementptr inbounds i8, ptr %pix1, i64 %450
  %451 = load <4 x i8>, ptr %arrayIdx1929, align 1, !tbaa !12
  %452 = load <4 x i8>, ptr %arrayIdx2033, align 1, !tbaa !12
  %SplitLoadShuffle7126 = shufflevector <4 x i8> %451, <4 x i8> %452, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %453 = add nsw i64 %417, 15
  %arrayIdx2059 = getelementptr inbounds i8, ptr %pix2, i64 %453
  %454 = load <4 x i8>, ptr %arrayIdx1931, align 1, !tbaa !12
  %455 = load <4 x i8>, ptr %arrayIdx2035, align 1, !tbaa !12
  %SplitLoadShuffle7128 = shufflevector <4 x i8> %454, <4 x i8> %455, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %arrayIdx2062 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 5, i64 4
  %456 = zext <8 x i8> %SplitLoadShuffle7129 to <8 x i32>
  %457 = zext <8 x i8> %SplitLoadShuffle7126 to <8 x i32>
  %458 = zext <8 x i8> %SplitLoadShuffle7128 to <8 x i32>
  %459 = zext <8 x i8> %SplitLoadShuffle7127 to <8 x i32>
  %460 = shl nuw nsw <8 x i32> %457, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %461 = shl nuw nsw <8 x i32> %458, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %462 = sub nsw <8 x i32> %460, %459
  %463 = sub nsw <8 x i32> %462, %461
  %464 = add nsw <8 x i32> %463, %456
  %arrayIdx2080 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 5, i64 6
  %arrayIdx2098 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 5, i64 5
  %arrayIdx2116 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 5, i64 7
  %465 = extractelement <8 x i32> %464, i32 3
  %466 = insertelement <8 x i32> undef, i32 %465, i32 0
  %467 = extractelement <8 x i32> %464, i32 0
  %468 = insertelement <8 x i32> %466, i32 %467, i32 1
  %469 = insertelement <8 x i32> %468, i32 %467, i32 2
  %470 = insertelement <8 x i32> %469, i32 %467, i32 3
  %471 = extractelement <8 x i32> %464, i32 7
  %472 = insertelement <8 x i32> %470, i32 %471, i32 4
  %473 = extractelement <8 x i32> %464, i32 4
  %474 = insertelement <8 x i32> %472, i32 %473, i32 5
  %475 = insertelement <8 x i32> %474, i32 %473, i32 6
  %476 = insertelement <8 x i32> %475, i32 %473, i32 7
  %477 = extractelement <8 x i32> %464, i32 1
  %478 = insertelement <8 x i32> undef, i32 %477, i32 0
  %479 = insertelement <8 x i32> %478, i32 %465, i32 1
  %480 = insertelement <8 x i32> %479, i32 %477, i32 2
  %481 = insertelement <8 x i32> %480, i32 %477, i32 3
  %482 = extractelement <8 x i32> %464, i32 5
  %483 = insertelement <8 x i32> %481, i32 %482, i32 4
  %484 = insertelement <8 x i32> %483, i32 %471, i32 5
  %485 = insertelement <8 x i32> %484, i32 %482, i32 6
  %486 = insertelement <8 x i32> %485, i32 %482, i32 7
  %487 = add nsw <8 x i32> %476, %486
  %488 = sub nsw <8 x i32> %476, %486
  %489 = select <8 x i1> <i1 true, i1 false, i1 true, i1 false, i1 true, i1 false, i1 true, i1 false>, <8 x i32> %487, <8 x i32> %488
  %490 = extractelement <8 x i32> %464, i32 2
  %491 = insertelement <8 x i32> undef, i32 %490, i32 0
  %492 = insertelement <8 x i32> %491, i32 %490, i32 1
  %493 = insertelement <8 x i32> %492, i32 %465, i32 2
  %494 = insertelement <8 x i32> %493, i32 %490, i32 3
  %495 = extractelement <8 x i32> %464, i32 6
  %496 = insertelement <8 x i32> %494, i32 %495, i32 4
  %497 = insertelement <8 x i32> %496, i32 %495, i32 5
  %498 = insertelement <8 x i32> %497, i32 %471, i32 6
  %499 = insertelement <8 x i32> %498, i32 %495, i32 7
  %500 = add nsw <8 x i32> %489, %499
  %501 = sub nsw <8 x i32> %489, %499
  %502 = select <8 x i1> <i1 true, i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false>, <8 x i32> %500, <8 x i32> %501
  %503 = sub <8 x i32> %502, %464
  %504 = add <8 x i32> %502, %464
  %505 = select <8 x i1> <i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false, i1 true>, <8 x i32> %504, <8 x i32> %503
  store <8 x i32> %505, ptr %arrayIdx1958, align 4
  %506 = mul nsw i64 %idx.ext.i, 6
  %arrayIdx2133 = getelementptr inbounds i8, ptr %pix1, i64 %506
  %507 = mul nsw i64 %idx.ext63.i, 6
  %arrayIdx2135 = getelementptr inbounds i8, ptr %pix2, i64 %507
  %508 = add nsw i64 %506, 4
  %arrayIdx2137 = getelementptr inbounds i8, ptr %pix1, i64 %508
  %509 = add nsw i64 %507, 4
  %arrayIdx2139 = getelementptr inbounds i8, ptr %pix2, i64 %509
  %510 = or i64 %506, 1
  %arrayIdx2141 = getelementptr inbounds i8, ptr %pix1, i64 %510
  %511 = or i64 %507, 1
  %arrayIdx2143 = getelementptr inbounds i8, ptr %pix2, i64 %511
  %512 = add nsw i64 %506, 5
  %arrayIdx2145 = getelementptr inbounds i8, ptr %pix1, i64 %512
  %513 = add nsw i64 %507, 5
  %arrayIdx2147 = getelementptr inbounds i8, ptr %pix2, i64 %513
  %514 = add nsw i64 %506, 2
  %arrayIdx2149 = getelementptr inbounds i8, ptr %pix1, i64 %514
  %515 = add nsw i64 %507, 2
  %arrayIdx2151 = getelementptr inbounds i8, ptr %pix2, i64 %515
  %516 = add nsw i64 %506, 6
  %arrayIdx2153 = getelementptr inbounds i8, ptr %pix1, i64 %516
  %517 = add nsw i64 %507, 6
  %arrayIdx2155 = getelementptr inbounds i8, ptr %pix2, i64 %517
  %518 = add nsw i64 %506, 3
  %arrayIdx2157 = getelementptr inbounds i8, ptr %pix1, i64 %518
  %519 = add nsw i64 %507, 3
  %arrayIdx2159 = getelementptr inbounds i8, ptr %pix2, i64 %519
  %520 = add nsw i64 %506, 7
  %arrayIdx2161 = getelementptr inbounds i8, ptr %pix1, i64 %520
  %521 = add nsw i64 %507, 7
  %arrayIdx2163 = getelementptr inbounds i8, ptr %pix2, i64 %521
  %arrayIdx2166 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 6, i64 0
  %arrayIdx2184 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 6, i64 2
  %arrayIdx2202 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 6, i64 1
  %arrayIdx2220 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 6, i64 3
  %522 = add nsw i64 %506, 8
  %arrayIdx2237 = getelementptr inbounds i8, ptr %pix1, i64 %522
  %523 = add nsw i64 %507, 8
  %arrayIdx2239 = getelementptr inbounds i8, ptr %pix2, i64 %523
  %524 = add nsw i64 %506, 12
  %arrayIdx2241 = getelementptr inbounds i8, ptr %pix1, i64 %524
  %525 = add nsw i64 %507, 12
  %arrayIdx2243 = getelementptr inbounds i8, ptr %pix2, i64 %525
  %526 = add nsw i64 %506, 9
  %arrayIdx2245 = getelementptr inbounds i8, ptr %pix1, i64 %526
  %527 = add nsw i64 %507, 9
  %arrayIdx2247 = getelementptr inbounds i8, ptr %pix2, i64 %527
  %528 = add nsw i64 %506, 13
  %arrayIdx2249 = getelementptr inbounds i8, ptr %pix1, i64 %528
  %529 = add nsw i64 %507, 13
  %arrayIdx2251 = getelementptr inbounds i8, ptr %pix2, i64 %529
  %530 = add nsw i64 %506, 10
  %arrayIdx2253 = getelementptr inbounds i8, ptr %pix1, i64 %530
  %531 = add nsw i64 %507, 10
  %arrayIdx2255 = getelementptr inbounds i8, ptr %pix2, i64 %531
  %532 = add nsw i64 %506, 14
  %arrayIdx2257 = getelementptr inbounds i8, ptr %pix1, i64 %532
  %533 = add nsw i64 %507, 14
  %arrayIdx2259 = getelementptr inbounds i8, ptr %pix2, i64 %533
  %534 = add nsw i64 %506, 11
  %arrayIdx2261 = getelementptr inbounds i8, ptr %pix1, i64 %534
  %535 = load <4 x i8>, ptr %arrayIdx2133, align 1, !tbaa !12
  %536 = load <4 x i8>, ptr %arrayIdx2237, align 1, !tbaa !12
  %SplitLoadShuffle7178 = shufflevector <4 x i8> %535, <4 x i8> %536, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %537 = add nsw i64 %507, 11
  %arrayIdx2263 = getelementptr inbounds i8, ptr %pix2, i64 %537
  %538 = load <4 x i8>, ptr %arrayIdx2135, align 1, !tbaa !12
  %539 = load <4 x i8>, ptr %arrayIdx2239, align 1, !tbaa !12
  %SplitLoadShuffle7176 = shufflevector <4 x i8> %538, <4 x i8> %539, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %540 = add nsw i64 %506, 15
  %arrayIdx2265 = getelementptr inbounds i8, ptr %pix1, i64 %540
  %541 = load <4 x i8>, ptr %arrayIdx2137, align 1, !tbaa !12
  %542 = load <4 x i8>, ptr %arrayIdx2241, align 1, !tbaa !12
  %SplitLoadShuffle7175 = shufflevector <4 x i8> %541, <4 x i8> %542, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %543 = add nsw i64 %507, 15
  %arrayIdx2267 = getelementptr inbounds i8, ptr %pix2, i64 %543
  %544 = load <4 x i8>, ptr %arrayIdx2139, align 1, !tbaa !12
  %545 = load <4 x i8>, ptr %arrayIdx2243, align 1, !tbaa !12
  %SplitLoadShuffle7177 = shufflevector <4 x i8> %544, <4 x i8> %545, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %arrayIdx2270 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 6, i64 4
  %546 = zext <8 x i8> %SplitLoadShuffle7178 to <8 x i32>
  %547 = zext <8 x i8> %SplitLoadShuffle7175 to <8 x i32>
  %548 = zext <8 x i8> %SplitLoadShuffle7177 to <8 x i32>
  %549 = zext <8 x i8> %SplitLoadShuffle7176 to <8 x i32>
  %550 = shl nuw nsw <8 x i32> %547, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %551 = shl nuw nsw <8 x i32> %548, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %552 = sub nsw <8 x i32> %550, %549
  %553 = sub nsw <8 x i32> %552, %551
  %554 = add nsw <8 x i32> %553, %546
  %arrayIdx2288 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 6, i64 6
  %arrayIdx2306 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 6, i64 5
  %arrayIdx2324 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 6, i64 7
  %555 = extractelement <8 x i32> %554, i32 3
  %556 = insertelement <8 x i32> undef, i32 %555, i32 0
  %557 = extractelement <8 x i32> %554, i32 0
  %558 = insertelement <8 x i32> %556, i32 %557, i32 1
  %559 = insertelement <8 x i32> %558, i32 %557, i32 2
  %560 = insertelement <8 x i32> %559, i32 %557, i32 3
  %561 = extractelement <8 x i32> %554, i32 7
  %562 = insertelement <8 x i32> %560, i32 %561, i32 4
  %563 = extractelement <8 x i32> %554, i32 4
  %564 = insertelement <8 x i32> %562, i32 %563, i32 5
  %565 = insertelement <8 x i32> %564, i32 %563, i32 6
  %566 = insertelement <8 x i32> %565, i32 %563, i32 7
  %567 = extractelement <8 x i32> %554, i32 1
  %568 = insertelement <8 x i32> undef, i32 %567, i32 0
  %569 = insertelement <8 x i32> %568, i32 %555, i32 1
  %570 = insertelement <8 x i32> %569, i32 %567, i32 2
  %571 = insertelement <8 x i32> %570, i32 %567, i32 3
  %572 = extractelement <8 x i32> %554, i32 5
  %573 = insertelement <8 x i32> %571, i32 %572, i32 4
  %574 = insertelement <8 x i32> %573, i32 %561, i32 5
  %575 = insertelement <8 x i32> %574, i32 %572, i32 6
  %576 = insertelement <8 x i32> %575, i32 %572, i32 7
  %577 = add nsw <8 x i32> %566, %576
  %578 = sub nsw <8 x i32> %566, %576
  %579 = select <8 x i1> <i1 true, i1 false, i1 true, i1 false, i1 true, i1 false, i1 true, i1 false>, <8 x i32> %577, <8 x i32> %578
  %580 = extractelement <8 x i32> %554, i32 2
  %581 = insertelement <8 x i32> undef, i32 %580, i32 0
  %582 = insertelement <8 x i32> %581, i32 %580, i32 1
  %583 = insertelement <8 x i32> %582, i32 %555, i32 2
  %584 = insertelement <8 x i32> %583, i32 %580, i32 3
  %585 = extractelement <8 x i32> %554, i32 6
  %586 = insertelement <8 x i32> %584, i32 %585, i32 4
  %587 = insertelement <8 x i32> %586, i32 %585, i32 5
  %588 = insertelement <8 x i32> %587, i32 %561, i32 6
  %589 = insertelement <8 x i32> %588, i32 %585, i32 7
  %590 = add nsw <8 x i32> %579, %589
  %591 = sub nsw <8 x i32> %579, %589
  %592 = select <8 x i1> <i1 true, i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false>, <8 x i32> %590, <8 x i32> %591
  %593 = sub <8 x i32> %592, %554
  %594 = add <8 x i32> %592, %554
  %595 = select <8 x i1> <i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false, i1 true>, <8 x i32> %594, <8 x i32> %593
  store <8 x i32> %595, ptr %arrayIdx2166, align 4
  %596 = mul nsw i64 %idx.ext.i, 7
  %arrayIdx2341 = getelementptr inbounds i8, ptr %pix1, i64 %596
  %597 = mul nsw i64 %idx.ext63.i, 7
  %arrayIdx2343 = getelementptr inbounds i8, ptr %pix2, i64 %597
  %598 = add nsw i64 %596, 4
  %arrayIdx2345 = getelementptr inbounds i8, ptr %pix1, i64 %598
  %599 = add nsw i64 %597, 4
  %arrayIdx2347 = getelementptr inbounds i8, ptr %pix2, i64 %599
  %600 = add nsw i64 %596, 1
  %arrayIdx2349 = getelementptr inbounds i8, ptr %pix1, i64 %600
  %601 = add nsw i64 %597, 1
  %arrayIdx2351 = getelementptr inbounds i8, ptr %pix2, i64 %601
  %602 = add nsw i64 %596, 5
  %arrayIdx2353 = getelementptr inbounds i8, ptr %pix1, i64 %602
  %603 = add nsw i64 %597, 5
  %arrayIdx2355 = getelementptr inbounds i8, ptr %pix2, i64 %603
  %604 = add nsw i64 %596, 2
  %arrayIdx2357 = getelementptr inbounds i8, ptr %pix1, i64 %604
  %605 = add nsw i64 %597, 2
  %arrayIdx2359 = getelementptr inbounds i8, ptr %pix2, i64 %605
  %606 = add nsw i64 %596, 6
  %arrayIdx2361 = getelementptr inbounds i8, ptr %pix1, i64 %606
  %607 = add nsw i64 %597, 6
  %arrayIdx2363 = getelementptr inbounds i8, ptr %pix2, i64 %607
  %608 = add nsw i64 %596, 3
  %arrayIdx2365 = getelementptr inbounds i8, ptr %pix1, i64 %608
  %609 = add nsw i64 %597, 3
  %arrayIdx2367 = getelementptr inbounds i8, ptr %pix2, i64 %609
  %610 = add nsw i64 %596, 7
  %arrayIdx2369 = getelementptr inbounds i8, ptr %pix1, i64 %610
  %611 = add nsw i64 %597, 7
  %arrayIdx2371 = getelementptr inbounds i8, ptr %pix2, i64 %611
  %arrayIdx2374 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 7, i64 0
  %arrayIdx2392 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 7, i64 2
  %arrayIdx2410 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 7, i64 1
  %arrayIdx2428 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 7, i64 3
  %612 = add nsw i64 %596, 8
  %arrayIdx2445 = getelementptr inbounds i8, ptr %pix1, i64 %612
  %613 = add nsw i64 %597, 8
  %arrayIdx2447 = getelementptr inbounds i8, ptr %pix2, i64 %613
  %614 = add nsw i64 %596, 12
  %arrayIdx2449 = getelementptr inbounds i8, ptr %pix1, i64 %614
  %615 = add nsw i64 %597, 12
  %arrayIdx2451 = getelementptr inbounds i8, ptr %pix2, i64 %615
  %616 = add nsw i64 %596, 9
  %arrayIdx2453 = getelementptr inbounds i8, ptr %pix1, i64 %616
  %617 = add nsw i64 %597, 9
  %arrayIdx2455 = getelementptr inbounds i8, ptr %pix2, i64 %617
  %618 = add nsw i64 %596, 13
  %arrayIdx2457 = getelementptr inbounds i8, ptr %pix1, i64 %618
  %619 = add nsw i64 %597, 13
  %arrayIdx2459 = getelementptr inbounds i8, ptr %pix2, i64 %619
  %620 = add nsw i64 %596, 10
  %arrayIdx2461 = getelementptr inbounds i8, ptr %pix1, i64 %620
  %621 = add nsw i64 %597, 10
  %arrayIdx2463 = getelementptr inbounds i8, ptr %pix2, i64 %621
  %622 = add nsw i64 %596, 14
  %arrayIdx2465 = getelementptr inbounds i8, ptr %pix1, i64 %622
  %623 = add nsw i64 %597, 14
  %arrayIdx2467 = getelementptr inbounds i8, ptr %pix2, i64 %623
  %624 = add nsw i64 %596, 11
  %arrayIdx2469 = getelementptr inbounds i8, ptr %pix1, i64 %624
  %625 = load <4 x i8>, ptr %arrayIdx2341, align 1, !tbaa !12
  %626 = load <4 x i8>, ptr %arrayIdx2445, align 1, !tbaa !12
  %SplitLoadShuffle7227 = shufflevector <4 x i8> %625, <4 x i8> %626, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %627 = add nsw i64 %597, 11
  %arrayIdx2471 = getelementptr inbounds i8, ptr %pix2, i64 %627
  %628 = load <4 x i8>, ptr %arrayIdx2343, align 1, !tbaa !12
  %629 = load <4 x i8>, ptr %arrayIdx2447, align 1, !tbaa !12
  %SplitLoadShuffle7225 = shufflevector <4 x i8> %628, <4 x i8> %629, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %630 = add nsw i64 %596, 15
  %arrayIdx2473 = getelementptr inbounds i8, ptr %pix1, i64 %630
  %631 = load <4 x i8>, ptr %arrayIdx2345, align 1, !tbaa !12
  %632 = load <4 x i8>, ptr %arrayIdx2449, align 1, !tbaa !12
  %SplitLoadShuffle7224 = shufflevector <4 x i8> %631, <4 x i8> %632, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %633 = add nsw i64 %597, 15
  %arrayIdx2475 = getelementptr inbounds i8, ptr %pix2, i64 %633
  %634 = load <4 x i8>, ptr %arrayIdx2347, align 1, !tbaa !12
  %635 = load <4 x i8>, ptr %arrayIdx2451, align 1, !tbaa !12
  %SplitLoadShuffle7226 = shufflevector <4 x i8> %634, <4 x i8> %635, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %arrayIdx2478 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 7, i64 4
  %636 = zext <8 x i8> %SplitLoadShuffle7227 to <8 x i32>
  %637 = zext <8 x i8> %SplitLoadShuffle7224 to <8 x i32>
  %638 = zext <8 x i8> %SplitLoadShuffle7226 to <8 x i32>
  %639 = zext <8 x i8> %SplitLoadShuffle7225 to <8 x i32>
  %640 = shl nuw nsw <8 x i32> %637, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %641 = shl nuw nsw <8 x i32> %638, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %642 = sub nsw <8 x i32> %640, %639
  %643 = sub nsw <8 x i32> %642, %641
  %644 = add nsw <8 x i32> %643, %636
  %arrayIdx2496 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 7, i64 6
  %arrayIdx2514 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 7, i64 5
  %arrayIdx2532 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 7, i64 7
  %645 = extractelement <8 x i32> %644, i32 3
  %646 = insertelement <8 x i32> undef, i32 %645, i32 0
  %647 = extractelement <8 x i32> %644, i32 0
  %648 = insertelement <8 x i32> %646, i32 %647, i32 1
  %649 = insertelement <8 x i32> %648, i32 %647, i32 2
  %650 = insertelement <8 x i32> %649, i32 %647, i32 3
  %651 = extractelement <8 x i32> %644, i32 7
  %652 = insertelement <8 x i32> %650, i32 %651, i32 4
  %653 = extractelement <8 x i32> %644, i32 4
  %654 = insertelement <8 x i32> %652, i32 %653, i32 5
  %655 = insertelement <8 x i32> %654, i32 %653, i32 6
  %656 = insertelement <8 x i32> %655, i32 %653, i32 7
  %657 = extractelement <8 x i32> %644, i32 1
  %658 = insertelement <8 x i32> undef, i32 %657, i32 0
  %659 = insertelement <8 x i32> %658, i32 %645, i32 1
  %660 = insertelement <8 x i32> %659, i32 %657, i32 2
  %661 = insertelement <8 x i32> %660, i32 %657, i32 3
  %662 = extractelement <8 x i32> %644, i32 5
  %663 = insertelement <8 x i32> %661, i32 %662, i32 4
  %664 = insertelement <8 x i32> %663, i32 %651, i32 5
  %665 = insertelement <8 x i32> %664, i32 %662, i32 6
  %666 = insertelement <8 x i32> %665, i32 %662, i32 7
  %667 = add nsw <8 x i32> %656, %666
  %668 = sub nsw <8 x i32> %656, %666
  %669 = select <8 x i1> <i1 true, i1 false, i1 true, i1 false, i1 true, i1 false, i1 true, i1 false>, <8 x i32> %667, <8 x i32> %668
  %670 = extractelement <8 x i32> %644, i32 2
  %671 = insertelement <8 x i32> undef, i32 %670, i32 0
  %672 = insertelement <8 x i32> %671, i32 %670, i32 1
  %673 = insertelement <8 x i32> %672, i32 %645, i32 2
  %674 = insertelement <8 x i32> %673, i32 %670, i32 3
  %675 = extractelement <8 x i32> %644, i32 6
  %676 = insertelement <8 x i32> %674, i32 %675, i32 4
  %677 = insertelement <8 x i32> %676, i32 %675, i32 5
  %678 = insertelement <8 x i32> %677, i32 %651, i32 6
  %679 = insertelement <8 x i32> %678, i32 %675, i32 7
  %680 = add nsw <8 x i32> %669, %679
  %681 = sub nsw <8 x i32> %669, %679
  %682 = select <8 x i1> <i1 true, i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false>, <8 x i32> %680, <8 x i32> %681
  %683 = sub <8 x i32> %682, %644
  %684 = add <8 x i32> %682, %644
  %685 = select <8 x i1> <i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false, i1 true>, <8 x i32> %684, <8 x i32> %683
  store <8 x i32> %685, ptr %arrayIdx2374, align 4
  %686 = shl nsw i64 %idx.ext.i, 3
  %arrayIdx2549 = getelementptr inbounds i8, ptr %pix1, i64 %686
  %687 = shl nsw i64 %idx.ext63.i, 3
  %arrayIdx2551 = getelementptr inbounds i8, ptr %pix2, i64 %687
  %688 = or i64 %686, 4
  %arrayIdx2553 = getelementptr inbounds i8, ptr %pix1, i64 %688
  %689 = or i64 %687, 4
  %arrayIdx2555 = getelementptr inbounds i8, ptr %pix2, i64 %689
  %690 = or i64 %686, 1
  %arrayIdx2557 = getelementptr inbounds i8, ptr %pix1, i64 %690
  %691 = or i64 %687, 1
  %arrayIdx2559 = getelementptr inbounds i8, ptr %pix2, i64 %691
  %692 = or i64 %686, 5
  %arrayIdx2561 = getelementptr inbounds i8, ptr %pix1, i64 %692
  %693 = or i64 %687, 5
  %arrayIdx2563 = getelementptr inbounds i8, ptr %pix2, i64 %693
  %694 = or i64 %686, 2
  %arrayIdx2565 = getelementptr inbounds i8, ptr %pix1, i64 %694
  %695 = or i64 %687, 2
  %arrayIdx2567 = getelementptr inbounds i8, ptr %pix2, i64 %695
  %696 = or i64 %686, 6
  %arrayIdx2569 = getelementptr inbounds i8, ptr %pix1, i64 %696
  %697 = or i64 %687, 6
  %arrayIdx2571 = getelementptr inbounds i8, ptr %pix2, i64 %697
  %698 = or i64 %686, 3
  %arrayIdx2573 = getelementptr inbounds i8, ptr %pix1, i64 %698
  %699 = or i64 %687, 3
  %arrayIdx2575 = getelementptr inbounds i8, ptr %pix2, i64 %699
  %700 = or i64 %686, 7
  %arrayIdx2577 = getelementptr inbounds i8, ptr %pix1, i64 %700
  %701 = or i64 %687, 7
  %arrayIdx2579 = getelementptr inbounds i8, ptr %pix2, i64 %701
  %arrayIdx2582 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 8, i64 0
  %arrayIdx2600 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 8, i64 2
  %arrayIdx2618 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 8, i64 1
  %arrayIdx2636 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 8, i64 3
  %702 = add nsw i64 %686, 8
  %arrayIdx2653 = getelementptr inbounds i8, ptr %pix1, i64 %702
  %703 = add nsw i64 %687, 8
  %arrayIdx2655 = getelementptr inbounds i8, ptr %pix2, i64 %703
  %704 = add nsw i64 %686, 12
  %arrayIdx2657 = getelementptr inbounds i8, ptr %pix1, i64 %704
  %705 = add nsw i64 %687, 12
  %arrayIdx2659 = getelementptr inbounds i8, ptr %pix2, i64 %705
  %706 = add nsw i64 %686, 9
  %arrayIdx2661 = getelementptr inbounds i8, ptr %pix1, i64 %706
  %707 = add nsw i64 %687, 9
  %arrayIdx2663 = getelementptr inbounds i8, ptr %pix2, i64 %707
  %708 = add nsw i64 %686, 13
  %arrayIdx2665 = getelementptr inbounds i8, ptr %pix1, i64 %708
  %709 = add nsw i64 %687, 13
  %arrayIdx2667 = getelementptr inbounds i8, ptr %pix2, i64 %709
  %710 = add nsw i64 %686, 10
  %arrayIdx2669 = getelementptr inbounds i8, ptr %pix1, i64 %710
  %711 = add nsw i64 %687, 10
  %arrayIdx2671 = getelementptr inbounds i8, ptr %pix2, i64 %711
  %712 = add nsw i64 %686, 14
  %arrayIdx2673 = getelementptr inbounds i8, ptr %pix1, i64 %712
  %713 = add nsw i64 %687, 14
  %arrayIdx2675 = getelementptr inbounds i8, ptr %pix2, i64 %713
  %714 = add nsw i64 %686, 11
  %arrayIdx2677 = getelementptr inbounds i8, ptr %pix1, i64 %714
  %715 = load <4 x i8>, ptr %arrayIdx2549, align 1, !tbaa !12
  %716 = load <4 x i8>, ptr %arrayIdx2653, align 1, !tbaa !12
  %SplitLoadShuffle7276 = shufflevector <4 x i8> %715, <4 x i8> %716, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %717 = add nsw i64 %687, 11
  %arrayIdx2679 = getelementptr inbounds i8, ptr %pix2, i64 %717
  %718 = load <4 x i8>, ptr %arrayIdx2551, align 1, !tbaa !12
  %719 = load <4 x i8>, ptr %arrayIdx2655, align 1, !tbaa !12
  %SplitLoadShuffle7274 = shufflevector <4 x i8> %718, <4 x i8> %719, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %720 = add nsw i64 %686, 15
  %arrayIdx2681 = getelementptr inbounds i8, ptr %pix1, i64 %720
  %721 = load <4 x i8>, ptr %arrayIdx2553, align 1, !tbaa !12
  %722 = load <4 x i8>, ptr %arrayIdx2657, align 1, !tbaa !12
  %SplitLoadShuffle7273 = shufflevector <4 x i8> %721, <4 x i8> %722, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %723 = add nsw i64 %687, 15
  %arrayIdx2683 = getelementptr inbounds i8, ptr %pix2, i64 %723
  %724 = load <4 x i8>, ptr %arrayIdx2555, align 1, !tbaa !12
  %725 = load <4 x i8>, ptr %arrayIdx2659, align 1, !tbaa !12
  %SplitLoadShuffle7275 = shufflevector <4 x i8> %724, <4 x i8> %725, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %arrayIdx2686 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 8, i64 4
  %726 = zext <8 x i8> %SplitLoadShuffle7276 to <8 x i32>
  %727 = zext <8 x i8> %SplitLoadShuffle7273 to <8 x i32>
  %728 = zext <8 x i8> %SplitLoadShuffle7275 to <8 x i32>
  %729 = zext <8 x i8> %SplitLoadShuffle7274 to <8 x i32>
  %730 = shl nuw nsw <8 x i32> %727, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %731 = shl nuw nsw <8 x i32> %728, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %732 = sub nsw <8 x i32> %730, %729
  %733 = sub nsw <8 x i32> %732, %731
  %734 = add nsw <8 x i32> %733, %726
  %arrayIdx2704 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 8, i64 6
  %arrayIdx2722 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 8, i64 5
  %arrayIdx2740 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 8, i64 7
  %735 = extractelement <8 x i32> %734, i32 3
  %736 = insertelement <8 x i32> undef, i32 %735, i32 0
  %737 = extractelement <8 x i32> %734, i32 0
  %738 = insertelement <8 x i32> %736, i32 %737, i32 1
  %739 = insertelement <8 x i32> %738, i32 %737, i32 2
  %740 = insertelement <8 x i32> %739, i32 %737, i32 3
  %741 = extractelement <8 x i32> %734, i32 7
  %742 = insertelement <8 x i32> %740, i32 %741, i32 4
  %743 = extractelement <8 x i32> %734, i32 4
  %744 = insertelement <8 x i32> %742, i32 %743, i32 5
  %745 = insertelement <8 x i32> %744, i32 %743, i32 6
  %746 = insertelement <8 x i32> %745, i32 %743, i32 7
  %747 = extractelement <8 x i32> %734, i32 1
  %748 = insertelement <8 x i32> undef, i32 %747, i32 0
  %749 = insertelement <8 x i32> %748, i32 %735, i32 1
  %750 = insertelement <8 x i32> %749, i32 %747, i32 2
  %751 = insertelement <8 x i32> %750, i32 %747, i32 3
  %752 = extractelement <8 x i32> %734, i32 5
  %753 = insertelement <8 x i32> %751, i32 %752, i32 4
  %754 = insertelement <8 x i32> %753, i32 %741, i32 5
  %755 = insertelement <8 x i32> %754, i32 %752, i32 6
  %756 = insertelement <8 x i32> %755, i32 %752, i32 7
  %757 = add nsw <8 x i32> %746, %756
  %758 = sub nsw <8 x i32> %746, %756
  %759 = select <8 x i1> <i1 true, i1 false, i1 true, i1 false, i1 true, i1 false, i1 true, i1 false>, <8 x i32> %757, <8 x i32> %758
  %760 = extractelement <8 x i32> %734, i32 2
  %761 = insertelement <8 x i32> undef, i32 %760, i32 0
  %762 = insertelement <8 x i32> %761, i32 %760, i32 1
  %763 = insertelement <8 x i32> %762, i32 %735, i32 2
  %764 = insertelement <8 x i32> %763, i32 %760, i32 3
  %765 = extractelement <8 x i32> %734, i32 6
  %766 = insertelement <8 x i32> %764, i32 %765, i32 4
  %767 = insertelement <8 x i32> %766, i32 %765, i32 5
  %768 = insertelement <8 x i32> %767, i32 %741, i32 6
  %769 = insertelement <8 x i32> %768, i32 %765, i32 7
  %770 = add nsw <8 x i32> %759, %769
  %771 = sub nsw <8 x i32> %759, %769
  %772 = select <8 x i1> <i1 true, i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false>, <8 x i32> %770, <8 x i32> %771
  %773 = sub <8 x i32> %772, %734
  %774 = add <8 x i32> %772, %734
  %775 = select <8 x i1> <i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false, i1 true>, <8 x i32> %774, <8 x i32> %773
  store <8 x i32> %775, ptr %arrayIdx2582, align 4
  %776 = mul nsw i64 %idx.ext.i, 9
  %arrayIdx2757 = getelementptr inbounds i8, ptr %pix1, i64 %776
  %777 = mul nsw i64 %idx.ext63.i, 9
  %arrayIdx2759 = getelementptr inbounds i8, ptr %pix2, i64 %777
  %778 = add nsw i64 %776, 4
  %arrayIdx2761 = getelementptr inbounds i8, ptr %pix1, i64 %778
  %779 = add nsw i64 %777, 4
  %arrayIdx2763 = getelementptr inbounds i8, ptr %pix2, i64 %779
  %780 = add nsw i64 %776, 1
  %arrayIdx2765 = getelementptr inbounds i8, ptr %pix1, i64 %780
  %781 = add nsw i64 %777, 1
  %arrayIdx2767 = getelementptr inbounds i8, ptr %pix2, i64 %781
  %782 = add nsw i64 %776, 5
  %arrayIdx2769 = getelementptr inbounds i8, ptr %pix1, i64 %782
  %783 = add nsw i64 %777, 5
  %arrayIdx2771 = getelementptr inbounds i8, ptr %pix2, i64 %783
  %784 = add nsw i64 %776, 2
  %arrayIdx2773 = getelementptr inbounds i8, ptr %pix1, i64 %784
  %785 = add nsw i64 %777, 2
  %arrayIdx2775 = getelementptr inbounds i8, ptr %pix2, i64 %785
  %786 = add nsw i64 %776, 6
  %arrayIdx2777 = getelementptr inbounds i8, ptr %pix1, i64 %786
  %787 = add nsw i64 %777, 6
  %arrayIdx2779 = getelementptr inbounds i8, ptr %pix2, i64 %787
  %788 = add nsw i64 %776, 3
  %arrayIdx2781 = getelementptr inbounds i8, ptr %pix1, i64 %788
  %789 = add nsw i64 %777, 3
  %arrayIdx2783 = getelementptr inbounds i8, ptr %pix2, i64 %789
  %790 = add nsw i64 %776, 7
  %arrayIdx2785 = getelementptr inbounds i8, ptr %pix1, i64 %790
  %791 = add nsw i64 %777, 7
  %arrayIdx2787 = getelementptr inbounds i8, ptr %pix2, i64 %791
  %arrayIdx2790 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 9, i64 0
  %arrayIdx2808 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 9, i64 2
  %arrayIdx2826 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 9, i64 1
  %arrayIdx2844 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 9, i64 3
  %792 = add nsw i64 %776, 8
  %arrayIdx2861 = getelementptr inbounds i8, ptr %pix1, i64 %792
  %793 = add nsw i64 %777, 8
  %arrayIdx2863 = getelementptr inbounds i8, ptr %pix2, i64 %793
  %794 = add nsw i64 %776, 12
  %arrayIdx2865 = getelementptr inbounds i8, ptr %pix1, i64 %794
  %795 = add nsw i64 %777, 12
  %arrayIdx2867 = getelementptr inbounds i8, ptr %pix2, i64 %795
  %796 = add nsw i64 %776, 9
  %arrayIdx2869 = getelementptr inbounds i8, ptr %pix1, i64 %796
  %797 = add nsw i64 %777, 9
  %arrayIdx2871 = getelementptr inbounds i8, ptr %pix2, i64 %797
  %798 = add nsw i64 %776, 13
  %arrayIdx2873 = getelementptr inbounds i8, ptr %pix1, i64 %798
  %799 = add nsw i64 %777, 13
  %arrayIdx2875 = getelementptr inbounds i8, ptr %pix2, i64 %799
  %800 = add nsw i64 %776, 10
  %arrayIdx2877 = getelementptr inbounds i8, ptr %pix1, i64 %800
  %801 = add nsw i64 %777, 10
  %arrayIdx2879 = getelementptr inbounds i8, ptr %pix2, i64 %801
  %802 = add nsw i64 %776, 14
  %arrayIdx2881 = getelementptr inbounds i8, ptr %pix1, i64 %802
  %803 = add nsw i64 %777, 14
  %arrayIdx2883 = getelementptr inbounds i8, ptr %pix2, i64 %803
  %804 = add nsw i64 %776, 11
  %arrayIdx2885 = getelementptr inbounds i8, ptr %pix1, i64 %804
  %805 = load <4 x i8>, ptr %arrayIdx2757, align 1, !tbaa !12
  %806 = load <4 x i8>, ptr %arrayIdx2861, align 1, !tbaa !12
  %SplitLoadShuffle7325 = shufflevector <4 x i8> %805, <4 x i8> %806, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %807 = add nsw i64 %777, 11
  %arrayIdx2887 = getelementptr inbounds i8, ptr %pix2, i64 %807
  %808 = load <4 x i8>, ptr %arrayIdx2759, align 1, !tbaa !12
  %809 = load <4 x i8>, ptr %arrayIdx2863, align 1, !tbaa !12
  %SplitLoadShuffle7323 = shufflevector <4 x i8> %808, <4 x i8> %809, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %810 = add nsw i64 %776, 15
  %arrayIdx2889 = getelementptr inbounds i8, ptr %pix1, i64 %810
  %811 = load <4 x i8>, ptr %arrayIdx2761, align 1, !tbaa !12
  %812 = load <4 x i8>, ptr %arrayIdx2865, align 1, !tbaa !12
  %SplitLoadShuffle7322 = shufflevector <4 x i8> %811, <4 x i8> %812, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %813 = add nsw i64 %777, 15
  %arrayIdx2891 = getelementptr inbounds i8, ptr %pix2, i64 %813
  %814 = load <4 x i8>, ptr %arrayIdx2763, align 1, !tbaa !12
  %815 = load <4 x i8>, ptr %arrayIdx2867, align 1, !tbaa !12
  %SplitLoadShuffle7324 = shufflevector <4 x i8> %814, <4 x i8> %815, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %arrayIdx2894 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 9, i64 4
  %816 = zext <8 x i8> %SplitLoadShuffle7325 to <8 x i32>
  %817 = zext <8 x i8> %SplitLoadShuffle7322 to <8 x i32>
  %818 = zext <8 x i8> %SplitLoadShuffle7324 to <8 x i32>
  %819 = zext <8 x i8> %SplitLoadShuffle7323 to <8 x i32>
  %820 = shl nuw nsw <8 x i32> %817, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %821 = shl nuw nsw <8 x i32> %818, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %822 = sub nsw <8 x i32> %820, %819
  %823 = sub nsw <8 x i32> %822, %821
  %824 = add nsw <8 x i32> %823, %816
  %arrayIdx2912 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 9, i64 6
  %arrayIdx2930 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 9, i64 5
  %arrayIdx2948 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 9, i64 7
  %825 = extractelement <8 x i32> %824, i32 3
  %826 = insertelement <8 x i32> undef, i32 %825, i32 0
  %827 = extractelement <8 x i32> %824, i32 0
  %828 = insertelement <8 x i32> %826, i32 %827, i32 1
  %829 = insertelement <8 x i32> %828, i32 %827, i32 2
  %830 = insertelement <8 x i32> %829, i32 %827, i32 3
  %831 = extractelement <8 x i32> %824, i32 7
  %832 = insertelement <8 x i32> %830, i32 %831, i32 4
  %833 = extractelement <8 x i32> %824, i32 4
  %834 = insertelement <8 x i32> %832, i32 %833, i32 5
  %835 = insertelement <8 x i32> %834, i32 %833, i32 6
  %836 = insertelement <8 x i32> %835, i32 %833, i32 7
  %837 = extractelement <8 x i32> %824, i32 1
  %838 = insertelement <8 x i32> undef, i32 %837, i32 0
  %839 = insertelement <8 x i32> %838, i32 %825, i32 1
  %840 = insertelement <8 x i32> %839, i32 %837, i32 2
  %841 = insertelement <8 x i32> %840, i32 %837, i32 3
  %842 = extractelement <8 x i32> %824, i32 5
  %843 = insertelement <8 x i32> %841, i32 %842, i32 4
  %844 = insertelement <8 x i32> %843, i32 %831, i32 5
  %845 = insertelement <8 x i32> %844, i32 %842, i32 6
  %846 = insertelement <8 x i32> %845, i32 %842, i32 7
  %847 = add nsw <8 x i32> %836, %846
  %848 = sub nsw <8 x i32> %836, %846
  %849 = select <8 x i1> <i1 true, i1 false, i1 true, i1 false, i1 true, i1 false, i1 true, i1 false>, <8 x i32> %847, <8 x i32> %848
  %850 = extractelement <8 x i32> %824, i32 2
  %851 = insertelement <8 x i32> undef, i32 %850, i32 0
  %852 = insertelement <8 x i32> %851, i32 %850, i32 1
  %853 = insertelement <8 x i32> %852, i32 %825, i32 2
  %854 = insertelement <8 x i32> %853, i32 %850, i32 3
  %855 = extractelement <8 x i32> %824, i32 6
  %856 = insertelement <8 x i32> %854, i32 %855, i32 4
  %857 = insertelement <8 x i32> %856, i32 %855, i32 5
  %858 = insertelement <8 x i32> %857, i32 %831, i32 6
  %859 = insertelement <8 x i32> %858, i32 %855, i32 7
  %860 = add nsw <8 x i32> %849, %859
  %861 = sub nsw <8 x i32> %849, %859
  %862 = select <8 x i1> <i1 true, i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false>, <8 x i32> %860, <8 x i32> %861
  %863 = sub <8 x i32> %862, %824
  %864 = add <8 x i32> %862, %824
  %865 = select <8 x i1> <i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false, i1 true>, <8 x i32> %864, <8 x i32> %863
  store <8 x i32> %865, ptr %arrayIdx2790, align 4
  %866 = mul nsw i64 %idx.ext.i, 10
  %arrayIdx2965 = getelementptr inbounds i8, ptr %pix1, i64 %866
  %867 = mul nsw i64 %idx.ext63.i, 10
  %arrayIdx2967 = getelementptr inbounds i8, ptr %pix2, i64 %867
  %868 = add nsw i64 %866, 4
  %arrayIdx2969 = getelementptr inbounds i8, ptr %pix1, i64 %868
  %869 = add nsw i64 %867, 4
  %arrayIdx2971 = getelementptr inbounds i8, ptr %pix2, i64 %869
  %870 = or i64 %866, 1
  %arrayIdx2973 = getelementptr inbounds i8, ptr %pix1, i64 %870
  %871 = or i64 %867, 1
  %arrayIdx2975 = getelementptr inbounds i8, ptr %pix2, i64 %871
  %872 = add nsw i64 %866, 5
  %arrayIdx2977 = getelementptr inbounds i8, ptr %pix1, i64 %872
  %873 = add nsw i64 %867, 5
  %arrayIdx2979 = getelementptr inbounds i8, ptr %pix2, i64 %873
  %874 = add nsw i64 %866, 2
  %arrayIdx2981 = getelementptr inbounds i8, ptr %pix1, i64 %874
  %875 = add nsw i64 %867, 2
  %arrayIdx2983 = getelementptr inbounds i8, ptr %pix2, i64 %875
  %876 = add nsw i64 %866, 6
  %arrayIdx2985 = getelementptr inbounds i8, ptr %pix1, i64 %876
  %877 = add nsw i64 %867, 6
  %arrayIdx2987 = getelementptr inbounds i8, ptr %pix2, i64 %877
  %878 = add nsw i64 %866, 3
  %arrayIdx2989 = getelementptr inbounds i8, ptr %pix1, i64 %878
  %879 = add nsw i64 %867, 3
  %arrayIdx2991 = getelementptr inbounds i8, ptr %pix2, i64 %879
  %880 = add nsw i64 %866, 7
  %arrayIdx2993 = getelementptr inbounds i8, ptr %pix1, i64 %880
  %881 = add nsw i64 %867, 7
  %arrayIdx2995 = getelementptr inbounds i8, ptr %pix2, i64 %881
  %arrayIdx2998 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 10, i64 0
  %arrayIdx3016 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 10, i64 2
  %arrayIdx3034 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 10, i64 1
  %arrayIdx3052 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 10, i64 3
  %882 = add nsw i64 %866, 8
  %arrayIdx3069 = getelementptr inbounds i8, ptr %pix1, i64 %882
  %883 = add nsw i64 %867, 8
  %arrayIdx3071 = getelementptr inbounds i8, ptr %pix2, i64 %883
  %884 = add nsw i64 %866, 12
  %arrayIdx3073 = getelementptr inbounds i8, ptr %pix1, i64 %884
  %885 = add nsw i64 %867, 12
  %arrayIdx3075 = getelementptr inbounds i8, ptr %pix2, i64 %885
  %886 = add nsw i64 %866, 9
  %arrayIdx3077 = getelementptr inbounds i8, ptr %pix1, i64 %886
  %887 = add nsw i64 %867, 9
  %arrayIdx3079 = getelementptr inbounds i8, ptr %pix2, i64 %887
  %888 = add nsw i64 %866, 13
  %arrayIdx3081 = getelementptr inbounds i8, ptr %pix1, i64 %888
  %889 = add nsw i64 %867, 13
  %arrayIdx3083 = getelementptr inbounds i8, ptr %pix2, i64 %889
  %890 = add nsw i64 %866, 10
  %arrayIdx3085 = getelementptr inbounds i8, ptr %pix1, i64 %890
  %891 = add nsw i64 %867, 10
  %arrayIdx3087 = getelementptr inbounds i8, ptr %pix2, i64 %891
  %892 = add nsw i64 %866, 14
  %arrayIdx3089 = getelementptr inbounds i8, ptr %pix1, i64 %892
  %893 = add nsw i64 %867, 14
  %arrayIdx3091 = getelementptr inbounds i8, ptr %pix2, i64 %893
  %894 = add nsw i64 %866, 11
  %arrayIdx3093 = getelementptr inbounds i8, ptr %pix1, i64 %894
  %895 = load <4 x i8>, ptr %arrayIdx2965, align 1, !tbaa !12
  %896 = load <4 x i8>, ptr %arrayIdx3069, align 1, !tbaa !12
  %SplitLoadShuffle7374 = shufflevector <4 x i8> %895, <4 x i8> %896, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %897 = add nsw i64 %867, 11
  %arrayIdx3095 = getelementptr inbounds i8, ptr %pix2, i64 %897
  %898 = load <4 x i8>, ptr %arrayIdx2967, align 1, !tbaa !12
  %899 = load <4 x i8>, ptr %arrayIdx3071, align 1, !tbaa !12
  %SplitLoadShuffle7372 = shufflevector <4 x i8> %898, <4 x i8> %899, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %900 = add nsw i64 %866, 15
  %arrayIdx3097 = getelementptr inbounds i8, ptr %pix1, i64 %900
  %901 = load <4 x i8>, ptr %arrayIdx2969, align 1, !tbaa !12
  %902 = load <4 x i8>, ptr %arrayIdx3073, align 1, !tbaa !12
  %SplitLoadShuffle7371 = shufflevector <4 x i8> %901, <4 x i8> %902, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %903 = add nsw i64 %867, 15
  %arrayIdx3099 = getelementptr inbounds i8, ptr %pix2, i64 %903
  %904 = load <4 x i8>, ptr %arrayIdx2971, align 1, !tbaa !12
  %905 = load <4 x i8>, ptr %arrayIdx3075, align 1, !tbaa !12
  %SplitLoadShuffle7373 = shufflevector <4 x i8> %904, <4 x i8> %905, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %arrayIdx3102 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 10, i64 4
  %906 = zext <8 x i8> %SplitLoadShuffle7374 to <8 x i32>
  %907 = zext <8 x i8> %SplitLoadShuffle7371 to <8 x i32>
  %908 = zext <8 x i8> %SplitLoadShuffle7373 to <8 x i32>
  %909 = zext <8 x i8> %SplitLoadShuffle7372 to <8 x i32>
  %910 = shl nuw nsw <8 x i32> %907, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %911 = shl nuw nsw <8 x i32> %908, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %912 = sub nsw <8 x i32> %910, %909
  %913 = sub nsw <8 x i32> %912, %911
  %914 = add nsw <8 x i32> %913, %906
  %arrayIdx3120 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 10, i64 6
  %arrayIdx3138 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 10, i64 5
  %arrayIdx3156 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 10, i64 7
  %915 = extractelement <8 x i32> %914, i32 3
  %916 = insertelement <8 x i32> undef, i32 %915, i32 0
  %917 = extractelement <8 x i32> %914, i32 0
  %918 = insertelement <8 x i32> %916, i32 %917, i32 1
  %919 = insertelement <8 x i32> %918, i32 %917, i32 2
  %920 = insertelement <8 x i32> %919, i32 %917, i32 3
  %921 = extractelement <8 x i32> %914, i32 7
  %922 = insertelement <8 x i32> %920, i32 %921, i32 4
  %923 = extractelement <8 x i32> %914, i32 4
  %924 = insertelement <8 x i32> %922, i32 %923, i32 5
  %925 = insertelement <8 x i32> %924, i32 %923, i32 6
  %926 = insertelement <8 x i32> %925, i32 %923, i32 7
  %927 = extractelement <8 x i32> %914, i32 1
  %928 = insertelement <8 x i32> undef, i32 %927, i32 0
  %929 = insertelement <8 x i32> %928, i32 %915, i32 1
  %930 = insertelement <8 x i32> %929, i32 %927, i32 2
  %931 = insertelement <8 x i32> %930, i32 %927, i32 3
  %932 = extractelement <8 x i32> %914, i32 5
  %933 = insertelement <8 x i32> %931, i32 %932, i32 4
  %934 = insertelement <8 x i32> %933, i32 %921, i32 5
  %935 = insertelement <8 x i32> %934, i32 %932, i32 6
  %936 = insertelement <8 x i32> %935, i32 %932, i32 7
  %937 = add nsw <8 x i32> %926, %936
  %938 = sub nsw <8 x i32> %926, %936
  %939 = select <8 x i1> <i1 true, i1 false, i1 true, i1 false, i1 true, i1 false, i1 true, i1 false>, <8 x i32> %937, <8 x i32> %938
  %940 = extractelement <8 x i32> %914, i32 2
  %941 = insertelement <8 x i32> undef, i32 %940, i32 0
  %942 = insertelement <8 x i32> %941, i32 %940, i32 1
  %943 = insertelement <8 x i32> %942, i32 %915, i32 2
  %944 = insertelement <8 x i32> %943, i32 %940, i32 3
  %945 = extractelement <8 x i32> %914, i32 6
  %946 = insertelement <8 x i32> %944, i32 %945, i32 4
  %947 = insertelement <8 x i32> %946, i32 %945, i32 5
  %948 = insertelement <8 x i32> %947, i32 %921, i32 6
  %949 = insertelement <8 x i32> %948, i32 %945, i32 7
  %950 = add nsw <8 x i32> %939, %949
  %951 = sub nsw <8 x i32> %939, %949
  %952 = select <8 x i1> <i1 true, i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false>, <8 x i32> %950, <8 x i32> %951
  %953 = sub <8 x i32> %952, %914
  %954 = add <8 x i32> %952, %914
  %955 = select <8 x i1> <i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false, i1 true>, <8 x i32> %954, <8 x i32> %953
  store <8 x i32> %955, ptr %arrayIdx2998, align 4
  %956 = mul nsw i64 %idx.ext.i, 11
  %arrayIdx3173 = getelementptr inbounds i8, ptr %pix1, i64 %956
  %957 = mul nsw i64 %idx.ext63.i, 11
  %arrayIdx3175 = getelementptr inbounds i8, ptr %pix2, i64 %957
  %958 = add nsw i64 %956, 4
  %arrayIdx3177 = getelementptr inbounds i8, ptr %pix1, i64 %958
  %959 = add nsw i64 %957, 4
  %arrayIdx3179 = getelementptr inbounds i8, ptr %pix2, i64 %959
  %960 = add nsw i64 %956, 1
  %arrayIdx3181 = getelementptr inbounds i8, ptr %pix1, i64 %960
  %961 = add nsw i64 %957, 1
  %arrayIdx3183 = getelementptr inbounds i8, ptr %pix2, i64 %961
  %962 = add nsw i64 %956, 5
  %arrayIdx3185 = getelementptr inbounds i8, ptr %pix1, i64 %962
  %963 = add nsw i64 %957, 5
  %arrayIdx3187 = getelementptr inbounds i8, ptr %pix2, i64 %963
  %964 = add nsw i64 %956, 2
  %arrayIdx3189 = getelementptr inbounds i8, ptr %pix1, i64 %964
  %965 = add nsw i64 %957, 2
  %arrayIdx3191 = getelementptr inbounds i8, ptr %pix2, i64 %965
  %966 = add nsw i64 %956, 6
  %arrayIdx3193 = getelementptr inbounds i8, ptr %pix1, i64 %966
  %967 = add nsw i64 %957, 6
  %arrayIdx3195 = getelementptr inbounds i8, ptr %pix2, i64 %967
  %968 = add nsw i64 %956, 3
  %arrayIdx3197 = getelementptr inbounds i8, ptr %pix1, i64 %968
  %969 = add nsw i64 %957, 3
  %arrayIdx3199 = getelementptr inbounds i8, ptr %pix2, i64 %969
  %970 = add nsw i64 %956, 7
  %arrayIdx3201 = getelementptr inbounds i8, ptr %pix1, i64 %970
  %971 = add nsw i64 %957, 7
  %arrayIdx3203 = getelementptr inbounds i8, ptr %pix2, i64 %971
  %arrayIdx3206 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 11, i64 0
  %arrayIdx3224 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 11, i64 2
  %arrayIdx3242 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 11, i64 1
  %arrayIdx3260 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 11, i64 3
  %972 = add nsw i64 %956, 8
  %arrayIdx3277 = getelementptr inbounds i8, ptr %pix1, i64 %972
  %973 = add nsw i64 %957, 8
  %arrayIdx3279 = getelementptr inbounds i8, ptr %pix2, i64 %973
  %974 = add nsw i64 %956, 12
  %arrayIdx3281 = getelementptr inbounds i8, ptr %pix1, i64 %974
  %975 = add nsw i64 %957, 12
  %arrayIdx3283 = getelementptr inbounds i8, ptr %pix2, i64 %975
  %976 = add nsw i64 %956, 9
  %arrayIdx3285 = getelementptr inbounds i8, ptr %pix1, i64 %976
  %977 = add nsw i64 %957, 9
  %arrayIdx3287 = getelementptr inbounds i8, ptr %pix2, i64 %977
  %978 = add nsw i64 %956, 13
  %arrayIdx3289 = getelementptr inbounds i8, ptr %pix1, i64 %978
  %979 = add nsw i64 %957, 13
  %arrayIdx3291 = getelementptr inbounds i8, ptr %pix2, i64 %979
  %980 = add nsw i64 %956, 10
  %arrayIdx3293 = getelementptr inbounds i8, ptr %pix1, i64 %980
  %981 = add nsw i64 %957, 10
  %arrayIdx3295 = getelementptr inbounds i8, ptr %pix2, i64 %981
  %982 = add nsw i64 %956, 14
  %arrayIdx3297 = getelementptr inbounds i8, ptr %pix1, i64 %982
  %983 = add nsw i64 %957, 14
  %arrayIdx3299 = getelementptr inbounds i8, ptr %pix2, i64 %983
  %984 = add nsw i64 %956, 11
  %arrayIdx3301 = getelementptr inbounds i8, ptr %pix1, i64 %984
  %985 = load <4 x i8>, ptr %arrayIdx3173, align 1, !tbaa !12
  %986 = load <4 x i8>, ptr %arrayIdx3277, align 1, !tbaa !12
  %SplitLoadShuffle7423 = shufflevector <4 x i8> %985, <4 x i8> %986, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %987 = add nsw i64 %957, 11
  %arrayIdx3303 = getelementptr inbounds i8, ptr %pix2, i64 %987
  %988 = load <4 x i8>, ptr %arrayIdx3175, align 1, !tbaa !12
  %989 = load <4 x i8>, ptr %arrayIdx3279, align 1, !tbaa !12
  %SplitLoadShuffle7421 = shufflevector <4 x i8> %988, <4 x i8> %989, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %990 = add nsw i64 %956, 15
  %arrayIdx3305 = getelementptr inbounds i8, ptr %pix1, i64 %990
  %991 = load <4 x i8>, ptr %arrayIdx3177, align 1, !tbaa !12
  %992 = load <4 x i8>, ptr %arrayIdx3281, align 1, !tbaa !12
  %SplitLoadShuffle7420 = shufflevector <4 x i8> %991, <4 x i8> %992, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %993 = add nsw i64 %957, 15
  %arrayIdx3307 = getelementptr inbounds i8, ptr %pix2, i64 %993
  %994 = load <4 x i8>, ptr %arrayIdx3179, align 1, !tbaa !12
  %995 = load <4 x i8>, ptr %arrayIdx3283, align 1, !tbaa !12
  %SplitLoadShuffle7422 = shufflevector <4 x i8> %994, <4 x i8> %995, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %arrayIdx3310 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 11, i64 4
  %996 = zext <8 x i8> %SplitLoadShuffle7423 to <8 x i32>
  %997 = zext <8 x i8> %SplitLoadShuffle7420 to <8 x i32>
  %998 = zext <8 x i8> %SplitLoadShuffle7422 to <8 x i32>
  %999 = zext <8 x i8> %SplitLoadShuffle7421 to <8 x i32>
  %1000 = shl nuw nsw <8 x i32> %997, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %1001 = shl nuw nsw <8 x i32> %998, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %1002 = sub nsw <8 x i32> %1000, %999
  %1003 = sub nsw <8 x i32> %1002, %1001
  %1004 = add nsw <8 x i32> %1003, %996
  %arrayIdx3328 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 11, i64 6
  %arrayIdx3346 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 11, i64 5
  %arrayIdx3364 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 11, i64 7
  %1005 = extractelement <8 x i32> %1004, i32 3
  %1006 = insertelement <8 x i32> undef, i32 %1005, i32 0
  %1007 = extractelement <8 x i32> %1004, i32 0
  %1008 = insertelement <8 x i32> %1006, i32 %1007, i32 1
  %1009 = insertelement <8 x i32> %1008, i32 %1007, i32 2
  %1010 = insertelement <8 x i32> %1009, i32 %1007, i32 3
  %1011 = extractelement <8 x i32> %1004, i32 7
  %1012 = insertelement <8 x i32> %1010, i32 %1011, i32 4
  %1013 = extractelement <8 x i32> %1004, i32 4
  %1014 = insertelement <8 x i32> %1012, i32 %1013, i32 5
  %1015 = insertelement <8 x i32> %1014, i32 %1013, i32 6
  %1016 = insertelement <8 x i32> %1015, i32 %1013, i32 7
  %1017 = extractelement <8 x i32> %1004, i32 1
  %1018 = insertelement <8 x i32> undef, i32 %1017, i32 0
  %1019 = insertelement <8 x i32> %1018, i32 %1005, i32 1
  %1020 = insertelement <8 x i32> %1019, i32 %1017, i32 2
  %1021 = insertelement <8 x i32> %1020, i32 %1017, i32 3
  %1022 = extractelement <8 x i32> %1004, i32 5
  %1023 = insertelement <8 x i32> %1021, i32 %1022, i32 4
  %1024 = insertelement <8 x i32> %1023, i32 %1011, i32 5
  %1025 = insertelement <8 x i32> %1024, i32 %1022, i32 6
  %1026 = insertelement <8 x i32> %1025, i32 %1022, i32 7
  %1027 = add nsw <8 x i32> %1016, %1026
  %1028 = sub nsw <8 x i32> %1016, %1026
  %1029 = select <8 x i1> <i1 true, i1 false, i1 true, i1 false, i1 true, i1 false, i1 true, i1 false>, <8 x i32> %1027, <8 x i32> %1028
  %1030 = extractelement <8 x i32> %1004, i32 2
  %1031 = insertelement <8 x i32> undef, i32 %1030, i32 0
  %1032 = insertelement <8 x i32> %1031, i32 %1030, i32 1
  %1033 = insertelement <8 x i32> %1032, i32 %1005, i32 2
  %1034 = insertelement <8 x i32> %1033, i32 %1030, i32 3
  %1035 = extractelement <8 x i32> %1004, i32 6
  %1036 = insertelement <8 x i32> %1034, i32 %1035, i32 4
  %1037 = insertelement <8 x i32> %1036, i32 %1035, i32 5
  %1038 = insertelement <8 x i32> %1037, i32 %1011, i32 6
  %1039 = insertelement <8 x i32> %1038, i32 %1035, i32 7
  %1040 = add nsw <8 x i32> %1029, %1039
  %1041 = sub nsw <8 x i32> %1029, %1039
  %1042 = select <8 x i1> <i1 true, i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false>, <8 x i32> %1040, <8 x i32> %1041
  %1043 = sub <8 x i32> %1042, %1004
  %1044 = add <8 x i32> %1042, %1004
  %1045 = select <8 x i1> <i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false, i1 true>, <8 x i32> %1044, <8 x i32> %1043
  store <8 x i32> %1045, ptr %arrayIdx3206, align 4
  %1046 = mul nsw i64 %idx.ext.i, 12
  %arrayIdx3381 = getelementptr inbounds i8, ptr %pix1, i64 %1046
  %1047 = mul nsw i64 %idx.ext63.i, 12
  %arrayIdx3383 = getelementptr inbounds i8, ptr %pix2, i64 %1047
  %1048 = add nsw i64 %1046, 4
  %arrayIdx3385 = getelementptr inbounds i8, ptr %pix1, i64 %1048
  %1049 = add nsw i64 %1047, 4
  %arrayIdx3387 = getelementptr inbounds i8, ptr %pix2, i64 %1049
  %1050 = or i64 %1046, 1
  %arrayIdx3389 = getelementptr inbounds i8, ptr %pix1, i64 %1050
  %1051 = or i64 %1047, 1
  %arrayIdx3391 = getelementptr inbounds i8, ptr %pix2, i64 %1051
  %1052 = add nsw i64 %1046, 5
  %arrayIdx3393 = getelementptr inbounds i8, ptr %pix1, i64 %1052
  %1053 = add nsw i64 %1047, 5
  %arrayIdx3395 = getelementptr inbounds i8, ptr %pix2, i64 %1053
  %1054 = or i64 %1046, 2
  %arrayIdx3397 = getelementptr inbounds i8, ptr %pix1, i64 %1054
  %1055 = or i64 %1047, 2
  %arrayIdx3399 = getelementptr inbounds i8, ptr %pix2, i64 %1055
  %1056 = add nsw i64 %1046, 6
  %arrayIdx3401 = getelementptr inbounds i8, ptr %pix1, i64 %1056
  %1057 = add nsw i64 %1047, 6
  %arrayIdx3403 = getelementptr inbounds i8, ptr %pix2, i64 %1057
  %1058 = or i64 %1046, 3
  %arrayIdx3405 = getelementptr inbounds i8, ptr %pix1, i64 %1058
  %1059 = or i64 %1047, 3
  %arrayIdx3407 = getelementptr inbounds i8, ptr %pix2, i64 %1059
  %1060 = add nsw i64 %1046, 7
  %arrayIdx3409 = getelementptr inbounds i8, ptr %pix1, i64 %1060
  %1061 = add nsw i64 %1047, 7
  %arrayIdx3411 = getelementptr inbounds i8, ptr %pix2, i64 %1061
  %arrayIdx3414 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 12, i64 0
  %arrayIdx3432 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 12, i64 2
  %arrayIdx3450 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 12, i64 1
  %arrayIdx3468 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 12, i64 3
  %1062 = add nsw i64 %1046, 8
  %arrayIdx3485 = getelementptr inbounds i8, ptr %pix1, i64 %1062
  %1063 = add nsw i64 %1047, 8
  %arrayIdx3487 = getelementptr inbounds i8, ptr %pix2, i64 %1063
  %1064 = add nsw i64 %1046, 12
  %arrayIdx3489 = getelementptr inbounds i8, ptr %pix1, i64 %1064
  %1065 = add nsw i64 %1047, 12
  %arrayIdx3491 = getelementptr inbounds i8, ptr %pix2, i64 %1065
  %1066 = add nsw i64 %1046, 9
  %arrayIdx3493 = getelementptr inbounds i8, ptr %pix1, i64 %1066
  %1067 = add nsw i64 %1047, 9
  %arrayIdx3495 = getelementptr inbounds i8, ptr %pix2, i64 %1067
  %1068 = add nsw i64 %1046, 13
  %arrayIdx3497 = getelementptr inbounds i8, ptr %pix1, i64 %1068
  %1069 = add nsw i64 %1047, 13
  %arrayIdx3499 = getelementptr inbounds i8, ptr %pix2, i64 %1069
  %1070 = add nsw i64 %1046, 10
  %arrayIdx3501 = getelementptr inbounds i8, ptr %pix1, i64 %1070
  %1071 = add nsw i64 %1047, 10
  %arrayIdx3503 = getelementptr inbounds i8, ptr %pix2, i64 %1071
  %1072 = add nsw i64 %1046, 14
  %arrayIdx3505 = getelementptr inbounds i8, ptr %pix1, i64 %1072
  %1073 = add nsw i64 %1047, 14
  %arrayIdx3507 = getelementptr inbounds i8, ptr %pix2, i64 %1073
  %1074 = add nsw i64 %1046, 11
  %arrayIdx3509 = getelementptr inbounds i8, ptr %pix1, i64 %1074
  %1075 = load <4 x i8>, ptr %arrayIdx3381, align 1, !tbaa !12
  %1076 = load <4 x i8>, ptr %arrayIdx3485, align 1, !tbaa !12
  %SplitLoadShuffle7472 = shufflevector <4 x i8> %1075, <4 x i8> %1076, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %1077 = add nsw i64 %1047, 11
  %arrayIdx3511 = getelementptr inbounds i8, ptr %pix2, i64 %1077
  %1078 = load <4 x i8>, ptr %arrayIdx3383, align 1, !tbaa !12
  %1079 = load <4 x i8>, ptr %arrayIdx3487, align 1, !tbaa !12
  %SplitLoadShuffle7470 = shufflevector <4 x i8> %1078, <4 x i8> %1079, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %1080 = add nsw i64 %1046, 15
  %arrayIdx3513 = getelementptr inbounds i8, ptr %pix1, i64 %1080
  %1081 = load <4 x i8>, ptr %arrayIdx3385, align 1, !tbaa !12
  %1082 = load <4 x i8>, ptr %arrayIdx3489, align 1, !tbaa !12
  %SplitLoadShuffle7469 = shufflevector <4 x i8> %1081, <4 x i8> %1082, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %1083 = add nsw i64 %1047, 15
  %arrayIdx3515 = getelementptr inbounds i8, ptr %pix2, i64 %1083
  %1084 = load <4 x i8>, ptr %arrayIdx3387, align 1, !tbaa !12
  %1085 = load <4 x i8>, ptr %arrayIdx3491, align 1, !tbaa !12
  %SplitLoadShuffle7471 = shufflevector <4 x i8> %1084, <4 x i8> %1085, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %arrayIdx3518 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 12, i64 4
  %1086 = zext <8 x i8> %SplitLoadShuffle7472 to <8 x i32>
  %1087 = zext <8 x i8> %SplitLoadShuffle7469 to <8 x i32>
  %1088 = zext <8 x i8> %SplitLoadShuffle7471 to <8 x i32>
  %1089 = zext <8 x i8> %SplitLoadShuffle7470 to <8 x i32>
  %1090 = shl nuw nsw <8 x i32> %1087, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %1091 = shl nuw nsw <8 x i32> %1088, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %1092 = sub nsw <8 x i32> %1090, %1089
  %1093 = sub nsw <8 x i32> %1092, %1091
  %1094 = add nsw <8 x i32> %1093, %1086
  %arrayIdx3536 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 12, i64 6
  %arrayIdx3554 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 12, i64 5
  %arrayIdx3572 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 12, i64 7
  %1095 = extractelement <8 x i32> %1094, i32 3
  %1096 = insertelement <8 x i32> undef, i32 %1095, i32 0
  %1097 = extractelement <8 x i32> %1094, i32 0
  %1098 = insertelement <8 x i32> %1096, i32 %1097, i32 1
  %1099 = insertelement <8 x i32> %1098, i32 %1097, i32 2
  %1100 = insertelement <8 x i32> %1099, i32 %1097, i32 3
  %1101 = extractelement <8 x i32> %1094, i32 7
  %1102 = insertelement <8 x i32> %1100, i32 %1101, i32 4
  %1103 = extractelement <8 x i32> %1094, i32 4
  %1104 = insertelement <8 x i32> %1102, i32 %1103, i32 5
  %1105 = insertelement <8 x i32> %1104, i32 %1103, i32 6
  %1106 = insertelement <8 x i32> %1105, i32 %1103, i32 7
  %1107 = extractelement <8 x i32> %1094, i32 1
  %1108 = insertelement <8 x i32> undef, i32 %1107, i32 0
  %1109 = insertelement <8 x i32> %1108, i32 %1095, i32 1
  %1110 = insertelement <8 x i32> %1109, i32 %1107, i32 2
  %1111 = insertelement <8 x i32> %1110, i32 %1107, i32 3
  %1112 = extractelement <8 x i32> %1094, i32 5
  %1113 = insertelement <8 x i32> %1111, i32 %1112, i32 4
  %1114 = insertelement <8 x i32> %1113, i32 %1101, i32 5
  %1115 = insertelement <8 x i32> %1114, i32 %1112, i32 6
  %1116 = insertelement <8 x i32> %1115, i32 %1112, i32 7
  %1117 = add nsw <8 x i32> %1106, %1116
  %1118 = sub nsw <8 x i32> %1106, %1116
  %1119 = select <8 x i1> <i1 true, i1 false, i1 true, i1 false, i1 true, i1 false, i1 true, i1 false>, <8 x i32> %1117, <8 x i32> %1118
  %1120 = extractelement <8 x i32> %1094, i32 2
  %1121 = insertelement <8 x i32> undef, i32 %1120, i32 0
  %1122 = insertelement <8 x i32> %1121, i32 %1120, i32 1
  %1123 = insertelement <8 x i32> %1122, i32 %1095, i32 2
  %1124 = insertelement <8 x i32> %1123, i32 %1120, i32 3
  %1125 = extractelement <8 x i32> %1094, i32 6
  %1126 = insertelement <8 x i32> %1124, i32 %1125, i32 4
  %1127 = insertelement <8 x i32> %1126, i32 %1125, i32 5
  %1128 = insertelement <8 x i32> %1127, i32 %1101, i32 6
  %1129 = insertelement <8 x i32> %1128, i32 %1125, i32 7
  %1130 = add nsw <8 x i32> %1119, %1129
  %1131 = sub nsw <8 x i32> %1119, %1129
  %1132 = select <8 x i1> <i1 true, i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false>, <8 x i32> %1130, <8 x i32> %1131
  %1133 = sub <8 x i32> %1132, %1094
  %1134 = add <8 x i32> %1132, %1094
  %1135 = select <8 x i1> <i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false, i1 true>, <8 x i32> %1134, <8 x i32> %1133
  store <8 x i32> %1135, ptr %arrayIdx3414, align 4
  %1136 = mul nsw i64 %idx.ext.i, 13
  %arrayIdx3589 = getelementptr inbounds i8, ptr %pix1, i64 %1136
  %1137 = mul nsw i64 %idx.ext63.i, 13
  %arrayIdx3591 = getelementptr inbounds i8, ptr %pix2, i64 %1137
  %1138 = add nsw i64 %1136, 4
  %arrayIdx3593 = getelementptr inbounds i8, ptr %pix1, i64 %1138
  %1139 = add nsw i64 %1137, 4
  %arrayIdx3595 = getelementptr inbounds i8, ptr %pix2, i64 %1139
  %1140 = add nsw i64 %1136, 1
  %arrayIdx3597 = getelementptr inbounds i8, ptr %pix1, i64 %1140
  %1141 = add nsw i64 %1137, 1
  %arrayIdx3599 = getelementptr inbounds i8, ptr %pix2, i64 %1141
  %1142 = add nsw i64 %1136, 5
  %arrayIdx3601 = getelementptr inbounds i8, ptr %pix1, i64 %1142
  %1143 = add nsw i64 %1137, 5
  %arrayIdx3603 = getelementptr inbounds i8, ptr %pix2, i64 %1143
  %1144 = add nsw i64 %1136, 2
  %arrayIdx3605 = getelementptr inbounds i8, ptr %pix1, i64 %1144
  %1145 = add nsw i64 %1137, 2
  %arrayIdx3607 = getelementptr inbounds i8, ptr %pix2, i64 %1145
  %1146 = add nsw i64 %1136, 6
  %arrayIdx3609 = getelementptr inbounds i8, ptr %pix1, i64 %1146
  %1147 = add nsw i64 %1137, 6
  %arrayIdx3611 = getelementptr inbounds i8, ptr %pix2, i64 %1147
  %1148 = add nsw i64 %1136, 3
  %arrayIdx3613 = getelementptr inbounds i8, ptr %pix1, i64 %1148
  %1149 = add nsw i64 %1137, 3
  %arrayIdx3615 = getelementptr inbounds i8, ptr %pix2, i64 %1149
  %1150 = add nsw i64 %1136, 7
  %arrayIdx3617 = getelementptr inbounds i8, ptr %pix1, i64 %1150
  %1151 = add nsw i64 %1137, 7
  %arrayIdx3619 = getelementptr inbounds i8, ptr %pix2, i64 %1151
  %arrayIdx3622 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 13, i64 0
  %arrayIdx3640 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 13, i64 2
  %arrayIdx3658 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 13, i64 1
  %arrayIdx3676 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 13, i64 3
  %1152 = add nsw i64 %1136, 8
  %arrayIdx3693 = getelementptr inbounds i8, ptr %pix1, i64 %1152
  %1153 = add nsw i64 %1137, 8
  %arrayIdx3695 = getelementptr inbounds i8, ptr %pix2, i64 %1153
  %1154 = add nsw i64 %1136, 12
  %arrayIdx3697 = getelementptr inbounds i8, ptr %pix1, i64 %1154
  %1155 = add nsw i64 %1137, 12
  %arrayIdx3699 = getelementptr inbounds i8, ptr %pix2, i64 %1155
  %1156 = add nsw i64 %1136, 9
  %arrayIdx3701 = getelementptr inbounds i8, ptr %pix1, i64 %1156
  %1157 = add nsw i64 %1137, 9
  %arrayIdx3703 = getelementptr inbounds i8, ptr %pix2, i64 %1157
  %1158 = add nsw i64 %1136, 13
  %arrayIdx3705 = getelementptr inbounds i8, ptr %pix1, i64 %1158
  %1159 = add nsw i64 %1137, 13
  %arrayIdx3707 = getelementptr inbounds i8, ptr %pix2, i64 %1159
  %1160 = add nsw i64 %1136, 10
  %arrayIdx3709 = getelementptr inbounds i8, ptr %pix1, i64 %1160
  %1161 = add nsw i64 %1137, 10
  %arrayIdx3711 = getelementptr inbounds i8, ptr %pix2, i64 %1161
  %1162 = add nsw i64 %1136, 14
  %arrayIdx3713 = getelementptr inbounds i8, ptr %pix1, i64 %1162
  %1163 = add nsw i64 %1137, 14
  %arrayIdx3715 = getelementptr inbounds i8, ptr %pix2, i64 %1163
  %1164 = add nsw i64 %1136, 11
  %arrayIdx3717 = getelementptr inbounds i8, ptr %pix1, i64 %1164
  %1165 = load <4 x i8>, ptr %arrayIdx3589, align 1, !tbaa !12
  %1166 = load <4 x i8>, ptr %arrayIdx3693, align 1, !tbaa !12
  %SplitLoadShuffle7521 = shufflevector <4 x i8> %1165, <4 x i8> %1166, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %1167 = add nsw i64 %1137, 11
  %arrayIdx3719 = getelementptr inbounds i8, ptr %pix2, i64 %1167
  %1168 = load <4 x i8>, ptr %arrayIdx3591, align 1, !tbaa !12
  %1169 = load <4 x i8>, ptr %arrayIdx3695, align 1, !tbaa !12
  %SplitLoadShuffle7519 = shufflevector <4 x i8> %1168, <4 x i8> %1169, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %1170 = add nsw i64 %1136, 15
  %arrayIdx3721 = getelementptr inbounds i8, ptr %pix1, i64 %1170
  %1171 = load <4 x i8>, ptr %arrayIdx3593, align 1, !tbaa !12
  %1172 = load <4 x i8>, ptr %arrayIdx3697, align 1, !tbaa !12
  %SplitLoadShuffle7518 = shufflevector <4 x i8> %1171, <4 x i8> %1172, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %1173 = add nsw i64 %1137, 15
  %arrayIdx3723 = getelementptr inbounds i8, ptr %pix2, i64 %1173
  %1174 = load <4 x i8>, ptr %arrayIdx3595, align 1, !tbaa !12
  %1175 = load <4 x i8>, ptr %arrayIdx3699, align 1, !tbaa !12
  %SplitLoadShuffle7520 = shufflevector <4 x i8> %1174, <4 x i8> %1175, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %arrayIdx3726 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 13, i64 4
  %1176 = zext <8 x i8> %SplitLoadShuffle7521 to <8 x i32>
  %1177 = zext <8 x i8> %SplitLoadShuffle7518 to <8 x i32>
  %1178 = zext <8 x i8> %SplitLoadShuffle7520 to <8 x i32>
  %1179 = zext <8 x i8> %SplitLoadShuffle7519 to <8 x i32>
  %1180 = shl nuw nsw <8 x i32> %1177, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %1181 = shl nuw nsw <8 x i32> %1178, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %1182 = sub nsw <8 x i32> %1180, %1179
  %1183 = sub nsw <8 x i32> %1182, %1181
  %1184 = add nsw <8 x i32> %1183, %1176
  %arrayIdx3744 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 13, i64 6
  %arrayIdx3762 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 13, i64 5
  %arrayIdx3780 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 13, i64 7
  %1185 = extractelement <8 x i32> %1184, i32 3
  %1186 = insertelement <8 x i32> undef, i32 %1185, i32 0
  %1187 = extractelement <8 x i32> %1184, i32 0
  %1188 = insertelement <8 x i32> %1186, i32 %1187, i32 1
  %1189 = insertelement <8 x i32> %1188, i32 %1187, i32 2
  %1190 = insertelement <8 x i32> %1189, i32 %1187, i32 3
  %1191 = extractelement <8 x i32> %1184, i32 7
  %1192 = insertelement <8 x i32> %1190, i32 %1191, i32 4
  %1193 = extractelement <8 x i32> %1184, i32 4
  %1194 = insertelement <8 x i32> %1192, i32 %1193, i32 5
  %1195 = insertelement <8 x i32> %1194, i32 %1193, i32 6
  %1196 = insertelement <8 x i32> %1195, i32 %1193, i32 7
  %1197 = extractelement <8 x i32> %1184, i32 1
  %1198 = insertelement <8 x i32> undef, i32 %1197, i32 0
  %1199 = insertelement <8 x i32> %1198, i32 %1185, i32 1
  %1200 = insertelement <8 x i32> %1199, i32 %1197, i32 2
  %1201 = insertelement <8 x i32> %1200, i32 %1197, i32 3
  %1202 = extractelement <8 x i32> %1184, i32 5
  %1203 = insertelement <8 x i32> %1201, i32 %1202, i32 4
  %1204 = insertelement <8 x i32> %1203, i32 %1191, i32 5
  %1205 = insertelement <8 x i32> %1204, i32 %1202, i32 6
  %1206 = insertelement <8 x i32> %1205, i32 %1202, i32 7
  %1207 = add nsw <8 x i32> %1196, %1206
  %1208 = sub nsw <8 x i32> %1196, %1206
  %1209 = select <8 x i1> <i1 true, i1 false, i1 true, i1 false, i1 true, i1 false, i1 true, i1 false>, <8 x i32> %1207, <8 x i32> %1208
  %1210 = extractelement <8 x i32> %1184, i32 2
  %1211 = insertelement <8 x i32> undef, i32 %1210, i32 0
  %1212 = insertelement <8 x i32> %1211, i32 %1210, i32 1
  %1213 = insertelement <8 x i32> %1212, i32 %1185, i32 2
  %1214 = insertelement <8 x i32> %1213, i32 %1210, i32 3
  %1215 = extractelement <8 x i32> %1184, i32 6
  %1216 = insertelement <8 x i32> %1214, i32 %1215, i32 4
  %1217 = insertelement <8 x i32> %1216, i32 %1215, i32 5
  %1218 = insertelement <8 x i32> %1217, i32 %1191, i32 6
  %1219 = insertelement <8 x i32> %1218, i32 %1215, i32 7
  %1220 = add nsw <8 x i32> %1209, %1219
  %1221 = sub nsw <8 x i32> %1209, %1219
  %1222 = select <8 x i1> <i1 true, i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false>, <8 x i32> %1220, <8 x i32> %1221
  %1223 = sub <8 x i32> %1222, %1184
  %1224 = add <8 x i32> %1222, %1184
  %1225 = select <8 x i1> <i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false, i1 true>, <8 x i32> %1224, <8 x i32> %1223
  store <8 x i32> %1225, ptr %arrayIdx3622, align 4
  %1226 = mul nsw i64 %idx.ext.i, 14
  %arrayIdx3797 = getelementptr inbounds i8, ptr %pix1, i64 %1226
  %1227 = mul nsw i64 %idx.ext63.i, 14
  %arrayIdx3799 = getelementptr inbounds i8, ptr %pix2, i64 %1227
  %1228 = add nsw i64 %1226, 4
  %arrayIdx3801 = getelementptr inbounds i8, ptr %pix1, i64 %1228
  %1229 = add nsw i64 %1227, 4
  %arrayIdx3803 = getelementptr inbounds i8, ptr %pix2, i64 %1229
  %1230 = or i64 %1226, 1
  %arrayIdx3805 = getelementptr inbounds i8, ptr %pix1, i64 %1230
  %1231 = or i64 %1227, 1
  %arrayIdx3807 = getelementptr inbounds i8, ptr %pix2, i64 %1231
  %1232 = add nsw i64 %1226, 5
  %arrayIdx3809 = getelementptr inbounds i8, ptr %pix1, i64 %1232
  %1233 = add nsw i64 %1227, 5
  %arrayIdx3811 = getelementptr inbounds i8, ptr %pix2, i64 %1233
  %1234 = add nsw i64 %1226, 2
  %arrayIdx3813 = getelementptr inbounds i8, ptr %pix1, i64 %1234
  %1235 = add nsw i64 %1227, 2
  %arrayIdx3815 = getelementptr inbounds i8, ptr %pix2, i64 %1235
  %1236 = add nsw i64 %1226, 6
  %arrayIdx3817 = getelementptr inbounds i8, ptr %pix1, i64 %1236
  %1237 = add nsw i64 %1227, 6
  %arrayIdx3819 = getelementptr inbounds i8, ptr %pix2, i64 %1237
  %1238 = add nsw i64 %1226, 3
  %arrayIdx3821 = getelementptr inbounds i8, ptr %pix1, i64 %1238
  %1239 = add nsw i64 %1227, 3
  %arrayIdx3823 = getelementptr inbounds i8, ptr %pix2, i64 %1239
  %1240 = add nsw i64 %1226, 7
  %arrayIdx3825 = getelementptr inbounds i8, ptr %pix1, i64 %1240
  %1241 = add nsw i64 %1227, 7
  %arrayIdx3827 = getelementptr inbounds i8, ptr %pix2, i64 %1241
  %arrayIdx3830 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 14, i64 0
  %arrayIdx3848 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 14, i64 2
  %arrayIdx3866 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 14, i64 1
  %arrayIdx3884 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 14, i64 3
  %1242 = add nsw i64 %1226, 8
  %arrayIdx3901 = getelementptr inbounds i8, ptr %pix1, i64 %1242
  %1243 = add nsw i64 %1227, 8
  %arrayIdx3903 = getelementptr inbounds i8, ptr %pix2, i64 %1243
  %1244 = add nsw i64 %1226, 12
  %arrayIdx3905 = getelementptr inbounds i8, ptr %pix1, i64 %1244
  %1245 = add nsw i64 %1227, 12
  %arrayIdx3907 = getelementptr inbounds i8, ptr %pix2, i64 %1245
  %1246 = add nsw i64 %1226, 9
  %arrayIdx3909 = getelementptr inbounds i8, ptr %pix1, i64 %1246
  %1247 = add nsw i64 %1227, 9
  %arrayIdx3911 = getelementptr inbounds i8, ptr %pix2, i64 %1247
  %1248 = add nsw i64 %1226, 13
  %arrayIdx3913 = getelementptr inbounds i8, ptr %pix1, i64 %1248
  %1249 = add nsw i64 %1227, 13
  %arrayIdx3915 = getelementptr inbounds i8, ptr %pix2, i64 %1249
  %1250 = add nsw i64 %1226, 10
  %arrayIdx3917 = getelementptr inbounds i8, ptr %pix1, i64 %1250
  %1251 = add nsw i64 %1227, 10
  %arrayIdx3919 = getelementptr inbounds i8, ptr %pix2, i64 %1251
  %1252 = add nsw i64 %1226, 14
  %arrayIdx3921 = getelementptr inbounds i8, ptr %pix1, i64 %1252
  %1253 = add nsw i64 %1227, 14
  %arrayIdx3923 = getelementptr inbounds i8, ptr %pix2, i64 %1253
  %1254 = add nsw i64 %1226, 11
  %arrayIdx3925 = getelementptr inbounds i8, ptr %pix1, i64 %1254
  %1255 = load <4 x i8>, ptr %arrayIdx3797, align 1, !tbaa !12
  %1256 = load <4 x i8>, ptr %arrayIdx3901, align 1, !tbaa !12
  %SplitLoadShuffle7570 = shufflevector <4 x i8> %1255, <4 x i8> %1256, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %1257 = add nsw i64 %1227, 11
  %arrayIdx3927 = getelementptr inbounds i8, ptr %pix2, i64 %1257
  %1258 = load <4 x i8>, ptr %arrayIdx3799, align 1, !tbaa !12
  %1259 = load <4 x i8>, ptr %arrayIdx3903, align 1, !tbaa !12
  %SplitLoadShuffle7568 = shufflevector <4 x i8> %1258, <4 x i8> %1259, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %1260 = add nsw i64 %1226, 15
  %arrayIdx3929 = getelementptr inbounds i8, ptr %pix1, i64 %1260
  %1261 = load <4 x i8>, ptr %arrayIdx3801, align 1, !tbaa !12
  %1262 = load <4 x i8>, ptr %arrayIdx3905, align 1, !tbaa !12
  %SplitLoadShuffle7567 = shufflevector <4 x i8> %1261, <4 x i8> %1262, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %1263 = add nsw i64 %1227, 15
  %arrayIdx3931 = getelementptr inbounds i8, ptr %pix2, i64 %1263
  %1264 = load <4 x i8>, ptr %arrayIdx3803, align 1, !tbaa !12
  %1265 = load <4 x i8>, ptr %arrayIdx3907, align 1, !tbaa !12
  %SplitLoadShuffle7569 = shufflevector <4 x i8> %1264, <4 x i8> %1265, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %arrayIdx3934 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 14, i64 4
  %1266 = zext <8 x i8> %SplitLoadShuffle7570 to <8 x i32>
  %1267 = zext <8 x i8> %SplitLoadShuffle7567 to <8 x i32>
  %1268 = zext <8 x i8> %SplitLoadShuffle7569 to <8 x i32>
  %1269 = zext <8 x i8> %SplitLoadShuffle7568 to <8 x i32>
  %1270 = shl nuw nsw <8 x i32> %1267, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %1271 = shl nuw nsw <8 x i32> %1268, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %1272 = sub nsw <8 x i32> %1270, %1269
  %1273 = sub nsw <8 x i32> %1272, %1271
  %1274 = add nsw <8 x i32> %1273, %1266
  %arrayIdx3952 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 14, i64 6
  %arrayIdx3970 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 14, i64 5
  %arrayIdx3988 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 14, i64 7
  %1275 = extractelement <8 x i32> %1274, i32 3
  %1276 = insertelement <8 x i32> undef, i32 %1275, i32 0
  %1277 = extractelement <8 x i32> %1274, i32 0
  %1278 = insertelement <8 x i32> %1276, i32 %1277, i32 1
  %1279 = insertelement <8 x i32> %1278, i32 %1277, i32 2
  %1280 = insertelement <8 x i32> %1279, i32 %1277, i32 3
  %1281 = extractelement <8 x i32> %1274, i32 7
  %1282 = insertelement <8 x i32> %1280, i32 %1281, i32 4
  %1283 = extractelement <8 x i32> %1274, i32 4
  %1284 = insertelement <8 x i32> %1282, i32 %1283, i32 5
  %1285 = insertelement <8 x i32> %1284, i32 %1283, i32 6
  %1286 = insertelement <8 x i32> %1285, i32 %1283, i32 7
  %1287 = extractelement <8 x i32> %1274, i32 1
  %1288 = insertelement <8 x i32> undef, i32 %1287, i32 0
  %1289 = insertelement <8 x i32> %1288, i32 %1275, i32 1
  %1290 = insertelement <8 x i32> %1289, i32 %1287, i32 2
  %1291 = insertelement <8 x i32> %1290, i32 %1287, i32 3
  %1292 = extractelement <8 x i32> %1274, i32 5
  %1293 = insertelement <8 x i32> %1291, i32 %1292, i32 4
  %1294 = insertelement <8 x i32> %1293, i32 %1281, i32 5
  %1295 = insertelement <8 x i32> %1294, i32 %1292, i32 6
  %1296 = insertelement <8 x i32> %1295, i32 %1292, i32 7
  %1297 = add nsw <8 x i32> %1286, %1296
  %1298 = sub nsw <8 x i32> %1286, %1296
  %1299 = select <8 x i1> <i1 true, i1 false, i1 true, i1 false, i1 true, i1 false, i1 true, i1 false>, <8 x i32> %1297, <8 x i32> %1298
  %1300 = extractelement <8 x i32> %1274, i32 2
  %1301 = insertelement <8 x i32> undef, i32 %1300, i32 0
  %1302 = insertelement <8 x i32> %1301, i32 %1300, i32 1
  %1303 = insertelement <8 x i32> %1302, i32 %1275, i32 2
  %1304 = insertelement <8 x i32> %1303, i32 %1300, i32 3
  %1305 = extractelement <8 x i32> %1274, i32 6
  %1306 = insertelement <8 x i32> %1304, i32 %1305, i32 4
  %1307 = insertelement <8 x i32> %1306, i32 %1305, i32 5
  %1308 = insertelement <8 x i32> %1307, i32 %1281, i32 6
  %1309 = insertelement <8 x i32> %1308, i32 %1305, i32 7
  %1310 = add nsw <8 x i32> %1299, %1309
  %1311 = sub nsw <8 x i32> %1299, %1309
  %1312 = select <8 x i1> <i1 true, i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false>, <8 x i32> %1310, <8 x i32> %1311
  %1313 = sub <8 x i32> %1312, %1274
  %1314 = add <8 x i32> %1312, %1274
  %1315 = select <8 x i1> <i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false, i1 true>, <8 x i32> %1314, <8 x i32> %1313
  store <8 x i32> %1315, ptr %arrayIdx3830, align 4
  %1316 = mul nsw i64 %idx.ext.i, 15
  %arrayIdx4005 = getelementptr inbounds i8, ptr %pix1, i64 %1316
  %1317 = mul nsw i64 %idx.ext63.i, 15
  %arrayIdx4007 = getelementptr inbounds i8, ptr %pix2, i64 %1317
  %1318 = add nsw i64 %1316, 4
  %arrayIdx4009 = getelementptr inbounds i8, ptr %pix1, i64 %1318
  %1319 = add nsw i64 %1317, 4
  %arrayIdx4011 = getelementptr inbounds i8, ptr %pix2, i64 %1319
  %1320 = add nsw i64 %1316, 1
  %arrayIdx4013 = getelementptr inbounds i8, ptr %pix1, i64 %1320
  %1321 = add nsw i64 %1317, 1
  %arrayIdx4015 = getelementptr inbounds i8, ptr %pix2, i64 %1321
  %1322 = add nsw i64 %1316, 5
  %arrayIdx4017 = getelementptr inbounds i8, ptr %pix1, i64 %1322
  %1323 = add nsw i64 %1317, 5
  %arrayIdx4019 = getelementptr inbounds i8, ptr %pix2, i64 %1323
  %1324 = add nsw i64 %1316, 2
  %arrayIdx4021 = getelementptr inbounds i8, ptr %pix1, i64 %1324
  %1325 = add nsw i64 %1317, 2
  %arrayIdx4023 = getelementptr inbounds i8, ptr %pix2, i64 %1325
  %1326 = add nsw i64 %1316, 6
  %arrayIdx4025 = getelementptr inbounds i8, ptr %pix1, i64 %1326
  %1327 = add nsw i64 %1317, 6
  %arrayIdx4027 = getelementptr inbounds i8, ptr %pix2, i64 %1327
  %1328 = add nsw i64 %1316, 3
  %arrayIdx4029 = getelementptr inbounds i8, ptr %pix1, i64 %1328
  %1329 = add nsw i64 %1317, 3
  %arrayIdx4031 = getelementptr inbounds i8, ptr %pix2, i64 %1329
  %1330 = add nsw i64 %1316, 7
  %arrayIdx4033 = getelementptr inbounds i8, ptr %pix1, i64 %1330
  %1331 = add nsw i64 %1317, 7
  %arrayIdx4035 = getelementptr inbounds i8, ptr %pix2, i64 %1331
  %arrayIdx4038 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 15, i64 0
  %arrayIdx4056 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 15, i64 2
  %arrayIdx4074 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 15, i64 1
  %arrayIdx4092 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 15, i64 3
  %1332 = add nsw i64 %1316, 8
  %arrayIdx4109 = getelementptr inbounds i8, ptr %pix1, i64 %1332
  %1333 = add nsw i64 %1317, 8
  %arrayIdx4111 = getelementptr inbounds i8, ptr %pix2, i64 %1333
  %1334 = add nsw i64 %1316, 12
  %arrayIdx4113 = getelementptr inbounds i8, ptr %pix1, i64 %1334
  %1335 = add nsw i64 %1317, 12
  %arrayIdx4115 = getelementptr inbounds i8, ptr %pix2, i64 %1335
  %1336 = add nsw i64 %1316, 9
  %arrayIdx4117 = getelementptr inbounds i8, ptr %pix1, i64 %1336
  %1337 = add nsw i64 %1317, 9
  %arrayIdx4119 = getelementptr inbounds i8, ptr %pix2, i64 %1337
  %1338 = add nsw i64 %1316, 13
  %arrayIdx4121 = getelementptr inbounds i8, ptr %pix1, i64 %1338
  %1339 = add nsw i64 %1317, 13
  %arrayIdx4123 = getelementptr inbounds i8, ptr %pix2, i64 %1339
  %1340 = add nsw i64 %1316, 10
  %arrayIdx4125 = getelementptr inbounds i8, ptr %pix1, i64 %1340
  %1341 = add nsw i64 %1317, 10
  %arrayIdx4127 = getelementptr inbounds i8, ptr %pix2, i64 %1341
  %1342 = add nsw i64 %1316, 14
  %arrayIdx4129 = getelementptr inbounds i8, ptr %pix1, i64 %1342
  %1343 = add nsw i64 %1317, 14
  %arrayIdx4131 = getelementptr inbounds i8, ptr %pix2, i64 %1343
  %1344 = add nsw i64 %1316, 11
  %arrayIdx4133 = getelementptr inbounds i8, ptr %pix1, i64 %1344
  %1345 = load <4 x i8>, ptr %arrayIdx4005, align 1, !tbaa !12
  %1346 = load <4 x i8>, ptr %arrayIdx4109, align 1, !tbaa !12
  %SplitLoadShuffle7619 = shufflevector <4 x i8> %1345, <4 x i8> %1346, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %1347 = add nsw i64 %1317, 11
  %arrayIdx4135 = getelementptr inbounds i8, ptr %pix2, i64 %1347
  %1348 = load <4 x i8>, ptr %arrayIdx4007, align 1, !tbaa !12
  %1349 = load <4 x i8>, ptr %arrayIdx4111, align 1, !tbaa !12
  %SplitLoadShuffle7617 = shufflevector <4 x i8> %1348, <4 x i8> %1349, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %1350 = add nsw i64 %1316, 15
  %arrayIdx4137 = getelementptr inbounds i8, ptr %pix1, i64 %1350
  %1351 = load <4 x i8>, ptr %arrayIdx4009, align 1, !tbaa !12
  %1352 = load <4 x i8>, ptr %arrayIdx4113, align 1, !tbaa !12
  %SplitLoadShuffle7616 = shufflevector <4 x i8> %1351, <4 x i8> %1352, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %1353 = add nsw i64 %1317, 15
  %arrayIdx4139 = getelementptr inbounds i8, ptr %pix2, i64 %1353
  %1354 = load <4 x i8>, ptr %arrayIdx4011, align 1, !tbaa !12
  %1355 = load <4 x i8>, ptr %arrayIdx4115, align 1, !tbaa !12
  %SplitLoadShuffle7618 = shufflevector <4 x i8> %1354, <4 x i8> %1355, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %arrayIdx4142 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 15, i64 4
  %1356 = zext <8 x i8> %SplitLoadShuffle7619 to <8 x i32>
  %1357 = zext <8 x i8> %SplitLoadShuffle7616 to <8 x i32>
  %1358 = zext <8 x i8> %SplitLoadShuffle7618 to <8 x i32>
  %1359 = zext <8 x i8> %SplitLoadShuffle7617 to <8 x i32>
  %1360 = shl nuw nsw <8 x i32> %1357, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %1361 = shl nuw nsw <8 x i32> %1358, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %1362 = sub nsw <8 x i32> %1360, %1359
  %1363 = sub nsw <8 x i32> %1362, %1361
  %1364 = add nsw <8 x i32> %1363, %1356
  %arrayIdx4160 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 15, i64 6
  %arrayIdx4178 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 15, i64 5
  %arrayIdx4196 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 15, i64 7
  %1365 = extractelement <8 x i32> %1364, i32 3
  %1366 = insertelement <8 x i32> undef, i32 %1365, i32 0
  %1367 = extractelement <8 x i32> %1364, i32 0
  %1368 = insertelement <8 x i32> %1366, i32 %1367, i32 1
  %1369 = insertelement <8 x i32> %1368, i32 %1367, i32 2
  %1370 = insertelement <8 x i32> %1369, i32 %1367, i32 3
  %1371 = extractelement <8 x i32> %1364, i32 7
  %1372 = insertelement <8 x i32> %1370, i32 %1371, i32 4
  %1373 = extractelement <8 x i32> %1364, i32 4
  %1374 = insertelement <8 x i32> %1372, i32 %1373, i32 5
  %1375 = insertelement <8 x i32> %1374, i32 %1373, i32 6
  %1376 = insertelement <8 x i32> %1375, i32 %1373, i32 7
  %1377 = extractelement <8 x i32> %1364, i32 1
  %1378 = insertelement <8 x i32> undef, i32 %1377, i32 0
  %1379 = insertelement <8 x i32> %1378, i32 %1365, i32 1
  %1380 = insertelement <8 x i32> %1379, i32 %1377, i32 2
  %1381 = insertelement <8 x i32> %1380, i32 %1377, i32 3
  %1382 = extractelement <8 x i32> %1364, i32 5
  %1383 = insertelement <8 x i32> %1381, i32 %1382, i32 4
  %1384 = insertelement <8 x i32> %1383, i32 %1371, i32 5
  %1385 = insertelement <8 x i32> %1384, i32 %1382, i32 6
  %1386 = insertelement <8 x i32> %1385, i32 %1382, i32 7
  %1387 = add nsw <8 x i32> %1376, %1386
  %1388 = sub nsw <8 x i32> %1376, %1386
  %1389 = select <8 x i1> <i1 true, i1 false, i1 true, i1 false, i1 true, i1 false, i1 true, i1 false>, <8 x i32> %1387, <8 x i32> %1388
  %1390 = extractelement <8 x i32> %1364, i32 2
  %1391 = insertelement <8 x i32> undef, i32 %1390, i32 0
  %1392 = insertelement <8 x i32> %1391, i32 %1390, i32 1
  %1393 = insertelement <8 x i32> %1392, i32 %1365, i32 2
  %1394 = insertelement <8 x i32> %1393, i32 %1390, i32 3
  %1395 = extractelement <8 x i32> %1364, i32 6
  %1396 = insertelement <8 x i32> %1394, i32 %1395, i32 4
  %1397 = insertelement <8 x i32> %1396, i32 %1395, i32 5
  %1398 = insertelement <8 x i32> %1397, i32 %1371, i32 6
  %1399 = insertelement <8 x i32> %1398, i32 %1395, i32 7
  %1400 = add nsw <8 x i32> %1389, %1399
  %1401 = sub nsw <8 x i32> %1389, %1399
  %1402 = select <8 x i1> <i1 true, i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false>, <8 x i32> %1400, <8 x i32> %1401
  %1403 = sub <8 x i32> %1402, %1364
  %1404 = add <8 x i32> %1402, %1364
  %1405 = select <8 x i1> <i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false, i1 true>, <8 x i32> %1404, <8 x i32> %1403
  store <8 x i32> %1405, ptr %arrayIdx4038, align 4
  %arrayIdx4218 = getelementptr inbounds <8 x i32>, ptr %alloca842, i64 0, i64 1
  %arrayIdx4220 = getelementptr inbounds <8 x i32>, ptr %alloca843, i64 0, i64 1
  %arrayIdx4222 = getelementptr inbounds <8 x i32>, ptr %alloca844, i64 0, i64 1
  %arrayIdx4224 = getelementptr inbounds <8 x i32>, ptr %alloca845, i64 0, i64 1
  %arrayIdx4226 = getelementptr inbounds <8 x i32>, ptr %alloca842, i64 0, i64 2
  %arrayIdx4228 = getelementptr inbounds <8 x i32>, ptr %alloca843, i64 0, i64 2
  %arrayIdx4230 = getelementptr inbounds <8 x i32>, ptr %alloca844, i64 0, i64 2
  %arrayIdx4232 = getelementptr inbounds <8 x i32>, ptr %alloca845, i64 0, i64 2
  %arrayIdx4234 = getelementptr inbounds <8 x i32>, ptr %alloca842, i64 0, i64 3
  %arrayIdx4236 = getelementptr inbounds <8 x i32>, ptr %alloca843, i64 0, i64 3
  %arrayIdx4238 = getelementptr inbounds <8 x i32>, ptr %alloca844, i64 0, i64 3
  %arrayIdx4240 = getelementptr inbounds <8 x i32>, ptr %alloca845, i64 0, i64 3
  %arrayIdx4242 = getelementptr inbounds <8 x i32>, ptr %alloca842, i64 0, i64 4
  %arrayIdx4244 = getelementptr inbounds <8 x i32>, ptr %alloca843, i64 0, i64 4
  %arrayIdx4246 = getelementptr inbounds <8 x i32>, ptr %alloca844, i64 0, i64 4
  %arrayIdx4248 = getelementptr inbounds <8 x i32>, ptr %alloca845, i64 0, i64 4
  %arrayIdx4250 = getelementptr inbounds <8 x i32>, ptr %alloca842, i64 0, i64 5
  %arrayIdx4252 = getelementptr inbounds <8 x i32>, ptr %alloca843, i64 0, i64 5
  %arrayIdx4254 = getelementptr inbounds <8 x i32>, ptr %alloca844, i64 0, i64 5
  %arrayIdx4256 = getelementptr inbounds <8 x i32>, ptr %alloca845, i64 0, i64 5
  %arrayIdx4258 = getelementptr inbounds <8 x i32>, ptr %alloca842, i64 0, i64 6
  %arrayIdx4260 = getelementptr inbounds <8 x i32>, ptr %alloca843, i64 0, i64 6
  %arrayIdx4262 = getelementptr inbounds <8 x i32>, ptr %alloca844, i64 0, i64 6
  %arrayIdx4264 = getelementptr inbounds <8 x i32>, ptr %alloca845, i64 0, i64 6
  %arrayIdx4266 = getelementptr inbounds <8 x i32>, ptr %alloca842, i64 0, i64 7
  store <8 x i32> zeroinitializer, ptr %alloca842, align 16
  %arrayIdx4268 = getelementptr inbounds <8 x i32>, ptr %alloca843, i64 0, i64 7
  store <8 x i32> zeroinitializer, ptr %alloca843, align 16
  %arrayIdx4270 = getelementptr inbounds <8 x i32>, ptr %alloca844, i64 0, i64 7
  store <8 x i32> zeroinitializer, ptr %alloca844, align 16
  %arrayIdx4272 = getelementptr inbounds <8 x i32>, ptr %alloca845, i64 0, i64 7
  store <8 x i32> zeroinitializer, ptr %alloca845, align 16
  %gepload4289 = load <8 x i32>, ptr %alloca, align 4
  %arrayIdx4291 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 1, i64 0
  %gepload4292 = load <8 x i32>, ptr %arrayIdx4291, align 4
  %arrayIdx4294 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 2, i64 0
  %gepload4295 = load <8 x i32>, ptr %arrayIdx4294, align 4
  %arrayIdx4297 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 3, i64 0
  %gepload4298 = load <8 x i32>, ptr %arrayIdx4297, align 4
  %1406 = add <8 x i32> %gepload4289, %gepload4292
  %1407 = add <8 x i32> %1406, %gepload4295
  %1408 = add <8 x i32> %1407, %gepload4298
  %1409 = lshr <8 x i32> %1408, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %1410 = and <8 x i32> %1409, <i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537>
  %1411 = mul nuw <8 x i32> %1410, <i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535>
  %1412 = add <8 x i32> %1408, %1411
  %1413 = xor <8 x i32> %1412, %1411
  %1414 = sub <8 x i32> %gepload4289, %gepload4292
  %1415 = add <8 x i32> %1414, %gepload4295
  %1416 = sub <8 x i32> %1415, %gepload4298
  %1417 = lshr <8 x i32> %1416, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %1418 = and <8 x i32> %1417, <i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537>
  %1419 = mul nuw <8 x i32> %1418, <i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535>
  %1420 = add <8 x i32> %1416, %1419
  %1421 = xor <8 x i32> %1420, %1419
  %1422 = add <8 x i32> %gepload4295, %gepload4298
  %1423 = sub <8 x i32> %1406, %1422
  %1424 = lshr <8 x i32> %1423, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %1425 = and <8 x i32> %1424, <i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537>
  %1426 = mul nuw <8 x i32> %1425, <i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535>
  %1427 = add <8 x i32> %1406, %1426
  %1428 = sub <8 x i32> %1427, %1422
  %1429 = xor <8 x i32> %1428, %1426
  %1430 = sub <8 x i32> %1414, %gepload4295
  %1431 = add <8 x i32> %1430, %gepload4298
  %1432 = lshr <8 x i32> %1431, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %1433 = and <8 x i32> %1432, <i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537>
  %1434 = mul nuw <8 x i32> %1433, <i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535>
  %1435 = add <8 x i32> %1431, %1434
  %1436 = xor <8 x i32> %1435, %1434
  %gepload4333 = load <8 x i32>, ptr %alloca842, align 16
  %1437 = add <8 x i32> %1413, %1421
  %1438 = add <8 x i32> %1437, %1429
  %1439 = add <8 x i32> %1438, %gepload4333
  %1440 = add <8 x i32> %1439, %1436
  store <8 x i32> %1440, ptr %alloca842, align 16
  %arrayIdx4337 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 4, i64 0
  %gepload4338 = load <8 x i32>, ptr %arrayIdx4337, align 4
  %arrayIdx4340 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 5, i64 0
  %gepload4341 = load <8 x i32>, ptr %arrayIdx4340, align 4
  %arrayIdx4343 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 6, i64 0
  %gepload4344 = load <8 x i32>, ptr %arrayIdx4343, align 4
  %arrayIdx4346 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 7, i64 0
  %gepload4347 = load <8 x i32>, ptr %arrayIdx4346, align 4
  %1441 = add <8 x i32> %gepload4338, %gepload4341
  %1442 = add <8 x i32> %1441, %gepload4344
  %1443 = add <8 x i32> %1442, %gepload4347
  %1444 = lshr <8 x i32> %1443, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %1445 = and <8 x i32> %1444, <i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537>
  %1446 = mul nuw <8 x i32> %1445, <i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535>
  %1447 = add <8 x i32> %1443, %1446
  %1448 = xor <8 x i32> %1447, %1446
  %1449 = sub <8 x i32> %gepload4338, %gepload4341
  %1450 = add <8 x i32> %1449, %gepload4344
  %1451 = sub <8 x i32> %1450, %gepload4347
  %1452 = lshr <8 x i32> %1451, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %1453 = and <8 x i32> %1452, <i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537>
  %1454 = mul nuw <8 x i32> %1453, <i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535>
  %1455 = add <8 x i32> %1451, %1454
  %1456 = xor <8 x i32> %1455, %1454
  %1457 = add <8 x i32> %gepload4344, %gepload4347
  %1458 = sub <8 x i32> %1441, %1457
  %1459 = lshr <8 x i32> %1458, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %1460 = and <8 x i32> %1459, <i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537>
  %1461 = mul nuw <8 x i32> %1460, <i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535>
  %1462 = add <8 x i32> %1441, %1461
  %1463 = sub <8 x i32> %1462, %1457
  %1464 = xor <8 x i32> %1463, %1461
  %1465 = sub <8 x i32> %1449, %gepload4344
  %1466 = add <8 x i32> %1465, %gepload4347
  %1467 = lshr <8 x i32> %1466, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %1468 = and <8 x i32> %1467, <i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537>
  %1469 = mul nuw <8 x i32> %1468, <i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535>
  %1470 = add <8 x i32> %1466, %1469
  %1471 = xor <8 x i32> %1470, %1469
  %gepload4382 = load <8 x i32>, ptr %alloca843, align 16
  %1472 = add <8 x i32> %1448, %1456
  %1473 = add <8 x i32> %1472, %1464
  %1474 = add <8 x i32> %1473, %gepload4382
  %1475 = add <8 x i32> %1474, %1471
  store <8 x i32> %1475, ptr %alloca843, align 16
  %arrayIdx4386 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 8, i64 0
  %gepload4387 = load <8 x i32>, ptr %arrayIdx4386, align 4
  %arrayIdx4389 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 9, i64 0
  %gepload4390 = load <8 x i32>, ptr %arrayIdx4389, align 4
  %arrayIdx4392 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 10, i64 0
  %gepload4393 = load <8 x i32>, ptr %arrayIdx4392, align 4
  %arrayIdx4395 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 11, i64 0
  %gepload4396 = load <8 x i32>, ptr %arrayIdx4395, align 4
  %1476 = add <8 x i32> %gepload4387, %gepload4390
  %1477 = add <8 x i32> %1476, %gepload4393
  %1478 = add <8 x i32> %1477, %gepload4396
  %1479 = lshr <8 x i32> %1478, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %1480 = and <8 x i32> %1479, <i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537>
  %1481 = mul nuw <8 x i32> %1480, <i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535>
  %1482 = add <8 x i32> %1478, %1481
  %1483 = xor <8 x i32> %1482, %1481
  %1484 = sub <8 x i32> %gepload4387, %gepload4390
  %1485 = add <8 x i32> %1484, %gepload4393
  %1486 = sub <8 x i32> %1485, %gepload4396
  %1487 = lshr <8 x i32> %1486, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %1488 = and <8 x i32> %1487, <i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537>
  %1489 = mul nuw <8 x i32> %1488, <i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535>
  %1490 = add <8 x i32> %1486, %1489
  %1491 = xor <8 x i32> %1490, %1489
  %1492 = add <8 x i32> %gepload4393, %gepload4396
  %1493 = sub <8 x i32> %1476, %1492
  %1494 = lshr <8 x i32> %1493, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %1495 = and <8 x i32> %1494, <i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537>
  %1496 = mul nuw <8 x i32> %1495, <i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535>
  %1497 = add <8 x i32> %1476, %1496
  %1498 = sub <8 x i32> %1497, %1492
  %1499 = xor <8 x i32> %1498, %1496
  %1500 = sub <8 x i32> %1484, %gepload4393
  %1501 = add <8 x i32> %1500, %gepload4396
  %1502 = lshr <8 x i32> %1501, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %1503 = and <8 x i32> %1502, <i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537>
  %1504 = mul nuw <8 x i32> %1503, <i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535>
  %1505 = add <8 x i32> %1501, %1504
  %1506 = xor <8 x i32> %1505, %1504
  %gepload4431 = load <8 x i32>, ptr %alloca844, align 16
  %1507 = add <8 x i32> %1483, %1491
  %1508 = add <8 x i32> %1507, %1499
  %1509 = add <8 x i32> %1508, %gepload4431
  %1510 = add <8 x i32> %1509, %1506
  store <8 x i32> %1510, ptr %alloca844, align 16
  %arrayIdx4435 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 12, i64 0
  %gepload4436 = load <8 x i32>, ptr %arrayIdx4435, align 4
  %arrayIdx4438 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 13, i64 0
  %gepload4439 = load <8 x i32>, ptr %arrayIdx4438, align 4
  %arrayIdx4441 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 14, i64 0
  %gepload4442 = load <8 x i32>, ptr %arrayIdx4441, align 4
  %arrayIdx4444 = getelementptr inbounds [16 x [8 x i32]], ptr %alloca, i64 0, i64 15, i64 0
  %gepload4445 = load <8 x i32>, ptr %arrayIdx4444, align 4
  %1511 = add <8 x i32> %gepload4436, %gepload4439
  %1512 = add <8 x i32> %1511, %gepload4442
  %1513 = add <8 x i32> %1512, %gepload4445
  %1514 = lshr <8 x i32> %1513, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %1515 = and <8 x i32> %1514, <i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537>
  %1516 = mul nuw <8 x i32> %1515, <i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535>
  %1517 = add <8 x i32> %1513, %1516
  %1518 = xor <8 x i32> %1517, %1516
  %1519 = sub <8 x i32> %gepload4436, %gepload4439
  %1520 = add <8 x i32> %1519, %gepload4442
  %1521 = sub <8 x i32> %1520, %gepload4445
  %1522 = lshr <8 x i32> %1521, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %1523 = and <8 x i32> %1522, <i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537>
  %1524 = mul nuw <8 x i32> %1523, <i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535>
  %1525 = add <8 x i32> %1521, %1524
  %1526 = xor <8 x i32> %1525, %1524
  %1527 = add <8 x i32> %gepload4442, %gepload4445
  %1528 = sub <8 x i32> %1511, %1527
  %1529 = lshr <8 x i32> %1528, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %1530 = and <8 x i32> %1529, <i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537>
  %1531 = mul nuw <8 x i32> %1530, <i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535>
  %1532 = add <8 x i32> %1511, %1531
  %1533 = sub <8 x i32> %1532, %1527
  %1534 = xor <8 x i32> %1533, %1531
  %1535 = sub <8 x i32> %1519, %gepload4442
  %1536 = add <8 x i32> %1535, %gepload4445
  %1537 = lshr <8 x i32> %1536, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %1538 = and <8 x i32> %1537, <i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537>
  %1539 = mul nuw <8 x i32> %1538, <i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535>
  %1540 = add <8 x i32> %1536, %1539
  %1541 = xor <8 x i32> %1540, %1539
  %gepload4480 = load <8 x i32>, ptr %alloca845, align 16
  %1542 = add <8 x i32> %1518, %1526
  %1543 = add <8 x i32> %1542, %1534
  %1544 = add <8 x i32> %1543, %gepload4480
  %1545 = add <8 x i32> %1544, %1541
  store <8 x i32> %1545, ptr %alloca845, align 16
  %gepload4493 = load <4 x i32>, ptr %alloca842, align 16
  %gepload4496 = load <4 x i32>, ptr %arrayIdx4242, align 16
  %gepload4499 = load <4 x i32>, ptr %alloca843, align 16
  %gepload4502 = load <4 x i32>, ptr %arrayIdx4244, align 16
  %gepload4505 = load <4 x i32>, ptr %alloca844, align 16
  %gepload4508 = load <4 x i32>, ptr %arrayIdx4246, align 16
  %gepload4511 = load <4 x i32>, ptr %alloca845, align 16
  %gepload4514 = load <4 x i32>, ptr %arrayIdx4248, align 16
  %rdx.shuf9174517 = shufflevector <4 x i32> %gepload4514, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1546 = add <4 x i32> %gepload4514, %rdx.shuf9174517
  %rdx.shuf9194520 = shufflevector <4 x i32> %1546, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1547 = add <4 x i32> %1546, %rdx.shuf9194520
  %bin.final9214522 = extractelement <4 x i32> %1547, i64 0
  %rdx.shuf9114525 = shufflevector <4 x i32> %gepload4511, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1548 = add <4 x i32> %gepload4511, %rdx.shuf9114525
  %rdx.shuf9134528 = shufflevector <4 x i32> %1548, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1549 = add <4 x i32> %1548, %rdx.shuf9134528
  %bin.final9154530 = extractelement <4 x i32> %1549, i64 0
  %rdx.shuf9054533 = shufflevector <4 x i32> %gepload4508, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1550 = add <4 x i32> %gepload4508, %rdx.shuf9054533
  %rdx.shuf9074536 = shufflevector <4 x i32> %1550, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1551 = add <4 x i32> %1550, %rdx.shuf9074536
  %bin.final9094538 = extractelement <4 x i32> %1551, i64 0
  %rdx.shuf8994541 = shufflevector <4 x i32> %gepload4505, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1552 = add <4 x i32> %gepload4505, %rdx.shuf8994541
  %rdx.shuf9014544 = shufflevector <4 x i32> %1552, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1553 = add <4 x i32> %1552, %rdx.shuf9014544
  %bin.final9034546 = extractelement <4 x i32> %1553, i64 0
  %rdx.shuf8934549 = shufflevector <4 x i32> %gepload4502, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1554 = add <4 x i32> %gepload4502, %rdx.shuf8934549
  %rdx.shuf8954552 = shufflevector <4 x i32> %1554, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1555 = add <4 x i32> %1554, %rdx.shuf8954552
  %bin.final8974554 = extractelement <4 x i32> %1555, i64 0
  %rdx.shuf8874557 = shufflevector <4 x i32> %gepload4499, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1556 = add <4 x i32> %gepload4499, %rdx.shuf8874557
  %rdx.shuf8894560 = shufflevector <4 x i32> %1556, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1557 = add <4 x i32> %1556, %rdx.shuf8894560
  %bin.final8914562 = extractelement <4 x i32> %1557, i64 0
  %rdx.shuf8814565 = shufflevector <4 x i32> %gepload4496, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1558 = add <4 x i32> %gepload4496, %rdx.shuf8814565
  %rdx.shuf8834568 = shufflevector <4 x i32> %1558, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1559 = add <4 x i32> %1558, %rdx.shuf8834568
  %bin.final8854570 = extractelement <4 x i32> %1559, i64 0
  %rdx.shuf4573 = shufflevector <4 x i32> %gepload4493, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1560 = add <4 x i32> %gepload4493, %rdx.shuf4573
  %rdx.shuf8784576 = shufflevector <4 x i32> %1560, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1561 = add <4 x i32> %1560, %rdx.shuf8784576
  %bin.final4578 = extractelement <4 x i32> %1561, i64 0
  %1562 = insertelement <8 x i32> undef, i32 %bin.final9214522, i32 0
  %1563 = insertelement <8 x i32> %1562, i32 %bin.final9094538, i32 1
  %1564 = insertelement <8 x i32> %1563, i32 %bin.final9154530, i32 2
  %1565 = insertelement <8 x i32> %1564, i32 %bin.final9034546, i32 3
  %1566 = insertelement <8 x i32> %1565, i32 %bin.final8974554, i32 4
  %1567 = insertelement <8 x i32> %1566, i32 %bin.final8854570, i32 5
  %1568 = insertelement <8 x i32> %1567, i32 %bin.final4578, i32 6
  %1569 = insertelement <8 x i32> %1568, i32 %bin.final8914562, i32 7
  %1570 = lshr <8 x i32> %1569, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %1571 = and <8 x i32> <i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535>, %1569
  %1572 = add nuw nsw <8 x i32> %1570, %1571
  %1573 = lshr <8 x i32> %1572, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %1574 = add nuw nsw i32 undef, undef
  %1575 = add nuw nsw i32 %1574, undef
  %1576 = add nuw nsw i32 %1575, undef
  %1577 = add nuw nsw i32 %1576, undef
  %1578 = add nuw i32 %1577, undef
  %1579 = add i32 %1578, undef
  %rdx.shuf = shufflevector <8 x i32> %1573, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx = add <8 x i32> %1573, %rdx.shuf
  %rdx.shuf7620 = shufflevector <8 x i32> %bin.rdx, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx7621 = add <8 x i32> %bin.rdx, %rdx.shuf7620
  %rdx.shuf7622 = shufflevector <8 x i32> %bin.rdx7621, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx7623 = add <8 x i32> %bin.rdx7621, %rdx.shuf7622
  %1580 = extractelement <8 x i32> %bin.rdx7623, i32 0
  %1581 = add i32 %1579, undef
  ret i32 %1580
}

; Function Attrs: argmemonly nounwind
declare void @llvm.intel.directive(metadata) #1

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #4 = { nounwind readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #5 = { nounwind readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "pre_loopopt" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #6 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "pre_loopopt" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "pre_loopopt" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "pre_loopopt" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0}

!0 = !{i32 1, !"wchar_size", i32 4}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C/C++ TBAA"}
!21 = !{!6, !6, i64 0}
!12 = !{!6, !6, i64 0}
; CHECK: [[L1:%.*]] = load <16 x i8>, ptr
; CHECK: [[L2:%.*]] = load <16 x i8>, ptr
; CHECK: [[L3:%.*]] = load <16 x i8>, ptr
; CHECK: [[L4:%.*]] = load <16 x i8>, ptr
