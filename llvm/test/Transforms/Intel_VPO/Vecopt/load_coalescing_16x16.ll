
; RUN: opt < %s -tti -mtriple=x86_64-unknown-linux-gnu  -mcpu=skylake-avx512 -load-coalescing -S | FileCheck %s

source_filename = "x264_pixel_satd_16x16.ll"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"


; Function Attrs: nounwind readonly uwtable
define internal i32 @x264_pixel_satd_16x16(i8* nocapture readonly %pix1, i32 %i_pix1, i8* nocapture readonly %pix2, i32 %i_pix2) #8 {
entry:
  %idx.ext.i = sext i32 %i_pix1 to i64
  %idx.ext63.i = sext i32 %i_pix2 to i64
  %alloca = alloca [16 x [8 x i32]], align 4
  %alloca842 = alloca <8 x i32>, align 16
  %alloca843 = alloca <8 x i32>, align 16
  %alloca844 = alloca <8 x i32>, align 16
  %alloca845 = alloca <8 x i32>, align 16
  %arrayIdx = getelementptr inbounds i8, i8* %pix1, i64 4
  %arrayIdx924 = getelementptr inbounds i8, i8* %pix2, i64 4
  %arrayIdx926 = getelementptr inbounds i8, i8* %pix1, i64 1
  %arrayIdx928 = getelementptr inbounds i8, i8* %pix2, i64 1
  %arrayIdx930 = getelementptr inbounds i8, i8* %pix1, i64 5
  %arrayIdx932 = getelementptr inbounds i8, i8* %pix2, i64 5
  %arrayIdx934 = getelementptr inbounds i8, i8* %pix1, i64 2
  %arrayIdx936 = getelementptr inbounds i8, i8* %pix2, i64 2
  %arrayIdx938 = getelementptr inbounds i8, i8* %pix1, i64 6
  %arrayIdx940 = getelementptr inbounds i8, i8* %pix2, i64 6
  %arrayIdx942 = getelementptr inbounds i8, i8* %pix1, i64 3
  %arrayIdx944 = getelementptr inbounds i8, i8* %pix2, i64 3
  %arrayIdx946 = getelementptr inbounds i8, i8* %pix1, i64 7
  %arrayIdx948 = getelementptr inbounds i8, i8* %pix2, i64 7
  %arrayIdx950 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 0, i64 0
  %arrayIdx952 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 0, i64 2
  %arrayIdx970 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 0, i64 1
  %arrayIdx988 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 0, i64 3
  %arrayIdx1005 = getelementptr inbounds i8, i8* %pix1, i64 8
  %arrayIdx1007 = getelementptr inbounds i8, i8* %pix2, i64 8
  %arrayIdx1009 = getelementptr inbounds i8, i8* %pix1, i64 12
  %arrayIdx1011 = getelementptr inbounds i8, i8* %pix2, i64 12
  %arrayIdx1013 = getelementptr inbounds i8, i8* %pix1, i64 9
  %arrayIdx1015 = getelementptr inbounds i8, i8* %pix2, i64 9
  %arrayIdx1017 = getelementptr inbounds i8, i8* %pix1, i64 13
  %arrayIdx1019 = getelementptr inbounds i8, i8* %pix2, i64 13
  %arrayIdx1021 = getelementptr inbounds i8, i8* %pix1, i64 10
  %arrayIdx1023 = getelementptr inbounds i8, i8* %pix2, i64 10
  %arrayIdx1025 = getelementptr inbounds i8, i8* %pix1, i64 14
  %arrayIdx1027 = getelementptr inbounds i8, i8* %pix2, i64 14
  %arrayIdx1029 = getelementptr inbounds i8, i8* %pix1, i64 11
  %0 = bitcast i8* %pix1 to <4 x i8>*
  %1 = load <4 x i8>, <4 x i8>* %0, align 1, !tbaa !12
  %2 = bitcast i8* %arrayIdx1005 to <4 x i8>*
  %3 = load <4 x i8>, <4 x i8>* %2, align 1, !tbaa !12
  %SplitLoadShuffle6884 = shufflevector <4 x i8> %1, <4 x i8> %3, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %arrayIdx1031 = getelementptr inbounds i8, i8* %pix2, i64 11
  %4 = bitcast i8* %pix2 to <4 x i8>*
  %5 = load <4 x i8>, <4 x i8>* %4, align 1, !tbaa !12
  %6 = bitcast i8* %arrayIdx1007 to <4 x i8>*
  %7 = load <4 x i8>, <4 x i8>* %6, align 1, !tbaa !12
  %SplitLoadShuffle6882 = shufflevector <4 x i8> %5, <4 x i8> %7, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %arrayIdx1033 = getelementptr inbounds i8, i8* %pix1, i64 15
  %8 = bitcast i8* %arrayIdx to <4 x i8>*
  %9 = load <4 x i8>, <4 x i8>* %8, align 1, !tbaa !12
  %10 = bitcast i8* %arrayIdx1009 to <4 x i8>*
  %11 = load <4 x i8>, <4 x i8>* %10, align 1, !tbaa !12
  %SplitLoadShuffle = shufflevector <4 x i8> %9, <4 x i8> %11, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %arrayIdx1035 = getelementptr inbounds i8, i8* %pix2, i64 15
  %12 = bitcast i8* %arrayIdx924 to <4 x i8>*
  %13 = load <4 x i8>, <4 x i8>* %12, align 1, !tbaa !12
  %14 = bitcast i8* %arrayIdx1011 to <4 x i8>*
  %15 = load <4 x i8>, <4 x i8>* %14, align 1, !tbaa !12
  %SplitLoadShuffle6883 = shufflevector <4 x i8> %13, <4 x i8> %15, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %arrayIdx1038 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 0, i64 4
  %16 = zext <8 x i8> %SplitLoadShuffle6884 to <8 x i32>
  %17 = zext <8 x i8> %SplitLoadShuffle to <8 x i32>
  %18 = zext <8 x i8> %SplitLoadShuffle6883 to <8 x i32>
  %19 = zext <8 x i8> %SplitLoadShuffle6882 to <8 x i32>
  %20 = shl nuw nsw <8 x i32> %17, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %21 = shl nuw nsw <8 x i32> %18, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %22 = sub nsw <8 x i32> %20, %19
  %23 = sub nsw <8 x i32> %22, %21
  %24 = add nsw <8 x i32> %23, %16
  %arrayIdx1040 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 0, i64 6
  %arrayIdx1058 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 0, i64 5
  %arrayIdx1076 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 0, i64 7
  %25 = extractelement <8 x i32> %24, i32 3
  %26 = insertelement <8 x i32> undef, i32 %25, i32 0
  %27 = extractelement <8 x i32> %24, i32 0
  %28 = insertelement <8 x i32> %26, i32 %27, i32 1
  %29 = insertelement <8 x i32> %28, i32 %27, i32 2
  %30 = insertelement <8 x i32> %29, i32 %27, i32 3
  %31 = extractelement <8 x i32> %24, i32 7
  %32 = insertelement <8 x i32> %30, i32 %31, i32 4
  %33 = extractelement <8 x i32> %24, i32 4
  %34 = insertelement <8 x i32> %32, i32 %33, i32 5
  %35 = insertelement <8 x i32> %34, i32 %33, i32 6
  %36 = insertelement <8 x i32> %35, i32 %33, i32 7
  %37 = extractelement <8 x i32> %24, i32 1
  %38 = insertelement <8 x i32> undef, i32 %37, i32 0
  %39 = insertelement <8 x i32> %38, i32 %25, i32 1
  %40 = insertelement <8 x i32> %39, i32 %37, i32 2
  %41 = insertelement <8 x i32> %40, i32 %37, i32 3
  %42 = extractelement <8 x i32> %24, i32 5
  %43 = insertelement <8 x i32> %41, i32 %42, i32 4
  %44 = insertelement <8 x i32> %43, i32 %31, i32 5
  %45 = insertelement <8 x i32> %44, i32 %42, i32 6
  %46 = insertelement <8 x i32> %45, i32 %42, i32 7
  %47 = add nsw <8 x i32> %36, %46
  %48 = sub nsw <8 x i32> %36, %46
  %49 = select <8 x i1> <i1 true, i1 false, i1 true, i1 false, i1 true, i1 false, i1 true, i1 false>, <8 x i32> %47, <8 x i32> %48
  %50 = extractelement <8 x i32> %24, i32 2
  %51 = insertelement <8 x i32> undef, i32 %50, i32 0
  %52 = insertelement <8 x i32> %51, i32 %50, i32 1
  %53 = insertelement <8 x i32> %52, i32 %25, i32 2
  %54 = insertelement <8 x i32> %53, i32 %50, i32 3
  %55 = extractelement <8 x i32> %24, i32 6
  %56 = insertelement <8 x i32> %54, i32 %55, i32 4
  %57 = insertelement <8 x i32> %56, i32 %55, i32 5
  %58 = insertelement <8 x i32> %57, i32 %31, i32 6
  %59 = insertelement <8 x i32> %58, i32 %55, i32 7
  %60 = add nsw <8 x i32> %49, %59
  %61 = sub nsw <8 x i32> %49, %59
  %62 = select <8 x i1> <i1 true, i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false>, <8 x i32> %60, <8 x i32> %61
  %63 = sub <8 x i32> %62, %24
  %64 = add <8 x i32> %62, %24
  %65 = select <8 x i1> <i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false, i1 true>, <8 x i32> %64, <8 x i32> %63
  %66 = bitcast i32* %arrayIdx950 to <8 x i32>*
  store <8 x i32> %65, <8 x i32>* %66, align 4
  %arrayIdx1093 = getelementptr inbounds i8, i8* %pix1, i64 %idx.ext.i
  %arrayIdx1095 = getelementptr inbounds i8, i8* %pix2, i64 %idx.ext63.i
  %67 = add nsw i64 %idx.ext.i, 4
  %arrayIdx1097 = getelementptr inbounds i8, i8* %pix1, i64 %67
  %68 = add nsw i64 %idx.ext63.i, 4
  %arrayIdx1099 = getelementptr inbounds i8, i8* %pix2, i64 %68
  %69 = add nsw i64 %idx.ext.i, 1
  %arrayIdx1101 = getelementptr inbounds i8, i8* %pix1, i64 %69
  %70 = add nsw i64 %idx.ext63.i, 1
  %arrayIdx1103 = getelementptr inbounds i8, i8* %pix2, i64 %70
  %71 = add nsw i64 %idx.ext.i, 5
  %arrayIdx1105 = getelementptr inbounds i8, i8* %pix1, i64 %71
  %72 = add nsw i64 %idx.ext63.i, 5
  %arrayIdx1107 = getelementptr inbounds i8, i8* %pix2, i64 %72
  %73 = add nsw i64 %idx.ext.i, 2
  %arrayIdx1109 = getelementptr inbounds i8, i8* %pix1, i64 %73
  %74 = add nsw i64 %idx.ext63.i, 2
  %arrayIdx1111 = getelementptr inbounds i8, i8* %pix2, i64 %74
  %75 = add nsw i64 %idx.ext.i, 6
  %arrayIdx1113 = getelementptr inbounds i8, i8* %pix1, i64 %75
  %76 = add nsw i64 %idx.ext63.i, 6
  %arrayIdx1115 = getelementptr inbounds i8, i8* %pix2, i64 %76
  %77 = add nsw i64 %idx.ext.i, 3
  %arrayIdx1117 = getelementptr inbounds i8, i8* %pix1, i64 %77
  %78 = add nsw i64 %idx.ext63.i, 3
  %arrayIdx1119 = getelementptr inbounds i8, i8* %pix2, i64 %78
  %79 = add nsw i64 %idx.ext.i, 7
  %arrayIdx1121 = getelementptr inbounds i8, i8* %pix1, i64 %79
  %80 = add nsw i64 %idx.ext63.i, 7
  %arrayIdx1123 = getelementptr inbounds i8, i8* %pix2, i64 %80
  %arrayIdx1126 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 1, i64 0
  %arrayIdx1144 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 1, i64 2
  %arrayIdx1162 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 1, i64 1
  %arrayIdx1180 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 1, i64 3
  %81 = add nsw i64 %idx.ext.i, 8
  %arrayIdx1197 = getelementptr inbounds i8, i8* %pix1, i64 %81
  %82 = add nsw i64 %idx.ext63.i, 8
  %arrayIdx1199 = getelementptr inbounds i8, i8* %pix2, i64 %82
  %83 = add nsw i64 %idx.ext.i, 12
  %arrayIdx1201 = getelementptr inbounds i8, i8* %pix1, i64 %83
  %84 = add nsw i64 %idx.ext63.i, 12
  %arrayIdx1203 = getelementptr inbounds i8, i8* %pix2, i64 %84
  %85 = add nsw i64 %idx.ext.i, 9
  %arrayIdx1205 = getelementptr inbounds i8, i8* %pix1, i64 %85
  %86 = add nsw i64 %idx.ext63.i, 9
  %arrayIdx1207 = getelementptr inbounds i8, i8* %pix2, i64 %86
  %87 = add nsw i64 %idx.ext.i, 13
  %arrayIdx1209 = getelementptr inbounds i8, i8* %pix1, i64 %87
  %88 = add nsw i64 %idx.ext63.i, 13
  %arrayIdx1211 = getelementptr inbounds i8, i8* %pix2, i64 %88
  %89 = add nsw i64 %idx.ext.i, 10
  %arrayIdx1213 = getelementptr inbounds i8, i8* %pix1, i64 %89
  %90 = add nsw i64 %idx.ext63.i, 10
  %arrayIdx1215 = getelementptr inbounds i8, i8* %pix2, i64 %90
  %91 = add nsw i64 %idx.ext.i, 14
  %arrayIdx1217 = getelementptr inbounds i8, i8* %pix1, i64 %91
  %92 = add nsw i64 %idx.ext63.i, 14
  %arrayIdx1219 = getelementptr inbounds i8, i8* %pix2, i64 %92
  %93 = add nsw i64 %idx.ext.i, 11
  %arrayIdx1221 = getelementptr inbounds i8, i8* %pix1, i64 %93
  %94 = bitcast i8* %arrayIdx1093 to <4 x i8>*
  %95 = load <4 x i8>, <4 x i8>* %94, align 1, !tbaa !12
  %96 = bitcast i8* %arrayIdx1197 to <4 x i8>*
  %97 = load <4 x i8>, <4 x i8>* %96, align 1, !tbaa !12
  %SplitLoadShuffle6933 = shufflevector <4 x i8> %95, <4 x i8> %97, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %98 = add nsw i64 %idx.ext63.i, 11
  %arrayIdx1223 = getelementptr inbounds i8, i8* %pix2, i64 %98
  %99 = bitcast i8* %arrayIdx1095 to <4 x i8>*
  %100 = load <4 x i8>, <4 x i8>* %99, align 1, !tbaa !12
  %101 = bitcast i8* %arrayIdx1199 to <4 x i8>*
  %102 = load <4 x i8>, <4 x i8>* %101, align 1, !tbaa !12
  %SplitLoadShuffle6931 = shufflevector <4 x i8> %100, <4 x i8> %102, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %103 = add nsw i64 %idx.ext.i, 15
  %arrayIdx1225 = getelementptr inbounds i8, i8* %pix1, i64 %103
  %104 = bitcast i8* %arrayIdx1097 to <4 x i8>*
  %105 = load <4 x i8>, <4 x i8>* %104, align 1, !tbaa !12
  %106 = bitcast i8* %arrayIdx1201 to <4 x i8>*
  %107 = load <4 x i8>, <4 x i8>* %106, align 1, !tbaa !12
  %SplitLoadShuffle6930 = shufflevector <4 x i8> %105, <4 x i8> %107, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %108 = add nsw i64 %idx.ext63.i, 15
  %arrayIdx1227 = getelementptr inbounds i8, i8* %pix2, i64 %108
  %109 = bitcast i8* %arrayIdx1099 to <4 x i8>*
  %110 = load <4 x i8>, <4 x i8>* %109, align 1, !tbaa !12
  %111 = bitcast i8* %arrayIdx1203 to <4 x i8>*
  %112 = load <4 x i8>, <4 x i8>* %111, align 1, !tbaa !12
  %SplitLoadShuffle6932 = shufflevector <4 x i8> %110, <4 x i8> %112, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %arrayIdx1230 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 1, i64 4
  %113 = zext <8 x i8> %SplitLoadShuffle6933 to <8 x i32>
  %114 = zext <8 x i8> %SplitLoadShuffle6930 to <8 x i32>
  %115 = zext <8 x i8> %SplitLoadShuffle6932 to <8 x i32>
  %116 = zext <8 x i8> %SplitLoadShuffle6931 to <8 x i32>
  %117 = shl nuw nsw <8 x i32> %114, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %118 = shl nuw nsw <8 x i32> %115, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %119 = sub nsw <8 x i32> %117, %116
  %120 = sub nsw <8 x i32> %119, %118
  %121 = add nsw <8 x i32> %120, %113
  %arrayIdx1248 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 1, i64 6
  %arrayIdx1266 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 1, i64 5
  %arrayIdx1284 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 1, i64 7
  %122 = extractelement <8 x i32> %121, i32 3
  %123 = insertelement <8 x i32> undef, i32 %122, i32 0
  %124 = extractelement <8 x i32> %121, i32 0
  %125 = insertelement <8 x i32> %123, i32 %124, i32 1
  %126 = insertelement <8 x i32> %125, i32 %124, i32 2
  %127 = insertelement <8 x i32> %126, i32 %124, i32 3
  %128 = extractelement <8 x i32> %121, i32 7
  %129 = insertelement <8 x i32> %127, i32 %128, i32 4
  %130 = extractelement <8 x i32> %121, i32 4
  %131 = insertelement <8 x i32> %129, i32 %130, i32 5
  %132 = insertelement <8 x i32> %131, i32 %130, i32 6
  %133 = insertelement <8 x i32> %132, i32 %130, i32 7
  %134 = extractelement <8 x i32> %121, i32 1
  %135 = insertelement <8 x i32> undef, i32 %134, i32 0
  %136 = insertelement <8 x i32> %135, i32 %122, i32 1
  %137 = insertelement <8 x i32> %136, i32 %134, i32 2
  %138 = insertelement <8 x i32> %137, i32 %134, i32 3
  %139 = extractelement <8 x i32> %121, i32 5
  %140 = insertelement <8 x i32> %138, i32 %139, i32 4
  %141 = insertelement <8 x i32> %140, i32 %128, i32 5
  %142 = insertelement <8 x i32> %141, i32 %139, i32 6
  %143 = insertelement <8 x i32> %142, i32 %139, i32 7
  %144 = add nsw <8 x i32> %133, %143
  %145 = sub nsw <8 x i32> %133, %143
  %146 = select <8 x i1> <i1 true, i1 false, i1 true, i1 false, i1 true, i1 false, i1 true, i1 false>, <8 x i32> %144, <8 x i32> %145
  %147 = extractelement <8 x i32> %121, i32 2
  %148 = insertelement <8 x i32> undef, i32 %147, i32 0
  %149 = insertelement <8 x i32> %148, i32 %147, i32 1
  %150 = insertelement <8 x i32> %149, i32 %122, i32 2
  %151 = insertelement <8 x i32> %150, i32 %147, i32 3
  %152 = extractelement <8 x i32> %121, i32 6
  %153 = insertelement <8 x i32> %151, i32 %152, i32 4
  %154 = insertelement <8 x i32> %153, i32 %152, i32 5
  %155 = insertelement <8 x i32> %154, i32 %128, i32 6
  %156 = insertelement <8 x i32> %155, i32 %152, i32 7
  %157 = add nsw <8 x i32> %146, %156
  %158 = sub nsw <8 x i32> %146, %156
  %159 = select <8 x i1> <i1 true, i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false>, <8 x i32> %157, <8 x i32> %158
  %160 = sub <8 x i32> %159, %121
  %161 = add <8 x i32> %159, %121
  %162 = select <8 x i1> <i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false, i1 true>, <8 x i32> %161, <8 x i32> %160
  %163 = bitcast i32* %arrayIdx1126 to <8 x i32>*
  store <8 x i32> %162, <8 x i32>* %163, align 4
  %164 = shl nsw i64 %idx.ext.i, 1
  %arrayIdx1301 = getelementptr inbounds i8, i8* %pix1, i64 %164
  %165 = shl nsw i64 %idx.ext63.i, 1
  %arrayIdx1303 = getelementptr inbounds i8, i8* %pix2, i64 %165
  %166 = add nsw i64 %164, 4
  %arrayIdx1305 = getelementptr inbounds i8, i8* %pix1, i64 %166
  %167 = add nsw i64 %165, 4
  %arrayIdx1307 = getelementptr inbounds i8, i8* %pix2, i64 %167
  %168 = or i64 %164, 1
  %arrayIdx1309 = getelementptr inbounds i8, i8* %pix1, i64 %168
  %169 = or i64 %165, 1
  %arrayIdx1311 = getelementptr inbounds i8, i8* %pix2, i64 %169
  %170 = add nsw i64 %164, 5
  %arrayIdx1313 = getelementptr inbounds i8, i8* %pix1, i64 %170
  %171 = add nsw i64 %165, 5
  %arrayIdx1315 = getelementptr inbounds i8, i8* %pix2, i64 %171
  %172 = add nsw i64 %164, 2
  %arrayIdx1317 = getelementptr inbounds i8, i8* %pix1, i64 %172
  %173 = add nsw i64 %165, 2
  %arrayIdx1319 = getelementptr inbounds i8, i8* %pix2, i64 %173
  %174 = add nsw i64 %164, 6
  %arrayIdx1321 = getelementptr inbounds i8, i8* %pix1, i64 %174
  %175 = add nsw i64 %165, 6
  %arrayIdx1323 = getelementptr inbounds i8, i8* %pix2, i64 %175
  %176 = add nsw i64 %164, 3
  %arrayIdx1325 = getelementptr inbounds i8, i8* %pix1, i64 %176
  %177 = add nsw i64 %165, 3
  %arrayIdx1327 = getelementptr inbounds i8, i8* %pix2, i64 %177
  %178 = add nsw i64 %164, 7
  %arrayIdx1329 = getelementptr inbounds i8, i8* %pix1, i64 %178
  %179 = add nsw i64 %165, 7
  %arrayIdx1331 = getelementptr inbounds i8, i8* %pix2, i64 %179
  %arrayIdx1334 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 2, i64 0
  %arrayIdx1352 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 2, i64 2
  %arrayIdx1370 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 2, i64 1
  %arrayIdx1388 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 2, i64 3
  %180 = add nsw i64 %164, 8
  %arrayIdx1405 = getelementptr inbounds i8, i8* %pix1, i64 %180
  %181 = add nsw i64 %165, 8
  %arrayIdx1407 = getelementptr inbounds i8, i8* %pix2, i64 %181
  %182 = add nsw i64 %164, 12
  %arrayIdx1409 = getelementptr inbounds i8, i8* %pix1, i64 %182
  %183 = add nsw i64 %165, 12
  %arrayIdx1411 = getelementptr inbounds i8, i8* %pix2, i64 %183
  %184 = add nsw i64 %164, 9
  %arrayIdx1413 = getelementptr inbounds i8, i8* %pix1, i64 %184
  %185 = add nsw i64 %165, 9
  %arrayIdx1415 = getelementptr inbounds i8, i8* %pix2, i64 %185
  %186 = add nsw i64 %164, 13
  %arrayIdx1417 = getelementptr inbounds i8, i8* %pix1, i64 %186
  %187 = add nsw i64 %165, 13
  %arrayIdx1419 = getelementptr inbounds i8, i8* %pix2, i64 %187
  %188 = add nsw i64 %164, 10
  %arrayIdx1421 = getelementptr inbounds i8, i8* %pix1, i64 %188
  %189 = add nsw i64 %165, 10
  %arrayIdx1423 = getelementptr inbounds i8, i8* %pix2, i64 %189
  %190 = add nsw i64 %164, 14
  %arrayIdx1425 = getelementptr inbounds i8, i8* %pix1, i64 %190
  %191 = add nsw i64 %165, 14
  %arrayIdx1427 = getelementptr inbounds i8, i8* %pix2, i64 %191
  %192 = add nsw i64 %164, 11
  %arrayIdx1429 = getelementptr inbounds i8, i8* %pix1, i64 %192
  %193 = bitcast i8* %arrayIdx1301 to <4 x i8>*
  %194 = load <4 x i8>, <4 x i8>* %193, align 1, !tbaa !12
  %195 = bitcast i8* %arrayIdx1405 to <4 x i8>*
  %196 = load <4 x i8>, <4 x i8>* %195, align 1, !tbaa !12
  %SplitLoadShuffle6982 = shufflevector <4 x i8> %194, <4 x i8> %196, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %197 = add nsw i64 %165, 11
  %arrayIdx1431 = getelementptr inbounds i8, i8* %pix2, i64 %197
  %198 = bitcast i8* %arrayIdx1303 to <4 x i8>*
  %199 = load <4 x i8>, <4 x i8>* %198, align 1, !tbaa !12
  %200 = bitcast i8* %arrayIdx1407 to <4 x i8>*
  %201 = load <4 x i8>, <4 x i8>* %200, align 1, !tbaa !12
  %SplitLoadShuffle6980 = shufflevector <4 x i8> %199, <4 x i8> %201, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %202 = add nsw i64 %164, 15
  %arrayIdx1433 = getelementptr inbounds i8, i8* %pix1, i64 %202
  %203 = bitcast i8* %arrayIdx1305 to <4 x i8>*
  %204 = load <4 x i8>, <4 x i8>* %203, align 1, !tbaa !12
  %205 = bitcast i8* %arrayIdx1409 to <4 x i8>*
  %206 = load <4 x i8>, <4 x i8>* %205, align 1, !tbaa !12
  %SplitLoadShuffle6979 = shufflevector <4 x i8> %204, <4 x i8> %206, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %207 = add nsw i64 %165, 15
  %arrayIdx1435 = getelementptr inbounds i8, i8* %pix2, i64 %207
  %208 = bitcast i8* %arrayIdx1307 to <4 x i8>*
  %209 = load <4 x i8>, <4 x i8>* %208, align 1, !tbaa !12
  %210 = bitcast i8* %arrayIdx1411 to <4 x i8>*
  %211 = load <4 x i8>, <4 x i8>* %210, align 1, !tbaa !12
  %SplitLoadShuffle6981 = shufflevector <4 x i8> %209, <4 x i8> %211, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %arrayIdx1438 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 2, i64 4
  %212 = zext <8 x i8> %SplitLoadShuffle6982 to <8 x i32>
  %213 = zext <8 x i8> %SplitLoadShuffle6979 to <8 x i32>
  %214 = zext <8 x i8> %SplitLoadShuffle6981 to <8 x i32>
  %215 = zext <8 x i8> %SplitLoadShuffle6980 to <8 x i32>
  %216 = shl nuw nsw <8 x i32> %213, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %217 = shl nuw nsw <8 x i32> %214, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %218 = sub nsw <8 x i32> %216, %215
  %219 = sub nsw <8 x i32> %218, %217
  %220 = add nsw <8 x i32> %219, %212
  %arrayIdx1456 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 2, i64 6
  %arrayIdx1474 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 2, i64 5
  %arrayIdx1492 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 2, i64 7
  %221 = extractelement <8 x i32> %220, i32 3
  %222 = insertelement <8 x i32> undef, i32 %221, i32 0
  %223 = extractelement <8 x i32> %220, i32 0
  %224 = insertelement <8 x i32> %222, i32 %223, i32 1
  %225 = insertelement <8 x i32> %224, i32 %223, i32 2
  %226 = insertelement <8 x i32> %225, i32 %223, i32 3
  %227 = extractelement <8 x i32> %220, i32 7
  %228 = insertelement <8 x i32> %226, i32 %227, i32 4
  %229 = extractelement <8 x i32> %220, i32 4
  %230 = insertelement <8 x i32> %228, i32 %229, i32 5
  %231 = insertelement <8 x i32> %230, i32 %229, i32 6
  %232 = insertelement <8 x i32> %231, i32 %229, i32 7
  %233 = extractelement <8 x i32> %220, i32 1
  %234 = insertelement <8 x i32> undef, i32 %233, i32 0
  %235 = insertelement <8 x i32> %234, i32 %221, i32 1
  %236 = insertelement <8 x i32> %235, i32 %233, i32 2
  %237 = insertelement <8 x i32> %236, i32 %233, i32 3
  %238 = extractelement <8 x i32> %220, i32 5
  %239 = insertelement <8 x i32> %237, i32 %238, i32 4
  %240 = insertelement <8 x i32> %239, i32 %227, i32 5
  %241 = insertelement <8 x i32> %240, i32 %238, i32 6
  %242 = insertelement <8 x i32> %241, i32 %238, i32 7
  %243 = add nsw <8 x i32> %232, %242
  %244 = sub nsw <8 x i32> %232, %242
  %245 = select <8 x i1> <i1 true, i1 false, i1 true, i1 false, i1 true, i1 false, i1 true, i1 false>, <8 x i32> %243, <8 x i32> %244
  %246 = extractelement <8 x i32> %220, i32 2
  %247 = insertelement <8 x i32> undef, i32 %246, i32 0
  %248 = insertelement <8 x i32> %247, i32 %246, i32 1
  %249 = insertelement <8 x i32> %248, i32 %221, i32 2
  %250 = insertelement <8 x i32> %249, i32 %246, i32 3
  %251 = extractelement <8 x i32> %220, i32 6
  %252 = insertelement <8 x i32> %250, i32 %251, i32 4
  %253 = insertelement <8 x i32> %252, i32 %251, i32 5
  %254 = insertelement <8 x i32> %253, i32 %227, i32 6
  %255 = insertelement <8 x i32> %254, i32 %251, i32 7
  %256 = add nsw <8 x i32> %245, %255
  %257 = sub nsw <8 x i32> %245, %255
  %258 = select <8 x i1> <i1 true, i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false>, <8 x i32> %256, <8 x i32> %257
  %259 = sub <8 x i32> %258, %220
  %260 = add <8 x i32> %258, %220
  %261 = select <8 x i1> <i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false, i1 true>, <8 x i32> %260, <8 x i32> %259
  %262 = bitcast i32* %arrayIdx1334 to <8 x i32>*
  store <8 x i32> %261, <8 x i32>* %262, align 4
  %263 = mul nsw i64 %idx.ext.i, 3
  %arrayIdx1509 = getelementptr inbounds i8, i8* %pix1, i64 %263
  %264 = mul nsw i64 %idx.ext63.i, 3
  %arrayIdx1511 = getelementptr inbounds i8, i8* %pix2, i64 %264
  %265 = add nsw i64 %263, 4
  %arrayIdx1513 = getelementptr inbounds i8, i8* %pix1, i64 %265
  %266 = add nsw i64 %264, 4
  %arrayIdx1515 = getelementptr inbounds i8, i8* %pix2, i64 %266
  %267 = add nsw i64 %263, 1
  %arrayIdx1517 = getelementptr inbounds i8, i8* %pix1, i64 %267
  %268 = add nsw i64 %264, 1
  %arrayIdx1519 = getelementptr inbounds i8, i8* %pix2, i64 %268
  %269 = add nsw i64 %263, 5
  %arrayIdx1521 = getelementptr inbounds i8, i8* %pix1, i64 %269
  %270 = add nsw i64 %264, 5
  %arrayIdx1523 = getelementptr inbounds i8, i8* %pix2, i64 %270
  %271 = add nsw i64 %263, 2
  %arrayIdx1525 = getelementptr inbounds i8, i8* %pix1, i64 %271
  %272 = add nsw i64 %264, 2
  %arrayIdx1527 = getelementptr inbounds i8, i8* %pix2, i64 %272
  %273 = add nsw i64 %263, 6
  %arrayIdx1529 = getelementptr inbounds i8, i8* %pix1, i64 %273
  %274 = add nsw i64 %264, 6
  %arrayIdx1531 = getelementptr inbounds i8, i8* %pix2, i64 %274
  %275 = add nsw i64 %263, 3
  %arrayIdx1533 = getelementptr inbounds i8, i8* %pix1, i64 %275
  %276 = add nsw i64 %264, 3
  %arrayIdx1535 = getelementptr inbounds i8, i8* %pix2, i64 %276
  %277 = add nsw i64 %263, 7
  %arrayIdx1537 = getelementptr inbounds i8, i8* %pix1, i64 %277
  %278 = add nsw i64 %264, 7
  %arrayIdx1539 = getelementptr inbounds i8, i8* %pix2, i64 %278
  %arrayIdx1542 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 3, i64 0
  %arrayIdx1560 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 3, i64 2
  %arrayIdx1578 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 3, i64 1
  %arrayIdx1596 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 3, i64 3
  %279 = add nsw i64 %263, 8
  %arrayIdx1613 = getelementptr inbounds i8, i8* %pix1, i64 %279
  %280 = add nsw i64 %264, 8
  %arrayIdx1615 = getelementptr inbounds i8, i8* %pix2, i64 %280
  %281 = add nsw i64 %263, 12
  %arrayIdx1617 = getelementptr inbounds i8, i8* %pix1, i64 %281
  %282 = add nsw i64 %264, 12
  %arrayIdx1619 = getelementptr inbounds i8, i8* %pix2, i64 %282
  %283 = add nsw i64 %263, 9
  %arrayIdx1621 = getelementptr inbounds i8, i8* %pix1, i64 %283
  %284 = add nsw i64 %264, 9
  %arrayIdx1623 = getelementptr inbounds i8, i8* %pix2, i64 %284
  %285 = add nsw i64 %263, 13
  %arrayIdx1625 = getelementptr inbounds i8, i8* %pix1, i64 %285
  %286 = add nsw i64 %264, 13
  %arrayIdx1627 = getelementptr inbounds i8, i8* %pix2, i64 %286
  %287 = add nsw i64 %263, 10
  %arrayIdx1629 = getelementptr inbounds i8, i8* %pix1, i64 %287
  %288 = add nsw i64 %264, 10
  %arrayIdx1631 = getelementptr inbounds i8, i8* %pix2, i64 %288
  %289 = add nsw i64 %263, 14
  %arrayIdx1633 = getelementptr inbounds i8, i8* %pix1, i64 %289
  %290 = add nsw i64 %264, 14
  %arrayIdx1635 = getelementptr inbounds i8, i8* %pix2, i64 %290
  %291 = add nsw i64 %263, 11
  %arrayIdx1637 = getelementptr inbounds i8, i8* %pix1, i64 %291
  %292 = bitcast i8* %arrayIdx1509 to <4 x i8>*
  %293 = load <4 x i8>, <4 x i8>* %292, align 1, !tbaa !12
  %294 = bitcast i8* %arrayIdx1613 to <4 x i8>*
  %295 = load <4 x i8>, <4 x i8>* %294, align 1, !tbaa !12
  %SplitLoadShuffle7031 = shufflevector <4 x i8> %293, <4 x i8> %295, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %296 = add nsw i64 %264, 11
  %arrayIdx1639 = getelementptr inbounds i8, i8* %pix2, i64 %296
  %297 = bitcast i8* %arrayIdx1511 to <4 x i8>*
  %298 = load <4 x i8>, <4 x i8>* %297, align 1, !tbaa !12
  %299 = bitcast i8* %arrayIdx1615 to <4 x i8>*
  %300 = load <4 x i8>, <4 x i8>* %299, align 1, !tbaa !12
  %SplitLoadShuffle7029 = shufflevector <4 x i8> %298, <4 x i8> %300, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %301 = add nsw i64 %263, 15
  %arrayIdx1641 = getelementptr inbounds i8, i8* %pix1, i64 %301
  %302 = bitcast i8* %arrayIdx1513 to <4 x i8>*
  %303 = load <4 x i8>, <4 x i8>* %302, align 1, !tbaa !12
  %304 = bitcast i8* %arrayIdx1617 to <4 x i8>*
  %305 = load <4 x i8>, <4 x i8>* %304, align 1, !tbaa !12
  %SplitLoadShuffle7028 = shufflevector <4 x i8> %303, <4 x i8> %305, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %306 = add nsw i64 %264, 15
  %arrayIdx1643 = getelementptr inbounds i8, i8* %pix2, i64 %306
  %307 = bitcast i8* %arrayIdx1515 to <4 x i8>*
  %308 = load <4 x i8>, <4 x i8>* %307, align 1, !tbaa !12
  %309 = bitcast i8* %arrayIdx1619 to <4 x i8>*
  %310 = load <4 x i8>, <4 x i8>* %309, align 1, !tbaa !12
  %SplitLoadShuffle7030 = shufflevector <4 x i8> %308, <4 x i8> %310, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %arrayIdx1646 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 3, i64 4
  %311 = zext <8 x i8> %SplitLoadShuffle7031 to <8 x i32>
  %312 = zext <8 x i8> %SplitLoadShuffle7028 to <8 x i32>
  %313 = zext <8 x i8> %SplitLoadShuffle7030 to <8 x i32>
  %314 = zext <8 x i8> %SplitLoadShuffle7029 to <8 x i32>
  %315 = shl nuw nsw <8 x i32> %312, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %316 = shl nuw nsw <8 x i32> %313, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %317 = sub nsw <8 x i32> %315, %314
  %318 = sub nsw <8 x i32> %317, %316
  %319 = add nsw <8 x i32> %318, %311
  %arrayIdx1664 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 3, i64 6
  %arrayIdx1682 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 3, i64 5
  %arrayIdx1700 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 3, i64 7
  %320 = extractelement <8 x i32> %319, i32 3
  %321 = insertelement <8 x i32> undef, i32 %320, i32 0
  %322 = extractelement <8 x i32> %319, i32 0
  %323 = insertelement <8 x i32> %321, i32 %322, i32 1
  %324 = insertelement <8 x i32> %323, i32 %322, i32 2
  %325 = insertelement <8 x i32> %324, i32 %322, i32 3
  %326 = extractelement <8 x i32> %319, i32 7
  %327 = insertelement <8 x i32> %325, i32 %326, i32 4
  %328 = extractelement <8 x i32> %319, i32 4
  %329 = insertelement <8 x i32> %327, i32 %328, i32 5
  %330 = insertelement <8 x i32> %329, i32 %328, i32 6
  %331 = insertelement <8 x i32> %330, i32 %328, i32 7
  %332 = extractelement <8 x i32> %319, i32 1
  %333 = insertelement <8 x i32> undef, i32 %332, i32 0
  %334 = insertelement <8 x i32> %333, i32 %320, i32 1
  %335 = insertelement <8 x i32> %334, i32 %332, i32 2
  %336 = insertelement <8 x i32> %335, i32 %332, i32 3
  %337 = extractelement <8 x i32> %319, i32 5
  %338 = insertelement <8 x i32> %336, i32 %337, i32 4
  %339 = insertelement <8 x i32> %338, i32 %326, i32 5
  %340 = insertelement <8 x i32> %339, i32 %337, i32 6
  %341 = insertelement <8 x i32> %340, i32 %337, i32 7
  %342 = add nsw <8 x i32> %331, %341
  %343 = sub nsw <8 x i32> %331, %341
  %344 = select <8 x i1> <i1 true, i1 false, i1 true, i1 false, i1 true, i1 false, i1 true, i1 false>, <8 x i32> %342, <8 x i32> %343
  %345 = extractelement <8 x i32> %319, i32 2
  %346 = insertelement <8 x i32> undef, i32 %345, i32 0
  %347 = insertelement <8 x i32> %346, i32 %345, i32 1
  %348 = insertelement <8 x i32> %347, i32 %320, i32 2
  %349 = insertelement <8 x i32> %348, i32 %345, i32 3
  %350 = extractelement <8 x i32> %319, i32 6
  %351 = insertelement <8 x i32> %349, i32 %350, i32 4
  %352 = insertelement <8 x i32> %351, i32 %350, i32 5
  %353 = insertelement <8 x i32> %352, i32 %326, i32 6
  %354 = insertelement <8 x i32> %353, i32 %350, i32 7
  %355 = add nsw <8 x i32> %344, %354
  %356 = sub nsw <8 x i32> %344, %354
  %357 = select <8 x i1> <i1 true, i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false>, <8 x i32> %355, <8 x i32> %356
  %358 = sub <8 x i32> %357, %319
  %359 = add <8 x i32> %357, %319
  %360 = select <8 x i1> <i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false, i1 true>, <8 x i32> %359, <8 x i32> %358
  %361 = bitcast i32* %arrayIdx1542 to <8 x i32>*
  store <8 x i32> %360, <8 x i32>* %361, align 4
  %362 = shl nsw i64 %idx.ext.i, 2
  %arrayIdx1717 = getelementptr inbounds i8, i8* %pix1, i64 %362
  %363 = shl nsw i64 %idx.ext63.i, 2
  %arrayIdx1719 = getelementptr inbounds i8, i8* %pix2, i64 %363
  %364 = add nsw i64 %362, 4
  %arrayIdx1721 = getelementptr inbounds i8, i8* %pix1, i64 %364
  %365 = add nsw i64 %363, 4
  %arrayIdx1723 = getelementptr inbounds i8, i8* %pix2, i64 %365
  %366 = or i64 %362, 1
  %arrayIdx1725 = getelementptr inbounds i8, i8* %pix1, i64 %366
  %367 = or i64 %363, 1
  %arrayIdx1727 = getelementptr inbounds i8, i8* %pix2, i64 %367
  %368 = add nsw i64 %362, 5
  %arrayIdx1729 = getelementptr inbounds i8, i8* %pix1, i64 %368
  %369 = add nsw i64 %363, 5
  %arrayIdx1731 = getelementptr inbounds i8, i8* %pix2, i64 %369
  %370 = or i64 %362, 2
  %arrayIdx1733 = getelementptr inbounds i8, i8* %pix1, i64 %370
  %371 = or i64 %363, 2
  %arrayIdx1735 = getelementptr inbounds i8, i8* %pix2, i64 %371
  %372 = add nsw i64 %362, 6
  %arrayIdx1737 = getelementptr inbounds i8, i8* %pix1, i64 %372
  %373 = add nsw i64 %363, 6
  %arrayIdx1739 = getelementptr inbounds i8, i8* %pix2, i64 %373
  %374 = or i64 %362, 3
  %arrayIdx1741 = getelementptr inbounds i8, i8* %pix1, i64 %374
  %375 = or i64 %363, 3
  %arrayIdx1743 = getelementptr inbounds i8, i8* %pix2, i64 %375
  %376 = add nsw i64 %362, 7
  %arrayIdx1745 = getelementptr inbounds i8, i8* %pix1, i64 %376
  %377 = add nsw i64 %363, 7
  %arrayIdx1747 = getelementptr inbounds i8, i8* %pix2, i64 %377
  %arrayIdx1750 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 4, i64 0
  %arrayIdx1768 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 4, i64 2
  %arrayIdx1786 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 4, i64 1
  %arrayIdx1804 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 4, i64 3
  %378 = add nsw i64 %362, 8
  %arrayIdx1821 = getelementptr inbounds i8, i8* %pix1, i64 %378
  %379 = add nsw i64 %363, 8
  %arrayIdx1823 = getelementptr inbounds i8, i8* %pix2, i64 %379
  %380 = add nsw i64 %362, 12
  %arrayIdx1825 = getelementptr inbounds i8, i8* %pix1, i64 %380
  %381 = add nsw i64 %363, 12
  %arrayIdx1827 = getelementptr inbounds i8, i8* %pix2, i64 %381
  %382 = add nsw i64 %362, 9
  %arrayIdx1829 = getelementptr inbounds i8, i8* %pix1, i64 %382
  %383 = add nsw i64 %363, 9
  %arrayIdx1831 = getelementptr inbounds i8, i8* %pix2, i64 %383
  %384 = add nsw i64 %362, 13
  %arrayIdx1833 = getelementptr inbounds i8, i8* %pix1, i64 %384
  %385 = add nsw i64 %363, 13
  %arrayIdx1835 = getelementptr inbounds i8, i8* %pix2, i64 %385
  %386 = add nsw i64 %362, 10
  %arrayIdx1837 = getelementptr inbounds i8, i8* %pix1, i64 %386
  %387 = add nsw i64 %363, 10
  %arrayIdx1839 = getelementptr inbounds i8, i8* %pix2, i64 %387
  %388 = add nsw i64 %362, 14
  %arrayIdx1841 = getelementptr inbounds i8, i8* %pix1, i64 %388
  %389 = add nsw i64 %363, 14
  %arrayIdx1843 = getelementptr inbounds i8, i8* %pix2, i64 %389
  %390 = add nsw i64 %362, 11
  %arrayIdx1845 = getelementptr inbounds i8, i8* %pix1, i64 %390
  %391 = bitcast i8* %arrayIdx1717 to <4 x i8>*
  %392 = load <4 x i8>, <4 x i8>* %391, align 1, !tbaa !12
  %393 = bitcast i8* %arrayIdx1821 to <4 x i8>*
  %394 = load <4 x i8>, <4 x i8>* %393, align 1, !tbaa !12
  %SplitLoadShuffle7080 = shufflevector <4 x i8> %392, <4 x i8> %394, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %395 = add nsw i64 %363, 11
  %arrayIdx1847 = getelementptr inbounds i8, i8* %pix2, i64 %395
  %396 = bitcast i8* %arrayIdx1719 to <4 x i8>*
  %397 = load <4 x i8>, <4 x i8>* %396, align 1, !tbaa !12
  %398 = bitcast i8* %arrayIdx1823 to <4 x i8>*
  %399 = load <4 x i8>, <4 x i8>* %398, align 1, !tbaa !12
  %SplitLoadShuffle7078 = shufflevector <4 x i8> %397, <4 x i8> %399, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %400 = add nsw i64 %362, 15
  %arrayIdx1849 = getelementptr inbounds i8, i8* %pix1, i64 %400
  %401 = bitcast i8* %arrayIdx1721 to <4 x i8>*
  %402 = load <4 x i8>, <4 x i8>* %401, align 1, !tbaa !12
  %403 = bitcast i8* %arrayIdx1825 to <4 x i8>*
  %404 = load <4 x i8>, <4 x i8>* %403, align 1, !tbaa !12
  %SplitLoadShuffle7077 = shufflevector <4 x i8> %402, <4 x i8> %404, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %405 = add nsw i64 %363, 15
  %arrayIdx1851 = getelementptr inbounds i8, i8* %pix2, i64 %405
  %406 = bitcast i8* %arrayIdx1723 to <4 x i8>*
  %407 = load <4 x i8>, <4 x i8>* %406, align 1, !tbaa !12
  %408 = bitcast i8* %arrayIdx1827 to <4 x i8>*
  %409 = load <4 x i8>, <4 x i8>* %408, align 1, !tbaa !12
  %SplitLoadShuffle7079 = shufflevector <4 x i8> %407, <4 x i8> %409, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %arrayIdx1854 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 4, i64 4
  %410 = zext <8 x i8> %SplitLoadShuffle7080 to <8 x i32>
  %411 = zext <8 x i8> %SplitLoadShuffle7077 to <8 x i32>
  %412 = zext <8 x i8> %SplitLoadShuffle7079 to <8 x i32>
  %413 = zext <8 x i8> %SplitLoadShuffle7078 to <8 x i32>
  %414 = shl nuw nsw <8 x i32> %411, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %415 = shl nuw nsw <8 x i32> %412, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %416 = sub nsw <8 x i32> %414, %413
  %417 = sub nsw <8 x i32> %416, %415
  %418 = add nsw <8 x i32> %417, %410
  %arrayIdx1872 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 4, i64 6
  %arrayIdx1890 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 4, i64 5
  %arrayIdx1908 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 4, i64 7
  %419 = extractelement <8 x i32> %418, i32 3
  %420 = insertelement <8 x i32> undef, i32 %419, i32 0
  %421 = extractelement <8 x i32> %418, i32 0
  %422 = insertelement <8 x i32> %420, i32 %421, i32 1
  %423 = insertelement <8 x i32> %422, i32 %421, i32 2
  %424 = insertelement <8 x i32> %423, i32 %421, i32 3
  %425 = extractelement <8 x i32> %418, i32 7
  %426 = insertelement <8 x i32> %424, i32 %425, i32 4
  %427 = extractelement <8 x i32> %418, i32 4
  %428 = insertelement <8 x i32> %426, i32 %427, i32 5
  %429 = insertelement <8 x i32> %428, i32 %427, i32 6
  %430 = insertelement <8 x i32> %429, i32 %427, i32 7
  %431 = extractelement <8 x i32> %418, i32 1
  %432 = insertelement <8 x i32> undef, i32 %431, i32 0
  %433 = insertelement <8 x i32> %432, i32 %419, i32 1
  %434 = insertelement <8 x i32> %433, i32 %431, i32 2
  %435 = insertelement <8 x i32> %434, i32 %431, i32 3
  %436 = extractelement <8 x i32> %418, i32 5
  %437 = insertelement <8 x i32> %435, i32 %436, i32 4
  %438 = insertelement <8 x i32> %437, i32 %425, i32 5
  %439 = insertelement <8 x i32> %438, i32 %436, i32 6
  %440 = insertelement <8 x i32> %439, i32 %436, i32 7
  %441 = add nsw <8 x i32> %430, %440
  %442 = sub nsw <8 x i32> %430, %440
  %443 = select <8 x i1> <i1 true, i1 false, i1 true, i1 false, i1 true, i1 false, i1 true, i1 false>, <8 x i32> %441, <8 x i32> %442
  %444 = extractelement <8 x i32> %418, i32 2
  %445 = insertelement <8 x i32> undef, i32 %444, i32 0
  %446 = insertelement <8 x i32> %445, i32 %444, i32 1
  %447 = insertelement <8 x i32> %446, i32 %419, i32 2
  %448 = insertelement <8 x i32> %447, i32 %444, i32 3
  %449 = extractelement <8 x i32> %418, i32 6
  %450 = insertelement <8 x i32> %448, i32 %449, i32 4
  %451 = insertelement <8 x i32> %450, i32 %449, i32 5
  %452 = insertelement <8 x i32> %451, i32 %425, i32 6
  %453 = insertelement <8 x i32> %452, i32 %449, i32 7
  %454 = add nsw <8 x i32> %443, %453
  %455 = sub nsw <8 x i32> %443, %453
  %456 = select <8 x i1> <i1 true, i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false>, <8 x i32> %454, <8 x i32> %455
  %457 = sub <8 x i32> %456, %418
  %458 = add <8 x i32> %456, %418
  %459 = select <8 x i1> <i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false, i1 true>, <8 x i32> %458, <8 x i32> %457
  %460 = bitcast i32* %arrayIdx1750 to <8 x i32>*
  store <8 x i32> %459, <8 x i32>* %460, align 4
  %461 = mul nsw i64 %idx.ext.i, 5
  %arrayIdx1925 = getelementptr inbounds i8, i8* %pix1, i64 %461
  %462 = mul nsw i64 %idx.ext63.i, 5
  %arrayIdx1927 = getelementptr inbounds i8, i8* %pix2, i64 %462
  %463 = add nsw i64 %461, 4
  %arrayIdx1929 = getelementptr inbounds i8, i8* %pix1, i64 %463
  %464 = add nsw i64 %462, 4
  %arrayIdx1931 = getelementptr inbounds i8, i8* %pix2, i64 %464
  %465 = add nsw i64 %461, 1
  %arrayIdx1933 = getelementptr inbounds i8, i8* %pix1, i64 %465
  %466 = add nsw i64 %462, 1
  %arrayIdx1935 = getelementptr inbounds i8, i8* %pix2, i64 %466
  %467 = add nsw i64 %461, 5
  %arrayIdx1937 = getelementptr inbounds i8, i8* %pix1, i64 %467
  %468 = add nsw i64 %462, 5
  %arrayIdx1939 = getelementptr inbounds i8, i8* %pix2, i64 %468
  %469 = add nsw i64 %461, 2
  %arrayIdx1941 = getelementptr inbounds i8, i8* %pix1, i64 %469
  %470 = add nsw i64 %462, 2
  %arrayIdx1943 = getelementptr inbounds i8, i8* %pix2, i64 %470
  %471 = add nsw i64 %461, 6
  %arrayIdx1945 = getelementptr inbounds i8, i8* %pix1, i64 %471
  %472 = add nsw i64 %462, 6
  %arrayIdx1947 = getelementptr inbounds i8, i8* %pix2, i64 %472
  %473 = add nsw i64 %461, 3
  %arrayIdx1949 = getelementptr inbounds i8, i8* %pix1, i64 %473
  %474 = add nsw i64 %462, 3
  %arrayIdx1951 = getelementptr inbounds i8, i8* %pix2, i64 %474
  %475 = add nsw i64 %461, 7
  %arrayIdx1953 = getelementptr inbounds i8, i8* %pix1, i64 %475
  %476 = add nsw i64 %462, 7
  %arrayIdx1955 = getelementptr inbounds i8, i8* %pix2, i64 %476
  %arrayIdx1958 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 5, i64 0
  %arrayIdx1976 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 5, i64 2
  %arrayIdx1994 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 5, i64 1
  %arrayIdx2012 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 5, i64 3
  %477 = add nsw i64 %461, 8
  %arrayIdx2029 = getelementptr inbounds i8, i8* %pix1, i64 %477
  %478 = add nsw i64 %462, 8
  %arrayIdx2031 = getelementptr inbounds i8, i8* %pix2, i64 %478
  %479 = add nsw i64 %461, 12
  %arrayIdx2033 = getelementptr inbounds i8, i8* %pix1, i64 %479
  %480 = add nsw i64 %462, 12
  %arrayIdx2035 = getelementptr inbounds i8, i8* %pix2, i64 %480
  %481 = add nsw i64 %461, 9
  %arrayIdx2037 = getelementptr inbounds i8, i8* %pix1, i64 %481
  %482 = add nsw i64 %462, 9
  %arrayIdx2039 = getelementptr inbounds i8, i8* %pix2, i64 %482
  %483 = add nsw i64 %461, 13
  %arrayIdx2041 = getelementptr inbounds i8, i8* %pix1, i64 %483
  %484 = add nsw i64 %462, 13
  %arrayIdx2043 = getelementptr inbounds i8, i8* %pix2, i64 %484
  %485 = add nsw i64 %461, 10
  %arrayIdx2045 = getelementptr inbounds i8, i8* %pix1, i64 %485
  %486 = add nsw i64 %462, 10
  %arrayIdx2047 = getelementptr inbounds i8, i8* %pix2, i64 %486
  %487 = add nsw i64 %461, 14
  %arrayIdx2049 = getelementptr inbounds i8, i8* %pix1, i64 %487
  %488 = add nsw i64 %462, 14
  %arrayIdx2051 = getelementptr inbounds i8, i8* %pix2, i64 %488
  %489 = add nsw i64 %461, 11
  %arrayIdx2053 = getelementptr inbounds i8, i8* %pix1, i64 %489
  %490 = bitcast i8* %arrayIdx1925 to <4 x i8>*
  %491 = load <4 x i8>, <4 x i8>* %490, align 1, !tbaa !12
  %492 = bitcast i8* %arrayIdx2029 to <4 x i8>*
  %493 = load <4 x i8>, <4 x i8>* %492, align 1, !tbaa !12
  %SplitLoadShuffle7129 = shufflevector <4 x i8> %491, <4 x i8> %493, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %494 = add nsw i64 %462, 11
  %arrayIdx2055 = getelementptr inbounds i8, i8* %pix2, i64 %494
  %495 = bitcast i8* %arrayIdx1927 to <4 x i8>*
  %496 = load <4 x i8>, <4 x i8>* %495, align 1, !tbaa !12
  %497 = bitcast i8* %arrayIdx2031 to <4 x i8>*
  %498 = load <4 x i8>, <4 x i8>* %497, align 1, !tbaa !12
  %SplitLoadShuffle7127 = shufflevector <4 x i8> %496, <4 x i8> %498, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %499 = add nsw i64 %461, 15
  %arrayIdx2057 = getelementptr inbounds i8, i8* %pix1, i64 %499
  %500 = bitcast i8* %arrayIdx1929 to <4 x i8>*
  %501 = load <4 x i8>, <4 x i8>* %500, align 1, !tbaa !12
  %502 = bitcast i8* %arrayIdx2033 to <4 x i8>*
  %503 = load <4 x i8>, <4 x i8>* %502, align 1, !tbaa !12
  %SplitLoadShuffle7126 = shufflevector <4 x i8> %501, <4 x i8> %503, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %504 = add nsw i64 %462, 15
  %arrayIdx2059 = getelementptr inbounds i8, i8* %pix2, i64 %504
  %505 = bitcast i8* %arrayIdx1931 to <4 x i8>*
  %506 = load <4 x i8>, <4 x i8>* %505, align 1, !tbaa !12
  %507 = bitcast i8* %arrayIdx2035 to <4 x i8>*
  %508 = load <4 x i8>, <4 x i8>* %507, align 1, !tbaa !12
  %SplitLoadShuffle7128 = shufflevector <4 x i8> %506, <4 x i8> %508, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %arrayIdx2062 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 5, i64 4
  %509 = zext <8 x i8> %SplitLoadShuffle7129 to <8 x i32>
  %510 = zext <8 x i8> %SplitLoadShuffle7126 to <8 x i32>
  %511 = zext <8 x i8> %SplitLoadShuffle7128 to <8 x i32>
  %512 = zext <8 x i8> %SplitLoadShuffle7127 to <8 x i32>
  %513 = shl nuw nsw <8 x i32> %510, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %514 = shl nuw nsw <8 x i32> %511, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %515 = sub nsw <8 x i32> %513, %512
  %516 = sub nsw <8 x i32> %515, %514
  %517 = add nsw <8 x i32> %516, %509
  %arrayIdx2080 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 5, i64 6
  %arrayIdx2098 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 5, i64 5
  %arrayIdx2116 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 5, i64 7
  %518 = extractelement <8 x i32> %517, i32 3
  %519 = insertelement <8 x i32> undef, i32 %518, i32 0
  %520 = extractelement <8 x i32> %517, i32 0
  %521 = insertelement <8 x i32> %519, i32 %520, i32 1
  %522 = insertelement <8 x i32> %521, i32 %520, i32 2
  %523 = insertelement <8 x i32> %522, i32 %520, i32 3
  %524 = extractelement <8 x i32> %517, i32 7
  %525 = insertelement <8 x i32> %523, i32 %524, i32 4
  %526 = extractelement <8 x i32> %517, i32 4
  %527 = insertelement <8 x i32> %525, i32 %526, i32 5
  %528 = insertelement <8 x i32> %527, i32 %526, i32 6
  %529 = insertelement <8 x i32> %528, i32 %526, i32 7
  %530 = extractelement <8 x i32> %517, i32 1
  %531 = insertelement <8 x i32> undef, i32 %530, i32 0
  %532 = insertelement <8 x i32> %531, i32 %518, i32 1
  %533 = insertelement <8 x i32> %532, i32 %530, i32 2
  %534 = insertelement <8 x i32> %533, i32 %530, i32 3
  %535 = extractelement <8 x i32> %517, i32 5
  %536 = insertelement <8 x i32> %534, i32 %535, i32 4
  %537 = insertelement <8 x i32> %536, i32 %524, i32 5
  %538 = insertelement <8 x i32> %537, i32 %535, i32 6
  %539 = insertelement <8 x i32> %538, i32 %535, i32 7
  %540 = add nsw <8 x i32> %529, %539
  %541 = sub nsw <8 x i32> %529, %539
  %542 = select <8 x i1> <i1 true, i1 false, i1 true, i1 false, i1 true, i1 false, i1 true, i1 false>, <8 x i32> %540, <8 x i32> %541
  %543 = extractelement <8 x i32> %517, i32 2
  %544 = insertelement <8 x i32> undef, i32 %543, i32 0
  %545 = insertelement <8 x i32> %544, i32 %543, i32 1
  %546 = insertelement <8 x i32> %545, i32 %518, i32 2
  %547 = insertelement <8 x i32> %546, i32 %543, i32 3
  %548 = extractelement <8 x i32> %517, i32 6
  %549 = insertelement <8 x i32> %547, i32 %548, i32 4
  %550 = insertelement <8 x i32> %549, i32 %548, i32 5
  %551 = insertelement <8 x i32> %550, i32 %524, i32 6
  %552 = insertelement <8 x i32> %551, i32 %548, i32 7
  %553 = add nsw <8 x i32> %542, %552
  %554 = sub nsw <8 x i32> %542, %552
  %555 = select <8 x i1> <i1 true, i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false>, <8 x i32> %553, <8 x i32> %554
  %556 = sub <8 x i32> %555, %517
  %557 = add <8 x i32> %555, %517
  %558 = select <8 x i1> <i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false, i1 true>, <8 x i32> %557, <8 x i32> %556
  %559 = bitcast i32* %arrayIdx1958 to <8 x i32>*
  store <8 x i32> %558, <8 x i32>* %559, align 4
  %560 = mul nsw i64 %idx.ext.i, 6
  %arrayIdx2133 = getelementptr inbounds i8, i8* %pix1, i64 %560
  %561 = mul nsw i64 %idx.ext63.i, 6
  %arrayIdx2135 = getelementptr inbounds i8, i8* %pix2, i64 %561
  %562 = add nsw i64 %560, 4
  %arrayIdx2137 = getelementptr inbounds i8, i8* %pix1, i64 %562
  %563 = add nsw i64 %561, 4
  %arrayIdx2139 = getelementptr inbounds i8, i8* %pix2, i64 %563
  %564 = or i64 %560, 1
  %arrayIdx2141 = getelementptr inbounds i8, i8* %pix1, i64 %564
  %565 = or i64 %561, 1
  %arrayIdx2143 = getelementptr inbounds i8, i8* %pix2, i64 %565
  %566 = add nsw i64 %560, 5
  %arrayIdx2145 = getelementptr inbounds i8, i8* %pix1, i64 %566
  %567 = add nsw i64 %561, 5
  %arrayIdx2147 = getelementptr inbounds i8, i8* %pix2, i64 %567
  %568 = add nsw i64 %560, 2
  %arrayIdx2149 = getelementptr inbounds i8, i8* %pix1, i64 %568
  %569 = add nsw i64 %561, 2
  %arrayIdx2151 = getelementptr inbounds i8, i8* %pix2, i64 %569
  %570 = add nsw i64 %560, 6
  %arrayIdx2153 = getelementptr inbounds i8, i8* %pix1, i64 %570
  %571 = add nsw i64 %561, 6
  %arrayIdx2155 = getelementptr inbounds i8, i8* %pix2, i64 %571
  %572 = add nsw i64 %560, 3
  %arrayIdx2157 = getelementptr inbounds i8, i8* %pix1, i64 %572
  %573 = add nsw i64 %561, 3
  %arrayIdx2159 = getelementptr inbounds i8, i8* %pix2, i64 %573
  %574 = add nsw i64 %560, 7
  %arrayIdx2161 = getelementptr inbounds i8, i8* %pix1, i64 %574
  %575 = add nsw i64 %561, 7
  %arrayIdx2163 = getelementptr inbounds i8, i8* %pix2, i64 %575
  %arrayIdx2166 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 6, i64 0
  %arrayIdx2184 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 6, i64 2
  %arrayIdx2202 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 6, i64 1
  %arrayIdx2220 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 6, i64 3
  %576 = add nsw i64 %560, 8
  %arrayIdx2237 = getelementptr inbounds i8, i8* %pix1, i64 %576
  %577 = add nsw i64 %561, 8
  %arrayIdx2239 = getelementptr inbounds i8, i8* %pix2, i64 %577
  %578 = add nsw i64 %560, 12
  %arrayIdx2241 = getelementptr inbounds i8, i8* %pix1, i64 %578
  %579 = add nsw i64 %561, 12
  %arrayIdx2243 = getelementptr inbounds i8, i8* %pix2, i64 %579
  %580 = add nsw i64 %560, 9
  %arrayIdx2245 = getelementptr inbounds i8, i8* %pix1, i64 %580
  %581 = add nsw i64 %561, 9
  %arrayIdx2247 = getelementptr inbounds i8, i8* %pix2, i64 %581
  %582 = add nsw i64 %560, 13
  %arrayIdx2249 = getelementptr inbounds i8, i8* %pix1, i64 %582
  %583 = add nsw i64 %561, 13
  %arrayIdx2251 = getelementptr inbounds i8, i8* %pix2, i64 %583
  %584 = add nsw i64 %560, 10
  %arrayIdx2253 = getelementptr inbounds i8, i8* %pix1, i64 %584
  %585 = add nsw i64 %561, 10
  %arrayIdx2255 = getelementptr inbounds i8, i8* %pix2, i64 %585
  %586 = add nsw i64 %560, 14
  %arrayIdx2257 = getelementptr inbounds i8, i8* %pix1, i64 %586
  %587 = add nsw i64 %561, 14
  %arrayIdx2259 = getelementptr inbounds i8, i8* %pix2, i64 %587
  %588 = add nsw i64 %560, 11
  %arrayIdx2261 = getelementptr inbounds i8, i8* %pix1, i64 %588
  %589 = bitcast i8* %arrayIdx2133 to <4 x i8>*
  %590 = load <4 x i8>, <4 x i8>* %589, align 1, !tbaa !12
  %591 = bitcast i8* %arrayIdx2237 to <4 x i8>*
  %592 = load <4 x i8>, <4 x i8>* %591, align 1, !tbaa !12
  %SplitLoadShuffle7178 = shufflevector <4 x i8> %590, <4 x i8> %592, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %593 = add nsw i64 %561, 11
  %arrayIdx2263 = getelementptr inbounds i8, i8* %pix2, i64 %593
  %594 = bitcast i8* %arrayIdx2135 to <4 x i8>*
  %595 = load <4 x i8>, <4 x i8>* %594, align 1, !tbaa !12
  %596 = bitcast i8* %arrayIdx2239 to <4 x i8>*
  %597 = load <4 x i8>, <4 x i8>* %596, align 1, !tbaa !12
  %SplitLoadShuffle7176 = shufflevector <4 x i8> %595, <4 x i8> %597, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %598 = add nsw i64 %560, 15
  %arrayIdx2265 = getelementptr inbounds i8, i8* %pix1, i64 %598
  %599 = bitcast i8* %arrayIdx2137 to <4 x i8>*
  %600 = load <4 x i8>, <4 x i8>* %599, align 1, !tbaa !12
  %601 = bitcast i8* %arrayIdx2241 to <4 x i8>*
  %602 = load <4 x i8>, <4 x i8>* %601, align 1, !tbaa !12
  %SplitLoadShuffle7175 = shufflevector <4 x i8> %600, <4 x i8> %602, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %603 = add nsw i64 %561, 15
  %arrayIdx2267 = getelementptr inbounds i8, i8* %pix2, i64 %603
  %604 = bitcast i8* %arrayIdx2139 to <4 x i8>*
  %605 = load <4 x i8>, <4 x i8>* %604, align 1, !tbaa !12
  %606 = bitcast i8* %arrayIdx2243 to <4 x i8>*
  %607 = load <4 x i8>, <4 x i8>* %606, align 1, !tbaa !12
  %SplitLoadShuffle7177 = shufflevector <4 x i8> %605, <4 x i8> %607, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %arrayIdx2270 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 6, i64 4
  %608 = zext <8 x i8> %SplitLoadShuffle7178 to <8 x i32>
  %609 = zext <8 x i8> %SplitLoadShuffle7175 to <8 x i32>
  %610 = zext <8 x i8> %SplitLoadShuffle7177 to <8 x i32>
  %611 = zext <8 x i8> %SplitLoadShuffle7176 to <8 x i32>
  %612 = shl nuw nsw <8 x i32> %609, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %613 = shl nuw nsw <8 x i32> %610, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %614 = sub nsw <8 x i32> %612, %611
  %615 = sub nsw <8 x i32> %614, %613
  %616 = add nsw <8 x i32> %615, %608
  %arrayIdx2288 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 6, i64 6
  %arrayIdx2306 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 6, i64 5
  %arrayIdx2324 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 6, i64 7
  %617 = extractelement <8 x i32> %616, i32 3
  %618 = insertelement <8 x i32> undef, i32 %617, i32 0
  %619 = extractelement <8 x i32> %616, i32 0
  %620 = insertelement <8 x i32> %618, i32 %619, i32 1
  %621 = insertelement <8 x i32> %620, i32 %619, i32 2
  %622 = insertelement <8 x i32> %621, i32 %619, i32 3
  %623 = extractelement <8 x i32> %616, i32 7
  %624 = insertelement <8 x i32> %622, i32 %623, i32 4
  %625 = extractelement <8 x i32> %616, i32 4
  %626 = insertelement <8 x i32> %624, i32 %625, i32 5
  %627 = insertelement <8 x i32> %626, i32 %625, i32 6
  %628 = insertelement <8 x i32> %627, i32 %625, i32 7
  %629 = extractelement <8 x i32> %616, i32 1
  %630 = insertelement <8 x i32> undef, i32 %629, i32 0
  %631 = insertelement <8 x i32> %630, i32 %617, i32 1
  %632 = insertelement <8 x i32> %631, i32 %629, i32 2
  %633 = insertelement <8 x i32> %632, i32 %629, i32 3
  %634 = extractelement <8 x i32> %616, i32 5
  %635 = insertelement <8 x i32> %633, i32 %634, i32 4
  %636 = insertelement <8 x i32> %635, i32 %623, i32 5
  %637 = insertelement <8 x i32> %636, i32 %634, i32 6
  %638 = insertelement <8 x i32> %637, i32 %634, i32 7
  %639 = add nsw <8 x i32> %628, %638
  %640 = sub nsw <8 x i32> %628, %638
  %641 = select <8 x i1> <i1 true, i1 false, i1 true, i1 false, i1 true, i1 false, i1 true, i1 false>, <8 x i32> %639, <8 x i32> %640
  %642 = extractelement <8 x i32> %616, i32 2
  %643 = insertelement <8 x i32> undef, i32 %642, i32 0
  %644 = insertelement <8 x i32> %643, i32 %642, i32 1
  %645 = insertelement <8 x i32> %644, i32 %617, i32 2
  %646 = insertelement <8 x i32> %645, i32 %642, i32 3
  %647 = extractelement <8 x i32> %616, i32 6
  %648 = insertelement <8 x i32> %646, i32 %647, i32 4
  %649 = insertelement <8 x i32> %648, i32 %647, i32 5
  %650 = insertelement <8 x i32> %649, i32 %623, i32 6
  %651 = insertelement <8 x i32> %650, i32 %647, i32 7
  %652 = add nsw <8 x i32> %641, %651
  %653 = sub nsw <8 x i32> %641, %651
  %654 = select <8 x i1> <i1 true, i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false>, <8 x i32> %652, <8 x i32> %653
  %655 = sub <8 x i32> %654, %616
  %656 = add <8 x i32> %654, %616
  %657 = select <8 x i1> <i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false, i1 true>, <8 x i32> %656, <8 x i32> %655
  %658 = bitcast i32* %arrayIdx2166 to <8 x i32>*
  store <8 x i32> %657, <8 x i32>* %658, align 4
  %659 = mul nsw i64 %idx.ext.i, 7
  %arrayIdx2341 = getelementptr inbounds i8, i8* %pix1, i64 %659
  %660 = mul nsw i64 %idx.ext63.i, 7
  %arrayIdx2343 = getelementptr inbounds i8, i8* %pix2, i64 %660
  %661 = add nsw i64 %659, 4
  %arrayIdx2345 = getelementptr inbounds i8, i8* %pix1, i64 %661
  %662 = add nsw i64 %660, 4
  %arrayIdx2347 = getelementptr inbounds i8, i8* %pix2, i64 %662
  %663 = add nsw i64 %659, 1
  %arrayIdx2349 = getelementptr inbounds i8, i8* %pix1, i64 %663
  %664 = add nsw i64 %660, 1
  %arrayIdx2351 = getelementptr inbounds i8, i8* %pix2, i64 %664
  %665 = add nsw i64 %659, 5
  %arrayIdx2353 = getelementptr inbounds i8, i8* %pix1, i64 %665
  %666 = add nsw i64 %660, 5
  %arrayIdx2355 = getelementptr inbounds i8, i8* %pix2, i64 %666
  %667 = add nsw i64 %659, 2
  %arrayIdx2357 = getelementptr inbounds i8, i8* %pix1, i64 %667
  %668 = add nsw i64 %660, 2
  %arrayIdx2359 = getelementptr inbounds i8, i8* %pix2, i64 %668
  %669 = add nsw i64 %659, 6
  %arrayIdx2361 = getelementptr inbounds i8, i8* %pix1, i64 %669
  %670 = add nsw i64 %660, 6
  %arrayIdx2363 = getelementptr inbounds i8, i8* %pix2, i64 %670
  %671 = add nsw i64 %659, 3
  %arrayIdx2365 = getelementptr inbounds i8, i8* %pix1, i64 %671
  %672 = add nsw i64 %660, 3
  %arrayIdx2367 = getelementptr inbounds i8, i8* %pix2, i64 %672
  %673 = add nsw i64 %659, 7
  %arrayIdx2369 = getelementptr inbounds i8, i8* %pix1, i64 %673
  %674 = add nsw i64 %660, 7
  %arrayIdx2371 = getelementptr inbounds i8, i8* %pix2, i64 %674
  %arrayIdx2374 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 7, i64 0
  %arrayIdx2392 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 7, i64 2
  %arrayIdx2410 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 7, i64 1
  %arrayIdx2428 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 7, i64 3
  %675 = add nsw i64 %659, 8
  %arrayIdx2445 = getelementptr inbounds i8, i8* %pix1, i64 %675
  %676 = add nsw i64 %660, 8
  %arrayIdx2447 = getelementptr inbounds i8, i8* %pix2, i64 %676
  %677 = add nsw i64 %659, 12
  %arrayIdx2449 = getelementptr inbounds i8, i8* %pix1, i64 %677
  %678 = add nsw i64 %660, 12
  %arrayIdx2451 = getelementptr inbounds i8, i8* %pix2, i64 %678
  %679 = add nsw i64 %659, 9
  %arrayIdx2453 = getelementptr inbounds i8, i8* %pix1, i64 %679
  %680 = add nsw i64 %660, 9
  %arrayIdx2455 = getelementptr inbounds i8, i8* %pix2, i64 %680
  %681 = add nsw i64 %659, 13
  %arrayIdx2457 = getelementptr inbounds i8, i8* %pix1, i64 %681
  %682 = add nsw i64 %660, 13
  %arrayIdx2459 = getelementptr inbounds i8, i8* %pix2, i64 %682
  %683 = add nsw i64 %659, 10
  %arrayIdx2461 = getelementptr inbounds i8, i8* %pix1, i64 %683
  %684 = add nsw i64 %660, 10
  %arrayIdx2463 = getelementptr inbounds i8, i8* %pix2, i64 %684
  %685 = add nsw i64 %659, 14
  %arrayIdx2465 = getelementptr inbounds i8, i8* %pix1, i64 %685
  %686 = add nsw i64 %660, 14
  %arrayIdx2467 = getelementptr inbounds i8, i8* %pix2, i64 %686
  %687 = add nsw i64 %659, 11
  %arrayIdx2469 = getelementptr inbounds i8, i8* %pix1, i64 %687
  %688 = bitcast i8* %arrayIdx2341 to <4 x i8>*
  %689 = load <4 x i8>, <4 x i8>* %688, align 1, !tbaa !12
  %690 = bitcast i8* %arrayIdx2445 to <4 x i8>*
  %691 = load <4 x i8>, <4 x i8>* %690, align 1, !tbaa !12
  %SplitLoadShuffle7227 = shufflevector <4 x i8> %689, <4 x i8> %691, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %692 = add nsw i64 %660, 11
  %arrayIdx2471 = getelementptr inbounds i8, i8* %pix2, i64 %692
  %693 = bitcast i8* %arrayIdx2343 to <4 x i8>*
  %694 = load <4 x i8>, <4 x i8>* %693, align 1, !tbaa !12
  %695 = bitcast i8* %arrayIdx2447 to <4 x i8>*
  %696 = load <4 x i8>, <4 x i8>* %695, align 1, !tbaa !12
  %SplitLoadShuffle7225 = shufflevector <4 x i8> %694, <4 x i8> %696, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %697 = add nsw i64 %659, 15
  %arrayIdx2473 = getelementptr inbounds i8, i8* %pix1, i64 %697
  %698 = bitcast i8* %arrayIdx2345 to <4 x i8>*
  %699 = load <4 x i8>, <4 x i8>* %698, align 1, !tbaa !12
  %700 = bitcast i8* %arrayIdx2449 to <4 x i8>*
  %701 = load <4 x i8>, <4 x i8>* %700, align 1, !tbaa !12
  %SplitLoadShuffle7224 = shufflevector <4 x i8> %699, <4 x i8> %701, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %702 = add nsw i64 %660, 15
  %arrayIdx2475 = getelementptr inbounds i8, i8* %pix2, i64 %702
  %703 = bitcast i8* %arrayIdx2347 to <4 x i8>*
  %704 = load <4 x i8>, <4 x i8>* %703, align 1, !tbaa !12
  %705 = bitcast i8* %arrayIdx2451 to <4 x i8>*
  %706 = load <4 x i8>, <4 x i8>* %705, align 1, !tbaa !12
  %SplitLoadShuffle7226 = shufflevector <4 x i8> %704, <4 x i8> %706, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %arrayIdx2478 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 7, i64 4
  %707 = zext <8 x i8> %SplitLoadShuffle7227 to <8 x i32>
  %708 = zext <8 x i8> %SplitLoadShuffle7224 to <8 x i32>
  %709 = zext <8 x i8> %SplitLoadShuffle7226 to <8 x i32>
  %710 = zext <8 x i8> %SplitLoadShuffle7225 to <8 x i32>
  %711 = shl nuw nsw <8 x i32> %708, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %712 = shl nuw nsw <8 x i32> %709, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %713 = sub nsw <8 x i32> %711, %710
  %714 = sub nsw <8 x i32> %713, %712
  %715 = add nsw <8 x i32> %714, %707
  %arrayIdx2496 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 7, i64 6
  %arrayIdx2514 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 7, i64 5
  %arrayIdx2532 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 7, i64 7
  %716 = extractelement <8 x i32> %715, i32 3
  %717 = insertelement <8 x i32> undef, i32 %716, i32 0
  %718 = extractelement <8 x i32> %715, i32 0
  %719 = insertelement <8 x i32> %717, i32 %718, i32 1
  %720 = insertelement <8 x i32> %719, i32 %718, i32 2
  %721 = insertelement <8 x i32> %720, i32 %718, i32 3
  %722 = extractelement <8 x i32> %715, i32 7
  %723 = insertelement <8 x i32> %721, i32 %722, i32 4
  %724 = extractelement <8 x i32> %715, i32 4
  %725 = insertelement <8 x i32> %723, i32 %724, i32 5
  %726 = insertelement <8 x i32> %725, i32 %724, i32 6
  %727 = insertelement <8 x i32> %726, i32 %724, i32 7
  %728 = extractelement <8 x i32> %715, i32 1
  %729 = insertelement <8 x i32> undef, i32 %728, i32 0
  %730 = insertelement <8 x i32> %729, i32 %716, i32 1
  %731 = insertelement <8 x i32> %730, i32 %728, i32 2
  %732 = insertelement <8 x i32> %731, i32 %728, i32 3
  %733 = extractelement <8 x i32> %715, i32 5
  %734 = insertelement <8 x i32> %732, i32 %733, i32 4
  %735 = insertelement <8 x i32> %734, i32 %722, i32 5
  %736 = insertelement <8 x i32> %735, i32 %733, i32 6
  %737 = insertelement <8 x i32> %736, i32 %733, i32 7
  %738 = add nsw <8 x i32> %727, %737
  %739 = sub nsw <8 x i32> %727, %737
  %740 = select <8 x i1> <i1 true, i1 false, i1 true, i1 false, i1 true, i1 false, i1 true, i1 false>, <8 x i32> %738, <8 x i32> %739
  %741 = extractelement <8 x i32> %715, i32 2
  %742 = insertelement <8 x i32> undef, i32 %741, i32 0
  %743 = insertelement <8 x i32> %742, i32 %741, i32 1
  %744 = insertelement <8 x i32> %743, i32 %716, i32 2
  %745 = insertelement <8 x i32> %744, i32 %741, i32 3
  %746 = extractelement <8 x i32> %715, i32 6
  %747 = insertelement <8 x i32> %745, i32 %746, i32 4
  %748 = insertelement <8 x i32> %747, i32 %746, i32 5
  %749 = insertelement <8 x i32> %748, i32 %722, i32 6
  %750 = insertelement <8 x i32> %749, i32 %746, i32 7
  %751 = add nsw <8 x i32> %740, %750
  %752 = sub nsw <8 x i32> %740, %750
  %753 = select <8 x i1> <i1 true, i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false>, <8 x i32> %751, <8 x i32> %752
  %754 = sub <8 x i32> %753, %715
  %755 = add <8 x i32> %753, %715
  %756 = select <8 x i1> <i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false, i1 true>, <8 x i32> %755, <8 x i32> %754
  %757 = bitcast i32* %arrayIdx2374 to <8 x i32>*
  store <8 x i32> %756, <8 x i32>* %757, align 4
  %758 = shl nsw i64 %idx.ext.i, 3
  %arrayIdx2549 = getelementptr inbounds i8, i8* %pix1, i64 %758
  %759 = shl nsw i64 %idx.ext63.i, 3
  %arrayIdx2551 = getelementptr inbounds i8, i8* %pix2, i64 %759
  %760 = or i64 %758, 4
  %arrayIdx2553 = getelementptr inbounds i8, i8* %pix1, i64 %760
  %761 = or i64 %759, 4
  %arrayIdx2555 = getelementptr inbounds i8, i8* %pix2, i64 %761
  %762 = or i64 %758, 1
  %arrayIdx2557 = getelementptr inbounds i8, i8* %pix1, i64 %762
  %763 = or i64 %759, 1
  %arrayIdx2559 = getelementptr inbounds i8, i8* %pix2, i64 %763
  %764 = or i64 %758, 5
  %arrayIdx2561 = getelementptr inbounds i8, i8* %pix1, i64 %764
  %765 = or i64 %759, 5
  %arrayIdx2563 = getelementptr inbounds i8, i8* %pix2, i64 %765
  %766 = or i64 %758, 2
  %arrayIdx2565 = getelementptr inbounds i8, i8* %pix1, i64 %766
  %767 = or i64 %759, 2
  %arrayIdx2567 = getelementptr inbounds i8, i8* %pix2, i64 %767
  %768 = or i64 %758, 6
  %arrayIdx2569 = getelementptr inbounds i8, i8* %pix1, i64 %768
  %769 = or i64 %759, 6
  %arrayIdx2571 = getelementptr inbounds i8, i8* %pix2, i64 %769
  %770 = or i64 %758, 3
  %arrayIdx2573 = getelementptr inbounds i8, i8* %pix1, i64 %770
  %771 = or i64 %759, 3
  %arrayIdx2575 = getelementptr inbounds i8, i8* %pix2, i64 %771
  %772 = or i64 %758, 7
  %arrayIdx2577 = getelementptr inbounds i8, i8* %pix1, i64 %772
  %773 = or i64 %759, 7
  %arrayIdx2579 = getelementptr inbounds i8, i8* %pix2, i64 %773
  %arrayIdx2582 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 8, i64 0
  %arrayIdx2600 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 8, i64 2
  %arrayIdx2618 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 8, i64 1
  %arrayIdx2636 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 8, i64 3
  %774 = add nsw i64 %758, 8
  %arrayIdx2653 = getelementptr inbounds i8, i8* %pix1, i64 %774
  %775 = add nsw i64 %759, 8
  %arrayIdx2655 = getelementptr inbounds i8, i8* %pix2, i64 %775
  %776 = add nsw i64 %758, 12
  %arrayIdx2657 = getelementptr inbounds i8, i8* %pix1, i64 %776
  %777 = add nsw i64 %759, 12
  %arrayIdx2659 = getelementptr inbounds i8, i8* %pix2, i64 %777
  %778 = add nsw i64 %758, 9
  %arrayIdx2661 = getelementptr inbounds i8, i8* %pix1, i64 %778
  %779 = add nsw i64 %759, 9
  %arrayIdx2663 = getelementptr inbounds i8, i8* %pix2, i64 %779
  %780 = add nsw i64 %758, 13
  %arrayIdx2665 = getelementptr inbounds i8, i8* %pix1, i64 %780
  %781 = add nsw i64 %759, 13
  %arrayIdx2667 = getelementptr inbounds i8, i8* %pix2, i64 %781
  %782 = add nsw i64 %758, 10
  %arrayIdx2669 = getelementptr inbounds i8, i8* %pix1, i64 %782
  %783 = add nsw i64 %759, 10
  %arrayIdx2671 = getelementptr inbounds i8, i8* %pix2, i64 %783
  %784 = add nsw i64 %758, 14
  %arrayIdx2673 = getelementptr inbounds i8, i8* %pix1, i64 %784
  %785 = add nsw i64 %759, 14
  %arrayIdx2675 = getelementptr inbounds i8, i8* %pix2, i64 %785
  %786 = add nsw i64 %758, 11
  %arrayIdx2677 = getelementptr inbounds i8, i8* %pix1, i64 %786
  %787 = bitcast i8* %arrayIdx2549 to <4 x i8>*
  %788 = load <4 x i8>, <4 x i8>* %787, align 1, !tbaa !12
  %789 = bitcast i8* %arrayIdx2653 to <4 x i8>*
  %790 = load <4 x i8>, <4 x i8>* %789, align 1, !tbaa !12
  %SplitLoadShuffle7276 = shufflevector <4 x i8> %788, <4 x i8> %790, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %791 = add nsw i64 %759, 11
  %arrayIdx2679 = getelementptr inbounds i8, i8* %pix2, i64 %791
  %792 = bitcast i8* %arrayIdx2551 to <4 x i8>*
  %793 = load <4 x i8>, <4 x i8>* %792, align 1, !tbaa !12
  %794 = bitcast i8* %arrayIdx2655 to <4 x i8>*
  %795 = load <4 x i8>, <4 x i8>* %794, align 1, !tbaa !12
  %SplitLoadShuffle7274 = shufflevector <4 x i8> %793, <4 x i8> %795, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %796 = add nsw i64 %758, 15
  %arrayIdx2681 = getelementptr inbounds i8, i8* %pix1, i64 %796
  %797 = bitcast i8* %arrayIdx2553 to <4 x i8>*
  %798 = load <4 x i8>, <4 x i8>* %797, align 1, !tbaa !12
  %799 = bitcast i8* %arrayIdx2657 to <4 x i8>*
  %800 = load <4 x i8>, <4 x i8>* %799, align 1, !tbaa !12
  %SplitLoadShuffle7273 = shufflevector <4 x i8> %798, <4 x i8> %800, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %801 = add nsw i64 %759, 15
  %arrayIdx2683 = getelementptr inbounds i8, i8* %pix2, i64 %801
  %802 = bitcast i8* %arrayIdx2555 to <4 x i8>*
  %803 = load <4 x i8>, <4 x i8>* %802, align 1, !tbaa !12
  %804 = bitcast i8* %arrayIdx2659 to <4 x i8>*
  %805 = load <4 x i8>, <4 x i8>* %804, align 1, !tbaa !12
  %SplitLoadShuffle7275 = shufflevector <4 x i8> %803, <4 x i8> %805, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %arrayIdx2686 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 8, i64 4
  %806 = zext <8 x i8> %SplitLoadShuffle7276 to <8 x i32>
  %807 = zext <8 x i8> %SplitLoadShuffle7273 to <8 x i32>
  %808 = zext <8 x i8> %SplitLoadShuffle7275 to <8 x i32>
  %809 = zext <8 x i8> %SplitLoadShuffle7274 to <8 x i32>
  %810 = shl nuw nsw <8 x i32> %807, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %811 = shl nuw nsw <8 x i32> %808, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %812 = sub nsw <8 x i32> %810, %809
  %813 = sub nsw <8 x i32> %812, %811
  %814 = add nsw <8 x i32> %813, %806
  %arrayIdx2704 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 8, i64 6
  %arrayIdx2722 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 8, i64 5
  %arrayIdx2740 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 8, i64 7
  %815 = extractelement <8 x i32> %814, i32 3
  %816 = insertelement <8 x i32> undef, i32 %815, i32 0
  %817 = extractelement <8 x i32> %814, i32 0
  %818 = insertelement <8 x i32> %816, i32 %817, i32 1
  %819 = insertelement <8 x i32> %818, i32 %817, i32 2
  %820 = insertelement <8 x i32> %819, i32 %817, i32 3
  %821 = extractelement <8 x i32> %814, i32 7
  %822 = insertelement <8 x i32> %820, i32 %821, i32 4
  %823 = extractelement <8 x i32> %814, i32 4
  %824 = insertelement <8 x i32> %822, i32 %823, i32 5
  %825 = insertelement <8 x i32> %824, i32 %823, i32 6
  %826 = insertelement <8 x i32> %825, i32 %823, i32 7
  %827 = extractelement <8 x i32> %814, i32 1
  %828 = insertelement <8 x i32> undef, i32 %827, i32 0
  %829 = insertelement <8 x i32> %828, i32 %815, i32 1
  %830 = insertelement <8 x i32> %829, i32 %827, i32 2
  %831 = insertelement <8 x i32> %830, i32 %827, i32 3
  %832 = extractelement <8 x i32> %814, i32 5
  %833 = insertelement <8 x i32> %831, i32 %832, i32 4
  %834 = insertelement <8 x i32> %833, i32 %821, i32 5
  %835 = insertelement <8 x i32> %834, i32 %832, i32 6
  %836 = insertelement <8 x i32> %835, i32 %832, i32 7
  %837 = add nsw <8 x i32> %826, %836
  %838 = sub nsw <8 x i32> %826, %836
  %839 = select <8 x i1> <i1 true, i1 false, i1 true, i1 false, i1 true, i1 false, i1 true, i1 false>, <8 x i32> %837, <8 x i32> %838
  %840 = extractelement <8 x i32> %814, i32 2
  %841 = insertelement <8 x i32> undef, i32 %840, i32 0
  %842 = insertelement <8 x i32> %841, i32 %840, i32 1
  %843 = insertelement <8 x i32> %842, i32 %815, i32 2
  %844 = insertelement <8 x i32> %843, i32 %840, i32 3
  %845 = extractelement <8 x i32> %814, i32 6
  %846 = insertelement <8 x i32> %844, i32 %845, i32 4
  %847 = insertelement <8 x i32> %846, i32 %845, i32 5
  %848 = insertelement <8 x i32> %847, i32 %821, i32 6
  %849 = insertelement <8 x i32> %848, i32 %845, i32 7
  %850 = add nsw <8 x i32> %839, %849
  %851 = sub nsw <8 x i32> %839, %849
  %852 = select <8 x i1> <i1 true, i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false>, <8 x i32> %850, <8 x i32> %851
  %853 = sub <8 x i32> %852, %814
  %854 = add <8 x i32> %852, %814
  %855 = select <8 x i1> <i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false, i1 true>, <8 x i32> %854, <8 x i32> %853
  %856 = bitcast i32* %arrayIdx2582 to <8 x i32>*
  store <8 x i32> %855, <8 x i32>* %856, align 4
  %857 = mul nsw i64 %idx.ext.i, 9
  %arrayIdx2757 = getelementptr inbounds i8, i8* %pix1, i64 %857
  %858 = mul nsw i64 %idx.ext63.i, 9
  %arrayIdx2759 = getelementptr inbounds i8, i8* %pix2, i64 %858
  %859 = add nsw i64 %857, 4
  %arrayIdx2761 = getelementptr inbounds i8, i8* %pix1, i64 %859
  %860 = add nsw i64 %858, 4
  %arrayIdx2763 = getelementptr inbounds i8, i8* %pix2, i64 %860
  %861 = add nsw i64 %857, 1
  %arrayIdx2765 = getelementptr inbounds i8, i8* %pix1, i64 %861
  %862 = add nsw i64 %858, 1
  %arrayIdx2767 = getelementptr inbounds i8, i8* %pix2, i64 %862
  %863 = add nsw i64 %857, 5
  %arrayIdx2769 = getelementptr inbounds i8, i8* %pix1, i64 %863
  %864 = add nsw i64 %858, 5
  %arrayIdx2771 = getelementptr inbounds i8, i8* %pix2, i64 %864
  %865 = add nsw i64 %857, 2
  %arrayIdx2773 = getelementptr inbounds i8, i8* %pix1, i64 %865
  %866 = add nsw i64 %858, 2
  %arrayIdx2775 = getelementptr inbounds i8, i8* %pix2, i64 %866
  %867 = add nsw i64 %857, 6
  %arrayIdx2777 = getelementptr inbounds i8, i8* %pix1, i64 %867
  %868 = add nsw i64 %858, 6
  %arrayIdx2779 = getelementptr inbounds i8, i8* %pix2, i64 %868
  %869 = add nsw i64 %857, 3
  %arrayIdx2781 = getelementptr inbounds i8, i8* %pix1, i64 %869
  %870 = add nsw i64 %858, 3
  %arrayIdx2783 = getelementptr inbounds i8, i8* %pix2, i64 %870
  %871 = add nsw i64 %857, 7
  %arrayIdx2785 = getelementptr inbounds i8, i8* %pix1, i64 %871
  %872 = add nsw i64 %858, 7
  %arrayIdx2787 = getelementptr inbounds i8, i8* %pix2, i64 %872
  %arrayIdx2790 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 9, i64 0
  %arrayIdx2808 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 9, i64 2
  %arrayIdx2826 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 9, i64 1
  %arrayIdx2844 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 9, i64 3
  %873 = add nsw i64 %857, 8
  %arrayIdx2861 = getelementptr inbounds i8, i8* %pix1, i64 %873
  %874 = add nsw i64 %858, 8
  %arrayIdx2863 = getelementptr inbounds i8, i8* %pix2, i64 %874
  %875 = add nsw i64 %857, 12
  %arrayIdx2865 = getelementptr inbounds i8, i8* %pix1, i64 %875
  %876 = add nsw i64 %858, 12
  %arrayIdx2867 = getelementptr inbounds i8, i8* %pix2, i64 %876
  %877 = add nsw i64 %857, 9
  %arrayIdx2869 = getelementptr inbounds i8, i8* %pix1, i64 %877
  %878 = add nsw i64 %858, 9
  %arrayIdx2871 = getelementptr inbounds i8, i8* %pix2, i64 %878
  %879 = add nsw i64 %857, 13
  %arrayIdx2873 = getelementptr inbounds i8, i8* %pix1, i64 %879
  %880 = add nsw i64 %858, 13
  %arrayIdx2875 = getelementptr inbounds i8, i8* %pix2, i64 %880
  %881 = add nsw i64 %857, 10
  %arrayIdx2877 = getelementptr inbounds i8, i8* %pix1, i64 %881
  %882 = add nsw i64 %858, 10
  %arrayIdx2879 = getelementptr inbounds i8, i8* %pix2, i64 %882
  %883 = add nsw i64 %857, 14
  %arrayIdx2881 = getelementptr inbounds i8, i8* %pix1, i64 %883
  %884 = add nsw i64 %858, 14
  %arrayIdx2883 = getelementptr inbounds i8, i8* %pix2, i64 %884
  %885 = add nsw i64 %857, 11
  %arrayIdx2885 = getelementptr inbounds i8, i8* %pix1, i64 %885
  %886 = bitcast i8* %arrayIdx2757 to <4 x i8>*
  %887 = load <4 x i8>, <4 x i8>* %886, align 1, !tbaa !12
  %888 = bitcast i8* %arrayIdx2861 to <4 x i8>*
  %889 = load <4 x i8>, <4 x i8>* %888, align 1, !tbaa !12
  %SplitLoadShuffle7325 = shufflevector <4 x i8> %887, <4 x i8> %889, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %890 = add nsw i64 %858, 11
  %arrayIdx2887 = getelementptr inbounds i8, i8* %pix2, i64 %890
  %891 = bitcast i8* %arrayIdx2759 to <4 x i8>*
  %892 = load <4 x i8>, <4 x i8>* %891, align 1, !tbaa !12
  %893 = bitcast i8* %arrayIdx2863 to <4 x i8>*
  %894 = load <4 x i8>, <4 x i8>* %893, align 1, !tbaa !12
  %SplitLoadShuffle7323 = shufflevector <4 x i8> %892, <4 x i8> %894, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %895 = add nsw i64 %857, 15
  %arrayIdx2889 = getelementptr inbounds i8, i8* %pix1, i64 %895
  %896 = bitcast i8* %arrayIdx2761 to <4 x i8>*
  %897 = load <4 x i8>, <4 x i8>* %896, align 1, !tbaa !12
  %898 = bitcast i8* %arrayIdx2865 to <4 x i8>*
  %899 = load <4 x i8>, <4 x i8>* %898, align 1, !tbaa !12
  %SplitLoadShuffle7322 = shufflevector <4 x i8> %897, <4 x i8> %899, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %900 = add nsw i64 %858, 15
  %arrayIdx2891 = getelementptr inbounds i8, i8* %pix2, i64 %900
  %901 = bitcast i8* %arrayIdx2763 to <4 x i8>*
  %902 = load <4 x i8>, <4 x i8>* %901, align 1, !tbaa !12
  %903 = bitcast i8* %arrayIdx2867 to <4 x i8>*
  %904 = load <4 x i8>, <4 x i8>* %903, align 1, !tbaa !12
  %SplitLoadShuffle7324 = shufflevector <4 x i8> %902, <4 x i8> %904, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %arrayIdx2894 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 9, i64 4
  %905 = zext <8 x i8> %SplitLoadShuffle7325 to <8 x i32>
  %906 = zext <8 x i8> %SplitLoadShuffle7322 to <8 x i32>
  %907 = zext <8 x i8> %SplitLoadShuffle7324 to <8 x i32>
  %908 = zext <8 x i8> %SplitLoadShuffle7323 to <8 x i32>
  %909 = shl nuw nsw <8 x i32> %906, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %910 = shl nuw nsw <8 x i32> %907, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %911 = sub nsw <8 x i32> %909, %908
  %912 = sub nsw <8 x i32> %911, %910
  %913 = add nsw <8 x i32> %912, %905
  %arrayIdx2912 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 9, i64 6
  %arrayIdx2930 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 9, i64 5
  %arrayIdx2948 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 9, i64 7
  %914 = extractelement <8 x i32> %913, i32 3
  %915 = insertelement <8 x i32> undef, i32 %914, i32 0
  %916 = extractelement <8 x i32> %913, i32 0
  %917 = insertelement <8 x i32> %915, i32 %916, i32 1
  %918 = insertelement <8 x i32> %917, i32 %916, i32 2
  %919 = insertelement <8 x i32> %918, i32 %916, i32 3
  %920 = extractelement <8 x i32> %913, i32 7
  %921 = insertelement <8 x i32> %919, i32 %920, i32 4
  %922 = extractelement <8 x i32> %913, i32 4
  %923 = insertelement <8 x i32> %921, i32 %922, i32 5
  %924 = insertelement <8 x i32> %923, i32 %922, i32 6
  %925 = insertelement <8 x i32> %924, i32 %922, i32 7
  %926 = extractelement <8 x i32> %913, i32 1
  %927 = insertelement <8 x i32> undef, i32 %926, i32 0
  %928 = insertelement <8 x i32> %927, i32 %914, i32 1
  %929 = insertelement <8 x i32> %928, i32 %926, i32 2
  %930 = insertelement <8 x i32> %929, i32 %926, i32 3
  %931 = extractelement <8 x i32> %913, i32 5
  %932 = insertelement <8 x i32> %930, i32 %931, i32 4
  %933 = insertelement <8 x i32> %932, i32 %920, i32 5
  %934 = insertelement <8 x i32> %933, i32 %931, i32 6
  %935 = insertelement <8 x i32> %934, i32 %931, i32 7
  %936 = add nsw <8 x i32> %925, %935
  %937 = sub nsw <8 x i32> %925, %935
  %938 = select <8 x i1> <i1 true, i1 false, i1 true, i1 false, i1 true, i1 false, i1 true, i1 false>, <8 x i32> %936, <8 x i32> %937
  %939 = extractelement <8 x i32> %913, i32 2
  %940 = insertelement <8 x i32> undef, i32 %939, i32 0
  %941 = insertelement <8 x i32> %940, i32 %939, i32 1
  %942 = insertelement <8 x i32> %941, i32 %914, i32 2
  %943 = insertelement <8 x i32> %942, i32 %939, i32 3
  %944 = extractelement <8 x i32> %913, i32 6
  %945 = insertelement <8 x i32> %943, i32 %944, i32 4
  %946 = insertelement <8 x i32> %945, i32 %944, i32 5
  %947 = insertelement <8 x i32> %946, i32 %920, i32 6
  %948 = insertelement <8 x i32> %947, i32 %944, i32 7
  %949 = add nsw <8 x i32> %938, %948
  %950 = sub nsw <8 x i32> %938, %948
  %951 = select <8 x i1> <i1 true, i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false>, <8 x i32> %949, <8 x i32> %950
  %952 = sub <8 x i32> %951, %913
  %953 = add <8 x i32> %951, %913
  %954 = select <8 x i1> <i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false, i1 true>, <8 x i32> %953, <8 x i32> %952
  %955 = bitcast i32* %arrayIdx2790 to <8 x i32>*
  store <8 x i32> %954, <8 x i32>* %955, align 4
  %956 = mul nsw i64 %idx.ext.i, 10
  %arrayIdx2965 = getelementptr inbounds i8, i8* %pix1, i64 %956
  %957 = mul nsw i64 %idx.ext63.i, 10
  %arrayIdx2967 = getelementptr inbounds i8, i8* %pix2, i64 %957
  %958 = add nsw i64 %956, 4
  %arrayIdx2969 = getelementptr inbounds i8, i8* %pix1, i64 %958
  %959 = add nsw i64 %957, 4
  %arrayIdx2971 = getelementptr inbounds i8, i8* %pix2, i64 %959
  %960 = or i64 %956, 1
  %arrayIdx2973 = getelementptr inbounds i8, i8* %pix1, i64 %960
  %961 = or i64 %957, 1
  %arrayIdx2975 = getelementptr inbounds i8, i8* %pix2, i64 %961
  %962 = add nsw i64 %956, 5
  %arrayIdx2977 = getelementptr inbounds i8, i8* %pix1, i64 %962
  %963 = add nsw i64 %957, 5
  %arrayIdx2979 = getelementptr inbounds i8, i8* %pix2, i64 %963
  %964 = add nsw i64 %956, 2
  %arrayIdx2981 = getelementptr inbounds i8, i8* %pix1, i64 %964
  %965 = add nsw i64 %957, 2
  %arrayIdx2983 = getelementptr inbounds i8, i8* %pix2, i64 %965
  %966 = add nsw i64 %956, 6
  %arrayIdx2985 = getelementptr inbounds i8, i8* %pix1, i64 %966
  %967 = add nsw i64 %957, 6
  %arrayIdx2987 = getelementptr inbounds i8, i8* %pix2, i64 %967
  %968 = add nsw i64 %956, 3
  %arrayIdx2989 = getelementptr inbounds i8, i8* %pix1, i64 %968
  %969 = add nsw i64 %957, 3
  %arrayIdx2991 = getelementptr inbounds i8, i8* %pix2, i64 %969
  %970 = add nsw i64 %956, 7
  %arrayIdx2993 = getelementptr inbounds i8, i8* %pix1, i64 %970
  %971 = add nsw i64 %957, 7
  %arrayIdx2995 = getelementptr inbounds i8, i8* %pix2, i64 %971
  %arrayIdx2998 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 10, i64 0
  %arrayIdx3016 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 10, i64 2
  %arrayIdx3034 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 10, i64 1
  %arrayIdx3052 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 10, i64 3
  %972 = add nsw i64 %956, 8
  %arrayIdx3069 = getelementptr inbounds i8, i8* %pix1, i64 %972
  %973 = add nsw i64 %957, 8
  %arrayIdx3071 = getelementptr inbounds i8, i8* %pix2, i64 %973
  %974 = add nsw i64 %956, 12
  %arrayIdx3073 = getelementptr inbounds i8, i8* %pix1, i64 %974
  %975 = add nsw i64 %957, 12
  %arrayIdx3075 = getelementptr inbounds i8, i8* %pix2, i64 %975
  %976 = add nsw i64 %956, 9
  %arrayIdx3077 = getelementptr inbounds i8, i8* %pix1, i64 %976
  %977 = add nsw i64 %957, 9
  %arrayIdx3079 = getelementptr inbounds i8, i8* %pix2, i64 %977
  %978 = add nsw i64 %956, 13
  %arrayIdx3081 = getelementptr inbounds i8, i8* %pix1, i64 %978
  %979 = add nsw i64 %957, 13
  %arrayIdx3083 = getelementptr inbounds i8, i8* %pix2, i64 %979
  %980 = add nsw i64 %956, 10
  %arrayIdx3085 = getelementptr inbounds i8, i8* %pix1, i64 %980
  %981 = add nsw i64 %957, 10
  %arrayIdx3087 = getelementptr inbounds i8, i8* %pix2, i64 %981
  %982 = add nsw i64 %956, 14
  %arrayIdx3089 = getelementptr inbounds i8, i8* %pix1, i64 %982
  %983 = add nsw i64 %957, 14
  %arrayIdx3091 = getelementptr inbounds i8, i8* %pix2, i64 %983
  %984 = add nsw i64 %956, 11
  %arrayIdx3093 = getelementptr inbounds i8, i8* %pix1, i64 %984
  %985 = bitcast i8* %arrayIdx2965 to <4 x i8>*
  %986 = load <4 x i8>, <4 x i8>* %985, align 1, !tbaa !12
  %987 = bitcast i8* %arrayIdx3069 to <4 x i8>*
  %988 = load <4 x i8>, <4 x i8>* %987, align 1, !tbaa !12
  %SplitLoadShuffle7374 = shufflevector <4 x i8> %986, <4 x i8> %988, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %989 = add nsw i64 %957, 11
  %arrayIdx3095 = getelementptr inbounds i8, i8* %pix2, i64 %989
  %990 = bitcast i8* %arrayIdx2967 to <4 x i8>*
  %991 = load <4 x i8>, <4 x i8>* %990, align 1, !tbaa !12
  %992 = bitcast i8* %arrayIdx3071 to <4 x i8>*
  %993 = load <4 x i8>, <4 x i8>* %992, align 1, !tbaa !12
  %SplitLoadShuffle7372 = shufflevector <4 x i8> %991, <4 x i8> %993, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %994 = add nsw i64 %956, 15
  %arrayIdx3097 = getelementptr inbounds i8, i8* %pix1, i64 %994
  %995 = bitcast i8* %arrayIdx2969 to <4 x i8>*
  %996 = load <4 x i8>, <4 x i8>* %995, align 1, !tbaa !12
  %997 = bitcast i8* %arrayIdx3073 to <4 x i8>*
  %998 = load <4 x i8>, <4 x i8>* %997, align 1, !tbaa !12
  %SplitLoadShuffle7371 = shufflevector <4 x i8> %996, <4 x i8> %998, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %999 = add nsw i64 %957, 15
  %arrayIdx3099 = getelementptr inbounds i8, i8* %pix2, i64 %999
  %1000 = bitcast i8* %arrayIdx2971 to <4 x i8>*
  %1001 = load <4 x i8>, <4 x i8>* %1000, align 1, !tbaa !12
  %1002 = bitcast i8* %arrayIdx3075 to <4 x i8>*
  %1003 = load <4 x i8>, <4 x i8>* %1002, align 1, !tbaa !12
  %SplitLoadShuffle7373 = shufflevector <4 x i8> %1001, <4 x i8> %1003, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %arrayIdx3102 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 10, i64 4
  %1004 = zext <8 x i8> %SplitLoadShuffle7374 to <8 x i32>
  %1005 = zext <8 x i8> %SplitLoadShuffle7371 to <8 x i32>
  %1006 = zext <8 x i8> %SplitLoadShuffle7373 to <8 x i32>
  %1007 = zext <8 x i8> %SplitLoadShuffle7372 to <8 x i32>
  %1008 = shl nuw nsw <8 x i32> %1005, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %1009 = shl nuw nsw <8 x i32> %1006, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %1010 = sub nsw <8 x i32> %1008, %1007
  %1011 = sub nsw <8 x i32> %1010, %1009
  %1012 = add nsw <8 x i32> %1011, %1004
  %arrayIdx3120 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 10, i64 6
  %arrayIdx3138 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 10, i64 5
  %arrayIdx3156 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 10, i64 7
  %1013 = extractelement <8 x i32> %1012, i32 3
  %1014 = insertelement <8 x i32> undef, i32 %1013, i32 0
  %1015 = extractelement <8 x i32> %1012, i32 0
  %1016 = insertelement <8 x i32> %1014, i32 %1015, i32 1
  %1017 = insertelement <8 x i32> %1016, i32 %1015, i32 2
  %1018 = insertelement <8 x i32> %1017, i32 %1015, i32 3
  %1019 = extractelement <8 x i32> %1012, i32 7
  %1020 = insertelement <8 x i32> %1018, i32 %1019, i32 4
  %1021 = extractelement <8 x i32> %1012, i32 4
  %1022 = insertelement <8 x i32> %1020, i32 %1021, i32 5
  %1023 = insertelement <8 x i32> %1022, i32 %1021, i32 6
  %1024 = insertelement <8 x i32> %1023, i32 %1021, i32 7
  %1025 = extractelement <8 x i32> %1012, i32 1
  %1026 = insertelement <8 x i32> undef, i32 %1025, i32 0
  %1027 = insertelement <8 x i32> %1026, i32 %1013, i32 1
  %1028 = insertelement <8 x i32> %1027, i32 %1025, i32 2
  %1029 = insertelement <8 x i32> %1028, i32 %1025, i32 3
  %1030 = extractelement <8 x i32> %1012, i32 5
  %1031 = insertelement <8 x i32> %1029, i32 %1030, i32 4
  %1032 = insertelement <8 x i32> %1031, i32 %1019, i32 5
  %1033 = insertelement <8 x i32> %1032, i32 %1030, i32 6
  %1034 = insertelement <8 x i32> %1033, i32 %1030, i32 7
  %1035 = add nsw <8 x i32> %1024, %1034
  %1036 = sub nsw <8 x i32> %1024, %1034
  %1037 = select <8 x i1> <i1 true, i1 false, i1 true, i1 false, i1 true, i1 false, i1 true, i1 false>, <8 x i32> %1035, <8 x i32> %1036
  %1038 = extractelement <8 x i32> %1012, i32 2
  %1039 = insertelement <8 x i32> undef, i32 %1038, i32 0
  %1040 = insertelement <8 x i32> %1039, i32 %1038, i32 1
  %1041 = insertelement <8 x i32> %1040, i32 %1013, i32 2
  %1042 = insertelement <8 x i32> %1041, i32 %1038, i32 3
  %1043 = extractelement <8 x i32> %1012, i32 6
  %1044 = insertelement <8 x i32> %1042, i32 %1043, i32 4
  %1045 = insertelement <8 x i32> %1044, i32 %1043, i32 5
  %1046 = insertelement <8 x i32> %1045, i32 %1019, i32 6
  %1047 = insertelement <8 x i32> %1046, i32 %1043, i32 7
  %1048 = add nsw <8 x i32> %1037, %1047
  %1049 = sub nsw <8 x i32> %1037, %1047
  %1050 = select <8 x i1> <i1 true, i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false>, <8 x i32> %1048, <8 x i32> %1049
  %1051 = sub <8 x i32> %1050, %1012
  %1052 = add <8 x i32> %1050, %1012
  %1053 = select <8 x i1> <i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false, i1 true>, <8 x i32> %1052, <8 x i32> %1051
  %1054 = bitcast i32* %arrayIdx2998 to <8 x i32>*
  store <8 x i32> %1053, <8 x i32>* %1054, align 4
  %1055 = mul nsw i64 %idx.ext.i, 11
  %arrayIdx3173 = getelementptr inbounds i8, i8* %pix1, i64 %1055
  %1056 = mul nsw i64 %idx.ext63.i, 11
  %arrayIdx3175 = getelementptr inbounds i8, i8* %pix2, i64 %1056
  %1057 = add nsw i64 %1055, 4
  %arrayIdx3177 = getelementptr inbounds i8, i8* %pix1, i64 %1057
  %1058 = add nsw i64 %1056, 4
  %arrayIdx3179 = getelementptr inbounds i8, i8* %pix2, i64 %1058
  %1059 = add nsw i64 %1055, 1
  %arrayIdx3181 = getelementptr inbounds i8, i8* %pix1, i64 %1059
  %1060 = add nsw i64 %1056, 1
  %arrayIdx3183 = getelementptr inbounds i8, i8* %pix2, i64 %1060
  %1061 = add nsw i64 %1055, 5
  %arrayIdx3185 = getelementptr inbounds i8, i8* %pix1, i64 %1061
  %1062 = add nsw i64 %1056, 5
  %arrayIdx3187 = getelementptr inbounds i8, i8* %pix2, i64 %1062
  %1063 = add nsw i64 %1055, 2
  %arrayIdx3189 = getelementptr inbounds i8, i8* %pix1, i64 %1063
  %1064 = add nsw i64 %1056, 2
  %arrayIdx3191 = getelementptr inbounds i8, i8* %pix2, i64 %1064
  %1065 = add nsw i64 %1055, 6
  %arrayIdx3193 = getelementptr inbounds i8, i8* %pix1, i64 %1065
  %1066 = add nsw i64 %1056, 6
  %arrayIdx3195 = getelementptr inbounds i8, i8* %pix2, i64 %1066
  %1067 = add nsw i64 %1055, 3
  %arrayIdx3197 = getelementptr inbounds i8, i8* %pix1, i64 %1067
  %1068 = add nsw i64 %1056, 3
  %arrayIdx3199 = getelementptr inbounds i8, i8* %pix2, i64 %1068
  %1069 = add nsw i64 %1055, 7
  %arrayIdx3201 = getelementptr inbounds i8, i8* %pix1, i64 %1069
  %1070 = add nsw i64 %1056, 7
  %arrayIdx3203 = getelementptr inbounds i8, i8* %pix2, i64 %1070
  %arrayIdx3206 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 11, i64 0
  %arrayIdx3224 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 11, i64 2
  %arrayIdx3242 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 11, i64 1
  %arrayIdx3260 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 11, i64 3
  %1071 = add nsw i64 %1055, 8
  %arrayIdx3277 = getelementptr inbounds i8, i8* %pix1, i64 %1071
  %1072 = add nsw i64 %1056, 8
  %arrayIdx3279 = getelementptr inbounds i8, i8* %pix2, i64 %1072
  %1073 = add nsw i64 %1055, 12
  %arrayIdx3281 = getelementptr inbounds i8, i8* %pix1, i64 %1073
  %1074 = add nsw i64 %1056, 12
  %arrayIdx3283 = getelementptr inbounds i8, i8* %pix2, i64 %1074
  %1075 = add nsw i64 %1055, 9
  %arrayIdx3285 = getelementptr inbounds i8, i8* %pix1, i64 %1075
  %1076 = add nsw i64 %1056, 9
  %arrayIdx3287 = getelementptr inbounds i8, i8* %pix2, i64 %1076
  %1077 = add nsw i64 %1055, 13
  %arrayIdx3289 = getelementptr inbounds i8, i8* %pix1, i64 %1077
  %1078 = add nsw i64 %1056, 13
  %arrayIdx3291 = getelementptr inbounds i8, i8* %pix2, i64 %1078
  %1079 = add nsw i64 %1055, 10
  %arrayIdx3293 = getelementptr inbounds i8, i8* %pix1, i64 %1079
  %1080 = add nsw i64 %1056, 10
  %arrayIdx3295 = getelementptr inbounds i8, i8* %pix2, i64 %1080
  %1081 = add nsw i64 %1055, 14
  %arrayIdx3297 = getelementptr inbounds i8, i8* %pix1, i64 %1081
  %1082 = add nsw i64 %1056, 14
  %arrayIdx3299 = getelementptr inbounds i8, i8* %pix2, i64 %1082
  %1083 = add nsw i64 %1055, 11
  %arrayIdx3301 = getelementptr inbounds i8, i8* %pix1, i64 %1083
  %1084 = bitcast i8* %arrayIdx3173 to <4 x i8>*
  %1085 = load <4 x i8>, <4 x i8>* %1084, align 1, !tbaa !12
  %1086 = bitcast i8* %arrayIdx3277 to <4 x i8>*
  %1087 = load <4 x i8>, <4 x i8>* %1086, align 1, !tbaa !12
  %SplitLoadShuffle7423 = shufflevector <4 x i8> %1085, <4 x i8> %1087, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %1088 = add nsw i64 %1056, 11
  %arrayIdx3303 = getelementptr inbounds i8, i8* %pix2, i64 %1088
  %1089 = bitcast i8* %arrayIdx3175 to <4 x i8>*
  %1090 = load <4 x i8>, <4 x i8>* %1089, align 1, !tbaa !12
  %1091 = bitcast i8* %arrayIdx3279 to <4 x i8>*
  %1092 = load <4 x i8>, <4 x i8>* %1091, align 1, !tbaa !12
  %SplitLoadShuffle7421 = shufflevector <4 x i8> %1090, <4 x i8> %1092, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %1093 = add nsw i64 %1055, 15
  %arrayIdx3305 = getelementptr inbounds i8, i8* %pix1, i64 %1093
  %1094 = bitcast i8* %arrayIdx3177 to <4 x i8>*
  %1095 = load <4 x i8>, <4 x i8>* %1094, align 1, !tbaa !12
  %1096 = bitcast i8* %arrayIdx3281 to <4 x i8>*
  %1097 = load <4 x i8>, <4 x i8>* %1096, align 1, !tbaa !12
  %SplitLoadShuffle7420 = shufflevector <4 x i8> %1095, <4 x i8> %1097, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %1098 = add nsw i64 %1056, 15
  %arrayIdx3307 = getelementptr inbounds i8, i8* %pix2, i64 %1098
  %1099 = bitcast i8* %arrayIdx3179 to <4 x i8>*
  %1100 = load <4 x i8>, <4 x i8>* %1099, align 1, !tbaa !12
  %1101 = bitcast i8* %arrayIdx3283 to <4 x i8>*
  %1102 = load <4 x i8>, <4 x i8>* %1101, align 1, !tbaa !12
  %SplitLoadShuffle7422 = shufflevector <4 x i8> %1100, <4 x i8> %1102, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %arrayIdx3310 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 11, i64 4
  %1103 = zext <8 x i8> %SplitLoadShuffle7423 to <8 x i32>
  %1104 = zext <8 x i8> %SplitLoadShuffle7420 to <8 x i32>
  %1105 = zext <8 x i8> %SplitLoadShuffle7422 to <8 x i32>
  %1106 = zext <8 x i8> %SplitLoadShuffle7421 to <8 x i32>
  %1107 = shl nuw nsw <8 x i32> %1104, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %1108 = shl nuw nsw <8 x i32> %1105, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %1109 = sub nsw <8 x i32> %1107, %1106
  %1110 = sub nsw <8 x i32> %1109, %1108
  %1111 = add nsw <8 x i32> %1110, %1103
  %arrayIdx3328 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 11, i64 6
  %arrayIdx3346 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 11, i64 5
  %arrayIdx3364 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 11, i64 7
  %1112 = extractelement <8 x i32> %1111, i32 3
  %1113 = insertelement <8 x i32> undef, i32 %1112, i32 0
  %1114 = extractelement <8 x i32> %1111, i32 0
  %1115 = insertelement <8 x i32> %1113, i32 %1114, i32 1
  %1116 = insertelement <8 x i32> %1115, i32 %1114, i32 2
  %1117 = insertelement <8 x i32> %1116, i32 %1114, i32 3
  %1118 = extractelement <8 x i32> %1111, i32 7
  %1119 = insertelement <8 x i32> %1117, i32 %1118, i32 4
  %1120 = extractelement <8 x i32> %1111, i32 4
  %1121 = insertelement <8 x i32> %1119, i32 %1120, i32 5
  %1122 = insertelement <8 x i32> %1121, i32 %1120, i32 6
  %1123 = insertelement <8 x i32> %1122, i32 %1120, i32 7
  %1124 = extractelement <8 x i32> %1111, i32 1
  %1125 = insertelement <8 x i32> undef, i32 %1124, i32 0
  %1126 = insertelement <8 x i32> %1125, i32 %1112, i32 1
  %1127 = insertelement <8 x i32> %1126, i32 %1124, i32 2
  %1128 = insertelement <8 x i32> %1127, i32 %1124, i32 3
  %1129 = extractelement <8 x i32> %1111, i32 5
  %1130 = insertelement <8 x i32> %1128, i32 %1129, i32 4
  %1131 = insertelement <8 x i32> %1130, i32 %1118, i32 5
  %1132 = insertelement <8 x i32> %1131, i32 %1129, i32 6
  %1133 = insertelement <8 x i32> %1132, i32 %1129, i32 7
  %1134 = add nsw <8 x i32> %1123, %1133
  %1135 = sub nsw <8 x i32> %1123, %1133
  %1136 = select <8 x i1> <i1 true, i1 false, i1 true, i1 false, i1 true, i1 false, i1 true, i1 false>, <8 x i32> %1134, <8 x i32> %1135
  %1137 = extractelement <8 x i32> %1111, i32 2
  %1138 = insertelement <8 x i32> undef, i32 %1137, i32 0
  %1139 = insertelement <8 x i32> %1138, i32 %1137, i32 1
  %1140 = insertelement <8 x i32> %1139, i32 %1112, i32 2
  %1141 = insertelement <8 x i32> %1140, i32 %1137, i32 3
  %1142 = extractelement <8 x i32> %1111, i32 6
  %1143 = insertelement <8 x i32> %1141, i32 %1142, i32 4
  %1144 = insertelement <8 x i32> %1143, i32 %1142, i32 5
  %1145 = insertelement <8 x i32> %1144, i32 %1118, i32 6
  %1146 = insertelement <8 x i32> %1145, i32 %1142, i32 7
  %1147 = add nsw <8 x i32> %1136, %1146
  %1148 = sub nsw <8 x i32> %1136, %1146
  %1149 = select <8 x i1> <i1 true, i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false>, <8 x i32> %1147, <8 x i32> %1148
  %1150 = sub <8 x i32> %1149, %1111
  %1151 = add <8 x i32> %1149, %1111
  %1152 = select <8 x i1> <i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false, i1 true>, <8 x i32> %1151, <8 x i32> %1150
  %1153 = bitcast i32* %arrayIdx3206 to <8 x i32>*
  store <8 x i32> %1152, <8 x i32>* %1153, align 4
  %1154 = mul nsw i64 %idx.ext.i, 12
  %arrayIdx3381 = getelementptr inbounds i8, i8* %pix1, i64 %1154
  %1155 = mul nsw i64 %idx.ext63.i, 12
  %arrayIdx3383 = getelementptr inbounds i8, i8* %pix2, i64 %1155
  %1156 = add nsw i64 %1154, 4
  %arrayIdx3385 = getelementptr inbounds i8, i8* %pix1, i64 %1156
  %1157 = add nsw i64 %1155, 4
  %arrayIdx3387 = getelementptr inbounds i8, i8* %pix2, i64 %1157
  %1158 = or i64 %1154, 1
  %arrayIdx3389 = getelementptr inbounds i8, i8* %pix1, i64 %1158
  %1159 = or i64 %1155, 1
  %arrayIdx3391 = getelementptr inbounds i8, i8* %pix2, i64 %1159
  %1160 = add nsw i64 %1154, 5
  %arrayIdx3393 = getelementptr inbounds i8, i8* %pix1, i64 %1160
  %1161 = add nsw i64 %1155, 5
  %arrayIdx3395 = getelementptr inbounds i8, i8* %pix2, i64 %1161
  %1162 = or i64 %1154, 2
  %arrayIdx3397 = getelementptr inbounds i8, i8* %pix1, i64 %1162
  %1163 = or i64 %1155, 2
  %arrayIdx3399 = getelementptr inbounds i8, i8* %pix2, i64 %1163
  %1164 = add nsw i64 %1154, 6
  %arrayIdx3401 = getelementptr inbounds i8, i8* %pix1, i64 %1164
  %1165 = add nsw i64 %1155, 6
  %arrayIdx3403 = getelementptr inbounds i8, i8* %pix2, i64 %1165
  %1166 = or i64 %1154, 3
  %arrayIdx3405 = getelementptr inbounds i8, i8* %pix1, i64 %1166
  %1167 = or i64 %1155, 3
  %arrayIdx3407 = getelementptr inbounds i8, i8* %pix2, i64 %1167
  %1168 = add nsw i64 %1154, 7
  %arrayIdx3409 = getelementptr inbounds i8, i8* %pix1, i64 %1168
  %1169 = add nsw i64 %1155, 7
  %arrayIdx3411 = getelementptr inbounds i8, i8* %pix2, i64 %1169
  %arrayIdx3414 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 12, i64 0
  %arrayIdx3432 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 12, i64 2
  %arrayIdx3450 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 12, i64 1
  %arrayIdx3468 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 12, i64 3
  %1170 = add nsw i64 %1154, 8
  %arrayIdx3485 = getelementptr inbounds i8, i8* %pix1, i64 %1170
  %1171 = add nsw i64 %1155, 8
  %arrayIdx3487 = getelementptr inbounds i8, i8* %pix2, i64 %1171
  %1172 = add nsw i64 %1154, 12
  %arrayIdx3489 = getelementptr inbounds i8, i8* %pix1, i64 %1172
  %1173 = add nsw i64 %1155, 12
  %arrayIdx3491 = getelementptr inbounds i8, i8* %pix2, i64 %1173
  %1174 = add nsw i64 %1154, 9
  %arrayIdx3493 = getelementptr inbounds i8, i8* %pix1, i64 %1174
  %1175 = add nsw i64 %1155, 9
  %arrayIdx3495 = getelementptr inbounds i8, i8* %pix2, i64 %1175
  %1176 = add nsw i64 %1154, 13
  %arrayIdx3497 = getelementptr inbounds i8, i8* %pix1, i64 %1176
  %1177 = add nsw i64 %1155, 13
  %arrayIdx3499 = getelementptr inbounds i8, i8* %pix2, i64 %1177
  %1178 = add nsw i64 %1154, 10
  %arrayIdx3501 = getelementptr inbounds i8, i8* %pix1, i64 %1178
  %1179 = add nsw i64 %1155, 10
  %arrayIdx3503 = getelementptr inbounds i8, i8* %pix2, i64 %1179
  %1180 = add nsw i64 %1154, 14
  %arrayIdx3505 = getelementptr inbounds i8, i8* %pix1, i64 %1180
  %1181 = add nsw i64 %1155, 14
  %arrayIdx3507 = getelementptr inbounds i8, i8* %pix2, i64 %1181
  %1182 = add nsw i64 %1154, 11
  %arrayIdx3509 = getelementptr inbounds i8, i8* %pix1, i64 %1182
  %1183 = bitcast i8* %arrayIdx3381 to <4 x i8>*
  %1184 = load <4 x i8>, <4 x i8>* %1183, align 1, !tbaa !12
  %1185 = bitcast i8* %arrayIdx3485 to <4 x i8>*
  %1186 = load <4 x i8>, <4 x i8>* %1185, align 1, !tbaa !12
  %SplitLoadShuffle7472 = shufflevector <4 x i8> %1184, <4 x i8> %1186, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %1187 = add nsw i64 %1155, 11
  %arrayIdx3511 = getelementptr inbounds i8, i8* %pix2, i64 %1187
  %1188 = bitcast i8* %arrayIdx3383 to <4 x i8>*
  %1189 = load <4 x i8>, <4 x i8>* %1188, align 1, !tbaa !12
  %1190 = bitcast i8* %arrayIdx3487 to <4 x i8>*
  %1191 = load <4 x i8>, <4 x i8>* %1190, align 1, !tbaa !12
  %SplitLoadShuffle7470 = shufflevector <4 x i8> %1189, <4 x i8> %1191, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %1192 = add nsw i64 %1154, 15
  %arrayIdx3513 = getelementptr inbounds i8, i8* %pix1, i64 %1192
  %1193 = bitcast i8* %arrayIdx3385 to <4 x i8>*
  %1194 = load <4 x i8>, <4 x i8>* %1193, align 1, !tbaa !12
  %1195 = bitcast i8* %arrayIdx3489 to <4 x i8>*
  %1196 = load <4 x i8>, <4 x i8>* %1195, align 1, !tbaa !12
  %SplitLoadShuffle7469 = shufflevector <4 x i8> %1194, <4 x i8> %1196, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %1197 = add nsw i64 %1155, 15
  %arrayIdx3515 = getelementptr inbounds i8, i8* %pix2, i64 %1197
  %1198 = bitcast i8* %arrayIdx3387 to <4 x i8>*
  %1199 = load <4 x i8>, <4 x i8>* %1198, align 1, !tbaa !12
  %1200 = bitcast i8* %arrayIdx3491 to <4 x i8>*
  %1201 = load <4 x i8>, <4 x i8>* %1200, align 1, !tbaa !12
  %SplitLoadShuffle7471 = shufflevector <4 x i8> %1199, <4 x i8> %1201, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %arrayIdx3518 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 12, i64 4
  %1202 = zext <8 x i8> %SplitLoadShuffle7472 to <8 x i32>
  %1203 = zext <8 x i8> %SplitLoadShuffle7469 to <8 x i32>
  %1204 = zext <8 x i8> %SplitLoadShuffle7471 to <8 x i32>
  %1205 = zext <8 x i8> %SplitLoadShuffle7470 to <8 x i32>
  %1206 = shl nuw nsw <8 x i32> %1203, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %1207 = shl nuw nsw <8 x i32> %1204, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %1208 = sub nsw <8 x i32> %1206, %1205
  %1209 = sub nsw <8 x i32> %1208, %1207
  %1210 = add nsw <8 x i32> %1209, %1202
  %arrayIdx3536 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 12, i64 6
  %arrayIdx3554 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 12, i64 5
  %arrayIdx3572 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 12, i64 7
  %1211 = extractelement <8 x i32> %1210, i32 3
  %1212 = insertelement <8 x i32> undef, i32 %1211, i32 0
  %1213 = extractelement <8 x i32> %1210, i32 0
  %1214 = insertelement <8 x i32> %1212, i32 %1213, i32 1
  %1215 = insertelement <8 x i32> %1214, i32 %1213, i32 2
  %1216 = insertelement <8 x i32> %1215, i32 %1213, i32 3
  %1217 = extractelement <8 x i32> %1210, i32 7
  %1218 = insertelement <8 x i32> %1216, i32 %1217, i32 4
  %1219 = extractelement <8 x i32> %1210, i32 4
  %1220 = insertelement <8 x i32> %1218, i32 %1219, i32 5
  %1221 = insertelement <8 x i32> %1220, i32 %1219, i32 6
  %1222 = insertelement <8 x i32> %1221, i32 %1219, i32 7
  %1223 = extractelement <8 x i32> %1210, i32 1
  %1224 = insertelement <8 x i32> undef, i32 %1223, i32 0
  %1225 = insertelement <8 x i32> %1224, i32 %1211, i32 1
  %1226 = insertelement <8 x i32> %1225, i32 %1223, i32 2
  %1227 = insertelement <8 x i32> %1226, i32 %1223, i32 3
  %1228 = extractelement <8 x i32> %1210, i32 5
  %1229 = insertelement <8 x i32> %1227, i32 %1228, i32 4
  %1230 = insertelement <8 x i32> %1229, i32 %1217, i32 5
  %1231 = insertelement <8 x i32> %1230, i32 %1228, i32 6
  %1232 = insertelement <8 x i32> %1231, i32 %1228, i32 7
  %1233 = add nsw <8 x i32> %1222, %1232
  %1234 = sub nsw <8 x i32> %1222, %1232
  %1235 = select <8 x i1> <i1 true, i1 false, i1 true, i1 false, i1 true, i1 false, i1 true, i1 false>, <8 x i32> %1233, <8 x i32> %1234
  %1236 = extractelement <8 x i32> %1210, i32 2
  %1237 = insertelement <8 x i32> undef, i32 %1236, i32 0
  %1238 = insertelement <8 x i32> %1237, i32 %1236, i32 1
  %1239 = insertelement <8 x i32> %1238, i32 %1211, i32 2
  %1240 = insertelement <8 x i32> %1239, i32 %1236, i32 3
  %1241 = extractelement <8 x i32> %1210, i32 6
  %1242 = insertelement <8 x i32> %1240, i32 %1241, i32 4
  %1243 = insertelement <8 x i32> %1242, i32 %1241, i32 5
  %1244 = insertelement <8 x i32> %1243, i32 %1217, i32 6
  %1245 = insertelement <8 x i32> %1244, i32 %1241, i32 7
  %1246 = add nsw <8 x i32> %1235, %1245
  %1247 = sub nsw <8 x i32> %1235, %1245
  %1248 = select <8 x i1> <i1 true, i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false>, <8 x i32> %1246, <8 x i32> %1247
  %1249 = sub <8 x i32> %1248, %1210
  %1250 = add <8 x i32> %1248, %1210
  %1251 = select <8 x i1> <i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false, i1 true>, <8 x i32> %1250, <8 x i32> %1249
  %1252 = bitcast i32* %arrayIdx3414 to <8 x i32>*
  store <8 x i32> %1251, <8 x i32>* %1252, align 4
  %1253 = mul nsw i64 %idx.ext.i, 13
  %arrayIdx3589 = getelementptr inbounds i8, i8* %pix1, i64 %1253
  %1254 = mul nsw i64 %idx.ext63.i, 13
  %arrayIdx3591 = getelementptr inbounds i8, i8* %pix2, i64 %1254
  %1255 = add nsw i64 %1253, 4
  %arrayIdx3593 = getelementptr inbounds i8, i8* %pix1, i64 %1255
  %1256 = add nsw i64 %1254, 4
  %arrayIdx3595 = getelementptr inbounds i8, i8* %pix2, i64 %1256
  %1257 = add nsw i64 %1253, 1
  %arrayIdx3597 = getelementptr inbounds i8, i8* %pix1, i64 %1257
  %1258 = add nsw i64 %1254, 1
  %arrayIdx3599 = getelementptr inbounds i8, i8* %pix2, i64 %1258
  %1259 = add nsw i64 %1253, 5
  %arrayIdx3601 = getelementptr inbounds i8, i8* %pix1, i64 %1259
  %1260 = add nsw i64 %1254, 5
  %arrayIdx3603 = getelementptr inbounds i8, i8* %pix2, i64 %1260
  %1261 = add nsw i64 %1253, 2
  %arrayIdx3605 = getelementptr inbounds i8, i8* %pix1, i64 %1261
  %1262 = add nsw i64 %1254, 2
  %arrayIdx3607 = getelementptr inbounds i8, i8* %pix2, i64 %1262
  %1263 = add nsw i64 %1253, 6
  %arrayIdx3609 = getelementptr inbounds i8, i8* %pix1, i64 %1263
  %1264 = add nsw i64 %1254, 6
  %arrayIdx3611 = getelementptr inbounds i8, i8* %pix2, i64 %1264
  %1265 = add nsw i64 %1253, 3
  %arrayIdx3613 = getelementptr inbounds i8, i8* %pix1, i64 %1265
  %1266 = add nsw i64 %1254, 3
  %arrayIdx3615 = getelementptr inbounds i8, i8* %pix2, i64 %1266
  %1267 = add nsw i64 %1253, 7
  %arrayIdx3617 = getelementptr inbounds i8, i8* %pix1, i64 %1267
  %1268 = add nsw i64 %1254, 7
  %arrayIdx3619 = getelementptr inbounds i8, i8* %pix2, i64 %1268
  %arrayIdx3622 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 13, i64 0
  %arrayIdx3640 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 13, i64 2
  %arrayIdx3658 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 13, i64 1
  %arrayIdx3676 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 13, i64 3
  %1269 = add nsw i64 %1253, 8
  %arrayIdx3693 = getelementptr inbounds i8, i8* %pix1, i64 %1269
  %1270 = add nsw i64 %1254, 8
  %arrayIdx3695 = getelementptr inbounds i8, i8* %pix2, i64 %1270
  %1271 = add nsw i64 %1253, 12
  %arrayIdx3697 = getelementptr inbounds i8, i8* %pix1, i64 %1271
  %1272 = add nsw i64 %1254, 12
  %arrayIdx3699 = getelementptr inbounds i8, i8* %pix2, i64 %1272
  %1273 = add nsw i64 %1253, 9
  %arrayIdx3701 = getelementptr inbounds i8, i8* %pix1, i64 %1273
  %1274 = add nsw i64 %1254, 9
  %arrayIdx3703 = getelementptr inbounds i8, i8* %pix2, i64 %1274
  %1275 = add nsw i64 %1253, 13
  %arrayIdx3705 = getelementptr inbounds i8, i8* %pix1, i64 %1275
  %1276 = add nsw i64 %1254, 13
  %arrayIdx3707 = getelementptr inbounds i8, i8* %pix2, i64 %1276
  %1277 = add nsw i64 %1253, 10
  %arrayIdx3709 = getelementptr inbounds i8, i8* %pix1, i64 %1277
  %1278 = add nsw i64 %1254, 10
  %arrayIdx3711 = getelementptr inbounds i8, i8* %pix2, i64 %1278
  %1279 = add nsw i64 %1253, 14
  %arrayIdx3713 = getelementptr inbounds i8, i8* %pix1, i64 %1279
  %1280 = add nsw i64 %1254, 14
  %arrayIdx3715 = getelementptr inbounds i8, i8* %pix2, i64 %1280
  %1281 = add nsw i64 %1253, 11
  %arrayIdx3717 = getelementptr inbounds i8, i8* %pix1, i64 %1281
  %1282 = bitcast i8* %arrayIdx3589 to <4 x i8>*
  %1283 = load <4 x i8>, <4 x i8>* %1282, align 1, !tbaa !12
  %1284 = bitcast i8* %arrayIdx3693 to <4 x i8>*
  %1285 = load <4 x i8>, <4 x i8>* %1284, align 1, !tbaa !12
  %SplitLoadShuffle7521 = shufflevector <4 x i8> %1283, <4 x i8> %1285, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %1286 = add nsw i64 %1254, 11
  %arrayIdx3719 = getelementptr inbounds i8, i8* %pix2, i64 %1286
  %1287 = bitcast i8* %arrayIdx3591 to <4 x i8>*
  %1288 = load <4 x i8>, <4 x i8>* %1287, align 1, !tbaa !12
  %1289 = bitcast i8* %arrayIdx3695 to <4 x i8>*
  %1290 = load <4 x i8>, <4 x i8>* %1289, align 1, !tbaa !12
  %SplitLoadShuffle7519 = shufflevector <4 x i8> %1288, <4 x i8> %1290, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %1291 = add nsw i64 %1253, 15
  %arrayIdx3721 = getelementptr inbounds i8, i8* %pix1, i64 %1291
  %1292 = bitcast i8* %arrayIdx3593 to <4 x i8>*
  %1293 = load <4 x i8>, <4 x i8>* %1292, align 1, !tbaa !12
  %1294 = bitcast i8* %arrayIdx3697 to <4 x i8>*
  %1295 = load <4 x i8>, <4 x i8>* %1294, align 1, !tbaa !12
  %SplitLoadShuffle7518 = shufflevector <4 x i8> %1293, <4 x i8> %1295, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %1296 = add nsw i64 %1254, 15
  %arrayIdx3723 = getelementptr inbounds i8, i8* %pix2, i64 %1296
  %1297 = bitcast i8* %arrayIdx3595 to <4 x i8>*
  %1298 = load <4 x i8>, <4 x i8>* %1297, align 1, !tbaa !12
  %1299 = bitcast i8* %arrayIdx3699 to <4 x i8>*
  %1300 = load <4 x i8>, <4 x i8>* %1299, align 1, !tbaa !12
  %SplitLoadShuffle7520 = shufflevector <4 x i8> %1298, <4 x i8> %1300, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %arrayIdx3726 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 13, i64 4
  %1301 = zext <8 x i8> %SplitLoadShuffle7521 to <8 x i32>
  %1302 = zext <8 x i8> %SplitLoadShuffle7518 to <8 x i32>
  %1303 = zext <8 x i8> %SplitLoadShuffle7520 to <8 x i32>
  %1304 = zext <8 x i8> %SplitLoadShuffle7519 to <8 x i32>
  %1305 = shl nuw nsw <8 x i32> %1302, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %1306 = shl nuw nsw <8 x i32> %1303, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %1307 = sub nsw <8 x i32> %1305, %1304
  %1308 = sub nsw <8 x i32> %1307, %1306
  %1309 = add nsw <8 x i32> %1308, %1301
  %arrayIdx3744 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 13, i64 6
  %arrayIdx3762 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 13, i64 5
  %arrayIdx3780 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 13, i64 7
  %1310 = extractelement <8 x i32> %1309, i32 3
  %1311 = insertelement <8 x i32> undef, i32 %1310, i32 0
  %1312 = extractelement <8 x i32> %1309, i32 0
  %1313 = insertelement <8 x i32> %1311, i32 %1312, i32 1
  %1314 = insertelement <8 x i32> %1313, i32 %1312, i32 2
  %1315 = insertelement <8 x i32> %1314, i32 %1312, i32 3
  %1316 = extractelement <8 x i32> %1309, i32 7
  %1317 = insertelement <8 x i32> %1315, i32 %1316, i32 4
  %1318 = extractelement <8 x i32> %1309, i32 4
  %1319 = insertelement <8 x i32> %1317, i32 %1318, i32 5
  %1320 = insertelement <8 x i32> %1319, i32 %1318, i32 6
  %1321 = insertelement <8 x i32> %1320, i32 %1318, i32 7
  %1322 = extractelement <8 x i32> %1309, i32 1
  %1323 = insertelement <8 x i32> undef, i32 %1322, i32 0
  %1324 = insertelement <8 x i32> %1323, i32 %1310, i32 1
  %1325 = insertelement <8 x i32> %1324, i32 %1322, i32 2
  %1326 = insertelement <8 x i32> %1325, i32 %1322, i32 3
  %1327 = extractelement <8 x i32> %1309, i32 5
  %1328 = insertelement <8 x i32> %1326, i32 %1327, i32 4
  %1329 = insertelement <8 x i32> %1328, i32 %1316, i32 5
  %1330 = insertelement <8 x i32> %1329, i32 %1327, i32 6
  %1331 = insertelement <8 x i32> %1330, i32 %1327, i32 7
  %1332 = add nsw <8 x i32> %1321, %1331
  %1333 = sub nsw <8 x i32> %1321, %1331
  %1334 = select <8 x i1> <i1 true, i1 false, i1 true, i1 false, i1 true, i1 false, i1 true, i1 false>, <8 x i32> %1332, <8 x i32> %1333
  %1335 = extractelement <8 x i32> %1309, i32 2
  %1336 = insertelement <8 x i32> undef, i32 %1335, i32 0
  %1337 = insertelement <8 x i32> %1336, i32 %1335, i32 1
  %1338 = insertelement <8 x i32> %1337, i32 %1310, i32 2
  %1339 = insertelement <8 x i32> %1338, i32 %1335, i32 3
  %1340 = extractelement <8 x i32> %1309, i32 6
  %1341 = insertelement <8 x i32> %1339, i32 %1340, i32 4
  %1342 = insertelement <8 x i32> %1341, i32 %1340, i32 5
  %1343 = insertelement <8 x i32> %1342, i32 %1316, i32 6
  %1344 = insertelement <8 x i32> %1343, i32 %1340, i32 7
  %1345 = add nsw <8 x i32> %1334, %1344
  %1346 = sub nsw <8 x i32> %1334, %1344
  %1347 = select <8 x i1> <i1 true, i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false>, <8 x i32> %1345, <8 x i32> %1346
  %1348 = sub <8 x i32> %1347, %1309
  %1349 = add <8 x i32> %1347, %1309
  %1350 = select <8 x i1> <i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false, i1 true>, <8 x i32> %1349, <8 x i32> %1348
  %1351 = bitcast i32* %arrayIdx3622 to <8 x i32>*
  store <8 x i32> %1350, <8 x i32>* %1351, align 4
  %1352 = mul nsw i64 %idx.ext.i, 14
  %arrayIdx3797 = getelementptr inbounds i8, i8* %pix1, i64 %1352
  %1353 = mul nsw i64 %idx.ext63.i, 14
  %arrayIdx3799 = getelementptr inbounds i8, i8* %pix2, i64 %1353
  %1354 = add nsw i64 %1352, 4
  %arrayIdx3801 = getelementptr inbounds i8, i8* %pix1, i64 %1354
  %1355 = add nsw i64 %1353, 4
  %arrayIdx3803 = getelementptr inbounds i8, i8* %pix2, i64 %1355
  %1356 = or i64 %1352, 1
  %arrayIdx3805 = getelementptr inbounds i8, i8* %pix1, i64 %1356
  %1357 = or i64 %1353, 1
  %arrayIdx3807 = getelementptr inbounds i8, i8* %pix2, i64 %1357
  %1358 = add nsw i64 %1352, 5
  %arrayIdx3809 = getelementptr inbounds i8, i8* %pix1, i64 %1358
  %1359 = add nsw i64 %1353, 5
  %arrayIdx3811 = getelementptr inbounds i8, i8* %pix2, i64 %1359
  %1360 = add nsw i64 %1352, 2
  %arrayIdx3813 = getelementptr inbounds i8, i8* %pix1, i64 %1360
  %1361 = add nsw i64 %1353, 2
  %arrayIdx3815 = getelementptr inbounds i8, i8* %pix2, i64 %1361
  %1362 = add nsw i64 %1352, 6
  %arrayIdx3817 = getelementptr inbounds i8, i8* %pix1, i64 %1362
  %1363 = add nsw i64 %1353, 6
  %arrayIdx3819 = getelementptr inbounds i8, i8* %pix2, i64 %1363
  %1364 = add nsw i64 %1352, 3
  %arrayIdx3821 = getelementptr inbounds i8, i8* %pix1, i64 %1364
  %1365 = add nsw i64 %1353, 3
  %arrayIdx3823 = getelementptr inbounds i8, i8* %pix2, i64 %1365
  %1366 = add nsw i64 %1352, 7
  %arrayIdx3825 = getelementptr inbounds i8, i8* %pix1, i64 %1366
  %1367 = add nsw i64 %1353, 7
  %arrayIdx3827 = getelementptr inbounds i8, i8* %pix2, i64 %1367
  %arrayIdx3830 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 14, i64 0
  %arrayIdx3848 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 14, i64 2
  %arrayIdx3866 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 14, i64 1
  %arrayIdx3884 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 14, i64 3
  %1368 = add nsw i64 %1352, 8
  %arrayIdx3901 = getelementptr inbounds i8, i8* %pix1, i64 %1368
  %1369 = add nsw i64 %1353, 8
  %arrayIdx3903 = getelementptr inbounds i8, i8* %pix2, i64 %1369
  %1370 = add nsw i64 %1352, 12
  %arrayIdx3905 = getelementptr inbounds i8, i8* %pix1, i64 %1370
  %1371 = add nsw i64 %1353, 12
  %arrayIdx3907 = getelementptr inbounds i8, i8* %pix2, i64 %1371
  %1372 = add nsw i64 %1352, 9
  %arrayIdx3909 = getelementptr inbounds i8, i8* %pix1, i64 %1372
  %1373 = add nsw i64 %1353, 9
  %arrayIdx3911 = getelementptr inbounds i8, i8* %pix2, i64 %1373
  %1374 = add nsw i64 %1352, 13
  %arrayIdx3913 = getelementptr inbounds i8, i8* %pix1, i64 %1374
  %1375 = add nsw i64 %1353, 13
  %arrayIdx3915 = getelementptr inbounds i8, i8* %pix2, i64 %1375
  %1376 = add nsw i64 %1352, 10
  %arrayIdx3917 = getelementptr inbounds i8, i8* %pix1, i64 %1376
  %1377 = add nsw i64 %1353, 10
  %arrayIdx3919 = getelementptr inbounds i8, i8* %pix2, i64 %1377
  %1378 = add nsw i64 %1352, 14
  %arrayIdx3921 = getelementptr inbounds i8, i8* %pix1, i64 %1378
  %1379 = add nsw i64 %1353, 14
  %arrayIdx3923 = getelementptr inbounds i8, i8* %pix2, i64 %1379
  %1380 = add nsw i64 %1352, 11
  %arrayIdx3925 = getelementptr inbounds i8, i8* %pix1, i64 %1380
  %1381 = bitcast i8* %arrayIdx3797 to <4 x i8>*
  %1382 = load <4 x i8>, <4 x i8>* %1381, align 1, !tbaa !12
  %1383 = bitcast i8* %arrayIdx3901 to <4 x i8>*
  %1384 = load <4 x i8>, <4 x i8>* %1383, align 1, !tbaa !12
  %SplitLoadShuffle7570 = shufflevector <4 x i8> %1382, <4 x i8> %1384, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %1385 = add nsw i64 %1353, 11
  %arrayIdx3927 = getelementptr inbounds i8, i8* %pix2, i64 %1385
  %1386 = bitcast i8* %arrayIdx3799 to <4 x i8>*
  %1387 = load <4 x i8>, <4 x i8>* %1386, align 1, !tbaa !12
  %1388 = bitcast i8* %arrayIdx3903 to <4 x i8>*
  %1389 = load <4 x i8>, <4 x i8>* %1388, align 1, !tbaa !12
  %SplitLoadShuffle7568 = shufflevector <4 x i8> %1387, <4 x i8> %1389, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %1390 = add nsw i64 %1352, 15
  %arrayIdx3929 = getelementptr inbounds i8, i8* %pix1, i64 %1390
  %1391 = bitcast i8* %arrayIdx3801 to <4 x i8>*
  %1392 = load <4 x i8>, <4 x i8>* %1391, align 1, !tbaa !12
  %1393 = bitcast i8* %arrayIdx3905 to <4 x i8>*
  %1394 = load <4 x i8>, <4 x i8>* %1393, align 1, !tbaa !12
  %SplitLoadShuffle7567 = shufflevector <4 x i8> %1392, <4 x i8> %1394, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %1395 = add nsw i64 %1353, 15
  %arrayIdx3931 = getelementptr inbounds i8, i8* %pix2, i64 %1395
  %1396 = bitcast i8* %arrayIdx3803 to <4 x i8>*
  %1397 = load <4 x i8>, <4 x i8>* %1396, align 1, !tbaa !12
  %1398 = bitcast i8* %arrayIdx3907 to <4 x i8>*
  %1399 = load <4 x i8>, <4 x i8>* %1398, align 1, !tbaa !12
  %SplitLoadShuffle7569 = shufflevector <4 x i8> %1397, <4 x i8> %1399, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %arrayIdx3934 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 14, i64 4
  %1400 = zext <8 x i8> %SplitLoadShuffle7570 to <8 x i32>
  %1401 = zext <8 x i8> %SplitLoadShuffle7567 to <8 x i32>
  %1402 = zext <8 x i8> %SplitLoadShuffle7569 to <8 x i32>
  %1403 = zext <8 x i8> %SplitLoadShuffle7568 to <8 x i32>
  %1404 = shl nuw nsw <8 x i32> %1401, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %1405 = shl nuw nsw <8 x i32> %1402, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %1406 = sub nsw <8 x i32> %1404, %1403
  %1407 = sub nsw <8 x i32> %1406, %1405
  %1408 = add nsw <8 x i32> %1407, %1400
  %arrayIdx3952 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 14, i64 6
  %arrayIdx3970 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 14, i64 5
  %arrayIdx3988 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 14, i64 7
  %1409 = extractelement <8 x i32> %1408, i32 3
  %1410 = insertelement <8 x i32> undef, i32 %1409, i32 0
  %1411 = extractelement <8 x i32> %1408, i32 0
  %1412 = insertelement <8 x i32> %1410, i32 %1411, i32 1
  %1413 = insertelement <8 x i32> %1412, i32 %1411, i32 2
  %1414 = insertelement <8 x i32> %1413, i32 %1411, i32 3
  %1415 = extractelement <8 x i32> %1408, i32 7
  %1416 = insertelement <8 x i32> %1414, i32 %1415, i32 4
  %1417 = extractelement <8 x i32> %1408, i32 4
  %1418 = insertelement <8 x i32> %1416, i32 %1417, i32 5
  %1419 = insertelement <8 x i32> %1418, i32 %1417, i32 6
  %1420 = insertelement <8 x i32> %1419, i32 %1417, i32 7
  %1421 = extractelement <8 x i32> %1408, i32 1
  %1422 = insertelement <8 x i32> undef, i32 %1421, i32 0
  %1423 = insertelement <8 x i32> %1422, i32 %1409, i32 1
  %1424 = insertelement <8 x i32> %1423, i32 %1421, i32 2
  %1425 = insertelement <8 x i32> %1424, i32 %1421, i32 3
  %1426 = extractelement <8 x i32> %1408, i32 5
  %1427 = insertelement <8 x i32> %1425, i32 %1426, i32 4
  %1428 = insertelement <8 x i32> %1427, i32 %1415, i32 5
  %1429 = insertelement <8 x i32> %1428, i32 %1426, i32 6
  %1430 = insertelement <8 x i32> %1429, i32 %1426, i32 7
  %1431 = add nsw <8 x i32> %1420, %1430
  %1432 = sub nsw <8 x i32> %1420, %1430
  %1433 = select <8 x i1> <i1 true, i1 false, i1 true, i1 false, i1 true, i1 false, i1 true, i1 false>, <8 x i32> %1431, <8 x i32> %1432
  %1434 = extractelement <8 x i32> %1408, i32 2
  %1435 = insertelement <8 x i32> undef, i32 %1434, i32 0
  %1436 = insertelement <8 x i32> %1435, i32 %1434, i32 1
  %1437 = insertelement <8 x i32> %1436, i32 %1409, i32 2
  %1438 = insertelement <8 x i32> %1437, i32 %1434, i32 3
  %1439 = extractelement <8 x i32> %1408, i32 6
  %1440 = insertelement <8 x i32> %1438, i32 %1439, i32 4
  %1441 = insertelement <8 x i32> %1440, i32 %1439, i32 5
  %1442 = insertelement <8 x i32> %1441, i32 %1415, i32 6
  %1443 = insertelement <8 x i32> %1442, i32 %1439, i32 7
  %1444 = add nsw <8 x i32> %1433, %1443
  %1445 = sub nsw <8 x i32> %1433, %1443
  %1446 = select <8 x i1> <i1 true, i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false>, <8 x i32> %1444, <8 x i32> %1445
  %1447 = sub <8 x i32> %1446, %1408
  %1448 = add <8 x i32> %1446, %1408
  %1449 = select <8 x i1> <i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false, i1 true>, <8 x i32> %1448, <8 x i32> %1447
  %1450 = bitcast i32* %arrayIdx3830 to <8 x i32>*
  store <8 x i32> %1449, <8 x i32>* %1450, align 4
  %1451 = mul nsw i64 %idx.ext.i, 15
  %arrayIdx4005 = getelementptr inbounds i8, i8* %pix1, i64 %1451
  %1452 = mul nsw i64 %idx.ext63.i, 15
  %arrayIdx4007 = getelementptr inbounds i8, i8* %pix2, i64 %1452
  %1453 = add nsw i64 %1451, 4
  %arrayIdx4009 = getelementptr inbounds i8, i8* %pix1, i64 %1453
  %1454 = add nsw i64 %1452, 4
  %arrayIdx4011 = getelementptr inbounds i8, i8* %pix2, i64 %1454
  %1455 = add nsw i64 %1451, 1
  %arrayIdx4013 = getelementptr inbounds i8, i8* %pix1, i64 %1455
  %1456 = add nsw i64 %1452, 1
  %arrayIdx4015 = getelementptr inbounds i8, i8* %pix2, i64 %1456
  %1457 = add nsw i64 %1451, 5
  %arrayIdx4017 = getelementptr inbounds i8, i8* %pix1, i64 %1457
  %1458 = add nsw i64 %1452, 5
  %arrayIdx4019 = getelementptr inbounds i8, i8* %pix2, i64 %1458
  %1459 = add nsw i64 %1451, 2
  %arrayIdx4021 = getelementptr inbounds i8, i8* %pix1, i64 %1459
  %1460 = add nsw i64 %1452, 2
  %arrayIdx4023 = getelementptr inbounds i8, i8* %pix2, i64 %1460
  %1461 = add nsw i64 %1451, 6
  %arrayIdx4025 = getelementptr inbounds i8, i8* %pix1, i64 %1461
  %1462 = add nsw i64 %1452, 6
  %arrayIdx4027 = getelementptr inbounds i8, i8* %pix2, i64 %1462
  %1463 = add nsw i64 %1451, 3
  %arrayIdx4029 = getelementptr inbounds i8, i8* %pix1, i64 %1463
  %1464 = add nsw i64 %1452, 3
  %arrayIdx4031 = getelementptr inbounds i8, i8* %pix2, i64 %1464
  %1465 = add nsw i64 %1451, 7
  %arrayIdx4033 = getelementptr inbounds i8, i8* %pix1, i64 %1465
  %1466 = add nsw i64 %1452, 7
  %arrayIdx4035 = getelementptr inbounds i8, i8* %pix2, i64 %1466
  %arrayIdx4038 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 15, i64 0
  %arrayIdx4056 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 15, i64 2
  %arrayIdx4074 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 15, i64 1
  %arrayIdx4092 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 15, i64 3
  %1467 = add nsw i64 %1451, 8
  %arrayIdx4109 = getelementptr inbounds i8, i8* %pix1, i64 %1467
  %1468 = add nsw i64 %1452, 8
  %arrayIdx4111 = getelementptr inbounds i8, i8* %pix2, i64 %1468
  %1469 = add nsw i64 %1451, 12
  %arrayIdx4113 = getelementptr inbounds i8, i8* %pix1, i64 %1469
  %1470 = add nsw i64 %1452, 12
  %arrayIdx4115 = getelementptr inbounds i8, i8* %pix2, i64 %1470
  %1471 = add nsw i64 %1451, 9
  %arrayIdx4117 = getelementptr inbounds i8, i8* %pix1, i64 %1471
  %1472 = add nsw i64 %1452, 9
  %arrayIdx4119 = getelementptr inbounds i8, i8* %pix2, i64 %1472
  %1473 = add nsw i64 %1451, 13
  %arrayIdx4121 = getelementptr inbounds i8, i8* %pix1, i64 %1473
  %1474 = add nsw i64 %1452, 13
  %arrayIdx4123 = getelementptr inbounds i8, i8* %pix2, i64 %1474
  %1475 = add nsw i64 %1451, 10
  %arrayIdx4125 = getelementptr inbounds i8, i8* %pix1, i64 %1475
  %1476 = add nsw i64 %1452, 10
  %arrayIdx4127 = getelementptr inbounds i8, i8* %pix2, i64 %1476
  %1477 = add nsw i64 %1451, 14
  %arrayIdx4129 = getelementptr inbounds i8, i8* %pix1, i64 %1477
  %1478 = add nsw i64 %1452, 14
  %arrayIdx4131 = getelementptr inbounds i8, i8* %pix2, i64 %1478
  %1479 = add nsw i64 %1451, 11
  %arrayIdx4133 = getelementptr inbounds i8, i8* %pix1, i64 %1479
  %1480 = bitcast i8* %arrayIdx4005 to <4 x i8>*
  %1481 = load <4 x i8>, <4 x i8>* %1480, align 1, !tbaa !12
  %1482 = bitcast i8* %arrayIdx4109 to <4 x i8>*
  %1483 = load <4 x i8>, <4 x i8>* %1482, align 1, !tbaa !12
  %SplitLoadShuffle7619 = shufflevector <4 x i8> %1481, <4 x i8> %1483, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %1484 = add nsw i64 %1452, 11
  %arrayIdx4135 = getelementptr inbounds i8, i8* %pix2, i64 %1484
  %1485 = bitcast i8* %arrayIdx4007 to <4 x i8>*
  %1486 = load <4 x i8>, <4 x i8>* %1485, align 1, !tbaa !12
  %1487 = bitcast i8* %arrayIdx4111 to <4 x i8>*
  %1488 = load <4 x i8>, <4 x i8>* %1487, align 1, !tbaa !12
  %SplitLoadShuffle7617 = shufflevector <4 x i8> %1486, <4 x i8> %1488, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %1489 = add nsw i64 %1451, 15
  %arrayIdx4137 = getelementptr inbounds i8, i8* %pix1, i64 %1489
  %1490 = bitcast i8* %arrayIdx4009 to <4 x i8>*
  %1491 = load <4 x i8>, <4 x i8>* %1490, align 1, !tbaa !12
  %1492 = bitcast i8* %arrayIdx4113 to <4 x i8>*
  %1493 = load <4 x i8>, <4 x i8>* %1492, align 1, !tbaa !12
  %SplitLoadShuffle7616 = shufflevector <4 x i8> %1491, <4 x i8> %1493, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %1494 = add nsw i64 %1452, 15
  %arrayIdx4139 = getelementptr inbounds i8, i8* %pix2, i64 %1494
  %1495 = bitcast i8* %arrayIdx4011 to <4 x i8>*
  %1496 = load <4 x i8>, <4 x i8>* %1495, align 1, !tbaa !12
  %1497 = bitcast i8* %arrayIdx4115 to <4 x i8>*
  %1498 = load <4 x i8>, <4 x i8>* %1497, align 1, !tbaa !12
  %SplitLoadShuffle7618 = shufflevector <4 x i8> %1496, <4 x i8> %1498, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %arrayIdx4142 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 15, i64 4
  %1499 = zext <8 x i8> %SplitLoadShuffle7619 to <8 x i32>
  %1500 = zext <8 x i8> %SplitLoadShuffle7616 to <8 x i32>
  %1501 = zext <8 x i8> %SplitLoadShuffle7618 to <8 x i32>
  %1502 = zext <8 x i8> %SplitLoadShuffle7617 to <8 x i32>
  %1503 = shl nuw nsw <8 x i32> %1500, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %1504 = shl nuw nsw <8 x i32> %1501, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %1505 = sub nsw <8 x i32> %1503, %1502
  %1506 = sub nsw <8 x i32> %1505, %1504
  %1507 = add nsw <8 x i32> %1506, %1499
  %arrayIdx4160 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 15, i64 6
  %arrayIdx4178 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 15, i64 5
  %arrayIdx4196 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 15, i64 7
  %1508 = extractelement <8 x i32> %1507, i32 3
  %1509 = insertelement <8 x i32> undef, i32 %1508, i32 0
  %1510 = extractelement <8 x i32> %1507, i32 0
  %1511 = insertelement <8 x i32> %1509, i32 %1510, i32 1
  %1512 = insertelement <8 x i32> %1511, i32 %1510, i32 2
  %1513 = insertelement <8 x i32> %1512, i32 %1510, i32 3
  %1514 = extractelement <8 x i32> %1507, i32 7
  %1515 = insertelement <8 x i32> %1513, i32 %1514, i32 4
  %1516 = extractelement <8 x i32> %1507, i32 4
  %1517 = insertelement <8 x i32> %1515, i32 %1516, i32 5
  %1518 = insertelement <8 x i32> %1517, i32 %1516, i32 6
  %1519 = insertelement <8 x i32> %1518, i32 %1516, i32 7
  %1520 = extractelement <8 x i32> %1507, i32 1
  %1521 = insertelement <8 x i32> undef, i32 %1520, i32 0
  %1522 = insertelement <8 x i32> %1521, i32 %1508, i32 1
  %1523 = insertelement <8 x i32> %1522, i32 %1520, i32 2
  %1524 = insertelement <8 x i32> %1523, i32 %1520, i32 3
  %1525 = extractelement <8 x i32> %1507, i32 5
  %1526 = insertelement <8 x i32> %1524, i32 %1525, i32 4
  %1527 = insertelement <8 x i32> %1526, i32 %1514, i32 5
  %1528 = insertelement <8 x i32> %1527, i32 %1525, i32 6
  %1529 = insertelement <8 x i32> %1528, i32 %1525, i32 7
  %1530 = add nsw <8 x i32> %1519, %1529
  %1531 = sub nsw <8 x i32> %1519, %1529
  %1532 = select <8 x i1> <i1 true, i1 false, i1 true, i1 false, i1 true, i1 false, i1 true, i1 false>, <8 x i32> %1530, <8 x i32> %1531
  %1533 = extractelement <8 x i32> %1507, i32 2
  %1534 = insertelement <8 x i32> undef, i32 %1533, i32 0
  %1535 = insertelement <8 x i32> %1534, i32 %1533, i32 1
  %1536 = insertelement <8 x i32> %1535, i32 %1508, i32 2
  %1537 = insertelement <8 x i32> %1536, i32 %1533, i32 3
  %1538 = extractelement <8 x i32> %1507, i32 6
  %1539 = insertelement <8 x i32> %1537, i32 %1538, i32 4
  %1540 = insertelement <8 x i32> %1539, i32 %1538, i32 5
  %1541 = insertelement <8 x i32> %1540, i32 %1514, i32 6
  %1542 = insertelement <8 x i32> %1541, i32 %1538, i32 7
  %1543 = add nsw <8 x i32> %1532, %1542
  %1544 = sub nsw <8 x i32> %1532, %1542
  %1545 = select <8 x i1> <i1 true, i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false>, <8 x i32> %1543, <8 x i32> %1544
  %1546 = sub <8 x i32> %1545, %1507
  %1547 = add <8 x i32> %1545, %1507
  %1548 = select <8 x i1> <i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i1 false, i1 true>, <8 x i32> %1547, <8 x i32> %1546
  %1549 = bitcast i32* %arrayIdx4038 to <8 x i32>*
  store <8 x i32> %1548, <8 x i32>* %1549, align 4
  %arrayIdx4213 = getelementptr inbounds <8 x i32>, <8 x i32>* %alloca842, i64 0, i64 0
  %arrayIdx4214 = getelementptr inbounds <8 x i32>, <8 x i32>* %alloca843, i64 0, i64 0
  %arrayIdx4215 = getelementptr inbounds <8 x i32>, <8 x i32>* %alloca844, i64 0, i64 0
  %arrayIdx4216 = getelementptr inbounds <8 x i32>, <8 x i32>* %alloca845, i64 0, i64 0
  %arrayIdx4218 = getelementptr inbounds <8 x i32>, <8 x i32>* %alloca842, i64 0, i64 1
  %arrayIdx4220 = getelementptr inbounds <8 x i32>, <8 x i32>* %alloca843, i64 0, i64 1
  %arrayIdx4222 = getelementptr inbounds <8 x i32>, <8 x i32>* %alloca844, i64 0, i64 1
  %arrayIdx4224 = getelementptr inbounds <8 x i32>, <8 x i32>* %alloca845, i64 0, i64 1
  %arrayIdx4226 = getelementptr inbounds <8 x i32>, <8 x i32>* %alloca842, i64 0, i64 2
  %arrayIdx4228 = getelementptr inbounds <8 x i32>, <8 x i32>* %alloca843, i64 0, i64 2
  %arrayIdx4230 = getelementptr inbounds <8 x i32>, <8 x i32>* %alloca844, i64 0, i64 2
  %arrayIdx4232 = getelementptr inbounds <8 x i32>, <8 x i32>* %alloca845, i64 0, i64 2
  %arrayIdx4234 = getelementptr inbounds <8 x i32>, <8 x i32>* %alloca842, i64 0, i64 3
  %arrayIdx4236 = getelementptr inbounds <8 x i32>, <8 x i32>* %alloca843, i64 0, i64 3
  %arrayIdx4238 = getelementptr inbounds <8 x i32>, <8 x i32>* %alloca844, i64 0, i64 3
  %arrayIdx4240 = getelementptr inbounds <8 x i32>, <8 x i32>* %alloca845, i64 0, i64 3
  %arrayIdx4242 = getelementptr inbounds <8 x i32>, <8 x i32>* %alloca842, i64 0, i64 4
  %arrayIdx4244 = getelementptr inbounds <8 x i32>, <8 x i32>* %alloca843, i64 0, i64 4
  %arrayIdx4246 = getelementptr inbounds <8 x i32>, <8 x i32>* %alloca844, i64 0, i64 4
  %arrayIdx4248 = getelementptr inbounds <8 x i32>, <8 x i32>* %alloca845, i64 0, i64 4
  %arrayIdx4250 = getelementptr inbounds <8 x i32>, <8 x i32>* %alloca842, i64 0, i64 5
  %arrayIdx4252 = getelementptr inbounds <8 x i32>, <8 x i32>* %alloca843, i64 0, i64 5
  %arrayIdx4254 = getelementptr inbounds <8 x i32>, <8 x i32>* %alloca844, i64 0, i64 5
  %arrayIdx4256 = getelementptr inbounds <8 x i32>, <8 x i32>* %alloca845, i64 0, i64 5
  %arrayIdx4258 = getelementptr inbounds <8 x i32>, <8 x i32>* %alloca842, i64 0, i64 6
  %arrayIdx4260 = getelementptr inbounds <8 x i32>, <8 x i32>* %alloca843, i64 0, i64 6
  %arrayIdx4262 = getelementptr inbounds <8 x i32>, <8 x i32>* %alloca844, i64 0, i64 6
  %arrayIdx4264 = getelementptr inbounds <8 x i32>, <8 x i32>* %alloca845, i64 0, i64 6
  %arrayIdx4266 = getelementptr inbounds <8 x i32>, <8 x i32>* %alloca842, i64 0, i64 7
  %1550 = bitcast i32* %arrayIdx4213 to <8 x i32>*
  store <8 x i32> zeroinitializer, <8 x i32>* %1550, align 16
  %arrayIdx4268 = getelementptr inbounds <8 x i32>, <8 x i32>* %alloca843, i64 0, i64 7
  %1551 = bitcast i32* %arrayIdx4214 to <8 x i32>*
  store <8 x i32> zeroinitializer, <8 x i32>* %1551, align 16
  %arrayIdx4270 = getelementptr inbounds <8 x i32>, <8 x i32>* %alloca844, i64 0, i64 7
  %1552 = bitcast i32* %arrayIdx4215 to <8 x i32>*
  store <8 x i32> zeroinitializer, <8 x i32>* %1552, align 16
  %arrayIdx4272 = getelementptr inbounds <8 x i32>, <8 x i32>* %alloca845, i64 0, i64 7
  %1553 = bitcast i32* %arrayIdx4216 to <8 x i32>*
  store <8 x i32> zeroinitializer, <8 x i32>* %1553, align 16
  %1554 = bitcast [16 x [8 x i32]]* %alloca to <8 x i32>*
  %gepload4289 = load <8 x i32>, <8 x i32>* %1554, align 4
  %arrayIdx4291 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 1, i64 0
  %1555 = bitcast i32* %arrayIdx4291 to <8 x i32>*
  %gepload4292 = load <8 x i32>, <8 x i32>* %1555, align 4
  %arrayIdx4294 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 2, i64 0
  %1556 = bitcast i32* %arrayIdx4294 to <8 x i32>*
  %gepload4295 = load <8 x i32>, <8 x i32>* %1556, align 4
  %arrayIdx4297 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 3, i64 0
  %1557 = bitcast i32* %arrayIdx4297 to <8 x i32>*
  %gepload4298 = load <8 x i32>, <8 x i32>* %1557, align 4
  %1558 = add <8 x i32> %gepload4289, %gepload4292
  %1559 = add <8 x i32> %1558, %gepload4295
  %1560 = add <8 x i32> %1559, %gepload4298
  %1561 = lshr <8 x i32> %1560, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %1562 = and <8 x i32> %1561, <i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537>
  %1563 = mul nuw <8 x i32> %1562, <i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535>
  %1564 = add <8 x i32> %1560, %1563
  %1565 = xor <8 x i32> %1564, %1563
  %1566 = sub <8 x i32> %gepload4289, %gepload4292
  %1567 = add <8 x i32> %1566, %gepload4295
  %1568 = sub <8 x i32> %1567, %gepload4298
  %1569 = lshr <8 x i32> %1568, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %1570 = and <8 x i32> %1569, <i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537>
  %1571 = mul nuw <8 x i32> %1570, <i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535>
  %1572 = add <8 x i32> %1568, %1571
  %1573 = xor <8 x i32> %1572, %1571
  %1574 = add <8 x i32> %gepload4295, %gepload4298
  %1575 = sub <8 x i32> %1558, %1574
  %1576 = lshr <8 x i32> %1575, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %1577 = and <8 x i32> %1576, <i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537>
  %1578 = mul nuw <8 x i32> %1577, <i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535>
  %1579 = add <8 x i32> %1558, %1578
  %1580 = sub <8 x i32> %1579, %1574
  %1581 = xor <8 x i32> %1580, %1578
  %1582 = sub <8 x i32> %1566, %gepload4295
  %1583 = add <8 x i32> %1582, %gepload4298
  %1584 = lshr <8 x i32> %1583, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %1585 = and <8 x i32> %1584, <i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537>
  %1586 = mul nuw <8 x i32> %1585, <i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535>
  %1587 = add <8 x i32> %1583, %1586
  %1588 = xor <8 x i32> %1587, %1586
  %gepload4333 = load <8 x i32>, <8 x i32>* %alloca842, align 16
  %1589 = add <8 x i32> %1565, %1573
  %1590 = add <8 x i32> %1589, %1581
  %1591 = add <8 x i32> %1590, %gepload4333
  %1592 = add <8 x i32> %1591, %1588
  store <8 x i32> %1592, <8 x i32>* %alloca842, align 16
  %arrayIdx4337 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 4, i64 0
  %1593 = bitcast i32* %arrayIdx4337 to <8 x i32>*
  %gepload4338 = load <8 x i32>, <8 x i32>* %1593, align 4
  %arrayIdx4340 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 5, i64 0
  %1594 = bitcast i32* %arrayIdx4340 to <8 x i32>*
  %gepload4341 = load <8 x i32>, <8 x i32>* %1594, align 4
  %arrayIdx4343 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 6, i64 0
  %1595 = bitcast i32* %arrayIdx4343 to <8 x i32>*
  %gepload4344 = load <8 x i32>, <8 x i32>* %1595, align 4
  %arrayIdx4346 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 7, i64 0
  %1596 = bitcast i32* %arrayIdx4346 to <8 x i32>*
  %gepload4347 = load <8 x i32>, <8 x i32>* %1596, align 4
  %1597 = add <8 x i32> %gepload4338, %gepload4341
  %1598 = add <8 x i32> %1597, %gepload4344
  %1599 = add <8 x i32> %1598, %gepload4347
  %1600 = lshr <8 x i32> %1599, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %1601 = and <8 x i32> %1600, <i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537>
  %1602 = mul nuw <8 x i32> %1601, <i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535>
  %1603 = add <8 x i32> %1599, %1602
  %1604 = xor <8 x i32> %1603, %1602
  %1605 = sub <8 x i32> %gepload4338, %gepload4341
  %1606 = add <8 x i32> %1605, %gepload4344
  %1607 = sub <8 x i32> %1606, %gepload4347
  %1608 = lshr <8 x i32> %1607, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %1609 = and <8 x i32> %1608, <i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537>
  %1610 = mul nuw <8 x i32> %1609, <i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535>
  %1611 = add <8 x i32> %1607, %1610
  %1612 = xor <8 x i32> %1611, %1610
  %1613 = add <8 x i32> %gepload4344, %gepload4347
  %1614 = sub <8 x i32> %1597, %1613
  %1615 = lshr <8 x i32> %1614, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %1616 = and <8 x i32> %1615, <i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537>
  %1617 = mul nuw <8 x i32> %1616, <i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535>
  %1618 = add <8 x i32> %1597, %1617
  %1619 = sub <8 x i32> %1618, %1613
  %1620 = xor <8 x i32> %1619, %1617
  %1621 = sub <8 x i32> %1605, %gepload4344
  %1622 = add <8 x i32> %1621, %gepload4347
  %1623 = lshr <8 x i32> %1622, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %1624 = and <8 x i32> %1623, <i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537>
  %1625 = mul nuw <8 x i32> %1624, <i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535>
  %1626 = add <8 x i32> %1622, %1625
  %1627 = xor <8 x i32> %1626, %1625
  %gepload4382 = load <8 x i32>, <8 x i32>* %alloca843, align 16
  %1628 = add <8 x i32> %1604, %1612
  %1629 = add <8 x i32> %1628, %1620
  %1630 = add <8 x i32> %1629, %gepload4382
  %1631 = add <8 x i32> %1630, %1627
  store <8 x i32> %1631, <8 x i32>* %alloca843, align 16
  %arrayIdx4386 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 8, i64 0
  %1632 = bitcast i32* %arrayIdx4386 to <8 x i32>*
  %gepload4387 = load <8 x i32>, <8 x i32>* %1632, align 4
  %arrayIdx4389 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 9, i64 0
  %1633 = bitcast i32* %arrayIdx4389 to <8 x i32>*
  %gepload4390 = load <8 x i32>, <8 x i32>* %1633, align 4
  %arrayIdx4392 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 10, i64 0
  %1634 = bitcast i32* %arrayIdx4392 to <8 x i32>*
  %gepload4393 = load <8 x i32>, <8 x i32>* %1634, align 4
  %arrayIdx4395 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 11, i64 0
  %1635 = bitcast i32* %arrayIdx4395 to <8 x i32>*
  %gepload4396 = load <8 x i32>, <8 x i32>* %1635, align 4
  %1636 = add <8 x i32> %gepload4387, %gepload4390
  %1637 = add <8 x i32> %1636, %gepload4393
  %1638 = add <8 x i32> %1637, %gepload4396
  %1639 = lshr <8 x i32> %1638, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %1640 = and <8 x i32> %1639, <i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537>
  %1641 = mul nuw <8 x i32> %1640, <i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535>
  %1642 = add <8 x i32> %1638, %1641
  %1643 = xor <8 x i32> %1642, %1641
  %1644 = sub <8 x i32> %gepload4387, %gepload4390
  %1645 = add <8 x i32> %1644, %gepload4393
  %1646 = sub <8 x i32> %1645, %gepload4396
  %1647 = lshr <8 x i32> %1646, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %1648 = and <8 x i32> %1647, <i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537>
  %1649 = mul nuw <8 x i32> %1648, <i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535>
  %1650 = add <8 x i32> %1646, %1649
  %1651 = xor <8 x i32> %1650, %1649
  %1652 = add <8 x i32> %gepload4393, %gepload4396
  %1653 = sub <8 x i32> %1636, %1652
  %1654 = lshr <8 x i32> %1653, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %1655 = and <8 x i32> %1654, <i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537>
  %1656 = mul nuw <8 x i32> %1655, <i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535>
  %1657 = add <8 x i32> %1636, %1656
  %1658 = sub <8 x i32> %1657, %1652
  %1659 = xor <8 x i32> %1658, %1656
  %1660 = sub <8 x i32> %1644, %gepload4393
  %1661 = add <8 x i32> %1660, %gepload4396
  %1662 = lshr <8 x i32> %1661, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %1663 = and <8 x i32> %1662, <i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537>
  %1664 = mul nuw <8 x i32> %1663, <i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535>
  %1665 = add <8 x i32> %1661, %1664
  %1666 = xor <8 x i32> %1665, %1664
  %gepload4431 = load <8 x i32>, <8 x i32>* %alloca844, align 16
  %1667 = add <8 x i32> %1643, %1651
  %1668 = add <8 x i32> %1667, %1659
  %1669 = add <8 x i32> %1668, %gepload4431
  %1670 = add <8 x i32> %1669, %1666
  store <8 x i32> %1670, <8 x i32>* %alloca844, align 16
  %arrayIdx4435 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 12, i64 0
  %1671 = bitcast i32* %arrayIdx4435 to <8 x i32>*
  %gepload4436 = load <8 x i32>, <8 x i32>* %1671, align 4
  %arrayIdx4438 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 13, i64 0
  %1672 = bitcast i32* %arrayIdx4438 to <8 x i32>*
  %gepload4439 = load <8 x i32>, <8 x i32>* %1672, align 4
  %arrayIdx4441 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 14, i64 0
  %1673 = bitcast i32* %arrayIdx4441 to <8 x i32>*
  %gepload4442 = load <8 x i32>, <8 x i32>* %1673, align 4
  %arrayIdx4444 = getelementptr inbounds [16 x [8 x i32]], [16 x [8 x i32]]* %alloca, i64 0, i64 15, i64 0
  %1674 = bitcast i32* %arrayIdx4444 to <8 x i32>*
  %gepload4445 = load <8 x i32>, <8 x i32>* %1674, align 4
  %1675 = add <8 x i32> %gepload4436, %gepload4439
  %1676 = add <8 x i32> %1675, %gepload4442
  %1677 = add <8 x i32> %1676, %gepload4445
  %1678 = lshr <8 x i32> %1677, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %1679 = and <8 x i32> %1678, <i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537>
  %1680 = mul nuw <8 x i32> %1679, <i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535>
  %1681 = add <8 x i32> %1677, %1680
  %1682 = xor <8 x i32> %1681, %1680
  %1683 = sub <8 x i32> %gepload4436, %gepload4439
  %1684 = add <8 x i32> %1683, %gepload4442
  %1685 = sub <8 x i32> %1684, %gepload4445
  %1686 = lshr <8 x i32> %1685, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %1687 = and <8 x i32> %1686, <i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537>
  %1688 = mul nuw <8 x i32> %1687, <i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535>
  %1689 = add <8 x i32> %1685, %1688
  %1690 = xor <8 x i32> %1689, %1688
  %1691 = add <8 x i32> %gepload4442, %gepload4445
  %1692 = sub <8 x i32> %1675, %1691
  %1693 = lshr <8 x i32> %1692, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %1694 = and <8 x i32> %1693, <i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537>
  %1695 = mul nuw <8 x i32> %1694, <i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535>
  %1696 = add <8 x i32> %1675, %1695
  %1697 = sub <8 x i32> %1696, %1691
  %1698 = xor <8 x i32> %1697, %1695
  %1699 = sub <8 x i32> %1683, %gepload4442
  %1700 = add <8 x i32> %1699, %gepload4445
  %1701 = lshr <8 x i32> %1700, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %1702 = and <8 x i32> %1701, <i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537, i32 65537>
  %1703 = mul nuw <8 x i32> %1702, <i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535>
  %1704 = add <8 x i32> %1700, %1703
  %1705 = xor <8 x i32> %1704, %1703
  %gepload4480 = load <8 x i32>, <8 x i32>* %alloca845, align 16
  %1706 = add <8 x i32> %1682, %1690
  %1707 = add <8 x i32> %1706, %1698
  %1708 = add <8 x i32> %1707, %gepload4480
  %1709 = add <8 x i32> %1708, %1705
  store <8 x i32> %1709, <8 x i32>* %alloca845, align 16
  %1710 = bitcast <8 x i32>* %alloca842 to <4 x i32>*
  %gepload4493 = load <4 x i32>, <4 x i32>* %1710, align 16
  %1711 = bitcast i32* %arrayIdx4242 to <4 x i32>*
  %gepload4496 = load <4 x i32>, <4 x i32>* %1711, align 16
  %1712 = bitcast <8 x i32>* %alloca843 to <4 x i32>*
  %gepload4499 = load <4 x i32>, <4 x i32>* %1712, align 16
  %1713 = bitcast i32* %arrayIdx4244 to <4 x i32>*
  %gepload4502 = load <4 x i32>, <4 x i32>* %1713, align 16
  %1714 = bitcast <8 x i32>* %alloca844 to <4 x i32>*
  %gepload4505 = load <4 x i32>, <4 x i32>* %1714, align 16
  %1715 = bitcast i32* %arrayIdx4246 to <4 x i32>*
  %gepload4508 = load <4 x i32>, <4 x i32>* %1715, align 16
  %1716 = bitcast <8 x i32>* %alloca845 to <4 x i32>*
  %gepload4511 = load <4 x i32>, <4 x i32>* %1716, align 16
  %1717 = bitcast i32* %arrayIdx4248 to <4 x i32>*
  %gepload4514 = load <4 x i32>, <4 x i32>* %1717, align 16
  %rdx.shuf9174517 = shufflevector <4 x i32> %gepload4514, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1718 = add <4 x i32> %gepload4514, %rdx.shuf9174517
  %rdx.shuf9194520 = shufflevector <4 x i32> %1718, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1719 = add <4 x i32> %1718, %rdx.shuf9194520
  %bin.final9214522 = extractelement <4 x i32> %1719, i64 0
  %rdx.shuf9114525 = shufflevector <4 x i32> %gepload4511, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1720 = add <4 x i32> %gepload4511, %rdx.shuf9114525
  %rdx.shuf9134528 = shufflevector <4 x i32> %1720, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1721 = add <4 x i32> %1720, %rdx.shuf9134528
  %bin.final9154530 = extractelement <4 x i32> %1721, i64 0
  %rdx.shuf9054533 = shufflevector <4 x i32> %gepload4508, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1722 = add <4 x i32> %gepload4508, %rdx.shuf9054533
  %rdx.shuf9074536 = shufflevector <4 x i32> %1722, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1723 = add <4 x i32> %1722, %rdx.shuf9074536
  %bin.final9094538 = extractelement <4 x i32> %1723, i64 0
  %rdx.shuf8994541 = shufflevector <4 x i32> %gepload4505, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1724 = add <4 x i32> %gepload4505, %rdx.shuf8994541
  %rdx.shuf9014544 = shufflevector <4 x i32> %1724, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1725 = add <4 x i32> %1724, %rdx.shuf9014544
  %bin.final9034546 = extractelement <4 x i32> %1725, i64 0
  %rdx.shuf8934549 = shufflevector <4 x i32> %gepload4502, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1726 = add <4 x i32> %gepload4502, %rdx.shuf8934549
  %rdx.shuf8954552 = shufflevector <4 x i32> %1726, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1727 = add <4 x i32> %1726, %rdx.shuf8954552
  %bin.final8974554 = extractelement <4 x i32> %1727, i64 0
  %rdx.shuf8874557 = shufflevector <4 x i32> %gepload4499, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1728 = add <4 x i32> %gepload4499, %rdx.shuf8874557
  %rdx.shuf8894560 = shufflevector <4 x i32> %1728, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1729 = add <4 x i32> %1728, %rdx.shuf8894560
  %bin.final8914562 = extractelement <4 x i32> %1729, i64 0
  %rdx.shuf8814565 = shufflevector <4 x i32> %gepload4496, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1730 = add <4 x i32> %gepload4496, %rdx.shuf8814565
  %rdx.shuf8834568 = shufflevector <4 x i32> %1730, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1731 = add <4 x i32> %1730, %rdx.shuf8834568
  %bin.final8854570 = extractelement <4 x i32> %1731, i64 0
  %rdx.shuf4573 = shufflevector <4 x i32> %gepload4493, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1732 = add <4 x i32> %gepload4493, %rdx.shuf4573
  %rdx.shuf8784576 = shufflevector <4 x i32> %1732, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1733 = add <4 x i32> %1732, %rdx.shuf8784576
  %bin.final4578 = extractelement <4 x i32> %1733, i64 0
  %1734 = insertelement <8 x i32> undef, i32 %bin.final9214522, i32 0
  %1735 = insertelement <8 x i32> %1734, i32 %bin.final9094538, i32 1
  %1736 = insertelement <8 x i32> %1735, i32 %bin.final9154530, i32 2
  %1737 = insertelement <8 x i32> %1736, i32 %bin.final9034546, i32 3
  %1738 = insertelement <8 x i32> %1737, i32 %bin.final8974554, i32 4
  %1739 = insertelement <8 x i32> %1738, i32 %bin.final8854570, i32 5
  %1740 = insertelement <8 x i32> %1739, i32 %bin.final4578, i32 6
  %1741 = insertelement <8 x i32> %1740, i32 %bin.final8914562, i32 7
  %1742 = lshr <8 x i32> %1741, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %1743 = and <8 x i32> <i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535, i32 65535>, %1741
  %1744 = add nuw nsw <8 x i32> %1742, %1743
  %1745 = lshr <8 x i32> %1744, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %1746 = add nuw nsw i32 undef, undef
  %1747 = add nuw nsw i32 %1746, undef
  %1748 = add nuw nsw i32 %1747, undef
  %1749 = add nuw nsw i32 %1748, undef
  %1750 = add nuw i32 %1749, undef
  %1751 = add i32 %1750, undef
  %rdx.shuf = shufflevector <8 x i32> %1745, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx = add <8 x i32> %1745, %rdx.shuf
  %rdx.shuf7620 = shufflevector <8 x i32> %bin.rdx, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx7621 = add <8 x i32> %bin.rdx, %rdx.shuf7620
  %rdx.shuf7622 = shufflevector <8 x i32> %bin.rdx7621, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %bin.rdx7623 = add <8 x i32> %bin.rdx7621, %rdx.shuf7622
  %1752 = extractelement <8 x i32> %bin.rdx7623, i32 0
  %1753 = add i32 %1751, undef
  ret i32 %1752
}

; Function Attrs: argmemonly nounwind
declare void @llvm.intel.directive(metadata) #1

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #4 = { nounwind readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #5 = { nounwind readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "pre_loopopt" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #6 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "pre_loopopt" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "pre_loopopt" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "pre_loopopt" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0}

!0 = !{i32 1, !"wchar_size", i32 4}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C/C++ TBAA"}
!21 = !{!6, !6, i64 0}
!12 = !{!6, !6, i64 0}
; CHECK: [[L1:%.*]] = load <16 x i8>, <16 x i8>*
; CHECK: [[L2:%.*]] = load <16 x i8>, <16 x i8>*
; CHECK: [[L3:%.*]] = load <16 x i8>, <16 x i8>*
; CHECK: [[L4:%.*]] = load <16 x i8>, <16 x i8>*
