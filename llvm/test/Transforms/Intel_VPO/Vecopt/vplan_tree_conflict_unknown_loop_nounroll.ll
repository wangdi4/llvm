; NOTE: Assertions have been autogenerated by utils/intel_update_vplan_checks.py
;RUN: opt -S -mattr=+avx512vl,+avx512cd -vplan-vec-scenario="n0;v8;v4" -print-after=hir-vplan-vec -passes="hir-ssa-deconstruction,hir-vec-dir-insert,hir-vplan-vec" -disable-output < %s 2>&1 | FileCheck %s
;RUN: opt -enable-new-pm=0 -S -mattr=+avx512vl,+avx512cd -vplan-vec-scenario="n0;v8;v4" -print-after=hir-vplan-vec -hir-ssa-deconstruction -hir-vec-dir-insert -hir-vplan-vec -disable-output < %s 2>&1 | FileCheck %s

target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; The main and vector remainder loop should be marked with <nounroll>
; CHECK: UNKNOWN LOOP i2 <MAX_TC_EST = 8>  <LEGAL_MAX_TC = 8> <nounroll> <novectorize>
; CHECK: UNKNOWN LOOP i1 <MAX_TC_EST = 4>  <LEGAL_MAX_TC = 4> <nounroll> <novectorize>

; Function Attrs: argmemonly nofree noinline norecurse nosync nounwind uwtable
define dso_local void @foo(i32* noalias nocapture noundef %a, i32* noalias nocapture noundef readonly %b, i32* noalias nocapture noundef readonly %c) local_unnamed_addr #0 {
entry:
  br label %for.body

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i32 [ 0, %entry ], [ %indvars.iv.next, %for.body ]
  %arrayidx = getelementptr inbounds i32, i32* %b, i32 %indvars.iv
  %0 = load i32, i32* %arrayidx, align 4
  %arrayidx2 = getelementptr inbounds i32, i32* %a, i32 %0
  %1 = load i32, i32* %arrayidx2, align 4
  %arrayidx4 = getelementptr inbounds i32, i32* %c, i32 %indvars.iv
  %2 = load i32, i32* %arrayidx4, align 4
  %add = add nsw i32 %2, %1
  store i32 %add, i32* %arrayidx2, align 4
  %indvars.iv.next = add nuw nsw i32 %indvars.iv, 1
  %exitcond.not = icmp eq i32 %indvars.iv.next, 1020
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body

for.cond.cleanup:                                 ; preds = %for.body
  ret void
}
