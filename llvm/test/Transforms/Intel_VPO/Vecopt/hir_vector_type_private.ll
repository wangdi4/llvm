; NOTE: Assertions have been autogenerated by utils/intel_update_vplan_checks.py
; RUN: opt -passes="hir-ssa-deconstruction,hir-vec-dir-insert,hir-vplan-vec,print<hir>" -disable-output -vplan-force-vf=4 < %s 2>&1 | FileCheck %s

target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Vect = type { float, float, float, float }

; Function Attrs: nofree norecurse nosync nounwind uwtable
define <4 x float> @foo(ptr %sarr, <4 x float> %.val87) {
; CHECK:  Function: foo
; CHECK:  BEGIN REGION { modified }
; CHECK-NEXT:        + DO i1 = 0, 99, 4   <DO_LOOP> <auto-vectorized> <novectorize>
; CHECK-NEXT:        |   [[DOTVEC0:%.*]] = (<16 x float>*)([[SARR0:%.*]])[i1].0;
; CHECK-NEXT:        + END LOOP
; CHECK:             [[PRIV0:%.*]] = shufflevector [[DOTVEC0]],  undef,  <i32 12, i32 13, i32 14, i32 15>
; CHECK:  END REGION
;

entry:
  br label %for.body

for.body:                                         ; preds = %for.body
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.body ]
  %ptr = getelementptr inbounds %struct.Vect, ptr %sarr, i64 %indvars.iv, i32 0
  %priv = load <4 x float>, ptr %ptr, align 16
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 100
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                       ; preds = %for.body
  %lcssa = phi <4 x float> [ %priv, %for.body ]
  ret <4 x float> %lcssa
}
