; NOTE: Assertions have been autogenerated by utils/intel_update_vplan_checks.py
; RUN: opt -vplan-vec-scenario="m4;v4;s1" -passes=vplan-vec -vplan-force-vf=4  -S < %s | FileCheck %s --check-prefix=MASKED-PEEL
; RUN: opt -vplan-vec-scenario="n0;v4;m4" -passes=vplan-vec -vplan-force-vf=4  -S < %s | FileCheck %s --check-prefix=MASKED-REMAINDER
; RUN: opt -vplan-vec-scenario="m4;v4;m4" -passes=vplan-vec -vplan-force-vf=4  -S < %s | FileCheck %s --check-prefix=MASKED-PEEL-REMAINDER

target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

define void @main(i32 %N) {
; MASKED-PEEL:  define void @main(i32 [[N0:%.*]]) {
; MASKED-PEEL-NEXT:  entry:
; MASKED-PEEL-NEXT:    br label [[PREHEADER0:%.*]]
; MASKED-PEEL-EMPTY:
; MASKED-PEEL-NEXT:  preheader:
; MASKED-PEEL-NEXT:    br label %[[PEEL_CHECKZ0:.*]]
; MASKED-PEEL-EMPTY:
; MASKED-PEEL-NEXT:  [[PEEL_CHECKZ0]]:
; MASKED-PEEL-NEXT:    br label %[[PEEL_CHECKV0:.*]]
; MASKED-PEEL-EMPTY:
; MASKED-PEEL-NEXT:  [[PEEL_CHECKV0]]:
; MASKED-PEEL-NEXT:    [[TMP0:%.*]] = icmp ugt i32 5, [[N0]]
; MASKED-PEEL-NEXT:    br i1 [[TMP0]], label %[[MERGE_BLK0:.*]], label [[VPLANNEDBB0:%.*]]
; MASKED-PEEL-EMPTY:
; MASKED-PEEL-NEXT:  VPlannedBB:
; MASKED-PEEL-NEXT:    br label [[VPLANNEDBB10:%.*]]
; MASKED-PEEL-EMPTY:
; MASKED-PEEL-NEXT:  VPlannedBB1:
; MASKED-PEEL-NEXT:    br label [[VPLANNEDBB20:%.*]]
; MASKED-PEEL-EMPTY:
; MASKED-PEEL-NEXT:  VPlannedBB2:
; MASKED-PEEL-NEXT:    [[UNI_PHI0:%.*]] = phi i32 [ 0, [[VPLANNEDBB10]] ], [ [[TMP4:%.*]], [[NEW_LATCH0:%.*]] ]
; MASKED-PEEL-NEXT:    [[VEC_PHI0:%.*]] = phi <4 x i32> [ <i32 0, i32 1, i32 2, i32 3>, [[VPLANNEDBB10]] ], [ [[TMP3:%.*]], [[NEW_LATCH0]] ]
; MASKED-PEEL-NEXT:    [[TMP1:%.*]] = add <4 x i32> [[VEC_PHI0]], zeroinitializer
; MASKED-PEEL-NEXT:    [[TMP2:%.*]] = icmp ult <4 x i32> [[VEC_PHI0]], <i32 1, i32 1, i32 1, i32 1>
; MASKED-PEEL-NEXT:    br label [[VPLANNEDBB30:%.*]]
; MASKED-PEEL-EMPTY:
; MASKED-PEEL-NEXT:  VPlannedBB3:
; MASKED-PEEL-NEXT:    br label [[NEW_LATCH0]]
; MASKED-PEEL-EMPTY:
; MASKED-PEEL-NEXT:  new_latch:
; MASKED-PEEL-NEXT:    [[TMP3]] = add nsw <4 x i32> [[VEC_PHI0]], <i32 4, i32 4, i32 4, i32 4>
; MASKED-PEEL-NEXT:    [[TMP4]] = add nsw i32 [[UNI_PHI0]], 4
; MASKED-PEEL-NEXT:    [[TMP5:%.*]] = icmp ult <4 x i32> [[TMP3]], <i32 1, i32 1, i32 1, i32 1>
; MASKED-PEEL-NEXT:    [[TMP6:%.*]] = bitcast <4 x i1> [[TMP5]] to i4
; MASKED-PEEL-NEXT:    [[TMP7:%.*]] = icmp eq i4 [[TMP6]], 0
; MASKED-PEEL-NEXT:    br i1 [[TMP7]], label [[VPLANNEDBB40:%.*]], label [[VPLANNEDBB20]]
; MASKED-PEEL-EMPTY:
; MASKED-PEEL-NEXT:  VPlannedBB4:
; MASKED-PEEL-NEXT:    br label [[VPLANNEDBB50:%.*]]
; MASKED-PEEL-EMPTY:
; MASKED-PEEL-NEXT:  VPlannedBB5:
; MASKED-PEEL-NEXT:    br label %[[MERGE_BLK1:.*]]
; MASKED-PEEL-EMPTY:
; MASKED-PEEL-NEXT:  [[MERGE_BLK1]]:
; MASKED-PEEL-NEXT:    [[UNI_PHI60:%.*]] = phi i32 [ 1, [[VPLANNEDBB50]] ]
; MASKED-PEEL-NEXT:    br label [[VPLANNEDBB70:%.*]]
; MASKED-PEEL-EMPTY:
; MASKED-PEEL-NEXT:  VPlannedBB7:
; MASKED-PEEL-NEXT:    [[TMP8:%.*]] = icmp ugt i32 5, [[N0]]
; MASKED-PEEL-NEXT:    br i1 [[TMP8]], label %[[MERGE_BLK:.*]], label [[VPLANNEDBB80:%.*]]
; MASKED-PEEL-EMPTY:
; MASKED-PEEL-NEXT:  VPlannedBB8:
; MASKED-PEEL-NEXT:    br label [[VPLANNEDBB90:%.*]]
; MASKED-PEEL-EMPTY:
; MASKED-PEEL-NEXT:  VPlannedBB9:
; MASKED-PEEL-NEXT:    [[UNI_PHI6IND_START_BCAST_SPLATINSERT0:%.*]] = insertelement <4 x i32> poison, i32 [[UNI_PHI60]], i32 0
; MASKED-PEEL-NEXT:    [[UNI_PHI6IND_START_BCAST_SPLAT0:%.*]] = shufflevector <4 x i32> [[UNI_PHI6IND_START_BCAST_SPLATINSERT0]], <4 x i32> poison, <4 x i32> zeroinitializer
; MASKED-PEEL-NEXT:    [[TMP9:%.*]] = add <4 x i32> [[UNI_PHI6IND_START_BCAST_SPLAT0]], <i32 0, i32 1, i32 2, i32 3>
; MASKED-PEEL-NEXT:    [[N_ADJST0:%.*]] = sub nuw nsw i32 [[N0]], 1
; MASKED-PEEL-NEXT:    [[N_MOD_VF0:%.*]] = urem i32 [[N_ADJST0]], 4
; MASKED-PEEL-NEXT:    [[N_VEC0:%.*]] = sub nuw nsw i32 [[N0]], [[N_MOD_VF0]]
; MASKED-PEEL-NEXT:    br label [[VECTOR_BODY0:%.*]]
; MASKED-PEEL-EMPTY:
; MASKED-PEEL-NEXT:  vector.body:
; MASKED-PEEL-NEXT:    [[UNI_PHI110:%.*]] = phi i32 [ [[UNI_PHI60]], [[VPLANNEDBB90]] ], [ [[TMP11:%.*]], [[VECTOR_BODY0]] ]
; MASKED-PEEL-NEXT:    [[VEC_PHI120:%.*]] = phi <4 x i32> [ [[TMP9]], [[VPLANNEDBB90]] ], [ [[TMP10:%.*]], [[VECTOR_BODY0]] ]
; MASKED-PEEL-NEXT:    [[TMP10]] = add nsw <4 x i32> [[VEC_PHI120]], <i32 4, i32 4, i32 4, i32 4>
; MASKED-PEEL-NEXT:    [[TMP11]] = add nsw i32 [[UNI_PHI110]], 4
; MASKED-PEEL-NEXT:    [[TMP12:%.*]] = icmp uge i32 [[TMP11]], [[N_VEC0]]
; MASKED-PEEL-NEXT:    br i1 [[TMP12]], label [[VPLANNEDBB130:%.*]], label [[VECTOR_BODY0]], !llvm.loop !0
; MASKED-PEEL-EMPTY:
; MASKED-PEEL-NEXT:  VPlannedBB13:
; MASKED-PEEL-NEXT:    [[TMP13:%.*]] = mul i32 1, [[N_VEC0]]
; MASKED-PEEL-NEXT:    [[TMP14:%.*]] = add i32 0, [[TMP13]]
; MASKED-PEEL-NEXT:    br label [[VPLANNEDBB140:%.*]]
; MASKED-PEEL-EMPTY:
; MASKED-PEEL-NEXT:  VPlannedBB14:
; MASKED-PEEL-NEXT:    br label [[VPLANNEDBB150:%.*]]
; MASKED-PEEL-EMPTY:
; MASKED-PEEL-NEXT:  VPlannedBB15:
; MASKED-PEEL-NEXT:    [[TMP15:%.*]] = icmp eq i32 [[N0]], [[N_VEC0]]
; MASKED-PEEL-NEXT:    br i1 [[TMP15]], label [[FINAL_MERGE0:%.*]], label %[[MERGE_BLK0]]
; MASKED-PEEL-EMPTY:
; MASKED-PEEL-NEXT:  [[MERGE_BLK0]]:
; MASKED-PEEL-NEXT:    [[UNI_PHI160:%.*]] = phi i32 [ [[TMP14]], [[VPLANNEDBB150]] ], [ 0, %[[PEEL_CHECKV0]] ], [ [[UNI_PHI60]], [[VPLANNEDBB70]] ]
; MASKED-PEEL-NEXT:    br label %[[REMBLK0:.*]]
; MASKED-PEEL-EMPTY:
; MASKED-PEEL-NEXT:  [[REMBLK0]]:
; MASKED-PEEL-NEXT:    br label [[FOR_BODY0:%.*]]
; MASKED-PEEL-EMPTY:
; MASKED-PEEL-NEXT:  VPlannedBB17:
; MASKED-PEEL-NEXT:    br label [[FINAL_MERGE0]]
; MASKED-PEEL-EMPTY:
; MASKED-PEEL-NEXT:  final.merge:
; MASKED-PEEL-NEXT:    [[UNI_PHI180:%.*]] = phi i32 [ [[IV_NEXT0:%.*]], [[VPLANNEDBB170:%.*]] ], [ [[TMP14]], [[VPLANNEDBB150]] ]
; MASKED-PEEL-NEXT:    br label [[LOOPEXIT0:%.*]]
; MASKED-PEEL-EMPTY:
; MASKED-PEEL-NEXT:  for.body:
; MASKED-PEEL-NEXT:    [[IV0:%.*]] = phi i32 [ [[UNI_PHI160]], %[[REMBLK0]] ], [ [[IV_NEXT0]], [[FOR_BODY0]] ]
; MASKED-PEEL-NEXT:    [[IV_NEXT0]] = add nsw i32 [[IV0]], 1
; MASKED-PEEL-NEXT:    [[BOTTOM_TEST0:%.*]] = icmp eq i32 [[IV_NEXT0]], [[N0]]
; MASKED-PEEL-NEXT:    br i1 [[BOTTOM_TEST0]], label [[VPLANNEDBB170]], label [[FOR_BODY0]], !llvm.loop !2
; MASKED-PEEL-EMPTY:
; MASKED-PEEL-NEXT:  loopexit:
; MASKED-PEEL-NEXT:    [[LCSSA_PHI0:%.*]] = phi i32 [ [[UNI_PHI180]], [[FINAL_MERGE0]] ]
; MASKED-PEEL-NEXT:    [[ADD_FINAL0:%.*]] = add nsw i32 [[LCSSA_PHI0]], 1
; MASKED-PEEL-NEXT:    br label [[EXITBB0:%.*]]
; MASKED-PEEL-EMPTY:
; MASKED-PEEL-NEXT:  exitbb:
; MASKED-PEEL-NEXT:    br label [[EXIT0:%.*]]
; MASKED-PEEL-EMPTY:
; MASKED-PEEL-NEXT:  exit:
; MASKED-PEEL-NEXT:    ret void
; MASKED-PEEL-NEXT:  }
;
; MASKED-REMAINDER:  define void @main(i32 [[N0:%.*]]) {
; MASKED-REMAINDER-NEXT:  entry:
; MASKED-REMAINDER-NEXT:    br label [[PREHEADER0:%.*]]
; MASKED-REMAINDER-EMPTY:
; MASKED-REMAINDER-NEXT:  preheader:
; MASKED-REMAINDER-NEXT:    br label [[VPLANNEDBB0:%.*]]
; MASKED-REMAINDER-EMPTY:
; MASKED-REMAINDER-NEXT:  VPlannedBB:
; MASKED-REMAINDER-NEXT:    [[TMP0:%.*]] = and i32 [[N0]], -4
; MASKED-REMAINDER-NEXT:    [[TMP1:%.*]] = icmp eq i32 0, [[TMP0]]
; MASKED-REMAINDER-NEXT:    br i1 [[TMP1]], label %[[MERGE_BLK0:.*]], label [[VPLANNEDBB10:%.*]]
; MASKED-REMAINDER-EMPTY:
; MASKED-REMAINDER-NEXT:  VPlannedBB1:
; MASKED-REMAINDER-NEXT:    br label [[VPLANNEDBB20:%.*]]
; MASKED-REMAINDER-EMPTY:
; MASKED-REMAINDER-NEXT:  VPlannedBB2:
; MASKED-REMAINDER-NEXT:    [[TMP2:%.*]] = and i32 [[N0]], -4
; MASKED-REMAINDER-NEXT:    br label [[VECTOR_BODY0:%.*]]
; MASKED-REMAINDER-EMPTY:
; MASKED-REMAINDER-NEXT:  vector.body:
; MASKED-REMAINDER-NEXT:    [[UNI_PHI0:%.*]] = phi i32 [ 0, [[VPLANNEDBB20]] ], [ [[TMP4:%.*]], [[VECTOR_BODY0]] ]
; MASKED-REMAINDER-NEXT:    [[VEC_PHI0:%.*]] = phi <4 x i32> [ <i32 0, i32 1, i32 2, i32 3>, [[VPLANNEDBB20]] ], [ [[TMP3:%.*]], [[VECTOR_BODY0]] ]
; MASKED-REMAINDER-NEXT:    [[TMP3]] = add nsw <4 x i32> [[VEC_PHI0]], <i32 4, i32 4, i32 4, i32 4>
; MASKED-REMAINDER-NEXT:    [[TMP4]] = add nsw i32 [[UNI_PHI0]], 4
; MASKED-REMAINDER-NEXT:    [[TMP5:%.*]] = icmp uge i32 [[TMP4]], [[TMP2]]
; MASKED-REMAINDER-NEXT:    br i1 [[TMP5]], label [[VPLANNEDBB40:%.*]], label [[VECTOR_BODY0]], !llvm.loop !0
; MASKED-REMAINDER-EMPTY:
; MASKED-REMAINDER-NEXT:  VPlannedBB4:
; MASKED-REMAINDER-NEXT:    [[TMP6:%.*]] = mul i32 1, [[TMP2]]
; MASKED-REMAINDER-NEXT:    [[TMP7:%.*]] = add i32 0, [[TMP6]]
; MASKED-REMAINDER-NEXT:    br label [[VPLANNEDBB50:%.*]]
; MASKED-REMAINDER-EMPTY:
; MASKED-REMAINDER-NEXT:  VPlannedBB5:
; MASKED-REMAINDER-NEXT:    br label [[VPLANNEDBB60:%.*]]
; MASKED-REMAINDER-EMPTY:
; MASKED-REMAINDER-NEXT:  VPlannedBB6:
; MASKED-REMAINDER-NEXT:    [[TMP8:%.*]] = icmp eq i32 [[N0]], [[TMP2]]
; MASKED-REMAINDER-NEXT:    br i1 [[TMP8]], label [[FINAL_MERGE0:%.*]], label %[[MERGE_BLK0]]
; MASKED-REMAINDER-EMPTY:
; MASKED-REMAINDER-NEXT:  [[MERGE_BLK0]]:
; MASKED-REMAINDER-NEXT:    [[UNI_PHI70:%.*]] = phi i32 [ [[TMP7]], [[VPLANNEDBB60]] ], [ 0, [[VPLANNEDBB0]] ]
; MASKED-REMAINDER-NEXT:    [[BROADCAST_SPLATINSERT0:%.*]] = insertelement <4 x i32> poison, i32 [[UNI_PHI70]], i32 0
; MASKED-REMAINDER-NEXT:    [[BROADCAST_SPLAT0:%.*]] = shufflevector <4 x i32> [[BROADCAST_SPLATINSERT0]], <4 x i32> poison, <4 x i32> zeroinitializer
; MASKED-REMAINDER-NEXT:    br label [[VPLANNEDBB80:%.*]]
; MASKED-REMAINDER-EMPTY:
; MASKED-REMAINDER-NEXT:  VPlannedBB8:
; MASKED-REMAINDER-NEXT:    br label [[VPLANNEDBB90:%.*]]
; MASKED-REMAINDER-EMPTY:
; MASKED-REMAINDER-NEXT:  VPlannedBB9:
; MASKED-REMAINDER-NEXT:    [[TMP9:%.*]] = sub i32 [[N0]], [[UNI_PHI70]]
; MASKED-REMAINDER-NEXT:    [[BROADCAST_SPLATINSERT130:%.*]] = insertelement <4 x i32> poison, i32 [[TMP9]], i32 0
; MASKED-REMAINDER-NEXT:    [[BROADCAST_SPLAT140:%.*]] = shufflevector <4 x i32> [[BROADCAST_SPLATINSERT130]], <4 x i32> poison, <4 x i32> zeroinitializer
; MASKED-REMAINDER-NEXT:    br label [[VPLANNEDBB100:%.*]]
; MASKED-REMAINDER-EMPTY:
; MASKED-REMAINDER-NEXT:  VPlannedBB10:
; MASKED-REMAINDER-NEXT:    [[UNI_PHI110:%.*]] = phi i32 [ 0, [[VPLANNEDBB90]] ], [ [[TMP13:%.*]], [[NEW_LATCH0:%.*]] ]
; MASKED-REMAINDER-NEXT:    [[VEC_PHI120:%.*]] = phi <4 x i32> [ <i32 0, i32 1, i32 2, i32 3>, [[VPLANNEDBB90]] ], [ [[TMP12:%.*]], [[NEW_LATCH0]] ]
; MASKED-REMAINDER-NEXT:    [[TMP10:%.*]] = add <4 x i32> [[VEC_PHI120]], [[BROADCAST_SPLAT0]]
; MASKED-REMAINDER-NEXT:    [[TMP11:%.*]] = icmp ult <4 x i32> [[VEC_PHI120]], [[BROADCAST_SPLAT140]]
; MASKED-REMAINDER-NEXT:    br label [[VPLANNEDBB150:%.*]]
; MASKED-REMAINDER-EMPTY:
; MASKED-REMAINDER-NEXT:  VPlannedBB15:
; MASKED-REMAINDER-NEXT:    br label [[NEW_LATCH0]]
; MASKED-REMAINDER-EMPTY:
; MASKED-REMAINDER-NEXT:  new_latch:
; MASKED-REMAINDER-NEXT:    [[TMP12]] = add nsw <4 x i32> [[VEC_PHI120]], <i32 4, i32 4, i32 4, i32 4>
; MASKED-REMAINDER-NEXT:    [[TMP13]] = add nsw i32 [[UNI_PHI110]], 4
; MASKED-REMAINDER-NEXT:    [[TMP14:%.*]] = icmp ult <4 x i32> [[TMP12]], [[BROADCAST_SPLAT140]]
; MASKED-REMAINDER-NEXT:    [[TMP15:%.*]] = bitcast <4 x i1> [[TMP14]] to i4
; MASKED-REMAINDER-NEXT:    [[TMP16:%.*]] = icmp eq i4 [[TMP15]], 0
; MASKED-REMAINDER-NEXT:    br i1 [[TMP16]], label [[VPLANNEDBB160:%.*]], label [[VPLANNEDBB100]]
; MASKED-REMAINDER-EMPTY:
; MASKED-REMAINDER-NEXT:  VPlannedBB16:
; MASKED-REMAINDER-NEXT:    [[TMP17:%.*]] = mul i32 1, [[N0]]
; MASKED-REMAINDER-NEXT:    [[TMP18:%.*]] = add i32 0, [[TMP17]]
; MASKED-REMAINDER-NEXT:    br label [[VPLANNEDBB170:%.*]]
; MASKED-REMAINDER-EMPTY:
; MASKED-REMAINDER-NEXT:  VPlannedBB17:
; MASKED-REMAINDER-NEXT:    br label [[FINAL_MERGE0]]
; MASKED-REMAINDER-EMPTY:
; MASKED-REMAINDER-NEXT:  final.merge:
; MASKED-REMAINDER-NEXT:    [[UNI_PHI180:%.*]] = phi i32 [ [[TMP18]], [[VPLANNEDBB170]] ], [ [[TMP7]], [[VPLANNEDBB60]] ]
; MASKED-REMAINDER-NEXT:    br label [[LOOPEXIT0:%.*]]
; MASKED-REMAINDER-EMPTY:
; MASKED-REMAINDER-NEXT:  for.body:
; MASKED-REMAINDER-NEXT:    [[IV0:%.*]] = phi i32 [ [[IV_NEXT0:%.*]], [[FOR_BODY0:%.*]] ]
; MASKED-REMAINDER-NEXT:    [[IV_NEXT0]] = add nsw i32 [[IV0]], 1
; MASKED-REMAINDER-NEXT:    [[BOTTOM_TEST0:%.*]] = icmp eq i32 [[IV_NEXT0]], [[N0]]
; MASKED-REMAINDER-NEXT:    br label [[FOR_BODY0]]
; MASKED-REMAINDER-EMPTY:
; MASKED-REMAINDER-NEXT:  loopexit:
; MASKED-REMAINDER-NEXT:    [[LCSSA_PHI0:%.*]] = phi i32 [ [[UNI_PHI180]], [[FINAL_MERGE0]] ]
; MASKED-REMAINDER-NEXT:    [[ADD_FINAL0:%.*]] = add nsw i32 [[LCSSA_PHI0]], 1
; MASKED-REMAINDER-NEXT:    br label [[EXITBB0:%.*]]
; MASKED-REMAINDER-EMPTY:
; MASKED-REMAINDER-NEXT:  exitbb:
; MASKED-REMAINDER-NEXT:    br label [[EXIT0:%.*]]
; MASKED-REMAINDER-EMPTY:
; MASKED-REMAINDER-NEXT:  exit:
; MASKED-REMAINDER-NEXT:    ret void
; MASKED-REMAINDER-NEXT:  }
;
; MASKED-PEEL-REMAINDER:  define void @main(i32 [[N0:%.*]]) {
; MASKED-PEEL-REMAINDER-NEXT:  entry:
; MASKED-PEEL-REMAINDER-NEXT:    br label [[PREHEADER0:%.*]]
; MASKED-PEEL-REMAINDER-EMPTY:
; MASKED-PEEL-REMAINDER-NEXT:  preheader:
; MASKED-PEEL-REMAINDER-NEXT:    br label %[[PEEL_CHECKZ0:.*]]
; MASKED-PEEL-REMAINDER-EMPTY:
; MASKED-PEEL-REMAINDER-NEXT:  [[PEEL_CHECKZ0]]:
; MASKED-PEEL-REMAINDER-NEXT:    br label %[[PEEL_CHECKV0:.*]]
; MASKED-PEEL-REMAINDER-EMPTY:
; MASKED-PEEL-REMAINDER-NEXT:  [[PEEL_CHECKV0]]:
; MASKED-PEEL-REMAINDER-NEXT:    [[TMP0:%.*]] = icmp ugt i32 5, [[N0]]
; MASKED-PEEL-REMAINDER-NEXT:    br i1 [[TMP0]], label %[[MERGE_BLK0:.*]], label [[VPLANNEDBB0:%.*]]
; MASKED-PEEL-REMAINDER-EMPTY:
; MASKED-PEEL-REMAINDER-NEXT:  VPlannedBB:
; MASKED-PEEL-REMAINDER-NEXT:    br label [[VPLANNEDBB10:%.*]]
; MASKED-PEEL-REMAINDER-EMPTY:
; MASKED-PEEL-REMAINDER-NEXT:  VPlannedBB1:
; MASKED-PEEL-REMAINDER-NEXT:    br label [[VPLANNEDBB20:%.*]]
; MASKED-PEEL-REMAINDER-EMPTY:
; MASKED-PEEL-REMAINDER-NEXT:  VPlannedBB2:
; MASKED-PEEL-REMAINDER-NEXT:    [[UNI_PHI0:%.*]] = phi i32 [ 0, [[VPLANNEDBB10]] ], [ [[TMP4:%.*]], [[NEW_LATCH0:%.*]] ]
; MASKED-PEEL-REMAINDER-NEXT:    [[VEC_PHI0:%.*]] = phi <4 x i32> [ <i32 0, i32 1, i32 2, i32 3>, [[VPLANNEDBB10]] ], [ [[TMP3:%.*]], [[NEW_LATCH0]] ]
; MASKED-PEEL-REMAINDER-NEXT:    [[TMP1:%.*]] = add <4 x i32> [[VEC_PHI0]], zeroinitializer
; MASKED-PEEL-REMAINDER-NEXT:    [[TMP2:%.*]] = icmp ult <4 x i32> [[VEC_PHI0]], <i32 1, i32 1, i32 1, i32 1>
; MASKED-PEEL-REMAINDER-NEXT:    br label [[VPLANNEDBB30:%.*]]
; MASKED-PEEL-REMAINDER-EMPTY:
; MASKED-PEEL-REMAINDER-NEXT:  VPlannedBB3:
; MASKED-PEEL-REMAINDER-NEXT:    br label [[NEW_LATCH0]]
; MASKED-PEEL-REMAINDER-EMPTY:
; MASKED-PEEL-REMAINDER-NEXT:  new_latch:
; MASKED-PEEL-REMAINDER-NEXT:    [[TMP3]] = add nsw <4 x i32> [[VEC_PHI0]], <i32 4, i32 4, i32 4, i32 4>
; MASKED-PEEL-REMAINDER-NEXT:    [[TMP4]] = add nsw i32 [[UNI_PHI0]], 4
; MASKED-PEEL-REMAINDER-NEXT:    [[TMP5:%.*]] = icmp ult <4 x i32> [[TMP3]], <i32 1, i32 1, i32 1, i32 1>
; MASKED-PEEL-REMAINDER-NEXT:    [[TMP6:%.*]] = bitcast <4 x i1> [[TMP5]] to i4
; MASKED-PEEL-REMAINDER-NEXT:    [[TMP7:%.*]] = icmp eq i4 [[TMP6]], 0
; MASKED-PEEL-REMAINDER-NEXT:    br i1 [[TMP7]], label [[VPLANNEDBB40:%.*]], label [[VPLANNEDBB20]]
; MASKED-PEEL-REMAINDER-EMPTY:
; MASKED-PEEL-REMAINDER-NEXT:  VPlannedBB4:
; MASKED-PEEL-REMAINDER-NEXT:    br label [[VPLANNEDBB50:%.*]]
; MASKED-PEEL-REMAINDER-EMPTY:
; MASKED-PEEL-REMAINDER-NEXT:  VPlannedBB5:
; MASKED-PEEL-REMAINDER-NEXT:    br label %[[MERGE_BLK1:.*]]
; MASKED-PEEL-REMAINDER-EMPTY:
; MASKED-PEEL-REMAINDER-NEXT:  [[MERGE_BLK1]]:
; MASKED-PEEL-REMAINDER-NEXT:    [[UNI_PHI60:%.*]] = phi i32 [ 1, [[VPLANNEDBB50]] ]
; MASKED-PEEL-REMAINDER-NEXT:    br label [[VPLANNEDBB70:%.*]]
; MASKED-PEEL-REMAINDER-EMPTY:
; MASKED-PEEL-REMAINDER-NEXT:  VPlannedBB7:
; MASKED-PEEL-REMAINDER-NEXT:    [[TMP8:%.*]] = icmp ugt i32 5, [[N0]]
; MASKED-PEEL-REMAINDER-NEXT:    br i1 [[TMP8]], label %[[MERGE_BLK0:.*]], label [[VPLANNEDBB80:%.*]]
; MASKED-PEEL-REMAINDER-EMPTY:
; MASKED-PEEL-REMAINDER-NEXT:  VPlannedBB8:
; MASKED-PEEL-REMAINDER-NEXT:    br label [[VPLANNEDBB90:%.*]]
; MASKED-PEEL-REMAINDER-EMPTY:
; MASKED-PEEL-REMAINDER-NEXT:  VPlannedBB9:
; MASKED-PEEL-REMAINDER-NEXT:    [[UNI_PHI6IND_START_BCAST_SPLATINSERT0:%.*]] = insertelement <4 x i32> poison, i32 [[UNI_PHI60]], i32 0
; MASKED-PEEL-REMAINDER-NEXT:    [[UNI_PHI6IND_START_BCAST_SPLAT0:%.*]] = shufflevector <4 x i32> [[UNI_PHI6IND_START_BCAST_SPLATINSERT0]], <4 x i32> poison, <4 x i32> zeroinitializer
; MASKED-PEEL-REMAINDER-NEXT:    [[TMP9:%.*]] = add <4 x i32> [[UNI_PHI6IND_START_BCAST_SPLAT0]], <i32 0, i32 1, i32 2, i32 3>
; MASKED-PEEL-REMAINDER-NEXT:    [[N_ADJST0:%.*]] = sub nuw nsw i32 [[N0]], 1
; MASKED-PEEL-REMAINDER-NEXT:    [[N_MOD_VF0:%.*]] = urem i32 [[N_ADJST0]], 4
; MASKED-PEEL-REMAINDER-NEXT:    [[N_VEC0:%.*]] = sub nuw nsw i32 [[N0]], [[N_MOD_VF0]]
; MASKED-PEEL-REMAINDER-NEXT:    br label [[VECTOR_BODY0:%.*]]
; MASKED-PEEL-REMAINDER-EMPTY:
; MASKED-PEEL-REMAINDER-NEXT:  vector.body:
; MASKED-PEEL-REMAINDER-NEXT:    [[UNI_PHI110:%.*]] = phi i32 [ [[UNI_PHI60]], [[VPLANNEDBB90]] ], [ [[TMP11:%.*]], [[VECTOR_BODY0]] ]
; MASKED-PEEL-REMAINDER-NEXT:    [[VEC_PHI120:%.*]] = phi <4 x i32> [ [[TMP9]], [[VPLANNEDBB90]] ], [ [[TMP10:%.*]], [[VECTOR_BODY0]] ]
; MASKED-PEEL-REMAINDER-NEXT:    [[TMP10]] = add nsw <4 x i32> [[VEC_PHI120]], <i32 4, i32 4, i32 4, i32 4>
; MASKED-PEEL-REMAINDER-NEXT:    [[TMP11]] = add nsw i32 [[UNI_PHI110]], 4
; MASKED-PEEL-REMAINDER-NEXT:    [[TMP12:%.*]] = icmp uge i32 [[TMP11]], [[N_VEC0]]
; MASKED-PEEL-REMAINDER-NEXT:    br i1 [[TMP12]], label [[VPLANNEDBB130:%.*]], label [[VECTOR_BODY0]], !llvm.loop !0
; MASKED-PEEL-REMAINDER-EMPTY:
; MASKED-PEEL-REMAINDER-NEXT:  VPlannedBB13:
; MASKED-PEEL-REMAINDER-NEXT:    [[TMP13:%.*]] = mul i32 1, [[N_VEC0]]
; MASKED-PEEL-REMAINDER-NEXT:    [[TMP14:%.*]] = add i32 0, [[TMP13]]
; MASKED-PEEL-REMAINDER-NEXT:    br label [[VPLANNEDBB140:%.*]]
; MASKED-PEEL-REMAINDER-EMPTY:
; MASKED-PEEL-REMAINDER-NEXT:  VPlannedBB14:
; MASKED-PEEL-REMAINDER-NEXT:    br label [[VPLANNEDBB150:%.*]]
; MASKED-PEEL-REMAINDER-EMPTY:
; MASKED-PEEL-REMAINDER-NEXT:  VPlannedBB15:
; MASKED-PEEL-REMAINDER-NEXT:    [[TMP15:%.*]] = icmp eq i32 [[N0]], [[N_VEC0]]
; MASKED-PEEL-REMAINDER-NEXT:    br i1 [[TMP15]], label [[FINAL_MERGE0:%.*]], label %[[MERGE_BLK0]]
; MASKED-PEEL-REMAINDER-EMPTY:
; MASKED-PEEL-REMAINDER-NEXT:  [[MERGE_BLK0]]:
; MASKED-PEEL-REMAINDER-NEXT:    [[UNI_PHI160:%.*]] = phi i32 [ [[TMP14]], [[VPLANNEDBB150]] ], [ 0, %[[PEEL_CHECKV0]] ], [ [[UNI_PHI60]], [[VPLANNEDBB70]] ]
; MASKED-PEEL-REMAINDER-NEXT:    [[BROADCAST_SPLATINSERT0:%.*]] = insertelement <4 x i32> poison, i32 [[UNI_PHI160]], i32 0
; MASKED-PEEL-REMAINDER-NEXT:    [[BROADCAST_SPLAT0:%.*]] = shufflevector <4 x i32> [[BROADCAST_SPLATINSERT0]], <4 x i32> poison, <4 x i32> zeroinitializer
; MASKED-PEEL-REMAINDER-NEXT:    br label [[VPLANNEDBB170:%.*]]
; MASKED-PEEL-REMAINDER-EMPTY:
; MASKED-PEEL-REMAINDER-NEXT:  VPlannedBB17:
; MASKED-PEEL-REMAINDER-NEXT:    br label [[VPLANNEDBB180:%.*]]
; MASKED-PEEL-REMAINDER-EMPTY:
; MASKED-PEEL-REMAINDER-NEXT:  VPlannedBB18:
; MASKED-PEEL-REMAINDER-NEXT:    [[TMP16:%.*]] = sub i32 [[N0]], [[UNI_PHI160]]
; MASKED-PEEL-REMAINDER-NEXT:    [[BROADCAST_SPLATINSERT220:%.*]] = insertelement <4 x i32> poison, i32 [[TMP16]], i32 0
; MASKED-PEEL-REMAINDER-NEXT:    [[BROADCAST_SPLAT230:%.*]] = shufflevector <4 x i32> [[BROADCAST_SPLATINSERT220]], <4 x i32> poison, <4 x i32> zeroinitializer
; MASKED-PEEL-REMAINDER-NEXT:    br label [[VPLANNEDBB190:%.*]]
; MASKED-PEEL-REMAINDER-EMPTY:
; MASKED-PEEL-REMAINDER-NEXT:  VPlannedBB19:
; MASKED-PEEL-REMAINDER-NEXT:    [[UNI_PHI200:%.*]] = phi i32 [ 0, [[VPLANNEDBB180]] ], [ [[TMP20:%.*]], [[NEW_LATCH170:%.*]] ]
; MASKED-PEEL-REMAINDER-NEXT:    [[VEC_PHI210:%.*]] = phi <4 x i32> [ <i32 0, i32 1, i32 2, i32 3>, [[VPLANNEDBB180]] ], [ [[TMP19:%.*]], [[NEW_LATCH170]] ]
; MASKED-PEEL-REMAINDER-NEXT:    [[TMP17:%.*]] = add <4 x i32> [[VEC_PHI210]], [[BROADCAST_SPLAT0]]
; MASKED-PEEL-REMAINDER-NEXT:    [[TMP18:%.*]] = icmp ult <4 x i32> [[VEC_PHI210]], [[BROADCAST_SPLAT230]]
; MASKED-PEEL-REMAINDER-NEXT:    br label [[VPLANNEDBB240:%.*]]
; MASKED-PEEL-REMAINDER-EMPTY:
; MASKED-PEEL-REMAINDER-NEXT:  VPlannedBB24:
; MASKED-PEEL-REMAINDER-NEXT:    br label [[NEW_LATCH170]]
; MASKED-PEEL-REMAINDER-EMPTY:
; MASKED-PEEL-REMAINDER-NEXT:  new_latch17:
; MASKED-PEEL-REMAINDER-NEXT:    [[TMP19]] = add nsw <4 x i32> [[VEC_PHI210]], <i32 4, i32 4, i32 4, i32 4>
; MASKED-PEEL-REMAINDER-NEXT:    [[TMP20]] = add nsw i32 [[UNI_PHI200]], 4
; MASKED-PEEL-REMAINDER-NEXT:    [[TMP21:%.*]] = icmp ult <4 x i32> [[TMP19]], [[BROADCAST_SPLAT230]]
; MASKED-PEEL-REMAINDER-NEXT:    [[TMP22:%.*]] = bitcast <4 x i1> [[TMP21]] to i4
; MASKED-PEEL-REMAINDER-NEXT:    [[TMP23:%.*]] = icmp eq i4 [[TMP22]], 0
; MASKED-PEEL-REMAINDER-NEXT:    br i1 [[TMP23]], label [[VPLANNEDBB250:%.*]], label [[VPLANNEDBB190]]
; MASKED-PEEL-REMAINDER-EMPTY:
; MASKED-PEEL-REMAINDER-NEXT:  VPlannedBB25:
; MASKED-PEEL-REMAINDER-NEXT:    [[TMP24:%.*]] = mul i32 1, [[N0]]
; MASKED-PEEL-REMAINDER-NEXT:    [[TMP25:%.*]] = add i32 0, [[TMP24]]
; MASKED-PEEL-REMAINDER-NEXT:    br label [[VPLANNEDBB260:%.*]]
; MASKED-PEEL-REMAINDER-EMPTY:
; MASKED-PEEL-REMAINDER-NEXT:  VPlannedBB26:
; MASKED-PEEL-REMAINDER-NEXT:    br label [[FINAL_MERGE0]]
; MASKED-PEEL-REMAINDER-EMPTY:
; MASKED-PEEL-REMAINDER-NEXT:  final.merge:
; MASKED-PEEL-REMAINDER-NEXT:    [[UNI_PHI270:%.*]] = phi i32 [ [[TMP25]], [[VPLANNEDBB260]] ], [ [[TMP14]], [[VPLANNEDBB150]] ]
; MASKED-PEEL-REMAINDER-NEXT:    br label [[LOOPEXIT0:%.*]]
; MASKED-PEEL-REMAINDER-EMPTY:
; MASKED-PEEL-REMAINDER-NEXT:  for.body:
; MASKED-PEEL-REMAINDER-NEXT:    [[IV0:%.*]] = phi i32 [ [[IV_NEXT0:%.*]], [[FOR_BODY0:%.*]] ]
; MASKED-PEEL-REMAINDER-NEXT:    [[IV_NEXT0]] = add nsw i32 [[IV0]], 1
; MASKED-PEEL-REMAINDER-NEXT:    [[BOTTOM_TEST0:%.*]] = icmp eq i32 [[IV_NEXT0]], [[N0]]
; MASKED-PEEL-REMAINDER-NEXT:    br label [[FOR_BODY0]]
; MASKED-PEEL-REMAINDER-EMPTY:
; MASKED-PEEL-REMAINDER-NEXT:  loopexit:
; MASKED-PEEL-REMAINDER-NEXT:    [[LCSSA_PHI0:%.*]] = phi i32 [ [[UNI_PHI270]], [[FINAL_MERGE0]] ]
; MASKED-PEEL-REMAINDER-NEXT:    [[ADD_FINAL0:%.*]] = add nsw i32 [[LCSSA_PHI0]], 1
; MASKED-PEEL-REMAINDER-NEXT:    br label [[EXITBB0:%.*]]
; MASKED-PEEL-REMAINDER-EMPTY:
; MASKED-PEEL-REMAINDER-NEXT:  exitbb:
; MASKED-PEEL-REMAINDER-NEXT:    br label [[EXIT0:%.*]]
; MASKED-PEEL-REMAINDER-EMPTY:
; MASKED-PEEL-REMAINDER-NEXT:  exit:
; MASKED-PEEL-REMAINDER-NEXT:    ret void
; MASKED-PEEL-REMAINDER-NEXT:  }
;
entry:
  br label %preheader

preheader:
  %0 = call token @llvm.directive.region.entry() [ "DIR.OMP.SIMD"() ]
  br label %for.body

for.body:
  %iv = phi i32 [ 0, %preheader ], [ %iv.next, %for.body ]
  %iv.next = add nsw i32 %iv, 1
  %bottom_test = icmp eq i32 %iv.next, %N
  br i1 %bottom_test, label %loopexit, label %for.body

loopexit:
  %lcssa.phi = phi i32 [ %iv.next, %for.body ]
  %add.final = add nsw i32 %lcssa.phi, 1
  br label %exitbb

exitbb:
  call void @llvm.directive.region.exit(token %0) [ "DIR.OMP.END.SIMD"() ]
  br label %exit

exit:
  ret void
}

declare token @llvm.directive.region.entry() nounwind
declare void @llvm.directive.region.exit(token) nounwind
