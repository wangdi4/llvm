; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt < %s -passes=slp-vectorizer -enable-intel-advanced-opts -mtriple=x86_64 -mattr=+avx2 -slp-threshold=-10 -S | FileCheck %s

define i32 @test(i32* noalias nocapture readonly %ptr) {
; CHECK-LABEL: @test(
; CHECK-NEXT:    [[GEP51:%.*]] = getelementptr inbounds i32, i32* [[PTR:%.*]], i64 51
; CHECK-NEXT:    [[GEP50:%.*]] = getelementptr inbounds i32, i32* [[PTR]], i64 50
; CHECK-NEXT:    [[GEP53:%.*]] = getelementptr inbounds i32, i32* [[PTR]], i64 53
; CHECK-NEXT:    [[LD51:%.*]] = load i32, i32* [[GEP51]], align 4
; CHECK-NEXT:    [[LD50:%.*]] = load i32, i32* [[GEP50]], align 4
; CHECK-NEXT:    [[LD53:%.*]] = load i32, i32* [[GEP53]], align 4
; CHECK-NEXT:    [[TMP1:%.*]] = insertelement <2 x i32> poison, i32 [[LD50]], i32 0
; CHECK-NEXT:    [[TMP2:%.*]] = insertelement <2 x i32> [[TMP1]], i32 [[LD53]], i32 1
; CHECK-NEXT:    [[TMP3:%.*]] = insertelement <2 x i32> poison, i32 [[LD53]], i32 0
; CHECK-NEXT:    [[TMP4:%.*]] = insertelement <2 x i32> [[TMP3]], i32 [[LD51]], i32 1
; CHECK-NEXT:    [[TMP5:%.*]] = sub nsw <2 x i32> [[TMP2]], [[TMP4]]
; CHECK-NEXT:    [[TMP6:%.*]] = add <2 x i32> [[TMP2]], [[TMP4]]
; CHECK-NEXT:    [[TMP7:%.*]] = shufflevector <2 x i32> [[TMP5]], <2 x i32> [[TMP6]], <2 x i32> <i32 0, i32 3>
; CHECK-NEXT:    [[TMP8:%.*]] = extractelement <2 x i32> [[TMP7]], i32 0
; CHECK-NEXT:    [[TMP9:%.*]] = extractelement <2 x i32> [[TMP7]], i32 1
; CHECK-NEXT:    [[RES:%.*]] = add i32 [[TMP8]], [[TMP9]]
; CHECK-NEXT:    ret i32 [[RES]]
;
  %gep51 = getelementptr inbounds i32, i32* %ptr, i64 51
  %ld51 = load i32, i32* %gep51, align 4

  %gep50 = getelementptr inbounds i32, i32* %ptr, i64 50
  %ld50  = load i32, i32* %gep50, align 4

  %gep53 = getelementptr inbounds i32, i32* %ptr, i64 53
  %ld53 = load i32, i32* %gep53, align 4

  %mn.0 = sub nsw i32 %ld50, %ld53
  %mn.1 = add i32 %ld53, %ld51

  %res = add i32 %mn.0, %mn.1

  ret i32 %res
}

