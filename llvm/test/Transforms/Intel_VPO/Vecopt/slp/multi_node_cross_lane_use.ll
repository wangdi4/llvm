; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt < %s -passes=slp-vectorizer -enable-intel-advanced-opts -slp-multinode -mtriple=x86_64 -mattr=+avx2 -slp-max-look-ahead-depth=6 -S | FileCheck %s

; Jira: CMPLRLLVM-33821
define void @main(ptr %arg, i32 %arg1, i32 %arg2) {
; CHECK-LABEL: define {{[^@]+}}@main(
; CHECK-NEXT:  bb:
; CHECK-NEXT:    [[T3:%.*]] = getelementptr i32, ptr [[ARG:%.*]], i64 0
; CHECK-NEXT:    [[T6:%.*]] = add i32 [[ARG2:%.*]], 42
; CHECK-NEXT:    [[TMP0:%.*]] = insertelement <4 x i32> poison, i32 [[ARG2]], i32 0
; CHECK-NEXT:    [[SHUFFLE:%.*]] = shufflevector <4 x i32> [[TMP0]], <4 x i32> poison, <4 x i32> zeroinitializer
; CHECK-NEXT:    [[TMP1:%.*]] = insertelement <4 x i32> <i32 7, i32 13, i32 13, i32 poison>, i32 [[T6]], i32 3
; CHECK-NEXT:    [[TMP2:%.*]] = add <4 x i32> [[SHUFFLE]], [[TMP1]]
; CHECK-NEXT:    [[TMP3:%.*]] = insertelement <4 x i32> <i32 7, i32 3, i32 poison, i32 9>, i32 [[T6]], i32 2
; CHECK-NEXT:    [[TMP4:%.*]] = add <4 x i32> [[TMP2]], [[TMP3]]
; CHECK-NEXT:    [[TMP5:%.*]] = insertelement <4 x i32> <i32 poison, i32 13, i32 13, i32 13>, i32 [[ARG2]], i32 0
; CHECK-NEXT:    [[TMP6:%.*]] = add <4 x i32> [[TMP5]], [[TMP4]]
; CHECK-NEXT:    [[TMP7:%.*]] = shufflevector <4 x i32> <i32 poison, i32 poison, i32 poison, i32 91>, <4 x i32> [[TMP4]], <4 x i32> <i32 5, i32 6, i32 7, i32 3>
; CHECK-NEXT:    [[TMP8:%.*]] = add <4 x i32> [[TMP6]], [[TMP7]]
; CHECK-NEXT:    store <4 x i32> [[TMP8]], ptr [[T3]], align 16
; CHECK-NEXT:    ret void
;
bb:
; Lane3:
;         %arg2   42
;          |  \   |
;          |   tmp6
;          |   /
;          tmp13   9
;             \   /
;       13   tmp14
;        \  /
;         tmp21  91
;          |    /
;          tmp22
; MultiNode tried to introduce 91 <->tmp6 reorder which is invalid, because
; tmp13/tmp14 are used in other lanes.
  %t = getelementptr i32, ptr %arg, i64 1
  %t3 = getelementptr i32, ptr %arg, i64 0
  %t4 = getelementptr i32, ptr %arg, i64 2
  %t5 = getelementptr i32, ptr %arg, i64 3
  %t6 = add i32 %arg2, 42
  %t7 = add i32 %arg2, 7
  %t8 = add i32 %t7, 7
  %t9 = add i32 %arg2, 13
  %t10 = add i32 %t9, 3
  %t11 = add i32 %arg2, 13
  %t12 = add i32 %t11, %t6
  %t13 = add i32 %arg2, %t6
  %t14 = add i32 %t13, 9
  %t15 = add i32 %arg2, %t8
  %t16 = add i32 %t15, %t10
  %t17 = add i32 13, %t10
  %t18 = add i32 %t17, %t12
  %t19 = add i32 13, %t12
  %t20 = add i32 %t19, %t14
  %t21 = add i32 13, %t14
  %t22 = add i32 %t21, 91
  store i32 %t16, ptr %t3, align 16
  store i32 %t18, ptr %t, align 4
  store i32 %t20, ptr %t4, align 8
  store i32 %t22, ptr %t5, align 4
  ret void
}
