; Test to check the functionality of vectorization opt-report statistics
; tracker peel/remainder loops generated by LLVM-IR/HIR vectorizer.

; RUN: opt -passes=vplan-vec,intel-ir-optreport-emitter -vplan-vec-scenario="n0;v4;v2s1" -intel-opt-report=high -vplan-enable-masked-vectorized-remainder=0 < %s -disable-output 2>&1 | FileCheck %s --strict-whitespace -check-prefixes=CHECK,IR
; RUN: opt -passes=hir-ssa-deconstruction,hir-vplan-vec,hir-optreport-emitter -vplan-vec-scenario="n0;v4;v2s1" -intel-opt-report=high -vplan-enable-masked-vectorized-remainder=0 < %s -disable-output 2>&1 | FileCheck %s --strict-whitespace

; CHECK:      LOOP BEGIN
; CHECK-NEXT:     remark #15301: SIMD LOOP WAS VECTORIZED
; CHECK-NEXT:     remark #15305: vectorization support: vector length 4
; CHECK-NEXT:     remark #15475: --- begin vector loop cost summary ---
; CHECK-NEXT:     remark #15476: scalar cost: 37.000000
; CHECK-NEXT:     remark #15477: vector cost: 24.500000
; CHECK-NEXT:     remark #15478: estimated potential speedup: 1.500000
; CHECK-NEXT:     remark #15309: vectorization support: normalized vectorization overhead 0.000000
; CHECK-NEXT:     remark #15570: using scalar loop trip count: 300
; CHECK-NEXT:     remark #15482: vectorized math library calls: 1
; CHECK-NEXT:     remark #15484: vector function calls: 0
; CHECK-NEXT:     remark #15485: serialized function calls: 1
; IR-NEXT:        remark #15558: Call to function 'serial_call' was serialized due to no suitable vector variants were found.
; CHECK-NEXT:     remark #15488: --- end vector loop cost summary ---
; CHECK:      LOOP END
; CHECK-EMPTY:
; CHECK-NEXT: LOOP BEGIN
; CHECK-NEXT: <Remainder loop for vectorization>
; CHECK-NEXT:     remark #15439: remainder loop was vectorized (unmasked)
; CHECK-NEXT:     remark #15305: vectorization support: vector length 2
; CHECK-NEXT:     remark #15475: --- begin vector loop cost summary ---
; CHECK-NEXT:     remark #15482: vectorized math library calls: 1
; CHECK-NEXT:     remark #15484: vector function calls: 0
; CHECK-NEXT:     remark #15485: serialized function calls: 1
; IR-NEXT:        remark #15558: Call to function 'serial_call' was serialized due to no suitable vector variants were found.
; CHECK-NEXT:     remark #15488: --- end vector loop cost summary ---
; CHECK:      LOOP END
; CHECK-EMPTY: 
; CHECK-NEXT: LOOP BEGIN
; CHECK-NEXT: <Remainder loop for vectorization>
; CHECK-NEXT: LOOP END
; CHECK-NEXT: =================================================================


target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

declare void @serial_call() nounwind
declare double @llvm.sqrt.f64(double %val) #1
declare token @llvm.directive.region.entry()
declare void @llvm.directive.region.exit(token)

define void @test_calls() local_unnamed_addr {
entry:
  %tok = call token @llvm.directive.region.entry() [ "DIR.OMP.SIMD"() ]
  br label %header

header:
  %iv = phi i64 [ 0, %entry ], [ %iv.next, %header ]
  call void @serial_call()
  %d = sitofp i64 %iv to double
  ; Intrinsic
  %sqrt = call double @llvm.sqrt.f64(double %d)
  %iv.next = add nuw nsw i64 %iv, 1
  %exitcond = icmp eq i64 %iv.next, 300
  br i1 %exitcond, label %loop.exit, label %header

loop.exit:
  call void @llvm.directive.region.exit(token %tok) [ "DIR.OMP.END.SIMD"() ]
  ret void
}

attributes #1 = { nounwind readnone "target-features"="+fxsr,+mmx,+sse,+sse2,+x87,+avx,+avx2" }
