; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -passes=sroa -S -opaque-pointers < %s | FileCheck %s

define dso_local void @load(i1 %cond, ptr %alter) {
; CHECK-LABEL: @load(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    br i1 [[COND:%.*]], label [[A:%.*]], label [[B:%.*]]
; CHECK:       a:
; CHECK-NEXT:    [[TMP0:%.*]] = load i8, ptr [[ALTER:%.*]], align 1
; CHECK-NEXT:    br label [[B]]
; CHECK:       b:
; CHECK-NEXT:    [[ADDR_IF_SROA_SPECULATED:%.*]] = phi i8 [ [[TMP0]], [[A]] ], [ 106, [[ENTRY:%.*]] ]
; CHECK-NEXT:    ret void
;
entry:
  %j.addr.i = alloca i8, align 1
  store i8 106, ptr %j.addr.i, align 1
  br i1 %cond, label %a, label %b

a:
  br label %b

b:
  %addr.if = phi ptr [ %alter, %a ], [ %j.addr.i, %entry ]
  %val = load i8, ptr %addr.if, align 1
  ret void
}

define dso_local void @gep(i1 %cond, ptr %alter) {
; CHECK-LABEL: @gep(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    br i1 [[COND:%.*]], label [[A:%.*]], label [[B:%.*]]
; CHECK:       a:
; CHECK-NEXT:    [[TMP0:%.*]] = getelementptr { { i8 } }, ptr [[ALTER:%.*]], i32 0, i32 0, i32 0
; CHECK-NEXT:    [[TMP1:%.*]] = load i8, ptr [[TMP0]], align 1
; CHECK-NEXT:    br label [[B]]
; CHECK:       b:
; CHECK-NEXT:    [[ADDR_IF_SROA_SPECULATED:%.*]] = phi i8 [ [[TMP1]], [[A]] ], [ 106, [[ENTRY:%.*]] ]
; CHECK-NEXT:    ret void
;
entry:
  %j.addr.i = alloca i8, align 1
  store i8 106, ptr %j.addr.i, align 1
  br i1 %cond, label %a, label %b

a:
  br label %b

b:
  %addr.if = phi ptr [ %alter, %a ], [ %j.addr.i, %entry ]
  %addr.gep = getelementptr {{i8}}, ptr %addr.if, i32 0, i32 0, i32 0
  %val = load i8, ptr %addr.gep, align 1
  ret void
}

