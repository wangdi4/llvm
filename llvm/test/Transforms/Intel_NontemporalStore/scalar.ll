; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -enable-intel-advanced-opts -S -passes 'unaligned-nontemporal,verify' < %s | FileCheck %s
; RUN: opt -enable-intel-advanced-opts -S -unaligned-nontemporal -verify < %s | FileCheck %s
target triple = "x86_64-unknown-linux-gnu"

; Check that MOVNT for non-vector values don't get converted.
define void @example(i64* %dest) "target-features"="+avx512f" {
; CHECK-LABEL: @example(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    br label [[LOOP:%.*]]
; CHECK:       loop:
; CHECK-NEXT:    [[INDEX:%.*]] = phi i64 [ 0, [[ENTRY:%.*]] ], [ [[INDEX_NEXT:%.*]], [[LOOP]] ]
; CHECK-NEXT:    [[INDEX_NEXT]] = add i64 [[INDEX]], 1
; CHECK-NEXT:    [[ADDR:%.*]] = getelementptr inbounds i64, i64* [[DEST:%.*]], i64 [[INDEX]]
; CHECK-NEXT:    store i64 [[INDEX]], i64* [[ADDR]], align 1, !nontemporal !0
; CHECK-NEXT:    [[COND:%.*]] = icmp eq i64 [[INDEX]], 10000
; CHECK-NEXT:    br i1 [[COND]], label [[EXIT:%.*]], label [[LOOP]]
; CHECK:       exit:
; CHECK-NEXT:    ret void
;
entry:
  br label %loop

loop:
  %index = phi i64 [ 0, %entry ], [ %index.next, %loop ]
  %index.next = add i64 %index, 1
  %addr = getelementptr inbounds i64, i64* %dest, i64 %index
  store i64 %index, i64* %addr, align 1, !nontemporal !0
  %cond = icmp eq i64 %index, 10000
  br i1 %cond, label %exit, label %loop

exit:
  ret void
}

!0 = !{i32 1}
