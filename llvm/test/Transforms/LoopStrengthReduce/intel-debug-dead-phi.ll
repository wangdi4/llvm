; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -S -loop-reduce %s | FileCheck %s
; RUN: opt -S -passes="loop(loop-reduce)" %s | FileCheck %s

; Loop reduction was crashing while calling SCEV on an invalid node, trying
; to update the debug information for a dead phi.
; Only crashes on xmain, as llorg SCEV analysis gives up sooner.

target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

define internal void @wibble.72(i8* %arg8) #0 {
; CHECK-LABEL: @wibble.72(
; CHECK-NEXT:  bb:
; CHECK-NEXT:    br i1 undef, label [[BB10_PREHEADER:%.*]], label [[BB9:%.*]]
; CHECK:       bb10.preheader:
; CHECK-NEXT:    br label [[BB10:%.*]]
; CHECK:       bb9:
; CHECK-NEXT:    ret void
; CHECK:       bb10:
; CHECK-NEXT:    [[LSR_IV:%.*]] = phi i32 [ 0, [[BB10_PREHEADER]] ], [ [[LSR_IV_NEXT:%.*]], [[BB10]] ]
; CHECK-NEXT:    call void @llvm.dbg.value(metadata i8 undef, metadata [[META1:![0-9]+]], metadata !DIExpression()), !dbg [[DBG9:![0-9]+]]
; CHECK-NEXT:    [[T16:%.*]] = icmp eq i32 [[LSR_IV]], 0
; CHECK-NEXT:    [[LSR_IV_NEXT]] = add i32 [[LSR_IV]], -1
; CHECK-NEXT:    br label [[BB10]]
;
bb:
  %t = select i1 undef, i8* %arg8, i8* null
  br i1 undef, label %bb10, label %bb9

bb9:                                              ; preds = %bb
  ret void

bb10:                                             ; preds = %bb10, %bb
  %t11 = phi i32 [ %t15, %bb10 ], [ 0, %bb ]
  %t12 = phi i8* [ %t14, %bb10 ], [ %t, %bb ]
  call void @llvm.dbg.value(metadata i8* %t12, metadata !1, metadata !DIExpression()), !dbg !9
  %t13 = getelementptr inbounds i8, i8* %t12, i64 1
  %t14 = getelementptr inbounds i8, i8* %t13, i64 0
  %t15 = add nuw i32 %t11, 1
  %t16 = icmp eq i32 %t11, 0
  br label %bb10
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { "tune-cpu"="generic" }
attributes #1 = { nocallback nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{}
!llvm.module.flags = !{!0}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !DILocalVariable(name: "pp", arg: 9, scope: !2, file: !3, line: 1335, type: !7)
!2 = distinct !DISubprogram(name: "y", scope: !3, file: !3, line: 1335, type: !4, scopeLine: 1336, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !6)
!3 = !DIFile(filename: "x", directory: "x")
!4 = !DISubroutineType(types: !5)
!5 = !{null}
!6 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!7 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8, size: 64)
!8 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!9 = !DILocation(line: 0, scope: !2)
