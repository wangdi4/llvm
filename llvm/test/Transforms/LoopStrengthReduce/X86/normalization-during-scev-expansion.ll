; INTEL markup has been autogenerated by intel_update_markup.py
; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 3
; RUN: opt -loop-reduce -S %s | FileCheck %s

target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macos"

declare i1 @cond()

define ptr @test(ptr %dst, i64 %v4, i64 %v5, i64 %v6, i64 %v7)  {
; CHECK-LABEL: define ptr @test
; CHECK-SAME: (ptr [[DST:%.*]], i64 [[V4:%.*]], i64 [[V5:%.*]], i64 [[V6:%.*]], i64 [[V7:%.*]]) {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[TMP0:%.*]] = mul i64 [[V5]], [[V4]]
; CHECK-NEXT:    [[TMP1:%.*]] = shl i64 [[TMP0]], 4
; CHECK-NEXT:    [[TMP2:%.*]] = add i64 [[V7]], [[V6]]
; CHECK-NEXT:    [[TMP3:%.*]] = shl i64 [[TMP2]], 3
; CHECK-NEXT:    [[TMP4:%.*]] = add i64 [[TMP3]], -8
; CHECK-NEXT:    [[SCEVGEP:%.*]] = getelementptr i8, ptr [[DST]], i64 [[TMP4]]
; CHECK-NEXT:    [[TMP5:%.*]] = shl nsw i64 [[V5]], 3
; CHECK-NEXT:    [[TMP6:%.*]] = add i64 [[TMP5]], 8
; CHECK-NEXT:    [[TMP7:%.*]] = shl i64 [[V4]], 4
; CHECK-NEXT:    [[TMP8:%.*]] = add nuw nsw i64 [[TMP7]], 8
; CHECK-NEXT:    [[TMP9:%.*]] = mul i64 [[V5]], [[TMP8]]
; CHECK-NEXT:    [[TMP10:%.*]] = shl i64 [[V7]], 3
; CHECK-NEXT:    [[TMP11:%.*]] = shl i64 [[V6]], 3
; CHECK-NEXT:    [[TMP12:%.*]] = add i64 [[TMP10]], [[TMP11]]
; CHECK-NEXT:    [[TMP13:%.*]] = add i64 [[TMP12]], -8
; CHECK-NEXT:    [[SCEVGEP3:%.*]] = getelementptr i8, ptr [[DST]], i64 [[TMP13]]
; CHECK-NEXT:    br label [[LOOP:%.*]]
; CHECK:       loop:
; CHECK-NEXT:    [[LSR_IV4:%.*]] = phi ptr [ [[SCEVGEP5:%.*]], [[LOOP]] ], [ [[SCEVGEP3]], [[ENTRY:%.*]] ]
; CHECK-NEXT:    [[LSR_IV:%.*]] = phi ptr [ [[SCEVGEP1:%.*]], [[LOOP]] ], [ [[SCEVGEP]], [[ENTRY]] ]
; CHECK-NEXT:    [[SCEVGEP6:%.*]] = getelementptr i8, ptr [[LSR_IV4]], i64 [[TMP9]]
; CHECK-NEXT:    store i64 0, ptr [[SCEVGEP6]], align 8
; CHECK-NEXT:    [[C:%.*]] = call i1 @cond()
; CHECK-NEXT:    [[SCEVGEP1]] = getelementptr i8, ptr [[LSR_IV]], i64 [[TMP6]]
; CHECK-NEXT:    [[SCEVGEP2:%.*]] = getelementptr i8, ptr [[SCEVGEP1]], i64 [[TMP1]]
; CHECK-NEXT:    [[SCEVGEP5]] = getelementptr i8, ptr [[LSR_IV4]], i64 [[TMP6]]
; CHECK-NEXT:    br i1 [[C]], label [[EXIT:%.*]], label [[LOOP]]
; CHECK:       exit:
; CHECK-NEXT:    [[RES:%.*]] = phi ptr [ [[SCEVGEP2]], [[LOOP]] ]
; CHECK-NEXT:    ret ptr [[RES]]
;
entry:
  %mul = mul nsw i64 %v5, %v4
  %add.ptr162 = getelementptr inbounds i64, ptr %dst, i64 %v6
  %add.ptr164 = getelementptr inbounds i64, ptr %add.ptr162, i64 %mul
  %add.ptr166 = getelementptr inbounds i64, ptr %add.ptr164, i64 %v7
  %add.ptr167 = getelementptr inbounds i64, ptr %add.ptr166, i64 -1
  %add.ptr249 = getelementptr inbounds i64, ptr %add.ptr167, i64 %mul
  br label %loop

loop:
  %iv = phi ptr [ %add.ptr249, %entry ], [ %iv.next, %loop ]
  %gep.iv.1 = getelementptr inbounds i64, ptr %iv, i64 %v5
  store i64 0, ptr %gep.iv.1, align 8
  %iv.next = getelementptr inbounds i64, ptr %gep.iv.1, i64 1
  %c = call i1 @cond()
  br i1 %c, label %exit, label %loop

exit:
  %res = phi ptr [ %iv.next, %loop ]
  ret ptr %res
}

define i32 @test_pr63678(i1 %c) {
; CHECK-LABEL: define i32 @test_pr63678
; CHECK-SAME: (i1 [[C:%.*]]) {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    br label [[LOOP_1_PREHEADER:%.*]]
; CHECK:       bb:
; CHECK-NEXT:    [[TOBOOL1_NOT:%.*]] = icmp eq i32 [[LSR_IV_NEXT64:%.*]], 0 ;INTEL
; CHECK-NEXT:    br label [[LOOP_1_PREHEADER]]
; CHECK:       loop.1.preheader:
; CHECK-NEXT:    [[IV_PH:%.*]] = phi i32 [ 0, [[ENTRY:%.*]] ], [ 1, [[BB:%.*]] ]
; CHECK-NEXT:    br label [[LOOP_1:%.*]]
; CHECK:       loop.1:
; CHECK-NEXT:    [[IV:%.*]] = phi i32 [ [[IV_NEXT:%.*]], [[LOOP_1]] ], [ [[IV_PH]], [[LOOP_1_PREHEADER]] ] ;INTEL
; CHECK-NEXT:    [[IV_NEXT]] = add i32 [[IV]], 1 ;INTEL
; CHECK-NEXT:    br i1 false, label [[LOOP_1_LOOP_2_CRIT_EDGE:%.*]], label [[LOOP_1]]
; CHECK:       loop.1.loop.2_crit_edge:
; CHECK-NEXT:    [[TMP0:%.*]] = sub i32 30, [[IV]] ;INTEL
; CHECK-NEXT:    br label [[LOOP_2:%.*]]
; CHECK:       loop.2:
; CHECK-NEXT:    [[LSR_IV1057:%.*]] = phi i32 [ [[LSR_IV_NEXT1058:%.*]], [[LOOP_2]] ], [ [[TMP0]], [[LOOP_1_LOOP_2_CRIT_EDGE]] ] ;INTEL
; CHECK-NEXT:    [[LSR_IV_NEXT1058]] = add i32 [[LSR_IV1057]], -1 ;INTEL
; CHECK-NEXT:    br i1 false, label [[LOOP_3_PREHEADER:%.*]], label [[LOOP_2]]
; CHECK:       loop.3.preheader:
; CHECK-NEXT:    [[LSR_IV_NEXT1058_LCSSA:%.*]] = phi i32 [ [[LSR_IV_NEXT1058]], [[LOOP_2]] ] ;INTEL
; CHECK-NEXT:    br label [[LOOP_3:%.*]]
; CHECK:       loop.3:
; CHECK-NEXT:    [[LSR_IV1055:%.*]] = phi i32 [ [[LSR_IV_NEXT1058_LCSSA]], [[LOOP_3_PREHEADER]] ], [ [[LSR_IV_NEXT1056:%.*]], [[LOOP_3]] ] ;INTEL
; CHECK-NEXT:    [[LSR_IV_NEXT1056]] = add i32 [[LSR_IV1055]], -1 ;INTEL
; CHECK-NEXT:    br i1 false, label [[LOOP_4_PREHEADER:%.*]], label [[LOOP_3]]
; CHECK:       loop.4.preheader:
; CHECK-NEXT:    [[LSR_IV_NEXT1056_LCSSA:%.*]] = phi i32 [ [[LSR_IV_NEXT1056]], [[LOOP_3]] ] ;INTEL
; CHECK-NEXT:    br label [[LOOP_4:%.*]]
; CHECK:       loop.4:
; CHECK-NEXT:    [[LSR_IV1051:%.*]] = phi i32 [ [[LSR_IV_NEXT1056_LCSSA]], [[LOOP_4_PREHEADER]] ], [ [[LSR_IV_NEXT1052:%.*]], [[LOOP_4]] ] ;INTEL
; CHECK-NEXT:    [[LSR_IV_NEXT1052]] = add i32 [[LSR_IV1051]], -1 ;INTEL
; CHECK-NEXT:    br i1 false, label [[LOOP_5_PREHEADER:%.*]], label [[LOOP_4]]
; CHECK:       loop.5.preheader:
; CHECK-NEXT:    [[LSR_IV_NEXT1052_LCSSA:%.*]] = phi i32 [ [[LSR_IV_NEXT1052]], [[LOOP_4]] ] ;INTEL
; CHECK-NEXT:    br label [[LOOP_5:%.*]]
; CHECK:       loop.5:
; CHECK-NEXT:    [[LSR_IV1045:%.*]] = phi i32 [ [[LSR_IV_NEXT1052_LCSSA]], [[LOOP_5_PREHEADER]] ], [ [[LSR_IV_NEXT1046:%.*]], [[LOOP_5]] ] ;INTEL
; CHECK-NEXT:    [[LSR_IV_NEXT1046]] = add i32 [[LSR_IV1045]], -1 ;INTEL
; CHECK-NEXT:    br i1 false, label [[LOOP_6_PREHEADER:%.*]], label [[LOOP_5]]
; CHECK:       loop.6.preheader:
; CHECK-NEXT:    [[LSR_IV_NEXT1046_LCSSA:%.*]] = phi i32 [ [[LSR_IV_NEXT1046]], [[LOOP_5]] ] ;INTEL
; CHECK-NEXT:    br label [[LOOP_6:%.*]]
; CHECK:       loop.6:
; CHECK-NEXT:    [[LSR_IV1037:%.*]] = phi i32 [ [[LSR_IV_NEXT1046_LCSSA]], [[LOOP_6_PREHEADER]] ], [ [[LSR_IV_NEXT1038:%.*]], [[LOOP_6]] ] ;INTEL
; CHECK-NEXT:    [[LSR_IV_NEXT1038]] = add i32 [[LSR_IV1037]], -1 ;INTEL
; CHECK-NEXT:    br i1 false, label [[LOOP_135_PREHEADER:%.*]], label [[LOOP_6]]
; CHECK:       loop.135.preheader:
; CHECK-NEXT:    [[LSR_IV_NEXT1038_LCSSA:%.*]] = phi i32 [ [[LSR_IV_NEXT1038]], [[LOOP_6]] ] ;INTEL
; CHECK-NEXT:    br label [[LOOP_135:%.*]]
; CHECK:       loop.135:
; CHECK-NEXT:    [[LSR_IV1027:%.*]] = phi i32 [ [[LSR_IV_NEXT1038_LCSSA]], [[LOOP_135_PREHEADER]] ], [ [[LSR_IV_NEXT1028:%.*]], [[LOOP_135]] ] ;INTEL
; CHECK-NEXT:    [[LSR_IV_NEXT1028]] = add i32 [[LSR_IV1027]], -1 ;INTEL
; CHECK-NEXT:    br i1 false, label [[LOOP_1_1_PREHEADER:%.*]], label [[LOOP_135]]
; CHECK:       loop.1.1.preheader:
; CHECK-NEXT:    [[LSR_IV_NEXT1028_LCSSA:%.*]] = phi i32 [ [[LSR_IV_NEXT1028]], [[LOOP_135]] ] ;INTEL
; CHECK-NEXT:    br label [[LOOP_1_1:%.*]]
; CHECK:       loop.1.1:
; CHECK-NEXT:    [[LSR_IV1015:%.*]] = phi i32 [ [[LSR_IV_NEXT1028_LCSSA]], [[LOOP_1_1_PREHEADER]] ], [ [[LSR_IV_NEXT1016:%.*]], [[LOOP_1_1]] ] ;INTEL
; CHECK-NEXT:    [[LSR_IV_NEXT1016]] = add i32 [[LSR_IV1015]], -1 ;INTEL
; CHECK-NEXT:    br i1 false, label [[LOOP_2_1_PREHEADER:%.*]], label [[LOOP_1_1]]
; CHECK:       loop.2.1.preheader:
; CHECK-NEXT:    [[LSR_IV_NEXT1016_LCSSA:%.*]] = phi i32 [ [[LSR_IV_NEXT1016]], [[LOOP_1_1]] ] ;INTEL
; CHECK-NEXT:    br label [[LOOP_2_1:%.*]]
; CHECK:       loop.2.1:
; CHECK-NEXT:    [[LSR_IV1001:%.*]] = phi i32 [ [[LSR_IV_NEXT1016_LCSSA]], [[LOOP_2_1_PREHEADER]] ], [ [[LSR_IV_NEXT1002:%.*]], [[LOOP_2_1]] ] ;INTEL
; CHECK-NEXT:    [[LSR_IV_NEXT1002]] = add i32 [[LSR_IV1001]], -1 ;INTEL
; CHECK-NEXT:    br i1 false, label [[LOOP_3_1_PREHEADER:%.*]], label [[LOOP_2_1]]
; CHECK:       loop.3.1.preheader:
; CHECK-NEXT:    [[LSR_IV_NEXT1002_LCSSA:%.*]] = phi i32 [ [[LSR_IV_NEXT1002]], [[LOOP_2_1]] ] ;INTEL
; CHECK-NEXT:    br label [[LOOP_3_1:%.*]]
; CHECK:       loop.3.1:
; CHECK-NEXT:    [[LSR_IV985:%.*]] = phi i32 [ [[LSR_IV_NEXT1002_LCSSA]], [[LOOP_3_1_PREHEADER]] ], [ [[LSR_IV_NEXT986:%.*]], [[LOOP_3_1]] ] ;INTEL
; CHECK-NEXT:    [[LSR_IV_NEXT986]] = add i32 [[LSR_IV985]], -1 ;INTEL
; CHECK-NEXT:    br i1 false, label [[LOOP_4_1_PREHEADER:%.*]], label [[LOOP_3_1]]
; CHECK:       loop.4.1.preheader:
; CHECK-NEXT:    [[LSR_IV_NEXT986_LCSSA:%.*]] = phi i32 [ [[LSR_IV_NEXT986]], [[LOOP_3_1]] ] ;INTEL
; CHECK-NEXT:    br label [[LOOP_4_1:%.*]]
; CHECK:       loop.4.1:
; CHECK-NEXT:    [[LSR_IV967:%.*]] = phi i32 [ [[LSR_IV_NEXT986_LCSSA]], [[LOOP_4_1_PREHEADER]] ], [ [[LSR_IV_NEXT968:%.*]], [[LOOP_4_1]] ] ;INTEL
; CHECK-NEXT:    [[LSR_IV_NEXT968]] = add i32 [[LSR_IV967]], -1 ;INTEL
; CHECK-NEXT:    br i1 false, label [[LOOP_5_1_PREHEADER:%.*]], label [[LOOP_4_1]]
; CHECK:       loop.5.1.preheader:
; CHECK-NEXT:    [[LSR_IV_NEXT968_LCSSA:%.*]] = phi i32 [ [[LSR_IV_NEXT968]], [[LOOP_4_1]] ] ;INTEL
; CHECK-NEXT:    br label [[LOOP_5_1:%.*]]
; CHECK:       loop.5.1:
; CHECK-NEXT:    [[LSR_IV947:%.*]] = phi i32 [ [[LSR_IV_NEXT968_LCSSA]], [[LOOP_5_1_PREHEADER]] ], [ [[LSR_IV_NEXT948:%.*]], [[LOOP_5_1]] ] ;INTEL
; CHECK-NEXT:    [[LSR_IV_NEXT948]] = add i32 [[LSR_IV947]], -1 ;INTEL
; CHECK-NEXT:    br i1 false, label [[LOOP_6_1_PREHEADER:%.*]], label [[LOOP_5_1]]
; CHECK:       loop.6.1.preheader:
; CHECK-NEXT:    [[LSR_IV_NEXT948_LCSSA:%.*]] = phi i32 [ [[LSR_IV_NEXT948]], [[LOOP_5_1]] ] ;INTEL
; CHECK-NEXT:    br label [[LOOP_6_1:%.*]]
; CHECK:       loop.6.1:
; CHECK-NEXT:    [[LSR_IV925:%.*]] = phi i32 [ [[LSR_IV_NEXT948_LCSSA]], [[LOOP_6_1_PREHEADER]] ], [ [[LSR_IV_NEXT926:%.*]], [[LOOP_6_1]] ] ;INTEL
; CHECK-NEXT:    [[LSR_IV_NEXT926]] = add i32 [[LSR_IV925]], -1 ;INTEL
; CHECK-NEXT:    br i1 false, label [[LOOP_241_PREHEADER:%.*]], label [[LOOP_6_1]]
; CHECK:       loop.241.preheader:
; CHECK-NEXT:    [[LSR_IV_NEXT926_LCSSA:%.*]] = phi i32 [ [[LSR_IV_NEXT926]], [[LOOP_6_1]] ] ;INTEL
; CHECK-NEXT:    br label [[LOOP_241:%.*]]
; CHECK:       loop.241:
; CHECK-NEXT:    [[LSR_IV901:%.*]] = phi i32 [ [[LSR_IV_NEXT926_LCSSA]], [[LOOP_241_PREHEADER]] ], [ [[LSR_IV_NEXT902:%.*]], [[LOOP_241]] ] ;INTEL
; CHECK-NEXT:    [[LSR_IV_NEXT902]] = add i32 [[LSR_IV901]], -1 ;INTEL
; CHECK-NEXT:    br i1 false, label [[LOOP_1_2_PREHEADER:%.*]], label [[LOOP_241]]
; CHECK:       loop.1.2.preheader:
; CHECK-NEXT:    [[LSR_IV_NEXT902_LCSSA:%.*]] = phi i32 [ [[LSR_IV_NEXT902]], [[LOOP_241]] ] ;INTEL
; CHECK-NEXT:    br label [[LOOP_1_2:%.*]]
; CHECK:       loop.1.2:
; CHECK-NEXT:    [[LSR_IV875:%.*]] = phi i32 [ [[LSR_IV_NEXT902_LCSSA]], [[LOOP_1_2_PREHEADER]] ], [ [[LSR_IV_NEXT876:%.*]], [[LOOP_1_2]] ] ;INTEL
; CHECK-NEXT:    [[LSR_IV_NEXT876]] = add i32 [[LSR_IV875]], -1 ;INTEL
; CHECK-NEXT:    br i1 false, label [[LOOP_2_2_PREHEADER:%.*]], label [[LOOP_1_2]]
; CHECK:       loop.2.2.preheader:
; CHECK-NEXT:    [[LSR_IV_NEXT876_LCSSA:%.*]] = phi i32 [ [[LSR_IV_NEXT876]], [[LOOP_1_2]] ] ;INTEL
; CHECK-NEXT:    br label [[LOOP_2_2:%.*]]
; CHECK:       loop.2.2:
; CHECK-NEXT:    [[LSR_IV847:%.*]] = phi i32 [ [[LSR_IV_NEXT876_LCSSA]], [[LOOP_2_2_PREHEADER]] ], [ [[LSR_IV_NEXT848:%.*]], [[LOOP_2_2]] ] ;INTEL
; CHECK-NEXT:    [[LSR_IV_NEXT848]] = add i32 [[LSR_IV847]], -1 ;INTEL
; CHECK-NEXT:    br i1 false, label [[LOOP_3_2_PREHEADER:%.*]], label [[LOOP_2_2]]
; CHECK:       loop.3.2.preheader:
; CHECK-NEXT:    [[LSR_IV_NEXT848_LCSSA:%.*]] = phi i32 [ [[LSR_IV_NEXT848]], [[LOOP_2_2]] ] ;INTEL
; CHECK-NEXT:    br label [[LOOP_3_2:%.*]]
; CHECK:       loop.3.2:
; CHECK-NEXT:    [[LSR_IV817:%.*]] = phi i32 [ [[LSR_IV_NEXT848_LCSSA]], [[LOOP_3_2_PREHEADER]] ], [ [[LSR_IV_NEXT818:%.*]], [[LOOP_3_2]] ] ;INTEL
; CHECK-NEXT:    [[LSR_IV_NEXT818]] = add i32 [[LSR_IV817]], -1 ;INTEL
; CHECK-NEXT:    br i1 false, label [[LOOP_4_2_PREHEADER:%.*]], label [[LOOP_3_2]]
; CHECK:       loop.4.2.preheader:
; CHECK-NEXT:    [[LSR_IV_NEXT818_LCSSA:%.*]] = phi i32 [ [[LSR_IV_NEXT818]], [[LOOP_3_2]] ] ;INTEL
; CHECK-NEXT:    br label [[LOOP_4_2:%.*]]
; CHECK:       loop.4.2:
; CHECK-NEXT:    [[LSR_IV785:%.*]] = phi i32 [ [[LSR_IV_NEXT818_LCSSA]], [[LOOP_4_2_PREHEADER]] ], [ [[LSR_IV_NEXT786:%.*]], [[LOOP_4_2]] ] ;INTEL
; CHECK-NEXT:    [[LSR_IV_NEXT786]] = add i32 [[LSR_IV785]], -1 ;INTEL
; CHECK-NEXT:    br i1 false, label [[LOOP_5_2_PREHEADER:%.*]], label [[LOOP_4_2]]
; CHECK:       loop.5.2.preheader:
; CHECK-NEXT:    [[LSR_IV_NEXT786_LCSSA:%.*]] = phi i32 [ [[LSR_IV_NEXT786]], [[LOOP_4_2]] ] ;INTEL
; CHECK-NEXT:    br label [[LOOP_5_2:%.*]]
; CHECK:       loop.5.2:
; CHECK-NEXT:    [[LSR_IV751:%.*]] = phi i32 [ [[LSR_IV_NEXT786_LCSSA]], [[LOOP_5_2_PREHEADER]] ], [ [[LSR_IV_NEXT752:%.*]], [[LOOP_5_2]] ] ;INTEL
; CHECK-NEXT:    [[LSR_IV_NEXT752]] = add i32 [[LSR_IV751]], -1 ;INTEL
; CHECK-NEXT:    br i1 false, label [[LOOP_6_2_PREHEADER:%.*]], label [[LOOP_5_2]]
; CHECK:       loop.6.2.preheader:
; CHECK-NEXT:    [[LSR_IV_NEXT752_LCSSA:%.*]] = phi i32 [ [[LSR_IV_NEXT752]], [[LOOP_5_2]] ] ;INTEL
; CHECK-NEXT:    br label [[LOOP_6_2:%.*]]
; CHECK:       loop.6.2:
; CHECK-NEXT:    [[LSR_IV715:%.*]] = phi i32 [ [[LSR_IV_NEXT752_LCSSA]], [[LOOP_6_2_PREHEADER]] ], [ [[LSR_IV_NEXT716:%.*]], [[LOOP_6_2]] ] ;INTEL
; CHECK-NEXT:    [[LSR_IV_NEXT716]] = add i32 [[LSR_IV715]], -1 ;INTEL
; CHECK-NEXT:    br i1 false, label [[LOOP_347_PREHEADER:%.*]], label [[LOOP_6_2]]
; CHECK:       loop.347.preheader:
; CHECK-NEXT:    [[LSR_IV_NEXT716_LCSSA:%.*]] = phi i32 [ [[LSR_IV_NEXT716]], [[LOOP_6_2]] ] ;INTEL
; CHECK-NEXT:    br label [[LOOP_347:%.*]]
; CHECK:       loop.347:
; CHECK-NEXT:    [[LSR_IV677:%.*]] = phi i32 [ [[LSR_IV_NEXT716_LCSSA]], [[LOOP_347_PREHEADER]] ], [ [[LSR_IV_NEXT678:%.*]], [[LOOP_347]] ] ;INTEL
; CHECK-NEXT:    [[LSR_IV_NEXT678]] = add i32 [[LSR_IV677]], -1 ;INTEL
; CHECK-NEXT:    br i1 false, label [[LOOP_1_3_PREHEADER:%.*]], label [[LOOP_347]]
; CHECK:       loop.1.3.preheader:
; CHECK-NEXT:    [[LSR_IV_NEXT678_LCSSA:%.*]] = phi i32 [ [[LSR_IV_NEXT678]], [[LOOP_347]] ] ;INTEL
; CHECK-NEXT:    br label [[LOOP_1_3:%.*]]
; CHECK:       loop.1.3:
; CHECK-NEXT:    [[LSR_IV637:%.*]] = phi i32 [ [[LSR_IV_NEXT678_LCSSA]], [[LOOP_1_3_PREHEADER]] ], [ [[LSR_IV_NEXT638:%.*]], [[LOOP_1_3]] ] ;INTEL
; CHECK-NEXT:    [[LSR_IV_NEXT638]] = add i32 [[LSR_IV637]], -1 ;INTEL
; CHECK-NEXT:    br i1 false, label [[LOOP_2_3_PREHEADER:%.*]], label [[LOOP_1_3]]
; CHECK:       loop.2.3.preheader:
; CHECK-NEXT:    [[LSR_IV_NEXT638_LCSSA:%.*]] = phi i32 [ [[LSR_IV_NEXT638]], [[LOOP_1_3]] ] ;INTEL
; CHECK-NEXT:    br label [[LOOP_2_3:%.*]]
; CHECK:       loop.2.3:
; CHECK-NEXT:    [[LSR_IV595:%.*]] = phi i32 [ [[LSR_IV_NEXT638_LCSSA]], [[LOOP_2_3_PREHEADER]] ], [ [[LSR_IV_NEXT596:%.*]], [[LOOP_2_3]] ] ;INTEL
; CHECK-NEXT:    [[LSR_IV_NEXT596]] = add i32 [[LSR_IV595]], -1 ;INTEL
; CHECK-NEXT:    br i1 false, label [[LOOP_3_3_PREHEADER:%.*]], label [[LOOP_2_3]]
; CHECK:       loop.3.3.preheader:
; CHECK-NEXT:    [[LSR_IV_NEXT596_LCSSA:%.*]] = phi i32 [ [[LSR_IV_NEXT596]], [[LOOP_2_3]] ] ;INTEL
; CHECK-NEXT:    br label [[LOOP_3_3:%.*]]
; CHECK:       loop.3.3:
; CHECK-NEXT:    [[LSR_IV551:%.*]] = phi i32 [ [[LSR_IV_NEXT596_LCSSA]], [[LOOP_3_3_PREHEADER]] ], [ [[LSR_IV_NEXT552:%.*]], [[LOOP_3_3]] ] ;INTEL
; CHECK-NEXT:    [[LSR_IV_NEXT552]] = add i32 [[LSR_IV551]], -1 ;INTEL
; CHECK-NEXT:    br i1 false, label [[LOOP_4_3_PREHEADER:%.*]], label [[LOOP_3_3]]
; CHECK:       loop.4.3.preheader:
; CHECK-NEXT:    [[LSR_IV_NEXT552_LCSSA:%.*]] = phi i32 [ [[LSR_IV_NEXT552]], [[LOOP_3_3]] ] ;INTEL
; CHECK-NEXT:    br label [[LOOP_4_3:%.*]]
; CHECK:       loop.4.3:
; CHECK-NEXT:    [[LSR_IV505:%.*]] = phi i32 [ [[LSR_IV_NEXT552_LCSSA]], [[LOOP_4_3_PREHEADER]] ], [ [[LSR_IV_NEXT506:%.*]], [[LOOP_4_3]] ] ;INTEL
; CHECK-NEXT:    [[LSR_IV_NEXT506]] = add i32 [[LSR_IV505]], -1 ;INTEL
; CHECK-NEXT:    br i1 false, label [[LOOP_5_3_PREHEADER:%.*]], label [[LOOP_4_3]]
; CHECK:       loop.5.3.preheader:
; CHECK-NEXT:    [[LSR_IV_NEXT506_LCSSA:%.*]] = phi i32 [ [[LSR_IV_NEXT506]], [[LOOP_4_3]] ] ;INTEL
; CHECK-NEXT:    br label [[LOOP_5_3:%.*]]
; CHECK:       loop.5.3:
; CHECK-NEXT:    [[LSR_IV457:%.*]] = phi i32 [ [[LSR_IV_NEXT506_LCSSA]], [[LOOP_5_3_PREHEADER]] ], [ [[LSR_IV_NEXT458:%.*]], [[LOOP_5_3]] ] ;INTEL
; CHECK-NEXT:    [[LSR_IV_NEXT458]] = add i32 [[LSR_IV457]], -1 ;INTEL
; CHECK-NEXT:    br i1 false, label [[LOOP_6_3_PREHEADER:%.*]], label [[LOOP_5_3]]
; CHECK:       loop.6.3.preheader:
; CHECK-NEXT:    [[LSR_IV_NEXT458_LCSSA:%.*]] = phi i32 [ [[LSR_IV_NEXT458]], [[LOOP_5_3]] ] ;INTEL
; CHECK-NEXT:    br label [[LOOP_6_3:%.*]]
; CHECK:       loop.6.3:
; CHECK-NEXT:    [[LSR_IV407:%.*]] = phi i32 [ [[LSR_IV_NEXT458_LCSSA]], [[LOOP_6_3_PREHEADER]] ], [ [[LSR_IV_NEXT408:%.*]], [[LOOP_6_3]] ] ;INTEL
; CHECK-NEXT:    [[LSR_IV_NEXT408]] = add i32 [[LSR_IV407]], -1 ;INTEL
; CHECK-NEXT:    br i1 false, label [[LOOP_453_PREHEADER:%.*]], label [[LOOP_6_3]]
; CHECK:       loop.453.preheader:
; CHECK-NEXT:    [[LSR_IV_NEXT408_LCSSA:%.*]] = phi i32 [ [[LSR_IV_NEXT408]], [[LOOP_6_3]] ] ;INTEL
; CHECK-NEXT:    br label [[LOOP_453:%.*]]
; CHECK:       loop.453:
; CHECK-NEXT:    [[LSR_IV355:%.*]] = phi i32 [ [[LSR_IV_NEXT408_LCSSA]], [[LOOP_453_PREHEADER]] ], [ [[LSR_IV_NEXT356:%.*]], [[LOOP_453]] ] ;INTEL
; CHECK-NEXT:    [[LSR_IV_NEXT356]] = add i32 [[LSR_IV355]], -1 ;INTEL
; CHECK-NEXT:    br i1 false, label [[LOOP_1_4_PREHEADER:%.*]], label [[LOOP_453]]
; CHECK:       loop.1.4.preheader:
; CHECK-NEXT:    [[LSR_IV_NEXT356_LCSSA:%.*]] = phi i32 [ [[LSR_IV_NEXT356]], [[LOOP_453]] ] ;INTEL
; CHECK-NEXT:    br label [[LOOP_1_4:%.*]]
; CHECK:       loop.1.4:
; CHECK-NEXT:    [[LSR_IV301:%.*]] = phi i32 [ [[LSR_IV_NEXT356_LCSSA]], [[LOOP_1_4_PREHEADER]] ], [ [[LSR_IV_NEXT302:%.*]], [[LOOP_1_4]] ] ;INTEL
; CHECK-NEXT:    [[LSR_IV_NEXT302]] = add i32 [[LSR_IV301]], -1 ;INTEL
; CHECK-NEXT:    br i1 false, label [[LOOP_2_4_PREHEADER:%.*]], label [[LOOP_1_4]]
; CHECK:       loop.2.4.preheader:
; CHECK-NEXT:    [[LSR_IV_NEXT302_LCSSA:%.*]] = phi i32 [ [[LSR_IV_NEXT302]], [[LOOP_1_4]] ] ;INTEL
; CHECK-NEXT:    br label [[LOOP_2_4:%.*]]
; CHECK:       loop.2.4:
; CHECK-NEXT:    [[LSR_IV245:%.*]] = phi i32 [ [[LSR_IV_NEXT302_LCSSA]], [[LOOP_2_4_PREHEADER]] ], [ [[LSR_IV_NEXT246:%.*]], [[LOOP_2_4]] ] ;INTEL
; CHECK-NEXT:    [[LSR_IV_NEXT246]] = add i32 [[LSR_IV245]], -1 ;INTEL
; CHECK-NEXT:    br i1 false, label [[LOOP_3_4_PREHEADER:%.*]], label [[LOOP_2_4]]
; CHECK:       loop.3.4.preheader:
; CHECK-NEXT:    [[LSR_IV_NEXT246_LCSSA:%.*]] = phi i32 [ [[LSR_IV_NEXT246]], [[LOOP_2_4]] ] ;INTEL
; CHECK-NEXT:    br label [[LOOP_3_4:%.*]]
; CHECK:       loop.3.4:
; CHECK-NEXT:    [[LSR_IV187:%.*]] = phi i32 [ [[LSR_IV_NEXT246_LCSSA]], [[LOOP_3_4_PREHEADER]] ], [ [[LSR_IV_NEXT188:%.*]], [[LOOP_3_4]] ] ;INTEL
; CHECK-NEXT:    [[LSR_IV_NEXT188]] = add i32 [[LSR_IV187]], -1 ;INTEL
; CHECK-NEXT:    br i1 false, label [[LOOP_4_4_PREHEADER:%.*]], label [[LOOP_3_4]]
; CHECK:       loop.4.4.preheader:
; CHECK-NEXT:    [[LSR_IV_NEXT188_LCSSA:%.*]] = phi i32 [ [[LSR_IV_NEXT188]], [[LOOP_3_4]] ] ;INTEL
; CHECK-NEXT:    br label [[LOOP_4_4:%.*]]
; CHECK:       loop.4.4:
; CHECK-NEXT:    [[LSR_IV59:%.*]] = phi i32 [ [[LSR_IV_NEXT188_LCSSA]], [[LOOP_4_4_PREHEADER]] ], [ [[LSR_IV_NEXT60:%.*]], [[LOOP_4_4]] ] ;INTEL
; CHECK-NEXT:    [[LSR_IV_NEXT60]] = add i32 [[LSR_IV59]], -1 ;INTEL
; CHECK-NEXT:    br i1 false, label [[LOOP_5_4_PREHEADER:%.*]], label [[LOOP_4_4]]
; CHECK:       loop.5.4.preheader:
; CHECK-NEXT:    [[LSR_IV_NEXT60_LCSSA:%.*]] = phi i32 [ [[LSR_IV_NEXT60]], [[LOOP_4_4]] ] ;INTEL
; CHECK-NEXT:    br label [[LOOP_5_4:%.*]]
; CHECK:       loop.5.4:
; CHECK-NEXT:    [[LSR_IV127:%.*]] = phi i32 [ [[LSR_IV_NEXT60_LCSSA]], [[LOOP_5_4_PREHEADER]] ], [ [[LSR_IV_NEXT128:%.*]], [[LOOP_5_4]] ] ;INTEL
; CHECK-NEXT:    [[LSR_IV_NEXT128]] = add i32 [[LSR_IV127]], 1 ;INTEL
; CHECK-NEXT:    br i1 false, label [[LOOP_6_4_PREHEADER:%.*]], label [[LOOP_5_4]]
; CHECK:       loop.6.4.preheader:
; CHECK-NEXT:    [[LSR_IV_NEXT128_LCSSA:%.*]] = phi i32 [ [[LSR_IV_NEXT128]], [[LOOP_5_4]] ] ;INTEL
; CHECK-NEXT:    br label [[LOOP_6_4:%.*]]
; CHECK:       loop.6.4:
; CHECK-NEXT:    [[LSR_IV63:%.*]] = phi i32 [ [[LSR_IV_NEXT128_LCSSA]], [[LOOP_6_4_PREHEADER]] ], [ [[LSR_IV_NEXT64]], [[LOOP_6_4]] ] ;INTEL
; CHECK-NEXT:    [[LSR_IV_NEXT64]] = add i32 [[LSR_IV63]], 1 ;INTEL
; CHECK-NEXT:    br label [[LOOP_6_4]]
;
entry:
  br label %loop.1

bb:
  %tobool1.not = icmp eq i32 %d.4.6.4, 0
  br label %loop.1

loop.1:
  %iv = phi i32 [ %iv.next, %loop.1 ], [ 1, %bb ], [ 0, %entry ]
  %iv.next = add i32 %iv, 1
  br i1 false, label %loop.1.loop.2_crit_edge, label %loop.1

loop.1.loop.2_crit_edge:
  br label %loop.2

loop.2:
  %iv58 = phi i32 [ %iv.next59, %loop.2 ], [ %iv, %loop.1.loop.2_crit_edge ]
  %iv.next59 = add i32 %iv58, 1
  br i1 false, label %loop.3, label %loop.2

loop.3:
  %iv60 = phi i32 [ %iv.next61, %loop.3 ], [ %iv58, %loop.2 ]
  %iv.next61 = add i32 %iv60, 1
  br i1 false, label %loop.4, label %loop.3

loop.4:
  %iv62 = phi i32 [ %iv.next63, %loop.4 ], [ %iv60, %loop.3 ]
  %iv.next63 = add i32 %iv62, 1
  br i1 false, label %loop.5, label %loop.4

loop.5:
  %iv64 = phi i32 [ %iv.next65, %loop.5 ], [ %iv62, %loop.4 ]
  %iv.next65 = add i32 %iv64, 1
  br i1 false, label %loop.6, label %loop.5

loop.6:
  %iv66 = phi i32 [ %iv.next67, %loop.6 ], [ %iv64, %loop.5 ]
  %iv.next67 = add i32 %iv66, 1
  br i1 false, label %loop.135, label %loop.6

loop.135:
  %iv68 = phi i32 [ %iv.next69, %loop.135 ], [ %iv66, %loop.6 ]
  %iv.next69 = add i32 %iv68, 1
  br i1 false, label %loop.1.1, label %loop.135

loop.1.1:
  %iv70 = phi i32 [ %iv.next71, %loop.1.1 ], [ %iv68, %loop.135 ]
  %iv.next71 = add i32 %iv70, 1
  br i1 false, label %loop.2.1, label %loop.1.1

loop.2.1:
  %iv72 = phi i32 [ %iv.next73, %loop.2.1 ], [ %iv70, %loop.1.1 ]
  %iv.next73 = add i32 %iv72, 1
  br i1 false, label %loop.3.1, label %loop.2.1

loop.3.1:
  %iv74 = phi i32 [ %iv.next75, %loop.3.1 ], [ %iv72, %loop.2.1 ]
  %iv.next75 = add i32 %iv74, 1
  br i1 false, label %loop.4.1, label %loop.3.1

loop.4.1:
  %iv76 = phi i32 [ %iv.next77, %loop.4.1 ], [ %iv74, %loop.3.1 ]
  %iv.next77 = add i32 %iv76, 1
  br i1 false, label %loop.5.1, label %loop.4.1

loop.5.1:
  %iv78 = phi i32 [ %iv.next79, %loop.5.1 ], [ %iv76, %loop.4.1 ]
  %iv.next79 = add i32 %iv78, 1
  br i1 false, label %loop.6.1, label %loop.5.1

loop.6.1:
  %iv80 = phi i32 [ %iv.next81, %loop.6.1 ], [ %iv78, %loop.5.1 ]
  %iv.next81 = add i32 %iv80, 1
  br i1 false, label %loop.241, label %loop.6.1

loop.241:
  %iv82 = phi i32 [ %iv.next83, %loop.241 ], [ %iv80, %loop.6.1 ]
  %iv.next83 = add i32 %iv82, 1
  br i1 false, label %loop.1.2, label %loop.241

loop.1.2:
  %iv84 = phi i32 [ %iv.next85, %loop.1.2 ], [ %iv82, %loop.241 ]
  %iv.next85 = add i32 %iv84, 1
  br i1 false, label %loop.2.2, label %loop.1.2

loop.2.2:
  %iv86 = phi i32 [ %iv.next87, %loop.2.2 ], [ %iv84, %loop.1.2 ]
  %iv.next87 = add i32 %iv86, 1
  br i1 false, label %loop.3.2, label %loop.2.2

loop.3.2:
  %iv88 = phi i32 [ %iv.next89, %loop.3.2 ], [ %iv86, %loop.2.2 ]
  %iv.next89 = add i32 %iv88, 1
  br i1 false, label %loop.4.2, label %loop.3.2

loop.4.2:
  %iv90 = phi i32 [ %iv.next91, %loop.4.2 ], [ %iv88, %loop.3.2 ]
  %iv.next91 = add i32 %iv90, 1
  br i1 false, label %loop.5.2, label %loop.4.2

loop.5.2:
  %iv92 = phi i32 [ %iv.next93, %loop.5.2 ], [ %iv90, %loop.4.2 ]
  %iv.next93 = add i32 %iv92, 1
  br i1 false, label %loop.6.2, label %loop.5.2

loop.6.2:
  %iv94 = phi i32 [ %iv.next95, %loop.6.2 ], [ %iv92, %loop.5.2 ]
  %iv.next95 = add i32 %iv94, 1
  br i1 false, label %loop.347, label %loop.6.2

loop.347:
  %iv96 = phi i32 [ %iv.next97, %loop.347 ], [ %iv94, %loop.6.2 ]
  %iv.next97 = add i32 %iv96, 1
  br i1 false, label %loop.1.3, label %loop.347

loop.1.3:
  %iv98 = phi i32 [ %iv.next99, %loop.1.3 ], [ %iv96, %loop.347 ]
  %iv.next99 = add i32 %iv98, 1
  br i1 false, label %loop.2.3, label %loop.1.3

loop.2.3:
  %iv100 = phi i32 [ %iv.next101, %loop.2.3 ], [ %iv98, %loop.1.3 ]
  %iv.next101 = add i32 %iv100, 1
  br i1 false, label %loop.3.3, label %loop.2.3

loop.3.3:
  %iv102 = phi i32 [ %iv.next103, %loop.3.3 ], [ %iv100, %loop.2.3 ]
  %iv.next103 = add i32 %iv102, 1
  br i1 false, label %loop.4.3, label %loop.3.3

loop.4.3:
  %iv104 = phi i32 [ %iv.next105, %loop.4.3 ], [ %iv102, %loop.3.3 ]
  %iv.next105 = add i32 %iv104, 1
  br i1 false, label %loop.5.3, label %loop.4.3

loop.5.3:
  %iv106 = phi i32 [ %iv.next107, %loop.5.3 ], [ %iv104, %loop.4.3 ]
  %iv.next107 = add i32 %iv106, 1
  br i1 false, label %loop.6.3, label %loop.5.3

loop.6.3:
  %iv108 = phi i32 [ %iv.next109, %loop.6.3 ], [ %iv106, %loop.5.3 ]
  %iv.next109 = add i32 %iv108, 1
  br i1 false, label %loop.453, label %loop.6.3

loop.453:
  %iv110 = phi i32 [ %iv.next111, %loop.453 ], [ %iv108, %loop.6.3 ]
  %iv.next111 = add i32 %iv110, 1
  br i1 false, label %loop.1.4, label %loop.453

loop.1.4:
  %iv112 = phi i32 [ %iv.next113, %loop.1.4 ], [ %iv110, %loop.453 ]
  %iv.next113 = add i32 %iv112, 1
  br i1 false, label %loop.2.4, label %loop.1.4

loop.2.4:
  %iv114 = phi i32 [ %iv.next115, %loop.2.4 ], [ %iv112, %loop.1.4 ]
  %iv.next115 = add i32 %iv114, 1
  br i1 false, label %loop.3.4, label %loop.2.4

loop.3.4:
  %iv116 = phi i32 [ %iv.next117, %loop.3.4 ], [ %iv114, %loop.2.4 ]
  %iv.next117 = add i32 %iv116, 1
  br i1 false, label %loop.4.4, label %loop.3.4

loop.4.4:
  %iv118 = phi i32 [ %iv.next119, %loop.4.4 ], [ %iv116, %loop.3.4 ]
  %iv.next119 = add i32 %iv118, 1
  br i1 false, label %loop.5.4, label %loop.4.4

loop.5.4:
  %iv120 = phi i32 [ %iv.next121, %loop.5.4 ], [ %iv118, %loop.4.4 ]
  %iv.next121 = add i32 %iv120, -1
  br i1 false, label %loop.6.4, label %loop.5.4

loop.6.4:
  %d.4.6.4 = phi i32 [ %dec.6.4, %loop.6.4 ], [ %iv.next121, %loop.5.4 ]
  %dec.6.4 = add i32 %d.4.6.4, -1
  br label %loop.6.4
}
