//===- LoopPeeling.h - Loop peeling utilities -------------------*- C++ -*-===//
//
// Copyright (C) 2021 Intel Corporation. All rights reserved.
//
// The information and source code contained herein is the exclusive property
// of Intel Corporation and may not be disclosed, examined or reproduced in
// whole or in part without explicit written authorization from the company.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_TRANSFORMS_SYCLTRANSFORMS_UTILS_LOOP_PEELING_H
#define LLVM_TRANSFORMS_SYCLTRANSFORMS_UTILS_LOOP_PEELING_H

#include "llvm/IR/BasicBlock.h"

namespace llvm {

/// Loop dynamic peeling based on interl.preferred_alignment metadata provided
/// by VPlan.
namespace LoopDynamicPeeling {

/// Compute the peeling loop size from vector entry and insert compute code
/// into EntryBB.
/// \param EntryBB entry basic block to insert compute code of peel loop size.
/// \param VectorEntry vector entry basic block generated by VPlan. It may
///        contain intel.preferred_alignment metadata.
/// \param InitGIDs initial global IDs.
/// \param MaxPeelSize the upper bound of peel loop size.
/// \returns Peeling loop size.
std::optional<Value *> computePeelCount(BasicBlock &EntryBB, BasicBlock &VectorEntry,
                                   ArrayRef<Value *> InitGIDs,
                                   Value *MaxPeelSize);

} // namespace LoopDynamicPeeling
} // namespace llvm

#endif // LLVM_TRANSFORMS_SYCLTRANSFORMS_UTILS_LOOP_PEELING_H
