; REQUIRES: asserts
; RUN: opt -opaque-pointers -whole-program-assume -disable-output -padded-pointer-prop-op -padded-pointer-info < %s 2>&1 | FileCheck %s
; RUN: opt -opaque-pointers -whole-program-assume -disable-output -padded-pointer-info -passes="padded-pointer-prop-op" < %s 2>&1 | FileCheck %s

; The test checks if padding is propagated through the InvokeInst

; NOTE: I generated by hand metadata for @_ZTIi, @__cxa_throw, and @__cxa_begin_catch
; because it is currently (11-NOV-2021) not generated by the C/C++ front end.

; CHECK: ==== INITIAL FUNCTION SET ====
; CHECK: Function info(callee):
; CHECK-NEXT:   HasUnknownCallSites: 0
; CHECK-NEXT:  Return Padding: -1
; CHECK-NEXT:  Value paddings:
; CHECK-NEXT:      %i6 = tail call ptr @llvm.ptr.annotation.p0(ptr %i, ptr getelementptr inbounds ([16 x i8], ptr @0, i64 0, i64 0), ptr getelementptr inbounds ([13 x i8], ptr @.str, i64 0, i64 0), i32 6, ptr null) :: 32
; CHECK: ==== END OF INITIAL FUNCTION SET ====
; CHECK: ==== TRANSFORMED FUNCTION SET ====
; CHECK: Function info(callee):
; CHECK-NEXT:   HasUnknownCallSites: 0
; CHECK-NEXT:  Return Padding: 32
; CHECK-NEXT:  Value paddings:
; CHECK-NEXT:      %i6 = tail call ptr @llvm.ptr.annotation.p0(ptr %i, ptr getelementptr inbounds ([16 x i8], ptr @0, i64 0, i64 0), ptr getelementptr inbounds ([13 x i8], ptr @.str, i64 0, i64 0), i32 6, ptr null) :: 32
; CHECK: Function info(caller):
; CHECK-NEXT:  HasUnknownCallSites: 0
; CHECK-NEXT:  Return Padding: -1
; CHECK-NEXT:  Value paddings:
; CHECK-NEXT:      %i = invoke ptr @callee()
; CHECK-NEXT:          to label %bb6 unwind label %bb1 :: 32
; CHECK: ==== END OF TRANSFORMED FUNCTION SET ====

target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private constant [13 x i8] c"return_4.cpp\00"
@0 = private constant [16 x i8] c"padded 32 bytes\00"
@IP = external dso_local local_unnamed_addr global ptr, align 8, !intel_dtrans_type !0
@_ZTIi = external dso_local constant ptr, !intel_dtrans_type !0

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare ptr @llvm.ptr.annotation.p0(ptr, ptr, ptr, i32, ptr) #0

; Function Attrs: mustprogress nofree noinline uwtable
define internal noalias "intel_dtrans_func_index"="1" ptr @callee() #1 !intel.dtrans.func.type !8 {
bb:
  %i = load ptr, ptr @IP, align 8, !tbaa !9
  %i1 = icmp eq ptr %i, null
  br i1 %i1, label %bb5, label %bb2

bb2:                                              ; preds = %bb
  %i3 = tail call ptr @__cxa_allocate_exception(i64 4) #5
  store i32 0, ptr %i3, align 16, !tbaa !13
  tail call void @__cxa_throw(ptr %i3, ptr @_ZTIi, ptr null) #6
  unreachable

bb5:                                              ; preds = %bb
  %i6 = tail call ptr @llvm.ptr.annotation.p0(ptr %i, ptr getelementptr inbounds ([16 x i8], ptr @0, i64 0, i64 0), ptr getelementptr inbounds ([13 x i8], ptr @.str, i64 0, i64 0), i32 6, ptr null)
  ret ptr %i6
}

; Function Attrs: nofree
declare dso_local noalias ptr @__cxa_allocate_exception(i64) local_unnamed_addr #2

; Function Attrs: nofree noreturn
declare !intel.dtrans.func.type !16 dso_local void @__cxa_throw(ptr "intel_dtrans_func_index"="1", ptr "intel_dtrans_func_index"="2", ptr "intel_dtrans_func_index"="3") local_unnamed_addr #3

; Function Attrs: mustprogress nofree uwtable
define internal "intel_dtrans_func_index"="1" ptr @caller() #4 personality ptr @__gxx_personality_v0 !intel.dtrans.func.type !15 {
bb:
  %i = invoke ptr @callee()
          to label %bb6 unwind label %bb1

bb1:                                              ; preds = %bb
  %i2 = landingpad { ptr, i32 }
          catch ptr null
  %i3 = extractvalue { ptr, i32 } %i2, 0
  %i4 = tail call ptr @__cxa_begin_catch(ptr %i3) #5
  %i5 = load ptr, ptr @IP, align 8, !tbaa !9
  tail call void @__cxa_end_catch()
  br label %bb6

bb6:                                              ; preds = %bb1, %bb
  %i7 = phi ptr [ %i5, %bb1 ], [ null, %bb ]
  ret ptr %i7
}

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: nofree
declare !intel.dtrans.func.type !18 dso_local "intel_dtrans_func_index"="1" ptr @__cxa_begin_catch(ptr "intel_dtrans_func_index"="2") local_unnamed_addr #2

; Function Attrs: nofree
declare dso_local void @__cxa_end_catch() local_unnamed_addr #2

attributes #0 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #1 = { mustprogress nofree noinline uwtable "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "frame-pointer"="none" "loopopt-pipeline"="full" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "pre_loopopt" "stack-protector-buffer-size"="8" "target-cpu"="skylake-avx512" "target-features"="+adx,+aes,+avx,+avx2,+avx512bw,+avx512cd,+avx512dq,+avx512f,+avx512vl,+bmi,+bmi2,+clflushopt,+clwb,+crc32,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+invpcid,+lzcnt,+mmx,+movbe,+pclmul,+pku,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves" "unsafe-fp-math"="true" }
attributes #2 = { nofree }
attributes #3 = { nofree noreturn }
attributes #4 = { mustprogress nofree uwtable "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "frame-pointer"="none" "loopopt-pipeline"="full" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "pre_loopopt" "stack-protector-buffer-size"="8" "target-cpu"="skylake-avx512" "target-features"="+adx,+aes,+avx,+avx2,+avx512bw,+avx512cd,+avx512dq,+avx512f,+avx512vl,+bmi,+bmi2,+clflushopt,+clwb,+crc32,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+invpcid,+lzcnt,+mmx,+movbe,+pclmul,+pku,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves" "unsafe-fp-math"="true" }
attributes #5 = { nounwind }
attributes #6 = { noreturn }

!intel.dtrans.types = !{}
!llvm.ident = !{!1}
!llvm.module.flags = !{!2, !3, !4, !5, !6, !7}

!0 = !{i32 0, i32 1}
!1 = !{!"Intel(R) oneAPI DPC++/C++ Compiler 2022.1.0 (2022.x.0.YYYYMMDD)"}
!2 = !{i32 1, !"wchar_size", i32 4}
!3 = !{i32 1, !"Virtual Function Elim", i32 0}
!4 = !{i32 7, !"uwtable", i32 1}
!5 = !{i32 1, !"ThinLTO", i32 0}
!6 = !{i32 1, !"EnableSplitLTOUnit", i32 1}
!7 = !{i32 1, !"LTOPostLink", i32 1}
!8 = distinct !{!0}
!9 = !{!10, !10, i64 0}
!10 = !{!"pointer@_ZTSPi", !11, i64 0}
!11 = !{!"omnipotent char", !12, i64 0}
!12 = !{!"Simple C++ TBAA"}
!13 = !{!14, !14, i64 0}
!14 = !{!"int", !11, i64 0}
!15 = distinct !{!0}
!16 = distinct !{!17, !17, !17}
!17 = !{i8 0, i32 1}
!18 = distinct !{!17, !17}
