# ./Intel_OptionalComponents/Intel_SupportedFeatures.txt
#
# Copyright (C) 2018-2019 Intel Corporation. All rights reserved.
#
# The information and source code contained herein is the exclusive
# property of Intel Corporation and may not be disclosed, examined
# or reproduced in whole or in part without explicit written authorization
# from the company.
#
# ------------------------------------------------------------------------------
#
# This file contains a list of features that are supported by the compiler
# build system, i.e. you may pass these features via LLVM_INTEL_FEATURES cmake
# variable.  Read more details in 'Xmain Development Processes' document.
#
# Each feature specification is of the following form:
#     ^@<feature name>:{SHARED|SECRET}@
#
# Legend:
#   * Feature name must be a valid C identifier.  In general, it should
#     use all capital letters, numbers and '_', and should not start
#     with '_'.
#   * SECRET features are only for xmain repositories.
#   * SHARED features will appear in the collaborative repositories.
#   * Note that SHARED does not mean "public", i.e. features shared
#     via collaborative repositories may not be made public by Intel
#     yet.  In general, codes for public features must be upstreamed,
#     which implies removing the feature guards and, thus, removing
#     these features' declarations from this file.
#
# Extra text (e.g. comments) are allowed after the terminating '@'.
# By convention this file uses '#' as a comment symbol.  At the same time,
# any line not satisfying "^@.*$" regular expression is just ignored.
#
# In general, every new feature must start with INTEL_FEATURE prefix
# followed by '_' and an optional additional prefix corresponding to the feature
# class (see below).  Currently the feature filtering tool will report
# an error, if you use INTEL_FEATURE prefix in this file.  We temporarily
# allow declaring the features without the prefix in this file, but
# the actual feature name passed via LLVM_INTEL_FEATURES must use
# the prefix.  For example, you may declare ISA_VNNI feature here,
# but you have to use concat("INTEL_FEATURE", "_ISA_VNNI") name
# in LLVM_INTEL_FEATURES and in the source files.
#
# There is a set of legacy software features that do not use
# the prefix.

# New ISA features usually use ISA_ prefix, e.g. ISA_VNNI.
# === New ISA features section begin ===
# INTEL_FEATURE_ISA_ULI
@ISA_ULI:SECRET@
# end INTEL_FEATURE_ISA_ULI

# INTEL_FEATURE_ISA_FP16
@ISA_FP16:SECRET@
# end INTEL_FEATURE_ISA_FP16

# INTEL_FEATURE_ISA_SERIALIZE
@ISA_SERIALIZE:SECRET@
# end INTEL_FEATURE_ISA_SERIALIZE

# INTEL_FEATURE_ISA_TSXLDTRK
@ISA_TSXLDTRK:SECRET@
# end INTEL_FEATURE_ISA_TSXLDTRK

# INTEL_FEATURE_ISA_AMX
@ISA_AMX:SECRET@
# end INTEL_FEATURE_ISA_AMX

# INTEL_FEATURE_ISA_AMX_FUTURE
@ISA_AMX_FUTURE:SECRET@
# end INTEL_FEATURE_ISA_AMX_FUTURE

# INTEL_FEATURE_ISA_AMX_LNC
@ISA_AMX_LNC:SECRET@
# end INTEL_FEATURE_ISA_AMX_LNC

# INTEL_FEATURE_ISA_AMX_AVX512
@ISA_AMX_AVX512:SECRET@
# end INTEL_FEATURE_ISA_AMX_AVX512

# INTEL_FEATURE_ISA_AMX_FP16
@ISA_AMX_FP16:SECRET@
# end INTEL_FEATURE_ISA_AMX_FP16

# INTEL_FEATURE_ISA_AMX_MEMORY2
@ISA_AMX_MEMORY2:SECRET@
# end INTEL_FEATURE_ISA_AMX_MEMORY2

# INTEL_FEATURE_ISA_AMX_MEMORY
@ISA_AMX_MEMORY:SECRET@
# end INTEL_FEATURE_ISA_AMX_MEMORY

# INTEL_FEATURE_ISA_AMX_BF16_EVEX
@ISA_AMX_BF16_EVEX:SECRET@
# end INTEL_FEATURE_ISA_AMX_BF16_EVEX

# INTEL_FEATURE_ISA_AMX_CONVERT_EVEX
@ISA_AMX_CONVERT_EVEX:SECRET@
# end INTEL_FEATURE_ISA_AMX_CONVERT_EVEX

# INTEL_FEATURE_ISA_AMX_CONVERT
@ISA_AMX_CONVERT:SECRET@
# end INTEL_FEATURE_ISA_AMX_CONVERT

# INTEL_FEATURE_ISA_AMX_INT8_EVEX
@ISA_AMX_INT8_EVEX:SECRET@
# end INTEL_FEATURE_ISA_AMX_INT8_EVEX

# INTEL_FEATURE_ISA_AMX_TILE_EVEX
@ISA_AMX_TILE_EVEX:SECRET@
# end INTEL_FEATURE_ISA_AMX_TILE_EVEX

# INTEL_FEATURE_ISA_AMX_TRANSPOSE2
@ISA_AMX_TRANSPOSE2:SECRET@
# end INTEL_FEATURE_ISA_AMX_TRANSPOSE2

# INTEL_FEATURE_ISA_AMX_TRANSPOSE
@ISA_AMX_TRANSPOSE:SECRET@
# end INTEL_FEATURE_ISA_AMX_TRANSPOSE

# INTEL_FEATURE_ISA_KEYLOCKER
@ISA_KEYLOCKER:SECRET@
# end INTEL_FEATURE_ISA_KEYLOCKER

# INTEL_FEATURE_ISA_AVX_VNNI
@ISA_AVX_VNNI:SECRET@
# end INTEL_FEATURE_ISA_AVX_VNNI

# INTEL_FEATURE_ISA_AVX512_DOTPROD
@ISA_AVX512_DOTPROD:SECRET@
# end INTEL_FEATURE_ISA_AVX512_DOTPROD

# === New ISA features section end ===

# INTEL_FEATURE_BIENDIAN
# New Biendian feature
# === New Biendian feature section begin ===
@BIENDIAN:SECRET@
# === New Biendian feature section end ===
# end INTEL_FEATURE_BIENDIAN

# Support for a new target is usually covered by a feature named after
# the target name, e.g. NIOS.
# === New targets section begin ===
# INTEL_FEATURE_CSA
@CSA:SECRET@
# end INTEL_FEATURE_CSA

# INTEL_FEATURE_ICECODE
@ICECODE:SECRET@
# end INTEL_FEATURE_ICECODE
# === New targets section end ===

# Software features that need to be kept in the "safe" repo use SW_ prefix,
# e.g. SW_G2S.
# === New SW features section begin ===
# === New SW features section end ===

# === New CPU section begin ===
# INTEL_FEATURE_CPU_GLC
@CPU_GLC:SECRET@
# end INTEL_FEATURE_CPU_GLC

# === New CPU section end ===

# Special software features section currently consist of
# INTEL_INTERNAL_BUILD feature only.  We may actually represent
# the current INTEL_CUSTOMIZATION, INTEL_SPECIFIC_OPENMP,
# INTEL_SPECIFIC_CILKPLUS and INTEL_INCLUDE_DTRANS as features
# by adding them here.  INTEL_COLLAB cannot use this scheme,
# because we do not provide this file to the community.
@INTEL_INTERNAL_BUILD:SHARED@
