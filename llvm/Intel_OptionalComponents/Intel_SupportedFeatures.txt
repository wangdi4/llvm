# ./Intel_OptionalComponents/Intel_SupportedFeatures.txt
#
# Copyright (C) 2018-2021 Intel Corporation. All rights reserved.
#
# The information and source code contained herein is the exclusive
# property of Intel Corporation and may not be disclosed, examined
# or reproduced in whole or in part without explicit written authorization
# from the company.
#
# ------------------------------------------------------------------------------
#
# This file contains a list of features that are supported by the compiler
# build system, i.e. you may pass these features via LLVM_INTEL_FEATURES cmake
# variable.  Read more details in 'Xmain Development Processes' document.
#
# Each feature specification is of the following form:
#     ^@<feature name>:{SHARED|SECRET}@
#
# Legend:
#   * Feature name must be a valid C identifier.  In general, it should
#     use all capital letters, numbers and '_', and should not start
#     with '_'.
#   * SECRET features are only for xmain repositories. They are not expected to
#     be shared in source form, but may or may not be shared in binary form as
#     specified in llvm/CMakeLists.txt
#   * SHARED features will appear in the collaborative repositories. They can
#     be shared in source form with collaborators, but may or may not be shared
#     in binary form as specified in llvm/CMakeLists.txt
#
# Extra text (e.g. comments) are allowed after the terminating '@'.
# By convention this file uses '#' as a comment symbol.  At the same time,
# any line not satisfying "^@.*$" regular expression is just ignored.
#
# In general, every new feature must start with INTEL_FEATURE prefix
# followed by '_' and an optional additional prefix corresponding to the feature
# class (see below).  Currently the feature filtering tool will report
# an error, if you use INTEL_FEATURE prefix in this file.  We temporarily
# allow declaring the features without the prefix in this file, but
# the actual feature name passed via LLVM_INTEL_FEATURES must use
# the prefix.  For example, you may declare ISA_VNNI feature here,
# but you have to use concat("INTEL_FEATURE", "_ISA_VNNI") name
# in LLVM_INTEL_FEATURES and in the source files.
#
# There is a set of legacy software features that do not use
# the prefix.

# New ISA features usually use ISA_ prefix, e.g. ISA_VNNI.
# === New ISA features section begin ===
# INTEL_FEATURE_ISA_AMX_MOVRS
@ISA_AMX_MOVRS:SECRET@
# end INTEL_FEATURE_ISA_AMX_MOVRS

# INTEL_FEATURE_ISA_AMX_MEMADVISE_EVEX
@ISA_AMX_MEMADVISE_EVEX:SECRET@
# end INTEL_FEATURE_ISA_AMX_MEMADVISE_EVEX

# INTEL_FEATURE_ISA_AMX_FUTURE
@ISA_AMX_FUTURE:SECRET@
# end INTEL_FEATURE_ISA_AMX_FUTURE

# INTEL_FEATURE_ISA_AMX_AVX512
@ISA_AMX_AVX512:SECRET@
# end INTEL_FEATURE_ISA_AMX_AVX512

# INTEL_FEATURE_ISA_AMX_AVX512_TILE16MOV
@ISA_AMX_AVX512_TILE16MOV:SECRET@
# end INTEL_FEATURE_ISA_AMX_AVX512_TILE16MOV

# INTEL_FEATURE_ISA_AMX_MEMORY2
@ISA_AMX_MEMORY2:SECRET@
# end INTEL_FEATURE_ISA_AMX_MEMORY2

# INTEL_FEATURE_ISA_AMX_MEMORY
@ISA_AMX_MEMORY:SECRET@
# end INTEL_FEATURE_ISA_AMX_MEMORY

# INTEL_FEATURE_ISA_AMX_BF16_EVEX
@ISA_AMX_BF16_EVEX:SECRET@
# end INTEL_FEATURE_ISA_AMX_BF16_EVEX

# INTEL_FEATURE_ISA_AMX_ELEMENT_EVEX
@ISA_AMX_ELEMENT_EVEX:SECRET@
# end INTEL_FEATURE_ISA_AMX_ELEMENT_EVEX

# INTEL_FEATURE_ISA_AMX_CONVERT
@ISA_AMX_CONVERT:SECRET@
# end INTEL_FEATURE_ISA_AMX_CONVERT

# INTEL_FEATURE_ISA_AMX_INT8_EVEX
@ISA_AMX_INT8_EVEX:SECRET@
# end INTEL_FEATURE_ISA_AMX_INT8_EVEX

# INTEL_FEATURE_ISA_AMX_TILE_EVEX
@ISA_AMX_TILE_EVEX:SECRET@
# end INTEL_FEATURE_ISA_AMX_TILE_EVEX

# INTEL_FEATURE_ISA_AMX_TILE2
@ISA_AMX_TILE2:SECRET@
# end INTEL_FEATURE_ISA_AMX_TILE2

# INTEL_FEATURE_ISA_AMX_TRANSPOSE2
@ISA_AMX_TRANSPOSE2:SECRET@
# end INTEL_FEATURE_ISA_AMX_TRANSPOSE2

# INTEL_FEATURE_ISA_AMX_TRANSPOSE
@ISA_AMX_TRANSPOSE:SECRET@
# end INTEL_FEATURE_ISA_AMX_TRANSPOSE

# INTEL_FEATURE_ISA_AMX_TF32
@ISA_AMX_TF32:SECRET@
# end INTEL_FEATURE_ISA_AMX_TF32

# INTEL_FEATURE_ISA_AVX512_VNNI_INT8
@ISA_AVX512_VNNI_INT8:SECRET@
# end INTEL_FEATURE_ISA_AVX512_VNNI_INT8

# INTEL_FEATURE_ISA_AVX512_VNNI_FP16
@ISA_AVX512_VNNI_FP16:SECRET@
# end INTEL_FEATURE_ISA_AVX512_VNNI_FP16

# INTEL_FEATURE_ISA_AVX_DOTPROD_PHPS
@ISA_AVX_DOTPROD_PHPS:SECRET@
# end INTEL_FEATURE_ISA_AVX_DOTPROD_PHPS

# INTEL_FEATURE_ISA_AVX512_CONVERT
@ISA_AVX512_CONVERT:SECRET@
# end INTEL_FEATURE_ISA_AVX512_CONVERT

# INTEL_FEATURE_ISA_AVX_CONVERT
@ISA_AVX_CONVERT:SECRET@
# end INTEL_FEATURE_ISA_AVX_CONVERT

# INTEL_FEATURE_ISA_AVX_BF16
@ISA_AVX_BF16:SECRET@
# end INTEL_FEATURE_ISA_AVX_BF16

# INTEL_FEATURE_ISA_AVX_COMPRESS
@ISA_AVX_COMPRESS:SECRET@
# end INTEL_FEATURE_ISA_AVX_COMPRESS

# INTEL_FEATURE_ISA_AVX512_MOVRS
@ISA_AVX512_MOVRS:SECRET@
# end INTEL_FEATURE_ISA_AVX512_MOVRS

# INTEL_FEATURE_ISA_AVX512_MEDIAX
@ISA_AVX512_MEDIAX:SECRET@
# end INTEL_FEATURE_ISA_AVX512_MEDIAX

# INTEL_FEATURE_ISA_AVX_MOVGET
@ISA_AVX_MOVGET:SECRET@
# end INTEL_FEATURE_ISA_AVX_MOVGET

# INTEL_FEATURE_ISA_AVX512_MOVGET
@ISA_AVX512_MOVGET:SECRET@
# end INTEL_FEATURE_ISA_AVX512_MOVGET

# INTEL_FEATURE_ISA_GPR_MOVGET
@ISA_GPR_MOVGET:SECRET@
# end INTEL_FEATURE_ISA_GPR_MOVGET

# INTEL_FEATURE_ISA_MOVGET64B
@ISA_MOVGET64B:SECRET@
# end INTEL_FEATURE_ISA_MOVGET64B

# INTEL_FEATURE_ISA_AVX_RAO_INT
@ISA_AVX_RAO_INT:SECRET@
# end INTEL_FEATURE_ISA_AVX_RAO_INT
# INTEL_FEATURE_ISA_AVX_RAO_FP
@ISA_AVX_RAO_FP:SECRET@
# end INTEL_FEATURE_ISA_AVX_RAO_FP

# INTEL_FEATURE_ISA_AVX512_RAO_INT
@ISA_AVX512_RAO_INT:SECRET@
# end INTEL_FEATURE_ISA_AVX512_RAO_INT

# INTEL_FEATURE_ISA_AVX512_RAO_FP
@ISA_AVX512_RAO_FP:SECRET@
# end INTEL_FEATURE_ISA_AVX512_RAO_FP

# INTEL_FEATURE_ISA_AVX512_NE_CONVERT
#AUTO GENERATED BY TOOL
@ISA_AVX512_NE_CONVERT:SECRET@
# end AUTO GENERATED BY TOOL
# end INTEL_FEATURE_ISA_AVX512_NE_CONVERT

# INTEL_FEATURE_ISA_SM4_EVEX
@ISA_SM4_EVEX:SECRET@
# end INTEL_FEATURE_ISA_SM4_EVEX

# INTEL_FEATURE_ISA_DSPV1
# AUTO GENERATED BY TOOL
@ISA_DSPV1:SECRET@
# end AUTO GENERATED BY TOOL
# end INTEL_FEATURE_ISA_DSPV1

# INTEL_FEATURE_ISA_AVX256P
@ISA_AVX256P:SECRET@
#end INTEL_FEATURE_ISA_AVX256P

# INTEL_FEATURE_ISA_AVX512_VNNI_INT16
# AUTO GENERATED BY TOOL
@ISA_AVX512_VNNI_INT16:SECRET@
# end AUTO GENERATED BY TOOL
# end INTEL_FEATURE_ISA_AVX512_VNNI_INT16

# INTEL_FEATURE_ISA_AMX_SPARSE
# AUTO GENERATED BY TOOL
@ISA_AMX_SPARSE:SECRET@
# end AUTO GENERATED BY TOOL
# end INTEL_FEATURE_ISA_AMX_SPARSE

# INTEL_FEATURE_ISA_AMX_V3
# AUTO GENERATED BY TOOL
@ISA_AMX_V3:SECRET@
# end AUTO GENERATED BY TOOL
# end INTEL_FEATURE_ISA_AMX_V3

# INTEL_FEATURE_ISA_VPINSR_VPEXTR
@ISA_VPINSR_VPEXTR:SECRET@
#end INTEL_FEATURE_ISA_VPINSR_VPEXTR

# INTEL_FEATURE_ISA_PREFETCHST2
@ISA_PREFETCHST2:SECRET@
# end INTEL_FEATURE_ISA_PREFETCHST2

# INTEL_FEATURE_ISA_AVX512_SAT_CVT
# AUTO GENERATED BY TOOL
@ISA_AVX512_SAT_CVT:SECRET@
# end AUTO GENERATED BY TOOL
# end INTEL_FEATURE_ISA_AVX512_SAT_CVT
# INTEL_FEATURE_ISA_AVX512_MINMAX
@ISA_AVX512_MINMAX:SECRET@
# end INTEL_FEATURE_ISA_AVX512_MINMAX
# INTEL_FEATURE_ISA_AVX512_COMPLEX
@ISA_AVX512_COMPLEX:SECRET@
# end INTEL_FEATURE_ISA_AVX512_COMPLEX
# INTEL_FEATURE_ISA_AVX512_REDUCTION
@ISA_AVX512_REDUCTION:SECRET@
# end INTEL_FEATURE_ISA_AVX512_REDUCTION
# INTEL_FEATURE_ISA_AVX512_BF16_NE
@ISA_AVX512_BF16_NE:SECRET@
# end INTEL_FEATURE_ISA_AVX512_BF16_NE
# INTEL_FEATURE_ISA_AMX_FP8
# AUTO GENERATED BY TOOL
@ISA_AMX_FP8:SECRET@
# end AUTO GENERATED BY TOOL
# end INTEL_FEATURE_ISA_AMX_FP8
# INTEL_FEATURE_ISA_AMX_FP8_FUTURE
@ISA_AMX_FP8_FUTURE:SECRET@
# end INTEL_FEATURE_ISA_AMX_FP8_FUTURE
# INTEL_FEATURE_ISA_AVX512_REDUCTION2
# AUTO GENERATED BY TOOL
@ISA_AVX512_REDUCTION2:SECRET@
# end AUTO GENERATED BY TOOL
# end INTEL_FEATURE_ISA_AVX512_REDUCTION2
# INTEL_FEATURE_ISA_AVX512_MOVZXC
@ISA_AVX512_MOVZXC:SECRET@
# end INTEL_FEATURE_ISA_AVX512_MOVZXC
# INTEL_FEATURE_ISA_AVX512_NE_CONVERT_FP8
@ISA_AVX512_NE_CONVERT_FP8:SECRET@
# end INTEL_FEATURE_ISA_AVX512_NE_CONVERT_FP8
# INTEL_FEATURE_ISA_AVX512_VNNI_FP8
@ISA_AVX512_VNNI_FP8:SECRET@
# end INTEL_FEATURE_ISA_AVX512_VNNI_FP8
# INTEL_FEATURE_ISA_AVX512_VPMM
@ISA_AVX512_VPMM:SECRET@
# end INTEL_FEATURE_ISA_AVX512_VPMM
# INTEL_FEATURE_ISA_AVX512_VPMM_FUTURE
@ISA_AVX512_VPMM_FUTURE:SECRET@
# end INTEL_FEATURE_ISA_AVX512_VPMM_FUTURE
# INTEL_FEATURE_ISA_MOVRS_PREFETCHST2
@ISA_MOVRS_PREFETCHST2:SECRET@
# end INTEL_FEATURE_ISA_MOVRS_PREFETCHST2
# INTEL_FEATURE_ISA_UMSR
# AUTO GENERATED BY TOOL
@ISA_UMSR:SECRET@
# end AUTO GENERATED BY TOOL
# end INTEL_FEATURE_ISA_UMSR

# INTEL_FEATURE_ISA_BF16_BASE
@ISA_BF16_BASE:SECRET@
# end INTEL_FEATURE_ISA_BF16_BASE

# INTEL_FEATURE_ISA_APX_F
@ISA_APX_F:SECRET@
# end INTEL_FEATURE_ISA_APX_F

# INTEL_FEATURE_XISA_COMMON
# Special guard represents the code is shared by more than one XISA features.
# Please be careful to use the guard in a fine granularity, so that unrelated
# non-public features won't be exposed by mistake when upstream.
# E.g. We have adjacent code shared by different features:
#   Code_Shared_By_Feature_A_B
#   Code_Shared_By_Feature_B_C
# We must use the guard as:
#   # XISA_COMMON (Omit the prefix to make fif happy)
#   Code_Shared_By_Feature_A_B
#   # end XISA_COMMON
#   # XISA_COMMON
#   Code_Shared_By_Feature_B_C
#   # end XISA_COMMON
# Rather than a single joined XISA_COMMON.
# Usually, the code has characteristics by which we know we will upstream it
# when one of the features, e.g. feature A, is disclosed. Through the fine-
# grained guard control, we won't upstream Code_Shared_By_Feature_B_C
# unconsciously.
# The guard usually be removed from XMAIN when feature A downstream by pulldown.
@XISA_COMMON:SECRET@
# end INTEL_FEATURE_XISA_COMMON
# === New ISA features section end ===

# === New ESIMD section begin ===
# INTEL_FEATURE_ESIMD_EMBARGO
@ESIMD_EMBARGO:SECRET@
# end INTEL_FEATURE_ESIMD_EMBARGO
# === New ESIMD section end ===

# INTEL_FEATURE_BIENDIAN
# New Biendian feature
# === New Biendian feature section begin ===
@BIENDIAN:SECRET@
# === New Biendian feature section end ===
# end INTEL_FEATURE_BIENDIAN

# Support for a new target is usually covered by a feature named after
# the target name, e.g. NIOS.
# === New targets section begin ===
# INTEL_FEATURE_CSA
@CSA:SECRET@
# end INTEL_FEATURE_CSA

# INTEL_FEATURE_XUCC
@XUCC:SECRET@
# end INTEL_FEATURE_XUCC

# INTEL_FEATURE_MARKERCOUNT
@MARKERCOUNT:SECRET@
# end INTEL_FEATURE_MARKERCOUNT

# === New targets section end ===

# Software features use SW_ prefix, e.g. SW_G2S.
# === New SW features section begin ===
# Special advanced optimizations that can be shipped in binary form only but
# should be removed in all compiler source code sharing
# INTEL_FEATURE_SW_ADVANCED
@SW_ADVANCED:SECRET@
# end INTEL_FEATURE_SW_ADVANCED

# Advanced optimizations that can be shared inside Intel in source form
# INTEL_FEATURE_SHARED_SW_ADVANCED
@SHARED_SW_ADVANCED:SECRET@
# end INTEL_FEATURE_SHARED_SW_ADVANCED

# INTEL_FEATURE_SW_DTRANS
# Build the compiler with DTrans optimizations enabled
@SW_DTRANS:SECRET@
# end INTEL_FEATURE_SW_DTRANS
# === New SW features section end ===

# === New CPU section begin ===
# INTEL_FEATURE_CPU_DMR
@CPU_DMR:SECRET@
# end INTEL_FEATURE_CPU_DMR
# INTEL_FEATURE_CPU_RYL
@CPU_RYL:SECRET@
# end INTEL_FEATURE_CPU_RYL
# === New CPU section end ===

# Special software features section currently consist of
# INTEL_INTERNAL_BUILD feature only.  We may actually represent
# the current INTEL_CUSTOMIZATION, INTEL_SPECIFIC_OPENMP and
# INTEL_SPECIFIC_CILKPLUS as features by adding them here.
# INTEL_COLLAB cannot use this scheme, because we do not provide
# this file to the community.
@INTEL_INTERNAL_BUILD:SHARED@
