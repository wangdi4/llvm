/*******************************************************************************
 * INTEL CONFIDENTIAL
 * Copyright 1996 Intel Corporation.
 *
 * This software and the related documents are Intel copyrighted  materials, and
 * your use of  them is  governed by the  express license  under which  they
 *were provided to you (License).  Unless the License provides otherwise, you
 *may not use, modify, copy, publish, distribute,  disclose or transmit this
 *software or the related documents without Intel's prior written permission.
 *
 * This software and the related documents  are provided as  is,  with no
 *express or implied  warranties,  other  than those  that are  expressly stated
 *in the License.
 *******************************************************************************/
#include "_imf_include_fp64.hpp"
#ifdef __LIBDEVICE_IMF_ENABLED__
namespace __imf_impl_j0_d_ep {
namespace {
struct fp64 { /*/ sign:1 exponent:11 significand:52 (implied leading 1)*/
  unsigned lo_significand : 32;
  unsigned hi_significand : 20;
  unsigned exponent : 11;
  unsigned sign : 1;
};
static const uint32_t __dj0_ep__DP[] = {
    0x00000000, 0x00000000, /* 2^200 x 4/Pi, extended precision, split by 25
                               bits */
    0x60000000, 0x4c745f30, /* 2^150 x 1.43354022697369600000e+015 */
    0x00000000, 0x4aeb9391, /* 2^150 x 5.78319680000000000000e+007 */
    0x20000000, 0x494529fc, /* 2^150 x 6.61375105381011960000e-001 */
    0xc0000000, 0x47ad5f47, /* 2^150 x 1.36774911396742030000e-008 */
    0x00000000, 0x4624d377, /* 2^150 x 5.78038576612384040000e-016 */
    0x80000000, 0x447b6c52, /* 2^150 x 5.67097116406186190000e-024 */
    0x20000000, 0x430993c4, /* 2^150 x 6.30526941320619260000e-031 */
    0xe0000000, 0x4189041f, /* 2^150 x 3.67578719994527880000e-038 */
    0xe0000000, 0x3fe458ea, /* 2^150 x 4.45510746226535320000e-046 */
    0x50000000, 0x3e67aef1, /* 2^150 x 3.09082395413093270000e-053 */
    0x30000000, 0x3cd0db92, /* 2^150 x 6.55660755499121080000e-061 */
    0x80000000, 0x3b3c7484, /* 2^150 x 1.64915633578929980000e-068 */
    0x00000000, 0x39bba5c0, /* 2^150 x 9.55072531106557900000e-076 */
    0xa0000000, 0x382924bb, /* 2^150 x 2.58855104242604980000e-083 */
    0x90000000, 0x36904e8c, /* 2^150 x 5.00323524688082680000e-091 */
    0x00000000, 0x34ccfe1d, /* 2^150 x 1.65691052678466090000e-099 */
    0x20000000, 0x337d6396, /* 2^150 x 8.00878221345175640000e-106 */
    0x60000000, 0x31d4d39f, /* 2^150 x 8.45709247014436530000e-114 */
    0xf0000000, 0x3054411a, /* 2^150 x 4.90229408458623630000e-121 */
    0x40000000, 0x2ec52ebb, /* 2^150 x 1.52795298719984900000e-128 */
    0x60000000, 0x2d2213a6, /* 2^150 x 1.94299866957126560000e-136 */
    0xd0000000, 0x2ba1c09a, /* 2^150 x 1.13733453961144910000e-143 */
    0x00000000, 0x29e7df90, /* 2^150 x 5.69776444062822040000e-152 */
    0x60000000, 0x2883991d, /* 2^150 x 1.11518356990504860000e-158 */
    0x80000000, 0x26dcc1a9, /* 2^150 x 1.21915331962451730000e-166 */
    0x40000000, 0x255cfa4e, /* 2^150 x 7.32263308706998730000e-174 */
    0x80000000, 0x23a17e2e, /* 2^150 x 3.29347500466345590000e-182 */
    0x30000000, 0x224df928, /* 2^150 x 1.34544777683850980000e-188 */
    0x20000000, 0x20b63ff1, /* 2^150 x 2.97651736637168620000e-196 */
    0x10000000, 0x1f2fff78, /* 2^150 x 1.27571825625735480000e-203 */
    0xe0000000, 0x1d8980fe, /* 2^150 x 1.51516338890805680000e-211 */
    0xb0000000, 0x1c02f118, /* 2^150 x 6.70739706967294120000e-219 */
    0x40000000, 0x1a66829b, /* 2^150 x 1.18776977327670780000e-226 */
    0x40000000, 0x18cf6d36, /* 2^150 x 2.47098955256518700000e-234 */
    0xe0000000, 0x175f6793, /* 2^150 x 2.94358617354826070000e-241 */
    0x80000000, 0x15b6136e, /* 2^150 x 3.08334493652883650000e-249 */
    0xc0000000, 0x143e8c7e, /* 2^150 x 2.54318519592794750000e-256 */
    0xa0000000, 0x12aa797f, /* 2^150 x 6.56845574861513910000e-264 */
    0x30000000, 0x11116ba9, /* 2^150 x 1.28808876071917070000e-271 */
    0xb0000000, 0x0f8bac7e, /* 2^150 x 6.09821810754177020000e-279 */
    0x60000000, 0x0dfcbe2f, /* 2^150 x 1.88762133523511850000e-286 */
    0xe0000000, 0x0c5e839c, /* 2^150 x 2.98610443121133630000e-294 */
    0x40000000, 0x0adbc529, /* 2^150 x 1.61980503987574130000e-301 */
    0xf0000000, 0x0942ea6b, 0x30000000, 0x07b6bf62, 0x20000000,
    0x062e3574, 0x00000000, 0x046580cc, 0xc0000000, 0x02e1bf1e,
};
static const uint64_t __dj0_ep__DP3[] = {
    /* Pi/4, split by 24 bits */
    0x3fe921fb40000000, /* .785398125648498535156250000000000000e-00 */
    0x3e64442d00000000, /* .377489470793079817667603492736816406e-07 */
    0x3ce8469880000000, /* .269515126497888238277234052020503440e-14 */
    0x3b68cc51701b839a, /* .164100177143675023722023662896821847e-21 */
};
static const uint64_t __dj0_ep__DP2[] = {
    /* Pi/4, split by 36 bits */
    0x3fe921fb54440000, /* .785398163396166637539863586425781250e-00 */
    0x3d768c234c400000, /* .128167207563315921695079602216083003e-11 */
    0x3b68cc51701b839a, /* .164100177143675023722023662896821847e-21 */
};
/* approximation of (sin(x)/x-1)/(x^2) on |x|=[0..Pi/4], max.err .28e-13 */
static const uint64_t __dj0_ep__SP[] = {
    0xbfc555555555516d, /* -.1666666666666389001574092663227e-0 SP[0] */
    0x3f81111110fd4208, /*  .8333333331081340727248579433954e-2 SP[1] */
    0xbf2a019fd9bd0882, /* -.1984126691870238094119659272295e-3 SP[2] */
    0x3ec71d9aa585bfc4, /*  .2755599137475836194220161698382e-5 SP[3] */
    0xbe5aa2880297fc43, /* -.2480567232697144802048174630580e-7 SP[4] */
};
/* approximation of (cos(x)-1)/(x^2) on |x|=[0..Pi/4], max.err .36e-12 */
static const uint64_t __dj0_ep__CP[] = {
    0xbfdfffffffffe6a2, /* -.4999999999996395247842975513023e-0 CP[0] */
    0x3fa5555555150951, /*  .4166666663742780406412103193419e-1 CP[1] */
    0xbf56c16bae710ff8, /* -.1388888509397110798760860956647e-2 CP[2] */
    0x3efa01299942ab00, /*  .2479986285723167468258822162782e-4 CP[3] */
    0xbe9247507b5ee59e, /* -.2723719448833349736164120625340e-6 CP[4] */
};
/* |x| >= 2^30, use Payne and Hanek algorithm */
static int __dj0_ep_reduce_pi04d(double x, double *y, int n) {
  int bitpos, exp, i, j, k;
  double xl, yl, yh, t;
  struct fp64 *ptx = (struct fp64 *)&x;
  struct fp64 *ptt = (struct fp64 *)&t;
  const double PI04 =
      0.78539816339744830961566084581987572104929; /* 3FE921FB54442D18 Pi/4 */
  const double zero_none[2] = {0.0, -1.0};
  exp = ptx->exponent;
  ptx->exponent -= 200;
  /* divide x into two parts (low and high) */
  xl = x;
  ptx->lo_significand &= 0xf8000000;
  xl -= x;
  bitpos = exp - (0x03FF + 29);
  j = bitpos / 25;
  bitpos = bitpos - j * 25;
  if ((bitpos >= 17)) {
    yl = (xl * ((const double *)__dj0_ep__DP)[j + 0] +
          x * ((const double *)__dj0_ep__DP)[j + 1]);
    j++;
    t = yl;
    ptt->lo_significand &= 0xfff00000;
    yl -= t;
  } else {
    yl = zero_none[0]; /*0.0*/
  }
  yh = (xl * ((const double *)__dj0_ep__DP)[j + 0] +
        x * ((const double *)__dj0_ep__DP)[j + 1]);
  j++;
  yl = yl + yh;
  yh = (xl * ((const double *)__dj0_ep__DP)[j + 0] +
        x * ((const double *)__dj0_ep__DP)[j + 1]);
  j++;
  /* t = (int)yl */
  t = yl + yh;
  i = 0x03FF + 52 - ptt->exponent;
  (*(long long int *)&t) >>= i;
  k = ((int *)&t)[0];
  (*(long long int *)&t) <<= i;
  k += n;
  /* yl -= (int)yl; */
  yl -= t;
  *y = zero_none[k & 1];
  *y += yl;
  *y += yh;
  for (i = 0; i < 5; i++) {
    *y += (xl * ((const double *)__dj0_ep__DP)[j] +
           x * ((const double *)__dj0_ep__DP)[j + 1]);
    j++;
  }
  *y *= PI04;
  return k;
}
static int __dj0_ep_sincos_kernel_fp64(double x, int n, double *psn,
                                       double *pcs) {
  const int iones[2] = {1, -1};
  uint32_t ix;
  int j, k, ssign, csign, carry;
  double y, z, cs, sn, cs1, sn1, cs2, sn2;
  double tv;
  const uint64_t _INV_PI04 =
      0x3ff45f306dc9c883; /* 1.27323954473516276486577680 4/Pi */
  const uint64_t _TWO_52H = 0x4338000000000000; /* 2^52+2^51 */
  const double ones[2] = {1.0, -1.0};
  const double PI04 =
      0.78539816339744830961566084581987572104929; /* 3FE921FB54442D18 Pi/4 */
  ix = (((int *)&x)[1] & ~0x80000000);
  ssign = ((unsigned)((int *)&x)[1] >> 31);
  x = __fabs(x);
  n *= iones[ssign];
  if (ix < 0x41c00000) /* if |x| < 2^30 use Cody algorithm */
  {
    if (ix <= 0x3ff90000) {
      if ((k = n + 1) & 2)
        x -= PI04;
    } else {
      y = x * (*(const double *)&_INV_PI04);
      tv = (y + (*(const double *)&_TWO_52H));
      j = ((int *)&tv)[0];  /* integer part of x/PIO4 */
      j -= ((double)j > y); /* truncation */
      k = j + n;
      carry = (k & 1);
      k += carry;
      j += carry; /* map zeros to origin */
      /* Extended precision modular arithmetic */
      if (ix < 0x41000000) {
        x = x - j * ((const double *)__dj0_ep__DP2)[0] -
            j * ((const double *)__dj0_ep__DP2)[1] -
            j * ((const double *)__dj0_ep__DP2)[2];
      } else {
        x = x - j * ((const double *)__dj0_ep__DP3)[0] -
            j * ((const double *)__dj0_ep__DP3)[1] -
            j * ((const double *)__dj0_ep__DP3)[2] -
            j * ((const double *)__dj0_ep__DP3)[3];
      }
    }
  } else /* if |x| >= 2^30 use Payne and Hanek algorithm */
  {
    k = 1 + __dj0_ep_reduce_pi04d(x, &x, n);
  }
  csign = ((k + 2) >> 2) & 1;
  ssign ^= (k >> 2) & 1;
  y = x * x;
  z = y * y;
  cs1 = (((const double *)__dj0_ep__CP)[3] * z +
         ((const double *)__dj0_ep__CP)[1]) *
            z +
        ones[0];
  sn1 = (((const double *)__dj0_ep__SP)[3] * z +
         ((const double *)__dj0_ep__SP)[1]) *
            z * x +
        x;
  cs2 = ((((const double *)__dj0_ep__CP)[4] * z +
          ((const double *)__dj0_ep__CP)[2]) *
             z +
         ((const double *)__dj0_ep__CP)[0]) *
        y;
  sn2 = ((((const double *)__dj0_ep__SP)[4] * z +
          ((const double *)__dj0_ep__SP)[2]) *
             z +
         ((const double *)__dj0_ep__SP)[0]) *
        y * x;
  cs = (cs1 + cs2);
  sn = (sn1 + sn2);
  if (k & 2) {
    *psn = cs * ones[ssign];
    *pcs = sn * ones[csign];
  } else {
    *psn = sn * ones[ssign];
    *pcs = cs * ones[csign];
  }
  return k;
}

/*
//
//    FUNCTION:     double j0(double  x)
//                  The Bessel function of first kind,
//                  order zero of the argument.  Double precision.
//
//    DESCRIPTION:
//
//       Returns Bessel function of the first kind, order zero of the argument.
//
//       1. Polynomial approximation of j0(x) in the interval [0.0,38.4747...].
//       2. Hancels asymptotic forms in the interval [38.4747...,MaxVal].
//       3. j0(x)=j0(|x|) for x < 0.0.
//       4. Special cases:
//          j0(0.0)   = 1.0;
//          j0(+-INF) = 0.0;
//          j0(Nan)   = Nan.
//
//
//
//  Interval bounds:
//
*/
static const double __dj0_ep_dS[] = {
    0x1.ea75575af6f09p+1, // 3.83170597020751247 [0x400EA75575AF6F09]
    0x1.c0ff5f3b4725p+2,  // 7.01558666981561885 [0x401C0FF5F3B47250]
    0x1.458d0d0bdfc29p+3, // 10.1734681350627216 [0x402458D0D0BDFC29]
    0x1.aa5baf310e5a2p+3, // 13.3236919363142228 [0x402AA5BAF310E5A2]
    0x1.0787b360508c5p+4, // 16.4706300508776344 [0x4030787B360508C5]
    0x1.39da8e7416ca4p+4, //  19.615858510468243 [0x40339DA8E7416CA4]
    0x1.6c294e3d4d8acp+4, // 22.7600843805927724 [0x4036C294E3D4D8AC]
    0x1.9e7570dcea106p+4, // 25.9036720876183821 [0x4039E7570DCEA106]
    0x1.d0bfcf471fcccp+4, // 29.0468285349168553 [0x403D0BFCF471FCCC]
    0x1.018476e6b2bfp+5,  // 32.1896799109744052 [0x404018476E6B2BF0]
    0x1.1aa890dc5e97cp+5, // 35.3323075500838684 [0x4041AA890DC5E97C]
    0x1.33cc523d5cb69p+5, // 38.4747662347716144 [0x40433CC523D5CB69]
};
/*
//
//  Interval centers - reduction constants x-Z[i]:
//
*/
static const double __dj0_ep_dZ_MP[] = {
    0x1.33d152e971b4p+1,
    -0x1.0f8p-53, // 2.40482555769577289 + -1.17744355931925782e-16
                  // [0x40033D152E971B40 + 0xBCA0F80000000000]
    0x1.6148f5b2c2e45p+2,
    0x1.76p-54, // 5.52007811028631057 +  8.10983225019157317e-17
                // [0x4016148F5B2C2E45 + 0x3C97600000000000]
    0x1.14eb56cccdecap+3,
    -0x1.52p-52, // 8.65372791291101251 + -2.93168267440080399e-16
                 // [0x40214EB56CCCDECA + 0xBCB5200000000000]
    0x1.79544008272b6p+3,
    0x1.44p-52, // 11.7915344390142813 +  2.81025203108242749e-16
                // [0x40279544008272B6 + 0x3CB4400000000000]
    0x1.ddca13ef271d2p+3,
    -0x1.978p-51, // 14.9309177084877867 + -7.06899816460548891e-16
                  // [0x402DDCA13EF271D2 + 0xBCC9780000000000]
    0x1.212313f8a19f6p+4,
    -0x1.168p-50, // 18.0710639679109235 + -9.66240976119081552e-16
                  // [0x403212313F8A19F6 + 0xBCD1680000000000]
    0x1.5362dd173f792p+4,
    0x1.1dp-51, // 21.2116366298792585 +  4.94396190653390022e-16
                // [0x4035362DD173F792 + 0x3CC1D00000000000]
    0x1.85a3b930156ddp+4,
    0x1.088p-50, // 24.3524715307493018 +  9.17668718791730953e-16
                 // [0x40385A3B930156DD + 0x3CD0880000000000]
    0x1.b7e54a5fd5f11p+4,
    0x1.d28p-50, // 27.4934791320402532 +  1.61849700308636102e-15
                 // [0x403B7E54A5FD5F11 + 0x3CDD280000000000]
    0x1.ea27591cbbed2p+4,
    -0x1.37p-51, // 30.6346064684319757 + -5.39499001028787006e-16
                 // [0x403EA27591CBBED2 + 0xBCC3700000000000]
    0x1.0e34e13a66fe6p+5,
    0x1.a3p-50, // 33.7758202135735672 +  1.45369827286856435e-15
                // [0x4040E34E13A66FE6 + 0x3CDA300000000000]
    0x1.275637a9619ecp+5,
    -0x1.0bp-50, // 36.9170983536640449 + -9.26342336171614988e-16
                 // [0x404275637A9619EC + 0xBCD0B00000000000]
};
/*
//
//  Coefficients for polynomial minimax-approximation J0(x) = P1(x-Z[0]) on
interval (0,S[0]):
//
*/
static const double __dj0_ep_dP1[] = {
    -0x1.8230006f896f4p-66, //  -2.04445963718088858e-20 [0xBBD8230006F896F4]
    0x1.55444ebabdbf7p-60,  //   1.15625698277889504e-18 [0x3C355444EBABDBF7]
    0x1.7260cf8da1afbp-56,  //   2.00782406657390732e-17 [0x3C77260CF8DA1AFB]
    -0x1.bba50f06efadep-52, //  -3.84800490555993181e-16 [0xBCBBBA50F06EFADE]
    -0x1.d23f740db037p-48,  //  -6.47048893056306539e-15 [0xBCFD23F740DB0370]
    0x1.f70e1f57fba0ep-44,  //   1.11700685538152342e-13 [0x3D3F70E1F57FBA0E]
    0x1.cd42362ea492fp-40,  //   1.63871987714522369e-12 [0x3D7CD42362EA492F]
    -0x1.bdc46cad37452p-36, //  -2.53389363975708676e-11 [0xBDBBDC46CAD37452]
    -0x1.5c2c39acab98bp-32, //  -3.16661276013226936e-10 [0xBDF5C2C39ACAB98B]
    0x1.2951bd472c072p-28,  //   4.32656516791486676e-09 [0x3E32951BD472C072]
    0x1.7ff991695aa69p-25,  //   4.47005586528694268e-08 [0x3E67FF991695AA69]
    -0x1.1cce302816eacp-21, //  -5.30491438342997002e-07 [0xBEA1CCE302816EAC]
    -0x1.232c77d22ca98p-18, //  -4.33882628862965924e-06 [0xBED232C77D22CA98]
    0x1.6ed3b9f07e84dp-15,  //   4.37291927290616944e-05 [0x3F06ED3B9F07E84D]
    0x1.15382ba06ccb6p-12,  //   0.000264377036752704172 [0x3F315382BA06CCB6]
    -0x1.1f992590d12b8p-9,  //   -0.00219420035901615393 [0xBF61F992590D12B8]
    -0x1.1bb1cbe1a4072p-7,  //    -0.0086576695933049154 [0xBF81BB1CBE1A4072]
    0x1.cfae864368d7p-5,    //     0.0566017744379462284 [0x3FACFAE864368D70]
    0x1.ba1deea029494p-4,   //      0.107938701754920097 [0x3FBBA1DEEA029494]
    -0x1.09cdb3655128p-1,   //     -0.519147497289466742 [0xBFE09CDB36551280]
    0x1.70ad177e48819p-65,  //   3.90351046521469379e-20 [0x3BE70AD177E48819]
};
/*
//
//  Coefficients for polynomial minimax-approximation J0(x) = P(x-Z[n]) on
intervals (S[n-1],S[n])
//  for n from 1 to 11:
//
*/
static const double __dj0_ep_dP[] = {
    -0x1.5d955493b6b0dp-60, // -1.18443436547607671e-18 [0xBC35D955493B6B0D]
    -0x1.3bafea253fdf8p-56, //  -1.7113435588712047e-17 [0xBC73BAFEA253FDF8]
    0x1.df27b8669206ep-52,  //   4.1560085015870662e-16 [0x3CBDF27B8669206E]
    0x1.90f04e550cffdp-48,  //  5.56414213669043518e-15 [0x3CF90F04E550CFFD]
    -0x1.104957723400ap-43, // -1.20919492450826429e-13 [0xBD4104957723400A]
    -0x1.849891732fba5p-40, // -1.38057021597880941e-12 [0xBD7849891732FBA5]
    0x1.e2f34250f8edbp-36,  //   2.7452542250126037e-11 [0x3DBE2F34250F8EDB]
    0x1.1d043329c8a9bp-32,  //  2.59220910892284412e-10 [0x3DF1D043329C8A9B]
    -0x1.41d72da26310bp-28, // -4.68339625621630224e-09 [0xBE341D72DA26310B]
    -0x1.2da37e36e5091p-25, //  -3.5115359889971925e-08 [0xBE62DA37E36E5091]
    0x1.32e6d99c860fbp-21,  //  5.71649070804500433e-07 [0x3EA32E6D99C860FB]
    0x1.ad77d7489d104p-19,  //  3.19978690682166853e-06 [0x3ECAD77D7489D104]
    -0x1.863f481a433d5p-15, // -4.65210907397495128e-05 [0xBF0863F481A433D5]
    -0x1.6f641f41956aap-13, // -0.000175185728994155688 [0xBF26F641F41956AA]
    0x1.27e31fe9a977dp-9,   //    0.0022574402290329019 [0x3F627E31FE9A977D]
    0x1.2f7ffe90256bap-8,   //   0.00463104214590764375 [0x3F72F7FFE90256BA]
    -0x1.b2150cb41e8c1p-5,  //   -0.0529885528676046283 [0xBFAB2150CB41E8C1]
    -0x1.f8f72e7a848ep-6,   //   -0.0308206514255936481 [0xBF9F8F72E7A848E0]
    0x1.5c6e60a097823p-2,   //      0.34026480655836816 [0x3FD5C6E60A097823]
    0x1.5537a4a674f2bp-64,  //   7.2255585700679983e-20 [0x3BF5537A4A674F2B]
    0x1.5ed704d8015dap-60,  //  1.18869187788028601e-18 [0x3C35ED704D8015DA]
    0x1.127b5283e9152p-56,  //  1.48796842812154539e-17 [0x3C7127B5283E9152]
    -0x1.ee6c1c2ec9e2ep-52, // -4.28842989795314494e-16 [0xBCBEE6C1C2EC9E2E]
    -0x1.56a9c639aaa23p-48, // -4.75540691446157745e-15 [0xBCF56A9C639AAA23]
    0x1.1821b65a8b9d3p-43,  //  1.24403460309411884e-13 [0x3D41821B65A8B9D3]
    0x1.43c1b8ccd409ep-40,  //  1.15021494933353136e-12 [0x3D743C1B8CCD409E]
    -0x1.edafc3ad99a1cp-36, // -2.80628330279592395e-11 [0xBDBEDAFC3AD99A1C]
    -0x1.cade185d21fccp-33, // -2.08668806982169713e-10 [0xBDECADE185D21FCC]
    0x1.4582cb291bbf3p-28,  //  4.73680720438177282e-09 [0x3E34582CB291BBF3]
    0x1.ceda4796b2099p-26,  //  2.69415703867662643e-08 [0x3E5CEDA4796B2099]
    -0x1.30e8cc3600387p-21, // -5.67937951556725237e-07 [0xBEA30E8CC3600387]
    -0x1.3324842f78efp-19,  // -2.28839100889661611e-06 [0xBEC3324842F78EF0]
    0x1.7800bc5506925p-15,  //  4.48230354452453387e-05 [0x3F07800BC5506925]
    0x1.d7960527759d9p-14,  //  0.000112434867893674599 [0x3F1D7960527759D9]
    -0x1.0e0d60385a6f2p-9,  //  -0.00206033515512593027 [0xBF60E0D60385A6F2]
    -0x1.48e63600d8416p-9,  //  -0.00250930222721069528 [0xBF648E63600D8416]
    0x1.68b984ec6493cp-5,   //     0.044033774963411848 [0x3FA68B984EC6493C]
    0x1.00f7fcf183e0dp-6,   //    0.0156841249609538831 [0x3F900F7FCF183E0D]
    -0x1.15f7977a772d4p-2,  //    -0.271452299928381935 [0xBFD15F7977A772D4]
    0x1.c7eb732f60f33p-64,  //  9.65447573771708227e-20 [0x3BFC7EB732F60F33]
    -0x1.5e53634558cbcp-60, // -1.18694975419401771e-18 [0xBC35E53634558CBC]
    -0x1.d992c6cd8d18dp-57, // -1.28362312638949329e-17 [0xBC6D992C6CD8D18D]
    0x1.f1a72ac660f07p-52,  //  4.31645167910310869e-16 [0x3CBF1A72AC660F07]
    0x1.21e22b88824a7p-48,  //  4.02294137952920268e-15 [0x3CF21E22B88824A7]
    -0x1.180dd20dab08bp-43, // -1.24368953540348248e-13 [0xBD4180DD20DAB08B]
    -0x1.0ad811c59c626p-40, // -9.48020404144998477e-13 [0xBD70AD811C59C626]
    0x1.e88c501bf63bap-36,  //  2.77707441324412784e-11 [0x3DBE88C501BF63BA]
    0x1.6dbc0fabfefccp-33,  //  1.66316846904737328e-10 [0x3DE6DBC0FABFEFCC]
    -0x1.3d7988329563p-28,  // -4.61986542301494839e-09 [0xBE33D79883295630]
    -0x1.612f2e7664c7bp-26, // -2.05580321321676973e-08 [0xBE5612F2E7664C7B]
    0x1.2346d74948c55p-21,  //  5.42545174262916235e-07 [0x3EA2346D74948C55]
    0x1.bb178da9bc42bp-20,  //  1.65064634887976793e-06 [0x3EBBB178DA9BC42B]
    -0x1.5ce7f496657e8p-15, // -4.15928454230855599e-05 [0xBF05CE7F496657E8]
    -0x1.3dfc3782af13ap-14, // -7.58135848099626231e-05 [0xBF13DFC3782AF13A]
    0x1.e2e16f97d0a83p-10,  //   0.00184204333886897674 [0x3F5E2E16F97D0A83]
    0x1.a55e9b346edbep-10,  //   0.00160739729208968186 [0x3F5A55E9B346EDBE]
    -0x1.38d1dd8992e04p-5,  //   -0.0381860091116230926 [0xBFA38D1DD8992E04]
    -0x1.42ff0cdc58463p-7,  //  -0.00985706451382579139 [0xBF842FF0CDC58463]
    0x1.dc13e66ac2e77p-3,   //     0.232459831364724784 [0x3FCDC13E66AC2E77]
    -0x1.28ee6544b70dcp-64, // -6.28776342985128016e-20 [0xBBF28EE6544B70DC]
    0x1.5a6781cf41cbcp-60,  //  1.17366350364834867e-18 [0x3C35A6781CF41CBC]
    0x1.969d0283d99b8p-57,  //  1.10212761125135586e-17 [0x3C6969D0283D99B8]
    -0x1.ec6f223f067c8p-52, // -4.27118510963462249e-16 [0xBCBEC6F223F067C8]
    -0x1.e897448c7eb57p-49, // -3.39028034619526378e-15 [0xBCEE897448C7EB57]
    0x1.12dd25f2c175cp-43,  //  1.22064074534550373e-13 [0x3D412DD25F2C175C]
    0x1.b75e24a45c4a7p-41,  //  7.80473901707978458e-13 [0x3D6B75E24A45C4A7]
    -0x1.da52768a0d79bp-36, // -2.69620910140524658e-11 [0xBDBDA52768A0D79B]
    -0x1.24c47dc3d1e3fp-33, //  -1.3313526506881656e-10 [0xBDE24C47DC3D1E3F]
    0x1.2ffb8deff4597p-28,  //  4.42352952874585657e-09 [0x3E32FFB8DEFF4597]
    0x1.11963965beba5p-26,  //  1.59248484598619955e-08 [0x3E511963965BEBA5]
    -0x1.1223e2bd0b15dp-21, // -5.10625873700132525e-07 [0xBEA1223E2BD0B15D]
    -0x1.4b230b1143795p-20, // -1.23358103493477641e-06 [0xBEB4B230B1143795]
    0x1.41f3b0662f541p-15,  //  3.83796585068188026e-05 [0x3F041F3B0662F541]
    0x1.cc0bda19ffcc4p-15,  //  5.48417921919452337e-05 [0x3F0CC0BDA19FFCC4]
    -0x1.b541f829bfb43p-10, //  -0.00166800572554821956 [0xBF5B541F829BFB43]
    -0x1.2a2151407dd07p-10, //  -0.00113727625295984166 [0xBF52A2151407DD07]
    0x1.17798aa09f11fp-5,   //    0.0341155726973474335 [0x3FA17798AA09F11F]
    0x1.c54b930fef892p-8,   //    0.0069167360342686935 [0x3F7C54B930FEF892]
    -0x1.a701d0f9675p-3,    //    -0.206546433077996028 [0xBFCA701D0F967500]
    -0x1.27cde1849fa8cp-65, // -3.13194902868671548e-20 [0xBBE27CDE1849FA8C]
    -0x1.53b922acc4216p-60, // -1.15102692373863286e-18 [0xBC353B922ACC4216]
    -0x1.5d20661db4ccbp-57, // -9.46309432092931612e-18 [0xBC65D20661DB4CCB]
    0x1.e1dd45a8beda2p-52,  //  4.17950695029129863e-16 [0x3CBE1DD45A8BEDA2]
    0x1.9cc61b982ac49p-49,  //  2.86419401083460002e-15 [0x3CE9CC61B982AC49]
    -0x1.0ad5fa8d7158ep-43, // -1.18498923730352971e-13 [0xBD40AD5FA8D7158E]
    -0x1.6c2a68b9f3d8ap-41, // -6.46888161699793061e-13 [0xBD66C2A68B9F3D8A]
    0x1.c80aab9da1afap-36,  //  2.59229682995114888e-11 [0x3DBC80AAB9DA1AFA]
    0x1.db1e891a16f65p-34,  //  1.08029616855939962e-10 [0x3DDDB1E891A16F65]
    -0x1.2101c49e7c80dp-28, // -4.20560400262443405e-09 [0xBE32101C49E7C80D]
    -0x1.b227eeeee871ap-27, // -1.26356023125648028e-08 [0xBE4B227EEEEE871A]
    0x1.01716dc9f5493p-21,  //  4.79525106950945191e-07 [0x3EA01716DC9F5493]
    0x1.0129708ebb82p-20,   //  9.58002633384958367e-07 [0x3EB0129708EBB820]
    -0x1.2aa939fd9fcf5p-15, // -3.56031705281925574e-05 [0xBF02AA939FD9FCF5]
    -0x1.5f0152478f4bp-15,  // -4.18430759592051385e-05 [0xBF05F0152478F4B0]
    0x1.9166c7d3eaa7dp-10,  //   0.00153122515346618073 [0x3F59166C7D3EAA7D]
    0x1.c1b47c809c5e7p-11,  //  0.000857744264136592392 [0x3F4C1B47C809C5E7]
    -0x1.fd7c3ad6f59ep-6,   //   -0.0310965132337858163 [0xBF9FD7C3AD6F59E0]
    -0x1.5467eb535deaap-8,  //  -0.00519418235068484259 [0xBF75467EB535DEAA]
    0x1.8077f56c9b782p-3,   //     0.187728803040439429 [0x3FC8077F56C9B782]
    -0x1.82ac3a064232cp-64, // -8.18811419625011073e-20 [0xBBF82AC3A064232C]
    0x1.4b4638ac429c4p-60,  //  1.12240099437056666e-18 [0x3C34B4638AC429C4]
    0x1.2ce8b53923151p-57,  //  8.15615520126696093e-18 [0x3C62CE8B53923151]
    -0x1.d461cfb2ddd4ep-52, // -4.06256691031479142e-16 [0xBCBD461CFB2DDD4E]
    -0x1.5f1550ae87343p-49, //  -2.4361295089246115e-15 [0xBCE5F1550AE87343]
    0x1.01935044e553fp-43,  //  1.14386475207177886e-13 [0x3D401935044E553F]
    0x1.313240bce5607p-41,  //  5.42137535435889974e-13 [0x3D6313240BCE5607]
    -0x1.b4c521a2448d9p-36, // -2.48275025832045202e-11 [0xBDBB4C521A2448D9]
    -0x1.881d562b5b01cp-34, // -8.91565369079326684e-11 [0xBDD881D562B5B01C]
    0x1.12782f0f7cbbep-28,  //  3.99405643236528675e-09 [0x3E312782F0F7CBBE]
    0x1.60f73a68467a4p-27,  //    1.027265490775049e-08 [0x3E460F73A68467A4]
    -0x1.e4d893dce540dp-22, // -4.51548030794031175e-07 [0xBE9E4D893DCE540D]
    -0x1.9c8e418a144cfp-21, // -7.68444850205363014e-07 [0xBEA9C8E418A144CF]
    0x1.170ab5eeb0e79p-15,  //  3.32643793306248864e-05 [0x3F0170AB5EEB0E79]
    0x1.1695765f13a9fp-15,  //  3.32097813432370386e-05 [0x3F01695765F13A9F]
    -0x1.74a948d05638ep-10, //  -0.00142158991737615118 [0xBF574A948D05638E]
    -0x1.62813c7f5872fp-11, // -0.000676164301619963204 [0xBF462813C7F5872F]
    0x1.d7073daebb02cp-6,   //    0.0287492849701466574 [0x3F9D7073DAEBB02C]
    0x1.0ba9ce88929f2p-8,   //   0.00408421795197931765 [0x3F70BA9CE88929F2]
    -0x1.62d93aa9d05bbp-3,  //    -0.173265894229229861 [0xBFC62D93AA9D05BB]
    0x1.fdd6f4a95b3f2p-65,  //  5.39813748666480486e-20 [0x3BEFDD6F4A95B3F2]
    -0x1.41ea695baf3fp-60,  // -1.09069271537623849e-18 [0xBC341EA695BAF3F0]
    -0x1.04f4b5412e2cep-57, //  -7.0732235911970418e-18 [0xBC604F4B5412E2CE]
    0x1.c5ab00be3f86cp-52,  //   3.9349424768026757e-16 [0x3CBC5AB00BE3F86C]
    0x1.2d49f4087f3f1p-49,  //  2.09061157206005304e-15 [0x3CE2D49F4087F3F1]
    -0x1.f01ccea7fbfacp-44, // -1.10159110349881373e-13 [0xBD3F01CCEA7FBFAC]
    -0x1.02ff6ca737039p-41, //  -4.6007242756119267e-13 [0xBD602FF6CA737039]
    0x1.a20de901fd3d5p-36,  //  2.37636377657064556e-11 [0x3DBA20DE901FD3D5]
    0x1.4919923775607p-34,  //  7.48286509721737007e-11 [0x3DD4919923775607]
    -0x1.05141505a1539p-28, // -3.79919141080107176e-09 [0xBE305141505A1539]
    -0x1.253415ec9c629p-27, // -8.53334377571235242e-09 [0xBE4253415EC9C629]
    0x1.ca7507840c38ep-22,  //   4.2697148950042412e-07 [0x3E9CA7507840C38E]
    0x1.53ac4ecd41679p-21,  //  6.32690409980206257e-07 [0x3EA53AC4ECD41679]
    -0x1.0679c92c303bep-15, // -3.12895448089165997e-05 [0xBF00679C92C303BE]
    -0x1.c79db4b341c92p-16, // -2.71568321297514188e-05 [0xBEFC79DB4B341C92]
    0x1.5d18d69de6cfbp-10,  //   0.00133169946591388147 [0x3F55D18D69DE6CFB]
    0x1.20a3f8c12a1fcp-11,  //  0.000550538090597518358 [0x3F420A3F8C12A1FC]
    -0x1.b8105d59b114cp-6,  //   -0.0268593703865616512 [0xBF9B8105D59B114C]
    -0x1.b3297fdae7902p-9,  //  -0.00332002340060377852 [0xBF6B3297FDAE7902]
    0x1.4b2a2ebf61ecep-3,   //     0.161701550689250018 [0x3FC4B2A2EBF61ECE]
    0x1.22f06185a8bf4p-63,  //  1.23217454267738711e-19 [0x3C022F06185A8BF4]
    0x1.3842b3b8e29fdp-60,  //  1.05797991232060486e-18 [0x3C33842B3B8E29FD]
    0x1.c7f11e67c2051p-58,  //  6.17916457744887437e-18 [0x3C5C7F11E67C2051]
    -0x1.b6c24d6e7fd96p-52, // -3.80562763605190392e-16 [0xBCBB6C24D6E7FD96]
    -0x1.050d2534c486ep-49, // -1.81140761397742763e-15 [0xBCE050D2534C486E]
    0x1.dd98428322e03p-44,  //  1.06047340885685843e-13 [0x3D3DD98428322E03]
    0x1.bd09a871f3b29p-42,  //  3.95272904646251184e-13 [0x3D5BD09A871F3B29]
    -0x1.908ba7b66fb77p-36, // -2.27683772119365712e-11 [0xBDB908BA7B66FB77]
    -0x1.187927059e20bp-34, // -6.37722340974536637e-11 [0xBDD187927059E20B]
    0x1.f1fb225d854d3p-29,  //  3.62328859863262017e-09 [0x3E2F1FB225D854D3]
    0x1.f0200e1f470f6p-28,  //  7.21957207842694802e-09 [0x3E3F0200E1F470F6]
    -0x1.b35ef28e9cd7p-22,  // -4.05470736909033549e-07 [0xBE9B35EF28E9CD70]
    -0x1.1d9e3629b04aap-21, // -5.32005008234541631e-07 [0xBEA1D9E3629B04AA]
    0x1.f0b30f4506216p-16,  //  2.96055943814506391e-05 [0x3EFF0B30F4506216]
    0x1.7d55405348ae8p-16,  //  2.27292187676792162e-05 [0x3EF7D55405348AE8]
    -0x1.496158dc5f7fep-10, //  -0.00125648598540761781 [0xBF5496158DC5F7FE]
    -0x1.e1c0589e32babp-12, //  -0.00045943389148977537 [0xBF3E1C0589E32BAB]
    0x1.9e74e754ea71fp-6,   //     0.025296426687112402 [0x3F99E74E754EA71F]
    0x1.6ac0d2e2f2f87p-9,   //   0.00276758741663302469 [0x3F66AC0D2E2F2F87]
    -0x1.37aac8c1aeabbp-3,  //    -0.152181213770594542 [0xBFC37AAC8C1AEABB]
    0x1.f5078e644f55fp-64,  //  1.06097127000724014e-19 [0x3BFF5078E644F55F]
    -0x1.2eb3155314fecp-60, //  -1.0255859480103794e-18 [0xBC32EB3155314FEC]
    -0x1.915e8122bab2bp-58, // -5.43956641277756111e-18 [0xBC5915E8122BAB2B]
    0x1.a83cc046da134p-52,  //  3.67967209576221014e-16 [0x3CBA83CC046DA134]
    0x1.c8a91dbc9d4d6p-50,  //  1.58435976143199713e-15 [0x3CDC8A91DBC9D4D6]
    -0x1.cc152566ee9f5p-44, // -1.02158859585183596e-13 [0xBD3CC152566EE9F5]
    -0x1.82c011f5a35abp-42, // -3.43503247215957958e-13 [0xBD582C011F5A35AB]
    0x1.80711232343fcp-36,  //  2.18529796655161896e-11 [0x3DB80711232343FC]
    0x1.e48dbed0dcfa5p-35,  //  5.50873770486235103e-11 [0x3DCE48DBED0DCFA5]
    -0x1.dc4c0237a625p-29,  // -3.46551612044653394e-09 [0xBE2DC4C0237A6250]
    -0x1.aa483fc7c56d6p-28, // -6.20322277552626271e-09 [0xBE3AA483FC7C56D6]
    0x1.9f1bd69b14ffbp-22,  //  3.86600143624905939e-07 [0x3E99F1BD69B14FFB]
    0x1.e8a88601eeb3dp-22,  //  4.55098501213748242e-07 [0x3E9E8A88601EEB3D]
    -0x1.d855d7b8f0213p-16, // -2.81533791370876202e-05 [0xBEFD855D7B8F0213]
    -0x1.452194b75f238p-16, // -1.93793282199253107e-05 [0xBEF452194B75F238]
    0x1.38984b76cdf4ap-10,  //   0.00119245491596405235 [0x3F538984B76CDF4A]
    0x1.99e6923ada91dp-12,  //  0.000390911740103876322 [0x3F399E6923ADA91D]
    -0x1.88d48d1d4eb7bp-6,  //   -0.0239764574118725808 [0xBF988D48D1D4EB7B]
    -0x1.346950bfd91f1p-9,  //  -0.00235299215994388316 [0xBF6346950BFD91F1]
    0x1.27407dfadee6dp-3,   //     0.144165977686373209 [0x3FC27407DFADEE6D]
    -0x1.3b39297fba3e3p-64, // -6.67511279814844978e-20 [0xBBF3B39297FBA3E3]
    0x1.2575867e38308p-60,  //  9.94278049416192418e-19 [0x3C32575867E38308]
    0x1.63fc5ccf70db9p-58,  //  4.82450710204715424e-18 [0x3C563FC5CCF70DB9]
    -0x1.9a65e8e451006p-52, // -3.55963596184051833e-16 [0xBCB9A65E8E451006]
    -0x1.92f8ca6cfe9cfp-50, // -1.39808941775056837e-15 [0xBCD92F8CA6CFE9CF]
    0x1.bbc1b6aa232ebp-44,  //  9.85337796889563847e-14 [0x3D3BBC1B6AA232EB]
    0x1.5394457782f8bp-42,  //  3.01606903878497161e-13 [0x3D55394457782F8B]
    -0x1.71bbb6819623ap-36, // -2.10169021996515283e-11 [0xBDB71BBB6819623A]
    -0x1.a782bf181aa3fp-35, // -4.81475954490434912e-11 [0xBDCA782BF181AA3F]
    0x1.c8d9d45bae50bp-29,  //  3.32402775950242242e-09 [0x3E2C8D9D45BAE50B]
    0x1.731841027f81ap-28,  //  5.40013922684281333e-09 [0x3E3731841027F81A]
    -0x1.8d38497bec23ap-22, // -3.69939833207012436e-07 [0xBE98D38497BEC23A]
    -0x1.a8019ef76367bp-22, // -3.94886668663624368e-07 [0xBE9A8019EF76367B]
    0x1.c317f85411268p-16,  //  2.68872757518572091e-05 [0x3EFC317F85411268]
    0x1.196de0eeef02dp-16,  //  1.67744882977190339e-05 [0x3EF196DE0EEEF02D]
    -0x1.2a184be0d9891p-10, //   -0.0011371418297243844 [0xBF52A184BE0D9891]
    -0x1.624437a2fe765p-12, // -0.000337854837368581275 [0xBF3624437A2FE765]
    0x1.764141d652089p-6,   //    0.0228427069608021817 [0x3F9764141D652089]
    0x1.0a668185c01b1p-9,   //   0.00203247386059520656 [0x3F60A668185C01B1]
    -0x1.192f23ce3e051p-3,  //    -0.137296943408502986 [0xBFC192F23CE3E051]
    0x1.55053071414b3p-64,  //  7.22138511823364674e-20 [0x3BF55053071414B3]
    -0x1.1ca82ac691ff5p-60, // -9.64455101017488813e-19 [0xBC31CA82AC691FF5]
    -0x1.3dfb01914866cp-58, // -4.30943926198754193e-18 [0xBC53DFB01914866C]
    0x1.8d5e17978cf93p-52,  //  3.44661406607015625e-16 [0x3CB8D5E17978CF93]
    0x1.667e8c25401fep-50,  //  1.24377704646256706e-15 [0x3CD667E8C25401FE]
    -0x1.aca41bfd9d46ep-44, //  -9.5177433069059944e-14 [0xBD3ACA41BFD9D46E]
    -0x1.2cea1765cd74ap-42, //    -2.67265693594302e-13 [0xBD52CEA1765CD74A]
    0x1.64531bc5b6933p-36,  //  2.02547109053016784e-11 [0x3DB64531BC5B6933]
    0x1.75f5a38a279c8p-35,  //  4.25142760226755055e-11 [0x3DC75F5A38A279C8]
    -0x1.b75d66a6d7db9p-29, // -3.19680000823510408e-09 [0xBE2B75D66A6D7DB9]
    -0x1.46ac67a2de74ep-28, // -4.75372444435227358e-09 [0xBE346AC67A2DE74E]
    0x1.7d51f133b39a3p-22,  //  3.55132004897871859e-07 [0x3E97D51F133B39A3]
    0x1.7452c6522842p-22,   //  3.46753130329017061e-07 [0x3E97452C65228420]
    -0x1.b06384e48ee08p-16, // -2.57723776419926519e-05 [0xBEFB06384E48EE08]
    -0x1.ed574afab6e7fp-17, // -1.47027071667950732e-05 [0xBEEED574AFAB6E7F]
    0x1.1d69ca0d88394p-10,  //    0.0010887651036528322 [0x3F51D69CA0D88394]
    0x1.3627f261f5113p-12,  //  0.000295787851539290245 [0x3F33627F261F5113]
    -0x1.6613d93b0180bp-6,  //   -0.0218553182021637253 [0xBF96613D93B0180B]
    -0x1.d242aa529931dp-10, //  -0.00177864231650310474 [0xBF5D242AA529931D]
    0x1.0cf3ed059c573p-3,   //     0.131324626668667926 [0x3FC0CF3ED059C573]
    0x1.952703b5afd34p-63,  //  1.71588715880240627e-19 [0x3C0952703B5AFD34]
};
/*
//
//  Coefficients for polynomial pade-approximation
//  P0(x) = PP(1296/x^2) in point 1296/x^2 = 0.5
//  Q0(x) = QP(1296/x^2)*(36/x)) in point 1296/x^2 = 0.5
//
*/
static const double __dj0_ep_dPP[] = {
    -0x1.1d33e22820ce2p-65, //     -3.01970072274910112e-20 [0xBBE1D33E22820CE2]
    0x1.c21171d1b716bp-61,  //       7.6244509124953826e-19 [0x3C2C21171D1B716B]
    -0x1.646d4878d7441p-56, //     -1.93219402655167118e-17 [0xBC7646D4878D7441]
    0x1.7197abb91691bp-51,  //      6.41140723905704152e-16 [0x3CC7197ABB91691B]
    -0x1.0f08e21634915p-45, //     -3.00908964201284839e-14 [0xBD20F08E21634915]
    0x1.2f0474e0576bdp-39,  //      2.15306818341308315e-12 [0x3D82F0474E0576BD]
    -0x1.212ce9049c4b5p-32, //      -2.6300352198873972e-10 [0xBDF212CE9049C4B5]
    0x1.1ec919de85abdp-24,  //      6.67724644260202629e-08 [0x3E71EC919DE85ABD]
    -0x1.c71c71c71c71cp-15, //     -5.42534722222222192e-05 [0xBF0C71C71C71C71C]
    0x1p+0,                 //                            1 [0x3FF0000000000000]
};
static const double __dj0_ep_dQP[] = {
    0x1.13ff08ba744efp-67,  //      7.30555929783910137e-21 [0x3BC13FF08BA744EF]
    -0x1.8dc7d0c1febd4p-63, //     -1.68466606979394302e-19 [0xBC08DC7D0C1FEBD4]
    0x1.1562ae18f1c51p-58,  //      3.75927410153957425e-18 [0x3C51562AE18F1C51]
    -0x1.ed914f42e626p-54,  //     -1.07025416238145711e-16 [0xBC9ED914F42E6260]
    0x1.2dd57e26be263p-48,  //        4.188787596874229e-15 [0x3CF2DD57E26BE263]
    -0x1.0e48b730d814fp-42, //     -2.40060456197827542e-13 [0xBD50E48B730D814F]
    0x1.83dcbea2882f2p-36,  //      2.20474182616261576e-11 [0x3DB83DCBEA2882F2]
    -0x1.021b641511e22p-28, //     -3.75595112396356956e-09 [0xBE3021B641511E22]
    0x1.a5663075fde4ap-20,  //      1.56983426568930047e-06 [0x3EBA5663075FDE4A]
    -0x1.c71c71c71c71cp-9,  //      -0.00347222222222222203 [0xBF6C71C71C71C71C]
};
inline int __devicelib_imf_internal_dj0(const double *a, double *r) {
  int nRet = 0;
  int i = 0, j = 0;
  uint32_t ixhi = 0;
  uint64_t lx = 0;
  double x = __fabs(*a), xi = 0, y = 0, z = 0, p = 0, q = 0, rr = 0, r1 = 0,
         result = 0;
  double dy = 0, dz = 0;
  const double dtonpi = 0x1.45f306dc9c883p-1; // 6.366197723675813430755e-01
  ixhi = ((uint32_t *)&x)[1];
  lx = *(uint64_t *)&x;
  if (ixhi < 0x3C600000) /* |x| < 2^(-57) */
  {
    result = 1.0 - __fabs(x);
  } else if (ixhi < 0x7FF00000) /* x is not INF or NaN */
  {
    if (x <=
        __dj0_ep_dS[11]) /* Rational or polynomial approximation of j0(x) */
    {
      if (x < __dj0_ep_dS[0]) {
        // Reduced argument
        x = x - __dj0_ep_dZ_MP[0];
        x = x - __dj0_ep_dZ_MP[1];
        y = x * x;
        // Polynomial
        p = (((((((((__dj0_ep_dP1[0] * y + __dj0_ep_dP1[2]) * y +
                    __dj0_ep_dP1[4]) *
                       y +
                   __dj0_ep_dP1[6]) *
                      y +
                  __dj0_ep_dP1[8]) *
                     y +
                 __dj0_ep_dP1[10]) *
                    y +
                __dj0_ep_dP1[12]) *
                   y +
               __dj0_ep_dP1[14]) *
                  y +
              __dj0_ep_dP1[16]) *
                 y +
             __dj0_ep_dP1[18]) *
                y +
            __dj0_ep_dP1[20];
        q = (((((((((__dj0_ep_dP1[1] * y + __dj0_ep_dP1[3]) * y +
                    __dj0_ep_dP1[5]) *
                       y +
                   __dj0_ep_dP1[7]) *
                      y +
                  __dj0_ep_dP1[9]) *
                     y +
                 __dj0_ep_dP1[11]) *
                    y +
                __dj0_ep_dP1[13]) *
                   y +
               __dj0_ep_dP1[15]) *
                  y +
              __dj0_ep_dP1[17]) *
                 y +
             __dj0_ep_dP1[19]) *
            x;
      } else {
        // Find interval
        for (i = 1; (i < 11) && (x >= __dj0_ep_dS[i]); i++)
          ;
        // Reduced argument
        x = x - __dj0_ep_dZ_MP[i * 2 + 0];
        x = x - __dj0_ep_dZ_MP[i * 2 + 1];
        j = (i - 1) * 20;
        y = x * x;
        // Polynomial
        p = (((((((((__dj0_ep_dP[j + 0] * y + __dj0_ep_dP[j + 2]) * y +
                    __dj0_ep_dP[j + 4]) *
                       y +
                   __dj0_ep_dP[j + 6]) *
                      y +
                  __dj0_ep_dP[j + 8]) *
                     y +
                 __dj0_ep_dP[j + 10]) *
                    y +
                __dj0_ep_dP[j + 12]) *
                   y +
               __dj0_ep_dP[j + 14]) *
                  y +
              __dj0_ep_dP[j + 16]) *
                 y +
             __dj0_ep_dP[j + 18]) *
            x;
        q = ((((((((__dj0_ep_dP[j + 1] * y + __dj0_ep_dP[j + 3]) * y +
                   __dj0_ep_dP[j + 5]) *
                      y +
                  __dj0_ep_dP[j + 7]) *
                     y +
                 __dj0_ep_dP[j + 9]) *
                    y +
                __dj0_ep_dP[j + 11]) *
                   y +
               __dj0_ep_dP[j + 13]) *
                  y +
              __dj0_ep_dP[j + 15]) *
                 y +
             __dj0_ep_dP[j + 17]) *
                y +
            __dj0_ep_dP[j + 19];
      }
      result = p + q;
    } else /* Hankel's asymptotic forms */
    {
      xi = 1.0 / x;
      y = 36.0 * xi;
      z = y * y;
      p = ((((((((__dj0_ep_dPP[0] * z + __dj0_ep_dPP[1]) * z +
                 __dj0_ep_dPP[2]) *
                    z +
                __dj0_ep_dPP[3]) *
                   z +
               __dj0_ep_dPP[4]) *
                  z +
              __dj0_ep_dPP[5]) *
                 z +
             __dj0_ep_dPP[6]) *
                z +
            __dj0_ep_dPP[7]) *
               z +
           __dj0_ep_dPP[8]) *
              z +
          __dj0_ep_dPP[9];
      q = ((((((((__dj0_ep_dQP[0] * z + __dj0_ep_dQP[1]) * z +
                 __dj0_ep_dQP[2]) *
                    z +
                __dj0_ep_dQP[3]) *
                   z +
               __dj0_ep_dQP[4]) *
                  z +
              __dj0_ep_dQP[5]) *
                 z +
             __dj0_ep_dQP[6]) *
                z +
            __dj0_ep_dQP[7]) *
               z +
           __dj0_ep_dQP[8]) *
              z +
          __dj0_ep_dQP[9];
      q = y * q;
      __dj0_ep_sincos_kernel_fp64(x, -1, &dy, &dz);
      r1 = p * dz;
      rr = r1 - q * dy;
      result = __sqrt(dtonpi * xi) * rr;
    }
  } else /* x is INF or NaN */
  {
    if (lx > 0x7FF0000000000000) /* j0(NaN) = QNaN */
    {
      result = 1.0 * x;
    } else /* j0(INF) = 0 */
    {
      result = 0.0;
    }
  }
  *r = result;
  return nRet;
}
} /* namespace */
} /* namespace __imf_impl_j0_d_ep */
DEVICE_EXTERN_C_INLINE double __devicelib_imf_j0(double x) {
  using namespace __imf_impl_j0_d_ep;
  double r;
  __devicelib_imf_internal_dj0(&x, &r);
  return r;
}
#endif /*__LIBDEVICE_IMF_ENABLED__*/
