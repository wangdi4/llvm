# UNSUPPORTED: !linux

# Test for checking that LLD links GNU LTO objects.
# This test case handles when ELF and GNU LTO files are in the command line.

# Compile with clang++ and no LTO (generate regular ELF)
# RUN: clang++ -c %S/Inputs/driver.cpp -o %t_driver.o
# RUN: clang++ -c %S/Inputs/foo.cpp -o %t_foo.o

# Compile with g++ and LTO
# RUN: g++ -c -flto %S/Inputs/bar.cpp -o %t_bar.o
# RUN: g++ -c -flto %S/Inputs/baz.cpp -o %t_baz.o

# Link
# RUN: clang++ -fuse-ld=lld %t_driver.o %t_foo.o %t_bar.o %t_baz.o -o %t_gnu_lto_test_2 > %t_out.txt 2>&1
# RUN: cat %t_out.txt | FileCheck -check-prefix=CHECKLINK %s -allow-empty

# Check that the files were linked correctly
CHECKLINK-NOT: error: undefined symbol: bar
CHECKLINK-NOT: error: undefined symbol: baz
CHECKLINK: GNU LTO files found in the command line.

# Check that the executable runs correctly
# RUN: %t_gnu_lto_test_2 | FileCheck -check-prefix=CHECKRUN2 %s
CHECKRUN2: FOO: 1
CHECKRUN2: BAR: 2
CHECKRUN2: BAZ: 3