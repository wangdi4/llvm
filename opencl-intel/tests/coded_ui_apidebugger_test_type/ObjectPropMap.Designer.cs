// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace APIDebugger.ObjectPropMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class ObjectPropMap
    {
        
        #region Properties
        public UITestAppDebuggingMicrWindow UITestAppDebuggingMicrWindow
        {
            get
            {
                if ((this.mUITestAppDebuggingMicrWindow == null))
                {
                    this.mUITestAppDebuggingMicrWindow = new UITestAppDebuggingMicrWindow();
                }
                return this.mUITestAppDebuggingMicrWindow;
            }
        }
        
        public UITestAppDebuggingMicrWindow1 UITestAppDebuggingMicrWindow1
        {
            get
            {
                if ((this.mUITestAppDebuggingMicrWindow1 == null))
                {
                    this.mUITestAppDebuggingMicrWindow1 = new UITestAppDebuggingMicrWindow1();
                }
                return this.mUITestAppDebuggingMicrWindow1;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow();
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UITestAppDebuggingMicrWindow mUITestAppDebuggingMicrWindow;
        
        private UITestAppDebuggingMicrWindow1 mUITestAppDebuggingMicrWindow1;
        
        private UIItemWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITestAppDebuggingMicrWindow : WpfWindow
    {
        
        public UITestAppDebuggingMicrWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "TestApp (Debugging) - Microsoft Visual Studio (Administrator)";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public UIItemTabList UIItemTabList
        {
            get
            {
                if ((this.mUIItemTabList == null))
                {
                    this.mUIItemTabList = new UIItemTabList(this);
                }
                return this.mUIItemTabList;
            }
        }
        #endregion
        
        #region Fields
        private UIItemTabList mUIItemTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemTabList : WpfTabList
    {
        
        public UIItemTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public UIObjectsTreeCustom UIObjectsTreeCustom
        {
            get
            {
                if ((this.mUIObjectsTreeCustom == null))
                {
                    this.mUIObjectsTreeCustom = new UIObjectsTreeCustom(this);
                }
                return this.mUIObjectsTreeCustom;
            }
        }
        
        public UIObjectsTreeTabPage UIObjectsTreeTabPage
        {
            get
            {
                if ((this.mUIObjectsTreeTabPage == null))
                {
                    this.mUIObjectsTreeTabPage = new UIObjectsTreeTabPage(this);
                }
                return this.mUIObjectsTreeTabPage;
            }
        }
        
        public UIPropertiesViewCustom UIPropertiesViewCustom
        {
            get
            {
                if ((this.mUIPropertiesViewCustom == null))
                {
                    this.mUIPropertiesViewCustom = new UIPropertiesViewCustom(this);
                }
                return this.mUIPropertiesViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIObjectsTreeCustom mUIObjectsTreeCustom;
        
        private UIObjectsTreeTabPage mUIObjectsTreeTabPage;
        
        private UIPropertiesViewCustom mUIPropertiesViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIObjectsTreeCustom : WpfCustom
    {
        
        public UIObjectsTreeCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.TabItemTextControl";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "TitleText";
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public WpfText UIObjectsTreeText
        {
            get
            {
                if ((this.mUIObjectsTreeText == null))
                {
                    this.mUIObjectsTreeText = new WpfText(this);
                    #region Search Criteria
                    this.mUIObjectsTreeText.SearchProperties[WpfText.PropertyNames.Name] = "Objects Tree";
                    this.mUIObjectsTreeText.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
                    #endregion
                }
                return this.mUIObjectsTreeText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mUIObjectsTreeText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIObjectsTreeTabPage : WpfTabPage
    {
        
        public UIObjectsTreeTabPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "Objects Tree";
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public UIObjectsTreePane UIObjectsTreePane
        {
            get
            {
                if ((this.mUIObjectsTreePane == null))
                {
                    this.mUIObjectsTreePane = new UIObjectsTreePane(this);
                }
                return this.mUIObjectsTreePane;
            }
        }
        #endregion
        
        #region Fields
        private UIObjectsTreePane mUIObjectsTreePane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIObjectsTreePane : WpfPane
    {
        
        public UIObjectsTreePane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ViewPresenter";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "ST:0:0:{5f500c39-ac42-4606-bb9b-e972edf76686}";
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public UIObjectsTreePane1 UIObjectsTreePane1
        {
            get
            {
                if ((this.mUIObjectsTreePane1 == null))
                {
                    this.mUIObjectsTreePane1 = new UIObjectsTreePane1(this);
                }
                return this.mUIObjectsTreePane1;
            }
        }
        
        public UIPropertiesViewPane UIPropertiesViewPane
        {
            get
            {
                if ((this.mUIPropertiesViewPane == null))
                {
                    this.mUIPropertiesViewPane = new UIPropertiesViewPane(this);
                }
                return this.mUIPropertiesViewPane;
            }
        }
        #endregion
        
        #region Fields
        private UIObjectsTreePane1 mUIObjectsTreePane1;
        
        private UIPropertiesViewPane mUIPropertiesViewPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIObjectsTreePane1 : WpfControl
    {
        
        public UIObjectsTreePane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ControlType] = "Pane";
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "GenericPane";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "Objects Tree";
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public UITreeViewWindow UITreeViewWindow
        {
            get
            {
                if ((this.mUITreeViewWindow == null))
                {
                    this.mUITreeViewWindow = new UITreeViewWindow(this);
                }
                return this.mUITreeViewWindow;
            }
        }
        
        public UIToolStrip1ToolBar UIToolStrip1ToolBar
        {
            get
            {
                if ((this.mUIToolStrip1ToolBar == null))
                {
                    this.mUIToolStrip1ToolBar = new UIToolStrip1ToolBar(this);
                }
                return this.mUIToolStrip1ToolBar;
            }
        }
        
        public UIToolStrip1Window UIToolStrip1Window
        {
            get
            {
                if ((this.mUIToolStrip1Window == null))
                {
                    this.mUIToolStrip1Window = new UIToolStrip1Window(this);
                }
                return this.mUIToolStrip1Window;
            }
        }
        #endregion
        
        #region Fields
        private UITreeViewWindow mUITreeViewWindow;
        
        private UIToolStrip1ToolBar mUIToolStrip1ToolBar;
        
        private UIToolStrip1Window mUIToolStrip1Window;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITreeViewWindow : WinWindow
    {
        
        public UITreeViewWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "treeView";
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public WinTree UITreeViewTree
        {
            get
            {
                if ((this.mUITreeViewTree == null))
                {
                    this.mUITreeViewTree = new WinTree(this);
                    #region Search Criteria
                    this.mUITreeViewTree.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
                    #endregion
                }
                return this.mUITreeViewTree;
            }
        }
        #endregion
        
        #region Fields
        private WinTree mUITreeViewTree;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIToolStrip1ToolBar : WinToolBar
    {
        
        public UIToolStrip1ToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "toolStrip1";
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public UISortByMenuItem UISortByMenuItem
        {
            get
            {
                if ((this.mUISortByMenuItem == null))
                {
                    this.mUISortByMenuItem = new UISortByMenuItem(this);
                }
                return this.mUISortByMenuItem;
            }
        }
        
        public UIShowObjectsMenuItem UIShowObjectsMenuItem
        {
            get
            {
                if ((this.mUIShowObjectsMenuItem == null))
                {
                    this.mUIShowObjectsMenuItem = new UIShowObjectsMenuItem(this);
                }
                return this.mUIShowObjectsMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private UISortByMenuItem mUISortByMenuItem;
        
        private UIShowObjectsMenuItem mUIShowObjectsMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UISortByMenuItem : WinMenuItem
    {
        
        public UISortByMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenuItem.PropertyNames.Name] = "Sort By";
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public WinMenuItem UISortbyDeviceMenuItem
        {
            get
            {
                if ((this.mUISortbyDeviceMenuItem == null))
                {
                    this.mUISortbyDeviceMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUISortbyDeviceMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Sort by Device";
                    this.mUISortbyDeviceMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUISortbyDeviceMenuItem.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
                    #endregion
                }
                return this.mUISortbyDeviceMenuItem;
            }
        }
        
        public WinMenuItem UISortbyContextMenuItem
        {
            get
            {
                if ((this.mUISortbyContextMenuItem == null))
                {
                    this.mUISortbyContextMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUISortbyContextMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Sort by Context";
                    this.mUISortbyContextMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUISortbyContextMenuItem.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
                    #endregion
                }
                return this.mUISortbyContextMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUISortbyDeviceMenuItem;
        
        private WinMenuItem mUISortbyContextMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIShowObjectsMenuItem : WinMenuItem
    {
        
        public UIShowObjectsMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenuItem.PropertyNames.Name] = "Show Objects";
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIShowAllMenuItem
        {
            get
            {
                if ((this.mUIShowAllMenuItem == null))
                {
                    this.mUIShowAllMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIShowAllMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Show All";
                    this.mUIShowAllMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIShowAllMenuItem.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
                    #endregion
                }
                return this.mUIShowAllMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIShowAllMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIToolStrip1Window : WinWindow
    {
        
        public UIToolStrip1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "toolStrip1";
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public WinToolBar UIToolStrip1ToolBar
        {
            get
            {
                if ((this.mUIToolStrip1ToolBar == null))
                {
                    this.mUIToolStrip1ToolBar = new WinToolBar(this);
                    #region Search Criteria
                    this.mUIToolStrip1ToolBar.SearchProperties[WinToolBar.PropertyNames.Name] = "toolStrip1";
                    this.mUIToolStrip1ToolBar.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
                    #endregion
                }
                return this.mUIToolStrip1ToolBar;
            }
        }
        #endregion
        
        #region Fields
        private WinToolBar mUIToolStrip1ToolBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIPropertiesViewPane : WpfControl
    {
        
        public UIPropertiesViewPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ControlType] = "Pane";
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "GenericPane";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "Properties View";
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public UIPropertyGridToolBarWindow UIPropertyGridToolBarWindow
        {
            get
            {
                if ((this.mUIPropertyGridToolBarWindow == null))
                {
                    this.mUIPropertyGridToolBarWindow = new UIPropertyGridToolBarWindow(this);
                }
                return this.mUIPropertyGridToolBarWindow;
            }
        }
        
        public UIOpenCLPropertiesViewWindow UIOpenCLPropertiesViewWindow
        {
            get
            {
                if ((this.mUIOpenCLPropertiesViewWindow == null))
                {
                    this.mUIOpenCLPropertiesViewWindow = new UIOpenCLPropertiesViewWindow(this);
                }
                return this.mUIOpenCLPropertiesViewWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIPropertyGridToolBarWindow mUIPropertyGridToolBarWindow;
        
        private UIOpenCLPropertiesViewWindow mUIOpenCLPropertiesViewWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIPropertyGridToolBarWindow : WinWindow
    {
        
        public UIPropertyGridToolBarWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "PropertyGridToolBar";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public UIToolBarToolBar UIToolBarToolBar
        {
            get
            {
                if ((this.mUIToolBarToolBar == null))
                {
                    this.mUIToolBarToolBar = new UIToolBarToolBar(this);
                }
                return this.mUIToolBarToolBar;
            }
        }
        #endregion
        
        #region Fields
        private UIToolBarToolBar mUIToolBarToolBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIToolBarToolBar : WinToolBar
    {
        
        public UIToolBarToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "ToolBar";
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public WinButton UICategorizedButton
        {
            get
            {
                if ((this.mUICategorizedButton == null))
                {
                    this.mUICategorizedButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICategorizedButton.SearchProperties[WinButton.PropertyNames.Name] = "Categorized";
                    this.mUICategorizedButton.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
                    #endregion
                }
                return this.mUICategorizedButton;
            }
        }
        
        public WinButton UIAlphabeticalButton
        {
            get
            {
                if ((this.mUIAlphabeticalButton == null))
                {
                    this.mUIAlphabeticalButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIAlphabeticalButton.SearchProperties[WinButton.PropertyNames.Name] = "Alphabetical";
                    this.mUIAlphabeticalButton.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
                    #endregion
                }
                return this.mUIAlphabeticalButton;
            }
        }
        
        public WinButton UIPropertyPagesButton
        {
            get
            {
                if ((this.mUIPropertyPagesButton == null))
                {
                    this.mUIPropertyPagesButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIPropertyPagesButton.SearchProperties[WinButton.PropertyNames.Name] = "Property Pages";
                    this.mUIPropertyPagesButton.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
                    #endregion
                }
                return this.mUIPropertyPagesButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICategorizedButton;
        
        private WinButton mUIAlphabeticalButton;
        
        private WinButton mUIPropertyPagesButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIOpenCLPropertiesViewWindow : WinWindow
    {
        
        public UIOpenCLPropertiesViewWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "labelPropertyName";
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public WinText UIOpenCLPropertiesViewText
        {
            get
            {
                if ((this.mUIOpenCLPropertiesViewText == null))
                {
                    this.mUIOpenCLPropertiesViewText = new WinText(this);
                    #region Search Criteria
                    this.mUIOpenCLPropertiesViewText.SearchProperties[WinText.PropertyNames.Name] = "OpenCL Properties View";
                    this.mUIOpenCLPropertiesViewText.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
                    #endregion
                }
                return this.mUIOpenCLPropertiesViewText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIOpenCLPropertiesViewText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIPropertiesViewCustom : WpfCustom
    {
        
        public UIPropertiesViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.TabItemTextControl";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "TitleText";
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public WpfText UIPropertiesViewText
        {
            get
            {
                if ((this.mUIPropertiesViewText == null))
                {
                    this.mUIPropertiesViewText = new WpfText(this);
                    #region Search Criteria
                    this.mUIPropertiesViewText.SearchProperties[WpfText.PropertyNames.Name] = "Properties View";
                    this.mUIPropertiesViewText.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
                    #endregion
                }
                return this.mUIPropertiesViewText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mUIPropertiesViewText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITestAppDebuggingMicrWindow1 : WinWindow
    {
        
        public UITestAppDebuggingMicrWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "TestApp (Debugging) - Microsoft Visual Studio (Administrator)";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public UIItemTabList1 UIItemTabList
        {
            get
            {
                if ((this.mUIItemTabList == null))
                {
                    this.mUIItemTabList = new UIItemTabList1(this);
                }
                return this.mUIItemTabList;
            }
        }
        #endregion
        
        #region Fields
        private UIItemTabList1 mUIItemTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemTabList1 : WpfTabList
    {
        
        public UIItemTabList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public UIObjectsTreeTabPage1 UIObjectsTreeTabPage
        {
            get
            {
                if ((this.mUIObjectsTreeTabPage == null))
                {
                    this.mUIObjectsTreeTabPage = new UIObjectsTreeTabPage1(this);
                }
                return this.mUIObjectsTreeTabPage;
            }
        }
        #endregion
        
        #region Fields
        private UIObjectsTreeTabPage1 mUIObjectsTreeTabPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIObjectsTreeTabPage1 : WpfTabPage
    {
        
        public UIObjectsTreeTabPage1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "Objects Tree";
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public UIObjectsTreePane2 UIObjectsTreePane
        {
            get
            {
                if ((this.mUIObjectsTreePane == null))
                {
                    this.mUIObjectsTreePane = new UIObjectsTreePane2(this);
                }
                return this.mUIObjectsTreePane;
            }
        }
        #endregion
        
        #region Fields
        private UIObjectsTreePane2 mUIObjectsTreePane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIObjectsTreePane2 : WpfPane
    {
        
        public UIObjectsTreePane2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ViewPresenter";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "ST:0:0:{5f500c39-ac42-4606-bb9b-e972edf76686}";
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public UIObjectsTreePane11 UIObjectsTreePane1
        {
            get
            {
                if ((this.mUIObjectsTreePane1 == null))
                {
                    this.mUIObjectsTreePane1 = new UIObjectsTreePane11(this);
                }
                return this.mUIObjectsTreePane1;
            }
        }
        #endregion
        
        #region Fields
        private UIObjectsTreePane11 mUIObjectsTreePane1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIObjectsTreePane11 : WpfControl
    {
        
        public UIObjectsTreePane11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ControlType] = "Pane";
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "GenericPane";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "Objects Tree";
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public UITreeViewWindow1 UITreeViewWindow
        {
            get
            {
                if ((this.mUITreeViewWindow == null))
                {
                    this.mUITreeViewWindow = new UITreeViewWindow1(this);
                }
                return this.mUITreeViewWindow;
            }
        }
        #endregion
        
        #region Fields
        private UITreeViewWindow1 mUITreeViewWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITreeViewWindow1 : WinWindow
    {
        
        public UITreeViewWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "treeView";
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public UIPlatform1IntelROpenCTreeItem UIPlatform1IntelROpenCTreeItem
        {
            get
            {
                if ((this.mUIPlatform1IntelROpenCTreeItem == null))
                {
                    this.mUIPlatform1IntelROpenCTreeItem = new UIPlatform1IntelROpenCTreeItem(this);
                }
                return this.mUIPlatform1IntelROpenCTreeItem;
            }
        }
        
        public WinTreeItem UIProgram2TreeItem
        {
            get
            {
                if ((this.mUIProgram2TreeItem == null))
                {
                    this.mUIProgram2TreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUIProgram2TreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "Program [2]";
                    this.mUIProgram2TreeItem.SearchProperties["Value"] = "0";
                    this.mUIProgram2TreeItem.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
                    #endregion
                }
                return this.mUIProgram2TreeItem;
            }
        }
        
        public WinTreeItem UIProgram1BuiltTreeItem
        {
            get
            {
                if ((this.mUIProgram1BuiltTreeItem == null))
                {
                    this.mUIProgram1BuiltTreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUIProgram1BuiltTreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "Program [1] (Built)";
                    this.mUIProgram1BuiltTreeItem.SearchProperties["Value"] = "0";
                    this.mUIProgram1BuiltTreeItem.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
                    #endregion
                }
                return this.mUIProgram1BuiltTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UIPlatform1IntelROpenCTreeItem mUIPlatform1IntelROpenCTreeItem;
        
        private WinTreeItem mUIProgram2TreeItem;
        
        private WinTreeItem mUIProgram1BuiltTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIPlatform1IntelROpenCTreeItem : WinTreeItem
    {
        
        public UIPlatform1IntelROpenCTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Platform [1] (Intel(R) OpenCL)";
            this.SearchProperties["Value"] = "0";
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public UIContext1TreeItem UIContext1TreeItem
        {
            get
            {
                if ((this.mUIContext1TreeItem == null))
                {
                    this.mUIContext1TreeItem = new UIContext1TreeItem(this);
                }
                return this.mUIContext1TreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UIContext1TreeItem mUIContext1TreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIContext1TreeItem : WinTreeItem
    {
        
        public UIContext1TreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Context [1]";
            this.SearchProperties["Value"] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public UISubDevice2CPUTreeItem UISubDevice2CPUTreeItem
        {
            get
            {
                if ((this.mUISubDevice2CPUTreeItem == null))
                {
                    this.mUISubDevice2CPUTreeItem = new UISubDevice2CPUTreeItem(this);
                }
                return this.mUISubDevice2CPUTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UISubDevice2CPUTreeItem mUISubDevice2CPUTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UISubDevice2CPUTreeItem : WinTreeItem
    {
        
        public UISubDevice2CPUTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "SubDevice [2] (CPU)";
            this.SearchProperties["Value"] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UIProgram1TreeItem
        {
            get
            {
                if ((this.mUIProgram1TreeItem == null))
                {
                    this.mUIProgram1TreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUIProgram1TreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "Program [1]";
                    this.mUIProgram1TreeItem.SearchProperties["Value"] = "3";
                    this.mUIProgram1TreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIProgram1TreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIProgram1TreeItem.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
                    #endregion
                }
                return this.mUIProgram1TreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUIProgram1TreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "DropDown";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            #endregion
        }
        
        #region Properties
        public UIDropDownMenu UIDropDownMenu
        {
            get
            {
                if ((this.mUIDropDownMenu == null))
                {
                    this.mUIDropDownMenu = new UIDropDownMenu(this);
                }
                return this.mUIDropDownMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIDropDownMenu mUIDropDownMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIDropDownMenu : WinMenu
    {
        
        public UIDropDownMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "DropDown";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIOpenSourceCodeinanewMenuItem
        {
            get
            {
                if ((this.mUIOpenSourceCodeinanewMenuItem == null))
                {
                    this.mUIOpenSourceCodeinanewMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIOpenSourceCodeinanewMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Open Source Code in a new tab";
                    this.mUIOpenSourceCodeinanewMenuItem.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    #endregion
                }
                return this.mUIOpenSourceCodeinanewMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIOpenSourceCodeinanewMenuItem;
        #endregion
    }
}
