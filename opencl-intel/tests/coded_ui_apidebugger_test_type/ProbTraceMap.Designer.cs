// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace APIDebugger.ProbTraceMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class ProbTraceMap
    {
        
        #region Properties
        public UITestAppDebuggingMicrWindow UITestAppDebuggingMicrWindow
        {
            get
            {
                if ((this.mUITestAppDebuggingMicrWindow == null))
                {
                    this.mUITestAppDebuggingMicrWindow = new UITestAppDebuggingMicrWindow();
                }
                return this.mUITestAppDebuggingMicrWindow;
            }
        }
        
        public UISaveTraceWindow UISaveTraceWindow
        {
            get
            {
                if ((this.mUISaveTraceWindow == null))
                {
                    this.mUISaveTraceWindow = new UISaveTraceWindow();
                }
                return this.mUISaveTraceWindow;
            }
        }
        
        public UIBrowseForFolderWindow UIBrowseForFolderWindow
        {
            get
            {
                if ((this.mUIBrowseForFolderWindow == null))
                {
                    this.mUIBrowseForFolderWindow = new UIBrowseForFolderWindow();
                }
                return this.mUIBrowseForFolderWindow;
            }
        }
        
        public UILoadTraceWindow UILoadTraceWindow
        {
            get
            {
                if ((this.mUILoadTraceWindow == null))
                {
                    this.mUILoadTraceWindow = new UILoadTraceWindow();
                }
                return this.mUILoadTraceWindow;
            }
        }
        
        public UIConfirmSaveAsWindow UIConfirmSaveAsWindow
        {
            get
            {
                if ((this.mUIConfirmSaveAsWindow == null))
                {
                    this.mUIConfirmSaveAsWindow = new UIConfirmSaveAsWindow();
                }
                return this.mUIConfirmSaveAsWindow;
            }
        }
        
        public UIItemWindow3 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow3();
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UITestAppDebuggingMicrWindow mUITestAppDebuggingMicrWindow;
        
        private UISaveTraceWindow mUISaveTraceWindow;
        
        private UIBrowseForFolderWindow mUIBrowseForFolderWindow;
        
        private UILoadTraceWindow mUILoadTraceWindow;
        
        private UIConfirmSaveAsWindow mUIConfirmSaveAsWindow;
        
        private UIItemWindow3 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITestAppDebuggingMicrWindow : WinWindow
    {
        
        public UITestAppDebuggingMicrWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "TestApp (Debugging) - Microsoft Visual Studio (Administrator)";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public UIItemTabList UIItemTabList
        {
            get
            {
                if ((this.mUIItemTabList == null))
                {
                    this.mUIItemTabList = new UIItemTabList(this);
                }
                return this.mUIItemTabList;
            }
        }
        #endregion
        
        #region Fields
        private UIItemTabList mUIItemTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemTabList : WpfTabList
    {
        
        public UIItemTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public UITraceViewTabPage UITraceViewTabPage
        {
            get
            {
                if ((this.mUITraceViewTabPage == null))
                {
                    this.mUITraceViewTabPage = new UITraceViewTabPage(this);
                }
                return this.mUITraceViewTabPage;
            }
        }
        
        public UIProblemsviewTabPage UIProblemsviewTabPage
        {
            get
            {
                if ((this.mUIProblemsviewTabPage == null))
                {
                    this.mUIProblemsviewTabPage = new UIProblemsviewTabPage(this);
                }
                return this.mUIProblemsviewTabPage;
            }
        }
        #endregion
        
        #region Fields
        private UITraceViewTabPage mUITraceViewTabPage;
        
        private UIProblemsviewTabPage mUIProblemsviewTabPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITraceViewTabPage : WpfTabPage
    {
        
        public UITraceViewTabPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "Trace View";
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public UITraceViewPane UITraceViewPane
        {
            get
            {
                if ((this.mUITraceViewPane == null))
                {
                    this.mUITraceViewPane = new UITraceViewPane(this);
                }
                return this.mUITraceViewPane;
            }
        }
        #endregion
        
        #region Fields
        private UITraceViewPane mUITraceViewPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITraceViewPane : WpfPane
    {
        
        public UITraceViewPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ViewPresenter";
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public UITraceViewPane1 UITraceViewPane1
        {
            get
            {
                if ((this.mUITraceViewPane1 == null))
                {
                    this.mUITraceViewPane1 = new UITraceViewPane1(this);
                }
                return this.mUITraceViewPane1;
            }
        }
        #endregion
        
        #region Fields
        private UITraceViewPane1 mUITraceViewPane1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITraceViewPane1 : WpfPane
    {
        
        public UITraceViewPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.Name] = "Trace View";
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public UIToolStrip1ToolBar UIToolStrip1ToolBar
        {
            get
            {
                if ((this.mUIToolStrip1ToolBar == null))
                {
                    this.mUIToolStrip1ToolBar = new UIToolStrip1ToolBar(this);
                }
                return this.mUIToolStrip1ToolBar;
            }
        }
        
        public UIToolStrip1Window UIToolStrip1Window
        {
            get
            {
                if ((this.mUIToolStrip1Window == null))
                {
                    this.mUIToolStrip1Window = new UIToolStrip1Window(this);
                }
                return this.mUIToolStrip1Window;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UITracedataGridViewWindow UITracedataGridViewWindow
        {
            get
            {
                if ((this.mUITracedataGridViewWindow == null))
                {
                    this.mUITracedataGridViewWindow = new UITracedataGridViewWindow(this);
                }
                return this.mUITracedataGridViewWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIToolStrip1ToolBar mUIToolStrip1ToolBar;
        
        private UIToolStrip1Window mUIToolStrip1Window;
        
        private UIItemWindow mUIItemWindow;
        
        private UITracedataGridViewWindow mUITracedataGridViewWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIToolStrip1ToolBar : WinToolBar
    {
        
        public UIToolStrip1ToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "toolStrip1";
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public UISaveMenuItem UISaveMenuItem
        {
            get
            {
                if ((this.mUISaveMenuItem == null))
                {
                    this.mUISaveMenuItem = new UISaveMenuItem(this);
                }
                return this.mUISaveMenuItem;
            }
        }
        
        public WinButton UILoadSessionButton
        {
            get
            {
                if ((this.mUILoadSessionButton == null))
                {
                    this.mUILoadSessionButton = new WinButton(this);
                    #region Search Criteria
                    this.mUILoadSessionButton.SearchProperties[WinButton.PropertyNames.Name] = "Load Session...";
                    this.mUILoadSessionButton.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
                    #endregion
                }
                return this.mUILoadSessionButton;
            }
        }
        
        public WinButton UISuccessButton
        {
            get
            {
                if ((this.mUISuccessButton == null))
                {
                    this.mUISuccessButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISuccessButton.SearchProperties[WinButton.PropertyNames.Name] = "Success";
                    this.mUISuccessButton.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
                    #endregion
                }
                return this.mUISuccessButton;
            }
        }
        
        public WinButton UIErrorsButton
        {
            get
            {
                if ((this.mUIErrorsButton == null))
                {
                    this.mUIErrorsButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIErrorsButton.SearchProperties[WinButton.PropertyNames.Name] = "Errors";
                    this.mUIErrorsButton.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
                    #endregion
                }
                return this.mUIErrorsButton;
            }
        }
        
        public UIAPIDisplayModeMenuItem UIAPIDisplayModeMenuItem
        {
            get
            {
                if ((this.mUIAPIDisplayModeMenuItem == null))
                {
                    this.mUIAPIDisplayModeMenuItem = new UIAPIDisplayModeMenuItem(this);
                }
                return this.mUIAPIDisplayModeMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private UISaveMenuItem mUISaveMenuItem;
        
        private WinButton mUILoadSessionButton;
        
        private WinButton mUISuccessButton;
        
        private WinButton mUIErrorsButton;
        
        private UIAPIDisplayModeMenuItem mUIAPIDisplayModeMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UISaveMenuItem : WinMenuItem
    {
        
        public UISaveMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenuItem.PropertyNames.Name] = "Save...";
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIAPICallsasCSVcsvMenuItem
        {
            get
            {
                if ((this.mUIAPICallsasCSVcsvMenuItem == null))
                {
                    this.mUIAPICallsasCSVcsvMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIAPICallsasCSVcsvMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "API Calls as CSV (.csv)";
                    this.mUIAPICallsasCSVcsvMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIAPICallsasCSVcsvMenuItem.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
                    #endregion
                }
                return this.mUIAPICallsasCSVcsvMenuItem;
            }
        }
        
        public WinMenuItem UISaveSessiontraceMenuItem
        {
            get
            {
                if ((this.mUISaveSessiontraceMenuItem == null))
                {
                    this.mUISaveSessiontraceMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUISaveSessiontraceMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Save Session (.trace)";
                    this.mUISaveSessiontraceMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUISaveSessiontraceMenuItem.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
                    #endregion
                }
                return this.mUISaveSessiontraceMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIAPICallsasCSVcsvMenuItem;
        
        private WinMenuItem mUISaveSessiontraceMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIAPIDisplayModeMenuItem : WinMenuItem
    {
        
        public UIAPIDisplayModeMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenuItem.PropertyNames.Name] = "API Display Mode";
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIFunctionnamesonlyMenuItem
        {
            get
            {
                if ((this.mUIFunctionnamesonlyMenuItem == null))
                {
                    this.mUIFunctionnamesonlyMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIFunctionnamesonlyMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Function names only";
                    this.mUIFunctionnamesonlyMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIFunctionnamesonlyMenuItem.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
                    #endregion
                }
                return this.mUIFunctionnamesonlyMenuItem;
            }
        }
        
        public WinMenuItem UIFunctionswithargumenMenuItem
        {
            get
            {
                if ((this.mUIFunctionswithargumenMenuItem == null))
                {
                    this.mUIFunctionswithargumenMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIFunctionswithargumenMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Functions with arguments";
                    this.mUIFunctionswithargumenMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIFunctionswithargumenMenuItem.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
                    #endregion
                }
                return this.mUIFunctionswithargumenMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIFunctionnamesonlyMenuItem;
        
        private WinMenuItem mUIFunctionswithargumenMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIToolStrip1Window : WinWindow
    {
        
        public UIToolStrip1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "toolStrip1";
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public WinToolBar UIToolStrip1ToolBar
        {
            get
            {
                if ((this.mUIToolStrip1ToolBar == null))
                {
                    this.mUIToolStrip1ToolBar = new WinToolBar(this);
                    #region Search Criteria
                    this.mUIToolStrip1ToolBar.SearchProperties[WinToolBar.PropertyNames.Name] = "toolStrip1";
                    this.mUIToolStrip1ToolBar.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
                    #endregion
                }
                return this.mUIToolStrip1ToolBar;
            }
        }
        #endregion
        
        #region Fields
        private WinToolBar mUIToolStrip1ToolBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITracedataGridViewWindow : WinWindow
    {
        
        public UITracedataGridViewWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "TracedataGridView";
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public UIDataGridViewTable UIDataGridViewTable
        {
            get
            {
                if ((this.mUIDataGridViewTable == null))
                {
                    this.mUIDataGridViewTable = new UIDataGridViewTable(this);
                }
                return this.mUIDataGridViewTable;
            }
        }
        #endregion
        
        #region Fields
        private UIDataGridViewTable mUIDataGridViewTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIDataGridViewTable : WinTable
    {
        
        public UIDataGridViewTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTable.PropertyNames.Name] = "DataGridView";
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public UITopRowRow UITopRowRow
        {
            get
            {
                if ((this.mUITopRowRow == null))
                {
                    this.mUITopRowRow = new UITopRowRow(this);
                }
                return this.mUITopRowRow;
            }
        }
        #endregion
        
        #region Fields
        private UITopRowRow mUITopRowRow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITopRowRow : WinRow
    {
        
        public UITopRowRow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinRow.PropertyNames.Name] = "Top Row";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.SearchConfigurations.Remove(SearchConfiguration.VisibleOnly);
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public WinColumnHeader UIItemColumnHeader
        {
            get
            {
                if ((this.mUIItemColumnHeader == null))
                {
                    this.mUIItemColumnHeader = new WinColumnHeader(this);
                    #region Search Criteria
                    this.mUIItemColumnHeader.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
                    #endregion
                }
                return this.mUIItemColumnHeader;
            }
        }
        #endregion
        
        #region Fields
        private WinColumnHeader mUIItemColumnHeader;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIProblemsviewTabPage : WpfTabPage
    {
        
        public UIProblemsviewTabPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "Problems view";
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public UIProblemsviewPane UIProblemsviewPane
        {
            get
            {
                if ((this.mUIProblemsviewPane == null))
                {
                    this.mUIProblemsviewPane = new UIProblemsviewPane(this);
                }
                return this.mUIProblemsviewPane;
            }
        }
        #endregion
        
        #region Fields
        private UIProblemsviewPane mUIProblemsviewPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIProblemsviewPane : WpfPane
    {
        
        public UIProblemsviewPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ViewPresenter";
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public UIProblemsviewPane1 UIProblemsviewPane1
        {
            get
            {
                if ((this.mUIProblemsviewPane1 == null))
                {
                    this.mUIProblemsviewPane1 = new UIProblemsviewPane1(this);
                }
                return this.mUIProblemsviewPane1;
            }
        }
        #endregion
        
        #region Fields
        private UIProblemsviewPane1 mUIProblemsviewPane1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIProblemsviewPane1 : WpfPane
    {
        
        public UIProblemsviewPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.Name] = "Problems view";
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public UIToolStrip1ToolBar1 UIToolStrip1ToolBar
        {
            get
            {
                if ((this.mUIToolStrip1ToolBar == null))
                {
                    this.mUIToolStrip1ToolBar = new UIToolStrip1ToolBar1(this);
                }
                return this.mUIToolStrip1ToolBar;
            }
        }
        
        public UIProblemsDataGridViewWindow UIProblemsDataGridViewWindow
        {
            get
            {
                if ((this.mUIProblemsDataGridViewWindow == null))
                {
                    this.mUIProblemsDataGridViewWindow = new UIProblemsDataGridViewWindow(this);
                }
                return this.mUIProblemsDataGridViewWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIToolStrip1ToolBar1 mUIToolStrip1ToolBar;
        
        private UIProblemsDataGridViewWindow mUIProblemsDataGridViewWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIToolStrip1ToolBar1 : WinToolBar
    {
        
        public UIToolStrip1ToolBar1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "toolStrip1";
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public WinButton UISaveAsButton
        {
            get
            {
                if ((this.mUISaveAsButton == null))
                {
                    this.mUISaveAsButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISaveAsButton.SearchProperties[WinButton.PropertyNames.Name] = "Save As...";
                    this.mUISaveAsButton.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
                    #endregion
                }
                return this.mUISaveAsButton;
            }
        }
        
        public WinButton UIItemErrorsButton
        {
            get
            {
                if ((this.mUIItemErrorsButton == null))
                {
                    this.mUIItemErrorsButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIItemErrorsButton.SearchProperties.Add(new PropertyExpression(WinButton.PropertyNames.Name, "Errors", PropertyExpressionOperator.Contains));
                    this.mUIItemErrorsButton.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
                    #endregion
                }
                return this.mUIItemErrorsButton;
            }
        }
        
        public WinButton UIItemWarningsButton
        {
            get
            {
                if ((this.mUIItemWarningsButton == null))
                {
                    this.mUIItemWarningsButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIItemWarningsButton.SearchProperties.Add(new PropertyExpression(WinButton.PropertyNames.Name, "Warnings", PropertyExpressionOperator.Contains));
                    this.mUIItemWarningsButton.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
                    #endregion
                }
                return this.mUIItemWarningsButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISaveAsButton;
        
        private WinButton mUIItemErrorsButton;
        
        private WinButton mUIItemWarningsButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIProblemsDataGridViewWindow : WinWindow
    {
        
        public UIProblemsDataGridViewWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "ProblemsDataGridView";
            this.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
            #endregion
        }
        
        #region Properties
        public WinTable UIDataGridViewTable
        {
            get
            {
                if ((this.mUIDataGridViewTable == null))
                {
                    this.mUIDataGridViewTable = new WinTable(this);
                    #region Search Criteria
                    this.mUIDataGridViewTable.SearchProperties[WinTable.PropertyNames.Name] = "DataGridView";
                    this.mUIDataGridViewTable.WindowTitles.Add("TestApp (Debugging) - Microsoft Visual Studio (Administrator)");
                    #endregion
                }
                return this.mUIDataGridViewTable;
            }
        }
        #endregion
        
        #region Fields
        private WinTable mUIDataGridViewTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UISaveTraceWindow : WinWindow
    {
        
        public UISaveTraceWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Save Trace";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Save Trace");
            #endregion
        }
        
        #region Properties
        public UIDetailsPanePane UIDetailsPanePane
        {
            get
            {
                if ((this.mUIDetailsPanePane == null))
                {
                    this.mUIDetailsPanePane = new UIDetailsPanePane(this);
                }
                return this.mUIDetailsPanePane;
            }
        }
        
        public UISaveWindow UISaveWindow
        {
            get
            {
                if ((this.mUISaveWindow == null))
                {
                    this.mUISaveWindow = new UISaveWindow(this);
                }
                return this.mUISaveWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow1(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow11 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow11(this);
                }
                return this.mUIItemWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIDetailsPanePane mUIDetailsPanePane;
        
        private UISaveWindow mUISaveWindow;
        
        private UIItemWindow1 mUIItemWindow;
        
        private UIItemWindow11 mUIItemWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIDetailsPanePane : WinPane
    {
        
        public UIDetailsPanePane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Details Pane";
            this.WindowTitles.Add("Save Trace");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIFilenameComboBox
        {
            get
            {
                if ((this.mUIFilenameComboBox == null))
                {
                    this.mUIFilenameComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIFilenameComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "File name:";
                    this.mUIFilenameComboBox.WindowTitles.Add("Save Trace");
                    #endregion
                }
                return this.mUIFilenameComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIFilenameComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UISaveWindow : WinWindow
    {
        
        public UISaveWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Save Trace");
            #endregion
        }
        
        #region Properties
        public WinButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[WinButton.PropertyNames.Name] = "Save";
                    this.mUISaveButton.WindowTitles.Add("Save Trace");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISaveButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1001";
            this.WindowTitles.Add("Save Trace");
            #endregion
        }
        
        #region Properties
        public WinEdit UIFilenameEdit
        {
            get
            {
                if ((this.mUIFilenameEdit == null))
                {
                    this.mUIFilenameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIFilenameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "File name:";
                    this.mUIFilenameEdit.WindowTitles.Add("Save Trace");
                    #endregion
                }
                return this.mUIFilenameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIFilenameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow11 : WinWindow
    {
        
        public UIItemWindow11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Items View";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Save Trace");
            #endregion
        }
        
        #region Properties
        public UISavecsvListItem UISavecsvListItem
        {
            get
            {
                if ((this.mUISavecsvListItem == null))
                {
                    this.mUISavecsvListItem = new UISavecsvListItem(this);
                }
                return this.mUISavecsvListItem;
            }
        }
        #endregion
        
        #region Fields
        private UISavecsvListItem mUISavecsvListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UISavecsvListItem : WinListItem
    {
        
        public UISavecsvListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "Save.csv";
            this.WindowTitles.Add("Save Trace");
            #endregion
        }
        
        #region Properties
        public WinEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.WindowTitles.Add("Save Trace");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIBrowseForFolderWindow : WinWindow
    {
        
        public UIBrowseForFolderWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Browse For Folder";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Browse For Folder");
            #endregion
        }
        
        #region Properties
        public UITreeViewTree UITreeViewTree
        {
            get
            {
                if ((this.mUITreeViewTree == null))
                {
                    this.mUITreeViewTree = new UITreeViewTree(this);
                }
                return this.mUITreeViewTree;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UITreeViewTree mUITreeViewTree;
        
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITreeViewTree : WinTree
    {
        
        public UITreeViewTree(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTree.PropertyNames.Name] = "Select output directory for storing session";
            this.WindowTitles.Add("Browse For Folder");
            #endregion
        }
        
        #region Properties
        public UIDesktopTreeItem UIDesktopTreeItem
        {
            get
            {
                if ((this.mUIDesktopTreeItem == null))
                {
                    this.mUIDesktopTreeItem = new UIDesktopTreeItem(this);
                }
                return this.mUIDesktopTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UIDesktopTreeItem mUIDesktopTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIDesktopTreeItem : WinTreeItem
    {
        
        public UIDesktopTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Desktop";
            this.SearchProperties["Value"] = "0";
            this.WindowTitles.Add("Browse For Folder");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UISys_avctestsTreeItem
        {
            get
            {
                if ((this.mUISys_avctestsTreeItem == null))
                {
                    this.mUISys_avctestsTreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUISys_avctestsTreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "sys_avctests";
                    this.mUISys_avctestsTreeItem.SearchProperties["Value"] = "1";
                    this.mUISys_avctestsTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUISys_avctestsTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUISys_avctestsTreeItem.WindowTitles.Add("Browse For Folder");
                    #endregion
                }
                return this.mUISys_avctestsTreeItem;
            }
        }
        
        public UIComputerTreeItem UIComputerTreeItem
        {
            get
            {
                if ((this.mUIComputerTreeItem == null))
                {
                    this.mUIComputerTreeItem = new UIComputerTreeItem(this);
                }
                return this.mUIComputerTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUISys_avctestsTreeItem;
        
        private UIComputerTreeItem mUIComputerTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIComputerTreeItem : WinTreeItem
    {
        
        public UIComputerTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Computer";
            this.SearchProperties["Value"] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.WindowTitles.Add("Browse For Folder");
            #endregion
        }
        
        #region Properties
        public UIItem2008x64CTreeItem UIItem2008x64CTreeItem
        {
            get
            {
                if ((this.mUIItem2008x64CTreeItem == null))
                {
                    this.mUIItem2008x64CTreeItem = new UIItem2008x64CTreeItem(this);
                }
                return this.mUIItem2008x64CTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UIItem2008x64CTreeItem mUIItem2008x64CTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItem2008x64CTreeItem : WinTreeItem
    {
        
        public UIItem2008x64CTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "2008x64 (C:)";
            this.SearchProperties["Value"] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.WindowTitles.Add("Browse For Folder");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UITempTreeItem
        {
            get
            {
                if ((this.mUITempTreeItem == null))
                {
                    this.mUITempTreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUITempTreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "Temp";
                    this.mUITempTreeItem.SearchProperties["Value"] = "3";
                    this.mUITempTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUITempTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUITempTreeItem.WindowTitles.Add("Browse For Folder");
                    #endregion
                }
                return this.mUITempTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUITempTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Browse For Folder");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Browse For Folder");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UILoadTraceWindow : WinWindow
    {
        
        public UILoadTraceWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Load Trace";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Load Trace");
            #endregion
        }
        
        #region Properties
        public UIItemWindow2 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow2(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow2 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1148";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Load Trace");
            #endregion
        }
        
        #region Properties
        public WinEdit UIFilenameEdit
        {
            get
            {
                if ((this.mUIFilenameEdit == null))
                {
                    this.mUIFilenameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIFilenameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "File name:";
                    this.mUIFilenameEdit.WindowTitles.Add("Load Trace");
                    #endregion
                }
                return this.mUIFilenameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIFilenameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIConfirmSaveAsWindow : WinWindow
    {
        
        public UIConfirmSaveAsWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Confirm Save As";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Confirm Save As");
            #endregion
        }
        
        #region Properties
        public UIConfirmSaveAsPane UIConfirmSaveAsPane
        {
            get
            {
                if ((this.mUIConfirmSaveAsPane == null))
                {
                    this.mUIConfirmSaveAsPane = new UIConfirmSaveAsPane(this);
                }
                return this.mUIConfirmSaveAsPane;
            }
        }
        #endregion
        
        #region Fields
        private UIConfirmSaveAsPane mUIConfirmSaveAsPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIConfirmSaveAsPane : WinPane
    {
        
        public UIConfirmSaveAsPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Confirm Save As";
            this.WindowTitles.Add("Confirm Save As");
            #endregion
        }
        
        #region Properties
        public WinButton UIYesButton
        {
            get
            {
                if ((this.mUIYesButton == null))
                {
                    this.mUIYesButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIYesButton.SearchProperties[WinButton.PropertyNames.Name] = "Yes";
                    this.mUIYesButton.WindowTitles.Add("Confirm Save As");
                    #endregion
                }
                return this.mUIYesButton;
            }
        }
        
        public WinButton UINOButton
        {
            get
            {
                if ((this.mUINOButton == null))
                {
                    this.mUINOButton = new WinButton(this);
                    #region Search Criteria
                    this.mUINOButton.SearchProperties[WinButton.PropertyNames.Name] = "No";
                    this.mUINOButton.WindowTitles.Add("Confirm Save As");
                    #endregion
                }
                return this.mUINOButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIYesButton;
        
        private WinButton mUINOButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow3 : WinWindow
    {
        
        public UIItemWindow3()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "DropDown";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIDropDownMenu UIDropDownMenu
        {
            get
            {
                if ((this.mUIDropDownMenu == null))
                {
                    this.mUIDropDownMenu = new UIDropDownMenu(this);
                }
                return this.mUIDropDownMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIDropDownMenu mUIDropDownMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIDropDownMenu : WinMenu
    {
        
        public UIDropDownMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "DropDown";
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIShowinTraceViewMenuItem
        {
            get
            {
                if ((this.mUIShowinTraceViewMenuItem == null))
                {
                    this.mUIShowinTraceViewMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIShowinTraceViewMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Show in Trace View";
                    #endregion
                }
                return this.mUIShowinTraceViewMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIShowinTraceViewMenuItem;
        #endregion
    }
}
