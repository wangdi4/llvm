/*
 * Part of the tests that check different LLVM instructions on different argument
 * types and different argument sources.
 *
 * Tests the LLVM inttoptr instruction when it recieves int input argument and turns
 * it into pointer to int. This test uses ptrdiff_t in order to have 32 bit int
 * on 32 bit architecture and 64 bit int on 64 bit architecture.
 * This instruction is vectorizable.
 *
 * @param in
 * 		The input array.
 * @param out
 * 		The output array.
 *
 */
__kernel void
inttoptr (	__global const float *in,
		__global float *out, __global const ptrdiff_t intPtrArg1)
{
	int gid = get_global_id(0);
	int * c = (int*) intPtrArg1;
	// this add is done to make sure that inttoptr will be used (on c)
	c = c + 2;
	out[gid] = as_float((int) c);
}
