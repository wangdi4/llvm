/*
 * Part of the control flow tests that check vectorization of control flow statements.
 * Tests the LLVM br caused by if-else statement when its condition depends on int and doesn't
 * depend on thread id, when only the if part contains "return".
 *
 * @param in
 *     The input array.
 * @param out
 *     The output array.
 *
 */
__kernel void
if_else ( __global const float *in,
    __global float *out, __global const int intArg1)
{
  int gid = get_global_id(0);

  int tmp1 = sub_sat(intArg1, INT4_VEC1.y * (int)(in[0]));

  if (tmp1 % 100 > 50) {

    tmp1 = tmp1 % 7;
    out[gid] = 2 + tmp1;

    return;

  } else {

    tmp1 = erfc(in[gid] - tmp1);
    tmp1 = clz((int)(tmp1 * in[gid]) - gid);

  }

  out[gid] = tmp1 + gid;

}
