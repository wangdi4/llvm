/*
 * Part of the control flow tests that check vectorization of control flow statements.
 *
 * Tests the LLVM switch instruction when its condition depends on ushort and doesn't
 * depend on thread id.
 *
 * @param in
 * 		The input array.
 * @param out
 * 		The output array.
 *
 */
__kernel void
switch_test (	__global const float *in,
		__global float *out, __global const ushort4 ushort5Arg1)
{
	int gid = get_global_id(0);
	ushort  tmp = ushort5Arg1.x + ushort5Arg1.y;

	tmp = tmp * 2;
	tmp = min(tmp, ushort5Arg1.w);

	switch(tmp) {

	case 0:
		out[gid] = 0;
		tmp = -1;
		break;

	case 1:
		tmp = out[gid];
		out[gid] = 0;
		break;

	case 2:
		out[gid] = 1;
		// fall through

	case 3:
		out[gid] = 2 + out[gid];
		break;

	case 4:
		out[gid] = 3;
		// fall through

	case 5:
		tmp = out[gid] / 7;
		out[gid] = 4 * out[gid];
		break;

	default:
		out[gid] = out[gid] - ushort5Arg1.z;
		tmp = out[gid] * 3;
		out[gid] = out[gid] + gid;
		break;

	}


	out[gid] = tmp - out[gid];
}
