/*
 * Part of the tests that check different LLVM instructions on different argument
 * types and different argument sources.
 *
 * Tests the LLVM vectorizable udiv instruction appearing after the vectorizable add instruction when
 * they both receive as input uint argument produced by previous NON vectorizable sext
 * instruction.
 *
 * @param in
 *     The input array.
 * @param out
 *     The output array.
 *
 */
__kernel void
sext_add_udiv ( __global const float *in,
    __global float8 *out)
{
  int gid = get_global_id(0);
  short inGidShort = in[gid];
  short inGidShort2 = in[gid] + 1;
  uint arg1 = inGidShort;
  uint arg2 = inGidShort2;
  uint arg3 = arg1 + arg2;
  uint arg4 = arg1 / arg2;
  out[gid].s0 = inGidShort;
  out[gid].s1 = inGidShort2;
  out[gid].s2 = arg1;
  out[gid].s3 = arg2;
  out[gid].s4 = arg3;
  out[gid].s5 = arg4;
}
