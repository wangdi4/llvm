/*
 * Part of the tests that check different LLVM instructions on different argument
 * types and different argument sources.
 *
 * Tests the LLVM NON vectorizable select function when it receives as input 3 int4
 * arguments produced by previous (vectorizable) mad24 function that receives
 * constants and function arguments as input and therfore will have scalar value.
 *
 * @param in
 *     The input array.
 * @param out
 *     The output array.
 *
 */
__kernel void
func_mad24_func_select ( __global const float *in,
    __global float16 *out, __global const uint4 int4Arg1, __global const uint4 int4Arg2, __global const uint4 int4Arg3)
{
  int gid = get_global_id(0);
  uint4 arg1 = mad24(int4Arg1, int4Arg1, int4Arg3);
  uint4 arg2 = mad24(int4Arg2, int4Arg2, int4Arg3);
  uint4 arg3 = mad24(int4Arg1, int4Arg2, int4Arg3);
  uint4 arg4 = select(arg1, arg2, arg3);
  out[gid].s0 = arg1.x;
  out[gid].s1 = arg1.y;
  out[gid].s2 = arg1.z;
  out[gid].s3 = arg1.w;
  out[gid].s4 = arg2.x;
  out[gid].s5 = arg2.y;
  out[gid].s6 = arg2.z;
  out[gid].s7 = arg2.w;
  out[gid].s8 = arg3.x;
  out[gid].s9 = arg3.y;
  out[gid].sA = arg3.z;
  out[gid].sB = arg3.w;
  out[gid].sC = arg4.x;
  out[gid].sD = arg4.y;
  out[gid].sE = arg4.z;
  out[gid].sF = arg4.w;
}

