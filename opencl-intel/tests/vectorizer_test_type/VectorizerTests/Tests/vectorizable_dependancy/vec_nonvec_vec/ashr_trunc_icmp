/*
 * Part of the tests that check different LLVM instructions on different argument
 * types and different argument sources.
 *
 * Tests the LLVM vectorizable icmp function when it receives as input 2 int arguments
 * produced by previous NON vectorizable trunc instruction that receives arguments
 * produced by previous vectorizable ashr instruction (that operates on long).
 *
 * @param in
 *     The input array.
 * @param out
 *     The output array.
 *
 */
__kernel void
ashr_trunc_icmp ( __global const float *in,
    __global float8 *out)
{
  int gid = get_global_id(0);
  long arg1 = in[gid];
  long arg2 = in[gid] * in[gid] * gid;
  long arg3 = arg2 >> arg1;
  long arg4 = arg1 >> arg2;
  int arg5 = arg3;
  int arg6 = arg4;
  int arg7 = convert_float(arg5 == arg6);
  out[gid].s0 = arg1;
  out[gid].s1 = arg2;
  out[gid].s2 = arg3;
  out[gid].s3 = arg4;
  out[gid].s4 = arg5;
  out[gid].s5 = arg6;
  out[gid].s6 = arg7;
}
