diff --git a/hwloc/topology-linux.c b/hwloc/topology-linux.c
index b3e5d3534..7bd67f1fa 100644
--- a/hwloc/topology-linux.c
+++ b/hwloc/topology-linux.c
@@ -4838,6 +4838,7 @@ look_sysfscpu(struct hwloc_topology *topology,
       hwloc__insert_object_by_cpuset(topology, NULL, thread, "linux:sysfs:pu");
     }
 
+    #if 0
     /* look at the caches */
     for(j=0; j<10; j++) {
       char str2[20]; /* enough for a level number (one digit) or a type (Data/Instruction/Unified) */
@@ -4954,7 +4955,7 @@ look_sysfscpu(struct hwloc_topology *topology,
       }
       hwloc_bitmap_free(cacheset);
      }
-
+     #endif
   } hwloc_bitmap_foreach_end();
 
   hwloc_bitmap_free(cpuset);
@@ -6889,7 +6890,10 @@ hwloc_linuxfs_pci_look_pcidevices(struct hwloc_backend *backend)
     memset(config_space_cache, 0xff, CONFIG_SPACE_CACHESIZE);
     err = snprintf(path, sizeof(path), "/sys/bus/pci/devices/%s/config", dirent->d_name);
     if ((size_t) err < sizeof(path)) {
-      hwloc_read_path_by_length(path, (char *) config_space_cache, sizeof(config_space_cache), root_fd);
+      if(hwloc_read_path_by_length(path, (char *) config_space_cache, sizeof(config_space_cache), root_fd) <= 0){
+        errno = ENOSYS;
+        return 0;
+      }
       /* we have CONFIG_SPACE_CACHESIZE bytes + the ending \0 */
     }
 
diff --git a/hwloc/topology-windows.c b/hwloc/topology-windows.c
index 20b617a9b..594a64e55 100644
--- a/hwloc/topology-windows.c
+++ b/hwloc/topology-windows.c
@@ -220,7 +220,7 @@ static void hwloc_win_get_function_ptrs(void)
 #pragma GCC diagnostic ignored "-Wcast-function-type"
 #endif
 
-    kernel32 = LoadLibrary("kernel32.dll");
+    kernel32 = LoadLibraryExA("kernel32.dll", NULL, LOAD_LIBRARY_SEARCH_SYSTEM32);
     if (kernel32) {
       GetActiveProcessorGroupCountProc =
 	(PFN_GETACTIVEPROCESSORGROUPCOUNT) GetProcAddress(kernel32, "GetActiveProcessorGroupCount");
diff --git a/hwloc/topology-x86.c b/hwloc/topology-x86.c
index a1558f077..ca87bbf94 100644
--- a/hwloc/topology-x86.c
+++ b/hwloc/topology-x86.c
@@ -1303,6 +1303,8 @@ look_procs(struct hwloc_backend *backend, struct procinfo *infos, unsigned long
   hwloc_bitmap_t set = NULL;
   unsigned i;
 
+  if(!get_cpubind||!set_cpubind)
+    return -1;
   if (!data->src_cpuiddump_path) {
     orig_cpuset = hwloc_bitmap_alloc();
     if (get_cpubind(topology, orig_cpuset, HWLOC_CPUBIND_STRICT)) {
-- 
2.39.1

