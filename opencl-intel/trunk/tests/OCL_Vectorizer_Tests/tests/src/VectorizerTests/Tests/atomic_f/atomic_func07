/*
 * Part of the control flow tests that check vectorization of control flow statements.
 *
 * use both local and global pointers
 * @param in
 * 		The input array.
 * @param out
 * 		The output array.
 *
 */



__kernel void
atomic_func07
( __global unsigned int *in,
		__global float *out)
{
	int gid = get_global_id(0);
	int i;
	float sum1=0;
	float sum2=0;
	int rez1,rez2,rez3,rez4,rez5,rez6;
	
	
	for (i=1;i<10000;i++)
	{
		rez1=atomic_add(&in[gid],gid)+atomic_add(&in[gid+33],gid);
		sum1=sum1+rez1;
		
		rez2=atomic_add(&in[gid],1)+atomic_add(&in[gid+33],2);
		rez3=atomic_sub(&in[gid],gid)+atomic_sub(&in[gid+33],gid);
		rez4=atomic_sub(&in[gid],1)+atomic_sub(&in[gid+33],3);
		rez5=atomic_xchg(&in[gid],gid)+atomic_xchg(&in[gid+33],gid);
		rez6=atomic_xchg(&in[gid],23)+atomic_xchg(&in[gid+33],2);
		
		sum2=sum2+rez2+rez3+rez4-rez5-rez6;	 		
		//printf ("\n gid=%d r1=%d r2=%d r3=%d r4=%d r5=%d r6=%d\n",gid,rez1,rez2,rez3,rez4,rez5,rez6);
	}
	out[gid] =	rez1+rez2+rez3-rez4-rez5-rez6+sum1+sum2;
}
