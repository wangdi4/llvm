/*
 * Part of the tests that check different LLVM instructions on different argument
 * types and different argument sources.
 *
 * General purpose of this test is test WIA phase as part of whole vectorizer.
 * Main purpose of test is to check corectness for efecctivness need to add performance mesuarement
 * Test UREM nstruction ( returns the remainder from the unsigned division of its two arguments.)


 * may be used for performance test
 * @param in
 * 		The input array.
 * @param out
 * 		The output array.
 *  
 *
 */
__kernel void
wia80_urem(	__global  int *in,
		__global float4 *out)
{
	int gid = get_global_id(0);   			//id is consecutive
	int un_value=1;							// i is uniform
	unsigned int uns_unif_value1=10,uns_unif_value2=gid;            // uinform
	unsigned int uns_unif_value3=in[gid];
	unsigned int result=0,result2,result3,result4,result5,result6;
	int cons_val=gid;						// cons
	int strid_val=gid*2+1;					
	int3 i= (0,1,2);
	float un_rez=100;          				//uniform
	float con_rez=gid;						//consec
	float stride_rez=gid*10;				//stride
	
	for (i.x=1;i.x<1000;i.x++)
	{	
		uns_unif_value2+=uns_unif_value2+1;
	}	
	
	result = uns_unif_value1%uns_unif_value2;  // urem unif/unif
	uns_unif_value2=gid; 
	result2 = uns_unif_value1%(uns_unif_value2); //  unif/con
	result3 = uns_unif_value2%(uns_unif_value1); //  con/unif
	result4 = uns_unif_value3%(uns_unif_value3+1); //  random / random
	result5 = (3*uns_unif_value3)%(uns_unif_value3+1)*3; //  random / random
	
	
	
	
	out[gid]=result+result2+result3+result4*result5;	
	
	
}
