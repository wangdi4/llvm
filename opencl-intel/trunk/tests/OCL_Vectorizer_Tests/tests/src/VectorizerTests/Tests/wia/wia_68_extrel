/*
 * Part of the tests that check different LLVM instructions on different argument
 * types and different argument sources.
 *
 * General purpose of this test is test WIA phase as part of whole vectorizer.
 * Main purpose of test is to check corectness for efecctivness need to add performance mesuarement
 * Test UREM nstruction ( returns the remainder from the unsigned division of its two arguments.)
 * may be used for performance test
 * @param in
 * 		The input array.
 * @param out
 * 		The output array.
 *  
 *
 */
__kernel void
wia_68_extrel(	__global  int *in,
		__global long *out)
{
	int gid = get_global_id(0);   			//id is consecutive
	int un_value=1,un_value2=in[0];			// uniform
	
	long16 l_unif_value0_v=2;                //unif
	long16 l_unif_value1_v=in[1];             //unif
	long16 l_unif_value2_v=in[gid];           //rnd
	long16 l_unif_value3_v=gid;               //cons
	long16 l_unif_value4_v=gid*3;             //stride
	int index=1;                            //uniform index
	int index2=gid;							//cons
	
	int uns_unif_value1=10; 			   //unif_v
	int uns_unif_value2=gid;            // cons_v
	long ans1,ans2,ans3;
	
	
	int3 i=0;
	int j;
	int4 flag1=1,flag2=0;
	
	long rezult1,rezult2,rezult3,rezult4=gid,rezult5=in[0];
	
	
	while (i.s1+i.s2 <1024)
	{
		
		ans1=l_unif_value0_v.s1+l_unif_value0_v.s2*3;    //unif  -   unif*unif
		if (gid==0)
		{
			ans2=l_unif_value0_v.s0+l_unif_value0_v.s0*3;    //unif  -   unif*cons
		}
		else if (gid==1)
		{
			ans2=l_unif_value0_v.s1+l_unif_value0_v.s1*1;    //unif  -   unif*cons
		}
		else if (gid==2)
		{
			ans2=l_unif_value0_v.s2+l_unif_value0_v.s2*2;    //unif  -   unif*cons
		}
		else
		{
			ans2=l_unif_value0_v.s3+l_unif_value0_v.s3*3;    //unif  -   unif*cons
		}
		
		
		rezult4+=ans2+ans1;									//cons+unif+cons
		out[gid]=rezult4+l_unif_value2_v.s1;					//rnd
		
		
		i.s1++;
		i.s2+=2;
	}	
		rezult5=l_unif_value2_v.s1+l_unif_value2_v.s2+l_unif_value2_v.s3+rezult4;
	
		out[gid]=rezult5+in[gid]+flag1.s1+rezult4;
}
