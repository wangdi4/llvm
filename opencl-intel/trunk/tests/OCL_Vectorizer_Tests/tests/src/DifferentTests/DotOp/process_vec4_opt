/* assuming that the size of the array is multiple of 4, thus we can divide it to float4 vectors */
/* - evrey thread will be responsible for one vector result */

/* This version optimaized for SSE vector Instuction (loading \ writing to memory),  
throught use of "FAKE" pointers,it may didn't work in the future versions of openCL
	** it's suitable only for the CPU !
*/
	
#define VECTOR_SIZE		4

__kernel void process_vec4_opt(__global float *data1, __global float *data2
	, __global float *data3)
{
	int tid = get_global_id(0);
	int indx = tid * VECTOR_SIZE;
	
	float4 tmp1 = *((float4*)(data1 + indx));
	float4 tmp2 = *((float4*)(data2 + indx));
	
	tmp1 = hypot(tmp1 , tmp2);
	
	*((float4*)(data3+indx))=tmp1;
}
