; CSSD100006905
; RUN: llvm-as %s -o %t.bc
; RUN: opt -scalarize -runtimelib %p/../Full/runtime.bc -packet-size=4 %t.bc


declare i32 @_Z3minDv4_hS_(i32, i32)
declare i32 @_Z3maxDv4_hS_(i32, i32)
declare i64 @get_global_id(i32)
define void @__Vectorized_.intel_median_bitonic_vector(i32 addrspace(1)* nocapture %pSrc, i32 addrspace(1)* nocapture %pDst, i32 %iImageWidth, i32 %iImageHeight) nounwind {
  %1 = tail call i64 @get_global_id(i32 0) nounwind
  %2 = icmp sgt i32 %iImageWidth, 0
  br i1 %2, label %bb.nph, label %._crit_edge

bb.nph:                                           ; preds = %0
  %tmp = trunc i64 %1 to i32
  %tmp640 = add i32 %tmp, 1
  %tmp641 = mul i32 %tmp640, %iImageWidth
  %tmp642 = add i32 %tmp641, -1
  %tmp645 = add i32 %tmp641, 1
  %tmp647 = add i32 %tmp, 2
  %tmp648 = mul i32 %tmp647, %iImageWidth
  %tmp649 = add i32 %tmp648, -1
  %tmp652 = add i32 %tmp648, 1
  %tmp654 = add i32 %tmp, 3
  %tmp655 = mul i32 %tmp654, %iImageWidth
  %tmp656 = add i32 %tmp655, -1
  %tmp659 = add i32 %tmp655, 1
  br label %3

; <label>:3                                       ; preds = %3, %bb.nph
  %x.0639 = phi i32 [ 0, %bb.nph ], [ %127, %3 ]
  %tmp643 = add i32 %tmp642, %x.0639
  %tmp644 = add i32 %tmp641, %x.0639
  %tmp646 = add i32 %tmp645, %x.0639
  %tmp650 = add i32 %tmp649, %x.0639
  %tmp651 = add i32 %tmp648, %x.0639
  %tmp653 = add i32 %tmp652, %x.0639
  %tmp657 = add i32 %tmp656, %x.0639
  %tmp658 = add i32 %tmp655, %x.0639
  %tmp660 = add i32 %tmp659, %x.0639
  %4 = sext i32 %tmp643 to i64
  %5 = getelementptr inbounds i32 addrspace(1)* %pSrc, i64 %4
  %6 = load i32 addrspace(1)* %5, align 4
  %7 = bitcast i32 %6 to <4 x i8>
  %tmp635 = bitcast <4 x i8> %7 to i32
  %8 = sext i32 %tmp644 to i64
  %9 = getelementptr inbounds i32 addrspace(1)* %pSrc, i64 %8
  %10 = load i32 addrspace(1)* %9, align 4
  %11 = bitcast i32 %10 to <4 x i8>
  %tmp629 = bitcast <4 x i8> %11 to i32
  %12 = sext i32 %tmp646 to i64
  %13 = getelementptr inbounds i32 addrspace(1)* %pSrc, i64 %12
  %14 = load i32 addrspace(1)* %13, align 4
  %15 = bitcast i32 %14 to <4 x i8>
  %tmp623 = bitcast <4 x i8> %15 to i32
  %16 = sext i32 %tmp650 to i64
  %17 = getelementptr inbounds i32 addrspace(1)* %pSrc, i64 %16
  %18 = load i32 addrspace(1)* %17, align 4
  %19 = bitcast i32 %18 to <4 x i8>
  %tmp617 = bitcast <4 x i8> %19 to i32
  %20 = sext i32 %tmp651 to i64
  %21 = getelementptr inbounds i32 addrspace(1)* %pSrc, i64 %20
  %22 = load i32 addrspace(1)* %21, align 4
  %23 = bitcast i32 %22 to <4 x i8>
  %tmp611 = bitcast <4 x i8> %23 to i32
  %24 = sext i32 %tmp653 to i64
  %25 = getelementptr inbounds i32 addrspace(1)* %pSrc, i64 %24
  %26 = load i32 addrspace(1)* %25, align 4
  %27 = bitcast i32 %26 to <4 x i8>
  %tmp605 = bitcast <4 x i8> %27 to i32
  %28 = sext i32 %tmp657 to i64
  %29 = getelementptr inbounds i32 addrspace(1)* %pSrc, i64 %28
  %30 = load i32 addrspace(1)* %29, align 4
  %31 = bitcast i32 %30 to <4 x i8>
  %tmp599 = bitcast <4 x i8> %31 to i32
  %32 = sext i32 %tmp658 to i64
  %33 = getelementptr inbounds i32 addrspace(1)* %pSrc, i64 %32
  %34 = load i32 addrspace(1)* %33, align 4
  %35 = bitcast i32 %34 to <4 x i8>
  %tmp593 = bitcast <4 x i8> %35 to i32
  %36 = sext i32 %tmp660 to i64
  %37 = getelementptr inbounds i32 addrspace(1)* %pSrc, i64 %36
  %38 = load i32 addrspace(1)* %37, align 4
  %39 = bitcast i32 %38 to <4 x i8>
  %tmp587 = bitcast <4 x i8> %39 to i32
  %tmp585 = bitcast i32 %tmp635 to <4 x i8>
  %tmp582 = bitcast i32 %tmp629 to <4 x i8>
  %40 = bitcast <4 x i8> %tmp585 to i32
  %41 = bitcast <4 x i8> %tmp582 to i32
  %42 = tail call i32 @_Z3minDv4_hS_(i32 %40, i32 %41) nounwind
  %tmp77 = bitcast i32 %42 to <4 x i8>
  %43 = tail call i32 @_Z3maxDv4_hS_(i32 %40, i32 %41) nounwind
  %tmp75 = bitcast i32 %43 to <4 x i8>
  %tmp568 = bitcast <4 x i8> %tmp77 to i32
  %tmp562 = bitcast <4 x i8> %tmp75 to i32
  %tmp560 = bitcast i32 %tmp617 to <4 x i8>
  %tmp556 = bitcast i32 %tmp623 to <4 x i8>
  %44 = bitcast <4 x i8> %tmp560 to i32
  %45 = bitcast <4 x i8> %tmp556 to i32
  %46 = tail call i32 @_Z3minDv4_hS_(i32 %44, i32 %45) nounwind
  %tmp73 = bitcast i32 %46 to <4 x i8>
  %47 = tail call i32 @_Z3maxDv4_hS_(i32 %44, i32 %45) nounwind
  %tmp71 = bitcast i32 %47 to <4 x i8>
  %tmp540 = bitcast <4 x i8> %tmp73 to i32
  %tmp534 = bitcast <4 x i8> %tmp71 to i32
  %tmp532 = bitcast i32 %tmp568 to <4 x i8>
  %48 = bitcast <4 x i8> %tmp532 to i32
  %49 = tail call i32 @_Z3minDv4_hS_(i32 %tmp534, i32 %48) nounwind
  %tmp69 = bitcast i32 %49 to <4 x i8>
  %tmp529 = bitcast i32 %tmp534 to <4 x i8>
  %50 = bitcast <4 x i8> %tmp529 to i32
  %51 = tail call i32 @_Z3maxDv4_hS_(i32 %50, i32 %48) nounwind
  %tmp67 = bitcast i32 %51 to <4 x i8>
  %tmp518 = bitcast <4 x i8> %tmp69 to i32
  %tmp513 = bitcast <4 x i8> %tmp67 to i32
  %tmp511 = bitcast i32 %tmp540 to <4 x i8>
  %tmp507 = bitcast i32 %tmp562 to <4 x i8>
  %52 = bitcast <4 x i8> %tmp511 to i32
  %53 = bitcast <4 x i8> %tmp507 to i32
  %54 = tail call i32 @_Z3minDv4_hS_(i32 %52, i32 %53) nounwind
  %tmp65 = bitcast i32 %54 to <4 x i8>
  %55 = tail call i32 @_Z3maxDv4_hS_(i32 %52, i32 %53) nounwind
  %tmp63 = bitcast i32 %55 to <4 x i8>
  %tmp491 = bitcast <4 x i8> %tmp65 to i32
  %tmp485 = bitcast <4 x i8> %tmp63 to i32
  %tmp483 = bitcast i32 %tmp513 to <4 x i8>
  %56 = bitcast <4 x i8> %tmp483 to i32
  %57 = tail call i32 @_Z3minDv4_hS_(i32 %tmp485, i32 %56) nounwind
  %tmp61 = bitcast i32 %57 to <4 x i8>
  %tmp480 = bitcast i32 %tmp485 to <4 x i8>
  %58 = bitcast <4 x i8> %tmp480 to i32
  %59 = tail call i32 @_Z3maxDv4_hS_(i32 %58, i32 %56) nounwind
  %tmp59 = bitcast i32 %59 to <4 x i8>
  %tmp469 = bitcast <4 x i8> %tmp61 to i32
  %tmp464 = bitcast <4 x i8> %tmp59 to i32
  %tmp462 = bitcast i32 %tmp491 to <4 x i8>
  %tmp458 = bitcast i32 %tmp518 to <4 x i8>
  %60 = bitcast <4 x i8> %tmp462 to i32
  %61 = bitcast <4 x i8> %tmp458 to i32
  %62 = tail call i32 @_Z3minDv4_hS_(i32 %60, i32 %61) nounwind
  %tmp57 = bitcast i32 %62 to <4 x i8>
  %63 = tail call i32 @_Z3maxDv4_hS_(i32 %60, i32 %61) nounwind
  %tmp55 = bitcast i32 %63 to <4 x i8>
  %tmp442 = bitcast <4 x i8> %tmp57 to i32
  %tmp436 = bitcast <4 x i8> %tmp55 to i32
  %tmp434 = bitcast i32 %tmp605 to <4 x i8>
  %tmp430 = bitcast i32 %tmp611 to <4 x i8>
  %64 = bitcast <4 x i8> %tmp434 to i32
  %65 = bitcast <4 x i8> %tmp430 to i32
  %66 = tail call i32 @_Z3minDv4_hS_(i32 %64, i32 %65) nounwind
  %tmp53 = bitcast i32 %66 to <4 x i8>
  %67 = tail call i32 @_Z3maxDv4_hS_(i32 %64, i32 %65) nounwind
  %tmp51 = bitcast i32 %67 to <4 x i8>
  %tmp414 = bitcast <4 x i8> %tmp53 to i32
  %tmp408 = bitcast <4 x i8> %tmp51 to i32
  %tmp406 = bitcast i32 %tmp593 to <4 x i8>
  %tmp402 = bitcast i32 %tmp587 to <4 x i8>
  %68 = bitcast <4 x i8> %tmp406 to i32
  %69 = bitcast <4 x i8> %tmp402 to i32
  %70 = tail call i32 @_Z3minDv4_hS_(i32 %68, i32 %69) nounwind
  %tmp49 = bitcast i32 %70 to <4 x i8>
  %71 = tail call i32 @_Z3maxDv4_hS_(i32 %68, i32 %69) nounwind
  %tmp47 = bitcast i32 %71 to <4 x i8>
  %tmp386 = bitcast <4 x i8> %tmp49 to i32
  %tmp380 = bitcast <4 x i8> %tmp47 to i32
  %tmp378 = bitcast i32 %tmp599 to <4 x i8>
  %72 = bitcast <4 x i8> %tmp378 to i32
  %73 = tail call i32 @_Z3minDv4_hS_(i32 %72, i32 %tmp380) nounwind
  %tmp45 = bitcast i32 %73 to <4 x i8>
  %tmp370 = bitcast i32 %tmp380 to <4 x i8>
  %74 = bitcast <4 x i8> %tmp370 to i32
  %75 = tail call i32 @_Z3maxDv4_hS_(i32 %72, i32 %74) nounwind
  %tmp43 = bitcast i32 %75 to <4 x i8>
  %tmp362 = bitcast <4 x i8> %tmp45 to i32
  %tmp356 = bitcast <4 x i8> %tmp43 to i32
  %tmp354 = bitcast i32 %tmp362 to <4 x i8>
  %tmp350 = bitcast i32 %tmp386 to <4 x i8>
  %76 = bitcast <4 x i8> %tmp354 to i32
  %77 = bitcast <4 x i8> %tmp350 to i32
  %78 = tail call i32 @_Z3minDv4_hS_(i32 %76, i32 %77) nounwind
  %tmp41 = bitcast i32 %78 to <4 x i8>
  %79 = tail call i32 @_Z3maxDv4_hS_(i32 %76, i32 %77) nounwind
  %tmp39 = bitcast i32 %79 to <4 x i8>
  %tmp334 = bitcast <4 x i8> %tmp41 to i32
  %tmp328 = bitcast <4 x i8> %tmp39 to i32
  %tmp326 = bitcast i32 %tmp408 to <4 x i8>
  %tmp322 = bitcast i32 %tmp356 to <4 x i8>
  %80 = bitcast <4 x i8> %tmp326 to i32
  %81 = bitcast <4 x i8> %tmp322 to i32
  %82 = tail call i32 @_Z3minDv4_hS_(i32 %80, i32 %81) nounwind
  %tmp37 = bitcast i32 %82 to <4 x i8>
  %83 = tail call i32 @_Z3maxDv4_hS_(i32 %80, i32 %81) nounwind
  %tmp35 = bitcast i32 %83 to <4 x i8>
  %tmp306 = bitcast <4 x i8> %tmp37 to i32
  %tmp300 = bitcast <4 x i8> %tmp35 to i32
  %tmp298 = bitcast i32 %tmp306 to <4 x i8>
  %tmp294 = bitcast i32 %tmp334 to <4 x i8>
  %84 = bitcast <4 x i8> %tmp298 to i32
  %85 = bitcast <4 x i8> %tmp294 to i32
  %86 = tail call i32 @_Z3minDv4_hS_(i32 %84, i32 %85) nounwind
  %tmp33 = bitcast i32 %86 to <4 x i8>
  %87 = tail call i32 @_Z3maxDv4_hS_(i32 %84, i32 %85) nounwind
  %tmp31 = bitcast i32 %87 to <4 x i8>
  %tmp278 = bitcast <4 x i8> %tmp33 to i32
  %tmp272 = bitcast <4 x i8> %tmp31 to i32
  %tmp270 = bitcast i32 %tmp414 to <4 x i8>
  %tmp266 = bitcast i32 %tmp328 to <4 x i8>
  %88 = bitcast <4 x i8> %tmp270 to i32
  %89 = bitcast <4 x i8> %tmp266 to i32
  %90 = tail call i32 @_Z3minDv4_hS_(i32 %88, i32 %89) nounwind
  %tmp29 = bitcast i32 %90 to <4 x i8>
  %91 = tail call i32 @_Z3maxDv4_hS_(i32 %88, i32 %89) nounwind
  %tmp27 = bitcast i32 %91 to <4 x i8>
  %tmp250 = bitcast <4 x i8> %tmp29 to i32
  %tmp244 = bitcast <4 x i8> %tmp27 to i32
  %tmp242 = bitcast i32 %tmp278 to <4 x i8>
  %tmp238 = bitcast i32 %tmp250 to <4 x i8>
  %92 = bitcast <4 x i8> %tmp242 to i32
  %93 = bitcast <4 x i8> %tmp238 to i32
  %94 = tail call i32 @_Z3minDv4_hS_(i32 %92, i32 %93) nounwind
  %tmp25 = bitcast i32 %94 to <4 x i8>
  %95 = tail call i32 @_Z3maxDv4_hS_(i32 %92, i32 %93) nounwind
  %tmp23 = bitcast i32 %95 to <4 x i8>
  %tmp222 = bitcast <4 x i8> %tmp25 to i32
  %tmp216 = bitcast <4 x i8> %tmp23 to i32
  %tmp214 = bitcast i32 %tmp272 to <4 x i8>
  %tmp210 = bitcast i32 %tmp244 to <4 x i8>
  %96 = bitcast <4 x i8> %tmp214 to i32
  %97 = bitcast <4 x i8> %tmp210 to i32
  %98 = tail call i32 @_Z3minDv4_hS_(i32 %96, i32 %97) nounwind
  %tmp21 = bitcast i32 %98 to <4 x i8>
  %99 = tail call i32 @_Z3maxDv4_hS_(i32 %96, i32 %97) nounwind
  %tmp19 = bitcast i32 %99 to <4 x i8>
  %tmp194 = bitcast <4 x i8> %tmp21 to i32
  %tmp188 = bitcast <4 x i8> %tmp19 to i32
  %tmp186 = bitcast i32 %tmp464 to <4 x i8>
  %tmp183 = bitcast i32 %tmp300 to <4 x i8>
  %100 = bitcast <4 x i8> %tmp186 to i32
  %101 = bitcast <4 x i8> %tmp183 to i32
  %102 = tail call i32 @_Z3minDv4_hS_(i32 %100, i32 %101) nounwind
  %tmp17 = bitcast i32 %102 to <4 x i8>
  %103 = tail call i32 @_Z3maxDv4_hS_(i32 %100, i32 %101) nounwind
  %tmp169 = bitcast <4 x i8> %tmp17 to i32
  %tmp161 = bitcast i32 %tmp169 to <4 x i8>
  %tmp158 = bitcast i32 %tmp222 to <4 x i8>
  %104 = bitcast <4 x i8> %tmp161 to i32
  %105 = bitcast <4 x i8> %tmp158 to i32
  %106 = tail call i32 @_Z3maxDv4_hS_(i32 %104, i32 %105) nounwind
  %tmp13 = bitcast i32 %106 to <4 x i8>
  %tmp150 = bitcast <4 x i8> %tmp13 to i32
  %tmp148 = bitcast i32 %tmp469 to <4 x i8>
  %tmp144 = bitcast i32 %tmp216 to <4 x i8>
  %107 = bitcast <4 x i8> %tmp148 to i32
  %108 = bitcast <4 x i8> %tmp144 to i32
  %109 = tail call i32 @_Z3maxDv4_hS_(i32 %107, i32 %108) nounwind
  %tmp11 = bitcast i32 %109 to <4 x i8>
  %tmp136 = bitcast <4 x i8> %tmp11 to i32
  %tmp134 = bitcast i32 %tmp436 to <4 x i8>
  %tmp130 = bitcast i32 %tmp194 to <4 x i8>
  %110 = bitcast <4 x i8> %tmp134 to i32
  %111 = bitcast <4 x i8> %tmp130 to i32
  %112 = tail call i32 @_Z3maxDv4_hS_(i32 %110, i32 %111) nounwind
  %tmp9 = bitcast i32 %112 to <4 x i8>
  %tmp122 = bitcast <4 x i8> %tmp9 to i32
  %tmp120 = bitcast i32 %tmp442 to <4 x i8>
  %tmp116 = bitcast i32 %tmp188 to <4 x i8>
  %113 = bitcast <4 x i8> %tmp120 to i32
  %114 = bitcast <4 x i8> %tmp116 to i32
  %115 = tail call i32 @_Z3maxDv4_hS_(i32 %113, i32 %114) nounwind
  %tmp7 = bitcast i32 %115 to <4 x i8>
  %tmp108 = bitcast <4 x i8> %tmp7 to i32
  %tmp106 = bitcast i32 %tmp150 to <4 x i8>
  %tmp102 = bitcast i32 %tmp122 to <4 x i8>
  %116 = bitcast <4 x i8> %tmp106 to i32
  %117 = bitcast <4 x i8> %tmp102 to i32
  %118 = tail call i32 @_Z3minDv4_hS_(i32 %116, i32 %117) nounwind
  %tmp5 = bitcast i32 %118 to <4 x i8>
  %tmp94 = bitcast <4 x i8> %tmp5 to i32
  %tmp92 = bitcast i32 %tmp136 to <4 x i8>
  %tmp88 = bitcast i32 %tmp108 to <4 x i8>
  %119 = bitcast <4 x i8> %tmp92 to i32
  %120 = bitcast <4 x i8> %tmp88 to i32
  %121 = tail call i32 @_Z3minDv4_hS_(i32 %119, i32 %120) nounwind
  %tmp3 = bitcast i32 %121 to <4 x i8>
  %tmp81 = bitcast i32 %tmp94 to <4 x i8>
  %122 = bitcast <4 x i8> %tmp81 to i32
  %123 = bitcast <4 x i8> %tmp3 to i32
  %124 = tail call i32 @_Z3minDv4_hS_(i32 %122, i32 %123) nounwind
  %tmp1 = bitcast i32 %124 to <4 x i8>
  %125 = bitcast <4 x i8> %tmp1 to i32
  %126 = getelementptr inbounds i32 addrspace(1)* %pDst, i64 %20
  store i32 %125, i32 addrspace(1)* %126, align 4
  %127 = add nsw i32 %x.0639, 1
  %exitcond = icmp eq i32 %127, %iImageWidth
  br i1 %exitcond, label %._crit_edge, label %3

._crit_edge:                                      ; preds = %3, %0
  ret void
}
