// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: debugservermessages.proto

#include "debugservermessages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_debugservermessages_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_debugservermessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ClientToServerMessage_GetMemoryRangeMsg;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_debugservermessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ClientToServerMessage_StartSessionMsg;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_debugservermessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LineInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_debugservermessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ServerToClientMessage_CmdErrorMsg;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_debugservermessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ServerToClientMessage_MemoryRangeInfoMsg;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_debugservermessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ServerToClientMessage_StartSessionAckMsg;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_debugservermessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VarTypeBasic;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_debugservermessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VarTypeEnum_EnumEntry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_debugservermessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VarTypeVector;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_debugservermessages_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ClientToServerMessage_RunMsg;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_debugservermessages_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ServerToClientMessage_StackTraceInfoMsg;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_debugservermessages_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ServerToClientMessage_VarInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_debugservermessages_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_VarTypeEnum;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_debugservermessages_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ServerToClientMessage_BPHitMsg;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_debugservermessages_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ServerToClientMessage_StackFrameInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_debugservermessages_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_VarTypeArray;
}  // namespace protobuf_debugservermessages_2eproto
namespace debugservermessages {
class ClientToServerMessage_StartSessionMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientToServerMessage_StartSessionMsg>
      _instance;
} _ClientToServerMessage_StartSessionMsg_default_instance_;
class ClientToServerMessage_RunMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientToServerMessage_RunMsg>
      _instance;
} _ClientToServerMessage_RunMsg_default_instance_;
class ClientToServerMessage_GetMemoryRangeMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientToServerMessage_GetMemoryRangeMsg>
      _instance;
} _ClientToServerMessage_GetMemoryRangeMsg_default_instance_;
class ClientToServerMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientToServerMessage>
      _instance;
} _ClientToServerMessage_default_instance_;
class ServerToClientMessage_CmdErrorMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerToClientMessage_CmdErrorMsg>
      _instance;
} _ServerToClientMessage_CmdErrorMsg_default_instance_;
class ServerToClientMessage_StartSessionAckMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerToClientMessage_StartSessionAckMsg>
      _instance;
} _ServerToClientMessage_StartSessionAckMsg_default_instance_;
class ServerToClientMessage_VarInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerToClientMessage_VarInfo>
      _instance;
} _ServerToClientMessage_VarInfo_default_instance_;
class ServerToClientMessage_StackFrameInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerToClientMessage_StackFrameInfo>
      _instance;
} _ServerToClientMessage_StackFrameInfo_default_instance_;
class ServerToClientMessage_BPHitMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerToClientMessage_BPHitMsg>
      _instance;
} _ServerToClientMessage_BPHitMsg_default_instance_;
class ServerToClientMessage_StackTraceInfoMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerToClientMessage_StackTraceInfoMsg>
      _instance;
} _ServerToClientMessage_StackTraceInfoMsg_default_instance_;
class ServerToClientMessage_MemoryRangeInfoMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerToClientMessage_MemoryRangeInfoMsg>
      _instance;
} _ServerToClientMessage_MemoryRangeInfoMsg_default_instance_;
class ServerToClientMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerToClientMessage>
      _instance;
} _ServerToClientMessage_default_instance_;
class LineInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LineInfo>
      _instance;
} _LineInfo_default_instance_;
class VarTypeDescriptorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VarTypeDescriptor>
      _instance;
} _VarTypeDescriptor_default_instance_;
class VarTypeBasicDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VarTypeBasic>
      _instance;
} _VarTypeBasic_default_instance_;
class VarTypePointerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VarTypePointer>
      _instance;
} _VarTypePointer_default_instance_;
class VarTypeArrayDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VarTypeArray>
      _instance;
} _VarTypeArray_default_instance_;
class VarTypeEnum_EnumEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VarTypeEnum_EnumEntry>
      _instance;
} _VarTypeEnum_EnumEntry_default_instance_;
class VarTypeEnumDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VarTypeEnum>
      _instance;
} _VarTypeEnum_default_instance_;
class VarTypeStruct_StructMemberDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VarTypeStruct_StructMember>
      _instance;
} _VarTypeStruct_StructMember_default_instance_;
class VarTypeStructDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VarTypeStruct>
      _instance;
} _VarTypeStruct_default_instance_;
class VarTypeVectorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VarTypeVector>
      _instance;
} _VarTypeVector_default_instance_;
class VarTypeTypedefDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VarTypeTypedef>
      _instance;
} _VarTypeTypedef_default_instance_;
}  // namespace debugservermessages
namespace protobuf_debugservermessages_2eproto {
static void InitDefaultsClientToServerMessage_StartSessionMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugservermessages::_ClientToServerMessage_StartSessionMsg_default_instance_;
    new (ptr) ::debugservermessages::ClientToServerMessage_StartSessionMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugservermessages::ClientToServerMessage_StartSessionMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ClientToServerMessage_StartSessionMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsClientToServerMessage_StartSessionMsg}, {}};

static void InitDefaultsClientToServerMessage_RunMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugservermessages::_ClientToServerMessage_RunMsg_default_instance_;
    new (ptr) ::debugservermessages::ClientToServerMessage_RunMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugservermessages::ClientToServerMessage_RunMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ClientToServerMessage_RunMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsClientToServerMessage_RunMsg}, {
      &protobuf_debugservermessages_2eproto::scc_info_LineInfo.base,}};

static void InitDefaultsClientToServerMessage_GetMemoryRangeMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugservermessages::_ClientToServerMessage_GetMemoryRangeMsg_default_instance_;
    new (ptr) ::debugservermessages::ClientToServerMessage_GetMemoryRangeMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugservermessages::ClientToServerMessage_GetMemoryRangeMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ClientToServerMessage_GetMemoryRangeMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsClientToServerMessage_GetMemoryRangeMsg}, {}};

static void InitDefaultsClientToServerMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugservermessages::_ClientToServerMessage_default_instance_;
    new (ptr) ::debugservermessages::ClientToServerMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugservermessages::ClientToServerMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_ClientToServerMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsClientToServerMessage}, {
      &protobuf_debugservermessages_2eproto::scc_info_ClientToServerMessage_StartSessionMsg.base,
      &protobuf_debugservermessages_2eproto::scc_info_ClientToServerMessage_RunMsg.base,
      &protobuf_debugservermessages_2eproto::scc_info_ClientToServerMessage_GetMemoryRangeMsg.base,}};

static void InitDefaultsServerToClientMessage_CmdErrorMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugservermessages::_ServerToClientMessage_CmdErrorMsg_default_instance_;
    new (ptr) ::debugservermessages::ServerToClientMessage_CmdErrorMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugservermessages::ServerToClientMessage_CmdErrorMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ServerToClientMessage_CmdErrorMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsServerToClientMessage_CmdErrorMsg}, {}};

static void InitDefaultsServerToClientMessage_StartSessionAckMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugservermessages::_ServerToClientMessage_StartSessionAckMsg_default_instance_;
    new (ptr) ::debugservermessages::ServerToClientMessage_StartSessionAckMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugservermessages::ServerToClientMessage_StartSessionAckMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ServerToClientMessage_StartSessionAckMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsServerToClientMessage_StartSessionAckMsg}, {}};

static void InitDefaultsServerToClientMessage_VarInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugservermessages::_ServerToClientMessage_VarInfo_default_instance_;
    new (ptr) ::debugservermessages::ServerToClientMessage_VarInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugservermessages::ServerToClientMessage_VarInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ServerToClientMessage_VarInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsServerToClientMessage_VarInfo}, {
      &protobuf_debugservermessages_2eproto::scc_info_VarTypeArray.base,}};

static void InitDefaultsServerToClientMessage_StackFrameInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugservermessages::_ServerToClientMessage_StackFrameInfo_default_instance_;
    new (ptr) ::debugservermessages::ServerToClientMessage_StackFrameInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugservermessages::ServerToClientMessage_StackFrameInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ServerToClientMessage_StackFrameInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsServerToClientMessage_StackFrameInfo}, {
      &protobuf_debugservermessages_2eproto::scc_info_LineInfo.base,
      &protobuf_debugservermessages_2eproto::scc_info_ServerToClientMessage_VarInfo.base,}};

static void InitDefaultsServerToClientMessage_BPHitMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugservermessages::_ServerToClientMessage_BPHitMsg_default_instance_;
    new (ptr) ::debugservermessages::ServerToClientMessage_BPHitMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugservermessages::ServerToClientMessage_BPHitMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ServerToClientMessage_BPHitMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsServerToClientMessage_BPHitMsg}, {
      &protobuf_debugservermessages_2eproto::scc_info_LineInfo.base,
      &protobuf_debugservermessages_2eproto::scc_info_ServerToClientMessage_VarInfo.base,}};

static void InitDefaultsServerToClientMessage_StackTraceInfoMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugservermessages::_ServerToClientMessage_StackTraceInfoMsg_default_instance_;
    new (ptr) ::debugservermessages::ServerToClientMessage_StackTraceInfoMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugservermessages::ServerToClientMessage_StackTraceInfoMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ServerToClientMessage_StackTraceInfoMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsServerToClientMessage_StackTraceInfoMsg}, {
      &protobuf_debugservermessages_2eproto::scc_info_ServerToClientMessage_StackFrameInfo.base,}};

static void InitDefaultsServerToClientMessage_MemoryRangeInfoMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugservermessages::_ServerToClientMessage_MemoryRangeInfoMsg_default_instance_;
    new (ptr) ::debugservermessages::ServerToClientMessage_MemoryRangeInfoMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugservermessages::ServerToClientMessage_MemoryRangeInfoMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ServerToClientMessage_MemoryRangeInfoMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsServerToClientMessage_MemoryRangeInfoMsg}, {}};

static void InitDefaultsServerToClientMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugservermessages::_ServerToClientMessage_default_instance_;
    new (ptr) ::debugservermessages::ServerToClientMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugservermessages::ServerToClientMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_ServerToClientMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsServerToClientMessage}, {
      &protobuf_debugservermessages_2eproto::scc_info_ServerToClientMessage_CmdErrorMsg.base,
      &protobuf_debugservermessages_2eproto::scc_info_ServerToClientMessage_StartSessionAckMsg.base,
      &protobuf_debugservermessages_2eproto::scc_info_ServerToClientMessage_BPHitMsg.base,
      &protobuf_debugservermessages_2eproto::scc_info_ServerToClientMessage_StackTraceInfoMsg.base,
      &protobuf_debugservermessages_2eproto::scc_info_ServerToClientMessage_MemoryRangeInfoMsg.base,}};

static void InitDefaultsLineInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugservermessages::_LineInfo_default_instance_;
    new (ptr) ::debugservermessages::LineInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugservermessages::LineInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LineInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLineInfo}, {}};

static void InitDefaultsVarTypeBasic() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugservermessages::_VarTypeBasic_default_instance_;
    new (ptr) ::debugservermessages::VarTypeBasic();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugservermessages::VarTypeBasic::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VarTypeBasic =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVarTypeBasic}, {}};

static void InitDefaultsVarTypeArray() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugservermessages::_VarTypeDescriptor_default_instance_;
    new (ptr) ::debugservermessages::VarTypeDescriptor();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::debugservermessages::_VarTypePointer_default_instance_;
    new (ptr) ::debugservermessages::VarTypePointer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::debugservermessages::_VarTypeArray_default_instance_;
    new (ptr) ::debugservermessages::VarTypeArray();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::debugservermessages::_VarTypeStruct_StructMember_default_instance_;
    new (ptr) ::debugservermessages::VarTypeStruct_StructMember();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::debugservermessages::_VarTypeStruct_default_instance_;
    new (ptr) ::debugservermessages::VarTypeStruct();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::debugservermessages::_VarTypeTypedef_default_instance_;
    new (ptr) ::debugservermessages::VarTypeTypedef();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugservermessages::VarTypeDescriptor::InitAsDefaultInstance();
  ::debugservermessages::VarTypePointer::InitAsDefaultInstance();
  ::debugservermessages::VarTypeArray::InitAsDefaultInstance();
  ::debugservermessages::VarTypeStruct_StructMember::InitAsDefaultInstance();
  ::debugservermessages::VarTypeStruct::InitAsDefaultInstance();
  ::debugservermessages::VarTypeTypedef::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_VarTypeArray =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsVarTypeArray}, {
      &protobuf_debugservermessages_2eproto::scc_info_VarTypeBasic.base,
      &protobuf_debugservermessages_2eproto::scc_info_VarTypeVector.base,
      &protobuf_debugservermessages_2eproto::scc_info_VarTypeEnum.base,}};

static void InitDefaultsVarTypeEnum_EnumEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugservermessages::_VarTypeEnum_EnumEntry_default_instance_;
    new (ptr) ::debugservermessages::VarTypeEnum_EnumEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugservermessages::VarTypeEnum_EnumEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VarTypeEnum_EnumEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVarTypeEnum_EnumEntry}, {}};

static void InitDefaultsVarTypeEnum() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugservermessages::_VarTypeEnum_default_instance_;
    new (ptr) ::debugservermessages::VarTypeEnum();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugservermessages::VarTypeEnum::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_VarTypeEnum =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVarTypeEnum}, {
      &protobuf_debugservermessages_2eproto::scc_info_VarTypeEnum_EnumEntry.base,}};

static void InitDefaultsVarTypeVector() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugservermessages::_VarTypeVector_default_instance_;
    new (ptr) ::debugservermessages::VarTypeVector();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugservermessages::VarTypeVector::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VarTypeVector =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVarTypeVector}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ClientToServerMessage_StartSessionMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClientToServerMessage_RunMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClientToServerMessage_GetMemoryRangeMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClientToServerMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerToClientMessage_CmdErrorMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerToClientMessage_StartSessionAckMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerToClientMessage_VarInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerToClientMessage_StackFrameInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerToClientMessage_BPHitMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerToClientMessage_StackTraceInfoMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerToClientMessage_MemoryRangeInfoMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerToClientMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LineInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VarTypeBasic.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VarTypeArray.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VarTypeEnum_EnumEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VarTypeEnum.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VarTypeVector.base);
}

::google::protobuf::Metadata file_level_metadata[23];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ClientToServerMessage_StartSessionMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ClientToServerMessage_StartSessionMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ClientToServerMessage_StartSessionMsg, global_id_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ClientToServerMessage_StartSessionMsg, global_id_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ClientToServerMessage_StartSessionMsg, global_id_z_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ClientToServerMessage_RunMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ClientToServerMessage_RunMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ClientToServerMessage_RunMsg, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ClientToServerMessage_RunMsg, breakpoints_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ClientToServerMessage_GetMemoryRangeMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ClientToServerMessage_GetMemoryRangeMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ClientToServerMessage_GetMemoryRangeMsg, start_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ClientToServerMessage_GetMemoryRangeMsg, end_addr_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ClientToServerMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ClientToServerMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ClientToServerMessage, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ClientToServerMessage, start_session_msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ClientToServerMessage, run_msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ClientToServerMessage, get_memory_range_msg_),
  3,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ServerToClientMessage_CmdErrorMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ServerToClientMessage_CmdErrorMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ServerToClientMessage_CmdErrorMsg, description_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ServerToClientMessage_StartSessionAckMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ServerToClientMessage_StartSessionAckMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ServerToClientMessage_StartSessionAckMsg, sizeof_size_t_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ServerToClientMessage_VarInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ServerToClientMessage_VarInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ServerToClientMessage_VarInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ServerToClientMessage_VarInfo, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ServerToClientMessage_VarInfo, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ServerToClientMessage_VarInfo, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ServerToClientMessage_VarInfo, type_descriptor_),
  0,
  1,
  2,
  4,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ServerToClientMessage_StackFrameInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ServerToClientMessage_StackFrameInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ServerToClientMessage_StackFrameInfo, func_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ServerToClientMessage_StackFrameInfo, call_line_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ServerToClientMessage_StackFrameInfo, vars_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ServerToClientMessage_BPHitMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ServerToClientMessage_BPHitMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ServerToClientMessage_BPHitMsg, breakpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ServerToClientMessage_BPHitMsg, vars_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ServerToClientMessage_StackTraceInfoMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ServerToClientMessage_StackTraceInfoMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ServerToClientMessage_StackTraceInfoMsg, frames_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ServerToClientMessage_MemoryRangeInfoMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ServerToClientMessage_MemoryRangeInfoMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ServerToClientMessage_MemoryRangeInfoMsg, buf_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ServerToClientMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ServerToClientMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ServerToClientMessage, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ServerToClientMessage, cmd_error_msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ServerToClientMessage, start_session_ack_msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ServerToClientMessage, bphit_msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ServerToClientMessage, stack_trace_info_msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::ServerToClientMessage, memory_range_info_msg_),
  5,
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::LineInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::LineInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::LineInfo, file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::LineInfo, lineno_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeDescriptor, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeDescriptor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeDescriptor, tag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeDescriptor, type_basic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeDescriptor, type_pointer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeDescriptor, type_array_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeDescriptor, type_vector_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeDescriptor, type_typedef_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeDescriptor, type_enum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeDescriptor, type_struct_),
  7,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeBasic, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeBasic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeBasic, tag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeBasic, size_nbits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeBasic, name_),
  2,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypePointer, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypePointer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypePointer, pointee_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeArray, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeArray, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeArray, element_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeArray, dimensions_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeEnum_EnumEntry, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeEnum_EnumEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeEnum_EnumEntry, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeEnum_EnumEntry, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeEnum, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeEnum, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeEnum, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeEnum, entries_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeStruct_StructMember, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeStruct_StructMember, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeStruct_StructMember, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeStruct_StructMember, size_nbits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeStruct_StructMember, align_nbits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeStruct_StructMember, offset_nbits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeStruct_StructMember, type_),
  0,
  2,
  3,
  4,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeStruct, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeStruct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeStruct, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeStruct, members_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeVector, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeVector, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeVector, name_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeTypedef, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeTypedef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeTypedef, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugservermessages::VarTypeTypedef, original_type_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::debugservermessages::ClientToServerMessage_StartSessionMsg)},
  { 11, 18, sizeof(::debugservermessages::ClientToServerMessage_RunMsg)},
  { 20, 27, sizeof(::debugservermessages::ClientToServerMessage_GetMemoryRangeMsg)},
  { 29, 38, sizeof(::debugservermessages::ClientToServerMessage)},
  { 42, 48, sizeof(::debugservermessages::ServerToClientMessage_CmdErrorMsg)},
  { 49, 55, sizeof(::debugservermessages::ServerToClientMessage_StartSessionAckMsg)},
  { 56, 66, sizeof(::debugservermessages::ServerToClientMessage_VarInfo)},
  { 71, 79, sizeof(::debugservermessages::ServerToClientMessage_StackFrameInfo)},
  { 82, 89, sizeof(::debugservermessages::ServerToClientMessage_BPHitMsg)},
  { 91, 97, sizeof(::debugservermessages::ServerToClientMessage_StackTraceInfoMsg)},
  { 98, 104, sizeof(::debugservermessages::ServerToClientMessage_MemoryRangeInfoMsg)},
  { 105, 116, sizeof(::debugservermessages::ServerToClientMessage)},
  { 122, 129, sizeof(::debugservermessages::LineInfo)},
  { 131, 144, sizeof(::debugservermessages::VarTypeDescriptor)},
  { 152, 160, sizeof(::debugservermessages::VarTypeBasic)},
  { 163, 169, sizeof(::debugservermessages::VarTypePointer)},
  { 170, 177, sizeof(::debugservermessages::VarTypeArray)},
  { 179, 186, sizeof(::debugservermessages::VarTypeEnum_EnumEntry)},
  { 188, 195, sizeof(::debugservermessages::VarTypeEnum)},
  { 197, 207, sizeof(::debugservermessages::VarTypeStruct_StructMember)},
  { 212, 219, sizeof(::debugservermessages::VarTypeStruct)},
  { 221, 227, sizeof(::debugservermessages::VarTypeVector)},
  { 228, 235, sizeof(::debugservermessages::VarTypeTypedef)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugservermessages::_ClientToServerMessage_StartSessionMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugservermessages::_ClientToServerMessage_RunMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugservermessages::_ClientToServerMessage_GetMemoryRangeMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugservermessages::_ClientToServerMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugservermessages::_ServerToClientMessage_CmdErrorMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugservermessages::_ServerToClientMessage_StartSessionAckMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugservermessages::_ServerToClientMessage_VarInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugservermessages::_ServerToClientMessage_StackFrameInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugservermessages::_ServerToClientMessage_BPHitMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugservermessages::_ServerToClientMessage_StackTraceInfoMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugservermessages::_ServerToClientMessage_MemoryRangeInfoMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugservermessages::_ServerToClientMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugservermessages::_LineInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugservermessages::_VarTypeDescriptor_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugservermessages::_VarTypeBasic_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugservermessages::_VarTypePointer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugservermessages::_VarTypeArray_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugservermessages::_VarTypeEnum_EnumEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugservermessages::_VarTypeEnum_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugservermessages::_VarTypeStruct_StructMember_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugservermessages::_VarTypeStruct_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugservermessages::_VarTypeVector_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugservermessages::_VarTypeTypedef_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "debugservermessages.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 23);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\031debugservermessages.proto\022\023debugserver"
      "messages\"\307\005\n\025ClientToServerMessage\022=\n\004ty"
      "pe\030\001 \002(\0162/.debugservermessages.ClientToS"
      "erverMessage.Type\022U\n\021start_session_msg\030\024"
      " \001(\0132:.debugservermessages.ClientToServe"
      "rMessage.StartSessionMsg\022B\n\007run_msg\030\025 \001("
      "\01321.debugservermessages.ClientToServerMe"
      "ssage.RunMsg\022Z\n\024get_memory_range_msg\030\037 \001"
      "(\0132<.debugservermessages.ClientToServerM"
      "essage.GetMemoryRangeMsg\032P\n\017StartSession"
      "Msg\022\023\n\013global_id_x\030\001 \002(\r\022\023\n\013global_id_y\030"
      "\002 \002(\r\022\023\n\013global_id_z\030\003 \002(\r\032J\n\006RunMsg\022\014\n\004"
      "info\030\001 \002(\t\0222\n\013breakpoints\030\002 \003(\0132\035.debugs"
      "ervermessages.LineInfo\0329\n\021GetMemoryRange"
      "Msg\022\022\n\nstart_addr\030\001 \002(\004\022\020\n\010end_addr\030\002 \002("
      "\004\"\236\001\n\004Type\022\021\n\rSTART_SESSION\020\001\022\007\n\003RUN\020\002\022\022"
      "\n\016SINGLE_STEP_IN\020\003\022\024\n\020SINGLE_STEP_OVER\020\004"
      "\022\023\n\017SINGLE_STEP_OUT\020\005\022\023\n\017GET_STACK_TRACE"
      "\020\025\022\024\n\020GET_MEMORY_RANGE\020\026\022\020\n\014BAD_MSG_TEST"
      "\020c\"\344\t\n\025ServerToClientMessage\022=\n\004type\030\001 \002"
      "(\0162/.debugservermessages.ServerToClientM"
      "essage.Type\022M\n\rcmd_error_msg\030\025 \001(\01326.deb"
      "ugservermessages.ServerToClientMessage.C"
      "mdErrorMsg\022\\\n\025start_session_ack_msg\030\026 \001("
      "\0132=.debugservermessages.ServerToClientMe"
      "ssage.StartSessionAckMsg\022F\n\tbphit_msg\030\037 "
      "\001(\01323.debugservermessages.ServerToClient"
      "Message.BPHitMsg\022Z\n\024stack_trace_info_msg"
      "\030) \001(\0132<.debugservermessages.ServerToCli"
      "entMessage.StackTraceInfoMsg\022\\\n\025memory_r"
      "ange_info_msg\0303 \001(\0132=.debugservermessage"
      "s.ServerToClientMessage.MemoryRangeInfoM"
      "sg\032\"\n\013CmdErrorMsg\022\023\n\013description\030\001 \002(\t\032+"
      "\n\022StartSessionAckMsg\022\025\n\rsizeof_size_t\030\001 "
      "\002(\r\032\206\001\n\007VarInfo\022\014\n\004name\030\001 \002(\t\022\r\n\005value\030\002"
      " \002(\t\022\014\n\004type\030\003 \002(\t\022\017\n\007address\030\004 \002(\004\022\?\n\017t"
      "ype_descriptor\030\005 \002(\0132&.debugservermessag"
      "es.VarTypeDescriptor\032\227\001\n\016StackFrameInfo\022"
      "\021\n\tfunc_name\030\001 \002(\t\0220\n\tcall_line\030\002 \002(\0132\035."
      "debugservermessages.LineInfo\022@\n\004vars\030\003 \003"
      "(\01322.debugservermessages.ServerToClientM"
      "essage.VarInfo\032\177\n\010BPHitMsg\0221\n\nbreakpoint"
      "\030\001 \002(\0132\035.debugservermessages.LineInfo\022@\n"
      "\004vars\030\002 \003(\01322.debugservermessages.Server"
      "ToClientMessage.VarInfo\032^\n\021StackTraceInf"
      "oMsg\022I\n\006frames\030\001 \003(\01329.debugservermessag"
      "es.ServerToClientMessage.StackFrameInfo\032"
      "!\n\022MemoryRangeInfoMsg\022\013\n\003buf\030\001 \002(\014\"e\n\004Ty"
      "pe\022\r\n\tCMD_ERROR\020\001\022\025\n\021START_SESSION_ACK\020\002"
      "\022\n\n\006BP_HIT\020\003\022\024\n\020STACK_TRACE_INFO\020\004\022\025\n\021ME"
      "MORY_RANGE_INFO\020\005\"(\n\010LineInfo\022\014\n\004file\030\001 "
      "\002(\t\022\016\n\006lineno\030\002 \002(\r\"\275\004\n\021VarTypeDescripto"
      "r\0227\n\003tag\030\001 \002(\0162*.debugservermessages.Var"
      "TypeDescriptor.Tag\0225\n\ntype_basic\030\013 \001(\0132!"
      ".debugservermessages.VarTypeBasic\0229\n\014typ"
      "e_pointer\030\014 \001(\0132#.debugservermessages.Va"
      "rTypePointer\0225\n\ntype_array\030\r \001(\0132!.debug"
      "servermessages.VarTypeArray\0227\n\013type_vect"
      "or\030\016 \001(\0132\".debugservermessages.VarTypeVe"
      "ctor\0229\n\014type_typedef\030\017 \001(\0132#.debugserver"
      "messages.VarTypeTypedef\0223\n\ttype_enum\030\020 \001"
      "(\0132 .debugservermessages.VarTypeEnum\0227\n\013"
      "type_struct\030\021 \001(\0132\".debugservermessages."
      "VarTypeStruct\"d\n\003Tag\022\t\n\005BASIC\020\000\022\013\n\007POINT"
      "ER\020\001\022\t\n\005ARRAY\020\002\022\n\n\006VECTOR\020\003\022\013\n\007TYPEDEF\020\004"
      "\022\010\n\004ENUM\020\005\022\n\n\006STRUCT\020\006\022\013\n\007UNKNOWN\020c\"\316\001\n\014"
      "VarTypeBasic\0222\n\003tag\030\001 \002(\0162%.debugserverm"
      "essages.VarTypeBasic.Tag\022\022\n\nsize_nbits\030\002"
      " \002(\004\022\014\n\004name\030\024 \002(\t\"h\n\003Tag\022\013\n\007BOOLEAN\020\000\022\t"
      "\n\005FLOAT\020\001\022\n\n\006SIGNED\020\002\022\017\n\013SIGNED_CHAR\020\003\022\014"
      "\n\010UNSIGNED\020\004\022\021\n\rUNSIGNED_CHAR\020\005\022\013\n\007UNKNO"
      "WN\020c\"I\n\016VarTypePointer\0227\n\007pointee\030\001 \002(\0132"
      "&.debugservermessages.VarTypeDescriptor\""
      "[\n\014VarTypeArray\0227\n\007element\030\001 \002(\0132&.debug"
      "servermessages.VarTypeDescriptor\022\022\n\ndime"
      "nsions\030\002 \003(\004\"\202\001\n\013VarTypeEnum\022\014\n\004name\030\001 \002"
      "(\t\022;\n\007entries\030\002 \003(\0132*.debugservermessage"
      "s.VarTypeEnum.EnumEntry\032(\n\tEnumEntry\022\014\n\004"
      "name\030\001 \002(\t\022\r\n\005value\030\002 \002(\004\"\363\001\n\rVarTypeStr"
      "uct\022\014\n\004name\030\001 \002(\t\022@\n\007members\030\002 \003(\0132/.deb"
      "ugservermessages.VarTypeStruct.StructMem"
      "ber\032\221\001\n\014StructMember\022\014\n\004name\030\001 \002(\t\022\022\n\nsi"
      "ze_nbits\030\002 \002(\004\022\023\n\013align_nbits\030\003 \002(\004\022\024\n\014o"
      "ffset_nbits\030\004 \002(\004\0224\n\004type\030\024 \002(\0132&.debugs"
      "ervermessages.VarTypeDescriptor\"\035\n\rVarTy"
      "peVector\022\014\n\004name\030\001 \002(\t\"]\n\016VarTypeTypedef"
      "\022\014\n\004name\030\001 \002(\t\022=\n\roriginal_type\030\002 \002(\0132&."
      "debugservermessages.VarTypeDescriptor"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3517);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "debugservermessages.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_debugservermessages_2eproto
namespace debugservermessages {
const ::google::protobuf::EnumDescriptor* ClientToServerMessage_Type_descriptor() {
  protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_debugservermessages_2eproto::file_level_enum_descriptors[0];
}
bool ClientToServerMessage_Type_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 21:
    case 22:
    case 99:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ClientToServerMessage_Type ClientToServerMessage::START_SESSION;
const ClientToServerMessage_Type ClientToServerMessage::RUN;
const ClientToServerMessage_Type ClientToServerMessage::SINGLE_STEP_IN;
const ClientToServerMessage_Type ClientToServerMessage::SINGLE_STEP_OVER;
const ClientToServerMessage_Type ClientToServerMessage::SINGLE_STEP_OUT;
const ClientToServerMessage_Type ClientToServerMessage::GET_STACK_TRACE;
const ClientToServerMessage_Type ClientToServerMessage::GET_MEMORY_RANGE;
const ClientToServerMessage_Type ClientToServerMessage::BAD_MSG_TEST;
const ClientToServerMessage_Type ClientToServerMessage::Type_MIN;
const ClientToServerMessage_Type ClientToServerMessage::Type_MAX;
const int ClientToServerMessage::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ServerToClientMessage_Type_descriptor() {
  protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_debugservermessages_2eproto::file_level_enum_descriptors[1];
}
bool ServerToClientMessage_Type_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ServerToClientMessage_Type ServerToClientMessage::CMD_ERROR;
const ServerToClientMessage_Type ServerToClientMessage::START_SESSION_ACK;
const ServerToClientMessage_Type ServerToClientMessage::BP_HIT;
const ServerToClientMessage_Type ServerToClientMessage::STACK_TRACE_INFO;
const ServerToClientMessage_Type ServerToClientMessage::MEMORY_RANGE_INFO;
const ServerToClientMessage_Type ServerToClientMessage::Type_MIN;
const ServerToClientMessage_Type ServerToClientMessage::Type_MAX;
const int ServerToClientMessage::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* VarTypeDescriptor_Tag_descriptor() {
  protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_debugservermessages_2eproto::file_level_enum_descriptors[2];
}
bool VarTypeDescriptor_Tag_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 99:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const VarTypeDescriptor_Tag VarTypeDescriptor::BASIC;
const VarTypeDescriptor_Tag VarTypeDescriptor::POINTER;
const VarTypeDescriptor_Tag VarTypeDescriptor::ARRAY;
const VarTypeDescriptor_Tag VarTypeDescriptor::VECTOR;
const VarTypeDescriptor_Tag VarTypeDescriptor::TYPEDEF;
const VarTypeDescriptor_Tag VarTypeDescriptor::ENUM;
const VarTypeDescriptor_Tag VarTypeDescriptor::STRUCT;
const VarTypeDescriptor_Tag VarTypeDescriptor::UNKNOWN;
const VarTypeDescriptor_Tag VarTypeDescriptor::Tag_MIN;
const VarTypeDescriptor_Tag VarTypeDescriptor::Tag_MAX;
const int VarTypeDescriptor::Tag_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* VarTypeBasic_Tag_descriptor() {
  protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_debugservermessages_2eproto::file_level_enum_descriptors[3];
}
bool VarTypeBasic_Tag_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 99:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const VarTypeBasic_Tag VarTypeBasic::BOOLEAN;
const VarTypeBasic_Tag VarTypeBasic::FLOAT;
const VarTypeBasic_Tag VarTypeBasic::SIGNED;
const VarTypeBasic_Tag VarTypeBasic::SIGNED_CHAR;
const VarTypeBasic_Tag VarTypeBasic::UNSIGNED;
const VarTypeBasic_Tag VarTypeBasic::UNSIGNED_CHAR;
const VarTypeBasic_Tag VarTypeBasic::UNKNOWN;
const VarTypeBasic_Tag VarTypeBasic::Tag_MIN;
const VarTypeBasic_Tag VarTypeBasic::Tag_MAX;
const int VarTypeBasic::Tag_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void ClientToServerMessage_StartSessionMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientToServerMessage_StartSessionMsg::kGlobalIdXFieldNumber;
const int ClientToServerMessage_StartSessionMsg::kGlobalIdYFieldNumber;
const int ClientToServerMessage_StartSessionMsg::kGlobalIdZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientToServerMessage_StartSessionMsg::ClientToServerMessage_StartSessionMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugservermessages_2eproto::scc_info_ClientToServerMessage_StartSessionMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugservermessages.ClientToServerMessage.StartSessionMsg)
}
ClientToServerMessage_StartSessionMsg::ClientToServerMessage_StartSessionMsg(const ClientToServerMessage_StartSessionMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&global_id_x_, &from.global_id_x_,
    static_cast<size_t>(reinterpret_cast<char*>(&global_id_z_) -
    reinterpret_cast<char*>(&global_id_x_)) + sizeof(global_id_z_));
  // @@protoc_insertion_point(copy_constructor:debugservermessages.ClientToServerMessage.StartSessionMsg)
}

void ClientToServerMessage_StartSessionMsg::SharedCtor() {
  ::memset(&global_id_x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&global_id_z_) -
      reinterpret_cast<char*>(&global_id_x_)) + sizeof(global_id_z_));
}

ClientToServerMessage_StartSessionMsg::~ClientToServerMessage_StartSessionMsg() {
  // @@protoc_insertion_point(destructor:debugservermessages.ClientToServerMessage.StartSessionMsg)
  SharedDtor();
}

void ClientToServerMessage_StartSessionMsg::SharedDtor() {
}

void ClientToServerMessage_StartSessionMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClientToServerMessage_StartSessionMsg::descriptor() {
  ::protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientToServerMessage_StartSessionMsg& ClientToServerMessage_StartSessionMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugservermessages_2eproto::scc_info_ClientToServerMessage_StartSessionMsg.base);
  return *internal_default_instance();
}


void ClientToServerMessage_StartSessionMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:debugservermessages.ClientToServerMessage.StartSessionMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&global_id_x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&global_id_z_) -
        reinterpret_cast<char*>(&global_id_x_)) + sizeof(global_id_z_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ClientToServerMessage_StartSessionMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugservermessages.ClientToServerMessage.StartSessionMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 global_id_x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_global_id_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &global_id_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 global_id_y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_global_id_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &global_id_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 global_id_z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_global_id_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &global_id_z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugservermessages.ClientToServerMessage.StartSessionMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugservermessages.ClientToServerMessage.StartSessionMsg)
  return false;
#undef DO_
}

void ClientToServerMessage_StartSessionMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugservermessages.ClientToServerMessage.StartSessionMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 global_id_x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->global_id_x(), output);
  }

  // required uint32 global_id_y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->global_id_y(), output);
  }

  // required uint32 global_id_z = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->global_id_z(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:debugservermessages.ClientToServerMessage.StartSessionMsg)
}

::google::protobuf::uint8* ClientToServerMessage_StartSessionMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugservermessages.ClientToServerMessage.StartSessionMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 global_id_x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->global_id_x(), target);
  }

  // required uint32 global_id_y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->global_id_y(), target);
  }

  // required uint32 global_id_z = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->global_id_z(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugservermessages.ClientToServerMessage.StartSessionMsg)
  return target;
}

size_t ClientToServerMessage_StartSessionMsg::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:debugservermessages.ClientToServerMessage.StartSessionMsg)
  size_t total_size = 0;

  if (has_global_id_x()) {
    // required uint32 global_id_x = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->global_id_x());
  }

  if (has_global_id_y()) {
    // required uint32 global_id_y = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->global_id_y());
  }

  if (has_global_id_z()) {
    // required uint32 global_id_z = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->global_id_z());
  }

  return total_size;
}
size_t ClientToServerMessage_StartSessionMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugservermessages.ClientToServerMessage.StartSessionMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint32 global_id_x = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->global_id_x());

    // required uint32 global_id_y = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->global_id_y());

    // required uint32 global_id_z = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->global_id_z());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientToServerMessage_StartSessionMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugservermessages.ClientToServerMessage.StartSessionMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientToServerMessage_StartSessionMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientToServerMessage_StartSessionMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugservermessages.ClientToServerMessage.StartSessionMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugservermessages.ClientToServerMessage.StartSessionMsg)
    MergeFrom(*source);
  }
}

void ClientToServerMessage_StartSessionMsg::MergeFrom(const ClientToServerMessage_StartSessionMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugservermessages.ClientToServerMessage.StartSessionMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      global_id_x_ = from.global_id_x_;
    }
    if (cached_has_bits & 0x00000002u) {
      global_id_y_ = from.global_id_y_;
    }
    if (cached_has_bits & 0x00000004u) {
      global_id_z_ = from.global_id_z_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ClientToServerMessage_StartSessionMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugservermessages.ClientToServerMessage.StartSessionMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientToServerMessage_StartSessionMsg::CopyFrom(const ClientToServerMessage_StartSessionMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugservermessages.ClientToServerMessage.StartSessionMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientToServerMessage_StartSessionMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void ClientToServerMessage_StartSessionMsg::Swap(ClientToServerMessage_StartSessionMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientToServerMessage_StartSessionMsg::InternalSwap(ClientToServerMessage_StartSessionMsg* other) {
  using std::swap;
  swap(global_id_x_, other->global_id_x_);
  swap(global_id_y_, other->global_id_y_);
  swap(global_id_z_, other->global_id_z_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClientToServerMessage_StartSessionMsg::GetMetadata() const {
  protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClientToServerMessage_RunMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientToServerMessage_RunMsg::kInfoFieldNumber;
const int ClientToServerMessage_RunMsg::kBreakpointsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientToServerMessage_RunMsg::ClientToServerMessage_RunMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugservermessages_2eproto::scc_info_ClientToServerMessage_RunMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugservermessages.ClientToServerMessage.RunMsg)
}
ClientToServerMessage_RunMsg::ClientToServerMessage_RunMsg(const ClientToServerMessage_RunMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      breakpoints_(from.breakpoints_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_info()) {
    info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.info_);
  }
  // @@protoc_insertion_point(copy_constructor:debugservermessages.ClientToServerMessage.RunMsg)
}

void ClientToServerMessage_RunMsg::SharedCtor() {
  info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ClientToServerMessage_RunMsg::~ClientToServerMessage_RunMsg() {
  // @@protoc_insertion_point(destructor:debugservermessages.ClientToServerMessage.RunMsg)
  SharedDtor();
}

void ClientToServerMessage_RunMsg::SharedDtor() {
  info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClientToServerMessage_RunMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClientToServerMessage_RunMsg::descriptor() {
  ::protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientToServerMessage_RunMsg& ClientToServerMessage_RunMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugservermessages_2eproto::scc_info_ClientToServerMessage_RunMsg.base);
  return *internal_default_instance();
}


void ClientToServerMessage_RunMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:debugservermessages.ClientToServerMessage.RunMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  breakpoints_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    info_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ClientToServerMessage_RunMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugservermessages.ClientToServerMessage.RunMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_info()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->info().data(), static_cast<int>(this->info().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "debugservermessages.ClientToServerMessage.RunMsg.info");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .debugservermessages.LineInfo breakpoints = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_breakpoints()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugservermessages.ClientToServerMessage.RunMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugservermessages.ClientToServerMessage.RunMsg)
  return false;
#undef DO_
}

void ClientToServerMessage_RunMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugservermessages.ClientToServerMessage.RunMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string info = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->info().data(), static_cast<int>(this->info().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "debugservermessages.ClientToServerMessage.RunMsg.info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->info(), output);
  }

  // repeated .debugservermessages.LineInfo breakpoints = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->breakpoints_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->breakpoints(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:debugservermessages.ClientToServerMessage.RunMsg)
}

::google::protobuf::uint8* ClientToServerMessage_RunMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugservermessages.ClientToServerMessage.RunMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string info = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->info().data(), static_cast<int>(this->info().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "debugservermessages.ClientToServerMessage.RunMsg.info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->info(), target);
  }

  // repeated .debugservermessages.LineInfo breakpoints = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->breakpoints_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->breakpoints(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugservermessages.ClientToServerMessage.RunMsg)
  return target;
}

size_t ClientToServerMessage_RunMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugservermessages.ClientToServerMessage.RunMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string info = 1;
  if (has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->info());
  }
  // repeated .debugservermessages.LineInfo breakpoints = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->breakpoints_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->breakpoints(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientToServerMessage_RunMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugservermessages.ClientToServerMessage.RunMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientToServerMessage_RunMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientToServerMessage_RunMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugservermessages.ClientToServerMessage.RunMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugservermessages.ClientToServerMessage.RunMsg)
    MergeFrom(*source);
  }
}

void ClientToServerMessage_RunMsg::MergeFrom(const ClientToServerMessage_RunMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugservermessages.ClientToServerMessage.RunMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  breakpoints_.MergeFrom(from.breakpoints_);
  if (from.has_info()) {
    set_has_info();
    info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.info_);
  }
}

void ClientToServerMessage_RunMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugservermessages.ClientToServerMessage.RunMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientToServerMessage_RunMsg::CopyFrom(const ClientToServerMessage_RunMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugservermessages.ClientToServerMessage.RunMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientToServerMessage_RunMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->breakpoints())) return false;
  return true;
}

void ClientToServerMessage_RunMsg::Swap(ClientToServerMessage_RunMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientToServerMessage_RunMsg::InternalSwap(ClientToServerMessage_RunMsg* other) {
  using std::swap;
  CastToBase(&breakpoints_)->InternalSwap(CastToBase(&other->breakpoints_));
  info_.Swap(&other->info_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClientToServerMessage_RunMsg::GetMetadata() const {
  protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClientToServerMessage_GetMemoryRangeMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientToServerMessage_GetMemoryRangeMsg::kStartAddrFieldNumber;
const int ClientToServerMessage_GetMemoryRangeMsg::kEndAddrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientToServerMessage_GetMemoryRangeMsg::ClientToServerMessage_GetMemoryRangeMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugservermessages_2eproto::scc_info_ClientToServerMessage_GetMemoryRangeMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugservermessages.ClientToServerMessage.GetMemoryRangeMsg)
}
ClientToServerMessage_GetMemoryRangeMsg::ClientToServerMessage_GetMemoryRangeMsg(const ClientToServerMessage_GetMemoryRangeMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&start_addr_, &from.start_addr_,
    static_cast<size_t>(reinterpret_cast<char*>(&end_addr_) -
    reinterpret_cast<char*>(&start_addr_)) + sizeof(end_addr_));
  // @@protoc_insertion_point(copy_constructor:debugservermessages.ClientToServerMessage.GetMemoryRangeMsg)
}

void ClientToServerMessage_GetMemoryRangeMsg::SharedCtor() {
  ::memset(&start_addr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_addr_) -
      reinterpret_cast<char*>(&start_addr_)) + sizeof(end_addr_));
}

ClientToServerMessage_GetMemoryRangeMsg::~ClientToServerMessage_GetMemoryRangeMsg() {
  // @@protoc_insertion_point(destructor:debugservermessages.ClientToServerMessage.GetMemoryRangeMsg)
  SharedDtor();
}

void ClientToServerMessage_GetMemoryRangeMsg::SharedDtor() {
}

void ClientToServerMessage_GetMemoryRangeMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClientToServerMessage_GetMemoryRangeMsg::descriptor() {
  ::protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientToServerMessage_GetMemoryRangeMsg& ClientToServerMessage_GetMemoryRangeMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugservermessages_2eproto::scc_info_ClientToServerMessage_GetMemoryRangeMsg.base);
  return *internal_default_instance();
}


void ClientToServerMessage_GetMemoryRangeMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:debugservermessages.ClientToServerMessage.GetMemoryRangeMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&start_addr_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&end_addr_) -
        reinterpret_cast<char*>(&start_addr_)) + sizeof(end_addr_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ClientToServerMessage_GetMemoryRangeMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugservermessages.ClientToServerMessage.GetMemoryRangeMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 start_addr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_start_addr();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &start_addr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 end_addr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_end_addr();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &end_addr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugservermessages.ClientToServerMessage.GetMemoryRangeMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugservermessages.ClientToServerMessage.GetMemoryRangeMsg)
  return false;
#undef DO_
}

void ClientToServerMessage_GetMemoryRangeMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugservermessages.ClientToServerMessage.GetMemoryRangeMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 start_addr = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->start_addr(), output);
  }

  // required uint64 end_addr = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->end_addr(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:debugservermessages.ClientToServerMessage.GetMemoryRangeMsg)
}

::google::protobuf::uint8* ClientToServerMessage_GetMemoryRangeMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugservermessages.ClientToServerMessage.GetMemoryRangeMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 start_addr = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->start_addr(), target);
  }

  // required uint64 end_addr = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->end_addr(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugservermessages.ClientToServerMessage.GetMemoryRangeMsg)
  return target;
}

size_t ClientToServerMessage_GetMemoryRangeMsg::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:debugservermessages.ClientToServerMessage.GetMemoryRangeMsg)
  size_t total_size = 0;

  if (has_start_addr()) {
    // required uint64 start_addr = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->start_addr());
  }

  if (has_end_addr()) {
    // required uint64 end_addr = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->end_addr());
  }

  return total_size;
}
size_t ClientToServerMessage_GetMemoryRangeMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugservermessages.ClientToServerMessage.GetMemoryRangeMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 start_addr = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->start_addr());

    // required uint64 end_addr = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->end_addr());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientToServerMessage_GetMemoryRangeMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugservermessages.ClientToServerMessage.GetMemoryRangeMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientToServerMessage_GetMemoryRangeMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientToServerMessage_GetMemoryRangeMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugservermessages.ClientToServerMessage.GetMemoryRangeMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugservermessages.ClientToServerMessage.GetMemoryRangeMsg)
    MergeFrom(*source);
  }
}

void ClientToServerMessage_GetMemoryRangeMsg::MergeFrom(const ClientToServerMessage_GetMemoryRangeMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugservermessages.ClientToServerMessage.GetMemoryRangeMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      start_addr_ = from.start_addr_;
    }
    if (cached_has_bits & 0x00000002u) {
      end_addr_ = from.end_addr_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ClientToServerMessage_GetMemoryRangeMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugservermessages.ClientToServerMessage.GetMemoryRangeMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientToServerMessage_GetMemoryRangeMsg::CopyFrom(const ClientToServerMessage_GetMemoryRangeMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugservermessages.ClientToServerMessage.GetMemoryRangeMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientToServerMessage_GetMemoryRangeMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void ClientToServerMessage_GetMemoryRangeMsg::Swap(ClientToServerMessage_GetMemoryRangeMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientToServerMessage_GetMemoryRangeMsg::InternalSwap(ClientToServerMessage_GetMemoryRangeMsg* other) {
  using std::swap;
  swap(start_addr_, other->start_addr_);
  swap(end_addr_, other->end_addr_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClientToServerMessage_GetMemoryRangeMsg::GetMetadata() const {
  protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClientToServerMessage::InitAsDefaultInstance() {
  ::debugservermessages::_ClientToServerMessage_default_instance_._instance.get_mutable()->start_session_msg_ = const_cast< ::debugservermessages::ClientToServerMessage_StartSessionMsg*>(
      ::debugservermessages::ClientToServerMessage_StartSessionMsg::internal_default_instance());
  ::debugservermessages::_ClientToServerMessage_default_instance_._instance.get_mutable()->run_msg_ = const_cast< ::debugservermessages::ClientToServerMessage_RunMsg*>(
      ::debugservermessages::ClientToServerMessage_RunMsg::internal_default_instance());
  ::debugservermessages::_ClientToServerMessage_default_instance_._instance.get_mutable()->get_memory_range_msg_ = const_cast< ::debugservermessages::ClientToServerMessage_GetMemoryRangeMsg*>(
      ::debugservermessages::ClientToServerMessage_GetMemoryRangeMsg::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientToServerMessage::kTypeFieldNumber;
const int ClientToServerMessage::kStartSessionMsgFieldNumber;
const int ClientToServerMessage::kRunMsgFieldNumber;
const int ClientToServerMessage::kGetMemoryRangeMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientToServerMessage::ClientToServerMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugservermessages_2eproto::scc_info_ClientToServerMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugservermessages.ClientToServerMessage)
}
ClientToServerMessage::ClientToServerMessage(const ClientToServerMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_start_session_msg()) {
    start_session_msg_ = new ::debugservermessages::ClientToServerMessage_StartSessionMsg(*from.start_session_msg_);
  } else {
    start_session_msg_ = NULL;
  }
  if (from.has_run_msg()) {
    run_msg_ = new ::debugservermessages::ClientToServerMessage_RunMsg(*from.run_msg_);
  } else {
    run_msg_ = NULL;
  }
  if (from.has_get_memory_range_msg()) {
    get_memory_range_msg_ = new ::debugservermessages::ClientToServerMessage_GetMemoryRangeMsg(*from.get_memory_range_msg_);
  } else {
    get_memory_range_msg_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:debugservermessages.ClientToServerMessage)
}

void ClientToServerMessage::SharedCtor() {
  ::memset(&start_session_msg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&get_memory_range_msg_) -
      reinterpret_cast<char*>(&start_session_msg_)) + sizeof(get_memory_range_msg_));
  type_ = 1;
}

ClientToServerMessage::~ClientToServerMessage() {
  // @@protoc_insertion_point(destructor:debugservermessages.ClientToServerMessage)
  SharedDtor();
}

void ClientToServerMessage::SharedDtor() {
  if (this != internal_default_instance()) delete start_session_msg_;
  if (this != internal_default_instance()) delete run_msg_;
  if (this != internal_default_instance()) delete get_memory_range_msg_;
}

void ClientToServerMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClientToServerMessage::descriptor() {
  ::protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientToServerMessage& ClientToServerMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugservermessages_2eproto::scc_info_ClientToServerMessage.base);
  return *internal_default_instance();
}


void ClientToServerMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:debugservermessages.ClientToServerMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(start_session_msg_ != NULL);
      start_session_msg_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(run_msg_ != NULL);
      run_msg_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(get_memory_range_msg_ != NULL);
      get_memory_range_msg_->Clear();
    }
    type_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ClientToServerMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugservermessages.ClientToServerMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .debugservermessages.ClientToServerMessage.Type type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::debugservermessages::ClientToServerMessage_Type_IsValid(value)) {
            set_type(static_cast< ::debugservermessages::ClientToServerMessage_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .debugservermessages.ClientToServerMessage.StartSessionMsg start_session_msg = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start_session_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .debugservermessages.ClientToServerMessage.RunMsg run_msg = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_run_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .debugservermessages.ClientToServerMessage.GetMemoryRangeMsg get_memory_range_msg = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_get_memory_range_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugservermessages.ClientToServerMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugservermessages.ClientToServerMessage)
  return false;
#undef DO_
}

void ClientToServerMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugservermessages.ClientToServerMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .debugservermessages.ClientToServerMessage.Type type = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional .debugservermessages.ClientToServerMessage.StartSessionMsg start_session_msg = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->_internal_start_session_msg(), output);
  }

  // optional .debugservermessages.ClientToServerMessage.RunMsg run_msg = 21;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->_internal_run_msg(), output);
  }

  // optional .debugservermessages.ClientToServerMessage.GetMemoryRangeMsg get_memory_range_msg = 31;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      31, this->_internal_get_memory_range_msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:debugservermessages.ClientToServerMessage)
}

::google::protobuf::uint8* ClientToServerMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugservermessages.ClientToServerMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .debugservermessages.ClientToServerMessage.Type type = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional .debugservermessages.ClientToServerMessage.StartSessionMsg start_session_msg = 20;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->_internal_start_session_msg(), deterministic, target);
  }

  // optional .debugservermessages.ClientToServerMessage.RunMsg run_msg = 21;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->_internal_run_msg(), deterministic, target);
  }

  // optional .debugservermessages.ClientToServerMessage.GetMemoryRangeMsg get_memory_range_msg = 31;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        31, this->_internal_get_memory_range_msg(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugservermessages.ClientToServerMessage)
  return target;
}

size_t ClientToServerMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugservermessages.ClientToServerMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .debugservermessages.ClientToServerMessage.Type type = 1;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .debugservermessages.ClientToServerMessage.StartSessionMsg start_session_msg = 20;
    if (has_start_session_msg()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *start_session_msg_);
    }

    // optional .debugservermessages.ClientToServerMessage.RunMsg run_msg = 21;
    if (has_run_msg()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *run_msg_);
    }

    // optional .debugservermessages.ClientToServerMessage.GetMemoryRangeMsg get_memory_range_msg = 31;
    if (has_get_memory_range_msg()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *get_memory_range_msg_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientToServerMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugservermessages.ClientToServerMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientToServerMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientToServerMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugservermessages.ClientToServerMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugservermessages.ClientToServerMessage)
    MergeFrom(*source);
  }
}

void ClientToServerMessage::MergeFrom(const ClientToServerMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugservermessages.ClientToServerMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_start_session_msg()->::debugservermessages::ClientToServerMessage_StartSessionMsg::MergeFrom(from.start_session_msg());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_run_msg()->::debugservermessages::ClientToServerMessage_RunMsg::MergeFrom(from.run_msg());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_get_memory_range_msg()->::debugservermessages::ClientToServerMessage_GetMemoryRangeMsg::MergeFrom(from.get_memory_range_msg());
    }
    if (cached_has_bits & 0x00000008u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ClientToServerMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugservermessages.ClientToServerMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientToServerMessage::CopyFrom(const ClientToServerMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugservermessages.ClientToServerMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientToServerMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000008) != 0x00000008) return false;
  if (has_start_session_msg()) {
    if (!this->start_session_msg_->IsInitialized()) return false;
  }
  if (has_run_msg()) {
    if (!this->run_msg_->IsInitialized()) return false;
  }
  if (has_get_memory_range_msg()) {
    if (!this->get_memory_range_msg_->IsInitialized()) return false;
  }
  return true;
}

void ClientToServerMessage::Swap(ClientToServerMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientToServerMessage::InternalSwap(ClientToServerMessage* other) {
  using std::swap;
  swap(start_session_msg_, other->start_session_msg_);
  swap(run_msg_, other->run_msg_);
  swap(get_memory_range_msg_, other->get_memory_range_msg_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClientToServerMessage::GetMetadata() const {
  protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerToClientMessage_CmdErrorMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerToClientMessage_CmdErrorMsg::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerToClientMessage_CmdErrorMsg::ServerToClientMessage_CmdErrorMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugservermessages_2eproto::scc_info_ServerToClientMessage_CmdErrorMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugservermessages.ServerToClientMessage.CmdErrorMsg)
}
ServerToClientMessage_CmdErrorMsg::ServerToClientMessage_CmdErrorMsg(const ServerToClientMessage_CmdErrorMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_description()) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  // @@protoc_insertion_point(copy_constructor:debugservermessages.ServerToClientMessage.CmdErrorMsg)
}

void ServerToClientMessage_CmdErrorMsg::SharedCtor() {
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ServerToClientMessage_CmdErrorMsg::~ServerToClientMessage_CmdErrorMsg() {
  // @@protoc_insertion_point(destructor:debugservermessages.ServerToClientMessage.CmdErrorMsg)
  SharedDtor();
}

void ServerToClientMessage_CmdErrorMsg::SharedDtor() {
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServerToClientMessage_CmdErrorMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServerToClientMessage_CmdErrorMsg::descriptor() {
  ::protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerToClientMessage_CmdErrorMsg& ServerToClientMessage_CmdErrorMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugservermessages_2eproto::scc_info_ServerToClientMessage_CmdErrorMsg.base);
  return *internal_default_instance();
}


void ServerToClientMessage_CmdErrorMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:debugservermessages.ServerToClientMessage.CmdErrorMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    description_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ServerToClientMessage_CmdErrorMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugservermessages.ServerToClientMessage.CmdErrorMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string description = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "debugservermessages.ServerToClientMessage.CmdErrorMsg.description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugservermessages.ServerToClientMessage.CmdErrorMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugservermessages.ServerToClientMessage.CmdErrorMsg)
  return false;
#undef DO_
}

void ServerToClientMessage_CmdErrorMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugservermessages.ServerToClientMessage.CmdErrorMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string description = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "debugservermessages.ServerToClientMessage.CmdErrorMsg.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->description(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:debugservermessages.ServerToClientMessage.CmdErrorMsg)
}

::google::protobuf::uint8* ServerToClientMessage_CmdErrorMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugservermessages.ServerToClientMessage.CmdErrorMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string description = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "debugservermessages.ServerToClientMessage.CmdErrorMsg.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->description(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugservermessages.ServerToClientMessage.CmdErrorMsg)
  return target;
}

size_t ServerToClientMessage_CmdErrorMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugservermessages.ServerToClientMessage.CmdErrorMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string description = 1;
  if (has_description()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerToClientMessage_CmdErrorMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugservermessages.ServerToClientMessage.CmdErrorMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerToClientMessage_CmdErrorMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerToClientMessage_CmdErrorMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugservermessages.ServerToClientMessage.CmdErrorMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugservermessages.ServerToClientMessage.CmdErrorMsg)
    MergeFrom(*source);
  }
}

void ServerToClientMessage_CmdErrorMsg::MergeFrom(const ServerToClientMessage_CmdErrorMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugservermessages.ServerToClientMessage.CmdErrorMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_description()) {
    set_has_description();
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
}

void ServerToClientMessage_CmdErrorMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugservermessages.ServerToClientMessage.CmdErrorMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerToClientMessage_CmdErrorMsg::CopyFrom(const ServerToClientMessage_CmdErrorMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugservermessages.ServerToClientMessage.CmdErrorMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerToClientMessage_CmdErrorMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void ServerToClientMessage_CmdErrorMsg::Swap(ServerToClientMessage_CmdErrorMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerToClientMessage_CmdErrorMsg::InternalSwap(ServerToClientMessage_CmdErrorMsg* other) {
  using std::swap;
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServerToClientMessage_CmdErrorMsg::GetMetadata() const {
  protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerToClientMessage_StartSessionAckMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerToClientMessage_StartSessionAckMsg::kSizeofSizeTFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerToClientMessage_StartSessionAckMsg::ServerToClientMessage_StartSessionAckMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugservermessages_2eproto::scc_info_ServerToClientMessage_StartSessionAckMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugservermessages.ServerToClientMessage.StartSessionAckMsg)
}
ServerToClientMessage_StartSessionAckMsg::ServerToClientMessage_StartSessionAckMsg(const ServerToClientMessage_StartSessionAckMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sizeof_size_t_ = from.sizeof_size_t_;
  // @@protoc_insertion_point(copy_constructor:debugservermessages.ServerToClientMessage.StartSessionAckMsg)
}

void ServerToClientMessage_StartSessionAckMsg::SharedCtor() {
  sizeof_size_t_ = 0u;
}

ServerToClientMessage_StartSessionAckMsg::~ServerToClientMessage_StartSessionAckMsg() {
  // @@protoc_insertion_point(destructor:debugservermessages.ServerToClientMessage.StartSessionAckMsg)
  SharedDtor();
}

void ServerToClientMessage_StartSessionAckMsg::SharedDtor() {
}

void ServerToClientMessage_StartSessionAckMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServerToClientMessage_StartSessionAckMsg::descriptor() {
  ::protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerToClientMessage_StartSessionAckMsg& ServerToClientMessage_StartSessionAckMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugservermessages_2eproto::scc_info_ServerToClientMessage_StartSessionAckMsg.base);
  return *internal_default_instance();
}


void ServerToClientMessage_StartSessionAckMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:debugservermessages.ServerToClientMessage.StartSessionAckMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sizeof_size_t_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ServerToClientMessage_StartSessionAckMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugservermessages.ServerToClientMessage.StartSessionAckMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 sizeof_size_t = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_sizeof_size_t();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sizeof_size_t_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugservermessages.ServerToClientMessage.StartSessionAckMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugservermessages.ServerToClientMessage.StartSessionAckMsg)
  return false;
#undef DO_
}

void ServerToClientMessage_StartSessionAckMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugservermessages.ServerToClientMessage.StartSessionAckMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 sizeof_size_t = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->sizeof_size_t(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:debugservermessages.ServerToClientMessage.StartSessionAckMsg)
}

::google::protobuf::uint8* ServerToClientMessage_StartSessionAckMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugservermessages.ServerToClientMessage.StartSessionAckMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 sizeof_size_t = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->sizeof_size_t(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugservermessages.ServerToClientMessage.StartSessionAckMsg)
  return target;
}

size_t ServerToClientMessage_StartSessionAckMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugservermessages.ServerToClientMessage.StartSessionAckMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 sizeof_size_t = 1;
  if (has_sizeof_size_t()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sizeof_size_t());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerToClientMessage_StartSessionAckMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugservermessages.ServerToClientMessage.StartSessionAckMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerToClientMessage_StartSessionAckMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerToClientMessage_StartSessionAckMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugservermessages.ServerToClientMessage.StartSessionAckMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugservermessages.ServerToClientMessage.StartSessionAckMsg)
    MergeFrom(*source);
  }
}

void ServerToClientMessage_StartSessionAckMsg::MergeFrom(const ServerToClientMessage_StartSessionAckMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugservermessages.ServerToClientMessage.StartSessionAckMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_sizeof_size_t()) {
    set_sizeof_size_t(from.sizeof_size_t());
  }
}

void ServerToClientMessage_StartSessionAckMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugservermessages.ServerToClientMessage.StartSessionAckMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerToClientMessage_StartSessionAckMsg::CopyFrom(const ServerToClientMessage_StartSessionAckMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugservermessages.ServerToClientMessage.StartSessionAckMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerToClientMessage_StartSessionAckMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void ServerToClientMessage_StartSessionAckMsg::Swap(ServerToClientMessage_StartSessionAckMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerToClientMessage_StartSessionAckMsg::InternalSwap(ServerToClientMessage_StartSessionAckMsg* other) {
  using std::swap;
  swap(sizeof_size_t_, other->sizeof_size_t_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServerToClientMessage_StartSessionAckMsg::GetMetadata() const {
  protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerToClientMessage_VarInfo::InitAsDefaultInstance() {
  ::debugservermessages::_ServerToClientMessage_VarInfo_default_instance_._instance.get_mutable()->type_descriptor_ = const_cast< ::debugservermessages::VarTypeDescriptor*>(
      ::debugservermessages::VarTypeDescriptor::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerToClientMessage_VarInfo::kNameFieldNumber;
const int ServerToClientMessage_VarInfo::kValueFieldNumber;
const int ServerToClientMessage_VarInfo::kTypeFieldNumber;
const int ServerToClientMessage_VarInfo::kAddressFieldNumber;
const int ServerToClientMessage_VarInfo::kTypeDescriptorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerToClientMessage_VarInfo::ServerToClientMessage_VarInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugservermessages_2eproto::scc_info_ServerToClientMessage_VarInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugservermessages.ServerToClientMessage.VarInfo)
}
ServerToClientMessage_VarInfo::ServerToClientMessage_VarInfo(const ServerToClientMessage_VarInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_type()) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.has_type_descriptor()) {
    type_descriptor_ = new ::debugservermessages::VarTypeDescriptor(*from.type_descriptor_);
  } else {
    type_descriptor_ = NULL;
  }
  address_ = from.address_;
  // @@protoc_insertion_point(copy_constructor:debugservermessages.ServerToClientMessage.VarInfo)
}

void ServerToClientMessage_VarInfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_descriptor_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&address_) -
      reinterpret_cast<char*>(&type_descriptor_)) + sizeof(address_));
}

ServerToClientMessage_VarInfo::~ServerToClientMessage_VarInfo() {
  // @@protoc_insertion_point(destructor:debugservermessages.ServerToClientMessage.VarInfo)
  SharedDtor();
}

void ServerToClientMessage_VarInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete type_descriptor_;
}

void ServerToClientMessage_VarInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServerToClientMessage_VarInfo::descriptor() {
  ::protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerToClientMessage_VarInfo& ServerToClientMessage_VarInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugservermessages_2eproto::scc_info_ServerToClientMessage_VarInfo.base);
  return *internal_default_instance();
}


void ServerToClientMessage_VarInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:debugservermessages.ServerToClientMessage.VarInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      type_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(type_descriptor_ != NULL);
      type_descriptor_->Clear();
    }
  }
  address_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ServerToClientMessage_VarInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugservermessages.ServerToClientMessage.VarInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "debugservermessages.ServerToClientMessage.VarInfo.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "debugservermessages.ServerToClientMessage.VarInfo.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "debugservermessages.ServerToClientMessage.VarInfo.type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 address = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_address();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &address_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .debugservermessages.VarTypeDescriptor type_descriptor = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type_descriptor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugservermessages.ServerToClientMessage.VarInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugservermessages.ServerToClientMessage.VarInfo)
  return false;
#undef DO_
}

void ServerToClientMessage_VarInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugservermessages.ServerToClientMessage.VarInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "debugservermessages.ServerToClientMessage.VarInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "debugservermessages.ServerToClientMessage.VarInfo.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  // required string type = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "debugservermessages.ServerToClientMessage.VarInfo.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->type(), output);
  }

  // required uint64 address = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->address(), output);
  }

  // required .debugservermessages.VarTypeDescriptor type_descriptor = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_type_descriptor(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:debugservermessages.ServerToClientMessage.VarInfo)
}

::google::protobuf::uint8* ServerToClientMessage_VarInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugservermessages.ServerToClientMessage.VarInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "debugservermessages.ServerToClientMessage.VarInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "debugservermessages.ServerToClientMessage.VarInfo.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  // required string type = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "debugservermessages.ServerToClientMessage.VarInfo.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->type(), target);
  }

  // required uint64 address = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->address(), target);
  }

  // required .debugservermessages.VarTypeDescriptor type_descriptor = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_type_descriptor(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugservermessages.ServerToClientMessage.VarInfo)
  return target;
}

size_t ServerToClientMessage_VarInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:debugservermessages.ServerToClientMessage.VarInfo)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_value()) {
    // required string value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  if (has_type()) {
    // required string type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  if (has_type_descriptor()) {
    // required .debugservermessages.VarTypeDescriptor type_descriptor = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *type_descriptor_);
  }

  if (has_address()) {
    // required uint64 address = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->address());
  }

  return total_size;
}
size_t ServerToClientMessage_VarInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugservermessages.ServerToClientMessage.VarInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());

    // required string type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());

    // required .debugservermessages.VarTypeDescriptor type_descriptor = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *type_descriptor_);

    // required uint64 address = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->address());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerToClientMessage_VarInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugservermessages.ServerToClientMessage.VarInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerToClientMessage_VarInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerToClientMessage_VarInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugservermessages.ServerToClientMessage.VarInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugservermessages.ServerToClientMessage.VarInfo)
    MergeFrom(*source);
  }
}

void ServerToClientMessage_VarInfo::MergeFrom(const ServerToClientMessage_VarInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugservermessages.ServerToClientMessage.VarInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_type();
      type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_type_descriptor()->::debugservermessages::VarTypeDescriptor::MergeFrom(from.type_descriptor());
    }
    if (cached_has_bits & 0x00000010u) {
      address_ = from.address_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ServerToClientMessage_VarInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugservermessages.ServerToClientMessage.VarInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerToClientMessage_VarInfo::CopyFrom(const ServerToClientMessage_VarInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugservermessages.ServerToClientMessage.VarInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerToClientMessage_VarInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  if (has_type_descriptor()) {
    if (!this->type_descriptor_->IsInitialized()) return false;
  }
  return true;
}

void ServerToClientMessage_VarInfo::Swap(ServerToClientMessage_VarInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerToClientMessage_VarInfo::InternalSwap(ServerToClientMessage_VarInfo* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_descriptor_, other->type_descriptor_);
  swap(address_, other->address_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServerToClientMessage_VarInfo::GetMetadata() const {
  protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerToClientMessage_StackFrameInfo::InitAsDefaultInstance() {
  ::debugservermessages::_ServerToClientMessage_StackFrameInfo_default_instance_._instance.get_mutable()->call_line_ = const_cast< ::debugservermessages::LineInfo*>(
      ::debugservermessages::LineInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerToClientMessage_StackFrameInfo::kFuncNameFieldNumber;
const int ServerToClientMessage_StackFrameInfo::kCallLineFieldNumber;
const int ServerToClientMessage_StackFrameInfo::kVarsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerToClientMessage_StackFrameInfo::ServerToClientMessage_StackFrameInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugservermessages_2eproto::scc_info_ServerToClientMessage_StackFrameInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugservermessages.ServerToClientMessage.StackFrameInfo)
}
ServerToClientMessage_StackFrameInfo::ServerToClientMessage_StackFrameInfo(const ServerToClientMessage_StackFrameInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      vars_(from.vars_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  func_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_func_name()) {
    func_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.func_name_);
  }
  if (from.has_call_line()) {
    call_line_ = new ::debugservermessages::LineInfo(*from.call_line_);
  } else {
    call_line_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:debugservermessages.ServerToClientMessage.StackFrameInfo)
}

void ServerToClientMessage_StackFrameInfo::SharedCtor() {
  func_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  call_line_ = NULL;
}

ServerToClientMessage_StackFrameInfo::~ServerToClientMessage_StackFrameInfo() {
  // @@protoc_insertion_point(destructor:debugservermessages.ServerToClientMessage.StackFrameInfo)
  SharedDtor();
}

void ServerToClientMessage_StackFrameInfo::SharedDtor() {
  func_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete call_line_;
}

void ServerToClientMessage_StackFrameInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServerToClientMessage_StackFrameInfo::descriptor() {
  ::protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerToClientMessage_StackFrameInfo& ServerToClientMessage_StackFrameInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugservermessages_2eproto::scc_info_ServerToClientMessage_StackFrameInfo.base);
  return *internal_default_instance();
}


void ServerToClientMessage_StackFrameInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:debugservermessages.ServerToClientMessage.StackFrameInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vars_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      func_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(call_line_ != NULL);
      call_line_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ServerToClientMessage_StackFrameInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugservermessages.ServerToClientMessage.StackFrameInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string func_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_func_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->func_name().data(), static_cast<int>(this->func_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "debugservermessages.ServerToClientMessage.StackFrameInfo.func_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .debugservermessages.LineInfo call_line = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_call_line()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .debugservermessages.ServerToClientMessage.VarInfo vars = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_vars()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugservermessages.ServerToClientMessage.StackFrameInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugservermessages.ServerToClientMessage.StackFrameInfo)
  return false;
#undef DO_
}

void ServerToClientMessage_StackFrameInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugservermessages.ServerToClientMessage.StackFrameInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string func_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->func_name().data(), static_cast<int>(this->func_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "debugservermessages.ServerToClientMessage.StackFrameInfo.func_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->func_name(), output);
  }

  // required .debugservermessages.LineInfo call_line = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_call_line(), output);
  }

  // repeated .debugservermessages.ServerToClientMessage.VarInfo vars = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vars_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->vars(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:debugservermessages.ServerToClientMessage.StackFrameInfo)
}

::google::protobuf::uint8* ServerToClientMessage_StackFrameInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugservermessages.ServerToClientMessage.StackFrameInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string func_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->func_name().data(), static_cast<int>(this->func_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "debugservermessages.ServerToClientMessage.StackFrameInfo.func_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->func_name(), target);
  }

  // required .debugservermessages.LineInfo call_line = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_call_line(), deterministic, target);
  }

  // repeated .debugservermessages.ServerToClientMessage.VarInfo vars = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vars_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->vars(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugservermessages.ServerToClientMessage.StackFrameInfo)
  return target;
}

size_t ServerToClientMessage_StackFrameInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:debugservermessages.ServerToClientMessage.StackFrameInfo)
  size_t total_size = 0;

  if (has_func_name()) {
    // required string func_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->func_name());
  }

  if (has_call_line()) {
    // required .debugservermessages.LineInfo call_line = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *call_line_);
  }

  return total_size;
}
size_t ServerToClientMessage_StackFrameInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugservermessages.ServerToClientMessage.StackFrameInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string func_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->func_name());

    // required .debugservermessages.LineInfo call_line = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *call_line_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .debugservermessages.ServerToClientMessage.VarInfo vars = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->vars_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->vars(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerToClientMessage_StackFrameInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugservermessages.ServerToClientMessage.StackFrameInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerToClientMessage_StackFrameInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerToClientMessage_StackFrameInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugservermessages.ServerToClientMessage.StackFrameInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugservermessages.ServerToClientMessage.StackFrameInfo)
    MergeFrom(*source);
  }
}

void ServerToClientMessage_StackFrameInfo::MergeFrom(const ServerToClientMessage_StackFrameInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugservermessages.ServerToClientMessage.StackFrameInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vars_.MergeFrom(from.vars_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_func_name();
      func_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.func_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_call_line()->::debugservermessages::LineInfo::MergeFrom(from.call_line());
    }
  }
}

void ServerToClientMessage_StackFrameInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugservermessages.ServerToClientMessage.StackFrameInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerToClientMessage_StackFrameInfo::CopyFrom(const ServerToClientMessage_StackFrameInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugservermessages.ServerToClientMessage.StackFrameInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerToClientMessage_StackFrameInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->vars())) return false;
  if (has_call_line()) {
    if (!this->call_line_->IsInitialized()) return false;
  }
  return true;
}

void ServerToClientMessage_StackFrameInfo::Swap(ServerToClientMessage_StackFrameInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerToClientMessage_StackFrameInfo::InternalSwap(ServerToClientMessage_StackFrameInfo* other) {
  using std::swap;
  CastToBase(&vars_)->InternalSwap(CastToBase(&other->vars_));
  func_name_.Swap(&other->func_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(call_line_, other->call_line_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServerToClientMessage_StackFrameInfo::GetMetadata() const {
  protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerToClientMessage_BPHitMsg::InitAsDefaultInstance() {
  ::debugservermessages::_ServerToClientMessage_BPHitMsg_default_instance_._instance.get_mutable()->breakpoint_ = const_cast< ::debugservermessages::LineInfo*>(
      ::debugservermessages::LineInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerToClientMessage_BPHitMsg::kBreakpointFieldNumber;
const int ServerToClientMessage_BPHitMsg::kVarsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerToClientMessage_BPHitMsg::ServerToClientMessage_BPHitMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugservermessages_2eproto::scc_info_ServerToClientMessage_BPHitMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugservermessages.ServerToClientMessage.BPHitMsg)
}
ServerToClientMessage_BPHitMsg::ServerToClientMessage_BPHitMsg(const ServerToClientMessage_BPHitMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      vars_(from.vars_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_breakpoint()) {
    breakpoint_ = new ::debugservermessages::LineInfo(*from.breakpoint_);
  } else {
    breakpoint_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:debugservermessages.ServerToClientMessage.BPHitMsg)
}

void ServerToClientMessage_BPHitMsg::SharedCtor() {
  breakpoint_ = NULL;
}

ServerToClientMessage_BPHitMsg::~ServerToClientMessage_BPHitMsg() {
  // @@protoc_insertion_point(destructor:debugservermessages.ServerToClientMessage.BPHitMsg)
  SharedDtor();
}

void ServerToClientMessage_BPHitMsg::SharedDtor() {
  if (this != internal_default_instance()) delete breakpoint_;
}

void ServerToClientMessage_BPHitMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServerToClientMessage_BPHitMsg::descriptor() {
  ::protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerToClientMessage_BPHitMsg& ServerToClientMessage_BPHitMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugservermessages_2eproto::scc_info_ServerToClientMessage_BPHitMsg.base);
  return *internal_default_instance();
}


void ServerToClientMessage_BPHitMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:debugservermessages.ServerToClientMessage.BPHitMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vars_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(breakpoint_ != NULL);
    breakpoint_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ServerToClientMessage_BPHitMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugservermessages.ServerToClientMessage.BPHitMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .debugservermessages.LineInfo breakpoint = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_breakpoint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .debugservermessages.ServerToClientMessage.VarInfo vars = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_vars()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugservermessages.ServerToClientMessage.BPHitMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugservermessages.ServerToClientMessage.BPHitMsg)
  return false;
#undef DO_
}

void ServerToClientMessage_BPHitMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugservermessages.ServerToClientMessage.BPHitMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .debugservermessages.LineInfo breakpoint = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_breakpoint(), output);
  }

  // repeated .debugservermessages.ServerToClientMessage.VarInfo vars = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vars_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->vars(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:debugservermessages.ServerToClientMessage.BPHitMsg)
}

::google::protobuf::uint8* ServerToClientMessage_BPHitMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugservermessages.ServerToClientMessage.BPHitMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .debugservermessages.LineInfo breakpoint = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_breakpoint(), deterministic, target);
  }

  // repeated .debugservermessages.ServerToClientMessage.VarInfo vars = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vars_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->vars(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugservermessages.ServerToClientMessage.BPHitMsg)
  return target;
}

size_t ServerToClientMessage_BPHitMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugservermessages.ServerToClientMessage.BPHitMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .debugservermessages.LineInfo breakpoint = 1;
  if (has_breakpoint()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *breakpoint_);
  }
  // repeated .debugservermessages.ServerToClientMessage.VarInfo vars = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->vars_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->vars(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerToClientMessage_BPHitMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugservermessages.ServerToClientMessage.BPHitMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerToClientMessage_BPHitMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerToClientMessage_BPHitMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugservermessages.ServerToClientMessage.BPHitMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugservermessages.ServerToClientMessage.BPHitMsg)
    MergeFrom(*source);
  }
}

void ServerToClientMessage_BPHitMsg::MergeFrom(const ServerToClientMessage_BPHitMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugservermessages.ServerToClientMessage.BPHitMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vars_.MergeFrom(from.vars_);
  if (from.has_breakpoint()) {
    mutable_breakpoint()->::debugservermessages::LineInfo::MergeFrom(from.breakpoint());
  }
}

void ServerToClientMessage_BPHitMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugservermessages.ServerToClientMessage.BPHitMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerToClientMessage_BPHitMsg::CopyFrom(const ServerToClientMessage_BPHitMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugservermessages.ServerToClientMessage.BPHitMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerToClientMessage_BPHitMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->vars())) return false;
  if (has_breakpoint()) {
    if (!this->breakpoint_->IsInitialized()) return false;
  }
  return true;
}

void ServerToClientMessage_BPHitMsg::Swap(ServerToClientMessage_BPHitMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerToClientMessage_BPHitMsg::InternalSwap(ServerToClientMessage_BPHitMsg* other) {
  using std::swap;
  CastToBase(&vars_)->InternalSwap(CastToBase(&other->vars_));
  swap(breakpoint_, other->breakpoint_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServerToClientMessage_BPHitMsg::GetMetadata() const {
  protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerToClientMessage_StackTraceInfoMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerToClientMessage_StackTraceInfoMsg::kFramesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerToClientMessage_StackTraceInfoMsg::ServerToClientMessage_StackTraceInfoMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugservermessages_2eproto::scc_info_ServerToClientMessage_StackTraceInfoMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugservermessages.ServerToClientMessage.StackTraceInfoMsg)
}
ServerToClientMessage_StackTraceInfoMsg::ServerToClientMessage_StackTraceInfoMsg(const ServerToClientMessage_StackTraceInfoMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      frames_(from.frames_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:debugservermessages.ServerToClientMessage.StackTraceInfoMsg)
}

void ServerToClientMessage_StackTraceInfoMsg::SharedCtor() {
}

ServerToClientMessage_StackTraceInfoMsg::~ServerToClientMessage_StackTraceInfoMsg() {
  // @@protoc_insertion_point(destructor:debugservermessages.ServerToClientMessage.StackTraceInfoMsg)
  SharedDtor();
}

void ServerToClientMessage_StackTraceInfoMsg::SharedDtor() {
}

void ServerToClientMessage_StackTraceInfoMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServerToClientMessage_StackTraceInfoMsg::descriptor() {
  ::protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerToClientMessage_StackTraceInfoMsg& ServerToClientMessage_StackTraceInfoMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugservermessages_2eproto::scc_info_ServerToClientMessage_StackTraceInfoMsg.base);
  return *internal_default_instance();
}


void ServerToClientMessage_StackTraceInfoMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:debugservermessages.ServerToClientMessage.StackTraceInfoMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  frames_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ServerToClientMessage_StackTraceInfoMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugservermessages.ServerToClientMessage.StackTraceInfoMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .debugservermessages.ServerToClientMessage.StackFrameInfo frames = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_frames()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugservermessages.ServerToClientMessage.StackTraceInfoMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugservermessages.ServerToClientMessage.StackTraceInfoMsg)
  return false;
#undef DO_
}

void ServerToClientMessage_StackTraceInfoMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugservermessages.ServerToClientMessage.StackTraceInfoMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .debugservermessages.ServerToClientMessage.StackFrameInfo frames = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->frames_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->frames(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:debugservermessages.ServerToClientMessage.StackTraceInfoMsg)
}

::google::protobuf::uint8* ServerToClientMessage_StackTraceInfoMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugservermessages.ServerToClientMessage.StackTraceInfoMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .debugservermessages.ServerToClientMessage.StackFrameInfo frames = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->frames_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->frames(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugservermessages.ServerToClientMessage.StackTraceInfoMsg)
  return target;
}

size_t ServerToClientMessage_StackTraceInfoMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugservermessages.ServerToClientMessage.StackTraceInfoMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .debugservermessages.ServerToClientMessage.StackFrameInfo frames = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->frames_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->frames(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerToClientMessage_StackTraceInfoMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugservermessages.ServerToClientMessage.StackTraceInfoMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerToClientMessage_StackTraceInfoMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerToClientMessage_StackTraceInfoMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugservermessages.ServerToClientMessage.StackTraceInfoMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugservermessages.ServerToClientMessage.StackTraceInfoMsg)
    MergeFrom(*source);
  }
}

void ServerToClientMessage_StackTraceInfoMsg::MergeFrom(const ServerToClientMessage_StackTraceInfoMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugservermessages.ServerToClientMessage.StackTraceInfoMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  frames_.MergeFrom(from.frames_);
}

void ServerToClientMessage_StackTraceInfoMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugservermessages.ServerToClientMessage.StackTraceInfoMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerToClientMessage_StackTraceInfoMsg::CopyFrom(const ServerToClientMessage_StackTraceInfoMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugservermessages.ServerToClientMessage.StackTraceInfoMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerToClientMessage_StackTraceInfoMsg::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->frames())) return false;
  return true;
}

void ServerToClientMessage_StackTraceInfoMsg::Swap(ServerToClientMessage_StackTraceInfoMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerToClientMessage_StackTraceInfoMsg::InternalSwap(ServerToClientMessage_StackTraceInfoMsg* other) {
  using std::swap;
  CastToBase(&frames_)->InternalSwap(CastToBase(&other->frames_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServerToClientMessage_StackTraceInfoMsg::GetMetadata() const {
  protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerToClientMessage_MemoryRangeInfoMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerToClientMessage_MemoryRangeInfoMsg::kBufFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerToClientMessage_MemoryRangeInfoMsg::ServerToClientMessage_MemoryRangeInfoMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugservermessages_2eproto::scc_info_ServerToClientMessage_MemoryRangeInfoMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugservermessages.ServerToClientMessage.MemoryRangeInfoMsg)
}
ServerToClientMessage_MemoryRangeInfoMsg::ServerToClientMessage_MemoryRangeInfoMsg(const ServerToClientMessage_MemoryRangeInfoMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  buf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_buf()) {
    buf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buf_);
  }
  // @@protoc_insertion_point(copy_constructor:debugservermessages.ServerToClientMessage.MemoryRangeInfoMsg)
}

void ServerToClientMessage_MemoryRangeInfoMsg::SharedCtor() {
  buf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ServerToClientMessage_MemoryRangeInfoMsg::~ServerToClientMessage_MemoryRangeInfoMsg() {
  // @@protoc_insertion_point(destructor:debugservermessages.ServerToClientMessage.MemoryRangeInfoMsg)
  SharedDtor();
}

void ServerToClientMessage_MemoryRangeInfoMsg::SharedDtor() {
  buf_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServerToClientMessage_MemoryRangeInfoMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServerToClientMessage_MemoryRangeInfoMsg::descriptor() {
  ::protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerToClientMessage_MemoryRangeInfoMsg& ServerToClientMessage_MemoryRangeInfoMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugservermessages_2eproto::scc_info_ServerToClientMessage_MemoryRangeInfoMsg.base);
  return *internal_default_instance();
}


void ServerToClientMessage_MemoryRangeInfoMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:debugservermessages.ServerToClientMessage.MemoryRangeInfoMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    buf_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ServerToClientMessage_MemoryRangeInfoMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugservermessages.ServerToClientMessage.MemoryRangeInfoMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes buf = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_buf()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugservermessages.ServerToClientMessage.MemoryRangeInfoMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugservermessages.ServerToClientMessage.MemoryRangeInfoMsg)
  return false;
#undef DO_
}

void ServerToClientMessage_MemoryRangeInfoMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugservermessages.ServerToClientMessage.MemoryRangeInfoMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes buf = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->buf(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:debugservermessages.ServerToClientMessage.MemoryRangeInfoMsg)
}

::google::protobuf::uint8* ServerToClientMessage_MemoryRangeInfoMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugservermessages.ServerToClientMessage.MemoryRangeInfoMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes buf = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->buf(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugservermessages.ServerToClientMessage.MemoryRangeInfoMsg)
  return target;
}

size_t ServerToClientMessage_MemoryRangeInfoMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugservermessages.ServerToClientMessage.MemoryRangeInfoMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bytes buf = 1;
  if (has_buf()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->buf());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerToClientMessage_MemoryRangeInfoMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugservermessages.ServerToClientMessage.MemoryRangeInfoMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerToClientMessage_MemoryRangeInfoMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerToClientMessage_MemoryRangeInfoMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugservermessages.ServerToClientMessage.MemoryRangeInfoMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugservermessages.ServerToClientMessage.MemoryRangeInfoMsg)
    MergeFrom(*source);
  }
}

void ServerToClientMessage_MemoryRangeInfoMsg::MergeFrom(const ServerToClientMessage_MemoryRangeInfoMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugservermessages.ServerToClientMessage.MemoryRangeInfoMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_buf()) {
    set_has_buf();
    buf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buf_);
  }
}

void ServerToClientMessage_MemoryRangeInfoMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugservermessages.ServerToClientMessage.MemoryRangeInfoMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerToClientMessage_MemoryRangeInfoMsg::CopyFrom(const ServerToClientMessage_MemoryRangeInfoMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugservermessages.ServerToClientMessage.MemoryRangeInfoMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerToClientMessage_MemoryRangeInfoMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void ServerToClientMessage_MemoryRangeInfoMsg::Swap(ServerToClientMessage_MemoryRangeInfoMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerToClientMessage_MemoryRangeInfoMsg::InternalSwap(ServerToClientMessage_MemoryRangeInfoMsg* other) {
  using std::swap;
  buf_.Swap(&other->buf_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServerToClientMessage_MemoryRangeInfoMsg::GetMetadata() const {
  protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerToClientMessage::InitAsDefaultInstance() {
  ::debugservermessages::_ServerToClientMessage_default_instance_._instance.get_mutable()->cmd_error_msg_ = const_cast< ::debugservermessages::ServerToClientMessage_CmdErrorMsg*>(
      ::debugservermessages::ServerToClientMessage_CmdErrorMsg::internal_default_instance());
  ::debugservermessages::_ServerToClientMessage_default_instance_._instance.get_mutable()->start_session_ack_msg_ = const_cast< ::debugservermessages::ServerToClientMessage_StartSessionAckMsg*>(
      ::debugservermessages::ServerToClientMessage_StartSessionAckMsg::internal_default_instance());
  ::debugservermessages::_ServerToClientMessage_default_instance_._instance.get_mutable()->bphit_msg_ = const_cast< ::debugservermessages::ServerToClientMessage_BPHitMsg*>(
      ::debugservermessages::ServerToClientMessage_BPHitMsg::internal_default_instance());
  ::debugservermessages::_ServerToClientMessage_default_instance_._instance.get_mutable()->stack_trace_info_msg_ = const_cast< ::debugservermessages::ServerToClientMessage_StackTraceInfoMsg*>(
      ::debugservermessages::ServerToClientMessage_StackTraceInfoMsg::internal_default_instance());
  ::debugservermessages::_ServerToClientMessage_default_instance_._instance.get_mutable()->memory_range_info_msg_ = const_cast< ::debugservermessages::ServerToClientMessage_MemoryRangeInfoMsg*>(
      ::debugservermessages::ServerToClientMessage_MemoryRangeInfoMsg::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerToClientMessage::kTypeFieldNumber;
const int ServerToClientMessage::kCmdErrorMsgFieldNumber;
const int ServerToClientMessage::kStartSessionAckMsgFieldNumber;
const int ServerToClientMessage::kBphitMsgFieldNumber;
const int ServerToClientMessage::kStackTraceInfoMsgFieldNumber;
const int ServerToClientMessage::kMemoryRangeInfoMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerToClientMessage::ServerToClientMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugservermessages_2eproto::scc_info_ServerToClientMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugservermessages.ServerToClientMessage)
}
ServerToClientMessage::ServerToClientMessage(const ServerToClientMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_cmd_error_msg()) {
    cmd_error_msg_ = new ::debugservermessages::ServerToClientMessage_CmdErrorMsg(*from.cmd_error_msg_);
  } else {
    cmd_error_msg_ = NULL;
  }
  if (from.has_start_session_ack_msg()) {
    start_session_ack_msg_ = new ::debugservermessages::ServerToClientMessage_StartSessionAckMsg(*from.start_session_ack_msg_);
  } else {
    start_session_ack_msg_ = NULL;
  }
  if (from.has_bphit_msg()) {
    bphit_msg_ = new ::debugservermessages::ServerToClientMessage_BPHitMsg(*from.bphit_msg_);
  } else {
    bphit_msg_ = NULL;
  }
  if (from.has_stack_trace_info_msg()) {
    stack_trace_info_msg_ = new ::debugservermessages::ServerToClientMessage_StackTraceInfoMsg(*from.stack_trace_info_msg_);
  } else {
    stack_trace_info_msg_ = NULL;
  }
  if (from.has_memory_range_info_msg()) {
    memory_range_info_msg_ = new ::debugservermessages::ServerToClientMessage_MemoryRangeInfoMsg(*from.memory_range_info_msg_);
  } else {
    memory_range_info_msg_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:debugservermessages.ServerToClientMessage)
}

void ServerToClientMessage::SharedCtor() {
  ::memset(&cmd_error_msg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&memory_range_info_msg_) -
      reinterpret_cast<char*>(&cmd_error_msg_)) + sizeof(memory_range_info_msg_));
  type_ = 1;
}

ServerToClientMessage::~ServerToClientMessage() {
  // @@protoc_insertion_point(destructor:debugservermessages.ServerToClientMessage)
  SharedDtor();
}

void ServerToClientMessage::SharedDtor() {
  if (this != internal_default_instance()) delete cmd_error_msg_;
  if (this != internal_default_instance()) delete start_session_ack_msg_;
  if (this != internal_default_instance()) delete bphit_msg_;
  if (this != internal_default_instance()) delete stack_trace_info_msg_;
  if (this != internal_default_instance()) delete memory_range_info_msg_;
}

void ServerToClientMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServerToClientMessage::descriptor() {
  ::protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerToClientMessage& ServerToClientMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugservermessages_2eproto::scc_info_ServerToClientMessage.base);
  return *internal_default_instance();
}


void ServerToClientMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:debugservermessages.ServerToClientMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(cmd_error_msg_ != NULL);
      cmd_error_msg_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(start_session_ack_msg_ != NULL);
      start_session_ack_msg_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(bphit_msg_ != NULL);
      bphit_msg_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(stack_trace_info_msg_ != NULL);
      stack_trace_info_msg_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(memory_range_info_msg_ != NULL);
      memory_range_info_msg_->Clear();
    }
    type_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ServerToClientMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugservermessages.ServerToClientMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .debugservermessages.ServerToClientMessage.Type type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::debugservermessages::ServerToClientMessage_Type_IsValid(value)) {
            set_type(static_cast< ::debugservermessages::ServerToClientMessage_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .debugservermessages.ServerToClientMessage.CmdErrorMsg cmd_error_msg = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cmd_error_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .debugservermessages.ServerToClientMessage.StartSessionAckMsg start_session_ack_msg = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start_session_ack_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .debugservermessages.ServerToClientMessage.BPHitMsg bphit_msg = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bphit_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .debugservermessages.ServerToClientMessage.StackTraceInfoMsg stack_trace_info_msg = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 330 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stack_trace_info_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .debugservermessages.ServerToClientMessage.MemoryRangeInfoMsg memory_range_info_msg = 51;
      case 51: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 410 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_memory_range_info_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugservermessages.ServerToClientMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugservermessages.ServerToClientMessage)
  return false;
#undef DO_
}

void ServerToClientMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugservermessages.ServerToClientMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .debugservermessages.ServerToClientMessage.Type type = 1;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional .debugservermessages.ServerToClientMessage.CmdErrorMsg cmd_error_msg = 21;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->_internal_cmd_error_msg(), output);
  }

  // optional .debugservermessages.ServerToClientMessage.StartSessionAckMsg start_session_ack_msg = 22;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->_internal_start_session_ack_msg(), output);
  }

  // optional .debugservermessages.ServerToClientMessage.BPHitMsg bphit_msg = 31;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      31, this->_internal_bphit_msg(), output);
  }

  // optional .debugservermessages.ServerToClientMessage.StackTraceInfoMsg stack_trace_info_msg = 41;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      41, this->_internal_stack_trace_info_msg(), output);
  }

  // optional .debugservermessages.ServerToClientMessage.MemoryRangeInfoMsg memory_range_info_msg = 51;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      51, this->_internal_memory_range_info_msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:debugservermessages.ServerToClientMessage)
}

::google::protobuf::uint8* ServerToClientMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugservermessages.ServerToClientMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .debugservermessages.ServerToClientMessage.Type type = 1;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional .debugservermessages.ServerToClientMessage.CmdErrorMsg cmd_error_msg = 21;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->_internal_cmd_error_msg(), deterministic, target);
  }

  // optional .debugservermessages.ServerToClientMessage.StartSessionAckMsg start_session_ack_msg = 22;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, this->_internal_start_session_ack_msg(), deterministic, target);
  }

  // optional .debugservermessages.ServerToClientMessage.BPHitMsg bphit_msg = 31;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        31, this->_internal_bphit_msg(), deterministic, target);
  }

  // optional .debugservermessages.ServerToClientMessage.StackTraceInfoMsg stack_trace_info_msg = 41;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        41, this->_internal_stack_trace_info_msg(), deterministic, target);
  }

  // optional .debugservermessages.ServerToClientMessage.MemoryRangeInfoMsg memory_range_info_msg = 51;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        51, this->_internal_memory_range_info_msg(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugservermessages.ServerToClientMessage)
  return target;
}

size_t ServerToClientMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugservermessages.ServerToClientMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .debugservermessages.ServerToClientMessage.Type type = 1;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional .debugservermessages.ServerToClientMessage.CmdErrorMsg cmd_error_msg = 21;
    if (has_cmd_error_msg()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *cmd_error_msg_);
    }

    // optional .debugservermessages.ServerToClientMessage.StartSessionAckMsg start_session_ack_msg = 22;
    if (has_start_session_ack_msg()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *start_session_ack_msg_);
    }

    // optional .debugservermessages.ServerToClientMessage.BPHitMsg bphit_msg = 31;
    if (has_bphit_msg()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *bphit_msg_);
    }

    // optional .debugservermessages.ServerToClientMessage.StackTraceInfoMsg stack_trace_info_msg = 41;
    if (has_stack_trace_info_msg()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *stack_trace_info_msg_);
    }

    // optional .debugservermessages.ServerToClientMessage.MemoryRangeInfoMsg memory_range_info_msg = 51;
    if (has_memory_range_info_msg()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *memory_range_info_msg_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerToClientMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugservermessages.ServerToClientMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerToClientMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerToClientMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugservermessages.ServerToClientMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugservermessages.ServerToClientMessage)
    MergeFrom(*source);
  }
}

void ServerToClientMessage::MergeFrom(const ServerToClientMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugservermessages.ServerToClientMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_cmd_error_msg()->::debugservermessages::ServerToClientMessage_CmdErrorMsg::MergeFrom(from.cmd_error_msg());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_start_session_ack_msg()->::debugservermessages::ServerToClientMessage_StartSessionAckMsg::MergeFrom(from.start_session_ack_msg());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_bphit_msg()->::debugservermessages::ServerToClientMessage_BPHitMsg::MergeFrom(from.bphit_msg());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_stack_trace_info_msg()->::debugservermessages::ServerToClientMessage_StackTraceInfoMsg::MergeFrom(from.stack_trace_info_msg());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_memory_range_info_msg()->::debugservermessages::ServerToClientMessage_MemoryRangeInfoMsg::MergeFrom(from.memory_range_info_msg());
    }
    if (cached_has_bits & 0x00000020u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ServerToClientMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugservermessages.ServerToClientMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerToClientMessage::CopyFrom(const ServerToClientMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugservermessages.ServerToClientMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerToClientMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000020) != 0x00000020) return false;
  if (has_cmd_error_msg()) {
    if (!this->cmd_error_msg_->IsInitialized()) return false;
  }
  if (has_start_session_ack_msg()) {
    if (!this->start_session_ack_msg_->IsInitialized()) return false;
  }
  if (has_bphit_msg()) {
    if (!this->bphit_msg_->IsInitialized()) return false;
  }
  if (has_stack_trace_info_msg()) {
    if (!this->stack_trace_info_msg_->IsInitialized()) return false;
  }
  if (has_memory_range_info_msg()) {
    if (!this->memory_range_info_msg_->IsInitialized()) return false;
  }
  return true;
}

void ServerToClientMessage::Swap(ServerToClientMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerToClientMessage::InternalSwap(ServerToClientMessage* other) {
  using std::swap;
  swap(cmd_error_msg_, other->cmd_error_msg_);
  swap(start_session_ack_msg_, other->start_session_ack_msg_);
  swap(bphit_msg_, other->bphit_msg_);
  swap(stack_trace_info_msg_, other->stack_trace_info_msg_);
  swap(memory_range_info_msg_, other->memory_range_info_msg_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServerToClientMessage::GetMetadata() const {
  protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LineInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LineInfo::kFileFieldNumber;
const int LineInfo::kLinenoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LineInfo::LineInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugservermessages_2eproto::scc_info_LineInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugservermessages.LineInfo)
}
LineInfo::LineInfo(const LineInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_file()) {
    file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  lineno_ = from.lineno_;
  // @@protoc_insertion_point(copy_constructor:debugservermessages.LineInfo)
}

void LineInfo::SharedCtor() {
  file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lineno_ = 0u;
}

LineInfo::~LineInfo() {
  // @@protoc_insertion_point(destructor:debugservermessages.LineInfo)
  SharedDtor();
}

void LineInfo::SharedDtor() {
  file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LineInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LineInfo::descriptor() {
  ::protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LineInfo& LineInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugservermessages_2eproto::scc_info_LineInfo.base);
  return *internal_default_instance();
}


void LineInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:debugservermessages.LineInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    file_.ClearNonDefaultToEmptyNoArena();
  }
  lineno_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LineInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugservermessages.LineInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string file = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->file().data(), static_cast<int>(this->file().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "debugservermessages.LineInfo.file");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 lineno = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_lineno();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lineno_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugservermessages.LineInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugservermessages.LineInfo)
  return false;
#undef DO_
}

void LineInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugservermessages.LineInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string file = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file().data(), static_cast<int>(this->file().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "debugservermessages.LineInfo.file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->file(), output);
  }

  // required uint32 lineno = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->lineno(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:debugservermessages.LineInfo)
}

::google::protobuf::uint8* LineInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugservermessages.LineInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string file = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file().data(), static_cast<int>(this->file().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "debugservermessages.LineInfo.file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->file(), target);
  }

  // required uint32 lineno = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->lineno(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugservermessages.LineInfo)
  return target;
}

size_t LineInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:debugservermessages.LineInfo)
  size_t total_size = 0;

  if (has_file()) {
    // required string file = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file());
  }

  if (has_lineno()) {
    // required uint32 lineno = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lineno());
  }

  return total_size;
}
size_t LineInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugservermessages.LineInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string file = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file());

    // required uint32 lineno = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lineno());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LineInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugservermessages.LineInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const LineInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LineInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugservermessages.LineInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugservermessages.LineInfo)
    MergeFrom(*source);
  }
}

void LineInfo::MergeFrom(const LineInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugservermessages.LineInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_file();
      file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_);
    }
    if (cached_has_bits & 0x00000002u) {
      lineno_ = from.lineno_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LineInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugservermessages.LineInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LineInfo::CopyFrom(const LineInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugservermessages.LineInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LineInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void LineInfo::Swap(LineInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LineInfo::InternalSwap(LineInfo* other) {
  using std::swap;
  file_.Swap(&other->file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(lineno_, other->lineno_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LineInfo::GetMetadata() const {
  protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VarTypeDescriptor::InitAsDefaultInstance() {
  ::debugservermessages::_VarTypeDescriptor_default_instance_._instance.get_mutable()->type_basic_ = const_cast< ::debugservermessages::VarTypeBasic*>(
      ::debugservermessages::VarTypeBasic::internal_default_instance());
  ::debugservermessages::_VarTypeDescriptor_default_instance_._instance.get_mutable()->type_pointer_ = const_cast< ::debugservermessages::VarTypePointer*>(
      ::debugservermessages::VarTypePointer::internal_default_instance());
  ::debugservermessages::_VarTypeDescriptor_default_instance_._instance.get_mutable()->type_array_ = const_cast< ::debugservermessages::VarTypeArray*>(
      ::debugservermessages::VarTypeArray::internal_default_instance());
  ::debugservermessages::_VarTypeDescriptor_default_instance_._instance.get_mutable()->type_vector_ = const_cast< ::debugservermessages::VarTypeVector*>(
      ::debugservermessages::VarTypeVector::internal_default_instance());
  ::debugservermessages::_VarTypeDescriptor_default_instance_._instance.get_mutable()->type_typedef_ = const_cast< ::debugservermessages::VarTypeTypedef*>(
      ::debugservermessages::VarTypeTypedef::internal_default_instance());
  ::debugservermessages::_VarTypeDescriptor_default_instance_._instance.get_mutable()->type_enum_ = const_cast< ::debugservermessages::VarTypeEnum*>(
      ::debugservermessages::VarTypeEnum::internal_default_instance());
  ::debugservermessages::_VarTypeDescriptor_default_instance_._instance.get_mutable()->type_struct_ = const_cast< ::debugservermessages::VarTypeStruct*>(
      ::debugservermessages::VarTypeStruct::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VarTypeDescriptor::kTagFieldNumber;
const int VarTypeDescriptor::kTypeBasicFieldNumber;
const int VarTypeDescriptor::kTypePointerFieldNumber;
const int VarTypeDescriptor::kTypeArrayFieldNumber;
const int VarTypeDescriptor::kTypeVectorFieldNumber;
const int VarTypeDescriptor::kTypeTypedefFieldNumber;
const int VarTypeDescriptor::kTypeEnumFieldNumber;
const int VarTypeDescriptor::kTypeStructFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VarTypeDescriptor::VarTypeDescriptor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugservermessages_2eproto::scc_info_VarTypeArray.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugservermessages.VarTypeDescriptor)
}
VarTypeDescriptor::VarTypeDescriptor(const VarTypeDescriptor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_type_basic()) {
    type_basic_ = new ::debugservermessages::VarTypeBasic(*from.type_basic_);
  } else {
    type_basic_ = NULL;
  }
  if (from.has_type_pointer()) {
    type_pointer_ = new ::debugservermessages::VarTypePointer(*from.type_pointer_);
  } else {
    type_pointer_ = NULL;
  }
  if (from.has_type_array()) {
    type_array_ = new ::debugservermessages::VarTypeArray(*from.type_array_);
  } else {
    type_array_ = NULL;
  }
  if (from.has_type_vector()) {
    type_vector_ = new ::debugservermessages::VarTypeVector(*from.type_vector_);
  } else {
    type_vector_ = NULL;
  }
  if (from.has_type_typedef()) {
    type_typedef_ = new ::debugservermessages::VarTypeTypedef(*from.type_typedef_);
  } else {
    type_typedef_ = NULL;
  }
  if (from.has_type_enum()) {
    type_enum_ = new ::debugservermessages::VarTypeEnum(*from.type_enum_);
  } else {
    type_enum_ = NULL;
  }
  if (from.has_type_struct()) {
    type_struct_ = new ::debugservermessages::VarTypeStruct(*from.type_struct_);
  } else {
    type_struct_ = NULL;
  }
  tag_ = from.tag_;
  // @@protoc_insertion_point(copy_constructor:debugservermessages.VarTypeDescriptor)
}

void VarTypeDescriptor::SharedCtor() {
  ::memset(&type_basic_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tag_) -
      reinterpret_cast<char*>(&type_basic_)) + sizeof(tag_));
}

VarTypeDescriptor::~VarTypeDescriptor() {
  // @@protoc_insertion_point(destructor:debugservermessages.VarTypeDescriptor)
  SharedDtor();
}

void VarTypeDescriptor::SharedDtor() {
  if (this != internal_default_instance()) delete type_basic_;
  if (this != internal_default_instance()) delete type_pointer_;
  if (this != internal_default_instance()) delete type_array_;
  if (this != internal_default_instance()) delete type_vector_;
  if (this != internal_default_instance()) delete type_typedef_;
  if (this != internal_default_instance()) delete type_enum_;
  if (this != internal_default_instance()) delete type_struct_;
}

void VarTypeDescriptor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VarTypeDescriptor::descriptor() {
  ::protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VarTypeDescriptor& VarTypeDescriptor::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugservermessages_2eproto::scc_info_VarTypeArray.base);
  return *internal_default_instance();
}


void VarTypeDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:debugservermessages.VarTypeDescriptor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(type_basic_ != NULL);
      type_basic_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(type_pointer_ != NULL);
      type_pointer_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(type_array_ != NULL);
      type_array_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(type_vector_ != NULL);
      type_vector_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(type_typedef_ != NULL);
      type_typedef_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(type_enum_ != NULL);
      type_enum_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(type_struct_ != NULL);
      type_struct_->Clear();
    }
  }
  tag_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VarTypeDescriptor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugservermessages.VarTypeDescriptor)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .debugservermessages.VarTypeDescriptor.Tag tag = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::debugservermessages::VarTypeDescriptor_Tag_IsValid(value)) {
            set_tag(static_cast< ::debugservermessages::VarTypeDescriptor_Tag >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .debugservermessages.VarTypeBasic type_basic = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type_basic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .debugservermessages.VarTypePointer type_pointer = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type_pointer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .debugservermessages.VarTypeArray type_array = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type_array()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .debugservermessages.VarTypeVector type_vector = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type_vector()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .debugservermessages.VarTypeTypedef type_typedef = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type_typedef()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .debugservermessages.VarTypeEnum type_enum = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type_enum()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .debugservermessages.VarTypeStruct type_struct = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type_struct()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugservermessages.VarTypeDescriptor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugservermessages.VarTypeDescriptor)
  return false;
#undef DO_
}

void VarTypeDescriptor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugservermessages.VarTypeDescriptor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .debugservermessages.VarTypeDescriptor.Tag tag = 1;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->tag(), output);
  }

  // optional .debugservermessages.VarTypeBasic type_basic = 11;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_type_basic(), output);
  }

  // optional .debugservermessages.VarTypePointer type_pointer = 12;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_type_pointer(), output);
  }

  // optional .debugservermessages.VarTypeArray type_array = 13;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_type_array(), output);
  }

  // optional .debugservermessages.VarTypeVector type_vector = 14;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_type_vector(), output);
  }

  // optional .debugservermessages.VarTypeTypedef type_typedef = 15;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_type_typedef(), output);
  }

  // optional .debugservermessages.VarTypeEnum type_enum = 16;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_type_enum(), output);
  }

  // optional .debugservermessages.VarTypeStruct type_struct = 17;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_type_struct(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:debugservermessages.VarTypeDescriptor)
}

::google::protobuf::uint8* VarTypeDescriptor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugservermessages.VarTypeDescriptor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .debugservermessages.VarTypeDescriptor.Tag tag = 1;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->tag(), target);
  }

  // optional .debugservermessages.VarTypeBasic type_basic = 11;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_type_basic(), deterministic, target);
  }

  // optional .debugservermessages.VarTypePointer type_pointer = 12;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_type_pointer(), deterministic, target);
  }

  // optional .debugservermessages.VarTypeArray type_array = 13;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_type_array(), deterministic, target);
  }

  // optional .debugservermessages.VarTypeVector type_vector = 14;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_type_vector(), deterministic, target);
  }

  // optional .debugservermessages.VarTypeTypedef type_typedef = 15;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_type_typedef(), deterministic, target);
  }

  // optional .debugservermessages.VarTypeEnum type_enum = 16;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_type_enum(), deterministic, target);
  }

  // optional .debugservermessages.VarTypeStruct type_struct = 17;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_type_struct(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugservermessages.VarTypeDescriptor)
  return target;
}

size_t VarTypeDescriptor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugservermessages.VarTypeDescriptor)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .debugservermessages.VarTypeDescriptor.Tag tag = 1;
  if (has_tag()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->tag());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional .debugservermessages.VarTypeBasic type_basic = 11;
    if (has_type_basic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_basic_);
    }

    // optional .debugservermessages.VarTypePointer type_pointer = 12;
    if (has_type_pointer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_pointer_);
    }

    // optional .debugservermessages.VarTypeArray type_array = 13;
    if (has_type_array()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_array_);
    }

    // optional .debugservermessages.VarTypeVector type_vector = 14;
    if (has_type_vector()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_vector_);
    }

    // optional .debugservermessages.VarTypeTypedef type_typedef = 15;
    if (has_type_typedef()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_typedef_);
    }

    // optional .debugservermessages.VarTypeEnum type_enum = 16;
    if (has_type_enum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_enum_);
    }

    // optional .debugservermessages.VarTypeStruct type_struct = 17;
    if (has_type_struct()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_struct_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VarTypeDescriptor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugservermessages.VarTypeDescriptor)
  GOOGLE_DCHECK_NE(&from, this);
  const VarTypeDescriptor* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VarTypeDescriptor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugservermessages.VarTypeDescriptor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugservermessages.VarTypeDescriptor)
    MergeFrom(*source);
  }
}

void VarTypeDescriptor::MergeFrom(const VarTypeDescriptor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugservermessages.VarTypeDescriptor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_type_basic()->::debugservermessages::VarTypeBasic::MergeFrom(from.type_basic());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_type_pointer()->::debugservermessages::VarTypePointer::MergeFrom(from.type_pointer());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_type_array()->::debugservermessages::VarTypeArray::MergeFrom(from.type_array());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_type_vector()->::debugservermessages::VarTypeVector::MergeFrom(from.type_vector());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_type_typedef()->::debugservermessages::VarTypeTypedef::MergeFrom(from.type_typedef());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_type_enum()->::debugservermessages::VarTypeEnum::MergeFrom(from.type_enum());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_type_struct()->::debugservermessages::VarTypeStruct::MergeFrom(from.type_struct());
    }
    if (cached_has_bits & 0x00000080u) {
      tag_ = from.tag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VarTypeDescriptor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugservermessages.VarTypeDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VarTypeDescriptor::CopyFrom(const VarTypeDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugservermessages.VarTypeDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VarTypeDescriptor::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000080) != 0x00000080) return false;
  if (has_type_basic()) {
    if (!this->type_basic_->IsInitialized()) return false;
  }
  if (has_type_pointer()) {
    if (!this->type_pointer_->IsInitialized()) return false;
  }
  if (has_type_array()) {
    if (!this->type_array_->IsInitialized()) return false;
  }
  if (has_type_vector()) {
    if (!this->type_vector_->IsInitialized()) return false;
  }
  if (has_type_typedef()) {
    if (!this->type_typedef_->IsInitialized()) return false;
  }
  if (has_type_enum()) {
    if (!this->type_enum_->IsInitialized()) return false;
  }
  if (has_type_struct()) {
    if (!this->type_struct_->IsInitialized()) return false;
  }
  return true;
}

void VarTypeDescriptor::Swap(VarTypeDescriptor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VarTypeDescriptor::InternalSwap(VarTypeDescriptor* other) {
  using std::swap;
  swap(type_basic_, other->type_basic_);
  swap(type_pointer_, other->type_pointer_);
  swap(type_array_, other->type_array_);
  swap(type_vector_, other->type_vector_);
  swap(type_typedef_, other->type_typedef_);
  swap(type_enum_, other->type_enum_);
  swap(type_struct_, other->type_struct_);
  swap(tag_, other->tag_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VarTypeDescriptor::GetMetadata() const {
  protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VarTypeBasic::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VarTypeBasic::kTagFieldNumber;
const int VarTypeBasic::kSizeNbitsFieldNumber;
const int VarTypeBasic::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VarTypeBasic::VarTypeBasic()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugservermessages_2eproto::scc_info_VarTypeBasic.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugservermessages.VarTypeBasic)
}
VarTypeBasic::VarTypeBasic(const VarTypeBasic& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&size_nbits_, &from.size_nbits_,
    static_cast<size_t>(reinterpret_cast<char*>(&tag_) -
    reinterpret_cast<char*>(&size_nbits_)) + sizeof(tag_));
  // @@protoc_insertion_point(copy_constructor:debugservermessages.VarTypeBasic)
}

void VarTypeBasic::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&size_nbits_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tag_) -
      reinterpret_cast<char*>(&size_nbits_)) + sizeof(tag_));
}

VarTypeBasic::~VarTypeBasic() {
  // @@protoc_insertion_point(destructor:debugservermessages.VarTypeBasic)
  SharedDtor();
}

void VarTypeBasic::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VarTypeBasic::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VarTypeBasic::descriptor() {
  ::protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VarTypeBasic& VarTypeBasic::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugservermessages_2eproto::scc_info_VarTypeBasic.base);
  return *internal_default_instance();
}


void VarTypeBasic::Clear() {
// @@protoc_insertion_point(message_clear_start:debugservermessages.VarTypeBasic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&size_nbits_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&tag_) -
        reinterpret_cast<char*>(&size_nbits_)) + sizeof(tag_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VarTypeBasic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugservermessages.VarTypeBasic)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .debugservermessages.VarTypeBasic.Tag tag = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::debugservermessages::VarTypeBasic_Tag_IsValid(value)) {
            set_tag(static_cast< ::debugservermessages::VarTypeBasic_Tag >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 size_nbits = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_size_nbits();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &size_nbits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string name = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "debugservermessages.VarTypeBasic.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugservermessages.VarTypeBasic)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugservermessages.VarTypeBasic)
  return false;
#undef DO_
}

void VarTypeBasic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugservermessages.VarTypeBasic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .debugservermessages.VarTypeBasic.Tag tag = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->tag(), output);
  }

  // required uint64 size_nbits = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->size_nbits(), output);
  }

  // required string name = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "debugservermessages.VarTypeBasic.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:debugservermessages.VarTypeBasic)
}

::google::protobuf::uint8* VarTypeBasic::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugservermessages.VarTypeBasic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .debugservermessages.VarTypeBasic.Tag tag = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->tag(), target);
  }

  // required uint64 size_nbits = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->size_nbits(), target);
  }

  // required string name = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "debugservermessages.VarTypeBasic.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugservermessages.VarTypeBasic)
  return target;
}

size_t VarTypeBasic::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:debugservermessages.VarTypeBasic)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 20;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_size_nbits()) {
    // required uint64 size_nbits = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size_nbits());
  }

  if (has_tag()) {
    // required .debugservermessages.VarTypeBasic.Tag tag = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->tag());
  }

  return total_size;
}
size_t VarTypeBasic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugservermessages.VarTypeBasic)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string name = 20;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required uint64 size_nbits = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size_nbits());

    // required .debugservermessages.VarTypeBasic.Tag tag = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->tag());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VarTypeBasic::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugservermessages.VarTypeBasic)
  GOOGLE_DCHECK_NE(&from, this);
  const VarTypeBasic* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VarTypeBasic>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugservermessages.VarTypeBasic)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugservermessages.VarTypeBasic)
    MergeFrom(*source);
  }
}

void VarTypeBasic::MergeFrom(const VarTypeBasic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugservermessages.VarTypeBasic)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      size_nbits_ = from.size_nbits_;
    }
    if (cached_has_bits & 0x00000004u) {
      tag_ = from.tag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VarTypeBasic::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugservermessages.VarTypeBasic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VarTypeBasic::CopyFrom(const VarTypeBasic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugservermessages.VarTypeBasic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VarTypeBasic::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void VarTypeBasic::Swap(VarTypeBasic* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VarTypeBasic::InternalSwap(VarTypeBasic* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(size_nbits_, other->size_nbits_);
  swap(tag_, other->tag_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VarTypeBasic::GetMetadata() const {
  protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VarTypePointer::InitAsDefaultInstance() {
  ::debugservermessages::_VarTypePointer_default_instance_._instance.get_mutable()->pointee_ = const_cast< ::debugservermessages::VarTypeDescriptor*>(
      ::debugservermessages::VarTypeDescriptor::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VarTypePointer::kPointeeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VarTypePointer::VarTypePointer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugservermessages_2eproto::scc_info_VarTypeArray.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugservermessages.VarTypePointer)
}
VarTypePointer::VarTypePointer(const VarTypePointer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pointee()) {
    pointee_ = new ::debugservermessages::VarTypeDescriptor(*from.pointee_);
  } else {
    pointee_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:debugservermessages.VarTypePointer)
}

void VarTypePointer::SharedCtor() {
  pointee_ = NULL;
}

VarTypePointer::~VarTypePointer() {
  // @@protoc_insertion_point(destructor:debugservermessages.VarTypePointer)
  SharedDtor();
}

void VarTypePointer::SharedDtor() {
  if (this != internal_default_instance()) delete pointee_;
}

void VarTypePointer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VarTypePointer::descriptor() {
  ::protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VarTypePointer& VarTypePointer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugservermessages_2eproto::scc_info_VarTypeArray.base);
  return *internal_default_instance();
}


void VarTypePointer::Clear() {
// @@protoc_insertion_point(message_clear_start:debugservermessages.VarTypePointer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(pointee_ != NULL);
    pointee_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VarTypePointer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugservermessages.VarTypePointer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .debugservermessages.VarTypeDescriptor pointee = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pointee()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugservermessages.VarTypePointer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugservermessages.VarTypePointer)
  return false;
#undef DO_
}

void VarTypePointer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugservermessages.VarTypePointer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .debugservermessages.VarTypeDescriptor pointee = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pointee(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:debugservermessages.VarTypePointer)
}

::google::protobuf::uint8* VarTypePointer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugservermessages.VarTypePointer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .debugservermessages.VarTypeDescriptor pointee = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pointee(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugservermessages.VarTypePointer)
  return target;
}

size_t VarTypePointer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugservermessages.VarTypePointer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .debugservermessages.VarTypeDescriptor pointee = 1;
  if (has_pointee()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pointee_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VarTypePointer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugservermessages.VarTypePointer)
  GOOGLE_DCHECK_NE(&from, this);
  const VarTypePointer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VarTypePointer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugservermessages.VarTypePointer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugservermessages.VarTypePointer)
    MergeFrom(*source);
  }
}

void VarTypePointer::MergeFrom(const VarTypePointer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugservermessages.VarTypePointer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pointee()) {
    mutable_pointee()->::debugservermessages::VarTypeDescriptor::MergeFrom(from.pointee());
  }
}

void VarTypePointer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugservermessages.VarTypePointer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VarTypePointer::CopyFrom(const VarTypePointer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugservermessages.VarTypePointer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VarTypePointer::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_pointee()) {
    if (!this->pointee_->IsInitialized()) return false;
  }
  return true;
}

void VarTypePointer::Swap(VarTypePointer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VarTypePointer::InternalSwap(VarTypePointer* other) {
  using std::swap;
  swap(pointee_, other->pointee_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VarTypePointer::GetMetadata() const {
  protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VarTypeArray::InitAsDefaultInstance() {
  ::debugservermessages::_VarTypeArray_default_instance_._instance.get_mutable()->element_ = const_cast< ::debugservermessages::VarTypeDescriptor*>(
      ::debugservermessages::VarTypeDescriptor::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VarTypeArray::kElementFieldNumber;
const int VarTypeArray::kDimensionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VarTypeArray::VarTypeArray()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugservermessages_2eproto::scc_info_VarTypeArray.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugservermessages.VarTypeArray)
}
VarTypeArray::VarTypeArray(const VarTypeArray& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      dimensions_(from.dimensions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_element()) {
    element_ = new ::debugservermessages::VarTypeDescriptor(*from.element_);
  } else {
    element_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:debugservermessages.VarTypeArray)
}

void VarTypeArray::SharedCtor() {
  element_ = NULL;
}

VarTypeArray::~VarTypeArray() {
  // @@protoc_insertion_point(destructor:debugservermessages.VarTypeArray)
  SharedDtor();
}

void VarTypeArray::SharedDtor() {
  if (this != internal_default_instance()) delete element_;
}

void VarTypeArray::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VarTypeArray::descriptor() {
  ::protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VarTypeArray& VarTypeArray::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugservermessages_2eproto::scc_info_VarTypeArray.base);
  return *internal_default_instance();
}


void VarTypeArray::Clear() {
// @@protoc_insertion_point(message_clear_start:debugservermessages.VarTypeArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dimensions_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(element_ != NULL);
    element_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VarTypeArray::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugservermessages.VarTypeArray)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .debugservermessages.VarTypeDescriptor element = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_element()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 dimensions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 16u, input, this->mutable_dimensions())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_dimensions())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugservermessages.VarTypeArray)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugservermessages.VarTypeArray)
  return false;
#undef DO_
}

void VarTypeArray::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugservermessages.VarTypeArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .debugservermessages.VarTypeDescriptor element = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_element(), output);
  }

  // repeated uint64 dimensions = 2;
  for (int i = 0, n = this->dimensions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      2, this->dimensions(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:debugservermessages.VarTypeArray)
}

::google::protobuf::uint8* VarTypeArray::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugservermessages.VarTypeArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .debugservermessages.VarTypeDescriptor element = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_element(), deterministic, target);
  }

  // repeated uint64 dimensions = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(2, this->dimensions_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugservermessages.VarTypeArray)
  return target;
}

size_t VarTypeArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugservermessages.VarTypeArray)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .debugservermessages.VarTypeDescriptor element = 1;
  if (has_element()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *element_);
  }
  // repeated uint64 dimensions = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->dimensions_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->dimensions_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VarTypeArray::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugservermessages.VarTypeArray)
  GOOGLE_DCHECK_NE(&from, this);
  const VarTypeArray* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VarTypeArray>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugservermessages.VarTypeArray)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugservermessages.VarTypeArray)
    MergeFrom(*source);
  }
}

void VarTypeArray::MergeFrom(const VarTypeArray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugservermessages.VarTypeArray)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dimensions_.MergeFrom(from.dimensions_);
  if (from.has_element()) {
    mutable_element()->::debugservermessages::VarTypeDescriptor::MergeFrom(from.element());
  }
}

void VarTypeArray::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugservermessages.VarTypeArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VarTypeArray::CopyFrom(const VarTypeArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugservermessages.VarTypeArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VarTypeArray::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_element()) {
    if (!this->element_->IsInitialized()) return false;
  }
  return true;
}

void VarTypeArray::Swap(VarTypeArray* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VarTypeArray::InternalSwap(VarTypeArray* other) {
  using std::swap;
  dimensions_.InternalSwap(&other->dimensions_);
  swap(element_, other->element_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VarTypeArray::GetMetadata() const {
  protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VarTypeEnum_EnumEntry::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VarTypeEnum_EnumEntry::kNameFieldNumber;
const int VarTypeEnum_EnumEntry::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VarTypeEnum_EnumEntry::VarTypeEnum_EnumEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugservermessages_2eproto::scc_info_VarTypeEnum_EnumEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugservermessages.VarTypeEnum.EnumEntry)
}
VarTypeEnum_EnumEntry::VarTypeEnum_EnumEntry(const VarTypeEnum_EnumEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:debugservermessages.VarTypeEnum.EnumEntry)
}

void VarTypeEnum_EnumEntry::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = GOOGLE_ULONGLONG(0);
}

VarTypeEnum_EnumEntry::~VarTypeEnum_EnumEntry() {
  // @@protoc_insertion_point(destructor:debugservermessages.VarTypeEnum.EnumEntry)
  SharedDtor();
}

void VarTypeEnum_EnumEntry::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VarTypeEnum_EnumEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VarTypeEnum_EnumEntry::descriptor() {
  ::protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VarTypeEnum_EnumEntry& VarTypeEnum_EnumEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugservermessages_2eproto::scc_info_VarTypeEnum_EnumEntry.base);
  return *internal_default_instance();
}


void VarTypeEnum_EnumEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:debugservermessages.VarTypeEnum.EnumEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  value_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VarTypeEnum_EnumEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugservermessages.VarTypeEnum.EnumEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "debugservermessages.VarTypeEnum.EnumEntry.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugservermessages.VarTypeEnum.EnumEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugservermessages.VarTypeEnum.EnumEntry)
  return false;
#undef DO_
}

void VarTypeEnum_EnumEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugservermessages.VarTypeEnum.EnumEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "debugservermessages.VarTypeEnum.EnumEntry.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required uint64 value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:debugservermessages.VarTypeEnum.EnumEntry)
}

::google::protobuf::uint8* VarTypeEnum_EnumEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugservermessages.VarTypeEnum.EnumEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "debugservermessages.VarTypeEnum.EnumEntry.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required uint64 value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugservermessages.VarTypeEnum.EnumEntry)
  return target;
}

size_t VarTypeEnum_EnumEntry::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:debugservermessages.VarTypeEnum.EnumEntry)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_value()) {
    // required uint64 value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->value());
  }

  return total_size;
}
size_t VarTypeEnum_EnumEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugservermessages.VarTypeEnum.EnumEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required uint64 value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->value());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VarTypeEnum_EnumEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugservermessages.VarTypeEnum.EnumEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const VarTypeEnum_EnumEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VarTypeEnum_EnumEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugservermessages.VarTypeEnum.EnumEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugservermessages.VarTypeEnum.EnumEntry)
    MergeFrom(*source);
  }
}

void VarTypeEnum_EnumEntry::MergeFrom(const VarTypeEnum_EnumEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugservermessages.VarTypeEnum.EnumEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      value_ = from.value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VarTypeEnum_EnumEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugservermessages.VarTypeEnum.EnumEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VarTypeEnum_EnumEntry::CopyFrom(const VarTypeEnum_EnumEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugservermessages.VarTypeEnum.EnumEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VarTypeEnum_EnumEntry::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void VarTypeEnum_EnumEntry::Swap(VarTypeEnum_EnumEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VarTypeEnum_EnumEntry::InternalSwap(VarTypeEnum_EnumEntry* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(value_, other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VarTypeEnum_EnumEntry::GetMetadata() const {
  protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VarTypeEnum::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VarTypeEnum::kNameFieldNumber;
const int VarTypeEnum::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VarTypeEnum::VarTypeEnum()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugservermessages_2eproto::scc_info_VarTypeEnum.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugservermessages.VarTypeEnum)
}
VarTypeEnum::VarTypeEnum(const VarTypeEnum& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:debugservermessages.VarTypeEnum)
}

void VarTypeEnum::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

VarTypeEnum::~VarTypeEnum() {
  // @@protoc_insertion_point(destructor:debugservermessages.VarTypeEnum)
  SharedDtor();
}

void VarTypeEnum::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VarTypeEnum::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VarTypeEnum::descriptor() {
  ::protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VarTypeEnum& VarTypeEnum::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugservermessages_2eproto::scc_info_VarTypeEnum.base);
  return *internal_default_instance();
}


void VarTypeEnum::Clear() {
// @@protoc_insertion_point(message_clear_start:debugservermessages.VarTypeEnum)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VarTypeEnum::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugservermessages.VarTypeEnum)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "debugservermessages.VarTypeEnum.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .debugservermessages.VarTypeEnum.EnumEntry entries = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugservermessages.VarTypeEnum)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugservermessages.VarTypeEnum)
  return false;
#undef DO_
}

void VarTypeEnum::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugservermessages.VarTypeEnum)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "debugservermessages.VarTypeEnum.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .debugservermessages.VarTypeEnum.EnumEntry entries = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->entries(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:debugservermessages.VarTypeEnum)
}

::google::protobuf::uint8* VarTypeEnum::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugservermessages.VarTypeEnum)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "debugservermessages.VarTypeEnum.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .debugservermessages.VarTypeEnum.EnumEntry entries = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->entries(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugservermessages.VarTypeEnum)
  return target;
}

size_t VarTypeEnum::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugservermessages.VarTypeEnum)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  // repeated .debugservermessages.VarTypeEnum.EnumEntry entries = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VarTypeEnum::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugservermessages.VarTypeEnum)
  GOOGLE_DCHECK_NE(&from, this);
  const VarTypeEnum* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VarTypeEnum>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugservermessages.VarTypeEnum)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugservermessages.VarTypeEnum)
    MergeFrom(*source);
  }
}

void VarTypeEnum::MergeFrom(const VarTypeEnum& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugservermessages.VarTypeEnum)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
  if (from.has_name()) {
    set_has_name();
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void VarTypeEnum::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugservermessages.VarTypeEnum)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VarTypeEnum::CopyFrom(const VarTypeEnum& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugservermessages.VarTypeEnum)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VarTypeEnum::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->entries())) return false;
  return true;
}

void VarTypeEnum::Swap(VarTypeEnum* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VarTypeEnum::InternalSwap(VarTypeEnum* other) {
  using std::swap;
  CastToBase(&entries_)->InternalSwap(CastToBase(&other->entries_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VarTypeEnum::GetMetadata() const {
  protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VarTypeStruct_StructMember::InitAsDefaultInstance() {
  ::debugservermessages::_VarTypeStruct_StructMember_default_instance_._instance.get_mutable()->type_ = const_cast< ::debugservermessages::VarTypeDescriptor*>(
      ::debugservermessages::VarTypeDescriptor::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VarTypeStruct_StructMember::kNameFieldNumber;
const int VarTypeStruct_StructMember::kSizeNbitsFieldNumber;
const int VarTypeStruct_StructMember::kAlignNbitsFieldNumber;
const int VarTypeStruct_StructMember::kOffsetNbitsFieldNumber;
const int VarTypeStruct_StructMember::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VarTypeStruct_StructMember::VarTypeStruct_StructMember()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugservermessages_2eproto::scc_info_VarTypeArray.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugservermessages.VarTypeStruct.StructMember)
}
VarTypeStruct_StructMember::VarTypeStruct_StructMember(const VarTypeStruct_StructMember& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_type()) {
    type_ = new ::debugservermessages::VarTypeDescriptor(*from.type_);
  } else {
    type_ = NULL;
  }
  ::memcpy(&size_nbits_, &from.size_nbits_,
    static_cast<size_t>(reinterpret_cast<char*>(&offset_nbits_) -
    reinterpret_cast<char*>(&size_nbits_)) + sizeof(offset_nbits_));
  // @@protoc_insertion_point(copy_constructor:debugservermessages.VarTypeStruct.StructMember)
}

void VarTypeStruct_StructMember::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&offset_nbits_) -
      reinterpret_cast<char*>(&type_)) + sizeof(offset_nbits_));
}

VarTypeStruct_StructMember::~VarTypeStruct_StructMember() {
  // @@protoc_insertion_point(destructor:debugservermessages.VarTypeStruct.StructMember)
  SharedDtor();
}

void VarTypeStruct_StructMember::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete type_;
}

void VarTypeStruct_StructMember::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VarTypeStruct_StructMember::descriptor() {
  ::protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VarTypeStruct_StructMember& VarTypeStruct_StructMember::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugservermessages_2eproto::scc_info_VarTypeArray.base);
  return *internal_default_instance();
}


void VarTypeStruct_StructMember::Clear() {
// @@protoc_insertion_point(message_clear_start:debugservermessages.VarTypeStruct.StructMember)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(type_ != NULL);
      type_->Clear();
    }
  }
  if (cached_has_bits & 28u) {
    ::memset(&size_nbits_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&offset_nbits_) -
        reinterpret_cast<char*>(&size_nbits_)) + sizeof(offset_nbits_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VarTypeStruct_StructMember::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugservermessages.VarTypeStruct.StructMember)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "debugservermessages.VarTypeStruct.StructMember.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 size_nbits = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_size_nbits();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &size_nbits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 align_nbits = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_align_nbits();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &align_nbits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 offset_nbits = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_offset_nbits();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_nbits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .debugservermessages.VarTypeDescriptor type = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugservermessages.VarTypeStruct.StructMember)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugservermessages.VarTypeStruct.StructMember)
  return false;
#undef DO_
}

void VarTypeStruct_StructMember::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugservermessages.VarTypeStruct.StructMember)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "debugservermessages.VarTypeStruct.StructMember.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required uint64 size_nbits = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->size_nbits(), output);
  }

  // required uint64 align_nbits = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->align_nbits(), output);
  }

  // required uint64 offset_nbits = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->offset_nbits(), output);
  }

  // required .debugservermessages.VarTypeDescriptor type = 20;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->_internal_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:debugservermessages.VarTypeStruct.StructMember)
}

::google::protobuf::uint8* VarTypeStruct_StructMember::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugservermessages.VarTypeStruct.StructMember)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "debugservermessages.VarTypeStruct.StructMember.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required uint64 size_nbits = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->size_nbits(), target);
  }

  // required uint64 align_nbits = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->align_nbits(), target);
  }

  // required uint64 offset_nbits = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->offset_nbits(), target);
  }

  // required .debugservermessages.VarTypeDescriptor type = 20;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->_internal_type(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugservermessages.VarTypeStruct.StructMember)
  return target;
}

size_t VarTypeStruct_StructMember::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:debugservermessages.VarTypeStruct.StructMember)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_type()) {
    // required .debugservermessages.VarTypeDescriptor type = 20;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *type_);
  }

  if (has_size_nbits()) {
    // required uint64 size_nbits = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size_nbits());
  }

  if (has_align_nbits()) {
    // required uint64 align_nbits = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->align_nbits());
  }

  if (has_offset_nbits()) {
    // required uint64 offset_nbits = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset_nbits());
  }

  return total_size;
}
size_t VarTypeStruct_StructMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugservermessages.VarTypeStruct.StructMember)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required .debugservermessages.VarTypeDescriptor type = 20;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *type_);

    // required uint64 size_nbits = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size_nbits());

    // required uint64 align_nbits = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->align_nbits());

    // required uint64 offset_nbits = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset_nbits());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VarTypeStruct_StructMember::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugservermessages.VarTypeStruct.StructMember)
  GOOGLE_DCHECK_NE(&from, this);
  const VarTypeStruct_StructMember* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VarTypeStruct_StructMember>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugservermessages.VarTypeStruct.StructMember)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugservermessages.VarTypeStruct.StructMember)
    MergeFrom(*source);
  }
}

void VarTypeStruct_StructMember::MergeFrom(const VarTypeStruct_StructMember& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugservermessages.VarTypeStruct.StructMember)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_type()->::debugservermessages::VarTypeDescriptor::MergeFrom(from.type());
    }
    if (cached_has_bits & 0x00000004u) {
      size_nbits_ = from.size_nbits_;
    }
    if (cached_has_bits & 0x00000008u) {
      align_nbits_ = from.align_nbits_;
    }
    if (cached_has_bits & 0x00000010u) {
      offset_nbits_ = from.offset_nbits_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VarTypeStruct_StructMember::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugservermessages.VarTypeStruct.StructMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VarTypeStruct_StructMember::CopyFrom(const VarTypeStruct_StructMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugservermessages.VarTypeStruct.StructMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VarTypeStruct_StructMember::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  if (has_type()) {
    if (!this->type_->IsInitialized()) return false;
  }
  return true;
}

void VarTypeStruct_StructMember::Swap(VarTypeStruct_StructMember* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VarTypeStruct_StructMember::InternalSwap(VarTypeStruct_StructMember* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(size_nbits_, other->size_nbits_);
  swap(align_nbits_, other->align_nbits_);
  swap(offset_nbits_, other->offset_nbits_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VarTypeStruct_StructMember::GetMetadata() const {
  protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VarTypeStruct::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VarTypeStruct::kNameFieldNumber;
const int VarTypeStruct::kMembersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VarTypeStruct::VarTypeStruct()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugservermessages_2eproto::scc_info_VarTypeArray.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugservermessages.VarTypeStruct)
}
VarTypeStruct::VarTypeStruct(const VarTypeStruct& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      members_(from.members_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:debugservermessages.VarTypeStruct)
}

void VarTypeStruct::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

VarTypeStruct::~VarTypeStruct() {
  // @@protoc_insertion_point(destructor:debugservermessages.VarTypeStruct)
  SharedDtor();
}

void VarTypeStruct::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VarTypeStruct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VarTypeStruct::descriptor() {
  ::protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VarTypeStruct& VarTypeStruct::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugservermessages_2eproto::scc_info_VarTypeArray.base);
  return *internal_default_instance();
}


void VarTypeStruct::Clear() {
// @@protoc_insertion_point(message_clear_start:debugservermessages.VarTypeStruct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  members_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VarTypeStruct::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugservermessages.VarTypeStruct)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "debugservermessages.VarTypeStruct.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .debugservermessages.VarTypeStruct.StructMember members = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_members()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugservermessages.VarTypeStruct)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugservermessages.VarTypeStruct)
  return false;
#undef DO_
}

void VarTypeStruct::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugservermessages.VarTypeStruct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "debugservermessages.VarTypeStruct.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .debugservermessages.VarTypeStruct.StructMember members = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->members_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->members(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:debugservermessages.VarTypeStruct)
}

::google::protobuf::uint8* VarTypeStruct::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugservermessages.VarTypeStruct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "debugservermessages.VarTypeStruct.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .debugservermessages.VarTypeStruct.StructMember members = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->members_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->members(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugservermessages.VarTypeStruct)
  return target;
}

size_t VarTypeStruct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugservermessages.VarTypeStruct)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  // repeated .debugservermessages.VarTypeStruct.StructMember members = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->members_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->members(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VarTypeStruct::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugservermessages.VarTypeStruct)
  GOOGLE_DCHECK_NE(&from, this);
  const VarTypeStruct* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VarTypeStruct>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugservermessages.VarTypeStruct)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugservermessages.VarTypeStruct)
    MergeFrom(*source);
  }
}

void VarTypeStruct::MergeFrom(const VarTypeStruct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugservermessages.VarTypeStruct)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  members_.MergeFrom(from.members_);
  if (from.has_name()) {
    set_has_name();
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void VarTypeStruct::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugservermessages.VarTypeStruct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VarTypeStruct::CopyFrom(const VarTypeStruct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugservermessages.VarTypeStruct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VarTypeStruct::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->members())) return false;
  return true;
}

void VarTypeStruct::Swap(VarTypeStruct* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VarTypeStruct::InternalSwap(VarTypeStruct* other) {
  using std::swap;
  CastToBase(&members_)->InternalSwap(CastToBase(&other->members_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VarTypeStruct::GetMetadata() const {
  protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VarTypeVector::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VarTypeVector::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VarTypeVector::VarTypeVector()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugservermessages_2eproto::scc_info_VarTypeVector.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugservermessages.VarTypeVector)
}
VarTypeVector::VarTypeVector(const VarTypeVector& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:debugservermessages.VarTypeVector)
}

void VarTypeVector::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

VarTypeVector::~VarTypeVector() {
  // @@protoc_insertion_point(destructor:debugservermessages.VarTypeVector)
  SharedDtor();
}

void VarTypeVector::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VarTypeVector::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VarTypeVector::descriptor() {
  ::protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VarTypeVector& VarTypeVector::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugservermessages_2eproto::scc_info_VarTypeVector.base);
  return *internal_default_instance();
}


void VarTypeVector::Clear() {
// @@protoc_insertion_point(message_clear_start:debugservermessages.VarTypeVector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VarTypeVector::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugservermessages.VarTypeVector)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "debugservermessages.VarTypeVector.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugservermessages.VarTypeVector)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugservermessages.VarTypeVector)
  return false;
#undef DO_
}

void VarTypeVector::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugservermessages.VarTypeVector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "debugservermessages.VarTypeVector.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:debugservermessages.VarTypeVector)
}

::google::protobuf::uint8* VarTypeVector::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugservermessages.VarTypeVector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "debugservermessages.VarTypeVector.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugservermessages.VarTypeVector)
  return target;
}

size_t VarTypeVector::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugservermessages.VarTypeVector)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VarTypeVector::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugservermessages.VarTypeVector)
  GOOGLE_DCHECK_NE(&from, this);
  const VarTypeVector* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VarTypeVector>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugservermessages.VarTypeVector)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugservermessages.VarTypeVector)
    MergeFrom(*source);
  }
}

void VarTypeVector::MergeFrom(const VarTypeVector& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugservermessages.VarTypeVector)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_name()) {
    set_has_name();
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void VarTypeVector::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugservermessages.VarTypeVector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VarTypeVector::CopyFrom(const VarTypeVector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugservermessages.VarTypeVector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VarTypeVector::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void VarTypeVector::Swap(VarTypeVector* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VarTypeVector::InternalSwap(VarTypeVector* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VarTypeVector::GetMetadata() const {
  protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VarTypeTypedef::InitAsDefaultInstance() {
  ::debugservermessages::_VarTypeTypedef_default_instance_._instance.get_mutable()->original_type_ = const_cast< ::debugservermessages::VarTypeDescriptor*>(
      ::debugservermessages::VarTypeDescriptor::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VarTypeTypedef::kNameFieldNumber;
const int VarTypeTypedef::kOriginalTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VarTypeTypedef::VarTypeTypedef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugservermessages_2eproto::scc_info_VarTypeArray.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugservermessages.VarTypeTypedef)
}
VarTypeTypedef::VarTypeTypedef(const VarTypeTypedef& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_original_type()) {
    original_type_ = new ::debugservermessages::VarTypeDescriptor(*from.original_type_);
  } else {
    original_type_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:debugservermessages.VarTypeTypedef)
}

void VarTypeTypedef::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  original_type_ = NULL;
}

VarTypeTypedef::~VarTypeTypedef() {
  // @@protoc_insertion_point(destructor:debugservermessages.VarTypeTypedef)
  SharedDtor();
}

void VarTypeTypedef::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete original_type_;
}

void VarTypeTypedef::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VarTypeTypedef::descriptor() {
  ::protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VarTypeTypedef& VarTypeTypedef::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugservermessages_2eproto::scc_info_VarTypeArray.base);
  return *internal_default_instance();
}


void VarTypeTypedef::Clear() {
// @@protoc_insertion_point(message_clear_start:debugservermessages.VarTypeTypedef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(original_type_ != NULL);
      original_type_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VarTypeTypedef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugservermessages.VarTypeTypedef)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "debugservermessages.VarTypeTypedef.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .debugservermessages.VarTypeDescriptor original_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_original_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugservermessages.VarTypeTypedef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugservermessages.VarTypeTypedef)
  return false;
#undef DO_
}

void VarTypeTypedef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugservermessages.VarTypeTypedef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "debugservermessages.VarTypeTypedef.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required .debugservermessages.VarTypeDescriptor original_type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_original_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:debugservermessages.VarTypeTypedef)
}

::google::protobuf::uint8* VarTypeTypedef::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugservermessages.VarTypeTypedef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "debugservermessages.VarTypeTypedef.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required .debugservermessages.VarTypeDescriptor original_type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_original_type(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugservermessages.VarTypeTypedef)
  return target;
}

size_t VarTypeTypedef::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:debugservermessages.VarTypeTypedef)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_original_type()) {
    // required .debugservermessages.VarTypeDescriptor original_type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *original_type_);
  }

  return total_size;
}
size_t VarTypeTypedef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugservermessages.VarTypeTypedef)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required .debugservermessages.VarTypeDescriptor original_type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *original_type_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VarTypeTypedef::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugservermessages.VarTypeTypedef)
  GOOGLE_DCHECK_NE(&from, this);
  const VarTypeTypedef* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VarTypeTypedef>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugservermessages.VarTypeTypedef)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugservermessages.VarTypeTypedef)
    MergeFrom(*source);
  }
}

void VarTypeTypedef::MergeFrom(const VarTypeTypedef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugservermessages.VarTypeTypedef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_original_type()->::debugservermessages::VarTypeDescriptor::MergeFrom(from.original_type());
    }
  }
}

void VarTypeTypedef::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugservermessages.VarTypeTypedef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VarTypeTypedef::CopyFrom(const VarTypeTypedef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugservermessages.VarTypeTypedef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VarTypeTypedef::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_original_type()) {
    if (!this->original_type_->IsInitialized()) return false;
  }
  return true;
}

void VarTypeTypedef::Swap(VarTypeTypedef* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VarTypeTypedef::InternalSwap(VarTypeTypedef* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(original_type_, other->original_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VarTypeTypedef::GetMetadata() const {
  protobuf_debugservermessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugservermessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace debugservermessages
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugservermessages::ClientToServerMessage_StartSessionMsg* Arena::CreateMaybeMessage< ::debugservermessages::ClientToServerMessage_StartSessionMsg >(Arena* arena) {
  return Arena::CreateInternal< ::debugservermessages::ClientToServerMessage_StartSessionMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugservermessages::ClientToServerMessage_RunMsg* Arena::CreateMaybeMessage< ::debugservermessages::ClientToServerMessage_RunMsg >(Arena* arena) {
  return Arena::CreateInternal< ::debugservermessages::ClientToServerMessage_RunMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugservermessages::ClientToServerMessage_GetMemoryRangeMsg* Arena::CreateMaybeMessage< ::debugservermessages::ClientToServerMessage_GetMemoryRangeMsg >(Arena* arena) {
  return Arena::CreateInternal< ::debugservermessages::ClientToServerMessage_GetMemoryRangeMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugservermessages::ClientToServerMessage* Arena::CreateMaybeMessage< ::debugservermessages::ClientToServerMessage >(Arena* arena) {
  return Arena::CreateInternal< ::debugservermessages::ClientToServerMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugservermessages::ServerToClientMessage_CmdErrorMsg* Arena::CreateMaybeMessage< ::debugservermessages::ServerToClientMessage_CmdErrorMsg >(Arena* arena) {
  return Arena::CreateInternal< ::debugservermessages::ServerToClientMessage_CmdErrorMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugservermessages::ServerToClientMessage_StartSessionAckMsg* Arena::CreateMaybeMessage< ::debugservermessages::ServerToClientMessage_StartSessionAckMsg >(Arena* arena) {
  return Arena::CreateInternal< ::debugservermessages::ServerToClientMessage_StartSessionAckMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugservermessages::ServerToClientMessage_VarInfo* Arena::CreateMaybeMessage< ::debugservermessages::ServerToClientMessage_VarInfo >(Arena* arena) {
  return Arena::CreateInternal< ::debugservermessages::ServerToClientMessage_VarInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugservermessages::ServerToClientMessage_StackFrameInfo* Arena::CreateMaybeMessage< ::debugservermessages::ServerToClientMessage_StackFrameInfo >(Arena* arena) {
  return Arena::CreateInternal< ::debugservermessages::ServerToClientMessage_StackFrameInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugservermessages::ServerToClientMessage_BPHitMsg* Arena::CreateMaybeMessage< ::debugservermessages::ServerToClientMessage_BPHitMsg >(Arena* arena) {
  return Arena::CreateInternal< ::debugservermessages::ServerToClientMessage_BPHitMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugservermessages::ServerToClientMessage_StackTraceInfoMsg* Arena::CreateMaybeMessage< ::debugservermessages::ServerToClientMessage_StackTraceInfoMsg >(Arena* arena) {
  return Arena::CreateInternal< ::debugservermessages::ServerToClientMessage_StackTraceInfoMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugservermessages::ServerToClientMessage_MemoryRangeInfoMsg* Arena::CreateMaybeMessage< ::debugservermessages::ServerToClientMessage_MemoryRangeInfoMsg >(Arena* arena) {
  return Arena::CreateInternal< ::debugservermessages::ServerToClientMessage_MemoryRangeInfoMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugservermessages::ServerToClientMessage* Arena::CreateMaybeMessage< ::debugservermessages::ServerToClientMessage >(Arena* arena) {
  return Arena::CreateInternal< ::debugservermessages::ServerToClientMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugservermessages::LineInfo* Arena::CreateMaybeMessage< ::debugservermessages::LineInfo >(Arena* arena) {
  return Arena::CreateInternal< ::debugservermessages::LineInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugservermessages::VarTypeDescriptor* Arena::CreateMaybeMessage< ::debugservermessages::VarTypeDescriptor >(Arena* arena) {
  return Arena::CreateInternal< ::debugservermessages::VarTypeDescriptor >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugservermessages::VarTypeBasic* Arena::CreateMaybeMessage< ::debugservermessages::VarTypeBasic >(Arena* arena) {
  return Arena::CreateInternal< ::debugservermessages::VarTypeBasic >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugservermessages::VarTypePointer* Arena::CreateMaybeMessage< ::debugservermessages::VarTypePointer >(Arena* arena) {
  return Arena::CreateInternal< ::debugservermessages::VarTypePointer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugservermessages::VarTypeArray* Arena::CreateMaybeMessage< ::debugservermessages::VarTypeArray >(Arena* arena) {
  return Arena::CreateInternal< ::debugservermessages::VarTypeArray >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugservermessages::VarTypeEnum_EnumEntry* Arena::CreateMaybeMessage< ::debugservermessages::VarTypeEnum_EnumEntry >(Arena* arena) {
  return Arena::CreateInternal< ::debugservermessages::VarTypeEnum_EnumEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugservermessages::VarTypeEnum* Arena::CreateMaybeMessage< ::debugservermessages::VarTypeEnum >(Arena* arena) {
  return Arena::CreateInternal< ::debugservermessages::VarTypeEnum >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugservermessages::VarTypeStruct_StructMember* Arena::CreateMaybeMessage< ::debugservermessages::VarTypeStruct_StructMember >(Arena* arena) {
  return Arena::CreateInternal< ::debugservermessages::VarTypeStruct_StructMember >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugservermessages::VarTypeStruct* Arena::CreateMaybeMessage< ::debugservermessages::VarTypeStruct >(Arena* arena) {
  return Arena::CreateInternal< ::debugservermessages::VarTypeStruct >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugservermessages::VarTypeVector* Arena::CreateMaybeMessage< ::debugservermessages::VarTypeVector >(Arena* arena) {
  return Arena::CreateInternal< ::debugservermessages::VarTypeVector >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugservermessages::VarTypeTypedef* Arena::CreateMaybeMessage< ::debugservermessages::VarTypeTypedef >(Arena* arena) {
  return Arena::CreateInternal< ::debugservermessages::VarTypeTypedef >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
