/*****************************************************************************\

Copyright (c) Intel Corporation (2011).

    INTEL MAKES NO WARRANTY OF ANY KIND REGARDING THE CODE.  THIS CODE IS
    LICENSED ON AN "AS IS" BASIS AND INTEL WILL NOT PROVIDE ANY SUPPORT,
    ASSISTANCE, INSTALLATION, TRAINING OR OTHER SERVICES.  INTEL DOES NOT
    PROVIDE ANY UPDATES, ENHANCEMENTS OR EXTENSIONS.  INTEL SPECIFICALLY
    DISCLAIMS ANY WARRANTY OF MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR ANY
    PARTICULAR PURPOSE, OR ANY OTHER WARRANTY.  Intel disclaims all liability,
    including liability for infringement of any proprietary rights, relating to
    use of the code. No license, express or implied, by estoppels or otherwise,
    to any intellectual property rights is granted herein.

File Name:  DynamicLibraryLoader.cpp

\*****************************************************************************/

#include "DynamicLibraryLoader.h"
#include "exceptions.h"
#include "TargetArch.h"
#include "assert.h"
#include <stdio.h>

#if defined(_WIN32)
    #include <windows.h>
#else
    #include <dlfcn.h>
    #include <linux/limits.h>
    #define MAX_PATH PATH_MAX
#endif
void RegisterMICBIFunctions(std::map<std::string, unsigned long long int>& functionsTable);

namespace Intel { namespace OpenCL { namespace DeviceBackend {

#define OCL_SVML_FUNCTIONS_COUNT    2064

// We use the tokens defined in CVT_RT? and replace them with the appropriate values at run time,
// depending on the target.
#define CVT_RTN "%1"
#define CVT_RTZ "%2"
#define CVT_RTP "%3"
#define CVT_RTE "%4"
static const char* g_functionNames[OCL_SVML_FUNCTIONS_COUNT] =
{
    "acos1",
    "acos16",
    "acos16_native",
    "acos1_native",
    "acos2",
    "acos2_native",
    "acos3",
    "acos3_native",
    "acos4",
    "acos4_native",
    "acos8",
    "acos8_native",
    "acosf1",
    "acosf16",
    "acosf16_native",
    "acosf1_native",
    "acosf2",
    "acosf2_native",
    "acosf3",
    "acosf3_native",
    "acosf4",
    "acosf4_native",
    "acosf8",
    "acosf8_native",
    "acosh1",
    "acosh16",
    "acosh16_native",
    "acosh1_native",
    "acosh2",
    "acosh2_native",
    "acosh3",
    "acosh3_native",
    "acosh4",
    "acosh4_native",
    "acosh8",
    "acosh8_native",
    "acoshf1",
    "acoshf16",
    "acoshf16_native",
    "acoshf1_native",
    "acoshf2",
    "acoshf2_native",
    "acoshf3",
    "acoshf3_native",
    "acoshf4",
    "acoshf4_native",
    "acoshf8",
    "acoshf8_native",
    "acospi1",
    "acospi16",
    "acospi16_native",
    "acospi1_native",
    "acospi2",
    "acospi2_native",
    "acospi3",
    "acospi3_native",
    "acospi4",
    "acospi4_native",
    "acospi8",
    "acospi8_native",
    "acospif1",
    "acospif16",
    "acospif16_native",
    "acospif1_native",
    "acospif2",
    "acospif2_native",
    "acospif3",
    "acospif3_native",
    "acospif4",
    "acospif4_native",
    "acospif8",
    "acospif8_native",
    "asin1",
    "asin16",
    "asin16_native",
    "asin1_native",
    "asin2",
    "asin2_native",
    "asin3",
    "asin3_native",
    "asin4",
    "asin4_native",
    "asin8",
    "asin8_native",
    "asinf1",
    "asinf16",
    "asinf16_native",
    "asinf1_native",
    "asinf2",
    "asinf2_native",
    "asinf3",
    "asinf3_native",
    "asinf4",
    "asinf4_native",
    "asinf8",
    "asinf8_native",
    "asinh1",
    "asinh16",
    "asinh16_native",
    "asinh1_native",
    "asinh2",
    "asinh2_native",
    "asinh3",
    "asinh3_native",
    "asinh4",
    "asinh4_native",
    "asinh8",
    "asinh8_native",
    "asinhf1",
    "asinhf16",
    "asinhf16_native",
    "asinhf1_native",
    "asinhf2",
    "asinhf2_native",
    "asinhf3",
    "asinhf3_native",
    "asinhf4",
    "asinhf4_native",
    "asinhf8",
    "asinhf8_native",
    "asinpi1",
    "asinpi16",
    "asinpi16_native",
    "asinpi1_native",
    "asinpi2",
    "asinpi2_native",
    "asinpi3",
    "asinpi3_native",
    "asinpi4",
    "asinpi4_native",
    "asinpi8",
    "asinpi8_native",
    "asinpif1",
    "asinpif16",
    "asinpif16_native",
    "asinpif1_native",
    "asinpif2",
    "asinpif2_native",
    "asinpif3",
    "asinpif3_native",
    "asinpif4",
    "asinpif4_native",
    "asinpif8",
    "asinpif8_native",
    "atan1",
    "atan16",
    "atan16_native",
    "atan1_native",
    "atan2",
    "atan21",
    "atan216",
    "atan216_native",
    "atan21_native",
    "atan22",
    "atan22_native",
    "atan23",
    "atan23_native",
    "atan24",
    "atan24_native",
    "atan28",
    "atan28_native",
    "atan2_native",
    "atan2f1",
    "atan2f16",
    "atan2f16_native",
    "atan2f1_native",
    "atan2f2",
    "atan2f2_native",
    "atan2f3",
    "atan2f3_native",
    "atan2f4",
    "atan2f4_native",
    "atan2f8",
    "atan2f8_native",
    "atan2pi1",
    "atan2pi16",
    "atan2pi16_native",
    "atan2pi1_native",
    "atan2pi2",
    "atan2pi2_native",
    "atan2pi3",
    "atan2pi3_native",
    "atan2pi4",
    "atan2pi4_native",
    "atan2pi8",
    "atan2pi8_native",
    "atan2pif1",
    "atan2pif16",
    "atan2pif16_native",
    "atan2pif1_native",
    "atan2pif2",
    "atan2pif2_native",
    "atan2pif3",
    "atan2pif3_native",
    "atan2pif4",
    "atan2pif4_native",
    "atan2pif8",
    "atan2pif8_native",
    "atan3",
    "atan3_native",
    "atan4",
    "atan4_native",
    "atan8",
    "atan8_native",
    "atanf1",
    "atanf16",
    "atanf16_native",
    "atanf1_native",
    "atanf2",
    "atanf2_native",
    "atanf3",
    "atanf3_native",
    "atanf4",
    "atanf4_native",
    "atanf8",
    "atanf8_native",
    "atanh1",
    "atanh16",
    "atanh16_native",
    "atanh1_native",
    "atanh2",
    "atanh2_native",
    "atanh3",
    "atanh3_native",
    "atanh4",
    "atanh4_native",
    "atanh8",
    "atanh8_native",
    "atanhf1",
    "atanhf16",
    "atanhf16_native",
    "atanhf1_native",
    "atanhf2",
    "atanhf2_native",
    "atanhf3",
    "atanhf3_native",
    "atanhf4",
    "atanhf4_native",
    "atanhf8",
    "atanhf8_native",
    "atanpi1",
    "atanpi16",
    "atanpi16_native",
    "atanpi1_native",
    "atanpi2",
    "atanpi2_native",
    "atanpi3",
    "atanpi3_native",
    "atanpi4",
    "atanpi4_native",
    "atanpi8",
    "atanpi8_native",
    "atanpif1",
    "atanpif16",
    "atanpif16_native",
    "atanpif1_native",
    "atanpif2",
    "atanpif2_native",
    "atanpif3",
    "atanpif3_native",
    "atanpif4",
    "atanpif4_native",
    "atanpif8",
    "atanpif8_native",
    "cbrt1",
    "cbrt16",
    "cbrt16_native",
    "cbrt1_native",
    "cbrt2",
    "cbrt2_native",
    "cbrt3",
    "cbrt3_native",
    "cbrt4",
    "cbrt4_native",
    "cbrt8",
    "cbrt8_native",
    "cbrtf1",
    "cbrtf16",
    "cbrtf16_native",
    "cbrtf1_native",
    "cbrtf2",
    "cbrtf2_native",
    "cbrtf3",
    "cbrtf3_native",
    "cbrtf4",
    "cbrtf4_native",
    "cbrtf8",
    "cbrtf8_native",
    "ceil1",
    "ceil16",
    "ceil2",
    "ceil3",
    "ceil4",
    "ceil8",
    "ceilf1",
    "ceilf16",
    "ceilf2",
    "ceilf3",
    "ceilf4",
    "ceilf8",
    "copysign1",
    "copysign16",
    "copysign2",
    "copysign3",
    "copysign4",
    "copysign8",
    "copysignf1",
    "copysignf16",
    "copysignf2",
    "copysignf3",
    "copysignf4",
    "copysignf8",
    "cos1",
    "cos16",
    "cos16_native",
    "cos1_native",
    "cos2",
    "cos2_native",
    "cos3",
    "cos3_native",
    "cos4",
    "cos4_native",
    "cos8",
    "cos8_native",
    "cosf1",
    "cosf1_native",
    "cosf1_half",
    "cosf16",
    "cosf16_native",
    "cosf16_half",
    "cosf2",
    "cosf2_native",
    "cosf2_half",
    "cosf3",
    "cosf3_native",
    "cosf3_half",
    "cosf4",
    "cosf4_native",
    "cosf4_half",
    "cosf8",
    "cosf8_native",
    "cosf8_half",
    "cosh1",
    "cosh16",
    "cosh16_native",
    "cosh1_native",
    "cosh2",
    "cosh2_native",
    "cosh3",
    "cosh3_native",
    "cosh4",
    "cosh4_native",
    "cosh8",
    "cosh8_native",
    "coshf1",
    "coshf16",
    "coshf16_native",
    "coshf1_native",
    "coshf2",
    "coshf2_native",
    "coshf3",
    "coshf3_native",
    "coshf4",
    "coshf4_native",
    "coshf8",
    "coshf8_native",
    "cospi1",
    "cospi16",
    "cospi16_native",
    "cospi1_native",
    "cospi2",
    "cospi2_native",
    "cospi3",
    "cospi3_native",
    "cospi4",
    "cospi4_native",
    "cospi8",
    "cospi8_native",
    "cospif1",
    "cospif16",
    "cospif16_native",
    "cospif1_native",
    "cospif2",
    "cospif2_native",
    "cospif3",
    "cospif3_native",
    "cospif4",
    "cospif4_native",
    "cospif8",
    "cospif8_native",
    "cvtfp64tofp32"CVT_RTZ"1",
    "cvtfp64tofp32"CVT_RTZ"16",
    "cvtfp64tofp32"CVT_RTZ"2",
    "cvtfp64tofp32"CVT_RTZ"3",
    "cvtfp64tofp32"CVT_RTZ"4",
    "cvtfp64tofp32"CVT_RTZ"8",
    "cvtfp64tofp32"CVT_RTP"1",
    "cvtfp64tofp32"CVT_RTP"16",
    "cvtfp64tofp32"CVT_RTP"2",
    "cvtfp64tofp32"CVT_RTP"3",
    "cvtfp64tofp32"CVT_RTP"4",
    "cvtfp64tofp32"CVT_RTP"8",
    "cvtfp64tofp32"CVT_RTN"1",
    "cvtfp64tofp32"CVT_RTN"16",
    "cvtfp64tofp32"CVT_RTN"2",
    "cvtfp64tofp32"CVT_RTN"3",
    "cvtfp64tofp32"CVT_RTN"4",
    "cvtfp64tofp32"CVT_RTN"8",
    "cvtfp64tofp32"CVT_RTE"1",
    "cvtfp64tofp32"CVT_RTE"16",
    "cvtfp64tofp32"CVT_RTE"2",
    "cvtfp64tofp32"CVT_RTE"3",
    "cvtfp64tofp32"CVT_RTE"4",
    "cvtfp64tofp32"CVT_RTE"8",
    "cvtfptoi32"CVT_RTN"nosat1",
    "cvtfptoi32"CVT_RTN"nosat16",
    "cvtfptoi32"CVT_RTN"nosat2",
    "cvtfptoi32"CVT_RTN"nosat3",
    "cvtfptoi32"CVT_RTN"nosat4",
    "cvtfptoi32"CVT_RTN"nosat8",
    "cvtfptoi32"CVT_RTN"nosatf1",
    "cvtfptoi32"CVT_RTN"nosatf16",
    "cvtfptoi32"CVT_RTN"nosatf2",
    "cvtfptoi32"CVT_RTN"nosatf3",
    "cvtfptoi32"CVT_RTN"nosatf4",
    "cvtfptoi32"CVT_RTN"nosatf8",
    "cvtfptoi32"CVT_RTN"sat1",
    "cvtfptoi32"CVT_RTN"sat16",
    "cvtfptoi32"CVT_RTN"sat2",
    "cvtfptoi32"CVT_RTN"sat3",
    "cvtfptoi32"CVT_RTN"sat4",
    "cvtfptoi32"CVT_RTN"sat8",
    "cvtfptoi32"CVT_RTN"satf1",
    "cvtfptoi32"CVT_RTN"satf16",
    "cvtfptoi32"CVT_RTN"satf2",
    "cvtfptoi32"CVT_RTN"satf3",
    "cvtfptoi32"CVT_RTN"satf4",
    "cvtfptoi32"CVT_RTN"satf8",
    "cvtfptoi32"CVT_RTE"nosat1",
    "cvtfptoi32"CVT_RTE"nosat16",
    "cvtfptoi32"CVT_RTE"nosat2",
    "cvtfptoi32"CVT_RTE"nosat3",
    "cvtfptoi32"CVT_RTE"nosat4",
    "cvtfptoi32"CVT_RTE"nosat8",
    "cvtfptoi32"CVT_RTE"nosatf1",
    "cvtfptoi32"CVT_RTE"nosatf16",
    "cvtfptoi32"CVT_RTE"nosatf2",
    "cvtfptoi32"CVT_RTE"nosatf3",
    "cvtfptoi32"CVT_RTE"nosatf4",
    "cvtfptoi32"CVT_RTE"nosatf8",
    "cvtfptoi32"CVT_RTE"sat1",
    "cvtfptoi32"CVT_RTE"sat16",
    "cvtfptoi32"CVT_RTE"sat2",
    "cvtfptoi32"CVT_RTE"sat3",
    "cvtfptoi32"CVT_RTE"sat4",
    "cvtfptoi32"CVT_RTE"sat8",
    "cvtfptoi32"CVT_RTE"satf1",
    "cvtfptoi32"CVT_RTE"satf16",
    "cvtfptoi32"CVT_RTE"satf2",
    "cvtfptoi32"CVT_RTE"satf3",
    "cvtfptoi32"CVT_RTE"satf4",
    "cvtfptoi32"CVT_RTE"satf8",
    "cvtfptoi32"CVT_RTZ"nosat1",
    "cvtfptoi32"CVT_RTZ"nosat16",
    "cvtfptoi32"CVT_RTZ"nosat2",
    "cvtfptoi32"CVT_RTZ"nosat3",
    "cvtfptoi32"CVT_RTZ"nosat4",
    "cvtfptoi32"CVT_RTZ"nosat8",
    "cvtfptoi32"CVT_RTZ"nosatf1",
    "cvtfptoi32"CVT_RTZ"nosatf16",
    "cvtfptoi32"CVT_RTZ"nosatf2",
    "cvtfptoi32"CVT_RTZ"nosatf3",
    "cvtfptoi32"CVT_RTZ"nosatf4",
    "cvtfptoi32"CVT_RTZ"nosatf8",
    "cvtfptoi32"CVT_RTZ"sat1",
    "cvtfptoi32"CVT_RTZ"sat16",
    "cvtfptoi32"CVT_RTZ"sat2",
    "cvtfptoi32"CVT_RTZ"sat3",
    "cvtfptoi32"CVT_RTZ"sat4",
    "cvtfptoi32"CVT_RTZ"sat8",
    "cvtfptoi32"CVT_RTZ"satf1",
    "cvtfptoi32"CVT_RTZ"satf16",
    "cvtfptoi32"CVT_RTZ"satf2",
    "cvtfptoi32"CVT_RTZ"satf3",
    "cvtfptoi32"CVT_RTZ"satf4",
    "cvtfptoi32"CVT_RTZ"satf8",
    "cvtfptoi32"CVT_RTP"nosat1",
    "cvtfptoi32"CVT_RTP"nosat16",
    "cvtfptoi32"CVT_RTP"nosat2",
    "cvtfptoi32"CVT_RTP"nosat3",
    "cvtfptoi32"CVT_RTP"nosat4",
    "cvtfptoi32"CVT_RTP"nosat8",
    "cvtfptoi32"CVT_RTP"nosatf1",
    "cvtfptoi32"CVT_RTP"nosatf16",
    "cvtfptoi32"CVT_RTP"nosatf2",
    "cvtfptoi32"CVT_RTP"nosatf3",
    "cvtfptoi32"CVT_RTP"nosatf4",
    "cvtfptoi32"CVT_RTP"nosatf8",
    "cvtfptoi32"CVT_RTP"sat1",
    "cvtfptoi32"CVT_RTP"sat16",
    "cvtfptoi32"CVT_RTP"sat2",
    "cvtfptoi32"CVT_RTP"sat3",
    "cvtfptoi32"CVT_RTP"sat4",
    "cvtfptoi32"CVT_RTP"sat8",
    "cvtfptoi32"CVT_RTP"satf1",
    "cvtfptoi32"CVT_RTP"satf16",
    "cvtfptoi32"CVT_RTP"satf2",
    "cvtfptoi32"CVT_RTP"satf3",
    "cvtfptoi32"CVT_RTP"satf4",
    "cvtfptoi32"CVT_RTP"satf8",
    "cvtfptoi64"CVT_RTN"nosat1",
    "cvtfptoi64"CVT_RTN"nosat16",
    "cvtfptoi64"CVT_RTN"nosat2",
    "cvtfptoi64"CVT_RTN"nosat3",
    "cvtfptoi64"CVT_RTN"nosat4",
    "cvtfptoi64"CVT_RTN"nosat8",
    "cvtfptoi64"CVT_RTN"nosatf1",
    "cvtfptoi64"CVT_RTN"nosatf16",
    "cvtfptoi64"CVT_RTN"nosatf2",
    "cvtfptoi64"CVT_RTN"nosatf3",
    "cvtfptoi64"CVT_RTN"nosatf4",
    "cvtfptoi64"CVT_RTN"nosatf8",
    "cvtfptoi64"CVT_RTN"sat1",
    "cvtfptoi64"CVT_RTN"sat16",
    "cvtfptoi64"CVT_RTN"sat2",
    "cvtfptoi64"CVT_RTN"sat3",
    "cvtfptoi64"CVT_RTN"sat4",
    "cvtfptoi64"CVT_RTN"sat8",
    "cvtfptoi64"CVT_RTN"satf1",
    "cvtfptoi64"CVT_RTN"satf16",
    "cvtfptoi64"CVT_RTN"satf2",
    "cvtfptoi64"CVT_RTN"satf3",
    "cvtfptoi64"CVT_RTN"satf4",
    "cvtfptoi64"CVT_RTN"satf8",
    "cvtfptoi64"CVT_RTE"nosat1",
    "cvtfptoi64"CVT_RTE"nosat16",
    "cvtfptoi64"CVT_RTE"nosat2",
    "cvtfptoi64"CVT_RTE"nosat3",
    "cvtfptoi64"CVT_RTE"nosat4",
    "cvtfptoi64"CVT_RTE"nosat8",
    "cvtfptoi64"CVT_RTE"nosatf1",
    "cvtfptoi64"CVT_RTE"nosatf16",
    "cvtfptoi64"CVT_RTE"nosatf2",
    "cvtfptoi64"CVT_RTE"nosatf3",
    "cvtfptoi64"CVT_RTE"nosatf4",
    "cvtfptoi64"CVT_RTE"nosatf8",
    "cvtfptoi64"CVT_RTE"sat1",
    "cvtfptoi64"CVT_RTE"sat16",
    "cvtfptoi64"CVT_RTE"sat2",
    "cvtfptoi64"CVT_RTE"sat3",
    "cvtfptoi64"CVT_RTE"sat4",
    "cvtfptoi64"CVT_RTE"sat8",
    "cvtfptoi64"CVT_RTE"satf1",
    "cvtfptoi64"CVT_RTE"satf16",
    "cvtfptoi64"CVT_RTE"satf2",
    "cvtfptoi64"CVT_RTE"satf3",
    "cvtfptoi64"CVT_RTE"satf4",
    "cvtfptoi64"CVT_RTE"satf8",
    "cvtfptoi64"CVT_RTZ"nosat1",
    "cvtfptoi64"CVT_RTZ"nosat16",
    "cvtfptoi64"CVT_RTZ"nosat2",
    "cvtfptoi64"CVT_RTZ"nosat3",
    "cvtfptoi64"CVT_RTZ"nosat4",
    "cvtfptoi64"CVT_RTZ"nosat8",
    "cvtfptoi64"CVT_RTZ"nosatf1",
    "cvtfptoi64"CVT_RTZ"nosatf16",
    "cvtfptoi64"CVT_RTZ"nosatf2",
    "cvtfptoi64"CVT_RTZ"nosatf3",
    "cvtfptoi64"CVT_RTZ"nosatf4",
    "cvtfptoi64"CVT_RTZ"nosatf8",
    "cvtfptoi64"CVT_RTZ"sat1",
    "cvtfptoi64"CVT_RTZ"sat16",
    "cvtfptoi64"CVT_RTZ"sat2",
    "cvtfptoi64"CVT_RTZ"sat3",
    "cvtfptoi64"CVT_RTZ"sat4",
    "cvtfptoi64"CVT_RTZ"sat8",
    "cvtfptoi64"CVT_RTZ"satf1",
    "cvtfptoi64"CVT_RTZ"satf16",
    "cvtfptoi64"CVT_RTZ"satf2",
    "cvtfptoi64"CVT_RTZ"satf3",
    "cvtfptoi64"CVT_RTZ"satf4",
    "cvtfptoi64"CVT_RTZ"satf8",
    "cvtfptoi64"CVT_RTP"nosat1",
    "cvtfptoi64"CVT_RTP"nosat16",
    "cvtfptoi64"CVT_RTP"nosat2",
    "cvtfptoi64"CVT_RTP"nosat3",
    "cvtfptoi64"CVT_RTP"nosat4",
    "cvtfptoi64"CVT_RTP"nosat8",
    "cvtfptoi64"CVT_RTP"nosatf1",
    "cvtfptoi64"CVT_RTP"nosatf16",
    "cvtfptoi64"CVT_RTP"nosatf2",
    "cvtfptoi64"CVT_RTP"nosatf3",
    "cvtfptoi64"CVT_RTP"nosatf4",
    "cvtfptoi64"CVT_RTP"nosatf8",
    "cvtfptoi64"CVT_RTP"sat1",
    "cvtfptoi64"CVT_RTP"sat16",
    "cvtfptoi64"CVT_RTP"sat2",
    "cvtfptoi64"CVT_RTP"sat3",
    "cvtfptoi64"CVT_RTP"sat4",
    "cvtfptoi64"CVT_RTP"sat8",
    "cvtfptoi64"CVT_RTP"satf1",
    "cvtfptoi64"CVT_RTP"satf16",
    "cvtfptoi64"CVT_RTP"satf2",
    "cvtfptoi64"CVT_RTP"satf3",
    "cvtfptoi64"CVT_RTP"satf4",
    "cvtfptoi64"CVT_RTP"satf8",
    "cvtfptou32"CVT_RTN"nosat1",
    "cvtfptou32"CVT_RTN"nosat16",
    "cvtfptou32"CVT_RTN"nosat2",
    "cvtfptou32"CVT_RTN"nosat3",
    "cvtfptou32"CVT_RTN"nosat4",
    "cvtfptou32"CVT_RTN"nosat8",
    "cvtfptou32"CVT_RTN"nosatf1",
    "cvtfptou32"CVT_RTN"nosatf16",
    "cvtfptou32"CVT_RTN"nosatf2",
    "cvtfptou32"CVT_RTN"nosatf3",
    "cvtfptou32"CVT_RTN"nosatf4",
    "cvtfptou32"CVT_RTN"nosatf8",
    "cvtfptou32"CVT_RTN"sat1",
    "cvtfptou32"CVT_RTN"sat16",
    "cvtfptou32"CVT_RTN"sat2",
    "cvtfptou32"CVT_RTN"sat3",
    "cvtfptou32"CVT_RTN"sat4",
    "cvtfptou32"CVT_RTN"sat8",
    "cvtfptou32"CVT_RTN"satf1",
    "cvtfptou32"CVT_RTN"satf16",
    "cvtfptou32"CVT_RTN"satf2",
    "cvtfptou32"CVT_RTN"satf3",
    "cvtfptou32"CVT_RTN"satf4",
    "cvtfptou32"CVT_RTN"satf8",
    "cvtfptou32"CVT_RTE"nosat1",
    "cvtfptou32"CVT_RTE"nosat16",
    "cvtfptou32"CVT_RTE"nosat2",
    "cvtfptou32"CVT_RTE"nosat3",
    "cvtfptou32"CVT_RTE"nosat4",
    "cvtfptou32"CVT_RTE"nosat8",
    "cvtfptou32"CVT_RTE"nosatf1",
    "cvtfptou32"CVT_RTE"nosatf16",
    "cvtfptou32"CVT_RTE"nosatf2",
    "cvtfptou32"CVT_RTE"nosatf3",
    "cvtfptou32"CVT_RTE"nosatf4",
    "cvtfptou32"CVT_RTE"nosatf8",
    "cvtfptou32"CVT_RTE"sat1",
    "cvtfptou32"CVT_RTE"sat16",
    "cvtfptou32"CVT_RTE"sat2",
    "cvtfptou32"CVT_RTE"sat3",
    "cvtfptou32"CVT_RTE"sat4",
    "cvtfptou32"CVT_RTE"sat8",
    "cvtfptou32"CVT_RTE"satf1",
    "cvtfptou32"CVT_RTE"satf16",
    "cvtfptou32"CVT_RTE"satf2",
    "cvtfptou32"CVT_RTE"satf3",
    "cvtfptou32"CVT_RTE"satf4",
    "cvtfptou32"CVT_RTE"satf8",
    "cvtfptou32"CVT_RTZ"nosat1",
    "cvtfptou32"CVT_RTZ"nosat16",
    "cvtfptou32"CVT_RTZ"nosat2",
    "cvtfptou32"CVT_RTZ"nosat3",
    "cvtfptou32"CVT_RTZ"nosat4",
    "cvtfptou32"CVT_RTZ"nosat8",
    "cvtfptou32"CVT_RTZ"nosatf1",
    "cvtfptou32"CVT_RTZ"nosatf16",
    "cvtfptou32"CVT_RTZ"nosatf2",
    "cvtfptou32"CVT_RTZ"nosatf3",
    "cvtfptou32"CVT_RTZ"nosatf4",
    "cvtfptou32"CVT_RTZ"nosatf8",
    "cvtfptou32"CVT_RTZ"sat1",
    "cvtfptou32"CVT_RTZ"sat16",
    "cvtfptou32"CVT_RTZ"sat2",
    "cvtfptou32"CVT_RTZ"sat3",
    "cvtfptou32"CVT_RTZ"sat4",
    "cvtfptou32"CVT_RTZ"sat8",
    "cvtfptou32"CVT_RTZ"satf1",
    "cvtfptou32"CVT_RTZ"satf16",
    "cvtfptou32"CVT_RTZ"satf2",
    "cvtfptou32"CVT_RTZ"satf3",
    "cvtfptou32"CVT_RTZ"satf4",
    "cvtfptou32"CVT_RTZ"satf8",
    "cvtfptou32"CVT_RTP"nosat1",
    "cvtfptou32"CVT_RTP"nosat16",
    "cvtfptou32"CVT_RTP"nosat2",
    "cvtfptou32"CVT_RTP"nosat3",
    "cvtfptou32"CVT_RTP"nosat4",
    "cvtfptou32"CVT_RTP"nosat8",
    "cvtfptou32"CVT_RTP"nosatf1",
    "cvtfptou32"CVT_RTP"nosatf16",
    "cvtfptou32"CVT_RTP"nosatf2",
    "cvtfptou32"CVT_RTP"nosatf3",
    "cvtfptou32"CVT_RTP"nosatf4",
    "cvtfptou32"CVT_RTP"nosatf8",
    "cvtfptou32"CVT_RTP"sat1",
    "cvtfptou32"CVT_RTP"sat16",
    "cvtfptou32"CVT_RTP"sat2",
    "cvtfptou32"CVT_RTP"sat3",
    "cvtfptou32"CVT_RTP"sat4",
    "cvtfptou32"CVT_RTP"sat8",
    "cvtfptou32"CVT_RTP"satf1",
    "cvtfptou32"CVT_RTP"satf16",
    "cvtfptou32"CVT_RTP"satf2",
    "cvtfptou32"CVT_RTP"satf3",
    "cvtfptou32"CVT_RTP"satf4",
    "cvtfptou32"CVT_RTP"satf8",
    "cvtfptou64"CVT_RTN"nosat1",
    "cvtfptou64"CVT_RTN"nosat16",
    "cvtfptou64"CVT_RTN"nosat2",
    "cvtfptou64"CVT_RTN"nosat3",
    "cvtfptou64"CVT_RTN"nosat4",
    "cvtfptou64"CVT_RTN"nosat8",
    "cvtfptou64"CVT_RTN"nosatf1",
    "cvtfptou64"CVT_RTN"nosatf16",
    "cvtfptou64"CVT_RTN"nosatf2",
    "cvtfptou64"CVT_RTN"nosatf3",
    "cvtfptou64"CVT_RTN"nosatf4",
    "cvtfptou64"CVT_RTN"nosatf8",
    "cvtfptou64"CVT_RTN"sat1",
    "cvtfptou64"CVT_RTN"sat16",
    "cvtfptou64"CVT_RTN"sat2",
    "cvtfptou64"CVT_RTN"sat3",
    "cvtfptou64"CVT_RTN"sat4",
    "cvtfptou64"CVT_RTN"sat8",
    "cvtfptou64"CVT_RTN"satf1",
    "cvtfptou64"CVT_RTN"satf16",
    "cvtfptou64"CVT_RTN"satf2",
    "cvtfptou64"CVT_RTN"satf3",
    "cvtfptou64"CVT_RTN"satf4",
    "cvtfptou64"CVT_RTN"satf8",
    "cvtfptou64"CVT_RTE"nosat1",
    "cvtfptou64"CVT_RTE"nosat16",
    "cvtfptou64"CVT_RTE"nosat2",
    "cvtfptou64"CVT_RTE"nosat3",
    "cvtfptou64"CVT_RTE"nosat4",
    "cvtfptou64"CVT_RTE"nosat8",
    "cvtfptou64"CVT_RTE"nosatf1",
    "cvtfptou64"CVT_RTE"nosatf16",
    "cvtfptou64"CVT_RTE"nosatf2",
    "cvtfptou64"CVT_RTE"nosatf3",
    "cvtfptou64"CVT_RTE"nosatf4",
    "cvtfptou64"CVT_RTE"nosatf8",
    "cvtfptou64"CVT_RTE"sat1",
    "cvtfptou64"CVT_RTE"sat16",
    "cvtfptou64"CVT_RTE"sat2",
    "cvtfptou64"CVT_RTE"sat3",
    "cvtfptou64"CVT_RTE"sat4",
    "cvtfptou64"CVT_RTE"sat8",
    "cvtfptou64"CVT_RTE"satf1",
    "cvtfptou64"CVT_RTE"satf16",
    "cvtfptou64"CVT_RTE"satf2",
    "cvtfptou64"CVT_RTE"satf3",
    "cvtfptou64"CVT_RTE"satf4",
    "cvtfptou64"CVT_RTE"satf8",
    "cvtfptou64"CVT_RTZ"nosat1",
    "cvtfptou64"CVT_RTZ"nosat16",
    "cvtfptou64"CVT_RTZ"nosat2",
    "cvtfptou64"CVT_RTZ"nosat3",
    "cvtfptou64"CVT_RTZ"nosat4",
    "cvtfptou64"CVT_RTZ"nosat8",
    "cvtfptou64"CVT_RTZ"nosatf1",
    "cvtfptou64"CVT_RTZ"nosatf16",
    "cvtfptou64"CVT_RTZ"nosatf2",
    "cvtfptou64"CVT_RTZ"nosatf3",
    "cvtfptou64"CVT_RTZ"nosatf4",
    "cvtfptou64"CVT_RTZ"nosatf8",
    "cvtfptou64"CVT_RTZ"sat1",
    "cvtfptou64"CVT_RTZ"sat16",
    "cvtfptou64"CVT_RTZ"sat2",
    "cvtfptou64"CVT_RTZ"sat3",
    "cvtfptou64"CVT_RTZ"sat4",
    "cvtfptou64"CVT_RTZ"sat8",
    "cvtfptou64"CVT_RTZ"satf1",
    "cvtfptou64"CVT_RTZ"satf16",
    "cvtfptou64"CVT_RTZ"satf2",
    "cvtfptou64"CVT_RTZ"satf3",
    "cvtfptou64"CVT_RTZ"satf4",
    "cvtfptou64"CVT_RTZ"satf8",
    "cvtfptou64"CVT_RTP"nosat1",
    "cvtfptou64"CVT_RTP"nosat16",
    "cvtfptou64"CVT_RTP"nosat2",
    "cvtfptou64"CVT_RTP"nosat3",
    "cvtfptou64"CVT_RTP"nosat4",
    "cvtfptou64"CVT_RTP"nosat8",
    "cvtfptou64"CVT_RTP"nosatf1",
    "cvtfptou64"CVT_RTP"nosatf16",
    "cvtfptou64"CVT_RTP"nosatf2",
    "cvtfptou64"CVT_RTP"nosatf3",
    "cvtfptou64"CVT_RTP"nosatf4",
    "cvtfptou64"CVT_RTP"nosatf8",
    "cvtfptou64"CVT_RTP"sat1",
    "cvtfptou64"CVT_RTP"sat16",
    "cvtfptou64"CVT_RTP"sat2",
    "cvtfptou64"CVT_RTP"sat3",
    "cvtfptou64"CVT_RTP"sat4",
    "cvtfptou64"CVT_RTP"sat8",
    "cvtfptou64"CVT_RTP"satf1",
    "cvtfptou64"CVT_RTP"satf16",
    "cvtfptou64"CVT_RTP"satf2",
    "cvtfptou64"CVT_RTP"satf3",
    "cvtfptou64"CVT_RTP"satf4",
    "cvtfptou64"CVT_RTP"satf8",
    "cvti32tofp"CVT_RTN"1",
    "cvti32tofp"CVT_RTN"16",
    "cvti32tofp"CVT_RTN"2",
    "cvti32tofp"CVT_RTN"3",
    "cvti32tofp"CVT_RTN"4",
    "cvti32tofp"CVT_RTN"8",
    "cvti32tofp"CVT_RTN"f1",
    "cvti32tofp"CVT_RTN"f16",
    "cvti32tofp"CVT_RTN"f2",
    "cvti32tofp"CVT_RTN"f3",
    "cvti32tofp"CVT_RTN"f4",
    "cvti32tofp"CVT_RTN"f8",
    "cvti32tofp"CVT_RTE"1",
    "cvti32tofp"CVT_RTE"16",
    "cvti32tofp"CVT_RTE"2",
    "cvti32tofp"CVT_RTE"3",
    "cvti32tofp"CVT_RTE"4",
    "cvti32tofp"CVT_RTE"8",
    "cvti32tofp"CVT_RTE"f1",
    "cvti32tofp"CVT_RTE"f16",
    "cvti32tofp"CVT_RTE"f2",
    "cvti32tofp"CVT_RTE"f3",
    "cvti32tofp"CVT_RTE"f4",
    "cvti32tofp"CVT_RTE"f8",
    "cvti32tofp"CVT_RTZ"1",
    "cvti32tofp"CVT_RTZ"16",
    "cvti32tofp"CVT_RTZ"2",
    "cvti32tofp"CVT_RTZ"3",
    "cvti32tofp"CVT_RTZ"4",
    "cvti32tofp"CVT_RTZ"8",
    "cvti32tofp"CVT_RTZ"f1",
    "cvti32tofp"CVT_RTZ"f16",
    "cvti32tofp"CVT_RTZ"f2",
    "cvti32tofp"CVT_RTZ"f3",
    "cvti32tofp"CVT_RTZ"f4",
    "cvti32tofp"CVT_RTZ"f8",
    "cvti32tofp"CVT_RTP"1",
    "cvti32tofp"CVT_RTP"16",
    "cvti32tofp"CVT_RTP"2",
    "cvti32tofp"CVT_RTP"3",
    "cvti32tofp"CVT_RTP"4",
    "cvti32tofp"CVT_RTP"8",
    "cvti32tofp"CVT_RTP"f1",
    "cvti32tofp"CVT_RTP"f16",
    "cvti32tofp"CVT_RTP"f2",
    "cvti32tofp"CVT_RTP"f3",
    "cvti32tofp"CVT_RTP"f4",
    "cvti32tofp"CVT_RTP"f8",
    "cvti64tofp"CVT_RTN"1",
    "cvti64tofp"CVT_RTN"16",
    "cvti64tofp"CVT_RTN"2",
    "cvti64tofp"CVT_RTN"3",
    "cvti64tofp"CVT_RTN"4",
    "cvti64tofp"CVT_RTN"8",
    "cvti64tofp"CVT_RTN"f1",
    "cvti64tofp"CVT_RTN"f16",
    "cvti64tofp"CVT_RTN"f2",
    "cvti64tofp"CVT_RTN"f3",
    "cvti64tofp"CVT_RTN"f4",
    "cvti64tofp"CVT_RTN"f8",
    "cvti64tofp"CVT_RTE"1",
    "cvti64tofp"CVT_RTE"16",
    "cvti64tofp"CVT_RTE"2",
    "cvti64tofp"CVT_RTE"3",
    "cvti64tofp"CVT_RTE"4",
    "cvti64tofp"CVT_RTE"8",
    "cvti64tofp"CVT_RTE"f1",
    "cvti64tofp"CVT_RTE"f16",
    "cvti64tofp"CVT_RTE"f2",
    "cvti64tofp"CVT_RTE"f3",
    "cvti64tofp"CVT_RTE"f4",
    "cvti64tofp"CVT_RTE"f8",
    "cvti64tofp"CVT_RTZ"1",
    "cvti64tofp"CVT_RTZ"16",
    "cvti64tofp"CVT_RTZ"2",
    "cvti64tofp"CVT_RTZ"3",
    "cvti64tofp"CVT_RTZ"4",
    "cvti64tofp"CVT_RTZ"8",
    "cvti64tofp"CVT_RTZ"f1",
    "cvti64tofp"CVT_RTZ"f16",
    "cvti64tofp"CVT_RTZ"f2",
    "cvti64tofp"CVT_RTZ"f3",
    "cvti64tofp"CVT_RTZ"f4",
    "cvti64tofp"CVT_RTZ"f8",
    "cvti64tofp"CVT_RTP"1",
    "cvti64tofp"CVT_RTP"16",
    "cvti64tofp"CVT_RTP"2",
    "cvti64tofp"CVT_RTP"3",
    "cvti64tofp"CVT_RTP"4",
    "cvti64tofp"CVT_RTP"8",
    "cvti64tofp"CVT_RTP"f1",
    "cvti64tofp"CVT_RTP"f16",
    "cvti64tofp"CVT_RTP"f2",
    "cvti64tofp"CVT_RTP"f3",
    "cvti64tofp"CVT_RTP"f4",
    "cvti64tofp"CVT_RTP"f8",
    "cvtu32tofp"CVT_RTN"1",
    "cvtu32tofp"CVT_RTN"16",
    "cvtu32tofp"CVT_RTN"2",
    "cvtu32tofp"CVT_RTN"3",
    "cvtu32tofp"CVT_RTN"4",
    "cvtu32tofp"CVT_RTN"8",
    "cvtu32tofp"CVT_RTN"f1",
    "cvtu32tofp"CVT_RTN"f16",
    "cvtu32tofp"CVT_RTN"f2",
    "cvtu32tofp"CVT_RTN"f3",
    "cvtu32tofp"CVT_RTN"f4",
    "cvtu32tofp"CVT_RTN"f8",
    "cvtu32tofp"CVT_RTE"1",
    "cvtu32tofp"CVT_RTE"16",
    "cvtu32tofp"CVT_RTE"2",
    "cvtu32tofp"CVT_RTE"3",
    "cvtu32tofp"CVT_RTE"4",
    "cvtu32tofp"CVT_RTE"8",
    "cvtu32tofp"CVT_RTE"f1",
    "cvtu32tofp"CVT_RTE"f16",
    "cvtu32tofp"CVT_RTE"f2",
    "cvtu32tofp"CVT_RTE"f3",
    "cvtu32tofp"CVT_RTE"f4",
    "cvtu32tofp"CVT_RTE"f8",
    "cvtu32tofp"CVT_RTZ"1",
    "cvtu32tofp"CVT_RTZ"16",
    "cvtu32tofp"CVT_RTZ"2",
    "cvtu32tofp"CVT_RTZ"3",
    "cvtu32tofp"CVT_RTZ"4",
    "cvtu32tofp"CVT_RTZ"8",
    "cvtu32tofp"CVT_RTZ"f1",
    "cvtu32tofp"CVT_RTZ"f16",
    "cvtu32tofp"CVT_RTZ"f2",
    "cvtu32tofp"CVT_RTZ"f3",
    "cvtu32tofp"CVT_RTZ"f4",
    "cvtu32tofp"CVT_RTZ"f8",
    "cvtu32tofp"CVT_RTP"1",
    "cvtu32tofp"CVT_RTP"16",
    "cvtu32tofp"CVT_RTP"2",
    "cvtu32tofp"CVT_RTP"3",
    "cvtu32tofp"CVT_RTP"4",
    "cvtu32tofp"CVT_RTP"8",
    "cvtu32tofp"CVT_RTP"f1",
    "cvtu32tofp"CVT_RTP"f16",
    "cvtu32tofp"CVT_RTP"f2",
    "cvtu32tofp"CVT_RTP"f3",
    "cvtu32tofp"CVT_RTP"f4",
    "cvtu32tofp"CVT_RTP"f8",
    "cvtu64tofp"CVT_RTN"1",
    "cvtu64tofp"CVT_RTN"16",
    "cvtu64tofp"CVT_RTN"2",
    "cvtu64tofp"CVT_RTN"3",
    "cvtu64tofp"CVT_RTN"4",
    "cvtu64tofp"CVT_RTN"8",
    "cvtu64tofp"CVT_RTN"f1",
    "cvtu64tofp"CVT_RTN"f16",
    "cvtu64tofp"CVT_RTN"f2",
    "cvtu64tofp"CVT_RTN"f3",
    "cvtu64tofp"CVT_RTN"f4",
    "cvtu64tofp"CVT_RTN"f8",
    "cvtu64tofp"CVT_RTE"1",
    "cvtu64tofp"CVT_RTE"16",
    "cvtu64tofp"CVT_RTE"2",
    "cvtu64tofp"CVT_RTE"3",
    "cvtu64tofp"CVT_RTE"4",
    "cvtu64tofp"CVT_RTE"8",
    "cvtu64tofp"CVT_RTE"f1",
    "cvtu64tofp"CVT_RTE"f16",
    "cvtu64tofp"CVT_RTE"f2",
    "cvtu64tofp"CVT_RTE"f3",
    "cvtu64tofp"CVT_RTE"f4",
    "cvtu64tofp"CVT_RTE"f8",
    "cvtu64tofp"CVT_RTZ"1",
    "cvtu64tofp"CVT_RTZ"16",
    "cvtu64tofp"CVT_RTZ"2",
    "cvtu64tofp"CVT_RTZ"3",
    "cvtu64tofp"CVT_RTZ"4",
    "cvtu64tofp"CVT_RTZ"8",
    "cvtu64tofp"CVT_RTZ"f1",
    "cvtu64tofp"CVT_RTZ"f16",
    "cvtu64tofp"CVT_RTZ"f2",
    "cvtu64tofp"CVT_RTZ"f3",
    "cvtu64tofp"CVT_RTZ"f4",
    "cvtu64tofp"CVT_RTZ"f8",
    "cvtu64tofp"CVT_RTP"1",
    "cvtu64tofp"CVT_RTP"16",
    "cvtu64tofp"CVT_RTP"2",
    "cvtu64tofp"CVT_RTP"3",
    "cvtu64tofp"CVT_RTP"4",
    "cvtu64tofp"CVT_RTP"8",
    "cvtu64tofp"CVT_RTP"f1",
    "cvtu64tofp"CVT_RTP"f16",
    "cvtu64tofp"CVT_RTP"f2",
    "cvtu64tofp"CVT_RTP"f3",
    "cvtu64tofp"CVT_RTP"f4",
    "cvtu64tofp"CVT_RTP"f8",
    "div1",
    "div16",
    "div16_native",
    "div1_native",
    "div2",
    "div2_native",
    "div3",
    "div3_native",
    "div4",
    "div4_native",
    "div8",
    "div8_native",
    "divf1",
    "divf1_native",
    "divf1_half",
    "divf16",
    "divf16_native",
    "divf16_half",
    "divf2",
    "divf2_native",
    "divf2_half",
    "divf3",
    "divf3_native",
    "divf3_half",
    "divf4",
    "divf4_native",
    "divf4_half",
    "divf8",
    "divf8_native",
    "divf8_half",
    "erf1",
    "erf16",
    "erf16_native",
    "erf1_native",
    "erf2",
    "erf2_native",
    "erf3",
    "erf3_native",
    "erf4",
    "erf4_native",
    "erf8",
    "erf8_native",
    "erfc1",
    "erfc16",
    "erfc16_native",
    "erfc1_native",
    "erfc2",
    "erfc2_native",
    "erfc3",
    "erfc3_native",
    "erfc4",
    "erfc4_native",
    "erfc8",
    "erfc8_native",
    "erfcf1",
    "erfcf16",
    "erfcf16_native",
    "erfcf1_native",
    "erfcf2",
    "erfcf2_native",
    "erfcf3",
    "erfcf3_native",
    "erfcf4",
    "erfcf4_native",
    "erfcf8",
    "erfcf8_native",
    "erff1",
    "erff16",
    "erff16_native",
    "erff1_native",
    "erff2",
    "erff2_native",
    "erff3",
    "erff3_native",
    "erff4",
    "erff4_native",
    "erff8",
    "erff8_native",
    "exp1",
    "exp101",
    "exp1016",
    "exp1016_native",
    "exp101_native",
    "exp102",
    "exp102_native",
    "exp103",
    "exp103_native",
    "exp104",
    "exp104_native",
    "exp108",
    "exp108_native",
    "exp10f1",
    "exp10f1_native",
    "exp10f1_half",
    "exp10f16",
    "exp10f16_native",
    "exp10f16_half",
    "exp10f2",
    "exp10f2_native",
    "exp10f2_half",
    "exp10f3",
    "exp10f3_native",
    "exp10f3_half",
    "exp10f4",
    "exp10f4_native",
    "exp10f4_half",
    "exp10f8",
    "exp10f8_native",
    "exp10f8_half",
    "exp16",
    "exp16_native",
    "exp1_native",
    "exp2",
    "exp21",
    "exp216",
    "exp216_native",
    "exp21_native",
    "exp22",
    "exp22_native",
    "exp23",
    "exp23_native",
    "exp24",
    "exp24_native",
    "exp28",
    "exp28_native",
    "exp2_native",
    "exp2f1",
    "exp2f1_native",
    "exp2f1_half",
    "exp2f16",
    "exp2f16_native",
    "exp2f16_half",
    "exp2f2",
    "exp2f2_native",
    "exp2f2_half",
    "exp2f3",
    "exp2f3_native",
    "exp2f3_half",
    "exp2f4",
    "exp2f4_native",
    "exp2f4_half",
    "exp2f8",
    "exp2f8_native",
    "exp2f8_half",
    "exp3",
    "exp3_native",
    "exp4",
    "exp4_native",
    "exp8",
    "exp8_native",
    "expf1",
    "expf1_native",
    "expf1_half",
    "expf16",
    "expf16_native",
    "expf16_half",
    "expf2",
    "expf2_native",
    "expf2_half",
    "expf3",
    "expf3_native",
    "expf3_half",
    "expf4",
    "expf4_native",
    "expf4_half",
    "expf8",
    "expf8_native",
    "expf8_half",
    "expm11",
    "expm116",
    "expm116_native",
    "expm11_native",
    "expm12",
    "expm12_native",
    "expm13",
    "expm13_native",
    "expm14",
    "expm14_native",
    "expm18",
    "expm18_native",
    "expm1f1",
    "expm1f16",
    "expm1f16_native",
    "expm1f1_native",
    "expm1f2",
    "expm1f2_native",
    "expm1f3",
    "expm1f3_native",
    "expm1f4",
    "expm1f4_native",
    "expm1f8",
    "expm1f8_native",
    "fabs1",
    "fabs16",
    "fabs2",
    "fabs3",
    "fabs4",
    "fabs8",
    "fabsf1",
    "fabsf16",
    "fabsf2",
    "fabsf3",
    "fabsf4",
    "fabsf8",
    "fdim1",
    "fdim16",
    "fdim2",
    "fdim3",
    "fdim4",
    "fdim8",
    "fdimf1",
    "fdimf16",
    "fdimf2",
    "fdimf3",
    "fdimf4",
    "fdimf8",
    "floor1",
    "floor16",
    "floor2",
    "floor3",
    "floor4",
    "floor8",
    "floorf1",
    "floorf16",
    "floorf2",
    "floorf3",
    "floorf4",
    "floorf8",
    "fma1",
    "fma16",
    "fma2",
    "fma3",
    "fma4",
    "fma8",
    "fmaf1",
    "fmaf16",
    "fmaf2",
    "fmaf3",
    "fmaf4",
    "fmaf8",
    "fmax1",
    "fmax16",
    "fmax2",
    "fmax3",
    "fmax4",
    "fmax8",
    "fmaxf1",
    "fmaxf16",
    "fmaxf2",
    "fmaxf3",
    "fmaxf4",
    "fmaxf8",
    "fmin1",
    "fmin16",
    "fmin2",
    "fmin3",
    "fmin4",
    "fmin8",
    "fminf1",
    "fminf16",
    "fminf2",
    "fminf3",
    "fminf4",
    "fminf8",
    "fmod1",
    "fmod16",
    "fmod2",
    "fmod3",
    "fmod4",
    "fmod8",
    "fmodf1",
    "fmodf16",
    "fmodf2",
    "fmodf3",
    "fmodf4",
    "fmodf8",
    "fract1",
    "fract16",
    "fract2",
    "fract3",
    "fract4",
    "fract8",
    "fractf1",
    "fractf16",
    "fractf2",
    "fractf3",
    "fractf4",
    "fractf8",
    "frexp1",
    "frexp16",
    "frexp2",
    "frexp3",
    "frexp4",
    "frexp8",
    "frexpf1",
    "frexpf16",
    "frexpf2",
    "frexpf3",
    "frexpf4",
    "frexpf8",
    "hypot1",
    "hypot16",
    "hypot16_native",
    "hypot1_native",
    "hypot2",
    "hypot2_native",
    "hypot3",
    "hypot3_native",
    "hypot4",
    "hypot4_native",
    "hypot8",
    "hypot8_native",
    "hypotf1",
    "hypotf16",
    "hypotf16_native",
    "hypotf1_native",
    "hypotf2",
    "hypotf2_native",
    "hypotf3",
    "hypotf3_native",
    "hypotf4",
    "hypotf4_native",
    "hypotf8",
    "hypotf8_native",
    "ilogb1",
    "ilogb16",
    "ilogb2",
    "ilogb3",
    "ilogb4",
    "ilogb8",
    "ilogbf1",
    "ilogbf16",
    "ilogbf2",
    "ilogbf3",
    "ilogbf4",
    "ilogbf8",
    "inv1",
    "inv16",
    "inv16_native",
    "inv1_native",
    "inv2",
    "inv2_native",
    "inv3",
    "inv3_native",
    "inv4",
    "inv4_native",
    "inv8",
    "inv8_native",
    "invf1",
    "invf1_native",
    "invf1_half",
    "invf16",
    "invf16_native",
    "invf16_half",
    "invf2",
    "invf2_native",
    "invf2_half",
    "invf3",
    "invf3_native",
    "invf3_half",
    "invf4",
    "invf4_native",
    "invf4_half",
    "invf8",
    "invf8_native",
    "invf8_half",
    "ldexp1",
    "ldexp16",
    "ldexp2",
    "ldexp3",
    "ldexp4",
    "ldexp8",
    "ldexpf1",
    "ldexpf16",
    "ldexpf2",
    "ldexpf3",
    "ldexpf4",
    "ldexpf8",
    "lgamma1",
    "lgamma16",
    "lgamma2",
    "lgamma3",
    "lgamma4",
    "lgamma8",
    "lgammaf1",
    "lgammaf16",
    "lgammaf2",
    "lgammaf3",
    "lgammaf4",
    "lgammaf8",
    "lgammar1",
    "lgammar16",
    "lgammar2",
    "lgammar3",
    "lgammar4",
    "lgammar8",
    "lgammarf1",
    "lgammarf16",
    "lgammarf2",
    "lgammarf3",
    "lgammarf4",
    "lgammarf8",
    "log1",
    "log101",
    "log1016",
    "log1016_native",
    "log101_native",
    "log102",
    "log102_native",
    "log103",
    "log103_native",
    "log104",
    "log104_native",
    "log108",
    "log108_native",
    "log10f1",
    "log10f1_native",
    "log10f1_half",
    "log10f16",
    "log10f16_native",
    "log10f16_half",
    "log10f2",
    "log10f2_native",
    "log10f2_half",
    "log10f3",
    "log10f3_native",
    "log10f3_half",
    "log10f4",
    "log10f4_native",
    "log10f4_half",
    "log10f8",
    "log10f8_native",
    "log10f8_half",
    "log16",
    "log16_native",
    "log1_native",
    "log1p1",
    "log1p16",
    "log1p16_native",
    "log1p1_native",
    "log1p2",
    "log1p2_native",
    "log1p3",
    "log1p3_native",
    "log1p4",
    "log1p4_native",
    "log1p8",
    "log1p8_native",
    "log1pf1",
    "log1pf16",
    "log1pf16_native",
    "log1pf1_native",
    "log1pf2",
    "log1pf2_native",
    "log1pf3",
    "log1pf3_native",
    "log1pf4",
    "log1pf4_native",
    "log1pf8",
    "log1pf8_native",
    "log2",
    "log21",
    "log216",
    "log216_native",
    "log21_native",
    "log22",
    "log22_native",
    "log23",
    "log23_native",
    "log24",
    "log24_native",
    "log28",
    "log28_native",
    "log2_native",
    "log2f1",
    "log2f1_native",
    "log2f1_half",
    "log2f16",
    "log2f16_native",
    "log2f16_half",
    "log2f2",
    "log2f2_native",
    "log2f2_half",
    "log2f3",
    "log2f3_native",
    "log2f3_half",
    "log2f4",
    "log2f4_native",
    "log2f4_half",
    "log2f8",
    "log2f8_native",
    "log2f8_half",
    "log3",
    "log3_native",
    "log4",
    "log4_native",
    "log8",
    "log8_native",
    "logb1",
    "logb16",
    "logb2",
    "logb3",
    "logb4",
    "logb8",
    "logbf1",
    "logbf16",
    "logbf2",
    "logbf3",
    "logbf4",
    "logbf8",
    "logf1",
    "logf1_native",
    "logf1_half",
    "logf16",
    "logf16_native",
    "logf16_half",
    "logf2",
    "logf2_native",
    "logf2_half",
    "logf3",
    "logf3_native",
    "logf3_half",
    "logf4",
    "logf4_native",
    "logf4_half",
    "logf8",
    "logf8_native",
    "logf8_half",
    "mad1",
    "mad16",
    "mad2",
    "mad3",
    "mad4",
    "mad8",
    "madf1",
    "madf16",
    "madf2",
    "madf3",
    "madf4",
    "madf8",
    "maxmag1",
    "maxmag16",
    "maxmag2",
    "maxmag3",
    "maxmag4",
    "maxmag8",
    "maxmagf1",
    "maxmagf16",
    "maxmagf2",
    "maxmagf3",
    "maxmagf4",
    "maxmagf8",
    "minmag1",
    "minmag16",
    "minmag2",
    "minmag3",
    "minmag4",
    "minmag8",
    "minmagf1",
    "minmagf16",
    "minmagf2",
    "minmagf3",
    "minmagf4",
    "minmagf8",
    "modf1",
    "modf16",
    "modf2",
    "modf3",
    "modf4",
    "modf8",
    "modff1",
    "modff16",
    "modff2",
    "modff3",
    "modff4",
    "modff8",
    "nan1",
    "nan16",
    "nan2",
    "nan3",
    "nan4",
    "nan8",
    "nanf1",
    "nanf16",
    "nanf2",
    "nanf3",
    "nanf4",
    "nanf8",
    "nearbyint1",
    "nearbyint16",
    "nearbyint2",
    "nearbyint3",
    "nearbyint4",
    "nearbyint8",
    "nearbyintf1",
    "nearbyintf16",
    "nearbyintf2",
    "nearbyintf3",
    "nearbyintf4",
    "nearbyintf8",
    "nextafter1",
    "nextafter16",
    "nextafter2",
    "nextafter3",
    "nextafter4",
    "nextafter8",
    "nextafterf1",
    "nextafterf16",
    "nextafterf2",
    "nextafterf3",
    "nextafterf4",
    "nextafterf8",
    "pow1",
    "pow16",
    "pow16_native",
    "pow1_native",
    "pow2",
    "pow2_native",
    "pow3",
    "pow3_native",
    "pow4",
    "pow4_native",
    "pow8",
    "pow8_native",
    "powf1",
    "powf16",
    "powf16_native",
    "powf1_native",
    "powf2",
    "powf2_native",
    "powf3",
    "powf3_native",
    "powf4",
    "powf4_native",
    "powf8",
    "powf8_native",
    "pown1",
    "pown16",
    "pown16_native",
    "pown1_native",
    "pown2",
    "pown2_native",
    "pown3",
    "pown3_native",
    "pown4",
    "pown4_native",
    "pown8",
    "pown8_native",
    "pownf1",
    "pownf16",
    "pownf16_native",
    "pownf1_native",
    "pownf2",
    "pownf2_native",
    "pownf3",
    "pownf3_native",
    "pownf4",
    "pownf4_native",
    "pownf8",
    "pownf8_native",
    "powr1",
    "powr16",
    "powr16_native",
    "powr1_native",
    "powr2",
    "powr2_native",
    "powr3",
    "powr3_native",
    "powr4",
    "powr4_native",
    "powr8",
    "powr8_native",
    "powrf1",
    "powrf1_native",
    "powrf1_half",
    "powrf16",
    "powrf16_native",
    "powrf16_half",
    "powrf2",
    "powrf2_native",
    "powrf2_half",
    "powrf3",
    "powrf3_native",
    "powrf3_half",
    "powrf4",
    "powrf4_native",
    "powrf4_half",
    "powrf8",
    "powrf8_native",
    "powrf8_half",
    "rcbrt1",
    "rcbrt16",
    "rcbrt16_native",
    "rcbrt1_native",
    "rcbrt2",
    "rcbrt2_native",
    "rcbrt3",
    "rcbrt3_native",
    "rcbrt4",
    "rcbrt4_native",
    "rcbrt8",
    "rcbrt8_native",
    "rcbrtf1",
    "rcbrtf16",
    "rcbrtf16_native",
    "rcbrtf1_native",
    "rcbrtf2",
    "rcbrtf2_native",
    "rcbrtf3",
    "rcbrtf3_native",
    "rcbrtf4",
    "rcbrtf4_native",
    "rcbrtf8",
    "rcbrtf8_native",
    "remainder1",
    "remainder16",
    "remainder2",
    "remainder3",
    "remainder4",
    "remainder8",
    "remainderf1",
    "remainderf16",
    "remainderf2",
    "remainderf3",
    "remainderf4",
    "remainderf8",
    "remquo1",
    "remquo16",
    "remquo2",
    "remquo3",
    "remquo4",
    "remquo8",
    "remquof1",
    "remquof16",
    "remquof2",
    "remquof3",
    "remquof4",
    "remquof8",
    "rint1",
    "rint16",
    "rint2",
    "rint3",
    "rint4",
    "rint8",
    "rintf1",
    "rintf16",
    "rintf2",
    "rintf3",
    "rintf4",
    "rintf8",
    "rootn1",
    "rootn16",
    "rootn16_native",
    "rootn1_native",
    "rootn2",
    "rootn2_native",
    "rootn3",
    "rootn3_native",
    "rootn4",
    "rootn4_native",
    "rootn8",
    "rootn8_native",
    "rootnf1",
    "rootnf16",
    "rootnf16_native",
    "rootnf1_native",
    "rootnf2",
    "rootnf2_native",
    "rootnf3",
    "rootnf3_native",
    "rootnf4",
    "rootnf4_native",
    "rootnf8",
    "rootnf8_native",
    "round1",
    "round16",
    "round2",
    "round3",
    "round4",
    "round8",
    "roundf1",
    "roundf16",
    "roundf2",
    "roundf3",
    "roundf4",
    "roundf8",
    "rsqrt1",
    "rsqrt16",
    "rsqrt16_native",
    "rsqrt1_native",
    "rsqrt2",
    "rsqrt2_native",
    "rsqrt3",
    "rsqrt3_native",
    "rsqrt4",
    "rsqrt4_native",
    "rsqrt8",
    "rsqrt8_native",
    "rsqrtf1",
    "rsqrtf1_native",
    "rsqrtf1_half",
    "rsqrtf16",
    "rsqrtf16_native",
    "rsqrtf16_half",
    "rsqrtf2",
    "rsqrtf2_native",
    "rsqrtf2_half",
    "rsqrtf3",
    "rsqrtf3_native",
    "rsqrtf3_half",
    "rsqrtf4",
    "rsqrtf4_native",
    "rsqrtf4_half",
    "rsqrtf8",
    "rsqrtf8_native",
    "rsqrtf8_half",
    "sin1",
    "sin16",
    "sin16_native",
    "sin1_native",
    "sin2",
    "sin2_native",
    "sin3",
    "sin3_native",
    "sin4",
    "sin4_native",
    "sin8",
    "sin8_native",
    "sincos1",
    "sincos16",
    "sincos16_native",
    "sincos1_native",
    "sincos2",
    "sincos2_native",
    "sincos3",
    "sincos3_native",
    "sincos4",
    "sincos4_native",
    "sincos8",
    "sincos8_native",
    "sincosf1",
    "sincosf16",
    "sincosf16_native",
    "sincosf1_native",
    "sincosf2",
    "sincosf2_native",
    "sincosf3",
    "sincosf3_native",
    "sincosf4",
    "sincosf4_native",
    "sincosf8",
    "sincosf8_native",
    "sincosreg1",
    "sincosreg16",
    "sincosreg16_native",
    "sincosreg1_native",
    "sincosreg2",
    "sincosreg2_native",
    "sincosreg3",
    "sincosreg3_native",
    "sincosreg4",
    "sincosreg4_native",
    "sincosreg8",
    "sincosreg8_native",
    "sincosregf1",
    "sincosregf16",
    "sincosregf16_native",
    "sincosregf1_native",
    "sincosregf2",
    "sincosregf2_native",
    "sincosregf3",
    "sincosregf3_native",
    "sincosregf4",
    "sincosregf4_native",
    "sincosregf8",
    "sincosregf8_native",
    "sinf1",
    "sinf1_native",
    "sinf1_half",
    "sinf16",
    "sinf16_native",
    "sinf16_half",
    "sinf2",
    "sinf2_native",
    "sinf2_half",
    "sinf3",
    "sinf3_native",
    "sinf3_half",
    "sinf4",
    "sinf4_native",
    "sinf4_half",
    "sinf8",
    "sinf8_native",
    "sinf8_half",
    "sinh1",
    "sinh16",
    "sinh16_native",
    "sinh1_native",
    "sinh2",
    "sinh2_native",
    "sinh3",
    "sinh3_native",
    "sinh4",
    "sinh4_native",
    "sinh8",
    "sinh8_native",
    "sinhf1",
    "sinhf16",
    "sinhf16_native",
    "sinhf1_native",
    "sinhf2",
    "sinhf2_native",
    "sinhf3",
    "sinhf3_native",
    "sinhf4",
    "sinhf4_native",
    "sinhf8",
    "sinhf8_native",
    "sinpi1",
    "sinpi16",
    "sinpi16_native",
    "sinpi1_native",
    "sinpi2",
    "sinpi2_native",
    "sinpi3",
    "sinpi3_native",
    "sinpi4",
    "sinpi4_native",
    "sinpi8",
    "sinpi8_native",
    "sinpif1",
    "sinpif16",
    "sinpif16_native",
    "sinpif1_native",
    "sinpif2",
    "sinpif2_native",
    "sinpif3",
    "sinpif3_native",
    "sinpif4",
    "sinpif4_native",
    "sinpif8",
    "sinpif8_native",
    "sqrt1",
    "sqrt16",
    "sqrt16_native",
    "sqrt1_native",
    "sqrt2",
    "sqrt2_native",
    "sqrt3",
    "sqrt3_native",
    "sqrt4",
    "sqrt4_native",
    "sqrt8",
    "sqrt8_native",
    "sqrtf1",
    "sqrtf1_native",
    "sqrtf1_half",
    "sqrtf16",
    "sqrtf16_native",
    "sqrtf16_half",
    "sqrtf2",
    "sqrtf2_native",
    "sqrtf2_half",
    "sqrtf3",
    "sqrtf3_native",
    "sqrtf3_half",
    "sqrtf4",
    "sqrtf4_native",
    "sqrtf4_half",
    "sqrtf8",
    "sqrtf8_native",
    "sqrtf8_half",
    "tan1",
    "tan16",
    "tan16_native",
    "tan1_native",
    "tan2",
    "tan2_native",
    "tan3",
    "tan3_native",
    "tan4",
    "tan4_native",
    "tan8",
    "tan8_native",
    "tanf1",
    "tanf1_native",
    "tanf1_half",
    "tanf16",
    "tanf16_native",
    "tanf16_half",
    "tanf2",
    "tanf2_native",
    "tanf2_half",
    "tanf3",
    "tanf3_native",
    "tanf3_half",
    "tanf4",
    "tanf4_native",
    "tanf4_half",
    "tanf8",
    "tanf8_native",
    "tanf8_half",
    "tanh1",
    "tanh16",
    "tanh16_native",
    "tanh1_native",
    "tanh2",
    "tanh2_native",
    "tanh3",
    "tanh3_native",
    "tanh4",
    "tanh4_native",
    "tanh8",
    "tanh8_native",
    "tanhf1",
    "tanhf16",
    "tanhf16_native",
    "tanhf1_native",
    "tanhf2",
    "tanhf2_native",
    "tanhf3",
    "tanhf3_native",
    "tanhf4",
    "tanhf4_native",
    "tanhf8",
    "tanhf8_native",
    "tanpi1",
    "tanpi16",
    "tanpi16_native",
    "tanpi1_native",
    "tanpi2",
    "tanpi2_native",
    "tanpi3",
    "tanpi3_native",
    "tanpi4",
    "tanpi4_native",
    "tanpi8",
    "tanpi8_native",
    "tanpif1",
    "tanpif16",
    "tanpif16_native",
    "tanpif1_native",
    "tanpif2",
    "tanpif2_native",
    "tanpif3",
    "tanpif3_native",
    "tanpif4",
    "tanpif4_native",
    "tanpif8",
    "tanpif8_native",
    "tgamma1",
    "tgamma16",
    "tgamma2",
    "tgamma3",
    "tgamma4",
    "tgamma8",
    "tgammaf1",
    "tgammaf16",
    "tgammaf2",
    "tgammaf3",
    "tgammaf4",
    "tgammaf8",
    "trunc1",
    "trunc16",
    "trunc2",
    "trunc3",
    "trunc4",
    "trunc8",
    "truncf1",
    "truncf16",
    "truncf2",
    "truncf3",
    "truncf4",
    "truncf8"
};

static const char *g_LibCFunctionNames [] =
{
    "memset",
    "memcpy"
};

const unsigned int OCLExportedLibCFunctionCount =
    (sizeof(g_LibCFunctionNames)/sizeof(const char *));

DynamicLibraryLoader::DynamicLibraryLoader():
    m_pLibHandle(NULL)
{ }

DynamicLibraryLoader::~DynamicLibraryLoader()
{
    if(NULL != m_pLibHandle)
    {
#if defined(__LP64__)
        dlclose(m_pLibHandle);
#else
        assert(false && "Not Implemented");
#endif
        m_pLibHandle = NULL;
    }
}

void DynamicLibraryLoader::SetCPUId(const Intel::CPUId &cpuId)
{
    m_cpuId = cpuId;
}

void DynamicLibraryLoader::Load()
{
    char dynamicLibName[MAX_PATH];
    std::string strErr;

    assert(!m_pLibHandle && "Library already loaded");
    const char* pCPUPrefix = m_cpuId.GetCPUPrefix();
    const char* pAdditionalSuffix = "";
    if (m_cpuId.GetCPU() == Intel::MIC_KNC)
        pAdditionalSuffix = ".3.0";

    // Load SVML functions
#if defined (_WIN32)
    assert(false && "Not Implemented");
#else
    // Load precompiled Built-in functions
#ifdef ENABLE_SDE
    snprintf( dynamicLibName, MAX_PATH, "__sde_svml_%s.so%s", pCPUPrefix, pAdditionalSuffix);
#else
    snprintf( dynamicLibName, MAX_PATH, "__ocl_svml_%s.so%s", pCPUPrefix, pAdditionalSuffix);
#endif

    m_pLibHandle = dlopen(dynamicLibName, RTLD_NOW);
    if(NULL == m_pLibHandle)
    {
        strErr = dlerror();
        assert(false && "Loading SVML library failed");
    }

#endif
    if (NULL == m_pLibHandle)
    {
        throw Exceptions::DeviceBackendExceptionBase(std::string("Loading SVML library failed - ") + strErr);
    }
}

// Search for 'search' in 'inout' and replace with 'replace'.
// Replaces only on first occurance, and leave reamining unmodified.
static void HelperReplace(std::string& inout, std::string const& search, std::string const& replace)
{
    std::string::size_type i = inout.find(search);
    if (i != std::string::npos)
        inout.replace(i,search.length(),replace);
}

void DynamicLibraryLoader::GetLibraryFunctions(
    std::map<std::string, unsigned long long int>& functionsTable)
{
    assert(m_pLibHandle && "The Library is not loaded yet");

    functionsTable.clear();
    char functionPrefix[MAX_PATH];

    const char* pCPUPrefix = m_cpuId.GetCPUPrefix();
    std::string rtEven = "rte";
    std::string rtZero = "rtz";
    std::string rtPositive = "rtp";
    std::string rtNegative = "rtn";

#if defined (_WIN32)
    assert(false && "Not Implemented");
#else
    snprintf( functionPrefix, MAX_PATH, "__ocl_svml_%s_", pCPUPrefix);
#endif

    for(int i = 0; i < OCL_SVML_FUNCTIONS_COUNT; i++)
    {
        std::string functionName = g_functionNames[i];
        HelperReplace(functionName, CVT_RTE, rtEven);
        HelperReplace(functionName, CVT_RTN, rtNegative);
        HelperReplace(functionName, CVT_RTP, rtPositive);
        HelperReplace(functionName, CVT_RTZ, rtZero);
        assert(functionName.find("%") == std::string::npos);

        functionName = functionPrefix+functionName;
        void* pFuncAddress = NULL;

#if defined(__LP64__)
        pFuncAddress = dlsym(m_pLibHandle, functionName.c_str());
#else
        assert(false && "Not Implemented");
#endif

        functionsTable[functionName] = (unsigned long long int)pFuncAddress;
    }

    void *dlh = dlopen(0, RTLD_GLOBAL);
    for (unsigned i = 0; i < OCLExportedLibCFunctionCount; i++)
    {
      void* pFuncAddress = NULL;

#if defined(__LP64__)
        pFuncAddress = dlsym(dlh, g_LibCFunctionNames[i]);
#else
        assert(false && "Not Implemented");
#endif

        functionsTable[g_LibCFunctionNames[i]] =
            (unsigned long long int)pFuncAddress;
    }
    // Need to register all the BI function implemented in the Backend
    RegisterMICBIFunctions(functionsTable);
}

}}} // namespace
