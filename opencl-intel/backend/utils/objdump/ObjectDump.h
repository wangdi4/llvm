// INTEL CONFIDENTIAL
//
// Copyright 2020 Intel Corporation.
//
// This software and the related documents are Intel copyrighted materials, and
// your use of them is governed by the express license under which they were
// provided to you (License). Unless the License provides otherwise, you may not
// use, modify, copy, publish, distribute, disclose or transmit this software or
// the related documents without Intel's prior written permission.
//
// This software and the related documents are provided as is, with no express
// or implied warranties, other than those that are expressly stated in the
// License.

#ifndef OBJECT_DUMP_H
#define OBJECT_DUMP_H

#include "llvm/Object/ObjectFile.h"
#include "llvm/Support/Error.h"
#include "llvm/Support/MemoryBuffer.h"
#include "llvm/Support/raw_ostream.h"

namespace Intel {
namespace OpenCL {
namespace DeviceBackend {
namespace Utils {

extern llvm::raw_fd_ostream *Out;
void dumpObjectToFile(llvm::object::ObjectFile *O);

class ObjectDump {
public:
  static ObjectDump &getInstance() {
    static ObjectDump instance;
    return instance;
  }
  ~ObjectDump() {}

  ObjectDump(ObjectDump const &) = delete;
  void operator=(ObjectDump const &) = delete;

  /// Dump header info and disassemble all sections in object buffer to output
  //  stream. This resembles the following command:
  ///   llvm-objdump -d -D -h -r -t --no-show-raw-insn --x86-asm-syntax=intel
  /// @param ObjBuffer Object buffer generated by JIT
  /// @param OS Output file stream
  llvm::Error dumpObject(const llvm::MemoryBuffer *ObjBuffer,
                         llvm::raw_fd_ostream &OS);

private:
  ObjectDump();
};

} // namespace Utils
} // namespace DeviceBackend
} // namespace OpenCL
} // namespace Intel

#endif // OBJECT_DUMP_H
