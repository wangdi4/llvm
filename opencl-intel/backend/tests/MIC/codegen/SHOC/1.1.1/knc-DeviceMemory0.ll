; XFAIL: win32
; RUN: llc < %s -mtriple=x86_64-pc-linux -march=y86-64 -mcpu=knc
; ModuleID = 'Program'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

declare void @__readGlobalMemoryCoalesced_original(float addrspace(1)* nocapture, float addrspace(1)* nocapture, i32) nounwind

declare i64 @get_global_id(i32) nounwind readnone

declare [7 x i64] @__WG.boundaries.readGlobalMemoryCoalesced_original(float addrspace(1)*, float addrspace(1)*, i32)

declare i64 @get_local_size(i32)

declare i64 @get_base_global_id.(i32)

declare i1 @allOne(i1)

declare i1 @allZero(i1)

declare void @__readGlobalMemoryCoalesced_separated_args(float addrspace(1)* nocapture, float addrspace(1)* nocapture, i32, i8 addrspace(3)*, { i32, [3 x i64], [3 x i64], [3 x i64], [3 x i64] }*, i64*, <{ [4 x i64] }>*, <{ [4 x i64] }>*, i64*, i64, i8*, i64*) nounwind alwaysinline

declare [7 x i64] @WG.boundaries.readGlobalMemoryCoalesced(float addrspace(1)*, float addrspace(1)*, i32, i8 addrspace(3)*, { i32, [3 x i64], [3 x i64], [3 x i64], [3 x i64] }*, i64*, <{ [4 x i64] }>*, <{ [4 x i64] }>*, i64*, i64, i8*, i64*)

define void @readGlobalMemoryCoalesced(i8* %pBuffer) {
entry:
  %0 = bitcast i8* %pBuffer to float addrspace(1)**
  %1 = load float addrspace(1)** %0, align 8
  %2 = getelementptr i8* %pBuffer, i64 8
  %3 = bitcast i8* %2 to float addrspace(1)**
  %4 = load float addrspace(1)** %3, align 8
  %5 = getelementptr i8* %pBuffer, i64 16
  %6 = bitcast i8* %5 to i32*
  %7 = load i32* %6, align 4
  %8 = getelementptr i8* %pBuffer, i64 32
  %9 = bitcast i8* %8 to { i32, [3 x i64], [3 x i64], [3 x i64], [3 x i64] }**
  %10 = load { i32, [3 x i64], [3 x i64], [3 x i64], [3 x i64] }** %9, align 8
  %11 = getelementptr i8* %pBuffer, i64 48
  %12 = bitcast i8* %11 to <{ [4 x i64] }>**
  %13 = load <{ [4 x i64] }>** %12, align 8
  %14 = getelementptr { i32, [3 x i64], [3 x i64], [3 x i64], [3 x i64] }* %10, i64 0, i32 3, i64 0
  %15 = load i64* %14, align 8
  %16 = getelementptr <{ [4 x i64] }>* %13, i64 0, i32 0, i64 0
  %17 = load i64* %16, align 8
  %18 = getelementptr { i32, [3 x i64], [3 x i64], [3 x i64], [3 x i64] }* %10, i64 0, i32 3, i64 1
  %19 = load i64* %18, align 8
  %20 = getelementptr { i32, [3 x i64], [3 x i64], [3 x i64], [3 x i64] }* %10, i64 0, i32 3, i64 2
  %21 = load i64* %20, align 8
  %vector.size.i = ashr i64 %15, 4
  %num.vector.wi.i = and i64 %15, -16
  %max.vector.gid.i = add i64 %num.vector.wi.i, %17
  %scalar.size.i = sub i64 %15, %num.vector.wi.i
  %22 = icmp eq i64 %vector.size.i, 0
  br i1 %22, label %scalarIf.i, label %dim_2_vector_pre_head.i

dim_2_vector_pre_head.i:                          ; preds = %entry
  %subvector_func.i = add nsw i32 %7, -1
  %tempvector_func.i = insertelement <16 x i32> undef, i32 %subvector_func.i, i32 0
  %vectorvector_func.i = shufflevector <16 x i32> %tempvector_func.i, <16 x i32> undef, <16 x i32> zeroinitializer
  br label %dim_1_vector_pre_head.i

dim_1_vector_pre_head.i:                          ; preds = %dim_1_vector_exit.i, %dim_2_vector_pre_head.i
  %dim_2_vector_ind_var.i = phi i64 [ 0, %dim_2_vector_pre_head.i ], [ %dim_2_vector_inc_ind_var.i, %dim_1_vector_exit.i ]
  br label %dim_0_vector_pre_head.i

dim_0_vector_pre_head.i:                          ; preds = %dim_0_vector_exit.i, %dim_1_vector_pre_head.i
  %dim_1_vector_ind_var.i = phi i64 [ 0, %dim_1_vector_pre_head.i ], [ %dim_1_vector_inc_ind_var.i, %dim_0_vector_exit.i ]
  br label %entryvector_func.i

entryvector_func.i:                               ; preds = %for.endvector_func.i, %dim_0_vector_pre_head.i
  %dim_0_vector_ind_var.i = phi i64 [ 0, %dim_0_vector_pre_head.i ], [ %dim_0_vector_inc_ind_var.i, %for.endvector_func.i ]
  %dim_0_vector_tid.i = phi i64 [ %17, %dim_0_vector_pre_head.i ], [ %dim_0_vector_inc_tid.i, %for.endvector_func.i ]
  %broadcast1vector_func.i = insertelement <16 x i64> undef, i64 %dim_0_vector_tid.i, i32 0
  %broadcast2vector_func.i = shufflevector <16 x i64> %broadcast1vector_func.i, <16 x i64> undef, <16 x i32> zeroinitializer
  %23 = add <16 x i64> %broadcast2vector_func.i, <i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8, i64 9, i64 10, i64 11, i64 12, i64 13, i64 14, i64 15>
  %conv1vector_func.i = trunc <16 x i64> %23 to <16 x i32>
  br label %for.bodyvector_func.i

for.bodyvector_func.i:                            ; preds = %for.bodyvector_func.i, %entryvector_func.i
  %vectorPHIvector_func.i = phi <16 x i32> [ %conv1vector_func.i, %entryvector_func.i ], [ %and99577vector_func.i, %for.bodyvector_func.i ]
  %vectorPHI2vector_func.i = phi <16 x float> [ zeroinitializer, %entryvector_func.i ], [ %add96575vector_func.i, %for.bodyvector_func.i ]
  %j.01vector_func.i = phi i32 [ 0, %entryvector_func.i ], [ %incvector_func.i, %for.bodyvector_func.i ]
  %and3vector_func.i = and <16 x i32> %vectorPHIvector_func.i, %vectorvector_func.i
  %idxprom4vector_func.i = sext <16 x i32> %and3vector_func.i to <16 x i64>
  %extractvector_func.i = extractelement <16 x i64> %idxprom4vector_func.i, i32 0
  %extract5vector_func.i = extractelement <16 x i64> %idxprom4vector_func.i, i32 1
  %extract6vector_func.i = extractelement <16 x i64> %idxprom4vector_func.i, i32 2
  %extract7vector_func.i = extractelement <16 x i64> %idxprom4vector_func.i, i32 3
  %extract8vector_func.i = extractelement <16 x i64> %idxprom4vector_func.i, i32 4
  %extract9vector_func.i = extractelement <16 x i64> %idxprom4vector_func.i, i32 5
  %extract10vector_func.i = extractelement <16 x i64> %idxprom4vector_func.i, i32 6
  %extract11vector_func.i = extractelement <16 x i64> %idxprom4vector_func.i, i32 7
  %extract12vector_func.i = extractelement <16 x i64> %idxprom4vector_func.i, i32 8
  %extract13vector_func.i = extractelement <16 x i64> %idxprom4vector_func.i, i32 9
  %extract14vector_func.i = extractelement <16 x i64> %idxprom4vector_func.i, i32 10
  %extract15vector_func.i = extractelement <16 x i64> %idxprom4vector_func.i, i32 11
  %extract16vector_func.i = extractelement <16 x i64> %idxprom4vector_func.i, i32 12
  %extract17vector_func.i = extractelement <16 x i64> %idxprom4vector_func.i, i32 13
  %extract18vector_func.i = extractelement <16 x i64> %idxprom4vector_func.i, i32 14
  %extract19vector_func.i = extractelement <16 x i64> %idxprom4vector_func.i, i32 15
  %24 = getelementptr inbounds float addrspace(1)* %1, i64 %extractvector_func.i
  %25 = getelementptr inbounds float addrspace(1)* %1, i64 %extract5vector_func.i
  %26 = getelementptr inbounds float addrspace(1)* %1, i64 %extract6vector_func.i
  %27 = getelementptr inbounds float addrspace(1)* %1, i64 %extract7vector_func.i
  %28 = getelementptr inbounds float addrspace(1)* %1, i64 %extract8vector_func.i
  %29 = getelementptr inbounds float addrspace(1)* %1, i64 %extract9vector_func.i
  %30 = getelementptr inbounds float addrspace(1)* %1, i64 %extract10vector_func.i
  %31 = getelementptr inbounds float addrspace(1)* %1, i64 %extract11vector_func.i
  %32 = getelementptr inbounds float addrspace(1)* %1, i64 %extract12vector_func.i
  %33 = getelementptr inbounds float addrspace(1)* %1, i64 %extract13vector_func.i
  %34 = getelementptr inbounds float addrspace(1)* %1, i64 %extract14vector_func.i
  %35 = getelementptr inbounds float addrspace(1)* %1, i64 %extract15vector_func.i
  %36 = getelementptr inbounds float addrspace(1)* %1, i64 %extract16vector_func.i
  %37 = getelementptr inbounds float addrspace(1)* %1, i64 %extract17vector_func.i
  %38 = getelementptr inbounds float addrspace(1)* %1, i64 %extract18vector_func.i
  %39 = getelementptr inbounds float addrspace(1)* %1, i64 %extract19vector_func.i
  %40 = load float addrspace(1)* %24, align 4
  %41 = load float addrspace(1)* %25, align 4
  %42 = load float addrspace(1)* %26, align 4
  %43 = load float addrspace(1)* %27, align 4
  %44 = load float addrspace(1)* %28, align 4
  %45 = load float addrspace(1)* %29, align 4
  %46 = load float addrspace(1)* %30, align 4
  %47 = load float addrspace(1)* %31, align 4
  %48 = load float addrspace(1)* %32, align 4
  %49 = load float addrspace(1)* %33, align 4
  %50 = load float addrspace(1)* %34, align 4
  %51 = load float addrspace(1)* %35, align 4
  %52 = load float addrspace(1)* %36, align 4
  %53 = load float addrspace(1)* %37, align 4
  %54 = load float addrspace(1)* %38, align 4
  %55 = load float addrspace(1)* %39, align 4
  %temp.vectvector_func.i = insertelement <16 x float> undef, float %40, i32 0
  %temp.vect305vector_func.i = insertelement <16 x float> %temp.vectvector_func.i, float %41, i32 1
  %temp.vect306vector_func.i = insertelement <16 x float> %temp.vect305vector_func.i, float %42, i32 2
  %temp.vect307vector_func.i = insertelement <16 x float> %temp.vect306vector_func.i, float %43, i32 3
  %temp.vect308vector_func.i = insertelement <16 x float> %temp.vect307vector_func.i, float %44, i32 4
  %temp.vect309vector_func.i = insertelement <16 x float> %temp.vect308vector_func.i, float %45, i32 5
  %temp.vect310vector_func.i = insertelement <16 x float> %temp.vect309vector_func.i, float %46, i32 6
  %temp.vect311vector_func.i = insertelement <16 x float> %temp.vect310vector_func.i, float %47, i32 7
  %temp.vect312vector_func.i = insertelement <16 x float> %temp.vect311vector_func.i, float %48, i32 8
  %temp.vect313vector_func.i = insertelement <16 x float> %temp.vect312vector_func.i, float %49, i32 9
  %temp.vect314vector_func.i = insertelement <16 x float> %temp.vect313vector_func.i, float %50, i32 10
  %temp.vect315vector_func.i = insertelement <16 x float> %temp.vect314vector_func.i, float %51, i32 11
  %temp.vect316vector_func.i = insertelement <16 x float> %temp.vect315vector_func.i, float %52, i32 12
  %temp.vect317vector_func.i = insertelement <16 x float> %temp.vect316vector_func.i, float %53, i32 13
  %temp.vect318vector_func.i = insertelement <16 x float> %temp.vect317vector_func.i, float %54, i32 14
  %temp.vect319vector_func.i = insertelement <16 x float> %temp.vect318vector_func.i, float %55, i32 15
  %add620vector_func.i = add nsw <16 x i32> %vectorPHIvector_func.i, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %and821vector_func.i = and <16 x i32> %add620vector_func.i, %vectorvector_func.i
  %idxprom922vector_func.i = sext <16 x i32> %and821vector_func.i to <16 x i64>
  %extract23vector_func.i = extractelement <16 x i64> %idxprom922vector_func.i, i32 0
  %extract24vector_func.i = extractelement <16 x i64> %idxprom922vector_func.i, i32 1
  %extract25vector_func.i = extractelement <16 x i64> %idxprom922vector_func.i, i32 2
  %extract26vector_func.i = extractelement <16 x i64> %idxprom922vector_func.i, i32 3
  %extract27vector_func.i = extractelement <16 x i64> %idxprom922vector_func.i, i32 4
  %extract28vector_func.i = extractelement <16 x i64> %idxprom922vector_func.i, i32 5
  %extract29vector_func.i = extractelement <16 x i64> %idxprom922vector_func.i, i32 6
  %extract30vector_func.i = extractelement <16 x i64> %idxprom922vector_func.i, i32 7
  %extract31vector_func.i = extractelement <16 x i64> %idxprom922vector_func.i, i32 8
  %extract32vector_func.i = extractelement <16 x i64> %idxprom922vector_func.i, i32 9
  %extract33vector_func.i = extractelement <16 x i64> %idxprom922vector_func.i, i32 10
  %extract34vector_func.i = extractelement <16 x i64> %idxprom922vector_func.i, i32 11
  %extract35vector_func.i = extractelement <16 x i64> %idxprom922vector_func.i, i32 12
  %extract36vector_func.i = extractelement <16 x i64> %idxprom922vector_func.i, i32 13
  %extract37vector_func.i = extractelement <16 x i64> %idxprom922vector_func.i, i32 14
  %extract38vector_func.i = extractelement <16 x i64> %idxprom922vector_func.i, i32 15
  %56 = getelementptr inbounds float addrspace(1)* %1, i64 %extract23vector_func.i
  %57 = getelementptr inbounds float addrspace(1)* %1, i64 %extract24vector_func.i
  %58 = getelementptr inbounds float addrspace(1)* %1, i64 %extract25vector_func.i
  %59 = getelementptr inbounds float addrspace(1)* %1, i64 %extract26vector_func.i
  %60 = getelementptr inbounds float addrspace(1)* %1, i64 %extract27vector_func.i
  %61 = getelementptr inbounds float addrspace(1)* %1, i64 %extract28vector_func.i
  %62 = getelementptr inbounds float addrspace(1)* %1, i64 %extract29vector_func.i
  %63 = getelementptr inbounds float addrspace(1)* %1, i64 %extract30vector_func.i
  %64 = getelementptr inbounds float addrspace(1)* %1, i64 %extract31vector_func.i
  %65 = getelementptr inbounds float addrspace(1)* %1, i64 %extract32vector_func.i
  %66 = getelementptr inbounds float addrspace(1)* %1, i64 %extract33vector_func.i
  %67 = getelementptr inbounds float addrspace(1)* %1, i64 %extract34vector_func.i
  %68 = getelementptr inbounds float addrspace(1)* %1, i64 %extract35vector_func.i
  %69 = getelementptr inbounds float addrspace(1)* %1, i64 %extract36vector_func.i
  %70 = getelementptr inbounds float addrspace(1)* %1, i64 %extract37vector_func.i
  %71 = getelementptr inbounds float addrspace(1)* %1, i64 %extract38vector_func.i
  %72 = load float addrspace(1)* %56, align 4
  %73 = load float addrspace(1)* %57, align 4
  %74 = load float addrspace(1)* %58, align 4
  %75 = load float addrspace(1)* %59, align 4
  %76 = load float addrspace(1)* %60, align 4
  %77 = load float addrspace(1)* %61, align 4
  %78 = load float addrspace(1)* %62, align 4
  %79 = load float addrspace(1)* %63, align 4
  %80 = load float addrspace(1)* %64, align 4
  %81 = load float addrspace(1)* %65, align 4
  %82 = load float addrspace(1)* %66, align 4
  %83 = load float addrspace(1)* %67, align 4
  %84 = load float addrspace(1)* %68, align 4
  %85 = load float addrspace(1)* %69, align 4
  %86 = load float addrspace(1)* %70, align 4
  %87 = load float addrspace(1)* %71, align 4
  %temp.vect320vector_func.i = insertelement <16 x float> undef, float %72, i32 0
  %temp.vect321vector_func.i = insertelement <16 x float> %temp.vect320vector_func.i, float %73, i32 1
  %temp.vect322vector_func.i = insertelement <16 x float> %temp.vect321vector_func.i, float %74, i32 2
  %temp.vect323vector_func.i = insertelement <16 x float> %temp.vect322vector_func.i, float %75, i32 3
  %temp.vect324vector_func.i = insertelement <16 x float> %temp.vect323vector_func.i, float %76, i32 4
  %temp.vect325vector_func.i = insertelement <16 x float> %temp.vect324vector_func.i, float %77, i32 5
  %temp.vect326vector_func.i = insertelement <16 x float> %temp.vect325vector_func.i, float %78, i32 6
  %temp.vect327vector_func.i = insertelement <16 x float> %temp.vect326vector_func.i, float %79, i32 7
  %temp.vect328vector_func.i = insertelement <16 x float> %temp.vect327vector_func.i, float %80, i32 8
  %temp.vect329vector_func.i = insertelement <16 x float> %temp.vect328vector_func.i, float %81, i32 9
  %temp.vect330vector_func.i = insertelement <16 x float> %temp.vect329vector_func.i, float %82, i32 10
  %temp.vect331vector_func.i = insertelement <16 x float> %temp.vect330vector_func.i, float %83, i32 11
  %temp.vect332vector_func.i = insertelement <16 x float> %temp.vect331vector_func.i, float %84, i32 12
  %temp.vect333vector_func.i = insertelement <16 x float> %temp.vect332vector_func.i, float %85, i32 13
  %temp.vect334vector_func.i = insertelement <16 x float> %temp.vect333vector_func.i, float %86, i32 14
  %temp.vect335vector_func.i = insertelement <16 x float> %temp.vect334vector_func.i, float %87, i32 15
  %add1139vector_func.i = add nsw <16 x i32> %vectorPHIvector_func.i, <i32 64, i32 64, i32 64, i32 64, i32 64, i32 64, i32 64, i32 64, i32 64, i32 64, i32 64, i32 64, i32 64, i32 64, i32 64, i32 64>
  %and1340vector_func.i = and <16 x i32> %add1139vector_func.i, %vectorvector_func.i
  %idxprom1441vector_func.i = sext <16 x i32> %and1340vector_func.i to <16 x i64>
  %extract42vector_func.i = extractelement <16 x i64> %idxprom1441vector_func.i, i32 0
  %extract43vector_func.i = extractelement <16 x i64> %idxprom1441vector_func.i, i32 1
  %extract44vector_func.i = extractelement <16 x i64> %idxprom1441vector_func.i, i32 2
  %extract45vector_func.i = extractelement <16 x i64> %idxprom1441vector_func.i, i32 3
  %extract46vector_func.i = extractelement <16 x i64> %idxprom1441vector_func.i, i32 4
  %extract47vector_func.i = extractelement <16 x i64> %idxprom1441vector_func.i, i32 5
  %extract48vector_func.i = extractelement <16 x i64> %idxprom1441vector_func.i, i32 6
  %extract49vector_func.i = extractelement <16 x i64> %idxprom1441vector_func.i, i32 7
  %extract50vector_func.i = extractelement <16 x i64> %idxprom1441vector_func.i, i32 8
  %extract51vector_func.i = extractelement <16 x i64> %idxprom1441vector_func.i, i32 9
  %extract52vector_func.i = extractelement <16 x i64> %idxprom1441vector_func.i, i32 10
  %extract53vector_func.i = extractelement <16 x i64> %idxprom1441vector_func.i, i32 11
  %extract54vector_func.i = extractelement <16 x i64> %idxprom1441vector_func.i, i32 12
  %extract55vector_func.i = extractelement <16 x i64> %idxprom1441vector_func.i, i32 13
  %extract56vector_func.i = extractelement <16 x i64> %idxprom1441vector_func.i, i32 14
  %extract57vector_func.i = extractelement <16 x i64> %idxprom1441vector_func.i, i32 15
  %88 = getelementptr inbounds float addrspace(1)* %1, i64 %extract42vector_func.i
  %89 = getelementptr inbounds float addrspace(1)* %1, i64 %extract43vector_func.i
  %90 = getelementptr inbounds float addrspace(1)* %1, i64 %extract44vector_func.i
  %91 = getelementptr inbounds float addrspace(1)* %1, i64 %extract45vector_func.i
  %92 = getelementptr inbounds float addrspace(1)* %1, i64 %extract46vector_func.i
  %93 = getelementptr inbounds float addrspace(1)* %1, i64 %extract47vector_func.i
  %94 = getelementptr inbounds float addrspace(1)* %1, i64 %extract48vector_func.i
  %95 = getelementptr inbounds float addrspace(1)* %1, i64 %extract49vector_func.i
  %96 = getelementptr inbounds float addrspace(1)* %1, i64 %extract50vector_func.i
  %97 = getelementptr inbounds float addrspace(1)* %1, i64 %extract51vector_func.i
  %98 = getelementptr inbounds float addrspace(1)* %1, i64 %extract52vector_func.i
  %99 = getelementptr inbounds float addrspace(1)* %1, i64 %extract53vector_func.i
  %100 = getelementptr inbounds float addrspace(1)* %1, i64 %extract54vector_func.i
  %101 = getelementptr inbounds float addrspace(1)* %1, i64 %extract55vector_func.i
  %102 = getelementptr inbounds float addrspace(1)* %1, i64 %extract56vector_func.i
  %103 = getelementptr inbounds float addrspace(1)* %1, i64 %extract57vector_func.i
  %104 = load float addrspace(1)* %88, align 4
  %105 = load float addrspace(1)* %89, align 4
  %106 = load float addrspace(1)* %90, align 4
  %107 = load float addrspace(1)* %91, align 4
  %108 = load float addrspace(1)* %92, align 4
  %109 = load float addrspace(1)* %93, align 4
  %110 = load float addrspace(1)* %94, align 4
  %111 = load float addrspace(1)* %95, align 4
  %112 = load float addrspace(1)* %96, align 4
  %113 = load float addrspace(1)* %97, align 4
  %114 = load float addrspace(1)* %98, align 4
  %115 = load float addrspace(1)* %99, align 4
  %116 = load float addrspace(1)* %100, align 4
  %117 = load float addrspace(1)* %101, align 4
  %118 = load float addrspace(1)* %102, align 4
  %119 = load float addrspace(1)* %103, align 4
  %temp.vect337vector_func.i = insertelement <16 x float> undef, float %104, i32 0
  %temp.vect338vector_func.i = insertelement <16 x float> %temp.vect337vector_func.i, float %105, i32 1
  %temp.vect339vector_func.i = insertelement <16 x float> %temp.vect338vector_func.i, float %106, i32 2
  %temp.vect340vector_func.i = insertelement <16 x float> %temp.vect339vector_func.i, float %107, i32 3
  %temp.vect341vector_func.i = insertelement <16 x float> %temp.vect340vector_func.i, float %108, i32 4
  %temp.vect342vector_func.i = insertelement <16 x float> %temp.vect341vector_func.i, float %109, i32 5
  %temp.vect343vector_func.i = insertelement <16 x float> %temp.vect342vector_func.i, float %110, i32 6
  %temp.vect344vector_func.i = insertelement <16 x float> %temp.vect343vector_func.i, float %111, i32 7
  %temp.vect345vector_func.i = insertelement <16 x float> %temp.vect344vector_func.i, float %112, i32 8
  %temp.vect346vector_func.i = insertelement <16 x float> %temp.vect345vector_func.i, float %113, i32 9
  %temp.vect347vector_func.i = insertelement <16 x float> %temp.vect346vector_func.i, float %114, i32 10
  %temp.vect348vector_func.i = insertelement <16 x float> %temp.vect347vector_func.i, float %115, i32 11
  %temp.vect349vector_func.i = insertelement <16 x float> %temp.vect348vector_func.i, float %116, i32 12
  %temp.vect350vector_func.i = insertelement <16 x float> %temp.vect349vector_func.i, float %117, i32 13
  %temp.vect351vector_func.i = insertelement <16 x float> %temp.vect350vector_func.i, float %118, i32 14
  %temp.vect352vector_func.i = insertelement <16 x float> %temp.vect351vector_func.i, float %119, i32 15
  %add1658vector_func.i = add nsw <16 x i32> %vectorPHIvector_func.i, <i32 96, i32 96, i32 96, i32 96, i32 96, i32 96, i32 96, i32 96, i32 96, i32 96, i32 96, i32 96, i32 96, i32 96, i32 96, i32 96>
  %and1859vector_func.i = and <16 x i32> %add1658vector_func.i, %vectorvector_func.i
  %idxprom1960vector_func.i = sext <16 x i32> %and1859vector_func.i to <16 x i64>
  %extract61vector_func.i = extractelement <16 x i64> %idxprom1960vector_func.i, i32 0
  %extract62vector_func.i = extractelement <16 x i64> %idxprom1960vector_func.i, i32 1
  %extract63vector_func.i = extractelement <16 x i64> %idxprom1960vector_func.i, i32 2
  %extract64vector_func.i = extractelement <16 x i64> %idxprom1960vector_func.i, i32 3
  %extract65vector_func.i = extractelement <16 x i64> %idxprom1960vector_func.i, i32 4
  %extract66vector_func.i = extractelement <16 x i64> %idxprom1960vector_func.i, i32 5
  %extract67vector_func.i = extractelement <16 x i64> %idxprom1960vector_func.i, i32 6
  %extract68vector_func.i = extractelement <16 x i64> %idxprom1960vector_func.i, i32 7
  %extract69vector_func.i = extractelement <16 x i64> %idxprom1960vector_func.i, i32 8
  %extract70vector_func.i = extractelement <16 x i64> %idxprom1960vector_func.i, i32 9
  %extract71vector_func.i = extractelement <16 x i64> %idxprom1960vector_func.i, i32 10
  %extract72vector_func.i = extractelement <16 x i64> %idxprom1960vector_func.i, i32 11
  %extract73vector_func.i = extractelement <16 x i64> %idxprom1960vector_func.i, i32 12
  %extract74vector_func.i = extractelement <16 x i64> %idxprom1960vector_func.i, i32 13
  %extract75vector_func.i = extractelement <16 x i64> %idxprom1960vector_func.i, i32 14
  %extract76vector_func.i = extractelement <16 x i64> %idxprom1960vector_func.i, i32 15
  %120 = getelementptr inbounds float addrspace(1)* %1, i64 %extract61vector_func.i
  %121 = getelementptr inbounds float addrspace(1)* %1, i64 %extract62vector_func.i
  %122 = getelementptr inbounds float addrspace(1)* %1, i64 %extract63vector_func.i
  %123 = getelementptr inbounds float addrspace(1)* %1, i64 %extract64vector_func.i
  %124 = getelementptr inbounds float addrspace(1)* %1, i64 %extract65vector_func.i
  %125 = getelementptr inbounds float addrspace(1)* %1, i64 %extract66vector_func.i
  %126 = getelementptr inbounds float addrspace(1)* %1, i64 %extract67vector_func.i
  %127 = getelementptr inbounds float addrspace(1)* %1, i64 %extract68vector_func.i
  %128 = getelementptr inbounds float addrspace(1)* %1, i64 %extract69vector_func.i
  %129 = getelementptr inbounds float addrspace(1)* %1, i64 %extract70vector_func.i
  %130 = getelementptr inbounds float addrspace(1)* %1, i64 %extract71vector_func.i
  %131 = getelementptr inbounds float addrspace(1)* %1, i64 %extract72vector_func.i
  %132 = getelementptr inbounds float addrspace(1)* %1, i64 %extract73vector_func.i
  %133 = getelementptr inbounds float addrspace(1)* %1, i64 %extract74vector_func.i
  %134 = getelementptr inbounds float addrspace(1)* %1, i64 %extract75vector_func.i
  %135 = getelementptr inbounds float addrspace(1)* %1, i64 %extract76vector_func.i
  %136 = load float addrspace(1)* %120, align 4
  %137 = load float addrspace(1)* %121, align 4
  %138 = load float addrspace(1)* %122, align 4
  %139 = load float addrspace(1)* %123, align 4
  %140 = load float addrspace(1)* %124, align 4
  %141 = load float addrspace(1)* %125, align 4
  %142 = load float addrspace(1)* %126, align 4
  %143 = load float addrspace(1)* %127, align 4
  %144 = load float addrspace(1)* %128, align 4
  %145 = load float addrspace(1)* %129, align 4
  %146 = load float addrspace(1)* %130, align 4
  %147 = load float addrspace(1)* %131, align 4
  %148 = load float addrspace(1)* %132, align 4
  %149 = load float addrspace(1)* %133, align 4
  %150 = load float addrspace(1)* %134, align 4
  %151 = load float addrspace(1)* %135, align 4
  %temp.vect354vector_func.i = insertelement <16 x float> undef, float %136, i32 0
  %temp.vect355vector_func.i = insertelement <16 x float> %temp.vect354vector_func.i, float %137, i32 1
  %temp.vect356vector_func.i = insertelement <16 x float> %temp.vect355vector_func.i, float %138, i32 2
  %temp.vect357vector_func.i = insertelement <16 x float> %temp.vect356vector_func.i, float %139, i32 3
  %temp.vect358vector_func.i = insertelement <16 x float> %temp.vect357vector_func.i, float %140, i32 4
  %temp.vect359vector_func.i = insertelement <16 x float> %temp.vect358vector_func.i, float %141, i32 5
  %temp.vect360vector_func.i = insertelement <16 x float> %temp.vect359vector_func.i, float %142, i32 6
  %temp.vect361vector_func.i = insertelement <16 x float> %temp.vect360vector_func.i, float %143, i32 7
  %temp.vect362vector_func.i = insertelement <16 x float> %temp.vect361vector_func.i, float %144, i32 8
  %temp.vect363vector_func.i = insertelement <16 x float> %temp.vect362vector_func.i, float %145, i32 9
  %temp.vect364vector_func.i = insertelement <16 x float> %temp.vect363vector_func.i, float %146, i32 10
  %temp.vect365vector_func.i = insertelement <16 x float> %temp.vect364vector_func.i, float %147, i32 11
  %temp.vect366vector_func.i = insertelement <16 x float> %temp.vect365vector_func.i, float %148, i32 12
  %temp.vect367vector_func.i = insertelement <16 x float> %temp.vect366vector_func.i, float %149, i32 13
  %temp.vect368vector_func.i = insertelement <16 x float> %temp.vect367vector_func.i, float %150, i32 14
  %temp.vect369vector_func.i = insertelement <16 x float> %temp.vect368vector_func.i, float %151, i32 15
  %add2177vector_func.i = add nsw <16 x i32> %vectorPHIvector_func.i, <i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128>
  %and2378vector_func.i = and <16 x i32> %add2177vector_func.i, %vectorvector_func.i
  %idxprom2479vector_func.i = sext <16 x i32> %and2378vector_func.i to <16 x i64>
  %extract80vector_func.i = extractelement <16 x i64> %idxprom2479vector_func.i, i32 0
  %extract81vector_func.i = extractelement <16 x i64> %idxprom2479vector_func.i, i32 1
  %extract82vector_func.i = extractelement <16 x i64> %idxprom2479vector_func.i, i32 2
  %extract83vector_func.i = extractelement <16 x i64> %idxprom2479vector_func.i, i32 3
  %extract84vector_func.i = extractelement <16 x i64> %idxprom2479vector_func.i, i32 4
  %extract85vector_func.i = extractelement <16 x i64> %idxprom2479vector_func.i, i32 5
  %extract86vector_func.i = extractelement <16 x i64> %idxprom2479vector_func.i, i32 6
  %extract87vector_func.i = extractelement <16 x i64> %idxprom2479vector_func.i, i32 7
  %extract88vector_func.i = extractelement <16 x i64> %idxprom2479vector_func.i, i32 8
  %extract89vector_func.i = extractelement <16 x i64> %idxprom2479vector_func.i, i32 9
  %extract90vector_func.i = extractelement <16 x i64> %idxprom2479vector_func.i, i32 10
  %extract91vector_func.i = extractelement <16 x i64> %idxprom2479vector_func.i, i32 11
  %extract92vector_func.i = extractelement <16 x i64> %idxprom2479vector_func.i, i32 12
  %extract93vector_func.i = extractelement <16 x i64> %idxprom2479vector_func.i, i32 13
  %extract94vector_func.i = extractelement <16 x i64> %idxprom2479vector_func.i, i32 14
  %extract95vector_func.i = extractelement <16 x i64> %idxprom2479vector_func.i, i32 15
  %152 = getelementptr inbounds float addrspace(1)* %1, i64 %extract80vector_func.i
  %153 = getelementptr inbounds float addrspace(1)* %1, i64 %extract81vector_func.i
  %154 = getelementptr inbounds float addrspace(1)* %1, i64 %extract82vector_func.i
  %155 = getelementptr inbounds float addrspace(1)* %1, i64 %extract83vector_func.i
  %156 = getelementptr inbounds float addrspace(1)* %1, i64 %extract84vector_func.i
  %157 = getelementptr inbounds float addrspace(1)* %1, i64 %extract85vector_func.i
  %158 = getelementptr inbounds float addrspace(1)* %1, i64 %extract86vector_func.i
  %159 = getelementptr inbounds float addrspace(1)* %1, i64 %extract87vector_func.i
  %160 = getelementptr inbounds float addrspace(1)* %1, i64 %extract88vector_func.i
  %161 = getelementptr inbounds float addrspace(1)* %1, i64 %extract89vector_func.i
  %162 = getelementptr inbounds float addrspace(1)* %1, i64 %extract90vector_func.i
  %163 = getelementptr inbounds float addrspace(1)* %1, i64 %extract91vector_func.i
  %164 = getelementptr inbounds float addrspace(1)* %1, i64 %extract92vector_func.i
  %165 = getelementptr inbounds float addrspace(1)* %1, i64 %extract93vector_func.i
  %166 = getelementptr inbounds float addrspace(1)* %1, i64 %extract94vector_func.i
  %167 = getelementptr inbounds float addrspace(1)* %1, i64 %extract95vector_func.i
  %168 = load float addrspace(1)* %152, align 4
  %169 = load float addrspace(1)* %153, align 4
  %170 = load float addrspace(1)* %154, align 4
  %171 = load float addrspace(1)* %155, align 4
  %172 = load float addrspace(1)* %156, align 4
  %173 = load float addrspace(1)* %157, align 4
  %174 = load float addrspace(1)* %158, align 4
  %175 = load float addrspace(1)* %159, align 4
  %176 = load float addrspace(1)* %160, align 4
  %177 = load float addrspace(1)* %161, align 4
  %178 = load float addrspace(1)* %162, align 4
  %179 = load float addrspace(1)* %163, align 4
  %180 = load float addrspace(1)* %164, align 4
  %181 = load float addrspace(1)* %165, align 4
  %182 = load float addrspace(1)* %166, align 4
  %183 = load float addrspace(1)* %167, align 4
  %temp.vect371vector_func.i = insertelement <16 x float> undef, float %168, i32 0
  %temp.vect372vector_func.i = insertelement <16 x float> %temp.vect371vector_func.i, float %169, i32 1
  %temp.vect373vector_func.i = insertelement <16 x float> %temp.vect372vector_func.i, float %170, i32 2
  %temp.vect374vector_func.i = insertelement <16 x float> %temp.vect373vector_func.i, float %171, i32 3
  %temp.vect375vector_func.i = insertelement <16 x float> %temp.vect374vector_func.i, float %172, i32 4
  %temp.vect376vector_func.i = insertelement <16 x float> %temp.vect375vector_func.i, float %173, i32 5
  %temp.vect377vector_func.i = insertelement <16 x float> %temp.vect376vector_func.i, float %174, i32 6
  %temp.vect378vector_func.i = insertelement <16 x float> %temp.vect377vector_func.i, float %175, i32 7
  %temp.vect379vector_func.i = insertelement <16 x float> %temp.vect378vector_func.i, float %176, i32 8
  %temp.vect380vector_func.i = insertelement <16 x float> %temp.vect379vector_func.i, float %177, i32 9
  %temp.vect381vector_func.i = insertelement <16 x float> %temp.vect380vector_func.i, float %178, i32 10
  %temp.vect382vector_func.i = insertelement <16 x float> %temp.vect381vector_func.i, float %179, i32 11
  %temp.vect383vector_func.i = insertelement <16 x float> %temp.vect382vector_func.i, float %180, i32 12
  %temp.vect384vector_func.i = insertelement <16 x float> %temp.vect383vector_func.i, float %181, i32 13
  %temp.vect385vector_func.i = insertelement <16 x float> %temp.vect384vector_func.i, float %182, i32 14
  %temp.vect386vector_func.i = insertelement <16 x float> %temp.vect385vector_func.i, float %183, i32 15
  %add2696vector_func.i = add nsw <16 x i32> %vectorPHIvector_func.i, <i32 160, i32 160, i32 160, i32 160, i32 160, i32 160, i32 160, i32 160, i32 160, i32 160, i32 160, i32 160, i32 160, i32 160, i32 160, i32 160>
  %and2897vector_func.i = and <16 x i32> %add2696vector_func.i, %vectorvector_func.i
  %idxprom2998vector_func.i = sext <16 x i32> %and2897vector_func.i to <16 x i64>
  %extract99vector_func.i = extractelement <16 x i64> %idxprom2998vector_func.i, i32 0
  %extract100vector_func.i = extractelement <16 x i64> %idxprom2998vector_func.i, i32 1
  %extract101vector_func.i = extractelement <16 x i64> %idxprom2998vector_func.i, i32 2
  %extract102vector_func.i = extractelement <16 x i64> %idxprom2998vector_func.i, i32 3
  %extract103vector_func.i = extractelement <16 x i64> %idxprom2998vector_func.i, i32 4
  %extract104vector_func.i = extractelement <16 x i64> %idxprom2998vector_func.i, i32 5
  %extract105vector_func.i = extractelement <16 x i64> %idxprom2998vector_func.i, i32 6
  %extract106vector_func.i = extractelement <16 x i64> %idxprom2998vector_func.i, i32 7
  %extract107vector_func.i = extractelement <16 x i64> %idxprom2998vector_func.i, i32 8
  %extract108vector_func.i = extractelement <16 x i64> %idxprom2998vector_func.i, i32 9
  %extract109vector_func.i = extractelement <16 x i64> %idxprom2998vector_func.i, i32 10
  %extract110vector_func.i = extractelement <16 x i64> %idxprom2998vector_func.i, i32 11
  %extract111vector_func.i = extractelement <16 x i64> %idxprom2998vector_func.i, i32 12
  %extract112vector_func.i = extractelement <16 x i64> %idxprom2998vector_func.i, i32 13
  %extract113vector_func.i = extractelement <16 x i64> %idxprom2998vector_func.i, i32 14
  %extract114vector_func.i = extractelement <16 x i64> %idxprom2998vector_func.i, i32 15
  %184 = getelementptr inbounds float addrspace(1)* %1, i64 %extract99vector_func.i
  %185 = getelementptr inbounds float addrspace(1)* %1, i64 %extract100vector_func.i
  %186 = getelementptr inbounds float addrspace(1)* %1, i64 %extract101vector_func.i
  %187 = getelementptr inbounds float addrspace(1)* %1, i64 %extract102vector_func.i
  %188 = getelementptr inbounds float addrspace(1)* %1, i64 %extract103vector_func.i
  %189 = getelementptr inbounds float addrspace(1)* %1, i64 %extract104vector_func.i
  %190 = getelementptr inbounds float addrspace(1)* %1, i64 %extract105vector_func.i
  %191 = getelementptr inbounds float addrspace(1)* %1, i64 %extract106vector_func.i
  %192 = getelementptr inbounds float addrspace(1)* %1, i64 %extract107vector_func.i
  %193 = getelementptr inbounds float addrspace(1)* %1, i64 %extract108vector_func.i
  %194 = getelementptr inbounds float addrspace(1)* %1, i64 %extract109vector_func.i
  %195 = getelementptr inbounds float addrspace(1)* %1, i64 %extract110vector_func.i
  %196 = getelementptr inbounds float addrspace(1)* %1, i64 %extract111vector_func.i
  %197 = getelementptr inbounds float addrspace(1)* %1, i64 %extract112vector_func.i
  %198 = getelementptr inbounds float addrspace(1)* %1, i64 %extract113vector_func.i
  %199 = getelementptr inbounds float addrspace(1)* %1, i64 %extract114vector_func.i
  %200 = load float addrspace(1)* %184, align 4
  %201 = load float addrspace(1)* %185, align 4
  %202 = load float addrspace(1)* %186, align 4
  %203 = load float addrspace(1)* %187, align 4
  %204 = load float addrspace(1)* %188, align 4
  %205 = load float addrspace(1)* %189, align 4
  %206 = load float addrspace(1)* %190, align 4
  %207 = load float addrspace(1)* %191, align 4
  %208 = load float addrspace(1)* %192, align 4
  %209 = load float addrspace(1)* %193, align 4
  %210 = load float addrspace(1)* %194, align 4
  %211 = load float addrspace(1)* %195, align 4
  %212 = load float addrspace(1)* %196, align 4
  %213 = load float addrspace(1)* %197, align 4
  %214 = load float addrspace(1)* %198, align 4
  %215 = load float addrspace(1)* %199, align 4
  %temp.vect388vector_func.i = insertelement <16 x float> undef, float %200, i32 0
  %temp.vect389vector_func.i = insertelement <16 x float> %temp.vect388vector_func.i, float %201, i32 1
  %temp.vect390vector_func.i = insertelement <16 x float> %temp.vect389vector_func.i, float %202, i32 2
  %temp.vect391vector_func.i = insertelement <16 x float> %temp.vect390vector_func.i, float %203, i32 3
  %temp.vect392vector_func.i = insertelement <16 x float> %temp.vect391vector_func.i, float %204, i32 4
  %temp.vect393vector_func.i = insertelement <16 x float> %temp.vect392vector_func.i, float %205, i32 5
  %temp.vect394vector_func.i = insertelement <16 x float> %temp.vect393vector_func.i, float %206, i32 6
  %temp.vect395vector_func.i = insertelement <16 x float> %temp.vect394vector_func.i, float %207, i32 7
  %temp.vect396vector_func.i = insertelement <16 x float> %temp.vect395vector_func.i, float %208, i32 8
  %temp.vect397vector_func.i = insertelement <16 x float> %temp.vect396vector_func.i, float %209, i32 9
  %temp.vect398vector_func.i = insertelement <16 x float> %temp.vect397vector_func.i, float %210, i32 10
  %temp.vect399vector_func.i = insertelement <16 x float> %temp.vect398vector_func.i, float %211, i32 11
  %temp.vect400vector_func.i = insertelement <16 x float> %temp.vect399vector_func.i, float %212, i32 12
  %temp.vect401vector_func.i = insertelement <16 x float> %temp.vect400vector_func.i, float %213, i32 13
  %temp.vect402vector_func.i = insertelement <16 x float> %temp.vect401vector_func.i, float %214, i32 14
  %temp.vect403vector_func.i = insertelement <16 x float> %temp.vect402vector_func.i, float %215, i32 15
  %add31115vector_func.i = add nsw <16 x i32> %vectorPHIvector_func.i, <i32 192, i32 192, i32 192, i32 192, i32 192, i32 192, i32 192, i32 192, i32 192, i32 192, i32 192, i32 192, i32 192, i32 192, i32 192, i32 192>
  %and33116vector_func.i = and <16 x i32> %add31115vector_func.i, %vectorvector_func.i
  %idxprom34117vector_func.i = sext <16 x i32> %and33116vector_func.i to <16 x i64>
  %extract118vector_func.i = extractelement <16 x i64> %idxprom34117vector_func.i, i32 0
  %extract119vector_func.i = extractelement <16 x i64> %idxprom34117vector_func.i, i32 1
  %extract120vector_func.i = extractelement <16 x i64> %idxprom34117vector_func.i, i32 2
  %extract121vector_func.i = extractelement <16 x i64> %idxprom34117vector_func.i, i32 3
  %extract122vector_func.i = extractelement <16 x i64> %idxprom34117vector_func.i, i32 4
  %extract123vector_func.i = extractelement <16 x i64> %idxprom34117vector_func.i, i32 5
  %extract124vector_func.i = extractelement <16 x i64> %idxprom34117vector_func.i, i32 6
  %extract125vector_func.i = extractelement <16 x i64> %idxprom34117vector_func.i, i32 7
  %extract126vector_func.i = extractelement <16 x i64> %idxprom34117vector_func.i, i32 8
  %extract127vector_func.i = extractelement <16 x i64> %idxprom34117vector_func.i, i32 9
  %extract128vector_func.i = extractelement <16 x i64> %idxprom34117vector_func.i, i32 10
  %extract129vector_func.i = extractelement <16 x i64> %idxprom34117vector_func.i, i32 11
  %extract130vector_func.i = extractelement <16 x i64> %idxprom34117vector_func.i, i32 12
  %extract131vector_func.i = extractelement <16 x i64> %idxprom34117vector_func.i, i32 13
  %extract132vector_func.i = extractelement <16 x i64> %idxprom34117vector_func.i, i32 14
  %extract133vector_func.i = extractelement <16 x i64> %idxprom34117vector_func.i, i32 15
  %216 = getelementptr inbounds float addrspace(1)* %1, i64 %extract118vector_func.i
  %217 = getelementptr inbounds float addrspace(1)* %1, i64 %extract119vector_func.i
  %218 = getelementptr inbounds float addrspace(1)* %1, i64 %extract120vector_func.i
  %219 = getelementptr inbounds float addrspace(1)* %1, i64 %extract121vector_func.i
  %220 = getelementptr inbounds float addrspace(1)* %1, i64 %extract122vector_func.i
  %221 = getelementptr inbounds float addrspace(1)* %1, i64 %extract123vector_func.i
  %222 = getelementptr inbounds float addrspace(1)* %1, i64 %extract124vector_func.i
  %223 = getelementptr inbounds float addrspace(1)* %1, i64 %extract125vector_func.i
  %224 = getelementptr inbounds float addrspace(1)* %1, i64 %extract126vector_func.i
  %225 = getelementptr inbounds float addrspace(1)* %1, i64 %extract127vector_func.i
  %226 = getelementptr inbounds float addrspace(1)* %1, i64 %extract128vector_func.i
  %227 = getelementptr inbounds float addrspace(1)* %1, i64 %extract129vector_func.i
  %228 = getelementptr inbounds float addrspace(1)* %1, i64 %extract130vector_func.i
  %229 = getelementptr inbounds float addrspace(1)* %1, i64 %extract131vector_func.i
  %230 = getelementptr inbounds float addrspace(1)* %1, i64 %extract132vector_func.i
  %231 = getelementptr inbounds float addrspace(1)* %1, i64 %extract133vector_func.i
  %232 = load float addrspace(1)* %216, align 4
  %233 = load float addrspace(1)* %217, align 4
  %234 = load float addrspace(1)* %218, align 4
  %235 = load float addrspace(1)* %219, align 4
  %236 = load float addrspace(1)* %220, align 4
  %237 = load float addrspace(1)* %221, align 4
  %238 = load float addrspace(1)* %222, align 4
  %239 = load float addrspace(1)* %223, align 4
  %240 = load float addrspace(1)* %224, align 4
  %241 = load float addrspace(1)* %225, align 4
  %242 = load float addrspace(1)* %226, align 4
  %243 = load float addrspace(1)* %227, align 4
  %244 = load float addrspace(1)* %228, align 4
  %245 = load float addrspace(1)* %229, align 4
  %246 = load float addrspace(1)* %230, align 4
  %247 = load float addrspace(1)* %231, align 4
  %temp.vect405vector_func.i = insertelement <16 x float> undef, float %232, i32 0
  %temp.vect406vector_func.i = insertelement <16 x float> %temp.vect405vector_func.i, float %233, i32 1
  %temp.vect407vector_func.i = insertelement <16 x float> %temp.vect406vector_func.i, float %234, i32 2
  %temp.vect408vector_func.i = insertelement <16 x float> %temp.vect407vector_func.i, float %235, i32 3
  %temp.vect409vector_func.i = insertelement <16 x float> %temp.vect408vector_func.i, float %236, i32 4
  %temp.vect410vector_func.i = insertelement <16 x float> %temp.vect409vector_func.i, float %237, i32 5
  %temp.vect411vector_func.i = insertelement <16 x float> %temp.vect410vector_func.i, float %238, i32 6
  %temp.vect412vector_func.i = insertelement <16 x float> %temp.vect411vector_func.i, float %239, i32 7
  %temp.vect413vector_func.i = insertelement <16 x float> %temp.vect412vector_func.i, float %240, i32 8
  %temp.vect414vector_func.i = insertelement <16 x float> %temp.vect413vector_func.i, float %241, i32 9
  %temp.vect415vector_func.i = insertelement <16 x float> %temp.vect414vector_func.i, float %242, i32 10
  %temp.vect416vector_func.i = insertelement <16 x float> %temp.vect415vector_func.i, float %243, i32 11
  %temp.vect417vector_func.i = insertelement <16 x float> %temp.vect416vector_func.i, float %244, i32 12
  %temp.vect418vector_func.i = insertelement <16 x float> %temp.vect417vector_func.i, float %245, i32 13
  %temp.vect419vector_func.i = insertelement <16 x float> %temp.vect418vector_func.i, float %246, i32 14
  %temp.vect420vector_func.i = insertelement <16 x float> %temp.vect419vector_func.i, float %247, i32 15
  %add36134vector_func.i = add nsw <16 x i32> %vectorPHIvector_func.i, <i32 224, i32 224, i32 224, i32 224, i32 224, i32 224, i32 224, i32 224, i32 224, i32 224, i32 224, i32 224, i32 224, i32 224, i32 224, i32 224>
  %and38135vector_func.i = and <16 x i32> %add36134vector_func.i, %vectorvector_func.i
  %idxprom39136vector_func.i = sext <16 x i32> %and38135vector_func.i to <16 x i64>
  %extract137vector_func.i = extractelement <16 x i64> %idxprom39136vector_func.i, i32 0
  %extract138vector_func.i = extractelement <16 x i64> %idxprom39136vector_func.i, i32 1
  %extract139vector_func.i = extractelement <16 x i64> %idxprom39136vector_func.i, i32 2
  %extract140vector_func.i = extractelement <16 x i64> %idxprom39136vector_func.i, i32 3
  %extract141vector_func.i = extractelement <16 x i64> %idxprom39136vector_func.i, i32 4
  %extract142vector_func.i = extractelement <16 x i64> %idxprom39136vector_func.i, i32 5
  %extract143vector_func.i = extractelement <16 x i64> %idxprom39136vector_func.i, i32 6
  %extract144vector_func.i = extractelement <16 x i64> %idxprom39136vector_func.i, i32 7
  %extract145vector_func.i = extractelement <16 x i64> %idxprom39136vector_func.i, i32 8
  %extract146vector_func.i = extractelement <16 x i64> %idxprom39136vector_func.i, i32 9
  %extract147vector_func.i = extractelement <16 x i64> %idxprom39136vector_func.i, i32 10
  %extract148vector_func.i = extractelement <16 x i64> %idxprom39136vector_func.i, i32 11
  %extract149vector_func.i = extractelement <16 x i64> %idxprom39136vector_func.i, i32 12
  %extract150vector_func.i = extractelement <16 x i64> %idxprom39136vector_func.i, i32 13
  %extract151vector_func.i = extractelement <16 x i64> %idxprom39136vector_func.i, i32 14
  %extract152vector_func.i = extractelement <16 x i64> %idxprom39136vector_func.i, i32 15
  %248 = getelementptr inbounds float addrspace(1)* %1, i64 %extract137vector_func.i
  %249 = getelementptr inbounds float addrspace(1)* %1, i64 %extract138vector_func.i
  %250 = getelementptr inbounds float addrspace(1)* %1, i64 %extract139vector_func.i
  %251 = getelementptr inbounds float addrspace(1)* %1, i64 %extract140vector_func.i
  %252 = getelementptr inbounds float addrspace(1)* %1, i64 %extract141vector_func.i
  %253 = getelementptr inbounds float addrspace(1)* %1, i64 %extract142vector_func.i
  %254 = getelementptr inbounds float addrspace(1)* %1, i64 %extract143vector_func.i
  %255 = getelementptr inbounds float addrspace(1)* %1, i64 %extract144vector_func.i
  %256 = getelementptr inbounds float addrspace(1)* %1, i64 %extract145vector_func.i
  %257 = getelementptr inbounds float addrspace(1)* %1, i64 %extract146vector_func.i
  %258 = getelementptr inbounds float addrspace(1)* %1, i64 %extract147vector_func.i
  %259 = getelementptr inbounds float addrspace(1)* %1, i64 %extract148vector_func.i
  %260 = getelementptr inbounds float addrspace(1)* %1, i64 %extract149vector_func.i
  %261 = getelementptr inbounds float addrspace(1)* %1, i64 %extract150vector_func.i
  %262 = getelementptr inbounds float addrspace(1)* %1, i64 %extract151vector_func.i
  %263 = getelementptr inbounds float addrspace(1)* %1, i64 %extract152vector_func.i
  %264 = load float addrspace(1)* %248, align 4
  %265 = load float addrspace(1)* %249, align 4
  %266 = load float addrspace(1)* %250, align 4
  %267 = load float addrspace(1)* %251, align 4
  %268 = load float addrspace(1)* %252, align 4
  %269 = load float addrspace(1)* %253, align 4
  %270 = load float addrspace(1)* %254, align 4
  %271 = load float addrspace(1)* %255, align 4
  %272 = load float addrspace(1)* %256, align 4
  %273 = load float addrspace(1)* %257, align 4
  %274 = load float addrspace(1)* %258, align 4
  %275 = load float addrspace(1)* %259, align 4
  %276 = load float addrspace(1)* %260, align 4
  %277 = load float addrspace(1)* %261, align 4
  %278 = load float addrspace(1)* %262, align 4
  %279 = load float addrspace(1)* %263, align 4
  %temp.vect422vector_func.i = insertelement <16 x float> undef, float %264, i32 0
  %temp.vect423vector_func.i = insertelement <16 x float> %temp.vect422vector_func.i, float %265, i32 1
  %temp.vect424vector_func.i = insertelement <16 x float> %temp.vect423vector_func.i, float %266, i32 2
  %temp.vect425vector_func.i = insertelement <16 x float> %temp.vect424vector_func.i, float %267, i32 3
  %temp.vect426vector_func.i = insertelement <16 x float> %temp.vect425vector_func.i, float %268, i32 4
  %temp.vect427vector_func.i = insertelement <16 x float> %temp.vect426vector_func.i, float %269, i32 5
  %temp.vect428vector_func.i = insertelement <16 x float> %temp.vect427vector_func.i, float %270, i32 6
  %temp.vect429vector_func.i = insertelement <16 x float> %temp.vect428vector_func.i, float %271, i32 7
  %temp.vect430vector_func.i = insertelement <16 x float> %temp.vect429vector_func.i, float %272, i32 8
  %temp.vect431vector_func.i = insertelement <16 x float> %temp.vect430vector_func.i, float %273, i32 9
  %temp.vect432vector_func.i = insertelement <16 x float> %temp.vect431vector_func.i, float %274, i32 10
  %temp.vect433vector_func.i = insertelement <16 x float> %temp.vect432vector_func.i, float %275, i32 11
  %temp.vect434vector_func.i = insertelement <16 x float> %temp.vect433vector_func.i, float %276, i32 12
  %temp.vect435vector_func.i = insertelement <16 x float> %temp.vect434vector_func.i, float %277, i32 13
  %temp.vect436vector_func.i = insertelement <16 x float> %temp.vect435vector_func.i, float %278, i32 14
  %temp.vect437vector_func.i = insertelement <16 x float> %temp.vect436vector_func.i, float %279, i32 15
  %add41153vector_func.i = add nsw <16 x i32> %vectorPHIvector_func.i, <i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256>
  %and43154vector_func.i = and <16 x i32> %add41153vector_func.i, %vectorvector_func.i
  %idxprom44155vector_func.i = sext <16 x i32> %and43154vector_func.i to <16 x i64>
  %extract156vector_func.i = extractelement <16 x i64> %idxprom44155vector_func.i, i32 0
  %extract157vector_func.i = extractelement <16 x i64> %idxprom44155vector_func.i, i32 1
  %extract158vector_func.i = extractelement <16 x i64> %idxprom44155vector_func.i, i32 2
  %extract159vector_func.i = extractelement <16 x i64> %idxprom44155vector_func.i, i32 3
  %extract160vector_func.i = extractelement <16 x i64> %idxprom44155vector_func.i, i32 4
  %extract161vector_func.i = extractelement <16 x i64> %idxprom44155vector_func.i, i32 5
  %extract162vector_func.i = extractelement <16 x i64> %idxprom44155vector_func.i, i32 6
  %extract163vector_func.i = extractelement <16 x i64> %idxprom44155vector_func.i, i32 7
  %extract164vector_func.i = extractelement <16 x i64> %idxprom44155vector_func.i, i32 8
  %extract165vector_func.i = extractelement <16 x i64> %idxprom44155vector_func.i, i32 9
  %extract166vector_func.i = extractelement <16 x i64> %idxprom44155vector_func.i, i32 10
  %extract167vector_func.i = extractelement <16 x i64> %idxprom44155vector_func.i, i32 11
  %extract168vector_func.i = extractelement <16 x i64> %idxprom44155vector_func.i, i32 12
  %extract169vector_func.i = extractelement <16 x i64> %idxprom44155vector_func.i, i32 13
  %extract170vector_func.i = extractelement <16 x i64> %idxprom44155vector_func.i, i32 14
  %extract171vector_func.i = extractelement <16 x i64> %idxprom44155vector_func.i, i32 15
  %280 = getelementptr inbounds float addrspace(1)* %1, i64 %extract156vector_func.i
  %281 = getelementptr inbounds float addrspace(1)* %1, i64 %extract157vector_func.i
  %282 = getelementptr inbounds float addrspace(1)* %1, i64 %extract158vector_func.i
  %283 = getelementptr inbounds float addrspace(1)* %1, i64 %extract159vector_func.i
  %284 = getelementptr inbounds float addrspace(1)* %1, i64 %extract160vector_func.i
  %285 = getelementptr inbounds float addrspace(1)* %1, i64 %extract161vector_func.i
  %286 = getelementptr inbounds float addrspace(1)* %1, i64 %extract162vector_func.i
  %287 = getelementptr inbounds float addrspace(1)* %1, i64 %extract163vector_func.i
  %288 = getelementptr inbounds float addrspace(1)* %1, i64 %extract164vector_func.i
  %289 = getelementptr inbounds float addrspace(1)* %1, i64 %extract165vector_func.i
  %290 = getelementptr inbounds float addrspace(1)* %1, i64 %extract166vector_func.i
  %291 = getelementptr inbounds float addrspace(1)* %1, i64 %extract167vector_func.i
  %292 = getelementptr inbounds float addrspace(1)* %1, i64 %extract168vector_func.i
  %293 = getelementptr inbounds float addrspace(1)* %1, i64 %extract169vector_func.i
  %294 = getelementptr inbounds float addrspace(1)* %1, i64 %extract170vector_func.i
  %295 = getelementptr inbounds float addrspace(1)* %1, i64 %extract171vector_func.i
  %296 = load float addrspace(1)* %280, align 4
  %297 = load float addrspace(1)* %281, align 4
  %298 = load float addrspace(1)* %282, align 4
  %299 = load float addrspace(1)* %283, align 4
  %300 = load float addrspace(1)* %284, align 4
  %301 = load float addrspace(1)* %285, align 4
  %302 = load float addrspace(1)* %286, align 4
  %303 = load float addrspace(1)* %287, align 4
  %304 = load float addrspace(1)* %288, align 4
  %305 = load float addrspace(1)* %289, align 4
  %306 = load float addrspace(1)* %290, align 4
  %307 = load float addrspace(1)* %291, align 4
  %308 = load float addrspace(1)* %292, align 4
  %309 = load float addrspace(1)* %293, align 4
  %310 = load float addrspace(1)* %294, align 4
  %311 = load float addrspace(1)* %295, align 4
  %temp.vect439vector_func.i = insertelement <16 x float> undef, float %296, i32 0
  %temp.vect440vector_func.i = insertelement <16 x float> %temp.vect439vector_func.i, float %297, i32 1
  %temp.vect441vector_func.i = insertelement <16 x float> %temp.vect440vector_func.i, float %298, i32 2
  %temp.vect442vector_func.i = insertelement <16 x float> %temp.vect441vector_func.i, float %299, i32 3
  %temp.vect443vector_func.i = insertelement <16 x float> %temp.vect442vector_func.i, float %300, i32 4
  %temp.vect444vector_func.i = insertelement <16 x float> %temp.vect443vector_func.i, float %301, i32 5
  %temp.vect445vector_func.i = insertelement <16 x float> %temp.vect444vector_func.i, float %302, i32 6
  %temp.vect446vector_func.i = insertelement <16 x float> %temp.vect445vector_func.i, float %303, i32 7
  %temp.vect447vector_func.i = insertelement <16 x float> %temp.vect446vector_func.i, float %304, i32 8
  %temp.vect448vector_func.i = insertelement <16 x float> %temp.vect447vector_func.i, float %305, i32 9
  %temp.vect449vector_func.i = insertelement <16 x float> %temp.vect448vector_func.i, float %306, i32 10
  %temp.vect450vector_func.i = insertelement <16 x float> %temp.vect449vector_func.i, float %307, i32 11
  %temp.vect451vector_func.i = insertelement <16 x float> %temp.vect450vector_func.i, float %308, i32 12
  %temp.vect452vector_func.i = insertelement <16 x float> %temp.vect451vector_func.i, float %309, i32 13
  %temp.vect453vector_func.i = insertelement <16 x float> %temp.vect452vector_func.i, float %310, i32 14
  %temp.vect454vector_func.i = insertelement <16 x float> %temp.vect453vector_func.i, float %311, i32 15
  %add46172vector_func.i = add nsw <16 x i32> %vectorPHIvector_func.i, <i32 288, i32 288, i32 288, i32 288, i32 288, i32 288, i32 288, i32 288, i32 288, i32 288, i32 288, i32 288, i32 288, i32 288, i32 288, i32 288>
  %and48173vector_func.i = and <16 x i32> %add46172vector_func.i, %vectorvector_func.i
  %idxprom49174vector_func.i = sext <16 x i32> %and48173vector_func.i to <16 x i64>
  %extract175vector_func.i = extractelement <16 x i64> %idxprom49174vector_func.i, i32 0
  %extract176vector_func.i = extractelement <16 x i64> %idxprom49174vector_func.i, i32 1
  %extract177vector_func.i = extractelement <16 x i64> %idxprom49174vector_func.i, i32 2
  %extract178vector_func.i = extractelement <16 x i64> %idxprom49174vector_func.i, i32 3
  %extract179vector_func.i = extractelement <16 x i64> %idxprom49174vector_func.i, i32 4
  %extract180vector_func.i = extractelement <16 x i64> %idxprom49174vector_func.i, i32 5
  %extract181vector_func.i = extractelement <16 x i64> %idxprom49174vector_func.i, i32 6
  %extract182vector_func.i = extractelement <16 x i64> %idxprom49174vector_func.i, i32 7
  %extract183vector_func.i = extractelement <16 x i64> %idxprom49174vector_func.i, i32 8
  %extract184vector_func.i = extractelement <16 x i64> %idxprom49174vector_func.i, i32 9
  %extract185vector_func.i = extractelement <16 x i64> %idxprom49174vector_func.i, i32 10
  %extract186vector_func.i = extractelement <16 x i64> %idxprom49174vector_func.i, i32 11
  %extract187vector_func.i = extractelement <16 x i64> %idxprom49174vector_func.i, i32 12
  %extract188vector_func.i = extractelement <16 x i64> %idxprom49174vector_func.i, i32 13
  %extract189vector_func.i = extractelement <16 x i64> %idxprom49174vector_func.i, i32 14
  %extract190vector_func.i = extractelement <16 x i64> %idxprom49174vector_func.i, i32 15
  %312 = getelementptr inbounds float addrspace(1)* %1, i64 %extract175vector_func.i
  %313 = getelementptr inbounds float addrspace(1)* %1, i64 %extract176vector_func.i
  %314 = getelementptr inbounds float addrspace(1)* %1, i64 %extract177vector_func.i
  %315 = getelementptr inbounds float addrspace(1)* %1, i64 %extract178vector_func.i
  %316 = getelementptr inbounds float addrspace(1)* %1, i64 %extract179vector_func.i
  %317 = getelementptr inbounds float addrspace(1)* %1, i64 %extract180vector_func.i
  %318 = getelementptr inbounds float addrspace(1)* %1, i64 %extract181vector_func.i
  %319 = getelementptr inbounds float addrspace(1)* %1, i64 %extract182vector_func.i
  %320 = getelementptr inbounds float addrspace(1)* %1, i64 %extract183vector_func.i
  %321 = getelementptr inbounds float addrspace(1)* %1, i64 %extract184vector_func.i
  %322 = getelementptr inbounds float addrspace(1)* %1, i64 %extract185vector_func.i
  %323 = getelementptr inbounds float addrspace(1)* %1, i64 %extract186vector_func.i
  %324 = getelementptr inbounds float addrspace(1)* %1, i64 %extract187vector_func.i
  %325 = getelementptr inbounds float addrspace(1)* %1, i64 %extract188vector_func.i
  %326 = getelementptr inbounds float addrspace(1)* %1, i64 %extract189vector_func.i
  %327 = getelementptr inbounds float addrspace(1)* %1, i64 %extract190vector_func.i
  %328 = load float addrspace(1)* %312, align 4
  %329 = load float addrspace(1)* %313, align 4
  %330 = load float addrspace(1)* %314, align 4
  %331 = load float addrspace(1)* %315, align 4
  %332 = load float addrspace(1)* %316, align 4
  %333 = load float addrspace(1)* %317, align 4
  %334 = load float addrspace(1)* %318, align 4
  %335 = load float addrspace(1)* %319, align 4
  %336 = load float addrspace(1)* %320, align 4
  %337 = load float addrspace(1)* %321, align 4
  %338 = load float addrspace(1)* %322, align 4
  %339 = load float addrspace(1)* %323, align 4
  %340 = load float addrspace(1)* %324, align 4
  %341 = load float addrspace(1)* %325, align 4
  %342 = load float addrspace(1)* %326, align 4
  %343 = load float addrspace(1)* %327, align 4
  %temp.vect456vector_func.i = insertelement <16 x float> undef, float %328, i32 0
  %temp.vect457vector_func.i = insertelement <16 x float> %temp.vect456vector_func.i, float %329, i32 1
  %temp.vect458vector_func.i = insertelement <16 x float> %temp.vect457vector_func.i, float %330, i32 2
  %temp.vect459vector_func.i = insertelement <16 x float> %temp.vect458vector_func.i, float %331, i32 3
  %temp.vect460vector_func.i = insertelement <16 x float> %temp.vect459vector_func.i, float %332, i32 4
  %temp.vect461vector_func.i = insertelement <16 x float> %temp.vect460vector_func.i, float %333, i32 5
  %temp.vect462vector_func.i = insertelement <16 x float> %temp.vect461vector_func.i, float %334, i32 6
  %temp.vect463vector_func.i = insertelement <16 x float> %temp.vect462vector_func.i, float %335, i32 7
  %temp.vect464vector_func.i = insertelement <16 x float> %temp.vect463vector_func.i, float %336, i32 8
  %temp.vect465vector_func.i = insertelement <16 x float> %temp.vect464vector_func.i, float %337, i32 9
  %temp.vect466vector_func.i = insertelement <16 x float> %temp.vect465vector_func.i, float %338, i32 10
  %temp.vect467vector_func.i = insertelement <16 x float> %temp.vect466vector_func.i, float %339, i32 11
  %temp.vect468vector_func.i = insertelement <16 x float> %temp.vect467vector_func.i, float %340, i32 12
  %temp.vect469vector_func.i = insertelement <16 x float> %temp.vect468vector_func.i, float %341, i32 13
  %temp.vect470vector_func.i = insertelement <16 x float> %temp.vect469vector_func.i, float %342, i32 14
  %temp.vect471vector_func.i = insertelement <16 x float> %temp.vect470vector_func.i, float %343, i32 15
  %add51191vector_func.i = add nsw <16 x i32> %vectorPHIvector_func.i, <i32 320, i32 320, i32 320, i32 320, i32 320, i32 320, i32 320, i32 320, i32 320, i32 320, i32 320, i32 320, i32 320, i32 320, i32 320, i32 320>
  %and53192vector_func.i = and <16 x i32> %add51191vector_func.i, %vectorvector_func.i
  %idxprom54193vector_func.i = sext <16 x i32> %and53192vector_func.i to <16 x i64>
  %extract194vector_func.i = extractelement <16 x i64> %idxprom54193vector_func.i, i32 0
  %extract195vector_func.i = extractelement <16 x i64> %idxprom54193vector_func.i, i32 1
  %extract196vector_func.i = extractelement <16 x i64> %idxprom54193vector_func.i, i32 2
  %extract197vector_func.i = extractelement <16 x i64> %idxprom54193vector_func.i, i32 3
  %extract198vector_func.i = extractelement <16 x i64> %idxprom54193vector_func.i, i32 4
  %extract199vector_func.i = extractelement <16 x i64> %idxprom54193vector_func.i, i32 5
  %extract200vector_func.i = extractelement <16 x i64> %idxprom54193vector_func.i, i32 6
  %extract201vector_func.i = extractelement <16 x i64> %idxprom54193vector_func.i, i32 7
  %extract202vector_func.i = extractelement <16 x i64> %idxprom54193vector_func.i, i32 8
  %extract203vector_func.i = extractelement <16 x i64> %idxprom54193vector_func.i, i32 9
  %extract204vector_func.i = extractelement <16 x i64> %idxprom54193vector_func.i, i32 10
  %extract205vector_func.i = extractelement <16 x i64> %idxprom54193vector_func.i, i32 11
  %extract206vector_func.i = extractelement <16 x i64> %idxprom54193vector_func.i, i32 12
  %extract207vector_func.i = extractelement <16 x i64> %idxprom54193vector_func.i, i32 13
  %extract208vector_func.i = extractelement <16 x i64> %idxprom54193vector_func.i, i32 14
  %extract209vector_func.i = extractelement <16 x i64> %idxprom54193vector_func.i, i32 15
  %344 = getelementptr inbounds float addrspace(1)* %1, i64 %extract194vector_func.i
  %345 = getelementptr inbounds float addrspace(1)* %1, i64 %extract195vector_func.i
  %346 = getelementptr inbounds float addrspace(1)* %1, i64 %extract196vector_func.i
  %347 = getelementptr inbounds float addrspace(1)* %1, i64 %extract197vector_func.i
  %348 = getelementptr inbounds float addrspace(1)* %1, i64 %extract198vector_func.i
  %349 = getelementptr inbounds float addrspace(1)* %1, i64 %extract199vector_func.i
  %350 = getelementptr inbounds float addrspace(1)* %1, i64 %extract200vector_func.i
  %351 = getelementptr inbounds float addrspace(1)* %1, i64 %extract201vector_func.i
  %352 = getelementptr inbounds float addrspace(1)* %1, i64 %extract202vector_func.i
  %353 = getelementptr inbounds float addrspace(1)* %1, i64 %extract203vector_func.i
  %354 = getelementptr inbounds float addrspace(1)* %1, i64 %extract204vector_func.i
  %355 = getelementptr inbounds float addrspace(1)* %1, i64 %extract205vector_func.i
  %356 = getelementptr inbounds float addrspace(1)* %1, i64 %extract206vector_func.i
  %357 = getelementptr inbounds float addrspace(1)* %1, i64 %extract207vector_func.i
  %358 = getelementptr inbounds float addrspace(1)* %1, i64 %extract208vector_func.i
  %359 = getelementptr inbounds float addrspace(1)* %1, i64 %extract209vector_func.i
  %360 = load float addrspace(1)* %344, align 4
  %361 = load float addrspace(1)* %345, align 4
  %362 = load float addrspace(1)* %346, align 4
  %363 = load float addrspace(1)* %347, align 4
  %364 = load float addrspace(1)* %348, align 4
  %365 = load float addrspace(1)* %349, align 4
  %366 = load float addrspace(1)* %350, align 4
  %367 = load float addrspace(1)* %351, align 4
  %368 = load float addrspace(1)* %352, align 4
  %369 = load float addrspace(1)* %353, align 4
  %370 = load float addrspace(1)* %354, align 4
  %371 = load float addrspace(1)* %355, align 4
  %372 = load float addrspace(1)* %356, align 4
  %373 = load float addrspace(1)* %357, align 4
  %374 = load float addrspace(1)* %358, align 4
  %375 = load float addrspace(1)* %359, align 4
  %temp.vect473vector_func.i = insertelement <16 x float> undef, float %360, i32 0
  %temp.vect474vector_func.i = insertelement <16 x float> %temp.vect473vector_func.i, float %361, i32 1
  %temp.vect475vector_func.i = insertelement <16 x float> %temp.vect474vector_func.i, float %362, i32 2
  %temp.vect476vector_func.i = insertelement <16 x float> %temp.vect475vector_func.i, float %363, i32 3
  %temp.vect477vector_func.i = insertelement <16 x float> %temp.vect476vector_func.i, float %364, i32 4
  %temp.vect478vector_func.i = insertelement <16 x float> %temp.vect477vector_func.i, float %365, i32 5
  %temp.vect479vector_func.i = insertelement <16 x float> %temp.vect478vector_func.i, float %366, i32 6
  %temp.vect480vector_func.i = insertelement <16 x float> %temp.vect479vector_func.i, float %367, i32 7
  %temp.vect481vector_func.i = insertelement <16 x float> %temp.vect480vector_func.i, float %368, i32 8
  %temp.vect482vector_func.i = insertelement <16 x float> %temp.vect481vector_func.i, float %369, i32 9
  %temp.vect483vector_func.i = insertelement <16 x float> %temp.vect482vector_func.i, float %370, i32 10
  %temp.vect484vector_func.i = insertelement <16 x float> %temp.vect483vector_func.i, float %371, i32 11
  %temp.vect485vector_func.i = insertelement <16 x float> %temp.vect484vector_func.i, float %372, i32 12
  %temp.vect486vector_func.i = insertelement <16 x float> %temp.vect485vector_func.i, float %373, i32 13
  %temp.vect487vector_func.i = insertelement <16 x float> %temp.vect486vector_func.i, float %374, i32 14
  %temp.vect488vector_func.i = insertelement <16 x float> %temp.vect487vector_func.i, float %375, i32 15
  %add56210vector_func.i = add nsw <16 x i32> %vectorPHIvector_func.i, <i32 352, i32 352, i32 352, i32 352, i32 352, i32 352, i32 352, i32 352, i32 352, i32 352, i32 352, i32 352, i32 352, i32 352, i32 352, i32 352>
  %and58211vector_func.i = and <16 x i32> %add56210vector_func.i, %vectorvector_func.i
  %idxprom59212vector_func.i = sext <16 x i32> %and58211vector_func.i to <16 x i64>
  %extract213vector_func.i = extractelement <16 x i64> %idxprom59212vector_func.i, i32 0
  %extract214vector_func.i = extractelement <16 x i64> %idxprom59212vector_func.i, i32 1
  %extract215vector_func.i = extractelement <16 x i64> %idxprom59212vector_func.i, i32 2
  %extract216vector_func.i = extractelement <16 x i64> %idxprom59212vector_func.i, i32 3
  %extract217vector_func.i = extractelement <16 x i64> %idxprom59212vector_func.i, i32 4
  %extract218vector_func.i = extractelement <16 x i64> %idxprom59212vector_func.i, i32 5
  %extract219vector_func.i = extractelement <16 x i64> %idxprom59212vector_func.i, i32 6
  %extract220vector_func.i = extractelement <16 x i64> %idxprom59212vector_func.i, i32 7
  %extract221vector_func.i = extractelement <16 x i64> %idxprom59212vector_func.i, i32 8
  %extract222vector_func.i = extractelement <16 x i64> %idxprom59212vector_func.i, i32 9
  %extract223vector_func.i = extractelement <16 x i64> %idxprom59212vector_func.i, i32 10
  %extract224vector_func.i = extractelement <16 x i64> %idxprom59212vector_func.i, i32 11
  %extract225vector_func.i = extractelement <16 x i64> %idxprom59212vector_func.i, i32 12
  %extract226vector_func.i = extractelement <16 x i64> %idxprom59212vector_func.i, i32 13
  %extract227vector_func.i = extractelement <16 x i64> %idxprom59212vector_func.i, i32 14
  %extract228vector_func.i = extractelement <16 x i64> %idxprom59212vector_func.i, i32 15
  %376 = getelementptr inbounds float addrspace(1)* %1, i64 %extract213vector_func.i
  %377 = getelementptr inbounds float addrspace(1)* %1, i64 %extract214vector_func.i
  %378 = getelementptr inbounds float addrspace(1)* %1, i64 %extract215vector_func.i
  %379 = getelementptr inbounds float addrspace(1)* %1, i64 %extract216vector_func.i
  %380 = getelementptr inbounds float addrspace(1)* %1, i64 %extract217vector_func.i
  %381 = getelementptr inbounds float addrspace(1)* %1, i64 %extract218vector_func.i
  %382 = getelementptr inbounds float addrspace(1)* %1, i64 %extract219vector_func.i
  %383 = getelementptr inbounds float addrspace(1)* %1, i64 %extract220vector_func.i
  %384 = getelementptr inbounds float addrspace(1)* %1, i64 %extract221vector_func.i
  %385 = getelementptr inbounds float addrspace(1)* %1, i64 %extract222vector_func.i
  %386 = getelementptr inbounds float addrspace(1)* %1, i64 %extract223vector_func.i
  %387 = getelementptr inbounds float addrspace(1)* %1, i64 %extract224vector_func.i
  %388 = getelementptr inbounds float addrspace(1)* %1, i64 %extract225vector_func.i
  %389 = getelementptr inbounds float addrspace(1)* %1, i64 %extract226vector_func.i
  %390 = getelementptr inbounds float addrspace(1)* %1, i64 %extract227vector_func.i
  %391 = getelementptr inbounds float addrspace(1)* %1, i64 %extract228vector_func.i
  %392 = load float addrspace(1)* %376, align 4
  %393 = load float addrspace(1)* %377, align 4
  %394 = load float addrspace(1)* %378, align 4
  %395 = load float addrspace(1)* %379, align 4
  %396 = load float addrspace(1)* %380, align 4
  %397 = load float addrspace(1)* %381, align 4
  %398 = load float addrspace(1)* %382, align 4
  %399 = load float addrspace(1)* %383, align 4
  %400 = load float addrspace(1)* %384, align 4
  %401 = load float addrspace(1)* %385, align 4
  %402 = load float addrspace(1)* %386, align 4
  %403 = load float addrspace(1)* %387, align 4
  %404 = load float addrspace(1)* %388, align 4
  %405 = load float addrspace(1)* %389, align 4
  %406 = load float addrspace(1)* %390, align 4
  %407 = load float addrspace(1)* %391, align 4
  %temp.vect490vector_func.i = insertelement <16 x float> undef, float %392, i32 0
  %temp.vect491vector_func.i = insertelement <16 x float> %temp.vect490vector_func.i, float %393, i32 1
  %temp.vect492vector_func.i = insertelement <16 x float> %temp.vect491vector_func.i, float %394, i32 2
  %temp.vect493vector_func.i = insertelement <16 x float> %temp.vect492vector_func.i, float %395, i32 3
  %temp.vect494vector_func.i = insertelement <16 x float> %temp.vect493vector_func.i, float %396, i32 4
  %temp.vect495vector_func.i = insertelement <16 x float> %temp.vect494vector_func.i, float %397, i32 5
  %temp.vect496vector_func.i = insertelement <16 x float> %temp.vect495vector_func.i, float %398, i32 6
  %temp.vect497vector_func.i = insertelement <16 x float> %temp.vect496vector_func.i, float %399, i32 7
  %temp.vect498vector_func.i = insertelement <16 x float> %temp.vect497vector_func.i, float %400, i32 8
  %temp.vect499vector_func.i = insertelement <16 x float> %temp.vect498vector_func.i, float %401, i32 9
  %temp.vect500vector_func.i = insertelement <16 x float> %temp.vect499vector_func.i, float %402, i32 10
  %temp.vect501vector_func.i = insertelement <16 x float> %temp.vect500vector_func.i, float %403, i32 11
  %temp.vect502vector_func.i = insertelement <16 x float> %temp.vect501vector_func.i, float %404, i32 12
  %temp.vect503vector_func.i = insertelement <16 x float> %temp.vect502vector_func.i, float %405, i32 13
  %temp.vect504vector_func.i = insertelement <16 x float> %temp.vect503vector_func.i, float %406, i32 14
  %temp.vect505vector_func.i = insertelement <16 x float> %temp.vect504vector_func.i, float %407, i32 15
  %add61229vector_func.i = add nsw <16 x i32> %vectorPHIvector_func.i, <i32 384, i32 384, i32 384, i32 384, i32 384, i32 384, i32 384, i32 384, i32 384, i32 384, i32 384, i32 384, i32 384, i32 384, i32 384, i32 384>
  %and63230vector_func.i = and <16 x i32> %add61229vector_func.i, %vectorvector_func.i
  %idxprom64231vector_func.i = sext <16 x i32> %and63230vector_func.i to <16 x i64>
  %extract232vector_func.i = extractelement <16 x i64> %idxprom64231vector_func.i, i32 0
  %extract233vector_func.i = extractelement <16 x i64> %idxprom64231vector_func.i, i32 1
  %extract234vector_func.i = extractelement <16 x i64> %idxprom64231vector_func.i, i32 2
  %extract235vector_func.i = extractelement <16 x i64> %idxprom64231vector_func.i, i32 3
  %extract236vector_func.i = extractelement <16 x i64> %idxprom64231vector_func.i, i32 4
  %extract237vector_func.i = extractelement <16 x i64> %idxprom64231vector_func.i, i32 5
  %extract238vector_func.i = extractelement <16 x i64> %idxprom64231vector_func.i, i32 6
  %extract239vector_func.i = extractelement <16 x i64> %idxprom64231vector_func.i, i32 7
  %extract240vector_func.i = extractelement <16 x i64> %idxprom64231vector_func.i, i32 8
  %extract241vector_func.i = extractelement <16 x i64> %idxprom64231vector_func.i, i32 9
  %extract242vector_func.i = extractelement <16 x i64> %idxprom64231vector_func.i, i32 10
  %extract243vector_func.i = extractelement <16 x i64> %idxprom64231vector_func.i, i32 11
  %extract244vector_func.i = extractelement <16 x i64> %idxprom64231vector_func.i, i32 12
  %extract245vector_func.i = extractelement <16 x i64> %idxprom64231vector_func.i, i32 13
  %extract246vector_func.i = extractelement <16 x i64> %idxprom64231vector_func.i, i32 14
  %extract247vector_func.i = extractelement <16 x i64> %idxprom64231vector_func.i, i32 15
  %408 = getelementptr inbounds float addrspace(1)* %1, i64 %extract232vector_func.i
  %409 = getelementptr inbounds float addrspace(1)* %1, i64 %extract233vector_func.i
  %410 = getelementptr inbounds float addrspace(1)* %1, i64 %extract234vector_func.i
  %411 = getelementptr inbounds float addrspace(1)* %1, i64 %extract235vector_func.i
  %412 = getelementptr inbounds float addrspace(1)* %1, i64 %extract236vector_func.i
  %413 = getelementptr inbounds float addrspace(1)* %1, i64 %extract237vector_func.i
  %414 = getelementptr inbounds float addrspace(1)* %1, i64 %extract238vector_func.i
  %415 = getelementptr inbounds float addrspace(1)* %1, i64 %extract239vector_func.i
  %416 = getelementptr inbounds float addrspace(1)* %1, i64 %extract240vector_func.i
  %417 = getelementptr inbounds float addrspace(1)* %1, i64 %extract241vector_func.i
  %418 = getelementptr inbounds float addrspace(1)* %1, i64 %extract242vector_func.i
  %419 = getelementptr inbounds float addrspace(1)* %1, i64 %extract243vector_func.i
  %420 = getelementptr inbounds float addrspace(1)* %1, i64 %extract244vector_func.i
  %421 = getelementptr inbounds float addrspace(1)* %1, i64 %extract245vector_func.i
  %422 = getelementptr inbounds float addrspace(1)* %1, i64 %extract246vector_func.i
  %423 = getelementptr inbounds float addrspace(1)* %1, i64 %extract247vector_func.i
  %424 = load float addrspace(1)* %408, align 4
  %425 = load float addrspace(1)* %409, align 4
  %426 = load float addrspace(1)* %410, align 4
  %427 = load float addrspace(1)* %411, align 4
  %428 = load float addrspace(1)* %412, align 4
  %429 = load float addrspace(1)* %413, align 4
  %430 = load float addrspace(1)* %414, align 4
  %431 = load float addrspace(1)* %415, align 4
  %432 = load float addrspace(1)* %416, align 4
  %433 = load float addrspace(1)* %417, align 4
  %434 = load float addrspace(1)* %418, align 4
  %435 = load float addrspace(1)* %419, align 4
  %436 = load float addrspace(1)* %420, align 4
  %437 = load float addrspace(1)* %421, align 4
  %438 = load float addrspace(1)* %422, align 4
  %439 = load float addrspace(1)* %423, align 4
  %temp.vect507vector_func.i = insertelement <16 x float> undef, float %424, i32 0
  %temp.vect508vector_func.i = insertelement <16 x float> %temp.vect507vector_func.i, float %425, i32 1
  %temp.vect509vector_func.i = insertelement <16 x float> %temp.vect508vector_func.i, float %426, i32 2
  %temp.vect510vector_func.i = insertelement <16 x float> %temp.vect509vector_func.i, float %427, i32 3
  %temp.vect511vector_func.i = insertelement <16 x float> %temp.vect510vector_func.i, float %428, i32 4
  %temp.vect512vector_func.i = insertelement <16 x float> %temp.vect511vector_func.i, float %429, i32 5
  %temp.vect513vector_func.i = insertelement <16 x float> %temp.vect512vector_func.i, float %430, i32 6
  %temp.vect514vector_func.i = insertelement <16 x float> %temp.vect513vector_func.i, float %431, i32 7
  %temp.vect515vector_func.i = insertelement <16 x float> %temp.vect514vector_func.i, float %432, i32 8
  %temp.vect516vector_func.i = insertelement <16 x float> %temp.vect515vector_func.i, float %433, i32 9
  %temp.vect517vector_func.i = insertelement <16 x float> %temp.vect516vector_func.i, float %434, i32 10
  %temp.vect518vector_func.i = insertelement <16 x float> %temp.vect517vector_func.i, float %435, i32 11
  %temp.vect519vector_func.i = insertelement <16 x float> %temp.vect518vector_func.i, float %436, i32 12
  %temp.vect520vector_func.i = insertelement <16 x float> %temp.vect519vector_func.i, float %437, i32 13
  %temp.vect521vector_func.i = insertelement <16 x float> %temp.vect520vector_func.i, float %438, i32 14
  %temp.vect522vector_func.i = insertelement <16 x float> %temp.vect521vector_func.i, float %439, i32 15
  %add66248vector_func.i = add nsw <16 x i32> %vectorPHIvector_func.i, <i32 416, i32 416, i32 416, i32 416, i32 416, i32 416, i32 416, i32 416, i32 416, i32 416, i32 416, i32 416, i32 416, i32 416, i32 416, i32 416>
  %and68249vector_func.i = and <16 x i32> %add66248vector_func.i, %vectorvector_func.i
  %idxprom69250vector_func.i = sext <16 x i32> %and68249vector_func.i to <16 x i64>
  %extract251vector_func.i = extractelement <16 x i64> %idxprom69250vector_func.i, i32 0
  %extract252vector_func.i = extractelement <16 x i64> %idxprom69250vector_func.i, i32 1
  %extract253vector_func.i = extractelement <16 x i64> %idxprom69250vector_func.i, i32 2
  %extract254vector_func.i = extractelement <16 x i64> %idxprom69250vector_func.i, i32 3
  %extract255vector_func.i = extractelement <16 x i64> %idxprom69250vector_func.i, i32 4
  %extract256vector_func.i = extractelement <16 x i64> %idxprom69250vector_func.i, i32 5
  %extract257vector_func.i = extractelement <16 x i64> %idxprom69250vector_func.i, i32 6
  %extract258vector_func.i = extractelement <16 x i64> %idxprom69250vector_func.i, i32 7
  %extract259vector_func.i = extractelement <16 x i64> %idxprom69250vector_func.i, i32 8
  %extract260vector_func.i = extractelement <16 x i64> %idxprom69250vector_func.i, i32 9
  %extract261vector_func.i = extractelement <16 x i64> %idxprom69250vector_func.i, i32 10
  %extract262vector_func.i = extractelement <16 x i64> %idxprom69250vector_func.i, i32 11
  %extract263vector_func.i = extractelement <16 x i64> %idxprom69250vector_func.i, i32 12
  %extract264vector_func.i = extractelement <16 x i64> %idxprom69250vector_func.i, i32 13
  %extract265vector_func.i = extractelement <16 x i64> %idxprom69250vector_func.i, i32 14
  %extract266vector_func.i = extractelement <16 x i64> %idxprom69250vector_func.i, i32 15
  %440 = getelementptr inbounds float addrspace(1)* %1, i64 %extract251vector_func.i
  %441 = getelementptr inbounds float addrspace(1)* %1, i64 %extract252vector_func.i
  %442 = getelementptr inbounds float addrspace(1)* %1, i64 %extract253vector_func.i
  %443 = getelementptr inbounds float addrspace(1)* %1, i64 %extract254vector_func.i
  %444 = getelementptr inbounds float addrspace(1)* %1, i64 %extract255vector_func.i
  %445 = getelementptr inbounds float addrspace(1)* %1, i64 %extract256vector_func.i
  %446 = getelementptr inbounds float addrspace(1)* %1, i64 %extract257vector_func.i
  %447 = getelementptr inbounds float addrspace(1)* %1, i64 %extract258vector_func.i
  %448 = getelementptr inbounds float addrspace(1)* %1, i64 %extract259vector_func.i
  %449 = getelementptr inbounds float addrspace(1)* %1, i64 %extract260vector_func.i
  %450 = getelementptr inbounds float addrspace(1)* %1, i64 %extract261vector_func.i
  %451 = getelementptr inbounds float addrspace(1)* %1, i64 %extract262vector_func.i
  %452 = getelementptr inbounds float addrspace(1)* %1, i64 %extract263vector_func.i
  %453 = getelementptr inbounds float addrspace(1)* %1, i64 %extract264vector_func.i
  %454 = getelementptr inbounds float addrspace(1)* %1, i64 %extract265vector_func.i
  %455 = getelementptr inbounds float addrspace(1)* %1, i64 %extract266vector_func.i
  %456 = load float addrspace(1)* %440, align 4
  %457 = load float addrspace(1)* %441, align 4
  %458 = load float addrspace(1)* %442, align 4
  %459 = load float addrspace(1)* %443, align 4
  %460 = load float addrspace(1)* %444, align 4
  %461 = load float addrspace(1)* %445, align 4
  %462 = load float addrspace(1)* %446, align 4
  %463 = load float addrspace(1)* %447, align 4
  %464 = load float addrspace(1)* %448, align 4
  %465 = load float addrspace(1)* %449, align 4
  %466 = load float addrspace(1)* %450, align 4
  %467 = load float addrspace(1)* %451, align 4
  %468 = load float addrspace(1)* %452, align 4
  %469 = load float addrspace(1)* %453, align 4
  %470 = load float addrspace(1)* %454, align 4
  %471 = load float addrspace(1)* %455, align 4
  %temp.vect524vector_func.i = insertelement <16 x float> undef, float %456, i32 0
  %temp.vect525vector_func.i = insertelement <16 x float> %temp.vect524vector_func.i, float %457, i32 1
  %temp.vect526vector_func.i = insertelement <16 x float> %temp.vect525vector_func.i, float %458, i32 2
  %temp.vect527vector_func.i = insertelement <16 x float> %temp.vect526vector_func.i, float %459, i32 3
  %temp.vect528vector_func.i = insertelement <16 x float> %temp.vect527vector_func.i, float %460, i32 4
  %temp.vect529vector_func.i = insertelement <16 x float> %temp.vect528vector_func.i, float %461, i32 5
  %temp.vect530vector_func.i = insertelement <16 x float> %temp.vect529vector_func.i, float %462, i32 6
  %temp.vect531vector_func.i = insertelement <16 x float> %temp.vect530vector_func.i, float %463, i32 7
  %temp.vect532vector_func.i = insertelement <16 x float> %temp.vect531vector_func.i, float %464, i32 8
  %temp.vect533vector_func.i = insertelement <16 x float> %temp.vect532vector_func.i, float %465, i32 9
  %temp.vect534vector_func.i = insertelement <16 x float> %temp.vect533vector_func.i, float %466, i32 10
  %temp.vect535vector_func.i = insertelement <16 x float> %temp.vect534vector_func.i, float %467, i32 11
  %temp.vect536vector_func.i = insertelement <16 x float> %temp.vect535vector_func.i, float %468, i32 12
  %temp.vect537vector_func.i = insertelement <16 x float> %temp.vect536vector_func.i, float %469, i32 13
  %temp.vect538vector_func.i = insertelement <16 x float> %temp.vect537vector_func.i, float %470, i32 14
  %temp.vect539vector_func.i = insertelement <16 x float> %temp.vect538vector_func.i, float %471, i32 15
  %add71267vector_func.i = add nsw <16 x i32> %vectorPHIvector_func.i, <i32 448, i32 448, i32 448, i32 448, i32 448, i32 448, i32 448, i32 448, i32 448, i32 448, i32 448, i32 448, i32 448, i32 448, i32 448, i32 448>
  %and73268vector_func.i = and <16 x i32> %add71267vector_func.i, %vectorvector_func.i
  %idxprom74269vector_func.i = sext <16 x i32> %and73268vector_func.i to <16 x i64>
  %extract270vector_func.i = extractelement <16 x i64> %idxprom74269vector_func.i, i32 0
  %extract271vector_func.i = extractelement <16 x i64> %idxprom74269vector_func.i, i32 1
  %extract272vector_func.i = extractelement <16 x i64> %idxprom74269vector_func.i, i32 2
  %extract273vector_func.i = extractelement <16 x i64> %idxprom74269vector_func.i, i32 3
  %extract274vector_func.i = extractelement <16 x i64> %idxprom74269vector_func.i, i32 4
  %extract275vector_func.i = extractelement <16 x i64> %idxprom74269vector_func.i, i32 5
  %extract276vector_func.i = extractelement <16 x i64> %idxprom74269vector_func.i, i32 6
  %extract277vector_func.i = extractelement <16 x i64> %idxprom74269vector_func.i, i32 7
  %extract278vector_func.i = extractelement <16 x i64> %idxprom74269vector_func.i, i32 8
  %extract279vector_func.i = extractelement <16 x i64> %idxprom74269vector_func.i, i32 9
  %extract280vector_func.i = extractelement <16 x i64> %idxprom74269vector_func.i, i32 10
  %extract281vector_func.i = extractelement <16 x i64> %idxprom74269vector_func.i, i32 11
  %extract282vector_func.i = extractelement <16 x i64> %idxprom74269vector_func.i, i32 12
  %extract283vector_func.i = extractelement <16 x i64> %idxprom74269vector_func.i, i32 13
  %extract284vector_func.i = extractelement <16 x i64> %idxprom74269vector_func.i, i32 14
  %extract285vector_func.i = extractelement <16 x i64> %idxprom74269vector_func.i, i32 15
  %472 = getelementptr inbounds float addrspace(1)* %1, i64 %extract270vector_func.i
  %473 = getelementptr inbounds float addrspace(1)* %1, i64 %extract271vector_func.i
  %474 = getelementptr inbounds float addrspace(1)* %1, i64 %extract272vector_func.i
  %475 = getelementptr inbounds float addrspace(1)* %1, i64 %extract273vector_func.i
  %476 = getelementptr inbounds float addrspace(1)* %1, i64 %extract274vector_func.i
  %477 = getelementptr inbounds float addrspace(1)* %1, i64 %extract275vector_func.i
  %478 = getelementptr inbounds float addrspace(1)* %1, i64 %extract276vector_func.i
  %479 = getelementptr inbounds float addrspace(1)* %1, i64 %extract277vector_func.i
  %480 = getelementptr inbounds float addrspace(1)* %1, i64 %extract278vector_func.i
  %481 = getelementptr inbounds float addrspace(1)* %1, i64 %extract279vector_func.i
  %482 = getelementptr inbounds float addrspace(1)* %1, i64 %extract280vector_func.i
  %483 = getelementptr inbounds float addrspace(1)* %1, i64 %extract281vector_func.i
  %484 = getelementptr inbounds float addrspace(1)* %1, i64 %extract282vector_func.i
  %485 = getelementptr inbounds float addrspace(1)* %1, i64 %extract283vector_func.i
  %486 = getelementptr inbounds float addrspace(1)* %1, i64 %extract284vector_func.i
  %487 = getelementptr inbounds float addrspace(1)* %1, i64 %extract285vector_func.i
  %488 = load float addrspace(1)* %472, align 4
  %489 = load float addrspace(1)* %473, align 4
  %490 = load float addrspace(1)* %474, align 4
  %491 = load float addrspace(1)* %475, align 4
  %492 = load float addrspace(1)* %476, align 4
  %493 = load float addrspace(1)* %477, align 4
  %494 = load float addrspace(1)* %478, align 4
  %495 = load float addrspace(1)* %479, align 4
  %496 = load float addrspace(1)* %480, align 4
  %497 = load float addrspace(1)* %481, align 4
  %498 = load float addrspace(1)* %482, align 4
  %499 = load float addrspace(1)* %483, align 4
  %500 = load float addrspace(1)* %484, align 4
  %501 = load float addrspace(1)* %485, align 4
  %502 = load float addrspace(1)* %486, align 4
  %503 = load float addrspace(1)* %487, align 4
  %temp.vect541vector_func.i = insertelement <16 x float> undef, float %488, i32 0
  %temp.vect542vector_func.i = insertelement <16 x float> %temp.vect541vector_func.i, float %489, i32 1
  %temp.vect543vector_func.i = insertelement <16 x float> %temp.vect542vector_func.i, float %490, i32 2
  %temp.vect544vector_func.i = insertelement <16 x float> %temp.vect543vector_func.i, float %491, i32 3
  %temp.vect545vector_func.i = insertelement <16 x float> %temp.vect544vector_func.i, float %492, i32 4
  %temp.vect546vector_func.i = insertelement <16 x float> %temp.vect545vector_func.i, float %493, i32 5
  %temp.vect547vector_func.i = insertelement <16 x float> %temp.vect546vector_func.i, float %494, i32 6
  %temp.vect548vector_func.i = insertelement <16 x float> %temp.vect547vector_func.i, float %495, i32 7
  %temp.vect549vector_func.i = insertelement <16 x float> %temp.vect548vector_func.i, float %496, i32 8
  %temp.vect550vector_func.i = insertelement <16 x float> %temp.vect549vector_func.i, float %497, i32 9
  %temp.vect551vector_func.i = insertelement <16 x float> %temp.vect550vector_func.i, float %498, i32 10
  %temp.vect552vector_func.i = insertelement <16 x float> %temp.vect551vector_func.i, float %499, i32 11
  %temp.vect553vector_func.i = insertelement <16 x float> %temp.vect552vector_func.i, float %500, i32 12
  %temp.vect554vector_func.i = insertelement <16 x float> %temp.vect553vector_func.i, float %501, i32 13
  %temp.vect555vector_func.i = insertelement <16 x float> %temp.vect554vector_func.i, float %502, i32 14
  %temp.vect556vector_func.i = insertelement <16 x float> %temp.vect555vector_func.i, float %503, i32 15
  %add76286vector_func.i = add nsw <16 x i32> %vectorPHIvector_func.i, <i32 480, i32 480, i32 480, i32 480, i32 480, i32 480, i32 480, i32 480, i32 480, i32 480, i32 480, i32 480, i32 480, i32 480, i32 480, i32 480>
  %and78287vector_func.i = and <16 x i32> %add76286vector_func.i, %vectorvector_func.i
  %idxprom79288vector_func.i = sext <16 x i32> %and78287vector_func.i to <16 x i64>
  %extract289vector_func.i = extractelement <16 x i64> %idxprom79288vector_func.i, i32 0
  %extract290vector_func.i = extractelement <16 x i64> %idxprom79288vector_func.i, i32 1
  %extract291vector_func.i = extractelement <16 x i64> %idxprom79288vector_func.i, i32 2
  %extract292vector_func.i = extractelement <16 x i64> %idxprom79288vector_func.i, i32 3
  %extract293vector_func.i = extractelement <16 x i64> %idxprom79288vector_func.i, i32 4
  %extract294vector_func.i = extractelement <16 x i64> %idxprom79288vector_func.i, i32 5
  %extract295vector_func.i = extractelement <16 x i64> %idxprom79288vector_func.i, i32 6
  %extract296vector_func.i = extractelement <16 x i64> %idxprom79288vector_func.i, i32 7
  %extract297vector_func.i = extractelement <16 x i64> %idxprom79288vector_func.i, i32 8
  %extract298vector_func.i = extractelement <16 x i64> %idxprom79288vector_func.i, i32 9
  %extract299vector_func.i = extractelement <16 x i64> %idxprom79288vector_func.i, i32 10
  %extract300vector_func.i = extractelement <16 x i64> %idxprom79288vector_func.i, i32 11
  %extract301vector_func.i = extractelement <16 x i64> %idxprom79288vector_func.i, i32 12
  %extract302vector_func.i = extractelement <16 x i64> %idxprom79288vector_func.i, i32 13
  %extract303vector_func.i = extractelement <16 x i64> %idxprom79288vector_func.i, i32 14
  %extract304vector_func.i = extractelement <16 x i64> %idxprom79288vector_func.i, i32 15
  %504 = getelementptr inbounds float addrspace(1)* %1, i64 %extract289vector_func.i
  %505 = getelementptr inbounds float addrspace(1)* %1, i64 %extract290vector_func.i
  %506 = getelementptr inbounds float addrspace(1)* %1, i64 %extract291vector_func.i
  %507 = getelementptr inbounds float addrspace(1)* %1, i64 %extract292vector_func.i
  %508 = getelementptr inbounds float addrspace(1)* %1, i64 %extract293vector_func.i
  %509 = getelementptr inbounds float addrspace(1)* %1, i64 %extract294vector_func.i
  %510 = getelementptr inbounds float addrspace(1)* %1, i64 %extract295vector_func.i
  %511 = getelementptr inbounds float addrspace(1)* %1, i64 %extract296vector_func.i
  %512 = getelementptr inbounds float addrspace(1)* %1, i64 %extract297vector_func.i
  %513 = getelementptr inbounds float addrspace(1)* %1, i64 %extract298vector_func.i
  %514 = getelementptr inbounds float addrspace(1)* %1, i64 %extract299vector_func.i
  %515 = getelementptr inbounds float addrspace(1)* %1, i64 %extract300vector_func.i
  %516 = getelementptr inbounds float addrspace(1)* %1, i64 %extract301vector_func.i
  %517 = getelementptr inbounds float addrspace(1)* %1, i64 %extract302vector_func.i
  %518 = getelementptr inbounds float addrspace(1)* %1, i64 %extract303vector_func.i
  %519 = getelementptr inbounds float addrspace(1)* %1, i64 %extract304vector_func.i
  %520 = load float addrspace(1)* %504, align 4
  %521 = load float addrspace(1)* %505, align 4
  %522 = load float addrspace(1)* %506, align 4
  %523 = load float addrspace(1)* %507, align 4
  %524 = load float addrspace(1)* %508, align 4
  %525 = load float addrspace(1)* %509, align 4
  %526 = load float addrspace(1)* %510, align 4
  %527 = load float addrspace(1)* %511, align 4
  %528 = load float addrspace(1)* %512, align 4
  %529 = load float addrspace(1)* %513, align 4
  %530 = load float addrspace(1)* %514, align 4
  %531 = load float addrspace(1)* %515, align 4
  %532 = load float addrspace(1)* %516, align 4
  %533 = load float addrspace(1)* %517, align 4
  %534 = load float addrspace(1)* %518, align 4
  %535 = load float addrspace(1)* %519, align 4
  %temp.vect558vector_func.i = insertelement <16 x float> undef, float %520, i32 0
  %temp.vect559vector_func.i = insertelement <16 x float> %temp.vect558vector_func.i, float %521, i32 1
  %temp.vect560vector_func.i = insertelement <16 x float> %temp.vect559vector_func.i, float %522, i32 2
  %temp.vect561vector_func.i = insertelement <16 x float> %temp.vect560vector_func.i, float %523, i32 3
  %temp.vect562vector_func.i = insertelement <16 x float> %temp.vect561vector_func.i, float %524, i32 4
  %temp.vect563vector_func.i = insertelement <16 x float> %temp.vect562vector_func.i, float %525, i32 5
  %temp.vect564vector_func.i = insertelement <16 x float> %temp.vect563vector_func.i, float %526, i32 6
  %temp.vect565vector_func.i = insertelement <16 x float> %temp.vect564vector_func.i, float %527, i32 7
  %temp.vect566vector_func.i = insertelement <16 x float> %temp.vect565vector_func.i, float %528, i32 8
  %temp.vect567vector_func.i = insertelement <16 x float> %temp.vect566vector_func.i, float %529, i32 9
  %temp.vect568vector_func.i = insertelement <16 x float> %temp.vect567vector_func.i, float %530, i32 10
  %temp.vect569vector_func.i = insertelement <16 x float> %temp.vect568vector_func.i, float %531, i32 11
  %temp.vect570vector_func.i = insertelement <16 x float> %temp.vect569vector_func.i, float %532, i32 12
  %temp.vect571vector_func.i = insertelement <16 x float> %temp.vect570vector_func.i, float %533, i32 13
  %temp.vect572vector_func.i = insertelement <16 x float> %temp.vect571vector_func.i, float %534, i32 14
  %temp.vect573vector_func.i = insertelement <16 x float> %temp.vect572vector_func.i, float %535, i32 15
  %add81336vector_func.i = fadd <16 x float> %temp.vect319vector_func.i, %temp.vect335vector_func.i
  %add82353vector_func.i = fadd <16 x float> %add81336vector_func.i, %temp.vect352vector_func.i
  %add83370vector_func.i = fadd <16 x float> %add82353vector_func.i, %temp.vect369vector_func.i
  %add84387vector_func.i = fadd <16 x float> %add83370vector_func.i, %temp.vect386vector_func.i
  %add85404vector_func.i = fadd <16 x float> %add84387vector_func.i, %temp.vect403vector_func.i
  %add86421vector_func.i = fadd <16 x float> %add85404vector_func.i, %temp.vect420vector_func.i
  %add87438vector_func.i = fadd <16 x float> %add86421vector_func.i, %temp.vect437vector_func.i
  %add88455vector_func.i = fadd <16 x float> %add87438vector_func.i, %temp.vect454vector_func.i
  %add89472vector_func.i = fadd <16 x float> %add88455vector_func.i, %temp.vect471vector_func.i
  %add90489vector_func.i = fadd <16 x float> %add89472vector_func.i, %temp.vect488vector_func.i
  %add91506vector_func.i = fadd <16 x float> %add90489vector_func.i, %temp.vect505vector_func.i
  %add92523vector_func.i = fadd <16 x float> %add91506vector_func.i, %temp.vect522vector_func.i
  %add93540vector_func.i = fadd <16 x float> %add92523vector_func.i, %temp.vect539vector_func.i
  %add94557vector_func.i = fadd <16 x float> %add93540vector_func.i, %temp.vect556vector_func.i
  %add95574vector_func.i = fadd <16 x float> %add94557vector_func.i, %temp.vect573vector_func.i
  %add96575vector_func.i = fadd <16 x float> %vectorPHI2vector_func.i, %add95574vector_func.i
  %add97576vector_func.i = add nsw <16 x i32> %vectorPHIvector_func.i, <i32 512, i32 512, i32 512, i32 512, i32 512, i32 512, i32 512, i32 512, i32 512, i32 512, i32 512, i32 512, i32 512, i32 512, i32 512, i32 512>
  %and99577vector_func.i = and <16 x i32> %add97576vector_func.i, %vectorvector_func.i
  %incvector_func.i = add nsw i32 %j.01vector_func.i, 1
  %exitcondvector_func.i = icmp eq i32 %incvector_func.i, 1024
  br i1 %exitcondvector_func.i, label %for.endvector_func.i, label %for.bodyvector_func.i

for.endvector_func.i:                             ; preds = %for.bodyvector_func.i
  %536 = extractelement <16 x i32> %conv1vector_func.i, i32 0
  %extract579vector_func.i = sext i32 %536 to i64
  %537 = getelementptr inbounds float addrspace(1)* %4, i64 %extract579vector_func.i
  %ptrTypeCastvector_func.i = bitcast float addrspace(1)* %537 to <16 x float> addrspace(1)*
  store <16 x float> %add96575vector_func.i, <16 x float> addrspace(1)* %ptrTypeCastvector_func.i, align 4
  %dim_0_vector_inc_ind_var.i = add i64 %dim_0_vector_ind_var.i, 1
  %dim_0_vector_cmp.to.max.i = icmp eq i64 %dim_0_vector_inc_ind_var.i, %vector.size.i
  %dim_0_vector_inc_tid.i = add i64 %dim_0_vector_tid.i, 16
  br i1 %dim_0_vector_cmp.to.max.i, label %dim_0_vector_exit.i, label %entryvector_func.i

dim_0_vector_exit.i:                              ; preds = %for.endvector_func.i
  %dim_1_vector_inc_ind_var.i = add i64 %dim_1_vector_ind_var.i, 1
  %dim_1_vector_cmp.to.max.i = icmp eq i64 %dim_1_vector_inc_ind_var.i, %19
  br i1 %dim_1_vector_cmp.to.max.i, label %dim_1_vector_exit.i, label %dim_0_vector_pre_head.i

dim_1_vector_exit.i:                              ; preds = %dim_0_vector_exit.i
  %dim_2_vector_inc_ind_var.i = add i64 %dim_2_vector_ind_var.i, 1
  %dim_2_vector_cmp.to.max.i = icmp eq i64 %dim_2_vector_inc_ind_var.i, %21
  br i1 %dim_2_vector_cmp.to.max.i, label %scalarIf.i, label %dim_1_vector_pre_head.i

scalarIf.i:                                       ; preds = %dim_1_vector_exit.i, %entry
  %538 = icmp eq i64 %15, %num.vector.wi.i
  br i1 %538, label %__readGlobalMemoryCoalesced_separated_args.exit, label %dim_2_pre_head.i

dim_2_pre_head.i:                                 ; preds = %scalarIf.i
  %sub.i = add nsw i32 %7, -1
  br label %dim_1_pre_head.i

dim_1_pre_head.i:                                 ; preds = %dim_1_exit.i, %dim_2_pre_head.i
  %dim_2_ind_var.i = phi i64 [ 0, %dim_2_pre_head.i ], [ %dim_2_inc_ind_var.i, %dim_1_exit.i ]
  br label %dim_0_pre_head.i

dim_0_pre_head.i:                                 ; preds = %dim_0_exit.i, %dim_1_pre_head.i
  %dim_1_ind_var.i = phi i64 [ 0, %dim_1_pre_head.i ], [ %dim_1_inc_ind_var.i, %dim_0_exit.i ]
  br label %scalar_kernel_entry.i

scalar_kernel_entry.i:                            ; preds = %for.end.i, %dim_0_pre_head.i
  %dim_0_ind_var.i = phi i64 [ 0, %dim_0_pre_head.i ], [ %dim_0_inc_ind_var.i, %for.end.i ]
  %dim_0_tid.i = phi i64 [ %max.vector.gid.i, %dim_0_pre_head.i ], [ %dim_0_inc_tid.i, %for.end.i ]
  %conv.i = trunc i64 %dim_0_tid.i to i32
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %scalar_kernel_entry.i
  %s.03.i = phi i32 [ %conv.i, %scalar_kernel_entry.i ], [ %and99.i, %for.body.i ]
  %sum.02.i = phi float [ 0.000000e+00, %scalar_kernel_entry.i ], [ %add96.i, %for.body.i ]
  %j.01.i = phi i32 [ 0, %scalar_kernel_entry.i ], [ %inc.i, %for.body.i ]
  %and.i = and i32 %s.03.i, %sub.i
  %idxprom.i = sext i32 %and.i to i64
  %arrayidx.i = getelementptr inbounds float addrspace(1)* %1, i64 %idxprom.i
  %539 = load float addrspace(1)* %arrayidx.i, align 4
  %add6.i = add nsw i32 %s.03.i, 32
  %and8.i = and i32 %add6.i, %sub.i
  %idxprom9.i = sext i32 %and8.i to i64
  %arrayidx10.i = getelementptr inbounds float addrspace(1)* %1, i64 %idxprom9.i
  %540 = load float addrspace(1)* %arrayidx10.i, align 4
  %add11.i = add nsw i32 %s.03.i, 64
  %and13.i = and i32 %add11.i, %sub.i
  %idxprom14.i = sext i32 %and13.i to i64
  %arrayidx15.i = getelementptr inbounds float addrspace(1)* %1, i64 %idxprom14.i
  %541 = load float addrspace(1)* %arrayidx15.i, align 4
  %add16.i = add nsw i32 %s.03.i, 96
  %and18.i = and i32 %add16.i, %sub.i
  %idxprom19.i = sext i32 %and18.i to i64
  %arrayidx20.i = getelementptr inbounds float addrspace(1)* %1, i64 %idxprom19.i
  %542 = load float addrspace(1)* %arrayidx20.i, align 4
  %add21.i = add nsw i32 %s.03.i, 128
  %and23.i = and i32 %add21.i, %sub.i
  %idxprom24.i = sext i32 %and23.i to i64
  %arrayidx25.i = getelementptr inbounds float addrspace(1)* %1, i64 %idxprom24.i
  %543 = load float addrspace(1)* %arrayidx25.i, align 4
  %add26.i = add nsw i32 %s.03.i, 160
  %and28.i = and i32 %add26.i, %sub.i
  %idxprom29.i = sext i32 %and28.i to i64
  %arrayidx30.i = getelementptr inbounds float addrspace(1)* %1, i64 %idxprom29.i
  %544 = load float addrspace(1)* %arrayidx30.i, align 4
  %add31.i = add nsw i32 %s.03.i, 192
  %and33.i = and i32 %add31.i, %sub.i
  %idxprom34.i = sext i32 %and33.i to i64
  %arrayidx35.i = getelementptr inbounds float addrspace(1)* %1, i64 %idxprom34.i
  %545 = load float addrspace(1)* %arrayidx35.i, align 4
  %add36.i = add nsw i32 %s.03.i, 224
  %and38.i = and i32 %add36.i, %sub.i
  %idxprom39.i = sext i32 %and38.i to i64
  %arrayidx40.i = getelementptr inbounds float addrspace(1)* %1, i64 %idxprom39.i
  %546 = load float addrspace(1)* %arrayidx40.i, align 4
  %add41.i = add nsw i32 %s.03.i, 256
  %and43.i = and i32 %add41.i, %sub.i
  %idxprom44.i = sext i32 %and43.i to i64
  %arrayidx45.i = getelementptr inbounds float addrspace(1)* %1, i64 %idxprom44.i
  %547 = load float addrspace(1)* %arrayidx45.i, align 4
  %add46.i = add nsw i32 %s.03.i, 288
  %and48.i = and i32 %add46.i, %sub.i
  %idxprom49.i = sext i32 %and48.i to i64
  %arrayidx50.i = getelementptr inbounds float addrspace(1)* %1, i64 %idxprom49.i
  %548 = load float addrspace(1)* %arrayidx50.i, align 4
  %add51.i = add nsw i32 %s.03.i, 320
  %and53.i = and i32 %add51.i, %sub.i
  %idxprom54.i = sext i32 %and53.i to i64
  %arrayidx55.i = getelementptr inbounds float addrspace(1)* %1, i64 %idxprom54.i
  %549 = load float addrspace(1)* %arrayidx55.i, align 4
  %add56.i = add nsw i32 %s.03.i, 352
  %and58.i = and i32 %add56.i, %sub.i
  %idxprom59.i = sext i32 %and58.i to i64
  %arrayidx60.i = getelementptr inbounds float addrspace(1)* %1, i64 %idxprom59.i
  %550 = load float addrspace(1)* %arrayidx60.i, align 4
  %add61.i = add nsw i32 %s.03.i, 384
  %and63.i = and i32 %add61.i, %sub.i
  %idxprom64.i = sext i32 %and63.i to i64
  %arrayidx65.i = getelementptr inbounds float addrspace(1)* %1, i64 %idxprom64.i
  %551 = load float addrspace(1)* %arrayidx65.i, align 4
  %add66.i = add nsw i32 %s.03.i, 416
  %and68.i = and i32 %add66.i, %sub.i
  %idxprom69.i = sext i32 %and68.i to i64
  %arrayidx70.i = getelementptr inbounds float addrspace(1)* %1, i64 %idxprom69.i
  %552 = load float addrspace(1)* %arrayidx70.i, align 4
  %add71.i = add nsw i32 %s.03.i, 448
  %and73.i = and i32 %add71.i, %sub.i
  %idxprom74.i = sext i32 %and73.i to i64
  %arrayidx75.i = getelementptr inbounds float addrspace(1)* %1, i64 %idxprom74.i
  %553 = load float addrspace(1)* %arrayidx75.i, align 4
  %add76.i = add nsw i32 %s.03.i, 480
  %and78.i = and i32 %add76.i, %sub.i
  %idxprom79.i = sext i32 %and78.i to i64
  %arrayidx80.i = getelementptr inbounds float addrspace(1)* %1, i64 %idxprom79.i
  %554 = load float addrspace(1)* %arrayidx80.i, align 4
  %add81.i = fadd float %539, %540
  %add82.i = fadd float %add81.i, %541
  %add83.i = fadd float %add82.i, %542
  %add84.i = fadd float %add83.i, %543
  %add85.i = fadd float %add84.i, %544
  %add86.i = fadd float %add85.i, %545
  %add87.i = fadd float %add86.i, %546
  %add88.i = fadd float %add87.i, %547
  %add89.i = fadd float %add88.i, %548
  %add90.i = fadd float %add89.i, %549
  %add91.i = fadd float %add90.i, %550
  %add92.i = fadd float %add91.i, %551
  %add93.i = fadd float %add92.i, %552
  %add94.i = fadd float %add93.i, %553
  %add95.i = fadd float %add94.i, %554
  %add96.i = fadd float %sum.02.i, %add95.i
  %add97.i = add nsw i32 %s.03.i, 512
  %and99.i = and i32 %add97.i, %sub.i
  %inc.i = add nsw i32 %j.01.i, 1
  %exitcond.i = icmp eq i32 %inc.i, 1024
  br i1 %exitcond.i, label %for.end.i, label %for.body.i

for.end.i:                                        ; preds = %for.body.i
  %idxprom100.i = sext i32 %conv.i to i64
  %arrayidx101.i = getelementptr inbounds float addrspace(1)* %4, i64 %idxprom100.i
  store float %add96.i, float addrspace(1)* %arrayidx101.i, align 4
  %dim_0_inc_ind_var.i = add i64 %dim_0_ind_var.i, 1
  %dim_0_cmp.to.max.i = icmp eq i64 %dim_0_inc_ind_var.i, %scalar.size.i
  %dim_0_inc_tid.i = add i64 %dim_0_tid.i, 1
  br i1 %dim_0_cmp.to.max.i, label %dim_0_exit.i, label %scalar_kernel_entry.i

dim_0_exit.i:                                     ; preds = %for.end.i
  %dim_1_inc_ind_var.i = add i64 %dim_1_ind_var.i, 1
  %dim_1_cmp.to.max.i = icmp eq i64 %dim_1_inc_ind_var.i, %19
  br i1 %dim_1_cmp.to.max.i, label %dim_1_exit.i, label %dim_0_pre_head.i

dim_1_exit.i:                                     ; preds = %dim_0_exit.i
  %dim_2_inc_ind_var.i = add i64 %dim_2_ind_var.i, 1
  %dim_2_cmp.to.max.i = icmp eq i64 %dim_2_inc_ind_var.i, %21
  br i1 %dim_2_cmp.to.max.i, label %__readGlobalMemoryCoalesced_separated_args.exit, label %dim_1_pre_head.i

__readGlobalMemoryCoalesced_separated_args.exit:  ; preds = %scalarIf.i, %dim_1_exit.i
  ret void
}

!opencl.kernels = !{!0}
!opencl.build.options = !{!2}
!cl.noBarrierPath.kernels = !{!3}
!opencl.wrappers = !{!4}

!0 = metadata !{void (float addrspace(1)*, float addrspace(1)*, i32, i8 addrspace(3)*, { i32, [3 x i64], [3 x i64], [3 x i64], [3 x i64] }*, i64*, <{ [4 x i64] }>*, <{ [4 x i64] }>*, i64*, i64, i8*, i64*)* @__readGlobalMemoryCoalesced_separated_args, metadata !1}
!1 = metadata !{metadata !"image_access_qualifier", i32 3, i32 3, i32 3}
!2 = metadata !{}
!3 = metadata !{metadata !"readGlobalMemoryCoalesced"}
!4 = metadata !{void (i8*)* @readGlobalMemoryCoalesced}
