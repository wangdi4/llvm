; XFAIL: *
; XFAIL: win32
;
; RUN: llc < %s -mtriple=x86_64-pc-linux \
; RUN:       -march=y86-64 -mcpu=knc
;
;
; ModuleID = 'Program'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64"
target triple = "x86_64-unknown-linux-gnu"

%struct.PaddedDimId = type <{ [4 x i64] }>
%struct.WorkDim = type { i32, [3 x i64], [3 x i64], [3 x i64], [3 x i64] }

declare void @__MAdd1_original(float addrspace(1)* nocapture, i32) nounwind

declare i64 @get_global_id(i32)

declare i64 @get_global_size(i32)

declare void @dummybarrier.()

declare void @barrier(i64)

declare i8* @get_special_buffer.()

declare i64 @get_iter_count.()

declare i64 @get_new_global_id.(i32, i64)

define void @__MAdd1_separated_args(float addrspace(1)* nocapture %data, i32 %nIters, i8 addrspace(3)* %pLocalMem, %struct.WorkDim* %pWorkDim, i64* %pWGId, %struct.PaddedDimId* %pBaseGlbId, %struct.PaddedDimId* %pLocalIds, i64* %contextpointer, i64 %iterCount, i8* %pSpecialBuf, i64* %pCurrWI) nounwind alwaysinline {
FirstBB:
  %0 = icmp sgt i32 %nIters, 0
  br label %SyncBB3

SyncBB3:                                          ; preds = %thenBB, %FirstBB
  %CurrWI..0 = phi i64 [ 0, %FirstBB ], [ %"CurrWI++", %thenBB ]
  %1 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2 = load i64* %1, align 8
  %3 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %4 = load i64* %3, align 8
  %5 = add i64 %2, %4
  %sext = shl i64 %5, 32
  %6 = ashr i64 %sext, 32
  %7 = getelementptr inbounds float addrspace(1)* %data, i64 %6
  %8 = load float addrspace(1)* %7, align 4
  br i1 %0, label %bb.nph, label %._crit_edge

bb.nph:                                           ; preds = %SyncBB3, %bb.nph
  %j.02 = phi i32 [ %289, %bb.nph ], [ 0, %SyncBB3 ]
  %s.01 = phi float [ %288, %bb.nph ], [ %8, %SyncBB3 ]
  %9 = fpext float %s.01 to double
  %10 = fmul double %9, 9.899000e-01
  %11 = fsub double 1.000000e+01, %10
  %12 = fptrunc double %11 to float
  %13 = fpext float %12 to double
  %14 = fmul double %13, 9.899000e-01
  %15 = fsub double 1.000000e+01, %14
  %16 = fptrunc double %15 to float
  %17 = fpext float %16 to double
  %18 = fmul double %17, 9.899000e-01
  %19 = fsub double 1.000000e+01, %18
  %20 = fptrunc double %19 to float
  %21 = fpext float %20 to double
  %22 = fmul double %21, 9.899000e-01
  %23 = fsub double 1.000000e+01, %22
  %24 = fptrunc double %23 to float
  %25 = fpext float %24 to double
  %26 = fmul double %25, 9.899000e-01
  %27 = fsub double 1.000000e+01, %26
  %28 = fptrunc double %27 to float
  %29 = fpext float %28 to double
  %30 = fmul double %29, 9.899000e-01
  %31 = fsub double 1.000000e+01, %30
  %32 = fptrunc double %31 to float
  %33 = fpext float %32 to double
  %34 = fmul double %33, 9.899000e-01
  %35 = fsub double 1.000000e+01, %34
  %36 = fptrunc double %35 to float
  %37 = fpext float %36 to double
  %38 = fmul double %37, 9.899000e-01
  %39 = fsub double 1.000000e+01, %38
  %40 = fptrunc double %39 to float
  %41 = fpext float %40 to double
  %42 = fmul double %41, 9.899000e-01
  %43 = fsub double 1.000000e+01, %42
  %44 = fptrunc double %43 to float
  %45 = fpext float %44 to double
  %46 = fmul double %45, 9.899000e-01
  %47 = fsub double 1.000000e+01, %46
  %48 = fptrunc double %47 to float
  %49 = fpext float %48 to double
  %50 = fmul double %49, 9.899000e-01
  %51 = fsub double 1.000000e+01, %50
  %52 = fptrunc double %51 to float
  %53 = fpext float %52 to double
  %54 = fmul double %53, 9.899000e-01
  %55 = fsub double 1.000000e+01, %54
  %56 = fptrunc double %55 to float
  %57 = fpext float %56 to double
  %58 = fmul double %57, 9.899000e-01
  %59 = fsub double 1.000000e+01, %58
  %60 = fptrunc double %59 to float
  %61 = fpext float %60 to double
  %62 = fmul double %61, 9.899000e-01
  %63 = fsub double 1.000000e+01, %62
  %64 = fptrunc double %63 to float
  %65 = fpext float %64 to double
  %66 = fmul double %65, 9.899000e-01
  %67 = fsub double 1.000000e+01, %66
  %68 = fptrunc double %67 to float
  %69 = fpext float %68 to double
  %70 = fmul double %69, 9.899000e-01
  %71 = fsub double 1.000000e+01, %70
  %72 = fptrunc double %71 to float
  %73 = fpext float %72 to double
  %74 = fmul double %73, 9.899000e-01
  %75 = fsub double 1.000000e+01, %74
  %76 = fptrunc double %75 to float
  %77 = fpext float %76 to double
  %78 = fmul double %77, 9.899000e-01
  %79 = fsub double 1.000000e+01, %78
  %80 = fptrunc double %79 to float
  %81 = fpext float %80 to double
  %82 = fmul double %81, 9.899000e-01
  %83 = fsub double 1.000000e+01, %82
  %84 = fptrunc double %83 to float
  %85 = fpext float %84 to double
  %86 = fmul double %85, 9.899000e-01
  %87 = fsub double 1.000000e+01, %86
  %88 = fptrunc double %87 to float
  %89 = fpext float %88 to double
  %90 = fmul double %89, 9.899000e-01
  %91 = fsub double 1.000000e+01, %90
  %92 = fptrunc double %91 to float
  %93 = fpext float %92 to double
  %94 = fmul double %93, 9.899000e-01
  %95 = fsub double 1.000000e+01, %94
  %96 = fptrunc double %95 to float
  %97 = fpext float %96 to double
  %98 = fmul double %97, 9.899000e-01
  %99 = fsub double 1.000000e+01, %98
  %100 = fptrunc double %99 to float
  %101 = fpext float %100 to double
  %102 = fmul double %101, 9.899000e-01
  %103 = fsub double 1.000000e+01, %102
  %104 = fptrunc double %103 to float
  %105 = fpext float %104 to double
  %106 = fmul double %105, 9.899000e-01
  %107 = fsub double 1.000000e+01, %106
  %108 = fptrunc double %107 to float
  %109 = fpext float %108 to double
  %110 = fmul double %109, 9.899000e-01
  %111 = fsub double 1.000000e+01, %110
  %112 = fptrunc double %111 to float
  %113 = fpext float %112 to double
  %114 = fmul double %113, 9.899000e-01
  %115 = fsub double 1.000000e+01, %114
  %116 = fptrunc double %115 to float
  %117 = fpext float %116 to double
  %118 = fmul double %117, 9.899000e-01
  %119 = fsub double 1.000000e+01, %118
  %120 = fptrunc double %119 to float
  %121 = fpext float %120 to double
  %122 = fmul double %121, 9.899000e-01
  %123 = fsub double 1.000000e+01, %122
  %124 = fptrunc double %123 to float
  %125 = fpext float %124 to double
  %126 = fmul double %125, 9.899000e-01
  %127 = fsub double 1.000000e+01, %126
  %128 = fptrunc double %127 to float
  %129 = fpext float %128 to double
  %130 = fmul double %129, 9.899000e-01
  %131 = fsub double 1.000000e+01, %130
  %132 = fptrunc double %131 to float
  %133 = fpext float %132 to double
  %134 = fmul double %133, 9.899000e-01
  %135 = fsub double 1.000000e+01, %134
  %136 = fptrunc double %135 to float
  %137 = fpext float %136 to double
  %138 = fmul double %137, 9.899000e-01
  %139 = fsub double 1.000000e+01, %138
  %140 = fptrunc double %139 to float
  %141 = fpext float %140 to double
  %142 = fmul double %141, 9.899000e-01
  %143 = fsub double 1.000000e+01, %142
  %144 = fptrunc double %143 to float
  %145 = fpext float %144 to double
  %146 = fmul double %145, 9.899000e-01
  %147 = fsub double 1.000000e+01, %146
  %148 = fptrunc double %147 to float
  %149 = fpext float %148 to double
  %150 = fmul double %149, 9.899000e-01
  %151 = fsub double 1.000000e+01, %150
  %152 = fptrunc double %151 to float
  %153 = fpext float %152 to double
  %154 = fmul double %153, 9.899000e-01
  %155 = fsub double 1.000000e+01, %154
  %156 = fptrunc double %155 to float
  %157 = fpext float %156 to double
  %158 = fmul double %157, 9.899000e-01
  %159 = fsub double 1.000000e+01, %158
  %160 = fptrunc double %159 to float
  %161 = fpext float %160 to double
  %162 = fmul double %161, 9.899000e-01
  %163 = fsub double 1.000000e+01, %162
  %164 = fptrunc double %163 to float
  %165 = fpext float %164 to double
  %166 = fmul double %165, 9.899000e-01
  %167 = fsub double 1.000000e+01, %166
  %168 = fptrunc double %167 to float
  %169 = fpext float %168 to double
  %170 = fmul double %169, 9.899000e-01
  %171 = fsub double 1.000000e+01, %170
  %172 = fptrunc double %171 to float
  %173 = fpext float %172 to double
  %174 = fmul double %173, 9.899000e-01
  %175 = fsub double 1.000000e+01, %174
  %176 = fptrunc double %175 to float
  %177 = fpext float %176 to double
  %178 = fmul double %177, 9.899000e-01
  %179 = fsub double 1.000000e+01, %178
  %180 = fptrunc double %179 to float
  %181 = fpext float %180 to double
  %182 = fmul double %181, 9.899000e-01
  %183 = fsub double 1.000000e+01, %182
  %184 = fptrunc double %183 to float
  %185 = fpext float %184 to double
  %186 = fmul double %185, 9.899000e-01
  %187 = fsub double 1.000000e+01, %186
  %188 = fptrunc double %187 to float
  %189 = fpext float %188 to double
  %190 = fmul double %189, 9.899000e-01
  %191 = fsub double 1.000000e+01, %190
  %192 = fptrunc double %191 to float
  %193 = fpext float %192 to double
  %194 = fmul double %193, 9.899000e-01
  %195 = fsub double 1.000000e+01, %194
  %196 = fptrunc double %195 to float
  %197 = fpext float %196 to double
  %198 = fmul double %197, 9.899000e-01
  %199 = fsub double 1.000000e+01, %198
  %200 = fptrunc double %199 to float
  %201 = fpext float %200 to double
  %202 = fmul double %201, 9.899000e-01
  %203 = fsub double 1.000000e+01, %202
  %204 = fptrunc double %203 to float
  %205 = fpext float %204 to double
  %206 = fmul double %205, 9.899000e-01
  %207 = fsub double 1.000000e+01, %206
  %208 = fptrunc double %207 to float
  %209 = fpext float %208 to double
  %210 = fmul double %209, 9.899000e-01
  %211 = fsub double 1.000000e+01, %210
  %212 = fptrunc double %211 to float
  %213 = fpext float %212 to double
  %214 = fmul double %213, 9.899000e-01
  %215 = fsub double 1.000000e+01, %214
  %216 = fptrunc double %215 to float
  %217 = fpext float %216 to double
  %218 = fmul double %217, 9.899000e-01
  %219 = fsub double 1.000000e+01, %218
  %220 = fptrunc double %219 to float
  %221 = fpext float %220 to double
  %222 = fmul double %221, 9.899000e-01
  %223 = fsub double 1.000000e+01, %222
  %224 = fptrunc double %223 to float
  %225 = fpext float %224 to double
  %226 = fmul double %225, 9.899000e-01
  %227 = fsub double 1.000000e+01, %226
  %228 = fptrunc double %227 to float
  %229 = fpext float %228 to double
  %230 = fmul double %229, 9.899000e-01
  %231 = fsub double 1.000000e+01, %230
  %232 = fptrunc double %231 to float
  %233 = fpext float %232 to double
  %234 = fmul double %233, 9.899000e-01
  %235 = fsub double 1.000000e+01, %234
  %236 = fptrunc double %235 to float
  %237 = fpext float %236 to double
  %238 = fmul double %237, 9.899000e-01
  %239 = fsub double 1.000000e+01, %238
  %240 = fptrunc double %239 to float
  %241 = fpext float %240 to double
  %242 = fmul double %241, 9.899000e-01
  %243 = fsub double 1.000000e+01, %242
  %244 = fptrunc double %243 to float
  %245 = fpext float %244 to double
  %246 = fmul double %245, 9.899000e-01
  %247 = fsub double 1.000000e+01, %246
  %248 = fptrunc double %247 to float
  %249 = fpext float %248 to double
  %250 = fmul double %249, 9.899000e-01
  %251 = fsub double 1.000000e+01, %250
  %252 = fptrunc double %251 to float
  %253 = fpext float %252 to double
  %254 = fmul double %253, 9.899000e-01
  %255 = fsub double 1.000000e+01, %254
  %256 = fptrunc double %255 to float
  %257 = fpext float %256 to double
  %258 = fmul double %257, 9.899000e-01
  %259 = fsub double 1.000000e+01, %258
  %260 = fptrunc double %259 to float
  %261 = fpext float %260 to double
  %262 = fmul double %261, 9.899000e-01
  %263 = fsub double 1.000000e+01, %262
  %264 = fptrunc double %263 to float
  %265 = fpext float %264 to double
  %266 = fmul double %265, 9.899000e-01
  %267 = fsub double 1.000000e+01, %266
  %268 = fptrunc double %267 to float
  %269 = fpext float %268 to double
  %270 = fmul double %269, 9.899000e-01
  %271 = fsub double 1.000000e+01, %270
  %272 = fptrunc double %271 to float
  %273 = fpext float %272 to double
  %274 = fmul double %273, 9.899000e-01
  %275 = fsub double 1.000000e+01, %274
  %276 = fptrunc double %275 to float
  %277 = fpext float %276 to double
  %278 = fmul double %277, 9.899000e-01
  %279 = fsub double 1.000000e+01, %278
  %280 = fptrunc double %279 to float
  %281 = fpext float %280 to double
  %282 = fmul double %281, 9.899000e-01
  %283 = fsub double 1.000000e+01, %282
  %284 = fptrunc double %283 to float
  %285 = fpext float %284 to double
  %286 = fmul double %285, 9.899000e-01
  %287 = fsub double 1.000000e+01, %286
  %288 = fptrunc double %287 to float
  %289 = add nsw i32 %j.02, 1
  %exitcond = icmp eq i32 %289, %nIters
  br i1 %exitcond, label %._crit_edge, label %bb.nph

._crit_edge:                                      ; preds = %bb.nph, %SyncBB3
  %s.0.lcssa = phi float [ %8, %SyncBB3 ], [ %288, %bb.nph ]
  store float %s.0.lcssa, float addrspace(1)* %7, align 4
  %check.WI.iter = icmp ult i64 %CurrWI..0, %iterCount
  br i1 %check.WI.iter, label %thenBB, label %SyncBB

thenBB:                                           ; preds = %._crit_edge
  %"CurrWI++" = add nuw i64 %CurrWI..0, 1
  br label %SyncBB3

SyncBB:                                           ; preds = %._crit_edge
  ret void
}

define void @MAdd1(i8* %pBuffer) {
entry:
  %0 = bitcast i8* %pBuffer to float addrspace(1)**
  %1 = load float addrspace(1)** %0, align 8
  %2 = getelementptr i8* %pBuffer, i64 8
  %3 = bitcast i8* %2 to i32*
  %4 = load i32* %3, align 4
  %5 = getelementptr i8* %pBuffer, i64 40
  %6 = bitcast i8* %5 to %struct.PaddedDimId**
  %7 = load %struct.PaddedDimId** %6, align 8
  %8 = getelementptr i8* %pBuffer, i64 48
  %9 = bitcast i8* %8 to %struct.PaddedDimId**
  %10 = load %struct.PaddedDimId** %9, align 8
  %11 = getelementptr i8* %pBuffer, i64 64
  %12 = bitcast i8* %11 to i64*
  %13 = load i64* %12, align 8
  %14 = icmp sgt i32 %4, 0
  br label %SyncBB3.i

SyncBB3.i:                                        ; preds = %thenBB.i, %entry
  %CurrWI..0.i = phi i64 [ 0, %entry ], [ %"CurrWI++.i", %thenBB.i ]
  %15 = getelementptr %struct.PaddedDimId* %10, i64 %CurrWI..0.i, i32 0, i64 0
  %16 = load i64* %15, align 8
  %17 = getelementptr %struct.PaddedDimId* %7, i64 0, i32 0, i64 0
  %18 = load i64* %17, align 8
  %19 = add i64 %16, %18
  %sext.i = shl i64 %19, 32
  %20 = ashr i64 %sext.i, 32
  %21 = getelementptr inbounds float addrspace(1)* %1, i64 %20
  %22 = load float addrspace(1)* %21, align 4
  br i1 %14, label %bb.nph.i, label %._crit_edge.i

bb.nph.i:                                         ; preds = %bb.nph.i, %SyncBB3.i
  %j.02.i = phi i32 [ %303, %bb.nph.i ], [ 0, %SyncBB3.i ]
  %s.01.i = phi float [ %302, %bb.nph.i ], [ %22, %SyncBB3.i ]
  %23 = fpext float %s.01.i to double
  %24 = fmul double %23, 9.899000e-01
  %25 = fsub double 1.000000e+01, %24
  %26 = fptrunc double %25 to float
  %27 = fpext float %26 to double
  %28 = fmul double %27, 9.899000e-01
  %29 = fsub double 1.000000e+01, %28
  %30 = fptrunc double %29 to float
  %31 = fpext float %30 to double
  %32 = fmul double %31, 9.899000e-01
  %33 = fsub double 1.000000e+01, %32
  %34 = fptrunc double %33 to float
  %35 = fpext float %34 to double
  %36 = fmul double %35, 9.899000e-01
  %37 = fsub double 1.000000e+01, %36
  %38 = fptrunc double %37 to float
  %39 = fpext float %38 to double
  %40 = fmul double %39, 9.899000e-01
  %41 = fsub double 1.000000e+01, %40
  %42 = fptrunc double %41 to float
  %43 = fpext float %42 to double
  %44 = fmul double %43, 9.899000e-01
  %45 = fsub double 1.000000e+01, %44
  %46 = fptrunc double %45 to float
  %47 = fpext float %46 to double
  %48 = fmul double %47, 9.899000e-01
  %49 = fsub double 1.000000e+01, %48
  %50 = fptrunc double %49 to float
  %51 = fpext float %50 to double
  %52 = fmul double %51, 9.899000e-01
  %53 = fsub double 1.000000e+01, %52
  %54 = fptrunc double %53 to float
  %55 = fpext float %54 to double
  %56 = fmul double %55, 9.899000e-01
  %57 = fsub double 1.000000e+01, %56
  %58 = fptrunc double %57 to float
  %59 = fpext float %58 to double
  %60 = fmul double %59, 9.899000e-01
  %61 = fsub double 1.000000e+01, %60
  %62 = fptrunc double %61 to float
  %63 = fpext float %62 to double
  %64 = fmul double %63, 9.899000e-01
  %65 = fsub double 1.000000e+01, %64
  %66 = fptrunc double %65 to float
  %67 = fpext float %66 to double
  %68 = fmul double %67, 9.899000e-01
  %69 = fsub double 1.000000e+01, %68
  %70 = fptrunc double %69 to float
  %71 = fpext float %70 to double
  %72 = fmul double %71, 9.899000e-01
  %73 = fsub double 1.000000e+01, %72
  %74 = fptrunc double %73 to float
  %75 = fpext float %74 to double
  %76 = fmul double %75, 9.899000e-01
  %77 = fsub double 1.000000e+01, %76
  %78 = fptrunc double %77 to float
  %79 = fpext float %78 to double
  %80 = fmul double %79, 9.899000e-01
  %81 = fsub double 1.000000e+01, %80
  %82 = fptrunc double %81 to float
  %83 = fpext float %82 to double
  %84 = fmul double %83, 9.899000e-01
  %85 = fsub double 1.000000e+01, %84
  %86 = fptrunc double %85 to float
  %87 = fpext float %86 to double
  %88 = fmul double %87, 9.899000e-01
  %89 = fsub double 1.000000e+01, %88
  %90 = fptrunc double %89 to float
  %91 = fpext float %90 to double
  %92 = fmul double %91, 9.899000e-01
  %93 = fsub double 1.000000e+01, %92
  %94 = fptrunc double %93 to float
  %95 = fpext float %94 to double
  %96 = fmul double %95, 9.899000e-01
  %97 = fsub double 1.000000e+01, %96
  %98 = fptrunc double %97 to float
  %99 = fpext float %98 to double
  %100 = fmul double %99, 9.899000e-01
  %101 = fsub double 1.000000e+01, %100
  %102 = fptrunc double %101 to float
  %103 = fpext float %102 to double
  %104 = fmul double %103, 9.899000e-01
  %105 = fsub double 1.000000e+01, %104
  %106 = fptrunc double %105 to float
  %107 = fpext float %106 to double
  %108 = fmul double %107, 9.899000e-01
  %109 = fsub double 1.000000e+01, %108
  %110 = fptrunc double %109 to float
  %111 = fpext float %110 to double
  %112 = fmul double %111, 9.899000e-01
  %113 = fsub double 1.000000e+01, %112
  %114 = fptrunc double %113 to float
  %115 = fpext float %114 to double
  %116 = fmul double %115, 9.899000e-01
  %117 = fsub double 1.000000e+01, %116
  %118 = fptrunc double %117 to float
  %119 = fpext float %118 to double
  %120 = fmul double %119, 9.899000e-01
  %121 = fsub double 1.000000e+01, %120
  %122 = fptrunc double %121 to float
  %123 = fpext float %122 to double
  %124 = fmul double %123, 9.899000e-01
  %125 = fsub double 1.000000e+01, %124
  %126 = fptrunc double %125 to float
  %127 = fpext float %126 to double
  %128 = fmul double %127, 9.899000e-01
  %129 = fsub double 1.000000e+01, %128
  %130 = fptrunc double %129 to float
  %131 = fpext float %130 to double
  %132 = fmul double %131, 9.899000e-01
  %133 = fsub double 1.000000e+01, %132
  %134 = fptrunc double %133 to float
  %135 = fpext float %134 to double
  %136 = fmul double %135, 9.899000e-01
  %137 = fsub double 1.000000e+01, %136
  %138 = fptrunc double %137 to float
  %139 = fpext float %138 to double
  %140 = fmul double %139, 9.899000e-01
  %141 = fsub double 1.000000e+01, %140
  %142 = fptrunc double %141 to float
  %143 = fpext float %142 to double
  %144 = fmul double %143, 9.899000e-01
  %145 = fsub double 1.000000e+01, %144
  %146 = fptrunc double %145 to float
  %147 = fpext float %146 to double
  %148 = fmul double %147, 9.899000e-01
  %149 = fsub double 1.000000e+01, %148
  %150 = fptrunc double %149 to float
  %151 = fpext float %150 to double
  %152 = fmul double %151, 9.899000e-01
  %153 = fsub double 1.000000e+01, %152
  %154 = fptrunc double %153 to float
  %155 = fpext float %154 to double
  %156 = fmul double %155, 9.899000e-01
  %157 = fsub double 1.000000e+01, %156
  %158 = fptrunc double %157 to float
  %159 = fpext float %158 to double
  %160 = fmul double %159, 9.899000e-01
  %161 = fsub double 1.000000e+01, %160
  %162 = fptrunc double %161 to float
  %163 = fpext float %162 to double
  %164 = fmul double %163, 9.899000e-01
  %165 = fsub double 1.000000e+01, %164
  %166 = fptrunc double %165 to float
  %167 = fpext float %166 to double
  %168 = fmul double %167, 9.899000e-01
  %169 = fsub double 1.000000e+01, %168
  %170 = fptrunc double %169 to float
  %171 = fpext float %170 to double
  %172 = fmul double %171, 9.899000e-01
  %173 = fsub double 1.000000e+01, %172
  %174 = fptrunc double %173 to float
  %175 = fpext float %174 to double
  %176 = fmul double %175, 9.899000e-01
  %177 = fsub double 1.000000e+01, %176
  %178 = fptrunc double %177 to float
  %179 = fpext float %178 to double
  %180 = fmul double %179, 9.899000e-01
  %181 = fsub double 1.000000e+01, %180
  %182 = fptrunc double %181 to float
  %183 = fpext float %182 to double
  %184 = fmul double %183, 9.899000e-01
  %185 = fsub double 1.000000e+01, %184
  %186 = fptrunc double %185 to float
  %187 = fpext float %186 to double
  %188 = fmul double %187, 9.899000e-01
  %189 = fsub double 1.000000e+01, %188
  %190 = fptrunc double %189 to float
  %191 = fpext float %190 to double
  %192 = fmul double %191, 9.899000e-01
  %193 = fsub double 1.000000e+01, %192
  %194 = fptrunc double %193 to float
  %195 = fpext float %194 to double
  %196 = fmul double %195, 9.899000e-01
  %197 = fsub double 1.000000e+01, %196
  %198 = fptrunc double %197 to float
  %199 = fpext float %198 to double
  %200 = fmul double %199, 9.899000e-01
  %201 = fsub double 1.000000e+01, %200
  %202 = fptrunc double %201 to float
  %203 = fpext float %202 to double
  %204 = fmul double %203, 9.899000e-01
  %205 = fsub double 1.000000e+01, %204
  %206 = fptrunc double %205 to float
  %207 = fpext float %206 to double
  %208 = fmul double %207, 9.899000e-01
  %209 = fsub double 1.000000e+01, %208
  %210 = fptrunc double %209 to float
  %211 = fpext float %210 to double
  %212 = fmul double %211, 9.899000e-01
  %213 = fsub double 1.000000e+01, %212
  %214 = fptrunc double %213 to float
  %215 = fpext float %214 to double
  %216 = fmul double %215, 9.899000e-01
  %217 = fsub double 1.000000e+01, %216
  %218 = fptrunc double %217 to float
  %219 = fpext float %218 to double
  %220 = fmul double %219, 9.899000e-01
  %221 = fsub double 1.000000e+01, %220
  %222 = fptrunc double %221 to float
  %223 = fpext float %222 to double
  %224 = fmul double %223, 9.899000e-01
  %225 = fsub double 1.000000e+01, %224
  %226 = fptrunc double %225 to float
  %227 = fpext float %226 to double
  %228 = fmul double %227, 9.899000e-01
  %229 = fsub double 1.000000e+01, %228
  %230 = fptrunc double %229 to float
  %231 = fpext float %230 to double
  %232 = fmul double %231, 9.899000e-01
  %233 = fsub double 1.000000e+01, %232
  %234 = fptrunc double %233 to float
  %235 = fpext float %234 to double
  %236 = fmul double %235, 9.899000e-01
  %237 = fsub double 1.000000e+01, %236
  %238 = fptrunc double %237 to float
  %239 = fpext float %238 to double
  %240 = fmul double %239, 9.899000e-01
  %241 = fsub double 1.000000e+01, %240
  %242 = fptrunc double %241 to float
  %243 = fpext float %242 to double
  %244 = fmul double %243, 9.899000e-01
  %245 = fsub double 1.000000e+01, %244
  %246 = fptrunc double %245 to float
  %247 = fpext float %246 to double
  %248 = fmul double %247, 9.899000e-01
  %249 = fsub double 1.000000e+01, %248
  %250 = fptrunc double %249 to float
  %251 = fpext float %250 to double
  %252 = fmul double %251, 9.899000e-01
  %253 = fsub double 1.000000e+01, %252
  %254 = fptrunc double %253 to float
  %255 = fpext float %254 to double
  %256 = fmul double %255, 9.899000e-01
  %257 = fsub double 1.000000e+01, %256
  %258 = fptrunc double %257 to float
  %259 = fpext float %258 to double
  %260 = fmul double %259, 9.899000e-01
  %261 = fsub double 1.000000e+01, %260
  %262 = fptrunc double %261 to float
  %263 = fpext float %262 to double
  %264 = fmul double %263, 9.899000e-01
  %265 = fsub double 1.000000e+01, %264
  %266 = fptrunc double %265 to float
  %267 = fpext float %266 to double
  %268 = fmul double %267, 9.899000e-01
  %269 = fsub double 1.000000e+01, %268
  %270 = fptrunc double %269 to float
  %271 = fpext float %270 to double
  %272 = fmul double %271, 9.899000e-01
  %273 = fsub double 1.000000e+01, %272
  %274 = fptrunc double %273 to float
  %275 = fpext float %274 to double
  %276 = fmul double %275, 9.899000e-01
  %277 = fsub double 1.000000e+01, %276
  %278 = fptrunc double %277 to float
  %279 = fpext float %278 to double
  %280 = fmul double %279, 9.899000e-01
  %281 = fsub double 1.000000e+01, %280
  %282 = fptrunc double %281 to float
  %283 = fpext float %282 to double
  %284 = fmul double %283, 9.899000e-01
  %285 = fsub double 1.000000e+01, %284
  %286 = fptrunc double %285 to float
  %287 = fpext float %286 to double
  %288 = fmul double %287, 9.899000e-01
  %289 = fsub double 1.000000e+01, %288
  %290 = fptrunc double %289 to float
  %291 = fpext float %290 to double
  %292 = fmul double %291, 9.899000e-01
  %293 = fsub double 1.000000e+01, %292
  %294 = fptrunc double %293 to float
  %295 = fpext float %294 to double
  %296 = fmul double %295, 9.899000e-01
  %297 = fsub double 1.000000e+01, %296
  %298 = fptrunc double %297 to float
  %299 = fpext float %298 to double
  %300 = fmul double %299, 9.899000e-01
  %301 = fsub double 1.000000e+01, %300
  %302 = fptrunc double %301 to float
  %303 = add nsw i32 %j.02.i, 1
  %exitcond.i = icmp eq i32 %303, %4
  br i1 %exitcond.i, label %._crit_edge.i, label %bb.nph.i

._crit_edge.i:                                    ; preds = %bb.nph.i, %SyncBB3.i
  %s.0.lcssa.i = phi float [ %22, %SyncBB3.i ], [ %302, %bb.nph.i ]
  store float %s.0.lcssa.i, float addrspace(1)* %21, align 4
  %check.WI.iter.i = icmp ult i64 %CurrWI..0.i, %13
  br i1 %check.WI.iter.i, label %thenBB.i, label %__MAdd1_separated_args.exit

thenBB.i:                                         ; preds = %._crit_edge.i
  %"CurrWI++.i" = add nuw i64 %CurrWI..0.i, 1
  br label %SyncBB3.i

__MAdd1_separated_args.exit:                      ; preds = %._crit_edge.i
  ret void
}

!opencl.kernels = !{!0}

!0 = metadata !{void (float addrspace(1)*, i32, i8 addrspace(3)*, %struct.WorkDim*, i64*, %struct.PaddedDimId*, %struct.PaddedDimId*, i64*, i64, i8*, i64*)* @__MAdd1_separated_args, metadata !1, metadata !1, metadata !"", metadata !"float __attribute__((address_space(1))) *, int", metadata !"opencl_MAdd1_locals_anchor", void (i8*)* @MAdd1}
!1 = metadata !{i32 0, i32 0, i32 0}
