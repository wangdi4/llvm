; XFAIL: win32
;
; RUN: llc < %s -mtriple=x86_64-pc-linux \
; RUN:       -march=y86-64 -mcpu=knf
;
; RUNc: llc < %s -mtriple=x86_64-pc-linux \
; RUNc:       -march=y86-64 -mcpu=knc
;
; ModuleID = 'Program'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64"
target triple = "x86_64-unknown-linux-gnu"

%struct.PaddedDimId = type <{ [4 x i64] }>
%struct.WorkDim = type { i32, [3 x i64], [3 x i64], [3 x i64], [3 x i64] }

declare void @__MAdd8_original(float addrspace(1)* nocapture, i32) nounwind

declare i64 @get_global_id(i32)

declare i64 @get_global_size(i32)

declare void @dummybarrier.()

declare void @barrier(i64)

declare i8* @get_special_buffer.()

declare i64 @get_iter_count.()

declare i64 @get_new_global_id.(i32, i64)

define void @__MAdd8_separated_args(float addrspace(1)* nocapture %data, i32 %nIters, i8 addrspace(3)* %pLocalMem, %struct.WorkDim* %pWorkDim, i64* %pWGId, %struct.PaddedDimId* %pBaseGlbId, %struct.PaddedDimId* %pLocalIds, i64* %contextpointer, i64 %iterCount, i8* %pSpecialBuf, i64* %pCurrWI) nounwind alwaysinline {
FirstBB:
  %0 = icmp sgt i32 %nIters, 0
  br label %SyncBB24

SyncBB24:                                         ; preds = %thenBB, %FirstBB
  %CurrWI..0 = phi i64 [ 0, %FirstBB ], [ %"CurrWI++", %thenBB ]
  %1 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2 = load i64* %1, align 8
  %3 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %4 = load i64* %3, align 8
  %5 = add i64 %2, %4
  %sext = shl i64 %5, 32
  %6 = ashr i64 %sext, 32
  %7 = getelementptr inbounds float addrspace(1)* %data, i64 %6
  %8 = load float addrspace(1)* %7, align 4
  %9 = fsub float 1.000000e+01, %8
  br i1 %0, label %bb.nph, label %._crit_edge

bb.nph:                                           ; preds = %SyncBB24, %bb.nph
  %j.09 = phi i32 [ %298, %bb.nph ], [ 0, %SyncBB24 ]
  %s8.08 = phi float [ %297, %bb.nph ], [ %9, %SyncBB24 ]
  %s7.07 = phi float [ %293, %bb.nph ], [ %8, %SyncBB24 ]
  %s6.06 = phi float [ %289, %bb.nph ], [ %9, %SyncBB24 ]
  %s.05 = phi float [ %269, %bb.nph ], [ %8, %SyncBB24 ]
  %s2.04 = phi float [ %273, %bb.nph ], [ %9, %SyncBB24 ]
  %s3.03 = phi float [ %277, %bb.nph ], [ %8, %SyncBB24 ]
  %s4.02 = phi float [ %281, %bb.nph ], [ %9, %SyncBB24 ]
  %s5.01 = phi float [ %285, %bb.nph ], [ %8, %SyncBB24 ]
  %10 = fpext float %s.05 to double
  %11 = fmul double %10, 9.899000e-01
  %12 = fsub double 1.000000e+01, %11
  %13 = fptrunc double %12 to float
  %14 = fpext float %s2.04 to double
  %15 = fmul double %14, 9.899000e-01
  %16 = fsub double 1.000000e+01, %15
  %17 = fptrunc double %16 to float
  %18 = fpext float %s3.03 to double
  %19 = fmul double %18, 9.899000e-01
  %20 = fsub double 1.000000e+01, %19
  %21 = fptrunc double %20 to float
  %22 = fpext float %s4.02 to double
  %23 = fmul double %22, 9.899000e-01
  %24 = fsub double 1.000000e+01, %23
  %25 = fptrunc double %24 to float
  %26 = fpext float %s5.01 to double
  %27 = fmul double %26, 9.899000e-01
  %28 = fsub double 1.000000e+01, %27
  %29 = fptrunc double %28 to float
  %30 = fpext float %s6.06 to double
  %31 = fmul double %30, 9.899000e-01
  %32 = fsub double 1.000000e+01, %31
  %33 = fptrunc double %32 to float
  %34 = fpext float %s7.07 to double
  %35 = fmul double %34, 9.899000e-01
  %36 = fsub double 1.000000e+01, %35
  %37 = fptrunc double %36 to float
  %38 = fpext float %s8.08 to double
  %39 = fmul double %38, 9.899000e-01
  %40 = fsub double 1.000000e+01, %39
  %41 = fptrunc double %40 to float
  %42 = fpext float %13 to double
  %43 = fmul double %42, 9.899000e-01
  %44 = fsub double 1.000000e+01, %43
  %45 = fptrunc double %44 to float
  %46 = fpext float %17 to double
  %47 = fmul double %46, 9.899000e-01
  %48 = fsub double 1.000000e+01, %47
  %49 = fptrunc double %48 to float
  %50 = fpext float %21 to double
  %51 = fmul double %50, 9.899000e-01
  %52 = fsub double 1.000000e+01, %51
  %53 = fptrunc double %52 to float
  %54 = fpext float %25 to double
  %55 = fmul double %54, 9.899000e-01
  %56 = fsub double 1.000000e+01, %55
  %57 = fptrunc double %56 to float
  %58 = fpext float %29 to double
  %59 = fmul double %58, 9.899000e-01
  %60 = fsub double 1.000000e+01, %59
  %61 = fptrunc double %60 to float
  %62 = fpext float %33 to double
  %63 = fmul double %62, 9.899000e-01
  %64 = fsub double 1.000000e+01, %63
  %65 = fptrunc double %64 to float
  %66 = fpext float %37 to double
  %67 = fmul double %66, 9.899000e-01
  %68 = fsub double 1.000000e+01, %67
  %69 = fptrunc double %68 to float
  %70 = fpext float %41 to double
  %71 = fmul double %70, 9.899000e-01
  %72 = fsub double 1.000000e+01, %71
  %73 = fptrunc double %72 to float
  %74 = fpext float %45 to double
  %75 = fmul double %74, 9.899000e-01
  %76 = fsub double 1.000000e+01, %75
  %77 = fptrunc double %76 to float
  %78 = fpext float %49 to double
  %79 = fmul double %78, 9.899000e-01
  %80 = fsub double 1.000000e+01, %79
  %81 = fptrunc double %80 to float
  %82 = fpext float %53 to double
  %83 = fmul double %82, 9.899000e-01
  %84 = fsub double 1.000000e+01, %83
  %85 = fptrunc double %84 to float
  %86 = fpext float %57 to double
  %87 = fmul double %86, 9.899000e-01
  %88 = fsub double 1.000000e+01, %87
  %89 = fptrunc double %88 to float
  %90 = fpext float %61 to double
  %91 = fmul double %90, 9.899000e-01
  %92 = fsub double 1.000000e+01, %91
  %93 = fptrunc double %92 to float
  %94 = fpext float %65 to double
  %95 = fmul double %94, 9.899000e-01
  %96 = fsub double 1.000000e+01, %95
  %97 = fptrunc double %96 to float
  %98 = fpext float %69 to double
  %99 = fmul double %98, 9.899000e-01
  %100 = fsub double 1.000000e+01, %99
  %101 = fptrunc double %100 to float
  %102 = fpext float %73 to double
  %103 = fmul double %102, 9.899000e-01
  %104 = fsub double 1.000000e+01, %103
  %105 = fptrunc double %104 to float
  %106 = fpext float %77 to double
  %107 = fmul double %106, 9.899000e-01
  %108 = fsub double 1.000000e+01, %107
  %109 = fptrunc double %108 to float
  %110 = fpext float %81 to double
  %111 = fmul double %110, 9.899000e-01
  %112 = fsub double 1.000000e+01, %111
  %113 = fptrunc double %112 to float
  %114 = fpext float %85 to double
  %115 = fmul double %114, 9.899000e-01
  %116 = fsub double 1.000000e+01, %115
  %117 = fptrunc double %116 to float
  %118 = fpext float %89 to double
  %119 = fmul double %118, 9.899000e-01
  %120 = fsub double 1.000000e+01, %119
  %121 = fptrunc double %120 to float
  %122 = fpext float %93 to double
  %123 = fmul double %122, 9.899000e-01
  %124 = fsub double 1.000000e+01, %123
  %125 = fptrunc double %124 to float
  %126 = fpext float %97 to double
  %127 = fmul double %126, 9.899000e-01
  %128 = fsub double 1.000000e+01, %127
  %129 = fptrunc double %128 to float
  %130 = fpext float %101 to double
  %131 = fmul double %130, 9.899000e-01
  %132 = fsub double 1.000000e+01, %131
  %133 = fptrunc double %132 to float
  %134 = fpext float %105 to double
  %135 = fmul double %134, 9.899000e-01
  %136 = fsub double 1.000000e+01, %135
  %137 = fptrunc double %136 to float
  %138 = fpext float %109 to double
  %139 = fmul double %138, 9.899000e-01
  %140 = fsub double 1.000000e+01, %139
  %141 = fptrunc double %140 to float
  %142 = fpext float %113 to double
  %143 = fmul double %142, 9.899000e-01
  %144 = fsub double 1.000000e+01, %143
  %145 = fptrunc double %144 to float
  %146 = fpext float %117 to double
  %147 = fmul double %146, 9.899000e-01
  %148 = fsub double 1.000000e+01, %147
  %149 = fptrunc double %148 to float
  %150 = fpext float %121 to double
  %151 = fmul double %150, 9.899000e-01
  %152 = fsub double 1.000000e+01, %151
  %153 = fptrunc double %152 to float
  %154 = fpext float %125 to double
  %155 = fmul double %154, 9.899000e-01
  %156 = fsub double 1.000000e+01, %155
  %157 = fptrunc double %156 to float
  %158 = fpext float %129 to double
  %159 = fmul double %158, 9.899000e-01
  %160 = fsub double 1.000000e+01, %159
  %161 = fptrunc double %160 to float
  %162 = fpext float %133 to double
  %163 = fmul double %162, 9.899000e-01
  %164 = fsub double 1.000000e+01, %163
  %165 = fptrunc double %164 to float
  %166 = fpext float %137 to double
  %167 = fmul double %166, 9.899000e-01
  %168 = fsub double 1.000000e+01, %167
  %169 = fptrunc double %168 to float
  %170 = fpext float %141 to double
  %171 = fmul double %170, 9.899000e-01
  %172 = fsub double 1.000000e+01, %171
  %173 = fptrunc double %172 to float
  %174 = fpext float %145 to double
  %175 = fmul double %174, 9.899000e-01
  %176 = fsub double 1.000000e+01, %175
  %177 = fptrunc double %176 to float
  %178 = fpext float %149 to double
  %179 = fmul double %178, 9.899000e-01
  %180 = fsub double 1.000000e+01, %179
  %181 = fptrunc double %180 to float
  %182 = fpext float %153 to double
  %183 = fmul double %182, 9.899000e-01
  %184 = fsub double 1.000000e+01, %183
  %185 = fptrunc double %184 to float
  %186 = fpext float %157 to double
  %187 = fmul double %186, 9.899000e-01
  %188 = fsub double 1.000000e+01, %187
  %189 = fptrunc double %188 to float
  %190 = fpext float %161 to double
  %191 = fmul double %190, 9.899000e-01
  %192 = fsub double 1.000000e+01, %191
  %193 = fptrunc double %192 to float
  %194 = fpext float %165 to double
  %195 = fmul double %194, 9.899000e-01
  %196 = fsub double 1.000000e+01, %195
  %197 = fptrunc double %196 to float
  %198 = fpext float %169 to double
  %199 = fmul double %198, 9.899000e-01
  %200 = fsub double 1.000000e+01, %199
  %201 = fptrunc double %200 to float
  %202 = fpext float %173 to double
  %203 = fmul double %202, 9.899000e-01
  %204 = fsub double 1.000000e+01, %203
  %205 = fptrunc double %204 to float
  %206 = fpext float %177 to double
  %207 = fmul double %206, 9.899000e-01
  %208 = fsub double 1.000000e+01, %207
  %209 = fptrunc double %208 to float
  %210 = fpext float %181 to double
  %211 = fmul double %210, 9.899000e-01
  %212 = fsub double 1.000000e+01, %211
  %213 = fptrunc double %212 to float
  %214 = fpext float %185 to double
  %215 = fmul double %214, 9.899000e-01
  %216 = fsub double 1.000000e+01, %215
  %217 = fptrunc double %216 to float
  %218 = fpext float %189 to double
  %219 = fmul double %218, 9.899000e-01
  %220 = fsub double 1.000000e+01, %219
  %221 = fptrunc double %220 to float
  %222 = fpext float %193 to double
  %223 = fmul double %222, 9.899000e-01
  %224 = fsub double 1.000000e+01, %223
  %225 = fptrunc double %224 to float
  %226 = fpext float %197 to double
  %227 = fmul double %226, 9.899000e-01
  %228 = fsub double 1.000000e+01, %227
  %229 = fptrunc double %228 to float
  %230 = fpext float %201 to double
  %231 = fmul double %230, 9.899000e-01
  %232 = fsub double 1.000000e+01, %231
  %233 = fptrunc double %232 to float
  %234 = fpext float %205 to double
  %235 = fmul double %234, 9.899000e-01
  %236 = fsub double 1.000000e+01, %235
  %237 = fptrunc double %236 to float
  %238 = fpext float %209 to double
  %239 = fmul double %238, 9.899000e-01
  %240 = fsub double 1.000000e+01, %239
  %241 = fptrunc double %240 to float
  %242 = fpext float %213 to double
  %243 = fmul double %242, 9.899000e-01
  %244 = fsub double 1.000000e+01, %243
  %245 = fptrunc double %244 to float
  %246 = fpext float %217 to double
  %247 = fmul double %246, 9.899000e-01
  %248 = fsub double 1.000000e+01, %247
  %249 = fptrunc double %248 to float
  %250 = fpext float %221 to double
  %251 = fmul double %250, 9.899000e-01
  %252 = fsub double 1.000000e+01, %251
  %253 = fptrunc double %252 to float
  %254 = fpext float %225 to double
  %255 = fmul double %254, 9.899000e-01
  %256 = fsub double 1.000000e+01, %255
  %257 = fptrunc double %256 to float
  %258 = fpext float %229 to double
  %259 = fmul double %258, 9.899000e-01
  %260 = fsub double 1.000000e+01, %259
  %261 = fptrunc double %260 to float
  %262 = fpext float %233 to double
  %263 = fmul double %262, 9.899000e-01
  %264 = fsub double 1.000000e+01, %263
  %265 = fptrunc double %264 to float
  %266 = fpext float %237 to double
  %267 = fmul double %266, 9.899000e-01
  %268 = fsub double 1.000000e+01, %267
  %269 = fptrunc double %268 to float
  %270 = fpext float %241 to double
  %271 = fmul double %270, 9.899000e-01
  %272 = fsub double 1.000000e+01, %271
  %273 = fptrunc double %272 to float
  %274 = fpext float %245 to double
  %275 = fmul double %274, 9.899000e-01
  %276 = fsub double 1.000000e+01, %275
  %277 = fptrunc double %276 to float
  %278 = fpext float %249 to double
  %279 = fmul double %278, 9.899000e-01
  %280 = fsub double 1.000000e+01, %279
  %281 = fptrunc double %280 to float
  %282 = fpext float %253 to double
  %283 = fmul double %282, 9.899000e-01
  %284 = fsub double 1.000000e+01, %283
  %285 = fptrunc double %284 to float
  %286 = fpext float %257 to double
  %287 = fmul double %286, 9.899000e-01
  %288 = fsub double 1.000000e+01, %287
  %289 = fptrunc double %288 to float
  %290 = fpext float %261 to double
  %291 = fmul double %290, 9.899000e-01
  %292 = fsub double 1.000000e+01, %291
  %293 = fptrunc double %292 to float
  %294 = fpext float %265 to double
  %295 = fmul double %294, 9.899000e-01
  %296 = fsub double 1.000000e+01, %295
  %297 = fptrunc double %296 to float
  %298 = add nsw i32 %j.09, 1
  %exitcond = icmp eq i32 %298, %nIters
  br i1 %exitcond, label %._crit_edge, label %bb.nph

._crit_edge:                                      ; preds = %bb.nph, %SyncBB24
  %s8.0.lcssa = phi float [ %9, %SyncBB24 ], [ %297, %bb.nph ]
  %s7.0.lcssa = phi float [ %8, %SyncBB24 ], [ %293, %bb.nph ]
  %s6.0.lcssa = phi float [ %9, %SyncBB24 ], [ %289, %bb.nph ]
  %s.0.lcssa = phi float [ %8, %SyncBB24 ], [ %269, %bb.nph ]
  %s2.0.lcssa = phi float [ %9, %SyncBB24 ], [ %273, %bb.nph ]
  %s3.0.lcssa = phi float [ %8, %SyncBB24 ], [ %277, %bb.nph ]
  %s4.0.lcssa = phi float [ %9, %SyncBB24 ], [ %281, %bb.nph ]
  %s5.0.lcssa = phi float [ %8, %SyncBB24 ], [ %285, %bb.nph ]
  %299 = fadd float %s.0.lcssa, %s2.0.lcssa
  %300 = fadd float %299, %s3.0.lcssa
  %301 = fadd float %300, %s4.0.lcssa
  %302 = fadd float %301, %s5.0.lcssa
  %303 = fadd float %302, %s6.0.lcssa
  %304 = fadd float %303, %s7.0.lcssa
  %305 = fadd float %304, %s8.0.lcssa
  store float %305, float addrspace(1)* %7, align 4
  %check.WI.iter = icmp ult i64 %CurrWI..0, %iterCount
  br i1 %check.WI.iter, label %thenBB, label %SyncBB

thenBB:                                           ; preds = %._crit_edge
  %"CurrWI++" = add nuw i64 %CurrWI..0, 1
  br label %SyncBB24

SyncBB:                                           ; preds = %._crit_edge
  ret void
}

define void @MAdd8(i8* %pBuffer) {
entry:
  %0 = bitcast i8* %pBuffer to float addrspace(1)**
  %1 = load float addrspace(1)** %0, align 8
  %2 = getelementptr i8* %pBuffer, i64 8
  %3 = bitcast i8* %2 to i32*
  %4 = load i32* %3, align 4
  %5 = getelementptr i8* %pBuffer, i64 40
  %6 = bitcast i8* %5 to %struct.PaddedDimId**
  %7 = load %struct.PaddedDimId** %6, align 8
  %8 = getelementptr i8* %pBuffer, i64 48
  %9 = bitcast i8* %8 to %struct.PaddedDimId**
  %10 = load %struct.PaddedDimId** %9, align 8
  %11 = getelementptr i8* %pBuffer, i64 64
  %12 = bitcast i8* %11 to i64*
  %13 = load i64* %12, align 8
  %14 = icmp sgt i32 %4, 0
  br label %SyncBB24.i

SyncBB24.i:                                       ; preds = %thenBB.i, %entry
  %CurrWI..0.i = phi i64 [ 0, %entry ], [ %"CurrWI++.i", %thenBB.i ]
  %15 = getelementptr %struct.PaddedDimId* %10, i64 %CurrWI..0.i, i32 0, i64 0
  %16 = load i64* %15, align 8
  %17 = getelementptr %struct.PaddedDimId* %7, i64 0, i32 0, i64 0
  %18 = load i64* %17, align 8
  %19 = add i64 %16, %18
  %sext.i = shl i64 %19, 32
  %20 = ashr i64 %sext.i, 32
  %21 = getelementptr inbounds float addrspace(1)* %1, i64 %20
  %22 = load float addrspace(1)* %21, align 4
  %23 = fsub float 1.000000e+01, %22
  br i1 %14, label %bb.nph.i, label %._crit_edge.i

bb.nph.i:                                         ; preds = %bb.nph.i, %SyncBB24.i
  %j.09.i = phi i32 [ %312, %bb.nph.i ], [ 0, %SyncBB24.i ]
  %s8.08.i = phi float [ %311, %bb.nph.i ], [ %23, %SyncBB24.i ]
  %s7.07.i = phi float [ %307, %bb.nph.i ], [ %22, %SyncBB24.i ]
  %s6.06.i = phi float [ %303, %bb.nph.i ], [ %23, %SyncBB24.i ]
  %s.05.i = phi float [ %283, %bb.nph.i ], [ %22, %SyncBB24.i ]
  %s2.04.i = phi float [ %287, %bb.nph.i ], [ %23, %SyncBB24.i ]
  %s3.03.i = phi float [ %291, %bb.nph.i ], [ %22, %SyncBB24.i ]
  %s4.02.i = phi float [ %295, %bb.nph.i ], [ %23, %SyncBB24.i ]
  %s5.01.i = phi float [ %299, %bb.nph.i ], [ %22, %SyncBB24.i ]
  %24 = fpext float %s.05.i to double
  %25 = fmul double %24, 9.899000e-01
  %26 = fsub double 1.000000e+01, %25
  %27 = fptrunc double %26 to float
  %28 = fpext float %s2.04.i to double
  %29 = fmul double %28, 9.899000e-01
  %30 = fsub double 1.000000e+01, %29
  %31 = fptrunc double %30 to float
  %32 = fpext float %s3.03.i to double
  %33 = fmul double %32, 9.899000e-01
  %34 = fsub double 1.000000e+01, %33
  %35 = fptrunc double %34 to float
  %36 = fpext float %s4.02.i to double
  %37 = fmul double %36, 9.899000e-01
  %38 = fsub double 1.000000e+01, %37
  %39 = fptrunc double %38 to float
  %40 = fpext float %s5.01.i to double
  %41 = fmul double %40, 9.899000e-01
  %42 = fsub double 1.000000e+01, %41
  %43 = fptrunc double %42 to float
  %44 = fpext float %s6.06.i to double
  %45 = fmul double %44, 9.899000e-01
  %46 = fsub double 1.000000e+01, %45
  %47 = fptrunc double %46 to float
  %48 = fpext float %s7.07.i to double
  %49 = fmul double %48, 9.899000e-01
  %50 = fsub double 1.000000e+01, %49
  %51 = fptrunc double %50 to float
  %52 = fpext float %s8.08.i to double
  %53 = fmul double %52, 9.899000e-01
  %54 = fsub double 1.000000e+01, %53
  %55 = fptrunc double %54 to float
  %56 = fpext float %27 to double
  %57 = fmul double %56, 9.899000e-01
  %58 = fsub double 1.000000e+01, %57
  %59 = fptrunc double %58 to float
  %60 = fpext float %31 to double
  %61 = fmul double %60, 9.899000e-01
  %62 = fsub double 1.000000e+01, %61
  %63 = fptrunc double %62 to float
  %64 = fpext float %35 to double
  %65 = fmul double %64, 9.899000e-01
  %66 = fsub double 1.000000e+01, %65
  %67 = fptrunc double %66 to float
  %68 = fpext float %39 to double
  %69 = fmul double %68, 9.899000e-01
  %70 = fsub double 1.000000e+01, %69
  %71 = fptrunc double %70 to float
  %72 = fpext float %43 to double
  %73 = fmul double %72, 9.899000e-01
  %74 = fsub double 1.000000e+01, %73
  %75 = fptrunc double %74 to float
  %76 = fpext float %47 to double
  %77 = fmul double %76, 9.899000e-01
  %78 = fsub double 1.000000e+01, %77
  %79 = fptrunc double %78 to float
  %80 = fpext float %51 to double
  %81 = fmul double %80, 9.899000e-01
  %82 = fsub double 1.000000e+01, %81
  %83 = fptrunc double %82 to float
  %84 = fpext float %55 to double
  %85 = fmul double %84, 9.899000e-01
  %86 = fsub double 1.000000e+01, %85
  %87 = fptrunc double %86 to float
  %88 = fpext float %59 to double
  %89 = fmul double %88, 9.899000e-01
  %90 = fsub double 1.000000e+01, %89
  %91 = fptrunc double %90 to float
  %92 = fpext float %63 to double
  %93 = fmul double %92, 9.899000e-01
  %94 = fsub double 1.000000e+01, %93
  %95 = fptrunc double %94 to float
  %96 = fpext float %67 to double
  %97 = fmul double %96, 9.899000e-01
  %98 = fsub double 1.000000e+01, %97
  %99 = fptrunc double %98 to float
  %100 = fpext float %71 to double
  %101 = fmul double %100, 9.899000e-01
  %102 = fsub double 1.000000e+01, %101
  %103 = fptrunc double %102 to float
  %104 = fpext float %75 to double
  %105 = fmul double %104, 9.899000e-01
  %106 = fsub double 1.000000e+01, %105
  %107 = fptrunc double %106 to float
  %108 = fpext float %79 to double
  %109 = fmul double %108, 9.899000e-01
  %110 = fsub double 1.000000e+01, %109
  %111 = fptrunc double %110 to float
  %112 = fpext float %83 to double
  %113 = fmul double %112, 9.899000e-01
  %114 = fsub double 1.000000e+01, %113
  %115 = fptrunc double %114 to float
  %116 = fpext float %87 to double
  %117 = fmul double %116, 9.899000e-01
  %118 = fsub double 1.000000e+01, %117
  %119 = fptrunc double %118 to float
  %120 = fpext float %91 to double
  %121 = fmul double %120, 9.899000e-01
  %122 = fsub double 1.000000e+01, %121
  %123 = fptrunc double %122 to float
  %124 = fpext float %95 to double
  %125 = fmul double %124, 9.899000e-01
  %126 = fsub double 1.000000e+01, %125
  %127 = fptrunc double %126 to float
  %128 = fpext float %99 to double
  %129 = fmul double %128, 9.899000e-01
  %130 = fsub double 1.000000e+01, %129
  %131 = fptrunc double %130 to float
  %132 = fpext float %103 to double
  %133 = fmul double %132, 9.899000e-01
  %134 = fsub double 1.000000e+01, %133
  %135 = fptrunc double %134 to float
  %136 = fpext float %107 to double
  %137 = fmul double %136, 9.899000e-01
  %138 = fsub double 1.000000e+01, %137
  %139 = fptrunc double %138 to float
  %140 = fpext float %111 to double
  %141 = fmul double %140, 9.899000e-01
  %142 = fsub double 1.000000e+01, %141
  %143 = fptrunc double %142 to float
  %144 = fpext float %115 to double
  %145 = fmul double %144, 9.899000e-01
  %146 = fsub double 1.000000e+01, %145
  %147 = fptrunc double %146 to float
  %148 = fpext float %119 to double
  %149 = fmul double %148, 9.899000e-01
  %150 = fsub double 1.000000e+01, %149
  %151 = fptrunc double %150 to float
  %152 = fpext float %123 to double
  %153 = fmul double %152, 9.899000e-01
  %154 = fsub double 1.000000e+01, %153
  %155 = fptrunc double %154 to float
  %156 = fpext float %127 to double
  %157 = fmul double %156, 9.899000e-01
  %158 = fsub double 1.000000e+01, %157
  %159 = fptrunc double %158 to float
  %160 = fpext float %131 to double
  %161 = fmul double %160, 9.899000e-01
  %162 = fsub double 1.000000e+01, %161
  %163 = fptrunc double %162 to float
  %164 = fpext float %135 to double
  %165 = fmul double %164, 9.899000e-01
  %166 = fsub double 1.000000e+01, %165
  %167 = fptrunc double %166 to float
  %168 = fpext float %139 to double
  %169 = fmul double %168, 9.899000e-01
  %170 = fsub double 1.000000e+01, %169
  %171 = fptrunc double %170 to float
  %172 = fpext float %143 to double
  %173 = fmul double %172, 9.899000e-01
  %174 = fsub double 1.000000e+01, %173
  %175 = fptrunc double %174 to float
  %176 = fpext float %147 to double
  %177 = fmul double %176, 9.899000e-01
  %178 = fsub double 1.000000e+01, %177
  %179 = fptrunc double %178 to float
  %180 = fpext float %151 to double
  %181 = fmul double %180, 9.899000e-01
  %182 = fsub double 1.000000e+01, %181
  %183 = fptrunc double %182 to float
  %184 = fpext float %155 to double
  %185 = fmul double %184, 9.899000e-01
  %186 = fsub double 1.000000e+01, %185
  %187 = fptrunc double %186 to float
  %188 = fpext float %159 to double
  %189 = fmul double %188, 9.899000e-01
  %190 = fsub double 1.000000e+01, %189
  %191 = fptrunc double %190 to float
  %192 = fpext float %163 to double
  %193 = fmul double %192, 9.899000e-01
  %194 = fsub double 1.000000e+01, %193
  %195 = fptrunc double %194 to float
  %196 = fpext float %167 to double
  %197 = fmul double %196, 9.899000e-01
  %198 = fsub double 1.000000e+01, %197
  %199 = fptrunc double %198 to float
  %200 = fpext float %171 to double
  %201 = fmul double %200, 9.899000e-01
  %202 = fsub double 1.000000e+01, %201
  %203 = fptrunc double %202 to float
  %204 = fpext float %175 to double
  %205 = fmul double %204, 9.899000e-01
  %206 = fsub double 1.000000e+01, %205
  %207 = fptrunc double %206 to float
  %208 = fpext float %179 to double
  %209 = fmul double %208, 9.899000e-01
  %210 = fsub double 1.000000e+01, %209
  %211 = fptrunc double %210 to float
  %212 = fpext float %183 to double
  %213 = fmul double %212, 9.899000e-01
  %214 = fsub double 1.000000e+01, %213
  %215 = fptrunc double %214 to float
  %216 = fpext float %187 to double
  %217 = fmul double %216, 9.899000e-01
  %218 = fsub double 1.000000e+01, %217
  %219 = fptrunc double %218 to float
  %220 = fpext float %191 to double
  %221 = fmul double %220, 9.899000e-01
  %222 = fsub double 1.000000e+01, %221
  %223 = fptrunc double %222 to float
  %224 = fpext float %195 to double
  %225 = fmul double %224, 9.899000e-01
  %226 = fsub double 1.000000e+01, %225
  %227 = fptrunc double %226 to float
  %228 = fpext float %199 to double
  %229 = fmul double %228, 9.899000e-01
  %230 = fsub double 1.000000e+01, %229
  %231 = fptrunc double %230 to float
  %232 = fpext float %203 to double
  %233 = fmul double %232, 9.899000e-01
  %234 = fsub double 1.000000e+01, %233
  %235 = fptrunc double %234 to float
  %236 = fpext float %207 to double
  %237 = fmul double %236, 9.899000e-01
  %238 = fsub double 1.000000e+01, %237
  %239 = fptrunc double %238 to float
  %240 = fpext float %211 to double
  %241 = fmul double %240, 9.899000e-01
  %242 = fsub double 1.000000e+01, %241
  %243 = fptrunc double %242 to float
  %244 = fpext float %215 to double
  %245 = fmul double %244, 9.899000e-01
  %246 = fsub double 1.000000e+01, %245
  %247 = fptrunc double %246 to float
  %248 = fpext float %219 to double
  %249 = fmul double %248, 9.899000e-01
  %250 = fsub double 1.000000e+01, %249
  %251 = fptrunc double %250 to float
  %252 = fpext float %223 to double
  %253 = fmul double %252, 9.899000e-01
  %254 = fsub double 1.000000e+01, %253
  %255 = fptrunc double %254 to float
  %256 = fpext float %227 to double
  %257 = fmul double %256, 9.899000e-01
  %258 = fsub double 1.000000e+01, %257
  %259 = fptrunc double %258 to float
  %260 = fpext float %231 to double
  %261 = fmul double %260, 9.899000e-01
  %262 = fsub double 1.000000e+01, %261
  %263 = fptrunc double %262 to float
  %264 = fpext float %235 to double
  %265 = fmul double %264, 9.899000e-01
  %266 = fsub double 1.000000e+01, %265
  %267 = fptrunc double %266 to float
  %268 = fpext float %239 to double
  %269 = fmul double %268, 9.899000e-01
  %270 = fsub double 1.000000e+01, %269
  %271 = fptrunc double %270 to float
  %272 = fpext float %243 to double
  %273 = fmul double %272, 9.899000e-01
  %274 = fsub double 1.000000e+01, %273
  %275 = fptrunc double %274 to float
  %276 = fpext float %247 to double
  %277 = fmul double %276, 9.899000e-01
  %278 = fsub double 1.000000e+01, %277
  %279 = fptrunc double %278 to float
  %280 = fpext float %251 to double
  %281 = fmul double %280, 9.899000e-01
  %282 = fsub double 1.000000e+01, %281
  %283 = fptrunc double %282 to float
  %284 = fpext float %255 to double
  %285 = fmul double %284, 9.899000e-01
  %286 = fsub double 1.000000e+01, %285
  %287 = fptrunc double %286 to float
  %288 = fpext float %259 to double
  %289 = fmul double %288, 9.899000e-01
  %290 = fsub double 1.000000e+01, %289
  %291 = fptrunc double %290 to float
  %292 = fpext float %263 to double
  %293 = fmul double %292, 9.899000e-01
  %294 = fsub double 1.000000e+01, %293
  %295 = fptrunc double %294 to float
  %296 = fpext float %267 to double
  %297 = fmul double %296, 9.899000e-01
  %298 = fsub double 1.000000e+01, %297
  %299 = fptrunc double %298 to float
  %300 = fpext float %271 to double
  %301 = fmul double %300, 9.899000e-01
  %302 = fsub double 1.000000e+01, %301
  %303 = fptrunc double %302 to float
  %304 = fpext float %275 to double
  %305 = fmul double %304, 9.899000e-01
  %306 = fsub double 1.000000e+01, %305
  %307 = fptrunc double %306 to float
  %308 = fpext float %279 to double
  %309 = fmul double %308, 9.899000e-01
  %310 = fsub double 1.000000e+01, %309
  %311 = fptrunc double %310 to float
  %312 = add nsw i32 %j.09.i, 1
  %exitcond.i = icmp eq i32 %312, %4
  br i1 %exitcond.i, label %._crit_edge.i, label %bb.nph.i

._crit_edge.i:                                    ; preds = %bb.nph.i, %SyncBB24.i
  %s8.0.lcssa.i = phi float [ %23, %SyncBB24.i ], [ %311, %bb.nph.i ]
  %s7.0.lcssa.i = phi float [ %22, %SyncBB24.i ], [ %307, %bb.nph.i ]
  %s6.0.lcssa.i = phi float [ %23, %SyncBB24.i ], [ %303, %bb.nph.i ]
  %s.0.lcssa.i = phi float [ %22, %SyncBB24.i ], [ %283, %bb.nph.i ]
  %s2.0.lcssa.i = phi float [ %23, %SyncBB24.i ], [ %287, %bb.nph.i ]
  %s3.0.lcssa.i = phi float [ %22, %SyncBB24.i ], [ %291, %bb.nph.i ]
  %s4.0.lcssa.i = phi float [ %23, %SyncBB24.i ], [ %295, %bb.nph.i ]
  %s5.0.lcssa.i = phi float [ %22, %SyncBB24.i ], [ %299, %bb.nph.i ]
  %313 = fadd float %s.0.lcssa.i, %s2.0.lcssa.i
  %314 = fadd float %313, %s3.0.lcssa.i
  %315 = fadd float %314, %s4.0.lcssa.i
  %316 = fadd float %315, %s5.0.lcssa.i
  %317 = fadd float %316, %s6.0.lcssa.i
  %318 = fadd float %317, %s7.0.lcssa.i
  %319 = fadd float %318, %s8.0.lcssa.i
  store float %319, float addrspace(1)* %21, align 4
  %check.WI.iter.i = icmp ult i64 %CurrWI..0.i, %13
  br i1 %check.WI.iter.i, label %thenBB.i, label %__MAdd8_separated_args.exit

thenBB.i:                                         ; preds = %._crit_edge.i
  %"CurrWI++.i" = add nuw i64 %CurrWI..0.i, 1
  br label %SyncBB24.i

__MAdd8_separated_args.exit:                      ; preds = %._crit_edge.i
  ret void
}

!opencl.kernels = !{!0}

!0 = metadata !{void (float addrspace(1)*, i32, i8 addrspace(3)*, %struct.WorkDim*, i64*, %struct.PaddedDimId*, %struct.PaddedDimId*, i64*, i64, i8*, i64*)* @__MAdd8_separated_args, metadata !1, metadata !1, metadata !"", metadata !"float __attribute__((address_space(1))) *, int", metadata !"opencl_MAdd8_locals_anchor", void (i8*)* @MAdd8}
!1 = metadata !{i32 0, i32 0, i32 0}
