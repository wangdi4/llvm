; XFAIL: *
; XFAIL: win32
;
; RUN: llc < %s -mtriple=x86_64-pc-linux \
; RUN:       -march=y86-64 -mcpu=knc
;
;
; ModuleID = 'Program'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64"
target triple = "x86_64-unknown-linux-gnu"

%struct.PaddedDimId = type <{ [4 x i64] }>
%struct.WorkDim = type { i32, [3 x i64], [3 x i64], [3 x i64], [3 x i64] }

declare void @__ratt2_kernel_original(double addrspace(1)* nocapture, double addrspace(1)*, double addrspace(1)*, double addrspace(1)*, double) nounwind

declare i64 @get_global_id(i32)

declare double @_Z3logd(double)

declare double @_Z4fmindd(double, double)

declare void @____Vectorized_.ratt2_kernel_original(double addrspace(1)* nocapture, double addrspace(1)*, double addrspace(1)*, double addrspace(1)*, double) nounwind

define i1 @allOne(i1 %pred) {
entry:
  ret i1 %pred
}

define i1 @allZero(i1 %t) {
entry:
  ret i1 %t
}

declare void @dummybarrier.()

declare void @barrier(i64)

declare i8* @get_special_buffer.()

declare i64 @get_iter_count.()

declare i64 @get_new_global_id.(i32, i64)

define void @__ratt2_kernel_separated_args(double addrspace(1)* nocapture %T, double addrspace(1)* %RF, double addrspace(1)* %RB, double addrspace(1)* %EG, double %TCONV, i8 addrspace(3)* %pLocalMem, %struct.WorkDim* %pWorkDim, i64* %pWGId, %struct.PaddedDimId* %pBaseGlbId, %struct.PaddedDimId* %pLocalIds, i64* %contextpointer, i64 %iterCount, i8* %pSpecialBuf, i64* %pCurrWI) nounwind alwaysinline {
; <label>:0
  br label %SyncBB

SyncBB:                                           ; preds = %0, %thenBB
  %CurrWI..0 = phi i64 [ %"CurrWI++", %thenBB ], [ 0, %0 ]
  %1 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2 = load i64* %1, align 8
  %3 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %4 = load i64* %3, align 8
  %5 = add i64 %2, %4
  %6 = getelementptr inbounds double addrspace(1)* %T, i64 %5
  %7 = load double addrspace(1)* %6, align 8
  %8 = fmul double %7, %TCONV
  %9 = tail call double @_Z3logd(double %8) nounwind
  %10 = fmul double %8, 8.314510e+07
  %11 = fdiv double 1.000000e+00, %10
  %12 = fmul double %11, 1.013250e+06
  %13 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %14 = load i64* %13, align 8
  %15 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %16 = load i64* %15, align 8
  %17 = add i64 %14, %16
  %18 = add i64 %17, 110592
  %19 = getelementptr inbounds double addrspace(1)* %EG, i64 %18
  %20 = load double addrspace(1)* %19, align 8
  %21 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %22 = load i64* %21, align 8
  %23 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %24 = load i64* %23, align 8
  %25 = add i64 %22, %24
  %26 = add i64 %25, 331776
  %27 = getelementptr inbounds double addrspace(1)* %EG, i64 %26
  %28 = load double addrspace(1)* %27, align 8
  %29 = fmul double %20, %28
  %30 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %31 = load i64* %30, align 8
  %32 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %33 = load i64* %32, align 8
  %34 = add i64 %31, %33
  %35 = add i64 %34, 221184
  %36 = getelementptr inbounds double addrspace(1)* %EG, i64 %35
  %37 = load double addrspace(1)* %36, align 8
  %38 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %39 = load i64* %38, align 8
  %40 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %41 = load i64* %40, align 8
  %42 = add i64 %39, %41
  %43 = add i64 %42, 442368
  %44 = getelementptr inbounds double addrspace(1)* %EG, i64 %43
  %45 = load double addrspace(1)* %44, align 8
  %46 = fmul double %37, %45
  %47 = fdiv double 1.000000e+00, %46
  %48 = fmul double %29, %47
  %49 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %50 = load i64* %49, align 8
  %51 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %52 = load i64* %51, align 8
  %53 = add i64 %50, %52
  %54 = getelementptr inbounds double addrspace(1)* %RF, i64 %53
  %55 = load double addrspace(1)* %54, align 8
  %56 = tail call double @_Z4fmindd(double %48, double 1.000000e+300) nounwind
  %57 = fmul double %55, %56
  %58 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %59 = load i64* %58, align 8
  %60 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %61 = load i64* %60, align 8
  %62 = add i64 %59, %61
  %63 = getelementptr inbounds double addrspace(1)* %RB, i64 %62
  store double %57, double addrspace(1)* %63, align 8
  %64 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %65 = load i64* %64, align 8
  %66 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %67 = load i64* %66, align 8
  %68 = add i64 %65, %67
  %69 = getelementptr inbounds double addrspace(1)* %EG, i64 %68
  %70 = load double addrspace(1)* %69, align 8
  %71 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %72 = load i64* %71, align 8
  %73 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %74 = load i64* %73, align 8
  %75 = add i64 %72, %74
  %76 = add i64 %75, 221184
  %77 = getelementptr inbounds double addrspace(1)* %EG, i64 %76
  %78 = load double addrspace(1)* %77, align 8
  %79 = fmul double %70, %78
  %80 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %81 = load i64* %80, align 8
  %82 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %83 = load i64* %82, align 8
  %84 = add i64 %81, %83
  %85 = add i64 %84, 110592
  %86 = getelementptr inbounds double addrspace(1)* %EG, i64 %85
  %87 = load double addrspace(1)* %86, align 8
  %88 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %89 = load i64* %88, align 8
  %90 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %91 = load i64* %90, align 8
  %92 = add i64 %89, %91
  %93 = add i64 %92, 442368
  %94 = getelementptr inbounds double addrspace(1)* %EG, i64 %93
  %95 = load double addrspace(1)* %94, align 8
  %96 = fmul double %87, %95
  %97 = fdiv double 1.000000e+00, %96
  %98 = fmul double %79, %97
  %99 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %100 = load i64* %99, align 8
  %101 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %102 = load i64* %101, align 8
  %103 = add i64 %100, %102
  %104 = add i64 %103, 110592
  %105 = getelementptr inbounds double addrspace(1)* %RF, i64 %104
  %106 = load double addrspace(1)* %105, align 8
  %107 = tail call double @_Z4fmindd(double %98, double 1.000000e+300) nounwind
  %108 = fmul double %106, %107
  %109 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %110 = load i64* %109, align 8
  %111 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %112 = load i64* %111, align 8
  %113 = add i64 %110, %112
  %114 = add i64 %113, 110592
  %115 = getelementptr inbounds double addrspace(1)* %RB, i64 %114
  store double %108, double addrspace(1)* %115, align 8
  %116 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %117 = load i64* %116, align 8
  %118 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %119 = load i64* %118, align 8
  %120 = add i64 %117, %119
  %121 = getelementptr inbounds double addrspace(1)* %EG, i64 %120
  %122 = load double addrspace(1)* %121, align 8
  %123 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %124 = load i64* %123, align 8
  %125 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %126 = load i64* %125, align 8
  %127 = add i64 %124, %126
  %128 = add i64 %127, 442368
  %129 = getelementptr inbounds double addrspace(1)* %EG, i64 %128
  %130 = load double addrspace(1)* %129, align 8
  %131 = fmul double %122, %130
  %132 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %133 = load i64* %132, align 8
  %134 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %135 = load i64* %134, align 8
  %136 = add i64 %133, %135
  %137 = add i64 %136, 110592
  %138 = getelementptr inbounds double addrspace(1)* %EG, i64 %137
  %139 = load double addrspace(1)* %138, align 8
  %140 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %141 = load i64* %140, align 8
  %142 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %143 = load i64* %142, align 8
  %144 = add i64 %141, %143
  %145 = add i64 %144, 552960
  %146 = getelementptr inbounds double addrspace(1)* %EG, i64 %145
  %147 = load double addrspace(1)* %146, align 8
  %148 = fmul double %139, %147
  %149 = fdiv double 1.000000e+00, %148
  %150 = fmul double %131, %149
  %151 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %152 = load i64* %151, align 8
  %153 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %154 = load i64* %153, align 8
  %155 = add i64 %152, %154
  %156 = add i64 %155, 221184
  %157 = getelementptr inbounds double addrspace(1)* %RF, i64 %156
  %158 = load double addrspace(1)* %157, align 8
  %159 = tail call double @_Z4fmindd(double %150, double 1.000000e+300) nounwind
  %160 = fmul double %158, %159
  %161 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %162 = load i64* %161, align 8
  %163 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %164 = load i64* %163, align 8
  %165 = add i64 %162, %164
  %166 = add i64 %165, 221184
  %167 = getelementptr inbounds double addrspace(1)* %RB, i64 %166
  store double %160, double addrspace(1)* %167, align 8
  %168 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %169 = load i64* %168, align 8
  %170 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %171 = load i64* %170, align 8
  %172 = add i64 %169, %171
  %173 = add i64 %172, 442368
  %174 = getelementptr inbounds double addrspace(1)* %EG, i64 %173
  %175 = load double addrspace(1)* %174, align 8
  %176 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %177 = load i64* %176, align 8
  %178 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %179 = load i64* %178, align 8
  %180 = add i64 %177, %179
  %181 = add i64 %180, 442368
  %182 = getelementptr inbounds double addrspace(1)* %EG, i64 %181
  %183 = load double addrspace(1)* %182, align 8
  %184 = fmul double %175, %183
  %185 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %186 = load i64* %185, align 8
  %187 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %188 = load i64* %187, align 8
  %189 = add i64 %186, %188
  %190 = add i64 %189, 221184
  %191 = getelementptr inbounds double addrspace(1)* %EG, i64 %190
  %192 = load double addrspace(1)* %191, align 8
  %193 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %194 = load i64* %193, align 8
  %195 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %196 = load i64* %195, align 8
  %197 = add i64 %194, %196
  %198 = add i64 %197, 552960
  %199 = getelementptr inbounds double addrspace(1)* %EG, i64 %198
  %200 = load double addrspace(1)* %199, align 8
  %201 = fmul double %192, %200
  %202 = fdiv double 1.000000e+00, %201
  %203 = fmul double %184, %202
  %204 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %205 = load i64* %204, align 8
  %206 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %207 = load i64* %206, align 8
  %208 = add i64 %205, %207
  %209 = add i64 %208, 331776
  %210 = getelementptr inbounds double addrspace(1)* %RF, i64 %209
  %211 = load double addrspace(1)* %210, align 8
  %212 = tail call double @_Z4fmindd(double %203, double 1.000000e+300) nounwind
  %213 = fmul double %211, %212
  %214 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %215 = load i64* %214, align 8
  %216 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %217 = load i64* %216, align 8
  %218 = add i64 %215, %217
  %219 = add i64 %218, 331776
  %220 = getelementptr inbounds double addrspace(1)* %RB, i64 %219
  store double %213, double addrspace(1)* %220, align 8
  %221 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %222 = load i64* %221, align 8
  %223 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %224 = load i64* %223, align 8
  %225 = add i64 %222, %224
  %226 = add i64 %225, 110592
  %227 = getelementptr inbounds double addrspace(1)* %EG, i64 %226
  %228 = load double addrspace(1)* %227, align 8
  %229 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %230 = load i64* %229, align 8
  %231 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %232 = load i64* %231, align 8
  %233 = add i64 %230, %232
  %234 = add i64 %233, 110592
  %235 = getelementptr inbounds double addrspace(1)* %EG, i64 %234
  %236 = load double addrspace(1)* %235, align 8
  %237 = fmul double %228, %236
  %238 = fmul double %237, %12
  %239 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %240 = load i64* %239, align 8
  %241 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %242 = load i64* %241, align 8
  %243 = add i64 %240, %242
  %244 = getelementptr inbounds double addrspace(1)* %EG, i64 %243
  %245 = load double addrspace(1)* %244, align 8
  %246 = fdiv double 1.000000e+00, %245
  %247 = fmul double %238, %246
  %248 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %249 = load i64* %248, align 8
  %250 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %251 = load i64* %250, align 8
  %252 = add i64 %249, %251
  %253 = add i64 %252, 442368
  %254 = getelementptr inbounds double addrspace(1)* %RF, i64 %253
  %255 = load double addrspace(1)* %254, align 8
  %256 = tail call double @_Z4fmindd(double %247, double 1.000000e+300) nounwind
  %257 = fmul double %255, %256
  %258 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %259 = load i64* %258, align 8
  %260 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %261 = load i64* %260, align 8
  %262 = add i64 %259, %261
  %263 = add i64 %262, 442368
  %264 = getelementptr inbounds double addrspace(1)* %RB, i64 %263
  store double %257, double addrspace(1)* %264, align 8
  %265 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %266 = load i64* %265, align 8
  %267 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %268 = load i64* %267, align 8
  %269 = add i64 %266, %268
  %270 = add i64 %269, 110592
  %271 = getelementptr inbounds double addrspace(1)* %EG, i64 %270
  %272 = load double addrspace(1)* %271, align 8
  %273 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %274 = load i64* %273, align 8
  %275 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %276 = load i64* %275, align 8
  %277 = add i64 %274, %276
  %278 = add i64 %277, 110592
  %279 = getelementptr inbounds double addrspace(1)* %EG, i64 %278
  %280 = load double addrspace(1)* %279, align 8
  %281 = fmul double %272, %280
  %282 = fmul double %281, %12
  %283 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %284 = load i64* %283, align 8
  %285 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %286 = load i64* %285, align 8
  %287 = add i64 %284, %286
  %288 = getelementptr inbounds double addrspace(1)* %EG, i64 %287
  %289 = load double addrspace(1)* %288, align 8
  %290 = fdiv double 1.000000e+00, %289
  %291 = fmul double %282, %290
  %292 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %293 = load i64* %292, align 8
  %294 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %295 = load i64* %294, align 8
  %296 = add i64 %293, %295
  %297 = add i64 %296, 552960
  %298 = getelementptr inbounds double addrspace(1)* %RF, i64 %297
  %299 = load double addrspace(1)* %298, align 8
  %300 = tail call double @_Z4fmindd(double %291, double 1.000000e+300) nounwind
  %301 = fmul double %299, %300
  %302 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %303 = load i64* %302, align 8
  %304 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %305 = load i64* %304, align 8
  %306 = add i64 %303, %305
  %307 = add i64 %306, 552960
  %308 = getelementptr inbounds double addrspace(1)* %RB, i64 %307
  store double %301, double addrspace(1)* %308, align 8
  %309 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %310 = load i64* %309, align 8
  %311 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %312 = load i64* %311, align 8
  %313 = add i64 %310, %312
  %314 = add i64 %313, 110592
  %315 = getelementptr inbounds double addrspace(1)* %EG, i64 %314
  %316 = load double addrspace(1)* %315, align 8
  %317 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %318 = load i64* %317, align 8
  %319 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %320 = load i64* %319, align 8
  %321 = add i64 %318, %320
  %322 = add i64 %321, 110592
  %323 = getelementptr inbounds double addrspace(1)* %EG, i64 %322
  %324 = load double addrspace(1)* %323, align 8
  %325 = fmul double %316, %324
  %326 = fmul double %325, %12
  %327 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %328 = load i64* %327, align 8
  %329 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %330 = load i64* %329, align 8
  %331 = add i64 %328, %330
  %332 = getelementptr inbounds double addrspace(1)* %EG, i64 %331
  %333 = load double addrspace(1)* %332, align 8
  %334 = fdiv double 1.000000e+00, %333
  %335 = fmul double %326, %334
  %336 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %337 = load i64* %336, align 8
  %338 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %339 = load i64* %338, align 8
  %340 = add i64 %337, %339
  %341 = add i64 %340, 663552
  %342 = getelementptr inbounds double addrspace(1)* %RF, i64 %341
  %343 = load double addrspace(1)* %342, align 8
  %344 = tail call double @_Z4fmindd(double %335, double 1.000000e+300) nounwind
  %345 = fmul double %343, %344
  %346 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %347 = load i64* %346, align 8
  %348 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %349 = load i64* %348, align 8
  %350 = add i64 %347, %349
  %351 = add i64 %350, 663552
  %352 = getelementptr inbounds double addrspace(1)* %RB, i64 %351
  store double %345, double addrspace(1)* %352, align 8
  %353 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %354 = load i64* %353, align 8
  %355 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %356 = load i64* %355, align 8
  %357 = add i64 %354, %356
  %358 = add i64 %357, 110592
  %359 = getelementptr inbounds double addrspace(1)* %EG, i64 %358
  %360 = load double addrspace(1)* %359, align 8
  %361 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %362 = load i64* %361, align 8
  %363 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %364 = load i64* %363, align 8
  %365 = add i64 %362, %364
  %366 = add i64 %365, 110592
  %367 = getelementptr inbounds double addrspace(1)* %EG, i64 %366
  %368 = load double addrspace(1)* %367, align 8
  %369 = fmul double %360, %368
  %370 = fmul double %369, %12
  %371 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %372 = load i64* %371, align 8
  %373 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %374 = load i64* %373, align 8
  %375 = add i64 %372, %374
  %376 = getelementptr inbounds double addrspace(1)* %EG, i64 %375
  %377 = load double addrspace(1)* %376, align 8
  %378 = fdiv double 1.000000e+00, %377
  %379 = fmul double %370, %378
  %380 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %381 = load i64* %380, align 8
  %382 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %383 = load i64* %382, align 8
  %384 = add i64 %381, %383
  %385 = add i64 %384, 774144
  %386 = getelementptr inbounds double addrspace(1)* %RF, i64 %385
  %387 = load double addrspace(1)* %386, align 8
  %388 = tail call double @_Z4fmindd(double %379, double 1.000000e+300) nounwind
  %389 = fmul double %387, %388
  %390 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %391 = load i64* %390, align 8
  %392 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %393 = load i64* %392, align 8
  %394 = add i64 %391, %393
  %395 = add i64 %394, 774144
  %396 = getelementptr inbounds double addrspace(1)* %RB, i64 %395
  store double %389, double addrspace(1)* %396, align 8
  %397 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %398 = load i64* %397, align 8
  %399 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %400 = load i64* %399, align 8
  %401 = add i64 %398, %400
  %402 = add i64 %401, 110592
  %403 = getelementptr inbounds double addrspace(1)* %EG, i64 %402
  %404 = load double addrspace(1)* %403, align 8
  %405 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %406 = load i64* %405, align 8
  %407 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %408 = load i64* %407, align 8
  %409 = add i64 %406, %408
  %410 = add i64 %409, 442368
  %411 = getelementptr inbounds double addrspace(1)* %EG, i64 %410
  %412 = load double addrspace(1)* %411, align 8
  %413 = fmul double %404, %412
  %414 = fmul double %413, %12
  %415 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %416 = load i64* %415, align 8
  %417 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %418 = load i64* %417, align 8
  %419 = add i64 %416, %418
  %420 = add i64 %419, 552960
  %421 = getelementptr inbounds double addrspace(1)* %EG, i64 %420
  %422 = load double addrspace(1)* %421, align 8
  %423 = fdiv double 1.000000e+00, %422
  %424 = fmul double %414, %423
  %425 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %426 = load i64* %425, align 8
  %427 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %428 = load i64* %427, align 8
  %429 = add i64 %426, %428
  %430 = add i64 %429, 884736
  %431 = getelementptr inbounds double addrspace(1)* %RF, i64 %430
  %432 = load double addrspace(1)* %431, align 8
  %433 = tail call double @_Z4fmindd(double %424, double 1.000000e+300) nounwind
  %434 = fmul double %432, %433
  %435 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %436 = load i64* %435, align 8
  %437 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %438 = load i64* %437, align 8
  %439 = add i64 %436, %438
  %440 = add i64 %439, 884736
  %441 = getelementptr inbounds double addrspace(1)* %RB, i64 %440
  store double %434, double addrspace(1)* %441, align 8
  %442 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %443 = load i64* %442, align 8
  %444 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %445 = load i64* %444, align 8
  %446 = add i64 %443, %445
  %447 = add i64 %446, 110592
  %448 = getelementptr inbounds double addrspace(1)* %EG, i64 %447
  %449 = load double addrspace(1)* %448, align 8
  %450 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %451 = load i64* %450, align 8
  %452 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %453 = load i64* %452, align 8
  %454 = add i64 %451, %453
  %455 = add i64 %454, 221184
  %456 = getelementptr inbounds double addrspace(1)* %EG, i64 %455
  %457 = load double addrspace(1)* %456, align 8
  %458 = fmul double %449, %457
  %459 = fmul double %458, %12
  %460 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %461 = load i64* %460, align 8
  %462 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %463 = load i64* %462, align 8
  %464 = add i64 %461, %463
  %465 = add i64 %464, 442368
  %466 = getelementptr inbounds double addrspace(1)* %EG, i64 %465
  %467 = load double addrspace(1)* %466, align 8
  %468 = fdiv double 1.000000e+00, %467
  %469 = fmul double %459, %468
  %470 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %471 = load i64* %470, align 8
  %472 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %473 = load i64* %472, align 8
  %474 = add i64 %471, %473
  %475 = add i64 %474, 995328
  %476 = getelementptr inbounds double addrspace(1)* %RF, i64 %475
  %477 = load double addrspace(1)* %476, align 8
  %478 = tail call double @_Z4fmindd(double %469, double 1.000000e+300) nounwind
  %479 = fmul double %477, %478
  %480 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %481 = load i64* %480, align 8
  %482 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %483 = load i64* %482, align 8
  %484 = add i64 %481, %483
  %485 = add i64 %484, 995328
  %486 = getelementptr inbounds double addrspace(1)* %RB, i64 %485
  store double %479, double addrspace(1)* %486, align 8
  %487 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %488 = load i64* %487, align 8
  %489 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %490 = load i64* %489, align 8
  %491 = add i64 %488, %490
  %492 = add i64 %491, 221184
  %493 = getelementptr inbounds double addrspace(1)* %EG, i64 %492
  %494 = load double addrspace(1)* %493, align 8
  %495 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %496 = load i64* %495, align 8
  %497 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %498 = load i64* %497, align 8
  %499 = add i64 %496, %498
  %500 = add i64 %499, 221184
  %501 = getelementptr inbounds double addrspace(1)* %EG, i64 %500
  %502 = load double addrspace(1)* %501, align 8
  %503 = fmul double %494, %502
  %504 = fmul double %503, %12
  %505 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %506 = load i64* %505, align 8
  %507 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %508 = load i64* %507, align 8
  %509 = add i64 %506, %508
  %510 = add i64 %509, 331776
  %511 = getelementptr inbounds double addrspace(1)* %EG, i64 %510
  %512 = load double addrspace(1)* %511, align 8
  %513 = fdiv double 1.000000e+00, %512
  %514 = fmul double %504, %513
  %515 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %516 = load i64* %515, align 8
  %517 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %518 = load i64* %517, align 8
  %519 = add i64 %516, %518
  %520 = add i64 %519, 1105920
  %521 = getelementptr inbounds double addrspace(1)* %RF, i64 %520
  %522 = load double addrspace(1)* %521, align 8
  %523 = tail call double @_Z4fmindd(double %514, double 1.000000e+300) nounwind
  %524 = fmul double %522, %523
  %525 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %526 = load i64* %525, align 8
  %527 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %528 = load i64* %527, align 8
  %529 = add i64 %526, %528
  %530 = add i64 %529, 1105920
  %531 = getelementptr inbounds double addrspace(1)* %RB, i64 %530
  store double %524, double addrspace(1)* %531, align 8
  %532 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %533 = load i64* %532, align 8
  %534 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %535 = load i64* %534, align 8
  %536 = add i64 %533, %535
  %537 = add i64 %536, 110592
  %538 = getelementptr inbounds double addrspace(1)* %EG, i64 %537
  %539 = load double addrspace(1)* %538, align 8
  %540 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %541 = load i64* %540, align 8
  %542 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %543 = load i64* %542, align 8
  %544 = add i64 %541, %543
  %545 = add i64 %544, 331776
  %546 = getelementptr inbounds double addrspace(1)* %EG, i64 %545
  %547 = load double addrspace(1)* %546, align 8
  %548 = fmul double %539, %547
  %549 = fmul double %548, %12
  %550 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %551 = load i64* %550, align 8
  %552 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %553 = load i64* %552, align 8
  %554 = add i64 %551, %553
  %555 = add i64 %554, 663552
  %556 = getelementptr inbounds double addrspace(1)* %EG, i64 %555
  %557 = load double addrspace(1)* %556, align 8
  %558 = fdiv double 1.000000e+00, %557
  %559 = fmul double %549, %558
  %560 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %561 = load i64* %560, align 8
  %562 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %563 = load i64* %562, align 8
  %564 = add i64 %561, %563
  %565 = add i64 %564, 1216512
  %566 = getelementptr inbounds double addrspace(1)* %RF, i64 %565
  %567 = load double addrspace(1)* %566, align 8
  %568 = tail call double @_Z4fmindd(double %559, double 1.000000e+300) nounwind
  %569 = fmul double %567, %568
  %570 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %571 = load i64* %570, align 8
  %572 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %573 = load i64* %572, align 8
  %574 = add i64 %571, %573
  %575 = add i64 %574, 1216512
  %576 = getelementptr inbounds double addrspace(1)* %RB, i64 %575
  store double %569, double addrspace(1)* %576, align 8
  %577 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %578 = load i64* %577, align 8
  %579 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %580 = load i64* %579, align 8
  %581 = add i64 %578, %580
  %582 = add i64 %581, 110592
  %583 = getelementptr inbounds double addrspace(1)* %EG, i64 %582
  %584 = load double addrspace(1)* %583, align 8
  %585 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %586 = load i64* %585, align 8
  %587 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %588 = load i64* %587, align 8
  %589 = add i64 %586, %588
  %590 = add i64 %589, 331776
  %591 = getelementptr inbounds double addrspace(1)* %EG, i64 %590
  %592 = load double addrspace(1)* %591, align 8
  %593 = fmul double %584, %592
  %594 = fmul double %593, %12
  %595 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %596 = load i64* %595, align 8
  %597 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %598 = load i64* %597, align 8
  %599 = add i64 %596, %598
  %600 = add i64 %599, 663552
  %601 = getelementptr inbounds double addrspace(1)* %EG, i64 %600
  %602 = load double addrspace(1)* %601, align 8
  %603 = fdiv double 1.000000e+00, %602
  %604 = fmul double %594, %603
  %605 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %606 = load i64* %605, align 8
  %607 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %608 = load i64* %607, align 8
  %609 = add i64 %606, %608
  %610 = add i64 %609, 1327104
  %611 = getelementptr inbounds double addrspace(1)* %RF, i64 %610
  %612 = load double addrspace(1)* %611, align 8
  %613 = tail call double @_Z4fmindd(double %604, double 1.000000e+300) nounwind
  %614 = fmul double %612, %613
  %615 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %616 = load i64* %615, align 8
  %617 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %618 = load i64* %617, align 8
  %619 = add i64 %616, %618
  %620 = add i64 %619, 1327104
  %621 = getelementptr inbounds double addrspace(1)* %RB, i64 %620
  store double %614, double addrspace(1)* %621, align 8
  %622 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %623 = load i64* %622, align 8
  %624 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %625 = load i64* %624, align 8
  %626 = add i64 %623, %625
  %627 = add i64 %626, 110592
  %628 = getelementptr inbounds double addrspace(1)* %EG, i64 %627
  %629 = load double addrspace(1)* %628, align 8
  %630 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %631 = load i64* %630, align 8
  %632 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %633 = load i64* %632, align 8
  %634 = add i64 %631, %633
  %635 = add i64 %634, 331776
  %636 = getelementptr inbounds double addrspace(1)* %EG, i64 %635
  %637 = load double addrspace(1)* %636, align 8
  %638 = fmul double %629, %637
  %639 = fmul double %638, %12
  %640 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %641 = load i64* %640, align 8
  %642 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %643 = load i64* %642, align 8
  %644 = add i64 %641, %643
  %645 = add i64 %644, 663552
  %646 = getelementptr inbounds double addrspace(1)* %EG, i64 %645
  %647 = load double addrspace(1)* %646, align 8
  %648 = fdiv double 1.000000e+00, %647
  %649 = fmul double %639, %648
  %650 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %651 = load i64* %650, align 8
  %652 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %653 = load i64* %652, align 8
  %654 = add i64 %651, %653
  %655 = add i64 %654, 1437696
  %656 = getelementptr inbounds double addrspace(1)* %RF, i64 %655
  %657 = load double addrspace(1)* %656, align 8
  %658 = tail call double @_Z4fmindd(double %649, double 1.000000e+300) nounwind
  %659 = fmul double %657, %658
  %660 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %661 = load i64* %660, align 8
  %662 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %663 = load i64* %662, align 8
  %664 = add i64 %661, %663
  %665 = add i64 %664, 1437696
  %666 = getelementptr inbounds double addrspace(1)* %RB, i64 %665
  store double %659, double addrspace(1)* %666, align 8
  %667 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %668 = load i64* %667, align 8
  %669 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %670 = load i64* %669, align 8
  %671 = add i64 %668, %670
  %672 = add i64 %671, 110592
  %673 = getelementptr inbounds double addrspace(1)* %EG, i64 %672
  %674 = load double addrspace(1)* %673, align 8
  %675 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %676 = load i64* %675, align 8
  %677 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %678 = load i64* %677, align 8
  %679 = add i64 %676, %678
  %680 = add i64 %679, 331776
  %681 = getelementptr inbounds double addrspace(1)* %EG, i64 %680
  %682 = load double addrspace(1)* %681, align 8
  %683 = fmul double %674, %682
  %684 = fmul double %683, %12
  %685 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %686 = load i64* %685, align 8
  %687 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %688 = load i64* %687, align 8
  %689 = add i64 %686, %688
  %690 = add i64 %689, 663552
  %691 = getelementptr inbounds double addrspace(1)* %EG, i64 %690
  %692 = load double addrspace(1)* %691, align 8
  %693 = fdiv double 1.000000e+00, %692
  %694 = fmul double %684, %693
  %695 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %696 = load i64* %695, align 8
  %697 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %698 = load i64* %697, align 8
  %699 = add i64 %696, %698
  %700 = add i64 %699, 1548288
  %701 = getelementptr inbounds double addrspace(1)* %RF, i64 %700
  %702 = load double addrspace(1)* %701, align 8
  %703 = tail call double @_Z4fmindd(double %694, double 1.000000e+300) nounwind
  %704 = fmul double %702, %703
  %705 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %706 = load i64* %705, align 8
  %707 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %708 = load i64* %707, align 8
  %709 = add i64 %706, %708
  %710 = add i64 %709, 1548288
  %711 = getelementptr inbounds double addrspace(1)* %RB, i64 %710
  store double %704, double addrspace(1)* %711, align 8
  %712 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %713 = load i64* %712, align 8
  %714 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %715 = load i64* %714, align 8
  %716 = add i64 %713, %715
  %717 = add i64 %716, 442368
  %718 = getelementptr inbounds double addrspace(1)* %EG, i64 %717
  %719 = load double addrspace(1)* %718, align 8
  %720 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %721 = load i64* %720, align 8
  %722 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %723 = load i64* %722, align 8
  %724 = add i64 %721, %723
  %725 = add i64 %724, 442368
  %726 = getelementptr inbounds double addrspace(1)* %EG, i64 %725
  %727 = load double addrspace(1)* %726, align 8
  %728 = fmul double %719, %727
  %729 = fmul double %728, %12
  %730 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %731 = load i64* %730, align 8
  %732 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %733 = load i64* %732, align 8
  %734 = add i64 %731, %733
  %735 = add i64 %734, 774144
  %736 = getelementptr inbounds double addrspace(1)* %EG, i64 %735
  %737 = load double addrspace(1)* %736, align 8
  %738 = fdiv double 1.000000e+00, %737
  %739 = fmul double %729, %738
  %740 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %741 = load i64* %740, align 8
  %742 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %743 = load i64* %742, align 8
  %744 = add i64 %741, %743
  %745 = add i64 %744, 1658880
  %746 = getelementptr inbounds double addrspace(1)* %RF, i64 %745
  %747 = load double addrspace(1)* %746, align 8
  %748 = tail call double @_Z4fmindd(double %739, double 1.000000e+300) nounwind
  %749 = fmul double %747, %748
  %750 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %751 = load i64* %750, align 8
  %752 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %753 = load i64* %752, align 8
  %754 = add i64 %751, %753
  %755 = add i64 %754, 1658880
  %756 = getelementptr inbounds double addrspace(1)* %RB, i64 %755
  store double %749, double addrspace(1)* %756, align 8
  %757 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %758 = load i64* %757, align 8
  %759 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %760 = load i64* %759, align 8
  %761 = add i64 %758, %760
  %762 = add i64 %761, 110592
  %763 = getelementptr inbounds double addrspace(1)* %EG, i64 %762
  %764 = load double addrspace(1)* %763, align 8
  %765 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %766 = load i64* %765, align 8
  %767 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %768 = load i64* %767, align 8
  %769 = add i64 %766, %768
  %770 = add i64 %769, 663552
  %771 = getelementptr inbounds double addrspace(1)* %EG, i64 %770
  %772 = load double addrspace(1)* %771, align 8
  %773 = fmul double %764, %772
  %774 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %775 = load i64* %774, align 8
  %776 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %777 = load i64* %776, align 8
  %778 = add i64 %775, %777
  %779 = add i64 %778, 221184
  %780 = getelementptr inbounds double addrspace(1)* %EG, i64 %779
  %781 = load double addrspace(1)* %780, align 8
  %782 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %783 = load i64* %782, align 8
  %784 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %785 = load i64* %784, align 8
  %786 = add i64 %783, %785
  %787 = add i64 %786, 552960
  %788 = getelementptr inbounds double addrspace(1)* %EG, i64 %787
  %789 = load double addrspace(1)* %788, align 8
  %790 = fmul double %781, %789
  %791 = fdiv double 1.000000e+00, %790
  %792 = fmul double %773, %791
  %793 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %794 = load i64* %793, align 8
  %795 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %796 = load i64* %795, align 8
  %797 = add i64 %794, %796
  %798 = add i64 %797, 1769472
  %799 = getelementptr inbounds double addrspace(1)* %RF, i64 %798
  %800 = load double addrspace(1)* %799, align 8
  %801 = tail call double @_Z4fmindd(double %792, double 1.000000e+300) nounwind
  %802 = fmul double %800, %801
  %803 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %804 = load i64* %803, align 8
  %805 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %806 = load i64* %805, align 8
  %807 = add i64 %804, %806
  %808 = add i64 %807, 1769472
  %809 = getelementptr inbounds double addrspace(1)* %RB, i64 %808
  store double %802, double addrspace(1)* %809, align 8
  %810 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %811 = load i64* %810, align 8
  %812 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %813 = load i64* %812, align 8
  %814 = add i64 %811, %813
  %815 = add i64 %814, 110592
  %816 = getelementptr inbounds double addrspace(1)* %EG, i64 %815
  %817 = load double addrspace(1)* %816, align 8
  %818 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %819 = load i64* %818, align 8
  %820 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %821 = load i64* %820, align 8
  %822 = add i64 %819, %821
  %823 = add i64 %822, 663552
  %824 = getelementptr inbounds double addrspace(1)* %EG, i64 %823
  %825 = load double addrspace(1)* %824, align 8
  %826 = fmul double %817, %825
  %827 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %828 = load i64* %827, align 8
  %829 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %830 = load i64* %829, align 8
  %831 = add i64 %828, %830
  %832 = getelementptr inbounds double addrspace(1)* %EG, i64 %831
  %833 = load double addrspace(1)* %832, align 8
  %834 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %835 = load i64* %834, align 8
  %836 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %837 = load i64* %836, align 8
  %838 = add i64 %835, %837
  %839 = add i64 %838, 331776
  %840 = getelementptr inbounds double addrspace(1)* %EG, i64 %839
  %841 = load double addrspace(1)* %840, align 8
  %842 = fmul double %833, %841
  %843 = fdiv double 1.000000e+00, %842
  %844 = fmul double %826, %843
  %845 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %846 = load i64* %845, align 8
  %847 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %848 = load i64* %847, align 8
  %849 = add i64 %846, %848
  %850 = add i64 %849, 1880064
  %851 = getelementptr inbounds double addrspace(1)* %RF, i64 %850
  %852 = load double addrspace(1)* %851, align 8
  %853 = tail call double @_Z4fmindd(double %844, double 1.000000e+300) nounwind
  %854 = fmul double %852, %853
  %855 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %856 = load i64* %855, align 8
  %857 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %858 = load i64* %857, align 8
  %859 = add i64 %856, %858
  %860 = add i64 %859, 1880064
  %861 = getelementptr inbounds double addrspace(1)* %RB, i64 %860
  store double %854, double addrspace(1)* %861, align 8
  %862 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %863 = load i64* %862, align 8
  %864 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %865 = load i64* %864, align 8
  %866 = add i64 %863, %865
  %867 = add i64 %866, 110592
  %868 = getelementptr inbounds double addrspace(1)* %EG, i64 %867
  %869 = load double addrspace(1)* %868, align 8
  %870 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %871 = load i64* %870, align 8
  %872 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %873 = load i64* %872, align 8
  %874 = add i64 %871, %873
  %875 = add i64 %874, 663552
  %876 = getelementptr inbounds double addrspace(1)* %EG, i64 %875
  %877 = load double addrspace(1)* %876, align 8
  %878 = fmul double %869, %877
  %879 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %880 = load i64* %879, align 8
  %881 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %882 = load i64* %881, align 8
  %883 = add i64 %880, %882
  %884 = add i64 %883, 442368
  %885 = getelementptr inbounds double addrspace(1)* %EG, i64 %884
  %886 = load double addrspace(1)* %885, align 8
  %887 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %888 = load i64* %887, align 8
  %889 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %890 = load i64* %889, align 8
  %891 = add i64 %888, %890
  %892 = add i64 %891, 442368
  %893 = getelementptr inbounds double addrspace(1)* %EG, i64 %892
  %894 = load double addrspace(1)* %893, align 8
  %895 = fmul double %886, %894
  %896 = fdiv double 1.000000e+00, %895
  %897 = fmul double %878, %896
  %898 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %899 = load i64* %898, align 8
  %900 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %901 = load i64* %900, align 8
  %902 = add i64 %899, %901
  %903 = add i64 %902, 1990656
  %904 = getelementptr inbounds double addrspace(1)* %RF, i64 %903
  %905 = load double addrspace(1)* %904, align 8
  %906 = tail call double @_Z4fmindd(double %897, double 1.000000e+300) nounwind
  %907 = fmul double %905, %906
  %908 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %909 = load i64* %908, align 8
  %910 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %911 = load i64* %910, align 8
  %912 = add i64 %909, %911
  %913 = add i64 %912, 1990656
  %914 = getelementptr inbounds double addrspace(1)* %RB, i64 %913
  store double %907, double addrspace(1)* %914, align 8
  %915 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %916 = load i64* %915, align 8
  %917 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %918 = load i64* %917, align 8
  %919 = add i64 %916, %918
  %920 = add i64 %919, 221184
  %921 = getelementptr inbounds double addrspace(1)* %EG, i64 %920
  %922 = load double addrspace(1)* %921, align 8
  %923 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %924 = load i64* %923, align 8
  %925 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %926 = load i64* %925, align 8
  %927 = add i64 %924, %926
  %928 = add i64 %927, 663552
  %929 = getelementptr inbounds double addrspace(1)* %EG, i64 %928
  %930 = load double addrspace(1)* %929, align 8
  %931 = fmul double %922, %930
  %932 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %933 = load i64* %932, align 8
  %934 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %935 = load i64* %934, align 8
  %936 = add i64 %933, %935
  %937 = add i64 %936, 331776
  %938 = getelementptr inbounds double addrspace(1)* %EG, i64 %937
  %939 = load double addrspace(1)* %938, align 8
  %940 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %941 = load i64* %940, align 8
  %942 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %943 = load i64* %942, align 8
  %944 = add i64 %941, %943
  %945 = add i64 %944, 442368
  %946 = getelementptr inbounds double addrspace(1)* %EG, i64 %945
  %947 = load double addrspace(1)* %946, align 8
  %948 = fmul double %939, %947
  %949 = fdiv double 1.000000e+00, %948
  %950 = fmul double %931, %949
  %951 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %952 = load i64* %951, align 8
  %953 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %954 = load i64* %953, align 8
  %955 = add i64 %952, %954
  %956 = add i64 %955, 2101248
  %957 = getelementptr inbounds double addrspace(1)* %RF, i64 %956
  %958 = load double addrspace(1)* %957, align 8
  %959 = tail call double @_Z4fmindd(double %950, double 1.000000e+300) nounwind
  %960 = fmul double %958, %959
  %961 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %962 = load i64* %961, align 8
  %963 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %964 = load i64* %963, align 8
  %965 = add i64 %962, %964
  %966 = add i64 %965, 2101248
  %967 = getelementptr inbounds double addrspace(1)* %RB, i64 %966
  store double %960, double addrspace(1)* %967, align 8
  %968 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %969 = load i64* %968, align 8
  %970 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %971 = load i64* %970, align 8
  %972 = add i64 %969, %971
  %973 = add i64 %972, 442368
  %974 = getelementptr inbounds double addrspace(1)* %EG, i64 %973
  %975 = load double addrspace(1)* %974, align 8
  %976 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %977 = load i64* %976, align 8
  %978 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %979 = load i64* %978, align 8
  %980 = add i64 %977, %979
  %981 = add i64 %980, 663552
  %982 = getelementptr inbounds double addrspace(1)* %EG, i64 %981
  %983 = load double addrspace(1)* %982, align 8
  %984 = fmul double %975, %983
  %985 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %986 = load i64* %985, align 8
  %987 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %988 = load i64* %987, align 8
  %989 = add i64 %986, %988
  %990 = add i64 %989, 331776
  %991 = getelementptr inbounds double addrspace(1)* %EG, i64 %990
  %992 = load double addrspace(1)* %991, align 8
  %993 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %994 = load i64* %993, align 8
  %995 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %996 = load i64* %995, align 8
  %997 = add i64 %994, %996
  %998 = add i64 %997, 552960
  %999 = getelementptr inbounds double addrspace(1)* %EG, i64 %998
  %1000 = load double addrspace(1)* %999, align 8
  %1001 = fmul double %992, %1000
  %1002 = fdiv double 1.000000e+00, %1001
  %1003 = fmul double %984, %1002
  %1004 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1005 = load i64* %1004, align 8
  %1006 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1007 = load i64* %1006, align 8
  %1008 = add i64 %1005, %1007
  %1009 = add i64 %1008, 2211840
  %1010 = getelementptr inbounds double addrspace(1)* %RF, i64 %1009
  %1011 = load double addrspace(1)* %1010, align 8
  %1012 = tail call double @_Z4fmindd(double %1003, double 1.000000e+300) nounwind
  %1013 = fmul double %1011, %1012
  %1014 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1015 = load i64* %1014, align 8
  %1016 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1017 = load i64* %1016, align 8
  %1018 = add i64 %1015, %1017
  %1019 = add i64 %1018, 2211840
  %1020 = getelementptr inbounds double addrspace(1)* %RB, i64 %1019
  store double %1013, double addrspace(1)* %1020, align 8
  %1021 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1022 = load i64* %1021, align 8
  %1023 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1024 = load i64* %1023, align 8
  %1025 = add i64 %1022, %1024
  %1026 = add i64 %1025, 663552
  %1027 = getelementptr inbounds double addrspace(1)* %EG, i64 %1026
  %1028 = load double addrspace(1)* %1027, align 8
  %1029 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1030 = load i64* %1029, align 8
  %1031 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1032 = load i64* %1031, align 8
  %1033 = add i64 %1030, %1032
  %1034 = add i64 %1033, 663552
  %1035 = getelementptr inbounds double addrspace(1)* %EG, i64 %1034
  %1036 = load double addrspace(1)* %1035, align 8
  %1037 = fmul double %1028, %1036
  %1038 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1039 = load i64* %1038, align 8
  %1040 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1041 = load i64* %1040, align 8
  %1042 = add i64 %1039, %1041
  %1043 = add i64 %1042, 331776
  %1044 = getelementptr inbounds double addrspace(1)* %EG, i64 %1043
  %1045 = load double addrspace(1)* %1044, align 8
  %1046 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1047 = load i64* %1046, align 8
  %1048 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1049 = load i64* %1048, align 8
  %1050 = add i64 %1047, %1049
  %1051 = add i64 %1050, 774144
  %1052 = getelementptr inbounds double addrspace(1)* %EG, i64 %1051
  %1053 = load double addrspace(1)* %1052, align 8
  %1054 = fmul double %1045, %1053
  %1055 = fdiv double 1.000000e+00, %1054
  %1056 = fmul double %1037, %1055
  %1057 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1058 = load i64* %1057, align 8
  %1059 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1060 = load i64* %1059, align 8
  %1061 = add i64 %1058, %1060
  %1062 = add i64 %1061, 2322432
  %1063 = getelementptr inbounds double addrspace(1)* %RF, i64 %1062
  %1064 = load double addrspace(1)* %1063, align 8
  %1065 = tail call double @_Z4fmindd(double %1056, double 1.000000e+300) nounwind
  %1066 = fmul double %1064, %1065
  %1067 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1068 = load i64* %1067, align 8
  %1069 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1070 = load i64* %1069, align 8
  %1071 = add i64 %1068, %1070
  %1072 = add i64 %1071, 2322432
  %1073 = getelementptr inbounds double addrspace(1)* %RB, i64 %1072
  store double %1066, double addrspace(1)* %1073, align 8
  %1074 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1075 = load i64* %1074, align 8
  %1076 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1077 = load i64* %1076, align 8
  %1078 = add i64 %1075, %1077
  %1079 = add i64 %1078, 663552
  %1080 = getelementptr inbounds double addrspace(1)* %EG, i64 %1079
  %1081 = load double addrspace(1)* %1080, align 8
  %1082 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1083 = load i64* %1082, align 8
  %1084 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1085 = load i64* %1084, align 8
  %1086 = add i64 %1083, %1085
  %1087 = add i64 %1086, 663552
  %1088 = getelementptr inbounds double addrspace(1)* %EG, i64 %1087
  %1089 = load double addrspace(1)* %1088, align 8
  %1090 = fmul double %1081, %1089
  %1091 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1092 = load i64* %1091, align 8
  %1093 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1094 = load i64* %1093, align 8
  %1095 = add i64 %1092, %1094
  %1096 = add i64 %1095, 331776
  %1097 = getelementptr inbounds double addrspace(1)* %EG, i64 %1096
  %1098 = load double addrspace(1)* %1097, align 8
  %1099 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1100 = load i64* %1099, align 8
  %1101 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1102 = load i64* %1101, align 8
  %1103 = add i64 %1100, %1102
  %1104 = add i64 %1103, 774144
  %1105 = getelementptr inbounds double addrspace(1)* %EG, i64 %1104
  %1106 = load double addrspace(1)* %1105, align 8
  %1107 = fmul double %1098, %1106
  %1108 = fdiv double 1.000000e+00, %1107
  %1109 = fmul double %1090, %1108
  %1110 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1111 = load i64* %1110, align 8
  %1112 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1113 = load i64* %1112, align 8
  %1114 = add i64 %1111, %1113
  %1115 = add i64 %1114, 2433024
  %1116 = getelementptr inbounds double addrspace(1)* %RF, i64 %1115
  %1117 = load double addrspace(1)* %1116, align 8
  %1118 = tail call double @_Z4fmindd(double %1109, double 1.000000e+300) nounwind
  %1119 = fmul double %1117, %1118
  %1120 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1121 = load i64* %1120, align 8
  %1122 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1123 = load i64* %1122, align 8
  %1124 = add i64 %1121, %1123
  %1125 = add i64 %1124, 2433024
  %1126 = getelementptr inbounds double addrspace(1)* %RB, i64 %1125
  store double %1119, double addrspace(1)* %1126, align 8
  %1127 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1128 = load i64* %1127, align 8
  %1129 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1130 = load i64* %1129, align 8
  %1131 = add i64 %1128, %1130
  %1132 = add i64 %1131, 110592
  %1133 = getelementptr inbounds double addrspace(1)* %EG, i64 %1132
  %1134 = load double addrspace(1)* %1133, align 8
  %1135 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1136 = load i64* %1135, align 8
  %1137 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1138 = load i64* %1137, align 8
  %1139 = add i64 %1136, %1138
  %1140 = add i64 %1139, 774144
  %1141 = getelementptr inbounds double addrspace(1)* %EG, i64 %1140
  %1142 = load double addrspace(1)* %1141, align 8
  %1143 = fmul double %1134, %1142
  %1144 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1145 = load i64* %1144, align 8
  %1146 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1147 = load i64* %1146, align 8
  %1148 = add i64 %1145, %1147
  %1149 = getelementptr inbounds double addrspace(1)* %EG, i64 %1148
  %1150 = load double addrspace(1)* %1149, align 8
  %1151 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1152 = load i64* %1151, align 8
  %1153 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1154 = load i64* %1153, align 8
  %1155 = add i64 %1152, %1154
  %1156 = add i64 %1155, 663552
  %1157 = getelementptr inbounds double addrspace(1)* %EG, i64 %1156
  %1158 = load double addrspace(1)* %1157, align 8
  %1159 = fmul double %1150, %1158
  %1160 = fdiv double 1.000000e+00, %1159
  %1161 = fmul double %1143, %1160
  %1162 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1163 = load i64* %1162, align 8
  %1164 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1165 = load i64* %1164, align 8
  %1166 = add i64 %1163, %1165
  %1167 = add i64 %1166, 2543616
  %1168 = getelementptr inbounds double addrspace(1)* %RF, i64 %1167
  %1169 = load double addrspace(1)* %1168, align 8
  %1170 = tail call double @_Z4fmindd(double %1161, double 1.000000e+300) nounwind
  %1171 = fmul double %1169, %1170
  %1172 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1173 = load i64* %1172, align 8
  %1174 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1175 = load i64* %1174, align 8
  %1176 = add i64 %1173, %1175
  %1177 = add i64 %1176, 2543616
  %1178 = getelementptr inbounds double addrspace(1)* %RB, i64 %1177
  store double %1171, double addrspace(1)* %1178, align 8
  %1179 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1180 = load i64* %1179, align 8
  %1181 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1182 = load i64* %1181, align 8
  %1183 = add i64 %1180, %1182
  %1184 = add i64 %1183, 110592
  %1185 = getelementptr inbounds double addrspace(1)* %EG, i64 %1184
  %1186 = load double addrspace(1)* %1185, align 8
  %1187 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1188 = load i64* %1187, align 8
  %1189 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1190 = load i64* %1189, align 8
  %1191 = add i64 %1188, %1190
  %1192 = add i64 %1191, 774144
  %1193 = getelementptr inbounds double addrspace(1)* %EG, i64 %1192
  %1194 = load double addrspace(1)* %1193, align 8
  %1195 = fmul double %1186, %1194
  %1196 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1197 = load i64* %1196, align 8
  %1198 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1199 = load i64* %1198, align 8
  %1200 = add i64 %1197, %1199
  %1201 = add i64 %1200, 442368
  %1202 = getelementptr inbounds double addrspace(1)* %EG, i64 %1201
  %1203 = load double addrspace(1)* %1202, align 8
  %1204 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1205 = load i64* %1204, align 8
  %1206 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1207 = load i64* %1206, align 8
  %1208 = add i64 %1205, %1207
  %1209 = add i64 %1208, 552960
  %1210 = getelementptr inbounds double addrspace(1)* %EG, i64 %1209
  %1211 = load double addrspace(1)* %1210, align 8
  %1212 = fmul double %1203, %1211
  %1213 = fdiv double 1.000000e+00, %1212
  %1214 = fmul double %1195, %1213
  %1215 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1216 = load i64* %1215, align 8
  %1217 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1218 = load i64* %1217, align 8
  %1219 = add i64 %1216, %1218
  %1220 = add i64 %1219, 2654208
  %1221 = getelementptr inbounds double addrspace(1)* %RF, i64 %1220
  %1222 = load double addrspace(1)* %1221, align 8
  %1223 = tail call double @_Z4fmindd(double %1214, double 1.000000e+300) nounwind
  %1224 = fmul double %1222, %1223
  %1225 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1226 = load i64* %1225, align 8
  %1227 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1228 = load i64* %1227, align 8
  %1229 = add i64 %1226, %1228
  %1230 = add i64 %1229, 2654208
  %1231 = getelementptr inbounds double addrspace(1)* %RB, i64 %1230
  store double %1224, double addrspace(1)* %1231, align 8
  %check.WI.iter = icmp ult i64 %CurrWI..0, %iterCount
  br i1 %check.WI.iter, label %thenBB, label %SyncBB1

thenBB:                                           ; preds = %SyncBB
  %"CurrWI++" = add nuw i64 %CurrWI..0, 1
  br label %SyncBB

SyncBB1:                                          ; preds = %SyncBB
  ret void
}

define void @____Vectorized_.ratt2_kernel_separated_args(double addrspace(1)* nocapture %T, double addrspace(1)* %RF, double addrspace(1)* %RB, double addrspace(1)* %EG, double %TCONV, i8 addrspace(3)* %pLocalMem, %struct.WorkDim* %pWorkDim, i64* %pWGId, %struct.PaddedDimId* %pBaseGlbId, %struct.PaddedDimId* %pLocalIds, i64* %contextpointer, i64 %iterCount, i8* %pSpecialBuf, i64* %pCurrWI) nounwind alwaysinline {
FirstBB:
  %temp = insertelement <16 x double> undef, double %TCONV, i32 0
  %vector = shufflevector <16 x double> %temp, <16 x double> undef, <16 x i32> zeroinitializer
  br label %SyncBB3453

SyncBB3453:                                       ; preds = %thenBB, %FirstBB
  %CurrWI..0 = phi i64 [ 0, %FirstBB ], [ %"CurrWI++", %thenBB ]
  %0 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1 = load i64* %0, align 8
  %2 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %3 = load i64* %2, align 8
  %4 = add i64 %1, %3
  %5 = getelementptr inbounds double addrspace(1)* %T, i64 %4
  %ptrTypeCast = bitcast double addrspace(1)* %5 to <16 x double> addrspace(1)*
  %6 = load <16 x double> addrspace(1)* %ptrTypeCast, align 8
  %7 = fmul <16 x double> %6, %vector
  %extract16 = extractelement <16 x double> %7, i32 0
  %extract17 = extractelement <16 x double> %7, i32 1
  %extract18 = extractelement <16 x double> %7, i32 2
  %extract19 = extractelement <16 x double> %7, i32 3
  %extract20 = extractelement <16 x double> %7, i32 4
  %extract21 = extractelement <16 x double> %7, i32 5
  %extract22 = extractelement <16 x double> %7, i32 6
  %extract23 = extractelement <16 x double> %7, i32 7
  %extract24 = extractelement <16 x double> %7, i32 8
  %extract25 = extractelement <16 x double> %7, i32 9
  %extract26 = extractelement <16 x double> %7, i32 10
  %extract27 = extractelement <16 x double> %7, i32 11
  %extract28 = extractelement <16 x double> %7, i32 12
  %extract29 = extractelement <16 x double> %7, i32 13
  %extract30 = extractelement <16 x double> %7, i32 14
  %extract31 = extractelement <16 x double> %7, i32 15
  %8 = tail call double @_Z3logd(double %extract16) nounwind
  %9 = tail call double @_Z3logd(double %extract17) nounwind
  %10 = tail call double @_Z3logd(double %extract18) nounwind
  %11 = tail call double @_Z3logd(double %extract19) nounwind
  %12 = tail call double @_Z3logd(double %extract20) nounwind
  %13 = tail call double @_Z3logd(double %extract21) nounwind
  %14 = tail call double @_Z3logd(double %extract22) nounwind
  %15 = tail call double @_Z3logd(double %extract23) nounwind
  %16 = tail call double @_Z3logd(double %extract24) nounwind
  %17 = tail call double @_Z3logd(double %extract25) nounwind
  %18 = tail call double @_Z3logd(double %extract26) nounwind
  %19 = tail call double @_Z3logd(double %extract27) nounwind
  %20 = tail call double @_Z3logd(double %extract28) nounwind
  %21 = tail call double @_Z3logd(double %extract29) nounwind
  %22 = tail call double @_Z3logd(double %extract30) nounwind
  %23 = tail call double @_Z3logd(double %extract31) nounwind
  %24 = fmul <16 x double> %7, <double 8.314510e+07, double 8.314510e+07, double 8.314510e+07, double 8.314510e+07, double 8.314510e+07, double 8.314510e+07, double 8.314510e+07, double 8.314510e+07, double 8.314510e+07, double 8.314510e+07, double 8.314510e+07, double 8.314510e+07, double 8.314510e+07, double 8.314510e+07, double 8.314510e+07, double 8.314510e+07>
  %25 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %24
  %26 = fmul <16 x double> %25, <double 1.013250e+06, double 1.013250e+06, double 1.013250e+06, double 1.013250e+06, double 1.013250e+06, double 1.013250e+06, double 1.013250e+06, double 1.013250e+06, double 1.013250e+06, double 1.013250e+06, double 1.013250e+06, double 1.013250e+06, double 1.013250e+06, double 1.013250e+06, double 1.013250e+06, double 1.013250e+06>
  %27 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %28 = load i64* %27, align 8
  %29 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %30 = load i64* %29, align 8
  %31 = add i64 %28, %30
  %extract34 = add i64 %31, 110592
  %32 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract34
  %ptrTypeCast50 = bitcast double addrspace(1)* %32 to <16 x double> addrspace(1)*
  %33 = load <16 x double> addrspace(1)* %ptrTypeCast50, align 8
  %34 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %35 = load i64* %34, align 8
  %36 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %37 = load i64* %36, align 8
  %38 = add i64 %35, %37
  %extract53 = add i64 %38, 331776
  %39 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract53
  %ptrTypeCast69 = bitcast double addrspace(1)* %39 to <16 x double> addrspace(1)*
  %40 = load <16 x double> addrspace(1)* %ptrTypeCast69, align 8
  %41 = fmul <16 x double> %33, %40
  %42 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %43 = load i64* %42, align 8
  %44 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %45 = load i64* %44, align 8
  %46 = add i64 %43, %45
  %extract72 = add i64 %46, 221184
  %47 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract72
  %ptrTypeCast88 = bitcast double addrspace(1)* %47 to <16 x double> addrspace(1)*
  %48 = load <16 x double> addrspace(1)* %ptrTypeCast88, align 8
  %49 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %50 = load i64* %49, align 8
  %51 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %52 = load i64* %51, align 8
  %53 = add i64 %50, %52
  %extract91 = add i64 %53, 442368
  %54 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract91
  %ptrTypeCast107 = bitcast double addrspace(1)* %54 to <16 x double> addrspace(1)*
  %55 = load <16 x double> addrspace(1)* %ptrTypeCast107, align 8
  %56 = fmul <16 x double> %48, %55
  %57 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %56
  %58 = fmul <16 x double> %41, %57
  %extract127 = extractelement <16 x double> %58, i32 0
  %extract128 = extractelement <16 x double> %58, i32 1
  %extract129 = extractelement <16 x double> %58, i32 2
  %extract130 = extractelement <16 x double> %58, i32 3
  %extract131 = extractelement <16 x double> %58, i32 4
  %extract132 = extractelement <16 x double> %58, i32 5
  %extract133 = extractelement <16 x double> %58, i32 6
  %extract134 = extractelement <16 x double> %58, i32 7
  %extract135 = extractelement <16 x double> %58, i32 8
  %extract136 = extractelement <16 x double> %58, i32 9
  %extract137 = extractelement <16 x double> %58, i32 10
  %extract138 = extractelement <16 x double> %58, i32 11
  %extract139 = extractelement <16 x double> %58, i32 12
  %extract140 = extractelement <16 x double> %58, i32 13
  %extract141 = extractelement <16 x double> %58, i32 14
  %extract142 = extractelement <16 x double> %58, i32 15
  %59 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %60 = load i64* %59, align 8
  %61 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %62 = load i64* %61, align 8
  %63 = add i64 %60, %62
  %64 = getelementptr inbounds double addrspace(1)* %RF, i64 %63
  %ptrTypeCast126 = bitcast double addrspace(1)* %64 to <16 x double> addrspace(1)*
  %65 = load <16 x double> addrspace(1)* %ptrTypeCast126, align 8
  %66 = tail call double @_Z4fmindd(double %extract127, double 1.000000e+300) nounwind
  %67 = tail call double @_Z4fmindd(double %extract128, double 1.000000e+300) nounwind
  %68 = tail call double @_Z4fmindd(double %extract129, double 1.000000e+300) nounwind
  %69 = tail call double @_Z4fmindd(double %extract130, double 1.000000e+300) nounwind
  %70 = tail call double @_Z4fmindd(double %extract131, double 1.000000e+300) nounwind
  %71 = tail call double @_Z4fmindd(double %extract132, double 1.000000e+300) nounwind
  %72 = tail call double @_Z4fmindd(double %extract133, double 1.000000e+300) nounwind
  %73 = tail call double @_Z4fmindd(double %extract134, double 1.000000e+300) nounwind
  %74 = tail call double @_Z4fmindd(double %extract135, double 1.000000e+300) nounwind
  %75 = tail call double @_Z4fmindd(double %extract136, double 1.000000e+300) nounwind
  %76 = tail call double @_Z4fmindd(double %extract137, double 1.000000e+300) nounwind
  %77 = tail call double @_Z4fmindd(double %extract138, double 1.000000e+300) nounwind
  %78 = tail call double @_Z4fmindd(double %extract139, double 1.000000e+300) nounwind
  %79 = tail call double @_Z4fmindd(double %extract140, double 1.000000e+300) nounwind
  %80 = tail call double @_Z4fmindd(double %extract141, double 1.000000e+300) nounwind
  %81 = tail call double @_Z4fmindd(double %extract142, double 1.000000e+300) nounwind
  %temp.vect = insertelement <16 x double> undef, double %66, i32 0
  %temp.vect143 = insertelement <16 x double> %temp.vect, double %67, i32 1
  %temp.vect144 = insertelement <16 x double> %temp.vect143, double %68, i32 2
  %temp.vect145 = insertelement <16 x double> %temp.vect144, double %69, i32 3
  %temp.vect146 = insertelement <16 x double> %temp.vect145, double %70, i32 4
  %temp.vect147 = insertelement <16 x double> %temp.vect146, double %71, i32 5
  %temp.vect148 = insertelement <16 x double> %temp.vect147, double %72, i32 6
  %temp.vect149 = insertelement <16 x double> %temp.vect148, double %73, i32 7
  %temp.vect150 = insertelement <16 x double> %temp.vect149, double %74, i32 8
  %temp.vect151 = insertelement <16 x double> %temp.vect150, double %75, i32 9
  %temp.vect152 = insertelement <16 x double> %temp.vect151, double %76, i32 10
  %temp.vect153 = insertelement <16 x double> %temp.vect152, double %77, i32 11
  %temp.vect154 = insertelement <16 x double> %temp.vect153, double %78, i32 12
  %temp.vect155 = insertelement <16 x double> %temp.vect154, double %79, i32 13
  %temp.vect156 = insertelement <16 x double> %temp.vect155, double %80, i32 14
  %temp.vect157 = insertelement <16 x double> %temp.vect156, double %81, i32 15
  %82 = fmul <16 x double> %65, %temp.vect157
  %83 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %84 = load i64* %83, align 8
  %85 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %86 = load i64* %85, align 8
  %87 = add i64 %84, %86
  %88 = getelementptr inbounds double addrspace(1)* %RB, i64 %87
  %ptrTypeCast176 = bitcast double addrspace(1)* %88 to <16 x double> addrspace(1)*
  store <16 x double> %82, <16 x double> addrspace(1)* %ptrTypeCast176, align 8
  %89 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %90 = load i64* %89, align 8
  %91 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %92 = load i64* %91, align 8
  %93 = add i64 %90, %92
  %94 = getelementptr inbounds double addrspace(1)* %EG, i64 %93
  %ptrTypeCast195 = bitcast double addrspace(1)* %94 to <16 x double> addrspace(1)*
  %95 = load <16 x double> addrspace(1)* %ptrTypeCast195, align 8
  %96 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %97 = load i64* %96, align 8
  %98 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %99 = load i64* %98, align 8
  %100 = add i64 %97, %99
  %extract198 = add i64 %100, 221184
  %101 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract198
  %ptrTypeCast214 = bitcast double addrspace(1)* %101 to <16 x double> addrspace(1)*
  %102 = load <16 x double> addrspace(1)* %ptrTypeCast214, align 8
  %103 = fmul <16 x double> %95, %102
  %104 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %105 = load i64* %104, align 8
  %106 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %107 = load i64* %106, align 8
  %108 = add i64 %105, %107
  %extract217 = add i64 %108, 110592
  %109 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract217
  %ptrTypeCast233 = bitcast double addrspace(1)* %109 to <16 x double> addrspace(1)*
  %110 = load <16 x double> addrspace(1)* %ptrTypeCast233, align 8
  %111 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %112 = load i64* %111, align 8
  %113 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %114 = load i64* %113, align 8
  %115 = add i64 %112, %114
  %extract236 = add i64 %115, 442368
  %116 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract236
  %ptrTypeCast252 = bitcast double addrspace(1)* %116 to <16 x double> addrspace(1)*
  %117 = load <16 x double> addrspace(1)* %ptrTypeCast252, align 8
  %118 = fmul <16 x double> %110, %117
  %119 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %118
  %120 = fmul <16 x double> %103, %119
  %extract272 = extractelement <16 x double> %120, i32 0
  %extract273 = extractelement <16 x double> %120, i32 1
  %extract274 = extractelement <16 x double> %120, i32 2
  %extract275 = extractelement <16 x double> %120, i32 3
  %extract276 = extractelement <16 x double> %120, i32 4
  %extract277 = extractelement <16 x double> %120, i32 5
  %extract278 = extractelement <16 x double> %120, i32 6
  %extract279 = extractelement <16 x double> %120, i32 7
  %extract280 = extractelement <16 x double> %120, i32 8
  %extract281 = extractelement <16 x double> %120, i32 9
  %extract282 = extractelement <16 x double> %120, i32 10
  %extract283 = extractelement <16 x double> %120, i32 11
  %extract284 = extractelement <16 x double> %120, i32 12
  %extract285 = extractelement <16 x double> %120, i32 13
  %extract286 = extractelement <16 x double> %120, i32 14
  %extract287 = extractelement <16 x double> %120, i32 15
  %121 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %122 = load i64* %121, align 8
  %123 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %124 = load i64* %123, align 8
  %125 = add i64 %122, %124
  %extract255 = add i64 %125, 110592
  %126 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract255
  %ptrTypeCast271 = bitcast double addrspace(1)* %126 to <16 x double> addrspace(1)*
  %127 = load <16 x double> addrspace(1)* %ptrTypeCast271, align 8
  %128 = tail call double @_Z4fmindd(double %extract272, double 1.000000e+300) nounwind
  %129 = tail call double @_Z4fmindd(double %extract273, double 1.000000e+300) nounwind
  %130 = tail call double @_Z4fmindd(double %extract274, double 1.000000e+300) nounwind
  %131 = tail call double @_Z4fmindd(double %extract275, double 1.000000e+300) nounwind
  %132 = tail call double @_Z4fmindd(double %extract276, double 1.000000e+300) nounwind
  %133 = tail call double @_Z4fmindd(double %extract277, double 1.000000e+300) nounwind
  %134 = tail call double @_Z4fmindd(double %extract278, double 1.000000e+300) nounwind
  %135 = tail call double @_Z4fmindd(double %extract279, double 1.000000e+300) nounwind
  %136 = tail call double @_Z4fmindd(double %extract280, double 1.000000e+300) nounwind
  %137 = tail call double @_Z4fmindd(double %extract281, double 1.000000e+300) nounwind
  %138 = tail call double @_Z4fmindd(double %extract282, double 1.000000e+300) nounwind
  %139 = tail call double @_Z4fmindd(double %extract283, double 1.000000e+300) nounwind
  %140 = tail call double @_Z4fmindd(double %extract284, double 1.000000e+300) nounwind
  %141 = tail call double @_Z4fmindd(double %extract285, double 1.000000e+300) nounwind
  %142 = tail call double @_Z4fmindd(double %extract286, double 1.000000e+300) nounwind
  %143 = tail call double @_Z4fmindd(double %extract287, double 1.000000e+300) nounwind
  %temp.vect288 = insertelement <16 x double> undef, double %128, i32 0
  %temp.vect289 = insertelement <16 x double> %temp.vect288, double %129, i32 1
  %temp.vect290 = insertelement <16 x double> %temp.vect289, double %130, i32 2
  %temp.vect291 = insertelement <16 x double> %temp.vect290, double %131, i32 3
  %temp.vect292 = insertelement <16 x double> %temp.vect291, double %132, i32 4
  %temp.vect293 = insertelement <16 x double> %temp.vect292, double %133, i32 5
  %temp.vect294 = insertelement <16 x double> %temp.vect293, double %134, i32 6
  %temp.vect295 = insertelement <16 x double> %temp.vect294, double %135, i32 7
  %temp.vect296 = insertelement <16 x double> %temp.vect295, double %136, i32 8
  %temp.vect297 = insertelement <16 x double> %temp.vect296, double %137, i32 9
  %temp.vect298 = insertelement <16 x double> %temp.vect297, double %138, i32 10
  %temp.vect299 = insertelement <16 x double> %temp.vect298, double %139, i32 11
  %temp.vect300 = insertelement <16 x double> %temp.vect299, double %140, i32 12
  %temp.vect301 = insertelement <16 x double> %temp.vect300, double %141, i32 13
  %temp.vect302 = insertelement <16 x double> %temp.vect301, double %142, i32 14
  %temp.vect303 = insertelement <16 x double> %temp.vect302, double %143, i32 15
  %144 = fmul <16 x double> %127, %temp.vect303
  %145 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %146 = load i64* %145, align 8
  %147 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %148 = load i64* %147, align 8
  %149 = add i64 %146, %148
  %extract306 = add i64 %149, 110592
  %150 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract306
  %ptrTypeCast322 = bitcast double addrspace(1)* %150 to <16 x double> addrspace(1)*
  store <16 x double> %144, <16 x double> addrspace(1)* %ptrTypeCast322, align 8
  %151 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %152 = load i64* %151, align 8
  %153 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %154 = load i64* %153, align 8
  %155 = add i64 %152, %154
  %156 = getelementptr inbounds double addrspace(1)* %EG, i64 %155
  %ptrTypeCast341 = bitcast double addrspace(1)* %156 to <16 x double> addrspace(1)*
  %157 = load <16 x double> addrspace(1)* %ptrTypeCast341, align 8
  %158 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %159 = load i64* %158, align 8
  %160 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %161 = load i64* %160, align 8
  %162 = add i64 %159, %161
  %extract344 = add i64 %162, 442368
  %163 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract344
  %ptrTypeCast360 = bitcast double addrspace(1)* %163 to <16 x double> addrspace(1)*
  %164 = load <16 x double> addrspace(1)* %ptrTypeCast360, align 8
  %165 = fmul <16 x double> %157, %164
  %166 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %167 = load i64* %166, align 8
  %168 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %169 = load i64* %168, align 8
  %170 = add i64 %167, %169
  %extract363 = add i64 %170, 110592
  %171 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract363
  %ptrTypeCast379 = bitcast double addrspace(1)* %171 to <16 x double> addrspace(1)*
  %172 = load <16 x double> addrspace(1)* %ptrTypeCast379, align 8
  %173 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %174 = load i64* %173, align 8
  %175 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %176 = load i64* %175, align 8
  %177 = add i64 %174, %176
  %extract382 = add i64 %177, 552960
  %178 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract382
  %ptrTypeCast398 = bitcast double addrspace(1)* %178 to <16 x double> addrspace(1)*
  %179 = load <16 x double> addrspace(1)* %ptrTypeCast398, align 8
  %180 = fmul <16 x double> %172, %179
  %181 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %180
  %182 = fmul <16 x double> %165, %181
  %extract418 = extractelement <16 x double> %182, i32 0
  %extract419 = extractelement <16 x double> %182, i32 1
  %extract420 = extractelement <16 x double> %182, i32 2
  %extract421 = extractelement <16 x double> %182, i32 3
  %extract422 = extractelement <16 x double> %182, i32 4
  %extract423 = extractelement <16 x double> %182, i32 5
  %extract424 = extractelement <16 x double> %182, i32 6
  %extract425 = extractelement <16 x double> %182, i32 7
  %extract426 = extractelement <16 x double> %182, i32 8
  %extract427 = extractelement <16 x double> %182, i32 9
  %extract428 = extractelement <16 x double> %182, i32 10
  %extract429 = extractelement <16 x double> %182, i32 11
  %extract430 = extractelement <16 x double> %182, i32 12
  %extract431 = extractelement <16 x double> %182, i32 13
  %extract432 = extractelement <16 x double> %182, i32 14
  %extract433 = extractelement <16 x double> %182, i32 15
  %183 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %184 = load i64* %183, align 8
  %185 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %186 = load i64* %185, align 8
  %187 = add i64 %184, %186
  %extract401 = add i64 %187, 221184
  %188 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract401
  %ptrTypeCast417 = bitcast double addrspace(1)* %188 to <16 x double> addrspace(1)*
  %189 = load <16 x double> addrspace(1)* %ptrTypeCast417, align 8
  %190 = tail call double @_Z4fmindd(double %extract418, double 1.000000e+300) nounwind
  %191 = tail call double @_Z4fmindd(double %extract419, double 1.000000e+300) nounwind
  %192 = tail call double @_Z4fmindd(double %extract420, double 1.000000e+300) nounwind
  %193 = tail call double @_Z4fmindd(double %extract421, double 1.000000e+300) nounwind
  %194 = tail call double @_Z4fmindd(double %extract422, double 1.000000e+300) nounwind
  %195 = tail call double @_Z4fmindd(double %extract423, double 1.000000e+300) nounwind
  %196 = tail call double @_Z4fmindd(double %extract424, double 1.000000e+300) nounwind
  %197 = tail call double @_Z4fmindd(double %extract425, double 1.000000e+300) nounwind
  %198 = tail call double @_Z4fmindd(double %extract426, double 1.000000e+300) nounwind
  %199 = tail call double @_Z4fmindd(double %extract427, double 1.000000e+300) nounwind
  %200 = tail call double @_Z4fmindd(double %extract428, double 1.000000e+300) nounwind
  %201 = tail call double @_Z4fmindd(double %extract429, double 1.000000e+300) nounwind
  %202 = tail call double @_Z4fmindd(double %extract430, double 1.000000e+300) nounwind
  %203 = tail call double @_Z4fmindd(double %extract431, double 1.000000e+300) nounwind
  %204 = tail call double @_Z4fmindd(double %extract432, double 1.000000e+300) nounwind
  %205 = tail call double @_Z4fmindd(double %extract433, double 1.000000e+300) nounwind
  %temp.vect434 = insertelement <16 x double> undef, double %190, i32 0
  %temp.vect435 = insertelement <16 x double> %temp.vect434, double %191, i32 1
  %temp.vect436 = insertelement <16 x double> %temp.vect435, double %192, i32 2
  %temp.vect437 = insertelement <16 x double> %temp.vect436, double %193, i32 3
  %temp.vect438 = insertelement <16 x double> %temp.vect437, double %194, i32 4
  %temp.vect439 = insertelement <16 x double> %temp.vect438, double %195, i32 5
  %temp.vect440 = insertelement <16 x double> %temp.vect439, double %196, i32 6
  %temp.vect441 = insertelement <16 x double> %temp.vect440, double %197, i32 7
  %temp.vect442 = insertelement <16 x double> %temp.vect441, double %198, i32 8
  %temp.vect443 = insertelement <16 x double> %temp.vect442, double %199, i32 9
  %temp.vect444 = insertelement <16 x double> %temp.vect443, double %200, i32 10
  %temp.vect445 = insertelement <16 x double> %temp.vect444, double %201, i32 11
  %temp.vect446 = insertelement <16 x double> %temp.vect445, double %202, i32 12
  %temp.vect447 = insertelement <16 x double> %temp.vect446, double %203, i32 13
  %temp.vect448 = insertelement <16 x double> %temp.vect447, double %204, i32 14
  %temp.vect449 = insertelement <16 x double> %temp.vect448, double %205, i32 15
  %206 = fmul <16 x double> %189, %temp.vect449
  %207 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %208 = load i64* %207, align 8
  %209 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %210 = load i64* %209, align 8
  %211 = add i64 %208, %210
  %extract452 = add i64 %211, 221184
  %212 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract452
  %ptrTypeCast468 = bitcast double addrspace(1)* %212 to <16 x double> addrspace(1)*
  store <16 x double> %206, <16 x double> addrspace(1)* %ptrTypeCast468, align 8
  %213 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %214 = load i64* %213, align 8
  %215 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %216 = load i64* %215, align 8
  %217 = add i64 %214, %216
  %extract471 = add i64 %217, 442368
  %218 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract471
  %ptrTypeCast487 = bitcast double addrspace(1)* %218 to <16 x double> addrspace(1)*
  %219 = load <16 x double> addrspace(1)* %ptrTypeCast487, align 8
  %220 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %221 = load i64* %220, align 8
  %222 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %223 = load i64* %222, align 8
  %224 = add i64 %221, %223
  %extract490 = add i64 %224, 442368
  %225 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract490
  %ptrTypeCast506 = bitcast double addrspace(1)* %225 to <16 x double> addrspace(1)*
  %226 = load <16 x double> addrspace(1)* %ptrTypeCast506, align 8
  %227 = fmul <16 x double> %219, %226
  %228 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %229 = load i64* %228, align 8
  %230 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %231 = load i64* %230, align 8
  %232 = add i64 %229, %231
  %extract509 = add i64 %232, 221184
  %233 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract509
  %ptrTypeCast525 = bitcast double addrspace(1)* %233 to <16 x double> addrspace(1)*
  %234 = load <16 x double> addrspace(1)* %ptrTypeCast525, align 8
  %235 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %236 = load i64* %235, align 8
  %237 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %238 = load i64* %237, align 8
  %239 = add i64 %236, %238
  %extract528 = add i64 %239, 552960
  %240 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract528
  %ptrTypeCast544 = bitcast double addrspace(1)* %240 to <16 x double> addrspace(1)*
  %241 = load <16 x double> addrspace(1)* %ptrTypeCast544, align 8
  %242 = fmul <16 x double> %234, %241
  %243 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %242
  %244 = fmul <16 x double> %227, %243
  %extract564 = extractelement <16 x double> %244, i32 0
  %extract565 = extractelement <16 x double> %244, i32 1
  %extract566 = extractelement <16 x double> %244, i32 2
  %extract567 = extractelement <16 x double> %244, i32 3
  %extract568 = extractelement <16 x double> %244, i32 4
  %extract569 = extractelement <16 x double> %244, i32 5
  %extract570 = extractelement <16 x double> %244, i32 6
  %extract571 = extractelement <16 x double> %244, i32 7
  %extract572 = extractelement <16 x double> %244, i32 8
  %extract573 = extractelement <16 x double> %244, i32 9
  %extract574 = extractelement <16 x double> %244, i32 10
  %extract575 = extractelement <16 x double> %244, i32 11
  %extract576 = extractelement <16 x double> %244, i32 12
  %extract577 = extractelement <16 x double> %244, i32 13
  %extract578 = extractelement <16 x double> %244, i32 14
  %extract579 = extractelement <16 x double> %244, i32 15
  %245 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %246 = load i64* %245, align 8
  %247 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %248 = load i64* %247, align 8
  %249 = add i64 %246, %248
  %extract547 = add i64 %249, 331776
  %250 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract547
  %ptrTypeCast563 = bitcast double addrspace(1)* %250 to <16 x double> addrspace(1)*
  %251 = load <16 x double> addrspace(1)* %ptrTypeCast563, align 8
  %252 = tail call double @_Z4fmindd(double %extract564, double 1.000000e+300) nounwind
  %253 = tail call double @_Z4fmindd(double %extract565, double 1.000000e+300) nounwind
  %254 = tail call double @_Z4fmindd(double %extract566, double 1.000000e+300) nounwind
  %255 = tail call double @_Z4fmindd(double %extract567, double 1.000000e+300) nounwind
  %256 = tail call double @_Z4fmindd(double %extract568, double 1.000000e+300) nounwind
  %257 = tail call double @_Z4fmindd(double %extract569, double 1.000000e+300) nounwind
  %258 = tail call double @_Z4fmindd(double %extract570, double 1.000000e+300) nounwind
  %259 = tail call double @_Z4fmindd(double %extract571, double 1.000000e+300) nounwind
  %260 = tail call double @_Z4fmindd(double %extract572, double 1.000000e+300) nounwind
  %261 = tail call double @_Z4fmindd(double %extract573, double 1.000000e+300) nounwind
  %262 = tail call double @_Z4fmindd(double %extract574, double 1.000000e+300) nounwind
  %263 = tail call double @_Z4fmindd(double %extract575, double 1.000000e+300) nounwind
  %264 = tail call double @_Z4fmindd(double %extract576, double 1.000000e+300) nounwind
  %265 = tail call double @_Z4fmindd(double %extract577, double 1.000000e+300) nounwind
  %266 = tail call double @_Z4fmindd(double %extract578, double 1.000000e+300) nounwind
  %267 = tail call double @_Z4fmindd(double %extract579, double 1.000000e+300) nounwind
  %temp.vect580 = insertelement <16 x double> undef, double %252, i32 0
  %temp.vect581 = insertelement <16 x double> %temp.vect580, double %253, i32 1
  %temp.vect582 = insertelement <16 x double> %temp.vect581, double %254, i32 2
  %temp.vect583 = insertelement <16 x double> %temp.vect582, double %255, i32 3
  %temp.vect584 = insertelement <16 x double> %temp.vect583, double %256, i32 4
  %temp.vect585 = insertelement <16 x double> %temp.vect584, double %257, i32 5
  %temp.vect586 = insertelement <16 x double> %temp.vect585, double %258, i32 6
  %temp.vect587 = insertelement <16 x double> %temp.vect586, double %259, i32 7
  %temp.vect588 = insertelement <16 x double> %temp.vect587, double %260, i32 8
  %temp.vect589 = insertelement <16 x double> %temp.vect588, double %261, i32 9
  %temp.vect590 = insertelement <16 x double> %temp.vect589, double %262, i32 10
  %temp.vect591 = insertelement <16 x double> %temp.vect590, double %263, i32 11
  %temp.vect592 = insertelement <16 x double> %temp.vect591, double %264, i32 12
  %temp.vect593 = insertelement <16 x double> %temp.vect592, double %265, i32 13
  %temp.vect594 = insertelement <16 x double> %temp.vect593, double %266, i32 14
  %temp.vect595 = insertelement <16 x double> %temp.vect594, double %267, i32 15
  %268 = fmul <16 x double> %251, %temp.vect595
  %269 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %270 = load i64* %269, align 8
  %271 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %272 = load i64* %271, align 8
  %273 = add i64 %270, %272
  %extract598 = add i64 %273, 331776
  %274 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract598
  %ptrTypeCast614 = bitcast double addrspace(1)* %274 to <16 x double> addrspace(1)*
  store <16 x double> %268, <16 x double> addrspace(1)* %ptrTypeCast614, align 8
  %275 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %276 = load i64* %275, align 8
  %277 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %278 = load i64* %277, align 8
  %279 = add i64 %276, %278
  %extract617 = add i64 %279, 110592
  %280 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract617
  %ptrTypeCast633 = bitcast double addrspace(1)* %280 to <16 x double> addrspace(1)*
  %281 = load <16 x double> addrspace(1)* %ptrTypeCast633, align 8
  %282 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %283 = load i64* %282, align 8
  %284 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %285 = load i64* %284, align 8
  %286 = add i64 %283, %285
  %extract636 = add i64 %286, 110592
  %287 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract636
  %ptrTypeCast652 = bitcast double addrspace(1)* %287 to <16 x double> addrspace(1)*
  %288 = load <16 x double> addrspace(1)* %ptrTypeCast652, align 8
  %289 = fmul <16 x double> %281, %288
  %290 = fmul <16 x double> %289, %26
  %291 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %292 = load i64* %291, align 8
  %293 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %294 = load i64* %293, align 8
  %295 = add i64 %292, %294
  %296 = getelementptr inbounds double addrspace(1)* %EG, i64 %295
  %ptrTypeCast671 = bitcast double addrspace(1)* %296 to <16 x double> addrspace(1)*
  %297 = load <16 x double> addrspace(1)* %ptrTypeCast671, align 8
  %298 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %297
  %299 = fmul <16 x double> %290, %298
  %extract691 = extractelement <16 x double> %299, i32 0
  %extract692 = extractelement <16 x double> %299, i32 1
  %extract693 = extractelement <16 x double> %299, i32 2
  %extract694 = extractelement <16 x double> %299, i32 3
  %extract695 = extractelement <16 x double> %299, i32 4
  %extract696 = extractelement <16 x double> %299, i32 5
  %extract697 = extractelement <16 x double> %299, i32 6
  %extract698 = extractelement <16 x double> %299, i32 7
  %extract699 = extractelement <16 x double> %299, i32 8
  %extract700 = extractelement <16 x double> %299, i32 9
  %extract701 = extractelement <16 x double> %299, i32 10
  %extract702 = extractelement <16 x double> %299, i32 11
  %extract703 = extractelement <16 x double> %299, i32 12
  %extract704 = extractelement <16 x double> %299, i32 13
  %extract705 = extractelement <16 x double> %299, i32 14
  %extract706 = extractelement <16 x double> %299, i32 15
  %300 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %301 = load i64* %300, align 8
  %302 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %303 = load i64* %302, align 8
  %304 = add i64 %301, %303
  %extract674 = add i64 %304, 442368
  %305 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract674
  %ptrTypeCast690 = bitcast double addrspace(1)* %305 to <16 x double> addrspace(1)*
  %306 = load <16 x double> addrspace(1)* %ptrTypeCast690, align 8
  %307 = tail call double @_Z4fmindd(double %extract691, double 1.000000e+300) nounwind
  %308 = tail call double @_Z4fmindd(double %extract692, double 1.000000e+300) nounwind
  %309 = tail call double @_Z4fmindd(double %extract693, double 1.000000e+300) nounwind
  %310 = tail call double @_Z4fmindd(double %extract694, double 1.000000e+300) nounwind
  %311 = tail call double @_Z4fmindd(double %extract695, double 1.000000e+300) nounwind
  %312 = tail call double @_Z4fmindd(double %extract696, double 1.000000e+300) nounwind
  %313 = tail call double @_Z4fmindd(double %extract697, double 1.000000e+300) nounwind
  %314 = tail call double @_Z4fmindd(double %extract698, double 1.000000e+300) nounwind
  %315 = tail call double @_Z4fmindd(double %extract699, double 1.000000e+300) nounwind
  %316 = tail call double @_Z4fmindd(double %extract700, double 1.000000e+300) nounwind
  %317 = tail call double @_Z4fmindd(double %extract701, double 1.000000e+300) nounwind
  %318 = tail call double @_Z4fmindd(double %extract702, double 1.000000e+300) nounwind
  %319 = tail call double @_Z4fmindd(double %extract703, double 1.000000e+300) nounwind
  %320 = tail call double @_Z4fmindd(double %extract704, double 1.000000e+300) nounwind
  %321 = tail call double @_Z4fmindd(double %extract705, double 1.000000e+300) nounwind
  %322 = tail call double @_Z4fmindd(double %extract706, double 1.000000e+300) nounwind
  %temp.vect707 = insertelement <16 x double> undef, double %307, i32 0
  %temp.vect708 = insertelement <16 x double> %temp.vect707, double %308, i32 1
  %temp.vect709 = insertelement <16 x double> %temp.vect708, double %309, i32 2
  %temp.vect710 = insertelement <16 x double> %temp.vect709, double %310, i32 3
  %temp.vect711 = insertelement <16 x double> %temp.vect710, double %311, i32 4
  %temp.vect712 = insertelement <16 x double> %temp.vect711, double %312, i32 5
  %temp.vect713 = insertelement <16 x double> %temp.vect712, double %313, i32 6
  %temp.vect714 = insertelement <16 x double> %temp.vect713, double %314, i32 7
  %temp.vect715 = insertelement <16 x double> %temp.vect714, double %315, i32 8
  %temp.vect716 = insertelement <16 x double> %temp.vect715, double %316, i32 9
  %temp.vect717 = insertelement <16 x double> %temp.vect716, double %317, i32 10
  %temp.vect718 = insertelement <16 x double> %temp.vect717, double %318, i32 11
  %temp.vect719 = insertelement <16 x double> %temp.vect718, double %319, i32 12
  %temp.vect720 = insertelement <16 x double> %temp.vect719, double %320, i32 13
  %temp.vect721 = insertelement <16 x double> %temp.vect720, double %321, i32 14
  %temp.vect722 = insertelement <16 x double> %temp.vect721, double %322, i32 15
  %323 = fmul <16 x double> %306, %temp.vect722
  %324 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %325 = load i64* %324, align 8
  %326 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %327 = load i64* %326, align 8
  %328 = add i64 %325, %327
  %extract725 = add i64 %328, 442368
  %329 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract725
  %ptrTypeCast741 = bitcast double addrspace(1)* %329 to <16 x double> addrspace(1)*
  store <16 x double> %323, <16 x double> addrspace(1)* %ptrTypeCast741, align 8
  %330 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %331 = load i64* %330, align 8
  %332 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %333 = load i64* %332, align 8
  %334 = add i64 %331, %333
  %extract744 = add i64 %334, 110592
  %335 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract744
  %ptrTypeCast760 = bitcast double addrspace(1)* %335 to <16 x double> addrspace(1)*
  %336 = load <16 x double> addrspace(1)* %ptrTypeCast760, align 8
  %337 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %338 = load i64* %337, align 8
  %339 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %340 = load i64* %339, align 8
  %341 = add i64 %338, %340
  %extract763 = add i64 %341, 110592
  %342 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract763
  %ptrTypeCast779 = bitcast double addrspace(1)* %342 to <16 x double> addrspace(1)*
  %343 = load <16 x double> addrspace(1)* %ptrTypeCast779, align 8
  %344 = fmul <16 x double> %336, %343
  %345 = fmul <16 x double> %344, %26
  %346 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %347 = load i64* %346, align 8
  %348 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %349 = load i64* %348, align 8
  %350 = add i64 %347, %349
  %351 = getelementptr inbounds double addrspace(1)* %EG, i64 %350
  %ptrTypeCast798 = bitcast double addrspace(1)* %351 to <16 x double> addrspace(1)*
  %352 = load <16 x double> addrspace(1)* %ptrTypeCast798, align 8
  %353 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %352
  %354 = fmul <16 x double> %345, %353
  %extract818 = extractelement <16 x double> %354, i32 0
  %extract819 = extractelement <16 x double> %354, i32 1
  %extract820 = extractelement <16 x double> %354, i32 2
  %extract821 = extractelement <16 x double> %354, i32 3
  %extract822 = extractelement <16 x double> %354, i32 4
  %extract823 = extractelement <16 x double> %354, i32 5
  %extract824 = extractelement <16 x double> %354, i32 6
  %extract825 = extractelement <16 x double> %354, i32 7
  %extract826 = extractelement <16 x double> %354, i32 8
  %extract827 = extractelement <16 x double> %354, i32 9
  %extract828 = extractelement <16 x double> %354, i32 10
  %extract829 = extractelement <16 x double> %354, i32 11
  %extract830 = extractelement <16 x double> %354, i32 12
  %extract831 = extractelement <16 x double> %354, i32 13
  %extract832 = extractelement <16 x double> %354, i32 14
  %extract833 = extractelement <16 x double> %354, i32 15
  %355 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %356 = load i64* %355, align 8
  %357 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %358 = load i64* %357, align 8
  %359 = add i64 %356, %358
  %extract801 = add i64 %359, 552960
  %360 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract801
  %ptrTypeCast817 = bitcast double addrspace(1)* %360 to <16 x double> addrspace(1)*
  %361 = load <16 x double> addrspace(1)* %ptrTypeCast817, align 8
  %362 = tail call double @_Z4fmindd(double %extract818, double 1.000000e+300) nounwind
  %363 = tail call double @_Z4fmindd(double %extract819, double 1.000000e+300) nounwind
  %364 = tail call double @_Z4fmindd(double %extract820, double 1.000000e+300) nounwind
  %365 = tail call double @_Z4fmindd(double %extract821, double 1.000000e+300) nounwind
  %366 = tail call double @_Z4fmindd(double %extract822, double 1.000000e+300) nounwind
  %367 = tail call double @_Z4fmindd(double %extract823, double 1.000000e+300) nounwind
  %368 = tail call double @_Z4fmindd(double %extract824, double 1.000000e+300) nounwind
  %369 = tail call double @_Z4fmindd(double %extract825, double 1.000000e+300) nounwind
  %370 = tail call double @_Z4fmindd(double %extract826, double 1.000000e+300) nounwind
  %371 = tail call double @_Z4fmindd(double %extract827, double 1.000000e+300) nounwind
  %372 = tail call double @_Z4fmindd(double %extract828, double 1.000000e+300) nounwind
  %373 = tail call double @_Z4fmindd(double %extract829, double 1.000000e+300) nounwind
  %374 = tail call double @_Z4fmindd(double %extract830, double 1.000000e+300) nounwind
  %375 = tail call double @_Z4fmindd(double %extract831, double 1.000000e+300) nounwind
  %376 = tail call double @_Z4fmindd(double %extract832, double 1.000000e+300) nounwind
  %377 = tail call double @_Z4fmindd(double %extract833, double 1.000000e+300) nounwind
  %temp.vect834 = insertelement <16 x double> undef, double %362, i32 0
  %temp.vect835 = insertelement <16 x double> %temp.vect834, double %363, i32 1
  %temp.vect836 = insertelement <16 x double> %temp.vect835, double %364, i32 2
  %temp.vect837 = insertelement <16 x double> %temp.vect836, double %365, i32 3
  %temp.vect838 = insertelement <16 x double> %temp.vect837, double %366, i32 4
  %temp.vect839 = insertelement <16 x double> %temp.vect838, double %367, i32 5
  %temp.vect840 = insertelement <16 x double> %temp.vect839, double %368, i32 6
  %temp.vect841 = insertelement <16 x double> %temp.vect840, double %369, i32 7
  %temp.vect842 = insertelement <16 x double> %temp.vect841, double %370, i32 8
  %temp.vect843 = insertelement <16 x double> %temp.vect842, double %371, i32 9
  %temp.vect844 = insertelement <16 x double> %temp.vect843, double %372, i32 10
  %temp.vect845 = insertelement <16 x double> %temp.vect844, double %373, i32 11
  %temp.vect846 = insertelement <16 x double> %temp.vect845, double %374, i32 12
  %temp.vect847 = insertelement <16 x double> %temp.vect846, double %375, i32 13
  %temp.vect848 = insertelement <16 x double> %temp.vect847, double %376, i32 14
  %temp.vect849 = insertelement <16 x double> %temp.vect848, double %377, i32 15
  %378 = fmul <16 x double> %361, %temp.vect849
  %379 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %380 = load i64* %379, align 8
  %381 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %382 = load i64* %381, align 8
  %383 = add i64 %380, %382
  %extract852 = add i64 %383, 552960
  %384 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract852
  %ptrTypeCast868 = bitcast double addrspace(1)* %384 to <16 x double> addrspace(1)*
  store <16 x double> %378, <16 x double> addrspace(1)* %ptrTypeCast868, align 8
  %385 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %386 = load i64* %385, align 8
  %387 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %388 = load i64* %387, align 8
  %389 = add i64 %386, %388
  %extract871 = add i64 %389, 110592
  %390 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract871
  %ptrTypeCast887 = bitcast double addrspace(1)* %390 to <16 x double> addrspace(1)*
  %391 = load <16 x double> addrspace(1)* %ptrTypeCast887, align 8
  %392 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %393 = load i64* %392, align 8
  %394 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %395 = load i64* %394, align 8
  %396 = add i64 %393, %395
  %extract890 = add i64 %396, 110592
  %397 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract890
  %ptrTypeCast906 = bitcast double addrspace(1)* %397 to <16 x double> addrspace(1)*
  %398 = load <16 x double> addrspace(1)* %ptrTypeCast906, align 8
  %399 = fmul <16 x double> %391, %398
  %400 = fmul <16 x double> %399, %26
  %401 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %402 = load i64* %401, align 8
  %403 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %404 = load i64* %403, align 8
  %405 = add i64 %402, %404
  %406 = getelementptr inbounds double addrspace(1)* %EG, i64 %405
  %ptrTypeCast925 = bitcast double addrspace(1)* %406 to <16 x double> addrspace(1)*
  %407 = load <16 x double> addrspace(1)* %ptrTypeCast925, align 8
  %408 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %407
  %409 = fmul <16 x double> %400, %408
  %extract945 = extractelement <16 x double> %409, i32 0
  %extract946 = extractelement <16 x double> %409, i32 1
  %extract947 = extractelement <16 x double> %409, i32 2
  %extract948 = extractelement <16 x double> %409, i32 3
  %extract949 = extractelement <16 x double> %409, i32 4
  %extract950 = extractelement <16 x double> %409, i32 5
  %extract951 = extractelement <16 x double> %409, i32 6
  %extract952 = extractelement <16 x double> %409, i32 7
  %extract953 = extractelement <16 x double> %409, i32 8
  %extract954 = extractelement <16 x double> %409, i32 9
  %extract955 = extractelement <16 x double> %409, i32 10
  %extract956 = extractelement <16 x double> %409, i32 11
  %extract957 = extractelement <16 x double> %409, i32 12
  %extract958 = extractelement <16 x double> %409, i32 13
  %extract959 = extractelement <16 x double> %409, i32 14
  %extract960 = extractelement <16 x double> %409, i32 15
  %410 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %411 = load i64* %410, align 8
  %412 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %413 = load i64* %412, align 8
  %414 = add i64 %411, %413
  %extract928 = add i64 %414, 663552
  %415 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract928
  %ptrTypeCast944 = bitcast double addrspace(1)* %415 to <16 x double> addrspace(1)*
  %416 = load <16 x double> addrspace(1)* %ptrTypeCast944, align 8
  %417 = tail call double @_Z4fmindd(double %extract945, double 1.000000e+300) nounwind
  %418 = tail call double @_Z4fmindd(double %extract946, double 1.000000e+300) nounwind
  %419 = tail call double @_Z4fmindd(double %extract947, double 1.000000e+300) nounwind
  %420 = tail call double @_Z4fmindd(double %extract948, double 1.000000e+300) nounwind
  %421 = tail call double @_Z4fmindd(double %extract949, double 1.000000e+300) nounwind
  %422 = tail call double @_Z4fmindd(double %extract950, double 1.000000e+300) nounwind
  %423 = tail call double @_Z4fmindd(double %extract951, double 1.000000e+300) nounwind
  %424 = tail call double @_Z4fmindd(double %extract952, double 1.000000e+300) nounwind
  %425 = tail call double @_Z4fmindd(double %extract953, double 1.000000e+300) nounwind
  %426 = tail call double @_Z4fmindd(double %extract954, double 1.000000e+300) nounwind
  %427 = tail call double @_Z4fmindd(double %extract955, double 1.000000e+300) nounwind
  %428 = tail call double @_Z4fmindd(double %extract956, double 1.000000e+300) nounwind
  %429 = tail call double @_Z4fmindd(double %extract957, double 1.000000e+300) nounwind
  %430 = tail call double @_Z4fmindd(double %extract958, double 1.000000e+300) nounwind
  %431 = tail call double @_Z4fmindd(double %extract959, double 1.000000e+300) nounwind
  %432 = tail call double @_Z4fmindd(double %extract960, double 1.000000e+300) nounwind
  %temp.vect961 = insertelement <16 x double> undef, double %417, i32 0
  %temp.vect962 = insertelement <16 x double> %temp.vect961, double %418, i32 1
  %temp.vect963 = insertelement <16 x double> %temp.vect962, double %419, i32 2
  %temp.vect964 = insertelement <16 x double> %temp.vect963, double %420, i32 3
  %temp.vect965 = insertelement <16 x double> %temp.vect964, double %421, i32 4
  %temp.vect966 = insertelement <16 x double> %temp.vect965, double %422, i32 5
  %temp.vect967 = insertelement <16 x double> %temp.vect966, double %423, i32 6
  %temp.vect968 = insertelement <16 x double> %temp.vect967, double %424, i32 7
  %temp.vect969 = insertelement <16 x double> %temp.vect968, double %425, i32 8
  %temp.vect970 = insertelement <16 x double> %temp.vect969, double %426, i32 9
  %temp.vect971 = insertelement <16 x double> %temp.vect970, double %427, i32 10
  %temp.vect972 = insertelement <16 x double> %temp.vect971, double %428, i32 11
  %temp.vect973 = insertelement <16 x double> %temp.vect972, double %429, i32 12
  %temp.vect974 = insertelement <16 x double> %temp.vect973, double %430, i32 13
  %temp.vect975 = insertelement <16 x double> %temp.vect974, double %431, i32 14
  %temp.vect976 = insertelement <16 x double> %temp.vect975, double %432, i32 15
  %433 = fmul <16 x double> %416, %temp.vect976
  %434 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %435 = load i64* %434, align 8
  %436 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %437 = load i64* %436, align 8
  %438 = add i64 %435, %437
  %extract979 = add i64 %438, 663552
  %439 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract979
  %ptrTypeCast995 = bitcast double addrspace(1)* %439 to <16 x double> addrspace(1)*
  store <16 x double> %433, <16 x double> addrspace(1)* %ptrTypeCast995, align 8
  %440 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %441 = load i64* %440, align 8
  %442 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %443 = load i64* %442, align 8
  %444 = add i64 %441, %443
  %extract998 = add i64 %444, 110592
  %445 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract998
  %ptrTypeCast1014 = bitcast double addrspace(1)* %445 to <16 x double> addrspace(1)*
  %446 = load <16 x double> addrspace(1)* %ptrTypeCast1014, align 8
  %447 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %448 = load i64* %447, align 8
  %449 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %450 = load i64* %449, align 8
  %451 = add i64 %448, %450
  %extract1017 = add i64 %451, 110592
  %452 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract1017
  %ptrTypeCast1033 = bitcast double addrspace(1)* %452 to <16 x double> addrspace(1)*
  %453 = load <16 x double> addrspace(1)* %ptrTypeCast1033, align 8
  %454 = fmul <16 x double> %446, %453
  %455 = fmul <16 x double> %454, %26
  %456 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %457 = load i64* %456, align 8
  %458 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %459 = load i64* %458, align 8
  %460 = add i64 %457, %459
  %461 = getelementptr inbounds double addrspace(1)* %EG, i64 %460
  %ptrTypeCast1052 = bitcast double addrspace(1)* %461 to <16 x double> addrspace(1)*
  %462 = load <16 x double> addrspace(1)* %ptrTypeCast1052, align 8
  %463 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %462
  %464 = fmul <16 x double> %455, %463
  %extract1072 = extractelement <16 x double> %464, i32 0
  %extract1073 = extractelement <16 x double> %464, i32 1
  %extract1074 = extractelement <16 x double> %464, i32 2
  %extract1075 = extractelement <16 x double> %464, i32 3
  %extract1076 = extractelement <16 x double> %464, i32 4
  %extract1077 = extractelement <16 x double> %464, i32 5
  %extract1078 = extractelement <16 x double> %464, i32 6
  %extract1079 = extractelement <16 x double> %464, i32 7
  %extract1080 = extractelement <16 x double> %464, i32 8
  %extract1081 = extractelement <16 x double> %464, i32 9
  %extract1082 = extractelement <16 x double> %464, i32 10
  %extract1083 = extractelement <16 x double> %464, i32 11
  %extract1084 = extractelement <16 x double> %464, i32 12
  %extract1085 = extractelement <16 x double> %464, i32 13
  %extract1086 = extractelement <16 x double> %464, i32 14
  %extract1087 = extractelement <16 x double> %464, i32 15
  %465 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %466 = load i64* %465, align 8
  %467 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %468 = load i64* %467, align 8
  %469 = add i64 %466, %468
  %extract1055 = add i64 %469, 774144
  %470 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1055
  %ptrTypeCast1071 = bitcast double addrspace(1)* %470 to <16 x double> addrspace(1)*
  %471 = load <16 x double> addrspace(1)* %ptrTypeCast1071, align 8
  %472 = tail call double @_Z4fmindd(double %extract1072, double 1.000000e+300) nounwind
  %473 = tail call double @_Z4fmindd(double %extract1073, double 1.000000e+300) nounwind
  %474 = tail call double @_Z4fmindd(double %extract1074, double 1.000000e+300) nounwind
  %475 = tail call double @_Z4fmindd(double %extract1075, double 1.000000e+300) nounwind
  %476 = tail call double @_Z4fmindd(double %extract1076, double 1.000000e+300) nounwind
  %477 = tail call double @_Z4fmindd(double %extract1077, double 1.000000e+300) nounwind
  %478 = tail call double @_Z4fmindd(double %extract1078, double 1.000000e+300) nounwind
  %479 = tail call double @_Z4fmindd(double %extract1079, double 1.000000e+300) nounwind
  %480 = tail call double @_Z4fmindd(double %extract1080, double 1.000000e+300) nounwind
  %481 = tail call double @_Z4fmindd(double %extract1081, double 1.000000e+300) nounwind
  %482 = tail call double @_Z4fmindd(double %extract1082, double 1.000000e+300) nounwind
  %483 = tail call double @_Z4fmindd(double %extract1083, double 1.000000e+300) nounwind
  %484 = tail call double @_Z4fmindd(double %extract1084, double 1.000000e+300) nounwind
  %485 = tail call double @_Z4fmindd(double %extract1085, double 1.000000e+300) nounwind
  %486 = tail call double @_Z4fmindd(double %extract1086, double 1.000000e+300) nounwind
  %487 = tail call double @_Z4fmindd(double %extract1087, double 1.000000e+300) nounwind
  %temp.vect1088 = insertelement <16 x double> undef, double %472, i32 0
  %temp.vect1089 = insertelement <16 x double> %temp.vect1088, double %473, i32 1
  %temp.vect1090 = insertelement <16 x double> %temp.vect1089, double %474, i32 2
  %temp.vect1091 = insertelement <16 x double> %temp.vect1090, double %475, i32 3
  %temp.vect1092 = insertelement <16 x double> %temp.vect1091, double %476, i32 4
  %temp.vect1093 = insertelement <16 x double> %temp.vect1092, double %477, i32 5
  %temp.vect1094 = insertelement <16 x double> %temp.vect1093, double %478, i32 6
  %temp.vect1095 = insertelement <16 x double> %temp.vect1094, double %479, i32 7
  %temp.vect1096 = insertelement <16 x double> %temp.vect1095, double %480, i32 8
  %temp.vect1097 = insertelement <16 x double> %temp.vect1096, double %481, i32 9
  %temp.vect1098 = insertelement <16 x double> %temp.vect1097, double %482, i32 10
  %temp.vect1099 = insertelement <16 x double> %temp.vect1098, double %483, i32 11
  %temp.vect1100 = insertelement <16 x double> %temp.vect1099, double %484, i32 12
  %temp.vect1101 = insertelement <16 x double> %temp.vect1100, double %485, i32 13
  %temp.vect1102 = insertelement <16 x double> %temp.vect1101, double %486, i32 14
  %temp.vect1103 = insertelement <16 x double> %temp.vect1102, double %487, i32 15
  %488 = fmul <16 x double> %471, %temp.vect1103
  %489 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %490 = load i64* %489, align 8
  %491 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %492 = load i64* %491, align 8
  %493 = add i64 %490, %492
  %extract1106 = add i64 %493, 774144
  %494 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract1106
  %ptrTypeCast1122 = bitcast double addrspace(1)* %494 to <16 x double> addrspace(1)*
  store <16 x double> %488, <16 x double> addrspace(1)* %ptrTypeCast1122, align 8
  %495 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %496 = load i64* %495, align 8
  %497 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %498 = load i64* %497, align 8
  %499 = add i64 %496, %498
  %extract1125 = add i64 %499, 110592
  %500 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract1125
  %ptrTypeCast1141 = bitcast double addrspace(1)* %500 to <16 x double> addrspace(1)*
  %501 = load <16 x double> addrspace(1)* %ptrTypeCast1141, align 8
  %502 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %503 = load i64* %502, align 8
  %504 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %505 = load i64* %504, align 8
  %506 = add i64 %503, %505
  %extract1144 = add i64 %506, 442368
  %507 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract1144
  %ptrTypeCast1160 = bitcast double addrspace(1)* %507 to <16 x double> addrspace(1)*
  %508 = load <16 x double> addrspace(1)* %ptrTypeCast1160, align 8
  %509 = fmul <16 x double> %501, %508
  %510 = fmul <16 x double> %509, %26
  %511 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %512 = load i64* %511, align 8
  %513 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %514 = load i64* %513, align 8
  %515 = add i64 %512, %514
  %extract1163 = add i64 %515, 552960
  %516 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract1163
  %ptrTypeCast1179 = bitcast double addrspace(1)* %516 to <16 x double> addrspace(1)*
  %517 = load <16 x double> addrspace(1)* %ptrTypeCast1179, align 8
  %518 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %517
  %519 = fmul <16 x double> %510, %518
  %extract1199 = extractelement <16 x double> %519, i32 0
  %extract1200 = extractelement <16 x double> %519, i32 1
  %extract1201 = extractelement <16 x double> %519, i32 2
  %extract1202 = extractelement <16 x double> %519, i32 3
  %extract1203 = extractelement <16 x double> %519, i32 4
  %extract1204 = extractelement <16 x double> %519, i32 5
  %extract1205 = extractelement <16 x double> %519, i32 6
  %extract1206 = extractelement <16 x double> %519, i32 7
  %extract1207 = extractelement <16 x double> %519, i32 8
  %extract1208 = extractelement <16 x double> %519, i32 9
  %extract1209 = extractelement <16 x double> %519, i32 10
  %extract1210 = extractelement <16 x double> %519, i32 11
  %extract1211 = extractelement <16 x double> %519, i32 12
  %extract1212 = extractelement <16 x double> %519, i32 13
  %extract1213 = extractelement <16 x double> %519, i32 14
  %extract1214 = extractelement <16 x double> %519, i32 15
  %520 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %521 = load i64* %520, align 8
  %522 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %523 = load i64* %522, align 8
  %524 = add i64 %521, %523
  %extract1182 = add i64 %524, 884736
  %525 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1182
  %ptrTypeCast1198 = bitcast double addrspace(1)* %525 to <16 x double> addrspace(1)*
  %526 = load <16 x double> addrspace(1)* %ptrTypeCast1198, align 8
  %527 = tail call double @_Z4fmindd(double %extract1199, double 1.000000e+300) nounwind
  %528 = tail call double @_Z4fmindd(double %extract1200, double 1.000000e+300) nounwind
  %529 = tail call double @_Z4fmindd(double %extract1201, double 1.000000e+300) nounwind
  %530 = tail call double @_Z4fmindd(double %extract1202, double 1.000000e+300) nounwind
  %531 = tail call double @_Z4fmindd(double %extract1203, double 1.000000e+300) nounwind
  %532 = tail call double @_Z4fmindd(double %extract1204, double 1.000000e+300) nounwind
  %533 = tail call double @_Z4fmindd(double %extract1205, double 1.000000e+300) nounwind
  %534 = tail call double @_Z4fmindd(double %extract1206, double 1.000000e+300) nounwind
  %535 = tail call double @_Z4fmindd(double %extract1207, double 1.000000e+300) nounwind
  %536 = tail call double @_Z4fmindd(double %extract1208, double 1.000000e+300) nounwind
  %537 = tail call double @_Z4fmindd(double %extract1209, double 1.000000e+300) nounwind
  %538 = tail call double @_Z4fmindd(double %extract1210, double 1.000000e+300) nounwind
  %539 = tail call double @_Z4fmindd(double %extract1211, double 1.000000e+300) nounwind
  %540 = tail call double @_Z4fmindd(double %extract1212, double 1.000000e+300) nounwind
  %541 = tail call double @_Z4fmindd(double %extract1213, double 1.000000e+300) nounwind
  %542 = tail call double @_Z4fmindd(double %extract1214, double 1.000000e+300) nounwind
  %temp.vect1215 = insertelement <16 x double> undef, double %527, i32 0
  %temp.vect1216 = insertelement <16 x double> %temp.vect1215, double %528, i32 1
  %temp.vect1217 = insertelement <16 x double> %temp.vect1216, double %529, i32 2
  %temp.vect1218 = insertelement <16 x double> %temp.vect1217, double %530, i32 3
  %temp.vect1219 = insertelement <16 x double> %temp.vect1218, double %531, i32 4
  %temp.vect1220 = insertelement <16 x double> %temp.vect1219, double %532, i32 5
  %temp.vect1221 = insertelement <16 x double> %temp.vect1220, double %533, i32 6
  %temp.vect1222 = insertelement <16 x double> %temp.vect1221, double %534, i32 7
  %temp.vect1223 = insertelement <16 x double> %temp.vect1222, double %535, i32 8
  %temp.vect1224 = insertelement <16 x double> %temp.vect1223, double %536, i32 9
  %temp.vect1225 = insertelement <16 x double> %temp.vect1224, double %537, i32 10
  %temp.vect1226 = insertelement <16 x double> %temp.vect1225, double %538, i32 11
  %temp.vect1227 = insertelement <16 x double> %temp.vect1226, double %539, i32 12
  %temp.vect1228 = insertelement <16 x double> %temp.vect1227, double %540, i32 13
  %temp.vect1229 = insertelement <16 x double> %temp.vect1228, double %541, i32 14
  %temp.vect1230 = insertelement <16 x double> %temp.vect1229, double %542, i32 15
  %543 = fmul <16 x double> %526, %temp.vect1230
  %544 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %545 = load i64* %544, align 8
  %546 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %547 = load i64* %546, align 8
  %548 = add i64 %545, %547
  %extract1233 = add i64 %548, 884736
  %549 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract1233
  %ptrTypeCast1249 = bitcast double addrspace(1)* %549 to <16 x double> addrspace(1)*
  store <16 x double> %543, <16 x double> addrspace(1)* %ptrTypeCast1249, align 8
  %550 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %551 = load i64* %550, align 8
  %552 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %553 = load i64* %552, align 8
  %554 = add i64 %551, %553
  %extract1252 = add i64 %554, 110592
  %555 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract1252
  %ptrTypeCast1268 = bitcast double addrspace(1)* %555 to <16 x double> addrspace(1)*
  %556 = load <16 x double> addrspace(1)* %ptrTypeCast1268, align 8
  %557 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %558 = load i64* %557, align 8
  %559 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %560 = load i64* %559, align 8
  %561 = add i64 %558, %560
  %extract1271 = add i64 %561, 221184
  %562 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract1271
  %ptrTypeCast1287 = bitcast double addrspace(1)* %562 to <16 x double> addrspace(1)*
  %563 = load <16 x double> addrspace(1)* %ptrTypeCast1287, align 8
  %564 = fmul <16 x double> %556, %563
  %565 = fmul <16 x double> %564, %26
  %566 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %567 = load i64* %566, align 8
  %568 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %569 = load i64* %568, align 8
  %570 = add i64 %567, %569
  %extract1290 = add i64 %570, 442368
  %571 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract1290
  %ptrTypeCast1306 = bitcast double addrspace(1)* %571 to <16 x double> addrspace(1)*
  %572 = load <16 x double> addrspace(1)* %ptrTypeCast1306, align 8
  %573 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %572
  %574 = fmul <16 x double> %565, %573
  %extract1326 = extractelement <16 x double> %574, i32 0
  %extract1327 = extractelement <16 x double> %574, i32 1
  %extract1328 = extractelement <16 x double> %574, i32 2
  %extract1329 = extractelement <16 x double> %574, i32 3
  %extract1330 = extractelement <16 x double> %574, i32 4
  %extract1331 = extractelement <16 x double> %574, i32 5
  %extract1332 = extractelement <16 x double> %574, i32 6
  %extract1333 = extractelement <16 x double> %574, i32 7
  %extract1334 = extractelement <16 x double> %574, i32 8
  %extract1335 = extractelement <16 x double> %574, i32 9
  %extract1336 = extractelement <16 x double> %574, i32 10
  %extract1337 = extractelement <16 x double> %574, i32 11
  %extract1338 = extractelement <16 x double> %574, i32 12
  %extract1339 = extractelement <16 x double> %574, i32 13
  %extract1340 = extractelement <16 x double> %574, i32 14
  %extract1341 = extractelement <16 x double> %574, i32 15
  %575 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %576 = load i64* %575, align 8
  %577 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %578 = load i64* %577, align 8
  %579 = add i64 %576, %578
  %extract1309 = add i64 %579, 995328
  %580 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1309
  %ptrTypeCast1325 = bitcast double addrspace(1)* %580 to <16 x double> addrspace(1)*
  %581 = load <16 x double> addrspace(1)* %ptrTypeCast1325, align 8
  %582 = tail call double @_Z4fmindd(double %extract1326, double 1.000000e+300) nounwind
  %583 = tail call double @_Z4fmindd(double %extract1327, double 1.000000e+300) nounwind
  %584 = tail call double @_Z4fmindd(double %extract1328, double 1.000000e+300) nounwind
  %585 = tail call double @_Z4fmindd(double %extract1329, double 1.000000e+300) nounwind
  %586 = tail call double @_Z4fmindd(double %extract1330, double 1.000000e+300) nounwind
  %587 = tail call double @_Z4fmindd(double %extract1331, double 1.000000e+300) nounwind
  %588 = tail call double @_Z4fmindd(double %extract1332, double 1.000000e+300) nounwind
  %589 = tail call double @_Z4fmindd(double %extract1333, double 1.000000e+300) nounwind
  %590 = tail call double @_Z4fmindd(double %extract1334, double 1.000000e+300) nounwind
  %591 = tail call double @_Z4fmindd(double %extract1335, double 1.000000e+300) nounwind
  %592 = tail call double @_Z4fmindd(double %extract1336, double 1.000000e+300) nounwind
  %593 = tail call double @_Z4fmindd(double %extract1337, double 1.000000e+300) nounwind
  %594 = tail call double @_Z4fmindd(double %extract1338, double 1.000000e+300) nounwind
  %595 = tail call double @_Z4fmindd(double %extract1339, double 1.000000e+300) nounwind
  %596 = tail call double @_Z4fmindd(double %extract1340, double 1.000000e+300) nounwind
  %597 = tail call double @_Z4fmindd(double %extract1341, double 1.000000e+300) nounwind
  %temp.vect1342 = insertelement <16 x double> undef, double %582, i32 0
  %temp.vect1343 = insertelement <16 x double> %temp.vect1342, double %583, i32 1
  %temp.vect1344 = insertelement <16 x double> %temp.vect1343, double %584, i32 2
  %temp.vect1345 = insertelement <16 x double> %temp.vect1344, double %585, i32 3
  %temp.vect1346 = insertelement <16 x double> %temp.vect1345, double %586, i32 4
  %temp.vect1347 = insertelement <16 x double> %temp.vect1346, double %587, i32 5
  %temp.vect1348 = insertelement <16 x double> %temp.vect1347, double %588, i32 6
  %temp.vect1349 = insertelement <16 x double> %temp.vect1348, double %589, i32 7
  %temp.vect1350 = insertelement <16 x double> %temp.vect1349, double %590, i32 8
  %temp.vect1351 = insertelement <16 x double> %temp.vect1350, double %591, i32 9
  %temp.vect1352 = insertelement <16 x double> %temp.vect1351, double %592, i32 10
  %temp.vect1353 = insertelement <16 x double> %temp.vect1352, double %593, i32 11
  %temp.vect1354 = insertelement <16 x double> %temp.vect1353, double %594, i32 12
  %temp.vect1355 = insertelement <16 x double> %temp.vect1354, double %595, i32 13
  %temp.vect1356 = insertelement <16 x double> %temp.vect1355, double %596, i32 14
  %temp.vect1357 = insertelement <16 x double> %temp.vect1356, double %597, i32 15
  %598 = fmul <16 x double> %581, %temp.vect1357
  %599 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %600 = load i64* %599, align 8
  %601 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %602 = load i64* %601, align 8
  %603 = add i64 %600, %602
  %extract1360 = add i64 %603, 995328
  %604 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract1360
  %ptrTypeCast1376 = bitcast double addrspace(1)* %604 to <16 x double> addrspace(1)*
  store <16 x double> %598, <16 x double> addrspace(1)* %ptrTypeCast1376, align 8
  %605 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %606 = load i64* %605, align 8
  %607 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %608 = load i64* %607, align 8
  %609 = add i64 %606, %608
  %extract1379 = add i64 %609, 221184
  %610 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract1379
  %ptrTypeCast1395 = bitcast double addrspace(1)* %610 to <16 x double> addrspace(1)*
  %611 = load <16 x double> addrspace(1)* %ptrTypeCast1395, align 8
  %612 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %613 = load i64* %612, align 8
  %614 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %615 = load i64* %614, align 8
  %616 = add i64 %613, %615
  %extract1398 = add i64 %616, 221184
  %617 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract1398
  %ptrTypeCast1414 = bitcast double addrspace(1)* %617 to <16 x double> addrspace(1)*
  %618 = load <16 x double> addrspace(1)* %ptrTypeCast1414, align 8
  %619 = fmul <16 x double> %611, %618
  %620 = fmul <16 x double> %619, %26
  %621 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %622 = load i64* %621, align 8
  %623 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %624 = load i64* %623, align 8
  %625 = add i64 %622, %624
  %extract1417 = add i64 %625, 331776
  %626 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract1417
  %ptrTypeCast1433 = bitcast double addrspace(1)* %626 to <16 x double> addrspace(1)*
  %627 = load <16 x double> addrspace(1)* %ptrTypeCast1433, align 8
  %628 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %627
  %629 = fmul <16 x double> %620, %628
  %extract1453 = extractelement <16 x double> %629, i32 0
  %extract1454 = extractelement <16 x double> %629, i32 1
  %extract1455 = extractelement <16 x double> %629, i32 2
  %extract1456 = extractelement <16 x double> %629, i32 3
  %extract1457 = extractelement <16 x double> %629, i32 4
  %extract1458 = extractelement <16 x double> %629, i32 5
  %extract1459 = extractelement <16 x double> %629, i32 6
  %extract1460 = extractelement <16 x double> %629, i32 7
  %extract1461 = extractelement <16 x double> %629, i32 8
  %extract1462 = extractelement <16 x double> %629, i32 9
  %extract1463 = extractelement <16 x double> %629, i32 10
  %extract1464 = extractelement <16 x double> %629, i32 11
  %extract1465 = extractelement <16 x double> %629, i32 12
  %extract1466 = extractelement <16 x double> %629, i32 13
  %extract1467 = extractelement <16 x double> %629, i32 14
  %extract1468 = extractelement <16 x double> %629, i32 15
  %630 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %631 = load i64* %630, align 8
  %632 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %633 = load i64* %632, align 8
  %634 = add i64 %631, %633
  %extract1436 = add i64 %634, 1105920
  %635 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1436
  %ptrTypeCast1452 = bitcast double addrspace(1)* %635 to <16 x double> addrspace(1)*
  %636 = load <16 x double> addrspace(1)* %ptrTypeCast1452, align 8
  %637 = tail call double @_Z4fmindd(double %extract1453, double 1.000000e+300) nounwind
  %638 = tail call double @_Z4fmindd(double %extract1454, double 1.000000e+300) nounwind
  %639 = tail call double @_Z4fmindd(double %extract1455, double 1.000000e+300) nounwind
  %640 = tail call double @_Z4fmindd(double %extract1456, double 1.000000e+300) nounwind
  %641 = tail call double @_Z4fmindd(double %extract1457, double 1.000000e+300) nounwind
  %642 = tail call double @_Z4fmindd(double %extract1458, double 1.000000e+300) nounwind
  %643 = tail call double @_Z4fmindd(double %extract1459, double 1.000000e+300) nounwind
  %644 = tail call double @_Z4fmindd(double %extract1460, double 1.000000e+300) nounwind
  %645 = tail call double @_Z4fmindd(double %extract1461, double 1.000000e+300) nounwind
  %646 = tail call double @_Z4fmindd(double %extract1462, double 1.000000e+300) nounwind
  %647 = tail call double @_Z4fmindd(double %extract1463, double 1.000000e+300) nounwind
  %648 = tail call double @_Z4fmindd(double %extract1464, double 1.000000e+300) nounwind
  %649 = tail call double @_Z4fmindd(double %extract1465, double 1.000000e+300) nounwind
  %650 = tail call double @_Z4fmindd(double %extract1466, double 1.000000e+300) nounwind
  %651 = tail call double @_Z4fmindd(double %extract1467, double 1.000000e+300) nounwind
  %652 = tail call double @_Z4fmindd(double %extract1468, double 1.000000e+300) nounwind
  %temp.vect1469 = insertelement <16 x double> undef, double %637, i32 0
  %temp.vect1470 = insertelement <16 x double> %temp.vect1469, double %638, i32 1
  %temp.vect1471 = insertelement <16 x double> %temp.vect1470, double %639, i32 2
  %temp.vect1472 = insertelement <16 x double> %temp.vect1471, double %640, i32 3
  %temp.vect1473 = insertelement <16 x double> %temp.vect1472, double %641, i32 4
  %temp.vect1474 = insertelement <16 x double> %temp.vect1473, double %642, i32 5
  %temp.vect1475 = insertelement <16 x double> %temp.vect1474, double %643, i32 6
  %temp.vect1476 = insertelement <16 x double> %temp.vect1475, double %644, i32 7
  %temp.vect1477 = insertelement <16 x double> %temp.vect1476, double %645, i32 8
  %temp.vect1478 = insertelement <16 x double> %temp.vect1477, double %646, i32 9
  %temp.vect1479 = insertelement <16 x double> %temp.vect1478, double %647, i32 10
  %temp.vect1480 = insertelement <16 x double> %temp.vect1479, double %648, i32 11
  %temp.vect1481 = insertelement <16 x double> %temp.vect1480, double %649, i32 12
  %temp.vect1482 = insertelement <16 x double> %temp.vect1481, double %650, i32 13
  %temp.vect1483 = insertelement <16 x double> %temp.vect1482, double %651, i32 14
  %temp.vect1484 = insertelement <16 x double> %temp.vect1483, double %652, i32 15
  %653 = fmul <16 x double> %636, %temp.vect1484
  %654 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %655 = load i64* %654, align 8
  %656 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %657 = load i64* %656, align 8
  %658 = add i64 %655, %657
  %extract1487 = add i64 %658, 1105920
  %659 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract1487
  %ptrTypeCast1503 = bitcast double addrspace(1)* %659 to <16 x double> addrspace(1)*
  store <16 x double> %653, <16 x double> addrspace(1)* %ptrTypeCast1503, align 8
  %660 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %661 = load i64* %660, align 8
  %662 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %663 = load i64* %662, align 8
  %664 = add i64 %661, %663
  %extract1506 = add i64 %664, 110592
  %665 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract1506
  %ptrTypeCast1522 = bitcast double addrspace(1)* %665 to <16 x double> addrspace(1)*
  %666 = load <16 x double> addrspace(1)* %ptrTypeCast1522, align 8
  %667 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %668 = load i64* %667, align 8
  %669 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %670 = load i64* %669, align 8
  %671 = add i64 %668, %670
  %extract1525 = add i64 %671, 331776
  %672 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract1525
  %ptrTypeCast1541 = bitcast double addrspace(1)* %672 to <16 x double> addrspace(1)*
  %673 = load <16 x double> addrspace(1)* %ptrTypeCast1541, align 8
  %674 = fmul <16 x double> %666, %673
  %675 = fmul <16 x double> %674, %26
  %676 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %677 = load i64* %676, align 8
  %678 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %679 = load i64* %678, align 8
  %680 = add i64 %677, %679
  %extract1544 = add i64 %680, 663552
  %681 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract1544
  %ptrTypeCast1560 = bitcast double addrspace(1)* %681 to <16 x double> addrspace(1)*
  %682 = load <16 x double> addrspace(1)* %ptrTypeCast1560, align 8
  %683 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %682
  %684 = fmul <16 x double> %675, %683
  %extract1580 = extractelement <16 x double> %684, i32 0
  %extract1581 = extractelement <16 x double> %684, i32 1
  %extract1582 = extractelement <16 x double> %684, i32 2
  %extract1583 = extractelement <16 x double> %684, i32 3
  %extract1584 = extractelement <16 x double> %684, i32 4
  %extract1585 = extractelement <16 x double> %684, i32 5
  %extract1586 = extractelement <16 x double> %684, i32 6
  %extract1587 = extractelement <16 x double> %684, i32 7
  %extract1588 = extractelement <16 x double> %684, i32 8
  %extract1589 = extractelement <16 x double> %684, i32 9
  %extract1590 = extractelement <16 x double> %684, i32 10
  %extract1591 = extractelement <16 x double> %684, i32 11
  %extract1592 = extractelement <16 x double> %684, i32 12
  %extract1593 = extractelement <16 x double> %684, i32 13
  %extract1594 = extractelement <16 x double> %684, i32 14
  %extract1595 = extractelement <16 x double> %684, i32 15
  %685 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %686 = load i64* %685, align 8
  %687 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %688 = load i64* %687, align 8
  %689 = add i64 %686, %688
  %extract1563 = add i64 %689, 1216512
  %690 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1563
  %ptrTypeCast1579 = bitcast double addrspace(1)* %690 to <16 x double> addrspace(1)*
  %691 = load <16 x double> addrspace(1)* %ptrTypeCast1579, align 8
  %692 = tail call double @_Z4fmindd(double %extract1580, double 1.000000e+300) nounwind
  %693 = tail call double @_Z4fmindd(double %extract1581, double 1.000000e+300) nounwind
  %694 = tail call double @_Z4fmindd(double %extract1582, double 1.000000e+300) nounwind
  %695 = tail call double @_Z4fmindd(double %extract1583, double 1.000000e+300) nounwind
  %696 = tail call double @_Z4fmindd(double %extract1584, double 1.000000e+300) nounwind
  %697 = tail call double @_Z4fmindd(double %extract1585, double 1.000000e+300) nounwind
  %698 = tail call double @_Z4fmindd(double %extract1586, double 1.000000e+300) nounwind
  %699 = tail call double @_Z4fmindd(double %extract1587, double 1.000000e+300) nounwind
  %700 = tail call double @_Z4fmindd(double %extract1588, double 1.000000e+300) nounwind
  %701 = tail call double @_Z4fmindd(double %extract1589, double 1.000000e+300) nounwind
  %702 = tail call double @_Z4fmindd(double %extract1590, double 1.000000e+300) nounwind
  %703 = tail call double @_Z4fmindd(double %extract1591, double 1.000000e+300) nounwind
  %704 = tail call double @_Z4fmindd(double %extract1592, double 1.000000e+300) nounwind
  %705 = tail call double @_Z4fmindd(double %extract1593, double 1.000000e+300) nounwind
  %706 = tail call double @_Z4fmindd(double %extract1594, double 1.000000e+300) nounwind
  %707 = tail call double @_Z4fmindd(double %extract1595, double 1.000000e+300) nounwind
  %temp.vect1596 = insertelement <16 x double> undef, double %692, i32 0
  %temp.vect1597 = insertelement <16 x double> %temp.vect1596, double %693, i32 1
  %temp.vect1598 = insertelement <16 x double> %temp.vect1597, double %694, i32 2
  %temp.vect1599 = insertelement <16 x double> %temp.vect1598, double %695, i32 3
  %temp.vect1600 = insertelement <16 x double> %temp.vect1599, double %696, i32 4
  %temp.vect1601 = insertelement <16 x double> %temp.vect1600, double %697, i32 5
  %temp.vect1602 = insertelement <16 x double> %temp.vect1601, double %698, i32 6
  %temp.vect1603 = insertelement <16 x double> %temp.vect1602, double %699, i32 7
  %temp.vect1604 = insertelement <16 x double> %temp.vect1603, double %700, i32 8
  %temp.vect1605 = insertelement <16 x double> %temp.vect1604, double %701, i32 9
  %temp.vect1606 = insertelement <16 x double> %temp.vect1605, double %702, i32 10
  %temp.vect1607 = insertelement <16 x double> %temp.vect1606, double %703, i32 11
  %temp.vect1608 = insertelement <16 x double> %temp.vect1607, double %704, i32 12
  %temp.vect1609 = insertelement <16 x double> %temp.vect1608, double %705, i32 13
  %temp.vect1610 = insertelement <16 x double> %temp.vect1609, double %706, i32 14
  %temp.vect1611 = insertelement <16 x double> %temp.vect1610, double %707, i32 15
  %708 = fmul <16 x double> %691, %temp.vect1611
  %709 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %710 = load i64* %709, align 8
  %711 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %712 = load i64* %711, align 8
  %713 = add i64 %710, %712
  %extract1614 = add i64 %713, 1216512
  %714 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract1614
  %ptrTypeCast1630 = bitcast double addrspace(1)* %714 to <16 x double> addrspace(1)*
  store <16 x double> %708, <16 x double> addrspace(1)* %ptrTypeCast1630, align 8
  %715 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %716 = load i64* %715, align 8
  %717 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %718 = load i64* %717, align 8
  %719 = add i64 %716, %718
  %extract1633 = add i64 %719, 110592
  %720 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract1633
  %ptrTypeCast1649 = bitcast double addrspace(1)* %720 to <16 x double> addrspace(1)*
  %721 = load <16 x double> addrspace(1)* %ptrTypeCast1649, align 8
  %722 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %723 = load i64* %722, align 8
  %724 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %725 = load i64* %724, align 8
  %726 = add i64 %723, %725
  %extract1652 = add i64 %726, 331776
  %727 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract1652
  %ptrTypeCast1668 = bitcast double addrspace(1)* %727 to <16 x double> addrspace(1)*
  %728 = load <16 x double> addrspace(1)* %ptrTypeCast1668, align 8
  %729 = fmul <16 x double> %721, %728
  %730 = fmul <16 x double> %729, %26
  %731 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %732 = load i64* %731, align 8
  %733 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %734 = load i64* %733, align 8
  %735 = add i64 %732, %734
  %extract1671 = add i64 %735, 663552
  %736 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract1671
  %ptrTypeCast1687 = bitcast double addrspace(1)* %736 to <16 x double> addrspace(1)*
  %737 = load <16 x double> addrspace(1)* %ptrTypeCast1687, align 8
  %738 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %737
  %739 = fmul <16 x double> %730, %738
  %extract1707 = extractelement <16 x double> %739, i32 0
  %extract1708 = extractelement <16 x double> %739, i32 1
  %extract1709 = extractelement <16 x double> %739, i32 2
  %extract1710 = extractelement <16 x double> %739, i32 3
  %extract1711 = extractelement <16 x double> %739, i32 4
  %extract1712 = extractelement <16 x double> %739, i32 5
  %extract1713 = extractelement <16 x double> %739, i32 6
  %extract1714 = extractelement <16 x double> %739, i32 7
  %extract1715 = extractelement <16 x double> %739, i32 8
  %extract1716 = extractelement <16 x double> %739, i32 9
  %extract1717 = extractelement <16 x double> %739, i32 10
  %extract1718 = extractelement <16 x double> %739, i32 11
  %extract1719 = extractelement <16 x double> %739, i32 12
  %extract1720 = extractelement <16 x double> %739, i32 13
  %extract1721 = extractelement <16 x double> %739, i32 14
  %extract1722 = extractelement <16 x double> %739, i32 15
  %740 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %741 = load i64* %740, align 8
  %742 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %743 = load i64* %742, align 8
  %744 = add i64 %741, %743
  %extract1690 = add i64 %744, 1327104
  %745 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1690
  %ptrTypeCast1706 = bitcast double addrspace(1)* %745 to <16 x double> addrspace(1)*
  %746 = load <16 x double> addrspace(1)* %ptrTypeCast1706, align 8
  %747 = tail call double @_Z4fmindd(double %extract1707, double 1.000000e+300) nounwind
  %748 = tail call double @_Z4fmindd(double %extract1708, double 1.000000e+300) nounwind
  %749 = tail call double @_Z4fmindd(double %extract1709, double 1.000000e+300) nounwind
  %750 = tail call double @_Z4fmindd(double %extract1710, double 1.000000e+300) nounwind
  %751 = tail call double @_Z4fmindd(double %extract1711, double 1.000000e+300) nounwind
  %752 = tail call double @_Z4fmindd(double %extract1712, double 1.000000e+300) nounwind
  %753 = tail call double @_Z4fmindd(double %extract1713, double 1.000000e+300) nounwind
  %754 = tail call double @_Z4fmindd(double %extract1714, double 1.000000e+300) nounwind
  %755 = tail call double @_Z4fmindd(double %extract1715, double 1.000000e+300) nounwind
  %756 = tail call double @_Z4fmindd(double %extract1716, double 1.000000e+300) nounwind
  %757 = tail call double @_Z4fmindd(double %extract1717, double 1.000000e+300) nounwind
  %758 = tail call double @_Z4fmindd(double %extract1718, double 1.000000e+300) nounwind
  %759 = tail call double @_Z4fmindd(double %extract1719, double 1.000000e+300) nounwind
  %760 = tail call double @_Z4fmindd(double %extract1720, double 1.000000e+300) nounwind
  %761 = tail call double @_Z4fmindd(double %extract1721, double 1.000000e+300) nounwind
  %762 = tail call double @_Z4fmindd(double %extract1722, double 1.000000e+300) nounwind
  %temp.vect1723 = insertelement <16 x double> undef, double %747, i32 0
  %temp.vect1724 = insertelement <16 x double> %temp.vect1723, double %748, i32 1
  %temp.vect1725 = insertelement <16 x double> %temp.vect1724, double %749, i32 2
  %temp.vect1726 = insertelement <16 x double> %temp.vect1725, double %750, i32 3
  %temp.vect1727 = insertelement <16 x double> %temp.vect1726, double %751, i32 4
  %temp.vect1728 = insertelement <16 x double> %temp.vect1727, double %752, i32 5
  %temp.vect1729 = insertelement <16 x double> %temp.vect1728, double %753, i32 6
  %temp.vect1730 = insertelement <16 x double> %temp.vect1729, double %754, i32 7
  %temp.vect1731 = insertelement <16 x double> %temp.vect1730, double %755, i32 8
  %temp.vect1732 = insertelement <16 x double> %temp.vect1731, double %756, i32 9
  %temp.vect1733 = insertelement <16 x double> %temp.vect1732, double %757, i32 10
  %temp.vect1734 = insertelement <16 x double> %temp.vect1733, double %758, i32 11
  %temp.vect1735 = insertelement <16 x double> %temp.vect1734, double %759, i32 12
  %temp.vect1736 = insertelement <16 x double> %temp.vect1735, double %760, i32 13
  %temp.vect1737 = insertelement <16 x double> %temp.vect1736, double %761, i32 14
  %temp.vect1738 = insertelement <16 x double> %temp.vect1737, double %762, i32 15
  %763 = fmul <16 x double> %746, %temp.vect1738
  %764 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %765 = load i64* %764, align 8
  %766 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %767 = load i64* %766, align 8
  %768 = add i64 %765, %767
  %extract1741 = add i64 %768, 1327104
  %769 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract1741
  %ptrTypeCast1757 = bitcast double addrspace(1)* %769 to <16 x double> addrspace(1)*
  store <16 x double> %763, <16 x double> addrspace(1)* %ptrTypeCast1757, align 8
  %770 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %771 = load i64* %770, align 8
  %772 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %773 = load i64* %772, align 8
  %774 = add i64 %771, %773
  %extract1760 = add i64 %774, 110592
  %775 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract1760
  %ptrTypeCast1776 = bitcast double addrspace(1)* %775 to <16 x double> addrspace(1)*
  %776 = load <16 x double> addrspace(1)* %ptrTypeCast1776, align 8
  %777 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %778 = load i64* %777, align 8
  %779 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %780 = load i64* %779, align 8
  %781 = add i64 %778, %780
  %extract1779 = add i64 %781, 331776
  %782 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract1779
  %ptrTypeCast1795 = bitcast double addrspace(1)* %782 to <16 x double> addrspace(1)*
  %783 = load <16 x double> addrspace(1)* %ptrTypeCast1795, align 8
  %784 = fmul <16 x double> %776, %783
  %785 = fmul <16 x double> %784, %26
  %786 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %787 = load i64* %786, align 8
  %788 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %789 = load i64* %788, align 8
  %790 = add i64 %787, %789
  %extract1798 = add i64 %790, 663552
  %791 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract1798
  %ptrTypeCast1814 = bitcast double addrspace(1)* %791 to <16 x double> addrspace(1)*
  %792 = load <16 x double> addrspace(1)* %ptrTypeCast1814, align 8
  %793 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %792
  %794 = fmul <16 x double> %785, %793
  %extract1834 = extractelement <16 x double> %794, i32 0
  %extract1835 = extractelement <16 x double> %794, i32 1
  %extract1836 = extractelement <16 x double> %794, i32 2
  %extract1837 = extractelement <16 x double> %794, i32 3
  %extract1838 = extractelement <16 x double> %794, i32 4
  %extract1839 = extractelement <16 x double> %794, i32 5
  %extract1840 = extractelement <16 x double> %794, i32 6
  %extract1841 = extractelement <16 x double> %794, i32 7
  %extract1842 = extractelement <16 x double> %794, i32 8
  %extract1843 = extractelement <16 x double> %794, i32 9
  %extract1844 = extractelement <16 x double> %794, i32 10
  %extract1845 = extractelement <16 x double> %794, i32 11
  %extract1846 = extractelement <16 x double> %794, i32 12
  %extract1847 = extractelement <16 x double> %794, i32 13
  %extract1848 = extractelement <16 x double> %794, i32 14
  %extract1849 = extractelement <16 x double> %794, i32 15
  %795 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %796 = load i64* %795, align 8
  %797 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %798 = load i64* %797, align 8
  %799 = add i64 %796, %798
  %extract1817 = add i64 %799, 1437696
  %800 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1817
  %ptrTypeCast1833 = bitcast double addrspace(1)* %800 to <16 x double> addrspace(1)*
  %801 = load <16 x double> addrspace(1)* %ptrTypeCast1833, align 8
  %802 = tail call double @_Z4fmindd(double %extract1834, double 1.000000e+300) nounwind
  %803 = tail call double @_Z4fmindd(double %extract1835, double 1.000000e+300) nounwind
  %804 = tail call double @_Z4fmindd(double %extract1836, double 1.000000e+300) nounwind
  %805 = tail call double @_Z4fmindd(double %extract1837, double 1.000000e+300) nounwind
  %806 = tail call double @_Z4fmindd(double %extract1838, double 1.000000e+300) nounwind
  %807 = tail call double @_Z4fmindd(double %extract1839, double 1.000000e+300) nounwind
  %808 = tail call double @_Z4fmindd(double %extract1840, double 1.000000e+300) nounwind
  %809 = tail call double @_Z4fmindd(double %extract1841, double 1.000000e+300) nounwind
  %810 = tail call double @_Z4fmindd(double %extract1842, double 1.000000e+300) nounwind
  %811 = tail call double @_Z4fmindd(double %extract1843, double 1.000000e+300) nounwind
  %812 = tail call double @_Z4fmindd(double %extract1844, double 1.000000e+300) nounwind
  %813 = tail call double @_Z4fmindd(double %extract1845, double 1.000000e+300) nounwind
  %814 = tail call double @_Z4fmindd(double %extract1846, double 1.000000e+300) nounwind
  %815 = tail call double @_Z4fmindd(double %extract1847, double 1.000000e+300) nounwind
  %816 = tail call double @_Z4fmindd(double %extract1848, double 1.000000e+300) nounwind
  %817 = tail call double @_Z4fmindd(double %extract1849, double 1.000000e+300) nounwind
  %temp.vect1850 = insertelement <16 x double> undef, double %802, i32 0
  %temp.vect1851 = insertelement <16 x double> %temp.vect1850, double %803, i32 1
  %temp.vect1852 = insertelement <16 x double> %temp.vect1851, double %804, i32 2
  %temp.vect1853 = insertelement <16 x double> %temp.vect1852, double %805, i32 3
  %temp.vect1854 = insertelement <16 x double> %temp.vect1853, double %806, i32 4
  %temp.vect1855 = insertelement <16 x double> %temp.vect1854, double %807, i32 5
  %temp.vect1856 = insertelement <16 x double> %temp.vect1855, double %808, i32 6
  %temp.vect1857 = insertelement <16 x double> %temp.vect1856, double %809, i32 7
  %temp.vect1858 = insertelement <16 x double> %temp.vect1857, double %810, i32 8
  %temp.vect1859 = insertelement <16 x double> %temp.vect1858, double %811, i32 9
  %temp.vect1860 = insertelement <16 x double> %temp.vect1859, double %812, i32 10
  %temp.vect1861 = insertelement <16 x double> %temp.vect1860, double %813, i32 11
  %temp.vect1862 = insertelement <16 x double> %temp.vect1861, double %814, i32 12
  %temp.vect1863 = insertelement <16 x double> %temp.vect1862, double %815, i32 13
  %temp.vect1864 = insertelement <16 x double> %temp.vect1863, double %816, i32 14
  %temp.vect1865 = insertelement <16 x double> %temp.vect1864, double %817, i32 15
  %818 = fmul <16 x double> %801, %temp.vect1865
  %819 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %820 = load i64* %819, align 8
  %821 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %822 = load i64* %821, align 8
  %823 = add i64 %820, %822
  %extract1868 = add i64 %823, 1437696
  %824 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract1868
  %ptrTypeCast1884 = bitcast double addrspace(1)* %824 to <16 x double> addrspace(1)*
  store <16 x double> %818, <16 x double> addrspace(1)* %ptrTypeCast1884, align 8
  %825 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %826 = load i64* %825, align 8
  %827 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %828 = load i64* %827, align 8
  %829 = add i64 %826, %828
  %extract1887 = add i64 %829, 110592
  %830 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract1887
  %ptrTypeCast1903 = bitcast double addrspace(1)* %830 to <16 x double> addrspace(1)*
  %831 = load <16 x double> addrspace(1)* %ptrTypeCast1903, align 8
  %832 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %833 = load i64* %832, align 8
  %834 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %835 = load i64* %834, align 8
  %836 = add i64 %833, %835
  %extract1906 = add i64 %836, 331776
  %837 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract1906
  %ptrTypeCast1922 = bitcast double addrspace(1)* %837 to <16 x double> addrspace(1)*
  %838 = load <16 x double> addrspace(1)* %ptrTypeCast1922, align 8
  %839 = fmul <16 x double> %831, %838
  %840 = fmul <16 x double> %839, %26
  %841 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %842 = load i64* %841, align 8
  %843 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %844 = load i64* %843, align 8
  %845 = add i64 %842, %844
  %extract1925 = add i64 %845, 663552
  %846 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract1925
  %ptrTypeCast1941 = bitcast double addrspace(1)* %846 to <16 x double> addrspace(1)*
  %847 = load <16 x double> addrspace(1)* %ptrTypeCast1941, align 8
  %848 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %847
  %849 = fmul <16 x double> %840, %848
  %extract1961 = extractelement <16 x double> %849, i32 0
  %extract1962 = extractelement <16 x double> %849, i32 1
  %extract1963 = extractelement <16 x double> %849, i32 2
  %extract1964 = extractelement <16 x double> %849, i32 3
  %extract1965 = extractelement <16 x double> %849, i32 4
  %extract1966 = extractelement <16 x double> %849, i32 5
  %extract1967 = extractelement <16 x double> %849, i32 6
  %extract1968 = extractelement <16 x double> %849, i32 7
  %extract1969 = extractelement <16 x double> %849, i32 8
  %extract1970 = extractelement <16 x double> %849, i32 9
  %extract1971 = extractelement <16 x double> %849, i32 10
  %extract1972 = extractelement <16 x double> %849, i32 11
  %extract1973 = extractelement <16 x double> %849, i32 12
  %extract1974 = extractelement <16 x double> %849, i32 13
  %extract1975 = extractelement <16 x double> %849, i32 14
  %extract1976 = extractelement <16 x double> %849, i32 15
  %850 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %851 = load i64* %850, align 8
  %852 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %853 = load i64* %852, align 8
  %854 = add i64 %851, %853
  %extract1944 = add i64 %854, 1548288
  %855 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1944
  %ptrTypeCast1960 = bitcast double addrspace(1)* %855 to <16 x double> addrspace(1)*
  %856 = load <16 x double> addrspace(1)* %ptrTypeCast1960, align 8
  %857 = tail call double @_Z4fmindd(double %extract1961, double 1.000000e+300) nounwind
  %858 = tail call double @_Z4fmindd(double %extract1962, double 1.000000e+300) nounwind
  %859 = tail call double @_Z4fmindd(double %extract1963, double 1.000000e+300) nounwind
  %860 = tail call double @_Z4fmindd(double %extract1964, double 1.000000e+300) nounwind
  %861 = tail call double @_Z4fmindd(double %extract1965, double 1.000000e+300) nounwind
  %862 = tail call double @_Z4fmindd(double %extract1966, double 1.000000e+300) nounwind
  %863 = tail call double @_Z4fmindd(double %extract1967, double 1.000000e+300) nounwind
  %864 = tail call double @_Z4fmindd(double %extract1968, double 1.000000e+300) nounwind
  %865 = tail call double @_Z4fmindd(double %extract1969, double 1.000000e+300) nounwind
  %866 = tail call double @_Z4fmindd(double %extract1970, double 1.000000e+300) nounwind
  %867 = tail call double @_Z4fmindd(double %extract1971, double 1.000000e+300) nounwind
  %868 = tail call double @_Z4fmindd(double %extract1972, double 1.000000e+300) nounwind
  %869 = tail call double @_Z4fmindd(double %extract1973, double 1.000000e+300) nounwind
  %870 = tail call double @_Z4fmindd(double %extract1974, double 1.000000e+300) nounwind
  %871 = tail call double @_Z4fmindd(double %extract1975, double 1.000000e+300) nounwind
  %872 = tail call double @_Z4fmindd(double %extract1976, double 1.000000e+300) nounwind
  %temp.vect1977 = insertelement <16 x double> undef, double %857, i32 0
  %temp.vect1978 = insertelement <16 x double> %temp.vect1977, double %858, i32 1
  %temp.vect1979 = insertelement <16 x double> %temp.vect1978, double %859, i32 2
  %temp.vect1980 = insertelement <16 x double> %temp.vect1979, double %860, i32 3
  %temp.vect1981 = insertelement <16 x double> %temp.vect1980, double %861, i32 4
  %temp.vect1982 = insertelement <16 x double> %temp.vect1981, double %862, i32 5
  %temp.vect1983 = insertelement <16 x double> %temp.vect1982, double %863, i32 6
  %temp.vect1984 = insertelement <16 x double> %temp.vect1983, double %864, i32 7
  %temp.vect1985 = insertelement <16 x double> %temp.vect1984, double %865, i32 8
  %temp.vect1986 = insertelement <16 x double> %temp.vect1985, double %866, i32 9
  %temp.vect1987 = insertelement <16 x double> %temp.vect1986, double %867, i32 10
  %temp.vect1988 = insertelement <16 x double> %temp.vect1987, double %868, i32 11
  %temp.vect1989 = insertelement <16 x double> %temp.vect1988, double %869, i32 12
  %temp.vect1990 = insertelement <16 x double> %temp.vect1989, double %870, i32 13
  %temp.vect1991 = insertelement <16 x double> %temp.vect1990, double %871, i32 14
  %temp.vect1992 = insertelement <16 x double> %temp.vect1991, double %872, i32 15
  %873 = fmul <16 x double> %856, %temp.vect1992
  %874 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %875 = load i64* %874, align 8
  %876 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %877 = load i64* %876, align 8
  %878 = add i64 %875, %877
  %extract1995 = add i64 %878, 1548288
  %879 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract1995
  %ptrTypeCast2011 = bitcast double addrspace(1)* %879 to <16 x double> addrspace(1)*
  store <16 x double> %873, <16 x double> addrspace(1)* %ptrTypeCast2011, align 8
  %880 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %881 = load i64* %880, align 8
  %882 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %883 = load i64* %882, align 8
  %884 = add i64 %881, %883
  %extract2014 = add i64 %884, 442368
  %885 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract2014
  %ptrTypeCast2030 = bitcast double addrspace(1)* %885 to <16 x double> addrspace(1)*
  %886 = load <16 x double> addrspace(1)* %ptrTypeCast2030, align 8
  %887 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %888 = load i64* %887, align 8
  %889 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %890 = load i64* %889, align 8
  %891 = add i64 %888, %890
  %extract2033 = add i64 %891, 442368
  %892 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract2033
  %ptrTypeCast2049 = bitcast double addrspace(1)* %892 to <16 x double> addrspace(1)*
  %893 = load <16 x double> addrspace(1)* %ptrTypeCast2049, align 8
  %894 = fmul <16 x double> %886, %893
  %895 = fmul <16 x double> %894, %26
  %896 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %897 = load i64* %896, align 8
  %898 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %899 = load i64* %898, align 8
  %900 = add i64 %897, %899
  %extract2052 = add i64 %900, 774144
  %901 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract2052
  %ptrTypeCast2068 = bitcast double addrspace(1)* %901 to <16 x double> addrspace(1)*
  %902 = load <16 x double> addrspace(1)* %ptrTypeCast2068, align 8
  %903 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %902
  %904 = fmul <16 x double> %895, %903
  %extract2088 = extractelement <16 x double> %904, i32 0
  %extract2089 = extractelement <16 x double> %904, i32 1
  %extract2090 = extractelement <16 x double> %904, i32 2
  %extract2091 = extractelement <16 x double> %904, i32 3
  %extract2092 = extractelement <16 x double> %904, i32 4
  %extract2093 = extractelement <16 x double> %904, i32 5
  %extract2094 = extractelement <16 x double> %904, i32 6
  %extract2095 = extractelement <16 x double> %904, i32 7
  %extract2096 = extractelement <16 x double> %904, i32 8
  %extract2097 = extractelement <16 x double> %904, i32 9
  %extract2098 = extractelement <16 x double> %904, i32 10
  %extract2099 = extractelement <16 x double> %904, i32 11
  %extract2100 = extractelement <16 x double> %904, i32 12
  %extract2101 = extractelement <16 x double> %904, i32 13
  %extract2102 = extractelement <16 x double> %904, i32 14
  %extract2103 = extractelement <16 x double> %904, i32 15
  %905 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %906 = load i64* %905, align 8
  %907 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %908 = load i64* %907, align 8
  %909 = add i64 %906, %908
  %extract2071 = add i64 %909, 1658880
  %910 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2071
  %ptrTypeCast2087 = bitcast double addrspace(1)* %910 to <16 x double> addrspace(1)*
  %911 = load <16 x double> addrspace(1)* %ptrTypeCast2087, align 8
  %912 = tail call double @_Z4fmindd(double %extract2088, double 1.000000e+300) nounwind
  %913 = tail call double @_Z4fmindd(double %extract2089, double 1.000000e+300) nounwind
  %914 = tail call double @_Z4fmindd(double %extract2090, double 1.000000e+300) nounwind
  %915 = tail call double @_Z4fmindd(double %extract2091, double 1.000000e+300) nounwind
  %916 = tail call double @_Z4fmindd(double %extract2092, double 1.000000e+300) nounwind
  %917 = tail call double @_Z4fmindd(double %extract2093, double 1.000000e+300) nounwind
  %918 = tail call double @_Z4fmindd(double %extract2094, double 1.000000e+300) nounwind
  %919 = tail call double @_Z4fmindd(double %extract2095, double 1.000000e+300) nounwind
  %920 = tail call double @_Z4fmindd(double %extract2096, double 1.000000e+300) nounwind
  %921 = tail call double @_Z4fmindd(double %extract2097, double 1.000000e+300) nounwind
  %922 = tail call double @_Z4fmindd(double %extract2098, double 1.000000e+300) nounwind
  %923 = tail call double @_Z4fmindd(double %extract2099, double 1.000000e+300) nounwind
  %924 = tail call double @_Z4fmindd(double %extract2100, double 1.000000e+300) nounwind
  %925 = tail call double @_Z4fmindd(double %extract2101, double 1.000000e+300) nounwind
  %926 = tail call double @_Z4fmindd(double %extract2102, double 1.000000e+300) nounwind
  %927 = tail call double @_Z4fmindd(double %extract2103, double 1.000000e+300) nounwind
  %temp.vect2104 = insertelement <16 x double> undef, double %912, i32 0
  %temp.vect2105 = insertelement <16 x double> %temp.vect2104, double %913, i32 1
  %temp.vect2106 = insertelement <16 x double> %temp.vect2105, double %914, i32 2
  %temp.vect2107 = insertelement <16 x double> %temp.vect2106, double %915, i32 3
  %temp.vect2108 = insertelement <16 x double> %temp.vect2107, double %916, i32 4
  %temp.vect2109 = insertelement <16 x double> %temp.vect2108, double %917, i32 5
  %temp.vect2110 = insertelement <16 x double> %temp.vect2109, double %918, i32 6
  %temp.vect2111 = insertelement <16 x double> %temp.vect2110, double %919, i32 7
  %temp.vect2112 = insertelement <16 x double> %temp.vect2111, double %920, i32 8
  %temp.vect2113 = insertelement <16 x double> %temp.vect2112, double %921, i32 9
  %temp.vect2114 = insertelement <16 x double> %temp.vect2113, double %922, i32 10
  %temp.vect2115 = insertelement <16 x double> %temp.vect2114, double %923, i32 11
  %temp.vect2116 = insertelement <16 x double> %temp.vect2115, double %924, i32 12
  %temp.vect2117 = insertelement <16 x double> %temp.vect2116, double %925, i32 13
  %temp.vect2118 = insertelement <16 x double> %temp.vect2117, double %926, i32 14
  %temp.vect2119 = insertelement <16 x double> %temp.vect2118, double %927, i32 15
  %928 = fmul <16 x double> %911, %temp.vect2119
  %929 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %930 = load i64* %929, align 8
  %931 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %932 = load i64* %931, align 8
  %933 = add i64 %930, %932
  %extract2122 = add i64 %933, 1658880
  %934 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract2122
  %ptrTypeCast2138 = bitcast double addrspace(1)* %934 to <16 x double> addrspace(1)*
  store <16 x double> %928, <16 x double> addrspace(1)* %ptrTypeCast2138, align 8
  %935 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %936 = load i64* %935, align 8
  %937 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %938 = load i64* %937, align 8
  %939 = add i64 %936, %938
  %extract2141 = add i64 %939, 110592
  %940 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract2141
  %ptrTypeCast2157 = bitcast double addrspace(1)* %940 to <16 x double> addrspace(1)*
  %941 = load <16 x double> addrspace(1)* %ptrTypeCast2157, align 8
  %942 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %943 = load i64* %942, align 8
  %944 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %945 = load i64* %944, align 8
  %946 = add i64 %943, %945
  %extract2160 = add i64 %946, 663552
  %947 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract2160
  %ptrTypeCast2176 = bitcast double addrspace(1)* %947 to <16 x double> addrspace(1)*
  %948 = load <16 x double> addrspace(1)* %ptrTypeCast2176, align 8
  %949 = fmul <16 x double> %941, %948
  %950 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %951 = load i64* %950, align 8
  %952 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %953 = load i64* %952, align 8
  %954 = add i64 %951, %953
  %extract2179 = add i64 %954, 221184
  %955 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract2179
  %ptrTypeCast2195 = bitcast double addrspace(1)* %955 to <16 x double> addrspace(1)*
  %956 = load <16 x double> addrspace(1)* %ptrTypeCast2195, align 8
  %957 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %958 = load i64* %957, align 8
  %959 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %960 = load i64* %959, align 8
  %961 = add i64 %958, %960
  %extract2198 = add i64 %961, 552960
  %962 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract2198
  %ptrTypeCast2214 = bitcast double addrspace(1)* %962 to <16 x double> addrspace(1)*
  %963 = load <16 x double> addrspace(1)* %ptrTypeCast2214, align 8
  %964 = fmul <16 x double> %956, %963
  %965 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %964
  %966 = fmul <16 x double> %949, %965
  %extract2234 = extractelement <16 x double> %966, i32 0
  %extract2235 = extractelement <16 x double> %966, i32 1
  %extract2236 = extractelement <16 x double> %966, i32 2
  %extract2237 = extractelement <16 x double> %966, i32 3
  %extract2238 = extractelement <16 x double> %966, i32 4
  %extract2239 = extractelement <16 x double> %966, i32 5
  %extract2240 = extractelement <16 x double> %966, i32 6
  %extract2241 = extractelement <16 x double> %966, i32 7
  %extract2242 = extractelement <16 x double> %966, i32 8
  %extract2243 = extractelement <16 x double> %966, i32 9
  %extract2244 = extractelement <16 x double> %966, i32 10
  %extract2245 = extractelement <16 x double> %966, i32 11
  %extract2246 = extractelement <16 x double> %966, i32 12
  %extract2247 = extractelement <16 x double> %966, i32 13
  %extract2248 = extractelement <16 x double> %966, i32 14
  %extract2249 = extractelement <16 x double> %966, i32 15
  %967 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %968 = load i64* %967, align 8
  %969 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %970 = load i64* %969, align 8
  %971 = add i64 %968, %970
  %extract2217 = add i64 %971, 1769472
  %972 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2217
  %ptrTypeCast2233 = bitcast double addrspace(1)* %972 to <16 x double> addrspace(1)*
  %973 = load <16 x double> addrspace(1)* %ptrTypeCast2233, align 8
  %974 = tail call double @_Z4fmindd(double %extract2234, double 1.000000e+300) nounwind
  %975 = tail call double @_Z4fmindd(double %extract2235, double 1.000000e+300) nounwind
  %976 = tail call double @_Z4fmindd(double %extract2236, double 1.000000e+300) nounwind
  %977 = tail call double @_Z4fmindd(double %extract2237, double 1.000000e+300) nounwind
  %978 = tail call double @_Z4fmindd(double %extract2238, double 1.000000e+300) nounwind
  %979 = tail call double @_Z4fmindd(double %extract2239, double 1.000000e+300) nounwind
  %980 = tail call double @_Z4fmindd(double %extract2240, double 1.000000e+300) nounwind
  %981 = tail call double @_Z4fmindd(double %extract2241, double 1.000000e+300) nounwind
  %982 = tail call double @_Z4fmindd(double %extract2242, double 1.000000e+300) nounwind
  %983 = tail call double @_Z4fmindd(double %extract2243, double 1.000000e+300) nounwind
  %984 = tail call double @_Z4fmindd(double %extract2244, double 1.000000e+300) nounwind
  %985 = tail call double @_Z4fmindd(double %extract2245, double 1.000000e+300) nounwind
  %986 = tail call double @_Z4fmindd(double %extract2246, double 1.000000e+300) nounwind
  %987 = tail call double @_Z4fmindd(double %extract2247, double 1.000000e+300) nounwind
  %988 = tail call double @_Z4fmindd(double %extract2248, double 1.000000e+300) nounwind
  %989 = tail call double @_Z4fmindd(double %extract2249, double 1.000000e+300) nounwind
  %temp.vect2250 = insertelement <16 x double> undef, double %974, i32 0
  %temp.vect2251 = insertelement <16 x double> %temp.vect2250, double %975, i32 1
  %temp.vect2252 = insertelement <16 x double> %temp.vect2251, double %976, i32 2
  %temp.vect2253 = insertelement <16 x double> %temp.vect2252, double %977, i32 3
  %temp.vect2254 = insertelement <16 x double> %temp.vect2253, double %978, i32 4
  %temp.vect2255 = insertelement <16 x double> %temp.vect2254, double %979, i32 5
  %temp.vect2256 = insertelement <16 x double> %temp.vect2255, double %980, i32 6
  %temp.vect2257 = insertelement <16 x double> %temp.vect2256, double %981, i32 7
  %temp.vect2258 = insertelement <16 x double> %temp.vect2257, double %982, i32 8
  %temp.vect2259 = insertelement <16 x double> %temp.vect2258, double %983, i32 9
  %temp.vect2260 = insertelement <16 x double> %temp.vect2259, double %984, i32 10
  %temp.vect2261 = insertelement <16 x double> %temp.vect2260, double %985, i32 11
  %temp.vect2262 = insertelement <16 x double> %temp.vect2261, double %986, i32 12
  %temp.vect2263 = insertelement <16 x double> %temp.vect2262, double %987, i32 13
  %temp.vect2264 = insertelement <16 x double> %temp.vect2263, double %988, i32 14
  %temp.vect2265 = insertelement <16 x double> %temp.vect2264, double %989, i32 15
  %990 = fmul <16 x double> %973, %temp.vect2265
  %991 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %992 = load i64* %991, align 8
  %993 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %994 = load i64* %993, align 8
  %995 = add i64 %992, %994
  %extract2268 = add i64 %995, 1769472
  %996 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract2268
  %ptrTypeCast2284 = bitcast double addrspace(1)* %996 to <16 x double> addrspace(1)*
  store <16 x double> %990, <16 x double> addrspace(1)* %ptrTypeCast2284, align 8
  %997 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %998 = load i64* %997, align 8
  %999 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1000 = load i64* %999, align 8
  %1001 = add i64 %998, %1000
  %extract2287 = add i64 %1001, 110592
  %1002 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract2287
  %ptrTypeCast2303 = bitcast double addrspace(1)* %1002 to <16 x double> addrspace(1)*
  %1003 = load <16 x double> addrspace(1)* %ptrTypeCast2303, align 8
  %1004 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1005 = load i64* %1004, align 8
  %1006 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1007 = load i64* %1006, align 8
  %1008 = add i64 %1005, %1007
  %extract2306 = add i64 %1008, 663552
  %1009 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract2306
  %ptrTypeCast2322 = bitcast double addrspace(1)* %1009 to <16 x double> addrspace(1)*
  %1010 = load <16 x double> addrspace(1)* %ptrTypeCast2322, align 8
  %1011 = fmul <16 x double> %1003, %1010
  %1012 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1013 = load i64* %1012, align 8
  %1014 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1015 = load i64* %1014, align 8
  %1016 = add i64 %1013, %1015
  %1017 = getelementptr inbounds double addrspace(1)* %EG, i64 %1016
  %ptrTypeCast2341 = bitcast double addrspace(1)* %1017 to <16 x double> addrspace(1)*
  %1018 = load <16 x double> addrspace(1)* %ptrTypeCast2341, align 8
  %1019 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1020 = load i64* %1019, align 8
  %1021 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1022 = load i64* %1021, align 8
  %1023 = add i64 %1020, %1022
  %extract2344 = add i64 %1023, 331776
  %1024 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract2344
  %ptrTypeCast2360 = bitcast double addrspace(1)* %1024 to <16 x double> addrspace(1)*
  %1025 = load <16 x double> addrspace(1)* %ptrTypeCast2360, align 8
  %1026 = fmul <16 x double> %1018, %1025
  %1027 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1026
  %1028 = fmul <16 x double> %1011, %1027
  %extract2380 = extractelement <16 x double> %1028, i32 0
  %extract2381 = extractelement <16 x double> %1028, i32 1
  %extract2382 = extractelement <16 x double> %1028, i32 2
  %extract2383 = extractelement <16 x double> %1028, i32 3
  %extract2384 = extractelement <16 x double> %1028, i32 4
  %extract2385 = extractelement <16 x double> %1028, i32 5
  %extract2386 = extractelement <16 x double> %1028, i32 6
  %extract2387 = extractelement <16 x double> %1028, i32 7
  %extract2388 = extractelement <16 x double> %1028, i32 8
  %extract2389 = extractelement <16 x double> %1028, i32 9
  %extract2390 = extractelement <16 x double> %1028, i32 10
  %extract2391 = extractelement <16 x double> %1028, i32 11
  %extract2392 = extractelement <16 x double> %1028, i32 12
  %extract2393 = extractelement <16 x double> %1028, i32 13
  %extract2394 = extractelement <16 x double> %1028, i32 14
  %extract2395 = extractelement <16 x double> %1028, i32 15
  %1029 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1030 = load i64* %1029, align 8
  %1031 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1032 = load i64* %1031, align 8
  %1033 = add i64 %1030, %1032
  %extract2363 = add i64 %1033, 1880064
  %1034 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2363
  %ptrTypeCast2379 = bitcast double addrspace(1)* %1034 to <16 x double> addrspace(1)*
  %1035 = load <16 x double> addrspace(1)* %ptrTypeCast2379, align 8
  %1036 = tail call double @_Z4fmindd(double %extract2380, double 1.000000e+300) nounwind
  %1037 = tail call double @_Z4fmindd(double %extract2381, double 1.000000e+300) nounwind
  %1038 = tail call double @_Z4fmindd(double %extract2382, double 1.000000e+300) nounwind
  %1039 = tail call double @_Z4fmindd(double %extract2383, double 1.000000e+300) nounwind
  %1040 = tail call double @_Z4fmindd(double %extract2384, double 1.000000e+300) nounwind
  %1041 = tail call double @_Z4fmindd(double %extract2385, double 1.000000e+300) nounwind
  %1042 = tail call double @_Z4fmindd(double %extract2386, double 1.000000e+300) nounwind
  %1043 = tail call double @_Z4fmindd(double %extract2387, double 1.000000e+300) nounwind
  %1044 = tail call double @_Z4fmindd(double %extract2388, double 1.000000e+300) nounwind
  %1045 = tail call double @_Z4fmindd(double %extract2389, double 1.000000e+300) nounwind
  %1046 = tail call double @_Z4fmindd(double %extract2390, double 1.000000e+300) nounwind
  %1047 = tail call double @_Z4fmindd(double %extract2391, double 1.000000e+300) nounwind
  %1048 = tail call double @_Z4fmindd(double %extract2392, double 1.000000e+300) nounwind
  %1049 = tail call double @_Z4fmindd(double %extract2393, double 1.000000e+300) nounwind
  %1050 = tail call double @_Z4fmindd(double %extract2394, double 1.000000e+300) nounwind
  %1051 = tail call double @_Z4fmindd(double %extract2395, double 1.000000e+300) nounwind
  %temp.vect2396 = insertelement <16 x double> undef, double %1036, i32 0
  %temp.vect2397 = insertelement <16 x double> %temp.vect2396, double %1037, i32 1
  %temp.vect2398 = insertelement <16 x double> %temp.vect2397, double %1038, i32 2
  %temp.vect2399 = insertelement <16 x double> %temp.vect2398, double %1039, i32 3
  %temp.vect2400 = insertelement <16 x double> %temp.vect2399, double %1040, i32 4
  %temp.vect2401 = insertelement <16 x double> %temp.vect2400, double %1041, i32 5
  %temp.vect2402 = insertelement <16 x double> %temp.vect2401, double %1042, i32 6
  %temp.vect2403 = insertelement <16 x double> %temp.vect2402, double %1043, i32 7
  %temp.vect2404 = insertelement <16 x double> %temp.vect2403, double %1044, i32 8
  %temp.vect2405 = insertelement <16 x double> %temp.vect2404, double %1045, i32 9
  %temp.vect2406 = insertelement <16 x double> %temp.vect2405, double %1046, i32 10
  %temp.vect2407 = insertelement <16 x double> %temp.vect2406, double %1047, i32 11
  %temp.vect2408 = insertelement <16 x double> %temp.vect2407, double %1048, i32 12
  %temp.vect2409 = insertelement <16 x double> %temp.vect2408, double %1049, i32 13
  %temp.vect2410 = insertelement <16 x double> %temp.vect2409, double %1050, i32 14
  %temp.vect2411 = insertelement <16 x double> %temp.vect2410, double %1051, i32 15
  %1052 = fmul <16 x double> %1035, %temp.vect2411
  %1053 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1054 = load i64* %1053, align 8
  %1055 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1056 = load i64* %1055, align 8
  %1057 = add i64 %1054, %1056
  %extract2414 = add i64 %1057, 1880064
  %1058 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract2414
  %ptrTypeCast2430 = bitcast double addrspace(1)* %1058 to <16 x double> addrspace(1)*
  store <16 x double> %1052, <16 x double> addrspace(1)* %ptrTypeCast2430, align 8
  %1059 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1060 = load i64* %1059, align 8
  %1061 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1062 = load i64* %1061, align 8
  %1063 = add i64 %1060, %1062
  %extract2433 = add i64 %1063, 110592
  %1064 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract2433
  %ptrTypeCast2449 = bitcast double addrspace(1)* %1064 to <16 x double> addrspace(1)*
  %1065 = load <16 x double> addrspace(1)* %ptrTypeCast2449, align 8
  %1066 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1067 = load i64* %1066, align 8
  %1068 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1069 = load i64* %1068, align 8
  %1070 = add i64 %1067, %1069
  %extract2452 = add i64 %1070, 663552
  %1071 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract2452
  %ptrTypeCast2468 = bitcast double addrspace(1)* %1071 to <16 x double> addrspace(1)*
  %1072 = load <16 x double> addrspace(1)* %ptrTypeCast2468, align 8
  %1073 = fmul <16 x double> %1065, %1072
  %1074 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1075 = load i64* %1074, align 8
  %1076 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1077 = load i64* %1076, align 8
  %1078 = add i64 %1075, %1077
  %extract2471 = add i64 %1078, 442368
  %1079 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract2471
  %ptrTypeCast2487 = bitcast double addrspace(1)* %1079 to <16 x double> addrspace(1)*
  %1080 = load <16 x double> addrspace(1)* %ptrTypeCast2487, align 8
  %1081 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1082 = load i64* %1081, align 8
  %1083 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1084 = load i64* %1083, align 8
  %1085 = add i64 %1082, %1084
  %extract2490 = add i64 %1085, 442368
  %1086 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract2490
  %ptrTypeCast2506 = bitcast double addrspace(1)* %1086 to <16 x double> addrspace(1)*
  %1087 = load <16 x double> addrspace(1)* %ptrTypeCast2506, align 8
  %1088 = fmul <16 x double> %1080, %1087
  %1089 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1088
  %1090 = fmul <16 x double> %1073, %1089
  %extract2526 = extractelement <16 x double> %1090, i32 0
  %extract2527 = extractelement <16 x double> %1090, i32 1
  %extract2528 = extractelement <16 x double> %1090, i32 2
  %extract2529 = extractelement <16 x double> %1090, i32 3
  %extract2530 = extractelement <16 x double> %1090, i32 4
  %extract2531 = extractelement <16 x double> %1090, i32 5
  %extract2532 = extractelement <16 x double> %1090, i32 6
  %extract2533 = extractelement <16 x double> %1090, i32 7
  %extract2534 = extractelement <16 x double> %1090, i32 8
  %extract2535 = extractelement <16 x double> %1090, i32 9
  %extract2536 = extractelement <16 x double> %1090, i32 10
  %extract2537 = extractelement <16 x double> %1090, i32 11
  %extract2538 = extractelement <16 x double> %1090, i32 12
  %extract2539 = extractelement <16 x double> %1090, i32 13
  %extract2540 = extractelement <16 x double> %1090, i32 14
  %extract2541 = extractelement <16 x double> %1090, i32 15
  %1091 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1092 = load i64* %1091, align 8
  %1093 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1094 = load i64* %1093, align 8
  %1095 = add i64 %1092, %1094
  %extract2509 = add i64 %1095, 1990656
  %1096 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2509
  %ptrTypeCast2525 = bitcast double addrspace(1)* %1096 to <16 x double> addrspace(1)*
  %1097 = load <16 x double> addrspace(1)* %ptrTypeCast2525, align 8
  %1098 = tail call double @_Z4fmindd(double %extract2526, double 1.000000e+300) nounwind
  %1099 = tail call double @_Z4fmindd(double %extract2527, double 1.000000e+300) nounwind
  %1100 = tail call double @_Z4fmindd(double %extract2528, double 1.000000e+300) nounwind
  %1101 = tail call double @_Z4fmindd(double %extract2529, double 1.000000e+300) nounwind
  %1102 = tail call double @_Z4fmindd(double %extract2530, double 1.000000e+300) nounwind
  %1103 = tail call double @_Z4fmindd(double %extract2531, double 1.000000e+300) nounwind
  %1104 = tail call double @_Z4fmindd(double %extract2532, double 1.000000e+300) nounwind
  %1105 = tail call double @_Z4fmindd(double %extract2533, double 1.000000e+300) nounwind
  %1106 = tail call double @_Z4fmindd(double %extract2534, double 1.000000e+300) nounwind
  %1107 = tail call double @_Z4fmindd(double %extract2535, double 1.000000e+300) nounwind
  %1108 = tail call double @_Z4fmindd(double %extract2536, double 1.000000e+300) nounwind
  %1109 = tail call double @_Z4fmindd(double %extract2537, double 1.000000e+300) nounwind
  %1110 = tail call double @_Z4fmindd(double %extract2538, double 1.000000e+300) nounwind
  %1111 = tail call double @_Z4fmindd(double %extract2539, double 1.000000e+300) nounwind
  %1112 = tail call double @_Z4fmindd(double %extract2540, double 1.000000e+300) nounwind
  %1113 = tail call double @_Z4fmindd(double %extract2541, double 1.000000e+300) nounwind
  %temp.vect2542 = insertelement <16 x double> undef, double %1098, i32 0
  %temp.vect2543 = insertelement <16 x double> %temp.vect2542, double %1099, i32 1
  %temp.vect2544 = insertelement <16 x double> %temp.vect2543, double %1100, i32 2
  %temp.vect2545 = insertelement <16 x double> %temp.vect2544, double %1101, i32 3
  %temp.vect2546 = insertelement <16 x double> %temp.vect2545, double %1102, i32 4
  %temp.vect2547 = insertelement <16 x double> %temp.vect2546, double %1103, i32 5
  %temp.vect2548 = insertelement <16 x double> %temp.vect2547, double %1104, i32 6
  %temp.vect2549 = insertelement <16 x double> %temp.vect2548, double %1105, i32 7
  %temp.vect2550 = insertelement <16 x double> %temp.vect2549, double %1106, i32 8
  %temp.vect2551 = insertelement <16 x double> %temp.vect2550, double %1107, i32 9
  %temp.vect2552 = insertelement <16 x double> %temp.vect2551, double %1108, i32 10
  %temp.vect2553 = insertelement <16 x double> %temp.vect2552, double %1109, i32 11
  %temp.vect2554 = insertelement <16 x double> %temp.vect2553, double %1110, i32 12
  %temp.vect2555 = insertelement <16 x double> %temp.vect2554, double %1111, i32 13
  %temp.vect2556 = insertelement <16 x double> %temp.vect2555, double %1112, i32 14
  %temp.vect2557 = insertelement <16 x double> %temp.vect2556, double %1113, i32 15
  %1114 = fmul <16 x double> %1097, %temp.vect2557
  %1115 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1116 = load i64* %1115, align 8
  %1117 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1118 = load i64* %1117, align 8
  %1119 = add i64 %1116, %1118
  %extract2560 = add i64 %1119, 1990656
  %1120 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract2560
  %ptrTypeCast2576 = bitcast double addrspace(1)* %1120 to <16 x double> addrspace(1)*
  store <16 x double> %1114, <16 x double> addrspace(1)* %ptrTypeCast2576, align 8
  %1121 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1122 = load i64* %1121, align 8
  %1123 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1124 = load i64* %1123, align 8
  %1125 = add i64 %1122, %1124
  %extract2579 = add i64 %1125, 221184
  %1126 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract2579
  %ptrTypeCast2595 = bitcast double addrspace(1)* %1126 to <16 x double> addrspace(1)*
  %1127 = load <16 x double> addrspace(1)* %ptrTypeCast2595, align 8
  %1128 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1129 = load i64* %1128, align 8
  %1130 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1131 = load i64* %1130, align 8
  %1132 = add i64 %1129, %1131
  %extract2598 = add i64 %1132, 663552
  %1133 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract2598
  %ptrTypeCast2614 = bitcast double addrspace(1)* %1133 to <16 x double> addrspace(1)*
  %1134 = load <16 x double> addrspace(1)* %ptrTypeCast2614, align 8
  %1135 = fmul <16 x double> %1127, %1134
  %1136 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1137 = load i64* %1136, align 8
  %1138 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1139 = load i64* %1138, align 8
  %1140 = add i64 %1137, %1139
  %extract2617 = add i64 %1140, 331776
  %1141 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract2617
  %ptrTypeCast2633 = bitcast double addrspace(1)* %1141 to <16 x double> addrspace(1)*
  %1142 = load <16 x double> addrspace(1)* %ptrTypeCast2633, align 8
  %1143 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1144 = load i64* %1143, align 8
  %1145 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1146 = load i64* %1145, align 8
  %1147 = add i64 %1144, %1146
  %extract2636 = add i64 %1147, 442368
  %1148 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract2636
  %ptrTypeCast2652 = bitcast double addrspace(1)* %1148 to <16 x double> addrspace(1)*
  %1149 = load <16 x double> addrspace(1)* %ptrTypeCast2652, align 8
  %1150 = fmul <16 x double> %1142, %1149
  %1151 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1150
  %1152 = fmul <16 x double> %1135, %1151
  %extract2672 = extractelement <16 x double> %1152, i32 0
  %extract2673 = extractelement <16 x double> %1152, i32 1
  %extract2674 = extractelement <16 x double> %1152, i32 2
  %extract2675 = extractelement <16 x double> %1152, i32 3
  %extract2676 = extractelement <16 x double> %1152, i32 4
  %extract2677 = extractelement <16 x double> %1152, i32 5
  %extract2678 = extractelement <16 x double> %1152, i32 6
  %extract2679 = extractelement <16 x double> %1152, i32 7
  %extract2680 = extractelement <16 x double> %1152, i32 8
  %extract2681 = extractelement <16 x double> %1152, i32 9
  %extract2682 = extractelement <16 x double> %1152, i32 10
  %extract2683 = extractelement <16 x double> %1152, i32 11
  %extract2684 = extractelement <16 x double> %1152, i32 12
  %extract2685 = extractelement <16 x double> %1152, i32 13
  %extract2686 = extractelement <16 x double> %1152, i32 14
  %extract2687 = extractelement <16 x double> %1152, i32 15
  %1153 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1154 = load i64* %1153, align 8
  %1155 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1156 = load i64* %1155, align 8
  %1157 = add i64 %1154, %1156
  %extract2655 = add i64 %1157, 2101248
  %1158 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2655
  %ptrTypeCast2671 = bitcast double addrspace(1)* %1158 to <16 x double> addrspace(1)*
  %1159 = load <16 x double> addrspace(1)* %ptrTypeCast2671, align 8
  %1160 = tail call double @_Z4fmindd(double %extract2672, double 1.000000e+300) nounwind
  %1161 = tail call double @_Z4fmindd(double %extract2673, double 1.000000e+300) nounwind
  %1162 = tail call double @_Z4fmindd(double %extract2674, double 1.000000e+300) nounwind
  %1163 = tail call double @_Z4fmindd(double %extract2675, double 1.000000e+300) nounwind
  %1164 = tail call double @_Z4fmindd(double %extract2676, double 1.000000e+300) nounwind
  %1165 = tail call double @_Z4fmindd(double %extract2677, double 1.000000e+300) nounwind
  %1166 = tail call double @_Z4fmindd(double %extract2678, double 1.000000e+300) nounwind
  %1167 = tail call double @_Z4fmindd(double %extract2679, double 1.000000e+300) nounwind
  %1168 = tail call double @_Z4fmindd(double %extract2680, double 1.000000e+300) nounwind
  %1169 = tail call double @_Z4fmindd(double %extract2681, double 1.000000e+300) nounwind
  %1170 = tail call double @_Z4fmindd(double %extract2682, double 1.000000e+300) nounwind
  %1171 = tail call double @_Z4fmindd(double %extract2683, double 1.000000e+300) nounwind
  %1172 = tail call double @_Z4fmindd(double %extract2684, double 1.000000e+300) nounwind
  %1173 = tail call double @_Z4fmindd(double %extract2685, double 1.000000e+300) nounwind
  %1174 = tail call double @_Z4fmindd(double %extract2686, double 1.000000e+300) nounwind
  %1175 = tail call double @_Z4fmindd(double %extract2687, double 1.000000e+300) nounwind
  %temp.vect2688 = insertelement <16 x double> undef, double %1160, i32 0
  %temp.vect2689 = insertelement <16 x double> %temp.vect2688, double %1161, i32 1
  %temp.vect2690 = insertelement <16 x double> %temp.vect2689, double %1162, i32 2
  %temp.vect2691 = insertelement <16 x double> %temp.vect2690, double %1163, i32 3
  %temp.vect2692 = insertelement <16 x double> %temp.vect2691, double %1164, i32 4
  %temp.vect2693 = insertelement <16 x double> %temp.vect2692, double %1165, i32 5
  %temp.vect2694 = insertelement <16 x double> %temp.vect2693, double %1166, i32 6
  %temp.vect2695 = insertelement <16 x double> %temp.vect2694, double %1167, i32 7
  %temp.vect2696 = insertelement <16 x double> %temp.vect2695, double %1168, i32 8
  %temp.vect2697 = insertelement <16 x double> %temp.vect2696, double %1169, i32 9
  %temp.vect2698 = insertelement <16 x double> %temp.vect2697, double %1170, i32 10
  %temp.vect2699 = insertelement <16 x double> %temp.vect2698, double %1171, i32 11
  %temp.vect2700 = insertelement <16 x double> %temp.vect2699, double %1172, i32 12
  %temp.vect2701 = insertelement <16 x double> %temp.vect2700, double %1173, i32 13
  %temp.vect2702 = insertelement <16 x double> %temp.vect2701, double %1174, i32 14
  %temp.vect2703 = insertelement <16 x double> %temp.vect2702, double %1175, i32 15
  %1176 = fmul <16 x double> %1159, %temp.vect2703
  %1177 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1178 = load i64* %1177, align 8
  %1179 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1180 = load i64* %1179, align 8
  %1181 = add i64 %1178, %1180
  %extract2706 = add i64 %1181, 2101248
  %1182 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract2706
  %ptrTypeCast2722 = bitcast double addrspace(1)* %1182 to <16 x double> addrspace(1)*
  store <16 x double> %1176, <16 x double> addrspace(1)* %ptrTypeCast2722, align 8
  %1183 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1184 = load i64* %1183, align 8
  %1185 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1186 = load i64* %1185, align 8
  %1187 = add i64 %1184, %1186
  %extract2725 = add i64 %1187, 442368
  %1188 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract2725
  %ptrTypeCast2741 = bitcast double addrspace(1)* %1188 to <16 x double> addrspace(1)*
  %1189 = load <16 x double> addrspace(1)* %ptrTypeCast2741, align 8
  %1190 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1191 = load i64* %1190, align 8
  %1192 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1193 = load i64* %1192, align 8
  %1194 = add i64 %1191, %1193
  %extract2744 = add i64 %1194, 663552
  %1195 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract2744
  %ptrTypeCast2760 = bitcast double addrspace(1)* %1195 to <16 x double> addrspace(1)*
  %1196 = load <16 x double> addrspace(1)* %ptrTypeCast2760, align 8
  %1197 = fmul <16 x double> %1189, %1196
  %1198 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1199 = load i64* %1198, align 8
  %1200 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1201 = load i64* %1200, align 8
  %1202 = add i64 %1199, %1201
  %extract2763 = add i64 %1202, 331776
  %1203 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract2763
  %ptrTypeCast2779 = bitcast double addrspace(1)* %1203 to <16 x double> addrspace(1)*
  %1204 = load <16 x double> addrspace(1)* %ptrTypeCast2779, align 8
  %1205 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1206 = load i64* %1205, align 8
  %1207 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1208 = load i64* %1207, align 8
  %1209 = add i64 %1206, %1208
  %extract2782 = add i64 %1209, 552960
  %1210 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract2782
  %ptrTypeCast2798 = bitcast double addrspace(1)* %1210 to <16 x double> addrspace(1)*
  %1211 = load <16 x double> addrspace(1)* %ptrTypeCast2798, align 8
  %1212 = fmul <16 x double> %1204, %1211
  %1213 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1212
  %1214 = fmul <16 x double> %1197, %1213
  %extract2818 = extractelement <16 x double> %1214, i32 0
  %extract2819 = extractelement <16 x double> %1214, i32 1
  %extract2820 = extractelement <16 x double> %1214, i32 2
  %extract2821 = extractelement <16 x double> %1214, i32 3
  %extract2822 = extractelement <16 x double> %1214, i32 4
  %extract2823 = extractelement <16 x double> %1214, i32 5
  %extract2824 = extractelement <16 x double> %1214, i32 6
  %extract2825 = extractelement <16 x double> %1214, i32 7
  %extract2826 = extractelement <16 x double> %1214, i32 8
  %extract2827 = extractelement <16 x double> %1214, i32 9
  %extract2828 = extractelement <16 x double> %1214, i32 10
  %extract2829 = extractelement <16 x double> %1214, i32 11
  %extract2830 = extractelement <16 x double> %1214, i32 12
  %extract2831 = extractelement <16 x double> %1214, i32 13
  %extract2832 = extractelement <16 x double> %1214, i32 14
  %extract2833 = extractelement <16 x double> %1214, i32 15
  %1215 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1216 = load i64* %1215, align 8
  %1217 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1218 = load i64* %1217, align 8
  %1219 = add i64 %1216, %1218
  %extract2801 = add i64 %1219, 2211840
  %1220 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2801
  %ptrTypeCast2817 = bitcast double addrspace(1)* %1220 to <16 x double> addrspace(1)*
  %1221 = load <16 x double> addrspace(1)* %ptrTypeCast2817, align 8
  %1222 = tail call double @_Z4fmindd(double %extract2818, double 1.000000e+300) nounwind
  %1223 = tail call double @_Z4fmindd(double %extract2819, double 1.000000e+300) nounwind
  %1224 = tail call double @_Z4fmindd(double %extract2820, double 1.000000e+300) nounwind
  %1225 = tail call double @_Z4fmindd(double %extract2821, double 1.000000e+300) nounwind
  %1226 = tail call double @_Z4fmindd(double %extract2822, double 1.000000e+300) nounwind
  %1227 = tail call double @_Z4fmindd(double %extract2823, double 1.000000e+300) nounwind
  %1228 = tail call double @_Z4fmindd(double %extract2824, double 1.000000e+300) nounwind
  %1229 = tail call double @_Z4fmindd(double %extract2825, double 1.000000e+300) nounwind
  %1230 = tail call double @_Z4fmindd(double %extract2826, double 1.000000e+300) nounwind
  %1231 = tail call double @_Z4fmindd(double %extract2827, double 1.000000e+300) nounwind
  %1232 = tail call double @_Z4fmindd(double %extract2828, double 1.000000e+300) nounwind
  %1233 = tail call double @_Z4fmindd(double %extract2829, double 1.000000e+300) nounwind
  %1234 = tail call double @_Z4fmindd(double %extract2830, double 1.000000e+300) nounwind
  %1235 = tail call double @_Z4fmindd(double %extract2831, double 1.000000e+300) nounwind
  %1236 = tail call double @_Z4fmindd(double %extract2832, double 1.000000e+300) nounwind
  %1237 = tail call double @_Z4fmindd(double %extract2833, double 1.000000e+300) nounwind
  %temp.vect2834 = insertelement <16 x double> undef, double %1222, i32 0
  %temp.vect2835 = insertelement <16 x double> %temp.vect2834, double %1223, i32 1
  %temp.vect2836 = insertelement <16 x double> %temp.vect2835, double %1224, i32 2
  %temp.vect2837 = insertelement <16 x double> %temp.vect2836, double %1225, i32 3
  %temp.vect2838 = insertelement <16 x double> %temp.vect2837, double %1226, i32 4
  %temp.vect2839 = insertelement <16 x double> %temp.vect2838, double %1227, i32 5
  %temp.vect2840 = insertelement <16 x double> %temp.vect2839, double %1228, i32 6
  %temp.vect2841 = insertelement <16 x double> %temp.vect2840, double %1229, i32 7
  %temp.vect2842 = insertelement <16 x double> %temp.vect2841, double %1230, i32 8
  %temp.vect2843 = insertelement <16 x double> %temp.vect2842, double %1231, i32 9
  %temp.vect2844 = insertelement <16 x double> %temp.vect2843, double %1232, i32 10
  %temp.vect2845 = insertelement <16 x double> %temp.vect2844, double %1233, i32 11
  %temp.vect2846 = insertelement <16 x double> %temp.vect2845, double %1234, i32 12
  %temp.vect2847 = insertelement <16 x double> %temp.vect2846, double %1235, i32 13
  %temp.vect2848 = insertelement <16 x double> %temp.vect2847, double %1236, i32 14
  %temp.vect2849 = insertelement <16 x double> %temp.vect2848, double %1237, i32 15
  %1238 = fmul <16 x double> %1221, %temp.vect2849
  %1239 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1240 = load i64* %1239, align 8
  %1241 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1242 = load i64* %1241, align 8
  %1243 = add i64 %1240, %1242
  %extract2852 = add i64 %1243, 2211840
  %1244 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract2852
  %ptrTypeCast2868 = bitcast double addrspace(1)* %1244 to <16 x double> addrspace(1)*
  store <16 x double> %1238, <16 x double> addrspace(1)* %ptrTypeCast2868, align 8
  %1245 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1246 = load i64* %1245, align 8
  %1247 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1248 = load i64* %1247, align 8
  %1249 = add i64 %1246, %1248
  %extract2871 = add i64 %1249, 663552
  %1250 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract2871
  %ptrTypeCast2887 = bitcast double addrspace(1)* %1250 to <16 x double> addrspace(1)*
  %1251 = load <16 x double> addrspace(1)* %ptrTypeCast2887, align 8
  %1252 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1253 = load i64* %1252, align 8
  %1254 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1255 = load i64* %1254, align 8
  %1256 = add i64 %1253, %1255
  %extract2890 = add i64 %1256, 663552
  %1257 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract2890
  %ptrTypeCast2906 = bitcast double addrspace(1)* %1257 to <16 x double> addrspace(1)*
  %1258 = load <16 x double> addrspace(1)* %ptrTypeCast2906, align 8
  %1259 = fmul <16 x double> %1251, %1258
  %1260 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1261 = load i64* %1260, align 8
  %1262 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1263 = load i64* %1262, align 8
  %1264 = add i64 %1261, %1263
  %extract2909 = add i64 %1264, 331776
  %1265 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract2909
  %ptrTypeCast2925 = bitcast double addrspace(1)* %1265 to <16 x double> addrspace(1)*
  %1266 = load <16 x double> addrspace(1)* %ptrTypeCast2925, align 8
  %1267 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1268 = load i64* %1267, align 8
  %1269 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1270 = load i64* %1269, align 8
  %1271 = add i64 %1268, %1270
  %extract2928 = add i64 %1271, 774144
  %1272 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract2928
  %ptrTypeCast2944 = bitcast double addrspace(1)* %1272 to <16 x double> addrspace(1)*
  %1273 = load <16 x double> addrspace(1)* %ptrTypeCast2944, align 8
  %1274 = fmul <16 x double> %1266, %1273
  %1275 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1274
  %1276 = fmul <16 x double> %1259, %1275
  %extract2964 = extractelement <16 x double> %1276, i32 0
  %extract2965 = extractelement <16 x double> %1276, i32 1
  %extract2966 = extractelement <16 x double> %1276, i32 2
  %extract2967 = extractelement <16 x double> %1276, i32 3
  %extract2968 = extractelement <16 x double> %1276, i32 4
  %extract2969 = extractelement <16 x double> %1276, i32 5
  %extract2970 = extractelement <16 x double> %1276, i32 6
  %extract2971 = extractelement <16 x double> %1276, i32 7
  %extract2972 = extractelement <16 x double> %1276, i32 8
  %extract2973 = extractelement <16 x double> %1276, i32 9
  %extract2974 = extractelement <16 x double> %1276, i32 10
  %extract2975 = extractelement <16 x double> %1276, i32 11
  %extract2976 = extractelement <16 x double> %1276, i32 12
  %extract2977 = extractelement <16 x double> %1276, i32 13
  %extract2978 = extractelement <16 x double> %1276, i32 14
  %extract2979 = extractelement <16 x double> %1276, i32 15
  %1277 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1278 = load i64* %1277, align 8
  %1279 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1280 = load i64* %1279, align 8
  %1281 = add i64 %1278, %1280
  %extract2947 = add i64 %1281, 2322432
  %1282 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2947
  %ptrTypeCast2963 = bitcast double addrspace(1)* %1282 to <16 x double> addrspace(1)*
  %1283 = load <16 x double> addrspace(1)* %ptrTypeCast2963, align 8
  %1284 = tail call double @_Z4fmindd(double %extract2964, double 1.000000e+300) nounwind
  %1285 = tail call double @_Z4fmindd(double %extract2965, double 1.000000e+300) nounwind
  %1286 = tail call double @_Z4fmindd(double %extract2966, double 1.000000e+300) nounwind
  %1287 = tail call double @_Z4fmindd(double %extract2967, double 1.000000e+300) nounwind
  %1288 = tail call double @_Z4fmindd(double %extract2968, double 1.000000e+300) nounwind
  %1289 = tail call double @_Z4fmindd(double %extract2969, double 1.000000e+300) nounwind
  %1290 = tail call double @_Z4fmindd(double %extract2970, double 1.000000e+300) nounwind
  %1291 = tail call double @_Z4fmindd(double %extract2971, double 1.000000e+300) nounwind
  %1292 = tail call double @_Z4fmindd(double %extract2972, double 1.000000e+300) nounwind
  %1293 = tail call double @_Z4fmindd(double %extract2973, double 1.000000e+300) nounwind
  %1294 = tail call double @_Z4fmindd(double %extract2974, double 1.000000e+300) nounwind
  %1295 = tail call double @_Z4fmindd(double %extract2975, double 1.000000e+300) nounwind
  %1296 = tail call double @_Z4fmindd(double %extract2976, double 1.000000e+300) nounwind
  %1297 = tail call double @_Z4fmindd(double %extract2977, double 1.000000e+300) nounwind
  %1298 = tail call double @_Z4fmindd(double %extract2978, double 1.000000e+300) nounwind
  %1299 = tail call double @_Z4fmindd(double %extract2979, double 1.000000e+300) nounwind
  %temp.vect2980 = insertelement <16 x double> undef, double %1284, i32 0
  %temp.vect2981 = insertelement <16 x double> %temp.vect2980, double %1285, i32 1
  %temp.vect2982 = insertelement <16 x double> %temp.vect2981, double %1286, i32 2
  %temp.vect2983 = insertelement <16 x double> %temp.vect2982, double %1287, i32 3
  %temp.vect2984 = insertelement <16 x double> %temp.vect2983, double %1288, i32 4
  %temp.vect2985 = insertelement <16 x double> %temp.vect2984, double %1289, i32 5
  %temp.vect2986 = insertelement <16 x double> %temp.vect2985, double %1290, i32 6
  %temp.vect2987 = insertelement <16 x double> %temp.vect2986, double %1291, i32 7
  %temp.vect2988 = insertelement <16 x double> %temp.vect2987, double %1292, i32 8
  %temp.vect2989 = insertelement <16 x double> %temp.vect2988, double %1293, i32 9
  %temp.vect2990 = insertelement <16 x double> %temp.vect2989, double %1294, i32 10
  %temp.vect2991 = insertelement <16 x double> %temp.vect2990, double %1295, i32 11
  %temp.vect2992 = insertelement <16 x double> %temp.vect2991, double %1296, i32 12
  %temp.vect2993 = insertelement <16 x double> %temp.vect2992, double %1297, i32 13
  %temp.vect2994 = insertelement <16 x double> %temp.vect2993, double %1298, i32 14
  %temp.vect2995 = insertelement <16 x double> %temp.vect2994, double %1299, i32 15
  %1300 = fmul <16 x double> %1283, %temp.vect2995
  %1301 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1302 = load i64* %1301, align 8
  %1303 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1304 = load i64* %1303, align 8
  %1305 = add i64 %1302, %1304
  %extract2998 = add i64 %1305, 2322432
  %1306 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract2998
  %ptrTypeCast3014 = bitcast double addrspace(1)* %1306 to <16 x double> addrspace(1)*
  store <16 x double> %1300, <16 x double> addrspace(1)* %ptrTypeCast3014, align 8
  %1307 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1308 = load i64* %1307, align 8
  %1309 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1310 = load i64* %1309, align 8
  %1311 = add i64 %1308, %1310
  %extract3017 = add i64 %1311, 663552
  %1312 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract3017
  %ptrTypeCast3033 = bitcast double addrspace(1)* %1312 to <16 x double> addrspace(1)*
  %1313 = load <16 x double> addrspace(1)* %ptrTypeCast3033, align 8
  %1314 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1315 = load i64* %1314, align 8
  %1316 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1317 = load i64* %1316, align 8
  %1318 = add i64 %1315, %1317
  %extract3036 = add i64 %1318, 663552
  %1319 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract3036
  %ptrTypeCast3052 = bitcast double addrspace(1)* %1319 to <16 x double> addrspace(1)*
  %1320 = load <16 x double> addrspace(1)* %ptrTypeCast3052, align 8
  %1321 = fmul <16 x double> %1313, %1320
  %1322 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1323 = load i64* %1322, align 8
  %1324 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1325 = load i64* %1324, align 8
  %1326 = add i64 %1323, %1325
  %extract3055 = add i64 %1326, 331776
  %1327 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract3055
  %ptrTypeCast3071 = bitcast double addrspace(1)* %1327 to <16 x double> addrspace(1)*
  %1328 = load <16 x double> addrspace(1)* %ptrTypeCast3071, align 8
  %1329 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1330 = load i64* %1329, align 8
  %1331 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1332 = load i64* %1331, align 8
  %1333 = add i64 %1330, %1332
  %extract3074 = add i64 %1333, 774144
  %1334 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract3074
  %ptrTypeCast3090 = bitcast double addrspace(1)* %1334 to <16 x double> addrspace(1)*
  %1335 = load <16 x double> addrspace(1)* %ptrTypeCast3090, align 8
  %1336 = fmul <16 x double> %1328, %1335
  %1337 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1336
  %1338 = fmul <16 x double> %1321, %1337
  %extract3110 = extractelement <16 x double> %1338, i32 0
  %extract3111 = extractelement <16 x double> %1338, i32 1
  %extract3112 = extractelement <16 x double> %1338, i32 2
  %extract3113 = extractelement <16 x double> %1338, i32 3
  %extract3114 = extractelement <16 x double> %1338, i32 4
  %extract3115 = extractelement <16 x double> %1338, i32 5
  %extract3116 = extractelement <16 x double> %1338, i32 6
  %extract3117 = extractelement <16 x double> %1338, i32 7
  %extract3118 = extractelement <16 x double> %1338, i32 8
  %extract3119 = extractelement <16 x double> %1338, i32 9
  %extract3120 = extractelement <16 x double> %1338, i32 10
  %extract3121 = extractelement <16 x double> %1338, i32 11
  %extract3122 = extractelement <16 x double> %1338, i32 12
  %extract3123 = extractelement <16 x double> %1338, i32 13
  %extract3124 = extractelement <16 x double> %1338, i32 14
  %extract3125 = extractelement <16 x double> %1338, i32 15
  %1339 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1340 = load i64* %1339, align 8
  %1341 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1342 = load i64* %1341, align 8
  %1343 = add i64 %1340, %1342
  %extract3093 = add i64 %1343, 2433024
  %1344 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3093
  %ptrTypeCast3109 = bitcast double addrspace(1)* %1344 to <16 x double> addrspace(1)*
  %1345 = load <16 x double> addrspace(1)* %ptrTypeCast3109, align 8
  %1346 = tail call double @_Z4fmindd(double %extract3110, double 1.000000e+300) nounwind
  %1347 = tail call double @_Z4fmindd(double %extract3111, double 1.000000e+300) nounwind
  %1348 = tail call double @_Z4fmindd(double %extract3112, double 1.000000e+300) nounwind
  %1349 = tail call double @_Z4fmindd(double %extract3113, double 1.000000e+300) nounwind
  %1350 = tail call double @_Z4fmindd(double %extract3114, double 1.000000e+300) nounwind
  %1351 = tail call double @_Z4fmindd(double %extract3115, double 1.000000e+300) nounwind
  %1352 = tail call double @_Z4fmindd(double %extract3116, double 1.000000e+300) nounwind
  %1353 = tail call double @_Z4fmindd(double %extract3117, double 1.000000e+300) nounwind
  %1354 = tail call double @_Z4fmindd(double %extract3118, double 1.000000e+300) nounwind
  %1355 = tail call double @_Z4fmindd(double %extract3119, double 1.000000e+300) nounwind
  %1356 = tail call double @_Z4fmindd(double %extract3120, double 1.000000e+300) nounwind
  %1357 = tail call double @_Z4fmindd(double %extract3121, double 1.000000e+300) nounwind
  %1358 = tail call double @_Z4fmindd(double %extract3122, double 1.000000e+300) nounwind
  %1359 = tail call double @_Z4fmindd(double %extract3123, double 1.000000e+300) nounwind
  %1360 = tail call double @_Z4fmindd(double %extract3124, double 1.000000e+300) nounwind
  %1361 = tail call double @_Z4fmindd(double %extract3125, double 1.000000e+300) nounwind
  %temp.vect3126 = insertelement <16 x double> undef, double %1346, i32 0
  %temp.vect3127 = insertelement <16 x double> %temp.vect3126, double %1347, i32 1
  %temp.vect3128 = insertelement <16 x double> %temp.vect3127, double %1348, i32 2
  %temp.vect3129 = insertelement <16 x double> %temp.vect3128, double %1349, i32 3
  %temp.vect3130 = insertelement <16 x double> %temp.vect3129, double %1350, i32 4
  %temp.vect3131 = insertelement <16 x double> %temp.vect3130, double %1351, i32 5
  %temp.vect3132 = insertelement <16 x double> %temp.vect3131, double %1352, i32 6
  %temp.vect3133 = insertelement <16 x double> %temp.vect3132, double %1353, i32 7
  %temp.vect3134 = insertelement <16 x double> %temp.vect3133, double %1354, i32 8
  %temp.vect3135 = insertelement <16 x double> %temp.vect3134, double %1355, i32 9
  %temp.vect3136 = insertelement <16 x double> %temp.vect3135, double %1356, i32 10
  %temp.vect3137 = insertelement <16 x double> %temp.vect3136, double %1357, i32 11
  %temp.vect3138 = insertelement <16 x double> %temp.vect3137, double %1358, i32 12
  %temp.vect3139 = insertelement <16 x double> %temp.vect3138, double %1359, i32 13
  %temp.vect3140 = insertelement <16 x double> %temp.vect3139, double %1360, i32 14
  %temp.vect3141 = insertelement <16 x double> %temp.vect3140, double %1361, i32 15
  %1362 = fmul <16 x double> %1345, %temp.vect3141
  %1363 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1364 = load i64* %1363, align 8
  %1365 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1366 = load i64* %1365, align 8
  %1367 = add i64 %1364, %1366
  %extract3144 = add i64 %1367, 2433024
  %1368 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract3144
  %ptrTypeCast3160 = bitcast double addrspace(1)* %1368 to <16 x double> addrspace(1)*
  store <16 x double> %1362, <16 x double> addrspace(1)* %ptrTypeCast3160, align 8
  %1369 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1370 = load i64* %1369, align 8
  %1371 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1372 = load i64* %1371, align 8
  %1373 = add i64 %1370, %1372
  %extract3163 = add i64 %1373, 110592
  %1374 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract3163
  %ptrTypeCast3179 = bitcast double addrspace(1)* %1374 to <16 x double> addrspace(1)*
  %1375 = load <16 x double> addrspace(1)* %ptrTypeCast3179, align 8
  %1376 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1377 = load i64* %1376, align 8
  %1378 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1379 = load i64* %1378, align 8
  %1380 = add i64 %1377, %1379
  %extract3182 = add i64 %1380, 774144
  %1381 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract3182
  %ptrTypeCast3198 = bitcast double addrspace(1)* %1381 to <16 x double> addrspace(1)*
  %1382 = load <16 x double> addrspace(1)* %ptrTypeCast3198, align 8
  %1383 = fmul <16 x double> %1375, %1382
  %1384 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1385 = load i64* %1384, align 8
  %1386 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1387 = load i64* %1386, align 8
  %1388 = add i64 %1385, %1387
  %1389 = getelementptr inbounds double addrspace(1)* %EG, i64 %1388
  %ptrTypeCast3217 = bitcast double addrspace(1)* %1389 to <16 x double> addrspace(1)*
  %1390 = load <16 x double> addrspace(1)* %ptrTypeCast3217, align 8
  %1391 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1392 = load i64* %1391, align 8
  %1393 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1394 = load i64* %1393, align 8
  %1395 = add i64 %1392, %1394
  %extract3220 = add i64 %1395, 663552
  %1396 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract3220
  %ptrTypeCast3236 = bitcast double addrspace(1)* %1396 to <16 x double> addrspace(1)*
  %1397 = load <16 x double> addrspace(1)* %ptrTypeCast3236, align 8
  %1398 = fmul <16 x double> %1390, %1397
  %1399 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1398
  %1400 = fmul <16 x double> %1383, %1399
  %extract3256 = extractelement <16 x double> %1400, i32 0
  %extract3257 = extractelement <16 x double> %1400, i32 1
  %extract3258 = extractelement <16 x double> %1400, i32 2
  %extract3259 = extractelement <16 x double> %1400, i32 3
  %extract3260 = extractelement <16 x double> %1400, i32 4
  %extract3261 = extractelement <16 x double> %1400, i32 5
  %extract3262 = extractelement <16 x double> %1400, i32 6
  %extract3263 = extractelement <16 x double> %1400, i32 7
  %extract3264 = extractelement <16 x double> %1400, i32 8
  %extract3265 = extractelement <16 x double> %1400, i32 9
  %extract3266 = extractelement <16 x double> %1400, i32 10
  %extract3267 = extractelement <16 x double> %1400, i32 11
  %extract3268 = extractelement <16 x double> %1400, i32 12
  %extract3269 = extractelement <16 x double> %1400, i32 13
  %extract3270 = extractelement <16 x double> %1400, i32 14
  %extract3271 = extractelement <16 x double> %1400, i32 15
  %1401 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1402 = load i64* %1401, align 8
  %1403 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1404 = load i64* %1403, align 8
  %1405 = add i64 %1402, %1404
  %extract3239 = add i64 %1405, 2543616
  %1406 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3239
  %ptrTypeCast3255 = bitcast double addrspace(1)* %1406 to <16 x double> addrspace(1)*
  %1407 = load <16 x double> addrspace(1)* %ptrTypeCast3255, align 8
  %1408 = tail call double @_Z4fmindd(double %extract3256, double 1.000000e+300) nounwind
  %1409 = tail call double @_Z4fmindd(double %extract3257, double 1.000000e+300) nounwind
  %1410 = tail call double @_Z4fmindd(double %extract3258, double 1.000000e+300) nounwind
  %1411 = tail call double @_Z4fmindd(double %extract3259, double 1.000000e+300) nounwind
  %1412 = tail call double @_Z4fmindd(double %extract3260, double 1.000000e+300) nounwind
  %1413 = tail call double @_Z4fmindd(double %extract3261, double 1.000000e+300) nounwind
  %1414 = tail call double @_Z4fmindd(double %extract3262, double 1.000000e+300) nounwind
  %1415 = tail call double @_Z4fmindd(double %extract3263, double 1.000000e+300) nounwind
  %1416 = tail call double @_Z4fmindd(double %extract3264, double 1.000000e+300) nounwind
  %1417 = tail call double @_Z4fmindd(double %extract3265, double 1.000000e+300) nounwind
  %1418 = tail call double @_Z4fmindd(double %extract3266, double 1.000000e+300) nounwind
  %1419 = tail call double @_Z4fmindd(double %extract3267, double 1.000000e+300) nounwind
  %1420 = tail call double @_Z4fmindd(double %extract3268, double 1.000000e+300) nounwind
  %1421 = tail call double @_Z4fmindd(double %extract3269, double 1.000000e+300) nounwind
  %1422 = tail call double @_Z4fmindd(double %extract3270, double 1.000000e+300) nounwind
  %1423 = tail call double @_Z4fmindd(double %extract3271, double 1.000000e+300) nounwind
  %temp.vect3272 = insertelement <16 x double> undef, double %1408, i32 0
  %temp.vect3273 = insertelement <16 x double> %temp.vect3272, double %1409, i32 1
  %temp.vect3274 = insertelement <16 x double> %temp.vect3273, double %1410, i32 2
  %temp.vect3275 = insertelement <16 x double> %temp.vect3274, double %1411, i32 3
  %temp.vect3276 = insertelement <16 x double> %temp.vect3275, double %1412, i32 4
  %temp.vect3277 = insertelement <16 x double> %temp.vect3276, double %1413, i32 5
  %temp.vect3278 = insertelement <16 x double> %temp.vect3277, double %1414, i32 6
  %temp.vect3279 = insertelement <16 x double> %temp.vect3278, double %1415, i32 7
  %temp.vect3280 = insertelement <16 x double> %temp.vect3279, double %1416, i32 8
  %temp.vect3281 = insertelement <16 x double> %temp.vect3280, double %1417, i32 9
  %temp.vect3282 = insertelement <16 x double> %temp.vect3281, double %1418, i32 10
  %temp.vect3283 = insertelement <16 x double> %temp.vect3282, double %1419, i32 11
  %temp.vect3284 = insertelement <16 x double> %temp.vect3283, double %1420, i32 12
  %temp.vect3285 = insertelement <16 x double> %temp.vect3284, double %1421, i32 13
  %temp.vect3286 = insertelement <16 x double> %temp.vect3285, double %1422, i32 14
  %temp.vect3287 = insertelement <16 x double> %temp.vect3286, double %1423, i32 15
  %1424 = fmul <16 x double> %1407, %temp.vect3287
  %1425 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1426 = load i64* %1425, align 8
  %1427 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1428 = load i64* %1427, align 8
  %1429 = add i64 %1426, %1428
  %extract3290 = add i64 %1429, 2543616
  %1430 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract3290
  %ptrTypeCast3306 = bitcast double addrspace(1)* %1430 to <16 x double> addrspace(1)*
  store <16 x double> %1424, <16 x double> addrspace(1)* %ptrTypeCast3306, align 8
  %1431 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1432 = load i64* %1431, align 8
  %1433 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1434 = load i64* %1433, align 8
  %1435 = add i64 %1432, %1434
  %extract3309 = add i64 %1435, 110592
  %1436 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract3309
  %ptrTypeCast3325 = bitcast double addrspace(1)* %1436 to <16 x double> addrspace(1)*
  %1437 = load <16 x double> addrspace(1)* %ptrTypeCast3325, align 8
  %1438 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1439 = load i64* %1438, align 8
  %1440 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1441 = load i64* %1440, align 8
  %1442 = add i64 %1439, %1441
  %extract3328 = add i64 %1442, 774144
  %1443 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract3328
  %ptrTypeCast3344 = bitcast double addrspace(1)* %1443 to <16 x double> addrspace(1)*
  %1444 = load <16 x double> addrspace(1)* %ptrTypeCast3344, align 8
  %1445 = fmul <16 x double> %1437, %1444
  %1446 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1447 = load i64* %1446, align 8
  %1448 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1449 = load i64* %1448, align 8
  %1450 = add i64 %1447, %1449
  %extract3347 = add i64 %1450, 442368
  %1451 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract3347
  %ptrTypeCast3363 = bitcast double addrspace(1)* %1451 to <16 x double> addrspace(1)*
  %1452 = load <16 x double> addrspace(1)* %ptrTypeCast3363, align 8
  %1453 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1454 = load i64* %1453, align 8
  %1455 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1456 = load i64* %1455, align 8
  %1457 = add i64 %1454, %1456
  %extract3366 = add i64 %1457, 552960
  %1458 = getelementptr inbounds double addrspace(1)* %EG, i64 %extract3366
  %ptrTypeCast3382 = bitcast double addrspace(1)* %1458 to <16 x double> addrspace(1)*
  %1459 = load <16 x double> addrspace(1)* %ptrTypeCast3382, align 8
  %1460 = fmul <16 x double> %1452, %1459
  %1461 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1460
  %1462 = fmul <16 x double> %1445, %1461
  %extract3402 = extractelement <16 x double> %1462, i32 0
  %extract3403 = extractelement <16 x double> %1462, i32 1
  %extract3404 = extractelement <16 x double> %1462, i32 2
  %extract3405 = extractelement <16 x double> %1462, i32 3
  %extract3406 = extractelement <16 x double> %1462, i32 4
  %extract3407 = extractelement <16 x double> %1462, i32 5
  %extract3408 = extractelement <16 x double> %1462, i32 6
  %extract3409 = extractelement <16 x double> %1462, i32 7
  %extract3410 = extractelement <16 x double> %1462, i32 8
  %extract3411 = extractelement <16 x double> %1462, i32 9
  %extract3412 = extractelement <16 x double> %1462, i32 10
  %extract3413 = extractelement <16 x double> %1462, i32 11
  %extract3414 = extractelement <16 x double> %1462, i32 12
  %extract3415 = extractelement <16 x double> %1462, i32 13
  %extract3416 = extractelement <16 x double> %1462, i32 14
  %extract3417 = extractelement <16 x double> %1462, i32 15
  %1463 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1464 = load i64* %1463, align 8
  %1465 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1466 = load i64* %1465, align 8
  %1467 = add i64 %1464, %1466
  %extract3385 = add i64 %1467, 2654208
  %1468 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3385
  %ptrTypeCast3401 = bitcast double addrspace(1)* %1468 to <16 x double> addrspace(1)*
  %1469 = load <16 x double> addrspace(1)* %ptrTypeCast3401, align 8
  %1470 = tail call double @_Z4fmindd(double %extract3402, double 1.000000e+300) nounwind
  %1471 = tail call double @_Z4fmindd(double %extract3403, double 1.000000e+300) nounwind
  %1472 = tail call double @_Z4fmindd(double %extract3404, double 1.000000e+300) nounwind
  %1473 = tail call double @_Z4fmindd(double %extract3405, double 1.000000e+300) nounwind
  %1474 = tail call double @_Z4fmindd(double %extract3406, double 1.000000e+300) nounwind
  %1475 = tail call double @_Z4fmindd(double %extract3407, double 1.000000e+300) nounwind
  %1476 = tail call double @_Z4fmindd(double %extract3408, double 1.000000e+300) nounwind
  %1477 = tail call double @_Z4fmindd(double %extract3409, double 1.000000e+300) nounwind
  %1478 = tail call double @_Z4fmindd(double %extract3410, double 1.000000e+300) nounwind
  %1479 = tail call double @_Z4fmindd(double %extract3411, double 1.000000e+300) nounwind
  %1480 = tail call double @_Z4fmindd(double %extract3412, double 1.000000e+300) nounwind
  %1481 = tail call double @_Z4fmindd(double %extract3413, double 1.000000e+300) nounwind
  %1482 = tail call double @_Z4fmindd(double %extract3414, double 1.000000e+300) nounwind
  %1483 = tail call double @_Z4fmindd(double %extract3415, double 1.000000e+300) nounwind
  %1484 = tail call double @_Z4fmindd(double %extract3416, double 1.000000e+300) nounwind
  %1485 = tail call double @_Z4fmindd(double %extract3417, double 1.000000e+300) nounwind
  %temp.vect3418 = insertelement <16 x double> undef, double %1470, i32 0
  %temp.vect3419 = insertelement <16 x double> %temp.vect3418, double %1471, i32 1
  %temp.vect3420 = insertelement <16 x double> %temp.vect3419, double %1472, i32 2
  %temp.vect3421 = insertelement <16 x double> %temp.vect3420, double %1473, i32 3
  %temp.vect3422 = insertelement <16 x double> %temp.vect3421, double %1474, i32 4
  %temp.vect3423 = insertelement <16 x double> %temp.vect3422, double %1475, i32 5
  %temp.vect3424 = insertelement <16 x double> %temp.vect3423, double %1476, i32 6
  %temp.vect3425 = insertelement <16 x double> %temp.vect3424, double %1477, i32 7
  %temp.vect3426 = insertelement <16 x double> %temp.vect3425, double %1478, i32 8
  %temp.vect3427 = insertelement <16 x double> %temp.vect3426, double %1479, i32 9
  %temp.vect3428 = insertelement <16 x double> %temp.vect3427, double %1480, i32 10
  %temp.vect3429 = insertelement <16 x double> %temp.vect3428, double %1481, i32 11
  %temp.vect3430 = insertelement <16 x double> %temp.vect3429, double %1482, i32 12
  %temp.vect3431 = insertelement <16 x double> %temp.vect3430, double %1483, i32 13
  %temp.vect3432 = insertelement <16 x double> %temp.vect3431, double %1484, i32 14
  %temp.vect3433 = insertelement <16 x double> %temp.vect3432, double %1485, i32 15
  %1486 = fmul <16 x double> %1469, %temp.vect3433
  %1487 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1488 = load i64* %1487, align 8
  %1489 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1490 = load i64* %1489, align 8
  %1491 = add i64 %1488, %1490
  %extract3436 = add i64 %1491, 2654208
  %1492 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract3436
  %ptrTypeCast3452 = bitcast double addrspace(1)* %1492 to <16 x double> addrspace(1)*
  store <16 x double> %1486, <16 x double> addrspace(1)* %ptrTypeCast3452, align 8
  %check.WI.iter = icmp ult i64 %CurrWI..0, %iterCount
  br i1 %check.WI.iter, label %thenBB, label %SyncBB

thenBB:                                           ; preds = %SyncBB3453
  %"CurrWI++" = add nuw i64 %CurrWI..0, 1
  br label %SyncBB3453

SyncBB:                                           ; preds = %SyncBB3453
  ret void
}

define void @ratt2_kernel(i8* %pBuffer) {
entry:
  %0 = bitcast i8* %pBuffer to double addrspace(1)**
  %1 = load double addrspace(1)** %0, align 8
  %2 = getelementptr i8* %pBuffer, i64 8
  %3 = bitcast i8* %2 to double addrspace(1)**
  %4 = load double addrspace(1)** %3, align 8
  %5 = getelementptr i8* %pBuffer, i64 16
  %6 = bitcast i8* %5 to double addrspace(1)**
  %7 = load double addrspace(1)** %6, align 8
  %8 = getelementptr i8* %pBuffer, i64 24
  %9 = bitcast i8* %8 to double addrspace(1)**
  %10 = load double addrspace(1)** %9, align 8
  %11 = getelementptr i8* %pBuffer, i64 32
  %12 = bitcast i8* %11 to double*
  %13 = load double* %12, align 8
  %14 = getelementptr i8* %pBuffer, i64 64
  %15 = bitcast i8* %14 to %struct.PaddedDimId**
  %16 = load %struct.PaddedDimId** %15, align 8
  %17 = getelementptr i8* %pBuffer, i64 72
  %18 = bitcast i8* %17 to %struct.PaddedDimId**
  %19 = load %struct.PaddedDimId** %18, align 8
  %20 = getelementptr i8* %pBuffer, i64 88
  %21 = bitcast i8* %20 to i64*
  %22 = load i64* %21, align 8
  br label %SyncBB.i

SyncBB.i:                                         ; preds = %thenBB.i, %entry
  %CurrWI..0.i = phi i64 [ %"CurrWI++.i", %thenBB.i ], [ 0, %entry ]
  %23 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %24 = load i64* %23, align 8
  %25 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %26 = load i64* %25, align 8
  %27 = add i64 %24, %26
  %28 = getelementptr inbounds double addrspace(1)* %1, i64 %27
  %29 = load double addrspace(1)* %28, align 8
  %30 = fmul double %29, %13
  %31 = call double @_Z3logd(double %30) nounwind
  %32 = fmul double %30, 8.314510e+07
  %33 = fdiv double 1.000000e+00, %32
  %34 = fmul double %33, 1.013250e+06
  %35 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %36 = load i64* %35, align 8
  %37 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %38 = load i64* %37, align 8
  %39 = add i64 %36, %38
  %40 = add i64 %39, 110592
  %41 = getelementptr inbounds double addrspace(1)* %10, i64 %40
  %42 = load double addrspace(1)* %41, align 8
  %43 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %44 = load i64* %43, align 8
  %45 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %46 = load i64* %45, align 8
  %47 = add i64 %44, %46
  %48 = add i64 %47, 331776
  %49 = getelementptr inbounds double addrspace(1)* %10, i64 %48
  %50 = load double addrspace(1)* %49, align 8
  %51 = fmul double %42, %50
  %52 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %53 = load i64* %52, align 8
  %54 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %55 = load i64* %54, align 8
  %56 = add i64 %53, %55
  %57 = add i64 %56, 221184
  %58 = getelementptr inbounds double addrspace(1)* %10, i64 %57
  %59 = load double addrspace(1)* %58, align 8
  %60 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %61 = load i64* %60, align 8
  %62 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %63 = load i64* %62, align 8
  %64 = add i64 %61, %63
  %65 = add i64 %64, 442368
  %66 = getelementptr inbounds double addrspace(1)* %10, i64 %65
  %67 = load double addrspace(1)* %66, align 8
  %68 = fmul double %59, %67
  %69 = fdiv double 1.000000e+00, %68
  %70 = fmul double %51, %69
  %71 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %72 = load i64* %71, align 8
  %73 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %74 = load i64* %73, align 8
  %75 = add i64 %72, %74
  %76 = getelementptr inbounds double addrspace(1)* %4, i64 %75
  %77 = load double addrspace(1)* %76, align 8
  %78 = call double @_Z4fmindd(double %70, double 1.000000e+300) nounwind
  %79 = fmul double %77, %78
  %80 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %81 = load i64* %80, align 8
  %82 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %83 = load i64* %82, align 8
  %84 = add i64 %81, %83
  %85 = getelementptr inbounds double addrspace(1)* %7, i64 %84
  store double %79, double addrspace(1)* %85, align 8
  %86 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %87 = load i64* %86, align 8
  %88 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %89 = load i64* %88, align 8
  %90 = add i64 %87, %89
  %91 = getelementptr inbounds double addrspace(1)* %10, i64 %90
  %92 = load double addrspace(1)* %91, align 8
  %93 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %94 = load i64* %93, align 8
  %95 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %96 = load i64* %95, align 8
  %97 = add i64 %94, %96
  %98 = add i64 %97, 221184
  %99 = getelementptr inbounds double addrspace(1)* %10, i64 %98
  %100 = load double addrspace(1)* %99, align 8
  %101 = fmul double %92, %100
  %102 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %103 = load i64* %102, align 8
  %104 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %105 = load i64* %104, align 8
  %106 = add i64 %103, %105
  %107 = add i64 %106, 110592
  %108 = getelementptr inbounds double addrspace(1)* %10, i64 %107
  %109 = load double addrspace(1)* %108, align 8
  %110 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %111 = load i64* %110, align 8
  %112 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %113 = load i64* %112, align 8
  %114 = add i64 %111, %113
  %115 = add i64 %114, 442368
  %116 = getelementptr inbounds double addrspace(1)* %10, i64 %115
  %117 = load double addrspace(1)* %116, align 8
  %118 = fmul double %109, %117
  %119 = fdiv double 1.000000e+00, %118
  %120 = fmul double %101, %119
  %121 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %122 = load i64* %121, align 8
  %123 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %124 = load i64* %123, align 8
  %125 = add i64 %122, %124
  %126 = add i64 %125, 110592
  %127 = getelementptr inbounds double addrspace(1)* %4, i64 %126
  %128 = load double addrspace(1)* %127, align 8
  %129 = call double @_Z4fmindd(double %120, double 1.000000e+300) nounwind
  %130 = fmul double %128, %129
  %131 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %132 = load i64* %131, align 8
  %133 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %134 = load i64* %133, align 8
  %135 = add i64 %132, %134
  %136 = add i64 %135, 110592
  %137 = getelementptr inbounds double addrspace(1)* %7, i64 %136
  store double %130, double addrspace(1)* %137, align 8
  %138 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %139 = load i64* %138, align 8
  %140 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %141 = load i64* %140, align 8
  %142 = add i64 %139, %141
  %143 = getelementptr inbounds double addrspace(1)* %10, i64 %142
  %144 = load double addrspace(1)* %143, align 8
  %145 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %146 = load i64* %145, align 8
  %147 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %148 = load i64* %147, align 8
  %149 = add i64 %146, %148
  %150 = add i64 %149, 442368
  %151 = getelementptr inbounds double addrspace(1)* %10, i64 %150
  %152 = load double addrspace(1)* %151, align 8
  %153 = fmul double %144, %152
  %154 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %155 = load i64* %154, align 8
  %156 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %157 = load i64* %156, align 8
  %158 = add i64 %155, %157
  %159 = add i64 %158, 110592
  %160 = getelementptr inbounds double addrspace(1)* %10, i64 %159
  %161 = load double addrspace(1)* %160, align 8
  %162 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %163 = load i64* %162, align 8
  %164 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %165 = load i64* %164, align 8
  %166 = add i64 %163, %165
  %167 = add i64 %166, 552960
  %168 = getelementptr inbounds double addrspace(1)* %10, i64 %167
  %169 = load double addrspace(1)* %168, align 8
  %170 = fmul double %161, %169
  %171 = fdiv double 1.000000e+00, %170
  %172 = fmul double %153, %171
  %173 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %174 = load i64* %173, align 8
  %175 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %176 = load i64* %175, align 8
  %177 = add i64 %174, %176
  %178 = add i64 %177, 221184
  %179 = getelementptr inbounds double addrspace(1)* %4, i64 %178
  %180 = load double addrspace(1)* %179, align 8
  %181 = call double @_Z4fmindd(double %172, double 1.000000e+300) nounwind
  %182 = fmul double %180, %181
  %183 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %184 = load i64* %183, align 8
  %185 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %186 = load i64* %185, align 8
  %187 = add i64 %184, %186
  %188 = add i64 %187, 221184
  %189 = getelementptr inbounds double addrspace(1)* %7, i64 %188
  store double %182, double addrspace(1)* %189, align 8
  %190 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %191 = load i64* %190, align 8
  %192 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %193 = load i64* %192, align 8
  %194 = add i64 %191, %193
  %195 = add i64 %194, 442368
  %196 = getelementptr inbounds double addrspace(1)* %10, i64 %195
  %197 = load double addrspace(1)* %196, align 8
  %198 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %199 = load i64* %198, align 8
  %200 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %201 = load i64* %200, align 8
  %202 = add i64 %199, %201
  %203 = add i64 %202, 442368
  %204 = getelementptr inbounds double addrspace(1)* %10, i64 %203
  %205 = load double addrspace(1)* %204, align 8
  %206 = fmul double %197, %205
  %207 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %208 = load i64* %207, align 8
  %209 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %210 = load i64* %209, align 8
  %211 = add i64 %208, %210
  %212 = add i64 %211, 221184
  %213 = getelementptr inbounds double addrspace(1)* %10, i64 %212
  %214 = load double addrspace(1)* %213, align 8
  %215 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %216 = load i64* %215, align 8
  %217 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %218 = load i64* %217, align 8
  %219 = add i64 %216, %218
  %220 = add i64 %219, 552960
  %221 = getelementptr inbounds double addrspace(1)* %10, i64 %220
  %222 = load double addrspace(1)* %221, align 8
  %223 = fmul double %214, %222
  %224 = fdiv double 1.000000e+00, %223
  %225 = fmul double %206, %224
  %226 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %227 = load i64* %226, align 8
  %228 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %229 = load i64* %228, align 8
  %230 = add i64 %227, %229
  %231 = add i64 %230, 331776
  %232 = getelementptr inbounds double addrspace(1)* %4, i64 %231
  %233 = load double addrspace(1)* %232, align 8
  %234 = call double @_Z4fmindd(double %225, double 1.000000e+300) nounwind
  %235 = fmul double %233, %234
  %236 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %237 = load i64* %236, align 8
  %238 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %239 = load i64* %238, align 8
  %240 = add i64 %237, %239
  %241 = add i64 %240, 331776
  %242 = getelementptr inbounds double addrspace(1)* %7, i64 %241
  store double %235, double addrspace(1)* %242, align 8
  %243 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %244 = load i64* %243, align 8
  %245 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %246 = load i64* %245, align 8
  %247 = add i64 %244, %246
  %248 = add i64 %247, 110592
  %249 = getelementptr inbounds double addrspace(1)* %10, i64 %248
  %250 = load double addrspace(1)* %249, align 8
  %251 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %252 = load i64* %251, align 8
  %253 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %254 = load i64* %253, align 8
  %255 = add i64 %252, %254
  %256 = add i64 %255, 110592
  %257 = getelementptr inbounds double addrspace(1)* %10, i64 %256
  %258 = load double addrspace(1)* %257, align 8
  %259 = fmul double %250, %258
  %260 = fmul double %259, %34
  %261 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %262 = load i64* %261, align 8
  %263 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %264 = load i64* %263, align 8
  %265 = add i64 %262, %264
  %266 = getelementptr inbounds double addrspace(1)* %10, i64 %265
  %267 = load double addrspace(1)* %266, align 8
  %268 = fdiv double 1.000000e+00, %267
  %269 = fmul double %260, %268
  %270 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %271 = load i64* %270, align 8
  %272 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %273 = load i64* %272, align 8
  %274 = add i64 %271, %273
  %275 = add i64 %274, 442368
  %276 = getelementptr inbounds double addrspace(1)* %4, i64 %275
  %277 = load double addrspace(1)* %276, align 8
  %278 = call double @_Z4fmindd(double %269, double 1.000000e+300) nounwind
  %279 = fmul double %277, %278
  %280 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %281 = load i64* %280, align 8
  %282 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %283 = load i64* %282, align 8
  %284 = add i64 %281, %283
  %285 = add i64 %284, 442368
  %286 = getelementptr inbounds double addrspace(1)* %7, i64 %285
  store double %279, double addrspace(1)* %286, align 8
  %287 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %288 = load i64* %287, align 8
  %289 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %290 = load i64* %289, align 8
  %291 = add i64 %288, %290
  %292 = add i64 %291, 110592
  %293 = getelementptr inbounds double addrspace(1)* %10, i64 %292
  %294 = load double addrspace(1)* %293, align 8
  %295 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %296 = load i64* %295, align 8
  %297 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %298 = load i64* %297, align 8
  %299 = add i64 %296, %298
  %300 = add i64 %299, 110592
  %301 = getelementptr inbounds double addrspace(1)* %10, i64 %300
  %302 = load double addrspace(1)* %301, align 8
  %303 = fmul double %294, %302
  %304 = fmul double %303, %34
  %305 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %306 = load i64* %305, align 8
  %307 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %308 = load i64* %307, align 8
  %309 = add i64 %306, %308
  %310 = getelementptr inbounds double addrspace(1)* %10, i64 %309
  %311 = load double addrspace(1)* %310, align 8
  %312 = fdiv double 1.000000e+00, %311
  %313 = fmul double %304, %312
  %314 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %315 = load i64* %314, align 8
  %316 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %317 = load i64* %316, align 8
  %318 = add i64 %315, %317
  %319 = add i64 %318, 552960
  %320 = getelementptr inbounds double addrspace(1)* %4, i64 %319
  %321 = load double addrspace(1)* %320, align 8
  %322 = call double @_Z4fmindd(double %313, double 1.000000e+300) nounwind
  %323 = fmul double %321, %322
  %324 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %325 = load i64* %324, align 8
  %326 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %327 = load i64* %326, align 8
  %328 = add i64 %325, %327
  %329 = add i64 %328, 552960
  %330 = getelementptr inbounds double addrspace(1)* %7, i64 %329
  store double %323, double addrspace(1)* %330, align 8
  %331 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %332 = load i64* %331, align 8
  %333 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %334 = load i64* %333, align 8
  %335 = add i64 %332, %334
  %336 = add i64 %335, 110592
  %337 = getelementptr inbounds double addrspace(1)* %10, i64 %336
  %338 = load double addrspace(1)* %337, align 8
  %339 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %340 = load i64* %339, align 8
  %341 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %342 = load i64* %341, align 8
  %343 = add i64 %340, %342
  %344 = add i64 %343, 110592
  %345 = getelementptr inbounds double addrspace(1)* %10, i64 %344
  %346 = load double addrspace(1)* %345, align 8
  %347 = fmul double %338, %346
  %348 = fmul double %347, %34
  %349 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %350 = load i64* %349, align 8
  %351 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %352 = load i64* %351, align 8
  %353 = add i64 %350, %352
  %354 = getelementptr inbounds double addrspace(1)* %10, i64 %353
  %355 = load double addrspace(1)* %354, align 8
  %356 = fdiv double 1.000000e+00, %355
  %357 = fmul double %348, %356
  %358 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %359 = load i64* %358, align 8
  %360 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %361 = load i64* %360, align 8
  %362 = add i64 %359, %361
  %363 = add i64 %362, 663552
  %364 = getelementptr inbounds double addrspace(1)* %4, i64 %363
  %365 = load double addrspace(1)* %364, align 8
  %366 = call double @_Z4fmindd(double %357, double 1.000000e+300) nounwind
  %367 = fmul double %365, %366
  %368 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %369 = load i64* %368, align 8
  %370 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %371 = load i64* %370, align 8
  %372 = add i64 %369, %371
  %373 = add i64 %372, 663552
  %374 = getelementptr inbounds double addrspace(1)* %7, i64 %373
  store double %367, double addrspace(1)* %374, align 8
  %375 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %376 = load i64* %375, align 8
  %377 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %378 = load i64* %377, align 8
  %379 = add i64 %376, %378
  %380 = add i64 %379, 110592
  %381 = getelementptr inbounds double addrspace(1)* %10, i64 %380
  %382 = load double addrspace(1)* %381, align 8
  %383 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %384 = load i64* %383, align 8
  %385 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %386 = load i64* %385, align 8
  %387 = add i64 %384, %386
  %388 = add i64 %387, 110592
  %389 = getelementptr inbounds double addrspace(1)* %10, i64 %388
  %390 = load double addrspace(1)* %389, align 8
  %391 = fmul double %382, %390
  %392 = fmul double %391, %34
  %393 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %394 = load i64* %393, align 8
  %395 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %396 = load i64* %395, align 8
  %397 = add i64 %394, %396
  %398 = getelementptr inbounds double addrspace(1)* %10, i64 %397
  %399 = load double addrspace(1)* %398, align 8
  %400 = fdiv double 1.000000e+00, %399
  %401 = fmul double %392, %400
  %402 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %403 = load i64* %402, align 8
  %404 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %405 = load i64* %404, align 8
  %406 = add i64 %403, %405
  %407 = add i64 %406, 774144
  %408 = getelementptr inbounds double addrspace(1)* %4, i64 %407
  %409 = load double addrspace(1)* %408, align 8
  %410 = call double @_Z4fmindd(double %401, double 1.000000e+300) nounwind
  %411 = fmul double %409, %410
  %412 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %413 = load i64* %412, align 8
  %414 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %415 = load i64* %414, align 8
  %416 = add i64 %413, %415
  %417 = add i64 %416, 774144
  %418 = getelementptr inbounds double addrspace(1)* %7, i64 %417
  store double %411, double addrspace(1)* %418, align 8
  %419 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %420 = load i64* %419, align 8
  %421 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %422 = load i64* %421, align 8
  %423 = add i64 %420, %422
  %424 = add i64 %423, 110592
  %425 = getelementptr inbounds double addrspace(1)* %10, i64 %424
  %426 = load double addrspace(1)* %425, align 8
  %427 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %428 = load i64* %427, align 8
  %429 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %430 = load i64* %429, align 8
  %431 = add i64 %428, %430
  %432 = add i64 %431, 442368
  %433 = getelementptr inbounds double addrspace(1)* %10, i64 %432
  %434 = load double addrspace(1)* %433, align 8
  %435 = fmul double %426, %434
  %436 = fmul double %435, %34
  %437 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %438 = load i64* %437, align 8
  %439 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %440 = load i64* %439, align 8
  %441 = add i64 %438, %440
  %442 = add i64 %441, 552960
  %443 = getelementptr inbounds double addrspace(1)* %10, i64 %442
  %444 = load double addrspace(1)* %443, align 8
  %445 = fdiv double 1.000000e+00, %444
  %446 = fmul double %436, %445
  %447 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %448 = load i64* %447, align 8
  %449 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %450 = load i64* %449, align 8
  %451 = add i64 %448, %450
  %452 = add i64 %451, 884736
  %453 = getelementptr inbounds double addrspace(1)* %4, i64 %452
  %454 = load double addrspace(1)* %453, align 8
  %455 = call double @_Z4fmindd(double %446, double 1.000000e+300) nounwind
  %456 = fmul double %454, %455
  %457 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %458 = load i64* %457, align 8
  %459 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %460 = load i64* %459, align 8
  %461 = add i64 %458, %460
  %462 = add i64 %461, 884736
  %463 = getelementptr inbounds double addrspace(1)* %7, i64 %462
  store double %456, double addrspace(1)* %463, align 8
  %464 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %465 = load i64* %464, align 8
  %466 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %467 = load i64* %466, align 8
  %468 = add i64 %465, %467
  %469 = add i64 %468, 110592
  %470 = getelementptr inbounds double addrspace(1)* %10, i64 %469
  %471 = load double addrspace(1)* %470, align 8
  %472 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %473 = load i64* %472, align 8
  %474 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %475 = load i64* %474, align 8
  %476 = add i64 %473, %475
  %477 = add i64 %476, 221184
  %478 = getelementptr inbounds double addrspace(1)* %10, i64 %477
  %479 = load double addrspace(1)* %478, align 8
  %480 = fmul double %471, %479
  %481 = fmul double %480, %34
  %482 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %483 = load i64* %482, align 8
  %484 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %485 = load i64* %484, align 8
  %486 = add i64 %483, %485
  %487 = add i64 %486, 442368
  %488 = getelementptr inbounds double addrspace(1)* %10, i64 %487
  %489 = load double addrspace(1)* %488, align 8
  %490 = fdiv double 1.000000e+00, %489
  %491 = fmul double %481, %490
  %492 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %493 = load i64* %492, align 8
  %494 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %495 = load i64* %494, align 8
  %496 = add i64 %493, %495
  %497 = add i64 %496, 995328
  %498 = getelementptr inbounds double addrspace(1)* %4, i64 %497
  %499 = load double addrspace(1)* %498, align 8
  %500 = call double @_Z4fmindd(double %491, double 1.000000e+300) nounwind
  %501 = fmul double %499, %500
  %502 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %503 = load i64* %502, align 8
  %504 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %505 = load i64* %504, align 8
  %506 = add i64 %503, %505
  %507 = add i64 %506, 995328
  %508 = getelementptr inbounds double addrspace(1)* %7, i64 %507
  store double %501, double addrspace(1)* %508, align 8
  %509 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %510 = load i64* %509, align 8
  %511 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %512 = load i64* %511, align 8
  %513 = add i64 %510, %512
  %514 = add i64 %513, 221184
  %515 = getelementptr inbounds double addrspace(1)* %10, i64 %514
  %516 = load double addrspace(1)* %515, align 8
  %517 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %518 = load i64* %517, align 8
  %519 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %520 = load i64* %519, align 8
  %521 = add i64 %518, %520
  %522 = add i64 %521, 221184
  %523 = getelementptr inbounds double addrspace(1)* %10, i64 %522
  %524 = load double addrspace(1)* %523, align 8
  %525 = fmul double %516, %524
  %526 = fmul double %525, %34
  %527 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %528 = load i64* %527, align 8
  %529 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %530 = load i64* %529, align 8
  %531 = add i64 %528, %530
  %532 = add i64 %531, 331776
  %533 = getelementptr inbounds double addrspace(1)* %10, i64 %532
  %534 = load double addrspace(1)* %533, align 8
  %535 = fdiv double 1.000000e+00, %534
  %536 = fmul double %526, %535
  %537 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %538 = load i64* %537, align 8
  %539 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %540 = load i64* %539, align 8
  %541 = add i64 %538, %540
  %542 = add i64 %541, 1105920
  %543 = getelementptr inbounds double addrspace(1)* %4, i64 %542
  %544 = load double addrspace(1)* %543, align 8
  %545 = call double @_Z4fmindd(double %536, double 1.000000e+300) nounwind
  %546 = fmul double %544, %545
  %547 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %548 = load i64* %547, align 8
  %549 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %550 = load i64* %549, align 8
  %551 = add i64 %548, %550
  %552 = add i64 %551, 1105920
  %553 = getelementptr inbounds double addrspace(1)* %7, i64 %552
  store double %546, double addrspace(1)* %553, align 8
  %554 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %555 = load i64* %554, align 8
  %556 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %557 = load i64* %556, align 8
  %558 = add i64 %555, %557
  %559 = add i64 %558, 110592
  %560 = getelementptr inbounds double addrspace(1)* %10, i64 %559
  %561 = load double addrspace(1)* %560, align 8
  %562 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %563 = load i64* %562, align 8
  %564 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %565 = load i64* %564, align 8
  %566 = add i64 %563, %565
  %567 = add i64 %566, 331776
  %568 = getelementptr inbounds double addrspace(1)* %10, i64 %567
  %569 = load double addrspace(1)* %568, align 8
  %570 = fmul double %561, %569
  %571 = fmul double %570, %34
  %572 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %573 = load i64* %572, align 8
  %574 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %575 = load i64* %574, align 8
  %576 = add i64 %573, %575
  %577 = add i64 %576, 663552
  %578 = getelementptr inbounds double addrspace(1)* %10, i64 %577
  %579 = load double addrspace(1)* %578, align 8
  %580 = fdiv double 1.000000e+00, %579
  %581 = fmul double %571, %580
  %582 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %583 = load i64* %582, align 8
  %584 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %585 = load i64* %584, align 8
  %586 = add i64 %583, %585
  %587 = add i64 %586, 1216512
  %588 = getelementptr inbounds double addrspace(1)* %4, i64 %587
  %589 = load double addrspace(1)* %588, align 8
  %590 = call double @_Z4fmindd(double %581, double 1.000000e+300) nounwind
  %591 = fmul double %589, %590
  %592 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %593 = load i64* %592, align 8
  %594 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %595 = load i64* %594, align 8
  %596 = add i64 %593, %595
  %597 = add i64 %596, 1216512
  %598 = getelementptr inbounds double addrspace(1)* %7, i64 %597
  store double %591, double addrspace(1)* %598, align 8
  %599 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %600 = load i64* %599, align 8
  %601 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %602 = load i64* %601, align 8
  %603 = add i64 %600, %602
  %604 = add i64 %603, 110592
  %605 = getelementptr inbounds double addrspace(1)* %10, i64 %604
  %606 = load double addrspace(1)* %605, align 8
  %607 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %608 = load i64* %607, align 8
  %609 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %610 = load i64* %609, align 8
  %611 = add i64 %608, %610
  %612 = add i64 %611, 331776
  %613 = getelementptr inbounds double addrspace(1)* %10, i64 %612
  %614 = load double addrspace(1)* %613, align 8
  %615 = fmul double %606, %614
  %616 = fmul double %615, %34
  %617 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %618 = load i64* %617, align 8
  %619 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %620 = load i64* %619, align 8
  %621 = add i64 %618, %620
  %622 = add i64 %621, 663552
  %623 = getelementptr inbounds double addrspace(1)* %10, i64 %622
  %624 = load double addrspace(1)* %623, align 8
  %625 = fdiv double 1.000000e+00, %624
  %626 = fmul double %616, %625
  %627 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %628 = load i64* %627, align 8
  %629 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %630 = load i64* %629, align 8
  %631 = add i64 %628, %630
  %632 = add i64 %631, 1327104
  %633 = getelementptr inbounds double addrspace(1)* %4, i64 %632
  %634 = load double addrspace(1)* %633, align 8
  %635 = call double @_Z4fmindd(double %626, double 1.000000e+300) nounwind
  %636 = fmul double %634, %635
  %637 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %638 = load i64* %637, align 8
  %639 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %640 = load i64* %639, align 8
  %641 = add i64 %638, %640
  %642 = add i64 %641, 1327104
  %643 = getelementptr inbounds double addrspace(1)* %7, i64 %642
  store double %636, double addrspace(1)* %643, align 8
  %644 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %645 = load i64* %644, align 8
  %646 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %647 = load i64* %646, align 8
  %648 = add i64 %645, %647
  %649 = add i64 %648, 110592
  %650 = getelementptr inbounds double addrspace(1)* %10, i64 %649
  %651 = load double addrspace(1)* %650, align 8
  %652 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %653 = load i64* %652, align 8
  %654 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %655 = load i64* %654, align 8
  %656 = add i64 %653, %655
  %657 = add i64 %656, 331776
  %658 = getelementptr inbounds double addrspace(1)* %10, i64 %657
  %659 = load double addrspace(1)* %658, align 8
  %660 = fmul double %651, %659
  %661 = fmul double %660, %34
  %662 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %663 = load i64* %662, align 8
  %664 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %665 = load i64* %664, align 8
  %666 = add i64 %663, %665
  %667 = add i64 %666, 663552
  %668 = getelementptr inbounds double addrspace(1)* %10, i64 %667
  %669 = load double addrspace(1)* %668, align 8
  %670 = fdiv double 1.000000e+00, %669
  %671 = fmul double %661, %670
  %672 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %673 = load i64* %672, align 8
  %674 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %675 = load i64* %674, align 8
  %676 = add i64 %673, %675
  %677 = add i64 %676, 1437696
  %678 = getelementptr inbounds double addrspace(1)* %4, i64 %677
  %679 = load double addrspace(1)* %678, align 8
  %680 = call double @_Z4fmindd(double %671, double 1.000000e+300) nounwind
  %681 = fmul double %679, %680
  %682 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %683 = load i64* %682, align 8
  %684 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %685 = load i64* %684, align 8
  %686 = add i64 %683, %685
  %687 = add i64 %686, 1437696
  %688 = getelementptr inbounds double addrspace(1)* %7, i64 %687
  store double %681, double addrspace(1)* %688, align 8
  %689 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %690 = load i64* %689, align 8
  %691 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %692 = load i64* %691, align 8
  %693 = add i64 %690, %692
  %694 = add i64 %693, 110592
  %695 = getelementptr inbounds double addrspace(1)* %10, i64 %694
  %696 = load double addrspace(1)* %695, align 8
  %697 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %698 = load i64* %697, align 8
  %699 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %700 = load i64* %699, align 8
  %701 = add i64 %698, %700
  %702 = add i64 %701, 331776
  %703 = getelementptr inbounds double addrspace(1)* %10, i64 %702
  %704 = load double addrspace(1)* %703, align 8
  %705 = fmul double %696, %704
  %706 = fmul double %705, %34
  %707 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %708 = load i64* %707, align 8
  %709 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %710 = load i64* %709, align 8
  %711 = add i64 %708, %710
  %712 = add i64 %711, 663552
  %713 = getelementptr inbounds double addrspace(1)* %10, i64 %712
  %714 = load double addrspace(1)* %713, align 8
  %715 = fdiv double 1.000000e+00, %714
  %716 = fmul double %706, %715
  %717 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %718 = load i64* %717, align 8
  %719 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %720 = load i64* %719, align 8
  %721 = add i64 %718, %720
  %722 = add i64 %721, 1548288
  %723 = getelementptr inbounds double addrspace(1)* %4, i64 %722
  %724 = load double addrspace(1)* %723, align 8
  %725 = call double @_Z4fmindd(double %716, double 1.000000e+300) nounwind
  %726 = fmul double %724, %725
  %727 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %728 = load i64* %727, align 8
  %729 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %730 = load i64* %729, align 8
  %731 = add i64 %728, %730
  %732 = add i64 %731, 1548288
  %733 = getelementptr inbounds double addrspace(1)* %7, i64 %732
  store double %726, double addrspace(1)* %733, align 8
  %734 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %735 = load i64* %734, align 8
  %736 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %737 = load i64* %736, align 8
  %738 = add i64 %735, %737
  %739 = add i64 %738, 442368
  %740 = getelementptr inbounds double addrspace(1)* %10, i64 %739
  %741 = load double addrspace(1)* %740, align 8
  %742 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %743 = load i64* %742, align 8
  %744 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %745 = load i64* %744, align 8
  %746 = add i64 %743, %745
  %747 = add i64 %746, 442368
  %748 = getelementptr inbounds double addrspace(1)* %10, i64 %747
  %749 = load double addrspace(1)* %748, align 8
  %750 = fmul double %741, %749
  %751 = fmul double %750, %34
  %752 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %753 = load i64* %752, align 8
  %754 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %755 = load i64* %754, align 8
  %756 = add i64 %753, %755
  %757 = add i64 %756, 774144
  %758 = getelementptr inbounds double addrspace(1)* %10, i64 %757
  %759 = load double addrspace(1)* %758, align 8
  %760 = fdiv double 1.000000e+00, %759
  %761 = fmul double %751, %760
  %762 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %763 = load i64* %762, align 8
  %764 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %765 = load i64* %764, align 8
  %766 = add i64 %763, %765
  %767 = add i64 %766, 1658880
  %768 = getelementptr inbounds double addrspace(1)* %4, i64 %767
  %769 = load double addrspace(1)* %768, align 8
  %770 = call double @_Z4fmindd(double %761, double 1.000000e+300) nounwind
  %771 = fmul double %769, %770
  %772 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %773 = load i64* %772, align 8
  %774 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %775 = load i64* %774, align 8
  %776 = add i64 %773, %775
  %777 = add i64 %776, 1658880
  %778 = getelementptr inbounds double addrspace(1)* %7, i64 %777
  store double %771, double addrspace(1)* %778, align 8
  %779 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %780 = load i64* %779, align 8
  %781 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %782 = load i64* %781, align 8
  %783 = add i64 %780, %782
  %784 = add i64 %783, 110592
  %785 = getelementptr inbounds double addrspace(1)* %10, i64 %784
  %786 = load double addrspace(1)* %785, align 8
  %787 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %788 = load i64* %787, align 8
  %789 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %790 = load i64* %789, align 8
  %791 = add i64 %788, %790
  %792 = add i64 %791, 663552
  %793 = getelementptr inbounds double addrspace(1)* %10, i64 %792
  %794 = load double addrspace(1)* %793, align 8
  %795 = fmul double %786, %794
  %796 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %797 = load i64* %796, align 8
  %798 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %799 = load i64* %798, align 8
  %800 = add i64 %797, %799
  %801 = add i64 %800, 221184
  %802 = getelementptr inbounds double addrspace(1)* %10, i64 %801
  %803 = load double addrspace(1)* %802, align 8
  %804 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %805 = load i64* %804, align 8
  %806 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %807 = load i64* %806, align 8
  %808 = add i64 %805, %807
  %809 = add i64 %808, 552960
  %810 = getelementptr inbounds double addrspace(1)* %10, i64 %809
  %811 = load double addrspace(1)* %810, align 8
  %812 = fmul double %803, %811
  %813 = fdiv double 1.000000e+00, %812
  %814 = fmul double %795, %813
  %815 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %816 = load i64* %815, align 8
  %817 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %818 = load i64* %817, align 8
  %819 = add i64 %816, %818
  %820 = add i64 %819, 1769472
  %821 = getelementptr inbounds double addrspace(1)* %4, i64 %820
  %822 = load double addrspace(1)* %821, align 8
  %823 = call double @_Z4fmindd(double %814, double 1.000000e+300) nounwind
  %824 = fmul double %822, %823
  %825 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %826 = load i64* %825, align 8
  %827 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %828 = load i64* %827, align 8
  %829 = add i64 %826, %828
  %830 = add i64 %829, 1769472
  %831 = getelementptr inbounds double addrspace(1)* %7, i64 %830
  store double %824, double addrspace(1)* %831, align 8
  %832 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %833 = load i64* %832, align 8
  %834 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %835 = load i64* %834, align 8
  %836 = add i64 %833, %835
  %837 = add i64 %836, 110592
  %838 = getelementptr inbounds double addrspace(1)* %10, i64 %837
  %839 = load double addrspace(1)* %838, align 8
  %840 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %841 = load i64* %840, align 8
  %842 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %843 = load i64* %842, align 8
  %844 = add i64 %841, %843
  %845 = add i64 %844, 663552
  %846 = getelementptr inbounds double addrspace(1)* %10, i64 %845
  %847 = load double addrspace(1)* %846, align 8
  %848 = fmul double %839, %847
  %849 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %850 = load i64* %849, align 8
  %851 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %852 = load i64* %851, align 8
  %853 = add i64 %850, %852
  %854 = getelementptr inbounds double addrspace(1)* %10, i64 %853
  %855 = load double addrspace(1)* %854, align 8
  %856 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %857 = load i64* %856, align 8
  %858 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %859 = load i64* %858, align 8
  %860 = add i64 %857, %859
  %861 = add i64 %860, 331776
  %862 = getelementptr inbounds double addrspace(1)* %10, i64 %861
  %863 = load double addrspace(1)* %862, align 8
  %864 = fmul double %855, %863
  %865 = fdiv double 1.000000e+00, %864
  %866 = fmul double %848, %865
  %867 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %868 = load i64* %867, align 8
  %869 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %870 = load i64* %869, align 8
  %871 = add i64 %868, %870
  %872 = add i64 %871, 1880064
  %873 = getelementptr inbounds double addrspace(1)* %4, i64 %872
  %874 = load double addrspace(1)* %873, align 8
  %875 = call double @_Z4fmindd(double %866, double 1.000000e+300) nounwind
  %876 = fmul double %874, %875
  %877 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %878 = load i64* %877, align 8
  %879 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %880 = load i64* %879, align 8
  %881 = add i64 %878, %880
  %882 = add i64 %881, 1880064
  %883 = getelementptr inbounds double addrspace(1)* %7, i64 %882
  store double %876, double addrspace(1)* %883, align 8
  %884 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %885 = load i64* %884, align 8
  %886 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %887 = load i64* %886, align 8
  %888 = add i64 %885, %887
  %889 = add i64 %888, 110592
  %890 = getelementptr inbounds double addrspace(1)* %10, i64 %889
  %891 = load double addrspace(1)* %890, align 8
  %892 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %893 = load i64* %892, align 8
  %894 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %895 = load i64* %894, align 8
  %896 = add i64 %893, %895
  %897 = add i64 %896, 663552
  %898 = getelementptr inbounds double addrspace(1)* %10, i64 %897
  %899 = load double addrspace(1)* %898, align 8
  %900 = fmul double %891, %899
  %901 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %902 = load i64* %901, align 8
  %903 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %904 = load i64* %903, align 8
  %905 = add i64 %902, %904
  %906 = add i64 %905, 442368
  %907 = getelementptr inbounds double addrspace(1)* %10, i64 %906
  %908 = load double addrspace(1)* %907, align 8
  %909 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %910 = load i64* %909, align 8
  %911 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %912 = load i64* %911, align 8
  %913 = add i64 %910, %912
  %914 = add i64 %913, 442368
  %915 = getelementptr inbounds double addrspace(1)* %10, i64 %914
  %916 = load double addrspace(1)* %915, align 8
  %917 = fmul double %908, %916
  %918 = fdiv double 1.000000e+00, %917
  %919 = fmul double %900, %918
  %920 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %921 = load i64* %920, align 8
  %922 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %923 = load i64* %922, align 8
  %924 = add i64 %921, %923
  %925 = add i64 %924, 1990656
  %926 = getelementptr inbounds double addrspace(1)* %4, i64 %925
  %927 = load double addrspace(1)* %926, align 8
  %928 = call double @_Z4fmindd(double %919, double 1.000000e+300) nounwind
  %929 = fmul double %927, %928
  %930 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %931 = load i64* %930, align 8
  %932 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %933 = load i64* %932, align 8
  %934 = add i64 %931, %933
  %935 = add i64 %934, 1990656
  %936 = getelementptr inbounds double addrspace(1)* %7, i64 %935
  store double %929, double addrspace(1)* %936, align 8
  %937 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %938 = load i64* %937, align 8
  %939 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %940 = load i64* %939, align 8
  %941 = add i64 %938, %940
  %942 = add i64 %941, 221184
  %943 = getelementptr inbounds double addrspace(1)* %10, i64 %942
  %944 = load double addrspace(1)* %943, align 8
  %945 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %946 = load i64* %945, align 8
  %947 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %948 = load i64* %947, align 8
  %949 = add i64 %946, %948
  %950 = add i64 %949, 663552
  %951 = getelementptr inbounds double addrspace(1)* %10, i64 %950
  %952 = load double addrspace(1)* %951, align 8
  %953 = fmul double %944, %952
  %954 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %955 = load i64* %954, align 8
  %956 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %957 = load i64* %956, align 8
  %958 = add i64 %955, %957
  %959 = add i64 %958, 331776
  %960 = getelementptr inbounds double addrspace(1)* %10, i64 %959
  %961 = load double addrspace(1)* %960, align 8
  %962 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %963 = load i64* %962, align 8
  %964 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %965 = load i64* %964, align 8
  %966 = add i64 %963, %965
  %967 = add i64 %966, 442368
  %968 = getelementptr inbounds double addrspace(1)* %10, i64 %967
  %969 = load double addrspace(1)* %968, align 8
  %970 = fmul double %961, %969
  %971 = fdiv double 1.000000e+00, %970
  %972 = fmul double %953, %971
  %973 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %974 = load i64* %973, align 8
  %975 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %976 = load i64* %975, align 8
  %977 = add i64 %974, %976
  %978 = add i64 %977, 2101248
  %979 = getelementptr inbounds double addrspace(1)* %4, i64 %978
  %980 = load double addrspace(1)* %979, align 8
  %981 = call double @_Z4fmindd(double %972, double 1.000000e+300) nounwind
  %982 = fmul double %980, %981
  %983 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %984 = load i64* %983, align 8
  %985 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %986 = load i64* %985, align 8
  %987 = add i64 %984, %986
  %988 = add i64 %987, 2101248
  %989 = getelementptr inbounds double addrspace(1)* %7, i64 %988
  store double %982, double addrspace(1)* %989, align 8
  %990 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %991 = load i64* %990, align 8
  %992 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %993 = load i64* %992, align 8
  %994 = add i64 %991, %993
  %995 = add i64 %994, 442368
  %996 = getelementptr inbounds double addrspace(1)* %10, i64 %995
  %997 = load double addrspace(1)* %996, align 8
  %998 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %999 = load i64* %998, align 8
  %1000 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1001 = load i64* %1000, align 8
  %1002 = add i64 %999, %1001
  %1003 = add i64 %1002, 663552
  %1004 = getelementptr inbounds double addrspace(1)* %10, i64 %1003
  %1005 = load double addrspace(1)* %1004, align 8
  %1006 = fmul double %997, %1005
  %1007 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1008 = load i64* %1007, align 8
  %1009 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1010 = load i64* %1009, align 8
  %1011 = add i64 %1008, %1010
  %1012 = add i64 %1011, 331776
  %1013 = getelementptr inbounds double addrspace(1)* %10, i64 %1012
  %1014 = load double addrspace(1)* %1013, align 8
  %1015 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1016 = load i64* %1015, align 8
  %1017 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1018 = load i64* %1017, align 8
  %1019 = add i64 %1016, %1018
  %1020 = add i64 %1019, 552960
  %1021 = getelementptr inbounds double addrspace(1)* %10, i64 %1020
  %1022 = load double addrspace(1)* %1021, align 8
  %1023 = fmul double %1014, %1022
  %1024 = fdiv double 1.000000e+00, %1023
  %1025 = fmul double %1006, %1024
  %1026 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1027 = load i64* %1026, align 8
  %1028 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1029 = load i64* %1028, align 8
  %1030 = add i64 %1027, %1029
  %1031 = add i64 %1030, 2211840
  %1032 = getelementptr inbounds double addrspace(1)* %4, i64 %1031
  %1033 = load double addrspace(1)* %1032, align 8
  %1034 = call double @_Z4fmindd(double %1025, double 1.000000e+300) nounwind
  %1035 = fmul double %1033, %1034
  %1036 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1037 = load i64* %1036, align 8
  %1038 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1039 = load i64* %1038, align 8
  %1040 = add i64 %1037, %1039
  %1041 = add i64 %1040, 2211840
  %1042 = getelementptr inbounds double addrspace(1)* %7, i64 %1041
  store double %1035, double addrspace(1)* %1042, align 8
  %1043 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1044 = load i64* %1043, align 8
  %1045 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1046 = load i64* %1045, align 8
  %1047 = add i64 %1044, %1046
  %1048 = add i64 %1047, 663552
  %1049 = getelementptr inbounds double addrspace(1)* %10, i64 %1048
  %1050 = load double addrspace(1)* %1049, align 8
  %1051 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1052 = load i64* %1051, align 8
  %1053 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1054 = load i64* %1053, align 8
  %1055 = add i64 %1052, %1054
  %1056 = add i64 %1055, 663552
  %1057 = getelementptr inbounds double addrspace(1)* %10, i64 %1056
  %1058 = load double addrspace(1)* %1057, align 8
  %1059 = fmul double %1050, %1058
  %1060 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1061 = load i64* %1060, align 8
  %1062 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1063 = load i64* %1062, align 8
  %1064 = add i64 %1061, %1063
  %1065 = add i64 %1064, 331776
  %1066 = getelementptr inbounds double addrspace(1)* %10, i64 %1065
  %1067 = load double addrspace(1)* %1066, align 8
  %1068 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1069 = load i64* %1068, align 8
  %1070 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1071 = load i64* %1070, align 8
  %1072 = add i64 %1069, %1071
  %1073 = add i64 %1072, 774144
  %1074 = getelementptr inbounds double addrspace(1)* %10, i64 %1073
  %1075 = load double addrspace(1)* %1074, align 8
  %1076 = fmul double %1067, %1075
  %1077 = fdiv double 1.000000e+00, %1076
  %1078 = fmul double %1059, %1077
  %1079 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1080 = load i64* %1079, align 8
  %1081 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1082 = load i64* %1081, align 8
  %1083 = add i64 %1080, %1082
  %1084 = add i64 %1083, 2322432
  %1085 = getelementptr inbounds double addrspace(1)* %4, i64 %1084
  %1086 = load double addrspace(1)* %1085, align 8
  %1087 = call double @_Z4fmindd(double %1078, double 1.000000e+300) nounwind
  %1088 = fmul double %1086, %1087
  %1089 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1090 = load i64* %1089, align 8
  %1091 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1092 = load i64* %1091, align 8
  %1093 = add i64 %1090, %1092
  %1094 = add i64 %1093, 2322432
  %1095 = getelementptr inbounds double addrspace(1)* %7, i64 %1094
  store double %1088, double addrspace(1)* %1095, align 8
  %1096 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1097 = load i64* %1096, align 8
  %1098 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1099 = load i64* %1098, align 8
  %1100 = add i64 %1097, %1099
  %1101 = add i64 %1100, 663552
  %1102 = getelementptr inbounds double addrspace(1)* %10, i64 %1101
  %1103 = load double addrspace(1)* %1102, align 8
  %1104 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1105 = load i64* %1104, align 8
  %1106 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1107 = load i64* %1106, align 8
  %1108 = add i64 %1105, %1107
  %1109 = add i64 %1108, 663552
  %1110 = getelementptr inbounds double addrspace(1)* %10, i64 %1109
  %1111 = load double addrspace(1)* %1110, align 8
  %1112 = fmul double %1103, %1111
  %1113 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1114 = load i64* %1113, align 8
  %1115 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1116 = load i64* %1115, align 8
  %1117 = add i64 %1114, %1116
  %1118 = add i64 %1117, 331776
  %1119 = getelementptr inbounds double addrspace(1)* %10, i64 %1118
  %1120 = load double addrspace(1)* %1119, align 8
  %1121 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1122 = load i64* %1121, align 8
  %1123 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1124 = load i64* %1123, align 8
  %1125 = add i64 %1122, %1124
  %1126 = add i64 %1125, 774144
  %1127 = getelementptr inbounds double addrspace(1)* %10, i64 %1126
  %1128 = load double addrspace(1)* %1127, align 8
  %1129 = fmul double %1120, %1128
  %1130 = fdiv double 1.000000e+00, %1129
  %1131 = fmul double %1112, %1130
  %1132 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1133 = load i64* %1132, align 8
  %1134 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1135 = load i64* %1134, align 8
  %1136 = add i64 %1133, %1135
  %1137 = add i64 %1136, 2433024
  %1138 = getelementptr inbounds double addrspace(1)* %4, i64 %1137
  %1139 = load double addrspace(1)* %1138, align 8
  %1140 = call double @_Z4fmindd(double %1131, double 1.000000e+300) nounwind
  %1141 = fmul double %1139, %1140
  %1142 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1143 = load i64* %1142, align 8
  %1144 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1145 = load i64* %1144, align 8
  %1146 = add i64 %1143, %1145
  %1147 = add i64 %1146, 2433024
  %1148 = getelementptr inbounds double addrspace(1)* %7, i64 %1147
  store double %1141, double addrspace(1)* %1148, align 8
  %1149 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1150 = load i64* %1149, align 8
  %1151 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1152 = load i64* %1151, align 8
  %1153 = add i64 %1150, %1152
  %1154 = add i64 %1153, 110592
  %1155 = getelementptr inbounds double addrspace(1)* %10, i64 %1154
  %1156 = load double addrspace(1)* %1155, align 8
  %1157 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1158 = load i64* %1157, align 8
  %1159 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1160 = load i64* %1159, align 8
  %1161 = add i64 %1158, %1160
  %1162 = add i64 %1161, 774144
  %1163 = getelementptr inbounds double addrspace(1)* %10, i64 %1162
  %1164 = load double addrspace(1)* %1163, align 8
  %1165 = fmul double %1156, %1164
  %1166 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1167 = load i64* %1166, align 8
  %1168 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1169 = load i64* %1168, align 8
  %1170 = add i64 %1167, %1169
  %1171 = getelementptr inbounds double addrspace(1)* %10, i64 %1170
  %1172 = load double addrspace(1)* %1171, align 8
  %1173 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1174 = load i64* %1173, align 8
  %1175 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1176 = load i64* %1175, align 8
  %1177 = add i64 %1174, %1176
  %1178 = add i64 %1177, 663552
  %1179 = getelementptr inbounds double addrspace(1)* %10, i64 %1178
  %1180 = load double addrspace(1)* %1179, align 8
  %1181 = fmul double %1172, %1180
  %1182 = fdiv double 1.000000e+00, %1181
  %1183 = fmul double %1165, %1182
  %1184 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1185 = load i64* %1184, align 8
  %1186 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1187 = load i64* %1186, align 8
  %1188 = add i64 %1185, %1187
  %1189 = add i64 %1188, 2543616
  %1190 = getelementptr inbounds double addrspace(1)* %4, i64 %1189
  %1191 = load double addrspace(1)* %1190, align 8
  %1192 = call double @_Z4fmindd(double %1183, double 1.000000e+300) nounwind
  %1193 = fmul double %1191, %1192
  %1194 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1195 = load i64* %1194, align 8
  %1196 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1197 = load i64* %1196, align 8
  %1198 = add i64 %1195, %1197
  %1199 = add i64 %1198, 2543616
  %1200 = getelementptr inbounds double addrspace(1)* %7, i64 %1199
  store double %1193, double addrspace(1)* %1200, align 8
  %1201 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1202 = load i64* %1201, align 8
  %1203 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1204 = load i64* %1203, align 8
  %1205 = add i64 %1202, %1204
  %1206 = add i64 %1205, 110592
  %1207 = getelementptr inbounds double addrspace(1)* %10, i64 %1206
  %1208 = load double addrspace(1)* %1207, align 8
  %1209 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1210 = load i64* %1209, align 8
  %1211 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1212 = load i64* %1211, align 8
  %1213 = add i64 %1210, %1212
  %1214 = add i64 %1213, 774144
  %1215 = getelementptr inbounds double addrspace(1)* %10, i64 %1214
  %1216 = load double addrspace(1)* %1215, align 8
  %1217 = fmul double %1208, %1216
  %1218 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1219 = load i64* %1218, align 8
  %1220 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1221 = load i64* %1220, align 8
  %1222 = add i64 %1219, %1221
  %1223 = add i64 %1222, 442368
  %1224 = getelementptr inbounds double addrspace(1)* %10, i64 %1223
  %1225 = load double addrspace(1)* %1224, align 8
  %1226 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1227 = load i64* %1226, align 8
  %1228 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1229 = load i64* %1228, align 8
  %1230 = add i64 %1227, %1229
  %1231 = add i64 %1230, 552960
  %1232 = getelementptr inbounds double addrspace(1)* %10, i64 %1231
  %1233 = load double addrspace(1)* %1232, align 8
  %1234 = fmul double %1225, %1233
  %1235 = fdiv double 1.000000e+00, %1234
  %1236 = fmul double %1217, %1235
  %1237 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1238 = load i64* %1237, align 8
  %1239 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1240 = load i64* %1239, align 8
  %1241 = add i64 %1238, %1240
  %1242 = add i64 %1241, 2654208
  %1243 = getelementptr inbounds double addrspace(1)* %4, i64 %1242
  %1244 = load double addrspace(1)* %1243, align 8
  %1245 = call double @_Z4fmindd(double %1236, double 1.000000e+300) nounwind
  %1246 = fmul double %1244, %1245
  %1247 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1248 = load i64* %1247, align 8
  %1249 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1250 = load i64* %1249, align 8
  %1251 = add i64 %1248, %1250
  %1252 = add i64 %1251, 2654208
  %1253 = getelementptr inbounds double addrspace(1)* %7, i64 %1252
  store double %1246, double addrspace(1)* %1253, align 8
  %check.WI.iter.i = icmp ult i64 %CurrWI..0.i, %22
  br i1 %check.WI.iter.i, label %thenBB.i, label %__ratt2_kernel_separated_args.exit

thenBB.i:                                         ; preds = %SyncBB.i
  %"CurrWI++.i" = add nuw i64 %CurrWI..0.i, 1
  br label %SyncBB.i

__ratt2_kernel_separated_args.exit:               ; preds = %SyncBB.i
  ret void
}

define void @__Vectorized_.ratt2_kernel(i8* %pBuffer) {
entry:
  %0 = bitcast i8* %pBuffer to double addrspace(1)**
  %1 = load double addrspace(1)** %0, align 8
  %2 = getelementptr i8* %pBuffer, i64 8
  %3 = bitcast i8* %2 to double addrspace(1)**
  %4 = load double addrspace(1)** %3, align 8
  %5 = getelementptr i8* %pBuffer, i64 16
  %6 = bitcast i8* %5 to double addrspace(1)**
  %7 = load double addrspace(1)** %6, align 8
  %8 = getelementptr i8* %pBuffer, i64 24
  %9 = bitcast i8* %8 to double addrspace(1)**
  %10 = load double addrspace(1)** %9, align 8
  %11 = getelementptr i8* %pBuffer, i64 32
  %12 = bitcast i8* %11 to double*
  %13 = load double* %12, align 8
  %14 = getelementptr i8* %pBuffer, i64 64
  %15 = bitcast i8* %14 to %struct.PaddedDimId**
  %16 = load %struct.PaddedDimId** %15, align 8
  %17 = getelementptr i8* %pBuffer, i64 72
  %18 = bitcast i8* %17 to %struct.PaddedDimId**
  %19 = load %struct.PaddedDimId** %18, align 8
  %20 = getelementptr i8* %pBuffer, i64 88
  %21 = bitcast i8* %20 to i64*
  %22 = load i64* %21, align 8
  %temp.i = insertelement <16 x double> undef, double %13, i32 0
  %vector.i = shufflevector <16 x double> %temp.i, <16 x double> undef, <16 x i32> zeroinitializer
  br label %SyncBB3453.i

SyncBB3453.i:                                     ; preds = %thenBB.i, %entry
  %CurrWI..0.i = phi i64 [ 0, %entry ], [ %"CurrWI++.i", %thenBB.i ]
  %23 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %24 = load i64* %23, align 8
  %25 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %26 = load i64* %25, align 8
  %27 = add i64 %24, %26
  %28 = getelementptr inbounds double addrspace(1)* %1, i64 %27
  %ptrTypeCast.i = bitcast double addrspace(1)* %28 to <16 x double> addrspace(1)*
  %29 = load <16 x double> addrspace(1)* %ptrTypeCast.i, align 8
  %30 = fmul <16 x double> %29, %vector.i
  %extract16.i = extractelement <16 x double> %30, i32 0
  %extract17.i = extractelement <16 x double> %30, i32 1
  %extract18.i = extractelement <16 x double> %30, i32 2
  %extract19.i = extractelement <16 x double> %30, i32 3
  %extract20.i = extractelement <16 x double> %30, i32 4
  %extract21.i = extractelement <16 x double> %30, i32 5
  %extract22.i = extractelement <16 x double> %30, i32 6
  %extract23.i = extractelement <16 x double> %30, i32 7
  %extract24.i = extractelement <16 x double> %30, i32 8
  %extract25.i = extractelement <16 x double> %30, i32 9
  %extract26.i = extractelement <16 x double> %30, i32 10
  %extract27.i = extractelement <16 x double> %30, i32 11
  %extract28.i = extractelement <16 x double> %30, i32 12
  %extract29.i = extractelement <16 x double> %30, i32 13
  %extract30.i = extractelement <16 x double> %30, i32 14
  %extract31.i = extractelement <16 x double> %30, i32 15
  %31 = call double @_Z3logd(double %extract16.i) nounwind
  %32 = call double @_Z3logd(double %extract17.i) nounwind
  %33 = call double @_Z3logd(double %extract18.i) nounwind
  %34 = call double @_Z3logd(double %extract19.i) nounwind
  %35 = call double @_Z3logd(double %extract20.i) nounwind
  %36 = call double @_Z3logd(double %extract21.i) nounwind
  %37 = call double @_Z3logd(double %extract22.i) nounwind
  %38 = call double @_Z3logd(double %extract23.i) nounwind
  %39 = call double @_Z3logd(double %extract24.i) nounwind
  %40 = call double @_Z3logd(double %extract25.i) nounwind
  %41 = call double @_Z3logd(double %extract26.i) nounwind
  %42 = call double @_Z3logd(double %extract27.i) nounwind
  %43 = call double @_Z3logd(double %extract28.i) nounwind
  %44 = call double @_Z3logd(double %extract29.i) nounwind
  %45 = call double @_Z3logd(double %extract30.i) nounwind
  %46 = call double @_Z3logd(double %extract31.i) nounwind
  %47 = fmul <16 x double> %30, <double 8.314510e+07, double 8.314510e+07, double 8.314510e+07, double 8.314510e+07, double 8.314510e+07, double 8.314510e+07, double 8.314510e+07, double 8.314510e+07, double 8.314510e+07, double 8.314510e+07, double 8.314510e+07, double 8.314510e+07, double 8.314510e+07, double 8.314510e+07, double 8.314510e+07, double 8.314510e+07>
  %48 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %47
  %49 = fmul <16 x double> %48, <double 1.013250e+06, double 1.013250e+06, double 1.013250e+06, double 1.013250e+06, double 1.013250e+06, double 1.013250e+06, double 1.013250e+06, double 1.013250e+06, double 1.013250e+06, double 1.013250e+06, double 1.013250e+06, double 1.013250e+06, double 1.013250e+06, double 1.013250e+06, double 1.013250e+06, double 1.013250e+06>
  %50 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %51 = load i64* %50, align 8
  %52 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %53 = load i64* %52, align 8
  %54 = add i64 %51, %53
  %extract34.i = add i64 %54, 110592
  %55 = getelementptr inbounds double addrspace(1)* %10, i64 %extract34.i
  %ptrTypeCast50.i = bitcast double addrspace(1)* %55 to <16 x double> addrspace(1)*
  %56 = load <16 x double> addrspace(1)* %ptrTypeCast50.i, align 8
  %57 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %58 = load i64* %57, align 8
  %59 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %60 = load i64* %59, align 8
  %61 = add i64 %58, %60
  %extract53.i = add i64 %61, 331776
  %62 = getelementptr inbounds double addrspace(1)* %10, i64 %extract53.i
  %ptrTypeCast69.i = bitcast double addrspace(1)* %62 to <16 x double> addrspace(1)*
  %63 = load <16 x double> addrspace(1)* %ptrTypeCast69.i, align 8
  %64 = fmul <16 x double> %56, %63
  %65 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %66 = load i64* %65, align 8
  %67 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %68 = load i64* %67, align 8
  %69 = add i64 %66, %68
  %extract72.i = add i64 %69, 221184
  %70 = getelementptr inbounds double addrspace(1)* %10, i64 %extract72.i
  %ptrTypeCast88.i = bitcast double addrspace(1)* %70 to <16 x double> addrspace(1)*
  %71 = load <16 x double> addrspace(1)* %ptrTypeCast88.i, align 8
  %72 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %73 = load i64* %72, align 8
  %74 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %75 = load i64* %74, align 8
  %76 = add i64 %73, %75
  %extract91.i = add i64 %76, 442368
  %77 = getelementptr inbounds double addrspace(1)* %10, i64 %extract91.i
  %ptrTypeCast107.i = bitcast double addrspace(1)* %77 to <16 x double> addrspace(1)*
  %78 = load <16 x double> addrspace(1)* %ptrTypeCast107.i, align 8
  %79 = fmul <16 x double> %71, %78
  %80 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %79
  %81 = fmul <16 x double> %64, %80
  %extract127.i = extractelement <16 x double> %81, i32 0
  %extract128.i = extractelement <16 x double> %81, i32 1
  %extract129.i = extractelement <16 x double> %81, i32 2
  %extract130.i = extractelement <16 x double> %81, i32 3
  %extract131.i = extractelement <16 x double> %81, i32 4
  %extract132.i = extractelement <16 x double> %81, i32 5
  %extract133.i = extractelement <16 x double> %81, i32 6
  %extract134.i = extractelement <16 x double> %81, i32 7
  %extract135.i = extractelement <16 x double> %81, i32 8
  %extract136.i = extractelement <16 x double> %81, i32 9
  %extract137.i = extractelement <16 x double> %81, i32 10
  %extract138.i = extractelement <16 x double> %81, i32 11
  %extract139.i = extractelement <16 x double> %81, i32 12
  %extract140.i = extractelement <16 x double> %81, i32 13
  %extract141.i = extractelement <16 x double> %81, i32 14
  %extract142.i = extractelement <16 x double> %81, i32 15
  %82 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %83 = load i64* %82, align 8
  %84 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %85 = load i64* %84, align 8
  %86 = add i64 %83, %85
  %87 = getelementptr inbounds double addrspace(1)* %4, i64 %86
  %ptrTypeCast126.i = bitcast double addrspace(1)* %87 to <16 x double> addrspace(1)*
  %88 = load <16 x double> addrspace(1)* %ptrTypeCast126.i, align 8
  %89 = call double @_Z4fmindd(double %extract127.i, double 1.000000e+300) nounwind
  %90 = call double @_Z4fmindd(double %extract128.i, double 1.000000e+300) nounwind
  %91 = call double @_Z4fmindd(double %extract129.i, double 1.000000e+300) nounwind
  %92 = call double @_Z4fmindd(double %extract130.i, double 1.000000e+300) nounwind
  %93 = call double @_Z4fmindd(double %extract131.i, double 1.000000e+300) nounwind
  %94 = call double @_Z4fmindd(double %extract132.i, double 1.000000e+300) nounwind
  %95 = call double @_Z4fmindd(double %extract133.i, double 1.000000e+300) nounwind
  %96 = call double @_Z4fmindd(double %extract134.i, double 1.000000e+300) nounwind
  %97 = call double @_Z4fmindd(double %extract135.i, double 1.000000e+300) nounwind
  %98 = call double @_Z4fmindd(double %extract136.i, double 1.000000e+300) nounwind
  %99 = call double @_Z4fmindd(double %extract137.i, double 1.000000e+300) nounwind
  %100 = call double @_Z4fmindd(double %extract138.i, double 1.000000e+300) nounwind
  %101 = call double @_Z4fmindd(double %extract139.i, double 1.000000e+300) nounwind
  %102 = call double @_Z4fmindd(double %extract140.i, double 1.000000e+300) nounwind
  %103 = call double @_Z4fmindd(double %extract141.i, double 1.000000e+300) nounwind
  %104 = call double @_Z4fmindd(double %extract142.i, double 1.000000e+300) nounwind
  %temp.vect.i = insertelement <16 x double> undef, double %89, i32 0
  %temp.vect143.i = insertelement <16 x double> %temp.vect.i, double %90, i32 1
  %temp.vect144.i = insertelement <16 x double> %temp.vect143.i, double %91, i32 2
  %temp.vect145.i = insertelement <16 x double> %temp.vect144.i, double %92, i32 3
  %temp.vect146.i = insertelement <16 x double> %temp.vect145.i, double %93, i32 4
  %temp.vect147.i = insertelement <16 x double> %temp.vect146.i, double %94, i32 5
  %temp.vect148.i = insertelement <16 x double> %temp.vect147.i, double %95, i32 6
  %temp.vect149.i = insertelement <16 x double> %temp.vect148.i, double %96, i32 7
  %temp.vect150.i = insertelement <16 x double> %temp.vect149.i, double %97, i32 8
  %temp.vect151.i = insertelement <16 x double> %temp.vect150.i, double %98, i32 9
  %temp.vect152.i = insertelement <16 x double> %temp.vect151.i, double %99, i32 10
  %temp.vect153.i = insertelement <16 x double> %temp.vect152.i, double %100, i32 11
  %temp.vect154.i = insertelement <16 x double> %temp.vect153.i, double %101, i32 12
  %temp.vect155.i = insertelement <16 x double> %temp.vect154.i, double %102, i32 13
  %temp.vect156.i = insertelement <16 x double> %temp.vect155.i, double %103, i32 14
  %temp.vect157.i = insertelement <16 x double> %temp.vect156.i, double %104, i32 15
  %105 = fmul <16 x double> %88, %temp.vect157.i
  %106 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %107 = load i64* %106, align 8
  %108 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %109 = load i64* %108, align 8
  %110 = add i64 %107, %109
  %111 = getelementptr inbounds double addrspace(1)* %7, i64 %110
  %ptrTypeCast176.i = bitcast double addrspace(1)* %111 to <16 x double> addrspace(1)*
  store <16 x double> %105, <16 x double> addrspace(1)* %ptrTypeCast176.i, align 8
  %112 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %113 = load i64* %112, align 8
  %114 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %115 = load i64* %114, align 8
  %116 = add i64 %113, %115
  %117 = getelementptr inbounds double addrspace(1)* %10, i64 %116
  %ptrTypeCast195.i = bitcast double addrspace(1)* %117 to <16 x double> addrspace(1)*
  %118 = load <16 x double> addrspace(1)* %ptrTypeCast195.i, align 8
  %119 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %120 = load i64* %119, align 8
  %121 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %122 = load i64* %121, align 8
  %123 = add i64 %120, %122
  %extract198.i = add i64 %123, 221184
  %124 = getelementptr inbounds double addrspace(1)* %10, i64 %extract198.i
  %ptrTypeCast214.i = bitcast double addrspace(1)* %124 to <16 x double> addrspace(1)*
  %125 = load <16 x double> addrspace(1)* %ptrTypeCast214.i, align 8
  %126 = fmul <16 x double> %118, %125
  %127 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %128 = load i64* %127, align 8
  %129 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %130 = load i64* %129, align 8
  %131 = add i64 %128, %130
  %extract217.i = add i64 %131, 110592
  %132 = getelementptr inbounds double addrspace(1)* %10, i64 %extract217.i
  %ptrTypeCast233.i = bitcast double addrspace(1)* %132 to <16 x double> addrspace(1)*
  %133 = load <16 x double> addrspace(1)* %ptrTypeCast233.i, align 8
  %134 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %135 = load i64* %134, align 8
  %136 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %137 = load i64* %136, align 8
  %138 = add i64 %135, %137
  %extract236.i = add i64 %138, 442368
  %139 = getelementptr inbounds double addrspace(1)* %10, i64 %extract236.i
  %ptrTypeCast252.i = bitcast double addrspace(1)* %139 to <16 x double> addrspace(1)*
  %140 = load <16 x double> addrspace(1)* %ptrTypeCast252.i, align 8
  %141 = fmul <16 x double> %133, %140
  %142 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %141
  %143 = fmul <16 x double> %126, %142
  %extract272.i = extractelement <16 x double> %143, i32 0
  %extract273.i = extractelement <16 x double> %143, i32 1
  %extract274.i = extractelement <16 x double> %143, i32 2
  %extract275.i = extractelement <16 x double> %143, i32 3
  %extract276.i = extractelement <16 x double> %143, i32 4
  %extract277.i = extractelement <16 x double> %143, i32 5
  %extract278.i = extractelement <16 x double> %143, i32 6
  %extract279.i = extractelement <16 x double> %143, i32 7
  %extract280.i = extractelement <16 x double> %143, i32 8
  %extract281.i = extractelement <16 x double> %143, i32 9
  %extract282.i = extractelement <16 x double> %143, i32 10
  %extract283.i = extractelement <16 x double> %143, i32 11
  %extract284.i = extractelement <16 x double> %143, i32 12
  %extract285.i = extractelement <16 x double> %143, i32 13
  %extract286.i = extractelement <16 x double> %143, i32 14
  %extract287.i = extractelement <16 x double> %143, i32 15
  %144 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %145 = load i64* %144, align 8
  %146 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %147 = load i64* %146, align 8
  %148 = add i64 %145, %147
  %extract255.i = add i64 %148, 110592
  %149 = getelementptr inbounds double addrspace(1)* %4, i64 %extract255.i
  %ptrTypeCast271.i = bitcast double addrspace(1)* %149 to <16 x double> addrspace(1)*
  %150 = load <16 x double> addrspace(1)* %ptrTypeCast271.i, align 8
  %151 = call double @_Z4fmindd(double %extract272.i, double 1.000000e+300) nounwind
  %152 = call double @_Z4fmindd(double %extract273.i, double 1.000000e+300) nounwind
  %153 = call double @_Z4fmindd(double %extract274.i, double 1.000000e+300) nounwind
  %154 = call double @_Z4fmindd(double %extract275.i, double 1.000000e+300) nounwind
  %155 = call double @_Z4fmindd(double %extract276.i, double 1.000000e+300) nounwind
  %156 = call double @_Z4fmindd(double %extract277.i, double 1.000000e+300) nounwind
  %157 = call double @_Z4fmindd(double %extract278.i, double 1.000000e+300) nounwind
  %158 = call double @_Z4fmindd(double %extract279.i, double 1.000000e+300) nounwind
  %159 = call double @_Z4fmindd(double %extract280.i, double 1.000000e+300) nounwind
  %160 = call double @_Z4fmindd(double %extract281.i, double 1.000000e+300) nounwind
  %161 = call double @_Z4fmindd(double %extract282.i, double 1.000000e+300) nounwind
  %162 = call double @_Z4fmindd(double %extract283.i, double 1.000000e+300) nounwind
  %163 = call double @_Z4fmindd(double %extract284.i, double 1.000000e+300) nounwind
  %164 = call double @_Z4fmindd(double %extract285.i, double 1.000000e+300) nounwind
  %165 = call double @_Z4fmindd(double %extract286.i, double 1.000000e+300) nounwind
  %166 = call double @_Z4fmindd(double %extract287.i, double 1.000000e+300) nounwind
  %temp.vect288.i = insertelement <16 x double> undef, double %151, i32 0
  %temp.vect289.i = insertelement <16 x double> %temp.vect288.i, double %152, i32 1
  %temp.vect290.i = insertelement <16 x double> %temp.vect289.i, double %153, i32 2
  %temp.vect291.i = insertelement <16 x double> %temp.vect290.i, double %154, i32 3
  %temp.vect292.i = insertelement <16 x double> %temp.vect291.i, double %155, i32 4
  %temp.vect293.i = insertelement <16 x double> %temp.vect292.i, double %156, i32 5
  %temp.vect294.i = insertelement <16 x double> %temp.vect293.i, double %157, i32 6
  %temp.vect295.i = insertelement <16 x double> %temp.vect294.i, double %158, i32 7
  %temp.vect296.i = insertelement <16 x double> %temp.vect295.i, double %159, i32 8
  %temp.vect297.i = insertelement <16 x double> %temp.vect296.i, double %160, i32 9
  %temp.vect298.i = insertelement <16 x double> %temp.vect297.i, double %161, i32 10
  %temp.vect299.i = insertelement <16 x double> %temp.vect298.i, double %162, i32 11
  %temp.vect300.i = insertelement <16 x double> %temp.vect299.i, double %163, i32 12
  %temp.vect301.i = insertelement <16 x double> %temp.vect300.i, double %164, i32 13
  %temp.vect302.i = insertelement <16 x double> %temp.vect301.i, double %165, i32 14
  %temp.vect303.i = insertelement <16 x double> %temp.vect302.i, double %166, i32 15
  %167 = fmul <16 x double> %150, %temp.vect303.i
  %168 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %169 = load i64* %168, align 8
  %170 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %171 = load i64* %170, align 8
  %172 = add i64 %169, %171
  %extract306.i = add i64 %172, 110592
  %173 = getelementptr inbounds double addrspace(1)* %7, i64 %extract306.i
  %ptrTypeCast322.i = bitcast double addrspace(1)* %173 to <16 x double> addrspace(1)*
  store <16 x double> %167, <16 x double> addrspace(1)* %ptrTypeCast322.i, align 8
  %174 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %175 = load i64* %174, align 8
  %176 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %177 = load i64* %176, align 8
  %178 = add i64 %175, %177
  %179 = getelementptr inbounds double addrspace(1)* %10, i64 %178
  %ptrTypeCast341.i = bitcast double addrspace(1)* %179 to <16 x double> addrspace(1)*
  %180 = load <16 x double> addrspace(1)* %ptrTypeCast341.i, align 8
  %181 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %182 = load i64* %181, align 8
  %183 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %184 = load i64* %183, align 8
  %185 = add i64 %182, %184
  %extract344.i = add i64 %185, 442368
  %186 = getelementptr inbounds double addrspace(1)* %10, i64 %extract344.i
  %ptrTypeCast360.i = bitcast double addrspace(1)* %186 to <16 x double> addrspace(1)*
  %187 = load <16 x double> addrspace(1)* %ptrTypeCast360.i, align 8
  %188 = fmul <16 x double> %180, %187
  %189 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %190 = load i64* %189, align 8
  %191 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %192 = load i64* %191, align 8
  %193 = add i64 %190, %192
  %extract363.i = add i64 %193, 110592
  %194 = getelementptr inbounds double addrspace(1)* %10, i64 %extract363.i
  %ptrTypeCast379.i = bitcast double addrspace(1)* %194 to <16 x double> addrspace(1)*
  %195 = load <16 x double> addrspace(1)* %ptrTypeCast379.i, align 8
  %196 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %197 = load i64* %196, align 8
  %198 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %199 = load i64* %198, align 8
  %200 = add i64 %197, %199
  %extract382.i = add i64 %200, 552960
  %201 = getelementptr inbounds double addrspace(1)* %10, i64 %extract382.i
  %ptrTypeCast398.i = bitcast double addrspace(1)* %201 to <16 x double> addrspace(1)*
  %202 = load <16 x double> addrspace(1)* %ptrTypeCast398.i, align 8
  %203 = fmul <16 x double> %195, %202
  %204 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %203
  %205 = fmul <16 x double> %188, %204
  %extract418.i = extractelement <16 x double> %205, i32 0
  %extract419.i = extractelement <16 x double> %205, i32 1
  %extract420.i = extractelement <16 x double> %205, i32 2
  %extract421.i = extractelement <16 x double> %205, i32 3
  %extract422.i = extractelement <16 x double> %205, i32 4
  %extract423.i = extractelement <16 x double> %205, i32 5
  %extract424.i = extractelement <16 x double> %205, i32 6
  %extract425.i = extractelement <16 x double> %205, i32 7
  %extract426.i = extractelement <16 x double> %205, i32 8
  %extract427.i = extractelement <16 x double> %205, i32 9
  %extract428.i = extractelement <16 x double> %205, i32 10
  %extract429.i = extractelement <16 x double> %205, i32 11
  %extract430.i = extractelement <16 x double> %205, i32 12
  %extract431.i = extractelement <16 x double> %205, i32 13
  %extract432.i = extractelement <16 x double> %205, i32 14
  %extract433.i = extractelement <16 x double> %205, i32 15
  %206 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %207 = load i64* %206, align 8
  %208 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %209 = load i64* %208, align 8
  %210 = add i64 %207, %209
  %extract401.i = add i64 %210, 221184
  %211 = getelementptr inbounds double addrspace(1)* %4, i64 %extract401.i
  %ptrTypeCast417.i = bitcast double addrspace(1)* %211 to <16 x double> addrspace(1)*
  %212 = load <16 x double> addrspace(1)* %ptrTypeCast417.i, align 8
  %213 = call double @_Z4fmindd(double %extract418.i, double 1.000000e+300) nounwind
  %214 = call double @_Z4fmindd(double %extract419.i, double 1.000000e+300) nounwind
  %215 = call double @_Z4fmindd(double %extract420.i, double 1.000000e+300) nounwind
  %216 = call double @_Z4fmindd(double %extract421.i, double 1.000000e+300) nounwind
  %217 = call double @_Z4fmindd(double %extract422.i, double 1.000000e+300) nounwind
  %218 = call double @_Z4fmindd(double %extract423.i, double 1.000000e+300) nounwind
  %219 = call double @_Z4fmindd(double %extract424.i, double 1.000000e+300) nounwind
  %220 = call double @_Z4fmindd(double %extract425.i, double 1.000000e+300) nounwind
  %221 = call double @_Z4fmindd(double %extract426.i, double 1.000000e+300) nounwind
  %222 = call double @_Z4fmindd(double %extract427.i, double 1.000000e+300) nounwind
  %223 = call double @_Z4fmindd(double %extract428.i, double 1.000000e+300) nounwind
  %224 = call double @_Z4fmindd(double %extract429.i, double 1.000000e+300) nounwind
  %225 = call double @_Z4fmindd(double %extract430.i, double 1.000000e+300) nounwind
  %226 = call double @_Z4fmindd(double %extract431.i, double 1.000000e+300) nounwind
  %227 = call double @_Z4fmindd(double %extract432.i, double 1.000000e+300) nounwind
  %228 = call double @_Z4fmindd(double %extract433.i, double 1.000000e+300) nounwind
  %temp.vect434.i = insertelement <16 x double> undef, double %213, i32 0
  %temp.vect435.i = insertelement <16 x double> %temp.vect434.i, double %214, i32 1
  %temp.vect436.i = insertelement <16 x double> %temp.vect435.i, double %215, i32 2
  %temp.vect437.i = insertelement <16 x double> %temp.vect436.i, double %216, i32 3
  %temp.vect438.i = insertelement <16 x double> %temp.vect437.i, double %217, i32 4
  %temp.vect439.i = insertelement <16 x double> %temp.vect438.i, double %218, i32 5
  %temp.vect440.i = insertelement <16 x double> %temp.vect439.i, double %219, i32 6
  %temp.vect441.i = insertelement <16 x double> %temp.vect440.i, double %220, i32 7
  %temp.vect442.i = insertelement <16 x double> %temp.vect441.i, double %221, i32 8
  %temp.vect443.i = insertelement <16 x double> %temp.vect442.i, double %222, i32 9
  %temp.vect444.i = insertelement <16 x double> %temp.vect443.i, double %223, i32 10
  %temp.vect445.i = insertelement <16 x double> %temp.vect444.i, double %224, i32 11
  %temp.vect446.i = insertelement <16 x double> %temp.vect445.i, double %225, i32 12
  %temp.vect447.i = insertelement <16 x double> %temp.vect446.i, double %226, i32 13
  %temp.vect448.i = insertelement <16 x double> %temp.vect447.i, double %227, i32 14
  %temp.vect449.i = insertelement <16 x double> %temp.vect448.i, double %228, i32 15
  %229 = fmul <16 x double> %212, %temp.vect449.i
  %230 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %231 = load i64* %230, align 8
  %232 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %233 = load i64* %232, align 8
  %234 = add i64 %231, %233
  %extract452.i = add i64 %234, 221184
  %235 = getelementptr inbounds double addrspace(1)* %7, i64 %extract452.i
  %ptrTypeCast468.i = bitcast double addrspace(1)* %235 to <16 x double> addrspace(1)*
  store <16 x double> %229, <16 x double> addrspace(1)* %ptrTypeCast468.i, align 8
  %236 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %237 = load i64* %236, align 8
  %238 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %239 = load i64* %238, align 8
  %240 = add i64 %237, %239
  %extract471.i = add i64 %240, 442368
  %241 = getelementptr inbounds double addrspace(1)* %10, i64 %extract471.i
  %ptrTypeCast487.i = bitcast double addrspace(1)* %241 to <16 x double> addrspace(1)*
  %242 = load <16 x double> addrspace(1)* %ptrTypeCast487.i, align 8
  %243 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %244 = load i64* %243, align 8
  %245 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %246 = load i64* %245, align 8
  %247 = add i64 %244, %246
  %extract490.i = add i64 %247, 442368
  %248 = getelementptr inbounds double addrspace(1)* %10, i64 %extract490.i
  %ptrTypeCast506.i = bitcast double addrspace(1)* %248 to <16 x double> addrspace(1)*
  %249 = load <16 x double> addrspace(1)* %ptrTypeCast506.i, align 8
  %250 = fmul <16 x double> %242, %249
  %251 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %252 = load i64* %251, align 8
  %253 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %254 = load i64* %253, align 8
  %255 = add i64 %252, %254
  %extract509.i = add i64 %255, 221184
  %256 = getelementptr inbounds double addrspace(1)* %10, i64 %extract509.i
  %ptrTypeCast525.i = bitcast double addrspace(1)* %256 to <16 x double> addrspace(1)*
  %257 = load <16 x double> addrspace(1)* %ptrTypeCast525.i, align 8
  %258 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %259 = load i64* %258, align 8
  %260 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %261 = load i64* %260, align 8
  %262 = add i64 %259, %261
  %extract528.i = add i64 %262, 552960
  %263 = getelementptr inbounds double addrspace(1)* %10, i64 %extract528.i
  %ptrTypeCast544.i = bitcast double addrspace(1)* %263 to <16 x double> addrspace(1)*
  %264 = load <16 x double> addrspace(1)* %ptrTypeCast544.i, align 8
  %265 = fmul <16 x double> %257, %264
  %266 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %265
  %267 = fmul <16 x double> %250, %266
  %extract564.i = extractelement <16 x double> %267, i32 0
  %extract565.i = extractelement <16 x double> %267, i32 1
  %extract566.i = extractelement <16 x double> %267, i32 2
  %extract567.i = extractelement <16 x double> %267, i32 3
  %extract568.i = extractelement <16 x double> %267, i32 4
  %extract569.i = extractelement <16 x double> %267, i32 5
  %extract570.i = extractelement <16 x double> %267, i32 6
  %extract571.i = extractelement <16 x double> %267, i32 7
  %extract572.i = extractelement <16 x double> %267, i32 8
  %extract573.i = extractelement <16 x double> %267, i32 9
  %extract574.i = extractelement <16 x double> %267, i32 10
  %extract575.i = extractelement <16 x double> %267, i32 11
  %extract576.i = extractelement <16 x double> %267, i32 12
  %extract577.i = extractelement <16 x double> %267, i32 13
  %extract578.i = extractelement <16 x double> %267, i32 14
  %extract579.i = extractelement <16 x double> %267, i32 15
  %268 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %269 = load i64* %268, align 8
  %270 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %271 = load i64* %270, align 8
  %272 = add i64 %269, %271
  %extract547.i = add i64 %272, 331776
  %273 = getelementptr inbounds double addrspace(1)* %4, i64 %extract547.i
  %ptrTypeCast563.i = bitcast double addrspace(1)* %273 to <16 x double> addrspace(1)*
  %274 = load <16 x double> addrspace(1)* %ptrTypeCast563.i, align 8
  %275 = call double @_Z4fmindd(double %extract564.i, double 1.000000e+300) nounwind
  %276 = call double @_Z4fmindd(double %extract565.i, double 1.000000e+300) nounwind
  %277 = call double @_Z4fmindd(double %extract566.i, double 1.000000e+300) nounwind
  %278 = call double @_Z4fmindd(double %extract567.i, double 1.000000e+300) nounwind
  %279 = call double @_Z4fmindd(double %extract568.i, double 1.000000e+300) nounwind
  %280 = call double @_Z4fmindd(double %extract569.i, double 1.000000e+300) nounwind
  %281 = call double @_Z4fmindd(double %extract570.i, double 1.000000e+300) nounwind
  %282 = call double @_Z4fmindd(double %extract571.i, double 1.000000e+300) nounwind
  %283 = call double @_Z4fmindd(double %extract572.i, double 1.000000e+300) nounwind
  %284 = call double @_Z4fmindd(double %extract573.i, double 1.000000e+300) nounwind
  %285 = call double @_Z4fmindd(double %extract574.i, double 1.000000e+300) nounwind
  %286 = call double @_Z4fmindd(double %extract575.i, double 1.000000e+300) nounwind
  %287 = call double @_Z4fmindd(double %extract576.i, double 1.000000e+300) nounwind
  %288 = call double @_Z4fmindd(double %extract577.i, double 1.000000e+300) nounwind
  %289 = call double @_Z4fmindd(double %extract578.i, double 1.000000e+300) nounwind
  %290 = call double @_Z4fmindd(double %extract579.i, double 1.000000e+300) nounwind
  %temp.vect580.i = insertelement <16 x double> undef, double %275, i32 0
  %temp.vect581.i = insertelement <16 x double> %temp.vect580.i, double %276, i32 1
  %temp.vect582.i = insertelement <16 x double> %temp.vect581.i, double %277, i32 2
  %temp.vect583.i = insertelement <16 x double> %temp.vect582.i, double %278, i32 3
  %temp.vect584.i = insertelement <16 x double> %temp.vect583.i, double %279, i32 4
  %temp.vect585.i = insertelement <16 x double> %temp.vect584.i, double %280, i32 5
  %temp.vect586.i = insertelement <16 x double> %temp.vect585.i, double %281, i32 6
  %temp.vect587.i = insertelement <16 x double> %temp.vect586.i, double %282, i32 7
  %temp.vect588.i = insertelement <16 x double> %temp.vect587.i, double %283, i32 8
  %temp.vect589.i = insertelement <16 x double> %temp.vect588.i, double %284, i32 9
  %temp.vect590.i = insertelement <16 x double> %temp.vect589.i, double %285, i32 10
  %temp.vect591.i = insertelement <16 x double> %temp.vect590.i, double %286, i32 11
  %temp.vect592.i = insertelement <16 x double> %temp.vect591.i, double %287, i32 12
  %temp.vect593.i = insertelement <16 x double> %temp.vect592.i, double %288, i32 13
  %temp.vect594.i = insertelement <16 x double> %temp.vect593.i, double %289, i32 14
  %temp.vect595.i = insertelement <16 x double> %temp.vect594.i, double %290, i32 15
  %291 = fmul <16 x double> %274, %temp.vect595.i
  %292 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %293 = load i64* %292, align 8
  %294 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %295 = load i64* %294, align 8
  %296 = add i64 %293, %295
  %extract598.i = add i64 %296, 331776
  %297 = getelementptr inbounds double addrspace(1)* %7, i64 %extract598.i
  %ptrTypeCast614.i = bitcast double addrspace(1)* %297 to <16 x double> addrspace(1)*
  store <16 x double> %291, <16 x double> addrspace(1)* %ptrTypeCast614.i, align 8
  %298 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %299 = load i64* %298, align 8
  %300 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %301 = load i64* %300, align 8
  %302 = add i64 %299, %301
  %extract617.i = add i64 %302, 110592
  %303 = getelementptr inbounds double addrspace(1)* %10, i64 %extract617.i
  %ptrTypeCast633.i = bitcast double addrspace(1)* %303 to <16 x double> addrspace(1)*
  %304 = load <16 x double> addrspace(1)* %ptrTypeCast633.i, align 8
  %305 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %306 = load i64* %305, align 8
  %307 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %308 = load i64* %307, align 8
  %309 = add i64 %306, %308
  %extract636.i = add i64 %309, 110592
  %310 = getelementptr inbounds double addrspace(1)* %10, i64 %extract636.i
  %ptrTypeCast652.i = bitcast double addrspace(1)* %310 to <16 x double> addrspace(1)*
  %311 = load <16 x double> addrspace(1)* %ptrTypeCast652.i, align 8
  %312 = fmul <16 x double> %304, %311
  %313 = fmul <16 x double> %312, %49
  %314 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %315 = load i64* %314, align 8
  %316 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %317 = load i64* %316, align 8
  %318 = add i64 %315, %317
  %319 = getelementptr inbounds double addrspace(1)* %10, i64 %318
  %ptrTypeCast671.i = bitcast double addrspace(1)* %319 to <16 x double> addrspace(1)*
  %320 = load <16 x double> addrspace(1)* %ptrTypeCast671.i, align 8
  %321 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %320
  %322 = fmul <16 x double> %313, %321
  %extract691.i = extractelement <16 x double> %322, i32 0
  %extract692.i = extractelement <16 x double> %322, i32 1
  %extract693.i = extractelement <16 x double> %322, i32 2
  %extract694.i = extractelement <16 x double> %322, i32 3
  %extract695.i = extractelement <16 x double> %322, i32 4
  %extract696.i = extractelement <16 x double> %322, i32 5
  %extract697.i = extractelement <16 x double> %322, i32 6
  %extract698.i = extractelement <16 x double> %322, i32 7
  %extract699.i = extractelement <16 x double> %322, i32 8
  %extract700.i = extractelement <16 x double> %322, i32 9
  %extract701.i = extractelement <16 x double> %322, i32 10
  %extract702.i = extractelement <16 x double> %322, i32 11
  %extract703.i = extractelement <16 x double> %322, i32 12
  %extract704.i = extractelement <16 x double> %322, i32 13
  %extract705.i = extractelement <16 x double> %322, i32 14
  %extract706.i = extractelement <16 x double> %322, i32 15
  %323 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %324 = load i64* %323, align 8
  %325 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %326 = load i64* %325, align 8
  %327 = add i64 %324, %326
  %extract674.i = add i64 %327, 442368
  %328 = getelementptr inbounds double addrspace(1)* %4, i64 %extract674.i
  %ptrTypeCast690.i = bitcast double addrspace(1)* %328 to <16 x double> addrspace(1)*
  %329 = load <16 x double> addrspace(1)* %ptrTypeCast690.i, align 8
  %330 = call double @_Z4fmindd(double %extract691.i, double 1.000000e+300) nounwind
  %331 = call double @_Z4fmindd(double %extract692.i, double 1.000000e+300) nounwind
  %332 = call double @_Z4fmindd(double %extract693.i, double 1.000000e+300) nounwind
  %333 = call double @_Z4fmindd(double %extract694.i, double 1.000000e+300) nounwind
  %334 = call double @_Z4fmindd(double %extract695.i, double 1.000000e+300) nounwind
  %335 = call double @_Z4fmindd(double %extract696.i, double 1.000000e+300) nounwind
  %336 = call double @_Z4fmindd(double %extract697.i, double 1.000000e+300) nounwind
  %337 = call double @_Z4fmindd(double %extract698.i, double 1.000000e+300) nounwind
  %338 = call double @_Z4fmindd(double %extract699.i, double 1.000000e+300) nounwind
  %339 = call double @_Z4fmindd(double %extract700.i, double 1.000000e+300) nounwind
  %340 = call double @_Z4fmindd(double %extract701.i, double 1.000000e+300) nounwind
  %341 = call double @_Z4fmindd(double %extract702.i, double 1.000000e+300) nounwind
  %342 = call double @_Z4fmindd(double %extract703.i, double 1.000000e+300) nounwind
  %343 = call double @_Z4fmindd(double %extract704.i, double 1.000000e+300) nounwind
  %344 = call double @_Z4fmindd(double %extract705.i, double 1.000000e+300) nounwind
  %345 = call double @_Z4fmindd(double %extract706.i, double 1.000000e+300) nounwind
  %temp.vect707.i = insertelement <16 x double> undef, double %330, i32 0
  %temp.vect708.i = insertelement <16 x double> %temp.vect707.i, double %331, i32 1
  %temp.vect709.i = insertelement <16 x double> %temp.vect708.i, double %332, i32 2
  %temp.vect710.i = insertelement <16 x double> %temp.vect709.i, double %333, i32 3
  %temp.vect711.i = insertelement <16 x double> %temp.vect710.i, double %334, i32 4
  %temp.vect712.i = insertelement <16 x double> %temp.vect711.i, double %335, i32 5
  %temp.vect713.i = insertelement <16 x double> %temp.vect712.i, double %336, i32 6
  %temp.vect714.i = insertelement <16 x double> %temp.vect713.i, double %337, i32 7
  %temp.vect715.i = insertelement <16 x double> %temp.vect714.i, double %338, i32 8
  %temp.vect716.i = insertelement <16 x double> %temp.vect715.i, double %339, i32 9
  %temp.vect717.i = insertelement <16 x double> %temp.vect716.i, double %340, i32 10
  %temp.vect718.i = insertelement <16 x double> %temp.vect717.i, double %341, i32 11
  %temp.vect719.i = insertelement <16 x double> %temp.vect718.i, double %342, i32 12
  %temp.vect720.i = insertelement <16 x double> %temp.vect719.i, double %343, i32 13
  %temp.vect721.i = insertelement <16 x double> %temp.vect720.i, double %344, i32 14
  %temp.vect722.i = insertelement <16 x double> %temp.vect721.i, double %345, i32 15
  %346 = fmul <16 x double> %329, %temp.vect722.i
  %347 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %348 = load i64* %347, align 8
  %349 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %350 = load i64* %349, align 8
  %351 = add i64 %348, %350
  %extract725.i = add i64 %351, 442368
  %352 = getelementptr inbounds double addrspace(1)* %7, i64 %extract725.i
  %ptrTypeCast741.i = bitcast double addrspace(1)* %352 to <16 x double> addrspace(1)*
  store <16 x double> %346, <16 x double> addrspace(1)* %ptrTypeCast741.i, align 8
  %353 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %354 = load i64* %353, align 8
  %355 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %356 = load i64* %355, align 8
  %357 = add i64 %354, %356
  %extract744.i = add i64 %357, 110592
  %358 = getelementptr inbounds double addrspace(1)* %10, i64 %extract744.i
  %ptrTypeCast760.i = bitcast double addrspace(1)* %358 to <16 x double> addrspace(1)*
  %359 = load <16 x double> addrspace(1)* %ptrTypeCast760.i, align 8
  %360 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %361 = load i64* %360, align 8
  %362 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %363 = load i64* %362, align 8
  %364 = add i64 %361, %363
  %extract763.i = add i64 %364, 110592
  %365 = getelementptr inbounds double addrspace(1)* %10, i64 %extract763.i
  %ptrTypeCast779.i = bitcast double addrspace(1)* %365 to <16 x double> addrspace(1)*
  %366 = load <16 x double> addrspace(1)* %ptrTypeCast779.i, align 8
  %367 = fmul <16 x double> %359, %366
  %368 = fmul <16 x double> %367, %49
  %369 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %370 = load i64* %369, align 8
  %371 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %372 = load i64* %371, align 8
  %373 = add i64 %370, %372
  %374 = getelementptr inbounds double addrspace(1)* %10, i64 %373
  %ptrTypeCast798.i = bitcast double addrspace(1)* %374 to <16 x double> addrspace(1)*
  %375 = load <16 x double> addrspace(1)* %ptrTypeCast798.i, align 8
  %376 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %375
  %377 = fmul <16 x double> %368, %376
  %extract818.i = extractelement <16 x double> %377, i32 0
  %extract819.i = extractelement <16 x double> %377, i32 1
  %extract820.i = extractelement <16 x double> %377, i32 2
  %extract821.i = extractelement <16 x double> %377, i32 3
  %extract822.i = extractelement <16 x double> %377, i32 4
  %extract823.i = extractelement <16 x double> %377, i32 5
  %extract824.i = extractelement <16 x double> %377, i32 6
  %extract825.i = extractelement <16 x double> %377, i32 7
  %extract826.i = extractelement <16 x double> %377, i32 8
  %extract827.i = extractelement <16 x double> %377, i32 9
  %extract828.i = extractelement <16 x double> %377, i32 10
  %extract829.i = extractelement <16 x double> %377, i32 11
  %extract830.i = extractelement <16 x double> %377, i32 12
  %extract831.i = extractelement <16 x double> %377, i32 13
  %extract832.i = extractelement <16 x double> %377, i32 14
  %extract833.i = extractelement <16 x double> %377, i32 15
  %378 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %379 = load i64* %378, align 8
  %380 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %381 = load i64* %380, align 8
  %382 = add i64 %379, %381
  %extract801.i = add i64 %382, 552960
  %383 = getelementptr inbounds double addrspace(1)* %4, i64 %extract801.i
  %ptrTypeCast817.i = bitcast double addrspace(1)* %383 to <16 x double> addrspace(1)*
  %384 = load <16 x double> addrspace(1)* %ptrTypeCast817.i, align 8
  %385 = call double @_Z4fmindd(double %extract818.i, double 1.000000e+300) nounwind
  %386 = call double @_Z4fmindd(double %extract819.i, double 1.000000e+300) nounwind
  %387 = call double @_Z4fmindd(double %extract820.i, double 1.000000e+300) nounwind
  %388 = call double @_Z4fmindd(double %extract821.i, double 1.000000e+300) nounwind
  %389 = call double @_Z4fmindd(double %extract822.i, double 1.000000e+300) nounwind
  %390 = call double @_Z4fmindd(double %extract823.i, double 1.000000e+300) nounwind
  %391 = call double @_Z4fmindd(double %extract824.i, double 1.000000e+300) nounwind
  %392 = call double @_Z4fmindd(double %extract825.i, double 1.000000e+300) nounwind
  %393 = call double @_Z4fmindd(double %extract826.i, double 1.000000e+300) nounwind
  %394 = call double @_Z4fmindd(double %extract827.i, double 1.000000e+300) nounwind
  %395 = call double @_Z4fmindd(double %extract828.i, double 1.000000e+300) nounwind
  %396 = call double @_Z4fmindd(double %extract829.i, double 1.000000e+300) nounwind
  %397 = call double @_Z4fmindd(double %extract830.i, double 1.000000e+300) nounwind
  %398 = call double @_Z4fmindd(double %extract831.i, double 1.000000e+300) nounwind
  %399 = call double @_Z4fmindd(double %extract832.i, double 1.000000e+300) nounwind
  %400 = call double @_Z4fmindd(double %extract833.i, double 1.000000e+300) nounwind
  %temp.vect834.i = insertelement <16 x double> undef, double %385, i32 0
  %temp.vect835.i = insertelement <16 x double> %temp.vect834.i, double %386, i32 1
  %temp.vect836.i = insertelement <16 x double> %temp.vect835.i, double %387, i32 2
  %temp.vect837.i = insertelement <16 x double> %temp.vect836.i, double %388, i32 3
  %temp.vect838.i = insertelement <16 x double> %temp.vect837.i, double %389, i32 4
  %temp.vect839.i = insertelement <16 x double> %temp.vect838.i, double %390, i32 5
  %temp.vect840.i = insertelement <16 x double> %temp.vect839.i, double %391, i32 6
  %temp.vect841.i = insertelement <16 x double> %temp.vect840.i, double %392, i32 7
  %temp.vect842.i = insertelement <16 x double> %temp.vect841.i, double %393, i32 8
  %temp.vect843.i = insertelement <16 x double> %temp.vect842.i, double %394, i32 9
  %temp.vect844.i = insertelement <16 x double> %temp.vect843.i, double %395, i32 10
  %temp.vect845.i = insertelement <16 x double> %temp.vect844.i, double %396, i32 11
  %temp.vect846.i = insertelement <16 x double> %temp.vect845.i, double %397, i32 12
  %temp.vect847.i = insertelement <16 x double> %temp.vect846.i, double %398, i32 13
  %temp.vect848.i = insertelement <16 x double> %temp.vect847.i, double %399, i32 14
  %temp.vect849.i = insertelement <16 x double> %temp.vect848.i, double %400, i32 15
  %401 = fmul <16 x double> %384, %temp.vect849.i
  %402 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %403 = load i64* %402, align 8
  %404 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %405 = load i64* %404, align 8
  %406 = add i64 %403, %405
  %extract852.i = add i64 %406, 552960
  %407 = getelementptr inbounds double addrspace(1)* %7, i64 %extract852.i
  %ptrTypeCast868.i = bitcast double addrspace(1)* %407 to <16 x double> addrspace(1)*
  store <16 x double> %401, <16 x double> addrspace(1)* %ptrTypeCast868.i, align 8
  %408 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %409 = load i64* %408, align 8
  %410 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %411 = load i64* %410, align 8
  %412 = add i64 %409, %411
  %extract871.i = add i64 %412, 110592
  %413 = getelementptr inbounds double addrspace(1)* %10, i64 %extract871.i
  %ptrTypeCast887.i = bitcast double addrspace(1)* %413 to <16 x double> addrspace(1)*
  %414 = load <16 x double> addrspace(1)* %ptrTypeCast887.i, align 8
  %415 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %416 = load i64* %415, align 8
  %417 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %418 = load i64* %417, align 8
  %419 = add i64 %416, %418
  %extract890.i = add i64 %419, 110592
  %420 = getelementptr inbounds double addrspace(1)* %10, i64 %extract890.i
  %ptrTypeCast906.i = bitcast double addrspace(1)* %420 to <16 x double> addrspace(1)*
  %421 = load <16 x double> addrspace(1)* %ptrTypeCast906.i, align 8
  %422 = fmul <16 x double> %414, %421
  %423 = fmul <16 x double> %422, %49
  %424 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %425 = load i64* %424, align 8
  %426 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %427 = load i64* %426, align 8
  %428 = add i64 %425, %427
  %429 = getelementptr inbounds double addrspace(1)* %10, i64 %428
  %ptrTypeCast925.i = bitcast double addrspace(1)* %429 to <16 x double> addrspace(1)*
  %430 = load <16 x double> addrspace(1)* %ptrTypeCast925.i, align 8
  %431 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %430
  %432 = fmul <16 x double> %423, %431
  %extract945.i = extractelement <16 x double> %432, i32 0
  %extract946.i = extractelement <16 x double> %432, i32 1
  %extract947.i = extractelement <16 x double> %432, i32 2
  %extract948.i = extractelement <16 x double> %432, i32 3
  %extract949.i = extractelement <16 x double> %432, i32 4
  %extract950.i = extractelement <16 x double> %432, i32 5
  %extract951.i = extractelement <16 x double> %432, i32 6
  %extract952.i = extractelement <16 x double> %432, i32 7
  %extract953.i = extractelement <16 x double> %432, i32 8
  %extract954.i = extractelement <16 x double> %432, i32 9
  %extract955.i = extractelement <16 x double> %432, i32 10
  %extract956.i = extractelement <16 x double> %432, i32 11
  %extract957.i = extractelement <16 x double> %432, i32 12
  %extract958.i = extractelement <16 x double> %432, i32 13
  %extract959.i = extractelement <16 x double> %432, i32 14
  %extract960.i = extractelement <16 x double> %432, i32 15
  %433 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %434 = load i64* %433, align 8
  %435 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %436 = load i64* %435, align 8
  %437 = add i64 %434, %436
  %extract928.i = add i64 %437, 663552
  %438 = getelementptr inbounds double addrspace(1)* %4, i64 %extract928.i
  %ptrTypeCast944.i = bitcast double addrspace(1)* %438 to <16 x double> addrspace(1)*
  %439 = load <16 x double> addrspace(1)* %ptrTypeCast944.i, align 8
  %440 = call double @_Z4fmindd(double %extract945.i, double 1.000000e+300) nounwind
  %441 = call double @_Z4fmindd(double %extract946.i, double 1.000000e+300) nounwind
  %442 = call double @_Z4fmindd(double %extract947.i, double 1.000000e+300) nounwind
  %443 = call double @_Z4fmindd(double %extract948.i, double 1.000000e+300) nounwind
  %444 = call double @_Z4fmindd(double %extract949.i, double 1.000000e+300) nounwind
  %445 = call double @_Z4fmindd(double %extract950.i, double 1.000000e+300) nounwind
  %446 = call double @_Z4fmindd(double %extract951.i, double 1.000000e+300) nounwind
  %447 = call double @_Z4fmindd(double %extract952.i, double 1.000000e+300) nounwind
  %448 = call double @_Z4fmindd(double %extract953.i, double 1.000000e+300) nounwind
  %449 = call double @_Z4fmindd(double %extract954.i, double 1.000000e+300) nounwind
  %450 = call double @_Z4fmindd(double %extract955.i, double 1.000000e+300) nounwind
  %451 = call double @_Z4fmindd(double %extract956.i, double 1.000000e+300) nounwind
  %452 = call double @_Z4fmindd(double %extract957.i, double 1.000000e+300) nounwind
  %453 = call double @_Z4fmindd(double %extract958.i, double 1.000000e+300) nounwind
  %454 = call double @_Z4fmindd(double %extract959.i, double 1.000000e+300) nounwind
  %455 = call double @_Z4fmindd(double %extract960.i, double 1.000000e+300) nounwind
  %temp.vect961.i = insertelement <16 x double> undef, double %440, i32 0
  %temp.vect962.i = insertelement <16 x double> %temp.vect961.i, double %441, i32 1
  %temp.vect963.i = insertelement <16 x double> %temp.vect962.i, double %442, i32 2
  %temp.vect964.i = insertelement <16 x double> %temp.vect963.i, double %443, i32 3
  %temp.vect965.i = insertelement <16 x double> %temp.vect964.i, double %444, i32 4
  %temp.vect966.i = insertelement <16 x double> %temp.vect965.i, double %445, i32 5
  %temp.vect967.i = insertelement <16 x double> %temp.vect966.i, double %446, i32 6
  %temp.vect968.i = insertelement <16 x double> %temp.vect967.i, double %447, i32 7
  %temp.vect969.i = insertelement <16 x double> %temp.vect968.i, double %448, i32 8
  %temp.vect970.i = insertelement <16 x double> %temp.vect969.i, double %449, i32 9
  %temp.vect971.i = insertelement <16 x double> %temp.vect970.i, double %450, i32 10
  %temp.vect972.i = insertelement <16 x double> %temp.vect971.i, double %451, i32 11
  %temp.vect973.i = insertelement <16 x double> %temp.vect972.i, double %452, i32 12
  %temp.vect974.i = insertelement <16 x double> %temp.vect973.i, double %453, i32 13
  %temp.vect975.i = insertelement <16 x double> %temp.vect974.i, double %454, i32 14
  %temp.vect976.i = insertelement <16 x double> %temp.vect975.i, double %455, i32 15
  %456 = fmul <16 x double> %439, %temp.vect976.i
  %457 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %458 = load i64* %457, align 8
  %459 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %460 = load i64* %459, align 8
  %461 = add i64 %458, %460
  %extract979.i = add i64 %461, 663552
  %462 = getelementptr inbounds double addrspace(1)* %7, i64 %extract979.i
  %ptrTypeCast995.i = bitcast double addrspace(1)* %462 to <16 x double> addrspace(1)*
  store <16 x double> %456, <16 x double> addrspace(1)* %ptrTypeCast995.i, align 8
  %463 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %464 = load i64* %463, align 8
  %465 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %466 = load i64* %465, align 8
  %467 = add i64 %464, %466
  %extract998.i = add i64 %467, 110592
  %468 = getelementptr inbounds double addrspace(1)* %10, i64 %extract998.i
  %ptrTypeCast1014.i = bitcast double addrspace(1)* %468 to <16 x double> addrspace(1)*
  %469 = load <16 x double> addrspace(1)* %ptrTypeCast1014.i, align 8
  %470 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %471 = load i64* %470, align 8
  %472 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %473 = load i64* %472, align 8
  %474 = add i64 %471, %473
  %extract1017.i = add i64 %474, 110592
  %475 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1017.i
  %ptrTypeCast1033.i = bitcast double addrspace(1)* %475 to <16 x double> addrspace(1)*
  %476 = load <16 x double> addrspace(1)* %ptrTypeCast1033.i, align 8
  %477 = fmul <16 x double> %469, %476
  %478 = fmul <16 x double> %477, %49
  %479 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %480 = load i64* %479, align 8
  %481 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %482 = load i64* %481, align 8
  %483 = add i64 %480, %482
  %484 = getelementptr inbounds double addrspace(1)* %10, i64 %483
  %ptrTypeCast1052.i = bitcast double addrspace(1)* %484 to <16 x double> addrspace(1)*
  %485 = load <16 x double> addrspace(1)* %ptrTypeCast1052.i, align 8
  %486 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %485
  %487 = fmul <16 x double> %478, %486
  %extract1072.i = extractelement <16 x double> %487, i32 0
  %extract1073.i = extractelement <16 x double> %487, i32 1
  %extract1074.i = extractelement <16 x double> %487, i32 2
  %extract1075.i = extractelement <16 x double> %487, i32 3
  %extract1076.i = extractelement <16 x double> %487, i32 4
  %extract1077.i = extractelement <16 x double> %487, i32 5
  %extract1078.i = extractelement <16 x double> %487, i32 6
  %extract1079.i = extractelement <16 x double> %487, i32 7
  %extract1080.i = extractelement <16 x double> %487, i32 8
  %extract1081.i = extractelement <16 x double> %487, i32 9
  %extract1082.i = extractelement <16 x double> %487, i32 10
  %extract1083.i = extractelement <16 x double> %487, i32 11
  %extract1084.i = extractelement <16 x double> %487, i32 12
  %extract1085.i = extractelement <16 x double> %487, i32 13
  %extract1086.i = extractelement <16 x double> %487, i32 14
  %extract1087.i = extractelement <16 x double> %487, i32 15
  %488 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %489 = load i64* %488, align 8
  %490 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %491 = load i64* %490, align 8
  %492 = add i64 %489, %491
  %extract1055.i = add i64 %492, 774144
  %493 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1055.i
  %ptrTypeCast1071.i = bitcast double addrspace(1)* %493 to <16 x double> addrspace(1)*
  %494 = load <16 x double> addrspace(1)* %ptrTypeCast1071.i, align 8
  %495 = call double @_Z4fmindd(double %extract1072.i, double 1.000000e+300) nounwind
  %496 = call double @_Z4fmindd(double %extract1073.i, double 1.000000e+300) nounwind
  %497 = call double @_Z4fmindd(double %extract1074.i, double 1.000000e+300) nounwind
  %498 = call double @_Z4fmindd(double %extract1075.i, double 1.000000e+300) nounwind
  %499 = call double @_Z4fmindd(double %extract1076.i, double 1.000000e+300) nounwind
  %500 = call double @_Z4fmindd(double %extract1077.i, double 1.000000e+300) nounwind
  %501 = call double @_Z4fmindd(double %extract1078.i, double 1.000000e+300) nounwind
  %502 = call double @_Z4fmindd(double %extract1079.i, double 1.000000e+300) nounwind
  %503 = call double @_Z4fmindd(double %extract1080.i, double 1.000000e+300) nounwind
  %504 = call double @_Z4fmindd(double %extract1081.i, double 1.000000e+300) nounwind
  %505 = call double @_Z4fmindd(double %extract1082.i, double 1.000000e+300) nounwind
  %506 = call double @_Z4fmindd(double %extract1083.i, double 1.000000e+300) nounwind
  %507 = call double @_Z4fmindd(double %extract1084.i, double 1.000000e+300) nounwind
  %508 = call double @_Z4fmindd(double %extract1085.i, double 1.000000e+300) nounwind
  %509 = call double @_Z4fmindd(double %extract1086.i, double 1.000000e+300) nounwind
  %510 = call double @_Z4fmindd(double %extract1087.i, double 1.000000e+300) nounwind
  %temp.vect1088.i = insertelement <16 x double> undef, double %495, i32 0
  %temp.vect1089.i = insertelement <16 x double> %temp.vect1088.i, double %496, i32 1
  %temp.vect1090.i = insertelement <16 x double> %temp.vect1089.i, double %497, i32 2
  %temp.vect1091.i = insertelement <16 x double> %temp.vect1090.i, double %498, i32 3
  %temp.vect1092.i = insertelement <16 x double> %temp.vect1091.i, double %499, i32 4
  %temp.vect1093.i = insertelement <16 x double> %temp.vect1092.i, double %500, i32 5
  %temp.vect1094.i = insertelement <16 x double> %temp.vect1093.i, double %501, i32 6
  %temp.vect1095.i = insertelement <16 x double> %temp.vect1094.i, double %502, i32 7
  %temp.vect1096.i = insertelement <16 x double> %temp.vect1095.i, double %503, i32 8
  %temp.vect1097.i = insertelement <16 x double> %temp.vect1096.i, double %504, i32 9
  %temp.vect1098.i = insertelement <16 x double> %temp.vect1097.i, double %505, i32 10
  %temp.vect1099.i = insertelement <16 x double> %temp.vect1098.i, double %506, i32 11
  %temp.vect1100.i = insertelement <16 x double> %temp.vect1099.i, double %507, i32 12
  %temp.vect1101.i = insertelement <16 x double> %temp.vect1100.i, double %508, i32 13
  %temp.vect1102.i = insertelement <16 x double> %temp.vect1101.i, double %509, i32 14
  %temp.vect1103.i = insertelement <16 x double> %temp.vect1102.i, double %510, i32 15
  %511 = fmul <16 x double> %494, %temp.vect1103.i
  %512 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %513 = load i64* %512, align 8
  %514 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %515 = load i64* %514, align 8
  %516 = add i64 %513, %515
  %extract1106.i = add i64 %516, 774144
  %517 = getelementptr inbounds double addrspace(1)* %7, i64 %extract1106.i
  %ptrTypeCast1122.i = bitcast double addrspace(1)* %517 to <16 x double> addrspace(1)*
  store <16 x double> %511, <16 x double> addrspace(1)* %ptrTypeCast1122.i, align 8
  %518 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %519 = load i64* %518, align 8
  %520 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %521 = load i64* %520, align 8
  %522 = add i64 %519, %521
  %extract1125.i = add i64 %522, 110592
  %523 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1125.i
  %ptrTypeCast1141.i = bitcast double addrspace(1)* %523 to <16 x double> addrspace(1)*
  %524 = load <16 x double> addrspace(1)* %ptrTypeCast1141.i, align 8
  %525 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %526 = load i64* %525, align 8
  %527 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %528 = load i64* %527, align 8
  %529 = add i64 %526, %528
  %extract1144.i = add i64 %529, 442368
  %530 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1144.i
  %ptrTypeCast1160.i = bitcast double addrspace(1)* %530 to <16 x double> addrspace(1)*
  %531 = load <16 x double> addrspace(1)* %ptrTypeCast1160.i, align 8
  %532 = fmul <16 x double> %524, %531
  %533 = fmul <16 x double> %532, %49
  %534 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %535 = load i64* %534, align 8
  %536 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %537 = load i64* %536, align 8
  %538 = add i64 %535, %537
  %extract1163.i = add i64 %538, 552960
  %539 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1163.i
  %ptrTypeCast1179.i = bitcast double addrspace(1)* %539 to <16 x double> addrspace(1)*
  %540 = load <16 x double> addrspace(1)* %ptrTypeCast1179.i, align 8
  %541 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %540
  %542 = fmul <16 x double> %533, %541
  %extract1199.i = extractelement <16 x double> %542, i32 0
  %extract1200.i = extractelement <16 x double> %542, i32 1
  %extract1201.i = extractelement <16 x double> %542, i32 2
  %extract1202.i = extractelement <16 x double> %542, i32 3
  %extract1203.i = extractelement <16 x double> %542, i32 4
  %extract1204.i = extractelement <16 x double> %542, i32 5
  %extract1205.i = extractelement <16 x double> %542, i32 6
  %extract1206.i = extractelement <16 x double> %542, i32 7
  %extract1207.i = extractelement <16 x double> %542, i32 8
  %extract1208.i = extractelement <16 x double> %542, i32 9
  %extract1209.i = extractelement <16 x double> %542, i32 10
  %extract1210.i = extractelement <16 x double> %542, i32 11
  %extract1211.i = extractelement <16 x double> %542, i32 12
  %extract1212.i = extractelement <16 x double> %542, i32 13
  %extract1213.i = extractelement <16 x double> %542, i32 14
  %extract1214.i = extractelement <16 x double> %542, i32 15
  %543 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %544 = load i64* %543, align 8
  %545 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %546 = load i64* %545, align 8
  %547 = add i64 %544, %546
  %extract1182.i = add i64 %547, 884736
  %548 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1182.i
  %ptrTypeCast1198.i = bitcast double addrspace(1)* %548 to <16 x double> addrspace(1)*
  %549 = load <16 x double> addrspace(1)* %ptrTypeCast1198.i, align 8
  %550 = call double @_Z4fmindd(double %extract1199.i, double 1.000000e+300) nounwind
  %551 = call double @_Z4fmindd(double %extract1200.i, double 1.000000e+300) nounwind
  %552 = call double @_Z4fmindd(double %extract1201.i, double 1.000000e+300) nounwind
  %553 = call double @_Z4fmindd(double %extract1202.i, double 1.000000e+300) nounwind
  %554 = call double @_Z4fmindd(double %extract1203.i, double 1.000000e+300) nounwind
  %555 = call double @_Z4fmindd(double %extract1204.i, double 1.000000e+300) nounwind
  %556 = call double @_Z4fmindd(double %extract1205.i, double 1.000000e+300) nounwind
  %557 = call double @_Z4fmindd(double %extract1206.i, double 1.000000e+300) nounwind
  %558 = call double @_Z4fmindd(double %extract1207.i, double 1.000000e+300) nounwind
  %559 = call double @_Z4fmindd(double %extract1208.i, double 1.000000e+300) nounwind
  %560 = call double @_Z4fmindd(double %extract1209.i, double 1.000000e+300) nounwind
  %561 = call double @_Z4fmindd(double %extract1210.i, double 1.000000e+300) nounwind
  %562 = call double @_Z4fmindd(double %extract1211.i, double 1.000000e+300) nounwind
  %563 = call double @_Z4fmindd(double %extract1212.i, double 1.000000e+300) nounwind
  %564 = call double @_Z4fmindd(double %extract1213.i, double 1.000000e+300) nounwind
  %565 = call double @_Z4fmindd(double %extract1214.i, double 1.000000e+300) nounwind
  %temp.vect1215.i = insertelement <16 x double> undef, double %550, i32 0
  %temp.vect1216.i = insertelement <16 x double> %temp.vect1215.i, double %551, i32 1
  %temp.vect1217.i = insertelement <16 x double> %temp.vect1216.i, double %552, i32 2
  %temp.vect1218.i = insertelement <16 x double> %temp.vect1217.i, double %553, i32 3
  %temp.vect1219.i = insertelement <16 x double> %temp.vect1218.i, double %554, i32 4
  %temp.vect1220.i = insertelement <16 x double> %temp.vect1219.i, double %555, i32 5
  %temp.vect1221.i = insertelement <16 x double> %temp.vect1220.i, double %556, i32 6
  %temp.vect1222.i = insertelement <16 x double> %temp.vect1221.i, double %557, i32 7
  %temp.vect1223.i = insertelement <16 x double> %temp.vect1222.i, double %558, i32 8
  %temp.vect1224.i = insertelement <16 x double> %temp.vect1223.i, double %559, i32 9
  %temp.vect1225.i = insertelement <16 x double> %temp.vect1224.i, double %560, i32 10
  %temp.vect1226.i = insertelement <16 x double> %temp.vect1225.i, double %561, i32 11
  %temp.vect1227.i = insertelement <16 x double> %temp.vect1226.i, double %562, i32 12
  %temp.vect1228.i = insertelement <16 x double> %temp.vect1227.i, double %563, i32 13
  %temp.vect1229.i = insertelement <16 x double> %temp.vect1228.i, double %564, i32 14
  %temp.vect1230.i = insertelement <16 x double> %temp.vect1229.i, double %565, i32 15
  %566 = fmul <16 x double> %549, %temp.vect1230.i
  %567 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %568 = load i64* %567, align 8
  %569 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %570 = load i64* %569, align 8
  %571 = add i64 %568, %570
  %extract1233.i = add i64 %571, 884736
  %572 = getelementptr inbounds double addrspace(1)* %7, i64 %extract1233.i
  %ptrTypeCast1249.i = bitcast double addrspace(1)* %572 to <16 x double> addrspace(1)*
  store <16 x double> %566, <16 x double> addrspace(1)* %ptrTypeCast1249.i, align 8
  %573 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %574 = load i64* %573, align 8
  %575 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %576 = load i64* %575, align 8
  %577 = add i64 %574, %576
  %extract1252.i = add i64 %577, 110592
  %578 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1252.i
  %ptrTypeCast1268.i = bitcast double addrspace(1)* %578 to <16 x double> addrspace(1)*
  %579 = load <16 x double> addrspace(1)* %ptrTypeCast1268.i, align 8
  %580 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %581 = load i64* %580, align 8
  %582 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %583 = load i64* %582, align 8
  %584 = add i64 %581, %583
  %extract1271.i = add i64 %584, 221184
  %585 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1271.i
  %ptrTypeCast1287.i = bitcast double addrspace(1)* %585 to <16 x double> addrspace(1)*
  %586 = load <16 x double> addrspace(1)* %ptrTypeCast1287.i, align 8
  %587 = fmul <16 x double> %579, %586
  %588 = fmul <16 x double> %587, %49
  %589 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %590 = load i64* %589, align 8
  %591 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %592 = load i64* %591, align 8
  %593 = add i64 %590, %592
  %extract1290.i = add i64 %593, 442368
  %594 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1290.i
  %ptrTypeCast1306.i = bitcast double addrspace(1)* %594 to <16 x double> addrspace(1)*
  %595 = load <16 x double> addrspace(1)* %ptrTypeCast1306.i, align 8
  %596 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %595
  %597 = fmul <16 x double> %588, %596
  %extract1326.i = extractelement <16 x double> %597, i32 0
  %extract1327.i = extractelement <16 x double> %597, i32 1
  %extract1328.i = extractelement <16 x double> %597, i32 2
  %extract1329.i = extractelement <16 x double> %597, i32 3
  %extract1330.i = extractelement <16 x double> %597, i32 4
  %extract1331.i = extractelement <16 x double> %597, i32 5
  %extract1332.i = extractelement <16 x double> %597, i32 6
  %extract1333.i = extractelement <16 x double> %597, i32 7
  %extract1334.i = extractelement <16 x double> %597, i32 8
  %extract1335.i = extractelement <16 x double> %597, i32 9
  %extract1336.i = extractelement <16 x double> %597, i32 10
  %extract1337.i = extractelement <16 x double> %597, i32 11
  %extract1338.i = extractelement <16 x double> %597, i32 12
  %extract1339.i = extractelement <16 x double> %597, i32 13
  %extract1340.i = extractelement <16 x double> %597, i32 14
  %extract1341.i = extractelement <16 x double> %597, i32 15
  %598 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %599 = load i64* %598, align 8
  %600 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %601 = load i64* %600, align 8
  %602 = add i64 %599, %601
  %extract1309.i = add i64 %602, 995328
  %603 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1309.i
  %ptrTypeCast1325.i = bitcast double addrspace(1)* %603 to <16 x double> addrspace(1)*
  %604 = load <16 x double> addrspace(1)* %ptrTypeCast1325.i, align 8
  %605 = call double @_Z4fmindd(double %extract1326.i, double 1.000000e+300) nounwind
  %606 = call double @_Z4fmindd(double %extract1327.i, double 1.000000e+300) nounwind
  %607 = call double @_Z4fmindd(double %extract1328.i, double 1.000000e+300) nounwind
  %608 = call double @_Z4fmindd(double %extract1329.i, double 1.000000e+300) nounwind
  %609 = call double @_Z4fmindd(double %extract1330.i, double 1.000000e+300) nounwind
  %610 = call double @_Z4fmindd(double %extract1331.i, double 1.000000e+300) nounwind
  %611 = call double @_Z4fmindd(double %extract1332.i, double 1.000000e+300) nounwind
  %612 = call double @_Z4fmindd(double %extract1333.i, double 1.000000e+300) nounwind
  %613 = call double @_Z4fmindd(double %extract1334.i, double 1.000000e+300) nounwind
  %614 = call double @_Z4fmindd(double %extract1335.i, double 1.000000e+300) nounwind
  %615 = call double @_Z4fmindd(double %extract1336.i, double 1.000000e+300) nounwind
  %616 = call double @_Z4fmindd(double %extract1337.i, double 1.000000e+300) nounwind
  %617 = call double @_Z4fmindd(double %extract1338.i, double 1.000000e+300) nounwind
  %618 = call double @_Z4fmindd(double %extract1339.i, double 1.000000e+300) nounwind
  %619 = call double @_Z4fmindd(double %extract1340.i, double 1.000000e+300) nounwind
  %620 = call double @_Z4fmindd(double %extract1341.i, double 1.000000e+300) nounwind
  %temp.vect1342.i = insertelement <16 x double> undef, double %605, i32 0
  %temp.vect1343.i = insertelement <16 x double> %temp.vect1342.i, double %606, i32 1
  %temp.vect1344.i = insertelement <16 x double> %temp.vect1343.i, double %607, i32 2
  %temp.vect1345.i = insertelement <16 x double> %temp.vect1344.i, double %608, i32 3
  %temp.vect1346.i = insertelement <16 x double> %temp.vect1345.i, double %609, i32 4
  %temp.vect1347.i = insertelement <16 x double> %temp.vect1346.i, double %610, i32 5
  %temp.vect1348.i = insertelement <16 x double> %temp.vect1347.i, double %611, i32 6
  %temp.vect1349.i = insertelement <16 x double> %temp.vect1348.i, double %612, i32 7
  %temp.vect1350.i = insertelement <16 x double> %temp.vect1349.i, double %613, i32 8
  %temp.vect1351.i = insertelement <16 x double> %temp.vect1350.i, double %614, i32 9
  %temp.vect1352.i = insertelement <16 x double> %temp.vect1351.i, double %615, i32 10
  %temp.vect1353.i = insertelement <16 x double> %temp.vect1352.i, double %616, i32 11
  %temp.vect1354.i = insertelement <16 x double> %temp.vect1353.i, double %617, i32 12
  %temp.vect1355.i = insertelement <16 x double> %temp.vect1354.i, double %618, i32 13
  %temp.vect1356.i = insertelement <16 x double> %temp.vect1355.i, double %619, i32 14
  %temp.vect1357.i = insertelement <16 x double> %temp.vect1356.i, double %620, i32 15
  %621 = fmul <16 x double> %604, %temp.vect1357.i
  %622 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %623 = load i64* %622, align 8
  %624 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %625 = load i64* %624, align 8
  %626 = add i64 %623, %625
  %extract1360.i = add i64 %626, 995328
  %627 = getelementptr inbounds double addrspace(1)* %7, i64 %extract1360.i
  %ptrTypeCast1376.i = bitcast double addrspace(1)* %627 to <16 x double> addrspace(1)*
  store <16 x double> %621, <16 x double> addrspace(1)* %ptrTypeCast1376.i, align 8
  %628 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %629 = load i64* %628, align 8
  %630 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %631 = load i64* %630, align 8
  %632 = add i64 %629, %631
  %extract1379.i = add i64 %632, 221184
  %633 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1379.i
  %ptrTypeCast1395.i = bitcast double addrspace(1)* %633 to <16 x double> addrspace(1)*
  %634 = load <16 x double> addrspace(1)* %ptrTypeCast1395.i, align 8
  %635 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %636 = load i64* %635, align 8
  %637 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %638 = load i64* %637, align 8
  %639 = add i64 %636, %638
  %extract1398.i = add i64 %639, 221184
  %640 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1398.i
  %ptrTypeCast1414.i = bitcast double addrspace(1)* %640 to <16 x double> addrspace(1)*
  %641 = load <16 x double> addrspace(1)* %ptrTypeCast1414.i, align 8
  %642 = fmul <16 x double> %634, %641
  %643 = fmul <16 x double> %642, %49
  %644 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %645 = load i64* %644, align 8
  %646 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %647 = load i64* %646, align 8
  %648 = add i64 %645, %647
  %extract1417.i = add i64 %648, 331776
  %649 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1417.i
  %ptrTypeCast1433.i = bitcast double addrspace(1)* %649 to <16 x double> addrspace(1)*
  %650 = load <16 x double> addrspace(1)* %ptrTypeCast1433.i, align 8
  %651 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %650
  %652 = fmul <16 x double> %643, %651
  %extract1453.i = extractelement <16 x double> %652, i32 0
  %extract1454.i = extractelement <16 x double> %652, i32 1
  %extract1455.i = extractelement <16 x double> %652, i32 2
  %extract1456.i = extractelement <16 x double> %652, i32 3
  %extract1457.i = extractelement <16 x double> %652, i32 4
  %extract1458.i = extractelement <16 x double> %652, i32 5
  %extract1459.i = extractelement <16 x double> %652, i32 6
  %extract1460.i = extractelement <16 x double> %652, i32 7
  %extract1461.i = extractelement <16 x double> %652, i32 8
  %extract1462.i = extractelement <16 x double> %652, i32 9
  %extract1463.i = extractelement <16 x double> %652, i32 10
  %extract1464.i = extractelement <16 x double> %652, i32 11
  %extract1465.i = extractelement <16 x double> %652, i32 12
  %extract1466.i = extractelement <16 x double> %652, i32 13
  %extract1467.i = extractelement <16 x double> %652, i32 14
  %extract1468.i = extractelement <16 x double> %652, i32 15
  %653 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %654 = load i64* %653, align 8
  %655 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %656 = load i64* %655, align 8
  %657 = add i64 %654, %656
  %extract1436.i = add i64 %657, 1105920
  %658 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1436.i
  %ptrTypeCast1452.i = bitcast double addrspace(1)* %658 to <16 x double> addrspace(1)*
  %659 = load <16 x double> addrspace(1)* %ptrTypeCast1452.i, align 8
  %660 = call double @_Z4fmindd(double %extract1453.i, double 1.000000e+300) nounwind
  %661 = call double @_Z4fmindd(double %extract1454.i, double 1.000000e+300) nounwind
  %662 = call double @_Z4fmindd(double %extract1455.i, double 1.000000e+300) nounwind
  %663 = call double @_Z4fmindd(double %extract1456.i, double 1.000000e+300) nounwind
  %664 = call double @_Z4fmindd(double %extract1457.i, double 1.000000e+300) nounwind
  %665 = call double @_Z4fmindd(double %extract1458.i, double 1.000000e+300) nounwind
  %666 = call double @_Z4fmindd(double %extract1459.i, double 1.000000e+300) nounwind
  %667 = call double @_Z4fmindd(double %extract1460.i, double 1.000000e+300) nounwind
  %668 = call double @_Z4fmindd(double %extract1461.i, double 1.000000e+300) nounwind
  %669 = call double @_Z4fmindd(double %extract1462.i, double 1.000000e+300) nounwind
  %670 = call double @_Z4fmindd(double %extract1463.i, double 1.000000e+300) nounwind
  %671 = call double @_Z4fmindd(double %extract1464.i, double 1.000000e+300) nounwind
  %672 = call double @_Z4fmindd(double %extract1465.i, double 1.000000e+300) nounwind
  %673 = call double @_Z4fmindd(double %extract1466.i, double 1.000000e+300) nounwind
  %674 = call double @_Z4fmindd(double %extract1467.i, double 1.000000e+300) nounwind
  %675 = call double @_Z4fmindd(double %extract1468.i, double 1.000000e+300) nounwind
  %temp.vect1469.i = insertelement <16 x double> undef, double %660, i32 0
  %temp.vect1470.i = insertelement <16 x double> %temp.vect1469.i, double %661, i32 1
  %temp.vect1471.i = insertelement <16 x double> %temp.vect1470.i, double %662, i32 2
  %temp.vect1472.i = insertelement <16 x double> %temp.vect1471.i, double %663, i32 3
  %temp.vect1473.i = insertelement <16 x double> %temp.vect1472.i, double %664, i32 4
  %temp.vect1474.i = insertelement <16 x double> %temp.vect1473.i, double %665, i32 5
  %temp.vect1475.i = insertelement <16 x double> %temp.vect1474.i, double %666, i32 6
  %temp.vect1476.i = insertelement <16 x double> %temp.vect1475.i, double %667, i32 7
  %temp.vect1477.i = insertelement <16 x double> %temp.vect1476.i, double %668, i32 8
  %temp.vect1478.i = insertelement <16 x double> %temp.vect1477.i, double %669, i32 9
  %temp.vect1479.i = insertelement <16 x double> %temp.vect1478.i, double %670, i32 10
  %temp.vect1480.i = insertelement <16 x double> %temp.vect1479.i, double %671, i32 11
  %temp.vect1481.i = insertelement <16 x double> %temp.vect1480.i, double %672, i32 12
  %temp.vect1482.i = insertelement <16 x double> %temp.vect1481.i, double %673, i32 13
  %temp.vect1483.i = insertelement <16 x double> %temp.vect1482.i, double %674, i32 14
  %temp.vect1484.i = insertelement <16 x double> %temp.vect1483.i, double %675, i32 15
  %676 = fmul <16 x double> %659, %temp.vect1484.i
  %677 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %678 = load i64* %677, align 8
  %679 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %680 = load i64* %679, align 8
  %681 = add i64 %678, %680
  %extract1487.i = add i64 %681, 1105920
  %682 = getelementptr inbounds double addrspace(1)* %7, i64 %extract1487.i
  %ptrTypeCast1503.i = bitcast double addrspace(1)* %682 to <16 x double> addrspace(1)*
  store <16 x double> %676, <16 x double> addrspace(1)* %ptrTypeCast1503.i, align 8
  %683 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %684 = load i64* %683, align 8
  %685 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %686 = load i64* %685, align 8
  %687 = add i64 %684, %686
  %extract1506.i = add i64 %687, 110592
  %688 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1506.i
  %ptrTypeCast1522.i = bitcast double addrspace(1)* %688 to <16 x double> addrspace(1)*
  %689 = load <16 x double> addrspace(1)* %ptrTypeCast1522.i, align 8
  %690 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %691 = load i64* %690, align 8
  %692 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %693 = load i64* %692, align 8
  %694 = add i64 %691, %693
  %extract1525.i = add i64 %694, 331776
  %695 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1525.i
  %ptrTypeCast1541.i = bitcast double addrspace(1)* %695 to <16 x double> addrspace(1)*
  %696 = load <16 x double> addrspace(1)* %ptrTypeCast1541.i, align 8
  %697 = fmul <16 x double> %689, %696
  %698 = fmul <16 x double> %697, %49
  %699 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %700 = load i64* %699, align 8
  %701 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %702 = load i64* %701, align 8
  %703 = add i64 %700, %702
  %extract1544.i = add i64 %703, 663552
  %704 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1544.i
  %ptrTypeCast1560.i = bitcast double addrspace(1)* %704 to <16 x double> addrspace(1)*
  %705 = load <16 x double> addrspace(1)* %ptrTypeCast1560.i, align 8
  %706 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %705
  %707 = fmul <16 x double> %698, %706
  %extract1580.i = extractelement <16 x double> %707, i32 0
  %extract1581.i = extractelement <16 x double> %707, i32 1
  %extract1582.i = extractelement <16 x double> %707, i32 2
  %extract1583.i = extractelement <16 x double> %707, i32 3
  %extract1584.i = extractelement <16 x double> %707, i32 4
  %extract1585.i = extractelement <16 x double> %707, i32 5
  %extract1586.i = extractelement <16 x double> %707, i32 6
  %extract1587.i = extractelement <16 x double> %707, i32 7
  %extract1588.i = extractelement <16 x double> %707, i32 8
  %extract1589.i = extractelement <16 x double> %707, i32 9
  %extract1590.i = extractelement <16 x double> %707, i32 10
  %extract1591.i = extractelement <16 x double> %707, i32 11
  %extract1592.i = extractelement <16 x double> %707, i32 12
  %extract1593.i = extractelement <16 x double> %707, i32 13
  %extract1594.i = extractelement <16 x double> %707, i32 14
  %extract1595.i = extractelement <16 x double> %707, i32 15
  %708 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %709 = load i64* %708, align 8
  %710 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %711 = load i64* %710, align 8
  %712 = add i64 %709, %711
  %extract1563.i = add i64 %712, 1216512
  %713 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1563.i
  %ptrTypeCast1579.i = bitcast double addrspace(1)* %713 to <16 x double> addrspace(1)*
  %714 = load <16 x double> addrspace(1)* %ptrTypeCast1579.i, align 8
  %715 = call double @_Z4fmindd(double %extract1580.i, double 1.000000e+300) nounwind
  %716 = call double @_Z4fmindd(double %extract1581.i, double 1.000000e+300) nounwind
  %717 = call double @_Z4fmindd(double %extract1582.i, double 1.000000e+300) nounwind
  %718 = call double @_Z4fmindd(double %extract1583.i, double 1.000000e+300) nounwind
  %719 = call double @_Z4fmindd(double %extract1584.i, double 1.000000e+300) nounwind
  %720 = call double @_Z4fmindd(double %extract1585.i, double 1.000000e+300) nounwind
  %721 = call double @_Z4fmindd(double %extract1586.i, double 1.000000e+300) nounwind
  %722 = call double @_Z4fmindd(double %extract1587.i, double 1.000000e+300) nounwind
  %723 = call double @_Z4fmindd(double %extract1588.i, double 1.000000e+300) nounwind
  %724 = call double @_Z4fmindd(double %extract1589.i, double 1.000000e+300) nounwind
  %725 = call double @_Z4fmindd(double %extract1590.i, double 1.000000e+300) nounwind
  %726 = call double @_Z4fmindd(double %extract1591.i, double 1.000000e+300) nounwind
  %727 = call double @_Z4fmindd(double %extract1592.i, double 1.000000e+300) nounwind
  %728 = call double @_Z4fmindd(double %extract1593.i, double 1.000000e+300) nounwind
  %729 = call double @_Z4fmindd(double %extract1594.i, double 1.000000e+300) nounwind
  %730 = call double @_Z4fmindd(double %extract1595.i, double 1.000000e+300) nounwind
  %temp.vect1596.i = insertelement <16 x double> undef, double %715, i32 0
  %temp.vect1597.i = insertelement <16 x double> %temp.vect1596.i, double %716, i32 1
  %temp.vect1598.i = insertelement <16 x double> %temp.vect1597.i, double %717, i32 2
  %temp.vect1599.i = insertelement <16 x double> %temp.vect1598.i, double %718, i32 3
  %temp.vect1600.i = insertelement <16 x double> %temp.vect1599.i, double %719, i32 4
  %temp.vect1601.i = insertelement <16 x double> %temp.vect1600.i, double %720, i32 5
  %temp.vect1602.i = insertelement <16 x double> %temp.vect1601.i, double %721, i32 6
  %temp.vect1603.i = insertelement <16 x double> %temp.vect1602.i, double %722, i32 7
  %temp.vect1604.i = insertelement <16 x double> %temp.vect1603.i, double %723, i32 8
  %temp.vect1605.i = insertelement <16 x double> %temp.vect1604.i, double %724, i32 9
  %temp.vect1606.i = insertelement <16 x double> %temp.vect1605.i, double %725, i32 10
  %temp.vect1607.i = insertelement <16 x double> %temp.vect1606.i, double %726, i32 11
  %temp.vect1608.i = insertelement <16 x double> %temp.vect1607.i, double %727, i32 12
  %temp.vect1609.i = insertelement <16 x double> %temp.vect1608.i, double %728, i32 13
  %temp.vect1610.i = insertelement <16 x double> %temp.vect1609.i, double %729, i32 14
  %temp.vect1611.i = insertelement <16 x double> %temp.vect1610.i, double %730, i32 15
  %731 = fmul <16 x double> %714, %temp.vect1611.i
  %732 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %733 = load i64* %732, align 8
  %734 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %735 = load i64* %734, align 8
  %736 = add i64 %733, %735
  %extract1614.i = add i64 %736, 1216512
  %737 = getelementptr inbounds double addrspace(1)* %7, i64 %extract1614.i
  %ptrTypeCast1630.i = bitcast double addrspace(1)* %737 to <16 x double> addrspace(1)*
  store <16 x double> %731, <16 x double> addrspace(1)* %ptrTypeCast1630.i, align 8
  %738 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %739 = load i64* %738, align 8
  %740 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %741 = load i64* %740, align 8
  %742 = add i64 %739, %741
  %extract1633.i = add i64 %742, 110592
  %743 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1633.i
  %ptrTypeCast1649.i = bitcast double addrspace(1)* %743 to <16 x double> addrspace(1)*
  %744 = load <16 x double> addrspace(1)* %ptrTypeCast1649.i, align 8
  %745 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %746 = load i64* %745, align 8
  %747 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %748 = load i64* %747, align 8
  %749 = add i64 %746, %748
  %extract1652.i = add i64 %749, 331776
  %750 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1652.i
  %ptrTypeCast1668.i = bitcast double addrspace(1)* %750 to <16 x double> addrspace(1)*
  %751 = load <16 x double> addrspace(1)* %ptrTypeCast1668.i, align 8
  %752 = fmul <16 x double> %744, %751
  %753 = fmul <16 x double> %752, %49
  %754 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %755 = load i64* %754, align 8
  %756 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %757 = load i64* %756, align 8
  %758 = add i64 %755, %757
  %extract1671.i = add i64 %758, 663552
  %759 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1671.i
  %ptrTypeCast1687.i = bitcast double addrspace(1)* %759 to <16 x double> addrspace(1)*
  %760 = load <16 x double> addrspace(1)* %ptrTypeCast1687.i, align 8
  %761 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %760
  %762 = fmul <16 x double> %753, %761
  %extract1707.i = extractelement <16 x double> %762, i32 0
  %extract1708.i = extractelement <16 x double> %762, i32 1
  %extract1709.i = extractelement <16 x double> %762, i32 2
  %extract1710.i = extractelement <16 x double> %762, i32 3
  %extract1711.i = extractelement <16 x double> %762, i32 4
  %extract1712.i = extractelement <16 x double> %762, i32 5
  %extract1713.i = extractelement <16 x double> %762, i32 6
  %extract1714.i = extractelement <16 x double> %762, i32 7
  %extract1715.i = extractelement <16 x double> %762, i32 8
  %extract1716.i = extractelement <16 x double> %762, i32 9
  %extract1717.i = extractelement <16 x double> %762, i32 10
  %extract1718.i = extractelement <16 x double> %762, i32 11
  %extract1719.i = extractelement <16 x double> %762, i32 12
  %extract1720.i = extractelement <16 x double> %762, i32 13
  %extract1721.i = extractelement <16 x double> %762, i32 14
  %extract1722.i = extractelement <16 x double> %762, i32 15
  %763 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %764 = load i64* %763, align 8
  %765 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %766 = load i64* %765, align 8
  %767 = add i64 %764, %766
  %extract1690.i = add i64 %767, 1327104
  %768 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1690.i
  %ptrTypeCast1706.i = bitcast double addrspace(1)* %768 to <16 x double> addrspace(1)*
  %769 = load <16 x double> addrspace(1)* %ptrTypeCast1706.i, align 8
  %770 = call double @_Z4fmindd(double %extract1707.i, double 1.000000e+300) nounwind
  %771 = call double @_Z4fmindd(double %extract1708.i, double 1.000000e+300) nounwind
  %772 = call double @_Z4fmindd(double %extract1709.i, double 1.000000e+300) nounwind
  %773 = call double @_Z4fmindd(double %extract1710.i, double 1.000000e+300) nounwind
  %774 = call double @_Z4fmindd(double %extract1711.i, double 1.000000e+300) nounwind
  %775 = call double @_Z4fmindd(double %extract1712.i, double 1.000000e+300) nounwind
  %776 = call double @_Z4fmindd(double %extract1713.i, double 1.000000e+300) nounwind
  %777 = call double @_Z4fmindd(double %extract1714.i, double 1.000000e+300) nounwind
  %778 = call double @_Z4fmindd(double %extract1715.i, double 1.000000e+300) nounwind
  %779 = call double @_Z4fmindd(double %extract1716.i, double 1.000000e+300) nounwind
  %780 = call double @_Z4fmindd(double %extract1717.i, double 1.000000e+300) nounwind
  %781 = call double @_Z4fmindd(double %extract1718.i, double 1.000000e+300) nounwind
  %782 = call double @_Z4fmindd(double %extract1719.i, double 1.000000e+300) nounwind
  %783 = call double @_Z4fmindd(double %extract1720.i, double 1.000000e+300) nounwind
  %784 = call double @_Z4fmindd(double %extract1721.i, double 1.000000e+300) nounwind
  %785 = call double @_Z4fmindd(double %extract1722.i, double 1.000000e+300) nounwind
  %temp.vect1723.i = insertelement <16 x double> undef, double %770, i32 0
  %temp.vect1724.i = insertelement <16 x double> %temp.vect1723.i, double %771, i32 1
  %temp.vect1725.i = insertelement <16 x double> %temp.vect1724.i, double %772, i32 2
  %temp.vect1726.i = insertelement <16 x double> %temp.vect1725.i, double %773, i32 3
  %temp.vect1727.i = insertelement <16 x double> %temp.vect1726.i, double %774, i32 4
  %temp.vect1728.i = insertelement <16 x double> %temp.vect1727.i, double %775, i32 5
  %temp.vect1729.i = insertelement <16 x double> %temp.vect1728.i, double %776, i32 6
  %temp.vect1730.i = insertelement <16 x double> %temp.vect1729.i, double %777, i32 7
  %temp.vect1731.i = insertelement <16 x double> %temp.vect1730.i, double %778, i32 8
  %temp.vect1732.i = insertelement <16 x double> %temp.vect1731.i, double %779, i32 9
  %temp.vect1733.i = insertelement <16 x double> %temp.vect1732.i, double %780, i32 10
  %temp.vect1734.i = insertelement <16 x double> %temp.vect1733.i, double %781, i32 11
  %temp.vect1735.i = insertelement <16 x double> %temp.vect1734.i, double %782, i32 12
  %temp.vect1736.i = insertelement <16 x double> %temp.vect1735.i, double %783, i32 13
  %temp.vect1737.i = insertelement <16 x double> %temp.vect1736.i, double %784, i32 14
  %temp.vect1738.i = insertelement <16 x double> %temp.vect1737.i, double %785, i32 15
  %786 = fmul <16 x double> %769, %temp.vect1738.i
  %787 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %788 = load i64* %787, align 8
  %789 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %790 = load i64* %789, align 8
  %791 = add i64 %788, %790
  %extract1741.i = add i64 %791, 1327104
  %792 = getelementptr inbounds double addrspace(1)* %7, i64 %extract1741.i
  %ptrTypeCast1757.i = bitcast double addrspace(1)* %792 to <16 x double> addrspace(1)*
  store <16 x double> %786, <16 x double> addrspace(1)* %ptrTypeCast1757.i, align 8
  %793 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %794 = load i64* %793, align 8
  %795 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %796 = load i64* %795, align 8
  %797 = add i64 %794, %796
  %extract1760.i = add i64 %797, 110592
  %798 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1760.i
  %ptrTypeCast1776.i = bitcast double addrspace(1)* %798 to <16 x double> addrspace(1)*
  %799 = load <16 x double> addrspace(1)* %ptrTypeCast1776.i, align 8
  %800 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %801 = load i64* %800, align 8
  %802 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %803 = load i64* %802, align 8
  %804 = add i64 %801, %803
  %extract1779.i = add i64 %804, 331776
  %805 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1779.i
  %ptrTypeCast1795.i = bitcast double addrspace(1)* %805 to <16 x double> addrspace(1)*
  %806 = load <16 x double> addrspace(1)* %ptrTypeCast1795.i, align 8
  %807 = fmul <16 x double> %799, %806
  %808 = fmul <16 x double> %807, %49
  %809 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %810 = load i64* %809, align 8
  %811 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %812 = load i64* %811, align 8
  %813 = add i64 %810, %812
  %extract1798.i = add i64 %813, 663552
  %814 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1798.i
  %ptrTypeCast1814.i = bitcast double addrspace(1)* %814 to <16 x double> addrspace(1)*
  %815 = load <16 x double> addrspace(1)* %ptrTypeCast1814.i, align 8
  %816 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %815
  %817 = fmul <16 x double> %808, %816
  %extract1834.i = extractelement <16 x double> %817, i32 0
  %extract1835.i = extractelement <16 x double> %817, i32 1
  %extract1836.i = extractelement <16 x double> %817, i32 2
  %extract1837.i = extractelement <16 x double> %817, i32 3
  %extract1838.i = extractelement <16 x double> %817, i32 4
  %extract1839.i = extractelement <16 x double> %817, i32 5
  %extract1840.i = extractelement <16 x double> %817, i32 6
  %extract1841.i = extractelement <16 x double> %817, i32 7
  %extract1842.i = extractelement <16 x double> %817, i32 8
  %extract1843.i = extractelement <16 x double> %817, i32 9
  %extract1844.i = extractelement <16 x double> %817, i32 10
  %extract1845.i = extractelement <16 x double> %817, i32 11
  %extract1846.i = extractelement <16 x double> %817, i32 12
  %extract1847.i = extractelement <16 x double> %817, i32 13
  %extract1848.i = extractelement <16 x double> %817, i32 14
  %extract1849.i = extractelement <16 x double> %817, i32 15
  %818 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %819 = load i64* %818, align 8
  %820 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %821 = load i64* %820, align 8
  %822 = add i64 %819, %821
  %extract1817.i = add i64 %822, 1437696
  %823 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1817.i
  %ptrTypeCast1833.i = bitcast double addrspace(1)* %823 to <16 x double> addrspace(1)*
  %824 = load <16 x double> addrspace(1)* %ptrTypeCast1833.i, align 8
  %825 = call double @_Z4fmindd(double %extract1834.i, double 1.000000e+300) nounwind
  %826 = call double @_Z4fmindd(double %extract1835.i, double 1.000000e+300) nounwind
  %827 = call double @_Z4fmindd(double %extract1836.i, double 1.000000e+300) nounwind
  %828 = call double @_Z4fmindd(double %extract1837.i, double 1.000000e+300) nounwind
  %829 = call double @_Z4fmindd(double %extract1838.i, double 1.000000e+300) nounwind
  %830 = call double @_Z4fmindd(double %extract1839.i, double 1.000000e+300) nounwind
  %831 = call double @_Z4fmindd(double %extract1840.i, double 1.000000e+300) nounwind
  %832 = call double @_Z4fmindd(double %extract1841.i, double 1.000000e+300) nounwind
  %833 = call double @_Z4fmindd(double %extract1842.i, double 1.000000e+300) nounwind
  %834 = call double @_Z4fmindd(double %extract1843.i, double 1.000000e+300) nounwind
  %835 = call double @_Z4fmindd(double %extract1844.i, double 1.000000e+300) nounwind
  %836 = call double @_Z4fmindd(double %extract1845.i, double 1.000000e+300) nounwind
  %837 = call double @_Z4fmindd(double %extract1846.i, double 1.000000e+300) nounwind
  %838 = call double @_Z4fmindd(double %extract1847.i, double 1.000000e+300) nounwind
  %839 = call double @_Z4fmindd(double %extract1848.i, double 1.000000e+300) nounwind
  %840 = call double @_Z4fmindd(double %extract1849.i, double 1.000000e+300) nounwind
  %temp.vect1850.i = insertelement <16 x double> undef, double %825, i32 0
  %temp.vect1851.i = insertelement <16 x double> %temp.vect1850.i, double %826, i32 1
  %temp.vect1852.i = insertelement <16 x double> %temp.vect1851.i, double %827, i32 2
  %temp.vect1853.i = insertelement <16 x double> %temp.vect1852.i, double %828, i32 3
  %temp.vect1854.i = insertelement <16 x double> %temp.vect1853.i, double %829, i32 4
  %temp.vect1855.i = insertelement <16 x double> %temp.vect1854.i, double %830, i32 5
  %temp.vect1856.i = insertelement <16 x double> %temp.vect1855.i, double %831, i32 6
  %temp.vect1857.i = insertelement <16 x double> %temp.vect1856.i, double %832, i32 7
  %temp.vect1858.i = insertelement <16 x double> %temp.vect1857.i, double %833, i32 8
  %temp.vect1859.i = insertelement <16 x double> %temp.vect1858.i, double %834, i32 9
  %temp.vect1860.i = insertelement <16 x double> %temp.vect1859.i, double %835, i32 10
  %temp.vect1861.i = insertelement <16 x double> %temp.vect1860.i, double %836, i32 11
  %temp.vect1862.i = insertelement <16 x double> %temp.vect1861.i, double %837, i32 12
  %temp.vect1863.i = insertelement <16 x double> %temp.vect1862.i, double %838, i32 13
  %temp.vect1864.i = insertelement <16 x double> %temp.vect1863.i, double %839, i32 14
  %temp.vect1865.i = insertelement <16 x double> %temp.vect1864.i, double %840, i32 15
  %841 = fmul <16 x double> %824, %temp.vect1865.i
  %842 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %843 = load i64* %842, align 8
  %844 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %845 = load i64* %844, align 8
  %846 = add i64 %843, %845
  %extract1868.i = add i64 %846, 1437696
  %847 = getelementptr inbounds double addrspace(1)* %7, i64 %extract1868.i
  %ptrTypeCast1884.i = bitcast double addrspace(1)* %847 to <16 x double> addrspace(1)*
  store <16 x double> %841, <16 x double> addrspace(1)* %ptrTypeCast1884.i, align 8
  %848 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %849 = load i64* %848, align 8
  %850 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %851 = load i64* %850, align 8
  %852 = add i64 %849, %851
  %extract1887.i = add i64 %852, 110592
  %853 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1887.i
  %ptrTypeCast1903.i = bitcast double addrspace(1)* %853 to <16 x double> addrspace(1)*
  %854 = load <16 x double> addrspace(1)* %ptrTypeCast1903.i, align 8
  %855 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %856 = load i64* %855, align 8
  %857 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %858 = load i64* %857, align 8
  %859 = add i64 %856, %858
  %extract1906.i = add i64 %859, 331776
  %860 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1906.i
  %ptrTypeCast1922.i = bitcast double addrspace(1)* %860 to <16 x double> addrspace(1)*
  %861 = load <16 x double> addrspace(1)* %ptrTypeCast1922.i, align 8
  %862 = fmul <16 x double> %854, %861
  %863 = fmul <16 x double> %862, %49
  %864 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %865 = load i64* %864, align 8
  %866 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %867 = load i64* %866, align 8
  %868 = add i64 %865, %867
  %extract1925.i = add i64 %868, 663552
  %869 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1925.i
  %ptrTypeCast1941.i = bitcast double addrspace(1)* %869 to <16 x double> addrspace(1)*
  %870 = load <16 x double> addrspace(1)* %ptrTypeCast1941.i, align 8
  %871 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %870
  %872 = fmul <16 x double> %863, %871
  %extract1961.i = extractelement <16 x double> %872, i32 0
  %extract1962.i = extractelement <16 x double> %872, i32 1
  %extract1963.i = extractelement <16 x double> %872, i32 2
  %extract1964.i = extractelement <16 x double> %872, i32 3
  %extract1965.i = extractelement <16 x double> %872, i32 4
  %extract1966.i = extractelement <16 x double> %872, i32 5
  %extract1967.i = extractelement <16 x double> %872, i32 6
  %extract1968.i = extractelement <16 x double> %872, i32 7
  %extract1969.i = extractelement <16 x double> %872, i32 8
  %extract1970.i = extractelement <16 x double> %872, i32 9
  %extract1971.i = extractelement <16 x double> %872, i32 10
  %extract1972.i = extractelement <16 x double> %872, i32 11
  %extract1973.i = extractelement <16 x double> %872, i32 12
  %extract1974.i = extractelement <16 x double> %872, i32 13
  %extract1975.i = extractelement <16 x double> %872, i32 14
  %extract1976.i = extractelement <16 x double> %872, i32 15
  %873 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %874 = load i64* %873, align 8
  %875 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %876 = load i64* %875, align 8
  %877 = add i64 %874, %876
  %extract1944.i = add i64 %877, 1548288
  %878 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1944.i
  %ptrTypeCast1960.i = bitcast double addrspace(1)* %878 to <16 x double> addrspace(1)*
  %879 = load <16 x double> addrspace(1)* %ptrTypeCast1960.i, align 8
  %880 = call double @_Z4fmindd(double %extract1961.i, double 1.000000e+300) nounwind
  %881 = call double @_Z4fmindd(double %extract1962.i, double 1.000000e+300) nounwind
  %882 = call double @_Z4fmindd(double %extract1963.i, double 1.000000e+300) nounwind
  %883 = call double @_Z4fmindd(double %extract1964.i, double 1.000000e+300) nounwind
  %884 = call double @_Z4fmindd(double %extract1965.i, double 1.000000e+300) nounwind
  %885 = call double @_Z4fmindd(double %extract1966.i, double 1.000000e+300) nounwind
  %886 = call double @_Z4fmindd(double %extract1967.i, double 1.000000e+300) nounwind
  %887 = call double @_Z4fmindd(double %extract1968.i, double 1.000000e+300) nounwind
  %888 = call double @_Z4fmindd(double %extract1969.i, double 1.000000e+300) nounwind
  %889 = call double @_Z4fmindd(double %extract1970.i, double 1.000000e+300) nounwind
  %890 = call double @_Z4fmindd(double %extract1971.i, double 1.000000e+300) nounwind
  %891 = call double @_Z4fmindd(double %extract1972.i, double 1.000000e+300) nounwind
  %892 = call double @_Z4fmindd(double %extract1973.i, double 1.000000e+300) nounwind
  %893 = call double @_Z4fmindd(double %extract1974.i, double 1.000000e+300) nounwind
  %894 = call double @_Z4fmindd(double %extract1975.i, double 1.000000e+300) nounwind
  %895 = call double @_Z4fmindd(double %extract1976.i, double 1.000000e+300) nounwind
  %temp.vect1977.i = insertelement <16 x double> undef, double %880, i32 0
  %temp.vect1978.i = insertelement <16 x double> %temp.vect1977.i, double %881, i32 1
  %temp.vect1979.i = insertelement <16 x double> %temp.vect1978.i, double %882, i32 2
  %temp.vect1980.i = insertelement <16 x double> %temp.vect1979.i, double %883, i32 3
  %temp.vect1981.i = insertelement <16 x double> %temp.vect1980.i, double %884, i32 4
  %temp.vect1982.i = insertelement <16 x double> %temp.vect1981.i, double %885, i32 5
  %temp.vect1983.i = insertelement <16 x double> %temp.vect1982.i, double %886, i32 6
  %temp.vect1984.i = insertelement <16 x double> %temp.vect1983.i, double %887, i32 7
  %temp.vect1985.i = insertelement <16 x double> %temp.vect1984.i, double %888, i32 8
  %temp.vect1986.i = insertelement <16 x double> %temp.vect1985.i, double %889, i32 9
  %temp.vect1987.i = insertelement <16 x double> %temp.vect1986.i, double %890, i32 10
  %temp.vect1988.i = insertelement <16 x double> %temp.vect1987.i, double %891, i32 11
  %temp.vect1989.i = insertelement <16 x double> %temp.vect1988.i, double %892, i32 12
  %temp.vect1990.i = insertelement <16 x double> %temp.vect1989.i, double %893, i32 13
  %temp.vect1991.i = insertelement <16 x double> %temp.vect1990.i, double %894, i32 14
  %temp.vect1992.i = insertelement <16 x double> %temp.vect1991.i, double %895, i32 15
  %896 = fmul <16 x double> %879, %temp.vect1992.i
  %897 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %898 = load i64* %897, align 8
  %899 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %900 = load i64* %899, align 8
  %901 = add i64 %898, %900
  %extract1995.i = add i64 %901, 1548288
  %902 = getelementptr inbounds double addrspace(1)* %7, i64 %extract1995.i
  %ptrTypeCast2011.i = bitcast double addrspace(1)* %902 to <16 x double> addrspace(1)*
  store <16 x double> %896, <16 x double> addrspace(1)* %ptrTypeCast2011.i, align 8
  %903 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %904 = load i64* %903, align 8
  %905 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %906 = load i64* %905, align 8
  %907 = add i64 %904, %906
  %extract2014.i = add i64 %907, 442368
  %908 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2014.i
  %ptrTypeCast2030.i = bitcast double addrspace(1)* %908 to <16 x double> addrspace(1)*
  %909 = load <16 x double> addrspace(1)* %ptrTypeCast2030.i, align 8
  %910 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %911 = load i64* %910, align 8
  %912 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %913 = load i64* %912, align 8
  %914 = add i64 %911, %913
  %extract2033.i = add i64 %914, 442368
  %915 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2033.i
  %ptrTypeCast2049.i = bitcast double addrspace(1)* %915 to <16 x double> addrspace(1)*
  %916 = load <16 x double> addrspace(1)* %ptrTypeCast2049.i, align 8
  %917 = fmul <16 x double> %909, %916
  %918 = fmul <16 x double> %917, %49
  %919 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %920 = load i64* %919, align 8
  %921 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %922 = load i64* %921, align 8
  %923 = add i64 %920, %922
  %extract2052.i = add i64 %923, 774144
  %924 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2052.i
  %ptrTypeCast2068.i = bitcast double addrspace(1)* %924 to <16 x double> addrspace(1)*
  %925 = load <16 x double> addrspace(1)* %ptrTypeCast2068.i, align 8
  %926 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %925
  %927 = fmul <16 x double> %918, %926
  %extract2088.i = extractelement <16 x double> %927, i32 0
  %extract2089.i = extractelement <16 x double> %927, i32 1
  %extract2090.i = extractelement <16 x double> %927, i32 2
  %extract2091.i = extractelement <16 x double> %927, i32 3
  %extract2092.i = extractelement <16 x double> %927, i32 4
  %extract2093.i = extractelement <16 x double> %927, i32 5
  %extract2094.i = extractelement <16 x double> %927, i32 6
  %extract2095.i = extractelement <16 x double> %927, i32 7
  %extract2096.i = extractelement <16 x double> %927, i32 8
  %extract2097.i = extractelement <16 x double> %927, i32 9
  %extract2098.i = extractelement <16 x double> %927, i32 10
  %extract2099.i = extractelement <16 x double> %927, i32 11
  %extract2100.i = extractelement <16 x double> %927, i32 12
  %extract2101.i = extractelement <16 x double> %927, i32 13
  %extract2102.i = extractelement <16 x double> %927, i32 14
  %extract2103.i = extractelement <16 x double> %927, i32 15
  %928 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %929 = load i64* %928, align 8
  %930 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %931 = load i64* %930, align 8
  %932 = add i64 %929, %931
  %extract2071.i = add i64 %932, 1658880
  %933 = getelementptr inbounds double addrspace(1)* %4, i64 %extract2071.i
  %ptrTypeCast2087.i = bitcast double addrspace(1)* %933 to <16 x double> addrspace(1)*
  %934 = load <16 x double> addrspace(1)* %ptrTypeCast2087.i, align 8
  %935 = call double @_Z4fmindd(double %extract2088.i, double 1.000000e+300) nounwind
  %936 = call double @_Z4fmindd(double %extract2089.i, double 1.000000e+300) nounwind
  %937 = call double @_Z4fmindd(double %extract2090.i, double 1.000000e+300) nounwind
  %938 = call double @_Z4fmindd(double %extract2091.i, double 1.000000e+300) nounwind
  %939 = call double @_Z4fmindd(double %extract2092.i, double 1.000000e+300) nounwind
  %940 = call double @_Z4fmindd(double %extract2093.i, double 1.000000e+300) nounwind
  %941 = call double @_Z4fmindd(double %extract2094.i, double 1.000000e+300) nounwind
  %942 = call double @_Z4fmindd(double %extract2095.i, double 1.000000e+300) nounwind
  %943 = call double @_Z4fmindd(double %extract2096.i, double 1.000000e+300) nounwind
  %944 = call double @_Z4fmindd(double %extract2097.i, double 1.000000e+300) nounwind
  %945 = call double @_Z4fmindd(double %extract2098.i, double 1.000000e+300) nounwind
  %946 = call double @_Z4fmindd(double %extract2099.i, double 1.000000e+300) nounwind
  %947 = call double @_Z4fmindd(double %extract2100.i, double 1.000000e+300) nounwind
  %948 = call double @_Z4fmindd(double %extract2101.i, double 1.000000e+300) nounwind
  %949 = call double @_Z4fmindd(double %extract2102.i, double 1.000000e+300) nounwind
  %950 = call double @_Z4fmindd(double %extract2103.i, double 1.000000e+300) nounwind
  %temp.vect2104.i = insertelement <16 x double> undef, double %935, i32 0
  %temp.vect2105.i = insertelement <16 x double> %temp.vect2104.i, double %936, i32 1
  %temp.vect2106.i = insertelement <16 x double> %temp.vect2105.i, double %937, i32 2
  %temp.vect2107.i = insertelement <16 x double> %temp.vect2106.i, double %938, i32 3
  %temp.vect2108.i = insertelement <16 x double> %temp.vect2107.i, double %939, i32 4
  %temp.vect2109.i = insertelement <16 x double> %temp.vect2108.i, double %940, i32 5
  %temp.vect2110.i = insertelement <16 x double> %temp.vect2109.i, double %941, i32 6
  %temp.vect2111.i = insertelement <16 x double> %temp.vect2110.i, double %942, i32 7
  %temp.vect2112.i = insertelement <16 x double> %temp.vect2111.i, double %943, i32 8
  %temp.vect2113.i = insertelement <16 x double> %temp.vect2112.i, double %944, i32 9
  %temp.vect2114.i = insertelement <16 x double> %temp.vect2113.i, double %945, i32 10
  %temp.vect2115.i = insertelement <16 x double> %temp.vect2114.i, double %946, i32 11
  %temp.vect2116.i = insertelement <16 x double> %temp.vect2115.i, double %947, i32 12
  %temp.vect2117.i = insertelement <16 x double> %temp.vect2116.i, double %948, i32 13
  %temp.vect2118.i = insertelement <16 x double> %temp.vect2117.i, double %949, i32 14
  %temp.vect2119.i = insertelement <16 x double> %temp.vect2118.i, double %950, i32 15
  %951 = fmul <16 x double> %934, %temp.vect2119.i
  %952 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %953 = load i64* %952, align 8
  %954 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %955 = load i64* %954, align 8
  %956 = add i64 %953, %955
  %extract2122.i = add i64 %956, 1658880
  %957 = getelementptr inbounds double addrspace(1)* %7, i64 %extract2122.i
  %ptrTypeCast2138.i = bitcast double addrspace(1)* %957 to <16 x double> addrspace(1)*
  store <16 x double> %951, <16 x double> addrspace(1)* %ptrTypeCast2138.i, align 8
  %958 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %959 = load i64* %958, align 8
  %960 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %961 = load i64* %960, align 8
  %962 = add i64 %959, %961
  %extract2141.i = add i64 %962, 110592
  %963 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2141.i
  %ptrTypeCast2157.i = bitcast double addrspace(1)* %963 to <16 x double> addrspace(1)*
  %964 = load <16 x double> addrspace(1)* %ptrTypeCast2157.i, align 8
  %965 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %966 = load i64* %965, align 8
  %967 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %968 = load i64* %967, align 8
  %969 = add i64 %966, %968
  %extract2160.i = add i64 %969, 663552
  %970 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2160.i
  %ptrTypeCast2176.i = bitcast double addrspace(1)* %970 to <16 x double> addrspace(1)*
  %971 = load <16 x double> addrspace(1)* %ptrTypeCast2176.i, align 8
  %972 = fmul <16 x double> %964, %971
  %973 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %974 = load i64* %973, align 8
  %975 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %976 = load i64* %975, align 8
  %977 = add i64 %974, %976
  %extract2179.i = add i64 %977, 221184
  %978 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2179.i
  %ptrTypeCast2195.i = bitcast double addrspace(1)* %978 to <16 x double> addrspace(1)*
  %979 = load <16 x double> addrspace(1)* %ptrTypeCast2195.i, align 8
  %980 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %981 = load i64* %980, align 8
  %982 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %983 = load i64* %982, align 8
  %984 = add i64 %981, %983
  %extract2198.i = add i64 %984, 552960
  %985 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2198.i
  %ptrTypeCast2214.i = bitcast double addrspace(1)* %985 to <16 x double> addrspace(1)*
  %986 = load <16 x double> addrspace(1)* %ptrTypeCast2214.i, align 8
  %987 = fmul <16 x double> %979, %986
  %988 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %987
  %989 = fmul <16 x double> %972, %988
  %extract2234.i = extractelement <16 x double> %989, i32 0
  %extract2235.i = extractelement <16 x double> %989, i32 1
  %extract2236.i = extractelement <16 x double> %989, i32 2
  %extract2237.i = extractelement <16 x double> %989, i32 3
  %extract2238.i = extractelement <16 x double> %989, i32 4
  %extract2239.i = extractelement <16 x double> %989, i32 5
  %extract2240.i = extractelement <16 x double> %989, i32 6
  %extract2241.i = extractelement <16 x double> %989, i32 7
  %extract2242.i = extractelement <16 x double> %989, i32 8
  %extract2243.i = extractelement <16 x double> %989, i32 9
  %extract2244.i = extractelement <16 x double> %989, i32 10
  %extract2245.i = extractelement <16 x double> %989, i32 11
  %extract2246.i = extractelement <16 x double> %989, i32 12
  %extract2247.i = extractelement <16 x double> %989, i32 13
  %extract2248.i = extractelement <16 x double> %989, i32 14
  %extract2249.i = extractelement <16 x double> %989, i32 15
  %990 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %991 = load i64* %990, align 8
  %992 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %993 = load i64* %992, align 8
  %994 = add i64 %991, %993
  %extract2217.i = add i64 %994, 1769472
  %995 = getelementptr inbounds double addrspace(1)* %4, i64 %extract2217.i
  %ptrTypeCast2233.i = bitcast double addrspace(1)* %995 to <16 x double> addrspace(1)*
  %996 = load <16 x double> addrspace(1)* %ptrTypeCast2233.i, align 8
  %997 = call double @_Z4fmindd(double %extract2234.i, double 1.000000e+300) nounwind
  %998 = call double @_Z4fmindd(double %extract2235.i, double 1.000000e+300) nounwind
  %999 = call double @_Z4fmindd(double %extract2236.i, double 1.000000e+300) nounwind
  %1000 = call double @_Z4fmindd(double %extract2237.i, double 1.000000e+300) nounwind
  %1001 = call double @_Z4fmindd(double %extract2238.i, double 1.000000e+300) nounwind
  %1002 = call double @_Z4fmindd(double %extract2239.i, double 1.000000e+300) nounwind
  %1003 = call double @_Z4fmindd(double %extract2240.i, double 1.000000e+300) nounwind
  %1004 = call double @_Z4fmindd(double %extract2241.i, double 1.000000e+300) nounwind
  %1005 = call double @_Z4fmindd(double %extract2242.i, double 1.000000e+300) nounwind
  %1006 = call double @_Z4fmindd(double %extract2243.i, double 1.000000e+300) nounwind
  %1007 = call double @_Z4fmindd(double %extract2244.i, double 1.000000e+300) nounwind
  %1008 = call double @_Z4fmindd(double %extract2245.i, double 1.000000e+300) nounwind
  %1009 = call double @_Z4fmindd(double %extract2246.i, double 1.000000e+300) nounwind
  %1010 = call double @_Z4fmindd(double %extract2247.i, double 1.000000e+300) nounwind
  %1011 = call double @_Z4fmindd(double %extract2248.i, double 1.000000e+300) nounwind
  %1012 = call double @_Z4fmindd(double %extract2249.i, double 1.000000e+300) nounwind
  %temp.vect2250.i = insertelement <16 x double> undef, double %997, i32 0
  %temp.vect2251.i = insertelement <16 x double> %temp.vect2250.i, double %998, i32 1
  %temp.vect2252.i = insertelement <16 x double> %temp.vect2251.i, double %999, i32 2
  %temp.vect2253.i = insertelement <16 x double> %temp.vect2252.i, double %1000, i32 3
  %temp.vect2254.i = insertelement <16 x double> %temp.vect2253.i, double %1001, i32 4
  %temp.vect2255.i = insertelement <16 x double> %temp.vect2254.i, double %1002, i32 5
  %temp.vect2256.i = insertelement <16 x double> %temp.vect2255.i, double %1003, i32 6
  %temp.vect2257.i = insertelement <16 x double> %temp.vect2256.i, double %1004, i32 7
  %temp.vect2258.i = insertelement <16 x double> %temp.vect2257.i, double %1005, i32 8
  %temp.vect2259.i = insertelement <16 x double> %temp.vect2258.i, double %1006, i32 9
  %temp.vect2260.i = insertelement <16 x double> %temp.vect2259.i, double %1007, i32 10
  %temp.vect2261.i = insertelement <16 x double> %temp.vect2260.i, double %1008, i32 11
  %temp.vect2262.i = insertelement <16 x double> %temp.vect2261.i, double %1009, i32 12
  %temp.vect2263.i = insertelement <16 x double> %temp.vect2262.i, double %1010, i32 13
  %temp.vect2264.i = insertelement <16 x double> %temp.vect2263.i, double %1011, i32 14
  %temp.vect2265.i = insertelement <16 x double> %temp.vect2264.i, double %1012, i32 15
  %1013 = fmul <16 x double> %996, %temp.vect2265.i
  %1014 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1015 = load i64* %1014, align 8
  %1016 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1017 = load i64* %1016, align 8
  %1018 = add i64 %1015, %1017
  %extract2268.i = add i64 %1018, 1769472
  %1019 = getelementptr inbounds double addrspace(1)* %7, i64 %extract2268.i
  %ptrTypeCast2284.i = bitcast double addrspace(1)* %1019 to <16 x double> addrspace(1)*
  store <16 x double> %1013, <16 x double> addrspace(1)* %ptrTypeCast2284.i, align 8
  %1020 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1021 = load i64* %1020, align 8
  %1022 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1023 = load i64* %1022, align 8
  %1024 = add i64 %1021, %1023
  %extract2287.i = add i64 %1024, 110592
  %1025 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2287.i
  %ptrTypeCast2303.i = bitcast double addrspace(1)* %1025 to <16 x double> addrspace(1)*
  %1026 = load <16 x double> addrspace(1)* %ptrTypeCast2303.i, align 8
  %1027 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1028 = load i64* %1027, align 8
  %1029 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1030 = load i64* %1029, align 8
  %1031 = add i64 %1028, %1030
  %extract2306.i = add i64 %1031, 663552
  %1032 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2306.i
  %ptrTypeCast2322.i = bitcast double addrspace(1)* %1032 to <16 x double> addrspace(1)*
  %1033 = load <16 x double> addrspace(1)* %ptrTypeCast2322.i, align 8
  %1034 = fmul <16 x double> %1026, %1033
  %1035 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1036 = load i64* %1035, align 8
  %1037 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1038 = load i64* %1037, align 8
  %1039 = add i64 %1036, %1038
  %1040 = getelementptr inbounds double addrspace(1)* %10, i64 %1039
  %ptrTypeCast2341.i = bitcast double addrspace(1)* %1040 to <16 x double> addrspace(1)*
  %1041 = load <16 x double> addrspace(1)* %ptrTypeCast2341.i, align 8
  %1042 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1043 = load i64* %1042, align 8
  %1044 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1045 = load i64* %1044, align 8
  %1046 = add i64 %1043, %1045
  %extract2344.i = add i64 %1046, 331776
  %1047 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2344.i
  %ptrTypeCast2360.i = bitcast double addrspace(1)* %1047 to <16 x double> addrspace(1)*
  %1048 = load <16 x double> addrspace(1)* %ptrTypeCast2360.i, align 8
  %1049 = fmul <16 x double> %1041, %1048
  %1050 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1049
  %1051 = fmul <16 x double> %1034, %1050
  %extract2380.i = extractelement <16 x double> %1051, i32 0
  %extract2381.i = extractelement <16 x double> %1051, i32 1
  %extract2382.i = extractelement <16 x double> %1051, i32 2
  %extract2383.i = extractelement <16 x double> %1051, i32 3
  %extract2384.i = extractelement <16 x double> %1051, i32 4
  %extract2385.i = extractelement <16 x double> %1051, i32 5
  %extract2386.i = extractelement <16 x double> %1051, i32 6
  %extract2387.i = extractelement <16 x double> %1051, i32 7
  %extract2388.i = extractelement <16 x double> %1051, i32 8
  %extract2389.i = extractelement <16 x double> %1051, i32 9
  %extract2390.i = extractelement <16 x double> %1051, i32 10
  %extract2391.i = extractelement <16 x double> %1051, i32 11
  %extract2392.i = extractelement <16 x double> %1051, i32 12
  %extract2393.i = extractelement <16 x double> %1051, i32 13
  %extract2394.i = extractelement <16 x double> %1051, i32 14
  %extract2395.i = extractelement <16 x double> %1051, i32 15
  %1052 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1053 = load i64* %1052, align 8
  %1054 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1055 = load i64* %1054, align 8
  %1056 = add i64 %1053, %1055
  %extract2363.i = add i64 %1056, 1880064
  %1057 = getelementptr inbounds double addrspace(1)* %4, i64 %extract2363.i
  %ptrTypeCast2379.i = bitcast double addrspace(1)* %1057 to <16 x double> addrspace(1)*
  %1058 = load <16 x double> addrspace(1)* %ptrTypeCast2379.i, align 8
  %1059 = call double @_Z4fmindd(double %extract2380.i, double 1.000000e+300) nounwind
  %1060 = call double @_Z4fmindd(double %extract2381.i, double 1.000000e+300) nounwind
  %1061 = call double @_Z4fmindd(double %extract2382.i, double 1.000000e+300) nounwind
  %1062 = call double @_Z4fmindd(double %extract2383.i, double 1.000000e+300) nounwind
  %1063 = call double @_Z4fmindd(double %extract2384.i, double 1.000000e+300) nounwind
  %1064 = call double @_Z4fmindd(double %extract2385.i, double 1.000000e+300) nounwind
  %1065 = call double @_Z4fmindd(double %extract2386.i, double 1.000000e+300) nounwind
  %1066 = call double @_Z4fmindd(double %extract2387.i, double 1.000000e+300) nounwind
  %1067 = call double @_Z4fmindd(double %extract2388.i, double 1.000000e+300) nounwind
  %1068 = call double @_Z4fmindd(double %extract2389.i, double 1.000000e+300) nounwind
  %1069 = call double @_Z4fmindd(double %extract2390.i, double 1.000000e+300) nounwind
  %1070 = call double @_Z4fmindd(double %extract2391.i, double 1.000000e+300) nounwind
  %1071 = call double @_Z4fmindd(double %extract2392.i, double 1.000000e+300) nounwind
  %1072 = call double @_Z4fmindd(double %extract2393.i, double 1.000000e+300) nounwind
  %1073 = call double @_Z4fmindd(double %extract2394.i, double 1.000000e+300) nounwind
  %1074 = call double @_Z4fmindd(double %extract2395.i, double 1.000000e+300) nounwind
  %temp.vect2396.i = insertelement <16 x double> undef, double %1059, i32 0
  %temp.vect2397.i = insertelement <16 x double> %temp.vect2396.i, double %1060, i32 1
  %temp.vect2398.i = insertelement <16 x double> %temp.vect2397.i, double %1061, i32 2
  %temp.vect2399.i = insertelement <16 x double> %temp.vect2398.i, double %1062, i32 3
  %temp.vect2400.i = insertelement <16 x double> %temp.vect2399.i, double %1063, i32 4
  %temp.vect2401.i = insertelement <16 x double> %temp.vect2400.i, double %1064, i32 5
  %temp.vect2402.i = insertelement <16 x double> %temp.vect2401.i, double %1065, i32 6
  %temp.vect2403.i = insertelement <16 x double> %temp.vect2402.i, double %1066, i32 7
  %temp.vect2404.i = insertelement <16 x double> %temp.vect2403.i, double %1067, i32 8
  %temp.vect2405.i = insertelement <16 x double> %temp.vect2404.i, double %1068, i32 9
  %temp.vect2406.i = insertelement <16 x double> %temp.vect2405.i, double %1069, i32 10
  %temp.vect2407.i = insertelement <16 x double> %temp.vect2406.i, double %1070, i32 11
  %temp.vect2408.i = insertelement <16 x double> %temp.vect2407.i, double %1071, i32 12
  %temp.vect2409.i = insertelement <16 x double> %temp.vect2408.i, double %1072, i32 13
  %temp.vect2410.i = insertelement <16 x double> %temp.vect2409.i, double %1073, i32 14
  %temp.vect2411.i = insertelement <16 x double> %temp.vect2410.i, double %1074, i32 15
  %1075 = fmul <16 x double> %1058, %temp.vect2411.i
  %1076 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1077 = load i64* %1076, align 8
  %1078 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1079 = load i64* %1078, align 8
  %1080 = add i64 %1077, %1079
  %extract2414.i = add i64 %1080, 1880064
  %1081 = getelementptr inbounds double addrspace(1)* %7, i64 %extract2414.i
  %ptrTypeCast2430.i = bitcast double addrspace(1)* %1081 to <16 x double> addrspace(1)*
  store <16 x double> %1075, <16 x double> addrspace(1)* %ptrTypeCast2430.i, align 8
  %1082 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1083 = load i64* %1082, align 8
  %1084 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1085 = load i64* %1084, align 8
  %1086 = add i64 %1083, %1085
  %extract2433.i = add i64 %1086, 110592
  %1087 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2433.i
  %ptrTypeCast2449.i = bitcast double addrspace(1)* %1087 to <16 x double> addrspace(1)*
  %1088 = load <16 x double> addrspace(1)* %ptrTypeCast2449.i, align 8
  %1089 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1090 = load i64* %1089, align 8
  %1091 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1092 = load i64* %1091, align 8
  %1093 = add i64 %1090, %1092
  %extract2452.i = add i64 %1093, 663552
  %1094 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2452.i
  %ptrTypeCast2468.i = bitcast double addrspace(1)* %1094 to <16 x double> addrspace(1)*
  %1095 = load <16 x double> addrspace(1)* %ptrTypeCast2468.i, align 8
  %1096 = fmul <16 x double> %1088, %1095
  %1097 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1098 = load i64* %1097, align 8
  %1099 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1100 = load i64* %1099, align 8
  %1101 = add i64 %1098, %1100
  %extract2471.i = add i64 %1101, 442368
  %1102 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2471.i
  %ptrTypeCast2487.i = bitcast double addrspace(1)* %1102 to <16 x double> addrspace(1)*
  %1103 = load <16 x double> addrspace(1)* %ptrTypeCast2487.i, align 8
  %1104 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1105 = load i64* %1104, align 8
  %1106 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1107 = load i64* %1106, align 8
  %1108 = add i64 %1105, %1107
  %extract2490.i = add i64 %1108, 442368
  %1109 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2490.i
  %ptrTypeCast2506.i = bitcast double addrspace(1)* %1109 to <16 x double> addrspace(1)*
  %1110 = load <16 x double> addrspace(1)* %ptrTypeCast2506.i, align 8
  %1111 = fmul <16 x double> %1103, %1110
  %1112 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1111
  %1113 = fmul <16 x double> %1096, %1112
  %extract2526.i = extractelement <16 x double> %1113, i32 0
  %extract2527.i = extractelement <16 x double> %1113, i32 1
  %extract2528.i = extractelement <16 x double> %1113, i32 2
  %extract2529.i = extractelement <16 x double> %1113, i32 3
  %extract2530.i = extractelement <16 x double> %1113, i32 4
  %extract2531.i = extractelement <16 x double> %1113, i32 5
  %extract2532.i = extractelement <16 x double> %1113, i32 6
  %extract2533.i = extractelement <16 x double> %1113, i32 7
  %extract2534.i = extractelement <16 x double> %1113, i32 8
  %extract2535.i = extractelement <16 x double> %1113, i32 9
  %extract2536.i = extractelement <16 x double> %1113, i32 10
  %extract2537.i = extractelement <16 x double> %1113, i32 11
  %extract2538.i = extractelement <16 x double> %1113, i32 12
  %extract2539.i = extractelement <16 x double> %1113, i32 13
  %extract2540.i = extractelement <16 x double> %1113, i32 14
  %extract2541.i = extractelement <16 x double> %1113, i32 15
  %1114 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1115 = load i64* %1114, align 8
  %1116 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1117 = load i64* %1116, align 8
  %1118 = add i64 %1115, %1117
  %extract2509.i = add i64 %1118, 1990656
  %1119 = getelementptr inbounds double addrspace(1)* %4, i64 %extract2509.i
  %ptrTypeCast2525.i = bitcast double addrspace(1)* %1119 to <16 x double> addrspace(1)*
  %1120 = load <16 x double> addrspace(1)* %ptrTypeCast2525.i, align 8
  %1121 = call double @_Z4fmindd(double %extract2526.i, double 1.000000e+300) nounwind
  %1122 = call double @_Z4fmindd(double %extract2527.i, double 1.000000e+300) nounwind
  %1123 = call double @_Z4fmindd(double %extract2528.i, double 1.000000e+300) nounwind
  %1124 = call double @_Z4fmindd(double %extract2529.i, double 1.000000e+300) nounwind
  %1125 = call double @_Z4fmindd(double %extract2530.i, double 1.000000e+300) nounwind
  %1126 = call double @_Z4fmindd(double %extract2531.i, double 1.000000e+300) nounwind
  %1127 = call double @_Z4fmindd(double %extract2532.i, double 1.000000e+300) nounwind
  %1128 = call double @_Z4fmindd(double %extract2533.i, double 1.000000e+300) nounwind
  %1129 = call double @_Z4fmindd(double %extract2534.i, double 1.000000e+300) nounwind
  %1130 = call double @_Z4fmindd(double %extract2535.i, double 1.000000e+300) nounwind
  %1131 = call double @_Z4fmindd(double %extract2536.i, double 1.000000e+300) nounwind
  %1132 = call double @_Z4fmindd(double %extract2537.i, double 1.000000e+300) nounwind
  %1133 = call double @_Z4fmindd(double %extract2538.i, double 1.000000e+300) nounwind
  %1134 = call double @_Z4fmindd(double %extract2539.i, double 1.000000e+300) nounwind
  %1135 = call double @_Z4fmindd(double %extract2540.i, double 1.000000e+300) nounwind
  %1136 = call double @_Z4fmindd(double %extract2541.i, double 1.000000e+300) nounwind
  %temp.vect2542.i = insertelement <16 x double> undef, double %1121, i32 0
  %temp.vect2543.i = insertelement <16 x double> %temp.vect2542.i, double %1122, i32 1
  %temp.vect2544.i = insertelement <16 x double> %temp.vect2543.i, double %1123, i32 2
  %temp.vect2545.i = insertelement <16 x double> %temp.vect2544.i, double %1124, i32 3
  %temp.vect2546.i = insertelement <16 x double> %temp.vect2545.i, double %1125, i32 4
  %temp.vect2547.i = insertelement <16 x double> %temp.vect2546.i, double %1126, i32 5
  %temp.vect2548.i = insertelement <16 x double> %temp.vect2547.i, double %1127, i32 6
  %temp.vect2549.i = insertelement <16 x double> %temp.vect2548.i, double %1128, i32 7
  %temp.vect2550.i = insertelement <16 x double> %temp.vect2549.i, double %1129, i32 8
  %temp.vect2551.i = insertelement <16 x double> %temp.vect2550.i, double %1130, i32 9
  %temp.vect2552.i = insertelement <16 x double> %temp.vect2551.i, double %1131, i32 10
  %temp.vect2553.i = insertelement <16 x double> %temp.vect2552.i, double %1132, i32 11
  %temp.vect2554.i = insertelement <16 x double> %temp.vect2553.i, double %1133, i32 12
  %temp.vect2555.i = insertelement <16 x double> %temp.vect2554.i, double %1134, i32 13
  %temp.vect2556.i = insertelement <16 x double> %temp.vect2555.i, double %1135, i32 14
  %temp.vect2557.i = insertelement <16 x double> %temp.vect2556.i, double %1136, i32 15
  %1137 = fmul <16 x double> %1120, %temp.vect2557.i
  %1138 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1139 = load i64* %1138, align 8
  %1140 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1141 = load i64* %1140, align 8
  %1142 = add i64 %1139, %1141
  %extract2560.i = add i64 %1142, 1990656
  %1143 = getelementptr inbounds double addrspace(1)* %7, i64 %extract2560.i
  %ptrTypeCast2576.i = bitcast double addrspace(1)* %1143 to <16 x double> addrspace(1)*
  store <16 x double> %1137, <16 x double> addrspace(1)* %ptrTypeCast2576.i, align 8
  %1144 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1145 = load i64* %1144, align 8
  %1146 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1147 = load i64* %1146, align 8
  %1148 = add i64 %1145, %1147
  %extract2579.i = add i64 %1148, 221184
  %1149 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2579.i
  %ptrTypeCast2595.i = bitcast double addrspace(1)* %1149 to <16 x double> addrspace(1)*
  %1150 = load <16 x double> addrspace(1)* %ptrTypeCast2595.i, align 8
  %1151 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1152 = load i64* %1151, align 8
  %1153 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1154 = load i64* %1153, align 8
  %1155 = add i64 %1152, %1154
  %extract2598.i = add i64 %1155, 663552
  %1156 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2598.i
  %ptrTypeCast2614.i = bitcast double addrspace(1)* %1156 to <16 x double> addrspace(1)*
  %1157 = load <16 x double> addrspace(1)* %ptrTypeCast2614.i, align 8
  %1158 = fmul <16 x double> %1150, %1157
  %1159 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1160 = load i64* %1159, align 8
  %1161 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1162 = load i64* %1161, align 8
  %1163 = add i64 %1160, %1162
  %extract2617.i = add i64 %1163, 331776
  %1164 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2617.i
  %ptrTypeCast2633.i = bitcast double addrspace(1)* %1164 to <16 x double> addrspace(1)*
  %1165 = load <16 x double> addrspace(1)* %ptrTypeCast2633.i, align 8
  %1166 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1167 = load i64* %1166, align 8
  %1168 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1169 = load i64* %1168, align 8
  %1170 = add i64 %1167, %1169
  %extract2636.i = add i64 %1170, 442368
  %1171 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2636.i
  %ptrTypeCast2652.i = bitcast double addrspace(1)* %1171 to <16 x double> addrspace(1)*
  %1172 = load <16 x double> addrspace(1)* %ptrTypeCast2652.i, align 8
  %1173 = fmul <16 x double> %1165, %1172
  %1174 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1173
  %1175 = fmul <16 x double> %1158, %1174
  %extract2672.i = extractelement <16 x double> %1175, i32 0
  %extract2673.i = extractelement <16 x double> %1175, i32 1
  %extract2674.i = extractelement <16 x double> %1175, i32 2
  %extract2675.i = extractelement <16 x double> %1175, i32 3
  %extract2676.i = extractelement <16 x double> %1175, i32 4
  %extract2677.i = extractelement <16 x double> %1175, i32 5
  %extract2678.i = extractelement <16 x double> %1175, i32 6
  %extract2679.i = extractelement <16 x double> %1175, i32 7
  %extract2680.i = extractelement <16 x double> %1175, i32 8
  %extract2681.i = extractelement <16 x double> %1175, i32 9
  %extract2682.i = extractelement <16 x double> %1175, i32 10
  %extract2683.i = extractelement <16 x double> %1175, i32 11
  %extract2684.i = extractelement <16 x double> %1175, i32 12
  %extract2685.i = extractelement <16 x double> %1175, i32 13
  %extract2686.i = extractelement <16 x double> %1175, i32 14
  %extract2687.i = extractelement <16 x double> %1175, i32 15
  %1176 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1177 = load i64* %1176, align 8
  %1178 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1179 = load i64* %1178, align 8
  %1180 = add i64 %1177, %1179
  %extract2655.i = add i64 %1180, 2101248
  %1181 = getelementptr inbounds double addrspace(1)* %4, i64 %extract2655.i
  %ptrTypeCast2671.i = bitcast double addrspace(1)* %1181 to <16 x double> addrspace(1)*
  %1182 = load <16 x double> addrspace(1)* %ptrTypeCast2671.i, align 8
  %1183 = call double @_Z4fmindd(double %extract2672.i, double 1.000000e+300) nounwind
  %1184 = call double @_Z4fmindd(double %extract2673.i, double 1.000000e+300) nounwind
  %1185 = call double @_Z4fmindd(double %extract2674.i, double 1.000000e+300) nounwind
  %1186 = call double @_Z4fmindd(double %extract2675.i, double 1.000000e+300) nounwind
  %1187 = call double @_Z4fmindd(double %extract2676.i, double 1.000000e+300) nounwind
  %1188 = call double @_Z4fmindd(double %extract2677.i, double 1.000000e+300) nounwind
  %1189 = call double @_Z4fmindd(double %extract2678.i, double 1.000000e+300) nounwind
  %1190 = call double @_Z4fmindd(double %extract2679.i, double 1.000000e+300) nounwind
  %1191 = call double @_Z4fmindd(double %extract2680.i, double 1.000000e+300) nounwind
  %1192 = call double @_Z4fmindd(double %extract2681.i, double 1.000000e+300) nounwind
  %1193 = call double @_Z4fmindd(double %extract2682.i, double 1.000000e+300) nounwind
  %1194 = call double @_Z4fmindd(double %extract2683.i, double 1.000000e+300) nounwind
  %1195 = call double @_Z4fmindd(double %extract2684.i, double 1.000000e+300) nounwind
  %1196 = call double @_Z4fmindd(double %extract2685.i, double 1.000000e+300) nounwind
  %1197 = call double @_Z4fmindd(double %extract2686.i, double 1.000000e+300) nounwind
  %1198 = call double @_Z4fmindd(double %extract2687.i, double 1.000000e+300) nounwind
  %temp.vect2688.i = insertelement <16 x double> undef, double %1183, i32 0
  %temp.vect2689.i = insertelement <16 x double> %temp.vect2688.i, double %1184, i32 1
  %temp.vect2690.i = insertelement <16 x double> %temp.vect2689.i, double %1185, i32 2
  %temp.vect2691.i = insertelement <16 x double> %temp.vect2690.i, double %1186, i32 3
  %temp.vect2692.i = insertelement <16 x double> %temp.vect2691.i, double %1187, i32 4
  %temp.vect2693.i = insertelement <16 x double> %temp.vect2692.i, double %1188, i32 5
  %temp.vect2694.i = insertelement <16 x double> %temp.vect2693.i, double %1189, i32 6
  %temp.vect2695.i = insertelement <16 x double> %temp.vect2694.i, double %1190, i32 7
  %temp.vect2696.i = insertelement <16 x double> %temp.vect2695.i, double %1191, i32 8
  %temp.vect2697.i = insertelement <16 x double> %temp.vect2696.i, double %1192, i32 9
  %temp.vect2698.i = insertelement <16 x double> %temp.vect2697.i, double %1193, i32 10
  %temp.vect2699.i = insertelement <16 x double> %temp.vect2698.i, double %1194, i32 11
  %temp.vect2700.i = insertelement <16 x double> %temp.vect2699.i, double %1195, i32 12
  %temp.vect2701.i = insertelement <16 x double> %temp.vect2700.i, double %1196, i32 13
  %temp.vect2702.i = insertelement <16 x double> %temp.vect2701.i, double %1197, i32 14
  %temp.vect2703.i = insertelement <16 x double> %temp.vect2702.i, double %1198, i32 15
  %1199 = fmul <16 x double> %1182, %temp.vect2703.i
  %1200 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1201 = load i64* %1200, align 8
  %1202 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1203 = load i64* %1202, align 8
  %1204 = add i64 %1201, %1203
  %extract2706.i = add i64 %1204, 2101248
  %1205 = getelementptr inbounds double addrspace(1)* %7, i64 %extract2706.i
  %ptrTypeCast2722.i = bitcast double addrspace(1)* %1205 to <16 x double> addrspace(1)*
  store <16 x double> %1199, <16 x double> addrspace(1)* %ptrTypeCast2722.i, align 8
  %1206 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1207 = load i64* %1206, align 8
  %1208 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1209 = load i64* %1208, align 8
  %1210 = add i64 %1207, %1209
  %extract2725.i = add i64 %1210, 442368
  %1211 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2725.i
  %ptrTypeCast2741.i = bitcast double addrspace(1)* %1211 to <16 x double> addrspace(1)*
  %1212 = load <16 x double> addrspace(1)* %ptrTypeCast2741.i, align 8
  %1213 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1214 = load i64* %1213, align 8
  %1215 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1216 = load i64* %1215, align 8
  %1217 = add i64 %1214, %1216
  %extract2744.i = add i64 %1217, 663552
  %1218 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2744.i
  %ptrTypeCast2760.i = bitcast double addrspace(1)* %1218 to <16 x double> addrspace(1)*
  %1219 = load <16 x double> addrspace(1)* %ptrTypeCast2760.i, align 8
  %1220 = fmul <16 x double> %1212, %1219
  %1221 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1222 = load i64* %1221, align 8
  %1223 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1224 = load i64* %1223, align 8
  %1225 = add i64 %1222, %1224
  %extract2763.i = add i64 %1225, 331776
  %1226 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2763.i
  %ptrTypeCast2779.i = bitcast double addrspace(1)* %1226 to <16 x double> addrspace(1)*
  %1227 = load <16 x double> addrspace(1)* %ptrTypeCast2779.i, align 8
  %1228 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1229 = load i64* %1228, align 8
  %1230 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1231 = load i64* %1230, align 8
  %1232 = add i64 %1229, %1231
  %extract2782.i = add i64 %1232, 552960
  %1233 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2782.i
  %ptrTypeCast2798.i = bitcast double addrspace(1)* %1233 to <16 x double> addrspace(1)*
  %1234 = load <16 x double> addrspace(1)* %ptrTypeCast2798.i, align 8
  %1235 = fmul <16 x double> %1227, %1234
  %1236 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1235
  %1237 = fmul <16 x double> %1220, %1236
  %extract2818.i = extractelement <16 x double> %1237, i32 0
  %extract2819.i = extractelement <16 x double> %1237, i32 1
  %extract2820.i = extractelement <16 x double> %1237, i32 2
  %extract2821.i = extractelement <16 x double> %1237, i32 3
  %extract2822.i = extractelement <16 x double> %1237, i32 4
  %extract2823.i = extractelement <16 x double> %1237, i32 5
  %extract2824.i = extractelement <16 x double> %1237, i32 6
  %extract2825.i = extractelement <16 x double> %1237, i32 7
  %extract2826.i = extractelement <16 x double> %1237, i32 8
  %extract2827.i = extractelement <16 x double> %1237, i32 9
  %extract2828.i = extractelement <16 x double> %1237, i32 10
  %extract2829.i = extractelement <16 x double> %1237, i32 11
  %extract2830.i = extractelement <16 x double> %1237, i32 12
  %extract2831.i = extractelement <16 x double> %1237, i32 13
  %extract2832.i = extractelement <16 x double> %1237, i32 14
  %extract2833.i = extractelement <16 x double> %1237, i32 15
  %1238 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1239 = load i64* %1238, align 8
  %1240 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1241 = load i64* %1240, align 8
  %1242 = add i64 %1239, %1241
  %extract2801.i = add i64 %1242, 2211840
  %1243 = getelementptr inbounds double addrspace(1)* %4, i64 %extract2801.i
  %ptrTypeCast2817.i = bitcast double addrspace(1)* %1243 to <16 x double> addrspace(1)*
  %1244 = load <16 x double> addrspace(1)* %ptrTypeCast2817.i, align 8
  %1245 = call double @_Z4fmindd(double %extract2818.i, double 1.000000e+300) nounwind
  %1246 = call double @_Z4fmindd(double %extract2819.i, double 1.000000e+300) nounwind
  %1247 = call double @_Z4fmindd(double %extract2820.i, double 1.000000e+300) nounwind
  %1248 = call double @_Z4fmindd(double %extract2821.i, double 1.000000e+300) nounwind
  %1249 = call double @_Z4fmindd(double %extract2822.i, double 1.000000e+300) nounwind
  %1250 = call double @_Z4fmindd(double %extract2823.i, double 1.000000e+300) nounwind
  %1251 = call double @_Z4fmindd(double %extract2824.i, double 1.000000e+300) nounwind
  %1252 = call double @_Z4fmindd(double %extract2825.i, double 1.000000e+300) nounwind
  %1253 = call double @_Z4fmindd(double %extract2826.i, double 1.000000e+300) nounwind
  %1254 = call double @_Z4fmindd(double %extract2827.i, double 1.000000e+300) nounwind
  %1255 = call double @_Z4fmindd(double %extract2828.i, double 1.000000e+300) nounwind
  %1256 = call double @_Z4fmindd(double %extract2829.i, double 1.000000e+300) nounwind
  %1257 = call double @_Z4fmindd(double %extract2830.i, double 1.000000e+300) nounwind
  %1258 = call double @_Z4fmindd(double %extract2831.i, double 1.000000e+300) nounwind
  %1259 = call double @_Z4fmindd(double %extract2832.i, double 1.000000e+300) nounwind
  %1260 = call double @_Z4fmindd(double %extract2833.i, double 1.000000e+300) nounwind
  %temp.vect2834.i = insertelement <16 x double> undef, double %1245, i32 0
  %temp.vect2835.i = insertelement <16 x double> %temp.vect2834.i, double %1246, i32 1
  %temp.vect2836.i = insertelement <16 x double> %temp.vect2835.i, double %1247, i32 2
  %temp.vect2837.i = insertelement <16 x double> %temp.vect2836.i, double %1248, i32 3
  %temp.vect2838.i = insertelement <16 x double> %temp.vect2837.i, double %1249, i32 4
  %temp.vect2839.i = insertelement <16 x double> %temp.vect2838.i, double %1250, i32 5
  %temp.vect2840.i = insertelement <16 x double> %temp.vect2839.i, double %1251, i32 6
  %temp.vect2841.i = insertelement <16 x double> %temp.vect2840.i, double %1252, i32 7
  %temp.vect2842.i = insertelement <16 x double> %temp.vect2841.i, double %1253, i32 8
  %temp.vect2843.i = insertelement <16 x double> %temp.vect2842.i, double %1254, i32 9
  %temp.vect2844.i = insertelement <16 x double> %temp.vect2843.i, double %1255, i32 10
  %temp.vect2845.i = insertelement <16 x double> %temp.vect2844.i, double %1256, i32 11
  %temp.vect2846.i = insertelement <16 x double> %temp.vect2845.i, double %1257, i32 12
  %temp.vect2847.i = insertelement <16 x double> %temp.vect2846.i, double %1258, i32 13
  %temp.vect2848.i = insertelement <16 x double> %temp.vect2847.i, double %1259, i32 14
  %temp.vect2849.i = insertelement <16 x double> %temp.vect2848.i, double %1260, i32 15
  %1261 = fmul <16 x double> %1244, %temp.vect2849.i
  %1262 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1263 = load i64* %1262, align 8
  %1264 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1265 = load i64* %1264, align 8
  %1266 = add i64 %1263, %1265
  %extract2852.i = add i64 %1266, 2211840
  %1267 = getelementptr inbounds double addrspace(1)* %7, i64 %extract2852.i
  %ptrTypeCast2868.i = bitcast double addrspace(1)* %1267 to <16 x double> addrspace(1)*
  store <16 x double> %1261, <16 x double> addrspace(1)* %ptrTypeCast2868.i, align 8
  %1268 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1269 = load i64* %1268, align 8
  %1270 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1271 = load i64* %1270, align 8
  %1272 = add i64 %1269, %1271
  %extract2871.i = add i64 %1272, 663552
  %1273 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2871.i
  %ptrTypeCast2887.i = bitcast double addrspace(1)* %1273 to <16 x double> addrspace(1)*
  %1274 = load <16 x double> addrspace(1)* %ptrTypeCast2887.i, align 8
  %1275 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1276 = load i64* %1275, align 8
  %1277 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1278 = load i64* %1277, align 8
  %1279 = add i64 %1276, %1278
  %extract2890.i = add i64 %1279, 663552
  %1280 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2890.i
  %ptrTypeCast2906.i = bitcast double addrspace(1)* %1280 to <16 x double> addrspace(1)*
  %1281 = load <16 x double> addrspace(1)* %ptrTypeCast2906.i, align 8
  %1282 = fmul <16 x double> %1274, %1281
  %1283 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1284 = load i64* %1283, align 8
  %1285 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1286 = load i64* %1285, align 8
  %1287 = add i64 %1284, %1286
  %extract2909.i = add i64 %1287, 331776
  %1288 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2909.i
  %ptrTypeCast2925.i = bitcast double addrspace(1)* %1288 to <16 x double> addrspace(1)*
  %1289 = load <16 x double> addrspace(1)* %ptrTypeCast2925.i, align 8
  %1290 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1291 = load i64* %1290, align 8
  %1292 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1293 = load i64* %1292, align 8
  %1294 = add i64 %1291, %1293
  %extract2928.i = add i64 %1294, 774144
  %1295 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2928.i
  %ptrTypeCast2944.i = bitcast double addrspace(1)* %1295 to <16 x double> addrspace(1)*
  %1296 = load <16 x double> addrspace(1)* %ptrTypeCast2944.i, align 8
  %1297 = fmul <16 x double> %1289, %1296
  %1298 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1297
  %1299 = fmul <16 x double> %1282, %1298
  %extract2964.i = extractelement <16 x double> %1299, i32 0
  %extract2965.i = extractelement <16 x double> %1299, i32 1
  %extract2966.i = extractelement <16 x double> %1299, i32 2
  %extract2967.i = extractelement <16 x double> %1299, i32 3
  %extract2968.i = extractelement <16 x double> %1299, i32 4
  %extract2969.i = extractelement <16 x double> %1299, i32 5
  %extract2970.i = extractelement <16 x double> %1299, i32 6
  %extract2971.i = extractelement <16 x double> %1299, i32 7
  %extract2972.i = extractelement <16 x double> %1299, i32 8
  %extract2973.i = extractelement <16 x double> %1299, i32 9
  %extract2974.i = extractelement <16 x double> %1299, i32 10
  %extract2975.i = extractelement <16 x double> %1299, i32 11
  %extract2976.i = extractelement <16 x double> %1299, i32 12
  %extract2977.i = extractelement <16 x double> %1299, i32 13
  %extract2978.i = extractelement <16 x double> %1299, i32 14
  %extract2979.i = extractelement <16 x double> %1299, i32 15
  %1300 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1301 = load i64* %1300, align 8
  %1302 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1303 = load i64* %1302, align 8
  %1304 = add i64 %1301, %1303
  %extract2947.i = add i64 %1304, 2322432
  %1305 = getelementptr inbounds double addrspace(1)* %4, i64 %extract2947.i
  %ptrTypeCast2963.i = bitcast double addrspace(1)* %1305 to <16 x double> addrspace(1)*
  %1306 = load <16 x double> addrspace(1)* %ptrTypeCast2963.i, align 8
  %1307 = call double @_Z4fmindd(double %extract2964.i, double 1.000000e+300) nounwind
  %1308 = call double @_Z4fmindd(double %extract2965.i, double 1.000000e+300) nounwind
  %1309 = call double @_Z4fmindd(double %extract2966.i, double 1.000000e+300) nounwind
  %1310 = call double @_Z4fmindd(double %extract2967.i, double 1.000000e+300) nounwind
  %1311 = call double @_Z4fmindd(double %extract2968.i, double 1.000000e+300) nounwind
  %1312 = call double @_Z4fmindd(double %extract2969.i, double 1.000000e+300) nounwind
  %1313 = call double @_Z4fmindd(double %extract2970.i, double 1.000000e+300) nounwind
  %1314 = call double @_Z4fmindd(double %extract2971.i, double 1.000000e+300) nounwind
  %1315 = call double @_Z4fmindd(double %extract2972.i, double 1.000000e+300) nounwind
  %1316 = call double @_Z4fmindd(double %extract2973.i, double 1.000000e+300) nounwind
  %1317 = call double @_Z4fmindd(double %extract2974.i, double 1.000000e+300) nounwind
  %1318 = call double @_Z4fmindd(double %extract2975.i, double 1.000000e+300) nounwind
  %1319 = call double @_Z4fmindd(double %extract2976.i, double 1.000000e+300) nounwind
  %1320 = call double @_Z4fmindd(double %extract2977.i, double 1.000000e+300) nounwind
  %1321 = call double @_Z4fmindd(double %extract2978.i, double 1.000000e+300) nounwind
  %1322 = call double @_Z4fmindd(double %extract2979.i, double 1.000000e+300) nounwind
  %temp.vect2980.i = insertelement <16 x double> undef, double %1307, i32 0
  %temp.vect2981.i = insertelement <16 x double> %temp.vect2980.i, double %1308, i32 1
  %temp.vect2982.i = insertelement <16 x double> %temp.vect2981.i, double %1309, i32 2
  %temp.vect2983.i = insertelement <16 x double> %temp.vect2982.i, double %1310, i32 3
  %temp.vect2984.i = insertelement <16 x double> %temp.vect2983.i, double %1311, i32 4
  %temp.vect2985.i = insertelement <16 x double> %temp.vect2984.i, double %1312, i32 5
  %temp.vect2986.i = insertelement <16 x double> %temp.vect2985.i, double %1313, i32 6
  %temp.vect2987.i = insertelement <16 x double> %temp.vect2986.i, double %1314, i32 7
  %temp.vect2988.i = insertelement <16 x double> %temp.vect2987.i, double %1315, i32 8
  %temp.vect2989.i = insertelement <16 x double> %temp.vect2988.i, double %1316, i32 9
  %temp.vect2990.i = insertelement <16 x double> %temp.vect2989.i, double %1317, i32 10
  %temp.vect2991.i = insertelement <16 x double> %temp.vect2990.i, double %1318, i32 11
  %temp.vect2992.i = insertelement <16 x double> %temp.vect2991.i, double %1319, i32 12
  %temp.vect2993.i = insertelement <16 x double> %temp.vect2992.i, double %1320, i32 13
  %temp.vect2994.i = insertelement <16 x double> %temp.vect2993.i, double %1321, i32 14
  %temp.vect2995.i = insertelement <16 x double> %temp.vect2994.i, double %1322, i32 15
  %1323 = fmul <16 x double> %1306, %temp.vect2995.i
  %1324 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1325 = load i64* %1324, align 8
  %1326 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1327 = load i64* %1326, align 8
  %1328 = add i64 %1325, %1327
  %extract2998.i = add i64 %1328, 2322432
  %1329 = getelementptr inbounds double addrspace(1)* %7, i64 %extract2998.i
  %ptrTypeCast3014.i = bitcast double addrspace(1)* %1329 to <16 x double> addrspace(1)*
  store <16 x double> %1323, <16 x double> addrspace(1)* %ptrTypeCast3014.i, align 8
  %1330 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1331 = load i64* %1330, align 8
  %1332 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1333 = load i64* %1332, align 8
  %1334 = add i64 %1331, %1333
  %extract3017.i = add i64 %1334, 663552
  %1335 = getelementptr inbounds double addrspace(1)* %10, i64 %extract3017.i
  %ptrTypeCast3033.i = bitcast double addrspace(1)* %1335 to <16 x double> addrspace(1)*
  %1336 = load <16 x double> addrspace(1)* %ptrTypeCast3033.i, align 8
  %1337 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1338 = load i64* %1337, align 8
  %1339 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1340 = load i64* %1339, align 8
  %1341 = add i64 %1338, %1340
  %extract3036.i = add i64 %1341, 663552
  %1342 = getelementptr inbounds double addrspace(1)* %10, i64 %extract3036.i
  %ptrTypeCast3052.i = bitcast double addrspace(1)* %1342 to <16 x double> addrspace(1)*
  %1343 = load <16 x double> addrspace(1)* %ptrTypeCast3052.i, align 8
  %1344 = fmul <16 x double> %1336, %1343
  %1345 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1346 = load i64* %1345, align 8
  %1347 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1348 = load i64* %1347, align 8
  %1349 = add i64 %1346, %1348
  %extract3055.i = add i64 %1349, 331776
  %1350 = getelementptr inbounds double addrspace(1)* %10, i64 %extract3055.i
  %ptrTypeCast3071.i = bitcast double addrspace(1)* %1350 to <16 x double> addrspace(1)*
  %1351 = load <16 x double> addrspace(1)* %ptrTypeCast3071.i, align 8
  %1352 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1353 = load i64* %1352, align 8
  %1354 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1355 = load i64* %1354, align 8
  %1356 = add i64 %1353, %1355
  %extract3074.i = add i64 %1356, 774144
  %1357 = getelementptr inbounds double addrspace(1)* %10, i64 %extract3074.i
  %ptrTypeCast3090.i = bitcast double addrspace(1)* %1357 to <16 x double> addrspace(1)*
  %1358 = load <16 x double> addrspace(1)* %ptrTypeCast3090.i, align 8
  %1359 = fmul <16 x double> %1351, %1358
  %1360 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1359
  %1361 = fmul <16 x double> %1344, %1360
  %extract3110.i = extractelement <16 x double> %1361, i32 0
  %extract3111.i = extractelement <16 x double> %1361, i32 1
  %extract3112.i = extractelement <16 x double> %1361, i32 2
  %extract3113.i = extractelement <16 x double> %1361, i32 3
  %extract3114.i = extractelement <16 x double> %1361, i32 4
  %extract3115.i = extractelement <16 x double> %1361, i32 5
  %extract3116.i = extractelement <16 x double> %1361, i32 6
  %extract3117.i = extractelement <16 x double> %1361, i32 7
  %extract3118.i = extractelement <16 x double> %1361, i32 8
  %extract3119.i = extractelement <16 x double> %1361, i32 9
  %extract3120.i = extractelement <16 x double> %1361, i32 10
  %extract3121.i = extractelement <16 x double> %1361, i32 11
  %extract3122.i = extractelement <16 x double> %1361, i32 12
  %extract3123.i = extractelement <16 x double> %1361, i32 13
  %extract3124.i = extractelement <16 x double> %1361, i32 14
  %extract3125.i = extractelement <16 x double> %1361, i32 15
  %1362 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1363 = load i64* %1362, align 8
  %1364 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1365 = load i64* %1364, align 8
  %1366 = add i64 %1363, %1365
  %extract3093.i = add i64 %1366, 2433024
  %1367 = getelementptr inbounds double addrspace(1)* %4, i64 %extract3093.i
  %ptrTypeCast3109.i = bitcast double addrspace(1)* %1367 to <16 x double> addrspace(1)*
  %1368 = load <16 x double> addrspace(1)* %ptrTypeCast3109.i, align 8
  %1369 = call double @_Z4fmindd(double %extract3110.i, double 1.000000e+300) nounwind
  %1370 = call double @_Z4fmindd(double %extract3111.i, double 1.000000e+300) nounwind
  %1371 = call double @_Z4fmindd(double %extract3112.i, double 1.000000e+300) nounwind
  %1372 = call double @_Z4fmindd(double %extract3113.i, double 1.000000e+300) nounwind
  %1373 = call double @_Z4fmindd(double %extract3114.i, double 1.000000e+300) nounwind
  %1374 = call double @_Z4fmindd(double %extract3115.i, double 1.000000e+300) nounwind
  %1375 = call double @_Z4fmindd(double %extract3116.i, double 1.000000e+300) nounwind
  %1376 = call double @_Z4fmindd(double %extract3117.i, double 1.000000e+300) nounwind
  %1377 = call double @_Z4fmindd(double %extract3118.i, double 1.000000e+300) nounwind
  %1378 = call double @_Z4fmindd(double %extract3119.i, double 1.000000e+300) nounwind
  %1379 = call double @_Z4fmindd(double %extract3120.i, double 1.000000e+300) nounwind
  %1380 = call double @_Z4fmindd(double %extract3121.i, double 1.000000e+300) nounwind
  %1381 = call double @_Z4fmindd(double %extract3122.i, double 1.000000e+300) nounwind
  %1382 = call double @_Z4fmindd(double %extract3123.i, double 1.000000e+300) nounwind
  %1383 = call double @_Z4fmindd(double %extract3124.i, double 1.000000e+300) nounwind
  %1384 = call double @_Z4fmindd(double %extract3125.i, double 1.000000e+300) nounwind
  %temp.vect3126.i = insertelement <16 x double> undef, double %1369, i32 0
  %temp.vect3127.i = insertelement <16 x double> %temp.vect3126.i, double %1370, i32 1
  %temp.vect3128.i = insertelement <16 x double> %temp.vect3127.i, double %1371, i32 2
  %temp.vect3129.i = insertelement <16 x double> %temp.vect3128.i, double %1372, i32 3
  %temp.vect3130.i = insertelement <16 x double> %temp.vect3129.i, double %1373, i32 4
  %temp.vect3131.i = insertelement <16 x double> %temp.vect3130.i, double %1374, i32 5
  %temp.vect3132.i = insertelement <16 x double> %temp.vect3131.i, double %1375, i32 6
  %temp.vect3133.i = insertelement <16 x double> %temp.vect3132.i, double %1376, i32 7
  %temp.vect3134.i = insertelement <16 x double> %temp.vect3133.i, double %1377, i32 8
  %temp.vect3135.i = insertelement <16 x double> %temp.vect3134.i, double %1378, i32 9
  %temp.vect3136.i = insertelement <16 x double> %temp.vect3135.i, double %1379, i32 10
  %temp.vect3137.i = insertelement <16 x double> %temp.vect3136.i, double %1380, i32 11
  %temp.vect3138.i = insertelement <16 x double> %temp.vect3137.i, double %1381, i32 12
  %temp.vect3139.i = insertelement <16 x double> %temp.vect3138.i, double %1382, i32 13
  %temp.vect3140.i = insertelement <16 x double> %temp.vect3139.i, double %1383, i32 14
  %temp.vect3141.i = insertelement <16 x double> %temp.vect3140.i, double %1384, i32 15
  %1385 = fmul <16 x double> %1368, %temp.vect3141.i
  %1386 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1387 = load i64* %1386, align 8
  %1388 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1389 = load i64* %1388, align 8
  %1390 = add i64 %1387, %1389
  %extract3144.i = add i64 %1390, 2433024
  %1391 = getelementptr inbounds double addrspace(1)* %7, i64 %extract3144.i
  %ptrTypeCast3160.i = bitcast double addrspace(1)* %1391 to <16 x double> addrspace(1)*
  store <16 x double> %1385, <16 x double> addrspace(1)* %ptrTypeCast3160.i, align 8
  %1392 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1393 = load i64* %1392, align 8
  %1394 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1395 = load i64* %1394, align 8
  %1396 = add i64 %1393, %1395
  %extract3163.i = add i64 %1396, 110592
  %1397 = getelementptr inbounds double addrspace(1)* %10, i64 %extract3163.i
  %ptrTypeCast3179.i = bitcast double addrspace(1)* %1397 to <16 x double> addrspace(1)*
  %1398 = load <16 x double> addrspace(1)* %ptrTypeCast3179.i, align 8
  %1399 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1400 = load i64* %1399, align 8
  %1401 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1402 = load i64* %1401, align 8
  %1403 = add i64 %1400, %1402
  %extract3182.i = add i64 %1403, 774144
  %1404 = getelementptr inbounds double addrspace(1)* %10, i64 %extract3182.i
  %ptrTypeCast3198.i = bitcast double addrspace(1)* %1404 to <16 x double> addrspace(1)*
  %1405 = load <16 x double> addrspace(1)* %ptrTypeCast3198.i, align 8
  %1406 = fmul <16 x double> %1398, %1405
  %1407 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1408 = load i64* %1407, align 8
  %1409 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1410 = load i64* %1409, align 8
  %1411 = add i64 %1408, %1410
  %1412 = getelementptr inbounds double addrspace(1)* %10, i64 %1411
  %ptrTypeCast3217.i = bitcast double addrspace(1)* %1412 to <16 x double> addrspace(1)*
  %1413 = load <16 x double> addrspace(1)* %ptrTypeCast3217.i, align 8
  %1414 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1415 = load i64* %1414, align 8
  %1416 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1417 = load i64* %1416, align 8
  %1418 = add i64 %1415, %1417
  %extract3220.i = add i64 %1418, 663552
  %1419 = getelementptr inbounds double addrspace(1)* %10, i64 %extract3220.i
  %ptrTypeCast3236.i = bitcast double addrspace(1)* %1419 to <16 x double> addrspace(1)*
  %1420 = load <16 x double> addrspace(1)* %ptrTypeCast3236.i, align 8
  %1421 = fmul <16 x double> %1413, %1420
  %1422 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1421
  %1423 = fmul <16 x double> %1406, %1422
  %extract3256.i = extractelement <16 x double> %1423, i32 0
  %extract3257.i = extractelement <16 x double> %1423, i32 1
  %extract3258.i = extractelement <16 x double> %1423, i32 2
  %extract3259.i = extractelement <16 x double> %1423, i32 3
  %extract3260.i = extractelement <16 x double> %1423, i32 4
  %extract3261.i = extractelement <16 x double> %1423, i32 5
  %extract3262.i = extractelement <16 x double> %1423, i32 6
  %extract3263.i = extractelement <16 x double> %1423, i32 7
  %extract3264.i = extractelement <16 x double> %1423, i32 8
  %extract3265.i = extractelement <16 x double> %1423, i32 9
  %extract3266.i = extractelement <16 x double> %1423, i32 10
  %extract3267.i = extractelement <16 x double> %1423, i32 11
  %extract3268.i = extractelement <16 x double> %1423, i32 12
  %extract3269.i = extractelement <16 x double> %1423, i32 13
  %extract3270.i = extractelement <16 x double> %1423, i32 14
  %extract3271.i = extractelement <16 x double> %1423, i32 15
  %1424 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1425 = load i64* %1424, align 8
  %1426 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1427 = load i64* %1426, align 8
  %1428 = add i64 %1425, %1427
  %extract3239.i = add i64 %1428, 2543616
  %1429 = getelementptr inbounds double addrspace(1)* %4, i64 %extract3239.i
  %ptrTypeCast3255.i = bitcast double addrspace(1)* %1429 to <16 x double> addrspace(1)*
  %1430 = load <16 x double> addrspace(1)* %ptrTypeCast3255.i, align 8
  %1431 = call double @_Z4fmindd(double %extract3256.i, double 1.000000e+300) nounwind
  %1432 = call double @_Z4fmindd(double %extract3257.i, double 1.000000e+300) nounwind
  %1433 = call double @_Z4fmindd(double %extract3258.i, double 1.000000e+300) nounwind
  %1434 = call double @_Z4fmindd(double %extract3259.i, double 1.000000e+300) nounwind
  %1435 = call double @_Z4fmindd(double %extract3260.i, double 1.000000e+300) nounwind
  %1436 = call double @_Z4fmindd(double %extract3261.i, double 1.000000e+300) nounwind
  %1437 = call double @_Z4fmindd(double %extract3262.i, double 1.000000e+300) nounwind
  %1438 = call double @_Z4fmindd(double %extract3263.i, double 1.000000e+300) nounwind
  %1439 = call double @_Z4fmindd(double %extract3264.i, double 1.000000e+300) nounwind
  %1440 = call double @_Z4fmindd(double %extract3265.i, double 1.000000e+300) nounwind
  %1441 = call double @_Z4fmindd(double %extract3266.i, double 1.000000e+300) nounwind
  %1442 = call double @_Z4fmindd(double %extract3267.i, double 1.000000e+300) nounwind
  %1443 = call double @_Z4fmindd(double %extract3268.i, double 1.000000e+300) nounwind
  %1444 = call double @_Z4fmindd(double %extract3269.i, double 1.000000e+300) nounwind
  %1445 = call double @_Z4fmindd(double %extract3270.i, double 1.000000e+300) nounwind
  %1446 = call double @_Z4fmindd(double %extract3271.i, double 1.000000e+300) nounwind
  %temp.vect3272.i = insertelement <16 x double> undef, double %1431, i32 0
  %temp.vect3273.i = insertelement <16 x double> %temp.vect3272.i, double %1432, i32 1
  %temp.vect3274.i = insertelement <16 x double> %temp.vect3273.i, double %1433, i32 2
  %temp.vect3275.i = insertelement <16 x double> %temp.vect3274.i, double %1434, i32 3
  %temp.vect3276.i = insertelement <16 x double> %temp.vect3275.i, double %1435, i32 4
  %temp.vect3277.i = insertelement <16 x double> %temp.vect3276.i, double %1436, i32 5
  %temp.vect3278.i = insertelement <16 x double> %temp.vect3277.i, double %1437, i32 6
  %temp.vect3279.i = insertelement <16 x double> %temp.vect3278.i, double %1438, i32 7
  %temp.vect3280.i = insertelement <16 x double> %temp.vect3279.i, double %1439, i32 8
  %temp.vect3281.i = insertelement <16 x double> %temp.vect3280.i, double %1440, i32 9
  %temp.vect3282.i = insertelement <16 x double> %temp.vect3281.i, double %1441, i32 10
  %temp.vect3283.i = insertelement <16 x double> %temp.vect3282.i, double %1442, i32 11
  %temp.vect3284.i = insertelement <16 x double> %temp.vect3283.i, double %1443, i32 12
  %temp.vect3285.i = insertelement <16 x double> %temp.vect3284.i, double %1444, i32 13
  %temp.vect3286.i = insertelement <16 x double> %temp.vect3285.i, double %1445, i32 14
  %temp.vect3287.i = insertelement <16 x double> %temp.vect3286.i, double %1446, i32 15
  %1447 = fmul <16 x double> %1430, %temp.vect3287.i
  %1448 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1449 = load i64* %1448, align 8
  %1450 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1451 = load i64* %1450, align 8
  %1452 = add i64 %1449, %1451
  %extract3290.i = add i64 %1452, 2543616
  %1453 = getelementptr inbounds double addrspace(1)* %7, i64 %extract3290.i
  %ptrTypeCast3306.i = bitcast double addrspace(1)* %1453 to <16 x double> addrspace(1)*
  store <16 x double> %1447, <16 x double> addrspace(1)* %ptrTypeCast3306.i, align 8
  %1454 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1455 = load i64* %1454, align 8
  %1456 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1457 = load i64* %1456, align 8
  %1458 = add i64 %1455, %1457
  %extract3309.i = add i64 %1458, 110592
  %1459 = getelementptr inbounds double addrspace(1)* %10, i64 %extract3309.i
  %ptrTypeCast3325.i = bitcast double addrspace(1)* %1459 to <16 x double> addrspace(1)*
  %1460 = load <16 x double> addrspace(1)* %ptrTypeCast3325.i, align 8
  %1461 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1462 = load i64* %1461, align 8
  %1463 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1464 = load i64* %1463, align 8
  %1465 = add i64 %1462, %1464
  %extract3328.i = add i64 %1465, 774144
  %1466 = getelementptr inbounds double addrspace(1)* %10, i64 %extract3328.i
  %ptrTypeCast3344.i = bitcast double addrspace(1)* %1466 to <16 x double> addrspace(1)*
  %1467 = load <16 x double> addrspace(1)* %ptrTypeCast3344.i, align 8
  %1468 = fmul <16 x double> %1460, %1467
  %1469 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1470 = load i64* %1469, align 8
  %1471 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1472 = load i64* %1471, align 8
  %1473 = add i64 %1470, %1472
  %extract3347.i = add i64 %1473, 442368
  %1474 = getelementptr inbounds double addrspace(1)* %10, i64 %extract3347.i
  %ptrTypeCast3363.i = bitcast double addrspace(1)* %1474 to <16 x double> addrspace(1)*
  %1475 = load <16 x double> addrspace(1)* %ptrTypeCast3363.i, align 8
  %1476 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1477 = load i64* %1476, align 8
  %1478 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1479 = load i64* %1478, align 8
  %1480 = add i64 %1477, %1479
  %extract3366.i = add i64 %1480, 552960
  %1481 = getelementptr inbounds double addrspace(1)* %10, i64 %extract3366.i
  %ptrTypeCast3382.i = bitcast double addrspace(1)* %1481 to <16 x double> addrspace(1)*
  %1482 = load <16 x double> addrspace(1)* %ptrTypeCast3382.i, align 8
  %1483 = fmul <16 x double> %1475, %1482
  %1484 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1483
  %1485 = fmul <16 x double> %1468, %1484
  %extract3402.i = extractelement <16 x double> %1485, i32 0
  %extract3403.i = extractelement <16 x double> %1485, i32 1
  %extract3404.i = extractelement <16 x double> %1485, i32 2
  %extract3405.i = extractelement <16 x double> %1485, i32 3
  %extract3406.i = extractelement <16 x double> %1485, i32 4
  %extract3407.i = extractelement <16 x double> %1485, i32 5
  %extract3408.i = extractelement <16 x double> %1485, i32 6
  %extract3409.i = extractelement <16 x double> %1485, i32 7
  %extract3410.i = extractelement <16 x double> %1485, i32 8
  %extract3411.i = extractelement <16 x double> %1485, i32 9
  %extract3412.i = extractelement <16 x double> %1485, i32 10
  %extract3413.i = extractelement <16 x double> %1485, i32 11
  %extract3414.i = extractelement <16 x double> %1485, i32 12
  %extract3415.i = extractelement <16 x double> %1485, i32 13
  %extract3416.i = extractelement <16 x double> %1485, i32 14
  %extract3417.i = extractelement <16 x double> %1485, i32 15
  %1486 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1487 = load i64* %1486, align 8
  %1488 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1489 = load i64* %1488, align 8
  %1490 = add i64 %1487, %1489
  %extract3385.i = add i64 %1490, 2654208
  %1491 = getelementptr inbounds double addrspace(1)* %4, i64 %extract3385.i
  %ptrTypeCast3401.i = bitcast double addrspace(1)* %1491 to <16 x double> addrspace(1)*
  %1492 = load <16 x double> addrspace(1)* %ptrTypeCast3401.i, align 8
  %1493 = call double @_Z4fmindd(double %extract3402.i, double 1.000000e+300) nounwind
  %1494 = call double @_Z4fmindd(double %extract3403.i, double 1.000000e+300) nounwind
  %1495 = call double @_Z4fmindd(double %extract3404.i, double 1.000000e+300) nounwind
  %1496 = call double @_Z4fmindd(double %extract3405.i, double 1.000000e+300) nounwind
  %1497 = call double @_Z4fmindd(double %extract3406.i, double 1.000000e+300) nounwind
  %1498 = call double @_Z4fmindd(double %extract3407.i, double 1.000000e+300) nounwind
  %1499 = call double @_Z4fmindd(double %extract3408.i, double 1.000000e+300) nounwind
  %1500 = call double @_Z4fmindd(double %extract3409.i, double 1.000000e+300) nounwind
  %1501 = call double @_Z4fmindd(double %extract3410.i, double 1.000000e+300) nounwind
  %1502 = call double @_Z4fmindd(double %extract3411.i, double 1.000000e+300) nounwind
  %1503 = call double @_Z4fmindd(double %extract3412.i, double 1.000000e+300) nounwind
  %1504 = call double @_Z4fmindd(double %extract3413.i, double 1.000000e+300) nounwind
  %1505 = call double @_Z4fmindd(double %extract3414.i, double 1.000000e+300) nounwind
  %1506 = call double @_Z4fmindd(double %extract3415.i, double 1.000000e+300) nounwind
  %1507 = call double @_Z4fmindd(double %extract3416.i, double 1.000000e+300) nounwind
  %1508 = call double @_Z4fmindd(double %extract3417.i, double 1.000000e+300) nounwind
  %temp.vect3418.i = insertelement <16 x double> undef, double %1493, i32 0
  %temp.vect3419.i = insertelement <16 x double> %temp.vect3418.i, double %1494, i32 1
  %temp.vect3420.i = insertelement <16 x double> %temp.vect3419.i, double %1495, i32 2
  %temp.vect3421.i = insertelement <16 x double> %temp.vect3420.i, double %1496, i32 3
  %temp.vect3422.i = insertelement <16 x double> %temp.vect3421.i, double %1497, i32 4
  %temp.vect3423.i = insertelement <16 x double> %temp.vect3422.i, double %1498, i32 5
  %temp.vect3424.i = insertelement <16 x double> %temp.vect3423.i, double %1499, i32 6
  %temp.vect3425.i = insertelement <16 x double> %temp.vect3424.i, double %1500, i32 7
  %temp.vect3426.i = insertelement <16 x double> %temp.vect3425.i, double %1501, i32 8
  %temp.vect3427.i = insertelement <16 x double> %temp.vect3426.i, double %1502, i32 9
  %temp.vect3428.i = insertelement <16 x double> %temp.vect3427.i, double %1503, i32 10
  %temp.vect3429.i = insertelement <16 x double> %temp.vect3428.i, double %1504, i32 11
  %temp.vect3430.i = insertelement <16 x double> %temp.vect3429.i, double %1505, i32 12
  %temp.vect3431.i = insertelement <16 x double> %temp.vect3430.i, double %1506, i32 13
  %temp.vect3432.i = insertelement <16 x double> %temp.vect3431.i, double %1507, i32 14
  %temp.vect3433.i = insertelement <16 x double> %temp.vect3432.i, double %1508, i32 15
  %1509 = fmul <16 x double> %1492, %temp.vect3433.i
  %1510 = getelementptr %struct.PaddedDimId* %19, i64 %CurrWI..0.i, i32 0, i64 0
  %1511 = load i64* %1510, align 8
  %1512 = getelementptr %struct.PaddedDimId* %16, i64 0, i32 0, i64 0
  %1513 = load i64* %1512, align 8
  %1514 = add i64 %1511, %1513
  %extract3436.i = add i64 %1514, 2654208
  %1515 = getelementptr inbounds double addrspace(1)* %7, i64 %extract3436.i
  %ptrTypeCast3452.i = bitcast double addrspace(1)* %1515 to <16 x double> addrspace(1)*
  store <16 x double> %1509, <16 x double> addrspace(1)* %ptrTypeCast3452.i, align 8
  %check.WI.iter.i = icmp ult i64 %CurrWI..0.i, %22
  br i1 %check.WI.iter.i, label %thenBB.i, label %____Vectorized_.ratt2_kernel_separated_args.exit

thenBB.i:                                         ; preds = %SyncBB3453.i
  %"CurrWI++.i" = add nuw i64 %CurrWI..0.i, 1
  br label %SyncBB3453.i

____Vectorized_.ratt2_kernel_separated_args.exit: ; preds = %SyncBB3453.i
  ret void
}

!opencl.kernels = !{!0}

!0 = metadata !{void (double addrspace(1)*, double addrspace(1)*, double addrspace(1)*, double addrspace(1)*, double, i8 addrspace(3)*, %struct.WorkDim*, i64*, %struct.PaddedDimId*, %struct.PaddedDimId*, i64*, i64, i8*, i64*)* @__ratt2_kernel_separated_args, metadata !1, metadata !1, metadata !"", metadata !"double const __attribute__((address_space(1))) *, double const __attribute__((address_space(1))) *, double __attribute__((address_space(1))) *, double const __attribute__((address_space(1))) *, double const", metadata !"opencl_ratt2_kernel_locals_anchor", void (i8*)* @ratt2_kernel}
!1 = metadata !{i32 0, i32 0, i32 0}
