; XFAIL: win32
;
; RUN: llc < %s -mtriple=x86_64-pc-linux \
; RUN:       -march=y86-64 -mcpu=knc
;
;
; ModuleID = 'Program'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64"
target triple = "x86_64-unknown-linux-gnu"

%struct.PaddedDimId = type <{ [4 x i64] }>
%struct.WorkDim = type { i32, [3 x i64], [3 x i64], [3 x i64], [3 x i64] }

declare void @__readConstantMemoryCoalesced_original(float addrspace(1)* nocapture, float addrspace(1)* nocapture, i32) nounwind

declare i64 @get_global_id(i32)

declare i64 @get_global_size(i32)

declare i64 @get_group_id(i32)

declare void @____Vectorized_.readConstantMemoryCoalesced_original(float addrspace(1)* nocapture, float addrspace(1)* nocapture, i32) nounwind

define i1 @allOne(i1 %pred) {
entry:
  ret i1 %pred
}

define i1 @allZero(i1 %t) {
entry:
  ret i1 %t
}

declare void @dummybarrier.()

declare void @barrier(i64)

declare i8* @get_special_buffer.()

declare i64 @get_iter_count.()

declare i64 @get_new_global_id.(i32, i64)

define void @__readConstantMemoryCoalesced_separated_args(float addrspace(1)* nocapture %data, float addrspace(1)* nocapture %output, i32 %size, i8 addrspace(3)* %pLocalMem, %struct.WorkDim* %pWorkDim, i64* %pWGId, %struct.PaddedDimId* %pBaseGlbId, %struct.PaddedDimId* %pLocalIds, i64* %contextpointer, i64 %iterCount, i8* %pSpecialBuf, i64* %pCurrWI) nounwind alwaysinline {
bb.nph:
  %0 = add nsw i32 %size, -1
  br label %SyncBB

SyncBB:                                           ; preds = %thenBB, %bb.nph
  %CurrWI..0 = phi i64 [ 0, %bb.nph ], [ %"CurrWI++", %thenBB ]
  %1 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2 = load i64* %1, align 8
  %3 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %4 = load i64* %3, align 8
  %5 = add i64 %2, %4
  %6 = trunc i64 %5 to i32
  br label %7

; <label>:7                                       ; preds = %7, %SyncBB
  %s.03 = phi i32 [ %6, %SyncBB ], [ %105, %7 ]
  %sum.02 = phi float [ 0.000000e+00, %SyncBB ], [ %102, %7 ]
  %j.01 = phi i32 [ 0, %SyncBB ], [ %103, %7 ]
  %8 = and i32 %s.03, %0
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds float addrspace(1)* %data, i64 %9
  %11 = load float addrspace(1)* %10, align 4
  %12 = add nsw i32 %s.03, 20480
  %13 = and i32 %12, %0
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds float addrspace(1)* %data, i64 %14
  %16 = load float addrspace(1)* %15, align 4
  %17 = add nsw i32 %s.03, 40960
  %18 = and i32 %17, %0
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds float addrspace(1)* %data, i64 %19
  %21 = load float addrspace(1)* %20, align 4
  %22 = add nsw i32 %s.03, 61440
  %23 = and i32 %22, %0
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds float addrspace(1)* %data, i64 %24
  %26 = load float addrspace(1)* %25, align 4
  %27 = add nsw i32 %s.03, 81920
  %28 = and i32 %27, %0
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds float addrspace(1)* %data, i64 %29
  %31 = load float addrspace(1)* %30, align 4
  %32 = add nsw i32 %s.03, 102400
  %33 = and i32 %32, %0
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds float addrspace(1)* %data, i64 %34
  %36 = load float addrspace(1)* %35, align 4
  %37 = add nsw i32 %s.03, 122880
  %38 = and i32 %37, %0
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds float addrspace(1)* %data, i64 %39
  %41 = load float addrspace(1)* %40, align 4
  %42 = add nsw i32 %s.03, 143360
  %43 = and i32 %42, %0
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds float addrspace(1)* %data, i64 %44
  %46 = load float addrspace(1)* %45, align 4
  %47 = add nsw i32 %s.03, 163840
  %48 = and i32 %47, %0
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds float addrspace(1)* %data, i64 %49
  %51 = load float addrspace(1)* %50, align 4
  %52 = add nsw i32 %s.03, 184320
  %53 = and i32 %52, %0
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds float addrspace(1)* %data, i64 %54
  %56 = load float addrspace(1)* %55, align 4
  %57 = add nsw i32 %s.03, 204800
  %58 = and i32 %57, %0
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds float addrspace(1)* %data, i64 %59
  %61 = load float addrspace(1)* %60, align 4
  %62 = add nsw i32 %s.03, 225280
  %63 = and i32 %62, %0
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds float addrspace(1)* %data, i64 %64
  %66 = load float addrspace(1)* %65, align 4
  %67 = add nsw i32 %s.03, 245760
  %68 = and i32 %67, %0
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds float addrspace(1)* %data, i64 %69
  %71 = load float addrspace(1)* %70, align 4
  %72 = add nsw i32 %s.03, 266240
  %73 = and i32 %72, %0
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds float addrspace(1)* %data, i64 %74
  %76 = load float addrspace(1)* %75, align 4
  %77 = add nsw i32 %s.03, 286720
  %78 = and i32 %77, %0
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds float addrspace(1)* %data, i64 %79
  %81 = load float addrspace(1)* %80, align 4
  %82 = add nsw i32 %s.03, 307200
  %83 = and i32 %82, %0
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds float addrspace(1)* %data, i64 %84
  %86 = load float addrspace(1)* %85, align 4
  %87 = fadd float %11, %16
  %88 = fadd float %87, %21
  %89 = fadd float %88, %26
  %90 = fadd float %89, %31
  %91 = fadd float %90, %36
  %92 = fadd float %91, %41
  %93 = fadd float %92, %46
  %94 = fadd float %93, %51
  %95 = fadd float %94, %56
  %96 = fadd float %95, %61
  %97 = fadd float %96, %66
  %98 = fadd float %97, %71
  %99 = fadd float %98, %76
  %100 = fadd float %99, %81
  %101 = fadd float %100, %86
  %102 = fadd float %sum.02, %101
  %103 = add nsw i32 %j.01, 1
  %104 = add nsw i32 %s.03, 327680
  %105 = and i32 %104, %0
  %exitcond = icmp eq i32 %103, 1024
  br i1 %exitcond, label %._crit_edge, label %7

._crit_edge:                                      ; preds = %7
  %106 = sext i32 %6 to i64
  %107 = getelementptr inbounds float addrspace(1)* %output, i64 %106
  store float %102, float addrspace(1)* %107, align 4
  %check.WI.iter = icmp ult i64 %CurrWI..0, %iterCount
  br i1 %check.WI.iter, label %thenBB, label %SyncBB4

thenBB:                                           ; preds = %._crit_edge
  %"CurrWI++" = add nuw i64 %CurrWI..0, 1
  br label %SyncBB

SyncBB4:                                          ; preds = %._crit_edge
  ret void
}

define void @____Vectorized_.readConstantMemoryCoalesced_separated_args(float addrspace(1)* nocapture %data, float addrspace(1)* nocapture %output, i32 %size, i8 addrspace(3)* %pLocalMem, %struct.WorkDim* %pWorkDim, i64* %pWGId, %struct.PaddedDimId* %pBaseGlbId, %struct.PaddedDimId* %pLocalIds, i64* %contextpointer, i64 %iterCount, i8* %pSpecialBuf, i64* %pCurrWI) nounwind alwaysinline {
bb.nph:
  %0 = add nsw i32 %size, -1
  %temp = insertelement <16 x i32> undef, i32 %0, i32 0
  %vector = shufflevector <16 x i32> %temp, <16 x i32> undef, <16 x i32> zeroinitializer
  br label %SyncBB528

SyncBB528:                                        ; preds = %thenBB, %bb.nph
  %CurrWI..0 = phi i64 [ 0, %bb.nph ], [ %"CurrWI++", %thenBB ]
  %1 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2 = load i64* %1, align 8
  %3 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %4 = load i64* %3, align 8
  %5 = add i64 %2, %4
  %broadcast1 = insertelement <16 x i64> undef, i64 %5, i32 0
  %broadcast2 = shufflevector <16 x i64> %broadcast1, <16 x i64> undef, <16 x i32> zeroinitializer
  %6 = add <16 x i64> %broadcast2, <i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8, i64 9, i64 10, i64 11, i64 12, i64 13, i64 14, i64 15>
  %7 = trunc <16 x i64> %6 to <16 x i32>
  br label %8

; <label>:8                                       ; preds = %8, %SyncBB528
  %vectorPHI = phi <16 x i32> [ %7, %SyncBB528 ], [ %1082, %8 ]
  %vectorPHI1 = phi <16 x float> [ zeroinitializer, %SyncBB528 ], [ %1079, %8 ]
  %j.01 = phi i32 [ 0, %SyncBB528 ], [ %1080, %8 ]
  %9 = and <16 x i32> %vectorPHI, %vector
  %10 = extractelement <16 x i32> %9, i32 0
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds float addrspace(1)* %data, i64 %11
  %13 = extractelement <16 x i32> %9, i32 1
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds float addrspace(1)* %data, i64 %14
  %16 = extractelement <16 x i32> %9, i32 2
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds float addrspace(1)* %data, i64 %17
  %19 = extractelement <16 x i32> %9, i32 3
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds float addrspace(1)* %data, i64 %20
  %22 = extractelement <16 x i32> %9, i32 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds float addrspace(1)* %data, i64 %23
  %25 = extractelement <16 x i32> %9, i32 5
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds float addrspace(1)* %data, i64 %26
  %28 = extractelement <16 x i32> %9, i32 6
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds float addrspace(1)* %data, i64 %29
  %31 = extractelement <16 x i32> %9, i32 7
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds float addrspace(1)* %data, i64 %32
  %34 = extractelement <16 x i32> %9, i32 8
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds float addrspace(1)* %data, i64 %35
  %37 = extractelement <16 x i32> %9, i32 9
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds float addrspace(1)* %data, i64 %38
  %40 = extractelement <16 x i32> %9, i32 10
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds float addrspace(1)* %data, i64 %41
  %43 = extractelement <16 x i32> %9, i32 11
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds float addrspace(1)* %data, i64 %44
  %46 = extractelement <16 x i32> %9, i32 12
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds float addrspace(1)* %data, i64 %47
  %49 = extractelement <16 x i32> %9, i32 13
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds float addrspace(1)* %data, i64 %50
  %52 = extractelement <16 x i32> %9, i32 14
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds float addrspace(1)* %data, i64 %53
  %55 = extractelement <16 x i32> %9, i32 15
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds float addrspace(1)* %data, i64 %56
  %58 = load float addrspace(1)* %12, align 4
  %59 = load float addrspace(1)* %15, align 4
  %60 = load float addrspace(1)* %18, align 4
  %61 = load float addrspace(1)* %21, align 4
  %62 = load float addrspace(1)* %24, align 4
  %63 = load float addrspace(1)* %27, align 4
  %64 = load float addrspace(1)* %30, align 4
  %65 = load float addrspace(1)* %33, align 4
  %66 = load float addrspace(1)* %36, align 4
  %67 = load float addrspace(1)* %39, align 4
  %68 = load float addrspace(1)* %42, align 4
  %69 = load float addrspace(1)* %45, align 4
  %70 = load float addrspace(1)* %48, align 4
  %71 = load float addrspace(1)* %51, align 4
  %72 = load float addrspace(1)* %54, align 4
  %73 = load float addrspace(1)* %57, align 4
  %temp.vect = insertelement <16 x float> undef, float %58, i32 0
  %temp.vect257 = insertelement <16 x float> %temp.vect, float %59, i32 1
  %temp.vect258 = insertelement <16 x float> %temp.vect257, float %60, i32 2
  %temp.vect259 = insertelement <16 x float> %temp.vect258, float %61, i32 3
  %temp.vect260 = insertelement <16 x float> %temp.vect259, float %62, i32 4
  %temp.vect261 = insertelement <16 x float> %temp.vect260, float %63, i32 5
  %temp.vect262 = insertelement <16 x float> %temp.vect261, float %64, i32 6
  %temp.vect263 = insertelement <16 x float> %temp.vect262, float %65, i32 7
  %temp.vect264 = insertelement <16 x float> %temp.vect263, float %66, i32 8
  %temp.vect265 = insertelement <16 x float> %temp.vect264, float %67, i32 9
  %temp.vect266 = insertelement <16 x float> %temp.vect265, float %68, i32 10
  %temp.vect267 = insertelement <16 x float> %temp.vect266, float %69, i32 11
  %temp.vect268 = insertelement <16 x float> %temp.vect267, float %70, i32 12
  %temp.vect269 = insertelement <16 x float> %temp.vect268, float %71, i32 13
  %temp.vect270 = insertelement <16 x float> %temp.vect269, float %72, i32 14
  %temp.vect271 = insertelement <16 x float> %temp.vect270, float %73, i32 15
  %74 = add nsw <16 x i32> %vectorPHI, <i32 20480, i32 20480, i32 20480, i32 20480, i32 20480, i32 20480, i32 20480, i32 20480, i32 20480, i32 20480, i32 20480, i32 20480, i32 20480, i32 20480, i32 20480, i32 20480>
  %75 = and <16 x i32> %74, %vector
  %76 = extractelement <16 x i32> %75, i32 0
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds float addrspace(1)* %data, i64 %77
  %79 = extractelement <16 x i32> %75, i32 1
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds float addrspace(1)* %data, i64 %80
  %82 = extractelement <16 x i32> %75, i32 2
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds float addrspace(1)* %data, i64 %83
  %85 = extractelement <16 x i32> %75, i32 3
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds float addrspace(1)* %data, i64 %86
  %88 = extractelement <16 x i32> %75, i32 4
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds float addrspace(1)* %data, i64 %89
  %91 = extractelement <16 x i32> %75, i32 5
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds float addrspace(1)* %data, i64 %92
  %94 = extractelement <16 x i32> %75, i32 6
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds float addrspace(1)* %data, i64 %95
  %97 = extractelement <16 x i32> %75, i32 7
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds float addrspace(1)* %data, i64 %98
  %100 = extractelement <16 x i32> %75, i32 8
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds float addrspace(1)* %data, i64 %101
  %103 = extractelement <16 x i32> %75, i32 9
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds float addrspace(1)* %data, i64 %104
  %106 = extractelement <16 x i32> %75, i32 10
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds float addrspace(1)* %data, i64 %107
  %109 = extractelement <16 x i32> %75, i32 11
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds float addrspace(1)* %data, i64 %110
  %112 = extractelement <16 x i32> %75, i32 12
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds float addrspace(1)* %data, i64 %113
  %115 = extractelement <16 x i32> %75, i32 13
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds float addrspace(1)* %data, i64 %116
  %118 = extractelement <16 x i32> %75, i32 14
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds float addrspace(1)* %data, i64 %119
  %121 = extractelement <16 x i32> %75, i32 15
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds float addrspace(1)* %data, i64 %122
  %124 = load float addrspace(1)* %78, align 4
  %125 = load float addrspace(1)* %81, align 4
  %126 = load float addrspace(1)* %84, align 4
  %127 = load float addrspace(1)* %87, align 4
  %128 = load float addrspace(1)* %90, align 4
  %129 = load float addrspace(1)* %93, align 4
  %130 = load float addrspace(1)* %96, align 4
  %131 = load float addrspace(1)* %99, align 4
  %132 = load float addrspace(1)* %102, align 4
  %133 = load float addrspace(1)* %105, align 4
  %134 = load float addrspace(1)* %108, align 4
  %135 = load float addrspace(1)* %111, align 4
  %136 = load float addrspace(1)* %114, align 4
  %137 = load float addrspace(1)* %117, align 4
  %138 = load float addrspace(1)* %120, align 4
  %139 = load float addrspace(1)* %123, align 4
  %temp.vect272 = insertelement <16 x float> undef, float %124, i32 0
  %temp.vect273 = insertelement <16 x float> %temp.vect272, float %125, i32 1
  %temp.vect274 = insertelement <16 x float> %temp.vect273, float %126, i32 2
  %temp.vect275 = insertelement <16 x float> %temp.vect274, float %127, i32 3
  %temp.vect276 = insertelement <16 x float> %temp.vect275, float %128, i32 4
  %temp.vect277 = insertelement <16 x float> %temp.vect276, float %129, i32 5
  %temp.vect278 = insertelement <16 x float> %temp.vect277, float %130, i32 6
  %temp.vect279 = insertelement <16 x float> %temp.vect278, float %131, i32 7
  %temp.vect280 = insertelement <16 x float> %temp.vect279, float %132, i32 8
  %temp.vect281 = insertelement <16 x float> %temp.vect280, float %133, i32 9
  %temp.vect282 = insertelement <16 x float> %temp.vect281, float %134, i32 10
  %temp.vect283 = insertelement <16 x float> %temp.vect282, float %135, i32 11
  %temp.vect284 = insertelement <16 x float> %temp.vect283, float %136, i32 12
  %temp.vect285 = insertelement <16 x float> %temp.vect284, float %137, i32 13
  %temp.vect286 = insertelement <16 x float> %temp.vect285, float %138, i32 14
  %temp.vect287 = insertelement <16 x float> %temp.vect286, float %139, i32 15
  %140 = add nsw <16 x i32> %vectorPHI, <i32 40960, i32 40960, i32 40960, i32 40960, i32 40960, i32 40960, i32 40960, i32 40960, i32 40960, i32 40960, i32 40960, i32 40960, i32 40960, i32 40960, i32 40960, i32 40960>
  %141 = and <16 x i32> %140, %vector
  %142 = extractelement <16 x i32> %141, i32 0
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds float addrspace(1)* %data, i64 %143
  %145 = extractelement <16 x i32> %141, i32 1
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds float addrspace(1)* %data, i64 %146
  %148 = extractelement <16 x i32> %141, i32 2
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds float addrspace(1)* %data, i64 %149
  %151 = extractelement <16 x i32> %141, i32 3
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds float addrspace(1)* %data, i64 %152
  %154 = extractelement <16 x i32> %141, i32 4
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds float addrspace(1)* %data, i64 %155
  %157 = extractelement <16 x i32> %141, i32 5
  %158 = sext i32 %157 to i64
  %159 = getelementptr inbounds float addrspace(1)* %data, i64 %158
  %160 = extractelement <16 x i32> %141, i32 6
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds float addrspace(1)* %data, i64 %161
  %163 = extractelement <16 x i32> %141, i32 7
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds float addrspace(1)* %data, i64 %164
  %166 = extractelement <16 x i32> %141, i32 8
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds float addrspace(1)* %data, i64 %167
  %169 = extractelement <16 x i32> %141, i32 9
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds float addrspace(1)* %data, i64 %170
  %172 = extractelement <16 x i32> %141, i32 10
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds float addrspace(1)* %data, i64 %173
  %175 = extractelement <16 x i32> %141, i32 11
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds float addrspace(1)* %data, i64 %176
  %178 = extractelement <16 x i32> %141, i32 12
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds float addrspace(1)* %data, i64 %179
  %181 = extractelement <16 x i32> %141, i32 13
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds float addrspace(1)* %data, i64 %182
  %184 = extractelement <16 x i32> %141, i32 14
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds float addrspace(1)* %data, i64 %185
  %187 = extractelement <16 x i32> %141, i32 15
  %188 = sext i32 %187 to i64
  %189 = getelementptr inbounds float addrspace(1)* %data, i64 %188
  %190 = load float addrspace(1)* %144, align 4
  %191 = load float addrspace(1)* %147, align 4
  %192 = load float addrspace(1)* %150, align 4
  %193 = load float addrspace(1)* %153, align 4
  %194 = load float addrspace(1)* %156, align 4
  %195 = load float addrspace(1)* %159, align 4
  %196 = load float addrspace(1)* %162, align 4
  %197 = load float addrspace(1)* %165, align 4
  %198 = load float addrspace(1)* %168, align 4
  %199 = load float addrspace(1)* %171, align 4
  %200 = load float addrspace(1)* %174, align 4
  %201 = load float addrspace(1)* %177, align 4
  %202 = load float addrspace(1)* %180, align 4
  %203 = load float addrspace(1)* %183, align 4
  %204 = load float addrspace(1)* %186, align 4
  %205 = load float addrspace(1)* %189, align 4
  %temp.vect288 = insertelement <16 x float> undef, float %190, i32 0
  %temp.vect289 = insertelement <16 x float> %temp.vect288, float %191, i32 1
  %temp.vect290 = insertelement <16 x float> %temp.vect289, float %192, i32 2
  %temp.vect291 = insertelement <16 x float> %temp.vect290, float %193, i32 3
  %temp.vect292 = insertelement <16 x float> %temp.vect291, float %194, i32 4
  %temp.vect293 = insertelement <16 x float> %temp.vect292, float %195, i32 5
  %temp.vect294 = insertelement <16 x float> %temp.vect293, float %196, i32 6
  %temp.vect295 = insertelement <16 x float> %temp.vect294, float %197, i32 7
  %temp.vect296 = insertelement <16 x float> %temp.vect295, float %198, i32 8
  %temp.vect297 = insertelement <16 x float> %temp.vect296, float %199, i32 9
  %temp.vect298 = insertelement <16 x float> %temp.vect297, float %200, i32 10
  %temp.vect299 = insertelement <16 x float> %temp.vect298, float %201, i32 11
  %temp.vect300 = insertelement <16 x float> %temp.vect299, float %202, i32 12
  %temp.vect301 = insertelement <16 x float> %temp.vect300, float %203, i32 13
  %temp.vect302 = insertelement <16 x float> %temp.vect301, float %204, i32 14
  %temp.vect303 = insertelement <16 x float> %temp.vect302, float %205, i32 15
  %206 = add nsw <16 x i32> %vectorPHI, <i32 61440, i32 61440, i32 61440, i32 61440, i32 61440, i32 61440, i32 61440, i32 61440, i32 61440, i32 61440, i32 61440, i32 61440, i32 61440, i32 61440, i32 61440, i32 61440>
  %207 = and <16 x i32> %206, %vector
  %208 = extractelement <16 x i32> %207, i32 0
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds float addrspace(1)* %data, i64 %209
  %211 = extractelement <16 x i32> %207, i32 1
  %212 = sext i32 %211 to i64
  %213 = getelementptr inbounds float addrspace(1)* %data, i64 %212
  %214 = extractelement <16 x i32> %207, i32 2
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds float addrspace(1)* %data, i64 %215
  %217 = extractelement <16 x i32> %207, i32 3
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds float addrspace(1)* %data, i64 %218
  %220 = extractelement <16 x i32> %207, i32 4
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds float addrspace(1)* %data, i64 %221
  %223 = extractelement <16 x i32> %207, i32 5
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds float addrspace(1)* %data, i64 %224
  %226 = extractelement <16 x i32> %207, i32 6
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds float addrspace(1)* %data, i64 %227
  %229 = extractelement <16 x i32> %207, i32 7
  %230 = sext i32 %229 to i64
  %231 = getelementptr inbounds float addrspace(1)* %data, i64 %230
  %232 = extractelement <16 x i32> %207, i32 8
  %233 = sext i32 %232 to i64
  %234 = getelementptr inbounds float addrspace(1)* %data, i64 %233
  %235 = extractelement <16 x i32> %207, i32 9
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds float addrspace(1)* %data, i64 %236
  %238 = extractelement <16 x i32> %207, i32 10
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds float addrspace(1)* %data, i64 %239
  %241 = extractelement <16 x i32> %207, i32 11
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds float addrspace(1)* %data, i64 %242
  %244 = extractelement <16 x i32> %207, i32 12
  %245 = sext i32 %244 to i64
  %246 = getelementptr inbounds float addrspace(1)* %data, i64 %245
  %247 = extractelement <16 x i32> %207, i32 13
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds float addrspace(1)* %data, i64 %248
  %250 = extractelement <16 x i32> %207, i32 14
  %251 = sext i32 %250 to i64
  %252 = getelementptr inbounds float addrspace(1)* %data, i64 %251
  %253 = extractelement <16 x i32> %207, i32 15
  %254 = sext i32 %253 to i64
  %255 = getelementptr inbounds float addrspace(1)* %data, i64 %254
  %256 = load float addrspace(1)* %210, align 4
  %257 = load float addrspace(1)* %213, align 4
  %258 = load float addrspace(1)* %216, align 4
  %259 = load float addrspace(1)* %219, align 4
  %260 = load float addrspace(1)* %222, align 4
  %261 = load float addrspace(1)* %225, align 4
  %262 = load float addrspace(1)* %228, align 4
  %263 = load float addrspace(1)* %231, align 4
  %264 = load float addrspace(1)* %234, align 4
  %265 = load float addrspace(1)* %237, align 4
  %266 = load float addrspace(1)* %240, align 4
  %267 = load float addrspace(1)* %243, align 4
  %268 = load float addrspace(1)* %246, align 4
  %269 = load float addrspace(1)* %249, align 4
  %270 = load float addrspace(1)* %252, align 4
  %271 = load float addrspace(1)* %255, align 4
  %temp.vect304 = insertelement <16 x float> undef, float %256, i32 0
  %temp.vect305 = insertelement <16 x float> %temp.vect304, float %257, i32 1
  %temp.vect306 = insertelement <16 x float> %temp.vect305, float %258, i32 2
  %temp.vect307 = insertelement <16 x float> %temp.vect306, float %259, i32 3
  %temp.vect308 = insertelement <16 x float> %temp.vect307, float %260, i32 4
  %temp.vect309 = insertelement <16 x float> %temp.vect308, float %261, i32 5
  %temp.vect310 = insertelement <16 x float> %temp.vect309, float %262, i32 6
  %temp.vect311 = insertelement <16 x float> %temp.vect310, float %263, i32 7
  %temp.vect312 = insertelement <16 x float> %temp.vect311, float %264, i32 8
  %temp.vect313 = insertelement <16 x float> %temp.vect312, float %265, i32 9
  %temp.vect314 = insertelement <16 x float> %temp.vect313, float %266, i32 10
  %temp.vect315 = insertelement <16 x float> %temp.vect314, float %267, i32 11
  %temp.vect316 = insertelement <16 x float> %temp.vect315, float %268, i32 12
  %temp.vect317 = insertelement <16 x float> %temp.vect316, float %269, i32 13
  %temp.vect318 = insertelement <16 x float> %temp.vect317, float %270, i32 14
  %temp.vect319 = insertelement <16 x float> %temp.vect318, float %271, i32 15
  %272 = add nsw <16 x i32> %vectorPHI, <i32 81920, i32 81920, i32 81920, i32 81920, i32 81920, i32 81920, i32 81920, i32 81920, i32 81920, i32 81920, i32 81920, i32 81920, i32 81920, i32 81920, i32 81920, i32 81920>
  %273 = and <16 x i32> %272, %vector
  %274 = extractelement <16 x i32> %273, i32 0
  %275 = sext i32 %274 to i64
  %276 = getelementptr inbounds float addrspace(1)* %data, i64 %275
  %277 = extractelement <16 x i32> %273, i32 1
  %278 = sext i32 %277 to i64
  %279 = getelementptr inbounds float addrspace(1)* %data, i64 %278
  %280 = extractelement <16 x i32> %273, i32 2
  %281 = sext i32 %280 to i64
  %282 = getelementptr inbounds float addrspace(1)* %data, i64 %281
  %283 = extractelement <16 x i32> %273, i32 3
  %284 = sext i32 %283 to i64
  %285 = getelementptr inbounds float addrspace(1)* %data, i64 %284
  %286 = extractelement <16 x i32> %273, i32 4
  %287 = sext i32 %286 to i64
  %288 = getelementptr inbounds float addrspace(1)* %data, i64 %287
  %289 = extractelement <16 x i32> %273, i32 5
  %290 = sext i32 %289 to i64
  %291 = getelementptr inbounds float addrspace(1)* %data, i64 %290
  %292 = extractelement <16 x i32> %273, i32 6
  %293 = sext i32 %292 to i64
  %294 = getelementptr inbounds float addrspace(1)* %data, i64 %293
  %295 = extractelement <16 x i32> %273, i32 7
  %296 = sext i32 %295 to i64
  %297 = getelementptr inbounds float addrspace(1)* %data, i64 %296
  %298 = extractelement <16 x i32> %273, i32 8
  %299 = sext i32 %298 to i64
  %300 = getelementptr inbounds float addrspace(1)* %data, i64 %299
  %301 = extractelement <16 x i32> %273, i32 9
  %302 = sext i32 %301 to i64
  %303 = getelementptr inbounds float addrspace(1)* %data, i64 %302
  %304 = extractelement <16 x i32> %273, i32 10
  %305 = sext i32 %304 to i64
  %306 = getelementptr inbounds float addrspace(1)* %data, i64 %305
  %307 = extractelement <16 x i32> %273, i32 11
  %308 = sext i32 %307 to i64
  %309 = getelementptr inbounds float addrspace(1)* %data, i64 %308
  %310 = extractelement <16 x i32> %273, i32 12
  %311 = sext i32 %310 to i64
  %312 = getelementptr inbounds float addrspace(1)* %data, i64 %311
  %313 = extractelement <16 x i32> %273, i32 13
  %314 = sext i32 %313 to i64
  %315 = getelementptr inbounds float addrspace(1)* %data, i64 %314
  %316 = extractelement <16 x i32> %273, i32 14
  %317 = sext i32 %316 to i64
  %318 = getelementptr inbounds float addrspace(1)* %data, i64 %317
  %319 = extractelement <16 x i32> %273, i32 15
  %320 = sext i32 %319 to i64
  %321 = getelementptr inbounds float addrspace(1)* %data, i64 %320
  %322 = load float addrspace(1)* %276, align 4
  %323 = load float addrspace(1)* %279, align 4
  %324 = load float addrspace(1)* %282, align 4
  %325 = load float addrspace(1)* %285, align 4
  %326 = load float addrspace(1)* %288, align 4
  %327 = load float addrspace(1)* %291, align 4
  %328 = load float addrspace(1)* %294, align 4
  %329 = load float addrspace(1)* %297, align 4
  %330 = load float addrspace(1)* %300, align 4
  %331 = load float addrspace(1)* %303, align 4
  %332 = load float addrspace(1)* %306, align 4
  %333 = load float addrspace(1)* %309, align 4
  %334 = load float addrspace(1)* %312, align 4
  %335 = load float addrspace(1)* %315, align 4
  %336 = load float addrspace(1)* %318, align 4
  %337 = load float addrspace(1)* %321, align 4
  %temp.vect320 = insertelement <16 x float> undef, float %322, i32 0
  %temp.vect321 = insertelement <16 x float> %temp.vect320, float %323, i32 1
  %temp.vect322 = insertelement <16 x float> %temp.vect321, float %324, i32 2
  %temp.vect323 = insertelement <16 x float> %temp.vect322, float %325, i32 3
  %temp.vect324 = insertelement <16 x float> %temp.vect323, float %326, i32 4
  %temp.vect325 = insertelement <16 x float> %temp.vect324, float %327, i32 5
  %temp.vect326 = insertelement <16 x float> %temp.vect325, float %328, i32 6
  %temp.vect327 = insertelement <16 x float> %temp.vect326, float %329, i32 7
  %temp.vect328 = insertelement <16 x float> %temp.vect327, float %330, i32 8
  %temp.vect329 = insertelement <16 x float> %temp.vect328, float %331, i32 9
  %temp.vect330 = insertelement <16 x float> %temp.vect329, float %332, i32 10
  %temp.vect331 = insertelement <16 x float> %temp.vect330, float %333, i32 11
  %temp.vect332 = insertelement <16 x float> %temp.vect331, float %334, i32 12
  %temp.vect333 = insertelement <16 x float> %temp.vect332, float %335, i32 13
  %temp.vect334 = insertelement <16 x float> %temp.vect333, float %336, i32 14
  %temp.vect335 = insertelement <16 x float> %temp.vect334, float %337, i32 15
  %338 = add nsw <16 x i32> %vectorPHI, <i32 102400, i32 102400, i32 102400, i32 102400, i32 102400, i32 102400, i32 102400, i32 102400, i32 102400, i32 102400, i32 102400, i32 102400, i32 102400, i32 102400, i32 102400, i32 102400>
  %339 = and <16 x i32> %338, %vector
  %340 = extractelement <16 x i32> %339, i32 0
  %341 = sext i32 %340 to i64
  %342 = getelementptr inbounds float addrspace(1)* %data, i64 %341
  %343 = extractelement <16 x i32> %339, i32 1
  %344 = sext i32 %343 to i64
  %345 = getelementptr inbounds float addrspace(1)* %data, i64 %344
  %346 = extractelement <16 x i32> %339, i32 2
  %347 = sext i32 %346 to i64
  %348 = getelementptr inbounds float addrspace(1)* %data, i64 %347
  %349 = extractelement <16 x i32> %339, i32 3
  %350 = sext i32 %349 to i64
  %351 = getelementptr inbounds float addrspace(1)* %data, i64 %350
  %352 = extractelement <16 x i32> %339, i32 4
  %353 = sext i32 %352 to i64
  %354 = getelementptr inbounds float addrspace(1)* %data, i64 %353
  %355 = extractelement <16 x i32> %339, i32 5
  %356 = sext i32 %355 to i64
  %357 = getelementptr inbounds float addrspace(1)* %data, i64 %356
  %358 = extractelement <16 x i32> %339, i32 6
  %359 = sext i32 %358 to i64
  %360 = getelementptr inbounds float addrspace(1)* %data, i64 %359
  %361 = extractelement <16 x i32> %339, i32 7
  %362 = sext i32 %361 to i64
  %363 = getelementptr inbounds float addrspace(1)* %data, i64 %362
  %364 = extractelement <16 x i32> %339, i32 8
  %365 = sext i32 %364 to i64
  %366 = getelementptr inbounds float addrspace(1)* %data, i64 %365
  %367 = extractelement <16 x i32> %339, i32 9
  %368 = sext i32 %367 to i64
  %369 = getelementptr inbounds float addrspace(1)* %data, i64 %368
  %370 = extractelement <16 x i32> %339, i32 10
  %371 = sext i32 %370 to i64
  %372 = getelementptr inbounds float addrspace(1)* %data, i64 %371
  %373 = extractelement <16 x i32> %339, i32 11
  %374 = sext i32 %373 to i64
  %375 = getelementptr inbounds float addrspace(1)* %data, i64 %374
  %376 = extractelement <16 x i32> %339, i32 12
  %377 = sext i32 %376 to i64
  %378 = getelementptr inbounds float addrspace(1)* %data, i64 %377
  %379 = extractelement <16 x i32> %339, i32 13
  %380 = sext i32 %379 to i64
  %381 = getelementptr inbounds float addrspace(1)* %data, i64 %380
  %382 = extractelement <16 x i32> %339, i32 14
  %383 = sext i32 %382 to i64
  %384 = getelementptr inbounds float addrspace(1)* %data, i64 %383
  %385 = extractelement <16 x i32> %339, i32 15
  %386 = sext i32 %385 to i64
  %387 = getelementptr inbounds float addrspace(1)* %data, i64 %386
  %388 = load float addrspace(1)* %342, align 4
  %389 = load float addrspace(1)* %345, align 4
  %390 = load float addrspace(1)* %348, align 4
  %391 = load float addrspace(1)* %351, align 4
  %392 = load float addrspace(1)* %354, align 4
  %393 = load float addrspace(1)* %357, align 4
  %394 = load float addrspace(1)* %360, align 4
  %395 = load float addrspace(1)* %363, align 4
  %396 = load float addrspace(1)* %366, align 4
  %397 = load float addrspace(1)* %369, align 4
  %398 = load float addrspace(1)* %372, align 4
  %399 = load float addrspace(1)* %375, align 4
  %400 = load float addrspace(1)* %378, align 4
  %401 = load float addrspace(1)* %381, align 4
  %402 = load float addrspace(1)* %384, align 4
  %403 = load float addrspace(1)* %387, align 4
  %temp.vect336 = insertelement <16 x float> undef, float %388, i32 0
  %temp.vect337 = insertelement <16 x float> %temp.vect336, float %389, i32 1
  %temp.vect338 = insertelement <16 x float> %temp.vect337, float %390, i32 2
  %temp.vect339 = insertelement <16 x float> %temp.vect338, float %391, i32 3
  %temp.vect340 = insertelement <16 x float> %temp.vect339, float %392, i32 4
  %temp.vect341 = insertelement <16 x float> %temp.vect340, float %393, i32 5
  %temp.vect342 = insertelement <16 x float> %temp.vect341, float %394, i32 6
  %temp.vect343 = insertelement <16 x float> %temp.vect342, float %395, i32 7
  %temp.vect344 = insertelement <16 x float> %temp.vect343, float %396, i32 8
  %temp.vect345 = insertelement <16 x float> %temp.vect344, float %397, i32 9
  %temp.vect346 = insertelement <16 x float> %temp.vect345, float %398, i32 10
  %temp.vect347 = insertelement <16 x float> %temp.vect346, float %399, i32 11
  %temp.vect348 = insertelement <16 x float> %temp.vect347, float %400, i32 12
  %temp.vect349 = insertelement <16 x float> %temp.vect348, float %401, i32 13
  %temp.vect350 = insertelement <16 x float> %temp.vect349, float %402, i32 14
  %temp.vect351 = insertelement <16 x float> %temp.vect350, float %403, i32 15
  %404 = add nsw <16 x i32> %vectorPHI, <i32 122880, i32 122880, i32 122880, i32 122880, i32 122880, i32 122880, i32 122880, i32 122880, i32 122880, i32 122880, i32 122880, i32 122880, i32 122880, i32 122880, i32 122880, i32 122880>
  %405 = and <16 x i32> %404, %vector
  %406 = extractelement <16 x i32> %405, i32 0
  %407 = sext i32 %406 to i64
  %408 = getelementptr inbounds float addrspace(1)* %data, i64 %407
  %409 = extractelement <16 x i32> %405, i32 1
  %410 = sext i32 %409 to i64
  %411 = getelementptr inbounds float addrspace(1)* %data, i64 %410
  %412 = extractelement <16 x i32> %405, i32 2
  %413 = sext i32 %412 to i64
  %414 = getelementptr inbounds float addrspace(1)* %data, i64 %413
  %415 = extractelement <16 x i32> %405, i32 3
  %416 = sext i32 %415 to i64
  %417 = getelementptr inbounds float addrspace(1)* %data, i64 %416
  %418 = extractelement <16 x i32> %405, i32 4
  %419 = sext i32 %418 to i64
  %420 = getelementptr inbounds float addrspace(1)* %data, i64 %419
  %421 = extractelement <16 x i32> %405, i32 5
  %422 = sext i32 %421 to i64
  %423 = getelementptr inbounds float addrspace(1)* %data, i64 %422
  %424 = extractelement <16 x i32> %405, i32 6
  %425 = sext i32 %424 to i64
  %426 = getelementptr inbounds float addrspace(1)* %data, i64 %425
  %427 = extractelement <16 x i32> %405, i32 7
  %428 = sext i32 %427 to i64
  %429 = getelementptr inbounds float addrspace(1)* %data, i64 %428
  %430 = extractelement <16 x i32> %405, i32 8
  %431 = sext i32 %430 to i64
  %432 = getelementptr inbounds float addrspace(1)* %data, i64 %431
  %433 = extractelement <16 x i32> %405, i32 9
  %434 = sext i32 %433 to i64
  %435 = getelementptr inbounds float addrspace(1)* %data, i64 %434
  %436 = extractelement <16 x i32> %405, i32 10
  %437 = sext i32 %436 to i64
  %438 = getelementptr inbounds float addrspace(1)* %data, i64 %437
  %439 = extractelement <16 x i32> %405, i32 11
  %440 = sext i32 %439 to i64
  %441 = getelementptr inbounds float addrspace(1)* %data, i64 %440
  %442 = extractelement <16 x i32> %405, i32 12
  %443 = sext i32 %442 to i64
  %444 = getelementptr inbounds float addrspace(1)* %data, i64 %443
  %445 = extractelement <16 x i32> %405, i32 13
  %446 = sext i32 %445 to i64
  %447 = getelementptr inbounds float addrspace(1)* %data, i64 %446
  %448 = extractelement <16 x i32> %405, i32 14
  %449 = sext i32 %448 to i64
  %450 = getelementptr inbounds float addrspace(1)* %data, i64 %449
  %451 = extractelement <16 x i32> %405, i32 15
  %452 = sext i32 %451 to i64
  %453 = getelementptr inbounds float addrspace(1)* %data, i64 %452
  %454 = load float addrspace(1)* %408, align 4
  %455 = load float addrspace(1)* %411, align 4
  %456 = load float addrspace(1)* %414, align 4
  %457 = load float addrspace(1)* %417, align 4
  %458 = load float addrspace(1)* %420, align 4
  %459 = load float addrspace(1)* %423, align 4
  %460 = load float addrspace(1)* %426, align 4
  %461 = load float addrspace(1)* %429, align 4
  %462 = load float addrspace(1)* %432, align 4
  %463 = load float addrspace(1)* %435, align 4
  %464 = load float addrspace(1)* %438, align 4
  %465 = load float addrspace(1)* %441, align 4
  %466 = load float addrspace(1)* %444, align 4
  %467 = load float addrspace(1)* %447, align 4
  %468 = load float addrspace(1)* %450, align 4
  %469 = load float addrspace(1)* %453, align 4
  %temp.vect352 = insertelement <16 x float> undef, float %454, i32 0
  %temp.vect353 = insertelement <16 x float> %temp.vect352, float %455, i32 1
  %temp.vect354 = insertelement <16 x float> %temp.vect353, float %456, i32 2
  %temp.vect355 = insertelement <16 x float> %temp.vect354, float %457, i32 3
  %temp.vect356 = insertelement <16 x float> %temp.vect355, float %458, i32 4
  %temp.vect357 = insertelement <16 x float> %temp.vect356, float %459, i32 5
  %temp.vect358 = insertelement <16 x float> %temp.vect357, float %460, i32 6
  %temp.vect359 = insertelement <16 x float> %temp.vect358, float %461, i32 7
  %temp.vect360 = insertelement <16 x float> %temp.vect359, float %462, i32 8
  %temp.vect361 = insertelement <16 x float> %temp.vect360, float %463, i32 9
  %temp.vect362 = insertelement <16 x float> %temp.vect361, float %464, i32 10
  %temp.vect363 = insertelement <16 x float> %temp.vect362, float %465, i32 11
  %temp.vect364 = insertelement <16 x float> %temp.vect363, float %466, i32 12
  %temp.vect365 = insertelement <16 x float> %temp.vect364, float %467, i32 13
  %temp.vect366 = insertelement <16 x float> %temp.vect365, float %468, i32 14
  %temp.vect367 = insertelement <16 x float> %temp.vect366, float %469, i32 15
  %470 = add nsw <16 x i32> %vectorPHI, <i32 143360, i32 143360, i32 143360, i32 143360, i32 143360, i32 143360, i32 143360, i32 143360, i32 143360, i32 143360, i32 143360, i32 143360, i32 143360, i32 143360, i32 143360, i32 143360>
  %471 = and <16 x i32> %470, %vector
  %472 = extractelement <16 x i32> %471, i32 0
  %473 = sext i32 %472 to i64
  %474 = getelementptr inbounds float addrspace(1)* %data, i64 %473
  %475 = extractelement <16 x i32> %471, i32 1
  %476 = sext i32 %475 to i64
  %477 = getelementptr inbounds float addrspace(1)* %data, i64 %476
  %478 = extractelement <16 x i32> %471, i32 2
  %479 = sext i32 %478 to i64
  %480 = getelementptr inbounds float addrspace(1)* %data, i64 %479
  %481 = extractelement <16 x i32> %471, i32 3
  %482 = sext i32 %481 to i64
  %483 = getelementptr inbounds float addrspace(1)* %data, i64 %482
  %484 = extractelement <16 x i32> %471, i32 4
  %485 = sext i32 %484 to i64
  %486 = getelementptr inbounds float addrspace(1)* %data, i64 %485
  %487 = extractelement <16 x i32> %471, i32 5
  %488 = sext i32 %487 to i64
  %489 = getelementptr inbounds float addrspace(1)* %data, i64 %488
  %490 = extractelement <16 x i32> %471, i32 6
  %491 = sext i32 %490 to i64
  %492 = getelementptr inbounds float addrspace(1)* %data, i64 %491
  %493 = extractelement <16 x i32> %471, i32 7
  %494 = sext i32 %493 to i64
  %495 = getelementptr inbounds float addrspace(1)* %data, i64 %494
  %496 = extractelement <16 x i32> %471, i32 8
  %497 = sext i32 %496 to i64
  %498 = getelementptr inbounds float addrspace(1)* %data, i64 %497
  %499 = extractelement <16 x i32> %471, i32 9
  %500 = sext i32 %499 to i64
  %501 = getelementptr inbounds float addrspace(1)* %data, i64 %500
  %502 = extractelement <16 x i32> %471, i32 10
  %503 = sext i32 %502 to i64
  %504 = getelementptr inbounds float addrspace(1)* %data, i64 %503
  %505 = extractelement <16 x i32> %471, i32 11
  %506 = sext i32 %505 to i64
  %507 = getelementptr inbounds float addrspace(1)* %data, i64 %506
  %508 = extractelement <16 x i32> %471, i32 12
  %509 = sext i32 %508 to i64
  %510 = getelementptr inbounds float addrspace(1)* %data, i64 %509
  %511 = extractelement <16 x i32> %471, i32 13
  %512 = sext i32 %511 to i64
  %513 = getelementptr inbounds float addrspace(1)* %data, i64 %512
  %514 = extractelement <16 x i32> %471, i32 14
  %515 = sext i32 %514 to i64
  %516 = getelementptr inbounds float addrspace(1)* %data, i64 %515
  %517 = extractelement <16 x i32> %471, i32 15
  %518 = sext i32 %517 to i64
  %519 = getelementptr inbounds float addrspace(1)* %data, i64 %518
  %520 = load float addrspace(1)* %474, align 4
  %521 = load float addrspace(1)* %477, align 4
  %522 = load float addrspace(1)* %480, align 4
  %523 = load float addrspace(1)* %483, align 4
  %524 = load float addrspace(1)* %486, align 4
  %525 = load float addrspace(1)* %489, align 4
  %526 = load float addrspace(1)* %492, align 4
  %527 = load float addrspace(1)* %495, align 4
  %528 = load float addrspace(1)* %498, align 4
  %529 = load float addrspace(1)* %501, align 4
  %530 = load float addrspace(1)* %504, align 4
  %531 = load float addrspace(1)* %507, align 4
  %532 = load float addrspace(1)* %510, align 4
  %533 = load float addrspace(1)* %513, align 4
  %534 = load float addrspace(1)* %516, align 4
  %535 = load float addrspace(1)* %519, align 4
  %temp.vect368 = insertelement <16 x float> undef, float %520, i32 0
  %temp.vect369 = insertelement <16 x float> %temp.vect368, float %521, i32 1
  %temp.vect370 = insertelement <16 x float> %temp.vect369, float %522, i32 2
  %temp.vect371 = insertelement <16 x float> %temp.vect370, float %523, i32 3
  %temp.vect372 = insertelement <16 x float> %temp.vect371, float %524, i32 4
  %temp.vect373 = insertelement <16 x float> %temp.vect372, float %525, i32 5
  %temp.vect374 = insertelement <16 x float> %temp.vect373, float %526, i32 6
  %temp.vect375 = insertelement <16 x float> %temp.vect374, float %527, i32 7
  %temp.vect376 = insertelement <16 x float> %temp.vect375, float %528, i32 8
  %temp.vect377 = insertelement <16 x float> %temp.vect376, float %529, i32 9
  %temp.vect378 = insertelement <16 x float> %temp.vect377, float %530, i32 10
  %temp.vect379 = insertelement <16 x float> %temp.vect378, float %531, i32 11
  %temp.vect380 = insertelement <16 x float> %temp.vect379, float %532, i32 12
  %temp.vect381 = insertelement <16 x float> %temp.vect380, float %533, i32 13
  %temp.vect382 = insertelement <16 x float> %temp.vect381, float %534, i32 14
  %temp.vect383 = insertelement <16 x float> %temp.vect382, float %535, i32 15
  %536 = add nsw <16 x i32> %vectorPHI, <i32 163840, i32 163840, i32 163840, i32 163840, i32 163840, i32 163840, i32 163840, i32 163840, i32 163840, i32 163840, i32 163840, i32 163840, i32 163840, i32 163840, i32 163840, i32 163840>
  %537 = and <16 x i32> %536, %vector
  %538 = extractelement <16 x i32> %537, i32 0
  %539 = sext i32 %538 to i64
  %540 = getelementptr inbounds float addrspace(1)* %data, i64 %539
  %541 = extractelement <16 x i32> %537, i32 1
  %542 = sext i32 %541 to i64
  %543 = getelementptr inbounds float addrspace(1)* %data, i64 %542
  %544 = extractelement <16 x i32> %537, i32 2
  %545 = sext i32 %544 to i64
  %546 = getelementptr inbounds float addrspace(1)* %data, i64 %545
  %547 = extractelement <16 x i32> %537, i32 3
  %548 = sext i32 %547 to i64
  %549 = getelementptr inbounds float addrspace(1)* %data, i64 %548
  %550 = extractelement <16 x i32> %537, i32 4
  %551 = sext i32 %550 to i64
  %552 = getelementptr inbounds float addrspace(1)* %data, i64 %551
  %553 = extractelement <16 x i32> %537, i32 5
  %554 = sext i32 %553 to i64
  %555 = getelementptr inbounds float addrspace(1)* %data, i64 %554
  %556 = extractelement <16 x i32> %537, i32 6
  %557 = sext i32 %556 to i64
  %558 = getelementptr inbounds float addrspace(1)* %data, i64 %557
  %559 = extractelement <16 x i32> %537, i32 7
  %560 = sext i32 %559 to i64
  %561 = getelementptr inbounds float addrspace(1)* %data, i64 %560
  %562 = extractelement <16 x i32> %537, i32 8
  %563 = sext i32 %562 to i64
  %564 = getelementptr inbounds float addrspace(1)* %data, i64 %563
  %565 = extractelement <16 x i32> %537, i32 9
  %566 = sext i32 %565 to i64
  %567 = getelementptr inbounds float addrspace(1)* %data, i64 %566
  %568 = extractelement <16 x i32> %537, i32 10
  %569 = sext i32 %568 to i64
  %570 = getelementptr inbounds float addrspace(1)* %data, i64 %569
  %571 = extractelement <16 x i32> %537, i32 11
  %572 = sext i32 %571 to i64
  %573 = getelementptr inbounds float addrspace(1)* %data, i64 %572
  %574 = extractelement <16 x i32> %537, i32 12
  %575 = sext i32 %574 to i64
  %576 = getelementptr inbounds float addrspace(1)* %data, i64 %575
  %577 = extractelement <16 x i32> %537, i32 13
  %578 = sext i32 %577 to i64
  %579 = getelementptr inbounds float addrspace(1)* %data, i64 %578
  %580 = extractelement <16 x i32> %537, i32 14
  %581 = sext i32 %580 to i64
  %582 = getelementptr inbounds float addrspace(1)* %data, i64 %581
  %583 = extractelement <16 x i32> %537, i32 15
  %584 = sext i32 %583 to i64
  %585 = getelementptr inbounds float addrspace(1)* %data, i64 %584
  %586 = load float addrspace(1)* %540, align 4
  %587 = load float addrspace(1)* %543, align 4
  %588 = load float addrspace(1)* %546, align 4
  %589 = load float addrspace(1)* %549, align 4
  %590 = load float addrspace(1)* %552, align 4
  %591 = load float addrspace(1)* %555, align 4
  %592 = load float addrspace(1)* %558, align 4
  %593 = load float addrspace(1)* %561, align 4
  %594 = load float addrspace(1)* %564, align 4
  %595 = load float addrspace(1)* %567, align 4
  %596 = load float addrspace(1)* %570, align 4
  %597 = load float addrspace(1)* %573, align 4
  %598 = load float addrspace(1)* %576, align 4
  %599 = load float addrspace(1)* %579, align 4
  %600 = load float addrspace(1)* %582, align 4
  %601 = load float addrspace(1)* %585, align 4
  %temp.vect384 = insertelement <16 x float> undef, float %586, i32 0
  %temp.vect385 = insertelement <16 x float> %temp.vect384, float %587, i32 1
  %temp.vect386 = insertelement <16 x float> %temp.vect385, float %588, i32 2
  %temp.vect387 = insertelement <16 x float> %temp.vect386, float %589, i32 3
  %temp.vect388 = insertelement <16 x float> %temp.vect387, float %590, i32 4
  %temp.vect389 = insertelement <16 x float> %temp.vect388, float %591, i32 5
  %temp.vect390 = insertelement <16 x float> %temp.vect389, float %592, i32 6
  %temp.vect391 = insertelement <16 x float> %temp.vect390, float %593, i32 7
  %temp.vect392 = insertelement <16 x float> %temp.vect391, float %594, i32 8
  %temp.vect393 = insertelement <16 x float> %temp.vect392, float %595, i32 9
  %temp.vect394 = insertelement <16 x float> %temp.vect393, float %596, i32 10
  %temp.vect395 = insertelement <16 x float> %temp.vect394, float %597, i32 11
  %temp.vect396 = insertelement <16 x float> %temp.vect395, float %598, i32 12
  %temp.vect397 = insertelement <16 x float> %temp.vect396, float %599, i32 13
  %temp.vect398 = insertelement <16 x float> %temp.vect397, float %600, i32 14
  %temp.vect399 = insertelement <16 x float> %temp.vect398, float %601, i32 15
  %602 = add nsw <16 x i32> %vectorPHI, <i32 184320, i32 184320, i32 184320, i32 184320, i32 184320, i32 184320, i32 184320, i32 184320, i32 184320, i32 184320, i32 184320, i32 184320, i32 184320, i32 184320, i32 184320, i32 184320>
  %603 = and <16 x i32> %602, %vector
  %604 = extractelement <16 x i32> %603, i32 0
  %605 = sext i32 %604 to i64
  %606 = getelementptr inbounds float addrspace(1)* %data, i64 %605
  %607 = extractelement <16 x i32> %603, i32 1
  %608 = sext i32 %607 to i64
  %609 = getelementptr inbounds float addrspace(1)* %data, i64 %608
  %610 = extractelement <16 x i32> %603, i32 2
  %611 = sext i32 %610 to i64
  %612 = getelementptr inbounds float addrspace(1)* %data, i64 %611
  %613 = extractelement <16 x i32> %603, i32 3
  %614 = sext i32 %613 to i64
  %615 = getelementptr inbounds float addrspace(1)* %data, i64 %614
  %616 = extractelement <16 x i32> %603, i32 4
  %617 = sext i32 %616 to i64
  %618 = getelementptr inbounds float addrspace(1)* %data, i64 %617
  %619 = extractelement <16 x i32> %603, i32 5
  %620 = sext i32 %619 to i64
  %621 = getelementptr inbounds float addrspace(1)* %data, i64 %620
  %622 = extractelement <16 x i32> %603, i32 6
  %623 = sext i32 %622 to i64
  %624 = getelementptr inbounds float addrspace(1)* %data, i64 %623
  %625 = extractelement <16 x i32> %603, i32 7
  %626 = sext i32 %625 to i64
  %627 = getelementptr inbounds float addrspace(1)* %data, i64 %626
  %628 = extractelement <16 x i32> %603, i32 8
  %629 = sext i32 %628 to i64
  %630 = getelementptr inbounds float addrspace(1)* %data, i64 %629
  %631 = extractelement <16 x i32> %603, i32 9
  %632 = sext i32 %631 to i64
  %633 = getelementptr inbounds float addrspace(1)* %data, i64 %632
  %634 = extractelement <16 x i32> %603, i32 10
  %635 = sext i32 %634 to i64
  %636 = getelementptr inbounds float addrspace(1)* %data, i64 %635
  %637 = extractelement <16 x i32> %603, i32 11
  %638 = sext i32 %637 to i64
  %639 = getelementptr inbounds float addrspace(1)* %data, i64 %638
  %640 = extractelement <16 x i32> %603, i32 12
  %641 = sext i32 %640 to i64
  %642 = getelementptr inbounds float addrspace(1)* %data, i64 %641
  %643 = extractelement <16 x i32> %603, i32 13
  %644 = sext i32 %643 to i64
  %645 = getelementptr inbounds float addrspace(1)* %data, i64 %644
  %646 = extractelement <16 x i32> %603, i32 14
  %647 = sext i32 %646 to i64
  %648 = getelementptr inbounds float addrspace(1)* %data, i64 %647
  %649 = extractelement <16 x i32> %603, i32 15
  %650 = sext i32 %649 to i64
  %651 = getelementptr inbounds float addrspace(1)* %data, i64 %650
  %652 = load float addrspace(1)* %606, align 4
  %653 = load float addrspace(1)* %609, align 4
  %654 = load float addrspace(1)* %612, align 4
  %655 = load float addrspace(1)* %615, align 4
  %656 = load float addrspace(1)* %618, align 4
  %657 = load float addrspace(1)* %621, align 4
  %658 = load float addrspace(1)* %624, align 4
  %659 = load float addrspace(1)* %627, align 4
  %660 = load float addrspace(1)* %630, align 4
  %661 = load float addrspace(1)* %633, align 4
  %662 = load float addrspace(1)* %636, align 4
  %663 = load float addrspace(1)* %639, align 4
  %664 = load float addrspace(1)* %642, align 4
  %665 = load float addrspace(1)* %645, align 4
  %666 = load float addrspace(1)* %648, align 4
  %667 = load float addrspace(1)* %651, align 4
  %temp.vect400 = insertelement <16 x float> undef, float %652, i32 0
  %temp.vect401 = insertelement <16 x float> %temp.vect400, float %653, i32 1
  %temp.vect402 = insertelement <16 x float> %temp.vect401, float %654, i32 2
  %temp.vect403 = insertelement <16 x float> %temp.vect402, float %655, i32 3
  %temp.vect404 = insertelement <16 x float> %temp.vect403, float %656, i32 4
  %temp.vect405 = insertelement <16 x float> %temp.vect404, float %657, i32 5
  %temp.vect406 = insertelement <16 x float> %temp.vect405, float %658, i32 6
  %temp.vect407 = insertelement <16 x float> %temp.vect406, float %659, i32 7
  %temp.vect408 = insertelement <16 x float> %temp.vect407, float %660, i32 8
  %temp.vect409 = insertelement <16 x float> %temp.vect408, float %661, i32 9
  %temp.vect410 = insertelement <16 x float> %temp.vect409, float %662, i32 10
  %temp.vect411 = insertelement <16 x float> %temp.vect410, float %663, i32 11
  %temp.vect412 = insertelement <16 x float> %temp.vect411, float %664, i32 12
  %temp.vect413 = insertelement <16 x float> %temp.vect412, float %665, i32 13
  %temp.vect414 = insertelement <16 x float> %temp.vect413, float %666, i32 14
  %temp.vect415 = insertelement <16 x float> %temp.vect414, float %667, i32 15
  %668 = add nsw <16 x i32> %vectorPHI, <i32 204800, i32 204800, i32 204800, i32 204800, i32 204800, i32 204800, i32 204800, i32 204800, i32 204800, i32 204800, i32 204800, i32 204800, i32 204800, i32 204800, i32 204800, i32 204800>
  %669 = and <16 x i32> %668, %vector
  %670 = extractelement <16 x i32> %669, i32 0
  %671 = sext i32 %670 to i64
  %672 = getelementptr inbounds float addrspace(1)* %data, i64 %671
  %673 = extractelement <16 x i32> %669, i32 1
  %674 = sext i32 %673 to i64
  %675 = getelementptr inbounds float addrspace(1)* %data, i64 %674
  %676 = extractelement <16 x i32> %669, i32 2
  %677 = sext i32 %676 to i64
  %678 = getelementptr inbounds float addrspace(1)* %data, i64 %677
  %679 = extractelement <16 x i32> %669, i32 3
  %680 = sext i32 %679 to i64
  %681 = getelementptr inbounds float addrspace(1)* %data, i64 %680
  %682 = extractelement <16 x i32> %669, i32 4
  %683 = sext i32 %682 to i64
  %684 = getelementptr inbounds float addrspace(1)* %data, i64 %683
  %685 = extractelement <16 x i32> %669, i32 5
  %686 = sext i32 %685 to i64
  %687 = getelementptr inbounds float addrspace(1)* %data, i64 %686
  %688 = extractelement <16 x i32> %669, i32 6
  %689 = sext i32 %688 to i64
  %690 = getelementptr inbounds float addrspace(1)* %data, i64 %689
  %691 = extractelement <16 x i32> %669, i32 7
  %692 = sext i32 %691 to i64
  %693 = getelementptr inbounds float addrspace(1)* %data, i64 %692
  %694 = extractelement <16 x i32> %669, i32 8
  %695 = sext i32 %694 to i64
  %696 = getelementptr inbounds float addrspace(1)* %data, i64 %695
  %697 = extractelement <16 x i32> %669, i32 9
  %698 = sext i32 %697 to i64
  %699 = getelementptr inbounds float addrspace(1)* %data, i64 %698
  %700 = extractelement <16 x i32> %669, i32 10
  %701 = sext i32 %700 to i64
  %702 = getelementptr inbounds float addrspace(1)* %data, i64 %701
  %703 = extractelement <16 x i32> %669, i32 11
  %704 = sext i32 %703 to i64
  %705 = getelementptr inbounds float addrspace(1)* %data, i64 %704
  %706 = extractelement <16 x i32> %669, i32 12
  %707 = sext i32 %706 to i64
  %708 = getelementptr inbounds float addrspace(1)* %data, i64 %707
  %709 = extractelement <16 x i32> %669, i32 13
  %710 = sext i32 %709 to i64
  %711 = getelementptr inbounds float addrspace(1)* %data, i64 %710
  %712 = extractelement <16 x i32> %669, i32 14
  %713 = sext i32 %712 to i64
  %714 = getelementptr inbounds float addrspace(1)* %data, i64 %713
  %715 = extractelement <16 x i32> %669, i32 15
  %716 = sext i32 %715 to i64
  %717 = getelementptr inbounds float addrspace(1)* %data, i64 %716
  %718 = load float addrspace(1)* %672, align 4
  %719 = load float addrspace(1)* %675, align 4
  %720 = load float addrspace(1)* %678, align 4
  %721 = load float addrspace(1)* %681, align 4
  %722 = load float addrspace(1)* %684, align 4
  %723 = load float addrspace(1)* %687, align 4
  %724 = load float addrspace(1)* %690, align 4
  %725 = load float addrspace(1)* %693, align 4
  %726 = load float addrspace(1)* %696, align 4
  %727 = load float addrspace(1)* %699, align 4
  %728 = load float addrspace(1)* %702, align 4
  %729 = load float addrspace(1)* %705, align 4
  %730 = load float addrspace(1)* %708, align 4
  %731 = load float addrspace(1)* %711, align 4
  %732 = load float addrspace(1)* %714, align 4
  %733 = load float addrspace(1)* %717, align 4
  %temp.vect416 = insertelement <16 x float> undef, float %718, i32 0
  %temp.vect417 = insertelement <16 x float> %temp.vect416, float %719, i32 1
  %temp.vect418 = insertelement <16 x float> %temp.vect417, float %720, i32 2
  %temp.vect419 = insertelement <16 x float> %temp.vect418, float %721, i32 3
  %temp.vect420 = insertelement <16 x float> %temp.vect419, float %722, i32 4
  %temp.vect421 = insertelement <16 x float> %temp.vect420, float %723, i32 5
  %temp.vect422 = insertelement <16 x float> %temp.vect421, float %724, i32 6
  %temp.vect423 = insertelement <16 x float> %temp.vect422, float %725, i32 7
  %temp.vect424 = insertelement <16 x float> %temp.vect423, float %726, i32 8
  %temp.vect425 = insertelement <16 x float> %temp.vect424, float %727, i32 9
  %temp.vect426 = insertelement <16 x float> %temp.vect425, float %728, i32 10
  %temp.vect427 = insertelement <16 x float> %temp.vect426, float %729, i32 11
  %temp.vect428 = insertelement <16 x float> %temp.vect427, float %730, i32 12
  %temp.vect429 = insertelement <16 x float> %temp.vect428, float %731, i32 13
  %temp.vect430 = insertelement <16 x float> %temp.vect429, float %732, i32 14
  %temp.vect431 = insertelement <16 x float> %temp.vect430, float %733, i32 15
  %734 = add nsw <16 x i32> %vectorPHI, <i32 225280, i32 225280, i32 225280, i32 225280, i32 225280, i32 225280, i32 225280, i32 225280, i32 225280, i32 225280, i32 225280, i32 225280, i32 225280, i32 225280, i32 225280, i32 225280>
  %735 = and <16 x i32> %734, %vector
  %736 = extractelement <16 x i32> %735, i32 0
  %737 = sext i32 %736 to i64
  %738 = getelementptr inbounds float addrspace(1)* %data, i64 %737
  %739 = extractelement <16 x i32> %735, i32 1
  %740 = sext i32 %739 to i64
  %741 = getelementptr inbounds float addrspace(1)* %data, i64 %740
  %742 = extractelement <16 x i32> %735, i32 2
  %743 = sext i32 %742 to i64
  %744 = getelementptr inbounds float addrspace(1)* %data, i64 %743
  %745 = extractelement <16 x i32> %735, i32 3
  %746 = sext i32 %745 to i64
  %747 = getelementptr inbounds float addrspace(1)* %data, i64 %746
  %748 = extractelement <16 x i32> %735, i32 4
  %749 = sext i32 %748 to i64
  %750 = getelementptr inbounds float addrspace(1)* %data, i64 %749
  %751 = extractelement <16 x i32> %735, i32 5
  %752 = sext i32 %751 to i64
  %753 = getelementptr inbounds float addrspace(1)* %data, i64 %752
  %754 = extractelement <16 x i32> %735, i32 6
  %755 = sext i32 %754 to i64
  %756 = getelementptr inbounds float addrspace(1)* %data, i64 %755
  %757 = extractelement <16 x i32> %735, i32 7
  %758 = sext i32 %757 to i64
  %759 = getelementptr inbounds float addrspace(1)* %data, i64 %758
  %760 = extractelement <16 x i32> %735, i32 8
  %761 = sext i32 %760 to i64
  %762 = getelementptr inbounds float addrspace(1)* %data, i64 %761
  %763 = extractelement <16 x i32> %735, i32 9
  %764 = sext i32 %763 to i64
  %765 = getelementptr inbounds float addrspace(1)* %data, i64 %764
  %766 = extractelement <16 x i32> %735, i32 10
  %767 = sext i32 %766 to i64
  %768 = getelementptr inbounds float addrspace(1)* %data, i64 %767
  %769 = extractelement <16 x i32> %735, i32 11
  %770 = sext i32 %769 to i64
  %771 = getelementptr inbounds float addrspace(1)* %data, i64 %770
  %772 = extractelement <16 x i32> %735, i32 12
  %773 = sext i32 %772 to i64
  %774 = getelementptr inbounds float addrspace(1)* %data, i64 %773
  %775 = extractelement <16 x i32> %735, i32 13
  %776 = sext i32 %775 to i64
  %777 = getelementptr inbounds float addrspace(1)* %data, i64 %776
  %778 = extractelement <16 x i32> %735, i32 14
  %779 = sext i32 %778 to i64
  %780 = getelementptr inbounds float addrspace(1)* %data, i64 %779
  %781 = extractelement <16 x i32> %735, i32 15
  %782 = sext i32 %781 to i64
  %783 = getelementptr inbounds float addrspace(1)* %data, i64 %782
  %784 = load float addrspace(1)* %738, align 4
  %785 = load float addrspace(1)* %741, align 4
  %786 = load float addrspace(1)* %744, align 4
  %787 = load float addrspace(1)* %747, align 4
  %788 = load float addrspace(1)* %750, align 4
  %789 = load float addrspace(1)* %753, align 4
  %790 = load float addrspace(1)* %756, align 4
  %791 = load float addrspace(1)* %759, align 4
  %792 = load float addrspace(1)* %762, align 4
  %793 = load float addrspace(1)* %765, align 4
  %794 = load float addrspace(1)* %768, align 4
  %795 = load float addrspace(1)* %771, align 4
  %796 = load float addrspace(1)* %774, align 4
  %797 = load float addrspace(1)* %777, align 4
  %798 = load float addrspace(1)* %780, align 4
  %799 = load float addrspace(1)* %783, align 4
  %temp.vect432 = insertelement <16 x float> undef, float %784, i32 0
  %temp.vect433 = insertelement <16 x float> %temp.vect432, float %785, i32 1
  %temp.vect434 = insertelement <16 x float> %temp.vect433, float %786, i32 2
  %temp.vect435 = insertelement <16 x float> %temp.vect434, float %787, i32 3
  %temp.vect436 = insertelement <16 x float> %temp.vect435, float %788, i32 4
  %temp.vect437 = insertelement <16 x float> %temp.vect436, float %789, i32 5
  %temp.vect438 = insertelement <16 x float> %temp.vect437, float %790, i32 6
  %temp.vect439 = insertelement <16 x float> %temp.vect438, float %791, i32 7
  %temp.vect440 = insertelement <16 x float> %temp.vect439, float %792, i32 8
  %temp.vect441 = insertelement <16 x float> %temp.vect440, float %793, i32 9
  %temp.vect442 = insertelement <16 x float> %temp.vect441, float %794, i32 10
  %temp.vect443 = insertelement <16 x float> %temp.vect442, float %795, i32 11
  %temp.vect444 = insertelement <16 x float> %temp.vect443, float %796, i32 12
  %temp.vect445 = insertelement <16 x float> %temp.vect444, float %797, i32 13
  %temp.vect446 = insertelement <16 x float> %temp.vect445, float %798, i32 14
  %temp.vect447 = insertelement <16 x float> %temp.vect446, float %799, i32 15
  %800 = add nsw <16 x i32> %vectorPHI, <i32 245760, i32 245760, i32 245760, i32 245760, i32 245760, i32 245760, i32 245760, i32 245760, i32 245760, i32 245760, i32 245760, i32 245760, i32 245760, i32 245760, i32 245760, i32 245760>
  %801 = and <16 x i32> %800, %vector
  %802 = extractelement <16 x i32> %801, i32 0
  %803 = sext i32 %802 to i64
  %804 = getelementptr inbounds float addrspace(1)* %data, i64 %803
  %805 = extractelement <16 x i32> %801, i32 1
  %806 = sext i32 %805 to i64
  %807 = getelementptr inbounds float addrspace(1)* %data, i64 %806
  %808 = extractelement <16 x i32> %801, i32 2
  %809 = sext i32 %808 to i64
  %810 = getelementptr inbounds float addrspace(1)* %data, i64 %809
  %811 = extractelement <16 x i32> %801, i32 3
  %812 = sext i32 %811 to i64
  %813 = getelementptr inbounds float addrspace(1)* %data, i64 %812
  %814 = extractelement <16 x i32> %801, i32 4
  %815 = sext i32 %814 to i64
  %816 = getelementptr inbounds float addrspace(1)* %data, i64 %815
  %817 = extractelement <16 x i32> %801, i32 5
  %818 = sext i32 %817 to i64
  %819 = getelementptr inbounds float addrspace(1)* %data, i64 %818
  %820 = extractelement <16 x i32> %801, i32 6
  %821 = sext i32 %820 to i64
  %822 = getelementptr inbounds float addrspace(1)* %data, i64 %821
  %823 = extractelement <16 x i32> %801, i32 7
  %824 = sext i32 %823 to i64
  %825 = getelementptr inbounds float addrspace(1)* %data, i64 %824
  %826 = extractelement <16 x i32> %801, i32 8
  %827 = sext i32 %826 to i64
  %828 = getelementptr inbounds float addrspace(1)* %data, i64 %827
  %829 = extractelement <16 x i32> %801, i32 9
  %830 = sext i32 %829 to i64
  %831 = getelementptr inbounds float addrspace(1)* %data, i64 %830
  %832 = extractelement <16 x i32> %801, i32 10
  %833 = sext i32 %832 to i64
  %834 = getelementptr inbounds float addrspace(1)* %data, i64 %833
  %835 = extractelement <16 x i32> %801, i32 11
  %836 = sext i32 %835 to i64
  %837 = getelementptr inbounds float addrspace(1)* %data, i64 %836
  %838 = extractelement <16 x i32> %801, i32 12
  %839 = sext i32 %838 to i64
  %840 = getelementptr inbounds float addrspace(1)* %data, i64 %839
  %841 = extractelement <16 x i32> %801, i32 13
  %842 = sext i32 %841 to i64
  %843 = getelementptr inbounds float addrspace(1)* %data, i64 %842
  %844 = extractelement <16 x i32> %801, i32 14
  %845 = sext i32 %844 to i64
  %846 = getelementptr inbounds float addrspace(1)* %data, i64 %845
  %847 = extractelement <16 x i32> %801, i32 15
  %848 = sext i32 %847 to i64
  %849 = getelementptr inbounds float addrspace(1)* %data, i64 %848
  %850 = load float addrspace(1)* %804, align 4
  %851 = load float addrspace(1)* %807, align 4
  %852 = load float addrspace(1)* %810, align 4
  %853 = load float addrspace(1)* %813, align 4
  %854 = load float addrspace(1)* %816, align 4
  %855 = load float addrspace(1)* %819, align 4
  %856 = load float addrspace(1)* %822, align 4
  %857 = load float addrspace(1)* %825, align 4
  %858 = load float addrspace(1)* %828, align 4
  %859 = load float addrspace(1)* %831, align 4
  %860 = load float addrspace(1)* %834, align 4
  %861 = load float addrspace(1)* %837, align 4
  %862 = load float addrspace(1)* %840, align 4
  %863 = load float addrspace(1)* %843, align 4
  %864 = load float addrspace(1)* %846, align 4
  %865 = load float addrspace(1)* %849, align 4
  %temp.vect448 = insertelement <16 x float> undef, float %850, i32 0
  %temp.vect449 = insertelement <16 x float> %temp.vect448, float %851, i32 1
  %temp.vect450 = insertelement <16 x float> %temp.vect449, float %852, i32 2
  %temp.vect451 = insertelement <16 x float> %temp.vect450, float %853, i32 3
  %temp.vect452 = insertelement <16 x float> %temp.vect451, float %854, i32 4
  %temp.vect453 = insertelement <16 x float> %temp.vect452, float %855, i32 5
  %temp.vect454 = insertelement <16 x float> %temp.vect453, float %856, i32 6
  %temp.vect455 = insertelement <16 x float> %temp.vect454, float %857, i32 7
  %temp.vect456 = insertelement <16 x float> %temp.vect455, float %858, i32 8
  %temp.vect457 = insertelement <16 x float> %temp.vect456, float %859, i32 9
  %temp.vect458 = insertelement <16 x float> %temp.vect457, float %860, i32 10
  %temp.vect459 = insertelement <16 x float> %temp.vect458, float %861, i32 11
  %temp.vect460 = insertelement <16 x float> %temp.vect459, float %862, i32 12
  %temp.vect461 = insertelement <16 x float> %temp.vect460, float %863, i32 13
  %temp.vect462 = insertelement <16 x float> %temp.vect461, float %864, i32 14
  %temp.vect463 = insertelement <16 x float> %temp.vect462, float %865, i32 15
  %866 = add nsw <16 x i32> %vectorPHI, <i32 266240, i32 266240, i32 266240, i32 266240, i32 266240, i32 266240, i32 266240, i32 266240, i32 266240, i32 266240, i32 266240, i32 266240, i32 266240, i32 266240, i32 266240, i32 266240>
  %867 = and <16 x i32> %866, %vector
  %868 = extractelement <16 x i32> %867, i32 0
  %869 = sext i32 %868 to i64
  %870 = getelementptr inbounds float addrspace(1)* %data, i64 %869
  %871 = extractelement <16 x i32> %867, i32 1
  %872 = sext i32 %871 to i64
  %873 = getelementptr inbounds float addrspace(1)* %data, i64 %872
  %874 = extractelement <16 x i32> %867, i32 2
  %875 = sext i32 %874 to i64
  %876 = getelementptr inbounds float addrspace(1)* %data, i64 %875
  %877 = extractelement <16 x i32> %867, i32 3
  %878 = sext i32 %877 to i64
  %879 = getelementptr inbounds float addrspace(1)* %data, i64 %878
  %880 = extractelement <16 x i32> %867, i32 4
  %881 = sext i32 %880 to i64
  %882 = getelementptr inbounds float addrspace(1)* %data, i64 %881
  %883 = extractelement <16 x i32> %867, i32 5
  %884 = sext i32 %883 to i64
  %885 = getelementptr inbounds float addrspace(1)* %data, i64 %884
  %886 = extractelement <16 x i32> %867, i32 6
  %887 = sext i32 %886 to i64
  %888 = getelementptr inbounds float addrspace(1)* %data, i64 %887
  %889 = extractelement <16 x i32> %867, i32 7
  %890 = sext i32 %889 to i64
  %891 = getelementptr inbounds float addrspace(1)* %data, i64 %890
  %892 = extractelement <16 x i32> %867, i32 8
  %893 = sext i32 %892 to i64
  %894 = getelementptr inbounds float addrspace(1)* %data, i64 %893
  %895 = extractelement <16 x i32> %867, i32 9
  %896 = sext i32 %895 to i64
  %897 = getelementptr inbounds float addrspace(1)* %data, i64 %896
  %898 = extractelement <16 x i32> %867, i32 10
  %899 = sext i32 %898 to i64
  %900 = getelementptr inbounds float addrspace(1)* %data, i64 %899
  %901 = extractelement <16 x i32> %867, i32 11
  %902 = sext i32 %901 to i64
  %903 = getelementptr inbounds float addrspace(1)* %data, i64 %902
  %904 = extractelement <16 x i32> %867, i32 12
  %905 = sext i32 %904 to i64
  %906 = getelementptr inbounds float addrspace(1)* %data, i64 %905
  %907 = extractelement <16 x i32> %867, i32 13
  %908 = sext i32 %907 to i64
  %909 = getelementptr inbounds float addrspace(1)* %data, i64 %908
  %910 = extractelement <16 x i32> %867, i32 14
  %911 = sext i32 %910 to i64
  %912 = getelementptr inbounds float addrspace(1)* %data, i64 %911
  %913 = extractelement <16 x i32> %867, i32 15
  %914 = sext i32 %913 to i64
  %915 = getelementptr inbounds float addrspace(1)* %data, i64 %914
  %916 = load float addrspace(1)* %870, align 4
  %917 = load float addrspace(1)* %873, align 4
  %918 = load float addrspace(1)* %876, align 4
  %919 = load float addrspace(1)* %879, align 4
  %920 = load float addrspace(1)* %882, align 4
  %921 = load float addrspace(1)* %885, align 4
  %922 = load float addrspace(1)* %888, align 4
  %923 = load float addrspace(1)* %891, align 4
  %924 = load float addrspace(1)* %894, align 4
  %925 = load float addrspace(1)* %897, align 4
  %926 = load float addrspace(1)* %900, align 4
  %927 = load float addrspace(1)* %903, align 4
  %928 = load float addrspace(1)* %906, align 4
  %929 = load float addrspace(1)* %909, align 4
  %930 = load float addrspace(1)* %912, align 4
  %931 = load float addrspace(1)* %915, align 4
  %temp.vect464 = insertelement <16 x float> undef, float %916, i32 0
  %temp.vect465 = insertelement <16 x float> %temp.vect464, float %917, i32 1
  %temp.vect466 = insertelement <16 x float> %temp.vect465, float %918, i32 2
  %temp.vect467 = insertelement <16 x float> %temp.vect466, float %919, i32 3
  %temp.vect468 = insertelement <16 x float> %temp.vect467, float %920, i32 4
  %temp.vect469 = insertelement <16 x float> %temp.vect468, float %921, i32 5
  %temp.vect470 = insertelement <16 x float> %temp.vect469, float %922, i32 6
  %temp.vect471 = insertelement <16 x float> %temp.vect470, float %923, i32 7
  %temp.vect472 = insertelement <16 x float> %temp.vect471, float %924, i32 8
  %temp.vect473 = insertelement <16 x float> %temp.vect472, float %925, i32 9
  %temp.vect474 = insertelement <16 x float> %temp.vect473, float %926, i32 10
  %temp.vect475 = insertelement <16 x float> %temp.vect474, float %927, i32 11
  %temp.vect476 = insertelement <16 x float> %temp.vect475, float %928, i32 12
  %temp.vect477 = insertelement <16 x float> %temp.vect476, float %929, i32 13
  %temp.vect478 = insertelement <16 x float> %temp.vect477, float %930, i32 14
  %temp.vect479 = insertelement <16 x float> %temp.vect478, float %931, i32 15
  %932 = add nsw <16 x i32> %vectorPHI, <i32 286720, i32 286720, i32 286720, i32 286720, i32 286720, i32 286720, i32 286720, i32 286720, i32 286720, i32 286720, i32 286720, i32 286720, i32 286720, i32 286720, i32 286720, i32 286720>
  %933 = and <16 x i32> %932, %vector
  %934 = extractelement <16 x i32> %933, i32 0
  %935 = sext i32 %934 to i64
  %936 = getelementptr inbounds float addrspace(1)* %data, i64 %935
  %937 = extractelement <16 x i32> %933, i32 1
  %938 = sext i32 %937 to i64
  %939 = getelementptr inbounds float addrspace(1)* %data, i64 %938
  %940 = extractelement <16 x i32> %933, i32 2
  %941 = sext i32 %940 to i64
  %942 = getelementptr inbounds float addrspace(1)* %data, i64 %941
  %943 = extractelement <16 x i32> %933, i32 3
  %944 = sext i32 %943 to i64
  %945 = getelementptr inbounds float addrspace(1)* %data, i64 %944
  %946 = extractelement <16 x i32> %933, i32 4
  %947 = sext i32 %946 to i64
  %948 = getelementptr inbounds float addrspace(1)* %data, i64 %947
  %949 = extractelement <16 x i32> %933, i32 5
  %950 = sext i32 %949 to i64
  %951 = getelementptr inbounds float addrspace(1)* %data, i64 %950
  %952 = extractelement <16 x i32> %933, i32 6
  %953 = sext i32 %952 to i64
  %954 = getelementptr inbounds float addrspace(1)* %data, i64 %953
  %955 = extractelement <16 x i32> %933, i32 7
  %956 = sext i32 %955 to i64
  %957 = getelementptr inbounds float addrspace(1)* %data, i64 %956
  %958 = extractelement <16 x i32> %933, i32 8
  %959 = sext i32 %958 to i64
  %960 = getelementptr inbounds float addrspace(1)* %data, i64 %959
  %961 = extractelement <16 x i32> %933, i32 9
  %962 = sext i32 %961 to i64
  %963 = getelementptr inbounds float addrspace(1)* %data, i64 %962
  %964 = extractelement <16 x i32> %933, i32 10
  %965 = sext i32 %964 to i64
  %966 = getelementptr inbounds float addrspace(1)* %data, i64 %965
  %967 = extractelement <16 x i32> %933, i32 11
  %968 = sext i32 %967 to i64
  %969 = getelementptr inbounds float addrspace(1)* %data, i64 %968
  %970 = extractelement <16 x i32> %933, i32 12
  %971 = sext i32 %970 to i64
  %972 = getelementptr inbounds float addrspace(1)* %data, i64 %971
  %973 = extractelement <16 x i32> %933, i32 13
  %974 = sext i32 %973 to i64
  %975 = getelementptr inbounds float addrspace(1)* %data, i64 %974
  %976 = extractelement <16 x i32> %933, i32 14
  %977 = sext i32 %976 to i64
  %978 = getelementptr inbounds float addrspace(1)* %data, i64 %977
  %979 = extractelement <16 x i32> %933, i32 15
  %980 = sext i32 %979 to i64
  %981 = getelementptr inbounds float addrspace(1)* %data, i64 %980
  %982 = load float addrspace(1)* %936, align 4
  %983 = load float addrspace(1)* %939, align 4
  %984 = load float addrspace(1)* %942, align 4
  %985 = load float addrspace(1)* %945, align 4
  %986 = load float addrspace(1)* %948, align 4
  %987 = load float addrspace(1)* %951, align 4
  %988 = load float addrspace(1)* %954, align 4
  %989 = load float addrspace(1)* %957, align 4
  %990 = load float addrspace(1)* %960, align 4
  %991 = load float addrspace(1)* %963, align 4
  %992 = load float addrspace(1)* %966, align 4
  %993 = load float addrspace(1)* %969, align 4
  %994 = load float addrspace(1)* %972, align 4
  %995 = load float addrspace(1)* %975, align 4
  %996 = load float addrspace(1)* %978, align 4
  %997 = load float addrspace(1)* %981, align 4
  %temp.vect480 = insertelement <16 x float> undef, float %982, i32 0
  %temp.vect481 = insertelement <16 x float> %temp.vect480, float %983, i32 1
  %temp.vect482 = insertelement <16 x float> %temp.vect481, float %984, i32 2
  %temp.vect483 = insertelement <16 x float> %temp.vect482, float %985, i32 3
  %temp.vect484 = insertelement <16 x float> %temp.vect483, float %986, i32 4
  %temp.vect485 = insertelement <16 x float> %temp.vect484, float %987, i32 5
  %temp.vect486 = insertelement <16 x float> %temp.vect485, float %988, i32 6
  %temp.vect487 = insertelement <16 x float> %temp.vect486, float %989, i32 7
  %temp.vect488 = insertelement <16 x float> %temp.vect487, float %990, i32 8
  %temp.vect489 = insertelement <16 x float> %temp.vect488, float %991, i32 9
  %temp.vect490 = insertelement <16 x float> %temp.vect489, float %992, i32 10
  %temp.vect491 = insertelement <16 x float> %temp.vect490, float %993, i32 11
  %temp.vect492 = insertelement <16 x float> %temp.vect491, float %994, i32 12
  %temp.vect493 = insertelement <16 x float> %temp.vect492, float %995, i32 13
  %temp.vect494 = insertelement <16 x float> %temp.vect493, float %996, i32 14
  %temp.vect495 = insertelement <16 x float> %temp.vect494, float %997, i32 15
  %998 = add nsw <16 x i32> %vectorPHI, <i32 307200, i32 307200, i32 307200, i32 307200, i32 307200, i32 307200, i32 307200, i32 307200, i32 307200, i32 307200, i32 307200, i32 307200, i32 307200, i32 307200, i32 307200, i32 307200>
  %999 = and <16 x i32> %998, %vector
  %1000 = extractelement <16 x i32> %999, i32 0
  %1001 = sext i32 %1000 to i64
  %1002 = getelementptr inbounds float addrspace(1)* %data, i64 %1001
  %1003 = extractelement <16 x i32> %999, i32 1
  %1004 = sext i32 %1003 to i64
  %1005 = getelementptr inbounds float addrspace(1)* %data, i64 %1004
  %1006 = extractelement <16 x i32> %999, i32 2
  %1007 = sext i32 %1006 to i64
  %1008 = getelementptr inbounds float addrspace(1)* %data, i64 %1007
  %1009 = extractelement <16 x i32> %999, i32 3
  %1010 = sext i32 %1009 to i64
  %1011 = getelementptr inbounds float addrspace(1)* %data, i64 %1010
  %1012 = extractelement <16 x i32> %999, i32 4
  %1013 = sext i32 %1012 to i64
  %1014 = getelementptr inbounds float addrspace(1)* %data, i64 %1013
  %1015 = extractelement <16 x i32> %999, i32 5
  %1016 = sext i32 %1015 to i64
  %1017 = getelementptr inbounds float addrspace(1)* %data, i64 %1016
  %1018 = extractelement <16 x i32> %999, i32 6
  %1019 = sext i32 %1018 to i64
  %1020 = getelementptr inbounds float addrspace(1)* %data, i64 %1019
  %1021 = extractelement <16 x i32> %999, i32 7
  %1022 = sext i32 %1021 to i64
  %1023 = getelementptr inbounds float addrspace(1)* %data, i64 %1022
  %1024 = extractelement <16 x i32> %999, i32 8
  %1025 = sext i32 %1024 to i64
  %1026 = getelementptr inbounds float addrspace(1)* %data, i64 %1025
  %1027 = extractelement <16 x i32> %999, i32 9
  %1028 = sext i32 %1027 to i64
  %1029 = getelementptr inbounds float addrspace(1)* %data, i64 %1028
  %1030 = extractelement <16 x i32> %999, i32 10
  %1031 = sext i32 %1030 to i64
  %1032 = getelementptr inbounds float addrspace(1)* %data, i64 %1031
  %1033 = extractelement <16 x i32> %999, i32 11
  %1034 = sext i32 %1033 to i64
  %1035 = getelementptr inbounds float addrspace(1)* %data, i64 %1034
  %1036 = extractelement <16 x i32> %999, i32 12
  %1037 = sext i32 %1036 to i64
  %1038 = getelementptr inbounds float addrspace(1)* %data, i64 %1037
  %1039 = extractelement <16 x i32> %999, i32 13
  %1040 = sext i32 %1039 to i64
  %1041 = getelementptr inbounds float addrspace(1)* %data, i64 %1040
  %1042 = extractelement <16 x i32> %999, i32 14
  %1043 = sext i32 %1042 to i64
  %1044 = getelementptr inbounds float addrspace(1)* %data, i64 %1043
  %1045 = extractelement <16 x i32> %999, i32 15
  %1046 = sext i32 %1045 to i64
  %1047 = getelementptr inbounds float addrspace(1)* %data, i64 %1046
  %1048 = load float addrspace(1)* %1002, align 4
  %1049 = load float addrspace(1)* %1005, align 4
  %1050 = load float addrspace(1)* %1008, align 4
  %1051 = load float addrspace(1)* %1011, align 4
  %1052 = load float addrspace(1)* %1014, align 4
  %1053 = load float addrspace(1)* %1017, align 4
  %1054 = load float addrspace(1)* %1020, align 4
  %1055 = load float addrspace(1)* %1023, align 4
  %1056 = load float addrspace(1)* %1026, align 4
  %1057 = load float addrspace(1)* %1029, align 4
  %1058 = load float addrspace(1)* %1032, align 4
  %1059 = load float addrspace(1)* %1035, align 4
  %1060 = load float addrspace(1)* %1038, align 4
  %1061 = load float addrspace(1)* %1041, align 4
  %1062 = load float addrspace(1)* %1044, align 4
  %1063 = load float addrspace(1)* %1047, align 4
  %temp.vect496 = insertelement <16 x float> undef, float %1048, i32 0
  %temp.vect497 = insertelement <16 x float> %temp.vect496, float %1049, i32 1
  %temp.vect498 = insertelement <16 x float> %temp.vect497, float %1050, i32 2
  %temp.vect499 = insertelement <16 x float> %temp.vect498, float %1051, i32 3
  %temp.vect500 = insertelement <16 x float> %temp.vect499, float %1052, i32 4
  %temp.vect501 = insertelement <16 x float> %temp.vect500, float %1053, i32 5
  %temp.vect502 = insertelement <16 x float> %temp.vect501, float %1054, i32 6
  %temp.vect503 = insertelement <16 x float> %temp.vect502, float %1055, i32 7
  %temp.vect504 = insertelement <16 x float> %temp.vect503, float %1056, i32 8
  %temp.vect505 = insertelement <16 x float> %temp.vect504, float %1057, i32 9
  %temp.vect506 = insertelement <16 x float> %temp.vect505, float %1058, i32 10
  %temp.vect507 = insertelement <16 x float> %temp.vect506, float %1059, i32 11
  %temp.vect508 = insertelement <16 x float> %temp.vect507, float %1060, i32 12
  %temp.vect509 = insertelement <16 x float> %temp.vect508, float %1061, i32 13
  %temp.vect510 = insertelement <16 x float> %temp.vect509, float %1062, i32 14
  %temp.vect511 = insertelement <16 x float> %temp.vect510, float %1063, i32 15
  %1064 = fadd <16 x float> %temp.vect271, %temp.vect287
  %1065 = fadd <16 x float> %1064, %temp.vect303
  %1066 = fadd <16 x float> %1065, %temp.vect319
  %1067 = fadd <16 x float> %1066, %temp.vect335
  %1068 = fadd <16 x float> %1067, %temp.vect351
  %1069 = fadd <16 x float> %1068, %temp.vect367
  %1070 = fadd <16 x float> %1069, %temp.vect383
  %1071 = fadd <16 x float> %1070, %temp.vect399
  %1072 = fadd <16 x float> %1071, %temp.vect415
  %1073 = fadd <16 x float> %1072, %temp.vect431
  %1074 = fadd <16 x float> %1073, %temp.vect447
  %1075 = fadd <16 x float> %1074, %temp.vect463
  %1076 = fadd <16 x float> %1075, %temp.vect479
  %1077 = fadd <16 x float> %1076, %temp.vect495
  %1078 = fadd <16 x float> %1077, %temp.vect511
  %1079 = fadd <16 x float> %vectorPHI1, %1078
  %1080 = add nsw i32 %j.01, 1
  %1081 = add nsw <16 x i32> %vectorPHI, <i32 327680, i32 327680, i32 327680, i32 327680, i32 327680, i32 327680, i32 327680, i32 327680, i32 327680, i32 327680, i32 327680, i32 327680, i32 327680, i32 327680, i32 327680, i32 327680>
  %1082 = and <16 x i32> %1081, %vector
  %exitcond = icmp eq i32 %1080, 1024
  br i1 %exitcond, label %._crit_edge, label %8

._crit_edge:                                      ; preds = %8
  %1083 = extractelement <16 x i32> %7, i32 0
  %extract512 = sext i32 %1083 to i64
  %1084 = getelementptr inbounds float addrspace(1)* %output, i64 %extract512
  %ptrTypeCast = bitcast float addrspace(1)* %1084 to <16 x float> addrspace(1)*
  store <16 x float> %1079, <16 x float> addrspace(1)* %ptrTypeCast, align 4
  %check.WI.iter = icmp ult i64 %CurrWI..0, %iterCount
  br i1 %check.WI.iter, label %thenBB, label %SyncBB

thenBB:                                           ; preds = %._crit_edge
  %"CurrWI++" = add nuw i64 %CurrWI..0, 1
  br label %SyncBB528

SyncBB:                                           ; preds = %._crit_edge
  ret void
}

define void @readConstantMemoryCoalesced(i8* %pBuffer) {
entry:
  %0 = bitcast i8* %pBuffer to float addrspace(1)**
  %1 = load float addrspace(1)** %0, align 8
  %2 = getelementptr i8* %pBuffer, i64 8
  %3 = bitcast i8* %2 to float addrspace(1)**
  %4 = load float addrspace(1)** %3, align 8
  %5 = getelementptr i8* %pBuffer, i64 16
  %6 = bitcast i8* %5 to i32*
  %7 = load i32* %6, align 4
  %8 = getelementptr i8* %pBuffer, i64 48
  %9 = bitcast i8* %8 to %struct.PaddedDimId**
  %10 = load %struct.PaddedDimId** %9, align 8
  %11 = getelementptr i8* %pBuffer, i64 56
  %12 = bitcast i8* %11 to %struct.PaddedDimId**
  %13 = load %struct.PaddedDimId** %12, align 8
  %14 = getelementptr i8* %pBuffer, i64 72
  %15 = bitcast i8* %14 to i64*
  %16 = load i64* %15, align 8
  %17 = add nsw i32 %7, -1
  br label %SyncBB.i

SyncBB.i:                                         ; preds = %thenBB.i, %entry
  %CurrWI..0.i = phi i64 [ 0, %entry ], [ %"CurrWI++.i", %thenBB.i ]
  %18 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %19 = load i64* %18, align 8
  %20 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %21 = load i64* %20, align 8
  %22 = add i64 %19, %21
  %23 = trunc i64 %22 to i32
  br label %24

; <label>:24                                      ; preds = %24, %SyncBB.i
  %s.03.i = phi i32 [ %23, %SyncBB.i ], [ %122, %24 ]
  %sum.02.i = phi float [ 0.000000e+00, %SyncBB.i ], [ %119, %24 ]
  %j.01.i = phi i32 [ 0, %SyncBB.i ], [ %120, %24 ]
  %25 = and i32 %s.03.i, %17
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds float addrspace(1)* %1, i64 %26
  %28 = load float addrspace(1)* %27, align 4
  %29 = add nsw i32 %s.03.i, 20480
  %30 = and i32 %29, %17
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds float addrspace(1)* %1, i64 %31
  %33 = load float addrspace(1)* %32, align 4
  %34 = add nsw i32 %s.03.i, 40960
  %35 = and i32 %34, %17
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds float addrspace(1)* %1, i64 %36
  %38 = load float addrspace(1)* %37, align 4
  %39 = add nsw i32 %s.03.i, 61440
  %40 = and i32 %39, %17
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds float addrspace(1)* %1, i64 %41
  %43 = load float addrspace(1)* %42, align 4
  %44 = add nsw i32 %s.03.i, 81920
  %45 = and i32 %44, %17
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds float addrspace(1)* %1, i64 %46
  %48 = load float addrspace(1)* %47, align 4
  %49 = add nsw i32 %s.03.i, 102400
  %50 = and i32 %49, %17
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds float addrspace(1)* %1, i64 %51
  %53 = load float addrspace(1)* %52, align 4
  %54 = add nsw i32 %s.03.i, 122880
  %55 = and i32 %54, %17
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds float addrspace(1)* %1, i64 %56
  %58 = load float addrspace(1)* %57, align 4
  %59 = add nsw i32 %s.03.i, 143360
  %60 = and i32 %59, %17
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds float addrspace(1)* %1, i64 %61
  %63 = load float addrspace(1)* %62, align 4
  %64 = add nsw i32 %s.03.i, 163840
  %65 = and i32 %64, %17
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds float addrspace(1)* %1, i64 %66
  %68 = load float addrspace(1)* %67, align 4
  %69 = add nsw i32 %s.03.i, 184320
  %70 = and i32 %69, %17
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds float addrspace(1)* %1, i64 %71
  %73 = load float addrspace(1)* %72, align 4
  %74 = add nsw i32 %s.03.i, 204800
  %75 = and i32 %74, %17
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds float addrspace(1)* %1, i64 %76
  %78 = load float addrspace(1)* %77, align 4
  %79 = add nsw i32 %s.03.i, 225280
  %80 = and i32 %79, %17
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds float addrspace(1)* %1, i64 %81
  %83 = load float addrspace(1)* %82, align 4
  %84 = add nsw i32 %s.03.i, 245760
  %85 = and i32 %84, %17
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds float addrspace(1)* %1, i64 %86
  %88 = load float addrspace(1)* %87, align 4
  %89 = add nsw i32 %s.03.i, 266240
  %90 = and i32 %89, %17
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds float addrspace(1)* %1, i64 %91
  %93 = load float addrspace(1)* %92, align 4
  %94 = add nsw i32 %s.03.i, 286720
  %95 = and i32 %94, %17
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds float addrspace(1)* %1, i64 %96
  %98 = load float addrspace(1)* %97, align 4
  %99 = add nsw i32 %s.03.i, 307200
  %100 = and i32 %99, %17
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds float addrspace(1)* %1, i64 %101
  %103 = load float addrspace(1)* %102, align 4
  %104 = fadd float %28, %33
  %105 = fadd float %104, %38
  %106 = fadd float %105, %43
  %107 = fadd float %106, %48
  %108 = fadd float %107, %53
  %109 = fadd float %108, %58
  %110 = fadd float %109, %63
  %111 = fadd float %110, %68
  %112 = fadd float %111, %73
  %113 = fadd float %112, %78
  %114 = fadd float %113, %83
  %115 = fadd float %114, %88
  %116 = fadd float %115, %93
  %117 = fadd float %116, %98
  %118 = fadd float %117, %103
  %119 = fadd float %sum.02.i, %118
  %120 = add nsw i32 %j.01.i, 1
  %121 = add nsw i32 %s.03.i, 327680
  %122 = and i32 %121, %17
  %exitcond.i = icmp eq i32 %120, 1024
  br i1 %exitcond.i, label %._crit_edge.i, label %24

._crit_edge.i:                                    ; preds = %24
  %123 = sext i32 %23 to i64
  %124 = getelementptr inbounds float addrspace(1)* %4, i64 %123
  store float %119, float addrspace(1)* %124, align 4
  %check.WI.iter.i = icmp ult i64 %CurrWI..0.i, %16
  br i1 %check.WI.iter.i, label %thenBB.i, label %__readConstantMemoryCoalesced_separated_args.exit

thenBB.i:                                         ; preds = %._crit_edge.i
  %"CurrWI++.i" = add nuw i64 %CurrWI..0.i, 1
  br label %SyncBB.i

__readConstantMemoryCoalesced_separated_args.exit: ; preds = %._crit_edge.i
  ret void
}

define void @__Vectorized_.readConstantMemoryCoalesced(i8* %pBuffer) {
entry:
  %0 = bitcast i8* %pBuffer to float addrspace(1)**
  %1 = load float addrspace(1)** %0, align 8
  %2 = getelementptr i8* %pBuffer, i64 8
  %3 = bitcast i8* %2 to float addrspace(1)**
  %4 = load float addrspace(1)** %3, align 8
  %5 = getelementptr i8* %pBuffer, i64 16
  %6 = bitcast i8* %5 to i32*
  %7 = load i32* %6, align 4
  %8 = getelementptr i8* %pBuffer, i64 48
  %9 = bitcast i8* %8 to %struct.PaddedDimId**
  %10 = load %struct.PaddedDimId** %9, align 8
  %11 = getelementptr i8* %pBuffer, i64 56
  %12 = bitcast i8* %11 to %struct.PaddedDimId**
  %13 = load %struct.PaddedDimId** %12, align 8
  %14 = getelementptr i8* %pBuffer, i64 72
  %15 = bitcast i8* %14 to i64*
  %16 = load i64* %15, align 8
  %17 = add nsw i32 %7, -1
  %temp.i = insertelement <16 x i32> undef, i32 %17, i32 0
  %vector.i = shufflevector <16 x i32> %temp.i, <16 x i32> undef, <16 x i32> zeroinitializer
  br label %SyncBB528.i

SyncBB528.i:                                      ; preds = %thenBB.i, %entry
  %CurrWI..0.i = phi i64 [ 0, %entry ], [ %"CurrWI++.i", %thenBB.i ]
  %18 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %19 = load i64* %18, align 8
  %20 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %21 = load i64* %20, align 8
  %22 = add i64 %19, %21
  %broadcast1.i = insertelement <16 x i64> undef, i64 %22, i32 0
  %broadcast2.i = shufflevector <16 x i64> %broadcast1.i, <16 x i64> undef, <16 x i32> zeroinitializer
  %23 = add <16 x i64> %broadcast2.i, <i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8, i64 9, i64 10, i64 11, i64 12, i64 13, i64 14, i64 15>
  %24 = trunc <16 x i64> %23 to <16 x i32>
  br label %25

; <label>:25                                      ; preds = %25, %SyncBB528.i
  %vectorPHI.i = phi <16 x i32> [ %24, %SyncBB528.i ], [ %1099, %25 ]
  %vectorPHI1.i = phi <16 x float> [ zeroinitializer, %SyncBB528.i ], [ %1096, %25 ]
  %j.01.i = phi i32 [ 0, %SyncBB528.i ], [ %1097, %25 ]
  %26 = and <16 x i32> %vectorPHI.i, %vector.i
  %27 = extractelement <16 x i32> %26, i32 0
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds float addrspace(1)* %1, i64 %28
  %30 = extractelement <16 x i32> %26, i32 1
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds float addrspace(1)* %1, i64 %31
  %33 = extractelement <16 x i32> %26, i32 2
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds float addrspace(1)* %1, i64 %34
  %36 = extractelement <16 x i32> %26, i32 3
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds float addrspace(1)* %1, i64 %37
  %39 = extractelement <16 x i32> %26, i32 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds float addrspace(1)* %1, i64 %40
  %42 = extractelement <16 x i32> %26, i32 5
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds float addrspace(1)* %1, i64 %43
  %45 = extractelement <16 x i32> %26, i32 6
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds float addrspace(1)* %1, i64 %46
  %48 = extractelement <16 x i32> %26, i32 7
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds float addrspace(1)* %1, i64 %49
  %51 = extractelement <16 x i32> %26, i32 8
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds float addrspace(1)* %1, i64 %52
  %54 = extractelement <16 x i32> %26, i32 9
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds float addrspace(1)* %1, i64 %55
  %57 = extractelement <16 x i32> %26, i32 10
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds float addrspace(1)* %1, i64 %58
  %60 = extractelement <16 x i32> %26, i32 11
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds float addrspace(1)* %1, i64 %61
  %63 = extractelement <16 x i32> %26, i32 12
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds float addrspace(1)* %1, i64 %64
  %66 = extractelement <16 x i32> %26, i32 13
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds float addrspace(1)* %1, i64 %67
  %69 = extractelement <16 x i32> %26, i32 14
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds float addrspace(1)* %1, i64 %70
  %72 = extractelement <16 x i32> %26, i32 15
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds float addrspace(1)* %1, i64 %73
  %75 = load float addrspace(1)* %29, align 4
  %76 = load float addrspace(1)* %32, align 4
  %77 = load float addrspace(1)* %35, align 4
  %78 = load float addrspace(1)* %38, align 4
  %79 = load float addrspace(1)* %41, align 4
  %80 = load float addrspace(1)* %44, align 4
  %81 = load float addrspace(1)* %47, align 4
  %82 = load float addrspace(1)* %50, align 4
  %83 = load float addrspace(1)* %53, align 4
  %84 = load float addrspace(1)* %56, align 4
  %85 = load float addrspace(1)* %59, align 4
  %86 = load float addrspace(1)* %62, align 4
  %87 = load float addrspace(1)* %65, align 4
  %88 = load float addrspace(1)* %68, align 4
  %89 = load float addrspace(1)* %71, align 4
  %90 = load float addrspace(1)* %74, align 4
  %temp.vect.i = insertelement <16 x float> undef, float %75, i32 0
  %temp.vect257.i = insertelement <16 x float> %temp.vect.i, float %76, i32 1
  %temp.vect258.i = insertelement <16 x float> %temp.vect257.i, float %77, i32 2
  %temp.vect259.i = insertelement <16 x float> %temp.vect258.i, float %78, i32 3
  %temp.vect260.i = insertelement <16 x float> %temp.vect259.i, float %79, i32 4
  %temp.vect261.i = insertelement <16 x float> %temp.vect260.i, float %80, i32 5
  %temp.vect262.i = insertelement <16 x float> %temp.vect261.i, float %81, i32 6
  %temp.vect263.i = insertelement <16 x float> %temp.vect262.i, float %82, i32 7
  %temp.vect264.i = insertelement <16 x float> %temp.vect263.i, float %83, i32 8
  %temp.vect265.i = insertelement <16 x float> %temp.vect264.i, float %84, i32 9
  %temp.vect266.i = insertelement <16 x float> %temp.vect265.i, float %85, i32 10
  %temp.vect267.i = insertelement <16 x float> %temp.vect266.i, float %86, i32 11
  %temp.vect268.i = insertelement <16 x float> %temp.vect267.i, float %87, i32 12
  %temp.vect269.i = insertelement <16 x float> %temp.vect268.i, float %88, i32 13
  %temp.vect270.i = insertelement <16 x float> %temp.vect269.i, float %89, i32 14
  %temp.vect271.i = insertelement <16 x float> %temp.vect270.i, float %90, i32 15
  %91 = add nsw <16 x i32> %vectorPHI.i, <i32 20480, i32 20480, i32 20480, i32 20480, i32 20480, i32 20480, i32 20480, i32 20480, i32 20480, i32 20480, i32 20480, i32 20480, i32 20480, i32 20480, i32 20480, i32 20480>
  %92 = and <16 x i32> %91, %vector.i
  %93 = extractelement <16 x i32> %92, i32 0
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds float addrspace(1)* %1, i64 %94
  %96 = extractelement <16 x i32> %92, i32 1
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds float addrspace(1)* %1, i64 %97
  %99 = extractelement <16 x i32> %92, i32 2
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds float addrspace(1)* %1, i64 %100
  %102 = extractelement <16 x i32> %92, i32 3
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds float addrspace(1)* %1, i64 %103
  %105 = extractelement <16 x i32> %92, i32 4
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds float addrspace(1)* %1, i64 %106
  %108 = extractelement <16 x i32> %92, i32 5
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds float addrspace(1)* %1, i64 %109
  %111 = extractelement <16 x i32> %92, i32 6
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds float addrspace(1)* %1, i64 %112
  %114 = extractelement <16 x i32> %92, i32 7
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds float addrspace(1)* %1, i64 %115
  %117 = extractelement <16 x i32> %92, i32 8
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds float addrspace(1)* %1, i64 %118
  %120 = extractelement <16 x i32> %92, i32 9
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds float addrspace(1)* %1, i64 %121
  %123 = extractelement <16 x i32> %92, i32 10
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds float addrspace(1)* %1, i64 %124
  %126 = extractelement <16 x i32> %92, i32 11
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds float addrspace(1)* %1, i64 %127
  %129 = extractelement <16 x i32> %92, i32 12
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds float addrspace(1)* %1, i64 %130
  %132 = extractelement <16 x i32> %92, i32 13
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds float addrspace(1)* %1, i64 %133
  %135 = extractelement <16 x i32> %92, i32 14
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds float addrspace(1)* %1, i64 %136
  %138 = extractelement <16 x i32> %92, i32 15
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds float addrspace(1)* %1, i64 %139
  %141 = load float addrspace(1)* %95, align 4
  %142 = load float addrspace(1)* %98, align 4
  %143 = load float addrspace(1)* %101, align 4
  %144 = load float addrspace(1)* %104, align 4
  %145 = load float addrspace(1)* %107, align 4
  %146 = load float addrspace(1)* %110, align 4
  %147 = load float addrspace(1)* %113, align 4
  %148 = load float addrspace(1)* %116, align 4
  %149 = load float addrspace(1)* %119, align 4
  %150 = load float addrspace(1)* %122, align 4
  %151 = load float addrspace(1)* %125, align 4
  %152 = load float addrspace(1)* %128, align 4
  %153 = load float addrspace(1)* %131, align 4
  %154 = load float addrspace(1)* %134, align 4
  %155 = load float addrspace(1)* %137, align 4
  %156 = load float addrspace(1)* %140, align 4
  %temp.vect272.i = insertelement <16 x float> undef, float %141, i32 0
  %temp.vect273.i = insertelement <16 x float> %temp.vect272.i, float %142, i32 1
  %temp.vect274.i = insertelement <16 x float> %temp.vect273.i, float %143, i32 2
  %temp.vect275.i = insertelement <16 x float> %temp.vect274.i, float %144, i32 3
  %temp.vect276.i = insertelement <16 x float> %temp.vect275.i, float %145, i32 4
  %temp.vect277.i = insertelement <16 x float> %temp.vect276.i, float %146, i32 5
  %temp.vect278.i = insertelement <16 x float> %temp.vect277.i, float %147, i32 6
  %temp.vect279.i = insertelement <16 x float> %temp.vect278.i, float %148, i32 7
  %temp.vect280.i = insertelement <16 x float> %temp.vect279.i, float %149, i32 8
  %temp.vect281.i = insertelement <16 x float> %temp.vect280.i, float %150, i32 9
  %temp.vect282.i = insertelement <16 x float> %temp.vect281.i, float %151, i32 10
  %temp.vect283.i = insertelement <16 x float> %temp.vect282.i, float %152, i32 11
  %temp.vect284.i = insertelement <16 x float> %temp.vect283.i, float %153, i32 12
  %temp.vect285.i = insertelement <16 x float> %temp.vect284.i, float %154, i32 13
  %temp.vect286.i = insertelement <16 x float> %temp.vect285.i, float %155, i32 14
  %temp.vect287.i = insertelement <16 x float> %temp.vect286.i, float %156, i32 15
  %157 = add nsw <16 x i32> %vectorPHI.i, <i32 40960, i32 40960, i32 40960, i32 40960, i32 40960, i32 40960, i32 40960, i32 40960, i32 40960, i32 40960, i32 40960, i32 40960, i32 40960, i32 40960, i32 40960, i32 40960>
  %158 = and <16 x i32> %157, %vector.i
  %159 = extractelement <16 x i32> %158, i32 0
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds float addrspace(1)* %1, i64 %160
  %162 = extractelement <16 x i32> %158, i32 1
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds float addrspace(1)* %1, i64 %163
  %165 = extractelement <16 x i32> %158, i32 2
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds float addrspace(1)* %1, i64 %166
  %168 = extractelement <16 x i32> %158, i32 3
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds float addrspace(1)* %1, i64 %169
  %171 = extractelement <16 x i32> %158, i32 4
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds float addrspace(1)* %1, i64 %172
  %174 = extractelement <16 x i32> %158, i32 5
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds float addrspace(1)* %1, i64 %175
  %177 = extractelement <16 x i32> %158, i32 6
  %178 = sext i32 %177 to i64
  %179 = getelementptr inbounds float addrspace(1)* %1, i64 %178
  %180 = extractelement <16 x i32> %158, i32 7
  %181 = sext i32 %180 to i64
  %182 = getelementptr inbounds float addrspace(1)* %1, i64 %181
  %183 = extractelement <16 x i32> %158, i32 8
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds float addrspace(1)* %1, i64 %184
  %186 = extractelement <16 x i32> %158, i32 9
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds float addrspace(1)* %1, i64 %187
  %189 = extractelement <16 x i32> %158, i32 10
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds float addrspace(1)* %1, i64 %190
  %192 = extractelement <16 x i32> %158, i32 11
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds float addrspace(1)* %1, i64 %193
  %195 = extractelement <16 x i32> %158, i32 12
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds float addrspace(1)* %1, i64 %196
  %198 = extractelement <16 x i32> %158, i32 13
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds float addrspace(1)* %1, i64 %199
  %201 = extractelement <16 x i32> %158, i32 14
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds float addrspace(1)* %1, i64 %202
  %204 = extractelement <16 x i32> %158, i32 15
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds float addrspace(1)* %1, i64 %205
  %207 = load float addrspace(1)* %161, align 4
  %208 = load float addrspace(1)* %164, align 4
  %209 = load float addrspace(1)* %167, align 4
  %210 = load float addrspace(1)* %170, align 4
  %211 = load float addrspace(1)* %173, align 4
  %212 = load float addrspace(1)* %176, align 4
  %213 = load float addrspace(1)* %179, align 4
  %214 = load float addrspace(1)* %182, align 4
  %215 = load float addrspace(1)* %185, align 4
  %216 = load float addrspace(1)* %188, align 4
  %217 = load float addrspace(1)* %191, align 4
  %218 = load float addrspace(1)* %194, align 4
  %219 = load float addrspace(1)* %197, align 4
  %220 = load float addrspace(1)* %200, align 4
  %221 = load float addrspace(1)* %203, align 4
  %222 = load float addrspace(1)* %206, align 4
  %temp.vect288.i = insertelement <16 x float> undef, float %207, i32 0
  %temp.vect289.i = insertelement <16 x float> %temp.vect288.i, float %208, i32 1
  %temp.vect290.i = insertelement <16 x float> %temp.vect289.i, float %209, i32 2
  %temp.vect291.i = insertelement <16 x float> %temp.vect290.i, float %210, i32 3
  %temp.vect292.i = insertelement <16 x float> %temp.vect291.i, float %211, i32 4
  %temp.vect293.i = insertelement <16 x float> %temp.vect292.i, float %212, i32 5
  %temp.vect294.i = insertelement <16 x float> %temp.vect293.i, float %213, i32 6
  %temp.vect295.i = insertelement <16 x float> %temp.vect294.i, float %214, i32 7
  %temp.vect296.i = insertelement <16 x float> %temp.vect295.i, float %215, i32 8
  %temp.vect297.i = insertelement <16 x float> %temp.vect296.i, float %216, i32 9
  %temp.vect298.i = insertelement <16 x float> %temp.vect297.i, float %217, i32 10
  %temp.vect299.i = insertelement <16 x float> %temp.vect298.i, float %218, i32 11
  %temp.vect300.i = insertelement <16 x float> %temp.vect299.i, float %219, i32 12
  %temp.vect301.i = insertelement <16 x float> %temp.vect300.i, float %220, i32 13
  %temp.vect302.i = insertelement <16 x float> %temp.vect301.i, float %221, i32 14
  %temp.vect303.i = insertelement <16 x float> %temp.vect302.i, float %222, i32 15
  %223 = add nsw <16 x i32> %vectorPHI.i, <i32 61440, i32 61440, i32 61440, i32 61440, i32 61440, i32 61440, i32 61440, i32 61440, i32 61440, i32 61440, i32 61440, i32 61440, i32 61440, i32 61440, i32 61440, i32 61440>
  %224 = and <16 x i32> %223, %vector.i
  %225 = extractelement <16 x i32> %224, i32 0
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds float addrspace(1)* %1, i64 %226
  %228 = extractelement <16 x i32> %224, i32 1
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds float addrspace(1)* %1, i64 %229
  %231 = extractelement <16 x i32> %224, i32 2
  %232 = sext i32 %231 to i64
  %233 = getelementptr inbounds float addrspace(1)* %1, i64 %232
  %234 = extractelement <16 x i32> %224, i32 3
  %235 = sext i32 %234 to i64
  %236 = getelementptr inbounds float addrspace(1)* %1, i64 %235
  %237 = extractelement <16 x i32> %224, i32 4
  %238 = sext i32 %237 to i64
  %239 = getelementptr inbounds float addrspace(1)* %1, i64 %238
  %240 = extractelement <16 x i32> %224, i32 5
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds float addrspace(1)* %1, i64 %241
  %243 = extractelement <16 x i32> %224, i32 6
  %244 = sext i32 %243 to i64
  %245 = getelementptr inbounds float addrspace(1)* %1, i64 %244
  %246 = extractelement <16 x i32> %224, i32 7
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds float addrspace(1)* %1, i64 %247
  %249 = extractelement <16 x i32> %224, i32 8
  %250 = sext i32 %249 to i64
  %251 = getelementptr inbounds float addrspace(1)* %1, i64 %250
  %252 = extractelement <16 x i32> %224, i32 9
  %253 = sext i32 %252 to i64
  %254 = getelementptr inbounds float addrspace(1)* %1, i64 %253
  %255 = extractelement <16 x i32> %224, i32 10
  %256 = sext i32 %255 to i64
  %257 = getelementptr inbounds float addrspace(1)* %1, i64 %256
  %258 = extractelement <16 x i32> %224, i32 11
  %259 = sext i32 %258 to i64
  %260 = getelementptr inbounds float addrspace(1)* %1, i64 %259
  %261 = extractelement <16 x i32> %224, i32 12
  %262 = sext i32 %261 to i64
  %263 = getelementptr inbounds float addrspace(1)* %1, i64 %262
  %264 = extractelement <16 x i32> %224, i32 13
  %265 = sext i32 %264 to i64
  %266 = getelementptr inbounds float addrspace(1)* %1, i64 %265
  %267 = extractelement <16 x i32> %224, i32 14
  %268 = sext i32 %267 to i64
  %269 = getelementptr inbounds float addrspace(1)* %1, i64 %268
  %270 = extractelement <16 x i32> %224, i32 15
  %271 = sext i32 %270 to i64
  %272 = getelementptr inbounds float addrspace(1)* %1, i64 %271
  %273 = load float addrspace(1)* %227, align 4
  %274 = load float addrspace(1)* %230, align 4
  %275 = load float addrspace(1)* %233, align 4
  %276 = load float addrspace(1)* %236, align 4
  %277 = load float addrspace(1)* %239, align 4
  %278 = load float addrspace(1)* %242, align 4
  %279 = load float addrspace(1)* %245, align 4
  %280 = load float addrspace(1)* %248, align 4
  %281 = load float addrspace(1)* %251, align 4
  %282 = load float addrspace(1)* %254, align 4
  %283 = load float addrspace(1)* %257, align 4
  %284 = load float addrspace(1)* %260, align 4
  %285 = load float addrspace(1)* %263, align 4
  %286 = load float addrspace(1)* %266, align 4
  %287 = load float addrspace(1)* %269, align 4
  %288 = load float addrspace(1)* %272, align 4
  %temp.vect304.i = insertelement <16 x float> undef, float %273, i32 0
  %temp.vect305.i = insertelement <16 x float> %temp.vect304.i, float %274, i32 1
  %temp.vect306.i = insertelement <16 x float> %temp.vect305.i, float %275, i32 2
  %temp.vect307.i = insertelement <16 x float> %temp.vect306.i, float %276, i32 3
  %temp.vect308.i = insertelement <16 x float> %temp.vect307.i, float %277, i32 4
  %temp.vect309.i = insertelement <16 x float> %temp.vect308.i, float %278, i32 5
  %temp.vect310.i = insertelement <16 x float> %temp.vect309.i, float %279, i32 6
  %temp.vect311.i = insertelement <16 x float> %temp.vect310.i, float %280, i32 7
  %temp.vect312.i = insertelement <16 x float> %temp.vect311.i, float %281, i32 8
  %temp.vect313.i = insertelement <16 x float> %temp.vect312.i, float %282, i32 9
  %temp.vect314.i = insertelement <16 x float> %temp.vect313.i, float %283, i32 10
  %temp.vect315.i = insertelement <16 x float> %temp.vect314.i, float %284, i32 11
  %temp.vect316.i = insertelement <16 x float> %temp.vect315.i, float %285, i32 12
  %temp.vect317.i = insertelement <16 x float> %temp.vect316.i, float %286, i32 13
  %temp.vect318.i = insertelement <16 x float> %temp.vect317.i, float %287, i32 14
  %temp.vect319.i = insertelement <16 x float> %temp.vect318.i, float %288, i32 15
  %289 = add nsw <16 x i32> %vectorPHI.i, <i32 81920, i32 81920, i32 81920, i32 81920, i32 81920, i32 81920, i32 81920, i32 81920, i32 81920, i32 81920, i32 81920, i32 81920, i32 81920, i32 81920, i32 81920, i32 81920>
  %290 = and <16 x i32> %289, %vector.i
  %291 = extractelement <16 x i32> %290, i32 0
  %292 = sext i32 %291 to i64
  %293 = getelementptr inbounds float addrspace(1)* %1, i64 %292
  %294 = extractelement <16 x i32> %290, i32 1
  %295 = sext i32 %294 to i64
  %296 = getelementptr inbounds float addrspace(1)* %1, i64 %295
  %297 = extractelement <16 x i32> %290, i32 2
  %298 = sext i32 %297 to i64
  %299 = getelementptr inbounds float addrspace(1)* %1, i64 %298
  %300 = extractelement <16 x i32> %290, i32 3
  %301 = sext i32 %300 to i64
  %302 = getelementptr inbounds float addrspace(1)* %1, i64 %301
  %303 = extractelement <16 x i32> %290, i32 4
  %304 = sext i32 %303 to i64
  %305 = getelementptr inbounds float addrspace(1)* %1, i64 %304
  %306 = extractelement <16 x i32> %290, i32 5
  %307 = sext i32 %306 to i64
  %308 = getelementptr inbounds float addrspace(1)* %1, i64 %307
  %309 = extractelement <16 x i32> %290, i32 6
  %310 = sext i32 %309 to i64
  %311 = getelementptr inbounds float addrspace(1)* %1, i64 %310
  %312 = extractelement <16 x i32> %290, i32 7
  %313 = sext i32 %312 to i64
  %314 = getelementptr inbounds float addrspace(1)* %1, i64 %313
  %315 = extractelement <16 x i32> %290, i32 8
  %316 = sext i32 %315 to i64
  %317 = getelementptr inbounds float addrspace(1)* %1, i64 %316
  %318 = extractelement <16 x i32> %290, i32 9
  %319 = sext i32 %318 to i64
  %320 = getelementptr inbounds float addrspace(1)* %1, i64 %319
  %321 = extractelement <16 x i32> %290, i32 10
  %322 = sext i32 %321 to i64
  %323 = getelementptr inbounds float addrspace(1)* %1, i64 %322
  %324 = extractelement <16 x i32> %290, i32 11
  %325 = sext i32 %324 to i64
  %326 = getelementptr inbounds float addrspace(1)* %1, i64 %325
  %327 = extractelement <16 x i32> %290, i32 12
  %328 = sext i32 %327 to i64
  %329 = getelementptr inbounds float addrspace(1)* %1, i64 %328
  %330 = extractelement <16 x i32> %290, i32 13
  %331 = sext i32 %330 to i64
  %332 = getelementptr inbounds float addrspace(1)* %1, i64 %331
  %333 = extractelement <16 x i32> %290, i32 14
  %334 = sext i32 %333 to i64
  %335 = getelementptr inbounds float addrspace(1)* %1, i64 %334
  %336 = extractelement <16 x i32> %290, i32 15
  %337 = sext i32 %336 to i64
  %338 = getelementptr inbounds float addrspace(1)* %1, i64 %337
  %339 = load float addrspace(1)* %293, align 4
  %340 = load float addrspace(1)* %296, align 4
  %341 = load float addrspace(1)* %299, align 4
  %342 = load float addrspace(1)* %302, align 4
  %343 = load float addrspace(1)* %305, align 4
  %344 = load float addrspace(1)* %308, align 4
  %345 = load float addrspace(1)* %311, align 4
  %346 = load float addrspace(1)* %314, align 4
  %347 = load float addrspace(1)* %317, align 4
  %348 = load float addrspace(1)* %320, align 4
  %349 = load float addrspace(1)* %323, align 4
  %350 = load float addrspace(1)* %326, align 4
  %351 = load float addrspace(1)* %329, align 4
  %352 = load float addrspace(1)* %332, align 4
  %353 = load float addrspace(1)* %335, align 4
  %354 = load float addrspace(1)* %338, align 4
  %temp.vect320.i = insertelement <16 x float> undef, float %339, i32 0
  %temp.vect321.i = insertelement <16 x float> %temp.vect320.i, float %340, i32 1
  %temp.vect322.i = insertelement <16 x float> %temp.vect321.i, float %341, i32 2
  %temp.vect323.i = insertelement <16 x float> %temp.vect322.i, float %342, i32 3
  %temp.vect324.i = insertelement <16 x float> %temp.vect323.i, float %343, i32 4
  %temp.vect325.i = insertelement <16 x float> %temp.vect324.i, float %344, i32 5
  %temp.vect326.i = insertelement <16 x float> %temp.vect325.i, float %345, i32 6
  %temp.vect327.i = insertelement <16 x float> %temp.vect326.i, float %346, i32 7
  %temp.vect328.i = insertelement <16 x float> %temp.vect327.i, float %347, i32 8
  %temp.vect329.i = insertelement <16 x float> %temp.vect328.i, float %348, i32 9
  %temp.vect330.i = insertelement <16 x float> %temp.vect329.i, float %349, i32 10
  %temp.vect331.i = insertelement <16 x float> %temp.vect330.i, float %350, i32 11
  %temp.vect332.i = insertelement <16 x float> %temp.vect331.i, float %351, i32 12
  %temp.vect333.i = insertelement <16 x float> %temp.vect332.i, float %352, i32 13
  %temp.vect334.i = insertelement <16 x float> %temp.vect333.i, float %353, i32 14
  %temp.vect335.i = insertelement <16 x float> %temp.vect334.i, float %354, i32 15
  %355 = add nsw <16 x i32> %vectorPHI.i, <i32 102400, i32 102400, i32 102400, i32 102400, i32 102400, i32 102400, i32 102400, i32 102400, i32 102400, i32 102400, i32 102400, i32 102400, i32 102400, i32 102400, i32 102400, i32 102400>
  %356 = and <16 x i32> %355, %vector.i
  %357 = extractelement <16 x i32> %356, i32 0
  %358 = sext i32 %357 to i64
  %359 = getelementptr inbounds float addrspace(1)* %1, i64 %358
  %360 = extractelement <16 x i32> %356, i32 1
  %361 = sext i32 %360 to i64
  %362 = getelementptr inbounds float addrspace(1)* %1, i64 %361
  %363 = extractelement <16 x i32> %356, i32 2
  %364 = sext i32 %363 to i64
  %365 = getelementptr inbounds float addrspace(1)* %1, i64 %364
  %366 = extractelement <16 x i32> %356, i32 3
  %367 = sext i32 %366 to i64
  %368 = getelementptr inbounds float addrspace(1)* %1, i64 %367
  %369 = extractelement <16 x i32> %356, i32 4
  %370 = sext i32 %369 to i64
  %371 = getelementptr inbounds float addrspace(1)* %1, i64 %370
  %372 = extractelement <16 x i32> %356, i32 5
  %373 = sext i32 %372 to i64
  %374 = getelementptr inbounds float addrspace(1)* %1, i64 %373
  %375 = extractelement <16 x i32> %356, i32 6
  %376 = sext i32 %375 to i64
  %377 = getelementptr inbounds float addrspace(1)* %1, i64 %376
  %378 = extractelement <16 x i32> %356, i32 7
  %379 = sext i32 %378 to i64
  %380 = getelementptr inbounds float addrspace(1)* %1, i64 %379
  %381 = extractelement <16 x i32> %356, i32 8
  %382 = sext i32 %381 to i64
  %383 = getelementptr inbounds float addrspace(1)* %1, i64 %382
  %384 = extractelement <16 x i32> %356, i32 9
  %385 = sext i32 %384 to i64
  %386 = getelementptr inbounds float addrspace(1)* %1, i64 %385
  %387 = extractelement <16 x i32> %356, i32 10
  %388 = sext i32 %387 to i64
  %389 = getelementptr inbounds float addrspace(1)* %1, i64 %388
  %390 = extractelement <16 x i32> %356, i32 11
  %391 = sext i32 %390 to i64
  %392 = getelementptr inbounds float addrspace(1)* %1, i64 %391
  %393 = extractelement <16 x i32> %356, i32 12
  %394 = sext i32 %393 to i64
  %395 = getelementptr inbounds float addrspace(1)* %1, i64 %394
  %396 = extractelement <16 x i32> %356, i32 13
  %397 = sext i32 %396 to i64
  %398 = getelementptr inbounds float addrspace(1)* %1, i64 %397
  %399 = extractelement <16 x i32> %356, i32 14
  %400 = sext i32 %399 to i64
  %401 = getelementptr inbounds float addrspace(1)* %1, i64 %400
  %402 = extractelement <16 x i32> %356, i32 15
  %403 = sext i32 %402 to i64
  %404 = getelementptr inbounds float addrspace(1)* %1, i64 %403
  %405 = load float addrspace(1)* %359, align 4
  %406 = load float addrspace(1)* %362, align 4
  %407 = load float addrspace(1)* %365, align 4
  %408 = load float addrspace(1)* %368, align 4
  %409 = load float addrspace(1)* %371, align 4
  %410 = load float addrspace(1)* %374, align 4
  %411 = load float addrspace(1)* %377, align 4
  %412 = load float addrspace(1)* %380, align 4
  %413 = load float addrspace(1)* %383, align 4
  %414 = load float addrspace(1)* %386, align 4
  %415 = load float addrspace(1)* %389, align 4
  %416 = load float addrspace(1)* %392, align 4
  %417 = load float addrspace(1)* %395, align 4
  %418 = load float addrspace(1)* %398, align 4
  %419 = load float addrspace(1)* %401, align 4
  %420 = load float addrspace(1)* %404, align 4
  %temp.vect336.i = insertelement <16 x float> undef, float %405, i32 0
  %temp.vect337.i = insertelement <16 x float> %temp.vect336.i, float %406, i32 1
  %temp.vect338.i = insertelement <16 x float> %temp.vect337.i, float %407, i32 2
  %temp.vect339.i = insertelement <16 x float> %temp.vect338.i, float %408, i32 3
  %temp.vect340.i = insertelement <16 x float> %temp.vect339.i, float %409, i32 4
  %temp.vect341.i = insertelement <16 x float> %temp.vect340.i, float %410, i32 5
  %temp.vect342.i = insertelement <16 x float> %temp.vect341.i, float %411, i32 6
  %temp.vect343.i = insertelement <16 x float> %temp.vect342.i, float %412, i32 7
  %temp.vect344.i = insertelement <16 x float> %temp.vect343.i, float %413, i32 8
  %temp.vect345.i = insertelement <16 x float> %temp.vect344.i, float %414, i32 9
  %temp.vect346.i = insertelement <16 x float> %temp.vect345.i, float %415, i32 10
  %temp.vect347.i = insertelement <16 x float> %temp.vect346.i, float %416, i32 11
  %temp.vect348.i = insertelement <16 x float> %temp.vect347.i, float %417, i32 12
  %temp.vect349.i = insertelement <16 x float> %temp.vect348.i, float %418, i32 13
  %temp.vect350.i = insertelement <16 x float> %temp.vect349.i, float %419, i32 14
  %temp.vect351.i = insertelement <16 x float> %temp.vect350.i, float %420, i32 15
  %421 = add nsw <16 x i32> %vectorPHI.i, <i32 122880, i32 122880, i32 122880, i32 122880, i32 122880, i32 122880, i32 122880, i32 122880, i32 122880, i32 122880, i32 122880, i32 122880, i32 122880, i32 122880, i32 122880, i32 122880>
  %422 = and <16 x i32> %421, %vector.i
  %423 = extractelement <16 x i32> %422, i32 0
  %424 = sext i32 %423 to i64
  %425 = getelementptr inbounds float addrspace(1)* %1, i64 %424
  %426 = extractelement <16 x i32> %422, i32 1
  %427 = sext i32 %426 to i64
  %428 = getelementptr inbounds float addrspace(1)* %1, i64 %427
  %429 = extractelement <16 x i32> %422, i32 2
  %430 = sext i32 %429 to i64
  %431 = getelementptr inbounds float addrspace(1)* %1, i64 %430
  %432 = extractelement <16 x i32> %422, i32 3
  %433 = sext i32 %432 to i64
  %434 = getelementptr inbounds float addrspace(1)* %1, i64 %433
  %435 = extractelement <16 x i32> %422, i32 4
  %436 = sext i32 %435 to i64
  %437 = getelementptr inbounds float addrspace(1)* %1, i64 %436
  %438 = extractelement <16 x i32> %422, i32 5
  %439 = sext i32 %438 to i64
  %440 = getelementptr inbounds float addrspace(1)* %1, i64 %439
  %441 = extractelement <16 x i32> %422, i32 6
  %442 = sext i32 %441 to i64
  %443 = getelementptr inbounds float addrspace(1)* %1, i64 %442
  %444 = extractelement <16 x i32> %422, i32 7
  %445 = sext i32 %444 to i64
  %446 = getelementptr inbounds float addrspace(1)* %1, i64 %445
  %447 = extractelement <16 x i32> %422, i32 8
  %448 = sext i32 %447 to i64
  %449 = getelementptr inbounds float addrspace(1)* %1, i64 %448
  %450 = extractelement <16 x i32> %422, i32 9
  %451 = sext i32 %450 to i64
  %452 = getelementptr inbounds float addrspace(1)* %1, i64 %451
  %453 = extractelement <16 x i32> %422, i32 10
  %454 = sext i32 %453 to i64
  %455 = getelementptr inbounds float addrspace(1)* %1, i64 %454
  %456 = extractelement <16 x i32> %422, i32 11
  %457 = sext i32 %456 to i64
  %458 = getelementptr inbounds float addrspace(1)* %1, i64 %457
  %459 = extractelement <16 x i32> %422, i32 12
  %460 = sext i32 %459 to i64
  %461 = getelementptr inbounds float addrspace(1)* %1, i64 %460
  %462 = extractelement <16 x i32> %422, i32 13
  %463 = sext i32 %462 to i64
  %464 = getelementptr inbounds float addrspace(1)* %1, i64 %463
  %465 = extractelement <16 x i32> %422, i32 14
  %466 = sext i32 %465 to i64
  %467 = getelementptr inbounds float addrspace(1)* %1, i64 %466
  %468 = extractelement <16 x i32> %422, i32 15
  %469 = sext i32 %468 to i64
  %470 = getelementptr inbounds float addrspace(1)* %1, i64 %469
  %471 = load float addrspace(1)* %425, align 4
  %472 = load float addrspace(1)* %428, align 4
  %473 = load float addrspace(1)* %431, align 4
  %474 = load float addrspace(1)* %434, align 4
  %475 = load float addrspace(1)* %437, align 4
  %476 = load float addrspace(1)* %440, align 4
  %477 = load float addrspace(1)* %443, align 4
  %478 = load float addrspace(1)* %446, align 4
  %479 = load float addrspace(1)* %449, align 4
  %480 = load float addrspace(1)* %452, align 4
  %481 = load float addrspace(1)* %455, align 4
  %482 = load float addrspace(1)* %458, align 4
  %483 = load float addrspace(1)* %461, align 4
  %484 = load float addrspace(1)* %464, align 4
  %485 = load float addrspace(1)* %467, align 4
  %486 = load float addrspace(1)* %470, align 4
  %temp.vect352.i = insertelement <16 x float> undef, float %471, i32 0
  %temp.vect353.i = insertelement <16 x float> %temp.vect352.i, float %472, i32 1
  %temp.vect354.i = insertelement <16 x float> %temp.vect353.i, float %473, i32 2
  %temp.vect355.i = insertelement <16 x float> %temp.vect354.i, float %474, i32 3
  %temp.vect356.i = insertelement <16 x float> %temp.vect355.i, float %475, i32 4
  %temp.vect357.i = insertelement <16 x float> %temp.vect356.i, float %476, i32 5
  %temp.vect358.i = insertelement <16 x float> %temp.vect357.i, float %477, i32 6
  %temp.vect359.i = insertelement <16 x float> %temp.vect358.i, float %478, i32 7
  %temp.vect360.i = insertelement <16 x float> %temp.vect359.i, float %479, i32 8
  %temp.vect361.i = insertelement <16 x float> %temp.vect360.i, float %480, i32 9
  %temp.vect362.i = insertelement <16 x float> %temp.vect361.i, float %481, i32 10
  %temp.vect363.i = insertelement <16 x float> %temp.vect362.i, float %482, i32 11
  %temp.vect364.i = insertelement <16 x float> %temp.vect363.i, float %483, i32 12
  %temp.vect365.i = insertelement <16 x float> %temp.vect364.i, float %484, i32 13
  %temp.vect366.i = insertelement <16 x float> %temp.vect365.i, float %485, i32 14
  %temp.vect367.i = insertelement <16 x float> %temp.vect366.i, float %486, i32 15
  %487 = add nsw <16 x i32> %vectorPHI.i, <i32 143360, i32 143360, i32 143360, i32 143360, i32 143360, i32 143360, i32 143360, i32 143360, i32 143360, i32 143360, i32 143360, i32 143360, i32 143360, i32 143360, i32 143360, i32 143360>
  %488 = and <16 x i32> %487, %vector.i
  %489 = extractelement <16 x i32> %488, i32 0
  %490 = sext i32 %489 to i64
  %491 = getelementptr inbounds float addrspace(1)* %1, i64 %490
  %492 = extractelement <16 x i32> %488, i32 1
  %493 = sext i32 %492 to i64
  %494 = getelementptr inbounds float addrspace(1)* %1, i64 %493
  %495 = extractelement <16 x i32> %488, i32 2
  %496 = sext i32 %495 to i64
  %497 = getelementptr inbounds float addrspace(1)* %1, i64 %496
  %498 = extractelement <16 x i32> %488, i32 3
  %499 = sext i32 %498 to i64
  %500 = getelementptr inbounds float addrspace(1)* %1, i64 %499
  %501 = extractelement <16 x i32> %488, i32 4
  %502 = sext i32 %501 to i64
  %503 = getelementptr inbounds float addrspace(1)* %1, i64 %502
  %504 = extractelement <16 x i32> %488, i32 5
  %505 = sext i32 %504 to i64
  %506 = getelementptr inbounds float addrspace(1)* %1, i64 %505
  %507 = extractelement <16 x i32> %488, i32 6
  %508 = sext i32 %507 to i64
  %509 = getelementptr inbounds float addrspace(1)* %1, i64 %508
  %510 = extractelement <16 x i32> %488, i32 7
  %511 = sext i32 %510 to i64
  %512 = getelementptr inbounds float addrspace(1)* %1, i64 %511
  %513 = extractelement <16 x i32> %488, i32 8
  %514 = sext i32 %513 to i64
  %515 = getelementptr inbounds float addrspace(1)* %1, i64 %514
  %516 = extractelement <16 x i32> %488, i32 9
  %517 = sext i32 %516 to i64
  %518 = getelementptr inbounds float addrspace(1)* %1, i64 %517
  %519 = extractelement <16 x i32> %488, i32 10
  %520 = sext i32 %519 to i64
  %521 = getelementptr inbounds float addrspace(1)* %1, i64 %520
  %522 = extractelement <16 x i32> %488, i32 11
  %523 = sext i32 %522 to i64
  %524 = getelementptr inbounds float addrspace(1)* %1, i64 %523
  %525 = extractelement <16 x i32> %488, i32 12
  %526 = sext i32 %525 to i64
  %527 = getelementptr inbounds float addrspace(1)* %1, i64 %526
  %528 = extractelement <16 x i32> %488, i32 13
  %529 = sext i32 %528 to i64
  %530 = getelementptr inbounds float addrspace(1)* %1, i64 %529
  %531 = extractelement <16 x i32> %488, i32 14
  %532 = sext i32 %531 to i64
  %533 = getelementptr inbounds float addrspace(1)* %1, i64 %532
  %534 = extractelement <16 x i32> %488, i32 15
  %535 = sext i32 %534 to i64
  %536 = getelementptr inbounds float addrspace(1)* %1, i64 %535
  %537 = load float addrspace(1)* %491, align 4
  %538 = load float addrspace(1)* %494, align 4
  %539 = load float addrspace(1)* %497, align 4
  %540 = load float addrspace(1)* %500, align 4
  %541 = load float addrspace(1)* %503, align 4
  %542 = load float addrspace(1)* %506, align 4
  %543 = load float addrspace(1)* %509, align 4
  %544 = load float addrspace(1)* %512, align 4
  %545 = load float addrspace(1)* %515, align 4
  %546 = load float addrspace(1)* %518, align 4
  %547 = load float addrspace(1)* %521, align 4
  %548 = load float addrspace(1)* %524, align 4
  %549 = load float addrspace(1)* %527, align 4
  %550 = load float addrspace(1)* %530, align 4
  %551 = load float addrspace(1)* %533, align 4
  %552 = load float addrspace(1)* %536, align 4
  %temp.vect368.i = insertelement <16 x float> undef, float %537, i32 0
  %temp.vect369.i = insertelement <16 x float> %temp.vect368.i, float %538, i32 1
  %temp.vect370.i = insertelement <16 x float> %temp.vect369.i, float %539, i32 2
  %temp.vect371.i = insertelement <16 x float> %temp.vect370.i, float %540, i32 3
  %temp.vect372.i = insertelement <16 x float> %temp.vect371.i, float %541, i32 4
  %temp.vect373.i = insertelement <16 x float> %temp.vect372.i, float %542, i32 5
  %temp.vect374.i = insertelement <16 x float> %temp.vect373.i, float %543, i32 6
  %temp.vect375.i = insertelement <16 x float> %temp.vect374.i, float %544, i32 7
  %temp.vect376.i = insertelement <16 x float> %temp.vect375.i, float %545, i32 8
  %temp.vect377.i = insertelement <16 x float> %temp.vect376.i, float %546, i32 9
  %temp.vect378.i = insertelement <16 x float> %temp.vect377.i, float %547, i32 10
  %temp.vect379.i = insertelement <16 x float> %temp.vect378.i, float %548, i32 11
  %temp.vect380.i = insertelement <16 x float> %temp.vect379.i, float %549, i32 12
  %temp.vect381.i = insertelement <16 x float> %temp.vect380.i, float %550, i32 13
  %temp.vect382.i = insertelement <16 x float> %temp.vect381.i, float %551, i32 14
  %temp.vect383.i = insertelement <16 x float> %temp.vect382.i, float %552, i32 15
  %553 = add nsw <16 x i32> %vectorPHI.i, <i32 163840, i32 163840, i32 163840, i32 163840, i32 163840, i32 163840, i32 163840, i32 163840, i32 163840, i32 163840, i32 163840, i32 163840, i32 163840, i32 163840, i32 163840, i32 163840>
  %554 = and <16 x i32> %553, %vector.i
  %555 = extractelement <16 x i32> %554, i32 0
  %556 = sext i32 %555 to i64
  %557 = getelementptr inbounds float addrspace(1)* %1, i64 %556
  %558 = extractelement <16 x i32> %554, i32 1
  %559 = sext i32 %558 to i64
  %560 = getelementptr inbounds float addrspace(1)* %1, i64 %559
  %561 = extractelement <16 x i32> %554, i32 2
  %562 = sext i32 %561 to i64
  %563 = getelementptr inbounds float addrspace(1)* %1, i64 %562
  %564 = extractelement <16 x i32> %554, i32 3
  %565 = sext i32 %564 to i64
  %566 = getelementptr inbounds float addrspace(1)* %1, i64 %565
  %567 = extractelement <16 x i32> %554, i32 4
  %568 = sext i32 %567 to i64
  %569 = getelementptr inbounds float addrspace(1)* %1, i64 %568
  %570 = extractelement <16 x i32> %554, i32 5
  %571 = sext i32 %570 to i64
  %572 = getelementptr inbounds float addrspace(1)* %1, i64 %571
  %573 = extractelement <16 x i32> %554, i32 6
  %574 = sext i32 %573 to i64
  %575 = getelementptr inbounds float addrspace(1)* %1, i64 %574
  %576 = extractelement <16 x i32> %554, i32 7
  %577 = sext i32 %576 to i64
  %578 = getelementptr inbounds float addrspace(1)* %1, i64 %577
  %579 = extractelement <16 x i32> %554, i32 8
  %580 = sext i32 %579 to i64
  %581 = getelementptr inbounds float addrspace(1)* %1, i64 %580
  %582 = extractelement <16 x i32> %554, i32 9
  %583 = sext i32 %582 to i64
  %584 = getelementptr inbounds float addrspace(1)* %1, i64 %583
  %585 = extractelement <16 x i32> %554, i32 10
  %586 = sext i32 %585 to i64
  %587 = getelementptr inbounds float addrspace(1)* %1, i64 %586
  %588 = extractelement <16 x i32> %554, i32 11
  %589 = sext i32 %588 to i64
  %590 = getelementptr inbounds float addrspace(1)* %1, i64 %589
  %591 = extractelement <16 x i32> %554, i32 12
  %592 = sext i32 %591 to i64
  %593 = getelementptr inbounds float addrspace(1)* %1, i64 %592
  %594 = extractelement <16 x i32> %554, i32 13
  %595 = sext i32 %594 to i64
  %596 = getelementptr inbounds float addrspace(1)* %1, i64 %595
  %597 = extractelement <16 x i32> %554, i32 14
  %598 = sext i32 %597 to i64
  %599 = getelementptr inbounds float addrspace(1)* %1, i64 %598
  %600 = extractelement <16 x i32> %554, i32 15
  %601 = sext i32 %600 to i64
  %602 = getelementptr inbounds float addrspace(1)* %1, i64 %601
  %603 = load float addrspace(1)* %557, align 4
  %604 = load float addrspace(1)* %560, align 4
  %605 = load float addrspace(1)* %563, align 4
  %606 = load float addrspace(1)* %566, align 4
  %607 = load float addrspace(1)* %569, align 4
  %608 = load float addrspace(1)* %572, align 4
  %609 = load float addrspace(1)* %575, align 4
  %610 = load float addrspace(1)* %578, align 4
  %611 = load float addrspace(1)* %581, align 4
  %612 = load float addrspace(1)* %584, align 4
  %613 = load float addrspace(1)* %587, align 4
  %614 = load float addrspace(1)* %590, align 4
  %615 = load float addrspace(1)* %593, align 4
  %616 = load float addrspace(1)* %596, align 4
  %617 = load float addrspace(1)* %599, align 4
  %618 = load float addrspace(1)* %602, align 4
  %temp.vect384.i = insertelement <16 x float> undef, float %603, i32 0
  %temp.vect385.i = insertelement <16 x float> %temp.vect384.i, float %604, i32 1
  %temp.vect386.i = insertelement <16 x float> %temp.vect385.i, float %605, i32 2
  %temp.vect387.i = insertelement <16 x float> %temp.vect386.i, float %606, i32 3
  %temp.vect388.i = insertelement <16 x float> %temp.vect387.i, float %607, i32 4
  %temp.vect389.i = insertelement <16 x float> %temp.vect388.i, float %608, i32 5
  %temp.vect390.i = insertelement <16 x float> %temp.vect389.i, float %609, i32 6
  %temp.vect391.i = insertelement <16 x float> %temp.vect390.i, float %610, i32 7
  %temp.vect392.i = insertelement <16 x float> %temp.vect391.i, float %611, i32 8
  %temp.vect393.i = insertelement <16 x float> %temp.vect392.i, float %612, i32 9
  %temp.vect394.i = insertelement <16 x float> %temp.vect393.i, float %613, i32 10
  %temp.vect395.i = insertelement <16 x float> %temp.vect394.i, float %614, i32 11
  %temp.vect396.i = insertelement <16 x float> %temp.vect395.i, float %615, i32 12
  %temp.vect397.i = insertelement <16 x float> %temp.vect396.i, float %616, i32 13
  %temp.vect398.i = insertelement <16 x float> %temp.vect397.i, float %617, i32 14
  %temp.vect399.i = insertelement <16 x float> %temp.vect398.i, float %618, i32 15
  %619 = add nsw <16 x i32> %vectorPHI.i, <i32 184320, i32 184320, i32 184320, i32 184320, i32 184320, i32 184320, i32 184320, i32 184320, i32 184320, i32 184320, i32 184320, i32 184320, i32 184320, i32 184320, i32 184320, i32 184320>
  %620 = and <16 x i32> %619, %vector.i
  %621 = extractelement <16 x i32> %620, i32 0
  %622 = sext i32 %621 to i64
  %623 = getelementptr inbounds float addrspace(1)* %1, i64 %622
  %624 = extractelement <16 x i32> %620, i32 1
  %625 = sext i32 %624 to i64
  %626 = getelementptr inbounds float addrspace(1)* %1, i64 %625
  %627 = extractelement <16 x i32> %620, i32 2
  %628 = sext i32 %627 to i64
  %629 = getelementptr inbounds float addrspace(1)* %1, i64 %628
  %630 = extractelement <16 x i32> %620, i32 3
  %631 = sext i32 %630 to i64
  %632 = getelementptr inbounds float addrspace(1)* %1, i64 %631
  %633 = extractelement <16 x i32> %620, i32 4
  %634 = sext i32 %633 to i64
  %635 = getelementptr inbounds float addrspace(1)* %1, i64 %634
  %636 = extractelement <16 x i32> %620, i32 5
  %637 = sext i32 %636 to i64
  %638 = getelementptr inbounds float addrspace(1)* %1, i64 %637
  %639 = extractelement <16 x i32> %620, i32 6
  %640 = sext i32 %639 to i64
  %641 = getelementptr inbounds float addrspace(1)* %1, i64 %640
  %642 = extractelement <16 x i32> %620, i32 7
  %643 = sext i32 %642 to i64
  %644 = getelementptr inbounds float addrspace(1)* %1, i64 %643
  %645 = extractelement <16 x i32> %620, i32 8
  %646 = sext i32 %645 to i64
  %647 = getelementptr inbounds float addrspace(1)* %1, i64 %646
  %648 = extractelement <16 x i32> %620, i32 9
  %649 = sext i32 %648 to i64
  %650 = getelementptr inbounds float addrspace(1)* %1, i64 %649
  %651 = extractelement <16 x i32> %620, i32 10
  %652 = sext i32 %651 to i64
  %653 = getelementptr inbounds float addrspace(1)* %1, i64 %652
  %654 = extractelement <16 x i32> %620, i32 11
  %655 = sext i32 %654 to i64
  %656 = getelementptr inbounds float addrspace(1)* %1, i64 %655
  %657 = extractelement <16 x i32> %620, i32 12
  %658 = sext i32 %657 to i64
  %659 = getelementptr inbounds float addrspace(1)* %1, i64 %658
  %660 = extractelement <16 x i32> %620, i32 13
  %661 = sext i32 %660 to i64
  %662 = getelementptr inbounds float addrspace(1)* %1, i64 %661
  %663 = extractelement <16 x i32> %620, i32 14
  %664 = sext i32 %663 to i64
  %665 = getelementptr inbounds float addrspace(1)* %1, i64 %664
  %666 = extractelement <16 x i32> %620, i32 15
  %667 = sext i32 %666 to i64
  %668 = getelementptr inbounds float addrspace(1)* %1, i64 %667
  %669 = load float addrspace(1)* %623, align 4
  %670 = load float addrspace(1)* %626, align 4
  %671 = load float addrspace(1)* %629, align 4
  %672 = load float addrspace(1)* %632, align 4
  %673 = load float addrspace(1)* %635, align 4
  %674 = load float addrspace(1)* %638, align 4
  %675 = load float addrspace(1)* %641, align 4
  %676 = load float addrspace(1)* %644, align 4
  %677 = load float addrspace(1)* %647, align 4
  %678 = load float addrspace(1)* %650, align 4
  %679 = load float addrspace(1)* %653, align 4
  %680 = load float addrspace(1)* %656, align 4
  %681 = load float addrspace(1)* %659, align 4
  %682 = load float addrspace(1)* %662, align 4
  %683 = load float addrspace(1)* %665, align 4
  %684 = load float addrspace(1)* %668, align 4
  %temp.vect400.i = insertelement <16 x float> undef, float %669, i32 0
  %temp.vect401.i = insertelement <16 x float> %temp.vect400.i, float %670, i32 1
  %temp.vect402.i = insertelement <16 x float> %temp.vect401.i, float %671, i32 2
  %temp.vect403.i = insertelement <16 x float> %temp.vect402.i, float %672, i32 3
  %temp.vect404.i = insertelement <16 x float> %temp.vect403.i, float %673, i32 4
  %temp.vect405.i = insertelement <16 x float> %temp.vect404.i, float %674, i32 5
  %temp.vect406.i = insertelement <16 x float> %temp.vect405.i, float %675, i32 6
  %temp.vect407.i = insertelement <16 x float> %temp.vect406.i, float %676, i32 7
  %temp.vect408.i = insertelement <16 x float> %temp.vect407.i, float %677, i32 8
  %temp.vect409.i = insertelement <16 x float> %temp.vect408.i, float %678, i32 9
  %temp.vect410.i = insertelement <16 x float> %temp.vect409.i, float %679, i32 10
  %temp.vect411.i = insertelement <16 x float> %temp.vect410.i, float %680, i32 11
  %temp.vect412.i = insertelement <16 x float> %temp.vect411.i, float %681, i32 12
  %temp.vect413.i = insertelement <16 x float> %temp.vect412.i, float %682, i32 13
  %temp.vect414.i = insertelement <16 x float> %temp.vect413.i, float %683, i32 14
  %temp.vect415.i = insertelement <16 x float> %temp.vect414.i, float %684, i32 15
  %685 = add nsw <16 x i32> %vectorPHI.i, <i32 204800, i32 204800, i32 204800, i32 204800, i32 204800, i32 204800, i32 204800, i32 204800, i32 204800, i32 204800, i32 204800, i32 204800, i32 204800, i32 204800, i32 204800, i32 204800>
  %686 = and <16 x i32> %685, %vector.i
  %687 = extractelement <16 x i32> %686, i32 0
  %688 = sext i32 %687 to i64
  %689 = getelementptr inbounds float addrspace(1)* %1, i64 %688
  %690 = extractelement <16 x i32> %686, i32 1
  %691 = sext i32 %690 to i64
  %692 = getelementptr inbounds float addrspace(1)* %1, i64 %691
  %693 = extractelement <16 x i32> %686, i32 2
  %694 = sext i32 %693 to i64
  %695 = getelementptr inbounds float addrspace(1)* %1, i64 %694
  %696 = extractelement <16 x i32> %686, i32 3
  %697 = sext i32 %696 to i64
  %698 = getelementptr inbounds float addrspace(1)* %1, i64 %697
  %699 = extractelement <16 x i32> %686, i32 4
  %700 = sext i32 %699 to i64
  %701 = getelementptr inbounds float addrspace(1)* %1, i64 %700
  %702 = extractelement <16 x i32> %686, i32 5
  %703 = sext i32 %702 to i64
  %704 = getelementptr inbounds float addrspace(1)* %1, i64 %703
  %705 = extractelement <16 x i32> %686, i32 6
  %706 = sext i32 %705 to i64
  %707 = getelementptr inbounds float addrspace(1)* %1, i64 %706
  %708 = extractelement <16 x i32> %686, i32 7
  %709 = sext i32 %708 to i64
  %710 = getelementptr inbounds float addrspace(1)* %1, i64 %709
  %711 = extractelement <16 x i32> %686, i32 8
  %712 = sext i32 %711 to i64
  %713 = getelementptr inbounds float addrspace(1)* %1, i64 %712
  %714 = extractelement <16 x i32> %686, i32 9
  %715 = sext i32 %714 to i64
  %716 = getelementptr inbounds float addrspace(1)* %1, i64 %715
  %717 = extractelement <16 x i32> %686, i32 10
  %718 = sext i32 %717 to i64
  %719 = getelementptr inbounds float addrspace(1)* %1, i64 %718
  %720 = extractelement <16 x i32> %686, i32 11
  %721 = sext i32 %720 to i64
  %722 = getelementptr inbounds float addrspace(1)* %1, i64 %721
  %723 = extractelement <16 x i32> %686, i32 12
  %724 = sext i32 %723 to i64
  %725 = getelementptr inbounds float addrspace(1)* %1, i64 %724
  %726 = extractelement <16 x i32> %686, i32 13
  %727 = sext i32 %726 to i64
  %728 = getelementptr inbounds float addrspace(1)* %1, i64 %727
  %729 = extractelement <16 x i32> %686, i32 14
  %730 = sext i32 %729 to i64
  %731 = getelementptr inbounds float addrspace(1)* %1, i64 %730
  %732 = extractelement <16 x i32> %686, i32 15
  %733 = sext i32 %732 to i64
  %734 = getelementptr inbounds float addrspace(1)* %1, i64 %733
  %735 = load float addrspace(1)* %689, align 4
  %736 = load float addrspace(1)* %692, align 4
  %737 = load float addrspace(1)* %695, align 4
  %738 = load float addrspace(1)* %698, align 4
  %739 = load float addrspace(1)* %701, align 4
  %740 = load float addrspace(1)* %704, align 4
  %741 = load float addrspace(1)* %707, align 4
  %742 = load float addrspace(1)* %710, align 4
  %743 = load float addrspace(1)* %713, align 4
  %744 = load float addrspace(1)* %716, align 4
  %745 = load float addrspace(1)* %719, align 4
  %746 = load float addrspace(1)* %722, align 4
  %747 = load float addrspace(1)* %725, align 4
  %748 = load float addrspace(1)* %728, align 4
  %749 = load float addrspace(1)* %731, align 4
  %750 = load float addrspace(1)* %734, align 4
  %temp.vect416.i = insertelement <16 x float> undef, float %735, i32 0
  %temp.vect417.i = insertelement <16 x float> %temp.vect416.i, float %736, i32 1
  %temp.vect418.i = insertelement <16 x float> %temp.vect417.i, float %737, i32 2
  %temp.vect419.i = insertelement <16 x float> %temp.vect418.i, float %738, i32 3
  %temp.vect420.i = insertelement <16 x float> %temp.vect419.i, float %739, i32 4
  %temp.vect421.i = insertelement <16 x float> %temp.vect420.i, float %740, i32 5
  %temp.vect422.i = insertelement <16 x float> %temp.vect421.i, float %741, i32 6
  %temp.vect423.i = insertelement <16 x float> %temp.vect422.i, float %742, i32 7
  %temp.vect424.i = insertelement <16 x float> %temp.vect423.i, float %743, i32 8
  %temp.vect425.i = insertelement <16 x float> %temp.vect424.i, float %744, i32 9
  %temp.vect426.i = insertelement <16 x float> %temp.vect425.i, float %745, i32 10
  %temp.vect427.i = insertelement <16 x float> %temp.vect426.i, float %746, i32 11
  %temp.vect428.i = insertelement <16 x float> %temp.vect427.i, float %747, i32 12
  %temp.vect429.i = insertelement <16 x float> %temp.vect428.i, float %748, i32 13
  %temp.vect430.i = insertelement <16 x float> %temp.vect429.i, float %749, i32 14
  %temp.vect431.i = insertelement <16 x float> %temp.vect430.i, float %750, i32 15
  %751 = add nsw <16 x i32> %vectorPHI.i, <i32 225280, i32 225280, i32 225280, i32 225280, i32 225280, i32 225280, i32 225280, i32 225280, i32 225280, i32 225280, i32 225280, i32 225280, i32 225280, i32 225280, i32 225280, i32 225280>
  %752 = and <16 x i32> %751, %vector.i
  %753 = extractelement <16 x i32> %752, i32 0
  %754 = sext i32 %753 to i64
  %755 = getelementptr inbounds float addrspace(1)* %1, i64 %754
  %756 = extractelement <16 x i32> %752, i32 1
  %757 = sext i32 %756 to i64
  %758 = getelementptr inbounds float addrspace(1)* %1, i64 %757
  %759 = extractelement <16 x i32> %752, i32 2
  %760 = sext i32 %759 to i64
  %761 = getelementptr inbounds float addrspace(1)* %1, i64 %760
  %762 = extractelement <16 x i32> %752, i32 3
  %763 = sext i32 %762 to i64
  %764 = getelementptr inbounds float addrspace(1)* %1, i64 %763
  %765 = extractelement <16 x i32> %752, i32 4
  %766 = sext i32 %765 to i64
  %767 = getelementptr inbounds float addrspace(1)* %1, i64 %766
  %768 = extractelement <16 x i32> %752, i32 5
  %769 = sext i32 %768 to i64
  %770 = getelementptr inbounds float addrspace(1)* %1, i64 %769
  %771 = extractelement <16 x i32> %752, i32 6
  %772 = sext i32 %771 to i64
  %773 = getelementptr inbounds float addrspace(1)* %1, i64 %772
  %774 = extractelement <16 x i32> %752, i32 7
  %775 = sext i32 %774 to i64
  %776 = getelementptr inbounds float addrspace(1)* %1, i64 %775
  %777 = extractelement <16 x i32> %752, i32 8
  %778 = sext i32 %777 to i64
  %779 = getelementptr inbounds float addrspace(1)* %1, i64 %778
  %780 = extractelement <16 x i32> %752, i32 9
  %781 = sext i32 %780 to i64
  %782 = getelementptr inbounds float addrspace(1)* %1, i64 %781
  %783 = extractelement <16 x i32> %752, i32 10
  %784 = sext i32 %783 to i64
  %785 = getelementptr inbounds float addrspace(1)* %1, i64 %784
  %786 = extractelement <16 x i32> %752, i32 11
  %787 = sext i32 %786 to i64
  %788 = getelementptr inbounds float addrspace(1)* %1, i64 %787
  %789 = extractelement <16 x i32> %752, i32 12
  %790 = sext i32 %789 to i64
  %791 = getelementptr inbounds float addrspace(1)* %1, i64 %790
  %792 = extractelement <16 x i32> %752, i32 13
  %793 = sext i32 %792 to i64
  %794 = getelementptr inbounds float addrspace(1)* %1, i64 %793
  %795 = extractelement <16 x i32> %752, i32 14
  %796 = sext i32 %795 to i64
  %797 = getelementptr inbounds float addrspace(1)* %1, i64 %796
  %798 = extractelement <16 x i32> %752, i32 15
  %799 = sext i32 %798 to i64
  %800 = getelementptr inbounds float addrspace(1)* %1, i64 %799
  %801 = load float addrspace(1)* %755, align 4
  %802 = load float addrspace(1)* %758, align 4
  %803 = load float addrspace(1)* %761, align 4
  %804 = load float addrspace(1)* %764, align 4
  %805 = load float addrspace(1)* %767, align 4
  %806 = load float addrspace(1)* %770, align 4
  %807 = load float addrspace(1)* %773, align 4
  %808 = load float addrspace(1)* %776, align 4
  %809 = load float addrspace(1)* %779, align 4
  %810 = load float addrspace(1)* %782, align 4
  %811 = load float addrspace(1)* %785, align 4
  %812 = load float addrspace(1)* %788, align 4
  %813 = load float addrspace(1)* %791, align 4
  %814 = load float addrspace(1)* %794, align 4
  %815 = load float addrspace(1)* %797, align 4
  %816 = load float addrspace(1)* %800, align 4
  %temp.vect432.i = insertelement <16 x float> undef, float %801, i32 0
  %temp.vect433.i = insertelement <16 x float> %temp.vect432.i, float %802, i32 1
  %temp.vect434.i = insertelement <16 x float> %temp.vect433.i, float %803, i32 2
  %temp.vect435.i = insertelement <16 x float> %temp.vect434.i, float %804, i32 3
  %temp.vect436.i = insertelement <16 x float> %temp.vect435.i, float %805, i32 4
  %temp.vect437.i = insertelement <16 x float> %temp.vect436.i, float %806, i32 5
  %temp.vect438.i = insertelement <16 x float> %temp.vect437.i, float %807, i32 6
  %temp.vect439.i = insertelement <16 x float> %temp.vect438.i, float %808, i32 7
  %temp.vect440.i = insertelement <16 x float> %temp.vect439.i, float %809, i32 8
  %temp.vect441.i = insertelement <16 x float> %temp.vect440.i, float %810, i32 9
  %temp.vect442.i = insertelement <16 x float> %temp.vect441.i, float %811, i32 10
  %temp.vect443.i = insertelement <16 x float> %temp.vect442.i, float %812, i32 11
  %temp.vect444.i = insertelement <16 x float> %temp.vect443.i, float %813, i32 12
  %temp.vect445.i = insertelement <16 x float> %temp.vect444.i, float %814, i32 13
  %temp.vect446.i = insertelement <16 x float> %temp.vect445.i, float %815, i32 14
  %temp.vect447.i = insertelement <16 x float> %temp.vect446.i, float %816, i32 15
  %817 = add nsw <16 x i32> %vectorPHI.i, <i32 245760, i32 245760, i32 245760, i32 245760, i32 245760, i32 245760, i32 245760, i32 245760, i32 245760, i32 245760, i32 245760, i32 245760, i32 245760, i32 245760, i32 245760, i32 245760>
  %818 = and <16 x i32> %817, %vector.i
  %819 = extractelement <16 x i32> %818, i32 0
  %820 = sext i32 %819 to i64
  %821 = getelementptr inbounds float addrspace(1)* %1, i64 %820
  %822 = extractelement <16 x i32> %818, i32 1
  %823 = sext i32 %822 to i64
  %824 = getelementptr inbounds float addrspace(1)* %1, i64 %823
  %825 = extractelement <16 x i32> %818, i32 2
  %826 = sext i32 %825 to i64
  %827 = getelementptr inbounds float addrspace(1)* %1, i64 %826
  %828 = extractelement <16 x i32> %818, i32 3
  %829 = sext i32 %828 to i64
  %830 = getelementptr inbounds float addrspace(1)* %1, i64 %829
  %831 = extractelement <16 x i32> %818, i32 4
  %832 = sext i32 %831 to i64
  %833 = getelementptr inbounds float addrspace(1)* %1, i64 %832
  %834 = extractelement <16 x i32> %818, i32 5
  %835 = sext i32 %834 to i64
  %836 = getelementptr inbounds float addrspace(1)* %1, i64 %835
  %837 = extractelement <16 x i32> %818, i32 6
  %838 = sext i32 %837 to i64
  %839 = getelementptr inbounds float addrspace(1)* %1, i64 %838
  %840 = extractelement <16 x i32> %818, i32 7
  %841 = sext i32 %840 to i64
  %842 = getelementptr inbounds float addrspace(1)* %1, i64 %841
  %843 = extractelement <16 x i32> %818, i32 8
  %844 = sext i32 %843 to i64
  %845 = getelementptr inbounds float addrspace(1)* %1, i64 %844
  %846 = extractelement <16 x i32> %818, i32 9
  %847 = sext i32 %846 to i64
  %848 = getelementptr inbounds float addrspace(1)* %1, i64 %847
  %849 = extractelement <16 x i32> %818, i32 10
  %850 = sext i32 %849 to i64
  %851 = getelementptr inbounds float addrspace(1)* %1, i64 %850
  %852 = extractelement <16 x i32> %818, i32 11
  %853 = sext i32 %852 to i64
  %854 = getelementptr inbounds float addrspace(1)* %1, i64 %853
  %855 = extractelement <16 x i32> %818, i32 12
  %856 = sext i32 %855 to i64
  %857 = getelementptr inbounds float addrspace(1)* %1, i64 %856
  %858 = extractelement <16 x i32> %818, i32 13
  %859 = sext i32 %858 to i64
  %860 = getelementptr inbounds float addrspace(1)* %1, i64 %859
  %861 = extractelement <16 x i32> %818, i32 14
  %862 = sext i32 %861 to i64
  %863 = getelementptr inbounds float addrspace(1)* %1, i64 %862
  %864 = extractelement <16 x i32> %818, i32 15
  %865 = sext i32 %864 to i64
  %866 = getelementptr inbounds float addrspace(1)* %1, i64 %865
  %867 = load float addrspace(1)* %821, align 4
  %868 = load float addrspace(1)* %824, align 4
  %869 = load float addrspace(1)* %827, align 4
  %870 = load float addrspace(1)* %830, align 4
  %871 = load float addrspace(1)* %833, align 4
  %872 = load float addrspace(1)* %836, align 4
  %873 = load float addrspace(1)* %839, align 4
  %874 = load float addrspace(1)* %842, align 4
  %875 = load float addrspace(1)* %845, align 4
  %876 = load float addrspace(1)* %848, align 4
  %877 = load float addrspace(1)* %851, align 4
  %878 = load float addrspace(1)* %854, align 4
  %879 = load float addrspace(1)* %857, align 4
  %880 = load float addrspace(1)* %860, align 4
  %881 = load float addrspace(1)* %863, align 4
  %882 = load float addrspace(1)* %866, align 4
  %temp.vect448.i = insertelement <16 x float> undef, float %867, i32 0
  %temp.vect449.i = insertelement <16 x float> %temp.vect448.i, float %868, i32 1
  %temp.vect450.i = insertelement <16 x float> %temp.vect449.i, float %869, i32 2
  %temp.vect451.i = insertelement <16 x float> %temp.vect450.i, float %870, i32 3
  %temp.vect452.i = insertelement <16 x float> %temp.vect451.i, float %871, i32 4
  %temp.vect453.i = insertelement <16 x float> %temp.vect452.i, float %872, i32 5
  %temp.vect454.i = insertelement <16 x float> %temp.vect453.i, float %873, i32 6
  %temp.vect455.i = insertelement <16 x float> %temp.vect454.i, float %874, i32 7
  %temp.vect456.i = insertelement <16 x float> %temp.vect455.i, float %875, i32 8
  %temp.vect457.i = insertelement <16 x float> %temp.vect456.i, float %876, i32 9
  %temp.vect458.i = insertelement <16 x float> %temp.vect457.i, float %877, i32 10
  %temp.vect459.i = insertelement <16 x float> %temp.vect458.i, float %878, i32 11
  %temp.vect460.i = insertelement <16 x float> %temp.vect459.i, float %879, i32 12
  %temp.vect461.i = insertelement <16 x float> %temp.vect460.i, float %880, i32 13
  %temp.vect462.i = insertelement <16 x float> %temp.vect461.i, float %881, i32 14
  %temp.vect463.i = insertelement <16 x float> %temp.vect462.i, float %882, i32 15
  %883 = add nsw <16 x i32> %vectorPHI.i, <i32 266240, i32 266240, i32 266240, i32 266240, i32 266240, i32 266240, i32 266240, i32 266240, i32 266240, i32 266240, i32 266240, i32 266240, i32 266240, i32 266240, i32 266240, i32 266240>
  %884 = and <16 x i32> %883, %vector.i
  %885 = extractelement <16 x i32> %884, i32 0
  %886 = sext i32 %885 to i64
  %887 = getelementptr inbounds float addrspace(1)* %1, i64 %886
  %888 = extractelement <16 x i32> %884, i32 1
  %889 = sext i32 %888 to i64
  %890 = getelementptr inbounds float addrspace(1)* %1, i64 %889
  %891 = extractelement <16 x i32> %884, i32 2
  %892 = sext i32 %891 to i64
  %893 = getelementptr inbounds float addrspace(1)* %1, i64 %892
  %894 = extractelement <16 x i32> %884, i32 3
  %895 = sext i32 %894 to i64
  %896 = getelementptr inbounds float addrspace(1)* %1, i64 %895
  %897 = extractelement <16 x i32> %884, i32 4
  %898 = sext i32 %897 to i64
  %899 = getelementptr inbounds float addrspace(1)* %1, i64 %898
  %900 = extractelement <16 x i32> %884, i32 5
  %901 = sext i32 %900 to i64
  %902 = getelementptr inbounds float addrspace(1)* %1, i64 %901
  %903 = extractelement <16 x i32> %884, i32 6
  %904 = sext i32 %903 to i64
  %905 = getelementptr inbounds float addrspace(1)* %1, i64 %904
  %906 = extractelement <16 x i32> %884, i32 7
  %907 = sext i32 %906 to i64
  %908 = getelementptr inbounds float addrspace(1)* %1, i64 %907
  %909 = extractelement <16 x i32> %884, i32 8
  %910 = sext i32 %909 to i64
  %911 = getelementptr inbounds float addrspace(1)* %1, i64 %910
  %912 = extractelement <16 x i32> %884, i32 9
  %913 = sext i32 %912 to i64
  %914 = getelementptr inbounds float addrspace(1)* %1, i64 %913
  %915 = extractelement <16 x i32> %884, i32 10
  %916 = sext i32 %915 to i64
  %917 = getelementptr inbounds float addrspace(1)* %1, i64 %916
  %918 = extractelement <16 x i32> %884, i32 11
  %919 = sext i32 %918 to i64
  %920 = getelementptr inbounds float addrspace(1)* %1, i64 %919
  %921 = extractelement <16 x i32> %884, i32 12
  %922 = sext i32 %921 to i64
  %923 = getelementptr inbounds float addrspace(1)* %1, i64 %922
  %924 = extractelement <16 x i32> %884, i32 13
  %925 = sext i32 %924 to i64
  %926 = getelementptr inbounds float addrspace(1)* %1, i64 %925
  %927 = extractelement <16 x i32> %884, i32 14
  %928 = sext i32 %927 to i64
  %929 = getelementptr inbounds float addrspace(1)* %1, i64 %928
  %930 = extractelement <16 x i32> %884, i32 15
  %931 = sext i32 %930 to i64
  %932 = getelementptr inbounds float addrspace(1)* %1, i64 %931
  %933 = load float addrspace(1)* %887, align 4
  %934 = load float addrspace(1)* %890, align 4
  %935 = load float addrspace(1)* %893, align 4
  %936 = load float addrspace(1)* %896, align 4
  %937 = load float addrspace(1)* %899, align 4
  %938 = load float addrspace(1)* %902, align 4
  %939 = load float addrspace(1)* %905, align 4
  %940 = load float addrspace(1)* %908, align 4
  %941 = load float addrspace(1)* %911, align 4
  %942 = load float addrspace(1)* %914, align 4
  %943 = load float addrspace(1)* %917, align 4
  %944 = load float addrspace(1)* %920, align 4
  %945 = load float addrspace(1)* %923, align 4
  %946 = load float addrspace(1)* %926, align 4
  %947 = load float addrspace(1)* %929, align 4
  %948 = load float addrspace(1)* %932, align 4
  %temp.vect464.i = insertelement <16 x float> undef, float %933, i32 0
  %temp.vect465.i = insertelement <16 x float> %temp.vect464.i, float %934, i32 1
  %temp.vect466.i = insertelement <16 x float> %temp.vect465.i, float %935, i32 2
  %temp.vect467.i = insertelement <16 x float> %temp.vect466.i, float %936, i32 3
  %temp.vect468.i = insertelement <16 x float> %temp.vect467.i, float %937, i32 4
  %temp.vect469.i = insertelement <16 x float> %temp.vect468.i, float %938, i32 5
  %temp.vect470.i = insertelement <16 x float> %temp.vect469.i, float %939, i32 6
  %temp.vect471.i = insertelement <16 x float> %temp.vect470.i, float %940, i32 7
  %temp.vect472.i = insertelement <16 x float> %temp.vect471.i, float %941, i32 8
  %temp.vect473.i = insertelement <16 x float> %temp.vect472.i, float %942, i32 9
  %temp.vect474.i = insertelement <16 x float> %temp.vect473.i, float %943, i32 10
  %temp.vect475.i = insertelement <16 x float> %temp.vect474.i, float %944, i32 11
  %temp.vect476.i = insertelement <16 x float> %temp.vect475.i, float %945, i32 12
  %temp.vect477.i = insertelement <16 x float> %temp.vect476.i, float %946, i32 13
  %temp.vect478.i = insertelement <16 x float> %temp.vect477.i, float %947, i32 14
  %temp.vect479.i = insertelement <16 x float> %temp.vect478.i, float %948, i32 15
  %949 = add nsw <16 x i32> %vectorPHI.i, <i32 286720, i32 286720, i32 286720, i32 286720, i32 286720, i32 286720, i32 286720, i32 286720, i32 286720, i32 286720, i32 286720, i32 286720, i32 286720, i32 286720, i32 286720, i32 286720>
  %950 = and <16 x i32> %949, %vector.i
  %951 = extractelement <16 x i32> %950, i32 0
  %952 = sext i32 %951 to i64
  %953 = getelementptr inbounds float addrspace(1)* %1, i64 %952
  %954 = extractelement <16 x i32> %950, i32 1
  %955 = sext i32 %954 to i64
  %956 = getelementptr inbounds float addrspace(1)* %1, i64 %955
  %957 = extractelement <16 x i32> %950, i32 2
  %958 = sext i32 %957 to i64
  %959 = getelementptr inbounds float addrspace(1)* %1, i64 %958
  %960 = extractelement <16 x i32> %950, i32 3
  %961 = sext i32 %960 to i64
  %962 = getelementptr inbounds float addrspace(1)* %1, i64 %961
  %963 = extractelement <16 x i32> %950, i32 4
  %964 = sext i32 %963 to i64
  %965 = getelementptr inbounds float addrspace(1)* %1, i64 %964
  %966 = extractelement <16 x i32> %950, i32 5
  %967 = sext i32 %966 to i64
  %968 = getelementptr inbounds float addrspace(1)* %1, i64 %967
  %969 = extractelement <16 x i32> %950, i32 6
  %970 = sext i32 %969 to i64
  %971 = getelementptr inbounds float addrspace(1)* %1, i64 %970
  %972 = extractelement <16 x i32> %950, i32 7
  %973 = sext i32 %972 to i64
  %974 = getelementptr inbounds float addrspace(1)* %1, i64 %973
  %975 = extractelement <16 x i32> %950, i32 8
  %976 = sext i32 %975 to i64
  %977 = getelementptr inbounds float addrspace(1)* %1, i64 %976
  %978 = extractelement <16 x i32> %950, i32 9
  %979 = sext i32 %978 to i64
  %980 = getelementptr inbounds float addrspace(1)* %1, i64 %979
  %981 = extractelement <16 x i32> %950, i32 10
  %982 = sext i32 %981 to i64
  %983 = getelementptr inbounds float addrspace(1)* %1, i64 %982
  %984 = extractelement <16 x i32> %950, i32 11
  %985 = sext i32 %984 to i64
  %986 = getelementptr inbounds float addrspace(1)* %1, i64 %985
  %987 = extractelement <16 x i32> %950, i32 12
  %988 = sext i32 %987 to i64
  %989 = getelementptr inbounds float addrspace(1)* %1, i64 %988
  %990 = extractelement <16 x i32> %950, i32 13
  %991 = sext i32 %990 to i64
  %992 = getelementptr inbounds float addrspace(1)* %1, i64 %991
  %993 = extractelement <16 x i32> %950, i32 14
  %994 = sext i32 %993 to i64
  %995 = getelementptr inbounds float addrspace(1)* %1, i64 %994
  %996 = extractelement <16 x i32> %950, i32 15
  %997 = sext i32 %996 to i64
  %998 = getelementptr inbounds float addrspace(1)* %1, i64 %997
  %999 = load float addrspace(1)* %953, align 4
  %1000 = load float addrspace(1)* %956, align 4
  %1001 = load float addrspace(1)* %959, align 4
  %1002 = load float addrspace(1)* %962, align 4
  %1003 = load float addrspace(1)* %965, align 4
  %1004 = load float addrspace(1)* %968, align 4
  %1005 = load float addrspace(1)* %971, align 4
  %1006 = load float addrspace(1)* %974, align 4
  %1007 = load float addrspace(1)* %977, align 4
  %1008 = load float addrspace(1)* %980, align 4
  %1009 = load float addrspace(1)* %983, align 4
  %1010 = load float addrspace(1)* %986, align 4
  %1011 = load float addrspace(1)* %989, align 4
  %1012 = load float addrspace(1)* %992, align 4
  %1013 = load float addrspace(1)* %995, align 4
  %1014 = load float addrspace(1)* %998, align 4
  %temp.vect480.i = insertelement <16 x float> undef, float %999, i32 0
  %temp.vect481.i = insertelement <16 x float> %temp.vect480.i, float %1000, i32 1
  %temp.vect482.i = insertelement <16 x float> %temp.vect481.i, float %1001, i32 2
  %temp.vect483.i = insertelement <16 x float> %temp.vect482.i, float %1002, i32 3
  %temp.vect484.i = insertelement <16 x float> %temp.vect483.i, float %1003, i32 4
  %temp.vect485.i = insertelement <16 x float> %temp.vect484.i, float %1004, i32 5
  %temp.vect486.i = insertelement <16 x float> %temp.vect485.i, float %1005, i32 6
  %temp.vect487.i = insertelement <16 x float> %temp.vect486.i, float %1006, i32 7
  %temp.vect488.i = insertelement <16 x float> %temp.vect487.i, float %1007, i32 8
  %temp.vect489.i = insertelement <16 x float> %temp.vect488.i, float %1008, i32 9
  %temp.vect490.i = insertelement <16 x float> %temp.vect489.i, float %1009, i32 10
  %temp.vect491.i = insertelement <16 x float> %temp.vect490.i, float %1010, i32 11
  %temp.vect492.i = insertelement <16 x float> %temp.vect491.i, float %1011, i32 12
  %temp.vect493.i = insertelement <16 x float> %temp.vect492.i, float %1012, i32 13
  %temp.vect494.i = insertelement <16 x float> %temp.vect493.i, float %1013, i32 14
  %temp.vect495.i = insertelement <16 x float> %temp.vect494.i, float %1014, i32 15
  %1015 = add nsw <16 x i32> %vectorPHI.i, <i32 307200, i32 307200, i32 307200, i32 307200, i32 307200, i32 307200, i32 307200, i32 307200, i32 307200, i32 307200, i32 307200, i32 307200, i32 307200, i32 307200, i32 307200, i32 307200>
  %1016 = and <16 x i32> %1015, %vector.i
  %1017 = extractelement <16 x i32> %1016, i32 0
  %1018 = sext i32 %1017 to i64
  %1019 = getelementptr inbounds float addrspace(1)* %1, i64 %1018
  %1020 = extractelement <16 x i32> %1016, i32 1
  %1021 = sext i32 %1020 to i64
  %1022 = getelementptr inbounds float addrspace(1)* %1, i64 %1021
  %1023 = extractelement <16 x i32> %1016, i32 2
  %1024 = sext i32 %1023 to i64
  %1025 = getelementptr inbounds float addrspace(1)* %1, i64 %1024
  %1026 = extractelement <16 x i32> %1016, i32 3
  %1027 = sext i32 %1026 to i64
  %1028 = getelementptr inbounds float addrspace(1)* %1, i64 %1027
  %1029 = extractelement <16 x i32> %1016, i32 4
  %1030 = sext i32 %1029 to i64
  %1031 = getelementptr inbounds float addrspace(1)* %1, i64 %1030
  %1032 = extractelement <16 x i32> %1016, i32 5
  %1033 = sext i32 %1032 to i64
  %1034 = getelementptr inbounds float addrspace(1)* %1, i64 %1033
  %1035 = extractelement <16 x i32> %1016, i32 6
  %1036 = sext i32 %1035 to i64
  %1037 = getelementptr inbounds float addrspace(1)* %1, i64 %1036
  %1038 = extractelement <16 x i32> %1016, i32 7
  %1039 = sext i32 %1038 to i64
  %1040 = getelementptr inbounds float addrspace(1)* %1, i64 %1039
  %1041 = extractelement <16 x i32> %1016, i32 8
  %1042 = sext i32 %1041 to i64
  %1043 = getelementptr inbounds float addrspace(1)* %1, i64 %1042
  %1044 = extractelement <16 x i32> %1016, i32 9
  %1045 = sext i32 %1044 to i64
  %1046 = getelementptr inbounds float addrspace(1)* %1, i64 %1045
  %1047 = extractelement <16 x i32> %1016, i32 10
  %1048 = sext i32 %1047 to i64
  %1049 = getelementptr inbounds float addrspace(1)* %1, i64 %1048
  %1050 = extractelement <16 x i32> %1016, i32 11
  %1051 = sext i32 %1050 to i64
  %1052 = getelementptr inbounds float addrspace(1)* %1, i64 %1051
  %1053 = extractelement <16 x i32> %1016, i32 12
  %1054 = sext i32 %1053 to i64
  %1055 = getelementptr inbounds float addrspace(1)* %1, i64 %1054
  %1056 = extractelement <16 x i32> %1016, i32 13
  %1057 = sext i32 %1056 to i64
  %1058 = getelementptr inbounds float addrspace(1)* %1, i64 %1057
  %1059 = extractelement <16 x i32> %1016, i32 14
  %1060 = sext i32 %1059 to i64
  %1061 = getelementptr inbounds float addrspace(1)* %1, i64 %1060
  %1062 = extractelement <16 x i32> %1016, i32 15
  %1063 = sext i32 %1062 to i64
  %1064 = getelementptr inbounds float addrspace(1)* %1, i64 %1063
  %1065 = load float addrspace(1)* %1019, align 4
  %1066 = load float addrspace(1)* %1022, align 4
  %1067 = load float addrspace(1)* %1025, align 4
  %1068 = load float addrspace(1)* %1028, align 4
  %1069 = load float addrspace(1)* %1031, align 4
  %1070 = load float addrspace(1)* %1034, align 4
  %1071 = load float addrspace(1)* %1037, align 4
  %1072 = load float addrspace(1)* %1040, align 4
  %1073 = load float addrspace(1)* %1043, align 4
  %1074 = load float addrspace(1)* %1046, align 4
  %1075 = load float addrspace(1)* %1049, align 4
  %1076 = load float addrspace(1)* %1052, align 4
  %1077 = load float addrspace(1)* %1055, align 4
  %1078 = load float addrspace(1)* %1058, align 4
  %1079 = load float addrspace(1)* %1061, align 4
  %1080 = load float addrspace(1)* %1064, align 4
  %temp.vect496.i = insertelement <16 x float> undef, float %1065, i32 0
  %temp.vect497.i = insertelement <16 x float> %temp.vect496.i, float %1066, i32 1
  %temp.vect498.i = insertelement <16 x float> %temp.vect497.i, float %1067, i32 2
  %temp.vect499.i = insertelement <16 x float> %temp.vect498.i, float %1068, i32 3
  %temp.vect500.i = insertelement <16 x float> %temp.vect499.i, float %1069, i32 4
  %temp.vect501.i = insertelement <16 x float> %temp.vect500.i, float %1070, i32 5
  %temp.vect502.i = insertelement <16 x float> %temp.vect501.i, float %1071, i32 6
  %temp.vect503.i = insertelement <16 x float> %temp.vect502.i, float %1072, i32 7
  %temp.vect504.i = insertelement <16 x float> %temp.vect503.i, float %1073, i32 8
  %temp.vect505.i = insertelement <16 x float> %temp.vect504.i, float %1074, i32 9
  %temp.vect506.i = insertelement <16 x float> %temp.vect505.i, float %1075, i32 10
  %temp.vect507.i = insertelement <16 x float> %temp.vect506.i, float %1076, i32 11
  %temp.vect508.i = insertelement <16 x float> %temp.vect507.i, float %1077, i32 12
  %temp.vect509.i = insertelement <16 x float> %temp.vect508.i, float %1078, i32 13
  %temp.vect510.i = insertelement <16 x float> %temp.vect509.i, float %1079, i32 14
  %temp.vect511.i = insertelement <16 x float> %temp.vect510.i, float %1080, i32 15
  %1081 = fadd <16 x float> %temp.vect271.i, %temp.vect287.i
  %1082 = fadd <16 x float> %1081, %temp.vect303.i
  %1083 = fadd <16 x float> %1082, %temp.vect319.i
  %1084 = fadd <16 x float> %1083, %temp.vect335.i
  %1085 = fadd <16 x float> %1084, %temp.vect351.i
  %1086 = fadd <16 x float> %1085, %temp.vect367.i
  %1087 = fadd <16 x float> %1086, %temp.vect383.i
  %1088 = fadd <16 x float> %1087, %temp.vect399.i
  %1089 = fadd <16 x float> %1088, %temp.vect415.i
  %1090 = fadd <16 x float> %1089, %temp.vect431.i
  %1091 = fadd <16 x float> %1090, %temp.vect447.i
  %1092 = fadd <16 x float> %1091, %temp.vect463.i
  %1093 = fadd <16 x float> %1092, %temp.vect479.i
  %1094 = fadd <16 x float> %1093, %temp.vect495.i
  %1095 = fadd <16 x float> %1094, %temp.vect511.i
  %1096 = fadd <16 x float> %vectorPHI1.i, %1095
  %1097 = add nsw i32 %j.01.i, 1
  %1098 = add nsw <16 x i32> %vectorPHI.i, <i32 327680, i32 327680, i32 327680, i32 327680, i32 327680, i32 327680, i32 327680, i32 327680, i32 327680, i32 327680, i32 327680, i32 327680, i32 327680, i32 327680, i32 327680, i32 327680>
  %1099 = and <16 x i32> %1098, %vector.i
  %exitcond.i = icmp eq i32 %1097, 1024
  br i1 %exitcond.i, label %._crit_edge.i, label %25

._crit_edge.i:                                    ; preds = %25
  %1100 = extractelement <16 x i32> %24, i32 0
  %extract512.i = sext i32 %1100 to i64
  %1101 = getelementptr inbounds float addrspace(1)* %4, i64 %extract512.i
  %ptrTypeCast.i = bitcast float addrspace(1)* %1101 to <16 x float> addrspace(1)*
  store <16 x float> %1096, <16 x float> addrspace(1)* %ptrTypeCast.i, align 4
  %check.WI.iter.i = icmp ult i64 %CurrWI..0.i, %16
  br i1 %check.WI.iter.i, label %thenBB.i, label %____Vectorized_.readConstantMemoryCoalesced_separated_args.exit

thenBB.i:                                         ; preds = %._crit_edge.i
  %"CurrWI++.i" = add nuw i64 %CurrWI..0.i, 1
  br label %SyncBB528.i

____Vectorized_.readConstantMemoryCoalesced_separated_args.exit: ; preds = %._crit_edge.i
  ret void
}

!opencl.kernels = !{!0}

!0 = metadata !{void (float addrspace(1)*, float addrspace(1)*, i32, i8 addrspace(3)*, %struct.WorkDim*, i64*, %struct.PaddedDimId*, %struct.PaddedDimId*, i64*, i64, i8*, i64*)* @__readConstantMemoryCoalesced_separated_args, metadata !1, metadata !1, metadata !"", metadata !"float const __attribute__((address_space(1))) *, float __attribute__((address_space(1))) *, int", metadata !"opencl_readConstantMemoryCoalesced_locals_anchor", void (i8*)* @readConstantMemoryCoalesced}
!1 = metadata !{i32 0, i32 0, i32 0}
