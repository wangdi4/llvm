; XFAIL: win32
;
; RUN: llc < %s -mtriple=x86_64-pc-linux \
; RUN:       -march=y86-64 -mcpu=knc
;
;
; ModuleID = 'Program'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64"
target triple = "x86_64-unknown-linux-gnu"

%struct.PaddedDimId = type <{ [4 x i64] }>
%struct.WorkDim = type { i32, [3 x i64], [3 x i64], [3 x i64], [3 x i64] }

declare void @__ratxb_kernel_original(double addrspace(1)* nocapture, double addrspace(1)*, double addrspace(1)*, double addrspace(1)*, double addrspace(1)* nocapture, double) nounwind

declare i64 @get_global_id(i32)

declare double @_Z3logd(double)

declare double @_Z5log10d(double)

declare double @_Z4fmaxdd(double, double)

declare double @_Z3expd(double)

declare double @_Z5exp10d(double)

declare void @____Vectorized_.ratxb_kernel_original(double addrspace(1)* nocapture, double addrspace(1)*, double addrspace(1)*, double addrspace(1)*, double addrspace(1)* nocapture, double) nounwind

define i1 @allOne(i1 %pred) {
entry:
  ret i1 %pred
}

define i1 @allZero(i1 %t) {
entry:
  ret i1 %t
}

declare void @dummybarrier.()

declare void @barrier(i64)

declare i8* @get_special_buffer.()

declare i64 @get_iter_count.()

declare i64 @get_new_global_id.(i32, i64)

define void @__ratxb_kernel_separated_args(double addrspace(1)* nocapture %T, double addrspace(1)* %C, double addrspace(1)* %RF, double addrspace(1)* %RB, double addrspace(1)* nocapture %RKLOW, double %TCONV, i8 addrspace(3)* %pLocalMem, %struct.WorkDim* %pWorkDim, i64* %pWGId, %struct.PaddedDimId* %pBaseGlbId, %struct.PaddedDimId* %pLocalIds, i64* %contextpointer, i64 %iterCount, i8* %pSpecialBuf, i64* %pCurrWI) nounwind alwaysinline {
bb.nph:
  br label %SyncBB5

SyncBB5:                                          ; preds = %bb.nph, %thenBB
  %CurrWI..0 = phi i64 [ %"CurrWI++", %thenBB ], [ 0, %bb.nph ]
  %0 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1 = load i64* %0, align 8
  %2 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %3 = load i64* %2, align 8
  %4 = add i64 %1, %3
  %5 = getelementptr inbounds double addrspace(1)* %T, i64 %4
  %6 = load double addrspace(1)* %5, align 8
  %7 = fmul double %6, %TCONV
  %8 = tail call double @_Z3logd(double %7) nounwind
  br label %9

; <label>:9                                       ; preds = %9, %SyncBB5
  %indvar = phi i64 [ 0, %SyncBB5 ], [ %indvar.next, %9 ]
  %CTOT.01 = phi double [ 0.000000e+00, %SyncBB5 ], [ %17, %9 ]
  %tmp3 = mul i64 %indvar, 110592
  %10 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %11 = load i64* %10, align 8
  %12 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %13 = load i64* %12, align 8
  %14 = add i64 %11, %13
  %tmp4 = add i64 %14, %tmp3
  %15 = getelementptr inbounds double addrspace(1)* %C, i64 %tmp4
  %16 = load double addrspace(1)* %15, align 8
  %17 = fadd double %CTOT.01, %16
  %indvar.next = add i64 %indvar, 1
  %exitcond = icmp eq i64 %indvar.next, 22
  br i1 %exitcond, label %._crit_edge, label %9

._crit_edge:                                      ; preds = %9
  %18 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %19 = load i64* %18, align 8
  %20 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %21 = load i64* %20, align 8
  %22 = add i64 %19, %21
  %23 = getelementptr inbounds double addrspace(1)* %C, i64 %22
  %24 = load double addrspace(1)* %23, align 8
  %25 = fsub double %17, %24
  %26 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %27 = load i64* %26, align 8
  %28 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %29 = load i64* %28, align 8
  %30 = add i64 %27, %29
  %31 = add i64 %30, 552960
  %32 = getelementptr inbounds double addrspace(1)* %C, i64 %31
  %33 = load double addrspace(1)* %32, align 8
  %34 = fsub double %25, %33
  %35 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %36 = load i64* %35, align 8
  %37 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %38 = load i64* %37, align 8
  %39 = add i64 %36, %38
  %40 = add i64 %39, 995328
  %41 = getelementptr inbounds double addrspace(1)* %C, i64 %40
  %42 = load double addrspace(1)* %41, align 8
  %43 = fadd double %34, %42
  %44 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %45 = load i64* %44, align 8
  %46 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %47 = load i64* %46, align 8
  %48 = add i64 %45, %47
  %49 = add i64 %48, 1216512
  %50 = getelementptr inbounds double addrspace(1)* %C, i64 %49
  %51 = load double addrspace(1)* %50, align 8
  %52 = fsub double %43, %51
  %53 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %54 = load i64* %53, align 8
  %55 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %56 = load i64* %55, align 8
  %57 = add i64 %54, %56
  %58 = add i64 %57, 1658880
  %59 = getelementptr inbounds double addrspace(1)* %C, i64 %58
  %60 = load double addrspace(1)* %59, align 8
  %61 = fmul double %60, 2.000000e+00
  %62 = fadd double %52, %61
  %63 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %64 = load i64* %63, align 8
  %65 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %66 = load i64* %65, align 8
  %67 = add i64 %64, %66
  %68 = add i64 %67, 1437696
  %69 = getelementptr inbounds double addrspace(1)* %C, i64 %68
  %70 = load double addrspace(1)* %69, align 8
  %71 = fmul double %70, 2.000000e+00
  %72 = fadd double %62, %71
  %73 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %74 = load i64* %73, align 8
  %75 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %76 = load i64* %75, align 8
  %77 = add i64 %74, %76
  %78 = add i64 %77, 1548288
  %79 = getelementptr inbounds double addrspace(1)* %C, i64 %78
  %80 = load double addrspace(1)* %79, align 8
  %81 = fmul double %80, 2.000000e+00
  %82 = fadd double %72, %81
  %83 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %84 = load i64* %83, align 8
  %85 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %86 = load i64* %85, align 8
  %87 = add i64 %84, %86
  %88 = getelementptr inbounds double addrspace(1)* %C, i64 %87
  %89 = load double addrspace(1)* %88, align 8
  %90 = fmul double %89, 2.700000e-01
  %91 = fsub double %17, %90
  %92 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %93 = load i64* %92, align 8
  %94 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %95 = load i64* %94, align 8
  %96 = add i64 %93, %95
  %97 = add i64 %96, 552960
  %98 = getelementptr inbounds double addrspace(1)* %C, i64 %97
  %99 = load double addrspace(1)* %98, align 8
  %100 = fmul double %99, 2.650000e+00
  %101 = fadd double %91, %100
  %102 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %103 = load i64* %102, align 8
  %104 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %105 = load i64* %104, align 8
  %106 = add i64 %103, %105
  %107 = add i64 %106, 995328
  %108 = getelementptr inbounds double addrspace(1)* %C, i64 %107
  %109 = load double addrspace(1)* %108, align 8
  %110 = fadd double %101, %109
  %111 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %112 = load i64* %111, align 8
  %113 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %114 = load i64* %113, align 8
  %115 = add i64 %112, %114
  %116 = add i64 %115, 1658880
  %117 = getelementptr inbounds double addrspace(1)* %C, i64 %116
  %118 = load double addrspace(1)* %117, align 8
  %119 = fmul double %118, 2.000000e+00
  %120 = fadd double %110, %119
  %121 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %122 = load i64* %121, align 8
  %123 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %124 = load i64* %123, align 8
  %125 = add i64 %122, %124
  %126 = add i64 %125, 1437696
  %127 = getelementptr inbounds double addrspace(1)* %C, i64 %126
  %128 = load double addrspace(1)* %127, align 8
  %129 = fmul double %128, 2.000000e+00
  %130 = fadd double %120, %129
  %131 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %132 = load i64* %131, align 8
  %133 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %134 = load i64* %133, align 8
  %135 = add i64 %132, %134
  %136 = add i64 %135, 1548288
  %137 = getelementptr inbounds double addrspace(1)* %C, i64 %136
  %138 = load double addrspace(1)* %137, align 8
  %139 = fmul double %138, 2.000000e+00
  %140 = fadd double %130, %139
  %141 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %142 = load i64* %141, align 8
  %143 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %144 = load i64* %143, align 8
  %145 = add i64 %142, %144
  %146 = getelementptr inbounds double addrspace(1)* %C, i64 %145
  %147 = load double addrspace(1)* %146, align 8
  %148 = fadd double %17, %147
  %149 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %150 = load i64* %149, align 8
  %151 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %152 = load i64* %151, align 8
  %153 = add i64 %150, %152
  %154 = add i64 %153, 552960
  %155 = getelementptr inbounds double addrspace(1)* %C, i64 %154
  %156 = load double addrspace(1)* %155, align 8
  %157 = fmul double %156, 5.000000e+00
  %158 = fadd double %148, %157
  %159 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %160 = load i64* %159, align 8
  %161 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %162 = load i64* %161, align 8
  %163 = add i64 %160, %162
  %164 = add i64 %163, 995328
  %165 = getelementptr inbounds double addrspace(1)* %C, i64 %164
  %166 = load double addrspace(1)* %165, align 8
  %167 = fadd double %158, %166
  %168 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %169 = load i64* %168, align 8
  %170 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %171 = load i64* %170, align 8
  %172 = add i64 %169, %171
  %173 = add i64 %172, 1105920
  %174 = getelementptr inbounds double addrspace(1)* %C, i64 %173
  %175 = load double addrspace(1)* %174, align 8
  %176 = fmul double %175, 5.000000e-01
  %177 = fadd double %167, %176
  %178 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %179 = load i64* %178, align 8
  %180 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %181 = load i64* %180, align 8
  %182 = add i64 %179, %181
  %183 = add i64 %182, 1216512
  %184 = getelementptr inbounds double addrspace(1)* %C, i64 %183
  %185 = load double addrspace(1)* %184, align 8
  %186 = fadd double %177, %185
  %187 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %188 = load i64* %187, align 8
  %189 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %190 = load i64* %189, align 8
  %191 = add i64 %188, %190
  %192 = add i64 %191, 1658880
  %193 = getelementptr inbounds double addrspace(1)* %C, i64 %192
  %194 = load double addrspace(1)* %193, align 8
  %195 = fmul double %194, 2.000000e+00
  %196 = fadd double %186, %195
  %197 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %198 = load i64* %197, align 8
  %199 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %200 = load i64* %199, align 8
  %201 = add i64 %198, %200
  %202 = add i64 %201, 1437696
  %203 = getelementptr inbounds double addrspace(1)* %C, i64 %202
  %204 = load double addrspace(1)* %203, align 8
  %205 = fmul double %204, 2.000000e+00
  %206 = fadd double %196, %205
  %207 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %208 = load i64* %207, align 8
  %209 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %210 = load i64* %209, align 8
  %211 = add i64 %208, %210
  %212 = add i64 %211, 1548288
  %213 = getelementptr inbounds double addrspace(1)* %C, i64 %212
  %214 = load double addrspace(1)* %213, align 8
  %215 = fmul double %214, 2.000000e+00
  %216 = fadd double %206, %215
  %217 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %218 = load i64* %217, align 8
  %219 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %220 = load i64* %219, align 8
  %221 = add i64 %218, %220
  %222 = getelementptr inbounds double addrspace(1)* %C, i64 %221
  %223 = load double addrspace(1)* %222, align 8
  %224 = fmul double %223, 1.400000e+00
  %225 = fadd double %17, %224
  %226 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %227 = load i64* %226, align 8
  %228 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %229 = load i64* %228, align 8
  %230 = add i64 %227, %229
  %231 = add i64 %230, 552960
  %232 = getelementptr inbounds double addrspace(1)* %C, i64 %231
  %233 = load double addrspace(1)* %232, align 8
  %234 = fmul double %233, 1.440000e+01
  %235 = fadd double %225, %234
  %236 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %237 = load i64* %236, align 8
  %238 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %239 = load i64* %238, align 8
  %240 = add i64 %237, %239
  %241 = add i64 %240, 995328
  %242 = getelementptr inbounds double addrspace(1)* %C, i64 %241
  %243 = load double addrspace(1)* %242, align 8
  %244 = fadd double %235, %243
  %245 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %246 = load i64* %245, align 8
  %247 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %248 = load i64* %247, align 8
  %249 = add i64 %246, %248
  %250 = add i64 %249, 1105920
  %251 = getelementptr inbounds double addrspace(1)* %C, i64 %250
  %252 = load double addrspace(1)* %251, align 8
  %253 = fmul double %252, 7.500000e-01
  %254 = fadd double %244, %253
  %255 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %256 = load i64* %255, align 8
  %257 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %258 = load i64* %257, align 8
  %259 = add i64 %256, %258
  %260 = add i64 %259, 1216512
  %261 = getelementptr inbounds double addrspace(1)* %C, i64 %260
  %262 = load double addrspace(1)* %261, align 8
  %263 = fmul double %262, 2.600000e+00
  %264 = fadd double %254, %263
  %265 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %266 = load i64* %265, align 8
  %267 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %268 = load i64* %267, align 8
  %269 = add i64 %266, %268
  %270 = add i64 %269, 1658880
  %271 = getelementptr inbounds double addrspace(1)* %C, i64 %270
  %272 = load double addrspace(1)* %271, align 8
  %273 = fmul double %272, 2.000000e+00
  %274 = fadd double %264, %273
  %275 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %276 = load i64* %275, align 8
  %277 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %278 = load i64* %277, align 8
  %279 = add i64 %276, %278
  %280 = add i64 %279, 1437696
  %281 = getelementptr inbounds double addrspace(1)* %C, i64 %280
  %282 = load double addrspace(1)* %281, align 8
  %283 = fmul double %282, 2.000000e+00
  %284 = fadd double %274, %283
  %285 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %286 = load i64* %285, align 8
  %287 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %288 = load i64* %287, align 8
  %289 = add i64 %286, %288
  %290 = add i64 %289, 1548288
  %291 = getelementptr inbounds double addrspace(1)* %C, i64 %290
  %292 = load double addrspace(1)* %291, align 8
  %293 = fmul double %292, 2.000000e+00
  %294 = fadd double %284, %293
  %295 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %296 = load i64* %295, align 8
  %297 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %298 = load i64* %297, align 8
  %299 = add i64 %296, %298
  %300 = add i64 %299, 331776
  %301 = getelementptr inbounds double addrspace(1)* %C, i64 %300
  %302 = load double addrspace(1)* %301, align 8
  %303 = fsub double %17, %302
  %304 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %305 = load i64* %304, align 8
  %306 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %307 = load i64* %306, align 8
  %308 = add i64 %305, %307
  %309 = add i64 %308, 552960
  %310 = getelementptr inbounds double addrspace(1)* %C, i64 %309
  %311 = load double addrspace(1)* %310, align 8
  %312 = fsub double %303, %311
  %313 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %314 = load i64* %313, align 8
  %315 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %316 = load i64* %315, align 8
  %317 = add i64 %314, %316
  %318 = add i64 %317, 1105920
  %319 = getelementptr inbounds double addrspace(1)* %C, i64 %318
  %320 = load double addrspace(1)* %319, align 8
  %321 = fmul double %320, 2.500000e-01
  %322 = fsub double %312, %321
  %323 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %324 = load i64* %323, align 8
  %325 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %326 = load i64* %325, align 8
  %327 = add i64 %324, %326
  %328 = add i64 %327, 1216512
  %329 = getelementptr inbounds double addrspace(1)* %C, i64 %328
  %330 = load double addrspace(1)* %329, align 8
  %331 = fmul double %330, 5.000000e-01
  %332 = fadd double %322, %331
  %333 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %334 = load i64* %333, align 8
  %335 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %336 = load i64* %335, align 8
  %337 = add i64 %334, %336
  %338 = add i64 %337, 1658880
  %339 = getelementptr inbounds double addrspace(1)* %C, i64 %338
  %340 = load double addrspace(1)* %339, align 8
  %341 = fmul double %340, 5.000000e-01
  %342 = fadd double %332, %341
  %343 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %344 = load i64* %343, align 8
  %345 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %346 = load i64* %345, align 8
  %347 = add i64 %344, %346
  %348 = add i64 %347, 2322432
  %349 = getelementptr inbounds double addrspace(1)* %C, i64 %348
  %350 = load double addrspace(1)* %349, align 8
  %351 = fsub double %342, %350
  %352 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %353 = load i64* %352, align 8
  %354 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %355 = load i64* %354, align 8
  %356 = add i64 %353, %355
  %357 = add i64 %356, 1437696
  %358 = getelementptr inbounds double addrspace(1)* %C, i64 %357
  %359 = load double addrspace(1)* %358, align 8
  %360 = fmul double %359, 2.000000e+00
  %361 = fadd double %351, %360
  %362 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %363 = load i64* %362, align 8
  %364 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %365 = load i64* %364, align 8
  %366 = add i64 %363, %365
  %367 = add i64 %366, 1548288
  %368 = getelementptr inbounds double addrspace(1)* %C, i64 %367
  %369 = load double addrspace(1)* %368, align 8
  %370 = fmul double %369, 2.000000e+00
  %371 = fadd double %361, %370
  %372 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %373 = load i64* %372, align 8
  %374 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %375 = load i64* %374, align 8
  %376 = add i64 %373, %375
  %377 = getelementptr inbounds double addrspace(1)* %C, i64 %376
  %378 = load double addrspace(1)* %377, align 8
  %379 = fadd double %17, %378
  %380 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %381 = load i64* %380, align 8
  %382 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %383 = load i64* %382, align 8
  %384 = add i64 %381, %383
  %385 = add i64 %384, 331776
  %386 = getelementptr inbounds double addrspace(1)* %C, i64 %385
  %387 = load double addrspace(1)* %386, align 8
  %388 = fmul double %387, 5.000000e+00
  %389 = fadd double %379, %388
  %390 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %391 = load i64* %390, align 8
  %392 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %393 = load i64* %392, align 8
  %394 = add i64 %391, %393
  %395 = add i64 %394, 552960
  %396 = getelementptr inbounds double addrspace(1)* %C, i64 %395
  %397 = load double addrspace(1)* %396, align 8
  %398 = fmul double %397, 5.000000e+00
  %399 = fadd double %389, %398
  %400 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %401 = load i64* %400, align 8
  %402 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %403 = load i64* %402, align 8
  %404 = add i64 %401, %403
  %405 = add i64 %404, 995328
  %406 = getelementptr inbounds double addrspace(1)* %C, i64 %405
  %407 = load double addrspace(1)* %406, align 8
  %408 = fadd double %399, %407
  %409 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %410 = load i64* %409, align 8
  %411 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %412 = load i64* %411, align 8
  %413 = add i64 %410, %412
  %414 = add i64 %413, 1105920
  %415 = getelementptr inbounds double addrspace(1)* %C, i64 %414
  %416 = load double addrspace(1)* %415, align 8
  %417 = fmul double %416, 5.000000e-01
  %418 = fadd double %408, %417
  %419 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %420 = load i64* %419, align 8
  %421 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %422 = load i64* %421, align 8
  %423 = add i64 %420, %422
  %424 = add i64 %423, 1216512
  %425 = getelementptr inbounds double addrspace(1)* %C, i64 %424
  %426 = load double addrspace(1)* %425, align 8
  %427 = fmul double %426, 2.500000e+00
  %428 = fadd double %418, %427
  %429 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %430 = load i64* %429, align 8
  %431 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %432 = load i64* %431, align 8
  %433 = add i64 %430, %432
  %434 = add i64 %433, 1658880
  %435 = getelementptr inbounds double addrspace(1)* %C, i64 %434
  %436 = load double addrspace(1)* %435, align 8
  %437 = fmul double %436, 2.000000e+00
  %438 = fadd double %428, %437
  %439 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %440 = load i64* %439, align 8
  %441 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %442 = load i64* %441, align 8
  %443 = add i64 %440, %442
  %444 = add i64 %443, 1437696
  %445 = getelementptr inbounds double addrspace(1)* %C, i64 %444
  %446 = load double addrspace(1)* %445, align 8
  %447 = fmul double %446, 2.000000e+00
  %448 = fadd double %438, %447
  %449 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %450 = load i64* %449, align 8
  %451 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %452 = load i64* %451, align 8
  %453 = add i64 %450, %452
  %454 = add i64 %453, 1548288
  %455 = getelementptr inbounds double addrspace(1)* %C, i64 %454
  %456 = load double addrspace(1)* %455, align 8
  %457 = fmul double %456, 2.000000e+00
  %458 = fadd double %448, %457
  %459 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %460 = load i64* %459, align 8
  %461 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %462 = load i64* %461, align 8
  %463 = add i64 %460, %462
  %464 = getelementptr inbounds double addrspace(1)* %C, i64 %463
  %465 = load double addrspace(1)* %464, align 8
  %466 = fadd double %17, %465
  %467 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %468 = load i64* %467, align 8
  %469 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %470 = load i64* %469, align 8
  %471 = add i64 %468, %470
  %472 = add i64 %471, 552960
  %473 = getelementptr inbounds double addrspace(1)* %C, i64 %472
  %474 = load double addrspace(1)* %473, align 8
  %475 = fmul double %474, 5.000000e+00
  %476 = fadd double %466, %475
  %477 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %478 = load i64* %477, align 8
  %479 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %480 = load i64* %479, align 8
  %481 = add i64 %478, %480
  %482 = add i64 %481, 995328
  %483 = getelementptr inbounds double addrspace(1)* %C, i64 %482
  %484 = load double addrspace(1)* %483, align 8
  %485 = fadd double %476, %484
  %486 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %487 = load i64* %486, align 8
  %488 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %489 = load i64* %488, align 8
  %490 = add i64 %487, %489
  %491 = add i64 %490, 1105920
  %492 = getelementptr inbounds double addrspace(1)* %C, i64 %491
  %493 = load double addrspace(1)* %492, align 8
  %494 = fmul double %493, 5.000000e-01
  %495 = fadd double %485, %494
  %496 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %497 = load i64* %496, align 8
  %498 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %499 = load i64* %498, align 8
  %500 = add i64 %497, %499
  %501 = add i64 %500, 1216512
  %502 = getelementptr inbounds double addrspace(1)* %C, i64 %501
  %503 = load double addrspace(1)* %502, align 8
  %504 = fadd double %495, %503
  %505 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %506 = load i64* %505, align 8
  %507 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %508 = load i64* %507, align 8
  %509 = add i64 %506, %508
  %510 = add i64 %509, 1658880
  %511 = getelementptr inbounds double addrspace(1)* %C, i64 %510
  %512 = load double addrspace(1)* %511, align 8
  %513 = fmul double %512, 2.000000e+00
  %514 = fadd double %504, %513
  %515 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %516 = load i64* %515, align 8
  %517 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %518 = load i64* %517, align 8
  %519 = add i64 %516, %518
  %520 = add i64 %519, 442368
  %521 = getelementptr inbounds double addrspace(1)* %RF, i64 %520
  %522 = load double addrspace(1)* %521, align 8
  %523 = fmul double %522, %82
  %524 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %525 = load i64* %524, align 8
  %526 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %527 = load i64* %526, align 8
  %528 = add i64 %525, %527
  %529 = add i64 %528, 110592
  %530 = getelementptr inbounds double addrspace(1)* %C, i64 %529
  %531 = load double addrspace(1)* %530, align 8
  %532 = fmul double %523, %531
  %533 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %534 = load i64* %533, align 8
  %535 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %536 = load i64* %535, align 8
  %537 = add i64 %534, %536
  %538 = add i64 %537, 110592
  %539 = getelementptr inbounds double addrspace(1)* %C, i64 %538
  %540 = load double addrspace(1)* %539, align 8
  %541 = fmul double %532, %540
  %542 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %543 = load i64* %542, align 8
  %544 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %545 = load i64* %544, align 8
  %546 = add i64 %543, %545
  %547 = add i64 %546, 442368
  %548 = getelementptr inbounds double addrspace(1)* %RF, i64 %547
  store double %541, double addrspace(1)* %548, align 8
  %549 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %550 = load i64* %549, align 8
  %551 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %552 = load i64* %551, align 8
  %553 = add i64 %550, %552
  %554 = add i64 %553, 442368
  %555 = getelementptr inbounds double addrspace(1)* %RB, i64 %554
  %556 = load double addrspace(1)* %555, align 8
  %557 = fmul double %556, %82
  %558 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %559 = load i64* %558, align 8
  %560 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %561 = load i64* %560, align 8
  %562 = add i64 %559, %561
  %563 = getelementptr inbounds double addrspace(1)* %C, i64 %562
  %564 = load double addrspace(1)* %563, align 8
  %565 = fmul double %557, %564
  %566 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %567 = load i64* %566, align 8
  %568 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %569 = load i64* %568, align 8
  %570 = add i64 %567, %569
  %571 = add i64 %570, 442368
  %572 = getelementptr inbounds double addrspace(1)* %RB, i64 %571
  store double %565, double addrspace(1)* %572, align 8
  %573 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %574 = load i64* %573, align 8
  %575 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %576 = load i64* %575, align 8
  %577 = add i64 %574, %576
  %578 = add i64 %577, 884736
  %579 = getelementptr inbounds double addrspace(1)* %RF, i64 %578
  %580 = load double addrspace(1)* %579, align 8
  %581 = fmul double %580, %140
  %582 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %583 = load i64* %582, align 8
  %584 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %585 = load i64* %584, align 8
  %586 = add i64 %583, %585
  %587 = add i64 %586, 110592
  %588 = getelementptr inbounds double addrspace(1)* %C, i64 %587
  %589 = load double addrspace(1)* %588, align 8
  %590 = fmul double %581, %589
  %591 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %592 = load i64* %591, align 8
  %593 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %594 = load i64* %593, align 8
  %595 = add i64 %592, %594
  %596 = add i64 %595, 442368
  %597 = getelementptr inbounds double addrspace(1)* %C, i64 %596
  %598 = load double addrspace(1)* %597, align 8
  %599 = fmul double %590, %598
  %600 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %601 = load i64* %600, align 8
  %602 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %603 = load i64* %602, align 8
  %604 = add i64 %601, %603
  %605 = add i64 %604, 884736
  %606 = getelementptr inbounds double addrspace(1)* %RF, i64 %605
  store double %599, double addrspace(1)* %606, align 8
  %607 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %608 = load i64* %607, align 8
  %609 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %610 = load i64* %609, align 8
  %611 = add i64 %608, %610
  %612 = add i64 %611, 884736
  %613 = getelementptr inbounds double addrspace(1)* %RB, i64 %612
  %614 = load double addrspace(1)* %613, align 8
  %615 = fmul double %614, %140
  %616 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %617 = load i64* %616, align 8
  %618 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %619 = load i64* %618, align 8
  %620 = add i64 %617, %619
  %621 = add i64 %620, 552960
  %622 = getelementptr inbounds double addrspace(1)* %C, i64 %621
  %623 = load double addrspace(1)* %622, align 8
  %624 = fmul double %615, %623
  %625 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %626 = load i64* %625, align 8
  %627 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %628 = load i64* %627, align 8
  %629 = add i64 %626, %628
  %630 = add i64 %629, 884736
  %631 = getelementptr inbounds double addrspace(1)* %RB, i64 %630
  store double %624, double addrspace(1)* %631, align 8
  %632 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %633 = load i64* %632, align 8
  %634 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %635 = load i64* %634, align 8
  %636 = add i64 %633, %635
  %637 = add i64 %636, 995328
  %638 = getelementptr inbounds double addrspace(1)* %RF, i64 %637
  %639 = load double addrspace(1)* %638, align 8
  %640 = fmul double %639, %216
  %641 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %642 = load i64* %641, align 8
  %643 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %644 = load i64* %643, align 8
  %645 = add i64 %642, %644
  %646 = add i64 %645, 221184
  %647 = getelementptr inbounds double addrspace(1)* %C, i64 %646
  %648 = load double addrspace(1)* %647, align 8
  %649 = fmul double %640, %648
  %650 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %651 = load i64* %650, align 8
  %652 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %653 = load i64* %652, align 8
  %654 = add i64 %651, %653
  %655 = add i64 %654, 110592
  %656 = getelementptr inbounds double addrspace(1)* %C, i64 %655
  %657 = load double addrspace(1)* %656, align 8
  %658 = fmul double %649, %657
  %659 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %660 = load i64* %659, align 8
  %661 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %662 = load i64* %661, align 8
  %663 = add i64 %660, %662
  %664 = add i64 %663, 995328
  %665 = getelementptr inbounds double addrspace(1)* %RF, i64 %664
  store double %658, double addrspace(1)* %665, align 8
  %666 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %667 = load i64* %666, align 8
  %668 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %669 = load i64* %668, align 8
  %670 = add i64 %667, %669
  %671 = add i64 %670, 995328
  %672 = getelementptr inbounds double addrspace(1)* %RB, i64 %671
  %673 = load double addrspace(1)* %672, align 8
  %674 = fmul double %673, %216
  %675 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %676 = load i64* %675, align 8
  %677 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %678 = load i64* %677, align 8
  %679 = add i64 %676, %678
  %680 = add i64 %679, 442368
  %681 = getelementptr inbounds double addrspace(1)* %C, i64 %680
  %682 = load double addrspace(1)* %681, align 8
  %683 = fmul double %674, %682
  %684 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %685 = load i64* %684, align 8
  %686 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %687 = load i64* %686, align 8
  %688 = add i64 %685, %687
  %689 = add i64 %688, 995328
  %690 = getelementptr inbounds double addrspace(1)* %RB, i64 %689
  store double %683, double addrspace(1)* %690, align 8
  %691 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %692 = load i64* %691, align 8
  %693 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %694 = load i64* %693, align 8
  %695 = add i64 %692, %694
  %696 = add i64 %695, 1105920
  %697 = getelementptr inbounds double addrspace(1)* %RF, i64 %696
  %698 = load double addrspace(1)* %697, align 8
  %699 = fmul double %698, %294
  %700 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %701 = load i64* %700, align 8
  %702 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %703 = load i64* %702, align 8
  %704 = add i64 %701, %703
  %705 = add i64 %704, 221184
  %706 = getelementptr inbounds double addrspace(1)* %C, i64 %705
  %707 = load double addrspace(1)* %706, align 8
  %708 = fmul double %699, %707
  %709 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %710 = load i64* %709, align 8
  %711 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %712 = load i64* %711, align 8
  %713 = add i64 %710, %712
  %714 = add i64 %713, 221184
  %715 = getelementptr inbounds double addrspace(1)* %C, i64 %714
  %716 = load double addrspace(1)* %715, align 8
  %717 = fmul double %708, %716
  %718 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %719 = load i64* %718, align 8
  %720 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %721 = load i64* %720, align 8
  %722 = add i64 %719, %721
  %723 = add i64 %722, 1105920
  %724 = getelementptr inbounds double addrspace(1)* %RF, i64 %723
  store double %717, double addrspace(1)* %724, align 8
  %725 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %726 = load i64* %725, align 8
  %727 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %728 = load i64* %727, align 8
  %729 = add i64 %726, %728
  %730 = add i64 %729, 1105920
  %731 = getelementptr inbounds double addrspace(1)* %RB, i64 %730
  %732 = load double addrspace(1)* %731, align 8
  %733 = fmul double %732, %294
  %734 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %735 = load i64* %734, align 8
  %736 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %737 = load i64* %736, align 8
  %738 = add i64 %735, %737
  %739 = add i64 %738, 331776
  %740 = getelementptr inbounds double addrspace(1)* %C, i64 %739
  %741 = load double addrspace(1)* %740, align 8
  %742 = fmul double %733, %741
  %743 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %744 = load i64* %743, align 8
  %745 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %746 = load i64* %745, align 8
  %747 = add i64 %744, %746
  %748 = add i64 %747, 1105920
  %749 = getelementptr inbounds double addrspace(1)* %RB, i64 %748
  store double %742, double addrspace(1)* %749, align 8
  %750 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %751 = load i64* %750, align 8
  %752 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %753 = load i64* %752, align 8
  %754 = add i64 %751, %753
  %755 = add i64 %754, 1216512
  %756 = getelementptr inbounds double addrspace(1)* %RF, i64 %755
  %757 = load double addrspace(1)* %756, align 8
  %758 = fmul double %757, %371
  %759 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %760 = load i64* %759, align 8
  %761 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %762 = load i64* %761, align 8
  %763 = add i64 %760, %762
  %764 = add i64 %763, 110592
  %765 = getelementptr inbounds double addrspace(1)* %C, i64 %764
  %766 = load double addrspace(1)* %765, align 8
  %767 = fmul double %758, %766
  %768 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %769 = load i64* %768, align 8
  %770 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %771 = load i64* %770, align 8
  %772 = add i64 %769, %771
  %773 = add i64 %772, 331776
  %774 = getelementptr inbounds double addrspace(1)* %C, i64 %773
  %775 = load double addrspace(1)* %774, align 8
  %776 = fmul double %767, %775
  %777 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %778 = load i64* %777, align 8
  %779 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %780 = load i64* %779, align 8
  %781 = add i64 %778, %780
  %782 = add i64 %781, 1216512
  %783 = getelementptr inbounds double addrspace(1)* %RF, i64 %782
  store double %776, double addrspace(1)* %783, align 8
  %784 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %785 = load i64* %784, align 8
  %786 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %787 = load i64* %786, align 8
  %788 = add i64 %785, %787
  %789 = add i64 %788, 1216512
  %790 = getelementptr inbounds double addrspace(1)* %RB, i64 %789
  %791 = load double addrspace(1)* %790, align 8
  %792 = fmul double %791, %371
  %793 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %794 = load i64* %793, align 8
  %795 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %796 = load i64* %795, align 8
  %797 = add i64 %794, %796
  %798 = add i64 %797, 663552
  %799 = getelementptr inbounds double addrspace(1)* %C, i64 %798
  %800 = load double addrspace(1)* %799, align 8
  %801 = fmul double %792, %800
  %802 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %803 = load i64* %802, align 8
  %804 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %805 = load i64* %804, align 8
  %806 = add i64 %803, %805
  %807 = add i64 %806, 1216512
  %808 = getelementptr inbounds double addrspace(1)* %RB, i64 %807
  store double %801, double addrspace(1)* %808, align 8
  %809 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %810 = load i64* %809, align 8
  %811 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %812 = load i64* %811, align 8
  %813 = add i64 %810, %812
  %814 = add i64 %813, 3096576
  %815 = getelementptr inbounds double addrspace(1)* %RF, i64 %814
  %816 = load double addrspace(1)* %815, align 8
  %817 = fmul double %816, %458
  %818 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %819 = load i64* %818, align 8
  %820 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %821 = load i64* %820, align 8
  %822 = add i64 %819, %821
  %823 = add i64 %822, 1105920
  %824 = getelementptr inbounds double addrspace(1)* %C, i64 %823
  %825 = load double addrspace(1)* %824, align 8
  %826 = fmul double %817, %825
  %827 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %828 = load i64* %827, align 8
  %829 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %830 = load i64* %829, align 8
  %831 = add i64 %828, %830
  %832 = add i64 %831, 221184
  %833 = getelementptr inbounds double addrspace(1)* %C, i64 %832
  %834 = load double addrspace(1)* %833, align 8
  %835 = fmul double %826, %834
  %836 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %837 = load i64* %836, align 8
  %838 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %839 = load i64* %838, align 8
  %840 = add i64 %837, %839
  %841 = add i64 %840, 3096576
  %842 = getelementptr inbounds double addrspace(1)* %RF, i64 %841
  store double %835, double addrspace(1)* %842, align 8
  %843 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %844 = load i64* %843, align 8
  %845 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %846 = load i64* %845, align 8
  %847 = add i64 %844, %846
  %848 = add i64 %847, 3096576
  %849 = getelementptr inbounds double addrspace(1)* %RB, i64 %848
  %850 = load double addrspace(1)* %849, align 8
  %851 = fmul double %850, %458
  %852 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %853 = load i64* %852, align 8
  %854 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %855 = load i64* %854, align 8
  %856 = add i64 %853, %855
  %857 = add i64 %856, 1216512
  %858 = getelementptr inbounds double addrspace(1)* %C, i64 %857
  %859 = load double addrspace(1)* %858, align 8
  %860 = fmul double %851, %859
  %861 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %862 = load i64* %861, align 8
  %863 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %864 = load i64* %863, align 8
  %865 = add i64 %862, %864
  %866 = add i64 %865, 3096576
  %867 = getelementptr inbounds double addrspace(1)* %RB, i64 %866
  store double %860, double addrspace(1)* %867, align 8
  %868 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %869 = load i64* %868, align 8
  %870 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %871 = load i64* %870, align 8
  %872 = add i64 %869, %871
  %873 = add i64 %872, 4976640
  %874 = getelementptr inbounds double addrspace(1)* %RF, i64 %873
  %875 = load double addrspace(1)* %874, align 8
  %876 = fmul double %875, %216
  %877 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %878 = load i64* %877, align 8
  %879 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %880 = load i64* %879, align 8
  %881 = add i64 %878, %880
  %882 = add i64 %881, 4976640
  %883 = getelementptr inbounds double addrspace(1)* %RF, i64 %882
  store double %876, double addrspace(1)* %883, align 8
  %884 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %885 = load i64* %884, align 8
  %886 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %887 = load i64* %886, align 8
  %888 = add i64 %885, %887
  %889 = add i64 %888, 4976640
  %890 = getelementptr inbounds double addrspace(1)* %RB, i64 %889
  %891 = load double addrspace(1)* %890, align 8
  %892 = fmul double %891, %216
  %893 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %894 = load i64* %893, align 8
  %895 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %896 = load i64* %895, align 8
  %897 = add i64 %894, %896
  %898 = add i64 %897, 1105920
  %899 = getelementptr inbounds double addrspace(1)* %C, i64 %898
  %900 = load double addrspace(1)* %899, align 8
  %901 = fmul double %892, %900
  %902 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %903 = load i64* %902, align 8
  %904 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %905 = load i64* %904, align 8
  %906 = add i64 %903, %905
  %907 = add i64 %906, 110592
  %908 = getelementptr inbounds double addrspace(1)* %C, i64 %907
  %909 = load double addrspace(1)* %908, align 8
  %910 = fmul double %901, %909
  %911 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %912 = load i64* %911, align 8
  %913 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %914 = load i64* %913, align 8
  %915 = add i64 %912, %914
  %916 = add i64 %915, 4976640
  %917 = getelementptr inbounds double addrspace(1)* %RB, i64 %916
  store double %910, double addrspace(1)* %917, align 8
  %918 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %919 = load i64* %918, align 8
  %920 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %921 = load i64* %920, align 8
  %922 = add i64 %919, %921
  %923 = add i64 %922, 13271040
  %924 = getelementptr inbounds double addrspace(1)* %RF, i64 %923
  %925 = load double addrspace(1)* %924, align 8
  %926 = fmul double %925, %17
  %927 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %928 = load i64* %927, align 8
  %929 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %930 = load i64* %929, align 8
  %931 = add i64 %928, %930
  %932 = add i64 %931, 1437696
  %933 = getelementptr inbounds double addrspace(1)* %C, i64 %932
  %934 = load double addrspace(1)* %933, align 8
  %935 = fmul double %926, %934
  %936 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %937 = load i64* %936, align 8
  %938 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %939 = load i64* %938, align 8
  %940 = add i64 %937, %939
  %941 = add i64 %940, 884736
  %942 = getelementptr inbounds double addrspace(1)* %C, i64 %941
  %943 = load double addrspace(1)* %942, align 8
  %944 = fmul double %935, %943
  %945 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %946 = load i64* %945, align 8
  %947 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %948 = load i64* %947, align 8
  %949 = add i64 %946, %948
  %950 = add i64 %949, 13271040
  %951 = getelementptr inbounds double addrspace(1)* %RF, i64 %950
  store double %944, double addrspace(1)* %951, align 8
  %952 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %953 = load i64* %952, align 8
  %954 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %955 = load i64* %954, align 8
  %956 = add i64 %953, %955
  %957 = add i64 %956, 13271040
  %958 = getelementptr inbounds double addrspace(1)* %RB, i64 %957
  %959 = load double addrspace(1)* %958, align 8
  %960 = fmul double %959, %17
  %961 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %962 = load i64* %961, align 8
  %963 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %964 = load i64* %963, align 8
  %965 = add i64 %962, %964
  %966 = add i64 %965, 2101248
  %967 = getelementptr inbounds double addrspace(1)* %C, i64 %966
  %968 = load double addrspace(1)* %967, align 8
  %969 = fmul double %960, %968
  %970 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %971 = load i64* %970, align 8
  %972 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %973 = load i64* %972, align 8
  %974 = add i64 %971, %973
  %975 = add i64 %974, 13271040
  %976 = getelementptr inbounds double addrspace(1)* %RB, i64 %975
  store double %969, double addrspace(1)* %976, align 8
  %977 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %978 = load i64* %977, align 8
  %979 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %980 = load i64* %979, align 8
  %981 = add i64 %978, %980
  %982 = add i64 %981, 1327104
  %983 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %982
  %984 = load double addrspace(1)* %983, align 8
  %985 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %986 = load i64* %985, align 8
  %987 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %988 = load i64* %987, align 8
  %989 = add i64 %986, %988
  %990 = add i64 %989, 13824000
  %991 = getelementptr inbounds double addrspace(1)* %RF, i64 %990
  %992 = load double addrspace(1)* %991, align 8
  %993 = fdiv double 1.000000e+00, %992
  %994 = fmul double %216, %993
  %995 = fmul double %984, %994
  %996 = fadd double %995, 1.000000e+00
  %997 = fdiv double 1.000000e+00, %996
  %998 = fmul double %995, %997
  %999 = tail call double @_Z4fmaxdd(double %995, double 1.000000e-200) nounwind
  %1000 = tail call double @_Z5log10d(double %999) nounwind
  %1001 = fmul double %7, 0xBF43323D7CECF427
  %1002 = tail call double @_Z3expd(double %1001) nounwind
  %1003 = fmul double %1002, 6.630000e-01
  %1004 = fmul double %7, -3.125000e-04
  %1005 = tail call double @_Z3expd(double %1004) nounwind
  %1006 = fmul double %1005, 3.370000e-01
  %1007 = fadd double %1003, %1006
  %1008 = fdiv double 1.000000e+00, %7
  %1009 = fmul double %1008, -4.131000e+03
  %1010 = tail call double @_Z3expd(double %1009) nounwind
  %1011 = fadd double %1007, %1010
  %1012 = tail call double @_Z4fmaxdd(double %1011, double 1.000000e-200) nounwind
  %1013 = tail call double @_Z5log10d(double %1012) nounwind
  %1014 = fmul double %1013, 1.270000e+00
  %1015 = fsub double 7.500000e-01, %1014
  %1016 = fmul double %1013, 6.700000e-01
  %1017 = fadd double %1016, 4.000000e-01
  %1018 = fsub double %1000, %1017
  %1019 = fmul double %1018, 1.400000e-01
  %1020 = fsub double %1015, %1019
  %1021 = fdiv double 1.000000e+00, %1020
  %1022 = fmul double %1018, %1021
  %1023 = fmul double %1022, %1022
  %1024 = fadd double %1023, 1.000000e+00
  %1025 = fdiv double 1.000000e+00, %1024
  %1026 = fmul double %1013, %1025
  %1027 = tail call double @_Z5exp10d(double %1026) nounwind
  %1028 = fmul double %1027, %998
  %1029 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1030 = load i64* %1029, align 8
  %1031 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1032 = load i64* %1031, align 8
  %1033 = add i64 %1030, %1032
  %1034 = add i64 %1033, 13824000
  %1035 = getelementptr inbounds double addrspace(1)* %RF, i64 %1034
  %1036 = load double addrspace(1)* %1035, align 8
  %1037 = fmul double %1036, %1028
  %1038 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1039 = load i64* %1038, align 8
  %1040 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1041 = load i64* %1040, align 8
  %1042 = add i64 %1039, %1041
  %1043 = add i64 %1042, 13824000
  %1044 = getelementptr inbounds double addrspace(1)* %RF, i64 %1043
  store double %1037, double addrspace(1)* %1044, align 8
  %1045 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1046 = load i64* %1045, align 8
  %1047 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1048 = load i64* %1047, align 8
  %1049 = add i64 %1046, %1048
  %1050 = add i64 %1049, 13824000
  %1051 = getelementptr inbounds double addrspace(1)* %RB, i64 %1050
  %1052 = load double addrspace(1)* %1051, align 8
  %1053 = fmul double %1052, %1028
  %1054 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1055 = load i64* %1054, align 8
  %1056 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1057 = load i64* %1056, align 8
  %1058 = add i64 %1055, %1057
  %1059 = add i64 %1058, 13824000
  %1060 = getelementptr inbounds double addrspace(1)* %RB, i64 %1059
  store double %1053, double addrspace(1)* %1060, align 8
  %1061 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1062 = load i64* %1061, align 8
  %1063 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1064 = load i64* %1063, align 8
  %1065 = add i64 %1062, %1064
  %1066 = add i64 %1065, 1437696
  %1067 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %1066
  %1068 = load double addrspace(1)* %1067, align 8
  %1069 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1070 = load i64* %1069, align 8
  %1071 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1072 = load i64* %1071, align 8
  %1073 = add i64 %1070, %1072
  %1074 = add i64 %1073, 14487552
  %1075 = getelementptr inbounds double addrspace(1)* %RF, i64 %1074
  %1076 = load double addrspace(1)* %1075, align 8
  %1077 = fdiv double 1.000000e+00, %1076
  %1078 = fmul double %216, %1077
  %1079 = fmul double %1068, %1078
  %1080 = fadd double %1079, 1.000000e+00
  %1081 = fdiv double 1.000000e+00, %1080
  %1082 = fmul double %1079, %1081
  %1083 = tail call double @_Z4fmaxdd(double %1079, double 1.000000e-200) nounwind
  %1084 = tail call double @_Z5log10d(double %1083) nounwind
  %1085 = fmul double %7, 0xBF73BD60D9232955
  %1086 = tail call double @_Z3expd(double %1085) nounwind
  %1087 = fmul double %1086, 2.180000e-01
  %1088 = fmul double %7, 0xBF389C1E60B57F60
  %1089 = tail call double @_Z3expd(double %1088) nounwind
  %1090 = fmul double %1089, 7.820000e-01
  %1091 = fadd double %1087, %1090
  %1092 = fmul double %1008, -6.095000e+03
  %1093 = tail call double @_Z3expd(double %1092) nounwind
  %1094 = fadd double %1091, %1093
  %1095 = tail call double @_Z4fmaxdd(double %1094, double 1.000000e-200) nounwind
  %1096 = tail call double @_Z5log10d(double %1095) nounwind
  %1097 = fmul double %1096, 1.270000e+00
  %1098 = fsub double 7.500000e-01, %1097
  %1099 = fmul double %1096, 6.700000e-01
  %1100 = fadd double %1099, 4.000000e-01
  %1101 = fsub double %1084, %1100
  %1102 = fmul double %1101, 1.400000e-01
  %1103 = fsub double %1098, %1102
  %1104 = fdiv double 1.000000e+00, %1103
  %1105 = fmul double %1101, %1104
  %1106 = fmul double %1105, %1105
  %1107 = fadd double %1106, 1.000000e+00
  %1108 = fdiv double 1.000000e+00, %1107
  %1109 = fmul double %1096, %1108
  %1110 = tail call double @_Z5exp10d(double %1109) nounwind
  %1111 = fmul double %1110, %1082
  %1112 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1113 = load i64* %1112, align 8
  %1114 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1115 = load i64* %1114, align 8
  %1116 = add i64 %1113, %1115
  %1117 = add i64 %1116, 14487552
  %1118 = getelementptr inbounds double addrspace(1)* %RF, i64 %1117
  %1119 = load double addrspace(1)* %1118, align 8
  %1120 = fmul double %1119, %1111
  %1121 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1122 = load i64* %1121, align 8
  %1123 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1124 = load i64* %1123, align 8
  %1125 = add i64 %1122, %1124
  %1126 = add i64 %1125, 14487552
  %1127 = getelementptr inbounds double addrspace(1)* %RF, i64 %1126
  store double %1120, double addrspace(1)* %1127, align 8
  %1128 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1129 = load i64* %1128, align 8
  %1130 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1131 = load i64* %1130, align 8
  %1132 = add i64 %1129, %1131
  %1133 = add i64 %1132, 14487552
  %1134 = getelementptr inbounds double addrspace(1)* %RB, i64 %1133
  %1135 = load double addrspace(1)* %1134, align 8
  %1136 = fmul double %1135, %1111
  %1137 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1138 = load i64* %1137, align 8
  %1139 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1140 = load i64* %1139, align 8
  %1141 = add i64 %1138, %1140
  %1142 = add i64 %1141, 14487552
  %1143 = getelementptr inbounds double addrspace(1)* %RB, i64 %1142
  store double %1136, double addrspace(1)* %1143, align 8
  %1144 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1145 = load i64* %1144, align 8
  %1146 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1147 = load i64* %1146, align 8
  %1148 = add i64 %1145, %1147
  %1149 = add i64 %1148, 1548288
  %1150 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %1149
  %1151 = load double addrspace(1)* %1150, align 8
  %1152 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1153 = load i64* %1152, align 8
  %1154 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1155 = load i64* %1154, align 8
  %1156 = add i64 %1153, %1155
  %1157 = add i64 %1156, 15925248
  %1158 = getelementptr inbounds double addrspace(1)* %RF, i64 %1157
  %1159 = load double addrspace(1)* %1158, align 8
  %1160 = fdiv double 1.000000e+00, %1159
  %1161 = fmul double %216, %1160
  %1162 = fmul double %1151, %1161
  %1163 = fadd double %1162, 1.000000e+00
  %1164 = fdiv double 1.000000e+00, %1163
  %1165 = fmul double %1162, %1164
  %1166 = tail call double @_Z4fmaxdd(double %1162, double 1.000000e-200) nounwind
  %1167 = tail call double @_Z5log10d(double %1166) nounwind
  %1168 = fmul double %7, 0xBF48715A79FC1ABC
  %1169 = tail call double @_Z3expd(double %1168) nounwind
  %1170 = fmul double %1169, 8.250000e-01
  %1171 = fmul double %7, 0xBEF179EC9CBD821E
  %1172 = tail call double @_Z3expd(double %1171) nounwind
  %1173 = fmul double %1172, 1.750000e-01
  %1174 = fadd double %1170, %1173
  %1175 = fmul double %1008, -1.013980e+04
  %1176 = tail call double @_Z3expd(double %1175) nounwind
  %1177 = fadd double %1174, %1176
  %1178 = tail call double @_Z4fmaxdd(double %1177, double 1.000000e-200) nounwind
  %1179 = tail call double @_Z5log10d(double %1178) nounwind
  %1180 = fmul double %1179, 1.270000e+00
  %1181 = fsub double 7.500000e-01, %1180
  %1182 = fmul double %1179, 6.700000e-01
  %1183 = fadd double %1182, 4.000000e-01
  %1184 = fsub double %1167, %1183
  %1185 = fmul double %1184, 1.400000e-01
  %1186 = fsub double %1181, %1185
  %1187 = fdiv double 1.000000e+00, %1186
  %1188 = fmul double %1184, %1187
  %1189 = fmul double %1188, %1188
  %1190 = fadd double %1189, 1.000000e+00
  %1191 = fdiv double 1.000000e+00, %1190
  %1192 = fmul double %1179, %1191
  %1193 = tail call double @_Z5exp10d(double %1192) nounwind
  %1194 = fmul double %1193, %1165
  %1195 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1196 = load i64* %1195, align 8
  %1197 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1198 = load i64* %1197, align 8
  %1199 = add i64 %1196, %1198
  %1200 = add i64 %1199, 15925248
  %1201 = getelementptr inbounds double addrspace(1)* %RF, i64 %1200
  %1202 = load double addrspace(1)* %1201, align 8
  %1203 = fmul double %1202, %1194
  %1204 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1205 = load i64* %1204, align 8
  %1206 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1207 = load i64* %1206, align 8
  %1208 = add i64 %1205, %1207
  %1209 = add i64 %1208, 15925248
  %1210 = getelementptr inbounds double addrspace(1)* %RF, i64 %1209
  store double %1203, double addrspace(1)* %1210, align 8
  %1211 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1212 = load i64* %1211, align 8
  %1213 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1214 = load i64* %1213, align 8
  %1215 = add i64 %1212, %1214
  %1216 = add i64 %1215, 15925248
  %1217 = getelementptr inbounds double addrspace(1)* %RB, i64 %1216
  %1218 = load double addrspace(1)* %1217, align 8
  %1219 = fmul double %1218, %1194
  %1220 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1221 = load i64* %1220, align 8
  %1222 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1223 = load i64* %1222, align 8
  %1224 = add i64 %1221, %1223
  %1225 = add i64 %1224, 15925248
  %1226 = getelementptr inbounds double addrspace(1)* %RB, i64 %1225
  store double %1219, double addrspace(1)* %1226, align 8
  %1227 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1228 = load i64* %1227, align 8
  %1229 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1230 = load i64* %1229, align 8
  %1231 = add i64 %1228, %1230
  %1232 = add i64 %1231, 1658880
  %1233 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %1232
  %1234 = load double addrspace(1)* %1233, align 8
  %1235 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1236 = load i64* %1235, align 8
  %1237 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1238 = load i64* %1237, align 8
  %1239 = add i64 %1236, %1238
  %1240 = add i64 %1239, 16257024
  %1241 = getelementptr inbounds double addrspace(1)* %RF, i64 %1240
  %1242 = load double addrspace(1)* %1241, align 8
  %1243 = fdiv double 1.000000e+00, %1242
  %1244 = fmul double %216, %1243
  %1245 = fmul double %1234, %1244
  %1246 = fadd double %1245, 1.000000e+00
  %1247 = fdiv double 1.000000e+00, %1246
  %1248 = fmul double %1245, %1247
  %1249 = tail call double @_Z4fmaxdd(double %1245, double 1.000000e-200) nounwind
  %1250 = tail call double @_Z5log10d(double %1249) nounwind
  %1251 = fmul double %7, 0xBF1D74526156683E
  %1252 = tail call double @_Z3expd(double %1251) nounwind
  %1253 = fmul double %1252, 4.500000e-01
  %1254 = fmul double %7, 0xBF2E21A99B7BB433
  %1255 = tail call double @_Z3expd(double %1254) nounwind
  %1256 = fmul double %1255, 5.500000e-01
  %1257 = fadd double %1253, %1256
  %1258 = fmul double %1008, -7.244000e+03
  %1259 = tail call double @_Z3expd(double %1258) nounwind
  %1260 = fadd double %1257, %1259
  %1261 = tail call double @_Z4fmaxdd(double %1260, double 1.000000e-200) nounwind
  %1262 = tail call double @_Z5log10d(double %1261) nounwind
  %1263 = fmul double %1262, 1.270000e+00
  %1264 = fsub double 7.500000e-01, %1263
  %1265 = fmul double %1262, 6.700000e-01
  %1266 = fadd double %1265, 4.000000e-01
  %1267 = fsub double %1250, %1266
  %1268 = fmul double %1267, 1.400000e-01
  %1269 = fsub double %1264, %1268
  %1270 = fdiv double 1.000000e+00, %1269
  %1271 = fmul double %1267, %1270
  %1272 = fmul double %1271, %1271
  %1273 = fadd double %1272, 1.000000e+00
  %1274 = fdiv double 1.000000e+00, %1273
  %1275 = fmul double %1262, %1274
  %1276 = tail call double @_Z5exp10d(double %1275) nounwind
  %1277 = fmul double %1276, %1248
  %1278 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1279 = load i64* %1278, align 8
  %1280 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1281 = load i64* %1280, align 8
  %1282 = add i64 %1279, %1281
  %1283 = add i64 %1282, 16257024
  %1284 = getelementptr inbounds double addrspace(1)* %RF, i64 %1283
  %1285 = load double addrspace(1)* %1284, align 8
  %1286 = fmul double %1285, %1277
  %1287 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1288 = load i64* %1287, align 8
  %1289 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1290 = load i64* %1289, align 8
  %1291 = add i64 %1288, %1290
  %1292 = add i64 %1291, 16257024
  %1293 = getelementptr inbounds double addrspace(1)* %RF, i64 %1292
  store double %1286, double addrspace(1)* %1293, align 8
  %1294 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1295 = load i64* %1294, align 8
  %1296 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1297 = load i64* %1296, align 8
  %1298 = add i64 %1295, %1297
  %1299 = add i64 %1298, 16257024
  %1300 = getelementptr inbounds double addrspace(1)* %RB, i64 %1299
  %1301 = load double addrspace(1)* %1300, align 8
  %1302 = fmul double %1301, %1277
  %1303 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1304 = load i64* %1303, align 8
  %1305 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1306 = load i64* %1305, align 8
  %1307 = add i64 %1304, %1306
  %1308 = add i64 %1307, 16257024
  %1309 = getelementptr inbounds double addrspace(1)* %RB, i64 %1308
  store double %1302, double addrspace(1)* %1309, align 8
  %1310 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1311 = load i64* %1310, align 8
  %1312 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1313 = load i64* %1312, align 8
  %1314 = add i64 %1311, %1313
  %1315 = add i64 %1314, 1769472
  %1316 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %1315
  %1317 = load double addrspace(1)* %1316, align 8
  %1318 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1319 = load i64* %1318, align 8
  %1320 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1321 = load i64* %1320, align 8
  %1322 = add i64 %1319, %1321
  %1323 = add i64 %1322, 17031168
  %1324 = getelementptr inbounds double addrspace(1)* %RF, i64 %1323
  %1325 = load double addrspace(1)* %1324, align 8
  %1326 = fdiv double 1.000000e+00, %1325
  %1327 = fmul double %216, %1326
  %1328 = fmul double %1317, %1327
  %1329 = fadd double %1328, 1.000000e+00
  %1330 = fdiv double 1.000000e+00, %1329
  %1331 = fmul double %1328, %1330
  %1332 = tail call double @_Z4fmaxdd(double %1328, double 1.000000e-200) nounwind
  %1333 = tail call double @_Z5log10d(double %1332) nounwind
  %1334 = fmul double %7, 0xBF76C16C16C16C17
  %1335 = tail call double @_Z3expd(double %1334) nounwind
  %1336 = fmul double %1335, 2.655000e-01
  %1337 = fmul double %7, 0xBF4FA8EF6D92ACA5
  %1338 = tail call double @_Z3expd(double %1337) nounwind
  %1339 = fmul double %1338, 7.345000e-01
  %1340 = fadd double %1336, %1339
  %1341 = fmul double %1008, -5.417000e+03
  %1342 = tail call double @_Z3expd(double %1341) nounwind
  %1343 = fadd double %1340, %1342
  %1344 = tail call double @_Z4fmaxdd(double %1343, double 1.000000e-200) nounwind
  %1345 = tail call double @_Z5log10d(double %1344) nounwind
  %1346 = fmul double %1345, 1.270000e+00
  %1347 = fsub double 7.500000e-01, %1346
  %1348 = fmul double %1345, 6.700000e-01
  %1349 = fadd double %1348, 4.000000e-01
  %1350 = fsub double %1333, %1349
  %1351 = fmul double %1350, 1.400000e-01
  %1352 = fsub double %1347, %1351
  %1353 = fdiv double 1.000000e+00, %1352
  %1354 = fmul double %1350, %1353
  %1355 = fmul double %1354, %1354
  %1356 = fadd double %1355, 1.000000e+00
  %1357 = fdiv double 1.000000e+00, %1356
  %1358 = fmul double %1345, %1357
  %1359 = tail call double @_Z5exp10d(double %1358) nounwind
  %1360 = fmul double %1359, %1331
  %1361 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1362 = load i64* %1361, align 8
  %1363 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1364 = load i64* %1363, align 8
  %1365 = add i64 %1362, %1364
  %1366 = add i64 %1365, 17031168
  %1367 = getelementptr inbounds double addrspace(1)* %RF, i64 %1366
  %1368 = load double addrspace(1)* %1367, align 8
  %1369 = fmul double %1368, %1360
  %1370 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1371 = load i64* %1370, align 8
  %1372 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1373 = load i64* %1372, align 8
  %1374 = add i64 %1371, %1373
  %1375 = add i64 %1374, 17031168
  %1376 = getelementptr inbounds double addrspace(1)* %RF, i64 %1375
  store double %1369, double addrspace(1)* %1376, align 8
  %1377 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1378 = load i64* %1377, align 8
  %1379 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1380 = load i64* %1379, align 8
  %1381 = add i64 %1378, %1380
  %1382 = add i64 %1381, 17031168
  %1383 = getelementptr inbounds double addrspace(1)* %RB, i64 %1382
  %1384 = load double addrspace(1)* %1383, align 8
  %1385 = fmul double %1384, %1360
  %1386 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1387 = load i64* %1386, align 8
  %1388 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1389 = load i64* %1388, align 8
  %1390 = add i64 %1387, %1389
  %1391 = add i64 %1390, 17031168
  %1392 = getelementptr inbounds double addrspace(1)* %RB, i64 %1391
  store double %1385, double addrspace(1)* %1392, align 8
  %1393 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1394 = load i64* %1393, align 8
  %1395 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1396 = load i64* %1395, align 8
  %1397 = add i64 %1394, %1396
  %1398 = add i64 %1397, 1880064
  %1399 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %1398
  %1400 = load double addrspace(1)* %1399, align 8
  %1401 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1402 = load i64* %1401, align 8
  %1403 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1404 = load i64* %1403, align 8
  %1405 = add i64 %1402, %1404
  %1406 = add i64 %1405, 17141760
  %1407 = getelementptr inbounds double addrspace(1)* %RF, i64 %1406
  %1408 = load double addrspace(1)* %1407, align 8
  %1409 = fdiv double 1.000000e+00, %1408
  %1410 = fmul double %216, %1409
  %1411 = fmul double %1400, %1410
  %1412 = fadd double %1411, 1.000000e+00
  %1413 = fdiv double 1.000000e+00, %1412
  %1414 = fmul double %1411, %1413
  %1415 = tail call double @_Z4fmaxdd(double %1411, double 1.000000e-200) nounwind
  %1416 = tail call double @_Z5log10d(double %1415) nounwind
  %1417 = fmul double %7, 0xBF73813813813814
  %1418 = tail call double @_Z3expd(double %1417) nounwind
  %1419 = fmul double %1418, 2.470000e-02
  %1420 = fmul double %7, 0xBF50A6810A6810A7
  %1421 = tail call double @_Z3expd(double %1420) nounwind
  %1422 = fmul double %1421, 9.753000e-01
  %1423 = fadd double %1419, %1422
  %1424 = fmul double %1008, -4.374000e+03
  %1425 = tail call double @_Z3expd(double %1424) nounwind
  %1426 = fadd double %1423, %1425
  %1427 = tail call double @_Z4fmaxdd(double %1426, double 1.000000e-200) nounwind
  %1428 = tail call double @_Z5log10d(double %1427) nounwind
  %1429 = fmul double %1428, 1.270000e+00
  %1430 = fsub double 7.500000e-01, %1429
  %1431 = fmul double %1428, 6.700000e-01
  %1432 = fadd double %1431, 4.000000e-01
  %1433 = fsub double %1416, %1432
  %1434 = fmul double %1433, 1.400000e-01
  %1435 = fsub double %1430, %1434
  %1436 = fdiv double 1.000000e+00, %1435
  %1437 = fmul double %1433, %1436
  %1438 = fmul double %1437, %1437
  %1439 = fadd double %1438, 1.000000e+00
  %1440 = fdiv double 1.000000e+00, %1439
  %1441 = fmul double %1428, %1440
  %1442 = tail call double @_Z5exp10d(double %1441) nounwind
  %1443 = fmul double %1442, %1414
  %1444 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1445 = load i64* %1444, align 8
  %1446 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1447 = load i64* %1446, align 8
  %1448 = add i64 %1445, %1447
  %1449 = add i64 %1448, 17141760
  %1450 = getelementptr inbounds double addrspace(1)* %RF, i64 %1449
  %1451 = load double addrspace(1)* %1450, align 8
  %1452 = fmul double %1451, %1443
  %1453 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1454 = load i64* %1453, align 8
  %1455 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1456 = load i64* %1455, align 8
  %1457 = add i64 %1454, %1456
  %1458 = add i64 %1457, 17141760
  %1459 = getelementptr inbounds double addrspace(1)* %RF, i64 %1458
  store double %1452, double addrspace(1)* %1459, align 8
  %1460 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1461 = load i64* %1460, align 8
  %1462 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1463 = load i64* %1462, align 8
  %1464 = add i64 %1461, %1463
  %1465 = add i64 %1464, 17141760
  %1466 = getelementptr inbounds double addrspace(1)* %RB, i64 %1465
  %1467 = load double addrspace(1)* %1466, align 8
  %1468 = fmul double %1467, %1443
  %1469 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1470 = load i64* %1469, align 8
  %1471 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1472 = load i64* %1471, align 8
  %1473 = add i64 %1470, %1472
  %1474 = add i64 %1473, 17141760
  %1475 = getelementptr inbounds double addrspace(1)* %RB, i64 %1474
  store double %1468, double addrspace(1)* %1475, align 8
  %1476 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1477 = load i64* %1476, align 8
  %1478 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1479 = load i64* %1478, align 8
  %1480 = add i64 %1477, %1479
  %1481 = add i64 %1480, 1990656
  %1482 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %1481
  %1483 = load double addrspace(1)* %1482, align 8
  %1484 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1485 = load i64* %1484, align 8
  %1486 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1487 = load i64* %1486, align 8
  %1488 = add i64 %1485, %1487
  %1489 = add i64 %1488, 18690048
  %1490 = getelementptr inbounds double addrspace(1)* %RF, i64 %1489
  %1491 = load double addrspace(1)* %1490, align 8
  %1492 = fdiv double 1.000000e+00, %1491
  %1493 = fmul double %216, %1492
  %1494 = fmul double %1483, %1493
  %1495 = fadd double %1494, 1.000000e+00
  %1496 = fdiv double 1.000000e+00, %1495
  %1497 = fmul double %1494, %1496
  %1498 = tail call double @_Z4fmaxdd(double %1494, double 1.000000e-200) nounwind
  %1499 = tail call double @_Z5log10d(double %1498) nounwind
  %1500 = fmul double %7, -8.000000e-03
  %1501 = tail call double @_Z3expd(double %1500) nounwind
  %1502 = fmul double %1501, 1.578000e-01
  %1503 = fmul double %7, 0xBF3D88B5D19F527D
  %1504 = tail call double @_Z3expd(double %1503) nounwind
  %1505 = fmul double %1504, 8.422000e-01
  %1506 = fadd double %1502, %1505
  %1507 = fmul double %1008, -6.882000e+03
  %1508 = tail call double @_Z3expd(double %1507) nounwind
  %1509 = fadd double %1506, %1508
  %1510 = tail call double @_Z4fmaxdd(double %1509, double 1.000000e-200) nounwind
  %1511 = tail call double @_Z5log10d(double %1510) nounwind
  %1512 = fmul double %1511, 1.270000e+00
  %1513 = fsub double 7.500000e-01, %1512
  %1514 = fmul double %1511, 6.700000e-01
  %1515 = fadd double %1514, 4.000000e-01
  %1516 = fsub double %1499, %1515
  %1517 = fmul double %1516, 1.400000e-01
  %1518 = fsub double %1513, %1517
  %1519 = fdiv double 1.000000e+00, %1518
  %1520 = fmul double %1516, %1519
  %1521 = fmul double %1520, %1520
  %1522 = fadd double %1521, 1.000000e+00
  %1523 = fdiv double 1.000000e+00, %1522
  %1524 = fmul double %1511, %1523
  %1525 = tail call double @_Z5exp10d(double %1524) nounwind
  %1526 = fmul double %1525, %1497
  %1527 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1528 = load i64* %1527, align 8
  %1529 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1530 = load i64* %1529, align 8
  %1531 = add i64 %1528, %1530
  %1532 = add i64 %1531, 18690048
  %1533 = getelementptr inbounds double addrspace(1)* %RF, i64 %1532
  %1534 = load double addrspace(1)* %1533, align 8
  %1535 = fmul double %1534, %1526
  %1536 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1537 = load i64* %1536, align 8
  %1538 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1539 = load i64* %1538, align 8
  %1540 = add i64 %1537, %1539
  %1541 = add i64 %1540, 18690048
  %1542 = getelementptr inbounds double addrspace(1)* %RF, i64 %1541
  store double %1535, double addrspace(1)* %1542, align 8
  %1543 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1544 = load i64* %1543, align 8
  %1545 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1546 = load i64* %1545, align 8
  %1547 = add i64 %1544, %1546
  %1548 = add i64 %1547, 18690048
  %1549 = getelementptr inbounds double addrspace(1)* %RB, i64 %1548
  %1550 = load double addrspace(1)* %1549, align 8
  %1551 = fmul double %1550, %1526
  %1552 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1553 = load i64* %1552, align 8
  %1554 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1555 = load i64* %1554, align 8
  %1556 = add i64 %1553, %1555
  %1557 = add i64 %1556, 18690048
  %1558 = getelementptr inbounds double addrspace(1)* %RB, i64 %1557
  store double %1551, double addrspace(1)* %1558, align 8
  %1559 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1560 = load i64* %1559, align 8
  %1561 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1562 = load i64* %1561, align 8
  %1563 = add i64 %1560, %1562
  %1564 = add i64 %1563, 2101248
  %1565 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %1564
  %1566 = load double addrspace(1)* %1565, align 8
  %1567 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1568 = load i64* %1567, align 8
  %1569 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1570 = load i64* %1569, align 8
  %1571 = add i64 %1568, %1570
  %1572 = add i64 %1571, 20348928
  %1573 = getelementptr inbounds double addrspace(1)* %RF, i64 %1572
  %1574 = load double addrspace(1)* %1573, align 8
  %1575 = fdiv double 1.000000e+00, %1574
  %1576 = fmul double %216, %1575
  %1577 = fmul double %1566, %1576
  %1578 = fadd double %1577, 1.000000e+00
  %1579 = fdiv double 1.000000e+00, %1578
  %1580 = fmul double %1577, %1579
  %1581 = tail call double @_Z4fmaxdd(double %1577, double 1.000000e-200) nounwind
  %1582 = tail call double @_Z5log10d(double %1581) nounwind
  %1583 = fmul double %7, 0xBF4DE1A6D2922395
  %1584 = tail call double @_Z3expd(double %1583) nounwind
  %1585 = fmul double %1584, 9.800000e-01
  %1586 = tail call double @_Z3expd(double %1583) nounwind
  %1587 = fmul double %1586, 2.000000e-02
  %1588 = fadd double %1585, %1587
  %1589 = fmul double %1008, -6.859500e+03
  %1590 = tail call double @_Z3expd(double %1589) nounwind
  %1591 = fadd double %1588, %1590
  %1592 = tail call double @_Z4fmaxdd(double %1591, double 1.000000e-200) nounwind
  %1593 = tail call double @_Z5log10d(double %1592) nounwind
  %1594 = fmul double %1593, 1.270000e+00
  %1595 = fsub double 7.500000e-01, %1594
  %1596 = fmul double %1593, 6.700000e-01
  %1597 = fadd double %1596, 4.000000e-01
  %1598 = fsub double %1582, %1597
  %1599 = fmul double %1598, 1.400000e-01
  %1600 = fsub double %1595, %1599
  %1601 = fdiv double 1.000000e+00, %1600
  %1602 = fmul double %1598, %1601
  %1603 = fmul double %1602, %1602
  %1604 = fadd double %1603, 1.000000e+00
  %1605 = fdiv double 1.000000e+00, %1604
  %1606 = fmul double %1593, %1605
  %1607 = tail call double @_Z5exp10d(double %1606) nounwind
  %1608 = fmul double %1607, %1580
  %1609 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1610 = load i64* %1609, align 8
  %1611 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1612 = load i64* %1611, align 8
  %1613 = add i64 %1610, %1612
  %1614 = add i64 %1613, 20348928
  %1615 = getelementptr inbounds double addrspace(1)* %RF, i64 %1614
  %1616 = load double addrspace(1)* %1615, align 8
  %1617 = fmul double %1616, %1608
  %1618 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1619 = load i64* %1618, align 8
  %1620 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1621 = load i64* %1620, align 8
  %1622 = add i64 %1619, %1621
  %1623 = add i64 %1622, 20348928
  %1624 = getelementptr inbounds double addrspace(1)* %RF, i64 %1623
  store double %1617, double addrspace(1)* %1624, align 8
  %1625 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1626 = load i64* %1625, align 8
  %1627 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1628 = load i64* %1627, align 8
  %1629 = add i64 %1626, %1628
  %1630 = add i64 %1629, 20348928
  %1631 = getelementptr inbounds double addrspace(1)* %RB, i64 %1630
  %1632 = load double addrspace(1)* %1631, align 8
  %1633 = fmul double %1632, %1608
  %1634 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1635 = load i64* %1634, align 8
  %1636 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1637 = load i64* %1636, align 8
  %1638 = add i64 %1635, %1637
  %1639 = add i64 %1638, 20348928
  %1640 = getelementptr inbounds double addrspace(1)* %RB, i64 %1639
  store double %1633, double addrspace(1)* %1640, align 8
  %1641 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1642 = load i64* %1641, align 8
  %1643 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1644 = load i64* %1643, align 8
  %1645 = add i64 %1642, %1644
  %1646 = add i64 %1645, 2211840
  %1647 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %1646
  %1648 = load double addrspace(1)* %1647, align 8
  %1649 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1650 = load i64* %1649, align 8
  %1651 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1652 = load i64* %1651, align 8
  %1653 = add i64 %1650, %1652
  %1654 = add i64 %1653, 20901888
  %1655 = getelementptr inbounds double addrspace(1)* %RF, i64 %1654
  %1656 = load double addrspace(1)* %1655, align 8
  %1657 = fdiv double 1.000000e+00, %1656
  %1658 = fmul double %514, %1657
  %1659 = fmul double %1648, %1658
  %1660 = fadd double %1659, 1.000000e+00
  %1661 = fdiv double 1.000000e+00, %1660
  %1662 = fmul double %1659, %1661
  %1663 = tail call double @_Z4fmaxdd(double %1659, double 1.000000e-200) nounwind
  %1664 = tail call double @_Z5log10d(double %1663) nounwind
  %1665 = fmul double %7, -1.000000e-03
  %1666 = tail call double @_Z3expd(double %1665) nounwind
  %1667 = fmul double %1666, 0.000000e+00
  %1668 = fmul double %7, 0xBF4903847EA1CEC1
  %1669 = tail call double @_Z3expd(double %1668) nounwind
  %1670 = fadd double %1667, %1669
  %1671 = fmul double %1008, -4.809700e+04
  %1672 = tail call double @_Z3expd(double %1671) nounwind
  %1673 = fadd double %1670, %1672
  %1674 = tail call double @_Z4fmaxdd(double %1673, double 1.000000e-200) nounwind
  %1675 = tail call double @_Z5log10d(double %1674) nounwind
  %1676 = fmul double %1675, 1.270000e+00
  %1677 = fsub double 7.500000e-01, %1676
  %1678 = fmul double %1675, 6.700000e-01
  %1679 = fadd double %1678, 4.000000e-01
  %1680 = fsub double %1664, %1679
  %1681 = fmul double %1680, 1.400000e-01
  %1682 = fsub double %1677, %1681
  %1683 = fdiv double 1.000000e+00, %1682
  %1684 = fmul double %1680, %1683
  %1685 = fmul double %1684, %1684
  %1686 = fadd double %1685, 1.000000e+00
  %1687 = fdiv double 1.000000e+00, %1686
  %1688 = fmul double %1675, %1687
  %1689 = tail call double @_Z5exp10d(double %1688) nounwind
  %1690 = fmul double %1689, %1662
  %1691 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1692 = load i64* %1691, align 8
  %1693 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1694 = load i64* %1693, align 8
  %1695 = add i64 %1692, %1694
  %1696 = add i64 %1695, 20901888
  %1697 = getelementptr inbounds double addrspace(1)* %RF, i64 %1696
  %1698 = load double addrspace(1)* %1697, align 8
  %1699 = fmul double %1698, %1690
  %1700 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1701 = load i64* %1700, align 8
  %1702 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1703 = load i64* %1702, align 8
  %1704 = add i64 %1701, %1703
  %1705 = add i64 %1704, 20901888
  %1706 = getelementptr inbounds double addrspace(1)* %RF, i64 %1705
  store double %1699, double addrspace(1)* %1706, align 8
  %1707 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1708 = load i64* %1707, align 8
  %1709 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1710 = load i64* %1709, align 8
  %1711 = add i64 %1708, %1710
  %1712 = add i64 %1711, 20901888
  %1713 = getelementptr inbounds double addrspace(1)* %RB, i64 %1712
  %1714 = load double addrspace(1)* %1713, align 8
  %1715 = fmul double %1714, %1690
  %1716 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1717 = load i64* %1716, align 8
  %1718 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1719 = load i64* %1718, align 8
  %1720 = add i64 %1717, %1719
  %1721 = add i64 %1720, 20901888
  %1722 = getelementptr inbounds double addrspace(1)* %RB, i64 %1721
  store double %1715, double addrspace(1)* %1722, align 8
  %check.WI.iter = icmp ult i64 %CurrWI..0, %iterCount
  br i1 %check.WI.iter, label %thenBB, label %SyncBB

thenBB:                                           ; preds = %._crit_edge
  %"CurrWI++" = add nuw i64 %CurrWI..0, 1
  br label %SyncBB5

SyncBB:                                           ; preds = %._crit_edge
  ret void
}

define void @____Vectorized_.ratxb_kernel_separated_args(double addrspace(1)* nocapture %T, double addrspace(1)* %C, double addrspace(1)* %RF, double addrspace(1)* %RB, double addrspace(1)* nocapture %RKLOW, double %TCONV, i8 addrspace(3)* %pLocalMem, %struct.WorkDim* %pWorkDim, i64* %pWGId, %struct.PaddedDimId* %pBaseGlbId, %struct.PaddedDimId* %pLocalIds, i64* %contextpointer, i64 %iterCount, i8* %pSpecialBuf, i64* %pCurrWI) nounwind alwaysinline {
bb.nph:
  %temp = insertelement <16 x double> undef, double %TCONV, i32 0
  %vector = shufflevector <16 x double> %temp, <16 x double> undef, <16 x i32> zeroinitializer
  br label %SyncBB

SyncBB:                                           ; preds = %thenBB, %bb.nph
  %CurrWI..0 = phi i64 [ 0, %bb.nph ], [ %"CurrWI++", %thenBB ]
  %0 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1 = load i64* %0, align 8
  %2 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %3 = load i64* %2, align 8
  %4 = add i64 %1, %3
  %5 = getelementptr inbounds double addrspace(1)* %T, i64 %4
  %ptrTypeCast = bitcast double addrspace(1)* %5 to <16 x double> addrspace(1)*
  %6 = load <16 x double> addrspace(1)* %ptrTypeCast, align 8
  %7 = fmul <16 x double> %6, %vector
  %extract16 = extractelement <16 x double> %7, i32 0
  %extract17 = extractelement <16 x double> %7, i32 1
  %extract18 = extractelement <16 x double> %7, i32 2
  %extract19 = extractelement <16 x double> %7, i32 3
  %extract20 = extractelement <16 x double> %7, i32 4
  %extract21 = extractelement <16 x double> %7, i32 5
  %extract22 = extractelement <16 x double> %7, i32 6
  %extract23 = extractelement <16 x double> %7, i32 7
  %extract24 = extractelement <16 x double> %7, i32 8
  %extract25 = extractelement <16 x double> %7, i32 9
  %extract26 = extractelement <16 x double> %7, i32 10
  %extract27 = extractelement <16 x double> %7, i32 11
  %extract28 = extractelement <16 x double> %7, i32 12
  %extract29 = extractelement <16 x double> %7, i32 13
  %extract30 = extractelement <16 x double> %7, i32 14
  %extract31 = extractelement <16 x double> %7, i32 15
  %8 = tail call double @_Z3logd(double %extract16) nounwind
  %9 = tail call double @_Z3logd(double %extract17) nounwind
  %10 = tail call double @_Z3logd(double %extract18) nounwind
  %11 = tail call double @_Z3logd(double %extract19) nounwind
  %12 = tail call double @_Z3logd(double %extract20) nounwind
  %13 = tail call double @_Z3logd(double %extract21) nounwind
  %14 = tail call double @_Z3logd(double %extract22) nounwind
  %15 = tail call double @_Z3logd(double %extract23) nounwind
  %16 = tail call double @_Z3logd(double %extract24) nounwind
  %17 = tail call double @_Z3logd(double %extract25) nounwind
  %18 = tail call double @_Z3logd(double %extract26) nounwind
  %19 = tail call double @_Z3logd(double %extract27) nounwind
  %20 = tail call double @_Z3logd(double %extract28) nounwind
  %21 = tail call double @_Z3logd(double %extract29) nounwind
  %22 = tail call double @_Z3logd(double %extract30) nounwind
  %23 = tail call double @_Z3logd(double %extract31) nounwind
  br label %24

; <label>:24                                      ; preds = %24, %SyncBB
  %indvar = phi i64 [ 0, %SyncBB ], [ %indvar.next, %24 ]
  %vectorPHI = phi <16 x double> [ zeroinitializer, %SyncBB ], [ %32, %24 ]
  %tmp3 = mul i64 %indvar, 110592
  %25 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %26 = load i64* %25, align 8
  %27 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %28 = load i64* %27, align 8
  %29 = add i64 %26, %28
  %extract37 = add i64 %29, %tmp3
  %30 = getelementptr inbounds double addrspace(1)* %C, i64 %extract37
  %ptrTypeCast53 = bitcast double addrspace(1)* %30 to <16 x double> addrspace(1)*
  %31 = load <16 x double> addrspace(1)* %ptrTypeCast53, align 8
  %32 = fadd <16 x double> %vectorPHI, %31
  %indvar.next = add i64 %indvar, 1
  %exitcond = icmp eq i64 %indvar.next, 22
  br i1 %exitcond, label %._crit_edge, label %24

._crit_edge:                                      ; preds = %24
  %33 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %34 = load i64* %33, align 8
  %35 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %36 = load i64* %35, align 8
  %37 = add i64 %34, %36
  %38 = getelementptr inbounds double addrspace(1)* %C, i64 %37
  %ptrTypeCast72 = bitcast double addrspace(1)* %38 to <16 x double> addrspace(1)*
  %39 = load <16 x double> addrspace(1)* %ptrTypeCast72, align 8
  %40 = fsub <16 x double> %32, %39
  %41 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %42 = load i64* %41, align 8
  %43 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %44 = load i64* %43, align 8
  %45 = add i64 %42, %44
  %extract75 = add i64 %45, 552960
  %46 = getelementptr inbounds double addrspace(1)* %C, i64 %extract75
  %ptrTypeCast91 = bitcast double addrspace(1)* %46 to <16 x double> addrspace(1)*
  %47 = load <16 x double> addrspace(1)* %ptrTypeCast91, align 8
  %48 = fsub <16 x double> %40, %47
  %49 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %50 = load i64* %49, align 8
  %51 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %52 = load i64* %51, align 8
  %53 = add i64 %50, %52
  %extract94 = add i64 %53, 995328
  %54 = getelementptr inbounds double addrspace(1)* %C, i64 %extract94
  %ptrTypeCast110 = bitcast double addrspace(1)* %54 to <16 x double> addrspace(1)*
  %55 = load <16 x double> addrspace(1)* %ptrTypeCast110, align 8
  %56 = fadd <16 x double> %48, %55
  %57 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %58 = load i64* %57, align 8
  %59 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %60 = load i64* %59, align 8
  %61 = add i64 %58, %60
  %extract113 = add i64 %61, 1216512
  %62 = getelementptr inbounds double addrspace(1)* %C, i64 %extract113
  %ptrTypeCast129 = bitcast double addrspace(1)* %62 to <16 x double> addrspace(1)*
  %63 = load <16 x double> addrspace(1)* %ptrTypeCast129, align 8
  %64 = fsub <16 x double> %56, %63
  %65 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %66 = load i64* %65, align 8
  %67 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %68 = load i64* %67, align 8
  %69 = add i64 %66, %68
  %extract132 = add i64 %69, 1658880
  %70 = getelementptr inbounds double addrspace(1)* %C, i64 %extract132
  %ptrTypeCast148 = bitcast double addrspace(1)* %70 to <16 x double> addrspace(1)*
  %71 = load <16 x double> addrspace(1)* %ptrTypeCast148, align 8
  %72 = fmul <16 x double> %71, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %73 = fadd <16 x double> %64, %72
  %74 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %75 = load i64* %74, align 8
  %76 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %77 = load i64* %76, align 8
  %78 = add i64 %75, %77
  %extract151 = add i64 %78, 1437696
  %79 = getelementptr inbounds double addrspace(1)* %C, i64 %extract151
  %ptrTypeCast167 = bitcast double addrspace(1)* %79 to <16 x double> addrspace(1)*
  %80 = load <16 x double> addrspace(1)* %ptrTypeCast167, align 8
  %81 = fmul <16 x double> %80, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %82 = fadd <16 x double> %73, %81
  %83 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %84 = load i64* %83, align 8
  %85 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %86 = load i64* %85, align 8
  %87 = add i64 %84, %86
  %extract170 = add i64 %87, 1548288
  %88 = getelementptr inbounds double addrspace(1)* %C, i64 %extract170
  %ptrTypeCast186 = bitcast double addrspace(1)* %88 to <16 x double> addrspace(1)*
  %89 = load <16 x double> addrspace(1)* %ptrTypeCast186, align 8
  %90 = fmul <16 x double> %89, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %91 = fadd <16 x double> %82, %90
  %92 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %93 = load i64* %92, align 8
  %94 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %95 = load i64* %94, align 8
  %96 = add i64 %93, %95
  %97 = getelementptr inbounds double addrspace(1)* %C, i64 %96
  %ptrTypeCast205 = bitcast double addrspace(1)* %97 to <16 x double> addrspace(1)*
  %98 = load <16 x double> addrspace(1)* %ptrTypeCast205, align 8
  %99 = fmul <16 x double> %98, <double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01>
  %100 = fsub <16 x double> %32, %99
  %101 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %102 = load i64* %101, align 8
  %103 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %104 = load i64* %103, align 8
  %105 = add i64 %102, %104
  %extract208 = add i64 %105, 552960
  %106 = getelementptr inbounds double addrspace(1)* %C, i64 %extract208
  %ptrTypeCast224 = bitcast double addrspace(1)* %106 to <16 x double> addrspace(1)*
  %107 = load <16 x double> addrspace(1)* %ptrTypeCast224, align 8
  %108 = fmul <16 x double> %107, <double 2.650000e+00, double 2.650000e+00, double 2.650000e+00, double 2.650000e+00, double 2.650000e+00, double 2.650000e+00, double 2.650000e+00, double 2.650000e+00, double 2.650000e+00, double 2.650000e+00, double 2.650000e+00, double 2.650000e+00, double 2.650000e+00, double 2.650000e+00, double 2.650000e+00, double 2.650000e+00>
  %109 = fadd <16 x double> %100, %108
  %110 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %111 = load i64* %110, align 8
  %112 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %113 = load i64* %112, align 8
  %114 = add i64 %111, %113
  %extract227 = add i64 %114, 995328
  %115 = getelementptr inbounds double addrspace(1)* %C, i64 %extract227
  %ptrTypeCast243 = bitcast double addrspace(1)* %115 to <16 x double> addrspace(1)*
  %116 = load <16 x double> addrspace(1)* %ptrTypeCast243, align 8
  %117 = fadd <16 x double> %109, %116
  %118 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %119 = load i64* %118, align 8
  %120 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %121 = load i64* %120, align 8
  %122 = add i64 %119, %121
  %extract246 = add i64 %122, 1658880
  %123 = getelementptr inbounds double addrspace(1)* %C, i64 %extract246
  %ptrTypeCast262 = bitcast double addrspace(1)* %123 to <16 x double> addrspace(1)*
  %124 = load <16 x double> addrspace(1)* %ptrTypeCast262, align 8
  %125 = fmul <16 x double> %124, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %126 = fadd <16 x double> %117, %125
  %127 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %128 = load i64* %127, align 8
  %129 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %130 = load i64* %129, align 8
  %131 = add i64 %128, %130
  %extract265 = add i64 %131, 1437696
  %132 = getelementptr inbounds double addrspace(1)* %C, i64 %extract265
  %ptrTypeCast281 = bitcast double addrspace(1)* %132 to <16 x double> addrspace(1)*
  %133 = load <16 x double> addrspace(1)* %ptrTypeCast281, align 8
  %134 = fmul <16 x double> %133, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %135 = fadd <16 x double> %126, %134
  %136 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %137 = load i64* %136, align 8
  %138 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %139 = load i64* %138, align 8
  %140 = add i64 %137, %139
  %extract284 = add i64 %140, 1548288
  %141 = getelementptr inbounds double addrspace(1)* %C, i64 %extract284
  %ptrTypeCast300 = bitcast double addrspace(1)* %141 to <16 x double> addrspace(1)*
  %142 = load <16 x double> addrspace(1)* %ptrTypeCast300, align 8
  %143 = fmul <16 x double> %142, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %144 = fadd <16 x double> %135, %143
  %145 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %146 = load i64* %145, align 8
  %147 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %148 = load i64* %147, align 8
  %149 = add i64 %146, %148
  %150 = getelementptr inbounds double addrspace(1)* %C, i64 %149
  %ptrTypeCast319 = bitcast double addrspace(1)* %150 to <16 x double> addrspace(1)*
  %151 = load <16 x double> addrspace(1)* %ptrTypeCast319, align 8
  %152 = fadd <16 x double> %32, %151
  %153 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %154 = load i64* %153, align 8
  %155 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %156 = load i64* %155, align 8
  %157 = add i64 %154, %156
  %extract322 = add i64 %157, 552960
  %158 = getelementptr inbounds double addrspace(1)* %C, i64 %extract322
  %ptrTypeCast338 = bitcast double addrspace(1)* %158 to <16 x double> addrspace(1)*
  %159 = load <16 x double> addrspace(1)* %ptrTypeCast338, align 8
  %160 = fmul <16 x double> %159, <double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00>
  %161 = fadd <16 x double> %152, %160
  %162 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %163 = load i64* %162, align 8
  %164 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %165 = load i64* %164, align 8
  %166 = add i64 %163, %165
  %extract341 = add i64 %166, 995328
  %167 = getelementptr inbounds double addrspace(1)* %C, i64 %extract341
  %ptrTypeCast357 = bitcast double addrspace(1)* %167 to <16 x double> addrspace(1)*
  %168 = load <16 x double> addrspace(1)* %ptrTypeCast357, align 8
  %169 = fadd <16 x double> %161, %168
  %170 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %171 = load i64* %170, align 8
  %172 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %173 = load i64* %172, align 8
  %174 = add i64 %171, %173
  %extract360 = add i64 %174, 1105920
  %175 = getelementptr inbounds double addrspace(1)* %C, i64 %extract360
  %ptrTypeCast376 = bitcast double addrspace(1)* %175 to <16 x double> addrspace(1)*
  %176 = load <16 x double> addrspace(1)* %ptrTypeCast376, align 8
  %177 = fmul <16 x double> %176, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %178 = fadd <16 x double> %169, %177
  %179 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %180 = load i64* %179, align 8
  %181 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %182 = load i64* %181, align 8
  %183 = add i64 %180, %182
  %extract379 = add i64 %183, 1216512
  %184 = getelementptr inbounds double addrspace(1)* %C, i64 %extract379
  %ptrTypeCast395 = bitcast double addrspace(1)* %184 to <16 x double> addrspace(1)*
  %185 = load <16 x double> addrspace(1)* %ptrTypeCast395, align 8
  %186 = fadd <16 x double> %178, %185
  %187 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %188 = load i64* %187, align 8
  %189 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %190 = load i64* %189, align 8
  %191 = add i64 %188, %190
  %extract398 = add i64 %191, 1658880
  %192 = getelementptr inbounds double addrspace(1)* %C, i64 %extract398
  %ptrTypeCast414 = bitcast double addrspace(1)* %192 to <16 x double> addrspace(1)*
  %193 = load <16 x double> addrspace(1)* %ptrTypeCast414, align 8
  %194 = fmul <16 x double> %193, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %195 = fadd <16 x double> %186, %194
  %196 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %197 = load i64* %196, align 8
  %198 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %199 = load i64* %198, align 8
  %200 = add i64 %197, %199
  %extract417 = add i64 %200, 1437696
  %201 = getelementptr inbounds double addrspace(1)* %C, i64 %extract417
  %ptrTypeCast433 = bitcast double addrspace(1)* %201 to <16 x double> addrspace(1)*
  %202 = load <16 x double> addrspace(1)* %ptrTypeCast433, align 8
  %203 = fmul <16 x double> %202, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %204 = fadd <16 x double> %195, %203
  %205 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %206 = load i64* %205, align 8
  %207 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %208 = load i64* %207, align 8
  %209 = add i64 %206, %208
  %extract436 = add i64 %209, 1548288
  %210 = getelementptr inbounds double addrspace(1)* %C, i64 %extract436
  %ptrTypeCast452 = bitcast double addrspace(1)* %210 to <16 x double> addrspace(1)*
  %211 = load <16 x double> addrspace(1)* %ptrTypeCast452, align 8
  %212 = fmul <16 x double> %211, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %213 = fadd <16 x double> %204, %212
  %214 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %215 = load i64* %214, align 8
  %216 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %217 = load i64* %216, align 8
  %218 = add i64 %215, %217
  %219 = getelementptr inbounds double addrspace(1)* %C, i64 %218
  %ptrTypeCast471 = bitcast double addrspace(1)* %219 to <16 x double> addrspace(1)*
  %220 = load <16 x double> addrspace(1)* %ptrTypeCast471, align 8
  %221 = fmul <16 x double> %220, <double 1.400000e+00, double 1.400000e+00, double 1.400000e+00, double 1.400000e+00, double 1.400000e+00, double 1.400000e+00, double 1.400000e+00, double 1.400000e+00, double 1.400000e+00, double 1.400000e+00, double 1.400000e+00, double 1.400000e+00, double 1.400000e+00, double 1.400000e+00, double 1.400000e+00, double 1.400000e+00>
  %222 = fadd <16 x double> %32, %221
  %223 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %224 = load i64* %223, align 8
  %225 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %226 = load i64* %225, align 8
  %227 = add i64 %224, %226
  %extract474 = add i64 %227, 552960
  %228 = getelementptr inbounds double addrspace(1)* %C, i64 %extract474
  %ptrTypeCast490 = bitcast double addrspace(1)* %228 to <16 x double> addrspace(1)*
  %229 = load <16 x double> addrspace(1)* %ptrTypeCast490, align 8
  %230 = fmul <16 x double> %229, <double 1.440000e+01, double 1.440000e+01, double 1.440000e+01, double 1.440000e+01, double 1.440000e+01, double 1.440000e+01, double 1.440000e+01, double 1.440000e+01, double 1.440000e+01, double 1.440000e+01, double 1.440000e+01, double 1.440000e+01, double 1.440000e+01, double 1.440000e+01, double 1.440000e+01, double 1.440000e+01>
  %231 = fadd <16 x double> %222, %230
  %232 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %233 = load i64* %232, align 8
  %234 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %235 = load i64* %234, align 8
  %236 = add i64 %233, %235
  %extract493 = add i64 %236, 995328
  %237 = getelementptr inbounds double addrspace(1)* %C, i64 %extract493
  %ptrTypeCast509 = bitcast double addrspace(1)* %237 to <16 x double> addrspace(1)*
  %238 = load <16 x double> addrspace(1)* %ptrTypeCast509, align 8
  %239 = fadd <16 x double> %231, %238
  %240 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %241 = load i64* %240, align 8
  %242 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %243 = load i64* %242, align 8
  %244 = add i64 %241, %243
  %extract512 = add i64 %244, 1105920
  %245 = getelementptr inbounds double addrspace(1)* %C, i64 %extract512
  %ptrTypeCast528 = bitcast double addrspace(1)* %245 to <16 x double> addrspace(1)*
  %246 = load <16 x double> addrspace(1)* %ptrTypeCast528, align 8
  %247 = fmul <16 x double> %246, <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>
  %248 = fadd <16 x double> %239, %247
  %249 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %250 = load i64* %249, align 8
  %251 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %252 = load i64* %251, align 8
  %253 = add i64 %250, %252
  %extract531 = add i64 %253, 1216512
  %254 = getelementptr inbounds double addrspace(1)* %C, i64 %extract531
  %ptrTypeCast547 = bitcast double addrspace(1)* %254 to <16 x double> addrspace(1)*
  %255 = load <16 x double> addrspace(1)* %ptrTypeCast547, align 8
  %256 = fmul <16 x double> %255, <double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00>
  %257 = fadd <16 x double> %248, %256
  %258 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %259 = load i64* %258, align 8
  %260 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %261 = load i64* %260, align 8
  %262 = add i64 %259, %261
  %extract550 = add i64 %262, 1658880
  %263 = getelementptr inbounds double addrspace(1)* %C, i64 %extract550
  %ptrTypeCast566 = bitcast double addrspace(1)* %263 to <16 x double> addrspace(1)*
  %264 = load <16 x double> addrspace(1)* %ptrTypeCast566, align 8
  %265 = fmul <16 x double> %264, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %266 = fadd <16 x double> %257, %265
  %267 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %268 = load i64* %267, align 8
  %269 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %270 = load i64* %269, align 8
  %271 = add i64 %268, %270
  %extract569 = add i64 %271, 1437696
  %272 = getelementptr inbounds double addrspace(1)* %C, i64 %extract569
  %ptrTypeCast585 = bitcast double addrspace(1)* %272 to <16 x double> addrspace(1)*
  %273 = load <16 x double> addrspace(1)* %ptrTypeCast585, align 8
  %274 = fmul <16 x double> %273, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %275 = fadd <16 x double> %266, %274
  %276 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %277 = load i64* %276, align 8
  %278 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %279 = load i64* %278, align 8
  %280 = add i64 %277, %279
  %extract588 = add i64 %280, 1548288
  %281 = getelementptr inbounds double addrspace(1)* %C, i64 %extract588
  %ptrTypeCast604 = bitcast double addrspace(1)* %281 to <16 x double> addrspace(1)*
  %282 = load <16 x double> addrspace(1)* %ptrTypeCast604, align 8
  %283 = fmul <16 x double> %282, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %284 = fadd <16 x double> %275, %283
  %285 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %286 = load i64* %285, align 8
  %287 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %288 = load i64* %287, align 8
  %289 = add i64 %286, %288
  %extract607 = add i64 %289, 331776
  %290 = getelementptr inbounds double addrspace(1)* %C, i64 %extract607
  %ptrTypeCast623 = bitcast double addrspace(1)* %290 to <16 x double> addrspace(1)*
  %291 = load <16 x double> addrspace(1)* %ptrTypeCast623, align 8
  %292 = fsub <16 x double> %32, %291
  %293 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %294 = load i64* %293, align 8
  %295 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %296 = load i64* %295, align 8
  %297 = add i64 %294, %296
  %extract626 = add i64 %297, 552960
  %298 = getelementptr inbounds double addrspace(1)* %C, i64 %extract626
  %ptrTypeCast642 = bitcast double addrspace(1)* %298 to <16 x double> addrspace(1)*
  %299 = load <16 x double> addrspace(1)* %ptrTypeCast642, align 8
  %300 = fsub <16 x double> %292, %299
  %301 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %302 = load i64* %301, align 8
  %303 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %304 = load i64* %303, align 8
  %305 = add i64 %302, %304
  %extract645 = add i64 %305, 1105920
  %306 = getelementptr inbounds double addrspace(1)* %C, i64 %extract645
  %ptrTypeCast661 = bitcast double addrspace(1)* %306 to <16 x double> addrspace(1)*
  %307 = load <16 x double> addrspace(1)* %ptrTypeCast661, align 8
  %308 = fmul <16 x double> %307, <double 2.500000e-01, double 2.500000e-01, double 2.500000e-01, double 2.500000e-01, double 2.500000e-01, double 2.500000e-01, double 2.500000e-01, double 2.500000e-01, double 2.500000e-01, double 2.500000e-01, double 2.500000e-01, double 2.500000e-01, double 2.500000e-01, double 2.500000e-01, double 2.500000e-01, double 2.500000e-01>
  %309 = fsub <16 x double> %300, %308
  %310 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %311 = load i64* %310, align 8
  %312 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %313 = load i64* %312, align 8
  %314 = add i64 %311, %313
  %extract664 = add i64 %314, 1216512
  %315 = getelementptr inbounds double addrspace(1)* %C, i64 %extract664
  %ptrTypeCast680 = bitcast double addrspace(1)* %315 to <16 x double> addrspace(1)*
  %316 = load <16 x double> addrspace(1)* %ptrTypeCast680, align 8
  %317 = fmul <16 x double> %316, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %318 = fadd <16 x double> %309, %317
  %319 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %320 = load i64* %319, align 8
  %321 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %322 = load i64* %321, align 8
  %323 = add i64 %320, %322
  %extract683 = add i64 %323, 1658880
  %324 = getelementptr inbounds double addrspace(1)* %C, i64 %extract683
  %ptrTypeCast699 = bitcast double addrspace(1)* %324 to <16 x double> addrspace(1)*
  %325 = load <16 x double> addrspace(1)* %ptrTypeCast699, align 8
  %326 = fmul <16 x double> %325, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %327 = fadd <16 x double> %318, %326
  %328 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %329 = load i64* %328, align 8
  %330 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %331 = load i64* %330, align 8
  %332 = add i64 %329, %331
  %extract702 = add i64 %332, 2322432
  %333 = getelementptr inbounds double addrspace(1)* %C, i64 %extract702
  %ptrTypeCast718 = bitcast double addrspace(1)* %333 to <16 x double> addrspace(1)*
  %334 = load <16 x double> addrspace(1)* %ptrTypeCast718, align 8
  %335 = fsub <16 x double> %327, %334
  %336 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %337 = load i64* %336, align 8
  %338 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %339 = load i64* %338, align 8
  %340 = add i64 %337, %339
  %extract721 = add i64 %340, 1437696
  %341 = getelementptr inbounds double addrspace(1)* %C, i64 %extract721
  %ptrTypeCast737 = bitcast double addrspace(1)* %341 to <16 x double> addrspace(1)*
  %342 = load <16 x double> addrspace(1)* %ptrTypeCast737, align 8
  %343 = fmul <16 x double> %342, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %344 = fadd <16 x double> %335, %343
  %345 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %346 = load i64* %345, align 8
  %347 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %348 = load i64* %347, align 8
  %349 = add i64 %346, %348
  %extract740 = add i64 %349, 1548288
  %350 = getelementptr inbounds double addrspace(1)* %C, i64 %extract740
  %ptrTypeCast756 = bitcast double addrspace(1)* %350 to <16 x double> addrspace(1)*
  %351 = load <16 x double> addrspace(1)* %ptrTypeCast756, align 8
  %352 = fmul <16 x double> %351, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %353 = fadd <16 x double> %344, %352
  %354 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %355 = load i64* %354, align 8
  %356 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %357 = load i64* %356, align 8
  %358 = add i64 %355, %357
  %359 = getelementptr inbounds double addrspace(1)* %C, i64 %358
  %ptrTypeCast775 = bitcast double addrspace(1)* %359 to <16 x double> addrspace(1)*
  %360 = load <16 x double> addrspace(1)* %ptrTypeCast775, align 8
  %361 = fadd <16 x double> %32, %360
  %362 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %363 = load i64* %362, align 8
  %364 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %365 = load i64* %364, align 8
  %366 = add i64 %363, %365
  %extract778 = add i64 %366, 331776
  %367 = getelementptr inbounds double addrspace(1)* %C, i64 %extract778
  %ptrTypeCast794 = bitcast double addrspace(1)* %367 to <16 x double> addrspace(1)*
  %368 = load <16 x double> addrspace(1)* %ptrTypeCast794, align 8
  %369 = fmul <16 x double> %368, <double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00>
  %370 = fadd <16 x double> %361, %369
  %371 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %372 = load i64* %371, align 8
  %373 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %374 = load i64* %373, align 8
  %375 = add i64 %372, %374
  %extract797 = add i64 %375, 552960
  %376 = getelementptr inbounds double addrspace(1)* %C, i64 %extract797
  %ptrTypeCast813 = bitcast double addrspace(1)* %376 to <16 x double> addrspace(1)*
  %377 = load <16 x double> addrspace(1)* %ptrTypeCast813, align 8
  %378 = fmul <16 x double> %377, <double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00>
  %379 = fadd <16 x double> %370, %378
  %380 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %381 = load i64* %380, align 8
  %382 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %383 = load i64* %382, align 8
  %384 = add i64 %381, %383
  %extract816 = add i64 %384, 995328
  %385 = getelementptr inbounds double addrspace(1)* %C, i64 %extract816
  %ptrTypeCast832 = bitcast double addrspace(1)* %385 to <16 x double> addrspace(1)*
  %386 = load <16 x double> addrspace(1)* %ptrTypeCast832, align 8
  %387 = fadd <16 x double> %379, %386
  %388 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %389 = load i64* %388, align 8
  %390 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %391 = load i64* %390, align 8
  %392 = add i64 %389, %391
  %extract835 = add i64 %392, 1105920
  %393 = getelementptr inbounds double addrspace(1)* %C, i64 %extract835
  %ptrTypeCast851 = bitcast double addrspace(1)* %393 to <16 x double> addrspace(1)*
  %394 = load <16 x double> addrspace(1)* %ptrTypeCast851, align 8
  %395 = fmul <16 x double> %394, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %396 = fadd <16 x double> %387, %395
  %397 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %398 = load i64* %397, align 8
  %399 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %400 = load i64* %399, align 8
  %401 = add i64 %398, %400
  %extract854 = add i64 %401, 1216512
  %402 = getelementptr inbounds double addrspace(1)* %C, i64 %extract854
  %ptrTypeCast870 = bitcast double addrspace(1)* %402 to <16 x double> addrspace(1)*
  %403 = load <16 x double> addrspace(1)* %ptrTypeCast870, align 8
  %404 = fmul <16 x double> %403, <double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00>
  %405 = fadd <16 x double> %396, %404
  %406 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %407 = load i64* %406, align 8
  %408 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %409 = load i64* %408, align 8
  %410 = add i64 %407, %409
  %extract873 = add i64 %410, 1658880
  %411 = getelementptr inbounds double addrspace(1)* %C, i64 %extract873
  %ptrTypeCast889 = bitcast double addrspace(1)* %411 to <16 x double> addrspace(1)*
  %412 = load <16 x double> addrspace(1)* %ptrTypeCast889, align 8
  %413 = fmul <16 x double> %412, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %414 = fadd <16 x double> %405, %413
  %415 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %416 = load i64* %415, align 8
  %417 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %418 = load i64* %417, align 8
  %419 = add i64 %416, %418
  %extract892 = add i64 %419, 1437696
  %420 = getelementptr inbounds double addrspace(1)* %C, i64 %extract892
  %ptrTypeCast908 = bitcast double addrspace(1)* %420 to <16 x double> addrspace(1)*
  %421 = load <16 x double> addrspace(1)* %ptrTypeCast908, align 8
  %422 = fmul <16 x double> %421, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %423 = fadd <16 x double> %414, %422
  %424 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %425 = load i64* %424, align 8
  %426 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %427 = load i64* %426, align 8
  %428 = add i64 %425, %427
  %extract911 = add i64 %428, 1548288
  %429 = getelementptr inbounds double addrspace(1)* %C, i64 %extract911
  %ptrTypeCast927 = bitcast double addrspace(1)* %429 to <16 x double> addrspace(1)*
  %430 = load <16 x double> addrspace(1)* %ptrTypeCast927, align 8
  %431 = fmul <16 x double> %430, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %432 = fadd <16 x double> %423, %431
  %433 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %434 = load i64* %433, align 8
  %435 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %436 = load i64* %435, align 8
  %437 = add i64 %434, %436
  %438 = getelementptr inbounds double addrspace(1)* %C, i64 %437
  %ptrTypeCast946 = bitcast double addrspace(1)* %438 to <16 x double> addrspace(1)*
  %439 = load <16 x double> addrspace(1)* %ptrTypeCast946, align 8
  %440 = fadd <16 x double> %32, %439
  %441 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %442 = load i64* %441, align 8
  %443 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %444 = load i64* %443, align 8
  %445 = add i64 %442, %444
  %extract949 = add i64 %445, 552960
  %446 = getelementptr inbounds double addrspace(1)* %C, i64 %extract949
  %ptrTypeCast965 = bitcast double addrspace(1)* %446 to <16 x double> addrspace(1)*
  %447 = load <16 x double> addrspace(1)* %ptrTypeCast965, align 8
  %448 = fmul <16 x double> %447, <double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00>
  %449 = fadd <16 x double> %440, %448
  %450 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %451 = load i64* %450, align 8
  %452 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %453 = load i64* %452, align 8
  %454 = add i64 %451, %453
  %extract968 = add i64 %454, 995328
  %455 = getelementptr inbounds double addrspace(1)* %C, i64 %extract968
  %ptrTypeCast984 = bitcast double addrspace(1)* %455 to <16 x double> addrspace(1)*
  %456 = load <16 x double> addrspace(1)* %ptrTypeCast984, align 8
  %457 = fadd <16 x double> %449, %456
  %458 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %459 = load i64* %458, align 8
  %460 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %461 = load i64* %460, align 8
  %462 = add i64 %459, %461
  %extract987 = add i64 %462, 1105920
  %463 = getelementptr inbounds double addrspace(1)* %C, i64 %extract987
  %ptrTypeCast1003 = bitcast double addrspace(1)* %463 to <16 x double> addrspace(1)*
  %464 = load <16 x double> addrspace(1)* %ptrTypeCast1003, align 8
  %465 = fmul <16 x double> %464, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %466 = fadd <16 x double> %457, %465
  %467 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %468 = load i64* %467, align 8
  %469 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %470 = load i64* %469, align 8
  %471 = add i64 %468, %470
  %extract1006 = add i64 %471, 1216512
  %472 = getelementptr inbounds double addrspace(1)* %C, i64 %extract1006
  %ptrTypeCast1022 = bitcast double addrspace(1)* %472 to <16 x double> addrspace(1)*
  %473 = load <16 x double> addrspace(1)* %ptrTypeCast1022, align 8
  %474 = fadd <16 x double> %466, %473
  %475 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %476 = load i64* %475, align 8
  %477 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %478 = load i64* %477, align 8
  %479 = add i64 %476, %478
  %extract1025 = add i64 %479, 1658880
  %480 = getelementptr inbounds double addrspace(1)* %C, i64 %extract1025
  %ptrTypeCast1041 = bitcast double addrspace(1)* %480 to <16 x double> addrspace(1)*
  %481 = load <16 x double> addrspace(1)* %ptrTypeCast1041, align 8
  %482 = fmul <16 x double> %481, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %483 = fadd <16 x double> %474, %482
  %484 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %485 = load i64* %484, align 8
  %486 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %487 = load i64* %486, align 8
  %488 = add i64 %485, %487
  %extract1044 = add i64 %488, 442368
  %489 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1044
  %ptrTypeCast1060 = bitcast double addrspace(1)* %489 to <16 x double> addrspace(1)*
  %490 = load <16 x double> addrspace(1)* %ptrTypeCast1060, align 8
  %491 = fmul <16 x double> %490, %91
  %492 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %493 = load i64* %492, align 8
  %494 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %495 = load i64* %494, align 8
  %496 = add i64 %493, %495
  %extract1063 = add i64 %496, 110592
  %497 = getelementptr inbounds double addrspace(1)* %C, i64 %extract1063
  %ptrTypeCast1079 = bitcast double addrspace(1)* %497 to <16 x double> addrspace(1)*
  %498 = load <16 x double> addrspace(1)* %ptrTypeCast1079, align 8
  %499 = fmul <16 x double> %491, %498
  %500 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %501 = load i64* %500, align 8
  %502 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %503 = load i64* %502, align 8
  %504 = add i64 %501, %503
  %extract1082 = add i64 %504, 110592
  %505 = getelementptr inbounds double addrspace(1)* %C, i64 %extract1082
  %ptrTypeCast1098 = bitcast double addrspace(1)* %505 to <16 x double> addrspace(1)*
  %506 = load <16 x double> addrspace(1)* %ptrTypeCast1098, align 8
  %507 = fmul <16 x double> %499, %506
  %508 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %509 = load i64* %508, align 8
  %510 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %511 = load i64* %510, align 8
  %512 = add i64 %509, %511
  %extract1101 = add i64 %512, 442368
  %513 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1101
  %ptrTypeCast1117 = bitcast double addrspace(1)* %513 to <16 x double> addrspace(1)*
  store <16 x double> %507, <16 x double> addrspace(1)* %ptrTypeCast1117, align 8
  %514 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %515 = load i64* %514, align 8
  %516 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %517 = load i64* %516, align 8
  %518 = add i64 %515, %517
  %extract1120 = add i64 %518, 442368
  %519 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract1120
  %ptrTypeCast1136 = bitcast double addrspace(1)* %519 to <16 x double> addrspace(1)*
  %520 = load <16 x double> addrspace(1)* %ptrTypeCast1136, align 8
  %521 = fmul <16 x double> %520, %91
  %522 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %523 = load i64* %522, align 8
  %524 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %525 = load i64* %524, align 8
  %526 = add i64 %523, %525
  %527 = getelementptr inbounds double addrspace(1)* %C, i64 %526
  %ptrTypeCast1155 = bitcast double addrspace(1)* %527 to <16 x double> addrspace(1)*
  %528 = load <16 x double> addrspace(1)* %ptrTypeCast1155, align 8
  %529 = fmul <16 x double> %521, %528
  %530 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %531 = load i64* %530, align 8
  %532 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %533 = load i64* %532, align 8
  %534 = add i64 %531, %533
  %extract1158 = add i64 %534, 442368
  %535 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract1158
  %ptrTypeCast1174 = bitcast double addrspace(1)* %535 to <16 x double> addrspace(1)*
  store <16 x double> %529, <16 x double> addrspace(1)* %ptrTypeCast1174, align 8
  %536 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %537 = load i64* %536, align 8
  %538 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %539 = load i64* %538, align 8
  %540 = add i64 %537, %539
  %extract1177 = add i64 %540, 884736
  %541 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1177
  %ptrTypeCast1193 = bitcast double addrspace(1)* %541 to <16 x double> addrspace(1)*
  %542 = load <16 x double> addrspace(1)* %ptrTypeCast1193, align 8
  %543 = fmul <16 x double> %542, %144
  %544 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %545 = load i64* %544, align 8
  %546 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %547 = load i64* %546, align 8
  %548 = add i64 %545, %547
  %extract1196 = add i64 %548, 110592
  %549 = getelementptr inbounds double addrspace(1)* %C, i64 %extract1196
  %ptrTypeCast1212 = bitcast double addrspace(1)* %549 to <16 x double> addrspace(1)*
  %550 = load <16 x double> addrspace(1)* %ptrTypeCast1212, align 8
  %551 = fmul <16 x double> %543, %550
  %552 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %553 = load i64* %552, align 8
  %554 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %555 = load i64* %554, align 8
  %556 = add i64 %553, %555
  %extract1215 = add i64 %556, 442368
  %557 = getelementptr inbounds double addrspace(1)* %C, i64 %extract1215
  %ptrTypeCast1231 = bitcast double addrspace(1)* %557 to <16 x double> addrspace(1)*
  %558 = load <16 x double> addrspace(1)* %ptrTypeCast1231, align 8
  %559 = fmul <16 x double> %551, %558
  %560 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %561 = load i64* %560, align 8
  %562 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %563 = load i64* %562, align 8
  %564 = add i64 %561, %563
  %extract1234 = add i64 %564, 884736
  %565 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1234
  %ptrTypeCast1250 = bitcast double addrspace(1)* %565 to <16 x double> addrspace(1)*
  store <16 x double> %559, <16 x double> addrspace(1)* %ptrTypeCast1250, align 8
  %566 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %567 = load i64* %566, align 8
  %568 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %569 = load i64* %568, align 8
  %570 = add i64 %567, %569
  %extract1253 = add i64 %570, 884736
  %571 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract1253
  %ptrTypeCast1269 = bitcast double addrspace(1)* %571 to <16 x double> addrspace(1)*
  %572 = load <16 x double> addrspace(1)* %ptrTypeCast1269, align 8
  %573 = fmul <16 x double> %572, %144
  %574 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %575 = load i64* %574, align 8
  %576 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %577 = load i64* %576, align 8
  %578 = add i64 %575, %577
  %extract1272 = add i64 %578, 552960
  %579 = getelementptr inbounds double addrspace(1)* %C, i64 %extract1272
  %ptrTypeCast1288 = bitcast double addrspace(1)* %579 to <16 x double> addrspace(1)*
  %580 = load <16 x double> addrspace(1)* %ptrTypeCast1288, align 8
  %581 = fmul <16 x double> %573, %580
  %582 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %583 = load i64* %582, align 8
  %584 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %585 = load i64* %584, align 8
  %586 = add i64 %583, %585
  %extract1291 = add i64 %586, 884736
  %587 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract1291
  %ptrTypeCast1307 = bitcast double addrspace(1)* %587 to <16 x double> addrspace(1)*
  store <16 x double> %581, <16 x double> addrspace(1)* %ptrTypeCast1307, align 8
  %588 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %589 = load i64* %588, align 8
  %590 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %591 = load i64* %590, align 8
  %592 = add i64 %589, %591
  %extract1310 = add i64 %592, 995328
  %593 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1310
  %ptrTypeCast1326 = bitcast double addrspace(1)* %593 to <16 x double> addrspace(1)*
  %594 = load <16 x double> addrspace(1)* %ptrTypeCast1326, align 8
  %595 = fmul <16 x double> %594, %213
  %596 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %597 = load i64* %596, align 8
  %598 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %599 = load i64* %598, align 8
  %600 = add i64 %597, %599
  %extract1329 = add i64 %600, 221184
  %601 = getelementptr inbounds double addrspace(1)* %C, i64 %extract1329
  %ptrTypeCast1345 = bitcast double addrspace(1)* %601 to <16 x double> addrspace(1)*
  %602 = load <16 x double> addrspace(1)* %ptrTypeCast1345, align 8
  %603 = fmul <16 x double> %595, %602
  %604 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %605 = load i64* %604, align 8
  %606 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %607 = load i64* %606, align 8
  %608 = add i64 %605, %607
  %extract1348 = add i64 %608, 110592
  %609 = getelementptr inbounds double addrspace(1)* %C, i64 %extract1348
  %ptrTypeCast1364 = bitcast double addrspace(1)* %609 to <16 x double> addrspace(1)*
  %610 = load <16 x double> addrspace(1)* %ptrTypeCast1364, align 8
  %611 = fmul <16 x double> %603, %610
  %612 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %613 = load i64* %612, align 8
  %614 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %615 = load i64* %614, align 8
  %616 = add i64 %613, %615
  %extract1367 = add i64 %616, 995328
  %617 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1367
  %ptrTypeCast1383 = bitcast double addrspace(1)* %617 to <16 x double> addrspace(1)*
  store <16 x double> %611, <16 x double> addrspace(1)* %ptrTypeCast1383, align 8
  %618 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %619 = load i64* %618, align 8
  %620 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %621 = load i64* %620, align 8
  %622 = add i64 %619, %621
  %extract1386 = add i64 %622, 995328
  %623 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract1386
  %ptrTypeCast1402 = bitcast double addrspace(1)* %623 to <16 x double> addrspace(1)*
  %624 = load <16 x double> addrspace(1)* %ptrTypeCast1402, align 8
  %625 = fmul <16 x double> %624, %213
  %626 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %627 = load i64* %626, align 8
  %628 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %629 = load i64* %628, align 8
  %630 = add i64 %627, %629
  %extract1405 = add i64 %630, 442368
  %631 = getelementptr inbounds double addrspace(1)* %C, i64 %extract1405
  %ptrTypeCast1421 = bitcast double addrspace(1)* %631 to <16 x double> addrspace(1)*
  %632 = load <16 x double> addrspace(1)* %ptrTypeCast1421, align 8
  %633 = fmul <16 x double> %625, %632
  %634 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %635 = load i64* %634, align 8
  %636 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %637 = load i64* %636, align 8
  %638 = add i64 %635, %637
  %extract1424 = add i64 %638, 995328
  %639 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract1424
  %ptrTypeCast1440 = bitcast double addrspace(1)* %639 to <16 x double> addrspace(1)*
  store <16 x double> %633, <16 x double> addrspace(1)* %ptrTypeCast1440, align 8
  %640 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %641 = load i64* %640, align 8
  %642 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %643 = load i64* %642, align 8
  %644 = add i64 %641, %643
  %extract1443 = add i64 %644, 1105920
  %645 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1443
  %ptrTypeCast1459 = bitcast double addrspace(1)* %645 to <16 x double> addrspace(1)*
  %646 = load <16 x double> addrspace(1)* %ptrTypeCast1459, align 8
  %647 = fmul <16 x double> %646, %284
  %648 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %649 = load i64* %648, align 8
  %650 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %651 = load i64* %650, align 8
  %652 = add i64 %649, %651
  %extract1462 = add i64 %652, 221184
  %653 = getelementptr inbounds double addrspace(1)* %C, i64 %extract1462
  %ptrTypeCast1478 = bitcast double addrspace(1)* %653 to <16 x double> addrspace(1)*
  %654 = load <16 x double> addrspace(1)* %ptrTypeCast1478, align 8
  %655 = fmul <16 x double> %647, %654
  %656 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %657 = load i64* %656, align 8
  %658 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %659 = load i64* %658, align 8
  %660 = add i64 %657, %659
  %extract1481 = add i64 %660, 221184
  %661 = getelementptr inbounds double addrspace(1)* %C, i64 %extract1481
  %ptrTypeCast1497 = bitcast double addrspace(1)* %661 to <16 x double> addrspace(1)*
  %662 = load <16 x double> addrspace(1)* %ptrTypeCast1497, align 8
  %663 = fmul <16 x double> %655, %662
  %664 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %665 = load i64* %664, align 8
  %666 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %667 = load i64* %666, align 8
  %668 = add i64 %665, %667
  %extract1500 = add i64 %668, 1105920
  %669 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1500
  %ptrTypeCast1516 = bitcast double addrspace(1)* %669 to <16 x double> addrspace(1)*
  store <16 x double> %663, <16 x double> addrspace(1)* %ptrTypeCast1516, align 8
  %670 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %671 = load i64* %670, align 8
  %672 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %673 = load i64* %672, align 8
  %674 = add i64 %671, %673
  %extract1519 = add i64 %674, 1105920
  %675 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract1519
  %ptrTypeCast1535 = bitcast double addrspace(1)* %675 to <16 x double> addrspace(1)*
  %676 = load <16 x double> addrspace(1)* %ptrTypeCast1535, align 8
  %677 = fmul <16 x double> %676, %284
  %678 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %679 = load i64* %678, align 8
  %680 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %681 = load i64* %680, align 8
  %682 = add i64 %679, %681
  %extract1538 = add i64 %682, 331776
  %683 = getelementptr inbounds double addrspace(1)* %C, i64 %extract1538
  %ptrTypeCast1554 = bitcast double addrspace(1)* %683 to <16 x double> addrspace(1)*
  %684 = load <16 x double> addrspace(1)* %ptrTypeCast1554, align 8
  %685 = fmul <16 x double> %677, %684
  %686 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %687 = load i64* %686, align 8
  %688 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %689 = load i64* %688, align 8
  %690 = add i64 %687, %689
  %extract1557 = add i64 %690, 1105920
  %691 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract1557
  %ptrTypeCast1573 = bitcast double addrspace(1)* %691 to <16 x double> addrspace(1)*
  store <16 x double> %685, <16 x double> addrspace(1)* %ptrTypeCast1573, align 8
  %692 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %693 = load i64* %692, align 8
  %694 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %695 = load i64* %694, align 8
  %696 = add i64 %693, %695
  %extract1576 = add i64 %696, 1216512
  %697 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1576
  %ptrTypeCast1592 = bitcast double addrspace(1)* %697 to <16 x double> addrspace(1)*
  %698 = load <16 x double> addrspace(1)* %ptrTypeCast1592, align 8
  %699 = fmul <16 x double> %698, %353
  %700 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %701 = load i64* %700, align 8
  %702 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %703 = load i64* %702, align 8
  %704 = add i64 %701, %703
  %extract1595 = add i64 %704, 110592
  %705 = getelementptr inbounds double addrspace(1)* %C, i64 %extract1595
  %ptrTypeCast1611 = bitcast double addrspace(1)* %705 to <16 x double> addrspace(1)*
  %706 = load <16 x double> addrspace(1)* %ptrTypeCast1611, align 8
  %707 = fmul <16 x double> %699, %706
  %708 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %709 = load i64* %708, align 8
  %710 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %711 = load i64* %710, align 8
  %712 = add i64 %709, %711
  %extract1614 = add i64 %712, 331776
  %713 = getelementptr inbounds double addrspace(1)* %C, i64 %extract1614
  %ptrTypeCast1630 = bitcast double addrspace(1)* %713 to <16 x double> addrspace(1)*
  %714 = load <16 x double> addrspace(1)* %ptrTypeCast1630, align 8
  %715 = fmul <16 x double> %707, %714
  %716 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %717 = load i64* %716, align 8
  %718 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %719 = load i64* %718, align 8
  %720 = add i64 %717, %719
  %extract1633 = add i64 %720, 1216512
  %721 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1633
  %ptrTypeCast1649 = bitcast double addrspace(1)* %721 to <16 x double> addrspace(1)*
  store <16 x double> %715, <16 x double> addrspace(1)* %ptrTypeCast1649, align 8
  %722 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %723 = load i64* %722, align 8
  %724 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %725 = load i64* %724, align 8
  %726 = add i64 %723, %725
  %extract1652 = add i64 %726, 1216512
  %727 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract1652
  %ptrTypeCast1668 = bitcast double addrspace(1)* %727 to <16 x double> addrspace(1)*
  %728 = load <16 x double> addrspace(1)* %ptrTypeCast1668, align 8
  %729 = fmul <16 x double> %728, %353
  %730 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %731 = load i64* %730, align 8
  %732 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %733 = load i64* %732, align 8
  %734 = add i64 %731, %733
  %extract1671 = add i64 %734, 663552
  %735 = getelementptr inbounds double addrspace(1)* %C, i64 %extract1671
  %ptrTypeCast1687 = bitcast double addrspace(1)* %735 to <16 x double> addrspace(1)*
  %736 = load <16 x double> addrspace(1)* %ptrTypeCast1687, align 8
  %737 = fmul <16 x double> %729, %736
  %738 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %739 = load i64* %738, align 8
  %740 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %741 = load i64* %740, align 8
  %742 = add i64 %739, %741
  %extract1690 = add i64 %742, 1216512
  %743 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract1690
  %ptrTypeCast1706 = bitcast double addrspace(1)* %743 to <16 x double> addrspace(1)*
  store <16 x double> %737, <16 x double> addrspace(1)* %ptrTypeCast1706, align 8
  %744 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %745 = load i64* %744, align 8
  %746 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %747 = load i64* %746, align 8
  %748 = add i64 %745, %747
  %extract1709 = add i64 %748, 3096576
  %749 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1709
  %ptrTypeCast1725 = bitcast double addrspace(1)* %749 to <16 x double> addrspace(1)*
  %750 = load <16 x double> addrspace(1)* %ptrTypeCast1725, align 8
  %751 = fmul <16 x double> %750, %432
  %752 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %753 = load i64* %752, align 8
  %754 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %755 = load i64* %754, align 8
  %756 = add i64 %753, %755
  %extract1728 = add i64 %756, 1105920
  %757 = getelementptr inbounds double addrspace(1)* %C, i64 %extract1728
  %ptrTypeCast1744 = bitcast double addrspace(1)* %757 to <16 x double> addrspace(1)*
  %758 = load <16 x double> addrspace(1)* %ptrTypeCast1744, align 8
  %759 = fmul <16 x double> %751, %758
  %760 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %761 = load i64* %760, align 8
  %762 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %763 = load i64* %762, align 8
  %764 = add i64 %761, %763
  %extract1747 = add i64 %764, 221184
  %765 = getelementptr inbounds double addrspace(1)* %C, i64 %extract1747
  %ptrTypeCast1763 = bitcast double addrspace(1)* %765 to <16 x double> addrspace(1)*
  %766 = load <16 x double> addrspace(1)* %ptrTypeCast1763, align 8
  %767 = fmul <16 x double> %759, %766
  %768 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %769 = load i64* %768, align 8
  %770 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %771 = load i64* %770, align 8
  %772 = add i64 %769, %771
  %extract1766 = add i64 %772, 3096576
  %773 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1766
  %ptrTypeCast1782 = bitcast double addrspace(1)* %773 to <16 x double> addrspace(1)*
  store <16 x double> %767, <16 x double> addrspace(1)* %ptrTypeCast1782, align 8
  %774 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %775 = load i64* %774, align 8
  %776 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %777 = load i64* %776, align 8
  %778 = add i64 %775, %777
  %extract1785 = add i64 %778, 3096576
  %779 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract1785
  %ptrTypeCast1801 = bitcast double addrspace(1)* %779 to <16 x double> addrspace(1)*
  %780 = load <16 x double> addrspace(1)* %ptrTypeCast1801, align 8
  %781 = fmul <16 x double> %780, %432
  %782 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %783 = load i64* %782, align 8
  %784 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %785 = load i64* %784, align 8
  %786 = add i64 %783, %785
  %extract1804 = add i64 %786, 1216512
  %787 = getelementptr inbounds double addrspace(1)* %C, i64 %extract1804
  %ptrTypeCast1820 = bitcast double addrspace(1)* %787 to <16 x double> addrspace(1)*
  %788 = load <16 x double> addrspace(1)* %ptrTypeCast1820, align 8
  %789 = fmul <16 x double> %781, %788
  %790 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %791 = load i64* %790, align 8
  %792 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %793 = load i64* %792, align 8
  %794 = add i64 %791, %793
  %extract1823 = add i64 %794, 3096576
  %795 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract1823
  %ptrTypeCast1839 = bitcast double addrspace(1)* %795 to <16 x double> addrspace(1)*
  store <16 x double> %789, <16 x double> addrspace(1)* %ptrTypeCast1839, align 8
  %796 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %797 = load i64* %796, align 8
  %798 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %799 = load i64* %798, align 8
  %800 = add i64 %797, %799
  %extract1842 = add i64 %800, 4976640
  %801 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1842
  %ptrTypeCast1858 = bitcast double addrspace(1)* %801 to <16 x double> addrspace(1)*
  %802 = load <16 x double> addrspace(1)* %ptrTypeCast1858, align 8
  %803 = fmul <16 x double> %802, %213
  %804 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %805 = load i64* %804, align 8
  %806 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %807 = load i64* %806, align 8
  %808 = add i64 %805, %807
  %extract1861 = add i64 %808, 4976640
  %809 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1861
  %ptrTypeCast1877 = bitcast double addrspace(1)* %809 to <16 x double> addrspace(1)*
  store <16 x double> %803, <16 x double> addrspace(1)* %ptrTypeCast1877, align 8
  %810 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %811 = load i64* %810, align 8
  %812 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %813 = load i64* %812, align 8
  %814 = add i64 %811, %813
  %extract1880 = add i64 %814, 4976640
  %815 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract1880
  %ptrTypeCast1896 = bitcast double addrspace(1)* %815 to <16 x double> addrspace(1)*
  %816 = load <16 x double> addrspace(1)* %ptrTypeCast1896, align 8
  %817 = fmul <16 x double> %816, %213
  %818 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %819 = load i64* %818, align 8
  %820 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %821 = load i64* %820, align 8
  %822 = add i64 %819, %821
  %extract1899 = add i64 %822, 1105920
  %823 = getelementptr inbounds double addrspace(1)* %C, i64 %extract1899
  %ptrTypeCast1915 = bitcast double addrspace(1)* %823 to <16 x double> addrspace(1)*
  %824 = load <16 x double> addrspace(1)* %ptrTypeCast1915, align 8
  %825 = fmul <16 x double> %817, %824
  %826 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %827 = load i64* %826, align 8
  %828 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %829 = load i64* %828, align 8
  %830 = add i64 %827, %829
  %extract1918 = add i64 %830, 110592
  %831 = getelementptr inbounds double addrspace(1)* %C, i64 %extract1918
  %ptrTypeCast1934 = bitcast double addrspace(1)* %831 to <16 x double> addrspace(1)*
  %832 = load <16 x double> addrspace(1)* %ptrTypeCast1934, align 8
  %833 = fmul <16 x double> %825, %832
  %834 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %835 = load i64* %834, align 8
  %836 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %837 = load i64* %836, align 8
  %838 = add i64 %835, %837
  %extract1937 = add i64 %838, 4976640
  %839 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract1937
  %ptrTypeCast1953 = bitcast double addrspace(1)* %839 to <16 x double> addrspace(1)*
  store <16 x double> %833, <16 x double> addrspace(1)* %ptrTypeCast1953, align 8
  %840 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %841 = load i64* %840, align 8
  %842 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %843 = load i64* %842, align 8
  %844 = add i64 %841, %843
  %extract1956 = add i64 %844, 13271040
  %845 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1956
  %ptrTypeCast1972 = bitcast double addrspace(1)* %845 to <16 x double> addrspace(1)*
  %846 = load <16 x double> addrspace(1)* %ptrTypeCast1972, align 8
  %847 = fmul <16 x double> %846, %32
  %848 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %849 = load i64* %848, align 8
  %850 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %851 = load i64* %850, align 8
  %852 = add i64 %849, %851
  %extract1975 = add i64 %852, 1437696
  %853 = getelementptr inbounds double addrspace(1)* %C, i64 %extract1975
  %ptrTypeCast1991 = bitcast double addrspace(1)* %853 to <16 x double> addrspace(1)*
  %854 = load <16 x double> addrspace(1)* %ptrTypeCast1991, align 8
  %855 = fmul <16 x double> %847, %854
  %856 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %857 = load i64* %856, align 8
  %858 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %859 = load i64* %858, align 8
  %860 = add i64 %857, %859
  %extract1994 = add i64 %860, 884736
  %861 = getelementptr inbounds double addrspace(1)* %C, i64 %extract1994
  %ptrTypeCast2010 = bitcast double addrspace(1)* %861 to <16 x double> addrspace(1)*
  %862 = load <16 x double> addrspace(1)* %ptrTypeCast2010, align 8
  %863 = fmul <16 x double> %855, %862
  %864 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %865 = load i64* %864, align 8
  %866 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %867 = load i64* %866, align 8
  %868 = add i64 %865, %867
  %extract2013 = add i64 %868, 13271040
  %869 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2013
  %ptrTypeCast2029 = bitcast double addrspace(1)* %869 to <16 x double> addrspace(1)*
  store <16 x double> %863, <16 x double> addrspace(1)* %ptrTypeCast2029, align 8
  %870 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %871 = load i64* %870, align 8
  %872 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %873 = load i64* %872, align 8
  %874 = add i64 %871, %873
  %extract2032 = add i64 %874, 13271040
  %875 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract2032
  %ptrTypeCast2048 = bitcast double addrspace(1)* %875 to <16 x double> addrspace(1)*
  %876 = load <16 x double> addrspace(1)* %ptrTypeCast2048, align 8
  %877 = fmul <16 x double> %876, %32
  %878 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %879 = load i64* %878, align 8
  %880 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %881 = load i64* %880, align 8
  %882 = add i64 %879, %881
  %extract2051 = add i64 %882, 2101248
  %883 = getelementptr inbounds double addrspace(1)* %C, i64 %extract2051
  %ptrTypeCast2067 = bitcast double addrspace(1)* %883 to <16 x double> addrspace(1)*
  %884 = load <16 x double> addrspace(1)* %ptrTypeCast2067, align 8
  %885 = fmul <16 x double> %877, %884
  %886 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %887 = load i64* %886, align 8
  %888 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %889 = load i64* %888, align 8
  %890 = add i64 %887, %889
  %extract2070 = add i64 %890, 13271040
  %891 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract2070
  %ptrTypeCast2086 = bitcast double addrspace(1)* %891 to <16 x double> addrspace(1)*
  store <16 x double> %885, <16 x double> addrspace(1)* %ptrTypeCast2086, align 8
  %892 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %893 = load i64* %892, align 8
  %894 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %895 = load i64* %894, align 8
  %896 = add i64 %893, %895
  %extract2089 = add i64 %896, 1327104
  %897 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %extract2089
  %ptrTypeCast2105 = bitcast double addrspace(1)* %897 to <16 x double> addrspace(1)*
  %898 = load <16 x double> addrspace(1)* %ptrTypeCast2105, align 8
  %899 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %900 = load i64* %899, align 8
  %901 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %902 = load i64* %901, align 8
  %903 = add i64 %900, %902
  %extract2108 = add i64 %903, 13824000
  %904 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2108
  %ptrTypeCast2124 = bitcast double addrspace(1)* %904 to <16 x double> addrspace(1)*
  %905 = load <16 x double> addrspace(1)* %ptrTypeCast2124, align 8
  %906 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %905
  %907 = fmul <16 x double> %213, %906
  %908 = fmul <16 x double> %898, %907
  %extract2125 = extractelement <16 x double> %908, i32 0
  %extract2126 = extractelement <16 x double> %908, i32 1
  %extract2127 = extractelement <16 x double> %908, i32 2
  %extract2128 = extractelement <16 x double> %908, i32 3
  %extract2129 = extractelement <16 x double> %908, i32 4
  %extract2130 = extractelement <16 x double> %908, i32 5
  %extract2131 = extractelement <16 x double> %908, i32 6
  %extract2132 = extractelement <16 x double> %908, i32 7
  %extract2133 = extractelement <16 x double> %908, i32 8
  %extract2134 = extractelement <16 x double> %908, i32 9
  %extract2135 = extractelement <16 x double> %908, i32 10
  %extract2136 = extractelement <16 x double> %908, i32 11
  %extract2137 = extractelement <16 x double> %908, i32 12
  %extract2138 = extractelement <16 x double> %908, i32 13
  %extract2139 = extractelement <16 x double> %908, i32 14
  %extract2140 = extractelement <16 x double> %908, i32 15
  %909 = fadd <16 x double> %908, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %910 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %909
  %911 = fmul <16 x double> %908, %910
  %912 = tail call double @_Z4fmaxdd(double %extract2125, double 1.000000e-200) nounwind
  %913 = tail call double @_Z4fmaxdd(double %extract2126, double 1.000000e-200) nounwind
  %914 = tail call double @_Z4fmaxdd(double %extract2127, double 1.000000e-200) nounwind
  %915 = tail call double @_Z4fmaxdd(double %extract2128, double 1.000000e-200) nounwind
  %916 = tail call double @_Z4fmaxdd(double %extract2129, double 1.000000e-200) nounwind
  %917 = tail call double @_Z4fmaxdd(double %extract2130, double 1.000000e-200) nounwind
  %918 = tail call double @_Z4fmaxdd(double %extract2131, double 1.000000e-200) nounwind
  %919 = tail call double @_Z4fmaxdd(double %extract2132, double 1.000000e-200) nounwind
  %920 = tail call double @_Z4fmaxdd(double %extract2133, double 1.000000e-200) nounwind
  %921 = tail call double @_Z4fmaxdd(double %extract2134, double 1.000000e-200) nounwind
  %922 = tail call double @_Z4fmaxdd(double %extract2135, double 1.000000e-200) nounwind
  %923 = tail call double @_Z4fmaxdd(double %extract2136, double 1.000000e-200) nounwind
  %924 = tail call double @_Z4fmaxdd(double %extract2137, double 1.000000e-200) nounwind
  %925 = tail call double @_Z4fmaxdd(double %extract2138, double 1.000000e-200) nounwind
  %926 = tail call double @_Z4fmaxdd(double %extract2139, double 1.000000e-200) nounwind
  %927 = tail call double @_Z4fmaxdd(double %extract2140, double 1.000000e-200) nounwind
  %928 = tail call double @_Z5log10d(double %912) nounwind
  %929 = tail call double @_Z5log10d(double %913) nounwind
  %930 = tail call double @_Z5log10d(double %914) nounwind
  %931 = tail call double @_Z5log10d(double %915) nounwind
  %932 = tail call double @_Z5log10d(double %916) nounwind
  %933 = tail call double @_Z5log10d(double %917) nounwind
  %934 = tail call double @_Z5log10d(double %918) nounwind
  %935 = tail call double @_Z5log10d(double %919) nounwind
  %936 = tail call double @_Z5log10d(double %920) nounwind
  %937 = tail call double @_Z5log10d(double %921) nounwind
  %938 = tail call double @_Z5log10d(double %922) nounwind
  %939 = tail call double @_Z5log10d(double %923) nounwind
  %940 = tail call double @_Z5log10d(double %924) nounwind
  %941 = tail call double @_Z5log10d(double %925) nounwind
  %942 = tail call double @_Z5log10d(double %926) nounwind
  %943 = tail call double @_Z5log10d(double %927) nounwind
  %temp.vect2268 = insertelement <16 x double> undef, double %928, i32 0
  %temp.vect2269 = insertelement <16 x double> %temp.vect2268, double %929, i32 1
  %temp.vect2270 = insertelement <16 x double> %temp.vect2269, double %930, i32 2
  %temp.vect2271 = insertelement <16 x double> %temp.vect2270, double %931, i32 3
  %temp.vect2272 = insertelement <16 x double> %temp.vect2271, double %932, i32 4
  %temp.vect2273 = insertelement <16 x double> %temp.vect2272, double %933, i32 5
  %temp.vect2274 = insertelement <16 x double> %temp.vect2273, double %934, i32 6
  %temp.vect2275 = insertelement <16 x double> %temp.vect2274, double %935, i32 7
  %temp.vect2276 = insertelement <16 x double> %temp.vect2275, double %936, i32 8
  %temp.vect2277 = insertelement <16 x double> %temp.vect2276, double %937, i32 9
  %temp.vect2278 = insertelement <16 x double> %temp.vect2277, double %938, i32 10
  %temp.vect2279 = insertelement <16 x double> %temp.vect2278, double %939, i32 11
  %temp.vect2280 = insertelement <16 x double> %temp.vect2279, double %940, i32 12
  %temp.vect2281 = insertelement <16 x double> %temp.vect2280, double %941, i32 13
  %temp.vect2282 = insertelement <16 x double> %temp.vect2281, double %942, i32 14
  %temp.vect2283 = insertelement <16 x double> %temp.vect2282, double %943, i32 15
  %944 = fmul <16 x double> %7, <double 0xBF43323D7CECF427, double 0xBF43323D7CECF427, double 0xBF43323D7CECF427, double 0xBF43323D7CECF427, double 0xBF43323D7CECF427, double 0xBF43323D7CECF427, double 0xBF43323D7CECF427, double 0xBF43323D7CECF427, double 0xBF43323D7CECF427, double 0xBF43323D7CECF427, double 0xBF43323D7CECF427, double 0xBF43323D7CECF427, double 0xBF43323D7CECF427, double 0xBF43323D7CECF427, double 0xBF43323D7CECF427, double 0xBF43323D7CECF427>
  %extract2141 = extractelement <16 x double> %944, i32 0
  %extract2142 = extractelement <16 x double> %944, i32 1
  %extract2143 = extractelement <16 x double> %944, i32 2
  %extract2144 = extractelement <16 x double> %944, i32 3
  %extract2145 = extractelement <16 x double> %944, i32 4
  %extract2146 = extractelement <16 x double> %944, i32 5
  %extract2147 = extractelement <16 x double> %944, i32 6
  %extract2148 = extractelement <16 x double> %944, i32 7
  %extract2149 = extractelement <16 x double> %944, i32 8
  %extract2150 = extractelement <16 x double> %944, i32 9
  %extract2151 = extractelement <16 x double> %944, i32 10
  %extract2152 = extractelement <16 x double> %944, i32 11
  %extract2153 = extractelement <16 x double> %944, i32 12
  %extract2154 = extractelement <16 x double> %944, i32 13
  %extract2155 = extractelement <16 x double> %944, i32 14
  %extract2156 = extractelement <16 x double> %944, i32 15
  %945 = tail call double @_Z3expd(double %extract2141) nounwind
  %946 = tail call double @_Z3expd(double %extract2142) nounwind
  %947 = tail call double @_Z3expd(double %extract2143) nounwind
  %948 = tail call double @_Z3expd(double %extract2144) nounwind
  %949 = tail call double @_Z3expd(double %extract2145) nounwind
  %950 = tail call double @_Z3expd(double %extract2146) nounwind
  %951 = tail call double @_Z3expd(double %extract2147) nounwind
  %952 = tail call double @_Z3expd(double %extract2148) nounwind
  %953 = tail call double @_Z3expd(double %extract2149) nounwind
  %954 = tail call double @_Z3expd(double %extract2150) nounwind
  %955 = tail call double @_Z3expd(double %extract2151) nounwind
  %956 = tail call double @_Z3expd(double %extract2152) nounwind
  %957 = tail call double @_Z3expd(double %extract2153) nounwind
  %958 = tail call double @_Z3expd(double %extract2154) nounwind
  %959 = tail call double @_Z3expd(double %extract2155) nounwind
  %960 = tail call double @_Z3expd(double %extract2156) nounwind
  %temp.vect = insertelement <16 x double> undef, double %945, i32 0
  %temp.vect2157 = insertelement <16 x double> %temp.vect, double %946, i32 1
  %temp.vect2158 = insertelement <16 x double> %temp.vect2157, double %947, i32 2
  %temp.vect2159 = insertelement <16 x double> %temp.vect2158, double %948, i32 3
  %temp.vect2160 = insertelement <16 x double> %temp.vect2159, double %949, i32 4
  %temp.vect2161 = insertelement <16 x double> %temp.vect2160, double %950, i32 5
  %temp.vect2162 = insertelement <16 x double> %temp.vect2161, double %951, i32 6
  %temp.vect2163 = insertelement <16 x double> %temp.vect2162, double %952, i32 7
  %temp.vect2164 = insertelement <16 x double> %temp.vect2163, double %953, i32 8
  %temp.vect2165 = insertelement <16 x double> %temp.vect2164, double %954, i32 9
  %temp.vect2166 = insertelement <16 x double> %temp.vect2165, double %955, i32 10
  %temp.vect2167 = insertelement <16 x double> %temp.vect2166, double %956, i32 11
  %temp.vect2168 = insertelement <16 x double> %temp.vect2167, double %957, i32 12
  %temp.vect2169 = insertelement <16 x double> %temp.vect2168, double %958, i32 13
  %temp.vect2170 = insertelement <16 x double> %temp.vect2169, double %959, i32 14
  %temp.vect2171 = insertelement <16 x double> %temp.vect2170, double %960, i32 15
  %961 = fmul <16 x double> %temp.vect2171, <double 6.630000e-01, double 6.630000e-01, double 6.630000e-01, double 6.630000e-01, double 6.630000e-01, double 6.630000e-01, double 6.630000e-01, double 6.630000e-01, double 6.630000e-01, double 6.630000e-01, double 6.630000e-01, double 6.630000e-01, double 6.630000e-01, double 6.630000e-01, double 6.630000e-01, double 6.630000e-01>
  %962 = fmul <16 x double> %7, <double -3.125000e-04, double -3.125000e-04, double -3.125000e-04, double -3.125000e-04, double -3.125000e-04, double -3.125000e-04, double -3.125000e-04, double -3.125000e-04, double -3.125000e-04, double -3.125000e-04, double -3.125000e-04, double -3.125000e-04, double -3.125000e-04, double -3.125000e-04, double -3.125000e-04, double -3.125000e-04>
  %extract2172 = extractelement <16 x double> %962, i32 0
  %extract2173 = extractelement <16 x double> %962, i32 1
  %extract2174 = extractelement <16 x double> %962, i32 2
  %extract2175 = extractelement <16 x double> %962, i32 3
  %extract2176 = extractelement <16 x double> %962, i32 4
  %extract2177 = extractelement <16 x double> %962, i32 5
  %extract2178 = extractelement <16 x double> %962, i32 6
  %extract2179 = extractelement <16 x double> %962, i32 7
  %extract2180 = extractelement <16 x double> %962, i32 8
  %extract2181 = extractelement <16 x double> %962, i32 9
  %extract2182 = extractelement <16 x double> %962, i32 10
  %extract2183 = extractelement <16 x double> %962, i32 11
  %extract2184 = extractelement <16 x double> %962, i32 12
  %extract2185 = extractelement <16 x double> %962, i32 13
  %extract2186 = extractelement <16 x double> %962, i32 14
  %extract2187 = extractelement <16 x double> %962, i32 15
  %963 = tail call double @_Z3expd(double %extract2172) nounwind
  %964 = tail call double @_Z3expd(double %extract2173) nounwind
  %965 = tail call double @_Z3expd(double %extract2174) nounwind
  %966 = tail call double @_Z3expd(double %extract2175) nounwind
  %967 = tail call double @_Z3expd(double %extract2176) nounwind
  %968 = tail call double @_Z3expd(double %extract2177) nounwind
  %969 = tail call double @_Z3expd(double %extract2178) nounwind
  %970 = tail call double @_Z3expd(double %extract2179) nounwind
  %971 = tail call double @_Z3expd(double %extract2180) nounwind
  %972 = tail call double @_Z3expd(double %extract2181) nounwind
  %973 = tail call double @_Z3expd(double %extract2182) nounwind
  %974 = tail call double @_Z3expd(double %extract2183) nounwind
  %975 = tail call double @_Z3expd(double %extract2184) nounwind
  %976 = tail call double @_Z3expd(double %extract2185) nounwind
  %977 = tail call double @_Z3expd(double %extract2186) nounwind
  %978 = tail call double @_Z3expd(double %extract2187) nounwind
  %temp.vect2188 = insertelement <16 x double> undef, double %963, i32 0
  %temp.vect2189 = insertelement <16 x double> %temp.vect2188, double %964, i32 1
  %temp.vect2190 = insertelement <16 x double> %temp.vect2189, double %965, i32 2
  %temp.vect2191 = insertelement <16 x double> %temp.vect2190, double %966, i32 3
  %temp.vect2192 = insertelement <16 x double> %temp.vect2191, double %967, i32 4
  %temp.vect2193 = insertelement <16 x double> %temp.vect2192, double %968, i32 5
  %temp.vect2194 = insertelement <16 x double> %temp.vect2193, double %969, i32 6
  %temp.vect2195 = insertelement <16 x double> %temp.vect2194, double %970, i32 7
  %temp.vect2196 = insertelement <16 x double> %temp.vect2195, double %971, i32 8
  %temp.vect2197 = insertelement <16 x double> %temp.vect2196, double %972, i32 9
  %temp.vect2198 = insertelement <16 x double> %temp.vect2197, double %973, i32 10
  %temp.vect2199 = insertelement <16 x double> %temp.vect2198, double %974, i32 11
  %temp.vect2200 = insertelement <16 x double> %temp.vect2199, double %975, i32 12
  %temp.vect2201 = insertelement <16 x double> %temp.vect2200, double %976, i32 13
  %temp.vect2202 = insertelement <16 x double> %temp.vect2201, double %977, i32 14
  %temp.vect2203 = insertelement <16 x double> %temp.vect2202, double %978, i32 15
  %979 = fmul <16 x double> %temp.vect2203, <double 3.370000e-01, double 3.370000e-01, double 3.370000e-01, double 3.370000e-01, double 3.370000e-01, double 3.370000e-01, double 3.370000e-01, double 3.370000e-01, double 3.370000e-01, double 3.370000e-01, double 3.370000e-01, double 3.370000e-01, double 3.370000e-01, double 3.370000e-01, double 3.370000e-01, double 3.370000e-01>
  %980 = fadd <16 x double> %961, %979
  %981 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %7
  %982 = fmul <16 x double> %981, <double -4.131000e+03, double -4.131000e+03, double -4.131000e+03, double -4.131000e+03, double -4.131000e+03, double -4.131000e+03, double -4.131000e+03, double -4.131000e+03, double -4.131000e+03, double -4.131000e+03, double -4.131000e+03, double -4.131000e+03, double -4.131000e+03, double -4.131000e+03, double -4.131000e+03, double -4.131000e+03>
  %extract2204 = extractelement <16 x double> %982, i32 0
  %extract2205 = extractelement <16 x double> %982, i32 1
  %extract2206 = extractelement <16 x double> %982, i32 2
  %extract2207 = extractelement <16 x double> %982, i32 3
  %extract2208 = extractelement <16 x double> %982, i32 4
  %extract2209 = extractelement <16 x double> %982, i32 5
  %extract2210 = extractelement <16 x double> %982, i32 6
  %extract2211 = extractelement <16 x double> %982, i32 7
  %extract2212 = extractelement <16 x double> %982, i32 8
  %extract2213 = extractelement <16 x double> %982, i32 9
  %extract2214 = extractelement <16 x double> %982, i32 10
  %extract2215 = extractelement <16 x double> %982, i32 11
  %extract2216 = extractelement <16 x double> %982, i32 12
  %extract2217 = extractelement <16 x double> %982, i32 13
  %extract2218 = extractelement <16 x double> %982, i32 14
  %extract2219 = extractelement <16 x double> %982, i32 15
  %983 = tail call double @_Z3expd(double %extract2204) nounwind
  %984 = tail call double @_Z3expd(double %extract2205) nounwind
  %985 = tail call double @_Z3expd(double %extract2206) nounwind
  %986 = tail call double @_Z3expd(double %extract2207) nounwind
  %987 = tail call double @_Z3expd(double %extract2208) nounwind
  %988 = tail call double @_Z3expd(double %extract2209) nounwind
  %989 = tail call double @_Z3expd(double %extract2210) nounwind
  %990 = tail call double @_Z3expd(double %extract2211) nounwind
  %991 = tail call double @_Z3expd(double %extract2212) nounwind
  %992 = tail call double @_Z3expd(double %extract2213) nounwind
  %993 = tail call double @_Z3expd(double %extract2214) nounwind
  %994 = tail call double @_Z3expd(double %extract2215) nounwind
  %995 = tail call double @_Z3expd(double %extract2216) nounwind
  %996 = tail call double @_Z3expd(double %extract2217) nounwind
  %997 = tail call double @_Z3expd(double %extract2218) nounwind
  %998 = tail call double @_Z3expd(double %extract2219) nounwind
  %temp.vect2220 = insertelement <16 x double> undef, double %983, i32 0
  %temp.vect2221 = insertelement <16 x double> %temp.vect2220, double %984, i32 1
  %temp.vect2222 = insertelement <16 x double> %temp.vect2221, double %985, i32 2
  %temp.vect2223 = insertelement <16 x double> %temp.vect2222, double %986, i32 3
  %temp.vect2224 = insertelement <16 x double> %temp.vect2223, double %987, i32 4
  %temp.vect2225 = insertelement <16 x double> %temp.vect2224, double %988, i32 5
  %temp.vect2226 = insertelement <16 x double> %temp.vect2225, double %989, i32 6
  %temp.vect2227 = insertelement <16 x double> %temp.vect2226, double %990, i32 7
  %temp.vect2228 = insertelement <16 x double> %temp.vect2227, double %991, i32 8
  %temp.vect2229 = insertelement <16 x double> %temp.vect2228, double %992, i32 9
  %temp.vect2230 = insertelement <16 x double> %temp.vect2229, double %993, i32 10
  %temp.vect2231 = insertelement <16 x double> %temp.vect2230, double %994, i32 11
  %temp.vect2232 = insertelement <16 x double> %temp.vect2231, double %995, i32 12
  %temp.vect2233 = insertelement <16 x double> %temp.vect2232, double %996, i32 13
  %temp.vect2234 = insertelement <16 x double> %temp.vect2233, double %997, i32 14
  %temp.vect2235 = insertelement <16 x double> %temp.vect2234, double %998, i32 15
  %999 = fadd <16 x double> %980, %temp.vect2235
  %extract2236 = extractelement <16 x double> %999, i32 0
  %extract2237 = extractelement <16 x double> %999, i32 1
  %extract2238 = extractelement <16 x double> %999, i32 2
  %extract2239 = extractelement <16 x double> %999, i32 3
  %extract2240 = extractelement <16 x double> %999, i32 4
  %extract2241 = extractelement <16 x double> %999, i32 5
  %extract2242 = extractelement <16 x double> %999, i32 6
  %extract2243 = extractelement <16 x double> %999, i32 7
  %extract2244 = extractelement <16 x double> %999, i32 8
  %extract2245 = extractelement <16 x double> %999, i32 9
  %extract2246 = extractelement <16 x double> %999, i32 10
  %extract2247 = extractelement <16 x double> %999, i32 11
  %extract2248 = extractelement <16 x double> %999, i32 12
  %extract2249 = extractelement <16 x double> %999, i32 13
  %extract2250 = extractelement <16 x double> %999, i32 14
  %extract2251 = extractelement <16 x double> %999, i32 15
  %1000 = tail call double @_Z4fmaxdd(double %extract2236, double 1.000000e-200) nounwind
  %1001 = tail call double @_Z4fmaxdd(double %extract2237, double 1.000000e-200) nounwind
  %1002 = tail call double @_Z4fmaxdd(double %extract2238, double 1.000000e-200) nounwind
  %1003 = tail call double @_Z4fmaxdd(double %extract2239, double 1.000000e-200) nounwind
  %1004 = tail call double @_Z4fmaxdd(double %extract2240, double 1.000000e-200) nounwind
  %1005 = tail call double @_Z4fmaxdd(double %extract2241, double 1.000000e-200) nounwind
  %1006 = tail call double @_Z4fmaxdd(double %extract2242, double 1.000000e-200) nounwind
  %1007 = tail call double @_Z4fmaxdd(double %extract2243, double 1.000000e-200) nounwind
  %1008 = tail call double @_Z4fmaxdd(double %extract2244, double 1.000000e-200) nounwind
  %1009 = tail call double @_Z4fmaxdd(double %extract2245, double 1.000000e-200) nounwind
  %1010 = tail call double @_Z4fmaxdd(double %extract2246, double 1.000000e-200) nounwind
  %1011 = tail call double @_Z4fmaxdd(double %extract2247, double 1.000000e-200) nounwind
  %1012 = tail call double @_Z4fmaxdd(double %extract2248, double 1.000000e-200) nounwind
  %1013 = tail call double @_Z4fmaxdd(double %extract2249, double 1.000000e-200) nounwind
  %1014 = tail call double @_Z4fmaxdd(double %extract2250, double 1.000000e-200) nounwind
  %1015 = tail call double @_Z4fmaxdd(double %extract2251, double 1.000000e-200) nounwind
  %1016 = tail call double @_Z5log10d(double %1000) nounwind
  %1017 = tail call double @_Z5log10d(double %1001) nounwind
  %1018 = tail call double @_Z5log10d(double %1002) nounwind
  %1019 = tail call double @_Z5log10d(double %1003) nounwind
  %1020 = tail call double @_Z5log10d(double %1004) nounwind
  %1021 = tail call double @_Z5log10d(double %1005) nounwind
  %1022 = tail call double @_Z5log10d(double %1006) nounwind
  %1023 = tail call double @_Z5log10d(double %1007) nounwind
  %1024 = tail call double @_Z5log10d(double %1008) nounwind
  %1025 = tail call double @_Z5log10d(double %1009) nounwind
  %1026 = tail call double @_Z5log10d(double %1010) nounwind
  %1027 = tail call double @_Z5log10d(double %1011) nounwind
  %1028 = tail call double @_Z5log10d(double %1012) nounwind
  %1029 = tail call double @_Z5log10d(double %1013) nounwind
  %1030 = tail call double @_Z5log10d(double %1014) nounwind
  %1031 = tail call double @_Z5log10d(double %1015) nounwind
  %temp.vect2252 = insertelement <16 x double> undef, double %1016, i32 0
  %temp.vect2253 = insertelement <16 x double> %temp.vect2252, double %1017, i32 1
  %temp.vect2254 = insertelement <16 x double> %temp.vect2253, double %1018, i32 2
  %temp.vect2255 = insertelement <16 x double> %temp.vect2254, double %1019, i32 3
  %temp.vect2256 = insertelement <16 x double> %temp.vect2255, double %1020, i32 4
  %temp.vect2257 = insertelement <16 x double> %temp.vect2256, double %1021, i32 5
  %temp.vect2258 = insertelement <16 x double> %temp.vect2257, double %1022, i32 6
  %temp.vect2259 = insertelement <16 x double> %temp.vect2258, double %1023, i32 7
  %temp.vect2260 = insertelement <16 x double> %temp.vect2259, double %1024, i32 8
  %temp.vect2261 = insertelement <16 x double> %temp.vect2260, double %1025, i32 9
  %temp.vect2262 = insertelement <16 x double> %temp.vect2261, double %1026, i32 10
  %temp.vect2263 = insertelement <16 x double> %temp.vect2262, double %1027, i32 11
  %temp.vect2264 = insertelement <16 x double> %temp.vect2263, double %1028, i32 12
  %temp.vect2265 = insertelement <16 x double> %temp.vect2264, double %1029, i32 13
  %temp.vect2266 = insertelement <16 x double> %temp.vect2265, double %1030, i32 14
  %temp.vect2267 = insertelement <16 x double> %temp.vect2266, double %1031, i32 15
  %1032 = fmul <16 x double> %temp.vect2267, <double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00>
  %1033 = fsub <16 x double> <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>, %1032
  %1034 = fmul <16 x double> %temp.vect2267, <double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01>
  %1035 = fadd <16 x double> %1034, <double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01>
  %1036 = fsub <16 x double> %temp.vect2283, %1035
  %1037 = fmul <16 x double> %1036, <double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01>
  %1038 = fsub <16 x double> %1033, %1037
  %1039 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1038
  %1040 = fmul <16 x double> %1036, %1039
  %1041 = fmul <16 x double> %1040, %1040
  %1042 = fadd <16 x double> %1041, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %1043 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1042
  %1044 = fmul <16 x double> %temp.vect2267, %1043
  %extract2284 = extractelement <16 x double> %1044, i32 0
  %extract2285 = extractelement <16 x double> %1044, i32 1
  %extract2286 = extractelement <16 x double> %1044, i32 2
  %extract2287 = extractelement <16 x double> %1044, i32 3
  %extract2288 = extractelement <16 x double> %1044, i32 4
  %extract2289 = extractelement <16 x double> %1044, i32 5
  %extract2290 = extractelement <16 x double> %1044, i32 6
  %extract2291 = extractelement <16 x double> %1044, i32 7
  %extract2292 = extractelement <16 x double> %1044, i32 8
  %extract2293 = extractelement <16 x double> %1044, i32 9
  %extract2294 = extractelement <16 x double> %1044, i32 10
  %extract2295 = extractelement <16 x double> %1044, i32 11
  %extract2296 = extractelement <16 x double> %1044, i32 12
  %extract2297 = extractelement <16 x double> %1044, i32 13
  %extract2298 = extractelement <16 x double> %1044, i32 14
  %extract2299 = extractelement <16 x double> %1044, i32 15
  %1045 = tail call double @_Z5exp10d(double %extract2284) nounwind
  %1046 = tail call double @_Z5exp10d(double %extract2285) nounwind
  %1047 = tail call double @_Z5exp10d(double %extract2286) nounwind
  %1048 = tail call double @_Z5exp10d(double %extract2287) nounwind
  %1049 = tail call double @_Z5exp10d(double %extract2288) nounwind
  %1050 = tail call double @_Z5exp10d(double %extract2289) nounwind
  %1051 = tail call double @_Z5exp10d(double %extract2290) nounwind
  %1052 = tail call double @_Z5exp10d(double %extract2291) nounwind
  %1053 = tail call double @_Z5exp10d(double %extract2292) nounwind
  %1054 = tail call double @_Z5exp10d(double %extract2293) nounwind
  %1055 = tail call double @_Z5exp10d(double %extract2294) nounwind
  %1056 = tail call double @_Z5exp10d(double %extract2295) nounwind
  %1057 = tail call double @_Z5exp10d(double %extract2296) nounwind
  %1058 = tail call double @_Z5exp10d(double %extract2297) nounwind
  %1059 = tail call double @_Z5exp10d(double %extract2298) nounwind
  %1060 = tail call double @_Z5exp10d(double %extract2299) nounwind
  %temp.vect2300 = insertelement <16 x double> undef, double %1045, i32 0
  %temp.vect2301 = insertelement <16 x double> %temp.vect2300, double %1046, i32 1
  %temp.vect2302 = insertelement <16 x double> %temp.vect2301, double %1047, i32 2
  %temp.vect2303 = insertelement <16 x double> %temp.vect2302, double %1048, i32 3
  %temp.vect2304 = insertelement <16 x double> %temp.vect2303, double %1049, i32 4
  %temp.vect2305 = insertelement <16 x double> %temp.vect2304, double %1050, i32 5
  %temp.vect2306 = insertelement <16 x double> %temp.vect2305, double %1051, i32 6
  %temp.vect2307 = insertelement <16 x double> %temp.vect2306, double %1052, i32 7
  %temp.vect2308 = insertelement <16 x double> %temp.vect2307, double %1053, i32 8
  %temp.vect2309 = insertelement <16 x double> %temp.vect2308, double %1054, i32 9
  %temp.vect2310 = insertelement <16 x double> %temp.vect2309, double %1055, i32 10
  %temp.vect2311 = insertelement <16 x double> %temp.vect2310, double %1056, i32 11
  %temp.vect2312 = insertelement <16 x double> %temp.vect2311, double %1057, i32 12
  %temp.vect2313 = insertelement <16 x double> %temp.vect2312, double %1058, i32 13
  %temp.vect2314 = insertelement <16 x double> %temp.vect2313, double %1059, i32 14
  %temp.vect2315 = insertelement <16 x double> %temp.vect2314, double %1060, i32 15
  %1061 = fmul <16 x double> %temp.vect2315, %911
  %1062 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1063 = load i64* %1062, align 8
  %1064 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1065 = load i64* %1064, align 8
  %1066 = add i64 %1063, %1065
  %extract2318 = add i64 %1066, 13824000
  %1067 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2318
  %ptrTypeCast2334 = bitcast double addrspace(1)* %1067 to <16 x double> addrspace(1)*
  %1068 = load <16 x double> addrspace(1)* %ptrTypeCast2334, align 8
  %1069 = fmul <16 x double> %1068, %1061
  %1070 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1071 = load i64* %1070, align 8
  %1072 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1073 = load i64* %1072, align 8
  %1074 = add i64 %1071, %1073
  %extract2337 = add i64 %1074, 13824000
  %1075 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2337
  %ptrTypeCast2353 = bitcast double addrspace(1)* %1075 to <16 x double> addrspace(1)*
  store <16 x double> %1069, <16 x double> addrspace(1)* %ptrTypeCast2353, align 8
  %1076 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1077 = load i64* %1076, align 8
  %1078 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1079 = load i64* %1078, align 8
  %1080 = add i64 %1077, %1079
  %extract2356 = add i64 %1080, 13824000
  %1081 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract2356
  %ptrTypeCast2372 = bitcast double addrspace(1)* %1081 to <16 x double> addrspace(1)*
  %1082 = load <16 x double> addrspace(1)* %ptrTypeCast2372, align 8
  %1083 = fmul <16 x double> %1082, %1061
  %1084 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1085 = load i64* %1084, align 8
  %1086 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1087 = load i64* %1086, align 8
  %1088 = add i64 %1085, %1087
  %extract2375 = add i64 %1088, 13824000
  %1089 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract2375
  %ptrTypeCast2391 = bitcast double addrspace(1)* %1089 to <16 x double> addrspace(1)*
  store <16 x double> %1083, <16 x double> addrspace(1)* %ptrTypeCast2391, align 8
  %1090 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1091 = load i64* %1090, align 8
  %1092 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1093 = load i64* %1092, align 8
  %1094 = add i64 %1091, %1093
  %extract2394 = add i64 %1094, 1437696
  %1095 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %extract2394
  %ptrTypeCast2410 = bitcast double addrspace(1)* %1095 to <16 x double> addrspace(1)*
  %1096 = load <16 x double> addrspace(1)* %ptrTypeCast2410, align 8
  %1097 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1098 = load i64* %1097, align 8
  %1099 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1100 = load i64* %1099, align 8
  %1101 = add i64 %1098, %1100
  %extract2413 = add i64 %1101, 14487552
  %1102 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2413
  %ptrTypeCast2429 = bitcast double addrspace(1)* %1102 to <16 x double> addrspace(1)*
  %1103 = load <16 x double> addrspace(1)* %ptrTypeCast2429, align 8
  %1104 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1103
  %1105 = fmul <16 x double> %213, %1104
  %1106 = fmul <16 x double> %1096, %1105
  %extract2430 = extractelement <16 x double> %1106, i32 0
  %extract2431 = extractelement <16 x double> %1106, i32 1
  %extract2432 = extractelement <16 x double> %1106, i32 2
  %extract2433 = extractelement <16 x double> %1106, i32 3
  %extract2434 = extractelement <16 x double> %1106, i32 4
  %extract2435 = extractelement <16 x double> %1106, i32 5
  %extract2436 = extractelement <16 x double> %1106, i32 6
  %extract2437 = extractelement <16 x double> %1106, i32 7
  %extract2438 = extractelement <16 x double> %1106, i32 8
  %extract2439 = extractelement <16 x double> %1106, i32 9
  %extract2440 = extractelement <16 x double> %1106, i32 10
  %extract2441 = extractelement <16 x double> %1106, i32 11
  %extract2442 = extractelement <16 x double> %1106, i32 12
  %extract2443 = extractelement <16 x double> %1106, i32 13
  %extract2444 = extractelement <16 x double> %1106, i32 14
  %extract2445 = extractelement <16 x double> %1106, i32 15
  %1107 = fadd <16 x double> %1106, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %1108 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1107
  %1109 = fmul <16 x double> %1106, %1108
  %1110 = tail call double @_Z4fmaxdd(double %extract2430, double 1.000000e-200) nounwind
  %1111 = tail call double @_Z4fmaxdd(double %extract2431, double 1.000000e-200) nounwind
  %1112 = tail call double @_Z4fmaxdd(double %extract2432, double 1.000000e-200) nounwind
  %1113 = tail call double @_Z4fmaxdd(double %extract2433, double 1.000000e-200) nounwind
  %1114 = tail call double @_Z4fmaxdd(double %extract2434, double 1.000000e-200) nounwind
  %1115 = tail call double @_Z4fmaxdd(double %extract2435, double 1.000000e-200) nounwind
  %1116 = tail call double @_Z4fmaxdd(double %extract2436, double 1.000000e-200) nounwind
  %1117 = tail call double @_Z4fmaxdd(double %extract2437, double 1.000000e-200) nounwind
  %1118 = tail call double @_Z4fmaxdd(double %extract2438, double 1.000000e-200) nounwind
  %1119 = tail call double @_Z4fmaxdd(double %extract2439, double 1.000000e-200) nounwind
  %1120 = tail call double @_Z4fmaxdd(double %extract2440, double 1.000000e-200) nounwind
  %1121 = tail call double @_Z4fmaxdd(double %extract2441, double 1.000000e-200) nounwind
  %1122 = tail call double @_Z4fmaxdd(double %extract2442, double 1.000000e-200) nounwind
  %1123 = tail call double @_Z4fmaxdd(double %extract2443, double 1.000000e-200) nounwind
  %1124 = tail call double @_Z4fmaxdd(double %extract2444, double 1.000000e-200) nounwind
  %1125 = tail call double @_Z4fmaxdd(double %extract2445, double 1.000000e-200) nounwind
  %1126 = tail call double @_Z5log10d(double %1110) nounwind
  %1127 = tail call double @_Z5log10d(double %1111) nounwind
  %1128 = tail call double @_Z5log10d(double %1112) nounwind
  %1129 = tail call double @_Z5log10d(double %1113) nounwind
  %1130 = tail call double @_Z5log10d(double %1114) nounwind
  %1131 = tail call double @_Z5log10d(double %1115) nounwind
  %1132 = tail call double @_Z5log10d(double %1116) nounwind
  %1133 = tail call double @_Z5log10d(double %1117) nounwind
  %1134 = tail call double @_Z5log10d(double %1118) nounwind
  %1135 = tail call double @_Z5log10d(double %1119) nounwind
  %1136 = tail call double @_Z5log10d(double %1120) nounwind
  %1137 = tail call double @_Z5log10d(double %1121) nounwind
  %1138 = tail call double @_Z5log10d(double %1122) nounwind
  %1139 = tail call double @_Z5log10d(double %1123) nounwind
  %1140 = tail call double @_Z5log10d(double %1124) nounwind
  %1141 = tail call double @_Z5log10d(double %1125) nounwind
  %temp.vect2574 = insertelement <16 x double> undef, double %1126, i32 0
  %temp.vect2575 = insertelement <16 x double> %temp.vect2574, double %1127, i32 1
  %temp.vect2576 = insertelement <16 x double> %temp.vect2575, double %1128, i32 2
  %temp.vect2577 = insertelement <16 x double> %temp.vect2576, double %1129, i32 3
  %temp.vect2578 = insertelement <16 x double> %temp.vect2577, double %1130, i32 4
  %temp.vect2579 = insertelement <16 x double> %temp.vect2578, double %1131, i32 5
  %temp.vect2580 = insertelement <16 x double> %temp.vect2579, double %1132, i32 6
  %temp.vect2581 = insertelement <16 x double> %temp.vect2580, double %1133, i32 7
  %temp.vect2582 = insertelement <16 x double> %temp.vect2581, double %1134, i32 8
  %temp.vect2583 = insertelement <16 x double> %temp.vect2582, double %1135, i32 9
  %temp.vect2584 = insertelement <16 x double> %temp.vect2583, double %1136, i32 10
  %temp.vect2585 = insertelement <16 x double> %temp.vect2584, double %1137, i32 11
  %temp.vect2586 = insertelement <16 x double> %temp.vect2585, double %1138, i32 12
  %temp.vect2587 = insertelement <16 x double> %temp.vect2586, double %1139, i32 13
  %temp.vect2588 = insertelement <16 x double> %temp.vect2587, double %1140, i32 14
  %temp.vect2589 = insertelement <16 x double> %temp.vect2588, double %1141, i32 15
  %1142 = fmul <16 x double> %7, <double 0xBF73BD60D9232955, double 0xBF73BD60D9232955, double 0xBF73BD60D9232955, double 0xBF73BD60D9232955, double 0xBF73BD60D9232955, double 0xBF73BD60D9232955, double 0xBF73BD60D9232955, double 0xBF73BD60D9232955, double 0xBF73BD60D9232955, double 0xBF73BD60D9232955, double 0xBF73BD60D9232955, double 0xBF73BD60D9232955, double 0xBF73BD60D9232955, double 0xBF73BD60D9232955, double 0xBF73BD60D9232955, double 0xBF73BD60D9232955>
  %extract2446 = extractelement <16 x double> %1142, i32 0
  %extract2447 = extractelement <16 x double> %1142, i32 1
  %extract2448 = extractelement <16 x double> %1142, i32 2
  %extract2449 = extractelement <16 x double> %1142, i32 3
  %extract2450 = extractelement <16 x double> %1142, i32 4
  %extract2451 = extractelement <16 x double> %1142, i32 5
  %extract2452 = extractelement <16 x double> %1142, i32 6
  %extract2453 = extractelement <16 x double> %1142, i32 7
  %extract2454 = extractelement <16 x double> %1142, i32 8
  %extract2455 = extractelement <16 x double> %1142, i32 9
  %extract2456 = extractelement <16 x double> %1142, i32 10
  %extract2457 = extractelement <16 x double> %1142, i32 11
  %extract2458 = extractelement <16 x double> %1142, i32 12
  %extract2459 = extractelement <16 x double> %1142, i32 13
  %extract2460 = extractelement <16 x double> %1142, i32 14
  %extract2461 = extractelement <16 x double> %1142, i32 15
  %1143 = tail call double @_Z3expd(double %extract2446) nounwind
  %1144 = tail call double @_Z3expd(double %extract2447) nounwind
  %1145 = tail call double @_Z3expd(double %extract2448) nounwind
  %1146 = tail call double @_Z3expd(double %extract2449) nounwind
  %1147 = tail call double @_Z3expd(double %extract2450) nounwind
  %1148 = tail call double @_Z3expd(double %extract2451) nounwind
  %1149 = tail call double @_Z3expd(double %extract2452) nounwind
  %1150 = tail call double @_Z3expd(double %extract2453) nounwind
  %1151 = tail call double @_Z3expd(double %extract2454) nounwind
  %1152 = tail call double @_Z3expd(double %extract2455) nounwind
  %1153 = tail call double @_Z3expd(double %extract2456) nounwind
  %1154 = tail call double @_Z3expd(double %extract2457) nounwind
  %1155 = tail call double @_Z3expd(double %extract2458) nounwind
  %1156 = tail call double @_Z3expd(double %extract2459) nounwind
  %1157 = tail call double @_Z3expd(double %extract2460) nounwind
  %1158 = tail call double @_Z3expd(double %extract2461) nounwind
  %temp.vect2462 = insertelement <16 x double> undef, double %1143, i32 0
  %temp.vect2463 = insertelement <16 x double> %temp.vect2462, double %1144, i32 1
  %temp.vect2464 = insertelement <16 x double> %temp.vect2463, double %1145, i32 2
  %temp.vect2465 = insertelement <16 x double> %temp.vect2464, double %1146, i32 3
  %temp.vect2466 = insertelement <16 x double> %temp.vect2465, double %1147, i32 4
  %temp.vect2467 = insertelement <16 x double> %temp.vect2466, double %1148, i32 5
  %temp.vect2468 = insertelement <16 x double> %temp.vect2467, double %1149, i32 6
  %temp.vect2469 = insertelement <16 x double> %temp.vect2468, double %1150, i32 7
  %temp.vect2470 = insertelement <16 x double> %temp.vect2469, double %1151, i32 8
  %temp.vect2471 = insertelement <16 x double> %temp.vect2470, double %1152, i32 9
  %temp.vect2472 = insertelement <16 x double> %temp.vect2471, double %1153, i32 10
  %temp.vect2473 = insertelement <16 x double> %temp.vect2472, double %1154, i32 11
  %temp.vect2474 = insertelement <16 x double> %temp.vect2473, double %1155, i32 12
  %temp.vect2475 = insertelement <16 x double> %temp.vect2474, double %1156, i32 13
  %temp.vect2476 = insertelement <16 x double> %temp.vect2475, double %1157, i32 14
  %temp.vect2477 = insertelement <16 x double> %temp.vect2476, double %1158, i32 15
  %1159 = fmul <16 x double> %temp.vect2477, <double 2.180000e-01, double 2.180000e-01, double 2.180000e-01, double 2.180000e-01, double 2.180000e-01, double 2.180000e-01, double 2.180000e-01, double 2.180000e-01, double 2.180000e-01, double 2.180000e-01, double 2.180000e-01, double 2.180000e-01, double 2.180000e-01, double 2.180000e-01, double 2.180000e-01, double 2.180000e-01>
  %1160 = fmul <16 x double> %7, <double 0xBF389C1E60B57F60, double 0xBF389C1E60B57F60, double 0xBF389C1E60B57F60, double 0xBF389C1E60B57F60, double 0xBF389C1E60B57F60, double 0xBF389C1E60B57F60, double 0xBF389C1E60B57F60, double 0xBF389C1E60B57F60, double 0xBF389C1E60B57F60, double 0xBF389C1E60B57F60, double 0xBF389C1E60B57F60, double 0xBF389C1E60B57F60, double 0xBF389C1E60B57F60, double 0xBF389C1E60B57F60, double 0xBF389C1E60B57F60, double 0xBF389C1E60B57F60>
  %extract2478 = extractelement <16 x double> %1160, i32 0
  %extract2479 = extractelement <16 x double> %1160, i32 1
  %extract2480 = extractelement <16 x double> %1160, i32 2
  %extract2481 = extractelement <16 x double> %1160, i32 3
  %extract2482 = extractelement <16 x double> %1160, i32 4
  %extract2483 = extractelement <16 x double> %1160, i32 5
  %extract2484 = extractelement <16 x double> %1160, i32 6
  %extract2485 = extractelement <16 x double> %1160, i32 7
  %extract2486 = extractelement <16 x double> %1160, i32 8
  %extract2487 = extractelement <16 x double> %1160, i32 9
  %extract2488 = extractelement <16 x double> %1160, i32 10
  %extract2489 = extractelement <16 x double> %1160, i32 11
  %extract2490 = extractelement <16 x double> %1160, i32 12
  %extract2491 = extractelement <16 x double> %1160, i32 13
  %extract2492 = extractelement <16 x double> %1160, i32 14
  %extract2493 = extractelement <16 x double> %1160, i32 15
  %1161 = tail call double @_Z3expd(double %extract2478) nounwind
  %1162 = tail call double @_Z3expd(double %extract2479) nounwind
  %1163 = tail call double @_Z3expd(double %extract2480) nounwind
  %1164 = tail call double @_Z3expd(double %extract2481) nounwind
  %1165 = tail call double @_Z3expd(double %extract2482) nounwind
  %1166 = tail call double @_Z3expd(double %extract2483) nounwind
  %1167 = tail call double @_Z3expd(double %extract2484) nounwind
  %1168 = tail call double @_Z3expd(double %extract2485) nounwind
  %1169 = tail call double @_Z3expd(double %extract2486) nounwind
  %1170 = tail call double @_Z3expd(double %extract2487) nounwind
  %1171 = tail call double @_Z3expd(double %extract2488) nounwind
  %1172 = tail call double @_Z3expd(double %extract2489) nounwind
  %1173 = tail call double @_Z3expd(double %extract2490) nounwind
  %1174 = tail call double @_Z3expd(double %extract2491) nounwind
  %1175 = tail call double @_Z3expd(double %extract2492) nounwind
  %1176 = tail call double @_Z3expd(double %extract2493) nounwind
  %temp.vect2494 = insertelement <16 x double> undef, double %1161, i32 0
  %temp.vect2495 = insertelement <16 x double> %temp.vect2494, double %1162, i32 1
  %temp.vect2496 = insertelement <16 x double> %temp.vect2495, double %1163, i32 2
  %temp.vect2497 = insertelement <16 x double> %temp.vect2496, double %1164, i32 3
  %temp.vect2498 = insertelement <16 x double> %temp.vect2497, double %1165, i32 4
  %temp.vect2499 = insertelement <16 x double> %temp.vect2498, double %1166, i32 5
  %temp.vect2500 = insertelement <16 x double> %temp.vect2499, double %1167, i32 6
  %temp.vect2501 = insertelement <16 x double> %temp.vect2500, double %1168, i32 7
  %temp.vect2502 = insertelement <16 x double> %temp.vect2501, double %1169, i32 8
  %temp.vect2503 = insertelement <16 x double> %temp.vect2502, double %1170, i32 9
  %temp.vect2504 = insertelement <16 x double> %temp.vect2503, double %1171, i32 10
  %temp.vect2505 = insertelement <16 x double> %temp.vect2504, double %1172, i32 11
  %temp.vect2506 = insertelement <16 x double> %temp.vect2505, double %1173, i32 12
  %temp.vect2507 = insertelement <16 x double> %temp.vect2506, double %1174, i32 13
  %temp.vect2508 = insertelement <16 x double> %temp.vect2507, double %1175, i32 14
  %temp.vect2509 = insertelement <16 x double> %temp.vect2508, double %1176, i32 15
  %1177 = fmul <16 x double> %temp.vect2509, <double 7.820000e-01, double 7.820000e-01, double 7.820000e-01, double 7.820000e-01, double 7.820000e-01, double 7.820000e-01, double 7.820000e-01, double 7.820000e-01, double 7.820000e-01, double 7.820000e-01, double 7.820000e-01, double 7.820000e-01, double 7.820000e-01, double 7.820000e-01, double 7.820000e-01, double 7.820000e-01>
  %1178 = fadd <16 x double> %1159, %1177
  %1179 = fmul <16 x double> %981, <double -6.095000e+03, double -6.095000e+03, double -6.095000e+03, double -6.095000e+03, double -6.095000e+03, double -6.095000e+03, double -6.095000e+03, double -6.095000e+03, double -6.095000e+03, double -6.095000e+03, double -6.095000e+03, double -6.095000e+03, double -6.095000e+03, double -6.095000e+03, double -6.095000e+03, double -6.095000e+03>
  %extract2510 = extractelement <16 x double> %1179, i32 0
  %extract2511 = extractelement <16 x double> %1179, i32 1
  %extract2512 = extractelement <16 x double> %1179, i32 2
  %extract2513 = extractelement <16 x double> %1179, i32 3
  %extract2514 = extractelement <16 x double> %1179, i32 4
  %extract2515 = extractelement <16 x double> %1179, i32 5
  %extract2516 = extractelement <16 x double> %1179, i32 6
  %extract2517 = extractelement <16 x double> %1179, i32 7
  %extract2518 = extractelement <16 x double> %1179, i32 8
  %extract2519 = extractelement <16 x double> %1179, i32 9
  %extract2520 = extractelement <16 x double> %1179, i32 10
  %extract2521 = extractelement <16 x double> %1179, i32 11
  %extract2522 = extractelement <16 x double> %1179, i32 12
  %extract2523 = extractelement <16 x double> %1179, i32 13
  %extract2524 = extractelement <16 x double> %1179, i32 14
  %extract2525 = extractelement <16 x double> %1179, i32 15
  %1180 = tail call double @_Z3expd(double %extract2510) nounwind
  %1181 = tail call double @_Z3expd(double %extract2511) nounwind
  %1182 = tail call double @_Z3expd(double %extract2512) nounwind
  %1183 = tail call double @_Z3expd(double %extract2513) nounwind
  %1184 = tail call double @_Z3expd(double %extract2514) nounwind
  %1185 = tail call double @_Z3expd(double %extract2515) nounwind
  %1186 = tail call double @_Z3expd(double %extract2516) nounwind
  %1187 = tail call double @_Z3expd(double %extract2517) nounwind
  %1188 = tail call double @_Z3expd(double %extract2518) nounwind
  %1189 = tail call double @_Z3expd(double %extract2519) nounwind
  %1190 = tail call double @_Z3expd(double %extract2520) nounwind
  %1191 = tail call double @_Z3expd(double %extract2521) nounwind
  %1192 = tail call double @_Z3expd(double %extract2522) nounwind
  %1193 = tail call double @_Z3expd(double %extract2523) nounwind
  %1194 = tail call double @_Z3expd(double %extract2524) nounwind
  %1195 = tail call double @_Z3expd(double %extract2525) nounwind
  %temp.vect2526 = insertelement <16 x double> undef, double %1180, i32 0
  %temp.vect2527 = insertelement <16 x double> %temp.vect2526, double %1181, i32 1
  %temp.vect2528 = insertelement <16 x double> %temp.vect2527, double %1182, i32 2
  %temp.vect2529 = insertelement <16 x double> %temp.vect2528, double %1183, i32 3
  %temp.vect2530 = insertelement <16 x double> %temp.vect2529, double %1184, i32 4
  %temp.vect2531 = insertelement <16 x double> %temp.vect2530, double %1185, i32 5
  %temp.vect2532 = insertelement <16 x double> %temp.vect2531, double %1186, i32 6
  %temp.vect2533 = insertelement <16 x double> %temp.vect2532, double %1187, i32 7
  %temp.vect2534 = insertelement <16 x double> %temp.vect2533, double %1188, i32 8
  %temp.vect2535 = insertelement <16 x double> %temp.vect2534, double %1189, i32 9
  %temp.vect2536 = insertelement <16 x double> %temp.vect2535, double %1190, i32 10
  %temp.vect2537 = insertelement <16 x double> %temp.vect2536, double %1191, i32 11
  %temp.vect2538 = insertelement <16 x double> %temp.vect2537, double %1192, i32 12
  %temp.vect2539 = insertelement <16 x double> %temp.vect2538, double %1193, i32 13
  %temp.vect2540 = insertelement <16 x double> %temp.vect2539, double %1194, i32 14
  %temp.vect2541 = insertelement <16 x double> %temp.vect2540, double %1195, i32 15
  %1196 = fadd <16 x double> %1178, %temp.vect2541
  %extract2542 = extractelement <16 x double> %1196, i32 0
  %extract2543 = extractelement <16 x double> %1196, i32 1
  %extract2544 = extractelement <16 x double> %1196, i32 2
  %extract2545 = extractelement <16 x double> %1196, i32 3
  %extract2546 = extractelement <16 x double> %1196, i32 4
  %extract2547 = extractelement <16 x double> %1196, i32 5
  %extract2548 = extractelement <16 x double> %1196, i32 6
  %extract2549 = extractelement <16 x double> %1196, i32 7
  %extract2550 = extractelement <16 x double> %1196, i32 8
  %extract2551 = extractelement <16 x double> %1196, i32 9
  %extract2552 = extractelement <16 x double> %1196, i32 10
  %extract2553 = extractelement <16 x double> %1196, i32 11
  %extract2554 = extractelement <16 x double> %1196, i32 12
  %extract2555 = extractelement <16 x double> %1196, i32 13
  %extract2556 = extractelement <16 x double> %1196, i32 14
  %extract2557 = extractelement <16 x double> %1196, i32 15
  %1197 = tail call double @_Z4fmaxdd(double %extract2542, double 1.000000e-200) nounwind
  %1198 = tail call double @_Z4fmaxdd(double %extract2543, double 1.000000e-200) nounwind
  %1199 = tail call double @_Z4fmaxdd(double %extract2544, double 1.000000e-200) nounwind
  %1200 = tail call double @_Z4fmaxdd(double %extract2545, double 1.000000e-200) nounwind
  %1201 = tail call double @_Z4fmaxdd(double %extract2546, double 1.000000e-200) nounwind
  %1202 = tail call double @_Z4fmaxdd(double %extract2547, double 1.000000e-200) nounwind
  %1203 = tail call double @_Z4fmaxdd(double %extract2548, double 1.000000e-200) nounwind
  %1204 = tail call double @_Z4fmaxdd(double %extract2549, double 1.000000e-200) nounwind
  %1205 = tail call double @_Z4fmaxdd(double %extract2550, double 1.000000e-200) nounwind
  %1206 = tail call double @_Z4fmaxdd(double %extract2551, double 1.000000e-200) nounwind
  %1207 = tail call double @_Z4fmaxdd(double %extract2552, double 1.000000e-200) nounwind
  %1208 = tail call double @_Z4fmaxdd(double %extract2553, double 1.000000e-200) nounwind
  %1209 = tail call double @_Z4fmaxdd(double %extract2554, double 1.000000e-200) nounwind
  %1210 = tail call double @_Z4fmaxdd(double %extract2555, double 1.000000e-200) nounwind
  %1211 = tail call double @_Z4fmaxdd(double %extract2556, double 1.000000e-200) nounwind
  %1212 = tail call double @_Z4fmaxdd(double %extract2557, double 1.000000e-200) nounwind
  %1213 = tail call double @_Z5log10d(double %1197) nounwind
  %1214 = tail call double @_Z5log10d(double %1198) nounwind
  %1215 = tail call double @_Z5log10d(double %1199) nounwind
  %1216 = tail call double @_Z5log10d(double %1200) nounwind
  %1217 = tail call double @_Z5log10d(double %1201) nounwind
  %1218 = tail call double @_Z5log10d(double %1202) nounwind
  %1219 = tail call double @_Z5log10d(double %1203) nounwind
  %1220 = tail call double @_Z5log10d(double %1204) nounwind
  %1221 = tail call double @_Z5log10d(double %1205) nounwind
  %1222 = tail call double @_Z5log10d(double %1206) nounwind
  %1223 = tail call double @_Z5log10d(double %1207) nounwind
  %1224 = tail call double @_Z5log10d(double %1208) nounwind
  %1225 = tail call double @_Z5log10d(double %1209) nounwind
  %1226 = tail call double @_Z5log10d(double %1210) nounwind
  %1227 = tail call double @_Z5log10d(double %1211) nounwind
  %1228 = tail call double @_Z5log10d(double %1212) nounwind
  %temp.vect2558 = insertelement <16 x double> undef, double %1213, i32 0
  %temp.vect2559 = insertelement <16 x double> %temp.vect2558, double %1214, i32 1
  %temp.vect2560 = insertelement <16 x double> %temp.vect2559, double %1215, i32 2
  %temp.vect2561 = insertelement <16 x double> %temp.vect2560, double %1216, i32 3
  %temp.vect2562 = insertelement <16 x double> %temp.vect2561, double %1217, i32 4
  %temp.vect2563 = insertelement <16 x double> %temp.vect2562, double %1218, i32 5
  %temp.vect2564 = insertelement <16 x double> %temp.vect2563, double %1219, i32 6
  %temp.vect2565 = insertelement <16 x double> %temp.vect2564, double %1220, i32 7
  %temp.vect2566 = insertelement <16 x double> %temp.vect2565, double %1221, i32 8
  %temp.vect2567 = insertelement <16 x double> %temp.vect2566, double %1222, i32 9
  %temp.vect2568 = insertelement <16 x double> %temp.vect2567, double %1223, i32 10
  %temp.vect2569 = insertelement <16 x double> %temp.vect2568, double %1224, i32 11
  %temp.vect2570 = insertelement <16 x double> %temp.vect2569, double %1225, i32 12
  %temp.vect2571 = insertelement <16 x double> %temp.vect2570, double %1226, i32 13
  %temp.vect2572 = insertelement <16 x double> %temp.vect2571, double %1227, i32 14
  %temp.vect2573 = insertelement <16 x double> %temp.vect2572, double %1228, i32 15
  %1229 = fmul <16 x double> %temp.vect2573, <double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00>
  %1230 = fsub <16 x double> <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>, %1229
  %1231 = fmul <16 x double> %temp.vect2573, <double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01>
  %1232 = fadd <16 x double> %1231, <double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01>
  %1233 = fsub <16 x double> %temp.vect2589, %1232
  %1234 = fmul <16 x double> %1233, <double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01>
  %1235 = fsub <16 x double> %1230, %1234
  %1236 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1235
  %1237 = fmul <16 x double> %1233, %1236
  %1238 = fmul <16 x double> %1237, %1237
  %1239 = fadd <16 x double> %1238, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %1240 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1239
  %1241 = fmul <16 x double> %temp.vect2573, %1240
  %extract2590 = extractelement <16 x double> %1241, i32 0
  %extract2591 = extractelement <16 x double> %1241, i32 1
  %extract2592 = extractelement <16 x double> %1241, i32 2
  %extract2593 = extractelement <16 x double> %1241, i32 3
  %extract2594 = extractelement <16 x double> %1241, i32 4
  %extract2595 = extractelement <16 x double> %1241, i32 5
  %extract2596 = extractelement <16 x double> %1241, i32 6
  %extract2597 = extractelement <16 x double> %1241, i32 7
  %extract2598 = extractelement <16 x double> %1241, i32 8
  %extract2599 = extractelement <16 x double> %1241, i32 9
  %extract2600 = extractelement <16 x double> %1241, i32 10
  %extract2601 = extractelement <16 x double> %1241, i32 11
  %extract2602 = extractelement <16 x double> %1241, i32 12
  %extract2603 = extractelement <16 x double> %1241, i32 13
  %extract2604 = extractelement <16 x double> %1241, i32 14
  %extract2605 = extractelement <16 x double> %1241, i32 15
  %1242 = tail call double @_Z5exp10d(double %extract2590) nounwind
  %1243 = tail call double @_Z5exp10d(double %extract2591) nounwind
  %1244 = tail call double @_Z5exp10d(double %extract2592) nounwind
  %1245 = tail call double @_Z5exp10d(double %extract2593) nounwind
  %1246 = tail call double @_Z5exp10d(double %extract2594) nounwind
  %1247 = tail call double @_Z5exp10d(double %extract2595) nounwind
  %1248 = tail call double @_Z5exp10d(double %extract2596) nounwind
  %1249 = tail call double @_Z5exp10d(double %extract2597) nounwind
  %1250 = tail call double @_Z5exp10d(double %extract2598) nounwind
  %1251 = tail call double @_Z5exp10d(double %extract2599) nounwind
  %1252 = tail call double @_Z5exp10d(double %extract2600) nounwind
  %1253 = tail call double @_Z5exp10d(double %extract2601) nounwind
  %1254 = tail call double @_Z5exp10d(double %extract2602) nounwind
  %1255 = tail call double @_Z5exp10d(double %extract2603) nounwind
  %1256 = tail call double @_Z5exp10d(double %extract2604) nounwind
  %1257 = tail call double @_Z5exp10d(double %extract2605) nounwind
  %temp.vect2606 = insertelement <16 x double> undef, double %1242, i32 0
  %temp.vect2607 = insertelement <16 x double> %temp.vect2606, double %1243, i32 1
  %temp.vect2608 = insertelement <16 x double> %temp.vect2607, double %1244, i32 2
  %temp.vect2609 = insertelement <16 x double> %temp.vect2608, double %1245, i32 3
  %temp.vect2610 = insertelement <16 x double> %temp.vect2609, double %1246, i32 4
  %temp.vect2611 = insertelement <16 x double> %temp.vect2610, double %1247, i32 5
  %temp.vect2612 = insertelement <16 x double> %temp.vect2611, double %1248, i32 6
  %temp.vect2613 = insertelement <16 x double> %temp.vect2612, double %1249, i32 7
  %temp.vect2614 = insertelement <16 x double> %temp.vect2613, double %1250, i32 8
  %temp.vect2615 = insertelement <16 x double> %temp.vect2614, double %1251, i32 9
  %temp.vect2616 = insertelement <16 x double> %temp.vect2615, double %1252, i32 10
  %temp.vect2617 = insertelement <16 x double> %temp.vect2616, double %1253, i32 11
  %temp.vect2618 = insertelement <16 x double> %temp.vect2617, double %1254, i32 12
  %temp.vect2619 = insertelement <16 x double> %temp.vect2618, double %1255, i32 13
  %temp.vect2620 = insertelement <16 x double> %temp.vect2619, double %1256, i32 14
  %temp.vect2621 = insertelement <16 x double> %temp.vect2620, double %1257, i32 15
  %1258 = fmul <16 x double> %temp.vect2621, %1109
  %1259 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1260 = load i64* %1259, align 8
  %1261 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1262 = load i64* %1261, align 8
  %1263 = add i64 %1260, %1262
  %extract2624 = add i64 %1263, 14487552
  %1264 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2624
  %ptrTypeCast2640 = bitcast double addrspace(1)* %1264 to <16 x double> addrspace(1)*
  %1265 = load <16 x double> addrspace(1)* %ptrTypeCast2640, align 8
  %1266 = fmul <16 x double> %1265, %1258
  %1267 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1268 = load i64* %1267, align 8
  %1269 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1270 = load i64* %1269, align 8
  %1271 = add i64 %1268, %1270
  %extract2643 = add i64 %1271, 14487552
  %1272 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2643
  %ptrTypeCast2659 = bitcast double addrspace(1)* %1272 to <16 x double> addrspace(1)*
  store <16 x double> %1266, <16 x double> addrspace(1)* %ptrTypeCast2659, align 8
  %1273 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1274 = load i64* %1273, align 8
  %1275 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1276 = load i64* %1275, align 8
  %1277 = add i64 %1274, %1276
  %extract2662 = add i64 %1277, 14487552
  %1278 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract2662
  %ptrTypeCast2678 = bitcast double addrspace(1)* %1278 to <16 x double> addrspace(1)*
  %1279 = load <16 x double> addrspace(1)* %ptrTypeCast2678, align 8
  %1280 = fmul <16 x double> %1279, %1258
  %1281 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1282 = load i64* %1281, align 8
  %1283 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1284 = load i64* %1283, align 8
  %1285 = add i64 %1282, %1284
  %extract2681 = add i64 %1285, 14487552
  %1286 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract2681
  %ptrTypeCast2697 = bitcast double addrspace(1)* %1286 to <16 x double> addrspace(1)*
  store <16 x double> %1280, <16 x double> addrspace(1)* %ptrTypeCast2697, align 8
  %1287 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1288 = load i64* %1287, align 8
  %1289 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1290 = load i64* %1289, align 8
  %1291 = add i64 %1288, %1290
  %extract2700 = add i64 %1291, 1548288
  %1292 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %extract2700
  %ptrTypeCast2716 = bitcast double addrspace(1)* %1292 to <16 x double> addrspace(1)*
  %1293 = load <16 x double> addrspace(1)* %ptrTypeCast2716, align 8
  %1294 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1295 = load i64* %1294, align 8
  %1296 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1297 = load i64* %1296, align 8
  %1298 = add i64 %1295, %1297
  %extract2719 = add i64 %1298, 15925248
  %1299 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2719
  %ptrTypeCast2735 = bitcast double addrspace(1)* %1299 to <16 x double> addrspace(1)*
  %1300 = load <16 x double> addrspace(1)* %ptrTypeCast2735, align 8
  %1301 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1300
  %1302 = fmul <16 x double> %213, %1301
  %1303 = fmul <16 x double> %1293, %1302
  %extract2736 = extractelement <16 x double> %1303, i32 0
  %extract2737 = extractelement <16 x double> %1303, i32 1
  %extract2738 = extractelement <16 x double> %1303, i32 2
  %extract2739 = extractelement <16 x double> %1303, i32 3
  %extract2740 = extractelement <16 x double> %1303, i32 4
  %extract2741 = extractelement <16 x double> %1303, i32 5
  %extract2742 = extractelement <16 x double> %1303, i32 6
  %extract2743 = extractelement <16 x double> %1303, i32 7
  %extract2744 = extractelement <16 x double> %1303, i32 8
  %extract2745 = extractelement <16 x double> %1303, i32 9
  %extract2746 = extractelement <16 x double> %1303, i32 10
  %extract2747 = extractelement <16 x double> %1303, i32 11
  %extract2748 = extractelement <16 x double> %1303, i32 12
  %extract2749 = extractelement <16 x double> %1303, i32 13
  %extract2750 = extractelement <16 x double> %1303, i32 14
  %extract2751 = extractelement <16 x double> %1303, i32 15
  %1304 = fadd <16 x double> %1303, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %1305 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1304
  %1306 = fmul <16 x double> %1303, %1305
  %1307 = tail call double @_Z4fmaxdd(double %extract2736, double 1.000000e-200) nounwind
  %1308 = tail call double @_Z4fmaxdd(double %extract2737, double 1.000000e-200) nounwind
  %1309 = tail call double @_Z4fmaxdd(double %extract2738, double 1.000000e-200) nounwind
  %1310 = tail call double @_Z4fmaxdd(double %extract2739, double 1.000000e-200) nounwind
  %1311 = tail call double @_Z4fmaxdd(double %extract2740, double 1.000000e-200) nounwind
  %1312 = tail call double @_Z4fmaxdd(double %extract2741, double 1.000000e-200) nounwind
  %1313 = tail call double @_Z4fmaxdd(double %extract2742, double 1.000000e-200) nounwind
  %1314 = tail call double @_Z4fmaxdd(double %extract2743, double 1.000000e-200) nounwind
  %1315 = tail call double @_Z4fmaxdd(double %extract2744, double 1.000000e-200) nounwind
  %1316 = tail call double @_Z4fmaxdd(double %extract2745, double 1.000000e-200) nounwind
  %1317 = tail call double @_Z4fmaxdd(double %extract2746, double 1.000000e-200) nounwind
  %1318 = tail call double @_Z4fmaxdd(double %extract2747, double 1.000000e-200) nounwind
  %1319 = tail call double @_Z4fmaxdd(double %extract2748, double 1.000000e-200) nounwind
  %1320 = tail call double @_Z4fmaxdd(double %extract2749, double 1.000000e-200) nounwind
  %1321 = tail call double @_Z4fmaxdd(double %extract2750, double 1.000000e-200) nounwind
  %1322 = tail call double @_Z4fmaxdd(double %extract2751, double 1.000000e-200) nounwind
  %1323 = tail call double @_Z5log10d(double %1307) nounwind
  %1324 = tail call double @_Z5log10d(double %1308) nounwind
  %1325 = tail call double @_Z5log10d(double %1309) nounwind
  %1326 = tail call double @_Z5log10d(double %1310) nounwind
  %1327 = tail call double @_Z5log10d(double %1311) nounwind
  %1328 = tail call double @_Z5log10d(double %1312) nounwind
  %1329 = tail call double @_Z5log10d(double %1313) nounwind
  %1330 = tail call double @_Z5log10d(double %1314) nounwind
  %1331 = tail call double @_Z5log10d(double %1315) nounwind
  %1332 = tail call double @_Z5log10d(double %1316) nounwind
  %1333 = tail call double @_Z5log10d(double %1317) nounwind
  %1334 = tail call double @_Z5log10d(double %1318) nounwind
  %1335 = tail call double @_Z5log10d(double %1319) nounwind
  %1336 = tail call double @_Z5log10d(double %1320) nounwind
  %1337 = tail call double @_Z5log10d(double %1321) nounwind
  %1338 = tail call double @_Z5log10d(double %1322) nounwind
  %temp.vect2880 = insertelement <16 x double> undef, double %1323, i32 0
  %temp.vect2881 = insertelement <16 x double> %temp.vect2880, double %1324, i32 1
  %temp.vect2882 = insertelement <16 x double> %temp.vect2881, double %1325, i32 2
  %temp.vect2883 = insertelement <16 x double> %temp.vect2882, double %1326, i32 3
  %temp.vect2884 = insertelement <16 x double> %temp.vect2883, double %1327, i32 4
  %temp.vect2885 = insertelement <16 x double> %temp.vect2884, double %1328, i32 5
  %temp.vect2886 = insertelement <16 x double> %temp.vect2885, double %1329, i32 6
  %temp.vect2887 = insertelement <16 x double> %temp.vect2886, double %1330, i32 7
  %temp.vect2888 = insertelement <16 x double> %temp.vect2887, double %1331, i32 8
  %temp.vect2889 = insertelement <16 x double> %temp.vect2888, double %1332, i32 9
  %temp.vect2890 = insertelement <16 x double> %temp.vect2889, double %1333, i32 10
  %temp.vect2891 = insertelement <16 x double> %temp.vect2890, double %1334, i32 11
  %temp.vect2892 = insertelement <16 x double> %temp.vect2891, double %1335, i32 12
  %temp.vect2893 = insertelement <16 x double> %temp.vect2892, double %1336, i32 13
  %temp.vect2894 = insertelement <16 x double> %temp.vect2893, double %1337, i32 14
  %temp.vect2895 = insertelement <16 x double> %temp.vect2894, double %1338, i32 15
  %1339 = fmul <16 x double> %7, <double 0xBF48715A79FC1ABC, double 0xBF48715A79FC1ABC, double 0xBF48715A79FC1ABC, double 0xBF48715A79FC1ABC, double 0xBF48715A79FC1ABC, double 0xBF48715A79FC1ABC, double 0xBF48715A79FC1ABC, double 0xBF48715A79FC1ABC, double 0xBF48715A79FC1ABC, double 0xBF48715A79FC1ABC, double 0xBF48715A79FC1ABC, double 0xBF48715A79FC1ABC, double 0xBF48715A79FC1ABC, double 0xBF48715A79FC1ABC, double 0xBF48715A79FC1ABC, double 0xBF48715A79FC1ABC>
  %extract2752 = extractelement <16 x double> %1339, i32 0
  %extract2753 = extractelement <16 x double> %1339, i32 1
  %extract2754 = extractelement <16 x double> %1339, i32 2
  %extract2755 = extractelement <16 x double> %1339, i32 3
  %extract2756 = extractelement <16 x double> %1339, i32 4
  %extract2757 = extractelement <16 x double> %1339, i32 5
  %extract2758 = extractelement <16 x double> %1339, i32 6
  %extract2759 = extractelement <16 x double> %1339, i32 7
  %extract2760 = extractelement <16 x double> %1339, i32 8
  %extract2761 = extractelement <16 x double> %1339, i32 9
  %extract2762 = extractelement <16 x double> %1339, i32 10
  %extract2763 = extractelement <16 x double> %1339, i32 11
  %extract2764 = extractelement <16 x double> %1339, i32 12
  %extract2765 = extractelement <16 x double> %1339, i32 13
  %extract2766 = extractelement <16 x double> %1339, i32 14
  %extract2767 = extractelement <16 x double> %1339, i32 15
  %1340 = tail call double @_Z3expd(double %extract2752) nounwind
  %1341 = tail call double @_Z3expd(double %extract2753) nounwind
  %1342 = tail call double @_Z3expd(double %extract2754) nounwind
  %1343 = tail call double @_Z3expd(double %extract2755) nounwind
  %1344 = tail call double @_Z3expd(double %extract2756) nounwind
  %1345 = tail call double @_Z3expd(double %extract2757) nounwind
  %1346 = tail call double @_Z3expd(double %extract2758) nounwind
  %1347 = tail call double @_Z3expd(double %extract2759) nounwind
  %1348 = tail call double @_Z3expd(double %extract2760) nounwind
  %1349 = tail call double @_Z3expd(double %extract2761) nounwind
  %1350 = tail call double @_Z3expd(double %extract2762) nounwind
  %1351 = tail call double @_Z3expd(double %extract2763) nounwind
  %1352 = tail call double @_Z3expd(double %extract2764) nounwind
  %1353 = tail call double @_Z3expd(double %extract2765) nounwind
  %1354 = tail call double @_Z3expd(double %extract2766) nounwind
  %1355 = tail call double @_Z3expd(double %extract2767) nounwind
  %temp.vect2768 = insertelement <16 x double> undef, double %1340, i32 0
  %temp.vect2769 = insertelement <16 x double> %temp.vect2768, double %1341, i32 1
  %temp.vect2770 = insertelement <16 x double> %temp.vect2769, double %1342, i32 2
  %temp.vect2771 = insertelement <16 x double> %temp.vect2770, double %1343, i32 3
  %temp.vect2772 = insertelement <16 x double> %temp.vect2771, double %1344, i32 4
  %temp.vect2773 = insertelement <16 x double> %temp.vect2772, double %1345, i32 5
  %temp.vect2774 = insertelement <16 x double> %temp.vect2773, double %1346, i32 6
  %temp.vect2775 = insertelement <16 x double> %temp.vect2774, double %1347, i32 7
  %temp.vect2776 = insertelement <16 x double> %temp.vect2775, double %1348, i32 8
  %temp.vect2777 = insertelement <16 x double> %temp.vect2776, double %1349, i32 9
  %temp.vect2778 = insertelement <16 x double> %temp.vect2777, double %1350, i32 10
  %temp.vect2779 = insertelement <16 x double> %temp.vect2778, double %1351, i32 11
  %temp.vect2780 = insertelement <16 x double> %temp.vect2779, double %1352, i32 12
  %temp.vect2781 = insertelement <16 x double> %temp.vect2780, double %1353, i32 13
  %temp.vect2782 = insertelement <16 x double> %temp.vect2781, double %1354, i32 14
  %temp.vect2783 = insertelement <16 x double> %temp.vect2782, double %1355, i32 15
  %1356 = fmul <16 x double> %temp.vect2783, <double 8.250000e-01, double 8.250000e-01, double 8.250000e-01, double 8.250000e-01, double 8.250000e-01, double 8.250000e-01, double 8.250000e-01, double 8.250000e-01, double 8.250000e-01, double 8.250000e-01, double 8.250000e-01, double 8.250000e-01, double 8.250000e-01, double 8.250000e-01, double 8.250000e-01, double 8.250000e-01>
  %1357 = fmul <16 x double> %7, <double 0xBEF179EC9CBD821E, double 0xBEF179EC9CBD821E, double 0xBEF179EC9CBD821E, double 0xBEF179EC9CBD821E, double 0xBEF179EC9CBD821E, double 0xBEF179EC9CBD821E, double 0xBEF179EC9CBD821E, double 0xBEF179EC9CBD821E, double 0xBEF179EC9CBD821E, double 0xBEF179EC9CBD821E, double 0xBEF179EC9CBD821E, double 0xBEF179EC9CBD821E, double 0xBEF179EC9CBD821E, double 0xBEF179EC9CBD821E, double 0xBEF179EC9CBD821E, double 0xBEF179EC9CBD821E>
  %extract2784 = extractelement <16 x double> %1357, i32 0
  %extract2785 = extractelement <16 x double> %1357, i32 1
  %extract2786 = extractelement <16 x double> %1357, i32 2
  %extract2787 = extractelement <16 x double> %1357, i32 3
  %extract2788 = extractelement <16 x double> %1357, i32 4
  %extract2789 = extractelement <16 x double> %1357, i32 5
  %extract2790 = extractelement <16 x double> %1357, i32 6
  %extract2791 = extractelement <16 x double> %1357, i32 7
  %extract2792 = extractelement <16 x double> %1357, i32 8
  %extract2793 = extractelement <16 x double> %1357, i32 9
  %extract2794 = extractelement <16 x double> %1357, i32 10
  %extract2795 = extractelement <16 x double> %1357, i32 11
  %extract2796 = extractelement <16 x double> %1357, i32 12
  %extract2797 = extractelement <16 x double> %1357, i32 13
  %extract2798 = extractelement <16 x double> %1357, i32 14
  %extract2799 = extractelement <16 x double> %1357, i32 15
  %1358 = tail call double @_Z3expd(double %extract2784) nounwind
  %1359 = tail call double @_Z3expd(double %extract2785) nounwind
  %1360 = tail call double @_Z3expd(double %extract2786) nounwind
  %1361 = tail call double @_Z3expd(double %extract2787) nounwind
  %1362 = tail call double @_Z3expd(double %extract2788) nounwind
  %1363 = tail call double @_Z3expd(double %extract2789) nounwind
  %1364 = tail call double @_Z3expd(double %extract2790) nounwind
  %1365 = tail call double @_Z3expd(double %extract2791) nounwind
  %1366 = tail call double @_Z3expd(double %extract2792) nounwind
  %1367 = tail call double @_Z3expd(double %extract2793) nounwind
  %1368 = tail call double @_Z3expd(double %extract2794) nounwind
  %1369 = tail call double @_Z3expd(double %extract2795) nounwind
  %1370 = tail call double @_Z3expd(double %extract2796) nounwind
  %1371 = tail call double @_Z3expd(double %extract2797) nounwind
  %1372 = tail call double @_Z3expd(double %extract2798) nounwind
  %1373 = tail call double @_Z3expd(double %extract2799) nounwind
  %temp.vect2800 = insertelement <16 x double> undef, double %1358, i32 0
  %temp.vect2801 = insertelement <16 x double> %temp.vect2800, double %1359, i32 1
  %temp.vect2802 = insertelement <16 x double> %temp.vect2801, double %1360, i32 2
  %temp.vect2803 = insertelement <16 x double> %temp.vect2802, double %1361, i32 3
  %temp.vect2804 = insertelement <16 x double> %temp.vect2803, double %1362, i32 4
  %temp.vect2805 = insertelement <16 x double> %temp.vect2804, double %1363, i32 5
  %temp.vect2806 = insertelement <16 x double> %temp.vect2805, double %1364, i32 6
  %temp.vect2807 = insertelement <16 x double> %temp.vect2806, double %1365, i32 7
  %temp.vect2808 = insertelement <16 x double> %temp.vect2807, double %1366, i32 8
  %temp.vect2809 = insertelement <16 x double> %temp.vect2808, double %1367, i32 9
  %temp.vect2810 = insertelement <16 x double> %temp.vect2809, double %1368, i32 10
  %temp.vect2811 = insertelement <16 x double> %temp.vect2810, double %1369, i32 11
  %temp.vect2812 = insertelement <16 x double> %temp.vect2811, double %1370, i32 12
  %temp.vect2813 = insertelement <16 x double> %temp.vect2812, double %1371, i32 13
  %temp.vect2814 = insertelement <16 x double> %temp.vect2813, double %1372, i32 14
  %temp.vect2815 = insertelement <16 x double> %temp.vect2814, double %1373, i32 15
  %1374 = fmul <16 x double> %temp.vect2815, <double 1.750000e-01, double 1.750000e-01, double 1.750000e-01, double 1.750000e-01, double 1.750000e-01, double 1.750000e-01, double 1.750000e-01, double 1.750000e-01, double 1.750000e-01, double 1.750000e-01, double 1.750000e-01, double 1.750000e-01, double 1.750000e-01, double 1.750000e-01, double 1.750000e-01, double 1.750000e-01>
  %1375 = fadd <16 x double> %1356, %1374
  %1376 = fmul <16 x double> %981, <double -1.013980e+04, double -1.013980e+04, double -1.013980e+04, double -1.013980e+04, double -1.013980e+04, double -1.013980e+04, double -1.013980e+04, double -1.013980e+04, double -1.013980e+04, double -1.013980e+04, double -1.013980e+04, double -1.013980e+04, double -1.013980e+04, double -1.013980e+04, double -1.013980e+04, double -1.013980e+04>
  %extract2816 = extractelement <16 x double> %1376, i32 0
  %extract2817 = extractelement <16 x double> %1376, i32 1
  %extract2818 = extractelement <16 x double> %1376, i32 2
  %extract2819 = extractelement <16 x double> %1376, i32 3
  %extract2820 = extractelement <16 x double> %1376, i32 4
  %extract2821 = extractelement <16 x double> %1376, i32 5
  %extract2822 = extractelement <16 x double> %1376, i32 6
  %extract2823 = extractelement <16 x double> %1376, i32 7
  %extract2824 = extractelement <16 x double> %1376, i32 8
  %extract2825 = extractelement <16 x double> %1376, i32 9
  %extract2826 = extractelement <16 x double> %1376, i32 10
  %extract2827 = extractelement <16 x double> %1376, i32 11
  %extract2828 = extractelement <16 x double> %1376, i32 12
  %extract2829 = extractelement <16 x double> %1376, i32 13
  %extract2830 = extractelement <16 x double> %1376, i32 14
  %extract2831 = extractelement <16 x double> %1376, i32 15
  %1377 = tail call double @_Z3expd(double %extract2816) nounwind
  %1378 = tail call double @_Z3expd(double %extract2817) nounwind
  %1379 = tail call double @_Z3expd(double %extract2818) nounwind
  %1380 = tail call double @_Z3expd(double %extract2819) nounwind
  %1381 = tail call double @_Z3expd(double %extract2820) nounwind
  %1382 = tail call double @_Z3expd(double %extract2821) nounwind
  %1383 = tail call double @_Z3expd(double %extract2822) nounwind
  %1384 = tail call double @_Z3expd(double %extract2823) nounwind
  %1385 = tail call double @_Z3expd(double %extract2824) nounwind
  %1386 = tail call double @_Z3expd(double %extract2825) nounwind
  %1387 = tail call double @_Z3expd(double %extract2826) nounwind
  %1388 = tail call double @_Z3expd(double %extract2827) nounwind
  %1389 = tail call double @_Z3expd(double %extract2828) nounwind
  %1390 = tail call double @_Z3expd(double %extract2829) nounwind
  %1391 = tail call double @_Z3expd(double %extract2830) nounwind
  %1392 = tail call double @_Z3expd(double %extract2831) nounwind
  %temp.vect2832 = insertelement <16 x double> undef, double %1377, i32 0
  %temp.vect2833 = insertelement <16 x double> %temp.vect2832, double %1378, i32 1
  %temp.vect2834 = insertelement <16 x double> %temp.vect2833, double %1379, i32 2
  %temp.vect2835 = insertelement <16 x double> %temp.vect2834, double %1380, i32 3
  %temp.vect2836 = insertelement <16 x double> %temp.vect2835, double %1381, i32 4
  %temp.vect2837 = insertelement <16 x double> %temp.vect2836, double %1382, i32 5
  %temp.vect2838 = insertelement <16 x double> %temp.vect2837, double %1383, i32 6
  %temp.vect2839 = insertelement <16 x double> %temp.vect2838, double %1384, i32 7
  %temp.vect2840 = insertelement <16 x double> %temp.vect2839, double %1385, i32 8
  %temp.vect2841 = insertelement <16 x double> %temp.vect2840, double %1386, i32 9
  %temp.vect2842 = insertelement <16 x double> %temp.vect2841, double %1387, i32 10
  %temp.vect2843 = insertelement <16 x double> %temp.vect2842, double %1388, i32 11
  %temp.vect2844 = insertelement <16 x double> %temp.vect2843, double %1389, i32 12
  %temp.vect2845 = insertelement <16 x double> %temp.vect2844, double %1390, i32 13
  %temp.vect2846 = insertelement <16 x double> %temp.vect2845, double %1391, i32 14
  %temp.vect2847 = insertelement <16 x double> %temp.vect2846, double %1392, i32 15
  %1393 = fadd <16 x double> %1375, %temp.vect2847
  %extract2848 = extractelement <16 x double> %1393, i32 0
  %extract2849 = extractelement <16 x double> %1393, i32 1
  %extract2850 = extractelement <16 x double> %1393, i32 2
  %extract2851 = extractelement <16 x double> %1393, i32 3
  %extract2852 = extractelement <16 x double> %1393, i32 4
  %extract2853 = extractelement <16 x double> %1393, i32 5
  %extract2854 = extractelement <16 x double> %1393, i32 6
  %extract2855 = extractelement <16 x double> %1393, i32 7
  %extract2856 = extractelement <16 x double> %1393, i32 8
  %extract2857 = extractelement <16 x double> %1393, i32 9
  %extract2858 = extractelement <16 x double> %1393, i32 10
  %extract2859 = extractelement <16 x double> %1393, i32 11
  %extract2860 = extractelement <16 x double> %1393, i32 12
  %extract2861 = extractelement <16 x double> %1393, i32 13
  %extract2862 = extractelement <16 x double> %1393, i32 14
  %extract2863 = extractelement <16 x double> %1393, i32 15
  %1394 = tail call double @_Z4fmaxdd(double %extract2848, double 1.000000e-200) nounwind
  %1395 = tail call double @_Z4fmaxdd(double %extract2849, double 1.000000e-200) nounwind
  %1396 = tail call double @_Z4fmaxdd(double %extract2850, double 1.000000e-200) nounwind
  %1397 = tail call double @_Z4fmaxdd(double %extract2851, double 1.000000e-200) nounwind
  %1398 = tail call double @_Z4fmaxdd(double %extract2852, double 1.000000e-200) nounwind
  %1399 = tail call double @_Z4fmaxdd(double %extract2853, double 1.000000e-200) nounwind
  %1400 = tail call double @_Z4fmaxdd(double %extract2854, double 1.000000e-200) nounwind
  %1401 = tail call double @_Z4fmaxdd(double %extract2855, double 1.000000e-200) nounwind
  %1402 = tail call double @_Z4fmaxdd(double %extract2856, double 1.000000e-200) nounwind
  %1403 = tail call double @_Z4fmaxdd(double %extract2857, double 1.000000e-200) nounwind
  %1404 = tail call double @_Z4fmaxdd(double %extract2858, double 1.000000e-200) nounwind
  %1405 = tail call double @_Z4fmaxdd(double %extract2859, double 1.000000e-200) nounwind
  %1406 = tail call double @_Z4fmaxdd(double %extract2860, double 1.000000e-200) nounwind
  %1407 = tail call double @_Z4fmaxdd(double %extract2861, double 1.000000e-200) nounwind
  %1408 = tail call double @_Z4fmaxdd(double %extract2862, double 1.000000e-200) nounwind
  %1409 = tail call double @_Z4fmaxdd(double %extract2863, double 1.000000e-200) nounwind
  %1410 = tail call double @_Z5log10d(double %1394) nounwind
  %1411 = tail call double @_Z5log10d(double %1395) nounwind
  %1412 = tail call double @_Z5log10d(double %1396) nounwind
  %1413 = tail call double @_Z5log10d(double %1397) nounwind
  %1414 = tail call double @_Z5log10d(double %1398) nounwind
  %1415 = tail call double @_Z5log10d(double %1399) nounwind
  %1416 = tail call double @_Z5log10d(double %1400) nounwind
  %1417 = tail call double @_Z5log10d(double %1401) nounwind
  %1418 = tail call double @_Z5log10d(double %1402) nounwind
  %1419 = tail call double @_Z5log10d(double %1403) nounwind
  %1420 = tail call double @_Z5log10d(double %1404) nounwind
  %1421 = tail call double @_Z5log10d(double %1405) nounwind
  %1422 = tail call double @_Z5log10d(double %1406) nounwind
  %1423 = tail call double @_Z5log10d(double %1407) nounwind
  %1424 = tail call double @_Z5log10d(double %1408) nounwind
  %1425 = tail call double @_Z5log10d(double %1409) nounwind
  %temp.vect2864 = insertelement <16 x double> undef, double %1410, i32 0
  %temp.vect2865 = insertelement <16 x double> %temp.vect2864, double %1411, i32 1
  %temp.vect2866 = insertelement <16 x double> %temp.vect2865, double %1412, i32 2
  %temp.vect2867 = insertelement <16 x double> %temp.vect2866, double %1413, i32 3
  %temp.vect2868 = insertelement <16 x double> %temp.vect2867, double %1414, i32 4
  %temp.vect2869 = insertelement <16 x double> %temp.vect2868, double %1415, i32 5
  %temp.vect2870 = insertelement <16 x double> %temp.vect2869, double %1416, i32 6
  %temp.vect2871 = insertelement <16 x double> %temp.vect2870, double %1417, i32 7
  %temp.vect2872 = insertelement <16 x double> %temp.vect2871, double %1418, i32 8
  %temp.vect2873 = insertelement <16 x double> %temp.vect2872, double %1419, i32 9
  %temp.vect2874 = insertelement <16 x double> %temp.vect2873, double %1420, i32 10
  %temp.vect2875 = insertelement <16 x double> %temp.vect2874, double %1421, i32 11
  %temp.vect2876 = insertelement <16 x double> %temp.vect2875, double %1422, i32 12
  %temp.vect2877 = insertelement <16 x double> %temp.vect2876, double %1423, i32 13
  %temp.vect2878 = insertelement <16 x double> %temp.vect2877, double %1424, i32 14
  %temp.vect2879 = insertelement <16 x double> %temp.vect2878, double %1425, i32 15
  %1426 = fmul <16 x double> %temp.vect2879, <double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00>
  %1427 = fsub <16 x double> <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>, %1426
  %1428 = fmul <16 x double> %temp.vect2879, <double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01>
  %1429 = fadd <16 x double> %1428, <double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01>
  %1430 = fsub <16 x double> %temp.vect2895, %1429
  %1431 = fmul <16 x double> %1430, <double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01>
  %1432 = fsub <16 x double> %1427, %1431
  %1433 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1432
  %1434 = fmul <16 x double> %1430, %1433
  %1435 = fmul <16 x double> %1434, %1434
  %1436 = fadd <16 x double> %1435, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %1437 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1436
  %1438 = fmul <16 x double> %temp.vect2879, %1437
  %extract2896 = extractelement <16 x double> %1438, i32 0
  %extract2897 = extractelement <16 x double> %1438, i32 1
  %extract2898 = extractelement <16 x double> %1438, i32 2
  %extract2899 = extractelement <16 x double> %1438, i32 3
  %extract2900 = extractelement <16 x double> %1438, i32 4
  %extract2901 = extractelement <16 x double> %1438, i32 5
  %extract2902 = extractelement <16 x double> %1438, i32 6
  %extract2903 = extractelement <16 x double> %1438, i32 7
  %extract2904 = extractelement <16 x double> %1438, i32 8
  %extract2905 = extractelement <16 x double> %1438, i32 9
  %extract2906 = extractelement <16 x double> %1438, i32 10
  %extract2907 = extractelement <16 x double> %1438, i32 11
  %extract2908 = extractelement <16 x double> %1438, i32 12
  %extract2909 = extractelement <16 x double> %1438, i32 13
  %extract2910 = extractelement <16 x double> %1438, i32 14
  %extract2911 = extractelement <16 x double> %1438, i32 15
  %1439 = tail call double @_Z5exp10d(double %extract2896) nounwind
  %1440 = tail call double @_Z5exp10d(double %extract2897) nounwind
  %1441 = tail call double @_Z5exp10d(double %extract2898) nounwind
  %1442 = tail call double @_Z5exp10d(double %extract2899) nounwind
  %1443 = tail call double @_Z5exp10d(double %extract2900) nounwind
  %1444 = tail call double @_Z5exp10d(double %extract2901) nounwind
  %1445 = tail call double @_Z5exp10d(double %extract2902) nounwind
  %1446 = tail call double @_Z5exp10d(double %extract2903) nounwind
  %1447 = tail call double @_Z5exp10d(double %extract2904) nounwind
  %1448 = tail call double @_Z5exp10d(double %extract2905) nounwind
  %1449 = tail call double @_Z5exp10d(double %extract2906) nounwind
  %1450 = tail call double @_Z5exp10d(double %extract2907) nounwind
  %1451 = tail call double @_Z5exp10d(double %extract2908) nounwind
  %1452 = tail call double @_Z5exp10d(double %extract2909) nounwind
  %1453 = tail call double @_Z5exp10d(double %extract2910) nounwind
  %1454 = tail call double @_Z5exp10d(double %extract2911) nounwind
  %temp.vect2912 = insertelement <16 x double> undef, double %1439, i32 0
  %temp.vect2913 = insertelement <16 x double> %temp.vect2912, double %1440, i32 1
  %temp.vect2914 = insertelement <16 x double> %temp.vect2913, double %1441, i32 2
  %temp.vect2915 = insertelement <16 x double> %temp.vect2914, double %1442, i32 3
  %temp.vect2916 = insertelement <16 x double> %temp.vect2915, double %1443, i32 4
  %temp.vect2917 = insertelement <16 x double> %temp.vect2916, double %1444, i32 5
  %temp.vect2918 = insertelement <16 x double> %temp.vect2917, double %1445, i32 6
  %temp.vect2919 = insertelement <16 x double> %temp.vect2918, double %1446, i32 7
  %temp.vect2920 = insertelement <16 x double> %temp.vect2919, double %1447, i32 8
  %temp.vect2921 = insertelement <16 x double> %temp.vect2920, double %1448, i32 9
  %temp.vect2922 = insertelement <16 x double> %temp.vect2921, double %1449, i32 10
  %temp.vect2923 = insertelement <16 x double> %temp.vect2922, double %1450, i32 11
  %temp.vect2924 = insertelement <16 x double> %temp.vect2923, double %1451, i32 12
  %temp.vect2925 = insertelement <16 x double> %temp.vect2924, double %1452, i32 13
  %temp.vect2926 = insertelement <16 x double> %temp.vect2925, double %1453, i32 14
  %temp.vect2927 = insertelement <16 x double> %temp.vect2926, double %1454, i32 15
  %1455 = fmul <16 x double> %temp.vect2927, %1306
  %1456 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1457 = load i64* %1456, align 8
  %1458 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1459 = load i64* %1458, align 8
  %1460 = add i64 %1457, %1459
  %extract2930 = add i64 %1460, 15925248
  %1461 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2930
  %ptrTypeCast2946 = bitcast double addrspace(1)* %1461 to <16 x double> addrspace(1)*
  %1462 = load <16 x double> addrspace(1)* %ptrTypeCast2946, align 8
  %1463 = fmul <16 x double> %1462, %1455
  %1464 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1465 = load i64* %1464, align 8
  %1466 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1467 = load i64* %1466, align 8
  %1468 = add i64 %1465, %1467
  %extract2949 = add i64 %1468, 15925248
  %1469 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2949
  %ptrTypeCast2965 = bitcast double addrspace(1)* %1469 to <16 x double> addrspace(1)*
  store <16 x double> %1463, <16 x double> addrspace(1)* %ptrTypeCast2965, align 8
  %1470 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1471 = load i64* %1470, align 8
  %1472 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1473 = load i64* %1472, align 8
  %1474 = add i64 %1471, %1473
  %extract2968 = add i64 %1474, 15925248
  %1475 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract2968
  %ptrTypeCast2984 = bitcast double addrspace(1)* %1475 to <16 x double> addrspace(1)*
  %1476 = load <16 x double> addrspace(1)* %ptrTypeCast2984, align 8
  %1477 = fmul <16 x double> %1476, %1455
  %1478 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1479 = load i64* %1478, align 8
  %1480 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1481 = load i64* %1480, align 8
  %1482 = add i64 %1479, %1481
  %extract2987 = add i64 %1482, 15925248
  %1483 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract2987
  %ptrTypeCast3003 = bitcast double addrspace(1)* %1483 to <16 x double> addrspace(1)*
  store <16 x double> %1477, <16 x double> addrspace(1)* %ptrTypeCast3003, align 8
  %1484 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1485 = load i64* %1484, align 8
  %1486 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1487 = load i64* %1486, align 8
  %1488 = add i64 %1485, %1487
  %extract3006 = add i64 %1488, 1658880
  %1489 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %extract3006
  %ptrTypeCast3022 = bitcast double addrspace(1)* %1489 to <16 x double> addrspace(1)*
  %1490 = load <16 x double> addrspace(1)* %ptrTypeCast3022, align 8
  %1491 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1492 = load i64* %1491, align 8
  %1493 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1494 = load i64* %1493, align 8
  %1495 = add i64 %1492, %1494
  %extract3025 = add i64 %1495, 16257024
  %1496 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3025
  %ptrTypeCast3041 = bitcast double addrspace(1)* %1496 to <16 x double> addrspace(1)*
  %1497 = load <16 x double> addrspace(1)* %ptrTypeCast3041, align 8
  %1498 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1497
  %1499 = fmul <16 x double> %213, %1498
  %1500 = fmul <16 x double> %1490, %1499
  %extract3042 = extractelement <16 x double> %1500, i32 0
  %extract3043 = extractelement <16 x double> %1500, i32 1
  %extract3044 = extractelement <16 x double> %1500, i32 2
  %extract3045 = extractelement <16 x double> %1500, i32 3
  %extract3046 = extractelement <16 x double> %1500, i32 4
  %extract3047 = extractelement <16 x double> %1500, i32 5
  %extract3048 = extractelement <16 x double> %1500, i32 6
  %extract3049 = extractelement <16 x double> %1500, i32 7
  %extract3050 = extractelement <16 x double> %1500, i32 8
  %extract3051 = extractelement <16 x double> %1500, i32 9
  %extract3052 = extractelement <16 x double> %1500, i32 10
  %extract3053 = extractelement <16 x double> %1500, i32 11
  %extract3054 = extractelement <16 x double> %1500, i32 12
  %extract3055 = extractelement <16 x double> %1500, i32 13
  %extract3056 = extractelement <16 x double> %1500, i32 14
  %extract3057 = extractelement <16 x double> %1500, i32 15
  %1501 = fadd <16 x double> %1500, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %1502 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1501
  %1503 = fmul <16 x double> %1500, %1502
  %1504 = tail call double @_Z4fmaxdd(double %extract3042, double 1.000000e-200) nounwind
  %1505 = tail call double @_Z4fmaxdd(double %extract3043, double 1.000000e-200) nounwind
  %1506 = tail call double @_Z4fmaxdd(double %extract3044, double 1.000000e-200) nounwind
  %1507 = tail call double @_Z4fmaxdd(double %extract3045, double 1.000000e-200) nounwind
  %1508 = tail call double @_Z4fmaxdd(double %extract3046, double 1.000000e-200) nounwind
  %1509 = tail call double @_Z4fmaxdd(double %extract3047, double 1.000000e-200) nounwind
  %1510 = tail call double @_Z4fmaxdd(double %extract3048, double 1.000000e-200) nounwind
  %1511 = tail call double @_Z4fmaxdd(double %extract3049, double 1.000000e-200) nounwind
  %1512 = tail call double @_Z4fmaxdd(double %extract3050, double 1.000000e-200) nounwind
  %1513 = tail call double @_Z4fmaxdd(double %extract3051, double 1.000000e-200) nounwind
  %1514 = tail call double @_Z4fmaxdd(double %extract3052, double 1.000000e-200) nounwind
  %1515 = tail call double @_Z4fmaxdd(double %extract3053, double 1.000000e-200) nounwind
  %1516 = tail call double @_Z4fmaxdd(double %extract3054, double 1.000000e-200) nounwind
  %1517 = tail call double @_Z4fmaxdd(double %extract3055, double 1.000000e-200) nounwind
  %1518 = tail call double @_Z4fmaxdd(double %extract3056, double 1.000000e-200) nounwind
  %1519 = tail call double @_Z4fmaxdd(double %extract3057, double 1.000000e-200) nounwind
  %1520 = tail call double @_Z5log10d(double %1504) nounwind
  %1521 = tail call double @_Z5log10d(double %1505) nounwind
  %1522 = tail call double @_Z5log10d(double %1506) nounwind
  %1523 = tail call double @_Z5log10d(double %1507) nounwind
  %1524 = tail call double @_Z5log10d(double %1508) nounwind
  %1525 = tail call double @_Z5log10d(double %1509) nounwind
  %1526 = tail call double @_Z5log10d(double %1510) nounwind
  %1527 = tail call double @_Z5log10d(double %1511) nounwind
  %1528 = tail call double @_Z5log10d(double %1512) nounwind
  %1529 = tail call double @_Z5log10d(double %1513) nounwind
  %1530 = tail call double @_Z5log10d(double %1514) nounwind
  %1531 = tail call double @_Z5log10d(double %1515) nounwind
  %1532 = tail call double @_Z5log10d(double %1516) nounwind
  %1533 = tail call double @_Z5log10d(double %1517) nounwind
  %1534 = tail call double @_Z5log10d(double %1518) nounwind
  %1535 = tail call double @_Z5log10d(double %1519) nounwind
  %temp.vect3186 = insertelement <16 x double> undef, double %1520, i32 0
  %temp.vect3187 = insertelement <16 x double> %temp.vect3186, double %1521, i32 1
  %temp.vect3188 = insertelement <16 x double> %temp.vect3187, double %1522, i32 2
  %temp.vect3189 = insertelement <16 x double> %temp.vect3188, double %1523, i32 3
  %temp.vect3190 = insertelement <16 x double> %temp.vect3189, double %1524, i32 4
  %temp.vect3191 = insertelement <16 x double> %temp.vect3190, double %1525, i32 5
  %temp.vect3192 = insertelement <16 x double> %temp.vect3191, double %1526, i32 6
  %temp.vect3193 = insertelement <16 x double> %temp.vect3192, double %1527, i32 7
  %temp.vect3194 = insertelement <16 x double> %temp.vect3193, double %1528, i32 8
  %temp.vect3195 = insertelement <16 x double> %temp.vect3194, double %1529, i32 9
  %temp.vect3196 = insertelement <16 x double> %temp.vect3195, double %1530, i32 10
  %temp.vect3197 = insertelement <16 x double> %temp.vect3196, double %1531, i32 11
  %temp.vect3198 = insertelement <16 x double> %temp.vect3197, double %1532, i32 12
  %temp.vect3199 = insertelement <16 x double> %temp.vect3198, double %1533, i32 13
  %temp.vect3200 = insertelement <16 x double> %temp.vect3199, double %1534, i32 14
  %temp.vect3201 = insertelement <16 x double> %temp.vect3200, double %1535, i32 15
  %1536 = fmul <16 x double> %7, <double 0xBF1D74526156683E, double 0xBF1D74526156683E, double 0xBF1D74526156683E, double 0xBF1D74526156683E, double 0xBF1D74526156683E, double 0xBF1D74526156683E, double 0xBF1D74526156683E, double 0xBF1D74526156683E, double 0xBF1D74526156683E, double 0xBF1D74526156683E, double 0xBF1D74526156683E, double 0xBF1D74526156683E, double 0xBF1D74526156683E, double 0xBF1D74526156683E, double 0xBF1D74526156683E, double 0xBF1D74526156683E>
  %extract3058 = extractelement <16 x double> %1536, i32 0
  %extract3059 = extractelement <16 x double> %1536, i32 1
  %extract3060 = extractelement <16 x double> %1536, i32 2
  %extract3061 = extractelement <16 x double> %1536, i32 3
  %extract3062 = extractelement <16 x double> %1536, i32 4
  %extract3063 = extractelement <16 x double> %1536, i32 5
  %extract3064 = extractelement <16 x double> %1536, i32 6
  %extract3065 = extractelement <16 x double> %1536, i32 7
  %extract3066 = extractelement <16 x double> %1536, i32 8
  %extract3067 = extractelement <16 x double> %1536, i32 9
  %extract3068 = extractelement <16 x double> %1536, i32 10
  %extract3069 = extractelement <16 x double> %1536, i32 11
  %extract3070 = extractelement <16 x double> %1536, i32 12
  %extract3071 = extractelement <16 x double> %1536, i32 13
  %extract3072 = extractelement <16 x double> %1536, i32 14
  %extract3073 = extractelement <16 x double> %1536, i32 15
  %1537 = tail call double @_Z3expd(double %extract3058) nounwind
  %1538 = tail call double @_Z3expd(double %extract3059) nounwind
  %1539 = tail call double @_Z3expd(double %extract3060) nounwind
  %1540 = tail call double @_Z3expd(double %extract3061) nounwind
  %1541 = tail call double @_Z3expd(double %extract3062) nounwind
  %1542 = tail call double @_Z3expd(double %extract3063) nounwind
  %1543 = tail call double @_Z3expd(double %extract3064) nounwind
  %1544 = tail call double @_Z3expd(double %extract3065) nounwind
  %1545 = tail call double @_Z3expd(double %extract3066) nounwind
  %1546 = tail call double @_Z3expd(double %extract3067) nounwind
  %1547 = tail call double @_Z3expd(double %extract3068) nounwind
  %1548 = tail call double @_Z3expd(double %extract3069) nounwind
  %1549 = tail call double @_Z3expd(double %extract3070) nounwind
  %1550 = tail call double @_Z3expd(double %extract3071) nounwind
  %1551 = tail call double @_Z3expd(double %extract3072) nounwind
  %1552 = tail call double @_Z3expd(double %extract3073) nounwind
  %temp.vect3074 = insertelement <16 x double> undef, double %1537, i32 0
  %temp.vect3075 = insertelement <16 x double> %temp.vect3074, double %1538, i32 1
  %temp.vect3076 = insertelement <16 x double> %temp.vect3075, double %1539, i32 2
  %temp.vect3077 = insertelement <16 x double> %temp.vect3076, double %1540, i32 3
  %temp.vect3078 = insertelement <16 x double> %temp.vect3077, double %1541, i32 4
  %temp.vect3079 = insertelement <16 x double> %temp.vect3078, double %1542, i32 5
  %temp.vect3080 = insertelement <16 x double> %temp.vect3079, double %1543, i32 6
  %temp.vect3081 = insertelement <16 x double> %temp.vect3080, double %1544, i32 7
  %temp.vect3082 = insertelement <16 x double> %temp.vect3081, double %1545, i32 8
  %temp.vect3083 = insertelement <16 x double> %temp.vect3082, double %1546, i32 9
  %temp.vect3084 = insertelement <16 x double> %temp.vect3083, double %1547, i32 10
  %temp.vect3085 = insertelement <16 x double> %temp.vect3084, double %1548, i32 11
  %temp.vect3086 = insertelement <16 x double> %temp.vect3085, double %1549, i32 12
  %temp.vect3087 = insertelement <16 x double> %temp.vect3086, double %1550, i32 13
  %temp.vect3088 = insertelement <16 x double> %temp.vect3087, double %1551, i32 14
  %temp.vect3089 = insertelement <16 x double> %temp.vect3088, double %1552, i32 15
  %1553 = fmul <16 x double> %temp.vect3089, <double 4.500000e-01, double 4.500000e-01, double 4.500000e-01, double 4.500000e-01, double 4.500000e-01, double 4.500000e-01, double 4.500000e-01, double 4.500000e-01, double 4.500000e-01, double 4.500000e-01, double 4.500000e-01, double 4.500000e-01, double 4.500000e-01, double 4.500000e-01, double 4.500000e-01, double 4.500000e-01>
  %1554 = fmul <16 x double> %7, <double 0xBF2E21A99B7BB433, double 0xBF2E21A99B7BB433, double 0xBF2E21A99B7BB433, double 0xBF2E21A99B7BB433, double 0xBF2E21A99B7BB433, double 0xBF2E21A99B7BB433, double 0xBF2E21A99B7BB433, double 0xBF2E21A99B7BB433, double 0xBF2E21A99B7BB433, double 0xBF2E21A99B7BB433, double 0xBF2E21A99B7BB433, double 0xBF2E21A99B7BB433, double 0xBF2E21A99B7BB433, double 0xBF2E21A99B7BB433, double 0xBF2E21A99B7BB433, double 0xBF2E21A99B7BB433>
  %extract3090 = extractelement <16 x double> %1554, i32 0
  %extract3091 = extractelement <16 x double> %1554, i32 1
  %extract3092 = extractelement <16 x double> %1554, i32 2
  %extract3093 = extractelement <16 x double> %1554, i32 3
  %extract3094 = extractelement <16 x double> %1554, i32 4
  %extract3095 = extractelement <16 x double> %1554, i32 5
  %extract3096 = extractelement <16 x double> %1554, i32 6
  %extract3097 = extractelement <16 x double> %1554, i32 7
  %extract3098 = extractelement <16 x double> %1554, i32 8
  %extract3099 = extractelement <16 x double> %1554, i32 9
  %extract3100 = extractelement <16 x double> %1554, i32 10
  %extract3101 = extractelement <16 x double> %1554, i32 11
  %extract3102 = extractelement <16 x double> %1554, i32 12
  %extract3103 = extractelement <16 x double> %1554, i32 13
  %extract3104 = extractelement <16 x double> %1554, i32 14
  %extract3105 = extractelement <16 x double> %1554, i32 15
  %1555 = tail call double @_Z3expd(double %extract3090) nounwind
  %1556 = tail call double @_Z3expd(double %extract3091) nounwind
  %1557 = tail call double @_Z3expd(double %extract3092) nounwind
  %1558 = tail call double @_Z3expd(double %extract3093) nounwind
  %1559 = tail call double @_Z3expd(double %extract3094) nounwind
  %1560 = tail call double @_Z3expd(double %extract3095) nounwind
  %1561 = tail call double @_Z3expd(double %extract3096) nounwind
  %1562 = tail call double @_Z3expd(double %extract3097) nounwind
  %1563 = tail call double @_Z3expd(double %extract3098) nounwind
  %1564 = tail call double @_Z3expd(double %extract3099) nounwind
  %1565 = tail call double @_Z3expd(double %extract3100) nounwind
  %1566 = tail call double @_Z3expd(double %extract3101) nounwind
  %1567 = tail call double @_Z3expd(double %extract3102) nounwind
  %1568 = tail call double @_Z3expd(double %extract3103) nounwind
  %1569 = tail call double @_Z3expd(double %extract3104) nounwind
  %1570 = tail call double @_Z3expd(double %extract3105) nounwind
  %temp.vect3106 = insertelement <16 x double> undef, double %1555, i32 0
  %temp.vect3107 = insertelement <16 x double> %temp.vect3106, double %1556, i32 1
  %temp.vect3108 = insertelement <16 x double> %temp.vect3107, double %1557, i32 2
  %temp.vect3109 = insertelement <16 x double> %temp.vect3108, double %1558, i32 3
  %temp.vect3110 = insertelement <16 x double> %temp.vect3109, double %1559, i32 4
  %temp.vect3111 = insertelement <16 x double> %temp.vect3110, double %1560, i32 5
  %temp.vect3112 = insertelement <16 x double> %temp.vect3111, double %1561, i32 6
  %temp.vect3113 = insertelement <16 x double> %temp.vect3112, double %1562, i32 7
  %temp.vect3114 = insertelement <16 x double> %temp.vect3113, double %1563, i32 8
  %temp.vect3115 = insertelement <16 x double> %temp.vect3114, double %1564, i32 9
  %temp.vect3116 = insertelement <16 x double> %temp.vect3115, double %1565, i32 10
  %temp.vect3117 = insertelement <16 x double> %temp.vect3116, double %1566, i32 11
  %temp.vect3118 = insertelement <16 x double> %temp.vect3117, double %1567, i32 12
  %temp.vect3119 = insertelement <16 x double> %temp.vect3118, double %1568, i32 13
  %temp.vect3120 = insertelement <16 x double> %temp.vect3119, double %1569, i32 14
  %temp.vect3121 = insertelement <16 x double> %temp.vect3120, double %1570, i32 15
  %1571 = fmul <16 x double> %temp.vect3121, <double 5.500000e-01, double 5.500000e-01, double 5.500000e-01, double 5.500000e-01, double 5.500000e-01, double 5.500000e-01, double 5.500000e-01, double 5.500000e-01, double 5.500000e-01, double 5.500000e-01, double 5.500000e-01, double 5.500000e-01, double 5.500000e-01, double 5.500000e-01, double 5.500000e-01, double 5.500000e-01>
  %1572 = fadd <16 x double> %1553, %1571
  %1573 = fmul <16 x double> %981, <double -7.244000e+03, double -7.244000e+03, double -7.244000e+03, double -7.244000e+03, double -7.244000e+03, double -7.244000e+03, double -7.244000e+03, double -7.244000e+03, double -7.244000e+03, double -7.244000e+03, double -7.244000e+03, double -7.244000e+03, double -7.244000e+03, double -7.244000e+03, double -7.244000e+03, double -7.244000e+03>
  %extract3122 = extractelement <16 x double> %1573, i32 0
  %extract3123 = extractelement <16 x double> %1573, i32 1
  %extract3124 = extractelement <16 x double> %1573, i32 2
  %extract3125 = extractelement <16 x double> %1573, i32 3
  %extract3126 = extractelement <16 x double> %1573, i32 4
  %extract3127 = extractelement <16 x double> %1573, i32 5
  %extract3128 = extractelement <16 x double> %1573, i32 6
  %extract3129 = extractelement <16 x double> %1573, i32 7
  %extract3130 = extractelement <16 x double> %1573, i32 8
  %extract3131 = extractelement <16 x double> %1573, i32 9
  %extract3132 = extractelement <16 x double> %1573, i32 10
  %extract3133 = extractelement <16 x double> %1573, i32 11
  %extract3134 = extractelement <16 x double> %1573, i32 12
  %extract3135 = extractelement <16 x double> %1573, i32 13
  %extract3136 = extractelement <16 x double> %1573, i32 14
  %extract3137 = extractelement <16 x double> %1573, i32 15
  %1574 = tail call double @_Z3expd(double %extract3122) nounwind
  %1575 = tail call double @_Z3expd(double %extract3123) nounwind
  %1576 = tail call double @_Z3expd(double %extract3124) nounwind
  %1577 = tail call double @_Z3expd(double %extract3125) nounwind
  %1578 = tail call double @_Z3expd(double %extract3126) nounwind
  %1579 = tail call double @_Z3expd(double %extract3127) nounwind
  %1580 = tail call double @_Z3expd(double %extract3128) nounwind
  %1581 = tail call double @_Z3expd(double %extract3129) nounwind
  %1582 = tail call double @_Z3expd(double %extract3130) nounwind
  %1583 = tail call double @_Z3expd(double %extract3131) nounwind
  %1584 = tail call double @_Z3expd(double %extract3132) nounwind
  %1585 = tail call double @_Z3expd(double %extract3133) nounwind
  %1586 = tail call double @_Z3expd(double %extract3134) nounwind
  %1587 = tail call double @_Z3expd(double %extract3135) nounwind
  %1588 = tail call double @_Z3expd(double %extract3136) nounwind
  %1589 = tail call double @_Z3expd(double %extract3137) nounwind
  %temp.vect3138 = insertelement <16 x double> undef, double %1574, i32 0
  %temp.vect3139 = insertelement <16 x double> %temp.vect3138, double %1575, i32 1
  %temp.vect3140 = insertelement <16 x double> %temp.vect3139, double %1576, i32 2
  %temp.vect3141 = insertelement <16 x double> %temp.vect3140, double %1577, i32 3
  %temp.vect3142 = insertelement <16 x double> %temp.vect3141, double %1578, i32 4
  %temp.vect3143 = insertelement <16 x double> %temp.vect3142, double %1579, i32 5
  %temp.vect3144 = insertelement <16 x double> %temp.vect3143, double %1580, i32 6
  %temp.vect3145 = insertelement <16 x double> %temp.vect3144, double %1581, i32 7
  %temp.vect3146 = insertelement <16 x double> %temp.vect3145, double %1582, i32 8
  %temp.vect3147 = insertelement <16 x double> %temp.vect3146, double %1583, i32 9
  %temp.vect3148 = insertelement <16 x double> %temp.vect3147, double %1584, i32 10
  %temp.vect3149 = insertelement <16 x double> %temp.vect3148, double %1585, i32 11
  %temp.vect3150 = insertelement <16 x double> %temp.vect3149, double %1586, i32 12
  %temp.vect3151 = insertelement <16 x double> %temp.vect3150, double %1587, i32 13
  %temp.vect3152 = insertelement <16 x double> %temp.vect3151, double %1588, i32 14
  %temp.vect3153 = insertelement <16 x double> %temp.vect3152, double %1589, i32 15
  %1590 = fadd <16 x double> %1572, %temp.vect3153
  %extract3154 = extractelement <16 x double> %1590, i32 0
  %extract3155 = extractelement <16 x double> %1590, i32 1
  %extract3156 = extractelement <16 x double> %1590, i32 2
  %extract3157 = extractelement <16 x double> %1590, i32 3
  %extract3158 = extractelement <16 x double> %1590, i32 4
  %extract3159 = extractelement <16 x double> %1590, i32 5
  %extract3160 = extractelement <16 x double> %1590, i32 6
  %extract3161 = extractelement <16 x double> %1590, i32 7
  %extract3162 = extractelement <16 x double> %1590, i32 8
  %extract3163 = extractelement <16 x double> %1590, i32 9
  %extract3164 = extractelement <16 x double> %1590, i32 10
  %extract3165 = extractelement <16 x double> %1590, i32 11
  %extract3166 = extractelement <16 x double> %1590, i32 12
  %extract3167 = extractelement <16 x double> %1590, i32 13
  %extract3168 = extractelement <16 x double> %1590, i32 14
  %extract3169 = extractelement <16 x double> %1590, i32 15
  %1591 = tail call double @_Z4fmaxdd(double %extract3154, double 1.000000e-200) nounwind
  %1592 = tail call double @_Z4fmaxdd(double %extract3155, double 1.000000e-200) nounwind
  %1593 = tail call double @_Z4fmaxdd(double %extract3156, double 1.000000e-200) nounwind
  %1594 = tail call double @_Z4fmaxdd(double %extract3157, double 1.000000e-200) nounwind
  %1595 = tail call double @_Z4fmaxdd(double %extract3158, double 1.000000e-200) nounwind
  %1596 = tail call double @_Z4fmaxdd(double %extract3159, double 1.000000e-200) nounwind
  %1597 = tail call double @_Z4fmaxdd(double %extract3160, double 1.000000e-200) nounwind
  %1598 = tail call double @_Z4fmaxdd(double %extract3161, double 1.000000e-200) nounwind
  %1599 = tail call double @_Z4fmaxdd(double %extract3162, double 1.000000e-200) nounwind
  %1600 = tail call double @_Z4fmaxdd(double %extract3163, double 1.000000e-200) nounwind
  %1601 = tail call double @_Z4fmaxdd(double %extract3164, double 1.000000e-200) nounwind
  %1602 = tail call double @_Z4fmaxdd(double %extract3165, double 1.000000e-200) nounwind
  %1603 = tail call double @_Z4fmaxdd(double %extract3166, double 1.000000e-200) nounwind
  %1604 = tail call double @_Z4fmaxdd(double %extract3167, double 1.000000e-200) nounwind
  %1605 = tail call double @_Z4fmaxdd(double %extract3168, double 1.000000e-200) nounwind
  %1606 = tail call double @_Z4fmaxdd(double %extract3169, double 1.000000e-200) nounwind
  %1607 = tail call double @_Z5log10d(double %1591) nounwind
  %1608 = tail call double @_Z5log10d(double %1592) nounwind
  %1609 = tail call double @_Z5log10d(double %1593) nounwind
  %1610 = tail call double @_Z5log10d(double %1594) nounwind
  %1611 = tail call double @_Z5log10d(double %1595) nounwind
  %1612 = tail call double @_Z5log10d(double %1596) nounwind
  %1613 = tail call double @_Z5log10d(double %1597) nounwind
  %1614 = tail call double @_Z5log10d(double %1598) nounwind
  %1615 = tail call double @_Z5log10d(double %1599) nounwind
  %1616 = tail call double @_Z5log10d(double %1600) nounwind
  %1617 = tail call double @_Z5log10d(double %1601) nounwind
  %1618 = tail call double @_Z5log10d(double %1602) nounwind
  %1619 = tail call double @_Z5log10d(double %1603) nounwind
  %1620 = tail call double @_Z5log10d(double %1604) nounwind
  %1621 = tail call double @_Z5log10d(double %1605) nounwind
  %1622 = tail call double @_Z5log10d(double %1606) nounwind
  %temp.vect3170 = insertelement <16 x double> undef, double %1607, i32 0
  %temp.vect3171 = insertelement <16 x double> %temp.vect3170, double %1608, i32 1
  %temp.vect3172 = insertelement <16 x double> %temp.vect3171, double %1609, i32 2
  %temp.vect3173 = insertelement <16 x double> %temp.vect3172, double %1610, i32 3
  %temp.vect3174 = insertelement <16 x double> %temp.vect3173, double %1611, i32 4
  %temp.vect3175 = insertelement <16 x double> %temp.vect3174, double %1612, i32 5
  %temp.vect3176 = insertelement <16 x double> %temp.vect3175, double %1613, i32 6
  %temp.vect3177 = insertelement <16 x double> %temp.vect3176, double %1614, i32 7
  %temp.vect3178 = insertelement <16 x double> %temp.vect3177, double %1615, i32 8
  %temp.vect3179 = insertelement <16 x double> %temp.vect3178, double %1616, i32 9
  %temp.vect3180 = insertelement <16 x double> %temp.vect3179, double %1617, i32 10
  %temp.vect3181 = insertelement <16 x double> %temp.vect3180, double %1618, i32 11
  %temp.vect3182 = insertelement <16 x double> %temp.vect3181, double %1619, i32 12
  %temp.vect3183 = insertelement <16 x double> %temp.vect3182, double %1620, i32 13
  %temp.vect3184 = insertelement <16 x double> %temp.vect3183, double %1621, i32 14
  %temp.vect3185 = insertelement <16 x double> %temp.vect3184, double %1622, i32 15
  %1623 = fmul <16 x double> %temp.vect3185, <double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00>
  %1624 = fsub <16 x double> <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>, %1623
  %1625 = fmul <16 x double> %temp.vect3185, <double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01>
  %1626 = fadd <16 x double> %1625, <double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01>
  %1627 = fsub <16 x double> %temp.vect3201, %1626
  %1628 = fmul <16 x double> %1627, <double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01>
  %1629 = fsub <16 x double> %1624, %1628
  %1630 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1629
  %1631 = fmul <16 x double> %1627, %1630
  %1632 = fmul <16 x double> %1631, %1631
  %1633 = fadd <16 x double> %1632, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %1634 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1633
  %1635 = fmul <16 x double> %temp.vect3185, %1634
  %extract3202 = extractelement <16 x double> %1635, i32 0
  %extract3203 = extractelement <16 x double> %1635, i32 1
  %extract3204 = extractelement <16 x double> %1635, i32 2
  %extract3205 = extractelement <16 x double> %1635, i32 3
  %extract3206 = extractelement <16 x double> %1635, i32 4
  %extract3207 = extractelement <16 x double> %1635, i32 5
  %extract3208 = extractelement <16 x double> %1635, i32 6
  %extract3209 = extractelement <16 x double> %1635, i32 7
  %extract3210 = extractelement <16 x double> %1635, i32 8
  %extract3211 = extractelement <16 x double> %1635, i32 9
  %extract3212 = extractelement <16 x double> %1635, i32 10
  %extract3213 = extractelement <16 x double> %1635, i32 11
  %extract3214 = extractelement <16 x double> %1635, i32 12
  %extract3215 = extractelement <16 x double> %1635, i32 13
  %extract3216 = extractelement <16 x double> %1635, i32 14
  %extract3217 = extractelement <16 x double> %1635, i32 15
  %1636 = tail call double @_Z5exp10d(double %extract3202) nounwind
  %1637 = tail call double @_Z5exp10d(double %extract3203) nounwind
  %1638 = tail call double @_Z5exp10d(double %extract3204) nounwind
  %1639 = tail call double @_Z5exp10d(double %extract3205) nounwind
  %1640 = tail call double @_Z5exp10d(double %extract3206) nounwind
  %1641 = tail call double @_Z5exp10d(double %extract3207) nounwind
  %1642 = tail call double @_Z5exp10d(double %extract3208) nounwind
  %1643 = tail call double @_Z5exp10d(double %extract3209) nounwind
  %1644 = tail call double @_Z5exp10d(double %extract3210) nounwind
  %1645 = tail call double @_Z5exp10d(double %extract3211) nounwind
  %1646 = tail call double @_Z5exp10d(double %extract3212) nounwind
  %1647 = tail call double @_Z5exp10d(double %extract3213) nounwind
  %1648 = tail call double @_Z5exp10d(double %extract3214) nounwind
  %1649 = tail call double @_Z5exp10d(double %extract3215) nounwind
  %1650 = tail call double @_Z5exp10d(double %extract3216) nounwind
  %1651 = tail call double @_Z5exp10d(double %extract3217) nounwind
  %temp.vect3218 = insertelement <16 x double> undef, double %1636, i32 0
  %temp.vect3219 = insertelement <16 x double> %temp.vect3218, double %1637, i32 1
  %temp.vect3220 = insertelement <16 x double> %temp.vect3219, double %1638, i32 2
  %temp.vect3221 = insertelement <16 x double> %temp.vect3220, double %1639, i32 3
  %temp.vect3222 = insertelement <16 x double> %temp.vect3221, double %1640, i32 4
  %temp.vect3223 = insertelement <16 x double> %temp.vect3222, double %1641, i32 5
  %temp.vect3224 = insertelement <16 x double> %temp.vect3223, double %1642, i32 6
  %temp.vect3225 = insertelement <16 x double> %temp.vect3224, double %1643, i32 7
  %temp.vect3226 = insertelement <16 x double> %temp.vect3225, double %1644, i32 8
  %temp.vect3227 = insertelement <16 x double> %temp.vect3226, double %1645, i32 9
  %temp.vect3228 = insertelement <16 x double> %temp.vect3227, double %1646, i32 10
  %temp.vect3229 = insertelement <16 x double> %temp.vect3228, double %1647, i32 11
  %temp.vect3230 = insertelement <16 x double> %temp.vect3229, double %1648, i32 12
  %temp.vect3231 = insertelement <16 x double> %temp.vect3230, double %1649, i32 13
  %temp.vect3232 = insertelement <16 x double> %temp.vect3231, double %1650, i32 14
  %temp.vect3233 = insertelement <16 x double> %temp.vect3232, double %1651, i32 15
  %1652 = fmul <16 x double> %temp.vect3233, %1503
  %1653 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1654 = load i64* %1653, align 8
  %1655 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1656 = load i64* %1655, align 8
  %1657 = add i64 %1654, %1656
  %extract3236 = add i64 %1657, 16257024
  %1658 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3236
  %ptrTypeCast3252 = bitcast double addrspace(1)* %1658 to <16 x double> addrspace(1)*
  %1659 = load <16 x double> addrspace(1)* %ptrTypeCast3252, align 8
  %1660 = fmul <16 x double> %1659, %1652
  %1661 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1662 = load i64* %1661, align 8
  %1663 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1664 = load i64* %1663, align 8
  %1665 = add i64 %1662, %1664
  %extract3255 = add i64 %1665, 16257024
  %1666 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3255
  %ptrTypeCast3271 = bitcast double addrspace(1)* %1666 to <16 x double> addrspace(1)*
  store <16 x double> %1660, <16 x double> addrspace(1)* %ptrTypeCast3271, align 8
  %1667 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1668 = load i64* %1667, align 8
  %1669 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1670 = load i64* %1669, align 8
  %1671 = add i64 %1668, %1670
  %extract3274 = add i64 %1671, 16257024
  %1672 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract3274
  %ptrTypeCast3290 = bitcast double addrspace(1)* %1672 to <16 x double> addrspace(1)*
  %1673 = load <16 x double> addrspace(1)* %ptrTypeCast3290, align 8
  %1674 = fmul <16 x double> %1673, %1652
  %1675 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1676 = load i64* %1675, align 8
  %1677 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1678 = load i64* %1677, align 8
  %1679 = add i64 %1676, %1678
  %extract3293 = add i64 %1679, 16257024
  %1680 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract3293
  %ptrTypeCast3309 = bitcast double addrspace(1)* %1680 to <16 x double> addrspace(1)*
  store <16 x double> %1674, <16 x double> addrspace(1)* %ptrTypeCast3309, align 8
  %1681 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1682 = load i64* %1681, align 8
  %1683 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1684 = load i64* %1683, align 8
  %1685 = add i64 %1682, %1684
  %extract3312 = add i64 %1685, 1769472
  %1686 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %extract3312
  %ptrTypeCast3328 = bitcast double addrspace(1)* %1686 to <16 x double> addrspace(1)*
  %1687 = load <16 x double> addrspace(1)* %ptrTypeCast3328, align 8
  %1688 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1689 = load i64* %1688, align 8
  %1690 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1691 = load i64* %1690, align 8
  %1692 = add i64 %1689, %1691
  %extract3331 = add i64 %1692, 17031168
  %1693 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3331
  %ptrTypeCast3347 = bitcast double addrspace(1)* %1693 to <16 x double> addrspace(1)*
  %1694 = load <16 x double> addrspace(1)* %ptrTypeCast3347, align 8
  %1695 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1694
  %1696 = fmul <16 x double> %213, %1695
  %1697 = fmul <16 x double> %1687, %1696
  %extract3348 = extractelement <16 x double> %1697, i32 0
  %extract3349 = extractelement <16 x double> %1697, i32 1
  %extract3350 = extractelement <16 x double> %1697, i32 2
  %extract3351 = extractelement <16 x double> %1697, i32 3
  %extract3352 = extractelement <16 x double> %1697, i32 4
  %extract3353 = extractelement <16 x double> %1697, i32 5
  %extract3354 = extractelement <16 x double> %1697, i32 6
  %extract3355 = extractelement <16 x double> %1697, i32 7
  %extract3356 = extractelement <16 x double> %1697, i32 8
  %extract3357 = extractelement <16 x double> %1697, i32 9
  %extract3358 = extractelement <16 x double> %1697, i32 10
  %extract3359 = extractelement <16 x double> %1697, i32 11
  %extract3360 = extractelement <16 x double> %1697, i32 12
  %extract3361 = extractelement <16 x double> %1697, i32 13
  %extract3362 = extractelement <16 x double> %1697, i32 14
  %extract3363 = extractelement <16 x double> %1697, i32 15
  %1698 = fadd <16 x double> %1697, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %1699 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1698
  %1700 = fmul <16 x double> %1697, %1699
  %1701 = tail call double @_Z4fmaxdd(double %extract3348, double 1.000000e-200) nounwind
  %1702 = tail call double @_Z4fmaxdd(double %extract3349, double 1.000000e-200) nounwind
  %1703 = tail call double @_Z4fmaxdd(double %extract3350, double 1.000000e-200) nounwind
  %1704 = tail call double @_Z4fmaxdd(double %extract3351, double 1.000000e-200) nounwind
  %1705 = tail call double @_Z4fmaxdd(double %extract3352, double 1.000000e-200) nounwind
  %1706 = tail call double @_Z4fmaxdd(double %extract3353, double 1.000000e-200) nounwind
  %1707 = tail call double @_Z4fmaxdd(double %extract3354, double 1.000000e-200) nounwind
  %1708 = tail call double @_Z4fmaxdd(double %extract3355, double 1.000000e-200) nounwind
  %1709 = tail call double @_Z4fmaxdd(double %extract3356, double 1.000000e-200) nounwind
  %1710 = tail call double @_Z4fmaxdd(double %extract3357, double 1.000000e-200) nounwind
  %1711 = tail call double @_Z4fmaxdd(double %extract3358, double 1.000000e-200) nounwind
  %1712 = tail call double @_Z4fmaxdd(double %extract3359, double 1.000000e-200) nounwind
  %1713 = tail call double @_Z4fmaxdd(double %extract3360, double 1.000000e-200) nounwind
  %1714 = tail call double @_Z4fmaxdd(double %extract3361, double 1.000000e-200) nounwind
  %1715 = tail call double @_Z4fmaxdd(double %extract3362, double 1.000000e-200) nounwind
  %1716 = tail call double @_Z4fmaxdd(double %extract3363, double 1.000000e-200) nounwind
  %1717 = tail call double @_Z5log10d(double %1701) nounwind
  %1718 = tail call double @_Z5log10d(double %1702) nounwind
  %1719 = tail call double @_Z5log10d(double %1703) nounwind
  %1720 = tail call double @_Z5log10d(double %1704) nounwind
  %1721 = tail call double @_Z5log10d(double %1705) nounwind
  %1722 = tail call double @_Z5log10d(double %1706) nounwind
  %1723 = tail call double @_Z5log10d(double %1707) nounwind
  %1724 = tail call double @_Z5log10d(double %1708) nounwind
  %1725 = tail call double @_Z5log10d(double %1709) nounwind
  %1726 = tail call double @_Z5log10d(double %1710) nounwind
  %1727 = tail call double @_Z5log10d(double %1711) nounwind
  %1728 = tail call double @_Z5log10d(double %1712) nounwind
  %1729 = tail call double @_Z5log10d(double %1713) nounwind
  %1730 = tail call double @_Z5log10d(double %1714) nounwind
  %1731 = tail call double @_Z5log10d(double %1715) nounwind
  %1732 = tail call double @_Z5log10d(double %1716) nounwind
  %temp.vect3492 = insertelement <16 x double> undef, double %1717, i32 0
  %temp.vect3493 = insertelement <16 x double> %temp.vect3492, double %1718, i32 1
  %temp.vect3494 = insertelement <16 x double> %temp.vect3493, double %1719, i32 2
  %temp.vect3495 = insertelement <16 x double> %temp.vect3494, double %1720, i32 3
  %temp.vect3496 = insertelement <16 x double> %temp.vect3495, double %1721, i32 4
  %temp.vect3497 = insertelement <16 x double> %temp.vect3496, double %1722, i32 5
  %temp.vect3498 = insertelement <16 x double> %temp.vect3497, double %1723, i32 6
  %temp.vect3499 = insertelement <16 x double> %temp.vect3498, double %1724, i32 7
  %temp.vect3500 = insertelement <16 x double> %temp.vect3499, double %1725, i32 8
  %temp.vect3501 = insertelement <16 x double> %temp.vect3500, double %1726, i32 9
  %temp.vect3502 = insertelement <16 x double> %temp.vect3501, double %1727, i32 10
  %temp.vect3503 = insertelement <16 x double> %temp.vect3502, double %1728, i32 11
  %temp.vect3504 = insertelement <16 x double> %temp.vect3503, double %1729, i32 12
  %temp.vect3505 = insertelement <16 x double> %temp.vect3504, double %1730, i32 13
  %temp.vect3506 = insertelement <16 x double> %temp.vect3505, double %1731, i32 14
  %temp.vect3507 = insertelement <16 x double> %temp.vect3506, double %1732, i32 15
  %1733 = fmul <16 x double> %7, <double 0xBF76C16C16C16C17, double 0xBF76C16C16C16C17, double 0xBF76C16C16C16C17, double 0xBF76C16C16C16C17, double 0xBF76C16C16C16C17, double 0xBF76C16C16C16C17, double 0xBF76C16C16C16C17, double 0xBF76C16C16C16C17, double 0xBF76C16C16C16C17, double 0xBF76C16C16C16C17, double 0xBF76C16C16C16C17, double 0xBF76C16C16C16C17, double 0xBF76C16C16C16C17, double 0xBF76C16C16C16C17, double 0xBF76C16C16C16C17, double 0xBF76C16C16C16C17>
  %extract3364 = extractelement <16 x double> %1733, i32 0
  %extract3365 = extractelement <16 x double> %1733, i32 1
  %extract3366 = extractelement <16 x double> %1733, i32 2
  %extract3367 = extractelement <16 x double> %1733, i32 3
  %extract3368 = extractelement <16 x double> %1733, i32 4
  %extract3369 = extractelement <16 x double> %1733, i32 5
  %extract3370 = extractelement <16 x double> %1733, i32 6
  %extract3371 = extractelement <16 x double> %1733, i32 7
  %extract3372 = extractelement <16 x double> %1733, i32 8
  %extract3373 = extractelement <16 x double> %1733, i32 9
  %extract3374 = extractelement <16 x double> %1733, i32 10
  %extract3375 = extractelement <16 x double> %1733, i32 11
  %extract3376 = extractelement <16 x double> %1733, i32 12
  %extract3377 = extractelement <16 x double> %1733, i32 13
  %extract3378 = extractelement <16 x double> %1733, i32 14
  %extract3379 = extractelement <16 x double> %1733, i32 15
  %1734 = tail call double @_Z3expd(double %extract3364) nounwind
  %1735 = tail call double @_Z3expd(double %extract3365) nounwind
  %1736 = tail call double @_Z3expd(double %extract3366) nounwind
  %1737 = tail call double @_Z3expd(double %extract3367) nounwind
  %1738 = tail call double @_Z3expd(double %extract3368) nounwind
  %1739 = tail call double @_Z3expd(double %extract3369) nounwind
  %1740 = tail call double @_Z3expd(double %extract3370) nounwind
  %1741 = tail call double @_Z3expd(double %extract3371) nounwind
  %1742 = tail call double @_Z3expd(double %extract3372) nounwind
  %1743 = tail call double @_Z3expd(double %extract3373) nounwind
  %1744 = tail call double @_Z3expd(double %extract3374) nounwind
  %1745 = tail call double @_Z3expd(double %extract3375) nounwind
  %1746 = tail call double @_Z3expd(double %extract3376) nounwind
  %1747 = tail call double @_Z3expd(double %extract3377) nounwind
  %1748 = tail call double @_Z3expd(double %extract3378) nounwind
  %1749 = tail call double @_Z3expd(double %extract3379) nounwind
  %temp.vect3380 = insertelement <16 x double> undef, double %1734, i32 0
  %temp.vect3381 = insertelement <16 x double> %temp.vect3380, double %1735, i32 1
  %temp.vect3382 = insertelement <16 x double> %temp.vect3381, double %1736, i32 2
  %temp.vect3383 = insertelement <16 x double> %temp.vect3382, double %1737, i32 3
  %temp.vect3384 = insertelement <16 x double> %temp.vect3383, double %1738, i32 4
  %temp.vect3385 = insertelement <16 x double> %temp.vect3384, double %1739, i32 5
  %temp.vect3386 = insertelement <16 x double> %temp.vect3385, double %1740, i32 6
  %temp.vect3387 = insertelement <16 x double> %temp.vect3386, double %1741, i32 7
  %temp.vect3388 = insertelement <16 x double> %temp.vect3387, double %1742, i32 8
  %temp.vect3389 = insertelement <16 x double> %temp.vect3388, double %1743, i32 9
  %temp.vect3390 = insertelement <16 x double> %temp.vect3389, double %1744, i32 10
  %temp.vect3391 = insertelement <16 x double> %temp.vect3390, double %1745, i32 11
  %temp.vect3392 = insertelement <16 x double> %temp.vect3391, double %1746, i32 12
  %temp.vect3393 = insertelement <16 x double> %temp.vect3392, double %1747, i32 13
  %temp.vect3394 = insertelement <16 x double> %temp.vect3393, double %1748, i32 14
  %temp.vect3395 = insertelement <16 x double> %temp.vect3394, double %1749, i32 15
  %1750 = fmul <16 x double> %temp.vect3395, <double 2.655000e-01, double 2.655000e-01, double 2.655000e-01, double 2.655000e-01, double 2.655000e-01, double 2.655000e-01, double 2.655000e-01, double 2.655000e-01, double 2.655000e-01, double 2.655000e-01, double 2.655000e-01, double 2.655000e-01, double 2.655000e-01, double 2.655000e-01, double 2.655000e-01, double 2.655000e-01>
  %1751 = fmul <16 x double> %7, <double 0xBF4FA8EF6D92ACA5, double 0xBF4FA8EF6D92ACA5, double 0xBF4FA8EF6D92ACA5, double 0xBF4FA8EF6D92ACA5, double 0xBF4FA8EF6D92ACA5, double 0xBF4FA8EF6D92ACA5, double 0xBF4FA8EF6D92ACA5, double 0xBF4FA8EF6D92ACA5, double 0xBF4FA8EF6D92ACA5, double 0xBF4FA8EF6D92ACA5, double 0xBF4FA8EF6D92ACA5, double 0xBF4FA8EF6D92ACA5, double 0xBF4FA8EF6D92ACA5, double 0xBF4FA8EF6D92ACA5, double 0xBF4FA8EF6D92ACA5, double 0xBF4FA8EF6D92ACA5>
  %extract3396 = extractelement <16 x double> %1751, i32 0
  %extract3397 = extractelement <16 x double> %1751, i32 1
  %extract3398 = extractelement <16 x double> %1751, i32 2
  %extract3399 = extractelement <16 x double> %1751, i32 3
  %extract3400 = extractelement <16 x double> %1751, i32 4
  %extract3401 = extractelement <16 x double> %1751, i32 5
  %extract3402 = extractelement <16 x double> %1751, i32 6
  %extract3403 = extractelement <16 x double> %1751, i32 7
  %extract3404 = extractelement <16 x double> %1751, i32 8
  %extract3405 = extractelement <16 x double> %1751, i32 9
  %extract3406 = extractelement <16 x double> %1751, i32 10
  %extract3407 = extractelement <16 x double> %1751, i32 11
  %extract3408 = extractelement <16 x double> %1751, i32 12
  %extract3409 = extractelement <16 x double> %1751, i32 13
  %extract3410 = extractelement <16 x double> %1751, i32 14
  %extract3411 = extractelement <16 x double> %1751, i32 15
  %1752 = tail call double @_Z3expd(double %extract3396) nounwind
  %1753 = tail call double @_Z3expd(double %extract3397) nounwind
  %1754 = tail call double @_Z3expd(double %extract3398) nounwind
  %1755 = tail call double @_Z3expd(double %extract3399) nounwind
  %1756 = tail call double @_Z3expd(double %extract3400) nounwind
  %1757 = tail call double @_Z3expd(double %extract3401) nounwind
  %1758 = tail call double @_Z3expd(double %extract3402) nounwind
  %1759 = tail call double @_Z3expd(double %extract3403) nounwind
  %1760 = tail call double @_Z3expd(double %extract3404) nounwind
  %1761 = tail call double @_Z3expd(double %extract3405) nounwind
  %1762 = tail call double @_Z3expd(double %extract3406) nounwind
  %1763 = tail call double @_Z3expd(double %extract3407) nounwind
  %1764 = tail call double @_Z3expd(double %extract3408) nounwind
  %1765 = tail call double @_Z3expd(double %extract3409) nounwind
  %1766 = tail call double @_Z3expd(double %extract3410) nounwind
  %1767 = tail call double @_Z3expd(double %extract3411) nounwind
  %temp.vect3412 = insertelement <16 x double> undef, double %1752, i32 0
  %temp.vect3413 = insertelement <16 x double> %temp.vect3412, double %1753, i32 1
  %temp.vect3414 = insertelement <16 x double> %temp.vect3413, double %1754, i32 2
  %temp.vect3415 = insertelement <16 x double> %temp.vect3414, double %1755, i32 3
  %temp.vect3416 = insertelement <16 x double> %temp.vect3415, double %1756, i32 4
  %temp.vect3417 = insertelement <16 x double> %temp.vect3416, double %1757, i32 5
  %temp.vect3418 = insertelement <16 x double> %temp.vect3417, double %1758, i32 6
  %temp.vect3419 = insertelement <16 x double> %temp.vect3418, double %1759, i32 7
  %temp.vect3420 = insertelement <16 x double> %temp.vect3419, double %1760, i32 8
  %temp.vect3421 = insertelement <16 x double> %temp.vect3420, double %1761, i32 9
  %temp.vect3422 = insertelement <16 x double> %temp.vect3421, double %1762, i32 10
  %temp.vect3423 = insertelement <16 x double> %temp.vect3422, double %1763, i32 11
  %temp.vect3424 = insertelement <16 x double> %temp.vect3423, double %1764, i32 12
  %temp.vect3425 = insertelement <16 x double> %temp.vect3424, double %1765, i32 13
  %temp.vect3426 = insertelement <16 x double> %temp.vect3425, double %1766, i32 14
  %temp.vect3427 = insertelement <16 x double> %temp.vect3426, double %1767, i32 15
  %1768 = fmul <16 x double> %temp.vect3427, <double 7.345000e-01, double 7.345000e-01, double 7.345000e-01, double 7.345000e-01, double 7.345000e-01, double 7.345000e-01, double 7.345000e-01, double 7.345000e-01, double 7.345000e-01, double 7.345000e-01, double 7.345000e-01, double 7.345000e-01, double 7.345000e-01, double 7.345000e-01, double 7.345000e-01, double 7.345000e-01>
  %1769 = fadd <16 x double> %1750, %1768
  %1770 = fmul <16 x double> %981, <double -5.417000e+03, double -5.417000e+03, double -5.417000e+03, double -5.417000e+03, double -5.417000e+03, double -5.417000e+03, double -5.417000e+03, double -5.417000e+03, double -5.417000e+03, double -5.417000e+03, double -5.417000e+03, double -5.417000e+03, double -5.417000e+03, double -5.417000e+03, double -5.417000e+03, double -5.417000e+03>
  %extract3428 = extractelement <16 x double> %1770, i32 0
  %extract3429 = extractelement <16 x double> %1770, i32 1
  %extract3430 = extractelement <16 x double> %1770, i32 2
  %extract3431 = extractelement <16 x double> %1770, i32 3
  %extract3432 = extractelement <16 x double> %1770, i32 4
  %extract3433 = extractelement <16 x double> %1770, i32 5
  %extract3434 = extractelement <16 x double> %1770, i32 6
  %extract3435 = extractelement <16 x double> %1770, i32 7
  %extract3436 = extractelement <16 x double> %1770, i32 8
  %extract3437 = extractelement <16 x double> %1770, i32 9
  %extract3438 = extractelement <16 x double> %1770, i32 10
  %extract3439 = extractelement <16 x double> %1770, i32 11
  %extract3440 = extractelement <16 x double> %1770, i32 12
  %extract3441 = extractelement <16 x double> %1770, i32 13
  %extract3442 = extractelement <16 x double> %1770, i32 14
  %extract3443 = extractelement <16 x double> %1770, i32 15
  %1771 = tail call double @_Z3expd(double %extract3428) nounwind
  %1772 = tail call double @_Z3expd(double %extract3429) nounwind
  %1773 = tail call double @_Z3expd(double %extract3430) nounwind
  %1774 = tail call double @_Z3expd(double %extract3431) nounwind
  %1775 = tail call double @_Z3expd(double %extract3432) nounwind
  %1776 = tail call double @_Z3expd(double %extract3433) nounwind
  %1777 = tail call double @_Z3expd(double %extract3434) nounwind
  %1778 = tail call double @_Z3expd(double %extract3435) nounwind
  %1779 = tail call double @_Z3expd(double %extract3436) nounwind
  %1780 = tail call double @_Z3expd(double %extract3437) nounwind
  %1781 = tail call double @_Z3expd(double %extract3438) nounwind
  %1782 = tail call double @_Z3expd(double %extract3439) nounwind
  %1783 = tail call double @_Z3expd(double %extract3440) nounwind
  %1784 = tail call double @_Z3expd(double %extract3441) nounwind
  %1785 = tail call double @_Z3expd(double %extract3442) nounwind
  %1786 = tail call double @_Z3expd(double %extract3443) nounwind
  %temp.vect3444 = insertelement <16 x double> undef, double %1771, i32 0
  %temp.vect3445 = insertelement <16 x double> %temp.vect3444, double %1772, i32 1
  %temp.vect3446 = insertelement <16 x double> %temp.vect3445, double %1773, i32 2
  %temp.vect3447 = insertelement <16 x double> %temp.vect3446, double %1774, i32 3
  %temp.vect3448 = insertelement <16 x double> %temp.vect3447, double %1775, i32 4
  %temp.vect3449 = insertelement <16 x double> %temp.vect3448, double %1776, i32 5
  %temp.vect3450 = insertelement <16 x double> %temp.vect3449, double %1777, i32 6
  %temp.vect3451 = insertelement <16 x double> %temp.vect3450, double %1778, i32 7
  %temp.vect3452 = insertelement <16 x double> %temp.vect3451, double %1779, i32 8
  %temp.vect3453 = insertelement <16 x double> %temp.vect3452, double %1780, i32 9
  %temp.vect3454 = insertelement <16 x double> %temp.vect3453, double %1781, i32 10
  %temp.vect3455 = insertelement <16 x double> %temp.vect3454, double %1782, i32 11
  %temp.vect3456 = insertelement <16 x double> %temp.vect3455, double %1783, i32 12
  %temp.vect3457 = insertelement <16 x double> %temp.vect3456, double %1784, i32 13
  %temp.vect3458 = insertelement <16 x double> %temp.vect3457, double %1785, i32 14
  %temp.vect3459 = insertelement <16 x double> %temp.vect3458, double %1786, i32 15
  %1787 = fadd <16 x double> %1769, %temp.vect3459
  %extract3460 = extractelement <16 x double> %1787, i32 0
  %extract3461 = extractelement <16 x double> %1787, i32 1
  %extract3462 = extractelement <16 x double> %1787, i32 2
  %extract3463 = extractelement <16 x double> %1787, i32 3
  %extract3464 = extractelement <16 x double> %1787, i32 4
  %extract3465 = extractelement <16 x double> %1787, i32 5
  %extract3466 = extractelement <16 x double> %1787, i32 6
  %extract3467 = extractelement <16 x double> %1787, i32 7
  %extract3468 = extractelement <16 x double> %1787, i32 8
  %extract3469 = extractelement <16 x double> %1787, i32 9
  %extract3470 = extractelement <16 x double> %1787, i32 10
  %extract3471 = extractelement <16 x double> %1787, i32 11
  %extract3472 = extractelement <16 x double> %1787, i32 12
  %extract3473 = extractelement <16 x double> %1787, i32 13
  %extract3474 = extractelement <16 x double> %1787, i32 14
  %extract3475 = extractelement <16 x double> %1787, i32 15
  %1788 = tail call double @_Z4fmaxdd(double %extract3460, double 1.000000e-200) nounwind
  %1789 = tail call double @_Z4fmaxdd(double %extract3461, double 1.000000e-200) nounwind
  %1790 = tail call double @_Z4fmaxdd(double %extract3462, double 1.000000e-200) nounwind
  %1791 = tail call double @_Z4fmaxdd(double %extract3463, double 1.000000e-200) nounwind
  %1792 = tail call double @_Z4fmaxdd(double %extract3464, double 1.000000e-200) nounwind
  %1793 = tail call double @_Z4fmaxdd(double %extract3465, double 1.000000e-200) nounwind
  %1794 = tail call double @_Z4fmaxdd(double %extract3466, double 1.000000e-200) nounwind
  %1795 = tail call double @_Z4fmaxdd(double %extract3467, double 1.000000e-200) nounwind
  %1796 = tail call double @_Z4fmaxdd(double %extract3468, double 1.000000e-200) nounwind
  %1797 = tail call double @_Z4fmaxdd(double %extract3469, double 1.000000e-200) nounwind
  %1798 = tail call double @_Z4fmaxdd(double %extract3470, double 1.000000e-200) nounwind
  %1799 = tail call double @_Z4fmaxdd(double %extract3471, double 1.000000e-200) nounwind
  %1800 = tail call double @_Z4fmaxdd(double %extract3472, double 1.000000e-200) nounwind
  %1801 = tail call double @_Z4fmaxdd(double %extract3473, double 1.000000e-200) nounwind
  %1802 = tail call double @_Z4fmaxdd(double %extract3474, double 1.000000e-200) nounwind
  %1803 = tail call double @_Z4fmaxdd(double %extract3475, double 1.000000e-200) nounwind
  %1804 = tail call double @_Z5log10d(double %1788) nounwind
  %1805 = tail call double @_Z5log10d(double %1789) nounwind
  %1806 = tail call double @_Z5log10d(double %1790) nounwind
  %1807 = tail call double @_Z5log10d(double %1791) nounwind
  %1808 = tail call double @_Z5log10d(double %1792) nounwind
  %1809 = tail call double @_Z5log10d(double %1793) nounwind
  %1810 = tail call double @_Z5log10d(double %1794) nounwind
  %1811 = tail call double @_Z5log10d(double %1795) nounwind
  %1812 = tail call double @_Z5log10d(double %1796) nounwind
  %1813 = tail call double @_Z5log10d(double %1797) nounwind
  %1814 = tail call double @_Z5log10d(double %1798) nounwind
  %1815 = tail call double @_Z5log10d(double %1799) nounwind
  %1816 = tail call double @_Z5log10d(double %1800) nounwind
  %1817 = tail call double @_Z5log10d(double %1801) nounwind
  %1818 = tail call double @_Z5log10d(double %1802) nounwind
  %1819 = tail call double @_Z5log10d(double %1803) nounwind
  %temp.vect3476 = insertelement <16 x double> undef, double %1804, i32 0
  %temp.vect3477 = insertelement <16 x double> %temp.vect3476, double %1805, i32 1
  %temp.vect3478 = insertelement <16 x double> %temp.vect3477, double %1806, i32 2
  %temp.vect3479 = insertelement <16 x double> %temp.vect3478, double %1807, i32 3
  %temp.vect3480 = insertelement <16 x double> %temp.vect3479, double %1808, i32 4
  %temp.vect3481 = insertelement <16 x double> %temp.vect3480, double %1809, i32 5
  %temp.vect3482 = insertelement <16 x double> %temp.vect3481, double %1810, i32 6
  %temp.vect3483 = insertelement <16 x double> %temp.vect3482, double %1811, i32 7
  %temp.vect3484 = insertelement <16 x double> %temp.vect3483, double %1812, i32 8
  %temp.vect3485 = insertelement <16 x double> %temp.vect3484, double %1813, i32 9
  %temp.vect3486 = insertelement <16 x double> %temp.vect3485, double %1814, i32 10
  %temp.vect3487 = insertelement <16 x double> %temp.vect3486, double %1815, i32 11
  %temp.vect3488 = insertelement <16 x double> %temp.vect3487, double %1816, i32 12
  %temp.vect3489 = insertelement <16 x double> %temp.vect3488, double %1817, i32 13
  %temp.vect3490 = insertelement <16 x double> %temp.vect3489, double %1818, i32 14
  %temp.vect3491 = insertelement <16 x double> %temp.vect3490, double %1819, i32 15
  %1820 = fmul <16 x double> %temp.vect3491, <double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00>
  %1821 = fsub <16 x double> <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>, %1820
  %1822 = fmul <16 x double> %temp.vect3491, <double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01>
  %1823 = fadd <16 x double> %1822, <double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01>
  %1824 = fsub <16 x double> %temp.vect3507, %1823
  %1825 = fmul <16 x double> %1824, <double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01>
  %1826 = fsub <16 x double> %1821, %1825
  %1827 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1826
  %1828 = fmul <16 x double> %1824, %1827
  %1829 = fmul <16 x double> %1828, %1828
  %1830 = fadd <16 x double> %1829, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %1831 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1830
  %1832 = fmul <16 x double> %temp.vect3491, %1831
  %extract3508 = extractelement <16 x double> %1832, i32 0
  %extract3509 = extractelement <16 x double> %1832, i32 1
  %extract3510 = extractelement <16 x double> %1832, i32 2
  %extract3511 = extractelement <16 x double> %1832, i32 3
  %extract3512 = extractelement <16 x double> %1832, i32 4
  %extract3513 = extractelement <16 x double> %1832, i32 5
  %extract3514 = extractelement <16 x double> %1832, i32 6
  %extract3515 = extractelement <16 x double> %1832, i32 7
  %extract3516 = extractelement <16 x double> %1832, i32 8
  %extract3517 = extractelement <16 x double> %1832, i32 9
  %extract3518 = extractelement <16 x double> %1832, i32 10
  %extract3519 = extractelement <16 x double> %1832, i32 11
  %extract3520 = extractelement <16 x double> %1832, i32 12
  %extract3521 = extractelement <16 x double> %1832, i32 13
  %extract3522 = extractelement <16 x double> %1832, i32 14
  %extract3523 = extractelement <16 x double> %1832, i32 15
  %1833 = tail call double @_Z5exp10d(double %extract3508) nounwind
  %1834 = tail call double @_Z5exp10d(double %extract3509) nounwind
  %1835 = tail call double @_Z5exp10d(double %extract3510) nounwind
  %1836 = tail call double @_Z5exp10d(double %extract3511) nounwind
  %1837 = tail call double @_Z5exp10d(double %extract3512) nounwind
  %1838 = tail call double @_Z5exp10d(double %extract3513) nounwind
  %1839 = tail call double @_Z5exp10d(double %extract3514) nounwind
  %1840 = tail call double @_Z5exp10d(double %extract3515) nounwind
  %1841 = tail call double @_Z5exp10d(double %extract3516) nounwind
  %1842 = tail call double @_Z5exp10d(double %extract3517) nounwind
  %1843 = tail call double @_Z5exp10d(double %extract3518) nounwind
  %1844 = tail call double @_Z5exp10d(double %extract3519) nounwind
  %1845 = tail call double @_Z5exp10d(double %extract3520) nounwind
  %1846 = tail call double @_Z5exp10d(double %extract3521) nounwind
  %1847 = tail call double @_Z5exp10d(double %extract3522) nounwind
  %1848 = tail call double @_Z5exp10d(double %extract3523) nounwind
  %temp.vect3524 = insertelement <16 x double> undef, double %1833, i32 0
  %temp.vect3525 = insertelement <16 x double> %temp.vect3524, double %1834, i32 1
  %temp.vect3526 = insertelement <16 x double> %temp.vect3525, double %1835, i32 2
  %temp.vect3527 = insertelement <16 x double> %temp.vect3526, double %1836, i32 3
  %temp.vect3528 = insertelement <16 x double> %temp.vect3527, double %1837, i32 4
  %temp.vect3529 = insertelement <16 x double> %temp.vect3528, double %1838, i32 5
  %temp.vect3530 = insertelement <16 x double> %temp.vect3529, double %1839, i32 6
  %temp.vect3531 = insertelement <16 x double> %temp.vect3530, double %1840, i32 7
  %temp.vect3532 = insertelement <16 x double> %temp.vect3531, double %1841, i32 8
  %temp.vect3533 = insertelement <16 x double> %temp.vect3532, double %1842, i32 9
  %temp.vect3534 = insertelement <16 x double> %temp.vect3533, double %1843, i32 10
  %temp.vect3535 = insertelement <16 x double> %temp.vect3534, double %1844, i32 11
  %temp.vect3536 = insertelement <16 x double> %temp.vect3535, double %1845, i32 12
  %temp.vect3537 = insertelement <16 x double> %temp.vect3536, double %1846, i32 13
  %temp.vect3538 = insertelement <16 x double> %temp.vect3537, double %1847, i32 14
  %temp.vect3539 = insertelement <16 x double> %temp.vect3538, double %1848, i32 15
  %1849 = fmul <16 x double> %temp.vect3539, %1700
  %1850 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1851 = load i64* %1850, align 8
  %1852 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1853 = load i64* %1852, align 8
  %1854 = add i64 %1851, %1853
  %extract3542 = add i64 %1854, 17031168
  %1855 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3542
  %ptrTypeCast3558 = bitcast double addrspace(1)* %1855 to <16 x double> addrspace(1)*
  %1856 = load <16 x double> addrspace(1)* %ptrTypeCast3558, align 8
  %1857 = fmul <16 x double> %1856, %1849
  %1858 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1859 = load i64* %1858, align 8
  %1860 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1861 = load i64* %1860, align 8
  %1862 = add i64 %1859, %1861
  %extract3561 = add i64 %1862, 17031168
  %1863 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3561
  %ptrTypeCast3577 = bitcast double addrspace(1)* %1863 to <16 x double> addrspace(1)*
  store <16 x double> %1857, <16 x double> addrspace(1)* %ptrTypeCast3577, align 8
  %1864 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1865 = load i64* %1864, align 8
  %1866 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1867 = load i64* %1866, align 8
  %1868 = add i64 %1865, %1867
  %extract3580 = add i64 %1868, 17031168
  %1869 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract3580
  %ptrTypeCast3596 = bitcast double addrspace(1)* %1869 to <16 x double> addrspace(1)*
  %1870 = load <16 x double> addrspace(1)* %ptrTypeCast3596, align 8
  %1871 = fmul <16 x double> %1870, %1849
  %1872 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1873 = load i64* %1872, align 8
  %1874 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1875 = load i64* %1874, align 8
  %1876 = add i64 %1873, %1875
  %extract3599 = add i64 %1876, 17031168
  %1877 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract3599
  %ptrTypeCast3615 = bitcast double addrspace(1)* %1877 to <16 x double> addrspace(1)*
  store <16 x double> %1871, <16 x double> addrspace(1)* %ptrTypeCast3615, align 8
  %1878 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1879 = load i64* %1878, align 8
  %1880 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1881 = load i64* %1880, align 8
  %1882 = add i64 %1879, %1881
  %extract3618 = add i64 %1882, 1880064
  %1883 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %extract3618
  %ptrTypeCast3634 = bitcast double addrspace(1)* %1883 to <16 x double> addrspace(1)*
  %1884 = load <16 x double> addrspace(1)* %ptrTypeCast3634, align 8
  %1885 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1886 = load i64* %1885, align 8
  %1887 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1888 = load i64* %1887, align 8
  %1889 = add i64 %1886, %1888
  %extract3637 = add i64 %1889, 17141760
  %1890 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3637
  %ptrTypeCast3653 = bitcast double addrspace(1)* %1890 to <16 x double> addrspace(1)*
  %1891 = load <16 x double> addrspace(1)* %ptrTypeCast3653, align 8
  %1892 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1891
  %1893 = fmul <16 x double> %213, %1892
  %1894 = fmul <16 x double> %1884, %1893
  %extract3654 = extractelement <16 x double> %1894, i32 0
  %extract3655 = extractelement <16 x double> %1894, i32 1
  %extract3656 = extractelement <16 x double> %1894, i32 2
  %extract3657 = extractelement <16 x double> %1894, i32 3
  %extract3658 = extractelement <16 x double> %1894, i32 4
  %extract3659 = extractelement <16 x double> %1894, i32 5
  %extract3660 = extractelement <16 x double> %1894, i32 6
  %extract3661 = extractelement <16 x double> %1894, i32 7
  %extract3662 = extractelement <16 x double> %1894, i32 8
  %extract3663 = extractelement <16 x double> %1894, i32 9
  %extract3664 = extractelement <16 x double> %1894, i32 10
  %extract3665 = extractelement <16 x double> %1894, i32 11
  %extract3666 = extractelement <16 x double> %1894, i32 12
  %extract3667 = extractelement <16 x double> %1894, i32 13
  %extract3668 = extractelement <16 x double> %1894, i32 14
  %extract3669 = extractelement <16 x double> %1894, i32 15
  %1895 = fadd <16 x double> %1894, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %1896 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1895
  %1897 = fmul <16 x double> %1894, %1896
  %1898 = tail call double @_Z4fmaxdd(double %extract3654, double 1.000000e-200) nounwind
  %1899 = tail call double @_Z4fmaxdd(double %extract3655, double 1.000000e-200) nounwind
  %1900 = tail call double @_Z4fmaxdd(double %extract3656, double 1.000000e-200) nounwind
  %1901 = tail call double @_Z4fmaxdd(double %extract3657, double 1.000000e-200) nounwind
  %1902 = tail call double @_Z4fmaxdd(double %extract3658, double 1.000000e-200) nounwind
  %1903 = tail call double @_Z4fmaxdd(double %extract3659, double 1.000000e-200) nounwind
  %1904 = tail call double @_Z4fmaxdd(double %extract3660, double 1.000000e-200) nounwind
  %1905 = tail call double @_Z4fmaxdd(double %extract3661, double 1.000000e-200) nounwind
  %1906 = tail call double @_Z4fmaxdd(double %extract3662, double 1.000000e-200) nounwind
  %1907 = tail call double @_Z4fmaxdd(double %extract3663, double 1.000000e-200) nounwind
  %1908 = tail call double @_Z4fmaxdd(double %extract3664, double 1.000000e-200) nounwind
  %1909 = tail call double @_Z4fmaxdd(double %extract3665, double 1.000000e-200) nounwind
  %1910 = tail call double @_Z4fmaxdd(double %extract3666, double 1.000000e-200) nounwind
  %1911 = tail call double @_Z4fmaxdd(double %extract3667, double 1.000000e-200) nounwind
  %1912 = tail call double @_Z4fmaxdd(double %extract3668, double 1.000000e-200) nounwind
  %1913 = tail call double @_Z4fmaxdd(double %extract3669, double 1.000000e-200) nounwind
  %1914 = tail call double @_Z5log10d(double %1898) nounwind
  %1915 = tail call double @_Z5log10d(double %1899) nounwind
  %1916 = tail call double @_Z5log10d(double %1900) nounwind
  %1917 = tail call double @_Z5log10d(double %1901) nounwind
  %1918 = tail call double @_Z5log10d(double %1902) nounwind
  %1919 = tail call double @_Z5log10d(double %1903) nounwind
  %1920 = tail call double @_Z5log10d(double %1904) nounwind
  %1921 = tail call double @_Z5log10d(double %1905) nounwind
  %1922 = tail call double @_Z5log10d(double %1906) nounwind
  %1923 = tail call double @_Z5log10d(double %1907) nounwind
  %1924 = tail call double @_Z5log10d(double %1908) nounwind
  %1925 = tail call double @_Z5log10d(double %1909) nounwind
  %1926 = tail call double @_Z5log10d(double %1910) nounwind
  %1927 = tail call double @_Z5log10d(double %1911) nounwind
  %1928 = tail call double @_Z5log10d(double %1912) nounwind
  %1929 = tail call double @_Z5log10d(double %1913) nounwind
  %temp.vect3798 = insertelement <16 x double> undef, double %1914, i32 0
  %temp.vect3799 = insertelement <16 x double> %temp.vect3798, double %1915, i32 1
  %temp.vect3800 = insertelement <16 x double> %temp.vect3799, double %1916, i32 2
  %temp.vect3801 = insertelement <16 x double> %temp.vect3800, double %1917, i32 3
  %temp.vect3802 = insertelement <16 x double> %temp.vect3801, double %1918, i32 4
  %temp.vect3803 = insertelement <16 x double> %temp.vect3802, double %1919, i32 5
  %temp.vect3804 = insertelement <16 x double> %temp.vect3803, double %1920, i32 6
  %temp.vect3805 = insertelement <16 x double> %temp.vect3804, double %1921, i32 7
  %temp.vect3806 = insertelement <16 x double> %temp.vect3805, double %1922, i32 8
  %temp.vect3807 = insertelement <16 x double> %temp.vect3806, double %1923, i32 9
  %temp.vect3808 = insertelement <16 x double> %temp.vect3807, double %1924, i32 10
  %temp.vect3809 = insertelement <16 x double> %temp.vect3808, double %1925, i32 11
  %temp.vect3810 = insertelement <16 x double> %temp.vect3809, double %1926, i32 12
  %temp.vect3811 = insertelement <16 x double> %temp.vect3810, double %1927, i32 13
  %temp.vect3812 = insertelement <16 x double> %temp.vect3811, double %1928, i32 14
  %temp.vect3813 = insertelement <16 x double> %temp.vect3812, double %1929, i32 15
  %1930 = fmul <16 x double> %7, <double 0xBF73813813813814, double 0xBF73813813813814, double 0xBF73813813813814, double 0xBF73813813813814, double 0xBF73813813813814, double 0xBF73813813813814, double 0xBF73813813813814, double 0xBF73813813813814, double 0xBF73813813813814, double 0xBF73813813813814, double 0xBF73813813813814, double 0xBF73813813813814, double 0xBF73813813813814, double 0xBF73813813813814, double 0xBF73813813813814, double 0xBF73813813813814>
  %extract3670 = extractelement <16 x double> %1930, i32 0
  %extract3671 = extractelement <16 x double> %1930, i32 1
  %extract3672 = extractelement <16 x double> %1930, i32 2
  %extract3673 = extractelement <16 x double> %1930, i32 3
  %extract3674 = extractelement <16 x double> %1930, i32 4
  %extract3675 = extractelement <16 x double> %1930, i32 5
  %extract3676 = extractelement <16 x double> %1930, i32 6
  %extract3677 = extractelement <16 x double> %1930, i32 7
  %extract3678 = extractelement <16 x double> %1930, i32 8
  %extract3679 = extractelement <16 x double> %1930, i32 9
  %extract3680 = extractelement <16 x double> %1930, i32 10
  %extract3681 = extractelement <16 x double> %1930, i32 11
  %extract3682 = extractelement <16 x double> %1930, i32 12
  %extract3683 = extractelement <16 x double> %1930, i32 13
  %extract3684 = extractelement <16 x double> %1930, i32 14
  %extract3685 = extractelement <16 x double> %1930, i32 15
  %1931 = tail call double @_Z3expd(double %extract3670) nounwind
  %1932 = tail call double @_Z3expd(double %extract3671) nounwind
  %1933 = tail call double @_Z3expd(double %extract3672) nounwind
  %1934 = tail call double @_Z3expd(double %extract3673) nounwind
  %1935 = tail call double @_Z3expd(double %extract3674) nounwind
  %1936 = tail call double @_Z3expd(double %extract3675) nounwind
  %1937 = tail call double @_Z3expd(double %extract3676) nounwind
  %1938 = tail call double @_Z3expd(double %extract3677) nounwind
  %1939 = tail call double @_Z3expd(double %extract3678) nounwind
  %1940 = tail call double @_Z3expd(double %extract3679) nounwind
  %1941 = tail call double @_Z3expd(double %extract3680) nounwind
  %1942 = tail call double @_Z3expd(double %extract3681) nounwind
  %1943 = tail call double @_Z3expd(double %extract3682) nounwind
  %1944 = tail call double @_Z3expd(double %extract3683) nounwind
  %1945 = tail call double @_Z3expd(double %extract3684) nounwind
  %1946 = tail call double @_Z3expd(double %extract3685) nounwind
  %temp.vect3686 = insertelement <16 x double> undef, double %1931, i32 0
  %temp.vect3687 = insertelement <16 x double> %temp.vect3686, double %1932, i32 1
  %temp.vect3688 = insertelement <16 x double> %temp.vect3687, double %1933, i32 2
  %temp.vect3689 = insertelement <16 x double> %temp.vect3688, double %1934, i32 3
  %temp.vect3690 = insertelement <16 x double> %temp.vect3689, double %1935, i32 4
  %temp.vect3691 = insertelement <16 x double> %temp.vect3690, double %1936, i32 5
  %temp.vect3692 = insertelement <16 x double> %temp.vect3691, double %1937, i32 6
  %temp.vect3693 = insertelement <16 x double> %temp.vect3692, double %1938, i32 7
  %temp.vect3694 = insertelement <16 x double> %temp.vect3693, double %1939, i32 8
  %temp.vect3695 = insertelement <16 x double> %temp.vect3694, double %1940, i32 9
  %temp.vect3696 = insertelement <16 x double> %temp.vect3695, double %1941, i32 10
  %temp.vect3697 = insertelement <16 x double> %temp.vect3696, double %1942, i32 11
  %temp.vect3698 = insertelement <16 x double> %temp.vect3697, double %1943, i32 12
  %temp.vect3699 = insertelement <16 x double> %temp.vect3698, double %1944, i32 13
  %temp.vect3700 = insertelement <16 x double> %temp.vect3699, double %1945, i32 14
  %temp.vect3701 = insertelement <16 x double> %temp.vect3700, double %1946, i32 15
  %1947 = fmul <16 x double> %temp.vect3701, <double 2.470000e-02, double 2.470000e-02, double 2.470000e-02, double 2.470000e-02, double 2.470000e-02, double 2.470000e-02, double 2.470000e-02, double 2.470000e-02, double 2.470000e-02, double 2.470000e-02, double 2.470000e-02, double 2.470000e-02, double 2.470000e-02, double 2.470000e-02, double 2.470000e-02, double 2.470000e-02>
  %1948 = fmul <16 x double> %7, <double 0xBF50A6810A6810A7, double 0xBF50A6810A6810A7, double 0xBF50A6810A6810A7, double 0xBF50A6810A6810A7, double 0xBF50A6810A6810A7, double 0xBF50A6810A6810A7, double 0xBF50A6810A6810A7, double 0xBF50A6810A6810A7, double 0xBF50A6810A6810A7, double 0xBF50A6810A6810A7, double 0xBF50A6810A6810A7, double 0xBF50A6810A6810A7, double 0xBF50A6810A6810A7, double 0xBF50A6810A6810A7, double 0xBF50A6810A6810A7, double 0xBF50A6810A6810A7>
  %extract3702 = extractelement <16 x double> %1948, i32 0
  %extract3703 = extractelement <16 x double> %1948, i32 1
  %extract3704 = extractelement <16 x double> %1948, i32 2
  %extract3705 = extractelement <16 x double> %1948, i32 3
  %extract3706 = extractelement <16 x double> %1948, i32 4
  %extract3707 = extractelement <16 x double> %1948, i32 5
  %extract3708 = extractelement <16 x double> %1948, i32 6
  %extract3709 = extractelement <16 x double> %1948, i32 7
  %extract3710 = extractelement <16 x double> %1948, i32 8
  %extract3711 = extractelement <16 x double> %1948, i32 9
  %extract3712 = extractelement <16 x double> %1948, i32 10
  %extract3713 = extractelement <16 x double> %1948, i32 11
  %extract3714 = extractelement <16 x double> %1948, i32 12
  %extract3715 = extractelement <16 x double> %1948, i32 13
  %extract3716 = extractelement <16 x double> %1948, i32 14
  %extract3717 = extractelement <16 x double> %1948, i32 15
  %1949 = tail call double @_Z3expd(double %extract3702) nounwind
  %1950 = tail call double @_Z3expd(double %extract3703) nounwind
  %1951 = tail call double @_Z3expd(double %extract3704) nounwind
  %1952 = tail call double @_Z3expd(double %extract3705) nounwind
  %1953 = tail call double @_Z3expd(double %extract3706) nounwind
  %1954 = tail call double @_Z3expd(double %extract3707) nounwind
  %1955 = tail call double @_Z3expd(double %extract3708) nounwind
  %1956 = tail call double @_Z3expd(double %extract3709) nounwind
  %1957 = tail call double @_Z3expd(double %extract3710) nounwind
  %1958 = tail call double @_Z3expd(double %extract3711) nounwind
  %1959 = tail call double @_Z3expd(double %extract3712) nounwind
  %1960 = tail call double @_Z3expd(double %extract3713) nounwind
  %1961 = tail call double @_Z3expd(double %extract3714) nounwind
  %1962 = tail call double @_Z3expd(double %extract3715) nounwind
  %1963 = tail call double @_Z3expd(double %extract3716) nounwind
  %1964 = tail call double @_Z3expd(double %extract3717) nounwind
  %temp.vect3718 = insertelement <16 x double> undef, double %1949, i32 0
  %temp.vect3719 = insertelement <16 x double> %temp.vect3718, double %1950, i32 1
  %temp.vect3720 = insertelement <16 x double> %temp.vect3719, double %1951, i32 2
  %temp.vect3721 = insertelement <16 x double> %temp.vect3720, double %1952, i32 3
  %temp.vect3722 = insertelement <16 x double> %temp.vect3721, double %1953, i32 4
  %temp.vect3723 = insertelement <16 x double> %temp.vect3722, double %1954, i32 5
  %temp.vect3724 = insertelement <16 x double> %temp.vect3723, double %1955, i32 6
  %temp.vect3725 = insertelement <16 x double> %temp.vect3724, double %1956, i32 7
  %temp.vect3726 = insertelement <16 x double> %temp.vect3725, double %1957, i32 8
  %temp.vect3727 = insertelement <16 x double> %temp.vect3726, double %1958, i32 9
  %temp.vect3728 = insertelement <16 x double> %temp.vect3727, double %1959, i32 10
  %temp.vect3729 = insertelement <16 x double> %temp.vect3728, double %1960, i32 11
  %temp.vect3730 = insertelement <16 x double> %temp.vect3729, double %1961, i32 12
  %temp.vect3731 = insertelement <16 x double> %temp.vect3730, double %1962, i32 13
  %temp.vect3732 = insertelement <16 x double> %temp.vect3731, double %1963, i32 14
  %temp.vect3733 = insertelement <16 x double> %temp.vect3732, double %1964, i32 15
  %1965 = fmul <16 x double> %temp.vect3733, <double 9.753000e-01, double 9.753000e-01, double 9.753000e-01, double 9.753000e-01, double 9.753000e-01, double 9.753000e-01, double 9.753000e-01, double 9.753000e-01, double 9.753000e-01, double 9.753000e-01, double 9.753000e-01, double 9.753000e-01, double 9.753000e-01, double 9.753000e-01, double 9.753000e-01, double 9.753000e-01>
  %1966 = fadd <16 x double> %1947, %1965
  %1967 = fmul <16 x double> %981, <double -4.374000e+03, double -4.374000e+03, double -4.374000e+03, double -4.374000e+03, double -4.374000e+03, double -4.374000e+03, double -4.374000e+03, double -4.374000e+03, double -4.374000e+03, double -4.374000e+03, double -4.374000e+03, double -4.374000e+03, double -4.374000e+03, double -4.374000e+03, double -4.374000e+03, double -4.374000e+03>
  %extract3734 = extractelement <16 x double> %1967, i32 0
  %extract3735 = extractelement <16 x double> %1967, i32 1
  %extract3736 = extractelement <16 x double> %1967, i32 2
  %extract3737 = extractelement <16 x double> %1967, i32 3
  %extract3738 = extractelement <16 x double> %1967, i32 4
  %extract3739 = extractelement <16 x double> %1967, i32 5
  %extract3740 = extractelement <16 x double> %1967, i32 6
  %extract3741 = extractelement <16 x double> %1967, i32 7
  %extract3742 = extractelement <16 x double> %1967, i32 8
  %extract3743 = extractelement <16 x double> %1967, i32 9
  %extract3744 = extractelement <16 x double> %1967, i32 10
  %extract3745 = extractelement <16 x double> %1967, i32 11
  %extract3746 = extractelement <16 x double> %1967, i32 12
  %extract3747 = extractelement <16 x double> %1967, i32 13
  %extract3748 = extractelement <16 x double> %1967, i32 14
  %extract3749 = extractelement <16 x double> %1967, i32 15
  %1968 = tail call double @_Z3expd(double %extract3734) nounwind
  %1969 = tail call double @_Z3expd(double %extract3735) nounwind
  %1970 = tail call double @_Z3expd(double %extract3736) nounwind
  %1971 = tail call double @_Z3expd(double %extract3737) nounwind
  %1972 = tail call double @_Z3expd(double %extract3738) nounwind
  %1973 = tail call double @_Z3expd(double %extract3739) nounwind
  %1974 = tail call double @_Z3expd(double %extract3740) nounwind
  %1975 = tail call double @_Z3expd(double %extract3741) nounwind
  %1976 = tail call double @_Z3expd(double %extract3742) nounwind
  %1977 = tail call double @_Z3expd(double %extract3743) nounwind
  %1978 = tail call double @_Z3expd(double %extract3744) nounwind
  %1979 = tail call double @_Z3expd(double %extract3745) nounwind
  %1980 = tail call double @_Z3expd(double %extract3746) nounwind
  %1981 = tail call double @_Z3expd(double %extract3747) nounwind
  %1982 = tail call double @_Z3expd(double %extract3748) nounwind
  %1983 = tail call double @_Z3expd(double %extract3749) nounwind
  %temp.vect3750 = insertelement <16 x double> undef, double %1968, i32 0
  %temp.vect3751 = insertelement <16 x double> %temp.vect3750, double %1969, i32 1
  %temp.vect3752 = insertelement <16 x double> %temp.vect3751, double %1970, i32 2
  %temp.vect3753 = insertelement <16 x double> %temp.vect3752, double %1971, i32 3
  %temp.vect3754 = insertelement <16 x double> %temp.vect3753, double %1972, i32 4
  %temp.vect3755 = insertelement <16 x double> %temp.vect3754, double %1973, i32 5
  %temp.vect3756 = insertelement <16 x double> %temp.vect3755, double %1974, i32 6
  %temp.vect3757 = insertelement <16 x double> %temp.vect3756, double %1975, i32 7
  %temp.vect3758 = insertelement <16 x double> %temp.vect3757, double %1976, i32 8
  %temp.vect3759 = insertelement <16 x double> %temp.vect3758, double %1977, i32 9
  %temp.vect3760 = insertelement <16 x double> %temp.vect3759, double %1978, i32 10
  %temp.vect3761 = insertelement <16 x double> %temp.vect3760, double %1979, i32 11
  %temp.vect3762 = insertelement <16 x double> %temp.vect3761, double %1980, i32 12
  %temp.vect3763 = insertelement <16 x double> %temp.vect3762, double %1981, i32 13
  %temp.vect3764 = insertelement <16 x double> %temp.vect3763, double %1982, i32 14
  %temp.vect3765 = insertelement <16 x double> %temp.vect3764, double %1983, i32 15
  %1984 = fadd <16 x double> %1966, %temp.vect3765
  %extract3766 = extractelement <16 x double> %1984, i32 0
  %extract3767 = extractelement <16 x double> %1984, i32 1
  %extract3768 = extractelement <16 x double> %1984, i32 2
  %extract3769 = extractelement <16 x double> %1984, i32 3
  %extract3770 = extractelement <16 x double> %1984, i32 4
  %extract3771 = extractelement <16 x double> %1984, i32 5
  %extract3772 = extractelement <16 x double> %1984, i32 6
  %extract3773 = extractelement <16 x double> %1984, i32 7
  %extract3774 = extractelement <16 x double> %1984, i32 8
  %extract3775 = extractelement <16 x double> %1984, i32 9
  %extract3776 = extractelement <16 x double> %1984, i32 10
  %extract3777 = extractelement <16 x double> %1984, i32 11
  %extract3778 = extractelement <16 x double> %1984, i32 12
  %extract3779 = extractelement <16 x double> %1984, i32 13
  %extract3780 = extractelement <16 x double> %1984, i32 14
  %extract3781 = extractelement <16 x double> %1984, i32 15
  %1985 = tail call double @_Z4fmaxdd(double %extract3766, double 1.000000e-200) nounwind
  %1986 = tail call double @_Z4fmaxdd(double %extract3767, double 1.000000e-200) nounwind
  %1987 = tail call double @_Z4fmaxdd(double %extract3768, double 1.000000e-200) nounwind
  %1988 = tail call double @_Z4fmaxdd(double %extract3769, double 1.000000e-200) nounwind
  %1989 = tail call double @_Z4fmaxdd(double %extract3770, double 1.000000e-200) nounwind
  %1990 = tail call double @_Z4fmaxdd(double %extract3771, double 1.000000e-200) nounwind
  %1991 = tail call double @_Z4fmaxdd(double %extract3772, double 1.000000e-200) nounwind
  %1992 = tail call double @_Z4fmaxdd(double %extract3773, double 1.000000e-200) nounwind
  %1993 = tail call double @_Z4fmaxdd(double %extract3774, double 1.000000e-200) nounwind
  %1994 = tail call double @_Z4fmaxdd(double %extract3775, double 1.000000e-200) nounwind
  %1995 = tail call double @_Z4fmaxdd(double %extract3776, double 1.000000e-200) nounwind
  %1996 = tail call double @_Z4fmaxdd(double %extract3777, double 1.000000e-200) nounwind
  %1997 = tail call double @_Z4fmaxdd(double %extract3778, double 1.000000e-200) nounwind
  %1998 = tail call double @_Z4fmaxdd(double %extract3779, double 1.000000e-200) nounwind
  %1999 = tail call double @_Z4fmaxdd(double %extract3780, double 1.000000e-200) nounwind
  %2000 = tail call double @_Z4fmaxdd(double %extract3781, double 1.000000e-200) nounwind
  %2001 = tail call double @_Z5log10d(double %1985) nounwind
  %2002 = tail call double @_Z5log10d(double %1986) nounwind
  %2003 = tail call double @_Z5log10d(double %1987) nounwind
  %2004 = tail call double @_Z5log10d(double %1988) nounwind
  %2005 = tail call double @_Z5log10d(double %1989) nounwind
  %2006 = tail call double @_Z5log10d(double %1990) nounwind
  %2007 = tail call double @_Z5log10d(double %1991) nounwind
  %2008 = tail call double @_Z5log10d(double %1992) nounwind
  %2009 = tail call double @_Z5log10d(double %1993) nounwind
  %2010 = tail call double @_Z5log10d(double %1994) nounwind
  %2011 = tail call double @_Z5log10d(double %1995) nounwind
  %2012 = tail call double @_Z5log10d(double %1996) nounwind
  %2013 = tail call double @_Z5log10d(double %1997) nounwind
  %2014 = tail call double @_Z5log10d(double %1998) nounwind
  %2015 = tail call double @_Z5log10d(double %1999) nounwind
  %2016 = tail call double @_Z5log10d(double %2000) nounwind
  %temp.vect3782 = insertelement <16 x double> undef, double %2001, i32 0
  %temp.vect3783 = insertelement <16 x double> %temp.vect3782, double %2002, i32 1
  %temp.vect3784 = insertelement <16 x double> %temp.vect3783, double %2003, i32 2
  %temp.vect3785 = insertelement <16 x double> %temp.vect3784, double %2004, i32 3
  %temp.vect3786 = insertelement <16 x double> %temp.vect3785, double %2005, i32 4
  %temp.vect3787 = insertelement <16 x double> %temp.vect3786, double %2006, i32 5
  %temp.vect3788 = insertelement <16 x double> %temp.vect3787, double %2007, i32 6
  %temp.vect3789 = insertelement <16 x double> %temp.vect3788, double %2008, i32 7
  %temp.vect3790 = insertelement <16 x double> %temp.vect3789, double %2009, i32 8
  %temp.vect3791 = insertelement <16 x double> %temp.vect3790, double %2010, i32 9
  %temp.vect3792 = insertelement <16 x double> %temp.vect3791, double %2011, i32 10
  %temp.vect3793 = insertelement <16 x double> %temp.vect3792, double %2012, i32 11
  %temp.vect3794 = insertelement <16 x double> %temp.vect3793, double %2013, i32 12
  %temp.vect3795 = insertelement <16 x double> %temp.vect3794, double %2014, i32 13
  %temp.vect3796 = insertelement <16 x double> %temp.vect3795, double %2015, i32 14
  %temp.vect3797 = insertelement <16 x double> %temp.vect3796, double %2016, i32 15
  %2017 = fmul <16 x double> %temp.vect3797, <double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00>
  %2018 = fsub <16 x double> <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>, %2017
  %2019 = fmul <16 x double> %temp.vect3797, <double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01>
  %2020 = fadd <16 x double> %2019, <double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01>
  %2021 = fsub <16 x double> %temp.vect3813, %2020
  %2022 = fmul <16 x double> %2021, <double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01>
  %2023 = fsub <16 x double> %2018, %2022
  %2024 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2023
  %2025 = fmul <16 x double> %2021, %2024
  %2026 = fmul <16 x double> %2025, %2025
  %2027 = fadd <16 x double> %2026, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %2028 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2027
  %2029 = fmul <16 x double> %temp.vect3797, %2028
  %extract3814 = extractelement <16 x double> %2029, i32 0
  %extract3815 = extractelement <16 x double> %2029, i32 1
  %extract3816 = extractelement <16 x double> %2029, i32 2
  %extract3817 = extractelement <16 x double> %2029, i32 3
  %extract3818 = extractelement <16 x double> %2029, i32 4
  %extract3819 = extractelement <16 x double> %2029, i32 5
  %extract3820 = extractelement <16 x double> %2029, i32 6
  %extract3821 = extractelement <16 x double> %2029, i32 7
  %extract3822 = extractelement <16 x double> %2029, i32 8
  %extract3823 = extractelement <16 x double> %2029, i32 9
  %extract3824 = extractelement <16 x double> %2029, i32 10
  %extract3825 = extractelement <16 x double> %2029, i32 11
  %extract3826 = extractelement <16 x double> %2029, i32 12
  %extract3827 = extractelement <16 x double> %2029, i32 13
  %extract3828 = extractelement <16 x double> %2029, i32 14
  %extract3829 = extractelement <16 x double> %2029, i32 15
  %2030 = tail call double @_Z5exp10d(double %extract3814) nounwind
  %2031 = tail call double @_Z5exp10d(double %extract3815) nounwind
  %2032 = tail call double @_Z5exp10d(double %extract3816) nounwind
  %2033 = tail call double @_Z5exp10d(double %extract3817) nounwind
  %2034 = tail call double @_Z5exp10d(double %extract3818) nounwind
  %2035 = tail call double @_Z5exp10d(double %extract3819) nounwind
  %2036 = tail call double @_Z5exp10d(double %extract3820) nounwind
  %2037 = tail call double @_Z5exp10d(double %extract3821) nounwind
  %2038 = tail call double @_Z5exp10d(double %extract3822) nounwind
  %2039 = tail call double @_Z5exp10d(double %extract3823) nounwind
  %2040 = tail call double @_Z5exp10d(double %extract3824) nounwind
  %2041 = tail call double @_Z5exp10d(double %extract3825) nounwind
  %2042 = tail call double @_Z5exp10d(double %extract3826) nounwind
  %2043 = tail call double @_Z5exp10d(double %extract3827) nounwind
  %2044 = tail call double @_Z5exp10d(double %extract3828) nounwind
  %2045 = tail call double @_Z5exp10d(double %extract3829) nounwind
  %temp.vect3830 = insertelement <16 x double> undef, double %2030, i32 0
  %temp.vect3831 = insertelement <16 x double> %temp.vect3830, double %2031, i32 1
  %temp.vect3832 = insertelement <16 x double> %temp.vect3831, double %2032, i32 2
  %temp.vect3833 = insertelement <16 x double> %temp.vect3832, double %2033, i32 3
  %temp.vect3834 = insertelement <16 x double> %temp.vect3833, double %2034, i32 4
  %temp.vect3835 = insertelement <16 x double> %temp.vect3834, double %2035, i32 5
  %temp.vect3836 = insertelement <16 x double> %temp.vect3835, double %2036, i32 6
  %temp.vect3837 = insertelement <16 x double> %temp.vect3836, double %2037, i32 7
  %temp.vect3838 = insertelement <16 x double> %temp.vect3837, double %2038, i32 8
  %temp.vect3839 = insertelement <16 x double> %temp.vect3838, double %2039, i32 9
  %temp.vect3840 = insertelement <16 x double> %temp.vect3839, double %2040, i32 10
  %temp.vect3841 = insertelement <16 x double> %temp.vect3840, double %2041, i32 11
  %temp.vect3842 = insertelement <16 x double> %temp.vect3841, double %2042, i32 12
  %temp.vect3843 = insertelement <16 x double> %temp.vect3842, double %2043, i32 13
  %temp.vect3844 = insertelement <16 x double> %temp.vect3843, double %2044, i32 14
  %temp.vect3845 = insertelement <16 x double> %temp.vect3844, double %2045, i32 15
  %2046 = fmul <16 x double> %temp.vect3845, %1897
  %2047 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2048 = load i64* %2047, align 8
  %2049 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2050 = load i64* %2049, align 8
  %2051 = add i64 %2048, %2050
  %extract3848 = add i64 %2051, 17141760
  %2052 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3848
  %ptrTypeCast3864 = bitcast double addrspace(1)* %2052 to <16 x double> addrspace(1)*
  %2053 = load <16 x double> addrspace(1)* %ptrTypeCast3864, align 8
  %2054 = fmul <16 x double> %2053, %2046
  %2055 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2056 = load i64* %2055, align 8
  %2057 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2058 = load i64* %2057, align 8
  %2059 = add i64 %2056, %2058
  %extract3867 = add i64 %2059, 17141760
  %2060 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3867
  %ptrTypeCast3883 = bitcast double addrspace(1)* %2060 to <16 x double> addrspace(1)*
  store <16 x double> %2054, <16 x double> addrspace(1)* %ptrTypeCast3883, align 8
  %2061 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2062 = load i64* %2061, align 8
  %2063 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2064 = load i64* %2063, align 8
  %2065 = add i64 %2062, %2064
  %extract3886 = add i64 %2065, 17141760
  %2066 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract3886
  %ptrTypeCast3902 = bitcast double addrspace(1)* %2066 to <16 x double> addrspace(1)*
  %2067 = load <16 x double> addrspace(1)* %ptrTypeCast3902, align 8
  %2068 = fmul <16 x double> %2067, %2046
  %2069 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2070 = load i64* %2069, align 8
  %2071 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2072 = load i64* %2071, align 8
  %2073 = add i64 %2070, %2072
  %extract3905 = add i64 %2073, 17141760
  %2074 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract3905
  %ptrTypeCast3921 = bitcast double addrspace(1)* %2074 to <16 x double> addrspace(1)*
  store <16 x double> %2068, <16 x double> addrspace(1)* %ptrTypeCast3921, align 8
  %2075 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2076 = load i64* %2075, align 8
  %2077 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2078 = load i64* %2077, align 8
  %2079 = add i64 %2076, %2078
  %extract3924 = add i64 %2079, 1990656
  %2080 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %extract3924
  %ptrTypeCast3940 = bitcast double addrspace(1)* %2080 to <16 x double> addrspace(1)*
  %2081 = load <16 x double> addrspace(1)* %ptrTypeCast3940, align 8
  %2082 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2083 = load i64* %2082, align 8
  %2084 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2085 = load i64* %2084, align 8
  %2086 = add i64 %2083, %2085
  %extract3943 = add i64 %2086, 18690048
  %2087 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3943
  %ptrTypeCast3959 = bitcast double addrspace(1)* %2087 to <16 x double> addrspace(1)*
  %2088 = load <16 x double> addrspace(1)* %ptrTypeCast3959, align 8
  %2089 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2088
  %2090 = fmul <16 x double> %213, %2089
  %2091 = fmul <16 x double> %2081, %2090
  %extract3960 = extractelement <16 x double> %2091, i32 0
  %extract3961 = extractelement <16 x double> %2091, i32 1
  %extract3962 = extractelement <16 x double> %2091, i32 2
  %extract3963 = extractelement <16 x double> %2091, i32 3
  %extract3964 = extractelement <16 x double> %2091, i32 4
  %extract3965 = extractelement <16 x double> %2091, i32 5
  %extract3966 = extractelement <16 x double> %2091, i32 6
  %extract3967 = extractelement <16 x double> %2091, i32 7
  %extract3968 = extractelement <16 x double> %2091, i32 8
  %extract3969 = extractelement <16 x double> %2091, i32 9
  %extract3970 = extractelement <16 x double> %2091, i32 10
  %extract3971 = extractelement <16 x double> %2091, i32 11
  %extract3972 = extractelement <16 x double> %2091, i32 12
  %extract3973 = extractelement <16 x double> %2091, i32 13
  %extract3974 = extractelement <16 x double> %2091, i32 14
  %extract3975 = extractelement <16 x double> %2091, i32 15
  %2092 = fadd <16 x double> %2091, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %2093 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2092
  %2094 = fmul <16 x double> %2091, %2093
  %2095 = tail call double @_Z4fmaxdd(double %extract3960, double 1.000000e-200) nounwind
  %2096 = tail call double @_Z4fmaxdd(double %extract3961, double 1.000000e-200) nounwind
  %2097 = tail call double @_Z4fmaxdd(double %extract3962, double 1.000000e-200) nounwind
  %2098 = tail call double @_Z4fmaxdd(double %extract3963, double 1.000000e-200) nounwind
  %2099 = tail call double @_Z4fmaxdd(double %extract3964, double 1.000000e-200) nounwind
  %2100 = tail call double @_Z4fmaxdd(double %extract3965, double 1.000000e-200) nounwind
  %2101 = tail call double @_Z4fmaxdd(double %extract3966, double 1.000000e-200) nounwind
  %2102 = tail call double @_Z4fmaxdd(double %extract3967, double 1.000000e-200) nounwind
  %2103 = tail call double @_Z4fmaxdd(double %extract3968, double 1.000000e-200) nounwind
  %2104 = tail call double @_Z4fmaxdd(double %extract3969, double 1.000000e-200) nounwind
  %2105 = tail call double @_Z4fmaxdd(double %extract3970, double 1.000000e-200) nounwind
  %2106 = tail call double @_Z4fmaxdd(double %extract3971, double 1.000000e-200) nounwind
  %2107 = tail call double @_Z4fmaxdd(double %extract3972, double 1.000000e-200) nounwind
  %2108 = tail call double @_Z4fmaxdd(double %extract3973, double 1.000000e-200) nounwind
  %2109 = tail call double @_Z4fmaxdd(double %extract3974, double 1.000000e-200) nounwind
  %2110 = tail call double @_Z4fmaxdd(double %extract3975, double 1.000000e-200) nounwind
  %2111 = tail call double @_Z5log10d(double %2095) nounwind
  %2112 = tail call double @_Z5log10d(double %2096) nounwind
  %2113 = tail call double @_Z5log10d(double %2097) nounwind
  %2114 = tail call double @_Z5log10d(double %2098) nounwind
  %2115 = tail call double @_Z5log10d(double %2099) nounwind
  %2116 = tail call double @_Z5log10d(double %2100) nounwind
  %2117 = tail call double @_Z5log10d(double %2101) nounwind
  %2118 = tail call double @_Z5log10d(double %2102) nounwind
  %2119 = tail call double @_Z5log10d(double %2103) nounwind
  %2120 = tail call double @_Z5log10d(double %2104) nounwind
  %2121 = tail call double @_Z5log10d(double %2105) nounwind
  %2122 = tail call double @_Z5log10d(double %2106) nounwind
  %2123 = tail call double @_Z5log10d(double %2107) nounwind
  %2124 = tail call double @_Z5log10d(double %2108) nounwind
  %2125 = tail call double @_Z5log10d(double %2109) nounwind
  %2126 = tail call double @_Z5log10d(double %2110) nounwind
  %temp.vect4104 = insertelement <16 x double> undef, double %2111, i32 0
  %temp.vect4105 = insertelement <16 x double> %temp.vect4104, double %2112, i32 1
  %temp.vect4106 = insertelement <16 x double> %temp.vect4105, double %2113, i32 2
  %temp.vect4107 = insertelement <16 x double> %temp.vect4106, double %2114, i32 3
  %temp.vect4108 = insertelement <16 x double> %temp.vect4107, double %2115, i32 4
  %temp.vect4109 = insertelement <16 x double> %temp.vect4108, double %2116, i32 5
  %temp.vect4110 = insertelement <16 x double> %temp.vect4109, double %2117, i32 6
  %temp.vect4111 = insertelement <16 x double> %temp.vect4110, double %2118, i32 7
  %temp.vect4112 = insertelement <16 x double> %temp.vect4111, double %2119, i32 8
  %temp.vect4113 = insertelement <16 x double> %temp.vect4112, double %2120, i32 9
  %temp.vect4114 = insertelement <16 x double> %temp.vect4113, double %2121, i32 10
  %temp.vect4115 = insertelement <16 x double> %temp.vect4114, double %2122, i32 11
  %temp.vect4116 = insertelement <16 x double> %temp.vect4115, double %2123, i32 12
  %temp.vect4117 = insertelement <16 x double> %temp.vect4116, double %2124, i32 13
  %temp.vect4118 = insertelement <16 x double> %temp.vect4117, double %2125, i32 14
  %temp.vect4119 = insertelement <16 x double> %temp.vect4118, double %2126, i32 15
  %2127 = fmul <16 x double> %7, <double -8.000000e-03, double -8.000000e-03, double -8.000000e-03, double -8.000000e-03, double -8.000000e-03, double -8.000000e-03, double -8.000000e-03, double -8.000000e-03, double -8.000000e-03, double -8.000000e-03, double -8.000000e-03, double -8.000000e-03, double -8.000000e-03, double -8.000000e-03, double -8.000000e-03, double -8.000000e-03>
  %extract3976 = extractelement <16 x double> %2127, i32 0
  %extract3977 = extractelement <16 x double> %2127, i32 1
  %extract3978 = extractelement <16 x double> %2127, i32 2
  %extract3979 = extractelement <16 x double> %2127, i32 3
  %extract3980 = extractelement <16 x double> %2127, i32 4
  %extract3981 = extractelement <16 x double> %2127, i32 5
  %extract3982 = extractelement <16 x double> %2127, i32 6
  %extract3983 = extractelement <16 x double> %2127, i32 7
  %extract3984 = extractelement <16 x double> %2127, i32 8
  %extract3985 = extractelement <16 x double> %2127, i32 9
  %extract3986 = extractelement <16 x double> %2127, i32 10
  %extract3987 = extractelement <16 x double> %2127, i32 11
  %extract3988 = extractelement <16 x double> %2127, i32 12
  %extract3989 = extractelement <16 x double> %2127, i32 13
  %extract3990 = extractelement <16 x double> %2127, i32 14
  %extract3991 = extractelement <16 x double> %2127, i32 15
  %2128 = tail call double @_Z3expd(double %extract3976) nounwind
  %2129 = tail call double @_Z3expd(double %extract3977) nounwind
  %2130 = tail call double @_Z3expd(double %extract3978) nounwind
  %2131 = tail call double @_Z3expd(double %extract3979) nounwind
  %2132 = tail call double @_Z3expd(double %extract3980) nounwind
  %2133 = tail call double @_Z3expd(double %extract3981) nounwind
  %2134 = tail call double @_Z3expd(double %extract3982) nounwind
  %2135 = tail call double @_Z3expd(double %extract3983) nounwind
  %2136 = tail call double @_Z3expd(double %extract3984) nounwind
  %2137 = tail call double @_Z3expd(double %extract3985) nounwind
  %2138 = tail call double @_Z3expd(double %extract3986) nounwind
  %2139 = tail call double @_Z3expd(double %extract3987) nounwind
  %2140 = tail call double @_Z3expd(double %extract3988) nounwind
  %2141 = tail call double @_Z3expd(double %extract3989) nounwind
  %2142 = tail call double @_Z3expd(double %extract3990) nounwind
  %2143 = tail call double @_Z3expd(double %extract3991) nounwind
  %temp.vect3992 = insertelement <16 x double> undef, double %2128, i32 0
  %temp.vect3993 = insertelement <16 x double> %temp.vect3992, double %2129, i32 1
  %temp.vect3994 = insertelement <16 x double> %temp.vect3993, double %2130, i32 2
  %temp.vect3995 = insertelement <16 x double> %temp.vect3994, double %2131, i32 3
  %temp.vect3996 = insertelement <16 x double> %temp.vect3995, double %2132, i32 4
  %temp.vect3997 = insertelement <16 x double> %temp.vect3996, double %2133, i32 5
  %temp.vect3998 = insertelement <16 x double> %temp.vect3997, double %2134, i32 6
  %temp.vect3999 = insertelement <16 x double> %temp.vect3998, double %2135, i32 7
  %temp.vect4000 = insertelement <16 x double> %temp.vect3999, double %2136, i32 8
  %temp.vect4001 = insertelement <16 x double> %temp.vect4000, double %2137, i32 9
  %temp.vect4002 = insertelement <16 x double> %temp.vect4001, double %2138, i32 10
  %temp.vect4003 = insertelement <16 x double> %temp.vect4002, double %2139, i32 11
  %temp.vect4004 = insertelement <16 x double> %temp.vect4003, double %2140, i32 12
  %temp.vect4005 = insertelement <16 x double> %temp.vect4004, double %2141, i32 13
  %temp.vect4006 = insertelement <16 x double> %temp.vect4005, double %2142, i32 14
  %temp.vect4007 = insertelement <16 x double> %temp.vect4006, double %2143, i32 15
  %2144 = fmul <16 x double> %temp.vect4007, <double 1.578000e-01, double 1.578000e-01, double 1.578000e-01, double 1.578000e-01, double 1.578000e-01, double 1.578000e-01, double 1.578000e-01, double 1.578000e-01, double 1.578000e-01, double 1.578000e-01, double 1.578000e-01, double 1.578000e-01, double 1.578000e-01, double 1.578000e-01, double 1.578000e-01, double 1.578000e-01>
  %2145 = fmul <16 x double> %7, <double 0xBF3D88B5D19F527D, double 0xBF3D88B5D19F527D, double 0xBF3D88B5D19F527D, double 0xBF3D88B5D19F527D, double 0xBF3D88B5D19F527D, double 0xBF3D88B5D19F527D, double 0xBF3D88B5D19F527D, double 0xBF3D88B5D19F527D, double 0xBF3D88B5D19F527D, double 0xBF3D88B5D19F527D, double 0xBF3D88B5D19F527D, double 0xBF3D88B5D19F527D, double 0xBF3D88B5D19F527D, double 0xBF3D88B5D19F527D, double 0xBF3D88B5D19F527D, double 0xBF3D88B5D19F527D>
  %extract4008 = extractelement <16 x double> %2145, i32 0
  %extract4009 = extractelement <16 x double> %2145, i32 1
  %extract4010 = extractelement <16 x double> %2145, i32 2
  %extract4011 = extractelement <16 x double> %2145, i32 3
  %extract4012 = extractelement <16 x double> %2145, i32 4
  %extract4013 = extractelement <16 x double> %2145, i32 5
  %extract4014 = extractelement <16 x double> %2145, i32 6
  %extract4015 = extractelement <16 x double> %2145, i32 7
  %extract4016 = extractelement <16 x double> %2145, i32 8
  %extract4017 = extractelement <16 x double> %2145, i32 9
  %extract4018 = extractelement <16 x double> %2145, i32 10
  %extract4019 = extractelement <16 x double> %2145, i32 11
  %extract4020 = extractelement <16 x double> %2145, i32 12
  %extract4021 = extractelement <16 x double> %2145, i32 13
  %extract4022 = extractelement <16 x double> %2145, i32 14
  %extract4023 = extractelement <16 x double> %2145, i32 15
  %2146 = tail call double @_Z3expd(double %extract4008) nounwind
  %2147 = tail call double @_Z3expd(double %extract4009) nounwind
  %2148 = tail call double @_Z3expd(double %extract4010) nounwind
  %2149 = tail call double @_Z3expd(double %extract4011) nounwind
  %2150 = tail call double @_Z3expd(double %extract4012) nounwind
  %2151 = tail call double @_Z3expd(double %extract4013) nounwind
  %2152 = tail call double @_Z3expd(double %extract4014) nounwind
  %2153 = tail call double @_Z3expd(double %extract4015) nounwind
  %2154 = tail call double @_Z3expd(double %extract4016) nounwind
  %2155 = tail call double @_Z3expd(double %extract4017) nounwind
  %2156 = tail call double @_Z3expd(double %extract4018) nounwind
  %2157 = tail call double @_Z3expd(double %extract4019) nounwind
  %2158 = tail call double @_Z3expd(double %extract4020) nounwind
  %2159 = tail call double @_Z3expd(double %extract4021) nounwind
  %2160 = tail call double @_Z3expd(double %extract4022) nounwind
  %2161 = tail call double @_Z3expd(double %extract4023) nounwind
  %temp.vect4024 = insertelement <16 x double> undef, double %2146, i32 0
  %temp.vect4025 = insertelement <16 x double> %temp.vect4024, double %2147, i32 1
  %temp.vect4026 = insertelement <16 x double> %temp.vect4025, double %2148, i32 2
  %temp.vect4027 = insertelement <16 x double> %temp.vect4026, double %2149, i32 3
  %temp.vect4028 = insertelement <16 x double> %temp.vect4027, double %2150, i32 4
  %temp.vect4029 = insertelement <16 x double> %temp.vect4028, double %2151, i32 5
  %temp.vect4030 = insertelement <16 x double> %temp.vect4029, double %2152, i32 6
  %temp.vect4031 = insertelement <16 x double> %temp.vect4030, double %2153, i32 7
  %temp.vect4032 = insertelement <16 x double> %temp.vect4031, double %2154, i32 8
  %temp.vect4033 = insertelement <16 x double> %temp.vect4032, double %2155, i32 9
  %temp.vect4034 = insertelement <16 x double> %temp.vect4033, double %2156, i32 10
  %temp.vect4035 = insertelement <16 x double> %temp.vect4034, double %2157, i32 11
  %temp.vect4036 = insertelement <16 x double> %temp.vect4035, double %2158, i32 12
  %temp.vect4037 = insertelement <16 x double> %temp.vect4036, double %2159, i32 13
  %temp.vect4038 = insertelement <16 x double> %temp.vect4037, double %2160, i32 14
  %temp.vect4039 = insertelement <16 x double> %temp.vect4038, double %2161, i32 15
  %2162 = fmul <16 x double> %temp.vect4039, <double 8.422000e-01, double 8.422000e-01, double 8.422000e-01, double 8.422000e-01, double 8.422000e-01, double 8.422000e-01, double 8.422000e-01, double 8.422000e-01, double 8.422000e-01, double 8.422000e-01, double 8.422000e-01, double 8.422000e-01, double 8.422000e-01, double 8.422000e-01, double 8.422000e-01, double 8.422000e-01>
  %2163 = fadd <16 x double> %2144, %2162
  %2164 = fmul <16 x double> %981, <double -6.882000e+03, double -6.882000e+03, double -6.882000e+03, double -6.882000e+03, double -6.882000e+03, double -6.882000e+03, double -6.882000e+03, double -6.882000e+03, double -6.882000e+03, double -6.882000e+03, double -6.882000e+03, double -6.882000e+03, double -6.882000e+03, double -6.882000e+03, double -6.882000e+03, double -6.882000e+03>
  %extract4040 = extractelement <16 x double> %2164, i32 0
  %extract4041 = extractelement <16 x double> %2164, i32 1
  %extract4042 = extractelement <16 x double> %2164, i32 2
  %extract4043 = extractelement <16 x double> %2164, i32 3
  %extract4044 = extractelement <16 x double> %2164, i32 4
  %extract4045 = extractelement <16 x double> %2164, i32 5
  %extract4046 = extractelement <16 x double> %2164, i32 6
  %extract4047 = extractelement <16 x double> %2164, i32 7
  %extract4048 = extractelement <16 x double> %2164, i32 8
  %extract4049 = extractelement <16 x double> %2164, i32 9
  %extract4050 = extractelement <16 x double> %2164, i32 10
  %extract4051 = extractelement <16 x double> %2164, i32 11
  %extract4052 = extractelement <16 x double> %2164, i32 12
  %extract4053 = extractelement <16 x double> %2164, i32 13
  %extract4054 = extractelement <16 x double> %2164, i32 14
  %extract4055 = extractelement <16 x double> %2164, i32 15
  %2165 = tail call double @_Z3expd(double %extract4040) nounwind
  %2166 = tail call double @_Z3expd(double %extract4041) nounwind
  %2167 = tail call double @_Z3expd(double %extract4042) nounwind
  %2168 = tail call double @_Z3expd(double %extract4043) nounwind
  %2169 = tail call double @_Z3expd(double %extract4044) nounwind
  %2170 = tail call double @_Z3expd(double %extract4045) nounwind
  %2171 = tail call double @_Z3expd(double %extract4046) nounwind
  %2172 = tail call double @_Z3expd(double %extract4047) nounwind
  %2173 = tail call double @_Z3expd(double %extract4048) nounwind
  %2174 = tail call double @_Z3expd(double %extract4049) nounwind
  %2175 = tail call double @_Z3expd(double %extract4050) nounwind
  %2176 = tail call double @_Z3expd(double %extract4051) nounwind
  %2177 = tail call double @_Z3expd(double %extract4052) nounwind
  %2178 = tail call double @_Z3expd(double %extract4053) nounwind
  %2179 = tail call double @_Z3expd(double %extract4054) nounwind
  %2180 = tail call double @_Z3expd(double %extract4055) nounwind
  %temp.vect4056 = insertelement <16 x double> undef, double %2165, i32 0
  %temp.vect4057 = insertelement <16 x double> %temp.vect4056, double %2166, i32 1
  %temp.vect4058 = insertelement <16 x double> %temp.vect4057, double %2167, i32 2
  %temp.vect4059 = insertelement <16 x double> %temp.vect4058, double %2168, i32 3
  %temp.vect4060 = insertelement <16 x double> %temp.vect4059, double %2169, i32 4
  %temp.vect4061 = insertelement <16 x double> %temp.vect4060, double %2170, i32 5
  %temp.vect4062 = insertelement <16 x double> %temp.vect4061, double %2171, i32 6
  %temp.vect4063 = insertelement <16 x double> %temp.vect4062, double %2172, i32 7
  %temp.vect4064 = insertelement <16 x double> %temp.vect4063, double %2173, i32 8
  %temp.vect4065 = insertelement <16 x double> %temp.vect4064, double %2174, i32 9
  %temp.vect4066 = insertelement <16 x double> %temp.vect4065, double %2175, i32 10
  %temp.vect4067 = insertelement <16 x double> %temp.vect4066, double %2176, i32 11
  %temp.vect4068 = insertelement <16 x double> %temp.vect4067, double %2177, i32 12
  %temp.vect4069 = insertelement <16 x double> %temp.vect4068, double %2178, i32 13
  %temp.vect4070 = insertelement <16 x double> %temp.vect4069, double %2179, i32 14
  %temp.vect4071 = insertelement <16 x double> %temp.vect4070, double %2180, i32 15
  %2181 = fadd <16 x double> %2163, %temp.vect4071
  %extract4072 = extractelement <16 x double> %2181, i32 0
  %extract4073 = extractelement <16 x double> %2181, i32 1
  %extract4074 = extractelement <16 x double> %2181, i32 2
  %extract4075 = extractelement <16 x double> %2181, i32 3
  %extract4076 = extractelement <16 x double> %2181, i32 4
  %extract4077 = extractelement <16 x double> %2181, i32 5
  %extract4078 = extractelement <16 x double> %2181, i32 6
  %extract4079 = extractelement <16 x double> %2181, i32 7
  %extract4080 = extractelement <16 x double> %2181, i32 8
  %extract4081 = extractelement <16 x double> %2181, i32 9
  %extract4082 = extractelement <16 x double> %2181, i32 10
  %extract4083 = extractelement <16 x double> %2181, i32 11
  %extract4084 = extractelement <16 x double> %2181, i32 12
  %extract4085 = extractelement <16 x double> %2181, i32 13
  %extract4086 = extractelement <16 x double> %2181, i32 14
  %extract4087 = extractelement <16 x double> %2181, i32 15
  %2182 = tail call double @_Z4fmaxdd(double %extract4072, double 1.000000e-200) nounwind
  %2183 = tail call double @_Z4fmaxdd(double %extract4073, double 1.000000e-200) nounwind
  %2184 = tail call double @_Z4fmaxdd(double %extract4074, double 1.000000e-200) nounwind
  %2185 = tail call double @_Z4fmaxdd(double %extract4075, double 1.000000e-200) nounwind
  %2186 = tail call double @_Z4fmaxdd(double %extract4076, double 1.000000e-200) nounwind
  %2187 = tail call double @_Z4fmaxdd(double %extract4077, double 1.000000e-200) nounwind
  %2188 = tail call double @_Z4fmaxdd(double %extract4078, double 1.000000e-200) nounwind
  %2189 = tail call double @_Z4fmaxdd(double %extract4079, double 1.000000e-200) nounwind
  %2190 = tail call double @_Z4fmaxdd(double %extract4080, double 1.000000e-200) nounwind
  %2191 = tail call double @_Z4fmaxdd(double %extract4081, double 1.000000e-200) nounwind
  %2192 = tail call double @_Z4fmaxdd(double %extract4082, double 1.000000e-200) nounwind
  %2193 = tail call double @_Z4fmaxdd(double %extract4083, double 1.000000e-200) nounwind
  %2194 = tail call double @_Z4fmaxdd(double %extract4084, double 1.000000e-200) nounwind
  %2195 = tail call double @_Z4fmaxdd(double %extract4085, double 1.000000e-200) nounwind
  %2196 = tail call double @_Z4fmaxdd(double %extract4086, double 1.000000e-200) nounwind
  %2197 = tail call double @_Z4fmaxdd(double %extract4087, double 1.000000e-200) nounwind
  %2198 = tail call double @_Z5log10d(double %2182) nounwind
  %2199 = tail call double @_Z5log10d(double %2183) nounwind
  %2200 = tail call double @_Z5log10d(double %2184) nounwind
  %2201 = tail call double @_Z5log10d(double %2185) nounwind
  %2202 = tail call double @_Z5log10d(double %2186) nounwind
  %2203 = tail call double @_Z5log10d(double %2187) nounwind
  %2204 = tail call double @_Z5log10d(double %2188) nounwind
  %2205 = tail call double @_Z5log10d(double %2189) nounwind
  %2206 = tail call double @_Z5log10d(double %2190) nounwind
  %2207 = tail call double @_Z5log10d(double %2191) nounwind
  %2208 = tail call double @_Z5log10d(double %2192) nounwind
  %2209 = tail call double @_Z5log10d(double %2193) nounwind
  %2210 = tail call double @_Z5log10d(double %2194) nounwind
  %2211 = tail call double @_Z5log10d(double %2195) nounwind
  %2212 = tail call double @_Z5log10d(double %2196) nounwind
  %2213 = tail call double @_Z5log10d(double %2197) nounwind
  %temp.vect4088 = insertelement <16 x double> undef, double %2198, i32 0
  %temp.vect4089 = insertelement <16 x double> %temp.vect4088, double %2199, i32 1
  %temp.vect4090 = insertelement <16 x double> %temp.vect4089, double %2200, i32 2
  %temp.vect4091 = insertelement <16 x double> %temp.vect4090, double %2201, i32 3
  %temp.vect4092 = insertelement <16 x double> %temp.vect4091, double %2202, i32 4
  %temp.vect4093 = insertelement <16 x double> %temp.vect4092, double %2203, i32 5
  %temp.vect4094 = insertelement <16 x double> %temp.vect4093, double %2204, i32 6
  %temp.vect4095 = insertelement <16 x double> %temp.vect4094, double %2205, i32 7
  %temp.vect4096 = insertelement <16 x double> %temp.vect4095, double %2206, i32 8
  %temp.vect4097 = insertelement <16 x double> %temp.vect4096, double %2207, i32 9
  %temp.vect4098 = insertelement <16 x double> %temp.vect4097, double %2208, i32 10
  %temp.vect4099 = insertelement <16 x double> %temp.vect4098, double %2209, i32 11
  %temp.vect4100 = insertelement <16 x double> %temp.vect4099, double %2210, i32 12
  %temp.vect4101 = insertelement <16 x double> %temp.vect4100, double %2211, i32 13
  %temp.vect4102 = insertelement <16 x double> %temp.vect4101, double %2212, i32 14
  %temp.vect4103 = insertelement <16 x double> %temp.vect4102, double %2213, i32 15
  %2214 = fmul <16 x double> %temp.vect4103, <double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00>
  %2215 = fsub <16 x double> <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>, %2214
  %2216 = fmul <16 x double> %temp.vect4103, <double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01>
  %2217 = fadd <16 x double> %2216, <double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01>
  %2218 = fsub <16 x double> %temp.vect4119, %2217
  %2219 = fmul <16 x double> %2218, <double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01>
  %2220 = fsub <16 x double> %2215, %2219
  %2221 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2220
  %2222 = fmul <16 x double> %2218, %2221
  %2223 = fmul <16 x double> %2222, %2222
  %2224 = fadd <16 x double> %2223, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %2225 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2224
  %2226 = fmul <16 x double> %temp.vect4103, %2225
  %extract4120 = extractelement <16 x double> %2226, i32 0
  %extract4121 = extractelement <16 x double> %2226, i32 1
  %extract4122 = extractelement <16 x double> %2226, i32 2
  %extract4123 = extractelement <16 x double> %2226, i32 3
  %extract4124 = extractelement <16 x double> %2226, i32 4
  %extract4125 = extractelement <16 x double> %2226, i32 5
  %extract4126 = extractelement <16 x double> %2226, i32 6
  %extract4127 = extractelement <16 x double> %2226, i32 7
  %extract4128 = extractelement <16 x double> %2226, i32 8
  %extract4129 = extractelement <16 x double> %2226, i32 9
  %extract4130 = extractelement <16 x double> %2226, i32 10
  %extract4131 = extractelement <16 x double> %2226, i32 11
  %extract4132 = extractelement <16 x double> %2226, i32 12
  %extract4133 = extractelement <16 x double> %2226, i32 13
  %extract4134 = extractelement <16 x double> %2226, i32 14
  %extract4135 = extractelement <16 x double> %2226, i32 15
  %2227 = tail call double @_Z5exp10d(double %extract4120) nounwind
  %2228 = tail call double @_Z5exp10d(double %extract4121) nounwind
  %2229 = tail call double @_Z5exp10d(double %extract4122) nounwind
  %2230 = tail call double @_Z5exp10d(double %extract4123) nounwind
  %2231 = tail call double @_Z5exp10d(double %extract4124) nounwind
  %2232 = tail call double @_Z5exp10d(double %extract4125) nounwind
  %2233 = tail call double @_Z5exp10d(double %extract4126) nounwind
  %2234 = tail call double @_Z5exp10d(double %extract4127) nounwind
  %2235 = tail call double @_Z5exp10d(double %extract4128) nounwind
  %2236 = tail call double @_Z5exp10d(double %extract4129) nounwind
  %2237 = tail call double @_Z5exp10d(double %extract4130) nounwind
  %2238 = tail call double @_Z5exp10d(double %extract4131) nounwind
  %2239 = tail call double @_Z5exp10d(double %extract4132) nounwind
  %2240 = tail call double @_Z5exp10d(double %extract4133) nounwind
  %2241 = tail call double @_Z5exp10d(double %extract4134) nounwind
  %2242 = tail call double @_Z5exp10d(double %extract4135) nounwind
  %temp.vect4136 = insertelement <16 x double> undef, double %2227, i32 0
  %temp.vect4137 = insertelement <16 x double> %temp.vect4136, double %2228, i32 1
  %temp.vect4138 = insertelement <16 x double> %temp.vect4137, double %2229, i32 2
  %temp.vect4139 = insertelement <16 x double> %temp.vect4138, double %2230, i32 3
  %temp.vect4140 = insertelement <16 x double> %temp.vect4139, double %2231, i32 4
  %temp.vect4141 = insertelement <16 x double> %temp.vect4140, double %2232, i32 5
  %temp.vect4142 = insertelement <16 x double> %temp.vect4141, double %2233, i32 6
  %temp.vect4143 = insertelement <16 x double> %temp.vect4142, double %2234, i32 7
  %temp.vect4144 = insertelement <16 x double> %temp.vect4143, double %2235, i32 8
  %temp.vect4145 = insertelement <16 x double> %temp.vect4144, double %2236, i32 9
  %temp.vect4146 = insertelement <16 x double> %temp.vect4145, double %2237, i32 10
  %temp.vect4147 = insertelement <16 x double> %temp.vect4146, double %2238, i32 11
  %temp.vect4148 = insertelement <16 x double> %temp.vect4147, double %2239, i32 12
  %temp.vect4149 = insertelement <16 x double> %temp.vect4148, double %2240, i32 13
  %temp.vect4150 = insertelement <16 x double> %temp.vect4149, double %2241, i32 14
  %temp.vect4151 = insertelement <16 x double> %temp.vect4150, double %2242, i32 15
  %2243 = fmul <16 x double> %temp.vect4151, %2094
  %2244 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2245 = load i64* %2244, align 8
  %2246 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2247 = load i64* %2246, align 8
  %2248 = add i64 %2245, %2247
  %extract4154 = add i64 %2248, 18690048
  %2249 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract4154
  %ptrTypeCast4170 = bitcast double addrspace(1)* %2249 to <16 x double> addrspace(1)*
  %2250 = load <16 x double> addrspace(1)* %ptrTypeCast4170, align 8
  %2251 = fmul <16 x double> %2250, %2243
  %2252 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2253 = load i64* %2252, align 8
  %2254 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2255 = load i64* %2254, align 8
  %2256 = add i64 %2253, %2255
  %extract4173 = add i64 %2256, 18690048
  %2257 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract4173
  %ptrTypeCast4189 = bitcast double addrspace(1)* %2257 to <16 x double> addrspace(1)*
  store <16 x double> %2251, <16 x double> addrspace(1)* %ptrTypeCast4189, align 8
  %2258 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2259 = load i64* %2258, align 8
  %2260 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2261 = load i64* %2260, align 8
  %2262 = add i64 %2259, %2261
  %extract4192 = add i64 %2262, 18690048
  %2263 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract4192
  %ptrTypeCast4208 = bitcast double addrspace(1)* %2263 to <16 x double> addrspace(1)*
  %2264 = load <16 x double> addrspace(1)* %ptrTypeCast4208, align 8
  %2265 = fmul <16 x double> %2264, %2243
  %2266 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2267 = load i64* %2266, align 8
  %2268 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2269 = load i64* %2268, align 8
  %2270 = add i64 %2267, %2269
  %extract4211 = add i64 %2270, 18690048
  %2271 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract4211
  %ptrTypeCast4227 = bitcast double addrspace(1)* %2271 to <16 x double> addrspace(1)*
  store <16 x double> %2265, <16 x double> addrspace(1)* %ptrTypeCast4227, align 8
  %2272 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2273 = load i64* %2272, align 8
  %2274 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2275 = load i64* %2274, align 8
  %2276 = add i64 %2273, %2275
  %extract4230 = add i64 %2276, 2101248
  %2277 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %extract4230
  %ptrTypeCast4246 = bitcast double addrspace(1)* %2277 to <16 x double> addrspace(1)*
  %2278 = load <16 x double> addrspace(1)* %ptrTypeCast4246, align 8
  %2279 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2280 = load i64* %2279, align 8
  %2281 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2282 = load i64* %2281, align 8
  %2283 = add i64 %2280, %2282
  %extract4249 = add i64 %2283, 20348928
  %2284 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract4249
  %ptrTypeCast4265 = bitcast double addrspace(1)* %2284 to <16 x double> addrspace(1)*
  %2285 = load <16 x double> addrspace(1)* %ptrTypeCast4265, align 8
  %2286 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2285
  %2287 = fmul <16 x double> %213, %2286
  %2288 = fmul <16 x double> %2278, %2287
  %extract4266 = extractelement <16 x double> %2288, i32 0
  %extract4267 = extractelement <16 x double> %2288, i32 1
  %extract4268 = extractelement <16 x double> %2288, i32 2
  %extract4269 = extractelement <16 x double> %2288, i32 3
  %extract4270 = extractelement <16 x double> %2288, i32 4
  %extract4271 = extractelement <16 x double> %2288, i32 5
  %extract4272 = extractelement <16 x double> %2288, i32 6
  %extract4273 = extractelement <16 x double> %2288, i32 7
  %extract4274 = extractelement <16 x double> %2288, i32 8
  %extract4275 = extractelement <16 x double> %2288, i32 9
  %extract4276 = extractelement <16 x double> %2288, i32 10
  %extract4277 = extractelement <16 x double> %2288, i32 11
  %extract4278 = extractelement <16 x double> %2288, i32 12
  %extract4279 = extractelement <16 x double> %2288, i32 13
  %extract4280 = extractelement <16 x double> %2288, i32 14
  %extract4281 = extractelement <16 x double> %2288, i32 15
  %2289 = fadd <16 x double> %2288, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %2290 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2289
  %2291 = fmul <16 x double> %2288, %2290
  %2292 = tail call double @_Z4fmaxdd(double %extract4266, double 1.000000e-200) nounwind
  %2293 = tail call double @_Z4fmaxdd(double %extract4267, double 1.000000e-200) nounwind
  %2294 = tail call double @_Z4fmaxdd(double %extract4268, double 1.000000e-200) nounwind
  %2295 = tail call double @_Z4fmaxdd(double %extract4269, double 1.000000e-200) nounwind
  %2296 = tail call double @_Z4fmaxdd(double %extract4270, double 1.000000e-200) nounwind
  %2297 = tail call double @_Z4fmaxdd(double %extract4271, double 1.000000e-200) nounwind
  %2298 = tail call double @_Z4fmaxdd(double %extract4272, double 1.000000e-200) nounwind
  %2299 = tail call double @_Z4fmaxdd(double %extract4273, double 1.000000e-200) nounwind
  %2300 = tail call double @_Z4fmaxdd(double %extract4274, double 1.000000e-200) nounwind
  %2301 = tail call double @_Z4fmaxdd(double %extract4275, double 1.000000e-200) nounwind
  %2302 = tail call double @_Z4fmaxdd(double %extract4276, double 1.000000e-200) nounwind
  %2303 = tail call double @_Z4fmaxdd(double %extract4277, double 1.000000e-200) nounwind
  %2304 = tail call double @_Z4fmaxdd(double %extract4278, double 1.000000e-200) nounwind
  %2305 = tail call double @_Z4fmaxdd(double %extract4279, double 1.000000e-200) nounwind
  %2306 = tail call double @_Z4fmaxdd(double %extract4280, double 1.000000e-200) nounwind
  %2307 = tail call double @_Z4fmaxdd(double %extract4281, double 1.000000e-200) nounwind
  %2308 = tail call double @_Z5log10d(double %2292) nounwind
  %2309 = tail call double @_Z5log10d(double %2293) nounwind
  %2310 = tail call double @_Z5log10d(double %2294) nounwind
  %2311 = tail call double @_Z5log10d(double %2295) nounwind
  %2312 = tail call double @_Z5log10d(double %2296) nounwind
  %2313 = tail call double @_Z5log10d(double %2297) nounwind
  %2314 = tail call double @_Z5log10d(double %2298) nounwind
  %2315 = tail call double @_Z5log10d(double %2299) nounwind
  %2316 = tail call double @_Z5log10d(double %2300) nounwind
  %2317 = tail call double @_Z5log10d(double %2301) nounwind
  %2318 = tail call double @_Z5log10d(double %2302) nounwind
  %2319 = tail call double @_Z5log10d(double %2303) nounwind
  %2320 = tail call double @_Z5log10d(double %2304) nounwind
  %2321 = tail call double @_Z5log10d(double %2305) nounwind
  %2322 = tail call double @_Z5log10d(double %2306) nounwind
  %2323 = tail call double @_Z5log10d(double %2307) nounwind
  %temp.vect4394 = insertelement <16 x double> undef, double %2308, i32 0
  %temp.vect4395 = insertelement <16 x double> %temp.vect4394, double %2309, i32 1
  %temp.vect4396 = insertelement <16 x double> %temp.vect4395, double %2310, i32 2
  %temp.vect4397 = insertelement <16 x double> %temp.vect4396, double %2311, i32 3
  %temp.vect4398 = insertelement <16 x double> %temp.vect4397, double %2312, i32 4
  %temp.vect4399 = insertelement <16 x double> %temp.vect4398, double %2313, i32 5
  %temp.vect4400 = insertelement <16 x double> %temp.vect4399, double %2314, i32 6
  %temp.vect4401 = insertelement <16 x double> %temp.vect4400, double %2315, i32 7
  %temp.vect4402 = insertelement <16 x double> %temp.vect4401, double %2316, i32 8
  %temp.vect4403 = insertelement <16 x double> %temp.vect4402, double %2317, i32 9
  %temp.vect4404 = insertelement <16 x double> %temp.vect4403, double %2318, i32 10
  %temp.vect4405 = insertelement <16 x double> %temp.vect4404, double %2319, i32 11
  %temp.vect4406 = insertelement <16 x double> %temp.vect4405, double %2320, i32 12
  %temp.vect4407 = insertelement <16 x double> %temp.vect4406, double %2321, i32 13
  %temp.vect4408 = insertelement <16 x double> %temp.vect4407, double %2322, i32 14
  %temp.vect4409 = insertelement <16 x double> %temp.vect4408, double %2323, i32 15
  %2324 = fmul <16 x double> %7, <double 0xBF4DE1A6D2922395, double 0xBF4DE1A6D2922395, double 0xBF4DE1A6D2922395, double 0xBF4DE1A6D2922395, double 0xBF4DE1A6D2922395, double 0xBF4DE1A6D2922395, double 0xBF4DE1A6D2922395, double 0xBF4DE1A6D2922395, double 0xBF4DE1A6D2922395, double 0xBF4DE1A6D2922395, double 0xBF4DE1A6D2922395, double 0xBF4DE1A6D2922395, double 0xBF4DE1A6D2922395, double 0xBF4DE1A6D2922395, double 0xBF4DE1A6D2922395, double 0xBF4DE1A6D2922395>
  %extract4282 = extractelement <16 x double> %2324, i32 0
  %extract4283 = extractelement <16 x double> %2324, i32 1
  %extract4284 = extractelement <16 x double> %2324, i32 2
  %extract4285 = extractelement <16 x double> %2324, i32 3
  %extract4286 = extractelement <16 x double> %2324, i32 4
  %extract4287 = extractelement <16 x double> %2324, i32 5
  %extract4288 = extractelement <16 x double> %2324, i32 6
  %extract4289 = extractelement <16 x double> %2324, i32 7
  %extract4290 = extractelement <16 x double> %2324, i32 8
  %extract4291 = extractelement <16 x double> %2324, i32 9
  %extract4292 = extractelement <16 x double> %2324, i32 10
  %extract4293 = extractelement <16 x double> %2324, i32 11
  %extract4294 = extractelement <16 x double> %2324, i32 12
  %extract4295 = extractelement <16 x double> %2324, i32 13
  %extract4296 = extractelement <16 x double> %2324, i32 14
  %extract4297 = extractelement <16 x double> %2324, i32 15
  %2325 = tail call double @_Z3expd(double %extract4282) nounwind
  %2326 = tail call double @_Z3expd(double %extract4283) nounwind
  %2327 = tail call double @_Z3expd(double %extract4284) nounwind
  %2328 = tail call double @_Z3expd(double %extract4285) nounwind
  %2329 = tail call double @_Z3expd(double %extract4286) nounwind
  %2330 = tail call double @_Z3expd(double %extract4287) nounwind
  %2331 = tail call double @_Z3expd(double %extract4288) nounwind
  %2332 = tail call double @_Z3expd(double %extract4289) nounwind
  %2333 = tail call double @_Z3expd(double %extract4290) nounwind
  %2334 = tail call double @_Z3expd(double %extract4291) nounwind
  %2335 = tail call double @_Z3expd(double %extract4292) nounwind
  %2336 = tail call double @_Z3expd(double %extract4293) nounwind
  %2337 = tail call double @_Z3expd(double %extract4294) nounwind
  %2338 = tail call double @_Z3expd(double %extract4295) nounwind
  %2339 = tail call double @_Z3expd(double %extract4296) nounwind
  %2340 = tail call double @_Z3expd(double %extract4297) nounwind
  %temp.vect4298 = insertelement <16 x double> undef, double %2325, i32 0
  %temp.vect4299 = insertelement <16 x double> %temp.vect4298, double %2326, i32 1
  %temp.vect4300 = insertelement <16 x double> %temp.vect4299, double %2327, i32 2
  %temp.vect4301 = insertelement <16 x double> %temp.vect4300, double %2328, i32 3
  %temp.vect4302 = insertelement <16 x double> %temp.vect4301, double %2329, i32 4
  %temp.vect4303 = insertelement <16 x double> %temp.vect4302, double %2330, i32 5
  %temp.vect4304 = insertelement <16 x double> %temp.vect4303, double %2331, i32 6
  %temp.vect4305 = insertelement <16 x double> %temp.vect4304, double %2332, i32 7
  %temp.vect4306 = insertelement <16 x double> %temp.vect4305, double %2333, i32 8
  %temp.vect4307 = insertelement <16 x double> %temp.vect4306, double %2334, i32 9
  %temp.vect4308 = insertelement <16 x double> %temp.vect4307, double %2335, i32 10
  %temp.vect4309 = insertelement <16 x double> %temp.vect4308, double %2336, i32 11
  %temp.vect4310 = insertelement <16 x double> %temp.vect4309, double %2337, i32 12
  %temp.vect4311 = insertelement <16 x double> %temp.vect4310, double %2338, i32 13
  %temp.vect4312 = insertelement <16 x double> %temp.vect4311, double %2339, i32 14
  %temp.vect4313 = insertelement <16 x double> %temp.vect4312, double %2340, i32 15
  %2341 = fmul <16 x double> %temp.vect4313, <double 9.800000e-01, double 9.800000e-01, double 9.800000e-01, double 9.800000e-01, double 9.800000e-01, double 9.800000e-01, double 9.800000e-01, double 9.800000e-01, double 9.800000e-01, double 9.800000e-01, double 9.800000e-01, double 9.800000e-01, double 9.800000e-01, double 9.800000e-01, double 9.800000e-01, double 9.800000e-01>
  %2342 = tail call double @_Z3expd(double %extract4282) nounwind
  %2343 = tail call double @_Z3expd(double %extract4283) nounwind
  %2344 = tail call double @_Z3expd(double %extract4284) nounwind
  %2345 = tail call double @_Z3expd(double %extract4285) nounwind
  %2346 = tail call double @_Z3expd(double %extract4286) nounwind
  %2347 = tail call double @_Z3expd(double %extract4287) nounwind
  %2348 = tail call double @_Z3expd(double %extract4288) nounwind
  %2349 = tail call double @_Z3expd(double %extract4289) nounwind
  %2350 = tail call double @_Z3expd(double %extract4290) nounwind
  %2351 = tail call double @_Z3expd(double %extract4291) nounwind
  %2352 = tail call double @_Z3expd(double %extract4292) nounwind
  %2353 = tail call double @_Z3expd(double %extract4293) nounwind
  %2354 = tail call double @_Z3expd(double %extract4294) nounwind
  %2355 = tail call double @_Z3expd(double %extract4295) nounwind
  %2356 = tail call double @_Z3expd(double %extract4296) nounwind
  %2357 = tail call double @_Z3expd(double %extract4297) nounwind
  %temp.vect4314 = insertelement <16 x double> undef, double %2342, i32 0
  %temp.vect4315 = insertelement <16 x double> %temp.vect4314, double %2343, i32 1
  %temp.vect4316 = insertelement <16 x double> %temp.vect4315, double %2344, i32 2
  %temp.vect4317 = insertelement <16 x double> %temp.vect4316, double %2345, i32 3
  %temp.vect4318 = insertelement <16 x double> %temp.vect4317, double %2346, i32 4
  %temp.vect4319 = insertelement <16 x double> %temp.vect4318, double %2347, i32 5
  %temp.vect4320 = insertelement <16 x double> %temp.vect4319, double %2348, i32 6
  %temp.vect4321 = insertelement <16 x double> %temp.vect4320, double %2349, i32 7
  %temp.vect4322 = insertelement <16 x double> %temp.vect4321, double %2350, i32 8
  %temp.vect4323 = insertelement <16 x double> %temp.vect4322, double %2351, i32 9
  %temp.vect4324 = insertelement <16 x double> %temp.vect4323, double %2352, i32 10
  %temp.vect4325 = insertelement <16 x double> %temp.vect4324, double %2353, i32 11
  %temp.vect4326 = insertelement <16 x double> %temp.vect4325, double %2354, i32 12
  %temp.vect4327 = insertelement <16 x double> %temp.vect4326, double %2355, i32 13
  %temp.vect4328 = insertelement <16 x double> %temp.vect4327, double %2356, i32 14
  %temp.vect4329 = insertelement <16 x double> %temp.vect4328, double %2357, i32 15
  %2358 = fmul <16 x double> %temp.vect4329, <double 2.000000e-02, double 2.000000e-02, double 2.000000e-02, double 2.000000e-02, double 2.000000e-02, double 2.000000e-02, double 2.000000e-02, double 2.000000e-02, double 2.000000e-02, double 2.000000e-02, double 2.000000e-02, double 2.000000e-02, double 2.000000e-02, double 2.000000e-02, double 2.000000e-02, double 2.000000e-02>
  %2359 = fadd <16 x double> %2341, %2358
  %2360 = fmul <16 x double> %981, <double -6.859500e+03, double -6.859500e+03, double -6.859500e+03, double -6.859500e+03, double -6.859500e+03, double -6.859500e+03, double -6.859500e+03, double -6.859500e+03, double -6.859500e+03, double -6.859500e+03, double -6.859500e+03, double -6.859500e+03, double -6.859500e+03, double -6.859500e+03, double -6.859500e+03, double -6.859500e+03>
  %extract4330 = extractelement <16 x double> %2360, i32 0
  %extract4331 = extractelement <16 x double> %2360, i32 1
  %extract4332 = extractelement <16 x double> %2360, i32 2
  %extract4333 = extractelement <16 x double> %2360, i32 3
  %extract4334 = extractelement <16 x double> %2360, i32 4
  %extract4335 = extractelement <16 x double> %2360, i32 5
  %extract4336 = extractelement <16 x double> %2360, i32 6
  %extract4337 = extractelement <16 x double> %2360, i32 7
  %extract4338 = extractelement <16 x double> %2360, i32 8
  %extract4339 = extractelement <16 x double> %2360, i32 9
  %extract4340 = extractelement <16 x double> %2360, i32 10
  %extract4341 = extractelement <16 x double> %2360, i32 11
  %extract4342 = extractelement <16 x double> %2360, i32 12
  %extract4343 = extractelement <16 x double> %2360, i32 13
  %extract4344 = extractelement <16 x double> %2360, i32 14
  %extract4345 = extractelement <16 x double> %2360, i32 15
  %2361 = tail call double @_Z3expd(double %extract4330) nounwind
  %2362 = tail call double @_Z3expd(double %extract4331) nounwind
  %2363 = tail call double @_Z3expd(double %extract4332) nounwind
  %2364 = tail call double @_Z3expd(double %extract4333) nounwind
  %2365 = tail call double @_Z3expd(double %extract4334) nounwind
  %2366 = tail call double @_Z3expd(double %extract4335) nounwind
  %2367 = tail call double @_Z3expd(double %extract4336) nounwind
  %2368 = tail call double @_Z3expd(double %extract4337) nounwind
  %2369 = tail call double @_Z3expd(double %extract4338) nounwind
  %2370 = tail call double @_Z3expd(double %extract4339) nounwind
  %2371 = tail call double @_Z3expd(double %extract4340) nounwind
  %2372 = tail call double @_Z3expd(double %extract4341) nounwind
  %2373 = tail call double @_Z3expd(double %extract4342) nounwind
  %2374 = tail call double @_Z3expd(double %extract4343) nounwind
  %2375 = tail call double @_Z3expd(double %extract4344) nounwind
  %2376 = tail call double @_Z3expd(double %extract4345) nounwind
  %temp.vect4346 = insertelement <16 x double> undef, double %2361, i32 0
  %temp.vect4347 = insertelement <16 x double> %temp.vect4346, double %2362, i32 1
  %temp.vect4348 = insertelement <16 x double> %temp.vect4347, double %2363, i32 2
  %temp.vect4349 = insertelement <16 x double> %temp.vect4348, double %2364, i32 3
  %temp.vect4350 = insertelement <16 x double> %temp.vect4349, double %2365, i32 4
  %temp.vect4351 = insertelement <16 x double> %temp.vect4350, double %2366, i32 5
  %temp.vect4352 = insertelement <16 x double> %temp.vect4351, double %2367, i32 6
  %temp.vect4353 = insertelement <16 x double> %temp.vect4352, double %2368, i32 7
  %temp.vect4354 = insertelement <16 x double> %temp.vect4353, double %2369, i32 8
  %temp.vect4355 = insertelement <16 x double> %temp.vect4354, double %2370, i32 9
  %temp.vect4356 = insertelement <16 x double> %temp.vect4355, double %2371, i32 10
  %temp.vect4357 = insertelement <16 x double> %temp.vect4356, double %2372, i32 11
  %temp.vect4358 = insertelement <16 x double> %temp.vect4357, double %2373, i32 12
  %temp.vect4359 = insertelement <16 x double> %temp.vect4358, double %2374, i32 13
  %temp.vect4360 = insertelement <16 x double> %temp.vect4359, double %2375, i32 14
  %temp.vect4361 = insertelement <16 x double> %temp.vect4360, double %2376, i32 15
  %2377 = fadd <16 x double> %2359, %temp.vect4361
  %extract4362 = extractelement <16 x double> %2377, i32 0
  %extract4363 = extractelement <16 x double> %2377, i32 1
  %extract4364 = extractelement <16 x double> %2377, i32 2
  %extract4365 = extractelement <16 x double> %2377, i32 3
  %extract4366 = extractelement <16 x double> %2377, i32 4
  %extract4367 = extractelement <16 x double> %2377, i32 5
  %extract4368 = extractelement <16 x double> %2377, i32 6
  %extract4369 = extractelement <16 x double> %2377, i32 7
  %extract4370 = extractelement <16 x double> %2377, i32 8
  %extract4371 = extractelement <16 x double> %2377, i32 9
  %extract4372 = extractelement <16 x double> %2377, i32 10
  %extract4373 = extractelement <16 x double> %2377, i32 11
  %extract4374 = extractelement <16 x double> %2377, i32 12
  %extract4375 = extractelement <16 x double> %2377, i32 13
  %extract4376 = extractelement <16 x double> %2377, i32 14
  %extract4377 = extractelement <16 x double> %2377, i32 15
  %2378 = tail call double @_Z4fmaxdd(double %extract4362, double 1.000000e-200) nounwind
  %2379 = tail call double @_Z4fmaxdd(double %extract4363, double 1.000000e-200) nounwind
  %2380 = tail call double @_Z4fmaxdd(double %extract4364, double 1.000000e-200) nounwind
  %2381 = tail call double @_Z4fmaxdd(double %extract4365, double 1.000000e-200) nounwind
  %2382 = tail call double @_Z4fmaxdd(double %extract4366, double 1.000000e-200) nounwind
  %2383 = tail call double @_Z4fmaxdd(double %extract4367, double 1.000000e-200) nounwind
  %2384 = tail call double @_Z4fmaxdd(double %extract4368, double 1.000000e-200) nounwind
  %2385 = tail call double @_Z4fmaxdd(double %extract4369, double 1.000000e-200) nounwind
  %2386 = tail call double @_Z4fmaxdd(double %extract4370, double 1.000000e-200) nounwind
  %2387 = tail call double @_Z4fmaxdd(double %extract4371, double 1.000000e-200) nounwind
  %2388 = tail call double @_Z4fmaxdd(double %extract4372, double 1.000000e-200) nounwind
  %2389 = tail call double @_Z4fmaxdd(double %extract4373, double 1.000000e-200) nounwind
  %2390 = tail call double @_Z4fmaxdd(double %extract4374, double 1.000000e-200) nounwind
  %2391 = tail call double @_Z4fmaxdd(double %extract4375, double 1.000000e-200) nounwind
  %2392 = tail call double @_Z4fmaxdd(double %extract4376, double 1.000000e-200) nounwind
  %2393 = tail call double @_Z4fmaxdd(double %extract4377, double 1.000000e-200) nounwind
  %2394 = tail call double @_Z5log10d(double %2378) nounwind
  %2395 = tail call double @_Z5log10d(double %2379) nounwind
  %2396 = tail call double @_Z5log10d(double %2380) nounwind
  %2397 = tail call double @_Z5log10d(double %2381) nounwind
  %2398 = tail call double @_Z5log10d(double %2382) nounwind
  %2399 = tail call double @_Z5log10d(double %2383) nounwind
  %2400 = tail call double @_Z5log10d(double %2384) nounwind
  %2401 = tail call double @_Z5log10d(double %2385) nounwind
  %2402 = tail call double @_Z5log10d(double %2386) nounwind
  %2403 = tail call double @_Z5log10d(double %2387) nounwind
  %2404 = tail call double @_Z5log10d(double %2388) nounwind
  %2405 = tail call double @_Z5log10d(double %2389) nounwind
  %2406 = tail call double @_Z5log10d(double %2390) nounwind
  %2407 = tail call double @_Z5log10d(double %2391) nounwind
  %2408 = tail call double @_Z5log10d(double %2392) nounwind
  %2409 = tail call double @_Z5log10d(double %2393) nounwind
  %temp.vect4378 = insertelement <16 x double> undef, double %2394, i32 0
  %temp.vect4379 = insertelement <16 x double> %temp.vect4378, double %2395, i32 1
  %temp.vect4380 = insertelement <16 x double> %temp.vect4379, double %2396, i32 2
  %temp.vect4381 = insertelement <16 x double> %temp.vect4380, double %2397, i32 3
  %temp.vect4382 = insertelement <16 x double> %temp.vect4381, double %2398, i32 4
  %temp.vect4383 = insertelement <16 x double> %temp.vect4382, double %2399, i32 5
  %temp.vect4384 = insertelement <16 x double> %temp.vect4383, double %2400, i32 6
  %temp.vect4385 = insertelement <16 x double> %temp.vect4384, double %2401, i32 7
  %temp.vect4386 = insertelement <16 x double> %temp.vect4385, double %2402, i32 8
  %temp.vect4387 = insertelement <16 x double> %temp.vect4386, double %2403, i32 9
  %temp.vect4388 = insertelement <16 x double> %temp.vect4387, double %2404, i32 10
  %temp.vect4389 = insertelement <16 x double> %temp.vect4388, double %2405, i32 11
  %temp.vect4390 = insertelement <16 x double> %temp.vect4389, double %2406, i32 12
  %temp.vect4391 = insertelement <16 x double> %temp.vect4390, double %2407, i32 13
  %temp.vect4392 = insertelement <16 x double> %temp.vect4391, double %2408, i32 14
  %temp.vect4393 = insertelement <16 x double> %temp.vect4392, double %2409, i32 15
  %2410 = fmul <16 x double> %temp.vect4393, <double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00>
  %2411 = fsub <16 x double> <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>, %2410
  %2412 = fmul <16 x double> %temp.vect4393, <double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01>
  %2413 = fadd <16 x double> %2412, <double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01>
  %2414 = fsub <16 x double> %temp.vect4409, %2413
  %2415 = fmul <16 x double> %2414, <double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01>
  %2416 = fsub <16 x double> %2411, %2415
  %2417 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2416
  %2418 = fmul <16 x double> %2414, %2417
  %2419 = fmul <16 x double> %2418, %2418
  %2420 = fadd <16 x double> %2419, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %2421 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2420
  %2422 = fmul <16 x double> %temp.vect4393, %2421
  %extract4410 = extractelement <16 x double> %2422, i32 0
  %extract4411 = extractelement <16 x double> %2422, i32 1
  %extract4412 = extractelement <16 x double> %2422, i32 2
  %extract4413 = extractelement <16 x double> %2422, i32 3
  %extract4414 = extractelement <16 x double> %2422, i32 4
  %extract4415 = extractelement <16 x double> %2422, i32 5
  %extract4416 = extractelement <16 x double> %2422, i32 6
  %extract4417 = extractelement <16 x double> %2422, i32 7
  %extract4418 = extractelement <16 x double> %2422, i32 8
  %extract4419 = extractelement <16 x double> %2422, i32 9
  %extract4420 = extractelement <16 x double> %2422, i32 10
  %extract4421 = extractelement <16 x double> %2422, i32 11
  %extract4422 = extractelement <16 x double> %2422, i32 12
  %extract4423 = extractelement <16 x double> %2422, i32 13
  %extract4424 = extractelement <16 x double> %2422, i32 14
  %extract4425 = extractelement <16 x double> %2422, i32 15
  %2423 = tail call double @_Z5exp10d(double %extract4410) nounwind
  %2424 = tail call double @_Z5exp10d(double %extract4411) nounwind
  %2425 = tail call double @_Z5exp10d(double %extract4412) nounwind
  %2426 = tail call double @_Z5exp10d(double %extract4413) nounwind
  %2427 = tail call double @_Z5exp10d(double %extract4414) nounwind
  %2428 = tail call double @_Z5exp10d(double %extract4415) nounwind
  %2429 = tail call double @_Z5exp10d(double %extract4416) nounwind
  %2430 = tail call double @_Z5exp10d(double %extract4417) nounwind
  %2431 = tail call double @_Z5exp10d(double %extract4418) nounwind
  %2432 = tail call double @_Z5exp10d(double %extract4419) nounwind
  %2433 = tail call double @_Z5exp10d(double %extract4420) nounwind
  %2434 = tail call double @_Z5exp10d(double %extract4421) nounwind
  %2435 = tail call double @_Z5exp10d(double %extract4422) nounwind
  %2436 = tail call double @_Z5exp10d(double %extract4423) nounwind
  %2437 = tail call double @_Z5exp10d(double %extract4424) nounwind
  %2438 = tail call double @_Z5exp10d(double %extract4425) nounwind
  %temp.vect4426 = insertelement <16 x double> undef, double %2423, i32 0
  %temp.vect4427 = insertelement <16 x double> %temp.vect4426, double %2424, i32 1
  %temp.vect4428 = insertelement <16 x double> %temp.vect4427, double %2425, i32 2
  %temp.vect4429 = insertelement <16 x double> %temp.vect4428, double %2426, i32 3
  %temp.vect4430 = insertelement <16 x double> %temp.vect4429, double %2427, i32 4
  %temp.vect4431 = insertelement <16 x double> %temp.vect4430, double %2428, i32 5
  %temp.vect4432 = insertelement <16 x double> %temp.vect4431, double %2429, i32 6
  %temp.vect4433 = insertelement <16 x double> %temp.vect4432, double %2430, i32 7
  %temp.vect4434 = insertelement <16 x double> %temp.vect4433, double %2431, i32 8
  %temp.vect4435 = insertelement <16 x double> %temp.vect4434, double %2432, i32 9
  %temp.vect4436 = insertelement <16 x double> %temp.vect4435, double %2433, i32 10
  %temp.vect4437 = insertelement <16 x double> %temp.vect4436, double %2434, i32 11
  %temp.vect4438 = insertelement <16 x double> %temp.vect4437, double %2435, i32 12
  %temp.vect4439 = insertelement <16 x double> %temp.vect4438, double %2436, i32 13
  %temp.vect4440 = insertelement <16 x double> %temp.vect4439, double %2437, i32 14
  %temp.vect4441 = insertelement <16 x double> %temp.vect4440, double %2438, i32 15
  %2439 = fmul <16 x double> %temp.vect4441, %2291
  %2440 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2441 = load i64* %2440, align 8
  %2442 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2443 = load i64* %2442, align 8
  %2444 = add i64 %2441, %2443
  %extract4444 = add i64 %2444, 20348928
  %2445 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract4444
  %ptrTypeCast4460 = bitcast double addrspace(1)* %2445 to <16 x double> addrspace(1)*
  %2446 = load <16 x double> addrspace(1)* %ptrTypeCast4460, align 8
  %2447 = fmul <16 x double> %2446, %2439
  %2448 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2449 = load i64* %2448, align 8
  %2450 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2451 = load i64* %2450, align 8
  %2452 = add i64 %2449, %2451
  %extract4463 = add i64 %2452, 20348928
  %2453 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract4463
  %ptrTypeCast4479 = bitcast double addrspace(1)* %2453 to <16 x double> addrspace(1)*
  store <16 x double> %2447, <16 x double> addrspace(1)* %ptrTypeCast4479, align 8
  %2454 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2455 = load i64* %2454, align 8
  %2456 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2457 = load i64* %2456, align 8
  %2458 = add i64 %2455, %2457
  %extract4482 = add i64 %2458, 20348928
  %2459 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract4482
  %ptrTypeCast4498 = bitcast double addrspace(1)* %2459 to <16 x double> addrspace(1)*
  %2460 = load <16 x double> addrspace(1)* %ptrTypeCast4498, align 8
  %2461 = fmul <16 x double> %2460, %2439
  %2462 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2463 = load i64* %2462, align 8
  %2464 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2465 = load i64* %2464, align 8
  %2466 = add i64 %2463, %2465
  %extract4501 = add i64 %2466, 20348928
  %2467 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract4501
  %ptrTypeCast4517 = bitcast double addrspace(1)* %2467 to <16 x double> addrspace(1)*
  store <16 x double> %2461, <16 x double> addrspace(1)* %ptrTypeCast4517, align 8
  %2468 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2469 = load i64* %2468, align 8
  %2470 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2471 = load i64* %2470, align 8
  %2472 = add i64 %2469, %2471
  %extract4520 = add i64 %2472, 2211840
  %2473 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %extract4520
  %ptrTypeCast4536 = bitcast double addrspace(1)* %2473 to <16 x double> addrspace(1)*
  %2474 = load <16 x double> addrspace(1)* %ptrTypeCast4536, align 8
  %2475 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2476 = load i64* %2475, align 8
  %2477 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2478 = load i64* %2477, align 8
  %2479 = add i64 %2476, %2478
  %extract4539 = add i64 %2479, 20901888
  %2480 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract4539
  %ptrTypeCast4555 = bitcast double addrspace(1)* %2480 to <16 x double> addrspace(1)*
  %2481 = load <16 x double> addrspace(1)* %ptrTypeCast4555, align 8
  %2482 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2481
  %2483 = fmul <16 x double> %483, %2482
  %2484 = fmul <16 x double> %2474, %2483
  %extract4556 = extractelement <16 x double> %2484, i32 0
  %extract4557 = extractelement <16 x double> %2484, i32 1
  %extract4558 = extractelement <16 x double> %2484, i32 2
  %extract4559 = extractelement <16 x double> %2484, i32 3
  %extract4560 = extractelement <16 x double> %2484, i32 4
  %extract4561 = extractelement <16 x double> %2484, i32 5
  %extract4562 = extractelement <16 x double> %2484, i32 6
  %extract4563 = extractelement <16 x double> %2484, i32 7
  %extract4564 = extractelement <16 x double> %2484, i32 8
  %extract4565 = extractelement <16 x double> %2484, i32 9
  %extract4566 = extractelement <16 x double> %2484, i32 10
  %extract4567 = extractelement <16 x double> %2484, i32 11
  %extract4568 = extractelement <16 x double> %2484, i32 12
  %extract4569 = extractelement <16 x double> %2484, i32 13
  %extract4570 = extractelement <16 x double> %2484, i32 14
  %extract4571 = extractelement <16 x double> %2484, i32 15
  %2485 = fadd <16 x double> %2484, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %2486 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2485
  %2487 = fmul <16 x double> %2484, %2486
  %2488 = tail call double @_Z4fmaxdd(double %extract4556, double 1.000000e-200) nounwind
  %2489 = tail call double @_Z4fmaxdd(double %extract4557, double 1.000000e-200) nounwind
  %2490 = tail call double @_Z4fmaxdd(double %extract4558, double 1.000000e-200) nounwind
  %2491 = tail call double @_Z4fmaxdd(double %extract4559, double 1.000000e-200) nounwind
  %2492 = tail call double @_Z4fmaxdd(double %extract4560, double 1.000000e-200) nounwind
  %2493 = tail call double @_Z4fmaxdd(double %extract4561, double 1.000000e-200) nounwind
  %2494 = tail call double @_Z4fmaxdd(double %extract4562, double 1.000000e-200) nounwind
  %2495 = tail call double @_Z4fmaxdd(double %extract4563, double 1.000000e-200) nounwind
  %2496 = tail call double @_Z4fmaxdd(double %extract4564, double 1.000000e-200) nounwind
  %2497 = tail call double @_Z4fmaxdd(double %extract4565, double 1.000000e-200) nounwind
  %2498 = tail call double @_Z4fmaxdd(double %extract4566, double 1.000000e-200) nounwind
  %2499 = tail call double @_Z4fmaxdd(double %extract4567, double 1.000000e-200) nounwind
  %2500 = tail call double @_Z4fmaxdd(double %extract4568, double 1.000000e-200) nounwind
  %2501 = tail call double @_Z4fmaxdd(double %extract4569, double 1.000000e-200) nounwind
  %2502 = tail call double @_Z4fmaxdd(double %extract4570, double 1.000000e-200) nounwind
  %2503 = tail call double @_Z4fmaxdd(double %extract4571, double 1.000000e-200) nounwind
  %2504 = tail call double @_Z5log10d(double %2488) nounwind
  %2505 = tail call double @_Z5log10d(double %2489) nounwind
  %2506 = tail call double @_Z5log10d(double %2490) nounwind
  %2507 = tail call double @_Z5log10d(double %2491) nounwind
  %2508 = tail call double @_Z5log10d(double %2492) nounwind
  %2509 = tail call double @_Z5log10d(double %2493) nounwind
  %2510 = tail call double @_Z5log10d(double %2494) nounwind
  %2511 = tail call double @_Z5log10d(double %2495) nounwind
  %2512 = tail call double @_Z5log10d(double %2496) nounwind
  %2513 = tail call double @_Z5log10d(double %2497) nounwind
  %2514 = tail call double @_Z5log10d(double %2498) nounwind
  %2515 = tail call double @_Z5log10d(double %2499) nounwind
  %2516 = tail call double @_Z5log10d(double %2500) nounwind
  %2517 = tail call double @_Z5log10d(double %2501) nounwind
  %2518 = tail call double @_Z5log10d(double %2502) nounwind
  %2519 = tail call double @_Z5log10d(double %2503) nounwind
  %temp.vect4700 = insertelement <16 x double> undef, double %2504, i32 0
  %temp.vect4701 = insertelement <16 x double> %temp.vect4700, double %2505, i32 1
  %temp.vect4702 = insertelement <16 x double> %temp.vect4701, double %2506, i32 2
  %temp.vect4703 = insertelement <16 x double> %temp.vect4702, double %2507, i32 3
  %temp.vect4704 = insertelement <16 x double> %temp.vect4703, double %2508, i32 4
  %temp.vect4705 = insertelement <16 x double> %temp.vect4704, double %2509, i32 5
  %temp.vect4706 = insertelement <16 x double> %temp.vect4705, double %2510, i32 6
  %temp.vect4707 = insertelement <16 x double> %temp.vect4706, double %2511, i32 7
  %temp.vect4708 = insertelement <16 x double> %temp.vect4707, double %2512, i32 8
  %temp.vect4709 = insertelement <16 x double> %temp.vect4708, double %2513, i32 9
  %temp.vect4710 = insertelement <16 x double> %temp.vect4709, double %2514, i32 10
  %temp.vect4711 = insertelement <16 x double> %temp.vect4710, double %2515, i32 11
  %temp.vect4712 = insertelement <16 x double> %temp.vect4711, double %2516, i32 12
  %temp.vect4713 = insertelement <16 x double> %temp.vect4712, double %2517, i32 13
  %temp.vect4714 = insertelement <16 x double> %temp.vect4713, double %2518, i32 14
  %temp.vect4715 = insertelement <16 x double> %temp.vect4714, double %2519, i32 15
  %2520 = fmul <16 x double> %7, <double -1.000000e-03, double -1.000000e-03, double -1.000000e-03, double -1.000000e-03, double -1.000000e-03, double -1.000000e-03, double -1.000000e-03, double -1.000000e-03, double -1.000000e-03, double -1.000000e-03, double -1.000000e-03, double -1.000000e-03, double -1.000000e-03, double -1.000000e-03, double -1.000000e-03, double -1.000000e-03>
  %extract4572 = extractelement <16 x double> %2520, i32 0
  %extract4573 = extractelement <16 x double> %2520, i32 1
  %extract4574 = extractelement <16 x double> %2520, i32 2
  %extract4575 = extractelement <16 x double> %2520, i32 3
  %extract4576 = extractelement <16 x double> %2520, i32 4
  %extract4577 = extractelement <16 x double> %2520, i32 5
  %extract4578 = extractelement <16 x double> %2520, i32 6
  %extract4579 = extractelement <16 x double> %2520, i32 7
  %extract4580 = extractelement <16 x double> %2520, i32 8
  %extract4581 = extractelement <16 x double> %2520, i32 9
  %extract4582 = extractelement <16 x double> %2520, i32 10
  %extract4583 = extractelement <16 x double> %2520, i32 11
  %extract4584 = extractelement <16 x double> %2520, i32 12
  %extract4585 = extractelement <16 x double> %2520, i32 13
  %extract4586 = extractelement <16 x double> %2520, i32 14
  %extract4587 = extractelement <16 x double> %2520, i32 15
  %2521 = tail call double @_Z3expd(double %extract4572) nounwind
  %2522 = tail call double @_Z3expd(double %extract4573) nounwind
  %2523 = tail call double @_Z3expd(double %extract4574) nounwind
  %2524 = tail call double @_Z3expd(double %extract4575) nounwind
  %2525 = tail call double @_Z3expd(double %extract4576) nounwind
  %2526 = tail call double @_Z3expd(double %extract4577) nounwind
  %2527 = tail call double @_Z3expd(double %extract4578) nounwind
  %2528 = tail call double @_Z3expd(double %extract4579) nounwind
  %2529 = tail call double @_Z3expd(double %extract4580) nounwind
  %2530 = tail call double @_Z3expd(double %extract4581) nounwind
  %2531 = tail call double @_Z3expd(double %extract4582) nounwind
  %2532 = tail call double @_Z3expd(double %extract4583) nounwind
  %2533 = tail call double @_Z3expd(double %extract4584) nounwind
  %2534 = tail call double @_Z3expd(double %extract4585) nounwind
  %2535 = tail call double @_Z3expd(double %extract4586) nounwind
  %2536 = tail call double @_Z3expd(double %extract4587) nounwind
  %temp.vect4588 = insertelement <16 x double> undef, double %2521, i32 0
  %temp.vect4589 = insertelement <16 x double> %temp.vect4588, double %2522, i32 1
  %temp.vect4590 = insertelement <16 x double> %temp.vect4589, double %2523, i32 2
  %temp.vect4591 = insertelement <16 x double> %temp.vect4590, double %2524, i32 3
  %temp.vect4592 = insertelement <16 x double> %temp.vect4591, double %2525, i32 4
  %temp.vect4593 = insertelement <16 x double> %temp.vect4592, double %2526, i32 5
  %temp.vect4594 = insertelement <16 x double> %temp.vect4593, double %2527, i32 6
  %temp.vect4595 = insertelement <16 x double> %temp.vect4594, double %2528, i32 7
  %temp.vect4596 = insertelement <16 x double> %temp.vect4595, double %2529, i32 8
  %temp.vect4597 = insertelement <16 x double> %temp.vect4596, double %2530, i32 9
  %temp.vect4598 = insertelement <16 x double> %temp.vect4597, double %2531, i32 10
  %temp.vect4599 = insertelement <16 x double> %temp.vect4598, double %2532, i32 11
  %temp.vect4600 = insertelement <16 x double> %temp.vect4599, double %2533, i32 12
  %temp.vect4601 = insertelement <16 x double> %temp.vect4600, double %2534, i32 13
  %temp.vect4602 = insertelement <16 x double> %temp.vect4601, double %2535, i32 14
  %temp.vect4603 = insertelement <16 x double> %temp.vect4602, double %2536, i32 15
  %2537 = fmul <16 x double> %temp.vect4603, zeroinitializer
  %2538 = fmul <16 x double> %7, <double 0xBF4903847EA1CEC1, double 0xBF4903847EA1CEC1, double 0xBF4903847EA1CEC1, double 0xBF4903847EA1CEC1, double 0xBF4903847EA1CEC1, double 0xBF4903847EA1CEC1, double 0xBF4903847EA1CEC1, double 0xBF4903847EA1CEC1, double 0xBF4903847EA1CEC1, double 0xBF4903847EA1CEC1, double 0xBF4903847EA1CEC1, double 0xBF4903847EA1CEC1, double 0xBF4903847EA1CEC1, double 0xBF4903847EA1CEC1, double 0xBF4903847EA1CEC1, double 0xBF4903847EA1CEC1>
  %extract4604 = extractelement <16 x double> %2538, i32 0
  %extract4605 = extractelement <16 x double> %2538, i32 1
  %extract4606 = extractelement <16 x double> %2538, i32 2
  %extract4607 = extractelement <16 x double> %2538, i32 3
  %extract4608 = extractelement <16 x double> %2538, i32 4
  %extract4609 = extractelement <16 x double> %2538, i32 5
  %extract4610 = extractelement <16 x double> %2538, i32 6
  %extract4611 = extractelement <16 x double> %2538, i32 7
  %extract4612 = extractelement <16 x double> %2538, i32 8
  %extract4613 = extractelement <16 x double> %2538, i32 9
  %extract4614 = extractelement <16 x double> %2538, i32 10
  %extract4615 = extractelement <16 x double> %2538, i32 11
  %extract4616 = extractelement <16 x double> %2538, i32 12
  %extract4617 = extractelement <16 x double> %2538, i32 13
  %extract4618 = extractelement <16 x double> %2538, i32 14
  %extract4619 = extractelement <16 x double> %2538, i32 15
  %2539 = tail call double @_Z3expd(double %extract4604) nounwind
  %2540 = tail call double @_Z3expd(double %extract4605) nounwind
  %2541 = tail call double @_Z3expd(double %extract4606) nounwind
  %2542 = tail call double @_Z3expd(double %extract4607) nounwind
  %2543 = tail call double @_Z3expd(double %extract4608) nounwind
  %2544 = tail call double @_Z3expd(double %extract4609) nounwind
  %2545 = tail call double @_Z3expd(double %extract4610) nounwind
  %2546 = tail call double @_Z3expd(double %extract4611) nounwind
  %2547 = tail call double @_Z3expd(double %extract4612) nounwind
  %2548 = tail call double @_Z3expd(double %extract4613) nounwind
  %2549 = tail call double @_Z3expd(double %extract4614) nounwind
  %2550 = tail call double @_Z3expd(double %extract4615) nounwind
  %2551 = tail call double @_Z3expd(double %extract4616) nounwind
  %2552 = tail call double @_Z3expd(double %extract4617) nounwind
  %2553 = tail call double @_Z3expd(double %extract4618) nounwind
  %2554 = tail call double @_Z3expd(double %extract4619) nounwind
  %temp.vect4620 = insertelement <16 x double> undef, double %2539, i32 0
  %temp.vect4621 = insertelement <16 x double> %temp.vect4620, double %2540, i32 1
  %temp.vect4622 = insertelement <16 x double> %temp.vect4621, double %2541, i32 2
  %temp.vect4623 = insertelement <16 x double> %temp.vect4622, double %2542, i32 3
  %temp.vect4624 = insertelement <16 x double> %temp.vect4623, double %2543, i32 4
  %temp.vect4625 = insertelement <16 x double> %temp.vect4624, double %2544, i32 5
  %temp.vect4626 = insertelement <16 x double> %temp.vect4625, double %2545, i32 6
  %temp.vect4627 = insertelement <16 x double> %temp.vect4626, double %2546, i32 7
  %temp.vect4628 = insertelement <16 x double> %temp.vect4627, double %2547, i32 8
  %temp.vect4629 = insertelement <16 x double> %temp.vect4628, double %2548, i32 9
  %temp.vect4630 = insertelement <16 x double> %temp.vect4629, double %2549, i32 10
  %temp.vect4631 = insertelement <16 x double> %temp.vect4630, double %2550, i32 11
  %temp.vect4632 = insertelement <16 x double> %temp.vect4631, double %2551, i32 12
  %temp.vect4633 = insertelement <16 x double> %temp.vect4632, double %2552, i32 13
  %temp.vect4634 = insertelement <16 x double> %temp.vect4633, double %2553, i32 14
  %temp.vect4635 = insertelement <16 x double> %temp.vect4634, double %2554, i32 15
  %2555 = fadd <16 x double> %2537, %temp.vect4635
  %2556 = fmul <16 x double> %981, <double -4.809700e+04, double -4.809700e+04, double -4.809700e+04, double -4.809700e+04, double -4.809700e+04, double -4.809700e+04, double -4.809700e+04, double -4.809700e+04, double -4.809700e+04, double -4.809700e+04, double -4.809700e+04, double -4.809700e+04, double -4.809700e+04, double -4.809700e+04, double -4.809700e+04, double -4.809700e+04>
  %extract4636 = extractelement <16 x double> %2556, i32 0
  %extract4637 = extractelement <16 x double> %2556, i32 1
  %extract4638 = extractelement <16 x double> %2556, i32 2
  %extract4639 = extractelement <16 x double> %2556, i32 3
  %extract4640 = extractelement <16 x double> %2556, i32 4
  %extract4641 = extractelement <16 x double> %2556, i32 5
  %extract4642 = extractelement <16 x double> %2556, i32 6
  %extract4643 = extractelement <16 x double> %2556, i32 7
  %extract4644 = extractelement <16 x double> %2556, i32 8
  %extract4645 = extractelement <16 x double> %2556, i32 9
  %extract4646 = extractelement <16 x double> %2556, i32 10
  %extract4647 = extractelement <16 x double> %2556, i32 11
  %extract4648 = extractelement <16 x double> %2556, i32 12
  %extract4649 = extractelement <16 x double> %2556, i32 13
  %extract4650 = extractelement <16 x double> %2556, i32 14
  %extract4651 = extractelement <16 x double> %2556, i32 15
  %2557 = tail call double @_Z3expd(double %extract4636) nounwind
  %2558 = tail call double @_Z3expd(double %extract4637) nounwind
  %2559 = tail call double @_Z3expd(double %extract4638) nounwind
  %2560 = tail call double @_Z3expd(double %extract4639) nounwind
  %2561 = tail call double @_Z3expd(double %extract4640) nounwind
  %2562 = tail call double @_Z3expd(double %extract4641) nounwind
  %2563 = tail call double @_Z3expd(double %extract4642) nounwind
  %2564 = tail call double @_Z3expd(double %extract4643) nounwind
  %2565 = tail call double @_Z3expd(double %extract4644) nounwind
  %2566 = tail call double @_Z3expd(double %extract4645) nounwind
  %2567 = tail call double @_Z3expd(double %extract4646) nounwind
  %2568 = tail call double @_Z3expd(double %extract4647) nounwind
  %2569 = tail call double @_Z3expd(double %extract4648) nounwind
  %2570 = tail call double @_Z3expd(double %extract4649) nounwind
  %2571 = tail call double @_Z3expd(double %extract4650) nounwind
  %2572 = tail call double @_Z3expd(double %extract4651) nounwind
  %temp.vect4652 = insertelement <16 x double> undef, double %2557, i32 0
  %temp.vect4653 = insertelement <16 x double> %temp.vect4652, double %2558, i32 1
  %temp.vect4654 = insertelement <16 x double> %temp.vect4653, double %2559, i32 2
  %temp.vect4655 = insertelement <16 x double> %temp.vect4654, double %2560, i32 3
  %temp.vect4656 = insertelement <16 x double> %temp.vect4655, double %2561, i32 4
  %temp.vect4657 = insertelement <16 x double> %temp.vect4656, double %2562, i32 5
  %temp.vect4658 = insertelement <16 x double> %temp.vect4657, double %2563, i32 6
  %temp.vect4659 = insertelement <16 x double> %temp.vect4658, double %2564, i32 7
  %temp.vect4660 = insertelement <16 x double> %temp.vect4659, double %2565, i32 8
  %temp.vect4661 = insertelement <16 x double> %temp.vect4660, double %2566, i32 9
  %temp.vect4662 = insertelement <16 x double> %temp.vect4661, double %2567, i32 10
  %temp.vect4663 = insertelement <16 x double> %temp.vect4662, double %2568, i32 11
  %temp.vect4664 = insertelement <16 x double> %temp.vect4663, double %2569, i32 12
  %temp.vect4665 = insertelement <16 x double> %temp.vect4664, double %2570, i32 13
  %temp.vect4666 = insertelement <16 x double> %temp.vect4665, double %2571, i32 14
  %temp.vect4667 = insertelement <16 x double> %temp.vect4666, double %2572, i32 15
  %2573 = fadd <16 x double> %2555, %temp.vect4667
  %extract4668 = extractelement <16 x double> %2573, i32 0
  %extract4669 = extractelement <16 x double> %2573, i32 1
  %extract4670 = extractelement <16 x double> %2573, i32 2
  %extract4671 = extractelement <16 x double> %2573, i32 3
  %extract4672 = extractelement <16 x double> %2573, i32 4
  %extract4673 = extractelement <16 x double> %2573, i32 5
  %extract4674 = extractelement <16 x double> %2573, i32 6
  %extract4675 = extractelement <16 x double> %2573, i32 7
  %extract4676 = extractelement <16 x double> %2573, i32 8
  %extract4677 = extractelement <16 x double> %2573, i32 9
  %extract4678 = extractelement <16 x double> %2573, i32 10
  %extract4679 = extractelement <16 x double> %2573, i32 11
  %extract4680 = extractelement <16 x double> %2573, i32 12
  %extract4681 = extractelement <16 x double> %2573, i32 13
  %extract4682 = extractelement <16 x double> %2573, i32 14
  %extract4683 = extractelement <16 x double> %2573, i32 15
  %2574 = tail call double @_Z4fmaxdd(double %extract4668, double 1.000000e-200) nounwind
  %2575 = tail call double @_Z4fmaxdd(double %extract4669, double 1.000000e-200) nounwind
  %2576 = tail call double @_Z4fmaxdd(double %extract4670, double 1.000000e-200) nounwind
  %2577 = tail call double @_Z4fmaxdd(double %extract4671, double 1.000000e-200) nounwind
  %2578 = tail call double @_Z4fmaxdd(double %extract4672, double 1.000000e-200) nounwind
  %2579 = tail call double @_Z4fmaxdd(double %extract4673, double 1.000000e-200) nounwind
  %2580 = tail call double @_Z4fmaxdd(double %extract4674, double 1.000000e-200) nounwind
  %2581 = tail call double @_Z4fmaxdd(double %extract4675, double 1.000000e-200) nounwind
  %2582 = tail call double @_Z4fmaxdd(double %extract4676, double 1.000000e-200) nounwind
  %2583 = tail call double @_Z4fmaxdd(double %extract4677, double 1.000000e-200) nounwind
  %2584 = tail call double @_Z4fmaxdd(double %extract4678, double 1.000000e-200) nounwind
  %2585 = tail call double @_Z4fmaxdd(double %extract4679, double 1.000000e-200) nounwind
  %2586 = tail call double @_Z4fmaxdd(double %extract4680, double 1.000000e-200) nounwind
  %2587 = tail call double @_Z4fmaxdd(double %extract4681, double 1.000000e-200) nounwind
  %2588 = tail call double @_Z4fmaxdd(double %extract4682, double 1.000000e-200) nounwind
  %2589 = tail call double @_Z4fmaxdd(double %extract4683, double 1.000000e-200) nounwind
  %2590 = tail call double @_Z5log10d(double %2574) nounwind
  %2591 = tail call double @_Z5log10d(double %2575) nounwind
  %2592 = tail call double @_Z5log10d(double %2576) nounwind
  %2593 = tail call double @_Z5log10d(double %2577) nounwind
  %2594 = tail call double @_Z5log10d(double %2578) nounwind
  %2595 = tail call double @_Z5log10d(double %2579) nounwind
  %2596 = tail call double @_Z5log10d(double %2580) nounwind
  %2597 = tail call double @_Z5log10d(double %2581) nounwind
  %2598 = tail call double @_Z5log10d(double %2582) nounwind
  %2599 = tail call double @_Z5log10d(double %2583) nounwind
  %2600 = tail call double @_Z5log10d(double %2584) nounwind
  %2601 = tail call double @_Z5log10d(double %2585) nounwind
  %2602 = tail call double @_Z5log10d(double %2586) nounwind
  %2603 = tail call double @_Z5log10d(double %2587) nounwind
  %2604 = tail call double @_Z5log10d(double %2588) nounwind
  %2605 = tail call double @_Z5log10d(double %2589) nounwind
  %temp.vect4684 = insertelement <16 x double> undef, double %2590, i32 0
  %temp.vect4685 = insertelement <16 x double> %temp.vect4684, double %2591, i32 1
  %temp.vect4686 = insertelement <16 x double> %temp.vect4685, double %2592, i32 2
  %temp.vect4687 = insertelement <16 x double> %temp.vect4686, double %2593, i32 3
  %temp.vect4688 = insertelement <16 x double> %temp.vect4687, double %2594, i32 4
  %temp.vect4689 = insertelement <16 x double> %temp.vect4688, double %2595, i32 5
  %temp.vect4690 = insertelement <16 x double> %temp.vect4689, double %2596, i32 6
  %temp.vect4691 = insertelement <16 x double> %temp.vect4690, double %2597, i32 7
  %temp.vect4692 = insertelement <16 x double> %temp.vect4691, double %2598, i32 8
  %temp.vect4693 = insertelement <16 x double> %temp.vect4692, double %2599, i32 9
  %temp.vect4694 = insertelement <16 x double> %temp.vect4693, double %2600, i32 10
  %temp.vect4695 = insertelement <16 x double> %temp.vect4694, double %2601, i32 11
  %temp.vect4696 = insertelement <16 x double> %temp.vect4695, double %2602, i32 12
  %temp.vect4697 = insertelement <16 x double> %temp.vect4696, double %2603, i32 13
  %temp.vect4698 = insertelement <16 x double> %temp.vect4697, double %2604, i32 14
  %temp.vect4699 = insertelement <16 x double> %temp.vect4698, double %2605, i32 15
  %2606 = fmul <16 x double> %temp.vect4699, <double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00>
  %2607 = fsub <16 x double> <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>, %2606
  %2608 = fmul <16 x double> %temp.vect4699, <double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01>
  %2609 = fadd <16 x double> %2608, <double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01>
  %2610 = fsub <16 x double> %temp.vect4715, %2609
  %2611 = fmul <16 x double> %2610, <double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01>
  %2612 = fsub <16 x double> %2607, %2611
  %2613 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2612
  %2614 = fmul <16 x double> %2610, %2613
  %2615 = fmul <16 x double> %2614, %2614
  %2616 = fadd <16 x double> %2615, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %2617 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2616
  %2618 = fmul <16 x double> %temp.vect4699, %2617
  %extract4716 = extractelement <16 x double> %2618, i32 0
  %extract4717 = extractelement <16 x double> %2618, i32 1
  %extract4718 = extractelement <16 x double> %2618, i32 2
  %extract4719 = extractelement <16 x double> %2618, i32 3
  %extract4720 = extractelement <16 x double> %2618, i32 4
  %extract4721 = extractelement <16 x double> %2618, i32 5
  %extract4722 = extractelement <16 x double> %2618, i32 6
  %extract4723 = extractelement <16 x double> %2618, i32 7
  %extract4724 = extractelement <16 x double> %2618, i32 8
  %extract4725 = extractelement <16 x double> %2618, i32 9
  %extract4726 = extractelement <16 x double> %2618, i32 10
  %extract4727 = extractelement <16 x double> %2618, i32 11
  %extract4728 = extractelement <16 x double> %2618, i32 12
  %extract4729 = extractelement <16 x double> %2618, i32 13
  %extract4730 = extractelement <16 x double> %2618, i32 14
  %extract4731 = extractelement <16 x double> %2618, i32 15
  %2619 = tail call double @_Z5exp10d(double %extract4716) nounwind
  %2620 = tail call double @_Z5exp10d(double %extract4717) nounwind
  %2621 = tail call double @_Z5exp10d(double %extract4718) nounwind
  %2622 = tail call double @_Z5exp10d(double %extract4719) nounwind
  %2623 = tail call double @_Z5exp10d(double %extract4720) nounwind
  %2624 = tail call double @_Z5exp10d(double %extract4721) nounwind
  %2625 = tail call double @_Z5exp10d(double %extract4722) nounwind
  %2626 = tail call double @_Z5exp10d(double %extract4723) nounwind
  %2627 = tail call double @_Z5exp10d(double %extract4724) nounwind
  %2628 = tail call double @_Z5exp10d(double %extract4725) nounwind
  %2629 = tail call double @_Z5exp10d(double %extract4726) nounwind
  %2630 = tail call double @_Z5exp10d(double %extract4727) nounwind
  %2631 = tail call double @_Z5exp10d(double %extract4728) nounwind
  %2632 = tail call double @_Z5exp10d(double %extract4729) nounwind
  %2633 = tail call double @_Z5exp10d(double %extract4730) nounwind
  %2634 = tail call double @_Z5exp10d(double %extract4731) nounwind
  %temp.vect4732 = insertelement <16 x double> undef, double %2619, i32 0
  %temp.vect4733 = insertelement <16 x double> %temp.vect4732, double %2620, i32 1
  %temp.vect4734 = insertelement <16 x double> %temp.vect4733, double %2621, i32 2
  %temp.vect4735 = insertelement <16 x double> %temp.vect4734, double %2622, i32 3
  %temp.vect4736 = insertelement <16 x double> %temp.vect4735, double %2623, i32 4
  %temp.vect4737 = insertelement <16 x double> %temp.vect4736, double %2624, i32 5
  %temp.vect4738 = insertelement <16 x double> %temp.vect4737, double %2625, i32 6
  %temp.vect4739 = insertelement <16 x double> %temp.vect4738, double %2626, i32 7
  %temp.vect4740 = insertelement <16 x double> %temp.vect4739, double %2627, i32 8
  %temp.vect4741 = insertelement <16 x double> %temp.vect4740, double %2628, i32 9
  %temp.vect4742 = insertelement <16 x double> %temp.vect4741, double %2629, i32 10
  %temp.vect4743 = insertelement <16 x double> %temp.vect4742, double %2630, i32 11
  %temp.vect4744 = insertelement <16 x double> %temp.vect4743, double %2631, i32 12
  %temp.vect4745 = insertelement <16 x double> %temp.vect4744, double %2632, i32 13
  %temp.vect4746 = insertelement <16 x double> %temp.vect4745, double %2633, i32 14
  %temp.vect4747 = insertelement <16 x double> %temp.vect4746, double %2634, i32 15
  %2635 = fmul <16 x double> %temp.vect4747, %2487
  %2636 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2637 = load i64* %2636, align 8
  %2638 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2639 = load i64* %2638, align 8
  %2640 = add i64 %2637, %2639
  %extract4750 = add i64 %2640, 20901888
  %2641 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract4750
  %ptrTypeCast4766 = bitcast double addrspace(1)* %2641 to <16 x double> addrspace(1)*
  %2642 = load <16 x double> addrspace(1)* %ptrTypeCast4766, align 8
  %2643 = fmul <16 x double> %2642, %2635
  %2644 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2645 = load i64* %2644, align 8
  %2646 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2647 = load i64* %2646, align 8
  %2648 = add i64 %2645, %2647
  %extract4769 = add i64 %2648, 20901888
  %2649 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract4769
  %ptrTypeCast4785 = bitcast double addrspace(1)* %2649 to <16 x double> addrspace(1)*
  store <16 x double> %2643, <16 x double> addrspace(1)* %ptrTypeCast4785, align 8
  %2650 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2651 = load i64* %2650, align 8
  %2652 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2653 = load i64* %2652, align 8
  %2654 = add i64 %2651, %2653
  %extract4788 = add i64 %2654, 20901888
  %2655 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract4788
  %ptrTypeCast4804 = bitcast double addrspace(1)* %2655 to <16 x double> addrspace(1)*
  %2656 = load <16 x double> addrspace(1)* %ptrTypeCast4804, align 8
  %2657 = fmul <16 x double> %2656, %2635
  %2658 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2659 = load i64* %2658, align 8
  %2660 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2661 = load i64* %2660, align 8
  %2662 = add i64 %2659, %2661
  %extract4807 = add i64 %2662, 20901888
  %2663 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract4807
  %ptrTypeCast4823 = bitcast double addrspace(1)* %2663 to <16 x double> addrspace(1)*
  store <16 x double> %2657, <16 x double> addrspace(1)* %ptrTypeCast4823, align 8
  %check.WI.iter = icmp ult i64 %CurrWI..0, %iterCount
  br i1 %check.WI.iter, label %thenBB, label %SyncBB4824

thenBB:                                           ; preds = %._crit_edge
  %"CurrWI++" = add nuw i64 %CurrWI..0, 1
  br label %SyncBB

SyncBB4824:                                       ; preds = %._crit_edge
  ret void
}

define void @ratxb_kernel(i8* %pBuffer) {
entry:
  %0 = bitcast i8* %pBuffer to double addrspace(1)**
  %1 = load double addrspace(1)** %0, align 8
  %2 = getelementptr i8* %pBuffer, i64 8
  %3 = bitcast i8* %2 to double addrspace(1)**
  %4 = load double addrspace(1)** %3, align 8
  %5 = getelementptr i8* %pBuffer, i64 16
  %6 = bitcast i8* %5 to double addrspace(1)**
  %7 = load double addrspace(1)** %6, align 8
  %8 = getelementptr i8* %pBuffer, i64 24
  %9 = bitcast i8* %8 to double addrspace(1)**
  %10 = load double addrspace(1)** %9, align 8
  %11 = getelementptr i8* %pBuffer, i64 32
  %12 = bitcast i8* %11 to double addrspace(1)**
  %13 = load double addrspace(1)** %12, align 8
  %14 = getelementptr i8* %pBuffer, i64 40
  %15 = bitcast i8* %14 to double*
  %16 = load double* %15, align 8
  %17 = getelementptr i8* %pBuffer, i64 72
  %18 = bitcast i8* %17 to %struct.PaddedDimId**
  %19 = load %struct.PaddedDimId** %18, align 8
  %20 = getelementptr i8* %pBuffer, i64 80
  %21 = bitcast i8* %20 to %struct.PaddedDimId**
  %22 = load %struct.PaddedDimId** %21, align 8
  %23 = getelementptr i8* %pBuffer, i64 96
  %24 = bitcast i8* %23 to i64*
  %25 = load i64* %24, align 8
  br label %SyncBB5.i

SyncBB5.i:                                        ; preds = %thenBB.i, %entry
  %CurrWI..0.i = phi i64 [ %"CurrWI++.i", %thenBB.i ], [ 0, %entry ]
  %26 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %27 = load i64* %26, align 8
  %28 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %29 = load i64* %28, align 8
  %30 = add i64 %27, %29
  %31 = getelementptr inbounds double addrspace(1)* %1, i64 %30
  %32 = load double addrspace(1)* %31, align 8
  %33 = fmul double %32, %16
  %34 = call double @_Z3logd(double %33) nounwind
  br label %35

; <label>:35                                      ; preds = %35, %SyncBB5.i
  %indvar.i = phi i64 [ 0, %SyncBB5.i ], [ %indvar.next.i, %35 ]
  %CTOT.01.i = phi double [ 0.000000e+00, %SyncBB5.i ], [ %43, %35 ]
  %tmp3.i = mul i64 %indvar.i, 110592
  %36 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %37 = load i64* %36, align 8
  %38 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %39 = load i64* %38, align 8
  %40 = add i64 %37, %39
  %tmp4.i = add i64 %40, %tmp3.i
  %41 = getelementptr inbounds double addrspace(1)* %4, i64 %tmp4.i
  %42 = load double addrspace(1)* %41, align 8
  %43 = fadd double %CTOT.01.i, %42
  %indvar.next.i = add i64 %indvar.i, 1
  %exitcond.i = icmp eq i64 %indvar.next.i, 22
  br i1 %exitcond.i, label %._crit_edge.i, label %35

._crit_edge.i:                                    ; preds = %35
  %44 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %45 = load i64* %44, align 8
  %46 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %47 = load i64* %46, align 8
  %48 = add i64 %45, %47
  %49 = getelementptr inbounds double addrspace(1)* %4, i64 %48
  %50 = load double addrspace(1)* %49, align 8
  %51 = fsub double %43, %50
  %52 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %53 = load i64* %52, align 8
  %54 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %55 = load i64* %54, align 8
  %56 = add i64 %53, %55
  %57 = add i64 %56, 552960
  %58 = getelementptr inbounds double addrspace(1)* %4, i64 %57
  %59 = load double addrspace(1)* %58, align 8
  %60 = fsub double %51, %59
  %61 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %62 = load i64* %61, align 8
  %63 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %64 = load i64* %63, align 8
  %65 = add i64 %62, %64
  %66 = add i64 %65, 995328
  %67 = getelementptr inbounds double addrspace(1)* %4, i64 %66
  %68 = load double addrspace(1)* %67, align 8
  %69 = fadd double %60, %68
  %70 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %71 = load i64* %70, align 8
  %72 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %73 = load i64* %72, align 8
  %74 = add i64 %71, %73
  %75 = add i64 %74, 1216512
  %76 = getelementptr inbounds double addrspace(1)* %4, i64 %75
  %77 = load double addrspace(1)* %76, align 8
  %78 = fsub double %69, %77
  %79 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %80 = load i64* %79, align 8
  %81 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %82 = load i64* %81, align 8
  %83 = add i64 %80, %82
  %84 = add i64 %83, 1658880
  %85 = getelementptr inbounds double addrspace(1)* %4, i64 %84
  %86 = load double addrspace(1)* %85, align 8
  %87 = fmul double %86, 2.000000e+00
  %88 = fadd double %78, %87
  %89 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %90 = load i64* %89, align 8
  %91 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %92 = load i64* %91, align 8
  %93 = add i64 %90, %92
  %94 = add i64 %93, 1437696
  %95 = getelementptr inbounds double addrspace(1)* %4, i64 %94
  %96 = load double addrspace(1)* %95, align 8
  %97 = fmul double %96, 2.000000e+00
  %98 = fadd double %88, %97
  %99 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %100 = load i64* %99, align 8
  %101 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %102 = load i64* %101, align 8
  %103 = add i64 %100, %102
  %104 = add i64 %103, 1548288
  %105 = getelementptr inbounds double addrspace(1)* %4, i64 %104
  %106 = load double addrspace(1)* %105, align 8
  %107 = fmul double %106, 2.000000e+00
  %108 = fadd double %98, %107
  %109 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %110 = load i64* %109, align 8
  %111 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %112 = load i64* %111, align 8
  %113 = add i64 %110, %112
  %114 = getelementptr inbounds double addrspace(1)* %4, i64 %113
  %115 = load double addrspace(1)* %114, align 8
  %116 = fmul double %115, 2.700000e-01
  %117 = fsub double %43, %116
  %118 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %119 = load i64* %118, align 8
  %120 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %121 = load i64* %120, align 8
  %122 = add i64 %119, %121
  %123 = add i64 %122, 552960
  %124 = getelementptr inbounds double addrspace(1)* %4, i64 %123
  %125 = load double addrspace(1)* %124, align 8
  %126 = fmul double %125, 2.650000e+00
  %127 = fadd double %117, %126
  %128 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %129 = load i64* %128, align 8
  %130 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %131 = load i64* %130, align 8
  %132 = add i64 %129, %131
  %133 = add i64 %132, 995328
  %134 = getelementptr inbounds double addrspace(1)* %4, i64 %133
  %135 = load double addrspace(1)* %134, align 8
  %136 = fadd double %127, %135
  %137 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %138 = load i64* %137, align 8
  %139 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %140 = load i64* %139, align 8
  %141 = add i64 %138, %140
  %142 = add i64 %141, 1658880
  %143 = getelementptr inbounds double addrspace(1)* %4, i64 %142
  %144 = load double addrspace(1)* %143, align 8
  %145 = fmul double %144, 2.000000e+00
  %146 = fadd double %136, %145
  %147 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %148 = load i64* %147, align 8
  %149 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %150 = load i64* %149, align 8
  %151 = add i64 %148, %150
  %152 = add i64 %151, 1437696
  %153 = getelementptr inbounds double addrspace(1)* %4, i64 %152
  %154 = load double addrspace(1)* %153, align 8
  %155 = fmul double %154, 2.000000e+00
  %156 = fadd double %146, %155
  %157 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %158 = load i64* %157, align 8
  %159 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %160 = load i64* %159, align 8
  %161 = add i64 %158, %160
  %162 = add i64 %161, 1548288
  %163 = getelementptr inbounds double addrspace(1)* %4, i64 %162
  %164 = load double addrspace(1)* %163, align 8
  %165 = fmul double %164, 2.000000e+00
  %166 = fadd double %156, %165
  %167 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %168 = load i64* %167, align 8
  %169 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %170 = load i64* %169, align 8
  %171 = add i64 %168, %170
  %172 = getelementptr inbounds double addrspace(1)* %4, i64 %171
  %173 = load double addrspace(1)* %172, align 8
  %174 = fadd double %43, %173
  %175 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %176 = load i64* %175, align 8
  %177 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %178 = load i64* %177, align 8
  %179 = add i64 %176, %178
  %180 = add i64 %179, 552960
  %181 = getelementptr inbounds double addrspace(1)* %4, i64 %180
  %182 = load double addrspace(1)* %181, align 8
  %183 = fmul double %182, 5.000000e+00
  %184 = fadd double %174, %183
  %185 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %186 = load i64* %185, align 8
  %187 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %188 = load i64* %187, align 8
  %189 = add i64 %186, %188
  %190 = add i64 %189, 995328
  %191 = getelementptr inbounds double addrspace(1)* %4, i64 %190
  %192 = load double addrspace(1)* %191, align 8
  %193 = fadd double %184, %192
  %194 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %195 = load i64* %194, align 8
  %196 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %197 = load i64* %196, align 8
  %198 = add i64 %195, %197
  %199 = add i64 %198, 1105920
  %200 = getelementptr inbounds double addrspace(1)* %4, i64 %199
  %201 = load double addrspace(1)* %200, align 8
  %202 = fmul double %201, 5.000000e-01
  %203 = fadd double %193, %202
  %204 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %205 = load i64* %204, align 8
  %206 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %207 = load i64* %206, align 8
  %208 = add i64 %205, %207
  %209 = add i64 %208, 1216512
  %210 = getelementptr inbounds double addrspace(1)* %4, i64 %209
  %211 = load double addrspace(1)* %210, align 8
  %212 = fadd double %203, %211
  %213 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %214 = load i64* %213, align 8
  %215 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %216 = load i64* %215, align 8
  %217 = add i64 %214, %216
  %218 = add i64 %217, 1658880
  %219 = getelementptr inbounds double addrspace(1)* %4, i64 %218
  %220 = load double addrspace(1)* %219, align 8
  %221 = fmul double %220, 2.000000e+00
  %222 = fadd double %212, %221
  %223 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %224 = load i64* %223, align 8
  %225 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %226 = load i64* %225, align 8
  %227 = add i64 %224, %226
  %228 = add i64 %227, 1437696
  %229 = getelementptr inbounds double addrspace(1)* %4, i64 %228
  %230 = load double addrspace(1)* %229, align 8
  %231 = fmul double %230, 2.000000e+00
  %232 = fadd double %222, %231
  %233 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %234 = load i64* %233, align 8
  %235 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %236 = load i64* %235, align 8
  %237 = add i64 %234, %236
  %238 = add i64 %237, 1548288
  %239 = getelementptr inbounds double addrspace(1)* %4, i64 %238
  %240 = load double addrspace(1)* %239, align 8
  %241 = fmul double %240, 2.000000e+00
  %242 = fadd double %232, %241
  %243 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %244 = load i64* %243, align 8
  %245 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %246 = load i64* %245, align 8
  %247 = add i64 %244, %246
  %248 = getelementptr inbounds double addrspace(1)* %4, i64 %247
  %249 = load double addrspace(1)* %248, align 8
  %250 = fmul double %249, 1.400000e+00
  %251 = fadd double %43, %250
  %252 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %253 = load i64* %252, align 8
  %254 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %255 = load i64* %254, align 8
  %256 = add i64 %253, %255
  %257 = add i64 %256, 552960
  %258 = getelementptr inbounds double addrspace(1)* %4, i64 %257
  %259 = load double addrspace(1)* %258, align 8
  %260 = fmul double %259, 1.440000e+01
  %261 = fadd double %251, %260
  %262 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %263 = load i64* %262, align 8
  %264 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %265 = load i64* %264, align 8
  %266 = add i64 %263, %265
  %267 = add i64 %266, 995328
  %268 = getelementptr inbounds double addrspace(1)* %4, i64 %267
  %269 = load double addrspace(1)* %268, align 8
  %270 = fadd double %261, %269
  %271 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %272 = load i64* %271, align 8
  %273 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %274 = load i64* %273, align 8
  %275 = add i64 %272, %274
  %276 = add i64 %275, 1105920
  %277 = getelementptr inbounds double addrspace(1)* %4, i64 %276
  %278 = load double addrspace(1)* %277, align 8
  %279 = fmul double %278, 7.500000e-01
  %280 = fadd double %270, %279
  %281 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %282 = load i64* %281, align 8
  %283 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %284 = load i64* %283, align 8
  %285 = add i64 %282, %284
  %286 = add i64 %285, 1216512
  %287 = getelementptr inbounds double addrspace(1)* %4, i64 %286
  %288 = load double addrspace(1)* %287, align 8
  %289 = fmul double %288, 2.600000e+00
  %290 = fadd double %280, %289
  %291 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %292 = load i64* %291, align 8
  %293 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %294 = load i64* %293, align 8
  %295 = add i64 %292, %294
  %296 = add i64 %295, 1658880
  %297 = getelementptr inbounds double addrspace(1)* %4, i64 %296
  %298 = load double addrspace(1)* %297, align 8
  %299 = fmul double %298, 2.000000e+00
  %300 = fadd double %290, %299
  %301 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %302 = load i64* %301, align 8
  %303 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %304 = load i64* %303, align 8
  %305 = add i64 %302, %304
  %306 = add i64 %305, 1437696
  %307 = getelementptr inbounds double addrspace(1)* %4, i64 %306
  %308 = load double addrspace(1)* %307, align 8
  %309 = fmul double %308, 2.000000e+00
  %310 = fadd double %300, %309
  %311 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %312 = load i64* %311, align 8
  %313 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %314 = load i64* %313, align 8
  %315 = add i64 %312, %314
  %316 = add i64 %315, 1548288
  %317 = getelementptr inbounds double addrspace(1)* %4, i64 %316
  %318 = load double addrspace(1)* %317, align 8
  %319 = fmul double %318, 2.000000e+00
  %320 = fadd double %310, %319
  %321 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %322 = load i64* %321, align 8
  %323 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %324 = load i64* %323, align 8
  %325 = add i64 %322, %324
  %326 = add i64 %325, 331776
  %327 = getelementptr inbounds double addrspace(1)* %4, i64 %326
  %328 = load double addrspace(1)* %327, align 8
  %329 = fsub double %43, %328
  %330 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %331 = load i64* %330, align 8
  %332 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %333 = load i64* %332, align 8
  %334 = add i64 %331, %333
  %335 = add i64 %334, 552960
  %336 = getelementptr inbounds double addrspace(1)* %4, i64 %335
  %337 = load double addrspace(1)* %336, align 8
  %338 = fsub double %329, %337
  %339 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %340 = load i64* %339, align 8
  %341 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %342 = load i64* %341, align 8
  %343 = add i64 %340, %342
  %344 = add i64 %343, 1105920
  %345 = getelementptr inbounds double addrspace(1)* %4, i64 %344
  %346 = load double addrspace(1)* %345, align 8
  %347 = fmul double %346, 2.500000e-01
  %348 = fsub double %338, %347
  %349 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %350 = load i64* %349, align 8
  %351 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %352 = load i64* %351, align 8
  %353 = add i64 %350, %352
  %354 = add i64 %353, 1216512
  %355 = getelementptr inbounds double addrspace(1)* %4, i64 %354
  %356 = load double addrspace(1)* %355, align 8
  %357 = fmul double %356, 5.000000e-01
  %358 = fadd double %348, %357
  %359 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %360 = load i64* %359, align 8
  %361 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %362 = load i64* %361, align 8
  %363 = add i64 %360, %362
  %364 = add i64 %363, 1658880
  %365 = getelementptr inbounds double addrspace(1)* %4, i64 %364
  %366 = load double addrspace(1)* %365, align 8
  %367 = fmul double %366, 5.000000e-01
  %368 = fadd double %358, %367
  %369 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %370 = load i64* %369, align 8
  %371 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %372 = load i64* %371, align 8
  %373 = add i64 %370, %372
  %374 = add i64 %373, 2322432
  %375 = getelementptr inbounds double addrspace(1)* %4, i64 %374
  %376 = load double addrspace(1)* %375, align 8
  %377 = fsub double %368, %376
  %378 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %379 = load i64* %378, align 8
  %380 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %381 = load i64* %380, align 8
  %382 = add i64 %379, %381
  %383 = add i64 %382, 1437696
  %384 = getelementptr inbounds double addrspace(1)* %4, i64 %383
  %385 = load double addrspace(1)* %384, align 8
  %386 = fmul double %385, 2.000000e+00
  %387 = fadd double %377, %386
  %388 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %389 = load i64* %388, align 8
  %390 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %391 = load i64* %390, align 8
  %392 = add i64 %389, %391
  %393 = add i64 %392, 1548288
  %394 = getelementptr inbounds double addrspace(1)* %4, i64 %393
  %395 = load double addrspace(1)* %394, align 8
  %396 = fmul double %395, 2.000000e+00
  %397 = fadd double %387, %396
  %398 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %399 = load i64* %398, align 8
  %400 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %401 = load i64* %400, align 8
  %402 = add i64 %399, %401
  %403 = getelementptr inbounds double addrspace(1)* %4, i64 %402
  %404 = load double addrspace(1)* %403, align 8
  %405 = fadd double %43, %404
  %406 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %407 = load i64* %406, align 8
  %408 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %409 = load i64* %408, align 8
  %410 = add i64 %407, %409
  %411 = add i64 %410, 331776
  %412 = getelementptr inbounds double addrspace(1)* %4, i64 %411
  %413 = load double addrspace(1)* %412, align 8
  %414 = fmul double %413, 5.000000e+00
  %415 = fadd double %405, %414
  %416 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %417 = load i64* %416, align 8
  %418 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %419 = load i64* %418, align 8
  %420 = add i64 %417, %419
  %421 = add i64 %420, 552960
  %422 = getelementptr inbounds double addrspace(1)* %4, i64 %421
  %423 = load double addrspace(1)* %422, align 8
  %424 = fmul double %423, 5.000000e+00
  %425 = fadd double %415, %424
  %426 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %427 = load i64* %426, align 8
  %428 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %429 = load i64* %428, align 8
  %430 = add i64 %427, %429
  %431 = add i64 %430, 995328
  %432 = getelementptr inbounds double addrspace(1)* %4, i64 %431
  %433 = load double addrspace(1)* %432, align 8
  %434 = fadd double %425, %433
  %435 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %436 = load i64* %435, align 8
  %437 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %438 = load i64* %437, align 8
  %439 = add i64 %436, %438
  %440 = add i64 %439, 1105920
  %441 = getelementptr inbounds double addrspace(1)* %4, i64 %440
  %442 = load double addrspace(1)* %441, align 8
  %443 = fmul double %442, 5.000000e-01
  %444 = fadd double %434, %443
  %445 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %446 = load i64* %445, align 8
  %447 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %448 = load i64* %447, align 8
  %449 = add i64 %446, %448
  %450 = add i64 %449, 1216512
  %451 = getelementptr inbounds double addrspace(1)* %4, i64 %450
  %452 = load double addrspace(1)* %451, align 8
  %453 = fmul double %452, 2.500000e+00
  %454 = fadd double %444, %453
  %455 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %456 = load i64* %455, align 8
  %457 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %458 = load i64* %457, align 8
  %459 = add i64 %456, %458
  %460 = add i64 %459, 1658880
  %461 = getelementptr inbounds double addrspace(1)* %4, i64 %460
  %462 = load double addrspace(1)* %461, align 8
  %463 = fmul double %462, 2.000000e+00
  %464 = fadd double %454, %463
  %465 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %466 = load i64* %465, align 8
  %467 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %468 = load i64* %467, align 8
  %469 = add i64 %466, %468
  %470 = add i64 %469, 1437696
  %471 = getelementptr inbounds double addrspace(1)* %4, i64 %470
  %472 = load double addrspace(1)* %471, align 8
  %473 = fmul double %472, 2.000000e+00
  %474 = fadd double %464, %473
  %475 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %476 = load i64* %475, align 8
  %477 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %478 = load i64* %477, align 8
  %479 = add i64 %476, %478
  %480 = add i64 %479, 1548288
  %481 = getelementptr inbounds double addrspace(1)* %4, i64 %480
  %482 = load double addrspace(1)* %481, align 8
  %483 = fmul double %482, 2.000000e+00
  %484 = fadd double %474, %483
  %485 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %486 = load i64* %485, align 8
  %487 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %488 = load i64* %487, align 8
  %489 = add i64 %486, %488
  %490 = getelementptr inbounds double addrspace(1)* %4, i64 %489
  %491 = load double addrspace(1)* %490, align 8
  %492 = fadd double %43, %491
  %493 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %494 = load i64* %493, align 8
  %495 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %496 = load i64* %495, align 8
  %497 = add i64 %494, %496
  %498 = add i64 %497, 552960
  %499 = getelementptr inbounds double addrspace(1)* %4, i64 %498
  %500 = load double addrspace(1)* %499, align 8
  %501 = fmul double %500, 5.000000e+00
  %502 = fadd double %492, %501
  %503 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %504 = load i64* %503, align 8
  %505 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %506 = load i64* %505, align 8
  %507 = add i64 %504, %506
  %508 = add i64 %507, 995328
  %509 = getelementptr inbounds double addrspace(1)* %4, i64 %508
  %510 = load double addrspace(1)* %509, align 8
  %511 = fadd double %502, %510
  %512 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %513 = load i64* %512, align 8
  %514 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %515 = load i64* %514, align 8
  %516 = add i64 %513, %515
  %517 = add i64 %516, 1105920
  %518 = getelementptr inbounds double addrspace(1)* %4, i64 %517
  %519 = load double addrspace(1)* %518, align 8
  %520 = fmul double %519, 5.000000e-01
  %521 = fadd double %511, %520
  %522 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %523 = load i64* %522, align 8
  %524 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %525 = load i64* %524, align 8
  %526 = add i64 %523, %525
  %527 = add i64 %526, 1216512
  %528 = getelementptr inbounds double addrspace(1)* %4, i64 %527
  %529 = load double addrspace(1)* %528, align 8
  %530 = fadd double %521, %529
  %531 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %532 = load i64* %531, align 8
  %533 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %534 = load i64* %533, align 8
  %535 = add i64 %532, %534
  %536 = add i64 %535, 1658880
  %537 = getelementptr inbounds double addrspace(1)* %4, i64 %536
  %538 = load double addrspace(1)* %537, align 8
  %539 = fmul double %538, 2.000000e+00
  %540 = fadd double %530, %539
  %541 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %542 = load i64* %541, align 8
  %543 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %544 = load i64* %543, align 8
  %545 = add i64 %542, %544
  %546 = add i64 %545, 442368
  %547 = getelementptr inbounds double addrspace(1)* %7, i64 %546
  %548 = load double addrspace(1)* %547, align 8
  %549 = fmul double %548, %108
  %550 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %551 = load i64* %550, align 8
  %552 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %553 = load i64* %552, align 8
  %554 = add i64 %551, %553
  %555 = add i64 %554, 110592
  %556 = getelementptr inbounds double addrspace(1)* %4, i64 %555
  %557 = load double addrspace(1)* %556, align 8
  %558 = fmul double %549, %557
  %559 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %560 = load i64* %559, align 8
  %561 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %562 = load i64* %561, align 8
  %563 = add i64 %560, %562
  %564 = add i64 %563, 110592
  %565 = getelementptr inbounds double addrspace(1)* %4, i64 %564
  %566 = load double addrspace(1)* %565, align 8
  %567 = fmul double %558, %566
  %568 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %569 = load i64* %568, align 8
  %570 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %571 = load i64* %570, align 8
  %572 = add i64 %569, %571
  %573 = add i64 %572, 442368
  %574 = getelementptr inbounds double addrspace(1)* %7, i64 %573
  store double %567, double addrspace(1)* %574, align 8
  %575 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %576 = load i64* %575, align 8
  %577 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %578 = load i64* %577, align 8
  %579 = add i64 %576, %578
  %580 = add i64 %579, 442368
  %581 = getelementptr inbounds double addrspace(1)* %10, i64 %580
  %582 = load double addrspace(1)* %581, align 8
  %583 = fmul double %582, %108
  %584 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %585 = load i64* %584, align 8
  %586 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %587 = load i64* %586, align 8
  %588 = add i64 %585, %587
  %589 = getelementptr inbounds double addrspace(1)* %4, i64 %588
  %590 = load double addrspace(1)* %589, align 8
  %591 = fmul double %583, %590
  %592 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %593 = load i64* %592, align 8
  %594 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %595 = load i64* %594, align 8
  %596 = add i64 %593, %595
  %597 = add i64 %596, 442368
  %598 = getelementptr inbounds double addrspace(1)* %10, i64 %597
  store double %591, double addrspace(1)* %598, align 8
  %599 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %600 = load i64* %599, align 8
  %601 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %602 = load i64* %601, align 8
  %603 = add i64 %600, %602
  %604 = add i64 %603, 884736
  %605 = getelementptr inbounds double addrspace(1)* %7, i64 %604
  %606 = load double addrspace(1)* %605, align 8
  %607 = fmul double %606, %166
  %608 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %609 = load i64* %608, align 8
  %610 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %611 = load i64* %610, align 8
  %612 = add i64 %609, %611
  %613 = add i64 %612, 110592
  %614 = getelementptr inbounds double addrspace(1)* %4, i64 %613
  %615 = load double addrspace(1)* %614, align 8
  %616 = fmul double %607, %615
  %617 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %618 = load i64* %617, align 8
  %619 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %620 = load i64* %619, align 8
  %621 = add i64 %618, %620
  %622 = add i64 %621, 442368
  %623 = getelementptr inbounds double addrspace(1)* %4, i64 %622
  %624 = load double addrspace(1)* %623, align 8
  %625 = fmul double %616, %624
  %626 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %627 = load i64* %626, align 8
  %628 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %629 = load i64* %628, align 8
  %630 = add i64 %627, %629
  %631 = add i64 %630, 884736
  %632 = getelementptr inbounds double addrspace(1)* %7, i64 %631
  store double %625, double addrspace(1)* %632, align 8
  %633 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %634 = load i64* %633, align 8
  %635 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %636 = load i64* %635, align 8
  %637 = add i64 %634, %636
  %638 = add i64 %637, 884736
  %639 = getelementptr inbounds double addrspace(1)* %10, i64 %638
  %640 = load double addrspace(1)* %639, align 8
  %641 = fmul double %640, %166
  %642 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %643 = load i64* %642, align 8
  %644 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %645 = load i64* %644, align 8
  %646 = add i64 %643, %645
  %647 = add i64 %646, 552960
  %648 = getelementptr inbounds double addrspace(1)* %4, i64 %647
  %649 = load double addrspace(1)* %648, align 8
  %650 = fmul double %641, %649
  %651 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %652 = load i64* %651, align 8
  %653 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %654 = load i64* %653, align 8
  %655 = add i64 %652, %654
  %656 = add i64 %655, 884736
  %657 = getelementptr inbounds double addrspace(1)* %10, i64 %656
  store double %650, double addrspace(1)* %657, align 8
  %658 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %659 = load i64* %658, align 8
  %660 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %661 = load i64* %660, align 8
  %662 = add i64 %659, %661
  %663 = add i64 %662, 995328
  %664 = getelementptr inbounds double addrspace(1)* %7, i64 %663
  %665 = load double addrspace(1)* %664, align 8
  %666 = fmul double %665, %242
  %667 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %668 = load i64* %667, align 8
  %669 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %670 = load i64* %669, align 8
  %671 = add i64 %668, %670
  %672 = add i64 %671, 221184
  %673 = getelementptr inbounds double addrspace(1)* %4, i64 %672
  %674 = load double addrspace(1)* %673, align 8
  %675 = fmul double %666, %674
  %676 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %677 = load i64* %676, align 8
  %678 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %679 = load i64* %678, align 8
  %680 = add i64 %677, %679
  %681 = add i64 %680, 110592
  %682 = getelementptr inbounds double addrspace(1)* %4, i64 %681
  %683 = load double addrspace(1)* %682, align 8
  %684 = fmul double %675, %683
  %685 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %686 = load i64* %685, align 8
  %687 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %688 = load i64* %687, align 8
  %689 = add i64 %686, %688
  %690 = add i64 %689, 995328
  %691 = getelementptr inbounds double addrspace(1)* %7, i64 %690
  store double %684, double addrspace(1)* %691, align 8
  %692 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %693 = load i64* %692, align 8
  %694 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %695 = load i64* %694, align 8
  %696 = add i64 %693, %695
  %697 = add i64 %696, 995328
  %698 = getelementptr inbounds double addrspace(1)* %10, i64 %697
  %699 = load double addrspace(1)* %698, align 8
  %700 = fmul double %699, %242
  %701 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %702 = load i64* %701, align 8
  %703 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %704 = load i64* %703, align 8
  %705 = add i64 %702, %704
  %706 = add i64 %705, 442368
  %707 = getelementptr inbounds double addrspace(1)* %4, i64 %706
  %708 = load double addrspace(1)* %707, align 8
  %709 = fmul double %700, %708
  %710 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %711 = load i64* %710, align 8
  %712 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %713 = load i64* %712, align 8
  %714 = add i64 %711, %713
  %715 = add i64 %714, 995328
  %716 = getelementptr inbounds double addrspace(1)* %10, i64 %715
  store double %709, double addrspace(1)* %716, align 8
  %717 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %718 = load i64* %717, align 8
  %719 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %720 = load i64* %719, align 8
  %721 = add i64 %718, %720
  %722 = add i64 %721, 1105920
  %723 = getelementptr inbounds double addrspace(1)* %7, i64 %722
  %724 = load double addrspace(1)* %723, align 8
  %725 = fmul double %724, %320
  %726 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %727 = load i64* %726, align 8
  %728 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %729 = load i64* %728, align 8
  %730 = add i64 %727, %729
  %731 = add i64 %730, 221184
  %732 = getelementptr inbounds double addrspace(1)* %4, i64 %731
  %733 = load double addrspace(1)* %732, align 8
  %734 = fmul double %725, %733
  %735 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %736 = load i64* %735, align 8
  %737 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %738 = load i64* %737, align 8
  %739 = add i64 %736, %738
  %740 = add i64 %739, 221184
  %741 = getelementptr inbounds double addrspace(1)* %4, i64 %740
  %742 = load double addrspace(1)* %741, align 8
  %743 = fmul double %734, %742
  %744 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %745 = load i64* %744, align 8
  %746 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %747 = load i64* %746, align 8
  %748 = add i64 %745, %747
  %749 = add i64 %748, 1105920
  %750 = getelementptr inbounds double addrspace(1)* %7, i64 %749
  store double %743, double addrspace(1)* %750, align 8
  %751 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %752 = load i64* %751, align 8
  %753 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %754 = load i64* %753, align 8
  %755 = add i64 %752, %754
  %756 = add i64 %755, 1105920
  %757 = getelementptr inbounds double addrspace(1)* %10, i64 %756
  %758 = load double addrspace(1)* %757, align 8
  %759 = fmul double %758, %320
  %760 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %761 = load i64* %760, align 8
  %762 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %763 = load i64* %762, align 8
  %764 = add i64 %761, %763
  %765 = add i64 %764, 331776
  %766 = getelementptr inbounds double addrspace(1)* %4, i64 %765
  %767 = load double addrspace(1)* %766, align 8
  %768 = fmul double %759, %767
  %769 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %770 = load i64* %769, align 8
  %771 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %772 = load i64* %771, align 8
  %773 = add i64 %770, %772
  %774 = add i64 %773, 1105920
  %775 = getelementptr inbounds double addrspace(1)* %10, i64 %774
  store double %768, double addrspace(1)* %775, align 8
  %776 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %777 = load i64* %776, align 8
  %778 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %779 = load i64* %778, align 8
  %780 = add i64 %777, %779
  %781 = add i64 %780, 1216512
  %782 = getelementptr inbounds double addrspace(1)* %7, i64 %781
  %783 = load double addrspace(1)* %782, align 8
  %784 = fmul double %783, %397
  %785 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %786 = load i64* %785, align 8
  %787 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %788 = load i64* %787, align 8
  %789 = add i64 %786, %788
  %790 = add i64 %789, 110592
  %791 = getelementptr inbounds double addrspace(1)* %4, i64 %790
  %792 = load double addrspace(1)* %791, align 8
  %793 = fmul double %784, %792
  %794 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %795 = load i64* %794, align 8
  %796 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %797 = load i64* %796, align 8
  %798 = add i64 %795, %797
  %799 = add i64 %798, 331776
  %800 = getelementptr inbounds double addrspace(1)* %4, i64 %799
  %801 = load double addrspace(1)* %800, align 8
  %802 = fmul double %793, %801
  %803 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %804 = load i64* %803, align 8
  %805 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %806 = load i64* %805, align 8
  %807 = add i64 %804, %806
  %808 = add i64 %807, 1216512
  %809 = getelementptr inbounds double addrspace(1)* %7, i64 %808
  store double %802, double addrspace(1)* %809, align 8
  %810 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %811 = load i64* %810, align 8
  %812 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %813 = load i64* %812, align 8
  %814 = add i64 %811, %813
  %815 = add i64 %814, 1216512
  %816 = getelementptr inbounds double addrspace(1)* %10, i64 %815
  %817 = load double addrspace(1)* %816, align 8
  %818 = fmul double %817, %397
  %819 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %820 = load i64* %819, align 8
  %821 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %822 = load i64* %821, align 8
  %823 = add i64 %820, %822
  %824 = add i64 %823, 663552
  %825 = getelementptr inbounds double addrspace(1)* %4, i64 %824
  %826 = load double addrspace(1)* %825, align 8
  %827 = fmul double %818, %826
  %828 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %829 = load i64* %828, align 8
  %830 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %831 = load i64* %830, align 8
  %832 = add i64 %829, %831
  %833 = add i64 %832, 1216512
  %834 = getelementptr inbounds double addrspace(1)* %10, i64 %833
  store double %827, double addrspace(1)* %834, align 8
  %835 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %836 = load i64* %835, align 8
  %837 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %838 = load i64* %837, align 8
  %839 = add i64 %836, %838
  %840 = add i64 %839, 3096576
  %841 = getelementptr inbounds double addrspace(1)* %7, i64 %840
  %842 = load double addrspace(1)* %841, align 8
  %843 = fmul double %842, %484
  %844 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %845 = load i64* %844, align 8
  %846 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %847 = load i64* %846, align 8
  %848 = add i64 %845, %847
  %849 = add i64 %848, 1105920
  %850 = getelementptr inbounds double addrspace(1)* %4, i64 %849
  %851 = load double addrspace(1)* %850, align 8
  %852 = fmul double %843, %851
  %853 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %854 = load i64* %853, align 8
  %855 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %856 = load i64* %855, align 8
  %857 = add i64 %854, %856
  %858 = add i64 %857, 221184
  %859 = getelementptr inbounds double addrspace(1)* %4, i64 %858
  %860 = load double addrspace(1)* %859, align 8
  %861 = fmul double %852, %860
  %862 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %863 = load i64* %862, align 8
  %864 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %865 = load i64* %864, align 8
  %866 = add i64 %863, %865
  %867 = add i64 %866, 3096576
  %868 = getelementptr inbounds double addrspace(1)* %7, i64 %867
  store double %861, double addrspace(1)* %868, align 8
  %869 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %870 = load i64* %869, align 8
  %871 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %872 = load i64* %871, align 8
  %873 = add i64 %870, %872
  %874 = add i64 %873, 3096576
  %875 = getelementptr inbounds double addrspace(1)* %10, i64 %874
  %876 = load double addrspace(1)* %875, align 8
  %877 = fmul double %876, %484
  %878 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %879 = load i64* %878, align 8
  %880 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %881 = load i64* %880, align 8
  %882 = add i64 %879, %881
  %883 = add i64 %882, 1216512
  %884 = getelementptr inbounds double addrspace(1)* %4, i64 %883
  %885 = load double addrspace(1)* %884, align 8
  %886 = fmul double %877, %885
  %887 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %888 = load i64* %887, align 8
  %889 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %890 = load i64* %889, align 8
  %891 = add i64 %888, %890
  %892 = add i64 %891, 3096576
  %893 = getelementptr inbounds double addrspace(1)* %10, i64 %892
  store double %886, double addrspace(1)* %893, align 8
  %894 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %895 = load i64* %894, align 8
  %896 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %897 = load i64* %896, align 8
  %898 = add i64 %895, %897
  %899 = add i64 %898, 4976640
  %900 = getelementptr inbounds double addrspace(1)* %7, i64 %899
  %901 = load double addrspace(1)* %900, align 8
  %902 = fmul double %901, %242
  %903 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %904 = load i64* %903, align 8
  %905 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %906 = load i64* %905, align 8
  %907 = add i64 %904, %906
  %908 = add i64 %907, 4976640
  %909 = getelementptr inbounds double addrspace(1)* %7, i64 %908
  store double %902, double addrspace(1)* %909, align 8
  %910 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %911 = load i64* %910, align 8
  %912 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %913 = load i64* %912, align 8
  %914 = add i64 %911, %913
  %915 = add i64 %914, 4976640
  %916 = getelementptr inbounds double addrspace(1)* %10, i64 %915
  %917 = load double addrspace(1)* %916, align 8
  %918 = fmul double %917, %242
  %919 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %920 = load i64* %919, align 8
  %921 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %922 = load i64* %921, align 8
  %923 = add i64 %920, %922
  %924 = add i64 %923, 1105920
  %925 = getelementptr inbounds double addrspace(1)* %4, i64 %924
  %926 = load double addrspace(1)* %925, align 8
  %927 = fmul double %918, %926
  %928 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %929 = load i64* %928, align 8
  %930 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %931 = load i64* %930, align 8
  %932 = add i64 %929, %931
  %933 = add i64 %932, 110592
  %934 = getelementptr inbounds double addrspace(1)* %4, i64 %933
  %935 = load double addrspace(1)* %934, align 8
  %936 = fmul double %927, %935
  %937 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %938 = load i64* %937, align 8
  %939 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %940 = load i64* %939, align 8
  %941 = add i64 %938, %940
  %942 = add i64 %941, 4976640
  %943 = getelementptr inbounds double addrspace(1)* %10, i64 %942
  store double %936, double addrspace(1)* %943, align 8
  %944 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %945 = load i64* %944, align 8
  %946 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %947 = load i64* %946, align 8
  %948 = add i64 %945, %947
  %949 = add i64 %948, 13271040
  %950 = getelementptr inbounds double addrspace(1)* %7, i64 %949
  %951 = load double addrspace(1)* %950, align 8
  %952 = fmul double %951, %43
  %953 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %954 = load i64* %953, align 8
  %955 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %956 = load i64* %955, align 8
  %957 = add i64 %954, %956
  %958 = add i64 %957, 1437696
  %959 = getelementptr inbounds double addrspace(1)* %4, i64 %958
  %960 = load double addrspace(1)* %959, align 8
  %961 = fmul double %952, %960
  %962 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %963 = load i64* %962, align 8
  %964 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %965 = load i64* %964, align 8
  %966 = add i64 %963, %965
  %967 = add i64 %966, 884736
  %968 = getelementptr inbounds double addrspace(1)* %4, i64 %967
  %969 = load double addrspace(1)* %968, align 8
  %970 = fmul double %961, %969
  %971 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %972 = load i64* %971, align 8
  %973 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %974 = load i64* %973, align 8
  %975 = add i64 %972, %974
  %976 = add i64 %975, 13271040
  %977 = getelementptr inbounds double addrspace(1)* %7, i64 %976
  store double %970, double addrspace(1)* %977, align 8
  %978 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %979 = load i64* %978, align 8
  %980 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %981 = load i64* %980, align 8
  %982 = add i64 %979, %981
  %983 = add i64 %982, 13271040
  %984 = getelementptr inbounds double addrspace(1)* %10, i64 %983
  %985 = load double addrspace(1)* %984, align 8
  %986 = fmul double %985, %43
  %987 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %988 = load i64* %987, align 8
  %989 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %990 = load i64* %989, align 8
  %991 = add i64 %988, %990
  %992 = add i64 %991, 2101248
  %993 = getelementptr inbounds double addrspace(1)* %4, i64 %992
  %994 = load double addrspace(1)* %993, align 8
  %995 = fmul double %986, %994
  %996 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %997 = load i64* %996, align 8
  %998 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %999 = load i64* %998, align 8
  %1000 = add i64 %997, %999
  %1001 = add i64 %1000, 13271040
  %1002 = getelementptr inbounds double addrspace(1)* %10, i64 %1001
  store double %995, double addrspace(1)* %1002, align 8
  %1003 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1004 = load i64* %1003, align 8
  %1005 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1006 = load i64* %1005, align 8
  %1007 = add i64 %1004, %1006
  %1008 = add i64 %1007, 1327104
  %1009 = getelementptr inbounds double addrspace(1)* %13, i64 %1008
  %1010 = load double addrspace(1)* %1009, align 8
  %1011 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1012 = load i64* %1011, align 8
  %1013 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1014 = load i64* %1013, align 8
  %1015 = add i64 %1012, %1014
  %1016 = add i64 %1015, 13824000
  %1017 = getelementptr inbounds double addrspace(1)* %7, i64 %1016
  %1018 = load double addrspace(1)* %1017, align 8
  %1019 = fdiv double 1.000000e+00, %1018
  %1020 = fmul double %242, %1019
  %1021 = fmul double %1010, %1020
  %1022 = fadd double %1021, 1.000000e+00
  %1023 = fdiv double 1.000000e+00, %1022
  %1024 = fmul double %1021, %1023
  %1025 = call double @_Z4fmaxdd(double %1021, double 1.000000e-200) nounwind
  %1026 = call double @_Z5log10d(double %1025) nounwind
  %1027 = fmul double %33, 0xBF43323D7CECF427
  %1028 = call double @_Z3expd(double %1027) nounwind
  %1029 = fmul double %1028, 6.630000e-01
  %1030 = fmul double %33, -3.125000e-04
  %1031 = call double @_Z3expd(double %1030) nounwind
  %1032 = fmul double %1031, 3.370000e-01
  %1033 = fadd double %1029, %1032
  %1034 = fdiv double 1.000000e+00, %33
  %1035 = fmul double %1034, -4.131000e+03
  %1036 = call double @_Z3expd(double %1035) nounwind
  %1037 = fadd double %1033, %1036
  %1038 = call double @_Z4fmaxdd(double %1037, double 1.000000e-200) nounwind
  %1039 = call double @_Z5log10d(double %1038) nounwind
  %1040 = fmul double %1039, 1.270000e+00
  %1041 = fsub double 7.500000e-01, %1040
  %1042 = fmul double %1039, 6.700000e-01
  %1043 = fadd double %1042, 4.000000e-01
  %1044 = fsub double %1026, %1043
  %1045 = fmul double %1044, 1.400000e-01
  %1046 = fsub double %1041, %1045
  %1047 = fdiv double 1.000000e+00, %1046
  %1048 = fmul double %1044, %1047
  %1049 = fmul double %1048, %1048
  %1050 = fadd double %1049, 1.000000e+00
  %1051 = fdiv double 1.000000e+00, %1050
  %1052 = fmul double %1039, %1051
  %1053 = call double @_Z5exp10d(double %1052) nounwind
  %1054 = fmul double %1053, %1024
  %1055 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1056 = load i64* %1055, align 8
  %1057 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1058 = load i64* %1057, align 8
  %1059 = add i64 %1056, %1058
  %1060 = add i64 %1059, 13824000
  %1061 = getelementptr inbounds double addrspace(1)* %7, i64 %1060
  %1062 = load double addrspace(1)* %1061, align 8
  %1063 = fmul double %1062, %1054
  %1064 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1065 = load i64* %1064, align 8
  %1066 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1067 = load i64* %1066, align 8
  %1068 = add i64 %1065, %1067
  %1069 = add i64 %1068, 13824000
  %1070 = getelementptr inbounds double addrspace(1)* %7, i64 %1069
  store double %1063, double addrspace(1)* %1070, align 8
  %1071 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1072 = load i64* %1071, align 8
  %1073 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1074 = load i64* %1073, align 8
  %1075 = add i64 %1072, %1074
  %1076 = add i64 %1075, 13824000
  %1077 = getelementptr inbounds double addrspace(1)* %10, i64 %1076
  %1078 = load double addrspace(1)* %1077, align 8
  %1079 = fmul double %1078, %1054
  %1080 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1081 = load i64* %1080, align 8
  %1082 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1083 = load i64* %1082, align 8
  %1084 = add i64 %1081, %1083
  %1085 = add i64 %1084, 13824000
  %1086 = getelementptr inbounds double addrspace(1)* %10, i64 %1085
  store double %1079, double addrspace(1)* %1086, align 8
  %1087 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1088 = load i64* %1087, align 8
  %1089 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1090 = load i64* %1089, align 8
  %1091 = add i64 %1088, %1090
  %1092 = add i64 %1091, 1437696
  %1093 = getelementptr inbounds double addrspace(1)* %13, i64 %1092
  %1094 = load double addrspace(1)* %1093, align 8
  %1095 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1096 = load i64* %1095, align 8
  %1097 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1098 = load i64* %1097, align 8
  %1099 = add i64 %1096, %1098
  %1100 = add i64 %1099, 14487552
  %1101 = getelementptr inbounds double addrspace(1)* %7, i64 %1100
  %1102 = load double addrspace(1)* %1101, align 8
  %1103 = fdiv double 1.000000e+00, %1102
  %1104 = fmul double %242, %1103
  %1105 = fmul double %1094, %1104
  %1106 = fadd double %1105, 1.000000e+00
  %1107 = fdiv double 1.000000e+00, %1106
  %1108 = fmul double %1105, %1107
  %1109 = call double @_Z4fmaxdd(double %1105, double 1.000000e-200) nounwind
  %1110 = call double @_Z5log10d(double %1109) nounwind
  %1111 = fmul double %33, 0xBF73BD60D9232955
  %1112 = call double @_Z3expd(double %1111) nounwind
  %1113 = fmul double %1112, 2.180000e-01
  %1114 = fmul double %33, 0xBF389C1E60B57F60
  %1115 = call double @_Z3expd(double %1114) nounwind
  %1116 = fmul double %1115, 7.820000e-01
  %1117 = fadd double %1113, %1116
  %1118 = fmul double %1034, -6.095000e+03
  %1119 = call double @_Z3expd(double %1118) nounwind
  %1120 = fadd double %1117, %1119
  %1121 = call double @_Z4fmaxdd(double %1120, double 1.000000e-200) nounwind
  %1122 = call double @_Z5log10d(double %1121) nounwind
  %1123 = fmul double %1122, 1.270000e+00
  %1124 = fsub double 7.500000e-01, %1123
  %1125 = fmul double %1122, 6.700000e-01
  %1126 = fadd double %1125, 4.000000e-01
  %1127 = fsub double %1110, %1126
  %1128 = fmul double %1127, 1.400000e-01
  %1129 = fsub double %1124, %1128
  %1130 = fdiv double 1.000000e+00, %1129
  %1131 = fmul double %1127, %1130
  %1132 = fmul double %1131, %1131
  %1133 = fadd double %1132, 1.000000e+00
  %1134 = fdiv double 1.000000e+00, %1133
  %1135 = fmul double %1122, %1134
  %1136 = call double @_Z5exp10d(double %1135) nounwind
  %1137 = fmul double %1136, %1108
  %1138 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1139 = load i64* %1138, align 8
  %1140 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1141 = load i64* %1140, align 8
  %1142 = add i64 %1139, %1141
  %1143 = add i64 %1142, 14487552
  %1144 = getelementptr inbounds double addrspace(1)* %7, i64 %1143
  %1145 = load double addrspace(1)* %1144, align 8
  %1146 = fmul double %1145, %1137
  %1147 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1148 = load i64* %1147, align 8
  %1149 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1150 = load i64* %1149, align 8
  %1151 = add i64 %1148, %1150
  %1152 = add i64 %1151, 14487552
  %1153 = getelementptr inbounds double addrspace(1)* %7, i64 %1152
  store double %1146, double addrspace(1)* %1153, align 8
  %1154 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1155 = load i64* %1154, align 8
  %1156 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1157 = load i64* %1156, align 8
  %1158 = add i64 %1155, %1157
  %1159 = add i64 %1158, 14487552
  %1160 = getelementptr inbounds double addrspace(1)* %10, i64 %1159
  %1161 = load double addrspace(1)* %1160, align 8
  %1162 = fmul double %1161, %1137
  %1163 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1164 = load i64* %1163, align 8
  %1165 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1166 = load i64* %1165, align 8
  %1167 = add i64 %1164, %1166
  %1168 = add i64 %1167, 14487552
  %1169 = getelementptr inbounds double addrspace(1)* %10, i64 %1168
  store double %1162, double addrspace(1)* %1169, align 8
  %1170 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1171 = load i64* %1170, align 8
  %1172 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1173 = load i64* %1172, align 8
  %1174 = add i64 %1171, %1173
  %1175 = add i64 %1174, 1548288
  %1176 = getelementptr inbounds double addrspace(1)* %13, i64 %1175
  %1177 = load double addrspace(1)* %1176, align 8
  %1178 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1179 = load i64* %1178, align 8
  %1180 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1181 = load i64* %1180, align 8
  %1182 = add i64 %1179, %1181
  %1183 = add i64 %1182, 15925248
  %1184 = getelementptr inbounds double addrspace(1)* %7, i64 %1183
  %1185 = load double addrspace(1)* %1184, align 8
  %1186 = fdiv double 1.000000e+00, %1185
  %1187 = fmul double %242, %1186
  %1188 = fmul double %1177, %1187
  %1189 = fadd double %1188, 1.000000e+00
  %1190 = fdiv double 1.000000e+00, %1189
  %1191 = fmul double %1188, %1190
  %1192 = call double @_Z4fmaxdd(double %1188, double 1.000000e-200) nounwind
  %1193 = call double @_Z5log10d(double %1192) nounwind
  %1194 = fmul double %33, 0xBF48715A79FC1ABC
  %1195 = call double @_Z3expd(double %1194) nounwind
  %1196 = fmul double %1195, 8.250000e-01
  %1197 = fmul double %33, 0xBEF179EC9CBD821E
  %1198 = call double @_Z3expd(double %1197) nounwind
  %1199 = fmul double %1198, 1.750000e-01
  %1200 = fadd double %1196, %1199
  %1201 = fmul double %1034, -1.013980e+04
  %1202 = call double @_Z3expd(double %1201) nounwind
  %1203 = fadd double %1200, %1202
  %1204 = call double @_Z4fmaxdd(double %1203, double 1.000000e-200) nounwind
  %1205 = call double @_Z5log10d(double %1204) nounwind
  %1206 = fmul double %1205, 1.270000e+00
  %1207 = fsub double 7.500000e-01, %1206
  %1208 = fmul double %1205, 6.700000e-01
  %1209 = fadd double %1208, 4.000000e-01
  %1210 = fsub double %1193, %1209
  %1211 = fmul double %1210, 1.400000e-01
  %1212 = fsub double %1207, %1211
  %1213 = fdiv double 1.000000e+00, %1212
  %1214 = fmul double %1210, %1213
  %1215 = fmul double %1214, %1214
  %1216 = fadd double %1215, 1.000000e+00
  %1217 = fdiv double 1.000000e+00, %1216
  %1218 = fmul double %1205, %1217
  %1219 = call double @_Z5exp10d(double %1218) nounwind
  %1220 = fmul double %1219, %1191
  %1221 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1222 = load i64* %1221, align 8
  %1223 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1224 = load i64* %1223, align 8
  %1225 = add i64 %1222, %1224
  %1226 = add i64 %1225, 15925248
  %1227 = getelementptr inbounds double addrspace(1)* %7, i64 %1226
  %1228 = load double addrspace(1)* %1227, align 8
  %1229 = fmul double %1228, %1220
  %1230 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1231 = load i64* %1230, align 8
  %1232 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1233 = load i64* %1232, align 8
  %1234 = add i64 %1231, %1233
  %1235 = add i64 %1234, 15925248
  %1236 = getelementptr inbounds double addrspace(1)* %7, i64 %1235
  store double %1229, double addrspace(1)* %1236, align 8
  %1237 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1238 = load i64* %1237, align 8
  %1239 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1240 = load i64* %1239, align 8
  %1241 = add i64 %1238, %1240
  %1242 = add i64 %1241, 15925248
  %1243 = getelementptr inbounds double addrspace(1)* %10, i64 %1242
  %1244 = load double addrspace(1)* %1243, align 8
  %1245 = fmul double %1244, %1220
  %1246 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1247 = load i64* %1246, align 8
  %1248 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1249 = load i64* %1248, align 8
  %1250 = add i64 %1247, %1249
  %1251 = add i64 %1250, 15925248
  %1252 = getelementptr inbounds double addrspace(1)* %10, i64 %1251
  store double %1245, double addrspace(1)* %1252, align 8
  %1253 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1254 = load i64* %1253, align 8
  %1255 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1256 = load i64* %1255, align 8
  %1257 = add i64 %1254, %1256
  %1258 = add i64 %1257, 1658880
  %1259 = getelementptr inbounds double addrspace(1)* %13, i64 %1258
  %1260 = load double addrspace(1)* %1259, align 8
  %1261 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1262 = load i64* %1261, align 8
  %1263 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1264 = load i64* %1263, align 8
  %1265 = add i64 %1262, %1264
  %1266 = add i64 %1265, 16257024
  %1267 = getelementptr inbounds double addrspace(1)* %7, i64 %1266
  %1268 = load double addrspace(1)* %1267, align 8
  %1269 = fdiv double 1.000000e+00, %1268
  %1270 = fmul double %242, %1269
  %1271 = fmul double %1260, %1270
  %1272 = fadd double %1271, 1.000000e+00
  %1273 = fdiv double 1.000000e+00, %1272
  %1274 = fmul double %1271, %1273
  %1275 = call double @_Z4fmaxdd(double %1271, double 1.000000e-200) nounwind
  %1276 = call double @_Z5log10d(double %1275) nounwind
  %1277 = fmul double %33, 0xBF1D74526156683E
  %1278 = call double @_Z3expd(double %1277) nounwind
  %1279 = fmul double %1278, 4.500000e-01
  %1280 = fmul double %33, 0xBF2E21A99B7BB433
  %1281 = call double @_Z3expd(double %1280) nounwind
  %1282 = fmul double %1281, 5.500000e-01
  %1283 = fadd double %1279, %1282
  %1284 = fmul double %1034, -7.244000e+03
  %1285 = call double @_Z3expd(double %1284) nounwind
  %1286 = fadd double %1283, %1285
  %1287 = call double @_Z4fmaxdd(double %1286, double 1.000000e-200) nounwind
  %1288 = call double @_Z5log10d(double %1287) nounwind
  %1289 = fmul double %1288, 1.270000e+00
  %1290 = fsub double 7.500000e-01, %1289
  %1291 = fmul double %1288, 6.700000e-01
  %1292 = fadd double %1291, 4.000000e-01
  %1293 = fsub double %1276, %1292
  %1294 = fmul double %1293, 1.400000e-01
  %1295 = fsub double %1290, %1294
  %1296 = fdiv double 1.000000e+00, %1295
  %1297 = fmul double %1293, %1296
  %1298 = fmul double %1297, %1297
  %1299 = fadd double %1298, 1.000000e+00
  %1300 = fdiv double 1.000000e+00, %1299
  %1301 = fmul double %1288, %1300
  %1302 = call double @_Z5exp10d(double %1301) nounwind
  %1303 = fmul double %1302, %1274
  %1304 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1305 = load i64* %1304, align 8
  %1306 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1307 = load i64* %1306, align 8
  %1308 = add i64 %1305, %1307
  %1309 = add i64 %1308, 16257024
  %1310 = getelementptr inbounds double addrspace(1)* %7, i64 %1309
  %1311 = load double addrspace(1)* %1310, align 8
  %1312 = fmul double %1311, %1303
  %1313 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1314 = load i64* %1313, align 8
  %1315 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1316 = load i64* %1315, align 8
  %1317 = add i64 %1314, %1316
  %1318 = add i64 %1317, 16257024
  %1319 = getelementptr inbounds double addrspace(1)* %7, i64 %1318
  store double %1312, double addrspace(1)* %1319, align 8
  %1320 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1321 = load i64* %1320, align 8
  %1322 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1323 = load i64* %1322, align 8
  %1324 = add i64 %1321, %1323
  %1325 = add i64 %1324, 16257024
  %1326 = getelementptr inbounds double addrspace(1)* %10, i64 %1325
  %1327 = load double addrspace(1)* %1326, align 8
  %1328 = fmul double %1327, %1303
  %1329 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1330 = load i64* %1329, align 8
  %1331 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1332 = load i64* %1331, align 8
  %1333 = add i64 %1330, %1332
  %1334 = add i64 %1333, 16257024
  %1335 = getelementptr inbounds double addrspace(1)* %10, i64 %1334
  store double %1328, double addrspace(1)* %1335, align 8
  %1336 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1337 = load i64* %1336, align 8
  %1338 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1339 = load i64* %1338, align 8
  %1340 = add i64 %1337, %1339
  %1341 = add i64 %1340, 1769472
  %1342 = getelementptr inbounds double addrspace(1)* %13, i64 %1341
  %1343 = load double addrspace(1)* %1342, align 8
  %1344 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1345 = load i64* %1344, align 8
  %1346 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1347 = load i64* %1346, align 8
  %1348 = add i64 %1345, %1347
  %1349 = add i64 %1348, 17031168
  %1350 = getelementptr inbounds double addrspace(1)* %7, i64 %1349
  %1351 = load double addrspace(1)* %1350, align 8
  %1352 = fdiv double 1.000000e+00, %1351
  %1353 = fmul double %242, %1352
  %1354 = fmul double %1343, %1353
  %1355 = fadd double %1354, 1.000000e+00
  %1356 = fdiv double 1.000000e+00, %1355
  %1357 = fmul double %1354, %1356
  %1358 = call double @_Z4fmaxdd(double %1354, double 1.000000e-200) nounwind
  %1359 = call double @_Z5log10d(double %1358) nounwind
  %1360 = fmul double %33, 0xBF76C16C16C16C17
  %1361 = call double @_Z3expd(double %1360) nounwind
  %1362 = fmul double %1361, 2.655000e-01
  %1363 = fmul double %33, 0xBF4FA8EF6D92ACA5
  %1364 = call double @_Z3expd(double %1363) nounwind
  %1365 = fmul double %1364, 7.345000e-01
  %1366 = fadd double %1362, %1365
  %1367 = fmul double %1034, -5.417000e+03
  %1368 = call double @_Z3expd(double %1367) nounwind
  %1369 = fadd double %1366, %1368
  %1370 = call double @_Z4fmaxdd(double %1369, double 1.000000e-200) nounwind
  %1371 = call double @_Z5log10d(double %1370) nounwind
  %1372 = fmul double %1371, 1.270000e+00
  %1373 = fsub double 7.500000e-01, %1372
  %1374 = fmul double %1371, 6.700000e-01
  %1375 = fadd double %1374, 4.000000e-01
  %1376 = fsub double %1359, %1375
  %1377 = fmul double %1376, 1.400000e-01
  %1378 = fsub double %1373, %1377
  %1379 = fdiv double 1.000000e+00, %1378
  %1380 = fmul double %1376, %1379
  %1381 = fmul double %1380, %1380
  %1382 = fadd double %1381, 1.000000e+00
  %1383 = fdiv double 1.000000e+00, %1382
  %1384 = fmul double %1371, %1383
  %1385 = call double @_Z5exp10d(double %1384) nounwind
  %1386 = fmul double %1385, %1357
  %1387 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1388 = load i64* %1387, align 8
  %1389 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1390 = load i64* %1389, align 8
  %1391 = add i64 %1388, %1390
  %1392 = add i64 %1391, 17031168
  %1393 = getelementptr inbounds double addrspace(1)* %7, i64 %1392
  %1394 = load double addrspace(1)* %1393, align 8
  %1395 = fmul double %1394, %1386
  %1396 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1397 = load i64* %1396, align 8
  %1398 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1399 = load i64* %1398, align 8
  %1400 = add i64 %1397, %1399
  %1401 = add i64 %1400, 17031168
  %1402 = getelementptr inbounds double addrspace(1)* %7, i64 %1401
  store double %1395, double addrspace(1)* %1402, align 8
  %1403 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1404 = load i64* %1403, align 8
  %1405 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1406 = load i64* %1405, align 8
  %1407 = add i64 %1404, %1406
  %1408 = add i64 %1407, 17031168
  %1409 = getelementptr inbounds double addrspace(1)* %10, i64 %1408
  %1410 = load double addrspace(1)* %1409, align 8
  %1411 = fmul double %1410, %1386
  %1412 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1413 = load i64* %1412, align 8
  %1414 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1415 = load i64* %1414, align 8
  %1416 = add i64 %1413, %1415
  %1417 = add i64 %1416, 17031168
  %1418 = getelementptr inbounds double addrspace(1)* %10, i64 %1417
  store double %1411, double addrspace(1)* %1418, align 8
  %1419 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1420 = load i64* %1419, align 8
  %1421 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1422 = load i64* %1421, align 8
  %1423 = add i64 %1420, %1422
  %1424 = add i64 %1423, 1880064
  %1425 = getelementptr inbounds double addrspace(1)* %13, i64 %1424
  %1426 = load double addrspace(1)* %1425, align 8
  %1427 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1428 = load i64* %1427, align 8
  %1429 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1430 = load i64* %1429, align 8
  %1431 = add i64 %1428, %1430
  %1432 = add i64 %1431, 17141760
  %1433 = getelementptr inbounds double addrspace(1)* %7, i64 %1432
  %1434 = load double addrspace(1)* %1433, align 8
  %1435 = fdiv double 1.000000e+00, %1434
  %1436 = fmul double %242, %1435
  %1437 = fmul double %1426, %1436
  %1438 = fadd double %1437, 1.000000e+00
  %1439 = fdiv double 1.000000e+00, %1438
  %1440 = fmul double %1437, %1439
  %1441 = call double @_Z4fmaxdd(double %1437, double 1.000000e-200) nounwind
  %1442 = call double @_Z5log10d(double %1441) nounwind
  %1443 = fmul double %33, 0xBF73813813813814
  %1444 = call double @_Z3expd(double %1443) nounwind
  %1445 = fmul double %1444, 2.470000e-02
  %1446 = fmul double %33, 0xBF50A6810A6810A7
  %1447 = call double @_Z3expd(double %1446) nounwind
  %1448 = fmul double %1447, 9.753000e-01
  %1449 = fadd double %1445, %1448
  %1450 = fmul double %1034, -4.374000e+03
  %1451 = call double @_Z3expd(double %1450) nounwind
  %1452 = fadd double %1449, %1451
  %1453 = call double @_Z4fmaxdd(double %1452, double 1.000000e-200) nounwind
  %1454 = call double @_Z5log10d(double %1453) nounwind
  %1455 = fmul double %1454, 1.270000e+00
  %1456 = fsub double 7.500000e-01, %1455
  %1457 = fmul double %1454, 6.700000e-01
  %1458 = fadd double %1457, 4.000000e-01
  %1459 = fsub double %1442, %1458
  %1460 = fmul double %1459, 1.400000e-01
  %1461 = fsub double %1456, %1460
  %1462 = fdiv double 1.000000e+00, %1461
  %1463 = fmul double %1459, %1462
  %1464 = fmul double %1463, %1463
  %1465 = fadd double %1464, 1.000000e+00
  %1466 = fdiv double 1.000000e+00, %1465
  %1467 = fmul double %1454, %1466
  %1468 = call double @_Z5exp10d(double %1467) nounwind
  %1469 = fmul double %1468, %1440
  %1470 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1471 = load i64* %1470, align 8
  %1472 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1473 = load i64* %1472, align 8
  %1474 = add i64 %1471, %1473
  %1475 = add i64 %1474, 17141760
  %1476 = getelementptr inbounds double addrspace(1)* %7, i64 %1475
  %1477 = load double addrspace(1)* %1476, align 8
  %1478 = fmul double %1477, %1469
  %1479 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1480 = load i64* %1479, align 8
  %1481 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1482 = load i64* %1481, align 8
  %1483 = add i64 %1480, %1482
  %1484 = add i64 %1483, 17141760
  %1485 = getelementptr inbounds double addrspace(1)* %7, i64 %1484
  store double %1478, double addrspace(1)* %1485, align 8
  %1486 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1487 = load i64* %1486, align 8
  %1488 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1489 = load i64* %1488, align 8
  %1490 = add i64 %1487, %1489
  %1491 = add i64 %1490, 17141760
  %1492 = getelementptr inbounds double addrspace(1)* %10, i64 %1491
  %1493 = load double addrspace(1)* %1492, align 8
  %1494 = fmul double %1493, %1469
  %1495 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1496 = load i64* %1495, align 8
  %1497 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1498 = load i64* %1497, align 8
  %1499 = add i64 %1496, %1498
  %1500 = add i64 %1499, 17141760
  %1501 = getelementptr inbounds double addrspace(1)* %10, i64 %1500
  store double %1494, double addrspace(1)* %1501, align 8
  %1502 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1503 = load i64* %1502, align 8
  %1504 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1505 = load i64* %1504, align 8
  %1506 = add i64 %1503, %1505
  %1507 = add i64 %1506, 1990656
  %1508 = getelementptr inbounds double addrspace(1)* %13, i64 %1507
  %1509 = load double addrspace(1)* %1508, align 8
  %1510 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1511 = load i64* %1510, align 8
  %1512 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1513 = load i64* %1512, align 8
  %1514 = add i64 %1511, %1513
  %1515 = add i64 %1514, 18690048
  %1516 = getelementptr inbounds double addrspace(1)* %7, i64 %1515
  %1517 = load double addrspace(1)* %1516, align 8
  %1518 = fdiv double 1.000000e+00, %1517
  %1519 = fmul double %242, %1518
  %1520 = fmul double %1509, %1519
  %1521 = fadd double %1520, 1.000000e+00
  %1522 = fdiv double 1.000000e+00, %1521
  %1523 = fmul double %1520, %1522
  %1524 = call double @_Z4fmaxdd(double %1520, double 1.000000e-200) nounwind
  %1525 = call double @_Z5log10d(double %1524) nounwind
  %1526 = fmul double %33, -8.000000e-03
  %1527 = call double @_Z3expd(double %1526) nounwind
  %1528 = fmul double %1527, 1.578000e-01
  %1529 = fmul double %33, 0xBF3D88B5D19F527D
  %1530 = call double @_Z3expd(double %1529) nounwind
  %1531 = fmul double %1530, 8.422000e-01
  %1532 = fadd double %1528, %1531
  %1533 = fmul double %1034, -6.882000e+03
  %1534 = call double @_Z3expd(double %1533) nounwind
  %1535 = fadd double %1532, %1534
  %1536 = call double @_Z4fmaxdd(double %1535, double 1.000000e-200) nounwind
  %1537 = call double @_Z5log10d(double %1536) nounwind
  %1538 = fmul double %1537, 1.270000e+00
  %1539 = fsub double 7.500000e-01, %1538
  %1540 = fmul double %1537, 6.700000e-01
  %1541 = fadd double %1540, 4.000000e-01
  %1542 = fsub double %1525, %1541
  %1543 = fmul double %1542, 1.400000e-01
  %1544 = fsub double %1539, %1543
  %1545 = fdiv double 1.000000e+00, %1544
  %1546 = fmul double %1542, %1545
  %1547 = fmul double %1546, %1546
  %1548 = fadd double %1547, 1.000000e+00
  %1549 = fdiv double 1.000000e+00, %1548
  %1550 = fmul double %1537, %1549
  %1551 = call double @_Z5exp10d(double %1550) nounwind
  %1552 = fmul double %1551, %1523
  %1553 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1554 = load i64* %1553, align 8
  %1555 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1556 = load i64* %1555, align 8
  %1557 = add i64 %1554, %1556
  %1558 = add i64 %1557, 18690048
  %1559 = getelementptr inbounds double addrspace(1)* %7, i64 %1558
  %1560 = load double addrspace(1)* %1559, align 8
  %1561 = fmul double %1560, %1552
  %1562 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1563 = load i64* %1562, align 8
  %1564 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1565 = load i64* %1564, align 8
  %1566 = add i64 %1563, %1565
  %1567 = add i64 %1566, 18690048
  %1568 = getelementptr inbounds double addrspace(1)* %7, i64 %1567
  store double %1561, double addrspace(1)* %1568, align 8
  %1569 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1570 = load i64* %1569, align 8
  %1571 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1572 = load i64* %1571, align 8
  %1573 = add i64 %1570, %1572
  %1574 = add i64 %1573, 18690048
  %1575 = getelementptr inbounds double addrspace(1)* %10, i64 %1574
  %1576 = load double addrspace(1)* %1575, align 8
  %1577 = fmul double %1576, %1552
  %1578 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1579 = load i64* %1578, align 8
  %1580 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1581 = load i64* %1580, align 8
  %1582 = add i64 %1579, %1581
  %1583 = add i64 %1582, 18690048
  %1584 = getelementptr inbounds double addrspace(1)* %10, i64 %1583
  store double %1577, double addrspace(1)* %1584, align 8
  %1585 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1586 = load i64* %1585, align 8
  %1587 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1588 = load i64* %1587, align 8
  %1589 = add i64 %1586, %1588
  %1590 = add i64 %1589, 2101248
  %1591 = getelementptr inbounds double addrspace(1)* %13, i64 %1590
  %1592 = load double addrspace(1)* %1591, align 8
  %1593 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1594 = load i64* %1593, align 8
  %1595 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1596 = load i64* %1595, align 8
  %1597 = add i64 %1594, %1596
  %1598 = add i64 %1597, 20348928
  %1599 = getelementptr inbounds double addrspace(1)* %7, i64 %1598
  %1600 = load double addrspace(1)* %1599, align 8
  %1601 = fdiv double 1.000000e+00, %1600
  %1602 = fmul double %242, %1601
  %1603 = fmul double %1592, %1602
  %1604 = fadd double %1603, 1.000000e+00
  %1605 = fdiv double 1.000000e+00, %1604
  %1606 = fmul double %1603, %1605
  %1607 = call double @_Z4fmaxdd(double %1603, double 1.000000e-200) nounwind
  %1608 = call double @_Z5log10d(double %1607) nounwind
  %1609 = fmul double %33, 0xBF4DE1A6D2922395
  %1610 = call double @_Z3expd(double %1609) nounwind
  %1611 = fmul double %1610, 9.800000e-01
  %1612 = call double @_Z3expd(double %1609) nounwind
  %1613 = fmul double %1612, 2.000000e-02
  %1614 = fadd double %1611, %1613
  %1615 = fmul double %1034, -6.859500e+03
  %1616 = call double @_Z3expd(double %1615) nounwind
  %1617 = fadd double %1614, %1616
  %1618 = call double @_Z4fmaxdd(double %1617, double 1.000000e-200) nounwind
  %1619 = call double @_Z5log10d(double %1618) nounwind
  %1620 = fmul double %1619, 1.270000e+00
  %1621 = fsub double 7.500000e-01, %1620
  %1622 = fmul double %1619, 6.700000e-01
  %1623 = fadd double %1622, 4.000000e-01
  %1624 = fsub double %1608, %1623
  %1625 = fmul double %1624, 1.400000e-01
  %1626 = fsub double %1621, %1625
  %1627 = fdiv double 1.000000e+00, %1626
  %1628 = fmul double %1624, %1627
  %1629 = fmul double %1628, %1628
  %1630 = fadd double %1629, 1.000000e+00
  %1631 = fdiv double 1.000000e+00, %1630
  %1632 = fmul double %1619, %1631
  %1633 = call double @_Z5exp10d(double %1632) nounwind
  %1634 = fmul double %1633, %1606
  %1635 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1636 = load i64* %1635, align 8
  %1637 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1638 = load i64* %1637, align 8
  %1639 = add i64 %1636, %1638
  %1640 = add i64 %1639, 20348928
  %1641 = getelementptr inbounds double addrspace(1)* %7, i64 %1640
  %1642 = load double addrspace(1)* %1641, align 8
  %1643 = fmul double %1642, %1634
  %1644 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1645 = load i64* %1644, align 8
  %1646 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1647 = load i64* %1646, align 8
  %1648 = add i64 %1645, %1647
  %1649 = add i64 %1648, 20348928
  %1650 = getelementptr inbounds double addrspace(1)* %7, i64 %1649
  store double %1643, double addrspace(1)* %1650, align 8
  %1651 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1652 = load i64* %1651, align 8
  %1653 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1654 = load i64* %1653, align 8
  %1655 = add i64 %1652, %1654
  %1656 = add i64 %1655, 20348928
  %1657 = getelementptr inbounds double addrspace(1)* %10, i64 %1656
  %1658 = load double addrspace(1)* %1657, align 8
  %1659 = fmul double %1658, %1634
  %1660 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1661 = load i64* %1660, align 8
  %1662 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1663 = load i64* %1662, align 8
  %1664 = add i64 %1661, %1663
  %1665 = add i64 %1664, 20348928
  %1666 = getelementptr inbounds double addrspace(1)* %10, i64 %1665
  store double %1659, double addrspace(1)* %1666, align 8
  %1667 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1668 = load i64* %1667, align 8
  %1669 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1670 = load i64* %1669, align 8
  %1671 = add i64 %1668, %1670
  %1672 = add i64 %1671, 2211840
  %1673 = getelementptr inbounds double addrspace(1)* %13, i64 %1672
  %1674 = load double addrspace(1)* %1673, align 8
  %1675 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1676 = load i64* %1675, align 8
  %1677 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1678 = load i64* %1677, align 8
  %1679 = add i64 %1676, %1678
  %1680 = add i64 %1679, 20901888
  %1681 = getelementptr inbounds double addrspace(1)* %7, i64 %1680
  %1682 = load double addrspace(1)* %1681, align 8
  %1683 = fdiv double 1.000000e+00, %1682
  %1684 = fmul double %540, %1683
  %1685 = fmul double %1674, %1684
  %1686 = fadd double %1685, 1.000000e+00
  %1687 = fdiv double 1.000000e+00, %1686
  %1688 = fmul double %1685, %1687
  %1689 = call double @_Z4fmaxdd(double %1685, double 1.000000e-200) nounwind
  %1690 = call double @_Z5log10d(double %1689) nounwind
  %1691 = fmul double %33, -1.000000e-03
  %1692 = call double @_Z3expd(double %1691) nounwind
  %1693 = fmul double %1692, 0.000000e+00
  %1694 = fmul double %33, 0xBF4903847EA1CEC1
  %1695 = call double @_Z3expd(double %1694) nounwind
  %1696 = fadd double %1693, %1695
  %1697 = fmul double %1034, -4.809700e+04
  %1698 = call double @_Z3expd(double %1697) nounwind
  %1699 = fadd double %1696, %1698
  %1700 = call double @_Z4fmaxdd(double %1699, double 1.000000e-200) nounwind
  %1701 = call double @_Z5log10d(double %1700) nounwind
  %1702 = fmul double %1701, 1.270000e+00
  %1703 = fsub double 7.500000e-01, %1702
  %1704 = fmul double %1701, 6.700000e-01
  %1705 = fadd double %1704, 4.000000e-01
  %1706 = fsub double %1690, %1705
  %1707 = fmul double %1706, 1.400000e-01
  %1708 = fsub double %1703, %1707
  %1709 = fdiv double 1.000000e+00, %1708
  %1710 = fmul double %1706, %1709
  %1711 = fmul double %1710, %1710
  %1712 = fadd double %1711, 1.000000e+00
  %1713 = fdiv double 1.000000e+00, %1712
  %1714 = fmul double %1701, %1713
  %1715 = call double @_Z5exp10d(double %1714) nounwind
  %1716 = fmul double %1715, %1688
  %1717 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1718 = load i64* %1717, align 8
  %1719 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1720 = load i64* %1719, align 8
  %1721 = add i64 %1718, %1720
  %1722 = add i64 %1721, 20901888
  %1723 = getelementptr inbounds double addrspace(1)* %7, i64 %1722
  %1724 = load double addrspace(1)* %1723, align 8
  %1725 = fmul double %1724, %1716
  %1726 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1727 = load i64* %1726, align 8
  %1728 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1729 = load i64* %1728, align 8
  %1730 = add i64 %1727, %1729
  %1731 = add i64 %1730, 20901888
  %1732 = getelementptr inbounds double addrspace(1)* %7, i64 %1731
  store double %1725, double addrspace(1)* %1732, align 8
  %1733 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1734 = load i64* %1733, align 8
  %1735 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1736 = load i64* %1735, align 8
  %1737 = add i64 %1734, %1736
  %1738 = add i64 %1737, 20901888
  %1739 = getelementptr inbounds double addrspace(1)* %10, i64 %1738
  %1740 = load double addrspace(1)* %1739, align 8
  %1741 = fmul double %1740, %1716
  %1742 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1743 = load i64* %1742, align 8
  %1744 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1745 = load i64* %1744, align 8
  %1746 = add i64 %1743, %1745
  %1747 = add i64 %1746, 20901888
  %1748 = getelementptr inbounds double addrspace(1)* %10, i64 %1747
  store double %1741, double addrspace(1)* %1748, align 8
  %check.WI.iter.i = icmp ult i64 %CurrWI..0.i, %25
  br i1 %check.WI.iter.i, label %thenBB.i, label %__ratxb_kernel_separated_args.exit

thenBB.i:                                         ; preds = %._crit_edge.i
  %"CurrWI++.i" = add nuw i64 %CurrWI..0.i, 1
  br label %SyncBB5.i

__ratxb_kernel_separated_args.exit:               ; preds = %._crit_edge.i
  ret void
}

define void @__Vectorized_.ratxb_kernel(i8* %pBuffer) {
entry:
  %0 = bitcast i8* %pBuffer to double addrspace(1)**
  %1 = load double addrspace(1)** %0, align 8
  %2 = getelementptr i8* %pBuffer, i64 8
  %3 = bitcast i8* %2 to double addrspace(1)**
  %4 = load double addrspace(1)** %3, align 8
  %5 = getelementptr i8* %pBuffer, i64 16
  %6 = bitcast i8* %5 to double addrspace(1)**
  %7 = load double addrspace(1)** %6, align 8
  %8 = getelementptr i8* %pBuffer, i64 24
  %9 = bitcast i8* %8 to double addrspace(1)**
  %10 = load double addrspace(1)** %9, align 8
  %11 = getelementptr i8* %pBuffer, i64 32
  %12 = bitcast i8* %11 to double addrspace(1)**
  %13 = load double addrspace(1)** %12, align 8
  %14 = getelementptr i8* %pBuffer, i64 40
  %15 = bitcast i8* %14 to double*
  %16 = load double* %15, align 8
  %17 = getelementptr i8* %pBuffer, i64 72
  %18 = bitcast i8* %17 to %struct.PaddedDimId**
  %19 = load %struct.PaddedDimId** %18, align 8
  %20 = getelementptr i8* %pBuffer, i64 80
  %21 = bitcast i8* %20 to %struct.PaddedDimId**
  %22 = load %struct.PaddedDimId** %21, align 8
  %23 = getelementptr i8* %pBuffer, i64 96
  %24 = bitcast i8* %23 to i64*
  %25 = load i64* %24, align 8
  %temp.i = insertelement <16 x double> undef, double %16, i32 0
  %vector.i = shufflevector <16 x double> %temp.i, <16 x double> undef, <16 x i32> zeroinitializer
  br label %SyncBB.i

SyncBB.i:                                         ; preds = %thenBB.i, %entry
  %CurrWI..0.i = phi i64 [ 0, %entry ], [ %"CurrWI++.i", %thenBB.i ]
  %26 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %27 = load i64* %26, align 8
  %28 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %29 = load i64* %28, align 8
  %30 = add i64 %27, %29
  %31 = getelementptr inbounds double addrspace(1)* %1, i64 %30
  %ptrTypeCast.i = bitcast double addrspace(1)* %31 to <16 x double> addrspace(1)*
  %32 = load <16 x double> addrspace(1)* %ptrTypeCast.i, align 8
  %33 = fmul <16 x double> %32, %vector.i
  %extract16.i = extractelement <16 x double> %33, i32 0
  %extract17.i = extractelement <16 x double> %33, i32 1
  %extract18.i = extractelement <16 x double> %33, i32 2
  %extract19.i = extractelement <16 x double> %33, i32 3
  %extract20.i = extractelement <16 x double> %33, i32 4
  %extract21.i = extractelement <16 x double> %33, i32 5
  %extract22.i = extractelement <16 x double> %33, i32 6
  %extract23.i = extractelement <16 x double> %33, i32 7
  %extract24.i = extractelement <16 x double> %33, i32 8
  %extract25.i = extractelement <16 x double> %33, i32 9
  %extract26.i = extractelement <16 x double> %33, i32 10
  %extract27.i = extractelement <16 x double> %33, i32 11
  %extract28.i = extractelement <16 x double> %33, i32 12
  %extract29.i = extractelement <16 x double> %33, i32 13
  %extract30.i = extractelement <16 x double> %33, i32 14
  %extract31.i = extractelement <16 x double> %33, i32 15
  %34 = call double @_Z3logd(double %extract16.i) nounwind
  %35 = call double @_Z3logd(double %extract17.i) nounwind
  %36 = call double @_Z3logd(double %extract18.i) nounwind
  %37 = call double @_Z3logd(double %extract19.i) nounwind
  %38 = call double @_Z3logd(double %extract20.i) nounwind
  %39 = call double @_Z3logd(double %extract21.i) nounwind
  %40 = call double @_Z3logd(double %extract22.i) nounwind
  %41 = call double @_Z3logd(double %extract23.i) nounwind
  %42 = call double @_Z3logd(double %extract24.i) nounwind
  %43 = call double @_Z3logd(double %extract25.i) nounwind
  %44 = call double @_Z3logd(double %extract26.i) nounwind
  %45 = call double @_Z3logd(double %extract27.i) nounwind
  %46 = call double @_Z3logd(double %extract28.i) nounwind
  %47 = call double @_Z3logd(double %extract29.i) nounwind
  %48 = call double @_Z3logd(double %extract30.i) nounwind
  %49 = call double @_Z3logd(double %extract31.i) nounwind
  br label %50

; <label>:50                                      ; preds = %50, %SyncBB.i
  %indvar.i = phi i64 [ 0, %SyncBB.i ], [ %indvar.next.i, %50 ]
  %vectorPHI.i = phi <16 x double> [ zeroinitializer, %SyncBB.i ], [ %58, %50 ]
  %tmp3.i = mul i64 %indvar.i, 110592
  %51 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %52 = load i64* %51, align 8
  %53 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %54 = load i64* %53, align 8
  %55 = add i64 %52, %54
  %extract37.i = add i64 %55, %tmp3.i
  %56 = getelementptr inbounds double addrspace(1)* %4, i64 %extract37.i
  %ptrTypeCast53.i = bitcast double addrspace(1)* %56 to <16 x double> addrspace(1)*
  %57 = load <16 x double> addrspace(1)* %ptrTypeCast53.i, align 8
  %58 = fadd <16 x double> %vectorPHI.i, %57
  %indvar.next.i = add i64 %indvar.i, 1
  %exitcond.i = icmp eq i64 %indvar.next.i, 22
  br i1 %exitcond.i, label %._crit_edge.i, label %50

._crit_edge.i:                                    ; preds = %50
  %59 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %60 = load i64* %59, align 8
  %61 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %62 = load i64* %61, align 8
  %63 = add i64 %60, %62
  %64 = getelementptr inbounds double addrspace(1)* %4, i64 %63
  %ptrTypeCast72.i = bitcast double addrspace(1)* %64 to <16 x double> addrspace(1)*
  %65 = load <16 x double> addrspace(1)* %ptrTypeCast72.i, align 8
  %66 = fsub <16 x double> %58, %65
  %67 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %68 = load i64* %67, align 8
  %69 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %70 = load i64* %69, align 8
  %71 = add i64 %68, %70
  %extract75.i = add i64 %71, 552960
  %72 = getelementptr inbounds double addrspace(1)* %4, i64 %extract75.i
  %ptrTypeCast91.i = bitcast double addrspace(1)* %72 to <16 x double> addrspace(1)*
  %73 = load <16 x double> addrspace(1)* %ptrTypeCast91.i, align 8
  %74 = fsub <16 x double> %66, %73
  %75 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %76 = load i64* %75, align 8
  %77 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %78 = load i64* %77, align 8
  %79 = add i64 %76, %78
  %extract94.i = add i64 %79, 995328
  %80 = getelementptr inbounds double addrspace(1)* %4, i64 %extract94.i
  %ptrTypeCast110.i = bitcast double addrspace(1)* %80 to <16 x double> addrspace(1)*
  %81 = load <16 x double> addrspace(1)* %ptrTypeCast110.i, align 8
  %82 = fadd <16 x double> %74, %81
  %83 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %84 = load i64* %83, align 8
  %85 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %86 = load i64* %85, align 8
  %87 = add i64 %84, %86
  %extract113.i = add i64 %87, 1216512
  %88 = getelementptr inbounds double addrspace(1)* %4, i64 %extract113.i
  %ptrTypeCast129.i = bitcast double addrspace(1)* %88 to <16 x double> addrspace(1)*
  %89 = load <16 x double> addrspace(1)* %ptrTypeCast129.i, align 8
  %90 = fsub <16 x double> %82, %89
  %91 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %92 = load i64* %91, align 8
  %93 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %94 = load i64* %93, align 8
  %95 = add i64 %92, %94
  %extract132.i = add i64 %95, 1658880
  %96 = getelementptr inbounds double addrspace(1)* %4, i64 %extract132.i
  %ptrTypeCast148.i = bitcast double addrspace(1)* %96 to <16 x double> addrspace(1)*
  %97 = load <16 x double> addrspace(1)* %ptrTypeCast148.i, align 8
  %98 = fmul <16 x double> %97, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %99 = fadd <16 x double> %90, %98
  %100 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %101 = load i64* %100, align 8
  %102 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %103 = load i64* %102, align 8
  %104 = add i64 %101, %103
  %extract151.i = add i64 %104, 1437696
  %105 = getelementptr inbounds double addrspace(1)* %4, i64 %extract151.i
  %ptrTypeCast167.i = bitcast double addrspace(1)* %105 to <16 x double> addrspace(1)*
  %106 = load <16 x double> addrspace(1)* %ptrTypeCast167.i, align 8
  %107 = fmul <16 x double> %106, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %108 = fadd <16 x double> %99, %107
  %109 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %110 = load i64* %109, align 8
  %111 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %112 = load i64* %111, align 8
  %113 = add i64 %110, %112
  %extract170.i = add i64 %113, 1548288
  %114 = getelementptr inbounds double addrspace(1)* %4, i64 %extract170.i
  %ptrTypeCast186.i = bitcast double addrspace(1)* %114 to <16 x double> addrspace(1)*
  %115 = load <16 x double> addrspace(1)* %ptrTypeCast186.i, align 8
  %116 = fmul <16 x double> %115, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %117 = fadd <16 x double> %108, %116
  %118 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %119 = load i64* %118, align 8
  %120 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %121 = load i64* %120, align 8
  %122 = add i64 %119, %121
  %123 = getelementptr inbounds double addrspace(1)* %4, i64 %122
  %ptrTypeCast205.i = bitcast double addrspace(1)* %123 to <16 x double> addrspace(1)*
  %124 = load <16 x double> addrspace(1)* %ptrTypeCast205.i, align 8
  %125 = fmul <16 x double> %124, <double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01>
  %126 = fsub <16 x double> %58, %125
  %127 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %128 = load i64* %127, align 8
  %129 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %130 = load i64* %129, align 8
  %131 = add i64 %128, %130
  %extract208.i = add i64 %131, 552960
  %132 = getelementptr inbounds double addrspace(1)* %4, i64 %extract208.i
  %ptrTypeCast224.i = bitcast double addrspace(1)* %132 to <16 x double> addrspace(1)*
  %133 = load <16 x double> addrspace(1)* %ptrTypeCast224.i, align 8
  %134 = fmul <16 x double> %133, <double 2.650000e+00, double 2.650000e+00, double 2.650000e+00, double 2.650000e+00, double 2.650000e+00, double 2.650000e+00, double 2.650000e+00, double 2.650000e+00, double 2.650000e+00, double 2.650000e+00, double 2.650000e+00, double 2.650000e+00, double 2.650000e+00, double 2.650000e+00, double 2.650000e+00, double 2.650000e+00>
  %135 = fadd <16 x double> %126, %134
  %136 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %137 = load i64* %136, align 8
  %138 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %139 = load i64* %138, align 8
  %140 = add i64 %137, %139
  %extract227.i = add i64 %140, 995328
  %141 = getelementptr inbounds double addrspace(1)* %4, i64 %extract227.i
  %ptrTypeCast243.i = bitcast double addrspace(1)* %141 to <16 x double> addrspace(1)*
  %142 = load <16 x double> addrspace(1)* %ptrTypeCast243.i, align 8
  %143 = fadd <16 x double> %135, %142
  %144 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %145 = load i64* %144, align 8
  %146 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %147 = load i64* %146, align 8
  %148 = add i64 %145, %147
  %extract246.i = add i64 %148, 1658880
  %149 = getelementptr inbounds double addrspace(1)* %4, i64 %extract246.i
  %ptrTypeCast262.i = bitcast double addrspace(1)* %149 to <16 x double> addrspace(1)*
  %150 = load <16 x double> addrspace(1)* %ptrTypeCast262.i, align 8
  %151 = fmul <16 x double> %150, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %152 = fadd <16 x double> %143, %151
  %153 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %154 = load i64* %153, align 8
  %155 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %156 = load i64* %155, align 8
  %157 = add i64 %154, %156
  %extract265.i = add i64 %157, 1437696
  %158 = getelementptr inbounds double addrspace(1)* %4, i64 %extract265.i
  %ptrTypeCast281.i = bitcast double addrspace(1)* %158 to <16 x double> addrspace(1)*
  %159 = load <16 x double> addrspace(1)* %ptrTypeCast281.i, align 8
  %160 = fmul <16 x double> %159, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %161 = fadd <16 x double> %152, %160
  %162 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %163 = load i64* %162, align 8
  %164 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %165 = load i64* %164, align 8
  %166 = add i64 %163, %165
  %extract284.i = add i64 %166, 1548288
  %167 = getelementptr inbounds double addrspace(1)* %4, i64 %extract284.i
  %ptrTypeCast300.i = bitcast double addrspace(1)* %167 to <16 x double> addrspace(1)*
  %168 = load <16 x double> addrspace(1)* %ptrTypeCast300.i, align 8
  %169 = fmul <16 x double> %168, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %170 = fadd <16 x double> %161, %169
  %171 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %172 = load i64* %171, align 8
  %173 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %174 = load i64* %173, align 8
  %175 = add i64 %172, %174
  %176 = getelementptr inbounds double addrspace(1)* %4, i64 %175
  %ptrTypeCast319.i = bitcast double addrspace(1)* %176 to <16 x double> addrspace(1)*
  %177 = load <16 x double> addrspace(1)* %ptrTypeCast319.i, align 8
  %178 = fadd <16 x double> %58, %177
  %179 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %180 = load i64* %179, align 8
  %181 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %182 = load i64* %181, align 8
  %183 = add i64 %180, %182
  %extract322.i = add i64 %183, 552960
  %184 = getelementptr inbounds double addrspace(1)* %4, i64 %extract322.i
  %ptrTypeCast338.i = bitcast double addrspace(1)* %184 to <16 x double> addrspace(1)*
  %185 = load <16 x double> addrspace(1)* %ptrTypeCast338.i, align 8
  %186 = fmul <16 x double> %185, <double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00>
  %187 = fadd <16 x double> %178, %186
  %188 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %189 = load i64* %188, align 8
  %190 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %191 = load i64* %190, align 8
  %192 = add i64 %189, %191
  %extract341.i = add i64 %192, 995328
  %193 = getelementptr inbounds double addrspace(1)* %4, i64 %extract341.i
  %ptrTypeCast357.i = bitcast double addrspace(1)* %193 to <16 x double> addrspace(1)*
  %194 = load <16 x double> addrspace(1)* %ptrTypeCast357.i, align 8
  %195 = fadd <16 x double> %187, %194
  %196 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %197 = load i64* %196, align 8
  %198 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %199 = load i64* %198, align 8
  %200 = add i64 %197, %199
  %extract360.i = add i64 %200, 1105920
  %201 = getelementptr inbounds double addrspace(1)* %4, i64 %extract360.i
  %ptrTypeCast376.i = bitcast double addrspace(1)* %201 to <16 x double> addrspace(1)*
  %202 = load <16 x double> addrspace(1)* %ptrTypeCast376.i, align 8
  %203 = fmul <16 x double> %202, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %204 = fadd <16 x double> %195, %203
  %205 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %206 = load i64* %205, align 8
  %207 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %208 = load i64* %207, align 8
  %209 = add i64 %206, %208
  %extract379.i = add i64 %209, 1216512
  %210 = getelementptr inbounds double addrspace(1)* %4, i64 %extract379.i
  %ptrTypeCast395.i = bitcast double addrspace(1)* %210 to <16 x double> addrspace(1)*
  %211 = load <16 x double> addrspace(1)* %ptrTypeCast395.i, align 8
  %212 = fadd <16 x double> %204, %211
  %213 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %214 = load i64* %213, align 8
  %215 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %216 = load i64* %215, align 8
  %217 = add i64 %214, %216
  %extract398.i = add i64 %217, 1658880
  %218 = getelementptr inbounds double addrspace(1)* %4, i64 %extract398.i
  %ptrTypeCast414.i = bitcast double addrspace(1)* %218 to <16 x double> addrspace(1)*
  %219 = load <16 x double> addrspace(1)* %ptrTypeCast414.i, align 8
  %220 = fmul <16 x double> %219, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %221 = fadd <16 x double> %212, %220
  %222 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %223 = load i64* %222, align 8
  %224 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %225 = load i64* %224, align 8
  %226 = add i64 %223, %225
  %extract417.i = add i64 %226, 1437696
  %227 = getelementptr inbounds double addrspace(1)* %4, i64 %extract417.i
  %ptrTypeCast433.i = bitcast double addrspace(1)* %227 to <16 x double> addrspace(1)*
  %228 = load <16 x double> addrspace(1)* %ptrTypeCast433.i, align 8
  %229 = fmul <16 x double> %228, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %230 = fadd <16 x double> %221, %229
  %231 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %232 = load i64* %231, align 8
  %233 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %234 = load i64* %233, align 8
  %235 = add i64 %232, %234
  %extract436.i = add i64 %235, 1548288
  %236 = getelementptr inbounds double addrspace(1)* %4, i64 %extract436.i
  %ptrTypeCast452.i = bitcast double addrspace(1)* %236 to <16 x double> addrspace(1)*
  %237 = load <16 x double> addrspace(1)* %ptrTypeCast452.i, align 8
  %238 = fmul <16 x double> %237, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %239 = fadd <16 x double> %230, %238
  %240 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %241 = load i64* %240, align 8
  %242 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %243 = load i64* %242, align 8
  %244 = add i64 %241, %243
  %245 = getelementptr inbounds double addrspace(1)* %4, i64 %244
  %ptrTypeCast471.i = bitcast double addrspace(1)* %245 to <16 x double> addrspace(1)*
  %246 = load <16 x double> addrspace(1)* %ptrTypeCast471.i, align 8
  %247 = fmul <16 x double> %246, <double 1.400000e+00, double 1.400000e+00, double 1.400000e+00, double 1.400000e+00, double 1.400000e+00, double 1.400000e+00, double 1.400000e+00, double 1.400000e+00, double 1.400000e+00, double 1.400000e+00, double 1.400000e+00, double 1.400000e+00, double 1.400000e+00, double 1.400000e+00, double 1.400000e+00, double 1.400000e+00>
  %248 = fadd <16 x double> %58, %247
  %249 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %250 = load i64* %249, align 8
  %251 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %252 = load i64* %251, align 8
  %253 = add i64 %250, %252
  %extract474.i = add i64 %253, 552960
  %254 = getelementptr inbounds double addrspace(1)* %4, i64 %extract474.i
  %ptrTypeCast490.i = bitcast double addrspace(1)* %254 to <16 x double> addrspace(1)*
  %255 = load <16 x double> addrspace(1)* %ptrTypeCast490.i, align 8
  %256 = fmul <16 x double> %255, <double 1.440000e+01, double 1.440000e+01, double 1.440000e+01, double 1.440000e+01, double 1.440000e+01, double 1.440000e+01, double 1.440000e+01, double 1.440000e+01, double 1.440000e+01, double 1.440000e+01, double 1.440000e+01, double 1.440000e+01, double 1.440000e+01, double 1.440000e+01, double 1.440000e+01, double 1.440000e+01>
  %257 = fadd <16 x double> %248, %256
  %258 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %259 = load i64* %258, align 8
  %260 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %261 = load i64* %260, align 8
  %262 = add i64 %259, %261
  %extract493.i = add i64 %262, 995328
  %263 = getelementptr inbounds double addrspace(1)* %4, i64 %extract493.i
  %ptrTypeCast509.i = bitcast double addrspace(1)* %263 to <16 x double> addrspace(1)*
  %264 = load <16 x double> addrspace(1)* %ptrTypeCast509.i, align 8
  %265 = fadd <16 x double> %257, %264
  %266 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %267 = load i64* %266, align 8
  %268 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %269 = load i64* %268, align 8
  %270 = add i64 %267, %269
  %extract512.i = add i64 %270, 1105920
  %271 = getelementptr inbounds double addrspace(1)* %4, i64 %extract512.i
  %ptrTypeCast528.i = bitcast double addrspace(1)* %271 to <16 x double> addrspace(1)*
  %272 = load <16 x double> addrspace(1)* %ptrTypeCast528.i, align 8
  %273 = fmul <16 x double> %272, <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>
  %274 = fadd <16 x double> %265, %273
  %275 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %276 = load i64* %275, align 8
  %277 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %278 = load i64* %277, align 8
  %279 = add i64 %276, %278
  %extract531.i = add i64 %279, 1216512
  %280 = getelementptr inbounds double addrspace(1)* %4, i64 %extract531.i
  %ptrTypeCast547.i = bitcast double addrspace(1)* %280 to <16 x double> addrspace(1)*
  %281 = load <16 x double> addrspace(1)* %ptrTypeCast547.i, align 8
  %282 = fmul <16 x double> %281, <double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00>
  %283 = fadd <16 x double> %274, %282
  %284 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %285 = load i64* %284, align 8
  %286 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %287 = load i64* %286, align 8
  %288 = add i64 %285, %287
  %extract550.i = add i64 %288, 1658880
  %289 = getelementptr inbounds double addrspace(1)* %4, i64 %extract550.i
  %ptrTypeCast566.i = bitcast double addrspace(1)* %289 to <16 x double> addrspace(1)*
  %290 = load <16 x double> addrspace(1)* %ptrTypeCast566.i, align 8
  %291 = fmul <16 x double> %290, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %292 = fadd <16 x double> %283, %291
  %293 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %294 = load i64* %293, align 8
  %295 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %296 = load i64* %295, align 8
  %297 = add i64 %294, %296
  %extract569.i = add i64 %297, 1437696
  %298 = getelementptr inbounds double addrspace(1)* %4, i64 %extract569.i
  %ptrTypeCast585.i = bitcast double addrspace(1)* %298 to <16 x double> addrspace(1)*
  %299 = load <16 x double> addrspace(1)* %ptrTypeCast585.i, align 8
  %300 = fmul <16 x double> %299, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %301 = fadd <16 x double> %292, %300
  %302 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %303 = load i64* %302, align 8
  %304 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %305 = load i64* %304, align 8
  %306 = add i64 %303, %305
  %extract588.i = add i64 %306, 1548288
  %307 = getelementptr inbounds double addrspace(1)* %4, i64 %extract588.i
  %ptrTypeCast604.i = bitcast double addrspace(1)* %307 to <16 x double> addrspace(1)*
  %308 = load <16 x double> addrspace(1)* %ptrTypeCast604.i, align 8
  %309 = fmul <16 x double> %308, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %310 = fadd <16 x double> %301, %309
  %311 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %312 = load i64* %311, align 8
  %313 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %314 = load i64* %313, align 8
  %315 = add i64 %312, %314
  %extract607.i = add i64 %315, 331776
  %316 = getelementptr inbounds double addrspace(1)* %4, i64 %extract607.i
  %ptrTypeCast623.i = bitcast double addrspace(1)* %316 to <16 x double> addrspace(1)*
  %317 = load <16 x double> addrspace(1)* %ptrTypeCast623.i, align 8
  %318 = fsub <16 x double> %58, %317
  %319 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %320 = load i64* %319, align 8
  %321 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %322 = load i64* %321, align 8
  %323 = add i64 %320, %322
  %extract626.i = add i64 %323, 552960
  %324 = getelementptr inbounds double addrspace(1)* %4, i64 %extract626.i
  %ptrTypeCast642.i = bitcast double addrspace(1)* %324 to <16 x double> addrspace(1)*
  %325 = load <16 x double> addrspace(1)* %ptrTypeCast642.i, align 8
  %326 = fsub <16 x double> %318, %325
  %327 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %328 = load i64* %327, align 8
  %329 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %330 = load i64* %329, align 8
  %331 = add i64 %328, %330
  %extract645.i = add i64 %331, 1105920
  %332 = getelementptr inbounds double addrspace(1)* %4, i64 %extract645.i
  %ptrTypeCast661.i = bitcast double addrspace(1)* %332 to <16 x double> addrspace(1)*
  %333 = load <16 x double> addrspace(1)* %ptrTypeCast661.i, align 8
  %334 = fmul <16 x double> %333, <double 2.500000e-01, double 2.500000e-01, double 2.500000e-01, double 2.500000e-01, double 2.500000e-01, double 2.500000e-01, double 2.500000e-01, double 2.500000e-01, double 2.500000e-01, double 2.500000e-01, double 2.500000e-01, double 2.500000e-01, double 2.500000e-01, double 2.500000e-01, double 2.500000e-01, double 2.500000e-01>
  %335 = fsub <16 x double> %326, %334
  %336 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %337 = load i64* %336, align 8
  %338 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %339 = load i64* %338, align 8
  %340 = add i64 %337, %339
  %extract664.i = add i64 %340, 1216512
  %341 = getelementptr inbounds double addrspace(1)* %4, i64 %extract664.i
  %ptrTypeCast680.i = bitcast double addrspace(1)* %341 to <16 x double> addrspace(1)*
  %342 = load <16 x double> addrspace(1)* %ptrTypeCast680.i, align 8
  %343 = fmul <16 x double> %342, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %344 = fadd <16 x double> %335, %343
  %345 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %346 = load i64* %345, align 8
  %347 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %348 = load i64* %347, align 8
  %349 = add i64 %346, %348
  %extract683.i = add i64 %349, 1658880
  %350 = getelementptr inbounds double addrspace(1)* %4, i64 %extract683.i
  %ptrTypeCast699.i = bitcast double addrspace(1)* %350 to <16 x double> addrspace(1)*
  %351 = load <16 x double> addrspace(1)* %ptrTypeCast699.i, align 8
  %352 = fmul <16 x double> %351, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %353 = fadd <16 x double> %344, %352
  %354 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %355 = load i64* %354, align 8
  %356 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %357 = load i64* %356, align 8
  %358 = add i64 %355, %357
  %extract702.i = add i64 %358, 2322432
  %359 = getelementptr inbounds double addrspace(1)* %4, i64 %extract702.i
  %ptrTypeCast718.i = bitcast double addrspace(1)* %359 to <16 x double> addrspace(1)*
  %360 = load <16 x double> addrspace(1)* %ptrTypeCast718.i, align 8
  %361 = fsub <16 x double> %353, %360
  %362 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %363 = load i64* %362, align 8
  %364 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %365 = load i64* %364, align 8
  %366 = add i64 %363, %365
  %extract721.i = add i64 %366, 1437696
  %367 = getelementptr inbounds double addrspace(1)* %4, i64 %extract721.i
  %ptrTypeCast737.i = bitcast double addrspace(1)* %367 to <16 x double> addrspace(1)*
  %368 = load <16 x double> addrspace(1)* %ptrTypeCast737.i, align 8
  %369 = fmul <16 x double> %368, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %370 = fadd <16 x double> %361, %369
  %371 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %372 = load i64* %371, align 8
  %373 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %374 = load i64* %373, align 8
  %375 = add i64 %372, %374
  %extract740.i = add i64 %375, 1548288
  %376 = getelementptr inbounds double addrspace(1)* %4, i64 %extract740.i
  %ptrTypeCast756.i = bitcast double addrspace(1)* %376 to <16 x double> addrspace(1)*
  %377 = load <16 x double> addrspace(1)* %ptrTypeCast756.i, align 8
  %378 = fmul <16 x double> %377, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %379 = fadd <16 x double> %370, %378
  %380 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %381 = load i64* %380, align 8
  %382 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %383 = load i64* %382, align 8
  %384 = add i64 %381, %383
  %385 = getelementptr inbounds double addrspace(1)* %4, i64 %384
  %ptrTypeCast775.i = bitcast double addrspace(1)* %385 to <16 x double> addrspace(1)*
  %386 = load <16 x double> addrspace(1)* %ptrTypeCast775.i, align 8
  %387 = fadd <16 x double> %58, %386
  %388 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %389 = load i64* %388, align 8
  %390 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %391 = load i64* %390, align 8
  %392 = add i64 %389, %391
  %extract778.i = add i64 %392, 331776
  %393 = getelementptr inbounds double addrspace(1)* %4, i64 %extract778.i
  %ptrTypeCast794.i = bitcast double addrspace(1)* %393 to <16 x double> addrspace(1)*
  %394 = load <16 x double> addrspace(1)* %ptrTypeCast794.i, align 8
  %395 = fmul <16 x double> %394, <double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00>
  %396 = fadd <16 x double> %387, %395
  %397 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %398 = load i64* %397, align 8
  %399 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %400 = load i64* %399, align 8
  %401 = add i64 %398, %400
  %extract797.i = add i64 %401, 552960
  %402 = getelementptr inbounds double addrspace(1)* %4, i64 %extract797.i
  %ptrTypeCast813.i = bitcast double addrspace(1)* %402 to <16 x double> addrspace(1)*
  %403 = load <16 x double> addrspace(1)* %ptrTypeCast813.i, align 8
  %404 = fmul <16 x double> %403, <double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00>
  %405 = fadd <16 x double> %396, %404
  %406 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %407 = load i64* %406, align 8
  %408 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %409 = load i64* %408, align 8
  %410 = add i64 %407, %409
  %extract816.i = add i64 %410, 995328
  %411 = getelementptr inbounds double addrspace(1)* %4, i64 %extract816.i
  %ptrTypeCast832.i = bitcast double addrspace(1)* %411 to <16 x double> addrspace(1)*
  %412 = load <16 x double> addrspace(1)* %ptrTypeCast832.i, align 8
  %413 = fadd <16 x double> %405, %412
  %414 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %415 = load i64* %414, align 8
  %416 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %417 = load i64* %416, align 8
  %418 = add i64 %415, %417
  %extract835.i = add i64 %418, 1105920
  %419 = getelementptr inbounds double addrspace(1)* %4, i64 %extract835.i
  %ptrTypeCast851.i = bitcast double addrspace(1)* %419 to <16 x double> addrspace(1)*
  %420 = load <16 x double> addrspace(1)* %ptrTypeCast851.i, align 8
  %421 = fmul <16 x double> %420, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %422 = fadd <16 x double> %413, %421
  %423 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %424 = load i64* %423, align 8
  %425 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %426 = load i64* %425, align 8
  %427 = add i64 %424, %426
  %extract854.i = add i64 %427, 1216512
  %428 = getelementptr inbounds double addrspace(1)* %4, i64 %extract854.i
  %ptrTypeCast870.i = bitcast double addrspace(1)* %428 to <16 x double> addrspace(1)*
  %429 = load <16 x double> addrspace(1)* %ptrTypeCast870.i, align 8
  %430 = fmul <16 x double> %429, <double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00>
  %431 = fadd <16 x double> %422, %430
  %432 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %433 = load i64* %432, align 8
  %434 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %435 = load i64* %434, align 8
  %436 = add i64 %433, %435
  %extract873.i = add i64 %436, 1658880
  %437 = getelementptr inbounds double addrspace(1)* %4, i64 %extract873.i
  %ptrTypeCast889.i = bitcast double addrspace(1)* %437 to <16 x double> addrspace(1)*
  %438 = load <16 x double> addrspace(1)* %ptrTypeCast889.i, align 8
  %439 = fmul <16 x double> %438, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %440 = fadd <16 x double> %431, %439
  %441 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %442 = load i64* %441, align 8
  %443 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %444 = load i64* %443, align 8
  %445 = add i64 %442, %444
  %extract892.i = add i64 %445, 1437696
  %446 = getelementptr inbounds double addrspace(1)* %4, i64 %extract892.i
  %ptrTypeCast908.i = bitcast double addrspace(1)* %446 to <16 x double> addrspace(1)*
  %447 = load <16 x double> addrspace(1)* %ptrTypeCast908.i, align 8
  %448 = fmul <16 x double> %447, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %449 = fadd <16 x double> %440, %448
  %450 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %451 = load i64* %450, align 8
  %452 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %453 = load i64* %452, align 8
  %454 = add i64 %451, %453
  %extract911.i = add i64 %454, 1548288
  %455 = getelementptr inbounds double addrspace(1)* %4, i64 %extract911.i
  %ptrTypeCast927.i = bitcast double addrspace(1)* %455 to <16 x double> addrspace(1)*
  %456 = load <16 x double> addrspace(1)* %ptrTypeCast927.i, align 8
  %457 = fmul <16 x double> %456, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %458 = fadd <16 x double> %449, %457
  %459 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %460 = load i64* %459, align 8
  %461 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %462 = load i64* %461, align 8
  %463 = add i64 %460, %462
  %464 = getelementptr inbounds double addrspace(1)* %4, i64 %463
  %ptrTypeCast946.i = bitcast double addrspace(1)* %464 to <16 x double> addrspace(1)*
  %465 = load <16 x double> addrspace(1)* %ptrTypeCast946.i, align 8
  %466 = fadd <16 x double> %58, %465
  %467 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %468 = load i64* %467, align 8
  %469 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %470 = load i64* %469, align 8
  %471 = add i64 %468, %470
  %extract949.i = add i64 %471, 552960
  %472 = getelementptr inbounds double addrspace(1)* %4, i64 %extract949.i
  %ptrTypeCast965.i = bitcast double addrspace(1)* %472 to <16 x double> addrspace(1)*
  %473 = load <16 x double> addrspace(1)* %ptrTypeCast965.i, align 8
  %474 = fmul <16 x double> %473, <double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00>
  %475 = fadd <16 x double> %466, %474
  %476 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %477 = load i64* %476, align 8
  %478 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %479 = load i64* %478, align 8
  %480 = add i64 %477, %479
  %extract968.i = add i64 %480, 995328
  %481 = getelementptr inbounds double addrspace(1)* %4, i64 %extract968.i
  %ptrTypeCast984.i = bitcast double addrspace(1)* %481 to <16 x double> addrspace(1)*
  %482 = load <16 x double> addrspace(1)* %ptrTypeCast984.i, align 8
  %483 = fadd <16 x double> %475, %482
  %484 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %485 = load i64* %484, align 8
  %486 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %487 = load i64* %486, align 8
  %488 = add i64 %485, %487
  %extract987.i = add i64 %488, 1105920
  %489 = getelementptr inbounds double addrspace(1)* %4, i64 %extract987.i
  %ptrTypeCast1003.i = bitcast double addrspace(1)* %489 to <16 x double> addrspace(1)*
  %490 = load <16 x double> addrspace(1)* %ptrTypeCast1003.i, align 8
  %491 = fmul <16 x double> %490, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %492 = fadd <16 x double> %483, %491
  %493 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %494 = load i64* %493, align 8
  %495 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %496 = load i64* %495, align 8
  %497 = add i64 %494, %496
  %extract1006.i = add i64 %497, 1216512
  %498 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1006.i
  %ptrTypeCast1022.i = bitcast double addrspace(1)* %498 to <16 x double> addrspace(1)*
  %499 = load <16 x double> addrspace(1)* %ptrTypeCast1022.i, align 8
  %500 = fadd <16 x double> %492, %499
  %501 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %502 = load i64* %501, align 8
  %503 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %504 = load i64* %503, align 8
  %505 = add i64 %502, %504
  %extract1025.i = add i64 %505, 1658880
  %506 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1025.i
  %ptrTypeCast1041.i = bitcast double addrspace(1)* %506 to <16 x double> addrspace(1)*
  %507 = load <16 x double> addrspace(1)* %ptrTypeCast1041.i, align 8
  %508 = fmul <16 x double> %507, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %509 = fadd <16 x double> %500, %508
  %510 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %511 = load i64* %510, align 8
  %512 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %513 = load i64* %512, align 8
  %514 = add i64 %511, %513
  %extract1044.i = add i64 %514, 442368
  %515 = getelementptr inbounds double addrspace(1)* %7, i64 %extract1044.i
  %ptrTypeCast1060.i = bitcast double addrspace(1)* %515 to <16 x double> addrspace(1)*
  %516 = load <16 x double> addrspace(1)* %ptrTypeCast1060.i, align 8
  %517 = fmul <16 x double> %516, %117
  %518 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %519 = load i64* %518, align 8
  %520 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %521 = load i64* %520, align 8
  %522 = add i64 %519, %521
  %extract1063.i = add i64 %522, 110592
  %523 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1063.i
  %ptrTypeCast1079.i = bitcast double addrspace(1)* %523 to <16 x double> addrspace(1)*
  %524 = load <16 x double> addrspace(1)* %ptrTypeCast1079.i, align 8
  %525 = fmul <16 x double> %517, %524
  %526 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %527 = load i64* %526, align 8
  %528 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %529 = load i64* %528, align 8
  %530 = add i64 %527, %529
  %extract1082.i = add i64 %530, 110592
  %531 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1082.i
  %ptrTypeCast1098.i = bitcast double addrspace(1)* %531 to <16 x double> addrspace(1)*
  %532 = load <16 x double> addrspace(1)* %ptrTypeCast1098.i, align 8
  %533 = fmul <16 x double> %525, %532
  %534 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %535 = load i64* %534, align 8
  %536 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %537 = load i64* %536, align 8
  %538 = add i64 %535, %537
  %extract1101.i = add i64 %538, 442368
  %539 = getelementptr inbounds double addrspace(1)* %7, i64 %extract1101.i
  %ptrTypeCast1117.i = bitcast double addrspace(1)* %539 to <16 x double> addrspace(1)*
  store <16 x double> %533, <16 x double> addrspace(1)* %ptrTypeCast1117.i, align 8
  %540 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %541 = load i64* %540, align 8
  %542 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %543 = load i64* %542, align 8
  %544 = add i64 %541, %543
  %extract1120.i = add i64 %544, 442368
  %545 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1120.i
  %ptrTypeCast1136.i = bitcast double addrspace(1)* %545 to <16 x double> addrspace(1)*
  %546 = load <16 x double> addrspace(1)* %ptrTypeCast1136.i, align 8
  %547 = fmul <16 x double> %546, %117
  %548 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %549 = load i64* %548, align 8
  %550 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %551 = load i64* %550, align 8
  %552 = add i64 %549, %551
  %553 = getelementptr inbounds double addrspace(1)* %4, i64 %552
  %ptrTypeCast1155.i = bitcast double addrspace(1)* %553 to <16 x double> addrspace(1)*
  %554 = load <16 x double> addrspace(1)* %ptrTypeCast1155.i, align 8
  %555 = fmul <16 x double> %547, %554
  %556 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %557 = load i64* %556, align 8
  %558 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %559 = load i64* %558, align 8
  %560 = add i64 %557, %559
  %extract1158.i = add i64 %560, 442368
  %561 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1158.i
  %ptrTypeCast1174.i = bitcast double addrspace(1)* %561 to <16 x double> addrspace(1)*
  store <16 x double> %555, <16 x double> addrspace(1)* %ptrTypeCast1174.i, align 8
  %562 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %563 = load i64* %562, align 8
  %564 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %565 = load i64* %564, align 8
  %566 = add i64 %563, %565
  %extract1177.i = add i64 %566, 884736
  %567 = getelementptr inbounds double addrspace(1)* %7, i64 %extract1177.i
  %ptrTypeCast1193.i = bitcast double addrspace(1)* %567 to <16 x double> addrspace(1)*
  %568 = load <16 x double> addrspace(1)* %ptrTypeCast1193.i, align 8
  %569 = fmul <16 x double> %568, %170
  %570 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %571 = load i64* %570, align 8
  %572 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %573 = load i64* %572, align 8
  %574 = add i64 %571, %573
  %extract1196.i = add i64 %574, 110592
  %575 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1196.i
  %ptrTypeCast1212.i = bitcast double addrspace(1)* %575 to <16 x double> addrspace(1)*
  %576 = load <16 x double> addrspace(1)* %ptrTypeCast1212.i, align 8
  %577 = fmul <16 x double> %569, %576
  %578 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %579 = load i64* %578, align 8
  %580 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %581 = load i64* %580, align 8
  %582 = add i64 %579, %581
  %extract1215.i = add i64 %582, 442368
  %583 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1215.i
  %ptrTypeCast1231.i = bitcast double addrspace(1)* %583 to <16 x double> addrspace(1)*
  %584 = load <16 x double> addrspace(1)* %ptrTypeCast1231.i, align 8
  %585 = fmul <16 x double> %577, %584
  %586 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %587 = load i64* %586, align 8
  %588 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %589 = load i64* %588, align 8
  %590 = add i64 %587, %589
  %extract1234.i = add i64 %590, 884736
  %591 = getelementptr inbounds double addrspace(1)* %7, i64 %extract1234.i
  %ptrTypeCast1250.i = bitcast double addrspace(1)* %591 to <16 x double> addrspace(1)*
  store <16 x double> %585, <16 x double> addrspace(1)* %ptrTypeCast1250.i, align 8
  %592 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %593 = load i64* %592, align 8
  %594 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %595 = load i64* %594, align 8
  %596 = add i64 %593, %595
  %extract1253.i = add i64 %596, 884736
  %597 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1253.i
  %ptrTypeCast1269.i = bitcast double addrspace(1)* %597 to <16 x double> addrspace(1)*
  %598 = load <16 x double> addrspace(1)* %ptrTypeCast1269.i, align 8
  %599 = fmul <16 x double> %598, %170
  %600 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %601 = load i64* %600, align 8
  %602 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %603 = load i64* %602, align 8
  %604 = add i64 %601, %603
  %extract1272.i = add i64 %604, 552960
  %605 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1272.i
  %ptrTypeCast1288.i = bitcast double addrspace(1)* %605 to <16 x double> addrspace(1)*
  %606 = load <16 x double> addrspace(1)* %ptrTypeCast1288.i, align 8
  %607 = fmul <16 x double> %599, %606
  %608 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %609 = load i64* %608, align 8
  %610 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %611 = load i64* %610, align 8
  %612 = add i64 %609, %611
  %extract1291.i = add i64 %612, 884736
  %613 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1291.i
  %ptrTypeCast1307.i = bitcast double addrspace(1)* %613 to <16 x double> addrspace(1)*
  store <16 x double> %607, <16 x double> addrspace(1)* %ptrTypeCast1307.i, align 8
  %614 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %615 = load i64* %614, align 8
  %616 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %617 = load i64* %616, align 8
  %618 = add i64 %615, %617
  %extract1310.i = add i64 %618, 995328
  %619 = getelementptr inbounds double addrspace(1)* %7, i64 %extract1310.i
  %ptrTypeCast1326.i = bitcast double addrspace(1)* %619 to <16 x double> addrspace(1)*
  %620 = load <16 x double> addrspace(1)* %ptrTypeCast1326.i, align 8
  %621 = fmul <16 x double> %620, %239
  %622 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %623 = load i64* %622, align 8
  %624 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %625 = load i64* %624, align 8
  %626 = add i64 %623, %625
  %extract1329.i = add i64 %626, 221184
  %627 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1329.i
  %ptrTypeCast1345.i = bitcast double addrspace(1)* %627 to <16 x double> addrspace(1)*
  %628 = load <16 x double> addrspace(1)* %ptrTypeCast1345.i, align 8
  %629 = fmul <16 x double> %621, %628
  %630 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %631 = load i64* %630, align 8
  %632 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %633 = load i64* %632, align 8
  %634 = add i64 %631, %633
  %extract1348.i = add i64 %634, 110592
  %635 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1348.i
  %ptrTypeCast1364.i = bitcast double addrspace(1)* %635 to <16 x double> addrspace(1)*
  %636 = load <16 x double> addrspace(1)* %ptrTypeCast1364.i, align 8
  %637 = fmul <16 x double> %629, %636
  %638 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %639 = load i64* %638, align 8
  %640 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %641 = load i64* %640, align 8
  %642 = add i64 %639, %641
  %extract1367.i = add i64 %642, 995328
  %643 = getelementptr inbounds double addrspace(1)* %7, i64 %extract1367.i
  %ptrTypeCast1383.i = bitcast double addrspace(1)* %643 to <16 x double> addrspace(1)*
  store <16 x double> %637, <16 x double> addrspace(1)* %ptrTypeCast1383.i, align 8
  %644 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %645 = load i64* %644, align 8
  %646 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %647 = load i64* %646, align 8
  %648 = add i64 %645, %647
  %extract1386.i = add i64 %648, 995328
  %649 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1386.i
  %ptrTypeCast1402.i = bitcast double addrspace(1)* %649 to <16 x double> addrspace(1)*
  %650 = load <16 x double> addrspace(1)* %ptrTypeCast1402.i, align 8
  %651 = fmul <16 x double> %650, %239
  %652 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %653 = load i64* %652, align 8
  %654 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %655 = load i64* %654, align 8
  %656 = add i64 %653, %655
  %extract1405.i = add i64 %656, 442368
  %657 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1405.i
  %ptrTypeCast1421.i = bitcast double addrspace(1)* %657 to <16 x double> addrspace(1)*
  %658 = load <16 x double> addrspace(1)* %ptrTypeCast1421.i, align 8
  %659 = fmul <16 x double> %651, %658
  %660 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %661 = load i64* %660, align 8
  %662 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %663 = load i64* %662, align 8
  %664 = add i64 %661, %663
  %extract1424.i = add i64 %664, 995328
  %665 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1424.i
  %ptrTypeCast1440.i = bitcast double addrspace(1)* %665 to <16 x double> addrspace(1)*
  store <16 x double> %659, <16 x double> addrspace(1)* %ptrTypeCast1440.i, align 8
  %666 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %667 = load i64* %666, align 8
  %668 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %669 = load i64* %668, align 8
  %670 = add i64 %667, %669
  %extract1443.i = add i64 %670, 1105920
  %671 = getelementptr inbounds double addrspace(1)* %7, i64 %extract1443.i
  %ptrTypeCast1459.i = bitcast double addrspace(1)* %671 to <16 x double> addrspace(1)*
  %672 = load <16 x double> addrspace(1)* %ptrTypeCast1459.i, align 8
  %673 = fmul <16 x double> %672, %310
  %674 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %675 = load i64* %674, align 8
  %676 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %677 = load i64* %676, align 8
  %678 = add i64 %675, %677
  %extract1462.i = add i64 %678, 221184
  %679 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1462.i
  %ptrTypeCast1478.i = bitcast double addrspace(1)* %679 to <16 x double> addrspace(1)*
  %680 = load <16 x double> addrspace(1)* %ptrTypeCast1478.i, align 8
  %681 = fmul <16 x double> %673, %680
  %682 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %683 = load i64* %682, align 8
  %684 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %685 = load i64* %684, align 8
  %686 = add i64 %683, %685
  %extract1481.i = add i64 %686, 221184
  %687 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1481.i
  %ptrTypeCast1497.i = bitcast double addrspace(1)* %687 to <16 x double> addrspace(1)*
  %688 = load <16 x double> addrspace(1)* %ptrTypeCast1497.i, align 8
  %689 = fmul <16 x double> %681, %688
  %690 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %691 = load i64* %690, align 8
  %692 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %693 = load i64* %692, align 8
  %694 = add i64 %691, %693
  %extract1500.i = add i64 %694, 1105920
  %695 = getelementptr inbounds double addrspace(1)* %7, i64 %extract1500.i
  %ptrTypeCast1516.i = bitcast double addrspace(1)* %695 to <16 x double> addrspace(1)*
  store <16 x double> %689, <16 x double> addrspace(1)* %ptrTypeCast1516.i, align 8
  %696 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %697 = load i64* %696, align 8
  %698 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %699 = load i64* %698, align 8
  %700 = add i64 %697, %699
  %extract1519.i = add i64 %700, 1105920
  %701 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1519.i
  %ptrTypeCast1535.i = bitcast double addrspace(1)* %701 to <16 x double> addrspace(1)*
  %702 = load <16 x double> addrspace(1)* %ptrTypeCast1535.i, align 8
  %703 = fmul <16 x double> %702, %310
  %704 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %705 = load i64* %704, align 8
  %706 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %707 = load i64* %706, align 8
  %708 = add i64 %705, %707
  %extract1538.i = add i64 %708, 331776
  %709 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1538.i
  %ptrTypeCast1554.i = bitcast double addrspace(1)* %709 to <16 x double> addrspace(1)*
  %710 = load <16 x double> addrspace(1)* %ptrTypeCast1554.i, align 8
  %711 = fmul <16 x double> %703, %710
  %712 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %713 = load i64* %712, align 8
  %714 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %715 = load i64* %714, align 8
  %716 = add i64 %713, %715
  %extract1557.i = add i64 %716, 1105920
  %717 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1557.i
  %ptrTypeCast1573.i = bitcast double addrspace(1)* %717 to <16 x double> addrspace(1)*
  store <16 x double> %711, <16 x double> addrspace(1)* %ptrTypeCast1573.i, align 8
  %718 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %719 = load i64* %718, align 8
  %720 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %721 = load i64* %720, align 8
  %722 = add i64 %719, %721
  %extract1576.i = add i64 %722, 1216512
  %723 = getelementptr inbounds double addrspace(1)* %7, i64 %extract1576.i
  %ptrTypeCast1592.i = bitcast double addrspace(1)* %723 to <16 x double> addrspace(1)*
  %724 = load <16 x double> addrspace(1)* %ptrTypeCast1592.i, align 8
  %725 = fmul <16 x double> %724, %379
  %726 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %727 = load i64* %726, align 8
  %728 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %729 = load i64* %728, align 8
  %730 = add i64 %727, %729
  %extract1595.i = add i64 %730, 110592
  %731 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1595.i
  %ptrTypeCast1611.i = bitcast double addrspace(1)* %731 to <16 x double> addrspace(1)*
  %732 = load <16 x double> addrspace(1)* %ptrTypeCast1611.i, align 8
  %733 = fmul <16 x double> %725, %732
  %734 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %735 = load i64* %734, align 8
  %736 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %737 = load i64* %736, align 8
  %738 = add i64 %735, %737
  %extract1614.i = add i64 %738, 331776
  %739 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1614.i
  %ptrTypeCast1630.i = bitcast double addrspace(1)* %739 to <16 x double> addrspace(1)*
  %740 = load <16 x double> addrspace(1)* %ptrTypeCast1630.i, align 8
  %741 = fmul <16 x double> %733, %740
  %742 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %743 = load i64* %742, align 8
  %744 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %745 = load i64* %744, align 8
  %746 = add i64 %743, %745
  %extract1633.i = add i64 %746, 1216512
  %747 = getelementptr inbounds double addrspace(1)* %7, i64 %extract1633.i
  %ptrTypeCast1649.i = bitcast double addrspace(1)* %747 to <16 x double> addrspace(1)*
  store <16 x double> %741, <16 x double> addrspace(1)* %ptrTypeCast1649.i, align 8
  %748 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %749 = load i64* %748, align 8
  %750 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %751 = load i64* %750, align 8
  %752 = add i64 %749, %751
  %extract1652.i = add i64 %752, 1216512
  %753 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1652.i
  %ptrTypeCast1668.i = bitcast double addrspace(1)* %753 to <16 x double> addrspace(1)*
  %754 = load <16 x double> addrspace(1)* %ptrTypeCast1668.i, align 8
  %755 = fmul <16 x double> %754, %379
  %756 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %757 = load i64* %756, align 8
  %758 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %759 = load i64* %758, align 8
  %760 = add i64 %757, %759
  %extract1671.i = add i64 %760, 663552
  %761 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1671.i
  %ptrTypeCast1687.i = bitcast double addrspace(1)* %761 to <16 x double> addrspace(1)*
  %762 = load <16 x double> addrspace(1)* %ptrTypeCast1687.i, align 8
  %763 = fmul <16 x double> %755, %762
  %764 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %765 = load i64* %764, align 8
  %766 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %767 = load i64* %766, align 8
  %768 = add i64 %765, %767
  %extract1690.i = add i64 %768, 1216512
  %769 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1690.i
  %ptrTypeCast1706.i = bitcast double addrspace(1)* %769 to <16 x double> addrspace(1)*
  store <16 x double> %763, <16 x double> addrspace(1)* %ptrTypeCast1706.i, align 8
  %770 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %771 = load i64* %770, align 8
  %772 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %773 = load i64* %772, align 8
  %774 = add i64 %771, %773
  %extract1709.i = add i64 %774, 3096576
  %775 = getelementptr inbounds double addrspace(1)* %7, i64 %extract1709.i
  %ptrTypeCast1725.i = bitcast double addrspace(1)* %775 to <16 x double> addrspace(1)*
  %776 = load <16 x double> addrspace(1)* %ptrTypeCast1725.i, align 8
  %777 = fmul <16 x double> %776, %458
  %778 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %779 = load i64* %778, align 8
  %780 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %781 = load i64* %780, align 8
  %782 = add i64 %779, %781
  %extract1728.i = add i64 %782, 1105920
  %783 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1728.i
  %ptrTypeCast1744.i = bitcast double addrspace(1)* %783 to <16 x double> addrspace(1)*
  %784 = load <16 x double> addrspace(1)* %ptrTypeCast1744.i, align 8
  %785 = fmul <16 x double> %777, %784
  %786 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %787 = load i64* %786, align 8
  %788 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %789 = load i64* %788, align 8
  %790 = add i64 %787, %789
  %extract1747.i = add i64 %790, 221184
  %791 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1747.i
  %ptrTypeCast1763.i = bitcast double addrspace(1)* %791 to <16 x double> addrspace(1)*
  %792 = load <16 x double> addrspace(1)* %ptrTypeCast1763.i, align 8
  %793 = fmul <16 x double> %785, %792
  %794 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %795 = load i64* %794, align 8
  %796 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %797 = load i64* %796, align 8
  %798 = add i64 %795, %797
  %extract1766.i = add i64 %798, 3096576
  %799 = getelementptr inbounds double addrspace(1)* %7, i64 %extract1766.i
  %ptrTypeCast1782.i = bitcast double addrspace(1)* %799 to <16 x double> addrspace(1)*
  store <16 x double> %793, <16 x double> addrspace(1)* %ptrTypeCast1782.i, align 8
  %800 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %801 = load i64* %800, align 8
  %802 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %803 = load i64* %802, align 8
  %804 = add i64 %801, %803
  %extract1785.i = add i64 %804, 3096576
  %805 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1785.i
  %ptrTypeCast1801.i = bitcast double addrspace(1)* %805 to <16 x double> addrspace(1)*
  %806 = load <16 x double> addrspace(1)* %ptrTypeCast1801.i, align 8
  %807 = fmul <16 x double> %806, %458
  %808 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %809 = load i64* %808, align 8
  %810 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %811 = load i64* %810, align 8
  %812 = add i64 %809, %811
  %extract1804.i = add i64 %812, 1216512
  %813 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1804.i
  %ptrTypeCast1820.i = bitcast double addrspace(1)* %813 to <16 x double> addrspace(1)*
  %814 = load <16 x double> addrspace(1)* %ptrTypeCast1820.i, align 8
  %815 = fmul <16 x double> %807, %814
  %816 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %817 = load i64* %816, align 8
  %818 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %819 = load i64* %818, align 8
  %820 = add i64 %817, %819
  %extract1823.i = add i64 %820, 3096576
  %821 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1823.i
  %ptrTypeCast1839.i = bitcast double addrspace(1)* %821 to <16 x double> addrspace(1)*
  store <16 x double> %815, <16 x double> addrspace(1)* %ptrTypeCast1839.i, align 8
  %822 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %823 = load i64* %822, align 8
  %824 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %825 = load i64* %824, align 8
  %826 = add i64 %823, %825
  %extract1842.i = add i64 %826, 4976640
  %827 = getelementptr inbounds double addrspace(1)* %7, i64 %extract1842.i
  %ptrTypeCast1858.i = bitcast double addrspace(1)* %827 to <16 x double> addrspace(1)*
  %828 = load <16 x double> addrspace(1)* %ptrTypeCast1858.i, align 8
  %829 = fmul <16 x double> %828, %239
  %830 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %831 = load i64* %830, align 8
  %832 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %833 = load i64* %832, align 8
  %834 = add i64 %831, %833
  %extract1861.i = add i64 %834, 4976640
  %835 = getelementptr inbounds double addrspace(1)* %7, i64 %extract1861.i
  %ptrTypeCast1877.i = bitcast double addrspace(1)* %835 to <16 x double> addrspace(1)*
  store <16 x double> %829, <16 x double> addrspace(1)* %ptrTypeCast1877.i, align 8
  %836 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %837 = load i64* %836, align 8
  %838 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %839 = load i64* %838, align 8
  %840 = add i64 %837, %839
  %extract1880.i = add i64 %840, 4976640
  %841 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1880.i
  %ptrTypeCast1896.i = bitcast double addrspace(1)* %841 to <16 x double> addrspace(1)*
  %842 = load <16 x double> addrspace(1)* %ptrTypeCast1896.i, align 8
  %843 = fmul <16 x double> %842, %239
  %844 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %845 = load i64* %844, align 8
  %846 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %847 = load i64* %846, align 8
  %848 = add i64 %845, %847
  %extract1899.i = add i64 %848, 1105920
  %849 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1899.i
  %ptrTypeCast1915.i = bitcast double addrspace(1)* %849 to <16 x double> addrspace(1)*
  %850 = load <16 x double> addrspace(1)* %ptrTypeCast1915.i, align 8
  %851 = fmul <16 x double> %843, %850
  %852 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %853 = load i64* %852, align 8
  %854 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %855 = load i64* %854, align 8
  %856 = add i64 %853, %855
  %extract1918.i = add i64 %856, 110592
  %857 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1918.i
  %ptrTypeCast1934.i = bitcast double addrspace(1)* %857 to <16 x double> addrspace(1)*
  %858 = load <16 x double> addrspace(1)* %ptrTypeCast1934.i, align 8
  %859 = fmul <16 x double> %851, %858
  %860 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %861 = load i64* %860, align 8
  %862 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %863 = load i64* %862, align 8
  %864 = add i64 %861, %863
  %extract1937.i = add i64 %864, 4976640
  %865 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1937.i
  %ptrTypeCast1953.i = bitcast double addrspace(1)* %865 to <16 x double> addrspace(1)*
  store <16 x double> %859, <16 x double> addrspace(1)* %ptrTypeCast1953.i, align 8
  %866 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %867 = load i64* %866, align 8
  %868 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %869 = load i64* %868, align 8
  %870 = add i64 %867, %869
  %extract1956.i = add i64 %870, 13271040
  %871 = getelementptr inbounds double addrspace(1)* %7, i64 %extract1956.i
  %ptrTypeCast1972.i = bitcast double addrspace(1)* %871 to <16 x double> addrspace(1)*
  %872 = load <16 x double> addrspace(1)* %ptrTypeCast1972.i, align 8
  %873 = fmul <16 x double> %872, %58
  %874 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %875 = load i64* %874, align 8
  %876 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %877 = load i64* %876, align 8
  %878 = add i64 %875, %877
  %extract1975.i = add i64 %878, 1437696
  %879 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1975.i
  %ptrTypeCast1991.i = bitcast double addrspace(1)* %879 to <16 x double> addrspace(1)*
  %880 = load <16 x double> addrspace(1)* %ptrTypeCast1991.i, align 8
  %881 = fmul <16 x double> %873, %880
  %882 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %883 = load i64* %882, align 8
  %884 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %885 = load i64* %884, align 8
  %886 = add i64 %883, %885
  %extract1994.i = add i64 %886, 884736
  %887 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1994.i
  %ptrTypeCast2010.i = bitcast double addrspace(1)* %887 to <16 x double> addrspace(1)*
  %888 = load <16 x double> addrspace(1)* %ptrTypeCast2010.i, align 8
  %889 = fmul <16 x double> %881, %888
  %890 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %891 = load i64* %890, align 8
  %892 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %893 = load i64* %892, align 8
  %894 = add i64 %891, %893
  %extract2013.i = add i64 %894, 13271040
  %895 = getelementptr inbounds double addrspace(1)* %7, i64 %extract2013.i
  %ptrTypeCast2029.i = bitcast double addrspace(1)* %895 to <16 x double> addrspace(1)*
  store <16 x double> %889, <16 x double> addrspace(1)* %ptrTypeCast2029.i, align 8
  %896 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %897 = load i64* %896, align 8
  %898 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %899 = load i64* %898, align 8
  %900 = add i64 %897, %899
  %extract2032.i = add i64 %900, 13271040
  %901 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2032.i
  %ptrTypeCast2048.i = bitcast double addrspace(1)* %901 to <16 x double> addrspace(1)*
  %902 = load <16 x double> addrspace(1)* %ptrTypeCast2048.i, align 8
  %903 = fmul <16 x double> %902, %58
  %904 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %905 = load i64* %904, align 8
  %906 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %907 = load i64* %906, align 8
  %908 = add i64 %905, %907
  %extract2051.i = add i64 %908, 2101248
  %909 = getelementptr inbounds double addrspace(1)* %4, i64 %extract2051.i
  %ptrTypeCast2067.i = bitcast double addrspace(1)* %909 to <16 x double> addrspace(1)*
  %910 = load <16 x double> addrspace(1)* %ptrTypeCast2067.i, align 8
  %911 = fmul <16 x double> %903, %910
  %912 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %913 = load i64* %912, align 8
  %914 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %915 = load i64* %914, align 8
  %916 = add i64 %913, %915
  %extract2070.i = add i64 %916, 13271040
  %917 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2070.i
  %ptrTypeCast2086.i = bitcast double addrspace(1)* %917 to <16 x double> addrspace(1)*
  store <16 x double> %911, <16 x double> addrspace(1)* %ptrTypeCast2086.i, align 8
  %918 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %919 = load i64* %918, align 8
  %920 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %921 = load i64* %920, align 8
  %922 = add i64 %919, %921
  %extract2089.i = add i64 %922, 1327104
  %923 = getelementptr inbounds double addrspace(1)* %13, i64 %extract2089.i
  %ptrTypeCast2105.i = bitcast double addrspace(1)* %923 to <16 x double> addrspace(1)*
  %924 = load <16 x double> addrspace(1)* %ptrTypeCast2105.i, align 8
  %925 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %926 = load i64* %925, align 8
  %927 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %928 = load i64* %927, align 8
  %929 = add i64 %926, %928
  %extract2108.i = add i64 %929, 13824000
  %930 = getelementptr inbounds double addrspace(1)* %7, i64 %extract2108.i
  %ptrTypeCast2124.i = bitcast double addrspace(1)* %930 to <16 x double> addrspace(1)*
  %931 = load <16 x double> addrspace(1)* %ptrTypeCast2124.i, align 8
  %932 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %931
  %933 = fmul <16 x double> %239, %932
  %934 = fmul <16 x double> %924, %933
  %extract2125.i = extractelement <16 x double> %934, i32 0
  %extract2126.i = extractelement <16 x double> %934, i32 1
  %extract2127.i = extractelement <16 x double> %934, i32 2
  %extract2128.i = extractelement <16 x double> %934, i32 3
  %extract2129.i = extractelement <16 x double> %934, i32 4
  %extract2130.i = extractelement <16 x double> %934, i32 5
  %extract2131.i = extractelement <16 x double> %934, i32 6
  %extract2132.i = extractelement <16 x double> %934, i32 7
  %extract2133.i = extractelement <16 x double> %934, i32 8
  %extract2134.i = extractelement <16 x double> %934, i32 9
  %extract2135.i = extractelement <16 x double> %934, i32 10
  %extract2136.i = extractelement <16 x double> %934, i32 11
  %extract2137.i = extractelement <16 x double> %934, i32 12
  %extract2138.i = extractelement <16 x double> %934, i32 13
  %extract2139.i = extractelement <16 x double> %934, i32 14
  %extract2140.i = extractelement <16 x double> %934, i32 15
  %935 = fadd <16 x double> %934, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %936 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %935
  %937 = fmul <16 x double> %934, %936
  %938 = call double @_Z4fmaxdd(double %extract2125.i, double 1.000000e-200) nounwind
  %939 = call double @_Z4fmaxdd(double %extract2126.i, double 1.000000e-200) nounwind
  %940 = call double @_Z4fmaxdd(double %extract2127.i, double 1.000000e-200) nounwind
  %941 = call double @_Z4fmaxdd(double %extract2128.i, double 1.000000e-200) nounwind
  %942 = call double @_Z4fmaxdd(double %extract2129.i, double 1.000000e-200) nounwind
  %943 = call double @_Z4fmaxdd(double %extract2130.i, double 1.000000e-200) nounwind
  %944 = call double @_Z4fmaxdd(double %extract2131.i, double 1.000000e-200) nounwind
  %945 = call double @_Z4fmaxdd(double %extract2132.i, double 1.000000e-200) nounwind
  %946 = call double @_Z4fmaxdd(double %extract2133.i, double 1.000000e-200) nounwind
  %947 = call double @_Z4fmaxdd(double %extract2134.i, double 1.000000e-200) nounwind
  %948 = call double @_Z4fmaxdd(double %extract2135.i, double 1.000000e-200) nounwind
  %949 = call double @_Z4fmaxdd(double %extract2136.i, double 1.000000e-200) nounwind
  %950 = call double @_Z4fmaxdd(double %extract2137.i, double 1.000000e-200) nounwind
  %951 = call double @_Z4fmaxdd(double %extract2138.i, double 1.000000e-200) nounwind
  %952 = call double @_Z4fmaxdd(double %extract2139.i, double 1.000000e-200) nounwind
  %953 = call double @_Z4fmaxdd(double %extract2140.i, double 1.000000e-200) nounwind
  %954 = call double @_Z5log10d(double %938) nounwind
  %955 = call double @_Z5log10d(double %939) nounwind
  %956 = call double @_Z5log10d(double %940) nounwind
  %957 = call double @_Z5log10d(double %941) nounwind
  %958 = call double @_Z5log10d(double %942) nounwind
  %959 = call double @_Z5log10d(double %943) nounwind
  %960 = call double @_Z5log10d(double %944) nounwind
  %961 = call double @_Z5log10d(double %945) nounwind
  %962 = call double @_Z5log10d(double %946) nounwind
  %963 = call double @_Z5log10d(double %947) nounwind
  %964 = call double @_Z5log10d(double %948) nounwind
  %965 = call double @_Z5log10d(double %949) nounwind
  %966 = call double @_Z5log10d(double %950) nounwind
  %967 = call double @_Z5log10d(double %951) nounwind
  %968 = call double @_Z5log10d(double %952) nounwind
  %969 = call double @_Z5log10d(double %953) nounwind
  %temp.vect2268.i = insertelement <16 x double> undef, double %954, i32 0
  %temp.vect2269.i = insertelement <16 x double> %temp.vect2268.i, double %955, i32 1
  %temp.vect2270.i = insertelement <16 x double> %temp.vect2269.i, double %956, i32 2
  %temp.vect2271.i = insertelement <16 x double> %temp.vect2270.i, double %957, i32 3
  %temp.vect2272.i = insertelement <16 x double> %temp.vect2271.i, double %958, i32 4
  %temp.vect2273.i = insertelement <16 x double> %temp.vect2272.i, double %959, i32 5
  %temp.vect2274.i = insertelement <16 x double> %temp.vect2273.i, double %960, i32 6
  %temp.vect2275.i = insertelement <16 x double> %temp.vect2274.i, double %961, i32 7
  %temp.vect2276.i = insertelement <16 x double> %temp.vect2275.i, double %962, i32 8
  %temp.vect2277.i = insertelement <16 x double> %temp.vect2276.i, double %963, i32 9
  %temp.vect2278.i = insertelement <16 x double> %temp.vect2277.i, double %964, i32 10
  %temp.vect2279.i = insertelement <16 x double> %temp.vect2278.i, double %965, i32 11
  %temp.vect2280.i = insertelement <16 x double> %temp.vect2279.i, double %966, i32 12
  %temp.vect2281.i = insertelement <16 x double> %temp.vect2280.i, double %967, i32 13
  %temp.vect2282.i = insertelement <16 x double> %temp.vect2281.i, double %968, i32 14
  %temp.vect2283.i = insertelement <16 x double> %temp.vect2282.i, double %969, i32 15
  %970 = fmul <16 x double> %33, <double 0xBF43323D7CECF427, double 0xBF43323D7CECF427, double 0xBF43323D7CECF427, double 0xBF43323D7CECF427, double 0xBF43323D7CECF427, double 0xBF43323D7CECF427, double 0xBF43323D7CECF427, double 0xBF43323D7CECF427, double 0xBF43323D7CECF427, double 0xBF43323D7CECF427, double 0xBF43323D7CECF427, double 0xBF43323D7CECF427, double 0xBF43323D7CECF427, double 0xBF43323D7CECF427, double 0xBF43323D7CECF427, double 0xBF43323D7CECF427>
  %extract2141.i = extractelement <16 x double> %970, i32 0
  %extract2142.i = extractelement <16 x double> %970, i32 1
  %extract2143.i = extractelement <16 x double> %970, i32 2
  %extract2144.i = extractelement <16 x double> %970, i32 3
  %extract2145.i = extractelement <16 x double> %970, i32 4
  %extract2146.i = extractelement <16 x double> %970, i32 5
  %extract2147.i = extractelement <16 x double> %970, i32 6
  %extract2148.i = extractelement <16 x double> %970, i32 7
  %extract2149.i = extractelement <16 x double> %970, i32 8
  %extract2150.i = extractelement <16 x double> %970, i32 9
  %extract2151.i = extractelement <16 x double> %970, i32 10
  %extract2152.i = extractelement <16 x double> %970, i32 11
  %extract2153.i = extractelement <16 x double> %970, i32 12
  %extract2154.i = extractelement <16 x double> %970, i32 13
  %extract2155.i = extractelement <16 x double> %970, i32 14
  %extract2156.i = extractelement <16 x double> %970, i32 15
  %971 = call double @_Z3expd(double %extract2141.i) nounwind
  %972 = call double @_Z3expd(double %extract2142.i) nounwind
  %973 = call double @_Z3expd(double %extract2143.i) nounwind
  %974 = call double @_Z3expd(double %extract2144.i) nounwind
  %975 = call double @_Z3expd(double %extract2145.i) nounwind
  %976 = call double @_Z3expd(double %extract2146.i) nounwind
  %977 = call double @_Z3expd(double %extract2147.i) nounwind
  %978 = call double @_Z3expd(double %extract2148.i) nounwind
  %979 = call double @_Z3expd(double %extract2149.i) nounwind
  %980 = call double @_Z3expd(double %extract2150.i) nounwind
  %981 = call double @_Z3expd(double %extract2151.i) nounwind
  %982 = call double @_Z3expd(double %extract2152.i) nounwind
  %983 = call double @_Z3expd(double %extract2153.i) nounwind
  %984 = call double @_Z3expd(double %extract2154.i) nounwind
  %985 = call double @_Z3expd(double %extract2155.i) nounwind
  %986 = call double @_Z3expd(double %extract2156.i) nounwind
  %temp.vect.i = insertelement <16 x double> undef, double %971, i32 0
  %temp.vect2157.i = insertelement <16 x double> %temp.vect.i, double %972, i32 1
  %temp.vect2158.i = insertelement <16 x double> %temp.vect2157.i, double %973, i32 2
  %temp.vect2159.i = insertelement <16 x double> %temp.vect2158.i, double %974, i32 3
  %temp.vect2160.i = insertelement <16 x double> %temp.vect2159.i, double %975, i32 4
  %temp.vect2161.i = insertelement <16 x double> %temp.vect2160.i, double %976, i32 5
  %temp.vect2162.i = insertelement <16 x double> %temp.vect2161.i, double %977, i32 6
  %temp.vect2163.i = insertelement <16 x double> %temp.vect2162.i, double %978, i32 7
  %temp.vect2164.i = insertelement <16 x double> %temp.vect2163.i, double %979, i32 8
  %temp.vect2165.i = insertelement <16 x double> %temp.vect2164.i, double %980, i32 9
  %temp.vect2166.i = insertelement <16 x double> %temp.vect2165.i, double %981, i32 10
  %temp.vect2167.i = insertelement <16 x double> %temp.vect2166.i, double %982, i32 11
  %temp.vect2168.i = insertelement <16 x double> %temp.vect2167.i, double %983, i32 12
  %temp.vect2169.i = insertelement <16 x double> %temp.vect2168.i, double %984, i32 13
  %temp.vect2170.i = insertelement <16 x double> %temp.vect2169.i, double %985, i32 14
  %temp.vect2171.i = insertelement <16 x double> %temp.vect2170.i, double %986, i32 15
  %987 = fmul <16 x double> %temp.vect2171.i, <double 6.630000e-01, double 6.630000e-01, double 6.630000e-01, double 6.630000e-01, double 6.630000e-01, double 6.630000e-01, double 6.630000e-01, double 6.630000e-01, double 6.630000e-01, double 6.630000e-01, double 6.630000e-01, double 6.630000e-01, double 6.630000e-01, double 6.630000e-01, double 6.630000e-01, double 6.630000e-01>
  %988 = fmul <16 x double> %33, <double -3.125000e-04, double -3.125000e-04, double -3.125000e-04, double -3.125000e-04, double -3.125000e-04, double -3.125000e-04, double -3.125000e-04, double -3.125000e-04, double -3.125000e-04, double -3.125000e-04, double -3.125000e-04, double -3.125000e-04, double -3.125000e-04, double -3.125000e-04, double -3.125000e-04, double -3.125000e-04>
  %extract2172.i = extractelement <16 x double> %988, i32 0
  %extract2173.i = extractelement <16 x double> %988, i32 1
  %extract2174.i = extractelement <16 x double> %988, i32 2
  %extract2175.i = extractelement <16 x double> %988, i32 3
  %extract2176.i = extractelement <16 x double> %988, i32 4
  %extract2177.i = extractelement <16 x double> %988, i32 5
  %extract2178.i = extractelement <16 x double> %988, i32 6
  %extract2179.i = extractelement <16 x double> %988, i32 7
  %extract2180.i = extractelement <16 x double> %988, i32 8
  %extract2181.i = extractelement <16 x double> %988, i32 9
  %extract2182.i = extractelement <16 x double> %988, i32 10
  %extract2183.i = extractelement <16 x double> %988, i32 11
  %extract2184.i = extractelement <16 x double> %988, i32 12
  %extract2185.i = extractelement <16 x double> %988, i32 13
  %extract2186.i = extractelement <16 x double> %988, i32 14
  %extract2187.i = extractelement <16 x double> %988, i32 15
  %989 = call double @_Z3expd(double %extract2172.i) nounwind
  %990 = call double @_Z3expd(double %extract2173.i) nounwind
  %991 = call double @_Z3expd(double %extract2174.i) nounwind
  %992 = call double @_Z3expd(double %extract2175.i) nounwind
  %993 = call double @_Z3expd(double %extract2176.i) nounwind
  %994 = call double @_Z3expd(double %extract2177.i) nounwind
  %995 = call double @_Z3expd(double %extract2178.i) nounwind
  %996 = call double @_Z3expd(double %extract2179.i) nounwind
  %997 = call double @_Z3expd(double %extract2180.i) nounwind
  %998 = call double @_Z3expd(double %extract2181.i) nounwind
  %999 = call double @_Z3expd(double %extract2182.i) nounwind
  %1000 = call double @_Z3expd(double %extract2183.i) nounwind
  %1001 = call double @_Z3expd(double %extract2184.i) nounwind
  %1002 = call double @_Z3expd(double %extract2185.i) nounwind
  %1003 = call double @_Z3expd(double %extract2186.i) nounwind
  %1004 = call double @_Z3expd(double %extract2187.i) nounwind
  %temp.vect2188.i = insertelement <16 x double> undef, double %989, i32 0
  %temp.vect2189.i = insertelement <16 x double> %temp.vect2188.i, double %990, i32 1
  %temp.vect2190.i = insertelement <16 x double> %temp.vect2189.i, double %991, i32 2
  %temp.vect2191.i = insertelement <16 x double> %temp.vect2190.i, double %992, i32 3
  %temp.vect2192.i = insertelement <16 x double> %temp.vect2191.i, double %993, i32 4
  %temp.vect2193.i = insertelement <16 x double> %temp.vect2192.i, double %994, i32 5
  %temp.vect2194.i = insertelement <16 x double> %temp.vect2193.i, double %995, i32 6
  %temp.vect2195.i = insertelement <16 x double> %temp.vect2194.i, double %996, i32 7
  %temp.vect2196.i = insertelement <16 x double> %temp.vect2195.i, double %997, i32 8
  %temp.vect2197.i = insertelement <16 x double> %temp.vect2196.i, double %998, i32 9
  %temp.vect2198.i = insertelement <16 x double> %temp.vect2197.i, double %999, i32 10
  %temp.vect2199.i = insertelement <16 x double> %temp.vect2198.i, double %1000, i32 11
  %temp.vect2200.i = insertelement <16 x double> %temp.vect2199.i, double %1001, i32 12
  %temp.vect2201.i = insertelement <16 x double> %temp.vect2200.i, double %1002, i32 13
  %temp.vect2202.i = insertelement <16 x double> %temp.vect2201.i, double %1003, i32 14
  %temp.vect2203.i = insertelement <16 x double> %temp.vect2202.i, double %1004, i32 15
  %1005 = fmul <16 x double> %temp.vect2203.i, <double 3.370000e-01, double 3.370000e-01, double 3.370000e-01, double 3.370000e-01, double 3.370000e-01, double 3.370000e-01, double 3.370000e-01, double 3.370000e-01, double 3.370000e-01, double 3.370000e-01, double 3.370000e-01, double 3.370000e-01, double 3.370000e-01, double 3.370000e-01, double 3.370000e-01, double 3.370000e-01>
  %1006 = fadd <16 x double> %987, %1005
  %1007 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %33
  %1008 = fmul <16 x double> %1007, <double -4.131000e+03, double -4.131000e+03, double -4.131000e+03, double -4.131000e+03, double -4.131000e+03, double -4.131000e+03, double -4.131000e+03, double -4.131000e+03, double -4.131000e+03, double -4.131000e+03, double -4.131000e+03, double -4.131000e+03, double -4.131000e+03, double -4.131000e+03, double -4.131000e+03, double -4.131000e+03>
  %extract2204.i = extractelement <16 x double> %1008, i32 0
  %extract2205.i = extractelement <16 x double> %1008, i32 1
  %extract2206.i = extractelement <16 x double> %1008, i32 2
  %extract2207.i = extractelement <16 x double> %1008, i32 3
  %extract2208.i = extractelement <16 x double> %1008, i32 4
  %extract2209.i = extractelement <16 x double> %1008, i32 5
  %extract2210.i = extractelement <16 x double> %1008, i32 6
  %extract2211.i = extractelement <16 x double> %1008, i32 7
  %extract2212.i = extractelement <16 x double> %1008, i32 8
  %extract2213.i = extractelement <16 x double> %1008, i32 9
  %extract2214.i = extractelement <16 x double> %1008, i32 10
  %extract2215.i = extractelement <16 x double> %1008, i32 11
  %extract2216.i = extractelement <16 x double> %1008, i32 12
  %extract2217.i = extractelement <16 x double> %1008, i32 13
  %extract2218.i = extractelement <16 x double> %1008, i32 14
  %extract2219.i = extractelement <16 x double> %1008, i32 15
  %1009 = call double @_Z3expd(double %extract2204.i) nounwind
  %1010 = call double @_Z3expd(double %extract2205.i) nounwind
  %1011 = call double @_Z3expd(double %extract2206.i) nounwind
  %1012 = call double @_Z3expd(double %extract2207.i) nounwind
  %1013 = call double @_Z3expd(double %extract2208.i) nounwind
  %1014 = call double @_Z3expd(double %extract2209.i) nounwind
  %1015 = call double @_Z3expd(double %extract2210.i) nounwind
  %1016 = call double @_Z3expd(double %extract2211.i) nounwind
  %1017 = call double @_Z3expd(double %extract2212.i) nounwind
  %1018 = call double @_Z3expd(double %extract2213.i) nounwind
  %1019 = call double @_Z3expd(double %extract2214.i) nounwind
  %1020 = call double @_Z3expd(double %extract2215.i) nounwind
  %1021 = call double @_Z3expd(double %extract2216.i) nounwind
  %1022 = call double @_Z3expd(double %extract2217.i) nounwind
  %1023 = call double @_Z3expd(double %extract2218.i) nounwind
  %1024 = call double @_Z3expd(double %extract2219.i) nounwind
  %temp.vect2220.i = insertelement <16 x double> undef, double %1009, i32 0
  %temp.vect2221.i = insertelement <16 x double> %temp.vect2220.i, double %1010, i32 1
  %temp.vect2222.i = insertelement <16 x double> %temp.vect2221.i, double %1011, i32 2
  %temp.vect2223.i = insertelement <16 x double> %temp.vect2222.i, double %1012, i32 3
  %temp.vect2224.i = insertelement <16 x double> %temp.vect2223.i, double %1013, i32 4
  %temp.vect2225.i = insertelement <16 x double> %temp.vect2224.i, double %1014, i32 5
  %temp.vect2226.i = insertelement <16 x double> %temp.vect2225.i, double %1015, i32 6
  %temp.vect2227.i = insertelement <16 x double> %temp.vect2226.i, double %1016, i32 7
  %temp.vect2228.i = insertelement <16 x double> %temp.vect2227.i, double %1017, i32 8
  %temp.vect2229.i = insertelement <16 x double> %temp.vect2228.i, double %1018, i32 9
  %temp.vect2230.i = insertelement <16 x double> %temp.vect2229.i, double %1019, i32 10
  %temp.vect2231.i = insertelement <16 x double> %temp.vect2230.i, double %1020, i32 11
  %temp.vect2232.i = insertelement <16 x double> %temp.vect2231.i, double %1021, i32 12
  %temp.vect2233.i = insertelement <16 x double> %temp.vect2232.i, double %1022, i32 13
  %temp.vect2234.i = insertelement <16 x double> %temp.vect2233.i, double %1023, i32 14
  %temp.vect2235.i = insertelement <16 x double> %temp.vect2234.i, double %1024, i32 15
  %1025 = fadd <16 x double> %1006, %temp.vect2235.i
  %extract2236.i = extractelement <16 x double> %1025, i32 0
  %extract2237.i = extractelement <16 x double> %1025, i32 1
  %extract2238.i = extractelement <16 x double> %1025, i32 2
  %extract2239.i = extractelement <16 x double> %1025, i32 3
  %extract2240.i = extractelement <16 x double> %1025, i32 4
  %extract2241.i = extractelement <16 x double> %1025, i32 5
  %extract2242.i = extractelement <16 x double> %1025, i32 6
  %extract2243.i = extractelement <16 x double> %1025, i32 7
  %extract2244.i = extractelement <16 x double> %1025, i32 8
  %extract2245.i = extractelement <16 x double> %1025, i32 9
  %extract2246.i = extractelement <16 x double> %1025, i32 10
  %extract2247.i = extractelement <16 x double> %1025, i32 11
  %extract2248.i = extractelement <16 x double> %1025, i32 12
  %extract2249.i = extractelement <16 x double> %1025, i32 13
  %extract2250.i = extractelement <16 x double> %1025, i32 14
  %extract2251.i = extractelement <16 x double> %1025, i32 15
  %1026 = call double @_Z4fmaxdd(double %extract2236.i, double 1.000000e-200) nounwind
  %1027 = call double @_Z4fmaxdd(double %extract2237.i, double 1.000000e-200) nounwind
  %1028 = call double @_Z4fmaxdd(double %extract2238.i, double 1.000000e-200) nounwind
  %1029 = call double @_Z4fmaxdd(double %extract2239.i, double 1.000000e-200) nounwind
  %1030 = call double @_Z4fmaxdd(double %extract2240.i, double 1.000000e-200) nounwind
  %1031 = call double @_Z4fmaxdd(double %extract2241.i, double 1.000000e-200) nounwind
  %1032 = call double @_Z4fmaxdd(double %extract2242.i, double 1.000000e-200) nounwind
  %1033 = call double @_Z4fmaxdd(double %extract2243.i, double 1.000000e-200) nounwind
  %1034 = call double @_Z4fmaxdd(double %extract2244.i, double 1.000000e-200) nounwind
  %1035 = call double @_Z4fmaxdd(double %extract2245.i, double 1.000000e-200) nounwind
  %1036 = call double @_Z4fmaxdd(double %extract2246.i, double 1.000000e-200) nounwind
  %1037 = call double @_Z4fmaxdd(double %extract2247.i, double 1.000000e-200) nounwind
  %1038 = call double @_Z4fmaxdd(double %extract2248.i, double 1.000000e-200) nounwind
  %1039 = call double @_Z4fmaxdd(double %extract2249.i, double 1.000000e-200) nounwind
  %1040 = call double @_Z4fmaxdd(double %extract2250.i, double 1.000000e-200) nounwind
  %1041 = call double @_Z4fmaxdd(double %extract2251.i, double 1.000000e-200) nounwind
  %1042 = call double @_Z5log10d(double %1026) nounwind
  %1043 = call double @_Z5log10d(double %1027) nounwind
  %1044 = call double @_Z5log10d(double %1028) nounwind
  %1045 = call double @_Z5log10d(double %1029) nounwind
  %1046 = call double @_Z5log10d(double %1030) nounwind
  %1047 = call double @_Z5log10d(double %1031) nounwind
  %1048 = call double @_Z5log10d(double %1032) nounwind
  %1049 = call double @_Z5log10d(double %1033) nounwind
  %1050 = call double @_Z5log10d(double %1034) nounwind
  %1051 = call double @_Z5log10d(double %1035) nounwind
  %1052 = call double @_Z5log10d(double %1036) nounwind
  %1053 = call double @_Z5log10d(double %1037) nounwind
  %1054 = call double @_Z5log10d(double %1038) nounwind
  %1055 = call double @_Z5log10d(double %1039) nounwind
  %1056 = call double @_Z5log10d(double %1040) nounwind
  %1057 = call double @_Z5log10d(double %1041) nounwind
  %temp.vect2252.i = insertelement <16 x double> undef, double %1042, i32 0
  %temp.vect2253.i = insertelement <16 x double> %temp.vect2252.i, double %1043, i32 1
  %temp.vect2254.i = insertelement <16 x double> %temp.vect2253.i, double %1044, i32 2
  %temp.vect2255.i = insertelement <16 x double> %temp.vect2254.i, double %1045, i32 3
  %temp.vect2256.i = insertelement <16 x double> %temp.vect2255.i, double %1046, i32 4
  %temp.vect2257.i = insertelement <16 x double> %temp.vect2256.i, double %1047, i32 5
  %temp.vect2258.i = insertelement <16 x double> %temp.vect2257.i, double %1048, i32 6
  %temp.vect2259.i = insertelement <16 x double> %temp.vect2258.i, double %1049, i32 7
  %temp.vect2260.i = insertelement <16 x double> %temp.vect2259.i, double %1050, i32 8
  %temp.vect2261.i = insertelement <16 x double> %temp.vect2260.i, double %1051, i32 9
  %temp.vect2262.i = insertelement <16 x double> %temp.vect2261.i, double %1052, i32 10
  %temp.vect2263.i = insertelement <16 x double> %temp.vect2262.i, double %1053, i32 11
  %temp.vect2264.i = insertelement <16 x double> %temp.vect2263.i, double %1054, i32 12
  %temp.vect2265.i = insertelement <16 x double> %temp.vect2264.i, double %1055, i32 13
  %temp.vect2266.i = insertelement <16 x double> %temp.vect2265.i, double %1056, i32 14
  %temp.vect2267.i = insertelement <16 x double> %temp.vect2266.i, double %1057, i32 15
  %1058 = fmul <16 x double> %temp.vect2267.i, <double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00>
  %1059 = fsub <16 x double> <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>, %1058
  %1060 = fmul <16 x double> %temp.vect2267.i, <double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01>
  %1061 = fadd <16 x double> %1060, <double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01>
  %1062 = fsub <16 x double> %temp.vect2283.i, %1061
  %1063 = fmul <16 x double> %1062, <double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01>
  %1064 = fsub <16 x double> %1059, %1063
  %1065 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1064
  %1066 = fmul <16 x double> %1062, %1065
  %1067 = fmul <16 x double> %1066, %1066
  %1068 = fadd <16 x double> %1067, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %1069 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1068
  %1070 = fmul <16 x double> %temp.vect2267.i, %1069
  %extract2284.i = extractelement <16 x double> %1070, i32 0
  %extract2285.i = extractelement <16 x double> %1070, i32 1
  %extract2286.i = extractelement <16 x double> %1070, i32 2
  %extract2287.i = extractelement <16 x double> %1070, i32 3
  %extract2288.i = extractelement <16 x double> %1070, i32 4
  %extract2289.i = extractelement <16 x double> %1070, i32 5
  %extract2290.i = extractelement <16 x double> %1070, i32 6
  %extract2291.i = extractelement <16 x double> %1070, i32 7
  %extract2292.i = extractelement <16 x double> %1070, i32 8
  %extract2293.i = extractelement <16 x double> %1070, i32 9
  %extract2294.i = extractelement <16 x double> %1070, i32 10
  %extract2295.i = extractelement <16 x double> %1070, i32 11
  %extract2296.i = extractelement <16 x double> %1070, i32 12
  %extract2297.i = extractelement <16 x double> %1070, i32 13
  %extract2298.i = extractelement <16 x double> %1070, i32 14
  %extract2299.i = extractelement <16 x double> %1070, i32 15
  %1071 = call double @_Z5exp10d(double %extract2284.i) nounwind
  %1072 = call double @_Z5exp10d(double %extract2285.i) nounwind
  %1073 = call double @_Z5exp10d(double %extract2286.i) nounwind
  %1074 = call double @_Z5exp10d(double %extract2287.i) nounwind
  %1075 = call double @_Z5exp10d(double %extract2288.i) nounwind
  %1076 = call double @_Z5exp10d(double %extract2289.i) nounwind
  %1077 = call double @_Z5exp10d(double %extract2290.i) nounwind
  %1078 = call double @_Z5exp10d(double %extract2291.i) nounwind
  %1079 = call double @_Z5exp10d(double %extract2292.i) nounwind
  %1080 = call double @_Z5exp10d(double %extract2293.i) nounwind
  %1081 = call double @_Z5exp10d(double %extract2294.i) nounwind
  %1082 = call double @_Z5exp10d(double %extract2295.i) nounwind
  %1083 = call double @_Z5exp10d(double %extract2296.i) nounwind
  %1084 = call double @_Z5exp10d(double %extract2297.i) nounwind
  %1085 = call double @_Z5exp10d(double %extract2298.i) nounwind
  %1086 = call double @_Z5exp10d(double %extract2299.i) nounwind
  %temp.vect2300.i = insertelement <16 x double> undef, double %1071, i32 0
  %temp.vect2301.i = insertelement <16 x double> %temp.vect2300.i, double %1072, i32 1
  %temp.vect2302.i = insertelement <16 x double> %temp.vect2301.i, double %1073, i32 2
  %temp.vect2303.i = insertelement <16 x double> %temp.vect2302.i, double %1074, i32 3
  %temp.vect2304.i = insertelement <16 x double> %temp.vect2303.i, double %1075, i32 4
  %temp.vect2305.i = insertelement <16 x double> %temp.vect2304.i, double %1076, i32 5
  %temp.vect2306.i = insertelement <16 x double> %temp.vect2305.i, double %1077, i32 6
  %temp.vect2307.i = insertelement <16 x double> %temp.vect2306.i, double %1078, i32 7
  %temp.vect2308.i = insertelement <16 x double> %temp.vect2307.i, double %1079, i32 8
  %temp.vect2309.i = insertelement <16 x double> %temp.vect2308.i, double %1080, i32 9
  %temp.vect2310.i = insertelement <16 x double> %temp.vect2309.i, double %1081, i32 10
  %temp.vect2311.i = insertelement <16 x double> %temp.vect2310.i, double %1082, i32 11
  %temp.vect2312.i = insertelement <16 x double> %temp.vect2311.i, double %1083, i32 12
  %temp.vect2313.i = insertelement <16 x double> %temp.vect2312.i, double %1084, i32 13
  %temp.vect2314.i = insertelement <16 x double> %temp.vect2313.i, double %1085, i32 14
  %temp.vect2315.i = insertelement <16 x double> %temp.vect2314.i, double %1086, i32 15
  %1087 = fmul <16 x double> %temp.vect2315.i, %937
  %1088 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1089 = load i64* %1088, align 8
  %1090 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1091 = load i64* %1090, align 8
  %1092 = add i64 %1089, %1091
  %extract2318.i = add i64 %1092, 13824000
  %1093 = getelementptr inbounds double addrspace(1)* %7, i64 %extract2318.i
  %ptrTypeCast2334.i = bitcast double addrspace(1)* %1093 to <16 x double> addrspace(1)*
  %1094 = load <16 x double> addrspace(1)* %ptrTypeCast2334.i, align 8
  %1095 = fmul <16 x double> %1094, %1087
  %1096 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1097 = load i64* %1096, align 8
  %1098 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1099 = load i64* %1098, align 8
  %1100 = add i64 %1097, %1099
  %extract2337.i = add i64 %1100, 13824000
  %1101 = getelementptr inbounds double addrspace(1)* %7, i64 %extract2337.i
  %ptrTypeCast2353.i = bitcast double addrspace(1)* %1101 to <16 x double> addrspace(1)*
  store <16 x double> %1095, <16 x double> addrspace(1)* %ptrTypeCast2353.i, align 8
  %1102 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1103 = load i64* %1102, align 8
  %1104 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1105 = load i64* %1104, align 8
  %1106 = add i64 %1103, %1105
  %extract2356.i = add i64 %1106, 13824000
  %1107 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2356.i
  %ptrTypeCast2372.i = bitcast double addrspace(1)* %1107 to <16 x double> addrspace(1)*
  %1108 = load <16 x double> addrspace(1)* %ptrTypeCast2372.i, align 8
  %1109 = fmul <16 x double> %1108, %1087
  %1110 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1111 = load i64* %1110, align 8
  %1112 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1113 = load i64* %1112, align 8
  %1114 = add i64 %1111, %1113
  %extract2375.i = add i64 %1114, 13824000
  %1115 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2375.i
  %ptrTypeCast2391.i = bitcast double addrspace(1)* %1115 to <16 x double> addrspace(1)*
  store <16 x double> %1109, <16 x double> addrspace(1)* %ptrTypeCast2391.i, align 8
  %1116 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1117 = load i64* %1116, align 8
  %1118 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1119 = load i64* %1118, align 8
  %1120 = add i64 %1117, %1119
  %extract2394.i = add i64 %1120, 1437696
  %1121 = getelementptr inbounds double addrspace(1)* %13, i64 %extract2394.i
  %ptrTypeCast2410.i = bitcast double addrspace(1)* %1121 to <16 x double> addrspace(1)*
  %1122 = load <16 x double> addrspace(1)* %ptrTypeCast2410.i, align 8
  %1123 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1124 = load i64* %1123, align 8
  %1125 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1126 = load i64* %1125, align 8
  %1127 = add i64 %1124, %1126
  %extract2413.i = add i64 %1127, 14487552
  %1128 = getelementptr inbounds double addrspace(1)* %7, i64 %extract2413.i
  %ptrTypeCast2429.i = bitcast double addrspace(1)* %1128 to <16 x double> addrspace(1)*
  %1129 = load <16 x double> addrspace(1)* %ptrTypeCast2429.i, align 8
  %1130 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1129
  %1131 = fmul <16 x double> %239, %1130
  %1132 = fmul <16 x double> %1122, %1131
  %extract2430.i = extractelement <16 x double> %1132, i32 0
  %extract2431.i = extractelement <16 x double> %1132, i32 1
  %extract2432.i = extractelement <16 x double> %1132, i32 2
  %extract2433.i = extractelement <16 x double> %1132, i32 3
  %extract2434.i = extractelement <16 x double> %1132, i32 4
  %extract2435.i = extractelement <16 x double> %1132, i32 5
  %extract2436.i = extractelement <16 x double> %1132, i32 6
  %extract2437.i = extractelement <16 x double> %1132, i32 7
  %extract2438.i = extractelement <16 x double> %1132, i32 8
  %extract2439.i = extractelement <16 x double> %1132, i32 9
  %extract2440.i = extractelement <16 x double> %1132, i32 10
  %extract2441.i = extractelement <16 x double> %1132, i32 11
  %extract2442.i = extractelement <16 x double> %1132, i32 12
  %extract2443.i = extractelement <16 x double> %1132, i32 13
  %extract2444.i = extractelement <16 x double> %1132, i32 14
  %extract2445.i = extractelement <16 x double> %1132, i32 15
  %1133 = fadd <16 x double> %1132, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %1134 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1133
  %1135 = fmul <16 x double> %1132, %1134
  %1136 = call double @_Z4fmaxdd(double %extract2430.i, double 1.000000e-200) nounwind
  %1137 = call double @_Z4fmaxdd(double %extract2431.i, double 1.000000e-200) nounwind
  %1138 = call double @_Z4fmaxdd(double %extract2432.i, double 1.000000e-200) nounwind
  %1139 = call double @_Z4fmaxdd(double %extract2433.i, double 1.000000e-200) nounwind
  %1140 = call double @_Z4fmaxdd(double %extract2434.i, double 1.000000e-200) nounwind
  %1141 = call double @_Z4fmaxdd(double %extract2435.i, double 1.000000e-200) nounwind
  %1142 = call double @_Z4fmaxdd(double %extract2436.i, double 1.000000e-200) nounwind
  %1143 = call double @_Z4fmaxdd(double %extract2437.i, double 1.000000e-200) nounwind
  %1144 = call double @_Z4fmaxdd(double %extract2438.i, double 1.000000e-200) nounwind
  %1145 = call double @_Z4fmaxdd(double %extract2439.i, double 1.000000e-200) nounwind
  %1146 = call double @_Z4fmaxdd(double %extract2440.i, double 1.000000e-200) nounwind
  %1147 = call double @_Z4fmaxdd(double %extract2441.i, double 1.000000e-200) nounwind
  %1148 = call double @_Z4fmaxdd(double %extract2442.i, double 1.000000e-200) nounwind
  %1149 = call double @_Z4fmaxdd(double %extract2443.i, double 1.000000e-200) nounwind
  %1150 = call double @_Z4fmaxdd(double %extract2444.i, double 1.000000e-200) nounwind
  %1151 = call double @_Z4fmaxdd(double %extract2445.i, double 1.000000e-200) nounwind
  %1152 = call double @_Z5log10d(double %1136) nounwind
  %1153 = call double @_Z5log10d(double %1137) nounwind
  %1154 = call double @_Z5log10d(double %1138) nounwind
  %1155 = call double @_Z5log10d(double %1139) nounwind
  %1156 = call double @_Z5log10d(double %1140) nounwind
  %1157 = call double @_Z5log10d(double %1141) nounwind
  %1158 = call double @_Z5log10d(double %1142) nounwind
  %1159 = call double @_Z5log10d(double %1143) nounwind
  %1160 = call double @_Z5log10d(double %1144) nounwind
  %1161 = call double @_Z5log10d(double %1145) nounwind
  %1162 = call double @_Z5log10d(double %1146) nounwind
  %1163 = call double @_Z5log10d(double %1147) nounwind
  %1164 = call double @_Z5log10d(double %1148) nounwind
  %1165 = call double @_Z5log10d(double %1149) nounwind
  %1166 = call double @_Z5log10d(double %1150) nounwind
  %1167 = call double @_Z5log10d(double %1151) nounwind
  %temp.vect2574.i = insertelement <16 x double> undef, double %1152, i32 0
  %temp.vect2575.i = insertelement <16 x double> %temp.vect2574.i, double %1153, i32 1
  %temp.vect2576.i = insertelement <16 x double> %temp.vect2575.i, double %1154, i32 2
  %temp.vect2577.i = insertelement <16 x double> %temp.vect2576.i, double %1155, i32 3
  %temp.vect2578.i = insertelement <16 x double> %temp.vect2577.i, double %1156, i32 4
  %temp.vect2579.i = insertelement <16 x double> %temp.vect2578.i, double %1157, i32 5
  %temp.vect2580.i = insertelement <16 x double> %temp.vect2579.i, double %1158, i32 6
  %temp.vect2581.i = insertelement <16 x double> %temp.vect2580.i, double %1159, i32 7
  %temp.vect2582.i = insertelement <16 x double> %temp.vect2581.i, double %1160, i32 8
  %temp.vect2583.i = insertelement <16 x double> %temp.vect2582.i, double %1161, i32 9
  %temp.vect2584.i = insertelement <16 x double> %temp.vect2583.i, double %1162, i32 10
  %temp.vect2585.i = insertelement <16 x double> %temp.vect2584.i, double %1163, i32 11
  %temp.vect2586.i = insertelement <16 x double> %temp.vect2585.i, double %1164, i32 12
  %temp.vect2587.i = insertelement <16 x double> %temp.vect2586.i, double %1165, i32 13
  %temp.vect2588.i = insertelement <16 x double> %temp.vect2587.i, double %1166, i32 14
  %temp.vect2589.i = insertelement <16 x double> %temp.vect2588.i, double %1167, i32 15
  %1168 = fmul <16 x double> %33, <double 0xBF73BD60D9232955, double 0xBF73BD60D9232955, double 0xBF73BD60D9232955, double 0xBF73BD60D9232955, double 0xBF73BD60D9232955, double 0xBF73BD60D9232955, double 0xBF73BD60D9232955, double 0xBF73BD60D9232955, double 0xBF73BD60D9232955, double 0xBF73BD60D9232955, double 0xBF73BD60D9232955, double 0xBF73BD60D9232955, double 0xBF73BD60D9232955, double 0xBF73BD60D9232955, double 0xBF73BD60D9232955, double 0xBF73BD60D9232955>
  %extract2446.i = extractelement <16 x double> %1168, i32 0
  %extract2447.i = extractelement <16 x double> %1168, i32 1
  %extract2448.i = extractelement <16 x double> %1168, i32 2
  %extract2449.i = extractelement <16 x double> %1168, i32 3
  %extract2450.i = extractelement <16 x double> %1168, i32 4
  %extract2451.i = extractelement <16 x double> %1168, i32 5
  %extract2452.i = extractelement <16 x double> %1168, i32 6
  %extract2453.i = extractelement <16 x double> %1168, i32 7
  %extract2454.i = extractelement <16 x double> %1168, i32 8
  %extract2455.i = extractelement <16 x double> %1168, i32 9
  %extract2456.i = extractelement <16 x double> %1168, i32 10
  %extract2457.i = extractelement <16 x double> %1168, i32 11
  %extract2458.i = extractelement <16 x double> %1168, i32 12
  %extract2459.i = extractelement <16 x double> %1168, i32 13
  %extract2460.i = extractelement <16 x double> %1168, i32 14
  %extract2461.i = extractelement <16 x double> %1168, i32 15
  %1169 = call double @_Z3expd(double %extract2446.i) nounwind
  %1170 = call double @_Z3expd(double %extract2447.i) nounwind
  %1171 = call double @_Z3expd(double %extract2448.i) nounwind
  %1172 = call double @_Z3expd(double %extract2449.i) nounwind
  %1173 = call double @_Z3expd(double %extract2450.i) nounwind
  %1174 = call double @_Z3expd(double %extract2451.i) nounwind
  %1175 = call double @_Z3expd(double %extract2452.i) nounwind
  %1176 = call double @_Z3expd(double %extract2453.i) nounwind
  %1177 = call double @_Z3expd(double %extract2454.i) nounwind
  %1178 = call double @_Z3expd(double %extract2455.i) nounwind
  %1179 = call double @_Z3expd(double %extract2456.i) nounwind
  %1180 = call double @_Z3expd(double %extract2457.i) nounwind
  %1181 = call double @_Z3expd(double %extract2458.i) nounwind
  %1182 = call double @_Z3expd(double %extract2459.i) nounwind
  %1183 = call double @_Z3expd(double %extract2460.i) nounwind
  %1184 = call double @_Z3expd(double %extract2461.i) nounwind
  %temp.vect2462.i = insertelement <16 x double> undef, double %1169, i32 0
  %temp.vect2463.i = insertelement <16 x double> %temp.vect2462.i, double %1170, i32 1
  %temp.vect2464.i = insertelement <16 x double> %temp.vect2463.i, double %1171, i32 2
  %temp.vect2465.i = insertelement <16 x double> %temp.vect2464.i, double %1172, i32 3
  %temp.vect2466.i = insertelement <16 x double> %temp.vect2465.i, double %1173, i32 4
  %temp.vect2467.i = insertelement <16 x double> %temp.vect2466.i, double %1174, i32 5
  %temp.vect2468.i = insertelement <16 x double> %temp.vect2467.i, double %1175, i32 6
  %temp.vect2469.i = insertelement <16 x double> %temp.vect2468.i, double %1176, i32 7
  %temp.vect2470.i = insertelement <16 x double> %temp.vect2469.i, double %1177, i32 8
  %temp.vect2471.i = insertelement <16 x double> %temp.vect2470.i, double %1178, i32 9
  %temp.vect2472.i = insertelement <16 x double> %temp.vect2471.i, double %1179, i32 10
  %temp.vect2473.i = insertelement <16 x double> %temp.vect2472.i, double %1180, i32 11
  %temp.vect2474.i = insertelement <16 x double> %temp.vect2473.i, double %1181, i32 12
  %temp.vect2475.i = insertelement <16 x double> %temp.vect2474.i, double %1182, i32 13
  %temp.vect2476.i = insertelement <16 x double> %temp.vect2475.i, double %1183, i32 14
  %temp.vect2477.i = insertelement <16 x double> %temp.vect2476.i, double %1184, i32 15
  %1185 = fmul <16 x double> %temp.vect2477.i, <double 2.180000e-01, double 2.180000e-01, double 2.180000e-01, double 2.180000e-01, double 2.180000e-01, double 2.180000e-01, double 2.180000e-01, double 2.180000e-01, double 2.180000e-01, double 2.180000e-01, double 2.180000e-01, double 2.180000e-01, double 2.180000e-01, double 2.180000e-01, double 2.180000e-01, double 2.180000e-01>
  %1186 = fmul <16 x double> %33, <double 0xBF389C1E60B57F60, double 0xBF389C1E60B57F60, double 0xBF389C1E60B57F60, double 0xBF389C1E60B57F60, double 0xBF389C1E60B57F60, double 0xBF389C1E60B57F60, double 0xBF389C1E60B57F60, double 0xBF389C1E60B57F60, double 0xBF389C1E60B57F60, double 0xBF389C1E60B57F60, double 0xBF389C1E60B57F60, double 0xBF389C1E60B57F60, double 0xBF389C1E60B57F60, double 0xBF389C1E60B57F60, double 0xBF389C1E60B57F60, double 0xBF389C1E60B57F60>
  %extract2478.i = extractelement <16 x double> %1186, i32 0
  %extract2479.i = extractelement <16 x double> %1186, i32 1
  %extract2480.i = extractelement <16 x double> %1186, i32 2
  %extract2481.i = extractelement <16 x double> %1186, i32 3
  %extract2482.i = extractelement <16 x double> %1186, i32 4
  %extract2483.i = extractelement <16 x double> %1186, i32 5
  %extract2484.i = extractelement <16 x double> %1186, i32 6
  %extract2485.i = extractelement <16 x double> %1186, i32 7
  %extract2486.i = extractelement <16 x double> %1186, i32 8
  %extract2487.i = extractelement <16 x double> %1186, i32 9
  %extract2488.i = extractelement <16 x double> %1186, i32 10
  %extract2489.i = extractelement <16 x double> %1186, i32 11
  %extract2490.i = extractelement <16 x double> %1186, i32 12
  %extract2491.i = extractelement <16 x double> %1186, i32 13
  %extract2492.i = extractelement <16 x double> %1186, i32 14
  %extract2493.i = extractelement <16 x double> %1186, i32 15
  %1187 = call double @_Z3expd(double %extract2478.i) nounwind
  %1188 = call double @_Z3expd(double %extract2479.i) nounwind
  %1189 = call double @_Z3expd(double %extract2480.i) nounwind
  %1190 = call double @_Z3expd(double %extract2481.i) nounwind
  %1191 = call double @_Z3expd(double %extract2482.i) nounwind
  %1192 = call double @_Z3expd(double %extract2483.i) nounwind
  %1193 = call double @_Z3expd(double %extract2484.i) nounwind
  %1194 = call double @_Z3expd(double %extract2485.i) nounwind
  %1195 = call double @_Z3expd(double %extract2486.i) nounwind
  %1196 = call double @_Z3expd(double %extract2487.i) nounwind
  %1197 = call double @_Z3expd(double %extract2488.i) nounwind
  %1198 = call double @_Z3expd(double %extract2489.i) nounwind
  %1199 = call double @_Z3expd(double %extract2490.i) nounwind
  %1200 = call double @_Z3expd(double %extract2491.i) nounwind
  %1201 = call double @_Z3expd(double %extract2492.i) nounwind
  %1202 = call double @_Z3expd(double %extract2493.i) nounwind
  %temp.vect2494.i = insertelement <16 x double> undef, double %1187, i32 0
  %temp.vect2495.i = insertelement <16 x double> %temp.vect2494.i, double %1188, i32 1
  %temp.vect2496.i = insertelement <16 x double> %temp.vect2495.i, double %1189, i32 2
  %temp.vect2497.i = insertelement <16 x double> %temp.vect2496.i, double %1190, i32 3
  %temp.vect2498.i = insertelement <16 x double> %temp.vect2497.i, double %1191, i32 4
  %temp.vect2499.i = insertelement <16 x double> %temp.vect2498.i, double %1192, i32 5
  %temp.vect2500.i = insertelement <16 x double> %temp.vect2499.i, double %1193, i32 6
  %temp.vect2501.i = insertelement <16 x double> %temp.vect2500.i, double %1194, i32 7
  %temp.vect2502.i = insertelement <16 x double> %temp.vect2501.i, double %1195, i32 8
  %temp.vect2503.i = insertelement <16 x double> %temp.vect2502.i, double %1196, i32 9
  %temp.vect2504.i = insertelement <16 x double> %temp.vect2503.i, double %1197, i32 10
  %temp.vect2505.i = insertelement <16 x double> %temp.vect2504.i, double %1198, i32 11
  %temp.vect2506.i = insertelement <16 x double> %temp.vect2505.i, double %1199, i32 12
  %temp.vect2507.i = insertelement <16 x double> %temp.vect2506.i, double %1200, i32 13
  %temp.vect2508.i = insertelement <16 x double> %temp.vect2507.i, double %1201, i32 14
  %temp.vect2509.i = insertelement <16 x double> %temp.vect2508.i, double %1202, i32 15
  %1203 = fmul <16 x double> %temp.vect2509.i, <double 7.820000e-01, double 7.820000e-01, double 7.820000e-01, double 7.820000e-01, double 7.820000e-01, double 7.820000e-01, double 7.820000e-01, double 7.820000e-01, double 7.820000e-01, double 7.820000e-01, double 7.820000e-01, double 7.820000e-01, double 7.820000e-01, double 7.820000e-01, double 7.820000e-01, double 7.820000e-01>
  %1204 = fadd <16 x double> %1185, %1203
  %1205 = fmul <16 x double> %1007, <double -6.095000e+03, double -6.095000e+03, double -6.095000e+03, double -6.095000e+03, double -6.095000e+03, double -6.095000e+03, double -6.095000e+03, double -6.095000e+03, double -6.095000e+03, double -6.095000e+03, double -6.095000e+03, double -6.095000e+03, double -6.095000e+03, double -6.095000e+03, double -6.095000e+03, double -6.095000e+03>
  %extract2510.i = extractelement <16 x double> %1205, i32 0
  %extract2511.i = extractelement <16 x double> %1205, i32 1
  %extract2512.i = extractelement <16 x double> %1205, i32 2
  %extract2513.i = extractelement <16 x double> %1205, i32 3
  %extract2514.i = extractelement <16 x double> %1205, i32 4
  %extract2515.i = extractelement <16 x double> %1205, i32 5
  %extract2516.i = extractelement <16 x double> %1205, i32 6
  %extract2517.i = extractelement <16 x double> %1205, i32 7
  %extract2518.i = extractelement <16 x double> %1205, i32 8
  %extract2519.i = extractelement <16 x double> %1205, i32 9
  %extract2520.i = extractelement <16 x double> %1205, i32 10
  %extract2521.i = extractelement <16 x double> %1205, i32 11
  %extract2522.i = extractelement <16 x double> %1205, i32 12
  %extract2523.i = extractelement <16 x double> %1205, i32 13
  %extract2524.i = extractelement <16 x double> %1205, i32 14
  %extract2525.i = extractelement <16 x double> %1205, i32 15
  %1206 = call double @_Z3expd(double %extract2510.i) nounwind
  %1207 = call double @_Z3expd(double %extract2511.i) nounwind
  %1208 = call double @_Z3expd(double %extract2512.i) nounwind
  %1209 = call double @_Z3expd(double %extract2513.i) nounwind
  %1210 = call double @_Z3expd(double %extract2514.i) nounwind
  %1211 = call double @_Z3expd(double %extract2515.i) nounwind
  %1212 = call double @_Z3expd(double %extract2516.i) nounwind
  %1213 = call double @_Z3expd(double %extract2517.i) nounwind
  %1214 = call double @_Z3expd(double %extract2518.i) nounwind
  %1215 = call double @_Z3expd(double %extract2519.i) nounwind
  %1216 = call double @_Z3expd(double %extract2520.i) nounwind
  %1217 = call double @_Z3expd(double %extract2521.i) nounwind
  %1218 = call double @_Z3expd(double %extract2522.i) nounwind
  %1219 = call double @_Z3expd(double %extract2523.i) nounwind
  %1220 = call double @_Z3expd(double %extract2524.i) nounwind
  %1221 = call double @_Z3expd(double %extract2525.i) nounwind
  %temp.vect2526.i = insertelement <16 x double> undef, double %1206, i32 0
  %temp.vect2527.i = insertelement <16 x double> %temp.vect2526.i, double %1207, i32 1
  %temp.vect2528.i = insertelement <16 x double> %temp.vect2527.i, double %1208, i32 2
  %temp.vect2529.i = insertelement <16 x double> %temp.vect2528.i, double %1209, i32 3
  %temp.vect2530.i = insertelement <16 x double> %temp.vect2529.i, double %1210, i32 4
  %temp.vect2531.i = insertelement <16 x double> %temp.vect2530.i, double %1211, i32 5
  %temp.vect2532.i = insertelement <16 x double> %temp.vect2531.i, double %1212, i32 6
  %temp.vect2533.i = insertelement <16 x double> %temp.vect2532.i, double %1213, i32 7
  %temp.vect2534.i = insertelement <16 x double> %temp.vect2533.i, double %1214, i32 8
  %temp.vect2535.i = insertelement <16 x double> %temp.vect2534.i, double %1215, i32 9
  %temp.vect2536.i = insertelement <16 x double> %temp.vect2535.i, double %1216, i32 10
  %temp.vect2537.i = insertelement <16 x double> %temp.vect2536.i, double %1217, i32 11
  %temp.vect2538.i = insertelement <16 x double> %temp.vect2537.i, double %1218, i32 12
  %temp.vect2539.i = insertelement <16 x double> %temp.vect2538.i, double %1219, i32 13
  %temp.vect2540.i = insertelement <16 x double> %temp.vect2539.i, double %1220, i32 14
  %temp.vect2541.i = insertelement <16 x double> %temp.vect2540.i, double %1221, i32 15
  %1222 = fadd <16 x double> %1204, %temp.vect2541.i
  %extract2542.i = extractelement <16 x double> %1222, i32 0
  %extract2543.i = extractelement <16 x double> %1222, i32 1
  %extract2544.i = extractelement <16 x double> %1222, i32 2
  %extract2545.i = extractelement <16 x double> %1222, i32 3
  %extract2546.i = extractelement <16 x double> %1222, i32 4
  %extract2547.i = extractelement <16 x double> %1222, i32 5
  %extract2548.i = extractelement <16 x double> %1222, i32 6
  %extract2549.i = extractelement <16 x double> %1222, i32 7
  %extract2550.i = extractelement <16 x double> %1222, i32 8
  %extract2551.i = extractelement <16 x double> %1222, i32 9
  %extract2552.i = extractelement <16 x double> %1222, i32 10
  %extract2553.i = extractelement <16 x double> %1222, i32 11
  %extract2554.i = extractelement <16 x double> %1222, i32 12
  %extract2555.i = extractelement <16 x double> %1222, i32 13
  %extract2556.i = extractelement <16 x double> %1222, i32 14
  %extract2557.i = extractelement <16 x double> %1222, i32 15
  %1223 = call double @_Z4fmaxdd(double %extract2542.i, double 1.000000e-200) nounwind
  %1224 = call double @_Z4fmaxdd(double %extract2543.i, double 1.000000e-200) nounwind
  %1225 = call double @_Z4fmaxdd(double %extract2544.i, double 1.000000e-200) nounwind
  %1226 = call double @_Z4fmaxdd(double %extract2545.i, double 1.000000e-200) nounwind
  %1227 = call double @_Z4fmaxdd(double %extract2546.i, double 1.000000e-200) nounwind
  %1228 = call double @_Z4fmaxdd(double %extract2547.i, double 1.000000e-200) nounwind
  %1229 = call double @_Z4fmaxdd(double %extract2548.i, double 1.000000e-200) nounwind
  %1230 = call double @_Z4fmaxdd(double %extract2549.i, double 1.000000e-200) nounwind
  %1231 = call double @_Z4fmaxdd(double %extract2550.i, double 1.000000e-200) nounwind
  %1232 = call double @_Z4fmaxdd(double %extract2551.i, double 1.000000e-200) nounwind
  %1233 = call double @_Z4fmaxdd(double %extract2552.i, double 1.000000e-200) nounwind
  %1234 = call double @_Z4fmaxdd(double %extract2553.i, double 1.000000e-200) nounwind
  %1235 = call double @_Z4fmaxdd(double %extract2554.i, double 1.000000e-200) nounwind
  %1236 = call double @_Z4fmaxdd(double %extract2555.i, double 1.000000e-200) nounwind
  %1237 = call double @_Z4fmaxdd(double %extract2556.i, double 1.000000e-200) nounwind
  %1238 = call double @_Z4fmaxdd(double %extract2557.i, double 1.000000e-200) nounwind
  %1239 = call double @_Z5log10d(double %1223) nounwind
  %1240 = call double @_Z5log10d(double %1224) nounwind
  %1241 = call double @_Z5log10d(double %1225) nounwind
  %1242 = call double @_Z5log10d(double %1226) nounwind
  %1243 = call double @_Z5log10d(double %1227) nounwind
  %1244 = call double @_Z5log10d(double %1228) nounwind
  %1245 = call double @_Z5log10d(double %1229) nounwind
  %1246 = call double @_Z5log10d(double %1230) nounwind
  %1247 = call double @_Z5log10d(double %1231) nounwind
  %1248 = call double @_Z5log10d(double %1232) nounwind
  %1249 = call double @_Z5log10d(double %1233) nounwind
  %1250 = call double @_Z5log10d(double %1234) nounwind
  %1251 = call double @_Z5log10d(double %1235) nounwind
  %1252 = call double @_Z5log10d(double %1236) nounwind
  %1253 = call double @_Z5log10d(double %1237) nounwind
  %1254 = call double @_Z5log10d(double %1238) nounwind
  %temp.vect2558.i = insertelement <16 x double> undef, double %1239, i32 0
  %temp.vect2559.i = insertelement <16 x double> %temp.vect2558.i, double %1240, i32 1
  %temp.vect2560.i = insertelement <16 x double> %temp.vect2559.i, double %1241, i32 2
  %temp.vect2561.i = insertelement <16 x double> %temp.vect2560.i, double %1242, i32 3
  %temp.vect2562.i = insertelement <16 x double> %temp.vect2561.i, double %1243, i32 4
  %temp.vect2563.i = insertelement <16 x double> %temp.vect2562.i, double %1244, i32 5
  %temp.vect2564.i = insertelement <16 x double> %temp.vect2563.i, double %1245, i32 6
  %temp.vect2565.i = insertelement <16 x double> %temp.vect2564.i, double %1246, i32 7
  %temp.vect2566.i = insertelement <16 x double> %temp.vect2565.i, double %1247, i32 8
  %temp.vect2567.i = insertelement <16 x double> %temp.vect2566.i, double %1248, i32 9
  %temp.vect2568.i = insertelement <16 x double> %temp.vect2567.i, double %1249, i32 10
  %temp.vect2569.i = insertelement <16 x double> %temp.vect2568.i, double %1250, i32 11
  %temp.vect2570.i = insertelement <16 x double> %temp.vect2569.i, double %1251, i32 12
  %temp.vect2571.i = insertelement <16 x double> %temp.vect2570.i, double %1252, i32 13
  %temp.vect2572.i = insertelement <16 x double> %temp.vect2571.i, double %1253, i32 14
  %temp.vect2573.i = insertelement <16 x double> %temp.vect2572.i, double %1254, i32 15
  %1255 = fmul <16 x double> %temp.vect2573.i, <double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00>
  %1256 = fsub <16 x double> <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>, %1255
  %1257 = fmul <16 x double> %temp.vect2573.i, <double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01>
  %1258 = fadd <16 x double> %1257, <double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01>
  %1259 = fsub <16 x double> %temp.vect2589.i, %1258
  %1260 = fmul <16 x double> %1259, <double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01>
  %1261 = fsub <16 x double> %1256, %1260
  %1262 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1261
  %1263 = fmul <16 x double> %1259, %1262
  %1264 = fmul <16 x double> %1263, %1263
  %1265 = fadd <16 x double> %1264, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %1266 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1265
  %1267 = fmul <16 x double> %temp.vect2573.i, %1266
  %extract2590.i = extractelement <16 x double> %1267, i32 0
  %extract2591.i = extractelement <16 x double> %1267, i32 1
  %extract2592.i = extractelement <16 x double> %1267, i32 2
  %extract2593.i = extractelement <16 x double> %1267, i32 3
  %extract2594.i = extractelement <16 x double> %1267, i32 4
  %extract2595.i = extractelement <16 x double> %1267, i32 5
  %extract2596.i = extractelement <16 x double> %1267, i32 6
  %extract2597.i = extractelement <16 x double> %1267, i32 7
  %extract2598.i = extractelement <16 x double> %1267, i32 8
  %extract2599.i = extractelement <16 x double> %1267, i32 9
  %extract2600.i = extractelement <16 x double> %1267, i32 10
  %extract2601.i = extractelement <16 x double> %1267, i32 11
  %extract2602.i = extractelement <16 x double> %1267, i32 12
  %extract2603.i = extractelement <16 x double> %1267, i32 13
  %extract2604.i = extractelement <16 x double> %1267, i32 14
  %extract2605.i = extractelement <16 x double> %1267, i32 15
  %1268 = call double @_Z5exp10d(double %extract2590.i) nounwind
  %1269 = call double @_Z5exp10d(double %extract2591.i) nounwind
  %1270 = call double @_Z5exp10d(double %extract2592.i) nounwind
  %1271 = call double @_Z5exp10d(double %extract2593.i) nounwind
  %1272 = call double @_Z5exp10d(double %extract2594.i) nounwind
  %1273 = call double @_Z5exp10d(double %extract2595.i) nounwind
  %1274 = call double @_Z5exp10d(double %extract2596.i) nounwind
  %1275 = call double @_Z5exp10d(double %extract2597.i) nounwind
  %1276 = call double @_Z5exp10d(double %extract2598.i) nounwind
  %1277 = call double @_Z5exp10d(double %extract2599.i) nounwind
  %1278 = call double @_Z5exp10d(double %extract2600.i) nounwind
  %1279 = call double @_Z5exp10d(double %extract2601.i) nounwind
  %1280 = call double @_Z5exp10d(double %extract2602.i) nounwind
  %1281 = call double @_Z5exp10d(double %extract2603.i) nounwind
  %1282 = call double @_Z5exp10d(double %extract2604.i) nounwind
  %1283 = call double @_Z5exp10d(double %extract2605.i) nounwind
  %temp.vect2606.i = insertelement <16 x double> undef, double %1268, i32 0
  %temp.vect2607.i = insertelement <16 x double> %temp.vect2606.i, double %1269, i32 1
  %temp.vect2608.i = insertelement <16 x double> %temp.vect2607.i, double %1270, i32 2
  %temp.vect2609.i = insertelement <16 x double> %temp.vect2608.i, double %1271, i32 3
  %temp.vect2610.i = insertelement <16 x double> %temp.vect2609.i, double %1272, i32 4
  %temp.vect2611.i = insertelement <16 x double> %temp.vect2610.i, double %1273, i32 5
  %temp.vect2612.i = insertelement <16 x double> %temp.vect2611.i, double %1274, i32 6
  %temp.vect2613.i = insertelement <16 x double> %temp.vect2612.i, double %1275, i32 7
  %temp.vect2614.i = insertelement <16 x double> %temp.vect2613.i, double %1276, i32 8
  %temp.vect2615.i = insertelement <16 x double> %temp.vect2614.i, double %1277, i32 9
  %temp.vect2616.i = insertelement <16 x double> %temp.vect2615.i, double %1278, i32 10
  %temp.vect2617.i = insertelement <16 x double> %temp.vect2616.i, double %1279, i32 11
  %temp.vect2618.i = insertelement <16 x double> %temp.vect2617.i, double %1280, i32 12
  %temp.vect2619.i = insertelement <16 x double> %temp.vect2618.i, double %1281, i32 13
  %temp.vect2620.i = insertelement <16 x double> %temp.vect2619.i, double %1282, i32 14
  %temp.vect2621.i = insertelement <16 x double> %temp.vect2620.i, double %1283, i32 15
  %1284 = fmul <16 x double> %temp.vect2621.i, %1135
  %1285 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1286 = load i64* %1285, align 8
  %1287 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1288 = load i64* %1287, align 8
  %1289 = add i64 %1286, %1288
  %extract2624.i = add i64 %1289, 14487552
  %1290 = getelementptr inbounds double addrspace(1)* %7, i64 %extract2624.i
  %ptrTypeCast2640.i = bitcast double addrspace(1)* %1290 to <16 x double> addrspace(1)*
  %1291 = load <16 x double> addrspace(1)* %ptrTypeCast2640.i, align 8
  %1292 = fmul <16 x double> %1291, %1284
  %1293 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1294 = load i64* %1293, align 8
  %1295 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1296 = load i64* %1295, align 8
  %1297 = add i64 %1294, %1296
  %extract2643.i = add i64 %1297, 14487552
  %1298 = getelementptr inbounds double addrspace(1)* %7, i64 %extract2643.i
  %ptrTypeCast2659.i = bitcast double addrspace(1)* %1298 to <16 x double> addrspace(1)*
  store <16 x double> %1292, <16 x double> addrspace(1)* %ptrTypeCast2659.i, align 8
  %1299 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1300 = load i64* %1299, align 8
  %1301 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1302 = load i64* %1301, align 8
  %1303 = add i64 %1300, %1302
  %extract2662.i = add i64 %1303, 14487552
  %1304 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2662.i
  %ptrTypeCast2678.i = bitcast double addrspace(1)* %1304 to <16 x double> addrspace(1)*
  %1305 = load <16 x double> addrspace(1)* %ptrTypeCast2678.i, align 8
  %1306 = fmul <16 x double> %1305, %1284
  %1307 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1308 = load i64* %1307, align 8
  %1309 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1310 = load i64* %1309, align 8
  %1311 = add i64 %1308, %1310
  %extract2681.i = add i64 %1311, 14487552
  %1312 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2681.i
  %ptrTypeCast2697.i = bitcast double addrspace(1)* %1312 to <16 x double> addrspace(1)*
  store <16 x double> %1306, <16 x double> addrspace(1)* %ptrTypeCast2697.i, align 8
  %1313 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1314 = load i64* %1313, align 8
  %1315 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1316 = load i64* %1315, align 8
  %1317 = add i64 %1314, %1316
  %extract2700.i = add i64 %1317, 1548288
  %1318 = getelementptr inbounds double addrspace(1)* %13, i64 %extract2700.i
  %ptrTypeCast2716.i = bitcast double addrspace(1)* %1318 to <16 x double> addrspace(1)*
  %1319 = load <16 x double> addrspace(1)* %ptrTypeCast2716.i, align 8
  %1320 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1321 = load i64* %1320, align 8
  %1322 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1323 = load i64* %1322, align 8
  %1324 = add i64 %1321, %1323
  %extract2719.i = add i64 %1324, 15925248
  %1325 = getelementptr inbounds double addrspace(1)* %7, i64 %extract2719.i
  %ptrTypeCast2735.i = bitcast double addrspace(1)* %1325 to <16 x double> addrspace(1)*
  %1326 = load <16 x double> addrspace(1)* %ptrTypeCast2735.i, align 8
  %1327 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1326
  %1328 = fmul <16 x double> %239, %1327
  %1329 = fmul <16 x double> %1319, %1328
  %extract2736.i = extractelement <16 x double> %1329, i32 0
  %extract2737.i = extractelement <16 x double> %1329, i32 1
  %extract2738.i = extractelement <16 x double> %1329, i32 2
  %extract2739.i = extractelement <16 x double> %1329, i32 3
  %extract2740.i = extractelement <16 x double> %1329, i32 4
  %extract2741.i = extractelement <16 x double> %1329, i32 5
  %extract2742.i = extractelement <16 x double> %1329, i32 6
  %extract2743.i = extractelement <16 x double> %1329, i32 7
  %extract2744.i = extractelement <16 x double> %1329, i32 8
  %extract2745.i = extractelement <16 x double> %1329, i32 9
  %extract2746.i = extractelement <16 x double> %1329, i32 10
  %extract2747.i = extractelement <16 x double> %1329, i32 11
  %extract2748.i = extractelement <16 x double> %1329, i32 12
  %extract2749.i = extractelement <16 x double> %1329, i32 13
  %extract2750.i = extractelement <16 x double> %1329, i32 14
  %extract2751.i = extractelement <16 x double> %1329, i32 15
  %1330 = fadd <16 x double> %1329, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %1331 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1330
  %1332 = fmul <16 x double> %1329, %1331
  %1333 = call double @_Z4fmaxdd(double %extract2736.i, double 1.000000e-200) nounwind
  %1334 = call double @_Z4fmaxdd(double %extract2737.i, double 1.000000e-200) nounwind
  %1335 = call double @_Z4fmaxdd(double %extract2738.i, double 1.000000e-200) nounwind
  %1336 = call double @_Z4fmaxdd(double %extract2739.i, double 1.000000e-200) nounwind
  %1337 = call double @_Z4fmaxdd(double %extract2740.i, double 1.000000e-200) nounwind
  %1338 = call double @_Z4fmaxdd(double %extract2741.i, double 1.000000e-200) nounwind
  %1339 = call double @_Z4fmaxdd(double %extract2742.i, double 1.000000e-200) nounwind
  %1340 = call double @_Z4fmaxdd(double %extract2743.i, double 1.000000e-200) nounwind
  %1341 = call double @_Z4fmaxdd(double %extract2744.i, double 1.000000e-200) nounwind
  %1342 = call double @_Z4fmaxdd(double %extract2745.i, double 1.000000e-200) nounwind
  %1343 = call double @_Z4fmaxdd(double %extract2746.i, double 1.000000e-200) nounwind
  %1344 = call double @_Z4fmaxdd(double %extract2747.i, double 1.000000e-200) nounwind
  %1345 = call double @_Z4fmaxdd(double %extract2748.i, double 1.000000e-200) nounwind
  %1346 = call double @_Z4fmaxdd(double %extract2749.i, double 1.000000e-200) nounwind
  %1347 = call double @_Z4fmaxdd(double %extract2750.i, double 1.000000e-200) nounwind
  %1348 = call double @_Z4fmaxdd(double %extract2751.i, double 1.000000e-200) nounwind
  %1349 = call double @_Z5log10d(double %1333) nounwind
  %1350 = call double @_Z5log10d(double %1334) nounwind
  %1351 = call double @_Z5log10d(double %1335) nounwind
  %1352 = call double @_Z5log10d(double %1336) nounwind
  %1353 = call double @_Z5log10d(double %1337) nounwind
  %1354 = call double @_Z5log10d(double %1338) nounwind
  %1355 = call double @_Z5log10d(double %1339) nounwind
  %1356 = call double @_Z5log10d(double %1340) nounwind
  %1357 = call double @_Z5log10d(double %1341) nounwind
  %1358 = call double @_Z5log10d(double %1342) nounwind
  %1359 = call double @_Z5log10d(double %1343) nounwind
  %1360 = call double @_Z5log10d(double %1344) nounwind
  %1361 = call double @_Z5log10d(double %1345) nounwind
  %1362 = call double @_Z5log10d(double %1346) nounwind
  %1363 = call double @_Z5log10d(double %1347) nounwind
  %1364 = call double @_Z5log10d(double %1348) nounwind
  %temp.vect2880.i = insertelement <16 x double> undef, double %1349, i32 0
  %temp.vect2881.i = insertelement <16 x double> %temp.vect2880.i, double %1350, i32 1
  %temp.vect2882.i = insertelement <16 x double> %temp.vect2881.i, double %1351, i32 2
  %temp.vect2883.i = insertelement <16 x double> %temp.vect2882.i, double %1352, i32 3
  %temp.vect2884.i = insertelement <16 x double> %temp.vect2883.i, double %1353, i32 4
  %temp.vect2885.i = insertelement <16 x double> %temp.vect2884.i, double %1354, i32 5
  %temp.vect2886.i = insertelement <16 x double> %temp.vect2885.i, double %1355, i32 6
  %temp.vect2887.i = insertelement <16 x double> %temp.vect2886.i, double %1356, i32 7
  %temp.vect2888.i = insertelement <16 x double> %temp.vect2887.i, double %1357, i32 8
  %temp.vect2889.i = insertelement <16 x double> %temp.vect2888.i, double %1358, i32 9
  %temp.vect2890.i = insertelement <16 x double> %temp.vect2889.i, double %1359, i32 10
  %temp.vect2891.i = insertelement <16 x double> %temp.vect2890.i, double %1360, i32 11
  %temp.vect2892.i = insertelement <16 x double> %temp.vect2891.i, double %1361, i32 12
  %temp.vect2893.i = insertelement <16 x double> %temp.vect2892.i, double %1362, i32 13
  %temp.vect2894.i = insertelement <16 x double> %temp.vect2893.i, double %1363, i32 14
  %temp.vect2895.i = insertelement <16 x double> %temp.vect2894.i, double %1364, i32 15
  %1365 = fmul <16 x double> %33, <double 0xBF48715A79FC1ABC, double 0xBF48715A79FC1ABC, double 0xBF48715A79FC1ABC, double 0xBF48715A79FC1ABC, double 0xBF48715A79FC1ABC, double 0xBF48715A79FC1ABC, double 0xBF48715A79FC1ABC, double 0xBF48715A79FC1ABC, double 0xBF48715A79FC1ABC, double 0xBF48715A79FC1ABC, double 0xBF48715A79FC1ABC, double 0xBF48715A79FC1ABC, double 0xBF48715A79FC1ABC, double 0xBF48715A79FC1ABC, double 0xBF48715A79FC1ABC, double 0xBF48715A79FC1ABC>
  %extract2752.i = extractelement <16 x double> %1365, i32 0
  %extract2753.i = extractelement <16 x double> %1365, i32 1
  %extract2754.i = extractelement <16 x double> %1365, i32 2
  %extract2755.i = extractelement <16 x double> %1365, i32 3
  %extract2756.i = extractelement <16 x double> %1365, i32 4
  %extract2757.i = extractelement <16 x double> %1365, i32 5
  %extract2758.i = extractelement <16 x double> %1365, i32 6
  %extract2759.i = extractelement <16 x double> %1365, i32 7
  %extract2760.i = extractelement <16 x double> %1365, i32 8
  %extract2761.i = extractelement <16 x double> %1365, i32 9
  %extract2762.i = extractelement <16 x double> %1365, i32 10
  %extract2763.i = extractelement <16 x double> %1365, i32 11
  %extract2764.i = extractelement <16 x double> %1365, i32 12
  %extract2765.i = extractelement <16 x double> %1365, i32 13
  %extract2766.i = extractelement <16 x double> %1365, i32 14
  %extract2767.i = extractelement <16 x double> %1365, i32 15
  %1366 = call double @_Z3expd(double %extract2752.i) nounwind
  %1367 = call double @_Z3expd(double %extract2753.i) nounwind
  %1368 = call double @_Z3expd(double %extract2754.i) nounwind
  %1369 = call double @_Z3expd(double %extract2755.i) nounwind
  %1370 = call double @_Z3expd(double %extract2756.i) nounwind
  %1371 = call double @_Z3expd(double %extract2757.i) nounwind
  %1372 = call double @_Z3expd(double %extract2758.i) nounwind
  %1373 = call double @_Z3expd(double %extract2759.i) nounwind
  %1374 = call double @_Z3expd(double %extract2760.i) nounwind
  %1375 = call double @_Z3expd(double %extract2761.i) nounwind
  %1376 = call double @_Z3expd(double %extract2762.i) nounwind
  %1377 = call double @_Z3expd(double %extract2763.i) nounwind
  %1378 = call double @_Z3expd(double %extract2764.i) nounwind
  %1379 = call double @_Z3expd(double %extract2765.i) nounwind
  %1380 = call double @_Z3expd(double %extract2766.i) nounwind
  %1381 = call double @_Z3expd(double %extract2767.i) nounwind
  %temp.vect2768.i = insertelement <16 x double> undef, double %1366, i32 0
  %temp.vect2769.i = insertelement <16 x double> %temp.vect2768.i, double %1367, i32 1
  %temp.vect2770.i = insertelement <16 x double> %temp.vect2769.i, double %1368, i32 2
  %temp.vect2771.i = insertelement <16 x double> %temp.vect2770.i, double %1369, i32 3
  %temp.vect2772.i = insertelement <16 x double> %temp.vect2771.i, double %1370, i32 4
  %temp.vect2773.i = insertelement <16 x double> %temp.vect2772.i, double %1371, i32 5
  %temp.vect2774.i = insertelement <16 x double> %temp.vect2773.i, double %1372, i32 6
  %temp.vect2775.i = insertelement <16 x double> %temp.vect2774.i, double %1373, i32 7
  %temp.vect2776.i = insertelement <16 x double> %temp.vect2775.i, double %1374, i32 8
  %temp.vect2777.i = insertelement <16 x double> %temp.vect2776.i, double %1375, i32 9
  %temp.vect2778.i = insertelement <16 x double> %temp.vect2777.i, double %1376, i32 10
  %temp.vect2779.i = insertelement <16 x double> %temp.vect2778.i, double %1377, i32 11
  %temp.vect2780.i = insertelement <16 x double> %temp.vect2779.i, double %1378, i32 12
  %temp.vect2781.i = insertelement <16 x double> %temp.vect2780.i, double %1379, i32 13
  %temp.vect2782.i = insertelement <16 x double> %temp.vect2781.i, double %1380, i32 14
  %temp.vect2783.i = insertelement <16 x double> %temp.vect2782.i, double %1381, i32 15
  %1382 = fmul <16 x double> %temp.vect2783.i, <double 8.250000e-01, double 8.250000e-01, double 8.250000e-01, double 8.250000e-01, double 8.250000e-01, double 8.250000e-01, double 8.250000e-01, double 8.250000e-01, double 8.250000e-01, double 8.250000e-01, double 8.250000e-01, double 8.250000e-01, double 8.250000e-01, double 8.250000e-01, double 8.250000e-01, double 8.250000e-01>
  %1383 = fmul <16 x double> %33, <double 0xBEF179EC9CBD821E, double 0xBEF179EC9CBD821E, double 0xBEF179EC9CBD821E, double 0xBEF179EC9CBD821E, double 0xBEF179EC9CBD821E, double 0xBEF179EC9CBD821E, double 0xBEF179EC9CBD821E, double 0xBEF179EC9CBD821E, double 0xBEF179EC9CBD821E, double 0xBEF179EC9CBD821E, double 0xBEF179EC9CBD821E, double 0xBEF179EC9CBD821E, double 0xBEF179EC9CBD821E, double 0xBEF179EC9CBD821E, double 0xBEF179EC9CBD821E, double 0xBEF179EC9CBD821E>
  %extract2784.i = extractelement <16 x double> %1383, i32 0
  %extract2785.i = extractelement <16 x double> %1383, i32 1
  %extract2786.i = extractelement <16 x double> %1383, i32 2
  %extract2787.i = extractelement <16 x double> %1383, i32 3
  %extract2788.i = extractelement <16 x double> %1383, i32 4
  %extract2789.i = extractelement <16 x double> %1383, i32 5
  %extract2790.i = extractelement <16 x double> %1383, i32 6
  %extract2791.i = extractelement <16 x double> %1383, i32 7
  %extract2792.i = extractelement <16 x double> %1383, i32 8
  %extract2793.i = extractelement <16 x double> %1383, i32 9
  %extract2794.i = extractelement <16 x double> %1383, i32 10
  %extract2795.i = extractelement <16 x double> %1383, i32 11
  %extract2796.i = extractelement <16 x double> %1383, i32 12
  %extract2797.i = extractelement <16 x double> %1383, i32 13
  %extract2798.i = extractelement <16 x double> %1383, i32 14
  %extract2799.i = extractelement <16 x double> %1383, i32 15
  %1384 = call double @_Z3expd(double %extract2784.i) nounwind
  %1385 = call double @_Z3expd(double %extract2785.i) nounwind
  %1386 = call double @_Z3expd(double %extract2786.i) nounwind
  %1387 = call double @_Z3expd(double %extract2787.i) nounwind
  %1388 = call double @_Z3expd(double %extract2788.i) nounwind
  %1389 = call double @_Z3expd(double %extract2789.i) nounwind
  %1390 = call double @_Z3expd(double %extract2790.i) nounwind
  %1391 = call double @_Z3expd(double %extract2791.i) nounwind
  %1392 = call double @_Z3expd(double %extract2792.i) nounwind
  %1393 = call double @_Z3expd(double %extract2793.i) nounwind
  %1394 = call double @_Z3expd(double %extract2794.i) nounwind
  %1395 = call double @_Z3expd(double %extract2795.i) nounwind
  %1396 = call double @_Z3expd(double %extract2796.i) nounwind
  %1397 = call double @_Z3expd(double %extract2797.i) nounwind
  %1398 = call double @_Z3expd(double %extract2798.i) nounwind
  %1399 = call double @_Z3expd(double %extract2799.i) nounwind
  %temp.vect2800.i = insertelement <16 x double> undef, double %1384, i32 0
  %temp.vect2801.i = insertelement <16 x double> %temp.vect2800.i, double %1385, i32 1
  %temp.vect2802.i = insertelement <16 x double> %temp.vect2801.i, double %1386, i32 2
  %temp.vect2803.i = insertelement <16 x double> %temp.vect2802.i, double %1387, i32 3
  %temp.vect2804.i = insertelement <16 x double> %temp.vect2803.i, double %1388, i32 4
  %temp.vect2805.i = insertelement <16 x double> %temp.vect2804.i, double %1389, i32 5
  %temp.vect2806.i = insertelement <16 x double> %temp.vect2805.i, double %1390, i32 6
  %temp.vect2807.i = insertelement <16 x double> %temp.vect2806.i, double %1391, i32 7
  %temp.vect2808.i = insertelement <16 x double> %temp.vect2807.i, double %1392, i32 8
  %temp.vect2809.i = insertelement <16 x double> %temp.vect2808.i, double %1393, i32 9
  %temp.vect2810.i = insertelement <16 x double> %temp.vect2809.i, double %1394, i32 10
  %temp.vect2811.i = insertelement <16 x double> %temp.vect2810.i, double %1395, i32 11
  %temp.vect2812.i = insertelement <16 x double> %temp.vect2811.i, double %1396, i32 12
  %temp.vect2813.i = insertelement <16 x double> %temp.vect2812.i, double %1397, i32 13
  %temp.vect2814.i = insertelement <16 x double> %temp.vect2813.i, double %1398, i32 14
  %temp.vect2815.i = insertelement <16 x double> %temp.vect2814.i, double %1399, i32 15
  %1400 = fmul <16 x double> %temp.vect2815.i, <double 1.750000e-01, double 1.750000e-01, double 1.750000e-01, double 1.750000e-01, double 1.750000e-01, double 1.750000e-01, double 1.750000e-01, double 1.750000e-01, double 1.750000e-01, double 1.750000e-01, double 1.750000e-01, double 1.750000e-01, double 1.750000e-01, double 1.750000e-01, double 1.750000e-01, double 1.750000e-01>
  %1401 = fadd <16 x double> %1382, %1400
  %1402 = fmul <16 x double> %1007, <double -1.013980e+04, double -1.013980e+04, double -1.013980e+04, double -1.013980e+04, double -1.013980e+04, double -1.013980e+04, double -1.013980e+04, double -1.013980e+04, double -1.013980e+04, double -1.013980e+04, double -1.013980e+04, double -1.013980e+04, double -1.013980e+04, double -1.013980e+04, double -1.013980e+04, double -1.013980e+04>
  %extract2816.i = extractelement <16 x double> %1402, i32 0
  %extract2817.i = extractelement <16 x double> %1402, i32 1
  %extract2818.i = extractelement <16 x double> %1402, i32 2
  %extract2819.i = extractelement <16 x double> %1402, i32 3
  %extract2820.i = extractelement <16 x double> %1402, i32 4
  %extract2821.i = extractelement <16 x double> %1402, i32 5
  %extract2822.i = extractelement <16 x double> %1402, i32 6
  %extract2823.i = extractelement <16 x double> %1402, i32 7
  %extract2824.i = extractelement <16 x double> %1402, i32 8
  %extract2825.i = extractelement <16 x double> %1402, i32 9
  %extract2826.i = extractelement <16 x double> %1402, i32 10
  %extract2827.i = extractelement <16 x double> %1402, i32 11
  %extract2828.i = extractelement <16 x double> %1402, i32 12
  %extract2829.i = extractelement <16 x double> %1402, i32 13
  %extract2830.i = extractelement <16 x double> %1402, i32 14
  %extract2831.i = extractelement <16 x double> %1402, i32 15
  %1403 = call double @_Z3expd(double %extract2816.i) nounwind
  %1404 = call double @_Z3expd(double %extract2817.i) nounwind
  %1405 = call double @_Z3expd(double %extract2818.i) nounwind
  %1406 = call double @_Z3expd(double %extract2819.i) nounwind
  %1407 = call double @_Z3expd(double %extract2820.i) nounwind
  %1408 = call double @_Z3expd(double %extract2821.i) nounwind
  %1409 = call double @_Z3expd(double %extract2822.i) nounwind
  %1410 = call double @_Z3expd(double %extract2823.i) nounwind
  %1411 = call double @_Z3expd(double %extract2824.i) nounwind
  %1412 = call double @_Z3expd(double %extract2825.i) nounwind
  %1413 = call double @_Z3expd(double %extract2826.i) nounwind
  %1414 = call double @_Z3expd(double %extract2827.i) nounwind
  %1415 = call double @_Z3expd(double %extract2828.i) nounwind
  %1416 = call double @_Z3expd(double %extract2829.i) nounwind
  %1417 = call double @_Z3expd(double %extract2830.i) nounwind
  %1418 = call double @_Z3expd(double %extract2831.i) nounwind
  %temp.vect2832.i = insertelement <16 x double> undef, double %1403, i32 0
  %temp.vect2833.i = insertelement <16 x double> %temp.vect2832.i, double %1404, i32 1
  %temp.vect2834.i = insertelement <16 x double> %temp.vect2833.i, double %1405, i32 2
  %temp.vect2835.i = insertelement <16 x double> %temp.vect2834.i, double %1406, i32 3
  %temp.vect2836.i = insertelement <16 x double> %temp.vect2835.i, double %1407, i32 4
  %temp.vect2837.i = insertelement <16 x double> %temp.vect2836.i, double %1408, i32 5
  %temp.vect2838.i = insertelement <16 x double> %temp.vect2837.i, double %1409, i32 6
  %temp.vect2839.i = insertelement <16 x double> %temp.vect2838.i, double %1410, i32 7
  %temp.vect2840.i = insertelement <16 x double> %temp.vect2839.i, double %1411, i32 8
  %temp.vect2841.i = insertelement <16 x double> %temp.vect2840.i, double %1412, i32 9
  %temp.vect2842.i = insertelement <16 x double> %temp.vect2841.i, double %1413, i32 10
  %temp.vect2843.i = insertelement <16 x double> %temp.vect2842.i, double %1414, i32 11
  %temp.vect2844.i = insertelement <16 x double> %temp.vect2843.i, double %1415, i32 12
  %temp.vect2845.i = insertelement <16 x double> %temp.vect2844.i, double %1416, i32 13
  %temp.vect2846.i = insertelement <16 x double> %temp.vect2845.i, double %1417, i32 14
  %temp.vect2847.i = insertelement <16 x double> %temp.vect2846.i, double %1418, i32 15
  %1419 = fadd <16 x double> %1401, %temp.vect2847.i
  %extract2848.i = extractelement <16 x double> %1419, i32 0
  %extract2849.i = extractelement <16 x double> %1419, i32 1
  %extract2850.i = extractelement <16 x double> %1419, i32 2
  %extract2851.i = extractelement <16 x double> %1419, i32 3
  %extract2852.i = extractelement <16 x double> %1419, i32 4
  %extract2853.i = extractelement <16 x double> %1419, i32 5
  %extract2854.i = extractelement <16 x double> %1419, i32 6
  %extract2855.i = extractelement <16 x double> %1419, i32 7
  %extract2856.i = extractelement <16 x double> %1419, i32 8
  %extract2857.i = extractelement <16 x double> %1419, i32 9
  %extract2858.i = extractelement <16 x double> %1419, i32 10
  %extract2859.i = extractelement <16 x double> %1419, i32 11
  %extract2860.i = extractelement <16 x double> %1419, i32 12
  %extract2861.i = extractelement <16 x double> %1419, i32 13
  %extract2862.i = extractelement <16 x double> %1419, i32 14
  %extract2863.i = extractelement <16 x double> %1419, i32 15
  %1420 = call double @_Z4fmaxdd(double %extract2848.i, double 1.000000e-200) nounwind
  %1421 = call double @_Z4fmaxdd(double %extract2849.i, double 1.000000e-200) nounwind
  %1422 = call double @_Z4fmaxdd(double %extract2850.i, double 1.000000e-200) nounwind
  %1423 = call double @_Z4fmaxdd(double %extract2851.i, double 1.000000e-200) nounwind
  %1424 = call double @_Z4fmaxdd(double %extract2852.i, double 1.000000e-200) nounwind
  %1425 = call double @_Z4fmaxdd(double %extract2853.i, double 1.000000e-200) nounwind
  %1426 = call double @_Z4fmaxdd(double %extract2854.i, double 1.000000e-200) nounwind
  %1427 = call double @_Z4fmaxdd(double %extract2855.i, double 1.000000e-200) nounwind
  %1428 = call double @_Z4fmaxdd(double %extract2856.i, double 1.000000e-200) nounwind
  %1429 = call double @_Z4fmaxdd(double %extract2857.i, double 1.000000e-200) nounwind
  %1430 = call double @_Z4fmaxdd(double %extract2858.i, double 1.000000e-200) nounwind
  %1431 = call double @_Z4fmaxdd(double %extract2859.i, double 1.000000e-200) nounwind
  %1432 = call double @_Z4fmaxdd(double %extract2860.i, double 1.000000e-200) nounwind
  %1433 = call double @_Z4fmaxdd(double %extract2861.i, double 1.000000e-200) nounwind
  %1434 = call double @_Z4fmaxdd(double %extract2862.i, double 1.000000e-200) nounwind
  %1435 = call double @_Z4fmaxdd(double %extract2863.i, double 1.000000e-200) nounwind
  %1436 = call double @_Z5log10d(double %1420) nounwind
  %1437 = call double @_Z5log10d(double %1421) nounwind
  %1438 = call double @_Z5log10d(double %1422) nounwind
  %1439 = call double @_Z5log10d(double %1423) nounwind
  %1440 = call double @_Z5log10d(double %1424) nounwind
  %1441 = call double @_Z5log10d(double %1425) nounwind
  %1442 = call double @_Z5log10d(double %1426) nounwind
  %1443 = call double @_Z5log10d(double %1427) nounwind
  %1444 = call double @_Z5log10d(double %1428) nounwind
  %1445 = call double @_Z5log10d(double %1429) nounwind
  %1446 = call double @_Z5log10d(double %1430) nounwind
  %1447 = call double @_Z5log10d(double %1431) nounwind
  %1448 = call double @_Z5log10d(double %1432) nounwind
  %1449 = call double @_Z5log10d(double %1433) nounwind
  %1450 = call double @_Z5log10d(double %1434) nounwind
  %1451 = call double @_Z5log10d(double %1435) nounwind
  %temp.vect2864.i = insertelement <16 x double> undef, double %1436, i32 0
  %temp.vect2865.i = insertelement <16 x double> %temp.vect2864.i, double %1437, i32 1
  %temp.vect2866.i = insertelement <16 x double> %temp.vect2865.i, double %1438, i32 2
  %temp.vect2867.i = insertelement <16 x double> %temp.vect2866.i, double %1439, i32 3
  %temp.vect2868.i = insertelement <16 x double> %temp.vect2867.i, double %1440, i32 4
  %temp.vect2869.i = insertelement <16 x double> %temp.vect2868.i, double %1441, i32 5
  %temp.vect2870.i = insertelement <16 x double> %temp.vect2869.i, double %1442, i32 6
  %temp.vect2871.i = insertelement <16 x double> %temp.vect2870.i, double %1443, i32 7
  %temp.vect2872.i = insertelement <16 x double> %temp.vect2871.i, double %1444, i32 8
  %temp.vect2873.i = insertelement <16 x double> %temp.vect2872.i, double %1445, i32 9
  %temp.vect2874.i = insertelement <16 x double> %temp.vect2873.i, double %1446, i32 10
  %temp.vect2875.i = insertelement <16 x double> %temp.vect2874.i, double %1447, i32 11
  %temp.vect2876.i = insertelement <16 x double> %temp.vect2875.i, double %1448, i32 12
  %temp.vect2877.i = insertelement <16 x double> %temp.vect2876.i, double %1449, i32 13
  %temp.vect2878.i = insertelement <16 x double> %temp.vect2877.i, double %1450, i32 14
  %temp.vect2879.i = insertelement <16 x double> %temp.vect2878.i, double %1451, i32 15
  %1452 = fmul <16 x double> %temp.vect2879.i, <double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00>
  %1453 = fsub <16 x double> <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>, %1452
  %1454 = fmul <16 x double> %temp.vect2879.i, <double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01>
  %1455 = fadd <16 x double> %1454, <double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01>
  %1456 = fsub <16 x double> %temp.vect2895.i, %1455
  %1457 = fmul <16 x double> %1456, <double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01>
  %1458 = fsub <16 x double> %1453, %1457
  %1459 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1458
  %1460 = fmul <16 x double> %1456, %1459
  %1461 = fmul <16 x double> %1460, %1460
  %1462 = fadd <16 x double> %1461, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %1463 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1462
  %1464 = fmul <16 x double> %temp.vect2879.i, %1463
  %extract2896.i = extractelement <16 x double> %1464, i32 0
  %extract2897.i = extractelement <16 x double> %1464, i32 1
  %extract2898.i = extractelement <16 x double> %1464, i32 2
  %extract2899.i = extractelement <16 x double> %1464, i32 3
  %extract2900.i = extractelement <16 x double> %1464, i32 4
  %extract2901.i = extractelement <16 x double> %1464, i32 5
  %extract2902.i = extractelement <16 x double> %1464, i32 6
  %extract2903.i = extractelement <16 x double> %1464, i32 7
  %extract2904.i = extractelement <16 x double> %1464, i32 8
  %extract2905.i = extractelement <16 x double> %1464, i32 9
  %extract2906.i = extractelement <16 x double> %1464, i32 10
  %extract2907.i = extractelement <16 x double> %1464, i32 11
  %extract2908.i = extractelement <16 x double> %1464, i32 12
  %extract2909.i = extractelement <16 x double> %1464, i32 13
  %extract2910.i = extractelement <16 x double> %1464, i32 14
  %extract2911.i = extractelement <16 x double> %1464, i32 15
  %1465 = call double @_Z5exp10d(double %extract2896.i) nounwind
  %1466 = call double @_Z5exp10d(double %extract2897.i) nounwind
  %1467 = call double @_Z5exp10d(double %extract2898.i) nounwind
  %1468 = call double @_Z5exp10d(double %extract2899.i) nounwind
  %1469 = call double @_Z5exp10d(double %extract2900.i) nounwind
  %1470 = call double @_Z5exp10d(double %extract2901.i) nounwind
  %1471 = call double @_Z5exp10d(double %extract2902.i) nounwind
  %1472 = call double @_Z5exp10d(double %extract2903.i) nounwind
  %1473 = call double @_Z5exp10d(double %extract2904.i) nounwind
  %1474 = call double @_Z5exp10d(double %extract2905.i) nounwind
  %1475 = call double @_Z5exp10d(double %extract2906.i) nounwind
  %1476 = call double @_Z5exp10d(double %extract2907.i) nounwind
  %1477 = call double @_Z5exp10d(double %extract2908.i) nounwind
  %1478 = call double @_Z5exp10d(double %extract2909.i) nounwind
  %1479 = call double @_Z5exp10d(double %extract2910.i) nounwind
  %1480 = call double @_Z5exp10d(double %extract2911.i) nounwind
  %temp.vect2912.i = insertelement <16 x double> undef, double %1465, i32 0
  %temp.vect2913.i = insertelement <16 x double> %temp.vect2912.i, double %1466, i32 1
  %temp.vect2914.i = insertelement <16 x double> %temp.vect2913.i, double %1467, i32 2
  %temp.vect2915.i = insertelement <16 x double> %temp.vect2914.i, double %1468, i32 3
  %temp.vect2916.i = insertelement <16 x double> %temp.vect2915.i, double %1469, i32 4
  %temp.vect2917.i = insertelement <16 x double> %temp.vect2916.i, double %1470, i32 5
  %temp.vect2918.i = insertelement <16 x double> %temp.vect2917.i, double %1471, i32 6
  %temp.vect2919.i = insertelement <16 x double> %temp.vect2918.i, double %1472, i32 7
  %temp.vect2920.i = insertelement <16 x double> %temp.vect2919.i, double %1473, i32 8
  %temp.vect2921.i = insertelement <16 x double> %temp.vect2920.i, double %1474, i32 9
  %temp.vect2922.i = insertelement <16 x double> %temp.vect2921.i, double %1475, i32 10
  %temp.vect2923.i = insertelement <16 x double> %temp.vect2922.i, double %1476, i32 11
  %temp.vect2924.i = insertelement <16 x double> %temp.vect2923.i, double %1477, i32 12
  %temp.vect2925.i = insertelement <16 x double> %temp.vect2924.i, double %1478, i32 13
  %temp.vect2926.i = insertelement <16 x double> %temp.vect2925.i, double %1479, i32 14
  %temp.vect2927.i = insertelement <16 x double> %temp.vect2926.i, double %1480, i32 15
  %1481 = fmul <16 x double> %temp.vect2927.i, %1332
  %1482 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1483 = load i64* %1482, align 8
  %1484 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1485 = load i64* %1484, align 8
  %1486 = add i64 %1483, %1485
  %extract2930.i = add i64 %1486, 15925248
  %1487 = getelementptr inbounds double addrspace(1)* %7, i64 %extract2930.i
  %ptrTypeCast2946.i = bitcast double addrspace(1)* %1487 to <16 x double> addrspace(1)*
  %1488 = load <16 x double> addrspace(1)* %ptrTypeCast2946.i, align 8
  %1489 = fmul <16 x double> %1488, %1481
  %1490 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1491 = load i64* %1490, align 8
  %1492 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1493 = load i64* %1492, align 8
  %1494 = add i64 %1491, %1493
  %extract2949.i = add i64 %1494, 15925248
  %1495 = getelementptr inbounds double addrspace(1)* %7, i64 %extract2949.i
  %ptrTypeCast2965.i = bitcast double addrspace(1)* %1495 to <16 x double> addrspace(1)*
  store <16 x double> %1489, <16 x double> addrspace(1)* %ptrTypeCast2965.i, align 8
  %1496 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1497 = load i64* %1496, align 8
  %1498 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1499 = load i64* %1498, align 8
  %1500 = add i64 %1497, %1499
  %extract2968.i = add i64 %1500, 15925248
  %1501 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2968.i
  %ptrTypeCast2984.i = bitcast double addrspace(1)* %1501 to <16 x double> addrspace(1)*
  %1502 = load <16 x double> addrspace(1)* %ptrTypeCast2984.i, align 8
  %1503 = fmul <16 x double> %1502, %1481
  %1504 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1505 = load i64* %1504, align 8
  %1506 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1507 = load i64* %1506, align 8
  %1508 = add i64 %1505, %1507
  %extract2987.i = add i64 %1508, 15925248
  %1509 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2987.i
  %ptrTypeCast3003.i = bitcast double addrspace(1)* %1509 to <16 x double> addrspace(1)*
  store <16 x double> %1503, <16 x double> addrspace(1)* %ptrTypeCast3003.i, align 8
  %1510 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1511 = load i64* %1510, align 8
  %1512 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1513 = load i64* %1512, align 8
  %1514 = add i64 %1511, %1513
  %extract3006.i = add i64 %1514, 1658880
  %1515 = getelementptr inbounds double addrspace(1)* %13, i64 %extract3006.i
  %ptrTypeCast3022.i = bitcast double addrspace(1)* %1515 to <16 x double> addrspace(1)*
  %1516 = load <16 x double> addrspace(1)* %ptrTypeCast3022.i, align 8
  %1517 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1518 = load i64* %1517, align 8
  %1519 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1520 = load i64* %1519, align 8
  %1521 = add i64 %1518, %1520
  %extract3025.i = add i64 %1521, 16257024
  %1522 = getelementptr inbounds double addrspace(1)* %7, i64 %extract3025.i
  %ptrTypeCast3041.i = bitcast double addrspace(1)* %1522 to <16 x double> addrspace(1)*
  %1523 = load <16 x double> addrspace(1)* %ptrTypeCast3041.i, align 8
  %1524 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1523
  %1525 = fmul <16 x double> %239, %1524
  %1526 = fmul <16 x double> %1516, %1525
  %extract3042.i = extractelement <16 x double> %1526, i32 0
  %extract3043.i = extractelement <16 x double> %1526, i32 1
  %extract3044.i = extractelement <16 x double> %1526, i32 2
  %extract3045.i = extractelement <16 x double> %1526, i32 3
  %extract3046.i = extractelement <16 x double> %1526, i32 4
  %extract3047.i = extractelement <16 x double> %1526, i32 5
  %extract3048.i = extractelement <16 x double> %1526, i32 6
  %extract3049.i = extractelement <16 x double> %1526, i32 7
  %extract3050.i = extractelement <16 x double> %1526, i32 8
  %extract3051.i = extractelement <16 x double> %1526, i32 9
  %extract3052.i = extractelement <16 x double> %1526, i32 10
  %extract3053.i = extractelement <16 x double> %1526, i32 11
  %extract3054.i = extractelement <16 x double> %1526, i32 12
  %extract3055.i = extractelement <16 x double> %1526, i32 13
  %extract3056.i = extractelement <16 x double> %1526, i32 14
  %extract3057.i = extractelement <16 x double> %1526, i32 15
  %1527 = fadd <16 x double> %1526, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %1528 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1527
  %1529 = fmul <16 x double> %1526, %1528
  %1530 = call double @_Z4fmaxdd(double %extract3042.i, double 1.000000e-200) nounwind
  %1531 = call double @_Z4fmaxdd(double %extract3043.i, double 1.000000e-200) nounwind
  %1532 = call double @_Z4fmaxdd(double %extract3044.i, double 1.000000e-200) nounwind
  %1533 = call double @_Z4fmaxdd(double %extract3045.i, double 1.000000e-200) nounwind
  %1534 = call double @_Z4fmaxdd(double %extract3046.i, double 1.000000e-200) nounwind
  %1535 = call double @_Z4fmaxdd(double %extract3047.i, double 1.000000e-200) nounwind
  %1536 = call double @_Z4fmaxdd(double %extract3048.i, double 1.000000e-200) nounwind
  %1537 = call double @_Z4fmaxdd(double %extract3049.i, double 1.000000e-200) nounwind
  %1538 = call double @_Z4fmaxdd(double %extract3050.i, double 1.000000e-200) nounwind
  %1539 = call double @_Z4fmaxdd(double %extract3051.i, double 1.000000e-200) nounwind
  %1540 = call double @_Z4fmaxdd(double %extract3052.i, double 1.000000e-200) nounwind
  %1541 = call double @_Z4fmaxdd(double %extract3053.i, double 1.000000e-200) nounwind
  %1542 = call double @_Z4fmaxdd(double %extract3054.i, double 1.000000e-200) nounwind
  %1543 = call double @_Z4fmaxdd(double %extract3055.i, double 1.000000e-200) nounwind
  %1544 = call double @_Z4fmaxdd(double %extract3056.i, double 1.000000e-200) nounwind
  %1545 = call double @_Z4fmaxdd(double %extract3057.i, double 1.000000e-200) nounwind
  %1546 = call double @_Z5log10d(double %1530) nounwind
  %1547 = call double @_Z5log10d(double %1531) nounwind
  %1548 = call double @_Z5log10d(double %1532) nounwind
  %1549 = call double @_Z5log10d(double %1533) nounwind
  %1550 = call double @_Z5log10d(double %1534) nounwind
  %1551 = call double @_Z5log10d(double %1535) nounwind
  %1552 = call double @_Z5log10d(double %1536) nounwind
  %1553 = call double @_Z5log10d(double %1537) nounwind
  %1554 = call double @_Z5log10d(double %1538) nounwind
  %1555 = call double @_Z5log10d(double %1539) nounwind
  %1556 = call double @_Z5log10d(double %1540) nounwind
  %1557 = call double @_Z5log10d(double %1541) nounwind
  %1558 = call double @_Z5log10d(double %1542) nounwind
  %1559 = call double @_Z5log10d(double %1543) nounwind
  %1560 = call double @_Z5log10d(double %1544) nounwind
  %1561 = call double @_Z5log10d(double %1545) nounwind
  %temp.vect3186.i = insertelement <16 x double> undef, double %1546, i32 0
  %temp.vect3187.i = insertelement <16 x double> %temp.vect3186.i, double %1547, i32 1
  %temp.vect3188.i = insertelement <16 x double> %temp.vect3187.i, double %1548, i32 2
  %temp.vect3189.i = insertelement <16 x double> %temp.vect3188.i, double %1549, i32 3
  %temp.vect3190.i = insertelement <16 x double> %temp.vect3189.i, double %1550, i32 4
  %temp.vect3191.i = insertelement <16 x double> %temp.vect3190.i, double %1551, i32 5
  %temp.vect3192.i = insertelement <16 x double> %temp.vect3191.i, double %1552, i32 6
  %temp.vect3193.i = insertelement <16 x double> %temp.vect3192.i, double %1553, i32 7
  %temp.vect3194.i = insertelement <16 x double> %temp.vect3193.i, double %1554, i32 8
  %temp.vect3195.i = insertelement <16 x double> %temp.vect3194.i, double %1555, i32 9
  %temp.vect3196.i = insertelement <16 x double> %temp.vect3195.i, double %1556, i32 10
  %temp.vect3197.i = insertelement <16 x double> %temp.vect3196.i, double %1557, i32 11
  %temp.vect3198.i = insertelement <16 x double> %temp.vect3197.i, double %1558, i32 12
  %temp.vect3199.i = insertelement <16 x double> %temp.vect3198.i, double %1559, i32 13
  %temp.vect3200.i = insertelement <16 x double> %temp.vect3199.i, double %1560, i32 14
  %temp.vect3201.i = insertelement <16 x double> %temp.vect3200.i, double %1561, i32 15
  %1562 = fmul <16 x double> %33, <double 0xBF1D74526156683E, double 0xBF1D74526156683E, double 0xBF1D74526156683E, double 0xBF1D74526156683E, double 0xBF1D74526156683E, double 0xBF1D74526156683E, double 0xBF1D74526156683E, double 0xBF1D74526156683E, double 0xBF1D74526156683E, double 0xBF1D74526156683E, double 0xBF1D74526156683E, double 0xBF1D74526156683E, double 0xBF1D74526156683E, double 0xBF1D74526156683E, double 0xBF1D74526156683E, double 0xBF1D74526156683E>
  %extract3058.i = extractelement <16 x double> %1562, i32 0
  %extract3059.i = extractelement <16 x double> %1562, i32 1
  %extract3060.i = extractelement <16 x double> %1562, i32 2
  %extract3061.i = extractelement <16 x double> %1562, i32 3
  %extract3062.i = extractelement <16 x double> %1562, i32 4
  %extract3063.i = extractelement <16 x double> %1562, i32 5
  %extract3064.i = extractelement <16 x double> %1562, i32 6
  %extract3065.i = extractelement <16 x double> %1562, i32 7
  %extract3066.i = extractelement <16 x double> %1562, i32 8
  %extract3067.i = extractelement <16 x double> %1562, i32 9
  %extract3068.i = extractelement <16 x double> %1562, i32 10
  %extract3069.i = extractelement <16 x double> %1562, i32 11
  %extract3070.i = extractelement <16 x double> %1562, i32 12
  %extract3071.i = extractelement <16 x double> %1562, i32 13
  %extract3072.i = extractelement <16 x double> %1562, i32 14
  %extract3073.i = extractelement <16 x double> %1562, i32 15
  %1563 = call double @_Z3expd(double %extract3058.i) nounwind
  %1564 = call double @_Z3expd(double %extract3059.i) nounwind
  %1565 = call double @_Z3expd(double %extract3060.i) nounwind
  %1566 = call double @_Z3expd(double %extract3061.i) nounwind
  %1567 = call double @_Z3expd(double %extract3062.i) nounwind
  %1568 = call double @_Z3expd(double %extract3063.i) nounwind
  %1569 = call double @_Z3expd(double %extract3064.i) nounwind
  %1570 = call double @_Z3expd(double %extract3065.i) nounwind
  %1571 = call double @_Z3expd(double %extract3066.i) nounwind
  %1572 = call double @_Z3expd(double %extract3067.i) nounwind
  %1573 = call double @_Z3expd(double %extract3068.i) nounwind
  %1574 = call double @_Z3expd(double %extract3069.i) nounwind
  %1575 = call double @_Z3expd(double %extract3070.i) nounwind
  %1576 = call double @_Z3expd(double %extract3071.i) nounwind
  %1577 = call double @_Z3expd(double %extract3072.i) nounwind
  %1578 = call double @_Z3expd(double %extract3073.i) nounwind
  %temp.vect3074.i = insertelement <16 x double> undef, double %1563, i32 0
  %temp.vect3075.i = insertelement <16 x double> %temp.vect3074.i, double %1564, i32 1
  %temp.vect3076.i = insertelement <16 x double> %temp.vect3075.i, double %1565, i32 2
  %temp.vect3077.i = insertelement <16 x double> %temp.vect3076.i, double %1566, i32 3
  %temp.vect3078.i = insertelement <16 x double> %temp.vect3077.i, double %1567, i32 4
  %temp.vect3079.i = insertelement <16 x double> %temp.vect3078.i, double %1568, i32 5
  %temp.vect3080.i = insertelement <16 x double> %temp.vect3079.i, double %1569, i32 6
  %temp.vect3081.i = insertelement <16 x double> %temp.vect3080.i, double %1570, i32 7
  %temp.vect3082.i = insertelement <16 x double> %temp.vect3081.i, double %1571, i32 8
  %temp.vect3083.i = insertelement <16 x double> %temp.vect3082.i, double %1572, i32 9
  %temp.vect3084.i = insertelement <16 x double> %temp.vect3083.i, double %1573, i32 10
  %temp.vect3085.i = insertelement <16 x double> %temp.vect3084.i, double %1574, i32 11
  %temp.vect3086.i = insertelement <16 x double> %temp.vect3085.i, double %1575, i32 12
  %temp.vect3087.i = insertelement <16 x double> %temp.vect3086.i, double %1576, i32 13
  %temp.vect3088.i = insertelement <16 x double> %temp.vect3087.i, double %1577, i32 14
  %temp.vect3089.i = insertelement <16 x double> %temp.vect3088.i, double %1578, i32 15
  %1579 = fmul <16 x double> %temp.vect3089.i, <double 4.500000e-01, double 4.500000e-01, double 4.500000e-01, double 4.500000e-01, double 4.500000e-01, double 4.500000e-01, double 4.500000e-01, double 4.500000e-01, double 4.500000e-01, double 4.500000e-01, double 4.500000e-01, double 4.500000e-01, double 4.500000e-01, double 4.500000e-01, double 4.500000e-01, double 4.500000e-01>
  %1580 = fmul <16 x double> %33, <double 0xBF2E21A99B7BB433, double 0xBF2E21A99B7BB433, double 0xBF2E21A99B7BB433, double 0xBF2E21A99B7BB433, double 0xBF2E21A99B7BB433, double 0xBF2E21A99B7BB433, double 0xBF2E21A99B7BB433, double 0xBF2E21A99B7BB433, double 0xBF2E21A99B7BB433, double 0xBF2E21A99B7BB433, double 0xBF2E21A99B7BB433, double 0xBF2E21A99B7BB433, double 0xBF2E21A99B7BB433, double 0xBF2E21A99B7BB433, double 0xBF2E21A99B7BB433, double 0xBF2E21A99B7BB433>
  %extract3090.i = extractelement <16 x double> %1580, i32 0
  %extract3091.i = extractelement <16 x double> %1580, i32 1
  %extract3092.i = extractelement <16 x double> %1580, i32 2
  %extract3093.i = extractelement <16 x double> %1580, i32 3
  %extract3094.i = extractelement <16 x double> %1580, i32 4
  %extract3095.i = extractelement <16 x double> %1580, i32 5
  %extract3096.i = extractelement <16 x double> %1580, i32 6
  %extract3097.i = extractelement <16 x double> %1580, i32 7
  %extract3098.i = extractelement <16 x double> %1580, i32 8
  %extract3099.i = extractelement <16 x double> %1580, i32 9
  %extract3100.i = extractelement <16 x double> %1580, i32 10
  %extract3101.i = extractelement <16 x double> %1580, i32 11
  %extract3102.i = extractelement <16 x double> %1580, i32 12
  %extract3103.i = extractelement <16 x double> %1580, i32 13
  %extract3104.i = extractelement <16 x double> %1580, i32 14
  %extract3105.i = extractelement <16 x double> %1580, i32 15
  %1581 = call double @_Z3expd(double %extract3090.i) nounwind
  %1582 = call double @_Z3expd(double %extract3091.i) nounwind
  %1583 = call double @_Z3expd(double %extract3092.i) nounwind
  %1584 = call double @_Z3expd(double %extract3093.i) nounwind
  %1585 = call double @_Z3expd(double %extract3094.i) nounwind
  %1586 = call double @_Z3expd(double %extract3095.i) nounwind
  %1587 = call double @_Z3expd(double %extract3096.i) nounwind
  %1588 = call double @_Z3expd(double %extract3097.i) nounwind
  %1589 = call double @_Z3expd(double %extract3098.i) nounwind
  %1590 = call double @_Z3expd(double %extract3099.i) nounwind
  %1591 = call double @_Z3expd(double %extract3100.i) nounwind
  %1592 = call double @_Z3expd(double %extract3101.i) nounwind
  %1593 = call double @_Z3expd(double %extract3102.i) nounwind
  %1594 = call double @_Z3expd(double %extract3103.i) nounwind
  %1595 = call double @_Z3expd(double %extract3104.i) nounwind
  %1596 = call double @_Z3expd(double %extract3105.i) nounwind
  %temp.vect3106.i = insertelement <16 x double> undef, double %1581, i32 0
  %temp.vect3107.i = insertelement <16 x double> %temp.vect3106.i, double %1582, i32 1
  %temp.vect3108.i = insertelement <16 x double> %temp.vect3107.i, double %1583, i32 2
  %temp.vect3109.i = insertelement <16 x double> %temp.vect3108.i, double %1584, i32 3
  %temp.vect3110.i = insertelement <16 x double> %temp.vect3109.i, double %1585, i32 4
  %temp.vect3111.i = insertelement <16 x double> %temp.vect3110.i, double %1586, i32 5
  %temp.vect3112.i = insertelement <16 x double> %temp.vect3111.i, double %1587, i32 6
  %temp.vect3113.i = insertelement <16 x double> %temp.vect3112.i, double %1588, i32 7
  %temp.vect3114.i = insertelement <16 x double> %temp.vect3113.i, double %1589, i32 8
  %temp.vect3115.i = insertelement <16 x double> %temp.vect3114.i, double %1590, i32 9
  %temp.vect3116.i = insertelement <16 x double> %temp.vect3115.i, double %1591, i32 10
  %temp.vect3117.i = insertelement <16 x double> %temp.vect3116.i, double %1592, i32 11
  %temp.vect3118.i = insertelement <16 x double> %temp.vect3117.i, double %1593, i32 12
  %temp.vect3119.i = insertelement <16 x double> %temp.vect3118.i, double %1594, i32 13
  %temp.vect3120.i = insertelement <16 x double> %temp.vect3119.i, double %1595, i32 14
  %temp.vect3121.i = insertelement <16 x double> %temp.vect3120.i, double %1596, i32 15
  %1597 = fmul <16 x double> %temp.vect3121.i, <double 5.500000e-01, double 5.500000e-01, double 5.500000e-01, double 5.500000e-01, double 5.500000e-01, double 5.500000e-01, double 5.500000e-01, double 5.500000e-01, double 5.500000e-01, double 5.500000e-01, double 5.500000e-01, double 5.500000e-01, double 5.500000e-01, double 5.500000e-01, double 5.500000e-01, double 5.500000e-01>
  %1598 = fadd <16 x double> %1579, %1597
  %1599 = fmul <16 x double> %1007, <double -7.244000e+03, double -7.244000e+03, double -7.244000e+03, double -7.244000e+03, double -7.244000e+03, double -7.244000e+03, double -7.244000e+03, double -7.244000e+03, double -7.244000e+03, double -7.244000e+03, double -7.244000e+03, double -7.244000e+03, double -7.244000e+03, double -7.244000e+03, double -7.244000e+03, double -7.244000e+03>
  %extract3122.i = extractelement <16 x double> %1599, i32 0
  %extract3123.i = extractelement <16 x double> %1599, i32 1
  %extract3124.i = extractelement <16 x double> %1599, i32 2
  %extract3125.i = extractelement <16 x double> %1599, i32 3
  %extract3126.i = extractelement <16 x double> %1599, i32 4
  %extract3127.i = extractelement <16 x double> %1599, i32 5
  %extract3128.i = extractelement <16 x double> %1599, i32 6
  %extract3129.i = extractelement <16 x double> %1599, i32 7
  %extract3130.i = extractelement <16 x double> %1599, i32 8
  %extract3131.i = extractelement <16 x double> %1599, i32 9
  %extract3132.i = extractelement <16 x double> %1599, i32 10
  %extract3133.i = extractelement <16 x double> %1599, i32 11
  %extract3134.i = extractelement <16 x double> %1599, i32 12
  %extract3135.i = extractelement <16 x double> %1599, i32 13
  %extract3136.i = extractelement <16 x double> %1599, i32 14
  %extract3137.i = extractelement <16 x double> %1599, i32 15
  %1600 = call double @_Z3expd(double %extract3122.i) nounwind
  %1601 = call double @_Z3expd(double %extract3123.i) nounwind
  %1602 = call double @_Z3expd(double %extract3124.i) nounwind
  %1603 = call double @_Z3expd(double %extract3125.i) nounwind
  %1604 = call double @_Z3expd(double %extract3126.i) nounwind
  %1605 = call double @_Z3expd(double %extract3127.i) nounwind
  %1606 = call double @_Z3expd(double %extract3128.i) nounwind
  %1607 = call double @_Z3expd(double %extract3129.i) nounwind
  %1608 = call double @_Z3expd(double %extract3130.i) nounwind
  %1609 = call double @_Z3expd(double %extract3131.i) nounwind
  %1610 = call double @_Z3expd(double %extract3132.i) nounwind
  %1611 = call double @_Z3expd(double %extract3133.i) nounwind
  %1612 = call double @_Z3expd(double %extract3134.i) nounwind
  %1613 = call double @_Z3expd(double %extract3135.i) nounwind
  %1614 = call double @_Z3expd(double %extract3136.i) nounwind
  %1615 = call double @_Z3expd(double %extract3137.i) nounwind
  %temp.vect3138.i = insertelement <16 x double> undef, double %1600, i32 0
  %temp.vect3139.i = insertelement <16 x double> %temp.vect3138.i, double %1601, i32 1
  %temp.vect3140.i = insertelement <16 x double> %temp.vect3139.i, double %1602, i32 2
  %temp.vect3141.i = insertelement <16 x double> %temp.vect3140.i, double %1603, i32 3
  %temp.vect3142.i = insertelement <16 x double> %temp.vect3141.i, double %1604, i32 4
  %temp.vect3143.i = insertelement <16 x double> %temp.vect3142.i, double %1605, i32 5
  %temp.vect3144.i = insertelement <16 x double> %temp.vect3143.i, double %1606, i32 6
  %temp.vect3145.i = insertelement <16 x double> %temp.vect3144.i, double %1607, i32 7
  %temp.vect3146.i = insertelement <16 x double> %temp.vect3145.i, double %1608, i32 8
  %temp.vect3147.i = insertelement <16 x double> %temp.vect3146.i, double %1609, i32 9
  %temp.vect3148.i = insertelement <16 x double> %temp.vect3147.i, double %1610, i32 10
  %temp.vect3149.i = insertelement <16 x double> %temp.vect3148.i, double %1611, i32 11
  %temp.vect3150.i = insertelement <16 x double> %temp.vect3149.i, double %1612, i32 12
  %temp.vect3151.i = insertelement <16 x double> %temp.vect3150.i, double %1613, i32 13
  %temp.vect3152.i = insertelement <16 x double> %temp.vect3151.i, double %1614, i32 14
  %temp.vect3153.i = insertelement <16 x double> %temp.vect3152.i, double %1615, i32 15
  %1616 = fadd <16 x double> %1598, %temp.vect3153.i
  %extract3154.i = extractelement <16 x double> %1616, i32 0
  %extract3155.i = extractelement <16 x double> %1616, i32 1
  %extract3156.i = extractelement <16 x double> %1616, i32 2
  %extract3157.i = extractelement <16 x double> %1616, i32 3
  %extract3158.i = extractelement <16 x double> %1616, i32 4
  %extract3159.i = extractelement <16 x double> %1616, i32 5
  %extract3160.i = extractelement <16 x double> %1616, i32 6
  %extract3161.i = extractelement <16 x double> %1616, i32 7
  %extract3162.i = extractelement <16 x double> %1616, i32 8
  %extract3163.i = extractelement <16 x double> %1616, i32 9
  %extract3164.i = extractelement <16 x double> %1616, i32 10
  %extract3165.i = extractelement <16 x double> %1616, i32 11
  %extract3166.i = extractelement <16 x double> %1616, i32 12
  %extract3167.i = extractelement <16 x double> %1616, i32 13
  %extract3168.i = extractelement <16 x double> %1616, i32 14
  %extract3169.i = extractelement <16 x double> %1616, i32 15
  %1617 = call double @_Z4fmaxdd(double %extract3154.i, double 1.000000e-200) nounwind
  %1618 = call double @_Z4fmaxdd(double %extract3155.i, double 1.000000e-200) nounwind
  %1619 = call double @_Z4fmaxdd(double %extract3156.i, double 1.000000e-200) nounwind
  %1620 = call double @_Z4fmaxdd(double %extract3157.i, double 1.000000e-200) nounwind
  %1621 = call double @_Z4fmaxdd(double %extract3158.i, double 1.000000e-200) nounwind
  %1622 = call double @_Z4fmaxdd(double %extract3159.i, double 1.000000e-200) nounwind
  %1623 = call double @_Z4fmaxdd(double %extract3160.i, double 1.000000e-200) nounwind
  %1624 = call double @_Z4fmaxdd(double %extract3161.i, double 1.000000e-200) nounwind
  %1625 = call double @_Z4fmaxdd(double %extract3162.i, double 1.000000e-200) nounwind
  %1626 = call double @_Z4fmaxdd(double %extract3163.i, double 1.000000e-200) nounwind
  %1627 = call double @_Z4fmaxdd(double %extract3164.i, double 1.000000e-200) nounwind
  %1628 = call double @_Z4fmaxdd(double %extract3165.i, double 1.000000e-200) nounwind
  %1629 = call double @_Z4fmaxdd(double %extract3166.i, double 1.000000e-200) nounwind
  %1630 = call double @_Z4fmaxdd(double %extract3167.i, double 1.000000e-200) nounwind
  %1631 = call double @_Z4fmaxdd(double %extract3168.i, double 1.000000e-200) nounwind
  %1632 = call double @_Z4fmaxdd(double %extract3169.i, double 1.000000e-200) nounwind
  %1633 = call double @_Z5log10d(double %1617) nounwind
  %1634 = call double @_Z5log10d(double %1618) nounwind
  %1635 = call double @_Z5log10d(double %1619) nounwind
  %1636 = call double @_Z5log10d(double %1620) nounwind
  %1637 = call double @_Z5log10d(double %1621) nounwind
  %1638 = call double @_Z5log10d(double %1622) nounwind
  %1639 = call double @_Z5log10d(double %1623) nounwind
  %1640 = call double @_Z5log10d(double %1624) nounwind
  %1641 = call double @_Z5log10d(double %1625) nounwind
  %1642 = call double @_Z5log10d(double %1626) nounwind
  %1643 = call double @_Z5log10d(double %1627) nounwind
  %1644 = call double @_Z5log10d(double %1628) nounwind
  %1645 = call double @_Z5log10d(double %1629) nounwind
  %1646 = call double @_Z5log10d(double %1630) nounwind
  %1647 = call double @_Z5log10d(double %1631) nounwind
  %1648 = call double @_Z5log10d(double %1632) nounwind
  %temp.vect3170.i = insertelement <16 x double> undef, double %1633, i32 0
  %temp.vect3171.i = insertelement <16 x double> %temp.vect3170.i, double %1634, i32 1
  %temp.vect3172.i = insertelement <16 x double> %temp.vect3171.i, double %1635, i32 2
  %temp.vect3173.i = insertelement <16 x double> %temp.vect3172.i, double %1636, i32 3
  %temp.vect3174.i = insertelement <16 x double> %temp.vect3173.i, double %1637, i32 4
  %temp.vect3175.i = insertelement <16 x double> %temp.vect3174.i, double %1638, i32 5
  %temp.vect3176.i = insertelement <16 x double> %temp.vect3175.i, double %1639, i32 6
  %temp.vect3177.i = insertelement <16 x double> %temp.vect3176.i, double %1640, i32 7
  %temp.vect3178.i = insertelement <16 x double> %temp.vect3177.i, double %1641, i32 8
  %temp.vect3179.i = insertelement <16 x double> %temp.vect3178.i, double %1642, i32 9
  %temp.vect3180.i = insertelement <16 x double> %temp.vect3179.i, double %1643, i32 10
  %temp.vect3181.i = insertelement <16 x double> %temp.vect3180.i, double %1644, i32 11
  %temp.vect3182.i = insertelement <16 x double> %temp.vect3181.i, double %1645, i32 12
  %temp.vect3183.i = insertelement <16 x double> %temp.vect3182.i, double %1646, i32 13
  %temp.vect3184.i = insertelement <16 x double> %temp.vect3183.i, double %1647, i32 14
  %temp.vect3185.i = insertelement <16 x double> %temp.vect3184.i, double %1648, i32 15
  %1649 = fmul <16 x double> %temp.vect3185.i, <double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00>
  %1650 = fsub <16 x double> <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>, %1649
  %1651 = fmul <16 x double> %temp.vect3185.i, <double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01>
  %1652 = fadd <16 x double> %1651, <double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01>
  %1653 = fsub <16 x double> %temp.vect3201.i, %1652
  %1654 = fmul <16 x double> %1653, <double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01>
  %1655 = fsub <16 x double> %1650, %1654
  %1656 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1655
  %1657 = fmul <16 x double> %1653, %1656
  %1658 = fmul <16 x double> %1657, %1657
  %1659 = fadd <16 x double> %1658, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %1660 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1659
  %1661 = fmul <16 x double> %temp.vect3185.i, %1660
  %extract3202.i = extractelement <16 x double> %1661, i32 0
  %extract3203.i = extractelement <16 x double> %1661, i32 1
  %extract3204.i = extractelement <16 x double> %1661, i32 2
  %extract3205.i = extractelement <16 x double> %1661, i32 3
  %extract3206.i = extractelement <16 x double> %1661, i32 4
  %extract3207.i = extractelement <16 x double> %1661, i32 5
  %extract3208.i = extractelement <16 x double> %1661, i32 6
  %extract3209.i = extractelement <16 x double> %1661, i32 7
  %extract3210.i = extractelement <16 x double> %1661, i32 8
  %extract3211.i = extractelement <16 x double> %1661, i32 9
  %extract3212.i = extractelement <16 x double> %1661, i32 10
  %extract3213.i = extractelement <16 x double> %1661, i32 11
  %extract3214.i = extractelement <16 x double> %1661, i32 12
  %extract3215.i = extractelement <16 x double> %1661, i32 13
  %extract3216.i = extractelement <16 x double> %1661, i32 14
  %extract3217.i = extractelement <16 x double> %1661, i32 15
  %1662 = call double @_Z5exp10d(double %extract3202.i) nounwind
  %1663 = call double @_Z5exp10d(double %extract3203.i) nounwind
  %1664 = call double @_Z5exp10d(double %extract3204.i) nounwind
  %1665 = call double @_Z5exp10d(double %extract3205.i) nounwind
  %1666 = call double @_Z5exp10d(double %extract3206.i) nounwind
  %1667 = call double @_Z5exp10d(double %extract3207.i) nounwind
  %1668 = call double @_Z5exp10d(double %extract3208.i) nounwind
  %1669 = call double @_Z5exp10d(double %extract3209.i) nounwind
  %1670 = call double @_Z5exp10d(double %extract3210.i) nounwind
  %1671 = call double @_Z5exp10d(double %extract3211.i) nounwind
  %1672 = call double @_Z5exp10d(double %extract3212.i) nounwind
  %1673 = call double @_Z5exp10d(double %extract3213.i) nounwind
  %1674 = call double @_Z5exp10d(double %extract3214.i) nounwind
  %1675 = call double @_Z5exp10d(double %extract3215.i) nounwind
  %1676 = call double @_Z5exp10d(double %extract3216.i) nounwind
  %1677 = call double @_Z5exp10d(double %extract3217.i) nounwind
  %temp.vect3218.i = insertelement <16 x double> undef, double %1662, i32 0
  %temp.vect3219.i = insertelement <16 x double> %temp.vect3218.i, double %1663, i32 1
  %temp.vect3220.i = insertelement <16 x double> %temp.vect3219.i, double %1664, i32 2
  %temp.vect3221.i = insertelement <16 x double> %temp.vect3220.i, double %1665, i32 3
  %temp.vect3222.i = insertelement <16 x double> %temp.vect3221.i, double %1666, i32 4
  %temp.vect3223.i = insertelement <16 x double> %temp.vect3222.i, double %1667, i32 5
  %temp.vect3224.i = insertelement <16 x double> %temp.vect3223.i, double %1668, i32 6
  %temp.vect3225.i = insertelement <16 x double> %temp.vect3224.i, double %1669, i32 7
  %temp.vect3226.i = insertelement <16 x double> %temp.vect3225.i, double %1670, i32 8
  %temp.vect3227.i = insertelement <16 x double> %temp.vect3226.i, double %1671, i32 9
  %temp.vect3228.i = insertelement <16 x double> %temp.vect3227.i, double %1672, i32 10
  %temp.vect3229.i = insertelement <16 x double> %temp.vect3228.i, double %1673, i32 11
  %temp.vect3230.i = insertelement <16 x double> %temp.vect3229.i, double %1674, i32 12
  %temp.vect3231.i = insertelement <16 x double> %temp.vect3230.i, double %1675, i32 13
  %temp.vect3232.i = insertelement <16 x double> %temp.vect3231.i, double %1676, i32 14
  %temp.vect3233.i = insertelement <16 x double> %temp.vect3232.i, double %1677, i32 15
  %1678 = fmul <16 x double> %temp.vect3233.i, %1529
  %1679 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1680 = load i64* %1679, align 8
  %1681 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1682 = load i64* %1681, align 8
  %1683 = add i64 %1680, %1682
  %extract3236.i = add i64 %1683, 16257024
  %1684 = getelementptr inbounds double addrspace(1)* %7, i64 %extract3236.i
  %ptrTypeCast3252.i = bitcast double addrspace(1)* %1684 to <16 x double> addrspace(1)*
  %1685 = load <16 x double> addrspace(1)* %ptrTypeCast3252.i, align 8
  %1686 = fmul <16 x double> %1685, %1678
  %1687 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1688 = load i64* %1687, align 8
  %1689 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1690 = load i64* %1689, align 8
  %1691 = add i64 %1688, %1690
  %extract3255.i = add i64 %1691, 16257024
  %1692 = getelementptr inbounds double addrspace(1)* %7, i64 %extract3255.i
  %ptrTypeCast3271.i = bitcast double addrspace(1)* %1692 to <16 x double> addrspace(1)*
  store <16 x double> %1686, <16 x double> addrspace(1)* %ptrTypeCast3271.i, align 8
  %1693 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1694 = load i64* %1693, align 8
  %1695 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1696 = load i64* %1695, align 8
  %1697 = add i64 %1694, %1696
  %extract3274.i = add i64 %1697, 16257024
  %1698 = getelementptr inbounds double addrspace(1)* %10, i64 %extract3274.i
  %ptrTypeCast3290.i = bitcast double addrspace(1)* %1698 to <16 x double> addrspace(1)*
  %1699 = load <16 x double> addrspace(1)* %ptrTypeCast3290.i, align 8
  %1700 = fmul <16 x double> %1699, %1678
  %1701 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1702 = load i64* %1701, align 8
  %1703 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1704 = load i64* %1703, align 8
  %1705 = add i64 %1702, %1704
  %extract3293.i = add i64 %1705, 16257024
  %1706 = getelementptr inbounds double addrspace(1)* %10, i64 %extract3293.i
  %ptrTypeCast3309.i = bitcast double addrspace(1)* %1706 to <16 x double> addrspace(1)*
  store <16 x double> %1700, <16 x double> addrspace(1)* %ptrTypeCast3309.i, align 8
  %1707 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1708 = load i64* %1707, align 8
  %1709 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1710 = load i64* %1709, align 8
  %1711 = add i64 %1708, %1710
  %extract3312.i = add i64 %1711, 1769472
  %1712 = getelementptr inbounds double addrspace(1)* %13, i64 %extract3312.i
  %ptrTypeCast3328.i = bitcast double addrspace(1)* %1712 to <16 x double> addrspace(1)*
  %1713 = load <16 x double> addrspace(1)* %ptrTypeCast3328.i, align 8
  %1714 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1715 = load i64* %1714, align 8
  %1716 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1717 = load i64* %1716, align 8
  %1718 = add i64 %1715, %1717
  %extract3331.i = add i64 %1718, 17031168
  %1719 = getelementptr inbounds double addrspace(1)* %7, i64 %extract3331.i
  %ptrTypeCast3347.i = bitcast double addrspace(1)* %1719 to <16 x double> addrspace(1)*
  %1720 = load <16 x double> addrspace(1)* %ptrTypeCast3347.i, align 8
  %1721 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1720
  %1722 = fmul <16 x double> %239, %1721
  %1723 = fmul <16 x double> %1713, %1722
  %extract3348.i = extractelement <16 x double> %1723, i32 0
  %extract3349.i = extractelement <16 x double> %1723, i32 1
  %extract3350.i = extractelement <16 x double> %1723, i32 2
  %extract3351.i = extractelement <16 x double> %1723, i32 3
  %extract3352.i = extractelement <16 x double> %1723, i32 4
  %extract3353.i = extractelement <16 x double> %1723, i32 5
  %extract3354.i = extractelement <16 x double> %1723, i32 6
  %extract3355.i = extractelement <16 x double> %1723, i32 7
  %extract3356.i = extractelement <16 x double> %1723, i32 8
  %extract3357.i = extractelement <16 x double> %1723, i32 9
  %extract3358.i = extractelement <16 x double> %1723, i32 10
  %extract3359.i = extractelement <16 x double> %1723, i32 11
  %extract3360.i = extractelement <16 x double> %1723, i32 12
  %extract3361.i = extractelement <16 x double> %1723, i32 13
  %extract3362.i = extractelement <16 x double> %1723, i32 14
  %extract3363.i = extractelement <16 x double> %1723, i32 15
  %1724 = fadd <16 x double> %1723, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %1725 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1724
  %1726 = fmul <16 x double> %1723, %1725
  %1727 = call double @_Z4fmaxdd(double %extract3348.i, double 1.000000e-200) nounwind
  %1728 = call double @_Z4fmaxdd(double %extract3349.i, double 1.000000e-200) nounwind
  %1729 = call double @_Z4fmaxdd(double %extract3350.i, double 1.000000e-200) nounwind
  %1730 = call double @_Z4fmaxdd(double %extract3351.i, double 1.000000e-200) nounwind
  %1731 = call double @_Z4fmaxdd(double %extract3352.i, double 1.000000e-200) nounwind
  %1732 = call double @_Z4fmaxdd(double %extract3353.i, double 1.000000e-200) nounwind
  %1733 = call double @_Z4fmaxdd(double %extract3354.i, double 1.000000e-200) nounwind
  %1734 = call double @_Z4fmaxdd(double %extract3355.i, double 1.000000e-200) nounwind
  %1735 = call double @_Z4fmaxdd(double %extract3356.i, double 1.000000e-200) nounwind
  %1736 = call double @_Z4fmaxdd(double %extract3357.i, double 1.000000e-200) nounwind
  %1737 = call double @_Z4fmaxdd(double %extract3358.i, double 1.000000e-200) nounwind
  %1738 = call double @_Z4fmaxdd(double %extract3359.i, double 1.000000e-200) nounwind
  %1739 = call double @_Z4fmaxdd(double %extract3360.i, double 1.000000e-200) nounwind
  %1740 = call double @_Z4fmaxdd(double %extract3361.i, double 1.000000e-200) nounwind
  %1741 = call double @_Z4fmaxdd(double %extract3362.i, double 1.000000e-200) nounwind
  %1742 = call double @_Z4fmaxdd(double %extract3363.i, double 1.000000e-200) nounwind
  %1743 = call double @_Z5log10d(double %1727) nounwind
  %1744 = call double @_Z5log10d(double %1728) nounwind
  %1745 = call double @_Z5log10d(double %1729) nounwind
  %1746 = call double @_Z5log10d(double %1730) nounwind
  %1747 = call double @_Z5log10d(double %1731) nounwind
  %1748 = call double @_Z5log10d(double %1732) nounwind
  %1749 = call double @_Z5log10d(double %1733) nounwind
  %1750 = call double @_Z5log10d(double %1734) nounwind
  %1751 = call double @_Z5log10d(double %1735) nounwind
  %1752 = call double @_Z5log10d(double %1736) nounwind
  %1753 = call double @_Z5log10d(double %1737) nounwind
  %1754 = call double @_Z5log10d(double %1738) nounwind
  %1755 = call double @_Z5log10d(double %1739) nounwind
  %1756 = call double @_Z5log10d(double %1740) nounwind
  %1757 = call double @_Z5log10d(double %1741) nounwind
  %1758 = call double @_Z5log10d(double %1742) nounwind
  %temp.vect3492.i = insertelement <16 x double> undef, double %1743, i32 0
  %temp.vect3493.i = insertelement <16 x double> %temp.vect3492.i, double %1744, i32 1
  %temp.vect3494.i = insertelement <16 x double> %temp.vect3493.i, double %1745, i32 2
  %temp.vect3495.i = insertelement <16 x double> %temp.vect3494.i, double %1746, i32 3
  %temp.vect3496.i = insertelement <16 x double> %temp.vect3495.i, double %1747, i32 4
  %temp.vect3497.i = insertelement <16 x double> %temp.vect3496.i, double %1748, i32 5
  %temp.vect3498.i = insertelement <16 x double> %temp.vect3497.i, double %1749, i32 6
  %temp.vect3499.i = insertelement <16 x double> %temp.vect3498.i, double %1750, i32 7
  %temp.vect3500.i = insertelement <16 x double> %temp.vect3499.i, double %1751, i32 8
  %temp.vect3501.i = insertelement <16 x double> %temp.vect3500.i, double %1752, i32 9
  %temp.vect3502.i = insertelement <16 x double> %temp.vect3501.i, double %1753, i32 10
  %temp.vect3503.i = insertelement <16 x double> %temp.vect3502.i, double %1754, i32 11
  %temp.vect3504.i = insertelement <16 x double> %temp.vect3503.i, double %1755, i32 12
  %temp.vect3505.i = insertelement <16 x double> %temp.vect3504.i, double %1756, i32 13
  %temp.vect3506.i = insertelement <16 x double> %temp.vect3505.i, double %1757, i32 14
  %temp.vect3507.i = insertelement <16 x double> %temp.vect3506.i, double %1758, i32 15
  %1759 = fmul <16 x double> %33, <double 0xBF76C16C16C16C17, double 0xBF76C16C16C16C17, double 0xBF76C16C16C16C17, double 0xBF76C16C16C16C17, double 0xBF76C16C16C16C17, double 0xBF76C16C16C16C17, double 0xBF76C16C16C16C17, double 0xBF76C16C16C16C17, double 0xBF76C16C16C16C17, double 0xBF76C16C16C16C17, double 0xBF76C16C16C16C17, double 0xBF76C16C16C16C17, double 0xBF76C16C16C16C17, double 0xBF76C16C16C16C17, double 0xBF76C16C16C16C17, double 0xBF76C16C16C16C17>
  %extract3364.i = extractelement <16 x double> %1759, i32 0
  %extract3365.i = extractelement <16 x double> %1759, i32 1
  %extract3366.i = extractelement <16 x double> %1759, i32 2
  %extract3367.i = extractelement <16 x double> %1759, i32 3
  %extract3368.i = extractelement <16 x double> %1759, i32 4
  %extract3369.i = extractelement <16 x double> %1759, i32 5
  %extract3370.i = extractelement <16 x double> %1759, i32 6
  %extract3371.i = extractelement <16 x double> %1759, i32 7
  %extract3372.i = extractelement <16 x double> %1759, i32 8
  %extract3373.i = extractelement <16 x double> %1759, i32 9
  %extract3374.i = extractelement <16 x double> %1759, i32 10
  %extract3375.i = extractelement <16 x double> %1759, i32 11
  %extract3376.i = extractelement <16 x double> %1759, i32 12
  %extract3377.i = extractelement <16 x double> %1759, i32 13
  %extract3378.i = extractelement <16 x double> %1759, i32 14
  %extract3379.i = extractelement <16 x double> %1759, i32 15
  %1760 = call double @_Z3expd(double %extract3364.i) nounwind
  %1761 = call double @_Z3expd(double %extract3365.i) nounwind
  %1762 = call double @_Z3expd(double %extract3366.i) nounwind
  %1763 = call double @_Z3expd(double %extract3367.i) nounwind
  %1764 = call double @_Z3expd(double %extract3368.i) nounwind
  %1765 = call double @_Z3expd(double %extract3369.i) nounwind
  %1766 = call double @_Z3expd(double %extract3370.i) nounwind
  %1767 = call double @_Z3expd(double %extract3371.i) nounwind
  %1768 = call double @_Z3expd(double %extract3372.i) nounwind
  %1769 = call double @_Z3expd(double %extract3373.i) nounwind
  %1770 = call double @_Z3expd(double %extract3374.i) nounwind
  %1771 = call double @_Z3expd(double %extract3375.i) nounwind
  %1772 = call double @_Z3expd(double %extract3376.i) nounwind
  %1773 = call double @_Z3expd(double %extract3377.i) nounwind
  %1774 = call double @_Z3expd(double %extract3378.i) nounwind
  %1775 = call double @_Z3expd(double %extract3379.i) nounwind
  %temp.vect3380.i = insertelement <16 x double> undef, double %1760, i32 0
  %temp.vect3381.i = insertelement <16 x double> %temp.vect3380.i, double %1761, i32 1
  %temp.vect3382.i = insertelement <16 x double> %temp.vect3381.i, double %1762, i32 2
  %temp.vect3383.i = insertelement <16 x double> %temp.vect3382.i, double %1763, i32 3
  %temp.vect3384.i = insertelement <16 x double> %temp.vect3383.i, double %1764, i32 4
  %temp.vect3385.i = insertelement <16 x double> %temp.vect3384.i, double %1765, i32 5
  %temp.vect3386.i = insertelement <16 x double> %temp.vect3385.i, double %1766, i32 6
  %temp.vect3387.i = insertelement <16 x double> %temp.vect3386.i, double %1767, i32 7
  %temp.vect3388.i = insertelement <16 x double> %temp.vect3387.i, double %1768, i32 8
  %temp.vect3389.i = insertelement <16 x double> %temp.vect3388.i, double %1769, i32 9
  %temp.vect3390.i = insertelement <16 x double> %temp.vect3389.i, double %1770, i32 10
  %temp.vect3391.i = insertelement <16 x double> %temp.vect3390.i, double %1771, i32 11
  %temp.vect3392.i = insertelement <16 x double> %temp.vect3391.i, double %1772, i32 12
  %temp.vect3393.i = insertelement <16 x double> %temp.vect3392.i, double %1773, i32 13
  %temp.vect3394.i = insertelement <16 x double> %temp.vect3393.i, double %1774, i32 14
  %temp.vect3395.i = insertelement <16 x double> %temp.vect3394.i, double %1775, i32 15
  %1776 = fmul <16 x double> %temp.vect3395.i, <double 2.655000e-01, double 2.655000e-01, double 2.655000e-01, double 2.655000e-01, double 2.655000e-01, double 2.655000e-01, double 2.655000e-01, double 2.655000e-01, double 2.655000e-01, double 2.655000e-01, double 2.655000e-01, double 2.655000e-01, double 2.655000e-01, double 2.655000e-01, double 2.655000e-01, double 2.655000e-01>
  %1777 = fmul <16 x double> %33, <double 0xBF4FA8EF6D92ACA5, double 0xBF4FA8EF6D92ACA5, double 0xBF4FA8EF6D92ACA5, double 0xBF4FA8EF6D92ACA5, double 0xBF4FA8EF6D92ACA5, double 0xBF4FA8EF6D92ACA5, double 0xBF4FA8EF6D92ACA5, double 0xBF4FA8EF6D92ACA5, double 0xBF4FA8EF6D92ACA5, double 0xBF4FA8EF6D92ACA5, double 0xBF4FA8EF6D92ACA5, double 0xBF4FA8EF6D92ACA5, double 0xBF4FA8EF6D92ACA5, double 0xBF4FA8EF6D92ACA5, double 0xBF4FA8EF6D92ACA5, double 0xBF4FA8EF6D92ACA5>
  %extract3396.i = extractelement <16 x double> %1777, i32 0
  %extract3397.i = extractelement <16 x double> %1777, i32 1
  %extract3398.i = extractelement <16 x double> %1777, i32 2
  %extract3399.i = extractelement <16 x double> %1777, i32 3
  %extract3400.i = extractelement <16 x double> %1777, i32 4
  %extract3401.i = extractelement <16 x double> %1777, i32 5
  %extract3402.i = extractelement <16 x double> %1777, i32 6
  %extract3403.i = extractelement <16 x double> %1777, i32 7
  %extract3404.i = extractelement <16 x double> %1777, i32 8
  %extract3405.i = extractelement <16 x double> %1777, i32 9
  %extract3406.i = extractelement <16 x double> %1777, i32 10
  %extract3407.i = extractelement <16 x double> %1777, i32 11
  %extract3408.i = extractelement <16 x double> %1777, i32 12
  %extract3409.i = extractelement <16 x double> %1777, i32 13
  %extract3410.i = extractelement <16 x double> %1777, i32 14
  %extract3411.i = extractelement <16 x double> %1777, i32 15
  %1778 = call double @_Z3expd(double %extract3396.i) nounwind
  %1779 = call double @_Z3expd(double %extract3397.i) nounwind
  %1780 = call double @_Z3expd(double %extract3398.i) nounwind
  %1781 = call double @_Z3expd(double %extract3399.i) nounwind
  %1782 = call double @_Z3expd(double %extract3400.i) nounwind
  %1783 = call double @_Z3expd(double %extract3401.i) nounwind
  %1784 = call double @_Z3expd(double %extract3402.i) nounwind
  %1785 = call double @_Z3expd(double %extract3403.i) nounwind
  %1786 = call double @_Z3expd(double %extract3404.i) nounwind
  %1787 = call double @_Z3expd(double %extract3405.i) nounwind
  %1788 = call double @_Z3expd(double %extract3406.i) nounwind
  %1789 = call double @_Z3expd(double %extract3407.i) nounwind
  %1790 = call double @_Z3expd(double %extract3408.i) nounwind
  %1791 = call double @_Z3expd(double %extract3409.i) nounwind
  %1792 = call double @_Z3expd(double %extract3410.i) nounwind
  %1793 = call double @_Z3expd(double %extract3411.i) nounwind
  %temp.vect3412.i = insertelement <16 x double> undef, double %1778, i32 0
  %temp.vect3413.i = insertelement <16 x double> %temp.vect3412.i, double %1779, i32 1
  %temp.vect3414.i = insertelement <16 x double> %temp.vect3413.i, double %1780, i32 2
  %temp.vect3415.i = insertelement <16 x double> %temp.vect3414.i, double %1781, i32 3
  %temp.vect3416.i = insertelement <16 x double> %temp.vect3415.i, double %1782, i32 4
  %temp.vect3417.i = insertelement <16 x double> %temp.vect3416.i, double %1783, i32 5
  %temp.vect3418.i = insertelement <16 x double> %temp.vect3417.i, double %1784, i32 6
  %temp.vect3419.i = insertelement <16 x double> %temp.vect3418.i, double %1785, i32 7
  %temp.vect3420.i = insertelement <16 x double> %temp.vect3419.i, double %1786, i32 8
  %temp.vect3421.i = insertelement <16 x double> %temp.vect3420.i, double %1787, i32 9
  %temp.vect3422.i = insertelement <16 x double> %temp.vect3421.i, double %1788, i32 10
  %temp.vect3423.i = insertelement <16 x double> %temp.vect3422.i, double %1789, i32 11
  %temp.vect3424.i = insertelement <16 x double> %temp.vect3423.i, double %1790, i32 12
  %temp.vect3425.i = insertelement <16 x double> %temp.vect3424.i, double %1791, i32 13
  %temp.vect3426.i = insertelement <16 x double> %temp.vect3425.i, double %1792, i32 14
  %temp.vect3427.i = insertelement <16 x double> %temp.vect3426.i, double %1793, i32 15
  %1794 = fmul <16 x double> %temp.vect3427.i, <double 7.345000e-01, double 7.345000e-01, double 7.345000e-01, double 7.345000e-01, double 7.345000e-01, double 7.345000e-01, double 7.345000e-01, double 7.345000e-01, double 7.345000e-01, double 7.345000e-01, double 7.345000e-01, double 7.345000e-01, double 7.345000e-01, double 7.345000e-01, double 7.345000e-01, double 7.345000e-01>
  %1795 = fadd <16 x double> %1776, %1794
  %1796 = fmul <16 x double> %1007, <double -5.417000e+03, double -5.417000e+03, double -5.417000e+03, double -5.417000e+03, double -5.417000e+03, double -5.417000e+03, double -5.417000e+03, double -5.417000e+03, double -5.417000e+03, double -5.417000e+03, double -5.417000e+03, double -5.417000e+03, double -5.417000e+03, double -5.417000e+03, double -5.417000e+03, double -5.417000e+03>
  %extract3428.i = extractelement <16 x double> %1796, i32 0
  %extract3429.i = extractelement <16 x double> %1796, i32 1
  %extract3430.i = extractelement <16 x double> %1796, i32 2
  %extract3431.i = extractelement <16 x double> %1796, i32 3
  %extract3432.i = extractelement <16 x double> %1796, i32 4
  %extract3433.i = extractelement <16 x double> %1796, i32 5
  %extract3434.i = extractelement <16 x double> %1796, i32 6
  %extract3435.i = extractelement <16 x double> %1796, i32 7
  %extract3436.i = extractelement <16 x double> %1796, i32 8
  %extract3437.i = extractelement <16 x double> %1796, i32 9
  %extract3438.i = extractelement <16 x double> %1796, i32 10
  %extract3439.i = extractelement <16 x double> %1796, i32 11
  %extract3440.i = extractelement <16 x double> %1796, i32 12
  %extract3441.i = extractelement <16 x double> %1796, i32 13
  %extract3442.i = extractelement <16 x double> %1796, i32 14
  %extract3443.i = extractelement <16 x double> %1796, i32 15
  %1797 = call double @_Z3expd(double %extract3428.i) nounwind
  %1798 = call double @_Z3expd(double %extract3429.i) nounwind
  %1799 = call double @_Z3expd(double %extract3430.i) nounwind
  %1800 = call double @_Z3expd(double %extract3431.i) nounwind
  %1801 = call double @_Z3expd(double %extract3432.i) nounwind
  %1802 = call double @_Z3expd(double %extract3433.i) nounwind
  %1803 = call double @_Z3expd(double %extract3434.i) nounwind
  %1804 = call double @_Z3expd(double %extract3435.i) nounwind
  %1805 = call double @_Z3expd(double %extract3436.i) nounwind
  %1806 = call double @_Z3expd(double %extract3437.i) nounwind
  %1807 = call double @_Z3expd(double %extract3438.i) nounwind
  %1808 = call double @_Z3expd(double %extract3439.i) nounwind
  %1809 = call double @_Z3expd(double %extract3440.i) nounwind
  %1810 = call double @_Z3expd(double %extract3441.i) nounwind
  %1811 = call double @_Z3expd(double %extract3442.i) nounwind
  %1812 = call double @_Z3expd(double %extract3443.i) nounwind
  %temp.vect3444.i = insertelement <16 x double> undef, double %1797, i32 0
  %temp.vect3445.i = insertelement <16 x double> %temp.vect3444.i, double %1798, i32 1
  %temp.vect3446.i = insertelement <16 x double> %temp.vect3445.i, double %1799, i32 2
  %temp.vect3447.i = insertelement <16 x double> %temp.vect3446.i, double %1800, i32 3
  %temp.vect3448.i = insertelement <16 x double> %temp.vect3447.i, double %1801, i32 4
  %temp.vect3449.i = insertelement <16 x double> %temp.vect3448.i, double %1802, i32 5
  %temp.vect3450.i = insertelement <16 x double> %temp.vect3449.i, double %1803, i32 6
  %temp.vect3451.i = insertelement <16 x double> %temp.vect3450.i, double %1804, i32 7
  %temp.vect3452.i = insertelement <16 x double> %temp.vect3451.i, double %1805, i32 8
  %temp.vect3453.i = insertelement <16 x double> %temp.vect3452.i, double %1806, i32 9
  %temp.vect3454.i = insertelement <16 x double> %temp.vect3453.i, double %1807, i32 10
  %temp.vect3455.i = insertelement <16 x double> %temp.vect3454.i, double %1808, i32 11
  %temp.vect3456.i = insertelement <16 x double> %temp.vect3455.i, double %1809, i32 12
  %temp.vect3457.i = insertelement <16 x double> %temp.vect3456.i, double %1810, i32 13
  %temp.vect3458.i = insertelement <16 x double> %temp.vect3457.i, double %1811, i32 14
  %temp.vect3459.i = insertelement <16 x double> %temp.vect3458.i, double %1812, i32 15
  %1813 = fadd <16 x double> %1795, %temp.vect3459.i
  %extract3460.i = extractelement <16 x double> %1813, i32 0
  %extract3461.i = extractelement <16 x double> %1813, i32 1
  %extract3462.i = extractelement <16 x double> %1813, i32 2
  %extract3463.i = extractelement <16 x double> %1813, i32 3
  %extract3464.i = extractelement <16 x double> %1813, i32 4
  %extract3465.i = extractelement <16 x double> %1813, i32 5
  %extract3466.i = extractelement <16 x double> %1813, i32 6
  %extract3467.i = extractelement <16 x double> %1813, i32 7
  %extract3468.i = extractelement <16 x double> %1813, i32 8
  %extract3469.i = extractelement <16 x double> %1813, i32 9
  %extract3470.i = extractelement <16 x double> %1813, i32 10
  %extract3471.i = extractelement <16 x double> %1813, i32 11
  %extract3472.i = extractelement <16 x double> %1813, i32 12
  %extract3473.i = extractelement <16 x double> %1813, i32 13
  %extract3474.i = extractelement <16 x double> %1813, i32 14
  %extract3475.i = extractelement <16 x double> %1813, i32 15
  %1814 = call double @_Z4fmaxdd(double %extract3460.i, double 1.000000e-200) nounwind
  %1815 = call double @_Z4fmaxdd(double %extract3461.i, double 1.000000e-200) nounwind
  %1816 = call double @_Z4fmaxdd(double %extract3462.i, double 1.000000e-200) nounwind
  %1817 = call double @_Z4fmaxdd(double %extract3463.i, double 1.000000e-200) nounwind
  %1818 = call double @_Z4fmaxdd(double %extract3464.i, double 1.000000e-200) nounwind
  %1819 = call double @_Z4fmaxdd(double %extract3465.i, double 1.000000e-200) nounwind
  %1820 = call double @_Z4fmaxdd(double %extract3466.i, double 1.000000e-200) nounwind
  %1821 = call double @_Z4fmaxdd(double %extract3467.i, double 1.000000e-200) nounwind
  %1822 = call double @_Z4fmaxdd(double %extract3468.i, double 1.000000e-200) nounwind
  %1823 = call double @_Z4fmaxdd(double %extract3469.i, double 1.000000e-200) nounwind
  %1824 = call double @_Z4fmaxdd(double %extract3470.i, double 1.000000e-200) nounwind
  %1825 = call double @_Z4fmaxdd(double %extract3471.i, double 1.000000e-200) nounwind
  %1826 = call double @_Z4fmaxdd(double %extract3472.i, double 1.000000e-200) nounwind
  %1827 = call double @_Z4fmaxdd(double %extract3473.i, double 1.000000e-200) nounwind
  %1828 = call double @_Z4fmaxdd(double %extract3474.i, double 1.000000e-200) nounwind
  %1829 = call double @_Z4fmaxdd(double %extract3475.i, double 1.000000e-200) nounwind
  %1830 = call double @_Z5log10d(double %1814) nounwind
  %1831 = call double @_Z5log10d(double %1815) nounwind
  %1832 = call double @_Z5log10d(double %1816) nounwind
  %1833 = call double @_Z5log10d(double %1817) nounwind
  %1834 = call double @_Z5log10d(double %1818) nounwind
  %1835 = call double @_Z5log10d(double %1819) nounwind
  %1836 = call double @_Z5log10d(double %1820) nounwind
  %1837 = call double @_Z5log10d(double %1821) nounwind
  %1838 = call double @_Z5log10d(double %1822) nounwind
  %1839 = call double @_Z5log10d(double %1823) nounwind
  %1840 = call double @_Z5log10d(double %1824) nounwind
  %1841 = call double @_Z5log10d(double %1825) nounwind
  %1842 = call double @_Z5log10d(double %1826) nounwind
  %1843 = call double @_Z5log10d(double %1827) nounwind
  %1844 = call double @_Z5log10d(double %1828) nounwind
  %1845 = call double @_Z5log10d(double %1829) nounwind
  %temp.vect3476.i = insertelement <16 x double> undef, double %1830, i32 0
  %temp.vect3477.i = insertelement <16 x double> %temp.vect3476.i, double %1831, i32 1
  %temp.vect3478.i = insertelement <16 x double> %temp.vect3477.i, double %1832, i32 2
  %temp.vect3479.i = insertelement <16 x double> %temp.vect3478.i, double %1833, i32 3
  %temp.vect3480.i = insertelement <16 x double> %temp.vect3479.i, double %1834, i32 4
  %temp.vect3481.i = insertelement <16 x double> %temp.vect3480.i, double %1835, i32 5
  %temp.vect3482.i = insertelement <16 x double> %temp.vect3481.i, double %1836, i32 6
  %temp.vect3483.i = insertelement <16 x double> %temp.vect3482.i, double %1837, i32 7
  %temp.vect3484.i = insertelement <16 x double> %temp.vect3483.i, double %1838, i32 8
  %temp.vect3485.i = insertelement <16 x double> %temp.vect3484.i, double %1839, i32 9
  %temp.vect3486.i = insertelement <16 x double> %temp.vect3485.i, double %1840, i32 10
  %temp.vect3487.i = insertelement <16 x double> %temp.vect3486.i, double %1841, i32 11
  %temp.vect3488.i = insertelement <16 x double> %temp.vect3487.i, double %1842, i32 12
  %temp.vect3489.i = insertelement <16 x double> %temp.vect3488.i, double %1843, i32 13
  %temp.vect3490.i = insertelement <16 x double> %temp.vect3489.i, double %1844, i32 14
  %temp.vect3491.i = insertelement <16 x double> %temp.vect3490.i, double %1845, i32 15
  %1846 = fmul <16 x double> %temp.vect3491.i, <double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00>
  %1847 = fsub <16 x double> <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>, %1846
  %1848 = fmul <16 x double> %temp.vect3491.i, <double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01>
  %1849 = fadd <16 x double> %1848, <double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01>
  %1850 = fsub <16 x double> %temp.vect3507.i, %1849
  %1851 = fmul <16 x double> %1850, <double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01>
  %1852 = fsub <16 x double> %1847, %1851
  %1853 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1852
  %1854 = fmul <16 x double> %1850, %1853
  %1855 = fmul <16 x double> %1854, %1854
  %1856 = fadd <16 x double> %1855, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %1857 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1856
  %1858 = fmul <16 x double> %temp.vect3491.i, %1857
  %extract3508.i = extractelement <16 x double> %1858, i32 0
  %extract3509.i = extractelement <16 x double> %1858, i32 1
  %extract3510.i = extractelement <16 x double> %1858, i32 2
  %extract3511.i = extractelement <16 x double> %1858, i32 3
  %extract3512.i = extractelement <16 x double> %1858, i32 4
  %extract3513.i = extractelement <16 x double> %1858, i32 5
  %extract3514.i = extractelement <16 x double> %1858, i32 6
  %extract3515.i = extractelement <16 x double> %1858, i32 7
  %extract3516.i = extractelement <16 x double> %1858, i32 8
  %extract3517.i = extractelement <16 x double> %1858, i32 9
  %extract3518.i = extractelement <16 x double> %1858, i32 10
  %extract3519.i = extractelement <16 x double> %1858, i32 11
  %extract3520.i = extractelement <16 x double> %1858, i32 12
  %extract3521.i = extractelement <16 x double> %1858, i32 13
  %extract3522.i = extractelement <16 x double> %1858, i32 14
  %extract3523.i = extractelement <16 x double> %1858, i32 15
  %1859 = call double @_Z5exp10d(double %extract3508.i) nounwind
  %1860 = call double @_Z5exp10d(double %extract3509.i) nounwind
  %1861 = call double @_Z5exp10d(double %extract3510.i) nounwind
  %1862 = call double @_Z5exp10d(double %extract3511.i) nounwind
  %1863 = call double @_Z5exp10d(double %extract3512.i) nounwind
  %1864 = call double @_Z5exp10d(double %extract3513.i) nounwind
  %1865 = call double @_Z5exp10d(double %extract3514.i) nounwind
  %1866 = call double @_Z5exp10d(double %extract3515.i) nounwind
  %1867 = call double @_Z5exp10d(double %extract3516.i) nounwind
  %1868 = call double @_Z5exp10d(double %extract3517.i) nounwind
  %1869 = call double @_Z5exp10d(double %extract3518.i) nounwind
  %1870 = call double @_Z5exp10d(double %extract3519.i) nounwind
  %1871 = call double @_Z5exp10d(double %extract3520.i) nounwind
  %1872 = call double @_Z5exp10d(double %extract3521.i) nounwind
  %1873 = call double @_Z5exp10d(double %extract3522.i) nounwind
  %1874 = call double @_Z5exp10d(double %extract3523.i) nounwind
  %temp.vect3524.i = insertelement <16 x double> undef, double %1859, i32 0
  %temp.vect3525.i = insertelement <16 x double> %temp.vect3524.i, double %1860, i32 1
  %temp.vect3526.i = insertelement <16 x double> %temp.vect3525.i, double %1861, i32 2
  %temp.vect3527.i = insertelement <16 x double> %temp.vect3526.i, double %1862, i32 3
  %temp.vect3528.i = insertelement <16 x double> %temp.vect3527.i, double %1863, i32 4
  %temp.vect3529.i = insertelement <16 x double> %temp.vect3528.i, double %1864, i32 5
  %temp.vect3530.i = insertelement <16 x double> %temp.vect3529.i, double %1865, i32 6
  %temp.vect3531.i = insertelement <16 x double> %temp.vect3530.i, double %1866, i32 7
  %temp.vect3532.i = insertelement <16 x double> %temp.vect3531.i, double %1867, i32 8
  %temp.vect3533.i = insertelement <16 x double> %temp.vect3532.i, double %1868, i32 9
  %temp.vect3534.i = insertelement <16 x double> %temp.vect3533.i, double %1869, i32 10
  %temp.vect3535.i = insertelement <16 x double> %temp.vect3534.i, double %1870, i32 11
  %temp.vect3536.i = insertelement <16 x double> %temp.vect3535.i, double %1871, i32 12
  %temp.vect3537.i = insertelement <16 x double> %temp.vect3536.i, double %1872, i32 13
  %temp.vect3538.i = insertelement <16 x double> %temp.vect3537.i, double %1873, i32 14
  %temp.vect3539.i = insertelement <16 x double> %temp.vect3538.i, double %1874, i32 15
  %1875 = fmul <16 x double> %temp.vect3539.i, %1726
  %1876 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1877 = load i64* %1876, align 8
  %1878 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1879 = load i64* %1878, align 8
  %1880 = add i64 %1877, %1879
  %extract3542.i = add i64 %1880, 17031168
  %1881 = getelementptr inbounds double addrspace(1)* %7, i64 %extract3542.i
  %ptrTypeCast3558.i = bitcast double addrspace(1)* %1881 to <16 x double> addrspace(1)*
  %1882 = load <16 x double> addrspace(1)* %ptrTypeCast3558.i, align 8
  %1883 = fmul <16 x double> %1882, %1875
  %1884 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1885 = load i64* %1884, align 8
  %1886 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1887 = load i64* %1886, align 8
  %1888 = add i64 %1885, %1887
  %extract3561.i = add i64 %1888, 17031168
  %1889 = getelementptr inbounds double addrspace(1)* %7, i64 %extract3561.i
  %ptrTypeCast3577.i = bitcast double addrspace(1)* %1889 to <16 x double> addrspace(1)*
  store <16 x double> %1883, <16 x double> addrspace(1)* %ptrTypeCast3577.i, align 8
  %1890 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1891 = load i64* %1890, align 8
  %1892 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1893 = load i64* %1892, align 8
  %1894 = add i64 %1891, %1893
  %extract3580.i = add i64 %1894, 17031168
  %1895 = getelementptr inbounds double addrspace(1)* %10, i64 %extract3580.i
  %ptrTypeCast3596.i = bitcast double addrspace(1)* %1895 to <16 x double> addrspace(1)*
  %1896 = load <16 x double> addrspace(1)* %ptrTypeCast3596.i, align 8
  %1897 = fmul <16 x double> %1896, %1875
  %1898 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1899 = load i64* %1898, align 8
  %1900 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1901 = load i64* %1900, align 8
  %1902 = add i64 %1899, %1901
  %extract3599.i = add i64 %1902, 17031168
  %1903 = getelementptr inbounds double addrspace(1)* %10, i64 %extract3599.i
  %ptrTypeCast3615.i = bitcast double addrspace(1)* %1903 to <16 x double> addrspace(1)*
  store <16 x double> %1897, <16 x double> addrspace(1)* %ptrTypeCast3615.i, align 8
  %1904 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1905 = load i64* %1904, align 8
  %1906 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1907 = load i64* %1906, align 8
  %1908 = add i64 %1905, %1907
  %extract3618.i = add i64 %1908, 1880064
  %1909 = getelementptr inbounds double addrspace(1)* %13, i64 %extract3618.i
  %ptrTypeCast3634.i = bitcast double addrspace(1)* %1909 to <16 x double> addrspace(1)*
  %1910 = load <16 x double> addrspace(1)* %ptrTypeCast3634.i, align 8
  %1911 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1912 = load i64* %1911, align 8
  %1913 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1914 = load i64* %1913, align 8
  %1915 = add i64 %1912, %1914
  %extract3637.i = add i64 %1915, 17141760
  %1916 = getelementptr inbounds double addrspace(1)* %7, i64 %extract3637.i
  %ptrTypeCast3653.i = bitcast double addrspace(1)* %1916 to <16 x double> addrspace(1)*
  %1917 = load <16 x double> addrspace(1)* %ptrTypeCast3653.i, align 8
  %1918 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1917
  %1919 = fmul <16 x double> %239, %1918
  %1920 = fmul <16 x double> %1910, %1919
  %extract3654.i = extractelement <16 x double> %1920, i32 0
  %extract3655.i = extractelement <16 x double> %1920, i32 1
  %extract3656.i = extractelement <16 x double> %1920, i32 2
  %extract3657.i = extractelement <16 x double> %1920, i32 3
  %extract3658.i = extractelement <16 x double> %1920, i32 4
  %extract3659.i = extractelement <16 x double> %1920, i32 5
  %extract3660.i = extractelement <16 x double> %1920, i32 6
  %extract3661.i = extractelement <16 x double> %1920, i32 7
  %extract3662.i = extractelement <16 x double> %1920, i32 8
  %extract3663.i = extractelement <16 x double> %1920, i32 9
  %extract3664.i = extractelement <16 x double> %1920, i32 10
  %extract3665.i = extractelement <16 x double> %1920, i32 11
  %extract3666.i = extractelement <16 x double> %1920, i32 12
  %extract3667.i = extractelement <16 x double> %1920, i32 13
  %extract3668.i = extractelement <16 x double> %1920, i32 14
  %extract3669.i = extractelement <16 x double> %1920, i32 15
  %1921 = fadd <16 x double> %1920, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %1922 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1921
  %1923 = fmul <16 x double> %1920, %1922
  %1924 = call double @_Z4fmaxdd(double %extract3654.i, double 1.000000e-200) nounwind
  %1925 = call double @_Z4fmaxdd(double %extract3655.i, double 1.000000e-200) nounwind
  %1926 = call double @_Z4fmaxdd(double %extract3656.i, double 1.000000e-200) nounwind
  %1927 = call double @_Z4fmaxdd(double %extract3657.i, double 1.000000e-200) nounwind
  %1928 = call double @_Z4fmaxdd(double %extract3658.i, double 1.000000e-200) nounwind
  %1929 = call double @_Z4fmaxdd(double %extract3659.i, double 1.000000e-200) nounwind
  %1930 = call double @_Z4fmaxdd(double %extract3660.i, double 1.000000e-200) nounwind
  %1931 = call double @_Z4fmaxdd(double %extract3661.i, double 1.000000e-200) nounwind
  %1932 = call double @_Z4fmaxdd(double %extract3662.i, double 1.000000e-200) nounwind
  %1933 = call double @_Z4fmaxdd(double %extract3663.i, double 1.000000e-200) nounwind
  %1934 = call double @_Z4fmaxdd(double %extract3664.i, double 1.000000e-200) nounwind
  %1935 = call double @_Z4fmaxdd(double %extract3665.i, double 1.000000e-200) nounwind
  %1936 = call double @_Z4fmaxdd(double %extract3666.i, double 1.000000e-200) nounwind
  %1937 = call double @_Z4fmaxdd(double %extract3667.i, double 1.000000e-200) nounwind
  %1938 = call double @_Z4fmaxdd(double %extract3668.i, double 1.000000e-200) nounwind
  %1939 = call double @_Z4fmaxdd(double %extract3669.i, double 1.000000e-200) nounwind
  %1940 = call double @_Z5log10d(double %1924) nounwind
  %1941 = call double @_Z5log10d(double %1925) nounwind
  %1942 = call double @_Z5log10d(double %1926) nounwind
  %1943 = call double @_Z5log10d(double %1927) nounwind
  %1944 = call double @_Z5log10d(double %1928) nounwind
  %1945 = call double @_Z5log10d(double %1929) nounwind
  %1946 = call double @_Z5log10d(double %1930) nounwind
  %1947 = call double @_Z5log10d(double %1931) nounwind
  %1948 = call double @_Z5log10d(double %1932) nounwind
  %1949 = call double @_Z5log10d(double %1933) nounwind
  %1950 = call double @_Z5log10d(double %1934) nounwind
  %1951 = call double @_Z5log10d(double %1935) nounwind
  %1952 = call double @_Z5log10d(double %1936) nounwind
  %1953 = call double @_Z5log10d(double %1937) nounwind
  %1954 = call double @_Z5log10d(double %1938) nounwind
  %1955 = call double @_Z5log10d(double %1939) nounwind
  %temp.vect3798.i = insertelement <16 x double> undef, double %1940, i32 0
  %temp.vect3799.i = insertelement <16 x double> %temp.vect3798.i, double %1941, i32 1
  %temp.vect3800.i = insertelement <16 x double> %temp.vect3799.i, double %1942, i32 2
  %temp.vect3801.i = insertelement <16 x double> %temp.vect3800.i, double %1943, i32 3
  %temp.vect3802.i = insertelement <16 x double> %temp.vect3801.i, double %1944, i32 4
  %temp.vect3803.i = insertelement <16 x double> %temp.vect3802.i, double %1945, i32 5
  %temp.vect3804.i = insertelement <16 x double> %temp.vect3803.i, double %1946, i32 6
  %temp.vect3805.i = insertelement <16 x double> %temp.vect3804.i, double %1947, i32 7
  %temp.vect3806.i = insertelement <16 x double> %temp.vect3805.i, double %1948, i32 8
  %temp.vect3807.i = insertelement <16 x double> %temp.vect3806.i, double %1949, i32 9
  %temp.vect3808.i = insertelement <16 x double> %temp.vect3807.i, double %1950, i32 10
  %temp.vect3809.i = insertelement <16 x double> %temp.vect3808.i, double %1951, i32 11
  %temp.vect3810.i = insertelement <16 x double> %temp.vect3809.i, double %1952, i32 12
  %temp.vect3811.i = insertelement <16 x double> %temp.vect3810.i, double %1953, i32 13
  %temp.vect3812.i = insertelement <16 x double> %temp.vect3811.i, double %1954, i32 14
  %temp.vect3813.i = insertelement <16 x double> %temp.vect3812.i, double %1955, i32 15
  %1956 = fmul <16 x double> %33, <double 0xBF73813813813814, double 0xBF73813813813814, double 0xBF73813813813814, double 0xBF73813813813814, double 0xBF73813813813814, double 0xBF73813813813814, double 0xBF73813813813814, double 0xBF73813813813814, double 0xBF73813813813814, double 0xBF73813813813814, double 0xBF73813813813814, double 0xBF73813813813814, double 0xBF73813813813814, double 0xBF73813813813814, double 0xBF73813813813814, double 0xBF73813813813814>
  %extract3670.i = extractelement <16 x double> %1956, i32 0
  %extract3671.i = extractelement <16 x double> %1956, i32 1
  %extract3672.i = extractelement <16 x double> %1956, i32 2
  %extract3673.i = extractelement <16 x double> %1956, i32 3
  %extract3674.i = extractelement <16 x double> %1956, i32 4
  %extract3675.i = extractelement <16 x double> %1956, i32 5
  %extract3676.i = extractelement <16 x double> %1956, i32 6
  %extract3677.i = extractelement <16 x double> %1956, i32 7
  %extract3678.i = extractelement <16 x double> %1956, i32 8
  %extract3679.i = extractelement <16 x double> %1956, i32 9
  %extract3680.i = extractelement <16 x double> %1956, i32 10
  %extract3681.i = extractelement <16 x double> %1956, i32 11
  %extract3682.i = extractelement <16 x double> %1956, i32 12
  %extract3683.i = extractelement <16 x double> %1956, i32 13
  %extract3684.i = extractelement <16 x double> %1956, i32 14
  %extract3685.i = extractelement <16 x double> %1956, i32 15
  %1957 = call double @_Z3expd(double %extract3670.i) nounwind
  %1958 = call double @_Z3expd(double %extract3671.i) nounwind
  %1959 = call double @_Z3expd(double %extract3672.i) nounwind
  %1960 = call double @_Z3expd(double %extract3673.i) nounwind
  %1961 = call double @_Z3expd(double %extract3674.i) nounwind
  %1962 = call double @_Z3expd(double %extract3675.i) nounwind
  %1963 = call double @_Z3expd(double %extract3676.i) nounwind
  %1964 = call double @_Z3expd(double %extract3677.i) nounwind
  %1965 = call double @_Z3expd(double %extract3678.i) nounwind
  %1966 = call double @_Z3expd(double %extract3679.i) nounwind
  %1967 = call double @_Z3expd(double %extract3680.i) nounwind
  %1968 = call double @_Z3expd(double %extract3681.i) nounwind
  %1969 = call double @_Z3expd(double %extract3682.i) nounwind
  %1970 = call double @_Z3expd(double %extract3683.i) nounwind
  %1971 = call double @_Z3expd(double %extract3684.i) nounwind
  %1972 = call double @_Z3expd(double %extract3685.i) nounwind
  %temp.vect3686.i = insertelement <16 x double> undef, double %1957, i32 0
  %temp.vect3687.i = insertelement <16 x double> %temp.vect3686.i, double %1958, i32 1
  %temp.vect3688.i = insertelement <16 x double> %temp.vect3687.i, double %1959, i32 2
  %temp.vect3689.i = insertelement <16 x double> %temp.vect3688.i, double %1960, i32 3
  %temp.vect3690.i = insertelement <16 x double> %temp.vect3689.i, double %1961, i32 4
  %temp.vect3691.i = insertelement <16 x double> %temp.vect3690.i, double %1962, i32 5
  %temp.vect3692.i = insertelement <16 x double> %temp.vect3691.i, double %1963, i32 6
  %temp.vect3693.i = insertelement <16 x double> %temp.vect3692.i, double %1964, i32 7
  %temp.vect3694.i = insertelement <16 x double> %temp.vect3693.i, double %1965, i32 8
  %temp.vect3695.i = insertelement <16 x double> %temp.vect3694.i, double %1966, i32 9
  %temp.vect3696.i = insertelement <16 x double> %temp.vect3695.i, double %1967, i32 10
  %temp.vect3697.i = insertelement <16 x double> %temp.vect3696.i, double %1968, i32 11
  %temp.vect3698.i = insertelement <16 x double> %temp.vect3697.i, double %1969, i32 12
  %temp.vect3699.i = insertelement <16 x double> %temp.vect3698.i, double %1970, i32 13
  %temp.vect3700.i = insertelement <16 x double> %temp.vect3699.i, double %1971, i32 14
  %temp.vect3701.i = insertelement <16 x double> %temp.vect3700.i, double %1972, i32 15
  %1973 = fmul <16 x double> %temp.vect3701.i, <double 2.470000e-02, double 2.470000e-02, double 2.470000e-02, double 2.470000e-02, double 2.470000e-02, double 2.470000e-02, double 2.470000e-02, double 2.470000e-02, double 2.470000e-02, double 2.470000e-02, double 2.470000e-02, double 2.470000e-02, double 2.470000e-02, double 2.470000e-02, double 2.470000e-02, double 2.470000e-02>
  %1974 = fmul <16 x double> %33, <double 0xBF50A6810A6810A7, double 0xBF50A6810A6810A7, double 0xBF50A6810A6810A7, double 0xBF50A6810A6810A7, double 0xBF50A6810A6810A7, double 0xBF50A6810A6810A7, double 0xBF50A6810A6810A7, double 0xBF50A6810A6810A7, double 0xBF50A6810A6810A7, double 0xBF50A6810A6810A7, double 0xBF50A6810A6810A7, double 0xBF50A6810A6810A7, double 0xBF50A6810A6810A7, double 0xBF50A6810A6810A7, double 0xBF50A6810A6810A7, double 0xBF50A6810A6810A7>
  %extract3702.i = extractelement <16 x double> %1974, i32 0
  %extract3703.i = extractelement <16 x double> %1974, i32 1
  %extract3704.i = extractelement <16 x double> %1974, i32 2
  %extract3705.i = extractelement <16 x double> %1974, i32 3
  %extract3706.i = extractelement <16 x double> %1974, i32 4
  %extract3707.i = extractelement <16 x double> %1974, i32 5
  %extract3708.i = extractelement <16 x double> %1974, i32 6
  %extract3709.i = extractelement <16 x double> %1974, i32 7
  %extract3710.i = extractelement <16 x double> %1974, i32 8
  %extract3711.i = extractelement <16 x double> %1974, i32 9
  %extract3712.i = extractelement <16 x double> %1974, i32 10
  %extract3713.i = extractelement <16 x double> %1974, i32 11
  %extract3714.i = extractelement <16 x double> %1974, i32 12
  %extract3715.i = extractelement <16 x double> %1974, i32 13
  %extract3716.i = extractelement <16 x double> %1974, i32 14
  %extract3717.i = extractelement <16 x double> %1974, i32 15
  %1975 = call double @_Z3expd(double %extract3702.i) nounwind
  %1976 = call double @_Z3expd(double %extract3703.i) nounwind
  %1977 = call double @_Z3expd(double %extract3704.i) nounwind
  %1978 = call double @_Z3expd(double %extract3705.i) nounwind
  %1979 = call double @_Z3expd(double %extract3706.i) nounwind
  %1980 = call double @_Z3expd(double %extract3707.i) nounwind
  %1981 = call double @_Z3expd(double %extract3708.i) nounwind
  %1982 = call double @_Z3expd(double %extract3709.i) nounwind
  %1983 = call double @_Z3expd(double %extract3710.i) nounwind
  %1984 = call double @_Z3expd(double %extract3711.i) nounwind
  %1985 = call double @_Z3expd(double %extract3712.i) nounwind
  %1986 = call double @_Z3expd(double %extract3713.i) nounwind
  %1987 = call double @_Z3expd(double %extract3714.i) nounwind
  %1988 = call double @_Z3expd(double %extract3715.i) nounwind
  %1989 = call double @_Z3expd(double %extract3716.i) nounwind
  %1990 = call double @_Z3expd(double %extract3717.i) nounwind
  %temp.vect3718.i = insertelement <16 x double> undef, double %1975, i32 0
  %temp.vect3719.i = insertelement <16 x double> %temp.vect3718.i, double %1976, i32 1
  %temp.vect3720.i = insertelement <16 x double> %temp.vect3719.i, double %1977, i32 2
  %temp.vect3721.i = insertelement <16 x double> %temp.vect3720.i, double %1978, i32 3
  %temp.vect3722.i = insertelement <16 x double> %temp.vect3721.i, double %1979, i32 4
  %temp.vect3723.i = insertelement <16 x double> %temp.vect3722.i, double %1980, i32 5
  %temp.vect3724.i = insertelement <16 x double> %temp.vect3723.i, double %1981, i32 6
  %temp.vect3725.i = insertelement <16 x double> %temp.vect3724.i, double %1982, i32 7
  %temp.vect3726.i = insertelement <16 x double> %temp.vect3725.i, double %1983, i32 8
  %temp.vect3727.i = insertelement <16 x double> %temp.vect3726.i, double %1984, i32 9
  %temp.vect3728.i = insertelement <16 x double> %temp.vect3727.i, double %1985, i32 10
  %temp.vect3729.i = insertelement <16 x double> %temp.vect3728.i, double %1986, i32 11
  %temp.vect3730.i = insertelement <16 x double> %temp.vect3729.i, double %1987, i32 12
  %temp.vect3731.i = insertelement <16 x double> %temp.vect3730.i, double %1988, i32 13
  %temp.vect3732.i = insertelement <16 x double> %temp.vect3731.i, double %1989, i32 14
  %temp.vect3733.i = insertelement <16 x double> %temp.vect3732.i, double %1990, i32 15
  %1991 = fmul <16 x double> %temp.vect3733.i, <double 9.753000e-01, double 9.753000e-01, double 9.753000e-01, double 9.753000e-01, double 9.753000e-01, double 9.753000e-01, double 9.753000e-01, double 9.753000e-01, double 9.753000e-01, double 9.753000e-01, double 9.753000e-01, double 9.753000e-01, double 9.753000e-01, double 9.753000e-01, double 9.753000e-01, double 9.753000e-01>
  %1992 = fadd <16 x double> %1973, %1991
  %1993 = fmul <16 x double> %1007, <double -4.374000e+03, double -4.374000e+03, double -4.374000e+03, double -4.374000e+03, double -4.374000e+03, double -4.374000e+03, double -4.374000e+03, double -4.374000e+03, double -4.374000e+03, double -4.374000e+03, double -4.374000e+03, double -4.374000e+03, double -4.374000e+03, double -4.374000e+03, double -4.374000e+03, double -4.374000e+03>
  %extract3734.i = extractelement <16 x double> %1993, i32 0
  %extract3735.i = extractelement <16 x double> %1993, i32 1
  %extract3736.i = extractelement <16 x double> %1993, i32 2
  %extract3737.i = extractelement <16 x double> %1993, i32 3
  %extract3738.i = extractelement <16 x double> %1993, i32 4
  %extract3739.i = extractelement <16 x double> %1993, i32 5
  %extract3740.i = extractelement <16 x double> %1993, i32 6
  %extract3741.i = extractelement <16 x double> %1993, i32 7
  %extract3742.i = extractelement <16 x double> %1993, i32 8
  %extract3743.i = extractelement <16 x double> %1993, i32 9
  %extract3744.i = extractelement <16 x double> %1993, i32 10
  %extract3745.i = extractelement <16 x double> %1993, i32 11
  %extract3746.i = extractelement <16 x double> %1993, i32 12
  %extract3747.i = extractelement <16 x double> %1993, i32 13
  %extract3748.i = extractelement <16 x double> %1993, i32 14
  %extract3749.i = extractelement <16 x double> %1993, i32 15
  %1994 = call double @_Z3expd(double %extract3734.i) nounwind
  %1995 = call double @_Z3expd(double %extract3735.i) nounwind
  %1996 = call double @_Z3expd(double %extract3736.i) nounwind
  %1997 = call double @_Z3expd(double %extract3737.i) nounwind
  %1998 = call double @_Z3expd(double %extract3738.i) nounwind
  %1999 = call double @_Z3expd(double %extract3739.i) nounwind
  %2000 = call double @_Z3expd(double %extract3740.i) nounwind
  %2001 = call double @_Z3expd(double %extract3741.i) nounwind
  %2002 = call double @_Z3expd(double %extract3742.i) nounwind
  %2003 = call double @_Z3expd(double %extract3743.i) nounwind
  %2004 = call double @_Z3expd(double %extract3744.i) nounwind
  %2005 = call double @_Z3expd(double %extract3745.i) nounwind
  %2006 = call double @_Z3expd(double %extract3746.i) nounwind
  %2007 = call double @_Z3expd(double %extract3747.i) nounwind
  %2008 = call double @_Z3expd(double %extract3748.i) nounwind
  %2009 = call double @_Z3expd(double %extract3749.i) nounwind
  %temp.vect3750.i = insertelement <16 x double> undef, double %1994, i32 0
  %temp.vect3751.i = insertelement <16 x double> %temp.vect3750.i, double %1995, i32 1
  %temp.vect3752.i = insertelement <16 x double> %temp.vect3751.i, double %1996, i32 2
  %temp.vect3753.i = insertelement <16 x double> %temp.vect3752.i, double %1997, i32 3
  %temp.vect3754.i = insertelement <16 x double> %temp.vect3753.i, double %1998, i32 4
  %temp.vect3755.i = insertelement <16 x double> %temp.vect3754.i, double %1999, i32 5
  %temp.vect3756.i = insertelement <16 x double> %temp.vect3755.i, double %2000, i32 6
  %temp.vect3757.i = insertelement <16 x double> %temp.vect3756.i, double %2001, i32 7
  %temp.vect3758.i = insertelement <16 x double> %temp.vect3757.i, double %2002, i32 8
  %temp.vect3759.i = insertelement <16 x double> %temp.vect3758.i, double %2003, i32 9
  %temp.vect3760.i = insertelement <16 x double> %temp.vect3759.i, double %2004, i32 10
  %temp.vect3761.i = insertelement <16 x double> %temp.vect3760.i, double %2005, i32 11
  %temp.vect3762.i = insertelement <16 x double> %temp.vect3761.i, double %2006, i32 12
  %temp.vect3763.i = insertelement <16 x double> %temp.vect3762.i, double %2007, i32 13
  %temp.vect3764.i = insertelement <16 x double> %temp.vect3763.i, double %2008, i32 14
  %temp.vect3765.i = insertelement <16 x double> %temp.vect3764.i, double %2009, i32 15
  %2010 = fadd <16 x double> %1992, %temp.vect3765.i
  %extract3766.i = extractelement <16 x double> %2010, i32 0
  %extract3767.i = extractelement <16 x double> %2010, i32 1
  %extract3768.i = extractelement <16 x double> %2010, i32 2
  %extract3769.i = extractelement <16 x double> %2010, i32 3
  %extract3770.i = extractelement <16 x double> %2010, i32 4
  %extract3771.i = extractelement <16 x double> %2010, i32 5
  %extract3772.i = extractelement <16 x double> %2010, i32 6
  %extract3773.i = extractelement <16 x double> %2010, i32 7
  %extract3774.i = extractelement <16 x double> %2010, i32 8
  %extract3775.i = extractelement <16 x double> %2010, i32 9
  %extract3776.i = extractelement <16 x double> %2010, i32 10
  %extract3777.i = extractelement <16 x double> %2010, i32 11
  %extract3778.i = extractelement <16 x double> %2010, i32 12
  %extract3779.i = extractelement <16 x double> %2010, i32 13
  %extract3780.i = extractelement <16 x double> %2010, i32 14
  %extract3781.i = extractelement <16 x double> %2010, i32 15
  %2011 = call double @_Z4fmaxdd(double %extract3766.i, double 1.000000e-200) nounwind
  %2012 = call double @_Z4fmaxdd(double %extract3767.i, double 1.000000e-200) nounwind
  %2013 = call double @_Z4fmaxdd(double %extract3768.i, double 1.000000e-200) nounwind
  %2014 = call double @_Z4fmaxdd(double %extract3769.i, double 1.000000e-200) nounwind
  %2015 = call double @_Z4fmaxdd(double %extract3770.i, double 1.000000e-200) nounwind
  %2016 = call double @_Z4fmaxdd(double %extract3771.i, double 1.000000e-200) nounwind
  %2017 = call double @_Z4fmaxdd(double %extract3772.i, double 1.000000e-200) nounwind
  %2018 = call double @_Z4fmaxdd(double %extract3773.i, double 1.000000e-200) nounwind
  %2019 = call double @_Z4fmaxdd(double %extract3774.i, double 1.000000e-200) nounwind
  %2020 = call double @_Z4fmaxdd(double %extract3775.i, double 1.000000e-200) nounwind
  %2021 = call double @_Z4fmaxdd(double %extract3776.i, double 1.000000e-200) nounwind
  %2022 = call double @_Z4fmaxdd(double %extract3777.i, double 1.000000e-200) nounwind
  %2023 = call double @_Z4fmaxdd(double %extract3778.i, double 1.000000e-200) nounwind
  %2024 = call double @_Z4fmaxdd(double %extract3779.i, double 1.000000e-200) nounwind
  %2025 = call double @_Z4fmaxdd(double %extract3780.i, double 1.000000e-200) nounwind
  %2026 = call double @_Z4fmaxdd(double %extract3781.i, double 1.000000e-200) nounwind
  %2027 = call double @_Z5log10d(double %2011) nounwind
  %2028 = call double @_Z5log10d(double %2012) nounwind
  %2029 = call double @_Z5log10d(double %2013) nounwind
  %2030 = call double @_Z5log10d(double %2014) nounwind
  %2031 = call double @_Z5log10d(double %2015) nounwind
  %2032 = call double @_Z5log10d(double %2016) nounwind
  %2033 = call double @_Z5log10d(double %2017) nounwind
  %2034 = call double @_Z5log10d(double %2018) nounwind
  %2035 = call double @_Z5log10d(double %2019) nounwind
  %2036 = call double @_Z5log10d(double %2020) nounwind
  %2037 = call double @_Z5log10d(double %2021) nounwind
  %2038 = call double @_Z5log10d(double %2022) nounwind
  %2039 = call double @_Z5log10d(double %2023) nounwind
  %2040 = call double @_Z5log10d(double %2024) nounwind
  %2041 = call double @_Z5log10d(double %2025) nounwind
  %2042 = call double @_Z5log10d(double %2026) nounwind
  %temp.vect3782.i = insertelement <16 x double> undef, double %2027, i32 0
  %temp.vect3783.i = insertelement <16 x double> %temp.vect3782.i, double %2028, i32 1
  %temp.vect3784.i = insertelement <16 x double> %temp.vect3783.i, double %2029, i32 2
  %temp.vect3785.i = insertelement <16 x double> %temp.vect3784.i, double %2030, i32 3
  %temp.vect3786.i = insertelement <16 x double> %temp.vect3785.i, double %2031, i32 4
  %temp.vect3787.i = insertelement <16 x double> %temp.vect3786.i, double %2032, i32 5
  %temp.vect3788.i = insertelement <16 x double> %temp.vect3787.i, double %2033, i32 6
  %temp.vect3789.i = insertelement <16 x double> %temp.vect3788.i, double %2034, i32 7
  %temp.vect3790.i = insertelement <16 x double> %temp.vect3789.i, double %2035, i32 8
  %temp.vect3791.i = insertelement <16 x double> %temp.vect3790.i, double %2036, i32 9
  %temp.vect3792.i = insertelement <16 x double> %temp.vect3791.i, double %2037, i32 10
  %temp.vect3793.i = insertelement <16 x double> %temp.vect3792.i, double %2038, i32 11
  %temp.vect3794.i = insertelement <16 x double> %temp.vect3793.i, double %2039, i32 12
  %temp.vect3795.i = insertelement <16 x double> %temp.vect3794.i, double %2040, i32 13
  %temp.vect3796.i = insertelement <16 x double> %temp.vect3795.i, double %2041, i32 14
  %temp.vect3797.i = insertelement <16 x double> %temp.vect3796.i, double %2042, i32 15
  %2043 = fmul <16 x double> %temp.vect3797.i, <double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00>
  %2044 = fsub <16 x double> <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>, %2043
  %2045 = fmul <16 x double> %temp.vect3797.i, <double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01>
  %2046 = fadd <16 x double> %2045, <double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01>
  %2047 = fsub <16 x double> %temp.vect3813.i, %2046
  %2048 = fmul <16 x double> %2047, <double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01>
  %2049 = fsub <16 x double> %2044, %2048
  %2050 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2049
  %2051 = fmul <16 x double> %2047, %2050
  %2052 = fmul <16 x double> %2051, %2051
  %2053 = fadd <16 x double> %2052, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %2054 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2053
  %2055 = fmul <16 x double> %temp.vect3797.i, %2054
  %extract3814.i = extractelement <16 x double> %2055, i32 0
  %extract3815.i = extractelement <16 x double> %2055, i32 1
  %extract3816.i = extractelement <16 x double> %2055, i32 2
  %extract3817.i = extractelement <16 x double> %2055, i32 3
  %extract3818.i = extractelement <16 x double> %2055, i32 4
  %extract3819.i = extractelement <16 x double> %2055, i32 5
  %extract3820.i = extractelement <16 x double> %2055, i32 6
  %extract3821.i = extractelement <16 x double> %2055, i32 7
  %extract3822.i = extractelement <16 x double> %2055, i32 8
  %extract3823.i = extractelement <16 x double> %2055, i32 9
  %extract3824.i = extractelement <16 x double> %2055, i32 10
  %extract3825.i = extractelement <16 x double> %2055, i32 11
  %extract3826.i = extractelement <16 x double> %2055, i32 12
  %extract3827.i = extractelement <16 x double> %2055, i32 13
  %extract3828.i = extractelement <16 x double> %2055, i32 14
  %extract3829.i = extractelement <16 x double> %2055, i32 15
  %2056 = call double @_Z5exp10d(double %extract3814.i) nounwind
  %2057 = call double @_Z5exp10d(double %extract3815.i) nounwind
  %2058 = call double @_Z5exp10d(double %extract3816.i) nounwind
  %2059 = call double @_Z5exp10d(double %extract3817.i) nounwind
  %2060 = call double @_Z5exp10d(double %extract3818.i) nounwind
  %2061 = call double @_Z5exp10d(double %extract3819.i) nounwind
  %2062 = call double @_Z5exp10d(double %extract3820.i) nounwind
  %2063 = call double @_Z5exp10d(double %extract3821.i) nounwind
  %2064 = call double @_Z5exp10d(double %extract3822.i) nounwind
  %2065 = call double @_Z5exp10d(double %extract3823.i) nounwind
  %2066 = call double @_Z5exp10d(double %extract3824.i) nounwind
  %2067 = call double @_Z5exp10d(double %extract3825.i) nounwind
  %2068 = call double @_Z5exp10d(double %extract3826.i) nounwind
  %2069 = call double @_Z5exp10d(double %extract3827.i) nounwind
  %2070 = call double @_Z5exp10d(double %extract3828.i) nounwind
  %2071 = call double @_Z5exp10d(double %extract3829.i) nounwind
  %temp.vect3830.i = insertelement <16 x double> undef, double %2056, i32 0
  %temp.vect3831.i = insertelement <16 x double> %temp.vect3830.i, double %2057, i32 1
  %temp.vect3832.i = insertelement <16 x double> %temp.vect3831.i, double %2058, i32 2
  %temp.vect3833.i = insertelement <16 x double> %temp.vect3832.i, double %2059, i32 3
  %temp.vect3834.i = insertelement <16 x double> %temp.vect3833.i, double %2060, i32 4
  %temp.vect3835.i = insertelement <16 x double> %temp.vect3834.i, double %2061, i32 5
  %temp.vect3836.i = insertelement <16 x double> %temp.vect3835.i, double %2062, i32 6
  %temp.vect3837.i = insertelement <16 x double> %temp.vect3836.i, double %2063, i32 7
  %temp.vect3838.i = insertelement <16 x double> %temp.vect3837.i, double %2064, i32 8
  %temp.vect3839.i = insertelement <16 x double> %temp.vect3838.i, double %2065, i32 9
  %temp.vect3840.i = insertelement <16 x double> %temp.vect3839.i, double %2066, i32 10
  %temp.vect3841.i = insertelement <16 x double> %temp.vect3840.i, double %2067, i32 11
  %temp.vect3842.i = insertelement <16 x double> %temp.vect3841.i, double %2068, i32 12
  %temp.vect3843.i = insertelement <16 x double> %temp.vect3842.i, double %2069, i32 13
  %temp.vect3844.i = insertelement <16 x double> %temp.vect3843.i, double %2070, i32 14
  %temp.vect3845.i = insertelement <16 x double> %temp.vect3844.i, double %2071, i32 15
  %2072 = fmul <16 x double> %temp.vect3845.i, %1923
  %2073 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2074 = load i64* %2073, align 8
  %2075 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2076 = load i64* %2075, align 8
  %2077 = add i64 %2074, %2076
  %extract3848.i = add i64 %2077, 17141760
  %2078 = getelementptr inbounds double addrspace(1)* %7, i64 %extract3848.i
  %ptrTypeCast3864.i = bitcast double addrspace(1)* %2078 to <16 x double> addrspace(1)*
  %2079 = load <16 x double> addrspace(1)* %ptrTypeCast3864.i, align 8
  %2080 = fmul <16 x double> %2079, %2072
  %2081 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2082 = load i64* %2081, align 8
  %2083 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2084 = load i64* %2083, align 8
  %2085 = add i64 %2082, %2084
  %extract3867.i = add i64 %2085, 17141760
  %2086 = getelementptr inbounds double addrspace(1)* %7, i64 %extract3867.i
  %ptrTypeCast3883.i = bitcast double addrspace(1)* %2086 to <16 x double> addrspace(1)*
  store <16 x double> %2080, <16 x double> addrspace(1)* %ptrTypeCast3883.i, align 8
  %2087 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2088 = load i64* %2087, align 8
  %2089 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2090 = load i64* %2089, align 8
  %2091 = add i64 %2088, %2090
  %extract3886.i = add i64 %2091, 17141760
  %2092 = getelementptr inbounds double addrspace(1)* %10, i64 %extract3886.i
  %ptrTypeCast3902.i = bitcast double addrspace(1)* %2092 to <16 x double> addrspace(1)*
  %2093 = load <16 x double> addrspace(1)* %ptrTypeCast3902.i, align 8
  %2094 = fmul <16 x double> %2093, %2072
  %2095 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2096 = load i64* %2095, align 8
  %2097 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2098 = load i64* %2097, align 8
  %2099 = add i64 %2096, %2098
  %extract3905.i = add i64 %2099, 17141760
  %2100 = getelementptr inbounds double addrspace(1)* %10, i64 %extract3905.i
  %ptrTypeCast3921.i = bitcast double addrspace(1)* %2100 to <16 x double> addrspace(1)*
  store <16 x double> %2094, <16 x double> addrspace(1)* %ptrTypeCast3921.i, align 8
  %2101 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2102 = load i64* %2101, align 8
  %2103 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2104 = load i64* %2103, align 8
  %2105 = add i64 %2102, %2104
  %extract3924.i = add i64 %2105, 1990656
  %2106 = getelementptr inbounds double addrspace(1)* %13, i64 %extract3924.i
  %ptrTypeCast3940.i = bitcast double addrspace(1)* %2106 to <16 x double> addrspace(1)*
  %2107 = load <16 x double> addrspace(1)* %ptrTypeCast3940.i, align 8
  %2108 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2109 = load i64* %2108, align 8
  %2110 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2111 = load i64* %2110, align 8
  %2112 = add i64 %2109, %2111
  %extract3943.i = add i64 %2112, 18690048
  %2113 = getelementptr inbounds double addrspace(1)* %7, i64 %extract3943.i
  %ptrTypeCast3959.i = bitcast double addrspace(1)* %2113 to <16 x double> addrspace(1)*
  %2114 = load <16 x double> addrspace(1)* %ptrTypeCast3959.i, align 8
  %2115 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2114
  %2116 = fmul <16 x double> %239, %2115
  %2117 = fmul <16 x double> %2107, %2116
  %extract3960.i = extractelement <16 x double> %2117, i32 0
  %extract3961.i = extractelement <16 x double> %2117, i32 1
  %extract3962.i = extractelement <16 x double> %2117, i32 2
  %extract3963.i = extractelement <16 x double> %2117, i32 3
  %extract3964.i = extractelement <16 x double> %2117, i32 4
  %extract3965.i = extractelement <16 x double> %2117, i32 5
  %extract3966.i = extractelement <16 x double> %2117, i32 6
  %extract3967.i = extractelement <16 x double> %2117, i32 7
  %extract3968.i = extractelement <16 x double> %2117, i32 8
  %extract3969.i = extractelement <16 x double> %2117, i32 9
  %extract3970.i = extractelement <16 x double> %2117, i32 10
  %extract3971.i = extractelement <16 x double> %2117, i32 11
  %extract3972.i = extractelement <16 x double> %2117, i32 12
  %extract3973.i = extractelement <16 x double> %2117, i32 13
  %extract3974.i = extractelement <16 x double> %2117, i32 14
  %extract3975.i = extractelement <16 x double> %2117, i32 15
  %2118 = fadd <16 x double> %2117, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %2119 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2118
  %2120 = fmul <16 x double> %2117, %2119
  %2121 = call double @_Z4fmaxdd(double %extract3960.i, double 1.000000e-200) nounwind
  %2122 = call double @_Z4fmaxdd(double %extract3961.i, double 1.000000e-200) nounwind
  %2123 = call double @_Z4fmaxdd(double %extract3962.i, double 1.000000e-200) nounwind
  %2124 = call double @_Z4fmaxdd(double %extract3963.i, double 1.000000e-200) nounwind
  %2125 = call double @_Z4fmaxdd(double %extract3964.i, double 1.000000e-200) nounwind
  %2126 = call double @_Z4fmaxdd(double %extract3965.i, double 1.000000e-200) nounwind
  %2127 = call double @_Z4fmaxdd(double %extract3966.i, double 1.000000e-200) nounwind
  %2128 = call double @_Z4fmaxdd(double %extract3967.i, double 1.000000e-200) nounwind
  %2129 = call double @_Z4fmaxdd(double %extract3968.i, double 1.000000e-200) nounwind
  %2130 = call double @_Z4fmaxdd(double %extract3969.i, double 1.000000e-200) nounwind
  %2131 = call double @_Z4fmaxdd(double %extract3970.i, double 1.000000e-200) nounwind
  %2132 = call double @_Z4fmaxdd(double %extract3971.i, double 1.000000e-200) nounwind
  %2133 = call double @_Z4fmaxdd(double %extract3972.i, double 1.000000e-200) nounwind
  %2134 = call double @_Z4fmaxdd(double %extract3973.i, double 1.000000e-200) nounwind
  %2135 = call double @_Z4fmaxdd(double %extract3974.i, double 1.000000e-200) nounwind
  %2136 = call double @_Z4fmaxdd(double %extract3975.i, double 1.000000e-200) nounwind
  %2137 = call double @_Z5log10d(double %2121) nounwind
  %2138 = call double @_Z5log10d(double %2122) nounwind
  %2139 = call double @_Z5log10d(double %2123) nounwind
  %2140 = call double @_Z5log10d(double %2124) nounwind
  %2141 = call double @_Z5log10d(double %2125) nounwind
  %2142 = call double @_Z5log10d(double %2126) nounwind
  %2143 = call double @_Z5log10d(double %2127) nounwind
  %2144 = call double @_Z5log10d(double %2128) nounwind
  %2145 = call double @_Z5log10d(double %2129) nounwind
  %2146 = call double @_Z5log10d(double %2130) nounwind
  %2147 = call double @_Z5log10d(double %2131) nounwind
  %2148 = call double @_Z5log10d(double %2132) nounwind
  %2149 = call double @_Z5log10d(double %2133) nounwind
  %2150 = call double @_Z5log10d(double %2134) nounwind
  %2151 = call double @_Z5log10d(double %2135) nounwind
  %2152 = call double @_Z5log10d(double %2136) nounwind
  %temp.vect4104.i = insertelement <16 x double> undef, double %2137, i32 0
  %temp.vect4105.i = insertelement <16 x double> %temp.vect4104.i, double %2138, i32 1
  %temp.vect4106.i = insertelement <16 x double> %temp.vect4105.i, double %2139, i32 2
  %temp.vect4107.i = insertelement <16 x double> %temp.vect4106.i, double %2140, i32 3
  %temp.vect4108.i = insertelement <16 x double> %temp.vect4107.i, double %2141, i32 4
  %temp.vect4109.i = insertelement <16 x double> %temp.vect4108.i, double %2142, i32 5
  %temp.vect4110.i = insertelement <16 x double> %temp.vect4109.i, double %2143, i32 6
  %temp.vect4111.i = insertelement <16 x double> %temp.vect4110.i, double %2144, i32 7
  %temp.vect4112.i = insertelement <16 x double> %temp.vect4111.i, double %2145, i32 8
  %temp.vect4113.i = insertelement <16 x double> %temp.vect4112.i, double %2146, i32 9
  %temp.vect4114.i = insertelement <16 x double> %temp.vect4113.i, double %2147, i32 10
  %temp.vect4115.i = insertelement <16 x double> %temp.vect4114.i, double %2148, i32 11
  %temp.vect4116.i = insertelement <16 x double> %temp.vect4115.i, double %2149, i32 12
  %temp.vect4117.i = insertelement <16 x double> %temp.vect4116.i, double %2150, i32 13
  %temp.vect4118.i = insertelement <16 x double> %temp.vect4117.i, double %2151, i32 14
  %temp.vect4119.i = insertelement <16 x double> %temp.vect4118.i, double %2152, i32 15
  %2153 = fmul <16 x double> %33, <double -8.000000e-03, double -8.000000e-03, double -8.000000e-03, double -8.000000e-03, double -8.000000e-03, double -8.000000e-03, double -8.000000e-03, double -8.000000e-03, double -8.000000e-03, double -8.000000e-03, double -8.000000e-03, double -8.000000e-03, double -8.000000e-03, double -8.000000e-03, double -8.000000e-03, double -8.000000e-03>
  %extract3976.i = extractelement <16 x double> %2153, i32 0
  %extract3977.i = extractelement <16 x double> %2153, i32 1
  %extract3978.i = extractelement <16 x double> %2153, i32 2
  %extract3979.i = extractelement <16 x double> %2153, i32 3
  %extract3980.i = extractelement <16 x double> %2153, i32 4
  %extract3981.i = extractelement <16 x double> %2153, i32 5
  %extract3982.i = extractelement <16 x double> %2153, i32 6
  %extract3983.i = extractelement <16 x double> %2153, i32 7
  %extract3984.i = extractelement <16 x double> %2153, i32 8
  %extract3985.i = extractelement <16 x double> %2153, i32 9
  %extract3986.i = extractelement <16 x double> %2153, i32 10
  %extract3987.i = extractelement <16 x double> %2153, i32 11
  %extract3988.i = extractelement <16 x double> %2153, i32 12
  %extract3989.i = extractelement <16 x double> %2153, i32 13
  %extract3990.i = extractelement <16 x double> %2153, i32 14
  %extract3991.i = extractelement <16 x double> %2153, i32 15
  %2154 = call double @_Z3expd(double %extract3976.i) nounwind
  %2155 = call double @_Z3expd(double %extract3977.i) nounwind
  %2156 = call double @_Z3expd(double %extract3978.i) nounwind
  %2157 = call double @_Z3expd(double %extract3979.i) nounwind
  %2158 = call double @_Z3expd(double %extract3980.i) nounwind
  %2159 = call double @_Z3expd(double %extract3981.i) nounwind
  %2160 = call double @_Z3expd(double %extract3982.i) nounwind
  %2161 = call double @_Z3expd(double %extract3983.i) nounwind
  %2162 = call double @_Z3expd(double %extract3984.i) nounwind
  %2163 = call double @_Z3expd(double %extract3985.i) nounwind
  %2164 = call double @_Z3expd(double %extract3986.i) nounwind
  %2165 = call double @_Z3expd(double %extract3987.i) nounwind
  %2166 = call double @_Z3expd(double %extract3988.i) nounwind
  %2167 = call double @_Z3expd(double %extract3989.i) nounwind
  %2168 = call double @_Z3expd(double %extract3990.i) nounwind
  %2169 = call double @_Z3expd(double %extract3991.i) nounwind
  %temp.vect3992.i = insertelement <16 x double> undef, double %2154, i32 0
  %temp.vect3993.i = insertelement <16 x double> %temp.vect3992.i, double %2155, i32 1
  %temp.vect3994.i = insertelement <16 x double> %temp.vect3993.i, double %2156, i32 2
  %temp.vect3995.i = insertelement <16 x double> %temp.vect3994.i, double %2157, i32 3
  %temp.vect3996.i = insertelement <16 x double> %temp.vect3995.i, double %2158, i32 4
  %temp.vect3997.i = insertelement <16 x double> %temp.vect3996.i, double %2159, i32 5
  %temp.vect3998.i = insertelement <16 x double> %temp.vect3997.i, double %2160, i32 6
  %temp.vect3999.i = insertelement <16 x double> %temp.vect3998.i, double %2161, i32 7
  %temp.vect4000.i = insertelement <16 x double> %temp.vect3999.i, double %2162, i32 8
  %temp.vect4001.i = insertelement <16 x double> %temp.vect4000.i, double %2163, i32 9
  %temp.vect4002.i = insertelement <16 x double> %temp.vect4001.i, double %2164, i32 10
  %temp.vect4003.i = insertelement <16 x double> %temp.vect4002.i, double %2165, i32 11
  %temp.vect4004.i = insertelement <16 x double> %temp.vect4003.i, double %2166, i32 12
  %temp.vect4005.i = insertelement <16 x double> %temp.vect4004.i, double %2167, i32 13
  %temp.vect4006.i = insertelement <16 x double> %temp.vect4005.i, double %2168, i32 14
  %temp.vect4007.i = insertelement <16 x double> %temp.vect4006.i, double %2169, i32 15
  %2170 = fmul <16 x double> %temp.vect4007.i, <double 1.578000e-01, double 1.578000e-01, double 1.578000e-01, double 1.578000e-01, double 1.578000e-01, double 1.578000e-01, double 1.578000e-01, double 1.578000e-01, double 1.578000e-01, double 1.578000e-01, double 1.578000e-01, double 1.578000e-01, double 1.578000e-01, double 1.578000e-01, double 1.578000e-01, double 1.578000e-01>
  %2171 = fmul <16 x double> %33, <double 0xBF3D88B5D19F527D, double 0xBF3D88B5D19F527D, double 0xBF3D88B5D19F527D, double 0xBF3D88B5D19F527D, double 0xBF3D88B5D19F527D, double 0xBF3D88B5D19F527D, double 0xBF3D88B5D19F527D, double 0xBF3D88B5D19F527D, double 0xBF3D88B5D19F527D, double 0xBF3D88B5D19F527D, double 0xBF3D88B5D19F527D, double 0xBF3D88B5D19F527D, double 0xBF3D88B5D19F527D, double 0xBF3D88B5D19F527D, double 0xBF3D88B5D19F527D, double 0xBF3D88B5D19F527D>
  %extract4008.i = extractelement <16 x double> %2171, i32 0
  %extract4009.i = extractelement <16 x double> %2171, i32 1
  %extract4010.i = extractelement <16 x double> %2171, i32 2
  %extract4011.i = extractelement <16 x double> %2171, i32 3
  %extract4012.i = extractelement <16 x double> %2171, i32 4
  %extract4013.i = extractelement <16 x double> %2171, i32 5
  %extract4014.i = extractelement <16 x double> %2171, i32 6
  %extract4015.i = extractelement <16 x double> %2171, i32 7
  %extract4016.i = extractelement <16 x double> %2171, i32 8
  %extract4017.i = extractelement <16 x double> %2171, i32 9
  %extract4018.i = extractelement <16 x double> %2171, i32 10
  %extract4019.i = extractelement <16 x double> %2171, i32 11
  %extract4020.i = extractelement <16 x double> %2171, i32 12
  %extract4021.i = extractelement <16 x double> %2171, i32 13
  %extract4022.i = extractelement <16 x double> %2171, i32 14
  %extract4023.i = extractelement <16 x double> %2171, i32 15
  %2172 = call double @_Z3expd(double %extract4008.i) nounwind
  %2173 = call double @_Z3expd(double %extract4009.i) nounwind
  %2174 = call double @_Z3expd(double %extract4010.i) nounwind
  %2175 = call double @_Z3expd(double %extract4011.i) nounwind
  %2176 = call double @_Z3expd(double %extract4012.i) nounwind
  %2177 = call double @_Z3expd(double %extract4013.i) nounwind
  %2178 = call double @_Z3expd(double %extract4014.i) nounwind
  %2179 = call double @_Z3expd(double %extract4015.i) nounwind
  %2180 = call double @_Z3expd(double %extract4016.i) nounwind
  %2181 = call double @_Z3expd(double %extract4017.i) nounwind
  %2182 = call double @_Z3expd(double %extract4018.i) nounwind
  %2183 = call double @_Z3expd(double %extract4019.i) nounwind
  %2184 = call double @_Z3expd(double %extract4020.i) nounwind
  %2185 = call double @_Z3expd(double %extract4021.i) nounwind
  %2186 = call double @_Z3expd(double %extract4022.i) nounwind
  %2187 = call double @_Z3expd(double %extract4023.i) nounwind
  %temp.vect4024.i = insertelement <16 x double> undef, double %2172, i32 0
  %temp.vect4025.i = insertelement <16 x double> %temp.vect4024.i, double %2173, i32 1
  %temp.vect4026.i = insertelement <16 x double> %temp.vect4025.i, double %2174, i32 2
  %temp.vect4027.i = insertelement <16 x double> %temp.vect4026.i, double %2175, i32 3
  %temp.vect4028.i = insertelement <16 x double> %temp.vect4027.i, double %2176, i32 4
  %temp.vect4029.i = insertelement <16 x double> %temp.vect4028.i, double %2177, i32 5
  %temp.vect4030.i = insertelement <16 x double> %temp.vect4029.i, double %2178, i32 6
  %temp.vect4031.i = insertelement <16 x double> %temp.vect4030.i, double %2179, i32 7
  %temp.vect4032.i = insertelement <16 x double> %temp.vect4031.i, double %2180, i32 8
  %temp.vect4033.i = insertelement <16 x double> %temp.vect4032.i, double %2181, i32 9
  %temp.vect4034.i = insertelement <16 x double> %temp.vect4033.i, double %2182, i32 10
  %temp.vect4035.i = insertelement <16 x double> %temp.vect4034.i, double %2183, i32 11
  %temp.vect4036.i = insertelement <16 x double> %temp.vect4035.i, double %2184, i32 12
  %temp.vect4037.i = insertelement <16 x double> %temp.vect4036.i, double %2185, i32 13
  %temp.vect4038.i = insertelement <16 x double> %temp.vect4037.i, double %2186, i32 14
  %temp.vect4039.i = insertelement <16 x double> %temp.vect4038.i, double %2187, i32 15
  %2188 = fmul <16 x double> %temp.vect4039.i, <double 8.422000e-01, double 8.422000e-01, double 8.422000e-01, double 8.422000e-01, double 8.422000e-01, double 8.422000e-01, double 8.422000e-01, double 8.422000e-01, double 8.422000e-01, double 8.422000e-01, double 8.422000e-01, double 8.422000e-01, double 8.422000e-01, double 8.422000e-01, double 8.422000e-01, double 8.422000e-01>
  %2189 = fadd <16 x double> %2170, %2188
  %2190 = fmul <16 x double> %1007, <double -6.882000e+03, double -6.882000e+03, double -6.882000e+03, double -6.882000e+03, double -6.882000e+03, double -6.882000e+03, double -6.882000e+03, double -6.882000e+03, double -6.882000e+03, double -6.882000e+03, double -6.882000e+03, double -6.882000e+03, double -6.882000e+03, double -6.882000e+03, double -6.882000e+03, double -6.882000e+03>
  %extract4040.i = extractelement <16 x double> %2190, i32 0
  %extract4041.i = extractelement <16 x double> %2190, i32 1
  %extract4042.i = extractelement <16 x double> %2190, i32 2
  %extract4043.i = extractelement <16 x double> %2190, i32 3
  %extract4044.i = extractelement <16 x double> %2190, i32 4
  %extract4045.i = extractelement <16 x double> %2190, i32 5
  %extract4046.i = extractelement <16 x double> %2190, i32 6
  %extract4047.i = extractelement <16 x double> %2190, i32 7
  %extract4048.i = extractelement <16 x double> %2190, i32 8
  %extract4049.i = extractelement <16 x double> %2190, i32 9
  %extract4050.i = extractelement <16 x double> %2190, i32 10
  %extract4051.i = extractelement <16 x double> %2190, i32 11
  %extract4052.i = extractelement <16 x double> %2190, i32 12
  %extract4053.i = extractelement <16 x double> %2190, i32 13
  %extract4054.i = extractelement <16 x double> %2190, i32 14
  %extract4055.i = extractelement <16 x double> %2190, i32 15
  %2191 = call double @_Z3expd(double %extract4040.i) nounwind
  %2192 = call double @_Z3expd(double %extract4041.i) nounwind
  %2193 = call double @_Z3expd(double %extract4042.i) nounwind
  %2194 = call double @_Z3expd(double %extract4043.i) nounwind
  %2195 = call double @_Z3expd(double %extract4044.i) nounwind
  %2196 = call double @_Z3expd(double %extract4045.i) nounwind
  %2197 = call double @_Z3expd(double %extract4046.i) nounwind
  %2198 = call double @_Z3expd(double %extract4047.i) nounwind
  %2199 = call double @_Z3expd(double %extract4048.i) nounwind
  %2200 = call double @_Z3expd(double %extract4049.i) nounwind
  %2201 = call double @_Z3expd(double %extract4050.i) nounwind
  %2202 = call double @_Z3expd(double %extract4051.i) nounwind
  %2203 = call double @_Z3expd(double %extract4052.i) nounwind
  %2204 = call double @_Z3expd(double %extract4053.i) nounwind
  %2205 = call double @_Z3expd(double %extract4054.i) nounwind
  %2206 = call double @_Z3expd(double %extract4055.i) nounwind
  %temp.vect4056.i = insertelement <16 x double> undef, double %2191, i32 0
  %temp.vect4057.i = insertelement <16 x double> %temp.vect4056.i, double %2192, i32 1
  %temp.vect4058.i = insertelement <16 x double> %temp.vect4057.i, double %2193, i32 2
  %temp.vect4059.i = insertelement <16 x double> %temp.vect4058.i, double %2194, i32 3
  %temp.vect4060.i = insertelement <16 x double> %temp.vect4059.i, double %2195, i32 4
  %temp.vect4061.i = insertelement <16 x double> %temp.vect4060.i, double %2196, i32 5
  %temp.vect4062.i = insertelement <16 x double> %temp.vect4061.i, double %2197, i32 6
  %temp.vect4063.i = insertelement <16 x double> %temp.vect4062.i, double %2198, i32 7
  %temp.vect4064.i = insertelement <16 x double> %temp.vect4063.i, double %2199, i32 8
  %temp.vect4065.i = insertelement <16 x double> %temp.vect4064.i, double %2200, i32 9
  %temp.vect4066.i = insertelement <16 x double> %temp.vect4065.i, double %2201, i32 10
  %temp.vect4067.i = insertelement <16 x double> %temp.vect4066.i, double %2202, i32 11
  %temp.vect4068.i = insertelement <16 x double> %temp.vect4067.i, double %2203, i32 12
  %temp.vect4069.i = insertelement <16 x double> %temp.vect4068.i, double %2204, i32 13
  %temp.vect4070.i = insertelement <16 x double> %temp.vect4069.i, double %2205, i32 14
  %temp.vect4071.i = insertelement <16 x double> %temp.vect4070.i, double %2206, i32 15
  %2207 = fadd <16 x double> %2189, %temp.vect4071.i
  %extract4072.i = extractelement <16 x double> %2207, i32 0
  %extract4073.i = extractelement <16 x double> %2207, i32 1
  %extract4074.i = extractelement <16 x double> %2207, i32 2
  %extract4075.i = extractelement <16 x double> %2207, i32 3
  %extract4076.i = extractelement <16 x double> %2207, i32 4
  %extract4077.i = extractelement <16 x double> %2207, i32 5
  %extract4078.i = extractelement <16 x double> %2207, i32 6
  %extract4079.i = extractelement <16 x double> %2207, i32 7
  %extract4080.i = extractelement <16 x double> %2207, i32 8
  %extract4081.i = extractelement <16 x double> %2207, i32 9
  %extract4082.i = extractelement <16 x double> %2207, i32 10
  %extract4083.i = extractelement <16 x double> %2207, i32 11
  %extract4084.i = extractelement <16 x double> %2207, i32 12
  %extract4085.i = extractelement <16 x double> %2207, i32 13
  %extract4086.i = extractelement <16 x double> %2207, i32 14
  %extract4087.i = extractelement <16 x double> %2207, i32 15
  %2208 = call double @_Z4fmaxdd(double %extract4072.i, double 1.000000e-200) nounwind
  %2209 = call double @_Z4fmaxdd(double %extract4073.i, double 1.000000e-200) nounwind
  %2210 = call double @_Z4fmaxdd(double %extract4074.i, double 1.000000e-200) nounwind
  %2211 = call double @_Z4fmaxdd(double %extract4075.i, double 1.000000e-200) nounwind
  %2212 = call double @_Z4fmaxdd(double %extract4076.i, double 1.000000e-200) nounwind
  %2213 = call double @_Z4fmaxdd(double %extract4077.i, double 1.000000e-200) nounwind
  %2214 = call double @_Z4fmaxdd(double %extract4078.i, double 1.000000e-200) nounwind
  %2215 = call double @_Z4fmaxdd(double %extract4079.i, double 1.000000e-200) nounwind
  %2216 = call double @_Z4fmaxdd(double %extract4080.i, double 1.000000e-200) nounwind
  %2217 = call double @_Z4fmaxdd(double %extract4081.i, double 1.000000e-200) nounwind
  %2218 = call double @_Z4fmaxdd(double %extract4082.i, double 1.000000e-200) nounwind
  %2219 = call double @_Z4fmaxdd(double %extract4083.i, double 1.000000e-200) nounwind
  %2220 = call double @_Z4fmaxdd(double %extract4084.i, double 1.000000e-200) nounwind
  %2221 = call double @_Z4fmaxdd(double %extract4085.i, double 1.000000e-200) nounwind
  %2222 = call double @_Z4fmaxdd(double %extract4086.i, double 1.000000e-200) nounwind
  %2223 = call double @_Z4fmaxdd(double %extract4087.i, double 1.000000e-200) nounwind
  %2224 = call double @_Z5log10d(double %2208) nounwind
  %2225 = call double @_Z5log10d(double %2209) nounwind
  %2226 = call double @_Z5log10d(double %2210) nounwind
  %2227 = call double @_Z5log10d(double %2211) nounwind
  %2228 = call double @_Z5log10d(double %2212) nounwind
  %2229 = call double @_Z5log10d(double %2213) nounwind
  %2230 = call double @_Z5log10d(double %2214) nounwind
  %2231 = call double @_Z5log10d(double %2215) nounwind
  %2232 = call double @_Z5log10d(double %2216) nounwind
  %2233 = call double @_Z5log10d(double %2217) nounwind
  %2234 = call double @_Z5log10d(double %2218) nounwind
  %2235 = call double @_Z5log10d(double %2219) nounwind
  %2236 = call double @_Z5log10d(double %2220) nounwind
  %2237 = call double @_Z5log10d(double %2221) nounwind
  %2238 = call double @_Z5log10d(double %2222) nounwind
  %2239 = call double @_Z5log10d(double %2223) nounwind
  %temp.vect4088.i = insertelement <16 x double> undef, double %2224, i32 0
  %temp.vect4089.i = insertelement <16 x double> %temp.vect4088.i, double %2225, i32 1
  %temp.vect4090.i = insertelement <16 x double> %temp.vect4089.i, double %2226, i32 2
  %temp.vect4091.i = insertelement <16 x double> %temp.vect4090.i, double %2227, i32 3
  %temp.vect4092.i = insertelement <16 x double> %temp.vect4091.i, double %2228, i32 4
  %temp.vect4093.i = insertelement <16 x double> %temp.vect4092.i, double %2229, i32 5
  %temp.vect4094.i = insertelement <16 x double> %temp.vect4093.i, double %2230, i32 6
  %temp.vect4095.i = insertelement <16 x double> %temp.vect4094.i, double %2231, i32 7
  %temp.vect4096.i = insertelement <16 x double> %temp.vect4095.i, double %2232, i32 8
  %temp.vect4097.i = insertelement <16 x double> %temp.vect4096.i, double %2233, i32 9
  %temp.vect4098.i = insertelement <16 x double> %temp.vect4097.i, double %2234, i32 10
  %temp.vect4099.i = insertelement <16 x double> %temp.vect4098.i, double %2235, i32 11
  %temp.vect4100.i = insertelement <16 x double> %temp.vect4099.i, double %2236, i32 12
  %temp.vect4101.i = insertelement <16 x double> %temp.vect4100.i, double %2237, i32 13
  %temp.vect4102.i = insertelement <16 x double> %temp.vect4101.i, double %2238, i32 14
  %temp.vect4103.i = insertelement <16 x double> %temp.vect4102.i, double %2239, i32 15
  %2240 = fmul <16 x double> %temp.vect4103.i, <double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00>
  %2241 = fsub <16 x double> <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>, %2240
  %2242 = fmul <16 x double> %temp.vect4103.i, <double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01>
  %2243 = fadd <16 x double> %2242, <double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01>
  %2244 = fsub <16 x double> %temp.vect4119.i, %2243
  %2245 = fmul <16 x double> %2244, <double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01>
  %2246 = fsub <16 x double> %2241, %2245
  %2247 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2246
  %2248 = fmul <16 x double> %2244, %2247
  %2249 = fmul <16 x double> %2248, %2248
  %2250 = fadd <16 x double> %2249, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %2251 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2250
  %2252 = fmul <16 x double> %temp.vect4103.i, %2251
  %extract4120.i = extractelement <16 x double> %2252, i32 0
  %extract4121.i = extractelement <16 x double> %2252, i32 1
  %extract4122.i = extractelement <16 x double> %2252, i32 2
  %extract4123.i = extractelement <16 x double> %2252, i32 3
  %extract4124.i = extractelement <16 x double> %2252, i32 4
  %extract4125.i = extractelement <16 x double> %2252, i32 5
  %extract4126.i = extractelement <16 x double> %2252, i32 6
  %extract4127.i = extractelement <16 x double> %2252, i32 7
  %extract4128.i = extractelement <16 x double> %2252, i32 8
  %extract4129.i = extractelement <16 x double> %2252, i32 9
  %extract4130.i = extractelement <16 x double> %2252, i32 10
  %extract4131.i = extractelement <16 x double> %2252, i32 11
  %extract4132.i = extractelement <16 x double> %2252, i32 12
  %extract4133.i = extractelement <16 x double> %2252, i32 13
  %extract4134.i = extractelement <16 x double> %2252, i32 14
  %extract4135.i = extractelement <16 x double> %2252, i32 15
  %2253 = call double @_Z5exp10d(double %extract4120.i) nounwind
  %2254 = call double @_Z5exp10d(double %extract4121.i) nounwind
  %2255 = call double @_Z5exp10d(double %extract4122.i) nounwind
  %2256 = call double @_Z5exp10d(double %extract4123.i) nounwind
  %2257 = call double @_Z5exp10d(double %extract4124.i) nounwind
  %2258 = call double @_Z5exp10d(double %extract4125.i) nounwind
  %2259 = call double @_Z5exp10d(double %extract4126.i) nounwind
  %2260 = call double @_Z5exp10d(double %extract4127.i) nounwind
  %2261 = call double @_Z5exp10d(double %extract4128.i) nounwind
  %2262 = call double @_Z5exp10d(double %extract4129.i) nounwind
  %2263 = call double @_Z5exp10d(double %extract4130.i) nounwind
  %2264 = call double @_Z5exp10d(double %extract4131.i) nounwind
  %2265 = call double @_Z5exp10d(double %extract4132.i) nounwind
  %2266 = call double @_Z5exp10d(double %extract4133.i) nounwind
  %2267 = call double @_Z5exp10d(double %extract4134.i) nounwind
  %2268 = call double @_Z5exp10d(double %extract4135.i) nounwind
  %temp.vect4136.i = insertelement <16 x double> undef, double %2253, i32 0
  %temp.vect4137.i = insertelement <16 x double> %temp.vect4136.i, double %2254, i32 1
  %temp.vect4138.i = insertelement <16 x double> %temp.vect4137.i, double %2255, i32 2
  %temp.vect4139.i = insertelement <16 x double> %temp.vect4138.i, double %2256, i32 3
  %temp.vect4140.i = insertelement <16 x double> %temp.vect4139.i, double %2257, i32 4
  %temp.vect4141.i = insertelement <16 x double> %temp.vect4140.i, double %2258, i32 5
  %temp.vect4142.i = insertelement <16 x double> %temp.vect4141.i, double %2259, i32 6
  %temp.vect4143.i = insertelement <16 x double> %temp.vect4142.i, double %2260, i32 7
  %temp.vect4144.i = insertelement <16 x double> %temp.vect4143.i, double %2261, i32 8
  %temp.vect4145.i = insertelement <16 x double> %temp.vect4144.i, double %2262, i32 9
  %temp.vect4146.i = insertelement <16 x double> %temp.vect4145.i, double %2263, i32 10
  %temp.vect4147.i = insertelement <16 x double> %temp.vect4146.i, double %2264, i32 11
  %temp.vect4148.i = insertelement <16 x double> %temp.vect4147.i, double %2265, i32 12
  %temp.vect4149.i = insertelement <16 x double> %temp.vect4148.i, double %2266, i32 13
  %temp.vect4150.i = insertelement <16 x double> %temp.vect4149.i, double %2267, i32 14
  %temp.vect4151.i = insertelement <16 x double> %temp.vect4150.i, double %2268, i32 15
  %2269 = fmul <16 x double> %temp.vect4151.i, %2120
  %2270 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2271 = load i64* %2270, align 8
  %2272 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2273 = load i64* %2272, align 8
  %2274 = add i64 %2271, %2273
  %extract4154.i = add i64 %2274, 18690048
  %2275 = getelementptr inbounds double addrspace(1)* %7, i64 %extract4154.i
  %ptrTypeCast4170.i = bitcast double addrspace(1)* %2275 to <16 x double> addrspace(1)*
  %2276 = load <16 x double> addrspace(1)* %ptrTypeCast4170.i, align 8
  %2277 = fmul <16 x double> %2276, %2269
  %2278 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2279 = load i64* %2278, align 8
  %2280 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2281 = load i64* %2280, align 8
  %2282 = add i64 %2279, %2281
  %extract4173.i = add i64 %2282, 18690048
  %2283 = getelementptr inbounds double addrspace(1)* %7, i64 %extract4173.i
  %ptrTypeCast4189.i = bitcast double addrspace(1)* %2283 to <16 x double> addrspace(1)*
  store <16 x double> %2277, <16 x double> addrspace(1)* %ptrTypeCast4189.i, align 8
  %2284 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2285 = load i64* %2284, align 8
  %2286 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2287 = load i64* %2286, align 8
  %2288 = add i64 %2285, %2287
  %extract4192.i = add i64 %2288, 18690048
  %2289 = getelementptr inbounds double addrspace(1)* %10, i64 %extract4192.i
  %ptrTypeCast4208.i = bitcast double addrspace(1)* %2289 to <16 x double> addrspace(1)*
  %2290 = load <16 x double> addrspace(1)* %ptrTypeCast4208.i, align 8
  %2291 = fmul <16 x double> %2290, %2269
  %2292 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2293 = load i64* %2292, align 8
  %2294 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2295 = load i64* %2294, align 8
  %2296 = add i64 %2293, %2295
  %extract4211.i = add i64 %2296, 18690048
  %2297 = getelementptr inbounds double addrspace(1)* %10, i64 %extract4211.i
  %ptrTypeCast4227.i = bitcast double addrspace(1)* %2297 to <16 x double> addrspace(1)*
  store <16 x double> %2291, <16 x double> addrspace(1)* %ptrTypeCast4227.i, align 8
  %2298 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2299 = load i64* %2298, align 8
  %2300 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2301 = load i64* %2300, align 8
  %2302 = add i64 %2299, %2301
  %extract4230.i = add i64 %2302, 2101248
  %2303 = getelementptr inbounds double addrspace(1)* %13, i64 %extract4230.i
  %ptrTypeCast4246.i = bitcast double addrspace(1)* %2303 to <16 x double> addrspace(1)*
  %2304 = load <16 x double> addrspace(1)* %ptrTypeCast4246.i, align 8
  %2305 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2306 = load i64* %2305, align 8
  %2307 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2308 = load i64* %2307, align 8
  %2309 = add i64 %2306, %2308
  %extract4249.i = add i64 %2309, 20348928
  %2310 = getelementptr inbounds double addrspace(1)* %7, i64 %extract4249.i
  %ptrTypeCast4265.i = bitcast double addrspace(1)* %2310 to <16 x double> addrspace(1)*
  %2311 = load <16 x double> addrspace(1)* %ptrTypeCast4265.i, align 8
  %2312 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2311
  %2313 = fmul <16 x double> %239, %2312
  %2314 = fmul <16 x double> %2304, %2313
  %extract4266.i = extractelement <16 x double> %2314, i32 0
  %extract4267.i = extractelement <16 x double> %2314, i32 1
  %extract4268.i = extractelement <16 x double> %2314, i32 2
  %extract4269.i = extractelement <16 x double> %2314, i32 3
  %extract4270.i = extractelement <16 x double> %2314, i32 4
  %extract4271.i = extractelement <16 x double> %2314, i32 5
  %extract4272.i = extractelement <16 x double> %2314, i32 6
  %extract4273.i = extractelement <16 x double> %2314, i32 7
  %extract4274.i = extractelement <16 x double> %2314, i32 8
  %extract4275.i = extractelement <16 x double> %2314, i32 9
  %extract4276.i = extractelement <16 x double> %2314, i32 10
  %extract4277.i = extractelement <16 x double> %2314, i32 11
  %extract4278.i = extractelement <16 x double> %2314, i32 12
  %extract4279.i = extractelement <16 x double> %2314, i32 13
  %extract4280.i = extractelement <16 x double> %2314, i32 14
  %extract4281.i = extractelement <16 x double> %2314, i32 15
  %2315 = fadd <16 x double> %2314, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %2316 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2315
  %2317 = fmul <16 x double> %2314, %2316
  %2318 = call double @_Z4fmaxdd(double %extract4266.i, double 1.000000e-200) nounwind
  %2319 = call double @_Z4fmaxdd(double %extract4267.i, double 1.000000e-200) nounwind
  %2320 = call double @_Z4fmaxdd(double %extract4268.i, double 1.000000e-200) nounwind
  %2321 = call double @_Z4fmaxdd(double %extract4269.i, double 1.000000e-200) nounwind
  %2322 = call double @_Z4fmaxdd(double %extract4270.i, double 1.000000e-200) nounwind
  %2323 = call double @_Z4fmaxdd(double %extract4271.i, double 1.000000e-200) nounwind
  %2324 = call double @_Z4fmaxdd(double %extract4272.i, double 1.000000e-200) nounwind
  %2325 = call double @_Z4fmaxdd(double %extract4273.i, double 1.000000e-200) nounwind
  %2326 = call double @_Z4fmaxdd(double %extract4274.i, double 1.000000e-200) nounwind
  %2327 = call double @_Z4fmaxdd(double %extract4275.i, double 1.000000e-200) nounwind
  %2328 = call double @_Z4fmaxdd(double %extract4276.i, double 1.000000e-200) nounwind
  %2329 = call double @_Z4fmaxdd(double %extract4277.i, double 1.000000e-200) nounwind
  %2330 = call double @_Z4fmaxdd(double %extract4278.i, double 1.000000e-200) nounwind
  %2331 = call double @_Z4fmaxdd(double %extract4279.i, double 1.000000e-200) nounwind
  %2332 = call double @_Z4fmaxdd(double %extract4280.i, double 1.000000e-200) nounwind
  %2333 = call double @_Z4fmaxdd(double %extract4281.i, double 1.000000e-200) nounwind
  %2334 = call double @_Z5log10d(double %2318) nounwind
  %2335 = call double @_Z5log10d(double %2319) nounwind
  %2336 = call double @_Z5log10d(double %2320) nounwind
  %2337 = call double @_Z5log10d(double %2321) nounwind
  %2338 = call double @_Z5log10d(double %2322) nounwind
  %2339 = call double @_Z5log10d(double %2323) nounwind
  %2340 = call double @_Z5log10d(double %2324) nounwind
  %2341 = call double @_Z5log10d(double %2325) nounwind
  %2342 = call double @_Z5log10d(double %2326) nounwind
  %2343 = call double @_Z5log10d(double %2327) nounwind
  %2344 = call double @_Z5log10d(double %2328) nounwind
  %2345 = call double @_Z5log10d(double %2329) nounwind
  %2346 = call double @_Z5log10d(double %2330) nounwind
  %2347 = call double @_Z5log10d(double %2331) nounwind
  %2348 = call double @_Z5log10d(double %2332) nounwind
  %2349 = call double @_Z5log10d(double %2333) nounwind
  %temp.vect4394.i = insertelement <16 x double> undef, double %2334, i32 0
  %temp.vect4395.i = insertelement <16 x double> %temp.vect4394.i, double %2335, i32 1
  %temp.vect4396.i = insertelement <16 x double> %temp.vect4395.i, double %2336, i32 2
  %temp.vect4397.i = insertelement <16 x double> %temp.vect4396.i, double %2337, i32 3
  %temp.vect4398.i = insertelement <16 x double> %temp.vect4397.i, double %2338, i32 4
  %temp.vect4399.i = insertelement <16 x double> %temp.vect4398.i, double %2339, i32 5
  %temp.vect4400.i = insertelement <16 x double> %temp.vect4399.i, double %2340, i32 6
  %temp.vect4401.i = insertelement <16 x double> %temp.vect4400.i, double %2341, i32 7
  %temp.vect4402.i = insertelement <16 x double> %temp.vect4401.i, double %2342, i32 8
  %temp.vect4403.i = insertelement <16 x double> %temp.vect4402.i, double %2343, i32 9
  %temp.vect4404.i = insertelement <16 x double> %temp.vect4403.i, double %2344, i32 10
  %temp.vect4405.i = insertelement <16 x double> %temp.vect4404.i, double %2345, i32 11
  %temp.vect4406.i = insertelement <16 x double> %temp.vect4405.i, double %2346, i32 12
  %temp.vect4407.i = insertelement <16 x double> %temp.vect4406.i, double %2347, i32 13
  %temp.vect4408.i = insertelement <16 x double> %temp.vect4407.i, double %2348, i32 14
  %temp.vect4409.i = insertelement <16 x double> %temp.vect4408.i, double %2349, i32 15
  %2350 = fmul <16 x double> %33, <double 0xBF4DE1A6D2922395, double 0xBF4DE1A6D2922395, double 0xBF4DE1A6D2922395, double 0xBF4DE1A6D2922395, double 0xBF4DE1A6D2922395, double 0xBF4DE1A6D2922395, double 0xBF4DE1A6D2922395, double 0xBF4DE1A6D2922395, double 0xBF4DE1A6D2922395, double 0xBF4DE1A6D2922395, double 0xBF4DE1A6D2922395, double 0xBF4DE1A6D2922395, double 0xBF4DE1A6D2922395, double 0xBF4DE1A6D2922395, double 0xBF4DE1A6D2922395, double 0xBF4DE1A6D2922395>
  %extract4282.i = extractelement <16 x double> %2350, i32 0
  %extract4283.i = extractelement <16 x double> %2350, i32 1
  %extract4284.i = extractelement <16 x double> %2350, i32 2
  %extract4285.i = extractelement <16 x double> %2350, i32 3
  %extract4286.i = extractelement <16 x double> %2350, i32 4
  %extract4287.i = extractelement <16 x double> %2350, i32 5
  %extract4288.i = extractelement <16 x double> %2350, i32 6
  %extract4289.i = extractelement <16 x double> %2350, i32 7
  %extract4290.i = extractelement <16 x double> %2350, i32 8
  %extract4291.i = extractelement <16 x double> %2350, i32 9
  %extract4292.i = extractelement <16 x double> %2350, i32 10
  %extract4293.i = extractelement <16 x double> %2350, i32 11
  %extract4294.i = extractelement <16 x double> %2350, i32 12
  %extract4295.i = extractelement <16 x double> %2350, i32 13
  %extract4296.i = extractelement <16 x double> %2350, i32 14
  %extract4297.i = extractelement <16 x double> %2350, i32 15
  %2351 = call double @_Z3expd(double %extract4282.i) nounwind
  %2352 = call double @_Z3expd(double %extract4283.i) nounwind
  %2353 = call double @_Z3expd(double %extract4284.i) nounwind
  %2354 = call double @_Z3expd(double %extract4285.i) nounwind
  %2355 = call double @_Z3expd(double %extract4286.i) nounwind
  %2356 = call double @_Z3expd(double %extract4287.i) nounwind
  %2357 = call double @_Z3expd(double %extract4288.i) nounwind
  %2358 = call double @_Z3expd(double %extract4289.i) nounwind
  %2359 = call double @_Z3expd(double %extract4290.i) nounwind
  %2360 = call double @_Z3expd(double %extract4291.i) nounwind
  %2361 = call double @_Z3expd(double %extract4292.i) nounwind
  %2362 = call double @_Z3expd(double %extract4293.i) nounwind
  %2363 = call double @_Z3expd(double %extract4294.i) nounwind
  %2364 = call double @_Z3expd(double %extract4295.i) nounwind
  %2365 = call double @_Z3expd(double %extract4296.i) nounwind
  %2366 = call double @_Z3expd(double %extract4297.i) nounwind
  %temp.vect4298.i = insertelement <16 x double> undef, double %2351, i32 0
  %temp.vect4299.i = insertelement <16 x double> %temp.vect4298.i, double %2352, i32 1
  %temp.vect4300.i = insertelement <16 x double> %temp.vect4299.i, double %2353, i32 2
  %temp.vect4301.i = insertelement <16 x double> %temp.vect4300.i, double %2354, i32 3
  %temp.vect4302.i = insertelement <16 x double> %temp.vect4301.i, double %2355, i32 4
  %temp.vect4303.i = insertelement <16 x double> %temp.vect4302.i, double %2356, i32 5
  %temp.vect4304.i = insertelement <16 x double> %temp.vect4303.i, double %2357, i32 6
  %temp.vect4305.i = insertelement <16 x double> %temp.vect4304.i, double %2358, i32 7
  %temp.vect4306.i = insertelement <16 x double> %temp.vect4305.i, double %2359, i32 8
  %temp.vect4307.i = insertelement <16 x double> %temp.vect4306.i, double %2360, i32 9
  %temp.vect4308.i = insertelement <16 x double> %temp.vect4307.i, double %2361, i32 10
  %temp.vect4309.i = insertelement <16 x double> %temp.vect4308.i, double %2362, i32 11
  %temp.vect4310.i = insertelement <16 x double> %temp.vect4309.i, double %2363, i32 12
  %temp.vect4311.i = insertelement <16 x double> %temp.vect4310.i, double %2364, i32 13
  %temp.vect4312.i = insertelement <16 x double> %temp.vect4311.i, double %2365, i32 14
  %temp.vect4313.i = insertelement <16 x double> %temp.vect4312.i, double %2366, i32 15
  %2367 = fmul <16 x double> %temp.vect4313.i, <double 9.800000e-01, double 9.800000e-01, double 9.800000e-01, double 9.800000e-01, double 9.800000e-01, double 9.800000e-01, double 9.800000e-01, double 9.800000e-01, double 9.800000e-01, double 9.800000e-01, double 9.800000e-01, double 9.800000e-01, double 9.800000e-01, double 9.800000e-01, double 9.800000e-01, double 9.800000e-01>
  %2368 = call double @_Z3expd(double %extract4282.i) nounwind
  %2369 = call double @_Z3expd(double %extract4283.i) nounwind
  %2370 = call double @_Z3expd(double %extract4284.i) nounwind
  %2371 = call double @_Z3expd(double %extract4285.i) nounwind
  %2372 = call double @_Z3expd(double %extract4286.i) nounwind
  %2373 = call double @_Z3expd(double %extract4287.i) nounwind
  %2374 = call double @_Z3expd(double %extract4288.i) nounwind
  %2375 = call double @_Z3expd(double %extract4289.i) nounwind
  %2376 = call double @_Z3expd(double %extract4290.i) nounwind
  %2377 = call double @_Z3expd(double %extract4291.i) nounwind
  %2378 = call double @_Z3expd(double %extract4292.i) nounwind
  %2379 = call double @_Z3expd(double %extract4293.i) nounwind
  %2380 = call double @_Z3expd(double %extract4294.i) nounwind
  %2381 = call double @_Z3expd(double %extract4295.i) nounwind
  %2382 = call double @_Z3expd(double %extract4296.i) nounwind
  %2383 = call double @_Z3expd(double %extract4297.i) nounwind
  %temp.vect4314.i = insertelement <16 x double> undef, double %2368, i32 0
  %temp.vect4315.i = insertelement <16 x double> %temp.vect4314.i, double %2369, i32 1
  %temp.vect4316.i = insertelement <16 x double> %temp.vect4315.i, double %2370, i32 2
  %temp.vect4317.i = insertelement <16 x double> %temp.vect4316.i, double %2371, i32 3
  %temp.vect4318.i = insertelement <16 x double> %temp.vect4317.i, double %2372, i32 4
  %temp.vect4319.i = insertelement <16 x double> %temp.vect4318.i, double %2373, i32 5
  %temp.vect4320.i = insertelement <16 x double> %temp.vect4319.i, double %2374, i32 6
  %temp.vect4321.i = insertelement <16 x double> %temp.vect4320.i, double %2375, i32 7
  %temp.vect4322.i = insertelement <16 x double> %temp.vect4321.i, double %2376, i32 8
  %temp.vect4323.i = insertelement <16 x double> %temp.vect4322.i, double %2377, i32 9
  %temp.vect4324.i = insertelement <16 x double> %temp.vect4323.i, double %2378, i32 10
  %temp.vect4325.i = insertelement <16 x double> %temp.vect4324.i, double %2379, i32 11
  %temp.vect4326.i = insertelement <16 x double> %temp.vect4325.i, double %2380, i32 12
  %temp.vect4327.i = insertelement <16 x double> %temp.vect4326.i, double %2381, i32 13
  %temp.vect4328.i = insertelement <16 x double> %temp.vect4327.i, double %2382, i32 14
  %temp.vect4329.i = insertelement <16 x double> %temp.vect4328.i, double %2383, i32 15
  %2384 = fmul <16 x double> %temp.vect4329.i, <double 2.000000e-02, double 2.000000e-02, double 2.000000e-02, double 2.000000e-02, double 2.000000e-02, double 2.000000e-02, double 2.000000e-02, double 2.000000e-02, double 2.000000e-02, double 2.000000e-02, double 2.000000e-02, double 2.000000e-02, double 2.000000e-02, double 2.000000e-02, double 2.000000e-02, double 2.000000e-02>
  %2385 = fadd <16 x double> %2367, %2384
  %2386 = fmul <16 x double> %1007, <double -6.859500e+03, double -6.859500e+03, double -6.859500e+03, double -6.859500e+03, double -6.859500e+03, double -6.859500e+03, double -6.859500e+03, double -6.859500e+03, double -6.859500e+03, double -6.859500e+03, double -6.859500e+03, double -6.859500e+03, double -6.859500e+03, double -6.859500e+03, double -6.859500e+03, double -6.859500e+03>
  %extract4330.i = extractelement <16 x double> %2386, i32 0
  %extract4331.i = extractelement <16 x double> %2386, i32 1
  %extract4332.i = extractelement <16 x double> %2386, i32 2
  %extract4333.i = extractelement <16 x double> %2386, i32 3
  %extract4334.i = extractelement <16 x double> %2386, i32 4
  %extract4335.i = extractelement <16 x double> %2386, i32 5
  %extract4336.i = extractelement <16 x double> %2386, i32 6
  %extract4337.i = extractelement <16 x double> %2386, i32 7
  %extract4338.i = extractelement <16 x double> %2386, i32 8
  %extract4339.i = extractelement <16 x double> %2386, i32 9
  %extract4340.i = extractelement <16 x double> %2386, i32 10
  %extract4341.i = extractelement <16 x double> %2386, i32 11
  %extract4342.i = extractelement <16 x double> %2386, i32 12
  %extract4343.i = extractelement <16 x double> %2386, i32 13
  %extract4344.i = extractelement <16 x double> %2386, i32 14
  %extract4345.i = extractelement <16 x double> %2386, i32 15
  %2387 = call double @_Z3expd(double %extract4330.i) nounwind
  %2388 = call double @_Z3expd(double %extract4331.i) nounwind
  %2389 = call double @_Z3expd(double %extract4332.i) nounwind
  %2390 = call double @_Z3expd(double %extract4333.i) nounwind
  %2391 = call double @_Z3expd(double %extract4334.i) nounwind
  %2392 = call double @_Z3expd(double %extract4335.i) nounwind
  %2393 = call double @_Z3expd(double %extract4336.i) nounwind
  %2394 = call double @_Z3expd(double %extract4337.i) nounwind
  %2395 = call double @_Z3expd(double %extract4338.i) nounwind
  %2396 = call double @_Z3expd(double %extract4339.i) nounwind
  %2397 = call double @_Z3expd(double %extract4340.i) nounwind
  %2398 = call double @_Z3expd(double %extract4341.i) nounwind
  %2399 = call double @_Z3expd(double %extract4342.i) nounwind
  %2400 = call double @_Z3expd(double %extract4343.i) nounwind
  %2401 = call double @_Z3expd(double %extract4344.i) nounwind
  %2402 = call double @_Z3expd(double %extract4345.i) nounwind
  %temp.vect4346.i = insertelement <16 x double> undef, double %2387, i32 0
  %temp.vect4347.i = insertelement <16 x double> %temp.vect4346.i, double %2388, i32 1
  %temp.vect4348.i = insertelement <16 x double> %temp.vect4347.i, double %2389, i32 2
  %temp.vect4349.i = insertelement <16 x double> %temp.vect4348.i, double %2390, i32 3
  %temp.vect4350.i = insertelement <16 x double> %temp.vect4349.i, double %2391, i32 4
  %temp.vect4351.i = insertelement <16 x double> %temp.vect4350.i, double %2392, i32 5
  %temp.vect4352.i = insertelement <16 x double> %temp.vect4351.i, double %2393, i32 6
  %temp.vect4353.i = insertelement <16 x double> %temp.vect4352.i, double %2394, i32 7
  %temp.vect4354.i = insertelement <16 x double> %temp.vect4353.i, double %2395, i32 8
  %temp.vect4355.i = insertelement <16 x double> %temp.vect4354.i, double %2396, i32 9
  %temp.vect4356.i = insertelement <16 x double> %temp.vect4355.i, double %2397, i32 10
  %temp.vect4357.i = insertelement <16 x double> %temp.vect4356.i, double %2398, i32 11
  %temp.vect4358.i = insertelement <16 x double> %temp.vect4357.i, double %2399, i32 12
  %temp.vect4359.i = insertelement <16 x double> %temp.vect4358.i, double %2400, i32 13
  %temp.vect4360.i = insertelement <16 x double> %temp.vect4359.i, double %2401, i32 14
  %temp.vect4361.i = insertelement <16 x double> %temp.vect4360.i, double %2402, i32 15
  %2403 = fadd <16 x double> %2385, %temp.vect4361.i
  %extract4362.i = extractelement <16 x double> %2403, i32 0
  %extract4363.i = extractelement <16 x double> %2403, i32 1
  %extract4364.i = extractelement <16 x double> %2403, i32 2
  %extract4365.i = extractelement <16 x double> %2403, i32 3
  %extract4366.i = extractelement <16 x double> %2403, i32 4
  %extract4367.i = extractelement <16 x double> %2403, i32 5
  %extract4368.i = extractelement <16 x double> %2403, i32 6
  %extract4369.i = extractelement <16 x double> %2403, i32 7
  %extract4370.i = extractelement <16 x double> %2403, i32 8
  %extract4371.i = extractelement <16 x double> %2403, i32 9
  %extract4372.i = extractelement <16 x double> %2403, i32 10
  %extract4373.i = extractelement <16 x double> %2403, i32 11
  %extract4374.i = extractelement <16 x double> %2403, i32 12
  %extract4375.i = extractelement <16 x double> %2403, i32 13
  %extract4376.i = extractelement <16 x double> %2403, i32 14
  %extract4377.i = extractelement <16 x double> %2403, i32 15
  %2404 = call double @_Z4fmaxdd(double %extract4362.i, double 1.000000e-200) nounwind
  %2405 = call double @_Z4fmaxdd(double %extract4363.i, double 1.000000e-200) nounwind
  %2406 = call double @_Z4fmaxdd(double %extract4364.i, double 1.000000e-200) nounwind
  %2407 = call double @_Z4fmaxdd(double %extract4365.i, double 1.000000e-200) nounwind
  %2408 = call double @_Z4fmaxdd(double %extract4366.i, double 1.000000e-200) nounwind
  %2409 = call double @_Z4fmaxdd(double %extract4367.i, double 1.000000e-200) nounwind
  %2410 = call double @_Z4fmaxdd(double %extract4368.i, double 1.000000e-200) nounwind
  %2411 = call double @_Z4fmaxdd(double %extract4369.i, double 1.000000e-200) nounwind
  %2412 = call double @_Z4fmaxdd(double %extract4370.i, double 1.000000e-200) nounwind
  %2413 = call double @_Z4fmaxdd(double %extract4371.i, double 1.000000e-200) nounwind
  %2414 = call double @_Z4fmaxdd(double %extract4372.i, double 1.000000e-200) nounwind
  %2415 = call double @_Z4fmaxdd(double %extract4373.i, double 1.000000e-200) nounwind
  %2416 = call double @_Z4fmaxdd(double %extract4374.i, double 1.000000e-200) nounwind
  %2417 = call double @_Z4fmaxdd(double %extract4375.i, double 1.000000e-200) nounwind
  %2418 = call double @_Z4fmaxdd(double %extract4376.i, double 1.000000e-200) nounwind
  %2419 = call double @_Z4fmaxdd(double %extract4377.i, double 1.000000e-200) nounwind
  %2420 = call double @_Z5log10d(double %2404) nounwind
  %2421 = call double @_Z5log10d(double %2405) nounwind
  %2422 = call double @_Z5log10d(double %2406) nounwind
  %2423 = call double @_Z5log10d(double %2407) nounwind
  %2424 = call double @_Z5log10d(double %2408) nounwind
  %2425 = call double @_Z5log10d(double %2409) nounwind
  %2426 = call double @_Z5log10d(double %2410) nounwind
  %2427 = call double @_Z5log10d(double %2411) nounwind
  %2428 = call double @_Z5log10d(double %2412) nounwind
  %2429 = call double @_Z5log10d(double %2413) nounwind
  %2430 = call double @_Z5log10d(double %2414) nounwind
  %2431 = call double @_Z5log10d(double %2415) nounwind
  %2432 = call double @_Z5log10d(double %2416) nounwind
  %2433 = call double @_Z5log10d(double %2417) nounwind
  %2434 = call double @_Z5log10d(double %2418) nounwind
  %2435 = call double @_Z5log10d(double %2419) nounwind
  %temp.vect4378.i = insertelement <16 x double> undef, double %2420, i32 0
  %temp.vect4379.i = insertelement <16 x double> %temp.vect4378.i, double %2421, i32 1
  %temp.vect4380.i = insertelement <16 x double> %temp.vect4379.i, double %2422, i32 2
  %temp.vect4381.i = insertelement <16 x double> %temp.vect4380.i, double %2423, i32 3
  %temp.vect4382.i = insertelement <16 x double> %temp.vect4381.i, double %2424, i32 4
  %temp.vect4383.i = insertelement <16 x double> %temp.vect4382.i, double %2425, i32 5
  %temp.vect4384.i = insertelement <16 x double> %temp.vect4383.i, double %2426, i32 6
  %temp.vect4385.i = insertelement <16 x double> %temp.vect4384.i, double %2427, i32 7
  %temp.vect4386.i = insertelement <16 x double> %temp.vect4385.i, double %2428, i32 8
  %temp.vect4387.i = insertelement <16 x double> %temp.vect4386.i, double %2429, i32 9
  %temp.vect4388.i = insertelement <16 x double> %temp.vect4387.i, double %2430, i32 10
  %temp.vect4389.i = insertelement <16 x double> %temp.vect4388.i, double %2431, i32 11
  %temp.vect4390.i = insertelement <16 x double> %temp.vect4389.i, double %2432, i32 12
  %temp.vect4391.i = insertelement <16 x double> %temp.vect4390.i, double %2433, i32 13
  %temp.vect4392.i = insertelement <16 x double> %temp.vect4391.i, double %2434, i32 14
  %temp.vect4393.i = insertelement <16 x double> %temp.vect4392.i, double %2435, i32 15
  %2436 = fmul <16 x double> %temp.vect4393.i, <double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00>
  %2437 = fsub <16 x double> <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>, %2436
  %2438 = fmul <16 x double> %temp.vect4393.i, <double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01>
  %2439 = fadd <16 x double> %2438, <double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01>
  %2440 = fsub <16 x double> %temp.vect4409.i, %2439
  %2441 = fmul <16 x double> %2440, <double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01>
  %2442 = fsub <16 x double> %2437, %2441
  %2443 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2442
  %2444 = fmul <16 x double> %2440, %2443
  %2445 = fmul <16 x double> %2444, %2444
  %2446 = fadd <16 x double> %2445, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %2447 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2446
  %2448 = fmul <16 x double> %temp.vect4393.i, %2447
  %extract4410.i = extractelement <16 x double> %2448, i32 0
  %extract4411.i = extractelement <16 x double> %2448, i32 1
  %extract4412.i = extractelement <16 x double> %2448, i32 2
  %extract4413.i = extractelement <16 x double> %2448, i32 3
  %extract4414.i = extractelement <16 x double> %2448, i32 4
  %extract4415.i = extractelement <16 x double> %2448, i32 5
  %extract4416.i = extractelement <16 x double> %2448, i32 6
  %extract4417.i = extractelement <16 x double> %2448, i32 7
  %extract4418.i = extractelement <16 x double> %2448, i32 8
  %extract4419.i = extractelement <16 x double> %2448, i32 9
  %extract4420.i = extractelement <16 x double> %2448, i32 10
  %extract4421.i = extractelement <16 x double> %2448, i32 11
  %extract4422.i = extractelement <16 x double> %2448, i32 12
  %extract4423.i = extractelement <16 x double> %2448, i32 13
  %extract4424.i = extractelement <16 x double> %2448, i32 14
  %extract4425.i = extractelement <16 x double> %2448, i32 15
  %2449 = call double @_Z5exp10d(double %extract4410.i) nounwind
  %2450 = call double @_Z5exp10d(double %extract4411.i) nounwind
  %2451 = call double @_Z5exp10d(double %extract4412.i) nounwind
  %2452 = call double @_Z5exp10d(double %extract4413.i) nounwind
  %2453 = call double @_Z5exp10d(double %extract4414.i) nounwind
  %2454 = call double @_Z5exp10d(double %extract4415.i) nounwind
  %2455 = call double @_Z5exp10d(double %extract4416.i) nounwind
  %2456 = call double @_Z5exp10d(double %extract4417.i) nounwind
  %2457 = call double @_Z5exp10d(double %extract4418.i) nounwind
  %2458 = call double @_Z5exp10d(double %extract4419.i) nounwind
  %2459 = call double @_Z5exp10d(double %extract4420.i) nounwind
  %2460 = call double @_Z5exp10d(double %extract4421.i) nounwind
  %2461 = call double @_Z5exp10d(double %extract4422.i) nounwind
  %2462 = call double @_Z5exp10d(double %extract4423.i) nounwind
  %2463 = call double @_Z5exp10d(double %extract4424.i) nounwind
  %2464 = call double @_Z5exp10d(double %extract4425.i) nounwind
  %temp.vect4426.i = insertelement <16 x double> undef, double %2449, i32 0
  %temp.vect4427.i = insertelement <16 x double> %temp.vect4426.i, double %2450, i32 1
  %temp.vect4428.i = insertelement <16 x double> %temp.vect4427.i, double %2451, i32 2
  %temp.vect4429.i = insertelement <16 x double> %temp.vect4428.i, double %2452, i32 3
  %temp.vect4430.i = insertelement <16 x double> %temp.vect4429.i, double %2453, i32 4
  %temp.vect4431.i = insertelement <16 x double> %temp.vect4430.i, double %2454, i32 5
  %temp.vect4432.i = insertelement <16 x double> %temp.vect4431.i, double %2455, i32 6
  %temp.vect4433.i = insertelement <16 x double> %temp.vect4432.i, double %2456, i32 7
  %temp.vect4434.i = insertelement <16 x double> %temp.vect4433.i, double %2457, i32 8
  %temp.vect4435.i = insertelement <16 x double> %temp.vect4434.i, double %2458, i32 9
  %temp.vect4436.i = insertelement <16 x double> %temp.vect4435.i, double %2459, i32 10
  %temp.vect4437.i = insertelement <16 x double> %temp.vect4436.i, double %2460, i32 11
  %temp.vect4438.i = insertelement <16 x double> %temp.vect4437.i, double %2461, i32 12
  %temp.vect4439.i = insertelement <16 x double> %temp.vect4438.i, double %2462, i32 13
  %temp.vect4440.i = insertelement <16 x double> %temp.vect4439.i, double %2463, i32 14
  %temp.vect4441.i = insertelement <16 x double> %temp.vect4440.i, double %2464, i32 15
  %2465 = fmul <16 x double> %temp.vect4441.i, %2317
  %2466 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2467 = load i64* %2466, align 8
  %2468 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2469 = load i64* %2468, align 8
  %2470 = add i64 %2467, %2469
  %extract4444.i = add i64 %2470, 20348928
  %2471 = getelementptr inbounds double addrspace(1)* %7, i64 %extract4444.i
  %ptrTypeCast4460.i = bitcast double addrspace(1)* %2471 to <16 x double> addrspace(1)*
  %2472 = load <16 x double> addrspace(1)* %ptrTypeCast4460.i, align 8
  %2473 = fmul <16 x double> %2472, %2465
  %2474 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2475 = load i64* %2474, align 8
  %2476 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2477 = load i64* %2476, align 8
  %2478 = add i64 %2475, %2477
  %extract4463.i = add i64 %2478, 20348928
  %2479 = getelementptr inbounds double addrspace(1)* %7, i64 %extract4463.i
  %ptrTypeCast4479.i = bitcast double addrspace(1)* %2479 to <16 x double> addrspace(1)*
  store <16 x double> %2473, <16 x double> addrspace(1)* %ptrTypeCast4479.i, align 8
  %2480 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2481 = load i64* %2480, align 8
  %2482 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2483 = load i64* %2482, align 8
  %2484 = add i64 %2481, %2483
  %extract4482.i = add i64 %2484, 20348928
  %2485 = getelementptr inbounds double addrspace(1)* %10, i64 %extract4482.i
  %ptrTypeCast4498.i = bitcast double addrspace(1)* %2485 to <16 x double> addrspace(1)*
  %2486 = load <16 x double> addrspace(1)* %ptrTypeCast4498.i, align 8
  %2487 = fmul <16 x double> %2486, %2465
  %2488 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2489 = load i64* %2488, align 8
  %2490 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2491 = load i64* %2490, align 8
  %2492 = add i64 %2489, %2491
  %extract4501.i = add i64 %2492, 20348928
  %2493 = getelementptr inbounds double addrspace(1)* %10, i64 %extract4501.i
  %ptrTypeCast4517.i = bitcast double addrspace(1)* %2493 to <16 x double> addrspace(1)*
  store <16 x double> %2487, <16 x double> addrspace(1)* %ptrTypeCast4517.i, align 8
  %2494 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2495 = load i64* %2494, align 8
  %2496 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2497 = load i64* %2496, align 8
  %2498 = add i64 %2495, %2497
  %extract4520.i = add i64 %2498, 2211840
  %2499 = getelementptr inbounds double addrspace(1)* %13, i64 %extract4520.i
  %ptrTypeCast4536.i = bitcast double addrspace(1)* %2499 to <16 x double> addrspace(1)*
  %2500 = load <16 x double> addrspace(1)* %ptrTypeCast4536.i, align 8
  %2501 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2502 = load i64* %2501, align 8
  %2503 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2504 = load i64* %2503, align 8
  %2505 = add i64 %2502, %2504
  %extract4539.i = add i64 %2505, 20901888
  %2506 = getelementptr inbounds double addrspace(1)* %7, i64 %extract4539.i
  %ptrTypeCast4555.i = bitcast double addrspace(1)* %2506 to <16 x double> addrspace(1)*
  %2507 = load <16 x double> addrspace(1)* %ptrTypeCast4555.i, align 8
  %2508 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2507
  %2509 = fmul <16 x double> %509, %2508
  %2510 = fmul <16 x double> %2500, %2509
  %extract4556.i = extractelement <16 x double> %2510, i32 0
  %extract4557.i = extractelement <16 x double> %2510, i32 1
  %extract4558.i = extractelement <16 x double> %2510, i32 2
  %extract4559.i = extractelement <16 x double> %2510, i32 3
  %extract4560.i = extractelement <16 x double> %2510, i32 4
  %extract4561.i = extractelement <16 x double> %2510, i32 5
  %extract4562.i = extractelement <16 x double> %2510, i32 6
  %extract4563.i = extractelement <16 x double> %2510, i32 7
  %extract4564.i = extractelement <16 x double> %2510, i32 8
  %extract4565.i = extractelement <16 x double> %2510, i32 9
  %extract4566.i = extractelement <16 x double> %2510, i32 10
  %extract4567.i = extractelement <16 x double> %2510, i32 11
  %extract4568.i = extractelement <16 x double> %2510, i32 12
  %extract4569.i = extractelement <16 x double> %2510, i32 13
  %extract4570.i = extractelement <16 x double> %2510, i32 14
  %extract4571.i = extractelement <16 x double> %2510, i32 15
  %2511 = fadd <16 x double> %2510, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %2512 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2511
  %2513 = fmul <16 x double> %2510, %2512
  %2514 = call double @_Z4fmaxdd(double %extract4556.i, double 1.000000e-200) nounwind
  %2515 = call double @_Z4fmaxdd(double %extract4557.i, double 1.000000e-200) nounwind
  %2516 = call double @_Z4fmaxdd(double %extract4558.i, double 1.000000e-200) nounwind
  %2517 = call double @_Z4fmaxdd(double %extract4559.i, double 1.000000e-200) nounwind
  %2518 = call double @_Z4fmaxdd(double %extract4560.i, double 1.000000e-200) nounwind
  %2519 = call double @_Z4fmaxdd(double %extract4561.i, double 1.000000e-200) nounwind
  %2520 = call double @_Z4fmaxdd(double %extract4562.i, double 1.000000e-200) nounwind
  %2521 = call double @_Z4fmaxdd(double %extract4563.i, double 1.000000e-200) nounwind
  %2522 = call double @_Z4fmaxdd(double %extract4564.i, double 1.000000e-200) nounwind
  %2523 = call double @_Z4fmaxdd(double %extract4565.i, double 1.000000e-200) nounwind
  %2524 = call double @_Z4fmaxdd(double %extract4566.i, double 1.000000e-200) nounwind
  %2525 = call double @_Z4fmaxdd(double %extract4567.i, double 1.000000e-200) nounwind
  %2526 = call double @_Z4fmaxdd(double %extract4568.i, double 1.000000e-200) nounwind
  %2527 = call double @_Z4fmaxdd(double %extract4569.i, double 1.000000e-200) nounwind
  %2528 = call double @_Z4fmaxdd(double %extract4570.i, double 1.000000e-200) nounwind
  %2529 = call double @_Z4fmaxdd(double %extract4571.i, double 1.000000e-200) nounwind
  %2530 = call double @_Z5log10d(double %2514) nounwind
  %2531 = call double @_Z5log10d(double %2515) nounwind
  %2532 = call double @_Z5log10d(double %2516) nounwind
  %2533 = call double @_Z5log10d(double %2517) nounwind
  %2534 = call double @_Z5log10d(double %2518) nounwind
  %2535 = call double @_Z5log10d(double %2519) nounwind
  %2536 = call double @_Z5log10d(double %2520) nounwind
  %2537 = call double @_Z5log10d(double %2521) nounwind
  %2538 = call double @_Z5log10d(double %2522) nounwind
  %2539 = call double @_Z5log10d(double %2523) nounwind
  %2540 = call double @_Z5log10d(double %2524) nounwind
  %2541 = call double @_Z5log10d(double %2525) nounwind
  %2542 = call double @_Z5log10d(double %2526) nounwind
  %2543 = call double @_Z5log10d(double %2527) nounwind
  %2544 = call double @_Z5log10d(double %2528) nounwind
  %2545 = call double @_Z5log10d(double %2529) nounwind
  %temp.vect4700.i = insertelement <16 x double> undef, double %2530, i32 0
  %temp.vect4701.i = insertelement <16 x double> %temp.vect4700.i, double %2531, i32 1
  %temp.vect4702.i = insertelement <16 x double> %temp.vect4701.i, double %2532, i32 2
  %temp.vect4703.i = insertelement <16 x double> %temp.vect4702.i, double %2533, i32 3
  %temp.vect4704.i = insertelement <16 x double> %temp.vect4703.i, double %2534, i32 4
  %temp.vect4705.i = insertelement <16 x double> %temp.vect4704.i, double %2535, i32 5
  %temp.vect4706.i = insertelement <16 x double> %temp.vect4705.i, double %2536, i32 6
  %temp.vect4707.i = insertelement <16 x double> %temp.vect4706.i, double %2537, i32 7
  %temp.vect4708.i = insertelement <16 x double> %temp.vect4707.i, double %2538, i32 8
  %temp.vect4709.i = insertelement <16 x double> %temp.vect4708.i, double %2539, i32 9
  %temp.vect4710.i = insertelement <16 x double> %temp.vect4709.i, double %2540, i32 10
  %temp.vect4711.i = insertelement <16 x double> %temp.vect4710.i, double %2541, i32 11
  %temp.vect4712.i = insertelement <16 x double> %temp.vect4711.i, double %2542, i32 12
  %temp.vect4713.i = insertelement <16 x double> %temp.vect4712.i, double %2543, i32 13
  %temp.vect4714.i = insertelement <16 x double> %temp.vect4713.i, double %2544, i32 14
  %temp.vect4715.i = insertelement <16 x double> %temp.vect4714.i, double %2545, i32 15
  %2546 = fmul <16 x double> %33, <double -1.000000e-03, double -1.000000e-03, double -1.000000e-03, double -1.000000e-03, double -1.000000e-03, double -1.000000e-03, double -1.000000e-03, double -1.000000e-03, double -1.000000e-03, double -1.000000e-03, double -1.000000e-03, double -1.000000e-03, double -1.000000e-03, double -1.000000e-03, double -1.000000e-03, double -1.000000e-03>
  %extract4572.i = extractelement <16 x double> %2546, i32 0
  %extract4573.i = extractelement <16 x double> %2546, i32 1
  %extract4574.i = extractelement <16 x double> %2546, i32 2
  %extract4575.i = extractelement <16 x double> %2546, i32 3
  %extract4576.i = extractelement <16 x double> %2546, i32 4
  %extract4577.i = extractelement <16 x double> %2546, i32 5
  %extract4578.i = extractelement <16 x double> %2546, i32 6
  %extract4579.i = extractelement <16 x double> %2546, i32 7
  %extract4580.i = extractelement <16 x double> %2546, i32 8
  %extract4581.i = extractelement <16 x double> %2546, i32 9
  %extract4582.i = extractelement <16 x double> %2546, i32 10
  %extract4583.i = extractelement <16 x double> %2546, i32 11
  %extract4584.i = extractelement <16 x double> %2546, i32 12
  %extract4585.i = extractelement <16 x double> %2546, i32 13
  %extract4586.i = extractelement <16 x double> %2546, i32 14
  %extract4587.i = extractelement <16 x double> %2546, i32 15
  %2547 = call double @_Z3expd(double %extract4572.i) nounwind
  %2548 = call double @_Z3expd(double %extract4573.i) nounwind
  %2549 = call double @_Z3expd(double %extract4574.i) nounwind
  %2550 = call double @_Z3expd(double %extract4575.i) nounwind
  %2551 = call double @_Z3expd(double %extract4576.i) nounwind
  %2552 = call double @_Z3expd(double %extract4577.i) nounwind
  %2553 = call double @_Z3expd(double %extract4578.i) nounwind
  %2554 = call double @_Z3expd(double %extract4579.i) nounwind
  %2555 = call double @_Z3expd(double %extract4580.i) nounwind
  %2556 = call double @_Z3expd(double %extract4581.i) nounwind
  %2557 = call double @_Z3expd(double %extract4582.i) nounwind
  %2558 = call double @_Z3expd(double %extract4583.i) nounwind
  %2559 = call double @_Z3expd(double %extract4584.i) nounwind
  %2560 = call double @_Z3expd(double %extract4585.i) nounwind
  %2561 = call double @_Z3expd(double %extract4586.i) nounwind
  %2562 = call double @_Z3expd(double %extract4587.i) nounwind
  %temp.vect4588.i = insertelement <16 x double> undef, double %2547, i32 0
  %temp.vect4589.i = insertelement <16 x double> %temp.vect4588.i, double %2548, i32 1
  %temp.vect4590.i = insertelement <16 x double> %temp.vect4589.i, double %2549, i32 2
  %temp.vect4591.i = insertelement <16 x double> %temp.vect4590.i, double %2550, i32 3
  %temp.vect4592.i = insertelement <16 x double> %temp.vect4591.i, double %2551, i32 4
  %temp.vect4593.i = insertelement <16 x double> %temp.vect4592.i, double %2552, i32 5
  %temp.vect4594.i = insertelement <16 x double> %temp.vect4593.i, double %2553, i32 6
  %temp.vect4595.i = insertelement <16 x double> %temp.vect4594.i, double %2554, i32 7
  %temp.vect4596.i = insertelement <16 x double> %temp.vect4595.i, double %2555, i32 8
  %temp.vect4597.i = insertelement <16 x double> %temp.vect4596.i, double %2556, i32 9
  %temp.vect4598.i = insertelement <16 x double> %temp.vect4597.i, double %2557, i32 10
  %temp.vect4599.i = insertelement <16 x double> %temp.vect4598.i, double %2558, i32 11
  %temp.vect4600.i = insertelement <16 x double> %temp.vect4599.i, double %2559, i32 12
  %temp.vect4601.i = insertelement <16 x double> %temp.vect4600.i, double %2560, i32 13
  %temp.vect4602.i = insertelement <16 x double> %temp.vect4601.i, double %2561, i32 14
  %temp.vect4603.i = insertelement <16 x double> %temp.vect4602.i, double %2562, i32 15
  %2563 = fmul <16 x double> %temp.vect4603.i, zeroinitializer
  %2564 = fmul <16 x double> %33, <double 0xBF4903847EA1CEC1, double 0xBF4903847EA1CEC1, double 0xBF4903847EA1CEC1, double 0xBF4903847EA1CEC1, double 0xBF4903847EA1CEC1, double 0xBF4903847EA1CEC1, double 0xBF4903847EA1CEC1, double 0xBF4903847EA1CEC1, double 0xBF4903847EA1CEC1, double 0xBF4903847EA1CEC1, double 0xBF4903847EA1CEC1, double 0xBF4903847EA1CEC1, double 0xBF4903847EA1CEC1, double 0xBF4903847EA1CEC1, double 0xBF4903847EA1CEC1, double 0xBF4903847EA1CEC1>
  %extract4604.i = extractelement <16 x double> %2564, i32 0
  %extract4605.i = extractelement <16 x double> %2564, i32 1
  %extract4606.i = extractelement <16 x double> %2564, i32 2
  %extract4607.i = extractelement <16 x double> %2564, i32 3
  %extract4608.i = extractelement <16 x double> %2564, i32 4
  %extract4609.i = extractelement <16 x double> %2564, i32 5
  %extract4610.i = extractelement <16 x double> %2564, i32 6
  %extract4611.i = extractelement <16 x double> %2564, i32 7
  %extract4612.i = extractelement <16 x double> %2564, i32 8
  %extract4613.i = extractelement <16 x double> %2564, i32 9
  %extract4614.i = extractelement <16 x double> %2564, i32 10
  %extract4615.i = extractelement <16 x double> %2564, i32 11
  %extract4616.i = extractelement <16 x double> %2564, i32 12
  %extract4617.i = extractelement <16 x double> %2564, i32 13
  %extract4618.i = extractelement <16 x double> %2564, i32 14
  %extract4619.i = extractelement <16 x double> %2564, i32 15
  %2565 = call double @_Z3expd(double %extract4604.i) nounwind
  %2566 = call double @_Z3expd(double %extract4605.i) nounwind
  %2567 = call double @_Z3expd(double %extract4606.i) nounwind
  %2568 = call double @_Z3expd(double %extract4607.i) nounwind
  %2569 = call double @_Z3expd(double %extract4608.i) nounwind
  %2570 = call double @_Z3expd(double %extract4609.i) nounwind
  %2571 = call double @_Z3expd(double %extract4610.i) nounwind
  %2572 = call double @_Z3expd(double %extract4611.i) nounwind
  %2573 = call double @_Z3expd(double %extract4612.i) nounwind
  %2574 = call double @_Z3expd(double %extract4613.i) nounwind
  %2575 = call double @_Z3expd(double %extract4614.i) nounwind
  %2576 = call double @_Z3expd(double %extract4615.i) nounwind
  %2577 = call double @_Z3expd(double %extract4616.i) nounwind
  %2578 = call double @_Z3expd(double %extract4617.i) nounwind
  %2579 = call double @_Z3expd(double %extract4618.i) nounwind
  %2580 = call double @_Z3expd(double %extract4619.i) nounwind
  %temp.vect4620.i = insertelement <16 x double> undef, double %2565, i32 0
  %temp.vect4621.i = insertelement <16 x double> %temp.vect4620.i, double %2566, i32 1
  %temp.vect4622.i = insertelement <16 x double> %temp.vect4621.i, double %2567, i32 2
  %temp.vect4623.i = insertelement <16 x double> %temp.vect4622.i, double %2568, i32 3
  %temp.vect4624.i = insertelement <16 x double> %temp.vect4623.i, double %2569, i32 4
  %temp.vect4625.i = insertelement <16 x double> %temp.vect4624.i, double %2570, i32 5
  %temp.vect4626.i = insertelement <16 x double> %temp.vect4625.i, double %2571, i32 6
  %temp.vect4627.i = insertelement <16 x double> %temp.vect4626.i, double %2572, i32 7
  %temp.vect4628.i = insertelement <16 x double> %temp.vect4627.i, double %2573, i32 8
  %temp.vect4629.i = insertelement <16 x double> %temp.vect4628.i, double %2574, i32 9
  %temp.vect4630.i = insertelement <16 x double> %temp.vect4629.i, double %2575, i32 10
  %temp.vect4631.i = insertelement <16 x double> %temp.vect4630.i, double %2576, i32 11
  %temp.vect4632.i = insertelement <16 x double> %temp.vect4631.i, double %2577, i32 12
  %temp.vect4633.i = insertelement <16 x double> %temp.vect4632.i, double %2578, i32 13
  %temp.vect4634.i = insertelement <16 x double> %temp.vect4633.i, double %2579, i32 14
  %temp.vect4635.i = insertelement <16 x double> %temp.vect4634.i, double %2580, i32 15
  %2581 = fadd <16 x double> %2563, %temp.vect4635.i
  %2582 = fmul <16 x double> %1007, <double -4.809700e+04, double -4.809700e+04, double -4.809700e+04, double -4.809700e+04, double -4.809700e+04, double -4.809700e+04, double -4.809700e+04, double -4.809700e+04, double -4.809700e+04, double -4.809700e+04, double -4.809700e+04, double -4.809700e+04, double -4.809700e+04, double -4.809700e+04, double -4.809700e+04, double -4.809700e+04>
  %extract4636.i = extractelement <16 x double> %2582, i32 0
  %extract4637.i = extractelement <16 x double> %2582, i32 1
  %extract4638.i = extractelement <16 x double> %2582, i32 2
  %extract4639.i = extractelement <16 x double> %2582, i32 3
  %extract4640.i = extractelement <16 x double> %2582, i32 4
  %extract4641.i = extractelement <16 x double> %2582, i32 5
  %extract4642.i = extractelement <16 x double> %2582, i32 6
  %extract4643.i = extractelement <16 x double> %2582, i32 7
  %extract4644.i = extractelement <16 x double> %2582, i32 8
  %extract4645.i = extractelement <16 x double> %2582, i32 9
  %extract4646.i = extractelement <16 x double> %2582, i32 10
  %extract4647.i = extractelement <16 x double> %2582, i32 11
  %extract4648.i = extractelement <16 x double> %2582, i32 12
  %extract4649.i = extractelement <16 x double> %2582, i32 13
  %extract4650.i = extractelement <16 x double> %2582, i32 14
  %extract4651.i = extractelement <16 x double> %2582, i32 15
  %2583 = call double @_Z3expd(double %extract4636.i) nounwind
  %2584 = call double @_Z3expd(double %extract4637.i) nounwind
  %2585 = call double @_Z3expd(double %extract4638.i) nounwind
  %2586 = call double @_Z3expd(double %extract4639.i) nounwind
  %2587 = call double @_Z3expd(double %extract4640.i) nounwind
  %2588 = call double @_Z3expd(double %extract4641.i) nounwind
  %2589 = call double @_Z3expd(double %extract4642.i) nounwind
  %2590 = call double @_Z3expd(double %extract4643.i) nounwind
  %2591 = call double @_Z3expd(double %extract4644.i) nounwind
  %2592 = call double @_Z3expd(double %extract4645.i) nounwind
  %2593 = call double @_Z3expd(double %extract4646.i) nounwind
  %2594 = call double @_Z3expd(double %extract4647.i) nounwind
  %2595 = call double @_Z3expd(double %extract4648.i) nounwind
  %2596 = call double @_Z3expd(double %extract4649.i) nounwind
  %2597 = call double @_Z3expd(double %extract4650.i) nounwind
  %2598 = call double @_Z3expd(double %extract4651.i) nounwind
  %temp.vect4652.i = insertelement <16 x double> undef, double %2583, i32 0
  %temp.vect4653.i = insertelement <16 x double> %temp.vect4652.i, double %2584, i32 1
  %temp.vect4654.i = insertelement <16 x double> %temp.vect4653.i, double %2585, i32 2
  %temp.vect4655.i = insertelement <16 x double> %temp.vect4654.i, double %2586, i32 3
  %temp.vect4656.i = insertelement <16 x double> %temp.vect4655.i, double %2587, i32 4
  %temp.vect4657.i = insertelement <16 x double> %temp.vect4656.i, double %2588, i32 5
  %temp.vect4658.i = insertelement <16 x double> %temp.vect4657.i, double %2589, i32 6
  %temp.vect4659.i = insertelement <16 x double> %temp.vect4658.i, double %2590, i32 7
  %temp.vect4660.i = insertelement <16 x double> %temp.vect4659.i, double %2591, i32 8
  %temp.vect4661.i = insertelement <16 x double> %temp.vect4660.i, double %2592, i32 9
  %temp.vect4662.i = insertelement <16 x double> %temp.vect4661.i, double %2593, i32 10
  %temp.vect4663.i = insertelement <16 x double> %temp.vect4662.i, double %2594, i32 11
  %temp.vect4664.i = insertelement <16 x double> %temp.vect4663.i, double %2595, i32 12
  %temp.vect4665.i = insertelement <16 x double> %temp.vect4664.i, double %2596, i32 13
  %temp.vect4666.i = insertelement <16 x double> %temp.vect4665.i, double %2597, i32 14
  %temp.vect4667.i = insertelement <16 x double> %temp.vect4666.i, double %2598, i32 15
  %2599 = fadd <16 x double> %2581, %temp.vect4667.i
  %extract4668.i = extractelement <16 x double> %2599, i32 0
  %extract4669.i = extractelement <16 x double> %2599, i32 1
  %extract4670.i = extractelement <16 x double> %2599, i32 2
  %extract4671.i = extractelement <16 x double> %2599, i32 3
  %extract4672.i = extractelement <16 x double> %2599, i32 4
  %extract4673.i = extractelement <16 x double> %2599, i32 5
  %extract4674.i = extractelement <16 x double> %2599, i32 6
  %extract4675.i = extractelement <16 x double> %2599, i32 7
  %extract4676.i = extractelement <16 x double> %2599, i32 8
  %extract4677.i = extractelement <16 x double> %2599, i32 9
  %extract4678.i = extractelement <16 x double> %2599, i32 10
  %extract4679.i = extractelement <16 x double> %2599, i32 11
  %extract4680.i = extractelement <16 x double> %2599, i32 12
  %extract4681.i = extractelement <16 x double> %2599, i32 13
  %extract4682.i = extractelement <16 x double> %2599, i32 14
  %extract4683.i = extractelement <16 x double> %2599, i32 15
  %2600 = call double @_Z4fmaxdd(double %extract4668.i, double 1.000000e-200) nounwind
  %2601 = call double @_Z4fmaxdd(double %extract4669.i, double 1.000000e-200) nounwind
  %2602 = call double @_Z4fmaxdd(double %extract4670.i, double 1.000000e-200) nounwind
  %2603 = call double @_Z4fmaxdd(double %extract4671.i, double 1.000000e-200) nounwind
  %2604 = call double @_Z4fmaxdd(double %extract4672.i, double 1.000000e-200) nounwind
  %2605 = call double @_Z4fmaxdd(double %extract4673.i, double 1.000000e-200) nounwind
  %2606 = call double @_Z4fmaxdd(double %extract4674.i, double 1.000000e-200) nounwind
  %2607 = call double @_Z4fmaxdd(double %extract4675.i, double 1.000000e-200) nounwind
  %2608 = call double @_Z4fmaxdd(double %extract4676.i, double 1.000000e-200) nounwind
  %2609 = call double @_Z4fmaxdd(double %extract4677.i, double 1.000000e-200) nounwind
  %2610 = call double @_Z4fmaxdd(double %extract4678.i, double 1.000000e-200) nounwind
  %2611 = call double @_Z4fmaxdd(double %extract4679.i, double 1.000000e-200) nounwind
  %2612 = call double @_Z4fmaxdd(double %extract4680.i, double 1.000000e-200) nounwind
  %2613 = call double @_Z4fmaxdd(double %extract4681.i, double 1.000000e-200) nounwind
  %2614 = call double @_Z4fmaxdd(double %extract4682.i, double 1.000000e-200) nounwind
  %2615 = call double @_Z4fmaxdd(double %extract4683.i, double 1.000000e-200) nounwind
  %2616 = call double @_Z5log10d(double %2600) nounwind
  %2617 = call double @_Z5log10d(double %2601) nounwind
  %2618 = call double @_Z5log10d(double %2602) nounwind
  %2619 = call double @_Z5log10d(double %2603) nounwind
  %2620 = call double @_Z5log10d(double %2604) nounwind
  %2621 = call double @_Z5log10d(double %2605) nounwind
  %2622 = call double @_Z5log10d(double %2606) nounwind
  %2623 = call double @_Z5log10d(double %2607) nounwind
  %2624 = call double @_Z5log10d(double %2608) nounwind
  %2625 = call double @_Z5log10d(double %2609) nounwind
  %2626 = call double @_Z5log10d(double %2610) nounwind
  %2627 = call double @_Z5log10d(double %2611) nounwind
  %2628 = call double @_Z5log10d(double %2612) nounwind
  %2629 = call double @_Z5log10d(double %2613) nounwind
  %2630 = call double @_Z5log10d(double %2614) nounwind
  %2631 = call double @_Z5log10d(double %2615) nounwind
  %temp.vect4684.i = insertelement <16 x double> undef, double %2616, i32 0
  %temp.vect4685.i = insertelement <16 x double> %temp.vect4684.i, double %2617, i32 1
  %temp.vect4686.i = insertelement <16 x double> %temp.vect4685.i, double %2618, i32 2
  %temp.vect4687.i = insertelement <16 x double> %temp.vect4686.i, double %2619, i32 3
  %temp.vect4688.i = insertelement <16 x double> %temp.vect4687.i, double %2620, i32 4
  %temp.vect4689.i = insertelement <16 x double> %temp.vect4688.i, double %2621, i32 5
  %temp.vect4690.i = insertelement <16 x double> %temp.vect4689.i, double %2622, i32 6
  %temp.vect4691.i = insertelement <16 x double> %temp.vect4690.i, double %2623, i32 7
  %temp.vect4692.i = insertelement <16 x double> %temp.vect4691.i, double %2624, i32 8
  %temp.vect4693.i = insertelement <16 x double> %temp.vect4692.i, double %2625, i32 9
  %temp.vect4694.i = insertelement <16 x double> %temp.vect4693.i, double %2626, i32 10
  %temp.vect4695.i = insertelement <16 x double> %temp.vect4694.i, double %2627, i32 11
  %temp.vect4696.i = insertelement <16 x double> %temp.vect4695.i, double %2628, i32 12
  %temp.vect4697.i = insertelement <16 x double> %temp.vect4696.i, double %2629, i32 13
  %temp.vect4698.i = insertelement <16 x double> %temp.vect4697.i, double %2630, i32 14
  %temp.vect4699.i = insertelement <16 x double> %temp.vect4698.i, double %2631, i32 15
  %2632 = fmul <16 x double> %temp.vect4699.i, <double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00>
  %2633 = fsub <16 x double> <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>, %2632
  %2634 = fmul <16 x double> %temp.vect4699.i, <double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01>
  %2635 = fadd <16 x double> %2634, <double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01>
  %2636 = fsub <16 x double> %temp.vect4715.i, %2635
  %2637 = fmul <16 x double> %2636, <double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01>
  %2638 = fsub <16 x double> %2633, %2637
  %2639 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2638
  %2640 = fmul <16 x double> %2636, %2639
  %2641 = fmul <16 x double> %2640, %2640
  %2642 = fadd <16 x double> %2641, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %2643 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2642
  %2644 = fmul <16 x double> %temp.vect4699.i, %2643
  %extract4716.i = extractelement <16 x double> %2644, i32 0
  %extract4717.i = extractelement <16 x double> %2644, i32 1
  %extract4718.i = extractelement <16 x double> %2644, i32 2
  %extract4719.i = extractelement <16 x double> %2644, i32 3
  %extract4720.i = extractelement <16 x double> %2644, i32 4
  %extract4721.i = extractelement <16 x double> %2644, i32 5
  %extract4722.i = extractelement <16 x double> %2644, i32 6
  %extract4723.i = extractelement <16 x double> %2644, i32 7
  %extract4724.i = extractelement <16 x double> %2644, i32 8
  %extract4725.i = extractelement <16 x double> %2644, i32 9
  %extract4726.i = extractelement <16 x double> %2644, i32 10
  %extract4727.i = extractelement <16 x double> %2644, i32 11
  %extract4728.i = extractelement <16 x double> %2644, i32 12
  %extract4729.i = extractelement <16 x double> %2644, i32 13
  %extract4730.i = extractelement <16 x double> %2644, i32 14
  %extract4731.i = extractelement <16 x double> %2644, i32 15
  %2645 = call double @_Z5exp10d(double %extract4716.i) nounwind
  %2646 = call double @_Z5exp10d(double %extract4717.i) nounwind
  %2647 = call double @_Z5exp10d(double %extract4718.i) nounwind
  %2648 = call double @_Z5exp10d(double %extract4719.i) nounwind
  %2649 = call double @_Z5exp10d(double %extract4720.i) nounwind
  %2650 = call double @_Z5exp10d(double %extract4721.i) nounwind
  %2651 = call double @_Z5exp10d(double %extract4722.i) nounwind
  %2652 = call double @_Z5exp10d(double %extract4723.i) nounwind
  %2653 = call double @_Z5exp10d(double %extract4724.i) nounwind
  %2654 = call double @_Z5exp10d(double %extract4725.i) nounwind
  %2655 = call double @_Z5exp10d(double %extract4726.i) nounwind
  %2656 = call double @_Z5exp10d(double %extract4727.i) nounwind
  %2657 = call double @_Z5exp10d(double %extract4728.i) nounwind
  %2658 = call double @_Z5exp10d(double %extract4729.i) nounwind
  %2659 = call double @_Z5exp10d(double %extract4730.i) nounwind
  %2660 = call double @_Z5exp10d(double %extract4731.i) nounwind
  %temp.vect4732.i = insertelement <16 x double> undef, double %2645, i32 0
  %temp.vect4733.i = insertelement <16 x double> %temp.vect4732.i, double %2646, i32 1
  %temp.vect4734.i = insertelement <16 x double> %temp.vect4733.i, double %2647, i32 2
  %temp.vect4735.i = insertelement <16 x double> %temp.vect4734.i, double %2648, i32 3
  %temp.vect4736.i = insertelement <16 x double> %temp.vect4735.i, double %2649, i32 4
  %temp.vect4737.i = insertelement <16 x double> %temp.vect4736.i, double %2650, i32 5
  %temp.vect4738.i = insertelement <16 x double> %temp.vect4737.i, double %2651, i32 6
  %temp.vect4739.i = insertelement <16 x double> %temp.vect4738.i, double %2652, i32 7
  %temp.vect4740.i = insertelement <16 x double> %temp.vect4739.i, double %2653, i32 8
  %temp.vect4741.i = insertelement <16 x double> %temp.vect4740.i, double %2654, i32 9
  %temp.vect4742.i = insertelement <16 x double> %temp.vect4741.i, double %2655, i32 10
  %temp.vect4743.i = insertelement <16 x double> %temp.vect4742.i, double %2656, i32 11
  %temp.vect4744.i = insertelement <16 x double> %temp.vect4743.i, double %2657, i32 12
  %temp.vect4745.i = insertelement <16 x double> %temp.vect4744.i, double %2658, i32 13
  %temp.vect4746.i = insertelement <16 x double> %temp.vect4745.i, double %2659, i32 14
  %temp.vect4747.i = insertelement <16 x double> %temp.vect4746.i, double %2660, i32 15
  %2661 = fmul <16 x double> %temp.vect4747.i, %2513
  %2662 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2663 = load i64* %2662, align 8
  %2664 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2665 = load i64* %2664, align 8
  %2666 = add i64 %2663, %2665
  %extract4750.i = add i64 %2666, 20901888
  %2667 = getelementptr inbounds double addrspace(1)* %7, i64 %extract4750.i
  %ptrTypeCast4766.i = bitcast double addrspace(1)* %2667 to <16 x double> addrspace(1)*
  %2668 = load <16 x double> addrspace(1)* %ptrTypeCast4766.i, align 8
  %2669 = fmul <16 x double> %2668, %2661
  %2670 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2671 = load i64* %2670, align 8
  %2672 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2673 = load i64* %2672, align 8
  %2674 = add i64 %2671, %2673
  %extract4769.i = add i64 %2674, 20901888
  %2675 = getelementptr inbounds double addrspace(1)* %7, i64 %extract4769.i
  %ptrTypeCast4785.i = bitcast double addrspace(1)* %2675 to <16 x double> addrspace(1)*
  store <16 x double> %2669, <16 x double> addrspace(1)* %ptrTypeCast4785.i, align 8
  %2676 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2677 = load i64* %2676, align 8
  %2678 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2679 = load i64* %2678, align 8
  %2680 = add i64 %2677, %2679
  %extract4788.i = add i64 %2680, 20901888
  %2681 = getelementptr inbounds double addrspace(1)* %10, i64 %extract4788.i
  %ptrTypeCast4804.i = bitcast double addrspace(1)* %2681 to <16 x double> addrspace(1)*
  %2682 = load <16 x double> addrspace(1)* %ptrTypeCast4804.i, align 8
  %2683 = fmul <16 x double> %2682, %2661
  %2684 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2685 = load i64* %2684, align 8
  %2686 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2687 = load i64* %2686, align 8
  %2688 = add i64 %2685, %2687
  %extract4807.i = add i64 %2688, 20901888
  %2689 = getelementptr inbounds double addrspace(1)* %10, i64 %extract4807.i
  %ptrTypeCast4823.i = bitcast double addrspace(1)* %2689 to <16 x double> addrspace(1)*
  store <16 x double> %2683, <16 x double> addrspace(1)* %ptrTypeCast4823.i, align 8
  %check.WI.iter.i = icmp ult i64 %CurrWI..0.i, %25
  br i1 %check.WI.iter.i, label %thenBB.i, label %____Vectorized_.ratxb_kernel_separated_args.exit

thenBB.i:                                         ; preds = %._crit_edge.i
  %"CurrWI++.i" = add nuw i64 %CurrWI..0.i, 1
  br label %SyncBB.i

____Vectorized_.ratxb_kernel_separated_args.exit: ; preds = %._crit_edge.i
  ret void
}

!opencl.kernels = !{!0}

!0 = metadata !{void (double addrspace(1)*, double addrspace(1)*, double addrspace(1)*, double addrspace(1)*, double addrspace(1)*, double, i8 addrspace(3)*, %struct.WorkDim*, i64*, %struct.PaddedDimId*, %struct.PaddedDimId*, i64*, i64, i8*, i64*)* @__ratxb_kernel_separated_args, metadata !1, metadata !1, metadata !"", metadata !"double const __attribute__((address_space(1))) *, double const __attribute__((address_space(1))) *, double __attribute__((address_space(1))) *, double __attribute__((address_space(1))) *, double const __attribute__((address_space(1))) *, double const", metadata !"opencl_ratxb_kernel_locals_anchor", void (i8*)* @ratxb_kernel}
!1 = metadata !{i32 0, i32 0, i32 0}
