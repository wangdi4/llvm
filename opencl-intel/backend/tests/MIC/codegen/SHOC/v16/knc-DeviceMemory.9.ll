; XFAIL: win32
;
; RUN: llc < %s -mtriple=x86_64-pc-linux \
; RUN:       -march=y86-64 -mcpu=knc
;
;
; ModuleID = 'Program'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64"
target triple = "x86_64-unknown-linux-gnu"

%struct.PaddedDimId = type <{ [4 x i64] }>
%struct.WorkDim = type { i32, [3 x i64], [3 x i64], [3 x i64], [3 x i64] }

declare void @__readGlobalMemoryUnit_original(float addrspace(1)* nocapture, float addrspace(1)* nocapture, i32) nounwind

declare i64 @get_global_id(i32)

declare i64 @get_global_size(i32)

declare i64 @get_group_id(i32)

declare void @____Vectorized_.readGlobalMemoryUnit_original(float addrspace(1)* nocapture, float addrspace(1)* nocapture, i32) nounwind

define i1 @allOne(i1 %pred) {
entry:
  ret i1 %pred
}

define i1 @allZero(i1 %t) {
entry:
  ret i1 %t
}

declare void @dummybarrier.()

declare void @barrier(i64)

declare i8* @get_special_buffer.()

declare i64 @get_iter_count.()

declare i64 @get_new_global_id.(i32, i64)

define void @__readGlobalMemoryUnit_separated_args(float addrspace(1)* nocapture %data, float addrspace(1)* nocapture %output, i32 %size, i8 addrspace(3)* %pLocalMem, %struct.WorkDim* %pWorkDim, i64* %pWGId, %struct.PaddedDimId* %pBaseGlbId, %struct.PaddedDimId* %pLocalIds, i64* %contextpointer, i64 %iterCount, i8* %pSpecialBuf, i64* %pCurrWI) nounwind alwaysinline {
bb.nph:
  %0 = add nsw i32 %size, -1
  br label %SyncBB4

SyncBB4:                                          ; preds = %thenBB, %bb.nph
  %CurrWI..0 = phi i64 [ 0, %bb.nph ], [ %"CurrWI++", %thenBB ]
  %1 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2 = load i64* %1, align 8
  %3 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %4 = load i64* %3, align 8
  %5 = add i64 %2, %4
  %6 = trunc i64 %5 to i32
  %7 = shl i32 %6, 10
  br label %8

; <label>:8                                       ; preds = %8, %SyncBB4
  %s.03 = phi i32 [ %7, %SyncBB4 ], [ %106, %8 ]
  %sum.02 = phi float [ 0.000000e+00, %SyncBB4 ], [ %103, %8 ]
  %j.01 = phi i32 [ 0, %SyncBB4 ], [ %104, %8 ]
  %9 = and i32 %s.03, %0
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds float addrspace(1)* %data, i64 %10
  %12 = load float addrspace(1)* %11, align 4
  %13 = add nsw i32 %s.03, 1
  %14 = and i32 %13, %0
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds float addrspace(1)* %data, i64 %15
  %17 = load float addrspace(1)* %16, align 4
  %18 = add nsw i32 %s.03, 2
  %19 = and i32 %18, %0
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds float addrspace(1)* %data, i64 %20
  %22 = load float addrspace(1)* %21, align 4
  %23 = add nsw i32 %s.03, 3
  %24 = and i32 %23, %0
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds float addrspace(1)* %data, i64 %25
  %27 = load float addrspace(1)* %26, align 4
  %28 = add nsw i32 %s.03, 4
  %29 = and i32 %28, %0
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds float addrspace(1)* %data, i64 %30
  %32 = load float addrspace(1)* %31, align 4
  %33 = add nsw i32 %s.03, 5
  %34 = and i32 %33, %0
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds float addrspace(1)* %data, i64 %35
  %37 = load float addrspace(1)* %36, align 4
  %38 = add nsw i32 %s.03, 6
  %39 = and i32 %38, %0
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds float addrspace(1)* %data, i64 %40
  %42 = load float addrspace(1)* %41, align 4
  %43 = add nsw i32 %s.03, 7
  %44 = and i32 %43, %0
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds float addrspace(1)* %data, i64 %45
  %47 = load float addrspace(1)* %46, align 4
  %48 = add nsw i32 %s.03, 8
  %49 = and i32 %48, %0
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds float addrspace(1)* %data, i64 %50
  %52 = load float addrspace(1)* %51, align 4
  %53 = add nsw i32 %s.03, 9
  %54 = and i32 %53, %0
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds float addrspace(1)* %data, i64 %55
  %57 = load float addrspace(1)* %56, align 4
  %58 = add nsw i32 %s.03, 10
  %59 = and i32 %58, %0
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds float addrspace(1)* %data, i64 %60
  %62 = load float addrspace(1)* %61, align 4
  %63 = add nsw i32 %s.03, 11
  %64 = and i32 %63, %0
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds float addrspace(1)* %data, i64 %65
  %67 = load float addrspace(1)* %66, align 4
  %68 = add nsw i32 %s.03, 12
  %69 = and i32 %68, %0
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds float addrspace(1)* %data, i64 %70
  %72 = load float addrspace(1)* %71, align 4
  %73 = add nsw i32 %s.03, 13
  %74 = and i32 %73, %0
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds float addrspace(1)* %data, i64 %75
  %77 = load float addrspace(1)* %76, align 4
  %78 = add nsw i32 %s.03, 14
  %79 = and i32 %78, %0
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds float addrspace(1)* %data, i64 %80
  %82 = load float addrspace(1)* %81, align 4
  %83 = add nsw i32 %s.03, 15
  %84 = and i32 %83, %0
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds float addrspace(1)* %data, i64 %85
  %87 = load float addrspace(1)* %86, align 4
  %88 = fadd float %12, %17
  %89 = fadd float %88, %22
  %90 = fadd float %89, %27
  %91 = fadd float %90, %32
  %92 = fadd float %91, %37
  %93 = fadd float %92, %42
  %94 = fadd float %93, %47
  %95 = fadd float %94, %52
  %96 = fadd float %95, %57
  %97 = fadd float %96, %62
  %98 = fadd float %97, %67
  %99 = fadd float %98, %72
  %100 = fadd float %99, %77
  %101 = fadd float %100, %82
  %102 = fadd float %101, %87
  %103 = fadd float %sum.02, %102
  %104 = add nsw i32 %j.01, 1
  %105 = add nsw i32 %s.03, 16
  %106 = and i32 %105, %0
  %exitcond = icmp eq i32 %104, 512
  br i1 %exitcond, label %._crit_edge, label %8

._crit_edge:                                      ; preds = %8
  %107 = sext i32 %6 to i64
  %108 = getelementptr inbounds float addrspace(1)* %output, i64 %107
  store float %103, float addrspace(1)* %108, align 4
  %check.WI.iter = icmp ult i64 %CurrWI..0, %iterCount
  br i1 %check.WI.iter, label %thenBB, label %SyncBB

thenBB:                                           ; preds = %._crit_edge
  %"CurrWI++" = add nuw i64 %CurrWI..0, 1
  br label %SyncBB4

SyncBB:                                           ; preds = %._crit_edge
  ret void
}

define void @____Vectorized_.readGlobalMemoryUnit_separated_args(float addrspace(1)* nocapture %data, float addrspace(1)* nocapture %output, i32 %size, i8 addrspace(3)* %pLocalMem, %struct.WorkDim* %pWorkDim, i64* %pWGId, %struct.PaddedDimId* %pBaseGlbId, %struct.PaddedDimId* %pLocalIds, i64* %contextpointer, i64 %iterCount, i8* %pSpecialBuf, i64* %pCurrWI) nounwind alwaysinline {
bb.nph:
  %0 = add nsw i32 %size, -1
  %temp = insertelement <16 x i32> undef, i32 %0, i32 0
  %vector = shufflevector <16 x i32> %temp, <16 x i32> undef, <16 x i32> zeroinitializer
  br label %SyncBB528

SyncBB528:                                        ; preds = %thenBB, %bb.nph
  %CurrWI..0 = phi i64 [ 0, %bb.nph ], [ %"CurrWI++", %thenBB ]
  %1 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2 = load i64* %1, align 8
  %3 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %4 = load i64* %3, align 8
  %5 = add i64 %2, %4
  %broadcast1 = insertelement <16 x i64> undef, i64 %5, i32 0
  %broadcast2 = shufflevector <16 x i64> %broadcast1, <16 x i64> undef, <16 x i32> zeroinitializer
  %6 = add <16 x i64> %broadcast2, <i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8, i64 9, i64 10, i64 11, i64 12, i64 13, i64 14, i64 15>
  %7 = trunc <16 x i64> %6 to <16 x i32>
  %8 = shl <16 x i32> %7, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  br label %9

; <label>:9                                       ; preds = %9, %SyncBB528
  %vectorPHI = phi <16 x i32> [ %8, %SyncBB528 ], [ %1083, %9 ]
  %vectorPHI1 = phi <16 x float> [ zeroinitializer, %SyncBB528 ], [ %1080, %9 ]
  %j.01 = phi i32 [ 0, %SyncBB528 ], [ %1081, %9 ]
  %10 = and <16 x i32> %vectorPHI, %vector
  %11 = extractelement <16 x i32> %10, i32 0
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds float addrspace(1)* %data, i64 %12
  %14 = extractelement <16 x i32> %10, i32 1
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds float addrspace(1)* %data, i64 %15
  %17 = extractelement <16 x i32> %10, i32 2
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds float addrspace(1)* %data, i64 %18
  %20 = extractelement <16 x i32> %10, i32 3
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds float addrspace(1)* %data, i64 %21
  %23 = extractelement <16 x i32> %10, i32 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds float addrspace(1)* %data, i64 %24
  %26 = extractelement <16 x i32> %10, i32 5
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds float addrspace(1)* %data, i64 %27
  %29 = extractelement <16 x i32> %10, i32 6
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds float addrspace(1)* %data, i64 %30
  %32 = extractelement <16 x i32> %10, i32 7
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds float addrspace(1)* %data, i64 %33
  %35 = extractelement <16 x i32> %10, i32 8
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds float addrspace(1)* %data, i64 %36
  %38 = extractelement <16 x i32> %10, i32 9
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds float addrspace(1)* %data, i64 %39
  %41 = extractelement <16 x i32> %10, i32 10
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds float addrspace(1)* %data, i64 %42
  %44 = extractelement <16 x i32> %10, i32 11
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds float addrspace(1)* %data, i64 %45
  %47 = extractelement <16 x i32> %10, i32 12
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds float addrspace(1)* %data, i64 %48
  %50 = extractelement <16 x i32> %10, i32 13
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds float addrspace(1)* %data, i64 %51
  %53 = extractelement <16 x i32> %10, i32 14
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds float addrspace(1)* %data, i64 %54
  %56 = extractelement <16 x i32> %10, i32 15
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds float addrspace(1)* %data, i64 %57
  %59 = load float addrspace(1)* %13, align 4
  %60 = load float addrspace(1)* %16, align 4
  %61 = load float addrspace(1)* %19, align 4
  %62 = load float addrspace(1)* %22, align 4
  %63 = load float addrspace(1)* %25, align 4
  %64 = load float addrspace(1)* %28, align 4
  %65 = load float addrspace(1)* %31, align 4
  %66 = load float addrspace(1)* %34, align 4
  %67 = load float addrspace(1)* %37, align 4
  %68 = load float addrspace(1)* %40, align 4
  %69 = load float addrspace(1)* %43, align 4
  %70 = load float addrspace(1)* %46, align 4
  %71 = load float addrspace(1)* %49, align 4
  %72 = load float addrspace(1)* %52, align 4
  %73 = load float addrspace(1)* %55, align 4
  %74 = load float addrspace(1)* %58, align 4
  %temp.vect = insertelement <16 x float> undef, float %59, i32 0
  %temp.vect257 = insertelement <16 x float> %temp.vect, float %60, i32 1
  %temp.vect258 = insertelement <16 x float> %temp.vect257, float %61, i32 2
  %temp.vect259 = insertelement <16 x float> %temp.vect258, float %62, i32 3
  %temp.vect260 = insertelement <16 x float> %temp.vect259, float %63, i32 4
  %temp.vect261 = insertelement <16 x float> %temp.vect260, float %64, i32 5
  %temp.vect262 = insertelement <16 x float> %temp.vect261, float %65, i32 6
  %temp.vect263 = insertelement <16 x float> %temp.vect262, float %66, i32 7
  %temp.vect264 = insertelement <16 x float> %temp.vect263, float %67, i32 8
  %temp.vect265 = insertelement <16 x float> %temp.vect264, float %68, i32 9
  %temp.vect266 = insertelement <16 x float> %temp.vect265, float %69, i32 10
  %temp.vect267 = insertelement <16 x float> %temp.vect266, float %70, i32 11
  %temp.vect268 = insertelement <16 x float> %temp.vect267, float %71, i32 12
  %temp.vect269 = insertelement <16 x float> %temp.vect268, float %72, i32 13
  %temp.vect270 = insertelement <16 x float> %temp.vect269, float %73, i32 14
  %temp.vect271 = insertelement <16 x float> %temp.vect270, float %74, i32 15
  %75 = add nsw <16 x i32> %vectorPHI, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %76 = and <16 x i32> %75, %vector
  %77 = extractelement <16 x i32> %76, i32 0
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds float addrspace(1)* %data, i64 %78
  %80 = extractelement <16 x i32> %76, i32 1
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds float addrspace(1)* %data, i64 %81
  %83 = extractelement <16 x i32> %76, i32 2
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds float addrspace(1)* %data, i64 %84
  %86 = extractelement <16 x i32> %76, i32 3
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds float addrspace(1)* %data, i64 %87
  %89 = extractelement <16 x i32> %76, i32 4
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds float addrspace(1)* %data, i64 %90
  %92 = extractelement <16 x i32> %76, i32 5
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds float addrspace(1)* %data, i64 %93
  %95 = extractelement <16 x i32> %76, i32 6
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds float addrspace(1)* %data, i64 %96
  %98 = extractelement <16 x i32> %76, i32 7
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds float addrspace(1)* %data, i64 %99
  %101 = extractelement <16 x i32> %76, i32 8
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds float addrspace(1)* %data, i64 %102
  %104 = extractelement <16 x i32> %76, i32 9
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds float addrspace(1)* %data, i64 %105
  %107 = extractelement <16 x i32> %76, i32 10
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds float addrspace(1)* %data, i64 %108
  %110 = extractelement <16 x i32> %76, i32 11
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds float addrspace(1)* %data, i64 %111
  %113 = extractelement <16 x i32> %76, i32 12
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds float addrspace(1)* %data, i64 %114
  %116 = extractelement <16 x i32> %76, i32 13
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds float addrspace(1)* %data, i64 %117
  %119 = extractelement <16 x i32> %76, i32 14
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds float addrspace(1)* %data, i64 %120
  %122 = extractelement <16 x i32> %76, i32 15
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds float addrspace(1)* %data, i64 %123
  %125 = load float addrspace(1)* %79, align 4
  %126 = load float addrspace(1)* %82, align 4
  %127 = load float addrspace(1)* %85, align 4
  %128 = load float addrspace(1)* %88, align 4
  %129 = load float addrspace(1)* %91, align 4
  %130 = load float addrspace(1)* %94, align 4
  %131 = load float addrspace(1)* %97, align 4
  %132 = load float addrspace(1)* %100, align 4
  %133 = load float addrspace(1)* %103, align 4
  %134 = load float addrspace(1)* %106, align 4
  %135 = load float addrspace(1)* %109, align 4
  %136 = load float addrspace(1)* %112, align 4
  %137 = load float addrspace(1)* %115, align 4
  %138 = load float addrspace(1)* %118, align 4
  %139 = load float addrspace(1)* %121, align 4
  %140 = load float addrspace(1)* %124, align 4
  %temp.vect272 = insertelement <16 x float> undef, float %125, i32 0
  %temp.vect273 = insertelement <16 x float> %temp.vect272, float %126, i32 1
  %temp.vect274 = insertelement <16 x float> %temp.vect273, float %127, i32 2
  %temp.vect275 = insertelement <16 x float> %temp.vect274, float %128, i32 3
  %temp.vect276 = insertelement <16 x float> %temp.vect275, float %129, i32 4
  %temp.vect277 = insertelement <16 x float> %temp.vect276, float %130, i32 5
  %temp.vect278 = insertelement <16 x float> %temp.vect277, float %131, i32 6
  %temp.vect279 = insertelement <16 x float> %temp.vect278, float %132, i32 7
  %temp.vect280 = insertelement <16 x float> %temp.vect279, float %133, i32 8
  %temp.vect281 = insertelement <16 x float> %temp.vect280, float %134, i32 9
  %temp.vect282 = insertelement <16 x float> %temp.vect281, float %135, i32 10
  %temp.vect283 = insertelement <16 x float> %temp.vect282, float %136, i32 11
  %temp.vect284 = insertelement <16 x float> %temp.vect283, float %137, i32 12
  %temp.vect285 = insertelement <16 x float> %temp.vect284, float %138, i32 13
  %temp.vect286 = insertelement <16 x float> %temp.vect285, float %139, i32 14
  %temp.vect287 = insertelement <16 x float> %temp.vect286, float %140, i32 15
  %141 = add nsw <16 x i32> %vectorPHI, <i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2>
  %142 = and <16 x i32> %141, %vector
  %143 = extractelement <16 x i32> %142, i32 0
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds float addrspace(1)* %data, i64 %144
  %146 = extractelement <16 x i32> %142, i32 1
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds float addrspace(1)* %data, i64 %147
  %149 = extractelement <16 x i32> %142, i32 2
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds float addrspace(1)* %data, i64 %150
  %152 = extractelement <16 x i32> %142, i32 3
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds float addrspace(1)* %data, i64 %153
  %155 = extractelement <16 x i32> %142, i32 4
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds float addrspace(1)* %data, i64 %156
  %158 = extractelement <16 x i32> %142, i32 5
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds float addrspace(1)* %data, i64 %159
  %161 = extractelement <16 x i32> %142, i32 6
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds float addrspace(1)* %data, i64 %162
  %164 = extractelement <16 x i32> %142, i32 7
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds float addrspace(1)* %data, i64 %165
  %167 = extractelement <16 x i32> %142, i32 8
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds float addrspace(1)* %data, i64 %168
  %170 = extractelement <16 x i32> %142, i32 9
  %171 = sext i32 %170 to i64
  %172 = getelementptr inbounds float addrspace(1)* %data, i64 %171
  %173 = extractelement <16 x i32> %142, i32 10
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds float addrspace(1)* %data, i64 %174
  %176 = extractelement <16 x i32> %142, i32 11
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds float addrspace(1)* %data, i64 %177
  %179 = extractelement <16 x i32> %142, i32 12
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds float addrspace(1)* %data, i64 %180
  %182 = extractelement <16 x i32> %142, i32 13
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds float addrspace(1)* %data, i64 %183
  %185 = extractelement <16 x i32> %142, i32 14
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds float addrspace(1)* %data, i64 %186
  %188 = extractelement <16 x i32> %142, i32 15
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds float addrspace(1)* %data, i64 %189
  %191 = load float addrspace(1)* %145, align 4
  %192 = load float addrspace(1)* %148, align 4
  %193 = load float addrspace(1)* %151, align 4
  %194 = load float addrspace(1)* %154, align 4
  %195 = load float addrspace(1)* %157, align 4
  %196 = load float addrspace(1)* %160, align 4
  %197 = load float addrspace(1)* %163, align 4
  %198 = load float addrspace(1)* %166, align 4
  %199 = load float addrspace(1)* %169, align 4
  %200 = load float addrspace(1)* %172, align 4
  %201 = load float addrspace(1)* %175, align 4
  %202 = load float addrspace(1)* %178, align 4
  %203 = load float addrspace(1)* %181, align 4
  %204 = load float addrspace(1)* %184, align 4
  %205 = load float addrspace(1)* %187, align 4
  %206 = load float addrspace(1)* %190, align 4
  %temp.vect288 = insertelement <16 x float> undef, float %191, i32 0
  %temp.vect289 = insertelement <16 x float> %temp.vect288, float %192, i32 1
  %temp.vect290 = insertelement <16 x float> %temp.vect289, float %193, i32 2
  %temp.vect291 = insertelement <16 x float> %temp.vect290, float %194, i32 3
  %temp.vect292 = insertelement <16 x float> %temp.vect291, float %195, i32 4
  %temp.vect293 = insertelement <16 x float> %temp.vect292, float %196, i32 5
  %temp.vect294 = insertelement <16 x float> %temp.vect293, float %197, i32 6
  %temp.vect295 = insertelement <16 x float> %temp.vect294, float %198, i32 7
  %temp.vect296 = insertelement <16 x float> %temp.vect295, float %199, i32 8
  %temp.vect297 = insertelement <16 x float> %temp.vect296, float %200, i32 9
  %temp.vect298 = insertelement <16 x float> %temp.vect297, float %201, i32 10
  %temp.vect299 = insertelement <16 x float> %temp.vect298, float %202, i32 11
  %temp.vect300 = insertelement <16 x float> %temp.vect299, float %203, i32 12
  %temp.vect301 = insertelement <16 x float> %temp.vect300, float %204, i32 13
  %temp.vect302 = insertelement <16 x float> %temp.vect301, float %205, i32 14
  %temp.vect303 = insertelement <16 x float> %temp.vect302, float %206, i32 15
  %207 = add nsw <16 x i32> %vectorPHI, <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>
  %208 = and <16 x i32> %207, %vector
  %209 = extractelement <16 x i32> %208, i32 0
  %210 = sext i32 %209 to i64
  %211 = getelementptr inbounds float addrspace(1)* %data, i64 %210
  %212 = extractelement <16 x i32> %208, i32 1
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds float addrspace(1)* %data, i64 %213
  %215 = extractelement <16 x i32> %208, i32 2
  %216 = sext i32 %215 to i64
  %217 = getelementptr inbounds float addrspace(1)* %data, i64 %216
  %218 = extractelement <16 x i32> %208, i32 3
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds float addrspace(1)* %data, i64 %219
  %221 = extractelement <16 x i32> %208, i32 4
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds float addrspace(1)* %data, i64 %222
  %224 = extractelement <16 x i32> %208, i32 5
  %225 = sext i32 %224 to i64
  %226 = getelementptr inbounds float addrspace(1)* %data, i64 %225
  %227 = extractelement <16 x i32> %208, i32 6
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds float addrspace(1)* %data, i64 %228
  %230 = extractelement <16 x i32> %208, i32 7
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds float addrspace(1)* %data, i64 %231
  %233 = extractelement <16 x i32> %208, i32 8
  %234 = sext i32 %233 to i64
  %235 = getelementptr inbounds float addrspace(1)* %data, i64 %234
  %236 = extractelement <16 x i32> %208, i32 9
  %237 = sext i32 %236 to i64
  %238 = getelementptr inbounds float addrspace(1)* %data, i64 %237
  %239 = extractelement <16 x i32> %208, i32 10
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds float addrspace(1)* %data, i64 %240
  %242 = extractelement <16 x i32> %208, i32 11
  %243 = sext i32 %242 to i64
  %244 = getelementptr inbounds float addrspace(1)* %data, i64 %243
  %245 = extractelement <16 x i32> %208, i32 12
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds float addrspace(1)* %data, i64 %246
  %248 = extractelement <16 x i32> %208, i32 13
  %249 = sext i32 %248 to i64
  %250 = getelementptr inbounds float addrspace(1)* %data, i64 %249
  %251 = extractelement <16 x i32> %208, i32 14
  %252 = sext i32 %251 to i64
  %253 = getelementptr inbounds float addrspace(1)* %data, i64 %252
  %254 = extractelement <16 x i32> %208, i32 15
  %255 = sext i32 %254 to i64
  %256 = getelementptr inbounds float addrspace(1)* %data, i64 %255
  %257 = load float addrspace(1)* %211, align 4
  %258 = load float addrspace(1)* %214, align 4
  %259 = load float addrspace(1)* %217, align 4
  %260 = load float addrspace(1)* %220, align 4
  %261 = load float addrspace(1)* %223, align 4
  %262 = load float addrspace(1)* %226, align 4
  %263 = load float addrspace(1)* %229, align 4
  %264 = load float addrspace(1)* %232, align 4
  %265 = load float addrspace(1)* %235, align 4
  %266 = load float addrspace(1)* %238, align 4
  %267 = load float addrspace(1)* %241, align 4
  %268 = load float addrspace(1)* %244, align 4
  %269 = load float addrspace(1)* %247, align 4
  %270 = load float addrspace(1)* %250, align 4
  %271 = load float addrspace(1)* %253, align 4
  %272 = load float addrspace(1)* %256, align 4
  %temp.vect304 = insertelement <16 x float> undef, float %257, i32 0
  %temp.vect305 = insertelement <16 x float> %temp.vect304, float %258, i32 1
  %temp.vect306 = insertelement <16 x float> %temp.vect305, float %259, i32 2
  %temp.vect307 = insertelement <16 x float> %temp.vect306, float %260, i32 3
  %temp.vect308 = insertelement <16 x float> %temp.vect307, float %261, i32 4
  %temp.vect309 = insertelement <16 x float> %temp.vect308, float %262, i32 5
  %temp.vect310 = insertelement <16 x float> %temp.vect309, float %263, i32 6
  %temp.vect311 = insertelement <16 x float> %temp.vect310, float %264, i32 7
  %temp.vect312 = insertelement <16 x float> %temp.vect311, float %265, i32 8
  %temp.vect313 = insertelement <16 x float> %temp.vect312, float %266, i32 9
  %temp.vect314 = insertelement <16 x float> %temp.vect313, float %267, i32 10
  %temp.vect315 = insertelement <16 x float> %temp.vect314, float %268, i32 11
  %temp.vect316 = insertelement <16 x float> %temp.vect315, float %269, i32 12
  %temp.vect317 = insertelement <16 x float> %temp.vect316, float %270, i32 13
  %temp.vect318 = insertelement <16 x float> %temp.vect317, float %271, i32 14
  %temp.vect319 = insertelement <16 x float> %temp.vect318, float %272, i32 15
  %273 = add nsw <16 x i32> %vectorPHI, <i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4>
  %274 = and <16 x i32> %273, %vector
  %275 = extractelement <16 x i32> %274, i32 0
  %276 = sext i32 %275 to i64
  %277 = getelementptr inbounds float addrspace(1)* %data, i64 %276
  %278 = extractelement <16 x i32> %274, i32 1
  %279 = sext i32 %278 to i64
  %280 = getelementptr inbounds float addrspace(1)* %data, i64 %279
  %281 = extractelement <16 x i32> %274, i32 2
  %282 = sext i32 %281 to i64
  %283 = getelementptr inbounds float addrspace(1)* %data, i64 %282
  %284 = extractelement <16 x i32> %274, i32 3
  %285 = sext i32 %284 to i64
  %286 = getelementptr inbounds float addrspace(1)* %data, i64 %285
  %287 = extractelement <16 x i32> %274, i32 4
  %288 = sext i32 %287 to i64
  %289 = getelementptr inbounds float addrspace(1)* %data, i64 %288
  %290 = extractelement <16 x i32> %274, i32 5
  %291 = sext i32 %290 to i64
  %292 = getelementptr inbounds float addrspace(1)* %data, i64 %291
  %293 = extractelement <16 x i32> %274, i32 6
  %294 = sext i32 %293 to i64
  %295 = getelementptr inbounds float addrspace(1)* %data, i64 %294
  %296 = extractelement <16 x i32> %274, i32 7
  %297 = sext i32 %296 to i64
  %298 = getelementptr inbounds float addrspace(1)* %data, i64 %297
  %299 = extractelement <16 x i32> %274, i32 8
  %300 = sext i32 %299 to i64
  %301 = getelementptr inbounds float addrspace(1)* %data, i64 %300
  %302 = extractelement <16 x i32> %274, i32 9
  %303 = sext i32 %302 to i64
  %304 = getelementptr inbounds float addrspace(1)* %data, i64 %303
  %305 = extractelement <16 x i32> %274, i32 10
  %306 = sext i32 %305 to i64
  %307 = getelementptr inbounds float addrspace(1)* %data, i64 %306
  %308 = extractelement <16 x i32> %274, i32 11
  %309 = sext i32 %308 to i64
  %310 = getelementptr inbounds float addrspace(1)* %data, i64 %309
  %311 = extractelement <16 x i32> %274, i32 12
  %312 = sext i32 %311 to i64
  %313 = getelementptr inbounds float addrspace(1)* %data, i64 %312
  %314 = extractelement <16 x i32> %274, i32 13
  %315 = sext i32 %314 to i64
  %316 = getelementptr inbounds float addrspace(1)* %data, i64 %315
  %317 = extractelement <16 x i32> %274, i32 14
  %318 = sext i32 %317 to i64
  %319 = getelementptr inbounds float addrspace(1)* %data, i64 %318
  %320 = extractelement <16 x i32> %274, i32 15
  %321 = sext i32 %320 to i64
  %322 = getelementptr inbounds float addrspace(1)* %data, i64 %321
  %323 = load float addrspace(1)* %277, align 4
  %324 = load float addrspace(1)* %280, align 4
  %325 = load float addrspace(1)* %283, align 4
  %326 = load float addrspace(1)* %286, align 4
  %327 = load float addrspace(1)* %289, align 4
  %328 = load float addrspace(1)* %292, align 4
  %329 = load float addrspace(1)* %295, align 4
  %330 = load float addrspace(1)* %298, align 4
  %331 = load float addrspace(1)* %301, align 4
  %332 = load float addrspace(1)* %304, align 4
  %333 = load float addrspace(1)* %307, align 4
  %334 = load float addrspace(1)* %310, align 4
  %335 = load float addrspace(1)* %313, align 4
  %336 = load float addrspace(1)* %316, align 4
  %337 = load float addrspace(1)* %319, align 4
  %338 = load float addrspace(1)* %322, align 4
  %temp.vect320 = insertelement <16 x float> undef, float %323, i32 0
  %temp.vect321 = insertelement <16 x float> %temp.vect320, float %324, i32 1
  %temp.vect322 = insertelement <16 x float> %temp.vect321, float %325, i32 2
  %temp.vect323 = insertelement <16 x float> %temp.vect322, float %326, i32 3
  %temp.vect324 = insertelement <16 x float> %temp.vect323, float %327, i32 4
  %temp.vect325 = insertelement <16 x float> %temp.vect324, float %328, i32 5
  %temp.vect326 = insertelement <16 x float> %temp.vect325, float %329, i32 6
  %temp.vect327 = insertelement <16 x float> %temp.vect326, float %330, i32 7
  %temp.vect328 = insertelement <16 x float> %temp.vect327, float %331, i32 8
  %temp.vect329 = insertelement <16 x float> %temp.vect328, float %332, i32 9
  %temp.vect330 = insertelement <16 x float> %temp.vect329, float %333, i32 10
  %temp.vect331 = insertelement <16 x float> %temp.vect330, float %334, i32 11
  %temp.vect332 = insertelement <16 x float> %temp.vect331, float %335, i32 12
  %temp.vect333 = insertelement <16 x float> %temp.vect332, float %336, i32 13
  %temp.vect334 = insertelement <16 x float> %temp.vect333, float %337, i32 14
  %temp.vect335 = insertelement <16 x float> %temp.vect334, float %338, i32 15
  %339 = add nsw <16 x i32> %vectorPHI, <i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5>
  %340 = and <16 x i32> %339, %vector
  %341 = extractelement <16 x i32> %340, i32 0
  %342 = sext i32 %341 to i64
  %343 = getelementptr inbounds float addrspace(1)* %data, i64 %342
  %344 = extractelement <16 x i32> %340, i32 1
  %345 = sext i32 %344 to i64
  %346 = getelementptr inbounds float addrspace(1)* %data, i64 %345
  %347 = extractelement <16 x i32> %340, i32 2
  %348 = sext i32 %347 to i64
  %349 = getelementptr inbounds float addrspace(1)* %data, i64 %348
  %350 = extractelement <16 x i32> %340, i32 3
  %351 = sext i32 %350 to i64
  %352 = getelementptr inbounds float addrspace(1)* %data, i64 %351
  %353 = extractelement <16 x i32> %340, i32 4
  %354 = sext i32 %353 to i64
  %355 = getelementptr inbounds float addrspace(1)* %data, i64 %354
  %356 = extractelement <16 x i32> %340, i32 5
  %357 = sext i32 %356 to i64
  %358 = getelementptr inbounds float addrspace(1)* %data, i64 %357
  %359 = extractelement <16 x i32> %340, i32 6
  %360 = sext i32 %359 to i64
  %361 = getelementptr inbounds float addrspace(1)* %data, i64 %360
  %362 = extractelement <16 x i32> %340, i32 7
  %363 = sext i32 %362 to i64
  %364 = getelementptr inbounds float addrspace(1)* %data, i64 %363
  %365 = extractelement <16 x i32> %340, i32 8
  %366 = sext i32 %365 to i64
  %367 = getelementptr inbounds float addrspace(1)* %data, i64 %366
  %368 = extractelement <16 x i32> %340, i32 9
  %369 = sext i32 %368 to i64
  %370 = getelementptr inbounds float addrspace(1)* %data, i64 %369
  %371 = extractelement <16 x i32> %340, i32 10
  %372 = sext i32 %371 to i64
  %373 = getelementptr inbounds float addrspace(1)* %data, i64 %372
  %374 = extractelement <16 x i32> %340, i32 11
  %375 = sext i32 %374 to i64
  %376 = getelementptr inbounds float addrspace(1)* %data, i64 %375
  %377 = extractelement <16 x i32> %340, i32 12
  %378 = sext i32 %377 to i64
  %379 = getelementptr inbounds float addrspace(1)* %data, i64 %378
  %380 = extractelement <16 x i32> %340, i32 13
  %381 = sext i32 %380 to i64
  %382 = getelementptr inbounds float addrspace(1)* %data, i64 %381
  %383 = extractelement <16 x i32> %340, i32 14
  %384 = sext i32 %383 to i64
  %385 = getelementptr inbounds float addrspace(1)* %data, i64 %384
  %386 = extractelement <16 x i32> %340, i32 15
  %387 = sext i32 %386 to i64
  %388 = getelementptr inbounds float addrspace(1)* %data, i64 %387
  %389 = load float addrspace(1)* %343, align 4
  %390 = load float addrspace(1)* %346, align 4
  %391 = load float addrspace(1)* %349, align 4
  %392 = load float addrspace(1)* %352, align 4
  %393 = load float addrspace(1)* %355, align 4
  %394 = load float addrspace(1)* %358, align 4
  %395 = load float addrspace(1)* %361, align 4
  %396 = load float addrspace(1)* %364, align 4
  %397 = load float addrspace(1)* %367, align 4
  %398 = load float addrspace(1)* %370, align 4
  %399 = load float addrspace(1)* %373, align 4
  %400 = load float addrspace(1)* %376, align 4
  %401 = load float addrspace(1)* %379, align 4
  %402 = load float addrspace(1)* %382, align 4
  %403 = load float addrspace(1)* %385, align 4
  %404 = load float addrspace(1)* %388, align 4
  %temp.vect336 = insertelement <16 x float> undef, float %389, i32 0
  %temp.vect337 = insertelement <16 x float> %temp.vect336, float %390, i32 1
  %temp.vect338 = insertelement <16 x float> %temp.vect337, float %391, i32 2
  %temp.vect339 = insertelement <16 x float> %temp.vect338, float %392, i32 3
  %temp.vect340 = insertelement <16 x float> %temp.vect339, float %393, i32 4
  %temp.vect341 = insertelement <16 x float> %temp.vect340, float %394, i32 5
  %temp.vect342 = insertelement <16 x float> %temp.vect341, float %395, i32 6
  %temp.vect343 = insertelement <16 x float> %temp.vect342, float %396, i32 7
  %temp.vect344 = insertelement <16 x float> %temp.vect343, float %397, i32 8
  %temp.vect345 = insertelement <16 x float> %temp.vect344, float %398, i32 9
  %temp.vect346 = insertelement <16 x float> %temp.vect345, float %399, i32 10
  %temp.vect347 = insertelement <16 x float> %temp.vect346, float %400, i32 11
  %temp.vect348 = insertelement <16 x float> %temp.vect347, float %401, i32 12
  %temp.vect349 = insertelement <16 x float> %temp.vect348, float %402, i32 13
  %temp.vect350 = insertelement <16 x float> %temp.vect349, float %403, i32 14
  %temp.vect351 = insertelement <16 x float> %temp.vect350, float %404, i32 15
  %405 = add nsw <16 x i32> %vectorPHI, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %406 = and <16 x i32> %405, %vector
  %407 = extractelement <16 x i32> %406, i32 0
  %408 = sext i32 %407 to i64
  %409 = getelementptr inbounds float addrspace(1)* %data, i64 %408
  %410 = extractelement <16 x i32> %406, i32 1
  %411 = sext i32 %410 to i64
  %412 = getelementptr inbounds float addrspace(1)* %data, i64 %411
  %413 = extractelement <16 x i32> %406, i32 2
  %414 = sext i32 %413 to i64
  %415 = getelementptr inbounds float addrspace(1)* %data, i64 %414
  %416 = extractelement <16 x i32> %406, i32 3
  %417 = sext i32 %416 to i64
  %418 = getelementptr inbounds float addrspace(1)* %data, i64 %417
  %419 = extractelement <16 x i32> %406, i32 4
  %420 = sext i32 %419 to i64
  %421 = getelementptr inbounds float addrspace(1)* %data, i64 %420
  %422 = extractelement <16 x i32> %406, i32 5
  %423 = sext i32 %422 to i64
  %424 = getelementptr inbounds float addrspace(1)* %data, i64 %423
  %425 = extractelement <16 x i32> %406, i32 6
  %426 = sext i32 %425 to i64
  %427 = getelementptr inbounds float addrspace(1)* %data, i64 %426
  %428 = extractelement <16 x i32> %406, i32 7
  %429 = sext i32 %428 to i64
  %430 = getelementptr inbounds float addrspace(1)* %data, i64 %429
  %431 = extractelement <16 x i32> %406, i32 8
  %432 = sext i32 %431 to i64
  %433 = getelementptr inbounds float addrspace(1)* %data, i64 %432
  %434 = extractelement <16 x i32> %406, i32 9
  %435 = sext i32 %434 to i64
  %436 = getelementptr inbounds float addrspace(1)* %data, i64 %435
  %437 = extractelement <16 x i32> %406, i32 10
  %438 = sext i32 %437 to i64
  %439 = getelementptr inbounds float addrspace(1)* %data, i64 %438
  %440 = extractelement <16 x i32> %406, i32 11
  %441 = sext i32 %440 to i64
  %442 = getelementptr inbounds float addrspace(1)* %data, i64 %441
  %443 = extractelement <16 x i32> %406, i32 12
  %444 = sext i32 %443 to i64
  %445 = getelementptr inbounds float addrspace(1)* %data, i64 %444
  %446 = extractelement <16 x i32> %406, i32 13
  %447 = sext i32 %446 to i64
  %448 = getelementptr inbounds float addrspace(1)* %data, i64 %447
  %449 = extractelement <16 x i32> %406, i32 14
  %450 = sext i32 %449 to i64
  %451 = getelementptr inbounds float addrspace(1)* %data, i64 %450
  %452 = extractelement <16 x i32> %406, i32 15
  %453 = sext i32 %452 to i64
  %454 = getelementptr inbounds float addrspace(1)* %data, i64 %453
  %455 = load float addrspace(1)* %409, align 4
  %456 = load float addrspace(1)* %412, align 4
  %457 = load float addrspace(1)* %415, align 4
  %458 = load float addrspace(1)* %418, align 4
  %459 = load float addrspace(1)* %421, align 4
  %460 = load float addrspace(1)* %424, align 4
  %461 = load float addrspace(1)* %427, align 4
  %462 = load float addrspace(1)* %430, align 4
  %463 = load float addrspace(1)* %433, align 4
  %464 = load float addrspace(1)* %436, align 4
  %465 = load float addrspace(1)* %439, align 4
  %466 = load float addrspace(1)* %442, align 4
  %467 = load float addrspace(1)* %445, align 4
  %468 = load float addrspace(1)* %448, align 4
  %469 = load float addrspace(1)* %451, align 4
  %470 = load float addrspace(1)* %454, align 4
  %temp.vect352 = insertelement <16 x float> undef, float %455, i32 0
  %temp.vect353 = insertelement <16 x float> %temp.vect352, float %456, i32 1
  %temp.vect354 = insertelement <16 x float> %temp.vect353, float %457, i32 2
  %temp.vect355 = insertelement <16 x float> %temp.vect354, float %458, i32 3
  %temp.vect356 = insertelement <16 x float> %temp.vect355, float %459, i32 4
  %temp.vect357 = insertelement <16 x float> %temp.vect356, float %460, i32 5
  %temp.vect358 = insertelement <16 x float> %temp.vect357, float %461, i32 6
  %temp.vect359 = insertelement <16 x float> %temp.vect358, float %462, i32 7
  %temp.vect360 = insertelement <16 x float> %temp.vect359, float %463, i32 8
  %temp.vect361 = insertelement <16 x float> %temp.vect360, float %464, i32 9
  %temp.vect362 = insertelement <16 x float> %temp.vect361, float %465, i32 10
  %temp.vect363 = insertelement <16 x float> %temp.vect362, float %466, i32 11
  %temp.vect364 = insertelement <16 x float> %temp.vect363, float %467, i32 12
  %temp.vect365 = insertelement <16 x float> %temp.vect364, float %468, i32 13
  %temp.vect366 = insertelement <16 x float> %temp.vect365, float %469, i32 14
  %temp.vect367 = insertelement <16 x float> %temp.vect366, float %470, i32 15
  %471 = add nsw <16 x i32> %vectorPHI, <i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7>
  %472 = and <16 x i32> %471, %vector
  %473 = extractelement <16 x i32> %472, i32 0
  %474 = sext i32 %473 to i64
  %475 = getelementptr inbounds float addrspace(1)* %data, i64 %474
  %476 = extractelement <16 x i32> %472, i32 1
  %477 = sext i32 %476 to i64
  %478 = getelementptr inbounds float addrspace(1)* %data, i64 %477
  %479 = extractelement <16 x i32> %472, i32 2
  %480 = sext i32 %479 to i64
  %481 = getelementptr inbounds float addrspace(1)* %data, i64 %480
  %482 = extractelement <16 x i32> %472, i32 3
  %483 = sext i32 %482 to i64
  %484 = getelementptr inbounds float addrspace(1)* %data, i64 %483
  %485 = extractelement <16 x i32> %472, i32 4
  %486 = sext i32 %485 to i64
  %487 = getelementptr inbounds float addrspace(1)* %data, i64 %486
  %488 = extractelement <16 x i32> %472, i32 5
  %489 = sext i32 %488 to i64
  %490 = getelementptr inbounds float addrspace(1)* %data, i64 %489
  %491 = extractelement <16 x i32> %472, i32 6
  %492 = sext i32 %491 to i64
  %493 = getelementptr inbounds float addrspace(1)* %data, i64 %492
  %494 = extractelement <16 x i32> %472, i32 7
  %495 = sext i32 %494 to i64
  %496 = getelementptr inbounds float addrspace(1)* %data, i64 %495
  %497 = extractelement <16 x i32> %472, i32 8
  %498 = sext i32 %497 to i64
  %499 = getelementptr inbounds float addrspace(1)* %data, i64 %498
  %500 = extractelement <16 x i32> %472, i32 9
  %501 = sext i32 %500 to i64
  %502 = getelementptr inbounds float addrspace(1)* %data, i64 %501
  %503 = extractelement <16 x i32> %472, i32 10
  %504 = sext i32 %503 to i64
  %505 = getelementptr inbounds float addrspace(1)* %data, i64 %504
  %506 = extractelement <16 x i32> %472, i32 11
  %507 = sext i32 %506 to i64
  %508 = getelementptr inbounds float addrspace(1)* %data, i64 %507
  %509 = extractelement <16 x i32> %472, i32 12
  %510 = sext i32 %509 to i64
  %511 = getelementptr inbounds float addrspace(1)* %data, i64 %510
  %512 = extractelement <16 x i32> %472, i32 13
  %513 = sext i32 %512 to i64
  %514 = getelementptr inbounds float addrspace(1)* %data, i64 %513
  %515 = extractelement <16 x i32> %472, i32 14
  %516 = sext i32 %515 to i64
  %517 = getelementptr inbounds float addrspace(1)* %data, i64 %516
  %518 = extractelement <16 x i32> %472, i32 15
  %519 = sext i32 %518 to i64
  %520 = getelementptr inbounds float addrspace(1)* %data, i64 %519
  %521 = load float addrspace(1)* %475, align 4
  %522 = load float addrspace(1)* %478, align 4
  %523 = load float addrspace(1)* %481, align 4
  %524 = load float addrspace(1)* %484, align 4
  %525 = load float addrspace(1)* %487, align 4
  %526 = load float addrspace(1)* %490, align 4
  %527 = load float addrspace(1)* %493, align 4
  %528 = load float addrspace(1)* %496, align 4
  %529 = load float addrspace(1)* %499, align 4
  %530 = load float addrspace(1)* %502, align 4
  %531 = load float addrspace(1)* %505, align 4
  %532 = load float addrspace(1)* %508, align 4
  %533 = load float addrspace(1)* %511, align 4
  %534 = load float addrspace(1)* %514, align 4
  %535 = load float addrspace(1)* %517, align 4
  %536 = load float addrspace(1)* %520, align 4
  %temp.vect368 = insertelement <16 x float> undef, float %521, i32 0
  %temp.vect369 = insertelement <16 x float> %temp.vect368, float %522, i32 1
  %temp.vect370 = insertelement <16 x float> %temp.vect369, float %523, i32 2
  %temp.vect371 = insertelement <16 x float> %temp.vect370, float %524, i32 3
  %temp.vect372 = insertelement <16 x float> %temp.vect371, float %525, i32 4
  %temp.vect373 = insertelement <16 x float> %temp.vect372, float %526, i32 5
  %temp.vect374 = insertelement <16 x float> %temp.vect373, float %527, i32 6
  %temp.vect375 = insertelement <16 x float> %temp.vect374, float %528, i32 7
  %temp.vect376 = insertelement <16 x float> %temp.vect375, float %529, i32 8
  %temp.vect377 = insertelement <16 x float> %temp.vect376, float %530, i32 9
  %temp.vect378 = insertelement <16 x float> %temp.vect377, float %531, i32 10
  %temp.vect379 = insertelement <16 x float> %temp.vect378, float %532, i32 11
  %temp.vect380 = insertelement <16 x float> %temp.vect379, float %533, i32 12
  %temp.vect381 = insertelement <16 x float> %temp.vect380, float %534, i32 13
  %temp.vect382 = insertelement <16 x float> %temp.vect381, float %535, i32 14
  %temp.vect383 = insertelement <16 x float> %temp.vect382, float %536, i32 15
  %537 = add nsw <16 x i32> %vectorPHI, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %538 = and <16 x i32> %537, %vector
  %539 = extractelement <16 x i32> %538, i32 0
  %540 = sext i32 %539 to i64
  %541 = getelementptr inbounds float addrspace(1)* %data, i64 %540
  %542 = extractelement <16 x i32> %538, i32 1
  %543 = sext i32 %542 to i64
  %544 = getelementptr inbounds float addrspace(1)* %data, i64 %543
  %545 = extractelement <16 x i32> %538, i32 2
  %546 = sext i32 %545 to i64
  %547 = getelementptr inbounds float addrspace(1)* %data, i64 %546
  %548 = extractelement <16 x i32> %538, i32 3
  %549 = sext i32 %548 to i64
  %550 = getelementptr inbounds float addrspace(1)* %data, i64 %549
  %551 = extractelement <16 x i32> %538, i32 4
  %552 = sext i32 %551 to i64
  %553 = getelementptr inbounds float addrspace(1)* %data, i64 %552
  %554 = extractelement <16 x i32> %538, i32 5
  %555 = sext i32 %554 to i64
  %556 = getelementptr inbounds float addrspace(1)* %data, i64 %555
  %557 = extractelement <16 x i32> %538, i32 6
  %558 = sext i32 %557 to i64
  %559 = getelementptr inbounds float addrspace(1)* %data, i64 %558
  %560 = extractelement <16 x i32> %538, i32 7
  %561 = sext i32 %560 to i64
  %562 = getelementptr inbounds float addrspace(1)* %data, i64 %561
  %563 = extractelement <16 x i32> %538, i32 8
  %564 = sext i32 %563 to i64
  %565 = getelementptr inbounds float addrspace(1)* %data, i64 %564
  %566 = extractelement <16 x i32> %538, i32 9
  %567 = sext i32 %566 to i64
  %568 = getelementptr inbounds float addrspace(1)* %data, i64 %567
  %569 = extractelement <16 x i32> %538, i32 10
  %570 = sext i32 %569 to i64
  %571 = getelementptr inbounds float addrspace(1)* %data, i64 %570
  %572 = extractelement <16 x i32> %538, i32 11
  %573 = sext i32 %572 to i64
  %574 = getelementptr inbounds float addrspace(1)* %data, i64 %573
  %575 = extractelement <16 x i32> %538, i32 12
  %576 = sext i32 %575 to i64
  %577 = getelementptr inbounds float addrspace(1)* %data, i64 %576
  %578 = extractelement <16 x i32> %538, i32 13
  %579 = sext i32 %578 to i64
  %580 = getelementptr inbounds float addrspace(1)* %data, i64 %579
  %581 = extractelement <16 x i32> %538, i32 14
  %582 = sext i32 %581 to i64
  %583 = getelementptr inbounds float addrspace(1)* %data, i64 %582
  %584 = extractelement <16 x i32> %538, i32 15
  %585 = sext i32 %584 to i64
  %586 = getelementptr inbounds float addrspace(1)* %data, i64 %585
  %587 = load float addrspace(1)* %541, align 4
  %588 = load float addrspace(1)* %544, align 4
  %589 = load float addrspace(1)* %547, align 4
  %590 = load float addrspace(1)* %550, align 4
  %591 = load float addrspace(1)* %553, align 4
  %592 = load float addrspace(1)* %556, align 4
  %593 = load float addrspace(1)* %559, align 4
  %594 = load float addrspace(1)* %562, align 4
  %595 = load float addrspace(1)* %565, align 4
  %596 = load float addrspace(1)* %568, align 4
  %597 = load float addrspace(1)* %571, align 4
  %598 = load float addrspace(1)* %574, align 4
  %599 = load float addrspace(1)* %577, align 4
  %600 = load float addrspace(1)* %580, align 4
  %601 = load float addrspace(1)* %583, align 4
  %602 = load float addrspace(1)* %586, align 4
  %temp.vect384 = insertelement <16 x float> undef, float %587, i32 0
  %temp.vect385 = insertelement <16 x float> %temp.vect384, float %588, i32 1
  %temp.vect386 = insertelement <16 x float> %temp.vect385, float %589, i32 2
  %temp.vect387 = insertelement <16 x float> %temp.vect386, float %590, i32 3
  %temp.vect388 = insertelement <16 x float> %temp.vect387, float %591, i32 4
  %temp.vect389 = insertelement <16 x float> %temp.vect388, float %592, i32 5
  %temp.vect390 = insertelement <16 x float> %temp.vect389, float %593, i32 6
  %temp.vect391 = insertelement <16 x float> %temp.vect390, float %594, i32 7
  %temp.vect392 = insertelement <16 x float> %temp.vect391, float %595, i32 8
  %temp.vect393 = insertelement <16 x float> %temp.vect392, float %596, i32 9
  %temp.vect394 = insertelement <16 x float> %temp.vect393, float %597, i32 10
  %temp.vect395 = insertelement <16 x float> %temp.vect394, float %598, i32 11
  %temp.vect396 = insertelement <16 x float> %temp.vect395, float %599, i32 12
  %temp.vect397 = insertelement <16 x float> %temp.vect396, float %600, i32 13
  %temp.vect398 = insertelement <16 x float> %temp.vect397, float %601, i32 14
  %temp.vect399 = insertelement <16 x float> %temp.vect398, float %602, i32 15
  %603 = add nsw <16 x i32> %vectorPHI, <i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9>
  %604 = and <16 x i32> %603, %vector
  %605 = extractelement <16 x i32> %604, i32 0
  %606 = sext i32 %605 to i64
  %607 = getelementptr inbounds float addrspace(1)* %data, i64 %606
  %608 = extractelement <16 x i32> %604, i32 1
  %609 = sext i32 %608 to i64
  %610 = getelementptr inbounds float addrspace(1)* %data, i64 %609
  %611 = extractelement <16 x i32> %604, i32 2
  %612 = sext i32 %611 to i64
  %613 = getelementptr inbounds float addrspace(1)* %data, i64 %612
  %614 = extractelement <16 x i32> %604, i32 3
  %615 = sext i32 %614 to i64
  %616 = getelementptr inbounds float addrspace(1)* %data, i64 %615
  %617 = extractelement <16 x i32> %604, i32 4
  %618 = sext i32 %617 to i64
  %619 = getelementptr inbounds float addrspace(1)* %data, i64 %618
  %620 = extractelement <16 x i32> %604, i32 5
  %621 = sext i32 %620 to i64
  %622 = getelementptr inbounds float addrspace(1)* %data, i64 %621
  %623 = extractelement <16 x i32> %604, i32 6
  %624 = sext i32 %623 to i64
  %625 = getelementptr inbounds float addrspace(1)* %data, i64 %624
  %626 = extractelement <16 x i32> %604, i32 7
  %627 = sext i32 %626 to i64
  %628 = getelementptr inbounds float addrspace(1)* %data, i64 %627
  %629 = extractelement <16 x i32> %604, i32 8
  %630 = sext i32 %629 to i64
  %631 = getelementptr inbounds float addrspace(1)* %data, i64 %630
  %632 = extractelement <16 x i32> %604, i32 9
  %633 = sext i32 %632 to i64
  %634 = getelementptr inbounds float addrspace(1)* %data, i64 %633
  %635 = extractelement <16 x i32> %604, i32 10
  %636 = sext i32 %635 to i64
  %637 = getelementptr inbounds float addrspace(1)* %data, i64 %636
  %638 = extractelement <16 x i32> %604, i32 11
  %639 = sext i32 %638 to i64
  %640 = getelementptr inbounds float addrspace(1)* %data, i64 %639
  %641 = extractelement <16 x i32> %604, i32 12
  %642 = sext i32 %641 to i64
  %643 = getelementptr inbounds float addrspace(1)* %data, i64 %642
  %644 = extractelement <16 x i32> %604, i32 13
  %645 = sext i32 %644 to i64
  %646 = getelementptr inbounds float addrspace(1)* %data, i64 %645
  %647 = extractelement <16 x i32> %604, i32 14
  %648 = sext i32 %647 to i64
  %649 = getelementptr inbounds float addrspace(1)* %data, i64 %648
  %650 = extractelement <16 x i32> %604, i32 15
  %651 = sext i32 %650 to i64
  %652 = getelementptr inbounds float addrspace(1)* %data, i64 %651
  %653 = load float addrspace(1)* %607, align 4
  %654 = load float addrspace(1)* %610, align 4
  %655 = load float addrspace(1)* %613, align 4
  %656 = load float addrspace(1)* %616, align 4
  %657 = load float addrspace(1)* %619, align 4
  %658 = load float addrspace(1)* %622, align 4
  %659 = load float addrspace(1)* %625, align 4
  %660 = load float addrspace(1)* %628, align 4
  %661 = load float addrspace(1)* %631, align 4
  %662 = load float addrspace(1)* %634, align 4
  %663 = load float addrspace(1)* %637, align 4
  %664 = load float addrspace(1)* %640, align 4
  %665 = load float addrspace(1)* %643, align 4
  %666 = load float addrspace(1)* %646, align 4
  %667 = load float addrspace(1)* %649, align 4
  %668 = load float addrspace(1)* %652, align 4
  %temp.vect400 = insertelement <16 x float> undef, float %653, i32 0
  %temp.vect401 = insertelement <16 x float> %temp.vect400, float %654, i32 1
  %temp.vect402 = insertelement <16 x float> %temp.vect401, float %655, i32 2
  %temp.vect403 = insertelement <16 x float> %temp.vect402, float %656, i32 3
  %temp.vect404 = insertelement <16 x float> %temp.vect403, float %657, i32 4
  %temp.vect405 = insertelement <16 x float> %temp.vect404, float %658, i32 5
  %temp.vect406 = insertelement <16 x float> %temp.vect405, float %659, i32 6
  %temp.vect407 = insertelement <16 x float> %temp.vect406, float %660, i32 7
  %temp.vect408 = insertelement <16 x float> %temp.vect407, float %661, i32 8
  %temp.vect409 = insertelement <16 x float> %temp.vect408, float %662, i32 9
  %temp.vect410 = insertelement <16 x float> %temp.vect409, float %663, i32 10
  %temp.vect411 = insertelement <16 x float> %temp.vect410, float %664, i32 11
  %temp.vect412 = insertelement <16 x float> %temp.vect411, float %665, i32 12
  %temp.vect413 = insertelement <16 x float> %temp.vect412, float %666, i32 13
  %temp.vect414 = insertelement <16 x float> %temp.vect413, float %667, i32 14
  %temp.vect415 = insertelement <16 x float> %temp.vect414, float %668, i32 15
  %669 = add nsw <16 x i32> %vectorPHI, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %670 = and <16 x i32> %669, %vector
  %671 = extractelement <16 x i32> %670, i32 0
  %672 = sext i32 %671 to i64
  %673 = getelementptr inbounds float addrspace(1)* %data, i64 %672
  %674 = extractelement <16 x i32> %670, i32 1
  %675 = sext i32 %674 to i64
  %676 = getelementptr inbounds float addrspace(1)* %data, i64 %675
  %677 = extractelement <16 x i32> %670, i32 2
  %678 = sext i32 %677 to i64
  %679 = getelementptr inbounds float addrspace(1)* %data, i64 %678
  %680 = extractelement <16 x i32> %670, i32 3
  %681 = sext i32 %680 to i64
  %682 = getelementptr inbounds float addrspace(1)* %data, i64 %681
  %683 = extractelement <16 x i32> %670, i32 4
  %684 = sext i32 %683 to i64
  %685 = getelementptr inbounds float addrspace(1)* %data, i64 %684
  %686 = extractelement <16 x i32> %670, i32 5
  %687 = sext i32 %686 to i64
  %688 = getelementptr inbounds float addrspace(1)* %data, i64 %687
  %689 = extractelement <16 x i32> %670, i32 6
  %690 = sext i32 %689 to i64
  %691 = getelementptr inbounds float addrspace(1)* %data, i64 %690
  %692 = extractelement <16 x i32> %670, i32 7
  %693 = sext i32 %692 to i64
  %694 = getelementptr inbounds float addrspace(1)* %data, i64 %693
  %695 = extractelement <16 x i32> %670, i32 8
  %696 = sext i32 %695 to i64
  %697 = getelementptr inbounds float addrspace(1)* %data, i64 %696
  %698 = extractelement <16 x i32> %670, i32 9
  %699 = sext i32 %698 to i64
  %700 = getelementptr inbounds float addrspace(1)* %data, i64 %699
  %701 = extractelement <16 x i32> %670, i32 10
  %702 = sext i32 %701 to i64
  %703 = getelementptr inbounds float addrspace(1)* %data, i64 %702
  %704 = extractelement <16 x i32> %670, i32 11
  %705 = sext i32 %704 to i64
  %706 = getelementptr inbounds float addrspace(1)* %data, i64 %705
  %707 = extractelement <16 x i32> %670, i32 12
  %708 = sext i32 %707 to i64
  %709 = getelementptr inbounds float addrspace(1)* %data, i64 %708
  %710 = extractelement <16 x i32> %670, i32 13
  %711 = sext i32 %710 to i64
  %712 = getelementptr inbounds float addrspace(1)* %data, i64 %711
  %713 = extractelement <16 x i32> %670, i32 14
  %714 = sext i32 %713 to i64
  %715 = getelementptr inbounds float addrspace(1)* %data, i64 %714
  %716 = extractelement <16 x i32> %670, i32 15
  %717 = sext i32 %716 to i64
  %718 = getelementptr inbounds float addrspace(1)* %data, i64 %717
  %719 = load float addrspace(1)* %673, align 4
  %720 = load float addrspace(1)* %676, align 4
  %721 = load float addrspace(1)* %679, align 4
  %722 = load float addrspace(1)* %682, align 4
  %723 = load float addrspace(1)* %685, align 4
  %724 = load float addrspace(1)* %688, align 4
  %725 = load float addrspace(1)* %691, align 4
  %726 = load float addrspace(1)* %694, align 4
  %727 = load float addrspace(1)* %697, align 4
  %728 = load float addrspace(1)* %700, align 4
  %729 = load float addrspace(1)* %703, align 4
  %730 = load float addrspace(1)* %706, align 4
  %731 = load float addrspace(1)* %709, align 4
  %732 = load float addrspace(1)* %712, align 4
  %733 = load float addrspace(1)* %715, align 4
  %734 = load float addrspace(1)* %718, align 4
  %temp.vect416 = insertelement <16 x float> undef, float %719, i32 0
  %temp.vect417 = insertelement <16 x float> %temp.vect416, float %720, i32 1
  %temp.vect418 = insertelement <16 x float> %temp.vect417, float %721, i32 2
  %temp.vect419 = insertelement <16 x float> %temp.vect418, float %722, i32 3
  %temp.vect420 = insertelement <16 x float> %temp.vect419, float %723, i32 4
  %temp.vect421 = insertelement <16 x float> %temp.vect420, float %724, i32 5
  %temp.vect422 = insertelement <16 x float> %temp.vect421, float %725, i32 6
  %temp.vect423 = insertelement <16 x float> %temp.vect422, float %726, i32 7
  %temp.vect424 = insertelement <16 x float> %temp.vect423, float %727, i32 8
  %temp.vect425 = insertelement <16 x float> %temp.vect424, float %728, i32 9
  %temp.vect426 = insertelement <16 x float> %temp.vect425, float %729, i32 10
  %temp.vect427 = insertelement <16 x float> %temp.vect426, float %730, i32 11
  %temp.vect428 = insertelement <16 x float> %temp.vect427, float %731, i32 12
  %temp.vect429 = insertelement <16 x float> %temp.vect428, float %732, i32 13
  %temp.vect430 = insertelement <16 x float> %temp.vect429, float %733, i32 14
  %temp.vect431 = insertelement <16 x float> %temp.vect430, float %734, i32 15
  %735 = add nsw <16 x i32> %vectorPHI, <i32 11, i32 11, i32 11, i32 11, i32 11, i32 11, i32 11, i32 11, i32 11, i32 11, i32 11, i32 11, i32 11, i32 11, i32 11, i32 11>
  %736 = and <16 x i32> %735, %vector
  %737 = extractelement <16 x i32> %736, i32 0
  %738 = sext i32 %737 to i64
  %739 = getelementptr inbounds float addrspace(1)* %data, i64 %738
  %740 = extractelement <16 x i32> %736, i32 1
  %741 = sext i32 %740 to i64
  %742 = getelementptr inbounds float addrspace(1)* %data, i64 %741
  %743 = extractelement <16 x i32> %736, i32 2
  %744 = sext i32 %743 to i64
  %745 = getelementptr inbounds float addrspace(1)* %data, i64 %744
  %746 = extractelement <16 x i32> %736, i32 3
  %747 = sext i32 %746 to i64
  %748 = getelementptr inbounds float addrspace(1)* %data, i64 %747
  %749 = extractelement <16 x i32> %736, i32 4
  %750 = sext i32 %749 to i64
  %751 = getelementptr inbounds float addrspace(1)* %data, i64 %750
  %752 = extractelement <16 x i32> %736, i32 5
  %753 = sext i32 %752 to i64
  %754 = getelementptr inbounds float addrspace(1)* %data, i64 %753
  %755 = extractelement <16 x i32> %736, i32 6
  %756 = sext i32 %755 to i64
  %757 = getelementptr inbounds float addrspace(1)* %data, i64 %756
  %758 = extractelement <16 x i32> %736, i32 7
  %759 = sext i32 %758 to i64
  %760 = getelementptr inbounds float addrspace(1)* %data, i64 %759
  %761 = extractelement <16 x i32> %736, i32 8
  %762 = sext i32 %761 to i64
  %763 = getelementptr inbounds float addrspace(1)* %data, i64 %762
  %764 = extractelement <16 x i32> %736, i32 9
  %765 = sext i32 %764 to i64
  %766 = getelementptr inbounds float addrspace(1)* %data, i64 %765
  %767 = extractelement <16 x i32> %736, i32 10
  %768 = sext i32 %767 to i64
  %769 = getelementptr inbounds float addrspace(1)* %data, i64 %768
  %770 = extractelement <16 x i32> %736, i32 11
  %771 = sext i32 %770 to i64
  %772 = getelementptr inbounds float addrspace(1)* %data, i64 %771
  %773 = extractelement <16 x i32> %736, i32 12
  %774 = sext i32 %773 to i64
  %775 = getelementptr inbounds float addrspace(1)* %data, i64 %774
  %776 = extractelement <16 x i32> %736, i32 13
  %777 = sext i32 %776 to i64
  %778 = getelementptr inbounds float addrspace(1)* %data, i64 %777
  %779 = extractelement <16 x i32> %736, i32 14
  %780 = sext i32 %779 to i64
  %781 = getelementptr inbounds float addrspace(1)* %data, i64 %780
  %782 = extractelement <16 x i32> %736, i32 15
  %783 = sext i32 %782 to i64
  %784 = getelementptr inbounds float addrspace(1)* %data, i64 %783
  %785 = load float addrspace(1)* %739, align 4
  %786 = load float addrspace(1)* %742, align 4
  %787 = load float addrspace(1)* %745, align 4
  %788 = load float addrspace(1)* %748, align 4
  %789 = load float addrspace(1)* %751, align 4
  %790 = load float addrspace(1)* %754, align 4
  %791 = load float addrspace(1)* %757, align 4
  %792 = load float addrspace(1)* %760, align 4
  %793 = load float addrspace(1)* %763, align 4
  %794 = load float addrspace(1)* %766, align 4
  %795 = load float addrspace(1)* %769, align 4
  %796 = load float addrspace(1)* %772, align 4
  %797 = load float addrspace(1)* %775, align 4
  %798 = load float addrspace(1)* %778, align 4
  %799 = load float addrspace(1)* %781, align 4
  %800 = load float addrspace(1)* %784, align 4
  %temp.vect432 = insertelement <16 x float> undef, float %785, i32 0
  %temp.vect433 = insertelement <16 x float> %temp.vect432, float %786, i32 1
  %temp.vect434 = insertelement <16 x float> %temp.vect433, float %787, i32 2
  %temp.vect435 = insertelement <16 x float> %temp.vect434, float %788, i32 3
  %temp.vect436 = insertelement <16 x float> %temp.vect435, float %789, i32 4
  %temp.vect437 = insertelement <16 x float> %temp.vect436, float %790, i32 5
  %temp.vect438 = insertelement <16 x float> %temp.vect437, float %791, i32 6
  %temp.vect439 = insertelement <16 x float> %temp.vect438, float %792, i32 7
  %temp.vect440 = insertelement <16 x float> %temp.vect439, float %793, i32 8
  %temp.vect441 = insertelement <16 x float> %temp.vect440, float %794, i32 9
  %temp.vect442 = insertelement <16 x float> %temp.vect441, float %795, i32 10
  %temp.vect443 = insertelement <16 x float> %temp.vect442, float %796, i32 11
  %temp.vect444 = insertelement <16 x float> %temp.vect443, float %797, i32 12
  %temp.vect445 = insertelement <16 x float> %temp.vect444, float %798, i32 13
  %temp.vect446 = insertelement <16 x float> %temp.vect445, float %799, i32 14
  %temp.vect447 = insertelement <16 x float> %temp.vect446, float %800, i32 15
  %801 = add nsw <16 x i32> %vectorPHI, <i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12>
  %802 = and <16 x i32> %801, %vector
  %803 = extractelement <16 x i32> %802, i32 0
  %804 = sext i32 %803 to i64
  %805 = getelementptr inbounds float addrspace(1)* %data, i64 %804
  %806 = extractelement <16 x i32> %802, i32 1
  %807 = sext i32 %806 to i64
  %808 = getelementptr inbounds float addrspace(1)* %data, i64 %807
  %809 = extractelement <16 x i32> %802, i32 2
  %810 = sext i32 %809 to i64
  %811 = getelementptr inbounds float addrspace(1)* %data, i64 %810
  %812 = extractelement <16 x i32> %802, i32 3
  %813 = sext i32 %812 to i64
  %814 = getelementptr inbounds float addrspace(1)* %data, i64 %813
  %815 = extractelement <16 x i32> %802, i32 4
  %816 = sext i32 %815 to i64
  %817 = getelementptr inbounds float addrspace(1)* %data, i64 %816
  %818 = extractelement <16 x i32> %802, i32 5
  %819 = sext i32 %818 to i64
  %820 = getelementptr inbounds float addrspace(1)* %data, i64 %819
  %821 = extractelement <16 x i32> %802, i32 6
  %822 = sext i32 %821 to i64
  %823 = getelementptr inbounds float addrspace(1)* %data, i64 %822
  %824 = extractelement <16 x i32> %802, i32 7
  %825 = sext i32 %824 to i64
  %826 = getelementptr inbounds float addrspace(1)* %data, i64 %825
  %827 = extractelement <16 x i32> %802, i32 8
  %828 = sext i32 %827 to i64
  %829 = getelementptr inbounds float addrspace(1)* %data, i64 %828
  %830 = extractelement <16 x i32> %802, i32 9
  %831 = sext i32 %830 to i64
  %832 = getelementptr inbounds float addrspace(1)* %data, i64 %831
  %833 = extractelement <16 x i32> %802, i32 10
  %834 = sext i32 %833 to i64
  %835 = getelementptr inbounds float addrspace(1)* %data, i64 %834
  %836 = extractelement <16 x i32> %802, i32 11
  %837 = sext i32 %836 to i64
  %838 = getelementptr inbounds float addrspace(1)* %data, i64 %837
  %839 = extractelement <16 x i32> %802, i32 12
  %840 = sext i32 %839 to i64
  %841 = getelementptr inbounds float addrspace(1)* %data, i64 %840
  %842 = extractelement <16 x i32> %802, i32 13
  %843 = sext i32 %842 to i64
  %844 = getelementptr inbounds float addrspace(1)* %data, i64 %843
  %845 = extractelement <16 x i32> %802, i32 14
  %846 = sext i32 %845 to i64
  %847 = getelementptr inbounds float addrspace(1)* %data, i64 %846
  %848 = extractelement <16 x i32> %802, i32 15
  %849 = sext i32 %848 to i64
  %850 = getelementptr inbounds float addrspace(1)* %data, i64 %849
  %851 = load float addrspace(1)* %805, align 4
  %852 = load float addrspace(1)* %808, align 4
  %853 = load float addrspace(1)* %811, align 4
  %854 = load float addrspace(1)* %814, align 4
  %855 = load float addrspace(1)* %817, align 4
  %856 = load float addrspace(1)* %820, align 4
  %857 = load float addrspace(1)* %823, align 4
  %858 = load float addrspace(1)* %826, align 4
  %859 = load float addrspace(1)* %829, align 4
  %860 = load float addrspace(1)* %832, align 4
  %861 = load float addrspace(1)* %835, align 4
  %862 = load float addrspace(1)* %838, align 4
  %863 = load float addrspace(1)* %841, align 4
  %864 = load float addrspace(1)* %844, align 4
  %865 = load float addrspace(1)* %847, align 4
  %866 = load float addrspace(1)* %850, align 4
  %temp.vect448 = insertelement <16 x float> undef, float %851, i32 0
  %temp.vect449 = insertelement <16 x float> %temp.vect448, float %852, i32 1
  %temp.vect450 = insertelement <16 x float> %temp.vect449, float %853, i32 2
  %temp.vect451 = insertelement <16 x float> %temp.vect450, float %854, i32 3
  %temp.vect452 = insertelement <16 x float> %temp.vect451, float %855, i32 4
  %temp.vect453 = insertelement <16 x float> %temp.vect452, float %856, i32 5
  %temp.vect454 = insertelement <16 x float> %temp.vect453, float %857, i32 6
  %temp.vect455 = insertelement <16 x float> %temp.vect454, float %858, i32 7
  %temp.vect456 = insertelement <16 x float> %temp.vect455, float %859, i32 8
  %temp.vect457 = insertelement <16 x float> %temp.vect456, float %860, i32 9
  %temp.vect458 = insertelement <16 x float> %temp.vect457, float %861, i32 10
  %temp.vect459 = insertelement <16 x float> %temp.vect458, float %862, i32 11
  %temp.vect460 = insertelement <16 x float> %temp.vect459, float %863, i32 12
  %temp.vect461 = insertelement <16 x float> %temp.vect460, float %864, i32 13
  %temp.vect462 = insertelement <16 x float> %temp.vect461, float %865, i32 14
  %temp.vect463 = insertelement <16 x float> %temp.vect462, float %866, i32 15
  %867 = add nsw <16 x i32> %vectorPHI, <i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13>
  %868 = and <16 x i32> %867, %vector
  %869 = extractelement <16 x i32> %868, i32 0
  %870 = sext i32 %869 to i64
  %871 = getelementptr inbounds float addrspace(1)* %data, i64 %870
  %872 = extractelement <16 x i32> %868, i32 1
  %873 = sext i32 %872 to i64
  %874 = getelementptr inbounds float addrspace(1)* %data, i64 %873
  %875 = extractelement <16 x i32> %868, i32 2
  %876 = sext i32 %875 to i64
  %877 = getelementptr inbounds float addrspace(1)* %data, i64 %876
  %878 = extractelement <16 x i32> %868, i32 3
  %879 = sext i32 %878 to i64
  %880 = getelementptr inbounds float addrspace(1)* %data, i64 %879
  %881 = extractelement <16 x i32> %868, i32 4
  %882 = sext i32 %881 to i64
  %883 = getelementptr inbounds float addrspace(1)* %data, i64 %882
  %884 = extractelement <16 x i32> %868, i32 5
  %885 = sext i32 %884 to i64
  %886 = getelementptr inbounds float addrspace(1)* %data, i64 %885
  %887 = extractelement <16 x i32> %868, i32 6
  %888 = sext i32 %887 to i64
  %889 = getelementptr inbounds float addrspace(1)* %data, i64 %888
  %890 = extractelement <16 x i32> %868, i32 7
  %891 = sext i32 %890 to i64
  %892 = getelementptr inbounds float addrspace(1)* %data, i64 %891
  %893 = extractelement <16 x i32> %868, i32 8
  %894 = sext i32 %893 to i64
  %895 = getelementptr inbounds float addrspace(1)* %data, i64 %894
  %896 = extractelement <16 x i32> %868, i32 9
  %897 = sext i32 %896 to i64
  %898 = getelementptr inbounds float addrspace(1)* %data, i64 %897
  %899 = extractelement <16 x i32> %868, i32 10
  %900 = sext i32 %899 to i64
  %901 = getelementptr inbounds float addrspace(1)* %data, i64 %900
  %902 = extractelement <16 x i32> %868, i32 11
  %903 = sext i32 %902 to i64
  %904 = getelementptr inbounds float addrspace(1)* %data, i64 %903
  %905 = extractelement <16 x i32> %868, i32 12
  %906 = sext i32 %905 to i64
  %907 = getelementptr inbounds float addrspace(1)* %data, i64 %906
  %908 = extractelement <16 x i32> %868, i32 13
  %909 = sext i32 %908 to i64
  %910 = getelementptr inbounds float addrspace(1)* %data, i64 %909
  %911 = extractelement <16 x i32> %868, i32 14
  %912 = sext i32 %911 to i64
  %913 = getelementptr inbounds float addrspace(1)* %data, i64 %912
  %914 = extractelement <16 x i32> %868, i32 15
  %915 = sext i32 %914 to i64
  %916 = getelementptr inbounds float addrspace(1)* %data, i64 %915
  %917 = load float addrspace(1)* %871, align 4
  %918 = load float addrspace(1)* %874, align 4
  %919 = load float addrspace(1)* %877, align 4
  %920 = load float addrspace(1)* %880, align 4
  %921 = load float addrspace(1)* %883, align 4
  %922 = load float addrspace(1)* %886, align 4
  %923 = load float addrspace(1)* %889, align 4
  %924 = load float addrspace(1)* %892, align 4
  %925 = load float addrspace(1)* %895, align 4
  %926 = load float addrspace(1)* %898, align 4
  %927 = load float addrspace(1)* %901, align 4
  %928 = load float addrspace(1)* %904, align 4
  %929 = load float addrspace(1)* %907, align 4
  %930 = load float addrspace(1)* %910, align 4
  %931 = load float addrspace(1)* %913, align 4
  %932 = load float addrspace(1)* %916, align 4
  %temp.vect464 = insertelement <16 x float> undef, float %917, i32 0
  %temp.vect465 = insertelement <16 x float> %temp.vect464, float %918, i32 1
  %temp.vect466 = insertelement <16 x float> %temp.vect465, float %919, i32 2
  %temp.vect467 = insertelement <16 x float> %temp.vect466, float %920, i32 3
  %temp.vect468 = insertelement <16 x float> %temp.vect467, float %921, i32 4
  %temp.vect469 = insertelement <16 x float> %temp.vect468, float %922, i32 5
  %temp.vect470 = insertelement <16 x float> %temp.vect469, float %923, i32 6
  %temp.vect471 = insertelement <16 x float> %temp.vect470, float %924, i32 7
  %temp.vect472 = insertelement <16 x float> %temp.vect471, float %925, i32 8
  %temp.vect473 = insertelement <16 x float> %temp.vect472, float %926, i32 9
  %temp.vect474 = insertelement <16 x float> %temp.vect473, float %927, i32 10
  %temp.vect475 = insertelement <16 x float> %temp.vect474, float %928, i32 11
  %temp.vect476 = insertelement <16 x float> %temp.vect475, float %929, i32 12
  %temp.vect477 = insertelement <16 x float> %temp.vect476, float %930, i32 13
  %temp.vect478 = insertelement <16 x float> %temp.vect477, float %931, i32 14
  %temp.vect479 = insertelement <16 x float> %temp.vect478, float %932, i32 15
  %933 = add nsw <16 x i32> %vectorPHI, <i32 14, i32 14, i32 14, i32 14, i32 14, i32 14, i32 14, i32 14, i32 14, i32 14, i32 14, i32 14, i32 14, i32 14, i32 14, i32 14>
  %934 = and <16 x i32> %933, %vector
  %935 = extractelement <16 x i32> %934, i32 0
  %936 = sext i32 %935 to i64
  %937 = getelementptr inbounds float addrspace(1)* %data, i64 %936
  %938 = extractelement <16 x i32> %934, i32 1
  %939 = sext i32 %938 to i64
  %940 = getelementptr inbounds float addrspace(1)* %data, i64 %939
  %941 = extractelement <16 x i32> %934, i32 2
  %942 = sext i32 %941 to i64
  %943 = getelementptr inbounds float addrspace(1)* %data, i64 %942
  %944 = extractelement <16 x i32> %934, i32 3
  %945 = sext i32 %944 to i64
  %946 = getelementptr inbounds float addrspace(1)* %data, i64 %945
  %947 = extractelement <16 x i32> %934, i32 4
  %948 = sext i32 %947 to i64
  %949 = getelementptr inbounds float addrspace(1)* %data, i64 %948
  %950 = extractelement <16 x i32> %934, i32 5
  %951 = sext i32 %950 to i64
  %952 = getelementptr inbounds float addrspace(1)* %data, i64 %951
  %953 = extractelement <16 x i32> %934, i32 6
  %954 = sext i32 %953 to i64
  %955 = getelementptr inbounds float addrspace(1)* %data, i64 %954
  %956 = extractelement <16 x i32> %934, i32 7
  %957 = sext i32 %956 to i64
  %958 = getelementptr inbounds float addrspace(1)* %data, i64 %957
  %959 = extractelement <16 x i32> %934, i32 8
  %960 = sext i32 %959 to i64
  %961 = getelementptr inbounds float addrspace(1)* %data, i64 %960
  %962 = extractelement <16 x i32> %934, i32 9
  %963 = sext i32 %962 to i64
  %964 = getelementptr inbounds float addrspace(1)* %data, i64 %963
  %965 = extractelement <16 x i32> %934, i32 10
  %966 = sext i32 %965 to i64
  %967 = getelementptr inbounds float addrspace(1)* %data, i64 %966
  %968 = extractelement <16 x i32> %934, i32 11
  %969 = sext i32 %968 to i64
  %970 = getelementptr inbounds float addrspace(1)* %data, i64 %969
  %971 = extractelement <16 x i32> %934, i32 12
  %972 = sext i32 %971 to i64
  %973 = getelementptr inbounds float addrspace(1)* %data, i64 %972
  %974 = extractelement <16 x i32> %934, i32 13
  %975 = sext i32 %974 to i64
  %976 = getelementptr inbounds float addrspace(1)* %data, i64 %975
  %977 = extractelement <16 x i32> %934, i32 14
  %978 = sext i32 %977 to i64
  %979 = getelementptr inbounds float addrspace(1)* %data, i64 %978
  %980 = extractelement <16 x i32> %934, i32 15
  %981 = sext i32 %980 to i64
  %982 = getelementptr inbounds float addrspace(1)* %data, i64 %981
  %983 = load float addrspace(1)* %937, align 4
  %984 = load float addrspace(1)* %940, align 4
  %985 = load float addrspace(1)* %943, align 4
  %986 = load float addrspace(1)* %946, align 4
  %987 = load float addrspace(1)* %949, align 4
  %988 = load float addrspace(1)* %952, align 4
  %989 = load float addrspace(1)* %955, align 4
  %990 = load float addrspace(1)* %958, align 4
  %991 = load float addrspace(1)* %961, align 4
  %992 = load float addrspace(1)* %964, align 4
  %993 = load float addrspace(1)* %967, align 4
  %994 = load float addrspace(1)* %970, align 4
  %995 = load float addrspace(1)* %973, align 4
  %996 = load float addrspace(1)* %976, align 4
  %997 = load float addrspace(1)* %979, align 4
  %998 = load float addrspace(1)* %982, align 4
  %temp.vect480 = insertelement <16 x float> undef, float %983, i32 0
  %temp.vect481 = insertelement <16 x float> %temp.vect480, float %984, i32 1
  %temp.vect482 = insertelement <16 x float> %temp.vect481, float %985, i32 2
  %temp.vect483 = insertelement <16 x float> %temp.vect482, float %986, i32 3
  %temp.vect484 = insertelement <16 x float> %temp.vect483, float %987, i32 4
  %temp.vect485 = insertelement <16 x float> %temp.vect484, float %988, i32 5
  %temp.vect486 = insertelement <16 x float> %temp.vect485, float %989, i32 6
  %temp.vect487 = insertelement <16 x float> %temp.vect486, float %990, i32 7
  %temp.vect488 = insertelement <16 x float> %temp.vect487, float %991, i32 8
  %temp.vect489 = insertelement <16 x float> %temp.vect488, float %992, i32 9
  %temp.vect490 = insertelement <16 x float> %temp.vect489, float %993, i32 10
  %temp.vect491 = insertelement <16 x float> %temp.vect490, float %994, i32 11
  %temp.vect492 = insertelement <16 x float> %temp.vect491, float %995, i32 12
  %temp.vect493 = insertelement <16 x float> %temp.vect492, float %996, i32 13
  %temp.vect494 = insertelement <16 x float> %temp.vect493, float %997, i32 14
  %temp.vect495 = insertelement <16 x float> %temp.vect494, float %998, i32 15
  %999 = add nsw <16 x i32> %vectorPHI, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %1000 = and <16 x i32> %999, %vector
  %1001 = extractelement <16 x i32> %1000, i32 0
  %1002 = sext i32 %1001 to i64
  %1003 = getelementptr inbounds float addrspace(1)* %data, i64 %1002
  %1004 = extractelement <16 x i32> %1000, i32 1
  %1005 = sext i32 %1004 to i64
  %1006 = getelementptr inbounds float addrspace(1)* %data, i64 %1005
  %1007 = extractelement <16 x i32> %1000, i32 2
  %1008 = sext i32 %1007 to i64
  %1009 = getelementptr inbounds float addrspace(1)* %data, i64 %1008
  %1010 = extractelement <16 x i32> %1000, i32 3
  %1011 = sext i32 %1010 to i64
  %1012 = getelementptr inbounds float addrspace(1)* %data, i64 %1011
  %1013 = extractelement <16 x i32> %1000, i32 4
  %1014 = sext i32 %1013 to i64
  %1015 = getelementptr inbounds float addrspace(1)* %data, i64 %1014
  %1016 = extractelement <16 x i32> %1000, i32 5
  %1017 = sext i32 %1016 to i64
  %1018 = getelementptr inbounds float addrspace(1)* %data, i64 %1017
  %1019 = extractelement <16 x i32> %1000, i32 6
  %1020 = sext i32 %1019 to i64
  %1021 = getelementptr inbounds float addrspace(1)* %data, i64 %1020
  %1022 = extractelement <16 x i32> %1000, i32 7
  %1023 = sext i32 %1022 to i64
  %1024 = getelementptr inbounds float addrspace(1)* %data, i64 %1023
  %1025 = extractelement <16 x i32> %1000, i32 8
  %1026 = sext i32 %1025 to i64
  %1027 = getelementptr inbounds float addrspace(1)* %data, i64 %1026
  %1028 = extractelement <16 x i32> %1000, i32 9
  %1029 = sext i32 %1028 to i64
  %1030 = getelementptr inbounds float addrspace(1)* %data, i64 %1029
  %1031 = extractelement <16 x i32> %1000, i32 10
  %1032 = sext i32 %1031 to i64
  %1033 = getelementptr inbounds float addrspace(1)* %data, i64 %1032
  %1034 = extractelement <16 x i32> %1000, i32 11
  %1035 = sext i32 %1034 to i64
  %1036 = getelementptr inbounds float addrspace(1)* %data, i64 %1035
  %1037 = extractelement <16 x i32> %1000, i32 12
  %1038 = sext i32 %1037 to i64
  %1039 = getelementptr inbounds float addrspace(1)* %data, i64 %1038
  %1040 = extractelement <16 x i32> %1000, i32 13
  %1041 = sext i32 %1040 to i64
  %1042 = getelementptr inbounds float addrspace(1)* %data, i64 %1041
  %1043 = extractelement <16 x i32> %1000, i32 14
  %1044 = sext i32 %1043 to i64
  %1045 = getelementptr inbounds float addrspace(1)* %data, i64 %1044
  %1046 = extractelement <16 x i32> %1000, i32 15
  %1047 = sext i32 %1046 to i64
  %1048 = getelementptr inbounds float addrspace(1)* %data, i64 %1047
  %1049 = load float addrspace(1)* %1003, align 4
  %1050 = load float addrspace(1)* %1006, align 4
  %1051 = load float addrspace(1)* %1009, align 4
  %1052 = load float addrspace(1)* %1012, align 4
  %1053 = load float addrspace(1)* %1015, align 4
  %1054 = load float addrspace(1)* %1018, align 4
  %1055 = load float addrspace(1)* %1021, align 4
  %1056 = load float addrspace(1)* %1024, align 4
  %1057 = load float addrspace(1)* %1027, align 4
  %1058 = load float addrspace(1)* %1030, align 4
  %1059 = load float addrspace(1)* %1033, align 4
  %1060 = load float addrspace(1)* %1036, align 4
  %1061 = load float addrspace(1)* %1039, align 4
  %1062 = load float addrspace(1)* %1042, align 4
  %1063 = load float addrspace(1)* %1045, align 4
  %1064 = load float addrspace(1)* %1048, align 4
  %temp.vect496 = insertelement <16 x float> undef, float %1049, i32 0
  %temp.vect497 = insertelement <16 x float> %temp.vect496, float %1050, i32 1
  %temp.vect498 = insertelement <16 x float> %temp.vect497, float %1051, i32 2
  %temp.vect499 = insertelement <16 x float> %temp.vect498, float %1052, i32 3
  %temp.vect500 = insertelement <16 x float> %temp.vect499, float %1053, i32 4
  %temp.vect501 = insertelement <16 x float> %temp.vect500, float %1054, i32 5
  %temp.vect502 = insertelement <16 x float> %temp.vect501, float %1055, i32 6
  %temp.vect503 = insertelement <16 x float> %temp.vect502, float %1056, i32 7
  %temp.vect504 = insertelement <16 x float> %temp.vect503, float %1057, i32 8
  %temp.vect505 = insertelement <16 x float> %temp.vect504, float %1058, i32 9
  %temp.vect506 = insertelement <16 x float> %temp.vect505, float %1059, i32 10
  %temp.vect507 = insertelement <16 x float> %temp.vect506, float %1060, i32 11
  %temp.vect508 = insertelement <16 x float> %temp.vect507, float %1061, i32 12
  %temp.vect509 = insertelement <16 x float> %temp.vect508, float %1062, i32 13
  %temp.vect510 = insertelement <16 x float> %temp.vect509, float %1063, i32 14
  %temp.vect511 = insertelement <16 x float> %temp.vect510, float %1064, i32 15
  %1065 = fadd <16 x float> %temp.vect271, %temp.vect287
  %1066 = fadd <16 x float> %1065, %temp.vect303
  %1067 = fadd <16 x float> %1066, %temp.vect319
  %1068 = fadd <16 x float> %1067, %temp.vect335
  %1069 = fadd <16 x float> %1068, %temp.vect351
  %1070 = fadd <16 x float> %1069, %temp.vect367
  %1071 = fadd <16 x float> %1070, %temp.vect383
  %1072 = fadd <16 x float> %1071, %temp.vect399
  %1073 = fadd <16 x float> %1072, %temp.vect415
  %1074 = fadd <16 x float> %1073, %temp.vect431
  %1075 = fadd <16 x float> %1074, %temp.vect447
  %1076 = fadd <16 x float> %1075, %temp.vect463
  %1077 = fadd <16 x float> %1076, %temp.vect479
  %1078 = fadd <16 x float> %1077, %temp.vect495
  %1079 = fadd <16 x float> %1078, %temp.vect511
  %1080 = fadd <16 x float> %vectorPHI1, %1079
  %1081 = add nsw i32 %j.01, 1
  %1082 = add nsw <16 x i32> %vectorPHI, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %1083 = and <16 x i32> %1082, %vector
  %exitcond = icmp eq i32 %1081, 512
  br i1 %exitcond, label %._crit_edge, label %9

._crit_edge:                                      ; preds = %9
  %1084 = extractelement <16 x i32> %7, i32 0
  %extract512 = sext i32 %1084 to i64
  %1085 = getelementptr inbounds float addrspace(1)* %output, i64 %extract512
  %ptrTypeCast = bitcast float addrspace(1)* %1085 to <16 x float> addrspace(1)*
  store <16 x float> %1080, <16 x float> addrspace(1)* %ptrTypeCast, align 4
  %check.WI.iter = icmp ult i64 %CurrWI..0, %iterCount
  br i1 %check.WI.iter, label %thenBB, label %SyncBB

thenBB:                                           ; preds = %._crit_edge
  %"CurrWI++" = add nuw i64 %CurrWI..0, 1
  br label %SyncBB528

SyncBB:                                           ; preds = %._crit_edge
  ret void
}

define void @readGlobalMemoryUnit(i8* %pBuffer) {
entry:
  %0 = bitcast i8* %pBuffer to float addrspace(1)**
  %1 = load float addrspace(1)** %0, align 8
  %2 = getelementptr i8* %pBuffer, i64 8
  %3 = bitcast i8* %2 to float addrspace(1)**
  %4 = load float addrspace(1)** %3, align 8
  %5 = getelementptr i8* %pBuffer, i64 16
  %6 = bitcast i8* %5 to i32*
  %7 = load i32* %6, align 4
  %8 = getelementptr i8* %pBuffer, i64 48
  %9 = bitcast i8* %8 to %struct.PaddedDimId**
  %10 = load %struct.PaddedDimId** %9, align 8
  %11 = getelementptr i8* %pBuffer, i64 56
  %12 = bitcast i8* %11 to %struct.PaddedDimId**
  %13 = load %struct.PaddedDimId** %12, align 8
  %14 = getelementptr i8* %pBuffer, i64 72
  %15 = bitcast i8* %14 to i64*
  %16 = load i64* %15, align 8
  %17 = add nsw i32 %7, -1
  br label %SyncBB4.i

SyncBB4.i:                                        ; preds = %thenBB.i, %entry
  %CurrWI..0.i = phi i64 [ 0, %entry ], [ %"CurrWI++.i", %thenBB.i ]
  %18 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %19 = load i64* %18, align 8
  %20 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %21 = load i64* %20, align 8
  %22 = add i64 %19, %21
  %23 = trunc i64 %22 to i32
  %24 = shl i32 %23, 10
  br label %25

; <label>:25                                      ; preds = %25, %SyncBB4.i
  %s.03.i = phi i32 [ %24, %SyncBB4.i ], [ %123, %25 ]
  %sum.02.i = phi float [ 0.000000e+00, %SyncBB4.i ], [ %120, %25 ]
  %j.01.i = phi i32 [ 0, %SyncBB4.i ], [ %121, %25 ]
  %26 = and i32 %s.03.i, %17
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds float addrspace(1)* %1, i64 %27
  %29 = load float addrspace(1)* %28, align 4
  %30 = add nsw i32 %s.03.i, 1
  %31 = and i32 %30, %17
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds float addrspace(1)* %1, i64 %32
  %34 = load float addrspace(1)* %33, align 4
  %35 = add nsw i32 %s.03.i, 2
  %36 = and i32 %35, %17
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds float addrspace(1)* %1, i64 %37
  %39 = load float addrspace(1)* %38, align 4
  %40 = add nsw i32 %s.03.i, 3
  %41 = and i32 %40, %17
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds float addrspace(1)* %1, i64 %42
  %44 = load float addrspace(1)* %43, align 4
  %45 = add nsw i32 %s.03.i, 4
  %46 = and i32 %45, %17
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds float addrspace(1)* %1, i64 %47
  %49 = load float addrspace(1)* %48, align 4
  %50 = add nsw i32 %s.03.i, 5
  %51 = and i32 %50, %17
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds float addrspace(1)* %1, i64 %52
  %54 = load float addrspace(1)* %53, align 4
  %55 = add nsw i32 %s.03.i, 6
  %56 = and i32 %55, %17
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds float addrspace(1)* %1, i64 %57
  %59 = load float addrspace(1)* %58, align 4
  %60 = add nsw i32 %s.03.i, 7
  %61 = and i32 %60, %17
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds float addrspace(1)* %1, i64 %62
  %64 = load float addrspace(1)* %63, align 4
  %65 = add nsw i32 %s.03.i, 8
  %66 = and i32 %65, %17
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds float addrspace(1)* %1, i64 %67
  %69 = load float addrspace(1)* %68, align 4
  %70 = add nsw i32 %s.03.i, 9
  %71 = and i32 %70, %17
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds float addrspace(1)* %1, i64 %72
  %74 = load float addrspace(1)* %73, align 4
  %75 = add nsw i32 %s.03.i, 10
  %76 = and i32 %75, %17
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds float addrspace(1)* %1, i64 %77
  %79 = load float addrspace(1)* %78, align 4
  %80 = add nsw i32 %s.03.i, 11
  %81 = and i32 %80, %17
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds float addrspace(1)* %1, i64 %82
  %84 = load float addrspace(1)* %83, align 4
  %85 = add nsw i32 %s.03.i, 12
  %86 = and i32 %85, %17
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds float addrspace(1)* %1, i64 %87
  %89 = load float addrspace(1)* %88, align 4
  %90 = add nsw i32 %s.03.i, 13
  %91 = and i32 %90, %17
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds float addrspace(1)* %1, i64 %92
  %94 = load float addrspace(1)* %93, align 4
  %95 = add nsw i32 %s.03.i, 14
  %96 = and i32 %95, %17
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds float addrspace(1)* %1, i64 %97
  %99 = load float addrspace(1)* %98, align 4
  %100 = add nsw i32 %s.03.i, 15
  %101 = and i32 %100, %17
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds float addrspace(1)* %1, i64 %102
  %104 = load float addrspace(1)* %103, align 4
  %105 = fadd float %29, %34
  %106 = fadd float %105, %39
  %107 = fadd float %106, %44
  %108 = fadd float %107, %49
  %109 = fadd float %108, %54
  %110 = fadd float %109, %59
  %111 = fadd float %110, %64
  %112 = fadd float %111, %69
  %113 = fadd float %112, %74
  %114 = fadd float %113, %79
  %115 = fadd float %114, %84
  %116 = fadd float %115, %89
  %117 = fadd float %116, %94
  %118 = fadd float %117, %99
  %119 = fadd float %118, %104
  %120 = fadd float %sum.02.i, %119
  %121 = add nsw i32 %j.01.i, 1
  %122 = add nsw i32 %s.03.i, 16
  %123 = and i32 %122, %17
  %exitcond.i = icmp eq i32 %121, 512
  br i1 %exitcond.i, label %._crit_edge.i, label %25

._crit_edge.i:                                    ; preds = %25
  %124 = sext i32 %23 to i64
  %125 = getelementptr inbounds float addrspace(1)* %4, i64 %124
  store float %120, float addrspace(1)* %125, align 4
  %check.WI.iter.i = icmp ult i64 %CurrWI..0.i, %16
  br i1 %check.WI.iter.i, label %thenBB.i, label %__readGlobalMemoryUnit_separated_args.exit

thenBB.i:                                         ; preds = %._crit_edge.i
  %"CurrWI++.i" = add nuw i64 %CurrWI..0.i, 1
  br label %SyncBB4.i

__readGlobalMemoryUnit_separated_args.exit:       ; preds = %._crit_edge.i
  ret void
}

define void @__Vectorized_.readGlobalMemoryUnit(i8* %pBuffer) {
entry:
  %0 = bitcast i8* %pBuffer to float addrspace(1)**
  %1 = load float addrspace(1)** %0, align 8
  %2 = getelementptr i8* %pBuffer, i64 8
  %3 = bitcast i8* %2 to float addrspace(1)**
  %4 = load float addrspace(1)** %3, align 8
  %5 = getelementptr i8* %pBuffer, i64 16
  %6 = bitcast i8* %5 to i32*
  %7 = load i32* %6, align 4
  %8 = getelementptr i8* %pBuffer, i64 48
  %9 = bitcast i8* %8 to %struct.PaddedDimId**
  %10 = load %struct.PaddedDimId** %9, align 8
  %11 = getelementptr i8* %pBuffer, i64 56
  %12 = bitcast i8* %11 to %struct.PaddedDimId**
  %13 = load %struct.PaddedDimId** %12, align 8
  %14 = getelementptr i8* %pBuffer, i64 72
  %15 = bitcast i8* %14 to i64*
  %16 = load i64* %15, align 8
  %17 = add nsw i32 %7, -1
  %temp.i = insertelement <16 x i32> undef, i32 %17, i32 0
  %vector.i = shufflevector <16 x i32> %temp.i, <16 x i32> undef, <16 x i32> zeroinitializer
  br label %SyncBB528.i

SyncBB528.i:                                      ; preds = %thenBB.i, %entry
  %CurrWI..0.i = phi i64 [ 0, %entry ], [ %"CurrWI++.i", %thenBB.i ]
  %18 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %19 = load i64* %18, align 8
  %20 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %21 = load i64* %20, align 8
  %22 = add i64 %19, %21
  %broadcast1.i = insertelement <16 x i64> undef, i64 %22, i32 0
  %broadcast2.i = shufflevector <16 x i64> %broadcast1.i, <16 x i64> undef, <16 x i32> zeroinitializer
  %23 = add <16 x i64> %broadcast2.i, <i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8, i64 9, i64 10, i64 11, i64 12, i64 13, i64 14, i64 15>
  %24 = trunc <16 x i64> %23 to <16 x i32>
  %25 = shl <16 x i32> %24, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  br label %26

; <label>:26                                      ; preds = %26, %SyncBB528.i
  %vectorPHI.i = phi <16 x i32> [ %25, %SyncBB528.i ], [ %1100, %26 ]
  %vectorPHI1.i = phi <16 x float> [ zeroinitializer, %SyncBB528.i ], [ %1097, %26 ]
  %j.01.i = phi i32 [ 0, %SyncBB528.i ], [ %1098, %26 ]
  %27 = and <16 x i32> %vectorPHI.i, %vector.i
  %28 = extractelement <16 x i32> %27, i32 0
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds float addrspace(1)* %1, i64 %29
  %31 = extractelement <16 x i32> %27, i32 1
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds float addrspace(1)* %1, i64 %32
  %34 = extractelement <16 x i32> %27, i32 2
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds float addrspace(1)* %1, i64 %35
  %37 = extractelement <16 x i32> %27, i32 3
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds float addrspace(1)* %1, i64 %38
  %40 = extractelement <16 x i32> %27, i32 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds float addrspace(1)* %1, i64 %41
  %43 = extractelement <16 x i32> %27, i32 5
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds float addrspace(1)* %1, i64 %44
  %46 = extractelement <16 x i32> %27, i32 6
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds float addrspace(1)* %1, i64 %47
  %49 = extractelement <16 x i32> %27, i32 7
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds float addrspace(1)* %1, i64 %50
  %52 = extractelement <16 x i32> %27, i32 8
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds float addrspace(1)* %1, i64 %53
  %55 = extractelement <16 x i32> %27, i32 9
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds float addrspace(1)* %1, i64 %56
  %58 = extractelement <16 x i32> %27, i32 10
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds float addrspace(1)* %1, i64 %59
  %61 = extractelement <16 x i32> %27, i32 11
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds float addrspace(1)* %1, i64 %62
  %64 = extractelement <16 x i32> %27, i32 12
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds float addrspace(1)* %1, i64 %65
  %67 = extractelement <16 x i32> %27, i32 13
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds float addrspace(1)* %1, i64 %68
  %70 = extractelement <16 x i32> %27, i32 14
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds float addrspace(1)* %1, i64 %71
  %73 = extractelement <16 x i32> %27, i32 15
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds float addrspace(1)* %1, i64 %74
  %76 = load float addrspace(1)* %30, align 4
  %77 = load float addrspace(1)* %33, align 4
  %78 = load float addrspace(1)* %36, align 4
  %79 = load float addrspace(1)* %39, align 4
  %80 = load float addrspace(1)* %42, align 4
  %81 = load float addrspace(1)* %45, align 4
  %82 = load float addrspace(1)* %48, align 4
  %83 = load float addrspace(1)* %51, align 4
  %84 = load float addrspace(1)* %54, align 4
  %85 = load float addrspace(1)* %57, align 4
  %86 = load float addrspace(1)* %60, align 4
  %87 = load float addrspace(1)* %63, align 4
  %88 = load float addrspace(1)* %66, align 4
  %89 = load float addrspace(1)* %69, align 4
  %90 = load float addrspace(1)* %72, align 4
  %91 = load float addrspace(1)* %75, align 4
  %temp.vect.i = insertelement <16 x float> undef, float %76, i32 0
  %temp.vect257.i = insertelement <16 x float> %temp.vect.i, float %77, i32 1
  %temp.vect258.i = insertelement <16 x float> %temp.vect257.i, float %78, i32 2
  %temp.vect259.i = insertelement <16 x float> %temp.vect258.i, float %79, i32 3
  %temp.vect260.i = insertelement <16 x float> %temp.vect259.i, float %80, i32 4
  %temp.vect261.i = insertelement <16 x float> %temp.vect260.i, float %81, i32 5
  %temp.vect262.i = insertelement <16 x float> %temp.vect261.i, float %82, i32 6
  %temp.vect263.i = insertelement <16 x float> %temp.vect262.i, float %83, i32 7
  %temp.vect264.i = insertelement <16 x float> %temp.vect263.i, float %84, i32 8
  %temp.vect265.i = insertelement <16 x float> %temp.vect264.i, float %85, i32 9
  %temp.vect266.i = insertelement <16 x float> %temp.vect265.i, float %86, i32 10
  %temp.vect267.i = insertelement <16 x float> %temp.vect266.i, float %87, i32 11
  %temp.vect268.i = insertelement <16 x float> %temp.vect267.i, float %88, i32 12
  %temp.vect269.i = insertelement <16 x float> %temp.vect268.i, float %89, i32 13
  %temp.vect270.i = insertelement <16 x float> %temp.vect269.i, float %90, i32 14
  %temp.vect271.i = insertelement <16 x float> %temp.vect270.i, float %91, i32 15
  %92 = add nsw <16 x i32> %vectorPHI.i, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %93 = and <16 x i32> %92, %vector.i
  %94 = extractelement <16 x i32> %93, i32 0
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds float addrspace(1)* %1, i64 %95
  %97 = extractelement <16 x i32> %93, i32 1
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds float addrspace(1)* %1, i64 %98
  %100 = extractelement <16 x i32> %93, i32 2
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds float addrspace(1)* %1, i64 %101
  %103 = extractelement <16 x i32> %93, i32 3
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds float addrspace(1)* %1, i64 %104
  %106 = extractelement <16 x i32> %93, i32 4
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds float addrspace(1)* %1, i64 %107
  %109 = extractelement <16 x i32> %93, i32 5
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds float addrspace(1)* %1, i64 %110
  %112 = extractelement <16 x i32> %93, i32 6
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds float addrspace(1)* %1, i64 %113
  %115 = extractelement <16 x i32> %93, i32 7
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds float addrspace(1)* %1, i64 %116
  %118 = extractelement <16 x i32> %93, i32 8
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds float addrspace(1)* %1, i64 %119
  %121 = extractelement <16 x i32> %93, i32 9
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds float addrspace(1)* %1, i64 %122
  %124 = extractelement <16 x i32> %93, i32 10
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds float addrspace(1)* %1, i64 %125
  %127 = extractelement <16 x i32> %93, i32 11
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds float addrspace(1)* %1, i64 %128
  %130 = extractelement <16 x i32> %93, i32 12
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds float addrspace(1)* %1, i64 %131
  %133 = extractelement <16 x i32> %93, i32 13
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds float addrspace(1)* %1, i64 %134
  %136 = extractelement <16 x i32> %93, i32 14
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds float addrspace(1)* %1, i64 %137
  %139 = extractelement <16 x i32> %93, i32 15
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds float addrspace(1)* %1, i64 %140
  %142 = load float addrspace(1)* %96, align 4
  %143 = load float addrspace(1)* %99, align 4
  %144 = load float addrspace(1)* %102, align 4
  %145 = load float addrspace(1)* %105, align 4
  %146 = load float addrspace(1)* %108, align 4
  %147 = load float addrspace(1)* %111, align 4
  %148 = load float addrspace(1)* %114, align 4
  %149 = load float addrspace(1)* %117, align 4
  %150 = load float addrspace(1)* %120, align 4
  %151 = load float addrspace(1)* %123, align 4
  %152 = load float addrspace(1)* %126, align 4
  %153 = load float addrspace(1)* %129, align 4
  %154 = load float addrspace(1)* %132, align 4
  %155 = load float addrspace(1)* %135, align 4
  %156 = load float addrspace(1)* %138, align 4
  %157 = load float addrspace(1)* %141, align 4
  %temp.vect272.i = insertelement <16 x float> undef, float %142, i32 0
  %temp.vect273.i = insertelement <16 x float> %temp.vect272.i, float %143, i32 1
  %temp.vect274.i = insertelement <16 x float> %temp.vect273.i, float %144, i32 2
  %temp.vect275.i = insertelement <16 x float> %temp.vect274.i, float %145, i32 3
  %temp.vect276.i = insertelement <16 x float> %temp.vect275.i, float %146, i32 4
  %temp.vect277.i = insertelement <16 x float> %temp.vect276.i, float %147, i32 5
  %temp.vect278.i = insertelement <16 x float> %temp.vect277.i, float %148, i32 6
  %temp.vect279.i = insertelement <16 x float> %temp.vect278.i, float %149, i32 7
  %temp.vect280.i = insertelement <16 x float> %temp.vect279.i, float %150, i32 8
  %temp.vect281.i = insertelement <16 x float> %temp.vect280.i, float %151, i32 9
  %temp.vect282.i = insertelement <16 x float> %temp.vect281.i, float %152, i32 10
  %temp.vect283.i = insertelement <16 x float> %temp.vect282.i, float %153, i32 11
  %temp.vect284.i = insertelement <16 x float> %temp.vect283.i, float %154, i32 12
  %temp.vect285.i = insertelement <16 x float> %temp.vect284.i, float %155, i32 13
  %temp.vect286.i = insertelement <16 x float> %temp.vect285.i, float %156, i32 14
  %temp.vect287.i = insertelement <16 x float> %temp.vect286.i, float %157, i32 15
  %158 = add nsw <16 x i32> %vectorPHI.i, <i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2>
  %159 = and <16 x i32> %158, %vector.i
  %160 = extractelement <16 x i32> %159, i32 0
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds float addrspace(1)* %1, i64 %161
  %163 = extractelement <16 x i32> %159, i32 1
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds float addrspace(1)* %1, i64 %164
  %166 = extractelement <16 x i32> %159, i32 2
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds float addrspace(1)* %1, i64 %167
  %169 = extractelement <16 x i32> %159, i32 3
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds float addrspace(1)* %1, i64 %170
  %172 = extractelement <16 x i32> %159, i32 4
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds float addrspace(1)* %1, i64 %173
  %175 = extractelement <16 x i32> %159, i32 5
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds float addrspace(1)* %1, i64 %176
  %178 = extractelement <16 x i32> %159, i32 6
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds float addrspace(1)* %1, i64 %179
  %181 = extractelement <16 x i32> %159, i32 7
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds float addrspace(1)* %1, i64 %182
  %184 = extractelement <16 x i32> %159, i32 8
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds float addrspace(1)* %1, i64 %185
  %187 = extractelement <16 x i32> %159, i32 9
  %188 = sext i32 %187 to i64
  %189 = getelementptr inbounds float addrspace(1)* %1, i64 %188
  %190 = extractelement <16 x i32> %159, i32 10
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds float addrspace(1)* %1, i64 %191
  %193 = extractelement <16 x i32> %159, i32 11
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds float addrspace(1)* %1, i64 %194
  %196 = extractelement <16 x i32> %159, i32 12
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds float addrspace(1)* %1, i64 %197
  %199 = extractelement <16 x i32> %159, i32 13
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds float addrspace(1)* %1, i64 %200
  %202 = extractelement <16 x i32> %159, i32 14
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds float addrspace(1)* %1, i64 %203
  %205 = extractelement <16 x i32> %159, i32 15
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds float addrspace(1)* %1, i64 %206
  %208 = load float addrspace(1)* %162, align 4
  %209 = load float addrspace(1)* %165, align 4
  %210 = load float addrspace(1)* %168, align 4
  %211 = load float addrspace(1)* %171, align 4
  %212 = load float addrspace(1)* %174, align 4
  %213 = load float addrspace(1)* %177, align 4
  %214 = load float addrspace(1)* %180, align 4
  %215 = load float addrspace(1)* %183, align 4
  %216 = load float addrspace(1)* %186, align 4
  %217 = load float addrspace(1)* %189, align 4
  %218 = load float addrspace(1)* %192, align 4
  %219 = load float addrspace(1)* %195, align 4
  %220 = load float addrspace(1)* %198, align 4
  %221 = load float addrspace(1)* %201, align 4
  %222 = load float addrspace(1)* %204, align 4
  %223 = load float addrspace(1)* %207, align 4
  %temp.vect288.i = insertelement <16 x float> undef, float %208, i32 0
  %temp.vect289.i = insertelement <16 x float> %temp.vect288.i, float %209, i32 1
  %temp.vect290.i = insertelement <16 x float> %temp.vect289.i, float %210, i32 2
  %temp.vect291.i = insertelement <16 x float> %temp.vect290.i, float %211, i32 3
  %temp.vect292.i = insertelement <16 x float> %temp.vect291.i, float %212, i32 4
  %temp.vect293.i = insertelement <16 x float> %temp.vect292.i, float %213, i32 5
  %temp.vect294.i = insertelement <16 x float> %temp.vect293.i, float %214, i32 6
  %temp.vect295.i = insertelement <16 x float> %temp.vect294.i, float %215, i32 7
  %temp.vect296.i = insertelement <16 x float> %temp.vect295.i, float %216, i32 8
  %temp.vect297.i = insertelement <16 x float> %temp.vect296.i, float %217, i32 9
  %temp.vect298.i = insertelement <16 x float> %temp.vect297.i, float %218, i32 10
  %temp.vect299.i = insertelement <16 x float> %temp.vect298.i, float %219, i32 11
  %temp.vect300.i = insertelement <16 x float> %temp.vect299.i, float %220, i32 12
  %temp.vect301.i = insertelement <16 x float> %temp.vect300.i, float %221, i32 13
  %temp.vect302.i = insertelement <16 x float> %temp.vect301.i, float %222, i32 14
  %temp.vect303.i = insertelement <16 x float> %temp.vect302.i, float %223, i32 15
  %224 = add nsw <16 x i32> %vectorPHI.i, <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>
  %225 = and <16 x i32> %224, %vector.i
  %226 = extractelement <16 x i32> %225, i32 0
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds float addrspace(1)* %1, i64 %227
  %229 = extractelement <16 x i32> %225, i32 1
  %230 = sext i32 %229 to i64
  %231 = getelementptr inbounds float addrspace(1)* %1, i64 %230
  %232 = extractelement <16 x i32> %225, i32 2
  %233 = sext i32 %232 to i64
  %234 = getelementptr inbounds float addrspace(1)* %1, i64 %233
  %235 = extractelement <16 x i32> %225, i32 3
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds float addrspace(1)* %1, i64 %236
  %238 = extractelement <16 x i32> %225, i32 4
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds float addrspace(1)* %1, i64 %239
  %241 = extractelement <16 x i32> %225, i32 5
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds float addrspace(1)* %1, i64 %242
  %244 = extractelement <16 x i32> %225, i32 6
  %245 = sext i32 %244 to i64
  %246 = getelementptr inbounds float addrspace(1)* %1, i64 %245
  %247 = extractelement <16 x i32> %225, i32 7
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds float addrspace(1)* %1, i64 %248
  %250 = extractelement <16 x i32> %225, i32 8
  %251 = sext i32 %250 to i64
  %252 = getelementptr inbounds float addrspace(1)* %1, i64 %251
  %253 = extractelement <16 x i32> %225, i32 9
  %254 = sext i32 %253 to i64
  %255 = getelementptr inbounds float addrspace(1)* %1, i64 %254
  %256 = extractelement <16 x i32> %225, i32 10
  %257 = sext i32 %256 to i64
  %258 = getelementptr inbounds float addrspace(1)* %1, i64 %257
  %259 = extractelement <16 x i32> %225, i32 11
  %260 = sext i32 %259 to i64
  %261 = getelementptr inbounds float addrspace(1)* %1, i64 %260
  %262 = extractelement <16 x i32> %225, i32 12
  %263 = sext i32 %262 to i64
  %264 = getelementptr inbounds float addrspace(1)* %1, i64 %263
  %265 = extractelement <16 x i32> %225, i32 13
  %266 = sext i32 %265 to i64
  %267 = getelementptr inbounds float addrspace(1)* %1, i64 %266
  %268 = extractelement <16 x i32> %225, i32 14
  %269 = sext i32 %268 to i64
  %270 = getelementptr inbounds float addrspace(1)* %1, i64 %269
  %271 = extractelement <16 x i32> %225, i32 15
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds float addrspace(1)* %1, i64 %272
  %274 = load float addrspace(1)* %228, align 4
  %275 = load float addrspace(1)* %231, align 4
  %276 = load float addrspace(1)* %234, align 4
  %277 = load float addrspace(1)* %237, align 4
  %278 = load float addrspace(1)* %240, align 4
  %279 = load float addrspace(1)* %243, align 4
  %280 = load float addrspace(1)* %246, align 4
  %281 = load float addrspace(1)* %249, align 4
  %282 = load float addrspace(1)* %252, align 4
  %283 = load float addrspace(1)* %255, align 4
  %284 = load float addrspace(1)* %258, align 4
  %285 = load float addrspace(1)* %261, align 4
  %286 = load float addrspace(1)* %264, align 4
  %287 = load float addrspace(1)* %267, align 4
  %288 = load float addrspace(1)* %270, align 4
  %289 = load float addrspace(1)* %273, align 4
  %temp.vect304.i = insertelement <16 x float> undef, float %274, i32 0
  %temp.vect305.i = insertelement <16 x float> %temp.vect304.i, float %275, i32 1
  %temp.vect306.i = insertelement <16 x float> %temp.vect305.i, float %276, i32 2
  %temp.vect307.i = insertelement <16 x float> %temp.vect306.i, float %277, i32 3
  %temp.vect308.i = insertelement <16 x float> %temp.vect307.i, float %278, i32 4
  %temp.vect309.i = insertelement <16 x float> %temp.vect308.i, float %279, i32 5
  %temp.vect310.i = insertelement <16 x float> %temp.vect309.i, float %280, i32 6
  %temp.vect311.i = insertelement <16 x float> %temp.vect310.i, float %281, i32 7
  %temp.vect312.i = insertelement <16 x float> %temp.vect311.i, float %282, i32 8
  %temp.vect313.i = insertelement <16 x float> %temp.vect312.i, float %283, i32 9
  %temp.vect314.i = insertelement <16 x float> %temp.vect313.i, float %284, i32 10
  %temp.vect315.i = insertelement <16 x float> %temp.vect314.i, float %285, i32 11
  %temp.vect316.i = insertelement <16 x float> %temp.vect315.i, float %286, i32 12
  %temp.vect317.i = insertelement <16 x float> %temp.vect316.i, float %287, i32 13
  %temp.vect318.i = insertelement <16 x float> %temp.vect317.i, float %288, i32 14
  %temp.vect319.i = insertelement <16 x float> %temp.vect318.i, float %289, i32 15
  %290 = add nsw <16 x i32> %vectorPHI.i, <i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4>
  %291 = and <16 x i32> %290, %vector.i
  %292 = extractelement <16 x i32> %291, i32 0
  %293 = sext i32 %292 to i64
  %294 = getelementptr inbounds float addrspace(1)* %1, i64 %293
  %295 = extractelement <16 x i32> %291, i32 1
  %296 = sext i32 %295 to i64
  %297 = getelementptr inbounds float addrspace(1)* %1, i64 %296
  %298 = extractelement <16 x i32> %291, i32 2
  %299 = sext i32 %298 to i64
  %300 = getelementptr inbounds float addrspace(1)* %1, i64 %299
  %301 = extractelement <16 x i32> %291, i32 3
  %302 = sext i32 %301 to i64
  %303 = getelementptr inbounds float addrspace(1)* %1, i64 %302
  %304 = extractelement <16 x i32> %291, i32 4
  %305 = sext i32 %304 to i64
  %306 = getelementptr inbounds float addrspace(1)* %1, i64 %305
  %307 = extractelement <16 x i32> %291, i32 5
  %308 = sext i32 %307 to i64
  %309 = getelementptr inbounds float addrspace(1)* %1, i64 %308
  %310 = extractelement <16 x i32> %291, i32 6
  %311 = sext i32 %310 to i64
  %312 = getelementptr inbounds float addrspace(1)* %1, i64 %311
  %313 = extractelement <16 x i32> %291, i32 7
  %314 = sext i32 %313 to i64
  %315 = getelementptr inbounds float addrspace(1)* %1, i64 %314
  %316 = extractelement <16 x i32> %291, i32 8
  %317 = sext i32 %316 to i64
  %318 = getelementptr inbounds float addrspace(1)* %1, i64 %317
  %319 = extractelement <16 x i32> %291, i32 9
  %320 = sext i32 %319 to i64
  %321 = getelementptr inbounds float addrspace(1)* %1, i64 %320
  %322 = extractelement <16 x i32> %291, i32 10
  %323 = sext i32 %322 to i64
  %324 = getelementptr inbounds float addrspace(1)* %1, i64 %323
  %325 = extractelement <16 x i32> %291, i32 11
  %326 = sext i32 %325 to i64
  %327 = getelementptr inbounds float addrspace(1)* %1, i64 %326
  %328 = extractelement <16 x i32> %291, i32 12
  %329 = sext i32 %328 to i64
  %330 = getelementptr inbounds float addrspace(1)* %1, i64 %329
  %331 = extractelement <16 x i32> %291, i32 13
  %332 = sext i32 %331 to i64
  %333 = getelementptr inbounds float addrspace(1)* %1, i64 %332
  %334 = extractelement <16 x i32> %291, i32 14
  %335 = sext i32 %334 to i64
  %336 = getelementptr inbounds float addrspace(1)* %1, i64 %335
  %337 = extractelement <16 x i32> %291, i32 15
  %338 = sext i32 %337 to i64
  %339 = getelementptr inbounds float addrspace(1)* %1, i64 %338
  %340 = load float addrspace(1)* %294, align 4
  %341 = load float addrspace(1)* %297, align 4
  %342 = load float addrspace(1)* %300, align 4
  %343 = load float addrspace(1)* %303, align 4
  %344 = load float addrspace(1)* %306, align 4
  %345 = load float addrspace(1)* %309, align 4
  %346 = load float addrspace(1)* %312, align 4
  %347 = load float addrspace(1)* %315, align 4
  %348 = load float addrspace(1)* %318, align 4
  %349 = load float addrspace(1)* %321, align 4
  %350 = load float addrspace(1)* %324, align 4
  %351 = load float addrspace(1)* %327, align 4
  %352 = load float addrspace(1)* %330, align 4
  %353 = load float addrspace(1)* %333, align 4
  %354 = load float addrspace(1)* %336, align 4
  %355 = load float addrspace(1)* %339, align 4
  %temp.vect320.i = insertelement <16 x float> undef, float %340, i32 0
  %temp.vect321.i = insertelement <16 x float> %temp.vect320.i, float %341, i32 1
  %temp.vect322.i = insertelement <16 x float> %temp.vect321.i, float %342, i32 2
  %temp.vect323.i = insertelement <16 x float> %temp.vect322.i, float %343, i32 3
  %temp.vect324.i = insertelement <16 x float> %temp.vect323.i, float %344, i32 4
  %temp.vect325.i = insertelement <16 x float> %temp.vect324.i, float %345, i32 5
  %temp.vect326.i = insertelement <16 x float> %temp.vect325.i, float %346, i32 6
  %temp.vect327.i = insertelement <16 x float> %temp.vect326.i, float %347, i32 7
  %temp.vect328.i = insertelement <16 x float> %temp.vect327.i, float %348, i32 8
  %temp.vect329.i = insertelement <16 x float> %temp.vect328.i, float %349, i32 9
  %temp.vect330.i = insertelement <16 x float> %temp.vect329.i, float %350, i32 10
  %temp.vect331.i = insertelement <16 x float> %temp.vect330.i, float %351, i32 11
  %temp.vect332.i = insertelement <16 x float> %temp.vect331.i, float %352, i32 12
  %temp.vect333.i = insertelement <16 x float> %temp.vect332.i, float %353, i32 13
  %temp.vect334.i = insertelement <16 x float> %temp.vect333.i, float %354, i32 14
  %temp.vect335.i = insertelement <16 x float> %temp.vect334.i, float %355, i32 15
  %356 = add nsw <16 x i32> %vectorPHI.i, <i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5>
  %357 = and <16 x i32> %356, %vector.i
  %358 = extractelement <16 x i32> %357, i32 0
  %359 = sext i32 %358 to i64
  %360 = getelementptr inbounds float addrspace(1)* %1, i64 %359
  %361 = extractelement <16 x i32> %357, i32 1
  %362 = sext i32 %361 to i64
  %363 = getelementptr inbounds float addrspace(1)* %1, i64 %362
  %364 = extractelement <16 x i32> %357, i32 2
  %365 = sext i32 %364 to i64
  %366 = getelementptr inbounds float addrspace(1)* %1, i64 %365
  %367 = extractelement <16 x i32> %357, i32 3
  %368 = sext i32 %367 to i64
  %369 = getelementptr inbounds float addrspace(1)* %1, i64 %368
  %370 = extractelement <16 x i32> %357, i32 4
  %371 = sext i32 %370 to i64
  %372 = getelementptr inbounds float addrspace(1)* %1, i64 %371
  %373 = extractelement <16 x i32> %357, i32 5
  %374 = sext i32 %373 to i64
  %375 = getelementptr inbounds float addrspace(1)* %1, i64 %374
  %376 = extractelement <16 x i32> %357, i32 6
  %377 = sext i32 %376 to i64
  %378 = getelementptr inbounds float addrspace(1)* %1, i64 %377
  %379 = extractelement <16 x i32> %357, i32 7
  %380 = sext i32 %379 to i64
  %381 = getelementptr inbounds float addrspace(1)* %1, i64 %380
  %382 = extractelement <16 x i32> %357, i32 8
  %383 = sext i32 %382 to i64
  %384 = getelementptr inbounds float addrspace(1)* %1, i64 %383
  %385 = extractelement <16 x i32> %357, i32 9
  %386 = sext i32 %385 to i64
  %387 = getelementptr inbounds float addrspace(1)* %1, i64 %386
  %388 = extractelement <16 x i32> %357, i32 10
  %389 = sext i32 %388 to i64
  %390 = getelementptr inbounds float addrspace(1)* %1, i64 %389
  %391 = extractelement <16 x i32> %357, i32 11
  %392 = sext i32 %391 to i64
  %393 = getelementptr inbounds float addrspace(1)* %1, i64 %392
  %394 = extractelement <16 x i32> %357, i32 12
  %395 = sext i32 %394 to i64
  %396 = getelementptr inbounds float addrspace(1)* %1, i64 %395
  %397 = extractelement <16 x i32> %357, i32 13
  %398 = sext i32 %397 to i64
  %399 = getelementptr inbounds float addrspace(1)* %1, i64 %398
  %400 = extractelement <16 x i32> %357, i32 14
  %401 = sext i32 %400 to i64
  %402 = getelementptr inbounds float addrspace(1)* %1, i64 %401
  %403 = extractelement <16 x i32> %357, i32 15
  %404 = sext i32 %403 to i64
  %405 = getelementptr inbounds float addrspace(1)* %1, i64 %404
  %406 = load float addrspace(1)* %360, align 4
  %407 = load float addrspace(1)* %363, align 4
  %408 = load float addrspace(1)* %366, align 4
  %409 = load float addrspace(1)* %369, align 4
  %410 = load float addrspace(1)* %372, align 4
  %411 = load float addrspace(1)* %375, align 4
  %412 = load float addrspace(1)* %378, align 4
  %413 = load float addrspace(1)* %381, align 4
  %414 = load float addrspace(1)* %384, align 4
  %415 = load float addrspace(1)* %387, align 4
  %416 = load float addrspace(1)* %390, align 4
  %417 = load float addrspace(1)* %393, align 4
  %418 = load float addrspace(1)* %396, align 4
  %419 = load float addrspace(1)* %399, align 4
  %420 = load float addrspace(1)* %402, align 4
  %421 = load float addrspace(1)* %405, align 4
  %temp.vect336.i = insertelement <16 x float> undef, float %406, i32 0
  %temp.vect337.i = insertelement <16 x float> %temp.vect336.i, float %407, i32 1
  %temp.vect338.i = insertelement <16 x float> %temp.vect337.i, float %408, i32 2
  %temp.vect339.i = insertelement <16 x float> %temp.vect338.i, float %409, i32 3
  %temp.vect340.i = insertelement <16 x float> %temp.vect339.i, float %410, i32 4
  %temp.vect341.i = insertelement <16 x float> %temp.vect340.i, float %411, i32 5
  %temp.vect342.i = insertelement <16 x float> %temp.vect341.i, float %412, i32 6
  %temp.vect343.i = insertelement <16 x float> %temp.vect342.i, float %413, i32 7
  %temp.vect344.i = insertelement <16 x float> %temp.vect343.i, float %414, i32 8
  %temp.vect345.i = insertelement <16 x float> %temp.vect344.i, float %415, i32 9
  %temp.vect346.i = insertelement <16 x float> %temp.vect345.i, float %416, i32 10
  %temp.vect347.i = insertelement <16 x float> %temp.vect346.i, float %417, i32 11
  %temp.vect348.i = insertelement <16 x float> %temp.vect347.i, float %418, i32 12
  %temp.vect349.i = insertelement <16 x float> %temp.vect348.i, float %419, i32 13
  %temp.vect350.i = insertelement <16 x float> %temp.vect349.i, float %420, i32 14
  %temp.vect351.i = insertelement <16 x float> %temp.vect350.i, float %421, i32 15
  %422 = add nsw <16 x i32> %vectorPHI.i, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>
  %423 = and <16 x i32> %422, %vector.i
  %424 = extractelement <16 x i32> %423, i32 0
  %425 = sext i32 %424 to i64
  %426 = getelementptr inbounds float addrspace(1)* %1, i64 %425
  %427 = extractelement <16 x i32> %423, i32 1
  %428 = sext i32 %427 to i64
  %429 = getelementptr inbounds float addrspace(1)* %1, i64 %428
  %430 = extractelement <16 x i32> %423, i32 2
  %431 = sext i32 %430 to i64
  %432 = getelementptr inbounds float addrspace(1)* %1, i64 %431
  %433 = extractelement <16 x i32> %423, i32 3
  %434 = sext i32 %433 to i64
  %435 = getelementptr inbounds float addrspace(1)* %1, i64 %434
  %436 = extractelement <16 x i32> %423, i32 4
  %437 = sext i32 %436 to i64
  %438 = getelementptr inbounds float addrspace(1)* %1, i64 %437
  %439 = extractelement <16 x i32> %423, i32 5
  %440 = sext i32 %439 to i64
  %441 = getelementptr inbounds float addrspace(1)* %1, i64 %440
  %442 = extractelement <16 x i32> %423, i32 6
  %443 = sext i32 %442 to i64
  %444 = getelementptr inbounds float addrspace(1)* %1, i64 %443
  %445 = extractelement <16 x i32> %423, i32 7
  %446 = sext i32 %445 to i64
  %447 = getelementptr inbounds float addrspace(1)* %1, i64 %446
  %448 = extractelement <16 x i32> %423, i32 8
  %449 = sext i32 %448 to i64
  %450 = getelementptr inbounds float addrspace(1)* %1, i64 %449
  %451 = extractelement <16 x i32> %423, i32 9
  %452 = sext i32 %451 to i64
  %453 = getelementptr inbounds float addrspace(1)* %1, i64 %452
  %454 = extractelement <16 x i32> %423, i32 10
  %455 = sext i32 %454 to i64
  %456 = getelementptr inbounds float addrspace(1)* %1, i64 %455
  %457 = extractelement <16 x i32> %423, i32 11
  %458 = sext i32 %457 to i64
  %459 = getelementptr inbounds float addrspace(1)* %1, i64 %458
  %460 = extractelement <16 x i32> %423, i32 12
  %461 = sext i32 %460 to i64
  %462 = getelementptr inbounds float addrspace(1)* %1, i64 %461
  %463 = extractelement <16 x i32> %423, i32 13
  %464 = sext i32 %463 to i64
  %465 = getelementptr inbounds float addrspace(1)* %1, i64 %464
  %466 = extractelement <16 x i32> %423, i32 14
  %467 = sext i32 %466 to i64
  %468 = getelementptr inbounds float addrspace(1)* %1, i64 %467
  %469 = extractelement <16 x i32> %423, i32 15
  %470 = sext i32 %469 to i64
  %471 = getelementptr inbounds float addrspace(1)* %1, i64 %470
  %472 = load float addrspace(1)* %426, align 4
  %473 = load float addrspace(1)* %429, align 4
  %474 = load float addrspace(1)* %432, align 4
  %475 = load float addrspace(1)* %435, align 4
  %476 = load float addrspace(1)* %438, align 4
  %477 = load float addrspace(1)* %441, align 4
  %478 = load float addrspace(1)* %444, align 4
  %479 = load float addrspace(1)* %447, align 4
  %480 = load float addrspace(1)* %450, align 4
  %481 = load float addrspace(1)* %453, align 4
  %482 = load float addrspace(1)* %456, align 4
  %483 = load float addrspace(1)* %459, align 4
  %484 = load float addrspace(1)* %462, align 4
  %485 = load float addrspace(1)* %465, align 4
  %486 = load float addrspace(1)* %468, align 4
  %487 = load float addrspace(1)* %471, align 4
  %temp.vect352.i = insertelement <16 x float> undef, float %472, i32 0
  %temp.vect353.i = insertelement <16 x float> %temp.vect352.i, float %473, i32 1
  %temp.vect354.i = insertelement <16 x float> %temp.vect353.i, float %474, i32 2
  %temp.vect355.i = insertelement <16 x float> %temp.vect354.i, float %475, i32 3
  %temp.vect356.i = insertelement <16 x float> %temp.vect355.i, float %476, i32 4
  %temp.vect357.i = insertelement <16 x float> %temp.vect356.i, float %477, i32 5
  %temp.vect358.i = insertelement <16 x float> %temp.vect357.i, float %478, i32 6
  %temp.vect359.i = insertelement <16 x float> %temp.vect358.i, float %479, i32 7
  %temp.vect360.i = insertelement <16 x float> %temp.vect359.i, float %480, i32 8
  %temp.vect361.i = insertelement <16 x float> %temp.vect360.i, float %481, i32 9
  %temp.vect362.i = insertelement <16 x float> %temp.vect361.i, float %482, i32 10
  %temp.vect363.i = insertelement <16 x float> %temp.vect362.i, float %483, i32 11
  %temp.vect364.i = insertelement <16 x float> %temp.vect363.i, float %484, i32 12
  %temp.vect365.i = insertelement <16 x float> %temp.vect364.i, float %485, i32 13
  %temp.vect366.i = insertelement <16 x float> %temp.vect365.i, float %486, i32 14
  %temp.vect367.i = insertelement <16 x float> %temp.vect366.i, float %487, i32 15
  %488 = add nsw <16 x i32> %vectorPHI.i, <i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7>
  %489 = and <16 x i32> %488, %vector.i
  %490 = extractelement <16 x i32> %489, i32 0
  %491 = sext i32 %490 to i64
  %492 = getelementptr inbounds float addrspace(1)* %1, i64 %491
  %493 = extractelement <16 x i32> %489, i32 1
  %494 = sext i32 %493 to i64
  %495 = getelementptr inbounds float addrspace(1)* %1, i64 %494
  %496 = extractelement <16 x i32> %489, i32 2
  %497 = sext i32 %496 to i64
  %498 = getelementptr inbounds float addrspace(1)* %1, i64 %497
  %499 = extractelement <16 x i32> %489, i32 3
  %500 = sext i32 %499 to i64
  %501 = getelementptr inbounds float addrspace(1)* %1, i64 %500
  %502 = extractelement <16 x i32> %489, i32 4
  %503 = sext i32 %502 to i64
  %504 = getelementptr inbounds float addrspace(1)* %1, i64 %503
  %505 = extractelement <16 x i32> %489, i32 5
  %506 = sext i32 %505 to i64
  %507 = getelementptr inbounds float addrspace(1)* %1, i64 %506
  %508 = extractelement <16 x i32> %489, i32 6
  %509 = sext i32 %508 to i64
  %510 = getelementptr inbounds float addrspace(1)* %1, i64 %509
  %511 = extractelement <16 x i32> %489, i32 7
  %512 = sext i32 %511 to i64
  %513 = getelementptr inbounds float addrspace(1)* %1, i64 %512
  %514 = extractelement <16 x i32> %489, i32 8
  %515 = sext i32 %514 to i64
  %516 = getelementptr inbounds float addrspace(1)* %1, i64 %515
  %517 = extractelement <16 x i32> %489, i32 9
  %518 = sext i32 %517 to i64
  %519 = getelementptr inbounds float addrspace(1)* %1, i64 %518
  %520 = extractelement <16 x i32> %489, i32 10
  %521 = sext i32 %520 to i64
  %522 = getelementptr inbounds float addrspace(1)* %1, i64 %521
  %523 = extractelement <16 x i32> %489, i32 11
  %524 = sext i32 %523 to i64
  %525 = getelementptr inbounds float addrspace(1)* %1, i64 %524
  %526 = extractelement <16 x i32> %489, i32 12
  %527 = sext i32 %526 to i64
  %528 = getelementptr inbounds float addrspace(1)* %1, i64 %527
  %529 = extractelement <16 x i32> %489, i32 13
  %530 = sext i32 %529 to i64
  %531 = getelementptr inbounds float addrspace(1)* %1, i64 %530
  %532 = extractelement <16 x i32> %489, i32 14
  %533 = sext i32 %532 to i64
  %534 = getelementptr inbounds float addrspace(1)* %1, i64 %533
  %535 = extractelement <16 x i32> %489, i32 15
  %536 = sext i32 %535 to i64
  %537 = getelementptr inbounds float addrspace(1)* %1, i64 %536
  %538 = load float addrspace(1)* %492, align 4
  %539 = load float addrspace(1)* %495, align 4
  %540 = load float addrspace(1)* %498, align 4
  %541 = load float addrspace(1)* %501, align 4
  %542 = load float addrspace(1)* %504, align 4
  %543 = load float addrspace(1)* %507, align 4
  %544 = load float addrspace(1)* %510, align 4
  %545 = load float addrspace(1)* %513, align 4
  %546 = load float addrspace(1)* %516, align 4
  %547 = load float addrspace(1)* %519, align 4
  %548 = load float addrspace(1)* %522, align 4
  %549 = load float addrspace(1)* %525, align 4
  %550 = load float addrspace(1)* %528, align 4
  %551 = load float addrspace(1)* %531, align 4
  %552 = load float addrspace(1)* %534, align 4
  %553 = load float addrspace(1)* %537, align 4
  %temp.vect368.i = insertelement <16 x float> undef, float %538, i32 0
  %temp.vect369.i = insertelement <16 x float> %temp.vect368.i, float %539, i32 1
  %temp.vect370.i = insertelement <16 x float> %temp.vect369.i, float %540, i32 2
  %temp.vect371.i = insertelement <16 x float> %temp.vect370.i, float %541, i32 3
  %temp.vect372.i = insertelement <16 x float> %temp.vect371.i, float %542, i32 4
  %temp.vect373.i = insertelement <16 x float> %temp.vect372.i, float %543, i32 5
  %temp.vect374.i = insertelement <16 x float> %temp.vect373.i, float %544, i32 6
  %temp.vect375.i = insertelement <16 x float> %temp.vect374.i, float %545, i32 7
  %temp.vect376.i = insertelement <16 x float> %temp.vect375.i, float %546, i32 8
  %temp.vect377.i = insertelement <16 x float> %temp.vect376.i, float %547, i32 9
  %temp.vect378.i = insertelement <16 x float> %temp.vect377.i, float %548, i32 10
  %temp.vect379.i = insertelement <16 x float> %temp.vect378.i, float %549, i32 11
  %temp.vect380.i = insertelement <16 x float> %temp.vect379.i, float %550, i32 12
  %temp.vect381.i = insertelement <16 x float> %temp.vect380.i, float %551, i32 13
  %temp.vect382.i = insertelement <16 x float> %temp.vect381.i, float %552, i32 14
  %temp.vect383.i = insertelement <16 x float> %temp.vect382.i, float %553, i32 15
  %554 = add nsw <16 x i32> %vectorPHI.i, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %555 = and <16 x i32> %554, %vector.i
  %556 = extractelement <16 x i32> %555, i32 0
  %557 = sext i32 %556 to i64
  %558 = getelementptr inbounds float addrspace(1)* %1, i64 %557
  %559 = extractelement <16 x i32> %555, i32 1
  %560 = sext i32 %559 to i64
  %561 = getelementptr inbounds float addrspace(1)* %1, i64 %560
  %562 = extractelement <16 x i32> %555, i32 2
  %563 = sext i32 %562 to i64
  %564 = getelementptr inbounds float addrspace(1)* %1, i64 %563
  %565 = extractelement <16 x i32> %555, i32 3
  %566 = sext i32 %565 to i64
  %567 = getelementptr inbounds float addrspace(1)* %1, i64 %566
  %568 = extractelement <16 x i32> %555, i32 4
  %569 = sext i32 %568 to i64
  %570 = getelementptr inbounds float addrspace(1)* %1, i64 %569
  %571 = extractelement <16 x i32> %555, i32 5
  %572 = sext i32 %571 to i64
  %573 = getelementptr inbounds float addrspace(1)* %1, i64 %572
  %574 = extractelement <16 x i32> %555, i32 6
  %575 = sext i32 %574 to i64
  %576 = getelementptr inbounds float addrspace(1)* %1, i64 %575
  %577 = extractelement <16 x i32> %555, i32 7
  %578 = sext i32 %577 to i64
  %579 = getelementptr inbounds float addrspace(1)* %1, i64 %578
  %580 = extractelement <16 x i32> %555, i32 8
  %581 = sext i32 %580 to i64
  %582 = getelementptr inbounds float addrspace(1)* %1, i64 %581
  %583 = extractelement <16 x i32> %555, i32 9
  %584 = sext i32 %583 to i64
  %585 = getelementptr inbounds float addrspace(1)* %1, i64 %584
  %586 = extractelement <16 x i32> %555, i32 10
  %587 = sext i32 %586 to i64
  %588 = getelementptr inbounds float addrspace(1)* %1, i64 %587
  %589 = extractelement <16 x i32> %555, i32 11
  %590 = sext i32 %589 to i64
  %591 = getelementptr inbounds float addrspace(1)* %1, i64 %590
  %592 = extractelement <16 x i32> %555, i32 12
  %593 = sext i32 %592 to i64
  %594 = getelementptr inbounds float addrspace(1)* %1, i64 %593
  %595 = extractelement <16 x i32> %555, i32 13
  %596 = sext i32 %595 to i64
  %597 = getelementptr inbounds float addrspace(1)* %1, i64 %596
  %598 = extractelement <16 x i32> %555, i32 14
  %599 = sext i32 %598 to i64
  %600 = getelementptr inbounds float addrspace(1)* %1, i64 %599
  %601 = extractelement <16 x i32> %555, i32 15
  %602 = sext i32 %601 to i64
  %603 = getelementptr inbounds float addrspace(1)* %1, i64 %602
  %604 = load float addrspace(1)* %558, align 4
  %605 = load float addrspace(1)* %561, align 4
  %606 = load float addrspace(1)* %564, align 4
  %607 = load float addrspace(1)* %567, align 4
  %608 = load float addrspace(1)* %570, align 4
  %609 = load float addrspace(1)* %573, align 4
  %610 = load float addrspace(1)* %576, align 4
  %611 = load float addrspace(1)* %579, align 4
  %612 = load float addrspace(1)* %582, align 4
  %613 = load float addrspace(1)* %585, align 4
  %614 = load float addrspace(1)* %588, align 4
  %615 = load float addrspace(1)* %591, align 4
  %616 = load float addrspace(1)* %594, align 4
  %617 = load float addrspace(1)* %597, align 4
  %618 = load float addrspace(1)* %600, align 4
  %619 = load float addrspace(1)* %603, align 4
  %temp.vect384.i = insertelement <16 x float> undef, float %604, i32 0
  %temp.vect385.i = insertelement <16 x float> %temp.vect384.i, float %605, i32 1
  %temp.vect386.i = insertelement <16 x float> %temp.vect385.i, float %606, i32 2
  %temp.vect387.i = insertelement <16 x float> %temp.vect386.i, float %607, i32 3
  %temp.vect388.i = insertelement <16 x float> %temp.vect387.i, float %608, i32 4
  %temp.vect389.i = insertelement <16 x float> %temp.vect388.i, float %609, i32 5
  %temp.vect390.i = insertelement <16 x float> %temp.vect389.i, float %610, i32 6
  %temp.vect391.i = insertelement <16 x float> %temp.vect390.i, float %611, i32 7
  %temp.vect392.i = insertelement <16 x float> %temp.vect391.i, float %612, i32 8
  %temp.vect393.i = insertelement <16 x float> %temp.vect392.i, float %613, i32 9
  %temp.vect394.i = insertelement <16 x float> %temp.vect393.i, float %614, i32 10
  %temp.vect395.i = insertelement <16 x float> %temp.vect394.i, float %615, i32 11
  %temp.vect396.i = insertelement <16 x float> %temp.vect395.i, float %616, i32 12
  %temp.vect397.i = insertelement <16 x float> %temp.vect396.i, float %617, i32 13
  %temp.vect398.i = insertelement <16 x float> %temp.vect397.i, float %618, i32 14
  %temp.vect399.i = insertelement <16 x float> %temp.vect398.i, float %619, i32 15
  %620 = add nsw <16 x i32> %vectorPHI.i, <i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9, i32 9>
  %621 = and <16 x i32> %620, %vector.i
  %622 = extractelement <16 x i32> %621, i32 0
  %623 = sext i32 %622 to i64
  %624 = getelementptr inbounds float addrspace(1)* %1, i64 %623
  %625 = extractelement <16 x i32> %621, i32 1
  %626 = sext i32 %625 to i64
  %627 = getelementptr inbounds float addrspace(1)* %1, i64 %626
  %628 = extractelement <16 x i32> %621, i32 2
  %629 = sext i32 %628 to i64
  %630 = getelementptr inbounds float addrspace(1)* %1, i64 %629
  %631 = extractelement <16 x i32> %621, i32 3
  %632 = sext i32 %631 to i64
  %633 = getelementptr inbounds float addrspace(1)* %1, i64 %632
  %634 = extractelement <16 x i32> %621, i32 4
  %635 = sext i32 %634 to i64
  %636 = getelementptr inbounds float addrspace(1)* %1, i64 %635
  %637 = extractelement <16 x i32> %621, i32 5
  %638 = sext i32 %637 to i64
  %639 = getelementptr inbounds float addrspace(1)* %1, i64 %638
  %640 = extractelement <16 x i32> %621, i32 6
  %641 = sext i32 %640 to i64
  %642 = getelementptr inbounds float addrspace(1)* %1, i64 %641
  %643 = extractelement <16 x i32> %621, i32 7
  %644 = sext i32 %643 to i64
  %645 = getelementptr inbounds float addrspace(1)* %1, i64 %644
  %646 = extractelement <16 x i32> %621, i32 8
  %647 = sext i32 %646 to i64
  %648 = getelementptr inbounds float addrspace(1)* %1, i64 %647
  %649 = extractelement <16 x i32> %621, i32 9
  %650 = sext i32 %649 to i64
  %651 = getelementptr inbounds float addrspace(1)* %1, i64 %650
  %652 = extractelement <16 x i32> %621, i32 10
  %653 = sext i32 %652 to i64
  %654 = getelementptr inbounds float addrspace(1)* %1, i64 %653
  %655 = extractelement <16 x i32> %621, i32 11
  %656 = sext i32 %655 to i64
  %657 = getelementptr inbounds float addrspace(1)* %1, i64 %656
  %658 = extractelement <16 x i32> %621, i32 12
  %659 = sext i32 %658 to i64
  %660 = getelementptr inbounds float addrspace(1)* %1, i64 %659
  %661 = extractelement <16 x i32> %621, i32 13
  %662 = sext i32 %661 to i64
  %663 = getelementptr inbounds float addrspace(1)* %1, i64 %662
  %664 = extractelement <16 x i32> %621, i32 14
  %665 = sext i32 %664 to i64
  %666 = getelementptr inbounds float addrspace(1)* %1, i64 %665
  %667 = extractelement <16 x i32> %621, i32 15
  %668 = sext i32 %667 to i64
  %669 = getelementptr inbounds float addrspace(1)* %1, i64 %668
  %670 = load float addrspace(1)* %624, align 4
  %671 = load float addrspace(1)* %627, align 4
  %672 = load float addrspace(1)* %630, align 4
  %673 = load float addrspace(1)* %633, align 4
  %674 = load float addrspace(1)* %636, align 4
  %675 = load float addrspace(1)* %639, align 4
  %676 = load float addrspace(1)* %642, align 4
  %677 = load float addrspace(1)* %645, align 4
  %678 = load float addrspace(1)* %648, align 4
  %679 = load float addrspace(1)* %651, align 4
  %680 = load float addrspace(1)* %654, align 4
  %681 = load float addrspace(1)* %657, align 4
  %682 = load float addrspace(1)* %660, align 4
  %683 = load float addrspace(1)* %663, align 4
  %684 = load float addrspace(1)* %666, align 4
  %685 = load float addrspace(1)* %669, align 4
  %temp.vect400.i = insertelement <16 x float> undef, float %670, i32 0
  %temp.vect401.i = insertelement <16 x float> %temp.vect400.i, float %671, i32 1
  %temp.vect402.i = insertelement <16 x float> %temp.vect401.i, float %672, i32 2
  %temp.vect403.i = insertelement <16 x float> %temp.vect402.i, float %673, i32 3
  %temp.vect404.i = insertelement <16 x float> %temp.vect403.i, float %674, i32 4
  %temp.vect405.i = insertelement <16 x float> %temp.vect404.i, float %675, i32 5
  %temp.vect406.i = insertelement <16 x float> %temp.vect405.i, float %676, i32 6
  %temp.vect407.i = insertelement <16 x float> %temp.vect406.i, float %677, i32 7
  %temp.vect408.i = insertelement <16 x float> %temp.vect407.i, float %678, i32 8
  %temp.vect409.i = insertelement <16 x float> %temp.vect408.i, float %679, i32 9
  %temp.vect410.i = insertelement <16 x float> %temp.vect409.i, float %680, i32 10
  %temp.vect411.i = insertelement <16 x float> %temp.vect410.i, float %681, i32 11
  %temp.vect412.i = insertelement <16 x float> %temp.vect411.i, float %682, i32 12
  %temp.vect413.i = insertelement <16 x float> %temp.vect412.i, float %683, i32 13
  %temp.vect414.i = insertelement <16 x float> %temp.vect413.i, float %684, i32 14
  %temp.vect415.i = insertelement <16 x float> %temp.vect414.i, float %685, i32 15
  %686 = add nsw <16 x i32> %vectorPHI.i, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>
  %687 = and <16 x i32> %686, %vector.i
  %688 = extractelement <16 x i32> %687, i32 0
  %689 = sext i32 %688 to i64
  %690 = getelementptr inbounds float addrspace(1)* %1, i64 %689
  %691 = extractelement <16 x i32> %687, i32 1
  %692 = sext i32 %691 to i64
  %693 = getelementptr inbounds float addrspace(1)* %1, i64 %692
  %694 = extractelement <16 x i32> %687, i32 2
  %695 = sext i32 %694 to i64
  %696 = getelementptr inbounds float addrspace(1)* %1, i64 %695
  %697 = extractelement <16 x i32> %687, i32 3
  %698 = sext i32 %697 to i64
  %699 = getelementptr inbounds float addrspace(1)* %1, i64 %698
  %700 = extractelement <16 x i32> %687, i32 4
  %701 = sext i32 %700 to i64
  %702 = getelementptr inbounds float addrspace(1)* %1, i64 %701
  %703 = extractelement <16 x i32> %687, i32 5
  %704 = sext i32 %703 to i64
  %705 = getelementptr inbounds float addrspace(1)* %1, i64 %704
  %706 = extractelement <16 x i32> %687, i32 6
  %707 = sext i32 %706 to i64
  %708 = getelementptr inbounds float addrspace(1)* %1, i64 %707
  %709 = extractelement <16 x i32> %687, i32 7
  %710 = sext i32 %709 to i64
  %711 = getelementptr inbounds float addrspace(1)* %1, i64 %710
  %712 = extractelement <16 x i32> %687, i32 8
  %713 = sext i32 %712 to i64
  %714 = getelementptr inbounds float addrspace(1)* %1, i64 %713
  %715 = extractelement <16 x i32> %687, i32 9
  %716 = sext i32 %715 to i64
  %717 = getelementptr inbounds float addrspace(1)* %1, i64 %716
  %718 = extractelement <16 x i32> %687, i32 10
  %719 = sext i32 %718 to i64
  %720 = getelementptr inbounds float addrspace(1)* %1, i64 %719
  %721 = extractelement <16 x i32> %687, i32 11
  %722 = sext i32 %721 to i64
  %723 = getelementptr inbounds float addrspace(1)* %1, i64 %722
  %724 = extractelement <16 x i32> %687, i32 12
  %725 = sext i32 %724 to i64
  %726 = getelementptr inbounds float addrspace(1)* %1, i64 %725
  %727 = extractelement <16 x i32> %687, i32 13
  %728 = sext i32 %727 to i64
  %729 = getelementptr inbounds float addrspace(1)* %1, i64 %728
  %730 = extractelement <16 x i32> %687, i32 14
  %731 = sext i32 %730 to i64
  %732 = getelementptr inbounds float addrspace(1)* %1, i64 %731
  %733 = extractelement <16 x i32> %687, i32 15
  %734 = sext i32 %733 to i64
  %735 = getelementptr inbounds float addrspace(1)* %1, i64 %734
  %736 = load float addrspace(1)* %690, align 4
  %737 = load float addrspace(1)* %693, align 4
  %738 = load float addrspace(1)* %696, align 4
  %739 = load float addrspace(1)* %699, align 4
  %740 = load float addrspace(1)* %702, align 4
  %741 = load float addrspace(1)* %705, align 4
  %742 = load float addrspace(1)* %708, align 4
  %743 = load float addrspace(1)* %711, align 4
  %744 = load float addrspace(1)* %714, align 4
  %745 = load float addrspace(1)* %717, align 4
  %746 = load float addrspace(1)* %720, align 4
  %747 = load float addrspace(1)* %723, align 4
  %748 = load float addrspace(1)* %726, align 4
  %749 = load float addrspace(1)* %729, align 4
  %750 = load float addrspace(1)* %732, align 4
  %751 = load float addrspace(1)* %735, align 4
  %temp.vect416.i = insertelement <16 x float> undef, float %736, i32 0
  %temp.vect417.i = insertelement <16 x float> %temp.vect416.i, float %737, i32 1
  %temp.vect418.i = insertelement <16 x float> %temp.vect417.i, float %738, i32 2
  %temp.vect419.i = insertelement <16 x float> %temp.vect418.i, float %739, i32 3
  %temp.vect420.i = insertelement <16 x float> %temp.vect419.i, float %740, i32 4
  %temp.vect421.i = insertelement <16 x float> %temp.vect420.i, float %741, i32 5
  %temp.vect422.i = insertelement <16 x float> %temp.vect421.i, float %742, i32 6
  %temp.vect423.i = insertelement <16 x float> %temp.vect422.i, float %743, i32 7
  %temp.vect424.i = insertelement <16 x float> %temp.vect423.i, float %744, i32 8
  %temp.vect425.i = insertelement <16 x float> %temp.vect424.i, float %745, i32 9
  %temp.vect426.i = insertelement <16 x float> %temp.vect425.i, float %746, i32 10
  %temp.vect427.i = insertelement <16 x float> %temp.vect426.i, float %747, i32 11
  %temp.vect428.i = insertelement <16 x float> %temp.vect427.i, float %748, i32 12
  %temp.vect429.i = insertelement <16 x float> %temp.vect428.i, float %749, i32 13
  %temp.vect430.i = insertelement <16 x float> %temp.vect429.i, float %750, i32 14
  %temp.vect431.i = insertelement <16 x float> %temp.vect430.i, float %751, i32 15
  %752 = add nsw <16 x i32> %vectorPHI.i, <i32 11, i32 11, i32 11, i32 11, i32 11, i32 11, i32 11, i32 11, i32 11, i32 11, i32 11, i32 11, i32 11, i32 11, i32 11, i32 11>
  %753 = and <16 x i32> %752, %vector.i
  %754 = extractelement <16 x i32> %753, i32 0
  %755 = sext i32 %754 to i64
  %756 = getelementptr inbounds float addrspace(1)* %1, i64 %755
  %757 = extractelement <16 x i32> %753, i32 1
  %758 = sext i32 %757 to i64
  %759 = getelementptr inbounds float addrspace(1)* %1, i64 %758
  %760 = extractelement <16 x i32> %753, i32 2
  %761 = sext i32 %760 to i64
  %762 = getelementptr inbounds float addrspace(1)* %1, i64 %761
  %763 = extractelement <16 x i32> %753, i32 3
  %764 = sext i32 %763 to i64
  %765 = getelementptr inbounds float addrspace(1)* %1, i64 %764
  %766 = extractelement <16 x i32> %753, i32 4
  %767 = sext i32 %766 to i64
  %768 = getelementptr inbounds float addrspace(1)* %1, i64 %767
  %769 = extractelement <16 x i32> %753, i32 5
  %770 = sext i32 %769 to i64
  %771 = getelementptr inbounds float addrspace(1)* %1, i64 %770
  %772 = extractelement <16 x i32> %753, i32 6
  %773 = sext i32 %772 to i64
  %774 = getelementptr inbounds float addrspace(1)* %1, i64 %773
  %775 = extractelement <16 x i32> %753, i32 7
  %776 = sext i32 %775 to i64
  %777 = getelementptr inbounds float addrspace(1)* %1, i64 %776
  %778 = extractelement <16 x i32> %753, i32 8
  %779 = sext i32 %778 to i64
  %780 = getelementptr inbounds float addrspace(1)* %1, i64 %779
  %781 = extractelement <16 x i32> %753, i32 9
  %782 = sext i32 %781 to i64
  %783 = getelementptr inbounds float addrspace(1)* %1, i64 %782
  %784 = extractelement <16 x i32> %753, i32 10
  %785 = sext i32 %784 to i64
  %786 = getelementptr inbounds float addrspace(1)* %1, i64 %785
  %787 = extractelement <16 x i32> %753, i32 11
  %788 = sext i32 %787 to i64
  %789 = getelementptr inbounds float addrspace(1)* %1, i64 %788
  %790 = extractelement <16 x i32> %753, i32 12
  %791 = sext i32 %790 to i64
  %792 = getelementptr inbounds float addrspace(1)* %1, i64 %791
  %793 = extractelement <16 x i32> %753, i32 13
  %794 = sext i32 %793 to i64
  %795 = getelementptr inbounds float addrspace(1)* %1, i64 %794
  %796 = extractelement <16 x i32> %753, i32 14
  %797 = sext i32 %796 to i64
  %798 = getelementptr inbounds float addrspace(1)* %1, i64 %797
  %799 = extractelement <16 x i32> %753, i32 15
  %800 = sext i32 %799 to i64
  %801 = getelementptr inbounds float addrspace(1)* %1, i64 %800
  %802 = load float addrspace(1)* %756, align 4
  %803 = load float addrspace(1)* %759, align 4
  %804 = load float addrspace(1)* %762, align 4
  %805 = load float addrspace(1)* %765, align 4
  %806 = load float addrspace(1)* %768, align 4
  %807 = load float addrspace(1)* %771, align 4
  %808 = load float addrspace(1)* %774, align 4
  %809 = load float addrspace(1)* %777, align 4
  %810 = load float addrspace(1)* %780, align 4
  %811 = load float addrspace(1)* %783, align 4
  %812 = load float addrspace(1)* %786, align 4
  %813 = load float addrspace(1)* %789, align 4
  %814 = load float addrspace(1)* %792, align 4
  %815 = load float addrspace(1)* %795, align 4
  %816 = load float addrspace(1)* %798, align 4
  %817 = load float addrspace(1)* %801, align 4
  %temp.vect432.i = insertelement <16 x float> undef, float %802, i32 0
  %temp.vect433.i = insertelement <16 x float> %temp.vect432.i, float %803, i32 1
  %temp.vect434.i = insertelement <16 x float> %temp.vect433.i, float %804, i32 2
  %temp.vect435.i = insertelement <16 x float> %temp.vect434.i, float %805, i32 3
  %temp.vect436.i = insertelement <16 x float> %temp.vect435.i, float %806, i32 4
  %temp.vect437.i = insertelement <16 x float> %temp.vect436.i, float %807, i32 5
  %temp.vect438.i = insertelement <16 x float> %temp.vect437.i, float %808, i32 6
  %temp.vect439.i = insertelement <16 x float> %temp.vect438.i, float %809, i32 7
  %temp.vect440.i = insertelement <16 x float> %temp.vect439.i, float %810, i32 8
  %temp.vect441.i = insertelement <16 x float> %temp.vect440.i, float %811, i32 9
  %temp.vect442.i = insertelement <16 x float> %temp.vect441.i, float %812, i32 10
  %temp.vect443.i = insertelement <16 x float> %temp.vect442.i, float %813, i32 11
  %temp.vect444.i = insertelement <16 x float> %temp.vect443.i, float %814, i32 12
  %temp.vect445.i = insertelement <16 x float> %temp.vect444.i, float %815, i32 13
  %temp.vect446.i = insertelement <16 x float> %temp.vect445.i, float %816, i32 14
  %temp.vect447.i = insertelement <16 x float> %temp.vect446.i, float %817, i32 15
  %818 = add nsw <16 x i32> %vectorPHI.i, <i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12, i32 12>
  %819 = and <16 x i32> %818, %vector.i
  %820 = extractelement <16 x i32> %819, i32 0
  %821 = sext i32 %820 to i64
  %822 = getelementptr inbounds float addrspace(1)* %1, i64 %821
  %823 = extractelement <16 x i32> %819, i32 1
  %824 = sext i32 %823 to i64
  %825 = getelementptr inbounds float addrspace(1)* %1, i64 %824
  %826 = extractelement <16 x i32> %819, i32 2
  %827 = sext i32 %826 to i64
  %828 = getelementptr inbounds float addrspace(1)* %1, i64 %827
  %829 = extractelement <16 x i32> %819, i32 3
  %830 = sext i32 %829 to i64
  %831 = getelementptr inbounds float addrspace(1)* %1, i64 %830
  %832 = extractelement <16 x i32> %819, i32 4
  %833 = sext i32 %832 to i64
  %834 = getelementptr inbounds float addrspace(1)* %1, i64 %833
  %835 = extractelement <16 x i32> %819, i32 5
  %836 = sext i32 %835 to i64
  %837 = getelementptr inbounds float addrspace(1)* %1, i64 %836
  %838 = extractelement <16 x i32> %819, i32 6
  %839 = sext i32 %838 to i64
  %840 = getelementptr inbounds float addrspace(1)* %1, i64 %839
  %841 = extractelement <16 x i32> %819, i32 7
  %842 = sext i32 %841 to i64
  %843 = getelementptr inbounds float addrspace(1)* %1, i64 %842
  %844 = extractelement <16 x i32> %819, i32 8
  %845 = sext i32 %844 to i64
  %846 = getelementptr inbounds float addrspace(1)* %1, i64 %845
  %847 = extractelement <16 x i32> %819, i32 9
  %848 = sext i32 %847 to i64
  %849 = getelementptr inbounds float addrspace(1)* %1, i64 %848
  %850 = extractelement <16 x i32> %819, i32 10
  %851 = sext i32 %850 to i64
  %852 = getelementptr inbounds float addrspace(1)* %1, i64 %851
  %853 = extractelement <16 x i32> %819, i32 11
  %854 = sext i32 %853 to i64
  %855 = getelementptr inbounds float addrspace(1)* %1, i64 %854
  %856 = extractelement <16 x i32> %819, i32 12
  %857 = sext i32 %856 to i64
  %858 = getelementptr inbounds float addrspace(1)* %1, i64 %857
  %859 = extractelement <16 x i32> %819, i32 13
  %860 = sext i32 %859 to i64
  %861 = getelementptr inbounds float addrspace(1)* %1, i64 %860
  %862 = extractelement <16 x i32> %819, i32 14
  %863 = sext i32 %862 to i64
  %864 = getelementptr inbounds float addrspace(1)* %1, i64 %863
  %865 = extractelement <16 x i32> %819, i32 15
  %866 = sext i32 %865 to i64
  %867 = getelementptr inbounds float addrspace(1)* %1, i64 %866
  %868 = load float addrspace(1)* %822, align 4
  %869 = load float addrspace(1)* %825, align 4
  %870 = load float addrspace(1)* %828, align 4
  %871 = load float addrspace(1)* %831, align 4
  %872 = load float addrspace(1)* %834, align 4
  %873 = load float addrspace(1)* %837, align 4
  %874 = load float addrspace(1)* %840, align 4
  %875 = load float addrspace(1)* %843, align 4
  %876 = load float addrspace(1)* %846, align 4
  %877 = load float addrspace(1)* %849, align 4
  %878 = load float addrspace(1)* %852, align 4
  %879 = load float addrspace(1)* %855, align 4
  %880 = load float addrspace(1)* %858, align 4
  %881 = load float addrspace(1)* %861, align 4
  %882 = load float addrspace(1)* %864, align 4
  %883 = load float addrspace(1)* %867, align 4
  %temp.vect448.i = insertelement <16 x float> undef, float %868, i32 0
  %temp.vect449.i = insertelement <16 x float> %temp.vect448.i, float %869, i32 1
  %temp.vect450.i = insertelement <16 x float> %temp.vect449.i, float %870, i32 2
  %temp.vect451.i = insertelement <16 x float> %temp.vect450.i, float %871, i32 3
  %temp.vect452.i = insertelement <16 x float> %temp.vect451.i, float %872, i32 4
  %temp.vect453.i = insertelement <16 x float> %temp.vect452.i, float %873, i32 5
  %temp.vect454.i = insertelement <16 x float> %temp.vect453.i, float %874, i32 6
  %temp.vect455.i = insertelement <16 x float> %temp.vect454.i, float %875, i32 7
  %temp.vect456.i = insertelement <16 x float> %temp.vect455.i, float %876, i32 8
  %temp.vect457.i = insertelement <16 x float> %temp.vect456.i, float %877, i32 9
  %temp.vect458.i = insertelement <16 x float> %temp.vect457.i, float %878, i32 10
  %temp.vect459.i = insertelement <16 x float> %temp.vect458.i, float %879, i32 11
  %temp.vect460.i = insertelement <16 x float> %temp.vect459.i, float %880, i32 12
  %temp.vect461.i = insertelement <16 x float> %temp.vect460.i, float %881, i32 13
  %temp.vect462.i = insertelement <16 x float> %temp.vect461.i, float %882, i32 14
  %temp.vect463.i = insertelement <16 x float> %temp.vect462.i, float %883, i32 15
  %884 = add nsw <16 x i32> %vectorPHI.i, <i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13>
  %885 = and <16 x i32> %884, %vector.i
  %886 = extractelement <16 x i32> %885, i32 0
  %887 = sext i32 %886 to i64
  %888 = getelementptr inbounds float addrspace(1)* %1, i64 %887
  %889 = extractelement <16 x i32> %885, i32 1
  %890 = sext i32 %889 to i64
  %891 = getelementptr inbounds float addrspace(1)* %1, i64 %890
  %892 = extractelement <16 x i32> %885, i32 2
  %893 = sext i32 %892 to i64
  %894 = getelementptr inbounds float addrspace(1)* %1, i64 %893
  %895 = extractelement <16 x i32> %885, i32 3
  %896 = sext i32 %895 to i64
  %897 = getelementptr inbounds float addrspace(1)* %1, i64 %896
  %898 = extractelement <16 x i32> %885, i32 4
  %899 = sext i32 %898 to i64
  %900 = getelementptr inbounds float addrspace(1)* %1, i64 %899
  %901 = extractelement <16 x i32> %885, i32 5
  %902 = sext i32 %901 to i64
  %903 = getelementptr inbounds float addrspace(1)* %1, i64 %902
  %904 = extractelement <16 x i32> %885, i32 6
  %905 = sext i32 %904 to i64
  %906 = getelementptr inbounds float addrspace(1)* %1, i64 %905
  %907 = extractelement <16 x i32> %885, i32 7
  %908 = sext i32 %907 to i64
  %909 = getelementptr inbounds float addrspace(1)* %1, i64 %908
  %910 = extractelement <16 x i32> %885, i32 8
  %911 = sext i32 %910 to i64
  %912 = getelementptr inbounds float addrspace(1)* %1, i64 %911
  %913 = extractelement <16 x i32> %885, i32 9
  %914 = sext i32 %913 to i64
  %915 = getelementptr inbounds float addrspace(1)* %1, i64 %914
  %916 = extractelement <16 x i32> %885, i32 10
  %917 = sext i32 %916 to i64
  %918 = getelementptr inbounds float addrspace(1)* %1, i64 %917
  %919 = extractelement <16 x i32> %885, i32 11
  %920 = sext i32 %919 to i64
  %921 = getelementptr inbounds float addrspace(1)* %1, i64 %920
  %922 = extractelement <16 x i32> %885, i32 12
  %923 = sext i32 %922 to i64
  %924 = getelementptr inbounds float addrspace(1)* %1, i64 %923
  %925 = extractelement <16 x i32> %885, i32 13
  %926 = sext i32 %925 to i64
  %927 = getelementptr inbounds float addrspace(1)* %1, i64 %926
  %928 = extractelement <16 x i32> %885, i32 14
  %929 = sext i32 %928 to i64
  %930 = getelementptr inbounds float addrspace(1)* %1, i64 %929
  %931 = extractelement <16 x i32> %885, i32 15
  %932 = sext i32 %931 to i64
  %933 = getelementptr inbounds float addrspace(1)* %1, i64 %932
  %934 = load float addrspace(1)* %888, align 4
  %935 = load float addrspace(1)* %891, align 4
  %936 = load float addrspace(1)* %894, align 4
  %937 = load float addrspace(1)* %897, align 4
  %938 = load float addrspace(1)* %900, align 4
  %939 = load float addrspace(1)* %903, align 4
  %940 = load float addrspace(1)* %906, align 4
  %941 = load float addrspace(1)* %909, align 4
  %942 = load float addrspace(1)* %912, align 4
  %943 = load float addrspace(1)* %915, align 4
  %944 = load float addrspace(1)* %918, align 4
  %945 = load float addrspace(1)* %921, align 4
  %946 = load float addrspace(1)* %924, align 4
  %947 = load float addrspace(1)* %927, align 4
  %948 = load float addrspace(1)* %930, align 4
  %949 = load float addrspace(1)* %933, align 4
  %temp.vect464.i = insertelement <16 x float> undef, float %934, i32 0
  %temp.vect465.i = insertelement <16 x float> %temp.vect464.i, float %935, i32 1
  %temp.vect466.i = insertelement <16 x float> %temp.vect465.i, float %936, i32 2
  %temp.vect467.i = insertelement <16 x float> %temp.vect466.i, float %937, i32 3
  %temp.vect468.i = insertelement <16 x float> %temp.vect467.i, float %938, i32 4
  %temp.vect469.i = insertelement <16 x float> %temp.vect468.i, float %939, i32 5
  %temp.vect470.i = insertelement <16 x float> %temp.vect469.i, float %940, i32 6
  %temp.vect471.i = insertelement <16 x float> %temp.vect470.i, float %941, i32 7
  %temp.vect472.i = insertelement <16 x float> %temp.vect471.i, float %942, i32 8
  %temp.vect473.i = insertelement <16 x float> %temp.vect472.i, float %943, i32 9
  %temp.vect474.i = insertelement <16 x float> %temp.vect473.i, float %944, i32 10
  %temp.vect475.i = insertelement <16 x float> %temp.vect474.i, float %945, i32 11
  %temp.vect476.i = insertelement <16 x float> %temp.vect475.i, float %946, i32 12
  %temp.vect477.i = insertelement <16 x float> %temp.vect476.i, float %947, i32 13
  %temp.vect478.i = insertelement <16 x float> %temp.vect477.i, float %948, i32 14
  %temp.vect479.i = insertelement <16 x float> %temp.vect478.i, float %949, i32 15
  %950 = add nsw <16 x i32> %vectorPHI.i, <i32 14, i32 14, i32 14, i32 14, i32 14, i32 14, i32 14, i32 14, i32 14, i32 14, i32 14, i32 14, i32 14, i32 14, i32 14, i32 14>
  %951 = and <16 x i32> %950, %vector.i
  %952 = extractelement <16 x i32> %951, i32 0
  %953 = sext i32 %952 to i64
  %954 = getelementptr inbounds float addrspace(1)* %1, i64 %953
  %955 = extractelement <16 x i32> %951, i32 1
  %956 = sext i32 %955 to i64
  %957 = getelementptr inbounds float addrspace(1)* %1, i64 %956
  %958 = extractelement <16 x i32> %951, i32 2
  %959 = sext i32 %958 to i64
  %960 = getelementptr inbounds float addrspace(1)* %1, i64 %959
  %961 = extractelement <16 x i32> %951, i32 3
  %962 = sext i32 %961 to i64
  %963 = getelementptr inbounds float addrspace(1)* %1, i64 %962
  %964 = extractelement <16 x i32> %951, i32 4
  %965 = sext i32 %964 to i64
  %966 = getelementptr inbounds float addrspace(1)* %1, i64 %965
  %967 = extractelement <16 x i32> %951, i32 5
  %968 = sext i32 %967 to i64
  %969 = getelementptr inbounds float addrspace(1)* %1, i64 %968
  %970 = extractelement <16 x i32> %951, i32 6
  %971 = sext i32 %970 to i64
  %972 = getelementptr inbounds float addrspace(1)* %1, i64 %971
  %973 = extractelement <16 x i32> %951, i32 7
  %974 = sext i32 %973 to i64
  %975 = getelementptr inbounds float addrspace(1)* %1, i64 %974
  %976 = extractelement <16 x i32> %951, i32 8
  %977 = sext i32 %976 to i64
  %978 = getelementptr inbounds float addrspace(1)* %1, i64 %977
  %979 = extractelement <16 x i32> %951, i32 9
  %980 = sext i32 %979 to i64
  %981 = getelementptr inbounds float addrspace(1)* %1, i64 %980
  %982 = extractelement <16 x i32> %951, i32 10
  %983 = sext i32 %982 to i64
  %984 = getelementptr inbounds float addrspace(1)* %1, i64 %983
  %985 = extractelement <16 x i32> %951, i32 11
  %986 = sext i32 %985 to i64
  %987 = getelementptr inbounds float addrspace(1)* %1, i64 %986
  %988 = extractelement <16 x i32> %951, i32 12
  %989 = sext i32 %988 to i64
  %990 = getelementptr inbounds float addrspace(1)* %1, i64 %989
  %991 = extractelement <16 x i32> %951, i32 13
  %992 = sext i32 %991 to i64
  %993 = getelementptr inbounds float addrspace(1)* %1, i64 %992
  %994 = extractelement <16 x i32> %951, i32 14
  %995 = sext i32 %994 to i64
  %996 = getelementptr inbounds float addrspace(1)* %1, i64 %995
  %997 = extractelement <16 x i32> %951, i32 15
  %998 = sext i32 %997 to i64
  %999 = getelementptr inbounds float addrspace(1)* %1, i64 %998
  %1000 = load float addrspace(1)* %954, align 4
  %1001 = load float addrspace(1)* %957, align 4
  %1002 = load float addrspace(1)* %960, align 4
  %1003 = load float addrspace(1)* %963, align 4
  %1004 = load float addrspace(1)* %966, align 4
  %1005 = load float addrspace(1)* %969, align 4
  %1006 = load float addrspace(1)* %972, align 4
  %1007 = load float addrspace(1)* %975, align 4
  %1008 = load float addrspace(1)* %978, align 4
  %1009 = load float addrspace(1)* %981, align 4
  %1010 = load float addrspace(1)* %984, align 4
  %1011 = load float addrspace(1)* %987, align 4
  %1012 = load float addrspace(1)* %990, align 4
  %1013 = load float addrspace(1)* %993, align 4
  %1014 = load float addrspace(1)* %996, align 4
  %1015 = load float addrspace(1)* %999, align 4
  %temp.vect480.i = insertelement <16 x float> undef, float %1000, i32 0
  %temp.vect481.i = insertelement <16 x float> %temp.vect480.i, float %1001, i32 1
  %temp.vect482.i = insertelement <16 x float> %temp.vect481.i, float %1002, i32 2
  %temp.vect483.i = insertelement <16 x float> %temp.vect482.i, float %1003, i32 3
  %temp.vect484.i = insertelement <16 x float> %temp.vect483.i, float %1004, i32 4
  %temp.vect485.i = insertelement <16 x float> %temp.vect484.i, float %1005, i32 5
  %temp.vect486.i = insertelement <16 x float> %temp.vect485.i, float %1006, i32 6
  %temp.vect487.i = insertelement <16 x float> %temp.vect486.i, float %1007, i32 7
  %temp.vect488.i = insertelement <16 x float> %temp.vect487.i, float %1008, i32 8
  %temp.vect489.i = insertelement <16 x float> %temp.vect488.i, float %1009, i32 9
  %temp.vect490.i = insertelement <16 x float> %temp.vect489.i, float %1010, i32 10
  %temp.vect491.i = insertelement <16 x float> %temp.vect490.i, float %1011, i32 11
  %temp.vect492.i = insertelement <16 x float> %temp.vect491.i, float %1012, i32 12
  %temp.vect493.i = insertelement <16 x float> %temp.vect492.i, float %1013, i32 13
  %temp.vect494.i = insertelement <16 x float> %temp.vect493.i, float %1014, i32 14
  %temp.vect495.i = insertelement <16 x float> %temp.vect494.i, float %1015, i32 15
  %1016 = add nsw <16 x i32> %vectorPHI.i, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %1017 = and <16 x i32> %1016, %vector.i
  %1018 = extractelement <16 x i32> %1017, i32 0
  %1019 = sext i32 %1018 to i64
  %1020 = getelementptr inbounds float addrspace(1)* %1, i64 %1019
  %1021 = extractelement <16 x i32> %1017, i32 1
  %1022 = sext i32 %1021 to i64
  %1023 = getelementptr inbounds float addrspace(1)* %1, i64 %1022
  %1024 = extractelement <16 x i32> %1017, i32 2
  %1025 = sext i32 %1024 to i64
  %1026 = getelementptr inbounds float addrspace(1)* %1, i64 %1025
  %1027 = extractelement <16 x i32> %1017, i32 3
  %1028 = sext i32 %1027 to i64
  %1029 = getelementptr inbounds float addrspace(1)* %1, i64 %1028
  %1030 = extractelement <16 x i32> %1017, i32 4
  %1031 = sext i32 %1030 to i64
  %1032 = getelementptr inbounds float addrspace(1)* %1, i64 %1031
  %1033 = extractelement <16 x i32> %1017, i32 5
  %1034 = sext i32 %1033 to i64
  %1035 = getelementptr inbounds float addrspace(1)* %1, i64 %1034
  %1036 = extractelement <16 x i32> %1017, i32 6
  %1037 = sext i32 %1036 to i64
  %1038 = getelementptr inbounds float addrspace(1)* %1, i64 %1037
  %1039 = extractelement <16 x i32> %1017, i32 7
  %1040 = sext i32 %1039 to i64
  %1041 = getelementptr inbounds float addrspace(1)* %1, i64 %1040
  %1042 = extractelement <16 x i32> %1017, i32 8
  %1043 = sext i32 %1042 to i64
  %1044 = getelementptr inbounds float addrspace(1)* %1, i64 %1043
  %1045 = extractelement <16 x i32> %1017, i32 9
  %1046 = sext i32 %1045 to i64
  %1047 = getelementptr inbounds float addrspace(1)* %1, i64 %1046
  %1048 = extractelement <16 x i32> %1017, i32 10
  %1049 = sext i32 %1048 to i64
  %1050 = getelementptr inbounds float addrspace(1)* %1, i64 %1049
  %1051 = extractelement <16 x i32> %1017, i32 11
  %1052 = sext i32 %1051 to i64
  %1053 = getelementptr inbounds float addrspace(1)* %1, i64 %1052
  %1054 = extractelement <16 x i32> %1017, i32 12
  %1055 = sext i32 %1054 to i64
  %1056 = getelementptr inbounds float addrspace(1)* %1, i64 %1055
  %1057 = extractelement <16 x i32> %1017, i32 13
  %1058 = sext i32 %1057 to i64
  %1059 = getelementptr inbounds float addrspace(1)* %1, i64 %1058
  %1060 = extractelement <16 x i32> %1017, i32 14
  %1061 = sext i32 %1060 to i64
  %1062 = getelementptr inbounds float addrspace(1)* %1, i64 %1061
  %1063 = extractelement <16 x i32> %1017, i32 15
  %1064 = sext i32 %1063 to i64
  %1065 = getelementptr inbounds float addrspace(1)* %1, i64 %1064
  %1066 = load float addrspace(1)* %1020, align 4
  %1067 = load float addrspace(1)* %1023, align 4
  %1068 = load float addrspace(1)* %1026, align 4
  %1069 = load float addrspace(1)* %1029, align 4
  %1070 = load float addrspace(1)* %1032, align 4
  %1071 = load float addrspace(1)* %1035, align 4
  %1072 = load float addrspace(1)* %1038, align 4
  %1073 = load float addrspace(1)* %1041, align 4
  %1074 = load float addrspace(1)* %1044, align 4
  %1075 = load float addrspace(1)* %1047, align 4
  %1076 = load float addrspace(1)* %1050, align 4
  %1077 = load float addrspace(1)* %1053, align 4
  %1078 = load float addrspace(1)* %1056, align 4
  %1079 = load float addrspace(1)* %1059, align 4
  %1080 = load float addrspace(1)* %1062, align 4
  %1081 = load float addrspace(1)* %1065, align 4
  %temp.vect496.i = insertelement <16 x float> undef, float %1066, i32 0
  %temp.vect497.i = insertelement <16 x float> %temp.vect496.i, float %1067, i32 1
  %temp.vect498.i = insertelement <16 x float> %temp.vect497.i, float %1068, i32 2
  %temp.vect499.i = insertelement <16 x float> %temp.vect498.i, float %1069, i32 3
  %temp.vect500.i = insertelement <16 x float> %temp.vect499.i, float %1070, i32 4
  %temp.vect501.i = insertelement <16 x float> %temp.vect500.i, float %1071, i32 5
  %temp.vect502.i = insertelement <16 x float> %temp.vect501.i, float %1072, i32 6
  %temp.vect503.i = insertelement <16 x float> %temp.vect502.i, float %1073, i32 7
  %temp.vect504.i = insertelement <16 x float> %temp.vect503.i, float %1074, i32 8
  %temp.vect505.i = insertelement <16 x float> %temp.vect504.i, float %1075, i32 9
  %temp.vect506.i = insertelement <16 x float> %temp.vect505.i, float %1076, i32 10
  %temp.vect507.i = insertelement <16 x float> %temp.vect506.i, float %1077, i32 11
  %temp.vect508.i = insertelement <16 x float> %temp.vect507.i, float %1078, i32 12
  %temp.vect509.i = insertelement <16 x float> %temp.vect508.i, float %1079, i32 13
  %temp.vect510.i = insertelement <16 x float> %temp.vect509.i, float %1080, i32 14
  %temp.vect511.i = insertelement <16 x float> %temp.vect510.i, float %1081, i32 15
  %1082 = fadd <16 x float> %temp.vect271.i, %temp.vect287.i
  %1083 = fadd <16 x float> %1082, %temp.vect303.i
  %1084 = fadd <16 x float> %1083, %temp.vect319.i
  %1085 = fadd <16 x float> %1084, %temp.vect335.i
  %1086 = fadd <16 x float> %1085, %temp.vect351.i
  %1087 = fadd <16 x float> %1086, %temp.vect367.i
  %1088 = fadd <16 x float> %1087, %temp.vect383.i
  %1089 = fadd <16 x float> %1088, %temp.vect399.i
  %1090 = fadd <16 x float> %1089, %temp.vect415.i
  %1091 = fadd <16 x float> %1090, %temp.vect431.i
  %1092 = fadd <16 x float> %1091, %temp.vect447.i
  %1093 = fadd <16 x float> %1092, %temp.vect463.i
  %1094 = fadd <16 x float> %1093, %temp.vect479.i
  %1095 = fadd <16 x float> %1094, %temp.vect495.i
  %1096 = fadd <16 x float> %1095, %temp.vect511.i
  %1097 = fadd <16 x float> %vectorPHI1.i, %1096
  %1098 = add nsw i32 %j.01.i, 1
  %1099 = add nsw <16 x i32> %vectorPHI.i, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %1100 = and <16 x i32> %1099, %vector.i
  %exitcond.i = icmp eq i32 %1098, 512
  br i1 %exitcond.i, label %._crit_edge.i, label %26

._crit_edge.i:                                    ; preds = %26
  %1101 = extractelement <16 x i32> %24, i32 0
  %extract512.i = sext i32 %1101 to i64
  %1102 = getelementptr inbounds float addrspace(1)* %4, i64 %extract512.i
  %ptrTypeCast.i = bitcast float addrspace(1)* %1102 to <16 x float> addrspace(1)*
  store <16 x float> %1097, <16 x float> addrspace(1)* %ptrTypeCast.i, align 4
  %check.WI.iter.i = icmp ult i64 %CurrWI..0.i, %16
  br i1 %check.WI.iter.i, label %thenBB.i, label %____Vectorized_.readGlobalMemoryUnit_separated_args.exit

thenBB.i:                                         ; preds = %._crit_edge.i
  %"CurrWI++.i" = add nuw i64 %CurrWI..0.i, 1
  br label %SyncBB528.i

____Vectorized_.readGlobalMemoryUnit_separated_args.exit: ; preds = %._crit_edge.i
  ret void
}

!opencl.kernels = !{!0}

!0 = metadata !{void (float addrspace(1)*, float addrspace(1)*, i32, i8 addrspace(3)*, %struct.WorkDim*, i64*, %struct.PaddedDimId*, %struct.PaddedDimId*, i64*, i64, i8*, i64*)* @__readGlobalMemoryUnit_separated_args, metadata !1, metadata !1, metadata !"", metadata !"float __attribute__((address_space(1))) *, float __attribute__((address_space(1))) *, int", metadata !"opencl_readGlobalMemoryUnit_locals_anchor", void (i8*)* @readGlobalMemoryUnit}
!1 = metadata !{i32 0, i32 0, i32 0}
