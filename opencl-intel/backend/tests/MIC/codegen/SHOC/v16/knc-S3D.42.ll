; XFAIL: win32
;
; RUN: llc < %s -mtriple=x86_64-pc-linux \
; RUN:       -march=y86-64 -mcpu=knc
;
;
; ModuleID = 'Program'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64"
target triple = "x86_64-unknown-linux-gnu"

%struct.PaddedDimId = type <{ [4 x i64] }>
%struct.WorkDim = type { i32, [3 x i64], [3 x i64], [3 x i64], [3 x i64] }

declare void @__ratx_kernel_original(double addrspace(1)* nocapture, double addrspace(1)*, double addrspace(1)*, double addrspace(1)*, double addrspace(1)* nocapture, double) nounwind

declare i64 @get_global_id(i32)

declare double @_Z3logd(double)

declare double @_Z5log10d(double)

declare double @_Z4fmaxdd(double, double)

declare double @_Z3expd(double)

declare double @_Z5exp10d(double)

declare void @____Vectorized_.ratx_kernel_original(double addrspace(1)* nocapture, double addrspace(1)*, double addrspace(1)*, double addrspace(1)*, double addrspace(1)* nocapture, double) nounwind

define i1 @allOne(i1 %pred) {
entry:
  ret i1 %pred
}

define i1 @allZero(i1 %t) {
entry:
  ret i1 %t
}

declare void @dummybarrier.()

declare void @barrier(i64)

declare i8* @get_special_buffer.()

declare i64 @get_iter_count.()

declare i64 @get_new_global_id.(i32, i64)

define void @__ratx_kernel_separated_args(double addrspace(1)* nocapture %T, double addrspace(1)* %C, double addrspace(1)* %RF, double addrspace(1)* %RB, double addrspace(1)* nocapture %RKLOW, double %TCONV, i8 addrspace(3)* %pLocalMem, %struct.WorkDim* %pWorkDim, i64* %pWGId, %struct.PaddedDimId* %pBaseGlbId, %struct.PaddedDimId* %pLocalIds, i64* %contextpointer, i64 %iterCount, i8* %pSpecialBuf, i64* %pCurrWI) nounwind alwaysinline {
bb.nph:
  br label %SyncBB

SyncBB:                                           ; preds = %bb.nph, %thenBB
  %CurrWI..0 = phi i64 [ %"CurrWI++", %thenBB ], [ 0, %bb.nph ]
  %0 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1 = load i64* %0, align 8
  %2 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %3 = load i64* %2, align 8
  %4 = add i64 %1, %3
  %5 = getelementptr inbounds double addrspace(1)* %T, i64 %4
  %6 = load double addrspace(1)* %5, align 8
  %7 = fmul double %6, %TCONV
  %8 = tail call double @_Z3logd(double %7) nounwind
  br label %9

; <label>:9                                       ; preds = %9, %SyncBB
  %indvar = phi i64 [ 0, %SyncBB ], [ %indvar.next, %9 ]
  %CTOT.01 = phi double [ 0.000000e+00, %SyncBB ], [ %17, %9 ]
  %tmp3 = mul i64 %indvar, 110592
  %10 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %11 = load i64* %10, align 8
  %12 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %13 = load i64* %12, align 8
  %14 = add i64 %11, %13
  %tmp4 = add i64 %14, %tmp3
  %15 = getelementptr inbounds double addrspace(1)* %C, i64 %tmp4
  %16 = load double addrspace(1)* %15, align 8
  %17 = fadd double %CTOT.01, %16
  %indvar.next = add i64 %indvar, 1
  %exitcond = icmp eq i64 %indvar.next, 22
  br i1 %exitcond, label %._crit_edge, label %9

._crit_edge:                                      ; preds = %9
  %18 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %19 = load i64* %18, align 8
  %20 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %21 = load i64* %20, align 8
  %22 = add i64 %19, %21
  %23 = getelementptr inbounds double addrspace(1)* %C, i64 %22
  %24 = load double addrspace(1)* %23, align 8
  %25 = fadd double %17, %24
  %26 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %27 = load i64* %26, align 8
  %28 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %29 = load i64* %28, align 8
  %30 = add i64 %27, %29
  %31 = add i64 %30, 552960
  %32 = getelementptr inbounds double addrspace(1)* %C, i64 %31
  %33 = load double addrspace(1)* %32, align 8
  %34 = fmul double %33, 5.000000e+00
  %35 = fadd double %25, %34
  %36 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %37 = load i64* %36, align 8
  %38 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %39 = load i64* %38, align 8
  %40 = add i64 %37, %39
  %41 = add i64 %40, 995328
  %42 = getelementptr inbounds double addrspace(1)* %C, i64 %41
  %43 = load double addrspace(1)* %42, align 8
  %44 = fadd double %35, %43
  %45 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %46 = load i64* %45, align 8
  %47 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %48 = load i64* %47, align 8
  %49 = add i64 %46, %48
  %50 = add i64 %49, 1105920
  %51 = getelementptr inbounds double addrspace(1)* %C, i64 %50
  %52 = load double addrspace(1)* %51, align 8
  %53 = fmul double %52, 5.000000e-01
  %54 = fadd double %44, %53
  %55 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %56 = load i64* %55, align 8
  %57 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %58 = load i64* %57, align 8
  %59 = add i64 %56, %58
  %60 = add i64 %59, 1216512
  %61 = getelementptr inbounds double addrspace(1)* %C, i64 %60
  %62 = load double addrspace(1)* %61, align 8
  %63 = fadd double %54, %62
  %64 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %65 = load i64* %64, align 8
  %66 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %67 = load i64* %66, align 8
  %68 = add i64 %65, %67
  %69 = add i64 %68, 1658880
  %70 = getelementptr inbounds double addrspace(1)* %C, i64 %69
  %71 = load double addrspace(1)* %70, align 8
  %72 = fmul double %71, 2.000000e+00
  %73 = fadd double %63, %72
  %74 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %75 = load i64* %74, align 8
  %76 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %77 = load i64* %76, align 8
  %78 = add i64 %75, %77
  %79 = add i64 %78, 1437696
  %80 = getelementptr inbounds double addrspace(1)* %C, i64 %79
  %81 = load double addrspace(1)* %80, align 8
  %82 = fmul double %81, 2.000000e+00
  %83 = fadd double %73, %82
  %84 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %85 = load i64* %84, align 8
  %86 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %87 = load i64* %86, align 8
  %88 = add i64 %85, %87
  %89 = add i64 %88, 1548288
  %90 = getelementptr inbounds double addrspace(1)* %C, i64 %89
  %91 = load double addrspace(1)* %90, align 8
  %92 = fmul double %91, 2.000000e+00
  %93 = fadd double %83, %92
  %94 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %95 = load i64* %94, align 8
  %96 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %97 = load i64* %96, align 8
  %98 = add i64 %95, %97
  %99 = getelementptr inbounds double addrspace(1)* %C, i64 %98
  %100 = load double addrspace(1)* %99, align 8
  %101 = fadd double %17, %100
  %102 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %103 = load i64* %102, align 8
  %104 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %105 = load i64* %104, align 8
  %106 = add i64 %103, %105
  %107 = add i64 %106, 552960
  %108 = getelementptr inbounds double addrspace(1)* %C, i64 %107
  %109 = load double addrspace(1)* %108, align 8
  %110 = fmul double %109, 5.000000e+00
  %111 = fadd double %101, %110
  %112 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %113 = load i64* %112, align 8
  %114 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %115 = load i64* %114, align 8
  %116 = add i64 %113, %115
  %117 = add i64 %116, 995328
  %118 = getelementptr inbounds double addrspace(1)* %C, i64 %117
  %119 = load double addrspace(1)* %118, align 8
  %120 = fadd double %111, %119
  %121 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %122 = load i64* %121, align 8
  %123 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %124 = load i64* %123, align 8
  %125 = add i64 %122, %124
  %126 = add i64 %125, 1105920
  %127 = getelementptr inbounds double addrspace(1)* %C, i64 %126
  %128 = load double addrspace(1)* %127, align 8
  %129 = fmul double %128, 5.000000e-01
  %130 = fadd double %120, %129
  %131 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %132 = load i64* %131, align 8
  %133 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %134 = load i64* %133, align 8
  %135 = add i64 %132, %134
  %136 = add i64 %135, 1216512
  %137 = getelementptr inbounds double addrspace(1)* %C, i64 %136
  %138 = load double addrspace(1)* %137, align 8
  %139 = fadd double %130, %138
  %140 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %141 = load i64* %140, align 8
  %142 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %143 = load i64* %142, align 8
  %144 = add i64 %141, %143
  %145 = add i64 %144, 1658880
  %146 = getelementptr inbounds double addrspace(1)* %C, i64 %145
  %147 = load double addrspace(1)* %146, align 8
  %148 = fmul double %147, 2.000000e+00
  %149 = fadd double %139, %148
  %150 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %151 = load i64* %150, align 8
  %152 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %153 = load i64* %152, align 8
  %154 = add i64 %151, %153
  %155 = add i64 %154, 1437696
  %156 = getelementptr inbounds double addrspace(1)* %C, i64 %155
  %157 = load double addrspace(1)* %156, align 8
  %158 = fmul double %157, 1.500000e+00
  %159 = fadd double %149, %158
  %160 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %161 = load i64* %160, align 8
  %162 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %163 = load i64* %162, align 8
  %164 = add i64 %161, %163
  %165 = add i64 %164, 1548288
  %166 = getelementptr inbounds double addrspace(1)* %C, i64 %165
  %167 = load double addrspace(1)* %166, align 8
  %168 = fmul double %167, 1.500000e+00
  %169 = fadd double %159, %168
  %170 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %171 = load i64* %170, align 8
  %172 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %173 = load i64* %172, align 8
  %174 = add i64 %171, %173
  %175 = getelementptr inbounds double addrspace(1)* %C, i64 %174
  %176 = load double addrspace(1)* %175, align 8
  %177 = fadd double %17, %176
  %178 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %179 = load i64* %178, align 8
  %180 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %181 = load i64* %180, align 8
  %182 = add i64 %179, %181
  %183 = add i64 %182, 552960
  %184 = getelementptr inbounds double addrspace(1)* %C, i64 %183
  %185 = load double addrspace(1)* %184, align 8
  %186 = fmul double %185, 5.000000e+00
  %187 = fadd double %177, %186
  %188 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %189 = load i64* %188, align 8
  %190 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %191 = load i64* %190, align 8
  %192 = add i64 %189, %191
  %193 = add i64 %192, 995328
  %194 = getelementptr inbounds double addrspace(1)* %C, i64 %193
  %195 = load double addrspace(1)* %194, align 8
  %196 = fadd double %187, %195
  %197 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %198 = load i64* %197, align 8
  %199 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %200 = load i64* %199, align 8
  %201 = add i64 %198, %200
  %202 = add i64 %201, 1105920
  %203 = getelementptr inbounds double addrspace(1)* %C, i64 %202
  %204 = load double addrspace(1)* %203, align 8
  %205 = fmul double %204, 5.000000e-01
  %206 = fadd double %196, %205
  %207 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %208 = load i64* %207, align 8
  %209 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %210 = load i64* %209, align 8
  %211 = add i64 %208, %210
  %212 = add i64 %211, 1216512
  %213 = getelementptr inbounds double addrspace(1)* %C, i64 %212
  %214 = load double addrspace(1)* %213, align 8
  %215 = fadd double %206, %214
  %216 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %217 = load i64* %216, align 8
  %218 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %219 = load i64* %218, align 8
  %220 = add i64 %217, %219
  %221 = add i64 %220, 1658880
  %222 = getelementptr inbounds double addrspace(1)* %C, i64 %221
  %223 = load double addrspace(1)* %222, align 8
  %224 = fmul double %223, 2.000000e+00
  %225 = fadd double %215, %224
  %226 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %227 = load i64* %226, align 8
  %228 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %229 = load i64* %228, align 8
  %230 = add i64 %227, %229
  %231 = add i64 %230, 1437696
  %232 = getelementptr inbounds double addrspace(1)* %C, i64 %231
  %233 = load double addrspace(1)* %232, align 8
  %234 = fmul double %233, 2.000000e+00
  %235 = fadd double %225, %234
  %236 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %237 = load i64* %236, align 8
  %238 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %239 = load i64* %238, align 8
  %240 = add i64 %237, %239
  %241 = add i64 %240, 1548288
  %242 = getelementptr inbounds double addrspace(1)* %C, i64 %241
  %243 = load double addrspace(1)* %242, align 8
  %244 = fmul double %243, 2.000000e+00
  %245 = fadd double %235, %244
  %246 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %247 = load i64* %246, align 8
  %248 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %249 = load i64* %248, align 8
  %250 = add i64 %247, %249
  %251 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %250
  %252 = load double addrspace(1)* %251, align 8
  %253 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %254 = load i64* %253, align 8
  %255 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %256 = load i64* %255, align 8
  %257 = add i64 %254, %256
  %258 = add i64 %257, 1658880
  %259 = getelementptr inbounds double addrspace(1)* %RF, i64 %258
  %260 = load double addrspace(1)* %259, align 8
  %261 = fdiv double 1.000000e+00, %260
  %262 = fmul double %245, %261
  %263 = fmul double %252, %262
  %264 = fadd double %263, 1.000000e+00
  %265 = fdiv double 1.000000e+00, %264
  %266 = fmul double %263, %265
  %267 = tail call double @_Z4fmaxdd(double %263, double 1.000000e-200) nounwind
  %268 = tail call double @_Z5log10d(double %267) nounwind
  %269 = fmul double %7, 0xBF85C9882B931057
  %270 = tail call double @_Z3expd(double %269) nounwind
  %271 = fmul double %270, 2.654000e-01
  %272 = fmul double %7, 0xBF42A91C92F3C105
  %273 = tail call double @_Z3expd(double %272) nounwind
  %274 = fmul double %273, 7.346000e-01
  %275 = fadd double %271, %274
  %276 = fdiv double 1.000000e+00, %7
  %277 = fmul double %276, -5.182000e+03
  %278 = tail call double @_Z3expd(double %277) nounwind
  %279 = fadd double %275, %278
  %280 = tail call double @_Z4fmaxdd(double %279, double 1.000000e-200) nounwind
  %281 = tail call double @_Z5log10d(double %280) nounwind
  %282 = fmul double %281, 1.270000e+00
  %283 = fsub double 7.500000e-01, %282
  %284 = fmul double %281, 6.700000e-01
  %285 = fadd double %284, 4.000000e-01
  %286 = fsub double %268, %285
  %287 = fmul double %286, 1.400000e-01
  %288 = fsub double %283, %287
  %289 = fdiv double 1.000000e+00, %288
  %290 = fmul double %286, %289
  %291 = fmul double %290, %290
  %292 = fadd double %291, 1.000000e+00
  %293 = fdiv double 1.000000e+00, %292
  %294 = fmul double %281, %293
  %295 = tail call double @_Z5exp10d(double %294) nounwind
  %296 = fmul double %295, %266
  %297 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %298 = load i64* %297, align 8
  %299 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %300 = load i64* %299, align 8
  %301 = add i64 %298, %300
  %302 = add i64 %301, 1658880
  %303 = getelementptr inbounds double addrspace(1)* %RF, i64 %302
  %304 = load double addrspace(1)* %303, align 8
  %305 = fmul double %304, %296
  %306 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %307 = load i64* %306, align 8
  %308 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %309 = load i64* %308, align 8
  %310 = add i64 %307, %309
  %311 = add i64 %310, 1658880
  %312 = getelementptr inbounds double addrspace(1)* %RF, i64 %311
  store double %305, double addrspace(1)* %312, align 8
  %313 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %314 = load i64* %313, align 8
  %315 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %316 = load i64* %315, align 8
  %317 = add i64 %314, %316
  %318 = add i64 %317, 1658880
  %319 = getelementptr inbounds double addrspace(1)* %RB, i64 %318
  %320 = load double addrspace(1)* %319, align 8
  %321 = fmul double %320, %296
  %322 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %323 = load i64* %322, align 8
  %324 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %325 = load i64* %324, align 8
  %326 = add i64 %323, %325
  %327 = add i64 %326, 1658880
  %328 = getelementptr inbounds double addrspace(1)* %RB, i64 %327
  store double %321, double addrspace(1)* %328, align 8
  %329 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %330 = load i64* %329, align 8
  %331 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %332 = load i64* %331, align 8
  %333 = add i64 %330, %332
  %334 = add i64 %333, 110592
  %335 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %334
  %336 = load double addrspace(1)* %335, align 8
  %337 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %338 = load i64* %337, align 8
  %339 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %340 = load i64* %339, align 8
  %341 = add i64 %338, %340
  %342 = add i64 %341, 3317760
  %343 = getelementptr inbounds double addrspace(1)* %RF, i64 %342
  %344 = load double addrspace(1)* %343, align 8
  %345 = fdiv double 1.000000e+00, %344
  %346 = fmul double %93, %345
  %347 = fmul double %336, %346
  %348 = fadd double %347, 1.000000e+00
  %349 = fdiv double 1.000000e+00, %348
  %350 = fmul double %347, %349
  %351 = tail call double @_Z4fmaxdd(double %347, double 1.000000e-200) nounwind
  %352 = tail call double @_Z5log10d(double %351) nounwind
  %353 = fmul double %7, 0xBF74CAB88725AF6E
  %354 = tail call double @_Z3expd(double %353) nounwind
  %355 = fmul double %354, 6.800000e-02
  %356 = fmul double %7, 0xBF454725E6BB82FE
  %357 = tail call double @_Z3expd(double %356) nounwind
  %358 = fmul double %357, 9.320000e-01
  %359 = fadd double %355, %358
  %360 = fmul double %276, -1.030000e+04
  %361 = tail call double @_Z3expd(double %360) nounwind
  %362 = fadd double %359, %361
  %363 = tail call double @_Z4fmaxdd(double %362, double 1.000000e-200) nounwind
  %364 = tail call double @_Z5log10d(double %363) nounwind
  %365 = fmul double %364, 1.270000e+00
  %366 = fsub double 7.500000e-01, %365
  %367 = fmul double %364, 6.700000e-01
  %368 = fadd double %367, 4.000000e-01
  %369 = fsub double %352, %368
  %370 = fmul double %369, 1.400000e-01
  %371 = fsub double %366, %370
  %372 = fdiv double 1.000000e+00, %371
  %373 = fmul double %369, %372
  %374 = fmul double %373, %373
  %375 = fadd double %374, 1.000000e+00
  %376 = fdiv double 1.000000e+00, %375
  %377 = fmul double %364, %376
  %378 = tail call double @_Z5exp10d(double %377) nounwind
  %379 = fmul double %378, %350
  %380 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %381 = load i64* %380, align 8
  %382 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %383 = load i64* %382, align 8
  %384 = add i64 %381, %383
  %385 = add i64 %384, 3317760
  %386 = getelementptr inbounds double addrspace(1)* %RF, i64 %385
  %387 = load double addrspace(1)* %386, align 8
  %388 = fmul double %387, %379
  %389 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %390 = load i64* %389, align 8
  %391 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %392 = load i64* %391, align 8
  %393 = add i64 %390, %392
  %394 = add i64 %393, 3317760
  %395 = getelementptr inbounds double addrspace(1)* %RF, i64 %394
  store double %388, double addrspace(1)* %395, align 8
  %396 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %397 = load i64* %396, align 8
  %398 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %399 = load i64* %398, align 8
  %400 = add i64 %397, %399
  %401 = add i64 %400, 3317760
  %402 = getelementptr inbounds double addrspace(1)* %RB, i64 %401
  %403 = load double addrspace(1)* %402, align 8
  %404 = fmul double %403, %379
  %405 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %406 = load i64* %405, align 8
  %407 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %408 = load i64* %407, align 8
  %409 = add i64 %406, %408
  %410 = add i64 %409, 3317760
  %411 = getelementptr inbounds double addrspace(1)* %RB, i64 %410
  store double %404, double addrspace(1)* %411, align 8
  %412 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %413 = load i64* %412, align 8
  %414 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %415 = load i64* %414, align 8
  %416 = add i64 %413, %415
  %417 = add i64 %416, 221184
  %418 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %417
  %419 = load double addrspace(1)* %418, align 8
  %420 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %421 = load i64* %420, align 8
  %422 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %423 = load i64* %422, align 8
  %424 = add i64 %421, %423
  %425 = add i64 %424, 4202496
  %426 = getelementptr inbounds double addrspace(1)* %RF, i64 %425
  %427 = load double addrspace(1)* %426, align 8
  %428 = fdiv double 1.000000e+00, %427
  %429 = fmul double %93, %428
  %430 = fmul double %419, %429
  %431 = fadd double %430, 1.000000e+00
  %432 = fdiv double 1.000000e+00, %431
  %433 = fmul double %430, %432
  %434 = tail call double @_Z4fmaxdd(double %430, double 1.000000e-200) nounwind
  %435 = tail call double @_Z5log10d(double %434) nounwind
  %436 = fmul double %7, 0xBF71485F0E0ACD3B
  %437 = tail call double @_Z3expd(double %436) nounwind
  %438 = fmul double %437, 4.243000e-01
  %439 = fmul double %7, 0xBF43D5D991AA75C6
  %440 = tail call double @_Z3expd(double %439) nounwind
  %441 = fmul double %440, 5.757000e-01
  %442 = fadd double %438, %441
  %443 = fmul double %276, -5.069000e+03
  %444 = tail call double @_Z3expd(double %443) nounwind
  %445 = fadd double %442, %444
  %446 = tail call double @_Z4fmaxdd(double %445, double 1.000000e-200) nounwind
  %447 = tail call double @_Z5log10d(double %446) nounwind
  %448 = fmul double %447, 1.270000e+00
  %449 = fsub double 7.500000e-01, %448
  %450 = fmul double %447, 6.700000e-01
  %451 = fadd double %450, 4.000000e-01
  %452 = fsub double %435, %451
  %453 = fmul double %452, 1.400000e-01
  %454 = fsub double %449, %453
  %455 = fdiv double 1.000000e+00, %454
  %456 = fmul double %452, %455
  %457 = fmul double %456, %456
  %458 = fadd double %457, 1.000000e+00
  %459 = fdiv double 1.000000e+00, %458
  %460 = fmul double %447, %459
  %461 = tail call double @_Z5exp10d(double %460) nounwind
  %462 = fmul double %461, %433
  %463 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %464 = load i64* %463, align 8
  %465 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %466 = load i64* %465, align 8
  %467 = add i64 %464, %466
  %468 = add i64 %467, 4202496
  %469 = getelementptr inbounds double addrspace(1)* %RF, i64 %468
  %470 = load double addrspace(1)* %469, align 8
  %471 = fmul double %470, %462
  %472 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %473 = load i64* %472, align 8
  %474 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %475 = load i64* %474, align 8
  %476 = add i64 %473, %475
  %477 = add i64 %476, 4202496
  %478 = getelementptr inbounds double addrspace(1)* %RF, i64 %477
  store double %471, double addrspace(1)* %478, align 8
  %479 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %480 = load i64* %479, align 8
  %481 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %482 = load i64* %481, align 8
  %483 = add i64 %480, %482
  %484 = add i64 %483, 4202496
  %485 = getelementptr inbounds double addrspace(1)* %RB, i64 %484
  %486 = load double addrspace(1)* %485, align 8
  %487 = fmul double %486, %462
  %488 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %489 = load i64* %488, align 8
  %490 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %491 = load i64* %490, align 8
  %492 = add i64 %489, %491
  %493 = add i64 %492, 4202496
  %494 = getelementptr inbounds double addrspace(1)* %RB, i64 %493
  store double %487, double addrspace(1)* %494, align 8
  %495 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %496 = load i64* %495, align 8
  %497 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %498 = load i64* %497, align 8
  %499 = add i64 %496, %498
  %500 = add i64 %499, 331776
  %501 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %500
  %502 = load double addrspace(1)* %501, align 8
  %503 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %504 = load i64* %503, align 8
  %505 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %506 = load i64* %505, align 8
  %507 = add i64 %504, %506
  %508 = add i64 %507, 4423680
  %509 = getelementptr inbounds double addrspace(1)* %RF, i64 %508
  %510 = load double addrspace(1)* %509, align 8
  %511 = fdiv double 1.000000e+00, %510
  %512 = fmul double %93, %511
  %513 = fmul double %502, %512
  %514 = fadd double %513, 1.000000e+00
  %515 = fdiv double 1.000000e+00, %514
  %516 = fmul double %513, %515
  %517 = tail call double @_Z4fmaxdd(double %513, double 1.000000e-200) nounwind
  %518 = tail call double @_Z5log10d(double %517) nounwind
  %519 = fmul double %7, 0xBF6E3A9179DC1A73
  %520 = tail call double @_Z3expd(double %519) nounwind
  %521 = fmul double %520, 2.176000e-01
  %522 = fmul double %7, 0xBF37C9BBCB978E43
  %523 = tail call double @_Z3expd(double %522) nounwind
  %524 = fmul double %523, 7.824000e-01
  %525 = fadd double %521, %524
  %526 = fmul double %276, -6.570000e+03
  %527 = tail call double @_Z3expd(double %526) nounwind
  %528 = fadd double %525, %527
  %529 = tail call double @_Z4fmaxdd(double %528, double 1.000000e-200) nounwind
  %530 = tail call double @_Z5log10d(double %529) nounwind
  %531 = fmul double %530, 1.270000e+00
  %532 = fsub double 7.500000e-01, %531
  %533 = fmul double %530, 6.700000e-01
  %534 = fadd double %533, 4.000000e-01
  %535 = fsub double %518, %534
  %536 = fmul double %535, 1.400000e-01
  %537 = fsub double %532, %536
  %538 = fdiv double 1.000000e+00, %537
  %539 = fmul double %535, %538
  %540 = fmul double %539, %539
  %541 = fadd double %540, 1.000000e+00
  %542 = fdiv double 1.000000e+00, %541
  %543 = fmul double %530, %542
  %544 = tail call double @_Z5exp10d(double %543) nounwind
  %545 = fmul double %544, %516
  %546 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %547 = load i64* %546, align 8
  %548 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %549 = load i64* %548, align 8
  %550 = add i64 %547, %549
  %551 = add i64 %550, 4423680
  %552 = getelementptr inbounds double addrspace(1)* %RF, i64 %551
  %553 = load double addrspace(1)* %552, align 8
  %554 = fmul double %553, %545
  %555 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %556 = load i64* %555, align 8
  %557 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %558 = load i64* %557, align 8
  %559 = add i64 %556, %558
  %560 = add i64 %559, 4423680
  %561 = getelementptr inbounds double addrspace(1)* %RF, i64 %560
  store double %554, double addrspace(1)* %561, align 8
  %562 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %563 = load i64* %562, align 8
  %564 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %565 = load i64* %564, align 8
  %566 = add i64 %563, %565
  %567 = add i64 %566, 4423680
  %568 = getelementptr inbounds double addrspace(1)* %RB, i64 %567
  %569 = load double addrspace(1)* %568, align 8
  %570 = fmul double %569, %545
  %571 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %572 = load i64* %571, align 8
  %573 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %574 = load i64* %573, align 8
  %575 = add i64 %572, %574
  %576 = add i64 %575, 4423680
  %577 = getelementptr inbounds double addrspace(1)* %RB, i64 %576
  store double %570, double addrspace(1)* %577, align 8
  %578 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %579 = load i64* %578, align 8
  %580 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %581 = load i64* %580, align 8
  %582 = add i64 %579, %581
  %583 = add i64 %582, 442368
  %584 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %583
  %585 = load double addrspace(1)* %584, align 8
  %586 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %587 = load i64* %586, align 8
  %588 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %589 = load i64* %588, align 8
  %590 = add i64 %587, %589
  %591 = add i64 %590, 5197824
  %592 = getelementptr inbounds double addrspace(1)* %RF, i64 %591
  %593 = load double addrspace(1)* %592, align 8
  %594 = fdiv double 1.000000e+00, %593
  %595 = fmul double %93, %594
  %596 = fmul double %585, %595
  %597 = fadd double %596, 1.000000e+00
  %598 = fdiv double 1.000000e+00, %597
  %599 = fmul double %596, %598
  %600 = tail call double @_Z4fmaxdd(double %596, double 1.000000e-200) nounwind
  %601 = tail call double @_Z5log10d(double %600) nounwind
  %602 = fmul double %7, 0xBF8A41A41A41A41A
  %603 = tail call double @_Z3expd(double %602) nounwind
  %604 = fmul double %603, 3.200000e-01
  %605 = fmul double %7, 0xBF406CD0E80106CD
  %606 = tail call double @_Z3expd(double %605) nounwind
  %607 = fmul double %606, 6.800000e-01
  %608 = fadd double %604, %607
  %609 = fmul double %276, -5.590000e+03
  %610 = tail call double @_Z3expd(double %609) nounwind
  %611 = fadd double %608, %610
  %612 = tail call double @_Z4fmaxdd(double %611, double 1.000000e-200) nounwind
  %613 = tail call double @_Z5log10d(double %612) nounwind
  %614 = fmul double %613, 1.270000e+00
  %615 = fsub double 7.500000e-01, %614
  %616 = fmul double %613, 6.700000e-01
  %617 = fadd double %616, 4.000000e-01
  %618 = fsub double %601, %617
  %619 = fmul double %618, 1.400000e-01
  %620 = fsub double %615, %619
  %621 = fdiv double 1.000000e+00, %620
  %622 = fmul double %618, %621
  %623 = fmul double %622, %622
  %624 = fadd double %623, 1.000000e+00
  %625 = fdiv double 1.000000e+00, %624
  %626 = fmul double %613, %625
  %627 = tail call double @_Z5exp10d(double %626) nounwind
  %628 = fmul double %627, %599
  %629 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %630 = load i64* %629, align 8
  %631 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %632 = load i64* %631, align 8
  %633 = add i64 %630, %632
  %634 = add i64 %633, 5197824
  %635 = getelementptr inbounds double addrspace(1)* %RF, i64 %634
  %636 = load double addrspace(1)* %635, align 8
  %637 = fmul double %636, %628
  %638 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %639 = load i64* %638, align 8
  %640 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %641 = load i64* %640, align 8
  %642 = add i64 %639, %641
  %643 = add i64 %642, 5197824
  %644 = getelementptr inbounds double addrspace(1)* %RF, i64 %643
  store double %637, double addrspace(1)* %644, align 8
  %645 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %646 = load i64* %645, align 8
  %647 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %648 = load i64* %647, align 8
  %649 = add i64 %646, %648
  %650 = add i64 %649, 5197824
  %651 = getelementptr inbounds double addrspace(1)* %RB, i64 %650
  %652 = load double addrspace(1)* %651, align 8
  %653 = fmul double %652, %628
  %654 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %655 = load i64* %654, align 8
  %656 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %657 = load i64* %656, align 8
  %658 = add i64 %655, %657
  %659 = add i64 %658, 5197824
  %660 = getelementptr inbounds double addrspace(1)* %RB, i64 %659
  store double %653, double addrspace(1)* %660, align 8
  %661 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %662 = load i64* %661, align 8
  %663 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %664 = load i64* %663, align 8
  %665 = add i64 %662, %664
  %666 = add i64 %665, 552960
  %667 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %666
  %668 = load double addrspace(1)* %667, align 8
  %669 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %670 = load i64* %669, align 8
  %671 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %672 = load i64* %671, align 8
  %673 = add i64 %670, %672
  %674 = add i64 %673, 6082560
  %675 = getelementptr inbounds double addrspace(1)* %RF, i64 %674
  %676 = load double addrspace(1)* %675, align 8
  %677 = fdiv double 1.000000e+00, %676
  %678 = fmul double %93, %677
  %679 = fmul double %668, %678
  %680 = fadd double %679, 1.000000e+00
  %681 = fdiv double 1.000000e+00, %680
  %682 = fmul double %679, %681
  %683 = tail call double @_Z4fmaxdd(double %679, double 1.000000e-200) nounwind
  %684 = tail call double @_Z5log10d(double %683) nounwind
  %685 = fmul double %7, 0xBF6DCA01DCA01DCA
  %686 = tail call double @_Z3expd(double %685) nounwind
  %687 = fmul double %686, 4.093000e-01
  %688 = fmul double %7, 0xBF4ABA41FBD2E5B1
  %689 = tail call double @_Z3expd(double %688) nounwind
  %690 = fmul double %689, 5.907000e-01
  %691 = fadd double %687, %690
  %692 = fmul double %276, -5.185000e+03
  %693 = tail call double @_Z3expd(double %692) nounwind
  %694 = fadd double %691, %693
  %695 = tail call double @_Z4fmaxdd(double %694, double 1.000000e-200) nounwind
  %696 = tail call double @_Z5log10d(double %695) nounwind
  %697 = fmul double %696, 1.270000e+00
  %698 = fsub double 7.500000e-01, %697
  %699 = fmul double %696, 6.700000e-01
  %700 = fadd double %699, 4.000000e-01
  %701 = fsub double %684, %700
  %702 = fmul double %701, 1.400000e-01
  %703 = fsub double %698, %702
  %704 = fdiv double 1.000000e+00, %703
  %705 = fmul double %701, %704
  %706 = fmul double %705, %705
  %707 = fadd double %706, 1.000000e+00
  %708 = fdiv double 1.000000e+00, %707
  %709 = fmul double %696, %708
  %710 = tail call double @_Z5exp10d(double %709) nounwind
  %711 = fmul double %710, %682
  %712 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %713 = load i64* %712, align 8
  %714 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %715 = load i64* %714, align 8
  %716 = add i64 %713, %715
  %717 = add i64 %716, 6082560
  %718 = getelementptr inbounds double addrspace(1)* %RF, i64 %717
  %719 = load double addrspace(1)* %718, align 8
  %720 = fmul double %719, %711
  %721 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %722 = load i64* %721, align 8
  %723 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %724 = load i64* %723, align 8
  %725 = add i64 %722, %724
  %726 = add i64 %725, 6082560
  %727 = getelementptr inbounds double addrspace(1)* %RF, i64 %726
  store double %720, double addrspace(1)* %727, align 8
  %728 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %729 = load i64* %728, align 8
  %730 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %731 = load i64* %730, align 8
  %732 = add i64 %729, %731
  %733 = add i64 %732, 6082560
  %734 = getelementptr inbounds double addrspace(1)* %RB, i64 %733
  %735 = load double addrspace(1)* %734, align 8
  %736 = fmul double %735, %711
  %737 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %738 = load i64* %737, align 8
  %739 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %740 = load i64* %739, align 8
  %741 = add i64 %738, %740
  %742 = add i64 %741, 6082560
  %743 = getelementptr inbounds double addrspace(1)* %RB, i64 %742
  store double %736, double addrspace(1)* %743, align 8
  %744 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %745 = load i64* %744, align 8
  %746 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %747 = load i64* %746, align 8
  %748 = add i64 %745, %747
  %749 = add i64 %748, 663552
  %750 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %749
  %751 = load double addrspace(1)* %750, align 8
  %752 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %753 = load i64* %752, align 8
  %754 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %755 = load i64* %754, align 8
  %756 = add i64 %753, %755
  %757 = add i64 %756, 7741440
  %758 = getelementptr inbounds double addrspace(1)* %RF, i64 %757
  %759 = load double addrspace(1)* %758, align 8
  %760 = fdiv double 1.000000e+00, %759
  %761 = fmul double %93, %760
  %762 = fmul double %751, %761
  %763 = fadd double %762, 1.000000e+00
  %764 = fdiv double 1.000000e+00, %763
  %765 = fmul double %762, %764
  %766 = tail call double @_Z4fmaxdd(double %762, double 1.000000e-200) nounwind
  %767 = tail call double @_Z5log10d(double %766) nounwind
  %768 = tail call double @_Z3expd(double %269) nounwind
  %769 = fmul double %768, 2.420000e-01
  %770 = fmul double %7, 0xBF45129A6C53A1D5
  %771 = tail call double @_Z3expd(double %770) nounwind
  %772 = fmul double %771, 7.580000e-01
  %773 = fadd double %769, %772
  %774 = fmul double %276, -4.200000e+03
  %775 = tail call double @_Z3expd(double %774) nounwind
  %776 = fadd double %773, %775
  %777 = tail call double @_Z4fmaxdd(double %776, double 1.000000e-200) nounwind
  %778 = tail call double @_Z5log10d(double %777) nounwind
  %779 = fmul double %778, 1.270000e+00
  %780 = fsub double 7.500000e-01, %779
  %781 = fmul double %778, 6.700000e-01
  %782 = fadd double %781, 4.000000e-01
  %783 = fsub double %767, %782
  %784 = fmul double %783, 1.400000e-01
  %785 = fsub double %780, %784
  %786 = fdiv double 1.000000e+00, %785
  %787 = fmul double %783, %786
  %788 = fmul double %787, %787
  %789 = fadd double %788, 1.000000e+00
  %790 = fdiv double 1.000000e+00, %789
  %791 = fmul double %778, %790
  %792 = tail call double @_Z5exp10d(double %791) nounwind
  %793 = fmul double %792, %765
  %794 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %795 = load i64* %794, align 8
  %796 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %797 = load i64* %796, align 8
  %798 = add i64 %795, %797
  %799 = add i64 %798, 7741440
  %800 = getelementptr inbounds double addrspace(1)* %RF, i64 %799
  %801 = load double addrspace(1)* %800, align 8
  %802 = fmul double %801, %793
  %803 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %804 = load i64* %803, align 8
  %805 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %806 = load i64* %805, align 8
  %807 = add i64 %804, %806
  %808 = add i64 %807, 7741440
  %809 = getelementptr inbounds double addrspace(1)* %RF, i64 %808
  store double %802, double addrspace(1)* %809, align 8
  %810 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %811 = load i64* %810, align 8
  %812 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %813 = load i64* %812, align 8
  %814 = add i64 %811, %813
  %815 = add i64 %814, 7741440
  %816 = getelementptr inbounds double addrspace(1)* %RB, i64 %815
  %817 = load double addrspace(1)* %816, align 8
  %818 = fmul double %817, %793
  %819 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %820 = load i64* %819, align 8
  %821 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %822 = load i64* %821, align 8
  %823 = add i64 %820, %822
  %824 = add i64 %823, 7741440
  %825 = getelementptr inbounds double addrspace(1)* %RB, i64 %824
  store double %818, double addrspace(1)* %825, align 8
  %826 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %827 = load i64* %826, align 8
  %828 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %829 = load i64* %828, align 8
  %830 = add i64 %827, %829
  %831 = add i64 %830, 774144
  %832 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %831
  %833 = load double addrspace(1)* %832, align 8
  %834 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %835 = load i64* %834, align 8
  %836 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %837 = load i64* %836, align 8
  %838 = add i64 %835, %837
  %839 = add i64 %838, 8515584
  %840 = getelementptr inbounds double addrspace(1)* %RF, i64 %839
  %841 = load double addrspace(1)* %840, align 8
  %842 = fdiv double 1.000000e+00, %841
  %843 = fmul double %93, %842
  %844 = fmul double %833, %843
  %845 = fadd double %844, 1.000000e+00
  %846 = fdiv double 1.000000e+00, %845
  %847 = fmul double %844, %846
  %848 = tail call double @_Z4fmaxdd(double %844, double 1.000000e-200) nounwind
  %849 = tail call double @_Z5log10d(double %848) nounwind
  %850 = fmul double %7, 0xBF8BACF914C1BAD0
  %851 = tail call double @_Z3expd(double %850) nounwind
  %852 = fmul double %851, 2.170000e-01
  %853 = fmul double %7, 0xBF36489880D3B1A9
  %854 = tail call double @_Z3expd(double %853) nounwind
  %855 = fmul double %854, 7.830000e-01
  %856 = fadd double %852, %855
  %857 = fmul double %276, -6.964000e+03
  %858 = tail call double @_Z3expd(double %857) nounwind
  %859 = fadd double %856, %858
  %860 = tail call double @_Z4fmaxdd(double %859, double 1.000000e-200) nounwind
  %861 = tail call double @_Z5log10d(double %860) nounwind
  %862 = fmul double %861, 1.270000e+00
  %863 = fsub double 7.500000e-01, %862
  %864 = fmul double %861, 6.700000e-01
  %865 = fadd double %864, 4.000000e-01
  %866 = fsub double %849, %865
  %867 = fmul double %866, 1.400000e-01
  %868 = fsub double %863, %867
  %869 = fdiv double 1.000000e+00, %868
  %870 = fmul double %866, %869
  %871 = fmul double %870, %870
  %872 = fadd double %871, 1.000000e+00
  %873 = fdiv double 1.000000e+00, %872
  %874 = fmul double %861, %873
  %875 = tail call double @_Z5exp10d(double %874) nounwind
  %876 = fmul double %875, %847
  %877 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %878 = load i64* %877, align 8
  %879 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %880 = load i64* %879, align 8
  %881 = add i64 %878, %880
  %882 = add i64 %881, 8515584
  %883 = getelementptr inbounds double addrspace(1)* %RF, i64 %882
  %884 = load double addrspace(1)* %883, align 8
  %885 = fmul double %884, %876
  %886 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %887 = load i64* %886, align 8
  %888 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %889 = load i64* %888, align 8
  %890 = add i64 %887, %889
  %891 = add i64 %890, 8515584
  %892 = getelementptr inbounds double addrspace(1)* %RF, i64 %891
  store double %885, double addrspace(1)* %892, align 8
  %893 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %894 = load i64* %893, align 8
  %895 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %896 = load i64* %895, align 8
  %897 = add i64 %894, %896
  %898 = add i64 %897, 8515584
  %899 = getelementptr inbounds double addrspace(1)* %RB, i64 %898
  %900 = load double addrspace(1)* %899, align 8
  %901 = fmul double %900, %876
  %902 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %903 = load i64* %902, align 8
  %904 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %905 = load i64* %904, align 8
  %906 = add i64 %903, %905
  %907 = add i64 %906, 8515584
  %908 = getelementptr inbounds double addrspace(1)* %RB, i64 %907
  store double %901, double addrspace(1)* %908, align 8
  %909 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %910 = load i64* %909, align 8
  %911 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %912 = load i64* %911, align 8
  %913 = add i64 %910, %912
  %914 = add i64 %913, 884736
  %915 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %914
  %916 = load double addrspace(1)* %915, align 8
  %917 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %918 = load i64* %917, align 8
  %919 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %920 = load i64* %919, align 8
  %921 = add i64 %918, %920
  %922 = add i64 %921, 9732096
  %923 = getelementptr inbounds double addrspace(1)* %RF, i64 %922
  %924 = load double addrspace(1)* %923, align 8
  %925 = fdiv double 1.000000e+00, %924
  %926 = fmul double %93, %925
  %927 = fmul double %916, %926
  %928 = fadd double %927, 1.000000e+00
  %929 = fdiv double 1.000000e+00, %928
  %930 = fmul double %927, %929
  %931 = tail call double @_Z4fmaxdd(double %927, double 1.000000e-200) nounwind
  %932 = tail call double @_Z5log10d(double %931) nounwind
  %933 = fmul double %7, 0xBFB393EE251E9EA8
  %934 = tail call double @_Z3expd(double %933) nounwind
  %935 = fmul double %934, 3.827000e-01
  %936 = fmul double %7, 0xBF3F89BB80DCC421
  %937 = tail call double @_Z3expd(double %936) nounwind
  %938 = fmul double %937, 6.173000e-01
  %939 = fadd double %935, %938
  %940 = fmul double %276, -5.093000e+03
  %941 = tail call double @_Z3expd(double %940) nounwind
  %942 = fadd double %939, %941
  %943 = tail call double @_Z4fmaxdd(double %942, double 1.000000e-200) nounwind
  %944 = tail call double @_Z5log10d(double %943) nounwind
  %945 = fmul double %944, 1.270000e+00
  %946 = fsub double 7.500000e-01, %945
  %947 = fmul double %944, 6.700000e-01
  %948 = fadd double %947, 4.000000e-01
  %949 = fsub double %932, %948
  %950 = fmul double %949, 1.400000e-01
  %951 = fsub double %946, %950
  %952 = fdiv double 1.000000e+00, %951
  %953 = fmul double %949, %952
  %954 = fmul double %953, %953
  %955 = fadd double %954, 1.000000e+00
  %956 = fdiv double 1.000000e+00, %955
  %957 = fmul double %944, %956
  %958 = tail call double @_Z5exp10d(double %957) nounwind
  %959 = fmul double %958, %930
  %960 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %961 = load i64* %960, align 8
  %962 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %963 = load i64* %962, align 8
  %964 = add i64 %961, %963
  %965 = add i64 %964, 9732096
  %966 = getelementptr inbounds double addrspace(1)* %RF, i64 %965
  %967 = load double addrspace(1)* %966, align 8
  %968 = fmul double %967, %959
  %969 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %970 = load i64* %969, align 8
  %971 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %972 = load i64* %971, align 8
  %973 = add i64 %970, %972
  %974 = add i64 %973, 9732096
  %975 = getelementptr inbounds double addrspace(1)* %RF, i64 %974
  store double %968, double addrspace(1)* %975, align 8
  %976 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %977 = load i64* %976, align 8
  %978 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %979 = load i64* %978, align 8
  %980 = add i64 %977, %979
  %981 = add i64 %980, 9732096
  %982 = getelementptr inbounds double addrspace(1)* %RB, i64 %981
  %983 = load double addrspace(1)* %982, align 8
  %984 = fmul double %983, %959
  %985 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %986 = load i64* %985, align 8
  %987 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %988 = load i64* %987, align 8
  %989 = add i64 %986, %988
  %990 = add i64 %989, 9732096
  %991 = getelementptr inbounds double addrspace(1)* %RB, i64 %990
  store double %984, double addrspace(1)* %991, align 8
  %992 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %993 = load i64* %992, align 8
  %994 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %995 = load i64* %994, align 8
  %996 = add i64 %993, %995
  %997 = add i64 %996, 995328
  %998 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %997
  %999 = load double addrspace(1)* %998, align 8
  %1000 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1001 = load i64* %1000, align 8
  %1002 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1003 = load i64* %1002, align 8
  %1004 = add i64 %1001, %1003
  %1005 = add i64 %1004, 10174464
  %1006 = getelementptr inbounds double addrspace(1)* %RF, i64 %1005
  %1007 = load double addrspace(1)* %1006, align 8
  %1008 = fdiv double 1.000000e+00, %1007
  %1009 = fmul double %93, %1008
  %1010 = fmul double %999, %1009
  %1011 = fadd double %1010, 1.000000e+00
  %1012 = fdiv double 1.000000e+00, %1011
  %1013 = fmul double %1010, %1012
  %1014 = tail call double @_Z4fmaxdd(double %1010, double 1.000000e-200) nounwind
  %1015 = tail call double @_Z5log10d(double %1014) nounwind
  %1016 = fmul double %7, 0xBF7B2036406C80D9
  %1017 = tail call double @_Z3expd(double %1016) nounwind
  %1018 = fmul double %1017, 4.675000e-01
  %1019 = fmul double %7, 0xBF4F9182B6813BAF
  %1020 = tail call double @_Z3expd(double %1019) nounwind
  %1021 = fmul double %1020, 5.325000e-01
  %1022 = fadd double %1018, %1021
  %1023 = fmul double %276, -4.970000e+03
  %1024 = tail call double @_Z3expd(double %1023) nounwind
  %1025 = fadd double %1022, %1024
  %1026 = tail call double @_Z4fmaxdd(double %1025, double 1.000000e-200) nounwind
  %1027 = tail call double @_Z5log10d(double %1026) nounwind
  %1028 = fmul double %1027, 1.270000e+00
  %1029 = fsub double 7.500000e-01, %1028
  %1030 = fmul double %1027, 6.700000e-01
  %1031 = fadd double %1030, 4.000000e-01
  %1032 = fsub double %1015, %1031
  %1033 = fmul double %1032, 1.400000e-01
  %1034 = fsub double %1029, %1033
  %1035 = fdiv double 1.000000e+00, %1034
  %1036 = fmul double %1032, %1035
  %1037 = fmul double %1036, %1036
  %1038 = fadd double %1037, 1.000000e+00
  %1039 = fdiv double 1.000000e+00, %1038
  %1040 = fmul double %1027, %1039
  %1041 = tail call double @_Z5exp10d(double %1040) nounwind
  %1042 = fmul double %1041, %1013
  %1043 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1044 = load i64* %1043, align 8
  %1045 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1046 = load i64* %1045, align 8
  %1047 = add i64 %1044, %1046
  %1048 = add i64 %1047, 10174464
  %1049 = getelementptr inbounds double addrspace(1)* %RF, i64 %1048
  %1050 = load double addrspace(1)* %1049, align 8
  %1051 = fmul double %1050, %1042
  %1052 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1053 = load i64* %1052, align 8
  %1054 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1055 = load i64* %1054, align 8
  %1056 = add i64 %1053, %1055
  %1057 = add i64 %1056, 10174464
  %1058 = getelementptr inbounds double addrspace(1)* %RF, i64 %1057
  store double %1051, double addrspace(1)* %1058, align 8
  %1059 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1060 = load i64* %1059, align 8
  %1061 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1062 = load i64* %1061, align 8
  %1063 = add i64 %1060, %1062
  %1064 = add i64 %1063, 10174464
  %1065 = getelementptr inbounds double addrspace(1)* %RB, i64 %1064
  %1066 = load double addrspace(1)* %1065, align 8
  %1067 = fmul double %1066, %1042
  %1068 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1069 = load i64* %1068, align 8
  %1070 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1071 = load i64* %1070, align 8
  %1072 = add i64 %1069, %1071
  %1073 = add i64 %1072, 10174464
  %1074 = getelementptr inbounds double addrspace(1)* %RB, i64 %1073
  store double %1067, double addrspace(1)* %1074, align 8
  %1075 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1076 = load i64* %1075, align 8
  %1077 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1078 = load i64* %1077, align 8
  %1079 = add i64 %1076, %1078
  %1080 = add i64 %1079, 1105920
  %1081 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %1080
  %1082 = load double addrspace(1)* %1081, align 8
  %1083 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1084 = load i64* %1083, align 8
  %1085 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1086 = load i64* %1085, align 8
  %1087 = add i64 %1084, %1086
  %1088 = add i64 %1087, 12496896
  %1089 = getelementptr inbounds double addrspace(1)* %RF, i64 %1088
  %1090 = load double addrspace(1)* %1089, align 8
  %1091 = fdiv double 1.000000e+00, %1090
  %1092 = fmul double %169, %1091
  %1093 = fmul double %1082, %1092
  %1094 = fadd double %1093, 1.000000e+00
  %1095 = fdiv double 1.000000e+00, %1094
  %1096 = fmul double %1093, %1095
  %1097 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1098 = load i64* %1097, align 8
  %1099 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1100 = load i64* %1099, align 8
  %1101 = add i64 %1098, %1100
  %1102 = add i64 %1101, 12496896
  %1103 = getelementptr inbounds double addrspace(1)* %RF, i64 %1102
  %1104 = load double addrspace(1)* %1103, align 8
  %1105 = fmul double %1104, %1096
  %1106 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1107 = load i64* %1106, align 8
  %1108 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1109 = load i64* %1108, align 8
  %1110 = add i64 %1107, %1109
  %1111 = add i64 %1110, 12496896
  %1112 = getelementptr inbounds double addrspace(1)* %RF, i64 %1111
  store double %1105, double addrspace(1)* %1112, align 8
  %1113 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1114 = load i64* %1113, align 8
  %1115 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1116 = load i64* %1115, align 8
  %1117 = add i64 %1114, %1116
  %1118 = add i64 %1117, 12496896
  %1119 = getelementptr inbounds double addrspace(1)* %RB, i64 %1118
  %1120 = load double addrspace(1)* %1119, align 8
  %1121 = fmul double %1120, %1096
  %1122 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1123 = load i64* %1122, align 8
  %1124 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1125 = load i64* %1124, align 8
  %1126 = add i64 %1123, %1125
  %1127 = add i64 %1126, 12496896
  %1128 = getelementptr inbounds double addrspace(1)* %RB, i64 %1127
  store double %1121, double addrspace(1)* %1128, align 8
  %1129 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1130 = load i64* %1129, align 8
  %1131 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1132 = load i64* %1131, align 8
  %1133 = add i64 %1130, %1132
  %1134 = add i64 %1133, 1216512
  %1135 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %1134
  %1136 = load double addrspace(1)* %1135, align 8
  %1137 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1138 = load i64* %1137, align 8
  %1139 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1140 = load i64* %1139, align 8
  %1141 = add i64 %1138, %1140
  %1142 = add i64 %1141, 12607488
  %1143 = getelementptr inbounds double addrspace(1)* %RF, i64 %1142
  %1144 = load double addrspace(1)* %1143, align 8
  %1145 = fdiv double 1.000000e+00, %1144
  %1146 = fmul double %93, %1145
  %1147 = fmul double %1136, %1146
  %1148 = fadd double %1147, 1.000000e+00
  %1149 = fdiv double 1.000000e+00, %1148
  %1150 = fmul double %1147, %1149
  %1151 = tail call double @_Z4fmaxdd(double %1147, double 1.000000e-200) nounwind
  %1152 = tail call double @_Z5log10d(double %1151) nounwind
  %1153 = fmul double %7, 0xBF285898CF48B83B
  %1154 = tail call double @_Z3expd(double %1153) nounwind
  %1155 = fmul double %1154, -9.816000e-01
  %1156 = fmul double %7, 0xBFCDD08901068F29
  %1157 = tail call double @_Z3expd(double %1156) nounwind
  %1158 = fmul double %1157, 1.981600e+00
  %1159 = fadd double %1155, %1158
  %1160 = fmul double %276, 7.950000e-02
  %1161 = tail call double @_Z3expd(double %1160) nounwind
  %1162 = fadd double %1159, %1161
  %1163 = tail call double @_Z4fmaxdd(double %1162, double 1.000000e-200) nounwind
  %1164 = tail call double @_Z5log10d(double %1163) nounwind
  %1165 = fmul double %1164, 1.270000e+00
  %1166 = fsub double 7.500000e-01, %1165
  %1167 = fmul double %1164, 6.700000e-01
  %1168 = fadd double %1167, 4.000000e-01
  %1169 = fsub double %1152, %1168
  %1170 = fmul double %1169, 1.400000e-01
  %1171 = fsub double %1166, %1170
  %1172 = fdiv double 1.000000e+00, %1171
  %1173 = fmul double %1169, %1172
  %1174 = fmul double %1173, %1173
  %1175 = fadd double %1174, 1.000000e+00
  %1176 = fdiv double 1.000000e+00, %1175
  %1177 = fmul double %1164, %1176
  %1178 = tail call double @_Z5exp10d(double %1177) nounwind
  %1179 = fmul double %1178, %1150
  %1180 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1181 = load i64* %1180, align 8
  %1182 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1183 = load i64* %1182, align 8
  %1184 = add i64 %1181, %1183
  %1185 = add i64 %1184, 12607488
  %1186 = getelementptr inbounds double addrspace(1)* %RF, i64 %1185
  %1187 = load double addrspace(1)* %1186, align 8
  %1188 = fmul double %1187, %1179
  %1189 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1190 = load i64* %1189, align 8
  %1191 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1192 = load i64* %1191, align 8
  %1193 = add i64 %1190, %1192
  %1194 = add i64 %1193, 12607488
  %1195 = getelementptr inbounds double addrspace(1)* %RF, i64 %1194
  store double %1188, double addrspace(1)* %1195, align 8
  %1196 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1197 = load i64* %1196, align 8
  %1198 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1199 = load i64* %1198, align 8
  %1200 = add i64 %1197, %1199
  %1201 = add i64 %1200, 12607488
  %1202 = getelementptr inbounds double addrspace(1)* %RB, i64 %1201
  %1203 = load double addrspace(1)* %1202, align 8
  %1204 = fmul double %1203, %1179
  %1205 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1206 = load i64* %1205, align 8
  %1207 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1208 = load i64* %1207, align 8
  %1209 = add i64 %1206, %1208
  %1210 = add i64 %1209, 12607488
  %1211 = getelementptr inbounds double addrspace(1)* %RB, i64 %1210
  store double %1204, double addrspace(1)* %1211, align 8
  %check.WI.iter = icmp ult i64 %CurrWI..0, %iterCount
  br i1 %check.WI.iter, label %thenBB, label %SyncBB5

thenBB:                                           ; preds = %._crit_edge
  %"CurrWI++" = add nuw i64 %CurrWI..0, 1
  br label %SyncBB

SyncBB5:                                          ; preds = %._crit_edge
  ret void
}

define void @____Vectorized_.ratx_kernel_separated_args(double addrspace(1)* nocapture %T, double addrspace(1)* %C, double addrspace(1)* %RF, double addrspace(1)* %RB, double addrspace(1)* nocapture %RKLOW, double %TCONV, i8 addrspace(3)* %pLocalMem, %struct.WorkDim* %pWorkDim, i64* %pWGId, %struct.PaddedDimId* %pBaseGlbId, %struct.PaddedDimId* %pLocalIds, i64* %contextpointer, i64 %iterCount, i8* %pSpecialBuf, i64* %pCurrWI) nounwind alwaysinline {
bb.nph:
  %temp = insertelement <16 x double> undef, double %TCONV, i32 0
  %vector = shufflevector <16 x double> %temp, <16 x double> undef, <16 x i32> zeroinitializer
  br label %SyncBB

SyncBB:                                           ; preds = %thenBB, %bb.nph
  %CurrWI..0 = phi i64 [ 0, %bb.nph ], [ %"CurrWI++", %thenBB ]
  %0 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1 = load i64* %0, align 8
  %2 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %3 = load i64* %2, align 8
  %4 = add i64 %1, %3
  %5 = getelementptr inbounds double addrspace(1)* %T, i64 %4
  %ptrTypeCast = bitcast double addrspace(1)* %5 to <16 x double> addrspace(1)*
  %6 = load <16 x double> addrspace(1)* %ptrTypeCast, align 8
  %7 = fmul <16 x double> %6, %vector
  %extract16 = extractelement <16 x double> %7, i32 0
  %extract17 = extractelement <16 x double> %7, i32 1
  %extract18 = extractelement <16 x double> %7, i32 2
  %extract19 = extractelement <16 x double> %7, i32 3
  %extract20 = extractelement <16 x double> %7, i32 4
  %extract21 = extractelement <16 x double> %7, i32 5
  %extract22 = extractelement <16 x double> %7, i32 6
  %extract23 = extractelement <16 x double> %7, i32 7
  %extract24 = extractelement <16 x double> %7, i32 8
  %extract25 = extractelement <16 x double> %7, i32 9
  %extract26 = extractelement <16 x double> %7, i32 10
  %extract27 = extractelement <16 x double> %7, i32 11
  %extract28 = extractelement <16 x double> %7, i32 12
  %extract29 = extractelement <16 x double> %7, i32 13
  %extract30 = extractelement <16 x double> %7, i32 14
  %extract31 = extractelement <16 x double> %7, i32 15
  %8 = tail call double @_Z3logd(double %extract16) nounwind
  %9 = tail call double @_Z3logd(double %extract17) nounwind
  %10 = tail call double @_Z3logd(double %extract18) nounwind
  %11 = tail call double @_Z3logd(double %extract19) nounwind
  %12 = tail call double @_Z3logd(double %extract20) nounwind
  %13 = tail call double @_Z3logd(double %extract21) nounwind
  %14 = tail call double @_Z3logd(double %extract22) nounwind
  %15 = tail call double @_Z3logd(double %extract23) nounwind
  %16 = tail call double @_Z3logd(double %extract24) nounwind
  %17 = tail call double @_Z3logd(double %extract25) nounwind
  %18 = tail call double @_Z3logd(double %extract26) nounwind
  %19 = tail call double @_Z3logd(double %extract27) nounwind
  %20 = tail call double @_Z3logd(double %extract28) nounwind
  %21 = tail call double @_Z3logd(double %extract29) nounwind
  %22 = tail call double @_Z3logd(double %extract30) nounwind
  %23 = tail call double @_Z3logd(double %extract31) nounwind
  br label %24

; <label>:24                                      ; preds = %24, %SyncBB
  %indvar = phi i64 [ 0, %SyncBB ], [ %indvar.next, %24 ]
  %vectorPHI = phi <16 x double> [ zeroinitializer, %SyncBB ], [ %32, %24 ]
  %tmp3 = mul i64 %indvar, 110592
  %25 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %26 = load i64* %25, align 8
  %27 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %28 = load i64* %27, align 8
  %29 = add i64 %26, %28
  %extract37 = add i64 %29, %tmp3
  %30 = getelementptr inbounds double addrspace(1)* %C, i64 %extract37
  %ptrTypeCast53 = bitcast double addrspace(1)* %30 to <16 x double> addrspace(1)*
  %31 = load <16 x double> addrspace(1)* %ptrTypeCast53, align 8
  %32 = fadd <16 x double> %vectorPHI, %31
  %indvar.next = add i64 %indvar, 1
  %exitcond = icmp eq i64 %indvar.next, 22
  br i1 %exitcond, label %._crit_edge, label %24

._crit_edge:                                      ; preds = %24
  %33 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %34 = load i64* %33, align 8
  %35 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %36 = load i64* %35, align 8
  %37 = add i64 %34, %36
  %38 = getelementptr inbounds double addrspace(1)* %C, i64 %37
  %ptrTypeCast72 = bitcast double addrspace(1)* %38 to <16 x double> addrspace(1)*
  %39 = load <16 x double> addrspace(1)* %ptrTypeCast72, align 8
  %40 = fadd <16 x double> %32, %39
  %41 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %42 = load i64* %41, align 8
  %43 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %44 = load i64* %43, align 8
  %45 = add i64 %42, %44
  %extract75 = add i64 %45, 552960
  %46 = getelementptr inbounds double addrspace(1)* %C, i64 %extract75
  %ptrTypeCast91 = bitcast double addrspace(1)* %46 to <16 x double> addrspace(1)*
  %47 = load <16 x double> addrspace(1)* %ptrTypeCast91, align 8
  %48 = fmul <16 x double> %47, <double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00>
  %49 = fadd <16 x double> %40, %48
  %50 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %51 = load i64* %50, align 8
  %52 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %53 = load i64* %52, align 8
  %54 = add i64 %51, %53
  %extract94 = add i64 %54, 995328
  %55 = getelementptr inbounds double addrspace(1)* %C, i64 %extract94
  %ptrTypeCast110 = bitcast double addrspace(1)* %55 to <16 x double> addrspace(1)*
  %56 = load <16 x double> addrspace(1)* %ptrTypeCast110, align 8
  %57 = fadd <16 x double> %49, %56
  %58 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %59 = load i64* %58, align 8
  %60 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %61 = load i64* %60, align 8
  %62 = add i64 %59, %61
  %extract113 = add i64 %62, 1105920
  %63 = getelementptr inbounds double addrspace(1)* %C, i64 %extract113
  %ptrTypeCast129 = bitcast double addrspace(1)* %63 to <16 x double> addrspace(1)*
  %64 = load <16 x double> addrspace(1)* %ptrTypeCast129, align 8
  %65 = fmul <16 x double> %64, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %66 = fadd <16 x double> %57, %65
  %67 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %68 = load i64* %67, align 8
  %69 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %70 = load i64* %69, align 8
  %71 = add i64 %68, %70
  %extract132 = add i64 %71, 1216512
  %72 = getelementptr inbounds double addrspace(1)* %C, i64 %extract132
  %ptrTypeCast148 = bitcast double addrspace(1)* %72 to <16 x double> addrspace(1)*
  %73 = load <16 x double> addrspace(1)* %ptrTypeCast148, align 8
  %74 = fadd <16 x double> %66, %73
  %75 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %76 = load i64* %75, align 8
  %77 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %78 = load i64* %77, align 8
  %79 = add i64 %76, %78
  %extract151 = add i64 %79, 1658880
  %80 = getelementptr inbounds double addrspace(1)* %C, i64 %extract151
  %ptrTypeCast167 = bitcast double addrspace(1)* %80 to <16 x double> addrspace(1)*
  %81 = load <16 x double> addrspace(1)* %ptrTypeCast167, align 8
  %82 = fmul <16 x double> %81, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %83 = fadd <16 x double> %74, %82
  %84 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %85 = load i64* %84, align 8
  %86 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %87 = load i64* %86, align 8
  %88 = add i64 %85, %87
  %extract170 = add i64 %88, 1437696
  %89 = getelementptr inbounds double addrspace(1)* %C, i64 %extract170
  %ptrTypeCast186 = bitcast double addrspace(1)* %89 to <16 x double> addrspace(1)*
  %90 = load <16 x double> addrspace(1)* %ptrTypeCast186, align 8
  %91 = fmul <16 x double> %90, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %92 = fadd <16 x double> %83, %91
  %93 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %94 = load i64* %93, align 8
  %95 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %96 = load i64* %95, align 8
  %97 = add i64 %94, %96
  %extract189 = add i64 %97, 1548288
  %98 = getelementptr inbounds double addrspace(1)* %C, i64 %extract189
  %ptrTypeCast205 = bitcast double addrspace(1)* %98 to <16 x double> addrspace(1)*
  %99 = load <16 x double> addrspace(1)* %ptrTypeCast205, align 8
  %100 = fmul <16 x double> %99, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %101 = fadd <16 x double> %92, %100
  %102 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %103 = load i64* %102, align 8
  %104 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %105 = load i64* %104, align 8
  %106 = add i64 %103, %105
  %107 = getelementptr inbounds double addrspace(1)* %C, i64 %106
  %ptrTypeCast224 = bitcast double addrspace(1)* %107 to <16 x double> addrspace(1)*
  %108 = load <16 x double> addrspace(1)* %ptrTypeCast224, align 8
  %109 = fadd <16 x double> %32, %108
  %110 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %111 = load i64* %110, align 8
  %112 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %113 = load i64* %112, align 8
  %114 = add i64 %111, %113
  %extract227 = add i64 %114, 552960
  %115 = getelementptr inbounds double addrspace(1)* %C, i64 %extract227
  %ptrTypeCast243 = bitcast double addrspace(1)* %115 to <16 x double> addrspace(1)*
  %116 = load <16 x double> addrspace(1)* %ptrTypeCast243, align 8
  %117 = fmul <16 x double> %116, <double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00>
  %118 = fadd <16 x double> %109, %117
  %119 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %120 = load i64* %119, align 8
  %121 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %122 = load i64* %121, align 8
  %123 = add i64 %120, %122
  %extract246 = add i64 %123, 995328
  %124 = getelementptr inbounds double addrspace(1)* %C, i64 %extract246
  %ptrTypeCast262 = bitcast double addrspace(1)* %124 to <16 x double> addrspace(1)*
  %125 = load <16 x double> addrspace(1)* %ptrTypeCast262, align 8
  %126 = fadd <16 x double> %118, %125
  %127 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %128 = load i64* %127, align 8
  %129 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %130 = load i64* %129, align 8
  %131 = add i64 %128, %130
  %extract265 = add i64 %131, 1105920
  %132 = getelementptr inbounds double addrspace(1)* %C, i64 %extract265
  %ptrTypeCast281 = bitcast double addrspace(1)* %132 to <16 x double> addrspace(1)*
  %133 = load <16 x double> addrspace(1)* %ptrTypeCast281, align 8
  %134 = fmul <16 x double> %133, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %135 = fadd <16 x double> %126, %134
  %136 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %137 = load i64* %136, align 8
  %138 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %139 = load i64* %138, align 8
  %140 = add i64 %137, %139
  %extract284 = add i64 %140, 1216512
  %141 = getelementptr inbounds double addrspace(1)* %C, i64 %extract284
  %ptrTypeCast300 = bitcast double addrspace(1)* %141 to <16 x double> addrspace(1)*
  %142 = load <16 x double> addrspace(1)* %ptrTypeCast300, align 8
  %143 = fadd <16 x double> %135, %142
  %144 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %145 = load i64* %144, align 8
  %146 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %147 = load i64* %146, align 8
  %148 = add i64 %145, %147
  %extract303 = add i64 %148, 1658880
  %149 = getelementptr inbounds double addrspace(1)* %C, i64 %extract303
  %ptrTypeCast319 = bitcast double addrspace(1)* %149 to <16 x double> addrspace(1)*
  %150 = load <16 x double> addrspace(1)* %ptrTypeCast319, align 8
  %151 = fmul <16 x double> %150, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %152 = fadd <16 x double> %143, %151
  %153 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %154 = load i64* %153, align 8
  %155 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %156 = load i64* %155, align 8
  %157 = add i64 %154, %156
  %extract322 = add i64 %157, 1437696
  %158 = getelementptr inbounds double addrspace(1)* %C, i64 %extract322
  %ptrTypeCast338 = bitcast double addrspace(1)* %158 to <16 x double> addrspace(1)*
  %159 = load <16 x double> addrspace(1)* %ptrTypeCast338, align 8
  %160 = fmul <16 x double> %159, <double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00>
  %161 = fadd <16 x double> %152, %160
  %162 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %163 = load i64* %162, align 8
  %164 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %165 = load i64* %164, align 8
  %166 = add i64 %163, %165
  %extract341 = add i64 %166, 1548288
  %167 = getelementptr inbounds double addrspace(1)* %C, i64 %extract341
  %ptrTypeCast357 = bitcast double addrspace(1)* %167 to <16 x double> addrspace(1)*
  %168 = load <16 x double> addrspace(1)* %ptrTypeCast357, align 8
  %169 = fmul <16 x double> %168, <double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00>
  %170 = fadd <16 x double> %161, %169
  %171 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %172 = load i64* %171, align 8
  %173 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %174 = load i64* %173, align 8
  %175 = add i64 %172, %174
  %176 = getelementptr inbounds double addrspace(1)* %C, i64 %175
  %ptrTypeCast376 = bitcast double addrspace(1)* %176 to <16 x double> addrspace(1)*
  %177 = load <16 x double> addrspace(1)* %ptrTypeCast376, align 8
  %178 = fadd <16 x double> %32, %177
  %179 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %180 = load i64* %179, align 8
  %181 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %182 = load i64* %181, align 8
  %183 = add i64 %180, %182
  %extract379 = add i64 %183, 552960
  %184 = getelementptr inbounds double addrspace(1)* %C, i64 %extract379
  %ptrTypeCast395 = bitcast double addrspace(1)* %184 to <16 x double> addrspace(1)*
  %185 = load <16 x double> addrspace(1)* %ptrTypeCast395, align 8
  %186 = fmul <16 x double> %185, <double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00>
  %187 = fadd <16 x double> %178, %186
  %188 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %189 = load i64* %188, align 8
  %190 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %191 = load i64* %190, align 8
  %192 = add i64 %189, %191
  %extract398 = add i64 %192, 995328
  %193 = getelementptr inbounds double addrspace(1)* %C, i64 %extract398
  %ptrTypeCast414 = bitcast double addrspace(1)* %193 to <16 x double> addrspace(1)*
  %194 = load <16 x double> addrspace(1)* %ptrTypeCast414, align 8
  %195 = fadd <16 x double> %187, %194
  %196 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %197 = load i64* %196, align 8
  %198 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %199 = load i64* %198, align 8
  %200 = add i64 %197, %199
  %extract417 = add i64 %200, 1105920
  %201 = getelementptr inbounds double addrspace(1)* %C, i64 %extract417
  %ptrTypeCast433 = bitcast double addrspace(1)* %201 to <16 x double> addrspace(1)*
  %202 = load <16 x double> addrspace(1)* %ptrTypeCast433, align 8
  %203 = fmul <16 x double> %202, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %204 = fadd <16 x double> %195, %203
  %205 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %206 = load i64* %205, align 8
  %207 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %208 = load i64* %207, align 8
  %209 = add i64 %206, %208
  %extract436 = add i64 %209, 1216512
  %210 = getelementptr inbounds double addrspace(1)* %C, i64 %extract436
  %ptrTypeCast452 = bitcast double addrspace(1)* %210 to <16 x double> addrspace(1)*
  %211 = load <16 x double> addrspace(1)* %ptrTypeCast452, align 8
  %212 = fadd <16 x double> %204, %211
  %213 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %214 = load i64* %213, align 8
  %215 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %216 = load i64* %215, align 8
  %217 = add i64 %214, %216
  %extract455 = add i64 %217, 1658880
  %218 = getelementptr inbounds double addrspace(1)* %C, i64 %extract455
  %ptrTypeCast471 = bitcast double addrspace(1)* %218 to <16 x double> addrspace(1)*
  %219 = load <16 x double> addrspace(1)* %ptrTypeCast471, align 8
  %220 = fmul <16 x double> %219, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %221 = fadd <16 x double> %212, %220
  %222 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %223 = load i64* %222, align 8
  %224 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %225 = load i64* %224, align 8
  %226 = add i64 %223, %225
  %extract474 = add i64 %226, 1437696
  %227 = getelementptr inbounds double addrspace(1)* %C, i64 %extract474
  %ptrTypeCast490 = bitcast double addrspace(1)* %227 to <16 x double> addrspace(1)*
  %228 = load <16 x double> addrspace(1)* %ptrTypeCast490, align 8
  %229 = fmul <16 x double> %228, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %230 = fadd <16 x double> %221, %229
  %231 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %232 = load i64* %231, align 8
  %233 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %234 = load i64* %233, align 8
  %235 = add i64 %232, %234
  %extract493 = add i64 %235, 1548288
  %236 = getelementptr inbounds double addrspace(1)* %C, i64 %extract493
  %ptrTypeCast509 = bitcast double addrspace(1)* %236 to <16 x double> addrspace(1)*
  %237 = load <16 x double> addrspace(1)* %ptrTypeCast509, align 8
  %238 = fmul <16 x double> %237, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %239 = fadd <16 x double> %230, %238
  %240 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %241 = load i64* %240, align 8
  %242 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %243 = load i64* %242, align 8
  %244 = add i64 %241, %243
  %245 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %244
  %ptrTypeCast528 = bitcast double addrspace(1)* %245 to <16 x double> addrspace(1)*
  %246 = load <16 x double> addrspace(1)* %ptrTypeCast528, align 8
  %247 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %248 = load i64* %247, align 8
  %249 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %250 = load i64* %249, align 8
  %251 = add i64 %248, %250
  %extract531 = add i64 %251, 1658880
  %252 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract531
  %ptrTypeCast547 = bitcast double addrspace(1)* %252 to <16 x double> addrspace(1)*
  %253 = load <16 x double> addrspace(1)* %ptrTypeCast547, align 8
  %254 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %253
  %255 = fmul <16 x double> %239, %254
  %256 = fmul <16 x double> %246, %255
  %extract548 = extractelement <16 x double> %256, i32 0
  %extract549 = extractelement <16 x double> %256, i32 1
  %extract550 = extractelement <16 x double> %256, i32 2
  %extract551 = extractelement <16 x double> %256, i32 3
  %extract552 = extractelement <16 x double> %256, i32 4
  %extract553 = extractelement <16 x double> %256, i32 5
  %extract554 = extractelement <16 x double> %256, i32 6
  %extract555 = extractelement <16 x double> %256, i32 7
  %extract556 = extractelement <16 x double> %256, i32 8
  %extract557 = extractelement <16 x double> %256, i32 9
  %extract558 = extractelement <16 x double> %256, i32 10
  %extract559 = extractelement <16 x double> %256, i32 11
  %extract560 = extractelement <16 x double> %256, i32 12
  %extract561 = extractelement <16 x double> %256, i32 13
  %extract562 = extractelement <16 x double> %256, i32 14
  %extract563 = extractelement <16 x double> %256, i32 15
  %257 = fadd <16 x double> %256, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %258 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %257
  %259 = fmul <16 x double> %256, %258
  %260 = tail call double @_Z4fmaxdd(double %extract548, double 1.000000e-200) nounwind
  %261 = tail call double @_Z4fmaxdd(double %extract549, double 1.000000e-200) nounwind
  %262 = tail call double @_Z4fmaxdd(double %extract550, double 1.000000e-200) nounwind
  %263 = tail call double @_Z4fmaxdd(double %extract551, double 1.000000e-200) nounwind
  %264 = tail call double @_Z4fmaxdd(double %extract552, double 1.000000e-200) nounwind
  %265 = tail call double @_Z4fmaxdd(double %extract553, double 1.000000e-200) nounwind
  %266 = tail call double @_Z4fmaxdd(double %extract554, double 1.000000e-200) nounwind
  %267 = tail call double @_Z4fmaxdd(double %extract555, double 1.000000e-200) nounwind
  %268 = tail call double @_Z4fmaxdd(double %extract556, double 1.000000e-200) nounwind
  %269 = tail call double @_Z4fmaxdd(double %extract557, double 1.000000e-200) nounwind
  %270 = tail call double @_Z4fmaxdd(double %extract558, double 1.000000e-200) nounwind
  %271 = tail call double @_Z4fmaxdd(double %extract559, double 1.000000e-200) nounwind
  %272 = tail call double @_Z4fmaxdd(double %extract560, double 1.000000e-200) nounwind
  %273 = tail call double @_Z4fmaxdd(double %extract561, double 1.000000e-200) nounwind
  %274 = tail call double @_Z4fmaxdd(double %extract562, double 1.000000e-200) nounwind
  %275 = tail call double @_Z4fmaxdd(double %extract563, double 1.000000e-200) nounwind
  %276 = tail call double @_Z5log10d(double %260) nounwind
  %277 = tail call double @_Z5log10d(double %261) nounwind
  %278 = tail call double @_Z5log10d(double %262) nounwind
  %279 = tail call double @_Z5log10d(double %263) nounwind
  %280 = tail call double @_Z5log10d(double %264) nounwind
  %281 = tail call double @_Z5log10d(double %265) nounwind
  %282 = tail call double @_Z5log10d(double %266) nounwind
  %283 = tail call double @_Z5log10d(double %267) nounwind
  %284 = tail call double @_Z5log10d(double %268) nounwind
  %285 = tail call double @_Z5log10d(double %269) nounwind
  %286 = tail call double @_Z5log10d(double %270) nounwind
  %287 = tail call double @_Z5log10d(double %271) nounwind
  %288 = tail call double @_Z5log10d(double %272) nounwind
  %289 = tail call double @_Z5log10d(double %273) nounwind
  %290 = tail call double @_Z5log10d(double %274) nounwind
  %291 = tail call double @_Z5log10d(double %275) nounwind
  %temp.vect691 = insertelement <16 x double> undef, double %276, i32 0
  %temp.vect692 = insertelement <16 x double> %temp.vect691, double %277, i32 1
  %temp.vect693 = insertelement <16 x double> %temp.vect692, double %278, i32 2
  %temp.vect694 = insertelement <16 x double> %temp.vect693, double %279, i32 3
  %temp.vect695 = insertelement <16 x double> %temp.vect694, double %280, i32 4
  %temp.vect696 = insertelement <16 x double> %temp.vect695, double %281, i32 5
  %temp.vect697 = insertelement <16 x double> %temp.vect696, double %282, i32 6
  %temp.vect698 = insertelement <16 x double> %temp.vect697, double %283, i32 7
  %temp.vect699 = insertelement <16 x double> %temp.vect698, double %284, i32 8
  %temp.vect700 = insertelement <16 x double> %temp.vect699, double %285, i32 9
  %temp.vect701 = insertelement <16 x double> %temp.vect700, double %286, i32 10
  %temp.vect702 = insertelement <16 x double> %temp.vect701, double %287, i32 11
  %temp.vect703 = insertelement <16 x double> %temp.vect702, double %288, i32 12
  %temp.vect704 = insertelement <16 x double> %temp.vect703, double %289, i32 13
  %temp.vect705 = insertelement <16 x double> %temp.vect704, double %290, i32 14
  %temp.vect706 = insertelement <16 x double> %temp.vect705, double %291, i32 15
  %292 = fmul <16 x double> %7, <double 0xBF85C9882B931057, double 0xBF85C9882B931057, double 0xBF85C9882B931057, double 0xBF85C9882B931057, double 0xBF85C9882B931057, double 0xBF85C9882B931057, double 0xBF85C9882B931057, double 0xBF85C9882B931057, double 0xBF85C9882B931057, double 0xBF85C9882B931057, double 0xBF85C9882B931057, double 0xBF85C9882B931057, double 0xBF85C9882B931057, double 0xBF85C9882B931057, double 0xBF85C9882B931057, double 0xBF85C9882B931057>
  %extract564 = extractelement <16 x double> %292, i32 0
  %extract565 = extractelement <16 x double> %292, i32 1
  %extract566 = extractelement <16 x double> %292, i32 2
  %extract567 = extractelement <16 x double> %292, i32 3
  %extract568 = extractelement <16 x double> %292, i32 4
  %extract569 = extractelement <16 x double> %292, i32 5
  %extract570 = extractelement <16 x double> %292, i32 6
  %extract571 = extractelement <16 x double> %292, i32 7
  %extract572 = extractelement <16 x double> %292, i32 8
  %extract573 = extractelement <16 x double> %292, i32 9
  %extract574 = extractelement <16 x double> %292, i32 10
  %extract575 = extractelement <16 x double> %292, i32 11
  %extract576 = extractelement <16 x double> %292, i32 12
  %extract577 = extractelement <16 x double> %292, i32 13
  %extract578 = extractelement <16 x double> %292, i32 14
  %extract579 = extractelement <16 x double> %292, i32 15
  %293 = tail call double @_Z3expd(double %extract564) nounwind
  %294 = tail call double @_Z3expd(double %extract565) nounwind
  %295 = tail call double @_Z3expd(double %extract566) nounwind
  %296 = tail call double @_Z3expd(double %extract567) nounwind
  %297 = tail call double @_Z3expd(double %extract568) nounwind
  %298 = tail call double @_Z3expd(double %extract569) nounwind
  %299 = tail call double @_Z3expd(double %extract570) nounwind
  %300 = tail call double @_Z3expd(double %extract571) nounwind
  %301 = tail call double @_Z3expd(double %extract572) nounwind
  %302 = tail call double @_Z3expd(double %extract573) nounwind
  %303 = tail call double @_Z3expd(double %extract574) nounwind
  %304 = tail call double @_Z3expd(double %extract575) nounwind
  %305 = tail call double @_Z3expd(double %extract576) nounwind
  %306 = tail call double @_Z3expd(double %extract577) nounwind
  %307 = tail call double @_Z3expd(double %extract578) nounwind
  %308 = tail call double @_Z3expd(double %extract579) nounwind
  %temp.vect = insertelement <16 x double> undef, double %293, i32 0
  %temp.vect580 = insertelement <16 x double> %temp.vect, double %294, i32 1
  %temp.vect581 = insertelement <16 x double> %temp.vect580, double %295, i32 2
  %temp.vect582 = insertelement <16 x double> %temp.vect581, double %296, i32 3
  %temp.vect583 = insertelement <16 x double> %temp.vect582, double %297, i32 4
  %temp.vect584 = insertelement <16 x double> %temp.vect583, double %298, i32 5
  %temp.vect585 = insertelement <16 x double> %temp.vect584, double %299, i32 6
  %temp.vect586 = insertelement <16 x double> %temp.vect585, double %300, i32 7
  %temp.vect587 = insertelement <16 x double> %temp.vect586, double %301, i32 8
  %temp.vect588 = insertelement <16 x double> %temp.vect587, double %302, i32 9
  %temp.vect589 = insertelement <16 x double> %temp.vect588, double %303, i32 10
  %temp.vect590 = insertelement <16 x double> %temp.vect589, double %304, i32 11
  %temp.vect591 = insertelement <16 x double> %temp.vect590, double %305, i32 12
  %temp.vect592 = insertelement <16 x double> %temp.vect591, double %306, i32 13
  %temp.vect593 = insertelement <16 x double> %temp.vect592, double %307, i32 14
  %temp.vect594 = insertelement <16 x double> %temp.vect593, double %308, i32 15
  %309 = fmul <16 x double> %temp.vect594, <double 2.654000e-01, double 2.654000e-01, double 2.654000e-01, double 2.654000e-01, double 2.654000e-01, double 2.654000e-01, double 2.654000e-01, double 2.654000e-01, double 2.654000e-01, double 2.654000e-01, double 2.654000e-01, double 2.654000e-01, double 2.654000e-01, double 2.654000e-01, double 2.654000e-01, double 2.654000e-01>
  %310 = fmul <16 x double> %7, <double 0xBF42A91C92F3C105, double 0xBF42A91C92F3C105, double 0xBF42A91C92F3C105, double 0xBF42A91C92F3C105, double 0xBF42A91C92F3C105, double 0xBF42A91C92F3C105, double 0xBF42A91C92F3C105, double 0xBF42A91C92F3C105, double 0xBF42A91C92F3C105, double 0xBF42A91C92F3C105, double 0xBF42A91C92F3C105, double 0xBF42A91C92F3C105, double 0xBF42A91C92F3C105, double 0xBF42A91C92F3C105, double 0xBF42A91C92F3C105, double 0xBF42A91C92F3C105>
  %extract595 = extractelement <16 x double> %310, i32 0
  %extract596 = extractelement <16 x double> %310, i32 1
  %extract597 = extractelement <16 x double> %310, i32 2
  %extract598 = extractelement <16 x double> %310, i32 3
  %extract599 = extractelement <16 x double> %310, i32 4
  %extract600 = extractelement <16 x double> %310, i32 5
  %extract601 = extractelement <16 x double> %310, i32 6
  %extract602 = extractelement <16 x double> %310, i32 7
  %extract603 = extractelement <16 x double> %310, i32 8
  %extract604 = extractelement <16 x double> %310, i32 9
  %extract605 = extractelement <16 x double> %310, i32 10
  %extract606 = extractelement <16 x double> %310, i32 11
  %extract607 = extractelement <16 x double> %310, i32 12
  %extract608 = extractelement <16 x double> %310, i32 13
  %extract609 = extractelement <16 x double> %310, i32 14
  %extract610 = extractelement <16 x double> %310, i32 15
  %311 = tail call double @_Z3expd(double %extract595) nounwind
  %312 = tail call double @_Z3expd(double %extract596) nounwind
  %313 = tail call double @_Z3expd(double %extract597) nounwind
  %314 = tail call double @_Z3expd(double %extract598) nounwind
  %315 = tail call double @_Z3expd(double %extract599) nounwind
  %316 = tail call double @_Z3expd(double %extract600) nounwind
  %317 = tail call double @_Z3expd(double %extract601) nounwind
  %318 = tail call double @_Z3expd(double %extract602) nounwind
  %319 = tail call double @_Z3expd(double %extract603) nounwind
  %320 = tail call double @_Z3expd(double %extract604) nounwind
  %321 = tail call double @_Z3expd(double %extract605) nounwind
  %322 = tail call double @_Z3expd(double %extract606) nounwind
  %323 = tail call double @_Z3expd(double %extract607) nounwind
  %324 = tail call double @_Z3expd(double %extract608) nounwind
  %325 = tail call double @_Z3expd(double %extract609) nounwind
  %326 = tail call double @_Z3expd(double %extract610) nounwind
  %temp.vect611 = insertelement <16 x double> undef, double %311, i32 0
  %temp.vect612 = insertelement <16 x double> %temp.vect611, double %312, i32 1
  %temp.vect613 = insertelement <16 x double> %temp.vect612, double %313, i32 2
  %temp.vect614 = insertelement <16 x double> %temp.vect613, double %314, i32 3
  %temp.vect615 = insertelement <16 x double> %temp.vect614, double %315, i32 4
  %temp.vect616 = insertelement <16 x double> %temp.vect615, double %316, i32 5
  %temp.vect617 = insertelement <16 x double> %temp.vect616, double %317, i32 6
  %temp.vect618 = insertelement <16 x double> %temp.vect617, double %318, i32 7
  %temp.vect619 = insertelement <16 x double> %temp.vect618, double %319, i32 8
  %temp.vect620 = insertelement <16 x double> %temp.vect619, double %320, i32 9
  %temp.vect621 = insertelement <16 x double> %temp.vect620, double %321, i32 10
  %temp.vect622 = insertelement <16 x double> %temp.vect621, double %322, i32 11
  %temp.vect623 = insertelement <16 x double> %temp.vect622, double %323, i32 12
  %temp.vect624 = insertelement <16 x double> %temp.vect623, double %324, i32 13
  %temp.vect625 = insertelement <16 x double> %temp.vect624, double %325, i32 14
  %temp.vect626 = insertelement <16 x double> %temp.vect625, double %326, i32 15
  %327 = fmul <16 x double> %temp.vect626, <double 7.346000e-01, double 7.346000e-01, double 7.346000e-01, double 7.346000e-01, double 7.346000e-01, double 7.346000e-01, double 7.346000e-01, double 7.346000e-01, double 7.346000e-01, double 7.346000e-01, double 7.346000e-01, double 7.346000e-01, double 7.346000e-01, double 7.346000e-01, double 7.346000e-01, double 7.346000e-01>
  %328 = fadd <16 x double> %309, %327
  %329 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %7
  %330 = fmul <16 x double> %329, <double -5.182000e+03, double -5.182000e+03, double -5.182000e+03, double -5.182000e+03, double -5.182000e+03, double -5.182000e+03, double -5.182000e+03, double -5.182000e+03, double -5.182000e+03, double -5.182000e+03, double -5.182000e+03, double -5.182000e+03, double -5.182000e+03, double -5.182000e+03, double -5.182000e+03, double -5.182000e+03>
  %extract627 = extractelement <16 x double> %330, i32 0
  %extract628 = extractelement <16 x double> %330, i32 1
  %extract629 = extractelement <16 x double> %330, i32 2
  %extract630 = extractelement <16 x double> %330, i32 3
  %extract631 = extractelement <16 x double> %330, i32 4
  %extract632 = extractelement <16 x double> %330, i32 5
  %extract633 = extractelement <16 x double> %330, i32 6
  %extract634 = extractelement <16 x double> %330, i32 7
  %extract635 = extractelement <16 x double> %330, i32 8
  %extract636 = extractelement <16 x double> %330, i32 9
  %extract637 = extractelement <16 x double> %330, i32 10
  %extract638 = extractelement <16 x double> %330, i32 11
  %extract639 = extractelement <16 x double> %330, i32 12
  %extract640 = extractelement <16 x double> %330, i32 13
  %extract641 = extractelement <16 x double> %330, i32 14
  %extract642 = extractelement <16 x double> %330, i32 15
  %331 = tail call double @_Z3expd(double %extract627) nounwind
  %332 = tail call double @_Z3expd(double %extract628) nounwind
  %333 = tail call double @_Z3expd(double %extract629) nounwind
  %334 = tail call double @_Z3expd(double %extract630) nounwind
  %335 = tail call double @_Z3expd(double %extract631) nounwind
  %336 = tail call double @_Z3expd(double %extract632) nounwind
  %337 = tail call double @_Z3expd(double %extract633) nounwind
  %338 = tail call double @_Z3expd(double %extract634) nounwind
  %339 = tail call double @_Z3expd(double %extract635) nounwind
  %340 = tail call double @_Z3expd(double %extract636) nounwind
  %341 = tail call double @_Z3expd(double %extract637) nounwind
  %342 = tail call double @_Z3expd(double %extract638) nounwind
  %343 = tail call double @_Z3expd(double %extract639) nounwind
  %344 = tail call double @_Z3expd(double %extract640) nounwind
  %345 = tail call double @_Z3expd(double %extract641) nounwind
  %346 = tail call double @_Z3expd(double %extract642) nounwind
  %temp.vect643 = insertelement <16 x double> undef, double %331, i32 0
  %temp.vect644 = insertelement <16 x double> %temp.vect643, double %332, i32 1
  %temp.vect645 = insertelement <16 x double> %temp.vect644, double %333, i32 2
  %temp.vect646 = insertelement <16 x double> %temp.vect645, double %334, i32 3
  %temp.vect647 = insertelement <16 x double> %temp.vect646, double %335, i32 4
  %temp.vect648 = insertelement <16 x double> %temp.vect647, double %336, i32 5
  %temp.vect649 = insertelement <16 x double> %temp.vect648, double %337, i32 6
  %temp.vect650 = insertelement <16 x double> %temp.vect649, double %338, i32 7
  %temp.vect651 = insertelement <16 x double> %temp.vect650, double %339, i32 8
  %temp.vect652 = insertelement <16 x double> %temp.vect651, double %340, i32 9
  %temp.vect653 = insertelement <16 x double> %temp.vect652, double %341, i32 10
  %temp.vect654 = insertelement <16 x double> %temp.vect653, double %342, i32 11
  %temp.vect655 = insertelement <16 x double> %temp.vect654, double %343, i32 12
  %temp.vect656 = insertelement <16 x double> %temp.vect655, double %344, i32 13
  %temp.vect657 = insertelement <16 x double> %temp.vect656, double %345, i32 14
  %temp.vect658 = insertelement <16 x double> %temp.vect657, double %346, i32 15
  %347 = fadd <16 x double> %328, %temp.vect658
  %extract659 = extractelement <16 x double> %347, i32 0
  %extract660 = extractelement <16 x double> %347, i32 1
  %extract661 = extractelement <16 x double> %347, i32 2
  %extract662 = extractelement <16 x double> %347, i32 3
  %extract663 = extractelement <16 x double> %347, i32 4
  %extract664 = extractelement <16 x double> %347, i32 5
  %extract665 = extractelement <16 x double> %347, i32 6
  %extract666 = extractelement <16 x double> %347, i32 7
  %extract667 = extractelement <16 x double> %347, i32 8
  %extract668 = extractelement <16 x double> %347, i32 9
  %extract669 = extractelement <16 x double> %347, i32 10
  %extract670 = extractelement <16 x double> %347, i32 11
  %extract671 = extractelement <16 x double> %347, i32 12
  %extract672 = extractelement <16 x double> %347, i32 13
  %extract673 = extractelement <16 x double> %347, i32 14
  %extract674 = extractelement <16 x double> %347, i32 15
  %348 = tail call double @_Z4fmaxdd(double %extract659, double 1.000000e-200) nounwind
  %349 = tail call double @_Z4fmaxdd(double %extract660, double 1.000000e-200) nounwind
  %350 = tail call double @_Z4fmaxdd(double %extract661, double 1.000000e-200) nounwind
  %351 = tail call double @_Z4fmaxdd(double %extract662, double 1.000000e-200) nounwind
  %352 = tail call double @_Z4fmaxdd(double %extract663, double 1.000000e-200) nounwind
  %353 = tail call double @_Z4fmaxdd(double %extract664, double 1.000000e-200) nounwind
  %354 = tail call double @_Z4fmaxdd(double %extract665, double 1.000000e-200) nounwind
  %355 = tail call double @_Z4fmaxdd(double %extract666, double 1.000000e-200) nounwind
  %356 = tail call double @_Z4fmaxdd(double %extract667, double 1.000000e-200) nounwind
  %357 = tail call double @_Z4fmaxdd(double %extract668, double 1.000000e-200) nounwind
  %358 = tail call double @_Z4fmaxdd(double %extract669, double 1.000000e-200) nounwind
  %359 = tail call double @_Z4fmaxdd(double %extract670, double 1.000000e-200) nounwind
  %360 = tail call double @_Z4fmaxdd(double %extract671, double 1.000000e-200) nounwind
  %361 = tail call double @_Z4fmaxdd(double %extract672, double 1.000000e-200) nounwind
  %362 = tail call double @_Z4fmaxdd(double %extract673, double 1.000000e-200) nounwind
  %363 = tail call double @_Z4fmaxdd(double %extract674, double 1.000000e-200) nounwind
  %364 = tail call double @_Z5log10d(double %348) nounwind
  %365 = tail call double @_Z5log10d(double %349) nounwind
  %366 = tail call double @_Z5log10d(double %350) nounwind
  %367 = tail call double @_Z5log10d(double %351) nounwind
  %368 = tail call double @_Z5log10d(double %352) nounwind
  %369 = tail call double @_Z5log10d(double %353) nounwind
  %370 = tail call double @_Z5log10d(double %354) nounwind
  %371 = tail call double @_Z5log10d(double %355) nounwind
  %372 = tail call double @_Z5log10d(double %356) nounwind
  %373 = tail call double @_Z5log10d(double %357) nounwind
  %374 = tail call double @_Z5log10d(double %358) nounwind
  %375 = tail call double @_Z5log10d(double %359) nounwind
  %376 = tail call double @_Z5log10d(double %360) nounwind
  %377 = tail call double @_Z5log10d(double %361) nounwind
  %378 = tail call double @_Z5log10d(double %362) nounwind
  %379 = tail call double @_Z5log10d(double %363) nounwind
  %temp.vect675 = insertelement <16 x double> undef, double %364, i32 0
  %temp.vect676 = insertelement <16 x double> %temp.vect675, double %365, i32 1
  %temp.vect677 = insertelement <16 x double> %temp.vect676, double %366, i32 2
  %temp.vect678 = insertelement <16 x double> %temp.vect677, double %367, i32 3
  %temp.vect679 = insertelement <16 x double> %temp.vect678, double %368, i32 4
  %temp.vect680 = insertelement <16 x double> %temp.vect679, double %369, i32 5
  %temp.vect681 = insertelement <16 x double> %temp.vect680, double %370, i32 6
  %temp.vect682 = insertelement <16 x double> %temp.vect681, double %371, i32 7
  %temp.vect683 = insertelement <16 x double> %temp.vect682, double %372, i32 8
  %temp.vect684 = insertelement <16 x double> %temp.vect683, double %373, i32 9
  %temp.vect685 = insertelement <16 x double> %temp.vect684, double %374, i32 10
  %temp.vect686 = insertelement <16 x double> %temp.vect685, double %375, i32 11
  %temp.vect687 = insertelement <16 x double> %temp.vect686, double %376, i32 12
  %temp.vect688 = insertelement <16 x double> %temp.vect687, double %377, i32 13
  %temp.vect689 = insertelement <16 x double> %temp.vect688, double %378, i32 14
  %temp.vect690 = insertelement <16 x double> %temp.vect689, double %379, i32 15
  %380 = fmul <16 x double> %temp.vect690, <double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00>
  %381 = fsub <16 x double> <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>, %380
  %382 = fmul <16 x double> %temp.vect690, <double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01>
  %383 = fadd <16 x double> %382, <double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01>
  %384 = fsub <16 x double> %temp.vect706, %383
  %385 = fmul <16 x double> %384, <double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01>
  %386 = fsub <16 x double> %381, %385
  %387 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %386
  %388 = fmul <16 x double> %384, %387
  %389 = fmul <16 x double> %388, %388
  %390 = fadd <16 x double> %389, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %391 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %390
  %392 = fmul <16 x double> %temp.vect690, %391
  %extract707 = extractelement <16 x double> %392, i32 0
  %extract708 = extractelement <16 x double> %392, i32 1
  %extract709 = extractelement <16 x double> %392, i32 2
  %extract710 = extractelement <16 x double> %392, i32 3
  %extract711 = extractelement <16 x double> %392, i32 4
  %extract712 = extractelement <16 x double> %392, i32 5
  %extract713 = extractelement <16 x double> %392, i32 6
  %extract714 = extractelement <16 x double> %392, i32 7
  %extract715 = extractelement <16 x double> %392, i32 8
  %extract716 = extractelement <16 x double> %392, i32 9
  %extract717 = extractelement <16 x double> %392, i32 10
  %extract718 = extractelement <16 x double> %392, i32 11
  %extract719 = extractelement <16 x double> %392, i32 12
  %extract720 = extractelement <16 x double> %392, i32 13
  %extract721 = extractelement <16 x double> %392, i32 14
  %extract722 = extractelement <16 x double> %392, i32 15
  %393 = tail call double @_Z5exp10d(double %extract707) nounwind
  %394 = tail call double @_Z5exp10d(double %extract708) nounwind
  %395 = tail call double @_Z5exp10d(double %extract709) nounwind
  %396 = tail call double @_Z5exp10d(double %extract710) nounwind
  %397 = tail call double @_Z5exp10d(double %extract711) nounwind
  %398 = tail call double @_Z5exp10d(double %extract712) nounwind
  %399 = tail call double @_Z5exp10d(double %extract713) nounwind
  %400 = tail call double @_Z5exp10d(double %extract714) nounwind
  %401 = tail call double @_Z5exp10d(double %extract715) nounwind
  %402 = tail call double @_Z5exp10d(double %extract716) nounwind
  %403 = tail call double @_Z5exp10d(double %extract717) nounwind
  %404 = tail call double @_Z5exp10d(double %extract718) nounwind
  %405 = tail call double @_Z5exp10d(double %extract719) nounwind
  %406 = tail call double @_Z5exp10d(double %extract720) nounwind
  %407 = tail call double @_Z5exp10d(double %extract721) nounwind
  %408 = tail call double @_Z5exp10d(double %extract722) nounwind
  %temp.vect723 = insertelement <16 x double> undef, double %393, i32 0
  %temp.vect724 = insertelement <16 x double> %temp.vect723, double %394, i32 1
  %temp.vect725 = insertelement <16 x double> %temp.vect724, double %395, i32 2
  %temp.vect726 = insertelement <16 x double> %temp.vect725, double %396, i32 3
  %temp.vect727 = insertelement <16 x double> %temp.vect726, double %397, i32 4
  %temp.vect728 = insertelement <16 x double> %temp.vect727, double %398, i32 5
  %temp.vect729 = insertelement <16 x double> %temp.vect728, double %399, i32 6
  %temp.vect730 = insertelement <16 x double> %temp.vect729, double %400, i32 7
  %temp.vect731 = insertelement <16 x double> %temp.vect730, double %401, i32 8
  %temp.vect732 = insertelement <16 x double> %temp.vect731, double %402, i32 9
  %temp.vect733 = insertelement <16 x double> %temp.vect732, double %403, i32 10
  %temp.vect734 = insertelement <16 x double> %temp.vect733, double %404, i32 11
  %temp.vect735 = insertelement <16 x double> %temp.vect734, double %405, i32 12
  %temp.vect736 = insertelement <16 x double> %temp.vect735, double %406, i32 13
  %temp.vect737 = insertelement <16 x double> %temp.vect736, double %407, i32 14
  %temp.vect738 = insertelement <16 x double> %temp.vect737, double %408, i32 15
  %409 = fmul <16 x double> %temp.vect738, %259
  %410 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %411 = load i64* %410, align 8
  %412 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %413 = load i64* %412, align 8
  %414 = add i64 %411, %413
  %extract741 = add i64 %414, 1658880
  %415 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract741
  %ptrTypeCast757 = bitcast double addrspace(1)* %415 to <16 x double> addrspace(1)*
  %416 = load <16 x double> addrspace(1)* %ptrTypeCast757, align 8
  %417 = fmul <16 x double> %416, %409
  %418 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %419 = load i64* %418, align 8
  %420 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %421 = load i64* %420, align 8
  %422 = add i64 %419, %421
  %extract760 = add i64 %422, 1658880
  %423 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract760
  %ptrTypeCast776 = bitcast double addrspace(1)* %423 to <16 x double> addrspace(1)*
  store <16 x double> %417, <16 x double> addrspace(1)* %ptrTypeCast776, align 8
  %424 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %425 = load i64* %424, align 8
  %426 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %427 = load i64* %426, align 8
  %428 = add i64 %425, %427
  %extract779 = add i64 %428, 1658880
  %429 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract779
  %ptrTypeCast795 = bitcast double addrspace(1)* %429 to <16 x double> addrspace(1)*
  %430 = load <16 x double> addrspace(1)* %ptrTypeCast795, align 8
  %431 = fmul <16 x double> %430, %409
  %432 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %433 = load i64* %432, align 8
  %434 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %435 = load i64* %434, align 8
  %436 = add i64 %433, %435
  %extract798 = add i64 %436, 1658880
  %437 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract798
  %ptrTypeCast814 = bitcast double addrspace(1)* %437 to <16 x double> addrspace(1)*
  store <16 x double> %431, <16 x double> addrspace(1)* %ptrTypeCast814, align 8
  %438 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %439 = load i64* %438, align 8
  %440 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %441 = load i64* %440, align 8
  %442 = add i64 %439, %441
  %extract817 = add i64 %442, 110592
  %443 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %extract817
  %ptrTypeCast833 = bitcast double addrspace(1)* %443 to <16 x double> addrspace(1)*
  %444 = load <16 x double> addrspace(1)* %ptrTypeCast833, align 8
  %445 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %446 = load i64* %445, align 8
  %447 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %448 = load i64* %447, align 8
  %449 = add i64 %446, %448
  %extract836 = add i64 %449, 3317760
  %450 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract836
  %ptrTypeCast852 = bitcast double addrspace(1)* %450 to <16 x double> addrspace(1)*
  %451 = load <16 x double> addrspace(1)* %ptrTypeCast852, align 8
  %452 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %451
  %453 = fmul <16 x double> %101, %452
  %454 = fmul <16 x double> %444, %453
  %extract853 = extractelement <16 x double> %454, i32 0
  %extract854 = extractelement <16 x double> %454, i32 1
  %extract855 = extractelement <16 x double> %454, i32 2
  %extract856 = extractelement <16 x double> %454, i32 3
  %extract857 = extractelement <16 x double> %454, i32 4
  %extract858 = extractelement <16 x double> %454, i32 5
  %extract859 = extractelement <16 x double> %454, i32 6
  %extract860 = extractelement <16 x double> %454, i32 7
  %extract861 = extractelement <16 x double> %454, i32 8
  %extract862 = extractelement <16 x double> %454, i32 9
  %extract863 = extractelement <16 x double> %454, i32 10
  %extract864 = extractelement <16 x double> %454, i32 11
  %extract865 = extractelement <16 x double> %454, i32 12
  %extract866 = extractelement <16 x double> %454, i32 13
  %extract867 = extractelement <16 x double> %454, i32 14
  %extract868 = extractelement <16 x double> %454, i32 15
  %455 = fadd <16 x double> %454, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %456 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %455
  %457 = fmul <16 x double> %454, %456
  %458 = tail call double @_Z4fmaxdd(double %extract853, double 1.000000e-200) nounwind
  %459 = tail call double @_Z4fmaxdd(double %extract854, double 1.000000e-200) nounwind
  %460 = tail call double @_Z4fmaxdd(double %extract855, double 1.000000e-200) nounwind
  %461 = tail call double @_Z4fmaxdd(double %extract856, double 1.000000e-200) nounwind
  %462 = tail call double @_Z4fmaxdd(double %extract857, double 1.000000e-200) nounwind
  %463 = tail call double @_Z4fmaxdd(double %extract858, double 1.000000e-200) nounwind
  %464 = tail call double @_Z4fmaxdd(double %extract859, double 1.000000e-200) nounwind
  %465 = tail call double @_Z4fmaxdd(double %extract860, double 1.000000e-200) nounwind
  %466 = tail call double @_Z4fmaxdd(double %extract861, double 1.000000e-200) nounwind
  %467 = tail call double @_Z4fmaxdd(double %extract862, double 1.000000e-200) nounwind
  %468 = tail call double @_Z4fmaxdd(double %extract863, double 1.000000e-200) nounwind
  %469 = tail call double @_Z4fmaxdd(double %extract864, double 1.000000e-200) nounwind
  %470 = tail call double @_Z4fmaxdd(double %extract865, double 1.000000e-200) nounwind
  %471 = tail call double @_Z4fmaxdd(double %extract866, double 1.000000e-200) nounwind
  %472 = tail call double @_Z4fmaxdd(double %extract867, double 1.000000e-200) nounwind
  %473 = tail call double @_Z4fmaxdd(double %extract868, double 1.000000e-200) nounwind
  %474 = tail call double @_Z5log10d(double %458) nounwind
  %475 = tail call double @_Z5log10d(double %459) nounwind
  %476 = tail call double @_Z5log10d(double %460) nounwind
  %477 = tail call double @_Z5log10d(double %461) nounwind
  %478 = tail call double @_Z5log10d(double %462) nounwind
  %479 = tail call double @_Z5log10d(double %463) nounwind
  %480 = tail call double @_Z5log10d(double %464) nounwind
  %481 = tail call double @_Z5log10d(double %465) nounwind
  %482 = tail call double @_Z5log10d(double %466) nounwind
  %483 = tail call double @_Z5log10d(double %467) nounwind
  %484 = tail call double @_Z5log10d(double %468) nounwind
  %485 = tail call double @_Z5log10d(double %469) nounwind
  %486 = tail call double @_Z5log10d(double %470) nounwind
  %487 = tail call double @_Z5log10d(double %471) nounwind
  %488 = tail call double @_Z5log10d(double %472) nounwind
  %489 = tail call double @_Z5log10d(double %473) nounwind
  %temp.vect997 = insertelement <16 x double> undef, double %474, i32 0
  %temp.vect998 = insertelement <16 x double> %temp.vect997, double %475, i32 1
  %temp.vect999 = insertelement <16 x double> %temp.vect998, double %476, i32 2
  %temp.vect1000 = insertelement <16 x double> %temp.vect999, double %477, i32 3
  %temp.vect1001 = insertelement <16 x double> %temp.vect1000, double %478, i32 4
  %temp.vect1002 = insertelement <16 x double> %temp.vect1001, double %479, i32 5
  %temp.vect1003 = insertelement <16 x double> %temp.vect1002, double %480, i32 6
  %temp.vect1004 = insertelement <16 x double> %temp.vect1003, double %481, i32 7
  %temp.vect1005 = insertelement <16 x double> %temp.vect1004, double %482, i32 8
  %temp.vect1006 = insertelement <16 x double> %temp.vect1005, double %483, i32 9
  %temp.vect1007 = insertelement <16 x double> %temp.vect1006, double %484, i32 10
  %temp.vect1008 = insertelement <16 x double> %temp.vect1007, double %485, i32 11
  %temp.vect1009 = insertelement <16 x double> %temp.vect1008, double %486, i32 12
  %temp.vect1010 = insertelement <16 x double> %temp.vect1009, double %487, i32 13
  %temp.vect1011 = insertelement <16 x double> %temp.vect1010, double %488, i32 14
  %temp.vect1012 = insertelement <16 x double> %temp.vect1011, double %489, i32 15
  %490 = fmul <16 x double> %7, <double 0xBF74CAB88725AF6E, double 0xBF74CAB88725AF6E, double 0xBF74CAB88725AF6E, double 0xBF74CAB88725AF6E, double 0xBF74CAB88725AF6E, double 0xBF74CAB88725AF6E, double 0xBF74CAB88725AF6E, double 0xBF74CAB88725AF6E, double 0xBF74CAB88725AF6E, double 0xBF74CAB88725AF6E, double 0xBF74CAB88725AF6E, double 0xBF74CAB88725AF6E, double 0xBF74CAB88725AF6E, double 0xBF74CAB88725AF6E, double 0xBF74CAB88725AF6E, double 0xBF74CAB88725AF6E>
  %extract869 = extractelement <16 x double> %490, i32 0
  %extract870 = extractelement <16 x double> %490, i32 1
  %extract871 = extractelement <16 x double> %490, i32 2
  %extract872 = extractelement <16 x double> %490, i32 3
  %extract873 = extractelement <16 x double> %490, i32 4
  %extract874 = extractelement <16 x double> %490, i32 5
  %extract875 = extractelement <16 x double> %490, i32 6
  %extract876 = extractelement <16 x double> %490, i32 7
  %extract877 = extractelement <16 x double> %490, i32 8
  %extract878 = extractelement <16 x double> %490, i32 9
  %extract879 = extractelement <16 x double> %490, i32 10
  %extract880 = extractelement <16 x double> %490, i32 11
  %extract881 = extractelement <16 x double> %490, i32 12
  %extract882 = extractelement <16 x double> %490, i32 13
  %extract883 = extractelement <16 x double> %490, i32 14
  %extract884 = extractelement <16 x double> %490, i32 15
  %491 = tail call double @_Z3expd(double %extract869) nounwind
  %492 = tail call double @_Z3expd(double %extract870) nounwind
  %493 = tail call double @_Z3expd(double %extract871) nounwind
  %494 = tail call double @_Z3expd(double %extract872) nounwind
  %495 = tail call double @_Z3expd(double %extract873) nounwind
  %496 = tail call double @_Z3expd(double %extract874) nounwind
  %497 = tail call double @_Z3expd(double %extract875) nounwind
  %498 = tail call double @_Z3expd(double %extract876) nounwind
  %499 = tail call double @_Z3expd(double %extract877) nounwind
  %500 = tail call double @_Z3expd(double %extract878) nounwind
  %501 = tail call double @_Z3expd(double %extract879) nounwind
  %502 = tail call double @_Z3expd(double %extract880) nounwind
  %503 = tail call double @_Z3expd(double %extract881) nounwind
  %504 = tail call double @_Z3expd(double %extract882) nounwind
  %505 = tail call double @_Z3expd(double %extract883) nounwind
  %506 = tail call double @_Z3expd(double %extract884) nounwind
  %temp.vect885 = insertelement <16 x double> undef, double %491, i32 0
  %temp.vect886 = insertelement <16 x double> %temp.vect885, double %492, i32 1
  %temp.vect887 = insertelement <16 x double> %temp.vect886, double %493, i32 2
  %temp.vect888 = insertelement <16 x double> %temp.vect887, double %494, i32 3
  %temp.vect889 = insertelement <16 x double> %temp.vect888, double %495, i32 4
  %temp.vect890 = insertelement <16 x double> %temp.vect889, double %496, i32 5
  %temp.vect891 = insertelement <16 x double> %temp.vect890, double %497, i32 6
  %temp.vect892 = insertelement <16 x double> %temp.vect891, double %498, i32 7
  %temp.vect893 = insertelement <16 x double> %temp.vect892, double %499, i32 8
  %temp.vect894 = insertelement <16 x double> %temp.vect893, double %500, i32 9
  %temp.vect895 = insertelement <16 x double> %temp.vect894, double %501, i32 10
  %temp.vect896 = insertelement <16 x double> %temp.vect895, double %502, i32 11
  %temp.vect897 = insertelement <16 x double> %temp.vect896, double %503, i32 12
  %temp.vect898 = insertelement <16 x double> %temp.vect897, double %504, i32 13
  %temp.vect899 = insertelement <16 x double> %temp.vect898, double %505, i32 14
  %temp.vect900 = insertelement <16 x double> %temp.vect899, double %506, i32 15
  %507 = fmul <16 x double> %temp.vect900, <double 6.800000e-02, double 6.800000e-02, double 6.800000e-02, double 6.800000e-02, double 6.800000e-02, double 6.800000e-02, double 6.800000e-02, double 6.800000e-02, double 6.800000e-02, double 6.800000e-02, double 6.800000e-02, double 6.800000e-02, double 6.800000e-02, double 6.800000e-02, double 6.800000e-02, double 6.800000e-02>
  %508 = fmul <16 x double> %7, <double 0xBF454725E6BB82FE, double 0xBF454725E6BB82FE, double 0xBF454725E6BB82FE, double 0xBF454725E6BB82FE, double 0xBF454725E6BB82FE, double 0xBF454725E6BB82FE, double 0xBF454725E6BB82FE, double 0xBF454725E6BB82FE, double 0xBF454725E6BB82FE, double 0xBF454725E6BB82FE, double 0xBF454725E6BB82FE, double 0xBF454725E6BB82FE, double 0xBF454725E6BB82FE, double 0xBF454725E6BB82FE, double 0xBF454725E6BB82FE, double 0xBF454725E6BB82FE>
  %extract901 = extractelement <16 x double> %508, i32 0
  %extract902 = extractelement <16 x double> %508, i32 1
  %extract903 = extractelement <16 x double> %508, i32 2
  %extract904 = extractelement <16 x double> %508, i32 3
  %extract905 = extractelement <16 x double> %508, i32 4
  %extract906 = extractelement <16 x double> %508, i32 5
  %extract907 = extractelement <16 x double> %508, i32 6
  %extract908 = extractelement <16 x double> %508, i32 7
  %extract909 = extractelement <16 x double> %508, i32 8
  %extract910 = extractelement <16 x double> %508, i32 9
  %extract911 = extractelement <16 x double> %508, i32 10
  %extract912 = extractelement <16 x double> %508, i32 11
  %extract913 = extractelement <16 x double> %508, i32 12
  %extract914 = extractelement <16 x double> %508, i32 13
  %extract915 = extractelement <16 x double> %508, i32 14
  %extract916 = extractelement <16 x double> %508, i32 15
  %509 = tail call double @_Z3expd(double %extract901) nounwind
  %510 = tail call double @_Z3expd(double %extract902) nounwind
  %511 = tail call double @_Z3expd(double %extract903) nounwind
  %512 = tail call double @_Z3expd(double %extract904) nounwind
  %513 = tail call double @_Z3expd(double %extract905) nounwind
  %514 = tail call double @_Z3expd(double %extract906) nounwind
  %515 = tail call double @_Z3expd(double %extract907) nounwind
  %516 = tail call double @_Z3expd(double %extract908) nounwind
  %517 = tail call double @_Z3expd(double %extract909) nounwind
  %518 = tail call double @_Z3expd(double %extract910) nounwind
  %519 = tail call double @_Z3expd(double %extract911) nounwind
  %520 = tail call double @_Z3expd(double %extract912) nounwind
  %521 = tail call double @_Z3expd(double %extract913) nounwind
  %522 = tail call double @_Z3expd(double %extract914) nounwind
  %523 = tail call double @_Z3expd(double %extract915) nounwind
  %524 = tail call double @_Z3expd(double %extract916) nounwind
  %temp.vect917 = insertelement <16 x double> undef, double %509, i32 0
  %temp.vect918 = insertelement <16 x double> %temp.vect917, double %510, i32 1
  %temp.vect919 = insertelement <16 x double> %temp.vect918, double %511, i32 2
  %temp.vect920 = insertelement <16 x double> %temp.vect919, double %512, i32 3
  %temp.vect921 = insertelement <16 x double> %temp.vect920, double %513, i32 4
  %temp.vect922 = insertelement <16 x double> %temp.vect921, double %514, i32 5
  %temp.vect923 = insertelement <16 x double> %temp.vect922, double %515, i32 6
  %temp.vect924 = insertelement <16 x double> %temp.vect923, double %516, i32 7
  %temp.vect925 = insertelement <16 x double> %temp.vect924, double %517, i32 8
  %temp.vect926 = insertelement <16 x double> %temp.vect925, double %518, i32 9
  %temp.vect927 = insertelement <16 x double> %temp.vect926, double %519, i32 10
  %temp.vect928 = insertelement <16 x double> %temp.vect927, double %520, i32 11
  %temp.vect929 = insertelement <16 x double> %temp.vect928, double %521, i32 12
  %temp.vect930 = insertelement <16 x double> %temp.vect929, double %522, i32 13
  %temp.vect931 = insertelement <16 x double> %temp.vect930, double %523, i32 14
  %temp.vect932 = insertelement <16 x double> %temp.vect931, double %524, i32 15
  %525 = fmul <16 x double> %temp.vect932, <double 9.320000e-01, double 9.320000e-01, double 9.320000e-01, double 9.320000e-01, double 9.320000e-01, double 9.320000e-01, double 9.320000e-01, double 9.320000e-01, double 9.320000e-01, double 9.320000e-01, double 9.320000e-01, double 9.320000e-01, double 9.320000e-01, double 9.320000e-01, double 9.320000e-01, double 9.320000e-01>
  %526 = fadd <16 x double> %507, %525
  %527 = fmul <16 x double> %329, <double -1.030000e+04, double -1.030000e+04, double -1.030000e+04, double -1.030000e+04, double -1.030000e+04, double -1.030000e+04, double -1.030000e+04, double -1.030000e+04, double -1.030000e+04, double -1.030000e+04, double -1.030000e+04, double -1.030000e+04, double -1.030000e+04, double -1.030000e+04, double -1.030000e+04, double -1.030000e+04>
  %extract933 = extractelement <16 x double> %527, i32 0
  %extract934 = extractelement <16 x double> %527, i32 1
  %extract935 = extractelement <16 x double> %527, i32 2
  %extract936 = extractelement <16 x double> %527, i32 3
  %extract937 = extractelement <16 x double> %527, i32 4
  %extract938 = extractelement <16 x double> %527, i32 5
  %extract939 = extractelement <16 x double> %527, i32 6
  %extract940 = extractelement <16 x double> %527, i32 7
  %extract941 = extractelement <16 x double> %527, i32 8
  %extract942 = extractelement <16 x double> %527, i32 9
  %extract943 = extractelement <16 x double> %527, i32 10
  %extract944 = extractelement <16 x double> %527, i32 11
  %extract945 = extractelement <16 x double> %527, i32 12
  %extract946 = extractelement <16 x double> %527, i32 13
  %extract947 = extractelement <16 x double> %527, i32 14
  %extract948 = extractelement <16 x double> %527, i32 15
  %528 = tail call double @_Z3expd(double %extract933) nounwind
  %529 = tail call double @_Z3expd(double %extract934) nounwind
  %530 = tail call double @_Z3expd(double %extract935) nounwind
  %531 = tail call double @_Z3expd(double %extract936) nounwind
  %532 = tail call double @_Z3expd(double %extract937) nounwind
  %533 = tail call double @_Z3expd(double %extract938) nounwind
  %534 = tail call double @_Z3expd(double %extract939) nounwind
  %535 = tail call double @_Z3expd(double %extract940) nounwind
  %536 = tail call double @_Z3expd(double %extract941) nounwind
  %537 = tail call double @_Z3expd(double %extract942) nounwind
  %538 = tail call double @_Z3expd(double %extract943) nounwind
  %539 = tail call double @_Z3expd(double %extract944) nounwind
  %540 = tail call double @_Z3expd(double %extract945) nounwind
  %541 = tail call double @_Z3expd(double %extract946) nounwind
  %542 = tail call double @_Z3expd(double %extract947) nounwind
  %543 = tail call double @_Z3expd(double %extract948) nounwind
  %temp.vect949 = insertelement <16 x double> undef, double %528, i32 0
  %temp.vect950 = insertelement <16 x double> %temp.vect949, double %529, i32 1
  %temp.vect951 = insertelement <16 x double> %temp.vect950, double %530, i32 2
  %temp.vect952 = insertelement <16 x double> %temp.vect951, double %531, i32 3
  %temp.vect953 = insertelement <16 x double> %temp.vect952, double %532, i32 4
  %temp.vect954 = insertelement <16 x double> %temp.vect953, double %533, i32 5
  %temp.vect955 = insertelement <16 x double> %temp.vect954, double %534, i32 6
  %temp.vect956 = insertelement <16 x double> %temp.vect955, double %535, i32 7
  %temp.vect957 = insertelement <16 x double> %temp.vect956, double %536, i32 8
  %temp.vect958 = insertelement <16 x double> %temp.vect957, double %537, i32 9
  %temp.vect959 = insertelement <16 x double> %temp.vect958, double %538, i32 10
  %temp.vect960 = insertelement <16 x double> %temp.vect959, double %539, i32 11
  %temp.vect961 = insertelement <16 x double> %temp.vect960, double %540, i32 12
  %temp.vect962 = insertelement <16 x double> %temp.vect961, double %541, i32 13
  %temp.vect963 = insertelement <16 x double> %temp.vect962, double %542, i32 14
  %temp.vect964 = insertelement <16 x double> %temp.vect963, double %543, i32 15
  %544 = fadd <16 x double> %526, %temp.vect964
  %extract965 = extractelement <16 x double> %544, i32 0
  %extract966 = extractelement <16 x double> %544, i32 1
  %extract967 = extractelement <16 x double> %544, i32 2
  %extract968 = extractelement <16 x double> %544, i32 3
  %extract969 = extractelement <16 x double> %544, i32 4
  %extract970 = extractelement <16 x double> %544, i32 5
  %extract971 = extractelement <16 x double> %544, i32 6
  %extract972 = extractelement <16 x double> %544, i32 7
  %extract973 = extractelement <16 x double> %544, i32 8
  %extract974 = extractelement <16 x double> %544, i32 9
  %extract975 = extractelement <16 x double> %544, i32 10
  %extract976 = extractelement <16 x double> %544, i32 11
  %extract977 = extractelement <16 x double> %544, i32 12
  %extract978 = extractelement <16 x double> %544, i32 13
  %extract979 = extractelement <16 x double> %544, i32 14
  %extract980 = extractelement <16 x double> %544, i32 15
  %545 = tail call double @_Z4fmaxdd(double %extract965, double 1.000000e-200) nounwind
  %546 = tail call double @_Z4fmaxdd(double %extract966, double 1.000000e-200) nounwind
  %547 = tail call double @_Z4fmaxdd(double %extract967, double 1.000000e-200) nounwind
  %548 = tail call double @_Z4fmaxdd(double %extract968, double 1.000000e-200) nounwind
  %549 = tail call double @_Z4fmaxdd(double %extract969, double 1.000000e-200) nounwind
  %550 = tail call double @_Z4fmaxdd(double %extract970, double 1.000000e-200) nounwind
  %551 = tail call double @_Z4fmaxdd(double %extract971, double 1.000000e-200) nounwind
  %552 = tail call double @_Z4fmaxdd(double %extract972, double 1.000000e-200) nounwind
  %553 = tail call double @_Z4fmaxdd(double %extract973, double 1.000000e-200) nounwind
  %554 = tail call double @_Z4fmaxdd(double %extract974, double 1.000000e-200) nounwind
  %555 = tail call double @_Z4fmaxdd(double %extract975, double 1.000000e-200) nounwind
  %556 = tail call double @_Z4fmaxdd(double %extract976, double 1.000000e-200) nounwind
  %557 = tail call double @_Z4fmaxdd(double %extract977, double 1.000000e-200) nounwind
  %558 = tail call double @_Z4fmaxdd(double %extract978, double 1.000000e-200) nounwind
  %559 = tail call double @_Z4fmaxdd(double %extract979, double 1.000000e-200) nounwind
  %560 = tail call double @_Z4fmaxdd(double %extract980, double 1.000000e-200) nounwind
  %561 = tail call double @_Z5log10d(double %545) nounwind
  %562 = tail call double @_Z5log10d(double %546) nounwind
  %563 = tail call double @_Z5log10d(double %547) nounwind
  %564 = tail call double @_Z5log10d(double %548) nounwind
  %565 = tail call double @_Z5log10d(double %549) nounwind
  %566 = tail call double @_Z5log10d(double %550) nounwind
  %567 = tail call double @_Z5log10d(double %551) nounwind
  %568 = tail call double @_Z5log10d(double %552) nounwind
  %569 = tail call double @_Z5log10d(double %553) nounwind
  %570 = tail call double @_Z5log10d(double %554) nounwind
  %571 = tail call double @_Z5log10d(double %555) nounwind
  %572 = tail call double @_Z5log10d(double %556) nounwind
  %573 = tail call double @_Z5log10d(double %557) nounwind
  %574 = tail call double @_Z5log10d(double %558) nounwind
  %575 = tail call double @_Z5log10d(double %559) nounwind
  %576 = tail call double @_Z5log10d(double %560) nounwind
  %temp.vect981 = insertelement <16 x double> undef, double %561, i32 0
  %temp.vect982 = insertelement <16 x double> %temp.vect981, double %562, i32 1
  %temp.vect983 = insertelement <16 x double> %temp.vect982, double %563, i32 2
  %temp.vect984 = insertelement <16 x double> %temp.vect983, double %564, i32 3
  %temp.vect985 = insertelement <16 x double> %temp.vect984, double %565, i32 4
  %temp.vect986 = insertelement <16 x double> %temp.vect985, double %566, i32 5
  %temp.vect987 = insertelement <16 x double> %temp.vect986, double %567, i32 6
  %temp.vect988 = insertelement <16 x double> %temp.vect987, double %568, i32 7
  %temp.vect989 = insertelement <16 x double> %temp.vect988, double %569, i32 8
  %temp.vect990 = insertelement <16 x double> %temp.vect989, double %570, i32 9
  %temp.vect991 = insertelement <16 x double> %temp.vect990, double %571, i32 10
  %temp.vect992 = insertelement <16 x double> %temp.vect991, double %572, i32 11
  %temp.vect993 = insertelement <16 x double> %temp.vect992, double %573, i32 12
  %temp.vect994 = insertelement <16 x double> %temp.vect993, double %574, i32 13
  %temp.vect995 = insertelement <16 x double> %temp.vect994, double %575, i32 14
  %temp.vect996 = insertelement <16 x double> %temp.vect995, double %576, i32 15
  %577 = fmul <16 x double> %temp.vect996, <double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00>
  %578 = fsub <16 x double> <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>, %577
  %579 = fmul <16 x double> %temp.vect996, <double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01>
  %580 = fadd <16 x double> %579, <double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01>
  %581 = fsub <16 x double> %temp.vect1012, %580
  %582 = fmul <16 x double> %581, <double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01>
  %583 = fsub <16 x double> %578, %582
  %584 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %583
  %585 = fmul <16 x double> %581, %584
  %586 = fmul <16 x double> %585, %585
  %587 = fadd <16 x double> %586, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %588 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %587
  %589 = fmul <16 x double> %temp.vect996, %588
  %extract1013 = extractelement <16 x double> %589, i32 0
  %extract1014 = extractelement <16 x double> %589, i32 1
  %extract1015 = extractelement <16 x double> %589, i32 2
  %extract1016 = extractelement <16 x double> %589, i32 3
  %extract1017 = extractelement <16 x double> %589, i32 4
  %extract1018 = extractelement <16 x double> %589, i32 5
  %extract1019 = extractelement <16 x double> %589, i32 6
  %extract1020 = extractelement <16 x double> %589, i32 7
  %extract1021 = extractelement <16 x double> %589, i32 8
  %extract1022 = extractelement <16 x double> %589, i32 9
  %extract1023 = extractelement <16 x double> %589, i32 10
  %extract1024 = extractelement <16 x double> %589, i32 11
  %extract1025 = extractelement <16 x double> %589, i32 12
  %extract1026 = extractelement <16 x double> %589, i32 13
  %extract1027 = extractelement <16 x double> %589, i32 14
  %extract1028 = extractelement <16 x double> %589, i32 15
  %590 = tail call double @_Z5exp10d(double %extract1013) nounwind
  %591 = tail call double @_Z5exp10d(double %extract1014) nounwind
  %592 = tail call double @_Z5exp10d(double %extract1015) nounwind
  %593 = tail call double @_Z5exp10d(double %extract1016) nounwind
  %594 = tail call double @_Z5exp10d(double %extract1017) nounwind
  %595 = tail call double @_Z5exp10d(double %extract1018) nounwind
  %596 = tail call double @_Z5exp10d(double %extract1019) nounwind
  %597 = tail call double @_Z5exp10d(double %extract1020) nounwind
  %598 = tail call double @_Z5exp10d(double %extract1021) nounwind
  %599 = tail call double @_Z5exp10d(double %extract1022) nounwind
  %600 = tail call double @_Z5exp10d(double %extract1023) nounwind
  %601 = tail call double @_Z5exp10d(double %extract1024) nounwind
  %602 = tail call double @_Z5exp10d(double %extract1025) nounwind
  %603 = tail call double @_Z5exp10d(double %extract1026) nounwind
  %604 = tail call double @_Z5exp10d(double %extract1027) nounwind
  %605 = tail call double @_Z5exp10d(double %extract1028) nounwind
  %temp.vect1029 = insertelement <16 x double> undef, double %590, i32 0
  %temp.vect1030 = insertelement <16 x double> %temp.vect1029, double %591, i32 1
  %temp.vect1031 = insertelement <16 x double> %temp.vect1030, double %592, i32 2
  %temp.vect1032 = insertelement <16 x double> %temp.vect1031, double %593, i32 3
  %temp.vect1033 = insertelement <16 x double> %temp.vect1032, double %594, i32 4
  %temp.vect1034 = insertelement <16 x double> %temp.vect1033, double %595, i32 5
  %temp.vect1035 = insertelement <16 x double> %temp.vect1034, double %596, i32 6
  %temp.vect1036 = insertelement <16 x double> %temp.vect1035, double %597, i32 7
  %temp.vect1037 = insertelement <16 x double> %temp.vect1036, double %598, i32 8
  %temp.vect1038 = insertelement <16 x double> %temp.vect1037, double %599, i32 9
  %temp.vect1039 = insertelement <16 x double> %temp.vect1038, double %600, i32 10
  %temp.vect1040 = insertelement <16 x double> %temp.vect1039, double %601, i32 11
  %temp.vect1041 = insertelement <16 x double> %temp.vect1040, double %602, i32 12
  %temp.vect1042 = insertelement <16 x double> %temp.vect1041, double %603, i32 13
  %temp.vect1043 = insertelement <16 x double> %temp.vect1042, double %604, i32 14
  %temp.vect1044 = insertelement <16 x double> %temp.vect1043, double %605, i32 15
  %606 = fmul <16 x double> %temp.vect1044, %457
  %607 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %608 = load i64* %607, align 8
  %609 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %610 = load i64* %609, align 8
  %611 = add i64 %608, %610
  %extract1047 = add i64 %611, 3317760
  %612 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1047
  %ptrTypeCast1063 = bitcast double addrspace(1)* %612 to <16 x double> addrspace(1)*
  %613 = load <16 x double> addrspace(1)* %ptrTypeCast1063, align 8
  %614 = fmul <16 x double> %613, %606
  %615 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %616 = load i64* %615, align 8
  %617 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %618 = load i64* %617, align 8
  %619 = add i64 %616, %618
  %extract1066 = add i64 %619, 3317760
  %620 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1066
  %ptrTypeCast1082 = bitcast double addrspace(1)* %620 to <16 x double> addrspace(1)*
  store <16 x double> %614, <16 x double> addrspace(1)* %ptrTypeCast1082, align 8
  %621 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %622 = load i64* %621, align 8
  %623 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %624 = load i64* %623, align 8
  %625 = add i64 %622, %624
  %extract1085 = add i64 %625, 3317760
  %626 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract1085
  %ptrTypeCast1101 = bitcast double addrspace(1)* %626 to <16 x double> addrspace(1)*
  %627 = load <16 x double> addrspace(1)* %ptrTypeCast1101, align 8
  %628 = fmul <16 x double> %627, %606
  %629 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %630 = load i64* %629, align 8
  %631 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %632 = load i64* %631, align 8
  %633 = add i64 %630, %632
  %extract1104 = add i64 %633, 3317760
  %634 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract1104
  %ptrTypeCast1120 = bitcast double addrspace(1)* %634 to <16 x double> addrspace(1)*
  store <16 x double> %628, <16 x double> addrspace(1)* %ptrTypeCast1120, align 8
  %635 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %636 = load i64* %635, align 8
  %637 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %638 = load i64* %637, align 8
  %639 = add i64 %636, %638
  %extract1123 = add i64 %639, 221184
  %640 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %extract1123
  %ptrTypeCast1139 = bitcast double addrspace(1)* %640 to <16 x double> addrspace(1)*
  %641 = load <16 x double> addrspace(1)* %ptrTypeCast1139, align 8
  %642 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %643 = load i64* %642, align 8
  %644 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %645 = load i64* %644, align 8
  %646 = add i64 %643, %645
  %extract1142 = add i64 %646, 4202496
  %647 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1142
  %ptrTypeCast1158 = bitcast double addrspace(1)* %647 to <16 x double> addrspace(1)*
  %648 = load <16 x double> addrspace(1)* %ptrTypeCast1158, align 8
  %649 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %648
  %650 = fmul <16 x double> %101, %649
  %651 = fmul <16 x double> %641, %650
  %extract1159 = extractelement <16 x double> %651, i32 0
  %extract1160 = extractelement <16 x double> %651, i32 1
  %extract1161 = extractelement <16 x double> %651, i32 2
  %extract1162 = extractelement <16 x double> %651, i32 3
  %extract1163 = extractelement <16 x double> %651, i32 4
  %extract1164 = extractelement <16 x double> %651, i32 5
  %extract1165 = extractelement <16 x double> %651, i32 6
  %extract1166 = extractelement <16 x double> %651, i32 7
  %extract1167 = extractelement <16 x double> %651, i32 8
  %extract1168 = extractelement <16 x double> %651, i32 9
  %extract1169 = extractelement <16 x double> %651, i32 10
  %extract1170 = extractelement <16 x double> %651, i32 11
  %extract1171 = extractelement <16 x double> %651, i32 12
  %extract1172 = extractelement <16 x double> %651, i32 13
  %extract1173 = extractelement <16 x double> %651, i32 14
  %extract1174 = extractelement <16 x double> %651, i32 15
  %652 = fadd <16 x double> %651, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %653 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %652
  %654 = fmul <16 x double> %651, %653
  %655 = tail call double @_Z4fmaxdd(double %extract1159, double 1.000000e-200) nounwind
  %656 = tail call double @_Z4fmaxdd(double %extract1160, double 1.000000e-200) nounwind
  %657 = tail call double @_Z4fmaxdd(double %extract1161, double 1.000000e-200) nounwind
  %658 = tail call double @_Z4fmaxdd(double %extract1162, double 1.000000e-200) nounwind
  %659 = tail call double @_Z4fmaxdd(double %extract1163, double 1.000000e-200) nounwind
  %660 = tail call double @_Z4fmaxdd(double %extract1164, double 1.000000e-200) nounwind
  %661 = tail call double @_Z4fmaxdd(double %extract1165, double 1.000000e-200) nounwind
  %662 = tail call double @_Z4fmaxdd(double %extract1166, double 1.000000e-200) nounwind
  %663 = tail call double @_Z4fmaxdd(double %extract1167, double 1.000000e-200) nounwind
  %664 = tail call double @_Z4fmaxdd(double %extract1168, double 1.000000e-200) nounwind
  %665 = tail call double @_Z4fmaxdd(double %extract1169, double 1.000000e-200) nounwind
  %666 = tail call double @_Z4fmaxdd(double %extract1170, double 1.000000e-200) nounwind
  %667 = tail call double @_Z4fmaxdd(double %extract1171, double 1.000000e-200) nounwind
  %668 = tail call double @_Z4fmaxdd(double %extract1172, double 1.000000e-200) nounwind
  %669 = tail call double @_Z4fmaxdd(double %extract1173, double 1.000000e-200) nounwind
  %670 = tail call double @_Z4fmaxdd(double %extract1174, double 1.000000e-200) nounwind
  %671 = tail call double @_Z5log10d(double %655) nounwind
  %672 = tail call double @_Z5log10d(double %656) nounwind
  %673 = tail call double @_Z5log10d(double %657) nounwind
  %674 = tail call double @_Z5log10d(double %658) nounwind
  %675 = tail call double @_Z5log10d(double %659) nounwind
  %676 = tail call double @_Z5log10d(double %660) nounwind
  %677 = tail call double @_Z5log10d(double %661) nounwind
  %678 = tail call double @_Z5log10d(double %662) nounwind
  %679 = tail call double @_Z5log10d(double %663) nounwind
  %680 = tail call double @_Z5log10d(double %664) nounwind
  %681 = tail call double @_Z5log10d(double %665) nounwind
  %682 = tail call double @_Z5log10d(double %666) nounwind
  %683 = tail call double @_Z5log10d(double %667) nounwind
  %684 = tail call double @_Z5log10d(double %668) nounwind
  %685 = tail call double @_Z5log10d(double %669) nounwind
  %686 = tail call double @_Z5log10d(double %670) nounwind
  %temp.vect1303 = insertelement <16 x double> undef, double %671, i32 0
  %temp.vect1304 = insertelement <16 x double> %temp.vect1303, double %672, i32 1
  %temp.vect1305 = insertelement <16 x double> %temp.vect1304, double %673, i32 2
  %temp.vect1306 = insertelement <16 x double> %temp.vect1305, double %674, i32 3
  %temp.vect1307 = insertelement <16 x double> %temp.vect1306, double %675, i32 4
  %temp.vect1308 = insertelement <16 x double> %temp.vect1307, double %676, i32 5
  %temp.vect1309 = insertelement <16 x double> %temp.vect1308, double %677, i32 6
  %temp.vect1310 = insertelement <16 x double> %temp.vect1309, double %678, i32 7
  %temp.vect1311 = insertelement <16 x double> %temp.vect1310, double %679, i32 8
  %temp.vect1312 = insertelement <16 x double> %temp.vect1311, double %680, i32 9
  %temp.vect1313 = insertelement <16 x double> %temp.vect1312, double %681, i32 10
  %temp.vect1314 = insertelement <16 x double> %temp.vect1313, double %682, i32 11
  %temp.vect1315 = insertelement <16 x double> %temp.vect1314, double %683, i32 12
  %temp.vect1316 = insertelement <16 x double> %temp.vect1315, double %684, i32 13
  %temp.vect1317 = insertelement <16 x double> %temp.vect1316, double %685, i32 14
  %temp.vect1318 = insertelement <16 x double> %temp.vect1317, double %686, i32 15
  %687 = fmul <16 x double> %7, <double 0xBF71485F0E0ACD3B, double 0xBF71485F0E0ACD3B, double 0xBF71485F0E0ACD3B, double 0xBF71485F0E0ACD3B, double 0xBF71485F0E0ACD3B, double 0xBF71485F0E0ACD3B, double 0xBF71485F0E0ACD3B, double 0xBF71485F0E0ACD3B, double 0xBF71485F0E0ACD3B, double 0xBF71485F0E0ACD3B, double 0xBF71485F0E0ACD3B, double 0xBF71485F0E0ACD3B, double 0xBF71485F0E0ACD3B, double 0xBF71485F0E0ACD3B, double 0xBF71485F0E0ACD3B, double 0xBF71485F0E0ACD3B>
  %extract1175 = extractelement <16 x double> %687, i32 0
  %extract1176 = extractelement <16 x double> %687, i32 1
  %extract1177 = extractelement <16 x double> %687, i32 2
  %extract1178 = extractelement <16 x double> %687, i32 3
  %extract1179 = extractelement <16 x double> %687, i32 4
  %extract1180 = extractelement <16 x double> %687, i32 5
  %extract1181 = extractelement <16 x double> %687, i32 6
  %extract1182 = extractelement <16 x double> %687, i32 7
  %extract1183 = extractelement <16 x double> %687, i32 8
  %extract1184 = extractelement <16 x double> %687, i32 9
  %extract1185 = extractelement <16 x double> %687, i32 10
  %extract1186 = extractelement <16 x double> %687, i32 11
  %extract1187 = extractelement <16 x double> %687, i32 12
  %extract1188 = extractelement <16 x double> %687, i32 13
  %extract1189 = extractelement <16 x double> %687, i32 14
  %extract1190 = extractelement <16 x double> %687, i32 15
  %688 = tail call double @_Z3expd(double %extract1175) nounwind
  %689 = tail call double @_Z3expd(double %extract1176) nounwind
  %690 = tail call double @_Z3expd(double %extract1177) nounwind
  %691 = tail call double @_Z3expd(double %extract1178) nounwind
  %692 = tail call double @_Z3expd(double %extract1179) nounwind
  %693 = tail call double @_Z3expd(double %extract1180) nounwind
  %694 = tail call double @_Z3expd(double %extract1181) nounwind
  %695 = tail call double @_Z3expd(double %extract1182) nounwind
  %696 = tail call double @_Z3expd(double %extract1183) nounwind
  %697 = tail call double @_Z3expd(double %extract1184) nounwind
  %698 = tail call double @_Z3expd(double %extract1185) nounwind
  %699 = tail call double @_Z3expd(double %extract1186) nounwind
  %700 = tail call double @_Z3expd(double %extract1187) nounwind
  %701 = tail call double @_Z3expd(double %extract1188) nounwind
  %702 = tail call double @_Z3expd(double %extract1189) nounwind
  %703 = tail call double @_Z3expd(double %extract1190) nounwind
  %temp.vect1191 = insertelement <16 x double> undef, double %688, i32 0
  %temp.vect1192 = insertelement <16 x double> %temp.vect1191, double %689, i32 1
  %temp.vect1193 = insertelement <16 x double> %temp.vect1192, double %690, i32 2
  %temp.vect1194 = insertelement <16 x double> %temp.vect1193, double %691, i32 3
  %temp.vect1195 = insertelement <16 x double> %temp.vect1194, double %692, i32 4
  %temp.vect1196 = insertelement <16 x double> %temp.vect1195, double %693, i32 5
  %temp.vect1197 = insertelement <16 x double> %temp.vect1196, double %694, i32 6
  %temp.vect1198 = insertelement <16 x double> %temp.vect1197, double %695, i32 7
  %temp.vect1199 = insertelement <16 x double> %temp.vect1198, double %696, i32 8
  %temp.vect1200 = insertelement <16 x double> %temp.vect1199, double %697, i32 9
  %temp.vect1201 = insertelement <16 x double> %temp.vect1200, double %698, i32 10
  %temp.vect1202 = insertelement <16 x double> %temp.vect1201, double %699, i32 11
  %temp.vect1203 = insertelement <16 x double> %temp.vect1202, double %700, i32 12
  %temp.vect1204 = insertelement <16 x double> %temp.vect1203, double %701, i32 13
  %temp.vect1205 = insertelement <16 x double> %temp.vect1204, double %702, i32 14
  %temp.vect1206 = insertelement <16 x double> %temp.vect1205, double %703, i32 15
  %704 = fmul <16 x double> %temp.vect1206, <double 4.243000e-01, double 4.243000e-01, double 4.243000e-01, double 4.243000e-01, double 4.243000e-01, double 4.243000e-01, double 4.243000e-01, double 4.243000e-01, double 4.243000e-01, double 4.243000e-01, double 4.243000e-01, double 4.243000e-01, double 4.243000e-01, double 4.243000e-01, double 4.243000e-01, double 4.243000e-01>
  %705 = fmul <16 x double> %7, <double 0xBF43D5D991AA75C6, double 0xBF43D5D991AA75C6, double 0xBF43D5D991AA75C6, double 0xBF43D5D991AA75C6, double 0xBF43D5D991AA75C6, double 0xBF43D5D991AA75C6, double 0xBF43D5D991AA75C6, double 0xBF43D5D991AA75C6, double 0xBF43D5D991AA75C6, double 0xBF43D5D991AA75C6, double 0xBF43D5D991AA75C6, double 0xBF43D5D991AA75C6, double 0xBF43D5D991AA75C6, double 0xBF43D5D991AA75C6, double 0xBF43D5D991AA75C6, double 0xBF43D5D991AA75C6>
  %extract1207 = extractelement <16 x double> %705, i32 0
  %extract1208 = extractelement <16 x double> %705, i32 1
  %extract1209 = extractelement <16 x double> %705, i32 2
  %extract1210 = extractelement <16 x double> %705, i32 3
  %extract1211 = extractelement <16 x double> %705, i32 4
  %extract1212 = extractelement <16 x double> %705, i32 5
  %extract1213 = extractelement <16 x double> %705, i32 6
  %extract1214 = extractelement <16 x double> %705, i32 7
  %extract1215 = extractelement <16 x double> %705, i32 8
  %extract1216 = extractelement <16 x double> %705, i32 9
  %extract1217 = extractelement <16 x double> %705, i32 10
  %extract1218 = extractelement <16 x double> %705, i32 11
  %extract1219 = extractelement <16 x double> %705, i32 12
  %extract1220 = extractelement <16 x double> %705, i32 13
  %extract1221 = extractelement <16 x double> %705, i32 14
  %extract1222 = extractelement <16 x double> %705, i32 15
  %706 = tail call double @_Z3expd(double %extract1207) nounwind
  %707 = tail call double @_Z3expd(double %extract1208) nounwind
  %708 = tail call double @_Z3expd(double %extract1209) nounwind
  %709 = tail call double @_Z3expd(double %extract1210) nounwind
  %710 = tail call double @_Z3expd(double %extract1211) nounwind
  %711 = tail call double @_Z3expd(double %extract1212) nounwind
  %712 = tail call double @_Z3expd(double %extract1213) nounwind
  %713 = tail call double @_Z3expd(double %extract1214) nounwind
  %714 = tail call double @_Z3expd(double %extract1215) nounwind
  %715 = tail call double @_Z3expd(double %extract1216) nounwind
  %716 = tail call double @_Z3expd(double %extract1217) nounwind
  %717 = tail call double @_Z3expd(double %extract1218) nounwind
  %718 = tail call double @_Z3expd(double %extract1219) nounwind
  %719 = tail call double @_Z3expd(double %extract1220) nounwind
  %720 = tail call double @_Z3expd(double %extract1221) nounwind
  %721 = tail call double @_Z3expd(double %extract1222) nounwind
  %temp.vect1223 = insertelement <16 x double> undef, double %706, i32 0
  %temp.vect1224 = insertelement <16 x double> %temp.vect1223, double %707, i32 1
  %temp.vect1225 = insertelement <16 x double> %temp.vect1224, double %708, i32 2
  %temp.vect1226 = insertelement <16 x double> %temp.vect1225, double %709, i32 3
  %temp.vect1227 = insertelement <16 x double> %temp.vect1226, double %710, i32 4
  %temp.vect1228 = insertelement <16 x double> %temp.vect1227, double %711, i32 5
  %temp.vect1229 = insertelement <16 x double> %temp.vect1228, double %712, i32 6
  %temp.vect1230 = insertelement <16 x double> %temp.vect1229, double %713, i32 7
  %temp.vect1231 = insertelement <16 x double> %temp.vect1230, double %714, i32 8
  %temp.vect1232 = insertelement <16 x double> %temp.vect1231, double %715, i32 9
  %temp.vect1233 = insertelement <16 x double> %temp.vect1232, double %716, i32 10
  %temp.vect1234 = insertelement <16 x double> %temp.vect1233, double %717, i32 11
  %temp.vect1235 = insertelement <16 x double> %temp.vect1234, double %718, i32 12
  %temp.vect1236 = insertelement <16 x double> %temp.vect1235, double %719, i32 13
  %temp.vect1237 = insertelement <16 x double> %temp.vect1236, double %720, i32 14
  %temp.vect1238 = insertelement <16 x double> %temp.vect1237, double %721, i32 15
  %722 = fmul <16 x double> %temp.vect1238, <double 5.757000e-01, double 5.757000e-01, double 5.757000e-01, double 5.757000e-01, double 5.757000e-01, double 5.757000e-01, double 5.757000e-01, double 5.757000e-01, double 5.757000e-01, double 5.757000e-01, double 5.757000e-01, double 5.757000e-01, double 5.757000e-01, double 5.757000e-01, double 5.757000e-01, double 5.757000e-01>
  %723 = fadd <16 x double> %704, %722
  %724 = fmul <16 x double> %329, <double -5.069000e+03, double -5.069000e+03, double -5.069000e+03, double -5.069000e+03, double -5.069000e+03, double -5.069000e+03, double -5.069000e+03, double -5.069000e+03, double -5.069000e+03, double -5.069000e+03, double -5.069000e+03, double -5.069000e+03, double -5.069000e+03, double -5.069000e+03, double -5.069000e+03, double -5.069000e+03>
  %extract1239 = extractelement <16 x double> %724, i32 0
  %extract1240 = extractelement <16 x double> %724, i32 1
  %extract1241 = extractelement <16 x double> %724, i32 2
  %extract1242 = extractelement <16 x double> %724, i32 3
  %extract1243 = extractelement <16 x double> %724, i32 4
  %extract1244 = extractelement <16 x double> %724, i32 5
  %extract1245 = extractelement <16 x double> %724, i32 6
  %extract1246 = extractelement <16 x double> %724, i32 7
  %extract1247 = extractelement <16 x double> %724, i32 8
  %extract1248 = extractelement <16 x double> %724, i32 9
  %extract1249 = extractelement <16 x double> %724, i32 10
  %extract1250 = extractelement <16 x double> %724, i32 11
  %extract1251 = extractelement <16 x double> %724, i32 12
  %extract1252 = extractelement <16 x double> %724, i32 13
  %extract1253 = extractelement <16 x double> %724, i32 14
  %extract1254 = extractelement <16 x double> %724, i32 15
  %725 = tail call double @_Z3expd(double %extract1239) nounwind
  %726 = tail call double @_Z3expd(double %extract1240) nounwind
  %727 = tail call double @_Z3expd(double %extract1241) nounwind
  %728 = tail call double @_Z3expd(double %extract1242) nounwind
  %729 = tail call double @_Z3expd(double %extract1243) nounwind
  %730 = tail call double @_Z3expd(double %extract1244) nounwind
  %731 = tail call double @_Z3expd(double %extract1245) nounwind
  %732 = tail call double @_Z3expd(double %extract1246) nounwind
  %733 = tail call double @_Z3expd(double %extract1247) nounwind
  %734 = tail call double @_Z3expd(double %extract1248) nounwind
  %735 = tail call double @_Z3expd(double %extract1249) nounwind
  %736 = tail call double @_Z3expd(double %extract1250) nounwind
  %737 = tail call double @_Z3expd(double %extract1251) nounwind
  %738 = tail call double @_Z3expd(double %extract1252) nounwind
  %739 = tail call double @_Z3expd(double %extract1253) nounwind
  %740 = tail call double @_Z3expd(double %extract1254) nounwind
  %temp.vect1255 = insertelement <16 x double> undef, double %725, i32 0
  %temp.vect1256 = insertelement <16 x double> %temp.vect1255, double %726, i32 1
  %temp.vect1257 = insertelement <16 x double> %temp.vect1256, double %727, i32 2
  %temp.vect1258 = insertelement <16 x double> %temp.vect1257, double %728, i32 3
  %temp.vect1259 = insertelement <16 x double> %temp.vect1258, double %729, i32 4
  %temp.vect1260 = insertelement <16 x double> %temp.vect1259, double %730, i32 5
  %temp.vect1261 = insertelement <16 x double> %temp.vect1260, double %731, i32 6
  %temp.vect1262 = insertelement <16 x double> %temp.vect1261, double %732, i32 7
  %temp.vect1263 = insertelement <16 x double> %temp.vect1262, double %733, i32 8
  %temp.vect1264 = insertelement <16 x double> %temp.vect1263, double %734, i32 9
  %temp.vect1265 = insertelement <16 x double> %temp.vect1264, double %735, i32 10
  %temp.vect1266 = insertelement <16 x double> %temp.vect1265, double %736, i32 11
  %temp.vect1267 = insertelement <16 x double> %temp.vect1266, double %737, i32 12
  %temp.vect1268 = insertelement <16 x double> %temp.vect1267, double %738, i32 13
  %temp.vect1269 = insertelement <16 x double> %temp.vect1268, double %739, i32 14
  %temp.vect1270 = insertelement <16 x double> %temp.vect1269, double %740, i32 15
  %741 = fadd <16 x double> %723, %temp.vect1270
  %extract1271 = extractelement <16 x double> %741, i32 0
  %extract1272 = extractelement <16 x double> %741, i32 1
  %extract1273 = extractelement <16 x double> %741, i32 2
  %extract1274 = extractelement <16 x double> %741, i32 3
  %extract1275 = extractelement <16 x double> %741, i32 4
  %extract1276 = extractelement <16 x double> %741, i32 5
  %extract1277 = extractelement <16 x double> %741, i32 6
  %extract1278 = extractelement <16 x double> %741, i32 7
  %extract1279 = extractelement <16 x double> %741, i32 8
  %extract1280 = extractelement <16 x double> %741, i32 9
  %extract1281 = extractelement <16 x double> %741, i32 10
  %extract1282 = extractelement <16 x double> %741, i32 11
  %extract1283 = extractelement <16 x double> %741, i32 12
  %extract1284 = extractelement <16 x double> %741, i32 13
  %extract1285 = extractelement <16 x double> %741, i32 14
  %extract1286 = extractelement <16 x double> %741, i32 15
  %742 = tail call double @_Z4fmaxdd(double %extract1271, double 1.000000e-200) nounwind
  %743 = tail call double @_Z4fmaxdd(double %extract1272, double 1.000000e-200) nounwind
  %744 = tail call double @_Z4fmaxdd(double %extract1273, double 1.000000e-200) nounwind
  %745 = tail call double @_Z4fmaxdd(double %extract1274, double 1.000000e-200) nounwind
  %746 = tail call double @_Z4fmaxdd(double %extract1275, double 1.000000e-200) nounwind
  %747 = tail call double @_Z4fmaxdd(double %extract1276, double 1.000000e-200) nounwind
  %748 = tail call double @_Z4fmaxdd(double %extract1277, double 1.000000e-200) nounwind
  %749 = tail call double @_Z4fmaxdd(double %extract1278, double 1.000000e-200) nounwind
  %750 = tail call double @_Z4fmaxdd(double %extract1279, double 1.000000e-200) nounwind
  %751 = tail call double @_Z4fmaxdd(double %extract1280, double 1.000000e-200) nounwind
  %752 = tail call double @_Z4fmaxdd(double %extract1281, double 1.000000e-200) nounwind
  %753 = tail call double @_Z4fmaxdd(double %extract1282, double 1.000000e-200) nounwind
  %754 = tail call double @_Z4fmaxdd(double %extract1283, double 1.000000e-200) nounwind
  %755 = tail call double @_Z4fmaxdd(double %extract1284, double 1.000000e-200) nounwind
  %756 = tail call double @_Z4fmaxdd(double %extract1285, double 1.000000e-200) nounwind
  %757 = tail call double @_Z4fmaxdd(double %extract1286, double 1.000000e-200) nounwind
  %758 = tail call double @_Z5log10d(double %742) nounwind
  %759 = tail call double @_Z5log10d(double %743) nounwind
  %760 = tail call double @_Z5log10d(double %744) nounwind
  %761 = tail call double @_Z5log10d(double %745) nounwind
  %762 = tail call double @_Z5log10d(double %746) nounwind
  %763 = tail call double @_Z5log10d(double %747) nounwind
  %764 = tail call double @_Z5log10d(double %748) nounwind
  %765 = tail call double @_Z5log10d(double %749) nounwind
  %766 = tail call double @_Z5log10d(double %750) nounwind
  %767 = tail call double @_Z5log10d(double %751) nounwind
  %768 = tail call double @_Z5log10d(double %752) nounwind
  %769 = tail call double @_Z5log10d(double %753) nounwind
  %770 = tail call double @_Z5log10d(double %754) nounwind
  %771 = tail call double @_Z5log10d(double %755) nounwind
  %772 = tail call double @_Z5log10d(double %756) nounwind
  %773 = tail call double @_Z5log10d(double %757) nounwind
  %temp.vect1287 = insertelement <16 x double> undef, double %758, i32 0
  %temp.vect1288 = insertelement <16 x double> %temp.vect1287, double %759, i32 1
  %temp.vect1289 = insertelement <16 x double> %temp.vect1288, double %760, i32 2
  %temp.vect1290 = insertelement <16 x double> %temp.vect1289, double %761, i32 3
  %temp.vect1291 = insertelement <16 x double> %temp.vect1290, double %762, i32 4
  %temp.vect1292 = insertelement <16 x double> %temp.vect1291, double %763, i32 5
  %temp.vect1293 = insertelement <16 x double> %temp.vect1292, double %764, i32 6
  %temp.vect1294 = insertelement <16 x double> %temp.vect1293, double %765, i32 7
  %temp.vect1295 = insertelement <16 x double> %temp.vect1294, double %766, i32 8
  %temp.vect1296 = insertelement <16 x double> %temp.vect1295, double %767, i32 9
  %temp.vect1297 = insertelement <16 x double> %temp.vect1296, double %768, i32 10
  %temp.vect1298 = insertelement <16 x double> %temp.vect1297, double %769, i32 11
  %temp.vect1299 = insertelement <16 x double> %temp.vect1298, double %770, i32 12
  %temp.vect1300 = insertelement <16 x double> %temp.vect1299, double %771, i32 13
  %temp.vect1301 = insertelement <16 x double> %temp.vect1300, double %772, i32 14
  %temp.vect1302 = insertelement <16 x double> %temp.vect1301, double %773, i32 15
  %774 = fmul <16 x double> %temp.vect1302, <double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00>
  %775 = fsub <16 x double> <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>, %774
  %776 = fmul <16 x double> %temp.vect1302, <double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01>
  %777 = fadd <16 x double> %776, <double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01>
  %778 = fsub <16 x double> %temp.vect1318, %777
  %779 = fmul <16 x double> %778, <double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01>
  %780 = fsub <16 x double> %775, %779
  %781 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %780
  %782 = fmul <16 x double> %778, %781
  %783 = fmul <16 x double> %782, %782
  %784 = fadd <16 x double> %783, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %785 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %784
  %786 = fmul <16 x double> %temp.vect1302, %785
  %extract1319 = extractelement <16 x double> %786, i32 0
  %extract1320 = extractelement <16 x double> %786, i32 1
  %extract1321 = extractelement <16 x double> %786, i32 2
  %extract1322 = extractelement <16 x double> %786, i32 3
  %extract1323 = extractelement <16 x double> %786, i32 4
  %extract1324 = extractelement <16 x double> %786, i32 5
  %extract1325 = extractelement <16 x double> %786, i32 6
  %extract1326 = extractelement <16 x double> %786, i32 7
  %extract1327 = extractelement <16 x double> %786, i32 8
  %extract1328 = extractelement <16 x double> %786, i32 9
  %extract1329 = extractelement <16 x double> %786, i32 10
  %extract1330 = extractelement <16 x double> %786, i32 11
  %extract1331 = extractelement <16 x double> %786, i32 12
  %extract1332 = extractelement <16 x double> %786, i32 13
  %extract1333 = extractelement <16 x double> %786, i32 14
  %extract1334 = extractelement <16 x double> %786, i32 15
  %787 = tail call double @_Z5exp10d(double %extract1319) nounwind
  %788 = tail call double @_Z5exp10d(double %extract1320) nounwind
  %789 = tail call double @_Z5exp10d(double %extract1321) nounwind
  %790 = tail call double @_Z5exp10d(double %extract1322) nounwind
  %791 = tail call double @_Z5exp10d(double %extract1323) nounwind
  %792 = tail call double @_Z5exp10d(double %extract1324) nounwind
  %793 = tail call double @_Z5exp10d(double %extract1325) nounwind
  %794 = tail call double @_Z5exp10d(double %extract1326) nounwind
  %795 = tail call double @_Z5exp10d(double %extract1327) nounwind
  %796 = tail call double @_Z5exp10d(double %extract1328) nounwind
  %797 = tail call double @_Z5exp10d(double %extract1329) nounwind
  %798 = tail call double @_Z5exp10d(double %extract1330) nounwind
  %799 = tail call double @_Z5exp10d(double %extract1331) nounwind
  %800 = tail call double @_Z5exp10d(double %extract1332) nounwind
  %801 = tail call double @_Z5exp10d(double %extract1333) nounwind
  %802 = tail call double @_Z5exp10d(double %extract1334) nounwind
  %temp.vect1335 = insertelement <16 x double> undef, double %787, i32 0
  %temp.vect1336 = insertelement <16 x double> %temp.vect1335, double %788, i32 1
  %temp.vect1337 = insertelement <16 x double> %temp.vect1336, double %789, i32 2
  %temp.vect1338 = insertelement <16 x double> %temp.vect1337, double %790, i32 3
  %temp.vect1339 = insertelement <16 x double> %temp.vect1338, double %791, i32 4
  %temp.vect1340 = insertelement <16 x double> %temp.vect1339, double %792, i32 5
  %temp.vect1341 = insertelement <16 x double> %temp.vect1340, double %793, i32 6
  %temp.vect1342 = insertelement <16 x double> %temp.vect1341, double %794, i32 7
  %temp.vect1343 = insertelement <16 x double> %temp.vect1342, double %795, i32 8
  %temp.vect1344 = insertelement <16 x double> %temp.vect1343, double %796, i32 9
  %temp.vect1345 = insertelement <16 x double> %temp.vect1344, double %797, i32 10
  %temp.vect1346 = insertelement <16 x double> %temp.vect1345, double %798, i32 11
  %temp.vect1347 = insertelement <16 x double> %temp.vect1346, double %799, i32 12
  %temp.vect1348 = insertelement <16 x double> %temp.vect1347, double %800, i32 13
  %temp.vect1349 = insertelement <16 x double> %temp.vect1348, double %801, i32 14
  %temp.vect1350 = insertelement <16 x double> %temp.vect1349, double %802, i32 15
  %803 = fmul <16 x double> %temp.vect1350, %654
  %804 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %805 = load i64* %804, align 8
  %806 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %807 = load i64* %806, align 8
  %808 = add i64 %805, %807
  %extract1353 = add i64 %808, 4202496
  %809 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1353
  %ptrTypeCast1369 = bitcast double addrspace(1)* %809 to <16 x double> addrspace(1)*
  %810 = load <16 x double> addrspace(1)* %ptrTypeCast1369, align 8
  %811 = fmul <16 x double> %810, %803
  %812 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %813 = load i64* %812, align 8
  %814 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %815 = load i64* %814, align 8
  %816 = add i64 %813, %815
  %extract1372 = add i64 %816, 4202496
  %817 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1372
  %ptrTypeCast1388 = bitcast double addrspace(1)* %817 to <16 x double> addrspace(1)*
  store <16 x double> %811, <16 x double> addrspace(1)* %ptrTypeCast1388, align 8
  %818 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %819 = load i64* %818, align 8
  %820 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %821 = load i64* %820, align 8
  %822 = add i64 %819, %821
  %extract1391 = add i64 %822, 4202496
  %823 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract1391
  %ptrTypeCast1407 = bitcast double addrspace(1)* %823 to <16 x double> addrspace(1)*
  %824 = load <16 x double> addrspace(1)* %ptrTypeCast1407, align 8
  %825 = fmul <16 x double> %824, %803
  %826 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %827 = load i64* %826, align 8
  %828 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %829 = load i64* %828, align 8
  %830 = add i64 %827, %829
  %extract1410 = add i64 %830, 4202496
  %831 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract1410
  %ptrTypeCast1426 = bitcast double addrspace(1)* %831 to <16 x double> addrspace(1)*
  store <16 x double> %825, <16 x double> addrspace(1)* %ptrTypeCast1426, align 8
  %832 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %833 = load i64* %832, align 8
  %834 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %835 = load i64* %834, align 8
  %836 = add i64 %833, %835
  %extract1429 = add i64 %836, 331776
  %837 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %extract1429
  %ptrTypeCast1445 = bitcast double addrspace(1)* %837 to <16 x double> addrspace(1)*
  %838 = load <16 x double> addrspace(1)* %ptrTypeCast1445, align 8
  %839 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %840 = load i64* %839, align 8
  %841 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %842 = load i64* %841, align 8
  %843 = add i64 %840, %842
  %extract1448 = add i64 %843, 4423680
  %844 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1448
  %ptrTypeCast1464 = bitcast double addrspace(1)* %844 to <16 x double> addrspace(1)*
  %845 = load <16 x double> addrspace(1)* %ptrTypeCast1464, align 8
  %846 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %845
  %847 = fmul <16 x double> %101, %846
  %848 = fmul <16 x double> %838, %847
  %extract1465 = extractelement <16 x double> %848, i32 0
  %extract1466 = extractelement <16 x double> %848, i32 1
  %extract1467 = extractelement <16 x double> %848, i32 2
  %extract1468 = extractelement <16 x double> %848, i32 3
  %extract1469 = extractelement <16 x double> %848, i32 4
  %extract1470 = extractelement <16 x double> %848, i32 5
  %extract1471 = extractelement <16 x double> %848, i32 6
  %extract1472 = extractelement <16 x double> %848, i32 7
  %extract1473 = extractelement <16 x double> %848, i32 8
  %extract1474 = extractelement <16 x double> %848, i32 9
  %extract1475 = extractelement <16 x double> %848, i32 10
  %extract1476 = extractelement <16 x double> %848, i32 11
  %extract1477 = extractelement <16 x double> %848, i32 12
  %extract1478 = extractelement <16 x double> %848, i32 13
  %extract1479 = extractelement <16 x double> %848, i32 14
  %extract1480 = extractelement <16 x double> %848, i32 15
  %849 = fadd <16 x double> %848, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %850 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %849
  %851 = fmul <16 x double> %848, %850
  %852 = tail call double @_Z4fmaxdd(double %extract1465, double 1.000000e-200) nounwind
  %853 = tail call double @_Z4fmaxdd(double %extract1466, double 1.000000e-200) nounwind
  %854 = tail call double @_Z4fmaxdd(double %extract1467, double 1.000000e-200) nounwind
  %855 = tail call double @_Z4fmaxdd(double %extract1468, double 1.000000e-200) nounwind
  %856 = tail call double @_Z4fmaxdd(double %extract1469, double 1.000000e-200) nounwind
  %857 = tail call double @_Z4fmaxdd(double %extract1470, double 1.000000e-200) nounwind
  %858 = tail call double @_Z4fmaxdd(double %extract1471, double 1.000000e-200) nounwind
  %859 = tail call double @_Z4fmaxdd(double %extract1472, double 1.000000e-200) nounwind
  %860 = tail call double @_Z4fmaxdd(double %extract1473, double 1.000000e-200) nounwind
  %861 = tail call double @_Z4fmaxdd(double %extract1474, double 1.000000e-200) nounwind
  %862 = tail call double @_Z4fmaxdd(double %extract1475, double 1.000000e-200) nounwind
  %863 = tail call double @_Z4fmaxdd(double %extract1476, double 1.000000e-200) nounwind
  %864 = tail call double @_Z4fmaxdd(double %extract1477, double 1.000000e-200) nounwind
  %865 = tail call double @_Z4fmaxdd(double %extract1478, double 1.000000e-200) nounwind
  %866 = tail call double @_Z4fmaxdd(double %extract1479, double 1.000000e-200) nounwind
  %867 = tail call double @_Z4fmaxdd(double %extract1480, double 1.000000e-200) nounwind
  %868 = tail call double @_Z5log10d(double %852) nounwind
  %869 = tail call double @_Z5log10d(double %853) nounwind
  %870 = tail call double @_Z5log10d(double %854) nounwind
  %871 = tail call double @_Z5log10d(double %855) nounwind
  %872 = tail call double @_Z5log10d(double %856) nounwind
  %873 = tail call double @_Z5log10d(double %857) nounwind
  %874 = tail call double @_Z5log10d(double %858) nounwind
  %875 = tail call double @_Z5log10d(double %859) nounwind
  %876 = tail call double @_Z5log10d(double %860) nounwind
  %877 = tail call double @_Z5log10d(double %861) nounwind
  %878 = tail call double @_Z5log10d(double %862) nounwind
  %879 = tail call double @_Z5log10d(double %863) nounwind
  %880 = tail call double @_Z5log10d(double %864) nounwind
  %881 = tail call double @_Z5log10d(double %865) nounwind
  %882 = tail call double @_Z5log10d(double %866) nounwind
  %883 = tail call double @_Z5log10d(double %867) nounwind
  %temp.vect1609 = insertelement <16 x double> undef, double %868, i32 0
  %temp.vect1610 = insertelement <16 x double> %temp.vect1609, double %869, i32 1
  %temp.vect1611 = insertelement <16 x double> %temp.vect1610, double %870, i32 2
  %temp.vect1612 = insertelement <16 x double> %temp.vect1611, double %871, i32 3
  %temp.vect1613 = insertelement <16 x double> %temp.vect1612, double %872, i32 4
  %temp.vect1614 = insertelement <16 x double> %temp.vect1613, double %873, i32 5
  %temp.vect1615 = insertelement <16 x double> %temp.vect1614, double %874, i32 6
  %temp.vect1616 = insertelement <16 x double> %temp.vect1615, double %875, i32 7
  %temp.vect1617 = insertelement <16 x double> %temp.vect1616, double %876, i32 8
  %temp.vect1618 = insertelement <16 x double> %temp.vect1617, double %877, i32 9
  %temp.vect1619 = insertelement <16 x double> %temp.vect1618, double %878, i32 10
  %temp.vect1620 = insertelement <16 x double> %temp.vect1619, double %879, i32 11
  %temp.vect1621 = insertelement <16 x double> %temp.vect1620, double %880, i32 12
  %temp.vect1622 = insertelement <16 x double> %temp.vect1621, double %881, i32 13
  %temp.vect1623 = insertelement <16 x double> %temp.vect1622, double %882, i32 14
  %temp.vect1624 = insertelement <16 x double> %temp.vect1623, double %883, i32 15
  %884 = fmul <16 x double> %7, <double 0xBF6E3A9179DC1A73, double 0xBF6E3A9179DC1A73, double 0xBF6E3A9179DC1A73, double 0xBF6E3A9179DC1A73, double 0xBF6E3A9179DC1A73, double 0xBF6E3A9179DC1A73, double 0xBF6E3A9179DC1A73, double 0xBF6E3A9179DC1A73, double 0xBF6E3A9179DC1A73, double 0xBF6E3A9179DC1A73, double 0xBF6E3A9179DC1A73, double 0xBF6E3A9179DC1A73, double 0xBF6E3A9179DC1A73, double 0xBF6E3A9179DC1A73, double 0xBF6E3A9179DC1A73, double 0xBF6E3A9179DC1A73>
  %extract1481 = extractelement <16 x double> %884, i32 0
  %extract1482 = extractelement <16 x double> %884, i32 1
  %extract1483 = extractelement <16 x double> %884, i32 2
  %extract1484 = extractelement <16 x double> %884, i32 3
  %extract1485 = extractelement <16 x double> %884, i32 4
  %extract1486 = extractelement <16 x double> %884, i32 5
  %extract1487 = extractelement <16 x double> %884, i32 6
  %extract1488 = extractelement <16 x double> %884, i32 7
  %extract1489 = extractelement <16 x double> %884, i32 8
  %extract1490 = extractelement <16 x double> %884, i32 9
  %extract1491 = extractelement <16 x double> %884, i32 10
  %extract1492 = extractelement <16 x double> %884, i32 11
  %extract1493 = extractelement <16 x double> %884, i32 12
  %extract1494 = extractelement <16 x double> %884, i32 13
  %extract1495 = extractelement <16 x double> %884, i32 14
  %extract1496 = extractelement <16 x double> %884, i32 15
  %885 = tail call double @_Z3expd(double %extract1481) nounwind
  %886 = tail call double @_Z3expd(double %extract1482) nounwind
  %887 = tail call double @_Z3expd(double %extract1483) nounwind
  %888 = tail call double @_Z3expd(double %extract1484) nounwind
  %889 = tail call double @_Z3expd(double %extract1485) nounwind
  %890 = tail call double @_Z3expd(double %extract1486) nounwind
  %891 = tail call double @_Z3expd(double %extract1487) nounwind
  %892 = tail call double @_Z3expd(double %extract1488) nounwind
  %893 = tail call double @_Z3expd(double %extract1489) nounwind
  %894 = tail call double @_Z3expd(double %extract1490) nounwind
  %895 = tail call double @_Z3expd(double %extract1491) nounwind
  %896 = tail call double @_Z3expd(double %extract1492) nounwind
  %897 = tail call double @_Z3expd(double %extract1493) nounwind
  %898 = tail call double @_Z3expd(double %extract1494) nounwind
  %899 = tail call double @_Z3expd(double %extract1495) nounwind
  %900 = tail call double @_Z3expd(double %extract1496) nounwind
  %temp.vect1497 = insertelement <16 x double> undef, double %885, i32 0
  %temp.vect1498 = insertelement <16 x double> %temp.vect1497, double %886, i32 1
  %temp.vect1499 = insertelement <16 x double> %temp.vect1498, double %887, i32 2
  %temp.vect1500 = insertelement <16 x double> %temp.vect1499, double %888, i32 3
  %temp.vect1501 = insertelement <16 x double> %temp.vect1500, double %889, i32 4
  %temp.vect1502 = insertelement <16 x double> %temp.vect1501, double %890, i32 5
  %temp.vect1503 = insertelement <16 x double> %temp.vect1502, double %891, i32 6
  %temp.vect1504 = insertelement <16 x double> %temp.vect1503, double %892, i32 7
  %temp.vect1505 = insertelement <16 x double> %temp.vect1504, double %893, i32 8
  %temp.vect1506 = insertelement <16 x double> %temp.vect1505, double %894, i32 9
  %temp.vect1507 = insertelement <16 x double> %temp.vect1506, double %895, i32 10
  %temp.vect1508 = insertelement <16 x double> %temp.vect1507, double %896, i32 11
  %temp.vect1509 = insertelement <16 x double> %temp.vect1508, double %897, i32 12
  %temp.vect1510 = insertelement <16 x double> %temp.vect1509, double %898, i32 13
  %temp.vect1511 = insertelement <16 x double> %temp.vect1510, double %899, i32 14
  %temp.vect1512 = insertelement <16 x double> %temp.vect1511, double %900, i32 15
  %901 = fmul <16 x double> %temp.vect1512, <double 2.176000e-01, double 2.176000e-01, double 2.176000e-01, double 2.176000e-01, double 2.176000e-01, double 2.176000e-01, double 2.176000e-01, double 2.176000e-01, double 2.176000e-01, double 2.176000e-01, double 2.176000e-01, double 2.176000e-01, double 2.176000e-01, double 2.176000e-01, double 2.176000e-01, double 2.176000e-01>
  %902 = fmul <16 x double> %7, <double 0xBF37C9BBCB978E43, double 0xBF37C9BBCB978E43, double 0xBF37C9BBCB978E43, double 0xBF37C9BBCB978E43, double 0xBF37C9BBCB978E43, double 0xBF37C9BBCB978E43, double 0xBF37C9BBCB978E43, double 0xBF37C9BBCB978E43, double 0xBF37C9BBCB978E43, double 0xBF37C9BBCB978E43, double 0xBF37C9BBCB978E43, double 0xBF37C9BBCB978E43, double 0xBF37C9BBCB978E43, double 0xBF37C9BBCB978E43, double 0xBF37C9BBCB978E43, double 0xBF37C9BBCB978E43>
  %extract1513 = extractelement <16 x double> %902, i32 0
  %extract1514 = extractelement <16 x double> %902, i32 1
  %extract1515 = extractelement <16 x double> %902, i32 2
  %extract1516 = extractelement <16 x double> %902, i32 3
  %extract1517 = extractelement <16 x double> %902, i32 4
  %extract1518 = extractelement <16 x double> %902, i32 5
  %extract1519 = extractelement <16 x double> %902, i32 6
  %extract1520 = extractelement <16 x double> %902, i32 7
  %extract1521 = extractelement <16 x double> %902, i32 8
  %extract1522 = extractelement <16 x double> %902, i32 9
  %extract1523 = extractelement <16 x double> %902, i32 10
  %extract1524 = extractelement <16 x double> %902, i32 11
  %extract1525 = extractelement <16 x double> %902, i32 12
  %extract1526 = extractelement <16 x double> %902, i32 13
  %extract1527 = extractelement <16 x double> %902, i32 14
  %extract1528 = extractelement <16 x double> %902, i32 15
  %903 = tail call double @_Z3expd(double %extract1513) nounwind
  %904 = tail call double @_Z3expd(double %extract1514) nounwind
  %905 = tail call double @_Z3expd(double %extract1515) nounwind
  %906 = tail call double @_Z3expd(double %extract1516) nounwind
  %907 = tail call double @_Z3expd(double %extract1517) nounwind
  %908 = tail call double @_Z3expd(double %extract1518) nounwind
  %909 = tail call double @_Z3expd(double %extract1519) nounwind
  %910 = tail call double @_Z3expd(double %extract1520) nounwind
  %911 = tail call double @_Z3expd(double %extract1521) nounwind
  %912 = tail call double @_Z3expd(double %extract1522) nounwind
  %913 = tail call double @_Z3expd(double %extract1523) nounwind
  %914 = tail call double @_Z3expd(double %extract1524) nounwind
  %915 = tail call double @_Z3expd(double %extract1525) nounwind
  %916 = tail call double @_Z3expd(double %extract1526) nounwind
  %917 = tail call double @_Z3expd(double %extract1527) nounwind
  %918 = tail call double @_Z3expd(double %extract1528) nounwind
  %temp.vect1529 = insertelement <16 x double> undef, double %903, i32 0
  %temp.vect1530 = insertelement <16 x double> %temp.vect1529, double %904, i32 1
  %temp.vect1531 = insertelement <16 x double> %temp.vect1530, double %905, i32 2
  %temp.vect1532 = insertelement <16 x double> %temp.vect1531, double %906, i32 3
  %temp.vect1533 = insertelement <16 x double> %temp.vect1532, double %907, i32 4
  %temp.vect1534 = insertelement <16 x double> %temp.vect1533, double %908, i32 5
  %temp.vect1535 = insertelement <16 x double> %temp.vect1534, double %909, i32 6
  %temp.vect1536 = insertelement <16 x double> %temp.vect1535, double %910, i32 7
  %temp.vect1537 = insertelement <16 x double> %temp.vect1536, double %911, i32 8
  %temp.vect1538 = insertelement <16 x double> %temp.vect1537, double %912, i32 9
  %temp.vect1539 = insertelement <16 x double> %temp.vect1538, double %913, i32 10
  %temp.vect1540 = insertelement <16 x double> %temp.vect1539, double %914, i32 11
  %temp.vect1541 = insertelement <16 x double> %temp.vect1540, double %915, i32 12
  %temp.vect1542 = insertelement <16 x double> %temp.vect1541, double %916, i32 13
  %temp.vect1543 = insertelement <16 x double> %temp.vect1542, double %917, i32 14
  %temp.vect1544 = insertelement <16 x double> %temp.vect1543, double %918, i32 15
  %919 = fmul <16 x double> %temp.vect1544, <double 7.824000e-01, double 7.824000e-01, double 7.824000e-01, double 7.824000e-01, double 7.824000e-01, double 7.824000e-01, double 7.824000e-01, double 7.824000e-01, double 7.824000e-01, double 7.824000e-01, double 7.824000e-01, double 7.824000e-01, double 7.824000e-01, double 7.824000e-01, double 7.824000e-01, double 7.824000e-01>
  %920 = fadd <16 x double> %901, %919
  %921 = fmul <16 x double> %329, <double -6.570000e+03, double -6.570000e+03, double -6.570000e+03, double -6.570000e+03, double -6.570000e+03, double -6.570000e+03, double -6.570000e+03, double -6.570000e+03, double -6.570000e+03, double -6.570000e+03, double -6.570000e+03, double -6.570000e+03, double -6.570000e+03, double -6.570000e+03, double -6.570000e+03, double -6.570000e+03>
  %extract1545 = extractelement <16 x double> %921, i32 0
  %extract1546 = extractelement <16 x double> %921, i32 1
  %extract1547 = extractelement <16 x double> %921, i32 2
  %extract1548 = extractelement <16 x double> %921, i32 3
  %extract1549 = extractelement <16 x double> %921, i32 4
  %extract1550 = extractelement <16 x double> %921, i32 5
  %extract1551 = extractelement <16 x double> %921, i32 6
  %extract1552 = extractelement <16 x double> %921, i32 7
  %extract1553 = extractelement <16 x double> %921, i32 8
  %extract1554 = extractelement <16 x double> %921, i32 9
  %extract1555 = extractelement <16 x double> %921, i32 10
  %extract1556 = extractelement <16 x double> %921, i32 11
  %extract1557 = extractelement <16 x double> %921, i32 12
  %extract1558 = extractelement <16 x double> %921, i32 13
  %extract1559 = extractelement <16 x double> %921, i32 14
  %extract1560 = extractelement <16 x double> %921, i32 15
  %922 = tail call double @_Z3expd(double %extract1545) nounwind
  %923 = tail call double @_Z3expd(double %extract1546) nounwind
  %924 = tail call double @_Z3expd(double %extract1547) nounwind
  %925 = tail call double @_Z3expd(double %extract1548) nounwind
  %926 = tail call double @_Z3expd(double %extract1549) nounwind
  %927 = tail call double @_Z3expd(double %extract1550) nounwind
  %928 = tail call double @_Z3expd(double %extract1551) nounwind
  %929 = tail call double @_Z3expd(double %extract1552) nounwind
  %930 = tail call double @_Z3expd(double %extract1553) nounwind
  %931 = tail call double @_Z3expd(double %extract1554) nounwind
  %932 = tail call double @_Z3expd(double %extract1555) nounwind
  %933 = tail call double @_Z3expd(double %extract1556) nounwind
  %934 = tail call double @_Z3expd(double %extract1557) nounwind
  %935 = tail call double @_Z3expd(double %extract1558) nounwind
  %936 = tail call double @_Z3expd(double %extract1559) nounwind
  %937 = tail call double @_Z3expd(double %extract1560) nounwind
  %temp.vect1561 = insertelement <16 x double> undef, double %922, i32 0
  %temp.vect1562 = insertelement <16 x double> %temp.vect1561, double %923, i32 1
  %temp.vect1563 = insertelement <16 x double> %temp.vect1562, double %924, i32 2
  %temp.vect1564 = insertelement <16 x double> %temp.vect1563, double %925, i32 3
  %temp.vect1565 = insertelement <16 x double> %temp.vect1564, double %926, i32 4
  %temp.vect1566 = insertelement <16 x double> %temp.vect1565, double %927, i32 5
  %temp.vect1567 = insertelement <16 x double> %temp.vect1566, double %928, i32 6
  %temp.vect1568 = insertelement <16 x double> %temp.vect1567, double %929, i32 7
  %temp.vect1569 = insertelement <16 x double> %temp.vect1568, double %930, i32 8
  %temp.vect1570 = insertelement <16 x double> %temp.vect1569, double %931, i32 9
  %temp.vect1571 = insertelement <16 x double> %temp.vect1570, double %932, i32 10
  %temp.vect1572 = insertelement <16 x double> %temp.vect1571, double %933, i32 11
  %temp.vect1573 = insertelement <16 x double> %temp.vect1572, double %934, i32 12
  %temp.vect1574 = insertelement <16 x double> %temp.vect1573, double %935, i32 13
  %temp.vect1575 = insertelement <16 x double> %temp.vect1574, double %936, i32 14
  %temp.vect1576 = insertelement <16 x double> %temp.vect1575, double %937, i32 15
  %938 = fadd <16 x double> %920, %temp.vect1576
  %extract1577 = extractelement <16 x double> %938, i32 0
  %extract1578 = extractelement <16 x double> %938, i32 1
  %extract1579 = extractelement <16 x double> %938, i32 2
  %extract1580 = extractelement <16 x double> %938, i32 3
  %extract1581 = extractelement <16 x double> %938, i32 4
  %extract1582 = extractelement <16 x double> %938, i32 5
  %extract1583 = extractelement <16 x double> %938, i32 6
  %extract1584 = extractelement <16 x double> %938, i32 7
  %extract1585 = extractelement <16 x double> %938, i32 8
  %extract1586 = extractelement <16 x double> %938, i32 9
  %extract1587 = extractelement <16 x double> %938, i32 10
  %extract1588 = extractelement <16 x double> %938, i32 11
  %extract1589 = extractelement <16 x double> %938, i32 12
  %extract1590 = extractelement <16 x double> %938, i32 13
  %extract1591 = extractelement <16 x double> %938, i32 14
  %extract1592 = extractelement <16 x double> %938, i32 15
  %939 = tail call double @_Z4fmaxdd(double %extract1577, double 1.000000e-200) nounwind
  %940 = tail call double @_Z4fmaxdd(double %extract1578, double 1.000000e-200) nounwind
  %941 = tail call double @_Z4fmaxdd(double %extract1579, double 1.000000e-200) nounwind
  %942 = tail call double @_Z4fmaxdd(double %extract1580, double 1.000000e-200) nounwind
  %943 = tail call double @_Z4fmaxdd(double %extract1581, double 1.000000e-200) nounwind
  %944 = tail call double @_Z4fmaxdd(double %extract1582, double 1.000000e-200) nounwind
  %945 = tail call double @_Z4fmaxdd(double %extract1583, double 1.000000e-200) nounwind
  %946 = tail call double @_Z4fmaxdd(double %extract1584, double 1.000000e-200) nounwind
  %947 = tail call double @_Z4fmaxdd(double %extract1585, double 1.000000e-200) nounwind
  %948 = tail call double @_Z4fmaxdd(double %extract1586, double 1.000000e-200) nounwind
  %949 = tail call double @_Z4fmaxdd(double %extract1587, double 1.000000e-200) nounwind
  %950 = tail call double @_Z4fmaxdd(double %extract1588, double 1.000000e-200) nounwind
  %951 = tail call double @_Z4fmaxdd(double %extract1589, double 1.000000e-200) nounwind
  %952 = tail call double @_Z4fmaxdd(double %extract1590, double 1.000000e-200) nounwind
  %953 = tail call double @_Z4fmaxdd(double %extract1591, double 1.000000e-200) nounwind
  %954 = tail call double @_Z4fmaxdd(double %extract1592, double 1.000000e-200) nounwind
  %955 = tail call double @_Z5log10d(double %939) nounwind
  %956 = tail call double @_Z5log10d(double %940) nounwind
  %957 = tail call double @_Z5log10d(double %941) nounwind
  %958 = tail call double @_Z5log10d(double %942) nounwind
  %959 = tail call double @_Z5log10d(double %943) nounwind
  %960 = tail call double @_Z5log10d(double %944) nounwind
  %961 = tail call double @_Z5log10d(double %945) nounwind
  %962 = tail call double @_Z5log10d(double %946) nounwind
  %963 = tail call double @_Z5log10d(double %947) nounwind
  %964 = tail call double @_Z5log10d(double %948) nounwind
  %965 = tail call double @_Z5log10d(double %949) nounwind
  %966 = tail call double @_Z5log10d(double %950) nounwind
  %967 = tail call double @_Z5log10d(double %951) nounwind
  %968 = tail call double @_Z5log10d(double %952) nounwind
  %969 = tail call double @_Z5log10d(double %953) nounwind
  %970 = tail call double @_Z5log10d(double %954) nounwind
  %temp.vect1593 = insertelement <16 x double> undef, double %955, i32 0
  %temp.vect1594 = insertelement <16 x double> %temp.vect1593, double %956, i32 1
  %temp.vect1595 = insertelement <16 x double> %temp.vect1594, double %957, i32 2
  %temp.vect1596 = insertelement <16 x double> %temp.vect1595, double %958, i32 3
  %temp.vect1597 = insertelement <16 x double> %temp.vect1596, double %959, i32 4
  %temp.vect1598 = insertelement <16 x double> %temp.vect1597, double %960, i32 5
  %temp.vect1599 = insertelement <16 x double> %temp.vect1598, double %961, i32 6
  %temp.vect1600 = insertelement <16 x double> %temp.vect1599, double %962, i32 7
  %temp.vect1601 = insertelement <16 x double> %temp.vect1600, double %963, i32 8
  %temp.vect1602 = insertelement <16 x double> %temp.vect1601, double %964, i32 9
  %temp.vect1603 = insertelement <16 x double> %temp.vect1602, double %965, i32 10
  %temp.vect1604 = insertelement <16 x double> %temp.vect1603, double %966, i32 11
  %temp.vect1605 = insertelement <16 x double> %temp.vect1604, double %967, i32 12
  %temp.vect1606 = insertelement <16 x double> %temp.vect1605, double %968, i32 13
  %temp.vect1607 = insertelement <16 x double> %temp.vect1606, double %969, i32 14
  %temp.vect1608 = insertelement <16 x double> %temp.vect1607, double %970, i32 15
  %971 = fmul <16 x double> %temp.vect1608, <double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00>
  %972 = fsub <16 x double> <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>, %971
  %973 = fmul <16 x double> %temp.vect1608, <double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01>
  %974 = fadd <16 x double> %973, <double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01>
  %975 = fsub <16 x double> %temp.vect1624, %974
  %976 = fmul <16 x double> %975, <double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01>
  %977 = fsub <16 x double> %972, %976
  %978 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %977
  %979 = fmul <16 x double> %975, %978
  %980 = fmul <16 x double> %979, %979
  %981 = fadd <16 x double> %980, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %982 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %981
  %983 = fmul <16 x double> %temp.vect1608, %982
  %extract1625 = extractelement <16 x double> %983, i32 0
  %extract1626 = extractelement <16 x double> %983, i32 1
  %extract1627 = extractelement <16 x double> %983, i32 2
  %extract1628 = extractelement <16 x double> %983, i32 3
  %extract1629 = extractelement <16 x double> %983, i32 4
  %extract1630 = extractelement <16 x double> %983, i32 5
  %extract1631 = extractelement <16 x double> %983, i32 6
  %extract1632 = extractelement <16 x double> %983, i32 7
  %extract1633 = extractelement <16 x double> %983, i32 8
  %extract1634 = extractelement <16 x double> %983, i32 9
  %extract1635 = extractelement <16 x double> %983, i32 10
  %extract1636 = extractelement <16 x double> %983, i32 11
  %extract1637 = extractelement <16 x double> %983, i32 12
  %extract1638 = extractelement <16 x double> %983, i32 13
  %extract1639 = extractelement <16 x double> %983, i32 14
  %extract1640 = extractelement <16 x double> %983, i32 15
  %984 = tail call double @_Z5exp10d(double %extract1625) nounwind
  %985 = tail call double @_Z5exp10d(double %extract1626) nounwind
  %986 = tail call double @_Z5exp10d(double %extract1627) nounwind
  %987 = tail call double @_Z5exp10d(double %extract1628) nounwind
  %988 = tail call double @_Z5exp10d(double %extract1629) nounwind
  %989 = tail call double @_Z5exp10d(double %extract1630) nounwind
  %990 = tail call double @_Z5exp10d(double %extract1631) nounwind
  %991 = tail call double @_Z5exp10d(double %extract1632) nounwind
  %992 = tail call double @_Z5exp10d(double %extract1633) nounwind
  %993 = tail call double @_Z5exp10d(double %extract1634) nounwind
  %994 = tail call double @_Z5exp10d(double %extract1635) nounwind
  %995 = tail call double @_Z5exp10d(double %extract1636) nounwind
  %996 = tail call double @_Z5exp10d(double %extract1637) nounwind
  %997 = tail call double @_Z5exp10d(double %extract1638) nounwind
  %998 = tail call double @_Z5exp10d(double %extract1639) nounwind
  %999 = tail call double @_Z5exp10d(double %extract1640) nounwind
  %temp.vect1641 = insertelement <16 x double> undef, double %984, i32 0
  %temp.vect1642 = insertelement <16 x double> %temp.vect1641, double %985, i32 1
  %temp.vect1643 = insertelement <16 x double> %temp.vect1642, double %986, i32 2
  %temp.vect1644 = insertelement <16 x double> %temp.vect1643, double %987, i32 3
  %temp.vect1645 = insertelement <16 x double> %temp.vect1644, double %988, i32 4
  %temp.vect1646 = insertelement <16 x double> %temp.vect1645, double %989, i32 5
  %temp.vect1647 = insertelement <16 x double> %temp.vect1646, double %990, i32 6
  %temp.vect1648 = insertelement <16 x double> %temp.vect1647, double %991, i32 7
  %temp.vect1649 = insertelement <16 x double> %temp.vect1648, double %992, i32 8
  %temp.vect1650 = insertelement <16 x double> %temp.vect1649, double %993, i32 9
  %temp.vect1651 = insertelement <16 x double> %temp.vect1650, double %994, i32 10
  %temp.vect1652 = insertelement <16 x double> %temp.vect1651, double %995, i32 11
  %temp.vect1653 = insertelement <16 x double> %temp.vect1652, double %996, i32 12
  %temp.vect1654 = insertelement <16 x double> %temp.vect1653, double %997, i32 13
  %temp.vect1655 = insertelement <16 x double> %temp.vect1654, double %998, i32 14
  %temp.vect1656 = insertelement <16 x double> %temp.vect1655, double %999, i32 15
  %1000 = fmul <16 x double> %temp.vect1656, %851
  %1001 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1002 = load i64* %1001, align 8
  %1003 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1004 = load i64* %1003, align 8
  %1005 = add i64 %1002, %1004
  %extract1659 = add i64 %1005, 4423680
  %1006 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1659
  %ptrTypeCast1675 = bitcast double addrspace(1)* %1006 to <16 x double> addrspace(1)*
  %1007 = load <16 x double> addrspace(1)* %ptrTypeCast1675, align 8
  %1008 = fmul <16 x double> %1007, %1000
  %1009 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1010 = load i64* %1009, align 8
  %1011 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1012 = load i64* %1011, align 8
  %1013 = add i64 %1010, %1012
  %extract1678 = add i64 %1013, 4423680
  %1014 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1678
  %ptrTypeCast1694 = bitcast double addrspace(1)* %1014 to <16 x double> addrspace(1)*
  store <16 x double> %1008, <16 x double> addrspace(1)* %ptrTypeCast1694, align 8
  %1015 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1016 = load i64* %1015, align 8
  %1017 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1018 = load i64* %1017, align 8
  %1019 = add i64 %1016, %1018
  %extract1697 = add i64 %1019, 4423680
  %1020 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract1697
  %ptrTypeCast1713 = bitcast double addrspace(1)* %1020 to <16 x double> addrspace(1)*
  %1021 = load <16 x double> addrspace(1)* %ptrTypeCast1713, align 8
  %1022 = fmul <16 x double> %1021, %1000
  %1023 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1024 = load i64* %1023, align 8
  %1025 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1026 = load i64* %1025, align 8
  %1027 = add i64 %1024, %1026
  %extract1716 = add i64 %1027, 4423680
  %1028 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract1716
  %ptrTypeCast1732 = bitcast double addrspace(1)* %1028 to <16 x double> addrspace(1)*
  store <16 x double> %1022, <16 x double> addrspace(1)* %ptrTypeCast1732, align 8
  %1029 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1030 = load i64* %1029, align 8
  %1031 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1032 = load i64* %1031, align 8
  %1033 = add i64 %1030, %1032
  %extract1735 = add i64 %1033, 442368
  %1034 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %extract1735
  %ptrTypeCast1751 = bitcast double addrspace(1)* %1034 to <16 x double> addrspace(1)*
  %1035 = load <16 x double> addrspace(1)* %ptrTypeCast1751, align 8
  %1036 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1037 = load i64* %1036, align 8
  %1038 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1039 = load i64* %1038, align 8
  %1040 = add i64 %1037, %1039
  %extract1754 = add i64 %1040, 5197824
  %1041 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1754
  %ptrTypeCast1770 = bitcast double addrspace(1)* %1041 to <16 x double> addrspace(1)*
  %1042 = load <16 x double> addrspace(1)* %ptrTypeCast1770, align 8
  %1043 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1042
  %1044 = fmul <16 x double> %101, %1043
  %1045 = fmul <16 x double> %1035, %1044
  %extract1771 = extractelement <16 x double> %1045, i32 0
  %extract1772 = extractelement <16 x double> %1045, i32 1
  %extract1773 = extractelement <16 x double> %1045, i32 2
  %extract1774 = extractelement <16 x double> %1045, i32 3
  %extract1775 = extractelement <16 x double> %1045, i32 4
  %extract1776 = extractelement <16 x double> %1045, i32 5
  %extract1777 = extractelement <16 x double> %1045, i32 6
  %extract1778 = extractelement <16 x double> %1045, i32 7
  %extract1779 = extractelement <16 x double> %1045, i32 8
  %extract1780 = extractelement <16 x double> %1045, i32 9
  %extract1781 = extractelement <16 x double> %1045, i32 10
  %extract1782 = extractelement <16 x double> %1045, i32 11
  %extract1783 = extractelement <16 x double> %1045, i32 12
  %extract1784 = extractelement <16 x double> %1045, i32 13
  %extract1785 = extractelement <16 x double> %1045, i32 14
  %extract1786 = extractelement <16 x double> %1045, i32 15
  %1046 = fadd <16 x double> %1045, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %1047 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1046
  %1048 = fmul <16 x double> %1045, %1047
  %1049 = tail call double @_Z4fmaxdd(double %extract1771, double 1.000000e-200) nounwind
  %1050 = tail call double @_Z4fmaxdd(double %extract1772, double 1.000000e-200) nounwind
  %1051 = tail call double @_Z4fmaxdd(double %extract1773, double 1.000000e-200) nounwind
  %1052 = tail call double @_Z4fmaxdd(double %extract1774, double 1.000000e-200) nounwind
  %1053 = tail call double @_Z4fmaxdd(double %extract1775, double 1.000000e-200) nounwind
  %1054 = tail call double @_Z4fmaxdd(double %extract1776, double 1.000000e-200) nounwind
  %1055 = tail call double @_Z4fmaxdd(double %extract1777, double 1.000000e-200) nounwind
  %1056 = tail call double @_Z4fmaxdd(double %extract1778, double 1.000000e-200) nounwind
  %1057 = tail call double @_Z4fmaxdd(double %extract1779, double 1.000000e-200) nounwind
  %1058 = tail call double @_Z4fmaxdd(double %extract1780, double 1.000000e-200) nounwind
  %1059 = tail call double @_Z4fmaxdd(double %extract1781, double 1.000000e-200) nounwind
  %1060 = tail call double @_Z4fmaxdd(double %extract1782, double 1.000000e-200) nounwind
  %1061 = tail call double @_Z4fmaxdd(double %extract1783, double 1.000000e-200) nounwind
  %1062 = tail call double @_Z4fmaxdd(double %extract1784, double 1.000000e-200) nounwind
  %1063 = tail call double @_Z4fmaxdd(double %extract1785, double 1.000000e-200) nounwind
  %1064 = tail call double @_Z4fmaxdd(double %extract1786, double 1.000000e-200) nounwind
  %1065 = tail call double @_Z5log10d(double %1049) nounwind
  %1066 = tail call double @_Z5log10d(double %1050) nounwind
  %1067 = tail call double @_Z5log10d(double %1051) nounwind
  %1068 = tail call double @_Z5log10d(double %1052) nounwind
  %1069 = tail call double @_Z5log10d(double %1053) nounwind
  %1070 = tail call double @_Z5log10d(double %1054) nounwind
  %1071 = tail call double @_Z5log10d(double %1055) nounwind
  %1072 = tail call double @_Z5log10d(double %1056) nounwind
  %1073 = tail call double @_Z5log10d(double %1057) nounwind
  %1074 = tail call double @_Z5log10d(double %1058) nounwind
  %1075 = tail call double @_Z5log10d(double %1059) nounwind
  %1076 = tail call double @_Z5log10d(double %1060) nounwind
  %1077 = tail call double @_Z5log10d(double %1061) nounwind
  %1078 = tail call double @_Z5log10d(double %1062) nounwind
  %1079 = tail call double @_Z5log10d(double %1063) nounwind
  %1080 = tail call double @_Z5log10d(double %1064) nounwind
  %temp.vect1915 = insertelement <16 x double> undef, double %1065, i32 0
  %temp.vect1916 = insertelement <16 x double> %temp.vect1915, double %1066, i32 1
  %temp.vect1917 = insertelement <16 x double> %temp.vect1916, double %1067, i32 2
  %temp.vect1918 = insertelement <16 x double> %temp.vect1917, double %1068, i32 3
  %temp.vect1919 = insertelement <16 x double> %temp.vect1918, double %1069, i32 4
  %temp.vect1920 = insertelement <16 x double> %temp.vect1919, double %1070, i32 5
  %temp.vect1921 = insertelement <16 x double> %temp.vect1920, double %1071, i32 6
  %temp.vect1922 = insertelement <16 x double> %temp.vect1921, double %1072, i32 7
  %temp.vect1923 = insertelement <16 x double> %temp.vect1922, double %1073, i32 8
  %temp.vect1924 = insertelement <16 x double> %temp.vect1923, double %1074, i32 9
  %temp.vect1925 = insertelement <16 x double> %temp.vect1924, double %1075, i32 10
  %temp.vect1926 = insertelement <16 x double> %temp.vect1925, double %1076, i32 11
  %temp.vect1927 = insertelement <16 x double> %temp.vect1926, double %1077, i32 12
  %temp.vect1928 = insertelement <16 x double> %temp.vect1927, double %1078, i32 13
  %temp.vect1929 = insertelement <16 x double> %temp.vect1928, double %1079, i32 14
  %temp.vect1930 = insertelement <16 x double> %temp.vect1929, double %1080, i32 15
  %1081 = fmul <16 x double> %7, <double 0xBF8A41A41A41A41A, double 0xBF8A41A41A41A41A, double 0xBF8A41A41A41A41A, double 0xBF8A41A41A41A41A, double 0xBF8A41A41A41A41A, double 0xBF8A41A41A41A41A, double 0xBF8A41A41A41A41A, double 0xBF8A41A41A41A41A, double 0xBF8A41A41A41A41A, double 0xBF8A41A41A41A41A, double 0xBF8A41A41A41A41A, double 0xBF8A41A41A41A41A, double 0xBF8A41A41A41A41A, double 0xBF8A41A41A41A41A, double 0xBF8A41A41A41A41A, double 0xBF8A41A41A41A41A>
  %extract1787 = extractelement <16 x double> %1081, i32 0
  %extract1788 = extractelement <16 x double> %1081, i32 1
  %extract1789 = extractelement <16 x double> %1081, i32 2
  %extract1790 = extractelement <16 x double> %1081, i32 3
  %extract1791 = extractelement <16 x double> %1081, i32 4
  %extract1792 = extractelement <16 x double> %1081, i32 5
  %extract1793 = extractelement <16 x double> %1081, i32 6
  %extract1794 = extractelement <16 x double> %1081, i32 7
  %extract1795 = extractelement <16 x double> %1081, i32 8
  %extract1796 = extractelement <16 x double> %1081, i32 9
  %extract1797 = extractelement <16 x double> %1081, i32 10
  %extract1798 = extractelement <16 x double> %1081, i32 11
  %extract1799 = extractelement <16 x double> %1081, i32 12
  %extract1800 = extractelement <16 x double> %1081, i32 13
  %extract1801 = extractelement <16 x double> %1081, i32 14
  %extract1802 = extractelement <16 x double> %1081, i32 15
  %1082 = tail call double @_Z3expd(double %extract1787) nounwind
  %1083 = tail call double @_Z3expd(double %extract1788) nounwind
  %1084 = tail call double @_Z3expd(double %extract1789) nounwind
  %1085 = tail call double @_Z3expd(double %extract1790) nounwind
  %1086 = tail call double @_Z3expd(double %extract1791) nounwind
  %1087 = tail call double @_Z3expd(double %extract1792) nounwind
  %1088 = tail call double @_Z3expd(double %extract1793) nounwind
  %1089 = tail call double @_Z3expd(double %extract1794) nounwind
  %1090 = tail call double @_Z3expd(double %extract1795) nounwind
  %1091 = tail call double @_Z3expd(double %extract1796) nounwind
  %1092 = tail call double @_Z3expd(double %extract1797) nounwind
  %1093 = tail call double @_Z3expd(double %extract1798) nounwind
  %1094 = tail call double @_Z3expd(double %extract1799) nounwind
  %1095 = tail call double @_Z3expd(double %extract1800) nounwind
  %1096 = tail call double @_Z3expd(double %extract1801) nounwind
  %1097 = tail call double @_Z3expd(double %extract1802) nounwind
  %temp.vect1803 = insertelement <16 x double> undef, double %1082, i32 0
  %temp.vect1804 = insertelement <16 x double> %temp.vect1803, double %1083, i32 1
  %temp.vect1805 = insertelement <16 x double> %temp.vect1804, double %1084, i32 2
  %temp.vect1806 = insertelement <16 x double> %temp.vect1805, double %1085, i32 3
  %temp.vect1807 = insertelement <16 x double> %temp.vect1806, double %1086, i32 4
  %temp.vect1808 = insertelement <16 x double> %temp.vect1807, double %1087, i32 5
  %temp.vect1809 = insertelement <16 x double> %temp.vect1808, double %1088, i32 6
  %temp.vect1810 = insertelement <16 x double> %temp.vect1809, double %1089, i32 7
  %temp.vect1811 = insertelement <16 x double> %temp.vect1810, double %1090, i32 8
  %temp.vect1812 = insertelement <16 x double> %temp.vect1811, double %1091, i32 9
  %temp.vect1813 = insertelement <16 x double> %temp.vect1812, double %1092, i32 10
  %temp.vect1814 = insertelement <16 x double> %temp.vect1813, double %1093, i32 11
  %temp.vect1815 = insertelement <16 x double> %temp.vect1814, double %1094, i32 12
  %temp.vect1816 = insertelement <16 x double> %temp.vect1815, double %1095, i32 13
  %temp.vect1817 = insertelement <16 x double> %temp.vect1816, double %1096, i32 14
  %temp.vect1818 = insertelement <16 x double> %temp.vect1817, double %1097, i32 15
  %1098 = fmul <16 x double> %temp.vect1818, <double 3.200000e-01, double 3.200000e-01, double 3.200000e-01, double 3.200000e-01, double 3.200000e-01, double 3.200000e-01, double 3.200000e-01, double 3.200000e-01, double 3.200000e-01, double 3.200000e-01, double 3.200000e-01, double 3.200000e-01, double 3.200000e-01, double 3.200000e-01, double 3.200000e-01, double 3.200000e-01>
  %1099 = fmul <16 x double> %7, <double 0xBF406CD0E80106CD, double 0xBF406CD0E80106CD, double 0xBF406CD0E80106CD, double 0xBF406CD0E80106CD, double 0xBF406CD0E80106CD, double 0xBF406CD0E80106CD, double 0xBF406CD0E80106CD, double 0xBF406CD0E80106CD, double 0xBF406CD0E80106CD, double 0xBF406CD0E80106CD, double 0xBF406CD0E80106CD, double 0xBF406CD0E80106CD, double 0xBF406CD0E80106CD, double 0xBF406CD0E80106CD, double 0xBF406CD0E80106CD, double 0xBF406CD0E80106CD>
  %extract1819 = extractelement <16 x double> %1099, i32 0
  %extract1820 = extractelement <16 x double> %1099, i32 1
  %extract1821 = extractelement <16 x double> %1099, i32 2
  %extract1822 = extractelement <16 x double> %1099, i32 3
  %extract1823 = extractelement <16 x double> %1099, i32 4
  %extract1824 = extractelement <16 x double> %1099, i32 5
  %extract1825 = extractelement <16 x double> %1099, i32 6
  %extract1826 = extractelement <16 x double> %1099, i32 7
  %extract1827 = extractelement <16 x double> %1099, i32 8
  %extract1828 = extractelement <16 x double> %1099, i32 9
  %extract1829 = extractelement <16 x double> %1099, i32 10
  %extract1830 = extractelement <16 x double> %1099, i32 11
  %extract1831 = extractelement <16 x double> %1099, i32 12
  %extract1832 = extractelement <16 x double> %1099, i32 13
  %extract1833 = extractelement <16 x double> %1099, i32 14
  %extract1834 = extractelement <16 x double> %1099, i32 15
  %1100 = tail call double @_Z3expd(double %extract1819) nounwind
  %1101 = tail call double @_Z3expd(double %extract1820) nounwind
  %1102 = tail call double @_Z3expd(double %extract1821) nounwind
  %1103 = tail call double @_Z3expd(double %extract1822) nounwind
  %1104 = tail call double @_Z3expd(double %extract1823) nounwind
  %1105 = tail call double @_Z3expd(double %extract1824) nounwind
  %1106 = tail call double @_Z3expd(double %extract1825) nounwind
  %1107 = tail call double @_Z3expd(double %extract1826) nounwind
  %1108 = tail call double @_Z3expd(double %extract1827) nounwind
  %1109 = tail call double @_Z3expd(double %extract1828) nounwind
  %1110 = tail call double @_Z3expd(double %extract1829) nounwind
  %1111 = tail call double @_Z3expd(double %extract1830) nounwind
  %1112 = tail call double @_Z3expd(double %extract1831) nounwind
  %1113 = tail call double @_Z3expd(double %extract1832) nounwind
  %1114 = tail call double @_Z3expd(double %extract1833) nounwind
  %1115 = tail call double @_Z3expd(double %extract1834) nounwind
  %temp.vect1835 = insertelement <16 x double> undef, double %1100, i32 0
  %temp.vect1836 = insertelement <16 x double> %temp.vect1835, double %1101, i32 1
  %temp.vect1837 = insertelement <16 x double> %temp.vect1836, double %1102, i32 2
  %temp.vect1838 = insertelement <16 x double> %temp.vect1837, double %1103, i32 3
  %temp.vect1839 = insertelement <16 x double> %temp.vect1838, double %1104, i32 4
  %temp.vect1840 = insertelement <16 x double> %temp.vect1839, double %1105, i32 5
  %temp.vect1841 = insertelement <16 x double> %temp.vect1840, double %1106, i32 6
  %temp.vect1842 = insertelement <16 x double> %temp.vect1841, double %1107, i32 7
  %temp.vect1843 = insertelement <16 x double> %temp.vect1842, double %1108, i32 8
  %temp.vect1844 = insertelement <16 x double> %temp.vect1843, double %1109, i32 9
  %temp.vect1845 = insertelement <16 x double> %temp.vect1844, double %1110, i32 10
  %temp.vect1846 = insertelement <16 x double> %temp.vect1845, double %1111, i32 11
  %temp.vect1847 = insertelement <16 x double> %temp.vect1846, double %1112, i32 12
  %temp.vect1848 = insertelement <16 x double> %temp.vect1847, double %1113, i32 13
  %temp.vect1849 = insertelement <16 x double> %temp.vect1848, double %1114, i32 14
  %temp.vect1850 = insertelement <16 x double> %temp.vect1849, double %1115, i32 15
  %1116 = fmul <16 x double> %temp.vect1850, <double 6.800000e-01, double 6.800000e-01, double 6.800000e-01, double 6.800000e-01, double 6.800000e-01, double 6.800000e-01, double 6.800000e-01, double 6.800000e-01, double 6.800000e-01, double 6.800000e-01, double 6.800000e-01, double 6.800000e-01, double 6.800000e-01, double 6.800000e-01, double 6.800000e-01, double 6.800000e-01>
  %1117 = fadd <16 x double> %1098, %1116
  %1118 = fmul <16 x double> %329, <double -5.590000e+03, double -5.590000e+03, double -5.590000e+03, double -5.590000e+03, double -5.590000e+03, double -5.590000e+03, double -5.590000e+03, double -5.590000e+03, double -5.590000e+03, double -5.590000e+03, double -5.590000e+03, double -5.590000e+03, double -5.590000e+03, double -5.590000e+03, double -5.590000e+03, double -5.590000e+03>
  %extract1851 = extractelement <16 x double> %1118, i32 0
  %extract1852 = extractelement <16 x double> %1118, i32 1
  %extract1853 = extractelement <16 x double> %1118, i32 2
  %extract1854 = extractelement <16 x double> %1118, i32 3
  %extract1855 = extractelement <16 x double> %1118, i32 4
  %extract1856 = extractelement <16 x double> %1118, i32 5
  %extract1857 = extractelement <16 x double> %1118, i32 6
  %extract1858 = extractelement <16 x double> %1118, i32 7
  %extract1859 = extractelement <16 x double> %1118, i32 8
  %extract1860 = extractelement <16 x double> %1118, i32 9
  %extract1861 = extractelement <16 x double> %1118, i32 10
  %extract1862 = extractelement <16 x double> %1118, i32 11
  %extract1863 = extractelement <16 x double> %1118, i32 12
  %extract1864 = extractelement <16 x double> %1118, i32 13
  %extract1865 = extractelement <16 x double> %1118, i32 14
  %extract1866 = extractelement <16 x double> %1118, i32 15
  %1119 = tail call double @_Z3expd(double %extract1851) nounwind
  %1120 = tail call double @_Z3expd(double %extract1852) nounwind
  %1121 = tail call double @_Z3expd(double %extract1853) nounwind
  %1122 = tail call double @_Z3expd(double %extract1854) nounwind
  %1123 = tail call double @_Z3expd(double %extract1855) nounwind
  %1124 = tail call double @_Z3expd(double %extract1856) nounwind
  %1125 = tail call double @_Z3expd(double %extract1857) nounwind
  %1126 = tail call double @_Z3expd(double %extract1858) nounwind
  %1127 = tail call double @_Z3expd(double %extract1859) nounwind
  %1128 = tail call double @_Z3expd(double %extract1860) nounwind
  %1129 = tail call double @_Z3expd(double %extract1861) nounwind
  %1130 = tail call double @_Z3expd(double %extract1862) nounwind
  %1131 = tail call double @_Z3expd(double %extract1863) nounwind
  %1132 = tail call double @_Z3expd(double %extract1864) nounwind
  %1133 = tail call double @_Z3expd(double %extract1865) nounwind
  %1134 = tail call double @_Z3expd(double %extract1866) nounwind
  %temp.vect1867 = insertelement <16 x double> undef, double %1119, i32 0
  %temp.vect1868 = insertelement <16 x double> %temp.vect1867, double %1120, i32 1
  %temp.vect1869 = insertelement <16 x double> %temp.vect1868, double %1121, i32 2
  %temp.vect1870 = insertelement <16 x double> %temp.vect1869, double %1122, i32 3
  %temp.vect1871 = insertelement <16 x double> %temp.vect1870, double %1123, i32 4
  %temp.vect1872 = insertelement <16 x double> %temp.vect1871, double %1124, i32 5
  %temp.vect1873 = insertelement <16 x double> %temp.vect1872, double %1125, i32 6
  %temp.vect1874 = insertelement <16 x double> %temp.vect1873, double %1126, i32 7
  %temp.vect1875 = insertelement <16 x double> %temp.vect1874, double %1127, i32 8
  %temp.vect1876 = insertelement <16 x double> %temp.vect1875, double %1128, i32 9
  %temp.vect1877 = insertelement <16 x double> %temp.vect1876, double %1129, i32 10
  %temp.vect1878 = insertelement <16 x double> %temp.vect1877, double %1130, i32 11
  %temp.vect1879 = insertelement <16 x double> %temp.vect1878, double %1131, i32 12
  %temp.vect1880 = insertelement <16 x double> %temp.vect1879, double %1132, i32 13
  %temp.vect1881 = insertelement <16 x double> %temp.vect1880, double %1133, i32 14
  %temp.vect1882 = insertelement <16 x double> %temp.vect1881, double %1134, i32 15
  %1135 = fadd <16 x double> %1117, %temp.vect1882
  %extract1883 = extractelement <16 x double> %1135, i32 0
  %extract1884 = extractelement <16 x double> %1135, i32 1
  %extract1885 = extractelement <16 x double> %1135, i32 2
  %extract1886 = extractelement <16 x double> %1135, i32 3
  %extract1887 = extractelement <16 x double> %1135, i32 4
  %extract1888 = extractelement <16 x double> %1135, i32 5
  %extract1889 = extractelement <16 x double> %1135, i32 6
  %extract1890 = extractelement <16 x double> %1135, i32 7
  %extract1891 = extractelement <16 x double> %1135, i32 8
  %extract1892 = extractelement <16 x double> %1135, i32 9
  %extract1893 = extractelement <16 x double> %1135, i32 10
  %extract1894 = extractelement <16 x double> %1135, i32 11
  %extract1895 = extractelement <16 x double> %1135, i32 12
  %extract1896 = extractelement <16 x double> %1135, i32 13
  %extract1897 = extractelement <16 x double> %1135, i32 14
  %extract1898 = extractelement <16 x double> %1135, i32 15
  %1136 = tail call double @_Z4fmaxdd(double %extract1883, double 1.000000e-200) nounwind
  %1137 = tail call double @_Z4fmaxdd(double %extract1884, double 1.000000e-200) nounwind
  %1138 = tail call double @_Z4fmaxdd(double %extract1885, double 1.000000e-200) nounwind
  %1139 = tail call double @_Z4fmaxdd(double %extract1886, double 1.000000e-200) nounwind
  %1140 = tail call double @_Z4fmaxdd(double %extract1887, double 1.000000e-200) nounwind
  %1141 = tail call double @_Z4fmaxdd(double %extract1888, double 1.000000e-200) nounwind
  %1142 = tail call double @_Z4fmaxdd(double %extract1889, double 1.000000e-200) nounwind
  %1143 = tail call double @_Z4fmaxdd(double %extract1890, double 1.000000e-200) nounwind
  %1144 = tail call double @_Z4fmaxdd(double %extract1891, double 1.000000e-200) nounwind
  %1145 = tail call double @_Z4fmaxdd(double %extract1892, double 1.000000e-200) nounwind
  %1146 = tail call double @_Z4fmaxdd(double %extract1893, double 1.000000e-200) nounwind
  %1147 = tail call double @_Z4fmaxdd(double %extract1894, double 1.000000e-200) nounwind
  %1148 = tail call double @_Z4fmaxdd(double %extract1895, double 1.000000e-200) nounwind
  %1149 = tail call double @_Z4fmaxdd(double %extract1896, double 1.000000e-200) nounwind
  %1150 = tail call double @_Z4fmaxdd(double %extract1897, double 1.000000e-200) nounwind
  %1151 = tail call double @_Z4fmaxdd(double %extract1898, double 1.000000e-200) nounwind
  %1152 = tail call double @_Z5log10d(double %1136) nounwind
  %1153 = tail call double @_Z5log10d(double %1137) nounwind
  %1154 = tail call double @_Z5log10d(double %1138) nounwind
  %1155 = tail call double @_Z5log10d(double %1139) nounwind
  %1156 = tail call double @_Z5log10d(double %1140) nounwind
  %1157 = tail call double @_Z5log10d(double %1141) nounwind
  %1158 = tail call double @_Z5log10d(double %1142) nounwind
  %1159 = tail call double @_Z5log10d(double %1143) nounwind
  %1160 = tail call double @_Z5log10d(double %1144) nounwind
  %1161 = tail call double @_Z5log10d(double %1145) nounwind
  %1162 = tail call double @_Z5log10d(double %1146) nounwind
  %1163 = tail call double @_Z5log10d(double %1147) nounwind
  %1164 = tail call double @_Z5log10d(double %1148) nounwind
  %1165 = tail call double @_Z5log10d(double %1149) nounwind
  %1166 = tail call double @_Z5log10d(double %1150) nounwind
  %1167 = tail call double @_Z5log10d(double %1151) nounwind
  %temp.vect1899 = insertelement <16 x double> undef, double %1152, i32 0
  %temp.vect1900 = insertelement <16 x double> %temp.vect1899, double %1153, i32 1
  %temp.vect1901 = insertelement <16 x double> %temp.vect1900, double %1154, i32 2
  %temp.vect1902 = insertelement <16 x double> %temp.vect1901, double %1155, i32 3
  %temp.vect1903 = insertelement <16 x double> %temp.vect1902, double %1156, i32 4
  %temp.vect1904 = insertelement <16 x double> %temp.vect1903, double %1157, i32 5
  %temp.vect1905 = insertelement <16 x double> %temp.vect1904, double %1158, i32 6
  %temp.vect1906 = insertelement <16 x double> %temp.vect1905, double %1159, i32 7
  %temp.vect1907 = insertelement <16 x double> %temp.vect1906, double %1160, i32 8
  %temp.vect1908 = insertelement <16 x double> %temp.vect1907, double %1161, i32 9
  %temp.vect1909 = insertelement <16 x double> %temp.vect1908, double %1162, i32 10
  %temp.vect1910 = insertelement <16 x double> %temp.vect1909, double %1163, i32 11
  %temp.vect1911 = insertelement <16 x double> %temp.vect1910, double %1164, i32 12
  %temp.vect1912 = insertelement <16 x double> %temp.vect1911, double %1165, i32 13
  %temp.vect1913 = insertelement <16 x double> %temp.vect1912, double %1166, i32 14
  %temp.vect1914 = insertelement <16 x double> %temp.vect1913, double %1167, i32 15
  %1168 = fmul <16 x double> %temp.vect1914, <double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00>
  %1169 = fsub <16 x double> <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>, %1168
  %1170 = fmul <16 x double> %temp.vect1914, <double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01>
  %1171 = fadd <16 x double> %1170, <double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01>
  %1172 = fsub <16 x double> %temp.vect1930, %1171
  %1173 = fmul <16 x double> %1172, <double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01>
  %1174 = fsub <16 x double> %1169, %1173
  %1175 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1174
  %1176 = fmul <16 x double> %1172, %1175
  %1177 = fmul <16 x double> %1176, %1176
  %1178 = fadd <16 x double> %1177, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %1179 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1178
  %1180 = fmul <16 x double> %temp.vect1914, %1179
  %extract1931 = extractelement <16 x double> %1180, i32 0
  %extract1932 = extractelement <16 x double> %1180, i32 1
  %extract1933 = extractelement <16 x double> %1180, i32 2
  %extract1934 = extractelement <16 x double> %1180, i32 3
  %extract1935 = extractelement <16 x double> %1180, i32 4
  %extract1936 = extractelement <16 x double> %1180, i32 5
  %extract1937 = extractelement <16 x double> %1180, i32 6
  %extract1938 = extractelement <16 x double> %1180, i32 7
  %extract1939 = extractelement <16 x double> %1180, i32 8
  %extract1940 = extractelement <16 x double> %1180, i32 9
  %extract1941 = extractelement <16 x double> %1180, i32 10
  %extract1942 = extractelement <16 x double> %1180, i32 11
  %extract1943 = extractelement <16 x double> %1180, i32 12
  %extract1944 = extractelement <16 x double> %1180, i32 13
  %extract1945 = extractelement <16 x double> %1180, i32 14
  %extract1946 = extractelement <16 x double> %1180, i32 15
  %1181 = tail call double @_Z5exp10d(double %extract1931) nounwind
  %1182 = tail call double @_Z5exp10d(double %extract1932) nounwind
  %1183 = tail call double @_Z5exp10d(double %extract1933) nounwind
  %1184 = tail call double @_Z5exp10d(double %extract1934) nounwind
  %1185 = tail call double @_Z5exp10d(double %extract1935) nounwind
  %1186 = tail call double @_Z5exp10d(double %extract1936) nounwind
  %1187 = tail call double @_Z5exp10d(double %extract1937) nounwind
  %1188 = tail call double @_Z5exp10d(double %extract1938) nounwind
  %1189 = tail call double @_Z5exp10d(double %extract1939) nounwind
  %1190 = tail call double @_Z5exp10d(double %extract1940) nounwind
  %1191 = tail call double @_Z5exp10d(double %extract1941) nounwind
  %1192 = tail call double @_Z5exp10d(double %extract1942) nounwind
  %1193 = tail call double @_Z5exp10d(double %extract1943) nounwind
  %1194 = tail call double @_Z5exp10d(double %extract1944) nounwind
  %1195 = tail call double @_Z5exp10d(double %extract1945) nounwind
  %1196 = tail call double @_Z5exp10d(double %extract1946) nounwind
  %temp.vect1947 = insertelement <16 x double> undef, double %1181, i32 0
  %temp.vect1948 = insertelement <16 x double> %temp.vect1947, double %1182, i32 1
  %temp.vect1949 = insertelement <16 x double> %temp.vect1948, double %1183, i32 2
  %temp.vect1950 = insertelement <16 x double> %temp.vect1949, double %1184, i32 3
  %temp.vect1951 = insertelement <16 x double> %temp.vect1950, double %1185, i32 4
  %temp.vect1952 = insertelement <16 x double> %temp.vect1951, double %1186, i32 5
  %temp.vect1953 = insertelement <16 x double> %temp.vect1952, double %1187, i32 6
  %temp.vect1954 = insertelement <16 x double> %temp.vect1953, double %1188, i32 7
  %temp.vect1955 = insertelement <16 x double> %temp.vect1954, double %1189, i32 8
  %temp.vect1956 = insertelement <16 x double> %temp.vect1955, double %1190, i32 9
  %temp.vect1957 = insertelement <16 x double> %temp.vect1956, double %1191, i32 10
  %temp.vect1958 = insertelement <16 x double> %temp.vect1957, double %1192, i32 11
  %temp.vect1959 = insertelement <16 x double> %temp.vect1958, double %1193, i32 12
  %temp.vect1960 = insertelement <16 x double> %temp.vect1959, double %1194, i32 13
  %temp.vect1961 = insertelement <16 x double> %temp.vect1960, double %1195, i32 14
  %temp.vect1962 = insertelement <16 x double> %temp.vect1961, double %1196, i32 15
  %1197 = fmul <16 x double> %temp.vect1962, %1048
  %1198 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1199 = load i64* %1198, align 8
  %1200 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1201 = load i64* %1200, align 8
  %1202 = add i64 %1199, %1201
  %extract1965 = add i64 %1202, 5197824
  %1203 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1965
  %ptrTypeCast1981 = bitcast double addrspace(1)* %1203 to <16 x double> addrspace(1)*
  %1204 = load <16 x double> addrspace(1)* %ptrTypeCast1981, align 8
  %1205 = fmul <16 x double> %1204, %1197
  %1206 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1207 = load i64* %1206, align 8
  %1208 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1209 = load i64* %1208, align 8
  %1210 = add i64 %1207, %1209
  %extract1984 = add i64 %1210, 5197824
  %1211 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1984
  %ptrTypeCast2000 = bitcast double addrspace(1)* %1211 to <16 x double> addrspace(1)*
  store <16 x double> %1205, <16 x double> addrspace(1)* %ptrTypeCast2000, align 8
  %1212 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1213 = load i64* %1212, align 8
  %1214 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1215 = load i64* %1214, align 8
  %1216 = add i64 %1213, %1215
  %extract2003 = add i64 %1216, 5197824
  %1217 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract2003
  %ptrTypeCast2019 = bitcast double addrspace(1)* %1217 to <16 x double> addrspace(1)*
  %1218 = load <16 x double> addrspace(1)* %ptrTypeCast2019, align 8
  %1219 = fmul <16 x double> %1218, %1197
  %1220 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1221 = load i64* %1220, align 8
  %1222 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1223 = load i64* %1222, align 8
  %1224 = add i64 %1221, %1223
  %extract2022 = add i64 %1224, 5197824
  %1225 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract2022
  %ptrTypeCast2038 = bitcast double addrspace(1)* %1225 to <16 x double> addrspace(1)*
  store <16 x double> %1219, <16 x double> addrspace(1)* %ptrTypeCast2038, align 8
  %1226 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1227 = load i64* %1226, align 8
  %1228 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1229 = load i64* %1228, align 8
  %1230 = add i64 %1227, %1229
  %extract2041 = add i64 %1230, 552960
  %1231 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %extract2041
  %ptrTypeCast2057 = bitcast double addrspace(1)* %1231 to <16 x double> addrspace(1)*
  %1232 = load <16 x double> addrspace(1)* %ptrTypeCast2057, align 8
  %1233 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1234 = load i64* %1233, align 8
  %1235 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1236 = load i64* %1235, align 8
  %1237 = add i64 %1234, %1236
  %extract2060 = add i64 %1237, 6082560
  %1238 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2060
  %ptrTypeCast2076 = bitcast double addrspace(1)* %1238 to <16 x double> addrspace(1)*
  %1239 = load <16 x double> addrspace(1)* %ptrTypeCast2076, align 8
  %1240 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1239
  %1241 = fmul <16 x double> %101, %1240
  %1242 = fmul <16 x double> %1232, %1241
  %extract2077 = extractelement <16 x double> %1242, i32 0
  %extract2078 = extractelement <16 x double> %1242, i32 1
  %extract2079 = extractelement <16 x double> %1242, i32 2
  %extract2080 = extractelement <16 x double> %1242, i32 3
  %extract2081 = extractelement <16 x double> %1242, i32 4
  %extract2082 = extractelement <16 x double> %1242, i32 5
  %extract2083 = extractelement <16 x double> %1242, i32 6
  %extract2084 = extractelement <16 x double> %1242, i32 7
  %extract2085 = extractelement <16 x double> %1242, i32 8
  %extract2086 = extractelement <16 x double> %1242, i32 9
  %extract2087 = extractelement <16 x double> %1242, i32 10
  %extract2088 = extractelement <16 x double> %1242, i32 11
  %extract2089 = extractelement <16 x double> %1242, i32 12
  %extract2090 = extractelement <16 x double> %1242, i32 13
  %extract2091 = extractelement <16 x double> %1242, i32 14
  %extract2092 = extractelement <16 x double> %1242, i32 15
  %1243 = fadd <16 x double> %1242, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %1244 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1243
  %1245 = fmul <16 x double> %1242, %1244
  %1246 = tail call double @_Z4fmaxdd(double %extract2077, double 1.000000e-200) nounwind
  %1247 = tail call double @_Z4fmaxdd(double %extract2078, double 1.000000e-200) nounwind
  %1248 = tail call double @_Z4fmaxdd(double %extract2079, double 1.000000e-200) nounwind
  %1249 = tail call double @_Z4fmaxdd(double %extract2080, double 1.000000e-200) nounwind
  %1250 = tail call double @_Z4fmaxdd(double %extract2081, double 1.000000e-200) nounwind
  %1251 = tail call double @_Z4fmaxdd(double %extract2082, double 1.000000e-200) nounwind
  %1252 = tail call double @_Z4fmaxdd(double %extract2083, double 1.000000e-200) nounwind
  %1253 = tail call double @_Z4fmaxdd(double %extract2084, double 1.000000e-200) nounwind
  %1254 = tail call double @_Z4fmaxdd(double %extract2085, double 1.000000e-200) nounwind
  %1255 = tail call double @_Z4fmaxdd(double %extract2086, double 1.000000e-200) nounwind
  %1256 = tail call double @_Z4fmaxdd(double %extract2087, double 1.000000e-200) nounwind
  %1257 = tail call double @_Z4fmaxdd(double %extract2088, double 1.000000e-200) nounwind
  %1258 = tail call double @_Z4fmaxdd(double %extract2089, double 1.000000e-200) nounwind
  %1259 = tail call double @_Z4fmaxdd(double %extract2090, double 1.000000e-200) nounwind
  %1260 = tail call double @_Z4fmaxdd(double %extract2091, double 1.000000e-200) nounwind
  %1261 = tail call double @_Z4fmaxdd(double %extract2092, double 1.000000e-200) nounwind
  %1262 = tail call double @_Z5log10d(double %1246) nounwind
  %1263 = tail call double @_Z5log10d(double %1247) nounwind
  %1264 = tail call double @_Z5log10d(double %1248) nounwind
  %1265 = tail call double @_Z5log10d(double %1249) nounwind
  %1266 = tail call double @_Z5log10d(double %1250) nounwind
  %1267 = tail call double @_Z5log10d(double %1251) nounwind
  %1268 = tail call double @_Z5log10d(double %1252) nounwind
  %1269 = tail call double @_Z5log10d(double %1253) nounwind
  %1270 = tail call double @_Z5log10d(double %1254) nounwind
  %1271 = tail call double @_Z5log10d(double %1255) nounwind
  %1272 = tail call double @_Z5log10d(double %1256) nounwind
  %1273 = tail call double @_Z5log10d(double %1257) nounwind
  %1274 = tail call double @_Z5log10d(double %1258) nounwind
  %1275 = tail call double @_Z5log10d(double %1259) nounwind
  %1276 = tail call double @_Z5log10d(double %1260) nounwind
  %1277 = tail call double @_Z5log10d(double %1261) nounwind
  %temp.vect2221 = insertelement <16 x double> undef, double %1262, i32 0
  %temp.vect2222 = insertelement <16 x double> %temp.vect2221, double %1263, i32 1
  %temp.vect2223 = insertelement <16 x double> %temp.vect2222, double %1264, i32 2
  %temp.vect2224 = insertelement <16 x double> %temp.vect2223, double %1265, i32 3
  %temp.vect2225 = insertelement <16 x double> %temp.vect2224, double %1266, i32 4
  %temp.vect2226 = insertelement <16 x double> %temp.vect2225, double %1267, i32 5
  %temp.vect2227 = insertelement <16 x double> %temp.vect2226, double %1268, i32 6
  %temp.vect2228 = insertelement <16 x double> %temp.vect2227, double %1269, i32 7
  %temp.vect2229 = insertelement <16 x double> %temp.vect2228, double %1270, i32 8
  %temp.vect2230 = insertelement <16 x double> %temp.vect2229, double %1271, i32 9
  %temp.vect2231 = insertelement <16 x double> %temp.vect2230, double %1272, i32 10
  %temp.vect2232 = insertelement <16 x double> %temp.vect2231, double %1273, i32 11
  %temp.vect2233 = insertelement <16 x double> %temp.vect2232, double %1274, i32 12
  %temp.vect2234 = insertelement <16 x double> %temp.vect2233, double %1275, i32 13
  %temp.vect2235 = insertelement <16 x double> %temp.vect2234, double %1276, i32 14
  %temp.vect2236 = insertelement <16 x double> %temp.vect2235, double %1277, i32 15
  %1278 = fmul <16 x double> %7, <double 0xBF6DCA01DCA01DCA, double 0xBF6DCA01DCA01DCA, double 0xBF6DCA01DCA01DCA, double 0xBF6DCA01DCA01DCA, double 0xBF6DCA01DCA01DCA, double 0xBF6DCA01DCA01DCA, double 0xBF6DCA01DCA01DCA, double 0xBF6DCA01DCA01DCA, double 0xBF6DCA01DCA01DCA, double 0xBF6DCA01DCA01DCA, double 0xBF6DCA01DCA01DCA, double 0xBF6DCA01DCA01DCA, double 0xBF6DCA01DCA01DCA, double 0xBF6DCA01DCA01DCA, double 0xBF6DCA01DCA01DCA, double 0xBF6DCA01DCA01DCA>
  %extract2093 = extractelement <16 x double> %1278, i32 0
  %extract2094 = extractelement <16 x double> %1278, i32 1
  %extract2095 = extractelement <16 x double> %1278, i32 2
  %extract2096 = extractelement <16 x double> %1278, i32 3
  %extract2097 = extractelement <16 x double> %1278, i32 4
  %extract2098 = extractelement <16 x double> %1278, i32 5
  %extract2099 = extractelement <16 x double> %1278, i32 6
  %extract2100 = extractelement <16 x double> %1278, i32 7
  %extract2101 = extractelement <16 x double> %1278, i32 8
  %extract2102 = extractelement <16 x double> %1278, i32 9
  %extract2103 = extractelement <16 x double> %1278, i32 10
  %extract2104 = extractelement <16 x double> %1278, i32 11
  %extract2105 = extractelement <16 x double> %1278, i32 12
  %extract2106 = extractelement <16 x double> %1278, i32 13
  %extract2107 = extractelement <16 x double> %1278, i32 14
  %extract2108 = extractelement <16 x double> %1278, i32 15
  %1279 = tail call double @_Z3expd(double %extract2093) nounwind
  %1280 = tail call double @_Z3expd(double %extract2094) nounwind
  %1281 = tail call double @_Z3expd(double %extract2095) nounwind
  %1282 = tail call double @_Z3expd(double %extract2096) nounwind
  %1283 = tail call double @_Z3expd(double %extract2097) nounwind
  %1284 = tail call double @_Z3expd(double %extract2098) nounwind
  %1285 = tail call double @_Z3expd(double %extract2099) nounwind
  %1286 = tail call double @_Z3expd(double %extract2100) nounwind
  %1287 = tail call double @_Z3expd(double %extract2101) nounwind
  %1288 = tail call double @_Z3expd(double %extract2102) nounwind
  %1289 = tail call double @_Z3expd(double %extract2103) nounwind
  %1290 = tail call double @_Z3expd(double %extract2104) nounwind
  %1291 = tail call double @_Z3expd(double %extract2105) nounwind
  %1292 = tail call double @_Z3expd(double %extract2106) nounwind
  %1293 = tail call double @_Z3expd(double %extract2107) nounwind
  %1294 = tail call double @_Z3expd(double %extract2108) nounwind
  %temp.vect2109 = insertelement <16 x double> undef, double %1279, i32 0
  %temp.vect2110 = insertelement <16 x double> %temp.vect2109, double %1280, i32 1
  %temp.vect2111 = insertelement <16 x double> %temp.vect2110, double %1281, i32 2
  %temp.vect2112 = insertelement <16 x double> %temp.vect2111, double %1282, i32 3
  %temp.vect2113 = insertelement <16 x double> %temp.vect2112, double %1283, i32 4
  %temp.vect2114 = insertelement <16 x double> %temp.vect2113, double %1284, i32 5
  %temp.vect2115 = insertelement <16 x double> %temp.vect2114, double %1285, i32 6
  %temp.vect2116 = insertelement <16 x double> %temp.vect2115, double %1286, i32 7
  %temp.vect2117 = insertelement <16 x double> %temp.vect2116, double %1287, i32 8
  %temp.vect2118 = insertelement <16 x double> %temp.vect2117, double %1288, i32 9
  %temp.vect2119 = insertelement <16 x double> %temp.vect2118, double %1289, i32 10
  %temp.vect2120 = insertelement <16 x double> %temp.vect2119, double %1290, i32 11
  %temp.vect2121 = insertelement <16 x double> %temp.vect2120, double %1291, i32 12
  %temp.vect2122 = insertelement <16 x double> %temp.vect2121, double %1292, i32 13
  %temp.vect2123 = insertelement <16 x double> %temp.vect2122, double %1293, i32 14
  %temp.vect2124 = insertelement <16 x double> %temp.vect2123, double %1294, i32 15
  %1295 = fmul <16 x double> %temp.vect2124, <double 4.093000e-01, double 4.093000e-01, double 4.093000e-01, double 4.093000e-01, double 4.093000e-01, double 4.093000e-01, double 4.093000e-01, double 4.093000e-01, double 4.093000e-01, double 4.093000e-01, double 4.093000e-01, double 4.093000e-01, double 4.093000e-01, double 4.093000e-01, double 4.093000e-01, double 4.093000e-01>
  %1296 = fmul <16 x double> %7, <double 0xBF4ABA41FBD2E5B1, double 0xBF4ABA41FBD2E5B1, double 0xBF4ABA41FBD2E5B1, double 0xBF4ABA41FBD2E5B1, double 0xBF4ABA41FBD2E5B1, double 0xBF4ABA41FBD2E5B1, double 0xBF4ABA41FBD2E5B1, double 0xBF4ABA41FBD2E5B1, double 0xBF4ABA41FBD2E5B1, double 0xBF4ABA41FBD2E5B1, double 0xBF4ABA41FBD2E5B1, double 0xBF4ABA41FBD2E5B1, double 0xBF4ABA41FBD2E5B1, double 0xBF4ABA41FBD2E5B1, double 0xBF4ABA41FBD2E5B1, double 0xBF4ABA41FBD2E5B1>
  %extract2125 = extractelement <16 x double> %1296, i32 0
  %extract2126 = extractelement <16 x double> %1296, i32 1
  %extract2127 = extractelement <16 x double> %1296, i32 2
  %extract2128 = extractelement <16 x double> %1296, i32 3
  %extract2129 = extractelement <16 x double> %1296, i32 4
  %extract2130 = extractelement <16 x double> %1296, i32 5
  %extract2131 = extractelement <16 x double> %1296, i32 6
  %extract2132 = extractelement <16 x double> %1296, i32 7
  %extract2133 = extractelement <16 x double> %1296, i32 8
  %extract2134 = extractelement <16 x double> %1296, i32 9
  %extract2135 = extractelement <16 x double> %1296, i32 10
  %extract2136 = extractelement <16 x double> %1296, i32 11
  %extract2137 = extractelement <16 x double> %1296, i32 12
  %extract2138 = extractelement <16 x double> %1296, i32 13
  %extract2139 = extractelement <16 x double> %1296, i32 14
  %extract2140 = extractelement <16 x double> %1296, i32 15
  %1297 = tail call double @_Z3expd(double %extract2125) nounwind
  %1298 = tail call double @_Z3expd(double %extract2126) nounwind
  %1299 = tail call double @_Z3expd(double %extract2127) nounwind
  %1300 = tail call double @_Z3expd(double %extract2128) nounwind
  %1301 = tail call double @_Z3expd(double %extract2129) nounwind
  %1302 = tail call double @_Z3expd(double %extract2130) nounwind
  %1303 = tail call double @_Z3expd(double %extract2131) nounwind
  %1304 = tail call double @_Z3expd(double %extract2132) nounwind
  %1305 = tail call double @_Z3expd(double %extract2133) nounwind
  %1306 = tail call double @_Z3expd(double %extract2134) nounwind
  %1307 = tail call double @_Z3expd(double %extract2135) nounwind
  %1308 = tail call double @_Z3expd(double %extract2136) nounwind
  %1309 = tail call double @_Z3expd(double %extract2137) nounwind
  %1310 = tail call double @_Z3expd(double %extract2138) nounwind
  %1311 = tail call double @_Z3expd(double %extract2139) nounwind
  %1312 = tail call double @_Z3expd(double %extract2140) nounwind
  %temp.vect2141 = insertelement <16 x double> undef, double %1297, i32 0
  %temp.vect2142 = insertelement <16 x double> %temp.vect2141, double %1298, i32 1
  %temp.vect2143 = insertelement <16 x double> %temp.vect2142, double %1299, i32 2
  %temp.vect2144 = insertelement <16 x double> %temp.vect2143, double %1300, i32 3
  %temp.vect2145 = insertelement <16 x double> %temp.vect2144, double %1301, i32 4
  %temp.vect2146 = insertelement <16 x double> %temp.vect2145, double %1302, i32 5
  %temp.vect2147 = insertelement <16 x double> %temp.vect2146, double %1303, i32 6
  %temp.vect2148 = insertelement <16 x double> %temp.vect2147, double %1304, i32 7
  %temp.vect2149 = insertelement <16 x double> %temp.vect2148, double %1305, i32 8
  %temp.vect2150 = insertelement <16 x double> %temp.vect2149, double %1306, i32 9
  %temp.vect2151 = insertelement <16 x double> %temp.vect2150, double %1307, i32 10
  %temp.vect2152 = insertelement <16 x double> %temp.vect2151, double %1308, i32 11
  %temp.vect2153 = insertelement <16 x double> %temp.vect2152, double %1309, i32 12
  %temp.vect2154 = insertelement <16 x double> %temp.vect2153, double %1310, i32 13
  %temp.vect2155 = insertelement <16 x double> %temp.vect2154, double %1311, i32 14
  %temp.vect2156 = insertelement <16 x double> %temp.vect2155, double %1312, i32 15
  %1313 = fmul <16 x double> %temp.vect2156, <double 5.907000e-01, double 5.907000e-01, double 5.907000e-01, double 5.907000e-01, double 5.907000e-01, double 5.907000e-01, double 5.907000e-01, double 5.907000e-01, double 5.907000e-01, double 5.907000e-01, double 5.907000e-01, double 5.907000e-01, double 5.907000e-01, double 5.907000e-01, double 5.907000e-01, double 5.907000e-01>
  %1314 = fadd <16 x double> %1295, %1313
  %1315 = fmul <16 x double> %329, <double -5.185000e+03, double -5.185000e+03, double -5.185000e+03, double -5.185000e+03, double -5.185000e+03, double -5.185000e+03, double -5.185000e+03, double -5.185000e+03, double -5.185000e+03, double -5.185000e+03, double -5.185000e+03, double -5.185000e+03, double -5.185000e+03, double -5.185000e+03, double -5.185000e+03, double -5.185000e+03>
  %extract2157 = extractelement <16 x double> %1315, i32 0
  %extract2158 = extractelement <16 x double> %1315, i32 1
  %extract2159 = extractelement <16 x double> %1315, i32 2
  %extract2160 = extractelement <16 x double> %1315, i32 3
  %extract2161 = extractelement <16 x double> %1315, i32 4
  %extract2162 = extractelement <16 x double> %1315, i32 5
  %extract2163 = extractelement <16 x double> %1315, i32 6
  %extract2164 = extractelement <16 x double> %1315, i32 7
  %extract2165 = extractelement <16 x double> %1315, i32 8
  %extract2166 = extractelement <16 x double> %1315, i32 9
  %extract2167 = extractelement <16 x double> %1315, i32 10
  %extract2168 = extractelement <16 x double> %1315, i32 11
  %extract2169 = extractelement <16 x double> %1315, i32 12
  %extract2170 = extractelement <16 x double> %1315, i32 13
  %extract2171 = extractelement <16 x double> %1315, i32 14
  %extract2172 = extractelement <16 x double> %1315, i32 15
  %1316 = tail call double @_Z3expd(double %extract2157) nounwind
  %1317 = tail call double @_Z3expd(double %extract2158) nounwind
  %1318 = tail call double @_Z3expd(double %extract2159) nounwind
  %1319 = tail call double @_Z3expd(double %extract2160) nounwind
  %1320 = tail call double @_Z3expd(double %extract2161) nounwind
  %1321 = tail call double @_Z3expd(double %extract2162) nounwind
  %1322 = tail call double @_Z3expd(double %extract2163) nounwind
  %1323 = tail call double @_Z3expd(double %extract2164) nounwind
  %1324 = tail call double @_Z3expd(double %extract2165) nounwind
  %1325 = tail call double @_Z3expd(double %extract2166) nounwind
  %1326 = tail call double @_Z3expd(double %extract2167) nounwind
  %1327 = tail call double @_Z3expd(double %extract2168) nounwind
  %1328 = tail call double @_Z3expd(double %extract2169) nounwind
  %1329 = tail call double @_Z3expd(double %extract2170) nounwind
  %1330 = tail call double @_Z3expd(double %extract2171) nounwind
  %1331 = tail call double @_Z3expd(double %extract2172) nounwind
  %temp.vect2173 = insertelement <16 x double> undef, double %1316, i32 0
  %temp.vect2174 = insertelement <16 x double> %temp.vect2173, double %1317, i32 1
  %temp.vect2175 = insertelement <16 x double> %temp.vect2174, double %1318, i32 2
  %temp.vect2176 = insertelement <16 x double> %temp.vect2175, double %1319, i32 3
  %temp.vect2177 = insertelement <16 x double> %temp.vect2176, double %1320, i32 4
  %temp.vect2178 = insertelement <16 x double> %temp.vect2177, double %1321, i32 5
  %temp.vect2179 = insertelement <16 x double> %temp.vect2178, double %1322, i32 6
  %temp.vect2180 = insertelement <16 x double> %temp.vect2179, double %1323, i32 7
  %temp.vect2181 = insertelement <16 x double> %temp.vect2180, double %1324, i32 8
  %temp.vect2182 = insertelement <16 x double> %temp.vect2181, double %1325, i32 9
  %temp.vect2183 = insertelement <16 x double> %temp.vect2182, double %1326, i32 10
  %temp.vect2184 = insertelement <16 x double> %temp.vect2183, double %1327, i32 11
  %temp.vect2185 = insertelement <16 x double> %temp.vect2184, double %1328, i32 12
  %temp.vect2186 = insertelement <16 x double> %temp.vect2185, double %1329, i32 13
  %temp.vect2187 = insertelement <16 x double> %temp.vect2186, double %1330, i32 14
  %temp.vect2188 = insertelement <16 x double> %temp.vect2187, double %1331, i32 15
  %1332 = fadd <16 x double> %1314, %temp.vect2188
  %extract2189 = extractelement <16 x double> %1332, i32 0
  %extract2190 = extractelement <16 x double> %1332, i32 1
  %extract2191 = extractelement <16 x double> %1332, i32 2
  %extract2192 = extractelement <16 x double> %1332, i32 3
  %extract2193 = extractelement <16 x double> %1332, i32 4
  %extract2194 = extractelement <16 x double> %1332, i32 5
  %extract2195 = extractelement <16 x double> %1332, i32 6
  %extract2196 = extractelement <16 x double> %1332, i32 7
  %extract2197 = extractelement <16 x double> %1332, i32 8
  %extract2198 = extractelement <16 x double> %1332, i32 9
  %extract2199 = extractelement <16 x double> %1332, i32 10
  %extract2200 = extractelement <16 x double> %1332, i32 11
  %extract2201 = extractelement <16 x double> %1332, i32 12
  %extract2202 = extractelement <16 x double> %1332, i32 13
  %extract2203 = extractelement <16 x double> %1332, i32 14
  %extract2204 = extractelement <16 x double> %1332, i32 15
  %1333 = tail call double @_Z4fmaxdd(double %extract2189, double 1.000000e-200) nounwind
  %1334 = tail call double @_Z4fmaxdd(double %extract2190, double 1.000000e-200) nounwind
  %1335 = tail call double @_Z4fmaxdd(double %extract2191, double 1.000000e-200) nounwind
  %1336 = tail call double @_Z4fmaxdd(double %extract2192, double 1.000000e-200) nounwind
  %1337 = tail call double @_Z4fmaxdd(double %extract2193, double 1.000000e-200) nounwind
  %1338 = tail call double @_Z4fmaxdd(double %extract2194, double 1.000000e-200) nounwind
  %1339 = tail call double @_Z4fmaxdd(double %extract2195, double 1.000000e-200) nounwind
  %1340 = tail call double @_Z4fmaxdd(double %extract2196, double 1.000000e-200) nounwind
  %1341 = tail call double @_Z4fmaxdd(double %extract2197, double 1.000000e-200) nounwind
  %1342 = tail call double @_Z4fmaxdd(double %extract2198, double 1.000000e-200) nounwind
  %1343 = tail call double @_Z4fmaxdd(double %extract2199, double 1.000000e-200) nounwind
  %1344 = tail call double @_Z4fmaxdd(double %extract2200, double 1.000000e-200) nounwind
  %1345 = tail call double @_Z4fmaxdd(double %extract2201, double 1.000000e-200) nounwind
  %1346 = tail call double @_Z4fmaxdd(double %extract2202, double 1.000000e-200) nounwind
  %1347 = tail call double @_Z4fmaxdd(double %extract2203, double 1.000000e-200) nounwind
  %1348 = tail call double @_Z4fmaxdd(double %extract2204, double 1.000000e-200) nounwind
  %1349 = tail call double @_Z5log10d(double %1333) nounwind
  %1350 = tail call double @_Z5log10d(double %1334) nounwind
  %1351 = tail call double @_Z5log10d(double %1335) nounwind
  %1352 = tail call double @_Z5log10d(double %1336) nounwind
  %1353 = tail call double @_Z5log10d(double %1337) nounwind
  %1354 = tail call double @_Z5log10d(double %1338) nounwind
  %1355 = tail call double @_Z5log10d(double %1339) nounwind
  %1356 = tail call double @_Z5log10d(double %1340) nounwind
  %1357 = tail call double @_Z5log10d(double %1341) nounwind
  %1358 = tail call double @_Z5log10d(double %1342) nounwind
  %1359 = tail call double @_Z5log10d(double %1343) nounwind
  %1360 = tail call double @_Z5log10d(double %1344) nounwind
  %1361 = tail call double @_Z5log10d(double %1345) nounwind
  %1362 = tail call double @_Z5log10d(double %1346) nounwind
  %1363 = tail call double @_Z5log10d(double %1347) nounwind
  %1364 = tail call double @_Z5log10d(double %1348) nounwind
  %temp.vect2205 = insertelement <16 x double> undef, double %1349, i32 0
  %temp.vect2206 = insertelement <16 x double> %temp.vect2205, double %1350, i32 1
  %temp.vect2207 = insertelement <16 x double> %temp.vect2206, double %1351, i32 2
  %temp.vect2208 = insertelement <16 x double> %temp.vect2207, double %1352, i32 3
  %temp.vect2209 = insertelement <16 x double> %temp.vect2208, double %1353, i32 4
  %temp.vect2210 = insertelement <16 x double> %temp.vect2209, double %1354, i32 5
  %temp.vect2211 = insertelement <16 x double> %temp.vect2210, double %1355, i32 6
  %temp.vect2212 = insertelement <16 x double> %temp.vect2211, double %1356, i32 7
  %temp.vect2213 = insertelement <16 x double> %temp.vect2212, double %1357, i32 8
  %temp.vect2214 = insertelement <16 x double> %temp.vect2213, double %1358, i32 9
  %temp.vect2215 = insertelement <16 x double> %temp.vect2214, double %1359, i32 10
  %temp.vect2216 = insertelement <16 x double> %temp.vect2215, double %1360, i32 11
  %temp.vect2217 = insertelement <16 x double> %temp.vect2216, double %1361, i32 12
  %temp.vect2218 = insertelement <16 x double> %temp.vect2217, double %1362, i32 13
  %temp.vect2219 = insertelement <16 x double> %temp.vect2218, double %1363, i32 14
  %temp.vect2220 = insertelement <16 x double> %temp.vect2219, double %1364, i32 15
  %1365 = fmul <16 x double> %temp.vect2220, <double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00>
  %1366 = fsub <16 x double> <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>, %1365
  %1367 = fmul <16 x double> %temp.vect2220, <double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01>
  %1368 = fadd <16 x double> %1367, <double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01>
  %1369 = fsub <16 x double> %temp.vect2236, %1368
  %1370 = fmul <16 x double> %1369, <double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01>
  %1371 = fsub <16 x double> %1366, %1370
  %1372 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1371
  %1373 = fmul <16 x double> %1369, %1372
  %1374 = fmul <16 x double> %1373, %1373
  %1375 = fadd <16 x double> %1374, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %1376 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1375
  %1377 = fmul <16 x double> %temp.vect2220, %1376
  %extract2237 = extractelement <16 x double> %1377, i32 0
  %extract2238 = extractelement <16 x double> %1377, i32 1
  %extract2239 = extractelement <16 x double> %1377, i32 2
  %extract2240 = extractelement <16 x double> %1377, i32 3
  %extract2241 = extractelement <16 x double> %1377, i32 4
  %extract2242 = extractelement <16 x double> %1377, i32 5
  %extract2243 = extractelement <16 x double> %1377, i32 6
  %extract2244 = extractelement <16 x double> %1377, i32 7
  %extract2245 = extractelement <16 x double> %1377, i32 8
  %extract2246 = extractelement <16 x double> %1377, i32 9
  %extract2247 = extractelement <16 x double> %1377, i32 10
  %extract2248 = extractelement <16 x double> %1377, i32 11
  %extract2249 = extractelement <16 x double> %1377, i32 12
  %extract2250 = extractelement <16 x double> %1377, i32 13
  %extract2251 = extractelement <16 x double> %1377, i32 14
  %extract2252 = extractelement <16 x double> %1377, i32 15
  %1378 = tail call double @_Z5exp10d(double %extract2237) nounwind
  %1379 = tail call double @_Z5exp10d(double %extract2238) nounwind
  %1380 = tail call double @_Z5exp10d(double %extract2239) nounwind
  %1381 = tail call double @_Z5exp10d(double %extract2240) nounwind
  %1382 = tail call double @_Z5exp10d(double %extract2241) nounwind
  %1383 = tail call double @_Z5exp10d(double %extract2242) nounwind
  %1384 = tail call double @_Z5exp10d(double %extract2243) nounwind
  %1385 = tail call double @_Z5exp10d(double %extract2244) nounwind
  %1386 = tail call double @_Z5exp10d(double %extract2245) nounwind
  %1387 = tail call double @_Z5exp10d(double %extract2246) nounwind
  %1388 = tail call double @_Z5exp10d(double %extract2247) nounwind
  %1389 = tail call double @_Z5exp10d(double %extract2248) nounwind
  %1390 = tail call double @_Z5exp10d(double %extract2249) nounwind
  %1391 = tail call double @_Z5exp10d(double %extract2250) nounwind
  %1392 = tail call double @_Z5exp10d(double %extract2251) nounwind
  %1393 = tail call double @_Z5exp10d(double %extract2252) nounwind
  %temp.vect2253 = insertelement <16 x double> undef, double %1378, i32 0
  %temp.vect2254 = insertelement <16 x double> %temp.vect2253, double %1379, i32 1
  %temp.vect2255 = insertelement <16 x double> %temp.vect2254, double %1380, i32 2
  %temp.vect2256 = insertelement <16 x double> %temp.vect2255, double %1381, i32 3
  %temp.vect2257 = insertelement <16 x double> %temp.vect2256, double %1382, i32 4
  %temp.vect2258 = insertelement <16 x double> %temp.vect2257, double %1383, i32 5
  %temp.vect2259 = insertelement <16 x double> %temp.vect2258, double %1384, i32 6
  %temp.vect2260 = insertelement <16 x double> %temp.vect2259, double %1385, i32 7
  %temp.vect2261 = insertelement <16 x double> %temp.vect2260, double %1386, i32 8
  %temp.vect2262 = insertelement <16 x double> %temp.vect2261, double %1387, i32 9
  %temp.vect2263 = insertelement <16 x double> %temp.vect2262, double %1388, i32 10
  %temp.vect2264 = insertelement <16 x double> %temp.vect2263, double %1389, i32 11
  %temp.vect2265 = insertelement <16 x double> %temp.vect2264, double %1390, i32 12
  %temp.vect2266 = insertelement <16 x double> %temp.vect2265, double %1391, i32 13
  %temp.vect2267 = insertelement <16 x double> %temp.vect2266, double %1392, i32 14
  %temp.vect2268 = insertelement <16 x double> %temp.vect2267, double %1393, i32 15
  %1394 = fmul <16 x double> %temp.vect2268, %1245
  %1395 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1396 = load i64* %1395, align 8
  %1397 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1398 = load i64* %1397, align 8
  %1399 = add i64 %1396, %1398
  %extract2271 = add i64 %1399, 6082560
  %1400 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2271
  %ptrTypeCast2287 = bitcast double addrspace(1)* %1400 to <16 x double> addrspace(1)*
  %1401 = load <16 x double> addrspace(1)* %ptrTypeCast2287, align 8
  %1402 = fmul <16 x double> %1401, %1394
  %1403 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1404 = load i64* %1403, align 8
  %1405 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1406 = load i64* %1405, align 8
  %1407 = add i64 %1404, %1406
  %extract2290 = add i64 %1407, 6082560
  %1408 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2290
  %ptrTypeCast2306 = bitcast double addrspace(1)* %1408 to <16 x double> addrspace(1)*
  store <16 x double> %1402, <16 x double> addrspace(1)* %ptrTypeCast2306, align 8
  %1409 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1410 = load i64* %1409, align 8
  %1411 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1412 = load i64* %1411, align 8
  %1413 = add i64 %1410, %1412
  %extract2309 = add i64 %1413, 6082560
  %1414 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract2309
  %ptrTypeCast2325 = bitcast double addrspace(1)* %1414 to <16 x double> addrspace(1)*
  %1415 = load <16 x double> addrspace(1)* %ptrTypeCast2325, align 8
  %1416 = fmul <16 x double> %1415, %1394
  %1417 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1418 = load i64* %1417, align 8
  %1419 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1420 = load i64* %1419, align 8
  %1421 = add i64 %1418, %1420
  %extract2328 = add i64 %1421, 6082560
  %1422 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract2328
  %ptrTypeCast2344 = bitcast double addrspace(1)* %1422 to <16 x double> addrspace(1)*
  store <16 x double> %1416, <16 x double> addrspace(1)* %ptrTypeCast2344, align 8
  %1423 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1424 = load i64* %1423, align 8
  %1425 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1426 = load i64* %1425, align 8
  %1427 = add i64 %1424, %1426
  %extract2347 = add i64 %1427, 663552
  %1428 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %extract2347
  %ptrTypeCast2363 = bitcast double addrspace(1)* %1428 to <16 x double> addrspace(1)*
  %1429 = load <16 x double> addrspace(1)* %ptrTypeCast2363, align 8
  %1430 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1431 = load i64* %1430, align 8
  %1432 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1433 = load i64* %1432, align 8
  %1434 = add i64 %1431, %1433
  %extract2366 = add i64 %1434, 7741440
  %1435 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2366
  %ptrTypeCast2382 = bitcast double addrspace(1)* %1435 to <16 x double> addrspace(1)*
  %1436 = load <16 x double> addrspace(1)* %ptrTypeCast2382, align 8
  %1437 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1436
  %1438 = fmul <16 x double> %101, %1437
  %1439 = fmul <16 x double> %1429, %1438
  %extract2383 = extractelement <16 x double> %1439, i32 0
  %extract2384 = extractelement <16 x double> %1439, i32 1
  %extract2385 = extractelement <16 x double> %1439, i32 2
  %extract2386 = extractelement <16 x double> %1439, i32 3
  %extract2387 = extractelement <16 x double> %1439, i32 4
  %extract2388 = extractelement <16 x double> %1439, i32 5
  %extract2389 = extractelement <16 x double> %1439, i32 6
  %extract2390 = extractelement <16 x double> %1439, i32 7
  %extract2391 = extractelement <16 x double> %1439, i32 8
  %extract2392 = extractelement <16 x double> %1439, i32 9
  %extract2393 = extractelement <16 x double> %1439, i32 10
  %extract2394 = extractelement <16 x double> %1439, i32 11
  %extract2395 = extractelement <16 x double> %1439, i32 12
  %extract2396 = extractelement <16 x double> %1439, i32 13
  %extract2397 = extractelement <16 x double> %1439, i32 14
  %extract2398 = extractelement <16 x double> %1439, i32 15
  %1440 = fadd <16 x double> %1439, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %1441 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1440
  %1442 = fmul <16 x double> %1439, %1441
  %1443 = tail call double @_Z4fmaxdd(double %extract2383, double 1.000000e-200) nounwind
  %1444 = tail call double @_Z4fmaxdd(double %extract2384, double 1.000000e-200) nounwind
  %1445 = tail call double @_Z4fmaxdd(double %extract2385, double 1.000000e-200) nounwind
  %1446 = tail call double @_Z4fmaxdd(double %extract2386, double 1.000000e-200) nounwind
  %1447 = tail call double @_Z4fmaxdd(double %extract2387, double 1.000000e-200) nounwind
  %1448 = tail call double @_Z4fmaxdd(double %extract2388, double 1.000000e-200) nounwind
  %1449 = tail call double @_Z4fmaxdd(double %extract2389, double 1.000000e-200) nounwind
  %1450 = tail call double @_Z4fmaxdd(double %extract2390, double 1.000000e-200) nounwind
  %1451 = tail call double @_Z4fmaxdd(double %extract2391, double 1.000000e-200) nounwind
  %1452 = tail call double @_Z4fmaxdd(double %extract2392, double 1.000000e-200) nounwind
  %1453 = tail call double @_Z4fmaxdd(double %extract2393, double 1.000000e-200) nounwind
  %1454 = tail call double @_Z4fmaxdd(double %extract2394, double 1.000000e-200) nounwind
  %1455 = tail call double @_Z4fmaxdd(double %extract2395, double 1.000000e-200) nounwind
  %1456 = tail call double @_Z4fmaxdd(double %extract2396, double 1.000000e-200) nounwind
  %1457 = tail call double @_Z4fmaxdd(double %extract2397, double 1.000000e-200) nounwind
  %1458 = tail call double @_Z4fmaxdd(double %extract2398, double 1.000000e-200) nounwind
  %1459 = tail call double @_Z5log10d(double %1443) nounwind
  %1460 = tail call double @_Z5log10d(double %1444) nounwind
  %1461 = tail call double @_Z5log10d(double %1445) nounwind
  %1462 = tail call double @_Z5log10d(double %1446) nounwind
  %1463 = tail call double @_Z5log10d(double %1447) nounwind
  %1464 = tail call double @_Z5log10d(double %1448) nounwind
  %1465 = tail call double @_Z5log10d(double %1449) nounwind
  %1466 = tail call double @_Z5log10d(double %1450) nounwind
  %1467 = tail call double @_Z5log10d(double %1451) nounwind
  %1468 = tail call double @_Z5log10d(double %1452) nounwind
  %1469 = tail call double @_Z5log10d(double %1453) nounwind
  %1470 = tail call double @_Z5log10d(double %1454) nounwind
  %1471 = tail call double @_Z5log10d(double %1455) nounwind
  %1472 = tail call double @_Z5log10d(double %1456) nounwind
  %1473 = tail call double @_Z5log10d(double %1457) nounwind
  %1474 = tail call double @_Z5log10d(double %1458) nounwind
  %temp.vect2511 = insertelement <16 x double> undef, double %1459, i32 0
  %temp.vect2512 = insertelement <16 x double> %temp.vect2511, double %1460, i32 1
  %temp.vect2513 = insertelement <16 x double> %temp.vect2512, double %1461, i32 2
  %temp.vect2514 = insertelement <16 x double> %temp.vect2513, double %1462, i32 3
  %temp.vect2515 = insertelement <16 x double> %temp.vect2514, double %1463, i32 4
  %temp.vect2516 = insertelement <16 x double> %temp.vect2515, double %1464, i32 5
  %temp.vect2517 = insertelement <16 x double> %temp.vect2516, double %1465, i32 6
  %temp.vect2518 = insertelement <16 x double> %temp.vect2517, double %1466, i32 7
  %temp.vect2519 = insertelement <16 x double> %temp.vect2518, double %1467, i32 8
  %temp.vect2520 = insertelement <16 x double> %temp.vect2519, double %1468, i32 9
  %temp.vect2521 = insertelement <16 x double> %temp.vect2520, double %1469, i32 10
  %temp.vect2522 = insertelement <16 x double> %temp.vect2521, double %1470, i32 11
  %temp.vect2523 = insertelement <16 x double> %temp.vect2522, double %1471, i32 12
  %temp.vect2524 = insertelement <16 x double> %temp.vect2523, double %1472, i32 13
  %temp.vect2525 = insertelement <16 x double> %temp.vect2524, double %1473, i32 14
  %temp.vect2526 = insertelement <16 x double> %temp.vect2525, double %1474, i32 15
  %1475 = tail call double @_Z3expd(double %extract564) nounwind
  %1476 = tail call double @_Z3expd(double %extract565) nounwind
  %1477 = tail call double @_Z3expd(double %extract566) nounwind
  %1478 = tail call double @_Z3expd(double %extract567) nounwind
  %1479 = tail call double @_Z3expd(double %extract568) nounwind
  %1480 = tail call double @_Z3expd(double %extract569) nounwind
  %1481 = tail call double @_Z3expd(double %extract570) nounwind
  %1482 = tail call double @_Z3expd(double %extract571) nounwind
  %1483 = tail call double @_Z3expd(double %extract572) nounwind
  %1484 = tail call double @_Z3expd(double %extract573) nounwind
  %1485 = tail call double @_Z3expd(double %extract574) nounwind
  %1486 = tail call double @_Z3expd(double %extract575) nounwind
  %1487 = tail call double @_Z3expd(double %extract576) nounwind
  %1488 = tail call double @_Z3expd(double %extract577) nounwind
  %1489 = tail call double @_Z3expd(double %extract578) nounwind
  %1490 = tail call double @_Z3expd(double %extract579) nounwind
  %temp.vect2399 = insertelement <16 x double> undef, double %1475, i32 0
  %temp.vect2400 = insertelement <16 x double> %temp.vect2399, double %1476, i32 1
  %temp.vect2401 = insertelement <16 x double> %temp.vect2400, double %1477, i32 2
  %temp.vect2402 = insertelement <16 x double> %temp.vect2401, double %1478, i32 3
  %temp.vect2403 = insertelement <16 x double> %temp.vect2402, double %1479, i32 4
  %temp.vect2404 = insertelement <16 x double> %temp.vect2403, double %1480, i32 5
  %temp.vect2405 = insertelement <16 x double> %temp.vect2404, double %1481, i32 6
  %temp.vect2406 = insertelement <16 x double> %temp.vect2405, double %1482, i32 7
  %temp.vect2407 = insertelement <16 x double> %temp.vect2406, double %1483, i32 8
  %temp.vect2408 = insertelement <16 x double> %temp.vect2407, double %1484, i32 9
  %temp.vect2409 = insertelement <16 x double> %temp.vect2408, double %1485, i32 10
  %temp.vect2410 = insertelement <16 x double> %temp.vect2409, double %1486, i32 11
  %temp.vect2411 = insertelement <16 x double> %temp.vect2410, double %1487, i32 12
  %temp.vect2412 = insertelement <16 x double> %temp.vect2411, double %1488, i32 13
  %temp.vect2413 = insertelement <16 x double> %temp.vect2412, double %1489, i32 14
  %temp.vect2414 = insertelement <16 x double> %temp.vect2413, double %1490, i32 15
  %1491 = fmul <16 x double> %temp.vect2414, <double 2.420000e-01, double 2.420000e-01, double 2.420000e-01, double 2.420000e-01, double 2.420000e-01, double 2.420000e-01, double 2.420000e-01, double 2.420000e-01, double 2.420000e-01, double 2.420000e-01, double 2.420000e-01, double 2.420000e-01, double 2.420000e-01, double 2.420000e-01, double 2.420000e-01, double 2.420000e-01>
  %1492 = fmul <16 x double> %7, <double 0xBF45129A6C53A1D5, double 0xBF45129A6C53A1D5, double 0xBF45129A6C53A1D5, double 0xBF45129A6C53A1D5, double 0xBF45129A6C53A1D5, double 0xBF45129A6C53A1D5, double 0xBF45129A6C53A1D5, double 0xBF45129A6C53A1D5, double 0xBF45129A6C53A1D5, double 0xBF45129A6C53A1D5, double 0xBF45129A6C53A1D5, double 0xBF45129A6C53A1D5, double 0xBF45129A6C53A1D5, double 0xBF45129A6C53A1D5, double 0xBF45129A6C53A1D5, double 0xBF45129A6C53A1D5>
  %extract2415 = extractelement <16 x double> %1492, i32 0
  %extract2416 = extractelement <16 x double> %1492, i32 1
  %extract2417 = extractelement <16 x double> %1492, i32 2
  %extract2418 = extractelement <16 x double> %1492, i32 3
  %extract2419 = extractelement <16 x double> %1492, i32 4
  %extract2420 = extractelement <16 x double> %1492, i32 5
  %extract2421 = extractelement <16 x double> %1492, i32 6
  %extract2422 = extractelement <16 x double> %1492, i32 7
  %extract2423 = extractelement <16 x double> %1492, i32 8
  %extract2424 = extractelement <16 x double> %1492, i32 9
  %extract2425 = extractelement <16 x double> %1492, i32 10
  %extract2426 = extractelement <16 x double> %1492, i32 11
  %extract2427 = extractelement <16 x double> %1492, i32 12
  %extract2428 = extractelement <16 x double> %1492, i32 13
  %extract2429 = extractelement <16 x double> %1492, i32 14
  %extract2430 = extractelement <16 x double> %1492, i32 15
  %1493 = tail call double @_Z3expd(double %extract2415) nounwind
  %1494 = tail call double @_Z3expd(double %extract2416) nounwind
  %1495 = tail call double @_Z3expd(double %extract2417) nounwind
  %1496 = tail call double @_Z3expd(double %extract2418) nounwind
  %1497 = tail call double @_Z3expd(double %extract2419) nounwind
  %1498 = tail call double @_Z3expd(double %extract2420) nounwind
  %1499 = tail call double @_Z3expd(double %extract2421) nounwind
  %1500 = tail call double @_Z3expd(double %extract2422) nounwind
  %1501 = tail call double @_Z3expd(double %extract2423) nounwind
  %1502 = tail call double @_Z3expd(double %extract2424) nounwind
  %1503 = tail call double @_Z3expd(double %extract2425) nounwind
  %1504 = tail call double @_Z3expd(double %extract2426) nounwind
  %1505 = tail call double @_Z3expd(double %extract2427) nounwind
  %1506 = tail call double @_Z3expd(double %extract2428) nounwind
  %1507 = tail call double @_Z3expd(double %extract2429) nounwind
  %1508 = tail call double @_Z3expd(double %extract2430) nounwind
  %temp.vect2431 = insertelement <16 x double> undef, double %1493, i32 0
  %temp.vect2432 = insertelement <16 x double> %temp.vect2431, double %1494, i32 1
  %temp.vect2433 = insertelement <16 x double> %temp.vect2432, double %1495, i32 2
  %temp.vect2434 = insertelement <16 x double> %temp.vect2433, double %1496, i32 3
  %temp.vect2435 = insertelement <16 x double> %temp.vect2434, double %1497, i32 4
  %temp.vect2436 = insertelement <16 x double> %temp.vect2435, double %1498, i32 5
  %temp.vect2437 = insertelement <16 x double> %temp.vect2436, double %1499, i32 6
  %temp.vect2438 = insertelement <16 x double> %temp.vect2437, double %1500, i32 7
  %temp.vect2439 = insertelement <16 x double> %temp.vect2438, double %1501, i32 8
  %temp.vect2440 = insertelement <16 x double> %temp.vect2439, double %1502, i32 9
  %temp.vect2441 = insertelement <16 x double> %temp.vect2440, double %1503, i32 10
  %temp.vect2442 = insertelement <16 x double> %temp.vect2441, double %1504, i32 11
  %temp.vect2443 = insertelement <16 x double> %temp.vect2442, double %1505, i32 12
  %temp.vect2444 = insertelement <16 x double> %temp.vect2443, double %1506, i32 13
  %temp.vect2445 = insertelement <16 x double> %temp.vect2444, double %1507, i32 14
  %temp.vect2446 = insertelement <16 x double> %temp.vect2445, double %1508, i32 15
  %1509 = fmul <16 x double> %temp.vect2446, <double 7.580000e-01, double 7.580000e-01, double 7.580000e-01, double 7.580000e-01, double 7.580000e-01, double 7.580000e-01, double 7.580000e-01, double 7.580000e-01, double 7.580000e-01, double 7.580000e-01, double 7.580000e-01, double 7.580000e-01, double 7.580000e-01, double 7.580000e-01, double 7.580000e-01, double 7.580000e-01>
  %1510 = fadd <16 x double> %1491, %1509
  %1511 = fmul <16 x double> %329, <double -4.200000e+03, double -4.200000e+03, double -4.200000e+03, double -4.200000e+03, double -4.200000e+03, double -4.200000e+03, double -4.200000e+03, double -4.200000e+03, double -4.200000e+03, double -4.200000e+03, double -4.200000e+03, double -4.200000e+03, double -4.200000e+03, double -4.200000e+03, double -4.200000e+03, double -4.200000e+03>
  %extract2447 = extractelement <16 x double> %1511, i32 0
  %extract2448 = extractelement <16 x double> %1511, i32 1
  %extract2449 = extractelement <16 x double> %1511, i32 2
  %extract2450 = extractelement <16 x double> %1511, i32 3
  %extract2451 = extractelement <16 x double> %1511, i32 4
  %extract2452 = extractelement <16 x double> %1511, i32 5
  %extract2453 = extractelement <16 x double> %1511, i32 6
  %extract2454 = extractelement <16 x double> %1511, i32 7
  %extract2455 = extractelement <16 x double> %1511, i32 8
  %extract2456 = extractelement <16 x double> %1511, i32 9
  %extract2457 = extractelement <16 x double> %1511, i32 10
  %extract2458 = extractelement <16 x double> %1511, i32 11
  %extract2459 = extractelement <16 x double> %1511, i32 12
  %extract2460 = extractelement <16 x double> %1511, i32 13
  %extract2461 = extractelement <16 x double> %1511, i32 14
  %extract2462 = extractelement <16 x double> %1511, i32 15
  %1512 = tail call double @_Z3expd(double %extract2447) nounwind
  %1513 = tail call double @_Z3expd(double %extract2448) nounwind
  %1514 = tail call double @_Z3expd(double %extract2449) nounwind
  %1515 = tail call double @_Z3expd(double %extract2450) nounwind
  %1516 = tail call double @_Z3expd(double %extract2451) nounwind
  %1517 = tail call double @_Z3expd(double %extract2452) nounwind
  %1518 = tail call double @_Z3expd(double %extract2453) nounwind
  %1519 = tail call double @_Z3expd(double %extract2454) nounwind
  %1520 = tail call double @_Z3expd(double %extract2455) nounwind
  %1521 = tail call double @_Z3expd(double %extract2456) nounwind
  %1522 = tail call double @_Z3expd(double %extract2457) nounwind
  %1523 = tail call double @_Z3expd(double %extract2458) nounwind
  %1524 = tail call double @_Z3expd(double %extract2459) nounwind
  %1525 = tail call double @_Z3expd(double %extract2460) nounwind
  %1526 = tail call double @_Z3expd(double %extract2461) nounwind
  %1527 = tail call double @_Z3expd(double %extract2462) nounwind
  %temp.vect2463 = insertelement <16 x double> undef, double %1512, i32 0
  %temp.vect2464 = insertelement <16 x double> %temp.vect2463, double %1513, i32 1
  %temp.vect2465 = insertelement <16 x double> %temp.vect2464, double %1514, i32 2
  %temp.vect2466 = insertelement <16 x double> %temp.vect2465, double %1515, i32 3
  %temp.vect2467 = insertelement <16 x double> %temp.vect2466, double %1516, i32 4
  %temp.vect2468 = insertelement <16 x double> %temp.vect2467, double %1517, i32 5
  %temp.vect2469 = insertelement <16 x double> %temp.vect2468, double %1518, i32 6
  %temp.vect2470 = insertelement <16 x double> %temp.vect2469, double %1519, i32 7
  %temp.vect2471 = insertelement <16 x double> %temp.vect2470, double %1520, i32 8
  %temp.vect2472 = insertelement <16 x double> %temp.vect2471, double %1521, i32 9
  %temp.vect2473 = insertelement <16 x double> %temp.vect2472, double %1522, i32 10
  %temp.vect2474 = insertelement <16 x double> %temp.vect2473, double %1523, i32 11
  %temp.vect2475 = insertelement <16 x double> %temp.vect2474, double %1524, i32 12
  %temp.vect2476 = insertelement <16 x double> %temp.vect2475, double %1525, i32 13
  %temp.vect2477 = insertelement <16 x double> %temp.vect2476, double %1526, i32 14
  %temp.vect2478 = insertelement <16 x double> %temp.vect2477, double %1527, i32 15
  %1528 = fadd <16 x double> %1510, %temp.vect2478
  %extract2479 = extractelement <16 x double> %1528, i32 0
  %extract2480 = extractelement <16 x double> %1528, i32 1
  %extract2481 = extractelement <16 x double> %1528, i32 2
  %extract2482 = extractelement <16 x double> %1528, i32 3
  %extract2483 = extractelement <16 x double> %1528, i32 4
  %extract2484 = extractelement <16 x double> %1528, i32 5
  %extract2485 = extractelement <16 x double> %1528, i32 6
  %extract2486 = extractelement <16 x double> %1528, i32 7
  %extract2487 = extractelement <16 x double> %1528, i32 8
  %extract2488 = extractelement <16 x double> %1528, i32 9
  %extract2489 = extractelement <16 x double> %1528, i32 10
  %extract2490 = extractelement <16 x double> %1528, i32 11
  %extract2491 = extractelement <16 x double> %1528, i32 12
  %extract2492 = extractelement <16 x double> %1528, i32 13
  %extract2493 = extractelement <16 x double> %1528, i32 14
  %extract2494 = extractelement <16 x double> %1528, i32 15
  %1529 = tail call double @_Z4fmaxdd(double %extract2479, double 1.000000e-200) nounwind
  %1530 = tail call double @_Z4fmaxdd(double %extract2480, double 1.000000e-200) nounwind
  %1531 = tail call double @_Z4fmaxdd(double %extract2481, double 1.000000e-200) nounwind
  %1532 = tail call double @_Z4fmaxdd(double %extract2482, double 1.000000e-200) nounwind
  %1533 = tail call double @_Z4fmaxdd(double %extract2483, double 1.000000e-200) nounwind
  %1534 = tail call double @_Z4fmaxdd(double %extract2484, double 1.000000e-200) nounwind
  %1535 = tail call double @_Z4fmaxdd(double %extract2485, double 1.000000e-200) nounwind
  %1536 = tail call double @_Z4fmaxdd(double %extract2486, double 1.000000e-200) nounwind
  %1537 = tail call double @_Z4fmaxdd(double %extract2487, double 1.000000e-200) nounwind
  %1538 = tail call double @_Z4fmaxdd(double %extract2488, double 1.000000e-200) nounwind
  %1539 = tail call double @_Z4fmaxdd(double %extract2489, double 1.000000e-200) nounwind
  %1540 = tail call double @_Z4fmaxdd(double %extract2490, double 1.000000e-200) nounwind
  %1541 = tail call double @_Z4fmaxdd(double %extract2491, double 1.000000e-200) nounwind
  %1542 = tail call double @_Z4fmaxdd(double %extract2492, double 1.000000e-200) nounwind
  %1543 = tail call double @_Z4fmaxdd(double %extract2493, double 1.000000e-200) nounwind
  %1544 = tail call double @_Z4fmaxdd(double %extract2494, double 1.000000e-200) nounwind
  %1545 = tail call double @_Z5log10d(double %1529) nounwind
  %1546 = tail call double @_Z5log10d(double %1530) nounwind
  %1547 = tail call double @_Z5log10d(double %1531) nounwind
  %1548 = tail call double @_Z5log10d(double %1532) nounwind
  %1549 = tail call double @_Z5log10d(double %1533) nounwind
  %1550 = tail call double @_Z5log10d(double %1534) nounwind
  %1551 = tail call double @_Z5log10d(double %1535) nounwind
  %1552 = tail call double @_Z5log10d(double %1536) nounwind
  %1553 = tail call double @_Z5log10d(double %1537) nounwind
  %1554 = tail call double @_Z5log10d(double %1538) nounwind
  %1555 = tail call double @_Z5log10d(double %1539) nounwind
  %1556 = tail call double @_Z5log10d(double %1540) nounwind
  %1557 = tail call double @_Z5log10d(double %1541) nounwind
  %1558 = tail call double @_Z5log10d(double %1542) nounwind
  %1559 = tail call double @_Z5log10d(double %1543) nounwind
  %1560 = tail call double @_Z5log10d(double %1544) nounwind
  %temp.vect2495 = insertelement <16 x double> undef, double %1545, i32 0
  %temp.vect2496 = insertelement <16 x double> %temp.vect2495, double %1546, i32 1
  %temp.vect2497 = insertelement <16 x double> %temp.vect2496, double %1547, i32 2
  %temp.vect2498 = insertelement <16 x double> %temp.vect2497, double %1548, i32 3
  %temp.vect2499 = insertelement <16 x double> %temp.vect2498, double %1549, i32 4
  %temp.vect2500 = insertelement <16 x double> %temp.vect2499, double %1550, i32 5
  %temp.vect2501 = insertelement <16 x double> %temp.vect2500, double %1551, i32 6
  %temp.vect2502 = insertelement <16 x double> %temp.vect2501, double %1552, i32 7
  %temp.vect2503 = insertelement <16 x double> %temp.vect2502, double %1553, i32 8
  %temp.vect2504 = insertelement <16 x double> %temp.vect2503, double %1554, i32 9
  %temp.vect2505 = insertelement <16 x double> %temp.vect2504, double %1555, i32 10
  %temp.vect2506 = insertelement <16 x double> %temp.vect2505, double %1556, i32 11
  %temp.vect2507 = insertelement <16 x double> %temp.vect2506, double %1557, i32 12
  %temp.vect2508 = insertelement <16 x double> %temp.vect2507, double %1558, i32 13
  %temp.vect2509 = insertelement <16 x double> %temp.vect2508, double %1559, i32 14
  %temp.vect2510 = insertelement <16 x double> %temp.vect2509, double %1560, i32 15
  %1561 = fmul <16 x double> %temp.vect2510, <double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00>
  %1562 = fsub <16 x double> <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>, %1561
  %1563 = fmul <16 x double> %temp.vect2510, <double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01>
  %1564 = fadd <16 x double> %1563, <double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01>
  %1565 = fsub <16 x double> %temp.vect2526, %1564
  %1566 = fmul <16 x double> %1565, <double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01>
  %1567 = fsub <16 x double> %1562, %1566
  %1568 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1567
  %1569 = fmul <16 x double> %1565, %1568
  %1570 = fmul <16 x double> %1569, %1569
  %1571 = fadd <16 x double> %1570, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %1572 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1571
  %1573 = fmul <16 x double> %temp.vect2510, %1572
  %extract2527 = extractelement <16 x double> %1573, i32 0
  %extract2528 = extractelement <16 x double> %1573, i32 1
  %extract2529 = extractelement <16 x double> %1573, i32 2
  %extract2530 = extractelement <16 x double> %1573, i32 3
  %extract2531 = extractelement <16 x double> %1573, i32 4
  %extract2532 = extractelement <16 x double> %1573, i32 5
  %extract2533 = extractelement <16 x double> %1573, i32 6
  %extract2534 = extractelement <16 x double> %1573, i32 7
  %extract2535 = extractelement <16 x double> %1573, i32 8
  %extract2536 = extractelement <16 x double> %1573, i32 9
  %extract2537 = extractelement <16 x double> %1573, i32 10
  %extract2538 = extractelement <16 x double> %1573, i32 11
  %extract2539 = extractelement <16 x double> %1573, i32 12
  %extract2540 = extractelement <16 x double> %1573, i32 13
  %extract2541 = extractelement <16 x double> %1573, i32 14
  %extract2542 = extractelement <16 x double> %1573, i32 15
  %1574 = tail call double @_Z5exp10d(double %extract2527) nounwind
  %1575 = tail call double @_Z5exp10d(double %extract2528) nounwind
  %1576 = tail call double @_Z5exp10d(double %extract2529) nounwind
  %1577 = tail call double @_Z5exp10d(double %extract2530) nounwind
  %1578 = tail call double @_Z5exp10d(double %extract2531) nounwind
  %1579 = tail call double @_Z5exp10d(double %extract2532) nounwind
  %1580 = tail call double @_Z5exp10d(double %extract2533) nounwind
  %1581 = tail call double @_Z5exp10d(double %extract2534) nounwind
  %1582 = tail call double @_Z5exp10d(double %extract2535) nounwind
  %1583 = tail call double @_Z5exp10d(double %extract2536) nounwind
  %1584 = tail call double @_Z5exp10d(double %extract2537) nounwind
  %1585 = tail call double @_Z5exp10d(double %extract2538) nounwind
  %1586 = tail call double @_Z5exp10d(double %extract2539) nounwind
  %1587 = tail call double @_Z5exp10d(double %extract2540) nounwind
  %1588 = tail call double @_Z5exp10d(double %extract2541) nounwind
  %1589 = tail call double @_Z5exp10d(double %extract2542) nounwind
  %temp.vect2543 = insertelement <16 x double> undef, double %1574, i32 0
  %temp.vect2544 = insertelement <16 x double> %temp.vect2543, double %1575, i32 1
  %temp.vect2545 = insertelement <16 x double> %temp.vect2544, double %1576, i32 2
  %temp.vect2546 = insertelement <16 x double> %temp.vect2545, double %1577, i32 3
  %temp.vect2547 = insertelement <16 x double> %temp.vect2546, double %1578, i32 4
  %temp.vect2548 = insertelement <16 x double> %temp.vect2547, double %1579, i32 5
  %temp.vect2549 = insertelement <16 x double> %temp.vect2548, double %1580, i32 6
  %temp.vect2550 = insertelement <16 x double> %temp.vect2549, double %1581, i32 7
  %temp.vect2551 = insertelement <16 x double> %temp.vect2550, double %1582, i32 8
  %temp.vect2552 = insertelement <16 x double> %temp.vect2551, double %1583, i32 9
  %temp.vect2553 = insertelement <16 x double> %temp.vect2552, double %1584, i32 10
  %temp.vect2554 = insertelement <16 x double> %temp.vect2553, double %1585, i32 11
  %temp.vect2555 = insertelement <16 x double> %temp.vect2554, double %1586, i32 12
  %temp.vect2556 = insertelement <16 x double> %temp.vect2555, double %1587, i32 13
  %temp.vect2557 = insertelement <16 x double> %temp.vect2556, double %1588, i32 14
  %temp.vect2558 = insertelement <16 x double> %temp.vect2557, double %1589, i32 15
  %1590 = fmul <16 x double> %temp.vect2558, %1442
  %1591 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1592 = load i64* %1591, align 8
  %1593 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1594 = load i64* %1593, align 8
  %1595 = add i64 %1592, %1594
  %extract2561 = add i64 %1595, 7741440
  %1596 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2561
  %ptrTypeCast2577 = bitcast double addrspace(1)* %1596 to <16 x double> addrspace(1)*
  %1597 = load <16 x double> addrspace(1)* %ptrTypeCast2577, align 8
  %1598 = fmul <16 x double> %1597, %1590
  %1599 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1600 = load i64* %1599, align 8
  %1601 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1602 = load i64* %1601, align 8
  %1603 = add i64 %1600, %1602
  %extract2580 = add i64 %1603, 7741440
  %1604 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2580
  %ptrTypeCast2596 = bitcast double addrspace(1)* %1604 to <16 x double> addrspace(1)*
  store <16 x double> %1598, <16 x double> addrspace(1)* %ptrTypeCast2596, align 8
  %1605 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1606 = load i64* %1605, align 8
  %1607 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1608 = load i64* %1607, align 8
  %1609 = add i64 %1606, %1608
  %extract2599 = add i64 %1609, 7741440
  %1610 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract2599
  %ptrTypeCast2615 = bitcast double addrspace(1)* %1610 to <16 x double> addrspace(1)*
  %1611 = load <16 x double> addrspace(1)* %ptrTypeCast2615, align 8
  %1612 = fmul <16 x double> %1611, %1590
  %1613 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1614 = load i64* %1613, align 8
  %1615 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1616 = load i64* %1615, align 8
  %1617 = add i64 %1614, %1616
  %extract2618 = add i64 %1617, 7741440
  %1618 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract2618
  %ptrTypeCast2634 = bitcast double addrspace(1)* %1618 to <16 x double> addrspace(1)*
  store <16 x double> %1612, <16 x double> addrspace(1)* %ptrTypeCast2634, align 8
  %1619 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1620 = load i64* %1619, align 8
  %1621 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1622 = load i64* %1621, align 8
  %1623 = add i64 %1620, %1622
  %extract2637 = add i64 %1623, 774144
  %1624 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %extract2637
  %ptrTypeCast2653 = bitcast double addrspace(1)* %1624 to <16 x double> addrspace(1)*
  %1625 = load <16 x double> addrspace(1)* %ptrTypeCast2653, align 8
  %1626 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1627 = load i64* %1626, align 8
  %1628 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1629 = load i64* %1628, align 8
  %1630 = add i64 %1627, %1629
  %extract2656 = add i64 %1630, 8515584
  %1631 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2656
  %ptrTypeCast2672 = bitcast double addrspace(1)* %1631 to <16 x double> addrspace(1)*
  %1632 = load <16 x double> addrspace(1)* %ptrTypeCast2672, align 8
  %1633 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1632
  %1634 = fmul <16 x double> %101, %1633
  %1635 = fmul <16 x double> %1625, %1634
  %extract2673 = extractelement <16 x double> %1635, i32 0
  %extract2674 = extractelement <16 x double> %1635, i32 1
  %extract2675 = extractelement <16 x double> %1635, i32 2
  %extract2676 = extractelement <16 x double> %1635, i32 3
  %extract2677 = extractelement <16 x double> %1635, i32 4
  %extract2678 = extractelement <16 x double> %1635, i32 5
  %extract2679 = extractelement <16 x double> %1635, i32 6
  %extract2680 = extractelement <16 x double> %1635, i32 7
  %extract2681 = extractelement <16 x double> %1635, i32 8
  %extract2682 = extractelement <16 x double> %1635, i32 9
  %extract2683 = extractelement <16 x double> %1635, i32 10
  %extract2684 = extractelement <16 x double> %1635, i32 11
  %extract2685 = extractelement <16 x double> %1635, i32 12
  %extract2686 = extractelement <16 x double> %1635, i32 13
  %extract2687 = extractelement <16 x double> %1635, i32 14
  %extract2688 = extractelement <16 x double> %1635, i32 15
  %1636 = fadd <16 x double> %1635, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %1637 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1636
  %1638 = fmul <16 x double> %1635, %1637
  %1639 = tail call double @_Z4fmaxdd(double %extract2673, double 1.000000e-200) nounwind
  %1640 = tail call double @_Z4fmaxdd(double %extract2674, double 1.000000e-200) nounwind
  %1641 = tail call double @_Z4fmaxdd(double %extract2675, double 1.000000e-200) nounwind
  %1642 = tail call double @_Z4fmaxdd(double %extract2676, double 1.000000e-200) nounwind
  %1643 = tail call double @_Z4fmaxdd(double %extract2677, double 1.000000e-200) nounwind
  %1644 = tail call double @_Z4fmaxdd(double %extract2678, double 1.000000e-200) nounwind
  %1645 = tail call double @_Z4fmaxdd(double %extract2679, double 1.000000e-200) nounwind
  %1646 = tail call double @_Z4fmaxdd(double %extract2680, double 1.000000e-200) nounwind
  %1647 = tail call double @_Z4fmaxdd(double %extract2681, double 1.000000e-200) nounwind
  %1648 = tail call double @_Z4fmaxdd(double %extract2682, double 1.000000e-200) nounwind
  %1649 = tail call double @_Z4fmaxdd(double %extract2683, double 1.000000e-200) nounwind
  %1650 = tail call double @_Z4fmaxdd(double %extract2684, double 1.000000e-200) nounwind
  %1651 = tail call double @_Z4fmaxdd(double %extract2685, double 1.000000e-200) nounwind
  %1652 = tail call double @_Z4fmaxdd(double %extract2686, double 1.000000e-200) nounwind
  %1653 = tail call double @_Z4fmaxdd(double %extract2687, double 1.000000e-200) nounwind
  %1654 = tail call double @_Z4fmaxdd(double %extract2688, double 1.000000e-200) nounwind
  %1655 = tail call double @_Z5log10d(double %1639) nounwind
  %1656 = tail call double @_Z5log10d(double %1640) nounwind
  %1657 = tail call double @_Z5log10d(double %1641) nounwind
  %1658 = tail call double @_Z5log10d(double %1642) nounwind
  %1659 = tail call double @_Z5log10d(double %1643) nounwind
  %1660 = tail call double @_Z5log10d(double %1644) nounwind
  %1661 = tail call double @_Z5log10d(double %1645) nounwind
  %1662 = tail call double @_Z5log10d(double %1646) nounwind
  %1663 = tail call double @_Z5log10d(double %1647) nounwind
  %1664 = tail call double @_Z5log10d(double %1648) nounwind
  %1665 = tail call double @_Z5log10d(double %1649) nounwind
  %1666 = tail call double @_Z5log10d(double %1650) nounwind
  %1667 = tail call double @_Z5log10d(double %1651) nounwind
  %1668 = tail call double @_Z5log10d(double %1652) nounwind
  %1669 = tail call double @_Z5log10d(double %1653) nounwind
  %1670 = tail call double @_Z5log10d(double %1654) nounwind
  %temp.vect2817 = insertelement <16 x double> undef, double %1655, i32 0
  %temp.vect2818 = insertelement <16 x double> %temp.vect2817, double %1656, i32 1
  %temp.vect2819 = insertelement <16 x double> %temp.vect2818, double %1657, i32 2
  %temp.vect2820 = insertelement <16 x double> %temp.vect2819, double %1658, i32 3
  %temp.vect2821 = insertelement <16 x double> %temp.vect2820, double %1659, i32 4
  %temp.vect2822 = insertelement <16 x double> %temp.vect2821, double %1660, i32 5
  %temp.vect2823 = insertelement <16 x double> %temp.vect2822, double %1661, i32 6
  %temp.vect2824 = insertelement <16 x double> %temp.vect2823, double %1662, i32 7
  %temp.vect2825 = insertelement <16 x double> %temp.vect2824, double %1663, i32 8
  %temp.vect2826 = insertelement <16 x double> %temp.vect2825, double %1664, i32 9
  %temp.vect2827 = insertelement <16 x double> %temp.vect2826, double %1665, i32 10
  %temp.vect2828 = insertelement <16 x double> %temp.vect2827, double %1666, i32 11
  %temp.vect2829 = insertelement <16 x double> %temp.vect2828, double %1667, i32 12
  %temp.vect2830 = insertelement <16 x double> %temp.vect2829, double %1668, i32 13
  %temp.vect2831 = insertelement <16 x double> %temp.vect2830, double %1669, i32 14
  %temp.vect2832 = insertelement <16 x double> %temp.vect2831, double %1670, i32 15
  %1671 = fmul <16 x double> %7, <double 0xBF8BACF914C1BAD0, double 0xBF8BACF914C1BAD0, double 0xBF8BACF914C1BAD0, double 0xBF8BACF914C1BAD0, double 0xBF8BACF914C1BAD0, double 0xBF8BACF914C1BAD0, double 0xBF8BACF914C1BAD0, double 0xBF8BACF914C1BAD0, double 0xBF8BACF914C1BAD0, double 0xBF8BACF914C1BAD0, double 0xBF8BACF914C1BAD0, double 0xBF8BACF914C1BAD0, double 0xBF8BACF914C1BAD0, double 0xBF8BACF914C1BAD0, double 0xBF8BACF914C1BAD0, double 0xBF8BACF914C1BAD0>
  %extract2689 = extractelement <16 x double> %1671, i32 0
  %extract2690 = extractelement <16 x double> %1671, i32 1
  %extract2691 = extractelement <16 x double> %1671, i32 2
  %extract2692 = extractelement <16 x double> %1671, i32 3
  %extract2693 = extractelement <16 x double> %1671, i32 4
  %extract2694 = extractelement <16 x double> %1671, i32 5
  %extract2695 = extractelement <16 x double> %1671, i32 6
  %extract2696 = extractelement <16 x double> %1671, i32 7
  %extract2697 = extractelement <16 x double> %1671, i32 8
  %extract2698 = extractelement <16 x double> %1671, i32 9
  %extract2699 = extractelement <16 x double> %1671, i32 10
  %extract2700 = extractelement <16 x double> %1671, i32 11
  %extract2701 = extractelement <16 x double> %1671, i32 12
  %extract2702 = extractelement <16 x double> %1671, i32 13
  %extract2703 = extractelement <16 x double> %1671, i32 14
  %extract2704 = extractelement <16 x double> %1671, i32 15
  %1672 = tail call double @_Z3expd(double %extract2689) nounwind
  %1673 = tail call double @_Z3expd(double %extract2690) nounwind
  %1674 = tail call double @_Z3expd(double %extract2691) nounwind
  %1675 = tail call double @_Z3expd(double %extract2692) nounwind
  %1676 = tail call double @_Z3expd(double %extract2693) nounwind
  %1677 = tail call double @_Z3expd(double %extract2694) nounwind
  %1678 = tail call double @_Z3expd(double %extract2695) nounwind
  %1679 = tail call double @_Z3expd(double %extract2696) nounwind
  %1680 = tail call double @_Z3expd(double %extract2697) nounwind
  %1681 = tail call double @_Z3expd(double %extract2698) nounwind
  %1682 = tail call double @_Z3expd(double %extract2699) nounwind
  %1683 = tail call double @_Z3expd(double %extract2700) nounwind
  %1684 = tail call double @_Z3expd(double %extract2701) nounwind
  %1685 = tail call double @_Z3expd(double %extract2702) nounwind
  %1686 = tail call double @_Z3expd(double %extract2703) nounwind
  %1687 = tail call double @_Z3expd(double %extract2704) nounwind
  %temp.vect2705 = insertelement <16 x double> undef, double %1672, i32 0
  %temp.vect2706 = insertelement <16 x double> %temp.vect2705, double %1673, i32 1
  %temp.vect2707 = insertelement <16 x double> %temp.vect2706, double %1674, i32 2
  %temp.vect2708 = insertelement <16 x double> %temp.vect2707, double %1675, i32 3
  %temp.vect2709 = insertelement <16 x double> %temp.vect2708, double %1676, i32 4
  %temp.vect2710 = insertelement <16 x double> %temp.vect2709, double %1677, i32 5
  %temp.vect2711 = insertelement <16 x double> %temp.vect2710, double %1678, i32 6
  %temp.vect2712 = insertelement <16 x double> %temp.vect2711, double %1679, i32 7
  %temp.vect2713 = insertelement <16 x double> %temp.vect2712, double %1680, i32 8
  %temp.vect2714 = insertelement <16 x double> %temp.vect2713, double %1681, i32 9
  %temp.vect2715 = insertelement <16 x double> %temp.vect2714, double %1682, i32 10
  %temp.vect2716 = insertelement <16 x double> %temp.vect2715, double %1683, i32 11
  %temp.vect2717 = insertelement <16 x double> %temp.vect2716, double %1684, i32 12
  %temp.vect2718 = insertelement <16 x double> %temp.vect2717, double %1685, i32 13
  %temp.vect2719 = insertelement <16 x double> %temp.vect2718, double %1686, i32 14
  %temp.vect2720 = insertelement <16 x double> %temp.vect2719, double %1687, i32 15
  %1688 = fmul <16 x double> %temp.vect2720, <double 2.170000e-01, double 2.170000e-01, double 2.170000e-01, double 2.170000e-01, double 2.170000e-01, double 2.170000e-01, double 2.170000e-01, double 2.170000e-01, double 2.170000e-01, double 2.170000e-01, double 2.170000e-01, double 2.170000e-01, double 2.170000e-01, double 2.170000e-01, double 2.170000e-01, double 2.170000e-01>
  %1689 = fmul <16 x double> %7, <double 0xBF36489880D3B1A9, double 0xBF36489880D3B1A9, double 0xBF36489880D3B1A9, double 0xBF36489880D3B1A9, double 0xBF36489880D3B1A9, double 0xBF36489880D3B1A9, double 0xBF36489880D3B1A9, double 0xBF36489880D3B1A9, double 0xBF36489880D3B1A9, double 0xBF36489880D3B1A9, double 0xBF36489880D3B1A9, double 0xBF36489880D3B1A9, double 0xBF36489880D3B1A9, double 0xBF36489880D3B1A9, double 0xBF36489880D3B1A9, double 0xBF36489880D3B1A9>
  %extract2721 = extractelement <16 x double> %1689, i32 0
  %extract2722 = extractelement <16 x double> %1689, i32 1
  %extract2723 = extractelement <16 x double> %1689, i32 2
  %extract2724 = extractelement <16 x double> %1689, i32 3
  %extract2725 = extractelement <16 x double> %1689, i32 4
  %extract2726 = extractelement <16 x double> %1689, i32 5
  %extract2727 = extractelement <16 x double> %1689, i32 6
  %extract2728 = extractelement <16 x double> %1689, i32 7
  %extract2729 = extractelement <16 x double> %1689, i32 8
  %extract2730 = extractelement <16 x double> %1689, i32 9
  %extract2731 = extractelement <16 x double> %1689, i32 10
  %extract2732 = extractelement <16 x double> %1689, i32 11
  %extract2733 = extractelement <16 x double> %1689, i32 12
  %extract2734 = extractelement <16 x double> %1689, i32 13
  %extract2735 = extractelement <16 x double> %1689, i32 14
  %extract2736 = extractelement <16 x double> %1689, i32 15
  %1690 = tail call double @_Z3expd(double %extract2721) nounwind
  %1691 = tail call double @_Z3expd(double %extract2722) nounwind
  %1692 = tail call double @_Z3expd(double %extract2723) nounwind
  %1693 = tail call double @_Z3expd(double %extract2724) nounwind
  %1694 = tail call double @_Z3expd(double %extract2725) nounwind
  %1695 = tail call double @_Z3expd(double %extract2726) nounwind
  %1696 = tail call double @_Z3expd(double %extract2727) nounwind
  %1697 = tail call double @_Z3expd(double %extract2728) nounwind
  %1698 = tail call double @_Z3expd(double %extract2729) nounwind
  %1699 = tail call double @_Z3expd(double %extract2730) nounwind
  %1700 = tail call double @_Z3expd(double %extract2731) nounwind
  %1701 = tail call double @_Z3expd(double %extract2732) nounwind
  %1702 = tail call double @_Z3expd(double %extract2733) nounwind
  %1703 = tail call double @_Z3expd(double %extract2734) nounwind
  %1704 = tail call double @_Z3expd(double %extract2735) nounwind
  %1705 = tail call double @_Z3expd(double %extract2736) nounwind
  %temp.vect2737 = insertelement <16 x double> undef, double %1690, i32 0
  %temp.vect2738 = insertelement <16 x double> %temp.vect2737, double %1691, i32 1
  %temp.vect2739 = insertelement <16 x double> %temp.vect2738, double %1692, i32 2
  %temp.vect2740 = insertelement <16 x double> %temp.vect2739, double %1693, i32 3
  %temp.vect2741 = insertelement <16 x double> %temp.vect2740, double %1694, i32 4
  %temp.vect2742 = insertelement <16 x double> %temp.vect2741, double %1695, i32 5
  %temp.vect2743 = insertelement <16 x double> %temp.vect2742, double %1696, i32 6
  %temp.vect2744 = insertelement <16 x double> %temp.vect2743, double %1697, i32 7
  %temp.vect2745 = insertelement <16 x double> %temp.vect2744, double %1698, i32 8
  %temp.vect2746 = insertelement <16 x double> %temp.vect2745, double %1699, i32 9
  %temp.vect2747 = insertelement <16 x double> %temp.vect2746, double %1700, i32 10
  %temp.vect2748 = insertelement <16 x double> %temp.vect2747, double %1701, i32 11
  %temp.vect2749 = insertelement <16 x double> %temp.vect2748, double %1702, i32 12
  %temp.vect2750 = insertelement <16 x double> %temp.vect2749, double %1703, i32 13
  %temp.vect2751 = insertelement <16 x double> %temp.vect2750, double %1704, i32 14
  %temp.vect2752 = insertelement <16 x double> %temp.vect2751, double %1705, i32 15
  %1706 = fmul <16 x double> %temp.vect2752, <double 7.830000e-01, double 7.830000e-01, double 7.830000e-01, double 7.830000e-01, double 7.830000e-01, double 7.830000e-01, double 7.830000e-01, double 7.830000e-01, double 7.830000e-01, double 7.830000e-01, double 7.830000e-01, double 7.830000e-01, double 7.830000e-01, double 7.830000e-01, double 7.830000e-01, double 7.830000e-01>
  %1707 = fadd <16 x double> %1688, %1706
  %1708 = fmul <16 x double> %329, <double -6.964000e+03, double -6.964000e+03, double -6.964000e+03, double -6.964000e+03, double -6.964000e+03, double -6.964000e+03, double -6.964000e+03, double -6.964000e+03, double -6.964000e+03, double -6.964000e+03, double -6.964000e+03, double -6.964000e+03, double -6.964000e+03, double -6.964000e+03, double -6.964000e+03, double -6.964000e+03>
  %extract2753 = extractelement <16 x double> %1708, i32 0
  %extract2754 = extractelement <16 x double> %1708, i32 1
  %extract2755 = extractelement <16 x double> %1708, i32 2
  %extract2756 = extractelement <16 x double> %1708, i32 3
  %extract2757 = extractelement <16 x double> %1708, i32 4
  %extract2758 = extractelement <16 x double> %1708, i32 5
  %extract2759 = extractelement <16 x double> %1708, i32 6
  %extract2760 = extractelement <16 x double> %1708, i32 7
  %extract2761 = extractelement <16 x double> %1708, i32 8
  %extract2762 = extractelement <16 x double> %1708, i32 9
  %extract2763 = extractelement <16 x double> %1708, i32 10
  %extract2764 = extractelement <16 x double> %1708, i32 11
  %extract2765 = extractelement <16 x double> %1708, i32 12
  %extract2766 = extractelement <16 x double> %1708, i32 13
  %extract2767 = extractelement <16 x double> %1708, i32 14
  %extract2768 = extractelement <16 x double> %1708, i32 15
  %1709 = tail call double @_Z3expd(double %extract2753) nounwind
  %1710 = tail call double @_Z3expd(double %extract2754) nounwind
  %1711 = tail call double @_Z3expd(double %extract2755) nounwind
  %1712 = tail call double @_Z3expd(double %extract2756) nounwind
  %1713 = tail call double @_Z3expd(double %extract2757) nounwind
  %1714 = tail call double @_Z3expd(double %extract2758) nounwind
  %1715 = tail call double @_Z3expd(double %extract2759) nounwind
  %1716 = tail call double @_Z3expd(double %extract2760) nounwind
  %1717 = tail call double @_Z3expd(double %extract2761) nounwind
  %1718 = tail call double @_Z3expd(double %extract2762) nounwind
  %1719 = tail call double @_Z3expd(double %extract2763) nounwind
  %1720 = tail call double @_Z3expd(double %extract2764) nounwind
  %1721 = tail call double @_Z3expd(double %extract2765) nounwind
  %1722 = tail call double @_Z3expd(double %extract2766) nounwind
  %1723 = tail call double @_Z3expd(double %extract2767) nounwind
  %1724 = tail call double @_Z3expd(double %extract2768) nounwind
  %temp.vect2769 = insertelement <16 x double> undef, double %1709, i32 0
  %temp.vect2770 = insertelement <16 x double> %temp.vect2769, double %1710, i32 1
  %temp.vect2771 = insertelement <16 x double> %temp.vect2770, double %1711, i32 2
  %temp.vect2772 = insertelement <16 x double> %temp.vect2771, double %1712, i32 3
  %temp.vect2773 = insertelement <16 x double> %temp.vect2772, double %1713, i32 4
  %temp.vect2774 = insertelement <16 x double> %temp.vect2773, double %1714, i32 5
  %temp.vect2775 = insertelement <16 x double> %temp.vect2774, double %1715, i32 6
  %temp.vect2776 = insertelement <16 x double> %temp.vect2775, double %1716, i32 7
  %temp.vect2777 = insertelement <16 x double> %temp.vect2776, double %1717, i32 8
  %temp.vect2778 = insertelement <16 x double> %temp.vect2777, double %1718, i32 9
  %temp.vect2779 = insertelement <16 x double> %temp.vect2778, double %1719, i32 10
  %temp.vect2780 = insertelement <16 x double> %temp.vect2779, double %1720, i32 11
  %temp.vect2781 = insertelement <16 x double> %temp.vect2780, double %1721, i32 12
  %temp.vect2782 = insertelement <16 x double> %temp.vect2781, double %1722, i32 13
  %temp.vect2783 = insertelement <16 x double> %temp.vect2782, double %1723, i32 14
  %temp.vect2784 = insertelement <16 x double> %temp.vect2783, double %1724, i32 15
  %1725 = fadd <16 x double> %1707, %temp.vect2784
  %extract2785 = extractelement <16 x double> %1725, i32 0
  %extract2786 = extractelement <16 x double> %1725, i32 1
  %extract2787 = extractelement <16 x double> %1725, i32 2
  %extract2788 = extractelement <16 x double> %1725, i32 3
  %extract2789 = extractelement <16 x double> %1725, i32 4
  %extract2790 = extractelement <16 x double> %1725, i32 5
  %extract2791 = extractelement <16 x double> %1725, i32 6
  %extract2792 = extractelement <16 x double> %1725, i32 7
  %extract2793 = extractelement <16 x double> %1725, i32 8
  %extract2794 = extractelement <16 x double> %1725, i32 9
  %extract2795 = extractelement <16 x double> %1725, i32 10
  %extract2796 = extractelement <16 x double> %1725, i32 11
  %extract2797 = extractelement <16 x double> %1725, i32 12
  %extract2798 = extractelement <16 x double> %1725, i32 13
  %extract2799 = extractelement <16 x double> %1725, i32 14
  %extract2800 = extractelement <16 x double> %1725, i32 15
  %1726 = tail call double @_Z4fmaxdd(double %extract2785, double 1.000000e-200) nounwind
  %1727 = tail call double @_Z4fmaxdd(double %extract2786, double 1.000000e-200) nounwind
  %1728 = tail call double @_Z4fmaxdd(double %extract2787, double 1.000000e-200) nounwind
  %1729 = tail call double @_Z4fmaxdd(double %extract2788, double 1.000000e-200) nounwind
  %1730 = tail call double @_Z4fmaxdd(double %extract2789, double 1.000000e-200) nounwind
  %1731 = tail call double @_Z4fmaxdd(double %extract2790, double 1.000000e-200) nounwind
  %1732 = tail call double @_Z4fmaxdd(double %extract2791, double 1.000000e-200) nounwind
  %1733 = tail call double @_Z4fmaxdd(double %extract2792, double 1.000000e-200) nounwind
  %1734 = tail call double @_Z4fmaxdd(double %extract2793, double 1.000000e-200) nounwind
  %1735 = tail call double @_Z4fmaxdd(double %extract2794, double 1.000000e-200) nounwind
  %1736 = tail call double @_Z4fmaxdd(double %extract2795, double 1.000000e-200) nounwind
  %1737 = tail call double @_Z4fmaxdd(double %extract2796, double 1.000000e-200) nounwind
  %1738 = tail call double @_Z4fmaxdd(double %extract2797, double 1.000000e-200) nounwind
  %1739 = tail call double @_Z4fmaxdd(double %extract2798, double 1.000000e-200) nounwind
  %1740 = tail call double @_Z4fmaxdd(double %extract2799, double 1.000000e-200) nounwind
  %1741 = tail call double @_Z4fmaxdd(double %extract2800, double 1.000000e-200) nounwind
  %1742 = tail call double @_Z5log10d(double %1726) nounwind
  %1743 = tail call double @_Z5log10d(double %1727) nounwind
  %1744 = tail call double @_Z5log10d(double %1728) nounwind
  %1745 = tail call double @_Z5log10d(double %1729) nounwind
  %1746 = tail call double @_Z5log10d(double %1730) nounwind
  %1747 = tail call double @_Z5log10d(double %1731) nounwind
  %1748 = tail call double @_Z5log10d(double %1732) nounwind
  %1749 = tail call double @_Z5log10d(double %1733) nounwind
  %1750 = tail call double @_Z5log10d(double %1734) nounwind
  %1751 = tail call double @_Z5log10d(double %1735) nounwind
  %1752 = tail call double @_Z5log10d(double %1736) nounwind
  %1753 = tail call double @_Z5log10d(double %1737) nounwind
  %1754 = tail call double @_Z5log10d(double %1738) nounwind
  %1755 = tail call double @_Z5log10d(double %1739) nounwind
  %1756 = tail call double @_Z5log10d(double %1740) nounwind
  %1757 = tail call double @_Z5log10d(double %1741) nounwind
  %temp.vect2801 = insertelement <16 x double> undef, double %1742, i32 0
  %temp.vect2802 = insertelement <16 x double> %temp.vect2801, double %1743, i32 1
  %temp.vect2803 = insertelement <16 x double> %temp.vect2802, double %1744, i32 2
  %temp.vect2804 = insertelement <16 x double> %temp.vect2803, double %1745, i32 3
  %temp.vect2805 = insertelement <16 x double> %temp.vect2804, double %1746, i32 4
  %temp.vect2806 = insertelement <16 x double> %temp.vect2805, double %1747, i32 5
  %temp.vect2807 = insertelement <16 x double> %temp.vect2806, double %1748, i32 6
  %temp.vect2808 = insertelement <16 x double> %temp.vect2807, double %1749, i32 7
  %temp.vect2809 = insertelement <16 x double> %temp.vect2808, double %1750, i32 8
  %temp.vect2810 = insertelement <16 x double> %temp.vect2809, double %1751, i32 9
  %temp.vect2811 = insertelement <16 x double> %temp.vect2810, double %1752, i32 10
  %temp.vect2812 = insertelement <16 x double> %temp.vect2811, double %1753, i32 11
  %temp.vect2813 = insertelement <16 x double> %temp.vect2812, double %1754, i32 12
  %temp.vect2814 = insertelement <16 x double> %temp.vect2813, double %1755, i32 13
  %temp.vect2815 = insertelement <16 x double> %temp.vect2814, double %1756, i32 14
  %temp.vect2816 = insertelement <16 x double> %temp.vect2815, double %1757, i32 15
  %1758 = fmul <16 x double> %temp.vect2816, <double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00>
  %1759 = fsub <16 x double> <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>, %1758
  %1760 = fmul <16 x double> %temp.vect2816, <double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01>
  %1761 = fadd <16 x double> %1760, <double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01>
  %1762 = fsub <16 x double> %temp.vect2832, %1761
  %1763 = fmul <16 x double> %1762, <double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01>
  %1764 = fsub <16 x double> %1759, %1763
  %1765 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1764
  %1766 = fmul <16 x double> %1762, %1765
  %1767 = fmul <16 x double> %1766, %1766
  %1768 = fadd <16 x double> %1767, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %1769 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1768
  %1770 = fmul <16 x double> %temp.vect2816, %1769
  %extract2833 = extractelement <16 x double> %1770, i32 0
  %extract2834 = extractelement <16 x double> %1770, i32 1
  %extract2835 = extractelement <16 x double> %1770, i32 2
  %extract2836 = extractelement <16 x double> %1770, i32 3
  %extract2837 = extractelement <16 x double> %1770, i32 4
  %extract2838 = extractelement <16 x double> %1770, i32 5
  %extract2839 = extractelement <16 x double> %1770, i32 6
  %extract2840 = extractelement <16 x double> %1770, i32 7
  %extract2841 = extractelement <16 x double> %1770, i32 8
  %extract2842 = extractelement <16 x double> %1770, i32 9
  %extract2843 = extractelement <16 x double> %1770, i32 10
  %extract2844 = extractelement <16 x double> %1770, i32 11
  %extract2845 = extractelement <16 x double> %1770, i32 12
  %extract2846 = extractelement <16 x double> %1770, i32 13
  %extract2847 = extractelement <16 x double> %1770, i32 14
  %extract2848 = extractelement <16 x double> %1770, i32 15
  %1771 = tail call double @_Z5exp10d(double %extract2833) nounwind
  %1772 = tail call double @_Z5exp10d(double %extract2834) nounwind
  %1773 = tail call double @_Z5exp10d(double %extract2835) nounwind
  %1774 = tail call double @_Z5exp10d(double %extract2836) nounwind
  %1775 = tail call double @_Z5exp10d(double %extract2837) nounwind
  %1776 = tail call double @_Z5exp10d(double %extract2838) nounwind
  %1777 = tail call double @_Z5exp10d(double %extract2839) nounwind
  %1778 = tail call double @_Z5exp10d(double %extract2840) nounwind
  %1779 = tail call double @_Z5exp10d(double %extract2841) nounwind
  %1780 = tail call double @_Z5exp10d(double %extract2842) nounwind
  %1781 = tail call double @_Z5exp10d(double %extract2843) nounwind
  %1782 = tail call double @_Z5exp10d(double %extract2844) nounwind
  %1783 = tail call double @_Z5exp10d(double %extract2845) nounwind
  %1784 = tail call double @_Z5exp10d(double %extract2846) nounwind
  %1785 = tail call double @_Z5exp10d(double %extract2847) nounwind
  %1786 = tail call double @_Z5exp10d(double %extract2848) nounwind
  %temp.vect2849 = insertelement <16 x double> undef, double %1771, i32 0
  %temp.vect2850 = insertelement <16 x double> %temp.vect2849, double %1772, i32 1
  %temp.vect2851 = insertelement <16 x double> %temp.vect2850, double %1773, i32 2
  %temp.vect2852 = insertelement <16 x double> %temp.vect2851, double %1774, i32 3
  %temp.vect2853 = insertelement <16 x double> %temp.vect2852, double %1775, i32 4
  %temp.vect2854 = insertelement <16 x double> %temp.vect2853, double %1776, i32 5
  %temp.vect2855 = insertelement <16 x double> %temp.vect2854, double %1777, i32 6
  %temp.vect2856 = insertelement <16 x double> %temp.vect2855, double %1778, i32 7
  %temp.vect2857 = insertelement <16 x double> %temp.vect2856, double %1779, i32 8
  %temp.vect2858 = insertelement <16 x double> %temp.vect2857, double %1780, i32 9
  %temp.vect2859 = insertelement <16 x double> %temp.vect2858, double %1781, i32 10
  %temp.vect2860 = insertelement <16 x double> %temp.vect2859, double %1782, i32 11
  %temp.vect2861 = insertelement <16 x double> %temp.vect2860, double %1783, i32 12
  %temp.vect2862 = insertelement <16 x double> %temp.vect2861, double %1784, i32 13
  %temp.vect2863 = insertelement <16 x double> %temp.vect2862, double %1785, i32 14
  %temp.vect2864 = insertelement <16 x double> %temp.vect2863, double %1786, i32 15
  %1787 = fmul <16 x double> %temp.vect2864, %1638
  %1788 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1789 = load i64* %1788, align 8
  %1790 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1791 = load i64* %1790, align 8
  %1792 = add i64 %1789, %1791
  %extract2867 = add i64 %1792, 8515584
  %1793 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2867
  %ptrTypeCast2883 = bitcast double addrspace(1)* %1793 to <16 x double> addrspace(1)*
  %1794 = load <16 x double> addrspace(1)* %ptrTypeCast2883, align 8
  %1795 = fmul <16 x double> %1794, %1787
  %1796 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1797 = load i64* %1796, align 8
  %1798 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1799 = load i64* %1798, align 8
  %1800 = add i64 %1797, %1799
  %extract2886 = add i64 %1800, 8515584
  %1801 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2886
  %ptrTypeCast2902 = bitcast double addrspace(1)* %1801 to <16 x double> addrspace(1)*
  store <16 x double> %1795, <16 x double> addrspace(1)* %ptrTypeCast2902, align 8
  %1802 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1803 = load i64* %1802, align 8
  %1804 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1805 = load i64* %1804, align 8
  %1806 = add i64 %1803, %1805
  %extract2905 = add i64 %1806, 8515584
  %1807 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract2905
  %ptrTypeCast2921 = bitcast double addrspace(1)* %1807 to <16 x double> addrspace(1)*
  %1808 = load <16 x double> addrspace(1)* %ptrTypeCast2921, align 8
  %1809 = fmul <16 x double> %1808, %1787
  %1810 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1811 = load i64* %1810, align 8
  %1812 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1813 = load i64* %1812, align 8
  %1814 = add i64 %1811, %1813
  %extract2924 = add i64 %1814, 8515584
  %1815 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract2924
  %ptrTypeCast2940 = bitcast double addrspace(1)* %1815 to <16 x double> addrspace(1)*
  store <16 x double> %1809, <16 x double> addrspace(1)* %ptrTypeCast2940, align 8
  %1816 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1817 = load i64* %1816, align 8
  %1818 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1819 = load i64* %1818, align 8
  %1820 = add i64 %1817, %1819
  %extract2943 = add i64 %1820, 884736
  %1821 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %extract2943
  %ptrTypeCast2959 = bitcast double addrspace(1)* %1821 to <16 x double> addrspace(1)*
  %1822 = load <16 x double> addrspace(1)* %ptrTypeCast2959, align 8
  %1823 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1824 = load i64* %1823, align 8
  %1825 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1826 = load i64* %1825, align 8
  %1827 = add i64 %1824, %1826
  %extract2962 = add i64 %1827, 9732096
  %1828 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2962
  %ptrTypeCast2978 = bitcast double addrspace(1)* %1828 to <16 x double> addrspace(1)*
  %1829 = load <16 x double> addrspace(1)* %ptrTypeCast2978, align 8
  %1830 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1829
  %1831 = fmul <16 x double> %101, %1830
  %1832 = fmul <16 x double> %1822, %1831
  %extract2979 = extractelement <16 x double> %1832, i32 0
  %extract2980 = extractelement <16 x double> %1832, i32 1
  %extract2981 = extractelement <16 x double> %1832, i32 2
  %extract2982 = extractelement <16 x double> %1832, i32 3
  %extract2983 = extractelement <16 x double> %1832, i32 4
  %extract2984 = extractelement <16 x double> %1832, i32 5
  %extract2985 = extractelement <16 x double> %1832, i32 6
  %extract2986 = extractelement <16 x double> %1832, i32 7
  %extract2987 = extractelement <16 x double> %1832, i32 8
  %extract2988 = extractelement <16 x double> %1832, i32 9
  %extract2989 = extractelement <16 x double> %1832, i32 10
  %extract2990 = extractelement <16 x double> %1832, i32 11
  %extract2991 = extractelement <16 x double> %1832, i32 12
  %extract2992 = extractelement <16 x double> %1832, i32 13
  %extract2993 = extractelement <16 x double> %1832, i32 14
  %extract2994 = extractelement <16 x double> %1832, i32 15
  %1833 = fadd <16 x double> %1832, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %1834 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1833
  %1835 = fmul <16 x double> %1832, %1834
  %1836 = tail call double @_Z4fmaxdd(double %extract2979, double 1.000000e-200) nounwind
  %1837 = tail call double @_Z4fmaxdd(double %extract2980, double 1.000000e-200) nounwind
  %1838 = tail call double @_Z4fmaxdd(double %extract2981, double 1.000000e-200) nounwind
  %1839 = tail call double @_Z4fmaxdd(double %extract2982, double 1.000000e-200) nounwind
  %1840 = tail call double @_Z4fmaxdd(double %extract2983, double 1.000000e-200) nounwind
  %1841 = tail call double @_Z4fmaxdd(double %extract2984, double 1.000000e-200) nounwind
  %1842 = tail call double @_Z4fmaxdd(double %extract2985, double 1.000000e-200) nounwind
  %1843 = tail call double @_Z4fmaxdd(double %extract2986, double 1.000000e-200) nounwind
  %1844 = tail call double @_Z4fmaxdd(double %extract2987, double 1.000000e-200) nounwind
  %1845 = tail call double @_Z4fmaxdd(double %extract2988, double 1.000000e-200) nounwind
  %1846 = tail call double @_Z4fmaxdd(double %extract2989, double 1.000000e-200) nounwind
  %1847 = tail call double @_Z4fmaxdd(double %extract2990, double 1.000000e-200) nounwind
  %1848 = tail call double @_Z4fmaxdd(double %extract2991, double 1.000000e-200) nounwind
  %1849 = tail call double @_Z4fmaxdd(double %extract2992, double 1.000000e-200) nounwind
  %1850 = tail call double @_Z4fmaxdd(double %extract2993, double 1.000000e-200) nounwind
  %1851 = tail call double @_Z4fmaxdd(double %extract2994, double 1.000000e-200) nounwind
  %1852 = tail call double @_Z5log10d(double %1836) nounwind
  %1853 = tail call double @_Z5log10d(double %1837) nounwind
  %1854 = tail call double @_Z5log10d(double %1838) nounwind
  %1855 = tail call double @_Z5log10d(double %1839) nounwind
  %1856 = tail call double @_Z5log10d(double %1840) nounwind
  %1857 = tail call double @_Z5log10d(double %1841) nounwind
  %1858 = tail call double @_Z5log10d(double %1842) nounwind
  %1859 = tail call double @_Z5log10d(double %1843) nounwind
  %1860 = tail call double @_Z5log10d(double %1844) nounwind
  %1861 = tail call double @_Z5log10d(double %1845) nounwind
  %1862 = tail call double @_Z5log10d(double %1846) nounwind
  %1863 = tail call double @_Z5log10d(double %1847) nounwind
  %1864 = tail call double @_Z5log10d(double %1848) nounwind
  %1865 = tail call double @_Z5log10d(double %1849) nounwind
  %1866 = tail call double @_Z5log10d(double %1850) nounwind
  %1867 = tail call double @_Z5log10d(double %1851) nounwind
  %temp.vect3123 = insertelement <16 x double> undef, double %1852, i32 0
  %temp.vect3124 = insertelement <16 x double> %temp.vect3123, double %1853, i32 1
  %temp.vect3125 = insertelement <16 x double> %temp.vect3124, double %1854, i32 2
  %temp.vect3126 = insertelement <16 x double> %temp.vect3125, double %1855, i32 3
  %temp.vect3127 = insertelement <16 x double> %temp.vect3126, double %1856, i32 4
  %temp.vect3128 = insertelement <16 x double> %temp.vect3127, double %1857, i32 5
  %temp.vect3129 = insertelement <16 x double> %temp.vect3128, double %1858, i32 6
  %temp.vect3130 = insertelement <16 x double> %temp.vect3129, double %1859, i32 7
  %temp.vect3131 = insertelement <16 x double> %temp.vect3130, double %1860, i32 8
  %temp.vect3132 = insertelement <16 x double> %temp.vect3131, double %1861, i32 9
  %temp.vect3133 = insertelement <16 x double> %temp.vect3132, double %1862, i32 10
  %temp.vect3134 = insertelement <16 x double> %temp.vect3133, double %1863, i32 11
  %temp.vect3135 = insertelement <16 x double> %temp.vect3134, double %1864, i32 12
  %temp.vect3136 = insertelement <16 x double> %temp.vect3135, double %1865, i32 13
  %temp.vect3137 = insertelement <16 x double> %temp.vect3136, double %1866, i32 14
  %temp.vect3138 = insertelement <16 x double> %temp.vect3137, double %1867, i32 15
  %1868 = fmul <16 x double> %7, <double 0xBFB393EE251E9EA8, double 0xBFB393EE251E9EA8, double 0xBFB393EE251E9EA8, double 0xBFB393EE251E9EA8, double 0xBFB393EE251E9EA8, double 0xBFB393EE251E9EA8, double 0xBFB393EE251E9EA8, double 0xBFB393EE251E9EA8, double 0xBFB393EE251E9EA8, double 0xBFB393EE251E9EA8, double 0xBFB393EE251E9EA8, double 0xBFB393EE251E9EA8, double 0xBFB393EE251E9EA8, double 0xBFB393EE251E9EA8, double 0xBFB393EE251E9EA8, double 0xBFB393EE251E9EA8>
  %extract2995 = extractelement <16 x double> %1868, i32 0
  %extract2996 = extractelement <16 x double> %1868, i32 1
  %extract2997 = extractelement <16 x double> %1868, i32 2
  %extract2998 = extractelement <16 x double> %1868, i32 3
  %extract2999 = extractelement <16 x double> %1868, i32 4
  %extract3000 = extractelement <16 x double> %1868, i32 5
  %extract3001 = extractelement <16 x double> %1868, i32 6
  %extract3002 = extractelement <16 x double> %1868, i32 7
  %extract3003 = extractelement <16 x double> %1868, i32 8
  %extract3004 = extractelement <16 x double> %1868, i32 9
  %extract3005 = extractelement <16 x double> %1868, i32 10
  %extract3006 = extractelement <16 x double> %1868, i32 11
  %extract3007 = extractelement <16 x double> %1868, i32 12
  %extract3008 = extractelement <16 x double> %1868, i32 13
  %extract3009 = extractelement <16 x double> %1868, i32 14
  %extract3010 = extractelement <16 x double> %1868, i32 15
  %1869 = tail call double @_Z3expd(double %extract2995) nounwind
  %1870 = tail call double @_Z3expd(double %extract2996) nounwind
  %1871 = tail call double @_Z3expd(double %extract2997) nounwind
  %1872 = tail call double @_Z3expd(double %extract2998) nounwind
  %1873 = tail call double @_Z3expd(double %extract2999) nounwind
  %1874 = tail call double @_Z3expd(double %extract3000) nounwind
  %1875 = tail call double @_Z3expd(double %extract3001) nounwind
  %1876 = tail call double @_Z3expd(double %extract3002) nounwind
  %1877 = tail call double @_Z3expd(double %extract3003) nounwind
  %1878 = tail call double @_Z3expd(double %extract3004) nounwind
  %1879 = tail call double @_Z3expd(double %extract3005) nounwind
  %1880 = tail call double @_Z3expd(double %extract3006) nounwind
  %1881 = tail call double @_Z3expd(double %extract3007) nounwind
  %1882 = tail call double @_Z3expd(double %extract3008) nounwind
  %1883 = tail call double @_Z3expd(double %extract3009) nounwind
  %1884 = tail call double @_Z3expd(double %extract3010) nounwind
  %temp.vect3011 = insertelement <16 x double> undef, double %1869, i32 0
  %temp.vect3012 = insertelement <16 x double> %temp.vect3011, double %1870, i32 1
  %temp.vect3013 = insertelement <16 x double> %temp.vect3012, double %1871, i32 2
  %temp.vect3014 = insertelement <16 x double> %temp.vect3013, double %1872, i32 3
  %temp.vect3015 = insertelement <16 x double> %temp.vect3014, double %1873, i32 4
  %temp.vect3016 = insertelement <16 x double> %temp.vect3015, double %1874, i32 5
  %temp.vect3017 = insertelement <16 x double> %temp.vect3016, double %1875, i32 6
  %temp.vect3018 = insertelement <16 x double> %temp.vect3017, double %1876, i32 7
  %temp.vect3019 = insertelement <16 x double> %temp.vect3018, double %1877, i32 8
  %temp.vect3020 = insertelement <16 x double> %temp.vect3019, double %1878, i32 9
  %temp.vect3021 = insertelement <16 x double> %temp.vect3020, double %1879, i32 10
  %temp.vect3022 = insertelement <16 x double> %temp.vect3021, double %1880, i32 11
  %temp.vect3023 = insertelement <16 x double> %temp.vect3022, double %1881, i32 12
  %temp.vect3024 = insertelement <16 x double> %temp.vect3023, double %1882, i32 13
  %temp.vect3025 = insertelement <16 x double> %temp.vect3024, double %1883, i32 14
  %temp.vect3026 = insertelement <16 x double> %temp.vect3025, double %1884, i32 15
  %1885 = fmul <16 x double> %temp.vect3026, <double 3.827000e-01, double 3.827000e-01, double 3.827000e-01, double 3.827000e-01, double 3.827000e-01, double 3.827000e-01, double 3.827000e-01, double 3.827000e-01, double 3.827000e-01, double 3.827000e-01, double 3.827000e-01, double 3.827000e-01, double 3.827000e-01, double 3.827000e-01, double 3.827000e-01, double 3.827000e-01>
  %1886 = fmul <16 x double> %7, <double 0xBF3F89BB80DCC421, double 0xBF3F89BB80DCC421, double 0xBF3F89BB80DCC421, double 0xBF3F89BB80DCC421, double 0xBF3F89BB80DCC421, double 0xBF3F89BB80DCC421, double 0xBF3F89BB80DCC421, double 0xBF3F89BB80DCC421, double 0xBF3F89BB80DCC421, double 0xBF3F89BB80DCC421, double 0xBF3F89BB80DCC421, double 0xBF3F89BB80DCC421, double 0xBF3F89BB80DCC421, double 0xBF3F89BB80DCC421, double 0xBF3F89BB80DCC421, double 0xBF3F89BB80DCC421>
  %extract3027 = extractelement <16 x double> %1886, i32 0
  %extract3028 = extractelement <16 x double> %1886, i32 1
  %extract3029 = extractelement <16 x double> %1886, i32 2
  %extract3030 = extractelement <16 x double> %1886, i32 3
  %extract3031 = extractelement <16 x double> %1886, i32 4
  %extract3032 = extractelement <16 x double> %1886, i32 5
  %extract3033 = extractelement <16 x double> %1886, i32 6
  %extract3034 = extractelement <16 x double> %1886, i32 7
  %extract3035 = extractelement <16 x double> %1886, i32 8
  %extract3036 = extractelement <16 x double> %1886, i32 9
  %extract3037 = extractelement <16 x double> %1886, i32 10
  %extract3038 = extractelement <16 x double> %1886, i32 11
  %extract3039 = extractelement <16 x double> %1886, i32 12
  %extract3040 = extractelement <16 x double> %1886, i32 13
  %extract3041 = extractelement <16 x double> %1886, i32 14
  %extract3042 = extractelement <16 x double> %1886, i32 15
  %1887 = tail call double @_Z3expd(double %extract3027) nounwind
  %1888 = tail call double @_Z3expd(double %extract3028) nounwind
  %1889 = tail call double @_Z3expd(double %extract3029) nounwind
  %1890 = tail call double @_Z3expd(double %extract3030) nounwind
  %1891 = tail call double @_Z3expd(double %extract3031) nounwind
  %1892 = tail call double @_Z3expd(double %extract3032) nounwind
  %1893 = tail call double @_Z3expd(double %extract3033) nounwind
  %1894 = tail call double @_Z3expd(double %extract3034) nounwind
  %1895 = tail call double @_Z3expd(double %extract3035) nounwind
  %1896 = tail call double @_Z3expd(double %extract3036) nounwind
  %1897 = tail call double @_Z3expd(double %extract3037) nounwind
  %1898 = tail call double @_Z3expd(double %extract3038) nounwind
  %1899 = tail call double @_Z3expd(double %extract3039) nounwind
  %1900 = tail call double @_Z3expd(double %extract3040) nounwind
  %1901 = tail call double @_Z3expd(double %extract3041) nounwind
  %1902 = tail call double @_Z3expd(double %extract3042) nounwind
  %temp.vect3043 = insertelement <16 x double> undef, double %1887, i32 0
  %temp.vect3044 = insertelement <16 x double> %temp.vect3043, double %1888, i32 1
  %temp.vect3045 = insertelement <16 x double> %temp.vect3044, double %1889, i32 2
  %temp.vect3046 = insertelement <16 x double> %temp.vect3045, double %1890, i32 3
  %temp.vect3047 = insertelement <16 x double> %temp.vect3046, double %1891, i32 4
  %temp.vect3048 = insertelement <16 x double> %temp.vect3047, double %1892, i32 5
  %temp.vect3049 = insertelement <16 x double> %temp.vect3048, double %1893, i32 6
  %temp.vect3050 = insertelement <16 x double> %temp.vect3049, double %1894, i32 7
  %temp.vect3051 = insertelement <16 x double> %temp.vect3050, double %1895, i32 8
  %temp.vect3052 = insertelement <16 x double> %temp.vect3051, double %1896, i32 9
  %temp.vect3053 = insertelement <16 x double> %temp.vect3052, double %1897, i32 10
  %temp.vect3054 = insertelement <16 x double> %temp.vect3053, double %1898, i32 11
  %temp.vect3055 = insertelement <16 x double> %temp.vect3054, double %1899, i32 12
  %temp.vect3056 = insertelement <16 x double> %temp.vect3055, double %1900, i32 13
  %temp.vect3057 = insertelement <16 x double> %temp.vect3056, double %1901, i32 14
  %temp.vect3058 = insertelement <16 x double> %temp.vect3057, double %1902, i32 15
  %1903 = fmul <16 x double> %temp.vect3058, <double 6.173000e-01, double 6.173000e-01, double 6.173000e-01, double 6.173000e-01, double 6.173000e-01, double 6.173000e-01, double 6.173000e-01, double 6.173000e-01, double 6.173000e-01, double 6.173000e-01, double 6.173000e-01, double 6.173000e-01, double 6.173000e-01, double 6.173000e-01, double 6.173000e-01, double 6.173000e-01>
  %1904 = fadd <16 x double> %1885, %1903
  %1905 = fmul <16 x double> %329, <double -5.093000e+03, double -5.093000e+03, double -5.093000e+03, double -5.093000e+03, double -5.093000e+03, double -5.093000e+03, double -5.093000e+03, double -5.093000e+03, double -5.093000e+03, double -5.093000e+03, double -5.093000e+03, double -5.093000e+03, double -5.093000e+03, double -5.093000e+03, double -5.093000e+03, double -5.093000e+03>
  %extract3059 = extractelement <16 x double> %1905, i32 0
  %extract3060 = extractelement <16 x double> %1905, i32 1
  %extract3061 = extractelement <16 x double> %1905, i32 2
  %extract3062 = extractelement <16 x double> %1905, i32 3
  %extract3063 = extractelement <16 x double> %1905, i32 4
  %extract3064 = extractelement <16 x double> %1905, i32 5
  %extract3065 = extractelement <16 x double> %1905, i32 6
  %extract3066 = extractelement <16 x double> %1905, i32 7
  %extract3067 = extractelement <16 x double> %1905, i32 8
  %extract3068 = extractelement <16 x double> %1905, i32 9
  %extract3069 = extractelement <16 x double> %1905, i32 10
  %extract3070 = extractelement <16 x double> %1905, i32 11
  %extract3071 = extractelement <16 x double> %1905, i32 12
  %extract3072 = extractelement <16 x double> %1905, i32 13
  %extract3073 = extractelement <16 x double> %1905, i32 14
  %extract3074 = extractelement <16 x double> %1905, i32 15
  %1906 = tail call double @_Z3expd(double %extract3059) nounwind
  %1907 = tail call double @_Z3expd(double %extract3060) nounwind
  %1908 = tail call double @_Z3expd(double %extract3061) nounwind
  %1909 = tail call double @_Z3expd(double %extract3062) nounwind
  %1910 = tail call double @_Z3expd(double %extract3063) nounwind
  %1911 = tail call double @_Z3expd(double %extract3064) nounwind
  %1912 = tail call double @_Z3expd(double %extract3065) nounwind
  %1913 = tail call double @_Z3expd(double %extract3066) nounwind
  %1914 = tail call double @_Z3expd(double %extract3067) nounwind
  %1915 = tail call double @_Z3expd(double %extract3068) nounwind
  %1916 = tail call double @_Z3expd(double %extract3069) nounwind
  %1917 = tail call double @_Z3expd(double %extract3070) nounwind
  %1918 = tail call double @_Z3expd(double %extract3071) nounwind
  %1919 = tail call double @_Z3expd(double %extract3072) nounwind
  %1920 = tail call double @_Z3expd(double %extract3073) nounwind
  %1921 = tail call double @_Z3expd(double %extract3074) nounwind
  %temp.vect3075 = insertelement <16 x double> undef, double %1906, i32 0
  %temp.vect3076 = insertelement <16 x double> %temp.vect3075, double %1907, i32 1
  %temp.vect3077 = insertelement <16 x double> %temp.vect3076, double %1908, i32 2
  %temp.vect3078 = insertelement <16 x double> %temp.vect3077, double %1909, i32 3
  %temp.vect3079 = insertelement <16 x double> %temp.vect3078, double %1910, i32 4
  %temp.vect3080 = insertelement <16 x double> %temp.vect3079, double %1911, i32 5
  %temp.vect3081 = insertelement <16 x double> %temp.vect3080, double %1912, i32 6
  %temp.vect3082 = insertelement <16 x double> %temp.vect3081, double %1913, i32 7
  %temp.vect3083 = insertelement <16 x double> %temp.vect3082, double %1914, i32 8
  %temp.vect3084 = insertelement <16 x double> %temp.vect3083, double %1915, i32 9
  %temp.vect3085 = insertelement <16 x double> %temp.vect3084, double %1916, i32 10
  %temp.vect3086 = insertelement <16 x double> %temp.vect3085, double %1917, i32 11
  %temp.vect3087 = insertelement <16 x double> %temp.vect3086, double %1918, i32 12
  %temp.vect3088 = insertelement <16 x double> %temp.vect3087, double %1919, i32 13
  %temp.vect3089 = insertelement <16 x double> %temp.vect3088, double %1920, i32 14
  %temp.vect3090 = insertelement <16 x double> %temp.vect3089, double %1921, i32 15
  %1922 = fadd <16 x double> %1904, %temp.vect3090
  %extract3091 = extractelement <16 x double> %1922, i32 0
  %extract3092 = extractelement <16 x double> %1922, i32 1
  %extract3093 = extractelement <16 x double> %1922, i32 2
  %extract3094 = extractelement <16 x double> %1922, i32 3
  %extract3095 = extractelement <16 x double> %1922, i32 4
  %extract3096 = extractelement <16 x double> %1922, i32 5
  %extract3097 = extractelement <16 x double> %1922, i32 6
  %extract3098 = extractelement <16 x double> %1922, i32 7
  %extract3099 = extractelement <16 x double> %1922, i32 8
  %extract3100 = extractelement <16 x double> %1922, i32 9
  %extract3101 = extractelement <16 x double> %1922, i32 10
  %extract3102 = extractelement <16 x double> %1922, i32 11
  %extract3103 = extractelement <16 x double> %1922, i32 12
  %extract3104 = extractelement <16 x double> %1922, i32 13
  %extract3105 = extractelement <16 x double> %1922, i32 14
  %extract3106 = extractelement <16 x double> %1922, i32 15
  %1923 = tail call double @_Z4fmaxdd(double %extract3091, double 1.000000e-200) nounwind
  %1924 = tail call double @_Z4fmaxdd(double %extract3092, double 1.000000e-200) nounwind
  %1925 = tail call double @_Z4fmaxdd(double %extract3093, double 1.000000e-200) nounwind
  %1926 = tail call double @_Z4fmaxdd(double %extract3094, double 1.000000e-200) nounwind
  %1927 = tail call double @_Z4fmaxdd(double %extract3095, double 1.000000e-200) nounwind
  %1928 = tail call double @_Z4fmaxdd(double %extract3096, double 1.000000e-200) nounwind
  %1929 = tail call double @_Z4fmaxdd(double %extract3097, double 1.000000e-200) nounwind
  %1930 = tail call double @_Z4fmaxdd(double %extract3098, double 1.000000e-200) nounwind
  %1931 = tail call double @_Z4fmaxdd(double %extract3099, double 1.000000e-200) nounwind
  %1932 = tail call double @_Z4fmaxdd(double %extract3100, double 1.000000e-200) nounwind
  %1933 = tail call double @_Z4fmaxdd(double %extract3101, double 1.000000e-200) nounwind
  %1934 = tail call double @_Z4fmaxdd(double %extract3102, double 1.000000e-200) nounwind
  %1935 = tail call double @_Z4fmaxdd(double %extract3103, double 1.000000e-200) nounwind
  %1936 = tail call double @_Z4fmaxdd(double %extract3104, double 1.000000e-200) nounwind
  %1937 = tail call double @_Z4fmaxdd(double %extract3105, double 1.000000e-200) nounwind
  %1938 = tail call double @_Z4fmaxdd(double %extract3106, double 1.000000e-200) nounwind
  %1939 = tail call double @_Z5log10d(double %1923) nounwind
  %1940 = tail call double @_Z5log10d(double %1924) nounwind
  %1941 = tail call double @_Z5log10d(double %1925) nounwind
  %1942 = tail call double @_Z5log10d(double %1926) nounwind
  %1943 = tail call double @_Z5log10d(double %1927) nounwind
  %1944 = tail call double @_Z5log10d(double %1928) nounwind
  %1945 = tail call double @_Z5log10d(double %1929) nounwind
  %1946 = tail call double @_Z5log10d(double %1930) nounwind
  %1947 = tail call double @_Z5log10d(double %1931) nounwind
  %1948 = tail call double @_Z5log10d(double %1932) nounwind
  %1949 = tail call double @_Z5log10d(double %1933) nounwind
  %1950 = tail call double @_Z5log10d(double %1934) nounwind
  %1951 = tail call double @_Z5log10d(double %1935) nounwind
  %1952 = tail call double @_Z5log10d(double %1936) nounwind
  %1953 = tail call double @_Z5log10d(double %1937) nounwind
  %1954 = tail call double @_Z5log10d(double %1938) nounwind
  %temp.vect3107 = insertelement <16 x double> undef, double %1939, i32 0
  %temp.vect3108 = insertelement <16 x double> %temp.vect3107, double %1940, i32 1
  %temp.vect3109 = insertelement <16 x double> %temp.vect3108, double %1941, i32 2
  %temp.vect3110 = insertelement <16 x double> %temp.vect3109, double %1942, i32 3
  %temp.vect3111 = insertelement <16 x double> %temp.vect3110, double %1943, i32 4
  %temp.vect3112 = insertelement <16 x double> %temp.vect3111, double %1944, i32 5
  %temp.vect3113 = insertelement <16 x double> %temp.vect3112, double %1945, i32 6
  %temp.vect3114 = insertelement <16 x double> %temp.vect3113, double %1946, i32 7
  %temp.vect3115 = insertelement <16 x double> %temp.vect3114, double %1947, i32 8
  %temp.vect3116 = insertelement <16 x double> %temp.vect3115, double %1948, i32 9
  %temp.vect3117 = insertelement <16 x double> %temp.vect3116, double %1949, i32 10
  %temp.vect3118 = insertelement <16 x double> %temp.vect3117, double %1950, i32 11
  %temp.vect3119 = insertelement <16 x double> %temp.vect3118, double %1951, i32 12
  %temp.vect3120 = insertelement <16 x double> %temp.vect3119, double %1952, i32 13
  %temp.vect3121 = insertelement <16 x double> %temp.vect3120, double %1953, i32 14
  %temp.vect3122 = insertelement <16 x double> %temp.vect3121, double %1954, i32 15
  %1955 = fmul <16 x double> %temp.vect3122, <double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00>
  %1956 = fsub <16 x double> <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>, %1955
  %1957 = fmul <16 x double> %temp.vect3122, <double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01>
  %1958 = fadd <16 x double> %1957, <double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01>
  %1959 = fsub <16 x double> %temp.vect3138, %1958
  %1960 = fmul <16 x double> %1959, <double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01>
  %1961 = fsub <16 x double> %1956, %1960
  %1962 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1961
  %1963 = fmul <16 x double> %1959, %1962
  %1964 = fmul <16 x double> %1963, %1963
  %1965 = fadd <16 x double> %1964, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %1966 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1965
  %1967 = fmul <16 x double> %temp.vect3122, %1966
  %extract3139 = extractelement <16 x double> %1967, i32 0
  %extract3140 = extractelement <16 x double> %1967, i32 1
  %extract3141 = extractelement <16 x double> %1967, i32 2
  %extract3142 = extractelement <16 x double> %1967, i32 3
  %extract3143 = extractelement <16 x double> %1967, i32 4
  %extract3144 = extractelement <16 x double> %1967, i32 5
  %extract3145 = extractelement <16 x double> %1967, i32 6
  %extract3146 = extractelement <16 x double> %1967, i32 7
  %extract3147 = extractelement <16 x double> %1967, i32 8
  %extract3148 = extractelement <16 x double> %1967, i32 9
  %extract3149 = extractelement <16 x double> %1967, i32 10
  %extract3150 = extractelement <16 x double> %1967, i32 11
  %extract3151 = extractelement <16 x double> %1967, i32 12
  %extract3152 = extractelement <16 x double> %1967, i32 13
  %extract3153 = extractelement <16 x double> %1967, i32 14
  %extract3154 = extractelement <16 x double> %1967, i32 15
  %1968 = tail call double @_Z5exp10d(double %extract3139) nounwind
  %1969 = tail call double @_Z5exp10d(double %extract3140) nounwind
  %1970 = tail call double @_Z5exp10d(double %extract3141) nounwind
  %1971 = tail call double @_Z5exp10d(double %extract3142) nounwind
  %1972 = tail call double @_Z5exp10d(double %extract3143) nounwind
  %1973 = tail call double @_Z5exp10d(double %extract3144) nounwind
  %1974 = tail call double @_Z5exp10d(double %extract3145) nounwind
  %1975 = tail call double @_Z5exp10d(double %extract3146) nounwind
  %1976 = tail call double @_Z5exp10d(double %extract3147) nounwind
  %1977 = tail call double @_Z5exp10d(double %extract3148) nounwind
  %1978 = tail call double @_Z5exp10d(double %extract3149) nounwind
  %1979 = tail call double @_Z5exp10d(double %extract3150) nounwind
  %1980 = tail call double @_Z5exp10d(double %extract3151) nounwind
  %1981 = tail call double @_Z5exp10d(double %extract3152) nounwind
  %1982 = tail call double @_Z5exp10d(double %extract3153) nounwind
  %1983 = tail call double @_Z5exp10d(double %extract3154) nounwind
  %temp.vect3155 = insertelement <16 x double> undef, double %1968, i32 0
  %temp.vect3156 = insertelement <16 x double> %temp.vect3155, double %1969, i32 1
  %temp.vect3157 = insertelement <16 x double> %temp.vect3156, double %1970, i32 2
  %temp.vect3158 = insertelement <16 x double> %temp.vect3157, double %1971, i32 3
  %temp.vect3159 = insertelement <16 x double> %temp.vect3158, double %1972, i32 4
  %temp.vect3160 = insertelement <16 x double> %temp.vect3159, double %1973, i32 5
  %temp.vect3161 = insertelement <16 x double> %temp.vect3160, double %1974, i32 6
  %temp.vect3162 = insertelement <16 x double> %temp.vect3161, double %1975, i32 7
  %temp.vect3163 = insertelement <16 x double> %temp.vect3162, double %1976, i32 8
  %temp.vect3164 = insertelement <16 x double> %temp.vect3163, double %1977, i32 9
  %temp.vect3165 = insertelement <16 x double> %temp.vect3164, double %1978, i32 10
  %temp.vect3166 = insertelement <16 x double> %temp.vect3165, double %1979, i32 11
  %temp.vect3167 = insertelement <16 x double> %temp.vect3166, double %1980, i32 12
  %temp.vect3168 = insertelement <16 x double> %temp.vect3167, double %1981, i32 13
  %temp.vect3169 = insertelement <16 x double> %temp.vect3168, double %1982, i32 14
  %temp.vect3170 = insertelement <16 x double> %temp.vect3169, double %1983, i32 15
  %1984 = fmul <16 x double> %temp.vect3170, %1835
  %1985 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1986 = load i64* %1985, align 8
  %1987 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1988 = load i64* %1987, align 8
  %1989 = add i64 %1986, %1988
  %extract3173 = add i64 %1989, 9732096
  %1990 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3173
  %ptrTypeCast3189 = bitcast double addrspace(1)* %1990 to <16 x double> addrspace(1)*
  %1991 = load <16 x double> addrspace(1)* %ptrTypeCast3189, align 8
  %1992 = fmul <16 x double> %1991, %1984
  %1993 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1994 = load i64* %1993, align 8
  %1995 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1996 = load i64* %1995, align 8
  %1997 = add i64 %1994, %1996
  %extract3192 = add i64 %1997, 9732096
  %1998 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3192
  %ptrTypeCast3208 = bitcast double addrspace(1)* %1998 to <16 x double> addrspace(1)*
  store <16 x double> %1992, <16 x double> addrspace(1)* %ptrTypeCast3208, align 8
  %1999 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2000 = load i64* %1999, align 8
  %2001 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2002 = load i64* %2001, align 8
  %2003 = add i64 %2000, %2002
  %extract3211 = add i64 %2003, 9732096
  %2004 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract3211
  %ptrTypeCast3227 = bitcast double addrspace(1)* %2004 to <16 x double> addrspace(1)*
  %2005 = load <16 x double> addrspace(1)* %ptrTypeCast3227, align 8
  %2006 = fmul <16 x double> %2005, %1984
  %2007 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2008 = load i64* %2007, align 8
  %2009 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2010 = load i64* %2009, align 8
  %2011 = add i64 %2008, %2010
  %extract3230 = add i64 %2011, 9732096
  %2012 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract3230
  %ptrTypeCast3246 = bitcast double addrspace(1)* %2012 to <16 x double> addrspace(1)*
  store <16 x double> %2006, <16 x double> addrspace(1)* %ptrTypeCast3246, align 8
  %2013 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2014 = load i64* %2013, align 8
  %2015 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2016 = load i64* %2015, align 8
  %2017 = add i64 %2014, %2016
  %extract3249 = add i64 %2017, 995328
  %2018 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %extract3249
  %ptrTypeCast3265 = bitcast double addrspace(1)* %2018 to <16 x double> addrspace(1)*
  %2019 = load <16 x double> addrspace(1)* %ptrTypeCast3265, align 8
  %2020 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2021 = load i64* %2020, align 8
  %2022 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2023 = load i64* %2022, align 8
  %2024 = add i64 %2021, %2023
  %extract3268 = add i64 %2024, 10174464
  %2025 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3268
  %ptrTypeCast3284 = bitcast double addrspace(1)* %2025 to <16 x double> addrspace(1)*
  %2026 = load <16 x double> addrspace(1)* %ptrTypeCast3284, align 8
  %2027 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2026
  %2028 = fmul <16 x double> %101, %2027
  %2029 = fmul <16 x double> %2019, %2028
  %extract3285 = extractelement <16 x double> %2029, i32 0
  %extract3286 = extractelement <16 x double> %2029, i32 1
  %extract3287 = extractelement <16 x double> %2029, i32 2
  %extract3288 = extractelement <16 x double> %2029, i32 3
  %extract3289 = extractelement <16 x double> %2029, i32 4
  %extract3290 = extractelement <16 x double> %2029, i32 5
  %extract3291 = extractelement <16 x double> %2029, i32 6
  %extract3292 = extractelement <16 x double> %2029, i32 7
  %extract3293 = extractelement <16 x double> %2029, i32 8
  %extract3294 = extractelement <16 x double> %2029, i32 9
  %extract3295 = extractelement <16 x double> %2029, i32 10
  %extract3296 = extractelement <16 x double> %2029, i32 11
  %extract3297 = extractelement <16 x double> %2029, i32 12
  %extract3298 = extractelement <16 x double> %2029, i32 13
  %extract3299 = extractelement <16 x double> %2029, i32 14
  %extract3300 = extractelement <16 x double> %2029, i32 15
  %2030 = fadd <16 x double> %2029, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %2031 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2030
  %2032 = fmul <16 x double> %2029, %2031
  %2033 = tail call double @_Z4fmaxdd(double %extract3285, double 1.000000e-200) nounwind
  %2034 = tail call double @_Z4fmaxdd(double %extract3286, double 1.000000e-200) nounwind
  %2035 = tail call double @_Z4fmaxdd(double %extract3287, double 1.000000e-200) nounwind
  %2036 = tail call double @_Z4fmaxdd(double %extract3288, double 1.000000e-200) nounwind
  %2037 = tail call double @_Z4fmaxdd(double %extract3289, double 1.000000e-200) nounwind
  %2038 = tail call double @_Z4fmaxdd(double %extract3290, double 1.000000e-200) nounwind
  %2039 = tail call double @_Z4fmaxdd(double %extract3291, double 1.000000e-200) nounwind
  %2040 = tail call double @_Z4fmaxdd(double %extract3292, double 1.000000e-200) nounwind
  %2041 = tail call double @_Z4fmaxdd(double %extract3293, double 1.000000e-200) nounwind
  %2042 = tail call double @_Z4fmaxdd(double %extract3294, double 1.000000e-200) nounwind
  %2043 = tail call double @_Z4fmaxdd(double %extract3295, double 1.000000e-200) nounwind
  %2044 = tail call double @_Z4fmaxdd(double %extract3296, double 1.000000e-200) nounwind
  %2045 = tail call double @_Z4fmaxdd(double %extract3297, double 1.000000e-200) nounwind
  %2046 = tail call double @_Z4fmaxdd(double %extract3298, double 1.000000e-200) nounwind
  %2047 = tail call double @_Z4fmaxdd(double %extract3299, double 1.000000e-200) nounwind
  %2048 = tail call double @_Z4fmaxdd(double %extract3300, double 1.000000e-200) nounwind
  %2049 = tail call double @_Z5log10d(double %2033) nounwind
  %2050 = tail call double @_Z5log10d(double %2034) nounwind
  %2051 = tail call double @_Z5log10d(double %2035) nounwind
  %2052 = tail call double @_Z5log10d(double %2036) nounwind
  %2053 = tail call double @_Z5log10d(double %2037) nounwind
  %2054 = tail call double @_Z5log10d(double %2038) nounwind
  %2055 = tail call double @_Z5log10d(double %2039) nounwind
  %2056 = tail call double @_Z5log10d(double %2040) nounwind
  %2057 = tail call double @_Z5log10d(double %2041) nounwind
  %2058 = tail call double @_Z5log10d(double %2042) nounwind
  %2059 = tail call double @_Z5log10d(double %2043) nounwind
  %2060 = tail call double @_Z5log10d(double %2044) nounwind
  %2061 = tail call double @_Z5log10d(double %2045) nounwind
  %2062 = tail call double @_Z5log10d(double %2046) nounwind
  %2063 = tail call double @_Z5log10d(double %2047) nounwind
  %2064 = tail call double @_Z5log10d(double %2048) nounwind
  %temp.vect3429 = insertelement <16 x double> undef, double %2049, i32 0
  %temp.vect3430 = insertelement <16 x double> %temp.vect3429, double %2050, i32 1
  %temp.vect3431 = insertelement <16 x double> %temp.vect3430, double %2051, i32 2
  %temp.vect3432 = insertelement <16 x double> %temp.vect3431, double %2052, i32 3
  %temp.vect3433 = insertelement <16 x double> %temp.vect3432, double %2053, i32 4
  %temp.vect3434 = insertelement <16 x double> %temp.vect3433, double %2054, i32 5
  %temp.vect3435 = insertelement <16 x double> %temp.vect3434, double %2055, i32 6
  %temp.vect3436 = insertelement <16 x double> %temp.vect3435, double %2056, i32 7
  %temp.vect3437 = insertelement <16 x double> %temp.vect3436, double %2057, i32 8
  %temp.vect3438 = insertelement <16 x double> %temp.vect3437, double %2058, i32 9
  %temp.vect3439 = insertelement <16 x double> %temp.vect3438, double %2059, i32 10
  %temp.vect3440 = insertelement <16 x double> %temp.vect3439, double %2060, i32 11
  %temp.vect3441 = insertelement <16 x double> %temp.vect3440, double %2061, i32 12
  %temp.vect3442 = insertelement <16 x double> %temp.vect3441, double %2062, i32 13
  %temp.vect3443 = insertelement <16 x double> %temp.vect3442, double %2063, i32 14
  %temp.vect3444 = insertelement <16 x double> %temp.vect3443, double %2064, i32 15
  %2065 = fmul <16 x double> %7, <double 0xBF7B2036406C80D9, double 0xBF7B2036406C80D9, double 0xBF7B2036406C80D9, double 0xBF7B2036406C80D9, double 0xBF7B2036406C80D9, double 0xBF7B2036406C80D9, double 0xBF7B2036406C80D9, double 0xBF7B2036406C80D9, double 0xBF7B2036406C80D9, double 0xBF7B2036406C80D9, double 0xBF7B2036406C80D9, double 0xBF7B2036406C80D9, double 0xBF7B2036406C80D9, double 0xBF7B2036406C80D9, double 0xBF7B2036406C80D9, double 0xBF7B2036406C80D9>
  %extract3301 = extractelement <16 x double> %2065, i32 0
  %extract3302 = extractelement <16 x double> %2065, i32 1
  %extract3303 = extractelement <16 x double> %2065, i32 2
  %extract3304 = extractelement <16 x double> %2065, i32 3
  %extract3305 = extractelement <16 x double> %2065, i32 4
  %extract3306 = extractelement <16 x double> %2065, i32 5
  %extract3307 = extractelement <16 x double> %2065, i32 6
  %extract3308 = extractelement <16 x double> %2065, i32 7
  %extract3309 = extractelement <16 x double> %2065, i32 8
  %extract3310 = extractelement <16 x double> %2065, i32 9
  %extract3311 = extractelement <16 x double> %2065, i32 10
  %extract3312 = extractelement <16 x double> %2065, i32 11
  %extract3313 = extractelement <16 x double> %2065, i32 12
  %extract3314 = extractelement <16 x double> %2065, i32 13
  %extract3315 = extractelement <16 x double> %2065, i32 14
  %extract3316 = extractelement <16 x double> %2065, i32 15
  %2066 = tail call double @_Z3expd(double %extract3301) nounwind
  %2067 = tail call double @_Z3expd(double %extract3302) nounwind
  %2068 = tail call double @_Z3expd(double %extract3303) nounwind
  %2069 = tail call double @_Z3expd(double %extract3304) nounwind
  %2070 = tail call double @_Z3expd(double %extract3305) nounwind
  %2071 = tail call double @_Z3expd(double %extract3306) nounwind
  %2072 = tail call double @_Z3expd(double %extract3307) nounwind
  %2073 = tail call double @_Z3expd(double %extract3308) nounwind
  %2074 = tail call double @_Z3expd(double %extract3309) nounwind
  %2075 = tail call double @_Z3expd(double %extract3310) nounwind
  %2076 = tail call double @_Z3expd(double %extract3311) nounwind
  %2077 = tail call double @_Z3expd(double %extract3312) nounwind
  %2078 = tail call double @_Z3expd(double %extract3313) nounwind
  %2079 = tail call double @_Z3expd(double %extract3314) nounwind
  %2080 = tail call double @_Z3expd(double %extract3315) nounwind
  %2081 = tail call double @_Z3expd(double %extract3316) nounwind
  %temp.vect3317 = insertelement <16 x double> undef, double %2066, i32 0
  %temp.vect3318 = insertelement <16 x double> %temp.vect3317, double %2067, i32 1
  %temp.vect3319 = insertelement <16 x double> %temp.vect3318, double %2068, i32 2
  %temp.vect3320 = insertelement <16 x double> %temp.vect3319, double %2069, i32 3
  %temp.vect3321 = insertelement <16 x double> %temp.vect3320, double %2070, i32 4
  %temp.vect3322 = insertelement <16 x double> %temp.vect3321, double %2071, i32 5
  %temp.vect3323 = insertelement <16 x double> %temp.vect3322, double %2072, i32 6
  %temp.vect3324 = insertelement <16 x double> %temp.vect3323, double %2073, i32 7
  %temp.vect3325 = insertelement <16 x double> %temp.vect3324, double %2074, i32 8
  %temp.vect3326 = insertelement <16 x double> %temp.vect3325, double %2075, i32 9
  %temp.vect3327 = insertelement <16 x double> %temp.vect3326, double %2076, i32 10
  %temp.vect3328 = insertelement <16 x double> %temp.vect3327, double %2077, i32 11
  %temp.vect3329 = insertelement <16 x double> %temp.vect3328, double %2078, i32 12
  %temp.vect3330 = insertelement <16 x double> %temp.vect3329, double %2079, i32 13
  %temp.vect3331 = insertelement <16 x double> %temp.vect3330, double %2080, i32 14
  %temp.vect3332 = insertelement <16 x double> %temp.vect3331, double %2081, i32 15
  %2082 = fmul <16 x double> %temp.vect3332, <double 4.675000e-01, double 4.675000e-01, double 4.675000e-01, double 4.675000e-01, double 4.675000e-01, double 4.675000e-01, double 4.675000e-01, double 4.675000e-01, double 4.675000e-01, double 4.675000e-01, double 4.675000e-01, double 4.675000e-01, double 4.675000e-01, double 4.675000e-01, double 4.675000e-01, double 4.675000e-01>
  %2083 = fmul <16 x double> %7, <double 0xBF4F9182B6813BAF, double 0xBF4F9182B6813BAF, double 0xBF4F9182B6813BAF, double 0xBF4F9182B6813BAF, double 0xBF4F9182B6813BAF, double 0xBF4F9182B6813BAF, double 0xBF4F9182B6813BAF, double 0xBF4F9182B6813BAF, double 0xBF4F9182B6813BAF, double 0xBF4F9182B6813BAF, double 0xBF4F9182B6813BAF, double 0xBF4F9182B6813BAF, double 0xBF4F9182B6813BAF, double 0xBF4F9182B6813BAF, double 0xBF4F9182B6813BAF, double 0xBF4F9182B6813BAF>
  %extract3333 = extractelement <16 x double> %2083, i32 0
  %extract3334 = extractelement <16 x double> %2083, i32 1
  %extract3335 = extractelement <16 x double> %2083, i32 2
  %extract3336 = extractelement <16 x double> %2083, i32 3
  %extract3337 = extractelement <16 x double> %2083, i32 4
  %extract3338 = extractelement <16 x double> %2083, i32 5
  %extract3339 = extractelement <16 x double> %2083, i32 6
  %extract3340 = extractelement <16 x double> %2083, i32 7
  %extract3341 = extractelement <16 x double> %2083, i32 8
  %extract3342 = extractelement <16 x double> %2083, i32 9
  %extract3343 = extractelement <16 x double> %2083, i32 10
  %extract3344 = extractelement <16 x double> %2083, i32 11
  %extract3345 = extractelement <16 x double> %2083, i32 12
  %extract3346 = extractelement <16 x double> %2083, i32 13
  %extract3347 = extractelement <16 x double> %2083, i32 14
  %extract3348 = extractelement <16 x double> %2083, i32 15
  %2084 = tail call double @_Z3expd(double %extract3333) nounwind
  %2085 = tail call double @_Z3expd(double %extract3334) nounwind
  %2086 = tail call double @_Z3expd(double %extract3335) nounwind
  %2087 = tail call double @_Z3expd(double %extract3336) nounwind
  %2088 = tail call double @_Z3expd(double %extract3337) nounwind
  %2089 = tail call double @_Z3expd(double %extract3338) nounwind
  %2090 = tail call double @_Z3expd(double %extract3339) nounwind
  %2091 = tail call double @_Z3expd(double %extract3340) nounwind
  %2092 = tail call double @_Z3expd(double %extract3341) nounwind
  %2093 = tail call double @_Z3expd(double %extract3342) nounwind
  %2094 = tail call double @_Z3expd(double %extract3343) nounwind
  %2095 = tail call double @_Z3expd(double %extract3344) nounwind
  %2096 = tail call double @_Z3expd(double %extract3345) nounwind
  %2097 = tail call double @_Z3expd(double %extract3346) nounwind
  %2098 = tail call double @_Z3expd(double %extract3347) nounwind
  %2099 = tail call double @_Z3expd(double %extract3348) nounwind
  %temp.vect3349 = insertelement <16 x double> undef, double %2084, i32 0
  %temp.vect3350 = insertelement <16 x double> %temp.vect3349, double %2085, i32 1
  %temp.vect3351 = insertelement <16 x double> %temp.vect3350, double %2086, i32 2
  %temp.vect3352 = insertelement <16 x double> %temp.vect3351, double %2087, i32 3
  %temp.vect3353 = insertelement <16 x double> %temp.vect3352, double %2088, i32 4
  %temp.vect3354 = insertelement <16 x double> %temp.vect3353, double %2089, i32 5
  %temp.vect3355 = insertelement <16 x double> %temp.vect3354, double %2090, i32 6
  %temp.vect3356 = insertelement <16 x double> %temp.vect3355, double %2091, i32 7
  %temp.vect3357 = insertelement <16 x double> %temp.vect3356, double %2092, i32 8
  %temp.vect3358 = insertelement <16 x double> %temp.vect3357, double %2093, i32 9
  %temp.vect3359 = insertelement <16 x double> %temp.vect3358, double %2094, i32 10
  %temp.vect3360 = insertelement <16 x double> %temp.vect3359, double %2095, i32 11
  %temp.vect3361 = insertelement <16 x double> %temp.vect3360, double %2096, i32 12
  %temp.vect3362 = insertelement <16 x double> %temp.vect3361, double %2097, i32 13
  %temp.vect3363 = insertelement <16 x double> %temp.vect3362, double %2098, i32 14
  %temp.vect3364 = insertelement <16 x double> %temp.vect3363, double %2099, i32 15
  %2100 = fmul <16 x double> %temp.vect3364, <double 5.325000e-01, double 5.325000e-01, double 5.325000e-01, double 5.325000e-01, double 5.325000e-01, double 5.325000e-01, double 5.325000e-01, double 5.325000e-01, double 5.325000e-01, double 5.325000e-01, double 5.325000e-01, double 5.325000e-01, double 5.325000e-01, double 5.325000e-01, double 5.325000e-01, double 5.325000e-01>
  %2101 = fadd <16 x double> %2082, %2100
  %2102 = fmul <16 x double> %329, <double -4.970000e+03, double -4.970000e+03, double -4.970000e+03, double -4.970000e+03, double -4.970000e+03, double -4.970000e+03, double -4.970000e+03, double -4.970000e+03, double -4.970000e+03, double -4.970000e+03, double -4.970000e+03, double -4.970000e+03, double -4.970000e+03, double -4.970000e+03, double -4.970000e+03, double -4.970000e+03>
  %extract3365 = extractelement <16 x double> %2102, i32 0
  %extract3366 = extractelement <16 x double> %2102, i32 1
  %extract3367 = extractelement <16 x double> %2102, i32 2
  %extract3368 = extractelement <16 x double> %2102, i32 3
  %extract3369 = extractelement <16 x double> %2102, i32 4
  %extract3370 = extractelement <16 x double> %2102, i32 5
  %extract3371 = extractelement <16 x double> %2102, i32 6
  %extract3372 = extractelement <16 x double> %2102, i32 7
  %extract3373 = extractelement <16 x double> %2102, i32 8
  %extract3374 = extractelement <16 x double> %2102, i32 9
  %extract3375 = extractelement <16 x double> %2102, i32 10
  %extract3376 = extractelement <16 x double> %2102, i32 11
  %extract3377 = extractelement <16 x double> %2102, i32 12
  %extract3378 = extractelement <16 x double> %2102, i32 13
  %extract3379 = extractelement <16 x double> %2102, i32 14
  %extract3380 = extractelement <16 x double> %2102, i32 15
  %2103 = tail call double @_Z3expd(double %extract3365) nounwind
  %2104 = tail call double @_Z3expd(double %extract3366) nounwind
  %2105 = tail call double @_Z3expd(double %extract3367) nounwind
  %2106 = tail call double @_Z3expd(double %extract3368) nounwind
  %2107 = tail call double @_Z3expd(double %extract3369) nounwind
  %2108 = tail call double @_Z3expd(double %extract3370) nounwind
  %2109 = tail call double @_Z3expd(double %extract3371) nounwind
  %2110 = tail call double @_Z3expd(double %extract3372) nounwind
  %2111 = tail call double @_Z3expd(double %extract3373) nounwind
  %2112 = tail call double @_Z3expd(double %extract3374) nounwind
  %2113 = tail call double @_Z3expd(double %extract3375) nounwind
  %2114 = tail call double @_Z3expd(double %extract3376) nounwind
  %2115 = tail call double @_Z3expd(double %extract3377) nounwind
  %2116 = tail call double @_Z3expd(double %extract3378) nounwind
  %2117 = tail call double @_Z3expd(double %extract3379) nounwind
  %2118 = tail call double @_Z3expd(double %extract3380) nounwind
  %temp.vect3381 = insertelement <16 x double> undef, double %2103, i32 0
  %temp.vect3382 = insertelement <16 x double> %temp.vect3381, double %2104, i32 1
  %temp.vect3383 = insertelement <16 x double> %temp.vect3382, double %2105, i32 2
  %temp.vect3384 = insertelement <16 x double> %temp.vect3383, double %2106, i32 3
  %temp.vect3385 = insertelement <16 x double> %temp.vect3384, double %2107, i32 4
  %temp.vect3386 = insertelement <16 x double> %temp.vect3385, double %2108, i32 5
  %temp.vect3387 = insertelement <16 x double> %temp.vect3386, double %2109, i32 6
  %temp.vect3388 = insertelement <16 x double> %temp.vect3387, double %2110, i32 7
  %temp.vect3389 = insertelement <16 x double> %temp.vect3388, double %2111, i32 8
  %temp.vect3390 = insertelement <16 x double> %temp.vect3389, double %2112, i32 9
  %temp.vect3391 = insertelement <16 x double> %temp.vect3390, double %2113, i32 10
  %temp.vect3392 = insertelement <16 x double> %temp.vect3391, double %2114, i32 11
  %temp.vect3393 = insertelement <16 x double> %temp.vect3392, double %2115, i32 12
  %temp.vect3394 = insertelement <16 x double> %temp.vect3393, double %2116, i32 13
  %temp.vect3395 = insertelement <16 x double> %temp.vect3394, double %2117, i32 14
  %temp.vect3396 = insertelement <16 x double> %temp.vect3395, double %2118, i32 15
  %2119 = fadd <16 x double> %2101, %temp.vect3396
  %extract3397 = extractelement <16 x double> %2119, i32 0
  %extract3398 = extractelement <16 x double> %2119, i32 1
  %extract3399 = extractelement <16 x double> %2119, i32 2
  %extract3400 = extractelement <16 x double> %2119, i32 3
  %extract3401 = extractelement <16 x double> %2119, i32 4
  %extract3402 = extractelement <16 x double> %2119, i32 5
  %extract3403 = extractelement <16 x double> %2119, i32 6
  %extract3404 = extractelement <16 x double> %2119, i32 7
  %extract3405 = extractelement <16 x double> %2119, i32 8
  %extract3406 = extractelement <16 x double> %2119, i32 9
  %extract3407 = extractelement <16 x double> %2119, i32 10
  %extract3408 = extractelement <16 x double> %2119, i32 11
  %extract3409 = extractelement <16 x double> %2119, i32 12
  %extract3410 = extractelement <16 x double> %2119, i32 13
  %extract3411 = extractelement <16 x double> %2119, i32 14
  %extract3412 = extractelement <16 x double> %2119, i32 15
  %2120 = tail call double @_Z4fmaxdd(double %extract3397, double 1.000000e-200) nounwind
  %2121 = tail call double @_Z4fmaxdd(double %extract3398, double 1.000000e-200) nounwind
  %2122 = tail call double @_Z4fmaxdd(double %extract3399, double 1.000000e-200) nounwind
  %2123 = tail call double @_Z4fmaxdd(double %extract3400, double 1.000000e-200) nounwind
  %2124 = tail call double @_Z4fmaxdd(double %extract3401, double 1.000000e-200) nounwind
  %2125 = tail call double @_Z4fmaxdd(double %extract3402, double 1.000000e-200) nounwind
  %2126 = tail call double @_Z4fmaxdd(double %extract3403, double 1.000000e-200) nounwind
  %2127 = tail call double @_Z4fmaxdd(double %extract3404, double 1.000000e-200) nounwind
  %2128 = tail call double @_Z4fmaxdd(double %extract3405, double 1.000000e-200) nounwind
  %2129 = tail call double @_Z4fmaxdd(double %extract3406, double 1.000000e-200) nounwind
  %2130 = tail call double @_Z4fmaxdd(double %extract3407, double 1.000000e-200) nounwind
  %2131 = tail call double @_Z4fmaxdd(double %extract3408, double 1.000000e-200) nounwind
  %2132 = tail call double @_Z4fmaxdd(double %extract3409, double 1.000000e-200) nounwind
  %2133 = tail call double @_Z4fmaxdd(double %extract3410, double 1.000000e-200) nounwind
  %2134 = tail call double @_Z4fmaxdd(double %extract3411, double 1.000000e-200) nounwind
  %2135 = tail call double @_Z4fmaxdd(double %extract3412, double 1.000000e-200) nounwind
  %2136 = tail call double @_Z5log10d(double %2120) nounwind
  %2137 = tail call double @_Z5log10d(double %2121) nounwind
  %2138 = tail call double @_Z5log10d(double %2122) nounwind
  %2139 = tail call double @_Z5log10d(double %2123) nounwind
  %2140 = tail call double @_Z5log10d(double %2124) nounwind
  %2141 = tail call double @_Z5log10d(double %2125) nounwind
  %2142 = tail call double @_Z5log10d(double %2126) nounwind
  %2143 = tail call double @_Z5log10d(double %2127) nounwind
  %2144 = tail call double @_Z5log10d(double %2128) nounwind
  %2145 = tail call double @_Z5log10d(double %2129) nounwind
  %2146 = tail call double @_Z5log10d(double %2130) nounwind
  %2147 = tail call double @_Z5log10d(double %2131) nounwind
  %2148 = tail call double @_Z5log10d(double %2132) nounwind
  %2149 = tail call double @_Z5log10d(double %2133) nounwind
  %2150 = tail call double @_Z5log10d(double %2134) nounwind
  %2151 = tail call double @_Z5log10d(double %2135) nounwind
  %temp.vect3413 = insertelement <16 x double> undef, double %2136, i32 0
  %temp.vect3414 = insertelement <16 x double> %temp.vect3413, double %2137, i32 1
  %temp.vect3415 = insertelement <16 x double> %temp.vect3414, double %2138, i32 2
  %temp.vect3416 = insertelement <16 x double> %temp.vect3415, double %2139, i32 3
  %temp.vect3417 = insertelement <16 x double> %temp.vect3416, double %2140, i32 4
  %temp.vect3418 = insertelement <16 x double> %temp.vect3417, double %2141, i32 5
  %temp.vect3419 = insertelement <16 x double> %temp.vect3418, double %2142, i32 6
  %temp.vect3420 = insertelement <16 x double> %temp.vect3419, double %2143, i32 7
  %temp.vect3421 = insertelement <16 x double> %temp.vect3420, double %2144, i32 8
  %temp.vect3422 = insertelement <16 x double> %temp.vect3421, double %2145, i32 9
  %temp.vect3423 = insertelement <16 x double> %temp.vect3422, double %2146, i32 10
  %temp.vect3424 = insertelement <16 x double> %temp.vect3423, double %2147, i32 11
  %temp.vect3425 = insertelement <16 x double> %temp.vect3424, double %2148, i32 12
  %temp.vect3426 = insertelement <16 x double> %temp.vect3425, double %2149, i32 13
  %temp.vect3427 = insertelement <16 x double> %temp.vect3426, double %2150, i32 14
  %temp.vect3428 = insertelement <16 x double> %temp.vect3427, double %2151, i32 15
  %2152 = fmul <16 x double> %temp.vect3428, <double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00>
  %2153 = fsub <16 x double> <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>, %2152
  %2154 = fmul <16 x double> %temp.vect3428, <double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01>
  %2155 = fadd <16 x double> %2154, <double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01>
  %2156 = fsub <16 x double> %temp.vect3444, %2155
  %2157 = fmul <16 x double> %2156, <double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01>
  %2158 = fsub <16 x double> %2153, %2157
  %2159 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2158
  %2160 = fmul <16 x double> %2156, %2159
  %2161 = fmul <16 x double> %2160, %2160
  %2162 = fadd <16 x double> %2161, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %2163 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2162
  %2164 = fmul <16 x double> %temp.vect3428, %2163
  %extract3445 = extractelement <16 x double> %2164, i32 0
  %extract3446 = extractelement <16 x double> %2164, i32 1
  %extract3447 = extractelement <16 x double> %2164, i32 2
  %extract3448 = extractelement <16 x double> %2164, i32 3
  %extract3449 = extractelement <16 x double> %2164, i32 4
  %extract3450 = extractelement <16 x double> %2164, i32 5
  %extract3451 = extractelement <16 x double> %2164, i32 6
  %extract3452 = extractelement <16 x double> %2164, i32 7
  %extract3453 = extractelement <16 x double> %2164, i32 8
  %extract3454 = extractelement <16 x double> %2164, i32 9
  %extract3455 = extractelement <16 x double> %2164, i32 10
  %extract3456 = extractelement <16 x double> %2164, i32 11
  %extract3457 = extractelement <16 x double> %2164, i32 12
  %extract3458 = extractelement <16 x double> %2164, i32 13
  %extract3459 = extractelement <16 x double> %2164, i32 14
  %extract3460 = extractelement <16 x double> %2164, i32 15
  %2165 = tail call double @_Z5exp10d(double %extract3445) nounwind
  %2166 = tail call double @_Z5exp10d(double %extract3446) nounwind
  %2167 = tail call double @_Z5exp10d(double %extract3447) nounwind
  %2168 = tail call double @_Z5exp10d(double %extract3448) nounwind
  %2169 = tail call double @_Z5exp10d(double %extract3449) nounwind
  %2170 = tail call double @_Z5exp10d(double %extract3450) nounwind
  %2171 = tail call double @_Z5exp10d(double %extract3451) nounwind
  %2172 = tail call double @_Z5exp10d(double %extract3452) nounwind
  %2173 = tail call double @_Z5exp10d(double %extract3453) nounwind
  %2174 = tail call double @_Z5exp10d(double %extract3454) nounwind
  %2175 = tail call double @_Z5exp10d(double %extract3455) nounwind
  %2176 = tail call double @_Z5exp10d(double %extract3456) nounwind
  %2177 = tail call double @_Z5exp10d(double %extract3457) nounwind
  %2178 = tail call double @_Z5exp10d(double %extract3458) nounwind
  %2179 = tail call double @_Z5exp10d(double %extract3459) nounwind
  %2180 = tail call double @_Z5exp10d(double %extract3460) nounwind
  %temp.vect3461 = insertelement <16 x double> undef, double %2165, i32 0
  %temp.vect3462 = insertelement <16 x double> %temp.vect3461, double %2166, i32 1
  %temp.vect3463 = insertelement <16 x double> %temp.vect3462, double %2167, i32 2
  %temp.vect3464 = insertelement <16 x double> %temp.vect3463, double %2168, i32 3
  %temp.vect3465 = insertelement <16 x double> %temp.vect3464, double %2169, i32 4
  %temp.vect3466 = insertelement <16 x double> %temp.vect3465, double %2170, i32 5
  %temp.vect3467 = insertelement <16 x double> %temp.vect3466, double %2171, i32 6
  %temp.vect3468 = insertelement <16 x double> %temp.vect3467, double %2172, i32 7
  %temp.vect3469 = insertelement <16 x double> %temp.vect3468, double %2173, i32 8
  %temp.vect3470 = insertelement <16 x double> %temp.vect3469, double %2174, i32 9
  %temp.vect3471 = insertelement <16 x double> %temp.vect3470, double %2175, i32 10
  %temp.vect3472 = insertelement <16 x double> %temp.vect3471, double %2176, i32 11
  %temp.vect3473 = insertelement <16 x double> %temp.vect3472, double %2177, i32 12
  %temp.vect3474 = insertelement <16 x double> %temp.vect3473, double %2178, i32 13
  %temp.vect3475 = insertelement <16 x double> %temp.vect3474, double %2179, i32 14
  %temp.vect3476 = insertelement <16 x double> %temp.vect3475, double %2180, i32 15
  %2181 = fmul <16 x double> %temp.vect3476, %2032
  %2182 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2183 = load i64* %2182, align 8
  %2184 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2185 = load i64* %2184, align 8
  %2186 = add i64 %2183, %2185
  %extract3479 = add i64 %2186, 10174464
  %2187 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3479
  %ptrTypeCast3495 = bitcast double addrspace(1)* %2187 to <16 x double> addrspace(1)*
  %2188 = load <16 x double> addrspace(1)* %ptrTypeCast3495, align 8
  %2189 = fmul <16 x double> %2188, %2181
  %2190 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2191 = load i64* %2190, align 8
  %2192 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2193 = load i64* %2192, align 8
  %2194 = add i64 %2191, %2193
  %extract3498 = add i64 %2194, 10174464
  %2195 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3498
  %ptrTypeCast3514 = bitcast double addrspace(1)* %2195 to <16 x double> addrspace(1)*
  store <16 x double> %2189, <16 x double> addrspace(1)* %ptrTypeCast3514, align 8
  %2196 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2197 = load i64* %2196, align 8
  %2198 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2199 = load i64* %2198, align 8
  %2200 = add i64 %2197, %2199
  %extract3517 = add i64 %2200, 10174464
  %2201 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract3517
  %ptrTypeCast3533 = bitcast double addrspace(1)* %2201 to <16 x double> addrspace(1)*
  %2202 = load <16 x double> addrspace(1)* %ptrTypeCast3533, align 8
  %2203 = fmul <16 x double> %2202, %2181
  %2204 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2205 = load i64* %2204, align 8
  %2206 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2207 = load i64* %2206, align 8
  %2208 = add i64 %2205, %2207
  %extract3536 = add i64 %2208, 10174464
  %2209 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract3536
  %ptrTypeCast3552 = bitcast double addrspace(1)* %2209 to <16 x double> addrspace(1)*
  store <16 x double> %2203, <16 x double> addrspace(1)* %ptrTypeCast3552, align 8
  %2210 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2211 = load i64* %2210, align 8
  %2212 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2213 = load i64* %2212, align 8
  %2214 = add i64 %2211, %2213
  %extract3555 = add i64 %2214, 1105920
  %2215 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %extract3555
  %ptrTypeCast3571 = bitcast double addrspace(1)* %2215 to <16 x double> addrspace(1)*
  %2216 = load <16 x double> addrspace(1)* %ptrTypeCast3571, align 8
  %2217 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2218 = load i64* %2217, align 8
  %2219 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2220 = load i64* %2219, align 8
  %2221 = add i64 %2218, %2220
  %extract3574 = add i64 %2221, 12496896
  %2222 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3574
  %ptrTypeCast3590 = bitcast double addrspace(1)* %2222 to <16 x double> addrspace(1)*
  %2223 = load <16 x double> addrspace(1)* %ptrTypeCast3590, align 8
  %2224 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2223
  %2225 = fmul <16 x double> %170, %2224
  %2226 = fmul <16 x double> %2216, %2225
  %2227 = fadd <16 x double> %2226, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %2228 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2227
  %2229 = fmul <16 x double> %2226, %2228
  %2230 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2231 = load i64* %2230, align 8
  %2232 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2233 = load i64* %2232, align 8
  %2234 = add i64 %2231, %2233
  %extract3593 = add i64 %2234, 12496896
  %2235 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3593
  %ptrTypeCast3609 = bitcast double addrspace(1)* %2235 to <16 x double> addrspace(1)*
  %2236 = load <16 x double> addrspace(1)* %ptrTypeCast3609, align 8
  %2237 = fmul <16 x double> %2236, %2229
  %2238 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2239 = load i64* %2238, align 8
  %2240 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2241 = load i64* %2240, align 8
  %2242 = add i64 %2239, %2241
  %extract3612 = add i64 %2242, 12496896
  %2243 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3612
  %ptrTypeCast3628 = bitcast double addrspace(1)* %2243 to <16 x double> addrspace(1)*
  store <16 x double> %2237, <16 x double> addrspace(1)* %ptrTypeCast3628, align 8
  %2244 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2245 = load i64* %2244, align 8
  %2246 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2247 = load i64* %2246, align 8
  %2248 = add i64 %2245, %2247
  %extract3631 = add i64 %2248, 12496896
  %2249 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract3631
  %ptrTypeCast3647 = bitcast double addrspace(1)* %2249 to <16 x double> addrspace(1)*
  %2250 = load <16 x double> addrspace(1)* %ptrTypeCast3647, align 8
  %2251 = fmul <16 x double> %2250, %2229
  %2252 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2253 = load i64* %2252, align 8
  %2254 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2255 = load i64* %2254, align 8
  %2256 = add i64 %2253, %2255
  %extract3650 = add i64 %2256, 12496896
  %2257 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract3650
  %ptrTypeCast3666 = bitcast double addrspace(1)* %2257 to <16 x double> addrspace(1)*
  store <16 x double> %2251, <16 x double> addrspace(1)* %ptrTypeCast3666, align 8
  %2258 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2259 = load i64* %2258, align 8
  %2260 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2261 = load i64* %2260, align 8
  %2262 = add i64 %2259, %2261
  %extract3669 = add i64 %2262, 1216512
  %2263 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %extract3669
  %ptrTypeCast3685 = bitcast double addrspace(1)* %2263 to <16 x double> addrspace(1)*
  %2264 = load <16 x double> addrspace(1)* %ptrTypeCast3685, align 8
  %2265 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2266 = load i64* %2265, align 8
  %2267 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2268 = load i64* %2267, align 8
  %2269 = add i64 %2266, %2268
  %extract3688 = add i64 %2269, 12607488
  %2270 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3688
  %ptrTypeCast3704 = bitcast double addrspace(1)* %2270 to <16 x double> addrspace(1)*
  %2271 = load <16 x double> addrspace(1)* %ptrTypeCast3704, align 8
  %2272 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2271
  %2273 = fmul <16 x double> %101, %2272
  %2274 = fmul <16 x double> %2264, %2273
  %extract3705 = extractelement <16 x double> %2274, i32 0
  %extract3706 = extractelement <16 x double> %2274, i32 1
  %extract3707 = extractelement <16 x double> %2274, i32 2
  %extract3708 = extractelement <16 x double> %2274, i32 3
  %extract3709 = extractelement <16 x double> %2274, i32 4
  %extract3710 = extractelement <16 x double> %2274, i32 5
  %extract3711 = extractelement <16 x double> %2274, i32 6
  %extract3712 = extractelement <16 x double> %2274, i32 7
  %extract3713 = extractelement <16 x double> %2274, i32 8
  %extract3714 = extractelement <16 x double> %2274, i32 9
  %extract3715 = extractelement <16 x double> %2274, i32 10
  %extract3716 = extractelement <16 x double> %2274, i32 11
  %extract3717 = extractelement <16 x double> %2274, i32 12
  %extract3718 = extractelement <16 x double> %2274, i32 13
  %extract3719 = extractelement <16 x double> %2274, i32 14
  %extract3720 = extractelement <16 x double> %2274, i32 15
  %2275 = fadd <16 x double> %2274, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %2276 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2275
  %2277 = fmul <16 x double> %2274, %2276
  %2278 = tail call double @_Z4fmaxdd(double %extract3705, double 1.000000e-200) nounwind
  %2279 = tail call double @_Z4fmaxdd(double %extract3706, double 1.000000e-200) nounwind
  %2280 = tail call double @_Z4fmaxdd(double %extract3707, double 1.000000e-200) nounwind
  %2281 = tail call double @_Z4fmaxdd(double %extract3708, double 1.000000e-200) nounwind
  %2282 = tail call double @_Z4fmaxdd(double %extract3709, double 1.000000e-200) nounwind
  %2283 = tail call double @_Z4fmaxdd(double %extract3710, double 1.000000e-200) nounwind
  %2284 = tail call double @_Z4fmaxdd(double %extract3711, double 1.000000e-200) nounwind
  %2285 = tail call double @_Z4fmaxdd(double %extract3712, double 1.000000e-200) nounwind
  %2286 = tail call double @_Z4fmaxdd(double %extract3713, double 1.000000e-200) nounwind
  %2287 = tail call double @_Z4fmaxdd(double %extract3714, double 1.000000e-200) nounwind
  %2288 = tail call double @_Z4fmaxdd(double %extract3715, double 1.000000e-200) nounwind
  %2289 = tail call double @_Z4fmaxdd(double %extract3716, double 1.000000e-200) nounwind
  %2290 = tail call double @_Z4fmaxdd(double %extract3717, double 1.000000e-200) nounwind
  %2291 = tail call double @_Z4fmaxdd(double %extract3718, double 1.000000e-200) nounwind
  %2292 = tail call double @_Z4fmaxdd(double %extract3719, double 1.000000e-200) nounwind
  %2293 = tail call double @_Z4fmaxdd(double %extract3720, double 1.000000e-200) nounwind
  %2294 = tail call double @_Z5log10d(double %2278) nounwind
  %2295 = tail call double @_Z5log10d(double %2279) nounwind
  %2296 = tail call double @_Z5log10d(double %2280) nounwind
  %2297 = tail call double @_Z5log10d(double %2281) nounwind
  %2298 = tail call double @_Z5log10d(double %2282) nounwind
  %2299 = tail call double @_Z5log10d(double %2283) nounwind
  %2300 = tail call double @_Z5log10d(double %2284) nounwind
  %2301 = tail call double @_Z5log10d(double %2285) nounwind
  %2302 = tail call double @_Z5log10d(double %2286) nounwind
  %2303 = tail call double @_Z5log10d(double %2287) nounwind
  %2304 = tail call double @_Z5log10d(double %2288) nounwind
  %2305 = tail call double @_Z5log10d(double %2289) nounwind
  %2306 = tail call double @_Z5log10d(double %2290) nounwind
  %2307 = tail call double @_Z5log10d(double %2291) nounwind
  %2308 = tail call double @_Z5log10d(double %2292) nounwind
  %2309 = tail call double @_Z5log10d(double %2293) nounwind
  %temp.vect3849 = insertelement <16 x double> undef, double %2294, i32 0
  %temp.vect3850 = insertelement <16 x double> %temp.vect3849, double %2295, i32 1
  %temp.vect3851 = insertelement <16 x double> %temp.vect3850, double %2296, i32 2
  %temp.vect3852 = insertelement <16 x double> %temp.vect3851, double %2297, i32 3
  %temp.vect3853 = insertelement <16 x double> %temp.vect3852, double %2298, i32 4
  %temp.vect3854 = insertelement <16 x double> %temp.vect3853, double %2299, i32 5
  %temp.vect3855 = insertelement <16 x double> %temp.vect3854, double %2300, i32 6
  %temp.vect3856 = insertelement <16 x double> %temp.vect3855, double %2301, i32 7
  %temp.vect3857 = insertelement <16 x double> %temp.vect3856, double %2302, i32 8
  %temp.vect3858 = insertelement <16 x double> %temp.vect3857, double %2303, i32 9
  %temp.vect3859 = insertelement <16 x double> %temp.vect3858, double %2304, i32 10
  %temp.vect3860 = insertelement <16 x double> %temp.vect3859, double %2305, i32 11
  %temp.vect3861 = insertelement <16 x double> %temp.vect3860, double %2306, i32 12
  %temp.vect3862 = insertelement <16 x double> %temp.vect3861, double %2307, i32 13
  %temp.vect3863 = insertelement <16 x double> %temp.vect3862, double %2308, i32 14
  %temp.vect3864 = insertelement <16 x double> %temp.vect3863, double %2309, i32 15
  %2310 = fmul <16 x double> %7, <double 0xBF285898CF48B83B, double 0xBF285898CF48B83B, double 0xBF285898CF48B83B, double 0xBF285898CF48B83B, double 0xBF285898CF48B83B, double 0xBF285898CF48B83B, double 0xBF285898CF48B83B, double 0xBF285898CF48B83B, double 0xBF285898CF48B83B, double 0xBF285898CF48B83B, double 0xBF285898CF48B83B, double 0xBF285898CF48B83B, double 0xBF285898CF48B83B, double 0xBF285898CF48B83B, double 0xBF285898CF48B83B, double 0xBF285898CF48B83B>
  %extract3721 = extractelement <16 x double> %2310, i32 0
  %extract3722 = extractelement <16 x double> %2310, i32 1
  %extract3723 = extractelement <16 x double> %2310, i32 2
  %extract3724 = extractelement <16 x double> %2310, i32 3
  %extract3725 = extractelement <16 x double> %2310, i32 4
  %extract3726 = extractelement <16 x double> %2310, i32 5
  %extract3727 = extractelement <16 x double> %2310, i32 6
  %extract3728 = extractelement <16 x double> %2310, i32 7
  %extract3729 = extractelement <16 x double> %2310, i32 8
  %extract3730 = extractelement <16 x double> %2310, i32 9
  %extract3731 = extractelement <16 x double> %2310, i32 10
  %extract3732 = extractelement <16 x double> %2310, i32 11
  %extract3733 = extractelement <16 x double> %2310, i32 12
  %extract3734 = extractelement <16 x double> %2310, i32 13
  %extract3735 = extractelement <16 x double> %2310, i32 14
  %extract3736 = extractelement <16 x double> %2310, i32 15
  %2311 = tail call double @_Z3expd(double %extract3721) nounwind
  %2312 = tail call double @_Z3expd(double %extract3722) nounwind
  %2313 = tail call double @_Z3expd(double %extract3723) nounwind
  %2314 = tail call double @_Z3expd(double %extract3724) nounwind
  %2315 = tail call double @_Z3expd(double %extract3725) nounwind
  %2316 = tail call double @_Z3expd(double %extract3726) nounwind
  %2317 = tail call double @_Z3expd(double %extract3727) nounwind
  %2318 = tail call double @_Z3expd(double %extract3728) nounwind
  %2319 = tail call double @_Z3expd(double %extract3729) nounwind
  %2320 = tail call double @_Z3expd(double %extract3730) nounwind
  %2321 = tail call double @_Z3expd(double %extract3731) nounwind
  %2322 = tail call double @_Z3expd(double %extract3732) nounwind
  %2323 = tail call double @_Z3expd(double %extract3733) nounwind
  %2324 = tail call double @_Z3expd(double %extract3734) nounwind
  %2325 = tail call double @_Z3expd(double %extract3735) nounwind
  %2326 = tail call double @_Z3expd(double %extract3736) nounwind
  %temp.vect3737 = insertelement <16 x double> undef, double %2311, i32 0
  %temp.vect3738 = insertelement <16 x double> %temp.vect3737, double %2312, i32 1
  %temp.vect3739 = insertelement <16 x double> %temp.vect3738, double %2313, i32 2
  %temp.vect3740 = insertelement <16 x double> %temp.vect3739, double %2314, i32 3
  %temp.vect3741 = insertelement <16 x double> %temp.vect3740, double %2315, i32 4
  %temp.vect3742 = insertelement <16 x double> %temp.vect3741, double %2316, i32 5
  %temp.vect3743 = insertelement <16 x double> %temp.vect3742, double %2317, i32 6
  %temp.vect3744 = insertelement <16 x double> %temp.vect3743, double %2318, i32 7
  %temp.vect3745 = insertelement <16 x double> %temp.vect3744, double %2319, i32 8
  %temp.vect3746 = insertelement <16 x double> %temp.vect3745, double %2320, i32 9
  %temp.vect3747 = insertelement <16 x double> %temp.vect3746, double %2321, i32 10
  %temp.vect3748 = insertelement <16 x double> %temp.vect3747, double %2322, i32 11
  %temp.vect3749 = insertelement <16 x double> %temp.vect3748, double %2323, i32 12
  %temp.vect3750 = insertelement <16 x double> %temp.vect3749, double %2324, i32 13
  %temp.vect3751 = insertelement <16 x double> %temp.vect3750, double %2325, i32 14
  %temp.vect3752 = insertelement <16 x double> %temp.vect3751, double %2326, i32 15
  %2327 = fmul <16 x double> %temp.vect3752, <double -9.816000e-01, double -9.816000e-01, double -9.816000e-01, double -9.816000e-01, double -9.816000e-01, double -9.816000e-01, double -9.816000e-01, double -9.816000e-01, double -9.816000e-01, double -9.816000e-01, double -9.816000e-01, double -9.816000e-01, double -9.816000e-01, double -9.816000e-01, double -9.816000e-01, double -9.816000e-01>
  %2328 = fmul <16 x double> %7, <double 0xBFCDD08901068F29, double 0xBFCDD08901068F29, double 0xBFCDD08901068F29, double 0xBFCDD08901068F29, double 0xBFCDD08901068F29, double 0xBFCDD08901068F29, double 0xBFCDD08901068F29, double 0xBFCDD08901068F29, double 0xBFCDD08901068F29, double 0xBFCDD08901068F29, double 0xBFCDD08901068F29, double 0xBFCDD08901068F29, double 0xBFCDD08901068F29, double 0xBFCDD08901068F29, double 0xBFCDD08901068F29, double 0xBFCDD08901068F29>
  %extract3753 = extractelement <16 x double> %2328, i32 0
  %extract3754 = extractelement <16 x double> %2328, i32 1
  %extract3755 = extractelement <16 x double> %2328, i32 2
  %extract3756 = extractelement <16 x double> %2328, i32 3
  %extract3757 = extractelement <16 x double> %2328, i32 4
  %extract3758 = extractelement <16 x double> %2328, i32 5
  %extract3759 = extractelement <16 x double> %2328, i32 6
  %extract3760 = extractelement <16 x double> %2328, i32 7
  %extract3761 = extractelement <16 x double> %2328, i32 8
  %extract3762 = extractelement <16 x double> %2328, i32 9
  %extract3763 = extractelement <16 x double> %2328, i32 10
  %extract3764 = extractelement <16 x double> %2328, i32 11
  %extract3765 = extractelement <16 x double> %2328, i32 12
  %extract3766 = extractelement <16 x double> %2328, i32 13
  %extract3767 = extractelement <16 x double> %2328, i32 14
  %extract3768 = extractelement <16 x double> %2328, i32 15
  %2329 = tail call double @_Z3expd(double %extract3753) nounwind
  %2330 = tail call double @_Z3expd(double %extract3754) nounwind
  %2331 = tail call double @_Z3expd(double %extract3755) nounwind
  %2332 = tail call double @_Z3expd(double %extract3756) nounwind
  %2333 = tail call double @_Z3expd(double %extract3757) nounwind
  %2334 = tail call double @_Z3expd(double %extract3758) nounwind
  %2335 = tail call double @_Z3expd(double %extract3759) nounwind
  %2336 = tail call double @_Z3expd(double %extract3760) nounwind
  %2337 = tail call double @_Z3expd(double %extract3761) nounwind
  %2338 = tail call double @_Z3expd(double %extract3762) nounwind
  %2339 = tail call double @_Z3expd(double %extract3763) nounwind
  %2340 = tail call double @_Z3expd(double %extract3764) nounwind
  %2341 = tail call double @_Z3expd(double %extract3765) nounwind
  %2342 = tail call double @_Z3expd(double %extract3766) nounwind
  %2343 = tail call double @_Z3expd(double %extract3767) nounwind
  %2344 = tail call double @_Z3expd(double %extract3768) nounwind
  %temp.vect3769 = insertelement <16 x double> undef, double %2329, i32 0
  %temp.vect3770 = insertelement <16 x double> %temp.vect3769, double %2330, i32 1
  %temp.vect3771 = insertelement <16 x double> %temp.vect3770, double %2331, i32 2
  %temp.vect3772 = insertelement <16 x double> %temp.vect3771, double %2332, i32 3
  %temp.vect3773 = insertelement <16 x double> %temp.vect3772, double %2333, i32 4
  %temp.vect3774 = insertelement <16 x double> %temp.vect3773, double %2334, i32 5
  %temp.vect3775 = insertelement <16 x double> %temp.vect3774, double %2335, i32 6
  %temp.vect3776 = insertelement <16 x double> %temp.vect3775, double %2336, i32 7
  %temp.vect3777 = insertelement <16 x double> %temp.vect3776, double %2337, i32 8
  %temp.vect3778 = insertelement <16 x double> %temp.vect3777, double %2338, i32 9
  %temp.vect3779 = insertelement <16 x double> %temp.vect3778, double %2339, i32 10
  %temp.vect3780 = insertelement <16 x double> %temp.vect3779, double %2340, i32 11
  %temp.vect3781 = insertelement <16 x double> %temp.vect3780, double %2341, i32 12
  %temp.vect3782 = insertelement <16 x double> %temp.vect3781, double %2342, i32 13
  %temp.vect3783 = insertelement <16 x double> %temp.vect3782, double %2343, i32 14
  %temp.vect3784 = insertelement <16 x double> %temp.vect3783, double %2344, i32 15
  %2345 = fmul <16 x double> %temp.vect3784, <double 1.981600e+00, double 1.981600e+00, double 1.981600e+00, double 1.981600e+00, double 1.981600e+00, double 1.981600e+00, double 1.981600e+00, double 1.981600e+00, double 1.981600e+00, double 1.981600e+00, double 1.981600e+00, double 1.981600e+00, double 1.981600e+00, double 1.981600e+00, double 1.981600e+00, double 1.981600e+00>
  %2346 = fadd <16 x double> %2327, %2345
  %2347 = fmul <16 x double> %329, <double 7.950000e-02, double 7.950000e-02, double 7.950000e-02, double 7.950000e-02, double 7.950000e-02, double 7.950000e-02, double 7.950000e-02, double 7.950000e-02, double 7.950000e-02, double 7.950000e-02, double 7.950000e-02, double 7.950000e-02, double 7.950000e-02, double 7.950000e-02, double 7.950000e-02, double 7.950000e-02>
  %extract3785 = extractelement <16 x double> %2347, i32 0
  %extract3786 = extractelement <16 x double> %2347, i32 1
  %extract3787 = extractelement <16 x double> %2347, i32 2
  %extract3788 = extractelement <16 x double> %2347, i32 3
  %extract3789 = extractelement <16 x double> %2347, i32 4
  %extract3790 = extractelement <16 x double> %2347, i32 5
  %extract3791 = extractelement <16 x double> %2347, i32 6
  %extract3792 = extractelement <16 x double> %2347, i32 7
  %extract3793 = extractelement <16 x double> %2347, i32 8
  %extract3794 = extractelement <16 x double> %2347, i32 9
  %extract3795 = extractelement <16 x double> %2347, i32 10
  %extract3796 = extractelement <16 x double> %2347, i32 11
  %extract3797 = extractelement <16 x double> %2347, i32 12
  %extract3798 = extractelement <16 x double> %2347, i32 13
  %extract3799 = extractelement <16 x double> %2347, i32 14
  %extract3800 = extractelement <16 x double> %2347, i32 15
  %2348 = tail call double @_Z3expd(double %extract3785) nounwind
  %2349 = tail call double @_Z3expd(double %extract3786) nounwind
  %2350 = tail call double @_Z3expd(double %extract3787) nounwind
  %2351 = tail call double @_Z3expd(double %extract3788) nounwind
  %2352 = tail call double @_Z3expd(double %extract3789) nounwind
  %2353 = tail call double @_Z3expd(double %extract3790) nounwind
  %2354 = tail call double @_Z3expd(double %extract3791) nounwind
  %2355 = tail call double @_Z3expd(double %extract3792) nounwind
  %2356 = tail call double @_Z3expd(double %extract3793) nounwind
  %2357 = tail call double @_Z3expd(double %extract3794) nounwind
  %2358 = tail call double @_Z3expd(double %extract3795) nounwind
  %2359 = tail call double @_Z3expd(double %extract3796) nounwind
  %2360 = tail call double @_Z3expd(double %extract3797) nounwind
  %2361 = tail call double @_Z3expd(double %extract3798) nounwind
  %2362 = tail call double @_Z3expd(double %extract3799) nounwind
  %2363 = tail call double @_Z3expd(double %extract3800) nounwind
  %temp.vect3801 = insertelement <16 x double> undef, double %2348, i32 0
  %temp.vect3802 = insertelement <16 x double> %temp.vect3801, double %2349, i32 1
  %temp.vect3803 = insertelement <16 x double> %temp.vect3802, double %2350, i32 2
  %temp.vect3804 = insertelement <16 x double> %temp.vect3803, double %2351, i32 3
  %temp.vect3805 = insertelement <16 x double> %temp.vect3804, double %2352, i32 4
  %temp.vect3806 = insertelement <16 x double> %temp.vect3805, double %2353, i32 5
  %temp.vect3807 = insertelement <16 x double> %temp.vect3806, double %2354, i32 6
  %temp.vect3808 = insertelement <16 x double> %temp.vect3807, double %2355, i32 7
  %temp.vect3809 = insertelement <16 x double> %temp.vect3808, double %2356, i32 8
  %temp.vect3810 = insertelement <16 x double> %temp.vect3809, double %2357, i32 9
  %temp.vect3811 = insertelement <16 x double> %temp.vect3810, double %2358, i32 10
  %temp.vect3812 = insertelement <16 x double> %temp.vect3811, double %2359, i32 11
  %temp.vect3813 = insertelement <16 x double> %temp.vect3812, double %2360, i32 12
  %temp.vect3814 = insertelement <16 x double> %temp.vect3813, double %2361, i32 13
  %temp.vect3815 = insertelement <16 x double> %temp.vect3814, double %2362, i32 14
  %temp.vect3816 = insertelement <16 x double> %temp.vect3815, double %2363, i32 15
  %2364 = fadd <16 x double> %2346, %temp.vect3816
  %extract3817 = extractelement <16 x double> %2364, i32 0
  %extract3818 = extractelement <16 x double> %2364, i32 1
  %extract3819 = extractelement <16 x double> %2364, i32 2
  %extract3820 = extractelement <16 x double> %2364, i32 3
  %extract3821 = extractelement <16 x double> %2364, i32 4
  %extract3822 = extractelement <16 x double> %2364, i32 5
  %extract3823 = extractelement <16 x double> %2364, i32 6
  %extract3824 = extractelement <16 x double> %2364, i32 7
  %extract3825 = extractelement <16 x double> %2364, i32 8
  %extract3826 = extractelement <16 x double> %2364, i32 9
  %extract3827 = extractelement <16 x double> %2364, i32 10
  %extract3828 = extractelement <16 x double> %2364, i32 11
  %extract3829 = extractelement <16 x double> %2364, i32 12
  %extract3830 = extractelement <16 x double> %2364, i32 13
  %extract3831 = extractelement <16 x double> %2364, i32 14
  %extract3832 = extractelement <16 x double> %2364, i32 15
  %2365 = tail call double @_Z4fmaxdd(double %extract3817, double 1.000000e-200) nounwind
  %2366 = tail call double @_Z4fmaxdd(double %extract3818, double 1.000000e-200) nounwind
  %2367 = tail call double @_Z4fmaxdd(double %extract3819, double 1.000000e-200) nounwind
  %2368 = tail call double @_Z4fmaxdd(double %extract3820, double 1.000000e-200) nounwind
  %2369 = tail call double @_Z4fmaxdd(double %extract3821, double 1.000000e-200) nounwind
  %2370 = tail call double @_Z4fmaxdd(double %extract3822, double 1.000000e-200) nounwind
  %2371 = tail call double @_Z4fmaxdd(double %extract3823, double 1.000000e-200) nounwind
  %2372 = tail call double @_Z4fmaxdd(double %extract3824, double 1.000000e-200) nounwind
  %2373 = tail call double @_Z4fmaxdd(double %extract3825, double 1.000000e-200) nounwind
  %2374 = tail call double @_Z4fmaxdd(double %extract3826, double 1.000000e-200) nounwind
  %2375 = tail call double @_Z4fmaxdd(double %extract3827, double 1.000000e-200) nounwind
  %2376 = tail call double @_Z4fmaxdd(double %extract3828, double 1.000000e-200) nounwind
  %2377 = tail call double @_Z4fmaxdd(double %extract3829, double 1.000000e-200) nounwind
  %2378 = tail call double @_Z4fmaxdd(double %extract3830, double 1.000000e-200) nounwind
  %2379 = tail call double @_Z4fmaxdd(double %extract3831, double 1.000000e-200) nounwind
  %2380 = tail call double @_Z4fmaxdd(double %extract3832, double 1.000000e-200) nounwind
  %2381 = tail call double @_Z5log10d(double %2365) nounwind
  %2382 = tail call double @_Z5log10d(double %2366) nounwind
  %2383 = tail call double @_Z5log10d(double %2367) nounwind
  %2384 = tail call double @_Z5log10d(double %2368) nounwind
  %2385 = tail call double @_Z5log10d(double %2369) nounwind
  %2386 = tail call double @_Z5log10d(double %2370) nounwind
  %2387 = tail call double @_Z5log10d(double %2371) nounwind
  %2388 = tail call double @_Z5log10d(double %2372) nounwind
  %2389 = tail call double @_Z5log10d(double %2373) nounwind
  %2390 = tail call double @_Z5log10d(double %2374) nounwind
  %2391 = tail call double @_Z5log10d(double %2375) nounwind
  %2392 = tail call double @_Z5log10d(double %2376) nounwind
  %2393 = tail call double @_Z5log10d(double %2377) nounwind
  %2394 = tail call double @_Z5log10d(double %2378) nounwind
  %2395 = tail call double @_Z5log10d(double %2379) nounwind
  %2396 = tail call double @_Z5log10d(double %2380) nounwind
  %temp.vect3833 = insertelement <16 x double> undef, double %2381, i32 0
  %temp.vect3834 = insertelement <16 x double> %temp.vect3833, double %2382, i32 1
  %temp.vect3835 = insertelement <16 x double> %temp.vect3834, double %2383, i32 2
  %temp.vect3836 = insertelement <16 x double> %temp.vect3835, double %2384, i32 3
  %temp.vect3837 = insertelement <16 x double> %temp.vect3836, double %2385, i32 4
  %temp.vect3838 = insertelement <16 x double> %temp.vect3837, double %2386, i32 5
  %temp.vect3839 = insertelement <16 x double> %temp.vect3838, double %2387, i32 6
  %temp.vect3840 = insertelement <16 x double> %temp.vect3839, double %2388, i32 7
  %temp.vect3841 = insertelement <16 x double> %temp.vect3840, double %2389, i32 8
  %temp.vect3842 = insertelement <16 x double> %temp.vect3841, double %2390, i32 9
  %temp.vect3843 = insertelement <16 x double> %temp.vect3842, double %2391, i32 10
  %temp.vect3844 = insertelement <16 x double> %temp.vect3843, double %2392, i32 11
  %temp.vect3845 = insertelement <16 x double> %temp.vect3844, double %2393, i32 12
  %temp.vect3846 = insertelement <16 x double> %temp.vect3845, double %2394, i32 13
  %temp.vect3847 = insertelement <16 x double> %temp.vect3846, double %2395, i32 14
  %temp.vect3848 = insertelement <16 x double> %temp.vect3847, double %2396, i32 15
  %2397 = fmul <16 x double> %temp.vect3848, <double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00>
  %2398 = fsub <16 x double> <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>, %2397
  %2399 = fmul <16 x double> %temp.vect3848, <double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01>
  %2400 = fadd <16 x double> %2399, <double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01>
  %2401 = fsub <16 x double> %temp.vect3864, %2400
  %2402 = fmul <16 x double> %2401, <double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01>
  %2403 = fsub <16 x double> %2398, %2402
  %2404 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2403
  %2405 = fmul <16 x double> %2401, %2404
  %2406 = fmul <16 x double> %2405, %2405
  %2407 = fadd <16 x double> %2406, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %2408 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2407
  %2409 = fmul <16 x double> %temp.vect3848, %2408
  %extract3865 = extractelement <16 x double> %2409, i32 0
  %extract3866 = extractelement <16 x double> %2409, i32 1
  %extract3867 = extractelement <16 x double> %2409, i32 2
  %extract3868 = extractelement <16 x double> %2409, i32 3
  %extract3869 = extractelement <16 x double> %2409, i32 4
  %extract3870 = extractelement <16 x double> %2409, i32 5
  %extract3871 = extractelement <16 x double> %2409, i32 6
  %extract3872 = extractelement <16 x double> %2409, i32 7
  %extract3873 = extractelement <16 x double> %2409, i32 8
  %extract3874 = extractelement <16 x double> %2409, i32 9
  %extract3875 = extractelement <16 x double> %2409, i32 10
  %extract3876 = extractelement <16 x double> %2409, i32 11
  %extract3877 = extractelement <16 x double> %2409, i32 12
  %extract3878 = extractelement <16 x double> %2409, i32 13
  %extract3879 = extractelement <16 x double> %2409, i32 14
  %extract3880 = extractelement <16 x double> %2409, i32 15
  %2410 = tail call double @_Z5exp10d(double %extract3865) nounwind
  %2411 = tail call double @_Z5exp10d(double %extract3866) nounwind
  %2412 = tail call double @_Z5exp10d(double %extract3867) nounwind
  %2413 = tail call double @_Z5exp10d(double %extract3868) nounwind
  %2414 = tail call double @_Z5exp10d(double %extract3869) nounwind
  %2415 = tail call double @_Z5exp10d(double %extract3870) nounwind
  %2416 = tail call double @_Z5exp10d(double %extract3871) nounwind
  %2417 = tail call double @_Z5exp10d(double %extract3872) nounwind
  %2418 = tail call double @_Z5exp10d(double %extract3873) nounwind
  %2419 = tail call double @_Z5exp10d(double %extract3874) nounwind
  %2420 = tail call double @_Z5exp10d(double %extract3875) nounwind
  %2421 = tail call double @_Z5exp10d(double %extract3876) nounwind
  %2422 = tail call double @_Z5exp10d(double %extract3877) nounwind
  %2423 = tail call double @_Z5exp10d(double %extract3878) nounwind
  %2424 = tail call double @_Z5exp10d(double %extract3879) nounwind
  %2425 = tail call double @_Z5exp10d(double %extract3880) nounwind
  %temp.vect3881 = insertelement <16 x double> undef, double %2410, i32 0
  %temp.vect3882 = insertelement <16 x double> %temp.vect3881, double %2411, i32 1
  %temp.vect3883 = insertelement <16 x double> %temp.vect3882, double %2412, i32 2
  %temp.vect3884 = insertelement <16 x double> %temp.vect3883, double %2413, i32 3
  %temp.vect3885 = insertelement <16 x double> %temp.vect3884, double %2414, i32 4
  %temp.vect3886 = insertelement <16 x double> %temp.vect3885, double %2415, i32 5
  %temp.vect3887 = insertelement <16 x double> %temp.vect3886, double %2416, i32 6
  %temp.vect3888 = insertelement <16 x double> %temp.vect3887, double %2417, i32 7
  %temp.vect3889 = insertelement <16 x double> %temp.vect3888, double %2418, i32 8
  %temp.vect3890 = insertelement <16 x double> %temp.vect3889, double %2419, i32 9
  %temp.vect3891 = insertelement <16 x double> %temp.vect3890, double %2420, i32 10
  %temp.vect3892 = insertelement <16 x double> %temp.vect3891, double %2421, i32 11
  %temp.vect3893 = insertelement <16 x double> %temp.vect3892, double %2422, i32 12
  %temp.vect3894 = insertelement <16 x double> %temp.vect3893, double %2423, i32 13
  %temp.vect3895 = insertelement <16 x double> %temp.vect3894, double %2424, i32 14
  %temp.vect3896 = insertelement <16 x double> %temp.vect3895, double %2425, i32 15
  %2426 = fmul <16 x double> %temp.vect3896, %2277
  %2427 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2428 = load i64* %2427, align 8
  %2429 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2430 = load i64* %2429, align 8
  %2431 = add i64 %2428, %2430
  %extract3899 = add i64 %2431, 12607488
  %2432 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3899
  %ptrTypeCast3915 = bitcast double addrspace(1)* %2432 to <16 x double> addrspace(1)*
  %2433 = load <16 x double> addrspace(1)* %ptrTypeCast3915, align 8
  %2434 = fmul <16 x double> %2433, %2426
  %2435 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2436 = load i64* %2435, align 8
  %2437 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2438 = load i64* %2437, align 8
  %2439 = add i64 %2436, %2438
  %extract3918 = add i64 %2439, 12607488
  %2440 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3918
  %ptrTypeCast3934 = bitcast double addrspace(1)* %2440 to <16 x double> addrspace(1)*
  store <16 x double> %2434, <16 x double> addrspace(1)* %ptrTypeCast3934, align 8
  %2441 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2442 = load i64* %2441, align 8
  %2443 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2444 = load i64* %2443, align 8
  %2445 = add i64 %2442, %2444
  %extract3937 = add i64 %2445, 12607488
  %2446 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract3937
  %ptrTypeCast3953 = bitcast double addrspace(1)* %2446 to <16 x double> addrspace(1)*
  %2447 = load <16 x double> addrspace(1)* %ptrTypeCast3953, align 8
  %2448 = fmul <16 x double> %2447, %2426
  %2449 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2450 = load i64* %2449, align 8
  %2451 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2452 = load i64* %2451, align 8
  %2453 = add i64 %2450, %2452
  %extract3956 = add i64 %2453, 12607488
  %2454 = getelementptr inbounds double addrspace(1)* %RB, i64 %extract3956
  %ptrTypeCast3972 = bitcast double addrspace(1)* %2454 to <16 x double> addrspace(1)*
  store <16 x double> %2448, <16 x double> addrspace(1)* %ptrTypeCast3972, align 8
  %check.WI.iter = icmp ult i64 %CurrWI..0, %iterCount
  br i1 %check.WI.iter, label %thenBB, label %SyncBB3973

thenBB:                                           ; preds = %._crit_edge
  %"CurrWI++" = add nuw i64 %CurrWI..0, 1
  br label %SyncBB

SyncBB3973:                                       ; preds = %._crit_edge
  ret void
}

define void @ratx_kernel(i8* %pBuffer) {
entry:
  %0 = bitcast i8* %pBuffer to double addrspace(1)**
  %1 = load double addrspace(1)** %0, align 8
  %2 = getelementptr i8* %pBuffer, i64 8
  %3 = bitcast i8* %2 to double addrspace(1)**
  %4 = load double addrspace(1)** %3, align 8
  %5 = getelementptr i8* %pBuffer, i64 16
  %6 = bitcast i8* %5 to double addrspace(1)**
  %7 = load double addrspace(1)** %6, align 8
  %8 = getelementptr i8* %pBuffer, i64 24
  %9 = bitcast i8* %8 to double addrspace(1)**
  %10 = load double addrspace(1)** %9, align 8
  %11 = getelementptr i8* %pBuffer, i64 32
  %12 = bitcast i8* %11 to double addrspace(1)**
  %13 = load double addrspace(1)** %12, align 8
  %14 = getelementptr i8* %pBuffer, i64 40
  %15 = bitcast i8* %14 to double*
  %16 = load double* %15, align 8
  %17 = getelementptr i8* %pBuffer, i64 72
  %18 = bitcast i8* %17 to %struct.PaddedDimId**
  %19 = load %struct.PaddedDimId** %18, align 8
  %20 = getelementptr i8* %pBuffer, i64 80
  %21 = bitcast i8* %20 to %struct.PaddedDimId**
  %22 = load %struct.PaddedDimId** %21, align 8
  %23 = getelementptr i8* %pBuffer, i64 96
  %24 = bitcast i8* %23 to i64*
  %25 = load i64* %24, align 8
  br label %SyncBB.i

SyncBB.i:                                         ; preds = %thenBB.i, %entry
  %CurrWI..0.i = phi i64 [ %"CurrWI++.i", %thenBB.i ], [ 0, %entry ]
  %26 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %27 = load i64* %26, align 8
  %28 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %29 = load i64* %28, align 8
  %30 = add i64 %27, %29
  %31 = getelementptr inbounds double addrspace(1)* %1, i64 %30
  %32 = load double addrspace(1)* %31, align 8
  %33 = fmul double %32, %16
  %34 = call double @_Z3logd(double %33) nounwind
  br label %35

; <label>:35                                      ; preds = %35, %SyncBB.i
  %indvar.i = phi i64 [ 0, %SyncBB.i ], [ %indvar.next.i, %35 ]
  %CTOT.01.i = phi double [ 0.000000e+00, %SyncBB.i ], [ %43, %35 ]
  %tmp3.i = mul i64 %indvar.i, 110592
  %36 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %37 = load i64* %36, align 8
  %38 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %39 = load i64* %38, align 8
  %40 = add i64 %37, %39
  %tmp4.i = add i64 %40, %tmp3.i
  %41 = getelementptr inbounds double addrspace(1)* %4, i64 %tmp4.i
  %42 = load double addrspace(1)* %41, align 8
  %43 = fadd double %CTOT.01.i, %42
  %indvar.next.i = add i64 %indvar.i, 1
  %exitcond.i = icmp eq i64 %indvar.next.i, 22
  br i1 %exitcond.i, label %._crit_edge.i, label %35

._crit_edge.i:                                    ; preds = %35
  %44 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %45 = load i64* %44, align 8
  %46 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %47 = load i64* %46, align 8
  %48 = add i64 %45, %47
  %49 = getelementptr inbounds double addrspace(1)* %4, i64 %48
  %50 = load double addrspace(1)* %49, align 8
  %51 = fadd double %43, %50
  %52 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %53 = load i64* %52, align 8
  %54 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %55 = load i64* %54, align 8
  %56 = add i64 %53, %55
  %57 = add i64 %56, 552960
  %58 = getelementptr inbounds double addrspace(1)* %4, i64 %57
  %59 = load double addrspace(1)* %58, align 8
  %60 = fmul double %59, 5.000000e+00
  %61 = fadd double %51, %60
  %62 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %63 = load i64* %62, align 8
  %64 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %65 = load i64* %64, align 8
  %66 = add i64 %63, %65
  %67 = add i64 %66, 995328
  %68 = getelementptr inbounds double addrspace(1)* %4, i64 %67
  %69 = load double addrspace(1)* %68, align 8
  %70 = fadd double %61, %69
  %71 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %72 = load i64* %71, align 8
  %73 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %74 = load i64* %73, align 8
  %75 = add i64 %72, %74
  %76 = add i64 %75, 1105920
  %77 = getelementptr inbounds double addrspace(1)* %4, i64 %76
  %78 = load double addrspace(1)* %77, align 8
  %79 = fmul double %78, 5.000000e-01
  %80 = fadd double %70, %79
  %81 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %82 = load i64* %81, align 8
  %83 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %84 = load i64* %83, align 8
  %85 = add i64 %82, %84
  %86 = add i64 %85, 1216512
  %87 = getelementptr inbounds double addrspace(1)* %4, i64 %86
  %88 = load double addrspace(1)* %87, align 8
  %89 = fadd double %80, %88
  %90 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %91 = load i64* %90, align 8
  %92 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %93 = load i64* %92, align 8
  %94 = add i64 %91, %93
  %95 = add i64 %94, 1658880
  %96 = getelementptr inbounds double addrspace(1)* %4, i64 %95
  %97 = load double addrspace(1)* %96, align 8
  %98 = fmul double %97, 2.000000e+00
  %99 = fadd double %89, %98
  %100 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %101 = load i64* %100, align 8
  %102 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %103 = load i64* %102, align 8
  %104 = add i64 %101, %103
  %105 = add i64 %104, 1437696
  %106 = getelementptr inbounds double addrspace(1)* %4, i64 %105
  %107 = load double addrspace(1)* %106, align 8
  %108 = fmul double %107, 2.000000e+00
  %109 = fadd double %99, %108
  %110 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %111 = load i64* %110, align 8
  %112 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %113 = load i64* %112, align 8
  %114 = add i64 %111, %113
  %115 = add i64 %114, 1548288
  %116 = getelementptr inbounds double addrspace(1)* %4, i64 %115
  %117 = load double addrspace(1)* %116, align 8
  %118 = fmul double %117, 2.000000e+00
  %119 = fadd double %109, %118
  %120 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %121 = load i64* %120, align 8
  %122 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %123 = load i64* %122, align 8
  %124 = add i64 %121, %123
  %125 = getelementptr inbounds double addrspace(1)* %4, i64 %124
  %126 = load double addrspace(1)* %125, align 8
  %127 = fadd double %43, %126
  %128 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %129 = load i64* %128, align 8
  %130 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %131 = load i64* %130, align 8
  %132 = add i64 %129, %131
  %133 = add i64 %132, 552960
  %134 = getelementptr inbounds double addrspace(1)* %4, i64 %133
  %135 = load double addrspace(1)* %134, align 8
  %136 = fmul double %135, 5.000000e+00
  %137 = fadd double %127, %136
  %138 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %139 = load i64* %138, align 8
  %140 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %141 = load i64* %140, align 8
  %142 = add i64 %139, %141
  %143 = add i64 %142, 995328
  %144 = getelementptr inbounds double addrspace(1)* %4, i64 %143
  %145 = load double addrspace(1)* %144, align 8
  %146 = fadd double %137, %145
  %147 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %148 = load i64* %147, align 8
  %149 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %150 = load i64* %149, align 8
  %151 = add i64 %148, %150
  %152 = add i64 %151, 1105920
  %153 = getelementptr inbounds double addrspace(1)* %4, i64 %152
  %154 = load double addrspace(1)* %153, align 8
  %155 = fmul double %154, 5.000000e-01
  %156 = fadd double %146, %155
  %157 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %158 = load i64* %157, align 8
  %159 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %160 = load i64* %159, align 8
  %161 = add i64 %158, %160
  %162 = add i64 %161, 1216512
  %163 = getelementptr inbounds double addrspace(1)* %4, i64 %162
  %164 = load double addrspace(1)* %163, align 8
  %165 = fadd double %156, %164
  %166 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %167 = load i64* %166, align 8
  %168 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %169 = load i64* %168, align 8
  %170 = add i64 %167, %169
  %171 = add i64 %170, 1658880
  %172 = getelementptr inbounds double addrspace(1)* %4, i64 %171
  %173 = load double addrspace(1)* %172, align 8
  %174 = fmul double %173, 2.000000e+00
  %175 = fadd double %165, %174
  %176 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %177 = load i64* %176, align 8
  %178 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %179 = load i64* %178, align 8
  %180 = add i64 %177, %179
  %181 = add i64 %180, 1437696
  %182 = getelementptr inbounds double addrspace(1)* %4, i64 %181
  %183 = load double addrspace(1)* %182, align 8
  %184 = fmul double %183, 1.500000e+00
  %185 = fadd double %175, %184
  %186 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %187 = load i64* %186, align 8
  %188 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %189 = load i64* %188, align 8
  %190 = add i64 %187, %189
  %191 = add i64 %190, 1548288
  %192 = getelementptr inbounds double addrspace(1)* %4, i64 %191
  %193 = load double addrspace(1)* %192, align 8
  %194 = fmul double %193, 1.500000e+00
  %195 = fadd double %185, %194
  %196 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %197 = load i64* %196, align 8
  %198 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %199 = load i64* %198, align 8
  %200 = add i64 %197, %199
  %201 = getelementptr inbounds double addrspace(1)* %4, i64 %200
  %202 = load double addrspace(1)* %201, align 8
  %203 = fadd double %43, %202
  %204 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %205 = load i64* %204, align 8
  %206 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %207 = load i64* %206, align 8
  %208 = add i64 %205, %207
  %209 = add i64 %208, 552960
  %210 = getelementptr inbounds double addrspace(1)* %4, i64 %209
  %211 = load double addrspace(1)* %210, align 8
  %212 = fmul double %211, 5.000000e+00
  %213 = fadd double %203, %212
  %214 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %215 = load i64* %214, align 8
  %216 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %217 = load i64* %216, align 8
  %218 = add i64 %215, %217
  %219 = add i64 %218, 995328
  %220 = getelementptr inbounds double addrspace(1)* %4, i64 %219
  %221 = load double addrspace(1)* %220, align 8
  %222 = fadd double %213, %221
  %223 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %224 = load i64* %223, align 8
  %225 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %226 = load i64* %225, align 8
  %227 = add i64 %224, %226
  %228 = add i64 %227, 1105920
  %229 = getelementptr inbounds double addrspace(1)* %4, i64 %228
  %230 = load double addrspace(1)* %229, align 8
  %231 = fmul double %230, 5.000000e-01
  %232 = fadd double %222, %231
  %233 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %234 = load i64* %233, align 8
  %235 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %236 = load i64* %235, align 8
  %237 = add i64 %234, %236
  %238 = add i64 %237, 1216512
  %239 = getelementptr inbounds double addrspace(1)* %4, i64 %238
  %240 = load double addrspace(1)* %239, align 8
  %241 = fadd double %232, %240
  %242 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %243 = load i64* %242, align 8
  %244 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %245 = load i64* %244, align 8
  %246 = add i64 %243, %245
  %247 = add i64 %246, 1658880
  %248 = getelementptr inbounds double addrspace(1)* %4, i64 %247
  %249 = load double addrspace(1)* %248, align 8
  %250 = fmul double %249, 2.000000e+00
  %251 = fadd double %241, %250
  %252 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %253 = load i64* %252, align 8
  %254 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %255 = load i64* %254, align 8
  %256 = add i64 %253, %255
  %257 = add i64 %256, 1437696
  %258 = getelementptr inbounds double addrspace(1)* %4, i64 %257
  %259 = load double addrspace(1)* %258, align 8
  %260 = fmul double %259, 2.000000e+00
  %261 = fadd double %251, %260
  %262 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %263 = load i64* %262, align 8
  %264 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %265 = load i64* %264, align 8
  %266 = add i64 %263, %265
  %267 = add i64 %266, 1548288
  %268 = getelementptr inbounds double addrspace(1)* %4, i64 %267
  %269 = load double addrspace(1)* %268, align 8
  %270 = fmul double %269, 2.000000e+00
  %271 = fadd double %261, %270
  %272 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %273 = load i64* %272, align 8
  %274 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %275 = load i64* %274, align 8
  %276 = add i64 %273, %275
  %277 = getelementptr inbounds double addrspace(1)* %13, i64 %276
  %278 = load double addrspace(1)* %277, align 8
  %279 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %280 = load i64* %279, align 8
  %281 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %282 = load i64* %281, align 8
  %283 = add i64 %280, %282
  %284 = add i64 %283, 1658880
  %285 = getelementptr inbounds double addrspace(1)* %7, i64 %284
  %286 = load double addrspace(1)* %285, align 8
  %287 = fdiv double 1.000000e+00, %286
  %288 = fmul double %271, %287
  %289 = fmul double %278, %288
  %290 = fadd double %289, 1.000000e+00
  %291 = fdiv double 1.000000e+00, %290
  %292 = fmul double %289, %291
  %293 = call double @_Z4fmaxdd(double %289, double 1.000000e-200) nounwind
  %294 = call double @_Z5log10d(double %293) nounwind
  %295 = fmul double %33, 0xBF85C9882B931057
  %296 = call double @_Z3expd(double %295) nounwind
  %297 = fmul double %296, 2.654000e-01
  %298 = fmul double %33, 0xBF42A91C92F3C105
  %299 = call double @_Z3expd(double %298) nounwind
  %300 = fmul double %299, 7.346000e-01
  %301 = fadd double %297, %300
  %302 = fdiv double 1.000000e+00, %33
  %303 = fmul double %302, -5.182000e+03
  %304 = call double @_Z3expd(double %303) nounwind
  %305 = fadd double %301, %304
  %306 = call double @_Z4fmaxdd(double %305, double 1.000000e-200) nounwind
  %307 = call double @_Z5log10d(double %306) nounwind
  %308 = fmul double %307, 1.270000e+00
  %309 = fsub double 7.500000e-01, %308
  %310 = fmul double %307, 6.700000e-01
  %311 = fadd double %310, 4.000000e-01
  %312 = fsub double %294, %311
  %313 = fmul double %312, 1.400000e-01
  %314 = fsub double %309, %313
  %315 = fdiv double 1.000000e+00, %314
  %316 = fmul double %312, %315
  %317 = fmul double %316, %316
  %318 = fadd double %317, 1.000000e+00
  %319 = fdiv double 1.000000e+00, %318
  %320 = fmul double %307, %319
  %321 = call double @_Z5exp10d(double %320) nounwind
  %322 = fmul double %321, %292
  %323 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %324 = load i64* %323, align 8
  %325 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %326 = load i64* %325, align 8
  %327 = add i64 %324, %326
  %328 = add i64 %327, 1658880
  %329 = getelementptr inbounds double addrspace(1)* %7, i64 %328
  %330 = load double addrspace(1)* %329, align 8
  %331 = fmul double %330, %322
  %332 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %333 = load i64* %332, align 8
  %334 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %335 = load i64* %334, align 8
  %336 = add i64 %333, %335
  %337 = add i64 %336, 1658880
  %338 = getelementptr inbounds double addrspace(1)* %7, i64 %337
  store double %331, double addrspace(1)* %338, align 8
  %339 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %340 = load i64* %339, align 8
  %341 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %342 = load i64* %341, align 8
  %343 = add i64 %340, %342
  %344 = add i64 %343, 1658880
  %345 = getelementptr inbounds double addrspace(1)* %10, i64 %344
  %346 = load double addrspace(1)* %345, align 8
  %347 = fmul double %346, %322
  %348 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %349 = load i64* %348, align 8
  %350 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %351 = load i64* %350, align 8
  %352 = add i64 %349, %351
  %353 = add i64 %352, 1658880
  %354 = getelementptr inbounds double addrspace(1)* %10, i64 %353
  store double %347, double addrspace(1)* %354, align 8
  %355 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %356 = load i64* %355, align 8
  %357 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %358 = load i64* %357, align 8
  %359 = add i64 %356, %358
  %360 = add i64 %359, 110592
  %361 = getelementptr inbounds double addrspace(1)* %13, i64 %360
  %362 = load double addrspace(1)* %361, align 8
  %363 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %364 = load i64* %363, align 8
  %365 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %366 = load i64* %365, align 8
  %367 = add i64 %364, %366
  %368 = add i64 %367, 3317760
  %369 = getelementptr inbounds double addrspace(1)* %7, i64 %368
  %370 = load double addrspace(1)* %369, align 8
  %371 = fdiv double 1.000000e+00, %370
  %372 = fmul double %119, %371
  %373 = fmul double %362, %372
  %374 = fadd double %373, 1.000000e+00
  %375 = fdiv double 1.000000e+00, %374
  %376 = fmul double %373, %375
  %377 = call double @_Z4fmaxdd(double %373, double 1.000000e-200) nounwind
  %378 = call double @_Z5log10d(double %377) nounwind
  %379 = fmul double %33, 0xBF74CAB88725AF6E
  %380 = call double @_Z3expd(double %379) nounwind
  %381 = fmul double %380, 6.800000e-02
  %382 = fmul double %33, 0xBF454725E6BB82FE
  %383 = call double @_Z3expd(double %382) nounwind
  %384 = fmul double %383, 9.320000e-01
  %385 = fadd double %381, %384
  %386 = fmul double %302, -1.030000e+04
  %387 = call double @_Z3expd(double %386) nounwind
  %388 = fadd double %385, %387
  %389 = call double @_Z4fmaxdd(double %388, double 1.000000e-200) nounwind
  %390 = call double @_Z5log10d(double %389) nounwind
  %391 = fmul double %390, 1.270000e+00
  %392 = fsub double 7.500000e-01, %391
  %393 = fmul double %390, 6.700000e-01
  %394 = fadd double %393, 4.000000e-01
  %395 = fsub double %378, %394
  %396 = fmul double %395, 1.400000e-01
  %397 = fsub double %392, %396
  %398 = fdiv double 1.000000e+00, %397
  %399 = fmul double %395, %398
  %400 = fmul double %399, %399
  %401 = fadd double %400, 1.000000e+00
  %402 = fdiv double 1.000000e+00, %401
  %403 = fmul double %390, %402
  %404 = call double @_Z5exp10d(double %403) nounwind
  %405 = fmul double %404, %376
  %406 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %407 = load i64* %406, align 8
  %408 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %409 = load i64* %408, align 8
  %410 = add i64 %407, %409
  %411 = add i64 %410, 3317760
  %412 = getelementptr inbounds double addrspace(1)* %7, i64 %411
  %413 = load double addrspace(1)* %412, align 8
  %414 = fmul double %413, %405
  %415 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %416 = load i64* %415, align 8
  %417 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %418 = load i64* %417, align 8
  %419 = add i64 %416, %418
  %420 = add i64 %419, 3317760
  %421 = getelementptr inbounds double addrspace(1)* %7, i64 %420
  store double %414, double addrspace(1)* %421, align 8
  %422 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %423 = load i64* %422, align 8
  %424 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %425 = load i64* %424, align 8
  %426 = add i64 %423, %425
  %427 = add i64 %426, 3317760
  %428 = getelementptr inbounds double addrspace(1)* %10, i64 %427
  %429 = load double addrspace(1)* %428, align 8
  %430 = fmul double %429, %405
  %431 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %432 = load i64* %431, align 8
  %433 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %434 = load i64* %433, align 8
  %435 = add i64 %432, %434
  %436 = add i64 %435, 3317760
  %437 = getelementptr inbounds double addrspace(1)* %10, i64 %436
  store double %430, double addrspace(1)* %437, align 8
  %438 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %439 = load i64* %438, align 8
  %440 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %441 = load i64* %440, align 8
  %442 = add i64 %439, %441
  %443 = add i64 %442, 221184
  %444 = getelementptr inbounds double addrspace(1)* %13, i64 %443
  %445 = load double addrspace(1)* %444, align 8
  %446 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %447 = load i64* %446, align 8
  %448 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %449 = load i64* %448, align 8
  %450 = add i64 %447, %449
  %451 = add i64 %450, 4202496
  %452 = getelementptr inbounds double addrspace(1)* %7, i64 %451
  %453 = load double addrspace(1)* %452, align 8
  %454 = fdiv double 1.000000e+00, %453
  %455 = fmul double %119, %454
  %456 = fmul double %445, %455
  %457 = fadd double %456, 1.000000e+00
  %458 = fdiv double 1.000000e+00, %457
  %459 = fmul double %456, %458
  %460 = call double @_Z4fmaxdd(double %456, double 1.000000e-200) nounwind
  %461 = call double @_Z5log10d(double %460) nounwind
  %462 = fmul double %33, 0xBF71485F0E0ACD3B
  %463 = call double @_Z3expd(double %462) nounwind
  %464 = fmul double %463, 4.243000e-01
  %465 = fmul double %33, 0xBF43D5D991AA75C6
  %466 = call double @_Z3expd(double %465) nounwind
  %467 = fmul double %466, 5.757000e-01
  %468 = fadd double %464, %467
  %469 = fmul double %302, -5.069000e+03
  %470 = call double @_Z3expd(double %469) nounwind
  %471 = fadd double %468, %470
  %472 = call double @_Z4fmaxdd(double %471, double 1.000000e-200) nounwind
  %473 = call double @_Z5log10d(double %472) nounwind
  %474 = fmul double %473, 1.270000e+00
  %475 = fsub double 7.500000e-01, %474
  %476 = fmul double %473, 6.700000e-01
  %477 = fadd double %476, 4.000000e-01
  %478 = fsub double %461, %477
  %479 = fmul double %478, 1.400000e-01
  %480 = fsub double %475, %479
  %481 = fdiv double 1.000000e+00, %480
  %482 = fmul double %478, %481
  %483 = fmul double %482, %482
  %484 = fadd double %483, 1.000000e+00
  %485 = fdiv double 1.000000e+00, %484
  %486 = fmul double %473, %485
  %487 = call double @_Z5exp10d(double %486) nounwind
  %488 = fmul double %487, %459
  %489 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %490 = load i64* %489, align 8
  %491 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %492 = load i64* %491, align 8
  %493 = add i64 %490, %492
  %494 = add i64 %493, 4202496
  %495 = getelementptr inbounds double addrspace(1)* %7, i64 %494
  %496 = load double addrspace(1)* %495, align 8
  %497 = fmul double %496, %488
  %498 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %499 = load i64* %498, align 8
  %500 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %501 = load i64* %500, align 8
  %502 = add i64 %499, %501
  %503 = add i64 %502, 4202496
  %504 = getelementptr inbounds double addrspace(1)* %7, i64 %503
  store double %497, double addrspace(1)* %504, align 8
  %505 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %506 = load i64* %505, align 8
  %507 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %508 = load i64* %507, align 8
  %509 = add i64 %506, %508
  %510 = add i64 %509, 4202496
  %511 = getelementptr inbounds double addrspace(1)* %10, i64 %510
  %512 = load double addrspace(1)* %511, align 8
  %513 = fmul double %512, %488
  %514 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %515 = load i64* %514, align 8
  %516 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %517 = load i64* %516, align 8
  %518 = add i64 %515, %517
  %519 = add i64 %518, 4202496
  %520 = getelementptr inbounds double addrspace(1)* %10, i64 %519
  store double %513, double addrspace(1)* %520, align 8
  %521 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %522 = load i64* %521, align 8
  %523 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %524 = load i64* %523, align 8
  %525 = add i64 %522, %524
  %526 = add i64 %525, 331776
  %527 = getelementptr inbounds double addrspace(1)* %13, i64 %526
  %528 = load double addrspace(1)* %527, align 8
  %529 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %530 = load i64* %529, align 8
  %531 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %532 = load i64* %531, align 8
  %533 = add i64 %530, %532
  %534 = add i64 %533, 4423680
  %535 = getelementptr inbounds double addrspace(1)* %7, i64 %534
  %536 = load double addrspace(1)* %535, align 8
  %537 = fdiv double 1.000000e+00, %536
  %538 = fmul double %119, %537
  %539 = fmul double %528, %538
  %540 = fadd double %539, 1.000000e+00
  %541 = fdiv double 1.000000e+00, %540
  %542 = fmul double %539, %541
  %543 = call double @_Z4fmaxdd(double %539, double 1.000000e-200) nounwind
  %544 = call double @_Z5log10d(double %543) nounwind
  %545 = fmul double %33, 0xBF6E3A9179DC1A73
  %546 = call double @_Z3expd(double %545) nounwind
  %547 = fmul double %546, 2.176000e-01
  %548 = fmul double %33, 0xBF37C9BBCB978E43
  %549 = call double @_Z3expd(double %548) nounwind
  %550 = fmul double %549, 7.824000e-01
  %551 = fadd double %547, %550
  %552 = fmul double %302, -6.570000e+03
  %553 = call double @_Z3expd(double %552) nounwind
  %554 = fadd double %551, %553
  %555 = call double @_Z4fmaxdd(double %554, double 1.000000e-200) nounwind
  %556 = call double @_Z5log10d(double %555) nounwind
  %557 = fmul double %556, 1.270000e+00
  %558 = fsub double 7.500000e-01, %557
  %559 = fmul double %556, 6.700000e-01
  %560 = fadd double %559, 4.000000e-01
  %561 = fsub double %544, %560
  %562 = fmul double %561, 1.400000e-01
  %563 = fsub double %558, %562
  %564 = fdiv double 1.000000e+00, %563
  %565 = fmul double %561, %564
  %566 = fmul double %565, %565
  %567 = fadd double %566, 1.000000e+00
  %568 = fdiv double 1.000000e+00, %567
  %569 = fmul double %556, %568
  %570 = call double @_Z5exp10d(double %569) nounwind
  %571 = fmul double %570, %542
  %572 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %573 = load i64* %572, align 8
  %574 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %575 = load i64* %574, align 8
  %576 = add i64 %573, %575
  %577 = add i64 %576, 4423680
  %578 = getelementptr inbounds double addrspace(1)* %7, i64 %577
  %579 = load double addrspace(1)* %578, align 8
  %580 = fmul double %579, %571
  %581 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %582 = load i64* %581, align 8
  %583 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %584 = load i64* %583, align 8
  %585 = add i64 %582, %584
  %586 = add i64 %585, 4423680
  %587 = getelementptr inbounds double addrspace(1)* %7, i64 %586
  store double %580, double addrspace(1)* %587, align 8
  %588 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %589 = load i64* %588, align 8
  %590 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %591 = load i64* %590, align 8
  %592 = add i64 %589, %591
  %593 = add i64 %592, 4423680
  %594 = getelementptr inbounds double addrspace(1)* %10, i64 %593
  %595 = load double addrspace(1)* %594, align 8
  %596 = fmul double %595, %571
  %597 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %598 = load i64* %597, align 8
  %599 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %600 = load i64* %599, align 8
  %601 = add i64 %598, %600
  %602 = add i64 %601, 4423680
  %603 = getelementptr inbounds double addrspace(1)* %10, i64 %602
  store double %596, double addrspace(1)* %603, align 8
  %604 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %605 = load i64* %604, align 8
  %606 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %607 = load i64* %606, align 8
  %608 = add i64 %605, %607
  %609 = add i64 %608, 442368
  %610 = getelementptr inbounds double addrspace(1)* %13, i64 %609
  %611 = load double addrspace(1)* %610, align 8
  %612 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %613 = load i64* %612, align 8
  %614 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %615 = load i64* %614, align 8
  %616 = add i64 %613, %615
  %617 = add i64 %616, 5197824
  %618 = getelementptr inbounds double addrspace(1)* %7, i64 %617
  %619 = load double addrspace(1)* %618, align 8
  %620 = fdiv double 1.000000e+00, %619
  %621 = fmul double %119, %620
  %622 = fmul double %611, %621
  %623 = fadd double %622, 1.000000e+00
  %624 = fdiv double 1.000000e+00, %623
  %625 = fmul double %622, %624
  %626 = call double @_Z4fmaxdd(double %622, double 1.000000e-200) nounwind
  %627 = call double @_Z5log10d(double %626) nounwind
  %628 = fmul double %33, 0xBF8A41A41A41A41A
  %629 = call double @_Z3expd(double %628) nounwind
  %630 = fmul double %629, 3.200000e-01
  %631 = fmul double %33, 0xBF406CD0E80106CD
  %632 = call double @_Z3expd(double %631) nounwind
  %633 = fmul double %632, 6.800000e-01
  %634 = fadd double %630, %633
  %635 = fmul double %302, -5.590000e+03
  %636 = call double @_Z3expd(double %635) nounwind
  %637 = fadd double %634, %636
  %638 = call double @_Z4fmaxdd(double %637, double 1.000000e-200) nounwind
  %639 = call double @_Z5log10d(double %638) nounwind
  %640 = fmul double %639, 1.270000e+00
  %641 = fsub double 7.500000e-01, %640
  %642 = fmul double %639, 6.700000e-01
  %643 = fadd double %642, 4.000000e-01
  %644 = fsub double %627, %643
  %645 = fmul double %644, 1.400000e-01
  %646 = fsub double %641, %645
  %647 = fdiv double 1.000000e+00, %646
  %648 = fmul double %644, %647
  %649 = fmul double %648, %648
  %650 = fadd double %649, 1.000000e+00
  %651 = fdiv double 1.000000e+00, %650
  %652 = fmul double %639, %651
  %653 = call double @_Z5exp10d(double %652) nounwind
  %654 = fmul double %653, %625
  %655 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %656 = load i64* %655, align 8
  %657 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %658 = load i64* %657, align 8
  %659 = add i64 %656, %658
  %660 = add i64 %659, 5197824
  %661 = getelementptr inbounds double addrspace(1)* %7, i64 %660
  %662 = load double addrspace(1)* %661, align 8
  %663 = fmul double %662, %654
  %664 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %665 = load i64* %664, align 8
  %666 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %667 = load i64* %666, align 8
  %668 = add i64 %665, %667
  %669 = add i64 %668, 5197824
  %670 = getelementptr inbounds double addrspace(1)* %7, i64 %669
  store double %663, double addrspace(1)* %670, align 8
  %671 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %672 = load i64* %671, align 8
  %673 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %674 = load i64* %673, align 8
  %675 = add i64 %672, %674
  %676 = add i64 %675, 5197824
  %677 = getelementptr inbounds double addrspace(1)* %10, i64 %676
  %678 = load double addrspace(1)* %677, align 8
  %679 = fmul double %678, %654
  %680 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %681 = load i64* %680, align 8
  %682 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %683 = load i64* %682, align 8
  %684 = add i64 %681, %683
  %685 = add i64 %684, 5197824
  %686 = getelementptr inbounds double addrspace(1)* %10, i64 %685
  store double %679, double addrspace(1)* %686, align 8
  %687 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %688 = load i64* %687, align 8
  %689 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %690 = load i64* %689, align 8
  %691 = add i64 %688, %690
  %692 = add i64 %691, 552960
  %693 = getelementptr inbounds double addrspace(1)* %13, i64 %692
  %694 = load double addrspace(1)* %693, align 8
  %695 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %696 = load i64* %695, align 8
  %697 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %698 = load i64* %697, align 8
  %699 = add i64 %696, %698
  %700 = add i64 %699, 6082560
  %701 = getelementptr inbounds double addrspace(1)* %7, i64 %700
  %702 = load double addrspace(1)* %701, align 8
  %703 = fdiv double 1.000000e+00, %702
  %704 = fmul double %119, %703
  %705 = fmul double %694, %704
  %706 = fadd double %705, 1.000000e+00
  %707 = fdiv double 1.000000e+00, %706
  %708 = fmul double %705, %707
  %709 = call double @_Z4fmaxdd(double %705, double 1.000000e-200) nounwind
  %710 = call double @_Z5log10d(double %709) nounwind
  %711 = fmul double %33, 0xBF6DCA01DCA01DCA
  %712 = call double @_Z3expd(double %711) nounwind
  %713 = fmul double %712, 4.093000e-01
  %714 = fmul double %33, 0xBF4ABA41FBD2E5B1
  %715 = call double @_Z3expd(double %714) nounwind
  %716 = fmul double %715, 5.907000e-01
  %717 = fadd double %713, %716
  %718 = fmul double %302, -5.185000e+03
  %719 = call double @_Z3expd(double %718) nounwind
  %720 = fadd double %717, %719
  %721 = call double @_Z4fmaxdd(double %720, double 1.000000e-200) nounwind
  %722 = call double @_Z5log10d(double %721) nounwind
  %723 = fmul double %722, 1.270000e+00
  %724 = fsub double 7.500000e-01, %723
  %725 = fmul double %722, 6.700000e-01
  %726 = fadd double %725, 4.000000e-01
  %727 = fsub double %710, %726
  %728 = fmul double %727, 1.400000e-01
  %729 = fsub double %724, %728
  %730 = fdiv double 1.000000e+00, %729
  %731 = fmul double %727, %730
  %732 = fmul double %731, %731
  %733 = fadd double %732, 1.000000e+00
  %734 = fdiv double 1.000000e+00, %733
  %735 = fmul double %722, %734
  %736 = call double @_Z5exp10d(double %735) nounwind
  %737 = fmul double %736, %708
  %738 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %739 = load i64* %738, align 8
  %740 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %741 = load i64* %740, align 8
  %742 = add i64 %739, %741
  %743 = add i64 %742, 6082560
  %744 = getelementptr inbounds double addrspace(1)* %7, i64 %743
  %745 = load double addrspace(1)* %744, align 8
  %746 = fmul double %745, %737
  %747 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %748 = load i64* %747, align 8
  %749 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %750 = load i64* %749, align 8
  %751 = add i64 %748, %750
  %752 = add i64 %751, 6082560
  %753 = getelementptr inbounds double addrspace(1)* %7, i64 %752
  store double %746, double addrspace(1)* %753, align 8
  %754 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %755 = load i64* %754, align 8
  %756 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %757 = load i64* %756, align 8
  %758 = add i64 %755, %757
  %759 = add i64 %758, 6082560
  %760 = getelementptr inbounds double addrspace(1)* %10, i64 %759
  %761 = load double addrspace(1)* %760, align 8
  %762 = fmul double %761, %737
  %763 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %764 = load i64* %763, align 8
  %765 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %766 = load i64* %765, align 8
  %767 = add i64 %764, %766
  %768 = add i64 %767, 6082560
  %769 = getelementptr inbounds double addrspace(1)* %10, i64 %768
  store double %762, double addrspace(1)* %769, align 8
  %770 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %771 = load i64* %770, align 8
  %772 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %773 = load i64* %772, align 8
  %774 = add i64 %771, %773
  %775 = add i64 %774, 663552
  %776 = getelementptr inbounds double addrspace(1)* %13, i64 %775
  %777 = load double addrspace(1)* %776, align 8
  %778 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %779 = load i64* %778, align 8
  %780 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %781 = load i64* %780, align 8
  %782 = add i64 %779, %781
  %783 = add i64 %782, 7741440
  %784 = getelementptr inbounds double addrspace(1)* %7, i64 %783
  %785 = load double addrspace(1)* %784, align 8
  %786 = fdiv double 1.000000e+00, %785
  %787 = fmul double %119, %786
  %788 = fmul double %777, %787
  %789 = fadd double %788, 1.000000e+00
  %790 = fdiv double 1.000000e+00, %789
  %791 = fmul double %788, %790
  %792 = call double @_Z4fmaxdd(double %788, double 1.000000e-200) nounwind
  %793 = call double @_Z5log10d(double %792) nounwind
  %794 = call double @_Z3expd(double %295) nounwind
  %795 = fmul double %794, 2.420000e-01
  %796 = fmul double %33, 0xBF45129A6C53A1D5
  %797 = call double @_Z3expd(double %796) nounwind
  %798 = fmul double %797, 7.580000e-01
  %799 = fadd double %795, %798
  %800 = fmul double %302, -4.200000e+03
  %801 = call double @_Z3expd(double %800) nounwind
  %802 = fadd double %799, %801
  %803 = call double @_Z4fmaxdd(double %802, double 1.000000e-200) nounwind
  %804 = call double @_Z5log10d(double %803) nounwind
  %805 = fmul double %804, 1.270000e+00
  %806 = fsub double 7.500000e-01, %805
  %807 = fmul double %804, 6.700000e-01
  %808 = fadd double %807, 4.000000e-01
  %809 = fsub double %793, %808
  %810 = fmul double %809, 1.400000e-01
  %811 = fsub double %806, %810
  %812 = fdiv double 1.000000e+00, %811
  %813 = fmul double %809, %812
  %814 = fmul double %813, %813
  %815 = fadd double %814, 1.000000e+00
  %816 = fdiv double 1.000000e+00, %815
  %817 = fmul double %804, %816
  %818 = call double @_Z5exp10d(double %817) nounwind
  %819 = fmul double %818, %791
  %820 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %821 = load i64* %820, align 8
  %822 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %823 = load i64* %822, align 8
  %824 = add i64 %821, %823
  %825 = add i64 %824, 7741440
  %826 = getelementptr inbounds double addrspace(1)* %7, i64 %825
  %827 = load double addrspace(1)* %826, align 8
  %828 = fmul double %827, %819
  %829 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %830 = load i64* %829, align 8
  %831 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %832 = load i64* %831, align 8
  %833 = add i64 %830, %832
  %834 = add i64 %833, 7741440
  %835 = getelementptr inbounds double addrspace(1)* %7, i64 %834
  store double %828, double addrspace(1)* %835, align 8
  %836 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %837 = load i64* %836, align 8
  %838 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %839 = load i64* %838, align 8
  %840 = add i64 %837, %839
  %841 = add i64 %840, 7741440
  %842 = getelementptr inbounds double addrspace(1)* %10, i64 %841
  %843 = load double addrspace(1)* %842, align 8
  %844 = fmul double %843, %819
  %845 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %846 = load i64* %845, align 8
  %847 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %848 = load i64* %847, align 8
  %849 = add i64 %846, %848
  %850 = add i64 %849, 7741440
  %851 = getelementptr inbounds double addrspace(1)* %10, i64 %850
  store double %844, double addrspace(1)* %851, align 8
  %852 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %853 = load i64* %852, align 8
  %854 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %855 = load i64* %854, align 8
  %856 = add i64 %853, %855
  %857 = add i64 %856, 774144
  %858 = getelementptr inbounds double addrspace(1)* %13, i64 %857
  %859 = load double addrspace(1)* %858, align 8
  %860 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %861 = load i64* %860, align 8
  %862 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %863 = load i64* %862, align 8
  %864 = add i64 %861, %863
  %865 = add i64 %864, 8515584
  %866 = getelementptr inbounds double addrspace(1)* %7, i64 %865
  %867 = load double addrspace(1)* %866, align 8
  %868 = fdiv double 1.000000e+00, %867
  %869 = fmul double %119, %868
  %870 = fmul double %859, %869
  %871 = fadd double %870, 1.000000e+00
  %872 = fdiv double 1.000000e+00, %871
  %873 = fmul double %870, %872
  %874 = call double @_Z4fmaxdd(double %870, double 1.000000e-200) nounwind
  %875 = call double @_Z5log10d(double %874) nounwind
  %876 = fmul double %33, 0xBF8BACF914C1BAD0
  %877 = call double @_Z3expd(double %876) nounwind
  %878 = fmul double %877, 2.170000e-01
  %879 = fmul double %33, 0xBF36489880D3B1A9
  %880 = call double @_Z3expd(double %879) nounwind
  %881 = fmul double %880, 7.830000e-01
  %882 = fadd double %878, %881
  %883 = fmul double %302, -6.964000e+03
  %884 = call double @_Z3expd(double %883) nounwind
  %885 = fadd double %882, %884
  %886 = call double @_Z4fmaxdd(double %885, double 1.000000e-200) nounwind
  %887 = call double @_Z5log10d(double %886) nounwind
  %888 = fmul double %887, 1.270000e+00
  %889 = fsub double 7.500000e-01, %888
  %890 = fmul double %887, 6.700000e-01
  %891 = fadd double %890, 4.000000e-01
  %892 = fsub double %875, %891
  %893 = fmul double %892, 1.400000e-01
  %894 = fsub double %889, %893
  %895 = fdiv double 1.000000e+00, %894
  %896 = fmul double %892, %895
  %897 = fmul double %896, %896
  %898 = fadd double %897, 1.000000e+00
  %899 = fdiv double 1.000000e+00, %898
  %900 = fmul double %887, %899
  %901 = call double @_Z5exp10d(double %900) nounwind
  %902 = fmul double %901, %873
  %903 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %904 = load i64* %903, align 8
  %905 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %906 = load i64* %905, align 8
  %907 = add i64 %904, %906
  %908 = add i64 %907, 8515584
  %909 = getelementptr inbounds double addrspace(1)* %7, i64 %908
  %910 = load double addrspace(1)* %909, align 8
  %911 = fmul double %910, %902
  %912 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %913 = load i64* %912, align 8
  %914 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %915 = load i64* %914, align 8
  %916 = add i64 %913, %915
  %917 = add i64 %916, 8515584
  %918 = getelementptr inbounds double addrspace(1)* %7, i64 %917
  store double %911, double addrspace(1)* %918, align 8
  %919 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %920 = load i64* %919, align 8
  %921 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %922 = load i64* %921, align 8
  %923 = add i64 %920, %922
  %924 = add i64 %923, 8515584
  %925 = getelementptr inbounds double addrspace(1)* %10, i64 %924
  %926 = load double addrspace(1)* %925, align 8
  %927 = fmul double %926, %902
  %928 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %929 = load i64* %928, align 8
  %930 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %931 = load i64* %930, align 8
  %932 = add i64 %929, %931
  %933 = add i64 %932, 8515584
  %934 = getelementptr inbounds double addrspace(1)* %10, i64 %933
  store double %927, double addrspace(1)* %934, align 8
  %935 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %936 = load i64* %935, align 8
  %937 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %938 = load i64* %937, align 8
  %939 = add i64 %936, %938
  %940 = add i64 %939, 884736
  %941 = getelementptr inbounds double addrspace(1)* %13, i64 %940
  %942 = load double addrspace(1)* %941, align 8
  %943 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %944 = load i64* %943, align 8
  %945 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %946 = load i64* %945, align 8
  %947 = add i64 %944, %946
  %948 = add i64 %947, 9732096
  %949 = getelementptr inbounds double addrspace(1)* %7, i64 %948
  %950 = load double addrspace(1)* %949, align 8
  %951 = fdiv double 1.000000e+00, %950
  %952 = fmul double %119, %951
  %953 = fmul double %942, %952
  %954 = fadd double %953, 1.000000e+00
  %955 = fdiv double 1.000000e+00, %954
  %956 = fmul double %953, %955
  %957 = call double @_Z4fmaxdd(double %953, double 1.000000e-200) nounwind
  %958 = call double @_Z5log10d(double %957) nounwind
  %959 = fmul double %33, 0xBFB393EE251E9EA8
  %960 = call double @_Z3expd(double %959) nounwind
  %961 = fmul double %960, 3.827000e-01
  %962 = fmul double %33, 0xBF3F89BB80DCC421
  %963 = call double @_Z3expd(double %962) nounwind
  %964 = fmul double %963, 6.173000e-01
  %965 = fadd double %961, %964
  %966 = fmul double %302, -5.093000e+03
  %967 = call double @_Z3expd(double %966) nounwind
  %968 = fadd double %965, %967
  %969 = call double @_Z4fmaxdd(double %968, double 1.000000e-200) nounwind
  %970 = call double @_Z5log10d(double %969) nounwind
  %971 = fmul double %970, 1.270000e+00
  %972 = fsub double 7.500000e-01, %971
  %973 = fmul double %970, 6.700000e-01
  %974 = fadd double %973, 4.000000e-01
  %975 = fsub double %958, %974
  %976 = fmul double %975, 1.400000e-01
  %977 = fsub double %972, %976
  %978 = fdiv double 1.000000e+00, %977
  %979 = fmul double %975, %978
  %980 = fmul double %979, %979
  %981 = fadd double %980, 1.000000e+00
  %982 = fdiv double 1.000000e+00, %981
  %983 = fmul double %970, %982
  %984 = call double @_Z5exp10d(double %983) nounwind
  %985 = fmul double %984, %956
  %986 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %987 = load i64* %986, align 8
  %988 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %989 = load i64* %988, align 8
  %990 = add i64 %987, %989
  %991 = add i64 %990, 9732096
  %992 = getelementptr inbounds double addrspace(1)* %7, i64 %991
  %993 = load double addrspace(1)* %992, align 8
  %994 = fmul double %993, %985
  %995 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %996 = load i64* %995, align 8
  %997 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %998 = load i64* %997, align 8
  %999 = add i64 %996, %998
  %1000 = add i64 %999, 9732096
  %1001 = getelementptr inbounds double addrspace(1)* %7, i64 %1000
  store double %994, double addrspace(1)* %1001, align 8
  %1002 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1003 = load i64* %1002, align 8
  %1004 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1005 = load i64* %1004, align 8
  %1006 = add i64 %1003, %1005
  %1007 = add i64 %1006, 9732096
  %1008 = getelementptr inbounds double addrspace(1)* %10, i64 %1007
  %1009 = load double addrspace(1)* %1008, align 8
  %1010 = fmul double %1009, %985
  %1011 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1012 = load i64* %1011, align 8
  %1013 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1014 = load i64* %1013, align 8
  %1015 = add i64 %1012, %1014
  %1016 = add i64 %1015, 9732096
  %1017 = getelementptr inbounds double addrspace(1)* %10, i64 %1016
  store double %1010, double addrspace(1)* %1017, align 8
  %1018 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1019 = load i64* %1018, align 8
  %1020 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1021 = load i64* %1020, align 8
  %1022 = add i64 %1019, %1021
  %1023 = add i64 %1022, 995328
  %1024 = getelementptr inbounds double addrspace(1)* %13, i64 %1023
  %1025 = load double addrspace(1)* %1024, align 8
  %1026 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1027 = load i64* %1026, align 8
  %1028 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1029 = load i64* %1028, align 8
  %1030 = add i64 %1027, %1029
  %1031 = add i64 %1030, 10174464
  %1032 = getelementptr inbounds double addrspace(1)* %7, i64 %1031
  %1033 = load double addrspace(1)* %1032, align 8
  %1034 = fdiv double 1.000000e+00, %1033
  %1035 = fmul double %119, %1034
  %1036 = fmul double %1025, %1035
  %1037 = fadd double %1036, 1.000000e+00
  %1038 = fdiv double 1.000000e+00, %1037
  %1039 = fmul double %1036, %1038
  %1040 = call double @_Z4fmaxdd(double %1036, double 1.000000e-200) nounwind
  %1041 = call double @_Z5log10d(double %1040) nounwind
  %1042 = fmul double %33, 0xBF7B2036406C80D9
  %1043 = call double @_Z3expd(double %1042) nounwind
  %1044 = fmul double %1043, 4.675000e-01
  %1045 = fmul double %33, 0xBF4F9182B6813BAF
  %1046 = call double @_Z3expd(double %1045) nounwind
  %1047 = fmul double %1046, 5.325000e-01
  %1048 = fadd double %1044, %1047
  %1049 = fmul double %302, -4.970000e+03
  %1050 = call double @_Z3expd(double %1049) nounwind
  %1051 = fadd double %1048, %1050
  %1052 = call double @_Z4fmaxdd(double %1051, double 1.000000e-200) nounwind
  %1053 = call double @_Z5log10d(double %1052) nounwind
  %1054 = fmul double %1053, 1.270000e+00
  %1055 = fsub double 7.500000e-01, %1054
  %1056 = fmul double %1053, 6.700000e-01
  %1057 = fadd double %1056, 4.000000e-01
  %1058 = fsub double %1041, %1057
  %1059 = fmul double %1058, 1.400000e-01
  %1060 = fsub double %1055, %1059
  %1061 = fdiv double 1.000000e+00, %1060
  %1062 = fmul double %1058, %1061
  %1063 = fmul double %1062, %1062
  %1064 = fadd double %1063, 1.000000e+00
  %1065 = fdiv double 1.000000e+00, %1064
  %1066 = fmul double %1053, %1065
  %1067 = call double @_Z5exp10d(double %1066) nounwind
  %1068 = fmul double %1067, %1039
  %1069 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1070 = load i64* %1069, align 8
  %1071 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1072 = load i64* %1071, align 8
  %1073 = add i64 %1070, %1072
  %1074 = add i64 %1073, 10174464
  %1075 = getelementptr inbounds double addrspace(1)* %7, i64 %1074
  %1076 = load double addrspace(1)* %1075, align 8
  %1077 = fmul double %1076, %1068
  %1078 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1079 = load i64* %1078, align 8
  %1080 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1081 = load i64* %1080, align 8
  %1082 = add i64 %1079, %1081
  %1083 = add i64 %1082, 10174464
  %1084 = getelementptr inbounds double addrspace(1)* %7, i64 %1083
  store double %1077, double addrspace(1)* %1084, align 8
  %1085 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1086 = load i64* %1085, align 8
  %1087 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1088 = load i64* %1087, align 8
  %1089 = add i64 %1086, %1088
  %1090 = add i64 %1089, 10174464
  %1091 = getelementptr inbounds double addrspace(1)* %10, i64 %1090
  %1092 = load double addrspace(1)* %1091, align 8
  %1093 = fmul double %1092, %1068
  %1094 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1095 = load i64* %1094, align 8
  %1096 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1097 = load i64* %1096, align 8
  %1098 = add i64 %1095, %1097
  %1099 = add i64 %1098, 10174464
  %1100 = getelementptr inbounds double addrspace(1)* %10, i64 %1099
  store double %1093, double addrspace(1)* %1100, align 8
  %1101 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1102 = load i64* %1101, align 8
  %1103 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1104 = load i64* %1103, align 8
  %1105 = add i64 %1102, %1104
  %1106 = add i64 %1105, 1105920
  %1107 = getelementptr inbounds double addrspace(1)* %13, i64 %1106
  %1108 = load double addrspace(1)* %1107, align 8
  %1109 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1110 = load i64* %1109, align 8
  %1111 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1112 = load i64* %1111, align 8
  %1113 = add i64 %1110, %1112
  %1114 = add i64 %1113, 12496896
  %1115 = getelementptr inbounds double addrspace(1)* %7, i64 %1114
  %1116 = load double addrspace(1)* %1115, align 8
  %1117 = fdiv double 1.000000e+00, %1116
  %1118 = fmul double %195, %1117
  %1119 = fmul double %1108, %1118
  %1120 = fadd double %1119, 1.000000e+00
  %1121 = fdiv double 1.000000e+00, %1120
  %1122 = fmul double %1119, %1121
  %1123 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1124 = load i64* %1123, align 8
  %1125 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1126 = load i64* %1125, align 8
  %1127 = add i64 %1124, %1126
  %1128 = add i64 %1127, 12496896
  %1129 = getelementptr inbounds double addrspace(1)* %7, i64 %1128
  %1130 = load double addrspace(1)* %1129, align 8
  %1131 = fmul double %1130, %1122
  %1132 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1133 = load i64* %1132, align 8
  %1134 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1135 = load i64* %1134, align 8
  %1136 = add i64 %1133, %1135
  %1137 = add i64 %1136, 12496896
  %1138 = getelementptr inbounds double addrspace(1)* %7, i64 %1137
  store double %1131, double addrspace(1)* %1138, align 8
  %1139 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1140 = load i64* %1139, align 8
  %1141 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1142 = load i64* %1141, align 8
  %1143 = add i64 %1140, %1142
  %1144 = add i64 %1143, 12496896
  %1145 = getelementptr inbounds double addrspace(1)* %10, i64 %1144
  %1146 = load double addrspace(1)* %1145, align 8
  %1147 = fmul double %1146, %1122
  %1148 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1149 = load i64* %1148, align 8
  %1150 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1151 = load i64* %1150, align 8
  %1152 = add i64 %1149, %1151
  %1153 = add i64 %1152, 12496896
  %1154 = getelementptr inbounds double addrspace(1)* %10, i64 %1153
  store double %1147, double addrspace(1)* %1154, align 8
  %1155 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1156 = load i64* %1155, align 8
  %1157 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1158 = load i64* %1157, align 8
  %1159 = add i64 %1156, %1158
  %1160 = add i64 %1159, 1216512
  %1161 = getelementptr inbounds double addrspace(1)* %13, i64 %1160
  %1162 = load double addrspace(1)* %1161, align 8
  %1163 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1164 = load i64* %1163, align 8
  %1165 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1166 = load i64* %1165, align 8
  %1167 = add i64 %1164, %1166
  %1168 = add i64 %1167, 12607488
  %1169 = getelementptr inbounds double addrspace(1)* %7, i64 %1168
  %1170 = load double addrspace(1)* %1169, align 8
  %1171 = fdiv double 1.000000e+00, %1170
  %1172 = fmul double %119, %1171
  %1173 = fmul double %1162, %1172
  %1174 = fadd double %1173, 1.000000e+00
  %1175 = fdiv double 1.000000e+00, %1174
  %1176 = fmul double %1173, %1175
  %1177 = call double @_Z4fmaxdd(double %1173, double 1.000000e-200) nounwind
  %1178 = call double @_Z5log10d(double %1177) nounwind
  %1179 = fmul double %33, 0xBF285898CF48B83B
  %1180 = call double @_Z3expd(double %1179) nounwind
  %1181 = fmul double %1180, -9.816000e-01
  %1182 = fmul double %33, 0xBFCDD08901068F29
  %1183 = call double @_Z3expd(double %1182) nounwind
  %1184 = fmul double %1183, 1.981600e+00
  %1185 = fadd double %1181, %1184
  %1186 = fmul double %302, 7.950000e-02
  %1187 = call double @_Z3expd(double %1186) nounwind
  %1188 = fadd double %1185, %1187
  %1189 = call double @_Z4fmaxdd(double %1188, double 1.000000e-200) nounwind
  %1190 = call double @_Z5log10d(double %1189) nounwind
  %1191 = fmul double %1190, 1.270000e+00
  %1192 = fsub double 7.500000e-01, %1191
  %1193 = fmul double %1190, 6.700000e-01
  %1194 = fadd double %1193, 4.000000e-01
  %1195 = fsub double %1178, %1194
  %1196 = fmul double %1195, 1.400000e-01
  %1197 = fsub double %1192, %1196
  %1198 = fdiv double 1.000000e+00, %1197
  %1199 = fmul double %1195, %1198
  %1200 = fmul double %1199, %1199
  %1201 = fadd double %1200, 1.000000e+00
  %1202 = fdiv double 1.000000e+00, %1201
  %1203 = fmul double %1190, %1202
  %1204 = call double @_Z5exp10d(double %1203) nounwind
  %1205 = fmul double %1204, %1176
  %1206 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1207 = load i64* %1206, align 8
  %1208 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1209 = load i64* %1208, align 8
  %1210 = add i64 %1207, %1209
  %1211 = add i64 %1210, 12607488
  %1212 = getelementptr inbounds double addrspace(1)* %7, i64 %1211
  %1213 = load double addrspace(1)* %1212, align 8
  %1214 = fmul double %1213, %1205
  %1215 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1216 = load i64* %1215, align 8
  %1217 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1218 = load i64* %1217, align 8
  %1219 = add i64 %1216, %1218
  %1220 = add i64 %1219, 12607488
  %1221 = getelementptr inbounds double addrspace(1)* %7, i64 %1220
  store double %1214, double addrspace(1)* %1221, align 8
  %1222 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1223 = load i64* %1222, align 8
  %1224 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1225 = load i64* %1224, align 8
  %1226 = add i64 %1223, %1225
  %1227 = add i64 %1226, 12607488
  %1228 = getelementptr inbounds double addrspace(1)* %10, i64 %1227
  %1229 = load double addrspace(1)* %1228, align 8
  %1230 = fmul double %1229, %1205
  %1231 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1232 = load i64* %1231, align 8
  %1233 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1234 = load i64* %1233, align 8
  %1235 = add i64 %1232, %1234
  %1236 = add i64 %1235, 12607488
  %1237 = getelementptr inbounds double addrspace(1)* %10, i64 %1236
  store double %1230, double addrspace(1)* %1237, align 8
  %check.WI.iter.i = icmp ult i64 %CurrWI..0.i, %25
  br i1 %check.WI.iter.i, label %thenBB.i, label %__ratx_kernel_separated_args.exit

thenBB.i:                                         ; preds = %._crit_edge.i
  %"CurrWI++.i" = add nuw i64 %CurrWI..0.i, 1
  br label %SyncBB.i

__ratx_kernel_separated_args.exit:                ; preds = %._crit_edge.i
  ret void
}

define void @__Vectorized_.ratx_kernel(i8* %pBuffer) {
entry:
  %0 = bitcast i8* %pBuffer to double addrspace(1)**
  %1 = load double addrspace(1)** %0, align 8
  %2 = getelementptr i8* %pBuffer, i64 8
  %3 = bitcast i8* %2 to double addrspace(1)**
  %4 = load double addrspace(1)** %3, align 8
  %5 = getelementptr i8* %pBuffer, i64 16
  %6 = bitcast i8* %5 to double addrspace(1)**
  %7 = load double addrspace(1)** %6, align 8
  %8 = getelementptr i8* %pBuffer, i64 24
  %9 = bitcast i8* %8 to double addrspace(1)**
  %10 = load double addrspace(1)** %9, align 8
  %11 = getelementptr i8* %pBuffer, i64 32
  %12 = bitcast i8* %11 to double addrspace(1)**
  %13 = load double addrspace(1)** %12, align 8
  %14 = getelementptr i8* %pBuffer, i64 40
  %15 = bitcast i8* %14 to double*
  %16 = load double* %15, align 8
  %17 = getelementptr i8* %pBuffer, i64 72
  %18 = bitcast i8* %17 to %struct.PaddedDimId**
  %19 = load %struct.PaddedDimId** %18, align 8
  %20 = getelementptr i8* %pBuffer, i64 80
  %21 = bitcast i8* %20 to %struct.PaddedDimId**
  %22 = load %struct.PaddedDimId** %21, align 8
  %23 = getelementptr i8* %pBuffer, i64 96
  %24 = bitcast i8* %23 to i64*
  %25 = load i64* %24, align 8
  %temp.i = insertelement <16 x double> undef, double %16, i32 0
  %vector.i = shufflevector <16 x double> %temp.i, <16 x double> undef, <16 x i32> zeroinitializer
  br label %SyncBB.i

SyncBB.i:                                         ; preds = %thenBB.i, %entry
  %CurrWI..0.i = phi i64 [ 0, %entry ], [ %"CurrWI++.i", %thenBB.i ]
  %26 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %27 = load i64* %26, align 8
  %28 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %29 = load i64* %28, align 8
  %30 = add i64 %27, %29
  %31 = getelementptr inbounds double addrspace(1)* %1, i64 %30
  %ptrTypeCast.i = bitcast double addrspace(1)* %31 to <16 x double> addrspace(1)*
  %32 = load <16 x double> addrspace(1)* %ptrTypeCast.i, align 8
  %33 = fmul <16 x double> %32, %vector.i
  %extract16.i = extractelement <16 x double> %33, i32 0
  %extract17.i = extractelement <16 x double> %33, i32 1
  %extract18.i = extractelement <16 x double> %33, i32 2
  %extract19.i = extractelement <16 x double> %33, i32 3
  %extract20.i = extractelement <16 x double> %33, i32 4
  %extract21.i = extractelement <16 x double> %33, i32 5
  %extract22.i = extractelement <16 x double> %33, i32 6
  %extract23.i = extractelement <16 x double> %33, i32 7
  %extract24.i = extractelement <16 x double> %33, i32 8
  %extract25.i = extractelement <16 x double> %33, i32 9
  %extract26.i = extractelement <16 x double> %33, i32 10
  %extract27.i = extractelement <16 x double> %33, i32 11
  %extract28.i = extractelement <16 x double> %33, i32 12
  %extract29.i = extractelement <16 x double> %33, i32 13
  %extract30.i = extractelement <16 x double> %33, i32 14
  %extract31.i = extractelement <16 x double> %33, i32 15
  %34 = call double @_Z3logd(double %extract16.i) nounwind
  %35 = call double @_Z3logd(double %extract17.i) nounwind
  %36 = call double @_Z3logd(double %extract18.i) nounwind
  %37 = call double @_Z3logd(double %extract19.i) nounwind
  %38 = call double @_Z3logd(double %extract20.i) nounwind
  %39 = call double @_Z3logd(double %extract21.i) nounwind
  %40 = call double @_Z3logd(double %extract22.i) nounwind
  %41 = call double @_Z3logd(double %extract23.i) nounwind
  %42 = call double @_Z3logd(double %extract24.i) nounwind
  %43 = call double @_Z3logd(double %extract25.i) nounwind
  %44 = call double @_Z3logd(double %extract26.i) nounwind
  %45 = call double @_Z3logd(double %extract27.i) nounwind
  %46 = call double @_Z3logd(double %extract28.i) nounwind
  %47 = call double @_Z3logd(double %extract29.i) nounwind
  %48 = call double @_Z3logd(double %extract30.i) nounwind
  %49 = call double @_Z3logd(double %extract31.i) nounwind
  br label %50

; <label>:50                                      ; preds = %50, %SyncBB.i
  %indvar.i = phi i64 [ 0, %SyncBB.i ], [ %indvar.next.i, %50 ]
  %vectorPHI.i = phi <16 x double> [ zeroinitializer, %SyncBB.i ], [ %58, %50 ]
  %tmp3.i = mul i64 %indvar.i, 110592
  %51 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %52 = load i64* %51, align 8
  %53 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %54 = load i64* %53, align 8
  %55 = add i64 %52, %54
  %extract37.i = add i64 %55, %tmp3.i
  %56 = getelementptr inbounds double addrspace(1)* %4, i64 %extract37.i
  %ptrTypeCast53.i = bitcast double addrspace(1)* %56 to <16 x double> addrspace(1)*
  %57 = load <16 x double> addrspace(1)* %ptrTypeCast53.i, align 8
  %58 = fadd <16 x double> %vectorPHI.i, %57
  %indvar.next.i = add i64 %indvar.i, 1
  %exitcond.i = icmp eq i64 %indvar.next.i, 22
  br i1 %exitcond.i, label %._crit_edge.i, label %50

._crit_edge.i:                                    ; preds = %50
  %59 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %60 = load i64* %59, align 8
  %61 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %62 = load i64* %61, align 8
  %63 = add i64 %60, %62
  %64 = getelementptr inbounds double addrspace(1)* %4, i64 %63
  %ptrTypeCast72.i = bitcast double addrspace(1)* %64 to <16 x double> addrspace(1)*
  %65 = load <16 x double> addrspace(1)* %ptrTypeCast72.i, align 8
  %66 = fadd <16 x double> %58, %65
  %67 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %68 = load i64* %67, align 8
  %69 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %70 = load i64* %69, align 8
  %71 = add i64 %68, %70
  %extract75.i = add i64 %71, 552960
  %72 = getelementptr inbounds double addrspace(1)* %4, i64 %extract75.i
  %ptrTypeCast91.i = bitcast double addrspace(1)* %72 to <16 x double> addrspace(1)*
  %73 = load <16 x double> addrspace(1)* %ptrTypeCast91.i, align 8
  %74 = fmul <16 x double> %73, <double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00>
  %75 = fadd <16 x double> %66, %74
  %76 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %77 = load i64* %76, align 8
  %78 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %79 = load i64* %78, align 8
  %80 = add i64 %77, %79
  %extract94.i = add i64 %80, 995328
  %81 = getelementptr inbounds double addrspace(1)* %4, i64 %extract94.i
  %ptrTypeCast110.i = bitcast double addrspace(1)* %81 to <16 x double> addrspace(1)*
  %82 = load <16 x double> addrspace(1)* %ptrTypeCast110.i, align 8
  %83 = fadd <16 x double> %75, %82
  %84 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %85 = load i64* %84, align 8
  %86 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %87 = load i64* %86, align 8
  %88 = add i64 %85, %87
  %extract113.i = add i64 %88, 1105920
  %89 = getelementptr inbounds double addrspace(1)* %4, i64 %extract113.i
  %ptrTypeCast129.i = bitcast double addrspace(1)* %89 to <16 x double> addrspace(1)*
  %90 = load <16 x double> addrspace(1)* %ptrTypeCast129.i, align 8
  %91 = fmul <16 x double> %90, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %92 = fadd <16 x double> %83, %91
  %93 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %94 = load i64* %93, align 8
  %95 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %96 = load i64* %95, align 8
  %97 = add i64 %94, %96
  %extract132.i = add i64 %97, 1216512
  %98 = getelementptr inbounds double addrspace(1)* %4, i64 %extract132.i
  %ptrTypeCast148.i = bitcast double addrspace(1)* %98 to <16 x double> addrspace(1)*
  %99 = load <16 x double> addrspace(1)* %ptrTypeCast148.i, align 8
  %100 = fadd <16 x double> %92, %99
  %101 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %102 = load i64* %101, align 8
  %103 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %104 = load i64* %103, align 8
  %105 = add i64 %102, %104
  %extract151.i = add i64 %105, 1658880
  %106 = getelementptr inbounds double addrspace(1)* %4, i64 %extract151.i
  %ptrTypeCast167.i = bitcast double addrspace(1)* %106 to <16 x double> addrspace(1)*
  %107 = load <16 x double> addrspace(1)* %ptrTypeCast167.i, align 8
  %108 = fmul <16 x double> %107, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %109 = fadd <16 x double> %100, %108
  %110 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %111 = load i64* %110, align 8
  %112 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %113 = load i64* %112, align 8
  %114 = add i64 %111, %113
  %extract170.i = add i64 %114, 1437696
  %115 = getelementptr inbounds double addrspace(1)* %4, i64 %extract170.i
  %ptrTypeCast186.i = bitcast double addrspace(1)* %115 to <16 x double> addrspace(1)*
  %116 = load <16 x double> addrspace(1)* %ptrTypeCast186.i, align 8
  %117 = fmul <16 x double> %116, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %118 = fadd <16 x double> %109, %117
  %119 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %120 = load i64* %119, align 8
  %121 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %122 = load i64* %121, align 8
  %123 = add i64 %120, %122
  %extract189.i = add i64 %123, 1548288
  %124 = getelementptr inbounds double addrspace(1)* %4, i64 %extract189.i
  %ptrTypeCast205.i = bitcast double addrspace(1)* %124 to <16 x double> addrspace(1)*
  %125 = load <16 x double> addrspace(1)* %ptrTypeCast205.i, align 8
  %126 = fmul <16 x double> %125, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %127 = fadd <16 x double> %118, %126
  %128 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %129 = load i64* %128, align 8
  %130 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %131 = load i64* %130, align 8
  %132 = add i64 %129, %131
  %133 = getelementptr inbounds double addrspace(1)* %4, i64 %132
  %ptrTypeCast224.i = bitcast double addrspace(1)* %133 to <16 x double> addrspace(1)*
  %134 = load <16 x double> addrspace(1)* %ptrTypeCast224.i, align 8
  %135 = fadd <16 x double> %58, %134
  %136 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %137 = load i64* %136, align 8
  %138 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %139 = load i64* %138, align 8
  %140 = add i64 %137, %139
  %extract227.i = add i64 %140, 552960
  %141 = getelementptr inbounds double addrspace(1)* %4, i64 %extract227.i
  %ptrTypeCast243.i = bitcast double addrspace(1)* %141 to <16 x double> addrspace(1)*
  %142 = load <16 x double> addrspace(1)* %ptrTypeCast243.i, align 8
  %143 = fmul <16 x double> %142, <double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00>
  %144 = fadd <16 x double> %135, %143
  %145 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %146 = load i64* %145, align 8
  %147 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %148 = load i64* %147, align 8
  %149 = add i64 %146, %148
  %extract246.i = add i64 %149, 995328
  %150 = getelementptr inbounds double addrspace(1)* %4, i64 %extract246.i
  %ptrTypeCast262.i = bitcast double addrspace(1)* %150 to <16 x double> addrspace(1)*
  %151 = load <16 x double> addrspace(1)* %ptrTypeCast262.i, align 8
  %152 = fadd <16 x double> %144, %151
  %153 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %154 = load i64* %153, align 8
  %155 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %156 = load i64* %155, align 8
  %157 = add i64 %154, %156
  %extract265.i = add i64 %157, 1105920
  %158 = getelementptr inbounds double addrspace(1)* %4, i64 %extract265.i
  %ptrTypeCast281.i = bitcast double addrspace(1)* %158 to <16 x double> addrspace(1)*
  %159 = load <16 x double> addrspace(1)* %ptrTypeCast281.i, align 8
  %160 = fmul <16 x double> %159, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %161 = fadd <16 x double> %152, %160
  %162 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %163 = load i64* %162, align 8
  %164 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %165 = load i64* %164, align 8
  %166 = add i64 %163, %165
  %extract284.i = add i64 %166, 1216512
  %167 = getelementptr inbounds double addrspace(1)* %4, i64 %extract284.i
  %ptrTypeCast300.i = bitcast double addrspace(1)* %167 to <16 x double> addrspace(1)*
  %168 = load <16 x double> addrspace(1)* %ptrTypeCast300.i, align 8
  %169 = fadd <16 x double> %161, %168
  %170 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %171 = load i64* %170, align 8
  %172 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %173 = load i64* %172, align 8
  %174 = add i64 %171, %173
  %extract303.i = add i64 %174, 1658880
  %175 = getelementptr inbounds double addrspace(1)* %4, i64 %extract303.i
  %ptrTypeCast319.i = bitcast double addrspace(1)* %175 to <16 x double> addrspace(1)*
  %176 = load <16 x double> addrspace(1)* %ptrTypeCast319.i, align 8
  %177 = fmul <16 x double> %176, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %178 = fadd <16 x double> %169, %177
  %179 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %180 = load i64* %179, align 8
  %181 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %182 = load i64* %181, align 8
  %183 = add i64 %180, %182
  %extract322.i = add i64 %183, 1437696
  %184 = getelementptr inbounds double addrspace(1)* %4, i64 %extract322.i
  %ptrTypeCast338.i = bitcast double addrspace(1)* %184 to <16 x double> addrspace(1)*
  %185 = load <16 x double> addrspace(1)* %ptrTypeCast338.i, align 8
  %186 = fmul <16 x double> %185, <double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00>
  %187 = fadd <16 x double> %178, %186
  %188 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %189 = load i64* %188, align 8
  %190 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %191 = load i64* %190, align 8
  %192 = add i64 %189, %191
  %extract341.i = add i64 %192, 1548288
  %193 = getelementptr inbounds double addrspace(1)* %4, i64 %extract341.i
  %ptrTypeCast357.i = bitcast double addrspace(1)* %193 to <16 x double> addrspace(1)*
  %194 = load <16 x double> addrspace(1)* %ptrTypeCast357.i, align 8
  %195 = fmul <16 x double> %194, <double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00>
  %196 = fadd <16 x double> %187, %195
  %197 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %198 = load i64* %197, align 8
  %199 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %200 = load i64* %199, align 8
  %201 = add i64 %198, %200
  %202 = getelementptr inbounds double addrspace(1)* %4, i64 %201
  %ptrTypeCast376.i = bitcast double addrspace(1)* %202 to <16 x double> addrspace(1)*
  %203 = load <16 x double> addrspace(1)* %ptrTypeCast376.i, align 8
  %204 = fadd <16 x double> %58, %203
  %205 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %206 = load i64* %205, align 8
  %207 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %208 = load i64* %207, align 8
  %209 = add i64 %206, %208
  %extract379.i = add i64 %209, 552960
  %210 = getelementptr inbounds double addrspace(1)* %4, i64 %extract379.i
  %ptrTypeCast395.i = bitcast double addrspace(1)* %210 to <16 x double> addrspace(1)*
  %211 = load <16 x double> addrspace(1)* %ptrTypeCast395.i, align 8
  %212 = fmul <16 x double> %211, <double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00, double 5.000000e+00>
  %213 = fadd <16 x double> %204, %212
  %214 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %215 = load i64* %214, align 8
  %216 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %217 = load i64* %216, align 8
  %218 = add i64 %215, %217
  %extract398.i = add i64 %218, 995328
  %219 = getelementptr inbounds double addrspace(1)* %4, i64 %extract398.i
  %ptrTypeCast414.i = bitcast double addrspace(1)* %219 to <16 x double> addrspace(1)*
  %220 = load <16 x double> addrspace(1)* %ptrTypeCast414.i, align 8
  %221 = fadd <16 x double> %213, %220
  %222 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %223 = load i64* %222, align 8
  %224 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %225 = load i64* %224, align 8
  %226 = add i64 %223, %225
  %extract417.i = add i64 %226, 1105920
  %227 = getelementptr inbounds double addrspace(1)* %4, i64 %extract417.i
  %ptrTypeCast433.i = bitcast double addrspace(1)* %227 to <16 x double> addrspace(1)*
  %228 = load <16 x double> addrspace(1)* %ptrTypeCast433.i, align 8
  %229 = fmul <16 x double> %228, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %230 = fadd <16 x double> %221, %229
  %231 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %232 = load i64* %231, align 8
  %233 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %234 = load i64* %233, align 8
  %235 = add i64 %232, %234
  %extract436.i = add i64 %235, 1216512
  %236 = getelementptr inbounds double addrspace(1)* %4, i64 %extract436.i
  %ptrTypeCast452.i = bitcast double addrspace(1)* %236 to <16 x double> addrspace(1)*
  %237 = load <16 x double> addrspace(1)* %ptrTypeCast452.i, align 8
  %238 = fadd <16 x double> %230, %237
  %239 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %240 = load i64* %239, align 8
  %241 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %242 = load i64* %241, align 8
  %243 = add i64 %240, %242
  %extract455.i = add i64 %243, 1658880
  %244 = getelementptr inbounds double addrspace(1)* %4, i64 %extract455.i
  %ptrTypeCast471.i = bitcast double addrspace(1)* %244 to <16 x double> addrspace(1)*
  %245 = load <16 x double> addrspace(1)* %ptrTypeCast471.i, align 8
  %246 = fmul <16 x double> %245, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %247 = fadd <16 x double> %238, %246
  %248 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %249 = load i64* %248, align 8
  %250 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %251 = load i64* %250, align 8
  %252 = add i64 %249, %251
  %extract474.i = add i64 %252, 1437696
  %253 = getelementptr inbounds double addrspace(1)* %4, i64 %extract474.i
  %ptrTypeCast490.i = bitcast double addrspace(1)* %253 to <16 x double> addrspace(1)*
  %254 = load <16 x double> addrspace(1)* %ptrTypeCast490.i, align 8
  %255 = fmul <16 x double> %254, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %256 = fadd <16 x double> %247, %255
  %257 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %258 = load i64* %257, align 8
  %259 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %260 = load i64* %259, align 8
  %261 = add i64 %258, %260
  %extract493.i = add i64 %261, 1548288
  %262 = getelementptr inbounds double addrspace(1)* %4, i64 %extract493.i
  %ptrTypeCast509.i = bitcast double addrspace(1)* %262 to <16 x double> addrspace(1)*
  %263 = load <16 x double> addrspace(1)* %ptrTypeCast509.i, align 8
  %264 = fmul <16 x double> %263, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %265 = fadd <16 x double> %256, %264
  %266 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %267 = load i64* %266, align 8
  %268 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %269 = load i64* %268, align 8
  %270 = add i64 %267, %269
  %271 = getelementptr inbounds double addrspace(1)* %13, i64 %270
  %ptrTypeCast528.i = bitcast double addrspace(1)* %271 to <16 x double> addrspace(1)*
  %272 = load <16 x double> addrspace(1)* %ptrTypeCast528.i, align 8
  %273 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %274 = load i64* %273, align 8
  %275 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %276 = load i64* %275, align 8
  %277 = add i64 %274, %276
  %extract531.i = add i64 %277, 1658880
  %278 = getelementptr inbounds double addrspace(1)* %7, i64 %extract531.i
  %ptrTypeCast547.i = bitcast double addrspace(1)* %278 to <16 x double> addrspace(1)*
  %279 = load <16 x double> addrspace(1)* %ptrTypeCast547.i, align 8
  %280 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %279
  %281 = fmul <16 x double> %265, %280
  %282 = fmul <16 x double> %272, %281
  %extract548.i = extractelement <16 x double> %282, i32 0
  %extract549.i = extractelement <16 x double> %282, i32 1
  %extract550.i = extractelement <16 x double> %282, i32 2
  %extract551.i = extractelement <16 x double> %282, i32 3
  %extract552.i = extractelement <16 x double> %282, i32 4
  %extract553.i = extractelement <16 x double> %282, i32 5
  %extract554.i = extractelement <16 x double> %282, i32 6
  %extract555.i = extractelement <16 x double> %282, i32 7
  %extract556.i = extractelement <16 x double> %282, i32 8
  %extract557.i = extractelement <16 x double> %282, i32 9
  %extract558.i = extractelement <16 x double> %282, i32 10
  %extract559.i = extractelement <16 x double> %282, i32 11
  %extract560.i = extractelement <16 x double> %282, i32 12
  %extract561.i = extractelement <16 x double> %282, i32 13
  %extract562.i = extractelement <16 x double> %282, i32 14
  %extract563.i = extractelement <16 x double> %282, i32 15
  %283 = fadd <16 x double> %282, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %284 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %283
  %285 = fmul <16 x double> %282, %284
  %286 = call double @_Z4fmaxdd(double %extract548.i, double 1.000000e-200) nounwind
  %287 = call double @_Z4fmaxdd(double %extract549.i, double 1.000000e-200) nounwind
  %288 = call double @_Z4fmaxdd(double %extract550.i, double 1.000000e-200) nounwind
  %289 = call double @_Z4fmaxdd(double %extract551.i, double 1.000000e-200) nounwind
  %290 = call double @_Z4fmaxdd(double %extract552.i, double 1.000000e-200) nounwind
  %291 = call double @_Z4fmaxdd(double %extract553.i, double 1.000000e-200) nounwind
  %292 = call double @_Z4fmaxdd(double %extract554.i, double 1.000000e-200) nounwind
  %293 = call double @_Z4fmaxdd(double %extract555.i, double 1.000000e-200) nounwind
  %294 = call double @_Z4fmaxdd(double %extract556.i, double 1.000000e-200) nounwind
  %295 = call double @_Z4fmaxdd(double %extract557.i, double 1.000000e-200) nounwind
  %296 = call double @_Z4fmaxdd(double %extract558.i, double 1.000000e-200) nounwind
  %297 = call double @_Z4fmaxdd(double %extract559.i, double 1.000000e-200) nounwind
  %298 = call double @_Z4fmaxdd(double %extract560.i, double 1.000000e-200) nounwind
  %299 = call double @_Z4fmaxdd(double %extract561.i, double 1.000000e-200) nounwind
  %300 = call double @_Z4fmaxdd(double %extract562.i, double 1.000000e-200) nounwind
  %301 = call double @_Z4fmaxdd(double %extract563.i, double 1.000000e-200) nounwind
  %302 = call double @_Z5log10d(double %286) nounwind
  %303 = call double @_Z5log10d(double %287) nounwind
  %304 = call double @_Z5log10d(double %288) nounwind
  %305 = call double @_Z5log10d(double %289) nounwind
  %306 = call double @_Z5log10d(double %290) nounwind
  %307 = call double @_Z5log10d(double %291) nounwind
  %308 = call double @_Z5log10d(double %292) nounwind
  %309 = call double @_Z5log10d(double %293) nounwind
  %310 = call double @_Z5log10d(double %294) nounwind
  %311 = call double @_Z5log10d(double %295) nounwind
  %312 = call double @_Z5log10d(double %296) nounwind
  %313 = call double @_Z5log10d(double %297) nounwind
  %314 = call double @_Z5log10d(double %298) nounwind
  %315 = call double @_Z5log10d(double %299) nounwind
  %316 = call double @_Z5log10d(double %300) nounwind
  %317 = call double @_Z5log10d(double %301) nounwind
  %temp.vect691.i = insertelement <16 x double> undef, double %302, i32 0
  %temp.vect692.i = insertelement <16 x double> %temp.vect691.i, double %303, i32 1
  %temp.vect693.i = insertelement <16 x double> %temp.vect692.i, double %304, i32 2
  %temp.vect694.i = insertelement <16 x double> %temp.vect693.i, double %305, i32 3
  %temp.vect695.i = insertelement <16 x double> %temp.vect694.i, double %306, i32 4
  %temp.vect696.i = insertelement <16 x double> %temp.vect695.i, double %307, i32 5
  %temp.vect697.i = insertelement <16 x double> %temp.vect696.i, double %308, i32 6
  %temp.vect698.i = insertelement <16 x double> %temp.vect697.i, double %309, i32 7
  %temp.vect699.i = insertelement <16 x double> %temp.vect698.i, double %310, i32 8
  %temp.vect700.i = insertelement <16 x double> %temp.vect699.i, double %311, i32 9
  %temp.vect701.i = insertelement <16 x double> %temp.vect700.i, double %312, i32 10
  %temp.vect702.i = insertelement <16 x double> %temp.vect701.i, double %313, i32 11
  %temp.vect703.i = insertelement <16 x double> %temp.vect702.i, double %314, i32 12
  %temp.vect704.i = insertelement <16 x double> %temp.vect703.i, double %315, i32 13
  %temp.vect705.i = insertelement <16 x double> %temp.vect704.i, double %316, i32 14
  %temp.vect706.i = insertelement <16 x double> %temp.vect705.i, double %317, i32 15
  %318 = fmul <16 x double> %33, <double 0xBF85C9882B931057, double 0xBF85C9882B931057, double 0xBF85C9882B931057, double 0xBF85C9882B931057, double 0xBF85C9882B931057, double 0xBF85C9882B931057, double 0xBF85C9882B931057, double 0xBF85C9882B931057, double 0xBF85C9882B931057, double 0xBF85C9882B931057, double 0xBF85C9882B931057, double 0xBF85C9882B931057, double 0xBF85C9882B931057, double 0xBF85C9882B931057, double 0xBF85C9882B931057, double 0xBF85C9882B931057>
  %extract564.i = extractelement <16 x double> %318, i32 0
  %extract565.i = extractelement <16 x double> %318, i32 1
  %extract566.i = extractelement <16 x double> %318, i32 2
  %extract567.i = extractelement <16 x double> %318, i32 3
  %extract568.i = extractelement <16 x double> %318, i32 4
  %extract569.i = extractelement <16 x double> %318, i32 5
  %extract570.i = extractelement <16 x double> %318, i32 6
  %extract571.i = extractelement <16 x double> %318, i32 7
  %extract572.i = extractelement <16 x double> %318, i32 8
  %extract573.i = extractelement <16 x double> %318, i32 9
  %extract574.i = extractelement <16 x double> %318, i32 10
  %extract575.i = extractelement <16 x double> %318, i32 11
  %extract576.i = extractelement <16 x double> %318, i32 12
  %extract577.i = extractelement <16 x double> %318, i32 13
  %extract578.i = extractelement <16 x double> %318, i32 14
  %extract579.i = extractelement <16 x double> %318, i32 15
  %319 = call double @_Z3expd(double %extract564.i) nounwind
  %320 = call double @_Z3expd(double %extract565.i) nounwind
  %321 = call double @_Z3expd(double %extract566.i) nounwind
  %322 = call double @_Z3expd(double %extract567.i) nounwind
  %323 = call double @_Z3expd(double %extract568.i) nounwind
  %324 = call double @_Z3expd(double %extract569.i) nounwind
  %325 = call double @_Z3expd(double %extract570.i) nounwind
  %326 = call double @_Z3expd(double %extract571.i) nounwind
  %327 = call double @_Z3expd(double %extract572.i) nounwind
  %328 = call double @_Z3expd(double %extract573.i) nounwind
  %329 = call double @_Z3expd(double %extract574.i) nounwind
  %330 = call double @_Z3expd(double %extract575.i) nounwind
  %331 = call double @_Z3expd(double %extract576.i) nounwind
  %332 = call double @_Z3expd(double %extract577.i) nounwind
  %333 = call double @_Z3expd(double %extract578.i) nounwind
  %334 = call double @_Z3expd(double %extract579.i) nounwind
  %temp.vect.i = insertelement <16 x double> undef, double %319, i32 0
  %temp.vect580.i = insertelement <16 x double> %temp.vect.i, double %320, i32 1
  %temp.vect581.i = insertelement <16 x double> %temp.vect580.i, double %321, i32 2
  %temp.vect582.i = insertelement <16 x double> %temp.vect581.i, double %322, i32 3
  %temp.vect583.i = insertelement <16 x double> %temp.vect582.i, double %323, i32 4
  %temp.vect584.i = insertelement <16 x double> %temp.vect583.i, double %324, i32 5
  %temp.vect585.i = insertelement <16 x double> %temp.vect584.i, double %325, i32 6
  %temp.vect586.i = insertelement <16 x double> %temp.vect585.i, double %326, i32 7
  %temp.vect587.i = insertelement <16 x double> %temp.vect586.i, double %327, i32 8
  %temp.vect588.i = insertelement <16 x double> %temp.vect587.i, double %328, i32 9
  %temp.vect589.i = insertelement <16 x double> %temp.vect588.i, double %329, i32 10
  %temp.vect590.i = insertelement <16 x double> %temp.vect589.i, double %330, i32 11
  %temp.vect591.i = insertelement <16 x double> %temp.vect590.i, double %331, i32 12
  %temp.vect592.i = insertelement <16 x double> %temp.vect591.i, double %332, i32 13
  %temp.vect593.i = insertelement <16 x double> %temp.vect592.i, double %333, i32 14
  %temp.vect594.i = insertelement <16 x double> %temp.vect593.i, double %334, i32 15
  %335 = fmul <16 x double> %temp.vect594.i, <double 2.654000e-01, double 2.654000e-01, double 2.654000e-01, double 2.654000e-01, double 2.654000e-01, double 2.654000e-01, double 2.654000e-01, double 2.654000e-01, double 2.654000e-01, double 2.654000e-01, double 2.654000e-01, double 2.654000e-01, double 2.654000e-01, double 2.654000e-01, double 2.654000e-01, double 2.654000e-01>
  %336 = fmul <16 x double> %33, <double 0xBF42A91C92F3C105, double 0xBF42A91C92F3C105, double 0xBF42A91C92F3C105, double 0xBF42A91C92F3C105, double 0xBF42A91C92F3C105, double 0xBF42A91C92F3C105, double 0xBF42A91C92F3C105, double 0xBF42A91C92F3C105, double 0xBF42A91C92F3C105, double 0xBF42A91C92F3C105, double 0xBF42A91C92F3C105, double 0xBF42A91C92F3C105, double 0xBF42A91C92F3C105, double 0xBF42A91C92F3C105, double 0xBF42A91C92F3C105, double 0xBF42A91C92F3C105>
  %extract595.i = extractelement <16 x double> %336, i32 0
  %extract596.i = extractelement <16 x double> %336, i32 1
  %extract597.i = extractelement <16 x double> %336, i32 2
  %extract598.i = extractelement <16 x double> %336, i32 3
  %extract599.i = extractelement <16 x double> %336, i32 4
  %extract600.i = extractelement <16 x double> %336, i32 5
  %extract601.i = extractelement <16 x double> %336, i32 6
  %extract602.i = extractelement <16 x double> %336, i32 7
  %extract603.i = extractelement <16 x double> %336, i32 8
  %extract604.i = extractelement <16 x double> %336, i32 9
  %extract605.i = extractelement <16 x double> %336, i32 10
  %extract606.i = extractelement <16 x double> %336, i32 11
  %extract607.i = extractelement <16 x double> %336, i32 12
  %extract608.i = extractelement <16 x double> %336, i32 13
  %extract609.i = extractelement <16 x double> %336, i32 14
  %extract610.i = extractelement <16 x double> %336, i32 15
  %337 = call double @_Z3expd(double %extract595.i) nounwind
  %338 = call double @_Z3expd(double %extract596.i) nounwind
  %339 = call double @_Z3expd(double %extract597.i) nounwind
  %340 = call double @_Z3expd(double %extract598.i) nounwind
  %341 = call double @_Z3expd(double %extract599.i) nounwind
  %342 = call double @_Z3expd(double %extract600.i) nounwind
  %343 = call double @_Z3expd(double %extract601.i) nounwind
  %344 = call double @_Z3expd(double %extract602.i) nounwind
  %345 = call double @_Z3expd(double %extract603.i) nounwind
  %346 = call double @_Z3expd(double %extract604.i) nounwind
  %347 = call double @_Z3expd(double %extract605.i) nounwind
  %348 = call double @_Z3expd(double %extract606.i) nounwind
  %349 = call double @_Z3expd(double %extract607.i) nounwind
  %350 = call double @_Z3expd(double %extract608.i) nounwind
  %351 = call double @_Z3expd(double %extract609.i) nounwind
  %352 = call double @_Z3expd(double %extract610.i) nounwind
  %temp.vect611.i = insertelement <16 x double> undef, double %337, i32 0
  %temp.vect612.i = insertelement <16 x double> %temp.vect611.i, double %338, i32 1
  %temp.vect613.i = insertelement <16 x double> %temp.vect612.i, double %339, i32 2
  %temp.vect614.i = insertelement <16 x double> %temp.vect613.i, double %340, i32 3
  %temp.vect615.i = insertelement <16 x double> %temp.vect614.i, double %341, i32 4
  %temp.vect616.i = insertelement <16 x double> %temp.vect615.i, double %342, i32 5
  %temp.vect617.i = insertelement <16 x double> %temp.vect616.i, double %343, i32 6
  %temp.vect618.i = insertelement <16 x double> %temp.vect617.i, double %344, i32 7
  %temp.vect619.i = insertelement <16 x double> %temp.vect618.i, double %345, i32 8
  %temp.vect620.i = insertelement <16 x double> %temp.vect619.i, double %346, i32 9
  %temp.vect621.i = insertelement <16 x double> %temp.vect620.i, double %347, i32 10
  %temp.vect622.i = insertelement <16 x double> %temp.vect621.i, double %348, i32 11
  %temp.vect623.i = insertelement <16 x double> %temp.vect622.i, double %349, i32 12
  %temp.vect624.i = insertelement <16 x double> %temp.vect623.i, double %350, i32 13
  %temp.vect625.i = insertelement <16 x double> %temp.vect624.i, double %351, i32 14
  %temp.vect626.i = insertelement <16 x double> %temp.vect625.i, double %352, i32 15
  %353 = fmul <16 x double> %temp.vect626.i, <double 7.346000e-01, double 7.346000e-01, double 7.346000e-01, double 7.346000e-01, double 7.346000e-01, double 7.346000e-01, double 7.346000e-01, double 7.346000e-01, double 7.346000e-01, double 7.346000e-01, double 7.346000e-01, double 7.346000e-01, double 7.346000e-01, double 7.346000e-01, double 7.346000e-01, double 7.346000e-01>
  %354 = fadd <16 x double> %335, %353
  %355 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %33
  %356 = fmul <16 x double> %355, <double -5.182000e+03, double -5.182000e+03, double -5.182000e+03, double -5.182000e+03, double -5.182000e+03, double -5.182000e+03, double -5.182000e+03, double -5.182000e+03, double -5.182000e+03, double -5.182000e+03, double -5.182000e+03, double -5.182000e+03, double -5.182000e+03, double -5.182000e+03, double -5.182000e+03, double -5.182000e+03>
  %extract627.i = extractelement <16 x double> %356, i32 0
  %extract628.i = extractelement <16 x double> %356, i32 1
  %extract629.i = extractelement <16 x double> %356, i32 2
  %extract630.i = extractelement <16 x double> %356, i32 3
  %extract631.i = extractelement <16 x double> %356, i32 4
  %extract632.i = extractelement <16 x double> %356, i32 5
  %extract633.i = extractelement <16 x double> %356, i32 6
  %extract634.i = extractelement <16 x double> %356, i32 7
  %extract635.i = extractelement <16 x double> %356, i32 8
  %extract636.i = extractelement <16 x double> %356, i32 9
  %extract637.i = extractelement <16 x double> %356, i32 10
  %extract638.i = extractelement <16 x double> %356, i32 11
  %extract639.i = extractelement <16 x double> %356, i32 12
  %extract640.i = extractelement <16 x double> %356, i32 13
  %extract641.i = extractelement <16 x double> %356, i32 14
  %extract642.i = extractelement <16 x double> %356, i32 15
  %357 = call double @_Z3expd(double %extract627.i) nounwind
  %358 = call double @_Z3expd(double %extract628.i) nounwind
  %359 = call double @_Z3expd(double %extract629.i) nounwind
  %360 = call double @_Z3expd(double %extract630.i) nounwind
  %361 = call double @_Z3expd(double %extract631.i) nounwind
  %362 = call double @_Z3expd(double %extract632.i) nounwind
  %363 = call double @_Z3expd(double %extract633.i) nounwind
  %364 = call double @_Z3expd(double %extract634.i) nounwind
  %365 = call double @_Z3expd(double %extract635.i) nounwind
  %366 = call double @_Z3expd(double %extract636.i) nounwind
  %367 = call double @_Z3expd(double %extract637.i) nounwind
  %368 = call double @_Z3expd(double %extract638.i) nounwind
  %369 = call double @_Z3expd(double %extract639.i) nounwind
  %370 = call double @_Z3expd(double %extract640.i) nounwind
  %371 = call double @_Z3expd(double %extract641.i) nounwind
  %372 = call double @_Z3expd(double %extract642.i) nounwind
  %temp.vect643.i = insertelement <16 x double> undef, double %357, i32 0
  %temp.vect644.i = insertelement <16 x double> %temp.vect643.i, double %358, i32 1
  %temp.vect645.i = insertelement <16 x double> %temp.vect644.i, double %359, i32 2
  %temp.vect646.i = insertelement <16 x double> %temp.vect645.i, double %360, i32 3
  %temp.vect647.i = insertelement <16 x double> %temp.vect646.i, double %361, i32 4
  %temp.vect648.i = insertelement <16 x double> %temp.vect647.i, double %362, i32 5
  %temp.vect649.i = insertelement <16 x double> %temp.vect648.i, double %363, i32 6
  %temp.vect650.i = insertelement <16 x double> %temp.vect649.i, double %364, i32 7
  %temp.vect651.i = insertelement <16 x double> %temp.vect650.i, double %365, i32 8
  %temp.vect652.i = insertelement <16 x double> %temp.vect651.i, double %366, i32 9
  %temp.vect653.i = insertelement <16 x double> %temp.vect652.i, double %367, i32 10
  %temp.vect654.i = insertelement <16 x double> %temp.vect653.i, double %368, i32 11
  %temp.vect655.i = insertelement <16 x double> %temp.vect654.i, double %369, i32 12
  %temp.vect656.i = insertelement <16 x double> %temp.vect655.i, double %370, i32 13
  %temp.vect657.i = insertelement <16 x double> %temp.vect656.i, double %371, i32 14
  %temp.vect658.i = insertelement <16 x double> %temp.vect657.i, double %372, i32 15
  %373 = fadd <16 x double> %354, %temp.vect658.i
  %extract659.i = extractelement <16 x double> %373, i32 0
  %extract660.i = extractelement <16 x double> %373, i32 1
  %extract661.i = extractelement <16 x double> %373, i32 2
  %extract662.i = extractelement <16 x double> %373, i32 3
  %extract663.i = extractelement <16 x double> %373, i32 4
  %extract664.i = extractelement <16 x double> %373, i32 5
  %extract665.i = extractelement <16 x double> %373, i32 6
  %extract666.i = extractelement <16 x double> %373, i32 7
  %extract667.i = extractelement <16 x double> %373, i32 8
  %extract668.i = extractelement <16 x double> %373, i32 9
  %extract669.i = extractelement <16 x double> %373, i32 10
  %extract670.i = extractelement <16 x double> %373, i32 11
  %extract671.i = extractelement <16 x double> %373, i32 12
  %extract672.i = extractelement <16 x double> %373, i32 13
  %extract673.i = extractelement <16 x double> %373, i32 14
  %extract674.i = extractelement <16 x double> %373, i32 15
  %374 = call double @_Z4fmaxdd(double %extract659.i, double 1.000000e-200) nounwind
  %375 = call double @_Z4fmaxdd(double %extract660.i, double 1.000000e-200) nounwind
  %376 = call double @_Z4fmaxdd(double %extract661.i, double 1.000000e-200) nounwind
  %377 = call double @_Z4fmaxdd(double %extract662.i, double 1.000000e-200) nounwind
  %378 = call double @_Z4fmaxdd(double %extract663.i, double 1.000000e-200) nounwind
  %379 = call double @_Z4fmaxdd(double %extract664.i, double 1.000000e-200) nounwind
  %380 = call double @_Z4fmaxdd(double %extract665.i, double 1.000000e-200) nounwind
  %381 = call double @_Z4fmaxdd(double %extract666.i, double 1.000000e-200) nounwind
  %382 = call double @_Z4fmaxdd(double %extract667.i, double 1.000000e-200) nounwind
  %383 = call double @_Z4fmaxdd(double %extract668.i, double 1.000000e-200) nounwind
  %384 = call double @_Z4fmaxdd(double %extract669.i, double 1.000000e-200) nounwind
  %385 = call double @_Z4fmaxdd(double %extract670.i, double 1.000000e-200) nounwind
  %386 = call double @_Z4fmaxdd(double %extract671.i, double 1.000000e-200) nounwind
  %387 = call double @_Z4fmaxdd(double %extract672.i, double 1.000000e-200) nounwind
  %388 = call double @_Z4fmaxdd(double %extract673.i, double 1.000000e-200) nounwind
  %389 = call double @_Z4fmaxdd(double %extract674.i, double 1.000000e-200) nounwind
  %390 = call double @_Z5log10d(double %374) nounwind
  %391 = call double @_Z5log10d(double %375) nounwind
  %392 = call double @_Z5log10d(double %376) nounwind
  %393 = call double @_Z5log10d(double %377) nounwind
  %394 = call double @_Z5log10d(double %378) nounwind
  %395 = call double @_Z5log10d(double %379) nounwind
  %396 = call double @_Z5log10d(double %380) nounwind
  %397 = call double @_Z5log10d(double %381) nounwind
  %398 = call double @_Z5log10d(double %382) nounwind
  %399 = call double @_Z5log10d(double %383) nounwind
  %400 = call double @_Z5log10d(double %384) nounwind
  %401 = call double @_Z5log10d(double %385) nounwind
  %402 = call double @_Z5log10d(double %386) nounwind
  %403 = call double @_Z5log10d(double %387) nounwind
  %404 = call double @_Z5log10d(double %388) nounwind
  %405 = call double @_Z5log10d(double %389) nounwind
  %temp.vect675.i = insertelement <16 x double> undef, double %390, i32 0
  %temp.vect676.i = insertelement <16 x double> %temp.vect675.i, double %391, i32 1
  %temp.vect677.i = insertelement <16 x double> %temp.vect676.i, double %392, i32 2
  %temp.vect678.i = insertelement <16 x double> %temp.vect677.i, double %393, i32 3
  %temp.vect679.i = insertelement <16 x double> %temp.vect678.i, double %394, i32 4
  %temp.vect680.i = insertelement <16 x double> %temp.vect679.i, double %395, i32 5
  %temp.vect681.i = insertelement <16 x double> %temp.vect680.i, double %396, i32 6
  %temp.vect682.i = insertelement <16 x double> %temp.vect681.i, double %397, i32 7
  %temp.vect683.i = insertelement <16 x double> %temp.vect682.i, double %398, i32 8
  %temp.vect684.i = insertelement <16 x double> %temp.vect683.i, double %399, i32 9
  %temp.vect685.i = insertelement <16 x double> %temp.vect684.i, double %400, i32 10
  %temp.vect686.i = insertelement <16 x double> %temp.vect685.i, double %401, i32 11
  %temp.vect687.i = insertelement <16 x double> %temp.vect686.i, double %402, i32 12
  %temp.vect688.i = insertelement <16 x double> %temp.vect687.i, double %403, i32 13
  %temp.vect689.i = insertelement <16 x double> %temp.vect688.i, double %404, i32 14
  %temp.vect690.i = insertelement <16 x double> %temp.vect689.i, double %405, i32 15
  %406 = fmul <16 x double> %temp.vect690.i, <double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00>
  %407 = fsub <16 x double> <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>, %406
  %408 = fmul <16 x double> %temp.vect690.i, <double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01>
  %409 = fadd <16 x double> %408, <double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01>
  %410 = fsub <16 x double> %temp.vect706.i, %409
  %411 = fmul <16 x double> %410, <double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01>
  %412 = fsub <16 x double> %407, %411
  %413 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %412
  %414 = fmul <16 x double> %410, %413
  %415 = fmul <16 x double> %414, %414
  %416 = fadd <16 x double> %415, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %417 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %416
  %418 = fmul <16 x double> %temp.vect690.i, %417
  %extract707.i = extractelement <16 x double> %418, i32 0
  %extract708.i = extractelement <16 x double> %418, i32 1
  %extract709.i = extractelement <16 x double> %418, i32 2
  %extract710.i = extractelement <16 x double> %418, i32 3
  %extract711.i = extractelement <16 x double> %418, i32 4
  %extract712.i = extractelement <16 x double> %418, i32 5
  %extract713.i = extractelement <16 x double> %418, i32 6
  %extract714.i = extractelement <16 x double> %418, i32 7
  %extract715.i = extractelement <16 x double> %418, i32 8
  %extract716.i = extractelement <16 x double> %418, i32 9
  %extract717.i = extractelement <16 x double> %418, i32 10
  %extract718.i = extractelement <16 x double> %418, i32 11
  %extract719.i = extractelement <16 x double> %418, i32 12
  %extract720.i = extractelement <16 x double> %418, i32 13
  %extract721.i = extractelement <16 x double> %418, i32 14
  %extract722.i = extractelement <16 x double> %418, i32 15
  %419 = call double @_Z5exp10d(double %extract707.i) nounwind
  %420 = call double @_Z5exp10d(double %extract708.i) nounwind
  %421 = call double @_Z5exp10d(double %extract709.i) nounwind
  %422 = call double @_Z5exp10d(double %extract710.i) nounwind
  %423 = call double @_Z5exp10d(double %extract711.i) nounwind
  %424 = call double @_Z5exp10d(double %extract712.i) nounwind
  %425 = call double @_Z5exp10d(double %extract713.i) nounwind
  %426 = call double @_Z5exp10d(double %extract714.i) nounwind
  %427 = call double @_Z5exp10d(double %extract715.i) nounwind
  %428 = call double @_Z5exp10d(double %extract716.i) nounwind
  %429 = call double @_Z5exp10d(double %extract717.i) nounwind
  %430 = call double @_Z5exp10d(double %extract718.i) nounwind
  %431 = call double @_Z5exp10d(double %extract719.i) nounwind
  %432 = call double @_Z5exp10d(double %extract720.i) nounwind
  %433 = call double @_Z5exp10d(double %extract721.i) nounwind
  %434 = call double @_Z5exp10d(double %extract722.i) nounwind
  %temp.vect723.i = insertelement <16 x double> undef, double %419, i32 0
  %temp.vect724.i = insertelement <16 x double> %temp.vect723.i, double %420, i32 1
  %temp.vect725.i = insertelement <16 x double> %temp.vect724.i, double %421, i32 2
  %temp.vect726.i = insertelement <16 x double> %temp.vect725.i, double %422, i32 3
  %temp.vect727.i = insertelement <16 x double> %temp.vect726.i, double %423, i32 4
  %temp.vect728.i = insertelement <16 x double> %temp.vect727.i, double %424, i32 5
  %temp.vect729.i = insertelement <16 x double> %temp.vect728.i, double %425, i32 6
  %temp.vect730.i = insertelement <16 x double> %temp.vect729.i, double %426, i32 7
  %temp.vect731.i = insertelement <16 x double> %temp.vect730.i, double %427, i32 8
  %temp.vect732.i = insertelement <16 x double> %temp.vect731.i, double %428, i32 9
  %temp.vect733.i = insertelement <16 x double> %temp.vect732.i, double %429, i32 10
  %temp.vect734.i = insertelement <16 x double> %temp.vect733.i, double %430, i32 11
  %temp.vect735.i = insertelement <16 x double> %temp.vect734.i, double %431, i32 12
  %temp.vect736.i = insertelement <16 x double> %temp.vect735.i, double %432, i32 13
  %temp.vect737.i = insertelement <16 x double> %temp.vect736.i, double %433, i32 14
  %temp.vect738.i = insertelement <16 x double> %temp.vect737.i, double %434, i32 15
  %435 = fmul <16 x double> %temp.vect738.i, %285
  %436 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %437 = load i64* %436, align 8
  %438 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %439 = load i64* %438, align 8
  %440 = add i64 %437, %439
  %extract741.i = add i64 %440, 1658880
  %441 = getelementptr inbounds double addrspace(1)* %7, i64 %extract741.i
  %ptrTypeCast757.i = bitcast double addrspace(1)* %441 to <16 x double> addrspace(1)*
  %442 = load <16 x double> addrspace(1)* %ptrTypeCast757.i, align 8
  %443 = fmul <16 x double> %442, %435
  %444 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %445 = load i64* %444, align 8
  %446 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %447 = load i64* %446, align 8
  %448 = add i64 %445, %447
  %extract760.i = add i64 %448, 1658880
  %449 = getelementptr inbounds double addrspace(1)* %7, i64 %extract760.i
  %ptrTypeCast776.i = bitcast double addrspace(1)* %449 to <16 x double> addrspace(1)*
  store <16 x double> %443, <16 x double> addrspace(1)* %ptrTypeCast776.i, align 8
  %450 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %451 = load i64* %450, align 8
  %452 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %453 = load i64* %452, align 8
  %454 = add i64 %451, %453
  %extract779.i = add i64 %454, 1658880
  %455 = getelementptr inbounds double addrspace(1)* %10, i64 %extract779.i
  %ptrTypeCast795.i = bitcast double addrspace(1)* %455 to <16 x double> addrspace(1)*
  %456 = load <16 x double> addrspace(1)* %ptrTypeCast795.i, align 8
  %457 = fmul <16 x double> %456, %435
  %458 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %459 = load i64* %458, align 8
  %460 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %461 = load i64* %460, align 8
  %462 = add i64 %459, %461
  %extract798.i = add i64 %462, 1658880
  %463 = getelementptr inbounds double addrspace(1)* %10, i64 %extract798.i
  %ptrTypeCast814.i = bitcast double addrspace(1)* %463 to <16 x double> addrspace(1)*
  store <16 x double> %457, <16 x double> addrspace(1)* %ptrTypeCast814.i, align 8
  %464 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %465 = load i64* %464, align 8
  %466 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %467 = load i64* %466, align 8
  %468 = add i64 %465, %467
  %extract817.i = add i64 %468, 110592
  %469 = getelementptr inbounds double addrspace(1)* %13, i64 %extract817.i
  %ptrTypeCast833.i = bitcast double addrspace(1)* %469 to <16 x double> addrspace(1)*
  %470 = load <16 x double> addrspace(1)* %ptrTypeCast833.i, align 8
  %471 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %472 = load i64* %471, align 8
  %473 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %474 = load i64* %473, align 8
  %475 = add i64 %472, %474
  %extract836.i = add i64 %475, 3317760
  %476 = getelementptr inbounds double addrspace(1)* %7, i64 %extract836.i
  %ptrTypeCast852.i = bitcast double addrspace(1)* %476 to <16 x double> addrspace(1)*
  %477 = load <16 x double> addrspace(1)* %ptrTypeCast852.i, align 8
  %478 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %477
  %479 = fmul <16 x double> %127, %478
  %480 = fmul <16 x double> %470, %479
  %extract853.i = extractelement <16 x double> %480, i32 0
  %extract854.i = extractelement <16 x double> %480, i32 1
  %extract855.i = extractelement <16 x double> %480, i32 2
  %extract856.i = extractelement <16 x double> %480, i32 3
  %extract857.i = extractelement <16 x double> %480, i32 4
  %extract858.i = extractelement <16 x double> %480, i32 5
  %extract859.i = extractelement <16 x double> %480, i32 6
  %extract860.i = extractelement <16 x double> %480, i32 7
  %extract861.i = extractelement <16 x double> %480, i32 8
  %extract862.i = extractelement <16 x double> %480, i32 9
  %extract863.i = extractelement <16 x double> %480, i32 10
  %extract864.i = extractelement <16 x double> %480, i32 11
  %extract865.i = extractelement <16 x double> %480, i32 12
  %extract866.i = extractelement <16 x double> %480, i32 13
  %extract867.i = extractelement <16 x double> %480, i32 14
  %extract868.i = extractelement <16 x double> %480, i32 15
  %481 = fadd <16 x double> %480, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %482 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %481
  %483 = fmul <16 x double> %480, %482
  %484 = call double @_Z4fmaxdd(double %extract853.i, double 1.000000e-200) nounwind
  %485 = call double @_Z4fmaxdd(double %extract854.i, double 1.000000e-200) nounwind
  %486 = call double @_Z4fmaxdd(double %extract855.i, double 1.000000e-200) nounwind
  %487 = call double @_Z4fmaxdd(double %extract856.i, double 1.000000e-200) nounwind
  %488 = call double @_Z4fmaxdd(double %extract857.i, double 1.000000e-200) nounwind
  %489 = call double @_Z4fmaxdd(double %extract858.i, double 1.000000e-200) nounwind
  %490 = call double @_Z4fmaxdd(double %extract859.i, double 1.000000e-200) nounwind
  %491 = call double @_Z4fmaxdd(double %extract860.i, double 1.000000e-200) nounwind
  %492 = call double @_Z4fmaxdd(double %extract861.i, double 1.000000e-200) nounwind
  %493 = call double @_Z4fmaxdd(double %extract862.i, double 1.000000e-200) nounwind
  %494 = call double @_Z4fmaxdd(double %extract863.i, double 1.000000e-200) nounwind
  %495 = call double @_Z4fmaxdd(double %extract864.i, double 1.000000e-200) nounwind
  %496 = call double @_Z4fmaxdd(double %extract865.i, double 1.000000e-200) nounwind
  %497 = call double @_Z4fmaxdd(double %extract866.i, double 1.000000e-200) nounwind
  %498 = call double @_Z4fmaxdd(double %extract867.i, double 1.000000e-200) nounwind
  %499 = call double @_Z4fmaxdd(double %extract868.i, double 1.000000e-200) nounwind
  %500 = call double @_Z5log10d(double %484) nounwind
  %501 = call double @_Z5log10d(double %485) nounwind
  %502 = call double @_Z5log10d(double %486) nounwind
  %503 = call double @_Z5log10d(double %487) nounwind
  %504 = call double @_Z5log10d(double %488) nounwind
  %505 = call double @_Z5log10d(double %489) nounwind
  %506 = call double @_Z5log10d(double %490) nounwind
  %507 = call double @_Z5log10d(double %491) nounwind
  %508 = call double @_Z5log10d(double %492) nounwind
  %509 = call double @_Z5log10d(double %493) nounwind
  %510 = call double @_Z5log10d(double %494) nounwind
  %511 = call double @_Z5log10d(double %495) nounwind
  %512 = call double @_Z5log10d(double %496) nounwind
  %513 = call double @_Z5log10d(double %497) nounwind
  %514 = call double @_Z5log10d(double %498) nounwind
  %515 = call double @_Z5log10d(double %499) nounwind
  %temp.vect997.i = insertelement <16 x double> undef, double %500, i32 0
  %temp.vect998.i = insertelement <16 x double> %temp.vect997.i, double %501, i32 1
  %temp.vect999.i = insertelement <16 x double> %temp.vect998.i, double %502, i32 2
  %temp.vect1000.i = insertelement <16 x double> %temp.vect999.i, double %503, i32 3
  %temp.vect1001.i = insertelement <16 x double> %temp.vect1000.i, double %504, i32 4
  %temp.vect1002.i = insertelement <16 x double> %temp.vect1001.i, double %505, i32 5
  %temp.vect1003.i = insertelement <16 x double> %temp.vect1002.i, double %506, i32 6
  %temp.vect1004.i = insertelement <16 x double> %temp.vect1003.i, double %507, i32 7
  %temp.vect1005.i = insertelement <16 x double> %temp.vect1004.i, double %508, i32 8
  %temp.vect1006.i = insertelement <16 x double> %temp.vect1005.i, double %509, i32 9
  %temp.vect1007.i = insertelement <16 x double> %temp.vect1006.i, double %510, i32 10
  %temp.vect1008.i = insertelement <16 x double> %temp.vect1007.i, double %511, i32 11
  %temp.vect1009.i = insertelement <16 x double> %temp.vect1008.i, double %512, i32 12
  %temp.vect1010.i = insertelement <16 x double> %temp.vect1009.i, double %513, i32 13
  %temp.vect1011.i = insertelement <16 x double> %temp.vect1010.i, double %514, i32 14
  %temp.vect1012.i = insertelement <16 x double> %temp.vect1011.i, double %515, i32 15
  %516 = fmul <16 x double> %33, <double 0xBF74CAB88725AF6E, double 0xBF74CAB88725AF6E, double 0xBF74CAB88725AF6E, double 0xBF74CAB88725AF6E, double 0xBF74CAB88725AF6E, double 0xBF74CAB88725AF6E, double 0xBF74CAB88725AF6E, double 0xBF74CAB88725AF6E, double 0xBF74CAB88725AF6E, double 0xBF74CAB88725AF6E, double 0xBF74CAB88725AF6E, double 0xBF74CAB88725AF6E, double 0xBF74CAB88725AF6E, double 0xBF74CAB88725AF6E, double 0xBF74CAB88725AF6E, double 0xBF74CAB88725AF6E>
  %extract869.i = extractelement <16 x double> %516, i32 0
  %extract870.i = extractelement <16 x double> %516, i32 1
  %extract871.i = extractelement <16 x double> %516, i32 2
  %extract872.i = extractelement <16 x double> %516, i32 3
  %extract873.i = extractelement <16 x double> %516, i32 4
  %extract874.i = extractelement <16 x double> %516, i32 5
  %extract875.i = extractelement <16 x double> %516, i32 6
  %extract876.i = extractelement <16 x double> %516, i32 7
  %extract877.i = extractelement <16 x double> %516, i32 8
  %extract878.i = extractelement <16 x double> %516, i32 9
  %extract879.i = extractelement <16 x double> %516, i32 10
  %extract880.i = extractelement <16 x double> %516, i32 11
  %extract881.i = extractelement <16 x double> %516, i32 12
  %extract882.i = extractelement <16 x double> %516, i32 13
  %extract883.i = extractelement <16 x double> %516, i32 14
  %extract884.i = extractelement <16 x double> %516, i32 15
  %517 = call double @_Z3expd(double %extract869.i) nounwind
  %518 = call double @_Z3expd(double %extract870.i) nounwind
  %519 = call double @_Z3expd(double %extract871.i) nounwind
  %520 = call double @_Z3expd(double %extract872.i) nounwind
  %521 = call double @_Z3expd(double %extract873.i) nounwind
  %522 = call double @_Z3expd(double %extract874.i) nounwind
  %523 = call double @_Z3expd(double %extract875.i) nounwind
  %524 = call double @_Z3expd(double %extract876.i) nounwind
  %525 = call double @_Z3expd(double %extract877.i) nounwind
  %526 = call double @_Z3expd(double %extract878.i) nounwind
  %527 = call double @_Z3expd(double %extract879.i) nounwind
  %528 = call double @_Z3expd(double %extract880.i) nounwind
  %529 = call double @_Z3expd(double %extract881.i) nounwind
  %530 = call double @_Z3expd(double %extract882.i) nounwind
  %531 = call double @_Z3expd(double %extract883.i) nounwind
  %532 = call double @_Z3expd(double %extract884.i) nounwind
  %temp.vect885.i = insertelement <16 x double> undef, double %517, i32 0
  %temp.vect886.i = insertelement <16 x double> %temp.vect885.i, double %518, i32 1
  %temp.vect887.i = insertelement <16 x double> %temp.vect886.i, double %519, i32 2
  %temp.vect888.i = insertelement <16 x double> %temp.vect887.i, double %520, i32 3
  %temp.vect889.i = insertelement <16 x double> %temp.vect888.i, double %521, i32 4
  %temp.vect890.i = insertelement <16 x double> %temp.vect889.i, double %522, i32 5
  %temp.vect891.i = insertelement <16 x double> %temp.vect890.i, double %523, i32 6
  %temp.vect892.i = insertelement <16 x double> %temp.vect891.i, double %524, i32 7
  %temp.vect893.i = insertelement <16 x double> %temp.vect892.i, double %525, i32 8
  %temp.vect894.i = insertelement <16 x double> %temp.vect893.i, double %526, i32 9
  %temp.vect895.i = insertelement <16 x double> %temp.vect894.i, double %527, i32 10
  %temp.vect896.i = insertelement <16 x double> %temp.vect895.i, double %528, i32 11
  %temp.vect897.i = insertelement <16 x double> %temp.vect896.i, double %529, i32 12
  %temp.vect898.i = insertelement <16 x double> %temp.vect897.i, double %530, i32 13
  %temp.vect899.i = insertelement <16 x double> %temp.vect898.i, double %531, i32 14
  %temp.vect900.i = insertelement <16 x double> %temp.vect899.i, double %532, i32 15
  %533 = fmul <16 x double> %temp.vect900.i, <double 6.800000e-02, double 6.800000e-02, double 6.800000e-02, double 6.800000e-02, double 6.800000e-02, double 6.800000e-02, double 6.800000e-02, double 6.800000e-02, double 6.800000e-02, double 6.800000e-02, double 6.800000e-02, double 6.800000e-02, double 6.800000e-02, double 6.800000e-02, double 6.800000e-02, double 6.800000e-02>
  %534 = fmul <16 x double> %33, <double 0xBF454725E6BB82FE, double 0xBF454725E6BB82FE, double 0xBF454725E6BB82FE, double 0xBF454725E6BB82FE, double 0xBF454725E6BB82FE, double 0xBF454725E6BB82FE, double 0xBF454725E6BB82FE, double 0xBF454725E6BB82FE, double 0xBF454725E6BB82FE, double 0xBF454725E6BB82FE, double 0xBF454725E6BB82FE, double 0xBF454725E6BB82FE, double 0xBF454725E6BB82FE, double 0xBF454725E6BB82FE, double 0xBF454725E6BB82FE, double 0xBF454725E6BB82FE>
  %extract901.i = extractelement <16 x double> %534, i32 0
  %extract902.i = extractelement <16 x double> %534, i32 1
  %extract903.i = extractelement <16 x double> %534, i32 2
  %extract904.i = extractelement <16 x double> %534, i32 3
  %extract905.i = extractelement <16 x double> %534, i32 4
  %extract906.i = extractelement <16 x double> %534, i32 5
  %extract907.i = extractelement <16 x double> %534, i32 6
  %extract908.i = extractelement <16 x double> %534, i32 7
  %extract909.i = extractelement <16 x double> %534, i32 8
  %extract910.i = extractelement <16 x double> %534, i32 9
  %extract911.i = extractelement <16 x double> %534, i32 10
  %extract912.i = extractelement <16 x double> %534, i32 11
  %extract913.i = extractelement <16 x double> %534, i32 12
  %extract914.i = extractelement <16 x double> %534, i32 13
  %extract915.i = extractelement <16 x double> %534, i32 14
  %extract916.i = extractelement <16 x double> %534, i32 15
  %535 = call double @_Z3expd(double %extract901.i) nounwind
  %536 = call double @_Z3expd(double %extract902.i) nounwind
  %537 = call double @_Z3expd(double %extract903.i) nounwind
  %538 = call double @_Z3expd(double %extract904.i) nounwind
  %539 = call double @_Z3expd(double %extract905.i) nounwind
  %540 = call double @_Z3expd(double %extract906.i) nounwind
  %541 = call double @_Z3expd(double %extract907.i) nounwind
  %542 = call double @_Z3expd(double %extract908.i) nounwind
  %543 = call double @_Z3expd(double %extract909.i) nounwind
  %544 = call double @_Z3expd(double %extract910.i) nounwind
  %545 = call double @_Z3expd(double %extract911.i) nounwind
  %546 = call double @_Z3expd(double %extract912.i) nounwind
  %547 = call double @_Z3expd(double %extract913.i) nounwind
  %548 = call double @_Z3expd(double %extract914.i) nounwind
  %549 = call double @_Z3expd(double %extract915.i) nounwind
  %550 = call double @_Z3expd(double %extract916.i) nounwind
  %temp.vect917.i = insertelement <16 x double> undef, double %535, i32 0
  %temp.vect918.i = insertelement <16 x double> %temp.vect917.i, double %536, i32 1
  %temp.vect919.i = insertelement <16 x double> %temp.vect918.i, double %537, i32 2
  %temp.vect920.i = insertelement <16 x double> %temp.vect919.i, double %538, i32 3
  %temp.vect921.i = insertelement <16 x double> %temp.vect920.i, double %539, i32 4
  %temp.vect922.i = insertelement <16 x double> %temp.vect921.i, double %540, i32 5
  %temp.vect923.i = insertelement <16 x double> %temp.vect922.i, double %541, i32 6
  %temp.vect924.i = insertelement <16 x double> %temp.vect923.i, double %542, i32 7
  %temp.vect925.i = insertelement <16 x double> %temp.vect924.i, double %543, i32 8
  %temp.vect926.i = insertelement <16 x double> %temp.vect925.i, double %544, i32 9
  %temp.vect927.i = insertelement <16 x double> %temp.vect926.i, double %545, i32 10
  %temp.vect928.i = insertelement <16 x double> %temp.vect927.i, double %546, i32 11
  %temp.vect929.i = insertelement <16 x double> %temp.vect928.i, double %547, i32 12
  %temp.vect930.i = insertelement <16 x double> %temp.vect929.i, double %548, i32 13
  %temp.vect931.i = insertelement <16 x double> %temp.vect930.i, double %549, i32 14
  %temp.vect932.i = insertelement <16 x double> %temp.vect931.i, double %550, i32 15
  %551 = fmul <16 x double> %temp.vect932.i, <double 9.320000e-01, double 9.320000e-01, double 9.320000e-01, double 9.320000e-01, double 9.320000e-01, double 9.320000e-01, double 9.320000e-01, double 9.320000e-01, double 9.320000e-01, double 9.320000e-01, double 9.320000e-01, double 9.320000e-01, double 9.320000e-01, double 9.320000e-01, double 9.320000e-01, double 9.320000e-01>
  %552 = fadd <16 x double> %533, %551
  %553 = fmul <16 x double> %355, <double -1.030000e+04, double -1.030000e+04, double -1.030000e+04, double -1.030000e+04, double -1.030000e+04, double -1.030000e+04, double -1.030000e+04, double -1.030000e+04, double -1.030000e+04, double -1.030000e+04, double -1.030000e+04, double -1.030000e+04, double -1.030000e+04, double -1.030000e+04, double -1.030000e+04, double -1.030000e+04>
  %extract933.i = extractelement <16 x double> %553, i32 0
  %extract934.i = extractelement <16 x double> %553, i32 1
  %extract935.i = extractelement <16 x double> %553, i32 2
  %extract936.i = extractelement <16 x double> %553, i32 3
  %extract937.i = extractelement <16 x double> %553, i32 4
  %extract938.i = extractelement <16 x double> %553, i32 5
  %extract939.i = extractelement <16 x double> %553, i32 6
  %extract940.i = extractelement <16 x double> %553, i32 7
  %extract941.i = extractelement <16 x double> %553, i32 8
  %extract942.i = extractelement <16 x double> %553, i32 9
  %extract943.i = extractelement <16 x double> %553, i32 10
  %extract944.i = extractelement <16 x double> %553, i32 11
  %extract945.i = extractelement <16 x double> %553, i32 12
  %extract946.i = extractelement <16 x double> %553, i32 13
  %extract947.i = extractelement <16 x double> %553, i32 14
  %extract948.i = extractelement <16 x double> %553, i32 15
  %554 = call double @_Z3expd(double %extract933.i) nounwind
  %555 = call double @_Z3expd(double %extract934.i) nounwind
  %556 = call double @_Z3expd(double %extract935.i) nounwind
  %557 = call double @_Z3expd(double %extract936.i) nounwind
  %558 = call double @_Z3expd(double %extract937.i) nounwind
  %559 = call double @_Z3expd(double %extract938.i) nounwind
  %560 = call double @_Z3expd(double %extract939.i) nounwind
  %561 = call double @_Z3expd(double %extract940.i) nounwind
  %562 = call double @_Z3expd(double %extract941.i) nounwind
  %563 = call double @_Z3expd(double %extract942.i) nounwind
  %564 = call double @_Z3expd(double %extract943.i) nounwind
  %565 = call double @_Z3expd(double %extract944.i) nounwind
  %566 = call double @_Z3expd(double %extract945.i) nounwind
  %567 = call double @_Z3expd(double %extract946.i) nounwind
  %568 = call double @_Z3expd(double %extract947.i) nounwind
  %569 = call double @_Z3expd(double %extract948.i) nounwind
  %temp.vect949.i = insertelement <16 x double> undef, double %554, i32 0
  %temp.vect950.i = insertelement <16 x double> %temp.vect949.i, double %555, i32 1
  %temp.vect951.i = insertelement <16 x double> %temp.vect950.i, double %556, i32 2
  %temp.vect952.i = insertelement <16 x double> %temp.vect951.i, double %557, i32 3
  %temp.vect953.i = insertelement <16 x double> %temp.vect952.i, double %558, i32 4
  %temp.vect954.i = insertelement <16 x double> %temp.vect953.i, double %559, i32 5
  %temp.vect955.i = insertelement <16 x double> %temp.vect954.i, double %560, i32 6
  %temp.vect956.i = insertelement <16 x double> %temp.vect955.i, double %561, i32 7
  %temp.vect957.i = insertelement <16 x double> %temp.vect956.i, double %562, i32 8
  %temp.vect958.i = insertelement <16 x double> %temp.vect957.i, double %563, i32 9
  %temp.vect959.i = insertelement <16 x double> %temp.vect958.i, double %564, i32 10
  %temp.vect960.i = insertelement <16 x double> %temp.vect959.i, double %565, i32 11
  %temp.vect961.i = insertelement <16 x double> %temp.vect960.i, double %566, i32 12
  %temp.vect962.i = insertelement <16 x double> %temp.vect961.i, double %567, i32 13
  %temp.vect963.i = insertelement <16 x double> %temp.vect962.i, double %568, i32 14
  %temp.vect964.i = insertelement <16 x double> %temp.vect963.i, double %569, i32 15
  %570 = fadd <16 x double> %552, %temp.vect964.i
  %extract965.i = extractelement <16 x double> %570, i32 0
  %extract966.i = extractelement <16 x double> %570, i32 1
  %extract967.i = extractelement <16 x double> %570, i32 2
  %extract968.i = extractelement <16 x double> %570, i32 3
  %extract969.i = extractelement <16 x double> %570, i32 4
  %extract970.i = extractelement <16 x double> %570, i32 5
  %extract971.i = extractelement <16 x double> %570, i32 6
  %extract972.i = extractelement <16 x double> %570, i32 7
  %extract973.i = extractelement <16 x double> %570, i32 8
  %extract974.i = extractelement <16 x double> %570, i32 9
  %extract975.i = extractelement <16 x double> %570, i32 10
  %extract976.i = extractelement <16 x double> %570, i32 11
  %extract977.i = extractelement <16 x double> %570, i32 12
  %extract978.i = extractelement <16 x double> %570, i32 13
  %extract979.i = extractelement <16 x double> %570, i32 14
  %extract980.i = extractelement <16 x double> %570, i32 15
  %571 = call double @_Z4fmaxdd(double %extract965.i, double 1.000000e-200) nounwind
  %572 = call double @_Z4fmaxdd(double %extract966.i, double 1.000000e-200) nounwind
  %573 = call double @_Z4fmaxdd(double %extract967.i, double 1.000000e-200) nounwind
  %574 = call double @_Z4fmaxdd(double %extract968.i, double 1.000000e-200) nounwind
  %575 = call double @_Z4fmaxdd(double %extract969.i, double 1.000000e-200) nounwind
  %576 = call double @_Z4fmaxdd(double %extract970.i, double 1.000000e-200) nounwind
  %577 = call double @_Z4fmaxdd(double %extract971.i, double 1.000000e-200) nounwind
  %578 = call double @_Z4fmaxdd(double %extract972.i, double 1.000000e-200) nounwind
  %579 = call double @_Z4fmaxdd(double %extract973.i, double 1.000000e-200) nounwind
  %580 = call double @_Z4fmaxdd(double %extract974.i, double 1.000000e-200) nounwind
  %581 = call double @_Z4fmaxdd(double %extract975.i, double 1.000000e-200) nounwind
  %582 = call double @_Z4fmaxdd(double %extract976.i, double 1.000000e-200) nounwind
  %583 = call double @_Z4fmaxdd(double %extract977.i, double 1.000000e-200) nounwind
  %584 = call double @_Z4fmaxdd(double %extract978.i, double 1.000000e-200) nounwind
  %585 = call double @_Z4fmaxdd(double %extract979.i, double 1.000000e-200) nounwind
  %586 = call double @_Z4fmaxdd(double %extract980.i, double 1.000000e-200) nounwind
  %587 = call double @_Z5log10d(double %571) nounwind
  %588 = call double @_Z5log10d(double %572) nounwind
  %589 = call double @_Z5log10d(double %573) nounwind
  %590 = call double @_Z5log10d(double %574) nounwind
  %591 = call double @_Z5log10d(double %575) nounwind
  %592 = call double @_Z5log10d(double %576) nounwind
  %593 = call double @_Z5log10d(double %577) nounwind
  %594 = call double @_Z5log10d(double %578) nounwind
  %595 = call double @_Z5log10d(double %579) nounwind
  %596 = call double @_Z5log10d(double %580) nounwind
  %597 = call double @_Z5log10d(double %581) nounwind
  %598 = call double @_Z5log10d(double %582) nounwind
  %599 = call double @_Z5log10d(double %583) nounwind
  %600 = call double @_Z5log10d(double %584) nounwind
  %601 = call double @_Z5log10d(double %585) nounwind
  %602 = call double @_Z5log10d(double %586) nounwind
  %temp.vect981.i = insertelement <16 x double> undef, double %587, i32 0
  %temp.vect982.i = insertelement <16 x double> %temp.vect981.i, double %588, i32 1
  %temp.vect983.i = insertelement <16 x double> %temp.vect982.i, double %589, i32 2
  %temp.vect984.i = insertelement <16 x double> %temp.vect983.i, double %590, i32 3
  %temp.vect985.i = insertelement <16 x double> %temp.vect984.i, double %591, i32 4
  %temp.vect986.i = insertelement <16 x double> %temp.vect985.i, double %592, i32 5
  %temp.vect987.i = insertelement <16 x double> %temp.vect986.i, double %593, i32 6
  %temp.vect988.i = insertelement <16 x double> %temp.vect987.i, double %594, i32 7
  %temp.vect989.i = insertelement <16 x double> %temp.vect988.i, double %595, i32 8
  %temp.vect990.i = insertelement <16 x double> %temp.vect989.i, double %596, i32 9
  %temp.vect991.i = insertelement <16 x double> %temp.vect990.i, double %597, i32 10
  %temp.vect992.i = insertelement <16 x double> %temp.vect991.i, double %598, i32 11
  %temp.vect993.i = insertelement <16 x double> %temp.vect992.i, double %599, i32 12
  %temp.vect994.i = insertelement <16 x double> %temp.vect993.i, double %600, i32 13
  %temp.vect995.i = insertelement <16 x double> %temp.vect994.i, double %601, i32 14
  %temp.vect996.i = insertelement <16 x double> %temp.vect995.i, double %602, i32 15
  %603 = fmul <16 x double> %temp.vect996.i, <double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00>
  %604 = fsub <16 x double> <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>, %603
  %605 = fmul <16 x double> %temp.vect996.i, <double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01>
  %606 = fadd <16 x double> %605, <double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01>
  %607 = fsub <16 x double> %temp.vect1012.i, %606
  %608 = fmul <16 x double> %607, <double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01>
  %609 = fsub <16 x double> %604, %608
  %610 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %609
  %611 = fmul <16 x double> %607, %610
  %612 = fmul <16 x double> %611, %611
  %613 = fadd <16 x double> %612, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %614 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %613
  %615 = fmul <16 x double> %temp.vect996.i, %614
  %extract1013.i = extractelement <16 x double> %615, i32 0
  %extract1014.i = extractelement <16 x double> %615, i32 1
  %extract1015.i = extractelement <16 x double> %615, i32 2
  %extract1016.i = extractelement <16 x double> %615, i32 3
  %extract1017.i = extractelement <16 x double> %615, i32 4
  %extract1018.i = extractelement <16 x double> %615, i32 5
  %extract1019.i = extractelement <16 x double> %615, i32 6
  %extract1020.i = extractelement <16 x double> %615, i32 7
  %extract1021.i = extractelement <16 x double> %615, i32 8
  %extract1022.i = extractelement <16 x double> %615, i32 9
  %extract1023.i = extractelement <16 x double> %615, i32 10
  %extract1024.i = extractelement <16 x double> %615, i32 11
  %extract1025.i = extractelement <16 x double> %615, i32 12
  %extract1026.i = extractelement <16 x double> %615, i32 13
  %extract1027.i = extractelement <16 x double> %615, i32 14
  %extract1028.i = extractelement <16 x double> %615, i32 15
  %616 = call double @_Z5exp10d(double %extract1013.i) nounwind
  %617 = call double @_Z5exp10d(double %extract1014.i) nounwind
  %618 = call double @_Z5exp10d(double %extract1015.i) nounwind
  %619 = call double @_Z5exp10d(double %extract1016.i) nounwind
  %620 = call double @_Z5exp10d(double %extract1017.i) nounwind
  %621 = call double @_Z5exp10d(double %extract1018.i) nounwind
  %622 = call double @_Z5exp10d(double %extract1019.i) nounwind
  %623 = call double @_Z5exp10d(double %extract1020.i) nounwind
  %624 = call double @_Z5exp10d(double %extract1021.i) nounwind
  %625 = call double @_Z5exp10d(double %extract1022.i) nounwind
  %626 = call double @_Z5exp10d(double %extract1023.i) nounwind
  %627 = call double @_Z5exp10d(double %extract1024.i) nounwind
  %628 = call double @_Z5exp10d(double %extract1025.i) nounwind
  %629 = call double @_Z5exp10d(double %extract1026.i) nounwind
  %630 = call double @_Z5exp10d(double %extract1027.i) nounwind
  %631 = call double @_Z5exp10d(double %extract1028.i) nounwind
  %temp.vect1029.i = insertelement <16 x double> undef, double %616, i32 0
  %temp.vect1030.i = insertelement <16 x double> %temp.vect1029.i, double %617, i32 1
  %temp.vect1031.i = insertelement <16 x double> %temp.vect1030.i, double %618, i32 2
  %temp.vect1032.i = insertelement <16 x double> %temp.vect1031.i, double %619, i32 3
  %temp.vect1033.i = insertelement <16 x double> %temp.vect1032.i, double %620, i32 4
  %temp.vect1034.i = insertelement <16 x double> %temp.vect1033.i, double %621, i32 5
  %temp.vect1035.i = insertelement <16 x double> %temp.vect1034.i, double %622, i32 6
  %temp.vect1036.i = insertelement <16 x double> %temp.vect1035.i, double %623, i32 7
  %temp.vect1037.i = insertelement <16 x double> %temp.vect1036.i, double %624, i32 8
  %temp.vect1038.i = insertelement <16 x double> %temp.vect1037.i, double %625, i32 9
  %temp.vect1039.i = insertelement <16 x double> %temp.vect1038.i, double %626, i32 10
  %temp.vect1040.i = insertelement <16 x double> %temp.vect1039.i, double %627, i32 11
  %temp.vect1041.i = insertelement <16 x double> %temp.vect1040.i, double %628, i32 12
  %temp.vect1042.i = insertelement <16 x double> %temp.vect1041.i, double %629, i32 13
  %temp.vect1043.i = insertelement <16 x double> %temp.vect1042.i, double %630, i32 14
  %temp.vect1044.i = insertelement <16 x double> %temp.vect1043.i, double %631, i32 15
  %632 = fmul <16 x double> %temp.vect1044.i, %483
  %633 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %634 = load i64* %633, align 8
  %635 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %636 = load i64* %635, align 8
  %637 = add i64 %634, %636
  %extract1047.i = add i64 %637, 3317760
  %638 = getelementptr inbounds double addrspace(1)* %7, i64 %extract1047.i
  %ptrTypeCast1063.i = bitcast double addrspace(1)* %638 to <16 x double> addrspace(1)*
  %639 = load <16 x double> addrspace(1)* %ptrTypeCast1063.i, align 8
  %640 = fmul <16 x double> %639, %632
  %641 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %642 = load i64* %641, align 8
  %643 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %644 = load i64* %643, align 8
  %645 = add i64 %642, %644
  %extract1066.i = add i64 %645, 3317760
  %646 = getelementptr inbounds double addrspace(1)* %7, i64 %extract1066.i
  %ptrTypeCast1082.i = bitcast double addrspace(1)* %646 to <16 x double> addrspace(1)*
  store <16 x double> %640, <16 x double> addrspace(1)* %ptrTypeCast1082.i, align 8
  %647 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %648 = load i64* %647, align 8
  %649 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %650 = load i64* %649, align 8
  %651 = add i64 %648, %650
  %extract1085.i = add i64 %651, 3317760
  %652 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1085.i
  %ptrTypeCast1101.i = bitcast double addrspace(1)* %652 to <16 x double> addrspace(1)*
  %653 = load <16 x double> addrspace(1)* %ptrTypeCast1101.i, align 8
  %654 = fmul <16 x double> %653, %632
  %655 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %656 = load i64* %655, align 8
  %657 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %658 = load i64* %657, align 8
  %659 = add i64 %656, %658
  %extract1104.i = add i64 %659, 3317760
  %660 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1104.i
  %ptrTypeCast1120.i = bitcast double addrspace(1)* %660 to <16 x double> addrspace(1)*
  store <16 x double> %654, <16 x double> addrspace(1)* %ptrTypeCast1120.i, align 8
  %661 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %662 = load i64* %661, align 8
  %663 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %664 = load i64* %663, align 8
  %665 = add i64 %662, %664
  %extract1123.i = add i64 %665, 221184
  %666 = getelementptr inbounds double addrspace(1)* %13, i64 %extract1123.i
  %ptrTypeCast1139.i = bitcast double addrspace(1)* %666 to <16 x double> addrspace(1)*
  %667 = load <16 x double> addrspace(1)* %ptrTypeCast1139.i, align 8
  %668 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %669 = load i64* %668, align 8
  %670 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %671 = load i64* %670, align 8
  %672 = add i64 %669, %671
  %extract1142.i = add i64 %672, 4202496
  %673 = getelementptr inbounds double addrspace(1)* %7, i64 %extract1142.i
  %ptrTypeCast1158.i = bitcast double addrspace(1)* %673 to <16 x double> addrspace(1)*
  %674 = load <16 x double> addrspace(1)* %ptrTypeCast1158.i, align 8
  %675 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %674
  %676 = fmul <16 x double> %127, %675
  %677 = fmul <16 x double> %667, %676
  %extract1159.i = extractelement <16 x double> %677, i32 0
  %extract1160.i = extractelement <16 x double> %677, i32 1
  %extract1161.i = extractelement <16 x double> %677, i32 2
  %extract1162.i = extractelement <16 x double> %677, i32 3
  %extract1163.i = extractelement <16 x double> %677, i32 4
  %extract1164.i = extractelement <16 x double> %677, i32 5
  %extract1165.i = extractelement <16 x double> %677, i32 6
  %extract1166.i = extractelement <16 x double> %677, i32 7
  %extract1167.i = extractelement <16 x double> %677, i32 8
  %extract1168.i = extractelement <16 x double> %677, i32 9
  %extract1169.i = extractelement <16 x double> %677, i32 10
  %extract1170.i = extractelement <16 x double> %677, i32 11
  %extract1171.i = extractelement <16 x double> %677, i32 12
  %extract1172.i = extractelement <16 x double> %677, i32 13
  %extract1173.i = extractelement <16 x double> %677, i32 14
  %extract1174.i = extractelement <16 x double> %677, i32 15
  %678 = fadd <16 x double> %677, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %679 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %678
  %680 = fmul <16 x double> %677, %679
  %681 = call double @_Z4fmaxdd(double %extract1159.i, double 1.000000e-200) nounwind
  %682 = call double @_Z4fmaxdd(double %extract1160.i, double 1.000000e-200) nounwind
  %683 = call double @_Z4fmaxdd(double %extract1161.i, double 1.000000e-200) nounwind
  %684 = call double @_Z4fmaxdd(double %extract1162.i, double 1.000000e-200) nounwind
  %685 = call double @_Z4fmaxdd(double %extract1163.i, double 1.000000e-200) nounwind
  %686 = call double @_Z4fmaxdd(double %extract1164.i, double 1.000000e-200) nounwind
  %687 = call double @_Z4fmaxdd(double %extract1165.i, double 1.000000e-200) nounwind
  %688 = call double @_Z4fmaxdd(double %extract1166.i, double 1.000000e-200) nounwind
  %689 = call double @_Z4fmaxdd(double %extract1167.i, double 1.000000e-200) nounwind
  %690 = call double @_Z4fmaxdd(double %extract1168.i, double 1.000000e-200) nounwind
  %691 = call double @_Z4fmaxdd(double %extract1169.i, double 1.000000e-200) nounwind
  %692 = call double @_Z4fmaxdd(double %extract1170.i, double 1.000000e-200) nounwind
  %693 = call double @_Z4fmaxdd(double %extract1171.i, double 1.000000e-200) nounwind
  %694 = call double @_Z4fmaxdd(double %extract1172.i, double 1.000000e-200) nounwind
  %695 = call double @_Z4fmaxdd(double %extract1173.i, double 1.000000e-200) nounwind
  %696 = call double @_Z4fmaxdd(double %extract1174.i, double 1.000000e-200) nounwind
  %697 = call double @_Z5log10d(double %681) nounwind
  %698 = call double @_Z5log10d(double %682) nounwind
  %699 = call double @_Z5log10d(double %683) nounwind
  %700 = call double @_Z5log10d(double %684) nounwind
  %701 = call double @_Z5log10d(double %685) nounwind
  %702 = call double @_Z5log10d(double %686) nounwind
  %703 = call double @_Z5log10d(double %687) nounwind
  %704 = call double @_Z5log10d(double %688) nounwind
  %705 = call double @_Z5log10d(double %689) nounwind
  %706 = call double @_Z5log10d(double %690) nounwind
  %707 = call double @_Z5log10d(double %691) nounwind
  %708 = call double @_Z5log10d(double %692) nounwind
  %709 = call double @_Z5log10d(double %693) nounwind
  %710 = call double @_Z5log10d(double %694) nounwind
  %711 = call double @_Z5log10d(double %695) nounwind
  %712 = call double @_Z5log10d(double %696) nounwind
  %temp.vect1303.i = insertelement <16 x double> undef, double %697, i32 0
  %temp.vect1304.i = insertelement <16 x double> %temp.vect1303.i, double %698, i32 1
  %temp.vect1305.i = insertelement <16 x double> %temp.vect1304.i, double %699, i32 2
  %temp.vect1306.i = insertelement <16 x double> %temp.vect1305.i, double %700, i32 3
  %temp.vect1307.i = insertelement <16 x double> %temp.vect1306.i, double %701, i32 4
  %temp.vect1308.i = insertelement <16 x double> %temp.vect1307.i, double %702, i32 5
  %temp.vect1309.i = insertelement <16 x double> %temp.vect1308.i, double %703, i32 6
  %temp.vect1310.i = insertelement <16 x double> %temp.vect1309.i, double %704, i32 7
  %temp.vect1311.i = insertelement <16 x double> %temp.vect1310.i, double %705, i32 8
  %temp.vect1312.i = insertelement <16 x double> %temp.vect1311.i, double %706, i32 9
  %temp.vect1313.i = insertelement <16 x double> %temp.vect1312.i, double %707, i32 10
  %temp.vect1314.i = insertelement <16 x double> %temp.vect1313.i, double %708, i32 11
  %temp.vect1315.i = insertelement <16 x double> %temp.vect1314.i, double %709, i32 12
  %temp.vect1316.i = insertelement <16 x double> %temp.vect1315.i, double %710, i32 13
  %temp.vect1317.i = insertelement <16 x double> %temp.vect1316.i, double %711, i32 14
  %temp.vect1318.i = insertelement <16 x double> %temp.vect1317.i, double %712, i32 15
  %713 = fmul <16 x double> %33, <double 0xBF71485F0E0ACD3B, double 0xBF71485F0E0ACD3B, double 0xBF71485F0E0ACD3B, double 0xBF71485F0E0ACD3B, double 0xBF71485F0E0ACD3B, double 0xBF71485F0E0ACD3B, double 0xBF71485F0E0ACD3B, double 0xBF71485F0E0ACD3B, double 0xBF71485F0E0ACD3B, double 0xBF71485F0E0ACD3B, double 0xBF71485F0E0ACD3B, double 0xBF71485F0E0ACD3B, double 0xBF71485F0E0ACD3B, double 0xBF71485F0E0ACD3B, double 0xBF71485F0E0ACD3B, double 0xBF71485F0E0ACD3B>
  %extract1175.i = extractelement <16 x double> %713, i32 0
  %extract1176.i = extractelement <16 x double> %713, i32 1
  %extract1177.i = extractelement <16 x double> %713, i32 2
  %extract1178.i = extractelement <16 x double> %713, i32 3
  %extract1179.i = extractelement <16 x double> %713, i32 4
  %extract1180.i = extractelement <16 x double> %713, i32 5
  %extract1181.i = extractelement <16 x double> %713, i32 6
  %extract1182.i = extractelement <16 x double> %713, i32 7
  %extract1183.i = extractelement <16 x double> %713, i32 8
  %extract1184.i = extractelement <16 x double> %713, i32 9
  %extract1185.i = extractelement <16 x double> %713, i32 10
  %extract1186.i = extractelement <16 x double> %713, i32 11
  %extract1187.i = extractelement <16 x double> %713, i32 12
  %extract1188.i = extractelement <16 x double> %713, i32 13
  %extract1189.i = extractelement <16 x double> %713, i32 14
  %extract1190.i = extractelement <16 x double> %713, i32 15
  %714 = call double @_Z3expd(double %extract1175.i) nounwind
  %715 = call double @_Z3expd(double %extract1176.i) nounwind
  %716 = call double @_Z3expd(double %extract1177.i) nounwind
  %717 = call double @_Z3expd(double %extract1178.i) nounwind
  %718 = call double @_Z3expd(double %extract1179.i) nounwind
  %719 = call double @_Z3expd(double %extract1180.i) nounwind
  %720 = call double @_Z3expd(double %extract1181.i) nounwind
  %721 = call double @_Z3expd(double %extract1182.i) nounwind
  %722 = call double @_Z3expd(double %extract1183.i) nounwind
  %723 = call double @_Z3expd(double %extract1184.i) nounwind
  %724 = call double @_Z3expd(double %extract1185.i) nounwind
  %725 = call double @_Z3expd(double %extract1186.i) nounwind
  %726 = call double @_Z3expd(double %extract1187.i) nounwind
  %727 = call double @_Z3expd(double %extract1188.i) nounwind
  %728 = call double @_Z3expd(double %extract1189.i) nounwind
  %729 = call double @_Z3expd(double %extract1190.i) nounwind
  %temp.vect1191.i = insertelement <16 x double> undef, double %714, i32 0
  %temp.vect1192.i = insertelement <16 x double> %temp.vect1191.i, double %715, i32 1
  %temp.vect1193.i = insertelement <16 x double> %temp.vect1192.i, double %716, i32 2
  %temp.vect1194.i = insertelement <16 x double> %temp.vect1193.i, double %717, i32 3
  %temp.vect1195.i = insertelement <16 x double> %temp.vect1194.i, double %718, i32 4
  %temp.vect1196.i = insertelement <16 x double> %temp.vect1195.i, double %719, i32 5
  %temp.vect1197.i = insertelement <16 x double> %temp.vect1196.i, double %720, i32 6
  %temp.vect1198.i = insertelement <16 x double> %temp.vect1197.i, double %721, i32 7
  %temp.vect1199.i = insertelement <16 x double> %temp.vect1198.i, double %722, i32 8
  %temp.vect1200.i = insertelement <16 x double> %temp.vect1199.i, double %723, i32 9
  %temp.vect1201.i = insertelement <16 x double> %temp.vect1200.i, double %724, i32 10
  %temp.vect1202.i = insertelement <16 x double> %temp.vect1201.i, double %725, i32 11
  %temp.vect1203.i = insertelement <16 x double> %temp.vect1202.i, double %726, i32 12
  %temp.vect1204.i = insertelement <16 x double> %temp.vect1203.i, double %727, i32 13
  %temp.vect1205.i = insertelement <16 x double> %temp.vect1204.i, double %728, i32 14
  %temp.vect1206.i = insertelement <16 x double> %temp.vect1205.i, double %729, i32 15
  %730 = fmul <16 x double> %temp.vect1206.i, <double 4.243000e-01, double 4.243000e-01, double 4.243000e-01, double 4.243000e-01, double 4.243000e-01, double 4.243000e-01, double 4.243000e-01, double 4.243000e-01, double 4.243000e-01, double 4.243000e-01, double 4.243000e-01, double 4.243000e-01, double 4.243000e-01, double 4.243000e-01, double 4.243000e-01, double 4.243000e-01>
  %731 = fmul <16 x double> %33, <double 0xBF43D5D991AA75C6, double 0xBF43D5D991AA75C6, double 0xBF43D5D991AA75C6, double 0xBF43D5D991AA75C6, double 0xBF43D5D991AA75C6, double 0xBF43D5D991AA75C6, double 0xBF43D5D991AA75C6, double 0xBF43D5D991AA75C6, double 0xBF43D5D991AA75C6, double 0xBF43D5D991AA75C6, double 0xBF43D5D991AA75C6, double 0xBF43D5D991AA75C6, double 0xBF43D5D991AA75C6, double 0xBF43D5D991AA75C6, double 0xBF43D5D991AA75C6, double 0xBF43D5D991AA75C6>
  %extract1207.i = extractelement <16 x double> %731, i32 0
  %extract1208.i = extractelement <16 x double> %731, i32 1
  %extract1209.i = extractelement <16 x double> %731, i32 2
  %extract1210.i = extractelement <16 x double> %731, i32 3
  %extract1211.i = extractelement <16 x double> %731, i32 4
  %extract1212.i = extractelement <16 x double> %731, i32 5
  %extract1213.i = extractelement <16 x double> %731, i32 6
  %extract1214.i = extractelement <16 x double> %731, i32 7
  %extract1215.i = extractelement <16 x double> %731, i32 8
  %extract1216.i = extractelement <16 x double> %731, i32 9
  %extract1217.i = extractelement <16 x double> %731, i32 10
  %extract1218.i = extractelement <16 x double> %731, i32 11
  %extract1219.i = extractelement <16 x double> %731, i32 12
  %extract1220.i = extractelement <16 x double> %731, i32 13
  %extract1221.i = extractelement <16 x double> %731, i32 14
  %extract1222.i = extractelement <16 x double> %731, i32 15
  %732 = call double @_Z3expd(double %extract1207.i) nounwind
  %733 = call double @_Z3expd(double %extract1208.i) nounwind
  %734 = call double @_Z3expd(double %extract1209.i) nounwind
  %735 = call double @_Z3expd(double %extract1210.i) nounwind
  %736 = call double @_Z3expd(double %extract1211.i) nounwind
  %737 = call double @_Z3expd(double %extract1212.i) nounwind
  %738 = call double @_Z3expd(double %extract1213.i) nounwind
  %739 = call double @_Z3expd(double %extract1214.i) nounwind
  %740 = call double @_Z3expd(double %extract1215.i) nounwind
  %741 = call double @_Z3expd(double %extract1216.i) nounwind
  %742 = call double @_Z3expd(double %extract1217.i) nounwind
  %743 = call double @_Z3expd(double %extract1218.i) nounwind
  %744 = call double @_Z3expd(double %extract1219.i) nounwind
  %745 = call double @_Z3expd(double %extract1220.i) nounwind
  %746 = call double @_Z3expd(double %extract1221.i) nounwind
  %747 = call double @_Z3expd(double %extract1222.i) nounwind
  %temp.vect1223.i = insertelement <16 x double> undef, double %732, i32 0
  %temp.vect1224.i = insertelement <16 x double> %temp.vect1223.i, double %733, i32 1
  %temp.vect1225.i = insertelement <16 x double> %temp.vect1224.i, double %734, i32 2
  %temp.vect1226.i = insertelement <16 x double> %temp.vect1225.i, double %735, i32 3
  %temp.vect1227.i = insertelement <16 x double> %temp.vect1226.i, double %736, i32 4
  %temp.vect1228.i = insertelement <16 x double> %temp.vect1227.i, double %737, i32 5
  %temp.vect1229.i = insertelement <16 x double> %temp.vect1228.i, double %738, i32 6
  %temp.vect1230.i = insertelement <16 x double> %temp.vect1229.i, double %739, i32 7
  %temp.vect1231.i = insertelement <16 x double> %temp.vect1230.i, double %740, i32 8
  %temp.vect1232.i = insertelement <16 x double> %temp.vect1231.i, double %741, i32 9
  %temp.vect1233.i = insertelement <16 x double> %temp.vect1232.i, double %742, i32 10
  %temp.vect1234.i = insertelement <16 x double> %temp.vect1233.i, double %743, i32 11
  %temp.vect1235.i = insertelement <16 x double> %temp.vect1234.i, double %744, i32 12
  %temp.vect1236.i = insertelement <16 x double> %temp.vect1235.i, double %745, i32 13
  %temp.vect1237.i = insertelement <16 x double> %temp.vect1236.i, double %746, i32 14
  %temp.vect1238.i = insertelement <16 x double> %temp.vect1237.i, double %747, i32 15
  %748 = fmul <16 x double> %temp.vect1238.i, <double 5.757000e-01, double 5.757000e-01, double 5.757000e-01, double 5.757000e-01, double 5.757000e-01, double 5.757000e-01, double 5.757000e-01, double 5.757000e-01, double 5.757000e-01, double 5.757000e-01, double 5.757000e-01, double 5.757000e-01, double 5.757000e-01, double 5.757000e-01, double 5.757000e-01, double 5.757000e-01>
  %749 = fadd <16 x double> %730, %748
  %750 = fmul <16 x double> %355, <double -5.069000e+03, double -5.069000e+03, double -5.069000e+03, double -5.069000e+03, double -5.069000e+03, double -5.069000e+03, double -5.069000e+03, double -5.069000e+03, double -5.069000e+03, double -5.069000e+03, double -5.069000e+03, double -5.069000e+03, double -5.069000e+03, double -5.069000e+03, double -5.069000e+03, double -5.069000e+03>
  %extract1239.i = extractelement <16 x double> %750, i32 0
  %extract1240.i = extractelement <16 x double> %750, i32 1
  %extract1241.i = extractelement <16 x double> %750, i32 2
  %extract1242.i = extractelement <16 x double> %750, i32 3
  %extract1243.i = extractelement <16 x double> %750, i32 4
  %extract1244.i = extractelement <16 x double> %750, i32 5
  %extract1245.i = extractelement <16 x double> %750, i32 6
  %extract1246.i = extractelement <16 x double> %750, i32 7
  %extract1247.i = extractelement <16 x double> %750, i32 8
  %extract1248.i = extractelement <16 x double> %750, i32 9
  %extract1249.i = extractelement <16 x double> %750, i32 10
  %extract1250.i = extractelement <16 x double> %750, i32 11
  %extract1251.i = extractelement <16 x double> %750, i32 12
  %extract1252.i = extractelement <16 x double> %750, i32 13
  %extract1253.i = extractelement <16 x double> %750, i32 14
  %extract1254.i = extractelement <16 x double> %750, i32 15
  %751 = call double @_Z3expd(double %extract1239.i) nounwind
  %752 = call double @_Z3expd(double %extract1240.i) nounwind
  %753 = call double @_Z3expd(double %extract1241.i) nounwind
  %754 = call double @_Z3expd(double %extract1242.i) nounwind
  %755 = call double @_Z3expd(double %extract1243.i) nounwind
  %756 = call double @_Z3expd(double %extract1244.i) nounwind
  %757 = call double @_Z3expd(double %extract1245.i) nounwind
  %758 = call double @_Z3expd(double %extract1246.i) nounwind
  %759 = call double @_Z3expd(double %extract1247.i) nounwind
  %760 = call double @_Z3expd(double %extract1248.i) nounwind
  %761 = call double @_Z3expd(double %extract1249.i) nounwind
  %762 = call double @_Z3expd(double %extract1250.i) nounwind
  %763 = call double @_Z3expd(double %extract1251.i) nounwind
  %764 = call double @_Z3expd(double %extract1252.i) nounwind
  %765 = call double @_Z3expd(double %extract1253.i) nounwind
  %766 = call double @_Z3expd(double %extract1254.i) nounwind
  %temp.vect1255.i = insertelement <16 x double> undef, double %751, i32 0
  %temp.vect1256.i = insertelement <16 x double> %temp.vect1255.i, double %752, i32 1
  %temp.vect1257.i = insertelement <16 x double> %temp.vect1256.i, double %753, i32 2
  %temp.vect1258.i = insertelement <16 x double> %temp.vect1257.i, double %754, i32 3
  %temp.vect1259.i = insertelement <16 x double> %temp.vect1258.i, double %755, i32 4
  %temp.vect1260.i = insertelement <16 x double> %temp.vect1259.i, double %756, i32 5
  %temp.vect1261.i = insertelement <16 x double> %temp.vect1260.i, double %757, i32 6
  %temp.vect1262.i = insertelement <16 x double> %temp.vect1261.i, double %758, i32 7
  %temp.vect1263.i = insertelement <16 x double> %temp.vect1262.i, double %759, i32 8
  %temp.vect1264.i = insertelement <16 x double> %temp.vect1263.i, double %760, i32 9
  %temp.vect1265.i = insertelement <16 x double> %temp.vect1264.i, double %761, i32 10
  %temp.vect1266.i = insertelement <16 x double> %temp.vect1265.i, double %762, i32 11
  %temp.vect1267.i = insertelement <16 x double> %temp.vect1266.i, double %763, i32 12
  %temp.vect1268.i = insertelement <16 x double> %temp.vect1267.i, double %764, i32 13
  %temp.vect1269.i = insertelement <16 x double> %temp.vect1268.i, double %765, i32 14
  %temp.vect1270.i = insertelement <16 x double> %temp.vect1269.i, double %766, i32 15
  %767 = fadd <16 x double> %749, %temp.vect1270.i
  %extract1271.i = extractelement <16 x double> %767, i32 0
  %extract1272.i = extractelement <16 x double> %767, i32 1
  %extract1273.i = extractelement <16 x double> %767, i32 2
  %extract1274.i = extractelement <16 x double> %767, i32 3
  %extract1275.i = extractelement <16 x double> %767, i32 4
  %extract1276.i = extractelement <16 x double> %767, i32 5
  %extract1277.i = extractelement <16 x double> %767, i32 6
  %extract1278.i = extractelement <16 x double> %767, i32 7
  %extract1279.i = extractelement <16 x double> %767, i32 8
  %extract1280.i = extractelement <16 x double> %767, i32 9
  %extract1281.i = extractelement <16 x double> %767, i32 10
  %extract1282.i = extractelement <16 x double> %767, i32 11
  %extract1283.i = extractelement <16 x double> %767, i32 12
  %extract1284.i = extractelement <16 x double> %767, i32 13
  %extract1285.i = extractelement <16 x double> %767, i32 14
  %extract1286.i = extractelement <16 x double> %767, i32 15
  %768 = call double @_Z4fmaxdd(double %extract1271.i, double 1.000000e-200) nounwind
  %769 = call double @_Z4fmaxdd(double %extract1272.i, double 1.000000e-200) nounwind
  %770 = call double @_Z4fmaxdd(double %extract1273.i, double 1.000000e-200) nounwind
  %771 = call double @_Z4fmaxdd(double %extract1274.i, double 1.000000e-200) nounwind
  %772 = call double @_Z4fmaxdd(double %extract1275.i, double 1.000000e-200) nounwind
  %773 = call double @_Z4fmaxdd(double %extract1276.i, double 1.000000e-200) nounwind
  %774 = call double @_Z4fmaxdd(double %extract1277.i, double 1.000000e-200) nounwind
  %775 = call double @_Z4fmaxdd(double %extract1278.i, double 1.000000e-200) nounwind
  %776 = call double @_Z4fmaxdd(double %extract1279.i, double 1.000000e-200) nounwind
  %777 = call double @_Z4fmaxdd(double %extract1280.i, double 1.000000e-200) nounwind
  %778 = call double @_Z4fmaxdd(double %extract1281.i, double 1.000000e-200) nounwind
  %779 = call double @_Z4fmaxdd(double %extract1282.i, double 1.000000e-200) nounwind
  %780 = call double @_Z4fmaxdd(double %extract1283.i, double 1.000000e-200) nounwind
  %781 = call double @_Z4fmaxdd(double %extract1284.i, double 1.000000e-200) nounwind
  %782 = call double @_Z4fmaxdd(double %extract1285.i, double 1.000000e-200) nounwind
  %783 = call double @_Z4fmaxdd(double %extract1286.i, double 1.000000e-200) nounwind
  %784 = call double @_Z5log10d(double %768) nounwind
  %785 = call double @_Z5log10d(double %769) nounwind
  %786 = call double @_Z5log10d(double %770) nounwind
  %787 = call double @_Z5log10d(double %771) nounwind
  %788 = call double @_Z5log10d(double %772) nounwind
  %789 = call double @_Z5log10d(double %773) nounwind
  %790 = call double @_Z5log10d(double %774) nounwind
  %791 = call double @_Z5log10d(double %775) nounwind
  %792 = call double @_Z5log10d(double %776) nounwind
  %793 = call double @_Z5log10d(double %777) nounwind
  %794 = call double @_Z5log10d(double %778) nounwind
  %795 = call double @_Z5log10d(double %779) nounwind
  %796 = call double @_Z5log10d(double %780) nounwind
  %797 = call double @_Z5log10d(double %781) nounwind
  %798 = call double @_Z5log10d(double %782) nounwind
  %799 = call double @_Z5log10d(double %783) nounwind
  %temp.vect1287.i = insertelement <16 x double> undef, double %784, i32 0
  %temp.vect1288.i = insertelement <16 x double> %temp.vect1287.i, double %785, i32 1
  %temp.vect1289.i = insertelement <16 x double> %temp.vect1288.i, double %786, i32 2
  %temp.vect1290.i = insertelement <16 x double> %temp.vect1289.i, double %787, i32 3
  %temp.vect1291.i = insertelement <16 x double> %temp.vect1290.i, double %788, i32 4
  %temp.vect1292.i = insertelement <16 x double> %temp.vect1291.i, double %789, i32 5
  %temp.vect1293.i = insertelement <16 x double> %temp.vect1292.i, double %790, i32 6
  %temp.vect1294.i = insertelement <16 x double> %temp.vect1293.i, double %791, i32 7
  %temp.vect1295.i = insertelement <16 x double> %temp.vect1294.i, double %792, i32 8
  %temp.vect1296.i = insertelement <16 x double> %temp.vect1295.i, double %793, i32 9
  %temp.vect1297.i = insertelement <16 x double> %temp.vect1296.i, double %794, i32 10
  %temp.vect1298.i = insertelement <16 x double> %temp.vect1297.i, double %795, i32 11
  %temp.vect1299.i = insertelement <16 x double> %temp.vect1298.i, double %796, i32 12
  %temp.vect1300.i = insertelement <16 x double> %temp.vect1299.i, double %797, i32 13
  %temp.vect1301.i = insertelement <16 x double> %temp.vect1300.i, double %798, i32 14
  %temp.vect1302.i = insertelement <16 x double> %temp.vect1301.i, double %799, i32 15
  %800 = fmul <16 x double> %temp.vect1302.i, <double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00>
  %801 = fsub <16 x double> <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>, %800
  %802 = fmul <16 x double> %temp.vect1302.i, <double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01>
  %803 = fadd <16 x double> %802, <double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01>
  %804 = fsub <16 x double> %temp.vect1318.i, %803
  %805 = fmul <16 x double> %804, <double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01>
  %806 = fsub <16 x double> %801, %805
  %807 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %806
  %808 = fmul <16 x double> %804, %807
  %809 = fmul <16 x double> %808, %808
  %810 = fadd <16 x double> %809, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %811 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %810
  %812 = fmul <16 x double> %temp.vect1302.i, %811
  %extract1319.i = extractelement <16 x double> %812, i32 0
  %extract1320.i = extractelement <16 x double> %812, i32 1
  %extract1321.i = extractelement <16 x double> %812, i32 2
  %extract1322.i = extractelement <16 x double> %812, i32 3
  %extract1323.i = extractelement <16 x double> %812, i32 4
  %extract1324.i = extractelement <16 x double> %812, i32 5
  %extract1325.i = extractelement <16 x double> %812, i32 6
  %extract1326.i = extractelement <16 x double> %812, i32 7
  %extract1327.i = extractelement <16 x double> %812, i32 8
  %extract1328.i = extractelement <16 x double> %812, i32 9
  %extract1329.i = extractelement <16 x double> %812, i32 10
  %extract1330.i = extractelement <16 x double> %812, i32 11
  %extract1331.i = extractelement <16 x double> %812, i32 12
  %extract1332.i = extractelement <16 x double> %812, i32 13
  %extract1333.i = extractelement <16 x double> %812, i32 14
  %extract1334.i = extractelement <16 x double> %812, i32 15
  %813 = call double @_Z5exp10d(double %extract1319.i) nounwind
  %814 = call double @_Z5exp10d(double %extract1320.i) nounwind
  %815 = call double @_Z5exp10d(double %extract1321.i) nounwind
  %816 = call double @_Z5exp10d(double %extract1322.i) nounwind
  %817 = call double @_Z5exp10d(double %extract1323.i) nounwind
  %818 = call double @_Z5exp10d(double %extract1324.i) nounwind
  %819 = call double @_Z5exp10d(double %extract1325.i) nounwind
  %820 = call double @_Z5exp10d(double %extract1326.i) nounwind
  %821 = call double @_Z5exp10d(double %extract1327.i) nounwind
  %822 = call double @_Z5exp10d(double %extract1328.i) nounwind
  %823 = call double @_Z5exp10d(double %extract1329.i) nounwind
  %824 = call double @_Z5exp10d(double %extract1330.i) nounwind
  %825 = call double @_Z5exp10d(double %extract1331.i) nounwind
  %826 = call double @_Z5exp10d(double %extract1332.i) nounwind
  %827 = call double @_Z5exp10d(double %extract1333.i) nounwind
  %828 = call double @_Z5exp10d(double %extract1334.i) nounwind
  %temp.vect1335.i = insertelement <16 x double> undef, double %813, i32 0
  %temp.vect1336.i = insertelement <16 x double> %temp.vect1335.i, double %814, i32 1
  %temp.vect1337.i = insertelement <16 x double> %temp.vect1336.i, double %815, i32 2
  %temp.vect1338.i = insertelement <16 x double> %temp.vect1337.i, double %816, i32 3
  %temp.vect1339.i = insertelement <16 x double> %temp.vect1338.i, double %817, i32 4
  %temp.vect1340.i = insertelement <16 x double> %temp.vect1339.i, double %818, i32 5
  %temp.vect1341.i = insertelement <16 x double> %temp.vect1340.i, double %819, i32 6
  %temp.vect1342.i = insertelement <16 x double> %temp.vect1341.i, double %820, i32 7
  %temp.vect1343.i = insertelement <16 x double> %temp.vect1342.i, double %821, i32 8
  %temp.vect1344.i = insertelement <16 x double> %temp.vect1343.i, double %822, i32 9
  %temp.vect1345.i = insertelement <16 x double> %temp.vect1344.i, double %823, i32 10
  %temp.vect1346.i = insertelement <16 x double> %temp.vect1345.i, double %824, i32 11
  %temp.vect1347.i = insertelement <16 x double> %temp.vect1346.i, double %825, i32 12
  %temp.vect1348.i = insertelement <16 x double> %temp.vect1347.i, double %826, i32 13
  %temp.vect1349.i = insertelement <16 x double> %temp.vect1348.i, double %827, i32 14
  %temp.vect1350.i = insertelement <16 x double> %temp.vect1349.i, double %828, i32 15
  %829 = fmul <16 x double> %temp.vect1350.i, %680
  %830 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %831 = load i64* %830, align 8
  %832 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %833 = load i64* %832, align 8
  %834 = add i64 %831, %833
  %extract1353.i = add i64 %834, 4202496
  %835 = getelementptr inbounds double addrspace(1)* %7, i64 %extract1353.i
  %ptrTypeCast1369.i = bitcast double addrspace(1)* %835 to <16 x double> addrspace(1)*
  %836 = load <16 x double> addrspace(1)* %ptrTypeCast1369.i, align 8
  %837 = fmul <16 x double> %836, %829
  %838 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %839 = load i64* %838, align 8
  %840 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %841 = load i64* %840, align 8
  %842 = add i64 %839, %841
  %extract1372.i = add i64 %842, 4202496
  %843 = getelementptr inbounds double addrspace(1)* %7, i64 %extract1372.i
  %ptrTypeCast1388.i = bitcast double addrspace(1)* %843 to <16 x double> addrspace(1)*
  store <16 x double> %837, <16 x double> addrspace(1)* %ptrTypeCast1388.i, align 8
  %844 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %845 = load i64* %844, align 8
  %846 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %847 = load i64* %846, align 8
  %848 = add i64 %845, %847
  %extract1391.i = add i64 %848, 4202496
  %849 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1391.i
  %ptrTypeCast1407.i = bitcast double addrspace(1)* %849 to <16 x double> addrspace(1)*
  %850 = load <16 x double> addrspace(1)* %ptrTypeCast1407.i, align 8
  %851 = fmul <16 x double> %850, %829
  %852 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %853 = load i64* %852, align 8
  %854 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %855 = load i64* %854, align 8
  %856 = add i64 %853, %855
  %extract1410.i = add i64 %856, 4202496
  %857 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1410.i
  %ptrTypeCast1426.i = bitcast double addrspace(1)* %857 to <16 x double> addrspace(1)*
  store <16 x double> %851, <16 x double> addrspace(1)* %ptrTypeCast1426.i, align 8
  %858 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %859 = load i64* %858, align 8
  %860 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %861 = load i64* %860, align 8
  %862 = add i64 %859, %861
  %extract1429.i = add i64 %862, 331776
  %863 = getelementptr inbounds double addrspace(1)* %13, i64 %extract1429.i
  %ptrTypeCast1445.i = bitcast double addrspace(1)* %863 to <16 x double> addrspace(1)*
  %864 = load <16 x double> addrspace(1)* %ptrTypeCast1445.i, align 8
  %865 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %866 = load i64* %865, align 8
  %867 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %868 = load i64* %867, align 8
  %869 = add i64 %866, %868
  %extract1448.i = add i64 %869, 4423680
  %870 = getelementptr inbounds double addrspace(1)* %7, i64 %extract1448.i
  %ptrTypeCast1464.i = bitcast double addrspace(1)* %870 to <16 x double> addrspace(1)*
  %871 = load <16 x double> addrspace(1)* %ptrTypeCast1464.i, align 8
  %872 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %871
  %873 = fmul <16 x double> %127, %872
  %874 = fmul <16 x double> %864, %873
  %extract1465.i = extractelement <16 x double> %874, i32 0
  %extract1466.i = extractelement <16 x double> %874, i32 1
  %extract1467.i = extractelement <16 x double> %874, i32 2
  %extract1468.i = extractelement <16 x double> %874, i32 3
  %extract1469.i = extractelement <16 x double> %874, i32 4
  %extract1470.i = extractelement <16 x double> %874, i32 5
  %extract1471.i = extractelement <16 x double> %874, i32 6
  %extract1472.i = extractelement <16 x double> %874, i32 7
  %extract1473.i = extractelement <16 x double> %874, i32 8
  %extract1474.i = extractelement <16 x double> %874, i32 9
  %extract1475.i = extractelement <16 x double> %874, i32 10
  %extract1476.i = extractelement <16 x double> %874, i32 11
  %extract1477.i = extractelement <16 x double> %874, i32 12
  %extract1478.i = extractelement <16 x double> %874, i32 13
  %extract1479.i = extractelement <16 x double> %874, i32 14
  %extract1480.i = extractelement <16 x double> %874, i32 15
  %875 = fadd <16 x double> %874, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %876 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %875
  %877 = fmul <16 x double> %874, %876
  %878 = call double @_Z4fmaxdd(double %extract1465.i, double 1.000000e-200) nounwind
  %879 = call double @_Z4fmaxdd(double %extract1466.i, double 1.000000e-200) nounwind
  %880 = call double @_Z4fmaxdd(double %extract1467.i, double 1.000000e-200) nounwind
  %881 = call double @_Z4fmaxdd(double %extract1468.i, double 1.000000e-200) nounwind
  %882 = call double @_Z4fmaxdd(double %extract1469.i, double 1.000000e-200) nounwind
  %883 = call double @_Z4fmaxdd(double %extract1470.i, double 1.000000e-200) nounwind
  %884 = call double @_Z4fmaxdd(double %extract1471.i, double 1.000000e-200) nounwind
  %885 = call double @_Z4fmaxdd(double %extract1472.i, double 1.000000e-200) nounwind
  %886 = call double @_Z4fmaxdd(double %extract1473.i, double 1.000000e-200) nounwind
  %887 = call double @_Z4fmaxdd(double %extract1474.i, double 1.000000e-200) nounwind
  %888 = call double @_Z4fmaxdd(double %extract1475.i, double 1.000000e-200) nounwind
  %889 = call double @_Z4fmaxdd(double %extract1476.i, double 1.000000e-200) nounwind
  %890 = call double @_Z4fmaxdd(double %extract1477.i, double 1.000000e-200) nounwind
  %891 = call double @_Z4fmaxdd(double %extract1478.i, double 1.000000e-200) nounwind
  %892 = call double @_Z4fmaxdd(double %extract1479.i, double 1.000000e-200) nounwind
  %893 = call double @_Z4fmaxdd(double %extract1480.i, double 1.000000e-200) nounwind
  %894 = call double @_Z5log10d(double %878) nounwind
  %895 = call double @_Z5log10d(double %879) nounwind
  %896 = call double @_Z5log10d(double %880) nounwind
  %897 = call double @_Z5log10d(double %881) nounwind
  %898 = call double @_Z5log10d(double %882) nounwind
  %899 = call double @_Z5log10d(double %883) nounwind
  %900 = call double @_Z5log10d(double %884) nounwind
  %901 = call double @_Z5log10d(double %885) nounwind
  %902 = call double @_Z5log10d(double %886) nounwind
  %903 = call double @_Z5log10d(double %887) nounwind
  %904 = call double @_Z5log10d(double %888) nounwind
  %905 = call double @_Z5log10d(double %889) nounwind
  %906 = call double @_Z5log10d(double %890) nounwind
  %907 = call double @_Z5log10d(double %891) nounwind
  %908 = call double @_Z5log10d(double %892) nounwind
  %909 = call double @_Z5log10d(double %893) nounwind
  %temp.vect1609.i = insertelement <16 x double> undef, double %894, i32 0
  %temp.vect1610.i = insertelement <16 x double> %temp.vect1609.i, double %895, i32 1
  %temp.vect1611.i = insertelement <16 x double> %temp.vect1610.i, double %896, i32 2
  %temp.vect1612.i = insertelement <16 x double> %temp.vect1611.i, double %897, i32 3
  %temp.vect1613.i = insertelement <16 x double> %temp.vect1612.i, double %898, i32 4
  %temp.vect1614.i = insertelement <16 x double> %temp.vect1613.i, double %899, i32 5
  %temp.vect1615.i = insertelement <16 x double> %temp.vect1614.i, double %900, i32 6
  %temp.vect1616.i = insertelement <16 x double> %temp.vect1615.i, double %901, i32 7
  %temp.vect1617.i = insertelement <16 x double> %temp.vect1616.i, double %902, i32 8
  %temp.vect1618.i = insertelement <16 x double> %temp.vect1617.i, double %903, i32 9
  %temp.vect1619.i = insertelement <16 x double> %temp.vect1618.i, double %904, i32 10
  %temp.vect1620.i = insertelement <16 x double> %temp.vect1619.i, double %905, i32 11
  %temp.vect1621.i = insertelement <16 x double> %temp.vect1620.i, double %906, i32 12
  %temp.vect1622.i = insertelement <16 x double> %temp.vect1621.i, double %907, i32 13
  %temp.vect1623.i = insertelement <16 x double> %temp.vect1622.i, double %908, i32 14
  %temp.vect1624.i = insertelement <16 x double> %temp.vect1623.i, double %909, i32 15
  %910 = fmul <16 x double> %33, <double 0xBF6E3A9179DC1A73, double 0xBF6E3A9179DC1A73, double 0xBF6E3A9179DC1A73, double 0xBF6E3A9179DC1A73, double 0xBF6E3A9179DC1A73, double 0xBF6E3A9179DC1A73, double 0xBF6E3A9179DC1A73, double 0xBF6E3A9179DC1A73, double 0xBF6E3A9179DC1A73, double 0xBF6E3A9179DC1A73, double 0xBF6E3A9179DC1A73, double 0xBF6E3A9179DC1A73, double 0xBF6E3A9179DC1A73, double 0xBF6E3A9179DC1A73, double 0xBF6E3A9179DC1A73, double 0xBF6E3A9179DC1A73>
  %extract1481.i = extractelement <16 x double> %910, i32 0
  %extract1482.i = extractelement <16 x double> %910, i32 1
  %extract1483.i = extractelement <16 x double> %910, i32 2
  %extract1484.i = extractelement <16 x double> %910, i32 3
  %extract1485.i = extractelement <16 x double> %910, i32 4
  %extract1486.i = extractelement <16 x double> %910, i32 5
  %extract1487.i = extractelement <16 x double> %910, i32 6
  %extract1488.i = extractelement <16 x double> %910, i32 7
  %extract1489.i = extractelement <16 x double> %910, i32 8
  %extract1490.i = extractelement <16 x double> %910, i32 9
  %extract1491.i = extractelement <16 x double> %910, i32 10
  %extract1492.i = extractelement <16 x double> %910, i32 11
  %extract1493.i = extractelement <16 x double> %910, i32 12
  %extract1494.i = extractelement <16 x double> %910, i32 13
  %extract1495.i = extractelement <16 x double> %910, i32 14
  %extract1496.i = extractelement <16 x double> %910, i32 15
  %911 = call double @_Z3expd(double %extract1481.i) nounwind
  %912 = call double @_Z3expd(double %extract1482.i) nounwind
  %913 = call double @_Z3expd(double %extract1483.i) nounwind
  %914 = call double @_Z3expd(double %extract1484.i) nounwind
  %915 = call double @_Z3expd(double %extract1485.i) nounwind
  %916 = call double @_Z3expd(double %extract1486.i) nounwind
  %917 = call double @_Z3expd(double %extract1487.i) nounwind
  %918 = call double @_Z3expd(double %extract1488.i) nounwind
  %919 = call double @_Z3expd(double %extract1489.i) nounwind
  %920 = call double @_Z3expd(double %extract1490.i) nounwind
  %921 = call double @_Z3expd(double %extract1491.i) nounwind
  %922 = call double @_Z3expd(double %extract1492.i) nounwind
  %923 = call double @_Z3expd(double %extract1493.i) nounwind
  %924 = call double @_Z3expd(double %extract1494.i) nounwind
  %925 = call double @_Z3expd(double %extract1495.i) nounwind
  %926 = call double @_Z3expd(double %extract1496.i) nounwind
  %temp.vect1497.i = insertelement <16 x double> undef, double %911, i32 0
  %temp.vect1498.i = insertelement <16 x double> %temp.vect1497.i, double %912, i32 1
  %temp.vect1499.i = insertelement <16 x double> %temp.vect1498.i, double %913, i32 2
  %temp.vect1500.i = insertelement <16 x double> %temp.vect1499.i, double %914, i32 3
  %temp.vect1501.i = insertelement <16 x double> %temp.vect1500.i, double %915, i32 4
  %temp.vect1502.i = insertelement <16 x double> %temp.vect1501.i, double %916, i32 5
  %temp.vect1503.i = insertelement <16 x double> %temp.vect1502.i, double %917, i32 6
  %temp.vect1504.i = insertelement <16 x double> %temp.vect1503.i, double %918, i32 7
  %temp.vect1505.i = insertelement <16 x double> %temp.vect1504.i, double %919, i32 8
  %temp.vect1506.i = insertelement <16 x double> %temp.vect1505.i, double %920, i32 9
  %temp.vect1507.i = insertelement <16 x double> %temp.vect1506.i, double %921, i32 10
  %temp.vect1508.i = insertelement <16 x double> %temp.vect1507.i, double %922, i32 11
  %temp.vect1509.i = insertelement <16 x double> %temp.vect1508.i, double %923, i32 12
  %temp.vect1510.i = insertelement <16 x double> %temp.vect1509.i, double %924, i32 13
  %temp.vect1511.i = insertelement <16 x double> %temp.vect1510.i, double %925, i32 14
  %temp.vect1512.i = insertelement <16 x double> %temp.vect1511.i, double %926, i32 15
  %927 = fmul <16 x double> %temp.vect1512.i, <double 2.176000e-01, double 2.176000e-01, double 2.176000e-01, double 2.176000e-01, double 2.176000e-01, double 2.176000e-01, double 2.176000e-01, double 2.176000e-01, double 2.176000e-01, double 2.176000e-01, double 2.176000e-01, double 2.176000e-01, double 2.176000e-01, double 2.176000e-01, double 2.176000e-01, double 2.176000e-01>
  %928 = fmul <16 x double> %33, <double 0xBF37C9BBCB978E43, double 0xBF37C9BBCB978E43, double 0xBF37C9BBCB978E43, double 0xBF37C9BBCB978E43, double 0xBF37C9BBCB978E43, double 0xBF37C9BBCB978E43, double 0xBF37C9BBCB978E43, double 0xBF37C9BBCB978E43, double 0xBF37C9BBCB978E43, double 0xBF37C9BBCB978E43, double 0xBF37C9BBCB978E43, double 0xBF37C9BBCB978E43, double 0xBF37C9BBCB978E43, double 0xBF37C9BBCB978E43, double 0xBF37C9BBCB978E43, double 0xBF37C9BBCB978E43>
  %extract1513.i = extractelement <16 x double> %928, i32 0
  %extract1514.i = extractelement <16 x double> %928, i32 1
  %extract1515.i = extractelement <16 x double> %928, i32 2
  %extract1516.i = extractelement <16 x double> %928, i32 3
  %extract1517.i = extractelement <16 x double> %928, i32 4
  %extract1518.i = extractelement <16 x double> %928, i32 5
  %extract1519.i = extractelement <16 x double> %928, i32 6
  %extract1520.i = extractelement <16 x double> %928, i32 7
  %extract1521.i = extractelement <16 x double> %928, i32 8
  %extract1522.i = extractelement <16 x double> %928, i32 9
  %extract1523.i = extractelement <16 x double> %928, i32 10
  %extract1524.i = extractelement <16 x double> %928, i32 11
  %extract1525.i = extractelement <16 x double> %928, i32 12
  %extract1526.i = extractelement <16 x double> %928, i32 13
  %extract1527.i = extractelement <16 x double> %928, i32 14
  %extract1528.i = extractelement <16 x double> %928, i32 15
  %929 = call double @_Z3expd(double %extract1513.i) nounwind
  %930 = call double @_Z3expd(double %extract1514.i) nounwind
  %931 = call double @_Z3expd(double %extract1515.i) nounwind
  %932 = call double @_Z3expd(double %extract1516.i) nounwind
  %933 = call double @_Z3expd(double %extract1517.i) nounwind
  %934 = call double @_Z3expd(double %extract1518.i) nounwind
  %935 = call double @_Z3expd(double %extract1519.i) nounwind
  %936 = call double @_Z3expd(double %extract1520.i) nounwind
  %937 = call double @_Z3expd(double %extract1521.i) nounwind
  %938 = call double @_Z3expd(double %extract1522.i) nounwind
  %939 = call double @_Z3expd(double %extract1523.i) nounwind
  %940 = call double @_Z3expd(double %extract1524.i) nounwind
  %941 = call double @_Z3expd(double %extract1525.i) nounwind
  %942 = call double @_Z3expd(double %extract1526.i) nounwind
  %943 = call double @_Z3expd(double %extract1527.i) nounwind
  %944 = call double @_Z3expd(double %extract1528.i) nounwind
  %temp.vect1529.i = insertelement <16 x double> undef, double %929, i32 0
  %temp.vect1530.i = insertelement <16 x double> %temp.vect1529.i, double %930, i32 1
  %temp.vect1531.i = insertelement <16 x double> %temp.vect1530.i, double %931, i32 2
  %temp.vect1532.i = insertelement <16 x double> %temp.vect1531.i, double %932, i32 3
  %temp.vect1533.i = insertelement <16 x double> %temp.vect1532.i, double %933, i32 4
  %temp.vect1534.i = insertelement <16 x double> %temp.vect1533.i, double %934, i32 5
  %temp.vect1535.i = insertelement <16 x double> %temp.vect1534.i, double %935, i32 6
  %temp.vect1536.i = insertelement <16 x double> %temp.vect1535.i, double %936, i32 7
  %temp.vect1537.i = insertelement <16 x double> %temp.vect1536.i, double %937, i32 8
  %temp.vect1538.i = insertelement <16 x double> %temp.vect1537.i, double %938, i32 9
  %temp.vect1539.i = insertelement <16 x double> %temp.vect1538.i, double %939, i32 10
  %temp.vect1540.i = insertelement <16 x double> %temp.vect1539.i, double %940, i32 11
  %temp.vect1541.i = insertelement <16 x double> %temp.vect1540.i, double %941, i32 12
  %temp.vect1542.i = insertelement <16 x double> %temp.vect1541.i, double %942, i32 13
  %temp.vect1543.i = insertelement <16 x double> %temp.vect1542.i, double %943, i32 14
  %temp.vect1544.i = insertelement <16 x double> %temp.vect1543.i, double %944, i32 15
  %945 = fmul <16 x double> %temp.vect1544.i, <double 7.824000e-01, double 7.824000e-01, double 7.824000e-01, double 7.824000e-01, double 7.824000e-01, double 7.824000e-01, double 7.824000e-01, double 7.824000e-01, double 7.824000e-01, double 7.824000e-01, double 7.824000e-01, double 7.824000e-01, double 7.824000e-01, double 7.824000e-01, double 7.824000e-01, double 7.824000e-01>
  %946 = fadd <16 x double> %927, %945
  %947 = fmul <16 x double> %355, <double -6.570000e+03, double -6.570000e+03, double -6.570000e+03, double -6.570000e+03, double -6.570000e+03, double -6.570000e+03, double -6.570000e+03, double -6.570000e+03, double -6.570000e+03, double -6.570000e+03, double -6.570000e+03, double -6.570000e+03, double -6.570000e+03, double -6.570000e+03, double -6.570000e+03, double -6.570000e+03>
  %extract1545.i = extractelement <16 x double> %947, i32 0
  %extract1546.i = extractelement <16 x double> %947, i32 1
  %extract1547.i = extractelement <16 x double> %947, i32 2
  %extract1548.i = extractelement <16 x double> %947, i32 3
  %extract1549.i = extractelement <16 x double> %947, i32 4
  %extract1550.i = extractelement <16 x double> %947, i32 5
  %extract1551.i = extractelement <16 x double> %947, i32 6
  %extract1552.i = extractelement <16 x double> %947, i32 7
  %extract1553.i = extractelement <16 x double> %947, i32 8
  %extract1554.i = extractelement <16 x double> %947, i32 9
  %extract1555.i = extractelement <16 x double> %947, i32 10
  %extract1556.i = extractelement <16 x double> %947, i32 11
  %extract1557.i = extractelement <16 x double> %947, i32 12
  %extract1558.i = extractelement <16 x double> %947, i32 13
  %extract1559.i = extractelement <16 x double> %947, i32 14
  %extract1560.i = extractelement <16 x double> %947, i32 15
  %948 = call double @_Z3expd(double %extract1545.i) nounwind
  %949 = call double @_Z3expd(double %extract1546.i) nounwind
  %950 = call double @_Z3expd(double %extract1547.i) nounwind
  %951 = call double @_Z3expd(double %extract1548.i) nounwind
  %952 = call double @_Z3expd(double %extract1549.i) nounwind
  %953 = call double @_Z3expd(double %extract1550.i) nounwind
  %954 = call double @_Z3expd(double %extract1551.i) nounwind
  %955 = call double @_Z3expd(double %extract1552.i) nounwind
  %956 = call double @_Z3expd(double %extract1553.i) nounwind
  %957 = call double @_Z3expd(double %extract1554.i) nounwind
  %958 = call double @_Z3expd(double %extract1555.i) nounwind
  %959 = call double @_Z3expd(double %extract1556.i) nounwind
  %960 = call double @_Z3expd(double %extract1557.i) nounwind
  %961 = call double @_Z3expd(double %extract1558.i) nounwind
  %962 = call double @_Z3expd(double %extract1559.i) nounwind
  %963 = call double @_Z3expd(double %extract1560.i) nounwind
  %temp.vect1561.i = insertelement <16 x double> undef, double %948, i32 0
  %temp.vect1562.i = insertelement <16 x double> %temp.vect1561.i, double %949, i32 1
  %temp.vect1563.i = insertelement <16 x double> %temp.vect1562.i, double %950, i32 2
  %temp.vect1564.i = insertelement <16 x double> %temp.vect1563.i, double %951, i32 3
  %temp.vect1565.i = insertelement <16 x double> %temp.vect1564.i, double %952, i32 4
  %temp.vect1566.i = insertelement <16 x double> %temp.vect1565.i, double %953, i32 5
  %temp.vect1567.i = insertelement <16 x double> %temp.vect1566.i, double %954, i32 6
  %temp.vect1568.i = insertelement <16 x double> %temp.vect1567.i, double %955, i32 7
  %temp.vect1569.i = insertelement <16 x double> %temp.vect1568.i, double %956, i32 8
  %temp.vect1570.i = insertelement <16 x double> %temp.vect1569.i, double %957, i32 9
  %temp.vect1571.i = insertelement <16 x double> %temp.vect1570.i, double %958, i32 10
  %temp.vect1572.i = insertelement <16 x double> %temp.vect1571.i, double %959, i32 11
  %temp.vect1573.i = insertelement <16 x double> %temp.vect1572.i, double %960, i32 12
  %temp.vect1574.i = insertelement <16 x double> %temp.vect1573.i, double %961, i32 13
  %temp.vect1575.i = insertelement <16 x double> %temp.vect1574.i, double %962, i32 14
  %temp.vect1576.i = insertelement <16 x double> %temp.vect1575.i, double %963, i32 15
  %964 = fadd <16 x double> %946, %temp.vect1576.i
  %extract1577.i = extractelement <16 x double> %964, i32 0
  %extract1578.i = extractelement <16 x double> %964, i32 1
  %extract1579.i = extractelement <16 x double> %964, i32 2
  %extract1580.i = extractelement <16 x double> %964, i32 3
  %extract1581.i = extractelement <16 x double> %964, i32 4
  %extract1582.i = extractelement <16 x double> %964, i32 5
  %extract1583.i = extractelement <16 x double> %964, i32 6
  %extract1584.i = extractelement <16 x double> %964, i32 7
  %extract1585.i = extractelement <16 x double> %964, i32 8
  %extract1586.i = extractelement <16 x double> %964, i32 9
  %extract1587.i = extractelement <16 x double> %964, i32 10
  %extract1588.i = extractelement <16 x double> %964, i32 11
  %extract1589.i = extractelement <16 x double> %964, i32 12
  %extract1590.i = extractelement <16 x double> %964, i32 13
  %extract1591.i = extractelement <16 x double> %964, i32 14
  %extract1592.i = extractelement <16 x double> %964, i32 15
  %965 = call double @_Z4fmaxdd(double %extract1577.i, double 1.000000e-200) nounwind
  %966 = call double @_Z4fmaxdd(double %extract1578.i, double 1.000000e-200) nounwind
  %967 = call double @_Z4fmaxdd(double %extract1579.i, double 1.000000e-200) nounwind
  %968 = call double @_Z4fmaxdd(double %extract1580.i, double 1.000000e-200) nounwind
  %969 = call double @_Z4fmaxdd(double %extract1581.i, double 1.000000e-200) nounwind
  %970 = call double @_Z4fmaxdd(double %extract1582.i, double 1.000000e-200) nounwind
  %971 = call double @_Z4fmaxdd(double %extract1583.i, double 1.000000e-200) nounwind
  %972 = call double @_Z4fmaxdd(double %extract1584.i, double 1.000000e-200) nounwind
  %973 = call double @_Z4fmaxdd(double %extract1585.i, double 1.000000e-200) nounwind
  %974 = call double @_Z4fmaxdd(double %extract1586.i, double 1.000000e-200) nounwind
  %975 = call double @_Z4fmaxdd(double %extract1587.i, double 1.000000e-200) nounwind
  %976 = call double @_Z4fmaxdd(double %extract1588.i, double 1.000000e-200) nounwind
  %977 = call double @_Z4fmaxdd(double %extract1589.i, double 1.000000e-200) nounwind
  %978 = call double @_Z4fmaxdd(double %extract1590.i, double 1.000000e-200) nounwind
  %979 = call double @_Z4fmaxdd(double %extract1591.i, double 1.000000e-200) nounwind
  %980 = call double @_Z4fmaxdd(double %extract1592.i, double 1.000000e-200) nounwind
  %981 = call double @_Z5log10d(double %965) nounwind
  %982 = call double @_Z5log10d(double %966) nounwind
  %983 = call double @_Z5log10d(double %967) nounwind
  %984 = call double @_Z5log10d(double %968) nounwind
  %985 = call double @_Z5log10d(double %969) nounwind
  %986 = call double @_Z5log10d(double %970) nounwind
  %987 = call double @_Z5log10d(double %971) nounwind
  %988 = call double @_Z5log10d(double %972) nounwind
  %989 = call double @_Z5log10d(double %973) nounwind
  %990 = call double @_Z5log10d(double %974) nounwind
  %991 = call double @_Z5log10d(double %975) nounwind
  %992 = call double @_Z5log10d(double %976) nounwind
  %993 = call double @_Z5log10d(double %977) nounwind
  %994 = call double @_Z5log10d(double %978) nounwind
  %995 = call double @_Z5log10d(double %979) nounwind
  %996 = call double @_Z5log10d(double %980) nounwind
  %temp.vect1593.i = insertelement <16 x double> undef, double %981, i32 0
  %temp.vect1594.i = insertelement <16 x double> %temp.vect1593.i, double %982, i32 1
  %temp.vect1595.i = insertelement <16 x double> %temp.vect1594.i, double %983, i32 2
  %temp.vect1596.i = insertelement <16 x double> %temp.vect1595.i, double %984, i32 3
  %temp.vect1597.i = insertelement <16 x double> %temp.vect1596.i, double %985, i32 4
  %temp.vect1598.i = insertelement <16 x double> %temp.vect1597.i, double %986, i32 5
  %temp.vect1599.i = insertelement <16 x double> %temp.vect1598.i, double %987, i32 6
  %temp.vect1600.i = insertelement <16 x double> %temp.vect1599.i, double %988, i32 7
  %temp.vect1601.i = insertelement <16 x double> %temp.vect1600.i, double %989, i32 8
  %temp.vect1602.i = insertelement <16 x double> %temp.vect1601.i, double %990, i32 9
  %temp.vect1603.i = insertelement <16 x double> %temp.vect1602.i, double %991, i32 10
  %temp.vect1604.i = insertelement <16 x double> %temp.vect1603.i, double %992, i32 11
  %temp.vect1605.i = insertelement <16 x double> %temp.vect1604.i, double %993, i32 12
  %temp.vect1606.i = insertelement <16 x double> %temp.vect1605.i, double %994, i32 13
  %temp.vect1607.i = insertelement <16 x double> %temp.vect1606.i, double %995, i32 14
  %temp.vect1608.i = insertelement <16 x double> %temp.vect1607.i, double %996, i32 15
  %997 = fmul <16 x double> %temp.vect1608.i, <double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00>
  %998 = fsub <16 x double> <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>, %997
  %999 = fmul <16 x double> %temp.vect1608.i, <double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01>
  %1000 = fadd <16 x double> %999, <double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01>
  %1001 = fsub <16 x double> %temp.vect1624.i, %1000
  %1002 = fmul <16 x double> %1001, <double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01>
  %1003 = fsub <16 x double> %998, %1002
  %1004 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1003
  %1005 = fmul <16 x double> %1001, %1004
  %1006 = fmul <16 x double> %1005, %1005
  %1007 = fadd <16 x double> %1006, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %1008 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1007
  %1009 = fmul <16 x double> %temp.vect1608.i, %1008
  %extract1625.i = extractelement <16 x double> %1009, i32 0
  %extract1626.i = extractelement <16 x double> %1009, i32 1
  %extract1627.i = extractelement <16 x double> %1009, i32 2
  %extract1628.i = extractelement <16 x double> %1009, i32 3
  %extract1629.i = extractelement <16 x double> %1009, i32 4
  %extract1630.i = extractelement <16 x double> %1009, i32 5
  %extract1631.i = extractelement <16 x double> %1009, i32 6
  %extract1632.i = extractelement <16 x double> %1009, i32 7
  %extract1633.i = extractelement <16 x double> %1009, i32 8
  %extract1634.i = extractelement <16 x double> %1009, i32 9
  %extract1635.i = extractelement <16 x double> %1009, i32 10
  %extract1636.i = extractelement <16 x double> %1009, i32 11
  %extract1637.i = extractelement <16 x double> %1009, i32 12
  %extract1638.i = extractelement <16 x double> %1009, i32 13
  %extract1639.i = extractelement <16 x double> %1009, i32 14
  %extract1640.i = extractelement <16 x double> %1009, i32 15
  %1010 = call double @_Z5exp10d(double %extract1625.i) nounwind
  %1011 = call double @_Z5exp10d(double %extract1626.i) nounwind
  %1012 = call double @_Z5exp10d(double %extract1627.i) nounwind
  %1013 = call double @_Z5exp10d(double %extract1628.i) nounwind
  %1014 = call double @_Z5exp10d(double %extract1629.i) nounwind
  %1015 = call double @_Z5exp10d(double %extract1630.i) nounwind
  %1016 = call double @_Z5exp10d(double %extract1631.i) nounwind
  %1017 = call double @_Z5exp10d(double %extract1632.i) nounwind
  %1018 = call double @_Z5exp10d(double %extract1633.i) nounwind
  %1019 = call double @_Z5exp10d(double %extract1634.i) nounwind
  %1020 = call double @_Z5exp10d(double %extract1635.i) nounwind
  %1021 = call double @_Z5exp10d(double %extract1636.i) nounwind
  %1022 = call double @_Z5exp10d(double %extract1637.i) nounwind
  %1023 = call double @_Z5exp10d(double %extract1638.i) nounwind
  %1024 = call double @_Z5exp10d(double %extract1639.i) nounwind
  %1025 = call double @_Z5exp10d(double %extract1640.i) nounwind
  %temp.vect1641.i = insertelement <16 x double> undef, double %1010, i32 0
  %temp.vect1642.i = insertelement <16 x double> %temp.vect1641.i, double %1011, i32 1
  %temp.vect1643.i = insertelement <16 x double> %temp.vect1642.i, double %1012, i32 2
  %temp.vect1644.i = insertelement <16 x double> %temp.vect1643.i, double %1013, i32 3
  %temp.vect1645.i = insertelement <16 x double> %temp.vect1644.i, double %1014, i32 4
  %temp.vect1646.i = insertelement <16 x double> %temp.vect1645.i, double %1015, i32 5
  %temp.vect1647.i = insertelement <16 x double> %temp.vect1646.i, double %1016, i32 6
  %temp.vect1648.i = insertelement <16 x double> %temp.vect1647.i, double %1017, i32 7
  %temp.vect1649.i = insertelement <16 x double> %temp.vect1648.i, double %1018, i32 8
  %temp.vect1650.i = insertelement <16 x double> %temp.vect1649.i, double %1019, i32 9
  %temp.vect1651.i = insertelement <16 x double> %temp.vect1650.i, double %1020, i32 10
  %temp.vect1652.i = insertelement <16 x double> %temp.vect1651.i, double %1021, i32 11
  %temp.vect1653.i = insertelement <16 x double> %temp.vect1652.i, double %1022, i32 12
  %temp.vect1654.i = insertelement <16 x double> %temp.vect1653.i, double %1023, i32 13
  %temp.vect1655.i = insertelement <16 x double> %temp.vect1654.i, double %1024, i32 14
  %temp.vect1656.i = insertelement <16 x double> %temp.vect1655.i, double %1025, i32 15
  %1026 = fmul <16 x double> %temp.vect1656.i, %877
  %1027 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1028 = load i64* %1027, align 8
  %1029 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1030 = load i64* %1029, align 8
  %1031 = add i64 %1028, %1030
  %extract1659.i = add i64 %1031, 4423680
  %1032 = getelementptr inbounds double addrspace(1)* %7, i64 %extract1659.i
  %ptrTypeCast1675.i = bitcast double addrspace(1)* %1032 to <16 x double> addrspace(1)*
  %1033 = load <16 x double> addrspace(1)* %ptrTypeCast1675.i, align 8
  %1034 = fmul <16 x double> %1033, %1026
  %1035 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1036 = load i64* %1035, align 8
  %1037 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1038 = load i64* %1037, align 8
  %1039 = add i64 %1036, %1038
  %extract1678.i = add i64 %1039, 4423680
  %1040 = getelementptr inbounds double addrspace(1)* %7, i64 %extract1678.i
  %ptrTypeCast1694.i = bitcast double addrspace(1)* %1040 to <16 x double> addrspace(1)*
  store <16 x double> %1034, <16 x double> addrspace(1)* %ptrTypeCast1694.i, align 8
  %1041 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1042 = load i64* %1041, align 8
  %1043 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1044 = load i64* %1043, align 8
  %1045 = add i64 %1042, %1044
  %extract1697.i = add i64 %1045, 4423680
  %1046 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1697.i
  %ptrTypeCast1713.i = bitcast double addrspace(1)* %1046 to <16 x double> addrspace(1)*
  %1047 = load <16 x double> addrspace(1)* %ptrTypeCast1713.i, align 8
  %1048 = fmul <16 x double> %1047, %1026
  %1049 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1050 = load i64* %1049, align 8
  %1051 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1052 = load i64* %1051, align 8
  %1053 = add i64 %1050, %1052
  %extract1716.i = add i64 %1053, 4423680
  %1054 = getelementptr inbounds double addrspace(1)* %10, i64 %extract1716.i
  %ptrTypeCast1732.i = bitcast double addrspace(1)* %1054 to <16 x double> addrspace(1)*
  store <16 x double> %1048, <16 x double> addrspace(1)* %ptrTypeCast1732.i, align 8
  %1055 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1056 = load i64* %1055, align 8
  %1057 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1058 = load i64* %1057, align 8
  %1059 = add i64 %1056, %1058
  %extract1735.i = add i64 %1059, 442368
  %1060 = getelementptr inbounds double addrspace(1)* %13, i64 %extract1735.i
  %ptrTypeCast1751.i = bitcast double addrspace(1)* %1060 to <16 x double> addrspace(1)*
  %1061 = load <16 x double> addrspace(1)* %ptrTypeCast1751.i, align 8
  %1062 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1063 = load i64* %1062, align 8
  %1064 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1065 = load i64* %1064, align 8
  %1066 = add i64 %1063, %1065
  %extract1754.i = add i64 %1066, 5197824
  %1067 = getelementptr inbounds double addrspace(1)* %7, i64 %extract1754.i
  %ptrTypeCast1770.i = bitcast double addrspace(1)* %1067 to <16 x double> addrspace(1)*
  %1068 = load <16 x double> addrspace(1)* %ptrTypeCast1770.i, align 8
  %1069 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1068
  %1070 = fmul <16 x double> %127, %1069
  %1071 = fmul <16 x double> %1061, %1070
  %extract1771.i = extractelement <16 x double> %1071, i32 0
  %extract1772.i = extractelement <16 x double> %1071, i32 1
  %extract1773.i = extractelement <16 x double> %1071, i32 2
  %extract1774.i = extractelement <16 x double> %1071, i32 3
  %extract1775.i = extractelement <16 x double> %1071, i32 4
  %extract1776.i = extractelement <16 x double> %1071, i32 5
  %extract1777.i = extractelement <16 x double> %1071, i32 6
  %extract1778.i = extractelement <16 x double> %1071, i32 7
  %extract1779.i = extractelement <16 x double> %1071, i32 8
  %extract1780.i = extractelement <16 x double> %1071, i32 9
  %extract1781.i = extractelement <16 x double> %1071, i32 10
  %extract1782.i = extractelement <16 x double> %1071, i32 11
  %extract1783.i = extractelement <16 x double> %1071, i32 12
  %extract1784.i = extractelement <16 x double> %1071, i32 13
  %extract1785.i = extractelement <16 x double> %1071, i32 14
  %extract1786.i = extractelement <16 x double> %1071, i32 15
  %1072 = fadd <16 x double> %1071, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %1073 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1072
  %1074 = fmul <16 x double> %1071, %1073
  %1075 = call double @_Z4fmaxdd(double %extract1771.i, double 1.000000e-200) nounwind
  %1076 = call double @_Z4fmaxdd(double %extract1772.i, double 1.000000e-200) nounwind
  %1077 = call double @_Z4fmaxdd(double %extract1773.i, double 1.000000e-200) nounwind
  %1078 = call double @_Z4fmaxdd(double %extract1774.i, double 1.000000e-200) nounwind
  %1079 = call double @_Z4fmaxdd(double %extract1775.i, double 1.000000e-200) nounwind
  %1080 = call double @_Z4fmaxdd(double %extract1776.i, double 1.000000e-200) nounwind
  %1081 = call double @_Z4fmaxdd(double %extract1777.i, double 1.000000e-200) nounwind
  %1082 = call double @_Z4fmaxdd(double %extract1778.i, double 1.000000e-200) nounwind
  %1083 = call double @_Z4fmaxdd(double %extract1779.i, double 1.000000e-200) nounwind
  %1084 = call double @_Z4fmaxdd(double %extract1780.i, double 1.000000e-200) nounwind
  %1085 = call double @_Z4fmaxdd(double %extract1781.i, double 1.000000e-200) nounwind
  %1086 = call double @_Z4fmaxdd(double %extract1782.i, double 1.000000e-200) nounwind
  %1087 = call double @_Z4fmaxdd(double %extract1783.i, double 1.000000e-200) nounwind
  %1088 = call double @_Z4fmaxdd(double %extract1784.i, double 1.000000e-200) nounwind
  %1089 = call double @_Z4fmaxdd(double %extract1785.i, double 1.000000e-200) nounwind
  %1090 = call double @_Z4fmaxdd(double %extract1786.i, double 1.000000e-200) nounwind
  %1091 = call double @_Z5log10d(double %1075) nounwind
  %1092 = call double @_Z5log10d(double %1076) nounwind
  %1093 = call double @_Z5log10d(double %1077) nounwind
  %1094 = call double @_Z5log10d(double %1078) nounwind
  %1095 = call double @_Z5log10d(double %1079) nounwind
  %1096 = call double @_Z5log10d(double %1080) nounwind
  %1097 = call double @_Z5log10d(double %1081) nounwind
  %1098 = call double @_Z5log10d(double %1082) nounwind
  %1099 = call double @_Z5log10d(double %1083) nounwind
  %1100 = call double @_Z5log10d(double %1084) nounwind
  %1101 = call double @_Z5log10d(double %1085) nounwind
  %1102 = call double @_Z5log10d(double %1086) nounwind
  %1103 = call double @_Z5log10d(double %1087) nounwind
  %1104 = call double @_Z5log10d(double %1088) nounwind
  %1105 = call double @_Z5log10d(double %1089) nounwind
  %1106 = call double @_Z5log10d(double %1090) nounwind
  %temp.vect1915.i = insertelement <16 x double> undef, double %1091, i32 0
  %temp.vect1916.i = insertelement <16 x double> %temp.vect1915.i, double %1092, i32 1
  %temp.vect1917.i = insertelement <16 x double> %temp.vect1916.i, double %1093, i32 2
  %temp.vect1918.i = insertelement <16 x double> %temp.vect1917.i, double %1094, i32 3
  %temp.vect1919.i = insertelement <16 x double> %temp.vect1918.i, double %1095, i32 4
  %temp.vect1920.i = insertelement <16 x double> %temp.vect1919.i, double %1096, i32 5
  %temp.vect1921.i = insertelement <16 x double> %temp.vect1920.i, double %1097, i32 6
  %temp.vect1922.i = insertelement <16 x double> %temp.vect1921.i, double %1098, i32 7
  %temp.vect1923.i = insertelement <16 x double> %temp.vect1922.i, double %1099, i32 8
  %temp.vect1924.i = insertelement <16 x double> %temp.vect1923.i, double %1100, i32 9
  %temp.vect1925.i = insertelement <16 x double> %temp.vect1924.i, double %1101, i32 10
  %temp.vect1926.i = insertelement <16 x double> %temp.vect1925.i, double %1102, i32 11
  %temp.vect1927.i = insertelement <16 x double> %temp.vect1926.i, double %1103, i32 12
  %temp.vect1928.i = insertelement <16 x double> %temp.vect1927.i, double %1104, i32 13
  %temp.vect1929.i = insertelement <16 x double> %temp.vect1928.i, double %1105, i32 14
  %temp.vect1930.i = insertelement <16 x double> %temp.vect1929.i, double %1106, i32 15
  %1107 = fmul <16 x double> %33, <double 0xBF8A41A41A41A41A, double 0xBF8A41A41A41A41A, double 0xBF8A41A41A41A41A, double 0xBF8A41A41A41A41A, double 0xBF8A41A41A41A41A, double 0xBF8A41A41A41A41A, double 0xBF8A41A41A41A41A, double 0xBF8A41A41A41A41A, double 0xBF8A41A41A41A41A, double 0xBF8A41A41A41A41A, double 0xBF8A41A41A41A41A, double 0xBF8A41A41A41A41A, double 0xBF8A41A41A41A41A, double 0xBF8A41A41A41A41A, double 0xBF8A41A41A41A41A, double 0xBF8A41A41A41A41A>
  %extract1787.i = extractelement <16 x double> %1107, i32 0
  %extract1788.i = extractelement <16 x double> %1107, i32 1
  %extract1789.i = extractelement <16 x double> %1107, i32 2
  %extract1790.i = extractelement <16 x double> %1107, i32 3
  %extract1791.i = extractelement <16 x double> %1107, i32 4
  %extract1792.i = extractelement <16 x double> %1107, i32 5
  %extract1793.i = extractelement <16 x double> %1107, i32 6
  %extract1794.i = extractelement <16 x double> %1107, i32 7
  %extract1795.i = extractelement <16 x double> %1107, i32 8
  %extract1796.i = extractelement <16 x double> %1107, i32 9
  %extract1797.i = extractelement <16 x double> %1107, i32 10
  %extract1798.i = extractelement <16 x double> %1107, i32 11
  %extract1799.i = extractelement <16 x double> %1107, i32 12
  %extract1800.i = extractelement <16 x double> %1107, i32 13
  %extract1801.i = extractelement <16 x double> %1107, i32 14
  %extract1802.i = extractelement <16 x double> %1107, i32 15
  %1108 = call double @_Z3expd(double %extract1787.i) nounwind
  %1109 = call double @_Z3expd(double %extract1788.i) nounwind
  %1110 = call double @_Z3expd(double %extract1789.i) nounwind
  %1111 = call double @_Z3expd(double %extract1790.i) nounwind
  %1112 = call double @_Z3expd(double %extract1791.i) nounwind
  %1113 = call double @_Z3expd(double %extract1792.i) nounwind
  %1114 = call double @_Z3expd(double %extract1793.i) nounwind
  %1115 = call double @_Z3expd(double %extract1794.i) nounwind
  %1116 = call double @_Z3expd(double %extract1795.i) nounwind
  %1117 = call double @_Z3expd(double %extract1796.i) nounwind
  %1118 = call double @_Z3expd(double %extract1797.i) nounwind
  %1119 = call double @_Z3expd(double %extract1798.i) nounwind
  %1120 = call double @_Z3expd(double %extract1799.i) nounwind
  %1121 = call double @_Z3expd(double %extract1800.i) nounwind
  %1122 = call double @_Z3expd(double %extract1801.i) nounwind
  %1123 = call double @_Z3expd(double %extract1802.i) nounwind
  %temp.vect1803.i = insertelement <16 x double> undef, double %1108, i32 0
  %temp.vect1804.i = insertelement <16 x double> %temp.vect1803.i, double %1109, i32 1
  %temp.vect1805.i = insertelement <16 x double> %temp.vect1804.i, double %1110, i32 2
  %temp.vect1806.i = insertelement <16 x double> %temp.vect1805.i, double %1111, i32 3
  %temp.vect1807.i = insertelement <16 x double> %temp.vect1806.i, double %1112, i32 4
  %temp.vect1808.i = insertelement <16 x double> %temp.vect1807.i, double %1113, i32 5
  %temp.vect1809.i = insertelement <16 x double> %temp.vect1808.i, double %1114, i32 6
  %temp.vect1810.i = insertelement <16 x double> %temp.vect1809.i, double %1115, i32 7
  %temp.vect1811.i = insertelement <16 x double> %temp.vect1810.i, double %1116, i32 8
  %temp.vect1812.i = insertelement <16 x double> %temp.vect1811.i, double %1117, i32 9
  %temp.vect1813.i = insertelement <16 x double> %temp.vect1812.i, double %1118, i32 10
  %temp.vect1814.i = insertelement <16 x double> %temp.vect1813.i, double %1119, i32 11
  %temp.vect1815.i = insertelement <16 x double> %temp.vect1814.i, double %1120, i32 12
  %temp.vect1816.i = insertelement <16 x double> %temp.vect1815.i, double %1121, i32 13
  %temp.vect1817.i = insertelement <16 x double> %temp.vect1816.i, double %1122, i32 14
  %temp.vect1818.i = insertelement <16 x double> %temp.vect1817.i, double %1123, i32 15
  %1124 = fmul <16 x double> %temp.vect1818.i, <double 3.200000e-01, double 3.200000e-01, double 3.200000e-01, double 3.200000e-01, double 3.200000e-01, double 3.200000e-01, double 3.200000e-01, double 3.200000e-01, double 3.200000e-01, double 3.200000e-01, double 3.200000e-01, double 3.200000e-01, double 3.200000e-01, double 3.200000e-01, double 3.200000e-01, double 3.200000e-01>
  %1125 = fmul <16 x double> %33, <double 0xBF406CD0E80106CD, double 0xBF406CD0E80106CD, double 0xBF406CD0E80106CD, double 0xBF406CD0E80106CD, double 0xBF406CD0E80106CD, double 0xBF406CD0E80106CD, double 0xBF406CD0E80106CD, double 0xBF406CD0E80106CD, double 0xBF406CD0E80106CD, double 0xBF406CD0E80106CD, double 0xBF406CD0E80106CD, double 0xBF406CD0E80106CD, double 0xBF406CD0E80106CD, double 0xBF406CD0E80106CD, double 0xBF406CD0E80106CD, double 0xBF406CD0E80106CD>
  %extract1819.i = extractelement <16 x double> %1125, i32 0
  %extract1820.i = extractelement <16 x double> %1125, i32 1
  %extract1821.i = extractelement <16 x double> %1125, i32 2
  %extract1822.i = extractelement <16 x double> %1125, i32 3
  %extract1823.i = extractelement <16 x double> %1125, i32 4
  %extract1824.i = extractelement <16 x double> %1125, i32 5
  %extract1825.i = extractelement <16 x double> %1125, i32 6
  %extract1826.i = extractelement <16 x double> %1125, i32 7
  %extract1827.i = extractelement <16 x double> %1125, i32 8
  %extract1828.i = extractelement <16 x double> %1125, i32 9
  %extract1829.i = extractelement <16 x double> %1125, i32 10
  %extract1830.i = extractelement <16 x double> %1125, i32 11
  %extract1831.i = extractelement <16 x double> %1125, i32 12
  %extract1832.i = extractelement <16 x double> %1125, i32 13
  %extract1833.i = extractelement <16 x double> %1125, i32 14
  %extract1834.i = extractelement <16 x double> %1125, i32 15
  %1126 = call double @_Z3expd(double %extract1819.i) nounwind
  %1127 = call double @_Z3expd(double %extract1820.i) nounwind
  %1128 = call double @_Z3expd(double %extract1821.i) nounwind
  %1129 = call double @_Z3expd(double %extract1822.i) nounwind
  %1130 = call double @_Z3expd(double %extract1823.i) nounwind
  %1131 = call double @_Z3expd(double %extract1824.i) nounwind
  %1132 = call double @_Z3expd(double %extract1825.i) nounwind
  %1133 = call double @_Z3expd(double %extract1826.i) nounwind
  %1134 = call double @_Z3expd(double %extract1827.i) nounwind
  %1135 = call double @_Z3expd(double %extract1828.i) nounwind
  %1136 = call double @_Z3expd(double %extract1829.i) nounwind
  %1137 = call double @_Z3expd(double %extract1830.i) nounwind
  %1138 = call double @_Z3expd(double %extract1831.i) nounwind
  %1139 = call double @_Z3expd(double %extract1832.i) nounwind
  %1140 = call double @_Z3expd(double %extract1833.i) nounwind
  %1141 = call double @_Z3expd(double %extract1834.i) nounwind
  %temp.vect1835.i = insertelement <16 x double> undef, double %1126, i32 0
  %temp.vect1836.i = insertelement <16 x double> %temp.vect1835.i, double %1127, i32 1
  %temp.vect1837.i = insertelement <16 x double> %temp.vect1836.i, double %1128, i32 2
  %temp.vect1838.i = insertelement <16 x double> %temp.vect1837.i, double %1129, i32 3
  %temp.vect1839.i = insertelement <16 x double> %temp.vect1838.i, double %1130, i32 4
  %temp.vect1840.i = insertelement <16 x double> %temp.vect1839.i, double %1131, i32 5
  %temp.vect1841.i = insertelement <16 x double> %temp.vect1840.i, double %1132, i32 6
  %temp.vect1842.i = insertelement <16 x double> %temp.vect1841.i, double %1133, i32 7
  %temp.vect1843.i = insertelement <16 x double> %temp.vect1842.i, double %1134, i32 8
  %temp.vect1844.i = insertelement <16 x double> %temp.vect1843.i, double %1135, i32 9
  %temp.vect1845.i = insertelement <16 x double> %temp.vect1844.i, double %1136, i32 10
  %temp.vect1846.i = insertelement <16 x double> %temp.vect1845.i, double %1137, i32 11
  %temp.vect1847.i = insertelement <16 x double> %temp.vect1846.i, double %1138, i32 12
  %temp.vect1848.i = insertelement <16 x double> %temp.vect1847.i, double %1139, i32 13
  %temp.vect1849.i = insertelement <16 x double> %temp.vect1848.i, double %1140, i32 14
  %temp.vect1850.i = insertelement <16 x double> %temp.vect1849.i, double %1141, i32 15
  %1142 = fmul <16 x double> %temp.vect1850.i, <double 6.800000e-01, double 6.800000e-01, double 6.800000e-01, double 6.800000e-01, double 6.800000e-01, double 6.800000e-01, double 6.800000e-01, double 6.800000e-01, double 6.800000e-01, double 6.800000e-01, double 6.800000e-01, double 6.800000e-01, double 6.800000e-01, double 6.800000e-01, double 6.800000e-01, double 6.800000e-01>
  %1143 = fadd <16 x double> %1124, %1142
  %1144 = fmul <16 x double> %355, <double -5.590000e+03, double -5.590000e+03, double -5.590000e+03, double -5.590000e+03, double -5.590000e+03, double -5.590000e+03, double -5.590000e+03, double -5.590000e+03, double -5.590000e+03, double -5.590000e+03, double -5.590000e+03, double -5.590000e+03, double -5.590000e+03, double -5.590000e+03, double -5.590000e+03, double -5.590000e+03>
  %extract1851.i = extractelement <16 x double> %1144, i32 0
  %extract1852.i = extractelement <16 x double> %1144, i32 1
  %extract1853.i = extractelement <16 x double> %1144, i32 2
  %extract1854.i = extractelement <16 x double> %1144, i32 3
  %extract1855.i = extractelement <16 x double> %1144, i32 4
  %extract1856.i = extractelement <16 x double> %1144, i32 5
  %extract1857.i = extractelement <16 x double> %1144, i32 6
  %extract1858.i = extractelement <16 x double> %1144, i32 7
  %extract1859.i = extractelement <16 x double> %1144, i32 8
  %extract1860.i = extractelement <16 x double> %1144, i32 9
  %extract1861.i = extractelement <16 x double> %1144, i32 10
  %extract1862.i = extractelement <16 x double> %1144, i32 11
  %extract1863.i = extractelement <16 x double> %1144, i32 12
  %extract1864.i = extractelement <16 x double> %1144, i32 13
  %extract1865.i = extractelement <16 x double> %1144, i32 14
  %extract1866.i = extractelement <16 x double> %1144, i32 15
  %1145 = call double @_Z3expd(double %extract1851.i) nounwind
  %1146 = call double @_Z3expd(double %extract1852.i) nounwind
  %1147 = call double @_Z3expd(double %extract1853.i) nounwind
  %1148 = call double @_Z3expd(double %extract1854.i) nounwind
  %1149 = call double @_Z3expd(double %extract1855.i) nounwind
  %1150 = call double @_Z3expd(double %extract1856.i) nounwind
  %1151 = call double @_Z3expd(double %extract1857.i) nounwind
  %1152 = call double @_Z3expd(double %extract1858.i) nounwind
  %1153 = call double @_Z3expd(double %extract1859.i) nounwind
  %1154 = call double @_Z3expd(double %extract1860.i) nounwind
  %1155 = call double @_Z3expd(double %extract1861.i) nounwind
  %1156 = call double @_Z3expd(double %extract1862.i) nounwind
  %1157 = call double @_Z3expd(double %extract1863.i) nounwind
  %1158 = call double @_Z3expd(double %extract1864.i) nounwind
  %1159 = call double @_Z3expd(double %extract1865.i) nounwind
  %1160 = call double @_Z3expd(double %extract1866.i) nounwind
  %temp.vect1867.i = insertelement <16 x double> undef, double %1145, i32 0
  %temp.vect1868.i = insertelement <16 x double> %temp.vect1867.i, double %1146, i32 1
  %temp.vect1869.i = insertelement <16 x double> %temp.vect1868.i, double %1147, i32 2
  %temp.vect1870.i = insertelement <16 x double> %temp.vect1869.i, double %1148, i32 3
  %temp.vect1871.i = insertelement <16 x double> %temp.vect1870.i, double %1149, i32 4
  %temp.vect1872.i = insertelement <16 x double> %temp.vect1871.i, double %1150, i32 5
  %temp.vect1873.i = insertelement <16 x double> %temp.vect1872.i, double %1151, i32 6
  %temp.vect1874.i = insertelement <16 x double> %temp.vect1873.i, double %1152, i32 7
  %temp.vect1875.i = insertelement <16 x double> %temp.vect1874.i, double %1153, i32 8
  %temp.vect1876.i = insertelement <16 x double> %temp.vect1875.i, double %1154, i32 9
  %temp.vect1877.i = insertelement <16 x double> %temp.vect1876.i, double %1155, i32 10
  %temp.vect1878.i = insertelement <16 x double> %temp.vect1877.i, double %1156, i32 11
  %temp.vect1879.i = insertelement <16 x double> %temp.vect1878.i, double %1157, i32 12
  %temp.vect1880.i = insertelement <16 x double> %temp.vect1879.i, double %1158, i32 13
  %temp.vect1881.i = insertelement <16 x double> %temp.vect1880.i, double %1159, i32 14
  %temp.vect1882.i = insertelement <16 x double> %temp.vect1881.i, double %1160, i32 15
  %1161 = fadd <16 x double> %1143, %temp.vect1882.i
  %extract1883.i = extractelement <16 x double> %1161, i32 0
  %extract1884.i = extractelement <16 x double> %1161, i32 1
  %extract1885.i = extractelement <16 x double> %1161, i32 2
  %extract1886.i = extractelement <16 x double> %1161, i32 3
  %extract1887.i = extractelement <16 x double> %1161, i32 4
  %extract1888.i = extractelement <16 x double> %1161, i32 5
  %extract1889.i = extractelement <16 x double> %1161, i32 6
  %extract1890.i = extractelement <16 x double> %1161, i32 7
  %extract1891.i = extractelement <16 x double> %1161, i32 8
  %extract1892.i = extractelement <16 x double> %1161, i32 9
  %extract1893.i = extractelement <16 x double> %1161, i32 10
  %extract1894.i = extractelement <16 x double> %1161, i32 11
  %extract1895.i = extractelement <16 x double> %1161, i32 12
  %extract1896.i = extractelement <16 x double> %1161, i32 13
  %extract1897.i = extractelement <16 x double> %1161, i32 14
  %extract1898.i = extractelement <16 x double> %1161, i32 15
  %1162 = call double @_Z4fmaxdd(double %extract1883.i, double 1.000000e-200) nounwind
  %1163 = call double @_Z4fmaxdd(double %extract1884.i, double 1.000000e-200) nounwind
  %1164 = call double @_Z4fmaxdd(double %extract1885.i, double 1.000000e-200) nounwind
  %1165 = call double @_Z4fmaxdd(double %extract1886.i, double 1.000000e-200) nounwind
  %1166 = call double @_Z4fmaxdd(double %extract1887.i, double 1.000000e-200) nounwind
  %1167 = call double @_Z4fmaxdd(double %extract1888.i, double 1.000000e-200) nounwind
  %1168 = call double @_Z4fmaxdd(double %extract1889.i, double 1.000000e-200) nounwind
  %1169 = call double @_Z4fmaxdd(double %extract1890.i, double 1.000000e-200) nounwind
  %1170 = call double @_Z4fmaxdd(double %extract1891.i, double 1.000000e-200) nounwind
  %1171 = call double @_Z4fmaxdd(double %extract1892.i, double 1.000000e-200) nounwind
  %1172 = call double @_Z4fmaxdd(double %extract1893.i, double 1.000000e-200) nounwind
  %1173 = call double @_Z4fmaxdd(double %extract1894.i, double 1.000000e-200) nounwind
  %1174 = call double @_Z4fmaxdd(double %extract1895.i, double 1.000000e-200) nounwind
  %1175 = call double @_Z4fmaxdd(double %extract1896.i, double 1.000000e-200) nounwind
  %1176 = call double @_Z4fmaxdd(double %extract1897.i, double 1.000000e-200) nounwind
  %1177 = call double @_Z4fmaxdd(double %extract1898.i, double 1.000000e-200) nounwind
  %1178 = call double @_Z5log10d(double %1162) nounwind
  %1179 = call double @_Z5log10d(double %1163) nounwind
  %1180 = call double @_Z5log10d(double %1164) nounwind
  %1181 = call double @_Z5log10d(double %1165) nounwind
  %1182 = call double @_Z5log10d(double %1166) nounwind
  %1183 = call double @_Z5log10d(double %1167) nounwind
  %1184 = call double @_Z5log10d(double %1168) nounwind
  %1185 = call double @_Z5log10d(double %1169) nounwind
  %1186 = call double @_Z5log10d(double %1170) nounwind
  %1187 = call double @_Z5log10d(double %1171) nounwind
  %1188 = call double @_Z5log10d(double %1172) nounwind
  %1189 = call double @_Z5log10d(double %1173) nounwind
  %1190 = call double @_Z5log10d(double %1174) nounwind
  %1191 = call double @_Z5log10d(double %1175) nounwind
  %1192 = call double @_Z5log10d(double %1176) nounwind
  %1193 = call double @_Z5log10d(double %1177) nounwind
  %temp.vect1899.i = insertelement <16 x double> undef, double %1178, i32 0
  %temp.vect1900.i = insertelement <16 x double> %temp.vect1899.i, double %1179, i32 1
  %temp.vect1901.i = insertelement <16 x double> %temp.vect1900.i, double %1180, i32 2
  %temp.vect1902.i = insertelement <16 x double> %temp.vect1901.i, double %1181, i32 3
  %temp.vect1903.i = insertelement <16 x double> %temp.vect1902.i, double %1182, i32 4
  %temp.vect1904.i = insertelement <16 x double> %temp.vect1903.i, double %1183, i32 5
  %temp.vect1905.i = insertelement <16 x double> %temp.vect1904.i, double %1184, i32 6
  %temp.vect1906.i = insertelement <16 x double> %temp.vect1905.i, double %1185, i32 7
  %temp.vect1907.i = insertelement <16 x double> %temp.vect1906.i, double %1186, i32 8
  %temp.vect1908.i = insertelement <16 x double> %temp.vect1907.i, double %1187, i32 9
  %temp.vect1909.i = insertelement <16 x double> %temp.vect1908.i, double %1188, i32 10
  %temp.vect1910.i = insertelement <16 x double> %temp.vect1909.i, double %1189, i32 11
  %temp.vect1911.i = insertelement <16 x double> %temp.vect1910.i, double %1190, i32 12
  %temp.vect1912.i = insertelement <16 x double> %temp.vect1911.i, double %1191, i32 13
  %temp.vect1913.i = insertelement <16 x double> %temp.vect1912.i, double %1192, i32 14
  %temp.vect1914.i = insertelement <16 x double> %temp.vect1913.i, double %1193, i32 15
  %1194 = fmul <16 x double> %temp.vect1914.i, <double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00>
  %1195 = fsub <16 x double> <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>, %1194
  %1196 = fmul <16 x double> %temp.vect1914.i, <double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01>
  %1197 = fadd <16 x double> %1196, <double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01>
  %1198 = fsub <16 x double> %temp.vect1930.i, %1197
  %1199 = fmul <16 x double> %1198, <double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01>
  %1200 = fsub <16 x double> %1195, %1199
  %1201 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1200
  %1202 = fmul <16 x double> %1198, %1201
  %1203 = fmul <16 x double> %1202, %1202
  %1204 = fadd <16 x double> %1203, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %1205 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1204
  %1206 = fmul <16 x double> %temp.vect1914.i, %1205
  %extract1931.i = extractelement <16 x double> %1206, i32 0
  %extract1932.i = extractelement <16 x double> %1206, i32 1
  %extract1933.i = extractelement <16 x double> %1206, i32 2
  %extract1934.i = extractelement <16 x double> %1206, i32 3
  %extract1935.i = extractelement <16 x double> %1206, i32 4
  %extract1936.i = extractelement <16 x double> %1206, i32 5
  %extract1937.i = extractelement <16 x double> %1206, i32 6
  %extract1938.i = extractelement <16 x double> %1206, i32 7
  %extract1939.i = extractelement <16 x double> %1206, i32 8
  %extract1940.i = extractelement <16 x double> %1206, i32 9
  %extract1941.i = extractelement <16 x double> %1206, i32 10
  %extract1942.i = extractelement <16 x double> %1206, i32 11
  %extract1943.i = extractelement <16 x double> %1206, i32 12
  %extract1944.i = extractelement <16 x double> %1206, i32 13
  %extract1945.i = extractelement <16 x double> %1206, i32 14
  %extract1946.i = extractelement <16 x double> %1206, i32 15
  %1207 = call double @_Z5exp10d(double %extract1931.i) nounwind
  %1208 = call double @_Z5exp10d(double %extract1932.i) nounwind
  %1209 = call double @_Z5exp10d(double %extract1933.i) nounwind
  %1210 = call double @_Z5exp10d(double %extract1934.i) nounwind
  %1211 = call double @_Z5exp10d(double %extract1935.i) nounwind
  %1212 = call double @_Z5exp10d(double %extract1936.i) nounwind
  %1213 = call double @_Z5exp10d(double %extract1937.i) nounwind
  %1214 = call double @_Z5exp10d(double %extract1938.i) nounwind
  %1215 = call double @_Z5exp10d(double %extract1939.i) nounwind
  %1216 = call double @_Z5exp10d(double %extract1940.i) nounwind
  %1217 = call double @_Z5exp10d(double %extract1941.i) nounwind
  %1218 = call double @_Z5exp10d(double %extract1942.i) nounwind
  %1219 = call double @_Z5exp10d(double %extract1943.i) nounwind
  %1220 = call double @_Z5exp10d(double %extract1944.i) nounwind
  %1221 = call double @_Z5exp10d(double %extract1945.i) nounwind
  %1222 = call double @_Z5exp10d(double %extract1946.i) nounwind
  %temp.vect1947.i = insertelement <16 x double> undef, double %1207, i32 0
  %temp.vect1948.i = insertelement <16 x double> %temp.vect1947.i, double %1208, i32 1
  %temp.vect1949.i = insertelement <16 x double> %temp.vect1948.i, double %1209, i32 2
  %temp.vect1950.i = insertelement <16 x double> %temp.vect1949.i, double %1210, i32 3
  %temp.vect1951.i = insertelement <16 x double> %temp.vect1950.i, double %1211, i32 4
  %temp.vect1952.i = insertelement <16 x double> %temp.vect1951.i, double %1212, i32 5
  %temp.vect1953.i = insertelement <16 x double> %temp.vect1952.i, double %1213, i32 6
  %temp.vect1954.i = insertelement <16 x double> %temp.vect1953.i, double %1214, i32 7
  %temp.vect1955.i = insertelement <16 x double> %temp.vect1954.i, double %1215, i32 8
  %temp.vect1956.i = insertelement <16 x double> %temp.vect1955.i, double %1216, i32 9
  %temp.vect1957.i = insertelement <16 x double> %temp.vect1956.i, double %1217, i32 10
  %temp.vect1958.i = insertelement <16 x double> %temp.vect1957.i, double %1218, i32 11
  %temp.vect1959.i = insertelement <16 x double> %temp.vect1958.i, double %1219, i32 12
  %temp.vect1960.i = insertelement <16 x double> %temp.vect1959.i, double %1220, i32 13
  %temp.vect1961.i = insertelement <16 x double> %temp.vect1960.i, double %1221, i32 14
  %temp.vect1962.i = insertelement <16 x double> %temp.vect1961.i, double %1222, i32 15
  %1223 = fmul <16 x double> %temp.vect1962.i, %1074
  %1224 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1225 = load i64* %1224, align 8
  %1226 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1227 = load i64* %1226, align 8
  %1228 = add i64 %1225, %1227
  %extract1965.i = add i64 %1228, 5197824
  %1229 = getelementptr inbounds double addrspace(1)* %7, i64 %extract1965.i
  %ptrTypeCast1981.i = bitcast double addrspace(1)* %1229 to <16 x double> addrspace(1)*
  %1230 = load <16 x double> addrspace(1)* %ptrTypeCast1981.i, align 8
  %1231 = fmul <16 x double> %1230, %1223
  %1232 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1233 = load i64* %1232, align 8
  %1234 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1235 = load i64* %1234, align 8
  %1236 = add i64 %1233, %1235
  %extract1984.i = add i64 %1236, 5197824
  %1237 = getelementptr inbounds double addrspace(1)* %7, i64 %extract1984.i
  %ptrTypeCast2000.i = bitcast double addrspace(1)* %1237 to <16 x double> addrspace(1)*
  store <16 x double> %1231, <16 x double> addrspace(1)* %ptrTypeCast2000.i, align 8
  %1238 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1239 = load i64* %1238, align 8
  %1240 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1241 = load i64* %1240, align 8
  %1242 = add i64 %1239, %1241
  %extract2003.i = add i64 %1242, 5197824
  %1243 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2003.i
  %ptrTypeCast2019.i = bitcast double addrspace(1)* %1243 to <16 x double> addrspace(1)*
  %1244 = load <16 x double> addrspace(1)* %ptrTypeCast2019.i, align 8
  %1245 = fmul <16 x double> %1244, %1223
  %1246 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1247 = load i64* %1246, align 8
  %1248 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1249 = load i64* %1248, align 8
  %1250 = add i64 %1247, %1249
  %extract2022.i = add i64 %1250, 5197824
  %1251 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2022.i
  %ptrTypeCast2038.i = bitcast double addrspace(1)* %1251 to <16 x double> addrspace(1)*
  store <16 x double> %1245, <16 x double> addrspace(1)* %ptrTypeCast2038.i, align 8
  %1252 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1253 = load i64* %1252, align 8
  %1254 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1255 = load i64* %1254, align 8
  %1256 = add i64 %1253, %1255
  %extract2041.i = add i64 %1256, 552960
  %1257 = getelementptr inbounds double addrspace(1)* %13, i64 %extract2041.i
  %ptrTypeCast2057.i = bitcast double addrspace(1)* %1257 to <16 x double> addrspace(1)*
  %1258 = load <16 x double> addrspace(1)* %ptrTypeCast2057.i, align 8
  %1259 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1260 = load i64* %1259, align 8
  %1261 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1262 = load i64* %1261, align 8
  %1263 = add i64 %1260, %1262
  %extract2060.i = add i64 %1263, 6082560
  %1264 = getelementptr inbounds double addrspace(1)* %7, i64 %extract2060.i
  %ptrTypeCast2076.i = bitcast double addrspace(1)* %1264 to <16 x double> addrspace(1)*
  %1265 = load <16 x double> addrspace(1)* %ptrTypeCast2076.i, align 8
  %1266 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1265
  %1267 = fmul <16 x double> %127, %1266
  %1268 = fmul <16 x double> %1258, %1267
  %extract2077.i = extractelement <16 x double> %1268, i32 0
  %extract2078.i = extractelement <16 x double> %1268, i32 1
  %extract2079.i = extractelement <16 x double> %1268, i32 2
  %extract2080.i = extractelement <16 x double> %1268, i32 3
  %extract2081.i = extractelement <16 x double> %1268, i32 4
  %extract2082.i = extractelement <16 x double> %1268, i32 5
  %extract2083.i = extractelement <16 x double> %1268, i32 6
  %extract2084.i = extractelement <16 x double> %1268, i32 7
  %extract2085.i = extractelement <16 x double> %1268, i32 8
  %extract2086.i = extractelement <16 x double> %1268, i32 9
  %extract2087.i = extractelement <16 x double> %1268, i32 10
  %extract2088.i = extractelement <16 x double> %1268, i32 11
  %extract2089.i = extractelement <16 x double> %1268, i32 12
  %extract2090.i = extractelement <16 x double> %1268, i32 13
  %extract2091.i = extractelement <16 x double> %1268, i32 14
  %extract2092.i = extractelement <16 x double> %1268, i32 15
  %1269 = fadd <16 x double> %1268, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %1270 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1269
  %1271 = fmul <16 x double> %1268, %1270
  %1272 = call double @_Z4fmaxdd(double %extract2077.i, double 1.000000e-200) nounwind
  %1273 = call double @_Z4fmaxdd(double %extract2078.i, double 1.000000e-200) nounwind
  %1274 = call double @_Z4fmaxdd(double %extract2079.i, double 1.000000e-200) nounwind
  %1275 = call double @_Z4fmaxdd(double %extract2080.i, double 1.000000e-200) nounwind
  %1276 = call double @_Z4fmaxdd(double %extract2081.i, double 1.000000e-200) nounwind
  %1277 = call double @_Z4fmaxdd(double %extract2082.i, double 1.000000e-200) nounwind
  %1278 = call double @_Z4fmaxdd(double %extract2083.i, double 1.000000e-200) nounwind
  %1279 = call double @_Z4fmaxdd(double %extract2084.i, double 1.000000e-200) nounwind
  %1280 = call double @_Z4fmaxdd(double %extract2085.i, double 1.000000e-200) nounwind
  %1281 = call double @_Z4fmaxdd(double %extract2086.i, double 1.000000e-200) nounwind
  %1282 = call double @_Z4fmaxdd(double %extract2087.i, double 1.000000e-200) nounwind
  %1283 = call double @_Z4fmaxdd(double %extract2088.i, double 1.000000e-200) nounwind
  %1284 = call double @_Z4fmaxdd(double %extract2089.i, double 1.000000e-200) nounwind
  %1285 = call double @_Z4fmaxdd(double %extract2090.i, double 1.000000e-200) nounwind
  %1286 = call double @_Z4fmaxdd(double %extract2091.i, double 1.000000e-200) nounwind
  %1287 = call double @_Z4fmaxdd(double %extract2092.i, double 1.000000e-200) nounwind
  %1288 = call double @_Z5log10d(double %1272) nounwind
  %1289 = call double @_Z5log10d(double %1273) nounwind
  %1290 = call double @_Z5log10d(double %1274) nounwind
  %1291 = call double @_Z5log10d(double %1275) nounwind
  %1292 = call double @_Z5log10d(double %1276) nounwind
  %1293 = call double @_Z5log10d(double %1277) nounwind
  %1294 = call double @_Z5log10d(double %1278) nounwind
  %1295 = call double @_Z5log10d(double %1279) nounwind
  %1296 = call double @_Z5log10d(double %1280) nounwind
  %1297 = call double @_Z5log10d(double %1281) nounwind
  %1298 = call double @_Z5log10d(double %1282) nounwind
  %1299 = call double @_Z5log10d(double %1283) nounwind
  %1300 = call double @_Z5log10d(double %1284) nounwind
  %1301 = call double @_Z5log10d(double %1285) nounwind
  %1302 = call double @_Z5log10d(double %1286) nounwind
  %1303 = call double @_Z5log10d(double %1287) nounwind
  %temp.vect2221.i = insertelement <16 x double> undef, double %1288, i32 0
  %temp.vect2222.i = insertelement <16 x double> %temp.vect2221.i, double %1289, i32 1
  %temp.vect2223.i = insertelement <16 x double> %temp.vect2222.i, double %1290, i32 2
  %temp.vect2224.i = insertelement <16 x double> %temp.vect2223.i, double %1291, i32 3
  %temp.vect2225.i = insertelement <16 x double> %temp.vect2224.i, double %1292, i32 4
  %temp.vect2226.i = insertelement <16 x double> %temp.vect2225.i, double %1293, i32 5
  %temp.vect2227.i = insertelement <16 x double> %temp.vect2226.i, double %1294, i32 6
  %temp.vect2228.i = insertelement <16 x double> %temp.vect2227.i, double %1295, i32 7
  %temp.vect2229.i = insertelement <16 x double> %temp.vect2228.i, double %1296, i32 8
  %temp.vect2230.i = insertelement <16 x double> %temp.vect2229.i, double %1297, i32 9
  %temp.vect2231.i = insertelement <16 x double> %temp.vect2230.i, double %1298, i32 10
  %temp.vect2232.i = insertelement <16 x double> %temp.vect2231.i, double %1299, i32 11
  %temp.vect2233.i = insertelement <16 x double> %temp.vect2232.i, double %1300, i32 12
  %temp.vect2234.i = insertelement <16 x double> %temp.vect2233.i, double %1301, i32 13
  %temp.vect2235.i = insertelement <16 x double> %temp.vect2234.i, double %1302, i32 14
  %temp.vect2236.i = insertelement <16 x double> %temp.vect2235.i, double %1303, i32 15
  %1304 = fmul <16 x double> %33, <double 0xBF6DCA01DCA01DCA, double 0xBF6DCA01DCA01DCA, double 0xBF6DCA01DCA01DCA, double 0xBF6DCA01DCA01DCA, double 0xBF6DCA01DCA01DCA, double 0xBF6DCA01DCA01DCA, double 0xBF6DCA01DCA01DCA, double 0xBF6DCA01DCA01DCA, double 0xBF6DCA01DCA01DCA, double 0xBF6DCA01DCA01DCA, double 0xBF6DCA01DCA01DCA, double 0xBF6DCA01DCA01DCA, double 0xBF6DCA01DCA01DCA, double 0xBF6DCA01DCA01DCA, double 0xBF6DCA01DCA01DCA, double 0xBF6DCA01DCA01DCA>
  %extract2093.i = extractelement <16 x double> %1304, i32 0
  %extract2094.i = extractelement <16 x double> %1304, i32 1
  %extract2095.i = extractelement <16 x double> %1304, i32 2
  %extract2096.i = extractelement <16 x double> %1304, i32 3
  %extract2097.i = extractelement <16 x double> %1304, i32 4
  %extract2098.i = extractelement <16 x double> %1304, i32 5
  %extract2099.i = extractelement <16 x double> %1304, i32 6
  %extract2100.i = extractelement <16 x double> %1304, i32 7
  %extract2101.i = extractelement <16 x double> %1304, i32 8
  %extract2102.i = extractelement <16 x double> %1304, i32 9
  %extract2103.i = extractelement <16 x double> %1304, i32 10
  %extract2104.i = extractelement <16 x double> %1304, i32 11
  %extract2105.i = extractelement <16 x double> %1304, i32 12
  %extract2106.i = extractelement <16 x double> %1304, i32 13
  %extract2107.i = extractelement <16 x double> %1304, i32 14
  %extract2108.i = extractelement <16 x double> %1304, i32 15
  %1305 = call double @_Z3expd(double %extract2093.i) nounwind
  %1306 = call double @_Z3expd(double %extract2094.i) nounwind
  %1307 = call double @_Z3expd(double %extract2095.i) nounwind
  %1308 = call double @_Z3expd(double %extract2096.i) nounwind
  %1309 = call double @_Z3expd(double %extract2097.i) nounwind
  %1310 = call double @_Z3expd(double %extract2098.i) nounwind
  %1311 = call double @_Z3expd(double %extract2099.i) nounwind
  %1312 = call double @_Z3expd(double %extract2100.i) nounwind
  %1313 = call double @_Z3expd(double %extract2101.i) nounwind
  %1314 = call double @_Z3expd(double %extract2102.i) nounwind
  %1315 = call double @_Z3expd(double %extract2103.i) nounwind
  %1316 = call double @_Z3expd(double %extract2104.i) nounwind
  %1317 = call double @_Z3expd(double %extract2105.i) nounwind
  %1318 = call double @_Z3expd(double %extract2106.i) nounwind
  %1319 = call double @_Z3expd(double %extract2107.i) nounwind
  %1320 = call double @_Z3expd(double %extract2108.i) nounwind
  %temp.vect2109.i = insertelement <16 x double> undef, double %1305, i32 0
  %temp.vect2110.i = insertelement <16 x double> %temp.vect2109.i, double %1306, i32 1
  %temp.vect2111.i = insertelement <16 x double> %temp.vect2110.i, double %1307, i32 2
  %temp.vect2112.i = insertelement <16 x double> %temp.vect2111.i, double %1308, i32 3
  %temp.vect2113.i = insertelement <16 x double> %temp.vect2112.i, double %1309, i32 4
  %temp.vect2114.i = insertelement <16 x double> %temp.vect2113.i, double %1310, i32 5
  %temp.vect2115.i = insertelement <16 x double> %temp.vect2114.i, double %1311, i32 6
  %temp.vect2116.i = insertelement <16 x double> %temp.vect2115.i, double %1312, i32 7
  %temp.vect2117.i = insertelement <16 x double> %temp.vect2116.i, double %1313, i32 8
  %temp.vect2118.i = insertelement <16 x double> %temp.vect2117.i, double %1314, i32 9
  %temp.vect2119.i = insertelement <16 x double> %temp.vect2118.i, double %1315, i32 10
  %temp.vect2120.i = insertelement <16 x double> %temp.vect2119.i, double %1316, i32 11
  %temp.vect2121.i = insertelement <16 x double> %temp.vect2120.i, double %1317, i32 12
  %temp.vect2122.i = insertelement <16 x double> %temp.vect2121.i, double %1318, i32 13
  %temp.vect2123.i = insertelement <16 x double> %temp.vect2122.i, double %1319, i32 14
  %temp.vect2124.i = insertelement <16 x double> %temp.vect2123.i, double %1320, i32 15
  %1321 = fmul <16 x double> %temp.vect2124.i, <double 4.093000e-01, double 4.093000e-01, double 4.093000e-01, double 4.093000e-01, double 4.093000e-01, double 4.093000e-01, double 4.093000e-01, double 4.093000e-01, double 4.093000e-01, double 4.093000e-01, double 4.093000e-01, double 4.093000e-01, double 4.093000e-01, double 4.093000e-01, double 4.093000e-01, double 4.093000e-01>
  %1322 = fmul <16 x double> %33, <double 0xBF4ABA41FBD2E5B1, double 0xBF4ABA41FBD2E5B1, double 0xBF4ABA41FBD2E5B1, double 0xBF4ABA41FBD2E5B1, double 0xBF4ABA41FBD2E5B1, double 0xBF4ABA41FBD2E5B1, double 0xBF4ABA41FBD2E5B1, double 0xBF4ABA41FBD2E5B1, double 0xBF4ABA41FBD2E5B1, double 0xBF4ABA41FBD2E5B1, double 0xBF4ABA41FBD2E5B1, double 0xBF4ABA41FBD2E5B1, double 0xBF4ABA41FBD2E5B1, double 0xBF4ABA41FBD2E5B1, double 0xBF4ABA41FBD2E5B1, double 0xBF4ABA41FBD2E5B1>
  %extract2125.i = extractelement <16 x double> %1322, i32 0
  %extract2126.i = extractelement <16 x double> %1322, i32 1
  %extract2127.i = extractelement <16 x double> %1322, i32 2
  %extract2128.i = extractelement <16 x double> %1322, i32 3
  %extract2129.i = extractelement <16 x double> %1322, i32 4
  %extract2130.i = extractelement <16 x double> %1322, i32 5
  %extract2131.i = extractelement <16 x double> %1322, i32 6
  %extract2132.i = extractelement <16 x double> %1322, i32 7
  %extract2133.i = extractelement <16 x double> %1322, i32 8
  %extract2134.i = extractelement <16 x double> %1322, i32 9
  %extract2135.i = extractelement <16 x double> %1322, i32 10
  %extract2136.i = extractelement <16 x double> %1322, i32 11
  %extract2137.i = extractelement <16 x double> %1322, i32 12
  %extract2138.i = extractelement <16 x double> %1322, i32 13
  %extract2139.i = extractelement <16 x double> %1322, i32 14
  %extract2140.i = extractelement <16 x double> %1322, i32 15
  %1323 = call double @_Z3expd(double %extract2125.i) nounwind
  %1324 = call double @_Z3expd(double %extract2126.i) nounwind
  %1325 = call double @_Z3expd(double %extract2127.i) nounwind
  %1326 = call double @_Z3expd(double %extract2128.i) nounwind
  %1327 = call double @_Z3expd(double %extract2129.i) nounwind
  %1328 = call double @_Z3expd(double %extract2130.i) nounwind
  %1329 = call double @_Z3expd(double %extract2131.i) nounwind
  %1330 = call double @_Z3expd(double %extract2132.i) nounwind
  %1331 = call double @_Z3expd(double %extract2133.i) nounwind
  %1332 = call double @_Z3expd(double %extract2134.i) nounwind
  %1333 = call double @_Z3expd(double %extract2135.i) nounwind
  %1334 = call double @_Z3expd(double %extract2136.i) nounwind
  %1335 = call double @_Z3expd(double %extract2137.i) nounwind
  %1336 = call double @_Z3expd(double %extract2138.i) nounwind
  %1337 = call double @_Z3expd(double %extract2139.i) nounwind
  %1338 = call double @_Z3expd(double %extract2140.i) nounwind
  %temp.vect2141.i = insertelement <16 x double> undef, double %1323, i32 0
  %temp.vect2142.i = insertelement <16 x double> %temp.vect2141.i, double %1324, i32 1
  %temp.vect2143.i = insertelement <16 x double> %temp.vect2142.i, double %1325, i32 2
  %temp.vect2144.i = insertelement <16 x double> %temp.vect2143.i, double %1326, i32 3
  %temp.vect2145.i = insertelement <16 x double> %temp.vect2144.i, double %1327, i32 4
  %temp.vect2146.i = insertelement <16 x double> %temp.vect2145.i, double %1328, i32 5
  %temp.vect2147.i = insertelement <16 x double> %temp.vect2146.i, double %1329, i32 6
  %temp.vect2148.i = insertelement <16 x double> %temp.vect2147.i, double %1330, i32 7
  %temp.vect2149.i = insertelement <16 x double> %temp.vect2148.i, double %1331, i32 8
  %temp.vect2150.i = insertelement <16 x double> %temp.vect2149.i, double %1332, i32 9
  %temp.vect2151.i = insertelement <16 x double> %temp.vect2150.i, double %1333, i32 10
  %temp.vect2152.i = insertelement <16 x double> %temp.vect2151.i, double %1334, i32 11
  %temp.vect2153.i = insertelement <16 x double> %temp.vect2152.i, double %1335, i32 12
  %temp.vect2154.i = insertelement <16 x double> %temp.vect2153.i, double %1336, i32 13
  %temp.vect2155.i = insertelement <16 x double> %temp.vect2154.i, double %1337, i32 14
  %temp.vect2156.i = insertelement <16 x double> %temp.vect2155.i, double %1338, i32 15
  %1339 = fmul <16 x double> %temp.vect2156.i, <double 5.907000e-01, double 5.907000e-01, double 5.907000e-01, double 5.907000e-01, double 5.907000e-01, double 5.907000e-01, double 5.907000e-01, double 5.907000e-01, double 5.907000e-01, double 5.907000e-01, double 5.907000e-01, double 5.907000e-01, double 5.907000e-01, double 5.907000e-01, double 5.907000e-01, double 5.907000e-01>
  %1340 = fadd <16 x double> %1321, %1339
  %1341 = fmul <16 x double> %355, <double -5.185000e+03, double -5.185000e+03, double -5.185000e+03, double -5.185000e+03, double -5.185000e+03, double -5.185000e+03, double -5.185000e+03, double -5.185000e+03, double -5.185000e+03, double -5.185000e+03, double -5.185000e+03, double -5.185000e+03, double -5.185000e+03, double -5.185000e+03, double -5.185000e+03, double -5.185000e+03>
  %extract2157.i = extractelement <16 x double> %1341, i32 0
  %extract2158.i = extractelement <16 x double> %1341, i32 1
  %extract2159.i = extractelement <16 x double> %1341, i32 2
  %extract2160.i = extractelement <16 x double> %1341, i32 3
  %extract2161.i = extractelement <16 x double> %1341, i32 4
  %extract2162.i = extractelement <16 x double> %1341, i32 5
  %extract2163.i = extractelement <16 x double> %1341, i32 6
  %extract2164.i = extractelement <16 x double> %1341, i32 7
  %extract2165.i = extractelement <16 x double> %1341, i32 8
  %extract2166.i = extractelement <16 x double> %1341, i32 9
  %extract2167.i = extractelement <16 x double> %1341, i32 10
  %extract2168.i = extractelement <16 x double> %1341, i32 11
  %extract2169.i = extractelement <16 x double> %1341, i32 12
  %extract2170.i = extractelement <16 x double> %1341, i32 13
  %extract2171.i = extractelement <16 x double> %1341, i32 14
  %extract2172.i = extractelement <16 x double> %1341, i32 15
  %1342 = call double @_Z3expd(double %extract2157.i) nounwind
  %1343 = call double @_Z3expd(double %extract2158.i) nounwind
  %1344 = call double @_Z3expd(double %extract2159.i) nounwind
  %1345 = call double @_Z3expd(double %extract2160.i) nounwind
  %1346 = call double @_Z3expd(double %extract2161.i) nounwind
  %1347 = call double @_Z3expd(double %extract2162.i) nounwind
  %1348 = call double @_Z3expd(double %extract2163.i) nounwind
  %1349 = call double @_Z3expd(double %extract2164.i) nounwind
  %1350 = call double @_Z3expd(double %extract2165.i) nounwind
  %1351 = call double @_Z3expd(double %extract2166.i) nounwind
  %1352 = call double @_Z3expd(double %extract2167.i) nounwind
  %1353 = call double @_Z3expd(double %extract2168.i) nounwind
  %1354 = call double @_Z3expd(double %extract2169.i) nounwind
  %1355 = call double @_Z3expd(double %extract2170.i) nounwind
  %1356 = call double @_Z3expd(double %extract2171.i) nounwind
  %1357 = call double @_Z3expd(double %extract2172.i) nounwind
  %temp.vect2173.i = insertelement <16 x double> undef, double %1342, i32 0
  %temp.vect2174.i = insertelement <16 x double> %temp.vect2173.i, double %1343, i32 1
  %temp.vect2175.i = insertelement <16 x double> %temp.vect2174.i, double %1344, i32 2
  %temp.vect2176.i = insertelement <16 x double> %temp.vect2175.i, double %1345, i32 3
  %temp.vect2177.i = insertelement <16 x double> %temp.vect2176.i, double %1346, i32 4
  %temp.vect2178.i = insertelement <16 x double> %temp.vect2177.i, double %1347, i32 5
  %temp.vect2179.i = insertelement <16 x double> %temp.vect2178.i, double %1348, i32 6
  %temp.vect2180.i = insertelement <16 x double> %temp.vect2179.i, double %1349, i32 7
  %temp.vect2181.i = insertelement <16 x double> %temp.vect2180.i, double %1350, i32 8
  %temp.vect2182.i = insertelement <16 x double> %temp.vect2181.i, double %1351, i32 9
  %temp.vect2183.i = insertelement <16 x double> %temp.vect2182.i, double %1352, i32 10
  %temp.vect2184.i = insertelement <16 x double> %temp.vect2183.i, double %1353, i32 11
  %temp.vect2185.i = insertelement <16 x double> %temp.vect2184.i, double %1354, i32 12
  %temp.vect2186.i = insertelement <16 x double> %temp.vect2185.i, double %1355, i32 13
  %temp.vect2187.i = insertelement <16 x double> %temp.vect2186.i, double %1356, i32 14
  %temp.vect2188.i = insertelement <16 x double> %temp.vect2187.i, double %1357, i32 15
  %1358 = fadd <16 x double> %1340, %temp.vect2188.i
  %extract2189.i = extractelement <16 x double> %1358, i32 0
  %extract2190.i = extractelement <16 x double> %1358, i32 1
  %extract2191.i = extractelement <16 x double> %1358, i32 2
  %extract2192.i = extractelement <16 x double> %1358, i32 3
  %extract2193.i = extractelement <16 x double> %1358, i32 4
  %extract2194.i = extractelement <16 x double> %1358, i32 5
  %extract2195.i = extractelement <16 x double> %1358, i32 6
  %extract2196.i = extractelement <16 x double> %1358, i32 7
  %extract2197.i = extractelement <16 x double> %1358, i32 8
  %extract2198.i = extractelement <16 x double> %1358, i32 9
  %extract2199.i = extractelement <16 x double> %1358, i32 10
  %extract2200.i = extractelement <16 x double> %1358, i32 11
  %extract2201.i = extractelement <16 x double> %1358, i32 12
  %extract2202.i = extractelement <16 x double> %1358, i32 13
  %extract2203.i = extractelement <16 x double> %1358, i32 14
  %extract2204.i = extractelement <16 x double> %1358, i32 15
  %1359 = call double @_Z4fmaxdd(double %extract2189.i, double 1.000000e-200) nounwind
  %1360 = call double @_Z4fmaxdd(double %extract2190.i, double 1.000000e-200) nounwind
  %1361 = call double @_Z4fmaxdd(double %extract2191.i, double 1.000000e-200) nounwind
  %1362 = call double @_Z4fmaxdd(double %extract2192.i, double 1.000000e-200) nounwind
  %1363 = call double @_Z4fmaxdd(double %extract2193.i, double 1.000000e-200) nounwind
  %1364 = call double @_Z4fmaxdd(double %extract2194.i, double 1.000000e-200) nounwind
  %1365 = call double @_Z4fmaxdd(double %extract2195.i, double 1.000000e-200) nounwind
  %1366 = call double @_Z4fmaxdd(double %extract2196.i, double 1.000000e-200) nounwind
  %1367 = call double @_Z4fmaxdd(double %extract2197.i, double 1.000000e-200) nounwind
  %1368 = call double @_Z4fmaxdd(double %extract2198.i, double 1.000000e-200) nounwind
  %1369 = call double @_Z4fmaxdd(double %extract2199.i, double 1.000000e-200) nounwind
  %1370 = call double @_Z4fmaxdd(double %extract2200.i, double 1.000000e-200) nounwind
  %1371 = call double @_Z4fmaxdd(double %extract2201.i, double 1.000000e-200) nounwind
  %1372 = call double @_Z4fmaxdd(double %extract2202.i, double 1.000000e-200) nounwind
  %1373 = call double @_Z4fmaxdd(double %extract2203.i, double 1.000000e-200) nounwind
  %1374 = call double @_Z4fmaxdd(double %extract2204.i, double 1.000000e-200) nounwind
  %1375 = call double @_Z5log10d(double %1359) nounwind
  %1376 = call double @_Z5log10d(double %1360) nounwind
  %1377 = call double @_Z5log10d(double %1361) nounwind
  %1378 = call double @_Z5log10d(double %1362) nounwind
  %1379 = call double @_Z5log10d(double %1363) nounwind
  %1380 = call double @_Z5log10d(double %1364) nounwind
  %1381 = call double @_Z5log10d(double %1365) nounwind
  %1382 = call double @_Z5log10d(double %1366) nounwind
  %1383 = call double @_Z5log10d(double %1367) nounwind
  %1384 = call double @_Z5log10d(double %1368) nounwind
  %1385 = call double @_Z5log10d(double %1369) nounwind
  %1386 = call double @_Z5log10d(double %1370) nounwind
  %1387 = call double @_Z5log10d(double %1371) nounwind
  %1388 = call double @_Z5log10d(double %1372) nounwind
  %1389 = call double @_Z5log10d(double %1373) nounwind
  %1390 = call double @_Z5log10d(double %1374) nounwind
  %temp.vect2205.i = insertelement <16 x double> undef, double %1375, i32 0
  %temp.vect2206.i = insertelement <16 x double> %temp.vect2205.i, double %1376, i32 1
  %temp.vect2207.i = insertelement <16 x double> %temp.vect2206.i, double %1377, i32 2
  %temp.vect2208.i = insertelement <16 x double> %temp.vect2207.i, double %1378, i32 3
  %temp.vect2209.i = insertelement <16 x double> %temp.vect2208.i, double %1379, i32 4
  %temp.vect2210.i = insertelement <16 x double> %temp.vect2209.i, double %1380, i32 5
  %temp.vect2211.i = insertelement <16 x double> %temp.vect2210.i, double %1381, i32 6
  %temp.vect2212.i = insertelement <16 x double> %temp.vect2211.i, double %1382, i32 7
  %temp.vect2213.i = insertelement <16 x double> %temp.vect2212.i, double %1383, i32 8
  %temp.vect2214.i = insertelement <16 x double> %temp.vect2213.i, double %1384, i32 9
  %temp.vect2215.i = insertelement <16 x double> %temp.vect2214.i, double %1385, i32 10
  %temp.vect2216.i = insertelement <16 x double> %temp.vect2215.i, double %1386, i32 11
  %temp.vect2217.i = insertelement <16 x double> %temp.vect2216.i, double %1387, i32 12
  %temp.vect2218.i = insertelement <16 x double> %temp.vect2217.i, double %1388, i32 13
  %temp.vect2219.i = insertelement <16 x double> %temp.vect2218.i, double %1389, i32 14
  %temp.vect2220.i = insertelement <16 x double> %temp.vect2219.i, double %1390, i32 15
  %1391 = fmul <16 x double> %temp.vect2220.i, <double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00>
  %1392 = fsub <16 x double> <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>, %1391
  %1393 = fmul <16 x double> %temp.vect2220.i, <double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01>
  %1394 = fadd <16 x double> %1393, <double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01>
  %1395 = fsub <16 x double> %temp.vect2236.i, %1394
  %1396 = fmul <16 x double> %1395, <double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01>
  %1397 = fsub <16 x double> %1392, %1396
  %1398 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1397
  %1399 = fmul <16 x double> %1395, %1398
  %1400 = fmul <16 x double> %1399, %1399
  %1401 = fadd <16 x double> %1400, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %1402 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1401
  %1403 = fmul <16 x double> %temp.vect2220.i, %1402
  %extract2237.i = extractelement <16 x double> %1403, i32 0
  %extract2238.i = extractelement <16 x double> %1403, i32 1
  %extract2239.i = extractelement <16 x double> %1403, i32 2
  %extract2240.i = extractelement <16 x double> %1403, i32 3
  %extract2241.i = extractelement <16 x double> %1403, i32 4
  %extract2242.i = extractelement <16 x double> %1403, i32 5
  %extract2243.i = extractelement <16 x double> %1403, i32 6
  %extract2244.i = extractelement <16 x double> %1403, i32 7
  %extract2245.i = extractelement <16 x double> %1403, i32 8
  %extract2246.i = extractelement <16 x double> %1403, i32 9
  %extract2247.i = extractelement <16 x double> %1403, i32 10
  %extract2248.i = extractelement <16 x double> %1403, i32 11
  %extract2249.i = extractelement <16 x double> %1403, i32 12
  %extract2250.i = extractelement <16 x double> %1403, i32 13
  %extract2251.i = extractelement <16 x double> %1403, i32 14
  %extract2252.i = extractelement <16 x double> %1403, i32 15
  %1404 = call double @_Z5exp10d(double %extract2237.i) nounwind
  %1405 = call double @_Z5exp10d(double %extract2238.i) nounwind
  %1406 = call double @_Z5exp10d(double %extract2239.i) nounwind
  %1407 = call double @_Z5exp10d(double %extract2240.i) nounwind
  %1408 = call double @_Z5exp10d(double %extract2241.i) nounwind
  %1409 = call double @_Z5exp10d(double %extract2242.i) nounwind
  %1410 = call double @_Z5exp10d(double %extract2243.i) nounwind
  %1411 = call double @_Z5exp10d(double %extract2244.i) nounwind
  %1412 = call double @_Z5exp10d(double %extract2245.i) nounwind
  %1413 = call double @_Z5exp10d(double %extract2246.i) nounwind
  %1414 = call double @_Z5exp10d(double %extract2247.i) nounwind
  %1415 = call double @_Z5exp10d(double %extract2248.i) nounwind
  %1416 = call double @_Z5exp10d(double %extract2249.i) nounwind
  %1417 = call double @_Z5exp10d(double %extract2250.i) nounwind
  %1418 = call double @_Z5exp10d(double %extract2251.i) nounwind
  %1419 = call double @_Z5exp10d(double %extract2252.i) nounwind
  %temp.vect2253.i = insertelement <16 x double> undef, double %1404, i32 0
  %temp.vect2254.i = insertelement <16 x double> %temp.vect2253.i, double %1405, i32 1
  %temp.vect2255.i = insertelement <16 x double> %temp.vect2254.i, double %1406, i32 2
  %temp.vect2256.i = insertelement <16 x double> %temp.vect2255.i, double %1407, i32 3
  %temp.vect2257.i = insertelement <16 x double> %temp.vect2256.i, double %1408, i32 4
  %temp.vect2258.i = insertelement <16 x double> %temp.vect2257.i, double %1409, i32 5
  %temp.vect2259.i = insertelement <16 x double> %temp.vect2258.i, double %1410, i32 6
  %temp.vect2260.i = insertelement <16 x double> %temp.vect2259.i, double %1411, i32 7
  %temp.vect2261.i = insertelement <16 x double> %temp.vect2260.i, double %1412, i32 8
  %temp.vect2262.i = insertelement <16 x double> %temp.vect2261.i, double %1413, i32 9
  %temp.vect2263.i = insertelement <16 x double> %temp.vect2262.i, double %1414, i32 10
  %temp.vect2264.i = insertelement <16 x double> %temp.vect2263.i, double %1415, i32 11
  %temp.vect2265.i = insertelement <16 x double> %temp.vect2264.i, double %1416, i32 12
  %temp.vect2266.i = insertelement <16 x double> %temp.vect2265.i, double %1417, i32 13
  %temp.vect2267.i = insertelement <16 x double> %temp.vect2266.i, double %1418, i32 14
  %temp.vect2268.i = insertelement <16 x double> %temp.vect2267.i, double %1419, i32 15
  %1420 = fmul <16 x double> %temp.vect2268.i, %1271
  %1421 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1422 = load i64* %1421, align 8
  %1423 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1424 = load i64* %1423, align 8
  %1425 = add i64 %1422, %1424
  %extract2271.i = add i64 %1425, 6082560
  %1426 = getelementptr inbounds double addrspace(1)* %7, i64 %extract2271.i
  %ptrTypeCast2287.i = bitcast double addrspace(1)* %1426 to <16 x double> addrspace(1)*
  %1427 = load <16 x double> addrspace(1)* %ptrTypeCast2287.i, align 8
  %1428 = fmul <16 x double> %1427, %1420
  %1429 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1430 = load i64* %1429, align 8
  %1431 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1432 = load i64* %1431, align 8
  %1433 = add i64 %1430, %1432
  %extract2290.i = add i64 %1433, 6082560
  %1434 = getelementptr inbounds double addrspace(1)* %7, i64 %extract2290.i
  %ptrTypeCast2306.i = bitcast double addrspace(1)* %1434 to <16 x double> addrspace(1)*
  store <16 x double> %1428, <16 x double> addrspace(1)* %ptrTypeCast2306.i, align 8
  %1435 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1436 = load i64* %1435, align 8
  %1437 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1438 = load i64* %1437, align 8
  %1439 = add i64 %1436, %1438
  %extract2309.i = add i64 %1439, 6082560
  %1440 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2309.i
  %ptrTypeCast2325.i = bitcast double addrspace(1)* %1440 to <16 x double> addrspace(1)*
  %1441 = load <16 x double> addrspace(1)* %ptrTypeCast2325.i, align 8
  %1442 = fmul <16 x double> %1441, %1420
  %1443 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1444 = load i64* %1443, align 8
  %1445 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1446 = load i64* %1445, align 8
  %1447 = add i64 %1444, %1446
  %extract2328.i = add i64 %1447, 6082560
  %1448 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2328.i
  %ptrTypeCast2344.i = bitcast double addrspace(1)* %1448 to <16 x double> addrspace(1)*
  store <16 x double> %1442, <16 x double> addrspace(1)* %ptrTypeCast2344.i, align 8
  %1449 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1450 = load i64* %1449, align 8
  %1451 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1452 = load i64* %1451, align 8
  %1453 = add i64 %1450, %1452
  %extract2347.i = add i64 %1453, 663552
  %1454 = getelementptr inbounds double addrspace(1)* %13, i64 %extract2347.i
  %ptrTypeCast2363.i = bitcast double addrspace(1)* %1454 to <16 x double> addrspace(1)*
  %1455 = load <16 x double> addrspace(1)* %ptrTypeCast2363.i, align 8
  %1456 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1457 = load i64* %1456, align 8
  %1458 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1459 = load i64* %1458, align 8
  %1460 = add i64 %1457, %1459
  %extract2366.i = add i64 %1460, 7741440
  %1461 = getelementptr inbounds double addrspace(1)* %7, i64 %extract2366.i
  %ptrTypeCast2382.i = bitcast double addrspace(1)* %1461 to <16 x double> addrspace(1)*
  %1462 = load <16 x double> addrspace(1)* %ptrTypeCast2382.i, align 8
  %1463 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1462
  %1464 = fmul <16 x double> %127, %1463
  %1465 = fmul <16 x double> %1455, %1464
  %extract2383.i = extractelement <16 x double> %1465, i32 0
  %extract2384.i = extractelement <16 x double> %1465, i32 1
  %extract2385.i = extractelement <16 x double> %1465, i32 2
  %extract2386.i = extractelement <16 x double> %1465, i32 3
  %extract2387.i = extractelement <16 x double> %1465, i32 4
  %extract2388.i = extractelement <16 x double> %1465, i32 5
  %extract2389.i = extractelement <16 x double> %1465, i32 6
  %extract2390.i = extractelement <16 x double> %1465, i32 7
  %extract2391.i = extractelement <16 x double> %1465, i32 8
  %extract2392.i = extractelement <16 x double> %1465, i32 9
  %extract2393.i = extractelement <16 x double> %1465, i32 10
  %extract2394.i = extractelement <16 x double> %1465, i32 11
  %extract2395.i = extractelement <16 x double> %1465, i32 12
  %extract2396.i = extractelement <16 x double> %1465, i32 13
  %extract2397.i = extractelement <16 x double> %1465, i32 14
  %extract2398.i = extractelement <16 x double> %1465, i32 15
  %1466 = fadd <16 x double> %1465, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %1467 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1466
  %1468 = fmul <16 x double> %1465, %1467
  %1469 = call double @_Z4fmaxdd(double %extract2383.i, double 1.000000e-200) nounwind
  %1470 = call double @_Z4fmaxdd(double %extract2384.i, double 1.000000e-200) nounwind
  %1471 = call double @_Z4fmaxdd(double %extract2385.i, double 1.000000e-200) nounwind
  %1472 = call double @_Z4fmaxdd(double %extract2386.i, double 1.000000e-200) nounwind
  %1473 = call double @_Z4fmaxdd(double %extract2387.i, double 1.000000e-200) nounwind
  %1474 = call double @_Z4fmaxdd(double %extract2388.i, double 1.000000e-200) nounwind
  %1475 = call double @_Z4fmaxdd(double %extract2389.i, double 1.000000e-200) nounwind
  %1476 = call double @_Z4fmaxdd(double %extract2390.i, double 1.000000e-200) nounwind
  %1477 = call double @_Z4fmaxdd(double %extract2391.i, double 1.000000e-200) nounwind
  %1478 = call double @_Z4fmaxdd(double %extract2392.i, double 1.000000e-200) nounwind
  %1479 = call double @_Z4fmaxdd(double %extract2393.i, double 1.000000e-200) nounwind
  %1480 = call double @_Z4fmaxdd(double %extract2394.i, double 1.000000e-200) nounwind
  %1481 = call double @_Z4fmaxdd(double %extract2395.i, double 1.000000e-200) nounwind
  %1482 = call double @_Z4fmaxdd(double %extract2396.i, double 1.000000e-200) nounwind
  %1483 = call double @_Z4fmaxdd(double %extract2397.i, double 1.000000e-200) nounwind
  %1484 = call double @_Z4fmaxdd(double %extract2398.i, double 1.000000e-200) nounwind
  %1485 = call double @_Z5log10d(double %1469) nounwind
  %1486 = call double @_Z5log10d(double %1470) nounwind
  %1487 = call double @_Z5log10d(double %1471) nounwind
  %1488 = call double @_Z5log10d(double %1472) nounwind
  %1489 = call double @_Z5log10d(double %1473) nounwind
  %1490 = call double @_Z5log10d(double %1474) nounwind
  %1491 = call double @_Z5log10d(double %1475) nounwind
  %1492 = call double @_Z5log10d(double %1476) nounwind
  %1493 = call double @_Z5log10d(double %1477) nounwind
  %1494 = call double @_Z5log10d(double %1478) nounwind
  %1495 = call double @_Z5log10d(double %1479) nounwind
  %1496 = call double @_Z5log10d(double %1480) nounwind
  %1497 = call double @_Z5log10d(double %1481) nounwind
  %1498 = call double @_Z5log10d(double %1482) nounwind
  %1499 = call double @_Z5log10d(double %1483) nounwind
  %1500 = call double @_Z5log10d(double %1484) nounwind
  %temp.vect2511.i = insertelement <16 x double> undef, double %1485, i32 0
  %temp.vect2512.i = insertelement <16 x double> %temp.vect2511.i, double %1486, i32 1
  %temp.vect2513.i = insertelement <16 x double> %temp.vect2512.i, double %1487, i32 2
  %temp.vect2514.i = insertelement <16 x double> %temp.vect2513.i, double %1488, i32 3
  %temp.vect2515.i = insertelement <16 x double> %temp.vect2514.i, double %1489, i32 4
  %temp.vect2516.i = insertelement <16 x double> %temp.vect2515.i, double %1490, i32 5
  %temp.vect2517.i = insertelement <16 x double> %temp.vect2516.i, double %1491, i32 6
  %temp.vect2518.i = insertelement <16 x double> %temp.vect2517.i, double %1492, i32 7
  %temp.vect2519.i = insertelement <16 x double> %temp.vect2518.i, double %1493, i32 8
  %temp.vect2520.i = insertelement <16 x double> %temp.vect2519.i, double %1494, i32 9
  %temp.vect2521.i = insertelement <16 x double> %temp.vect2520.i, double %1495, i32 10
  %temp.vect2522.i = insertelement <16 x double> %temp.vect2521.i, double %1496, i32 11
  %temp.vect2523.i = insertelement <16 x double> %temp.vect2522.i, double %1497, i32 12
  %temp.vect2524.i = insertelement <16 x double> %temp.vect2523.i, double %1498, i32 13
  %temp.vect2525.i = insertelement <16 x double> %temp.vect2524.i, double %1499, i32 14
  %temp.vect2526.i = insertelement <16 x double> %temp.vect2525.i, double %1500, i32 15
  %1501 = call double @_Z3expd(double %extract564.i) nounwind
  %1502 = call double @_Z3expd(double %extract565.i) nounwind
  %1503 = call double @_Z3expd(double %extract566.i) nounwind
  %1504 = call double @_Z3expd(double %extract567.i) nounwind
  %1505 = call double @_Z3expd(double %extract568.i) nounwind
  %1506 = call double @_Z3expd(double %extract569.i) nounwind
  %1507 = call double @_Z3expd(double %extract570.i) nounwind
  %1508 = call double @_Z3expd(double %extract571.i) nounwind
  %1509 = call double @_Z3expd(double %extract572.i) nounwind
  %1510 = call double @_Z3expd(double %extract573.i) nounwind
  %1511 = call double @_Z3expd(double %extract574.i) nounwind
  %1512 = call double @_Z3expd(double %extract575.i) nounwind
  %1513 = call double @_Z3expd(double %extract576.i) nounwind
  %1514 = call double @_Z3expd(double %extract577.i) nounwind
  %1515 = call double @_Z3expd(double %extract578.i) nounwind
  %1516 = call double @_Z3expd(double %extract579.i) nounwind
  %temp.vect2399.i = insertelement <16 x double> undef, double %1501, i32 0
  %temp.vect2400.i = insertelement <16 x double> %temp.vect2399.i, double %1502, i32 1
  %temp.vect2401.i = insertelement <16 x double> %temp.vect2400.i, double %1503, i32 2
  %temp.vect2402.i = insertelement <16 x double> %temp.vect2401.i, double %1504, i32 3
  %temp.vect2403.i = insertelement <16 x double> %temp.vect2402.i, double %1505, i32 4
  %temp.vect2404.i = insertelement <16 x double> %temp.vect2403.i, double %1506, i32 5
  %temp.vect2405.i = insertelement <16 x double> %temp.vect2404.i, double %1507, i32 6
  %temp.vect2406.i = insertelement <16 x double> %temp.vect2405.i, double %1508, i32 7
  %temp.vect2407.i = insertelement <16 x double> %temp.vect2406.i, double %1509, i32 8
  %temp.vect2408.i = insertelement <16 x double> %temp.vect2407.i, double %1510, i32 9
  %temp.vect2409.i = insertelement <16 x double> %temp.vect2408.i, double %1511, i32 10
  %temp.vect2410.i = insertelement <16 x double> %temp.vect2409.i, double %1512, i32 11
  %temp.vect2411.i = insertelement <16 x double> %temp.vect2410.i, double %1513, i32 12
  %temp.vect2412.i = insertelement <16 x double> %temp.vect2411.i, double %1514, i32 13
  %temp.vect2413.i = insertelement <16 x double> %temp.vect2412.i, double %1515, i32 14
  %temp.vect2414.i = insertelement <16 x double> %temp.vect2413.i, double %1516, i32 15
  %1517 = fmul <16 x double> %temp.vect2414.i, <double 2.420000e-01, double 2.420000e-01, double 2.420000e-01, double 2.420000e-01, double 2.420000e-01, double 2.420000e-01, double 2.420000e-01, double 2.420000e-01, double 2.420000e-01, double 2.420000e-01, double 2.420000e-01, double 2.420000e-01, double 2.420000e-01, double 2.420000e-01, double 2.420000e-01, double 2.420000e-01>
  %1518 = fmul <16 x double> %33, <double 0xBF45129A6C53A1D5, double 0xBF45129A6C53A1D5, double 0xBF45129A6C53A1D5, double 0xBF45129A6C53A1D5, double 0xBF45129A6C53A1D5, double 0xBF45129A6C53A1D5, double 0xBF45129A6C53A1D5, double 0xBF45129A6C53A1D5, double 0xBF45129A6C53A1D5, double 0xBF45129A6C53A1D5, double 0xBF45129A6C53A1D5, double 0xBF45129A6C53A1D5, double 0xBF45129A6C53A1D5, double 0xBF45129A6C53A1D5, double 0xBF45129A6C53A1D5, double 0xBF45129A6C53A1D5>
  %extract2415.i = extractelement <16 x double> %1518, i32 0
  %extract2416.i = extractelement <16 x double> %1518, i32 1
  %extract2417.i = extractelement <16 x double> %1518, i32 2
  %extract2418.i = extractelement <16 x double> %1518, i32 3
  %extract2419.i = extractelement <16 x double> %1518, i32 4
  %extract2420.i = extractelement <16 x double> %1518, i32 5
  %extract2421.i = extractelement <16 x double> %1518, i32 6
  %extract2422.i = extractelement <16 x double> %1518, i32 7
  %extract2423.i = extractelement <16 x double> %1518, i32 8
  %extract2424.i = extractelement <16 x double> %1518, i32 9
  %extract2425.i = extractelement <16 x double> %1518, i32 10
  %extract2426.i = extractelement <16 x double> %1518, i32 11
  %extract2427.i = extractelement <16 x double> %1518, i32 12
  %extract2428.i = extractelement <16 x double> %1518, i32 13
  %extract2429.i = extractelement <16 x double> %1518, i32 14
  %extract2430.i = extractelement <16 x double> %1518, i32 15
  %1519 = call double @_Z3expd(double %extract2415.i) nounwind
  %1520 = call double @_Z3expd(double %extract2416.i) nounwind
  %1521 = call double @_Z3expd(double %extract2417.i) nounwind
  %1522 = call double @_Z3expd(double %extract2418.i) nounwind
  %1523 = call double @_Z3expd(double %extract2419.i) nounwind
  %1524 = call double @_Z3expd(double %extract2420.i) nounwind
  %1525 = call double @_Z3expd(double %extract2421.i) nounwind
  %1526 = call double @_Z3expd(double %extract2422.i) nounwind
  %1527 = call double @_Z3expd(double %extract2423.i) nounwind
  %1528 = call double @_Z3expd(double %extract2424.i) nounwind
  %1529 = call double @_Z3expd(double %extract2425.i) nounwind
  %1530 = call double @_Z3expd(double %extract2426.i) nounwind
  %1531 = call double @_Z3expd(double %extract2427.i) nounwind
  %1532 = call double @_Z3expd(double %extract2428.i) nounwind
  %1533 = call double @_Z3expd(double %extract2429.i) nounwind
  %1534 = call double @_Z3expd(double %extract2430.i) nounwind
  %temp.vect2431.i = insertelement <16 x double> undef, double %1519, i32 0
  %temp.vect2432.i = insertelement <16 x double> %temp.vect2431.i, double %1520, i32 1
  %temp.vect2433.i = insertelement <16 x double> %temp.vect2432.i, double %1521, i32 2
  %temp.vect2434.i = insertelement <16 x double> %temp.vect2433.i, double %1522, i32 3
  %temp.vect2435.i = insertelement <16 x double> %temp.vect2434.i, double %1523, i32 4
  %temp.vect2436.i = insertelement <16 x double> %temp.vect2435.i, double %1524, i32 5
  %temp.vect2437.i = insertelement <16 x double> %temp.vect2436.i, double %1525, i32 6
  %temp.vect2438.i = insertelement <16 x double> %temp.vect2437.i, double %1526, i32 7
  %temp.vect2439.i = insertelement <16 x double> %temp.vect2438.i, double %1527, i32 8
  %temp.vect2440.i = insertelement <16 x double> %temp.vect2439.i, double %1528, i32 9
  %temp.vect2441.i = insertelement <16 x double> %temp.vect2440.i, double %1529, i32 10
  %temp.vect2442.i = insertelement <16 x double> %temp.vect2441.i, double %1530, i32 11
  %temp.vect2443.i = insertelement <16 x double> %temp.vect2442.i, double %1531, i32 12
  %temp.vect2444.i = insertelement <16 x double> %temp.vect2443.i, double %1532, i32 13
  %temp.vect2445.i = insertelement <16 x double> %temp.vect2444.i, double %1533, i32 14
  %temp.vect2446.i = insertelement <16 x double> %temp.vect2445.i, double %1534, i32 15
  %1535 = fmul <16 x double> %temp.vect2446.i, <double 7.580000e-01, double 7.580000e-01, double 7.580000e-01, double 7.580000e-01, double 7.580000e-01, double 7.580000e-01, double 7.580000e-01, double 7.580000e-01, double 7.580000e-01, double 7.580000e-01, double 7.580000e-01, double 7.580000e-01, double 7.580000e-01, double 7.580000e-01, double 7.580000e-01, double 7.580000e-01>
  %1536 = fadd <16 x double> %1517, %1535
  %1537 = fmul <16 x double> %355, <double -4.200000e+03, double -4.200000e+03, double -4.200000e+03, double -4.200000e+03, double -4.200000e+03, double -4.200000e+03, double -4.200000e+03, double -4.200000e+03, double -4.200000e+03, double -4.200000e+03, double -4.200000e+03, double -4.200000e+03, double -4.200000e+03, double -4.200000e+03, double -4.200000e+03, double -4.200000e+03>
  %extract2447.i = extractelement <16 x double> %1537, i32 0
  %extract2448.i = extractelement <16 x double> %1537, i32 1
  %extract2449.i = extractelement <16 x double> %1537, i32 2
  %extract2450.i = extractelement <16 x double> %1537, i32 3
  %extract2451.i = extractelement <16 x double> %1537, i32 4
  %extract2452.i = extractelement <16 x double> %1537, i32 5
  %extract2453.i = extractelement <16 x double> %1537, i32 6
  %extract2454.i = extractelement <16 x double> %1537, i32 7
  %extract2455.i = extractelement <16 x double> %1537, i32 8
  %extract2456.i = extractelement <16 x double> %1537, i32 9
  %extract2457.i = extractelement <16 x double> %1537, i32 10
  %extract2458.i = extractelement <16 x double> %1537, i32 11
  %extract2459.i = extractelement <16 x double> %1537, i32 12
  %extract2460.i = extractelement <16 x double> %1537, i32 13
  %extract2461.i = extractelement <16 x double> %1537, i32 14
  %extract2462.i = extractelement <16 x double> %1537, i32 15
  %1538 = call double @_Z3expd(double %extract2447.i) nounwind
  %1539 = call double @_Z3expd(double %extract2448.i) nounwind
  %1540 = call double @_Z3expd(double %extract2449.i) nounwind
  %1541 = call double @_Z3expd(double %extract2450.i) nounwind
  %1542 = call double @_Z3expd(double %extract2451.i) nounwind
  %1543 = call double @_Z3expd(double %extract2452.i) nounwind
  %1544 = call double @_Z3expd(double %extract2453.i) nounwind
  %1545 = call double @_Z3expd(double %extract2454.i) nounwind
  %1546 = call double @_Z3expd(double %extract2455.i) nounwind
  %1547 = call double @_Z3expd(double %extract2456.i) nounwind
  %1548 = call double @_Z3expd(double %extract2457.i) nounwind
  %1549 = call double @_Z3expd(double %extract2458.i) nounwind
  %1550 = call double @_Z3expd(double %extract2459.i) nounwind
  %1551 = call double @_Z3expd(double %extract2460.i) nounwind
  %1552 = call double @_Z3expd(double %extract2461.i) nounwind
  %1553 = call double @_Z3expd(double %extract2462.i) nounwind
  %temp.vect2463.i = insertelement <16 x double> undef, double %1538, i32 0
  %temp.vect2464.i = insertelement <16 x double> %temp.vect2463.i, double %1539, i32 1
  %temp.vect2465.i = insertelement <16 x double> %temp.vect2464.i, double %1540, i32 2
  %temp.vect2466.i = insertelement <16 x double> %temp.vect2465.i, double %1541, i32 3
  %temp.vect2467.i = insertelement <16 x double> %temp.vect2466.i, double %1542, i32 4
  %temp.vect2468.i = insertelement <16 x double> %temp.vect2467.i, double %1543, i32 5
  %temp.vect2469.i = insertelement <16 x double> %temp.vect2468.i, double %1544, i32 6
  %temp.vect2470.i = insertelement <16 x double> %temp.vect2469.i, double %1545, i32 7
  %temp.vect2471.i = insertelement <16 x double> %temp.vect2470.i, double %1546, i32 8
  %temp.vect2472.i = insertelement <16 x double> %temp.vect2471.i, double %1547, i32 9
  %temp.vect2473.i = insertelement <16 x double> %temp.vect2472.i, double %1548, i32 10
  %temp.vect2474.i = insertelement <16 x double> %temp.vect2473.i, double %1549, i32 11
  %temp.vect2475.i = insertelement <16 x double> %temp.vect2474.i, double %1550, i32 12
  %temp.vect2476.i = insertelement <16 x double> %temp.vect2475.i, double %1551, i32 13
  %temp.vect2477.i = insertelement <16 x double> %temp.vect2476.i, double %1552, i32 14
  %temp.vect2478.i = insertelement <16 x double> %temp.vect2477.i, double %1553, i32 15
  %1554 = fadd <16 x double> %1536, %temp.vect2478.i
  %extract2479.i = extractelement <16 x double> %1554, i32 0
  %extract2480.i = extractelement <16 x double> %1554, i32 1
  %extract2481.i = extractelement <16 x double> %1554, i32 2
  %extract2482.i = extractelement <16 x double> %1554, i32 3
  %extract2483.i = extractelement <16 x double> %1554, i32 4
  %extract2484.i = extractelement <16 x double> %1554, i32 5
  %extract2485.i = extractelement <16 x double> %1554, i32 6
  %extract2486.i = extractelement <16 x double> %1554, i32 7
  %extract2487.i = extractelement <16 x double> %1554, i32 8
  %extract2488.i = extractelement <16 x double> %1554, i32 9
  %extract2489.i = extractelement <16 x double> %1554, i32 10
  %extract2490.i = extractelement <16 x double> %1554, i32 11
  %extract2491.i = extractelement <16 x double> %1554, i32 12
  %extract2492.i = extractelement <16 x double> %1554, i32 13
  %extract2493.i = extractelement <16 x double> %1554, i32 14
  %extract2494.i = extractelement <16 x double> %1554, i32 15
  %1555 = call double @_Z4fmaxdd(double %extract2479.i, double 1.000000e-200) nounwind
  %1556 = call double @_Z4fmaxdd(double %extract2480.i, double 1.000000e-200) nounwind
  %1557 = call double @_Z4fmaxdd(double %extract2481.i, double 1.000000e-200) nounwind
  %1558 = call double @_Z4fmaxdd(double %extract2482.i, double 1.000000e-200) nounwind
  %1559 = call double @_Z4fmaxdd(double %extract2483.i, double 1.000000e-200) nounwind
  %1560 = call double @_Z4fmaxdd(double %extract2484.i, double 1.000000e-200) nounwind
  %1561 = call double @_Z4fmaxdd(double %extract2485.i, double 1.000000e-200) nounwind
  %1562 = call double @_Z4fmaxdd(double %extract2486.i, double 1.000000e-200) nounwind
  %1563 = call double @_Z4fmaxdd(double %extract2487.i, double 1.000000e-200) nounwind
  %1564 = call double @_Z4fmaxdd(double %extract2488.i, double 1.000000e-200) nounwind
  %1565 = call double @_Z4fmaxdd(double %extract2489.i, double 1.000000e-200) nounwind
  %1566 = call double @_Z4fmaxdd(double %extract2490.i, double 1.000000e-200) nounwind
  %1567 = call double @_Z4fmaxdd(double %extract2491.i, double 1.000000e-200) nounwind
  %1568 = call double @_Z4fmaxdd(double %extract2492.i, double 1.000000e-200) nounwind
  %1569 = call double @_Z4fmaxdd(double %extract2493.i, double 1.000000e-200) nounwind
  %1570 = call double @_Z4fmaxdd(double %extract2494.i, double 1.000000e-200) nounwind
  %1571 = call double @_Z5log10d(double %1555) nounwind
  %1572 = call double @_Z5log10d(double %1556) nounwind
  %1573 = call double @_Z5log10d(double %1557) nounwind
  %1574 = call double @_Z5log10d(double %1558) nounwind
  %1575 = call double @_Z5log10d(double %1559) nounwind
  %1576 = call double @_Z5log10d(double %1560) nounwind
  %1577 = call double @_Z5log10d(double %1561) nounwind
  %1578 = call double @_Z5log10d(double %1562) nounwind
  %1579 = call double @_Z5log10d(double %1563) nounwind
  %1580 = call double @_Z5log10d(double %1564) nounwind
  %1581 = call double @_Z5log10d(double %1565) nounwind
  %1582 = call double @_Z5log10d(double %1566) nounwind
  %1583 = call double @_Z5log10d(double %1567) nounwind
  %1584 = call double @_Z5log10d(double %1568) nounwind
  %1585 = call double @_Z5log10d(double %1569) nounwind
  %1586 = call double @_Z5log10d(double %1570) nounwind
  %temp.vect2495.i = insertelement <16 x double> undef, double %1571, i32 0
  %temp.vect2496.i = insertelement <16 x double> %temp.vect2495.i, double %1572, i32 1
  %temp.vect2497.i = insertelement <16 x double> %temp.vect2496.i, double %1573, i32 2
  %temp.vect2498.i = insertelement <16 x double> %temp.vect2497.i, double %1574, i32 3
  %temp.vect2499.i = insertelement <16 x double> %temp.vect2498.i, double %1575, i32 4
  %temp.vect2500.i = insertelement <16 x double> %temp.vect2499.i, double %1576, i32 5
  %temp.vect2501.i = insertelement <16 x double> %temp.vect2500.i, double %1577, i32 6
  %temp.vect2502.i = insertelement <16 x double> %temp.vect2501.i, double %1578, i32 7
  %temp.vect2503.i = insertelement <16 x double> %temp.vect2502.i, double %1579, i32 8
  %temp.vect2504.i = insertelement <16 x double> %temp.vect2503.i, double %1580, i32 9
  %temp.vect2505.i = insertelement <16 x double> %temp.vect2504.i, double %1581, i32 10
  %temp.vect2506.i = insertelement <16 x double> %temp.vect2505.i, double %1582, i32 11
  %temp.vect2507.i = insertelement <16 x double> %temp.vect2506.i, double %1583, i32 12
  %temp.vect2508.i = insertelement <16 x double> %temp.vect2507.i, double %1584, i32 13
  %temp.vect2509.i = insertelement <16 x double> %temp.vect2508.i, double %1585, i32 14
  %temp.vect2510.i = insertelement <16 x double> %temp.vect2509.i, double %1586, i32 15
  %1587 = fmul <16 x double> %temp.vect2510.i, <double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00>
  %1588 = fsub <16 x double> <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>, %1587
  %1589 = fmul <16 x double> %temp.vect2510.i, <double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01>
  %1590 = fadd <16 x double> %1589, <double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01>
  %1591 = fsub <16 x double> %temp.vect2526.i, %1590
  %1592 = fmul <16 x double> %1591, <double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01>
  %1593 = fsub <16 x double> %1588, %1592
  %1594 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1593
  %1595 = fmul <16 x double> %1591, %1594
  %1596 = fmul <16 x double> %1595, %1595
  %1597 = fadd <16 x double> %1596, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %1598 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1597
  %1599 = fmul <16 x double> %temp.vect2510.i, %1598
  %extract2527.i = extractelement <16 x double> %1599, i32 0
  %extract2528.i = extractelement <16 x double> %1599, i32 1
  %extract2529.i = extractelement <16 x double> %1599, i32 2
  %extract2530.i = extractelement <16 x double> %1599, i32 3
  %extract2531.i = extractelement <16 x double> %1599, i32 4
  %extract2532.i = extractelement <16 x double> %1599, i32 5
  %extract2533.i = extractelement <16 x double> %1599, i32 6
  %extract2534.i = extractelement <16 x double> %1599, i32 7
  %extract2535.i = extractelement <16 x double> %1599, i32 8
  %extract2536.i = extractelement <16 x double> %1599, i32 9
  %extract2537.i = extractelement <16 x double> %1599, i32 10
  %extract2538.i = extractelement <16 x double> %1599, i32 11
  %extract2539.i = extractelement <16 x double> %1599, i32 12
  %extract2540.i = extractelement <16 x double> %1599, i32 13
  %extract2541.i = extractelement <16 x double> %1599, i32 14
  %extract2542.i = extractelement <16 x double> %1599, i32 15
  %1600 = call double @_Z5exp10d(double %extract2527.i) nounwind
  %1601 = call double @_Z5exp10d(double %extract2528.i) nounwind
  %1602 = call double @_Z5exp10d(double %extract2529.i) nounwind
  %1603 = call double @_Z5exp10d(double %extract2530.i) nounwind
  %1604 = call double @_Z5exp10d(double %extract2531.i) nounwind
  %1605 = call double @_Z5exp10d(double %extract2532.i) nounwind
  %1606 = call double @_Z5exp10d(double %extract2533.i) nounwind
  %1607 = call double @_Z5exp10d(double %extract2534.i) nounwind
  %1608 = call double @_Z5exp10d(double %extract2535.i) nounwind
  %1609 = call double @_Z5exp10d(double %extract2536.i) nounwind
  %1610 = call double @_Z5exp10d(double %extract2537.i) nounwind
  %1611 = call double @_Z5exp10d(double %extract2538.i) nounwind
  %1612 = call double @_Z5exp10d(double %extract2539.i) nounwind
  %1613 = call double @_Z5exp10d(double %extract2540.i) nounwind
  %1614 = call double @_Z5exp10d(double %extract2541.i) nounwind
  %1615 = call double @_Z5exp10d(double %extract2542.i) nounwind
  %temp.vect2543.i = insertelement <16 x double> undef, double %1600, i32 0
  %temp.vect2544.i = insertelement <16 x double> %temp.vect2543.i, double %1601, i32 1
  %temp.vect2545.i = insertelement <16 x double> %temp.vect2544.i, double %1602, i32 2
  %temp.vect2546.i = insertelement <16 x double> %temp.vect2545.i, double %1603, i32 3
  %temp.vect2547.i = insertelement <16 x double> %temp.vect2546.i, double %1604, i32 4
  %temp.vect2548.i = insertelement <16 x double> %temp.vect2547.i, double %1605, i32 5
  %temp.vect2549.i = insertelement <16 x double> %temp.vect2548.i, double %1606, i32 6
  %temp.vect2550.i = insertelement <16 x double> %temp.vect2549.i, double %1607, i32 7
  %temp.vect2551.i = insertelement <16 x double> %temp.vect2550.i, double %1608, i32 8
  %temp.vect2552.i = insertelement <16 x double> %temp.vect2551.i, double %1609, i32 9
  %temp.vect2553.i = insertelement <16 x double> %temp.vect2552.i, double %1610, i32 10
  %temp.vect2554.i = insertelement <16 x double> %temp.vect2553.i, double %1611, i32 11
  %temp.vect2555.i = insertelement <16 x double> %temp.vect2554.i, double %1612, i32 12
  %temp.vect2556.i = insertelement <16 x double> %temp.vect2555.i, double %1613, i32 13
  %temp.vect2557.i = insertelement <16 x double> %temp.vect2556.i, double %1614, i32 14
  %temp.vect2558.i = insertelement <16 x double> %temp.vect2557.i, double %1615, i32 15
  %1616 = fmul <16 x double> %temp.vect2558.i, %1468
  %1617 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1618 = load i64* %1617, align 8
  %1619 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1620 = load i64* %1619, align 8
  %1621 = add i64 %1618, %1620
  %extract2561.i = add i64 %1621, 7741440
  %1622 = getelementptr inbounds double addrspace(1)* %7, i64 %extract2561.i
  %ptrTypeCast2577.i = bitcast double addrspace(1)* %1622 to <16 x double> addrspace(1)*
  %1623 = load <16 x double> addrspace(1)* %ptrTypeCast2577.i, align 8
  %1624 = fmul <16 x double> %1623, %1616
  %1625 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1626 = load i64* %1625, align 8
  %1627 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1628 = load i64* %1627, align 8
  %1629 = add i64 %1626, %1628
  %extract2580.i = add i64 %1629, 7741440
  %1630 = getelementptr inbounds double addrspace(1)* %7, i64 %extract2580.i
  %ptrTypeCast2596.i = bitcast double addrspace(1)* %1630 to <16 x double> addrspace(1)*
  store <16 x double> %1624, <16 x double> addrspace(1)* %ptrTypeCast2596.i, align 8
  %1631 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1632 = load i64* %1631, align 8
  %1633 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1634 = load i64* %1633, align 8
  %1635 = add i64 %1632, %1634
  %extract2599.i = add i64 %1635, 7741440
  %1636 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2599.i
  %ptrTypeCast2615.i = bitcast double addrspace(1)* %1636 to <16 x double> addrspace(1)*
  %1637 = load <16 x double> addrspace(1)* %ptrTypeCast2615.i, align 8
  %1638 = fmul <16 x double> %1637, %1616
  %1639 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1640 = load i64* %1639, align 8
  %1641 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1642 = load i64* %1641, align 8
  %1643 = add i64 %1640, %1642
  %extract2618.i = add i64 %1643, 7741440
  %1644 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2618.i
  %ptrTypeCast2634.i = bitcast double addrspace(1)* %1644 to <16 x double> addrspace(1)*
  store <16 x double> %1638, <16 x double> addrspace(1)* %ptrTypeCast2634.i, align 8
  %1645 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1646 = load i64* %1645, align 8
  %1647 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1648 = load i64* %1647, align 8
  %1649 = add i64 %1646, %1648
  %extract2637.i = add i64 %1649, 774144
  %1650 = getelementptr inbounds double addrspace(1)* %13, i64 %extract2637.i
  %ptrTypeCast2653.i = bitcast double addrspace(1)* %1650 to <16 x double> addrspace(1)*
  %1651 = load <16 x double> addrspace(1)* %ptrTypeCast2653.i, align 8
  %1652 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1653 = load i64* %1652, align 8
  %1654 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1655 = load i64* %1654, align 8
  %1656 = add i64 %1653, %1655
  %extract2656.i = add i64 %1656, 8515584
  %1657 = getelementptr inbounds double addrspace(1)* %7, i64 %extract2656.i
  %ptrTypeCast2672.i = bitcast double addrspace(1)* %1657 to <16 x double> addrspace(1)*
  %1658 = load <16 x double> addrspace(1)* %ptrTypeCast2672.i, align 8
  %1659 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1658
  %1660 = fmul <16 x double> %127, %1659
  %1661 = fmul <16 x double> %1651, %1660
  %extract2673.i = extractelement <16 x double> %1661, i32 0
  %extract2674.i = extractelement <16 x double> %1661, i32 1
  %extract2675.i = extractelement <16 x double> %1661, i32 2
  %extract2676.i = extractelement <16 x double> %1661, i32 3
  %extract2677.i = extractelement <16 x double> %1661, i32 4
  %extract2678.i = extractelement <16 x double> %1661, i32 5
  %extract2679.i = extractelement <16 x double> %1661, i32 6
  %extract2680.i = extractelement <16 x double> %1661, i32 7
  %extract2681.i = extractelement <16 x double> %1661, i32 8
  %extract2682.i = extractelement <16 x double> %1661, i32 9
  %extract2683.i = extractelement <16 x double> %1661, i32 10
  %extract2684.i = extractelement <16 x double> %1661, i32 11
  %extract2685.i = extractelement <16 x double> %1661, i32 12
  %extract2686.i = extractelement <16 x double> %1661, i32 13
  %extract2687.i = extractelement <16 x double> %1661, i32 14
  %extract2688.i = extractelement <16 x double> %1661, i32 15
  %1662 = fadd <16 x double> %1661, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %1663 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1662
  %1664 = fmul <16 x double> %1661, %1663
  %1665 = call double @_Z4fmaxdd(double %extract2673.i, double 1.000000e-200) nounwind
  %1666 = call double @_Z4fmaxdd(double %extract2674.i, double 1.000000e-200) nounwind
  %1667 = call double @_Z4fmaxdd(double %extract2675.i, double 1.000000e-200) nounwind
  %1668 = call double @_Z4fmaxdd(double %extract2676.i, double 1.000000e-200) nounwind
  %1669 = call double @_Z4fmaxdd(double %extract2677.i, double 1.000000e-200) nounwind
  %1670 = call double @_Z4fmaxdd(double %extract2678.i, double 1.000000e-200) nounwind
  %1671 = call double @_Z4fmaxdd(double %extract2679.i, double 1.000000e-200) nounwind
  %1672 = call double @_Z4fmaxdd(double %extract2680.i, double 1.000000e-200) nounwind
  %1673 = call double @_Z4fmaxdd(double %extract2681.i, double 1.000000e-200) nounwind
  %1674 = call double @_Z4fmaxdd(double %extract2682.i, double 1.000000e-200) nounwind
  %1675 = call double @_Z4fmaxdd(double %extract2683.i, double 1.000000e-200) nounwind
  %1676 = call double @_Z4fmaxdd(double %extract2684.i, double 1.000000e-200) nounwind
  %1677 = call double @_Z4fmaxdd(double %extract2685.i, double 1.000000e-200) nounwind
  %1678 = call double @_Z4fmaxdd(double %extract2686.i, double 1.000000e-200) nounwind
  %1679 = call double @_Z4fmaxdd(double %extract2687.i, double 1.000000e-200) nounwind
  %1680 = call double @_Z4fmaxdd(double %extract2688.i, double 1.000000e-200) nounwind
  %1681 = call double @_Z5log10d(double %1665) nounwind
  %1682 = call double @_Z5log10d(double %1666) nounwind
  %1683 = call double @_Z5log10d(double %1667) nounwind
  %1684 = call double @_Z5log10d(double %1668) nounwind
  %1685 = call double @_Z5log10d(double %1669) nounwind
  %1686 = call double @_Z5log10d(double %1670) nounwind
  %1687 = call double @_Z5log10d(double %1671) nounwind
  %1688 = call double @_Z5log10d(double %1672) nounwind
  %1689 = call double @_Z5log10d(double %1673) nounwind
  %1690 = call double @_Z5log10d(double %1674) nounwind
  %1691 = call double @_Z5log10d(double %1675) nounwind
  %1692 = call double @_Z5log10d(double %1676) nounwind
  %1693 = call double @_Z5log10d(double %1677) nounwind
  %1694 = call double @_Z5log10d(double %1678) nounwind
  %1695 = call double @_Z5log10d(double %1679) nounwind
  %1696 = call double @_Z5log10d(double %1680) nounwind
  %temp.vect2817.i = insertelement <16 x double> undef, double %1681, i32 0
  %temp.vect2818.i = insertelement <16 x double> %temp.vect2817.i, double %1682, i32 1
  %temp.vect2819.i = insertelement <16 x double> %temp.vect2818.i, double %1683, i32 2
  %temp.vect2820.i = insertelement <16 x double> %temp.vect2819.i, double %1684, i32 3
  %temp.vect2821.i = insertelement <16 x double> %temp.vect2820.i, double %1685, i32 4
  %temp.vect2822.i = insertelement <16 x double> %temp.vect2821.i, double %1686, i32 5
  %temp.vect2823.i = insertelement <16 x double> %temp.vect2822.i, double %1687, i32 6
  %temp.vect2824.i = insertelement <16 x double> %temp.vect2823.i, double %1688, i32 7
  %temp.vect2825.i = insertelement <16 x double> %temp.vect2824.i, double %1689, i32 8
  %temp.vect2826.i = insertelement <16 x double> %temp.vect2825.i, double %1690, i32 9
  %temp.vect2827.i = insertelement <16 x double> %temp.vect2826.i, double %1691, i32 10
  %temp.vect2828.i = insertelement <16 x double> %temp.vect2827.i, double %1692, i32 11
  %temp.vect2829.i = insertelement <16 x double> %temp.vect2828.i, double %1693, i32 12
  %temp.vect2830.i = insertelement <16 x double> %temp.vect2829.i, double %1694, i32 13
  %temp.vect2831.i = insertelement <16 x double> %temp.vect2830.i, double %1695, i32 14
  %temp.vect2832.i = insertelement <16 x double> %temp.vect2831.i, double %1696, i32 15
  %1697 = fmul <16 x double> %33, <double 0xBF8BACF914C1BAD0, double 0xBF8BACF914C1BAD0, double 0xBF8BACF914C1BAD0, double 0xBF8BACF914C1BAD0, double 0xBF8BACF914C1BAD0, double 0xBF8BACF914C1BAD0, double 0xBF8BACF914C1BAD0, double 0xBF8BACF914C1BAD0, double 0xBF8BACF914C1BAD0, double 0xBF8BACF914C1BAD0, double 0xBF8BACF914C1BAD0, double 0xBF8BACF914C1BAD0, double 0xBF8BACF914C1BAD0, double 0xBF8BACF914C1BAD0, double 0xBF8BACF914C1BAD0, double 0xBF8BACF914C1BAD0>
  %extract2689.i = extractelement <16 x double> %1697, i32 0
  %extract2690.i = extractelement <16 x double> %1697, i32 1
  %extract2691.i = extractelement <16 x double> %1697, i32 2
  %extract2692.i = extractelement <16 x double> %1697, i32 3
  %extract2693.i = extractelement <16 x double> %1697, i32 4
  %extract2694.i = extractelement <16 x double> %1697, i32 5
  %extract2695.i = extractelement <16 x double> %1697, i32 6
  %extract2696.i = extractelement <16 x double> %1697, i32 7
  %extract2697.i = extractelement <16 x double> %1697, i32 8
  %extract2698.i = extractelement <16 x double> %1697, i32 9
  %extract2699.i = extractelement <16 x double> %1697, i32 10
  %extract2700.i = extractelement <16 x double> %1697, i32 11
  %extract2701.i = extractelement <16 x double> %1697, i32 12
  %extract2702.i = extractelement <16 x double> %1697, i32 13
  %extract2703.i = extractelement <16 x double> %1697, i32 14
  %extract2704.i = extractelement <16 x double> %1697, i32 15
  %1698 = call double @_Z3expd(double %extract2689.i) nounwind
  %1699 = call double @_Z3expd(double %extract2690.i) nounwind
  %1700 = call double @_Z3expd(double %extract2691.i) nounwind
  %1701 = call double @_Z3expd(double %extract2692.i) nounwind
  %1702 = call double @_Z3expd(double %extract2693.i) nounwind
  %1703 = call double @_Z3expd(double %extract2694.i) nounwind
  %1704 = call double @_Z3expd(double %extract2695.i) nounwind
  %1705 = call double @_Z3expd(double %extract2696.i) nounwind
  %1706 = call double @_Z3expd(double %extract2697.i) nounwind
  %1707 = call double @_Z3expd(double %extract2698.i) nounwind
  %1708 = call double @_Z3expd(double %extract2699.i) nounwind
  %1709 = call double @_Z3expd(double %extract2700.i) nounwind
  %1710 = call double @_Z3expd(double %extract2701.i) nounwind
  %1711 = call double @_Z3expd(double %extract2702.i) nounwind
  %1712 = call double @_Z3expd(double %extract2703.i) nounwind
  %1713 = call double @_Z3expd(double %extract2704.i) nounwind
  %temp.vect2705.i = insertelement <16 x double> undef, double %1698, i32 0
  %temp.vect2706.i = insertelement <16 x double> %temp.vect2705.i, double %1699, i32 1
  %temp.vect2707.i = insertelement <16 x double> %temp.vect2706.i, double %1700, i32 2
  %temp.vect2708.i = insertelement <16 x double> %temp.vect2707.i, double %1701, i32 3
  %temp.vect2709.i = insertelement <16 x double> %temp.vect2708.i, double %1702, i32 4
  %temp.vect2710.i = insertelement <16 x double> %temp.vect2709.i, double %1703, i32 5
  %temp.vect2711.i = insertelement <16 x double> %temp.vect2710.i, double %1704, i32 6
  %temp.vect2712.i = insertelement <16 x double> %temp.vect2711.i, double %1705, i32 7
  %temp.vect2713.i = insertelement <16 x double> %temp.vect2712.i, double %1706, i32 8
  %temp.vect2714.i = insertelement <16 x double> %temp.vect2713.i, double %1707, i32 9
  %temp.vect2715.i = insertelement <16 x double> %temp.vect2714.i, double %1708, i32 10
  %temp.vect2716.i = insertelement <16 x double> %temp.vect2715.i, double %1709, i32 11
  %temp.vect2717.i = insertelement <16 x double> %temp.vect2716.i, double %1710, i32 12
  %temp.vect2718.i = insertelement <16 x double> %temp.vect2717.i, double %1711, i32 13
  %temp.vect2719.i = insertelement <16 x double> %temp.vect2718.i, double %1712, i32 14
  %temp.vect2720.i = insertelement <16 x double> %temp.vect2719.i, double %1713, i32 15
  %1714 = fmul <16 x double> %temp.vect2720.i, <double 2.170000e-01, double 2.170000e-01, double 2.170000e-01, double 2.170000e-01, double 2.170000e-01, double 2.170000e-01, double 2.170000e-01, double 2.170000e-01, double 2.170000e-01, double 2.170000e-01, double 2.170000e-01, double 2.170000e-01, double 2.170000e-01, double 2.170000e-01, double 2.170000e-01, double 2.170000e-01>
  %1715 = fmul <16 x double> %33, <double 0xBF36489880D3B1A9, double 0xBF36489880D3B1A9, double 0xBF36489880D3B1A9, double 0xBF36489880D3B1A9, double 0xBF36489880D3B1A9, double 0xBF36489880D3B1A9, double 0xBF36489880D3B1A9, double 0xBF36489880D3B1A9, double 0xBF36489880D3B1A9, double 0xBF36489880D3B1A9, double 0xBF36489880D3B1A9, double 0xBF36489880D3B1A9, double 0xBF36489880D3B1A9, double 0xBF36489880D3B1A9, double 0xBF36489880D3B1A9, double 0xBF36489880D3B1A9>
  %extract2721.i = extractelement <16 x double> %1715, i32 0
  %extract2722.i = extractelement <16 x double> %1715, i32 1
  %extract2723.i = extractelement <16 x double> %1715, i32 2
  %extract2724.i = extractelement <16 x double> %1715, i32 3
  %extract2725.i = extractelement <16 x double> %1715, i32 4
  %extract2726.i = extractelement <16 x double> %1715, i32 5
  %extract2727.i = extractelement <16 x double> %1715, i32 6
  %extract2728.i = extractelement <16 x double> %1715, i32 7
  %extract2729.i = extractelement <16 x double> %1715, i32 8
  %extract2730.i = extractelement <16 x double> %1715, i32 9
  %extract2731.i = extractelement <16 x double> %1715, i32 10
  %extract2732.i = extractelement <16 x double> %1715, i32 11
  %extract2733.i = extractelement <16 x double> %1715, i32 12
  %extract2734.i = extractelement <16 x double> %1715, i32 13
  %extract2735.i = extractelement <16 x double> %1715, i32 14
  %extract2736.i = extractelement <16 x double> %1715, i32 15
  %1716 = call double @_Z3expd(double %extract2721.i) nounwind
  %1717 = call double @_Z3expd(double %extract2722.i) nounwind
  %1718 = call double @_Z3expd(double %extract2723.i) nounwind
  %1719 = call double @_Z3expd(double %extract2724.i) nounwind
  %1720 = call double @_Z3expd(double %extract2725.i) nounwind
  %1721 = call double @_Z3expd(double %extract2726.i) nounwind
  %1722 = call double @_Z3expd(double %extract2727.i) nounwind
  %1723 = call double @_Z3expd(double %extract2728.i) nounwind
  %1724 = call double @_Z3expd(double %extract2729.i) nounwind
  %1725 = call double @_Z3expd(double %extract2730.i) nounwind
  %1726 = call double @_Z3expd(double %extract2731.i) nounwind
  %1727 = call double @_Z3expd(double %extract2732.i) nounwind
  %1728 = call double @_Z3expd(double %extract2733.i) nounwind
  %1729 = call double @_Z3expd(double %extract2734.i) nounwind
  %1730 = call double @_Z3expd(double %extract2735.i) nounwind
  %1731 = call double @_Z3expd(double %extract2736.i) nounwind
  %temp.vect2737.i = insertelement <16 x double> undef, double %1716, i32 0
  %temp.vect2738.i = insertelement <16 x double> %temp.vect2737.i, double %1717, i32 1
  %temp.vect2739.i = insertelement <16 x double> %temp.vect2738.i, double %1718, i32 2
  %temp.vect2740.i = insertelement <16 x double> %temp.vect2739.i, double %1719, i32 3
  %temp.vect2741.i = insertelement <16 x double> %temp.vect2740.i, double %1720, i32 4
  %temp.vect2742.i = insertelement <16 x double> %temp.vect2741.i, double %1721, i32 5
  %temp.vect2743.i = insertelement <16 x double> %temp.vect2742.i, double %1722, i32 6
  %temp.vect2744.i = insertelement <16 x double> %temp.vect2743.i, double %1723, i32 7
  %temp.vect2745.i = insertelement <16 x double> %temp.vect2744.i, double %1724, i32 8
  %temp.vect2746.i = insertelement <16 x double> %temp.vect2745.i, double %1725, i32 9
  %temp.vect2747.i = insertelement <16 x double> %temp.vect2746.i, double %1726, i32 10
  %temp.vect2748.i = insertelement <16 x double> %temp.vect2747.i, double %1727, i32 11
  %temp.vect2749.i = insertelement <16 x double> %temp.vect2748.i, double %1728, i32 12
  %temp.vect2750.i = insertelement <16 x double> %temp.vect2749.i, double %1729, i32 13
  %temp.vect2751.i = insertelement <16 x double> %temp.vect2750.i, double %1730, i32 14
  %temp.vect2752.i = insertelement <16 x double> %temp.vect2751.i, double %1731, i32 15
  %1732 = fmul <16 x double> %temp.vect2752.i, <double 7.830000e-01, double 7.830000e-01, double 7.830000e-01, double 7.830000e-01, double 7.830000e-01, double 7.830000e-01, double 7.830000e-01, double 7.830000e-01, double 7.830000e-01, double 7.830000e-01, double 7.830000e-01, double 7.830000e-01, double 7.830000e-01, double 7.830000e-01, double 7.830000e-01, double 7.830000e-01>
  %1733 = fadd <16 x double> %1714, %1732
  %1734 = fmul <16 x double> %355, <double -6.964000e+03, double -6.964000e+03, double -6.964000e+03, double -6.964000e+03, double -6.964000e+03, double -6.964000e+03, double -6.964000e+03, double -6.964000e+03, double -6.964000e+03, double -6.964000e+03, double -6.964000e+03, double -6.964000e+03, double -6.964000e+03, double -6.964000e+03, double -6.964000e+03, double -6.964000e+03>
  %extract2753.i = extractelement <16 x double> %1734, i32 0
  %extract2754.i = extractelement <16 x double> %1734, i32 1
  %extract2755.i = extractelement <16 x double> %1734, i32 2
  %extract2756.i = extractelement <16 x double> %1734, i32 3
  %extract2757.i = extractelement <16 x double> %1734, i32 4
  %extract2758.i = extractelement <16 x double> %1734, i32 5
  %extract2759.i = extractelement <16 x double> %1734, i32 6
  %extract2760.i = extractelement <16 x double> %1734, i32 7
  %extract2761.i = extractelement <16 x double> %1734, i32 8
  %extract2762.i = extractelement <16 x double> %1734, i32 9
  %extract2763.i = extractelement <16 x double> %1734, i32 10
  %extract2764.i = extractelement <16 x double> %1734, i32 11
  %extract2765.i = extractelement <16 x double> %1734, i32 12
  %extract2766.i = extractelement <16 x double> %1734, i32 13
  %extract2767.i = extractelement <16 x double> %1734, i32 14
  %extract2768.i = extractelement <16 x double> %1734, i32 15
  %1735 = call double @_Z3expd(double %extract2753.i) nounwind
  %1736 = call double @_Z3expd(double %extract2754.i) nounwind
  %1737 = call double @_Z3expd(double %extract2755.i) nounwind
  %1738 = call double @_Z3expd(double %extract2756.i) nounwind
  %1739 = call double @_Z3expd(double %extract2757.i) nounwind
  %1740 = call double @_Z3expd(double %extract2758.i) nounwind
  %1741 = call double @_Z3expd(double %extract2759.i) nounwind
  %1742 = call double @_Z3expd(double %extract2760.i) nounwind
  %1743 = call double @_Z3expd(double %extract2761.i) nounwind
  %1744 = call double @_Z3expd(double %extract2762.i) nounwind
  %1745 = call double @_Z3expd(double %extract2763.i) nounwind
  %1746 = call double @_Z3expd(double %extract2764.i) nounwind
  %1747 = call double @_Z3expd(double %extract2765.i) nounwind
  %1748 = call double @_Z3expd(double %extract2766.i) nounwind
  %1749 = call double @_Z3expd(double %extract2767.i) nounwind
  %1750 = call double @_Z3expd(double %extract2768.i) nounwind
  %temp.vect2769.i = insertelement <16 x double> undef, double %1735, i32 0
  %temp.vect2770.i = insertelement <16 x double> %temp.vect2769.i, double %1736, i32 1
  %temp.vect2771.i = insertelement <16 x double> %temp.vect2770.i, double %1737, i32 2
  %temp.vect2772.i = insertelement <16 x double> %temp.vect2771.i, double %1738, i32 3
  %temp.vect2773.i = insertelement <16 x double> %temp.vect2772.i, double %1739, i32 4
  %temp.vect2774.i = insertelement <16 x double> %temp.vect2773.i, double %1740, i32 5
  %temp.vect2775.i = insertelement <16 x double> %temp.vect2774.i, double %1741, i32 6
  %temp.vect2776.i = insertelement <16 x double> %temp.vect2775.i, double %1742, i32 7
  %temp.vect2777.i = insertelement <16 x double> %temp.vect2776.i, double %1743, i32 8
  %temp.vect2778.i = insertelement <16 x double> %temp.vect2777.i, double %1744, i32 9
  %temp.vect2779.i = insertelement <16 x double> %temp.vect2778.i, double %1745, i32 10
  %temp.vect2780.i = insertelement <16 x double> %temp.vect2779.i, double %1746, i32 11
  %temp.vect2781.i = insertelement <16 x double> %temp.vect2780.i, double %1747, i32 12
  %temp.vect2782.i = insertelement <16 x double> %temp.vect2781.i, double %1748, i32 13
  %temp.vect2783.i = insertelement <16 x double> %temp.vect2782.i, double %1749, i32 14
  %temp.vect2784.i = insertelement <16 x double> %temp.vect2783.i, double %1750, i32 15
  %1751 = fadd <16 x double> %1733, %temp.vect2784.i
  %extract2785.i = extractelement <16 x double> %1751, i32 0
  %extract2786.i = extractelement <16 x double> %1751, i32 1
  %extract2787.i = extractelement <16 x double> %1751, i32 2
  %extract2788.i = extractelement <16 x double> %1751, i32 3
  %extract2789.i = extractelement <16 x double> %1751, i32 4
  %extract2790.i = extractelement <16 x double> %1751, i32 5
  %extract2791.i = extractelement <16 x double> %1751, i32 6
  %extract2792.i = extractelement <16 x double> %1751, i32 7
  %extract2793.i = extractelement <16 x double> %1751, i32 8
  %extract2794.i = extractelement <16 x double> %1751, i32 9
  %extract2795.i = extractelement <16 x double> %1751, i32 10
  %extract2796.i = extractelement <16 x double> %1751, i32 11
  %extract2797.i = extractelement <16 x double> %1751, i32 12
  %extract2798.i = extractelement <16 x double> %1751, i32 13
  %extract2799.i = extractelement <16 x double> %1751, i32 14
  %extract2800.i = extractelement <16 x double> %1751, i32 15
  %1752 = call double @_Z4fmaxdd(double %extract2785.i, double 1.000000e-200) nounwind
  %1753 = call double @_Z4fmaxdd(double %extract2786.i, double 1.000000e-200) nounwind
  %1754 = call double @_Z4fmaxdd(double %extract2787.i, double 1.000000e-200) nounwind
  %1755 = call double @_Z4fmaxdd(double %extract2788.i, double 1.000000e-200) nounwind
  %1756 = call double @_Z4fmaxdd(double %extract2789.i, double 1.000000e-200) nounwind
  %1757 = call double @_Z4fmaxdd(double %extract2790.i, double 1.000000e-200) nounwind
  %1758 = call double @_Z4fmaxdd(double %extract2791.i, double 1.000000e-200) nounwind
  %1759 = call double @_Z4fmaxdd(double %extract2792.i, double 1.000000e-200) nounwind
  %1760 = call double @_Z4fmaxdd(double %extract2793.i, double 1.000000e-200) nounwind
  %1761 = call double @_Z4fmaxdd(double %extract2794.i, double 1.000000e-200) nounwind
  %1762 = call double @_Z4fmaxdd(double %extract2795.i, double 1.000000e-200) nounwind
  %1763 = call double @_Z4fmaxdd(double %extract2796.i, double 1.000000e-200) nounwind
  %1764 = call double @_Z4fmaxdd(double %extract2797.i, double 1.000000e-200) nounwind
  %1765 = call double @_Z4fmaxdd(double %extract2798.i, double 1.000000e-200) nounwind
  %1766 = call double @_Z4fmaxdd(double %extract2799.i, double 1.000000e-200) nounwind
  %1767 = call double @_Z4fmaxdd(double %extract2800.i, double 1.000000e-200) nounwind
  %1768 = call double @_Z5log10d(double %1752) nounwind
  %1769 = call double @_Z5log10d(double %1753) nounwind
  %1770 = call double @_Z5log10d(double %1754) nounwind
  %1771 = call double @_Z5log10d(double %1755) nounwind
  %1772 = call double @_Z5log10d(double %1756) nounwind
  %1773 = call double @_Z5log10d(double %1757) nounwind
  %1774 = call double @_Z5log10d(double %1758) nounwind
  %1775 = call double @_Z5log10d(double %1759) nounwind
  %1776 = call double @_Z5log10d(double %1760) nounwind
  %1777 = call double @_Z5log10d(double %1761) nounwind
  %1778 = call double @_Z5log10d(double %1762) nounwind
  %1779 = call double @_Z5log10d(double %1763) nounwind
  %1780 = call double @_Z5log10d(double %1764) nounwind
  %1781 = call double @_Z5log10d(double %1765) nounwind
  %1782 = call double @_Z5log10d(double %1766) nounwind
  %1783 = call double @_Z5log10d(double %1767) nounwind
  %temp.vect2801.i = insertelement <16 x double> undef, double %1768, i32 0
  %temp.vect2802.i = insertelement <16 x double> %temp.vect2801.i, double %1769, i32 1
  %temp.vect2803.i = insertelement <16 x double> %temp.vect2802.i, double %1770, i32 2
  %temp.vect2804.i = insertelement <16 x double> %temp.vect2803.i, double %1771, i32 3
  %temp.vect2805.i = insertelement <16 x double> %temp.vect2804.i, double %1772, i32 4
  %temp.vect2806.i = insertelement <16 x double> %temp.vect2805.i, double %1773, i32 5
  %temp.vect2807.i = insertelement <16 x double> %temp.vect2806.i, double %1774, i32 6
  %temp.vect2808.i = insertelement <16 x double> %temp.vect2807.i, double %1775, i32 7
  %temp.vect2809.i = insertelement <16 x double> %temp.vect2808.i, double %1776, i32 8
  %temp.vect2810.i = insertelement <16 x double> %temp.vect2809.i, double %1777, i32 9
  %temp.vect2811.i = insertelement <16 x double> %temp.vect2810.i, double %1778, i32 10
  %temp.vect2812.i = insertelement <16 x double> %temp.vect2811.i, double %1779, i32 11
  %temp.vect2813.i = insertelement <16 x double> %temp.vect2812.i, double %1780, i32 12
  %temp.vect2814.i = insertelement <16 x double> %temp.vect2813.i, double %1781, i32 13
  %temp.vect2815.i = insertelement <16 x double> %temp.vect2814.i, double %1782, i32 14
  %temp.vect2816.i = insertelement <16 x double> %temp.vect2815.i, double %1783, i32 15
  %1784 = fmul <16 x double> %temp.vect2816.i, <double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00>
  %1785 = fsub <16 x double> <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>, %1784
  %1786 = fmul <16 x double> %temp.vect2816.i, <double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01>
  %1787 = fadd <16 x double> %1786, <double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01>
  %1788 = fsub <16 x double> %temp.vect2832.i, %1787
  %1789 = fmul <16 x double> %1788, <double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01>
  %1790 = fsub <16 x double> %1785, %1789
  %1791 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1790
  %1792 = fmul <16 x double> %1788, %1791
  %1793 = fmul <16 x double> %1792, %1792
  %1794 = fadd <16 x double> %1793, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %1795 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1794
  %1796 = fmul <16 x double> %temp.vect2816.i, %1795
  %extract2833.i = extractelement <16 x double> %1796, i32 0
  %extract2834.i = extractelement <16 x double> %1796, i32 1
  %extract2835.i = extractelement <16 x double> %1796, i32 2
  %extract2836.i = extractelement <16 x double> %1796, i32 3
  %extract2837.i = extractelement <16 x double> %1796, i32 4
  %extract2838.i = extractelement <16 x double> %1796, i32 5
  %extract2839.i = extractelement <16 x double> %1796, i32 6
  %extract2840.i = extractelement <16 x double> %1796, i32 7
  %extract2841.i = extractelement <16 x double> %1796, i32 8
  %extract2842.i = extractelement <16 x double> %1796, i32 9
  %extract2843.i = extractelement <16 x double> %1796, i32 10
  %extract2844.i = extractelement <16 x double> %1796, i32 11
  %extract2845.i = extractelement <16 x double> %1796, i32 12
  %extract2846.i = extractelement <16 x double> %1796, i32 13
  %extract2847.i = extractelement <16 x double> %1796, i32 14
  %extract2848.i = extractelement <16 x double> %1796, i32 15
  %1797 = call double @_Z5exp10d(double %extract2833.i) nounwind
  %1798 = call double @_Z5exp10d(double %extract2834.i) nounwind
  %1799 = call double @_Z5exp10d(double %extract2835.i) nounwind
  %1800 = call double @_Z5exp10d(double %extract2836.i) nounwind
  %1801 = call double @_Z5exp10d(double %extract2837.i) nounwind
  %1802 = call double @_Z5exp10d(double %extract2838.i) nounwind
  %1803 = call double @_Z5exp10d(double %extract2839.i) nounwind
  %1804 = call double @_Z5exp10d(double %extract2840.i) nounwind
  %1805 = call double @_Z5exp10d(double %extract2841.i) nounwind
  %1806 = call double @_Z5exp10d(double %extract2842.i) nounwind
  %1807 = call double @_Z5exp10d(double %extract2843.i) nounwind
  %1808 = call double @_Z5exp10d(double %extract2844.i) nounwind
  %1809 = call double @_Z5exp10d(double %extract2845.i) nounwind
  %1810 = call double @_Z5exp10d(double %extract2846.i) nounwind
  %1811 = call double @_Z5exp10d(double %extract2847.i) nounwind
  %1812 = call double @_Z5exp10d(double %extract2848.i) nounwind
  %temp.vect2849.i = insertelement <16 x double> undef, double %1797, i32 0
  %temp.vect2850.i = insertelement <16 x double> %temp.vect2849.i, double %1798, i32 1
  %temp.vect2851.i = insertelement <16 x double> %temp.vect2850.i, double %1799, i32 2
  %temp.vect2852.i = insertelement <16 x double> %temp.vect2851.i, double %1800, i32 3
  %temp.vect2853.i = insertelement <16 x double> %temp.vect2852.i, double %1801, i32 4
  %temp.vect2854.i = insertelement <16 x double> %temp.vect2853.i, double %1802, i32 5
  %temp.vect2855.i = insertelement <16 x double> %temp.vect2854.i, double %1803, i32 6
  %temp.vect2856.i = insertelement <16 x double> %temp.vect2855.i, double %1804, i32 7
  %temp.vect2857.i = insertelement <16 x double> %temp.vect2856.i, double %1805, i32 8
  %temp.vect2858.i = insertelement <16 x double> %temp.vect2857.i, double %1806, i32 9
  %temp.vect2859.i = insertelement <16 x double> %temp.vect2858.i, double %1807, i32 10
  %temp.vect2860.i = insertelement <16 x double> %temp.vect2859.i, double %1808, i32 11
  %temp.vect2861.i = insertelement <16 x double> %temp.vect2860.i, double %1809, i32 12
  %temp.vect2862.i = insertelement <16 x double> %temp.vect2861.i, double %1810, i32 13
  %temp.vect2863.i = insertelement <16 x double> %temp.vect2862.i, double %1811, i32 14
  %temp.vect2864.i = insertelement <16 x double> %temp.vect2863.i, double %1812, i32 15
  %1813 = fmul <16 x double> %temp.vect2864.i, %1664
  %1814 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1815 = load i64* %1814, align 8
  %1816 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1817 = load i64* %1816, align 8
  %1818 = add i64 %1815, %1817
  %extract2867.i = add i64 %1818, 8515584
  %1819 = getelementptr inbounds double addrspace(1)* %7, i64 %extract2867.i
  %ptrTypeCast2883.i = bitcast double addrspace(1)* %1819 to <16 x double> addrspace(1)*
  %1820 = load <16 x double> addrspace(1)* %ptrTypeCast2883.i, align 8
  %1821 = fmul <16 x double> %1820, %1813
  %1822 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1823 = load i64* %1822, align 8
  %1824 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1825 = load i64* %1824, align 8
  %1826 = add i64 %1823, %1825
  %extract2886.i = add i64 %1826, 8515584
  %1827 = getelementptr inbounds double addrspace(1)* %7, i64 %extract2886.i
  %ptrTypeCast2902.i = bitcast double addrspace(1)* %1827 to <16 x double> addrspace(1)*
  store <16 x double> %1821, <16 x double> addrspace(1)* %ptrTypeCast2902.i, align 8
  %1828 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1829 = load i64* %1828, align 8
  %1830 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1831 = load i64* %1830, align 8
  %1832 = add i64 %1829, %1831
  %extract2905.i = add i64 %1832, 8515584
  %1833 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2905.i
  %ptrTypeCast2921.i = bitcast double addrspace(1)* %1833 to <16 x double> addrspace(1)*
  %1834 = load <16 x double> addrspace(1)* %ptrTypeCast2921.i, align 8
  %1835 = fmul <16 x double> %1834, %1813
  %1836 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1837 = load i64* %1836, align 8
  %1838 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1839 = load i64* %1838, align 8
  %1840 = add i64 %1837, %1839
  %extract2924.i = add i64 %1840, 8515584
  %1841 = getelementptr inbounds double addrspace(1)* %10, i64 %extract2924.i
  %ptrTypeCast2940.i = bitcast double addrspace(1)* %1841 to <16 x double> addrspace(1)*
  store <16 x double> %1835, <16 x double> addrspace(1)* %ptrTypeCast2940.i, align 8
  %1842 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1843 = load i64* %1842, align 8
  %1844 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1845 = load i64* %1844, align 8
  %1846 = add i64 %1843, %1845
  %extract2943.i = add i64 %1846, 884736
  %1847 = getelementptr inbounds double addrspace(1)* %13, i64 %extract2943.i
  %ptrTypeCast2959.i = bitcast double addrspace(1)* %1847 to <16 x double> addrspace(1)*
  %1848 = load <16 x double> addrspace(1)* %ptrTypeCast2959.i, align 8
  %1849 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %1850 = load i64* %1849, align 8
  %1851 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %1852 = load i64* %1851, align 8
  %1853 = add i64 %1850, %1852
  %extract2962.i = add i64 %1853, 9732096
  %1854 = getelementptr inbounds double addrspace(1)* %7, i64 %extract2962.i
  %ptrTypeCast2978.i = bitcast double addrspace(1)* %1854 to <16 x double> addrspace(1)*
  %1855 = load <16 x double> addrspace(1)* %ptrTypeCast2978.i, align 8
  %1856 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1855
  %1857 = fmul <16 x double> %127, %1856
  %1858 = fmul <16 x double> %1848, %1857
  %extract2979.i = extractelement <16 x double> %1858, i32 0
  %extract2980.i = extractelement <16 x double> %1858, i32 1
  %extract2981.i = extractelement <16 x double> %1858, i32 2
  %extract2982.i = extractelement <16 x double> %1858, i32 3
  %extract2983.i = extractelement <16 x double> %1858, i32 4
  %extract2984.i = extractelement <16 x double> %1858, i32 5
  %extract2985.i = extractelement <16 x double> %1858, i32 6
  %extract2986.i = extractelement <16 x double> %1858, i32 7
  %extract2987.i = extractelement <16 x double> %1858, i32 8
  %extract2988.i = extractelement <16 x double> %1858, i32 9
  %extract2989.i = extractelement <16 x double> %1858, i32 10
  %extract2990.i = extractelement <16 x double> %1858, i32 11
  %extract2991.i = extractelement <16 x double> %1858, i32 12
  %extract2992.i = extractelement <16 x double> %1858, i32 13
  %extract2993.i = extractelement <16 x double> %1858, i32 14
  %extract2994.i = extractelement <16 x double> %1858, i32 15
  %1859 = fadd <16 x double> %1858, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %1860 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1859
  %1861 = fmul <16 x double> %1858, %1860
  %1862 = call double @_Z4fmaxdd(double %extract2979.i, double 1.000000e-200) nounwind
  %1863 = call double @_Z4fmaxdd(double %extract2980.i, double 1.000000e-200) nounwind
  %1864 = call double @_Z4fmaxdd(double %extract2981.i, double 1.000000e-200) nounwind
  %1865 = call double @_Z4fmaxdd(double %extract2982.i, double 1.000000e-200) nounwind
  %1866 = call double @_Z4fmaxdd(double %extract2983.i, double 1.000000e-200) nounwind
  %1867 = call double @_Z4fmaxdd(double %extract2984.i, double 1.000000e-200) nounwind
  %1868 = call double @_Z4fmaxdd(double %extract2985.i, double 1.000000e-200) nounwind
  %1869 = call double @_Z4fmaxdd(double %extract2986.i, double 1.000000e-200) nounwind
  %1870 = call double @_Z4fmaxdd(double %extract2987.i, double 1.000000e-200) nounwind
  %1871 = call double @_Z4fmaxdd(double %extract2988.i, double 1.000000e-200) nounwind
  %1872 = call double @_Z4fmaxdd(double %extract2989.i, double 1.000000e-200) nounwind
  %1873 = call double @_Z4fmaxdd(double %extract2990.i, double 1.000000e-200) nounwind
  %1874 = call double @_Z4fmaxdd(double %extract2991.i, double 1.000000e-200) nounwind
  %1875 = call double @_Z4fmaxdd(double %extract2992.i, double 1.000000e-200) nounwind
  %1876 = call double @_Z4fmaxdd(double %extract2993.i, double 1.000000e-200) nounwind
  %1877 = call double @_Z4fmaxdd(double %extract2994.i, double 1.000000e-200) nounwind
  %1878 = call double @_Z5log10d(double %1862) nounwind
  %1879 = call double @_Z5log10d(double %1863) nounwind
  %1880 = call double @_Z5log10d(double %1864) nounwind
  %1881 = call double @_Z5log10d(double %1865) nounwind
  %1882 = call double @_Z5log10d(double %1866) nounwind
  %1883 = call double @_Z5log10d(double %1867) nounwind
  %1884 = call double @_Z5log10d(double %1868) nounwind
  %1885 = call double @_Z5log10d(double %1869) nounwind
  %1886 = call double @_Z5log10d(double %1870) nounwind
  %1887 = call double @_Z5log10d(double %1871) nounwind
  %1888 = call double @_Z5log10d(double %1872) nounwind
  %1889 = call double @_Z5log10d(double %1873) nounwind
  %1890 = call double @_Z5log10d(double %1874) nounwind
  %1891 = call double @_Z5log10d(double %1875) nounwind
  %1892 = call double @_Z5log10d(double %1876) nounwind
  %1893 = call double @_Z5log10d(double %1877) nounwind
  %temp.vect3123.i = insertelement <16 x double> undef, double %1878, i32 0
  %temp.vect3124.i = insertelement <16 x double> %temp.vect3123.i, double %1879, i32 1
  %temp.vect3125.i = insertelement <16 x double> %temp.vect3124.i, double %1880, i32 2
  %temp.vect3126.i = insertelement <16 x double> %temp.vect3125.i, double %1881, i32 3
  %temp.vect3127.i = insertelement <16 x double> %temp.vect3126.i, double %1882, i32 4
  %temp.vect3128.i = insertelement <16 x double> %temp.vect3127.i, double %1883, i32 5
  %temp.vect3129.i = insertelement <16 x double> %temp.vect3128.i, double %1884, i32 6
  %temp.vect3130.i = insertelement <16 x double> %temp.vect3129.i, double %1885, i32 7
  %temp.vect3131.i = insertelement <16 x double> %temp.vect3130.i, double %1886, i32 8
  %temp.vect3132.i = insertelement <16 x double> %temp.vect3131.i, double %1887, i32 9
  %temp.vect3133.i = insertelement <16 x double> %temp.vect3132.i, double %1888, i32 10
  %temp.vect3134.i = insertelement <16 x double> %temp.vect3133.i, double %1889, i32 11
  %temp.vect3135.i = insertelement <16 x double> %temp.vect3134.i, double %1890, i32 12
  %temp.vect3136.i = insertelement <16 x double> %temp.vect3135.i, double %1891, i32 13
  %temp.vect3137.i = insertelement <16 x double> %temp.vect3136.i, double %1892, i32 14
  %temp.vect3138.i = insertelement <16 x double> %temp.vect3137.i, double %1893, i32 15
  %1894 = fmul <16 x double> %33, <double 0xBFB393EE251E9EA8, double 0xBFB393EE251E9EA8, double 0xBFB393EE251E9EA8, double 0xBFB393EE251E9EA8, double 0xBFB393EE251E9EA8, double 0xBFB393EE251E9EA8, double 0xBFB393EE251E9EA8, double 0xBFB393EE251E9EA8, double 0xBFB393EE251E9EA8, double 0xBFB393EE251E9EA8, double 0xBFB393EE251E9EA8, double 0xBFB393EE251E9EA8, double 0xBFB393EE251E9EA8, double 0xBFB393EE251E9EA8, double 0xBFB393EE251E9EA8, double 0xBFB393EE251E9EA8>
  %extract2995.i = extractelement <16 x double> %1894, i32 0
  %extract2996.i = extractelement <16 x double> %1894, i32 1
  %extract2997.i = extractelement <16 x double> %1894, i32 2
  %extract2998.i = extractelement <16 x double> %1894, i32 3
  %extract2999.i = extractelement <16 x double> %1894, i32 4
  %extract3000.i = extractelement <16 x double> %1894, i32 5
  %extract3001.i = extractelement <16 x double> %1894, i32 6
  %extract3002.i = extractelement <16 x double> %1894, i32 7
  %extract3003.i = extractelement <16 x double> %1894, i32 8
  %extract3004.i = extractelement <16 x double> %1894, i32 9
  %extract3005.i = extractelement <16 x double> %1894, i32 10
  %extract3006.i = extractelement <16 x double> %1894, i32 11
  %extract3007.i = extractelement <16 x double> %1894, i32 12
  %extract3008.i = extractelement <16 x double> %1894, i32 13
  %extract3009.i = extractelement <16 x double> %1894, i32 14
  %extract3010.i = extractelement <16 x double> %1894, i32 15
  %1895 = call double @_Z3expd(double %extract2995.i) nounwind
  %1896 = call double @_Z3expd(double %extract2996.i) nounwind
  %1897 = call double @_Z3expd(double %extract2997.i) nounwind
  %1898 = call double @_Z3expd(double %extract2998.i) nounwind
  %1899 = call double @_Z3expd(double %extract2999.i) nounwind
  %1900 = call double @_Z3expd(double %extract3000.i) nounwind
  %1901 = call double @_Z3expd(double %extract3001.i) nounwind
  %1902 = call double @_Z3expd(double %extract3002.i) nounwind
  %1903 = call double @_Z3expd(double %extract3003.i) nounwind
  %1904 = call double @_Z3expd(double %extract3004.i) nounwind
  %1905 = call double @_Z3expd(double %extract3005.i) nounwind
  %1906 = call double @_Z3expd(double %extract3006.i) nounwind
  %1907 = call double @_Z3expd(double %extract3007.i) nounwind
  %1908 = call double @_Z3expd(double %extract3008.i) nounwind
  %1909 = call double @_Z3expd(double %extract3009.i) nounwind
  %1910 = call double @_Z3expd(double %extract3010.i) nounwind
  %temp.vect3011.i = insertelement <16 x double> undef, double %1895, i32 0
  %temp.vect3012.i = insertelement <16 x double> %temp.vect3011.i, double %1896, i32 1
  %temp.vect3013.i = insertelement <16 x double> %temp.vect3012.i, double %1897, i32 2
  %temp.vect3014.i = insertelement <16 x double> %temp.vect3013.i, double %1898, i32 3
  %temp.vect3015.i = insertelement <16 x double> %temp.vect3014.i, double %1899, i32 4
  %temp.vect3016.i = insertelement <16 x double> %temp.vect3015.i, double %1900, i32 5
  %temp.vect3017.i = insertelement <16 x double> %temp.vect3016.i, double %1901, i32 6
  %temp.vect3018.i = insertelement <16 x double> %temp.vect3017.i, double %1902, i32 7
  %temp.vect3019.i = insertelement <16 x double> %temp.vect3018.i, double %1903, i32 8
  %temp.vect3020.i = insertelement <16 x double> %temp.vect3019.i, double %1904, i32 9
  %temp.vect3021.i = insertelement <16 x double> %temp.vect3020.i, double %1905, i32 10
  %temp.vect3022.i = insertelement <16 x double> %temp.vect3021.i, double %1906, i32 11
  %temp.vect3023.i = insertelement <16 x double> %temp.vect3022.i, double %1907, i32 12
  %temp.vect3024.i = insertelement <16 x double> %temp.vect3023.i, double %1908, i32 13
  %temp.vect3025.i = insertelement <16 x double> %temp.vect3024.i, double %1909, i32 14
  %temp.vect3026.i = insertelement <16 x double> %temp.vect3025.i, double %1910, i32 15
  %1911 = fmul <16 x double> %temp.vect3026.i, <double 3.827000e-01, double 3.827000e-01, double 3.827000e-01, double 3.827000e-01, double 3.827000e-01, double 3.827000e-01, double 3.827000e-01, double 3.827000e-01, double 3.827000e-01, double 3.827000e-01, double 3.827000e-01, double 3.827000e-01, double 3.827000e-01, double 3.827000e-01, double 3.827000e-01, double 3.827000e-01>
  %1912 = fmul <16 x double> %33, <double 0xBF3F89BB80DCC421, double 0xBF3F89BB80DCC421, double 0xBF3F89BB80DCC421, double 0xBF3F89BB80DCC421, double 0xBF3F89BB80DCC421, double 0xBF3F89BB80DCC421, double 0xBF3F89BB80DCC421, double 0xBF3F89BB80DCC421, double 0xBF3F89BB80DCC421, double 0xBF3F89BB80DCC421, double 0xBF3F89BB80DCC421, double 0xBF3F89BB80DCC421, double 0xBF3F89BB80DCC421, double 0xBF3F89BB80DCC421, double 0xBF3F89BB80DCC421, double 0xBF3F89BB80DCC421>
  %extract3027.i = extractelement <16 x double> %1912, i32 0
  %extract3028.i = extractelement <16 x double> %1912, i32 1
  %extract3029.i = extractelement <16 x double> %1912, i32 2
  %extract3030.i = extractelement <16 x double> %1912, i32 3
  %extract3031.i = extractelement <16 x double> %1912, i32 4
  %extract3032.i = extractelement <16 x double> %1912, i32 5
  %extract3033.i = extractelement <16 x double> %1912, i32 6
  %extract3034.i = extractelement <16 x double> %1912, i32 7
  %extract3035.i = extractelement <16 x double> %1912, i32 8
  %extract3036.i = extractelement <16 x double> %1912, i32 9
  %extract3037.i = extractelement <16 x double> %1912, i32 10
  %extract3038.i = extractelement <16 x double> %1912, i32 11
  %extract3039.i = extractelement <16 x double> %1912, i32 12
  %extract3040.i = extractelement <16 x double> %1912, i32 13
  %extract3041.i = extractelement <16 x double> %1912, i32 14
  %extract3042.i = extractelement <16 x double> %1912, i32 15
  %1913 = call double @_Z3expd(double %extract3027.i) nounwind
  %1914 = call double @_Z3expd(double %extract3028.i) nounwind
  %1915 = call double @_Z3expd(double %extract3029.i) nounwind
  %1916 = call double @_Z3expd(double %extract3030.i) nounwind
  %1917 = call double @_Z3expd(double %extract3031.i) nounwind
  %1918 = call double @_Z3expd(double %extract3032.i) nounwind
  %1919 = call double @_Z3expd(double %extract3033.i) nounwind
  %1920 = call double @_Z3expd(double %extract3034.i) nounwind
  %1921 = call double @_Z3expd(double %extract3035.i) nounwind
  %1922 = call double @_Z3expd(double %extract3036.i) nounwind
  %1923 = call double @_Z3expd(double %extract3037.i) nounwind
  %1924 = call double @_Z3expd(double %extract3038.i) nounwind
  %1925 = call double @_Z3expd(double %extract3039.i) nounwind
  %1926 = call double @_Z3expd(double %extract3040.i) nounwind
  %1927 = call double @_Z3expd(double %extract3041.i) nounwind
  %1928 = call double @_Z3expd(double %extract3042.i) nounwind
  %temp.vect3043.i = insertelement <16 x double> undef, double %1913, i32 0
  %temp.vect3044.i = insertelement <16 x double> %temp.vect3043.i, double %1914, i32 1
  %temp.vect3045.i = insertelement <16 x double> %temp.vect3044.i, double %1915, i32 2
  %temp.vect3046.i = insertelement <16 x double> %temp.vect3045.i, double %1916, i32 3
  %temp.vect3047.i = insertelement <16 x double> %temp.vect3046.i, double %1917, i32 4
  %temp.vect3048.i = insertelement <16 x double> %temp.vect3047.i, double %1918, i32 5
  %temp.vect3049.i = insertelement <16 x double> %temp.vect3048.i, double %1919, i32 6
  %temp.vect3050.i = insertelement <16 x double> %temp.vect3049.i, double %1920, i32 7
  %temp.vect3051.i = insertelement <16 x double> %temp.vect3050.i, double %1921, i32 8
  %temp.vect3052.i = insertelement <16 x double> %temp.vect3051.i, double %1922, i32 9
  %temp.vect3053.i = insertelement <16 x double> %temp.vect3052.i, double %1923, i32 10
  %temp.vect3054.i = insertelement <16 x double> %temp.vect3053.i, double %1924, i32 11
  %temp.vect3055.i = insertelement <16 x double> %temp.vect3054.i, double %1925, i32 12
  %temp.vect3056.i = insertelement <16 x double> %temp.vect3055.i, double %1926, i32 13
  %temp.vect3057.i = insertelement <16 x double> %temp.vect3056.i, double %1927, i32 14
  %temp.vect3058.i = insertelement <16 x double> %temp.vect3057.i, double %1928, i32 15
  %1929 = fmul <16 x double> %temp.vect3058.i, <double 6.173000e-01, double 6.173000e-01, double 6.173000e-01, double 6.173000e-01, double 6.173000e-01, double 6.173000e-01, double 6.173000e-01, double 6.173000e-01, double 6.173000e-01, double 6.173000e-01, double 6.173000e-01, double 6.173000e-01, double 6.173000e-01, double 6.173000e-01, double 6.173000e-01, double 6.173000e-01>
  %1930 = fadd <16 x double> %1911, %1929
  %1931 = fmul <16 x double> %355, <double -5.093000e+03, double -5.093000e+03, double -5.093000e+03, double -5.093000e+03, double -5.093000e+03, double -5.093000e+03, double -5.093000e+03, double -5.093000e+03, double -5.093000e+03, double -5.093000e+03, double -5.093000e+03, double -5.093000e+03, double -5.093000e+03, double -5.093000e+03, double -5.093000e+03, double -5.093000e+03>
  %extract3059.i = extractelement <16 x double> %1931, i32 0
  %extract3060.i = extractelement <16 x double> %1931, i32 1
  %extract3061.i = extractelement <16 x double> %1931, i32 2
  %extract3062.i = extractelement <16 x double> %1931, i32 3
  %extract3063.i = extractelement <16 x double> %1931, i32 4
  %extract3064.i = extractelement <16 x double> %1931, i32 5
  %extract3065.i = extractelement <16 x double> %1931, i32 6
  %extract3066.i = extractelement <16 x double> %1931, i32 7
  %extract3067.i = extractelement <16 x double> %1931, i32 8
  %extract3068.i = extractelement <16 x double> %1931, i32 9
  %extract3069.i = extractelement <16 x double> %1931, i32 10
  %extract3070.i = extractelement <16 x double> %1931, i32 11
  %extract3071.i = extractelement <16 x double> %1931, i32 12
  %extract3072.i = extractelement <16 x double> %1931, i32 13
  %extract3073.i = extractelement <16 x double> %1931, i32 14
  %extract3074.i = extractelement <16 x double> %1931, i32 15
  %1932 = call double @_Z3expd(double %extract3059.i) nounwind
  %1933 = call double @_Z3expd(double %extract3060.i) nounwind
  %1934 = call double @_Z3expd(double %extract3061.i) nounwind
  %1935 = call double @_Z3expd(double %extract3062.i) nounwind
  %1936 = call double @_Z3expd(double %extract3063.i) nounwind
  %1937 = call double @_Z3expd(double %extract3064.i) nounwind
  %1938 = call double @_Z3expd(double %extract3065.i) nounwind
  %1939 = call double @_Z3expd(double %extract3066.i) nounwind
  %1940 = call double @_Z3expd(double %extract3067.i) nounwind
  %1941 = call double @_Z3expd(double %extract3068.i) nounwind
  %1942 = call double @_Z3expd(double %extract3069.i) nounwind
  %1943 = call double @_Z3expd(double %extract3070.i) nounwind
  %1944 = call double @_Z3expd(double %extract3071.i) nounwind
  %1945 = call double @_Z3expd(double %extract3072.i) nounwind
  %1946 = call double @_Z3expd(double %extract3073.i) nounwind
  %1947 = call double @_Z3expd(double %extract3074.i) nounwind
  %temp.vect3075.i = insertelement <16 x double> undef, double %1932, i32 0
  %temp.vect3076.i = insertelement <16 x double> %temp.vect3075.i, double %1933, i32 1
  %temp.vect3077.i = insertelement <16 x double> %temp.vect3076.i, double %1934, i32 2
  %temp.vect3078.i = insertelement <16 x double> %temp.vect3077.i, double %1935, i32 3
  %temp.vect3079.i = insertelement <16 x double> %temp.vect3078.i, double %1936, i32 4
  %temp.vect3080.i = insertelement <16 x double> %temp.vect3079.i, double %1937, i32 5
  %temp.vect3081.i = insertelement <16 x double> %temp.vect3080.i, double %1938, i32 6
  %temp.vect3082.i = insertelement <16 x double> %temp.vect3081.i, double %1939, i32 7
  %temp.vect3083.i = insertelement <16 x double> %temp.vect3082.i, double %1940, i32 8
  %temp.vect3084.i = insertelement <16 x double> %temp.vect3083.i, double %1941, i32 9
  %temp.vect3085.i = insertelement <16 x double> %temp.vect3084.i, double %1942, i32 10
  %temp.vect3086.i = insertelement <16 x double> %temp.vect3085.i, double %1943, i32 11
  %temp.vect3087.i = insertelement <16 x double> %temp.vect3086.i, double %1944, i32 12
  %temp.vect3088.i = insertelement <16 x double> %temp.vect3087.i, double %1945, i32 13
  %temp.vect3089.i = insertelement <16 x double> %temp.vect3088.i, double %1946, i32 14
  %temp.vect3090.i = insertelement <16 x double> %temp.vect3089.i, double %1947, i32 15
  %1948 = fadd <16 x double> %1930, %temp.vect3090.i
  %extract3091.i = extractelement <16 x double> %1948, i32 0
  %extract3092.i = extractelement <16 x double> %1948, i32 1
  %extract3093.i = extractelement <16 x double> %1948, i32 2
  %extract3094.i = extractelement <16 x double> %1948, i32 3
  %extract3095.i = extractelement <16 x double> %1948, i32 4
  %extract3096.i = extractelement <16 x double> %1948, i32 5
  %extract3097.i = extractelement <16 x double> %1948, i32 6
  %extract3098.i = extractelement <16 x double> %1948, i32 7
  %extract3099.i = extractelement <16 x double> %1948, i32 8
  %extract3100.i = extractelement <16 x double> %1948, i32 9
  %extract3101.i = extractelement <16 x double> %1948, i32 10
  %extract3102.i = extractelement <16 x double> %1948, i32 11
  %extract3103.i = extractelement <16 x double> %1948, i32 12
  %extract3104.i = extractelement <16 x double> %1948, i32 13
  %extract3105.i = extractelement <16 x double> %1948, i32 14
  %extract3106.i = extractelement <16 x double> %1948, i32 15
  %1949 = call double @_Z4fmaxdd(double %extract3091.i, double 1.000000e-200) nounwind
  %1950 = call double @_Z4fmaxdd(double %extract3092.i, double 1.000000e-200) nounwind
  %1951 = call double @_Z4fmaxdd(double %extract3093.i, double 1.000000e-200) nounwind
  %1952 = call double @_Z4fmaxdd(double %extract3094.i, double 1.000000e-200) nounwind
  %1953 = call double @_Z4fmaxdd(double %extract3095.i, double 1.000000e-200) nounwind
  %1954 = call double @_Z4fmaxdd(double %extract3096.i, double 1.000000e-200) nounwind
  %1955 = call double @_Z4fmaxdd(double %extract3097.i, double 1.000000e-200) nounwind
  %1956 = call double @_Z4fmaxdd(double %extract3098.i, double 1.000000e-200) nounwind
  %1957 = call double @_Z4fmaxdd(double %extract3099.i, double 1.000000e-200) nounwind
  %1958 = call double @_Z4fmaxdd(double %extract3100.i, double 1.000000e-200) nounwind
  %1959 = call double @_Z4fmaxdd(double %extract3101.i, double 1.000000e-200) nounwind
  %1960 = call double @_Z4fmaxdd(double %extract3102.i, double 1.000000e-200) nounwind
  %1961 = call double @_Z4fmaxdd(double %extract3103.i, double 1.000000e-200) nounwind
  %1962 = call double @_Z4fmaxdd(double %extract3104.i, double 1.000000e-200) nounwind
  %1963 = call double @_Z4fmaxdd(double %extract3105.i, double 1.000000e-200) nounwind
  %1964 = call double @_Z4fmaxdd(double %extract3106.i, double 1.000000e-200) nounwind
  %1965 = call double @_Z5log10d(double %1949) nounwind
  %1966 = call double @_Z5log10d(double %1950) nounwind
  %1967 = call double @_Z5log10d(double %1951) nounwind
  %1968 = call double @_Z5log10d(double %1952) nounwind
  %1969 = call double @_Z5log10d(double %1953) nounwind
  %1970 = call double @_Z5log10d(double %1954) nounwind
  %1971 = call double @_Z5log10d(double %1955) nounwind
  %1972 = call double @_Z5log10d(double %1956) nounwind
  %1973 = call double @_Z5log10d(double %1957) nounwind
  %1974 = call double @_Z5log10d(double %1958) nounwind
  %1975 = call double @_Z5log10d(double %1959) nounwind
  %1976 = call double @_Z5log10d(double %1960) nounwind
  %1977 = call double @_Z5log10d(double %1961) nounwind
  %1978 = call double @_Z5log10d(double %1962) nounwind
  %1979 = call double @_Z5log10d(double %1963) nounwind
  %1980 = call double @_Z5log10d(double %1964) nounwind
  %temp.vect3107.i = insertelement <16 x double> undef, double %1965, i32 0
  %temp.vect3108.i = insertelement <16 x double> %temp.vect3107.i, double %1966, i32 1
  %temp.vect3109.i = insertelement <16 x double> %temp.vect3108.i, double %1967, i32 2
  %temp.vect3110.i = insertelement <16 x double> %temp.vect3109.i, double %1968, i32 3
  %temp.vect3111.i = insertelement <16 x double> %temp.vect3110.i, double %1969, i32 4
  %temp.vect3112.i = insertelement <16 x double> %temp.vect3111.i, double %1970, i32 5
  %temp.vect3113.i = insertelement <16 x double> %temp.vect3112.i, double %1971, i32 6
  %temp.vect3114.i = insertelement <16 x double> %temp.vect3113.i, double %1972, i32 7
  %temp.vect3115.i = insertelement <16 x double> %temp.vect3114.i, double %1973, i32 8
  %temp.vect3116.i = insertelement <16 x double> %temp.vect3115.i, double %1974, i32 9
  %temp.vect3117.i = insertelement <16 x double> %temp.vect3116.i, double %1975, i32 10
  %temp.vect3118.i = insertelement <16 x double> %temp.vect3117.i, double %1976, i32 11
  %temp.vect3119.i = insertelement <16 x double> %temp.vect3118.i, double %1977, i32 12
  %temp.vect3120.i = insertelement <16 x double> %temp.vect3119.i, double %1978, i32 13
  %temp.vect3121.i = insertelement <16 x double> %temp.vect3120.i, double %1979, i32 14
  %temp.vect3122.i = insertelement <16 x double> %temp.vect3121.i, double %1980, i32 15
  %1981 = fmul <16 x double> %temp.vect3122.i, <double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00>
  %1982 = fsub <16 x double> <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>, %1981
  %1983 = fmul <16 x double> %temp.vect3122.i, <double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01>
  %1984 = fadd <16 x double> %1983, <double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01>
  %1985 = fsub <16 x double> %temp.vect3138.i, %1984
  %1986 = fmul <16 x double> %1985, <double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01>
  %1987 = fsub <16 x double> %1982, %1986
  %1988 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1987
  %1989 = fmul <16 x double> %1985, %1988
  %1990 = fmul <16 x double> %1989, %1989
  %1991 = fadd <16 x double> %1990, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %1992 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1991
  %1993 = fmul <16 x double> %temp.vect3122.i, %1992
  %extract3139.i = extractelement <16 x double> %1993, i32 0
  %extract3140.i = extractelement <16 x double> %1993, i32 1
  %extract3141.i = extractelement <16 x double> %1993, i32 2
  %extract3142.i = extractelement <16 x double> %1993, i32 3
  %extract3143.i = extractelement <16 x double> %1993, i32 4
  %extract3144.i = extractelement <16 x double> %1993, i32 5
  %extract3145.i = extractelement <16 x double> %1993, i32 6
  %extract3146.i = extractelement <16 x double> %1993, i32 7
  %extract3147.i = extractelement <16 x double> %1993, i32 8
  %extract3148.i = extractelement <16 x double> %1993, i32 9
  %extract3149.i = extractelement <16 x double> %1993, i32 10
  %extract3150.i = extractelement <16 x double> %1993, i32 11
  %extract3151.i = extractelement <16 x double> %1993, i32 12
  %extract3152.i = extractelement <16 x double> %1993, i32 13
  %extract3153.i = extractelement <16 x double> %1993, i32 14
  %extract3154.i = extractelement <16 x double> %1993, i32 15
  %1994 = call double @_Z5exp10d(double %extract3139.i) nounwind
  %1995 = call double @_Z5exp10d(double %extract3140.i) nounwind
  %1996 = call double @_Z5exp10d(double %extract3141.i) nounwind
  %1997 = call double @_Z5exp10d(double %extract3142.i) nounwind
  %1998 = call double @_Z5exp10d(double %extract3143.i) nounwind
  %1999 = call double @_Z5exp10d(double %extract3144.i) nounwind
  %2000 = call double @_Z5exp10d(double %extract3145.i) nounwind
  %2001 = call double @_Z5exp10d(double %extract3146.i) nounwind
  %2002 = call double @_Z5exp10d(double %extract3147.i) nounwind
  %2003 = call double @_Z5exp10d(double %extract3148.i) nounwind
  %2004 = call double @_Z5exp10d(double %extract3149.i) nounwind
  %2005 = call double @_Z5exp10d(double %extract3150.i) nounwind
  %2006 = call double @_Z5exp10d(double %extract3151.i) nounwind
  %2007 = call double @_Z5exp10d(double %extract3152.i) nounwind
  %2008 = call double @_Z5exp10d(double %extract3153.i) nounwind
  %2009 = call double @_Z5exp10d(double %extract3154.i) nounwind
  %temp.vect3155.i = insertelement <16 x double> undef, double %1994, i32 0
  %temp.vect3156.i = insertelement <16 x double> %temp.vect3155.i, double %1995, i32 1
  %temp.vect3157.i = insertelement <16 x double> %temp.vect3156.i, double %1996, i32 2
  %temp.vect3158.i = insertelement <16 x double> %temp.vect3157.i, double %1997, i32 3
  %temp.vect3159.i = insertelement <16 x double> %temp.vect3158.i, double %1998, i32 4
  %temp.vect3160.i = insertelement <16 x double> %temp.vect3159.i, double %1999, i32 5
  %temp.vect3161.i = insertelement <16 x double> %temp.vect3160.i, double %2000, i32 6
  %temp.vect3162.i = insertelement <16 x double> %temp.vect3161.i, double %2001, i32 7
  %temp.vect3163.i = insertelement <16 x double> %temp.vect3162.i, double %2002, i32 8
  %temp.vect3164.i = insertelement <16 x double> %temp.vect3163.i, double %2003, i32 9
  %temp.vect3165.i = insertelement <16 x double> %temp.vect3164.i, double %2004, i32 10
  %temp.vect3166.i = insertelement <16 x double> %temp.vect3165.i, double %2005, i32 11
  %temp.vect3167.i = insertelement <16 x double> %temp.vect3166.i, double %2006, i32 12
  %temp.vect3168.i = insertelement <16 x double> %temp.vect3167.i, double %2007, i32 13
  %temp.vect3169.i = insertelement <16 x double> %temp.vect3168.i, double %2008, i32 14
  %temp.vect3170.i = insertelement <16 x double> %temp.vect3169.i, double %2009, i32 15
  %2010 = fmul <16 x double> %temp.vect3170.i, %1861
  %2011 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2012 = load i64* %2011, align 8
  %2013 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2014 = load i64* %2013, align 8
  %2015 = add i64 %2012, %2014
  %extract3173.i = add i64 %2015, 9732096
  %2016 = getelementptr inbounds double addrspace(1)* %7, i64 %extract3173.i
  %ptrTypeCast3189.i = bitcast double addrspace(1)* %2016 to <16 x double> addrspace(1)*
  %2017 = load <16 x double> addrspace(1)* %ptrTypeCast3189.i, align 8
  %2018 = fmul <16 x double> %2017, %2010
  %2019 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2020 = load i64* %2019, align 8
  %2021 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2022 = load i64* %2021, align 8
  %2023 = add i64 %2020, %2022
  %extract3192.i = add i64 %2023, 9732096
  %2024 = getelementptr inbounds double addrspace(1)* %7, i64 %extract3192.i
  %ptrTypeCast3208.i = bitcast double addrspace(1)* %2024 to <16 x double> addrspace(1)*
  store <16 x double> %2018, <16 x double> addrspace(1)* %ptrTypeCast3208.i, align 8
  %2025 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2026 = load i64* %2025, align 8
  %2027 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2028 = load i64* %2027, align 8
  %2029 = add i64 %2026, %2028
  %extract3211.i = add i64 %2029, 9732096
  %2030 = getelementptr inbounds double addrspace(1)* %10, i64 %extract3211.i
  %ptrTypeCast3227.i = bitcast double addrspace(1)* %2030 to <16 x double> addrspace(1)*
  %2031 = load <16 x double> addrspace(1)* %ptrTypeCast3227.i, align 8
  %2032 = fmul <16 x double> %2031, %2010
  %2033 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2034 = load i64* %2033, align 8
  %2035 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2036 = load i64* %2035, align 8
  %2037 = add i64 %2034, %2036
  %extract3230.i = add i64 %2037, 9732096
  %2038 = getelementptr inbounds double addrspace(1)* %10, i64 %extract3230.i
  %ptrTypeCast3246.i = bitcast double addrspace(1)* %2038 to <16 x double> addrspace(1)*
  store <16 x double> %2032, <16 x double> addrspace(1)* %ptrTypeCast3246.i, align 8
  %2039 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2040 = load i64* %2039, align 8
  %2041 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2042 = load i64* %2041, align 8
  %2043 = add i64 %2040, %2042
  %extract3249.i = add i64 %2043, 995328
  %2044 = getelementptr inbounds double addrspace(1)* %13, i64 %extract3249.i
  %ptrTypeCast3265.i = bitcast double addrspace(1)* %2044 to <16 x double> addrspace(1)*
  %2045 = load <16 x double> addrspace(1)* %ptrTypeCast3265.i, align 8
  %2046 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2047 = load i64* %2046, align 8
  %2048 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2049 = load i64* %2048, align 8
  %2050 = add i64 %2047, %2049
  %extract3268.i = add i64 %2050, 10174464
  %2051 = getelementptr inbounds double addrspace(1)* %7, i64 %extract3268.i
  %ptrTypeCast3284.i = bitcast double addrspace(1)* %2051 to <16 x double> addrspace(1)*
  %2052 = load <16 x double> addrspace(1)* %ptrTypeCast3284.i, align 8
  %2053 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2052
  %2054 = fmul <16 x double> %127, %2053
  %2055 = fmul <16 x double> %2045, %2054
  %extract3285.i = extractelement <16 x double> %2055, i32 0
  %extract3286.i = extractelement <16 x double> %2055, i32 1
  %extract3287.i = extractelement <16 x double> %2055, i32 2
  %extract3288.i = extractelement <16 x double> %2055, i32 3
  %extract3289.i = extractelement <16 x double> %2055, i32 4
  %extract3290.i = extractelement <16 x double> %2055, i32 5
  %extract3291.i = extractelement <16 x double> %2055, i32 6
  %extract3292.i = extractelement <16 x double> %2055, i32 7
  %extract3293.i = extractelement <16 x double> %2055, i32 8
  %extract3294.i = extractelement <16 x double> %2055, i32 9
  %extract3295.i = extractelement <16 x double> %2055, i32 10
  %extract3296.i = extractelement <16 x double> %2055, i32 11
  %extract3297.i = extractelement <16 x double> %2055, i32 12
  %extract3298.i = extractelement <16 x double> %2055, i32 13
  %extract3299.i = extractelement <16 x double> %2055, i32 14
  %extract3300.i = extractelement <16 x double> %2055, i32 15
  %2056 = fadd <16 x double> %2055, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %2057 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2056
  %2058 = fmul <16 x double> %2055, %2057
  %2059 = call double @_Z4fmaxdd(double %extract3285.i, double 1.000000e-200) nounwind
  %2060 = call double @_Z4fmaxdd(double %extract3286.i, double 1.000000e-200) nounwind
  %2061 = call double @_Z4fmaxdd(double %extract3287.i, double 1.000000e-200) nounwind
  %2062 = call double @_Z4fmaxdd(double %extract3288.i, double 1.000000e-200) nounwind
  %2063 = call double @_Z4fmaxdd(double %extract3289.i, double 1.000000e-200) nounwind
  %2064 = call double @_Z4fmaxdd(double %extract3290.i, double 1.000000e-200) nounwind
  %2065 = call double @_Z4fmaxdd(double %extract3291.i, double 1.000000e-200) nounwind
  %2066 = call double @_Z4fmaxdd(double %extract3292.i, double 1.000000e-200) nounwind
  %2067 = call double @_Z4fmaxdd(double %extract3293.i, double 1.000000e-200) nounwind
  %2068 = call double @_Z4fmaxdd(double %extract3294.i, double 1.000000e-200) nounwind
  %2069 = call double @_Z4fmaxdd(double %extract3295.i, double 1.000000e-200) nounwind
  %2070 = call double @_Z4fmaxdd(double %extract3296.i, double 1.000000e-200) nounwind
  %2071 = call double @_Z4fmaxdd(double %extract3297.i, double 1.000000e-200) nounwind
  %2072 = call double @_Z4fmaxdd(double %extract3298.i, double 1.000000e-200) nounwind
  %2073 = call double @_Z4fmaxdd(double %extract3299.i, double 1.000000e-200) nounwind
  %2074 = call double @_Z4fmaxdd(double %extract3300.i, double 1.000000e-200) nounwind
  %2075 = call double @_Z5log10d(double %2059) nounwind
  %2076 = call double @_Z5log10d(double %2060) nounwind
  %2077 = call double @_Z5log10d(double %2061) nounwind
  %2078 = call double @_Z5log10d(double %2062) nounwind
  %2079 = call double @_Z5log10d(double %2063) nounwind
  %2080 = call double @_Z5log10d(double %2064) nounwind
  %2081 = call double @_Z5log10d(double %2065) nounwind
  %2082 = call double @_Z5log10d(double %2066) nounwind
  %2083 = call double @_Z5log10d(double %2067) nounwind
  %2084 = call double @_Z5log10d(double %2068) nounwind
  %2085 = call double @_Z5log10d(double %2069) nounwind
  %2086 = call double @_Z5log10d(double %2070) nounwind
  %2087 = call double @_Z5log10d(double %2071) nounwind
  %2088 = call double @_Z5log10d(double %2072) nounwind
  %2089 = call double @_Z5log10d(double %2073) nounwind
  %2090 = call double @_Z5log10d(double %2074) nounwind
  %temp.vect3429.i = insertelement <16 x double> undef, double %2075, i32 0
  %temp.vect3430.i = insertelement <16 x double> %temp.vect3429.i, double %2076, i32 1
  %temp.vect3431.i = insertelement <16 x double> %temp.vect3430.i, double %2077, i32 2
  %temp.vect3432.i = insertelement <16 x double> %temp.vect3431.i, double %2078, i32 3
  %temp.vect3433.i = insertelement <16 x double> %temp.vect3432.i, double %2079, i32 4
  %temp.vect3434.i = insertelement <16 x double> %temp.vect3433.i, double %2080, i32 5
  %temp.vect3435.i = insertelement <16 x double> %temp.vect3434.i, double %2081, i32 6
  %temp.vect3436.i = insertelement <16 x double> %temp.vect3435.i, double %2082, i32 7
  %temp.vect3437.i = insertelement <16 x double> %temp.vect3436.i, double %2083, i32 8
  %temp.vect3438.i = insertelement <16 x double> %temp.vect3437.i, double %2084, i32 9
  %temp.vect3439.i = insertelement <16 x double> %temp.vect3438.i, double %2085, i32 10
  %temp.vect3440.i = insertelement <16 x double> %temp.vect3439.i, double %2086, i32 11
  %temp.vect3441.i = insertelement <16 x double> %temp.vect3440.i, double %2087, i32 12
  %temp.vect3442.i = insertelement <16 x double> %temp.vect3441.i, double %2088, i32 13
  %temp.vect3443.i = insertelement <16 x double> %temp.vect3442.i, double %2089, i32 14
  %temp.vect3444.i = insertelement <16 x double> %temp.vect3443.i, double %2090, i32 15
  %2091 = fmul <16 x double> %33, <double 0xBF7B2036406C80D9, double 0xBF7B2036406C80D9, double 0xBF7B2036406C80D9, double 0xBF7B2036406C80D9, double 0xBF7B2036406C80D9, double 0xBF7B2036406C80D9, double 0xBF7B2036406C80D9, double 0xBF7B2036406C80D9, double 0xBF7B2036406C80D9, double 0xBF7B2036406C80D9, double 0xBF7B2036406C80D9, double 0xBF7B2036406C80D9, double 0xBF7B2036406C80D9, double 0xBF7B2036406C80D9, double 0xBF7B2036406C80D9, double 0xBF7B2036406C80D9>
  %extract3301.i = extractelement <16 x double> %2091, i32 0
  %extract3302.i = extractelement <16 x double> %2091, i32 1
  %extract3303.i = extractelement <16 x double> %2091, i32 2
  %extract3304.i = extractelement <16 x double> %2091, i32 3
  %extract3305.i = extractelement <16 x double> %2091, i32 4
  %extract3306.i = extractelement <16 x double> %2091, i32 5
  %extract3307.i = extractelement <16 x double> %2091, i32 6
  %extract3308.i = extractelement <16 x double> %2091, i32 7
  %extract3309.i = extractelement <16 x double> %2091, i32 8
  %extract3310.i = extractelement <16 x double> %2091, i32 9
  %extract3311.i = extractelement <16 x double> %2091, i32 10
  %extract3312.i = extractelement <16 x double> %2091, i32 11
  %extract3313.i = extractelement <16 x double> %2091, i32 12
  %extract3314.i = extractelement <16 x double> %2091, i32 13
  %extract3315.i = extractelement <16 x double> %2091, i32 14
  %extract3316.i = extractelement <16 x double> %2091, i32 15
  %2092 = call double @_Z3expd(double %extract3301.i) nounwind
  %2093 = call double @_Z3expd(double %extract3302.i) nounwind
  %2094 = call double @_Z3expd(double %extract3303.i) nounwind
  %2095 = call double @_Z3expd(double %extract3304.i) nounwind
  %2096 = call double @_Z3expd(double %extract3305.i) nounwind
  %2097 = call double @_Z3expd(double %extract3306.i) nounwind
  %2098 = call double @_Z3expd(double %extract3307.i) nounwind
  %2099 = call double @_Z3expd(double %extract3308.i) nounwind
  %2100 = call double @_Z3expd(double %extract3309.i) nounwind
  %2101 = call double @_Z3expd(double %extract3310.i) nounwind
  %2102 = call double @_Z3expd(double %extract3311.i) nounwind
  %2103 = call double @_Z3expd(double %extract3312.i) nounwind
  %2104 = call double @_Z3expd(double %extract3313.i) nounwind
  %2105 = call double @_Z3expd(double %extract3314.i) nounwind
  %2106 = call double @_Z3expd(double %extract3315.i) nounwind
  %2107 = call double @_Z3expd(double %extract3316.i) nounwind
  %temp.vect3317.i = insertelement <16 x double> undef, double %2092, i32 0
  %temp.vect3318.i = insertelement <16 x double> %temp.vect3317.i, double %2093, i32 1
  %temp.vect3319.i = insertelement <16 x double> %temp.vect3318.i, double %2094, i32 2
  %temp.vect3320.i = insertelement <16 x double> %temp.vect3319.i, double %2095, i32 3
  %temp.vect3321.i = insertelement <16 x double> %temp.vect3320.i, double %2096, i32 4
  %temp.vect3322.i = insertelement <16 x double> %temp.vect3321.i, double %2097, i32 5
  %temp.vect3323.i = insertelement <16 x double> %temp.vect3322.i, double %2098, i32 6
  %temp.vect3324.i = insertelement <16 x double> %temp.vect3323.i, double %2099, i32 7
  %temp.vect3325.i = insertelement <16 x double> %temp.vect3324.i, double %2100, i32 8
  %temp.vect3326.i = insertelement <16 x double> %temp.vect3325.i, double %2101, i32 9
  %temp.vect3327.i = insertelement <16 x double> %temp.vect3326.i, double %2102, i32 10
  %temp.vect3328.i = insertelement <16 x double> %temp.vect3327.i, double %2103, i32 11
  %temp.vect3329.i = insertelement <16 x double> %temp.vect3328.i, double %2104, i32 12
  %temp.vect3330.i = insertelement <16 x double> %temp.vect3329.i, double %2105, i32 13
  %temp.vect3331.i = insertelement <16 x double> %temp.vect3330.i, double %2106, i32 14
  %temp.vect3332.i = insertelement <16 x double> %temp.vect3331.i, double %2107, i32 15
  %2108 = fmul <16 x double> %temp.vect3332.i, <double 4.675000e-01, double 4.675000e-01, double 4.675000e-01, double 4.675000e-01, double 4.675000e-01, double 4.675000e-01, double 4.675000e-01, double 4.675000e-01, double 4.675000e-01, double 4.675000e-01, double 4.675000e-01, double 4.675000e-01, double 4.675000e-01, double 4.675000e-01, double 4.675000e-01, double 4.675000e-01>
  %2109 = fmul <16 x double> %33, <double 0xBF4F9182B6813BAF, double 0xBF4F9182B6813BAF, double 0xBF4F9182B6813BAF, double 0xBF4F9182B6813BAF, double 0xBF4F9182B6813BAF, double 0xBF4F9182B6813BAF, double 0xBF4F9182B6813BAF, double 0xBF4F9182B6813BAF, double 0xBF4F9182B6813BAF, double 0xBF4F9182B6813BAF, double 0xBF4F9182B6813BAF, double 0xBF4F9182B6813BAF, double 0xBF4F9182B6813BAF, double 0xBF4F9182B6813BAF, double 0xBF4F9182B6813BAF, double 0xBF4F9182B6813BAF>
  %extract3333.i = extractelement <16 x double> %2109, i32 0
  %extract3334.i = extractelement <16 x double> %2109, i32 1
  %extract3335.i = extractelement <16 x double> %2109, i32 2
  %extract3336.i = extractelement <16 x double> %2109, i32 3
  %extract3337.i = extractelement <16 x double> %2109, i32 4
  %extract3338.i = extractelement <16 x double> %2109, i32 5
  %extract3339.i = extractelement <16 x double> %2109, i32 6
  %extract3340.i = extractelement <16 x double> %2109, i32 7
  %extract3341.i = extractelement <16 x double> %2109, i32 8
  %extract3342.i = extractelement <16 x double> %2109, i32 9
  %extract3343.i = extractelement <16 x double> %2109, i32 10
  %extract3344.i = extractelement <16 x double> %2109, i32 11
  %extract3345.i = extractelement <16 x double> %2109, i32 12
  %extract3346.i = extractelement <16 x double> %2109, i32 13
  %extract3347.i = extractelement <16 x double> %2109, i32 14
  %extract3348.i = extractelement <16 x double> %2109, i32 15
  %2110 = call double @_Z3expd(double %extract3333.i) nounwind
  %2111 = call double @_Z3expd(double %extract3334.i) nounwind
  %2112 = call double @_Z3expd(double %extract3335.i) nounwind
  %2113 = call double @_Z3expd(double %extract3336.i) nounwind
  %2114 = call double @_Z3expd(double %extract3337.i) nounwind
  %2115 = call double @_Z3expd(double %extract3338.i) nounwind
  %2116 = call double @_Z3expd(double %extract3339.i) nounwind
  %2117 = call double @_Z3expd(double %extract3340.i) nounwind
  %2118 = call double @_Z3expd(double %extract3341.i) nounwind
  %2119 = call double @_Z3expd(double %extract3342.i) nounwind
  %2120 = call double @_Z3expd(double %extract3343.i) nounwind
  %2121 = call double @_Z3expd(double %extract3344.i) nounwind
  %2122 = call double @_Z3expd(double %extract3345.i) nounwind
  %2123 = call double @_Z3expd(double %extract3346.i) nounwind
  %2124 = call double @_Z3expd(double %extract3347.i) nounwind
  %2125 = call double @_Z3expd(double %extract3348.i) nounwind
  %temp.vect3349.i = insertelement <16 x double> undef, double %2110, i32 0
  %temp.vect3350.i = insertelement <16 x double> %temp.vect3349.i, double %2111, i32 1
  %temp.vect3351.i = insertelement <16 x double> %temp.vect3350.i, double %2112, i32 2
  %temp.vect3352.i = insertelement <16 x double> %temp.vect3351.i, double %2113, i32 3
  %temp.vect3353.i = insertelement <16 x double> %temp.vect3352.i, double %2114, i32 4
  %temp.vect3354.i = insertelement <16 x double> %temp.vect3353.i, double %2115, i32 5
  %temp.vect3355.i = insertelement <16 x double> %temp.vect3354.i, double %2116, i32 6
  %temp.vect3356.i = insertelement <16 x double> %temp.vect3355.i, double %2117, i32 7
  %temp.vect3357.i = insertelement <16 x double> %temp.vect3356.i, double %2118, i32 8
  %temp.vect3358.i = insertelement <16 x double> %temp.vect3357.i, double %2119, i32 9
  %temp.vect3359.i = insertelement <16 x double> %temp.vect3358.i, double %2120, i32 10
  %temp.vect3360.i = insertelement <16 x double> %temp.vect3359.i, double %2121, i32 11
  %temp.vect3361.i = insertelement <16 x double> %temp.vect3360.i, double %2122, i32 12
  %temp.vect3362.i = insertelement <16 x double> %temp.vect3361.i, double %2123, i32 13
  %temp.vect3363.i = insertelement <16 x double> %temp.vect3362.i, double %2124, i32 14
  %temp.vect3364.i = insertelement <16 x double> %temp.vect3363.i, double %2125, i32 15
  %2126 = fmul <16 x double> %temp.vect3364.i, <double 5.325000e-01, double 5.325000e-01, double 5.325000e-01, double 5.325000e-01, double 5.325000e-01, double 5.325000e-01, double 5.325000e-01, double 5.325000e-01, double 5.325000e-01, double 5.325000e-01, double 5.325000e-01, double 5.325000e-01, double 5.325000e-01, double 5.325000e-01, double 5.325000e-01, double 5.325000e-01>
  %2127 = fadd <16 x double> %2108, %2126
  %2128 = fmul <16 x double> %355, <double -4.970000e+03, double -4.970000e+03, double -4.970000e+03, double -4.970000e+03, double -4.970000e+03, double -4.970000e+03, double -4.970000e+03, double -4.970000e+03, double -4.970000e+03, double -4.970000e+03, double -4.970000e+03, double -4.970000e+03, double -4.970000e+03, double -4.970000e+03, double -4.970000e+03, double -4.970000e+03>
  %extract3365.i = extractelement <16 x double> %2128, i32 0
  %extract3366.i = extractelement <16 x double> %2128, i32 1
  %extract3367.i = extractelement <16 x double> %2128, i32 2
  %extract3368.i = extractelement <16 x double> %2128, i32 3
  %extract3369.i = extractelement <16 x double> %2128, i32 4
  %extract3370.i = extractelement <16 x double> %2128, i32 5
  %extract3371.i = extractelement <16 x double> %2128, i32 6
  %extract3372.i = extractelement <16 x double> %2128, i32 7
  %extract3373.i = extractelement <16 x double> %2128, i32 8
  %extract3374.i = extractelement <16 x double> %2128, i32 9
  %extract3375.i = extractelement <16 x double> %2128, i32 10
  %extract3376.i = extractelement <16 x double> %2128, i32 11
  %extract3377.i = extractelement <16 x double> %2128, i32 12
  %extract3378.i = extractelement <16 x double> %2128, i32 13
  %extract3379.i = extractelement <16 x double> %2128, i32 14
  %extract3380.i = extractelement <16 x double> %2128, i32 15
  %2129 = call double @_Z3expd(double %extract3365.i) nounwind
  %2130 = call double @_Z3expd(double %extract3366.i) nounwind
  %2131 = call double @_Z3expd(double %extract3367.i) nounwind
  %2132 = call double @_Z3expd(double %extract3368.i) nounwind
  %2133 = call double @_Z3expd(double %extract3369.i) nounwind
  %2134 = call double @_Z3expd(double %extract3370.i) nounwind
  %2135 = call double @_Z3expd(double %extract3371.i) nounwind
  %2136 = call double @_Z3expd(double %extract3372.i) nounwind
  %2137 = call double @_Z3expd(double %extract3373.i) nounwind
  %2138 = call double @_Z3expd(double %extract3374.i) nounwind
  %2139 = call double @_Z3expd(double %extract3375.i) nounwind
  %2140 = call double @_Z3expd(double %extract3376.i) nounwind
  %2141 = call double @_Z3expd(double %extract3377.i) nounwind
  %2142 = call double @_Z3expd(double %extract3378.i) nounwind
  %2143 = call double @_Z3expd(double %extract3379.i) nounwind
  %2144 = call double @_Z3expd(double %extract3380.i) nounwind
  %temp.vect3381.i = insertelement <16 x double> undef, double %2129, i32 0
  %temp.vect3382.i = insertelement <16 x double> %temp.vect3381.i, double %2130, i32 1
  %temp.vect3383.i = insertelement <16 x double> %temp.vect3382.i, double %2131, i32 2
  %temp.vect3384.i = insertelement <16 x double> %temp.vect3383.i, double %2132, i32 3
  %temp.vect3385.i = insertelement <16 x double> %temp.vect3384.i, double %2133, i32 4
  %temp.vect3386.i = insertelement <16 x double> %temp.vect3385.i, double %2134, i32 5
  %temp.vect3387.i = insertelement <16 x double> %temp.vect3386.i, double %2135, i32 6
  %temp.vect3388.i = insertelement <16 x double> %temp.vect3387.i, double %2136, i32 7
  %temp.vect3389.i = insertelement <16 x double> %temp.vect3388.i, double %2137, i32 8
  %temp.vect3390.i = insertelement <16 x double> %temp.vect3389.i, double %2138, i32 9
  %temp.vect3391.i = insertelement <16 x double> %temp.vect3390.i, double %2139, i32 10
  %temp.vect3392.i = insertelement <16 x double> %temp.vect3391.i, double %2140, i32 11
  %temp.vect3393.i = insertelement <16 x double> %temp.vect3392.i, double %2141, i32 12
  %temp.vect3394.i = insertelement <16 x double> %temp.vect3393.i, double %2142, i32 13
  %temp.vect3395.i = insertelement <16 x double> %temp.vect3394.i, double %2143, i32 14
  %temp.vect3396.i = insertelement <16 x double> %temp.vect3395.i, double %2144, i32 15
  %2145 = fadd <16 x double> %2127, %temp.vect3396.i
  %extract3397.i = extractelement <16 x double> %2145, i32 0
  %extract3398.i = extractelement <16 x double> %2145, i32 1
  %extract3399.i = extractelement <16 x double> %2145, i32 2
  %extract3400.i = extractelement <16 x double> %2145, i32 3
  %extract3401.i = extractelement <16 x double> %2145, i32 4
  %extract3402.i = extractelement <16 x double> %2145, i32 5
  %extract3403.i = extractelement <16 x double> %2145, i32 6
  %extract3404.i = extractelement <16 x double> %2145, i32 7
  %extract3405.i = extractelement <16 x double> %2145, i32 8
  %extract3406.i = extractelement <16 x double> %2145, i32 9
  %extract3407.i = extractelement <16 x double> %2145, i32 10
  %extract3408.i = extractelement <16 x double> %2145, i32 11
  %extract3409.i = extractelement <16 x double> %2145, i32 12
  %extract3410.i = extractelement <16 x double> %2145, i32 13
  %extract3411.i = extractelement <16 x double> %2145, i32 14
  %extract3412.i = extractelement <16 x double> %2145, i32 15
  %2146 = call double @_Z4fmaxdd(double %extract3397.i, double 1.000000e-200) nounwind
  %2147 = call double @_Z4fmaxdd(double %extract3398.i, double 1.000000e-200) nounwind
  %2148 = call double @_Z4fmaxdd(double %extract3399.i, double 1.000000e-200) nounwind
  %2149 = call double @_Z4fmaxdd(double %extract3400.i, double 1.000000e-200) nounwind
  %2150 = call double @_Z4fmaxdd(double %extract3401.i, double 1.000000e-200) nounwind
  %2151 = call double @_Z4fmaxdd(double %extract3402.i, double 1.000000e-200) nounwind
  %2152 = call double @_Z4fmaxdd(double %extract3403.i, double 1.000000e-200) nounwind
  %2153 = call double @_Z4fmaxdd(double %extract3404.i, double 1.000000e-200) nounwind
  %2154 = call double @_Z4fmaxdd(double %extract3405.i, double 1.000000e-200) nounwind
  %2155 = call double @_Z4fmaxdd(double %extract3406.i, double 1.000000e-200) nounwind
  %2156 = call double @_Z4fmaxdd(double %extract3407.i, double 1.000000e-200) nounwind
  %2157 = call double @_Z4fmaxdd(double %extract3408.i, double 1.000000e-200) nounwind
  %2158 = call double @_Z4fmaxdd(double %extract3409.i, double 1.000000e-200) nounwind
  %2159 = call double @_Z4fmaxdd(double %extract3410.i, double 1.000000e-200) nounwind
  %2160 = call double @_Z4fmaxdd(double %extract3411.i, double 1.000000e-200) nounwind
  %2161 = call double @_Z4fmaxdd(double %extract3412.i, double 1.000000e-200) nounwind
  %2162 = call double @_Z5log10d(double %2146) nounwind
  %2163 = call double @_Z5log10d(double %2147) nounwind
  %2164 = call double @_Z5log10d(double %2148) nounwind
  %2165 = call double @_Z5log10d(double %2149) nounwind
  %2166 = call double @_Z5log10d(double %2150) nounwind
  %2167 = call double @_Z5log10d(double %2151) nounwind
  %2168 = call double @_Z5log10d(double %2152) nounwind
  %2169 = call double @_Z5log10d(double %2153) nounwind
  %2170 = call double @_Z5log10d(double %2154) nounwind
  %2171 = call double @_Z5log10d(double %2155) nounwind
  %2172 = call double @_Z5log10d(double %2156) nounwind
  %2173 = call double @_Z5log10d(double %2157) nounwind
  %2174 = call double @_Z5log10d(double %2158) nounwind
  %2175 = call double @_Z5log10d(double %2159) nounwind
  %2176 = call double @_Z5log10d(double %2160) nounwind
  %2177 = call double @_Z5log10d(double %2161) nounwind
  %temp.vect3413.i = insertelement <16 x double> undef, double %2162, i32 0
  %temp.vect3414.i = insertelement <16 x double> %temp.vect3413.i, double %2163, i32 1
  %temp.vect3415.i = insertelement <16 x double> %temp.vect3414.i, double %2164, i32 2
  %temp.vect3416.i = insertelement <16 x double> %temp.vect3415.i, double %2165, i32 3
  %temp.vect3417.i = insertelement <16 x double> %temp.vect3416.i, double %2166, i32 4
  %temp.vect3418.i = insertelement <16 x double> %temp.vect3417.i, double %2167, i32 5
  %temp.vect3419.i = insertelement <16 x double> %temp.vect3418.i, double %2168, i32 6
  %temp.vect3420.i = insertelement <16 x double> %temp.vect3419.i, double %2169, i32 7
  %temp.vect3421.i = insertelement <16 x double> %temp.vect3420.i, double %2170, i32 8
  %temp.vect3422.i = insertelement <16 x double> %temp.vect3421.i, double %2171, i32 9
  %temp.vect3423.i = insertelement <16 x double> %temp.vect3422.i, double %2172, i32 10
  %temp.vect3424.i = insertelement <16 x double> %temp.vect3423.i, double %2173, i32 11
  %temp.vect3425.i = insertelement <16 x double> %temp.vect3424.i, double %2174, i32 12
  %temp.vect3426.i = insertelement <16 x double> %temp.vect3425.i, double %2175, i32 13
  %temp.vect3427.i = insertelement <16 x double> %temp.vect3426.i, double %2176, i32 14
  %temp.vect3428.i = insertelement <16 x double> %temp.vect3427.i, double %2177, i32 15
  %2178 = fmul <16 x double> %temp.vect3428.i, <double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00>
  %2179 = fsub <16 x double> <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>, %2178
  %2180 = fmul <16 x double> %temp.vect3428.i, <double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01>
  %2181 = fadd <16 x double> %2180, <double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01>
  %2182 = fsub <16 x double> %temp.vect3444.i, %2181
  %2183 = fmul <16 x double> %2182, <double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01>
  %2184 = fsub <16 x double> %2179, %2183
  %2185 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2184
  %2186 = fmul <16 x double> %2182, %2185
  %2187 = fmul <16 x double> %2186, %2186
  %2188 = fadd <16 x double> %2187, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %2189 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2188
  %2190 = fmul <16 x double> %temp.vect3428.i, %2189
  %extract3445.i = extractelement <16 x double> %2190, i32 0
  %extract3446.i = extractelement <16 x double> %2190, i32 1
  %extract3447.i = extractelement <16 x double> %2190, i32 2
  %extract3448.i = extractelement <16 x double> %2190, i32 3
  %extract3449.i = extractelement <16 x double> %2190, i32 4
  %extract3450.i = extractelement <16 x double> %2190, i32 5
  %extract3451.i = extractelement <16 x double> %2190, i32 6
  %extract3452.i = extractelement <16 x double> %2190, i32 7
  %extract3453.i = extractelement <16 x double> %2190, i32 8
  %extract3454.i = extractelement <16 x double> %2190, i32 9
  %extract3455.i = extractelement <16 x double> %2190, i32 10
  %extract3456.i = extractelement <16 x double> %2190, i32 11
  %extract3457.i = extractelement <16 x double> %2190, i32 12
  %extract3458.i = extractelement <16 x double> %2190, i32 13
  %extract3459.i = extractelement <16 x double> %2190, i32 14
  %extract3460.i = extractelement <16 x double> %2190, i32 15
  %2191 = call double @_Z5exp10d(double %extract3445.i) nounwind
  %2192 = call double @_Z5exp10d(double %extract3446.i) nounwind
  %2193 = call double @_Z5exp10d(double %extract3447.i) nounwind
  %2194 = call double @_Z5exp10d(double %extract3448.i) nounwind
  %2195 = call double @_Z5exp10d(double %extract3449.i) nounwind
  %2196 = call double @_Z5exp10d(double %extract3450.i) nounwind
  %2197 = call double @_Z5exp10d(double %extract3451.i) nounwind
  %2198 = call double @_Z5exp10d(double %extract3452.i) nounwind
  %2199 = call double @_Z5exp10d(double %extract3453.i) nounwind
  %2200 = call double @_Z5exp10d(double %extract3454.i) nounwind
  %2201 = call double @_Z5exp10d(double %extract3455.i) nounwind
  %2202 = call double @_Z5exp10d(double %extract3456.i) nounwind
  %2203 = call double @_Z5exp10d(double %extract3457.i) nounwind
  %2204 = call double @_Z5exp10d(double %extract3458.i) nounwind
  %2205 = call double @_Z5exp10d(double %extract3459.i) nounwind
  %2206 = call double @_Z5exp10d(double %extract3460.i) nounwind
  %temp.vect3461.i = insertelement <16 x double> undef, double %2191, i32 0
  %temp.vect3462.i = insertelement <16 x double> %temp.vect3461.i, double %2192, i32 1
  %temp.vect3463.i = insertelement <16 x double> %temp.vect3462.i, double %2193, i32 2
  %temp.vect3464.i = insertelement <16 x double> %temp.vect3463.i, double %2194, i32 3
  %temp.vect3465.i = insertelement <16 x double> %temp.vect3464.i, double %2195, i32 4
  %temp.vect3466.i = insertelement <16 x double> %temp.vect3465.i, double %2196, i32 5
  %temp.vect3467.i = insertelement <16 x double> %temp.vect3466.i, double %2197, i32 6
  %temp.vect3468.i = insertelement <16 x double> %temp.vect3467.i, double %2198, i32 7
  %temp.vect3469.i = insertelement <16 x double> %temp.vect3468.i, double %2199, i32 8
  %temp.vect3470.i = insertelement <16 x double> %temp.vect3469.i, double %2200, i32 9
  %temp.vect3471.i = insertelement <16 x double> %temp.vect3470.i, double %2201, i32 10
  %temp.vect3472.i = insertelement <16 x double> %temp.vect3471.i, double %2202, i32 11
  %temp.vect3473.i = insertelement <16 x double> %temp.vect3472.i, double %2203, i32 12
  %temp.vect3474.i = insertelement <16 x double> %temp.vect3473.i, double %2204, i32 13
  %temp.vect3475.i = insertelement <16 x double> %temp.vect3474.i, double %2205, i32 14
  %temp.vect3476.i = insertelement <16 x double> %temp.vect3475.i, double %2206, i32 15
  %2207 = fmul <16 x double> %temp.vect3476.i, %2058
  %2208 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2209 = load i64* %2208, align 8
  %2210 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2211 = load i64* %2210, align 8
  %2212 = add i64 %2209, %2211
  %extract3479.i = add i64 %2212, 10174464
  %2213 = getelementptr inbounds double addrspace(1)* %7, i64 %extract3479.i
  %ptrTypeCast3495.i = bitcast double addrspace(1)* %2213 to <16 x double> addrspace(1)*
  %2214 = load <16 x double> addrspace(1)* %ptrTypeCast3495.i, align 8
  %2215 = fmul <16 x double> %2214, %2207
  %2216 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2217 = load i64* %2216, align 8
  %2218 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2219 = load i64* %2218, align 8
  %2220 = add i64 %2217, %2219
  %extract3498.i = add i64 %2220, 10174464
  %2221 = getelementptr inbounds double addrspace(1)* %7, i64 %extract3498.i
  %ptrTypeCast3514.i = bitcast double addrspace(1)* %2221 to <16 x double> addrspace(1)*
  store <16 x double> %2215, <16 x double> addrspace(1)* %ptrTypeCast3514.i, align 8
  %2222 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2223 = load i64* %2222, align 8
  %2224 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2225 = load i64* %2224, align 8
  %2226 = add i64 %2223, %2225
  %extract3517.i = add i64 %2226, 10174464
  %2227 = getelementptr inbounds double addrspace(1)* %10, i64 %extract3517.i
  %ptrTypeCast3533.i = bitcast double addrspace(1)* %2227 to <16 x double> addrspace(1)*
  %2228 = load <16 x double> addrspace(1)* %ptrTypeCast3533.i, align 8
  %2229 = fmul <16 x double> %2228, %2207
  %2230 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2231 = load i64* %2230, align 8
  %2232 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2233 = load i64* %2232, align 8
  %2234 = add i64 %2231, %2233
  %extract3536.i = add i64 %2234, 10174464
  %2235 = getelementptr inbounds double addrspace(1)* %10, i64 %extract3536.i
  %ptrTypeCast3552.i = bitcast double addrspace(1)* %2235 to <16 x double> addrspace(1)*
  store <16 x double> %2229, <16 x double> addrspace(1)* %ptrTypeCast3552.i, align 8
  %2236 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2237 = load i64* %2236, align 8
  %2238 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2239 = load i64* %2238, align 8
  %2240 = add i64 %2237, %2239
  %extract3555.i = add i64 %2240, 1105920
  %2241 = getelementptr inbounds double addrspace(1)* %13, i64 %extract3555.i
  %ptrTypeCast3571.i = bitcast double addrspace(1)* %2241 to <16 x double> addrspace(1)*
  %2242 = load <16 x double> addrspace(1)* %ptrTypeCast3571.i, align 8
  %2243 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2244 = load i64* %2243, align 8
  %2245 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2246 = load i64* %2245, align 8
  %2247 = add i64 %2244, %2246
  %extract3574.i = add i64 %2247, 12496896
  %2248 = getelementptr inbounds double addrspace(1)* %7, i64 %extract3574.i
  %ptrTypeCast3590.i = bitcast double addrspace(1)* %2248 to <16 x double> addrspace(1)*
  %2249 = load <16 x double> addrspace(1)* %ptrTypeCast3590.i, align 8
  %2250 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2249
  %2251 = fmul <16 x double> %196, %2250
  %2252 = fmul <16 x double> %2242, %2251
  %2253 = fadd <16 x double> %2252, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %2254 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2253
  %2255 = fmul <16 x double> %2252, %2254
  %2256 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2257 = load i64* %2256, align 8
  %2258 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2259 = load i64* %2258, align 8
  %2260 = add i64 %2257, %2259
  %extract3593.i = add i64 %2260, 12496896
  %2261 = getelementptr inbounds double addrspace(1)* %7, i64 %extract3593.i
  %ptrTypeCast3609.i = bitcast double addrspace(1)* %2261 to <16 x double> addrspace(1)*
  %2262 = load <16 x double> addrspace(1)* %ptrTypeCast3609.i, align 8
  %2263 = fmul <16 x double> %2262, %2255
  %2264 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2265 = load i64* %2264, align 8
  %2266 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2267 = load i64* %2266, align 8
  %2268 = add i64 %2265, %2267
  %extract3612.i = add i64 %2268, 12496896
  %2269 = getelementptr inbounds double addrspace(1)* %7, i64 %extract3612.i
  %ptrTypeCast3628.i = bitcast double addrspace(1)* %2269 to <16 x double> addrspace(1)*
  store <16 x double> %2263, <16 x double> addrspace(1)* %ptrTypeCast3628.i, align 8
  %2270 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2271 = load i64* %2270, align 8
  %2272 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2273 = load i64* %2272, align 8
  %2274 = add i64 %2271, %2273
  %extract3631.i = add i64 %2274, 12496896
  %2275 = getelementptr inbounds double addrspace(1)* %10, i64 %extract3631.i
  %ptrTypeCast3647.i = bitcast double addrspace(1)* %2275 to <16 x double> addrspace(1)*
  %2276 = load <16 x double> addrspace(1)* %ptrTypeCast3647.i, align 8
  %2277 = fmul <16 x double> %2276, %2255
  %2278 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2279 = load i64* %2278, align 8
  %2280 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2281 = load i64* %2280, align 8
  %2282 = add i64 %2279, %2281
  %extract3650.i = add i64 %2282, 12496896
  %2283 = getelementptr inbounds double addrspace(1)* %10, i64 %extract3650.i
  %ptrTypeCast3666.i = bitcast double addrspace(1)* %2283 to <16 x double> addrspace(1)*
  store <16 x double> %2277, <16 x double> addrspace(1)* %ptrTypeCast3666.i, align 8
  %2284 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2285 = load i64* %2284, align 8
  %2286 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2287 = load i64* %2286, align 8
  %2288 = add i64 %2285, %2287
  %extract3669.i = add i64 %2288, 1216512
  %2289 = getelementptr inbounds double addrspace(1)* %13, i64 %extract3669.i
  %ptrTypeCast3685.i = bitcast double addrspace(1)* %2289 to <16 x double> addrspace(1)*
  %2290 = load <16 x double> addrspace(1)* %ptrTypeCast3685.i, align 8
  %2291 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2292 = load i64* %2291, align 8
  %2293 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2294 = load i64* %2293, align 8
  %2295 = add i64 %2292, %2294
  %extract3688.i = add i64 %2295, 12607488
  %2296 = getelementptr inbounds double addrspace(1)* %7, i64 %extract3688.i
  %ptrTypeCast3704.i = bitcast double addrspace(1)* %2296 to <16 x double> addrspace(1)*
  %2297 = load <16 x double> addrspace(1)* %ptrTypeCast3704.i, align 8
  %2298 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2297
  %2299 = fmul <16 x double> %127, %2298
  %2300 = fmul <16 x double> %2290, %2299
  %extract3705.i = extractelement <16 x double> %2300, i32 0
  %extract3706.i = extractelement <16 x double> %2300, i32 1
  %extract3707.i = extractelement <16 x double> %2300, i32 2
  %extract3708.i = extractelement <16 x double> %2300, i32 3
  %extract3709.i = extractelement <16 x double> %2300, i32 4
  %extract3710.i = extractelement <16 x double> %2300, i32 5
  %extract3711.i = extractelement <16 x double> %2300, i32 6
  %extract3712.i = extractelement <16 x double> %2300, i32 7
  %extract3713.i = extractelement <16 x double> %2300, i32 8
  %extract3714.i = extractelement <16 x double> %2300, i32 9
  %extract3715.i = extractelement <16 x double> %2300, i32 10
  %extract3716.i = extractelement <16 x double> %2300, i32 11
  %extract3717.i = extractelement <16 x double> %2300, i32 12
  %extract3718.i = extractelement <16 x double> %2300, i32 13
  %extract3719.i = extractelement <16 x double> %2300, i32 14
  %extract3720.i = extractelement <16 x double> %2300, i32 15
  %2301 = fadd <16 x double> %2300, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %2302 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2301
  %2303 = fmul <16 x double> %2300, %2302
  %2304 = call double @_Z4fmaxdd(double %extract3705.i, double 1.000000e-200) nounwind
  %2305 = call double @_Z4fmaxdd(double %extract3706.i, double 1.000000e-200) nounwind
  %2306 = call double @_Z4fmaxdd(double %extract3707.i, double 1.000000e-200) nounwind
  %2307 = call double @_Z4fmaxdd(double %extract3708.i, double 1.000000e-200) nounwind
  %2308 = call double @_Z4fmaxdd(double %extract3709.i, double 1.000000e-200) nounwind
  %2309 = call double @_Z4fmaxdd(double %extract3710.i, double 1.000000e-200) nounwind
  %2310 = call double @_Z4fmaxdd(double %extract3711.i, double 1.000000e-200) nounwind
  %2311 = call double @_Z4fmaxdd(double %extract3712.i, double 1.000000e-200) nounwind
  %2312 = call double @_Z4fmaxdd(double %extract3713.i, double 1.000000e-200) nounwind
  %2313 = call double @_Z4fmaxdd(double %extract3714.i, double 1.000000e-200) nounwind
  %2314 = call double @_Z4fmaxdd(double %extract3715.i, double 1.000000e-200) nounwind
  %2315 = call double @_Z4fmaxdd(double %extract3716.i, double 1.000000e-200) nounwind
  %2316 = call double @_Z4fmaxdd(double %extract3717.i, double 1.000000e-200) nounwind
  %2317 = call double @_Z4fmaxdd(double %extract3718.i, double 1.000000e-200) nounwind
  %2318 = call double @_Z4fmaxdd(double %extract3719.i, double 1.000000e-200) nounwind
  %2319 = call double @_Z4fmaxdd(double %extract3720.i, double 1.000000e-200) nounwind
  %2320 = call double @_Z5log10d(double %2304) nounwind
  %2321 = call double @_Z5log10d(double %2305) nounwind
  %2322 = call double @_Z5log10d(double %2306) nounwind
  %2323 = call double @_Z5log10d(double %2307) nounwind
  %2324 = call double @_Z5log10d(double %2308) nounwind
  %2325 = call double @_Z5log10d(double %2309) nounwind
  %2326 = call double @_Z5log10d(double %2310) nounwind
  %2327 = call double @_Z5log10d(double %2311) nounwind
  %2328 = call double @_Z5log10d(double %2312) nounwind
  %2329 = call double @_Z5log10d(double %2313) nounwind
  %2330 = call double @_Z5log10d(double %2314) nounwind
  %2331 = call double @_Z5log10d(double %2315) nounwind
  %2332 = call double @_Z5log10d(double %2316) nounwind
  %2333 = call double @_Z5log10d(double %2317) nounwind
  %2334 = call double @_Z5log10d(double %2318) nounwind
  %2335 = call double @_Z5log10d(double %2319) nounwind
  %temp.vect3849.i = insertelement <16 x double> undef, double %2320, i32 0
  %temp.vect3850.i = insertelement <16 x double> %temp.vect3849.i, double %2321, i32 1
  %temp.vect3851.i = insertelement <16 x double> %temp.vect3850.i, double %2322, i32 2
  %temp.vect3852.i = insertelement <16 x double> %temp.vect3851.i, double %2323, i32 3
  %temp.vect3853.i = insertelement <16 x double> %temp.vect3852.i, double %2324, i32 4
  %temp.vect3854.i = insertelement <16 x double> %temp.vect3853.i, double %2325, i32 5
  %temp.vect3855.i = insertelement <16 x double> %temp.vect3854.i, double %2326, i32 6
  %temp.vect3856.i = insertelement <16 x double> %temp.vect3855.i, double %2327, i32 7
  %temp.vect3857.i = insertelement <16 x double> %temp.vect3856.i, double %2328, i32 8
  %temp.vect3858.i = insertelement <16 x double> %temp.vect3857.i, double %2329, i32 9
  %temp.vect3859.i = insertelement <16 x double> %temp.vect3858.i, double %2330, i32 10
  %temp.vect3860.i = insertelement <16 x double> %temp.vect3859.i, double %2331, i32 11
  %temp.vect3861.i = insertelement <16 x double> %temp.vect3860.i, double %2332, i32 12
  %temp.vect3862.i = insertelement <16 x double> %temp.vect3861.i, double %2333, i32 13
  %temp.vect3863.i = insertelement <16 x double> %temp.vect3862.i, double %2334, i32 14
  %temp.vect3864.i = insertelement <16 x double> %temp.vect3863.i, double %2335, i32 15
  %2336 = fmul <16 x double> %33, <double 0xBF285898CF48B83B, double 0xBF285898CF48B83B, double 0xBF285898CF48B83B, double 0xBF285898CF48B83B, double 0xBF285898CF48B83B, double 0xBF285898CF48B83B, double 0xBF285898CF48B83B, double 0xBF285898CF48B83B, double 0xBF285898CF48B83B, double 0xBF285898CF48B83B, double 0xBF285898CF48B83B, double 0xBF285898CF48B83B, double 0xBF285898CF48B83B, double 0xBF285898CF48B83B, double 0xBF285898CF48B83B, double 0xBF285898CF48B83B>
  %extract3721.i = extractelement <16 x double> %2336, i32 0
  %extract3722.i = extractelement <16 x double> %2336, i32 1
  %extract3723.i = extractelement <16 x double> %2336, i32 2
  %extract3724.i = extractelement <16 x double> %2336, i32 3
  %extract3725.i = extractelement <16 x double> %2336, i32 4
  %extract3726.i = extractelement <16 x double> %2336, i32 5
  %extract3727.i = extractelement <16 x double> %2336, i32 6
  %extract3728.i = extractelement <16 x double> %2336, i32 7
  %extract3729.i = extractelement <16 x double> %2336, i32 8
  %extract3730.i = extractelement <16 x double> %2336, i32 9
  %extract3731.i = extractelement <16 x double> %2336, i32 10
  %extract3732.i = extractelement <16 x double> %2336, i32 11
  %extract3733.i = extractelement <16 x double> %2336, i32 12
  %extract3734.i = extractelement <16 x double> %2336, i32 13
  %extract3735.i = extractelement <16 x double> %2336, i32 14
  %extract3736.i = extractelement <16 x double> %2336, i32 15
  %2337 = call double @_Z3expd(double %extract3721.i) nounwind
  %2338 = call double @_Z3expd(double %extract3722.i) nounwind
  %2339 = call double @_Z3expd(double %extract3723.i) nounwind
  %2340 = call double @_Z3expd(double %extract3724.i) nounwind
  %2341 = call double @_Z3expd(double %extract3725.i) nounwind
  %2342 = call double @_Z3expd(double %extract3726.i) nounwind
  %2343 = call double @_Z3expd(double %extract3727.i) nounwind
  %2344 = call double @_Z3expd(double %extract3728.i) nounwind
  %2345 = call double @_Z3expd(double %extract3729.i) nounwind
  %2346 = call double @_Z3expd(double %extract3730.i) nounwind
  %2347 = call double @_Z3expd(double %extract3731.i) nounwind
  %2348 = call double @_Z3expd(double %extract3732.i) nounwind
  %2349 = call double @_Z3expd(double %extract3733.i) nounwind
  %2350 = call double @_Z3expd(double %extract3734.i) nounwind
  %2351 = call double @_Z3expd(double %extract3735.i) nounwind
  %2352 = call double @_Z3expd(double %extract3736.i) nounwind
  %temp.vect3737.i = insertelement <16 x double> undef, double %2337, i32 0
  %temp.vect3738.i = insertelement <16 x double> %temp.vect3737.i, double %2338, i32 1
  %temp.vect3739.i = insertelement <16 x double> %temp.vect3738.i, double %2339, i32 2
  %temp.vect3740.i = insertelement <16 x double> %temp.vect3739.i, double %2340, i32 3
  %temp.vect3741.i = insertelement <16 x double> %temp.vect3740.i, double %2341, i32 4
  %temp.vect3742.i = insertelement <16 x double> %temp.vect3741.i, double %2342, i32 5
  %temp.vect3743.i = insertelement <16 x double> %temp.vect3742.i, double %2343, i32 6
  %temp.vect3744.i = insertelement <16 x double> %temp.vect3743.i, double %2344, i32 7
  %temp.vect3745.i = insertelement <16 x double> %temp.vect3744.i, double %2345, i32 8
  %temp.vect3746.i = insertelement <16 x double> %temp.vect3745.i, double %2346, i32 9
  %temp.vect3747.i = insertelement <16 x double> %temp.vect3746.i, double %2347, i32 10
  %temp.vect3748.i = insertelement <16 x double> %temp.vect3747.i, double %2348, i32 11
  %temp.vect3749.i = insertelement <16 x double> %temp.vect3748.i, double %2349, i32 12
  %temp.vect3750.i = insertelement <16 x double> %temp.vect3749.i, double %2350, i32 13
  %temp.vect3751.i = insertelement <16 x double> %temp.vect3750.i, double %2351, i32 14
  %temp.vect3752.i = insertelement <16 x double> %temp.vect3751.i, double %2352, i32 15
  %2353 = fmul <16 x double> %temp.vect3752.i, <double -9.816000e-01, double -9.816000e-01, double -9.816000e-01, double -9.816000e-01, double -9.816000e-01, double -9.816000e-01, double -9.816000e-01, double -9.816000e-01, double -9.816000e-01, double -9.816000e-01, double -9.816000e-01, double -9.816000e-01, double -9.816000e-01, double -9.816000e-01, double -9.816000e-01, double -9.816000e-01>
  %2354 = fmul <16 x double> %33, <double 0xBFCDD08901068F29, double 0xBFCDD08901068F29, double 0xBFCDD08901068F29, double 0xBFCDD08901068F29, double 0xBFCDD08901068F29, double 0xBFCDD08901068F29, double 0xBFCDD08901068F29, double 0xBFCDD08901068F29, double 0xBFCDD08901068F29, double 0xBFCDD08901068F29, double 0xBFCDD08901068F29, double 0xBFCDD08901068F29, double 0xBFCDD08901068F29, double 0xBFCDD08901068F29, double 0xBFCDD08901068F29, double 0xBFCDD08901068F29>
  %extract3753.i = extractelement <16 x double> %2354, i32 0
  %extract3754.i = extractelement <16 x double> %2354, i32 1
  %extract3755.i = extractelement <16 x double> %2354, i32 2
  %extract3756.i = extractelement <16 x double> %2354, i32 3
  %extract3757.i = extractelement <16 x double> %2354, i32 4
  %extract3758.i = extractelement <16 x double> %2354, i32 5
  %extract3759.i = extractelement <16 x double> %2354, i32 6
  %extract3760.i = extractelement <16 x double> %2354, i32 7
  %extract3761.i = extractelement <16 x double> %2354, i32 8
  %extract3762.i = extractelement <16 x double> %2354, i32 9
  %extract3763.i = extractelement <16 x double> %2354, i32 10
  %extract3764.i = extractelement <16 x double> %2354, i32 11
  %extract3765.i = extractelement <16 x double> %2354, i32 12
  %extract3766.i = extractelement <16 x double> %2354, i32 13
  %extract3767.i = extractelement <16 x double> %2354, i32 14
  %extract3768.i = extractelement <16 x double> %2354, i32 15
  %2355 = call double @_Z3expd(double %extract3753.i) nounwind
  %2356 = call double @_Z3expd(double %extract3754.i) nounwind
  %2357 = call double @_Z3expd(double %extract3755.i) nounwind
  %2358 = call double @_Z3expd(double %extract3756.i) nounwind
  %2359 = call double @_Z3expd(double %extract3757.i) nounwind
  %2360 = call double @_Z3expd(double %extract3758.i) nounwind
  %2361 = call double @_Z3expd(double %extract3759.i) nounwind
  %2362 = call double @_Z3expd(double %extract3760.i) nounwind
  %2363 = call double @_Z3expd(double %extract3761.i) nounwind
  %2364 = call double @_Z3expd(double %extract3762.i) nounwind
  %2365 = call double @_Z3expd(double %extract3763.i) nounwind
  %2366 = call double @_Z3expd(double %extract3764.i) nounwind
  %2367 = call double @_Z3expd(double %extract3765.i) nounwind
  %2368 = call double @_Z3expd(double %extract3766.i) nounwind
  %2369 = call double @_Z3expd(double %extract3767.i) nounwind
  %2370 = call double @_Z3expd(double %extract3768.i) nounwind
  %temp.vect3769.i = insertelement <16 x double> undef, double %2355, i32 0
  %temp.vect3770.i = insertelement <16 x double> %temp.vect3769.i, double %2356, i32 1
  %temp.vect3771.i = insertelement <16 x double> %temp.vect3770.i, double %2357, i32 2
  %temp.vect3772.i = insertelement <16 x double> %temp.vect3771.i, double %2358, i32 3
  %temp.vect3773.i = insertelement <16 x double> %temp.vect3772.i, double %2359, i32 4
  %temp.vect3774.i = insertelement <16 x double> %temp.vect3773.i, double %2360, i32 5
  %temp.vect3775.i = insertelement <16 x double> %temp.vect3774.i, double %2361, i32 6
  %temp.vect3776.i = insertelement <16 x double> %temp.vect3775.i, double %2362, i32 7
  %temp.vect3777.i = insertelement <16 x double> %temp.vect3776.i, double %2363, i32 8
  %temp.vect3778.i = insertelement <16 x double> %temp.vect3777.i, double %2364, i32 9
  %temp.vect3779.i = insertelement <16 x double> %temp.vect3778.i, double %2365, i32 10
  %temp.vect3780.i = insertelement <16 x double> %temp.vect3779.i, double %2366, i32 11
  %temp.vect3781.i = insertelement <16 x double> %temp.vect3780.i, double %2367, i32 12
  %temp.vect3782.i = insertelement <16 x double> %temp.vect3781.i, double %2368, i32 13
  %temp.vect3783.i = insertelement <16 x double> %temp.vect3782.i, double %2369, i32 14
  %temp.vect3784.i = insertelement <16 x double> %temp.vect3783.i, double %2370, i32 15
  %2371 = fmul <16 x double> %temp.vect3784.i, <double 1.981600e+00, double 1.981600e+00, double 1.981600e+00, double 1.981600e+00, double 1.981600e+00, double 1.981600e+00, double 1.981600e+00, double 1.981600e+00, double 1.981600e+00, double 1.981600e+00, double 1.981600e+00, double 1.981600e+00, double 1.981600e+00, double 1.981600e+00, double 1.981600e+00, double 1.981600e+00>
  %2372 = fadd <16 x double> %2353, %2371
  %2373 = fmul <16 x double> %355, <double 7.950000e-02, double 7.950000e-02, double 7.950000e-02, double 7.950000e-02, double 7.950000e-02, double 7.950000e-02, double 7.950000e-02, double 7.950000e-02, double 7.950000e-02, double 7.950000e-02, double 7.950000e-02, double 7.950000e-02, double 7.950000e-02, double 7.950000e-02, double 7.950000e-02, double 7.950000e-02>
  %extract3785.i = extractelement <16 x double> %2373, i32 0
  %extract3786.i = extractelement <16 x double> %2373, i32 1
  %extract3787.i = extractelement <16 x double> %2373, i32 2
  %extract3788.i = extractelement <16 x double> %2373, i32 3
  %extract3789.i = extractelement <16 x double> %2373, i32 4
  %extract3790.i = extractelement <16 x double> %2373, i32 5
  %extract3791.i = extractelement <16 x double> %2373, i32 6
  %extract3792.i = extractelement <16 x double> %2373, i32 7
  %extract3793.i = extractelement <16 x double> %2373, i32 8
  %extract3794.i = extractelement <16 x double> %2373, i32 9
  %extract3795.i = extractelement <16 x double> %2373, i32 10
  %extract3796.i = extractelement <16 x double> %2373, i32 11
  %extract3797.i = extractelement <16 x double> %2373, i32 12
  %extract3798.i = extractelement <16 x double> %2373, i32 13
  %extract3799.i = extractelement <16 x double> %2373, i32 14
  %extract3800.i = extractelement <16 x double> %2373, i32 15
  %2374 = call double @_Z3expd(double %extract3785.i) nounwind
  %2375 = call double @_Z3expd(double %extract3786.i) nounwind
  %2376 = call double @_Z3expd(double %extract3787.i) nounwind
  %2377 = call double @_Z3expd(double %extract3788.i) nounwind
  %2378 = call double @_Z3expd(double %extract3789.i) nounwind
  %2379 = call double @_Z3expd(double %extract3790.i) nounwind
  %2380 = call double @_Z3expd(double %extract3791.i) nounwind
  %2381 = call double @_Z3expd(double %extract3792.i) nounwind
  %2382 = call double @_Z3expd(double %extract3793.i) nounwind
  %2383 = call double @_Z3expd(double %extract3794.i) nounwind
  %2384 = call double @_Z3expd(double %extract3795.i) nounwind
  %2385 = call double @_Z3expd(double %extract3796.i) nounwind
  %2386 = call double @_Z3expd(double %extract3797.i) nounwind
  %2387 = call double @_Z3expd(double %extract3798.i) nounwind
  %2388 = call double @_Z3expd(double %extract3799.i) nounwind
  %2389 = call double @_Z3expd(double %extract3800.i) nounwind
  %temp.vect3801.i = insertelement <16 x double> undef, double %2374, i32 0
  %temp.vect3802.i = insertelement <16 x double> %temp.vect3801.i, double %2375, i32 1
  %temp.vect3803.i = insertelement <16 x double> %temp.vect3802.i, double %2376, i32 2
  %temp.vect3804.i = insertelement <16 x double> %temp.vect3803.i, double %2377, i32 3
  %temp.vect3805.i = insertelement <16 x double> %temp.vect3804.i, double %2378, i32 4
  %temp.vect3806.i = insertelement <16 x double> %temp.vect3805.i, double %2379, i32 5
  %temp.vect3807.i = insertelement <16 x double> %temp.vect3806.i, double %2380, i32 6
  %temp.vect3808.i = insertelement <16 x double> %temp.vect3807.i, double %2381, i32 7
  %temp.vect3809.i = insertelement <16 x double> %temp.vect3808.i, double %2382, i32 8
  %temp.vect3810.i = insertelement <16 x double> %temp.vect3809.i, double %2383, i32 9
  %temp.vect3811.i = insertelement <16 x double> %temp.vect3810.i, double %2384, i32 10
  %temp.vect3812.i = insertelement <16 x double> %temp.vect3811.i, double %2385, i32 11
  %temp.vect3813.i = insertelement <16 x double> %temp.vect3812.i, double %2386, i32 12
  %temp.vect3814.i = insertelement <16 x double> %temp.vect3813.i, double %2387, i32 13
  %temp.vect3815.i = insertelement <16 x double> %temp.vect3814.i, double %2388, i32 14
  %temp.vect3816.i = insertelement <16 x double> %temp.vect3815.i, double %2389, i32 15
  %2390 = fadd <16 x double> %2372, %temp.vect3816.i
  %extract3817.i = extractelement <16 x double> %2390, i32 0
  %extract3818.i = extractelement <16 x double> %2390, i32 1
  %extract3819.i = extractelement <16 x double> %2390, i32 2
  %extract3820.i = extractelement <16 x double> %2390, i32 3
  %extract3821.i = extractelement <16 x double> %2390, i32 4
  %extract3822.i = extractelement <16 x double> %2390, i32 5
  %extract3823.i = extractelement <16 x double> %2390, i32 6
  %extract3824.i = extractelement <16 x double> %2390, i32 7
  %extract3825.i = extractelement <16 x double> %2390, i32 8
  %extract3826.i = extractelement <16 x double> %2390, i32 9
  %extract3827.i = extractelement <16 x double> %2390, i32 10
  %extract3828.i = extractelement <16 x double> %2390, i32 11
  %extract3829.i = extractelement <16 x double> %2390, i32 12
  %extract3830.i = extractelement <16 x double> %2390, i32 13
  %extract3831.i = extractelement <16 x double> %2390, i32 14
  %extract3832.i = extractelement <16 x double> %2390, i32 15
  %2391 = call double @_Z4fmaxdd(double %extract3817.i, double 1.000000e-200) nounwind
  %2392 = call double @_Z4fmaxdd(double %extract3818.i, double 1.000000e-200) nounwind
  %2393 = call double @_Z4fmaxdd(double %extract3819.i, double 1.000000e-200) nounwind
  %2394 = call double @_Z4fmaxdd(double %extract3820.i, double 1.000000e-200) nounwind
  %2395 = call double @_Z4fmaxdd(double %extract3821.i, double 1.000000e-200) nounwind
  %2396 = call double @_Z4fmaxdd(double %extract3822.i, double 1.000000e-200) nounwind
  %2397 = call double @_Z4fmaxdd(double %extract3823.i, double 1.000000e-200) nounwind
  %2398 = call double @_Z4fmaxdd(double %extract3824.i, double 1.000000e-200) nounwind
  %2399 = call double @_Z4fmaxdd(double %extract3825.i, double 1.000000e-200) nounwind
  %2400 = call double @_Z4fmaxdd(double %extract3826.i, double 1.000000e-200) nounwind
  %2401 = call double @_Z4fmaxdd(double %extract3827.i, double 1.000000e-200) nounwind
  %2402 = call double @_Z4fmaxdd(double %extract3828.i, double 1.000000e-200) nounwind
  %2403 = call double @_Z4fmaxdd(double %extract3829.i, double 1.000000e-200) nounwind
  %2404 = call double @_Z4fmaxdd(double %extract3830.i, double 1.000000e-200) nounwind
  %2405 = call double @_Z4fmaxdd(double %extract3831.i, double 1.000000e-200) nounwind
  %2406 = call double @_Z4fmaxdd(double %extract3832.i, double 1.000000e-200) nounwind
  %2407 = call double @_Z5log10d(double %2391) nounwind
  %2408 = call double @_Z5log10d(double %2392) nounwind
  %2409 = call double @_Z5log10d(double %2393) nounwind
  %2410 = call double @_Z5log10d(double %2394) nounwind
  %2411 = call double @_Z5log10d(double %2395) nounwind
  %2412 = call double @_Z5log10d(double %2396) nounwind
  %2413 = call double @_Z5log10d(double %2397) nounwind
  %2414 = call double @_Z5log10d(double %2398) nounwind
  %2415 = call double @_Z5log10d(double %2399) nounwind
  %2416 = call double @_Z5log10d(double %2400) nounwind
  %2417 = call double @_Z5log10d(double %2401) nounwind
  %2418 = call double @_Z5log10d(double %2402) nounwind
  %2419 = call double @_Z5log10d(double %2403) nounwind
  %2420 = call double @_Z5log10d(double %2404) nounwind
  %2421 = call double @_Z5log10d(double %2405) nounwind
  %2422 = call double @_Z5log10d(double %2406) nounwind
  %temp.vect3833.i = insertelement <16 x double> undef, double %2407, i32 0
  %temp.vect3834.i = insertelement <16 x double> %temp.vect3833.i, double %2408, i32 1
  %temp.vect3835.i = insertelement <16 x double> %temp.vect3834.i, double %2409, i32 2
  %temp.vect3836.i = insertelement <16 x double> %temp.vect3835.i, double %2410, i32 3
  %temp.vect3837.i = insertelement <16 x double> %temp.vect3836.i, double %2411, i32 4
  %temp.vect3838.i = insertelement <16 x double> %temp.vect3837.i, double %2412, i32 5
  %temp.vect3839.i = insertelement <16 x double> %temp.vect3838.i, double %2413, i32 6
  %temp.vect3840.i = insertelement <16 x double> %temp.vect3839.i, double %2414, i32 7
  %temp.vect3841.i = insertelement <16 x double> %temp.vect3840.i, double %2415, i32 8
  %temp.vect3842.i = insertelement <16 x double> %temp.vect3841.i, double %2416, i32 9
  %temp.vect3843.i = insertelement <16 x double> %temp.vect3842.i, double %2417, i32 10
  %temp.vect3844.i = insertelement <16 x double> %temp.vect3843.i, double %2418, i32 11
  %temp.vect3845.i = insertelement <16 x double> %temp.vect3844.i, double %2419, i32 12
  %temp.vect3846.i = insertelement <16 x double> %temp.vect3845.i, double %2420, i32 13
  %temp.vect3847.i = insertelement <16 x double> %temp.vect3846.i, double %2421, i32 14
  %temp.vect3848.i = insertelement <16 x double> %temp.vect3847.i, double %2422, i32 15
  %2423 = fmul <16 x double> %temp.vect3848.i, <double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00, double 1.270000e+00>
  %2424 = fsub <16 x double> <double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01, double 7.500000e-01>, %2423
  %2425 = fmul <16 x double> %temp.vect3848.i, <double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01, double 6.700000e-01>
  %2426 = fadd <16 x double> %2425, <double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01, double 4.000000e-01>
  %2427 = fsub <16 x double> %temp.vect3864.i, %2426
  %2428 = fmul <16 x double> %2427, <double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01, double 1.400000e-01>
  %2429 = fsub <16 x double> %2424, %2428
  %2430 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2429
  %2431 = fmul <16 x double> %2427, %2430
  %2432 = fmul <16 x double> %2431, %2431
  %2433 = fadd <16 x double> %2432, <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>
  %2434 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %2433
  %2435 = fmul <16 x double> %temp.vect3848.i, %2434
  %extract3865.i = extractelement <16 x double> %2435, i32 0
  %extract3866.i = extractelement <16 x double> %2435, i32 1
  %extract3867.i = extractelement <16 x double> %2435, i32 2
  %extract3868.i = extractelement <16 x double> %2435, i32 3
  %extract3869.i = extractelement <16 x double> %2435, i32 4
  %extract3870.i = extractelement <16 x double> %2435, i32 5
  %extract3871.i = extractelement <16 x double> %2435, i32 6
  %extract3872.i = extractelement <16 x double> %2435, i32 7
  %extract3873.i = extractelement <16 x double> %2435, i32 8
  %extract3874.i = extractelement <16 x double> %2435, i32 9
  %extract3875.i = extractelement <16 x double> %2435, i32 10
  %extract3876.i = extractelement <16 x double> %2435, i32 11
  %extract3877.i = extractelement <16 x double> %2435, i32 12
  %extract3878.i = extractelement <16 x double> %2435, i32 13
  %extract3879.i = extractelement <16 x double> %2435, i32 14
  %extract3880.i = extractelement <16 x double> %2435, i32 15
  %2436 = call double @_Z5exp10d(double %extract3865.i) nounwind
  %2437 = call double @_Z5exp10d(double %extract3866.i) nounwind
  %2438 = call double @_Z5exp10d(double %extract3867.i) nounwind
  %2439 = call double @_Z5exp10d(double %extract3868.i) nounwind
  %2440 = call double @_Z5exp10d(double %extract3869.i) nounwind
  %2441 = call double @_Z5exp10d(double %extract3870.i) nounwind
  %2442 = call double @_Z5exp10d(double %extract3871.i) nounwind
  %2443 = call double @_Z5exp10d(double %extract3872.i) nounwind
  %2444 = call double @_Z5exp10d(double %extract3873.i) nounwind
  %2445 = call double @_Z5exp10d(double %extract3874.i) nounwind
  %2446 = call double @_Z5exp10d(double %extract3875.i) nounwind
  %2447 = call double @_Z5exp10d(double %extract3876.i) nounwind
  %2448 = call double @_Z5exp10d(double %extract3877.i) nounwind
  %2449 = call double @_Z5exp10d(double %extract3878.i) nounwind
  %2450 = call double @_Z5exp10d(double %extract3879.i) nounwind
  %2451 = call double @_Z5exp10d(double %extract3880.i) nounwind
  %temp.vect3881.i = insertelement <16 x double> undef, double %2436, i32 0
  %temp.vect3882.i = insertelement <16 x double> %temp.vect3881.i, double %2437, i32 1
  %temp.vect3883.i = insertelement <16 x double> %temp.vect3882.i, double %2438, i32 2
  %temp.vect3884.i = insertelement <16 x double> %temp.vect3883.i, double %2439, i32 3
  %temp.vect3885.i = insertelement <16 x double> %temp.vect3884.i, double %2440, i32 4
  %temp.vect3886.i = insertelement <16 x double> %temp.vect3885.i, double %2441, i32 5
  %temp.vect3887.i = insertelement <16 x double> %temp.vect3886.i, double %2442, i32 6
  %temp.vect3888.i = insertelement <16 x double> %temp.vect3887.i, double %2443, i32 7
  %temp.vect3889.i = insertelement <16 x double> %temp.vect3888.i, double %2444, i32 8
  %temp.vect3890.i = insertelement <16 x double> %temp.vect3889.i, double %2445, i32 9
  %temp.vect3891.i = insertelement <16 x double> %temp.vect3890.i, double %2446, i32 10
  %temp.vect3892.i = insertelement <16 x double> %temp.vect3891.i, double %2447, i32 11
  %temp.vect3893.i = insertelement <16 x double> %temp.vect3892.i, double %2448, i32 12
  %temp.vect3894.i = insertelement <16 x double> %temp.vect3893.i, double %2449, i32 13
  %temp.vect3895.i = insertelement <16 x double> %temp.vect3894.i, double %2450, i32 14
  %temp.vect3896.i = insertelement <16 x double> %temp.vect3895.i, double %2451, i32 15
  %2452 = fmul <16 x double> %temp.vect3896.i, %2303
  %2453 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2454 = load i64* %2453, align 8
  %2455 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2456 = load i64* %2455, align 8
  %2457 = add i64 %2454, %2456
  %extract3899.i = add i64 %2457, 12607488
  %2458 = getelementptr inbounds double addrspace(1)* %7, i64 %extract3899.i
  %ptrTypeCast3915.i = bitcast double addrspace(1)* %2458 to <16 x double> addrspace(1)*
  %2459 = load <16 x double> addrspace(1)* %ptrTypeCast3915.i, align 8
  %2460 = fmul <16 x double> %2459, %2452
  %2461 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2462 = load i64* %2461, align 8
  %2463 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2464 = load i64* %2463, align 8
  %2465 = add i64 %2462, %2464
  %extract3918.i = add i64 %2465, 12607488
  %2466 = getelementptr inbounds double addrspace(1)* %7, i64 %extract3918.i
  %ptrTypeCast3934.i = bitcast double addrspace(1)* %2466 to <16 x double> addrspace(1)*
  store <16 x double> %2460, <16 x double> addrspace(1)* %ptrTypeCast3934.i, align 8
  %2467 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2468 = load i64* %2467, align 8
  %2469 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2470 = load i64* %2469, align 8
  %2471 = add i64 %2468, %2470
  %extract3937.i = add i64 %2471, 12607488
  %2472 = getelementptr inbounds double addrspace(1)* %10, i64 %extract3937.i
  %ptrTypeCast3953.i = bitcast double addrspace(1)* %2472 to <16 x double> addrspace(1)*
  %2473 = load <16 x double> addrspace(1)* %ptrTypeCast3953.i, align 8
  %2474 = fmul <16 x double> %2473, %2452
  %2475 = getelementptr %struct.PaddedDimId* %22, i64 %CurrWI..0.i, i32 0, i64 0
  %2476 = load i64* %2475, align 8
  %2477 = getelementptr %struct.PaddedDimId* %19, i64 0, i32 0, i64 0
  %2478 = load i64* %2477, align 8
  %2479 = add i64 %2476, %2478
  %extract3956.i = add i64 %2479, 12607488
  %2480 = getelementptr inbounds double addrspace(1)* %10, i64 %extract3956.i
  %ptrTypeCast3972.i = bitcast double addrspace(1)* %2480 to <16 x double> addrspace(1)*
  store <16 x double> %2474, <16 x double> addrspace(1)* %ptrTypeCast3972.i, align 8
  %check.WI.iter.i = icmp ult i64 %CurrWI..0.i, %25
  br i1 %check.WI.iter.i, label %thenBB.i, label %____Vectorized_.ratx_kernel_separated_args.exit

thenBB.i:                                         ; preds = %._crit_edge.i
  %"CurrWI++.i" = add nuw i64 %CurrWI..0.i, 1
  br label %SyncBB.i

____Vectorized_.ratx_kernel_separated_args.exit:  ; preds = %._crit_edge.i
  ret void
}

!opencl.kernels = !{!0}

!0 = metadata !{void (double addrspace(1)*, double addrspace(1)*, double addrspace(1)*, double addrspace(1)*, double addrspace(1)*, double, i8 addrspace(3)*, %struct.WorkDim*, i64*, %struct.PaddedDimId*, %struct.PaddedDimId*, i64*, i64, i8*, i64*)* @__ratx_kernel_separated_args, metadata !1, metadata !1, metadata !"", metadata !"double const __attribute__((address_space(1))) *, double const __attribute__((address_space(1))) *, double __attribute__((address_space(1))) *, double __attribute__((address_space(1))) *, double const __attribute__((address_space(1))) *, double const", metadata !"opencl_ratx_kernel_locals_anchor", void (i8*)* @ratx_kernel}
!1 = metadata !{i32 0, i32 0, i32 0}
