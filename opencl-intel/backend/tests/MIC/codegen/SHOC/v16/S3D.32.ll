; XFAIL: win32
;
; RUN: llc < %s -mtriple=x86_64-pc-linux \
; RUN:       -march=y86-64 -mcpu=knf
;
; RUNc: llc < %s -mtriple=x86_64-pc-linux \
; RUNc:       -march=y86-64 -mcpu=knc
;
; ModuleID = 'Program'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64"
target triple = "x86_64-unknown-linux-gnu"

%struct.PaddedDimId = type <{ [4 x i64] }>
%struct.WorkDim = type { i32, [3 x i64], [3 x i64], [3 x i64], [3 x i64] }

declare void @__ratt_kernel_original(double addrspace(1)* nocapture, double addrspace(1)*, double) nounwind

declare i64 @get_global_id(i32)

declare double @_Z3logd(double)

declare double @_Z3expd(double)

declare void @____Vectorized_.ratt_kernel_original(double addrspace(1)* nocapture, double addrspace(1)*, double) nounwind

define i1 @allOne(i1 %pred) {
entry:
  ret i1 %pred
}

define i1 @allZero(i1 %t) {
entry:
  ret i1 %t
}

declare void @dummybarrier.()

declare void @barrier(i64)

declare i8* @get_special_buffer.()

declare i64 @get_iter_count.()

declare i64 @get_new_global_id.(i32, i64)

define void @__ratt_kernel_separated_args(double addrspace(1)* nocapture %T, double addrspace(1)* %RF, double %TCONV, i8 addrspace(3)* %pLocalMem, %struct.WorkDim* %pWorkDim, i64* %pWGId, %struct.PaddedDimId* %pBaseGlbId, %struct.PaddedDimId* %pLocalIds, i64* %contextpointer, i64 %iterCount, i8* %pSpecialBuf, i64* %pCurrWI) nounwind alwaysinline {
; <label>:0
  br label %SyncBB1

SyncBB1:                                          ; preds = %0, %thenBB
  %CurrWI..0 = phi i64 [ %"CurrWI++", %thenBB ], [ 0, %0 ]
  %1 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2 = load i64* %1, align 8
  %3 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %4 = load i64* %3, align 8
  %5 = add i64 %2, %4
  %6 = getelementptr inbounds double addrspace(1)* %T, i64 %5
  %7 = load double addrspace(1)* %6, align 8
  %8 = fmul double %7, %TCONV
  %9 = tail call double @_Z3logd(double %8) nounwind
  %10 = fdiv double 1.000000e+00, %8
  %11 = fmul double %10, %10
  %12 = fmul double %10, 0x40BC54DCA0E410B6
  %13 = fsub double 0x40400661DE416957, %12
  %14 = tail call double @_Z3expd(double %13) nounwind
  %15 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %16 = load i64* %15, align 8
  %17 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %18 = load i64* %17, align 8
  %19 = add i64 %16, %18
  %20 = getelementptr inbounds double addrspace(1)* %RF, i64 %19
  store double %14, double addrspace(1)* %20, align 8
  %21 = fmul double %9, 2.670000e+00
  %22 = fadd double %21, 0x4025A3B9FB38F0E2
  %23 = fmul double %10, 0x40A8BA7736CDF267
  %24 = fsub double %22, %23
  %25 = tail call double @_Z3expd(double %24) nounwind
  %26 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %27 = load i64* %26, align 8
  %28 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %29 = load i64* %28, align 8
  %30 = add i64 %27, %29
  %31 = add i64 %30, 110592
  %32 = getelementptr inbounds double addrspace(1)* %RF, i64 %31
  store double %25, double addrspace(1)* %32, align 8
  %33 = fmul double %9, 1.510000e+00
  %34 = fadd double %33, 0x403330D78C436FC1
  %35 = fmul double %10, 0x409AF821F75104D5
  %36 = fsub double %34, %35
  %37 = tail call double @_Z3expd(double %36) nounwind
  %38 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %39 = load i64* %38, align 8
  %40 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %41 = load i64* %40, align 8
  %42 = add i64 %39, %41
  %43 = add i64 %42, 221184
  %44 = getelementptr inbounds double addrspace(1)* %RF, i64 %43
  store double %37, double addrspace(1)* %44, align 8
  %45 = fmul double %9, 2.400000e+00
  %46 = fadd double %45, 0x4024F73F748A1598
  %47 = fmul double %10, 0x409097260FE47992
  %48 = fadd double %46, %47
  %49 = tail call double @_Z3expd(double %48) nounwind
  %50 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %51 = load i64* %50, align 8
  %52 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %53 = load i64* %52, align 8
  %54 = add i64 %51, %53
  %55 = add i64 %54, 331776
  %56 = getelementptr inbounds double addrspace(1)* %RF, i64 %55
  store double %49, double addrspace(1)* %56, align 8
  %57 = fmul double %10, 1.000000e+18
  %58 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %59 = load i64* %58, align 8
  %60 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %61 = load i64* %60, align 8
  %62 = add i64 %59, %61
  %63 = add i64 %62, 442368
  %64 = getelementptr inbounds double addrspace(1)* %RF, i64 %63
  store double %57, double addrspace(1)* %64, align 8
  %65 = fmul double %9, 6.000000e-01
  %66 = fsub double 0x404384F063AACA44, %65
  %67 = tail call double @_Z3expd(double %66) nounwind
  %68 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %69 = load i64* %68, align 8
  %70 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %71 = load i64* %70, align 8
  %72 = add i64 %69, %71
  %73 = add i64 %72, 552960
  %74 = getelementptr inbounds double addrspace(1)* %RF, i64 %73
  store double %67, double addrspace(1)* %74, align 8
  %75 = fmul double %9, 1.250000e+00
  %76 = fsub double 0x4046C53B6E6B17A6, %75
  %77 = tail call double @_Z3expd(double %76) nounwind
  %78 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %79 = load i64* %78, align 8
  %80 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %81 = load i64* %80, align 8
  %82 = add i64 %79, %81
  %83 = add i64 %82, 663552
  %84 = getelementptr inbounds double addrspace(1)* %RF, i64 %83
  store double %77, double addrspace(1)* %84, align 8
  %85 = fmul double %11, 5.500000e+20
  %86 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %87 = load i64* %86, align 8
  %88 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %89 = load i64* %88, align 8
  %90 = add i64 %87, %89
  %91 = add i64 %90, 774144
  %92 = getelementptr inbounds double addrspace(1)* %RF, i64 %91
  store double %85, double addrspace(1)* %92, align 8
  %93 = fmul double %11, 2.200000e+22
  %94 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %95 = load i64* %94, align 8
  %96 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %97 = load i64* %96, align 8
  %98 = add i64 %95, %97
  %99 = add i64 %98, 884736
  %100 = getelementptr inbounds double addrspace(1)* %RF, i64 %99
  store double %93, double addrspace(1)* %100, align 8
  %101 = fmul double %10, 5.000000e+17
  %102 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %103 = load i64* %102, align 8
  %104 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %105 = load i64* %104, align 8
  %106 = add i64 %103, %105
  %107 = add i64 %106, 995328
  %108 = getelementptr inbounds double addrspace(1)* %RF, i64 %107
  store double %101, double addrspace(1)* %108, align 8
  %109 = fmul double %10, 1.200000e+17
  %110 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %111 = load i64* %110, align 8
  %112 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %113 = load i64* %112, align 8
  %114 = add i64 %111, %113
  %115 = add i64 %114, 1105920
  %116 = getelementptr inbounds double addrspace(1)* %RF, i64 %115
  store double %109, double addrspace(1)* %116, align 8
  %117 = fmul double %9, 8.600000e-01
  %118 = fsub double 0x40453CF284ED3A2B, %117
  %119 = tail call double @_Z3expd(double %118) nounwind
  %120 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %121 = load i64* %120, align 8
  %122 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %123 = load i64* %122, align 8
  %124 = add i64 %121, %123
  %125 = add i64 %124, 1216512
  %126 = getelementptr inbounds double addrspace(1)* %RF, i64 %125
  store double %119, double addrspace(1)* %126, align 8
  %127 = fmul double %9, 1.720000e+00
  %128 = fsub double 0x4047933D7E0FD058, %127
  %129 = tail call double @_Z3expd(double %128) nounwind
  %130 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %131 = load i64* %130, align 8
  %132 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %133 = load i64* %132, align 8
  %134 = add i64 %131, %133
  %135 = add i64 %134, 1327104
  %136 = getelementptr inbounds double addrspace(1)* %RF, i64 %135
  store double %129, double addrspace(1)* %136, align 8
  %137 = fmul double %9, 7.600000e-01
  %138 = fsub double 0x4046202427FD750B, %137
  %139 = tail call double @_Z3expd(double %138) nounwind
  %140 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %141 = load i64* %140, align 8
  %142 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %143 = load i64* %142, align 8
  %144 = add i64 %141, %143
  %145 = add i64 %144, 1437696
  %146 = getelementptr inbounds double addrspace(1)* %RF, i64 %145
  store double %139, double addrspace(1)* %146, align 8
  %147 = fmul double %9, 1.240000e+00
  %148 = fsub double 0x40465A3141C16B70, %147
  %149 = tail call double @_Z3expd(double %148) nounwind
  %150 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %151 = load i64* %150, align 8
  %152 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %153 = load i64* %152, align 8
  %154 = add i64 %151, %153
  %155 = add i64 %154, 1548288
  %156 = getelementptr inbounds double addrspace(1)* %RF, i64 %155
  store double %149, double addrspace(1)* %156, align 8
  %157 = fmul double %9, 3.700000e-01
  %158 = fsub double 0x403FEF61CF27F0E0, %157
  %159 = tail call double @_Z3expd(double %158) nounwind
  %160 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %161 = load i64* %160, align 8
  %162 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %163 = load i64* %162, align 8
  %164 = add i64 %161, %163
  %165 = add i64 %164, 1658880
  %166 = getelementptr inbounds double addrspace(1)* %RF, i64 %165
  store double %159, double addrspace(1)* %166, align 8
  %167 = fmul double %10, 0x40751A88BDA9435B
  %168 = fsub double 0x403D028169F7EB5F, %167
  %169 = tail call double @_Z3expd(double %168) nounwind
  %170 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %171 = load i64* %170, align 8
  %172 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %173 = load i64* %172, align 8
  %174 = add i64 %171, %173
  %175 = add i64 %174, 1769472
  %176 = getelementptr inbounds double addrspace(1)* %RF, i64 %175
  store double %169, double addrspace(1)* %176, align 8
  %177 = fmul double %10, 0x4079CA33E24FEBD1
  %178 = fsub double 0x403E70BF9D39614B, %177
  %179 = tail call double @_Z3expd(double %178) nounwind
  %180 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %181 = load i64* %180, align 8
  %182 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %183 = load i64* %182, align 8
  %184 = add i64 %181, %183
  %185 = add i64 %184, 1880064
  %186 = getelementptr inbounds double addrspace(1)* %RF, i64 %185
  store double %179, double addrspace(1)* %186, align 8
  %187 = fmul double %10, 1.509650e+02
  %188 = fsub double 0x403FE410B7DE283F, %187
  %189 = tail call double @_Z3expd(double %188) nounwind
  %190 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %191 = load i64* %190, align 8
  %192 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %193 = load i64* %192, align 8
  %194 = add i64 %191, %193
  %195 = add i64 %194, 1990656
  %196 = getelementptr inbounds double addrspace(1)* %RF, i64 %195
  store double %189, double addrspace(1)* %196, align 8
  %197 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %198 = load i64* %197, align 8
  %199 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %200 = load i64* %199, align 8
  %201 = add i64 %198, %200
  %202 = add i64 %201, 2101248
  %203 = getelementptr inbounds double addrspace(1)* %RF, i64 %202
  store double 2.000000e+13, double addrspace(1)* %203, align 8
  %204 = fmul double %10, 0x406F737778DD6170
  %205 = fadd double %204, 0x403F77E3DBDD0B08
  %206 = tail call double @_Z3expd(double %205) nounwind
  %207 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %208 = load i64* %207, align 8
  %209 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %210 = load i64* %209, align 8
  %211 = add i64 %208, %210
  %212 = add i64 %211, 2211840
  %213 = getelementptr inbounds double addrspace(1)* %RF, i64 %212
  store double %206, double addrspace(1)* %213, align 8
  %214 = fmul double %10, 0x4089A1F202107B78
  %215 = fadd double %214, 0x4039973EB03EF78D
  %216 = tail call double @_Z3expd(double %215) nounwind
  %217 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %218 = load i64* %217, align 8
  %219 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %220 = load i64* %219, align 8
  %221 = add i64 %218, %220
  %222 = add i64 %221, 2322432
  %223 = getelementptr inbounds double addrspace(1)* %RF, i64 %222
  store double %216, double addrspace(1)* %223, align 8
  %224 = fmul double %10, 0x40B796999A415F46
  %225 = fsub double 0x4040D5EC5D8BCC51, %224
  %226 = tail call double @_Z3expd(double %225) nounwind
  %227 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %228 = load i64* %227, align 8
  %229 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %230 = load i64* %229, align 8
  %231 = add i64 %228, %230
  %232 = add i64 %231, 2433024
  %233 = getelementptr inbounds double addrspace(1)* %RF, i64 %232
  store double %226, double addrspace(1)* %233, align 8
  %234 = fmul double %9, 2.000000e+00
  %235 = fadd double %234, 0x40304F080303C07F
  %236 = fmul double %10, 0x40A471740E1719F8
  %237 = fsub double %235, %236
  %238 = tail call double @_Z3expd(double %237) nounwind
  %239 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %240 = load i64* %239, align 8
  %241 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %242 = load i64* %241, align 8
  %243 = add i64 %240, %242
  %244 = add i64 %243, 2543616
  %245 = getelementptr inbounds double addrspace(1)* %RF, i64 %244
  store double %238, double addrspace(1)* %245, align 8
  %246 = fmul double %10, 1.811580e+03
  %247 = fsub double 0x403DEF00D0E057C4, %246
  %248 = tail call double @_Z3expd(double %247) nounwind
  %249 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %250 = load i64* %249, align 8
  %251 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %252 = load i64* %251, align 8
  %253 = add i64 %250, %252
  %254 = add i64 %253, 2654208
  %255 = getelementptr inbounds double addrspace(1)* %RF, i64 %254
  store double %248, double addrspace(1)* %255, align 8
  %256 = fadd double %234, 0x40301494B025CD19
  %257 = fmul double %10, 0x409F7377785729B3
  %258 = fsub double %256, %257
  %259 = tail call double @_Z3expd(double %258) nounwind
  %260 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %261 = load i64* %260, align 8
  %262 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %263 = load i64* %262, align 8
  %264 = add i64 %261, %263
  %265 = add i64 %264, 2764800
  %266 = getelementptr inbounds double addrspace(1)* %RF, i64 %265
  store double %259, double addrspace(1)* %266, align 8
  %267 = fmul double %10, 0x406420F04DDB5526
  %268 = fsub double 0x403C30CD9472E92C, %267
  %269 = tail call double @_Z3expd(double %268) nounwind
  %270 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %271 = load i64* %270, align 8
  %272 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %273 = load i64* %272, align 8
  %274 = add i64 %271, %273
  %275 = add i64 %274, 2875392
  %276 = getelementptr inbounds double addrspace(1)* %RF, i64 %275
  store double %269, double addrspace(1)* %276, align 8
  %277 = fmul double %10, 0x40B2CAC057D1782D
  %278 = fsub double 0x4040FF3D01124EB7, %277
  %279 = tail call double @_Z3expd(double %278) nounwind
  %280 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %281 = load i64* %280, align 8
  %282 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %283 = load i64* %282, align 8
  %284 = add i64 %281, %283
  %285 = add i64 %284, 2985984
  %286 = getelementptr inbounds double addrspace(1)* %RF, i64 %285
  store double %279, double addrspace(1)* %286, align 8
  %287 = fmul double %10, 1.509650e+03
  %288 = fsub double 0x40410400EFEA0847, %287
  %289 = tail call double @_Z3expd(double %288) nounwind
  %290 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %291 = load i64* %290, align 8
  %292 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %293 = load i64* %292, align 8
  %294 = add i64 %291, %293
  %295 = add i64 %294, 3096576
  %296 = getelementptr inbounds double addrspace(1)* %RF, i64 %295
  store double %289, double addrspace(1)* %296, align 8
  %297 = fmul double %9, 1.228000e+00
  %298 = fadd double %297, 0x4031ADA7E810F5F2
  %299 = fmul double %10, 0x40419CD2432E52FA
  %300 = fsub double %298, %299
  %301 = tail call double @_Z3expd(double %300) nounwind
  %302 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %303 = load i64* %302, align 8
  %304 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %305 = load i64* %304, align 8
  %306 = add i64 %303, %305
  %307 = add i64 %306, 3207168
  %308 = getelementptr inbounds double addrspace(1)* %RF, i64 %307
  store double %301, double addrspace(1)* %308, align 8
  %309 = fmul double %9, 1.500000e+00
  %310 = fadd double %309, 0x403193A34FFBC0D6
  %311 = fmul double %10, 0x40E38F017E90FF97
  %312 = fsub double %310, %311
  %313 = tail call double @_Z3expd(double %312) nounwind
  %314 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %315 = load i64* %314, align 8
  %316 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %317 = load i64* %316, align 8
  %318 = add i64 %315, %317
  %319 = add i64 %318, 3317760
  %320 = getelementptr inbounds double addrspace(1)* %RF, i64 %319
  store double %313, double addrspace(1)* %320, align 8
  %321 = fmul double %10, 0x40D77D706DC5D639
  %322 = fsub double 0x403C8C1CA049B703, %321
  %323 = tail call double @_Z3expd(double %322) nounwind
  %324 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %325 = load i64* %324, align 8
  %326 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %327 = load i64* %326, align 8
  %328 = add i64 %325, %327
  %329 = add i64 %328, 3428352
  %330 = getelementptr inbounds double addrspace(1)* %RF, i64 %329
  store double %323, double addrspace(1)* %330, align 8
  %331 = fmul double %10, 0x40C731F4EA4A8C15
  %332 = fsub double 0x40405221CC02A272, %331
  %333 = tail call double @_Z3expd(double %332) nounwind
  %334 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %335 = load i64* %334, align 8
  %336 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %337 = load i64* %336, align 8
  %338 = add i64 %335, %337
  %339 = add i64 %338, 3538944
  %340 = getelementptr inbounds double addrspace(1)* %RF, i64 %339
  store double %333, double addrspace(1)* %340, align 8
  %341 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %342 = load i64* %341, align 8
  %343 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %344 = load i64* %343, align 8
  %345 = add i64 %342, %344
  %346 = add i64 %345, 3649536
  %347 = getelementptr inbounds double addrspace(1)* %RF, i64 %346
  store double 5.700000e+13, double addrspace(1)* %347, align 8
  %348 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %349 = load i64* %348, align 8
  %350 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %351 = load i64* %350, align 8
  %352 = add i64 %349, %351
  %353 = add i64 %352, 3760128
  %354 = getelementptr inbounds double addrspace(1)* %RF, i64 %353
  store double 3.000000e+13, double addrspace(1)* %354, align 8
  %355 = fmul double %9, 1.790000e+00
  %356 = fadd double %355, 0x403285B7B50D9366
  %357 = fmul double %10, 0x408A42F984A0E411
  %358 = fsub double %356, %357
  %359 = tail call double @_Z3expd(double %358) nounwind
  %360 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %361 = load i64* %360, align 8
  %362 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %363 = load i64* %362, align 8
  %364 = add i64 %361, %363
  %365 = add i64 %364, 3870720
  %366 = getelementptr inbounds double addrspace(1)* %RF, i64 %365
  store double %359, double addrspace(1)* %366, align 8
  %367 = fmul double %10, 0x4077BEDB7AE5796C
  %368 = fadd double %367, 0x403D5F8CA9C70E47
  %369 = tail call double @_Z3expd(double %368) nounwind
  %370 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %371 = load i64* %370, align 8
  %372 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %373 = load i64* %372, align 8
  %374 = add i64 %371, %373
  %375 = add i64 %374, 3981312
  %376 = getelementptr inbounds double addrspace(1)* %RF, i64 %375
  store double %369, double addrspace(1)* %376, align 8
  %377 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %378 = load i64* %377, align 8
  %379 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %380 = load i64* %379, align 8
  %381 = add i64 %378, %380
  %382 = add i64 %381, 4091904
  %383 = getelementptr inbounds double addrspace(1)* %RF, i64 %382
  store double 3.300000e+13, double addrspace(1)* %383, align 8
  %384 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %385 = load i64* %384, align 8
  %386 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %387 = load i64* %386, align 8
  %388 = add i64 %385, %387
  %389 = add i64 %388, 4202496
  %390 = getelementptr inbounds double addrspace(1)* %RF, i64 %389
  store double 5.000000e+13, double addrspace(1)* %390, align 8
  %391 = fmul double %10, 0x4075B383137B0707
  %392 = fsub double 0x403CDAD3F1843C3A, %391
  %393 = tail call double @_Z3expd(double %392) nounwind
  %394 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %395 = load i64* %394, align 8
  %396 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %397 = load i64* %396, align 8
  %398 = add i64 %395, %397
  %399 = add i64 %398, 4313088
  %400 = getelementptr inbounds double addrspace(1)* %RF, i64 %399
  store double %393, double addrspace(1)* %400, align 8
  %401 = fmul double %9, 4.800000e-01
  %402 = fadd double %401, 0x403BB79A572EBAFE
  %403 = fmul double %10, 0x40605AC33F85510D
  %404 = fadd double %402, %403
  %405 = tail call double @_Z3expd(double %404) nounwind
  %406 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %407 = load i64* %406, align 8
  %408 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %409 = load i64* %408, align 8
  %410 = add i64 %407, %409
  %411 = add i64 %410, 4423680
  %412 = getelementptr inbounds double addrspace(1)* %RF, i64 %411
  store double %405, double addrspace(1)* %412, align 8
  %413 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %414 = load i64* %413, align 8
  %415 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %416 = load i64* %415, align 8
  %417 = add i64 %414, %416
  %418 = add i64 %417, 4534272
  %419 = getelementptr inbounds double addrspace(1)* %RF, i64 %418
  store double 7.340000e+13, double addrspace(1)* %419, align 8
  %420 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %421 = load i64* %420, align 8
  %422 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %423 = load i64* %422, align 8
  %424 = add i64 %421, %423
  %425 = add i64 %424, 4644864
  %426 = getelementptr inbounds double addrspace(1)* %RF, i64 %425
  store double 3.000000e+13, double addrspace(1)* %426, align 8
  %427 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %428 = load i64* %427, align 8
  %429 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %430 = load i64* %429, align 8
  %431 = add i64 %428, %430
  %432 = add i64 %431, 4755456
  %433 = getelementptr inbounds double addrspace(1)* %RF, i64 %432
  store double 3.000000e+13, double addrspace(1)* %433, align 8
  %434 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %435 = load i64* %434, align 8
  %436 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %437 = load i64* %436, align 8
  %438 = add i64 %435, %437
  %439 = add i64 %438, 4866048
  %440 = getelementptr inbounds double addrspace(1)* %RF, i64 %439
  store double 5.000000e+13, double addrspace(1)* %440, align 8
  %441 = fsub double 0x4043E28B9778572A, %9
  %442 = fmul double %10, 0x40C0B557780346DC
  %443 = fsub double %441, %442
  %444 = tail call double @_Z3expd(double %443) nounwind
  %445 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %446 = load i64* %445, align 8
  %447 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %448 = load i64* %447, align 8
  %449 = add i64 %446, %448
  %450 = add i64 %449, 4976640
  %451 = getelementptr inbounds double addrspace(1)* %RF, i64 %450
  store double %444, double addrspace(1)* %451, align 8
  %452 = fmul double %10, 0x4069292C6045BAF5
  %453 = fsub double 0x403DA8BF53678621, %452
  %454 = tail call double @_Z3expd(double %453) nounwind
  %455 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %456 = load i64* %455, align 8
  %457 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %458 = load i64* %457, align 8
  %459 = add i64 %456, %458
  %460 = add i64 %459, 5087232
  %461 = getelementptr inbounds double addrspace(1)* %RF, i64 %460
  store double %454, double addrspace(1)* %461, align 8
  %462 = fmul double %9, 8.000000e-01
  %463 = fsub double 0x4042E0FABF4E5F09, %462
  %464 = tail call double @_Z3expd(double %463) nounwind
  %465 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %466 = load i64* %465, align 8
  %467 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %468 = load i64* %467, align 8
  %469 = add i64 %466, %468
  %470 = add i64 %469, 5197824
  %471 = getelementptr inbounds double addrspace(1)* %RF, i64 %470
  store double %464, double addrspace(1)* %471, align 8
  %472 = fadd double %234, 0x402A3EA66A627469
  %473 = fmul double %10, 0x40AC6C8355475A32
  %474 = fsub double %472, %473
  %475 = tail call double @_Z3expd(double %474) nounwind
  %476 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %477 = load i64* %476, align 8
  %478 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %479 = load i64* %478, align 8
  %480 = add i64 %477, %479
  %481 = add i64 %480, 5308416
  %482 = getelementptr inbounds double addrspace(1)* %RF, i64 %481
  store double %475, double addrspace(1)* %482, align 8
  %483 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %484 = load i64* %483, align 8
  %485 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %486 = load i64* %485, align 8
  %487 = add i64 %484, %486
  %488 = add i64 %487, 5419008
  %489 = getelementptr inbounds double addrspace(1)* %RF, i64 %488
  store double 8.000000e+13, double addrspace(1)* %489, align 8
  %490 = fmul double %10, 0xC08796999A1FD157
  %491 = tail call double @_Z3expd(double %490) nounwind
  %492 = fmul double %491, 1.056000e+13
  %493 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %494 = load i64* %493, align 8
  %495 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %496 = load i64* %495, align 8
  %497 = add i64 %494, %496
  %498 = add i64 %497, 5529600
  %499 = getelementptr inbounds double addrspace(1)* %RF, i64 %498
  store double %492, double addrspace(1)* %499, align 8
  %500 = fmul double %491, 2.640000e+12
  %501 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %502 = load i64* %501, align 8
  %503 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %504 = load i64* %503, align 8
  %505 = add i64 %502, %504
  %506 = add i64 %505, 5640192
  %507 = getelementptr inbounds double addrspace(1)* %RF, i64 %506
  store double %500, double addrspace(1)* %507, align 8
  %508 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %509 = load i64* %508, align 8
  %510 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %511 = load i64* %510, align 8
  %512 = add i64 %509, %511
  %513 = add i64 %512, 5750784
  %514 = getelementptr inbounds double addrspace(1)* %RF, i64 %513
  store double 2.000000e+13, double addrspace(1)* %514, align 8
  %515 = fadd double %234, 0x40303D852C244B39
  %516 = fsub double %515, %287
  %517 = tail call double @_Z3expd(double %516) nounwind
  %518 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %519 = load i64* %518, align 8
  %520 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %521 = load i64* %520, align 8
  %522 = add i64 %519, %521
  %523 = add i64 %522, 5861376
  %524 = getelementptr inbounds double addrspace(1)* %RF, i64 %523
  store double %517, double addrspace(1)* %524, align 8
  %525 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %526 = load i64* %525, align 8
  %527 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %528 = load i64* %527, align 8
  %529 = add i64 %526, %528
  %530 = add i64 %529, 5971968
  %531 = getelementptr inbounds double addrspace(1)* %RF, i64 %530
  store double 2.000000e+13, double addrspace(1)* %531, align 8
  %532 = fmul double %9, 5.000000e-01
  %533 = fadd double %532, 0x403B6B98C990016A
  %534 = fmul double %10, 0x40A1BB03ABC94706
  %535 = fsub double %533, %534
  %536 = tail call double @_Z3expd(double %535) nounwind
  %537 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %538 = load i64* %537, align 8
  %539 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %540 = load i64* %539, align 8
  %541 = add i64 %538, %540
  %542 = add i64 %541, 6082560
  %543 = getelementptr inbounds double addrspace(1)* %RF, i64 %542
  store double %536, double addrspace(1)* %543, align 8
  %544 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %545 = load i64* %544, align 8
  %546 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %547 = load i64* %546, align 8
  %548 = add i64 %545, %547
  %549 = add i64 %548, 6193152
  %550 = getelementptr inbounds double addrspace(1)* %RF, i64 %549
  store double 4.000000e+13, double addrspace(1)* %550, align 8
  %551 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %552 = load i64* %551, align 8
  %553 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %554 = load i64* %553, align 8
  %555 = add i64 %552, %554
  %556 = add i64 %555, 6303744
  %557 = getelementptr inbounds double addrspace(1)* %RF, i64 %556
  store double 3.200000e+13, double addrspace(1)* %557, align 8
  %558 = fmul double %10, 0x4072DEE148BA83F5
  %559 = fsub double 0x403E56CD60708320, %558
  %560 = tail call double @_Z3expd(double %559) nounwind
  %561 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %562 = load i64* %561, align 8
  %563 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %564 = load i64* %563, align 8
  %565 = add i64 %562, %564
  %566 = add i64 %565, 6414336
  %567 = getelementptr inbounds double addrspace(1)* %RF, i64 %566
  store double %560, double addrspace(1)* %567, align 8
  %568 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %569 = load i64* %568, align 8
  %570 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %571 = load i64* %570, align 8
  %572 = add i64 %569, %571
  %573 = add i64 %572, 6524928
  %574 = getelementptr inbounds double addrspace(1)* %RF, i64 %573
  store double 3.000000e+13, double addrspace(1)* %574, align 8
  %575 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %576 = load i64* %575, align 8
  %577 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %578 = load i64* %577, align 8
  %579 = add i64 %576, %578
  %580 = add i64 %579, 6635520
  %581 = getelementptr inbounds double addrspace(1)* %RF, i64 %580
  store double 1.500000e+13, double addrspace(1)* %581, align 8
  %582 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %583 = load i64* %582, align 8
  %584 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %585 = load i64* %584, align 8
  %586 = add i64 %583, %585
  %587 = add i64 %586, 6746112
  %588 = getelementptr inbounds double addrspace(1)* %RF, i64 %587
  store double 1.500000e+13, double addrspace(1)* %588, align 8
  %589 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %590 = load i64* %589, align 8
  %591 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %592 = load i64* %591, align 8
  %593 = add i64 %590, %592
  %594 = add i64 %593, 6856704
  %595 = getelementptr inbounds double addrspace(1)* %RF, i64 %594
  store double 3.000000e+13, double addrspace(1)* %595, align 8
  %596 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %597 = load i64* %596, align 8
  %598 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %599 = load i64* %598, align 8
  %600 = add i64 %597, %599
  %601 = add i64 %600, 6967296
  %602 = getelementptr inbounds double addrspace(1)* %RF, i64 %601
  store double 7.000000e+13, double addrspace(1)* %602, align 8
  %603 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %604 = load i64* %603, align 8
  %605 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %606 = load i64* %605, align 8
  %607 = add i64 %604, %606
  %608 = add i64 %607, 7077888
  %609 = getelementptr inbounds double addrspace(1)* %RF, i64 %608
  store double 2.800000e+13, double addrspace(1)* %609, align 8
  %610 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %611 = load i64* %610, align 8
  %612 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %613 = load i64* %612, align 8
  %614 = add i64 %611, %613
  %615 = add i64 %614, 7188480
  %616 = getelementptr inbounds double addrspace(1)* %RF, i64 %615
  store double 1.200000e+13, double addrspace(1)* %616, align 8
  %617 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %618 = load i64* %617, align 8
  %619 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %620 = load i64* %619, align 8
  %621 = add i64 %618, %620
  %622 = add i64 %621, 7299072
  %623 = getelementptr inbounds double addrspace(1)* %RF, i64 %622
  store double 3.000000e+13, double addrspace(1)* %623, align 8
  %624 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %625 = load i64* %624, align 8
  %626 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %627 = load i64* %626, align 8
  %628 = add i64 %625, %627
  %629 = add i64 %628, 7409664
  %630 = getelementptr inbounds double addrspace(1)* %RF, i64 %629
  store double 9.000000e+12, double addrspace(1)* %630, align 8
  %631 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %632 = load i64* %631, align 8
  %633 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %634 = load i64* %633, align 8
  %635 = add i64 %632, %634
  %636 = add i64 %635, 7520256
  %637 = getelementptr inbounds double addrspace(1)* %RF, i64 %636
  store double 7.000000e+12, double addrspace(1)* %637, align 8
  %638 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %639 = load i64* %638, align 8
  %640 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %641 = load i64* %640, align 8
  %642 = add i64 %639, %641
  %643 = add i64 %642, 7630848
  %644 = getelementptr inbounds double addrspace(1)* %RF, i64 %643
  store double 1.400000e+13, double addrspace(1)* %644, align 8
  %645 = fmul double %9, 4.540000e-01
  %646 = fadd double %645, 0x403B03CC39FFD60F
  %647 = fmul double %10, 0x409471740F66A551
  %648 = fsub double %646, %647
  %649 = tail call double @_Z3expd(double %648) nounwind
  %650 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %651 = load i64* %650, align 8
  %652 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %653 = load i64* %652, align 8
  %654 = add i64 %651, %653
  %655 = add i64 %654, 7741440
  %656 = getelementptr inbounds double addrspace(1)* %RF, i64 %655
  store double %649, double addrspace(1)* %656, align 8
  %657 = fmul double %9, 1.050000e+00
  %658 = fadd double %657, 0x4037DBD7B3B09C15
  %659 = fmul double %10, 0x4099C0236B8F9B13
  %660 = fsub double %658, %659
  %661 = tail call double @_Z3expd(double %660) nounwind
  %662 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %663 = load i64* %662, align 8
  %664 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %665 = load i64* %664, align 8
  %666 = add i64 %663, %665
  %667 = add i64 %666, 7852032
  %668 = getelementptr inbounds double addrspace(1)* %RF, i64 %667
  store double %661, double addrspace(1)* %668, align 8
  %669 = fmul double %10, 1.781387e+03
  %670 = fsub double 0x403F4B69C743F6D0, %669
  %671 = tail call double @_Z3expd(double %670) nounwind
  %672 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %673 = load i64* %672, align 8
  %674 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %675 = load i64* %674, align 8
  %676 = add i64 %673, %675
  %677 = add i64 %676, 7962624
  %678 = getelementptr inbounds double addrspace(1)* %RF, i64 %677
  store double %671, double addrspace(1)* %678, align 8
  %679 = fmul double %9, 1.180000e+00
  %680 = fadd double %679, 0x4035F4B104F029C9
  %681 = fmul double %10, 0x406C1E02DE00D1B7
  %682 = fadd double %680, %681
  %683 = tail call double @_Z3expd(double %682) nounwind
  %684 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %685 = load i64* %684, align 8
  %686 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %687 = load i64* %686, align 8
  %688 = add i64 %685, %687
  %689 = add i64 %688, 8073216
  %690 = getelementptr inbounds double addrspace(1)* %RF, i64 %689
  store double %683, double addrspace(1)* %690, align 8
  %691 = fmul double %10, 0x40D3A82AAB367A10
  %692 = fsub double 0x40401E3B843A8CC4, %691
  %693 = tail call double @_Z3expd(double %692) nounwind
  %694 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %695 = load i64* %694, align 8
  %696 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %697 = load i64* %696, align 8
  %698 = add i64 %695, %697
  %699 = add i64 %698, 8183808
  %700 = getelementptr inbounds double addrspace(1)* %RF, i64 %699
  store double %693, double addrspace(1)* %700, align 8
  %701 = fmul double %10, 0xC0AF7377785729B3
  %702 = tail call double @_Z3expd(double %701) nounwind
  %703 = fmul double %702, 1.000000e+12
  %704 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %705 = load i64* %704, align 8
  %706 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %707 = load i64* %706, align 8
  %708 = add i64 %705, %707
  %709 = add i64 %708, 8294400
  %710 = getelementptr inbounds double addrspace(1)* %RF, i64 %709
  store double %703, double addrspace(1)* %710, align 8
  %711 = fmul double %702, 5.000000e+13
  %712 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %713 = load i64* %712, align 8
  %714 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %715 = load i64* %714, align 8
  %716 = add i64 %713, %715
  %717 = add i64 %716, 13934592
  %718 = getelementptr inbounds double addrspace(1)* %RF, i64 %717
  store double %711, double addrspace(1)* %718, align 8
  %719 = fmul double %702, 1.000000e+13
  %720 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %721 = load i64* %720, align 8
  %722 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %723 = load i64* %722, align 8
  %724 = add i64 %721, %723
  %725 = add i64 %724, 14155776
  %726 = getelementptr inbounds double addrspace(1)* %RF, i64 %725
  store double %719, double addrspace(1)* %726, align 8
  %727 = fmul double %10, 0x407032815E39713B
  %728 = fadd double %727, 0x4040172079F30B25
  %729 = tail call double @_Z3expd(double %728) nounwind
  %730 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %731 = load i64* %730, align 8
  %732 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %733 = load i64* %732, align 8
  %734 = add i64 %731, %733
  %735 = add i64 %734, 8404992
  %736 = getelementptr inbounds double addrspace(1)* %RF, i64 %735
  store double %729, double addrspace(1)* %736, align 8
  %737 = fmul double %9, 6.300000e-01
  %738 = fsub double 0x40428A49D6E3A704, %737
  %739 = fmul double %10, 0x4068176C69B5A640
  %740 = fsub double %738, %739
  %741 = tail call double @_Z3expd(double %740) nounwind
  %742 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %743 = load i64* %742, align 8
  %744 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %745 = load i64* %744, align 8
  %746 = add i64 %743, %745
  %747 = add i64 %746, 8515584
  %748 = getelementptr inbounds double addrspace(1)* %RF, i64 %747
  store double %741, double addrspace(1)* %748, align 8
  %749 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %750 = load i64* %749, align 8
  %751 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %752 = load i64* %751, align 8
  %753 = add i64 %750, %752
  %754 = add i64 %753, 8626176
  %755 = getelementptr inbounds double addrspace(1)* %RF, i64 %754
  store double 8.430000e+13, double addrspace(1)* %755, align 8
  %756 = fmul double %9, 1.600000e+00
  %757 = fadd double %756, 0x4031D742BEC1714F
  %758 = fmul double %10, 0x40A54EDE61CFFEB0
  %759 = fsub double %757, %758
  %760 = tail call double @_Z3expd(double %759) nounwind
  %761 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %762 = load i64* %761, align 8
  %763 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %764 = load i64* %763, align 8
  %765 = add i64 %762, %764
  %766 = add i64 %765, 8736768
  %767 = getelementptr inbounds double addrspace(1)* %RF, i64 %766
  store double %760, double addrspace(1)* %767, align 8
  %768 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %769 = load i64* %768, align 8
  %770 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %771 = load i64* %770, align 8
  %772 = add i64 %769, %771
  %773 = add i64 %772, 8847360
  %774 = getelementptr inbounds double addrspace(1)* %RF, i64 %773
  store double 2.501000e+13, double addrspace(1)* %774, align 8
  %775 = fmul double %10, 1.449264e+04
  %776 = fsub double 0x403F0F3C020ECDF9, %775
  %777 = tail call double @_Z3expd(double %776) nounwind
  %778 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %779 = load i64* %778, align 8
  %780 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %781 = load i64* %780, align 8
  %782 = add i64 %779, %781
  %783 = add i64 %782, 8957952
  %784 = getelementptr inbounds double addrspace(1)* %RF, i64 %783
  store double %777, double addrspace(1)* %784, align 8
  %785 = fmul double %10, 0x40B192C1CB6848BF
  %786 = fsub double 0x40384E8972DAE8EF, %785
  %787 = tail call double @_Z3expd(double %786) nounwind
  %788 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %789 = load i64* %788, align 8
  %790 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %791 = load i64* %790, align 8
  %792 = add i64 %789, %791
  %793 = add i64 %792, 9068544
  %794 = getelementptr inbounds double addrspace(1)* %RF, i64 %793
  store double %787, double addrspace(1)* %794, align 8
  %795 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %796 = load i64* %795, align 8
  %797 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %798 = load i64* %797, align 8
  %799 = add i64 %796, %798
  %800 = add i64 %799, 9179136
  %801 = getelementptr inbounds double addrspace(1)* %RF, i64 %800
  store double 1.000000e+12, double addrspace(1)* %801, align 8
  %802 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %803 = load i64* %802, align 8
  %804 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %805 = load i64* %804, align 8
  %806 = add i64 %803, %805
  %807 = add i64 %806, 9289728
  %808 = getelementptr inbounds double addrspace(1)* %RF, i64 %807
  store double 1.340000e+13, double addrspace(1)* %808, align 8
  %809 = fmul double %9, 2.470000e+00
  %810 = fadd double %809, 0x4024367DC882BB31
  %811 = fmul double %10, 0x40A45D531E3A7DAA
  %812 = fsub double %810, %811
  %813 = tail call double @_Z3expd(double %812) nounwind
  %814 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %815 = load i64* %814, align 8
  %816 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %817 = load i64* %816, align 8
  %818 = add i64 %815, %817
  %819 = add i64 %818, 9400320
  %820 = getelementptr inbounds double addrspace(1)* %RF, i64 %819
  store double %813, double addrspace(1)* %820, align 8
  %821 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %822 = load i64* %821, align 8
  %823 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %824 = load i64* %823, align 8
  %825 = add i64 %822, %824
  %826 = add i64 %825, 9510912
  %827 = getelementptr inbounds double addrspace(1)* %RF, i64 %826
  store double 3.000000e+13, double addrspace(1)* %827, align 8
  %828 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %829 = load i64* %828, align 8
  %830 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %831 = load i64* %830, align 8
  %832 = add i64 %829, %831
  %833 = add i64 %832, 9621504
  %834 = getelementptr inbounds double addrspace(1)* %RF, i64 %833
  store double 8.480000e+12, double addrspace(1)* %834, align 8
  %835 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %836 = load i64* %835, align 8
  %837 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %838 = load i64* %837, align 8
  %839 = add i64 %836, %838
  %840 = add i64 %839, 9732096
  %841 = getelementptr inbounds double addrspace(1)* %RF, i64 %840
  store double 1.800000e+13, double addrspace(1)* %841, align 8
  %842 = fmul double %9, 2.810000e+00
  %843 = fadd double %842, 0x40203727156DA575
  %844 = fmul double %10, 0x40A709B307F23CC9
  %845 = fsub double %843, %844
  %846 = tail call double @_Z3expd(double %845) nounwind
  %847 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %848 = load i64* %847, align 8
  %849 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %850 = load i64* %849, align 8
  %851 = add i64 %848, %850
  %852 = add i64 %851, 9842688
  %853 = getelementptr inbounds double addrspace(1)* %RF, i64 %852
  store double %846, double addrspace(1)* %853, align 8
  %854 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %855 = load i64* %854, align 8
  %856 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %857 = load i64* %856, align 8
  %858 = add i64 %855, %857
  %859 = add i64 %858, 9953280
  %860 = getelementptr inbounds double addrspace(1)* %RF, i64 %859
  store double 4.000000e+13, double addrspace(1)* %860, align 8
  %861 = fmul double %10, 0x4071ED56052502EF
  %862 = tail call double @_Z3expd(double %861) nounwind
  %863 = fmul double %862, 1.200000e+13
  %864 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %865 = load i64* %864, align 8
  %866 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %867 = load i64* %866, align 8
  %868 = add i64 %865, %867
  %869 = add i64 %868, 10063872
  %870 = getelementptr inbounds double addrspace(1)* %RF, i64 %869
  store double %863, double addrspace(1)* %870, align 8
  %871 = fmul double %862, 1.600000e+13
  %872 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %873 = load i64* %872, align 8
  %874 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %875 = load i64* %874, align 8
  %876 = add i64 %873, %875
  %877 = add i64 %876, 11722752
  %878 = getelementptr inbounds double addrspace(1)* %RF, i64 %877
  store double %871, double addrspace(1)* %878, align 8
  %879 = fmul double %9, 9.700000e-01
  %880 = fsub double 0x4042CBE022EAE693, %879
  %881 = fmul double %10, 0x40737FE8CAC4B4D0
  %882 = fsub double %880, %881
  %883 = tail call double @_Z3expd(double %882) nounwind
  %884 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %885 = load i64* %884, align 8
  %886 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %887 = load i64* %886, align 8
  %888 = add i64 %885, %887
  %889 = add i64 %888, 10174464
  %890 = getelementptr inbounds double addrspace(1)* %RF, i64 %889
  store double %883, double addrspace(1)* %890, align 8
  %891 = fmul double %9, 1.000000e-01
  %892 = fadd double %891, 0x403D3D0B84988095
  %893 = fmul double %10, 0x40B4D618C0053E2D
  %894 = fsub double %892, %893
  %895 = tail call double @_Z3expd(double %894) nounwind
  %896 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %897 = load i64* %896, align 8
  %898 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %899 = load i64* %898, align 8
  %900 = add i64 %897, %899
  %901 = add i64 %900, 10285056
  %902 = getelementptr inbounds double addrspace(1)* %RF, i64 %901
  store double %895, double addrspace(1)* %902, align 8
  %903 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %904 = load i64* %903, align 8
  %905 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %906 = load i64* %905, align 8
  %907 = add i64 %904, %906
  %908 = add i64 %907, 10395648
  %909 = getelementptr inbounds double addrspace(1)* %RF, i64 %908
  store double 5.000000e+13, double addrspace(1)* %909, align 8
  %910 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %911 = load i64* %910, align 8
  %912 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %913 = load i64* %912, align 8
  %914 = add i64 %911, %913
  %915 = add i64 %914, 10506240
  %916 = getelementptr inbounds double addrspace(1)* %RF, i64 %915
  store double 2.000000e+13, double addrspace(1)* %916, align 8
  %917 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %918 = load i64* %917, align 8
  %919 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %920 = load i64* %919, align 8
  %921 = add i64 %918, %920
  %922 = add i64 %921, 10616832
  %923 = getelementptr inbounds double addrspace(1)* %RF, i64 %922
  store double 3.200000e+13, double addrspace(1)* %923, align 8
  %924 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %925 = load i64* %924, align 8
  %926 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %927 = load i64* %926, align 8
  %928 = add i64 %925, %927
  %929 = add i64 %928, 10727424
  %930 = getelementptr inbounds double addrspace(1)* %RF, i64 %929
  store double 1.600000e+13, double addrspace(1)* %930, align 8
  %931 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %932 = load i64* %931, align 8
  %933 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %934 = load i64* %933, align 8
  %935 = add i64 %932, %934
  %936 = add i64 %935, 10838016
  %937 = getelementptr inbounds double addrspace(1)* %RF, i64 %936
  store double 1.000000e+13, double addrspace(1)* %937, align 8
  %938 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %939 = load i64* %938, align 8
  %940 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %941 = load i64* %940, align 8
  %942 = add i64 %939, %941
  %943 = add i64 %942, 10948608
  %944 = getelementptr inbounds double addrspace(1)* %RF, i64 %943
  store double 5.000000e+12, double addrspace(1)* %944, align 8
  %945 = fmul double %9, 7.600000e+00
  %946 = fadd double %945, 0xC03C7ACA8D576BF8
  %947 = fmul double %10, 0x409BC16B5B2D4D40
  %948 = fadd double %946, %947
  %949 = tail call double @_Z3expd(double %948) nounwind
  %950 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %951 = load i64* %950, align 8
  %952 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %953 = load i64* %952, align 8
  %954 = add i64 %951, %953
  %955 = add i64 %954, 11059200
  %956 = getelementptr inbounds double addrspace(1)* %RF, i64 %955
  store double %949, double addrspace(1)* %956, align 8
  %957 = fmul double %9, 1.620000e+00
  %958 = fadd double %957, 0x40344EC8BAEF54B7
  %959 = fmul double %10, 0x40B54EDE61CFFEB0
  %960 = fsub double %958, %959
  %961 = tail call double @_Z3expd(double %960) nounwind
  %962 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %963 = load i64* %962, align 8
  %964 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %965 = load i64* %964, align 8
  %966 = add i64 %963, %965
  %967 = add i64 %966, 11169792
  %968 = getelementptr inbounds double addrspace(1)* %RF, i64 %967
  store double %961, double addrspace(1)* %968, align 8
  %969 = fadd double %309, 0x4034BE39BCBA3012
  %970 = fmul double %10, 0x40B0E7A9D0A67621
  %971 = fsub double %969, %970
  %972 = tail call double @_Z3expd(double %971) nounwind
  %973 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %974 = load i64* %973, align 8
  %975 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %976 = load i64* %975, align 8
  %977 = add i64 %974, %976
  %978 = add i64 %977, 11280384
  %979 = getelementptr inbounds double addrspace(1)* %RF, i64 %978
  store double %972, double addrspace(1)* %979, align 8
  %980 = fadd double %756, 0x40326BB1BAF88EF2
  %981 = fmul double %10, 1.570036e+03
  %982 = fsub double %980, %981
  %983 = tail call double @_Z3expd(double %982) nounwind
  %984 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %985 = load i64* %984, align 8
  %986 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %987 = load i64* %986, align 8
  %988 = add i64 %985, %987
  %989 = add i64 %988, 11390976
  %990 = getelementptr inbounds double addrspace(1)* %RF, i64 %989
  store double %983, double addrspace(1)* %990, align 8
  %991 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %992 = load i64* %991, align 8
  %993 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %994 = load i64* %993, align 8
  %995 = add i64 %992, %994
  %996 = add i64 %995, 11501568
  %997 = getelementptr inbounds double addrspace(1)* %RF, i64 %996
  store double 6.000000e+13, double addrspace(1)* %997, align 8
  %998 = fadd double %234, 0x402D6E6C8C1A5516
  %999 = fmul double %10, 0x40B0419A122FAD6D
  %1000 = fsub double %998, %999
  %1001 = tail call double @_Z3expd(double %1000) nounwind
  %1002 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1003 = load i64* %1002, align 8
  %1004 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1005 = load i64* %1004, align 8
  %1006 = add i64 %1003, %1005
  %1007 = add i64 %1006, 11612160
  %1008 = getelementptr inbounds double addrspace(1)* %RF, i64 %1007
  store double %1001, double addrspace(1)* %1008, align 8
  %1009 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1010 = load i64* %1009, align 8
  %1011 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1012 = load i64* %1011, align 8
  %1013 = add i64 %1010, %1012
  %1014 = add i64 %1013, 11833344
  %1015 = getelementptr inbounds double addrspace(1)* %RF, i64 %1014
  store double 1.000000e+14, double addrspace(1)* %1015, align 8
  %1016 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1017 = load i64* %1016, align 8
  %1018 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1019 = load i64* %1018, align 8
  %1020 = add i64 %1017, %1019
  %1021 = add i64 %1020, 11943936
  %1022 = getelementptr inbounds double addrspace(1)* %RF, i64 %1021
  store double 1.000000e+14, double addrspace(1)* %1022, align 8
  %1023 = fmul double %10, 0x407ADBF3D9EC7000
  %1024 = fsub double 0x403C19DCC1369695, %1023
  %1025 = tail call double @_Z3expd(double %1024) nounwind
  %1026 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1027 = load i64* %1026, align 8
  %1028 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1029 = load i64* %1028, align 8
  %1030 = add i64 %1027, %1029
  %1031 = add i64 %1030, 12054528
  %1032 = getelementptr inbounds double addrspace(1)* %RF, i64 %1031
  store double %1025, double addrspace(1)* %1032, align 8
  %1033 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1034 = load i64* %1033, align 8
  %1035 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1036 = load i64* %1035, align 8
  %1037 = add i64 %1034, %1036
  %1038 = add i64 %1037, 12165120
  %1039 = getelementptr inbounds double addrspace(1)* %RF, i64 %1038
  store double 5.000000e+13, double addrspace(1)* %1039, align 8
  %1040 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1041 = load i64* %1040, align 8
  %1042 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1043 = load i64* %1042, align 8
  %1044 = add i64 %1041, %1043
  %1045 = add i64 %1044, 12275712
  %1046 = getelementptr inbounds double addrspace(1)* %RF, i64 %1045
  store double 3.000000e+13, double addrspace(1)* %1046, align 8
  %1047 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1048 = load i64* %1047, align 8
  %1049 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1050 = load i64* %1049, align 8
  %1051 = add i64 %1048, %1050
  %1052 = add i64 %1051, 12386304
  %1053 = getelementptr inbounds double addrspace(1)* %RF, i64 %1052
  store double 1.000000e+13, double addrspace(1)* %1053, align 8
  %1054 = fmul double %9, 5.200000e-01
  %1055 = fsub double 0x40412866A7D4C5C0, %1054
  %1056 = fmul double %10, 0x40D8F08FBCD35A86
  %1057 = fsub double %1055, %1056
  %1058 = tail call double @_Z3expd(double %1057) nounwind
  %1059 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1060 = load i64* %1059, align 8
  %1061 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1062 = load i64* %1061, align 8
  %1063 = add i64 %1060, %1062
  %1064 = add i64 %1063, 12496896
  %1065 = getelementptr inbounds double addrspace(1)* %RF, i64 %1064
  store double %1058, double addrspace(1)* %1065, align 8
  %1066 = fadd double %957, 0x4033C5770E545699
  %1067 = fmul double %10, 0x40D234D20902DE01
  %1068 = fsub double %1066, %1067
  %1069 = tail call double @_Z3expd(double %1068) nounwind
  %1070 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1071 = load i64* %1070, align 8
  %1072 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1073 = load i64* %1072, align 8
  %1074 = add i64 %1071, %1073
  %1075 = add i64 %1074, 12607488
  %1076 = getelementptr inbounds double addrspace(1)* %RF, i64 %1075
  store double %1069, double addrspace(1)* %1076, align 8
  %1077 = fmul double %10, 0x408DE0E4B2B777D1
  %1078 = fsub double %234, %1077
  %1079 = tail call double @_Z3expd(double %1078) nounwind
  %1080 = fmul double %1079, 1.632000e+07
  %1081 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1082 = load i64* %1081, align 8
  %1083 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1084 = load i64* %1083, align 8
  %1085 = add i64 %1082, %1084
  %1086 = add i64 %1085, 12718080
  %1087 = getelementptr inbounds double addrspace(1)* %RF, i64 %1086
  store double %1080, double addrspace(1)* %1087, align 8
  %1088 = fmul double %1079, 4.080000e+06
  %1089 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1090 = load i64* %1089, align 8
  %1091 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1092 = load i64* %1091, align 8
  %1093 = add i64 %1090, %1092
  %1094 = add i64 %1093, 12828672
  %1095 = getelementptr inbounds double addrspace(1)* %RF, i64 %1094
  store double %1088, double addrspace(1)* %1095, align 8
  %1096 = fmul double %9, 4.500000e+00
  %1097 = fadd double %1096, 0xC020DCAE10492360
  %1098 = fmul double %10, 0x407F737778DD6170
  %1099 = fadd double %1097, %1098
  %1100 = tail call double @_Z3expd(double %1099) nounwind
  %1101 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1102 = load i64* %1101, align 8
  %1103 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1104 = load i64* %1103, align 8
  %1105 = add i64 %1102, %1104
  %1106 = add i64 %1105, 12939264
  %1107 = getelementptr inbounds double addrspace(1)* %RF, i64 %1106
  store double %1100, double addrspace(1)* %1107, align 8
  %1108 = fmul double %9, 4.000000e+00
  %1109 = fadd double %1108, 0xC01E8ABEE9B53AE0
  %1110 = fmul double %10, 0x408F73777AF64064
  %1111 = fadd double %1109, %1110
  %1112 = tail call double @_Z3expd(double %1111) nounwind
  %1113 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1114 = load i64* %1113, align 8
  %1115 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1116 = load i64* %1115, align 8
  %1117 = add i64 %1114, %1116
  %1118 = add i64 %1117, 13049856
  %1119 = getelementptr inbounds double addrspace(1)* %RF, i64 %1118
  store double %1112, double addrspace(1)* %1119, align 8
  %1120 = fadd double %234, 0x40301E3B85114C59
  %1121 = fmul double %10, 0x40A796999AE924F2
  %1122 = fsub double %1120, %1121
  %1123 = tail call double @_Z3expd(double %1122) nounwind
  %1124 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1125 = load i64* %1124, align 8
  %1126 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1127 = load i64* %1126, align 8
  %1128 = add i64 %1125, %1127
  %1129 = add i64 %1128, 13160448
  %1130 = getelementptr inbounds double addrspace(1)* %RF, i64 %1129
  store double %1123, double addrspace(1)* %1130, align 8
  %1131 = fmul double %9, 1.182000e+01
  %1132 = fsub double 0x405FDB8F8E7DDCA5, %1131
  %1133 = fmul double %10, 0x40D18EFB9DB22D0E
  %1134 = fsub double %1132, %1133
  %1135 = tail call double @_Z3expd(double %1134) nounwind
  %1136 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1137 = load i64* %1136, align 8
  %1138 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1139 = load i64* %1138, align 8
  %1140 = add i64 %1137, %1139
  %1141 = add i64 %1140, 13271040
  %1142 = getelementptr inbounds double addrspace(1)* %RF, i64 %1141
  store double %1135, double addrspace(1)* %1142, align 8
  %1143 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1144 = load i64* %1143, align 8
  %1145 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1146 = load i64* %1145, align 8
  %1147 = add i64 %1144, %1146
  %1148 = add i64 %1147, 13381632
  %1149 = getelementptr inbounds double addrspace(1)* %RF, i64 %1148
  store double 1.000000e+14, double addrspace(1)* %1149, align 8
  %1150 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1151 = load i64* %1150, align 8
  %1152 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1153 = load i64* %1152, align 8
  %1154 = add i64 %1151, %1153
  %1155 = add i64 %1154, 13492224
  %1156 = getelementptr inbounds double addrspace(1)* %RF, i64 %1155
  store double 1.000000e+14, double addrspace(1)* %1156, align 8
  %1157 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1158 = load i64* %1157, align 8
  %1159 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1160 = load i64* %1159, align 8
  %1161 = add i64 %1158, %1160
  %1162 = add i64 %1161, 13602816
  %1163 = getelementptr inbounds double addrspace(1)* %RF, i64 %1162
  store double 2.000000e+13, double addrspace(1)* %1163, align 8
  %1164 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1165 = load i64* %1164, align 8
  %1166 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1167 = load i64* %1166, align 8
  %1168 = add i64 %1165, %1167
  %1169 = add i64 %1168, 13713408
  %1170 = getelementptr inbounds double addrspace(1)* %RF, i64 %1169
  store double 1.000000e+13, double addrspace(1)* %1170, align 8
  %1171 = fmul double %9, 6.000000e-02
  %1172 = fsub double 0x4040B70DF8104776, %1171
  %1173 = fmul double %10, 0x40B0B55777AF6406
  %1174 = fsub double %1172, %1173
  %1175 = tail call double @_Z3expd(double %1174) nounwind
  %1176 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1177 = load i64* %1176, align 8
  %1178 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1179 = load i64* %1178, align 8
  %1180 = add i64 %1177, %1179
  %1181 = add i64 %1180, 13824000
  %1182 = getelementptr inbounds double addrspace(1)* %RF, i64 %1181
  store double %1175, double addrspace(1)* %1182, align 8
  %1183 = fmul double %9, 1.430000e+00
  %1184 = fadd double %1183, 0x403520F4821D7C12
  %1185 = fmul double %10, 0x4095269C8216C615
  %1186 = fsub double %1184, %1185
  %1187 = tail call double @_Z3expd(double %1186) nounwind
  %1188 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1189 = load i64* %1188, align 8
  %1190 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1191 = load i64* %1190, align 8
  %1192 = add i64 %1189, %1191
  %1193 = add i64 %1192, 14045184
  %1194 = getelementptr inbounds double addrspace(1)* %RF, i64 %1193
  store double %1187, double addrspace(1)* %1194, align 8
  %1195 = fmul double %10, 0x40853ABD712A0EC7
  %1196 = fsub double 0x403C30CD9472E92C, %1195
  %1197 = tail call double @_Z3expd(double %1196) nounwind
  %1198 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1199 = load i64* %1198, align 8
  %1200 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1201 = load i64* %1200, align 8
  %1202 = add i64 %1199, %1201
  %1203 = add i64 %1202, 14266368
  %1204 = getelementptr inbounds double addrspace(1)* %RF, i64 %1203
  store double %1197, double addrspace(1)* %1204, align 8
  %1205 = fmul double %10, 0xC08F73777AF64064
  %1206 = tail call double @_Z3expd(double %1205) nounwind
  %1207 = fmul double %1206, 7.500000e+12
  %1208 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1209 = load i64* %1208, align 8
  %1210 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1211 = load i64* %1210, align 8
  %1212 = add i64 %1209, %1211
  %1213 = add i64 %1212, 14376960
  %1214 = getelementptr inbounds double addrspace(1)* %RF, i64 %1213
  store double %1207, double addrspace(1)* %1214, align 8
  %1215 = fmul double %1206, 1.000000e+13
  %1216 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1217 = load i64* %1216, align 8
  %1218 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1219 = load i64* %1218, align 8
  %1220 = add i64 %1217, %1219
  %1221 = add i64 %1220, 16699392
  %1222 = getelementptr inbounds double addrspace(1)* %RF, i64 %1221
  store double %1215, double addrspace(1)* %1222, align 8
  %1223 = fmul double %1206, 2.000000e+13
  %1224 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1225 = load i64* %1224, align 8
  %1226 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1227 = load i64* %1226, align 8
  %1228 = add i64 %1225, %1227
  %1229 = add i64 %1228, 20459520
  %1230 = getelementptr inbounds double addrspace(1)* %RF, i64 %1229
  store double %1223, double addrspace(1)* %1230, align 8
  %1231 = fmul double %9, 2.700000e-01
  %1232 = fadd double %1231, 0x403D6F9F63073655
  %1233 = fmul double %10, 0x40619CD24399B2C4
  %1234 = fsub double %1232, %1233
  %1235 = tail call double @_Z3expd(double %1234) nounwind
  %1236 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1237 = load i64* %1236, align 8
  %1238 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1239 = load i64* %1238, align 8
  %1240 = add i64 %1237, %1239
  %1241 = add i64 %1240, 14487552
  %1242 = getelementptr inbounds double addrspace(1)* %RF, i64 %1241
  store double %1235, double addrspace(1)* %1242, align 8
  %1243 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1244 = load i64* %1243, align 8
  %1245 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1246 = load i64* %1245, align 8
  %1247 = add i64 %1244, %1246
  %1248 = add i64 %1247, 14598144
  %1249 = getelementptr inbounds double addrspace(1)* %RF, i64 %1248
  store double 3.000000e+13, double addrspace(1)* %1249, align 8
  %1250 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1251 = load i64* %1250, align 8
  %1252 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1253 = load i64* %1252, align 8
  %1254 = add i64 %1251, %1253
  %1255 = add i64 %1254, 14708736
  %1256 = getelementptr inbounds double addrspace(1)* %RF, i64 %1255
  store double 6.000000e+13, double addrspace(1)* %1256, align 8
  %1257 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1258 = load i64* %1257, align 8
  %1259 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1260 = load i64* %1259, align 8
  %1261 = add i64 %1258, %1260
  %1262 = add i64 %1261, 14819328
  %1263 = getelementptr inbounds double addrspace(1)* %RF, i64 %1262
  store double 4.800000e+13, double addrspace(1)* %1263, align 8
  %1264 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1265 = load i64* %1264, align 8
  %1266 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1267 = load i64* %1266, align 8
  %1268 = add i64 %1265, %1267
  %1269 = add i64 %1268, 14929920
  %1270 = getelementptr inbounds double addrspace(1)* %RF, i64 %1269
  store double 4.800000e+13, double addrspace(1)* %1270, align 8
  %1271 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1272 = load i64* %1271, align 8
  %1273 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1274 = load i64* %1273, align 8
  %1275 = add i64 %1272, %1274
  %1276 = add i64 %1275, 15040512
  %1277 = getelementptr inbounds double addrspace(1)* %RF, i64 %1276
  store double 3.011000e+13, double addrspace(1)* %1277, align 8
  %1278 = fmul double %9, 1.610000e+00
  %1279 = fadd double %1278, 0x402C3763652A2644
  %1280 = fmul double %10, 0x40681DDD590C0AD0
  %1281 = fadd double %1279, %1280
  %1282 = tail call double @_Z3expd(double %1281) nounwind
  %1283 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1284 = load i64* %1283, align 8
  %1285 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1286 = load i64* %1285, align 8
  %1287 = add i64 %1284, %1286
  %1288 = add i64 %1287, 15151104
  %1289 = getelementptr inbounds double addrspace(1)* %RF, i64 %1288
  store double %1282, double addrspace(1)* %1289, align 8
  %1290 = fmul double %9, 2.900000e-01
  %1291 = fadd double %1290, 0x403A6D5309924FF9
  %1292 = fmul double %10, 0x4016243B87C07E35
  %1293 = fsub double %1291, %1292
  %1294 = tail call double @_Z3expd(double %1293) nounwind
  %1295 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1296 = load i64* %1295, align 8
  %1297 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1298 = load i64* %1297, align 8
  %1299 = add i64 %1296, %1298
  %1300 = add i64 %1299, 15261696
  %1301 = getelementptr inbounds double addrspace(1)* %RF, i64 %1300
  store double %1294, double addrspace(1)* %1301, align 8
  %1302 = fmul double %9, 1.390000e+00
  %1303 = fsub double 0x40432F078BE57BF0, %1302
  %1304 = fmul double %10, 0x407FC3FB395C4220
  %1305 = fsub double %1303, %1304
  %1306 = tail call double @_Z3expd(double %1305) nounwind
  %1307 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1308 = load i64* %1307, align 8
  %1309 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1310 = load i64* %1309, align 8
  %1311 = add i64 %1308, %1310
  %1312 = add i64 %1311, 15372288
  %1313 = getelementptr inbounds double addrspace(1)* %RF, i64 %1312
  store double %1306, double addrspace(1)* %1313, align 8
  %1314 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1315 = load i64* %1314, align 8
  %1316 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1317 = load i64* %1316, align 8
  %1318 = add i64 %1315, %1317
  %1319 = add i64 %1318, 15482880
  %1320 = getelementptr inbounds double addrspace(1)* %RF, i64 %1319
  store double 1.000000e+13, double addrspace(1)* %1320, align 8
  %1321 = fmul double %10, 0x4072BEAC94B380CB
  %1322 = fadd double %1321, 0x4037376AA9C205C9
  %1323 = tail call double @_Z3expd(double %1322) nounwind
  %1324 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1325 = load i64* %1324, align 8
  %1326 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1327 = load i64* %1326, align 8
  %1328 = add i64 %1325, %1327
  %1329 = add i64 %1328, 15593472
  %1330 = getelementptr inbounds double addrspace(1)* %RF, i64 %1329
  store double %1323, double addrspace(1)* %1330, align 8
  %1331 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1332 = load i64* %1331, align 8
  %1333 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1334 = load i64* %1333, align 8
  %1335 = add i64 %1332, %1334
  %1336 = add i64 %1335, 15704064
  %1337 = getelementptr inbounds double addrspace(1)* %RF, i64 %1336
  store double 9.033000e+13, double addrspace(1)* %1337, align 8
  %1338 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1339 = load i64* %1338, align 8
  %1340 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1341 = load i64* %1340, align 8
  %1342 = add i64 %1339, %1341
  %1343 = add i64 %1342, 15814656
  %1344 = getelementptr inbounds double addrspace(1)* %RF, i64 %1343
  store double 3.920000e+11, double addrspace(1)* %1344, align 8
  %1345 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1346 = load i64* %1345, align 8
  %1347 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1348 = load i64* %1347, align 8
  %1349 = add i64 %1346, %1348
  %1350 = add i64 %1349, 15925248
  %1351 = getelementptr inbounds double addrspace(1)* %RF, i64 %1350
  store double 2.500000e+13, double addrspace(1)* %1351, align 8
  %1352 = fmul double %9, 2.830000e+00
  %1353 = fsub double 0x404BD570E113ABAE, %1352
  %1354 = fmul double %10, 0x40C24C71A75CD0BB
  %1355 = fsub double %1353, %1354
  %1356 = tail call double @_Z3expd(double %1355) nounwind
  %1357 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1358 = load i64* %1357, align 8
  %1359 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1360 = load i64* %1359, align 8
  %1361 = add i64 %1358, %1360
  %1362 = add i64 %1361, 16035840
  %1363 = getelementptr inbounds double addrspace(1)* %RF, i64 %1362
  store double %1356, double addrspace(1)* %1363, align 8
  %1364 = fmul double %9, 9.147000e+00
  %1365 = fsub double 0x40581D727BB2FEC5, %1364
  %1366 = fmul double %10, 0x40D70C372617C1BE
  %1367 = fsub double %1365, %1366
  %1368 = tail call double @_Z3expd(double %1367) nounwind
  %1369 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1370 = load i64* %1369, align 8
  %1371 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1372 = load i64* %1371, align 8
  %1373 = add i64 %1370, %1372
  %1374 = add i64 %1373, 16146432
  %1375 = getelementptr inbounds double addrspace(1)* %RF, i64 %1374
  store double %1368, double addrspace(1)* %1375, align 8
  %1376 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1377 = load i64* %1376, align 8
  %1378 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1379 = load i64* %1378, align 8
  %1380 = add i64 %1377, %1379
  %1381 = add i64 %1380, 16257024
  %1382 = getelementptr inbounds double addrspace(1)* %RF, i64 %1381
  store double 1.000000e+14, double addrspace(1)* %1382, align 8
  %1383 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1384 = load i64* %1383, align 8
  %1385 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1386 = load i64* %1385, align 8
  %1387 = add i64 %1384, %1386
  %1388 = add i64 %1387, 16367616
  %1389 = getelementptr inbounds double addrspace(1)* %RF, i64 %1388
  store double 9.000000e+13, double addrspace(1)* %1389, align 8
  %1390 = fmul double %10, 0xC09F7377785729B3
  %1391 = tail call double @_Z3expd(double %1390) nounwind
  %1392 = fmul double %1391, 2.000000e+13
  %1393 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1394 = load i64* %1393, align 8
  %1395 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1396 = load i64* %1395, align 8
  %1397 = add i64 %1394, %1396
  %1398 = add i64 %1397, 16478208
  %1399 = getelementptr inbounds double addrspace(1)* %RF, i64 %1398
  store double %1392, double addrspace(1)* %1399, align 8
  %1400 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1401 = load i64* %1400, align 8
  %1402 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1403 = load i64* %1402, align 8
  %1404 = add i64 %1401, %1403
  %1405 = add i64 %1404, 16588800
  %1406 = getelementptr inbounds double addrspace(1)* %RF, i64 %1405
  store double %1392, double addrspace(1)* %1406, align 8
  %1407 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1408 = load i64* %1407, align 8
  %1409 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1410 = load i64* %1409, align 8
  %1411 = add i64 %1408, %1410
  %1412 = add i64 %1411, 16809984
  %1413 = getelementptr inbounds double addrspace(1)* %RF, i64 %1412
  store double 1.400000e+11, double addrspace(1)* %1413, align 8
  %1414 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1415 = load i64* %1414, align 8
  %1416 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1417 = load i64* %1416, align 8
  %1418 = add i64 %1415, %1417
  %1419 = add i64 %1418, 16920576
  %1420 = getelementptr inbounds double addrspace(1)* %RF, i64 %1419
  store double 1.800000e+10, double addrspace(1)* %1420, align 8
  %1421 = fmul double %9, 4.400000e-01
  %1422 = fadd double %1421, 0x403DB5E0E22D8722
  %1423 = fmul double %10, 0x40E5CFD1652BD3C3
  %1424 = fsub double %1422, %1423
  %1425 = tail call double @_Z3expd(double %1424) nounwind
  %1426 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1427 = load i64* %1426, align 8
  %1428 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1429 = load i64* %1428, align 8
  %1430 = add i64 %1427, %1429
  %1431 = add i64 %1430, 17031168
  %1432 = getelementptr inbounds double addrspace(1)* %RF, i64 %1431
  store double %1425, double addrspace(1)* %1432, align 8
  %1433 = fadd double %645, 0x403BB53E524B266F
  %1434 = fmul double %10, 0x408C9ED5AD96A6A0
  %1435 = fsub double %1433, %1434
  %1436 = tail call double @_Z3expd(double %1435) nounwind
  %1437 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1438 = load i64* %1437, align 8
  %1439 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1440 = load i64* %1439, align 8
  %1441 = add i64 %1438, %1440
  %1442 = add i64 %1441, 17141760
  %1443 = getelementptr inbounds double addrspace(1)* %RF, i64 %1442
  store double %1436, double addrspace(1)* %1443, align 8
  %1444 = fmul double %9, 1.930000e+00
  %1445 = fadd double %1444, 0x4031BDCEC84F8F8A
  %1446 = fmul double %10, 0x40B974A7E5C91D15
  %1447 = fsub double %1445, %1446
  %1448 = tail call double @_Z3expd(double %1447) nounwind
  %1449 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1450 = load i64* %1449, align 8
  %1451 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1452 = load i64* %1451, align 8
  %1453 = add i64 %1450, %1452
  %1454 = add i64 %1453, 17252352
  %1455 = getelementptr inbounds double addrspace(1)* %RF, i64 %1454
  store double %1448, double addrspace(1)* %1455, align 8
  %1456 = fmul double %9, 1.910000e+00
  %1457 = fadd double %1456, 0x403087BB88D7AA76
  %1458 = fmul double %10, 0x409D681F1172EF0B
  %1459 = fsub double %1457, %1458
  %1460 = tail call double @_Z3expd(double %1459) nounwind
  %1461 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1462 = load i64* %1461, align 8
  %1463 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1464 = load i64* %1463, align 8
  %1465 = add i64 %1462, %1464
  %1466 = add i64 %1465, 17362944
  %1467 = getelementptr inbounds double addrspace(1)* %RF, i64 %1466
  store double %1460, double addrspace(1)* %1467, align 8
  %1468 = fmul double %9, 1.830000e+00
  %1469 = fmul double %10, 0x405BAD4A6A875D57
  %1470 = fsub double %1468, %1469
  %1471 = tail call double @_Z3expd(double %1470) nounwind
  %1472 = fmul double %1471, 1.920000e+07
  %1473 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1474 = load i64* %1473, align 8
  %1475 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1476 = load i64* %1475, align 8
  %1477 = add i64 %1474, %1476
  %1478 = add i64 %1477, 17473536
  %1479 = getelementptr inbounds double addrspace(1)* %RF, i64 %1478
  store double %1472, double addrspace(1)* %1479, align 8
  %1480 = fmul double %1471, 3.840000e+05
  %1481 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1482 = load i64* %1481, align 8
  %1483 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1484 = load i64* %1483, align 8
  %1485 = add i64 %1482, %1484
  %1486 = add i64 %1485, 17584128
  %1487 = getelementptr inbounds double addrspace(1)* %RF, i64 %1486
  store double %1480, double addrspace(1)* %1487, align 8
  %1488 = fadd double %234, 0x402E3161290FC3C2
  %1489 = fmul double %10, 0x4093A82AAB8A5CE6
  %1490 = fsub double %1488, %1489
  %1491 = tail call double @_Z3expd(double %1490) nounwind
  %1492 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1493 = load i64* %1492, align 8
  %1494 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1495 = load i64* %1494, align 8
  %1496 = add i64 %1493, %1495
  %1497 = add i64 %1496, 17694720
  %1498 = getelementptr inbounds double addrspace(1)* %RF, i64 %1497
  store double %1491, double addrspace(1)* %1498, align 8
  %1499 = fmul double %10, 0x40DDE0E4B295E9E2
  %1500 = fsub double 0x403F5F99D95A79C9, %1499
  %1501 = tail call double @_Z3expd(double %1500) nounwind
  %1502 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1503 = load i64* %1502, align 8
  %1504 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1505 = load i64* %1504, align 8
  %1506 = add i64 %1503, %1505
  %1507 = add i64 %1506, 17805312
  %1508 = getelementptr inbounds double addrspace(1)* %RF, i64 %1507
  store double %1501, double addrspace(1)* %1508, align 8
  %1509 = fmul double %10, 0x40BB850889A02752
  %1510 = fsub double 0x403C52FCB196E661, %1509
  %1511 = tail call double @_Z3expd(double %1510) nounwind
  %1512 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1513 = load i64* %1512, align 8
  %1514 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1515 = load i64* %1514, align 8
  %1516 = add i64 %1513, %1515
  %1517 = add i64 %1516, 17915904
  %1518 = getelementptr inbounds double addrspace(1)* %RF, i64 %1517
  store double %1511, double addrspace(1)* %1518, align 8
  %1519 = fmul double %10, 0x40AF7377785729B3
  %1520 = fsub double %1120, %1519
  %1521 = tail call double @_Z3expd(double %1520) nounwind
  %1522 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1523 = load i64* %1522, align 8
  %1524 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1525 = load i64* %1524, align 8
  %1526 = add i64 %1523, %1525
  %1527 = add i64 %1526, 18026496
  %1528 = getelementptr inbounds double addrspace(1)* %RF, i64 %1527
  store double %1521, double addrspace(1)* %1528, align 8
  %1529 = fsub double 0x403EA072E92BA824, %1121
  %1530 = tail call double @_Z3expd(double %1529) nounwind
  %1531 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1532 = load i64* %1531, align 8
  %1533 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1534 = load i64* %1533, align 8
  %1535 = add i64 %1532, %1534
  %1536 = add i64 %1535, 18137088
  %1537 = getelementptr inbounds double addrspace(1)* %RF, i64 %1536
  store double %1530, double addrspace(1)* %1537, align 8
  %1538 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1539 = load i64* %1538, align 8
  %1540 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1541 = load i64* %1540, align 8
  %1542 = add i64 %1539, %1541
  %1543 = add i64 %1542, 18247680
  %1544 = getelementptr inbounds double addrspace(1)* %RF, i64 %1543
  store double 5.000000e+13, double addrspace(1)* %1544, align 8
  %1545 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1546 = load i64* %1545, align 8
  %1547 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1548 = load i64* %1547, align 8
  %1549 = add i64 %1546, %1548
  %1550 = add i64 %1549, 18358272
  %1551 = getelementptr inbounds double addrspace(1)* %RF, i64 %1550
  store double 5.000000e+13, double addrspace(1)* %1551, align 8
  %1552 = fadd double %234, 0x4028AA58595D6968
  %1553 = fmul double %10, 0x40B21597E5215769
  %1554 = fsub double %1552, %1553
  %1555 = tail call double @_Z3expd(double %1554) nounwind
  %1556 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1557 = load i64* %1556, align 8
  %1558 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1559 = load i64* %1558, align 8
  %1560 = add i64 %1557, %1559
  %1561 = add i64 %1560, 18468864
  %1562 = getelementptr inbounds double addrspace(1)* %RF, i64 %1561
  store double %1555, double addrspace(1)* %1562, align 8
  %1563 = fmul double %10, 0x40AE458963DC486B
  %1564 = fsub double 0x403A85B9496249A1, %1563
  %1565 = tail call double @_Z3expd(double %1564) nounwind
  %1566 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1567 = load i64* %1566, align 8
  %1568 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1569 = load i64* %1568, align 8
  %1570 = add i64 %1567, %1569
  %1571 = add i64 %1570, 18579456
  %1572 = getelementptr inbounds double addrspace(1)* %RF, i64 %1571
  store double %1565, double addrspace(1)* %1572, align 8
  %1573 = fmul double %9, 9.900000e-01
  %1574 = fsub double 0x404465B30A83E781, %1573
  %1575 = fmul double %10, 0x4088D8A89F40A287
  %1576 = fsub double %1574, %1575
  %1577 = tail call double @_Z3expd(double %1576) nounwind
  %1578 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1579 = load i64* %1578, align 8
  %1580 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1581 = load i64* %1580, align 8
  %1582 = add i64 %1579, %1581
  %1583 = add i64 %1582, 18690048
  %1584 = getelementptr inbounds double addrspace(1)* %RF, i64 %1583
  store double %1577, double addrspace(1)* %1584, align 8
  %1585 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1586 = load i64* %1585, align 8
  %1587 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1588 = load i64* %1587, align 8
  %1589 = add i64 %1586, %1588
  %1590 = add i64 %1589, 18800640
  %1591 = getelementptr inbounds double addrspace(1)* %RF, i64 %1590
  store double 2.000000e+12, double addrspace(1)* %1591, align 8
  %1592 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1593 = load i64* %1592, align 8
  %1594 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1595 = load i64* %1594, align 8
  %1596 = add i64 %1593, %1595
  %1597 = add i64 %1596, 18911232
  %1598 = getelementptr inbounds double addrspace(1)* %RF, i64 %1597
  store double 1.604000e+13, double addrspace(1)* %1598, align 8
  %1599 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1600 = load i64* %1599, align 8
  %1601 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1602 = load i64* %1601, align 8
  %1603 = add i64 %1600, %1602
  %1604 = add i64 %1603, 19021824
  %1605 = getelementptr inbounds double addrspace(1)* %RF, i64 %1604
  store double 8.020000e+13, double addrspace(1)* %1605, align 8
  %1606 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1607 = load i64* %1606, align 8
  %1608 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1609 = load i64* %1608, align 8
  %1610 = add i64 %1607, %1609
  %1611 = add i64 %1610, 19132416
  %1612 = getelementptr inbounds double addrspace(1)* %RF, i64 %1611
  store double 2.000000e+10, double addrspace(1)* %1612, align 8
  %1613 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1614 = load i64* %1613, align 8
  %1615 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1616 = load i64* %1615, align 8
  %1617 = add i64 %1614, %1616
  %1618 = add i64 %1617, 19243008
  %1619 = getelementptr inbounds double addrspace(1)* %RF, i64 %1618
  store double 3.000000e+11, double addrspace(1)* %1619, align 8
  %1620 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1621 = load i64* %1620, align 8
  %1622 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1623 = load i64* %1622, align 8
  %1624 = add i64 %1621, %1623
  %1625 = add i64 %1624, 19353600
  %1626 = getelementptr inbounds double addrspace(1)* %RF, i64 %1625
  store double 3.000000e+11, double addrspace(1)* %1626, align 8
  %1627 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1628 = load i64* %1627, align 8
  %1629 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1630 = load i64* %1629, align 8
  %1631 = add i64 %1628, %1630
  %1632 = add i64 %1631, 19464192
  %1633 = getelementptr inbounds double addrspace(1)* %RF, i64 %1632
  store double 2.400000e+13, double addrspace(1)* %1633, align 8
  %1634 = fmul double %10, 0x407EA220E8427419
  %1635 = fsub double 0x4036E2F77D7A7F22, %1634
  %1636 = tail call double @_Z3expd(double %1635) nounwind
  %1637 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1638 = load i64* %1637, align 8
  %1639 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1640 = load i64* %1639, align 8
  %1641 = add i64 %1638, %1640
  %1642 = add i64 %1641, 19574784
  %1643 = getelementptr inbounds double addrspace(1)* %RF, i64 %1642
  store double %1636, double addrspace(1)* %1643, align 8
  %1644 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1645 = load i64* %1644, align 8
  %1646 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1647 = load i64* %1646, align 8
  %1648 = add i64 %1645, %1647
  %1649 = add i64 %1648, 19685376
  %1650 = getelementptr inbounds double addrspace(1)* %RF, i64 %1649
  store double 1.200000e+14, double addrspace(1)* %1650, align 8
  %1651 = fmul double %9, 1.900000e+00
  %1652 = fadd double %1651, 0x40328F792C3BC82D
  %1653 = fmul double %10, 0x40AD9A7169C23B79
  %1654 = fsub double %1652, %1653
  %1655 = tail call double @_Z3expd(double %1654) nounwind
  %1656 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1657 = load i64* %1656, align 8
  %1658 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1659 = load i64* %1658, align 8
  %1660 = add i64 %1657, %1659
  %1661 = add i64 %1660, 19795968
  %1662 = getelementptr inbounds double addrspace(1)* %RF, i64 %1661
  store double %1655, double addrspace(1)* %1662, align 8
  %1663 = fmul double %9, 1.920000e+00
  %1664 = fadd double %1663, 0x4032502706D50657
  %1665 = fmul double %10, 0x40A65E9B0DD82FD7
  %1666 = fsub double %1664, %1665
  %1667 = tail call double @_Z3expd(double %1666) nounwind
  %1668 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1669 = load i64* %1668, align 8
  %1670 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1671 = load i64* %1670, align 8
  %1672 = add i64 %1669, %1671
  %1673 = add i64 %1672, 19906560
  %1674 = getelementptr inbounds double addrspace(1)* %RF, i64 %1673
  store double %1667, double addrspace(1)* %1674, align 8
  %1675 = fmul double %9, 2.120000e+00
  %1676 = fadd double %1675, 0x402E28C6385E155F
  %1677 = fmul double %10, 0x407B5CC6A8FC0D2C
  %1678 = fsub double %1676, %1677
  %1679 = tail call double @_Z3expd(double %1678) nounwind
  %1680 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1681 = load i64* %1680, align 8
  %1682 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1683 = load i64* %1682, align 8
  %1684 = add i64 %1681, %1683
  %1685 = add i64 %1684, 20017152
  %1686 = getelementptr inbounds double addrspace(1)* %RF, i64 %1685
  store double %1679, double addrspace(1)* %1686, align 8
  %1687 = fmul double %10, 0x40714C4E820E6299
  %1688 = fadd double %1687, 0x403F51E50176F885
  %1689 = tail call double @_Z3expd(double %1688) nounwind
  %1690 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1691 = load i64* %1690, align 8
  %1692 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1693 = load i64* %1692, align 8
  %1694 = add i64 %1691, %1693
  %1695 = add i64 %1694, 20127744
  %1696 = getelementptr inbounds double addrspace(1)* %RF, i64 %1695
  store double %1689, double addrspace(1)* %1696, align 8
  %1697 = fmul double %9, 1.740000e+00
  %1698 = fadd double %1697, 0x402F42BB4EF60759
  %1699 = fmul double %10, 0x40B48A9D3AE685DB
  %1700 = fsub double %1698, %1699
  %1701 = tail call double @_Z3expd(double %1700) nounwind
  %1702 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1703 = load i64* %1702, align 8
  %1704 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1705 = load i64* %1704, align 8
  %1706 = add i64 %1703, %1705
  %1707 = add i64 %1706, 20238336
  %1708 = getelementptr inbounds double addrspace(1)* %RF, i64 %1707
  store double %1701, double addrspace(1)* %1708, align 8
  %1709 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1710 = load i64* %1709, align 8
  %1711 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1712 = load i64* %1711, align 8
  %1713 = add i64 %1710, %1712
  %1714 = add i64 %1713, 20348928
  %1715 = getelementptr inbounds double addrspace(1)* %RF, i64 %1714
  store double 2.000000e+14, double addrspace(1)* %1715, align 8
  %1716 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1717 = load i64* %1716, align 8
  %1718 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1719 = load i64* %1718, align 8
  %1720 = add i64 %1717, %1719
  %1721 = add i64 %1720, 20570112
  %1722 = getelementptr inbounds double addrspace(1)* %RF, i64 %1721
  store double 2.660000e+12, double addrspace(1)* %1722, align 8
  %1723 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1724 = load i64* %1723, align 8
  %1725 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1726 = load i64* %1725, align 8
  %1727 = add i64 %1724, %1726
  %1728 = add i64 %1727, 20680704
  %1729 = getelementptr inbounds double addrspace(1)* %RF, i64 %1728
  store double 6.600000e+12, double addrspace(1)* %1729, align 8
  %1730 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1731 = load i64* %1730, align 8
  %1732 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1733 = load i64* %1732, align 8
  %1734 = add i64 %1731, %1733
  %1735 = add i64 %1734, 20791296
  %1736 = getelementptr inbounds double addrspace(1)* %RF, i64 %1735
  store double 6.000000e+13, double addrspace(1)* %1736, align 8
  %1737 = fmul double %10, 0x4099A35AB7564303
  %1738 = fsub double 0x403E38024E8ED94C, %1737
  %1739 = tail call double @_Z3expd(double %1738) nounwind
  %1740 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1741 = load i64* %1740, align 8
  %1742 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1743 = load i64* %1742, align 8
  %1744 = add i64 %1741, %1743
  %1745 = add i64 %1744, 20901888
  %1746 = getelementptr inbounds double addrspace(1)* %RF, i64 %1745
  store double %1739, double addrspace(1)* %1746, align 8
  %1747 = fmul double %9, 2.390000e+00
  %1748 = fsub double 0x4049903D7683141C, %1747
  %1749 = fmul double %10, 0x40B5F9F65BEA0BA2
  %1750 = fsub double %1748, %1749
  %1751 = tail call double @_Z3expd(double %1750) nounwind
  %1752 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1753 = load i64* %1752, align 8
  %1754 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1755 = load i64* %1754, align 8
  %1756 = add i64 %1753, %1755
  %1757 = add i64 %1756, 21012480
  %1758 = getelementptr inbounds double addrspace(1)* %RF, i64 %1757
  store double %1751, double addrspace(1)* %1758, align 8
  %1759 = fmul double %9, 2.500000e+00
  %1760 = fadd double %1759, 0x4028164CABAA3D56
  %1761 = fmul double %10, 0x40939409BA5E353F
  %1762 = fsub double %1760, %1761
  %1763 = tail call double @_Z3expd(double %1762) nounwind
  %1764 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1765 = load i64* %1764, align 8
  %1766 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1767 = load i64* %1766, align 8
  %1768 = add i64 %1765, %1767
  %1769 = add i64 %1768, 21123072
  %1770 = getelementptr inbounds double addrspace(1)* %RF, i64 %1769
  store double %1763, double addrspace(1)* %1770, align 8
  %1771 = fmul double %9, 1.650000e+00
  %1772 = fadd double %1771, 0x40329A5E5BD5E9AC
  %1773 = fmul double %10, 0x406491A8C154C986
  %1774 = fsub double %1772, %1773
  %1775 = tail call double @_Z3expd(double %1774) nounwind
  %1776 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1777 = load i64* %1776, align 8
  %1778 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1779 = load i64* %1778, align 8
  %1780 = add i64 %1777, %1779
  %1781 = add i64 %1780, 21233664
  %1782 = getelementptr inbounds double addrspace(1)* %RF, i64 %1781
  store double %1775, double addrspace(1)* %1782, align 8
  %1783 = fadd double %1771, 0x40315EF096D670BA
  %1784 = fmul double %10, 0x407E92068EC52A41
  %1785 = fadd double %1783, %1784
  %1786 = tail call double @_Z3expd(double %1785) nounwind
  %1787 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1788 = load i64* %1787, align 8
  %1789 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1790 = load i64* %1789, align 8
  %1791 = add i64 %1788, %1790
  %1792 = add i64 %1791, 21344256
  %1793 = getelementptr inbounds double addrspace(1)* %RF, i64 %1792
  store double %1786, double addrspace(1)* %1793, align 8
  %1794 = fmul double %9, 7.000000e-01
  %1795 = fadd double %1794, 0x4039EA8D92245A52
  %1796 = fmul double %10, 0x40A71DD3F91E646F
  %1797 = fsub double %1795, %1796
  %1798 = tail call double @_Z3expd(double %1797) nounwind
  %1799 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1800 = load i64* %1799, align 8
  %1801 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1802 = load i64* %1801, align 8
  %1803 = add i64 %1800, %1802
  %1804 = add i64 %1803, 21454848
  %1805 = getelementptr inbounds double addrspace(1)* %RF, i64 %1804
  store double %1798, double addrspace(1)* %1805, align 8
  %1806 = fadd double %234, 0x402DE4D1BDCD5589
  %1807 = fmul double %10, 0x4062BEAC94B380CB
  %1808 = fadd double %1806, %1807
  %1809 = tail call double @_Z3expd(double %1808) nounwind
  %1810 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1811 = load i64* %1810, align 8
  %1812 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1813 = load i64* %1812, align 8
  %1814 = add i64 %1811, %1813
  %1815 = add i64 %1814, 21565440
  %1816 = getelementptr inbounds double addrspace(1)* %RF, i64 %1815
  store double %1809, double addrspace(1)* %1816, align 8
  %1817 = fmul double %9, 2.600000e+00
  %1818 = fadd double %1817, 0x402256CB1CF45780
  %1819 = fmul double %10, 0x40BB57BE6CF41F21
  %1820 = fsub double %1818, %1819
  %1821 = tail call double @_Z3expd(double %1820) nounwind
  %1822 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1823 = load i64* %1822, align 8
  %1824 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1825 = load i64* %1824, align 8
  %1826 = add i64 %1823, %1825
  %1827 = add i64 %1826, 21676032
  %1828 = getelementptr inbounds double addrspace(1)* %RF, i64 %1827
  store double %1821, double addrspace(1)* %1828, align 8
  %1829 = fmul double %9, 3.500000e+00
  %1830 = fadd double %1829, 0x3FE93B0AEDEFB22A
  %1831 = fmul double %10, 0x40A64F82599ED7C7
  %1832 = fsub double %1830, %1831
  %1833 = tail call double @_Z3expd(double %1832) nounwind
  %1834 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1835 = load i64* %1834, align 8
  %1836 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1837 = load i64* %1836, align 8
  %1838 = add i64 %1835, %1837
  %1839 = add i64 %1838, 21786624
  %1840 = getelementptr inbounds double addrspace(1)* %RF, i64 %1839
  store double %1833, double addrspace(1)* %1840, align 8
  %1841 = fmul double %9, 2.920000e+00
  %1842 = fsub double 0x404C49020D2079F3, %1841
  %1843 = fmul double %10, 0x40B894B9743E963E
  %1844 = fsub double %1842, %1843
  %1845 = tail call double @_Z3expd(double %1844) nounwind
  %1846 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1847 = load i64* %1846, align 8
  %1848 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1849 = load i64* %1848, align 8
  %1850 = add i64 %1847, %1849
  %1851 = add i64 %1850, 21897216
  %1852 = getelementptr inbounds double addrspace(1)* %RF, i64 %1851
  store double %1845, double addrspace(1)* %1852, align 8
  %1853 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1854 = load i64* %1853, align 8
  %1855 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1856 = load i64* %1855, align 8
  %1857 = add i64 %1854, %1856
  %1858 = add i64 %1857, 22007808
  %1859 = getelementptr inbounds double addrspace(1)* %RF, i64 %1858
  store double 1.800000e+12, double addrspace(1)* %1859, align 8
  %1860 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1861 = load i64* %1860, align 8
  %1862 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1863 = load i64* %1862, align 8
  %1864 = add i64 %1861, %1863
  %1865 = add i64 %1864, 22118400
  %1866 = getelementptr inbounds double addrspace(1)* %RF, i64 %1865
  store double 9.600000e+13, double addrspace(1)* %1866, align 8
  %1867 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1868 = load i64* %1867, align 8
  %1869 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1870 = load i64* %1869, align 8
  %1871 = add i64 %1868, %1870
  %1872 = add i64 %1871, 22228992
  %1873 = getelementptr inbounds double addrspace(1)* %RF, i64 %1872
  store double 2.400000e+13, double addrspace(1)* %1873, align 8
  %1874 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1875 = load i64* %1874, align 8
  %1876 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1877 = load i64* %1876, align 8
  %1878 = add i64 %1875, %1877
  %1879 = add i64 %1878, 22339584
  %1880 = getelementptr inbounds double addrspace(1)* %RF, i64 %1879
  store double 9.000000e+10, double addrspace(1)* %1880, align 8
  %1881 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1882 = load i64* %1881, align 8
  %1883 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1884 = load i64* %1883, align 8
  %1885 = add i64 %1882, %1884
  %1886 = add i64 %1885, 22450176
  %1887 = getelementptr inbounds double addrspace(1)* %RF, i64 %1886
  store double 2.400000e+13, double addrspace(1)* %1887, align 8
  %1888 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1889 = load i64* %1888, align 8
  %1890 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1891 = load i64* %1890, align 8
  %1892 = add i64 %1889, %1891
  %1893 = add i64 %1892, 22560768
  %1894 = getelementptr inbounds double addrspace(1)* %RF, i64 %1893
  store double 1.100000e+13, double addrspace(1)* %1894, align 8
  %1895 = fmul double %9, 5.220000e+00
  %1896 = fsub double 0x4052C2CBF8FCD680, %1895
  %1897 = fmul double %10, 0x40C368828049667B
  %1898 = fsub double %1896, %1897
  %1899 = tail call double @_Z3expd(double %1898) nounwind
  %1900 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1901 = load i64* %1900, align 8
  %1902 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1903 = load i64* %1902, align 8
  %1904 = add i64 %1901, %1903
  %1905 = add i64 %1904, 22671360
  %1906 = getelementptr inbounds double addrspace(1)* %RF, i64 %1905
  store double %1899, double addrspace(1)* %1906, align 8
  %check.WI.iter = icmp ult i64 %CurrWI..0, %iterCount
  br i1 %check.WI.iter, label %thenBB, label %SyncBB

thenBB:                                           ; preds = %SyncBB1
  %"CurrWI++" = add nuw i64 %CurrWI..0, 1
  br label %SyncBB1

SyncBB:                                           ; preds = %SyncBB1
  ret void
}

define void @____Vectorized_.ratt_kernel_separated_args(double addrspace(1)* nocapture %T, double addrspace(1)* %RF, double %TCONV, i8 addrspace(3)* %pLocalMem, %struct.WorkDim* %pWorkDim, i64* %pWGId, %struct.PaddedDimId* %pBaseGlbId, %struct.PaddedDimId* %pLocalIds, i64* %contextpointer, i64 %iterCount, i8* %pSpecialBuf, i64* %pCurrWI) nounwind alwaysinline {
FirstBB:
  %temp = insertelement <16 x double> undef, double %TCONV, i32 0
  %vector = shufflevector <16 x double> %temp, <16 x double> undef, <16 x i32> zeroinitializer
  br label %SyncBB

SyncBB:                                           ; preds = %thenBB, %FirstBB
  %CurrWI..0 = phi i64 [ 0, %FirstBB ], [ %"CurrWI++", %thenBB ]
  %0 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1 = load i64* %0, align 8
  %2 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %3 = load i64* %2, align 8
  %4 = add i64 %1, %3
  %5 = getelementptr inbounds double addrspace(1)* %T, i64 %4
  %ptrTypeCast = bitcast double addrspace(1)* %5 to <16 x double> addrspace(1)*
  %6 = load <16 x double> addrspace(1)* %ptrTypeCast, align 8
  %7 = fmul <16 x double> %6, %vector
  %extract16 = extractelement <16 x double> %7, i32 0
  %extract17 = extractelement <16 x double> %7, i32 1
  %extract18 = extractelement <16 x double> %7, i32 2
  %extract19 = extractelement <16 x double> %7, i32 3
  %extract20 = extractelement <16 x double> %7, i32 4
  %extract21 = extractelement <16 x double> %7, i32 5
  %extract22 = extractelement <16 x double> %7, i32 6
  %extract23 = extractelement <16 x double> %7, i32 7
  %extract24 = extractelement <16 x double> %7, i32 8
  %extract25 = extractelement <16 x double> %7, i32 9
  %extract26 = extractelement <16 x double> %7, i32 10
  %extract27 = extractelement <16 x double> %7, i32 11
  %extract28 = extractelement <16 x double> %7, i32 12
  %extract29 = extractelement <16 x double> %7, i32 13
  %extract30 = extractelement <16 x double> %7, i32 14
  %extract31 = extractelement <16 x double> %7, i32 15
  %8 = tail call double @_Z3logd(double %extract16) nounwind
  %9 = tail call double @_Z3logd(double %extract17) nounwind
  %10 = tail call double @_Z3logd(double %extract18) nounwind
  %11 = tail call double @_Z3logd(double %extract19) nounwind
  %12 = tail call double @_Z3logd(double %extract20) nounwind
  %13 = tail call double @_Z3logd(double %extract21) nounwind
  %14 = tail call double @_Z3logd(double %extract22) nounwind
  %15 = tail call double @_Z3logd(double %extract23) nounwind
  %16 = tail call double @_Z3logd(double %extract24) nounwind
  %17 = tail call double @_Z3logd(double %extract25) nounwind
  %18 = tail call double @_Z3logd(double %extract26) nounwind
  %19 = tail call double @_Z3logd(double %extract27) nounwind
  %20 = tail call double @_Z3logd(double %extract28) nounwind
  %21 = tail call double @_Z3logd(double %extract29) nounwind
  %22 = tail call double @_Z3logd(double %extract30) nounwind
  %23 = tail call double @_Z3logd(double %extract31) nounwind
  %temp.vect82 = insertelement <16 x double> undef, double %8, i32 0
  %temp.vect83 = insertelement <16 x double> %temp.vect82, double %9, i32 1
  %temp.vect84 = insertelement <16 x double> %temp.vect83, double %10, i32 2
  %temp.vect85 = insertelement <16 x double> %temp.vect84, double %11, i32 3
  %temp.vect86 = insertelement <16 x double> %temp.vect85, double %12, i32 4
  %temp.vect87 = insertelement <16 x double> %temp.vect86, double %13, i32 5
  %temp.vect88 = insertelement <16 x double> %temp.vect87, double %14, i32 6
  %temp.vect89 = insertelement <16 x double> %temp.vect88, double %15, i32 7
  %temp.vect90 = insertelement <16 x double> %temp.vect89, double %16, i32 8
  %temp.vect91 = insertelement <16 x double> %temp.vect90, double %17, i32 9
  %temp.vect92 = insertelement <16 x double> %temp.vect91, double %18, i32 10
  %temp.vect93 = insertelement <16 x double> %temp.vect92, double %19, i32 11
  %temp.vect94 = insertelement <16 x double> %temp.vect93, double %20, i32 12
  %temp.vect95 = insertelement <16 x double> %temp.vect94, double %21, i32 13
  %temp.vect96 = insertelement <16 x double> %temp.vect95, double %22, i32 14
  %temp.vect97 = insertelement <16 x double> %temp.vect96, double %23, i32 15
  %24 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %7
  %25 = fmul <16 x double> %24, %24
  %26 = fmul <16 x double> %24, <double 0x40BC54DCA0E410B6, double 0x40BC54DCA0E410B6, double 0x40BC54DCA0E410B6, double 0x40BC54DCA0E410B6, double 0x40BC54DCA0E410B6, double 0x40BC54DCA0E410B6, double 0x40BC54DCA0E410B6, double 0x40BC54DCA0E410B6, double 0x40BC54DCA0E410B6, double 0x40BC54DCA0E410B6, double 0x40BC54DCA0E410B6, double 0x40BC54DCA0E410B6, double 0x40BC54DCA0E410B6, double 0x40BC54DCA0E410B6, double 0x40BC54DCA0E410B6, double 0x40BC54DCA0E410B6>
  %27 = fsub <16 x double> <double 0x40400661DE416957, double 0x40400661DE416957, double 0x40400661DE416957, double 0x40400661DE416957, double 0x40400661DE416957, double 0x40400661DE416957, double 0x40400661DE416957, double 0x40400661DE416957, double 0x40400661DE416957, double 0x40400661DE416957, double 0x40400661DE416957, double 0x40400661DE416957, double 0x40400661DE416957, double 0x40400661DE416957, double 0x40400661DE416957, double 0x40400661DE416957>, %26
  %extract32 = extractelement <16 x double> %27, i32 0
  %extract33 = extractelement <16 x double> %27, i32 1
  %extract34 = extractelement <16 x double> %27, i32 2
  %extract35 = extractelement <16 x double> %27, i32 3
  %extract36 = extractelement <16 x double> %27, i32 4
  %extract37 = extractelement <16 x double> %27, i32 5
  %extract38 = extractelement <16 x double> %27, i32 6
  %extract39 = extractelement <16 x double> %27, i32 7
  %extract40 = extractelement <16 x double> %27, i32 8
  %extract41 = extractelement <16 x double> %27, i32 9
  %extract42 = extractelement <16 x double> %27, i32 10
  %extract43 = extractelement <16 x double> %27, i32 11
  %extract44 = extractelement <16 x double> %27, i32 12
  %extract45 = extractelement <16 x double> %27, i32 13
  %extract46 = extractelement <16 x double> %27, i32 14
  %extract47 = extractelement <16 x double> %27, i32 15
  %28 = tail call double @_Z3expd(double %extract32) nounwind
  %29 = tail call double @_Z3expd(double %extract33) nounwind
  %30 = tail call double @_Z3expd(double %extract34) nounwind
  %31 = tail call double @_Z3expd(double %extract35) nounwind
  %32 = tail call double @_Z3expd(double %extract36) nounwind
  %33 = tail call double @_Z3expd(double %extract37) nounwind
  %34 = tail call double @_Z3expd(double %extract38) nounwind
  %35 = tail call double @_Z3expd(double %extract39) nounwind
  %36 = tail call double @_Z3expd(double %extract40) nounwind
  %37 = tail call double @_Z3expd(double %extract41) nounwind
  %38 = tail call double @_Z3expd(double %extract42) nounwind
  %39 = tail call double @_Z3expd(double %extract43) nounwind
  %40 = tail call double @_Z3expd(double %extract44) nounwind
  %41 = tail call double @_Z3expd(double %extract45) nounwind
  %42 = tail call double @_Z3expd(double %extract46) nounwind
  %43 = tail call double @_Z3expd(double %extract47) nounwind
  %temp.vect = insertelement <16 x double> undef, double %28, i32 0
  %temp.vect67 = insertelement <16 x double> %temp.vect, double %29, i32 1
  %temp.vect68 = insertelement <16 x double> %temp.vect67, double %30, i32 2
  %temp.vect69 = insertelement <16 x double> %temp.vect68, double %31, i32 3
  %temp.vect70 = insertelement <16 x double> %temp.vect69, double %32, i32 4
  %temp.vect71 = insertelement <16 x double> %temp.vect70, double %33, i32 5
  %temp.vect72 = insertelement <16 x double> %temp.vect71, double %34, i32 6
  %temp.vect73 = insertelement <16 x double> %temp.vect72, double %35, i32 7
  %temp.vect74 = insertelement <16 x double> %temp.vect73, double %36, i32 8
  %temp.vect75 = insertelement <16 x double> %temp.vect74, double %37, i32 9
  %temp.vect76 = insertelement <16 x double> %temp.vect75, double %38, i32 10
  %temp.vect77 = insertelement <16 x double> %temp.vect76, double %39, i32 11
  %temp.vect78 = insertelement <16 x double> %temp.vect77, double %40, i32 12
  %temp.vect79 = insertelement <16 x double> %temp.vect78, double %41, i32 13
  %temp.vect80 = insertelement <16 x double> %temp.vect79, double %42, i32 14
  %temp.vect81 = insertelement <16 x double> %temp.vect80, double %43, i32 15
  %44 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %45 = load i64* %44, align 8
  %46 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %47 = load i64* %46, align 8
  %48 = add i64 %45, %47
  %49 = getelementptr inbounds double addrspace(1)* %RF, i64 %48
  %ptrTypeCast66 = bitcast double addrspace(1)* %49 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect81, <16 x double> addrspace(1)* %ptrTypeCast66, align 8
  %50 = fmul <16 x double> %temp.vect97, <double 2.670000e+00, double 2.670000e+00, double 2.670000e+00, double 2.670000e+00, double 2.670000e+00, double 2.670000e+00, double 2.670000e+00, double 2.670000e+00, double 2.670000e+00, double 2.670000e+00, double 2.670000e+00, double 2.670000e+00, double 2.670000e+00, double 2.670000e+00, double 2.670000e+00, double 2.670000e+00>
  %51 = fadd <16 x double> %50, <double 0x4025A3B9FB38F0E2, double 0x4025A3B9FB38F0E2, double 0x4025A3B9FB38F0E2, double 0x4025A3B9FB38F0E2, double 0x4025A3B9FB38F0E2, double 0x4025A3B9FB38F0E2, double 0x4025A3B9FB38F0E2, double 0x4025A3B9FB38F0E2, double 0x4025A3B9FB38F0E2, double 0x4025A3B9FB38F0E2, double 0x4025A3B9FB38F0E2, double 0x4025A3B9FB38F0E2, double 0x4025A3B9FB38F0E2, double 0x4025A3B9FB38F0E2, double 0x4025A3B9FB38F0E2, double 0x4025A3B9FB38F0E2>
  %52 = fmul <16 x double> %24, <double 0x40A8BA7736CDF267, double 0x40A8BA7736CDF267, double 0x40A8BA7736CDF267, double 0x40A8BA7736CDF267, double 0x40A8BA7736CDF267, double 0x40A8BA7736CDF267, double 0x40A8BA7736CDF267, double 0x40A8BA7736CDF267, double 0x40A8BA7736CDF267, double 0x40A8BA7736CDF267, double 0x40A8BA7736CDF267, double 0x40A8BA7736CDF267, double 0x40A8BA7736CDF267, double 0x40A8BA7736CDF267, double 0x40A8BA7736CDF267, double 0x40A8BA7736CDF267>
  %53 = fsub <16 x double> %51, %52
  %extract98 = extractelement <16 x double> %53, i32 0
  %extract99 = extractelement <16 x double> %53, i32 1
  %extract100 = extractelement <16 x double> %53, i32 2
  %extract101 = extractelement <16 x double> %53, i32 3
  %extract102 = extractelement <16 x double> %53, i32 4
  %extract103 = extractelement <16 x double> %53, i32 5
  %extract104 = extractelement <16 x double> %53, i32 6
  %extract105 = extractelement <16 x double> %53, i32 7
  %extract106 = extractelement <16 x double> %53, i32 8
  %extract107 = extractelement <16 x double> %53, i32 9
  %extract108 = extractelement <16 x double> %53, i32 10
  %extract109 = extractelement <16 x double> %53, i32 11
  %extract110 = extractelement <16 x double> %53, i32 12
  %extract111 = extractelement <16 x double> %53, i32 13
  %extract112 = extractelement <16 x double> %53, i32 14
  %extract113 = extractelement <16 x double> %53, i32 15
  %54 = tail call double @_Z3expd(double %extract98) nounwind
  %55 = tail call double @_Z3expd(double %extract99) nounwind
  %56 = tail call double @_Z3expd(double %extract100) nounwind
  %57 = tail call double @_Z3expd(double %extract101) nounwind
  %58 = tail call double @_Z3expd(double %extract102) nounwind
  %59 = tail call double @_Z3expd(double %extract103) nounwind
  %60 = tail call double @_Z3expd(double %extract104) nounwind
  %61 = tail call double @_Z3expd(double %extract105) nounwind
  %62 = tail call double @_Z3expd(double %extract106) nounwind
  %63 = tail call double @_Z3expd(double %extract107) nounwind
  %64 = tail call double @_Z3expd(double %extract108) nounwind
  %65 = tail call double @_Z3expd(double %extract109) nounwind
  %66 = tail call double @_Z3expd(double %extract110) nounwind
  %67 = tail call double @_Z3expd(double %extract111) nounwind
  %68 = tail call double @_Z3expd(double %extract112) nounwind
  %69 = tail call double @_Z3expd(double %extract113) nounwind
  %temp.vect133 = insertelement <16 x double> undef, double %54, i32 0
  %temp.vect134 = insertelement <16 x double> %temp.vect133, double %55, i32 1
  %temp.vect135 = insertelement <16 x double> %temp.vect134, double %56, i32 2
  %temp.vect136 = insertelement <16 x double> %temp.vect135, double %57, i32 3
  %temp.vect137 = insertelement <16 x double> %temp.vect136, double %58, i32 4
  %temp.vect138 = insertelement <16 x double> %temp.vect137, double %59, i32 5
  %temp.vect139 = insertelement <16 x double> %temp.vect138, double %60, i32 6
  %temp.vect140 = insertelement <16 x double> %temp.vect139, double %61, i32 7
  %temp.vect141 = insertelement <16 x double> %temp.vect140, double %62, i32 8
  %temp.vect142 = insertelement <16 x double> %temp.vect141, double %63, i32 9
  %temp.vect143 = insertelement <16 x double> %temp.vect142, double %64, i32 10
  %temp.vect144 = insertelement <16 x double> %temp.vect143, double %65, i32 11
  %temp.vect145 = insertelement <16 x double> %temp.vect144, double %66, i32 12
  %temp.vect146 = insertelement <16 x double> %temp.vect145, double %67, i32 13
  %temp.vect147 = insertelement <16 x double> %temp.vect146, double %68, i32 14
  %temp.vect148 = insertelement <16 x double> %temp.vect147, double %69, i32 15
  %70 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %71 = load i64* %70, align 8
  %72 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %73 = load i64* %72, align 8
  %74 = add i64 %71, %73
  %extract116 = add i64 %74, 110592
  %75 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract116
  %ptrTypeCast132 = bitcast double addrspace(1)* %75 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect148, <16 x double> addrspace(1)* %ptrTypeCast132, align 8
  %76 = fmul <16 x double> %temp.vect97, <double 1.510000e+00, double 1.510000e+00, double 1.510000e+00, double 1.510000e+00, double 1.510000e+00, double 1.510000e+00, double 1.510000e+00, double 1.510000e+00, double 1.510000e+00, double 1.510000e+00, double 1.510000e+00, double 1.510000e+00, double 1.510000e+00, double 1.510000e+00, double 1.510000e+00, double 1.510000e+00>
  %77 = fadd <16 x double> %76, <double 0x403330D78C436FC1, double 0x403330D78C436FC1, double 0x403330D78C436FC1, double 0x403330D78C436FC1, double 0x403330D78C436FC1, double 0x403330D78C436FC1, double 0x403330D78C436FC1, double 0x403330D78C436FC1, double 0x403330D78C436FC1, double 0x403330D78C436FC1, double 0x403330D78C436FC1, double 0x403330D78C436FC1, double 0x403330D78C436FC1, double 0x403330D78C436FC1, double 0x403330D78C436FC1, double 0x403330D78C436FC1>
  %78 = fmul <16 x double> %24, <double 0x409AF821F75104D5, double 0x409AF821F75104D5, double 0x409AF821F75104D5, double 0x409AF821F75104D5, double 0x409AF821F75104D5, double 0x409AF821F75104D5, double 0x409AF821F75104D5, double 0x409AF821F75104D5, double 0x409AF821F75104D5, double 0x409AF821F75104D5, double 0x409AF821F75104D5, double 0x409AF821F75104D5, double 0x409AF821F75104D5, double 0x409AF821F75104D5, double 0x409AF821F75104D5, double 0x409AF821F75104D5>
  %79 = fsub <16 x double> %77, %78
  %extract149 = extractelement <16 x double> %79, i32 0
  %extract150 = extractelement <16 x double> %79, i32 1
  %extract151 = extractelement <16 x double> %79, i32 2
  %extract152 = extractelement <16 x double> %79, i32 3
  %extract153 = extractelement <16 x double> %79, i32 4
  %extract154 = extractelement <16 x double> %79, i32 5
  %extract155 = extractelement <16 x double> %79, i32 6
  %extract156 = extractelement <16 x double> %79, i32 7
  %extract157 = extractelement <16 x double> %79, i32 8
  %extract158 = extractelement <16 x double> %79, i32 9
  %extract159 = extractelement <16 x double> %79, i32 10
  %extract160 = extractelement <16 x double> %79, i32 11
  %extract161 = extractelement <16 x double> %79, i32 12
  %extract162 = extractelement <16 x double> %79, i32 13
  %extract163 = extractelement <16 x double> %79, i32 14
  %extract164 = extractelement <16 x double> %79, i32 15
  %80 = tail call double @_Z3expd(double %extract149) nounwind
  %81 = tail call double @_Z3expd(double %extract150) nounwind
  %82 = tail call double @_Z3expd(double %extract151) nounwind
  %83 = tail call double @_Z3expd(double %extract152) nounwind
  %84 = tail call double @_Z3expd(double %extract153) nounwind
  %85 = tail call double @_Z3expd(double %extract154) nounwind
  %86 = tail call double @_Z3expd(double %extract155) nounwind
  %87 = tail call double @_Z3expd(double %extract156) nounwind
  %88 = tail call double @_Z3expd(double %extract157) nounwind
  %89 = tail call double @_Z3expd(double %extract158) nounwind
  %90 = tail call double @_Z3expd(double %extract159) nounwind
  %91 = tail call double @_Z3expd(double %extract160) nounwind
  %92 = tail call double @_Z3expd(double %extract161) nounwind
  %93 = tail call double @_Z3expd(double %extract162) nounwind
  %94 = tail call double @_Z3expd(double %extract163) nounwind
  %95 = tail call double @_Z3expd(double %extract164) nounwind
  %temp.vect184 = insertelement <16 x double> undef, double %80, i32 0
  %temp.vect185 = insertelement <16 x double> %temp.vect184, double %81, i32 1
  %temp.vect186 = insertelement <16 x double> %temp.vect185, double %82, i32 2
  %temp.vect187 = insertelement <16 x double> %temp.vect186, double %83, i32 3
  %temp.vect188 = insertelement <16 x double> %temp.vect187, double %84, i32 4
  %temp.vect189 = insertelement <16 x double> %temp.vect188, double %85, i32 5
  %temp.vect190 = insertelement <16 x double> %temp.vect189, double %86, i32 6
  %temp.vect191 = insertelement <16 x double> %temp.vect190, double %87, i32 7
  %temp.vect192 = insertelement <16 x double> %temp.vect191, double %88, i32 8
  %temp.vect193 = insertelement <16 x double> %temp.vect192, double %89, i32 9
  %temp.vect194 = insertelement <16 x double> %temp.vect193, double %90, i32 10
  %temp.vect195 = insertelement <16 x double> %temp.vect194, double %91, i32 11
  %temp.vect196 = insertelement <16 x double> %temp.vect195, double %92, i32 12
  %temp.vect197 = insertelement <16 x double> %temp.vect196, double %93, i32 13
  %temp.vect198 = insertelement <16 x double> %temp.vect197, double %94, i32 14
  %temp.vect199 = insertelement <16 x double> %temp.vect198, double %95, i32 15
  %96 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %97 = load i64* %96, align 8
  %98 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %99 = load i64* %98, align 8
  %100 = add i64 %97, %99
  %extract167 = add i64 %100, 221184
  %101 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract167
  %ptrTypeCast183 = bitcast double addrspace(1)* %101 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect199, <16 x double> addrspace(1)* %ptrTypeCast183, align 8
  %102 = fmul <16 x double> %temp.vect97, <double 2.400000e+00, double 2.400000e+00, double 2.400000e+00, double 2.400000e+00, double 2.400000e+00, double 2.400000e+00, double 2.400000e+00, double 2.400000e+00, double 2.400000e+00, double 2.400000e+00, double 2.400000e+00, double 2.400000e+00, double 2.400000e+00, double 2.400000e+00, double 2.400000e+00, double 2.400000e+00>
  %103 = fadd <16 x double> %102, <double 0x4024F73F748A1598, double 0x4024F73F748A1598, double 0x4024F73F748A1598, double 0x4024F73F748A1598, double 0x4024F73F748A1598, double 0x4024F73F748A1598, double 0x4024F73F748A1598, double 0x4024F73F748A1598, double 0x4024F73F748A1598, double 0x4024F73F748A1598, double 0x4024F73F748A1598, double 0x4024F73F748A1598, double 0x4024F73F748A1598, double 0x4024F73F748A1598, double 0x4024F73F748A1598, double 0x4024F73F748A1598>
  %104 = fmul <16 x double> %24, <double 0x409097260FE47992, double 0x409097260FE47992, double 0x409097260FE47992, double 0x409097260FE47992, double 0x409097260FE47992, double 0x409097260FE47992, double 0x409097260FE47992, double 0x409097260FE47992, double 0x409097260FE47992, double 0x409097260FE47992, double 0x409097260FE47992, double 0x409097260FE47992, double 0x409097260FE47992, double 0x409097260FE47992, double 0x409097260FE47992, double 0x409097260FE47992>
  %105 = fadd <16 x double> %103, %104
  %extract200 = extractelement <16 x double> %105, i32 0
  %extract201 = extractelement <16 x double> %105, i32 1
  %extract202 = extractelement <16 x double> %105, i32 2
  %extract203 = extractelement <16 x double> %105, i32 3
  %extract204 = extractelement <16 x double> %105, i32 4
  %extract205 = extractelement <16 x double> %105, i32 5
  %extract206 = extractelement <16 x double> %105, i32 6
  %extract207 = extractelement <16 x double> %105, i32 7
  %extract208 = extractelement <16 x double> %105, i32 8
  %extract209 = extractelement <16 x double> %105, i32 9
  %extract210 = extractelement <16 x double> %105, i32 10
  %extract211 = extractelement <16 x double> %105, i32 11
  %extract212 = extractelement <16 x double> %105, i32 12
  %extract213 = extractelement <16 x double> %105, i32 13
  %extract214 = extractelement <16 x double> %105, i32 14
  %extract215 = extractelement <16 x double> %105, i32 15
  %106 = tail call double @_Z3expd(double %extract200) nounwind
  %107 = tail call double @_Z3expd(double %extract201) nounwind
  %108 = tail call double @_Z3expd(double %extract202) nounwind
  %109 = tail call double @_Z3expd(double %extract203) nounwind
  %110 = tail call double @_Z3expd(double %extract204) nounwind
  %111 = tail call double @_Z3expd(double %extract205) nounwind
  %112 = tail call double @_Z3expd(double %extract206) nounwind
  %113 = tail call double @_Z3expd(double %extract207) nounwind
  %114 = tail call double @_Z3expd(double %extract208) nounwind
  %115 = tail call double @_Z3expd(double %extract209) nounwind
  %116 = tail call double @_Z3expd(double %extract210) nounwind
  %117 = tail call double @_Z3expd(double %extract211) nounwind
  %118 = tail call double @_Z3expd(double %extract212) nounwind
  %119 = tail call double @_Z3expd(double %extract213) nounwind
  %120 = tail call double @_Z3expd(double %extract214) nounwind
  %121 = tail call double @_Z3expd(double %extract215) nounwind
  %temp.vect235 = insertelement <16 x double> undef, double %106, i32 0
  %temp.vect236 = insertelement <16 x double> %temp.vect235, double %107, i32 1
  %temp.vect237 = insertelement <16 x double> %temp.vect236, double %108, i32 2
  %temp.vect238 = insertelement <16 x double> %temp.vect237, double %109, i32 3
  %temp.vect239 = insertelement <16 x double> %temp.vect238, double %110, i32 4
  %temp.vect240 = insertelement <16 x double> %temp.vect239, double %111, i32 5
  %temp.vect241 = insertelement <16 x double> %temp.vect240, double %112, i32 6
  %temp.vect242 = insertelement <16 x double> %temp.vect241, double %113, i32 7
  %temp.vect243 = insertelement <16 x double> %temp.vect242, double %114, i32 8
  %temp.vect244 = insertelement <16 x double> %temp.vect243, double %115, i32 9
  %temp.vect245 = insertelement <16 x double> %temp.vect244, double %116, i32 10
  %temp.vect246 = insertelement <16 x double> %temp.vect245, double %117, i32 11
  %temp.vect247 = insertelement <16 x double> %temp.vect246, double %118, i32 12
  %temp.vect248 = insertelement <16 x double> %temp.vect247, double %119, i32 13
  %temp.vect249 = insertelement <16 x double> %temp.vect248, double %120, i32 14
  %temp.vect250 = insertelement <16 x double> %temp.vect249, double %121, i32 15
  %122 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %123 = load i64* %122, align 8
  %124 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %125 = load i64* %124, align 8
  %126 = add i64 %123, %125
  %extract218 = add i64 %126, 331776
  %127 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract218
  %ptrTypeCast234 = bitcast double addrspace(1)* %127 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect250, <16 x double> addrspace(1)* %ptrTypeCast234, align 8
  %128 = fmul <16 x double> %24, <double 1.000000e+18, double 1.000000e+18, double 1.000000e+18, double 1.000000e+18, double 1.000000e+18, double 1.000000e+18, double 1.000000e+18, double 1.000000e+18, double 1.000000e+18, double 1.000000e+18, double 1.000000e+18, double 1.000000e+18, double 1.000000e+18, double 1.000000e+18, double 1.000000e+18, double 1.000000e+18>
  %129 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %130 = load i64* %129, align 8
  %131 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %132 = load i64* %131, align 8
  %133 = add i64 %130, %132
  %extract253 = add i64 %133, 442368
  %134 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract253
  %ptrTypeCast269 = bitcast double addrspace(1)* %134 to <16 x double> addrspace(1)*
  store <16 x double> %128, <16 x double> addrspace(1)* %ptrTypeCast269, align 8
  %135 = fmul <16 x double> %temp.vect97, <double 6.000000e-01, double 6.000000e-01, double 6.000000e-01, double 6.000000e-01, double 6.000000e-01, double 6.000000e-01, double 6.000000e-01, double 6.000000e-01, double 6.000000e-01, double 6.000000e-01, double 6.000000e-01, double 6.000000e-01, double 6.000000e-01, double 6.000000e-01, double 6.000000e-01, double 6.000000e-01>
  %136 = fsub <16 x double> <double 0x404384F063AACA44, double 0x404384F063AACA44, double 0x404384F063AACA44, double 0x404384F063AACA44, double 0x404384F063AACA44, double 0x404384F063AACA44, double 0x404384F063AACA44, double 0x404384F063AACA44, double 0x404384F063AACA44, double 0x404384F063AACA44, double 0x404384F063AACA44, double 0x404384F063AACA44, double 0x404384F063AACA44, double 0x404384F063AACA44, double 0x404384F063AACA44, double 0x404384F063AACA44>, %135
  %extract270 = extractelement <16 x double> %136, i32 0
  %extract271 = extractelement <16 x double> %136, i32 1
  %extract272 = extractelement <16 x double> %136, i32 2
  %extract273 = extractelement <16 x double> %136, i32 3
  %extract274 = extractelement <16 x double> %136, i32 4
  %extract275 = extractelement <16 x double> %136, i32 5
  %extract276 = extractelement <16 x double> %136, i32 6
  %extract277 = extractelement <16 x double> %136, i32 7
  %extract278 = extractelement <16 x double> %136, i32 8
  %extract279 = extractelement <16 x double> %136, i32 9
  %extract280 = extractelement <16 x double> %136, i32 10
  %extract281 = extractelement <16 x double> %136, i32 11
  %extract282 = extractelement <16 x double> %136, i32 12
  %extract283 = extractelement <16 x double> %136, i32 13
  %extract284 = extractelement <16 x double> %136, i32 14
  %extract285 = extractelement <16 x double> %136, i32 15
  %137 = tail call double @_Z3expd(double %extract270) nounwind
  %138 = tail call double @_Z3expd(double %extract271) nounwind
  %139 = tail call double @_Z3expd(double %extract272) nounwind
  %140 = tail call double @_Z3expd(double %extract273) nounwind
  %141 = tail call double @_Z3expd(double %extract274) nounwind
  %142 = tail call double @_Z3expd(double %extract275) nounwind
  %143 = tail call double @_Z3expd(double %extract276) nounwind
  %144 = tail call double @_Z3expd(double %extract277) nounwind
  %145 = tail call double @_Z3expd(double %extract278) nounwind
  %146 = tail call double @_Z3expd(double %extract279) nounwind
  %147 = tail call double @_Z3expd(double %extract280) nounwind
  %148 = tail call double @_Z3expd(double %extract281) nounwind
  %149 = tail call double @_Z3expd(double %extract282) nounwind
  %150 = tail call double @_Z3expd(double %extract283) nounwind
  %151 = tail call double @_Z3expd(double %extract284) nounwind
  %152 = tail call double @_Z3expd(double %extract285) nounwind
  %temp.vect305 = insertelement <16 x double> undef, double %137, i32 0
  %temp.vect306 = insertelement <16 x double> %temp.vect305, double %138, i32 1
  %temp.vect307 = insertelement <16 x double> %temp.vect306, double %139, i32 2
  %temp.vect308 = insertelement <16 x double> %temp.vect307, double %140, i32 3
  %temp.vect309 = insertelement <16 x double> %temp.vect308, double %141, i32 4
  %temp.vect310 = insertelement <16 x double> %temp.vect309, double %142, i32 5
  %temp.vect311 = insertelement <16 x double> %temp.vect310, double %143, i32 6
  %temp.vect312 = insertelement <16 x double> %temp.vect311, double %144, i32 7
  %temp.vect313 = insertelement <16 x double> %temp.vect312, double %145, i32 8
  %temp.vect314 = insertelement <16 x double> %temp.vect313, double %146, i32 9
  %temp.vect315 = insertelement <16 x double> %temp.vect314, double %147, i32 10
  %temp.vect316 = insertelement <16 x double> %temp.vect315, double %148, i32 11
  %temp.vect317 = insertelement <16 x double> %temp.vect316, double %149, i32 12
  %temp.vect318 = insertelement <16 x double> %temp.vect317, double %150, i32 13
  %temp.vect319 = insertelement <16 x double> %temp.vect318, double %151, i32 14
  %temp.vect320 = insertelement <16 x double> %temp.vect319, double %152, i32 15
  %153 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %154 = load i64* %153, align 8
  %155 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %156 = load i64* %155, align 8
  %157 = add i64 %154, %156
  %extract288 = add i64 %157, 552960
  %158 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract288
  %ptrTypeCast304 = bitcast double addrspace(1)* %158 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect320, <16 x double> addrspace(1)* %ptrTypeCast304, align 8
  %159 = fmul <16 x double> %temp.vect97, <double 1.250000e+00, double 1.250000e+00, double 1.250000e+00, double 1.250000e+00, double 1.250000e+00, double 1.250000e+00, double 1.250000e+00, double 1.250000e+00, double 1.250000e+00, double 1.250000e+00, double 1.250000e+00, double 1.250000e+00, double 1.250000e+00, double 1.250000e+00, double 1.250000e+00, double 1.250000e+00>
  %160 = fsub <16 x double> <double 0x4046C53B6E6B17A6, double 0x4046C53B6E6B17A6, double 0x4046C53B6E6B17A6, double 0x4046C53B6E6B17A6, double 0x4046C53B6E6B17A6, double 0x4046C53B6E6B17A6, double 0x4046C53B6E6B17A6, double 0x4046C53B6E6B17A6, double 0x4046C53B6E6B17A6, double 0x4046C53B6E6B17A6, double 0x4046C53B6E6B17A6, double 0x4046C53B6E6B17A6, double 0x4046C53B6E6B17A6, double 0x4046C53B6E6B17A6, double 0x4046C53B6E6B17A6, double 0x4046C53B6E6B17A6>, %159
  %extract321 = extractelement <16 x double> %160, i32 0
  %extract322 = extractelement <16 x double> %160, i32 1
  %extract323 = extractelement <16 x double> %160, i32 2
  %extract324 = extractelement <16 x double> %160, i32 3
  %extract325 = extractelement <16 x double> %160, i32 4
  %extract326 = extractelement <16 x double> %160, i32 5
  %extract327 = extractelement <16 x double> %160, i32 6
  %extract328 = extractelement <16 x double> %160, i32 7
  %extract329 = extractelement <16 x double> %160, i32 8
  %extract330 = extractelement <16 x double> %160, i32 9
  %extract331 = extractelement <16 x double> %160, i32 10
  %extract332 = extractelement <16 x double> %160, i32 11
  %extract333 = extractelement <16 x double> %160, i32 12
  %extract334 = extractelement <16 x double> %160, i32 13
  %extract335 = extractelement <16 x double> %160, i32 14
  %extract336 = extractelement <16 x double> %160, i32 15
  %161 = tail call double @_Z3expd(double %extract321) nounwind
  %162 = tail call double @_Z3expd(double %extract322) nounwind
  %163 = tail call double @_Z3expd(double %extract323) nounwind
  %164 = tail call double @_Z3expd(double %extract324) nounwind
  %165 = tail call double @_Z3expd(double %extract325) nounwind
  %166 = tail call double @_Z3expd(double %extract326) nounwind
  %167 = tail call double @_Z3expd(double %extract327) nounwind
  %168 = tail call double @_Z3expd(double %extract328) nounwind
  %169 = tail call double @_Z3expd(double %extract329) nounwind
  %170 = tail call double @_Z3expd(double %extract330) nounwind
  %171 = tail call double @_Z3expd(double %extract331) nounwind
  %172 = tail call double @_Z3expd(double %extract332) nounwind
  %173 = tail call double @_Z3expd(double %extract333) nounwind
  %174 = tail call double @_Z3expd(double %extract334) nounwind
  %175 = tail call double @_Z3expd(double %extract335) nounwind
  %176 = tail call double @_Z3expd(double %extract336) nounwind
  %temp.vect356 = insertelement <16 x double> undef, double %161, i32 0
  %temp.vect357 = insertelement <16 x double> %temp.vect356, double %162, i32 1
  %temp.vect358 = insertelement <16 x double> %temp.vect357, double %163, i32 2
  %temp.vect359 = insertelement <16 x double> %temp.vect358, double %164, i32 3
  %temp.vect360 = insertelement <16 x double> %temp.vect359, double %165, i32 4
  %temp.vect361 = insertelement <16 x double> %temp.vect360, double %166, i32 5
  %temp.vect362 = insertelement <16 x double> %temp.vect361, double %167, i32 6
  %temp.vect363 = insertelement <16 x double> %temp.vect362, double %168, i32 7
  %temp.vect364 = insertelement <16 x double> %temp.vect363, double %169, i32 8
  %temp.vect365 = insertelement <16 x double> %temp.vect364, double %170, i32 9
  %temp.vect366 = insertelement <16 x double> %temp.vect365, double %171, i32 10
  %temp.vect367 = insertelement <16 x double> %temp.vect366, double %172, i32 11
  %temp.vect368 = insertelement <16 x double> %temp.vect367, double %173, i32 12
  %temp.vect369 = insertelement <16 x double> %temp.vect368, double %174, i32 13
  %temp.vect370 = insertelement <16 x double> %temp.vect369, double %175, i32 14
  %temp.vect371 = insertelement <16 x double> %temp.vect370, double %176, i32 15
  %177 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %178 = load i64* %177, align 8
  %179 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %180 = load i64* %179, align 8
  %181 = add i64 %178, %180
  %extract339 = add i64 %181, 663552
  %182 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract339
  %ptrTypeCast355 = bitcast double addrspace(1)* %182 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect371, <16 x double> addrspace(1)* %ptrTypeCast355, align 8
  %183 = fmul <16 x double> %25, <double 5.500000e+20, double 5.500000e+20, double 5.500000e+20, double 5.500000e+20, double 5.500000e+20, double 5.500000e+20, double 5.500000e+20, double 5.500000e+20, double 5.500000e+20, double 5.500000e+20, double 5.500000e+20, double 5.500000e+20, double 5.500000e+20, double 5.500000e+20, double 5.500000e+20, double 5.500000e+20>
  %184 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %185 = load i64* %184, align 8
  %186 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %187 = load i64* %186, align 8
  %188 = add i64 %185, %187
  %extract374 = add i64 %188, 774144
  %189 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract374
  %ptrTypeCast390 = bitcast double addrspace(1)* %189 to <16 x double> addrspace(1)*
  store <16 x double> %183, <16 x double> addrspace(1)* %ptrTypeCast390, align 8
  %190 = fmul <16 x double> %25, <double 2.200000e+22, double 2.200000e+22, double 2.200000e+22, double 2.200000e+22, double 2.200000e+22, double 2.200000e+22, double 2.200000e+22, double 2.200000e+22, double 2.200000e+22, double 2.200000e+22, double 2.200000e+22, double 2.200000e+22, double 2.200000e+22, double 2.200000e+22, double 2.200000e+22, double 2.200000e+22>
  %191 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %192 = load i64* %191, align 8
  %193 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %194 = load i64* %193, align 8
  %195 = add i64 %192, %194
  %extract393 = add i64 %195, 884736
  %196 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract393
  %ptrTypeCast409 = bitcast double addrspace(1)* %196 to <16 x double> addrspace(1)*
  store <16 x double> %190, <16 x double> addrspace(1)* %ptrTypeCast409, align 8
  %197 = fmul <16 x double> %24, <double 5.000000e+17, double 5.000000e+17, double 5.000000e+17, double 5.000000e+17, double 5.000000e+17, double 5.000000e+17, double 5.000000e+17, double 5.000000e+17, double 5.000000e+17, double 5.000000e+17, double 5.000000e+17, double 5.000000e+17, double 5.000000e+17, double 5.000000e+17, double 5.000000e+17, double 5.000000e+17>
  %198 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %199 = load i64* %198, align 8
  %200 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %201 = load i64* %200, align 8
  %202 = add i64 %199, %201
  %extract412 = add i64 %202, 995328
  %203 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract412
  %ptrTypeCast428 = bitcast double addrspace(1)* %203 to <16 x double> addrspace(1)*
  store <16 x double> %197, <16 x double> addrspace(1)* %ptrTypeCast428, align 8
  %204 = fmul <16 x double> %24, <double 1.200000e+17, double 1.200000e+17, double 1.200000e+17, double 1.200000e+17, double 1.200000e+17, double 1.200000e+17, double 1.200000e+17, double 1.200000e+17, double 1.200000e+17, double 1.200000e+17, double 1.200000e+17, double 1.200000e+17, double 1.200000e+17, double 1.200000e+17, double 1.200000e+17, double 1.200000e+17>
  %205 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %206 = load i64* %205, align 8
  %207 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %208 = load i64* %207, align 8
  %209 = add i64 %206, %208
  %extract431 = add i64 %209, 1105920
  %210 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract431
  %ptrTypeCast447 = bitcast double addrspace(1)* %210 to <16 x double> addrspace(1)*
  store <16 x double> %204, <16 x double> addrspace(1)* %ptrTypeCast447, align 8
  %211 = fmul <16 x double> %temp.vect97, <double 8.600000e-01, double 8.600000e-01, double 8.600000e-01, double 8.600000e-01, double 8.600000e-01, double 8.600000e-01, double 8.600000e-01, double 8.600000e-01, double 8.600000e-01, double 8.600000e-01, double 8.600000e-01, double 8.600000e-01, double 8.600000e-01, double 8.600000e-01, double 8.600000e-01, double 8.600000e-01>
  %212 = fsub <16 x double> <double 0x40453CF284ED3A2B, double 0x40453CF284ED3A2B, double 0x40453CF284ED3A2B, double 0x40453CF284ED3A2B, double 0x40453CF284ED3A2B, double 0x40453CF284ED3A2B, double 0x40453CF284ED3A2B, double 0x40453CF284ED3A2B, double 0x40453CF284ED3A2B, double 0x40453CF284ED3A2B, double 0x40453CF284ED3A2B, double 0x40453CF284ED3A2B, double 0x40453CF284ED3A2B, double 0x40453CF284ED3A2B, double 0x40453CF284ED3A2B, double 0x40453CF284ED3A2B>, %211
  %extract448 = extractelement <16 x double> %212, i32 0
  %extract449 = extractelement <16 x double> %212, i32 1
  %extract450 = extractelement <16 x double> %212, i32 2
  %extract451 = extractelement <16 x double> %212, i32 3
  %extract452 = extractelement <16 x double> %212, i32 4
  %extract453 = extractelement <16 x double> %212, i32 5
  %extract454 = extractelement <16 x double> %212, i32 6
  %extract455 = extractelement <16 x double> %212, i32 7
  %extract456 = extractelement <16 x double> %212, i32 8
  %extract457 = extractelement <16 x double> %212, i32 9
  %extract458 = extractelement <16 x double> %212, i32 10
  %extract459 = extractelement <16 x double> %212, i32 11
  %extract460 = extractelement <16 x double> %212, i32 12
  %extract461 = extractelement <16 x double> %212, i32 13
  %extract462 = extractelement <16 x double> %212, i32 14
  %extract463 = extractelement <16 x double> %212, i32 15
  %213 = tail call double @_Z3expd(double %extract448) nounwind
  %214 = tail call double @_Z3expd(double %extract449) nounwind
  %215 = tail call double @_Z3expd(double %extract450) nounwind
  %216 = tail call double @_Z3expd(double %extract451) nounwind
  %217 = tail call double @_Z3expd(double %extract452) nounwind
  %218 = tail call double @_Z3expd(double %extract453) nounwind
  %219 = tail call double @_Z3expd(double %extract454) nounwind
  %220 = tail call double @_Z3expd(double %extract455) nounwind
  %221 = tail call double @_Z3expd(double %extract456) nounwind
  %222 = tail call double @_Z3expd(double %extract457) nounwind
  %223 = tail call double @_Z3expd(double %extract458) nounwind
  %224 = tail call double @_Z3expd(double %extract459) nounwind
  %225 = tail call double @_Z3expd(double %extract460) nounwind
  %226 = tail call double @_Z3expd(double %extract461) nounwind
  %227 = tail call double @_Z3expd(double %extract462) nounwind
  %228 = tail call double @_Z3expd(double %extract463) nounwind
  %temp.vect483 = insertelement <16 x double> undef, double %213, i32 0
  %temp.vect484 = insertelement <16 x double> %temp.vect483, double %214, i32 1
  %temp.vect485 = insertelement <16 x double> %temp.vect484, double %215, i32 2
  %temp.vect486 = insertelement <16 x double> %temp.vect485, double %216, i32 3
  %temp.vect487 = insertelement <16 x double> %temp.vect486, double %217, i32 4
  %temp.vect488 = insertelement <16 x double> %temp.vect487, double %218, i32 5
  %temp.vect489 = insertelement <16 x double> %temp.vect488, double %219, i32 6
  %temp.vect490 = insertelement <16 x double> %temp.vect489, double %220, i32 7
  %temp.vect491 = insertelement <16 x double> %temp.vect490, double %221, i32 8
  %temp.vect492 = insertelement <16 x double> %temp.vect491, double %222, i32 9
  %temp.vect493 = insertelement <16 x double> %temp.vect492, double %223, i32 10
  %temp.vect494 = insertelement <16 x double> %temp.vect493, double %224, i32 11
  %temp.vect495 = insertelement <16 x double> %temp.vect494, double %225, i32 12
  %temp.vect496 = insertelement <16 x double> %temp.vect495, double %226, i32 13
  %temp.vect497 = insertelement <16 x double> %temp.vect496, double %227, i32 14
  %temp.vect498 = insertelement <16 x double> %temp.vect497, double %228, i32 15
  %229 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %230 = load i64* %229, align 8
  %231 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %232 = load i64* %231, align 8
  %233 = add i64 %230, %232
  %extract466 = add i64 %233, 1216512
  %234 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract466
  %ptrTypeCast482 = bitcast double addrspace(1)* %234 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect498, <16 x double> addrspace(1)* %ptrTypeCast482, align 8
  %235 = fmul <16 x double> %temp.vect97, <double 1.720000e+00, double 1.720000e+00, double 1.720000e+00, double 1.720000e+00, double 1.720000e+00, double 1.720000e+00, double 1.720000e+00, double 1.720000e+00, double 1.720000e+00, double 1.720000e+00, double 1.720000e+00, double 1.720000e+00, double 1.720000e+00, double 1.720000e+00, double 1.720000e+00, double 1.720000e+00>
  %236 = fsub <16 x double> <double 0x4047933D7E0FD058, double 0x4047933D7E0FD058, double 0x4047933D7E0FD058, double 0x4047933D7E0FD058, double 0x4047933D7E0FD058, double 0x4047933D7E0FD058, double 0x4047933D7E0FD058, double 0x4047933D7E0FD058, double 0x4047933D7E0FD058, double 0x4047933D7E0FD058, double 0x4047933D7E0FD058, double 0x4047933D7E0FD058, double 0x4047933D7E0FD058, double 0x4047933D7E0FD058, double 0x4047933D7E0FD058, double 0x4047933D7E0FD058>, %235
  %extract499 = extractelement <16 x double> %236, i32 0
  %extract500 = extractelement <16 x double> %236, i32 1
  %extract501 = extractelement <16 x double> %236, i32 2
  %extract502 = extractelement <16 x double> %236, i32 3
  %extract503 = extractelement <16 x double> %236, i32 4
  %extract504 = extractelement <16 x double> %236, i32 5
  %extract505 = extractelement <16 x double> %236, i32 6
  %extract506 = extractelement <16 x double> %236, i32 7
  %extract507 = extractelement <16 x double> %236, i32 8
  %extract508 = extractelement <16 x double> %236, i32 9
  %extract509 = extractelement <16 x double> %236, i32 10
  %extract510 = extractelement <16 x double> %236, i32 11
  %extract511 = extractelement <16 x double> %236, i32 12
  %extract512 = extractelement <16 x double> %236, i32 13
  %extract513 = extractelement <16 x double> %236, i32 14
  %extract514 = extractelement <16 x double> %236, i32 15
  %237 = tail call double @_Z3expd(double %extract499) nounwind
  %238 = tail call double @_Z3expd(double %extract500) nounwind
  %239 = tail call double @_Z3expd(double %extract501) nounwind
  %240 = tail call double @_Z3expd(double %extract502) nounwind
  %241 = tail call double @_Z3expd(double %extract503) nounwind
  %242 = tail call double @_Z3expd(double %extract504) nounwind
  %243 = tail call double @_Z3expd(double %extract505) nounwind
  %244 = tail call double @_Z3expd(double %extract506) nounwind
  %245 = tail call double @_Z3expd(double %extract507) nounwind
  %246 = tail call double @_Z3expd(double %extract508) nounwind
  %247 = tail call double @_Z3expd(double %extract509) nounwind
  %248 = tail call double @_Z3expd(double %extract510) nounwind
  %249 = tail call double @_Z3expd(double %extract511) nounwind
  %250 = tail call double @_Z3expd(double %extract512) nounwind
  %251 = tail call double @_Z3expd(double %extract513) nounwind
  %252 = tail call double @_Z3expd(double %extract514) nounwind
  %temp.vect534 = insertelement <16 x double> undef, double %237, i32 0
  %temp.vect535 = insertelement <16 x double> %temp.vect534, double %238, i32 1
  %temp.vect536 = insertelement <16 x double> %temp.vect535, double %239, i32 2
  %temp.vect537 = insertelement <16 x double> %temp.vect536, double %240, i32 3
  %temp.vect538 = insertelement <16 x double> %temp.vect537, double %241, i32 4
  %temp.vect539 = insertelement <16 x double> %temp.vect538, double %242, i32 5
  %temp.vect540 = insertelement <16 x double> %temp.vect539, double %243, i32 6
  %temp.vect541 = insertelement <16 x double> %temp.vect540, double %244, i32 7
  %temp.vect542 = insertelement <16 x double> %temp.vect541, double %245, i32 8
  %temp.vect543 = insertelement <16 x double> %temp.vect542, double %246, i32 9
  %temp.vect544 = insertelement <16 x double> %temp.vect543, double %247, i32 10
  %temp.vect545 = insertelement <16 x double> %temp.vect544, double %248, i32 11
  %temp.vect546 = insertelement <16 x double> %temp.vect545, double %249, i32 12
  %temp.vect547 = insertelement <16 x double> %temp.vect546, double %250, i32 13
  %temp.vect548 = insertelement <16 x double> %temp.vect547, double %251, i32 14
  %temp.vect549 = insertelement <16 x double> %temp.vect548, double %252, i32 15
  %253 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %254 = load i64* %253, align 8
  %255 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %256 = load i64* %255, align 8
  %257 = add i64 %254, %256
  %extract517 = add i64 %257, 1327104
  %258 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract517
  %ptrTypeCast533 = bitcast double addrspace(1)* %258 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect549, <16 x double> addrspace(1)* %ptrTypeCast533, align 8
  %259 = fmul <16 x double> %temp.vect97, <double 7.600000e-01, double 7.600000e-01, double 7.600000e-01, double 7.600000e-01, double 7.600000e-01, double 7.600000e-01, double 7.600000e-01, double 7.600000e-01, double 7.600000e-01, double 7.600000e-01, double 7.600000e-01, double 7.600000e-01, double 7.600000e-01, double 7.600000e-01, double 7.600000e-01, double 7.600000e-01>
  %260 = fsub <16 x double> <double 0x4046202427FD750B, double 0x4046202427FD750B, double 0x4046202427FD750B, double 0x4046202427FD750B, double 0x4046202427FD750B, double 0x4046202427FD750B, double 0x4046202427FD750B, double 0x4046202427FD750B, double 0x4046202427FD750B, double 0x4046202427FD750B, double 0x4046202427FD750B, double 0x4046202427FD750B, double 0x4046202427FD750B, double 0x4046202427FD750B, double 0x4046202427FD750B, double 0x4046202427FD750B>, %259
  %extract550 = extractelement <16 x double> %260, i32 0
  %extract551 = extractelement <16 x double> %260, i32 1
  %extract552 = extractelement <16 x double> %260, i32 2
  %extract553 = extractelement <16 x double> %260, i32 3
  %extract554 = extractelement <16 x double> %260, i32 4
  %extract555 = extractelement <16 x double> %260, i32 5
  %extract556 = extractelement <16 x double> %260, i32 6
  %extract557 = extractelement <16 x double> %260, i32 7
  %extract558 = extractelement <16 x double> %260, i32 8
  %extract559 = extractelement <16 x double> %260, i32 9
  %extract560 = extractelement <16 x double> %260, i32 10
  %extract561 = extractelement <16 x double> %260, i32 11
  %extract562 = extractelement <16 x double> %260, i32 12
  %extract563 = extractelement <16 x double> %260, i32 13
  %extract564 = extractelement <16 x double> %260, i32 14
  %extract565 = extractelement <16 x double> %260, i32 15
  %261 = tail call double @_Z3expd(double %extract550) nounwind
  %262 = tail call double @_Z3expd(double %extract551) nounwind
  %263 = tail call double @_Z3expd(double %extract552) nounwind
  %264 = tail call double @_Z3expd(double %extract553) nounwind
  %265 = tail call double @_Z3expd(double %extract554) nounwind
  %266 = tail call double @_Z3expd(double %extract555) nounwind
  %267 = tail call double @_Z3expd(double %extract556) nounwind
  %268 = tail call double @_Z3expd(double %extract557) nounwind
  %269 = tail call double @_Z3expd(double %extract558) nounwind
  %270 = tail call double @_Z3expd(double %extract559) nounwind
  %271 = tail call double @_Z3expd(double %extract560) nounwind
  %272 = tail call double @_Z3expd(double %extract561) nounwind
  %273 = tail call double @_Z3expd(double %extract562) nounwind
  %274 = tail call double @_Z3expd(double %extract563) nounwind
  %275 = tail call double @_Z3expd(double %extract564) nounwind
  %276 = tail call double @_Z3expd(double %extract565) nounwind
  %temp.vect585 = insertelement <16 x double> undef, double %261, i32 0
  %temp.vect586 = insertelement <16 x double> %temp.vect585, double %262, i32 1
  %temp.vect587 = insertelement <16 x double> %temp.vect586, double %263, i32 2
  %temp.vect588 = insertelement <16 x double> %temp.vect587, double %264, i32 3
  %temp.vect589 = insertelement <16 x double> %temp.vect588, double %265, i32 4
  %temp.vect590 = insertelement <16 x double> %temp.vect589, double %266, i32 5
  %temp.vect591 = insertelement <16 x double> %temp.vect590, double %267, i32 6
  %temp.vect592 = insertelement <16 x double> %temp.vect591, double %268, i32 7
  %temp.vect593 = insertelement <16 x double> %temp.vect592, double %269, i32 8
  %temp.vect594 = insertelement <16 x double> %temp.vect593, double %270, i32 9
  %temp.vect595 = insertelement <16 x double> %temp.vect594, double %271, i32 10
  %temp.vect596 = insertelement <16 x double> %temp.vect595, double %272, i32 11
  %temp.vect597 = insertelement <16 x double> %temp.vect596, double %273, i32 12
  %temp.vect598 = insertelement <16 x double> %temp.vect597, double %274, i32 13
  %temp.vect599 = insertelement <16 x double> %temp.vect598, double %275, i32 14
  %temp.vect600 = insertelement <16 x double> %temp.vect599, double %276, i32 15
  %277 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %278 = load i64* %277, align 8
  %279 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %280 = load i64* %279, align 8
  %281 = add i64 %278, %280
  %extract568 = add i64 %281, 1437696
  %282 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract568
  %ptrTypeCast584 = bitcast double addrspace(1)* %282 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect600, <16 x double> addrspace(1)* %ptrTypeCast584, align 8
  %283 = fmul <16 x double> %temp.vect97, <double 1.240000e+00, double 1.240000e+00, double 1.240000e+00, double 1.240000e+00, double 1.240000e+00, double 1.240000e+00, double 1.240000e+00, double 1.240000e+00, double 1.240000e+00, double 1.240000e+00, double 1.240000e+00, double 1.240000e+00, double 1.240000e+00, double 1.240000e+00, double 1.240000e+00, double 1.240000e+00>
  %284 = fsub <16 x double> <double 0x40465A3141C16B70, double 0x40465A3141C16B70, double 0x40465A3141C16B70, double 0x40465A3141C16B70, double 0x40465A3141C16B70, double 0x40465A3141C16B70, double 0x40465A3141C16B70, double 0x40465A3141C16B70, double 0x40465A3141C16B70, double 0x40465A3141C16B70, double 0x40465A3141C16B70, double 0x40465A3141C16B70, double 0x40465A3141C16B70, double 0x40465A3141C16B70, double 0x40465A3141C16B70, double 0x40465A3141C16B70>, %283
  %extract601 = extractelement <16 x double> %284, i32 0
  %extract602 = extractelement <16 x double> %284, i32 1
  %extract603 = extractelement <16 x double> %284, i32 2
  %extract604 = extractelement <16 x double> %284, i32 3
  %extract605 = extractelement <16 x double> %284, i32 4
  %extract606 = extractelement <16 x double> %284, i32 5
  %extract607 = extractelement <16 x double> %284, i32 6
  %extract608 = extractelement <16 x double> %284, i32 7
  %extract609 = extractelement <16 x double> %284, i32 8
  %extract610 = extractelement <16 x double> %284, i32 9
  %extract611 = extractelement <16 x double> %284, i32 10
  %extract612 = extractelement <16 x double> %284, i32 11
  %extract613 = extractelement <16 x double> %284, i32 12
  %extract614 = extractelement <16 x double> %284, i32 13
  %extract615 = extractelement <16 x double> %284, i32 14
  %extract616 = extractelement <16 x double> %284, i32 15
  %285 = tail call double @_Z3expd(double %extract601) nounwind
  %286 = tail call double @_Z3expd(double %extract602) nounwind
  %287 = tail call double @_Z3expd(double %extract603) nounwind
  %288 = tail call double @_Z3expd(double %extract604) nounwind
  %289 = tail call double @_Z3expd(double %extract605) nounwind
  %290 = tail call double @_Z3expd(double %extract606) nounwind
  %291 = tail call double @_Z3expd(double %extract607) nounwind
  %292 = tail call double @_Z3expd(double %extract608) nounwind
  %293 = tail call double @_Z3expd(double %extract609) nounwind
  %294 = tail call double @_Z3expd(double %extract610) nounwind
  %295 = tail call double @_Z3expd(double %extract611) nounwind
  %296 = tail call double @_Z3expd(double %extract612) nounwind
  %297 = tail call double @_Z3expd(double %extract613) nounwind
  %298 = tail call double @_Z3expd(double %extract614) nounwind
  %299 = tail call double @_Z3expd(double %extract615) nounwind
  %300 = tail call double @_Z3expd(double %extract616) nounwind
  %temp.vect636 = insertelement <16 x double> undef, double %285, i32 0
  %temp.vect637 = insertelement <16 x double> %temp.vect636, double %286, i32 1
  %temp.vect638 = insertelement <16 x double> %temp.vect637, double %287, i32 2
  %temp.vect639 = insertelement <16 x double> %temp.vect638, double %288, i32 3
  %temp.vect640 = insertelement <16 x double> %temp.vect639, double %289, i32 4
  %temp.vect641 = insertelement <16 x double> %temp.vect640, double %290, i32 5
  %temp.vect642 = insertelement <16 x double> %temp.vect641, double %291, i32 6
  %temp.vect643 = insertelement <16 x double> %temp.vect642, double %292, i32 7
  %temp.vect644 = insertelement <16 x double> %temp.vect643, double %293, i32 8
  %temp.vect645 = insertelement <16 x double> %temp.vect644, double %294, i32 9
  %temp.vect646 = insertelement <16 x double> %temp.vect645, double %295, i32 10
  %temp.vect647 = insertelement <16 x double> %temp.vect646, double %296, i32 11
  %temp.vect648 = insertelement <16 x double> %temp.vect647, double %297, i32 12
  %temp.vect649 = insertelement <16 x double> %temp.vect648, double %298, i32 13
  %temp.vect650 = insertelement <16 x double> %temp.vect649, double %299, i32 14
  %temp.vect651 = insertelement <16 x double> %temp.vect650, double %300, i32 15
  %301 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %302 = load i64* %301, align 8
  %303 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %304 = load i64* %303, align 8
  %305 = add i64 %302, %304
  %extract619 = add i64 %305, 1548288
  %306 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract619
  %ptrTypeCast635 = bitcast double addrspace(1)* %306 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect651, <16 x double> addrspace(1)* %ptrTypeCast635, align 8
  %307 = fmul <16 x double> %temp.vect97, <double 3.700000e-01, double 3.700000e-01, double 3.700000e-01, double 3.700000e-01, double 3.700000e-01, double 3.700000e-01, double 3.700000e-01, double 3.700000e-01, double 3.700000e-01, double 3.700000e-01, double 3.700000e-01, double 3.700000e-01, double 3.700000e-01, double 3.700000e-01, double 3.700000e-01, double 3.700000e-01>
  %308 = fsub <16 x double> <double 0x403FEF61CF27F0E0, double 0x403FEF61CF27F0E0, double 0x403FEF61CF27F0E0, double 0x403FEF61CF27F0E0, double 0x403FEF61CF27F0E0, double 0x403FEF61CF27F0E0, double 0x403FEF61CF27F0E0, double 0x403FEF61CF27F0E0, double 0x403FEF61CF27F0E0, double 0x403FEF61CF27F0E0, double 0x403FEF61CF27F0E0, double 0x403FEF61CF27F0E0, double 0x403FEF61CF27F0E0, double 0x403FEF61CF27F0E0, double 0x403FEF61CF27F0E0, double 0x403FEF61CF27F0E0>, %307
  %extract652 = extractelement <16 x double> %308, i32 0
  %extract653 = extractelement <16 x double> %308, i32 1
  %extract654 = extractelement <16 x double> %308, i32 2
  %extract655 = extractelement <16 x double> %308, i32 3
  %extract656 = extractelement <16 x double> %308, i32 4
  %extract657 = extractelement <16 x double> %308, i32 5
  %extract658 = extractelement <16 x double> %308, i32 6
  %extract659 = extractelement <16 x double> %308, i32 7
  %extract660 = extractelement <16 x double> %308, i32 8
  %extract661 = extractelement <16 x double> %308, i32 9
  %extract662 = extractelement <16 x double> %308, i32 10
  %extract663 = extractelement <16 x double> %308, i32 11
  %extract664 = extractelement <16 x double> %308, i32 12
  %extract665 = extractelement <16 x double> %308, i32 13
  %extract666 = extractelement <16 x double> %308, i32 14
  %extract667 = extractelement <16 x double> %308, i32 15
  %309 = tail call double @_Z3expd(double %extract652) nounwind
  %310 = tail call double @_Z3expd(double %extract653) nounwind
  %311 = tail call double @_Z3expd(double %extract654) nounwind
  %312 = tail call double @_Z3expd(double %extract655) nounwind
  %313 = tail call double @_Z3expd(double %extract656) nounwind
  %314 = tail call double @_Z3expd(double %extract657) nounwind
  %315 = tail call double @_Z3expd(double %extract658) nounwind
  %316 = tail call double @_Z3expd(double %extract659) nounwind
  %317 = tail call double @_Z3expd(double %extract660) nounwind
  %318 = tail call double @_Z3expd(double %extract661) nounwind
  %319 = tail call double @_Z3expd(double %extract662) nounwind
  %320 = tail call double @_Z3expd(double %extract663) nounwind
  %321 = tail call double @_Z3expd(double %extract664) nounwind
  %322 = tail call double @_Z3expd(double %extract665) nounwind
  %323 = tail call double @_Z3expd(double %extract666) nounwind
  %324 = tail call double @_Z3expd(double %extract667) nounwind
  %temp.vect687 = insertelement <16 x double> undef, double %309, i32 0
  %temp.vect688 = insertelement <16 x double> %temp.vect687, double %310, i32 1
  %temp.vect689 = insertelement <16 x double> %temp.vect688, double %311, i32 2
  %temp.vect690 = insertelement <16 x double> %temp.vect689, double %312, i32 3
  %temp.vect691 = insertelement <16 x double> %temp.vect690, double %313, i32 4
  %temp.vect692 = insertelement <16 x double> %temp.vect691, double %314, i32 5
  %temp.vect693 = insertelement <16 x double> %temp.vect692, double %315, i32 6
  %temp.vect694 = insertelement <16 x double> %temp.vect693, double %316, i32 7
  %temp.vect695 = insertelement <16 x double> %temp.vect694, double %317, i32 8
  %temp.vect696 = insertelement <16 x double> %temp.vect695, double %318, i32 9
  %temp.vect697 = insertelement <16 x double> %temp.vect696, double %319, i32 10
  %temp.vect698 = insertelement <16 x double> %temp.vect697, double %320, i32 11
  %temp.vect699 = insertelement <16 x double> %temp.vect698, double %321, i32 12
  %temp.vect700 = insertelement <16 x double> %temp.vect699, double %322, i32 13
  %temp.vect701 = insertelement <16 x double> %temp.vect700, double %323, i32 14
  %temp.vect702 = insertelement <16 x double> %temp.vect701, double %324, i32 15
  %325 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %326 = load i64* %325, align 8
  %327 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %328 = load i64* %327, align 8
  %329 = add i64 %326, %328
  %extract670 = add i64 %329, 1658880
  %330 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract670
  %ptrTypeCast686 = bitcast double addrspace(1)* %330 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect702, <16 x double> addrspace(1)* %ptrTypeCast686, align 8
  %331 = fmul <16 x double> %24, <double 0x40751A88BDA9435B, double 0x40751A88BDA9435B, double 0x40751A88BDA9435B, double 0x40751A88BDA9435B, double 0x40751A88BDA9435B, double 0x40751A88BDA9435B, double 0x40751A88BDA9435B, double 0x40751A88BDA9435B, double 0x40751A88BDA9435B, double 0x40751A88BDA9435B, double 0x40751A88BDA9435B, double 0x40751A88BDA9435B, double 0x40751A88BDA9435B, double 0x40751A88BDA9435B, double 0x40751A88BDA9435B, double 0x40751A88BDA9435B>
  %332 = fsub <16 x double> <double 0x403D028169F7EB5F, double 0x403D028169F7EB5F, double 0x403D028169F7EB5F, double 0x403D028169F7EB5F, double 0x403D028169F7EB5F, double 0x403D028169F7EB5F, double 0x403D028169F7EB5F, double 0x403D028169F7EB5F, double 0x403D028169F7EB5F, double 0x403D028169F7EB5F, double 0x403D028169F7EB5F, double 0x403D028169F7EB5F, double 0x403D028169F7EB5F, double 0x403D028169F7EB5F, double 0x403D028169F7EB5F, double 0x403D028169F7EB5F>, %331
  %extract703 = extractelement <16 x double> %332, i32 0
  %extract704 = extractelement <16 x double> %332, i32 1
  %extract705 = extractelement <16 x double> %332, i32 2
  %extract706 = extractelement <16 x double> %332, i32 3
  %extract707 = extractelement <16 x double> %332, i32 4
  %extract708 = extractelement <16 x double> %332, i32 5
  %extract709 = extractelement <16 x double> %332, i32 6
  %extract710 = extractelement <16 x double> %332, i32 7
  %extract711 = extractelement <16 x double> %332, i32 8
  %extract712 = extractelement <16 x double> %332, i32 9
  %extract713 = extractelement <16 x double> %332, i32 10
  %extract714 = extractelement <16 x double> %332, i32 11
  %extract715 = extractelement <16 x double> %332, i32 12
  %extract716 = extractelement <16 x double> %332, i32 13
  %extract717 = extractelement <16 x double> %332, i32 14
  %extract718 = extractelement <16 x double> %332, i32 15
  %333 = tail call double @_Z3expd(double %extract703) nounwind
  %334 = tail call double @_Z3expd(double %extract704) nounwind
  %335 = tail call double @_Z3expd(double %extract705) nounwind
  %336 = tail call double @_Z3expd(double %extract706) nounwind
  %337 = tail call double @_Z3expd(double %extract707) nounwind
  %338 = tail call double @_Z3expd(double %extract708) nounwind
  %339 = tail call double @_Z3expd(double %extract709) nounwind
  %340 = tail call double @_Z3expd(double %extract710) nounwind
  %341 = tail call double @_Z3expd(double %extract711) nounwind
  %342 = tail call double @_Z3expd(double %extract712) nounwind
  %343 = tail call double @_Z3expd(double %extract713) nounwind
  %344 = tail call double @_Z3expd(double %extract714) nounwind
  %345 = tail call double @_Z3expd(double %extract715) nounwind
  %346 = tail call double @_Z3expd(double %extract716) nounwind
  %347 = tail call double @_Z3expd(double %extract717) nounwind
  %348 = tail call double @_Z3expd(double %extract718) nounwind
  %temp.vect738 = insertelement <16 x double> undef, double %333, i32 0
  %temp.vect739 = insertelement <16 x double> %temp.vect738, double %334, i32 1
  %temp.vect740 = insertelement <16 x double> %temp.vect739, double %335, i32 2
  %temp.vect741 = insertelement <16 x double> %temp.vect740, double %336, i32 3
  %temp.vect742 = insertelement <16 x double> %temp.vect741, double %337, i32 4
  %temp.vect743 = insertelement <16 x double> %temp.vect742, double %338, i32 5
  %temp.vect744 = insertelement <16 x double> %temp.vect743, double %339, i32 6
  %temp.vect745 = insertelement <16 x double> %temp.vect744, double %340, i32 7
  %temp.vect746 = insertelement <16 x double> %temp.vect745, double %341, i32 8
  %temp.vect747 = insertelement <16 x double> %temp.vect746, double %342, i32 9
  %temp.vect748 = insertelement <16 x double> %temp.vect747, double %343, i32 10
  %temp.vect749 = insertelement <16 x double> %temp.vect748, double %344, i32 11
  %temp.vect750 = insertelement <16 x double> %temp.vect749, double %345, i32 12
  %temp.vect751 = insertelement <16 x double> %temp.vect750, double %346, i32 13
  %temp.vect752 = insertelement <16 x double> %temp.vect751, double %347, i32 14
  %temp.vect753 = insertelement <16 x double> %temp.vect752, double %348, i32 15
  %349 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %350 = load i64* %349, align 8
  %351 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %352 = load i64* %351, align 8
  %353 = add i64 %350, %352
  %extract721 = add i64 %353, 1769472
  %354 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract721
  %ptrTypeCast737 = bitcast double addrspace(1)* %354 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect753, <16 x double> addrspace(1)* %ptrTypeCast737, align 8
  %355 = fmul <16 x double> %24, <double 0x4079CA33E24FEBD1, double 0x4079CA33E24FEBD1, double 0x4079CA33E24FEBD1, double 0x4079CA33E24FEBD1, double 0x4079CA33E24FEBD1, double 0x4079CA33E24FEBD1, double 0x4079CA33E24FEBD1, double 0x4079CA33E24FEBD1, double 0x4079CA33E24FEBD1, double 0x4079CA33E24FEBD1, double 0x4079CA33E24FEBD1, double 0x4079CA33E24FEBD1, double 0x4079CA33E24FEBD1, double 0x4079CA33E24FEBD1, double 0x4079CA33E24FEBD1, double 0x4079CA33E24FEBD1>
  %356 = fsub <16 x double> <double 0x403E70BF9D39614B, double 0x403E70BF9D39614B, double 0x403E70BF9D39614B, double 0x403E70BF9D39614B, double 0x403E70BF9D39614B, double 0x403E70BF9D39614B, double 0x403E70BF9D39614B, double 0x403E70BF9D39614B, double 0x403E70BF9D39614B, double 0x403E70BF9D39614B, double 0x403E70BF9D39614B, double 0x403E70BF9D39614B, double 0x403E70BF9D39614B, double 0x403E70BF9D39614B, double 0x403E70BF9D39614B, double 0x403E70BF9D39614B>, %355
  %extract754 = extractelement <16 x double> %356, i32 0
  %extract755 = extractelement <16 x double> %356, i32 1
  %extract756 = extractelement <16 x double> %356, i32 2
  %extract757 = extractelement <16 x double> %356, i32 3
  %extract758 = extractelement <16 x double> %356, i32 4
  %extract759 = extractelement <16 x double> %356, i32 5
  %extract760 = extractelement <16 x double> %356, i32 6
  %extract761 = extractelement <16 x double> %356, i32 7
  %extract762 = extractelement <16 x double> %356, i32 8
  %extract763 = extractelement <16 x double> %356, i32 9
  %extract764 = extractelement <16 x double> %356, i32 10
  %extract765 = extractelement <16 x double> %356, i32 11
  %extract766 = extractelement <16 x double> %356, i32 12
  %extract767 = extractelement <16 x double> %356, i32 13
  %extract768 = extractelement <16 x double> %356, i32 14
  %extract769 = extractelement <16 x double> %356, i32 15
  %357 = tail call double @_Z3expd(double %extract754) nounwind
  %358 = tail call double @_Z3expd(double %extract755) nounwind
  %359 = tail call double @_Z3expd(double %extract756) nounwind
  %360 = tail call double @_Z3expd(double %extract757) nounwind
  %361 = tail call double @_Z3expd(double %extract758) nounwind
  %362 = tail call double @_Z3expd(double %extract759) nounwind
  %363 = tail call double @_Z3expd(double %extract760) nounwind
  %364 = tail call double @_Z3expd(double %extract761) nounwind
  %365 = tail call double @_Z3expd(double %extract762) nounwind
  %366 = tail call double @_Z3expd(double %extract763) nounwind
  %367 = tail call double @_Z3expd(double %extract764) nounwind
  %368 = tail call double @_Z3expd(double %extract765) nounwind
  %369 = tail call double @_Z3expd(double %extract766) nounwind
  %370 = tail call double @_Z3expd(double %extract767) nounwind
  %371 = tail call double @_Z3expd(double %extract768) nounwind
  %372 = tail call double @_Z3expd(double %extract769) nounwind
  %temp.vect789 = insertelement <16 x double> undef, double %357, i32 0
  %temp.vect790 = insertelement <16 x double> %temp.vect789, double %358, i32 1
  %temp.vect791 = insertelement <16 x double> %temp.vect790, double %359, i32 2
  %temp.vect792 = insertelement <16 x double> %temp.vect791, double %360, i32 3
  %temp.vect793 = insertelement <16 x double> %temp.vect792, double %361, i32 4
  %temp.vect794 = insertelement <16 x double> %temp.vect793, double %362, i32 5
  %temp.vect795 = insertelement <16 x double> %temp.vect794, double %363, i32 6
  %temp.vect796 = insertelement <16 x double> %temp.vect795, double %364, i32 7
  %temp.vect797 = insertelement <16 x double> %temp.vect796, double %365, i32 8
  %temp.vect798 = insertelement <16 x double> %temp.vect797, double %366, i32 9
  %temp.vect799 = insertelement <16 x double> %temp.vect798, double %367, i32 10
  %temp.vect800 = insertelement <16 x double> %temp.vect799, double %368, i32 11
  %temp.vect801 = insertelement <16 x double> %temp.vect800, double %369, i32 12
  %temp.vect802 = insertelement <16 x double> %temp.vect801, double %370, i32 13
  %temp.vect803 = insertelement <16 x double> %temp.vect802, double %371, i32 14
  %temp.vect804 = insertelement <16 x double> %temp.vect803, double %372, i32 15
  %373 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %374 = load i64* %373, align 8
  %375 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %376 = load i64* %375, align 8
  %377 = add i64 %374, %376
  %extract772 = add i64 %377, 1880064
  %378 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract772
  %ptrTypeCast788 = bitcast double addrspace(1)* %378 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect804, <16 x double> addrspace(1)* %ptrTypeCast788, align 8
  %379 = fmul <16 x double> %24, <double 1.509650e+02, double 1.509650e+02, double 1.509650e+02, double 1.509650e+02, double 1.509650e+02, double 1.509650e+02, double 1.509650e+02, double 1.509650e+02, double 1.509650e+02, double 1.509650e+02, double 1.509650e+02, double 1.509650e+02, double 1.509650e+02, double 1.509650e+02, double 1.509650e+02, double 1.509650e+02>
  %380 = fsub <16 x double> <double 0x403FE410B7DE283F, double 0x403FE410B7DE283F, double 0x403FE410B7DE283F, double 0x403FE410B7DE283F, double 0x403FE410B7DE283F, double 0x403FE410B7DE283F, double 0x403FE410B7DE283F, double 0x403FE410B7DE283F, double 0x403FE410B7DE283F, double 0x403FE410B7DE283F, double 0x403FE410B7DE283F, double 0x403FE410B7DE283F, double 0x403FE410B7DE283F, double 0x403FE410B7DE283F, double 0x403FE410B7DE283F, double 0x403FE410B7DE283F>, %379
  %extract805 = extractelement <16 x double> %380, i32 0
  %extract806 = extractelement <16 x double> %380, i32 1
  %extract807 = extractelement <16 x double> %380, i32 2
  %extract808 = extractelement <16 x double> %380, i32 3
  %extract809 = extractelement <16 x double> %380, i32 4
  %extract810 = extractelement <16 x double> %380, i32 5
  %extract811 = extractelement <16 x double> %380, i32 6
  %extract812 = extractelement <16 x double> %380, i32 7
  %extract813 = extractelement <16 x double> %380, i32 8
  %extract814 = extractelement <16 x double> %380, i32 9
  %extract815 = extractelement <16 x double> %380, i32 10
  %extract816 = extractelement <16 x double> %380, i32 11
  %extract817 = extractelement <16 x double> %380, i32 12
  %extract818 = extractelement <16 x double> %380, i32 13
  %extract819 = extractelement <16 x double> %380, i32 14
  %extract820 = extractelement <16 x double> %380, i32 15
  %381 = tail call double @_Z3expd(double %extract805) nounwind
  %382 = tail call double @_Z3expd(double %extract806) nounwind
  %383 = tail call double @_Z3expd(double %extract807) nounwind
  %384 = tail call double @_Z3expd(double %extract808) nounwind
  %385 = tail call double @_Z3expd(double %extract809) nounwind
  %386 = tail call double @_Z3expd(double %extract810) nounwind
  %387 = tail call double @_Z3expd(double %extract811) nounwind
  %388 = tail call double @_Z3expd(double %extract812) nounwind
  %389 = tail call double @_Z3expd(double %extract813) nounwind
  %390 = tail call double @_Z3expd(double %extract814) nounwind
  %391 = tail call double @_Z3expd(double %extract815) nounwind
  %392 = tail call double @_Z3expd(double %extract816) nounwind
  %393 = tail call double @_Z3expd(double %extract817) nounwind
  %394 = tail call double @_Z3expd(double %extract818) nounwind
  %395 = tail call double @_Z3expd(double %extract819) nounwind
  %396 = tail call double @_Z3expd(double %extract820) nounwind
  %temp.vect840 = insertelement <16 x double> undef, double %381, i32 0
  %temp.vect841 = insertelement <16 x double> %temp.vect840, double %382, i32 1
  %temp.vect842 = insertelement <16 x double> %temp.vect841, double %383, i32 2
  %temp.vect843 = insertelement <16 x double> %temp.vect842, double %384, i32 3
  %temp.vect844 = insertelement <16 x double> %temp.vect843, double %385, i32 4
  %temp.vect845 = insertelement <16 x double> %temp.vect844, double %386, i32 5
  %temp.vect846 = insertelement <16 x double> %temp.vect845, double %387, i32 6
  %temp.vect847 = insertelement <16 x double> %temp.vect846, double %388, i32 7
  %temp.vect848 = insertelement <16 x double> %temp.vect847, double %389, i32 8
  %temp.vect849 = insertelement <16 x double> %temp.vect848, double %390, i32 9
  %temp.vect850 = insertelement <16 x double> %temp.vect849, double %391, i32 10
  %temp.vect851 = insertelement <16 x double> %temp.vect850, double %392, i32 11
  %temp.vect852 = insertelement <16 x double> %temp.vect851, double %393, i32 12
  %temp.vect853 = insertelement <16 x double> %temp.vect852, double %394, i32 13
  %temp.vect854 = insertelement <16 x double> %temp.vect853, double %395, i32 14
  %temp.vect855 = insertelement <16 x double> %temp.vect854, double %396, i32 15
  %397 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %398 = load i64* %397, align 8
  %399 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %400 = load i64* %399, align 8
  %401 = add i64 %398, %400
  %extract823 = add i64 %401, 1990656
  %402 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract823
  %ptrTypeCast839 = bitcast double addrspace(1)* %402 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect855, <16 x double> addrspace(1)* %ptrTypeCast839, align 8
  %403 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %404 = load i64* %403, align 8
  %405 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %406 = load i64* %405, align 8
  %407 = add i64 %404, %406
  %extract858 = add i64 %407, 2101248
  %408 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract858
  %ptrTypeCast874 = bitcast double addrspace(1)* %408 to <16 x double> addrspace(1)*
  store <16 x double> <double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast874, align 8
  %409 = fmul <16 x double> %24, <double 0x406F737778DD6170, double 0x406F737778DD6170, double 0x406F737778DD6170, double 0x406F737778DD6170, double 0x406F737778DD6170, double 0x406F737778DD6170, double 0x406F737778DD6170, double 0x406F737778DD6170, double 0x406F737778DD6170, double 0x406F737778DD6170, double 0x406F737778DD6170, double 0x406F737778DD6170, double 0x406F737778DD6170, double 0x406F737778DD6170, double 0x406F737778DD6170, double 0x406F737778DD6170>
  %410 = fadd <16 x double> %409, <double 0x403F77E3DBDD0B08, double 0x403F77E3DBDD0B08, double 0x403F77E3DBDD0B08, double 0x403F77E3DBDD0B08, double 0x403F77E3DBDD0B08, double 0x403F77E3DBDD0B08, double 0x403F77E3DBDD0B08, double 0x403F77E3DBDD0B08, double 0x403F77E3DBDD0B08, double 0x403F77E3DBDD0B08, double 0x403F77E3DBDD0B08, double 0x403F77E3DBDD0B08, double 0x403F77E3DBDD0B08, double 0x403F77E3DBDD0B08, double 0x403F77E3DBDD0B08, double 0x403F77E3DBDD0B08>
  %extract875 = extractelement <16 x double> %410, i32 0
  %extract876 = extractelement <16 x double> %410, i32 1
  %extract877 = extractelement <16 x double> %410, i32 2
  %extract878 = extractelement <16 x double> %410, i32 3
  %extract879 = extractelement <16 x double> %410, i32 4
  %extract880 = extractelement <16 x double> %410, i32 5
  %extract881 = extractelement <16 x double> %410, i32 6
  %extract882 = extractelement <16 x double> %410, i32 7
  %extract883 = extractelement <16 x double> %410, i32 8
  %extract884 = extractelement <16 x double> %410, i32 9
  %extract885 = extractelement <16 x double> %410, i32 10
  %extract886 = extractelement <16 x double> %410, i32 11
  %extract887 = extractelement <16 x double> %410, i32 12
  %extract888 = extractelement <16 x double> %410, i32 13
  %extract889 = extractelement <16 x double> %410, i32 14
  %extract890 = extractelement <16 x double> %410, i32 15
  %411 = tail call double @_Z3expd(double %extract875) nounwind
  %412 = tail call double @_Z3expd(double %extract876) nounwind
  %413 = tail call double @_Z3expd(double %extract877) nounwind
  %414 = tail call double @_Z3expd(double %extract878) nounwind
  %415 = tail call double @_Z3expd(double %extract879) nounwind
  %416 = tail call double @_Z3expd(double %extract880) nounwind
  %417 = tail call double @_Z3expd(double %extract881) nounwind
  %418 = tail call double @_Z3expd(double %extract882) nounwind
  %419 = tail call double @_Z3expd(double %extract883) nounwind
  %420 = tail call double @_Z3expd(double %extract884) nounwind
  %421 = tail call double @_Z3expd(double %extract885) nounwind
  %422 = tail call double @_Z3expd(double %extract886) nounwind
  %423 = tail call double @_Z3expd(double %extract887) nounwind
  %424 = tail call double @_Z3expd(double %extract888) nounwind
  %425 = tail call double @_Z3expd(double %extract889) nounwind
  %426 = tail call double @_Z3expd(double %extract890) nounwind
  %temp.vect910 = insertelement <16 x double> undef, double %411, i32 0
  %temp.vect911 = insertelement <16 x double> %temp.vect910, double %412, i32 1
  %temp.vect912 = insertelement <16 x double> %temp.vect911, double %413, i32 2
  %temp.vect913 = insertelement <16 x double> %temp.vect912, double %414, i32 3
  %temp.vect914 = insertelement <16 x double> %temp.vect913, double %415, i32 4
  %temp.vect915 = insertelement <16 x double> %temp.vect914, double %416, i32 5
  %temp.vect916 = insertelement <16 x double> %temp.vect915, double %417, i32 6
  %temp.vect917 = insertelement <16 x double> %temp.vect916, double %418, i32 7
  %temp.vect918 = insertelement <16 x double> %temp.vect917, double %419, i32 8
  %temp.vect919 = insertelement <16 x double> %temp.vect918, double %420, i32 9
  %temp.vect920 = insertelement <16 x double> %temp.vect919, double %421, i32 10
  %temp.vect921 = insertelement <16 x double> %temp.vect920, double %422, i32 11
  %temp.vect922 = insertelement <16 x double> %temp.vect921, double %423, i32 12
  %temp.vect923 = insertelement <16 x double> %temp.vect922, double %424, i32 13
  %temp.vect924 = insertelement <16 x double> %temp.vect923, double %425, i32 14
  %temp.vect925 = insertelement <16 x double> %temp.vect924, double %426, i32 15
  %427 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %428 = load i64* %427, align 8
  %429 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %430 = load i64* %429, align 8
  %431 = add i64 %428, %430
  %extract893 = add i64 %431, 2211840
  %432 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract893
  %ptrTypeCast909 = bitcast double addrspace(1)* %432 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect925, <16 x double> addrspace(1)* %ptrTypeCast909, align 8
  %433 = fmul <16 x double> %24, <double 0x4089A1F202107B78, double 0x4089A1F202107B78, double 0x4089A1F202107B78, double 0x4089A1F202107B78, double 0x4089A1F202107B78, double 0x4089A1F202107B78, double 0x4089A1F202107B78, double 0x4089A1F202107B78, double 0x4089A1F202107B78, double 0x4089A1F202107B78, double 0x4089A1F202107B78, double 0x4089A1F202107B78, double 0x4089A1F202107B78, double 0x4089A1F202107B78, double 0x4089A1F202107B78, double 0x4089A1F202107B78>
  %434 = fadd <16 x double> %433, <double 0x4039973EB03EF78D, double 0x4039973EB03EF78D, double 0x4039973EB03EF78D, double 0x4039973EB03EF78D, double 0x4039973EB03EF78D, double 0x4039973EB03EF78D, double 0x4039973EB03EF78D, double 0x4039973EB03EF78D, double 0x4039973EB03EF78D, double 0x4039973EB03EF78D, double 0x4039973EB03EF78D, double 0x4039973EB03EF78D, double 0x4039973EB03EF78D, double 0x4039973EB03EF78D, double 0x4039973EB03EF78D, double 0x4039973EB03EF78D>
  %extract926 = extractelement <16 x double> %434, i32 0
  %extract927 = extractelement <16 x double> %434, i32 1
  %extract928 = extractelement <16 x double> %434, i32 2
  %extract929 = extractelement <16 x double> %434, i32 3
  %extract930 = extractelement <16 x double> %434, i32 4
  %extract931 = extractelement <16 x double> %434, i32 5
  %extract932 = extractelement <16 x double> %434, i32 6
  %extract933 = extractelement <16 x double> %434, i32 7
  %extract934 = extractelement <16 x double> %434, i32 8
  %extract935 = extractelement <16 x double> %434, i32 9
  %extract936 = extractelement <16 x double> %434, i32 10
  %extract937 = extractelement <16 x double> %434, i32 11
  %extract938 = extractelement <16 x double> %434, i32 12
  %extract939 = extractelement <16 x double> %434, i32 13
  %extract940 = extractelement <16 x double> %434, i32 14
  %extract941 = extractelement <16 x double> %434, i32 15
  %435 = tail call double @_Z3expd(double %extract926) nounwind
  %436 = tail call double @_Z3expd(double %extract927) nounwind
  %437 = tail call double @_Z3expd(double %extract928) nounwind
  %438 = tail call double @_Z3expd(double %extract929) nounwind
  %439 = tail call double @_Z3expd(double %extract930) nounwind
  %440 = tail call double @_Z3expd(double %extract931) nounwind
  %441 = tail call double @_Z3expd(double %extract932) nounwind
  %442 = tail call double @_Z3expd(double %extract933) nounwind
  %443 = tail call double @_Z3expd(double %extract934) nounwind
  %444 = tail call double @_Z3expd(double %extract935) nounwind
  %445 = tail call double @_Z3expd(double %extract936) nounwind
  %446 = tail call double @_Z3expd(double %extract937) nounwind
  %447 = tail call double @_Z3expd(double %extract938) nounwind
  %448 = tail call double @_Z3expd(double %extract939) nounwind
  %449 = tail call double @_Z3expd(double %extract940) nounwind
  %450 = tail call double @_Z3expd(double %extract941) nounwind
  %temp.vect961 = insertelement <16 x double> undef, double %435, i32 0
  %temp.vect962 = insertelement <16 x double> %temp.vect961, double %436, i32 1
  %temp.vect963 = insertelement <16 x double> %temp.vect962, double %437, i32 2
  %temp.vect964 = insertelement <16 x double> %temp.vect963, double %438, i32 3
  %temp.vect965 = insertelement <16 x double> %temp.vect964, double %439, i32 4
  %temp.vect966 = insertelement <16 x double> %temp.vect965, double %440, i32 5
  %temp.vect967 = insertelement <16 x double> %temp.vect966, double %441, i32 6
  %temp.vect968 = insertelement <16 x double> %temp.vect967, double %442, i32 7
  %temp.vect969 = insertelement <16 x double> %temp.vect968, double %443, i32 8
  %temp.vect970 = insertelement <16 x double> %temp.vect969, double %444, i32 9
  %temp.vect971 = insertelement <16 x double> %temp.vect970, double %445, i32 10
  %temp.vect972 = insertelement <16 x double> %temp.vect971, double %446, i32 11
  %temp.vect973 = insertelement <16 x double> %temp.vect972, double %447, i32 12
  %temp.vect974 = insertelement <16 x double> %temp.vect973, double %448, i32 13
  %temp.vect975 = insertelement <16 x double> %temp.vect974, double %449, i32 14
  %temp.vect976 = insertelement <16 x double> %temp.vect975, double %450, i32 15
  %451 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %452 = load i64* %451, align 8
  %453 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %454 = load i64* %453, align 8
  %455 = add i64 %452, %454
  %extract944 = add i64 %455, 2322432
  %456 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract944
  %ptrTypeCast960 = bitcast double addrspace(1)* %456 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect976, <16 x double> addrspace(1)* %ptrTypeCast960, align 8
  %457 = fmul <16 x double> %24, <double 0x40B796999A415F46, double 0x40B796999A415F46, double 0x40B796999A415F46, double 0x40B796999A415F46, double 0x40B796999A415F46, double 0x40B796999A415F46, double 0x40B796999A415F46, double 0x40B796999A415F46, double 0x40B796999A415F46, double 0x40B796999A415F46, double 0x40B796999A415F46, double 0x40B796999A415F46, double 0x40B796999A415F46, double 0x40B796999A415F46, double 0x40B796999A415F46, double 0x40B796999A415F46>
  %458 = fsub <16 x double> <double 0x4040D5EC5D8BCC51, double 0x4040D5EC5D8BCC51, double 0x4040D5EC5D8BCC51, double 0x4040D5EC5D8BCC51, double 0x4040D5EC5D8BCC51, double 0x4040D5EC5D8BCC51, double 0x4040D5EC5D8BCC51, double 0x4040D5EC5D8BCC51, double 0x4040D5EC5D8BCC51, double 0x4040D5EC5D8BCC51, double 0x4040D5EC5D8BCC51, double 0x4040D5EC5D8BCC51, double 0x4040D5EC5D8BCC51, double 0x4040D5EC5D8BCC51, double 0x4040D5EC5D8BCC51, double 0x4040D5EC5D8BCC51>, %457
  %extract977 = extractelement <16 x double> %458, i32 0
  %extract978 = extractelement <16 x double> %458, i32 1
  %extract979 = extractelement <16 x double> %458, i32 2
  %extract980 = extractelement <16 x double> %458, i32 3
  %extract981 = extractelement <16 x double> %458, i32 4
  %extract982 = extractelement <16 x double> %458, i32 5
  %extract983 = extractelement <16 x double> %458, i32 6
  %extract984 = extractelement <16 x double> %458, i32 7
  %extract985 = extractelement <16 x double> %458, i32 8
  %extract986 = extractelement <16 x double> %458, i32 9
  %extract987 = extractelement <16 x double> %458, i32 10
  %extract988 = extractelement <16 x double> %458, i32 11
  %extract989 = extractelement <16 x double> %458, i32 12
  %extract990 = extractelement <16 x double> %458, i32 13
  %extract991 = extractelement <16 x double> %458, i32 14
  %extract992 = extractelement <16 x double> %458, i32 15
  %459 = tail call double @_Z3expd(double %extract977) nounwind
  %460 = tail call double @_Z3expd(double %extract978) nounwind
  %461 = tail call double @_Z3expd(double %extract979) nounwind
  %462 = tail call double @_Z3expd(double %extract980) nounwind
  %463 = tail call double @_Z3expd(double %extract981) nounwind
  %464 = tail call double @_Z3expd(double %extract982) nounwind
  %465 = tail call double @_Z3expd(double %extract983) nounwind
  %466 = tail call double @_Z3expd(double %extract984) nounwind
  %467 = tail call double @_Z3expd(double %extract985) nounwind
  %468 = tail call double @_Z3expd(double %extract986) nounwind
  %469 = tail call double @_Z3expd(double %extract987) nounwind
  %470 = tail call double @_Z3expd(double %extract988) nounwind
  %471 = tail call double @_Z3expd(double %extract989) nounwind
  %472 = tail call double @_Z3expd(double %extract990) nounwind
  %473 = tail call double @_Z3expd(double %extract991) nounwind
  %474 = tail call double @_Z3expd(double %extract992) nounwind
  %temp.vect1012 = insertelement <16 x double> undef, double %459, i32 0
  %temp.vect1013 = insertelement <16 x double> %temp.vect1012, double %460, i32 1
  %temp.vect1014 = insertelement <16 x double> %temp.vect1013, double %461, i32 2
  %temp.vect1015 = insertelement <16 x double> %temp.vect1014, double %462, i32 3
  %temp.vect1016 = insertelement <16 x double> %temp.vect1015, double %463, i32 4
  %temp.vect1017 = insertelement <16 x double> %temp.vect1016, double %464, i32 5
  %temp.vect1018 = insertelement <16 x double> %temp.vect1017, double %465, i32 6
  %temp.vect1019 = insertelement <16 x double> %temp.vect1018, double %466, i32 7
  %temp.vect1020 = insertelement <16 x double> %temp.vect1019, double %467, i32 8
  %temp.vect1021 = insertelement <16 x double> %temp.vect1020, double %468, i32 9
  %temp.vect1022 = insertelement <16 x double> %temp.vect1021, double %469, i32 10
  %temp.vect1023 = insertelement <16 x double> %temp.vect1022, double %470, i32 11
  %temp.vect1024 = insertelement <16 x double> %temp.vect1023, double %471, i32 12
  %temp.vect1025 = insertelement <16 x double> %temp.vect1024, double %472, i32 13
  %temp.vect1026 = insertelement <16 x double> %temp.vect1025, double %473, i32 14
  %temp.vect1027 = insertelement <16 x double> %temp.vect1026, double %474, i32 15
  %475 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %476 = load i64* %475, align 8
  %477 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %478 = load i64* %477, align 8
  %479 = add i64 %476, %478
  %extract995 = add i64 %479, 2433024
  %480 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract995
  %ptrTypeCast1011 = bitcast double addrspace(1)* %480 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect1027, <16 x double> addrspace(1)* %ptrTypeCast1011, align 8
  %481 = fmul <16 x double> %temp.vect97, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %482 = fadd <16 x double> %481, <double 0x40304F080303C07F, double 0x40304F080303C07F, double 0x40304F080303C07F, double 0x40304F080303C07F, double 0x40304F080303C07F, double 0x40304F080303C07F, double 0x40304F080303C07F, double 0x40304F080303C07F, double 0x40304F080303C07F, double 0x40304F080303C07F, double 0x40304F080303C07F, double 0x40304F080303C07F, double 0x40304F080303C07F, double 0x40304F080303C07F, double 0x40304F080303C07F, double 0x40304F080303C07F>
  %483 = fmul <16 x double> %24, <double 0x40A471740E1719F8, double 0x40A471740E1719F8, double 0x40A471740E1719F8, double 0x40A471740E1719F8, double 0x40A471740E1719F8, double 0x40A471740E1719F8, double 0x40A471740E1719F8, double 0x40A471740E1719F8, double 0x40A471740E1719F8, double 0x40A471740E1719F8, double 0x40A471740E1719F8, double 0x40A471740E1719F8, double 0x40A471740E1719F8, double 0x40A471740E1719F8, double 0x40A471740E1719F8, double 0x40A471740E1719F8>
  %484 = fsub <16 x double> %482, %483
  %extract1028 = extractelement <16 x double> %484, i32 0
  %extract1029 = extractelement <16 x double> %484, i32 1
  %extract1030 = extractelement <16 x double> %484, i32 2
  %extract1031 = extractelement <16 x double> %484, i32 3
  %extract1032 = extractelement <16 x double> %484, i32 4
  %extract1033 = extractelement <16 x double> %484, i32 5
  %extract1034 = extractelement <16 x double> %484, i32 6
  %extract1035 = extractelement <16 x double> %484, i32 7
  %extract1036 = extractelement <16 x double> %484, i32 8
  %extract1037 = extractelement <16 x double> %484, i32 9
  %extract1038 = extractelement <16 x double> %484, i32 10
  %extract1039 = extractelement <16 x double> %484, i32 11
  %extract1040 = extractelement <16 x double> %484, i32 12
  %extract1041 = extractelement <16 x double> %484, i32 13
  %extract1042 = extractelement <16 x double> %484, i32 14
  %extract1043 = extractelement <16 x double> %484, i32 15
  %485 = tail call double @_Z3expd(double %extract1028) nounwind
  %486 = tail call double @_Z3expd(double %extract1029) nounwind
  %487 = tail call double @_Z3expd(double %extract1030) nounwind
  %488 = tail call double @_Z3expd(double %extract1031) nounwind
  %489 = tail call double @_Z3expd(double %extract1032) nounwind
  %490 = tail call double @_Z3expd(double %extract1033) nounwind
  %491 = tail call double @_Z3expd(double %extract1034) nounwind
  %492 = tail call double @_Z3expd(double %extract1035) nounwind
  %493 = tail call double @_Z3expd(double %extract1036) nounwind
  %494 = tail call double @_Z3expd(double %extract1037) nounwind
  %495 = tail call double @_Z3expd(double %extract1038) nounwind
  %496 = tail call double @_Z3expd(double %extract1039) nounwind
  %497 = tail call double @_Z3expd(double %extract1040) nounwind
  %498 = tail call double @_Z3expd(double %extract1041) nounwind
  %499 = tail call double @_Z3expd(double %extract1042) nounwind
  %500 = tail call double @_Z3expd(double %extract1043) nounwind
  %temp.vect1063 = insertelement <16 x double> undef, double %485, i32 0
  %temp.vect1064 = insertelement <16 x double> %temp.vect1063, double %486, i32 1
  %temp.vect1065 = insertelement <16 x double> %temp.vect1064, double %487, i32 2
  %temp.vect1066 = insertelement <16 x double> %temp.vect1065, double %488, i32 3
  %temp.vect1067 = insertelement <16 x double> %temp.vect1066, double %489, i32 4
  %temp.vect1068 = insertelement <16 x double> %temp.vect1067, double %490, i32 5
  %temp.vect1069 = insertelement <16 x double> %temp.vect1068, double %491, i32 6
  %temp.vect1070 = insertelement <16 x double> %temp.vect1069, double %492, i32 7
  %temp.vect1071 = insertelement <16 x double> %temp.vect1070, double %493, i32 8
  %temp.vect1072 = insertelement <16 x double> %temp.vect1071, double %494, i32 9
  %temp.vect1073 = insertelement <16 x double> %temp.vect1072, double %495, i32 10
  %temp.vect1074 = insertelement <16 x double> %temp.vect1073, double %496, i32 11
  %temp.vect1075 = insertelement <16 x double> %temp.vect1074, double %497, i32 12
  %temp.vect1076 = insertelement <16 x double> %temp.vect1075, double %498, i32 13
  %temp.vect1077 = insertelement <16 x double> %temp.vect1076, double %499, i32 14
  %temp.vect1078 = insertelement <16 x double> %temp.vect1077, double %500, i32 15
  %501 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %502 = load i64* %501, align 8
  %503 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %504 = load i64* %503, align 8
  %505 = add i64 %502, %504
  %extract1046 = add i64 %505, 2543616
  %506 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1046
  %ptrTypeCast1062 = bitcast double addrspace(1)* %506 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect1078, <16 x double> addrspace(1)* %ptrTypeCast1062, align 8
  %507 = fmul <16 x double> %24, <double 1.811580e+03, double 1.811580e+03, double 1.811580e+03, double 1.811580e+03, double 1.811580e+03, double 1.811580e+03, double 1.811580e+03, double 1.811580e+03, double 1.811580e+03, double 1.811580e+03, double 1.811580e+03, double 1.811580e+03, double 1.811580e+03, double 1.811580e+03, double 1.811580e+03, double 1.811580e+03>
  %508 = fsub <16 x double> <double 0x403DEF00D0E057C4, double 0x403DEF00D0E057C4, double 0x403DEF00D0E057C4, double 0x403DEF00D0E057C4, double 0x403DEF00D0E057C4, double 0x403DEF00D0E057C4, double 0x403DEF00D0E057C4, double 0x403DEF00D0E057C4, double 0x403DEF00D0E057C4, double 0x403DEF00D0E057C4, double 0x403DEF00D0E057C4, double 0x403DEF00D0E057C4, double 0x403DEF00D0E057C4, double 0x403DEF00D0E057C4, double 0x403DEF00D0E057C4, double 0x403DEF00D0E057C4>, %507
  %extract1079 = extractelement <16 x double> %508, i32 0
  %extract1080 = extractelement <16 x double> %508, i32 1
  %extract1081 = extractelement <16 x double> %508, i32 2
  %extract1082 = extractelement <16 x double> %508, i32 3
  %extract1083 = extractelement <16 x double> %508, i32 4
  %extract1084 = extractelement <16 x double> %508, i32 5
  %extract1085 = extractelement <16 x double> %508, i32 6
  %extract1086 = extractelement <16 x double> %508, i32 7
  %extract1087 = extractelement <16 x double> %508, i32 8
  %extract1088 = extractelement <16 x double> %508, i32 9
  %extract1089 = extractelement <16 x double> %508, i32 10
  %extract1090 = extractelement <16 x double> %508, i32 11
  %extract1091 = extractelement <16 x double> %508, i32 12
  %extract1092 = extractelement <16 x double> %508, i32 13
  %extract1093 = extractelement <16 x double> %508, i32 14
  %extract1094 = extractelement <16 x double> %508, i32 15
  %509 = tail call double @_Z3expd(double %extract1079) nounwind
  %510 = tail call double @_Z3expd(double %extract1080) nounwind
  %511 = tail call double @_Z3expd(double %extract1081) nounwind
  %512 = tail call double @_Z3expd(double %extract1082) nounwind
  %513 = tail call double @_Z3expd(double %extract1083) nounwind
  %514 = tail call double @_Z3expd(double %extract1084) nounwind
  %515 = tail call double @_Z3expd(double %extract1085) nounwind
  %516 = tail call double @_Z3expd(double %extract1086) nounwind
  %517 = tail call double @_Z3expd(double %extract1087) nounwind
  %518 = tail call double @_Z3expd(double %extract1088) nounwind
  %519 = tail call double @_Z3expd(double %extract1089) nounwind
  %520 = tail call double @_Z3expd(double %extract1090) nounwind
  %521 = tail call double @_Z3expd(double %extract1091) nounwind
  %522 = tail call double @_Z3expd(double %extract1092) nounwind
  %523 = tail call double @_Z3expd(double %extract1093) nounwind
  %524 = tail call double @_Z3expd(double %extract1094) nounwind
  %temp.vect1114 = insertelement <16 x double> undef, double %509, i32 0
  %temp.vect1115 = insertelement <16 x double> %temp.vect1114, double %510, i32 1
  %temp.vect1116 = insertelement <16 x double> %temp.vect1115, double %511, i32 2
  %temp.vect1117 = insertelement <16 x double> %temp.vect1116, double %512, i32 3
  %temp.vect1118 = insertelement <16 x double> %temp.vect1117, double %513, i32 4
  %temp.vect1119 = insertelement <16 x double> %temp.vect1118, double %514, i32 5
  %temp.vect1120 = insertelement <16 x double> %temp.vect1119, double %515, i32 6
  %temp.vect1121 = insertelement <16 x double> %temp.vect1120, double %516, i32 7
  %temp.vect1122 = insertelement <16 x double> %temp.vect1121, double %517, i32 8
  %temp.vect1123 = insertelement <16 x double> %temp.vect1122, double %518, i32 9
  %temp.vect1124 = insertelement <16 x double> %temp.vect1123, double %519, i32 10
  %temp.vect1125 = insertelement <16 x double> %temp.vect1124, double %520, i32 11
  %temp.vect1126 = insertelement <16 x double> %temp.vect1125, double %521, i32 12
  %temp.vect1127 = insertelement <16 x double> %temp.vect1126, double %522, i32 13
  %temp.vect1128 = insertelement <16 x double> %temp.vect1127, double %523, i32 14
  %temp.vect1129 = insertelement <16 x double> %temp.vect1128, double %524, i32 15
  %525 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %526 = load i64* %525, align 8
  %527 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %528 = load i64* %527, align 8
  %529 = add i64 %526, %528
  %extract1097 = add i64 %529, 2654208
  %530 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1097
  %ptrTypeCast1113 = bitcast double addrspace(1)* %530 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect1129, <16 x double> addrspace(1)* %ptrTypeCast1113, align 8
  %531 = fadd <16 x double> %481, <double 0x40301494B025CD19, double 0x40301494B025CD19, double 0x40301494B025CD19, double 0x40301494B025CD19, double 0x40301494B025CD19, double 0x40301494B025CD19, double 0x40301494B025CD19, double 0x40301494B025CD19, double 0x40301494B025CD19, double 0x40301494B025CD19, double 0x40301494B025CD19, double 0x40301494B025CD19, double 0x40301494B025CD19, double 0x40301494B025CD19, double 0x40301494B025CD19, double 0x40301494B025CD19>
  %532 = fmul <16 x double> %24, <double 0x409F7377785729B3, double 0x409F7377785729B3, double 0x409F7377785729B3, double 0x409F7377785729B3, double 0x409F7377785729B3, double 0x409F7377785729B3, double 0x409F7377785729B3, double 0x409F7377785729B3, double 0x409F7377785729B3, double 0x409F7377785729B3, double 0x409F7377785729B3, double 0x409F7377785729B3, double 0x409F7377785729B3, double 0x409F7377785729B3, double 0x409F7377785729B3, double 0x409F7377785729B3>
  %533 = fsub <16 x double> %531, %532
  %extract1130 = extractelement <16 x double> %533, i32 0
  %extract1131 = extractelement <16 x double> %533, i32 1
  %extract1132 = extractelement <16 x double> %533, i32 2
  %extract1133 = extractelement <16 x double> %533, i32 3
  %extract1134 = extractelement <16 x double> %533, i32 4
  %extract1135 = extractelement <16 x double> %533, i32 5
  %extract1136 = extractelement <16 x double> %533, i32 6
  %extract1137 = extractelement <16 x double> %533, i32 7
  %extract1138 = extractelement <16 x double> %533, i32 8
  %extract1139 = extractelement <16 x double> %533, i32 9
  %extract1140 = extractelement <16 x double> %533, i32 10
  %extract1141 = extractelement <16 x double> %533, i32 11
  %extract1142 = extractelement <16 x double> %533, i32 12
  %extract1143 = extractelement <16 x double> %533, i32 13
  %extract1144 = extractelement <16 x double> %533, i32 14
  %extract1145 = extractelement <16 x double> %533, i32 15
  %534 = tail call double @_Z3expd(double %extract1130) nounwind
  %535 = tail call double @_Z3expd(double %extract1131) nounwind
  %536 = tail call double @_Z3expd(double %extract1132) nounwind
  %537 = tail call double @_Z3expd(double %extract1133) nounwind
  %538 = tail call double @_Z3expd(double %extract1134) nounwind
  %539 = tail call double @_Z3expd(double %extract1135) nounwind
  %540 = tail call double @_Z3expd(double %extract1136) nounwind
  %541 = tail call double @_Z3expd(double %extract1137) nounwind
  %542 = tail call double @_Z3expd(double %extract1138) nounwind
  %543 = tail call double @_Z3expd(double %extract1139) nounwind
  %544 = tail call double @_Z3expd(double %extract1140) nounwind
  %545 = tail call double @_Z3expd(double %extract1141) nounwind
  %546 = tail call double @_Z3expd(double %extract1142) nounwind
  %547 = tail call double @_Z3expd(double %extract1143) nounwind
  %548 = tail call double @_Z3expd(double %extract1144) nounwind
  %549 = tail call double @_Z3expd(double %extract1145) nounwind
  %temp.vect1165 = insertelement <16 x double> undef, double %534, i32 0
  %temp.vect1166 = insertelement <16 x double> %temp.vect1165, double %535, i32 1
  %temp.vect1167 = insertelement <16 x double> %temp.vect1166, double %536, i32 2
  %temp.vect1168 = insertelement <16 x double> %temp.vect1167, double %537, i32 3
  %temp.vect1169 = insertelement <16 x double> %temp.vect1168, double %538, i32 4
  %temp.vect1170 = insertelement <16 x double> %temp.vect1169, double %539, i32 5
  %temp.vect1171 = insertelement <16 x double> %temp.vect1170, double %540, i32 6
  %temp.vect1172 = insertelement <16 x double> %temp.vect1171, double %541, i32 7
  %temp.vect1173 = insertelement <16 x double> %temp.vect1172, double %542, i32 8
  %temp.vect1174 = insertelement <16 x double> %temp.vect1173, double %543, i32 9
  %temp.vect1175 = insertelement <16 x double> %temp.vect1174, double %544, i32 10
  %temp.vect1176 = insertelement <16 x double> %temp.vect1175, double %545, i32 11
  %temp.vect1177 = insertelement <16 x double> %temp.vect1176, double %546, i32 12
  %temp.vect1178 = insertelement <16 x double> %temp.vect1177, double %547, i32 13
  %temp.vect1179 = insertelement <16 x double> %temp.vect1178, double %548, i32 14
  %temp.vect1180 = insertelement <16 x double> %temp.vect1179, double %549, i32 15
  %550 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %551 = load i64* %550, align 8
  %552 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %553 = load i64* %552, align 8
  %554 = add i64 %551, %553
  %extract1148 = add i64 %554, 2764800
  %555 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1148
  %ptrTypeCast1164 = bitcast double addrspace(1)* %555 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect1180, <16 x double> addrspace(1)* %ptrTypeCast1164, align 8
  %556 = fmul <16 x double> %24, <double 0x406420F04DDB5526, double 0x406420F04DDB5526, double 0x406420F04DDB5526, double 0x406420F04DDB5526, double 0x406420F04DDB5526, double 0x406420F04DDB5526, double 0x406420F04DDB5526, double 0x406420F04DDB5526, double 0x406420F04DDB5526, double 0x406420F04DDB5526, double 0x406420F04DDB5526, double 0x406420F04DDB5526, double 0x406420F04DDB5526, double 0x406420F04DDB5526, double 0x406420F04DDB5526, double 0x406420F04DDB5526>
  %557 = fsub <16 x double> <double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C>, %556
  %extract1181 = extractelement <16 x double> %557, i32 0
  %extract1182 = extractelement <16 x double> %557, i32 1
  %extract1183 = extractelement <16 x double> %557, i32 2
  %extract1184 = extractelement <16 x double> %557, i32 3
  %extract1185 = extractelement <16 x double> %557, i32 4
  %extract1186 = extractelement <16 x double> %557, i32 5
  %extract1187 = extractelement <16 x double> %557, i32 6
  %extract1188 = extractelement <16 x double> %557, i32 7
  %extract1189 = extractelement <16 x double> %557, i32 8
  %extract1190 = extractelement <16 x double> %557, i32 9
  %extract1191 = extractelement <16 x double> %557, i32 10
  %extract1192 = extractelement <16 x double> %557, i32 11
  %extract1193 = extractelement <16 x double> %557, i32 12
  %extract1194 = extractelement <16 x double> %557, i32 13
  %extract1195 = extractelement <16 x double> %557, i32 14
  %extract1196 = extractelement <16 x double> %557, i32 15
  %558 = tail call double @_Z3expd(double %extract1181) nounwind
  %559 = tail call double @_Z3expd(double %extract1182) nounwind
  %560 = tail call double @_Z3expd(double %extract1183) nounwind
  %561 = tail call double @_Z3expd(double %extract1184) nounwind
  %562 = tail call double @_Z3expd(double %extract1185) nounwind
  %563 = tail call double @_Z3expd(double %extract1186) nounwind
  %564 = tail call double @_Z3expd(double %extract1187) nounwind
  %565 = tail call double @_Z3expd(double %extract1188) nounwind
  %566 = tail call double @_Z3expd(double %extract1189) nounwind
  %567 = tail call double @_Z3expd(double %extract1190) nounwind
  %568 = tail call double @_Z3expd(double %extract1191) nounwind
  %569 = tail call double @_Z3expd(double %extract1192) nounwind
  %570 = tail call double @_Z3expd(double %extract1193) nounwind
  %571 = tail call double @_Z3expd(double %extract1194) nounwind
  %572 = tail call double @_Z3expd(double %extract1195) nounwind
  %573 = tail call double @_Z3expd(double %extract1196) nounwind
  %temp.vect1216 = insertelement <16 x double> undef, double %558, i32 0
  %temp.vect1217 = insertelement <16 x double> %temp.vect1216, double %559, i32 1
  %temp.vect1218 = insertelement <16 x double> %temp.vect1217, double %560, i32 2
  %temp.vect1219 = insertelement <16 x double> %temp.vect1218, double %561, i32 3
  %temp.vect1220 = insertelement <16 x double> %temp.vect1219, double %562, i32 4
  %temp.vect1221 = insertelement <16 x double> %temp.vect1220, double %563, i32 5
  %temp.vect1222 = insertelement <16 x double> %temp.vect1221, double %564, i32 6
  %temp.vect1223 = insertelement <16 x double> %temp.vect1222, double %565, i32 7
  %temp.vect1224 = insertelement <16 x double> %temp.vect1223, double %566, i32 8
  %temp.vect1225 = insertelement <16 x double> %temp.vect1224, double %567, i32 9
  %temp.vect1226 = insertelement <16 x double> %temp.vect1225, double %568, i32 10
  %temp.vect1227 = insertelement <16 x double> %temp.vect1226, double %569, i32 11
  %temp.vect1228 = insertelement <16 x double> %temp.vect1227, double %570, i32 12
  %temp.vect1229 = insertelement <16 x double> %temp.vect1228, double %571, i32 13
  %temp.vect1230 = insertelement <16 x double> %temp.vect1229, double %572, i32 14
  %temp.vect1231 = insertelement <16 x double> %temp.vect1230, double %573, i32 15
  %574 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %575 = load i64* %574, align 8
  %576 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %577 = load i64* %576, align 8
  %578 = add i64 %575, %577
  %extract1199 = add i64 %578, 2875392
  %579 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1199
  %ptrTypeCast1215 = bitcast double addrspace(1)* %579 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect1231, <16 x double> addrspace(1)* %ptrTypeCast1215, align 8
  %580 = fmul <16 x double> %24, <double 0x40B2CAC057D1782D, double 0x40B2CAC057D1782D, double 0x40B2CAC057D1782D, double 0x40B2CAC057D1782D, double 0x40B2CAC057D1782D, double 0x40B2CAC057D1782D, double 0x40B2CAC057D1782D, double 0x40B2CAC057D1782D, double 0x40B2CAC057D1782D, double 0x40B2CAC057D1782D, double 0x40B2CAC057D1782D, double 0x40B2CAC057D1782D, double 0x40B2CAC057D1782D, double 0x40B2CAC057D1782D, double 0x40B2CAC057D1782D, double 0x40B2CAC057D1782D>
  %581 = fsub <16 x double> <double 0x4040FF3D01124EB7, double 0x4040FF3D01124EB7, double 0x4040FF3D01124EB7, double 0x4040FF3D01124EB7, double 0x4040FF3D01124EB7, double 0x4040FF3D01124EB7, double 0x4040FF3D01124EB7, double 0x4040FF3D01124EB7, double 0x4040FF3D01124EB7, double 0x4040FF3D01124EB7, double 0x4040FF3D01124EB7, double 0x4040FF3D01124EB7, double 0x4040FF3D01124EB7, double 0x4040FF3D01124EB7, double 0x4040FF3D01124EB7, double 0x4040FF3D01124EB7>, %580
  %extract1232 = extractelement <16 x double> %581, i32 0
  %extract1233 = extractelement <16 x double> %581, i32 1
  %extract1234 = extractelement <16 x double> %581, i32 2
  %extract1235 = extractelement <16 x double> %581, i32 3
  %extract1236 = extractelement <16 x double> %581, i32 4
  %extract1237 = extractelement <16 x double> %581, i32 5
  %extract1238 = extractelement <16 x double> %581, i32 6
  %extract1239 = extractelement <16 x double> %581, i32 7
  %extract1240 = extractelement <16 x double> %581, i32 8
  %extract1241 = extractelement <16 x double> %581, i32 9
  %extract1242 = extractelement <16 x double> %581, i32 10
  %extract1243 = extractelement <16 x double> %581, i32 11
  %extract1244 = extractelement <16 x double> %581, i32 12
  %extract1245 = extractelement <16 x double> %581, i32 13
  %extract1246 = extractelement <16 x double> %581, i32 14
  %extract1247 = extractelement <16 x double> %581, i32 15
  %582 = tail call double @_Z3expd(double %extract1232) nounwind
  %583 = tail call double @_Z3expd(double %extract1233) nounwind
  %584 = tail call double @_Z3expd(double %extract1234) nounwind
  %585 = tail call double @_Z3expd(double %extract1235) nounwind
  %586 = tail call double @_Z3expd(double %extract1236) nounwind
  %587 = tail call double @_Z3expd(double %extract1237) nounwind
  %588 = tail call double @_Z3expd(double %extract1238) nounwind
  %589 = tail call double @_Z3expd(double %extract1239) nounwind
  %590 = tail call double @_Z3expd(double %extract1240) nounwind
  %591 = tail call double @_Z3expd(double %extract1241) nounwind
  %592 = tail call double @_Z3expd(double %extract1242) nounwind
  %593 = tail call double @_Z3expd(double %extract1243) nounwind
  %594 = tail call double @_Z3expd(double %extract1244) nounwind
  %595 = tail call double @_Z3expd(double %extract1245) nounwind
  %596 = tail call double @_Z3expd(double %extract1246) nounwind
  %597 = tail call double @_Z3expd(double %extract1247) nounwind
  %temp.vect1267 = insertelement <16 x double> undef, double %582, i32 0
  %temp.vect1268 = insertelement <16 x double> %temp.vect1267, double %583, i32 1
  %temp.vect1269 = insertelement <16 x double> %temp.vect1268, double %584, i32 2
  %temp.vect1270 = insertelement <16 x double> %temp.vect1269, double %585, i32 3
  %temp.vect1271 = insertelement <16 x double> %temp.vect1270, double %586, i32 4
  %temp.vect1272 = insertelement <16 x double> %temp.vect1271, double %587, i32 5
  %temp.vect1273 = insertelement <16 x double> %temp.vect1272, double %588, i32 6
  %temp.vect1274 = insertelement <16 x double> %temp.vect1273, double %589, i32 7
  %temp.vect1275 = insertelement <16 x double> %temp.vect1274, double %590, i32 8
  %temp.vect1276 = insertelement <16 x double> %temp.vect1275, double %591, i32 9
  %temp.vect1277 = insertelement <16 x double> %temp.vect1276, double %592, i32 10
  %temp.vect1278 = insertelement <16 x double> %temp.vect1277, double %593, i32 11
  %temp.vect1279 = insertelement <16 x double> %temp.vect1278, double %594, i32 12
  %temp.vect1280 = insertelement <16 x double> %temp.vect1279, double %595, i32 13
  %temp.vect1281 = insertelement <16 x double> %temp.vect1280, double %596, i32 14
  %temp.vect1282 = insertelement <16 x double> %temp.vect1281, double %597, i32 15
  %598 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %599 = load i64* %598, align 8
  %600 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %601 = load i64* %600, align 8
  %602 = add i64 %599, %601
  %extract1250 = add i64 %602, 2985984
  %603 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1250
  %ptrTypeCast1266 = bitcast double addrspace(1)* %603 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect1282, <16 x double> addrspace(1)* %ptrTypeCast1266, align 8
  %604 = fmul <16 x double> %24, <double 1.509650e+03, double 1.509650e+03, double 1.509650e+03, double 1.509650e+03, double 1.509650e+03, double 1.509650e+03, double 1.509650e+03, double 1.509650e+03, double 1.509650e+03, double 1.509650e+03, double 1.509650e+03, double 1.509650e+03, double 1.509650e+03, double 1.509650e+03, double 1.509650e+03, double 1.509650e+03>
  %605 = fsub <16 x double> <double 0x40410400EFEA0847, double 0x40410400EFEA0847, double 0x40410400EFEA0847, double 0x40410400EFEA0847, double 0x40410400EFEA0847, double 0x40410400EFEA0847, double 0x40410400EFEA0847, double 0x40410400EFEA0847, double 0x40410400EFEA0847, double 0x40410400EFEA0847, double 0x40410400EFEA0847, double 0x40410400EFEA0847, double 0x40410400EFEA0847, double 0x40410400EFEA0847, double 0x40410400EFEA0847, double 0x40410400EFEA0847>, %604
  %extract1283 = extractelement <16 x double> %605, i32 0
  %extract1284 = extractelement <16 x double> %605, i32 1
  %extract1285 = extractelement <16 x double> %605, i32 2
  %extract1286 = extractelement <16 x double> %605, i32 3
  %extract1287 = extractelement <16 x double> %605, i32 4
  %extract1288 = extractelement <16 x double> %605, i32 5
  %extract1289 = extractelement <16 x double> %605, i32 6
  %extract1290 = extractelement <16 x double> %605, i32 7
  %extract1291 = extractelement <16 x double> %605, i32 8
  %extract1292 = extractelement <16 x double> %605, i32 9
  %extract1293 = extractelement <16 x double> %605, i32 10
  %extract1294 = extractelement <16 x double> %605, i32 11
  %extract1295 = extractelement <16 x double> %605, i32 12
  %extract1296 = extractelement <16 x double> %605, i32 13
  %extract1297 = extractelement <16 x double> %605, i32 14
  %extract1298 = extractelement <16 x double> %605, i32 15
  %606 = tail call double @_Z3expd(double %extract1283) nounwind
  %607 = tail call double @_Z3expd(double %extract1284) nounwind
  %608 = tail call double @_Z3expd(double %extract1285) nounwind
  %609 = tail call double @_Z3expd(double %extract1286) nounwind
  %610 = tail call double @_Z3expd(double %extract1287) nounwind
  %611 = tail call double @_Z3expd(double %extract1288) nounwind
  %612 = tail call double @_Z3expd(double %extract1289) nounwind
  %613 = tail call double @_Z3expd(double %extract1290) nounwind
  %614 = tail call double @_Z3expd(double %extract1291) nounwind
  %615 = tail call double @_Z3expd(double %extract1292) nounwind
  %616 = tail call double @_Z3expd(double %extract1293) nounwind
  %617 = tail call double @_Z3expd(double %extract1294) nounwind
  %618 = tail call double @_Z3expd(double %extract1295) nounwind
  %619 = tail call double @_Z3expd(double %extract1296) nounwind
  %620 = tail call double @_Z3expd(double %extract1297) nounwind
  %621 = tail call double @_Z3expd(double %extract1298) nounwind
  %temp.vect1318 = insertelement <16 x double> undef, double %606, i32 0
  %temp.vect1319 = insertelement <16 x double> %temp.vect1318, double %607, i32 1
  %temp.vect1320 = insertelement <16 x double> %temp.vect1319, double %608, i32 2
  %temp.vect1321 = insertelement <16 x double> %temp.vect1320, double %609, i32 3
  %temp.vect1322 = insertelement <16 x double> %temp.vect1321, double %610, i32 4
  %temp.vect1323 = insertelement <16 x double> %temp.vect1322, double %611, i32 5
  %temp.vect1324 = insertelement <16 x double> %temp.vect1323, double %612, i32 6
  %temp.vect1325 = insertelement <16 x double> %temp.vect1324, double %613, i32 7
  %temp.vect1326 = insertelement <16 x double> %temp.vect1325, double %614, i32 8
  %temp.vect1327 = insertelement <16 x double> %temp.vect1326, double %615, i32 9
  %temp.vect1328 = insertelement <16 x double> %temp.vect1327, double %616, i32 10
  %temp.vect1329 = insertelement <16 x double> %temp.vect1328, double %617, i32 11
  %temp.vect1330 = insertelement <16 x double> %temp.vect1329, double %618, i32 12
  %temp.vect1331 = insertelement <16 x double> %temp.vect1330, double %619, i32 13
  %temp.vect1332 = insertelement <16 x double> %temp.vect1331, double %620, i32 14
  %temp.vect1333 = insertelement <16 x double> %temp.vect1332, double %621, i32 15
  %622 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %623 = load i64* %622, align 8
  %624 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %625 = load i64* %624, align 8
  %626 = add i64 %623, %625
  %extract1301 = add i64 %626, 3096576
  %627 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1301
  %ptrTypeCast1317 = bitcast double addrspace(1)* %627 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect1333, <16 x double> addrspace(1)* %ptrTypeCast1317, align 8
  %628 = fmul <16 x double> %temp.vect97, <double 1.228000e+00, double 1.228000e+00, double 1.228000e+00, double 1.228000e+00, double 1.228000e+00, double 1.228000e+00, double 1.228000e+00, double 1.228000e+00, double 1.228000e+00, double 1.228000e+00, double 1.228000e+00, double 1.228000e+00, double 1.228000e+00, double 1.228000e+00, double 1.228000e+00, double 1.228000e+00>
  %629 = fadd <16 x double> %628, <double 0x4031ADA7E810F5F2, double 0x4031ADA7E810F5F2, double 0x4031ADA7E810F5F2, double 0x4031ADA7E810F5F2, double 0x4031ADA7E810F5F2, double 0x4031ADA7E810F5F2, double 0x4031ADA7E810F5F2, double 0x4031ADA7E810F5F2, double 0x4031ADA7E810F5F2, double 0x4031ADA7E810F5F2, double 0x4031ADA7E810F5F2, double 0x4031ADA7E810F5F2, double 0x4031ADA7E810F5F2, double 0x4031ADA7E810F5F2, double 0x4031ADA7E810F5F2, double 0x4031ADA7E810F5F2>
  %630 = fmul <16 x double> %24, <double 0x40419CD2432E52FA, double 0x40419CD2432E52FA, double 0x40419CD2432E52FA, double 0x40419CD2432E52FA, double 0x40419CD2432E52FA, double 0x40419CD2432E52FA, double 0x40419CD2432E52FA, double 0x40419CD2432E52FA, double 0x40419CD2432E52FA, double 0x40419CD2432E52FA, double 0x40419CD2432E52FA, double 0x40419CD2432E52FA, double 0x40419CD2432E52FA, double 0x40419CD2432E52FA, double 0x40419CD2432E52FA, double 0x40419CD2432E52FA>
  %631 = fsub <16 x double> %629, %630
  %extract1334 = extractelement <16 x double> %631, i32 0
  %extract1335 = extractelement <16 x double> %631, i32 1
  %extract1336 = extractelement <16 x double> %631, i32 2
  %extract1337 = extractelement <16 x double> %631, i32 3
  %extract1338 = extractelement <16 x double> %631, i32 4
  %extract1339 = extractelement <16 x double> %631, i32 5
  %extract1340 = extractelement <16 x double> %631, i32 6
  %extract1341 = extractelement <16 x double> %631, i32 7
  %extract1342 = extractelement <16 x double> %631, i32 8
  %extract1343 = extractelement <16 x double> %631, i32 9
  %extract1344 = extractelement <16 x double> %631, i32 10
  %extract1345 = extractelement <16 x double> %631, i32 11
  %extract1346 = extractelement <16 x double> %631, i32 12
  %extract1347 = extractelement <16 x double> %631, i32 13
  %extract1348 = extractelement <16 x double> %631, i32 14
  %extract1349 = extractelement <16 x double> %631, i32 15
  %632 = tail call double @_Z3expd(double %extract1334) nounwind
  %633 = tail call double @_Z3expd(double %extract1335) nounwind
  %634 = tail call double @_Z3expd(double %extract1336) nounwind
  %635 = tail call double @_Z3expd(double %extract1337) nounwind
  %636 = tail call double @_Z3expd(double %extract1338) nounwind
  %637 = tail call double @_Z3expd(double %extract1339) nounwind
  %638 = tail call double @_Z3expd(double %extract1340) nounwind
  %639 = tail call double @_Z3expd(double %extract1341) nounwind
  %640 = tail call double @_Z3expd(double %extract1342) nounwind
  %641 = tail call double @_Z3expd(double %extract1343) nounwind
  %642 = tail call double @_Z3expd(double %extract1344) nounwind
  %643 = tail call double @_Z3expd(double %extract1345) nounwind
  %644 = tail call double @_Z3expd(double %extract1346) nounwind
  %645 = tail call double @_Z3expd(double %extract1347) nounwind
  %646 = tail call double @_Z3expd(double %extract1348) nounwind
  %647 = tail call double @_Z3expd(double %extract1349) nounwind
  %temp.vect1369 = insertelement <16 x double> undef, double %632, i32 0
  %temp.vect1370 = insertelement <16 x double> %temp.vect1369, double %633, i32 1
  %temp.vect1371 = insertelement <16 x double> %temp.vect1370, double %634, i32 2
  %temp.vect1372 = insertelement <16 x double> %temp.vect1371, double %635, i32 3
  %temp.vect1373 = insertelement <16 x double> %temp.vect1372, double %636, i32 4
  %temp.vect1374 = insertelement <16 x double> %temp.vect1373, double %637, i32 5
  %temp.vect1375 = insertelement <16 x double> %temp.vect1374, double %638, i32 6
  %temp.vect1376 = insertelement <16 x double> %temp.vect1375, double %639, i32 7
  %temp.vect1377 = insertelement <16 x double> %temp.vect1376, double %640, i32 8
  %temp.vect1378 = insertelement <16 x double> %temp.vect1377, double %641, i32 9
  %temp.vect1379 = insertelement <16 x double> %temp.vect1378, double %642, i32 10
  %temp.vect1380 = insertelement <16 x double> %temp.vect1379, double %643, i32 11
  %temp.vect1381 = insertelement <16 x double> %temp.vect1380, double %644, i32 12
  %temp.vect1382 = insertelement <16 x double> %temp.vect1381, double %645, i32 13
  %temp.vect1383 = insertelement <16 x double> %temp.vect1382, double %646, i32 14
  %temp.vect1384 = insertelement <16 x double> %temp.vect1383, double %647, i32 15
  %648 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %649 = load i64* %648, align 8
  %650 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %651 = load i64* %650, align 8
  %652 = add i64 %649, %651
  %extract1352 = add i64 %652, 3207168
  %653 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1352
  %ptrTypeCast1368 = bitcast double addrspace(1)* %653 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect1384, <16 x double> addrspace(1)* %ptrTypeCast1368, align 8
  %654 = fmul <16 x double> %temp.vect97, <double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00>
  %655 = fadd <16 x double> %654, <double 0x403193A34FFBC0D6, double 0x403193A34FFBC0D6, double 0x403193A34FFBC0D6, double 0x403193A34FFBC0D6, double 0x403193A34FFBC0D6, double 0x403193A34FFBC0D6, double 0x403193A34FFBC0D6, double 0x403193A34FFBC0D6, double 0x403193A34FFBC0D6, double 0x403193A34FFBC0D6, double 0x403193A34FFBC0D6, double 0x403193A34FFBC0D6, double 0x403193A34FFBC0D6, double 0x403193A34FFBC0D6, double 0x403193A34FFBC0D6, double 0x403193A34FFBC0D6>
  %656 = fmul <16 x double> %24, <double 0x40E38F017E90FF97, double 0x40E38F017E90FF97, double 0x40E38F017E90FF97, double 0x40E38F017E90FF97, double 0x40E38F017E90FF97, double 0x40E38F017E90FF97, double 0x40E38F017E90FF97, double 0x40E38F017E90FF97, double 0x40E38F017E90FF97, double 0x40E38F017E90FF97, double 0x40E38F017E90FF97, double 0x40E38F017E90FF97, double 0x40E38F017E90FF97, double 0x40E38F017E90FF97, double 0x40E38F017E90FF97, double 0x40E38F017E90FF97>
  %657 = fsub <16 x double> %655, %656
  %extract1385 = extractelement <16 x double> %657, i32 0
  %extract1386 = extractelement <16 x double> %657, i32 1
  %extract1387 = extractelement <16 x double> %657, i32 2
  %extract1388 = extractelement <16 x double> %657, i32 3
  %extract1389 = extractelement <16 x double> %657, i32 4
  %extract1390 = extractelement <16 x double> %657, i32 5
  %extract1391 = extractelement <16 x double> %657, i32 6
  %extract1392 = extractelement <16 x double> %657, i32 7
  %extract1393 = extractelement <16 x double> %657, i32 8
  %extract1394 = extractelement <16 x double> %657, i32 9
  %extract1395 = extractelement <16 x double> %657, i32 10
  %extract1396 = extractelement <16 x double> %657, i32 11
  %extract1397 = extractelement <16 x double> %657, i32 12
  %extract1398 = extractelement <16 x double> %657, i32 13
  %extract1399 = extractelement <16 x double> %657, i32 14
  %extract1400 = extractelement <16 x double> %657, i32 15
  %658 = tail call double @_Z3expd(double %extract1385) nounwind
  %659 = tail call double @_Z3expd(double %extract1386) nounwind
  %660 = tail call double @_Z3expd(double %extract1387) nounwind
  %661 = tail call double @_Z3expd(double %extract1388) nounwind
  %662 = tail call double @_Z3expd(double %extract1389) nounwind
  %663 = tail call double @_Z3expd(double %extract1390) nounwind
  %664 = tail call double @_Z3expd(double %extract1391) nounwind
  %665 = tail call double @_Z3expd(double %extract1392) nounwind
  %666 = tail call double @_Z3expd(double %extract1393) nounwind
  %667 = tail call double @_Z3expd(double %extract1394) nounwind
  %668 = tail call double @_Z3expd(double %extract1395) nounwind
  %669 = tail call double @_Z3expd(double %extract1396) nounwind
  %670 = tail call double @_Z3expd(double %extract1397) nounwind
  %671 = tail call double @_Z3expd(double %extract1398) nounwind
  %672 = tail call double @_Z3expd(double %extract1399) nounwind
  %673 = tail call double @_Z3expd(double %extract1400) nounwind
  %temp.vect1420 = insertelement <16 x double> undef, double %658, i32 0
  %temp.vect1421 = insertelement <16 x double> %temp.vect1420, double %659, i32 1
  %temp.vect1422 = insertelement <16 x double> %temp.vect1421, double %660, i32 2
  %temp.vect1423 = insertelement <16 x double> %temp.vect1422, double %661, i32 3
  %temp.vect1424 = insertelement <16 x double> %temp.vect1423, double %662, i32 4
  %temp.vect1425 = insertelement <16 x double> %temp.vect1424, double %663, i32 5
  %temp.vect1426 = insertelement <16 x double> %temp.vect1425, double %664, i32 6
  %temp.vect1427 = insertelement <16 x double> %temp.vect1426, double %665, i32 7
  %temp.vect1428 = insertelement <16 x double> %temp.vect1427, double %666, i32 8
  %temp.vect1429 = insertelement <16 x double> %temp.vect1428, double %667, i32 9
  %temp.vect1430 = insertelement <16 x double> %temp.vect1429, double %668, i32 10
  %temp.vect1431 = insertelement <16 x double> %temp.vect1430, double %669, i32 11
  %temp.vect1432 = insertelement <16 x double> %temp.vect1431, double %670, i32 12
  %temp.vect1433 = insertelement <16 x double> %temp.vect1432, double %671, i32 13
  %temp.vect1434 = insertelement <16 x double> %temp.vect1433, double %672, i32 14
  %temp.vect1435 = insertelement <16 x double> %temp.vect1434, double %673, i32 15
  %674 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %675 = load i64* %674, align 8
  %676 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %677 = load i64* %676, align 8
  %678 = add i64 %675, %677
  %extract1403 = add i64 %678, 3317760
  %679 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1403
  %ptrTypeCast1419 = bitcast double addrspace(1)* %679 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect1435, <16 x double> addrspace(1)* %ptrTypeCast1419, align 8
  %680 = fmul <16 x double> %24, <double 0x40D77D706DC5D639, double 0x40D77D706DC5D639, double 0x40D77D706DC5D639, double 0x40D77D706DC5D639, double 0x40D77D706DC5D639, double 0x40D77D706DC5D639, double 0x40D77D706DC5D639, double 0x40D77D706DC5D639, double 0x40D77D706DC5D639, double 0x40D77D706DC5D639, double 0x40D77D706DC5D639, double 0x40D77D706DC5D639, double 0x40D77D706DC5D639, double 0x40D77D706DC5D639, double 0x40D77D706DC5D639, double 0x40D77D706DC5D639>
  %681 = fsub <16 x double> <double 0x403C8C1CA049B703, double 0x403C8C1CA049B703, double 0x403C8C1CA049B703, double 0x403C8C1CA049B703, double 0x403C8C1CA049B703, double 0x403C8C1CA049B703, double 0x403C8C1CA049B703, double 0x403C8C1CA049B703, double 0x403C8C1CA049B703, double 0x403C8C1CA049B703, double 0x403C8C1CA049B703, double 0x403C8C1CA049B703, double 0x403C8C1CA049B703, double 0x403C8C1CA049B703, double 0x403C8C1CA049B703, double 0x403C8C1CA049B703>, %680
  %extract1436 = extractelement <16 x double> %681, i32 0
  %extract1437 = extractelement <16 x double> %681, i32 1
  %extract1438 = extractelement <16 x double> %681, i32 2
  %extract1439 = extractelement <16 x double> %681, i32 3
  %extract1440 = extractelement <16 x double> %681, i32 4
  %extract1441 = extractelement <16 x double> %681, i32 5
  %extract1442 = extractelement <16 x double> %681, i32 6
  %extract1443 = extractelement <16 x double> %681, i32 7
  %extract1444 = extractelement <16 x double> %681, i32 8
  %extract1445 = extractelement <16 x double> %681, i32 9
  %extract1446 = extractelement <16 x double> %681, i32 10
  %extract1447 = extractelement <16 x double> %681, i32 11
  %extract1448 = extractelement <16 x double> %681, i32 12
  %extract1449 = extractelement <16 x double> %681, i32 13
  %extract1450 = extractelement <16 x double> %681, i32 14
  %extract1451 = extractelement <16 x double> %681, i32 15
  %682 = tail call double @_Z3expd(double %extract1436) nounwind
  %683 = tail call double @_Z3expd(double %extract1437) nounwind
  %684 = tail call double @_Z3expd(double %extract1438) nounwind
  %685 = tail call double @_Z3expd(double %extract1439) nounwind
  %686 = tail call double @_Z3expd(double %extract1440) nounwind
  %687 = tail call double @_Z3expd(double %extract1441) nounwind
  %688 = tail call double @_Z3expd(double %extract1442) nounwind
  %689 = tail call double @_Z3expd(double %extract1443) nounwind
  %690 = tail call double @_Z3expd(double %extract1444) nounwind
  %691 = tail call double @_Z3expd(double %extract1445) nounwind
  %692 = tail call double @_Z3expd(double %extract1446) nounwind
  %693 = tail call double @_Z3expd(double %extract1447) nounwind
  %694 = tail call double @_Z3expd(double %extract1448) nounwind
  %695 = tail call double @_Z3expd(double %extract1449) nounwind
  %696 = tail call double @_Z3expd(double %extract1450) nounwind
  %697 = tail call double @_Z3expd(double %extract1451) nounwind
  %temp.vect1471 = insertelement <16 x double> undef, double %682, i32 0
  %temp.vect1472 = insertelement <16 x double> %temp.vect1471, double %683, i32 1
  %temp.vect1473 = insertelement <16 x double> %temp.vect1472, double %684, i32 2
  %temp.vect1474 = insertelement <16 x double> %temp.vect1473, double %685, i32 3
  %temp.vect1475 = insertelement <16 x double> %temp.vect1474, double %686, i32 4
  %temp.vect1476 = insertelement <16 x double> %temp.vect1475, double %687, i32 5
  %temp.vect1477 = insertelement <16 x double> %temp.vect1476, double %688, i32 6
  %temp.vect1478 = insertelement <16 x double> %temp.vect1477, double %689, i32 7
  %temp.vect1479 = insertelement <16 x double> %temp.vect1478, double %690, i32 8
  %temp.vect1480 = insertelement <16 x double> %temp.vect1479, double %691, i32 9
  %temp.vect1481 = insertelement <16 x double> %temp.vect1480, double %692, i32 10
  %temp.vect1482 = insertelement <16 x double> %temp.vect1481, double %693, i32 11
  %temp.vect1483 = insertelement <16 x double> %temp.vect1482, double %694, i32 12
  %temp.vect1484 = insertelement <16 x double> %temp.vect1483, double %695, i32 13
  %temp.vect1485 = insertelement <16 x double> %temp.vect1484, double %696, i32 14
  %temp.vect1486 = insertelement <16 x double> %temp.vect1485, double %697, i32 15
  %698 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %699 = load i64* %698, align 8
  %700 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %701 = load i64* %700, align 8
  %702 = add i64 %699, %701
  %extract1454 = add i64 %702, 3428352
  %703 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1454
  %ptrTypeCast1470 = bitcast double addrspace(1)* %703 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect1486, <16 x double> addrspace(1)* %ptrTypeCast1470, align 8
  %704 = fmul <16 x double> %24, <double 0x40C731F4EA4A8C15, double 0x40C731F4EA4A8C15, double 0x40C731F4EA4A8C15, double 0x40C731F4EA4A8C15, double 0x40C731F4EA4A8C15, double 0x40C731F4EA4A8C15, double 0x40C731F4EA4A8C15, double 0x40C731F4EA4A8C15, double 0x40C731F4EA4A8C15, double 0x40C731F4EA4A8C15, double 0x40C731F4EA4A8C15, double 0x40C731F4EA4A8C15, double 0x40C731F4EA4A8C15, double 0x40C731F4EA4A8C15, double 0x40C731F4EA4A8C15, double 0x40C731F4EA4A8C15>
  %705 = fsub <16 x double> <double 0x40405221CC02A272, double 0x40405221CC02A272, double 0x40405221CC02A272, double 0x40405221CC02A272, double 0x40405221CC02A272, double 0x40405221CC02A272, double 0x40405221CC02A272, double 0x40405221CC02A272, double 0x40405221CC02A272, double 0x40405221CC02A272, double 0x40405221CC02A272, double 0x40405221CC02A272, double 0x40405221CC02A272, double 0x40405221CC02A272, double 0x40405221CC02A272, double 0x40405221CC02A272>, %704
  %extract1487 = extractelement <16 x double> %705, i32 0
  %extract1488 = extractelement <16 x double> %705, i32 1
  %extract1489 = extractelement <16 x double> %705, i32 2
  %extract1490 = extractelement <16 x double> %705, i32 3
  %extract1491 = extractelement <16 x double> %705, i32 4
  %extract1492 = extractelement <16 x double> %705, i32 5
  %extract1493 = extractelement <16 x double> %705, i32 6
  %extract1494 = extractelement <16 x double> %705, i32 7
  %extract1495 = extractelement <16 x double> %705, i32 8
  %extract1496 = extractelement <16 x double> %705, i32 9
  %extract1497 = extractelement <16 x double> %705, i32 10
  %extract1498 = extractelement <16 x double> %705, i32 11
  %extract1499 = extractelement <16 x double> %705, i32 12
  %extract1500 = extractelement <16 x double> %705, i32 13
  %extract1501 = extractelement <16 x double> %705, i32 14
  %extract1502 = extractelement <16 x double> %705, i32 15
  %706 = tail call double @_Z3expd(double %extract1487) nounwind
  %707 = tail call double @_Z3expd(double %extract1488) nounwind
  %708 = tail call double @_Z3expd(double %extract1489) nounwind
  %709 = tail call double @_Z3expd(double %extract1490) nounwind
  %710 = tail call double @_Z3expd(double %extract1491) nounwind
  %711 = tail call double @_Z3expd(double %extract1492) nounwind
  %712 = tail call double @_Z3expd(double %extract1493) nounwind
  %713 = tail call double @_Z3expd(double %extract1494) nounwind
  %714 = tail call double @_Z3expd(double %extract1495) nounwind
  %715 = tail call double @_Z3expd(double %extract1496) nounwind
  %716 = tail call double @_Z3expd(double %extract1497) nounwind
  %717 = tail call double @_Z3expd(double %extract1498) nounwind
  %718 = tail call double @_Z3expd(double %extract1499) nounwind
  %719 = tail call double @_Z3expd(double %extract1500) nounwind
  %720 = tail call double @_Z3expd(double %extract1501) nounwind
  %721 = tail call double @_Z3expd(double %extract1502) nounwind
  %temp.vect1522 = insertelement <16 x double> undef, double %706, i32 0
  %temp.vect1523 = insertelement <16 x double> %temp.vect1522, double %707, i32 1
  %temp.vect1524 = insertelement <16 x double> %temp.vect1523, double %708, i32 2
  %temp.vect1525 = insertelement <16 x double> %temp.vect1524, double %709, i32 3
  %temp.vect1526 = insertelement <16 x double> %temp.vect1525, double %710, i32 4
  %temp.vect1527 = insertelement <16 x double> %temp.vect1526, double %711, i32 5
  %temp.vect1528 = insertelement <16 x double> %temp.vect1527, double %712, i32 6
  %temp.vect1529 = insertelement <16 x double> %temp.vect1528, double %713, i32 7
  %temp.vect1530 = insertelement <16 x double> %temp.vect1529, double %714, i32 8
  %temp.vect1531 = insertelement <16 x double> %temp.vect1530, double %715, i32 9
  %temp.vect1532 = insertelement <16 x double> %temp.vect1531, double %716, i32 10
  %temp.vect1533 = insertelement <16 x double> %temp.vect1532, double %717, i32 11
  %temp.vect1534 = insertelement <16 x double> %temp.vect1533, double %718, i32 12
  %temp.vect1535 = insertelement <16 x double> %temp.vect1534, double %719, i32 13
  %temp.vect1536 = insertelement <16 x double> %temp.vect1535, double %720, i32 14
  %temp.vect1537 = insertelement <16 x double> %temp.vect1536, double %721, i32 15
  %722 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %723 = load i64* %722, align 8
  %724 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %725 = load i64* %724, align 8
  %726 = add i64 %723, %725
  %extract1505 = add i64 %726, 3538944
  %727 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1505
  %ptrTypeCast1521 = bitcast double addrspace(1)* %727 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect1537, <16 x double> addrspace(1)* %ptrTypeCast1521, align 8
  %728 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %729 = load i64* %728, align 8
  %730 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %731 = load i64* %730, align 8
  %732 = add i64 %729, %731
  %extract1540 = add i64 %732, 3649536
  %733 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1540
  %ptrTypeCast1556 = bitcast double addrspace(1)* %733 to <16 x double> addrspace(1)*
  store <16 x double> <double 5.700000e+13, double 5.700000e+13, double 5.700000e+13, double 5.700000e+13, double 5.700000e+13, double 5.700000e+13, double 5.700000e+13, double 5.700000e+13, double 5.700000e+13, double 5.700000e+13, double 5.700000e+13, double 5.700000e+13, double 5.700000e+13, double 5.700000e+13, double 5.700000e+13, double 5.700000e+13>, <16 x double> addrspace(1)* %ptrTypeCast1556, align 8
  %734 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %735 = load i64* %734, align 8
  %736 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %737 = load i64* %736, align 8
  %738 = add i64 %735, %737
  %extract1559 = add i64 %738, 3760128
  %739 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1559
  %ptrTypeCast1575 = bitcast double addrspace(1)* %739 to <16 x double> addrspace(1)*
  store <16 x double> <double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast1575, align 8
  %740 = fmul <16 x double> %temp.vect97, <double 1.790000e+00, double 1.790000e+00, double 1.790000e+00, double 1.790000e+00, double 1.790000e+00, double 1.790000e+00, double 1.790000e+00, double 1.790000e+00, double 1.790000e+00, double 1.790000e+00, double 1.790000e+00, double 1.790000e+00, double 1.790000e+00, double 1.790000e+00, double 1.790000e+00, double 1.790000e+00>
  %741 = fadd <16 x double> %740, <double 0x403285B7B50D9366, double 0x403285B7B50D9366, double 0x403285B7B50D9366, double 0x403285B7B50D9366, double 0x403285B7B50D9366, double 0x403285B7B50D9366, double 0x403285B7B50D9366, double 0x403285B7B50D9366, double 0x403285B7B50D9366, double 0x403285B7B50D9366, double 0x403285B7B50D9366, double 0x403285B7B50D9366, double 0x403285B7B50D9366, double 0x403285B7B50D9366, double 0x403285B7B50D9366, double 0x403285B7B50D9366>
  %742 = fmul <16 x double> %24, <double 0x408A42F984A0E411, double 0x408A42F984A0E411, double 0x408A42F984A0E411, double 0x408A42F984A0E411, double 0x408A42F984A0E411, double 0x408A42F984A0E411, double 0x408A42F984A0E411, double 0x408A42F984A0E411, double 0x408A42F984A0E411, double 0x408A42F984A0E411, double 0x408A42F984A0E411, double 0x408A42F984A0E411, double 0x408A42F984A0E411, double 0x408A42F984A0E411, double 0x408A42F984A0E411, double 0x408A42F984A0E411>
  %743 = fsub <16 x double> %741, %742
  %extract1576 = extractelement <16 x double> %743, i32 0
  %extract1577 = extractelement <16 x double> %743, i32 1
  %extract1578 = extractelement <16 x double> %743, i32 2
  %extract1579 = extractelement <16 x double> %743, i32 3
  %extract1580 = extractelement <16 x double> %743, i32 4
  %extract1581 = extractelement <16 x double> %743, i32 5
  %extract1582 = extractelement <16 x double> %743, i32 6
  %extract1583 = extractelement <16 x double> %743, i32 7
  %extract1584 = extractelement <16 x double> %743, i32 8
  %extract1585 = extractelement <16 x double> %743, i32 9
  %extract1586 = extractelement <16 x double> %743, i32 10
  %extract1587 = extractelement <16 x double> %743, i32 11
  %extract1588 = extractelement <16 x double> %743, i32 12
  %extract1589 = extractelement <16 x double> %743, i32 13
  %extract1590 = extractelement <16 x double> %743, i32 14
  %extract1591 = extractelement <16 x double> %743, i32 15
  %744 = tail call double @_Z3expd(double %extract1576) nounwind
  %745 = tail call double @_Z3expd(double %extract1577) nounwind
  %746 = tail call double @_Z3expd(double %extract1578) nounwind
  %747 = tail call double @_Z3expd(double %extract1579) nounwind
  %748 = tail call double @_Z3expd(double %extract1580) nounwind
  %749 = tail call double @_Z3expd(double %extract1581) nounwind
  %750 = tail call double @_Z3expd(double %extract1582) nounwind
  %751 = tail call double @_Z3expd(double %extract1583) nounwind
  %752 = tail call double @_Z3expd(double %extract1584) nounwind
  %753 = tail call double @_Z3expd(double %extract1585) nounwind
  %754 = tail call double @_Z3expd(double %extract1586) nounwind
  %755 = tail call double @_Z3expd(double %extract1587) nounwind
  %756 = tail call double @_Z3expd(double %extract1588) nounwind
  %757 = tail call double @_Z3expd(double %extract1589) nounwind
  %758 = tail call double @_Z3expd(double %extract1590) nounwind
  %759 = tail call double @_Z3expd(double %extract1591) nounwind
  %temp.vect1611 = insertelement <16 x double> undef, double %744, i32 0
  %temp.vect1612 = insertelement <16 x double> %temp.vect1611, double %745, i32 1
  %temp.vect1613 = insertelement <16 x double> %temp.vect1612, double %746, i32 2
  %temp.vect1614 = insertelement <16 x double> %temp.vect1613, double %747, i32 3
  %temp.vect1615 = insertelement <16 x double> %temp.vect1614, double %748, i32 4
  %temp.vect1616 = insertelement <16 x double> %temp.vect1615, double %749, i32 5
  %temp.vect1617 = insertelement <16 x double> %temp.vect1616, double %750, i32 6
  %temp.vect1618 = insertelement <16 x double> %temp.vect1617, double %751, i32 7
  %temp.vect1619 = insertelement <16 x double> %temp.vect1618, double %752, i32 8
  %temp.vect1620 = insertelement <16 x double> %temp.vect1619, double %753, i32 9
  %temp.vect1621 = insertelement <16 x double> %temp.vect1620, double %754, i32 10
  %temp.vect1622 = insertelement <16 x double> %temp.vect1621, double %755, i32 11
  %temp.vect1623 = insertelement <16 x double> %temp.vect1622, double %756, i32 12
  %temp.vect1624 = insertelement <16 x double> %temp.vect1623, double %757, i32 13
  %temp.vect1625 = insertelement <16 x double> %temp.vect1624, double %758, i32 14
  %temp.vect1626 = insertelement <16 x double> %temp.vect1625, double %759, i32 15
  %760 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %761 = load i64* %760, align 8
  %762 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %763 = load i64* %762, align 8
  %764 = add i64 %761, %763
  %extract1594 = add i64 %764, 3870720
  %765 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1594
  %ptrTypeCast1610 = bitcast double addrspace(1)* %765 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect1626, <16 x double> addrspace(1)* %ptrTypeCast1610, align 8
  %766 = fmul <16 x double> %24, <double 0x4077BEDB7AE5796C, double 0x4077BEDB7AE5796C, double 0x4077BEDB7AE5796C, double 0x4077BEDB7AE5796C, double 0x4077BEDB7AE5796C, double 0x4077BEDB7AE5796C, double 0x4077BEDB7AE5796C, double 0x4077BEDB7AE5796C, double 0x4077BEDB7AE5796C, double 0x4077BEDB7AE5796C, double 0x4077BEDB7AE5796C, double 0x4077BEDB7AE5796C, double 0x4077BEDB7AE5796C, double 0x4077BEDB7AE5796C, double 0x4077BEDB7AE5796C, double 0x4077BEDB7AE5796C>
  %767 = fadd <16 x double> %766, <double 0x403D5F8CA9C70E47, double 0x403D5F8CA9C70E47, double 0x403D5F8CA9C70E47, double 0x403D5F8CA9C70E47, double 0x403D5F8CA9C70E47, double 0x403D5F8CA9C70E47, double 0x403D5F8CA9C70E47, double 0x403D5F8CA9C70E47, double 0x403D5F8CA9C70E47, double 0x403D5F8CA9C70E47, double 0x403D5F8CA9C70E47, double 0x403D5F8CA9C70E47, double 0x403D5F8CA9C70E47, double 0x403D5F8CA9C70E47, double 0x403D5F8CA9C70E47, double 0x403D5F8CA9C70E47>
  %extract1627 = extractelement <16 x double> %767, i32 0
  %extract1628 = extractelement <16 x double> %767, i32 1
  %extract1629 = extractelement <16 x double> %767, i32 2
  %extract1630 = extractelement <16 x double> %767, i32 3
  %extract1631 = extractelement <16 x double> %767, i32 4
  %extract1632 = extractelement <16 x double> %767, i32 5
  %extract1633 = extractelement <16 x double> %767, i32 6
  %extract1634 = extractelement <16 x double> %767, i32 7
  %extract1635 = extractelement <16 x double> %767, i32 8
  %extract1636 = extractelement <16 x double> %767, i32 9
  %extract1637 = extractelement <16 x double> %767, i32 10
  %extract1638 = extractelement <16 x double> %767, i32 11
  %extract1639 = extractelement <16 x double> %767, i32 12
  %extract1640 = extractelement <16 x double> %767, i32 13
  %extract1641 = extractelement <16 x double> %767, i32 14
  %extract1642 = extractelement <16 x double> %767, i32 15
  %768 = tail call double @_Z3expd(double %extract1627) nounwind
  %769 = tail call double @_Z3expd(double %extract1628) nounwind
  %770 = tail call double @_Z3expd(double %extract1629) nounwind
  %771 = tail call double @_Z3expd(double %extract1630) nounwind
  %772 = tail call double @_Z3expd(double %extract1631) nounwind
  %773 = tail call double @_Z3expd(double %extract1632) nounwind
  %774 = tail call double @_Z3expd(double %extract1633) nounwind
  %775 = tail call double @_Z3expd(double %extract1634) nounwind
  %776 = tail call double @_Z3expd(double %extract1635) nounwind
  %777 = tail call double @_Z3expd(double %extract1636) nounwind
  %778 = tail call double @_Z3expd(double %extract1637) nounwind
  %779 = tail call double @_Z3expd(double %extract1638) nounwind
  %780 = tail call double @_Z3expd(double %extract1639) nounwind
  %781 = tail call double @_Z3expd(double %extract1640) nounwind
  %782 = tail call double @_Z3expd(double %extract1641) nounwind
  %783 = tail call double @_Z3expd(double %extract1642) nounwind
  %temp.vect1662 = insertelement <16 x double> undef, double %768, i32 0
  %temp.vect1663 = insertelement <16 x double> %temp.vect1662, double %769, i32 1
  %temp.vect1664 = insertelement <16 x double> %temp.vect1663, double %770, i32 2
  %temp.vect1665 = insertelement <16 x double> %temp.vect1664, double %771, i32 3
  %temp.vect1666 = insertelement <16 x double> %temp.vect1665, double %772, i32 4
  %temp.vect1667 = insertelement <16 x double> %temp.vect1666, double %773, i32 5
  %temp.vect1668 = insertelement <16 x double> %temp.vect1667, double %774, i32 6
  %temp.vect1669 = insertelement <16 x double> %temp.vect1668, double %775, i32 7
  %temp.vect1670 = insertelement <16 x double> %temp.vect1669, double %776, i32 8
  %temp.vect1671 = insertelement <16 x double> %temp.vect1670, double %777, i32 9
  %temp.vect1672 = insertelement <16 x double> %temp.vect1671, double %778, i32 10
  %temp.vect1673 = insertelement <16 x double> %temp.vect1672, double %779, i32 11
  %temp.vect1674 = insertelement <16 x double> %temp.vect1673, double %780, i32 12
  %temp.vect1675 = insertelement <16 x double> %temp.vect1674, double %781, i32 13
  %temp.vect1676 = insertelement <16 x double> %temp.vect1675, double %782, i32 14
  %temp.vect1677 = insertelement <16 x double> %temp.vect1676, double %783, i32 15
  %784 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %785 = load i64* %784, align 8
  %786 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %787 = load i64* %786, align 8
  %788 = add i64 %785, %787
  %extract1645 = add i64 %788, 3981312
  %789 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1645
  %ptrTypeCast1661 = bitcast double addrspace(1)* %789 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect1677, <16 x double> addrspace(1)* %ptrTypeCast1661, align 8
  %790 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %791 = load i64* %790, align 8
  %792 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %793 = load i64* %792, align 8
  %794 = add i64 %791, %793
  %extract1680 = add i64 %794, 4091904
  %795 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1680
  %ptrTypeCast1696 = bitcast double addrspace(1)* %795 to <16 x double> addrspace(1)*
  store <16 x double> <double 3.300000e+13, double 3.300000e+13, double 3.300000e+13, double 3.300000e+13, double 3.300000e+13, double 3.300000e+13, double 3.300000e+13, double 3.300000e+13, double 3.300000e+13, double 3.300000e+13, double 3.300000e+13, double 3.300000e+13, double 3.300000e+13, double 3.300000e+13, double 3.300000e+13, double 3.300000e+13>, <16 x double> addrspace(1)* %ptrTypeCast1696, align 8
  %796 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %797 = load i64* %796, align 8
  %798 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %799 = load i64* %798, align 8
  %800 = add i64 %797, %799
  %extract1699 = add i64 %800, 4202496
  %801 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1699
  %ptrTypeCast1715 = bitcast double addrspace(1)* %801 to <16 x double> addrspace(1)*
  store <16 x double> <double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast1715, align 8
  %802 = fmul <16 x double> %24, <double 0x4075B383137B0707, double 0x4075B383137B0707, double 0x4075B383137B0707, double 0x4075B383137B0707, double 0x4075B383137B0707, double 0x4075B383137B0707, double 0x4075B383137B0707, double 0x4075B383137B0707, double 0x4075B383137B0707, double 0x4075B383137B0707, double 0x4075B383137B0707, double 0x4075B383137B0707, double 0x4075B383137B0707, double 0x4075B383137B0707, double 0x4075B383137B0707, double 0x4075B383137B0707>
  %803 = fsub <16 x double> <double 0x403CDAD3F1843C3A, double 0x403CDAD3F1843C3A, double 0x403CDAD3F1843C3A, double 0x403CDAD3F1843C3A, double 0x403CDAD3F1843C3A, double 0x403CDAD3F1843C3A, double 0x403CDAD3F1843C3A, double 0x403CDAD3F1843C3A, double 0x403CDAD3F1843C3A, double 0x403CDAD3F1843C3A, double 0x403CDAD3F1843C3A, double 0x403CDAD3F1843C3A, double 0x403CDAD3F1843C3A, double 0x403CDAD3F1843C3A, double 0x403CDAD3F1843C3A, double 0x403CDAD3F1843C3A>, %802
  %extract1716 = extractelement <16 x double> %803, i32 0
  %extract1717 = extractelement <16 x double> %803, i32 1
  %extract1718 = extractelement <16 x double> %803, i32 2
  %extract1719 = extractelement <16 x double> %803, i32 3
  %extract1720 = extractelement <16 x double> %803, i32 4
  %extract1721 = extractelement <16 x double> %803, i32 5
  %extract1722 = extractelement <16 x double> %803, i32 6
  %extract1723 = extractelement <16 x double> %803, i32 7
  %extract1724 = extractelement <16 x double> %803, i32 8
  %extract1725 = extractelement <16 x double> %803, i32 9
  %extract1726 = extractelement <16 x double> %803, i32 10
  %extract1727 = extractelement <16 x double> %803, i32 11
  %extract1728 = extractelement <16 x double> %803, i32 12
  %extract1729 = extractelement <16 x double> %803, i32 13
  %extract1730 = extractelement <16 x double> %803, i32 14
  %extract1731 = extractelement <16 x double> %803, i32 15
  %804 = tail call double @_Z3expd(double %extract1716) nounwind
  %805 = tail call double @_Z3expd(double %extract1717) nounwind
  %806 = tail call double @_Z3expd(double %extract1718) nounwind
  %807 = tail call double @_Z3expd(double %extract1719) nounwind
  %808 = tail call double @_Z3expd(double %extract1720) nounwind
  %809 = tail call double @_Z3expd(double %extract1721) nounwind
  %810 = tail call double @_Z3expd(double %extract1722) nounwind
  %811 = tail call double @_Z3expd(double %extract1723) nounwind
  %812 = tail call double @_Z3expd(double %extract1724) nounwind
  %813 = tail call double @_Z3expd(double %extract1725) nounwind
  %814 = tail call double @_Z3expd(double %extract1726) nounwind
  %815 = tail call double @_Z3expd(double %extract1727) nounwind
  %816 = tail call double @_Z3expd(double %extract1728) nounwind
  %817 = tail call double @_Z3expd(double %extract1729) nounwind
  %818 = tail call double @_Z3expd(double %extract1730) nounwind
  %819 = tail call double @_Z3expd(double %extract1731) nounwind
  %temp.vect1751 = insertelement <16 x double> undef, double %804, i32 0
  %temp.vect1752 = insertelement <16 x double> %temp.vect1751, double %805, i32 1
  %temp.vect1753 = insertelement <16 x double> %temp.vect1752, double %806, i32 2
  %temp.vect1754 = insertelement <16 x double> %temp.vect1753, double %807, i32 3
  %temp.vect1755 = insertelement <16 x double> %temp.vect1754, double %808, i32 4
  %temp.vect1756 = insertelement <16 x double> %temp.vect1755, double %809, i32 5
  %temp.vect1757 = insertelement <16 x double> %temp.vect1756, double %810, i32 6
  %temp.vect1758 = insertelement <16 x double> %temp.vect1757, double %811, i32 7
  %temp.vect1759 = insertelement <16 x double> %temp.vect1758, double %812, i32 8
  %temp.vect1760 = insertelement <16 x double> %temp.vect1759, double %813, i32 9
  %temp.vect1761 = insertelement <16 x double> %temp.vect1760, double %814, i32 10
  %temp.vect1762 = insertelement <16 x double> %temp.vect1761, double %815, i32 11
  %temp.vect1763 = insertelement <16 x double> %temp.vect1762, double %816, i32 12
  %temp.vect1764 = insertelement <16 x double> %temp.vect1763, double %817, i32 13
  %temp.vect1765 = insertelement <16 x double> %temp.vect1764, double %818, i32 14
  %temp.vect1766 = insertelement <16 x double> %temp.vect1765, double %819, i32 15
  %820 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %821 = load i64* %820, align 8
  %822 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %823 = load i64* %822, align 8
  %824 = add i64 %821, %823
  %extract1734 = add i64 %824, 4313088
  %825 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1734
  %ptrTypeCast1750 = bitcast double addrspace(1)* %825 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect1766, <16 x double> addrspace(1)* %ptrTypeCast1750, align 8
  %826 = fmul <16 x double> %temp.vect97, <double 4.800000e-01, double 4.800000e-01, double 4.800000e-01, double 4.800000e-01, double 4.800000e-01, double 4.800000e-01, double 4.800000e-01, double 4.800000e-01, double 4.800000e-01, double 4.800000e-01, double 4.800000e-01, double 4.800000e-01, double 4.800000e-01, double 4.800000e-01, double 4.800000e-01, double 4.800000e-01>
  %827 = fadd <16 x double> %826, <double 0x403BB79A572EBAFE, double 0x403BB79A572EBAFE, double 0x403BB79A572EBAFE, double 0x403BB79A572EBAFE, double 0x403BB79A572EBAFE, double 0x403BB79A572EBAFE, double 0x403BB79A572EBAFE, double 0x403BB79A572EBAFE, double 0x403BB79A572EBAFE, double 0x403BB79A572EBAFE, double 0x403BB79A572EBAFE, double 0x403BB79A572EBAFE, double 0x403BB79A572EBAFE, double 0x403BB79A572EBAFE, double 0x403BB79A572EBAFE, double 0x403BB79A572EBAFE>
  %828 = fmul <16 x double> %24, <double 0x40605AC33F85510D, double 0x40605AC33F85510D, double 0x40605AC33F85510D, double 0x40605AC33F85510D, double 0x40605AC33F85510D, double 0x40605AC33F85510D, double 0x40605AC33F85510D, double 0x40605AC33F85510D, double 0x40605AC33F85510D, double 0x40605AC33F85510D, double 0x40605AC33F85510D, double 0x40605AC33F85510D, double 0x40605AC33F85510D, double 0x40605AC33F85510D, double 0x40605AC33F85510D, double 0x40605AC33F85510D>
  %829 = fadd <16 x double> %827, %828
  %extract1767 = extractelement <16 x double> %829, i32 0
  %extract1768 = extractelement <16 x double> %829, i32 1
  %extract1769 = extractelement <16 x double> %829, i32 2
  %extract1770 = extractelement <16 x double> %829, i32 3
  %extract1771 = extractelement <16 x double> %829, i32 4
  %extract1772 = extractelement <16 x double> %829, i32 5
  %extract1773 = extractelement <16 x double> %829, i32 6
  %extract1774 = extractelement <16 x double> %829, i32 7
  %extract1775 = extractelement <16 x double> %829, i32 8
  %extract1776 = extractelement <16 x double> %829, i32 9
  %extract1777 = extractelement <16 x double> %829, i32 10
  %extract1778 = extractelement <16 x double> %829, i32 11
  %extract1779 = extractelement <16 x double> %829, i32 12
  %extract1780 = extractelement <16 x double> %829, i32 13
  %extract1781 = extractelement <16 x double> %829, i32 14
  %extract1782 = extractelement <16 x double> %829, i32 15
  %830 = tail call double @_Z3expd(double %extract1767) nounwind
  %831 = tail call double @_Z3expd(double %extract1768) nounwind
  %832 = tail call double @_Z3expd(double %extract1769) nounwind
  %833 = tail call double @_Z3expd(double %extract1770) nounwind
  %834 = tail call double @_Z3expd(double %extract1771) nounwind
  %835 = tail call double @_Z3expd(double %extract1772) nounwind
  %836 = tail call double @_Z3expd(double %extract1773) nounwind
  %837 = tail call double @_Z3expd(double %extract1774) nounwind
  %838 = tail call double @_Z3expd(double %extract1775) nounwind
  %839 = tail call double @_Z3expd(double %extract1776) nounwind
  %840 = tail call double @_Z3expd(double %extract1777) nounwind
  %841 = tail call double @_Z3expd(double %extract1778) nounwind
  %842 = tail call double @_Z3expd(double %extract1779) nounwind
  %843 = tail call double @_Z3expd(double %extract1780) nounwind
  %844 = tail call double @_Z3expd(double %extract1781) nounwind
  %845 = tail call double @_Z3expd(double %extract1782) nounwind
  %temp.vect1802 = insertelement <16 x double> undef, double %830, i32 0
  %temp.vect1803 = insertelement <16 x double> %temp.vect1802, double %831, i32 1
  %temp.vect1804 = insertelement <16 x double> %temp.vect1803, double %832, i32 2
  %temp.vect1805 = insertelement <16 x double> %temp.vect1804, double %833, i32 3
  %temp.vect1806 = insertelement <16 x double> %temp.vect1805, double %834, i32 4
  %temp.vect1807 = insertelement <16 x double> %temp.vect1806, double %835, i32 5
  %temp.vect1808 = insertelement <16 x double> %temp.vect1807, double %836, i32 6
  %temp.vect1809 = insertelement <16 x double> %temp.vect1808, double %837, i32 7
  %temp.vect1810 = insertelement <16 x double> %temp.vect1809, double %838, i32 8
  %temp.vect1811 = insertelement <16 x double> %temp.vect1810, double %839, i32 9
  %temp.vect1812 = insertelement <16 x double> %temp.vect1811, double %840, i32 10
  %temp.vect1813 = insertelement <16 x double> %temp.vect1812, double %841, i32 11
  %temp.vect1814 = insertelement <16 x double> %temp.vect1813, double %842, i32 12
  %temp.vect1815 = insertelement <16 x double> %temp.vect1814, double %843, i32 13
  %temp.vect1816 = insertelement <16 x double> %temp.vect1815, double %844, i32 14
  %temp.vect1817 = insertelement <16 x double> %temp.vect1816, double %845, i32 15
  %846 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %847 = load i64* %846, align 8
  %848 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %849 = load i64* %848, align 8
  %850 = add i64 %847, %849
  %extract1785 = add i64 %850, 4423680
  %851 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1785
  %ptrTypeCast1801 = bitcast double addrspace(1)* %851 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect1817, <16 x double> addrspace(1)* %ptrTypeCast1801, align 8
  %852 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %853 = load i64* %852, align 8
  %854 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %855 = load i64* %854, align 8
  %856 = add i64 %853, %855
  %extract1820 = add i64 %856, 4534272
  %857 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1820
  %ptrTypeCast1836 = bitcast double addrspace(1)* %857 to <16 x double> addrspace(1)*
  store <16 x double> <double 7.340000e+13, double 7.340000e+13, double 7.340000e+13, double 7.340000e+13, double 7.340000e+13, double 7.340000e+13, double 7.340000e+13, double 7.340000e+13, double 7.340000e+13, double 7.340000e+13, double 7.340000e+13, double 7.340000e+13, double 7.340000e+13, double 7.340000e+13, double 7.340000e+13, double 7.340000e+13>, <16 x double> addrspace(1)* %ptrTypeCast1836, align 8
  %858 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %859 = load i64* %858, align 8
  %860 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %861 = load i64* %860, align 8
  %862 = add i64 %859, %861
  %extract1839 = add i64 %862, 4644864
  %863 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1839
  %ptrTypeCast1855 = bitcast double addrspace(1)* %863 to <16 x double> addrspace(1)*
  store <16 x double> <double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast1855, align 8
  %864 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %865 = load i64* %864, align 8
  %866 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %867 = load i64* %866, align 8
  %868 = add i64 %865, %867
  %extract1858 = add i64 %868, 4755456
  %869 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1858
  %ptrTypeCast1874 = bitcast double addrspace(1)* %869 to <16 x double> addrspace(1)*
  store <16 x double> <double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast1874, align 8
  %870 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %871 = load i64* %870, align 8
  %872 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %873 = load i64* %872, align 8
  %874 = add i64 %871, %873
  %extract1877 = add i64 %874, 4866048
  %875 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1877
  %ptrTypeCast1893 = bitcast double addrspace(1)* %875 to <16 x double> addrspace(1)*
  store <16 x double> <double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast1893, align 8
  %876 = fsub <16 x double> <double 0x4043E28B9778572A, double 0x4043E28B9778572A, double 0x4043E28B9778572A, double 0x4043E28B9778572A, double 0x4043E28B9778572A, double 0x4043E28B9778572A, double 0x4043E28B9778572A, double 0x4043E28B9778572A, double 0x4043E28B9778572A, double 0x4043E28B9778572A, double 0x4043E28B9778572A, double 0x4043E28B9778572A, double 0x4043E28B9778572A, double 0x4043E28B9778572A, double 0x4043E28B9778572A, double 0x4043E28B9778572A>, %temp.vect97
  %877 = fmul <16 x double> %24, <double 0x40C0B557780346DC, double 0x40C0B557780346DC, double 0x40C0B557780346DC, double 0x40C0B557780346DC, double 0x40C0B557780346DC, double 0x40C0B557780346DC, double 0x40C0B557780346DC, double 0x40C0B557780346DC, double 0x40C0B557780346DC, double 0x40C0B557780346DC, double 0x40C0B557780346DC, double 0x40C0B557780346DC, double 0x40C0B557780346DC, double 0x40C0B557780346DC, double 0x40C0B557780346DC, double 0x40C0B557780346DC>
  %878 = fsub <16 x double> %876, %877
  %extract1894 = extractelement <16 x double> %878, i32 0
  %extract1895 = extractelement <16 x double> %878, i32 1
  %extract1896 = extractelement <16 x double> %878, i32 2
  %extract1897 = extractelement <16 x double> %878, i32 3
  %extract1898 = extractelement <16 x double> %878, i32 4
  %extract1899 = extractelement <16 x double> %878, i32 5
  %extract1900 = extractelement <16 x double> %878, i32 6
  %extract1901 = extractelement <16 x double> %878, i32 7
  %extract1902 = extractelement <16 x double> %878, i32 8
  %extract1903 = extractelement <16 x double> %878, i32 9
  %extract1904 = extractelement <16 x double> %878, i32 10
  %extract1905 = extractelement <16 x double> %878, i32 11
  %extract1906 = extractelement <16 x double> %878, i32 12
  %extract1907 = extractelement <16 x double> %878, i32 13
  %extract1908 = extractelement <16 x double> %878, i32 14
  %extract1909 = extractelement <16 x double> %878, i32 15
  %879 = tail call double @_Z3expd(double %extract1894) nounwind
  %880 = tail call double @_Z3expd(double %extract1895) nounwind
  %881 = tail call double @_Z3expd(double %extract1896) nounwind
  %882 = tail call double @_Z3expd(double %extract1897) nounwind
  %883 = tail call double @_Z3expd(double %extract1898) nounwind
  %884 = tail call double @_Z3expd(double %extract1899) nounwind
  %885 = tail call double @_Z3expd(double %extract1900) nounwind
  %886 = tail call double @_Z3expd(double %extract1901) nounwind
  %887 = tail call double @_Z3expd(double %extract1902) nounwind
  %888 = tail call double @_Z3expd(double %extract1903) nounwind
  %889 = tail call double @_Z3expd(double %extract1904) nounwind
  %890 = tail call double @_Z3expd(double %extract1905) nounwind
  %891 = tail call double @_Z3expd(double %extract1906) nounwind
  %892 = tail call double @_Z3expd(double %extract1907) nounwind
  %893 = tail call double @_Z3expd(double %extract1908) nounwind
  %894 = tail call double @_Z3expd(double %extract1909) nounwind
  %temp.vect1929 = insertelement <16 x double> undef, double %879, i32 0
  %temp.vect1930 = insertelement <16 x double> %temp.vect1929, double %880, i32 1
  %temp.vect1931 = insertelement <16 x double> %temp.vect1930, double %881, i32 2
  %temp.vect1932 = insertelement <16 x double> %temp.vect1931, double %882, i32 3
  %temp.vect1933 = insertelement <16 x double> %temp.vect1932, double %883, i32 4
  %temp.vect1934 = insertelement <16 x double> %temp.vect1933, double %884, i32 5
  %temp.vect1935 = insertelement <16 x double> %temp.vect1934, double %885, i32 6
  %temp.vect1936 = insertelement <16 x double> %temp.vect1935, double %886, i32 7
  %temp.vect1937 = insertelement <16 x double> %temp.vect1936, double %887, i32 8
  %temp.vect1938 = insertelement <16 x double> %temp.vect1937, double %888, i32 9
  %temp.vect1939 = insertelement <16 x double> %temp.vect1938, double %889, i32 10
  %temp.vect1940 = insertelement <16 x double> %temp.vect1939, double %890, i32 11
  %temp.vect1941 = insertelement <16 x double> %temp.vect1940, double %891, i32 12
  %temp.vect1942 = insertelement <16 x double> %temp.vect1941, double %892, i32 13
  %temp.vect1943 = insertelement <16 x double> %temp.vect1942, double %893, i32 14
  %temp.vect1944 = insertelement <16 x double> %temp.vect1943, double %894, i32 15
  %895 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %896 = load i64* %895, align 8
  %897 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %898 = load i64* %897, align 8
  %899 = add i64 %896, %898
  %extract1912 = add i64 %899, 4976640
  %900 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1912
  %ptrTypeCast1928 = bitcast double addrspace(1)* %900 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect1944, <16 x double> addrspace(1)* %ptrTypeCast1928, align 8
  %901 = fmul <16 x double> %24, <double 0x4069292C6045BAF5, double 0x4069292C6045BAF5, double 0x4069292C6045BAF5, double 0x4069292C6045BAF5, double 0x4069292C6045BAF5, double 0x4069292C6045BAF5, double 0x4069292C6045BAF5, double 0x4069292C6045BAF5, double 0x4069292C6045BAF5, double 0x4069292C6045BAF5, double 0x4069292C6045BAF5, double 0x4069292C6045BAF5, double 0x4069292C6045BAF5, double 0x4069292C6045BAF5, double 0x4069292C6045BAF5, double 0x4069292C6045BAF5>
  %902 = fsub <16 x double> <double 0x403DA8BF53678621, double 0x403DA8BF53678621, double 0x403DA8BF53678621, double 0x403DA8BF53678621, double 0x403DA8BF53678621, double 0x403DA8BF53678621, double 0x403DA8BF53678621, double 0x403DA8BF53678621, double 0x403DA8BF53678621, double 0x403DA8BF53678621, double 0x403DA8BF53678621, double 0x403DA8BF53678621, double 0x403DA8BF53678621, double 0x403DA8BF53678621, double 0x403DA8BF53678621, double 0x403DA8BF53678621>, %901
  %extract1945 = extractelement <16 x double> %902, i32 0
  %extract1946 = extractelement <16 x double> %902, i32 1
  %extract1947 = extractelement <16 x double> %902, i32 2
  %extract1948 = extractelement <16 x double> %902, i32 3
  %extract1949 = extractelement <16 x double> %902, i32 4
  %extract1950 = extractelement <16 x double> %902, i32 5
  %extract1951 = extractelement <16 x double> %902, i32 6
  %extract1952 = extractelement <16 x double> %902, i32 7
  %extract1953 = extractelement <16 x double> %902, i32 8
  %extract1954 = extractelement <16 x double> %902, i32 9
  %extract1955 = extractelement <16 x double> %902, i32 10
  %extract1956 = extractelement <16 x double> %902, i32 11
  %extract1957 = extractelement <16 x double> %902, i32 12
  %extract1958 = extractelement <16 x double> %902, i32 13
  %extract1959 = extractelement <16 x double> %902, i32 14
  %extract1960 = extractelement <16 x double> %902, i32 15
  %903 = tail call double @_Z3expd(double %extract1945) nounwind
  %904 = tail call double @_Z3expd(double %extract1946) nounwind
  %905 = tail call double @_Z3expd(double %extract1947) nounwind
  %906 = tail call double @_Z3expd(double %extract1948) nounwind
  %907 = tail call double @_Z3expd(double %extract1949) nounwind
  %908 = tail call double @_Z3expd(double %extract1950) nounwind
  %909 = tail call double @_Z3expd(double %extract1951) nounwind
  %910 = tail call double @_Z3expd(double %extract1952) nounwind
  %911 = tail call double @_Z3expd(double %extract1953) nounwind
  %912 = tail call double @_Z3expd(double %extract1954) nounwind
  %913 = tail call double @_Z3expd(double %extract1955) nounwind
  %914 = tail call double @_Z3expd(double %extract1956) nounwind
  %915 = tail call double @_Z3expd(double %extract1957) nounwind
  %916 = tail call double @_Z3expd(double %extract1958) nounwind
  %917 = tail call double @_Z3expd(double %extract1959) nounwind
  %918 = tail call double @_Z3expd(double %extract1960) nounwind
  %temp.vect1980 = insertelement <16 x double> undef, double %903, i32 0
  %temp.vect1981 = insertelement <16 x double> %temp.vect1980, double %904, i32 1
  %temp.vect1982 = insertelement <16 x double> %temp.vect1981, double %905, i32 2
  %temp.vect1983 = insertelement <16 x double> %temp.vect1982, double %906, i32 3
  %temp.vect1984 = insertelement <16 x double> %temp.vect1983, double %907, i32 4
  %temp.vect1985 = insertelement <16 x double> %temp.vect1984, double %908, i32 5
  %temp.vect1986 = insertelement <16 x double> %temp.vect1985, double %909, i32 6
  %temp.vect1987 = insertelement <16 x double> %temp.vect1986, double %910, i32 7
  %temp.vect1988 = insertelement <16 x double> %temp.vect1987, double %911, i32 8
  %temp.vect1989 = insertelement <16 x double> %temp.vect1988, double %912, i32 9
  %temp.vect1990 = insertelement <16 x double> %temp.vect1989, double %913, i32 10
  %temp.vect1991 = insertelement <16 x double> %temp.vect1990, double %914, i32 11
  %temp.vect1992 = insertelement <16 x double> %temp.vect1991, double %915, i32 12
  %temp.vect1993 = insertelement <16 x double> %temp.vect1992, double %916, i32 13
  %temp.vect1994 = insertelement <16 x double> %temp.vect1993, double %917, i32 14
  %temp.vect1995 = insertelement <16 x double> %temp.vect1994, double %918, i32 15
  %919 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %920 = load i64* %919, align 8
  %921 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %922 = load i64* %921, align 8
  %923 = add i64 %920, %922
  %extract1963 = add i64 %923, 5087232
  %924 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract1963
  %ptrTypeCast1979 = bitcast double addrspace(1)* %924 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect1995, <16 x double> addrspace(1)* %ptrTypeCast1979, align 8
  %925 = fmul <16 x double> %temp.vect97, <double 8.000000e-01, double 8.000000e-01, double 8.000000e-01, double 8.000000e-01, double 8.000000e-01, double 8.000000e-01, double 8.000000e-01, double 8.000000e-01, double 8.000000e-01, double 8.000000e-01, double 8.000000e-01, double 8.000000e-01, double 8.000000e-01, double 8.000000e-01, double 8.000000e-01, double 8.000000e-01>
  %926 = fsub <16 x double> <double 0x4042E0FABF4E5F09, double 0x4042E0FABF4E5F09, double 0x4042E0FABF4E5F09, double 0x4042E0FABF4E5F09, double 0x4042E0FABF4E5F09, double 0x4042E0FABF4E5F09, double 0x4042E0FABF4E5F09, double 0x4042E0FABF4E5F09, double 0x4042E0FABF4E5F09, double 0x4042E0FABF4E5F09, double 0x4042E0FABF4E5F09, double 0x4042E0FABF4E5F09, double 0x4042E0FABF4E5F09, double 0x4042E0FABF4E5F09, double 0x4042E0FABF4E5F09, double 0x4042E0FABF4E5F09>, %925
  %extract1996 = extractelement <16 x double> %926, i32 0
  %extract1997 = extractelement <16 x double> %926, i32 1
  %extract1998 = extractelement <16 x double> %926, i32 2
  %extract1999 = extractelement <16 x double> %926, i32 3
  %extract2000 = extractelement <16 x double> %926, i32 4
  %extract2001 = extractelement <16 x double> %926, i32 5
  %extract2002 = extractelement <16 x double> %926, i32 6
  %extract2003 = extractelement <16 x double> %926, i32 7
  %extract2004 = extractelement <16 x double> %926, i32 8
  %extract2005 = extractelement <16 x double> %926, i32 9
  %extract2006 = extractelement <16 x double> %926, i32 10
  %extract2007 = extractelement <16 x double> %926, i32 11
  %extract2008 = extractelement <16 x double> %926, i32 12
  %extract2009 = extractelement <16 x double> %926, i32 13
  %extract2010 = extractelement <16 x double> %926, i32 14
  %extract2011 = extractelement <16 x double> %926, i32 15
  %927 = tail call double @_Z3expd(double %extract1996) nounwind
  %928 = tail call double @_Z3expd(double %extract1997) nounwind
  %929 = tail call double @_Z3expd(double %extract1998) nounwind
  %930 = tail call double @_Z3expd(double %extract1999) nounwind
  %931 = tail call double @_Z3expd(double %extract2000) nounwind
  %932 = tail call double @_Z3expd(double %extract2001) nounwind
  %933 = tail call double @_Z3expd(double %extract2002) nounwind
  %934 = tail call double @_Z3expd(double %extract2003) nounwind
  %935 = tail call double @_Z3expd(double %extract2004) nounwind
  %936 = tail call double @_Z3expd(double %extract2005) nounwind
  %937 = tail call double @_Z3expd(double %extract2006) nounwind
  %938 = tail call double @_Z3expd(double %extract2007) nounwind
  %939 = tail call double @_Z3expd(double %extract2008) nounwind
  %940 = tail call double @_Z3expd(double %extract2009) nounwind
  %941 = tail call double @_Z3expd(double %extract2010) nounwind
  %942 = tail call double @_Z3expd(double %extract2011) nounwind
  %temp.vect2031 = insertelement <16 x double> undef, double %927, i32 0
  %temp.vect2032 = insertelement <16 x double> %temp.vect2031, double %928, i32 1
  %temp.vect2033 = insertelement <16 x double> %temp.vect2032, double %929, i32 2
  %temp.vect2034 = insertelement <16 x double> %temp.vect2033, double %930, i32 3
  %temp.vect2035 = insertelement <16 x double> %temp.vect2034, double %931, i32 4
  %temp.vect2036 = insertelement <16 x double> %temp.vect2035, double %932, i32 5
  %temp.vect2037 = insertelement <16 x double> %temp.vect2036, double %933, i32 6
  %temp.vect2038 = insertelement <16 x double> %temp.vect2037, double %934, i32 7
  %temp.vect2039 = insertelement <16 x double> %temp.vect2038, double %935, i32 8
  %temp.vect2040 = insertelement <16 x double> %temp.vect2039, double %936, i32 9
  %temp.vect2041 = insertelement <16 x double> %temp.vect2040, double %937, i32 10
  %temp.vect2042 = insertelement <16 x double> %temp.vect2041, double %938, i32 11
  %temp.vect2043 = insertelement <16 x double> %temp.vect2042, double %939, i32 12
  %temp.vect2044 = insertelement <16 x double> %temp.vect2043, double %940, i32 13
  %temp.vect2045 = insertelement <16 x double> %temp.vect2044, double %941, i32 14
  %temp.vect2046 = insertelement <16 x double> %temp.vect2045, double %942, i32 15
  %943 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %944 = load i64* %943, align 8
  %945 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %946 = load i64* %945, align 8
  %947 = add i64 %944, %946
  %extract2014 = add i64 %947, 5197824
  %948 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2014
  %ptrTypeCast2030 = bitcast double addrspace(1)* %948 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect2046, <16 x double> addrspace(1)* %ptrTypeCast2030, align 8
  %949 = fadd <16 x double> %481, <double 0x402A3EA66A627469, double 0x402A3EA66A627469, double 0x402A3EA66A627469, double 0x402A3EA66A627469, double 0x402A3EA66A627469, double 0x402A3EA66A627469, double 0x402A3EA66A627469, double 0x402A3EA66A627469, double 0x402A3EA66A627469, double 0x402A3EA66A627469, double 0x402A3EA66A627469, double 0x402A3EA66A627469, double 0x402A3EA66A627469, double 0x402A3EA66A627469, double 0x402A3EA66A627469, double 0x402A3EA66A627469>
  %950 = fmul <16 x double> %24, <double 0x40AC6C8355475A32, double 0x40AC6C8355475A32, double 0x40AC6C8355475A32, double 0x40AC6C8355475A32, double 0x40AC6C8355475A32, double 0x40AC6C8355475A32, double 0x40AC6C8355475A32, double 0x40AC6C8355475A32, double 0x40AC6C8355475A32, double 0x40AC6C8355475A32, double 0x40AC6C8355475A32, double 0x40AC6C8355475A32, double 0x40AC6C8355475A32, double 0x40AC6C8355475A32, double 0x40AC6C8355475A32, double 0x40AC6C8355475A32>
  %951 = fsub <16 x double> %949, %950
  %extract2047 = extractelement <16 x double> %951, i32 0
  %extract2048 = extractelement <16 x double> %951, i32 1
  %extract2049 = extractelement <16 x double> %951, i32 2
  %extract2050 = extractelement <16 x double> %951, i32 3
  %extract2051 = extractelement <16 x double> %951, i32 4
  %extract2052 = extractelement <16 x double> %951, i32 5
  %extract2053 = extractelement <16 x double> %951, i32 6
  %extract2054 = extractelement <16 x double> %951, i32 7
  %extract2055 = extractelement <16 x double> %951, i32 8
  %extract2056 = extractelement <16 x double> %951, i32 9
  %extract2057 = extractelement <16 x double> %951, i32 10
  %extract2058 = extractelement <16 x double> %951, i32 11
  %extract2059 = extractelement <16 x double> %951, i32 12
  %extract2060 = extractelement <16 x double> %951, i32 13
  %extract2061 = extractelement <16 x double> %951, i32 14
  %extract2062 = extractelement <16 x double> %951, i32 15
  %952 = tail call double @_Z3expd(double %extract2047) nounwind
  %953 = tail call double @_Z3expd(double %extract2048) nounwind
  %954 = tail call double @_Z3expd(double %extract2049) nounwind
  %955 = tail call double @_Z3expd(double %extract2050) nounwind
  %956 = tail call double @_Z3expd(double %extract2051) nounwind
  %957 = tail call double @_Z3expd(double %extract2052) nounwind
  %958 = tail call double @_Z3expd(double %extract2053) nounwind
  %959 = tail call double @_Z3expd(double %extract2054) nounwind
  %960 = tail call double @_Z3expd(double %extract2055) nounwind
  %961 = tail call double @_Z3expd(double %extract2056) nounwind
  %962 = tail call double @_Z3expd(double %extract2057) nounwind
  %963 = tail call double @_Z3expd(double %extract2058) nounwind
  %964 = tail call double @_Z3expd(double %extract2059) nounwind
  %965 = tail call double @_Z3expd(double %extract2060) nounwind
  %966 = tail call double @_Z3expd(double %extract2061) nounwind
  %967 = tail call double @_Z3expd(double %extract2062) nounwind
  %temp.vect2082 = insertelement <16 x double> undef, double %952, i32 0
  %temp.vect2083 = insertelement <16 x double> %temp.vect2082, double %953, i32 1
  %temp.vect2084 = insertelement <16 x double> %temp.vect2083, double %954, i32 2
  %temp.vect2085 = insertelement <16 x double> %temp.vect2084, double %955, i32 3
  %temp.vect2086 = insertelement <16 x double> %temp.vect2085, double %956, i32 4
  %temp.vect2087 = insertelement <16 x double> %temp.vect2086, double %957, i32 5
  %temp.vect2088 = insertelement <16 x double> %temp.vect2087, double %958, i32 6
  %temp.vect2089 = insertelement <16 x double> %temp.vect2088, double %959, i32 7
  %temp.vect2090 = insertelement <16 x double> %temp.vect2089, double %960, i32 8
  %temp.vect2091 = insertelement <16 x double> %temp.vect2090, double %961, i32 9
  %temp.vect2092 = insertelement <16 x double> %temp.vect2091, double %962, i32 10
  %temp.vect2093 = insertelement <16 x double> %temp.vect2092, double %963, i32 11
  %temp.vect2094 = insertelement <16 x double> %temp.vect2093, double %964, i32 12
  %temp.vect2095 = insertelement <16 x double> %temp.vect2094, double %965, i32 13
  %temp.vect2096 = insertelement <16 x double> %temp.vect2095, double %966, i32 14
  %temp.vect2097 = insertelement <16 x double> %temp.vect2096, double %967, i32 15
  %968 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %969 = load i64* %968, align 8
  %970 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %971 = load i64* %970, align 8
  %972 = add i64 %969, %971
  %extract2065 = add i64 %972, 5308416
  %973 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2065
  %ptrTypeCast2081 = bitcast double addrspace(1)* %973 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect2097, <16 x double> addrspace(1)* %ptrTypeCast2081, align 8
  %974 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %975 = load i64* %974, align 8
  %976 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %977 = load i64* %976, align 8
  %978 = add i64 %975, %977
  %extract2100 = add i64 %978, 5419008
  %979 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2100
  %ptrTypeCast2116 = bitcast double addrspace(1)* %979 to <16 x double> addrspace(1)*
  store <16 x double> <double 8.000000e+13, double 8.000000e+13, double 8.000000e+13, double 8.000000e+13, double 8.000000e+13, double 8.000000e+13, double 8.000000e+13, double 8.000000e+13, double 8.000000e+13, double 8.000000e+13, double 8.000000e+13, double 8.000000e+13, double 8.000000e+13, double 8.000000e+13, double 8.000000e+13, double 8.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast2116, align 8
  %980 = fmul <16 x double> %24, <double 0xC08796999A1FD157, double 0xC08796999A1FD157, double 0xC08796999A1FD157, double 0xC08796999A1FD157, double 0xC08796999A1FD157, double 0xC08796999A1FD157, double 0xC08796999A1FD157, double 0xC08796999A1FD157, double 0xC08796999A1FD157, double 0xC08796999A1FD157, double 0xC08796999A1FD157, double 0xC08796999A1FD157, double 0xC08796999A1FD157, double 0xC08796999A1FD157, double 0xC08796999A1FD157, double 0xC08796999A1FD157>
  %extract2117 = extractelement <16 x double> %980, i32 0
  %extract2118 = extractelement <16 x double> %980, i32 1
  %extract2119 = extractelement <16 x double> %980, i32 2
  %extract2120 = extractelement <16 x double> %980, i32 3
  %extract2121 = extractelement <16 x double> %980, i32 4
  %extract2122 = extractelement <16 x double> %980, i32 5
  %extract2123 = extractelement <16 x double> %980, i32 6
  %extract2124 = extractelement <16 x double> %980, i32 7
  %extract2125 = extractelement <16 x double> %980, i32 8
  %extract2126 = extractelement <16 x double> %980, i32 9
  %extract2127 = extractelement <16 x double> %980, i32 10
  %extract2128 = extractelement <16 x double> %980, i32 11
  %extract2129 = extractelement <16 x double> %980, i32 12
  %extract2130 = extractelement <16 x double> %980, i32 13
  %extract2131 = extractelement <16 x double> %980, i32 14
  %extract2132 = extractelement <16 x double> %980, i32 15
  %981 = tail call double @_Z3expd(double %extract2117) nounwind
  %982 = tail call double @_Z3expd(double %extract2118) nounwind
  %983 = tail call double @_Z3expd(double %extract2119) nounwind
  %984 = tail call double @_Z3expd(double %extract2120) nounwind
  %985 = tail call double @_Z3expd(double %extract2121) nounwind
  %986 = tail call double @_Z3expd(double %extract2122) nounwind
  %987 = tail call double @_Z3expd(double %extract2123) nounwind
  %988 = tail call double @_Z3expd(double %extract2124) nounwind
  %989 = tail call double @_Z3expd(double %extract2125) nounwind
  %990 = tail call double @_Z3expd(double %extract2126) nounwind
  %991 = tail call double @_Z3expd(double %extract2127) nounwind
  %992 = tail call double @_Z3expd(double %extract2128) nounwind
  %993 = tail call double @_Z3expd(double %extract2129) nounwind
  %994 = tail call double @_Z3expd(double %extract2130) nounwind
  %995 = tail call double @_Z3expd(double %extract2131) nounwind
  %996 = tail call double @_Z3expd(double %extract2132) nounwind
  %temp.vect2133 = insertelement <16 x double> undef, double %981, i32 0
  %temp.vect2134 = insertelement <16 x double> %temp.vect2133, double %982, i32 1
  %temp.vect2135 = insertelement <16 x double> %temp.vect2134, double %983, i32 2
  %temp.vect2136 = insertelement <16 x double> %temp.vect2135, double %984, i32 3
  %temp.vect2137 = insertelement <16 x double> %temp.vect2136, double %985, i32 4
  %temp.vect2138 = insertelement <16 x double> %temp.vect2137, double %986, i32 5
  %temp.vect2139 = insertelement <16 x double> %temp.vect2138, double %987, i32 6
  %temp.vect2140 = insertelement <16 x double> %temp.vect2139, double %988, i32 7
  %temp.vect2141 = insertelement <16 x double> %temp.vect2140, double %989, i32 8
  %temp.vect2142 = insertelement <16 x double> %temp.vect2141, double %990, i32 9
  %temp.vect2143 = insertelement <16 x double> %temp.vect2142, double %991, i32 10
  %temp.vect2144 = insertelement <16 x double> %temp.vect2143, double %992, i32 11
  %temp.vect2145 = insertelement <16 x double> %temp.vect2144, double %993, i32 12
  %temp.vect2146 = insertelement <16 x double> %temp.vect2145, double %994, i32 13
  %temp.vect2147 = insertelement <16 x double> %temp.vect2146, double %995, i32 14
  %temp.vect2148 = insertelement <16 x double> %temp.vect2147, double %996, i32 15
  %997 = fmul <16 x double> %temp.vect2148, <double 1.056000e+13, double 1.056000e+13, double 1.056000e+13, double 1.056000e+13, double 1.056000e+13, double 1.056000e+13, double 1.056000e+13, double 1.056000e+13, double 1.056000e+13, double 1.056000e+13, double 1.056000e+13, double 1.056000e+13, double 1.056000e+13, double 1.056000e+13, double 1.056000e+13, double 1.056000e+13>
  %998 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %999 = load i64* %998, align 8
  %1000 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1001 = load i64* %1000, align 8
  %1002 = add i64 %999, %1001
  %extract2151 = add i64 %1002, 5529600
  %1003 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2151
  %ptrTypeCast2167 = bitcast double addrspace(1)* %1003 to <16 x double> addrspace(1)*
  store <16 x double> %997, <16 x double> addrspace(1)* %ptrTypeCast2167, align 8
  %1004 = fmul <16 x double> %temp.vect2148, <double 2.640000e+12, double 2.640000e+12, double 2.640000e+12, double 2.640000e+12, double 2.640000e+12, double 2.640000e+12, double 2.640000e+12, double 2.640000e+12, double 2.640000e+12, double 2.640000e+12, double 2.640000e+12, double 2.640000e+12, double 2.640000e+12, double 2.640000e+12, double 2.640000e+12, double 2.640000e+12>
  %1005 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1006 = load i64* %1005, align 8
  %1007 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1008 = load i64* %1007, align 8
  %1009 = add i64 %1006, %1008
  %extract2170 = add i64 %1009, 5640192
  %1010 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2170
  %ptrTypeCast2186 = bitcast double addrspace(1)* %1010 to <16 x double> addrspace(1)*
  store <16 x double> %1004, <16 x double> addrspace(1)* %ptrTypeCast2186, align 8
  %1011 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1012 = load i64* %1011, align 8
  %1013 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1014 = load i64* %1013, align 8
  %1015 = add i64 %1012, %1014
  %extract2189 = add i64 %1015, 5750784
  %1016 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2189
  %ptrTypeCast2205 = bitcast double addrspace(1)* %1016 to <16 x double> addrspace(1)*
  store <16 x double> <double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast2205, align 8
  %1017 = fadd <16 x double> %481, <double 0x40303D852C244B39, double 0x40303D852C244B39, double 0x40303D852C244B39, double 0x40303D852C244B39, double 0x40303D852C244B39, double 0x40303D852C244B39, double 0x40303D852C244B39, double 0x40303D852C244B39, double 0x40303D852C244B39, double 0x40303D852C244B39, double 0x40303D852C244B39, double 0x40303D852C244B39, double 0x40303D852C244B39, double 0x40303D852C244B39, double 0x40303D852C244B39, double 0x40303D852C244B39>
  %1018 = fsub <16 x double> %1017, %604
  %extract2206 = extractelement <16 x double> %1018, i32 0
  %extract2207 = extractelement <16 x double> %1018, i32 1
  %extract2208 = extractelement <16 x double> %1018, i32 2
  %extract2209 = extractelement <16 x double> %1018, i32 3
  %extract2210 = extractelement <16 x double> %1018, i32 4
  %extract2211 = extractelement <16 x double> %1018, i32 5
  %extract2212 = extractelement <16 x double> %1018, i32 6
  %extract2213 = extractelement <16 x double> %1018, i32 7
  %extract2214 = extractelement <16 x double> %1018, i32 8
  %extract2215 = extractelement <16 x double> %1018, i32 9
  %extract2216 = extractelement <16 x double> %1018, i32 10
  %extract2217 = extractelement <16 x double> %1018, i32 11
  %extract2218 = extractelement <16 x double> %1018, i32 12
  %extract2219 = extractelement <16 x double> %1018, i32 13
  %extract2220 = extractelement <16 x double> %1018, i32 14
  %extract2221 = extractelement <16 x double> %1018, i32 15
  %1019 = tail call double @_Z3expd(double %extract2206) nounwind
  %1020 = tail call double @_Z3expd(double %extract2207) nounwind
  %1021 = tail call double @_Z3expd(double %extract2208) nounwind
  %1022 = tail call double @_Z3expd(double %extract2209) nounwind
  %1023 = tail call double @_Z3expd(double %extract2210) nounwind
  %1024 = tail call double @_Z3expd(double %extract2211) nounwind
  %1025 = tail call double @_Z3expd(double %extract2212) nounwind
  %1026 = tail call double @_Z3expd(double %extract2213) nounwind
  %1027 = tail call double @_Z3expd(double %extract2214) nounwind
  %1028 = tail call double @_Z3expd(double %extract2215) nounwind
  %1029 = tail call double @_Z3expd(double %extract2216) nounwind
  %1030 = tail call double @_Z3expd(double %extract2217) nounwind
  %1031 = tail call double @_Z3expd(double %extract2218) nounwind
  %1032 = tail call double @_Z3expd(double %extract2219) nounwind
  %1033 = tail call double @_Z3expd(double %extract2220) nounwind
  %1034 = tail call double @_Z3expd(double %extract2221) nounwind
  %temp.vect2241 = insertelement <16 x double> undef, double %1019, i32 0
  %temp.vect2242 = insertelement <16 x double> %temp.vect2241, double %1020, i32 1
  %temp.vect2243 = insertelement <16 x double> %temp.vect2242, double %1021, i32 2
  %temp.vect2244 = insertelement <16 x double> %temp.vect2243, double %1022, i32 3
  %temp.vect2245 = insertelement <16 x double> %temp.vect2244, double %1023, i32 4
  %temp.vect2246 = insertelement <16 x double> %temp.vect2245, double %1024, i32 5
  %temp.vect2247 = insertelement <16 x double> %temp.vect2246, double %1025, i32 6
  %temp.vect2248 = insertelement <16 x double> %temp.vect2247, double %1026, i32 7
  %temp.vect2249 = insertelement <16 x double> %temp.vect2248, double %1027, i32 8
  %temp.vect2250 = insertelement <16 x double> %temp.vect2249, double %1028, i32 9
  %temp.vect2251 = insertelement <16 x double> %temp.vect2250, double %1029, i32 10
  %temp.vect2252 = insertelement <16 x double> %temp.vect2251, double %1030, i32 11
  %temp.vect2253 = insertelement <16 x double> %temp.vect2252, double %1031, i32 12
  %temp.vect2254 = insertelement <16 x double> %temp.vect2253, double %1032, i32 13
  %temp.vect2255 = insertelement <16 x double> %temp.vect2254, double %1033, i32 14
  %temp.vect2256 = insertelement <16 x double> %temp.vect2255, double %1034, i32 15
  %1035 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1036 = load i64* %1035, align 8
  %1037 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1038 = load i64* %1037, align 8
  %1039 = add i64 %1036, %1038
  %extract2224 = add i64 %1039, 5861376
  %1040 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2224
  %ptrTypeCast2240 = bitcast double addrspace(1)* %1040 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect2256, <16 x double> addrspace(1)* %ptrTypeCast2240, align 8
  %1041 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1042 = load i64* %1041, align 8
  %1043 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1044 = load i64* %1043, align 8
  %1045 = add i64 %1042, %1044
  %extract2259 = add i64 %1045, 5971968
  %1046 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2259
  %ptrTypeCast2275 = bitcast double addrspace(1)* %1046 to <16 x double> addrspace(1)*
  store <16 x double> <double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast2275, align 8
  %1047 = fmul <16 x double> %temp.vect97, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %1048 = fadd <16 x double> %1047, <double 0x403B6B98C990016A, double 0x403B6B98C990016A, double 0x403B6B98C990016A, double 0x403B6B98C990016A, double 0x403B6B98C990016A, double 0x403B6B98C990016A, double 0x403B6B98C990016A, double 0x403B6B98C990016A, double 0x403B6B98C990016A, double 0x403B6B98C990016A, double 0x403B6B98C990016A, double 0x403B6B98C990016A, double 0x403B6B98C990016A, double 0x403B6B98C990016A, double 0x403B6B98C990016A, double 0x403B6B98C990016A>
  %1049 = fmul <16 x double> %24, <double 0x40A1BB03ABC94706, double 0x40A1BB03ABC94706, double 0x40A1BB03ABC94706, double 0x40A1BB03ABC94706, double 0x40A1BB03ABC94706, double 0x40A1BB03ABC94706, double 0x40A1BB03ABC94706, double 0x40A1BB03ABC94706, double 0x40A1BB03ABC94706, double 0x40A1BB03ABC94706, double 0x40A1BB03ABC94706, double 0x40A1BB03ABC94706, double 0x40A1BB03ABC94706, double 0x40A1BB03ABC94706, double 0x40A1BB03ABC94706, double 0x40A1BB03ABC94706>
  %1050 = fsub <16 x double> %1048, %1049
  %extract2276 = extractelement <16 x double> %1050, i32 0
  %extract2277 = extractelement <16 x double> %1050, i32 1
  %extract2278 = extractelement <16 x double> %1050, i32 2
  %extract2279 = extractelement <16 x double> %1050, i32 3
  %extract2280 = extractelement <16 x double> %1050, i32 4
  %extract2281 = extractelement <16 x double> %1050, i32 5
  %extract2282 = extractelement <16 x double> %1050, i32 6
  %extract2283 = extractelement <16 x double> %1050, i32 7
  %extract2284 = extractelement <16 x double> %1050, i32 8
  %extract2285 = extractelement <16 x double> %1050, i32 9
  %extract2286 = extractelement <16 x double> %1050, i32 10
  %extract2287 = extractelement <16 x double> %1050, i32 11
  %extract2288 = extractelement <16 x double> %1050, i32 12
  %extract2289 = extractelement <16 x double> %1050, i32 13
  %extract2290 = extractelement <16 x double> %1050, i32 14
  %extract2291 = extractelement <16 x double> %1050, i32 15
  %1051 = tail call double @_Z3expd(double %extract2276) nounwind
  %1052 = tail call double @_Z3expd(double %extract2277) nounwind
  %1053 = tail call double @_Z3expd(double %extract2278) nounwind
  %1054 = tail call double @_Z3expd(double %extract2279) nounwind
  %1055 = tail call double @_Z3expd(double %extract2280) nounwind
  %1056 = tail call double @_Z3expd(double %extract2281) nounwind
  %1057 = tail call double @_Z3expd(double %extract2282) nounwind
  %1058 = tail call double @_Z3expd(double %extract2283) nounwind
  %1059 = tail call double @_Z3expd(double %extract2284) nounwind
  %1060 = tail call double @_Z3expd(double %extract2285) nounwind
  %1061 = tail call double @_Z3expd(double %extract2286) nounwind
  %1062 = tail call double @_Z3expd(double %extract2287) nounwind
  %1063 = tail call double @_Z3expd(double %extract2288) nounwind
  %1064 = tail call double @_Z3expd(double %extract2289) nounwind
  %1065 = tail call double @_Z3expd(double %extract2290) nounwind
  %1066 = tail call double @_Z3expd(double %extract2291) nounwind
  %temp.vect2311 = insertelement <16 x double> undef, double %1051, i32 0
  %temp.vect2312 = insertelement <16 x double> %temp.vect2311, double %1052, i32 1
  %temp.vect2313 = insertelement <16 x double> %temp.vect2312, double %1053, i32 2
  %temp.vect2314 = insertelement <16 x double> %temp.vect2313, double %1054, i32 3
  %temp.vect2315 = insertelement <16 x double> %temp.vect2314, double %1055, i32 4
  %temp.vect2316 = insertelement <16 x double> %temp.vect2315, double %1056, i32 5
  %temp.vect2317 = insertelement <16 x double> %temp.vect2316, double %1057, i32 6
  %temp.vect2318 = insertelement <16 x double> %temp.vect2317, double %1058, i32 7
  %temp.vect2319 = insertelement <16 x double> %temp.vect2318, double %1059, i32 8
  %temp.vect2320 = insertelement <16 x double> %temp.vect2319, double %1060, i32 9
  %temp.vect2321 = insertelement <16 x double> %temp.vect2320, double %1061, i32 10
  %temp.vect2322 = insertelement <16 x double> %temp.vect2321, double %1062, i32 11
  %temp.vect2323 = insertelement <16 x double> %temp.vect2322, double %1063, i32 12
  %temp.vect2324 = insertelement <16 x double> %temp.vect2323, double %1064, i32 13
  %temp.vect2325 = insertelement <16 x double> %temp.vect2324, double %1065, i32 14
  %temp.vect2326 = insertelement <16 x double> %temp.vect2325, double %1066, i32 15
  %1067 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1068 = load i64* %1067, align 8
  %1069 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1070 = load i64* %1069, align 8
  %1071 = add i64 %1068, %1070
  %extract2294 = add i64 %1071, 6082560
  %1072 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2294
  %ptrTypeCast2310 = bitcast double addrspace(1)* %1072 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect2326, <16 x double> addrspace(1)* %ptrTypeCast2310, align 8
  %1073 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1074 = load i64* %1073, align 8
  %1075 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1076 = load i64* %1075, align 8
  %1077 = add i64 %1074, %1076
  %extract2329 = add i64 %1077, 6193152
  %1078 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2329
  %ptrTypeCast2345 = bitcast double addrspace(1)* %1078 to <16 x double> addrspace(1)*
  store <16 x double> <double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast2345, align 8
  %1079 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1080 = load i64* %1079, align 8
  %1081 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1082 = load i64* %1081, align 8
  %1083 = add i64 %1080, %1082
  %extract2348 = add i64 %1083, 6303744
  %1084 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2348
  %ptrTypeCast2364 = bitcast double addrspace(1)* %1084 to <16 x double> addrspace(1)*
  store <16 x double> <double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13>, <16 x double> addrspace(1)* %ptrTypeCast2364, align 8
  %1085 = fmul <16 x double> %24, <double 0x4072DEE148BA83F5, double 0x4072DEE148BA83F5, double 0x4072DEE148BA83F5, double 0x4072DEE148BA83F5, double 0x4072DEE148BA83F5, double 0x4072DEE148BA83F5, double 0x4072DEE148BA83F5, double 0x4072DEE148BA83F5, double 0x4072DEE148BA83F5, double 0x4072DEE148BA83F5, double 0x4072DEE148BA83F5, double 0x4072DEE148BA83F5, double 0x4072DEE148BA83F5, double 0x4072DEE148BA83F5, double 0x4072DEE148BA83F5, double 0x4072DEE148BA83F5>
  %1086 = fsub <16 x double> <double 0x403E56CD60708320, double 0x403E56CD60708320, double 0x403E56CD60708320, double 0x403E56CD60708320, double 0x403E56CD60708320, double 0x403E56CD60708320, double 0x403E56CD60708320, double 0x403E56CD60708320, double 0x403E56CD60708320, double 0x403E56CD60708320, double 0x403E56CD60708320, double 0x403E56CD60708320, double 0x403E56CD60708320, double 0x403E56CD60708320, double 0x403E56CD60708320, double 0x403E56CD60708320>, %1085
  %extract2365 = extractelement <16 x double> %1086, i32 0
  %extract2366 = extractelement <16 x double> %1086, i32 1
  %extract2367 = extractelement <16 x double> %1086, i32 2
  %extract2368 = extractelement <16 x double> %1086, i32 3
  %extract2369 = extractelement <16 x double> %1086, i32 4
  %extract2370 = extractelement <16 x double> %1086, i32 5
  %extract2371 = extractelement <16 x double> %1086, i32 6
  %extract2372 = extractelement <16 x double> %1086, i32 7
  %extract2373 = extractelement <16 x double> %1086, i32 8
  %extract2374 = extractelement <16 x double> %1086, i32 9
  %extract2375 = extractelement <16 x double> %1086, i32 10
  %extract2376 = extractelement <16 x double> %1086, i32 11
  %extract2377 = extractelement <16 x double> %1086, i32 12
  %extract2378 = extractelement <16 x double> %1086, i32 13
  %extract2379 = extractelement <16 x double> %1086, i32 14
  %extract2380 = extractelement <16 x double> %1086, i32 15
  %1087 = tail call double @_Z3expd(double %extract2365) nounwind
  %1088 = tail call double @_Z3expd(double %extract2366) nounwind
  %1089 = tail call double @_Z3expd(double %extract2367) nounwind
  %1090 = tail call double @_Z3expd(double %extract2368) nounwind
  %1091 = tail call double @_Z3expd(double %extract2369) nounwind
  %1092 = tail call double @_Z3expd(double %extract2370) nounwind
  %1093 = tail call double @_Z3expd(double %extract2371) nounwind
  %1094 = tail call double @_Z3expd(double %extract2372) nounwind
  %1095 = tail call double @_Z3expd(double %extract2373) nounwind
  %1096 = tail call double @_Z3expd(double %extract2374) nounwind
  %1097 = tail call double @_Z3expd(double %extract2375) nounwind
  %1098 = tail call double @_Z3expd(double %extract2376) nounwind
  %1099 = tail call double @_Z3expd(double %extract2377) nounwind
  %1100 = tail call double @_Z3expd(double %extract2378) nounwind
  %1101 = tail call double @_Z3expd(double %extract2379) nounwind
  %1102 = tail call double @_Z3expd(double %extract2380) nounwind
  %temp.vect2400 = insertelement <16 x double> undef, double %1087, i32 0
  %temp.vect2401 = insertelement <16 x double> %temp.vect2400, double %1088, i32 1
  %temp.vect2402 = insertelement <16 x double> %temp.vect2401, double %1089, i32 2
  %temp.vect2403 = insertelement <16 x double> %temp.vect2402, double %1090, i32 3
  %temp.vect2404 = insertelement <16 x double> %temp.vect2403, double %1091, i32 4
  %temp.vect2405 = insertelement <16 x double> %temp.vect2404, double %1092, i32 5
  %temp.vect2406 = insertelement <16 x double> %temp.vect2405, double %1093, i32 6
  %temp.vect2407 = insertelement <16 x double> %temp.vect2406, double %1094, i32 7
  %temp.vect2408 = insertelement <16 x double> %temp.vect2407, double %1095, i32 8
  %temp.vect2409 = insertelement <16 x double> %temp.vect2408, double %1096, i32 9
  %temp.vect2410 = insertelement <16 x double> %temp.vect2409, double %1097, i32 10
  %temp.vect2411 = insertelement <16 x double> %temp.vect2410, double %1098, i32 11
  %temp.vect2412 = insertelement <16 x double> %temp.vect2411, double %1099, i32 12
  %temp.vect2413 = insertelement <16 x double> %temp.vect2412, double %1100, i32 13
  %temp.vect2414 = insertelement <16 x double> %temp.vect2413, double %1101, i32 14
  %temp.vect2415 = insertelement <16 x double> %temp.vect2414, double %1102, i32 15
  %1103 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1104 = load i64* %1103, align 8
  %1105 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1106 = load i64* %1105, align 8
  %1107 = add i64 %1104, %1106
  %extract2383 = add i64 %1107, 6414336
  %1108 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2383
  %ptrTypeCast2399 = bitcast double addrspace(1)* %1108 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect2415, <16 x double> addrspace(1)* %ptrTypeCast2399, align 8
  %1109 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1110 = load i64* %1109, align 8
  %1111 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1112 = load i64* %1111, align 8
  %1113 = add i64 %1110, %1112
  %extract2418 = add i64 %1113, 6524928
  %1114 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2418
  %ptrTypeCast2434 = bitcast double addrspace(1)* %1114 to <16 x double> addrspace(1)*
  store <16 x double> <double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast2434, align 8
  %1115 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1116 = load i64* %1115, align 8
  %1117 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1118 = load i64* %1117, align 8
  %1119 = add i64 %1116, %1118
  %extract2437 = add i64 %1119, 6635520
  %1120 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2437
  %ptrTypeCast2453 = bitcast double addrspace(1)* %1120 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13>, <16 x double> addrspace(1)* %ptrTypeCast2453, align 8
  %1121 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1122 = load i64* %1121, align 8
  %1123 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1124 = load i64* %1123, align 8
  %1125 = add i64 %1122, %1124
  %extract2456 = add i64 %1125, 6746112
  %1126 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2456
  %ptrTypeCast2472 = bitcast double addrspace(1)* %1126 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13>, <16 x double> addrspace(1)* %ptrTypeCast2472, align 8
  %1127 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1128 = load i64* %1127, align 8
  %1129 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1130 = load i64* %1129, align 8
  %1131 = add i64 %1128, %1130
  %extract2475 = add i64 %1131, 6856704
  %1132 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2475
  %ptrTypeCast2491 = bitcast double addrspace(1)* %1132 to <16 x double> addrspace(1)*
  store <16 x double> <double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast2491, align 8
  %1133 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1134 = load i64* %1133, align 8
  %1135 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1136 = load i64* %1135, align 8
  %1137 = add i64 %1134, %1136
  %extract2494 = add i64 %1137, 6967296
  %1138 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2494
  %ptrTypeCast2510 = bitcast double addrspace(1)* %1138 to <16 x double> addrspace(1)*
  store <16 x double> <double 7.000000e+13, double 7.000000e+13, double 7.000000e+13, double 7.000000e+13, double 7.000000e+13, double 7.000000e+13, double 7.000000e+13, double 7.000000e+13, double 7.000000e+13, double 7.000000e+13, double 7.000000e+13, double 7.000000e+13, double 7.000000e+13, double 7.000000e+13, double 7.000000e+13, double 7.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast2510, align 8
  %1139 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1140 = load i64* %1139, align 8
  %1141 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1142 = load i64* %1141, align 8
  %1143 = add i64 %1140, %1142
  %extract2513 = add i64 %1143, 7077888
  %1144 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2513
  %ptrTypeCast2529 = bitcast double addrspace(1)* %1144 to <16 x double> addrspace(1)*
  store <16 x double> <double 2.800000e+13, double 2.800000e+13, double 2.800000e+13, double 2.800000e+13, double 2.800000e+13, double 2.800000e+13, double 2.800000e+13, double 2.800000e+13, double 2.800000e+13, double 2.800000e+13, double 2.800000e+13, double 2.800000e+13, double 2.800000e+13, double 2.800000e+13, double 2.800000e+13, double 2.800000e+13>, <16 x double> addrspace(1)* %ptrTypeCast2529, align 8
  %1145 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1146 = load i64* %1145, align 8
  %1147 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1148 = load i64* %1147, align 8
  %1149 = add i64 %1146, %1148
  %extract2532 = add i64 %1149, 7188480
  %1150 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2532
  %ptrTypeCast2548 = bitcast double addrspace(1)* %1150 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13>, <16 x double> addrspace(1)* %ptrTypeCast2548, align 8
  %1151 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1152 = load i64* %1151, align 8
  %1153 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1154 = load i64* %1153, align 8
  %1155 = add i64 %1152, %1154
  %extract2551 = add i64 %1155, 7299072
  %1156 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2551
  %ptrTypeCast2567 = bitcast double addrspace(1)* %1156 to <16 x double> addrspace(1)*
  store <16 x double> <double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast2567, align 8
  %1157 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1158 = load i64* %1157, align 8
  %1159 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1160 = load i64* %1159, align 8
  %1161 = add i64 %1158, %1160
  %extract2570 = add i64 %1161, 7409664
  %1162 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2570
  %ptrTypeCast2586 = bitcast double addrspace(1)* %1162 to <16 x double> addrspace(1)*
  store <16 x double> <double 9.000000e+12, double 9.000000e+12, double 9.000000e+12, double 9.000000e+12, double 9.000000e+12, double 9.000000e+12, double 9.000000e+12, double 9.000000e+12, double 9.000000e+12, double 9.000000e+12, double 9.000000e+12, double 9.000000e+12, double 9.000000e+12, double 9.000000e+12, double 9.000000e+12, double 9.000000e+12>, <16 x double> addrspace(1)* %ptrTypeCast2586, align 8
  %1163 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1164 = load i64* %1163, align 8
  %1165 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1166 = load i64* %1165, align 8
  %1167 = add i64 %1164, %1166
  %extract2589 = add i64 %1167, 7520256
  %1168 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2589
  %ptrTypeCast2605 = bitcast double addrspace(1)* %1168 to <16 x double> addrspace(1)*
  store <16 x double> <double 7.000000e+12, double 7.000000e+12, double 7.000000e+12, double 7.000000e+12, double 7.000000e+12, double 7.000000e+12, double 7.000000e+12, double 7.000000e+12, double 7.000000e+12, double 7.000000e+12, double 7.000000e+12, double 7.000000e+12, double 7.000000e+12, double 7.000000e+12, double 7.000000e+12, double 7.000000e+12>, <16 x double> addrspace(1)* %ptrTypeCast2605, align 8
  %1169 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1170 = load i64* %1169, align 8
  %1171 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1172 = load i64* %1171, align 8
  %1173 = add i64 %1170, %1172
  %extract2608 = add i64 %1173, 7630848
  %1174 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2608
  %ptrTypeCast2624 = bitcast double addrspace(1)* %1174 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.400000e+13, double 1.400000e+13, double 1.400000e+13, double 1.400000e+13, double 1.400000e+13, double 1.400000e+13, double 1.400000e+13, double 1.400000e+13, double 1.400000e+13, double 1.400000e+13, double 1.400000e+13, double 1.400000e+13, double 1.400000e+13, double 1.400000e+13, double 1.400000e+13, double 1.400000e+13>, <16 x double> addrspace(1)* %ptrTypeCast2624, align 8
  %1175 = fmul <16 x double> %temp.vect97, <double 4.540000e-01, double 4.540000e-01, double 4.540000e-01, double 4.540000e-01, double 4.540000e-01, double 4.540000e-01, double 4.540000e-01, double 4.540000e-01, double 4.540000e-01, double 4.540000e-01, double 4.540000e-01, double 4.540000e-01, double 4.540000e-01, double 4.540000e-01, double 4.540000e-01, double 4.540000e-01>
  %1176 = fadd <16 x double> %1175, <double 0x403B03CC39FFD60F, double 0x403B03CC39FFD60F, double 0x403B03CC39FFD60F, double 0x403B03CC39FFD60F, double 0x403B03CC39FFD60F, double 0x403B03CC39FFD60F, double 0x403B03CC39FFD60F, double 0x403B03CC39FFD60F, double 0x403B03CC39FFD60F, double 0x403B03CC39FFD60F, double 0x403B03CC39FFD60F, double 0x403B03CC39FFD60F, double 0x403B03CC39FFD60F, double 0x403B03CC39FFD60F, double 0x403B03CC39FFD60F, double 0x403B03CC39FFD60F>
  %1177 = fmul <16 x double> %24, <double 0x409471740F66A551, double 0x409471740F66A551, double 0x409471740F66A551, double 0x409471740F66A551, double 0x409471740F66A551, double 0x409471740F66A551, double 0x409471740F66A551, double 0x409471740F66A551, double 0x409471740F66A551, double 0x409471740F66A551, double 0x409471740F66A551, double 0x409471740F66A551, double 0x409471740F66A551, double 0x409471740F66A551, double 0x409471740F66A551, double 0x409471740F66A551>
  %1178 = fsub <16 x double> %1176, %1177
  %extract2625 = extractelement <16 x double> %1178, i32 0
  %extract2626 = extractelement <16 x double> %1178, i32 1
  %extract2627 = extractelement <16 x double> %1178, i32 2
  %extract2628 = extractelement <16 x double> %1178, i32 3
  %extract2629 = extractelement <16 x double> %1178, i32 4
  %extract2630 = extractelement <16 x double> %1178, i32 5
  %extract2631 = extractelement <16 x double> %1178, i32 6
  %extract2632 = extractelement <16 x double> %1178, i32 7
  %extract2633 = extractelement <16 x double> %1178, i32 8
  %extract2634 = extractelement <16 x double> %1178, i32 9
  %extract2635 = extractelement <16 x double> %1178, i32 10
  %extract2636 = extractelement <16 x double> %1178, i32 11
  %extract2637 = extractelement <16 x double> %1178, i32 12
  %extract2638 = extractelement <16 x double> %1178, i32 13
  %extract2639 = extractelement <16 x double> %1178, i32 14
  %extract2640 = extractelement <16 x double> %1178, i32 15
  %1179 = tail call double @_Z3expd(double %extract2625) nounwind
  %1180 = tail call double @_Z3expd(double %extract2626) nounwind
  %1181 = tail call double @_Z3expd(double %extract2627) nounwind
  %1182 = tail call double @_Z3expd(double %extract2628) nounwind
  %1183 = tail call double @_Z3expd(double %extract2629) nounwind
  %1184 = tail call double @_Z3expd(double %extract2630) nounwind
  %1185 = tail call double @_Z3expd(double %extract2631) nounwind
  %1186 = tail call double @_Z3expd(double %extract2632) nounwind
  %1187 = tail call double @_Z3expd(double %extract2633) nounwind
  %1188 = tail call double @_Z3expd(double %extract2634) nounwind
  %1189 = tail call double @_Z3expd(double %extract2635) nounwind
  %1190 = tail call double @_Z3expd(double %extract2636) nounwind
  %1191 = tail call double @_Z3expd(double %extract2637) nounwind
  %1192 = tail call double @_Z3expd(double %extract2638) nounwind
  %1193 = tail call double @_Z3expd(double %extract2639) nounwind
  %1194 = tail call double @_Z3expd(double %extract2640) nounwind
  %temp.vect2660 = insertelement <16 x double> undef, double %1179, i32 0
  %temp.vect2661 = insertelement <16 x double> %temp.vect2660, double %1180, i32 1
  %temp.vect2662 = insertelement <16 x double> %temp.vect2661, double %1181, i32 2
  %temp.vect2663 = insertelement <16 x double> %temp.vect2662, double %1182, i32 3
  %temp.vect2664 = insertelement <16 x double> %temp.vect2663, double %1183, i32 4
  %temp.vect2665 = insertelement <16 x double> %temp.vect2664, double %1184, i32 5
  %temp.vect2666 = insertelement <16 x double> %temp.vect2665, double %1185, i32 6
  %temp.vect2667 = insertelement <16 x double> %temp.vect2666, double %1186, i32 7
  %temp.vect2668 = insertelement <16 x double> %temp.vect2667, double %1187, i32 8
  %temp.vect2669 = insertelement <16 x double> %temp.vect2668, double %1188, i32 9
  %temp.vect2670 = insertelement <16 x double> %temp.vect2669, double %1189, i32 10
  %temp.vect2671 = insertelement <16 x double> %temp.vect2670, double %1190, i32 11
  %temp.vect2672 = insertelement <16 x double> %temp.vect2671, double %1191, i32 12
  %temp.vect2673 = insertelement <16 x double> %temp.vect2672, double %1192, i32 13
  %temp.vect2674 = insertelement <16 x double> %temp.vect2673, double %1193, i32 14
  %temp.vect2675 = insertelement <16 x double> %temp.vect2674, double %1194, i32 15
  %1195 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1196 = load i64* %1195, align 8
  %1197 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1198 = load i64* %1197, align 8
  %1199 = add i64 %1196, %1198
  %extract2643 = add i64 %1199, 7741440
  %1200 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2643
  %ptrTypeCast2659 = bitcast double addrspace(1)* %1200 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect2675, <16 x double> addrspace(1)* %ptrTypeCast2659, align 8
  %1201 = fmul <16 x double> %temp.vect97, <double 1.050000e+00, double 1.050000e+00, double 1.050000e+00, double 1.050000e+00, double 1.050000e+00, double 1.050000e+00, double 1.050000e+00, double 1.050000e+00, double 1.050000e+00, double 1.050000e+00, double 1.050000e+00, double 1.050000e+00, double 1.050000e+00, double 1.050000e+00, double 1.050000e+00, double 1.050000e+00>
  %1202 = fadd <16 x double> %1201, <double 0x4037DBD7B3B09C15, double 0x4037DBD7B3B09C15, double 0x4037DBD7B3B09C15, double 0x4037DBD7B3B09C15, double 0x4037DBD7B3B09C15, double 0x4037DBD7B3B09C15, double 0x4037DBD7B3B09C15, double 0x4037DBD7B3B09C15, double 0x4037DBD7B3B09C15, double 0x4037DBD7B3B09C15, double 0x4037DBD7B3B09C15, double 0x4037DBD7B3B09C15, double 0x4037DBD7B3B09C15, double 0x4037DBD7B3B09C15, double 0x4037DBD7B3B09C15, double 0x4037DBD7B3B09C15>
  %1203 = fmul <16 x double> %24, <double 0x4099C0236B8F9B13, double 0x4099C0236B8F9B13, double 0x4099C0236B8F9B13, double 0x4099C0236B8F9B13, double 0x4099C0236B8F9B13, double 0x4099C0236B8F9B13, double 0x4099C0236B8F9B13, double 0x4099C0236B8F9B13, double 0x4099C0236B8F9B13, double 0x4099C0236B8F9B13, double 0x4099C0236B8F9B13, double 0x4099C0236B8F9B13, double 0x4099C0236B8F9B13, double 0x4099C0236B8F9B13, double 0x4099C0236B8F9B13, double 0x4099C0236B8F9B13>
  %1204 = fsub <16 x double> %1202, %1203
  %extract2676 = extractelement <16 x double> %1204, i32 0
  %extract2677 = extractelement <16 x double> %1204, i32 1
  %extract2678 = extractelement <16 x double> %1204, i32 2
  %extract2679 = extractelement <16 x double> %1204, i32 3
  %extract2680 = extractelement <16 x double> %1204, i32 4
  %extract2681 = extractelement <16 x double> %1204, i32 5
  %extract2682 = extractelement <16 x double> %1204, i32 6
  %extract2683 = extractelement <16 x double> %1204, i32 7
  %extract2684 = extractelement <16 x double> %1204, i32 8
  %extract2685 = extractelement <16 x double> %1204, i32 9
  %extract2686 = extractelement <16 x double> %1204, i32 10
  %extract2687 = extractelement <16 x double> %1204, i32 11
  %extract2688 = extractelement <16 x double> %1204, i32 12
  %extract2689 = extractelement <16 x double> %1204, i32 13
  %extract2690 = extractelement <16 x double> %1204, i32 14
  %extract2691 = extractelement <16 x double> %1204, i32 15
  %1205 = tail call double @_Z3expd(double %extract2676) nounwind
  %1206 = tail call double @_Z3expd(double %extract2677) nounwind
  %1207 = tail call double @_Z3expd(double %extract2678) nounwind
  %1208 = tail call double @_Z3expd(double %extract2679) nounwind
  %1209 = tail call double @_Z3expd(double %extract2680) nounwind
  %1210 = tail call double @_Z3expd(double %extract2681) nounwind
  %1211 = tail call double @_Z3expd(double %extract2682) nounwind
  %1212 = tail call double @_Z3expd(double %extract2683) nounwind
  %1213 = tail call double @_Z3expd(double %extract2684) nounwind
  %1214 = tail call double @_Z3expd(double %extract2685) nounwind
  %1215 = tail call double @_Z3expd(double %extract2686) nounwind
  %1216 = tail call double @_Z3expd(double %extract2687) nounwind
  %1217 = tail call double @_Z3expd(double %extract2688) nounwind
  %1218 = tail call double @_Z3expd(double %extract2689) nounwind
  %1219 = tail call double @_Z3expd(double %extract2690) nounwind
  %1220 = tail call double @_Z3expd(double %extract2691) nounwind
  %temp.vect2711 = insertelement <16 x double> undef, double %1205, i32 0
  %temp.vect2712 = insertelement <16 x double> %temp.vect2711, double %1206, i32 1
  %temp.vect2713 = insertelement <16 x double> %temp.vect2712, double %1207, i32 2
  %temp.vect2714 = insertelement <16 x double> %temp.vect2713, double %1208, i32 3
  %temp.vect2715 = insertelement <16 x double> %temp.vect2714, double %1209, i32 4
  %temp.vect2716 = insertelement <16 x double> %temp.vect2715, double %1210, i32 5
  %temp.vect2717 = insertelement <16 x double> %temp.vect2716, double %1211, i32 6
  %temp.vect2718 = insertelement <16 x double> %temp.vect2717, double %1212, i32 7
  %temp.vect2719 = insertelement <16 x double> %temp.vect2718, double %1213, i32 8
  %temp.vect2720 = insertelement <16 x double> %temp.vect2719, double %1214, i32 9
  %temp.vect2721 = insertelement <16 x double> %temp.vect2720, double %1215, i32 10
  %temp.vect2722 = insertelement <16 x double> %temp.vect2721, double %1216, i32 11
  %temp.vect2723 = insertelement <16 x double> %temp.vect2722, double %1217, i32 12
  %temp.vect2724 = insertelement <16 x double> %temp.vect2723, double %1218, i32 13
  %temp.vect2725 = insertelement <16 x double> %temp.vect2724, double %1219, i32 14
  %temp.vect2726 = insertelement <16 x double> %temp.vect2725, double %1220, i32 15
  %1221 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1222 = load i64* %1221, align 8
  %1223 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1224 = load i64* %1223, align 8
  %1225 = add i64 %1222, %1224
  %extract2694 = add i64 %1225, 7852032
  %1226 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2694
  %ptrTypeCast2710 = bitcast double addrspace(1)* %1226 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect2726, <16 x double> addrspace(1)* %ptrTypeCast2710, align 8
  %1227 = fmul <16 x double> %24, <double 1.781387e+03, double 1.781387e+03, double 1.781387e+03, double 1.781387e+03, double 1.781387e+03, double 1.781387e+03, double 1.781387e+03, double 1.781387e+03, double 1.781387e+03, double 1.781387e+03, double 1.781387e+03, double 1.781387e+03, double 1.781387e+03, double 1.781387e+03, double 1.781387e+03, double 1.781387e+03>
  %1228 = fsub <16 x double> <double 0x403F4B69C743F6D0, double 0x403F4B69C743F6D0, double 0x403F4B69C743F6D0, double 0x403F4B69C743F6D0, double 0x403F4B69C743F6D0, double 0x403F4B69C743F6D0, double 0x403F4B69C743F6D0, double 0x403F4B69C743F6D0, double 0x403F4B69C743F6D0, double 0x403F4B69C743F6D0, double 0x403F4B69C743F6D0, double 0x403F4B69C743F6D0, double 0x403F4B69C743F6D0, double 0x403F4B69C743F6D0, double 0x403F4B69C743F6D0, double 0x403F4B69C743F6D0>, %1227
  %extract2727 = extractelement <16 x double> %1228, i32 0
  %extract2728 = extractelement <16 x double> %1228, i32 1
  %extract2729 = extractelement <16 x double> %1228, i32 2
  %extract2730 = extractelement <16 x double> %1228, i32 3
  %extract2731 = extractelement <16 x double> %1228, i32 4
  %extract2732 = extractelement <16 x double> %1228, i32 5
  %extract2733 = extractelement <16 x double> %1228, i32 6
  %extract2734 = extractelement <16 x double> %1228, i32 7
  %extract2735 = extractelement <16 x double> %1228, i32 8
  %extract2736 = extractelement <16 x double> %1228, i32 9
  %extract2737 = extractelement <16 x double> %1228, i32 10
  %extract2738 = extractelement <16 x double> %1228, i32 11
  %extract2739 = extractelement <16 x double> %1228, i32 12
  %extract2740 = extractelement <16 x double> %1228, i32 13
  %extract2741 = extractelement <16 x double> %1228, i32 14
  %extract2742 = extractelement <16 x double> %1228, i32 15
  %1229 = tail call double @_Z3expd(double %extract2727) nounwind
  %1230 = tail call double @_Z3expd(double %extract2728) nounwind
  %1231 = tail call double @_Z3expd(double %extract2729) nounwind
  %1232 = tail call double @_Z3expd(double %extract2730) nounwind
  %1233 = tail call double @_Z3expd(double %extract2731) nounwind
  %1234 = tail call double @_Z3expd(double %extract2732) nounwind
  %1235 = tail call double @_Z3expd(double %extract2733) nounwind
  %1236 = tail call double @_Z3expd(double %extract2734) nounwind
  %1237 = tail call double @_Z3expd(double %extract2735) nounwind
  %1238 = tail call double @_Z3expd(double %extract2736) nounwind
  %1239 = tail call double @_Z3expd(double %extract2737) nounwind
  %1240 = tail call double @_Z3expd(double %extract2738) nounwind
  %1241 = tail call double @_Z3expd(double %extract2739) nounwind
  %1242 = tail call double @_Z3expd(double %extract2740) nounwind
  %1243 = tail call double @_Z3expd(double %extract2741) nounwind
  %1244 = tail call double @_Z3expd(double %extract2742) nounwind
  %temp.vect2762 = insertelement <16 x double> undef, double %1229, i32 0
  %temp.vect2763 = insertelement <16 x double> %temp.vect2762, double %1230, i32 1
  %temp.vect2764 = insertelement <16 x double> %temp.vect2763, double %1231, i32 2
  %temp.vect2765 = insertelement <16 x double> %temp.vect2764, double %1232, i32 3
  %temp.vect2766 = insertelement <16 x double> %temp.vect2765, double %1233, i32 4
  %temp.vect2767 = insertelement <16 x double> %temp.vect2766, double %1234, i32 5
  %temp.vect2768 = insertelement <16 x double> %temp.vect2767, double %1235, i32 6
  %temp.vect2769 = insertelement <16 x double> %temp.vect2768, double %1236, i32 7
  %temp.vect2770 = insertelement <16 x double> %temp.vect2769, double %1237, i32 8
  %temp.vect2771 = insertelement <16 x double> %temp.vect2770, double %1238, i32 9
  %temp.vect2772 = insertelement <16 x double> %temp.vect2771, double %1239, i32 10
  %temp.vect2773 = insertelement <16 x double> %temp.vect2772, double %1240, i32 11
  %temp.vect2774 = insertelement <16 x double> %temp.vect2773, double %1241, i32 12
  %temp.vect2775 = insertelement <16 x double> %temp.vect2774, double %1242, i32 13
  %temp.vect2776 = insertelement <16 x double> %temp.vect2775, double %1243, i32 14
  %temp.vect2777 = insertelement <16 x double> %temp.vect2776, double %1244, i32 15
  %1245 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1246 = load i64* %1245, align 8
  %1247 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1248 = load i64* %1247, align 8
  %1249 = add i64 %1246, %1248
  %extract2745 = add i64 %1249, 7962624
  %1250 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2745
  %ptrTypeCast2761 = bitcast double addrspace(1)* %1250 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect2777, <16 x double> addrspace(1)* %ptrTypeCast2761, align 8
  %1251 = fmul <16 x double> %temp.vect97, <double 1.180000e+00, double 1.180000e+00, double 1.180000e+00, double 1.180000e+00, double 1.180000e+00, double 1.180000e+00, double 1.180000e+00, double 1.180000e+00, double 1.180000e+00, double 1.180000e+00, double 1.180000e+00, double 1.180000e+00, double 1.180000e+00, double 1.180000e+00, double 1.180000e+00, double 1.180000e+00>
  %1252 = fadd <16 x double> %1251, <double 0x4035F4B104F029C9, double 0x4035F4B104F029C9, double 0x4035F4B104F029C9, double 0x4035F4B104F029C9, double 0x4035F4B104F029C9, double 0x4035F4B104F029C9, double 0x4035F4B104F029C9, double 0x4035F4B104F029C9, double 0x4035F4B104F029C9, double 0x4035F4B104F029C9, double 0x4035F4B104F029C9, double 0x4035F4B104F029C9, double 0x4035F4B104F029C9, double 0x4035F4B104F029C9, double 0x4035F4B104F029C9, double 0x4035F4B104F029C9>
  %1253 = fmul <16 x double> %24, <double 0x406C1E02DE00D1B7, double 0x406C1E02DE00D1B7, double 0x406C1E02DE00D1B7, double 0x406C1E02DE00D1B7, double 0x406C1E02DE00D1B7, double 0x406C1E02DE00D1B7, double 0x406C1E02DE00D1B7, double 0x406C1E02DE00D1B7, double 0x406C1E02DE00D1B7, double 0x406C1E02DE00D1B7, double 0x406C1E02DE00D1B7, double 0x406C1E02DE00D1B7, double 0x406C1E02DE00D1B7, double 0x406C1E02DE00D1B7, double 0x406C1E02DE00D1B7, double 0x406C1E02DE00D1B7>
  %1254 = fadd <16 x double> %1252, %1253
  %extract2778 = extractelement <16 x double> %1254, i32 0
  %extract2779 = extractelement <16 x double> %1254, i32 1
  %extract2780 = extractelement <16 x double> %1254, i32 2
  %extract2781 = extractelement <16 x double> %1254, i32 3
  %extract2782 = extractelement <16 x double> %1254, i32 4
  %extract2783 = extractelement <16 x double> %1254, i32 5
  %extract2784 = extractelement <16 x double> %1254, i32 6
  %extract2785 = extractelement <16 x double> %1254, i32 7
  %extract2786 = extractelement <16 x double> %1254, i32 8
  %extract2787 = extractelement <16 x double> %1254, i32 9
  %extract2788 = extractelement <16 x double> %1254, i32 10
  %extract2789 = extractelement <16 x double> %1254, i32 11
  %extract2790 = extractelement <16 x double> %1254, i32 12
  %extract2791 = extractelement <16 x double> %1254, i32 13
  %extract2792 = extractelement <16 x double> %1254, i32 14
  %extract2793 = extractelement <16 x double> %1254, i32 15
  %1255 = tail call double @_Z3expd(double %extract2778) nounwind
  %1256 = tail call double @_Z3expd(double %extract2779) nounwind
  %1257 = tail call double @_Z3expd(double %extract2780) nounwind
  %1258 = tail call double @_Z3expd(double %extract2781) nounwind
  %1259 = tail call double @_Z3expd(double %extract2782) nounwind
  %1260 = tail call double @_Z3expd(double %extract2783) nounwind
  %1261 = tail call double @_Z3expd(double %extract2784) nounwind
  %1262 = tail call double @_Z3expd(double %extract2785) nounwind
  %1263 = tail call double @_Z3expd(double %extract2786) nounwind
  %1264 = tail call double @_Z3expd(double %extract2787) nounwind
  %1265 = tail call double @_Z3expd(double %extract2788) nounwind
  %1266 = tail call double @_Z3expd(double %extract2789) nounwind
  %1267 = tail call double @_Z3expd(double %extract2790) nounwind
  %1268 = tail call double @_Z3expd(double %extract2791) nounwind
  %1269 = tail call double @_Z3expd(double %extract2792) nounwind
  %1270 = tail call double @_Z3expd(double %extract2793) nounwind
  %temp.vect2813 = insertelement <16 x double> undef, double %1255, i32 0
  %temp.vect2814 = insertelement <16 x double> %temp.vect2813, double %1256, i32 1
  %temp.vect2815 = insertelement <16 x double> %temp.vect2814, double %1257, i32 2
  %temp.vect2816 = insertelement <16 x double> %temp.vect2815, double %1258, i32 3
  %temp.vect2817 = insertelement <16 x double> %temp.vect2816, double %1259, i32 4
  %temp.vect2818 = insertelement <16 x double> %temp.vect2817, double %1260, i32 5
  %temp.vect2819 = insertelement <16 x double> %temp.vect2818, double %1261, i32 6
  %temp.vect2820 = insertelement <16 x double> %temp.vect2819, double %1262, i32 7
  %temp.vect2821 = insertelement <16 x double> %temp.vect2820, double %1263, i32 8
  %temp.vect2822 = insertelement <16 x double> %temp.vect2821, double %1264, i32 9
  %temp.vect2823 = insertelement <16 x double> %temp.vect2822, double %1265, i32 10
  %temp.vect2824 = insertelement <16 x double> %temp.vect2823, double %1266, i32 11
  %temp.vect2825 = insertelement <16 x double> %temp.vect2824, double %1267, i32 12
  %temp.vect2826 = insertelement <16 x double> %temp.vect2825, double %1268, i32 13
  %temp.vect2827 = insertelement <16 x double> %temp.vect2826, double %1269, i32 14
  %temp.vect2828 = insertelement <16 x double> %temp.vect2827, double %1270, i32 15
  %1271 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1272 = load i64* %1271, align 8
  %1273 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1274 = load i64* %1273, align 8
  %1275 = add i64 %1272, %1274
  %extract2796 = add i64 %1275, 8073216
  %1276 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2796
  %ptrTypeCast2812 = bitcast double addrspace(1)* %1276 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect2828, <16 x double> addrspace(1)* %ptrTypeCast2812, align 8
  %1277 = fmul <16 x double> %24, <double 0x40D3A82AAB367A10, double 0x40D3A82AAB367A10, double 0x40D3A82AAB367A10, double 0x40D3A82AAB367A10, double 0x40D3A82AAB367A10, double 0x40D3A82AAB367A10, double 0x40D3A82AAB367A10, double 0x40D3A82AAB367A10, double 0x40D3A82AAB367A10, double 0x40D3A82AAB367A10, double 0x40D3A82AAB367A10, double 0x40D3A82AAB367A10, double 0x40D3A82AAB367A10, double 0x40D3A82AAB367A10, double 0x40D3A82AAB367A10, double 0x40D3A82AAB367A10>
  %1278 = fsub <16 x double> <double 0x40401E3B843A8CC4, double 0x40401E3B843A8CC4, double 0x40401E3B843A8CC4, double 0x40401E3B843A8CC4, double 0x40401E3B843A8CC4, double 0x40401E3B843A8CC4, double 0x40401E3B843A8CC4, double 0x40401E3B843A8CC4, double 0x40401E3B843A8CC4, double 0x40401E3B843A8CC4, double 0x40401E3B843A8CC4, double 0x40401E3B843A8CC4, double 0x40401E3B843A8CC4, double 0x40401E3B843A8CC4, double 0x40401E3B843A8CC4, double 0x40401E3B843A8CC4>, %1277
  %extract2829 = extractelement <16 x double> %1278, i32 0
  %extract2830 = extractelement <16 x double> %1278, i32 1
  %extract2831 = extractelement <16 x double> %1278, i32 2
  %extract2832 = extractelement <16 x double> %1278, i32 3
  %extract2833 = extractelement <16 x double> %1278, i32 4
  %extract2834 = extractelement <16 x double> %1278, i32 5
  %extract2835 = extractelement <16 x double> %1278, i32 6
  %extract2836 = extractelement <16 x double> %1278, i32 7
  %extract2837 = extractelement <16 x double> %1278, i32 8
  %extract2838 = extractelement <16 x double> %1278, i32 9
  %extract2839 = extractelement <16 x double> %1278, i32 10
  %extract2840 = extractelement <16 x double> %1278, i32 11
  %extract2841 = extractelement <16 x double> %1278, i32 12
  %extract2842 = extractelement <16 x double> %1278, i32 13
  %extract2843 = extractelement <16 x double> %1278, i32 14
  %extract2844 = extractelement <16 x double> %1278, i32 15
  %1279 = tail call double @_Z3expd(double %extract2829) nounwind
  %1280 = tail call double @_Z3expd(double %extract2830) nounwind
  %1281 = tail call double @_Z3expd(double %extract2831) nounwind
  %1282 = tail call double @_Z3expd(double %extract2832) nounwind
  %1283 = tail call double @_Z3expd(double %extract2833) nounwind
  %1284 = tail call double @_Z3expd(double %extract2834) nounwind
  %1285 = tail call double @_Z3expd(double %extract2835) nounwind
  %1286 = tail call double @_Z3expd(double %extract2836) nounwind
  %1287 = tail call double @_Z3expd(double %extract2837) nounwind
  %1288 = tail call double @_Z3expd(double %extract2838) nounwind
  %1289 = tail call double @_Z3expd(double %extract2839) nounwind
  %1290 = tail call double @_Z3expd(double %extract2840) nounwind
  %1291 = tail call double @_Z3expd(double %extract2841) nounwind
  %1292 = tail call double @_Z3expd(double %extract2842) nounwind
  %1293 = tail call double @_Z3expd(double %extract2843) nounwind
  %1294 = tail call double @_Z3expd(double %extract2844) nounwind
  %temp.vect2864 = insertelement <16 x double> undef, double %1279, i32 0
  %temp.vect2865 = insertelement <16 x double> %temp.vect2864, double %1280, i32 1
  %temp.vect2866 = insertelement <16 x double> %temp.vect2865, double %1281, i32 2
  %temp.vect2867 = insertelement <16 x double> %temp.vect2866, double %1282, i32 3
  %temp.vect2868 = insertelement <16 x double> %temp.vect2867, double %1283, i32 4
  %temp.vect2869 = insertelement <16 x double> %temp.vect2868, double %1284, i32 5
  %temp.vect2870 = insertelement <16 x double> %temp.vect2869, double %1285, i32 6
  %temp.vect2871 = insertelement <16 x double> %temp.vect2870, double %1286, i32 7
  %temp.vect2872 = insertelement <16 x double> %temp.vect2871, double %1287, i32 8
  %temp.vect2873 = insertelement <16 x double> %temp.vect2872, double %1288, i32 9
  %temp.vect2874 = insertelement <16 x double> %temp.vect2873, double %1289, i32 10
  %temp.vect2875 = insertelement <16 x double> %temp.vect2874, double %1290, i32 11
  %temp.vect2876 = insertelement <16 x double> %temp.vect2875, double %1291, i32 12
  %temp.vect2877 = insertelement <16 x double> %temp.vect2876, double %1292, i32 13
  %temp.vect2878 = insertelement <16 x double> %temp.vect2877, double %1293, i32 14
  %temp.vect2879 = insertelement <16 x double> %temp.vect2878, double %1294, i32 15
  %1295 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1296 = load i64* %1295, align 8
  %1297 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1298 = load i64* %1297, align 8
  %1299 = add i64 %1296, %1298
  %extract2847 = add i64 %1299, 8183808
  %1300 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2847
  %ptrTypeCast2863 = bitcast double addrspace(1)* %1300 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect2879, <16 x double> addrspace(1)* %ptrTypeCast2863, align 8
  %1301 = fmul <16 x double> %24, <double 0xC0AF7377785729B3, double 0xC0AF7377785729B3, double 0xC0AF7377785729B3, double 0xC0AF7377785729B3, double 0xC0AF7377785729B3, double 0xC0AF7377785729B3, double 0xC0AF7377785729B3, double 0xC0AF7377785729B3, double 0xC0AF7377785729B3, double 0xC0AF7377785729B3, double 0xC0AF7377785729B3, double 0xC0AF7377785729B3, double 0xC0AF7377785729B3, double 0xC0AF7377785729B3, double 0xC0AF7377785729B3, double 0xC0AF7377785729B3>
  %extract2880 = extractelement <16 x double> %1301, i32 0
  %extract2881 = extractelement <16 x double> %1301, i32 1
  %extract2882 = extractelement <16 x double> %1301, i32 2
  %extract2883 = extractelement <16 x double> %1301, i32 3
  %extract2884 = extractelement <16 x double> %1301, i32 4
  %extract2885 = extractelement <16 x double> %1301, i32 5
  %extract2886 = extractelement <16 x double> %1301, i32 6
  %extract2887 = extractelement <16 x double> %1301, i32 7
  %extract2888 = extractelement <16 x double> %1301, i32 8
  %extract2889 = extractelement <16 x double> %1301, i32 9
  %extract2890 = extractelement <16 x double> %1301, i32 10
  %extract2891 = extractelement <16 x double> %1301, i32 11
  %extract2892 = extractelement <16 x double> %1301, i32 12
  %extract2893 = extractelement <16 x double> %1301, i32 13
  %extract2894 = extractelement <16 x double> %1301, i32 14
  %extract2895 = extractelement <16 x double> %1301, i32 15
  %1302 = tail call double @_Z3expd(double %extract2880) nounwind
  %1303 = tail call double @_Z3expd(double %extract2881) nounwind
  %1304 = tail call double @_Z3expd(double %extract2882) nounwind
  %1305 = tail call double @_Z3expd(double %extract2883) nounwind
  %1306 = tail call double @_Z3expd(double %extract2884) nounwind
  %1307 = tail call double @_Z3expd(double %extract2885) nounwind
  %1308 = tail call double @_Z3expd(double %extract2886) nounwind
  %1309 = tail call double @_Z3expd(double %extract2887) nounwind
  %1310 = tail call double @_Z3expd(double %extract2888) nounwind
  %1311 = tail call double @_Z3expd(double %extract2889) nounwind
  %1312 = tail call double @_Z3expd(double %extract2890) nounwind
  %1313 = tail call double @_Z3expd(double %extract2891) nounwind
  %1314 = tail call double @_Z3expd(double %extract2892) nounwind
  %1315 = tail call double @_Z3expd(double %extract2893) nounwind
  %1316 = tail call double @_Z3expd(double %extract2894) nounwind
  %1317 = tail call double @_Z3expd(double %extract2895) nounwind
  %temp.vect2896 = insertelement <16 x double> undef, double %1302, i32 0
  %temp.vect2897 = insertelement <16 x double> %temp.vect2896, double %1303, i32 1
  %temp.vect2898 = insertelement <16 x double> %temp.vect2897, double %1304, i32 2
  %temp.vect2899 = insertelement <16 x double> %temp.vect2898, double %1305, i32 3
  %temp.vect2900 = insertelement <16 x double> %temp.vect2899, double %1306, i32 4
  %temp.vect2901 = insertelement <16 x double> %temp.vect2900, double %1307, i32 5
  %temp.vect2902 = insertelement <16 x double> %temp.vect2901, double %1308, i32 6
  %temp.vect2903 = insertelement <16 x double> %temp.vect2902, double %1309, i32 7
  %temp.vect2904 = insertelement <16 x double> %temp.vect2903, double %1310, i32 8
  %temp.vect2905 = insertelement <16 x double> %temp.vect2904, double %1311, i32 9
  %temp.vect2906 = insertelement <16 x double> %temp.vect2905, double %1312, i32 10
  %temp.vect2907 = insertelement <16 x double> %temp.vect2906, double %1313, i32 11
  %temp.vect2908 = insertelement <16 x double> %temp.vect2907, double %1314, i32 12
  %temp.vect2909 = insertelement <16 x double> %temp.vect2908, double %1315, i32 13
  %temp.vect2910 = insertelement <16 x double> %temp.vect2909, double %1316, i32 14
  %temp.vect2911 = insertelement <16 x double> %temp.vect2910, double %1317, i32 15
  %1318 = fmul <16 x double> %temp.vect2911, <double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12>
  %1319 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1320 = load i64* %1319, align 8
  %1321 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1322 = load i64* %1321, align 8
  %1323 = add i64 %1320, %1322
  %extract2914 = add i64 %1323, 8294400
  %1324 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2914
  %ptrTypeCast2930 = bitcast double addrspace(1)* %1324 to <16 x double> addrspace(1)*
  store <16 x double> %1318, <16 x double> addrspace(1)* %ptrTypeCast2930, align 8
  %1325 = fmul <16 x double> %temp.vect2911, <double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13>
  %1326 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1327 = load i64* %1326, align 8
  %1328 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1329 = load i64* %1328, align 8
  %1330 = add i64 %1327, %1329
  %extract2933 = add i64 %1330, 13934592
  %1331 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2933
  %ptrTypeCast2949 = bitcast double addrspace(1)* %1331 to <16 x double> addrspace(1)*
  store <16 x double> %1325, <16 x double> addrspace(1)* %ptrTypeCast2949, align 8
  %1332 = fmul <16 x double> %temp.vect2911, <double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13>
  %1333 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1334 = load i64* %1333, align 8
  %1335 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1336 = load i64* %1335, align 8
  %1337 = add i64 %1334, %1336
  %extract2952 = add i64 %1337, 14155776
  %1338 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2952
  %ptrTypeCast2968 = bitcast double addrspace(1)* %1338 to <16 x double> addrspace(1)*
  store <16 x double> %1332, <16 x double> addrspace(1)* %ptrTypeCast2968, align 8
  %1339 = fmul <16 x double> %24, <double 0x407032815E39713B, double 0x407032815E39713B, double 0x407032815E39713B, double 0x407032815E39713B, double 0x407032815E39713B, double 0x407032815E39713B, double 0x407032815E39713B, double 0x407032815E39713B, double 0x407032815E39713B, double 0x407032815E39713B, double 0x407032815E39713B, double 0x407032815E39713B, double 0x407032815E39713B, double 0x407032815E39713B, double 0x407032815E39713B, double 0x407032815E39713B>
  %1340 = fadd <16 x double> %1339, <double 0x4040172079F30B25, double 0x4040172079F30B25, double 0x4040172079F30B25, double 0x4040172079F30B25, double 0x4040172079F30B25, double 0x4040172079F30B25, double 0x4040172079F30B25, double 0x4040172079F30B25, double 0x4040172079F30B25, double 0x4040172079F30B25, double 0x4040172079F30B25, double 0x4040172079F30B25, double 0x4040172079F30B25, double 0x4040172079F30B25, double 0x4040172079F30B25, double 0x4040172079F30B25>
  %extract2969 = extractelement <16 x double> %1340, i32 0
  %extract2970 = extractelement <16 x double> %1340, i32 1
  %extract2971 = extractelement <16 x double> %1340, i32 2
  %extract2972 = extractelement <16 x double> %1340, i32 3
  %extract2973 = extractelement <16 x double> %1340, i32 4
  %extract2974 = extractelement <16 x double> %1340, i32 5
  %extract2975 = extractelement <16 x double> %1340, i32 6
  %extract2976 = extractelement <16 x double> %1340, i32 7
  %extract2977 = extractelement <16 x double> %1340, i32 8
  %extract2978 = extractelement <16 x double> %1340, i32 9
  %extract2979 = extractelement <16 x double> %1340, i32 10
  %extract2980 = extractelement <16 x double> %1340, i32 11
  %extract2981 = extractelement <16 x double> %1340, i32 12
  %extract2982 = extractelement <16 x double> %1340, i32 13
  %extract2983 = extractelement <16 x double> %1340, i32 14
  %extract2984 = extractelement <16 x double> %1340, i32 15
  %1341 = tail call double @_Z3expd(double %extract2969) nounwind
  %1342 = tail call double @_Z3expd(double %extract2970) nounwind
  %1343 = tail call double @_Z3expd(double %extract2971) nounwind
  %1344 = tail call double @_Z3expd(double %extract2972) nounwind
  %1345 = tail call double @_Z3expd(double %extract2973) nounwind
  %1346 = tail call double @_Z3expd(double %extract2974) nounwind
  %1347 = tail call double @_Z3expd(double %extract2975) nounwind
  %1348 = tail call double @_Z3expd(double %extract2976) nounwind
  %1349 = tail call double @_Z3expd(double %extract2977) nounwind
  %1350 = tail call double @_Z3expd(double %extract2978) nounwind
  %1351 = tail call double @_Z3expd(double %extract2979) nounwind
  %1352 = tail call double @_Z3expd(double %extract2980) nounwind
  %1353 = tail call double @_Z3expd(double %extract2981) nounwind
  %1354 = tail call double @_Z3expd(double %extract2982) nounwind
  %1355 = tail call double @_Z3expd(double %extract2983) nounwind
  %1356 = tail call double @_Z3expd(double %extract2984) nounwind
  %temp.vect3004 = insertelement <16 x double> undef, double %1341, i32 0
  %temp.vect3005 = insertelement <16 x double> %temp.vect3004, double %1342, i32 1
  %temp.vect3006 = insertelement <16 x double> %temp.vect3005, double %1343, i32 2
  %temp.vect3007 = insertelement <16 x double> %temp.vect3006, double %1344, i32 3
  %temp.vect3008 = insertelement <16 x double> %temp.vect3007, double %1345, i32 4
  %temp.vect3009 = insertelement <16 x double> %temp.vect3008, double %1346, i32 5
  %temp.vect3010 = insertelement <16 x double> %temp.vect3009, double %1347, i32 6
  %temp.vect3011 = insertelement <16 x double> %temp.vect3010, double %1348, i32 7
  %temp.vect3012 = insertelement <16 x double> %temp.vect3011, double %1349, i32 8
  %temp.vect3013 = insertelement <16 x double> %temp.vect3012, double %1350, i32 9
  %temp.vect3014 = insertelement <16 x double> %temp.vect3013, double %1351, i32 10
  %temp.vect3015 = insertelement <16 x double> %temp.vect3014, double %1352, i32 11
  %temp.vect3016 = insertelement <16 x double> %temp.vect3015, double %1353, i32 12
  %temp.vect3017 = insertelement <16 x double> %temp.vect3016, double %1354, i32 13
  %temp.vect3018 = insertelement <16 x double> %temp.vect3017, double %1355, i32 14
  %temp.vect3019 = insertelement <16 x double> %temp.vect3018, double %1356, i32 15
  %1357 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1358 = load i64* %1357, align 8
  %1359 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1360 = load i64* %1359, align 8
  %1361 = add i64 %1358, %1360
  %extract2987 = add i64 %1361, 8404992
  %1362 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract2987
  %ptrTypeCast3003 = bitcast double addrspace(1)* %1362 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect3019, <16 x double> addrspace(1)* %ptrTypeCast3003, align 8
  %1363 = fmul <16 x double> %temp.vect97, <double 6.300000e-01, double 6.300000e-01, double 6.300000e-01, double 6.300000e-01, double 6.300000e-01, double 6.300000e-01, double 6.300000e-01, double 6.300000e-01, double 6.300000e-01, double 6.300000e-01, double 6.300000e-01, double 6.300000e-01, double 6.300000e-01, double 6.300000e-01, double 6.300000e-01, double 6.300000e-01>
  %1364 = fsub <16 x double> <double 0x40428A49D6E3A704, double 0x40428A49D6E3A704, double 0x40428A49D6E3A704, double 0x40428A49D6E3A704, double 0x40428A49D6E3A704, double 0x40428A49D6E3A704, double 0x40428A49D6E3A704, double 0x40428A49D6E3A704, double 0x40428A49D6E3A704, double 0x40428A49D6E3A704, double 0x40428A49D6E3A704, double 0x40428A49D6E3A704, double 0x40428A49D6E3A704, double 0x40428A49D6E3A704, double 0x40428A49D6E3A704, double 0x40428A49D6E3A704>, %1363
  %1365 = fmul <16 x double> %24, <double 0x4068176C69B5A640, double 0x4068176C69B5A640, double 0x4068176C69B5A640, double 0x4068176C69B5A640, double 0x4068176C69B5A640, double 0x4068176C69B5A640, double 0x4068176C69B5A640, double 0x4068176C69B5A640, double 0x4068176C69B5A640, double 0x4068176C69B5A640, double 0x4068176C69B5A640, double 0x4068176C69B5A640, double 0x4068176C69B5A640, double 0x4068176C69B5A640, double 0x4068176C69B5A640, double 0x4068176C69B5A640>
  %1366 = fsub <16 x double> %1364, %1365
  %extract3020 = extractelement <16 x double> %1366, i32 0
  %extract3021 = extractelement <16 x double> %1366, i32 1
  %extract3022 = extractelement <16 x double> %1366, i32 2
  %extract3023 = extractelement <16 x double> %1366, i32 3
  %extract3024 = extractelement <16 x double> %1366, i32 4
  %extract3025 = extractelement <16 x double> %1366, i32 5
  %extract3026 = extractelement <16 x double> %1366, i32 6
  %extract3027 = extractelement <16 x double> %1366, i32 7
  %extract3028 = extractelement <16 x double> %1366, i32 8
  %extract3029 = extractelement <16 x double> %1366, i32 9
  %extract3030 = extractelement <16 x double> %1366, i32 10
  %extract3031 = extractelement <16 x double> %1366, i32 11
  %extract3032 = extractelement <16 x double> %1366, i32 12
  %extract3033 = extractelement <16 x double> %1366, i32 13
  %extract3034 = extractelement <16 x double> %1366, i32 14
  %extract3035 = extractelement <16 x double> %1366, i32 15
  %1367 = tail call double @_Z3expd(double %extract3020) nounwind
  %1368 = tail call double @_Z3expd(double %extract3021) nounwind
  %1369 = tail call double @_Z3expd(double %extract3022) nounwind
  %1370 = tail call double @_Z3expd(double %extract3023) nounwind
  %1371 = tail call double @_Z3expd(double %extract3024) nounwind
  %1372 = tail call double @_Z3expd(double %extract3025) nounwind
  %1373 = tail call double @_Z3expd(double %extract3026) nounwind
  %1374 = tail call double @_Z3expd(double %extract3027) nounwind
  %1375 = tail call double @_Z3expd(double %extract3028) nounwind
  %1376 = tail call double @_Z3expd(double %extract3029) nounwind
  %1377 = tail call double @_Z3expd(double %extract3030) nounwind
  %1378 = tail call double @_Z3expd(double %extract3031) nounwind
  %1379 = tail call double @_Z3expd(double %extract3032) nounwind
  %1380 = tail call double @_Z3expd(double %extract3033) nounwind
  %1381 = tail call double @_Z3expd(double %extract3034) nounwind
  %1382 = tail call double @_Z3expd(double %extract3035) nounwind
  %temp.vect3055 = insertelement <16 x double> undef, double %1367, i32 0
  %temp.vect3056 = insertelement <16 x double> %temp.vect3055, double %1368, i32 1
  %temp.vect3057 = insertelement <16 x double> %temp.vect3056, double %1369, i32 2
  %temp.vect3058 = insertelement <16 x double> %temp.vect3057, double %1370, i32 3
  %temp.vect3059 = insertelement <16 x double> %temp.vect3058, double %1371, i32 4
  %temp.vect3060 = insertelement <16 x double> %temp.vect3059, double %1372, i32 5
  %temp.vect3061 = insertelement <16 x double> %temp.vect3060, double %1373, i32 6
  %temp.vect3062 = insertelement <16 x double> %temp.vect3061, double %1374, i32 7
  %temp.vect3063 = insertelement <16 x double> %temp.vect3062, double %1375, i32 8
  %temp.vect3064 = insertelement <16 x double> %temp.vect3063, double %1376, i32 9
  %temp.vect3065 = insertelement <16 x double> %temp.vect3064, double %1377, i32 10
  %temp.vect3066 = insertelement <16 x double> %temp.vect3065, double %1378, i32 11
  %temp.vect3067 = insertelement <16 x double> %temp.vect3066, double %1379, i32 12
  %temp.vect3068 = insertelement <16 x double> %temp.vect3067, double %1380, i32 13
  %temp.vect3069 = insertelement <16 x double> %temp.vect3068, double %1381, i32 14
  %temp.vect3070 = insertelement <16 x double> %temp.vect3069, double %1382, i32 15
  %1383 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1384 = load i64* %1383, align 8
  %1385 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1386 = load i64* %1385, align 8
  %1387 = add i64 %1384, %1386
  %extract3038 = add i64 %1387, 8515584
  %1388 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3038
  %ptrTypeCast3054 = bitcast double addrspace(1)* %1388 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect3070, <16 x double> addrspace(1)* %ptrTypeCast3054, align 8
  %1389 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1390 = load i64* %1389, align 8
  %1391 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1392 = load i64* %1391, align 8
  %1393 = add i64 %1390, %1392
  %extract3073 = add i64 %1393, 8626176
  %1394 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3073
  %ptrTypeCast3089 = bitcast double addrspace(1)* %1394 to <16 x double> addrspace(1)*
  store <16 x double> <double 8.430000e+13, double 8.430000e+13, double 8.430000e+13, double 8.430000e+13, double 8.430000e+13, double 8.430000e+13, double 8.430000e+13, double 8.430000e+13, double 8.430000e+13, double 8.430000e+13, double 8.430000e+13, double 8.430000e+13, double 8.430000e+13, double 8.430000e+13, double 8.430000e+13, double 8.430000e+13>, <16 x double> addrspace(1)* %ptrTypeCast3089, align 8
  %1395 = fmul <16 x double> %temp.vect97, <double 1.600000e+00, double 1.600000e+00, double 1.600000e+00, double 1.600000e+00, double 1.600000e+00, double 1.600000e+00, double 1.600000e+00, double 1.600000e+00, double 1.600000e+00, double 1.600000e+00, double 1.600000e+00, double 1.600000e+00, double 1.600000e+00, double 1.600000e+00, double 1.600000e+00, double 1.600000e+00>
  %1396 = fadd <16 x double> %1395, <double 0x4031D742BEC1714F, double 0x4031D742BEC1714F, double 0x4031D742BEC1714F, double 0x4031D742BEC1714F, double 0x4031D742BEC1714F, double 0x4031D742BEC1714F, double 0x4031D742BEC1714F, double 0x4031D742BEC1714F, double 0x4031D742BEC1714F, double 0x4031D742BEC1714F, double 0x4031D742BEC1714F, double 0x4031D742BEC1714F, double 0x4031D742BEC1714F, double 0x4031D742BEC1714F, double 0x4031D742BEC1714F, double 0x4031D742BEC1714F>
  %1397 = fmul <16 x double> %24, <double 0x40A54EDE61CFFEB0, double 0x40A54EDE61CFFEB0, double 0x40A54EDE61CFFEB0, double 0x40A54EDE61CFFEB0, double 0x40A54EDE61CFFEB0, double 0x40A54EDE61CFFEB0, double 0x40A54EDE61CFFEB0, double 0x40A54EDE61CFFEB0, double 0x40A54EDE61CFFEB0, double 0x40A54EDE61CFFEB0, double 0x40A54EDE61CFFEB0, double 0x40A54EDE61CFFEB0, double 0x40A54EDE61CFFEB0, double 0x40A54EDE61CFFEB0, double 0x40A54EDE61CFFEB0, double 0x40A54EDE61CFFEB0>
  %1398 = fsub <16 x double> %1396, %1397
  %extract3090 = extractelement <16 x double> %1398, i32 0
  %extract3091 = extractelement <16 x double> %1398, i32 1
  %extract3092 = extractelement <16 x double> %1398, i32 2
  %extract3093 = extractelement <16 x double> %1398, i32 3
  %extract3094 = extractelement <16 x double> %1398, i32 4
  %extract3095 = extractelement <16 x double> %1398, i32 5
  %extract3096 = extractelement <16 x double> %1398, i32 6
  %extract3097 = extractelement <16 x double> %1398, i32 7
  %extract3098 = extractelement <16 x double> %1398, i32 8
  %extract3099 = extractelement <16 x double> %1398, i32 9
  %extract3100 = extractelement <16 x double> %1398, i32 10
  %extract3101 = extractelement <16 x double> %1398, i32 11
  %extract3102 = extractelement <16 x double> %1398, i32 12
  %extract3103 = extractelement <16 x double> %1398, i32 13
  %extract3104 = extractelement <16 x double> %1398, i32 14
  %extract3105 = extractelement <16 x double> %1398, i32 15
  %1399 = tail call double @_Z3expd(double %extract3090) nounwind
  %1400 = tail call double @_Z3expd(double %extract3091) nounwind
  %1401 = tail call double @_Z3expd(double %extract3092) nounwind
  %1402 = tail call double @_Z3expd(double %extract3093) nounwind
  %1403 = tail call double @_Z3expd(double %extract3094) nounwind
  %1404 = tail call double @_Z3expd(double %extract3095) nounwind
  %1405 = tail call double @_Z3expd(double %extract3096) nounwind
  %1406 = tail call double @_Z3expd(double %extract3097) nounwind
  %1407 = tail call double @_Z3expd(double %extract3098) nounwind
  %1408 = tail call double @_Z3expd(double %extract3099) nounwind
  %1409 = tail call double @_Z3expd(double %extract3100) nounwind
  %1410 = tail call double @_Z3expd(double %extract3101) nounwind
  %1411 = tail call double @_Z3expd(double %extract3102) nounwind
  %1412 = tail call double @_Z3expd(double %extract3103) nounwind
  %1413 = tail call double @_Z3expd(double %extract3104) nounwind
  %1414 = tail call double @_Z3expd(double %extract3105) nounwind
  %temp.vect3125 = insertelement <16 x double> undef, double %1399, i32 0
  %temp.vect3126 = insertelement <16 x double> %temp.vect3125, double %1400, i32 1
  %temp.vect3127 = insertelement <16 x double> %temp.vect3126, double %1401, i32 2
  %temp.vect3128 = insertelement <16 x double> %temp.vect3127, double %1402, i32 3
  %temp.vect3129 = insertelement <16 x double> %temp.vect3128, double %1403, i32 4
  %temp.vect3130 = insertelement <16 x double> %temp.vect3129, double %1404, i32 5
  %temp.vect3131 = insertelement <16 x double> %temp.vect3130, double %1405, i32 6
  %temp.vect3132 = insertelement <16 x double> %temp.vect3131, double %1406, i32 7
  %temp.vect3133 = insertelement <16 x double> %temp.vect3132, double %1407, i32 8
  %temp.vect3134 = insertelement <16 x double> %temp.vect3133, double %1408, i32 9
  %temp.vect3135 = insertelement <16 x double> %temp.vect3134, double %1409, i32 10
  %temp.vect3136 = insertelement <16 x double> %temp.vect3135, double %1410, i32 11
  %temp.vect3137 = insertelement <16 x double> %temp.vect3136, double %1411, i32 12
  %temp.vect3138 = insertelement <16 x double> %temp.vect3137, double %1412, i32 13
  %temp.vect3139 = insertelement <16 x double> %temp.vect3138, double %1413, i32 14
  %temp.vect3140 = insertelement <16 x double> %temp.vect3139, double %1414, i32 15
  %1415 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1416 = load i64* %1415, align 8
  %1417 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1418 = load i64* %1417, align 8
  %1419 = add i64 %1416, %1418
  %extract3108 = add i64 %1419, 8736768
  %1420 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3108
  %ptrTypeCast3124 = bitcast double addrspace(1)* %1420 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect3140, <16 x double> addrspace(1)* %ptrTypeCast3124, align 8
  %1421 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1422 = load i64* %1421, align 8
  %1423 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1424 = load i64* %1423, align 8
  %1425 = add i64 %1422, %1424
  %extract3143 = add i64 %1425, 8847360
  %1426 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3143
  %ptrTypeCast3159 = bitcast double addrspace(1)* %1426 to <16 x double> addrspace(1)*
  store <16 x double> <double 2.501000e+13, double 2.501000e+13, double 2.501000e+13, double 2.501000e+13, double 2.501000e+13, double 2.501000e+13, double 2.501000e+13, double 2.501000e+13, double 2.501000e+13, double 2.501000e+13, double 2.501000e+13, double 2.501000e+13, double 2.501000e+13, double 2.501000e+13, double 2.501000e+13, double 2.501000e+13>, <16 x double> addrspace(1)* %ptrTypeCast3159, align 8
  %1427 = fmul <16 x double> %24, <double 1.449264e+04, double 1.449264e+04, double 1.449264e+04, double 1.449264e+04, double 1.449264e+04, double 1.449264e+04, double 1.449264e+04, double 1.449264e+04, double 1.449264e+04, double 1.449264e+04, double 1.449264e+04, double 1.449264e+04, double 1.449264e+04, double 1.449264e+04, double 1.449264e+04, double 1.449264e+04>
  %1428 = fsub <16 x double> <double 0x403F0F3C020ECDF9, double 0x403F0F3C020ECDF9, double 0x403F0F3C020ECDF9, double 0x403F0F3C020ECDF9, double 0x403F0F3C020ECDF9, double 0x403F0F3C020ECDF9, double 0x403F0F3C020ECDF9, double 0x403F0F3C020ECDF9, double 0x403F0F3C020ECDF9, double 0x403F0F3C020ECDF9, double 0x403F0F3C020ECDF9, double 0x403F0F3C020ECDF9, double 0x403F0F3C020ECDF9, double 0x403F0F3C020ECDF9, double 0x403F0F3C020ECDF9, double 0x403F0F3C020ECDF9>, %1427
  %extract3160 = extractelement <16 x double> %1428, i32 0
  %extract3161 = extractelement <16 x double> %1428, i32 1
  %extract3162 = extractelement <16 x double> %1428, i32 2
  %extract3163 = extractelement <16 x double> %1428, i32 3
  %extract3164 = extractelement <16 x double> %1428, i32 4
  %extract3165 = extractelement <16 x double> %1428, i32 5
  %extract3166 = extractelement <16 x double> %1428, i32 6
  %extract3167 = extractelement <16 x double> %1428, i32 7
  %extract3168 = extractelement <16 x double> %1428, i32 8
  %extract3169 = extractelement <16 x double> %1428, i32 9
  %extract3170 = extractelement <16 x double> %1428, i32 10
  %extract3171 = extractelement <16 x double> %1428, i32 11
  %extract3172 = extractelement <16 x double> %1428, i32 12
  %extract3173 = extractelement <16 x double> %1428, i32 13
  %extract3174 = extractelement <16 x double> %1428, i32 14
  %extract3175 = extractelement <16 x double> %1428, i32 15
  %1429 = tail call double @_Z3expd(double %extract3160) nounwind
  %1430 = tail call double @_Z3expd(double %extract3161) nounwind
  %1431 = tail call double @_Z3expd(double %extract3162) nounwind
  %1432 = tail call double @_Z3expd(double %extract3163) nounwind
  %1433 = tail call double @_Z3expd(double %extract3164) nounwind
  %1434 = tail call double @_Z3expd(double %extract3165) nounwind
  %1435 = tail call double @_Z3expd(double %extract3166) nounwind
  %1436 = tail call double @_Z3expd(double %extract3167) nounwind
  %1437 = tail call double @_Z3expd(double %extract3168) nounwind
  %1438 = tail call double @_Z3expd(double %extract3169) nounwind
  %1439 = tail call double @_Z3expd(double %extract3170) nounwind
  %1440 = tail call double @_Z3expd(double %extract3171) nounwind
  %1441 = tail call double @_Z3expd(double %extract3172) nounwind
  %1442 = tail call double @_Z3expd(double %extract3173) nounwind
  %1443 = tail call double @_Z3expd(double %extract3174) nounwind
  %1444 = tail call double @_Z3expd(double %extract3175) nounwind
  %temp.vect3195 = insertelement <16 x double> undef, double %1429, i32 0
  %temp.vect3196 = insertelement <16 x double> %temp.vect3195, double %1430, i32 1
  %temp.vect3197 = insertelement <16 x double> %temp.vect3196, double %1431, i32 2
  %temp.vect3198 = insertelement <16 x double> %temp.vect3197, double %1432, i32 3
  %temp.vect3199 = insertelement <16 x double> %temp.vect3198, double %1433, i32 4
  %temp.vect3200 = insertelement <16 x double> %temp.vect3199, double %1434, i32 5
  %temp.vect3201 = insertelement <16 x double> %temp.vect3200, double %1435, i32 6
  %temp.vect3202 = insertelement <16 x double> %temp.vect3201, double %1436, i32 7
  %temp.vect3203 = insertelement <16 x double> %temp.vect3202, double %1437, i32 8
  %temp.vect3204 = insertelement <16 x double> %temp.vect3203, double %1438, i32 9
  %temp.vect3205 = insertelement <16 x double> %temp.vect3204, double %1439, i32 10
  %temp.vect3206 = insertelement <16 x double> %temp.vect3205, double %1440, i32 11
  %temp.vect3207 = insertelement <16 x double> %temp.vect3206, double %1441, i32 12
  %temp.vect3208 = insertelement <16 x double> %temp.vect3207, double %1442, i32 13
  %temp.vect3209 = insertelement <16 x double> %temp.vect3208, double %1443, i32 14
  %temp.vect3210 = insertelement <16 x double> %temp.vect3209, double %1444, i32 15
  %1445 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1446 = load i64* %1445, align 8
  %1447 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1448 = load i64* %1447, align 8
  %1449 = add i64 %1446, %1448
  %extract3178 = add i64 %1449, 8957952
  %1450 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3178
  %ptrTypeCast3194 = bitcast double addrspace(1)* %1450 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect3210, <16 x double> addrspace(1)* %ptrTypeCast3194, align 8
  %1451 = fmul <16 x double> %24, <double 0x40B192C1CB6848BF, double 0x40B192C1CB6848BF, double 0x40B192C1CB6848BF, double 0x40B192C1CB6848BF, double 0x40B192C1CB6848BF, double 0x40B192C1CB6848BF, double 0x40B192C1CB6848BF, double 0x40B192C1CB6848BF, double 0x40B192C1CB6848BF, double 0x40B192C1CB6848BF, double 0x40B192C1CB6848BF, double 0x40B192C1CB6848BF, double 0x40B192C1CB6848BF, double 0x40B192C1CB6848BF, double 0x40B192C1CB6848BF, double 0x40B192C1CB6848BF>
  %1452 = fsub <16 x double> <double 0x40384E8972DAE8EF, double 0x40384E8972DAE8EF, double 0x40384E8972DAE8EF, double 0x40384E8972DAE8EF, double 0x40384E8972DAE8EF, double 0x40384E8972DAE8EF, double 0x40384E8972DAE8EF, double 0x40384E8972DAE8EF, double 0x40384E8972DAE8EF, double 0x40384E8972DAE8EF, double 0x40384E8972DAE8EF, double 0x40384E8972DAE8EF, double 0x40384E8972DAE8EF, double 0x40384E8972DAE8EF, double 0x40384E8972DAE8EF, double 0x40384E8972DAE8EF>, %1451
  %extract3211 = extractelement <16 x double> %1452, i32 0
  %extract3212 = extractelement <16 x double> %1452, i32 1
  %extract3213 = extractelement <16 x double> %1452, i32 2
  %extract3214 = extractelement <16 x double> %1452, i32 3
  %extract3215 = extractelement <16 x double> %1452, i32 4
  %extract3216 = extractelement <16 x double> %1452, i32 5
  %extract3217 = extractelement <16 x double> %1452, i32 6
  %extract3218 = extractelement <16 x double> %1452, i32 7
  %extract3219 = extractelement <16 x double> %1452, i32 8
  %extract3220 = extractelement <16 x double> %1452, i32 9
  %extract3221 = extractelement <16 x double> %1452, i32 10
  %extract3222 = extractelement <16 x double> %1452, i32 11
  %extract3223 = extractelement <16 x double> %1452, i32 12
  %extract3224 = extractelement <16 x double> %1452, i32 13
  %extract3225 = extractelement <16 x double> %1452, i32 14
  %extract3226 = extractelement <16 x double> %1452, i32 15
  %1453 = tail call double @_Z3expd(double %extract3211) nounwind
  %1454 = tail call double @_Z3expd(double %extract3212) nounwind
  %1455 = tail call double @_Z3expd(double %extract3213) nounwind
  %1456 = tail call double @_Z3expd(double %extract3214) nounwind
  %1457 = tail call double @_Z3expd(double %extract3215) nounwind
  %1458 = tail call double @_Z3expd(double %extract3216) nounwind
  %1459 = tail call double @_Z3expd(double %extract3217) nounwind
  %1460 = tail call double @_Z3expd(double %extract3218) nounwind
  %1461 = tail call double @_Z3expd(double %extract3219) nounwind
  %1462 = tail call double @_Z3expd(double %extract3220) nounwind
  %1463 = tail call double @_Z3expd(double %extract3221) nounwind
  %1464 = tail call double @_Z3expd(double %extract3222) nounwind
  %1465 = tail call double @_Z3expd(double %extract3223) nounwind
  %1466 = tail call double @_Z3expd(double %extract3224) nounwind
  %1467 = tail call double @_Z3expd(double %extract3225) nounwind
  %1468 = tail call double @_Z3expd(double %extract3226) nounwind
  %temp.vect3246 = insertelement <16 x double> undef, double %1453, i32 0
  %temp.vect3247 = insertelement <16 x double> %temp.vect3246, double %1454, i32 1
  %temp.vect3248 = insertelement <16 x double> %temp.vect3247, double %1455, i32 2
  %temp.vect3249 = insertelement <16 x double> %temp.vect3248, double %1456, i32 3
  %temp.vect3250 = insertelement <16 x double> %temp.vect3249, double %1457, i32 4
  %temp.vect3251 = insertelement <16 x double> %temp.vect3250, double %1458, i32 5
  %temp.vect3252 = insertelement <16 x double> %temp.vect3251, double %1459, i32 6
  %temp.vect3253 = insertelement <16 x double> %temp.vect3252, double %1460, i32 7
  %temp.vect3254 = insertelement <16 x double> %temp.vect3253, double %1461, i32 8
  %temp.vect3255 = insertelement <16 x double> %temp.vect3254, double %1462, i32 9
  %temp.vect3256 = insertelement <16 x double> %temp.vect3255, double %1463, i32 10
  %temp.vect3257 = insertelement <16 x double> %temp.vect3256, double %1464, i32 11
  %temp.vect3258 = insertelement <16 x double> %temp.vect3257, double %1465, i32 12
  %temp.vect3259 = insertelement <16 x double> %temp.vect3258, double %1466, i32 13
  %temp.vect3260 = insertelement <16 x double> %temp.vect3259, double %1467, i32 14
  %temp.vect3261 = insertelement <16 x double> %temp.vect3260, double %1468, i32 15
  %1469 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1470 = load i64* %1469, align 8
  %1471 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1472 = load i64* %1471, align 8
  %1473 = add i64 %1470, %1472
  %extract3229 = add i64 %1473, 9068544
  %1474 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3229
  %ptrTypeCast3245 = bitcast double addrspace(1)* %1474 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect3261, <16 x double> addrspace(1)* %ptrTypeCast3245, align 8
  %1475 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1476 = load i64* %1475, align 8
  %1477 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1478 = load i64* %1477, align 8
  %1479 = add i64 %1476, %1478
  %extract3264 = add i64 %1479, 9179136
  %1480 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3264
  %ptrTypeCast3280 = bitcast double addrspace(1)* %1480 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12>, <16 x double> addrspace(1)* %ptrTypeCast3280, align 8
  %1481 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1482 = load i64* %1481, align 8
  %1483 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1484 = load i64* %1483, align 8
  %1485 = add i64 %1482, %1484
  %extract3283 = add i64 %1485, 9289728
  %1486 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3283
  %ptrTypeCast3299 = bitcast double addrspace(1)* %1486 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.340000e+13, double 1.340000e+13, double 1.340000e+13, double 1.340000e+13, double 1.340000e+13, double 1.340000e+13, double 1.340000e+13, double 1.340000e+13, double 1.340000e+13, double 1.340000e+13, double 1.340000e+13, double 1.340000e+13, double 1.340000e+13, double 1.340000e+13, double 1.340000e+13, double 1.340000e+13>, <16 x double> addrspace(1)* %ptrTypeCast3299, align 8
  %1487 = fmul <16 x double> %temp.vect97, <double 2.470000e+00, double 2.470000e+00, double 2.470000e+00, double 2.470000e+00, double 2.470000e+00, double 2.470000e+00, double 2.470000e+00, double 2.470000e+00, double 2.470000e+00, double 2.470000e+00, double 2.470000e+00, double 2.470000e+00, double 2.470000e+00, double 2.470000e+00, double 2.470000e+00, double 2.470000e+00>
  %1488 = fadd <16 x double> %1487, <double 0x4024367DC882BB31, double 0x4024367DC882BB31, double 0x4024367DC882BB31, double 0x4024367DC882BB31, double 0x4024367DC882BB31, double 0x4024367DC882BB31, double 0x4024367DC882BB31, double 0x4024367DC882BB31, double 0x4024367DC882BB31, double 0x4024367DC882BB31, double 0x4024367DC882BB31, double 0x4024367DC882BB31, double 0x4024367DC882BB31, double 0x4024367DC882BB31, double 0x4024367DC882BB31, double 0x4024367DC882BB31>
  %1489 = fmul <16 x double> %24, <double 0x40A45D531E3A7DAA, double 0x40A45D531E3A7DAA, double 0x40A45D531E3A7DAA, double 0x40A45D531E3A7DAA, double 0x40A45D531E3A7DAA, double 0x40A45D531E3A7DAA, double 0x40A45D531E3A7DAA, double 0x40A45D531E3A7DAA, double 0x40A45D531E3A7DAA, double 0x40A45D531E3A7DAA, double 0x40A45D531E3A7DAA, double 0x40A45D531E3A7DAA, double 0x40A45D531E3A7DAA, double 0x40A45D531E3A7DAA, double 0x40A45D531E3A7DAA, double 0x40A45D531E3A7DAA>
  %1490 = fsub <16 x double> %1488, %1489
  %extract3300 = extractelement <16 x double> %1490, i32 0
  %extract3301 = extractelement <16 x double> %1490, i32 1
  %extract3302 = extractelement <16 x double> %1490, i32 2
  %extract3303 = extractelement <16 x double> %1490, i32 3
  %extract3304 = extractelement <16 x double> %1490, i32 4
  %extract3305 = extractelement <16 x double> %1490, i32 5
  %extract3306 = extractelement <16 x double> %1490, i32 6
  %extract3307 = extractelement <16 x double> %1490, i32 7
  %extract3308 = extractelement <16 x double> %1490, i32 8
  %extract3309 = extractelement <16 x double> %1490, i32 9
  %extract3310 = extractelement <16 x double> %1490, i32 10
  %extract3311 = extractelement <16 x double> %1490, i32 11
  %extract3312 = extractelement <16 x double> %1490, i32 12
  %extract3313 = extractelement <16 x double> %1490, i32 13
  %extract3314 = extractelement <16 x double> %1490, i32 14
  %extract3315 = extractelement <16 x double> %1490, i32 15
  %1491 = tail call double @_Z3expd(double %extract3300) nounwind
  %1492 = tail call double @_Z3expd(double %extract3301) nounwind
  %1493 = tail call double @_Z3expd(double %extract3302) nounwind
  %1494 = tail call double @_Z3expd(double %extract3303) nounwind
  %1495 = tail call double @_Z3expd(double %extract3304) nounwind
  %1496 = tail call double @_Z3expd(double %extract3305) nounwind
  %1497 = tail call double @_Z3expd(double %extract3306) nounwind
  %1498 = tail call double @_Z3expd(double %extract3307) nounwind
  %1499 = tail call double @_Z3expd(double %extract3308) nounwind
  %1500 = tail call double @_Z3expd(double %extract3309) nounwind
  %1501 = tail call double @_Z3expd(double %extract3310) nounwind
  %1502 = tail call double @_Z3expd(double %extract3311) nounwind
  %1503 = tail call double @_Z3expd(double %extract3312) nounwind
  %1504 = tail call double @_Z3expd(double %extract3313) nounwind
  %1505 = tail call double @_Z3expd(double %extract3314) nounwind
  %1506 = tail call double @_Z3expd(double %extract3315) nounwind
  %temp.vect3335 = insertelement <16 x double> undef, double %1491, i32 0
  %temp.vect3336 = insertelement <16 x double> %temp.vect3335, double %1492, i32 1
  %temp.vect3337 = insertelement <16 x double> %temp.vect3336, double %1493, i32 2
  %temp.vect3338 = insertelement <16 x double> %temp.vect3337, double %1494, i32 3
  %temp.vect3339 = insertelement <16 x double> %temp.vect3338, double %1495, i32 4
  %temp.vect3340 = insertelement <16 x double> %temp.vect3339, double %1496, i32 5
  %temp.vect3341 = insertelement <16 x double> %temp.vect3340, double %1497, i32 6
  %temp.vect3342 = insertelement <16 x double> %temp.vect3341, double %1498, i32 7
  %temp.vect3343 = insertelement <16 x double> %temp.vect3342, double %1499, i32 8
  %temp.vect3344 = insertelement <16 x double> %temp.vect3343, double %1500, i32 9
  %temp.vect3345 = insertelement <16 x double> %temp.vect3344, double %1501, i32 10
  %temp.vect3346 = insertelement <16 x double> %temp.vect3345, double %1502, i32 11
  %temp.vect3347 = insertelement <16 x double> %temp.vect3346, double %1503, i32 12
  %temp.vect3348 = insertelement <16 x double> %temp.vect3347, double %1504, i32 13
  %temp.vect3349 = insertelement <16 x double> %temp.vect3348, double %1505, i32 14
  %temp.vect3350 = insertelement <16 x double> %temp.vect3349, double %1506, i32 15
  %1507 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1508 = load i64* %1507, align 8
  %1509 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1510 = load i64* %1509, align 8
  %1511 = add i64 %1508, %1510
  %extract3318 = add i64 %1511, 9400320
  %1512 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3318
  %ptrTypeCast3334 = bitcast double addrspace(1)* %1512 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect3350, <16 x double> addrspace(1)* %ptrTypeCast3334, align 8
  %1513 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1514 = load i64* %1513, align 8
  %1515 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1516 = load i64* %1515, align 8
  %1517 = add i64 %1514, %1516
  %extract3353 = add i64 %1517, 9510912
  %1518 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3353
  %ptrTypeCast3369 = bitcast double addrspace(1)* %1518 to <16 x double> addrspace(1)*
  store <16 x double> <double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast3369, align 8
  %1519 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1520 = load i64* %1519, align 8
  %1521 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1522 = load i64* %1521, align 8
  %1523 = add i64 %1520, %1522
  %extract3372 = add i64 %1523, 9621504
  %1524 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3372
  %ptrTypeCast3388 = bitcast double addrspace(1)* %1524 to <16 x double> addrspace(1)*
  store <16 x double> <double 8.480000e+12, double 8.480000e+12, double 8.480000e+12, double 8.480000e+12, double 8.480000e+12, double 8.480000e+12, double 8.480000e+12, double 8.480000e+12, double 8.480000e+12, double 8.480000e+12, double 8.480000e+12, double 8.480000e+12, double 8.480000e+12, double 8.480000e+12, double 8.480000e+12, double 8.480000e+12>, <16 x double> addrspace(1)* %ptrTypeCast3388, align 8
  %1525 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1526 = load i64* %1525, align 8
  %1527 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1528 = load i64* %1527, align 8
  %1529 = add i64 %1526, %1528
  %extract3391 = add i64 %1529, 9732096
  %1530 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3391
  %ptrTypeCast3407 = bitcast double addrspace(1)* %1530 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.800000e+13, double 1.800000e+13, double 1.800000e+13, double 1.800000e+13, double 1.800000e+13, double 1.800000e+13, double 1.800000e+13, double 1.800000e+13, double 1.800000e+13, double 1.800000e+13, double 1.800000e+13, double 1.800000e+13, double 1.800000e+13, double 1.800000e+13, double 1.800000e+13, double 1.800000e+13>, <16 x double> addrspace(1)* %ptrTypeCast3407, align 8
  %1531 = fmul <16 x double> %temp.vect97, <double 2.810000e+00, double 2.810000e+00, double 2.810000e+00, double 2.810000e+00, double 2.810000e+00, double 2.810000e+00, double 2.810000e+00, double 2.810000e+00, double 2.810000e+00, double 2.810000e+00, double 2.810000e+00, double 2.810000e+00, double 2.810000e+00, double 2.810000e+00, double 2.810000e+00, double 2.810000e+00>
  %1532 = fadd <16 x double> %1531, <double 0x40203727156DA575, double 0x40203727156DA575, double 0x40203727156DA575, double 0x40203727156DA575, double 0x40203727156DA575, double 0x40203727156DA575, double 0x40203727156DA575, double 0x40203727156DA575, double 0x40203727156DA575, double 0x40203727156DA575, double 0x40203727156DA575, double 0x40203727156DA575, double 0x40203727156DA575, double 0x40203727156DA575, double 0x40203727156DA575, double 0x40203727156DA575>
  %1533 = fmul <16 x double> %24, <double 0x40A709B307F23CC9, double 0x40A709B307F23CC9, double 0x40A709B307F23CC9, double 0x40A709B307F23CC9, double 0x40A709B307F23CC9, double 0x40A709B307F23CC9, double 0x40A709B307F23CC9, double 0x40A709B307F23CC9, double 0x40A709B307F23CC9, double 0x40A709B307F23CC9, double 0x40A709B307F23CC9, double 0x40A709B307F23CC9, double 0x40A709B307F23CC9, double 0x40A709B307F23CC9, double 0x40A709B307F23CC9, double 0x40A709B307F23CC9>
  %1534 = fsub <16 x double> %1532, %1533
  %extract3408 = extractelement <16 x double> %1534, i32 0
  %extract3409 = extractelement <16 x double> %1534, i32 1
  %extract3410 = extractelement <16 x double> %1534, i32 2
  %extract3411 = extractelement <16 x double> %1534, i32 3
  %extract3412 = extractelement <16 x double> %1534, i32 4
  %extract3413 = extractelement <16 x double> %1534, i32 5
  %extract3414 = extractelement <16 x double> %1534, i32 6
  %extract3415 = extractelement <16 x double> %1534, i32 7
  %extract3416 = extractelement <16 x double> %1534, i32 8
  %extract3417 = extractelement <16 x double> %1534, i32 9
  %extract3418 = extractelement <16 x double> %1534, i32 10
  %extract3419 = extractelement <16 x double> %1534, i32 11
  %extract3420 = extractelement <16 x double> %1534, i32 12
  %extract3421 = extractelement <16 x double> %1534, i32 13
  %extract3422 = extractelement <16 x double> %1534, i32 14
  %extract3423 = extractelement <16 x double> %1534, i32 15
  %1535 = tail call double @_Z3expd(double %extract3408) nounwind
  %1536 = tail call double @_Z3expd(double %extract3409) nounwind
  %1537 = tail call double @_Z3expd(double %extract3410) nounwind
  %1538 = tail call double @_Z3expd(double %extract3411) nounwind
  %1539 = tail call double @_Z3expd(double %extract3412) nounwind
  %1540 = tail call double @_Z3expd(double %extract3413) nounwind
  %1541 = tail call double @_Z3expd(double %extract3414) nounwind
  %1542 = tail call double @_Z3expd(double %extract3415) nounwind
  %1543 = tail call double @_Z3expd(double %extract3416) nounwind
  %1544 = tail call double @_Z3expd(double %extract3417) nounwind
  %1545 = tail call double @_Z3expd(double %extract3418) nounwind
  %1546 = tail call double @_Z3expd(double %extract3419) nounwind
  %1547 = tail call double @_Z3expd(double %extract3420) nounwind
  %1548 = tail call double @_Z3expd(double %extract3421) nounwind
  %1549 = tail call double @_Z3expd(double %extract3422) nounwind
  %1550 = tail call double @_Z3expd(double %extract3423) nounwind
  %temp.vect3443 = insertelement <16 x double> undef, double %1535, i32 0
  %temp.vect3444 = insertelement <16 x double> %temp.vect3443, double %1536, i32 1
  %temp.vect3445 = insertelement <16 x double> %temp.vect3444, double %1537, i32 2
  %temp.vect3446 = insertelement <16 x double> %temp.vect3445, double %1538, i32 3
  %temp.vect3447 = insertelement <16 x double> %temp.vect3446, double %1539, i32 4
  %temp.vect3448 = insertelement <16 x double> %temp.vect3447, double %1540, i32 5
  %temp.vect3449 = insertelement <16 x double> %temp.vect3448, double %1541, i32 6
  %temp.vect3450 = insertelement <16 x double> %temp.vect3449, double %1542, i32 7
  %temp.vect3451 = insertelement <16 x double> %temp.vect3450, double %1543, i32 8
  %temp.vect3452 = insertelement <16 x double> %temp.vect3451, double %1544, i32 9
  %temp.vect3453 = insertelement <16 x double> %temp.vect3452, double %1545, i32 10
  %temp.vect3454 = insertelement <16 x double> %temp.vect3453, double %1546, i32 11
  %temp.vect3455 = insertelement <16 x double> %temp.vect3454, double %1547, i32 12
  %temp.vect3456 = insertelement <16 x double> %temp.vect3455, double %1548, i32 13
  %temp.vect3457 = insertelement <16 x double> %temp.vect3456, double %1549, i32 14
  %temp.vect3458 = insertelement <16 x double> %temp.vect3457, double %1550, i32 15
  %1551 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1552 = load i64* %1551, align 8
  %1553 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1554 = load i64* %1553, align 8
  %1555 = add i64 %1552, %1554
  %extract3426 = add i64 %1555, 9842688
  %1556 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3426
  %ptrTypeCast3442 = bitcast double addrspace(1)* %1556 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect3458, <16 x double> addrspace(1)* %ptrTypeCast3442, align 8
  %1557 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1558 = load i64* %1557, align 8
  %1559 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1560 = load i64* %1559, align 8
  %1561 = add i64 %1558, %1560
  %extract3461 = add i64 %1561, 9953280
  %1562 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3461
  %ptrTypeCast3477 = bitcast double addrspace(1)* %1562 to <16 x double> addrspace(1)*
  store <16 x double> <double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast3477, align 8
  %1563 = fmul <16 x double> %24, <double 0x4071ED56052502EF, double 0x4071ED56052502EF, double 0x4071ED56052502EF, double 0x4071ED56052502EF, double 0x4071ED56052502EF, double 0x4071ED56052502EF, double 0x4071ED56052502EF, double 0x4071ED56052502EF, double 0x4071ED56052502EF, double 0x4071ED56052502EF, double 0x4071ED56052502EF, double 0x4071ED56052502EF, double 0x4071ED56052502EF, double 0x4071ED56052502EF, double 0x4071ED56052502EF, double 0x4071ED56052502EF>
  %extract3478 = extractelement <16 x double> %1563, i32 0
  %extract3479 = extractelement <16 x double> %1563, i32 1
  %extract3480 = extractelement <16 x double> %1563, i32 2
  %extract3481 = extractelement <16 x double> %1563, i32 3
  %extract3482 = extractelement <16 x double> %1563, i32 4
  %extract3483 = extractelement <16 x double> %1563, i32 5
  %extract3484 = extractelement <16 x double> %1563, i32 6
  %extract3485 = extractelement <16 x double> %1563, i32 7
  %extract3486 = extractelement <16 x double> %1563, i32 8
  %extract3487 = extractelement <16 x double> %1563, i32 9
  %extract3488 = extractelement <16 x double> %1563, i32 10
  %extract3489 = extractelement <16 x double> %1563, i32 11
  %extract3490 = extractelement <16 x double> %1563, i32 12
  %extract3491 = extractelement <16 x double> %1563, i32 13
  %extract3492 = extractelement <16 x double> %1563, i32 14
  %extract3493 = extractelement <16 x double> %1563, i32 15
  %1564 = tail call double @_Z3expd(double %extract3478) nounwind
  %1565 = tail call double @_Z3expd(double %extract3479) nounwind
  %1566 = tail call double @_Z3expd(double %extract3480) nounwind
  %1567 = tail call double @_Z3expd(double %extract3481) nounwind
  %1568 = tail call double @_Z3expd(double %extract3482) nounwind
  %1569 = tail call double @_Z3expd(double %extract3483) nounwind
  %1570 = tail call double @_Z3expd(double %extract3484) nounwind
  %1571 = tail call double @_Z3expd(double %extract3485) nounwind
  %1572 = tail call double @_Z3expd(double %extract3486) nounwind
  %1573 = tail call double @_Z3expd(double %extract3487) nounwind
  %1574 = tail call double @_Z3expd(double %extract3488) nounwind
  %1575 = tail call double @_Z3expd(double %extract3489) nounwind
  %1576 = tail call double @_Z3expd(double %extract3490) nounwind
  %1577 = tail call double @_Z3expd(double %extract3491) nounwind
  %1578 = tail call double @_Z3expd(double %extract3492) nounwind
  %1579 = tail call double @_Z3expd(double %extract3493) nounwind
  %temp.vect3494 = insertelement <16 x double> undef, double %1564, i32 0
  %temp.vect3495 = insertelement <16 x double> %temp.vect3494, double %1565, i32 1
  %temp.vect3496 = insertelement <16 x double> %temp.vect3495, double %1566, i32 2
  %temp.vect3497 = insertelement <16 x double> %temp.vect3496, double %1567, i32 3
  %temp.vect3498 = insertelement <16 x double> %temp.vect3497, double %1568, i32 4
  %temp.vect3499 = insertelement <16 x double> %temp.vect3498, double %1569, i32 5
  %temp.vect3500 = insertelement <16 x double> %temp.vect3499, double %1570, i32 6
  %temp.vect3501 = insertelement <16 x double> %temp.vect3500, double %1571, i32 7
  %temp.vect3502 = insertelement <16 x double> %temp.vect3501, double %1572, i32 8
  %temp.vect3503 = insertelement <16 x double> %temp.vect3502, double %1573, i32 9
  %temp.vect3504 = insertelement <16 x double> %temp.vect3503, double %1574, i32 10
  %temp.vect3505 = insertelement <16 x double> %temp.vect3504, double %1575, i32 11
  %temp.vect3506 = insertelement <16 x double> %temp.vect3505, double %1576, i32 12
  %temp.vect3507 = insertelement <16 x double> %temp.vect3506, double %1577, i32 13
  %temp.vect3508 = insertelement <16 x double> %temp.vect3507, double %1578, i32 14
  %temp.vect3509 = insertelement <16 x double> %temp.vect3508, double %1579, i32 15
  %1580 = fmul <16 x double> %temp.vect3509, <double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13>
  %1581 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1582 = load i64* %1581, align 8
  %1583 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1584 = load i64* %1583, align 8
  %1585 = add i64 %1582, %1584
  %extract3512 = add i64 %1585, 10063872
  %1586 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3512
  %ptrTypeCast3528 = bitcast double addrspace(1)* %1586 to <16 x double> addrspace(1)*
  store <16 x double> %1580, <16 x double> addrspace(1)* %ptrTypeCast3528, align 8
  %1587 = fmul <16 x double> %temp.vect3509, <double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13>
  %1588 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1589 = load i64* %1588, align 8
  %1590 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1591 = load i64* %1590, align 8
  %1592 = add i64 %1589, %1591
  %extract3531 = add i64 %1592, 11722752
  %1593 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3531
  %ptrTypeCast3547 = bitcast double addrspace(1)* %1593 to <16 x double> addrspace(1)*
  store <16 x double> %1587, <16 x double> addrspace(1)* %ptrTypeCast3547, align 8
  %1594 = fmul <16 x double> %temp.vect97, <double 9.700000e-01, double 9.700000e-01, double 9.700000e-01, double 9.700000e-01, double 9.700000e-01, double 9.700000e-01, double 9.700000e-01, double 9.700000e-01, double 9.700000e-01, double 9.700000e-01, double 9.700000e-01, double 9.700000e-01, double 9.700000e-01, double 9.700000e-01, double 9.700000e-01, double 9.700000e-01>
  %1595 = fsub <16 x double> <double 0x4042CBE022EAE693, double 0x4042CBE022EAE693, double 0x4042CBE022EAE693, double 0x4042CBE022EAE693, double 0x4042CBE022EAE693, double 0x4042CBE022EAE693, double 0x4042CBE022EAE693, double 0x4042CBE022EAE693, double 0x4042CBE022EAE693, double 0x4042CBE022EAE693, double 0x4042CBE022EAE693, double 0x4042CBE022EAE693, double 0x4042CBE022EAE693, double 0x4042CBE022EAE693, double 0x4042CBE022EAE693, double 0x4042CBE022EAE693>, %1594
  %1596 = fmul <16 x double> %24, <double 0x40737FE8CAC4B4D0, double 0x40737FE8CAC4B4D0, double 0x40737FE8CAC4B4D0, double 0x40737FE8CAC4B4D0, double 0x40737FE8CAC4B4D0, double 0x40737FE8CAC4B4D0, double 0x40737FE8CAC4B4D0, double 0x40737FE8CAC4B4D0, double 0x40737FE8CAC4B4D0, double 0x40737FE8CAC4B4D0, double 0x40737FE8CAC4B4D0, double 0x40737FE8CAC4B4D0, double 0x40737FE8CAC4B4D0, double 0x40737FE8CAC4B4D0, double 0x40737FE8CAC4B4D0, double 0x40737FE8CAC4B4D0>
  %1597 = fsub <16 x double> %1595, %1596
  %extract3548 = extractelement <16 x double> %1597, i32 0
  %extract3549 = extractelement <16 x double> %1597, i32 1
  %extract3550 = extractelement <16 x double> %1597, i32 2
  %extract3551 = extractelement <16 x double> %1597, i32 3
  %extract3552 = extractelement <16 x double> %1597, i32 4
  %extract3553 = extractelement <16 x double> %1597, i32 5
  %extract3554 = extractelement <16 x double> %1597, i32 6
  %extract3555 = extractelement <16 x double> %1597, i32 7
  %extract3556 = extractelement <16 x double> %1597, i32 8
  %extract3557 = extractelement <16 x double> %1597, i32 9
  %extract3558 = extractelement <16 x double> %1597, i32 10
  %extract3559 = extractelement <16 x double> %1597, i32 11
  %extract3560 = extractelement <16 x double> %1597, i32 12
  %extract3561 = extractelement <16 x double> %1597, i32 13
  %extract3562 = extractelement <16 x double> %1597, i32 14
  %extract3563 = extractelement <16 x double> %1597, i32 15
  %1598 = tail call double @_Z3expd(double %extract3548) nounwind
  %1599 = tail call double @_Z3expd(double %extract3549) nounwind
  %1600 = tail call double @_Z3expd(double %extract3550) nounwind
  %1601 = tail call double @_Z3expd(double %extract3551) nounwind
  %1602 = tail call double @_Z3expd(double %extract3552) nounwind
  %1603 = tail call double @_Z3expd(double %extract3553) nounwind
  %1604 = tail call double @_Z3expd(double %extract3554) nounwind
  %1605 = tail call double @_Z3expd(double %extract3555) nounwind
  %1606 = tail call double @_Z3expd(double %extract3556) nounwind
  %1607 = tail call double @_Z3expd(double %extract3557) nounwind
  %1608 = tail call double @_Z3expd(double %extract3558) nounwind
  %1609 = tail call double @_Z3expd(double %extract3559) nounwind
  %1610 = tail call double @_Z3expd(double %extract3560) nounwind
  %1611 = tail call double @_Z3expd(double %extract3561) nounwind
  %1612 = tail call double @_Z3expd(double %extract3562) nounwind
  %1613 = tail call double @_Z3expd(double %extract3563) nounwind
  %temp.vect3583 = insertelement <16 x double> undef, double %1598, i32 0
  %temp.vect3584 = insertelement <16 x double> %temp.vect3583, double %1599, i32 1
  %temp.vect3585 = insertelement <16 x double> %temp.vect3584, double %1600, i32 2
  %temp.vect3586 = insertelement <16 x double> %temp.vect3585, double %1601, i32 3
  %temp.vect3587 = insertelement <16 x double> %temp.vect3586, double %1602, i32 4
  %temp.vect3588 = insertelement <16 x double> %temp.vect3587, double %1603, i32 5
  %temp.vect3589 = insertelement <16 x double> %temp.vect3588, double %1604, i32 6
  %temp.vect3590 = insertelement <16 x double> %temp.vect3589, double %1605, i32 7
  %temp.vect3591 = insertelement <16 x double> %temp.vect3590, double %1606, i32 8
  %temp.vect3592 = insertelement <16 x double> %temp.vect3591, double %1607, i32 9
  %temp.vect3593 = insertelement <16 x double> %temp.vect3592, double %1608, i32 10
  %temp.vect3594 = insertelement <16 x double> %temp.vect3593, double %1609, i32 11
  %temp.vect3595 = insertelement <16 x double> %temp.vect3594, double %1610, i32 12
  %temp.vect3596 = insertelement <16 x double> %temp.vect3595, double %1611, i32 13
  %temp.vect3597 = insertelement <16 x double> %temp.vect3596, double %1612, i32 14
  %temp.vect3598 = insertelement <16 x double> %temp.vect3597, double %1613, i32 15
  %1614 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1615 = load i64* %1614, align 8
  %1616 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1617 = load i64* %1616, align 8
  %1618 = add i64 %1615, %1617
  %extract3566 = add i64 %1618, 10174464
  %1619 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3566
  %ptrTypeCast3582 = bitcast double addrspace(1)* %1619 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect3598, <16 x double> addrspace(1)* %ptrTypeCast3582, align 8
  %1620 = fmul <16 x double> %temp.vect97, <double 1.000000e-01, double 1.000000e-01, double 1.000000e-01, double 1.000000e-01, double 1.000000e-01, double 1.000000e-01, double 1.000000e-01, double 1.000000e-01, double 1.000000e-01, double 1.000000e-01, double 1.000000e-01, double 1.000000e-01, double 1.000000e-01, double 1.000000e-01, double 1.000000e-01, double 1.000000e-01>
  %1621 = fadd <16 x double> %1620, <double 0x403D3D0B84988095, double 0x403D3D0B84988095, double 0x403D3D0B84988095, double 0x403D3D0B84988095, double 0x403D3D0B84988095, double 0x403D3D0B84988095, double 0x403D3D0B84988095, double 0x403D3D0B84988095, double 0x403D3D0B84988095, double 0x403D3D0B84988095, double 0x403D3D0B84988095, double 0x403D3D0B84988095, double 0x403D3D0B84988095, double 0x403D3D0B84988095, double 0x403D3D0B84988095, double 0x403D3D0B84988095>
  %1622 = fmul <16 x double> %24, <double 0x40B4D618C0053E2D, double 0x40B4D618C0053E2D, double 0x40B4D618C0053E2D, double 0x40B4D618C0053E2D, double 0x40B4D618C0053E2D, double 0x40B4D618C0053E2D, double 0x40B4D618C0053E2D, double 0x40B4D618C0053E2D, double 0x40B4D618C0053E2D, double 0x40B4D618C0053E2D, double 0x40B4D618C0053E2D, double 0x40B4D618C0053E2D, double 0x40B4D618C0053E2D, double 0x40B4D618C0053E2D, double 0x40B4D618C0053E2D, double 0x40B4D618C0053E2D>
  %1623 = fsub <16 x double> %1621, %1622
  %extract3599 = extractelement <16 x double> %1623, i32 0
  %extract3600 = extractelement <16 x double> %1623, i32 1
  %extract3601 = extractelement <16 x double> %1623, i32 2
  %extract3602 = extractelement <16 x double> %1623, i32 3
  %extract3603 = extractelement <16 x double> %1623, i32 4
  %extract3604 = extractelement <16 x double> %1623, i32 5
  %extract3605 = extractelement <16 x double> %1623, i32 6
  %extract3606 = extractelement <16 x double> %1623, i32 7
  %extract3607 = extractelement <16 x double> %1623, i32 8
  %extract3608 = extractelement <16 x double> %1623, i32 9
  %extract3609 = extractelement <16 x double> %1623, i32 10
  %extract3610 = extractelement <16 x double> %1623, i32 11
  %extract3611 = extractelement <16 x double> %1623, i32 12
  %extract3612 = extractelement <16 x double> %1623, i32 13
  %extract3613 = extractelement <16 x double> %1623, i32 14
  %extract3614 = extractelement <16 x double> %1623, i32 15
  %1624 = tail call double @_Z3expd(double %extract3599) nounwind
  %1625 = tail call double @_Z3expd(double %extract3600) nounwind
  %1626 = tail call double @_Z3expd(double %extract3601) nounwind
  %1627 = tail call double @_Z3expd(double %extract3602) nounwind
  %1628 = tail call double @_Z3expd(double %extract3603) nounwind
  %1629 = tail call double @_Z3expd(double %extract3604) nounwind
  %1630 = tail call double @_Z3expd(double %extract3605) nounwind
  %1631 = tail call double @_Z3expd(double %extract3606) nounwind
  %1632 = tail call double @_Z3expd(double %extract3607) nounwind
  %1633 = tail call double @_Z3expd(double %extract3608) nounwind
  %1634 = tail call double @_Z3expd(double %extract3609) nounwind
  %1635 = tail call double @_Z3expd(double %extract3610) nounwind
  %1636 = tail call double @_Z3expd(double %extract3611) nounwind
  %1637 = tail call double @_Z3expd(double %extract3612) nounwind
  %1638 = tail call double @_Z3expd(double %extract3613) nounwind
  %1639 = tail call double @_Z3expd(double %extract3614) nounwind
  %temp.vect3634 = insertelement <16 x double> undef, double %1624, i32 0
  %temp.vect3635 = insertelement <16 x double> %temp.vect3634, double %1625, i32 1
  %temp.vect3636 = insertelement <16 x double> %temp.vect3635, double %1626, i32 2
  %temp.vect3637 = insertelement <16 x double> %temp.vect3636, double %1627, i32 3
  %temp.vect3638 = insertelement <16 x double> %temp.vect3637, double %1628, i32 4
  %temp.vect3639 = insertelement <16 x double> %temp.vect3638, double %1629, i32 5
  %temp.vect3640 = insertelement <16 x double> %temp.vect3639, double %1630, i32 6
  %temp.vect3641 = insertelement <16 x double> %temp.vect3640, double %1631, i32 7
  %temp.vect3642 = insertelement <16 x double> %temp.vect3641, double %1632, i32 8
  %temp.vect3643 = insertelement <16 x double> %temp.vect3642, double %1633, i32 9
  %temp.vect3644 = insertelement <16 x double> %temp.vect3643, double %1634, i32 10
  %temp.vect3645 = insertelement <16 x double> %temp.vect3644, double %1635, i32 11
  %temp.vect3646 = insertelement <16 x double> %temp.vect3645, double %1636, i32 12
  %temp.vect3647 = insertelement <16 x double> %temp.vect3646, double %1637, i32 13
  %temp.vect3648 = insertelement <16 x double> %temp.vect3647, double %1638, i32 14
  %temp.vect3649 = insertelement <16 x double> %temp.vect3648, double %1639, i32 15
  %1640 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1641 = load i64* %1640, align 8
  %1642 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1643 = load i64* %1642, align 8
  %1644 = add i64 %1641, %1643
  %extract3617 = add i64 %1644, 10285056
  %1645 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3617
  %ptrTypeCast3633 = bitcast double addrspace(1)* %1645 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect3649, <16 x double> addrspace(1)* %ptrTypeCast3633, align 8
  %1646 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1647 = load i64* %1646, align 8
  %1648 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1649 = load i64* %1648, align 8
  %1650 = add i64 %1647, %1649
  %extract3652 = add i64 %1650, 10395648
  %1651 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3652
  %ptrTypeCast3668 = bitcast double addrspace(1)* %1651 to <16 x double> addrspace(1)*
  store <16 x double> <double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast3668, align 8
  %1652 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1653 = load i64* %1652, align 8
  %1654 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1655 = load i64* %1654, align 8
  %1656 = add i64 %1653, %1655
  %extract3671 = add i64 %1656, 10506240
  %1657 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3671
  %ptrTypeCast3687 = bitcast double addrspace(1)* %1657 to <16 x double> addrspace(1)*
  store <16 x double> <double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast3687, align 8
  %1658 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1659 = load i64* %1658, align 8
  %1660 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1661 = load i64* %1660, align 8
  %1662 = add i64 %1659, %1661
  %extract3690 = add i64 %1662, 10616832
  %1663 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3690
  %ptrTypeCast3706 = bitcast double addrspace(1)* %1663 to <16 x double> addrspace(1)*
  store <16 x double> <double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13>, <16 x double> addrspace(1)* %ptrTypeCast3706, align 8
  %1664 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1665 = load i64* %1664, align 8
  %1666 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1667 = load i64* %1666, align 8
  %1668 = add i64 %1665, %1667
  %extract3709 = add i64 %1668, 10727424
  %1669 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3709
  %ptrTypeCast3725 = bitcast double addrspace(1)* %1669 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13>, <16 x double> addrspace(1)* %ptrTypeCast3725, align 8
  %1670 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1671 = load i64* %1670, align 8
  %1672 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1673 = load i64* %1672, align 8
  %1674 = add i64 %1671, %1673
  %extract3728 = add i64 %1674, 10838016
  %1675 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3728
  %ptrTypeCast3744 = bitcast double addrspace(1)* %1675 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast3744, align 8
  %1676 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1677 = load i64* %1676, align 8
  %1678 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1679 = load i64* %1678, align 8
  %1680 = add i64 %1677, %1679
  %extract3747 = add i64 %1680, 10948608
  %1681 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3747
  %ptrTypeCast3763 = bitcast double addrspace(1)* %1681 to <16 x double> addrspace(1)*
  store <16 x double> <double 5.000000e+12, double 5.000000e+12, double 5.000000e+12, double 5.000000e+12, double 5.000000e+12, double 5.000000e+12, double 5.000000e+12, double 5.000000e+12, double 5.000000e+12, double 5.000000e+12, double 5.000000e+12, double 5.000000e+12, double 5.000000e+12, double 5.000000e+12, double 5.000000e+12, double 5.000000e+12>, <16 x double> addrspace(1)* %ptrTypeCast3763, align 8
  %1682 = fmul <16 x double> %temp.vect97, <double 7.600000e+00, double 7.600000e+00, double 7.600000e+00, double 7.600000e+00, double 7.600000e+00, double 7.600000e+00, double 7.600000e+00, double 7.600000e+00, double 7.600000e+00, double 7.600000e+00, double 7.600000e+00, double 7.600000e+00, double 7.600000e+00, double 7.600000e+00, double 7.600000e+00, double 7.600000e+00>
  %1683 = fadd <16 x double> %1682, <double 0xC03C7ACA8D576BF8, double 0xC03C7ACA8D576BF8, double 0xC03C7ACA8D576BF8, double 0xC03C7ACA8D576BF8, double 0xC03C7ACA8D576BF8, double 0xC03C7ACA8D576BF8, double 0xC03C7ACA8D576BF8, double 0xC03C7ACA8D576BF8, double 0xC03C7ACA8D576BF8, double 0xC03C7ACA8D576BF8, double 0xC03C7ACA8D576BF8, double 0xC03C7ACA8D576BF8, double 0xC03C7ACA8D576BF8, double 0xC03C7ACA8D576BF8, double 0xC03C7ACA8D576BF8, double 0xC03C7ACA8D576BF8>
  %1684 = fmul <16 x double> %24, <double 0x409BC16B5B2D4D40, double 0x409BC16B5B2D4D40, double 0x409BC16B5B2D4D40, double 0x409BC16B5B2D4D40, double 0x409BC16B5B2D4D40, double 0x409BC16B5B2D4D40, double 0x409BC16B5B2D4D40, double 0x409BC16B5B2D4D40, double 0x409BC16B5B2D4D40, double 0x409BC16B5B2D4D40, double 0x409BC16B5B2D4D40, double 0x409BC16B5B2D4D40, double 0x409BC16B5B2D4D40, double 0x409BC16B5B2D4D40, double 0x409BC16B5B2D4D40, double 0x409BC16B5B2D4D40>
  %1685 = fadd <16 x double> %1683, %1684
  %extract3764 = extractelement <16 x double> %1685, i32 0
  %extract3765 = extractelement <16 x double> %1685, i32 1
  %extract3766 = extractelement <16 x double> %1685, i32 2
  %extract3767 = extractelement <16 x double> %1685, i32 3
  %extract3768 = extractelement <16 x double> %1685, i32 4
  %extract3769 = extractelement <16 x double> %1685, i32 5
  %extract3770 = extractelement <16 x double> %1685, i32 6
  %extract3771 = extractelement <16 x double> %1685, i32 7
  %extract3772 = extractelement <16 x double> %1685, i32 8
  %extract3773 = extractelement <16 x double> %1685, i32 9
  %extract3774 = extractelement <16 x double> %1685, i32 10
  %extract3775 = extractelement <16 x double> %1685, i32 11
  %extract3776 = extractelement <16 x double> %1685, i32 12
  %extract3777 = extractelement <16 x double> %1685, i32 13
  %extract3778 = extractelement <16 x double> %1685, i32 14
  %extract3779 = extractelement <16 x double> %1685, i32 15
  %1686 = tail call double @_Z3expd(double %extract3764) nounwind
  %1687 = tail call double @_Z3expd(double %extract3765) nounwind
  %1688 = tail call double @_Z3expd(double %extract3766) nounwind
  %1689 = tail call double @_Z3expd(double %extract3767) nounwind
  %1690 = tail call double @_Z3expd(double %extract3768) nounwind
  %1691 = tail call double @_Z3expd(double %extract3769) nounwind
  %1692 = tail call double @_Z3expd(double %extract3770) nounwind
  %1693 = tail call double @_Z3expd(double %extract3771) nounwind
  %1694 = tail call double @_Z3expd(double %extract3772) nounwind
  %1695 = tail call double @_Z3expd(double %extract3773) nounwind
  %1696 = tail call double @_Z3expd(double %extract3774) nounwind
  %1697 = tail call double @_Z3expd(double %extract3775) nounwind
  %1698 = tail call double @_Z3expd(double %extract3776) nounwind
  %1699 = tail call double @_Z3expd(double %extract3777) nounwind
  %1700 = tail call double @_Z3expd(double %extract3778) nounwind
  %1701 = tail call double @_Z3expd(double %extract3779) nounwind
  %temp.vect3799 = insertelement <16 x double> undef, double %1686, i32 0
  %temp.vect3800 = insertelement <16 x double> %temp.vect3799, double %1687, i32 1
  %temp.vect3801 = insertelement <16 x double> %temp.vect3800, double %1688, i32 2
  %temp.vect3802 = insertelement <16 x double> %temp.vect3801, double %1689, i32 3
  %temp.vect3803 = insertelement <16 x double> %temp.vect3802, double %1690, i32 4
  %temp.vect3804 = insertelement <16 x double> %temp.vect3803, double %1691, i32 5
  %temp.vect3805 = insertelement <16 x double> %temp.vect3804, double %1692, i32 6
  %temp.vect3806 = insertelement <16 x double> %temp.vect3805, double %1693, i32 7
  %temp.vect3807 = insertelement <16 x double> %temp.vect3806, double %1694, i32 8
  %temp.vect3808 = insertelement <16 x double> %temp.vect3807, double %1695, i32 9
  %temp.vect3809 = insertelement <16 x double> %temp.vect3808, double %1696, i32 10
  %temp.vect3810 = insertelement <16 x double> %temp.vect3809, double %1697, i32 11
  %temp.vect3811 = insertelement <16 x double> %temp.vect3810, double %1698, i32 12
  %temp.vect3812 = insertelement <16 x double> %temp.vect3811, double %1699, i32 13
  %temp.vect3813 = insertelement <16 x double> %temp.vect3812, double %1700, i32 14
  %temp.vect3814 = insertelement <16 x double> %temp.vect3813, double %1701, i32 15
  %1702 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1703 = load i64* %1702, align 8
  %1704 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1705 = load i64* %1704, align 8
  %1706 = add i64 %1703, %1705
  %extract3782 = add i64 %1706, 11059200
  %1707 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3782
  %ptrTypeCast3798 = bitcast double addrspace(1)* %1707 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect3814, <16 x double> addrspace(1)* %ptrTypeCast3798, align 8
  %1708 = fmul <16 x double> %temp.vect97, <double 1.620000e+00, double 1.620000e+00, double 1.620000e+00, double 1.620000e+00, double 1.620000e+00, double 1.620000e+00, double 1.620000e+00, double 1.620000e+00, double 1.620000e+00, double 1.620000e+00, double 1.620000e+00, double 1.620000e+00, double 1.620000e+00, double 1.620000e+00, double 1.620000e+00, double 1.620000e+00>
  %1709 = fadd <16 x double> %1708, <double 0x40344EC8BAEF54B7, double 0x40344EC8BAEF54B7, double 0x40344EC8BAEF54B7, double 0x40344EC8BAEF54B7, double 0x40344EC8BAEF54B7, double 0x40344EC8BAEF54B7, double 0x40344EC8BAEF54B7, double 0x40344EC8BAEF54B7, double 0x40344EC8BAEF54B7, double 0x40344EC8BAEF54B7, double 0x40344EC8BAEF54B7, double 0x40344EC8BAEF54B7, double 0x40344EC8BAEF54B7, double 0x40344EC8BAEF54B7, double 0x40344EC8BAEF54B7, double 0x40344EC8BAEF54B7>
  %1710 = fmul <16 x double> %24, <double 0x40B54EDE61CFFEB0, double 0x40B54EDE61CFFEB0, double 0x40B54EDE61CFFEB0, double 0x40B54EDE61CFFEB0, double 0x40B54EDE61CFFEB0, double 0x40B54EDE61CFFEB0, double 0x40B54EDE61CFFEB0, double 0x40B54EDE61CFFEB0, double 0x40B54EDE61CFFEB0, double 0x40B54EDE61CFFEB0, double 0x40B54EDE61CFFEB0, double 0x40B54EDE61CFFEB0, double 0x40B54EDE61CFFEB0, double 0x40B54EDE61CFFEB0, double 0x40B54EDE61CFFEB0, double 0x40B54EDE61CFFEB0>
  %1711 = fsub <16 x double> %1709, %1710
  %extract3815 = extractelement <16 x double> %1711, i32 0
  %extract3816 = extractelement <16 x double> %1711, i32 1
  %extract3817 = extractelement <16 x double> %1711, i32 2
  %extract3818 = extractelement <16 x double> %1711, i32 3
  %extract3819 = extractelement <16 x double> %1711, i32 4
  %extract3820 = extractelement <16 x double> %1711, i32 5
  %extract3821 = extractelement <16 x double> %1711, i32 6
  %extract3822 = extractelement <16 x double> %1711, i32 7
  %extract3823 = extractelement <16 x double> %1711, i32 8
  %extract3824 = extractelement <16 x double> %1711, i32 9
  %extract3825 = extractelement <16 x double> %1711, i32 10
  %extract3826 = extractelement <16 x double> %1711, i32 11
  %extract3827 = extractelement <16 x double> %1711, i32 12
  %extract3828 = extractelement <16 x double> %1711, i32 13
  %extract3829 = extractelement <16 x double> %1711, i32 14
  %extract3830 = extractelement <16 x double> %1711, i32 15
  %1712 = tail call double @_Z3expd(double %extract3815) nounwind
  %1713 = tail call double @_Z3expd(double %extract3816) nounwind
  %1714 = tail call double @_Z3expd(double %extract3817) nounwind
  %1715 = tail call double @_Z3expd(double %extract3818) nounwind
  %1716 = tail call double @_Z3expd(double %extract3819) nounwind
  %1717 = tail call double @_Z3expd(double %extract3820) nounwind
  %1718 = tail call double @_Z3expd(double %extract3821) nounwind
  %1719 = tail call double @_Z3expd(double %extract3822) nounwind
  %1720 = tail call double @_Z3expd(double %extract3823) nounwind
  %1721 = tail call double @_Z3expd(double %extract3824) nounwind
  %1722 = tail call double @_Z3expd(double %extract3825) nounwind
  %1723 = tail call double @_Z3expd(double %extract3826) nounwind
  %1724 = tail call double @_Z3expd(double %extract3827) nounwind
  %1725 = tail call double @_Z3expd(double %extract3828) nounwind
  %1726 = tail call double @_Z3expd(double %extract3829) nounwind
  %1727 = tail call double @_Z3expd(double %extract3830) nounwind
  %temp.vect3850 = insertelement <16 x double> undef, double %1712, i32 0
  %temp.vect3851 = insertelement <16 x double> %temp.vect3850, double %1713, i32 1
  %temp.vect3852 = insertelement <16 x double> %temp.vect3851, double %1714, i32 2
  %temp.vect3853 = insertelement <16 x double> %temp.vect3852, double %1715, i32 3
  %temp.vect3854 = insertelement <16 x double> %temp.vect3853, double %1716, i32 4
  %temp.vect3855 = insertelement <16 x double> %temp.vect3854, double %1717, i32 5
  %temp.vect3856 = insertelement <16 x double> %temp.vect3855, double %1718, i32 6
  %temp.vect3857 = insertelement <16 x double> %temp.vect3856, double %1719, i32 7
  %temp.vect3858 = insertelement <16 x double> %temp.vect3857, double %1720, i32 8
  %temp.vect3859 = insertelement <16 x double> %temp.vect3858, double %1721, i32 9
  %temp.vect3860 = insertelement <16 x double> %temp.vect3859, double %1722, i32 10
  %temp.vect3861 = insertelement <16 x double> %temp.vect3860, double %1723, i32 11
  %temp.vect3862 = insertelement <16 x double> %temp.vect3861, double %1724, i32 12
  %temp.vect3863 = insertelement <16 x double> %temp.vect3862, double %1725, i32 13
  %temp.vect3864 = insertelement <16 x double> %temp.vect3863, double %1726, i32 14
  %temp.vect3865 = insertelement <16 x double> %temp.vect3864, double %1727, i32 15
  %1728 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1729 = load i64* %1728, align 8
  %1730 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1731 = load i64* %1730, align 8
  %1732 = add i64 %1729, %1731
  %extract3833 = add i64 %1732, 11169792
  %1733 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3833
  %ptrTypeCast3849 = bitcast double addrspace(1)* %1733 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect3865, <16 x double> addrspace(1)* %ptrTypeCast3849, align 8
  %1734 = fadd <16 x double> %654, <double 0x4034BE39BCBA3012, double 0x4034BE39BCBA3012, double 0x4034BE39BCBA3012, double 0x4034BE39BCBA3012, double 0x4034BE39BCBA3012, double 0x4034BE39BCBA3012, double 0x4034BE39BCBA3012, double 0x4034BE39BCBA3012, double 0x4034BE39BCBA3012, double 0x4034BE39BCBA3012, double 0x4034BE39BCBA3012, double 0x4034BE39BCBA3012, double 0x4034BE39BCBA3012, double 0x4034BE39BCBA3012, double 0x4034BE39BCBA3012, double 0x4034BE39BCBA3012>
  %1735 = fmul <16 x double> %24, <double 0x40B0E7A9D0A67621, double 0x40B0E7A9D0A67621, double 0x40B0E7A9D0A67621, double 0x40B0E7A9D0A67621, double 0x40B0E7A9D0A67621, double 0x40B0E7A9D0A67621, double 0x40B0E7A9D0A67621, double 0x40B0E7A9D0A67621, double 0x40B0E7A9D0A67621, double 0x40B0E7A9D0A67621, double 0x40B0E7A9D0A67621, double 0x40B0E7A9D0A67621, double 0x40B0E7A9D0A67621, double 0x40B0E7A9D0A67621, double 0x40B0E7A9D0A67621, double 0x40B0E7A9D0A67621>
  %1736 = fsub <16 x double> %1734, %1735
  %extract3866 = extractelement <16 x double> %1736, i32 0
  %extract3867 = extractelement <16 x double> %1736, i32 1
  %extract3868 = extractelement <16 x double> %1736, i32 2
  %extract3869 = extractelement <16 x double> %1736, i32 3
  %extract3870 = extractelement <16 x double> %1736, i32 4
  %extract3871 = extractelement <16 x double> %1736, i32 5
  %extract3872 = extractelement <16 x double> %1736, i32 6
  %extract3873 = extractelement <16 x double> %1736, i32 7
  %extract3874 = extractelement <16 x double> %1736, i32 8
  %extract3875 = extractelement <16 x double> %1736, i32 9
  %extract3876 = extractelement <16 x double> %1736, i32 10
  %extract3877 = extractelement <16 x double> %1736, i32 11
  %extract3878 = extractelement <16 x double> %1736, i32 12
  %extract3879 = extractelement <16 x double> %1736, i32 13
  %extract3880 = extractelement <16 x double> %1736, i32 14
  %extract3881 = extractelement <16 x double> %1736, i32 15
  %1737 = tail call double @_Z3expd(double %extract3866) nounwind
  %1738 = tail call double @_Z3expd(double %extract3867) nounwind
  %1739 = tail call double @_Z3expd(double %extract3868) nounwind
  %1740 = tail call double @_Z3expd(double %extract3869) nounwind
  %1741 = tail call double @_Z3expd(double %extract3870) nounwind
  %1742 = tail call double @_Z3expd(double %extract3871) nounwind
  %1743 = tail call double @_Z3expd(double %extract3872) nounwind
  %1744 = tail call double @_Z3expd(double %extract3873) nounwind
  %1745 = tail call double @_Z3expd(double %extract3874) nounwind
  %1746 = tail call double @_Z3expd(double %extract3875) nounwind
  %1747 = tail call double @_Z3expd(double %extract3876) nounwind
  %1748 = tail call double @_Z3expd(double %extract3877) nounwind
  %1749 = tail call double @_Z3expd(double %extract3878) nounwind
  %1750 = tail call double @_Z3expd(double %extract3879) nounwind
  %1751 = tail call double @_Z3expd(double %extract3880) nounwind
  %1752 = tail call double @_Z3expd(double %extract3881) nounwind
  %temp.vect3901 = insertelement <16 x double> undef, double %1737, i32 0
  %temp.vect3902 = insertelement <16 x double> %temp.vect3901, double %1738, i32 1
  %temp.vect3903 = insertelement <16 x double> %temp.vect3902, double %1739, i32 2
  %temp.vect3904 = insertelement <16 x double> %temp.vect3903, double %1740, i32 3
  %temp.vect3905 = insertelement <16 x double> %temp.vect3904, double %1741, i32 4
  %temp.vect3906 = insertelement <16 x double> %temp.vect3905, double %1742, i32 5
  %temp.vect3907 = insertelement <16 x double> %temp.vect3906, double %1743, i32 6
  %temp.vect3908 = insertelement <16 x double> %temp.vect3907, double %1744, i32 7
  %temp.vect3909 = insertelement <16 x double> %temp.vect3908, double %1745, i32 8
  %temp.vect3910 = insertelement <16 x double> %temp.vect3909, double %1746, i32 9
  %temp.vect3911 = insertelement <16 x double> %temp.vect3910, double %1747, i32 10
  %temp.vect3912 = insertelement <16 x double> %temp.vect3911, double %1748, i32 11
  %temp.vect3913 = insertelement <16 x double> %temp.vect3912, double %1749, i32 12
  %temp.vect3914 = insertelement <16 x double> %temp.vect3913, double %1750, i32 13
  %temp.vect3915 = insertelement <16 x double> %temp.vect3914, double %1751, i32 14
  %temp.vect3916 = insertelement <16 x double> %temp.vect3915, double %1752, i32 15
  %1753 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1754 = load i64* %1753, align 8
  %1755 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1756 = load i64* %1755, align 8
  %1757 = add i64 %1754, %1756
  %extract3884 = add i64 %1757, 11280384
  %1758 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3884
  %ptrTypeCast3900 = bitcast double addrspace(1)* %1758 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect3916, <16 x double> addrspace(1)* %ptrTypeCast3900, align 8
  %1759 = fadd <16 x double> %1395, <double 0x40326BB1BAF88EF2, double 0x40326BB1BAF88EF2, double 0x40326BB1BAF88EF2, double 0x40326BB1BAF88EF2, double 0x40326BB1BAF88EF2, double 0x40326BB1BAF88EF2, double 0x40326BB1BAF88EF2, double 0x40326BB1BAF88EF2, double 0x40326BB1BAF88EF2, double 0x40326BB1BAF88EF2, double 0x40326BB1BAF88EF2, double 0x40326BB1BAF88EF2, double 0x40326BB1BAF88EF2, double 0x40326BB1BAF88EF2, double 0x40326BB1BAF88EF2, double 0x40326BB1BAF88EF2>
  %1760 = fmul <16 x double> %24, <double 1.570036e+03, double 1.570036e+03, double 1.570036e+03, double 1.570036e+03, double 1.570036e+03, double 1.570036e+03, double 1.570036e+03, double 1.570036e+03, double 1.570036e+03, double 1.570036e+03, double 1.570036e+03, double 1.570036e+03, double 1.570036e+03, double 1.570036e+03, double 1.570036e+03, double 1.570036e+03>
  %1761 = fsub <16 x double> %1759, %1760
  %extract3917 = extractelement <16 x double> %1761, i32 0
  %extract3918 = extractelement <16 x double> %1761, i32 1
  %extract3919 = extractelement <16 x double> %1761, i32 2
  %extract3920 = extractelement <16 x double> %1761, i32 3
  %extract3921 = extractelement <16 x double> %1761, i32 4
  %extract3922 = extractelement <16 x double> %1761, i32 5
  %extract3923 = extractelement <16 x double> %1761, i32 6
  %extract3924 = extractelement <16 x double> %1761, i32 7
  %extract3925 = extractelement <16 x double> %1761, i32 8
  %extract3926 = extractelement <16 x double> %1761, i32 9
  %extract3927 = extractelement <16 x double> %1761, i32 10
  %extract3928 = extractelement <16 x double> %1761, i32 11
  %extract3929 = extractelement <16 x double> %1761, i32 12
  %extract3930 = extractelement <16 x double> %1761, i32 13
  %extract3931 = extractelement <16 x double> %1761, i32 14
  %extract3932 = extractelement <16 x double> %1761, i32 15
  %1762 = tail call double @_Z3expd(double %extract3917) nounwind
  %1763 = tail call double @_Z3expd(double %extract3918) nounwind
  %1764 = tail call double @_Z3expd(double %extract3919) nounwind
  %1765 = tail call double @_Z3expd(double %extract3920) nounwind
  %1766 = tail call double @_Z3expd(double %extract3921) nounwind
  %1767 = tail call double @_Z3expd(double %extract3922) nounwind
  %1768 = tail call double @_Z3expd(double %extract3923) nounwind
  %1769 = tail call double @_Z3expd(double %extract3924) nounwind
  %1770 = tail call double @_Z3expd(double %extract3925) nounwind
  %1771 = tail call double @_Z3expd(double %extract3926) nounwind
  %1772 = tail call double @_Z3expd(double %extract3927) nounwind
  %1773 = tail call double @_Z3expd(double %extract3928) nounwind
  %1774 = tail call double @_Z3expd(double %extract3929) nounwind
  %1775 = tail call double @_Z3expd(double %extract3930) nounwind
  %1776 = tail call double @_Z3expd(double %extract3931) nounwind
  %1777 = tail call double @_Z3expd(double %extract3932) nounwind
  %temp.vect3952 = insertelement <16 x double> undef, double %1762, i32 0
  %temp.vect3953 = insertelement <16 x double> %temp.vect3952, double %1763, i32 1
  %temp.vect3954 = insertelement <16 x double> %temp.vect3953, double %1764, i32 2
  %temp.vect3955 = insertelement <16 x double> %temp.vect3954, double %1765, i32 3
  %temp.vect3956 = insertelement <16 x double> %temp.vect3955, double %1766, i32 4
  %temp.vect3957 = insertelement <16 x double> %temp.vect3956, double %1767, i32 5
  %temp.vect3958 = insertelement <16 x double> %temp.vect3957, double %1768, i32 6
  %temp.vect3959 = insertelement <16 x double> %temp.vect3958, double %1769, i32 7
  %temp.vect3960 = insertelement <16 x double> %temp.vect3959, double %1770, i32 8
  %temp.vect3961 = insertelement <16 x double> %temp.vect3960, double %1771, i32 9
  %temp.vect3962 = insertelement <16 x double> %temp.vect3961, double %1772, i32 10
  %temp.vect3963 = insertelement <16 x double> %temp.vect3962, double %1773, i32 11
  %temp.vect3964 = insertelement <16 x double> %temp.vect3963, double %1774, i32 12
  %temp.vect3965 = insertelement <16 x double> %temp.vect3964, double %1775, i32 13
  %temp.vect3966 = insertelement <16 x double> %temp.vect3965, double %1776, i32 14
  %temp.vect3967 = insertelement <16 x double> %temp.vect3966, double %1777, i32 15
  %1778 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1779 = load i64* %1778, align 8
  %1780 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1781 = load i64* %1780, align 8
  %1782 = add i64 %1779, %1781
  %extract3935 = add i64 %1782, 11390976
  %1783 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3935
  %ptrTypeCast3951 = bitcast double addrspace(1)* %1783 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect3967, <16 x double> addrspace(1)* %ptrTypeCast3951, align 8
  %1784 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1785 = load i64* %1784, align 8
  %1786 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1787 = load i64* %1786, align 8
  %1788 = add i64 %1785, %1787
  %extract3970 = add i64 %1788, 11501568
  %1789 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract3970
  %ptrTypeCast3986 = bitcast double addrspace(1)* %1789 to <16 x double> addrspace(1)*
  store <16 x double> <double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast3986, align 8
  %1790 = fadd <16 x double> %481, <double 0x402D6E6C8C1A5516, double 0x402D6E6C8C1A5516, double 0x402D6E6C8C1A5516, double 0x402D6E6C8C1A5516, double 0x402D6E6C8C1A5516, double 0x402D6E6C8C1A5516, double 0x402D6E6C8C1A5516, double 0x402D6E6C8C1A5516, double 0x402D6E6C8C1A5516, double 0x402D6E6C8C1A5516, double 0x402D6E6C8C1A5516, double 0x402D6E6C8C1A5516, double 0x402D6E6C8C1A5516, double 0x402D6E6C8C1A5516, double 0x402D6E6C8C1A5516, double 0x402D6E6C8C1A5516>
  %1791 = fmul <16 x double> %24, <double 0x40B0419A122FAD6D, double 0x40B0419A122FAD6D, double 0x40B0419A122FAD6D, double 0x40B0419A122FAD6D, double 0x40B0419A122FAD6D, double 0x40B0419A122FAD6D, double 0x40B0419A122FAD6D, double 0x40B0419A122FAD6D, double 0x40B0419A122FAD6D, double 0x40B0419A122FAD6D, double 0x40B0419A122FAD6D, double 0x40B0419A122FAD6D, double 0x40B0419A122FAD6D, double 0x40B0419A122FAD6D, double 0x40B0419A122FAD6D, double 0x40B0419A122FAD6D>
  %1792 = fsub <16 x double> %1790, %1791
  %extract3987 = extractelement <16 x double> %1792, i32 0
  %extract3988 = extractelement <16 x double> %1792, i32 1
  %extract3989 = extractelement <16 x double> %1792, i32 2
  %extract3990 = extractelement <16 x double> %1792, i32 3
  %extract3991 = extractelement <16 x double> %1792, i32 4
  %extract3992 = extractelement <16 x double> %1792, i32 5
  %extract3993 = extractelement <16 x double> %1792, i32 6
  %extract3994 = extractelement <16 x double> %1792, i32 7
  %extract3995 = extractelement <16 x double> %1792, i32 8
  %extract3996 = extractelement <16 x double> %1792, i32 9
  %extract3997 = extractelement <16 x double> %1792, i32 10
  %extract3998 = extractelement <16 x double> %1792, i32 11
  %extract3999 = extractelement <16 x double> %1792, i32 12
  %extract4000 = extractelement <16 x double> %1792, i32 13
  %extract4001 = extractelement <16 x double> %1792, i32 14
  %extract4002 = extractelement <16 x double> %1792, i32 15
  %1793 = tail call double @_Z3expd(double %extract3987) nounwind
  %1794 = tail call double @_Z3expd(double %extract3988) nounwind
  %1795 = tail call double @_Z3expd(double %extract3989) nounwind
  %1796 = tail call double @_Z3expd(double %extract3990) nounwind
  %1797 = tail call double @_Z3expd(double %extract3991) nounwind
  %1798 = tail call double @_Z3expd(double %extract3992) nounwind
  %1799 = tail call double @_Z3expd(double %extract3993) nounwind
  %1800 = tail call double @_Z3expd(double %extract3994) nounwind
  %1801 = tail call double @_Z3expd(double %extract3995) nounwind
  %1802 = tail call double @_Z3expd(double %extract3996) nounwind
  %1803 = tail call double @_Z3expd(double %extract3997) nounwind
  %1804 = tail call double @_Z3expd(double %extract3998) nounwind
  %1805 = tail call double @_Z3expd(double %extract3999) nounwind
  %1806 = tail call double @_Z3expd(double %extract4000) nounwind
  %1807 = tail call double @_Z3expd(double %extract4001) nounwind
  %1808 = tail call double @_Z3expd(double %extract4002) nounwind
  %temp.vect4022 = insertelement <16 x double> undef, double %1793, i32 0
  %temp.vect4023 = insertelement <16 x double> %temp.vect4022, double %1794, i32 1
  %temp.vect4024 = insertelement <16 x double> %temp.vect4023, double %1795, i32 2
  %temp.vect4025 = insertelement <16 x double> %temp.vect4024, double %1796, i32 3
  %temp.vect4026 = insertelement <16 x double> %temp.vect4025, double %1797, i32 4
  %temp.vect4027 = insertelement <16 x double> %temp.vect4026, double %1798, i32 5
  %temp.vect4028 = insertelement <16 x double> %temp.vect4027, double %1799, i32 6
  %temp.vect4029 = insertelement <16 x double> %temp.vect4028, double %1800, i32 7
  %temp.vect4030 = insertelement <16 x double> %temp.vect4029, double %1801, i32 8
  %temp.vect4031 = insertelement <16 x double> %temp.vect4030, double %1802, i32 9
  %temp.vect4032 = insertelement <16 x double> %temp.vect4031, double %1803, i32 10
  %temp.vect4033 = insertelement <16 x double> %temp.vect4032, double %1804, i32 11
  %temp.vect4034 = insertelement <16 x double> %temp.vect4033, double %1805, i32 12
  %temp.vect4035 = insertelement <16 x double> %temp.vect4034, double %1806, i32 13
  %temp.vect4036 = insertelement <16 x double> %temp.vect4035, double %1807, i32 14
  %temp.vect4037 = insertelement <16 x double> %temp.vect4036, double %1808, i32 15
  %1809 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1810 = load i64* %1809, align 8
  %1811 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1812 = load i64* %1811, align 8
  %1813 = add i64 %1810, %1812
  %extract4005 = add i64 %1813, 11612160
  %1814 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract4005
  %ptrTypeCast4021 = bitcast double addrspace(1)* %1814 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect4037, <16 x double> addrspace(1)* %ptrTypeCast4021, align 8
  %1815 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1816 = load i64* %1815, align 8
  %1817 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1818 = load i64* %1817, align 8
  %1819 = add i64 %1816, %1818
  %extract4040 = add i64 %1819, 11833344
  %1820 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract4040
  %ptrTypeCast4056 = bitcast double addrspace(1)* %1820 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14>, <16 x double> addrspace(1)* %ptrTypeCast4056, align 8
  %1821 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1822 = load i64* %1821, align 8
  %1823 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1824 = load i64* %1823, align 8
  %1825 = add i64 %1822, %1824
  %extract4059 = add i64 %1825, 11943936
  %1826 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract4059
  %ptrTypeCast4075 = bitcast double addrspace(1)* %1826 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14>, <16 x double> addrspace(1)* %ptrTypeCast4075, align 8
  %1827 = fmul <16 x double> %24, <double 0x407ADBF3D9EC7000, double 0x407ADBF3D9EC7000, double 0x407ADBF3D9EC7000, double 0x407ADBF3D9EC7000, double 0x407ADBF3D9EC7000, double 0x407ADBF3D9EC7000, double 0x407ADBF3D9EC7000, double 0x407ADBF3D9EC7000, double 0x407ADBF3D9EC7000, double 0x407ADBF3D9EC7000, double 0x407ADBF3D9EC7000, double 0x407ADBF3D9EC7000, double 0x407ADBF3D9EC7000, double 0x407ADBF3D9EC7000, double 0x407ADBF3D9EC7000, double 0x407ADBF3D9EC7000>
  %1828 = fsub <16 x double> <double 0x403C19DCC1369695, double 0x403C19DCC1369695, double 0x403C19DCC1369695, double 0x403C19DCC1369695, double 0x403C19DCC1369695, double 0x403C19DCC1369695, double 0x403C19DCC1369695, double 0x403C19DCC1369695, double 0x403C19DCC1369695, double 0x403C19DCC1369695, double 0x403C19DCC1369695, double 0x403C19DCC1369695, double 0x403C19DCC1369695, double 0x403C19DCC1369695, double 0x403C19DCC1369695, double 0x403C19DCC1369695>, %1827
  %extract4076 = extractelement <16 x double> %1828, i32 0
  %extract4077 = extractelement <16 x double> %1828, i32 1
  %extract4078 = extractelement <16 x double> %1828, i32 2
  %extract4079 = extractelement <16 x double> %1828, i32 3
  %extract4080 = extractelement <16 x double> %1828, i32 4
  %extract4081 = extractelement <16 x double> %1828, i32 5
  %extract4082 = extractelement <16 x double> %1828, i32 6
  %extract4083 = extractelement <16 x double> %1828, i32 7
  %extract4084 = extractelement <16 x double> %1828, i32 8
  %extract4085 = extractelement <16 x double> %1828, i32 9
  %extract4086 = extractelement <16 x double> %1828, i32 10
  %extract4087 = extractelement <16 x double> %1828, i32 11
  %extract4088 = extractelement <16 x double> %1828, i32 12
  %extract4089 = extractelement <16 x double> %1828, i32 13
  %extract4090 = extractelement <16 x double> %1828, i32 14
  %extract4091 = extractelement <16 x double> %1828, i32 15
  %1829 = tail call double @_Z3expd(double %extract4076) nounwind
  %1830 = tail call double @_Z3expd(double %extract4077) nounwind
  %1831 = tail call double @_Z3expd(double %extract4078) nounwind
  %1832 = tail call double @_Z3expd(double %extract4079) nounwind
  %1833 = tail call double @_Z3expd(double %extract4080) nounwind
  %1834 = tail call double @_Z3expd(double %extract4081) nounwind
  %1835 = tail call double @_Z3expd(double %extract4082) nounwind
  %1836 = tail call double @_Z3expd(double %extract4083) nounwind
  %1837 = tail call double @_Z3expd(double %extract4084) nounwind
  %1838 = tail call double @_Z3expd(double %extract4085) nounwind
  %1839 = tail call double @_Z3expd(double %extract4086) nounwind
  %1840 = tail call double @_Z3expd(double %extract4087) nounwind
  %1841 = tail call double @_Z3expd(double %extract4088) nounwind
  %1842 = tail call double @_Z3expd(double %extract4089) nounwind
  %1843 = tail call double @_Z3expd(double %extract4090) nounwind
  %1844 = tail call double @_Z3expd(double %extract4091) nounwind
  %temp.vect4111 = insertelement <16 x double> undef, double %1829, i32 0
  %temp.vect4112 = insertelement <16 x double> %temp.vect4111, double %1830, i32 1
  %temp.vect4113 = insertelement <16 x double> %temp.vect4112, double %1831, i32 2
  %temp.vect4114 = insertelement <16 x double> %temp.vect4113, double %1832, i32 3
  %temp.vect4115 = insertelement <16 x double> %temp.vect4114, double %1833, i32 4
  %temp.vect4116 = insertelement <16 x double> %temp.vect4115, double %1834, i32 5
  %temp.vect4117 = insertelement <16 x double> %temp.vect4116, double %1835, i32 6
  %temp.vect4118 = insertelement <16 x double> %temp.vect4117, double %1836, i32 7
  %temp.vect4119 = insertelement <16 x double> %temp.vect4118, double %1837, i32 8
  %temp.vect4120 = insertelement <16 x double> %temp.vect4119, double %1838, i32 9
  %temp.vect4121 = insertelement <16 x double> %temp.vect4120, double %1839, i32 10
  %temp.vect4122 = insertelement <16 x double> %temp.vect4121, double %1840, i32 11
  %temp.vect4123 = insertelement <16 x double> %temp.vect4122, double %1841, i32 12
  %temp.vect4124 = insertelement <16 x double> %temp.vect4123, double %1842, i32 13
  %temp.vect4125 = insertelement <16 x double> %temp.vect4124, double %1843, i32 14
  %temp.vect4126 = insertelement <16 x double> %temp.vect4125, double %1844, i32 15
  %1845 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1846 = load i64* %1845, align 8
  %1847 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1848 = load i64* %1847, align 8
  %1849 = add i64 %1846, %1848
  %extract4094 = add i64 %1849, 12054528
  %1850 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract4094
  %ptrTypeCast4110 = bitcast double addrspace(1)* %1850 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect4126, <16 x double> addrspace(1)* %ptrTypeCast4110, align 8
  %1851 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1852 = load i64* %1851, align 8
  %1853 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1854 = load i64* %1853, align 8
  %1855 = add i64 %1852, %1854
  %extract4129 = add i64 %1855, 12165120
  %1856 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract4129
  %ptrTypeCast4145 = bitcast double addrspace(1)* %1856 to <16 x double> addrspace(1)*
  store <16 x double> <double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast4145, align 8
  %1857 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1858 = load i64* %1857, align 8
  %1859 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1860 = load i64* %1859, align 8
  %1861 = add i64 %1858, %1860
  %extract4148 = add i64 %1861, 12275712
  %1862 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract4148
  %ptrTypeCast4164 = bitcast double addrspace(1)* %1862 to <16 x double> addrspace(1)*
  store <16 x double> <double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast4164, align 8
  %1863 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1864 = load i64* %1863, align 8
  %1865 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1866 = load i64* %1865, align 8
  %1867 = add i64 %1864, %1866
  %extract4167 = add i64 %1867, 12386304
  %1868 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract4167
  %ptrTypeCast4183 = bitcast double addrspace(1)* %1868 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast4183, align 8
  %1869 = fmul <16 x double> %temp.vect97, <double 5.200000e-01, double 5.200000e-01, double 5.200000e-01, double 5.200000e-01, double 5.200000e-01, double 5.200000e-01, double 5.200000e-01, double 5.200000e-01, double 5.200000e-01, double 5.200000e-01, double 5.200000e-01, double 5.200000e-01, double 5.200000e-01, double 5.200000e-01, double 5.200000e-01, double 5.200000e-01>
  %1870 = fsub <16 x double> <double 0x40412866A7D4C5C0, double 0x40412866A7D4C5C0, double 0x40412866A7D4C5C0, double 0x40412866A7D4C5C0, double 0x40412866A7D4C5C0, double 0x40412866A7D4C5C0, double 0x40412866A7D4C5C0, double 0x40412866A7D4C5C0, double 0x40412866A7D4C5C0, double 0x40412866A7D4C5C0, double 0x40412866A7D4C5C0, double 0x40412866A7D4C5C0, double 0x40412866A7D4C5C0, double 0x40412866A7D4C5C0, double 0x40412866A7D4C5C0, double 0x40412866A7D4C5C0>, %1869
  %1871 = fmul <16 x double> %24, <double 0x40D8F08FBCD35A86, double 0x40D8F08FBCD35A86, double 0x40D8F08FBCD35A86, double 0x40D8F08FBCD35A86, double 0x40D8F08FBCD35A86, double 0x40D8F08FBCD35A86, double 0x40D8F08FBCD35A86, double 0x40D8F08FBCD35A86, double 0x40D8F08FBCD35A86, double 0x40D8F08FBCD35A86, double 0x40D8F08FBCD35A86, double 0x40D8F08FBCD35A86, double 0x40D8F08FBCD35A86, double 0x40D8F08FBCD35A86, double 0x40D8F08FBCD35A86, double 0x40D8F08FBCD35A86>
  %1872 = fsub <16 x double> %1870, %1871
  %extract4184 = extractelement <16 x double> %1872, i32 0
  %extract4185 = extractelement <16 x double> %1872, i32 1
  %extract4186 = extractelement <16 x double> %1872, i32 2
  %extract4187 = extractelement <16 x double> %1872, i32 3
  %extract4188 = extractelement <16 x double> %1872, i32 4
  %extract4189 = extractelement <16 x double> %1872, i32 5
  %extract4190 = extractelement <16 x double> %1872, i32 6
  %extract4191 = extractelement <16 x double> %1872, i32 7
  %extract4192 = extractelement <16 x double> %1872, i32 8
  %extract4193 = extractelement <16 x double> %1872, i32 9
  %extract4194 = extractelement <16 x double> %1872, i32 10
  %extract4195 = extractelement <16 x double> %1872, i32 11
  %extract4196 = extractelement <16 x double> %1872, i32 12
  %extract4197 = extractelement <16 x double> %1872, i32 13
  %extract4198 = extractelement <16 x double> %1872, i32 14
  %extract4199 = extractelement <16 x double> %1872, i32 15
  %1873 = tail call double @_Z3expd(double %extract4184) nounwind
  %1874 = tail call double @_Z3expd(double %extract4185) nounwind
  %1875 = tail call double @_Z3expd(double %extract4186) nounwind
  %1876 = tail call double @_Z3expd(double %extract4187) nounwind
  %1877 = tail call double @_Z3expd(double %extract4188) nounwind
  %1878 = tail call double @_Z3expd(double %extract4189) nounwind
  %1879 = tail call double @_Z3expd(double %extract4190) nounwind
  %1880 = tail call double @_Z3expd(double %extract4191) nounwind
  %1881 = tail call double @_Z3expd(double %extract4192) nounwind
  %1882 = tail call double @_Z3expd(double %extract4193) nounwind
  %1883 = tail call double @_Z3expd(double %extract4194) nounwind
  %1884 = tail call double @_Z3expd(double %extract4195) nounwind
  %1885 = tail call double @_Z3expd(double %extract4196) nounwind
  %1886 = tail call double @_Z3expd(double %extract4197) nounwind
  %1887 = tail call double @_Z3expd(double %extract4198) nounwind
  %1888 = tail call double @_Z3expd(double %extract4199) nounwind
  %temp.vect4219 = insertelement <16 x double> undef, double %1873, i32 0
  %temp.vect4220 = insertelement <16 x double> %temp.vect4219, double %1874, i32 1
  %temp.vect4221 = insertelement <16 x double> %temp.vect4220, double %1875, i32 2
  %temp.vect4222 = insertelement <16 x double> %temp.vect4221, double %1876, i32 3
  %temp.vect4223 = insertelement <16 x double> %temp.vect4222, double %1877, i32 4
  %temp.vect4224 = insertelement <16 x double> %temp.vect4223, double %1878, i32 5
  %temp.vect4225 = insertelement <16 x double> %temp.vect4224, double %1879, i32 6
  %temp.vect4226 = insertelement <16 x double> %temp.vect4225, double %1880, i32 7
  %temp.vect4227 = insertelement <16 x double> %temp.vect4226, double %1881, i32 8
  %temp.vect4228 = insertelement <16 x double> %temp.vect4227, double %1882, i32 9
  %temp.vect4229 = insertelement <16 x double> %temp.vect4228, double %1883, i32 10
  %temp.vect4230 = insertelement <16 x double> %temp.vect4229, double %1884, i32 11
  %temp.vect4231 = insertelement <16 x double> %temp.vect4230, double %1885, i32 12
  %temp.vect4232 = insertelement <16 x double> %temp.vect4231, double %1886, i32 13
  %temp.vect4233 = insertelement <16 x double> %temp.vect4232, double %1887, i32 14
  %temp.vect4234 = insertelement <16 x double> %temp.vect4233, double %1888, i32 15
  %1889 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1890 = load i64* %1889, align 8
  %1891 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1892 = load i64* %1891, align 8
  %1893 = add i64 %1890, %1892
  %extract4202 = add i64 %1893, 12496896
  %1894 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract4202
  %ptrTypeCast4218 = bitcast double addrspace(1)* %1894 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect4234, <16 x double> addrspace(1)* %ptrTypeCast4218, align 8
  %1895 = fadd <16 x double> %1708, <double 0x4033C5770E545699, double 0x4033C5770E545699, double 0x4033C5770E545699, double 0x4033C5770E545699, double 0x4033C5770E545699, double 0x4033C5770E545699, double 0x4033C5770E545699, double 0x4033C5770E545699, double 0x4033C5770E545699, double 0x4033C5770E545699, double 0x4033C5770E545699, double 0x4033C5770E545699, double 0x4033C5770E545699, double 0x4033C5770E545699, double 0x4033C5770E545699, double 0x4033C5770E545699>
  %1896 = fmul <16 x double> %24, <double 0x40D234D20902DE01, double 0x40D234D20902DE01, double 0x40D234D20902DE01, double 0x40D234D20902DE01, double 0x40D234D20902DE01, double 0x40D234D20902DE01, double 0x40D234D20902DE01, double 0x40D234D20902DE01, double 0x40D234D20902DE01, double 0x40D234D20902DE01, double 0x40D234D20902DE01, double 0x40D234D20902DE01, double 0x40D234D20902DE01, double 0x40D234D20902DE01, double 0x40D234D20902DE01, double 0x40D234D20902DE01>
  %1897 = fsub <16 x double> %1895, %1896
  %extract4235 = extractelement <16 x double> %1897, i32 0
  %extract4236 = extractelement <16 x double> %1897, i32 1
  %extract4237 = extractelement <16 x double> %1897, i32 2
  %extract4238 = extractelement <16 x double> %1897, i32 3
  %extract4239 = extractelement <16 x double> %1897, i32 4
  %extract4240 = extractelement <16 x double> %1897, i32 5
  %extract4241 = extractelement <16 x double> %1897, i32 6
  %extract4242 = extractelement <16 x double> %1897, i32 7
  %extract4243 = extractelement <16 x double> %1897, i32 8
  %extract4244 = extractelement <16 x double> %1897, i32 9
  %extract4245 = extractelement <16 x double> %1897, i32 10
  %extract4246 = extractelement <16 x double> %1897, i32 11
  %extract4247 = extractelement <16 x double> %1897, i32 12
  %extract4248 = extractelement <16 x double> %1897, i32 13
  %extract4249 = extractelement <16 x double> %1897, i32 14
  %extract4250 = extractelement <16 x double> %1897, i32 15
  %1898 = tail call double @_Z3expd(double %extract4235) nounwind
  %1899 = tail call double @_Z3expd(double %extract4236) nounwind
  %1900 = tail call double @_Z3expd(double %extract4237) nounwind
  %1901 = tail call double @_Z3expd(double %extract4238) nounwind
  %1902 = tail call double @_Z3expd(double %extract4239) nounwind
  %1903 = tail call double @_Z3expd(double %extract4240) nounwind
  %1904 = tail call double @_Z3expd(double %extract4241) nounwind
  %1905 = tail call double @_Z3expd(double %extract4242) nounwind
  %1906 = tail call double @_Z3expd(double %extract4243) nounwind
  %1907 = tail call double @_Z3expd(double %extract4244) nounwind
  %1908 = tail call double @_Z3expd(double %extract4245) nounwind
  %1909 = tail call double @_Z3expd(double %extract4246) nounwind
  %1910 = tail call double @_Z3expd(double %extract4247) nounwind
  %1911 = tail call double @_Z3expd(double %extract4248) nounwind
  %1912 = tail call double @_Z3expd(double %extract4249) nounwind
  %1913 = tail call double @_Z3expd(double %extract4250) nounwind
  %temp.vect4270 = insertelement <16 x double> undef, double %1898, i32 0
  %temp.vect4271 = insertelement <16 x double> %temp.vect4270, double %1899, i32 1
  %temp.vect4272 = insertelement <16 x double> %temp.vect4271, double %1900, i32 2
  %temp.vect4273 = insertelement <16 x double> %temp.vect4272, double %1901, i32 3
  %temp.vect4274 = insertelement <16 x double> %temp.vect4273, double %1902, i32 4
  %temp.vect4275 = insertelement <16 x double> %temp.vect4274, double %1903, i32 5
  %temp.vect4276 = insertelement <16 x double> %temp.vect4275, double %1904, i32 6
  %temp.vect4277 = insertelement <16 x double> %temp.vect4276, double %1905, i32 7
  %temp.vect4278 = insertelement <16 x double> %temp.vect4277, double %1906, i32 8
  %temp.vect4279 = insertelement <16 x double> %temp.vect4278, double %1907, i32 9
  %temp.vect4280 = insertelement <16 x double> %temp.vect4279, double %1908, i32 10
  %temp.vect4281 = insertelement <16 x double> %temp.vect4280, double %1909, i32 11
  %temp.vect4282 = insertelement <16 x double> %temp.vect4281, double %1910, i32 12
  %temp.vect4283 = insertelement <16 x double> %temp.vect4282, double %1911, i32 13
  %temp.vect4284 = insertelement <16 x double> %temp.vect4283, double %1912, i32 14
  %temp.vect4285 = insertelement <16 x double> %temp.vect4284, double %1913, i32 15
  %1914 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1915 = load i64* %1914, align 8
  %1916 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1917 = load i64* %1916, align 8
  %1918 = add i64 %1915, %1917
  %extract4253 = add i64 %1918, 12607488
  %1919 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract4253
  %ptrTypeCast4269 = bitcast double addrspace(1)* %1919 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect4285, <16 x double> addrspace(1)* %ptrTypeCast4269, align 8
  %1920 = fmul <16 x double> %24, <double 0x408DE0E4B2B777D1, double 0x408DE0E4B2B777D1, double 0x408DE0E4B2B777D1, double 0x408DE0E4B2B777D1, double 0x408DE0E4B2B777D1, double 0x408DE0E4B2B777D1, double 0x408DE0E4B2B777D1, double 0x408DE0E4B2B777D1, double 0x408DE0E4B2B777D1, double 0x408DE0E4B2B777D1, double 0x408DE0E4B2B777D1, double 0x408DE0E4B2B777D1, double 0x408DE0E4B2B777D1, double 0x408DE0E4B2B777D1, double 0x408DE0E4B2B777D1, double 0x408DE0E4B2B777D1>
  %1921 = fsub <16 x double> %481, %1920
  %extract4286 = extractelement <16 x double> %1921, i32 0
  %extract4287 = extractelement <16 x double> %1921, i32 1
  %extract4288 = extractelement <16 x double> %1921, i32 2
  %extract4289 = extractelement <16 x double> %1921, i32 3
  %extract4290 = extractelement <16 x double> %1921, i32 4
  %extract4291 = extractelement <16 x double> %1921, i32 5
  %extract4292 = extractelement <16 x double> %1921, i32 6
  %extract4293 = extractelement <16 x double> %1921, i32 7
  %extract4294 = extractelement <16 x double> %1921, i32 8
  %extract4295 = extractelement <16 x double> %1921, i32 9
  %extract4296 = extractelement <16 x double> %1921, i32 10
  %extract4297 = extractelement <16 x double> %1921, i32 11
  %extract4298 = extractelement <16 x double> %1921, i32 12
  %extract4299 = extractelement <16 x double> %1921, i32 13
  %extract4300 = extractelement <16 x double> %1921, i32 14
  %extract4301 = extractelement <16 x double> %1921, i32 15
  %1922 = tail call double @_Z3expd(double %extract4286) nounwind
  %1923 = tail call double @_Z3expd(double %extract4287) nounwind
  %1924 = tail call double @_Z3expd(double %extract4288) nounwind
  %1925 = tail call double @_Z3expd(double %extract4289) nounwind
  %1926 = tail call double @_Z3expd(double %extract4290) nounwind
  %1927 = tail call double @_Z3expd(double %extract4291) nounwind
  %1928 = tail call double @_Z3expd(double %extract4292) nounwind
  %1929 = tail call double @_Z3expd(double %extract4293) nounwind
  %1930 = tail call double @_Z3expd(double %extract4294) nounwind
  %1931 = tail call double @_Z3expd(double %extract4295) nounwind
  %1932 = tail call double @_Z3expd(double %extract4296) nounwind
  %1933 = tail call double @_Z3expd(double %extract4297) nounwind
  %1934 = tail call double @_Z3expd(double %extract4298) nounwind
  %1935 = tail call double @_Z3expd(double %extract4299) nounwind
  %1936 = tail call double @_Z3expd(double %extract4300) nounwind
  %1937 = tail call double @_Z3expd(double %extract4301) nounwind
  %temp.vect4302 = insertelement <16 x double> undef, double %1922, i32 0
  %temp.vect4303 = insertelement <16 x double> %temp.vect4302, double %1923, i32 1
  %temp.vect4304 = insertelement <16 x double> %temp.vect4303, double %1924, i32 2
  %temp.vect4305 = insertelement <16 x double> %temp.vect4304, double %1925, i32 3
  %temp.vect4306 = insertelement <16 x double> %temp.vect4305, double %1926, i32 4
  %temp.vect4307 = insertelement <16 x double> %temp.vect4306, double %1927, i32 5
  %temp.vect4308 = insertelement <16 x double> %temp.vect4307, double %1928, i32 6
  %temp.vect4309 = insertelement <16 x double> %temp.vect4308, double %1929, i32 7
  %temp.vect4310 = insertelement <16 x double> %temp.vect4309, double %1930, i32 8
  %temp.vect4311 = insertelement <16 x double> %temp.vect4310, double %1931, i32 9
  %temp.vect4312 = insertelement <16 x double> %temp.vect4311, double %1932, i32 10
  %temp.vect4313 = insertelement <16 x double> %temp.vect4312, double %1933, i32 11
  %temp.vect4314 = insertelement <16 x double> %temp.vect4313, double %1934, i32 12
  %temp.vect4315 = insertelement <16 x double> %temp.vect4314, double %1935, i32 13
  %temp.vect4316 = insertelement <16 x double> %temp.vect4315, double %1936, i32 14
  %temp.vect4317 = insertelement <16 x double> %temp.vect4316, double %1937, i32 15
  %1938 = fmul <16 x double> %temp.vect4317, <double 1.632000e+07, double 1.632000e+07, double 1.632000e+07, double 1.632000e+07, double 1.632000e+07, double 1.632000e+07, double 1.632000e+07, double 1.632000e+07, double 1.632000e+07, double 1.632000e+07, double 1.632000e+07, double 1.632000e+07, double 1.632000e+07, double 1.632000e+07, double 1.632000e+07, double 1.632000e+07>
  %1939 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1940 = load i64* %1939, align 8
  %1941 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1942 = load i64* %1941, align 8
  %1943 = add i64 %1940, %1942
  %extract4320 = add i64 %1943, 12718080
  %1944 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract4320
  %ptrTypeCast4336 = bitcast double addrspace(1)* %1944 to <16 x double> addrspace(1)*
  store <16 x double> %1938, <16 x double> addrspace(1)* %ptrTypeCast4336, align 8
  %1945 = fmul <16 x double> %temp.vect4317, <double 4.080000e+06, double 4.080000e+06, double 4.080000e+06, double 4.080000e+06, double 4.080000e+06, double 4.080000e+06, double 4.080000e+06, double 4.080000e+06, double 4.080000e+06, double 4.080000e+06, double 4.080000e+06, double 4.080000e+06, double 4.080000e+06, double 4.080000e+06, double 4.080000e+06, double 4.080000e+06>
  %1946 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1947 = load i64* %1946, align 8
  %1948 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1949 = load i64* %1948, align 8
  %1950 = add i64 %1947, %1949
  %extract4339 = add i64 %1950, 12828672
  %1951 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract4339
  %ptrTypeCast4355 = bitcast double addrspace(1)* %1951 to <16 x double> addrspace(1)*
  store <16 x double> %1945, <16 x double> addrspace(1)* %ptrTypeCast4355, align 8
  %1952 = fmul <16 x double> %temp.vect97, <double 4.500000e+00, double 4.500000e+00, double 4.500000e+00, double 4.500000e+00, double 4.500000e+00, double 4.500000e+00, double 4.500000e+00, double 4.500000e+00, double 4.500000e+00, double 4.500000e+00, double 4.500000e+00, double 4.500000e+00, double 4.500000e+00, double 4.500000e+00, double 4.500000e+00, double 4.500000e+00>
  %1953 = fadd <16 x double> %1952, <double 0xC020DCAE10492360, double 0xC020DCAE10492360, double 0xC020DCAE10492360, double 0xC020DCAE10492360, double 0xC020DCAE10492360, double 0xC020DCAE10492360, double 0xC020DCAE10492360, double 0xC020DCAE10492360, double 0xC020DCAE10492360, double 0xC020DCAE10492360, double 0xC020DCAE10492360, double 0xC020DCAE10492360, double 0xC020DCAE10492360, double 0xC020DCAE10492360, double 0xC020DCAE10492360, double 0xC020DCAE10492360>
  %1954 = fmul <16 x double> %24, <double 0x407F737778DD6170, double 0x407F737778DD6170, double 0x407F737778DD6170, double 0x407F737778DD6170, double 0x407F737778DD6170, double 0x407F737778DD6170, double 0x407F737778DD6170, double 0x407F737778DD6170, double 0x407F737778DD6170, double 0x407F737778DD6170, double 0x407F737778DD6170, double 0x407F737778DD6170, double 0x407F737778DD6170, double 0x407F737778DD6170, double 0x407F737778DD6170, double 0x407F737778DD6170>
  %1955 = fadd <16 x double> %1953, %1954
  %extract4356 = extractelement <16 x double> %1955, i32 0
  %extract4357 = extractelement <16 x double> %1955, i32 1
  %extract4358 = extractelement <16 x double> %1955, i32 2
  %extract4359 = extractelement <16 x double> %1955, i32 3
  %extract4360 = extractelement <16 x double> %1955, i32 4
  %extract4361 = extractelement <16 x double> %1955, i32 5
  %extract4362 = extractelement <16 x double> %1955, i32 6
  %extract4363 = extractelement <16 x double> %1955, i32 7
  %extract4364 = extractelement <16 x double> %1955, i32 8
  %extract4365 = extractelement <16 x double> %1955, i32 9
  %extract4366 = extractelement <16 x double> %1955, i32 10
  %extract4367 = extractelement <16 x double> %1955, i32 11
  %extract4368 = extractelement <16 x double> %1955, i32 12
  %extract4369 = extractelement <16 x double> %1955, i32 13
  %extract4370 = extractelement <16 x double> %1955, i32 14
  %extract4371 = extractelement <16 x double> %1955, i32 15
  %1956 = tail call double @_Z3expd(double %extract4356) nounwind
  %1957 = tail call double @_Z3expd(double %extract4357) nounwind
  %1958 = tail call double @_Z3expd(double %extract4358) nounwind
  %1959 = tail call double @_Z3expd(double %extract4359) nounwind
  %1960 = tail call double @_Z3expd(double %extract4360) nounwind
  %1961 = tail call double @_Z3expd(double %extract4361) nounwind
  %1962 = tail call double @_Z3expd(double %extract4362) nounwind
  %1963 = tail call double @_Z3expd(double %extract4363) nounwind
  %1964 = tail call double @_Z3expd(double %extract4364) nounwind
  %1965 = tail call double @_Z3expd(double %extract4365) nounwind
  %1966 = tail call double @_Z3expd(double %extract4366) nounwind
  %1967 = tail call double @_Z3expd(double %extract4367) nounwind
  %1968 = tail call double @_Z3expd(double %extract4368) nounwind
  %1969 = tail call double @_Z3expd(double %extract4369) nounwind
  %1970 = tail call double @_Z3expd(double %extract4370) nounwind
  %1971 = tail call double @_Z3expd(double %extract4371) nounwind
  %temp.vect4391 = insertelement <16 x double> undef, double %1956, i32 0
  %temp.vect4392 = insertelement <16 x double> %temp.vect4391, double %1957, i32 1
  %temp.vect4393 = insertelement <16 x double> %temp.vect4392, double %1958, i32 2
  %temp.vect4394 = insertelement <16 x double> %temp.vect4393, double %1959, i32 3
  %temp.vect4395 = insertelement <16 x double> %temp.vect4394, double %1960, i32 4
  %temp.vect4396 = insertelement <16 x double> %temp.vect4395, double %1961, i32 5
  %temp.vect4397 = insertelement <16 x double> %temp.vect4396, double %1962, i32 6
  %temp.vect4398 = insertelement <16 x double> %temp.vect4397, double %1963, i32 7
  %temp.vect4399 = insertelement <16 x double> %temp.vect4398, double %1964, i32 8
  %temp.vect4400 = insertelement <16 x double> %temp.vect4399, double %1965, i32 9
  %temp.vect4401 = insertelement <16 x double> %temp.vect4400, double %1966, i32 10
  %temp.vect4402 = insertelement <16 x double> %temp.vect4401, double %1967, i32 11
  %temp.vect4403 = insertelement <16 x double> %temp.vect4402, double %1968, i32 12
  %temp.vect4404 = insertelement <16 x double> %temp.vect4403, double %1969, i32 13
  %temp.vect4405 = insertelement <16 x double> %temp.vect4404, double %1970, i32 14
  %temp.vect4406 = insertelement <16 x double> %temp.vect4405, double %1971, i32 15
  %1972 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1973 = load i64* %1972, align 8
  %1974 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %1975 = load i64* %1974, align 8
  %1976 = add i64 %1973, %1975
  %extract4374 = add i64 %1976, 12939264
  %1977 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract4374
  %ptrTypeCast4390 = bitcast double addrspace(1)* %1977 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect4406, <16 x double> addrspace(1)* %ptrTypeCast4390, align 8
  %1978 = fmul <16 x double> %temp.vect97, <double 4.000000e+00, double 4.000000e+00, double 4.000000e+00, double 4.000000e+00, double 4.000000e+00, double 4.000000e+00, double 4.000000e+00, double 4.000000e+00, double 4.000000e+00, double 4.000000e+00, double 4.000000e+00, double 4.000000e+00, double 4.000000e+00, double 4.000000e+00, double 4.000000e+00, double 4.000000e+00>
  %1979 = fadd <16 x double> %1978, <double 0xC01E8ABEE9B53AE0, double 0xC01E8ABEE9B53AE0, double 0xC01E8ABEE9B53AE0, double 0xC01E8ABEE9B53AE0, double 0xC01E8ABEE9B53AE0, double 0xC01E8ABEE9B53AE0, double 0xC01E8ABEE9B53AE0, double 0xC01E8ABEE9B53AE0, double 0xC01E8ABEE9B53AE0, double 0xC01E8ABEE9B53AE0, double 0xC01E8ABEE9B53AE0, double 0xC01E8ABEE9B53AE0, double 0xC01E8ABEE9B53AE0, double 0xC01E8ABEE9B53AE0, double 0xC01E8ABEE9B53AE0, double 0xC01E8ABEE9B53AE0>
  %1980 = fmul <16 x double> %24, <double 0x408F73777AF64064, double 0x408F73777AF64064, double 0x408F73777AF64064, double 0x408F73777AF64064, double 0x408F73777AF64064, double 0x408F73777AF64064, double 0x408F73777AF64064, double 0x408F73777AF64064, double 0x408F73777AF64064, double 0x408F73777AF64064, double 0x408F73777AF64064, double 0x408F73777AF64064, double 0x408F73777AF64064, double 0x408F73777AF64064, double 0x408F73777AF64064, double 0x408F73777AF64064>
  %1981 = fadd <16 x double> %1979, %1980
  %extract4407 = extractelement <16 x double> %1981, i32 0
  %extract4408 = extractelement <16 x double> %1981, i32 1
  %extract4409 = extractelement <16 x double> %1981, i32 2
  %extract4410 = extractelement <16 x double> %1981, i32 3
  %extract4411 = extractelement <16 x double> %1981, i32 4
  %extract4412 = extractelement <16 x double> %1981, i32 5
  %extract4413 = extractelement <16 x double> %1981, i32 6
  %extract4414 = extractelement <16 x double> %1981, i32 7
  %extract4415 = extractelement <16 x double> %1981, i32 8
  %extract4416 = extractelement <16 x double> %1981, i32 9
  %extract4417 = extractelement <16 x double> %1981, i32 10
  %extract4418 = extractelement <16 x double> %1981, i32 11
  %extract4419 = extractelement <16 x double> %1981, i32 12
  %extract4420 = extractelement <16 x double> %1981, i32 13
  %extract4421 = extractelement <16 x double> %1981, i32 14
  %extract4422 = extractelement <16 x double> %1981, i32 15
  %1982 = tail call double @_Z3expd(double %extract4407) nounwind
  %1983 = tail call double @_Z3expd(double %extract4408) nounwind
  %1984 = tail call double @_Z3expd(double %extract4409) nounwind
  %1985 = tail call double @_Z3expd(double %extract4410) nounwind
  %1986 = tail call double @_Z3expd(double %extract4411) nounwind
  %1987 = tail call double @_Z3expd(double %extract4412) nounwind
  %1988 = tail call double @_Z3expd(double %extract4413) nounwind
  %1989 = tail call double @_Z3expd(double %extract4414) nounwind
  %1990 = tail call double @_Z3expd(double %extract4415) nounwind
  %1991 = tail call double @_Z3expd(double %extract4416) nounwind
  %1992 = tail call double @_Z3expd(double %extract4417) nounwind
  %1993 = tail call double @_Z3expd(double %extract4418) nounwind
  %1994 = tail call double @_Z3expd(double %extract4419) nounwind
  %1995 = tail call double @_Z3expd(double %extract4420) nounwind
  %1996 = tail call double @_Z3expd(double %extract4421) nounwind
  %1997 = tail call double @_Z3expd(double %extract4422) nounwind
  %temp.vect4442 = insertelement <16 x double> undef, double %1982, i32 0
  %temp.vect4443 = insertelement <16 x double> %temp.vect4442, double %1983, i32 1
  %temp.vect4444 = insertelement <16 x double> %temp.vect4443, double %1984, i32 2
  %temp.vect4445 = insertelement <16 x double> %temp.vect4444, double %1985, i32 3
  %temp.vect4446 = insertelement <16 x double> %temp.vect4445, double %1986, i32 4
  %temp.vect4447 = insertelement <16 x double> %temp.vect4446, double %1987, i32 5
  %temp.vect4448 = insertelement <16 x double> %temp.vect4447, double %1988, i32 6
  %temp.vect4449 = insertelement <16 x double> %temp.vect4448, double %1989, i32 7
  %temp.vect4450 = insertelement <16 x double> %temp.vect4449, double %1990, i32 8
  %temp.vect4451 = insertelement <16 x double> %temp.vect4450, double %1991, i32 9
  %temp.vect4452 = insertelement <16 x double> %temp.vect4451, double %1992, i32 10
  %temp.vect4453 = insertelement <16 x double> %temp.vect4452, double %1993, i32 11
  %temp.vect4454 = insertelement <16 x double> %temp.vect4453, double %1994, i32 12
  %temp.vect4455 = insertelement <16 x double> %temp.vect4454, double %1995, i32 13
  %temp.vect4456 = insertelement <16 x double> %temp.vect4455, double %1996, i32 14
  %temp.vect4457 = insertelement <16 x double> %temp.vect4456, double %1997, i32 15
  %1998 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1999 = load i64* %1998, align 8
  %2000 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2001 = load i64* %2000, align 8
  %2002 = add i64 %1999, %2001
  %extract4425 = add i64 %2002, 13049856
  %2003 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract4425
  %ptrTypeCast4441 = bitcast double addrspace(1)* %2003 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect4457, <16 x double> addrspace(1)* %ptrTypeCast4441, align 8
  %2004 = fadd <16 x double> %481, <double 0x40301E3B85114C59, double 0x40301E3B85114C59, double 0x40301E3B85114C59, double 0x40301E3B85114C59, double 0x40301E3B85114C59, double 0x40301E3B85114C59, double 0x40301E3B85114C59, double 0x40301E3B85114C59, double 0x40301E3B85114C59, double 0x40301E3B85114C59, double 0x40301E3B85114C59, double 0x40301E3B85114C59, double 0x40301E3B85114C59, double 0x40301E3B85114C59, double 0x40301E3B85114C59, double 0x40301E3B85114C59>
  %2005 = fmul <16 x double> %24, <double 0x40A796999AE924F2, double 0x40A796999AE924F2, double 0x40A796999AE924F2, double 0x40A796999AE924F2, double 0x40A796999AE924F2, double 0x40A796999AE924F2, double 0x40A796999AE924F2, double 0x40A796999AE924F2, double 0x40A796999AE924F2, double 0x40A796999AE924F2, double 0x40A796999AE924F2, double 0x40A796999AE924F2, double 0x40A796999AE924F2, double 0x40A796999AE924F2, double 0x40A796999AE924F2, double 0x40A796999AE924F2>
  %2006 = fsub <16 x double> %2004, %2005
  %extract4458 = extractelement <16 x double> %2006, i32 0
  %extract4459 = extractelement <16 x double> %2006, i32 1
  %extract4460 = extractelement <16 x double> %2006, i32 2
  %extract4461 = extractelement <16 x double> %2006, i32 3
  %extract4462 = extractelement <16 x double> %2006, i32 4
  %extract4463 = extractelement <16 x double> %2006, i32 5
  %extract4464 = extractelement <16 x double> %2006, i32 6
  %extract4465 = extractelement <16 x double> %2006, i32 7
  %extract4466 = extractelement <16 x double> %2006, i32 8
  %extract4467 = extractelement <16 x double> %2006, i32 9
  %extract4468 = extractelement <16 x double> %2006, i32 10
  %extract4469 = extractelement <16 x double> %2006, i32 11
  %extract4470 = extractelement <16 x double> %2006, i32 12
  %extract4471 = extractelement <16 x double> %2006, i32 13
  %extract4472 = extractelement <16 x double> %2006, i32 14
  %extract4473 = extractelement <16 x double> %2006, i32 15
  %2007 = tail call double @_Z3expd(double %extract4458) nounwind
  %2008 = tail call double @_Z3expd(double %extract4459) nounwind
  %2009 = tail call double @_Z3expd(double %extract4460) nounwind
  %2010 = tail call double @_Z3expd(double %extract4461) nounwind
  %2011 = tail call double @_Z3expd(double %extract4462) nounwind
  %2012 = tail call double @_Z3expd(double %extract4463) nounwind
  %2013 = tail call double @_Z3expd(double %extract4464) nounwind
  %2014 = tail call double @_Z3expd(double %extract4465) nounwind
  %2015 = tail call double @_Z3expd(double %extract4466) nounwind
  %2016 = tail call double @_Z3expd(double %extract4467) nounwind
  %2017 = tail call double @_Z3expd(double %extract4468) nounwind
  %2018 = tail call double @_Z3expd(double %extract4469) nounwind
  %2019 = tail call double @_Z3expd(double %extract4470) nounwind
  %2020 = tail call double @_Z3expd(double %extract4471) nounwind
  %2021 = tail call double @_Z3expd(double %extract4472) nounwind
  %2022 = tail call double @_Z3expd(double %extract4473) nounwind
  %temp.vect4493 = insertelement <16 x double> undef, double %2007, i32 0
  %temp.vect4494 = insertelement <16 x double> %temp.vect4493, double %2008, i32 1
  %temp.vect4495 = insertelement <16 x double> %temp.vect4494, double %2009, i32 2
  %temp.vect4496 = insertelement <16 x double> %temp.vect4495, double %2010, i32 3
  %temp.vect4497 = insertelement <16 x double> %temp.vect4496, double %2011, i32 4
  %temp.vect4498 = insertelement <16 x double> %temp.vect4497, double %2012, i32 5
  %temp.vect4499 = insertelement <16 x double> %temp.vect4498, double %2013, i32 6
  %temp.vect4500 = insertelement <16 x double> %temp.vect4499, double %2014, i32 7
  %temp.vect4501 = insertelement <16 x double> %temp.vect4500, double %2015, i32 8
  %temp.vect4502 = insertelement <16 x double> %temp.vect4501, double %2016, i32 9
  %temp.vect4503 = insertelement <16 x double> %temp.vect4502, double %2017, i32 10
  %temp.vect4504 = insertelement <16 x double> %temp.vect4503, double %2018, i32 11
  %temp.vect4505 = insertelement <16 x double> %temp.vect4504, double %2019, i32 12
  %temp.vect4506 = insertelement <16 x double> %temp.vect4505, double %2020, i32 13
  %temp.vect4507 = insertelement <16 x double> %temp.vect4506, double %2021, i32 14
  %temp.vect4508 = insertelement <16 x double> %temp.vect4507, double %2022, i32 15
  %2023 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2024 = load i64* %2023, align 8
  %2025 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2026 = load i64* %2025, align 8
  %2027 = add i64 %2024, %2026
  %extract4476 = add i64 %2027, 13160448
  %2028 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract4476
  %ptrTypeCast4492 = bitcast double addrspace(1)* %2028 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect4508, <16 x double> addrspace(1)* %ptrTypeCast4492, align 8
  %2029 = fmul <16 x double> %temp.vect97, <double 1.182000e+01, double 1.182000e+01, double 1.182000e+01, double 1.182000e+01, double 1.182000e+01, double 1.182000e+01, double 1.182000e+01, double 1.182000e+01, double 1.182000e+01, double 1.182000e+01, double 1.182000e+01, double 1.182000e+01, double 1.182000e+01, double 1.182000e+01, double 1.182000e+01, double 1.182000e+01>
  %2030 = fsub <16 x double> <double 0x405FDB8F8E7DDCA5, double 0x405FDB8F8E7DDCA5, double 0x405FDB8F8E7DDCA5, double 0x405FDB8F8E7DDCA5, double 0x405FDB8F8E7DDCA5, double 0x405FDB8F8E7DDCA5, double 0x405FDB8F8E7DDCA5, double 0x405FDB8F8E7DDCA5, double 0x405FDB8F8E7DDCA5, double 0x405FDB8F8E7DDCA5, double 0x405FDB8F8E7DDCA5, double 0x405FDB8F8E7DDCA5, double 0x405FDB8F8E7DDCA5, double 0x405FDB8F8E7DDCA5, double 0x405FDB8F8E7DDCA5, double 0x405FDB8F8E7DDCA5>, %2029
  %2031 = fmul <16 x double> %24, <double 0x40D18EFB9DB22D0E, double 0x40D18EFB9DB22D0E, double 0x40D18EFB9DB22D0E, double 0x40D18EFB9DB22D0E, double 0x40D18EFB9DB22D0E, double 0x40D18EFB9DB22D0E, double 0x40D18EFB9DB22D0E, double 0x40D18EFB9DB22D0E, double 0x40D18EFB9DB22D0E, double 0x40D18EFB9DB22D0E, double 0x40D18EFB9DB22D0E, double 0x40D18EFB9DB22D0E, double 0x40D18EFB9DB22D0E, double 0x40D18EFB9DB22D0E, double 0x40D18EFB9DB22D0E, double 0x40D18EFB9DB22D0E>
  %2032 = fsub <16 x double> %2030, %2031
  %extract4509 = extractelement <16 x double> %2032, i32 0
  %extract4510 = extractelement <16 x double> %2032, i32 1
  %extract4511 = extractelement <16 x double> %2032, i32 2
  %extract4512 = extractelement <16 x double> %2032, i32 3
  %extract4513 = extractelement <16 x double> %2032, i32 4
  %extract4514 = extractelement <16 x double> %2032, i32 5
  %extract4515 = extractelement <16 x double> %2032, i32 6
  %extract4516 = extractelement <16 x double> %2032, i32 7
  %extract4517 = extractelement <16 x double> %2032, i32 8
  %extract4518 = extractelement <16 x double> %2032, i32 9
  %extract4519 = extractelement <16 x double> %2032, i32 10
  %extract4520 = extractelement <16 x double> %2032, i32 11
  %extract4521 = extractelement <16 x double> %2032, i32 12
  %extract4522 = extractelement <16 x double> %2032, i32 13
  %extract4523 = extractelement <16 x double> %2032, i32 14
  %extract4524 = extractelement <16 x double> %2032, i32 15
  %2033 = tail call double @_Z3expd(double %extract4509) nounwind
  %2034 = tail call double @_Z3expd(double %extract4510) nounwind
  %2035 = tail call double @_Z3expd(double %extract4511) nounwind
  %2036 = tail call double @_Z3expd(double %extract4512) nounwind
  %2037 = tail call double @_Z3expd(double %extract4513) nounwind
  %2038 = tail call double @_Z3expd(double %extract4514) nounwind
  %2039 = tail call double @_Z3expd(double %extract4515) nounwind
  %2040 = tail call double @_Z3expd(double %extract4516) nounwind
  %2041 = tail call double @_Z3expd(double %extract4517) nounwind
  %2042 = tail call double @_Z3expd(double %extract4518) nounwind
  %2043 = tail call double @_Z3expd(double %extract4519) nounwind
  %2044 = tail call double @_Z3expd(double %extract4520) nounwind
  %2045 = tail call double @_Z3expd(double %extract4521) nounwind
  %2046 = tail call double @_Z3expd(double %extract4522) nounwind
  %2047 = tail call double @_Z3expd(double %extract4523) nounwind
  %2048 = tail call double @_Z3expd(double %extract4524) nounwind
  %temp.vect4544 = insertelement <16 x double> undef, double %2033, i32 0
  %temp.vect4545 = insertelement <16 x double> %temp.vect4544, double %2034, i32 1
  %temp.vect4546 = insertelement <16 x double> %temp.vect4545, double %2035, i32 2
  %temp.vect4547 = insertelement <16 x double> %temp.vect4546, double %2036, i32 3
  %temp.vect4548 = insertelement <16 x double> %temp.vect4547, double %2037, i32 4
  %temp.vect4549 = insertelement <16 x double> %temp.vect4548, double %2038, i32 5
  %temp.vect4550 = insertelement <16 x double> %temp.vect4549, double %2039, i32 6
  %temp.vect4551 = insertelement <16 x double> %temp.vect4550, double %2040, i32 7
  %temp.vect4552 = insertelement <16 x double> %temp.vect4551, double %2041, i32 8
  %temp.vect4553 = insertelement <16 x double> %temp.vect4552, double %2042, i32 9
  %temp.vect4554 = insertelement <16 x double> %temp.vect4553, double %2043, i32 10
  %temp.vect4555 = insertelement <16 x double> %temp.vect4554, double %2044, i32 11
  %temp.vect4556 = insertelement <16 x double> %temp.vect4555, double %2045, i32 12
  %temp.vect4557 = insertelement <16 x double> %temp.vect4556, double %2046, i32 13
  %temp.vect4558 = insertelement <16 x double> %temp.vect4557, double %2047, i32 14
  %temp.vect4559 = insertelement <16 x double> %temp.vect4558, double %2048, i32 15
  %2049 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2050 = load i64* %2049, align 8
  %2051 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2052 = load i64* %2051, align 8
  %2053 = add i64 %2050, %2052
  %extract4527 = add i64 %2053, 13271040
  %2054 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract4527
  %ptrTypeCast4543 = bitcast double addrspace(1)* %2054 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect4559, <16 x double> addrspace(1)* %ptrTypeCast4543, align 8
  %2055 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2056 = load i64* %2055, align 8
  %2057 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2058 = load i64* %2057, align 8
  %2059 = add i64 %2056, %2058
  %extract4562 = add i64 %2059, 13381632
  %2060 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract4562
  %ptrTypeCast4578 = bitcast double addrspace(1)* %2060 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14>, <16 x double> addrspace(1)* %ptrTypeCast4578, align 8
  %2061 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2062 = load i64* %2061, align 8
  %2063 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2064 = load i64* %2063, align 8
  %2065 = add i64 %2062, %2064
  %extract4581 = add i64 %2065, 13492224
  %2066 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract4581
  %ptrTypeCast4597 = bitcast double addrspace(1)* %2066 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14>, <16 x double> addrspace(1)* %ptrTypeCast4597, align 8
  %2067 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2068 = load i64* %2067, align 8
  %2069 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2070 = load i64* %2069, align 8
  %2071 = add i64 %2068, %2070
  %extract4600 = add i64 %2071, 13602816
  %2072 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract4600
  %ptrTypeCast4616 = bitcast double addrspace(1)* %2072 to <16 x double> addrspace(1)*
  store <16 x double> <double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast4616, align 8
  %2073 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2074 = load i64* %2073, align 8
  %2075 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2076 = load i64* %2075, align 8
  %2077 = add i64 %2074, %2076
  %extract4619 = add i64 %2077, 13713408
  %2078 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract4619
  %ptrTypeCast4635 = bitcast double addrspace(1)* %2078 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast4635, align 8
  %2079 = fmul <16 x double> %temp.vect97, <double 6.000000e-02, double 6.000000e-02, double 6.000000e-02, double 6.000000e-02, double 6.000000e-02, double 6.000000e-02, double 6.000000e-02, double 6.000000e-02, double 6.000000e-02, double 6.000000e-02, double 6.000000e-02, double 6.000000e-02, double 6.000000e-02, double 6.000000e-02, double 6.000000e-02, double 6.000000e-02>
  %2080 = fsub <16 x double> <double 0x4040B70DF8104776, double 0x4040B70DF8104776, double 0x4040B70DF8104776, double 0x4040B70DF8104776, double 0x4040B70DF8104776, double 0x4040B70DF8104776, double 0x4040B70DF8104776, double 0x4040B70DF8104776, double 0x4040B70DF8104776, double 0x4040B70DF8104776, double 0x4040B70DF8104776, double 0x4040B70DF8104776, double 0x4040B70DF8104776, double 0x4040B70DF8104776, double 0x4040B70DF8104776, double 0x4040B70DF8104776>, %2079
  %2081 = fmul <16 x double> %24, <double 0x40B0B55777AF6406, double 0x40B0B55777AF6406, double 0x40B0B55777AF6406, double 0x40B0B55777AF6406, double 0x40B0B55777AF6406, double 0x40B0B55777AF6406, double 0x40B0B55777AF6406, double 0x40B0B55777AF6406, double 0x40B0B55777AF6406, double 0x40B0B55777AF6406, double 0x40B0B55777AF6406, double 0x40B0B55777AF6406, double 0x40B0B55777AF6406, double 0x40B0B55777AF6406, double 0x40B0B55777AF6406, double 0x40B0B55777AF6406>
  %2082 = fsub <16 x double> %2080, %2081
  %extract4636 = extractelement <16 x double> %2082, i32 0
  %extract4637 = extractelement <16 x double> %2082, i32 1
  %extract4638 = extractelement <16 x double> %2082, i32 2
  %extract4639 = extractelement <16 x double> %2082, i32 3
  %extract4640 = extractelement <16 x double> %2082, i32 4
  %extract4641 = extractelement <16 x double> %2082, i32 5
  %extract4642 = extractelement <16 x double> %2082, i32 6
  %extract4643 = extractelement <16 x double> %2082, i32 7
  %extract4644 = extractelement <16 x double> %2082, i32 8
  %extract4645 = extractelement <16 x double> %2082, i32 9
  %extract4646 = extractelement <16 x double> %2082, i32 10
  %extract4647 = extractelement <16 x double> %2082, i32 11
  %extract4648 = extractelement <16 x double> %2082, i32 12
  %extract4649 = extractelement <16 x double> %2082, i32 13
  %extract4650 = extractelement <16 x double> %2082, i32 14
  %extract4651 = extractelement <16 x double> %2082, i32 15
  %2083 = tail call double @_Z3expd(double %extract4636) nounwind
  %2084 = tail call double @_Z3expd(double %extract4637) nounwind
  %2085 = tail call double @_Z3expd(double %extract4638) nounwind
  %2086 = tail call double @_Z3expd(double %extract4639) nounwind
  %2087 = tail call double @_Z3expd(double %extract4640) nounwind
  %2088 = tail call double @_Z3expd(double %extract4641) nounwind
  %2089 = tail call double @_Z3expd(double %extract4642) nounwind
  %2090 = tail call double @_Z3expd(double %extract4643) nounwind
  %2091 = tail call double @_Z3expd(double %extract4644) nounwind
  %2092 = tail call double @_Z3expd(double %extract4645) nounwind
  %2093 = tail call double @_Z3expd(double %extract4646) nounwind
  %2094 = tail call double @_Z3expd(double %extract4647) nounwind
  %2095 = tail call double @_Z3expd(double %extract4648) nounwind
  %2096 = tail call double @_Z3expd(double %extract4649) nounwind
  %2097 = tail call double @_Z3expd(double %extract4650) nounwind
  %2098 = tail call double @_Z3expd(double %extract4651) nounwind
  %temp.vect4671 = insertelement <16 x double> undef, double %2083, i32 0
  %temp.vect4672 = insertelement <16 x double> %temp.vect4671, double %2084, i32 1
  %temp.vect4673 = insertelement <16 x double> %temp.vect4672, double %2085, i32 2
  %temp.vect4674 = insertelement <16 x double> %temp.vect4673, double %2086, i32 3
  %temp.vect4675 = insertelement <16 x double> %temp.vect4674, double %2087, i32 4
  %temp.vect4676 = insertelement <16 x double> %temp.vect4675, double %2088, i32 5
  %temp.vect4677 = insertelement <16 x double> %temp.vect4676, double %2089, i32 6
  %temp.vect4678 = insertelement <16 x double> %temp.vect4677, double %2090, i32 7
  %temp.vect4679 = insertelement <16 x double> %temp.vect4678, double %2091, i32 8
  %temp.vect4680 = insertelement <16 x double> %temp.vect4679, double %2092, i32 9
  %temp.vect4681 = insertelement <16 x double> %temp.vect4680, double %2093, i32 10
  %temp.vect4682 = insertelement <16 x double> %temp.vect4681, double %2094, i32 11
  %temp.vect4683 = insertelement <16 x double> %temp.vect4682, double %2095, i32 12
  %temp.vect4684 = insertelement <16 x double> %temp.vect4683, double %2096, i32 13
  %temp.vect4685 = insertelement <16 x double> %temp.vect4684, double %2097, i32 14
  %temp.vect4686 = insertelement <16 x double> %temp.vect4685, double %2098, i32 15
  %2099 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2100 = load i64* %2099, align 8
  %2101 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2102 = load i64* %2101, align 8
  %2103 = add i64 %2100, %2102
  %extract4654 = add i64 %2103, 13824000
  %2104 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract4654
  %ptrTypeCast4670 = bitcast double addrspace(1)* %2104 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect4686, <16 x double> addrspace(1)* %ptrTypeCast4670, align 8
  %2105 = fmul <16 x double> %temp.vect97, <double 1.430000e+00, double 1.430000e+00, double 1.430000e+00, double 1.430000e+00, double 1.430000e+00, double 1.430000e+00, double 1.430000e+00, double 1.430000e+00, double 1.430000e+00, double 1.430000e+00, double 1.430000e+00, double 1.430000e+00, double 1.430000e+00, double 1.430000e+00, double 1.430000e+00, double 1.430000e+00>
  %2106 = fadd <16 x double> %2105, <double 0x403520F4821D7C12, double 0x403520F4821D7C12, double 0x403520F4821D7C12, double 0x403520F4821D7C12, double 0x403520F4821D7C12, double 0x403520F4821D7C12, double 0x403520F4821D7C12, double 0x403520F4821D7C12, double 0x403520F4821D7C12, double 0x403520F4821D7C12, double 0x403520F4821D7C12, double 0x403520F4821D7C12, double 0x403520F4821D7C12, double 0x403520F4821D7C12, double 0x403520F4821D7C12, double 0x403520F4821D7C12>
  %2107 = fmul <16 x double> %24, <double 0x4095269C8216C615, double 0x4095269C8216C615, double 0x4095269C8216C615, double 0x4095269C8216C615, double 0x4095269C8216C615, double 0x4095269C8216C615, double 0x4095269C8216C615, double 0x4095269C8216C615, double 0x4095269C8216C615, double 0x4095269C8216C615, double 0x4095269C8216C615, double 0x4095269C8216C615, double 0x4095269C8216C615, double 0x4095269C8216C615, double 0x4095269C8216C615, double 0x4095269C8216C615>
  %2108 = fsub <16 x double> %2106, %2107
  %extract4687 = extractelement <16 x double> %2108, i32 0
  %extract4688 = extractelement <16 x double> %2108, i32 1
  %extract4689 = extractelement <16 x double> %2108, i32 2
  %extract4690 = extractelement <16 x double> %2108, i32 3
  %extract4691 = extractelement <16 x double> %2108, i32 4
  %extract4692 = extractelement <16 x double> %2108, i32 5
  %extract4693 = extractelement <16 x double> %2108, i32 6
  %extract4694 = extractelement <16 x double> %2108, i32 7
  %extract4695 = extractelement <16 x double> %2108, i32 8
  %extract4696 = extractelement <16 x double> %2108, i32 9
  %extract4697 = extractelement <16 x double> %2108, i32 10
  %extract4698 = extractelement <16 x double> %2108, i32 11
  %extract4699 = extractelement <16 x double> %2108, i32 12
  %extract4700 = extractelement <16 x double> %2108, i32 13
  %extract4701 = extractelement <16 x double> %2108, i32 14
  %extract4702 = extractelement <16 x double> %2108, i32 15
  %2109 = tail call double @_Z3expd(double %extract4687) nounwind
  %2110 = tail call double @_Z3expd(double %extract4688) nounwind
  %2111 = tail call double @_Z3expd(double %extract4689) nounwind
  %2112 = tail call double @_Z3expd(double %extract4690) nounwind
  %2113 = tail call double @_Z3expd(double %extract4691) nounwind
  %2114 = tail call double @_Z3expd(double %extract4692) nounwind
  %2115 = tail call double @_Z3expd(double %extract4693) nounwind
  %2116 = tail call double @_Z3expd(double %extract4694) nounwind
  %2117 = tail call double @_Z3expd(double %extract4695) nounwind
  %2118 = tail call double @_Z3expd(double %extract4696) nounwind
  %2119 = tail call double @_Z3expd(double %extract4697) nounwind
  %2120 = tail call double @_Z3expd(double %extract4698) nounwind
  %2121 = tail call double @_Z3expd(double %extract4699) nounwind
  %2122 = tail call double @_Z3expd(double %extract4700) nounwind
  %2123 = tail call double @_Z3expd(double %extract4701) nounwind
  %2124 = tail call double @_Z3expd(double %extract4702) nounwind
  %temp.vect4722 = insertelement <16 x double> undef, double %2109, i32 0
  %temp.vect4723 = insertelement <16 x double> %temp.vect4722, double %2110, i32 1
  %temp.vect4724 = insertelement <16 x double> %temp.vect4723, double %2111, i32 2
  %temp.vect4725 = insertelement <16 x double> %temp.vect4724, double %2112, i32 3
  %temp.vect4726 = insertelement <16 x double> %temp.vect4725, double %2113, i32 4
  %temp.vect4727 = insertelement <16 x double> %temp.vect4726, double %2114, i32 5
  %temp.vect4728 = insertelement <16 x double> %temp.vect4727, double %2115, i32 6
  %temp.vect4729 = insertelement <16 x double> %temp.vect4728, double %2116, i32 7
  %temp.vect4730 = insertelement <16 x double> %temp.vect4729, double %2117, i32 8
  %temp.vect4731 = insertelement <16 x double> %temp.vect4730, double %2118, i32 9
  %temp.vect4732 = insertelement <16 x double> %temp.vect4731, double %2119, i32 10
  %temp.vect4733 = insertelement <16 x double> %temp.vect4732, double %2120, i32 11
  %temp.vect4734 = insertelement <16 x double> %temp.vect4733, double %2121, i32 12
  %temp.vect4735 = insertelement <16 x double> %temp.vect4734, double %2122, i32 13
  %temp.vect4736 = insertelement <16 x double> %temp.vect4735, double %2123, i32 14
  %temp.vect4737 = insertelement <16 x double> %temp.vect4736, double %2124, i32 15
  %2125 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2126 = load i64* %2125, align 8
  %2127 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2128 = load i64* %2127, align 8
  %2129 = add i64 %2126, %2128
  %extract4705 = add i64 %2129, 14045184
  %2130 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract4705
  %ptrTypeCast4721 = bitcast double addrspace(1)* %2130 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect4737, <16 x double> addrspace(1)* %ptrTypeCast4721, align 8
  %2131 = fmul <16 x double> %24, <double 0x40853ABD712A0EC7, double 0x40853ABD712A0EC7, double 0x40853ABD712A0EC7, double 0x40853ABD712A0EC7, double 0x40853ABD712A0EC7, double 0x40853ABD712A0EC7, double 0x40853ABD712A0EC7, double 0x40853ABD712A0EC7, double 0x40853ABD712A0EC7, double 0x40853ABD712A0EC7, double 0x40853ABD712A0EC7, double 0x40853ABD712A0EC7, double 0x40853ABD712A0EC7, double 0x40853ABD712A0EC7, double 0x40853ABD712A0EC7, double 0x40853ABD712A0EC7>
  %2132 = fsub <16 x double> <double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C>, %2131
  %extract4738 = extractelement <16 x double> %2132, i32 0
  %extract4739 = extractelement <16 x double> %2132, i32 1
  %extract4740 = extractelement <16 x double> %2132, i32 2
  %extract4741 = extractelement <16 x double> %2132, i32 3
  %extract4742 = extractelement <16 x double> %2132, i32 4
  %extract4743 = extractelement <16 x double> %2132, i32 5
  %extract4744 = extractelement <16 x double> %2132, i32 6
  %extract4745 = extractelement <16 x double> %2132, i32 7
  %extract4746 = extractelement <16 x double> %2132, i32 8
  %extract4747 = extractelement <16 x double> %2132, i32 9
  %extract4748 = extractelement <16 x double> %2132, i32 10
  %extract4749 = extractelement <16 x double> %2132, i32 11
  %extract4750 = extractelement <16 x double> %2132, i32 12
  %extract4751 = extractelement <16 x double> %2132, i32 13
  %extract4752 = extractelement <16 x double> %2132, i32 14
  %extract4753 = extractelement <16 x double> %2132, i32 15
  %2133 = tail call double @_Z3expd(double %extract4738) nounwind
  %2134 = tail call double @_Z3expd(double %extract4739) nounwind
  %2135 = tail call double @_Z3expd(double %extract4740) nounwind
  %2136 = tail call double @_Z3expd(double %extract4741) nounwind
  %2137 = tail call double @_Z3expd(double %extract4742) nounwind
  %2138 = tail call double @_Z3expd(double %extract4743) nounwind
  %2139 = tail call double @_Z3expd(double %extract4744) nounwind
  %2140 = tail call double @_Z3expd(double %extract4745) nounwind
  %2141 = tail call double @_Z3expd(double %extract4746) nounwind
  %2142 = tail call double @_Z3expd(double %extract4747) nounwind
  %2143 = tail call double @_Z3expd(double %extract4748) nounwind
  %2144 = tail call double @_Z3expd(double %extract4749) nounwind
  %2145 = tail call double @_Z3expd(double %extract4750) nounwind
  %2146 = tail call double @_Z3expd(double %extract4751) nounwind
  %2147 = tail call double @_Z3expd(double %extract4752) nounwind
  %2148 = tail call double @_Z3expd(double %extract4753) nounwind
  %temp.vect4773 = insertelement <16 x double> undef, double %2133, i32 0
  %temp.vect4774 = insertelement <16 x double> %temp.vect4773, double %2134, i32 1
  %temp.vect4775 = insertelement <16 x double> %temp.vect4774, double %2135, i32 2
  %temp.vect4776 = insertelement <16 x double> %temp.vect4775, double %2136, i32 3
  %temp.vect4777 = insertelement <16 x double> %temp.vect4776, double %2137, i32 4
  %temp.vect4778 = insertelement <16 x double> %temp.vect4777, double %2138, i32 5
  %temp.vect4779 = insertelement <16 x double> %temp.vect4778, double %2139, i32 6
  %temp.vect4780 = insertelement <16 x double> %temp.vect4779, double %2140, i32 7
  %temp.vect4781 = insertelement <16 x double> %temp.vect4780, double %2141, i32 8
  %temp.vect4782 = insertelement <16 x double> %temp.vect4781, double %2142, i32 9
  %temp.vect4783 = insertelement <16 x double> %temp.vect4782, double %2143, i32 10
  %temp.vect4784 = insertelement <16 x double> %temp.vect4783, double %2144, i32 11
  %temp.vect4785 = insertelement <16 x double> %temp.vect4784, double %2145, i32 12
  %temp.vect4786 = insertelement <16 x double> %temp.vect4785, double %2146, i32 13
  %temp.vect4787 = insertelement <16 x double> %temp.vect4786, double %2147, i32 14
  %temp.vect4788 = insertelement <16 x double> %temp.vect4787, double %2148, i32 15
  %2149 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2150 = load i64* %2149, align 8
  %2151 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2152 = load i64* %2151, align 8
  %2153 = add i64 %2150, %2152
  %extract4756 = add i64 %2153, 14266368
  %2154 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract4756
  %ptrTypeCast4772 = bitcast double addrspace(1)* %2154 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect4788, <16 x double> addrspace(1)* %ptrTypeCast4772, align 8
  %2155 = fmul <16 x double> %24, <double 0xC08F73777AF64064, double 0xC08F73777AF64064, double 0xC08F73777AF64064, double 0xC08F73777AF64064, double 0xC08F73777AF64064, double 0xC08F73777AF64064, double 0xC08F73777AF64064, double 0xC08F73777AF64064, double 0xC08F73777AF64064, double 0xC08F73777AF64064, double 0xC08F73777AF64064, double 0xC08F73777AF64064, double 0xC08F73777AF64064, double 0xC08F73777AF64064, double 0xC08F73777AF64064, double 0xC08F73777AF64064>
  %extract4789 = extractelement <16 x double> %2155, i32 0
  %extract4790 = extractelement <16 x double> %2155, i32 1
  %extract4791 = extractelement <16 x double> %2155, i32 2
  %extract4792 = extractelement <16 x double> %2155, i32 3
  %extract4793 = extractelement <16 x double> %2155, i32 4
  %extract4794 = extractelement <16 x double> %2155, i32 5
  %extract4795 = extractelement <16 x double> %2155, i32 6
  %extract4796 = extractelement <16 x double> %2155, i32 7
  %extract4797 = extractelement <16 x double> %2155, i32 8
  %extract4798 = extractelement <16 x double> %2155, i32 9
  %extract4799 = extractelement <16 x double> %2155, i32 10
  %extract4800 = extractelement <16 x double> %2155, i32 11
  %extract4801 = extractelement <16 x double> %2155, i32 12
  %extract4802 = extractelement <16 x double> %2155, i32 13
  %extract4803 = extractelement <16 x double> %2155, i32 14
  %extract4804 = extractelement <16 x double> %2155, i32 15
  %2156 = tail call double @_Z3expd(double %extract4789) nounwind
  %2157 = tail call double @_Z3expd(double %extract4790) nounwind
  %2158 = tail call double @_Z3expd(double %extract4791) nounwind
  %2159 = tail call double @_Z3expd(double %extract4792) nounwind
  %2160 = tail call double @_Z3expd(double %extract4793) nounwind
  %2161 = tail call double @_Z3expd(double %extract4794) nounwind
  %2162 = tail call double @_Z3expd(double %extract4795) nounwind
  %2163 = tail call double @_Z3expd(double %extract4796) nounwind
  %2164 = tail call double @_Z3expd(double %extract4797) nounwind
  %2165 = tail call double @_Z3expd(double %extract4798) nounwind
  %2166 = tail call double @_Z3expd(double %extract4799) nounwind
  %2167 = tail call double @_Z3expd(double %extract4800) nounwind
  %2168 = tail call double @_Z3expd(double %extract4801) nounwind
  %2169 = tail call double @_Z3expd(double %extract4802) nounwind
  %2170 = tail call double @_Z3expd(double %extract4803) nounwind
  %2171 = tail call double @_Z3expd(double %extract4804) nounwind
  %temp.vect4805 = insertelement <16 x double> undef, double %2156, i32 0
  %temp.vect4806 = insertelement <16 x double> %temp.vect4805, double %2157, i32 1
  %temp.vect4807 = insertelement <16 x double> %temp.vect4806, double %2158, i32 2
  %temp.vect4808 = insertelement <16 x double> %temp.vect4807, double %2159, i32 3
  %temp.vect4809 = insertelement <16 x double> %temp.vect4808, double %2160, i32 4
  %temp.vect4810 = insertelement <16 x double> %temp.vect4809, double %2161, i32 5
  %temp.vect4811 = insertelement <16 x double> %temp.vect4810, double %2162, i32 6
  %temp.vect4812 = insertelement <16 x double> %temp.vect4811, double %2163, i32 7
  %temp.vect4813 = insertelement <16 x double> %temp.vect4812, double %2164, i32 8
  %temp.vect4814 = insertelement <16 x double> %temp.vect4813, double %2165, i32 9
  %temp.vect4815 = insertelement <16 x double> %temp.vect4814, double %2166, i32 10
  %temp.vect4816 = insertelement <16 x double> %temp.vect4815, double %2167, i32 11
  %temp.vect4817 = insertelement <16 x double> %temp.vect4816, double %2168, i32 12
  %temp.vect4818 = insertelement <16 x double> %temp.vect4817, double %2169, i32 13
  %temp.vect4819 = insertelement <16 x double> %temp.vect4818, double %2170, i32 14
  %temp.vect4820 = insertelement <16 x double> %temp.vect4819, double %2171, i32 15
  %2172 = fmul <16 x double> %temp.vect4820, <double 7.500000e+12, double 7.500000e+12, double 7.500000e+12, double 7.500000e+12, double 7.500000e+12, double 7.500000e+12, double 7.500000e+12, double 7.500000e+12, double 7.500000e+12, double 7.500000e+12, double 7.500000e+12, double 7.500000e+12, double 7.500000e+12, double 7.500000e+12, double 7.500000e+12, double 7.500000e+12>
  %2173 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2174 = load i64* %2173, align 8
  %2175 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2176 = load i64* %2175, align 8
  %2177 = add i64 %2174, %2176
  %extract4823 = add i64 %2177, 14376960
  %2178 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract4823
  %ptrTypeCast4839 = bitcast double addrspace(1)* %2178 to <16 x double> addrspace(1)*
  store <16 x double> %2172, <16 x double> addrspace(1)* %ptrTypeCast4839, align 8
  %2179 = fmul <16 x double> %temp.vect4820, <double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13>
  %2180 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2181 = load i64* %2180, align 8
  %2182 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2183 = load i64* %2182, align 8
  %2184 = add i64 %2181, %2183
  %extract4842 = add i64 %2184, 16699392
  %2185 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract4842
  %ptrTypeCast4858 = bitcast double addrspace(1)* %2185 to <16 x double> addrspace(1)*
  store <16 x double> %2179, <16 x double> addrspace(1)* %ptrTypeCast4858, align 8
  %2186 = fmul <16 x double> %temp.vect4820, <double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13>
  %2187 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2188 = load i64* %2187, align 8
  %2189 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2190 = load i64* %2189, align 8
  %2191 = add i64 %2188, %2190
  %extract4861 = add i64 %2191, 20459520
  %2192 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract4861
  %ptrTypeCast4877 = bitcast double addrspace(1)* %2192 to <16 x double> addrspace(1)*
  store <16 x double> %2186, <16 x double> addrspace(1)* %ptrTypeCast4877, align 8
  %2193 = fmul <16 x double> %temp.vect97, <double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01>
  %2194 = fadd <16 x double> %2193, <double 0x403D6F9F63073655, double 0x403D6F9F63073655, double 0x403D6F9F63073655, double 0x403D6F9F63073655, double 0x403D6F9F63073655, double 0x403D6F9F63073655, double 0x403D6F9F63073655, double 0x403D6F9F63073655, double 0x403D6F9F63073655, double 0x403D6F9F63073655, double 0x403D6F9F63073655, double 0x403D6F9F63073655, double 0x403D6F9F63073655, double 0x403D6F9F63073655, double 0x403D6F9F63073655, double 0x403D6F9F63073655>
  %2195 = fmul <16 x double> %24, <double 0x40619CD24399B2C4, double 0x40619CD24399B2C4, double 0x40619CD24399B2C4, double 0x40619CD24399B2C4, double 0x40619CD24399B2C4, double 0x40619CD24399B2C4, double 0x40619CD24399B2C4, double 0x40619CD24399B2C4, double 0x40619CD24399B2C4, double 0x40619CD24399B2C4, double 0x40619CD24399B2C4, double 0x40619CD24399B2C4, double 0x40619CD24399B2C4, double 0x40619CD24399B2C4, double 0x40619CD24399B2C4, double 0x40619CD24399B2C4>
  %2196 = fsub <16 x double> %2194, %2195
  %extract4878 = extractelement <16 x double> %2196, i32 0
  %extract4879 = extractelement <16 x double> %2196, i32 1
  %extract4880 = extractelement <16 x double> %2196, i32 2
  %extract4881 = extractelement <16 x double> %2196, i32 3
  %extract4882 = extractelement <16 x double> %2196, i32 4
  %extract4883 = extractelement <16 x double> %2196, i32 5
  %extract4884 = extractelement <16 x double> %2196, i32 6
  %extract4885 = extractelement <16 x double> %2196, i32 7
  %extract4886 = extractelement <16 x double> %2196, i32 8
  %extract4887 = extractelement <16 x double> %2196, i32 9
  %extract4888 = extractelement <16 x double> %2196, i32 10
  %extract4889 = extractelement <16 x double> %2196, i32 11
  %extract4890 = extractelement <16 x double> %2196, i32 12
  %extract4891 = extractelement <16 x double> %2196, i32 13
  %extract4892 = extractelement <16 x double> %2196, i32 14
  %extract4893 = extractelement <16 x double> %2196, i32 15
  %2197 = tail call double @_Z3expd(double %extract4878) nounwind
  %2198 = tail call double @_Z3expd(double %extract4879) nounwind
  %2199 = tail call double @_Z3expd(double %extract4880) nounwind
  %2200 = tail call double @_Z3expd(double %extract4881) nounwind
  %2201 = tail call double @_Z3expd(double %extract4882) nounwind
  %2202 = tail call double @_Z3expd(double %extract4883) nounwind
  %2203 = tail call double @_Z3expd(double %extract4884) nounwind
  %2204 = tail call double @_Z3expd(double %extract4885) nounwind
  %2205 = tail call double @_Z3expd(double %extract4886) nounwind
  %2206 = tail call double @_Z3expd(double %extract4887) nounwind
  %2207 = tail call double @_Z3expd(double %extract4888) nounwind
  %2208 = tail call double @_Z3expd(double %extract4889) nounwind
  %2209 = tail call double @_Z3expd(double %extract4890) nounwind
  %2210 = tail call double @_Z3expd(double %extract4891) nounwind
  %2211 = tail call double @_Z3expd(double %extract4892) nounwind
  %2212 = tail call double @_Z3expd(double %extract4893) nounwind
  %temp.vect4913 = insertelement <16 x double> undef, double %2197, i32 0
  %temp.vect4914 = insertelement <16 x double> %temp.vect4913, double %2198, i32 1
  %temp.vect4915 = insertelement <16 x double> %temp.vect4914, double %2199, i32 2
  %temp.vect4916 = insertelement <16 x double> %temp.vect4915, double %2200, i32 3
  %temp.vect4917 = insertelement <16 x double> %temp.vect4916, double %2201, i32 4
  %temp.vect4918 = insertelement <16 x double> %temp.vect4917, double %2202, i32 5
  %temp.vect4919 = insertelement <16 x double> %temp.vect4918, double %2203, i32 6
  %temp.vect4920 = insertelement <16 x double> %temp.vect4919, double %2204, i32 7
  %temp.vect4921 = insertelement <16 x double> %temp.vect4920, double %2205, i32 8
  %temp.vect4922 = insertelement <16 x double> %temp.vect4921, double %2206, i32 9
  %temp.vect4923 = insertelement <16 x double> %temp.vect4922, double %2207, i32 10
  %temp.vect4924 = insertelement <16 x double> %temp.vect4923, double %2208, i32 11
  %temp.vect4925 = insertelement <16 x double> %temp.vect4924, double %2209, i32 12
  %temp.vect4926 = insertelement <16 x double> %temp.vect4925, double %2210, i32 13
  %temp.vect4927 = insertelement <16 x double> %temp.vect4926, double %2211, i32 14
  %temp.vect4928 = insertelement <16 x double> %temp.vect4927, double %2212, i32 15
  %2213 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2214 = load i64* %2213, align 8
  %2215 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2216 = load i64* %2215, align 8
  %2217 = add i64 %2214, %2216
  %extract4896 = add i64 %2217, 14487552
  %2218 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract4896
  %ptrTypeCast4912 = bitcast double addrspace(1)* %2218 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect4928, <16 x double> addrspace(1)* %ptrTypeCast4912, align 8
  %2219 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2220 = load i64* %2219, align 8
  %2221 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2222 = load i64* %2221, align 8
  %2223 = add i64 %2220, %2222
  %extract4931 = add i64 %2223, 14598144
  %2224 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract4931
  %ptrTypeCast4947 = bitcast double addrspace(1)* %2224 to <16 x double> addrspace(1)*
  store <16 x double> <double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast4947, align 8
  %2225 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2226 = load i64* %2225, align 8
  %2227 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2228 = load i64* %2227, align 8
  %2229 = add i64 %2226, %2228
  %extract4950 = add i64 %2229, 14708736
  %2230 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract4950
  %ptrTypeCast4966 = bitcast double addrspace(1)* %2230 to <16 x double> addrspace(1)*
  store <16 x double> <double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast4966, align 8
  %2231 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2232 = load i64* %2231, align 8
  %2233 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2234 = load i64* %2233, align 8
  %2235 = add i64 %2232, %2234
  %extract4969 = add i64 %2235, 14819328
  %2236 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract4969
  %ptrTypeCast4985 = bitcast double addrspace(1)* %2236 to <16 x double> addrspace(1)*
  store <16 x double> <double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13>, <16 x double> addrspace(1)* %ptrTypeCast4985, align 8
  %2237 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2238 = load i64* %2237, align 8
  %2239 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2240 = load i64* %2239, align 8
  %2241 = add i64 %2238, %2240
  %extract4988 = add i64 %2241, 14929920
  %2242 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract4988
  %ptrTypeCast5004 = bitcast double addrspace(1)* %2242 to <16 x double> addrspace(1)*
  store <16 x double> <double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13>, <16 x double> addrspace(1)* %ptrTypeCast5004, align 8
  %2243 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2244 = load i64* %2243, align 8
  %2245 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2246 = load i64* %2245, align 8
  %2247 = add i64 %2244, %2246
  %extract5007 = add i64 %2247, 15040512
  %2248 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract5007
  %ptrTypeCast5023 = bitcast double addrspace(1)* %2248 to <16 x double> addrspace(1)*
  store <16 x double> <double 3.011000e+13, double 3.011000e+13, double 3.011000e+13, double 3.011000e+13, double 3.011000e+13, double 3.011000e+13, double 3.011000e+13, double 3.011000e+13, double 3.011000e+13, double 3.011000e+13, double 3.011000e+13, double 3.011000e+13, double 3.011000e+13, double 3.011000e+13, double 3.011000e+13, double 3.011000e+13>, <16 x double> addrspace(1)* %ptrTypeCast5023, align 8
  %2249 = fmul <16 x double> %temp.vect97, <double 1.610000e+00, double 1.610000e+00, double 1.610000e+00, double 1.610000e+00, double 1.610000e+00, double 1.610000e+00, double 1.610000e+00, double 1.610000e+00, double 1.610000e+00, double 1.610000e+00, double 1.610000e+00, double 1.610000e+00, double 1.610000e+00, double 1.610000e+00, double 1.610000e+00, double 1.610000e+00>
  %2250 = fadd <16 x double> %2249, <double 0x402C3763652A2644, double 0x402C3763652A2644, double 0x402C3763652A2644, double 0x402C3763652A2644, double 0x402C3763652A2644, double 0x402C3763652A2644, double 0x402C3763652A2644, double 0x402C3763652A2644, double 0x402C3763652A2644, double 0x402C3763652A2644, double 0x402C3763652A2644, double 0x402C3763652A2644, double 0x402C3763652A2644, double 0x402C3763652A2644, double 0x402C3763652A2644, double 0x402C3763652A2644>
  %2251 = fmul <16 x double> %24, <double 0x40681DDD590C0AD0, double 0x40681DDD590C0AD0, double 0x40681DDD590C0AD0, double 0x40681DDD590C0AD0, double 0x40681DDD590C0AD0, double 0x40681DDD590C0AD0, double 0x40681DDD590C0AD0, double 0x40681DDD590C0AD0, double 0x40681DDD590C0AD0, double 0x40681DDD590C0AD0, double 0x40681DDD590C0AD0, double 0x40681DDD590C0AD0, double 0x40681DDD590C0AD0, double 0x40681DDD590C0AD0, double 0x40681DDD590C0AD0, double 0x40681DDD590C0AD0>
  %2252 = fadd <16 x double> %2250, %2251
  %extract5024 = extractelement <16 x double> %2252, i32 0
  %extract5025 = extractelement <16 x double> %2252, i32 1
  %extract5026 = extractelement <16 x double> %2252, i32 2
  %extract5027 = extractelement <16 x double> %2252, i32 3
  %extract5028 = extractelement <16 x double> %2252, i32 4
  %extract5029 = extractelement <16 x double> %2252, i32 5
  %extract5030 = extractelement <16 x double> %2252, i32 6
  %extract5031 = extractelement <16 x double> %2252, i32 7
  %extract5032 = extractelement <16 x double> %2252, i32 8
  %extract5033 = extractelement <16 x double> %2252, i32 9
  %extract5034 = extractelement <16 x double> %2252, i32 10
  %extract5035 = extractelement <16 x double> %2252, i32 11
  %extract5036 = extractelement <16 x double> %2252, i32 12
  %extract5037 = extractelement <16 x double> %2252, i32 13
  %extract5038 = extractelement <16 x double> %2252, i32 14
  %extract5039 = extractelement <16 x double> %2252, i32 15
  %2253 = tail call double @_Z3expd(double %extract5024) nounwind
  %2254 = tail call double @_Z3expd(double %extract5025) nounwind
  %2255 = tail call double @_Z3expd(double %extract5026) nounwind
  %2256 = tail call double @_Z3expd(double %extract5027) nounwind
  %2257 = tail call double @_Z3expd(double %extract5028) nounwind
  %2258 = tail call double @_Z3expd(double %extract5029) nounwind
  %2259 = tail call double @_Z3expd(double %extract5030) nounwind
  %2260 = tail call double @_Z3expd(double %extract5031) nounwind
  %2261 = tail call double @_Z3expd(double %extract5032) nounwind
  %2262 = tail call double @_Z3expd(double %extract5033) nounwind
  %2263 = tail call double @_Z3expd(double %extract5034) nounwind
  %2264 = tail call double @_Z3expd(double %extract5035) nounwind
  %2265 = tail call double @_Z3expd(double %extract5036) nounwind
  %2266 = tail call double @_Z3expd(double %extract5037) nounwind
  %2267 = tail call double @_Z3expd(double %extract5038) nounwind
  %2268 = tail call double @_Z3expd(double %extract5039) nounwind
  %temp.vect5059 = insertelement <16 x double> undef, double %2253, i32 0
  %temp.vect5060 = insertelement <16 x double> %temp.vect5059, double %2254, i32 1
  %temp.vect5061 = insertelement <16 x double> %temp.vect5060, double %2255, i32 2
  %temp.vect5062 = insertelement <16 x double> %temp.vect5061, double %2256, i32 3
  %temp.vect5063 = insertelement <16 x double> %temp.vect5062, double %2257, i32 4
  %temp.vect5064 = insertelement <16 x double> %temp.vect5063, double %2258, i32 5
  %temp.vect5065 = insertelement <16 x double> %temp.vect5064, double %2259, i32 6
  %temp.vect5066 = insertelement <16 x double> %temp.vect5065, double %2260, i32 7
  %temp.vect5067 = insertelement <16 x double> %temp.vect5066, double %2261, i32 8
  %temp.vect5068 = insertelement <16 x double> %temp.vect5067, double %2262, i32 9
  %temp.vect5069 = insertelement <16 x double> %temp.vect5068, double %2263, i32 10
  %temp.vect5070 = insertelement <16 x double> %temp.vect5069, double %2264, i32 11
  %temp.vect5071 = insertelement <16 x double> %temp.vect5070, double %2265, i32 12
  %temp.vect5072 = insertelement <16 x double> %temp.vect5071, double %2266, i32 13
  %temp.vect5073 = insertelement <16 x double> %temp.vect5072, double %2267, i32 14
  %temp.vect5074 = insertelement <16 x double> %temp.vect5073, double %2268, i32 15
  %2269 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2270 = load i64* %2269, align 8
  %2271 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2272 = load i64* %2271, align 8
  %2273 = add i64 %2270, %2272
  %extract5042 = add i64 %2273, 15151104
  %2274 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract5042
  %ptrTypeCast5058 = bitcast double addrspace(1)* %2274 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect5074, <16 x double> addrspace(1)* %ptrTypeCast5058, align 8
  %2275 = fmul <16 x double> %temp.vect97, <double 2.900000e-01, double 2.900000e-01, double 2.900000e-01, double 2.900000e-01, double 2.900000e-01, double 2.900000e-01, double 2.900000e-01, double 2.900000e-01, double 2.900000e-01, double 2.900000e-01, double 2.900000e-01, double 2.900000e-01, double 2.900000e-01, double 2.900000e-01, double 2.900000e-01, double 2.900000e-01>
  %2276 = fadd <16 x double> %2275, <double 0x403A6D5309924FF9, double 0x403A6D5309924FF9, double 0x403A6D5309924FF9, double 0x403A6D5309924FF9, double 0x403A6D5309924FF9, double 0x403A6D5309924FF9, double 0x403A6D5309924FF9, double 0x403A6D5309924FF9, double 0x403A6D5309924FF9, double 0x403A6D5309924FF9, double 0x403A6D5309924FF9, double 0x403A6D5309924FF9, double 0x403A6D5309924FF9, double 0x403A6D5309924FF9, double 0x403A6D5309924FF9, double 0x403A6D5309924FF9>
  %2277 = fmul <16 x double> %24, <double 0x4016243B87C07E35, double 0x4016243B87C07E35, double 0x4016243B87C07E35, double 0x4016243B87C07E35, double 0x4016243B87C07E35, double 0x4016243B87C07E35, double 0x4016243B87C07E35, double 0x4016243B87C07E35, double 0x4016243B87C07E35, double 0x4016243B87C07E35, double 0x4016243B87C07E35, double 0x4016243B87C07E35, double 0x4016243B87C07E35, double 0x4016243B87C07E35, double 0x4016243B87C07E35, double 0x4016243B87C07E35>
  %2278 = fsub <16 x double> %2276, %2277
  %extract5075 = extractelement <16 x double> %2278, i32 0
  %extract5076 = extractelement <16 x double> %2278, i32 1
  %extract5077 = extractelement <16 x double> %2278, i32 2
  %extract5078 = extractelement <16 x double> %2278, i32 3
  %extract5079 = extractelement <16 x double> %2278, i32 4
  %extract5080 = extractelement <16 x double> %2278, i32 5
  %extract5081 = extractelement <16 x double> %2278, i32 6
  %extract5082 = extractelement <16 x double> %2278, i32 7
  %extract5083 = extractelement <16 x double> %2278, i32 8
  %extract5084 = extractelement <16 x double> %2278, i32 9
  %extract5085 = extractelement <16 x double> %2278, i32 10
  %extract5086 = extractelement <16 x double> %2278, i32 11
  %extract5087 = extractelement <16 x double> %2278, i32 12
  %extract5088 = extractelement <16 x double> %2278, i32 13
  %extract5089 = extractelement <16 x double> %2278, i32 14
  %extract5090 = extractelement <16 x double> %2278, i32 15
  %2279 = tail call double @_Z3expd(double %extract5075) nounwind
  %2280 = tail call double @_Z3expd(double %extract5076) nounwind
  %2281 = tail call double @_Z3expd(double %extract5077) nounwind
  %2282 = tail call double @_Z3expd(double %extract5078) nounwind
  %2283 = tail call double @_Z3expd(double %extract5079) nounwind
  %2284 = tail call double @_Z3expd(double %extract5080) nounwind
  %2285 = tail call double @_Z3expd(double %extract5081) nounwind
  %2286 = tail call double @_Z3expd(double %extract5082) nounwind
  %2287 = tail call double @_Z3expd(double %extract5083) nounwind
  %2288 = tail call double @_Z3expd(double %extract5084) nounwind
  %2289 = tail call double @_Z3expd(double %extract5085) nounwind
  %2290 = tail call double @_Z3expd(double %extract5086) nounwind
  %2291 = tail call double @_Z3expd(double %extract5087) nounwind
  %2292 = tail call double @_Z3expd(double %extract5088) nounwind
  %2293 = tail call double @_Z3expd(double %extract5089) nounwind
  %2294 = tail call double @_Z3expd(double %extract5090) nounwind
  %temp.vect5110 = insertelement <16 x double> undef, double %2279, i32 0
  %temp.vect5111 = insertelement <16 x double> %temp.vect5110, double %2280, i32 1
  %temp.vect5112 = insertelement <16 x double> %temp.vect5111, double %2281, i32 2
  %temp.vect5113 = insertelement <16 x double> %temp.vect5112, double %2282, i32 3
  %temp.vect5114 = insertelement <16 x double> %temp.vect5113, double %2283, i32 4
  %temp.vect5115 = insertelement <16 x double> %temp.vect5114, double %2284, i32 5
  %temp.vect5116 = insertelement <16 x double> %temp.vect5115, double %2285, i32 6
  %temp.vect5117 = insertelement <16 x double> %temp.vect5116, double %2286, i32 7
  %temp.vect5118 = insertelement <16 x double> %temp.vect5117, double %2287, i32 8
  %temp.vect5119 = insertelement <16 x double> %temp.vect5118, double %2288, i32 9
  %temp.vect5120 = insertelement <16 x double> %temp.vect5119, double %2289, i32 10
  %temp.vect5121 = insertelement <16 x double> %temp.vect5120, double %2290, i32 11
  %temp.vect5122 = insertelement <16 x double> %temp.vect5121, double %2291, i32 12
  %temp.vect5123 = insertelement <16 x double> %temp.vect5122, double %2292, i32 13
  %temp.vect5124 = insertelement <16 x double> %temp.vect5123, double %2293, i32 14
  %temp.vect5125 = insertelement <16 x double> %temp.vect5124, double %2294, i32 15
  %2295 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2296 = load i64* %2295, align 8
  %2297 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2298 = load i64* %2297, align 8
  %2299 = add i64 %2296, %2298
  %extract5093 = add i64 %2299, 15261696
  %2300 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract5093
  %ptrTypeCast5109 = bitcast double addrspace(1)* %2300 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect5125, <16 x double> addrspace(1)* %ptrTypeCast5109, align 8
  %2301 = fmul <16 x double> %temp.vect97, <double 1.390000e+00, double 1.390000e+00, double 1.390000e+00, double 1.390000e+00, double 1.390000e+00, double 1.390000e+00, double 1.390000e+00, double 1.390000e+00, double 1.390000e+00, double 1.390000e+00, double 1.390000e+00, double 1.390000e+00, double 1.390000e+00, double 1.390000e+00, double 1.390000e+00, double 1.390000e+00>
  %2302 = fsub <16 x double> <double 0x40432F078BE57BF0, double 0x40432F078BE57BF0, double 0x40432F078BE57BF0, double 0x40432F078BE57BF0, double 0x40432F078BE57BF0, double 0x40432F078BE57BF0, double 0x40432F078BE57BF0, double 0x40432F078BE57BF0, double 0x40432F078BE57BF0, double 0x40432F078BE57BF0, double 0x40432F078BE57BF0, double 0x40432F078BE57BF0, double 0x40432F078BE57BF0, double 0x40432F078BE57BF0, double 0x40432F078BE57BF0, double 0x40432F078BE57BF0>, %2301
  %2303 = fmul <16 x double> %24, <double 0x407FC3FB395C4220, double 0x407FC3FB395C4220, double 0x407FC3FB395C4220, double 0x407FC3FB395C4220, double 0x407FC3FB395C4220, double 0x407FC3FB395C4220, double 0x407FC3FB395C4220, double 0x407FC3FB395C4220, double 0x407FC3FB395C4220, double 0x407FC3FB395C4220, double 0x407FC3FB395C4220, double 0x407FC3FB395C4220, double 0x407FC3FB395C4220, double 0x407FC3FB395C4220, double 0x407FC3FB395C4220, double 0x407FC3FB395C4220>
  %2304 = fsub <16 x double> %2302, %2303
  %extract5126 = extractelement <16 x double> %2304, i32 0
  %extract5127 = extractelement <16 x double> %2304, i32 1
  %extract5128 = extractelement <16 x double> %2304, i32 2
  %extract5129 = extractelement <16 x double> %2304, i32 3
  %extract5130 = extractelement <16 x double> %2304, i32 4
  %extract5131 = extractelement <16 x double> %2304, i32 5
  %extract5132 = extractelement <16 x double> %2304, i32 6
  %extract5133 = extractelement <16 x double> %2304, i32 7
  %extract5134 = extractelement <16 x double> %2304, i32 8
  %extract5135 = extractelement <16 x double> %2304, i32 9
  %extract5136 = extractelement <16 x double> %2304, i32 10
  %extract5137 = extractelement <16 x double> %2304, i32 11
  %extract5138 = extractelement <16 x double> %2304, i32 12
  %extract5139 = extractelement <16 x double> %2304, i32 13
  %extract5140 = extractelement <16 x double> %2304, i32 14
  %extract5141 = extractelement <16 x double> %2304, i32 15
  %2305 = tail call double @_Z3expd(double %extract5126) nounwind
  %2306 = tail call double @_Z3expd(double %extract5127) nounwind
  %2307 = tail call double @_Z3expd(double %extract5128) nounwind
  %2308 = tail call double @_Z3expd(double %extract5129) nounwind
  %2309 = tail call double @_Z3expd(double %extract5130) nounwind
  %2310 = tail call double @_Z3expd(double %extract5131) nounwind
  %2311 = tail call double @_Z3expd(double %extract5132) nounwind
  %2312 = tail call double @_Z3expd(double %extract5133) nounwind
  %2313 = tail call double @_Z3expd(double %extract5134) nounwind
  %2314 = tail call double @_Z3expd(double %extract5135) nounwind
  %2315 = tail call double @_Z3expd(double %extract5136) nounwind
  %2316 = tail call double @_Z3expd(double %extract5137) nounwind
  %2317 = tail call double @_Z3expd(double %extract5138) nounwind
  %2318 = tail call double @_Z3expd(double %extract5139) nounwind
  %2319 = tail call double @_Z3expd(double %extract5140) nounwind
  %2320 = tail call double @_Z3expd(double %extract5141) nounwind
  %temp.vect5161 = insertelement <16 x double> undef, double %2305, i32 0
  %temp.vect5162 = insertelement <16 x double> %temp.vect5161, double %2306, i32 1
  %temp.vect5163 = insertelement <16 x double> %temp.vect5162, double %2307, i32 2
  %temp.vect5164 = insertelement <16 x double> %temp.vect5163, double %2308, i32 3
  %temp.vect5165 = insertelement <16 x double> %temp.vect5164, double %2309, i32 4
  %temp.vect5166 = insertelement <16 x double> %temp.vect5165, double %2310, i32 5
  %temp.vect5167 = insertelement <16 x double> %temp.vect5166, double %2311, i32 6
  %temp.vect5168 = insertelement <16 x double> %temp.vect5167, double %2312, i32 7
  %temp.vect5169 = insertelement <16 x double> %temp.vect5168, double %2313, i32 8
  %temp.vect5170 = insertelement <16 x double> %temp.vect5169, double %2314, i32 9
  %temp.vect5171 = insertelement <16 x double> %temp.vect5170, double %2315, i32 10
  %temp.vect5172 = insertelement <16 x double> %temp.vect5171, double %2316, i32 11
  %temp.vect5173 = insertelement <16 x double> %temp.vect5172, double %2317, i32 12
  %temp.vect5174 = insertelement <16 x double> %temp.vect5173, double %2318, i32 13
  %temp.vect5175 = insertelement <16 x double> %temp.vect5174, double %2319, i32 14
  %temp.vect5176 = insertelement <16 x double> %temp.vect5175, double %2320, i32 15
  %2321 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2322 = load i64* %2321, align 8
  %2323 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2324 = load i64* %2323, align 8
  %2325 = add i64 %2322, %2324
  %extract5144 = add i64 %2325, 15372288
  %2326 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract5144
  %ptrTypeCast5160 = bitcast double addrspace(1)* %2326 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect5176, <16 x double> addrspace(1)* %ptrTypeCast5160, align 8
  %2327 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2328 = load i64* %2327, align 8
  %2329 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2330 = load i64* %2329, align 8
  %2331 = add i64 %2328, %2330
  %extract5179 = add i64 %2331, 15482880
  %2332 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract5179
  %ptrTypeCast5195 = bitcast double addrspace(1)* %2332 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast5195, align 8
  %2333 = fmul <16 x double> %24, <double 0x4072BEAC94B380CB, double 0x4072BEAC94B380CB, double 0x4072BEAC94B380CB, double 0x4072BEAC94B380CB, double 0x4072BEAC94B380CB, double 0x4072BEAC94B380CB, double 0x4072BEAC94B380CB, double 0x4072BEAC94B380CB, double 0x4072BEAC94B380CB, double 0x4072BEAC94B380CB, double 0x4072BEAC94B380CB, double 0x4072BEAC94B380CB, double 0x4072BEAC94B380CB, double 0x4072BEAC94B380CB, double 0x4072BEAC94B380CB, double 0x4072BEAC94B380CB>
  %2334 = fadd <16 x double> %2333, <double 0x4037376AA9C205C9, double 0x4037376AA9C205C9, double 0x4037376AA9C205C9, double 0x4037376AA9C205C9, double 0x4037376AA9C205C9, double 0x4037376AA9C205C9, double 0x4037376AA9C205C9, double 0x4037376AA9C205C9, double 0x4037376AA9C205C9, double 0x4037376AA9C205C9, double 0x4037376AA9C205C9, double 0x4037376AA9C205C9, double 0x4037376AA9C205C9, double 0x4037376AA9C205C9, double 0x4037376AA9C205C9, double 0x4037376AA9C205C9>
  %extract5196 = extractelement <16 x double> %2334, i32 0
  %extract5197 = extractelement <16 x double> %2334, i32 1
  %extract5198 = extractelement <16 x double> %2334, i32 2
  %extract5199 = extractelement <16 x double> %2334, i32 3
  %extract5200 = extractelement <16 x double> %2334, i32 4
  %extract5201 = extractelement <16 x double> %2334, i32 5
  %extract5202 = extractelement <16 x double> %2334, i32 6
  %extract5203 = extractelement <16 x double> %2334, i32 7
  %extract5204 = extractelement <16 x double> %2334, i32 8
  %extract5205 = extractelement <16 x double> %2334, i32 9
  %extract5206 = extractelement <16 x double> %2334, i32 10
  %extract5207 = extractelement <16 x double> %2334, i32 11
  %extract5208 = extractelement <16 x double> %2334, i32 12
  %extract5209 = extractelement <16 x double> %2334, i32 13
  %extract5210 = extractelement <16 x double> %2334, i32 14
  %extract5211 = extractelement <16 x double> %2334, i32 15
  %2335 = tail call double @_Z3expd(double %extract5196) nounwind
  %2336 = tail call double @_Z3expd(double %extract5197) nounwind
  %2337 = tail call double @_Z3expd(double %extract5198) nounwind
  %2338 = tail call double @_Z3expd(double %extract5199) nounwind
  %2339 = tail call double @_Z3expd(double %extract5200) nounwind
  %2340 = tail call double @_Z3expd(double %extract5201) nounwind
  %2341 = tail call double @_Z3expd(double %extract5202) nounwind
  %2342 = tail call double @_Z3expd(double %extract5203) nounwind
  %2343 = tail call double @_Z3expd(double %extract5204) nounwind
  %2344 = tail call double @_Z3expd(double %extract5205) nounwind
  %2345 = tail call double @_Z3expd(double %extract5206) nounwind
  %2346 = tail call double @_Z3expd(double %extract5207) nounwind
  %2347 = tail call double @_Z3expd(double %extract5208) nounwind
  %2348 = tail call double @_Z3expd(double %extract5209) nounwind
  %2349 = tail call double @_Z3expd(double %extract5210) nounwind
  %2350 = tail call double @_Z3expd(double %extract5211) nounwind
  %temp.vect5231 = insertelement <16 x double> undef, double %2335, i32 0
  %temp.vect5232 = insertelement <16 x double> %temp.vect5231, double %2336, i32 1
  %temp.vect5233 = insertelement <16 x double> %temp.vect5232, double %2337, i32 2
  %temp.vect5234 = insertelement <16 x double> %temp.vect5233, double %2338, i32 3
  %temp.vect5235 = insertelement <16 x double> %temp.vect5234, double %2339, i32 4
  %temp.vect5236 = insertelement <16 x double> %temp.vect5235, double %2340, i32 5
  %temp.vect5237 = insertelement <16 x double> %temp.vect5236, double %2341, i32 6
  %temp.vect5238 = insertelement <16 x double> %temp.vect5237, double %2342, i32 7
  %temp.vect5239 = insertelement <16 x double> %temp.vect5238, double %2343, i32 8
  %temp.vect5240 = insertelement <16 x double> %temp.vect5239, double %2344, i32 9
  %temp.vect5241 = insertelement <16 x double> %temp.vect5240, double %2345, i32 10
  %temp.vect5242 = insertelement <16 x double> %temp.vect5241, double %2346, i32 11
  %temp.vect5243 = insertelement <16 x double> %temp.vect5242, double %2347, i32 12
  %temp.vect5244 = insertelement <16 x double> %temp.vect5243, double %2348, i32 13
  %temp.vect5245 = insertelement <16 x double> %temp.vect5244, double %2349, i32 14
  %temp.vect5246 = insertelement <16 x double> %temp.vect5245, double %2350, i32 15
  %2351 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2352 = load i64* %2351, align 8
  %2353 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2354 = load i64* %2353, align 8
  %2355 = add i64 %2352, %2354
  %extract5214 = add i64 %2355, 15593472
  %2356 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract5214
  %ptrTypeCast5230 = bitcast double addrspace(1)* %2356 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect5246, <16 x double> addrspace(1)* %ptrTypeCast5230, align 8
  %2357 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2358 = load i64* %2357, align 8
  %2359 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2360 = load i64* %2359, align 8
  %2361 = add i64 %2358, %2360
  %extract5249 = add i64 %2361, 15704064
  %2362 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract5249
  %ptrTypeCast5265 = bitcast double addrspace(1)* %2362 to <16 x double> addrspace(1)*
  store <16 x double> <double 9.033000e+13, double 9.033000e+13, double 9.033000e+13, double 9.033000e+13, double 9.033000e+13, double 9.033000e+13, double 9.033000e+13, double 9.033000e+13, double 9.033000e+13, double 9.033000e+13, double 9.033000e+13, double 9.033000e+13, double 9.033000e+13, double 9.033000e+13, double 9.033000e+13, double 9.033000e+13>, <16 x double> addrspace(1)* %ptrTypeCast5265, align 8
  %2363 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2364 = load i64* %2363, align 8
  %2365 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2366 = load i64* %2365, align 8
  %2367 = add i64 %2364, %2366
  %extract5268 = add i64 %2367, 15814656
  %2368 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract5268
  %ptrTypeCast5284 = bitcast double addrspace(1)* %2368 to <16 x double> addrspace(1)*
  store <16 x double> <double 3.920000e+11, double 3.920000e+11, double 3.920000e+11, double 3.920000e+11, double 3.920000e+11, double 3.920000e+11, double 3.920000e+11, double 3.920000e+11, double 3.920000e+11, double 3.920000e+11, double 3.920000e+11, double 3.920000e+11, double 3.920000e+11, double 3.920000e+11, double 3.920000e+11, double 3.920000e+11>, <16 x double> addrspace(1)* %ptrTypeCast5284, align 8
  %2369 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2370 = load i64* %2369, align 8
  %2371 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2372 = load i64* %2371, align 8
  %2373 = add i64 %2370, %2372
  %extract5287 = add i64 %2373, 15925248
  %2374 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract5287
  %ptrTypeCast5303 = bitcast double addrspace(1)* %2374 to <16 x double> addrspace(1)*
  store <16 x double> <double 2.500000e+13, double 2.500000e+13, double 2.500000e+13, double 2.500000e+13, double 2.500000e+13, double 2.500000e+13, double 2.500000e+13, double 2.500000e+13, double 2.500000e+13, double 2.500000e+13, double 2.500000e+13, double 2.500000e+13, double 2.500000e+13, double 2.500000e+13, double 2.500000e+13, double 2.500000e+13>, <16 x double> addrspace(1)* %ptrTypeCast5303, align 8
  %2375 = fmul <16 x double> %temp.vect97, <double 2.830000e+00, double 2.830000e+00, double 2.830000e+00, double 2.830000e+00, double 2.830000e+00, double 2.830000e+00, double 2.830000e+00, double 2.830000e+00, double 2.830000e+00, double 2.830000e+00, double 2.830000e+00, double 2.830000e+00, double 2.830000e+00, double 2.830000e+00, double 2.830000e+00, double 2.830000e+00>
  %2376 = fsub <16 x double> <double 0x404BD570E113ABAE, double 0x404BD570E113ABAE, double 0x404BD570E113ABAE, double 0x404BD570E113ABAE, double 0x404BD570E113ABAE, double 0x404BD570E113ABAE, double 0x404BD570E113ABAE, double 0x404BD570E113ABAE, double 0x404BD570E113ABAE, double 0x404BD570E113ABAE, double 0x404BD570E113ABAE, double 0x404BD570E113ABAE, double 0x404BD570E113ABAE, double 0x404BD570E113ABAE, double 0x404BD570E113ABAE, double 0x404BD570E113ABAE>, %2375
  %2377 = fmul <16 x double> %24, <double 0x40C24C71A75CD0BB, double 0x40C24C71A75CD0BB, double 0x40C24C71A75CD0BB, double 0x40C24C71A75CD0BB, double 0x40C24C71A75CD0BB, double 0x40C24C71A75CD0BB, double 0x40C24C71A75CD0BB, double 0x40C24C71A75CD0BB, double 0x40C24C71A75CD0BB, double 0x40C24C71A75CD0BB, double 0x40C24C71A75CD0BB, double 0x40C24C71A75CD0BB, double 0x40C24C71A75CD0BB, double 0x40C24C71A75CD0BB, double 0x40C24C71A75CD0BB, double 0x40C24C71A75CD0BB>
  %2378 = fsub <16 x double> %2376, %2377
  %extract5304 = extractelement <16 x double> %2378, i32 0
  %extract5305 = extractelement <16 x double> %2378, i32 1
  %extract5306 = extractelement <16 x double> %2378, i32 2
  %extract5307 = extractelement <16 x double> %2378, i32 3
  %extract5308 = extractelement <16 x double> %2378, i32 4
  %extract5309 = extractelement <16 x double> %2378, i32 5
  %extract5310 = extractelement <16 x double> %2378, i32 6
  %extract5311 = extractelement <16 x double> %2378, i32 7
  %extract5312 = extractelement <16 x double> %2378, i32 8
  %extract5313 = extractelement <16 x double> %2378, i32 9
  %extract5314 = extractelement <16 x double> %2378, i32 10
  %extract5315 = extractelement <16 x double> %2378, i32 11
  %extract5316 = extractelement <16 x double> %2378, i32 12
  %extract5317 = extractelement <16 x double> %2378, i32 13
  %extract5318 = extractelement <16 x double> %2378, i32 14
  %extract5319 = extractelement <16 x double> %2378, i32 15
  %2379 = tail call double @_Z3expd(double %extract5304) nounwind
  %2380 = tail call double @_Z3expd(double %extract5305) nounwind
  %2381 = tail call double @_Z3expd(double %extract5306) nounwind
  %2382 = tail call double @_Z3expd(double %extract5307) nounwind
  %2383 = tail call double @_Z3expd(double %extract5308) nounwind
  %2384 = tail call double @_Z3expd(double %extract5309) nounwind
  %2385 = tail call double @_Z3expd(double %extract5310) nounwind
  %2386 = tail call double @_Z3expd(double %extract5311) nounwind
  %2387 = tail call double @_Z3expd(double %extract5312) nounwind
  %2388 = tail call double @_Z3expd(double %extract5313) nounwind
  %2389 = tail call double @_Z3expd(double %extract5314) nounwind
  %2390 = tail call double @_Z3expd(double %extract5315) nounwind
  %2391 = tail call double @_Z3expd(double %extract5316) nounwind
  %2392 = tail call double @_Z3expd(double %extract5317) nounwind
  %2393 = tail call double @_Z3expd(double %extract5318) nounwind
  %2394 = tail call double @_Z3expd(double %extract5319) nounwind
  %temp.vect5339 = insertelement <16 x double> undef, double %2379, i32 0
  %temp.vect5340 = insertelement <16 x double> %temp.vect5339, double %2380, i32 1
  %temp.vect5341 = insertelement <16 x double> %temp.vect5340, double %2381, i32 2
  %temp.vect5342 = insertelement <16 x double> %temp.vect5341, double %2382, i32 3
  %temp.vect5343 = insertelement <16 x double> %temp.vect5342, double %2383, i32 4
  %temp.vect5344 = insertelement <16 x double> %temp.vect5343, double %2384, i32 5
  %temp.vect5345 = insertelement <16 x double> %temp.vect5344, double %2385, i32 6
  %temp.vect5346 = insertelement <16 x double> %temp.vect5345, double %2386, i32 7
  %temp.vect5347 = insertelement <16 x double> %temp.vect5346, double %2387, i32 8
  %temp.vect5348 = insertelement <16 x double> %temp.vect5347, double %2388, i32 9
  %temp.vect5349 = insertelement <16 x double> %temp.vect5348, double %2389, i32 10
  %temp.vect5350 = insertelement <16 x double> %temp.vect5349, double %2390, i32 11
  %temp.vect5351 = insertelement <16 x double> %temp.vect5350, double %2391, i32 12
  %temp.vect5352 = insertelement <16 x double> %temp.vect5351, double %2392, i32 13
  %temp.vect5353 = insertelement <16 x double> %temp.vect5352, double %2393, i32 14
  %temp.vect5354 = insertelement <16 x double> %temp.vect5353, double %2394, i32 15
  %2395 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2396 = load i64* %2395, align 8
  %2397 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2398 = load i64* %2397, align 8
  %2399 = add i64 %2396, %2398
  %extract5322 = add i64 %2399, 16035840
  %2400 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract5322
  %ptrTypeCast5338 = bitcast double addrspace(1)* %2400 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect5354, <16 x double> addrspace(1)* %ptrTypeCast5338, align 8
  %2401 = fmul <16 x double> %temp.vect97, <double 9.147000e+00, double 9.147000e+00, double 9.147000e+00, double 9.147000e+00, double 9.147000e+00, double 9.147000e+00, double 9.147000e+00, double 9.147000e+00, double 9.147000e+00, double 9.147000e+00, double 9.147000e+00, double 9.147000e+00, double 9.147000e+00, double 9.147000e+00, double 9.147000e+00, double 9.147000e+00>
  %2402 = fsub <16 x double> <double 0x40581D727BB2FEC5, double 0x40581D727BB2FEC5, double 0x40581D727BB2FEC5, double 0x40581D727BB2FEC5, double 0x40581D727BB2FEC5, double 0x40581D727BB2FEC5, double 0x40581D727BB2FEC5, double 0x40581D727BB2FEC5, double 0x40581D727BB2FEC5, double 0x40581D727BB2FEC5, double 0x40581D727BB2FEC5, double 0x40581D727BB2FEC5, double 0x40581D727BB2FEC5, double 0x40581D727BB2FEC5, double 0x40581D727BB2FEC5, double 0x40581D727BB2FEC5>, %2401
  %2403 = fmul <16 x double> %24, <double 0x40D70C372617C1BE, double 0x40D70C372617C1BE, double 0x40D70C372617C1BE, double 0x40D70C372617C1BE, double 0x40D70C372617C1BE, double 0x40D70C372617C1BE, double 0x40D70C372617C1BE, double 0x40D70C372617C1BE, double 0x40D70C372617C1BE, double 0x40D70C372617C1BE, double 0x40D70C372617C1BE, double 0x40D70C372617C1BE, double 0x40D70C372617C1BE, double 0x40D70C372617C1BE, double 0x40D70C372617C1BE, double 0x40D70C372617C1BE>
  %2404 = fsub <16 x double> %2402, %2403
  %extract5355 = extractelement <16 x double> %2404, i32 0
  %extract5356 = extractelement <16 x double> %2404, i32 1
  %extract5357 = extractelement <16 x double> %2404, i32 2
  %extract5358 = extractelement <16 x double> %2404, i32 3
  %extract5359 = extractelement <16 x double> %2404, i32 4
  %extract5360 = extractelement <16 x double> %2404, i32 5
  %extract5361 = extractelement <16 x double> %2404, i32 6
  %extract5362 = extractelement <16 x double> %2404, i32 7
  %extract5363 = extractelement <16 x double> %2404, i32 8
  %extract5364 = extractelement <16 x double> %2404, i32 9
  %extract5365 = extractelement <16 x double> %2404, i32 10
  %extract5366 = extractelement <16 x double> %2404, i32 11
  %extract5367 = extractelement <16 x double> %2404, i32 12
  %extract5368 = extractelement <16 x double> %2404, i32 13
  %extract5369 = extractelement <16 x double> %2404, i32 14
  %extract5370 = extractelement <16 x double> %2404, i32 15
  %2405 = tail call double @_Z3expd(double %extract5355) nounwind
  %2406 = tail call double @_Z3expd(double %extract5356) nounwind
  %2407 = tail call double @_Z3expd(double %extract5357) nounwind
  %2408 = tail call double @_Z3expd(double %extract5358) nounwind
  %2409 = tail call double @_Z3expd(double %extract5359) nounwind
  %2410 = tail call double @_Z3expd(double %extract5360) nounwind
  %2411 = tail call double @_Z3expd(double %extract5361) nounwind
  %2412 = tail call double @_Z3expd(double %extract5362) nounwind
  %2413 = tail call double @_Z3expd(double %extract5363) nounwind
  %2414 = tail call double @_Z3expd(double %extract5364) nounwind
  %2415 = tail call double @_Z3expd(double %extract5365) nounwind
  %2416 = tail call double @_Z3expd(double %extract5366) nounwind
  %2417 = tail call double @_Z3expd(double %extract5367) nounwind
  %2418 = tail call double @_Z3expd(double %extract5368) nounwind
  %2419 = tail call double @_Z3expd(double %extract5369) nounwind
  %2420 = tail call double @_Z3expd(double %extract5370) nounwind
  %temp.vect5390 = insertelement <16 x double> undef, double %2405, i32 0
  %temp.vect5391 = insertelement <16 x double> %temp.vect5390, double %2406, i32 1
  %temp.vect5392 = insertelement <16 x double> %temp.vect5391, double %2407, i32 2
  %temp.vect5393 = insertelement <16 x double> %temp.vect5392, double %2408, i32 3
  %temp.vect5394 = insertelement <16 x double> %temp.vect5393, double %2409, i32 4
  %temp.vect5395 = insertelement <16 x double> %temp.vect5394, double %2410, i32 5
  %temp.vect5396 = insertelement <16 x double> %temp.vect5395, double %2411, i32 6
  %temp.vect5397 = insertelement <16 x double> %temp.vect5396, double %2412, i32 7
  %temp.vect5398 = insertelement <16 x double> %temp.vect5397, double %2413, i32 8
  %temp.vect5399 = insertelement <16 x double> %temp.vect5398, double %2414, i32 9
  %temp.vect5400 = insertelement <16 x double> %temp.vect5399, double %2415, i32 10
  %temp.vect5401 = insertelement <16 x double> %temp.vect5400, double %2416, i32 11
  %temp.vect5402 = insertelement <16 x double> %temp.vect5401, double %2417, i32 12
  %temp.vect5403 = insertelement <16 x double> %temp.vect5402, double %2418, i32 13
  %temp.vect5404 = insertelement <16 x double> %temp.vect5403, double %2419, i32 14
  %temp.vect5405 = insertelement <16 x double> %temp.vect5404, double %2420, i32 15
  %2421 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2422 = load i64* %2421, align 8
  %2423 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2424 = load i64* %2423, align 8
  %2425 = add i64 %2422, %2424
  %extract5373 = add i64 %2425, 16146432
  %2426 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract5373
  %ptrTypeCast5389 = bitcast double addrspace(1)* %2426 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect5405, <16 x double> addrspace(1)* %ptrTypeCast5389, align 8
  %2427 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2428 = load i64* %2427, align 8
  %2429 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2430 = load i64* %2429, align 8
  %2431 = add i64 %2428, %2430
  %extract5408 = add i64 %2431, 16257024
  %2432 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract5408
  %ptrTypeCast5424 = bitcast double addrspace(1)* %2432 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14>, <16 x double> addrspace(1)* %ptrTypeCast5424, align 8
  %2433 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2434 = load i64* %2433, align 8
  %2435 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2436 = load i64* %2435, align 8
  %2437 = add i64 %2434, %2436
  %extract5427 = add i64 %2437, 16367616
  %2438 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract5427
  %ptrTypeCast5443 = bitcast double addrspace(1)* %2438 to <16 x double> addrspace(1)*
  store <16 x double> <double 9.000000e+13, double 9.000000e+13, double 9.000000e+13, double 9.000000e+13, double 9.000000e+13, double 9.000000e+13, double 9.000000e+13, double 9.000000e+13, double 9.000000e+13, double 9.000000e+13, double 9.000000e+13, double 9.000000e+13, double 9.000000e+13, double 9.000000e+13, double 9.000000e+13, double 9.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast5443, align 8
  %2439 = fmul <16 x double> %24, <double 0xC09F7377785729B3, double 0xC09F7377785729B3, double 0xC09F7377785729B3, double 0xC09F7377785729B3, double 0xC09F7377785729B3, double 0xC09F7377785729B3, double 0xC09F7377785729B3, double 0xC09F7377785729B3, double 0xC09F7377785729B3, double 0xC09F7377785729B3, double 0xC09F7377785729B3, double 0xC09F7377785729B3, double 0xC09F7377785729B3, double 0xC09F7377785729B3, double 0xC09F7377785729B3, double 0xC09F7377785729B3>
  %extract5444 = extractelement <16 x double> %2439, i32 0
  %extract5445 = extractelement <16 x double> %2439, i32 1
  %extract5446 = extractelement <16 x double> %2439, i32 2
  %extract5447 = extractelement <16 x double> %2439, i32 3
  %extract5448 = extractelement <16 x double> %2439, i32 4
  %extract5449 = extractelement <16 x double> %2439, i32 5
  %extract5450 = extractelement <16 x double> %2439, i32 6
  %extract5451 = extractelement <16 x double> %2439, i32 7
  %extract5452 = extractelement <16 x double> %2439, i32 8
  %extract5453 = extractelement <16 x double> %2439, i32 9
  %extract5454 = extractelement <16 x double> %2439, i32 10
  %extract5455 = extractelement <16 x double> %2439, i32 11
  %extract5456 = extractelement <16 x double> %2439, i32 12
  %extract5457 = extractelement <16 x double> %2439, i32 13
  %extract5458 = extractelement <16 x double> %2439, i32 14
  %extract5459 = extractelement <16 x double> %2439, i32 15
  %2440 = tail call double @_Z3expd(double %extract5444) nounwind
  %2441 = tail call double @_Z3expd(double %extract5445) nounwind
  %2442 = tail call double @_Z3expd(double %extract5446) nounwind
  %2443 = tail call double @_Z3expd(double %extract5447) nounwind
  %2444 = tail call double @_Z3expd(double %extract5448) nounwind
  %2445 = tail call double @_Z3expd(double %extract5449) nounwind
  %2446 = tail call double @_Z3expd(double %extract5450) nounwind
  %2447 = tail call double @_Z3expd(double %extract5451) nounwind
  %2448 = tail call double @_Z3expd(double %extract5452) nounwind
  %2449 = tail call double @_Z3expd(double %extract5453) nounwind
  %2450 = tail call double @_Z3expd(double %extract5454) nounwind
  %2451 = tail call double @_Z3expd(double %extract5455) nounwind
  %2452 = tail call double @_Z3expd(double %extract5456) nounwind
  %2453 = tail call double @_Z3expd(double %extract5457) nounwind
  %2454 = tail call double @_Z3expd(double %extract5458) nounwind
  %2455 = tail call double @_Z3expd(double %extract5459) nounwind
  %temp.vect5460 = insertelement <16 x double> undef, double %2440, i32 0
  %temp.vect5461 = insertelement <16 x double> %temp.vect5460, double %2441, i32 1
  %temp.vect5462 = insertelement <16 x double> %temp.vect5461, double %2442, i32 2
  %temp.vect5463 = insertelement <16 x double> %temp.vect5462, double %2443, i32 3
  %temp.vect5464 = insertelement <16 x double> %temp.vect5463, double %2444, i32 4
  %temp.vect5465 = insertelement <16 x double> %temp.vect5464, double %2445, i32 5
  %temp.vect5466 = insertelement <16 x double> %temp.vect5465, double %2446, i32 6
  %temp.vect5467 = insertelement <16 x double> %temp.vect5466, double %2447, i32 7
  %temp.vect5468 = insertelement <16 x double> %temp.vect5467, double %2448, i32 8
  %temp.vect5469 = insertelement <16 x double> %temp.vect5468, double %2449, i32 9
  %temp.vect5470 = insertelement <16 x double> %temp.vect5469, double %2450, i32 10
  %temp.vect5471 = insertelement <16 x double> %temp.vect5470, double %2451, i32 11
  %temp.vect5472 = insertelement <16 x double> %temp.vect5471, double %2452, i32 12
  %temp.vect5473 = insertelement <16 x double> %temp.vect5472, double %2453, i32 13
  %temp.vect5474 = insertelement <16 x double> %temp.vect5473, double %2454, i32 14
  %temp.vect5475 = insertelement <16 x double> %temp.vect5474, double %2455, i32 15
  %2456 = fmul <16 x double> %temp.vect5475, <double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13>
  %2457 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2458 = load i64* %2457, align 8
  %2459 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2460 = load i64* %2459, align 8
  %2461 = add i64 %2458, %2460
  %extract5478 = add i64 %2461, 16478208
  %2462 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract5478
  %ptrTypeCast5494 = bitcast double addrspace(1)* %2462 to <16 x double> addrspace(1)*
  store <16 x double> %2456, <16 x double> addrspace(1)* %ptrTypeCast5494, align 8
  %2463 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2464 = load i64* %2463, align 8
  %2465 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2466 = load i64* %2465, align 8
  %2467 = add i64 %2464, %2466
  %extract5497 = add i64 %2467, 16588800
  %2468 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract5497
  %ptrTypeCast5513 = bitcast double addrspace(1)* %2468 to <16 x double> addrspace(1)*
  store <16 x double> %2456, <16 x double> addrspace(1)* %ptrTypeCast5513, align 8
  %2469 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2470 = load i64* %2469, align 8
  %2471 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2472 = load i64* %2471, align 8
  %2473 = add i64 %2470, %2472
  %extract5516 = add i64 %2473, 16809984
  %2474 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract5516
  %ptrTypeCast5532 = bitcast double addrspace(1)* %2474 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.400000e+11, double 1.400000e+11, double 1.400000e+11, double 1.400000e+11, double 1.400000e+11, double 1.400000e+11, double 1.400000e+11, double 1.400000e+11, double 1.400000e+11, double 1.400000e+11, double 1.400000e+11, double 1.400000e+11, double 1.400000e+11, double 1.400000e+11, double 1.400000e+11, double 1.400000e+11>, <16 x double> addrspace(1)* %ptrTypeCast5532, align 8
  %2475 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2476 = load i64* %2475, align 8
  %2477 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2478 = load i64* %2477, align 8
  %2479 = add i64 %2476, %2478
  %extract5535 = add i64 %2479, 16920576
  %2480 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract5535
  %ptrTypeCast5551 = bitcast double addrspace(1)* %2480 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.800000e+10, double 1.800000e+10, double 1.800000e+10, double 1.800000e+10, double 1.800000e+10, double 1.800000e+10, double 1.800000e+10, double 1.800000e+10, double 1.800000e+10, double 1.800000e+10, double 1.800000e+10, double 1.800000e+10, double 1.800000e+10, double 1.800000e+10, double 1.800000e+10, double 1.800000e+10>, <16 x double> addrspace(1)* %ptrTypeCast5551, align 8
  %2481 = fmul <16 x double> %temp.vect97, <double 4.400000e-01, double 4.400000e-01, double 4.400000e-01, double 4.400000e-01, double 4.400000e-01, double 4.400000e-01, double 4.400000e-01, double 4.400000e-01, double 4.400000e-01, double 4.400000e-01, double 4.400000e-01, double 4.400000e-01, double 4.400000e-01, double 4.400000e-01, double 4.400000e-01, double 4.400000e-01>
  %2482 = fadd <16 x double> %2481, <double 0x403DB5E0E22D8722, double 0x403DB5E0E22D8722, double 0x403DB5E0E22D8722, double 0x403DB5E0E22D8722, double 0x403DB5E0E22D8722, double 0x403DB5E0E22D8722, double 0x403DB5E0E22D8722, double 0x403DB5E0E22D8722, double 0x403DB5E0E22D8722, double 0x403DB5E0E22D8722, double 0x403DB5E0E22D8722, double 0x403DB5E0E22D8722, double 0x403DB5E0E22D8722, double 0x403DB5E0E22D8722, double 0x403DB5E0E22D8722, double 0x403DB5E0E22D8722>
  %2483 = fmul <16 x double> %24, <double 0x40E5CFD1652BD3C3, double 0x40E5CFD1652BD3C3, double 0x40E5CFD1652BD3C3, double 0x40E5CFD1652BD3C3, double 0x40E5CFD1652BD3C3, double 0x40E5CFD1652BD3C3, double 0x40E5CFD1652BD3C3, double 0x40E5CFD1652BD3C3, double 0x40E5CFD1652BD3C3, double 0x40E5CFD1652BD3C3, double 0x40E5CFD1652BD3C3, double 0x40E5CFD1652BD3C3, double 0x40E5CFD1652BD3C3, double 0x40E5CFD1652BD3C3, double 0x40E5CFD1652BD3C3, double 0x40E5CFD1652BD3C3>
  %2484 = fsub <16 x double> %2482, %2483
  %extract5552 = extractelement <16 x double> %2484, i32 0
  %extract5553 = extractelement <16 x double> %2484, i32 1
  %extract5554 = extractelement <16 x double> %2484, i32 2
  %extract5555 = extractelement <16 x double> %2484, i32 3
  %extract5556 = extractelement <16 x double> %2484, i32 4
  %extract5557 = extractelement <16 x double> %2484, i32 5
  %extract5558 = extractelement <16 x double> %2484, i32 6
  %extract5559 = extractelement <16 x double> %2484, i32 7
  %extract5560 = extractelement <16 x double> %2484, i32 8
  %extract5561 = extractelement <16 x double> %2484, i32 9
  %extract5562 = extractelement <16 x double> %2484, i32 10
  %extract5563 = extractelement <16 x double> %2484, i32 11
  %extract5564 = extractelement <16 x double> %2484, i32 12
  %extract5565 = extractelement <16 x double> %2484, i32 13
  %extract5566 = extractelement <16 x double> %2484, i32 14
  %extract5567 = extractelement <16 x double> %2484, i32 15
  %2485 = tail call double @_Z3expd(double %extract5552) nounwind
  %2486 = tail call double @_Z3expd(double %extract5553) nounwind
  %2487 = tail call double @_Z3expd(double %extract5554) nounwind
  %2488 = tail call double @_Z3expd(double %extract5555) nounwind
  %2489 = tail call double @_Z3expd(double %extract5556) nounwind
  %2490 = tail call double @_Z3expd(double %extract5557) nounwind
  %2491 = tail call double @_Z3expd(double %extract5558) nounwind
  %2492 = tail call double @_Z3expd(double %extract5559) nounwind
  %2493 = tail call double @_Z3expd(double %extract5560) nounwind
  %2494 = tail call double @_Z3expd(double %extract5561) nounwind
  %2495 = tail call double @_Z3expd(double %extract5562) nounwind
  %2496 = tail call double @_Z3expd(double %extract5563) nounwind
  %2497 = tail call double @_Z3expd(double %extract5564) nounwind
  %2498 = tail call double @_Z3expd(double %extract5565) nounwind
  %2499 = tail call double @_Z3expd(double %extract5566) nounwind
  %2500 = tail call double @_Z3expd(double %extract5567) nounwind
  %temp.vect5587 = insertelement <16 x double> undef, double %2485, i32 0
  %temp.vect5588 = insertelement <16 x double> %temp.vect5587, double %2486, i32 1
  %temp.vect5589 = insertelement <16 x double> %temp.vect5588, double %2487, i32 2
  %temp.vect5590 = insertelement <16 x double> %temp.vect5589, double %2488, i32 3
  %temp.vect5591 = insertelement <16 x double> %temp.vect5590, double %2489, i32 4
  %temp.vect5592 = insertelement <16 x double> %temp.vect5591, double %2490, i32 5
  %temp.vect5593 = insertelement <16 x double> %temp.vect5592, double %2491, i32 6
  %temp.vect5594 = insertelement <16 x double> %temp.vect5593, double %2492, i32 7
  %temp.vect5595 = insertelement <16 x double> %temp.vect5594, double %2493, i32 8
  %temp.vect5596 = insertelement <16 x double> %temp.vect5595, double %2494, i32 9
  %temp.vect5597 = insertelement <16 x double> %temp.vect5596, double %2495, i32 10
  %temp.vect5598 = insertelement <16 x double> %temp.vect5597, double %2496, i32 11
  %temp.vect5599 = insertelement <16 x double> %temp.vect5598, double %2497, i32 12
  %temp.vect5600 = insertelement <16 x double> %temp.vect5599, double %2498, i32 13
  %temp.vect5601 = insertelement <16 x double> %temp.vect5600, double %2499, i32 14
  %temp.vect5602 = insertelement <16 x double> %temp.vect5601, double %2500, i32 15
  %2501 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2502 = load i64* %2501, align 8
  %2503 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2504 = load i64* %2503, align 8
  %2505 = add i64 %2502, %2504
  %extract5570 = add i64 %2505, 17031168
  %2506 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract5570
  %ptrTypeCast5586 = bitcast double addrspace(1)* %2506 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect5602, <16 x double> addrspace(1)* %ptrTypeCast5586, align 8
  %2507 = fadd <16 x double> %1175, <double 0x403BB53E524B266F, double 0x403BB53E524B266F, double 0x403BB53E524B266F, double 0x403BB53E524B266F, double 0x403BB53E524B266F, double 0x403BB53E524B266F, double 0x403BB53E524B266F, double 0x403BB53E524B266F, double 0x403BB53E524B266F, double 0x403BB53E524B266F, double 0x403BB53E524B266F, double 0x403BB53E524B266F, double 0x403BB53E524B266F, double 0x403BB53E524B266F, double 0x403BB53E524B266F, double 0x403BB53E524B266F>
  %2508 = fmul <16 x double> %24, <double 0x408C9ED5AD96A6A0, double 0x408C9ED5AD96A6A0, double 0x408C9ED5AD96A6A0, double 0x408C9ED5AD96A6A0, double 0x408C9ED5AD96A6A0, double 0x408C9ED5AD96A6A0, double 0x408C9ED5AD96A6A0, double 0x408C9ED5AD96A6A0, double 0x408C9ED5AD96A6A0, double 0x408C9ED5AD96A6A0, double 0x408C9ED5AD96A6A0, double 0x408C9ED5AD96A6A0, double 0x408C9ED5AD96A6A0, double 0x408C9ED5AD96A6A0, double 0x408C9ED5AD96A6A0, double 0x408C9ED5AD96A6A0>
  %2509 = fsub <16 x double> %2507, %2508
  %extract5603 = extractelement <16 x double> %2509, i32 0
  %extract5604 = extractelement <16 x double> %2509, i32 1
  %extract5605 = extractelement <16 x double> %2509, i32 2
  %extract5606 = extractelement <16 x double> %2509, i32 3
  %extract5607 = extractelement <16 x double> %2509, i32 4
  %extract5608 = extractelement <16 x double> %2509, i32 5
  %extract5609 = extractelement <16 x double> %2509, i32 6
  %extract5610 = extractelement <16 x double> %2509, i32 7
  %extract5611 = extractelement <16 x double> %2509, i32 8
  %extract5612 = extractelement <16 x double> %2509, i32 9
  %extract5613 = extractelement <16 x double> %2509, i32 10
  %extract5614 = extractelement <16 x double> %2509, i32 11
  %extract5615 = extractelement <16 x double> %2509, i32 12
  %extract5616 = extractelement <16 x double> %2509, i32 13
  %extract5617 = extractelement <16 x double> %2509, i32 14
  %extract5618 = extractelement <16 x double> %2509, i32 15
  %2510 = tail call double @_Z3expd(double %extract5603) nounwind
  %2511 = tail call double @_Z3expd(double %extract5604) nounwind
  %2512 = tail call double @_Z3expd(double %extract5605) nounwind
  %2513 = tail call double @_Z3expd(double %extract5606) nounwind
  %2514 = tail call double @_Z3expd(double %extract5607) nounwind
  %2515 = tail call double @_Z3expd(double %extract5608) nounwind
  %2516 = tail call double @_Z3expd(double %extract5609) nounwind
  %2517 = tail call double @_Z3expd(double %extract5610) nounwind
  %2518 = tail call double @_Z3expd(double %extract5611) nounwind
  %2519 = tail call double @_Z3expd(double %extract5612) nounwind
  %2520 = tail call double @_Z3expd(double %extract5613) nounwind
  %2521 = tail call double @_Z3expd(double %extract5614) nounwind
  %2522 = tail call double @_Z3expd(double %extract5615) nounwind
  %2523 = tail call double @_Z3expd(double %extract5616) nounwind
  %2524 = tail call double @_Z3expd(double %extract5617) nounwind
  %2525 = tail call double @_Z3expd(double %extract5618) nounwind
  %temp.vect5638 = insertelement <16 x double> undef, double %2510, i32 0
  %temp.vect5639 = insertelement <16 x double> %temp.vect5638, double %2511, i32 1
  %temp.vect5640 = insertelement <16 x double> %temp.vect5639, double %2512, i32 2
  %temp.vect5641 = insertelement <16 x double> %temp.vect5640, double %2513, i32 3
  %temp.vect5642 = insertelement <16 x double> %temp.vect5641, double %2514, i32 4
  %temp.vect5643 = insertelement <16 x double> %temp.vect5642, double %2515, i32 5
  %temp.vect5644 = insertelement <16 x double> %temp.vect5643, double %2516, i32 6
  %temp.vect5645 = insertelement <16 x double> %temp.vect5644, double %2517, i32 7
  %temp.vect5646 = insertelement <16 x double> %temp.vect5645, double %2518, i32 8
  %temp.vect5647 = insertelement <16 x double> %temp.vect5646, double %2519, i32 9
  %temp.vect5648 = insertelement <16 x double> %temp.vect5647, double %2520, i32 10
  %temp.vect5649 = insertelement <16 x double> %temp.vect5648, double %2521, i32 11
  %temp.vect5650 = insertelement <16 x double> %temp.vect5649, double %2522, i32 12
  %temp.vect5651 = insertelement <16 x double> %temp.vect5650, double %2523, i32 13
  %temp.vect5652 = insertelement <16 x double> %temp.vect5651, double %2524, i32 14
  %temp.vect5653 = insertelement <16 x double> %temp.vect5652, double %2525, i32 15
  %2526 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2527 = load i64* %2526, align 8
  %2528 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2529 = load i64* %2528, align 8
  %2530 = add i64 %2527, %2529
  %extract5621 = add i64 %2530, 17141760
  %2531 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract5621
  %ptrTypeCast5637 = bitcast double addrspace(1)* %2531 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect5653, <16 x double> addrspace(1)* %ptrTypeCast5637, align 8
  %2532 = fmul <16 x double> %temp.vect97, <double 1.930000e+00, double 1.930000e+00, double 1.930000e+00, double 1.930000e+00, double 1.930000e+00, double 1.930000e+00, double 1.930000e+00, double 1.930000e+00, double 1.930000e+00, double 1.930000e+00, double 1.930000e+00, double 1.930000e+00, double 1.930000e+00, double 1.930000e+00, double 1.930000e+00, double 1.930000e+00>
  %2533 = fadd <16 x double> %2532, <double 0x4031BDCEC84F8F8A, double 0x4031BDCEC84F8F8A, double 0x4031BDCEC84F8F8A, double 0x4031BDCEC84F8F8A, double 0x4031BDCEC84F8F8A, double 0x4031BDCEC84F8F8A, double 0x4031BDCEC84F8F8A, double 0x4031BDCEC84F8F8A, double 0x4031BDCEC84F8F8A, double 0x4031BDCEC84F8F8A, double 0x4031BDCEC84F8F8A, double 0x4031BDCEC84F8F8A, double 0x4031BDCEC84F8F8A, double 0x4031BDCEC84F8F8A, double 0x4031BDCEC84F8F8A, double 0x4031BDCEC84F8F8A>
  %2534 = fmul <16 x double> %24, <double 0x40B974A7E5C91D15, double 0x40B974A7E5C91D15, double 0x40B974A7E5C91D15, double 0x40B974A7E5C91D15, double 0x40B974A7E5C91D15, double 0x40B974A7E5C91D15, double 0x40B974A7E5C91D15, double 0x40B974A7E5C91D15, double 0x40B974A7E5C91D15, double 0x40B974A7E5C91D15, double 0x40B974A7E5C91D15, double 0x40B974A7E5C91D15, double 0x40B974A7E5C91D15, double 0x40B974A7E5C91D15, double 0x40B974A7E5C91D15, double 0x40B974A7E5C91D15>
  %2535 = fsub <16 x double> %2533, %2534
  %extract5654 = extractelement <16 x double> %2535, i32 0
  %extract5655 = extractelement <16 x double> %2535, i32 1
  %extract5656 = extractelement <16 x double> %2535, i32 2
  %extract5657 = extractelement <16 x double> %2535, i32 3
  %extract5658 = extractelement <16 x double> %2535, i32 4
  %extract5659 = extractelement <16 x double> %2535, i32 5
  %extract5660 = extractelement <16 x double> %2535, i32 6
  %extract5661 = extractelement <16 x double> %2535, i32 7
  %extract5662 = extractelement <16 x double> %2535, i32 8
  %extract5663 = extractelement <16 x double> %2535, i32 9
  %extract5664 = extractelement <16 x double> %2535, i32 10
  %extract5665 = extractelement <16 x double> %2535, i32 11
  %extract5666 = extractelement <16 x double> %2535, i32 12
  %extract5667 = extractelement <16 x double> %2535, i32 13
  %extract5668 = extractelement <16 x double> %2535, i32 14
  %extract5669 = extractelement <16 x double> %2535, i32 15
  %2536 = tail call double @_Z3expd(double %extract5654) nounwind
  %2537 = tail call double @_Z3expd(double %extract5655) nounwind
  %2538 = tail call double @_Z3expd(double %extract5656) nounwind
  %2539 = tail call double @_Z3expd(double %extract5657) nounwind
  %2540 = tail call double @_Z3expd(double %extract5658) nounwind
  %2541 = tail call double @_Z3expd(double %extract5659) nounwind
  %2542 = tail call double @_Z3expd(double %extract5660) nounwind
  %2543 = tail call double @_Z3expd(double %extract5661) nounwind
  %2544 = tail call double @_Z3expd(double %extract5662) nounwind
  %2545 = tail call double @_Z3expd(double %extract5663) nounwind
  %2546 = tail call double @_Z3expd(double %extract5664) nounwind
  %2547 = tail call double @_Z3expd(double %extract5665) nounwind
  %2548 = tail call double @_Z3expd(double %extract5666) nounwind
  %2549 = tail call double @_Z3expd(double %extract5667) nounwind
  %2550 = tail call double @_Z3expd(double %extract5668) nounwind
  %2551 = tail call double @_Z3expd(double %extract5669) nounwind
  %temp.vect5689 = insertelement <16 x double> undef, double %2536, i32 0
  %temp.vect5690 = insertelement <16 x double> %temp.vect5689, double %2537, i32 1
  %temp.vect5691 = insertelement <16 x double> %temp.vect5690, double %2538, i32 2
  %temp.vect5692 = insertelement <16 x double> %temp.vect5691, double %2539, i32 3
  %temp.vect5693 = insertelement <16 x double> %temp.vect5692, double %2540, i32 4
  %temp.vect5694 = insertelement <16 x double> %temp.vect5693, double %2541, i32 5
  %temp.vect5695 = insertelement <16 x double> %temp.vect5694, double %2542, i32 6
  %temp.vect5696 = insertelement <16 x double> %temp.vect5695, double %2543, i32 7
  %temp.vect5697 = insertelement <16 x double> %temp.vect5696, double %2544, i32 8
  %temp.vect5698 = insertelement <16 x double> %temp.vect5697, double %2545, i32 9
  %temp.vect5699 = insertelement <16 x double> %temp.vect5698, double %2546, i32 10
  %temp.vect5700 = insertelement <16 x double> %temp.vect5699, double %2547, i32 11
  %temp.vect5701 = insertelement <16 x double> %temp.vect5700, double %2548, i32 12
  %temp.vect5702 = insertelement <16 x double> %temp.vect5701, double %2549, i32 13
  %temp.vect5703 = insertelement <16 x double> %temp.vect5702, double %2550, i32 14
  %temp.vect5704 = insertelement <16 x double> %temp.vect5703, double %2551, i32 15
  %2552 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2553 = load i64* %2552, align 8
  %2554 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2555 = load i64* %2554, align 8
  %2556 = add i64 %2553, %2555
  %extract5672 = add i64 %2556, 17252352
  %2557 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract5672
  %ptrTypeCast5688 = bitcast double addrspace(1)* %2557 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect5704, <16 x double> addrspace(1)* %ptrTypeCast5688, align 8
  %2558 = fmul <16 x double> %temp.vect97, <double 1.910000e+00, double 1.910000e+00, double 1.910000e+00, double 1.910000e+00, double 1.910000e+00, double 1.910000e+00, double 1.910000e+00, double 1.910000e+00, double 1.910000e+00, double 1.910000e+00, double 1.910000e+00, double 1.910000e+00, double 1.910000e+00, double 1.910000e+00, double 1.910000e+00, double 1.910000e+00>
  %2559 = fadd <16 x double> %2558, <double 0x403087BB88D7AA76, double 0x403087BB88D7AA76, double 0x403087BB88D7AA76, double 0x403087BB88D7AA76, double 0x403087BB88D7AA76, double 0x403087BB88D7AA76, double 0x403087BB88D7AA76, double 0x403087BB88D7AA76, double 0x403087BB88D7AA76, double 0x403087BB88D7AA76, double 0x403087BB88D7AA76, double 0x403087BB88D7AA76, double 0x403087BB88D7AA76, double 0x403087BB88D7AA76, double 0x403087BB88D7AA76, double 0x403087BB88D7AA76>
  %2560 = fmul <16 x double> %24, <double 0x409D681F1172EF0B, double 0x409D681F1172EF0B, double 0x409D681F1172EF0B, double 0x409D681F1172EF0B, double 0x409D681F1172EF0B, double 0x409D681F1172EF0B, double 0x409D681F1172EF0B, double 0x409D681F1172EF0B, double 0x409D681F1172EF0B, double 0x409D681F1172EF0B, double 0x409D681F1172EF0B, double 0x409D681F1172EF0B, double 0x409D681F1172EF0B, double 0x409D681F1172EF0B, double 0x409D681F1172EF0B, double 0x409D681F1172EF0B>
  %2561 = fsub <16 x double> %2559, %2560
  %extract5705 = extractelement <16 x double> %2561, i32 0
  %extract5706 = extractelement <16 x double> %2561, i32 1
  %extract5707 = extractelement <16 x double> %2561, i32 2
  %extract5708 = extractelement <16 x double> %2561, i32 3
  %extract5709 = extractelement <16 x double> %2561, i32 4
  %extract5710 = extractelement <16 x double> %2561, i32 5
  %extract5711 = extractelement <16 x double> %2561, i32 6
  %extract5712 = extractelement <16 x double> %2561, i32 7
  %extract5713 = extractelement <16 x double> %2561, i32 8
  %extract5714 = extractelement <16 x double> %2561, i32 9
  %extract5715 = extractelement <16 x double> %2561, i32 10
  %extract5716 = extractelement <16 x double> %2561, i32 11
  %extract5717 = extractelement <16 x double> %2561, i32 12
  %extract5718 = extractelement <16 x double> %2561, i32 13
  %extract5719 = extractelement <16 x double> %2561, i32 14
  %extract5720 = extractelement <16 x double> %2561, i32 15
  %2562 = tail call double @_Z3expd(double %extract5705) nounwind
  %2563 = tail call double @_Z3expd(double %extract5706) nounwind
  %2564 = tail call double @_Z3expd(double %extract5707) nounwind
  %2565 = tail call double @_Z3expd(double %extract5708) nounwind
  %2566 = tail call double @_Z3expd(double %extract5709) nounwind
  %2567 = tail call double @_Z3expd(double %extract5710) nounwind
  %2568 = tail call double @_Z3expd(double %extract5711) nounwind
  %2569 = tail call double @_Z3expd(double %extract5712) nounwind
  %2570 = tail call double @_Z3expd(double %extract5713) nounwind
  %2571 = tail call double @_Z3expd(double %extract5714) nounwind
  %2572 = tail call double @_Z3expd(double %extract5715) nounwind
  %2573 = tail call double @_Z3expd(double %extract5716) nounwind
  %2574 = tail call double @_Z3expd(double %extract5717) nounwind
  %2575 = tail call double @_Z3expd(double %extract5718) nounwind
  %2576 = tail call double @_Z3expd(double %extract5719) nounwind
  %2577 = tail call double @_Z3expd(double %extract5720) nounwind
  %temp.vect5740 = insertelement <16 x double> undef, double %2562, i32 0
  %temp.vect5741 = insertelement <16 x double> %temp.vect5740, double %2563, i32 1
  %temp.vect5742 = insertelement <16 x double> %temp.vect5741, double %2564, i32 2
  %temp.vect5743 = insertelement <16 x double> %temp.vect5742, double %2565, i32 3
  %temp.vect5744 = insertelement <16 x double> %temp.vect5743, double %2566, i32 4
  %temp.vect5745 = insertelement <16 x double> %temp.vect5744, double %2567, i32 5
  %temp.vect5746 = insertelement <16 x double> %temp.vect5745, double %2568, i32 6
  %temp.vect5747 = insertelement <16 x double> %temp.vect5746, double %2569, i32 7
  %temp.vect5748 = insertelement <16 x double> %temp.vect5747, double %2570, i32 8
  %temp.vect5749 = insertelement <16 x double> %temp.vect5748, double %2571, i32 9
  %temp.vect5750 = insertelement <16 x double> %temp.vect5749, double %2572, i32 10
  %temp.vect5751 = insertelement <16 x double> %temp.vect5750, double %2573, i32 11
  %temp.vect5752 = insertelement <16 x double> %temp.vect5751, double %2574, i32 12
  %temp.vect5753 = insertelement <16 x double> %temp.vect5752, double %2575, i32 13
  %temp.vect5754 = insertelement <16 x double> %temp.vect5753, double %2576, i32 14
  %temp.vect5755 = insertelement <16 x double> %temp.vect5754, double %2577, i32 15
  %2578 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2579 = load i64* %2578, align 8
  %2580 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2581 = load i64* %2580, align 8
  %2582 = add i64 %2579, %2581
  %extract5723 = add i64 %2582, 17362944
  %2583 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract5723
  %ptrTypeCast5739 = bitcast double addrspace(1)* %2583 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect5755, <16 x double> addrspace(1)* %ptrTypeCast5739, align 8
  %2584 = fmul <16 x double> %temp.vect97, <double 1.830000e+00, double 1.830000e+00, double 1.830000e+00, double 1.830000e+00, double 1.830000e+00, double 1.830000e+00, double 1.830000e+00, double 1.830000e+00, double 1.830000e+00, double 1.830000e+00, double 1.830000e+00, double 1.830000e+00, double 1.830000e+00, double 1.830000e+00, double 1.830000e+00, double 1.830000e+00>
  %2585 = fmul <16 x double> %24, <double 0x405BAD4A6A875D57, double 0x405BAD4A6A875D57, double 0x405BAD4A6A875D57, double 0x405BAD4A6A875D57, double 0x405BAD4A6A875D57, double 0x405BAD4A6A875D57, double 0x405BAD4A6A875D57, double 0x405BAD4A6A875D57, double 0x405BAD4A6A875D57, double 0x405BAD4A6A875D57, double 0x405BAD4A6A875D57, double 0x405BAD4A6A875D57, double 0x405BAD4A6A875D57, double 0x405BAD4A6A875D57, double 0x405BAD4A6A875D57, double 0x405BAD4A6A875D57>
  %2586 = fsub <16 x double> %2584, %2585
  %extract5756 = extractelement <16 x double> %2586, i32 0
  %extract5757 = extractelement <16 x double> %2586, i32 1
  %extract5758 = extractelement <16 x double> %2586, i32 2
  %extract5759 = extractelement <16 x double> %2586, i32 3
  %extract5760 = extractelement <16 x double> %2586, i32 4
  %extract5761 = extractelement <16 x double> %2586, i32 5
  %extract5762 = extractelement <16 x double> %2586, i32 6
  %extract5763 = extractelement <16 x double> %2586, i32 7
  %extract5764 = extractelement <16 x double> %2586, i32 8
  %extract5765 = extractelement <16 x double> %2586, i32 9
  %extract5766 = extractelement <16 x double> %2586, i32 10
  %extract5767 = extractelement <16 x double> %2586, i32 11
  %extract5768 = extractelement <16 x double> %2586, i32 12
  %extract5769 = extractelement <16 x double> %2586, i32 13
  %extract5770 = extractelement <16 x double> %2586, i32 14
  %extract5771 = extractelement <16 x double> %2586, i32 15
  %2587 = tail call double @_Z3expd(double %extract5756) nounwind
  %2588 = tail call double @_Z3expd(double %extract5757) nounwind
  %2589 = tail call double @_Z3expd(double %extract5758) nounwind
  %2590 = tail call double @_Z3expd(double %extract5759) nounwind
  %2591 = tail call double @_Z3expd(double %extract5760) nounwind
  %2592 = tail call double @_Z3expd(double %extract5761) nounwind
  %2593 = tail call double @_Z3expd(double %extract5762) nounwind
  %2594 = tail call double @_Z3expd(double %extract5763) nounwind
  %2595 = tail call double @_Z3expd(double %extract5764) nounwind
  %2596 = tail call double @_Z3expd(double %extract5765) nounwind
  %2597 = tail call double @_Z3expd(double %extract5766) nounwind
  %2598 = tail call double @_Z3expd(double %extract5767) nounwind
  %2599 = tail call double @_Z3expd(double %extract5768) nounwind
  %2600 = tail call double @_Z3expd(double %extract5769) nounwind
  %2601 = tail call double @_Z3expd(double %extract5770) nounwind
  %2602 = tail call double @_Z3expd(double %extract5771) nounwind
  %temp.vect5772 = insertelement <16 x double> undef, double %2587, i32 0
  %temp.vect5773 = insertelement <16 x double> %temp.vect5772, double %2588, i32 1
  %temp.vect5774 = insertelement <16 x double> %temp.vect5773, double %2589, i32 2
  %temp.vect5775 = insertelement <16 x double> %temp.vect5774, double %2590, i32 3
  %temp.vect5776 = insertelement <16 x double> %temp.vect5775, double %2591, i32 4
  %temp.vect5777 = insertelement <16 x double> %temp.vect5776, double %2592, i32 5
  %temp.vect5778 = insertelement <16 x double> %temp.vect5777, double %2593, i32 6
  %temp.vect5779 = insertelement <16 x double> %temp.vect5778, double %2594, i32 7
  %temp.vect5780 = insertelement <16 x double> %temp.vect5779, double %2595, i32 8
  %temp.vect5781 = insertelement <16 x double> %temp.vect5780, double %2596, i32 9
  %temp.vect5782 = insertelement <16 x double> %temp.vect5781, double %2597, i32 10
  %temp.vect5783 = insertelement <16 x double> %temp.vect5782, double %2598, i32 11
  %temp.vect5784 = insertelement <16 x double> %temp.vect5783, double %2599, i32 12
  %temp.vect5785 = insertelement <16 x double> %temp.vect5784, double %2600, i32 13
  %temp.vect5786 = insertelement <16 x double> %temp.vect5785, double %2601, i32 14
  %temp.vect5787 = insertelement <16 x double> %temp.vect5786, double %2602, i32 15
  %2603 = fmul <16 x double> %temp.vect5787, <double 1.920000e+07, double 1.920000e+07, double 1.920000e+07, double 1.920000e+07, double 1.920000e+07, double 1.920000e+07, double 1.920000e+07, double 1.920000e+07, double 1.920000e+07, double 1.920000e+07, double 1.920000e+07, double 1.920000e+07, double 1.920000e+07, double 1.920000e+07, double 1.920000e+07, double 1.920000e+07>
  %2604 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2605 = load i64* %2604, align 8
  %2606 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2607 = load i64* %2606, align 8
  %2608 = add i64 %2605, %2607
  %extract5790 = add i64 %2608, 17473536
  %2609 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract5790
  %ptrTypeCast5806 = bitcast double addrspace(1)* %2609 to <16 x double> addrspace(1)*
  store <16 x double> %2603, <16 x double> addrspace(1)* %ptrTypeCast5806, align 8
  %2610 = fmul <16 x double> %temp.vect5787, <double 3.840000e+05, double 3.840000e+05, double 3.840000e+05, double 3.840000e+05, double 3.840000e+05, double 3.840000e+05, double 3.840000e+05, double 3.840000e+05, double 3.840000e+05, double 3.840000e+05, double 3.840000e+05, double 3.840000e+05, double 3.840000e+05, double 3.840000e+05, double 3.840000e+05, double 3.840000e+05>
  %2611 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2612 = load i64* %2611, align 8
  %2613 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2614 = load i64* %2613, align 8
  %2615 = add i64 %2612, %2614
  %extract5809 = add i64 %2615, 17584128
  %2616 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract5809
  %ptrTypeCast5825 = bitcast double addrspace(1)* %2616 to <16 x double> addrspace(1)*
  store <16 x double> %2610, <16 x double> addrspace(1)* %ptrTypeCast5825, align 8
  %2617 = fadd <16 x double> %481, <double 0x402E3161290FC3C2, double 0x402E3161290FC3C2, double 0x402E3161290FC3C2, double 0x402E3161290FC3C2, double 0x402E3161290FC3C2, double 0x402E3161290FC3C2, double 0x402E3161290FC3C2, double 0x402E3161290FC3C2, double 0x402E3161290FC3C2, double 0x402E3161290FC3C2, double 0x402E3161290FC3C2, double 0x402E3161290FC3C2, double 0x402E3161290FC3C2, double 0x402E3161290FC3C2, double 0x402E3161290FC3C2, double 0x402E3161290FC3C2>
  %2618 = fmul <16 x double> %24, <double 0x4093A82AAB8A5CE6, double 0x4093A82AAB8A5CE6, double 0x4093A82AAB8A5CE6, double 0x4093A82AAB8A5CE6, double 0x4093A82AAB8A5CE6, double 0x4093A82AAB8A5CE6, double 0x4093A82AAB8A5CE6, double 0x4093A82AAB8A5CE6, double 0x4093A82AAB8A5CE6, double 0x4093A82AAB8A5CE6, double 0x4093A82AAB8A5CE6, double 0x4093A82AAB8A5CE6, double 0x4093A82AAB8A5CE6, double 0x4093A82AAB8A5CE6, double 0x4093A82AAB8A5CE6, double 0x4093A82AAB8A5CE6>
  %2619 = fsub <16 x double> %2617, %2618
  %extract5826 = extractelement <16 x double> %2619, i32 0
  %extract5827 = extractelement <16 x double> %2619, i32 1
  %extract5828 = extractelement <16 x double> %2619, i32 2
  %extract5829 = extractelement <16 x double> %2619, i32 3
  %extract5830 = extractelement <16 x double> %2619, i32 4
  %extract5831 = extractelement <16 x double> %2619, i32 5
  %extract5832 = extractelement <16 x double> %2619, i32 6
  %extract5833 = extractelement <16 x double> %2619, i32 7
  %extract5834 = extractelement <16 x double> %2619, i32 8
  %extract5835 = extractelement <16 x double> %2619, i32 9
  %extract5836 = extractelement <16 x double> %2619, i32 10
  %extract5837 = extractelement <16 x double> %2619, i32 11
  %extract5838 = extractelement <16 x double> %2619, i32 12
  %extract5839 = extractelement <16 x double> %2619, i32 13
  %extract5840 = extractelement <16 x double> %2619, i32 14
  %extract5841 = extractelement <16 x double> %2619, i32 15
  %2620 = tail call double @_Z3expd(double %extract5826) nounwind
  %2621 = tail call double @_Z3expd(double %extract5827) nounwind
  %2622 = tail call double @_Z3expd(double %extract5828) nounwind
  %2623 = tail call double @_Z3expd(double %extract5829) nounwind
  %2624 = tail call double @_Z3expd(double %extract5830) nounwind
  %2625 = tail call double @_Z3expd(double %extract5831) nounwind
  %2626 = tail call double @_Z3expd(double %extract5832) nounwind
  %2627 = tail call double @_Z3expd(double %extract5833) nounwind
  %2628 = tail call double @_Z3expd(double %extract5834) nounwind
  %2629 = tail call double @_Z3expd(double %extract5835) nounwind
  %2630 = tail call double @_Z3expd(double %extract5836) nounwind
  %2631 = tail call double @_Z3expd(double %extract5837) nounwind
  %2632 = tail call double @_Z3expd(double %extract5838) nounwind
  %2633 = tail call double @_Z3expd(double %extract5839) nounwind
  %2634 = tail call double @_Z3expd(double %extract5840) nounwind
  %2635 = tail call double @_Z3expd(double %extract5841) nounwind
  %temp.vect5861 = insertelement <16 x double> undef, double %2620, i32 0
  %temp.vect5862 = insertelement <16 x double> %temp.vect5861, double %2621, i32 1
  %temp.vect5863 = insertelement <16 x double> %temp.vect5862, double %2622, i32 2
  %temp.vect5864 = insertelement <16 x double> %temp.vect5863, double %2623, i32 3
  %temp.vect5865 = insertelement <16 x double> %temp.vect5864, double %2624, i32 4
  %temp.vect5866 = insertelement <16 x double> %temp.vect5865, double %2625, i32 5
  %temp.vect5867 = insertelement <16 x double> %temp.vect5866, double %2626, i32 6
  %temp.vect5868 = insertelement <16 x double> %temp.vect5867, double %2627, i32 7
  %temp.vect5869 = insertelement <16 x double> %temp.vect5868, double %2628, i32 8
  %temp.vect5870 = insertelement <16 x double> %temp.vect5869, double %2629, i32 9
  %temp.vect5871 = insertelement <16 x double> %temp.vect5870, double %2630, i32 10
  %temp.vect5872 = insertelement <16 x double> %temp.vect5871, double %2631, i32 11
  %temp.vect5873 = insertelement <16 x double> %temp.vect5872, double %2632, i32 12
  %temp.vect5874 = insertelement <16 x double> %temp.vect5873, double %2633, i32 13
  %temp.vect5875 = insertelement <16 x double> %temp.vect5874, double %2634, i32 14
  %temp.vect5876 = insertelement <16 x double> %temp.vect5875, double %2635, i32 15
  %2636 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2637 = load i64* %2636, align 8
  %2638 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2639 = load i64* %2638, align 8
  %2640 = add i64 %2637, %2639
  %extract5844 = add i64 %2640, 17694720
  %2641 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract5844
  %ptrTypeCast5860 = bitcast double addrspace(1)* %2641 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect5876, <16 x double> addrspace(1)* %ptrTypeCast5860, align 8
  %2642 = fmul <16 x double> %24, <double 0x40DDE0E4B295E9E2, double 0x40DDE0E4B295E9E2, double 0x40DDE0E4B295E9E2, double 0x40DDE0E4B295E9E2, double 0x40DDE0E4B295E9E2, double 0x40DDE0E4B295E9E2, double 0x40DDE0E4B295E9E2, double 0x40DDE0E4B295E9E2, double 0x40DDE0E4B295E9E2, double 0x40DDE0E4B295E9E2, double 0x40DDE0E4B295E9E2, double 0x40DDE0E4B295E9E2, double 0x40DDE0E4B295E9E2, double 0x40DDE0E4B295E9E2, double 0x40DDE0E4B295E9E2, double 0x40DDE0E4B295E9E2>
  %2643 = fsub <16 x double> <double 0x403F5F99D95A79C9, double 0x403F5F99D95A79C9, double 0x403F5F99D95A79C9, double 0x403F5F99D95A79C9, double 0x403F5F99D95A79C9, double 0x403F5F99D95A79C9, double 0x403F5F99D95A79C9, double 0x403F5F99D95A79C9, double 0x403F5F99D95A79C9, double 0x403F5F99D95A79C9, double 0x403F5F99D95A79C9, double 0x403F5F99D95A79C9, double 0x403F5F99D95A79C9, double 0x403F5F99D95A79C9, double 0x403F5F99D95A79C9, double 0x403F5F99D95A79C9>, %2642
  %extract5877 = extractelement <16 x double> %2643, i32 0
  %extract5878 = extractelement <16 x double> %2643, i32 1
  %extract5879 = extractelement <16 x double> %2643, i32 2
  %extract5880 = extractelement <16 x double> %2643, i32 3
  %extract5881 = extractelement <16 x double> %2643, i32 4
  %extract5882 = extractelement <16 x double> %2643, i32 5
  %extract5883 = extractelement <16 x double> %2643, i32 6
  %extract5884 = extractelement <16 x double> %2643, i32 7
  %extract5885 = extractelement <16 x double> %2643, i32 8
  %extract5886 = extractelement <16 x double> %2643, i32 9
  %extract5887 = extractelement <16 x double> %2643, i32 10
  %extract5888 = extractelement <16 x double> %2643, i32 11
  %extract5889 = extractelement <16 x double> %2643, i32 12
  %extract5890 = extractelement <16 x double> %2643, i32 13
  %extract5891 = extractelement <16 x double> %2643, i32 14
  %extract5892 = extractelement <16 x double> %2643, i32 15
  %2644 = tail call double @_Z3expd(double %extract5877) nounwind
  %2645 = tail call double @_Z3expd(double %extract5878) nounwind
  %2646 = tail call double @_Z3expd(double %extract5879) nounwind
  %2647 = tail call double @_Z3expd(double %extract5880) nounwind
  %2648 = tail call double @_Z3expd(double %extract5881) nounwind
  %2649 = tail call double @_Z3expd(double %extract5882) nounwind
  %2650 = tail call double @_Z3expd(double %extract5883) nounwind
  %2651 = tail call double @_Z3expd(double %extract5884) nounwind
  %2652 = tail call double @_Z3expd(double %extract5885) nounwind
  %2653 = tail call double @_Z3expd(double %extract5886) nounwind
  %2654 = tail call double @_Z3expd(double %extract5887) nounwind
  %2655 = tail call double @_Z3expd(double %extract5888) nounwind
  %2656 = tail call double @_Z3expd(double %extract5889) nounwind
  %2657 = tail call double @_Z3expd(double %extract5890) nounwind
  %2658 = tail call double @_Z3expd(double %extract5891) nounwind
  %2659 = tail call double @_Z3expd(double %extract5892) nounwind
  %temp.vect5912 = insertelement <16 x double> undef, double %2644, i32 0
  %temp.vect5913 = insertelement <16 x double> %temp.vect5912, double %2645, i32 1
  %temp.vect5914 = insertelement <16 x double> %temp.vect5913, double %2646, i32 2
  %temp.vect5915 = insertelement <16 x double> %temp.vect5914, double %2647, i32 3
  %temp.vect5916 = insertelement <16 x double> %temp.vect5915, double %2648, i32 4
  %temp.vect5917 = insertelement <16 x double> %temp.vect5916, double %2649, i32 5
  %temp.vect5918 = insertelement <16 x double> %temp.vect5917, double %2650, i32 6
  %temp.vect5919 = insertelement <16 x double> %temp.vect5918, double %2651, i32 7
  %temp.vect5920 = insertelement <16 x double> %temp.vect5919, double %2652, i32 8
  %temp.vect5921 = insertelement <16 x double> %temp.vect5920, double %2653, i32 9
  %temp.vect5922 = insertelement <16 x double> %temp.vect5921, double %2654, i32 10
  %temp.vect5923 = insertelement <16 x double> %temp.vect5922, double %2655, i32 11
  %temp.vect5924 = insertelement <16 x double> %temp.vect5923, double %2656, i32 12
  %temp.vect5925 = insertelement <16 x double> %temp.vect5924, double %2657, i32 13
  %temp.vect5926 = insertelement <16 x double> %temp.vect5925, double %2658, i32 14
  %temp.vect5927 = insertelement <16 x double> %temp.vect5926, double %2659, i32 15
  %2660 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2661 = load i64* %2660, align 8
  %2662 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2663 = load i64* %2662, align 8
  %2664 = add i64 %2661, %2663
  %extract5895 = add i64 %2664, 17805312
  %2665 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract5895
  %ptrTypeCast5911 = bitcast double addrspace(1)* %2665 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect5927, <16 x double> addrspace(1)* %ptrTypeCast5911, align 8
  %2666 = fmul <16 x double> %24, <double 0x40BB850889A02752, double 0x40BB850889A02752, double 0x40BB850889A02752, double 0x40BB850889A02752, double 0x40BB850889A02752, double 0x40BB850889A02752, double 0x40BB850889A02752, double 0x40BB850889A02752, double 0x40BB850889A02752, double 0x40BB850889A02752, double 0x40BB850889A02752, double 0x40BB850889A02752, double 0x40BB850889A02752, double 0x40BB850889A02752, double 0x40BB850889A02752, double 0x40BB850889A02752>
  %2667 = fsub <16 x double> <double 0x403C52FCB196E661, double 0x403C52FCB196E661, double 0x403C52FCB196E661, double 0x403C52FCB196E661, double 0x403C52FCB196E661, double 0x403C52FCB196E661, double 0x403C52FCB196E661, double 0x403C52FCB196E661, double 0x403C52FCB196E661, double 0x403C52FCB196E661, double 0x403C52FCB196E661, double 0x403C52FCB196E661, double 0x403C52FCB196E661, double 0x403C52FCB196E661, double 0x403C52FCB196E661, double 0x403C52FCB196E661>, %2666
  %extract5928 = extractelement <16 x double> %2667, i32 0
  %extract5929 = extractelement <16 x double> %2667, i32 1
  %extract5930 = extractelement <16 x double> %2667, i32 2
  %extract5931 = extractelement <16 x double> %2667, i32 3
  %extract5932 = extractelement <16 x double> %2667, i32 4
  %extract5933 = extractelement <16 x double> %2667, i32 5
  %extract5934 = extractelement <16 x double> %2667, i32 6
  %extract5935 = extractelement <16 x double> %2667, i32 7
  %extract5936 = extractelement <16 x double> %2667, i32 8
  %extract5937 = extractelement <16 x double> %2667, i32 9
  %extract5938 = extractelement <16 x double> %2667, i32 10
  %extract5939 = extractelement <16 x double> %2667, i32 11
  %extract5940 = extractelement <16 x double> %2667, i32 12
  %extract5941 = extractelement <16 x double> %2667, i32 13
  %extract5942 = extractelement <16 x double> %2667, i32 14
  %extract5943 = extractelement <16 x double> %2667, i32 15
  %2668 = tail call double @_Z3expd(double %extract5928) nounwind
  %2669 = tail call double @_Z3expd(double %extract5929) nounwind
  %2670 = tail call double @_Z3expd(double %extract5930) nounwind
  %2671 = tail call double @_Z3expd(double %extract5931) nounwind
  %2672 = tail call double @_Z3expd(double %extract5932) nounwind
  %2673 = tail call double @_Z3expd(double %extract5933) nounwind
  %2674 = tail call double @_Z3expd(double %extract5934) nounwind
  %2675 = tail call double @_Z3expd(double %extract5935) nounwind
  %2676 = tail call double @_Z3expd(double %extract5936) nounwind
  %2677 = tail call double @_Z3expd(double %extract5937) nounwind
  %2678 = tail call double @_Z3expd(double %extract5938) nounwind
  %2679 = tail call double @_Z3expd(double %extract5939) nounwind
  %2680 = tail call double @_Z3expd(double %extract5940) nounwind
  %2681 = tail call double @_Z3expd(double %extract5941) nounwind
  %2682 = tail call double @_Z3expd(double %extract5942) nounwind
  %2683 = tail call double @_Z3expd(double %extract5943) nounwind
  %temp.vect5963 = insertelement <16 x double> undef, double %2668, i32 0
  %temp.vect5964 = insertelement <16 x double> %temp.vect5963, double %2669, i32 1
  %temp.vect5965 = insertelement <16 x double> %temp.vect5964, double %2670, i32 2
  %temp.vect5966 = insertelement <16 x double> %temp.vect5965, double %2671, i32 3
  %temp.vect5967 = insertelement <16 x double> %temp.vect5966, double %2672, i32 4
  %temp.vect5968 = insertelement <16 x double> %temp.vect5967, double %2673, i32 5
  %temp.vect5969 = insertelement <16 x double> %temp.vect5968, double %2674, i32 6
  %temp.vect5970 = insertelement <16 x double> %temp.vect5969, double %2675, i32 7
  %temp.vect5971 = insertelement <16 x double> %temp.vect5970, double %2676, i32 8
  %temp.vect5972 = insertelement <16 x double> %temp.vect5971, double %2677, i32 9
  %temp.vect5973 = insertelement <16 x double> %temp.vect5972, double %2678, i32 10
  %temp.vect5974 = insertelement <16 x double> %temp.vect5973, double %2679, i32 11
  %temp.vect5975 = insertelement <16 x double> %temp.vect5974, double %2680, i32 12
  %temp.vect5976 = insertelement <16 x double> %temp.vect5975, double %2681, i32 13
  %temp.vect5977 = insertelement <16 x double> %temp.vect5976, double %2682, i32 14
  %temp.vect5978 = insertelement <16 x double> %temp.vect5977, double %2683, i32 15
  %2684 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2685 = load i64* %2684, align 8
  %2686 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2687 = load i64* %2686, align 8
  %2688 = add i64 %2685, %2687
  %extract5946 = add i64 %2688, 17915904
  %2689 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract5946
  %ptrTypeCast5962 = bitcast double addrspace(1)* %2689 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect5978, <16 x double> addrspace(1)* %ptrTypeCast5962, align 8
  %2690 = fmul <16 x double> %24, <double 0x40AF7377785729B3, double 0x40AF7377785729B3, double 0x40AF7377785729B3, double 0x40AF7377785729B3, double 0x40AF7377785729B3, double 0x40AF7377785729B3, double 0x40AF7377785729B3, double 0x40AF7377785729B3, double 0x40AF7377785729B3, double 0x40AF7377785729B3, double 0x40AF7377785729B3, double 0x40AF7377785729B3, double 0x40AF7377785729B3, double 0x40AF7377785729B3, double 0x40AF7377785729B3, double 0x40AF7377785729B3>
  %2691 = fsub <16 x double> %2004, %2690
  %extract5979 = extractelement <16 x double> %2691, i32 0
  %extract5980 = extractelement <16 x double> %2691, i32 1
  %extract5981 = extractelement <16 x double> %2691, i32 2
  %extract5982 = extractelement <16 x double> %2691, i32 3
  %extract5983 = extractelement <16 x double> %2691, i32 4
  %extract5984 = extractelement <16 x double> %2691, i32 5
  %extract5985 = extractelement <16 x double> %2691, i32 6
  %extract5986 = extractelement <16 x double> %2691, i32 7
  %extract5987 = extractelement <16 x double> %2691, i32 8
  %extract5988 = extractelement <16 x double> %2691, i32 9
  %extract5989 = extractelement <16 x double> %2691, i32 10
  %extract5990 = extractelement <16 x double> %2691, i32 11
  %extract5991 = extractelement <16 x double> %2691, i32 12
  %extract5992 = extractelement <16 x double> %2691, i32 13
  %extract5993 = extractelement <16 x double> %2691, i32 14
  %extract5994 = extractelement <16 x double> %2691, i32 15
  %2692 = tail call double @_Z3expd(double %extract5979) nounwind
  %2693 = tail call double @_Z3expd(double %extract5980) nounwind
  %2694 = tail call double @_Z3expd(double %extract5981) nounwind
  %2695 = tail call double @_Z3expd(double %extract5982) nounwind
  %2696 = tail call double @_Z3expd(double %extract5983) nounwind
  %2697 = tail call double @_Z3expd(double %extract5984) nounwind
  %2698 = tail call double @_Z3expd(double %extract5985) nounwind
  %2699 = tail call double @_Z3expd(double %extract5986) nounwind
  %2700 = tail call double @_Z3expd(double %extract5987) nounwind
  %2701 = tail call double @_Z3expd(double %extract5988) nounwind
  %2702 = tail call double @_Z3expd(double %extract5989) nounwind
  %2703 = tail call double @_Z3expd(double %extract5990) nounwind
  %2704 = tail call double @_Z3expd(double %extract5991) nounwind
  %2705 = tail call double @_Z3expd(double %extract5992) nounwind
  %2706 = tail call double @_Z3expd(double %extract5993) nounwind
  %2707 = tail call double @_Z3expd(double %extract5994) nounwind
  %temp.vect6014 = insertelement <16 x double> undef, double %2692, i32 0
  %temp.vect6015 = insertelement <16 x double> %temp.vect6014, double %2693, i32 1
  %temp.vect6016 = insertelement <16 x double> %temp.vect6015, double %2694, i32 2
  %temp.vect6017 = insertelement <16 x double> %temp.vect6016, double %2695, i32 3
  %temp.vect6018 = insertelement <16 x double> %temp.vect6017, double %2696, i32 4
  %temp.vect6019 = insertelement <16 x double> %temp.vect6018, double %2697, i32 5
  %temp.vect6020 = insertelement <16 x double> %temp.vect6019, double %2698, i32 6
  %temp.vect6021 = insertelement <16 x double> %temp.vect6020, double %2699, i32 7
  %temp.vect6022 = insertelement <16 x double> %temp.vect6021, double %2700, i32 8
  %temp.vect6023 = insertelement <16 x double> %temp.vect6022, double %2701, i32 9
  %temp.vect6024 = insertelement <16 x double> %temp.vect6023, double %2702, i32 10
  %temp.vect6025 = insertelement <16 x double> %temp.vect6024, double %2703, i32 11
  %temp.vect6026 = insertelement <16 x double> %temp.vect6025, double %2704, i32 12
  %temp.vect6027 = insertelement <16 x double> %temp.vect6026, double %2705, i32 13
  %temp.vect6028 = insertelement <16 x double> %temp.vect6027, double %2706, i32 14
  %temp.vect6029 = insertelement <16 x double> %temp.vect6028, double %2707, i32 15
  %2708 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2709 = load i64* %2708, align 8
  %2710 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2711 = load i64* %2710, align 8
  %2712 = add i64 %2709, %2711
  %extract5997 = add i64 %2712, 18026496
  %2713 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract5997
  %ptrTypeCast6013 = bitcast double addrspace(1)* %2713 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect6029, <16 x double> addrspace(1)* %ptrTypeCast6013, align 8
  %2714 = fsub <16 x double> <double 0x403EA072E92BA824, double 0x403EA072E92BA824, double 0x403EA072E92BA824, double 0x403EA072E92BA824, double 0x403EA072E92BA824, double 0x403EA072E92BA824, double 0x403EA072E92BA824, double 0x403EA072E92BA824, double 0x403EA072E92BA824, double 0x403EA072E92BA824, double 0x403EA072E92BA824, double 0x403EA072E92BA824, double 0x403EA072E92BA824, double 0x403EA072E92BA824, double 0x403EA072E92BA824, double 0x403EA072E92BA824>, %2005
  %extract6030 = extractelement <16 x double> %2714, i32 0
  %extract6031 = extractelement <16 x double> %2714, i32 1
  %extract6032 = extractelement <16 x double> %2714, i32 2
  %extract6033 = extractelement <16 x double> %2714, i32 3
  %extract6034 = extractelement <16 x double> %2714, i32 4
  %extract6035 = extractelement <16 x double> %2714, i32 5
  %extract6036 = extractelement <16 x double> %2714, i32 6
  %extract6037 = extractelement <16 x double> %2714, i32 7
  %extract6038 = extractelement <16 x double> %2714, i32 8
  %extract6039 = extractelement <16 x double> %2714, i32 9
  %extract6040 = extractelement <16 x double> %2714, i32 10
  %extract6041 = extractelement <16 x double> %2714, i32 11
  %extract6042 = extractelement <16 x double> %2714, i32 12
  %extract6043 = extractelement <16 x double> %2714, i32 13
  %extract6044 = extractelement <16 x double> %2714, i32 14
  %extract6045 = extractelement <16 x double> %2714, i32 15
  %2715 = tail call double @_Z3expd(double %extract6030) nounwind
  %2716 = tail call double @_Z3expd(double %extract6031) nounwind
  %2717 = tail call double @_Z3expd(double %extract6032) nounwind
  %2718 = tail call double @_Z3expd(double %extract6033) nounwind
  %2719 = tail call double @_Z3expd(double %extract6034) nounwind
  %2720 = tail call double @_Z3expd(double %extract6035) nounwind
  %2721 = tail call double @_Z3expd(double %extract6036) nounwind
  %2722 = tail call double @_Z3expd(double %extract6037) nounwind
  %2723 = tail call double @_Z3expd(double %extract6038) nounwind
  %2724 = tail call double @_Z3expd(double %extract6039) nounwind
  %2725 = tail call double @_Z3expd(double %extract6040) nounwind
  %2726 = tail call double @_Z3expd(double %extract6041) nounwind
  %2727 = tail call double @_Z3expd(double %extract6042) nounwind
  %2728 = tail call double @_Z3expd(double %extract6043) nounwind
  %2729 = tail call double @_Z3expd(double %extract6044) nounwind
  %2730 = tail call double @_Z3expd(double %extract6045) nounwind
  %temp.vect6065 = insertelement <16 x double> undef, double %2715, i32 0
  %temp.vect6066 = insertelement <16 x double> %temp.vect6065, double %2716, i32 1
  %temp.vect6067 = insertelement <16 x double> %temp.vect6066, double %2717, i32 2
  %temp.vect6068 = insertelement <16 x double> %temp.vect6067, double %2718, i32 3
  %temp.vect6069 = insertelement <16 x double> %temp.vect6068, double %2719, i32 4
  %temp.vect6070 = insertelement <16 x double> %temp.vect6069, double %2720, i32 5
  %temp.vect6071 = insertelement <16 x double> %temp.vect6070, double %2721, i32 6
  %temp.vect6072 = insertelement <16 x double> %temp.vect6071, double %2722, i32 7
  %temp.vect6073 = insertelement <16 x double> %temp.vect6072, double %2723, i32 8
  %temp.vect6074 = insertelement <16 x double> %temp.vect6073, double %2724, i32 9
  %temp.vect6075 = insertelement <16 x double> %temp.vect6074, double %2725, i32 10
  %temp.vect6076 = insertelement <16 x double> %temp.vect6075, double %2726, i32 11
  %temp.vect6077 = insertelement <16 x double> %temp.vect6076, double %2727, i32 12
  %temp.vect6078 = insertelement <16 x double> %temp.vect6077, double %2728, i32 13
  %temp.vect6079 = insertelement <16 x double> %temp.vect6078, double %2729, i32 14
  %temp.vect6080 = insertelement <16 x double> %temp.vect6079, double %2730, i32 15
  %2731 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2732 = load i64* %2731, align 8
  %2733 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2734 = load i64* %2733, align 8
  %2735 = add i64 %2732, %2734
  %extract6048 = add i64 %2735, 18137088
  %2736 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract6048
  %ptrTypeCast6064 = bitcast double addrspace(1)* %2736 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect6080, <16 x double> addrspace(1)* %ptrTypeCast6064, align 8
  %2737 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2738 = load i64* %2737, align 8
  %2739 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2740 = load i64* %2739, align 8
  %2741 = add i64 %2738, %2740
  %extract6083 = add i64 %2741, 18247680
  %2742 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract6083
  %ptrTypeCast6099 = bitcast double addrspace(1)* %2742 to <16 x double> addrspace(1)*
  store <16 x double> <double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast6099, align 8
  %2743 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2744 = load i64* %2743, align 8
  %2745 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2746 = load i64* %2745, align 8
  %2747 = add i64 %2744, %2746
  %extract6102 = add i64 %2747, 18358272
  %2748 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract6102
  %ptrTypeCast6118 = bitcast double addrspace(1)* %2748 to <16 x double> addrspace(1)*
  store <16 x double> <double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast6118, align 8
  %2749 = fadd <16 x double> %481, <double 0x4028AA58595D6968, double 0x4028AA58595D6968, double 0x4028AA58595D6968, double 0x4028AA58595D6968, double 0x4028AA58595D6968, double 0x4028AA58595D6968, double 0x4028AA58595D6968, double 0x4028AA58595D6968, double 0x4028AA58595D6968, double 0x4028AA58595D6968, double 0x4028AA58595D6968, double 0x4028AA58595D6968, double 0x4028AA58595D6968, double 0x4028AA58595D6968, double 0x4028AA58595D6968, double 0x4028AA58595D6968>
  %2750 = fmul <16 x double> %24, <double 0x40B21597E5215769, double 0x40B21597E5215769, double 0x40B21597E5215769, double 0x40B21597E5215769, double 0x40B21597E5215769, double 0x40B21597E5215769, double 0x40B21597E5215769, double 0x40B21597E5215769, double 0x40B21597E5215769, double 0x40B21597E5215769, double 0x40B21597E5215769, double 0x40B21597E5215769, double 0x40B21597E5215769, double 0x40B21597E5215769, double 0x40B21597E5215769, double 0x40B21597E5215769>
  %2751 = fsub <16 x double> %2749, %2750
  %extract6119 = extractelement <16 x double> %2751, i32 0
  %extract6120 = extractelement <16 x double> %2751, i32 1
  %extract6121 = extractelement <16 x double> %2751, i32 2
  %extract6122 = extractelement <16 x double> %2751, i32 3
  %extract6123 = extractelement <16 x double> %2751, i32 4
  %extract6124 = extractelement <16 x double> %2751, i32 5
  %extract6125 = extractelement <16 x double> %2751, i32 6
  %extract6126 = extractelement <16 x double> %2751, i32 7
  %extract6127 = extractelement <16 x double> %2751, i32 8
  %extract6128 = extractelement <16 x double> %2751, i32 9
  %extract6129 = extractelement <16 x double> %2751, i32 10
  %extract6130 = extractelement <16 x double> %2751, i32 11
  %extract6131 = extractelement <16 x double> %2751, i32 12
  %extract6132 = extractelement <16 x double> %2751, i32 13
  %extract6133 = extractelement <16 x double> %2751, i32 14
  %extract6134 = extractelement <16 x double> %2751, i32 15
  %2752 = tail call double @_Z3expd(double %extract6119) nounwind
  %2753 = tail call double @_Z3expd(double %extract6120) nounwind
  %2754 = tail call double @_Z3expd(double %extract6121) nounwind
  %2755 = tail call double @_Z3expd(double %extract6122) nounwind
  %2756 = tail call double @_Z3expd(double %extract6123) nounwind
  %2757 = tail call double @_Z3expd(double %extract6124) nounwind
  %2758 = tail call double @_Z3expd(double %extract6125) nounwind
  %2759 = tail call double @_Z3expd(double %extract6126) nounwind
  %2760 = tail call double @_Z3expd(double %extract6127) nounwind
  %2761 = tail call double @_Z3expd(double %extract6128) nounwind
  %2762 = tail call double @_Z3expd(double %extract6129) nounwind
  %2763 = tail call double @_Z3expd(double %extract6130) nounwind
  %2764 = tail call double @_Z3expd(double %extract6131) nounwind
  %2765 = tail call double @_Z3expd(double %extract6132) nounwind
  %2766 = tail call double @_Z3expd(double %extract6133) nounwind
  %2767 = tail call double @_Z3expd(double %extract6134) nounwind
  %temp.vect6154 = insertelement <16 x double> undef, double %2752, i32 0
  %temp.vect6155 = insertelement <16 x double> %temp.vect6154, double %2753, i32 1
  %temp.vect6156 = insertelement <16 x double> %temp.vect6155, double %2754, i32 2
  %temp.vect6157 = insertelement <16 x double> %temp.vect6156, double %2755, i32 3
  %temp.vect6158 = insertelement <16 x double> %temp.vect6157, double %2756, i32 4
  %temp.vect6159 = insertelement <16 x double> %temp.vect6158, double %2757, i32 5
  %temp.vect6160 = insertelement <16 x double> %temp.vect6159, double %2758, i32 6
  %temp.vect6161 = insertelement <16 x double> %temp.vect6160, double %2759, i32 7
  %temp.vect6162 = insertelement <16 x double> %temp.vect6161, double %2760, i32 8
  %temp.vect6163 = insertelement <16 x double> %temp.vect6162, double %2761, i32 9
  %temp.vect6164 = insertelement <16 x double> %temp.vect6163, double %2762, i32 10
  %temp.vect6165 = insertelement <16 x double> %temp.vect6164, double %2763, i32 11
  %temp.vect6166 = insertelement <16 x double> %temp.vect6165, double %2764, i32 12
  %temp.vect6167 = insertelement <16 x double> %temp.vect6166, double %2765, i32 13
  %temp.vect6168 = insertelement <16 x double> %temp.vect6167, double %2766, i32 14
  %temp.vect6169 = insertelement <16 x double> %temp.vect6168, double %2767, i32 15
  %2768 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2769 = load i64* %2768, align 8
  %2770 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2771 = load i64* %2770, align 8
  %2772 = add i64 %2769, %2771
  %extract6137 = add i64 %2772, 18468864
  %2773 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract6137
  %ptrTypeCast6153 = bitcast double addrspace(1)* %2773 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect6169, <16 x double> addrspace(1)* %ptrTypeCast6153, align 8
  %2774 = fmul <16 x double> %24, <double 0x40AE458963DC486B, double 0x40AE458963DC486B, double 0x40AE458963DC486B, double 0x40AE458963DC486B, double 0x40AE458963DC486B, double 0x40AE458963DC486B, double 0x40AE458963DC486B, double 0x40AE458963DC486B, double 0x40AE458963DC486B, double 0x40AE458963DC486B, double 0x40AE458963DC486B, double 0x40AE458963DC486B, double 0x40AE458963DC486B, double 0x40AE458963DC486B, double 0x40AE458963DC486B, double 0x40AE458963DC486B>
  %2775 = fsub <16 x double> <double 0x403A85B9496249A1, double 0x403A85B9496249A1, double 0x403A85B9496249A1, double 0x403A85B9496249A1, double 0x403A85B9496249A1, double 0x403A85B9496249A1, double 0x403A85B9496249A1, double 0x403A85B9496249A1, double 0x403A85B9496249A1, double 0x403A85B9496249A1, double 0x403A85B9496249A1, double 0x403A85B9496249A1, double 0x403A85B9496249A1, double 0x403A85B9496249A1, double 0x403A85B9496249A1, double 0x403A85B9496249A1>, %2774
  %extract6170 = extractelement <16 x double> %2775, i32 0
  %extract6171 = extractelement <16 x double> %2775, i32 1
  %extract6172 = extractelement <16 x double> %2775, i32 2
  %extract6173 = extractelement <16 x double> %2775, i32 3
  %extract6174 = extractelement <16 x double> %2775, i32 4
  %extract6175 = extractelement <16 x double> %2775, i32 5
  %extract6176 = extractelement <16 x double> %2775, i32 6
  %extract6177 = extractelement <16 x double> %2775, i32 7
  %extract6178 = extractelement <16 x double> %2775, i32 8
  %extract6179 = extractelement <16 x double> %2775, i32 9
  %extract6180 = extractelement <16 x double> %2775, i32 10
  %extract6181 = extractelement <16 x double> %2775, i32 11
  %extract6182 = extractelement <16 x double> %2775, i32 12
  %extract6183 = extractelement <16 x double> %2775, i32 13
  %extract6184 = extractelement <16 x double> %2775, i32 14
  %extract6185 = extractelement <16 x double> %2775, i32 15
  %2776 = tail call double @_Z3expd(double %extract6170) nounwind
  %2777 = tail call double @_Z3expd(double %extract6171) nounwind
  %2778 = tail call double @_Z3expd(double %extract6172) nounwind
  %2779 = tail call double @_Z3expd(double %extract6173) nounwind
  %2780 = tail call double @_Z3expd(double %extract6174) nounwind
  %2781 = tail call double @_Z3expd(double %extract6175) nounwind
  %2782 = tail call double @_Z3expd(double %extract6176) nounwind
  %2783 = tail call double @_Z3expd(double %extract6177) nounwind
  %2784 = tail call double @_Z3expd(double %extract6178) nounwind
  %2785 = tail call double @_Z3expd(double %extract6179) nounwind
  %2786 = tail call double @_Z3expd(double %extract6180) nounwind
  %2787 = tail call double @_Z3expd(double %extract6181) nounwind
  %2788 = tail call double @_Z3expd(double %extract6182) nounwind
  %2789 = tail call double @_Z3expd(double %extract6183) nounwind
  %2790 = tail call double @_Z3expd(double %extract6184) nounwind
  %2791 = tail call double @_Z3expd(double %extract6185) nounwind
  %temp.vect6205 = insertelement <16 x double> undef, double %2776, i32 0
  %temp.vect6206 = insertelement <16 x double> %temp.vect6205, double %2777, i32 1
  %temp.vect6207 = insertelement <16 x double> %temp.vect6206, double %2778, i32 2
  %temp.vect6208 = insertelement <16 x double> %temp.vect6207, double %2779, i32 3
  %temp.vect6209 = insertelement <16 x double> %temp.vect6208, double %2780, i32 4
  %temp.vect6210 = insertelement <16 x double> %temp.vect6209, double %2781, i32 5
  %temp.vect6211 = insertelement <16 x double> %temp.vect6210, double %2782, i32 6
  %temp.vect6212 = insertelement <16 x double> %temp.vect6211, double %2783, i32 7
  %temp.vect6213 = insertelement <16 x double> %temp.vect6212, double %2784, i32 8
  %temp.vect6214 = insertelement <16 x double> %temp.vect6213, double %2785, i32 9
  %temp.vect6215 = insertelement <16 x double> %temp.vect6214, double %2786, i32 10
  %temp.vect6216 = insertelement <16 x double> %temp.vect6215, double %2787, i32 11
  %temp.vect6217 = insertelement <16 x double> %temp.vect6216, double %2788, i32 12
  %temp.vect6218 = insertelement <16 x double> %temp.vect6217, double %2789, i32 13
  %temp.vect6219 = insertelement <16 x double> %temp.vect6218, double %2790, i32 14
  %temp.vect6220 = insertelement <16 x double> %temp.vect6219, double %2791, i32 15
  %2792 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2793 = load i64* %2792, align 8
  %2794 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2795 = load i64* %2794, align 8
  %2796 = add i64 %2793, %2795
  %extract6188 = add i64 %2796, 18579456
  %2797 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract6188
  %ptrTypeCast6204 = bitcast double addrspace(1)* %2797 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect6220, <16 x double> addrspace(1)* %ptrTypeCast6204, align 8
  %2798 = fmul <16 x double> %temp.vect97, <double 9.900000e-01, double 9.900000e-01, double 9.900000e-01, double 9.900000e-01, double 9.900000e-01, double 9.900000e-01, double 9.900000e-01, double 9.900000e-01, double 9.900000e-01, double 9.900000e-01, double 9.900000e-01, double 9.900000e-01, double 9.900000e-01, double 9.900000e-01, double 9.900000e-01, double 9.900000e-01>
  %2799 = fsub <16 x double> <double 0x404465B30A83E781, double 0x404465B30A83E781, double 0x404465B30A83E781, double 0x404465B30A83E781, double 0x404465B30A83E781, double 0x404465B30A83E781, double 0x404465B30A83E781, double 0x404465B30A83E781, double 0x404465B30A83E781, double 0x404465B30A83E781, double 0x404465B30A83E781, double 0x404465B30A83E781, double 0x404465B30A83E781, double 0x404465B30A83E781, double 0x404465B30A83E781, double 0x404465B30A83E781>, %2798
  %2800 = fmul <16 x double> %24, <double 0x4088D8A89F40A287, double 0x4088D8A89F40A287, double 0x4088D8A89F40A287, double 0x4088D8A89F40A287, double 0x4088D8A89F40A287, double 0x4088D8A89F40A287, double 0x4088D8A89F40A287, double 0x4088D8A89F40A287, double 0x4088D8A89F40A287, double 0x4088D8A89F40A287, double 0x4088D8A89F40A287, double 0x4088D8A89F40A287, double 0x4088D8A89F40A287, double 0x4088D8A89F40A287, double 0x4088D8A89F40A287, double 0x4088D8A89F40A287>
  %2801 = fsub <16 x double> %2799, %2800
  %extract6221 = extractelement <16 x double> %2801, i32 0
  %extract6222 = extractelement <16 x double> %2801, i32 1
  %extract6223 = extractelement <16 x double> %2801, i32 2
  %extract6224 = extractelement <16 x double> %2801, i32 3
  %extract6225 = extractelement <16 x double> %2801, i32 4
  %extract6226 = extractelement <16 x double> %2801, i32 5
  %extract6227 = extractelement <16 x double> %2801, i32 6
  %extract6228 = extractelement <16 x double> %2801, i32 7
  %extract6229 = extractelement <16 x double> %2801, i32 8
  %extract6230 = extractelement <16 x double> %2801, i32 9
  %extract6231 = extractelement <16 x double> %2801, i32 10
  %extract6232 = extractelement <16 x double> %2801, i32 11
  %extract6233 = extractelement <16 x double> %2801, i32 12
  %extract6234 = extractelement <16 x double> %2801, i32 13
  %extract6235 = extractelement <16 x double> %2801, i32 14
  %extract6236 = extractelement <16 x double> %2801, i32 15
  %2802 = tail call double @_Z3expd(double %extract6221) nounwind
  %2803 = tail call double @_Z3expd(double %extract6222) nounwind
  %2804 = tail call double @_Z3expd(double %extract6223) nounwind
  %2805 = tail call double @_Z3expd(double %extract6224) nounwind
  %2806 = tail call double @_Z3expd(double %extract6225) nounwind
  %2807 = tail call double @_Z3expd(double %extract6226) nounwind
  %2808 = tail call double @_Z3expd(double %extract6227) nounwind
  %2809 = tail call double @_Z3expd(double %extract6228) nounwind
  %2810 = tail call double @_Z3expd(double %extract6229) nounwind
  %2811 = tail call double @_Z3expd(double %extract6230) nounwind
  %2812 = tail call double @_Z3expd(double %extract6231) nounwind
  %2813 = tail call double @_Z3expd(double %extract6232) nounwind
  %2814 = tail call double @_Z3expd(double %extract6233) nounwind
  %2815 = tail call double @_Z3expd(double %extract6234) nounwind
  %2816 = tail call double @_Z3expd(double %extract6235) nounwind
  %2817 = tail call double @_Z3expd(double %extract6236) nounwind
  %temp.vect6256 = insertelement <16 x double> undef, double %2802, i32 0
  %temp.vect6257 = insertelement <16 x double> %temp.vect6256, double %2803, i32 1
  %temp.vect6258 = insertelement <16 x double> %temp.vect6257, double %2804, i32 2
  %temp.vect6259 = insertelement <16 x double> %temp.vect6258, double %2805, i32 3
  %temp.vect6260 = insertelement <16 x double> %temp.vect6259, double %2806, i32 4
  %temp.vect6261 = insertelement <16 x double> %temp.vect6260, double %2807, i32 5
  %temp.vect6262 = insertelement <16 x double> %temp.vect6261, double %2808, i32 6
  %temp.vect6263 = insertelement <16 x double> %temp.vect6262, double %2809, i32 7
  %temp.vect6264 = insertelement <16 x double> %temp.vect6263, double %2810, i32 8
  %temp.vect6265 = insertelement <16 x double> %temp.vect6264, double %2811, i32 9
  %temp.vect6266 = insertelement <16 x double> %temp.vect6265, double %2812, i32 10
  %temp.vect6267 = insertelement <16 x double> %temp.vect6266, double %2813, i32 11
  %temp.vect6268 = insertelement <16 x double> %temp.vect6267, double %2814, i32 12
  %temp.vect6269 = insertelement <16 x double> %temp.vect6268, double %2815, i32 13
  %temp.vect6270 = insertelement <16 x double> %temp.vect6269, double %2816, i32 14
  %temp.vect6271 = insertelement <16 x double> %temp.vect6270, double %2817, i32 15
  %2818 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2819 = load i64* %2818, align 8
  %2820 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2821 = load i64* %2820, align 8
  %2822 = add i64 %2819, %2821
  %extract6239 = add i64 %2822, 18690048
  %2823 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract6239
  %ptrTypeCast6255 = bitcast double addrspace(1)* %2823 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect6271, <16 x double> addrspace(1)* %ptrTypeCast6255, align 8
  %2824 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2825 = load i64* %2824, align 8
  %2826 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2827 = load i64* %2826, align 8
  %2828 = add i64 %2825, %2827
  %extract6274 = add i64 %2828, 18800640
  %2829 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract6274
  %ptrTypeCast6290 = bitcast double addrspace(1)* %2829 to <16 x double> addrspace(1)*
  store <16 x double> <double 2.000000e+12, double 2.000000e+12, double 2.000000e+12, double 2.000000e+12, double 2.000000e+12, double 2.000000e+12, double 2.000000e+12, double 2.000000e+12, double 2.000000e+12, double 2.000000e+12, double 2.000000e+12, double 2.000000e+12, double 2.000000e+12, double 2.000000e+12, double 2.000000e+12, double 2.000000e+12>, <16 x double> addrspace(1)* %ptrTypeCast6290, align 8
  %2830 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2831 = load i64* %2830, align 8
  %2832 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2833 = load i64* %2832, align 8
  %2834 = add i64 %2831, %2833
  %extract6293 = add i64 %2834, 18911232
  %2835 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract6293
  %ptrTypeCast6309 = bitcast double addrspace(1)* %2835 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.604000e+13, double 1.604000e+13, double 1.604000e+13, double 1.604000e+13, double 1.604000e+13, double 1.604000e+13, double 1.604000e+13, double 1.604000e+13, double 1.604000e+13, double 1.604000e+13, double 1.604000e+13, double 1.604000e+13, double 1.604000e+13, double 1.604000e+13, double 1.604000e+13, double 1.604000e+13>, <16 x double> addrspace(1)* %ptrTypeCast6309, align 8
  %2836 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2837 = load i64* %2836, align 8
  %2838 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2839 = load i64* %2838, align 8
  %2840 = add i64 %2837, %2839
  %extract6312 = add i64 %2840, 19021824
  %2841 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract6312
  %ptrTypeCast6328 = bitcast double addrspace(1)* %2841 to <16 x double> addrspace(1)*
  store <16 x double> <double 8.020000e+13, double 8.020000e+13, double 8.020000e+13, double 8.020000e+13, double 8.020000e+13, double 8.020000e+13, double 8.020000e+13, double 8.020000e+13, double 8.020000e+13, double 8.020000e+13, double 8.020000e+13, double 8.020000e+13, double 8.020000e+13, double 8.020000e+13, double 8.020000e+13, double 8.020000e+13>, <16 x double> addrspace(1)* %ptrTypeCast6328, align 8
  %2842 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2843 = load i64* %2842, align 8
  %2844 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2845 = load i64* %2844, align 8
  %2846 = add i64 %2843, %2845
  %extract6331 = add i64 %2846, 19132416
  %2847 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract6331
  %ptrTypeCast6347 = bitcast double addrspace(1)* %2847 to <16 x double> addrspace(1)*
  store <16 x double> <double 2.000000e+10, double 2.000000e+10, double 2.000000e+10, double 2.000000e+10, double 2.000000e+10, double 2.000000e+10, double 2.000000e+10, double 2.000000e+10, double 2.000000e+10, double 2.000000e+10, double 2.000000e+10, double 2.000000e+10, double 2.000000e+10, double 2.000000e+10, double 2.000000e+10, double 2.000000e+10>, <16 x double> addrspace(1)* %ptrTypeCast6347, align 8
  %2848 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2849 = load i64* %2848, align 8
  %2850 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2851 = load i64* %2850, align 8
  %2852 = add i64 %2849, %2851
  %extract6350 = add i64 %2852, 19243008
  %2853 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract6350
  %ptrTypeCast6366 = bitcast double addrspace(1)* %2853 to <16 x double> addrspace(1)*
  store <16 x double> <double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11>, <16 x double> addrspace(1)* %ptrTypeCast6366, align 8
  %2854 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2855 = load i64* %2854, align 8
  %2856 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2857 = load i64* %2856, align 8
  %2858 = add i64 %2855, %2857
  %extract6369 = add i64 %2858, 19353600
  %2859 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract6369
  %ptrTypeCast6385 = bitcast double addrspace(1)* %2859 to <16 x double> addrspace(1)*
  store <16 x double> <double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11>, <16 x double> addrspace(1)* %ptrTypeCast6385, align 8
  %2860 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2861 = load i64* %2860, align 8
  %2862 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2863 = load i64* %2862, align 8
  %2864 = add i64 %2861, %2863
  %extract6388 = add i64 %2864, 19464192
  %2865 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract6388
  %ptrTypeCast6404 = bitcast double addrspace(1)* %2865 to <16 x double> addrspace(1)*
  store <16 x double> <double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13>, <16 x double> addrspace(1)* %ptrTypeCast6404, align 8
  %2866 = fmul <16 x double> %24, <double 0x407EA220E8427419, double 0x407EA220E8427419, double 0x407EA220E8427419, double 0x407EA220E8427419, double 0x407EA220E8427419, double 0x407EA220E8427419, double 0x407EA220E8427419, double 0x407EA220E8427419, double 0x407EA220E8427419, double 0x407EA220E8427419, double 0x407EA220E8427419, double 0x407EA220E8427419, double 0x407EA220E8427419, double 0x407EA220E8427419, double 0x407EA220E8427419, double 0x407EA220E8427419>
  %2867 = fsub <16 x double> <double 0x4036E2F77D7A7F22, double 0x4036E2F77D7A7F22, double 0x4036E2F77D7A7F22, double 0x4036E2F77D7A7F22, double 0x4036E2F77D7A7F22, double 0x4036E2F77D7A7F22, double 0x4036E2F77D7A7F22, double 0x4036E2F77D7A7F22, double 0x4036E2F77D7A7F22, double 0x4036E2F77D7A7F22, double 0x4036E2F77D7A7F22, double 0x4036E2F77D7A7F22, double 0x4036E2F77D7A7F22, double 0x4036E2F77D7A7F22, double 0x4036E2F77D7A7F22, double 0x4036E2F77D7A7F22>, %2866
  %extract6405 = extractelement <16 x double> %2867, i32 0
  %extract6406 = extractelement <16 x double> %2867, i32 1
  %extract6407 = extractelement <16 x double> %2867, i32 2
  %extract6408 = extractelement <16 x double> %2867, i32 3
  %extract6409 = extractelement <16 x double> %2867, i32 4
  %extract6410 = extractelement <16 x double> %2867, i32 5
  %extract6411 = extractelement <16 x double> %2867, i32 6
  %extract6412 = extractelement <16 x double> %2867, i32 7
  %extract6413 = extractelement <16 x double> %2867, i32 8
  %extract6414 = extractelement <16 x double> %2867, i32 9
  %extract6415 = extractelement <16 x double> %2867, i32 10
  %extract6416 = extractelement <16 x double> %2867, i32 11
  %extract6417 = extractelement <16 x double> %2867, i32 12
  %extract6418 = extractelement <16 x double> %2867, i32 13
  %extract6419 = extractelement <16 x double> %2867, i32 14
  %extract6420 = extractelement <16 x double> %2867, i32 15
  %2868 = tail call double @_Z3expd(double %extract6405) nounwind
  %2869 = tail call double @_Z3expd(double %extract6406) nounwind
  %2870 = tail call double @_Z3expd(double %extract6407) nounwind
  %2871 = tail call double @_Z3expd(double %extract6408) nounwind
  %2872 = tail call double @_Z3expd(double %extract6409) nounwind
  %2873 = tail call double @_Z3expd(double %extract6410) nounwind
  %2874 = tail call double @_Z3expd(double %extract6411) nounwind
  %2875 = tail call double @_Z3expd(double %extract6412) nounwind
  %2876 = tail call double @_Z3expd(double %extract6413) nounwind
  %2877 = tail call double @_Z3expd(double %extract6414) nounwind
  %2878 = tail call double @_Z3expd(double %extract6415) nounwind
  %2879 = tail call double @_Z3expd(double %extract6416) nounwind
  %2880 = tail call double @_Z3expd(double %extract6417) nounwind
  %2881 = tail call double @_Z3expd(double %extract6418) nounwind
  %2882 = tail call double @_Z3expd(double %extract6419) nounwind
  %2883 = tail call double @_Z3expd(double %extract6420) nounwind
  %temp.vect6440 = insertelement <16 x double> undef, double %2868, i32 0
  %temp.vect6441 = insertelement <16 x double> %temp.vect6440, double %2869, i32 1
  %temp.vect6442 = insertelement <16 x double> %temp.vect6441, double %2870, i32 2
  %temp.vect6443 = insertelement <16 x double> %temp.vect6442, double %2871, i32 3
  %temp.vect6444 = insertelement <16 x double> %temp.vect6443, double %2872, i32 4
  %temp.vect6445 = insertelement <16 x double> %temp.vect6444, double %2873, i32 5
  %temp.vect6446 = insertelement <16 x double> %temp.vect6445, double %2874, i32 6
  %temp.vect6447 = insertelement <16 x double> %temp.vect6446, double %2875, i32 7
  %temp.vect6448 = insertelement <16 x double> %temp.vect6447, double %2876, i32 8
  %temp.vect6449 = insertelement <16 x double> %temp.vect6448, double %2877, i32 9
  %temp.vect6450 = insertelement <16 x double> %temp.vect6449, double %2878, i32 10
  %temp.vect6451 = insertelement <16 x double> %temp.vect6450, double %2879, i32 11
  %temp.vect6452 = insertelement <16 x double> %temp.vect6451, double %2880, i32 12
  %temp.vect6453 = insertelement <16 x double> %temp.vect6452, double %2881, i32 13
  %temp.vect6454 = insertelement <16 x double> %temp.vect6453, double %2882, i32 14
  %temp.vect6455 = insertelement <16 x double> %temp.vect6454, double %2883, i32 15
  %2884 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2885 = load i64* %2884, align 8
  %2886 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2887 = load i64* %2886, align 8
  %2888 = add i64 %2885, %2887
  %extract6423 = add i64 %2888, 19574784
  %2889 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract6423
  %ptrTypeCast6439 = bitcast double addrspace(1)* %2889 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect6455, <16 x double> addrspace(1)* %ptrTypeCast6439, align 8
  %2890 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2891 = load i64* %2890, align 8
  %2892 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2893 = load i64* %2892, align 8
  %2894 = add i64 %2891, %2893
  %extract6458 = add i64 %2894, 19685376
  %2895 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract6458
  %ptrTypeCast6474 = bitcast double addrspace(1)* %2895 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.200000e+14, double 1.200000e+14, double 1.200000e+14, double 1.200000e+14, double 1.200000e+14, double 1.200000e+14, double 1.200000e+14, double 1.200000e+14, double 1.200000e+14, double 1.200000e+14, double 1.200000e+14, double 1.200000e+14, double 1.200000e+14, double 1.200000e+14, double 1.200000e+14, double 1.200000e+14>, <16 x double> addrspace(1)* %ptrTypeCast6474, align 8
  %2896 = fmul <16 x double> %temp.vect97, <double 1.900000e+00, double 1.900000e+00, double 1.900000e+00, double 1.900000e+00, double 1.900000e+00, double 1.900000e+00, double 1.900000e+00, double 1.900000e+00, double 1.900000e+00, double 1.900000e+00, double 1.900000e+00, double 1.900000e+00, double 1.900000e+00, double 1.900000e+00, double 1.900000e+00, double 1.900000e+00>
  %2897 = fadd <16 x double> %2896, <double 0x40328F792C3BC82D, double 0x40328F792C3BC82D, double 0x40328F792C3BC82D, double 0x40328F792C3BC82D, double 0x40328F792C3BC82D, double 0x40328F792C3BC82D, double 0x40328F792C3BC82D, double 0x40328F792C3BC82D, double 0x40328F792C3BC82D, double 0x40328F792C3BC82D, double 0x40328F792C3BC82D, double 0x40328F792C3BC82D, double 0x40328F792C3BC82D, double 0x40328F792C3BC82D, double 0x40328F792C3BC82D, double 0x40328F792C3BC82D>
  %2898 = fmul <16 x double> %24, <double 0x40AD9A7169C23B79, double 0x40AD9A7169C23B79, double 0x40AD9A7169C23B79, double 0x40AD9A7169C23B79, double 0x40AD9A7169C23B79, double 0x40AD9A7169C23B79, double 0x40AD9A7169C23B79, double 0x40AD9A7169C23B79, double 0x40AD9A7169C23B79, double 0x40AD9A7169C23B79, double 0x40AD9A7169C23B79, double 0x40AD9A7169C23B79, double 0x40AD9A7169C23B79, double 0x40AD9A7169C23B79, double 0x40AD9A7169C23B79, double 0x40AD9A7169C23B79>
  %2899 = fsub <16 x double> %2897, %2898
  %extract6475 = extractelement <16 x double> %2899, i32 0
  %extract6476 = extractelement <16 x double> %2899, i32 1
  %extract6477 = extractelement <16 x double> %2899, i32 2
  %extract6478 = extractelement <16 x double> %2899, i32 3
  %extract6479 = extractelement <16 x double> %2899, i32 4
  %extract6480 = extractelement <16 x double> %2899, i32 5
  %extract6481 = extractelement <16 x double> %2899, i32 6
  %extract6482 = extractelement <16 x double> %2899, i32 7
  %extract6483 = extractelement <16 x double> %2899, i32 8
  %extract6484 = extractelement <16 x double> %2899, i32 9
  %extract6485 = extractelement <16 x double> %2899, i32 10
  %extract6486 = extractelement <16 x double> %2899, i32 11
  %extract6487 = extractelement <16 x double> %2899, i32 12
  %extract6488 = extractelement <16 x double> %2899, i32 13
  %extract6489 = extractelement <16 x double> %2899, i32 14
  %extract6490 = extractelement <16 x double> %2899, i32 15
  %2900 = tail call double @_Z3expd(double %extract6475) nounwind
  %2901 = tail call double @_Z3expd(double %extract6476) nounwind
  %2902 = tail call double @_Z3expd(double %extract6477) nounwind
  %2903 = tail call double @_Z3expd(double %extract6478) nounwind
  %2904 = tail call double @_Z3expd(double %extract6479) nounwind
  %2905 = tail call double @_Z3expd(double %extract6480) nounwind
  %2906 = tail call double @_Z3expd(double %extract6481) nounwind
  %2907 = tail call double @_Z3expd(double %extract6482) nounwind
  %2908 = tail call double @_Z3expd(double %extract6483) nounwind
  %2909 = tail call double @_Z3expd(double %extract6484) nounwind
  %2910 = tail call double @_Z3expd(double %extract6485) nounwind
  %2911 = tail call double @_Z3expd(double %extract6486) nounwind
  %2912 = tail call double @_Z3expd(double %extract6487) nounwind
  %2913 = tail call double @_Z3expd(double %extract6488) nounwind
  %2914 = tail call double @_Z3expd(double %extract6489) nounwind
  %2915 = tail call double @_Z3expd(double %extract6490) nounwind
  %temp.vect6510 = insertelement <16 x double> undef, double %2900, i32 0
  %temp.vect6511 = insertelement <16 x double> %temp.vect6510, double %2901, i32 1
  %temp.vect6512 = insertelement <16 x double> %temp.vect6511, double %2902, i32 2
  %temp.vect6513 = insertelement <16 x double> %temp.vect6512, double %2903, i32 3
  %temp.vect6514 = insertelement <16 x double> %temp.vect6513, double %2904, i32 4
  %temp.vect6515 = insertelement <16 x double> %temp.vect6514, double %2905, i32 5
  %temp.vect6516 = insertelement <16 x double> %temp.vect6515, double %2906, i32 6
  %temp.vect6517 = insertelement <16 x double> %temp.vect6516, double %2907, i32 7
  %temp.vect6518 = insertelement <16 x double> %temp.vect6517, double %2908, i32 8
  %temp.vect6519 = insertelement <16 x double> %temp.vect6518, double %2909, i32 9
  %temp.vect6520 = insertelement <16 x double> %temp.vect6519, double %2910, i32 10
  %temp.vect6521 = insertelement <16 x double> %temp.vect6520, double %2911, i32 11
  %temp.vect6522 = insertelement <16 x double> %temp.vect6521, double %2912, i32 12
  %temp.vect6523 = insertelement <16 x double> %temp.vect6522, double %2913, i32 13
  %temp.vect6524 = insertelement <16 x double> %temp.vect6523, double %2914, i32 14
  %temp.vect6525 = insertelement <16 x double> %temp.vect6524, double %2915, i32 15
  %2916 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2917 = load i64* %2916, align 8
  %2918 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2919 = load i64* %2918, align 8
  %2920 = add i64 %2917, %2919
  %extract6493 = add i64 %2920, 19795968
  %2921 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract6493
  %ptrTypeCast6509 = bitcast double addrspace(1)* %2921 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect6525, <16 x double> addrspace(1)* %ptrTypeCast6509, align 8
  %2922 = fmul <16 x double> %temp.vect97, <double 1.920000e+00, double 1.920000e+00, double 1.920000e+00, double 1.920000e+00, double 1.920000e+00, double 1.920000e+00, double 1.920000e+00, double 1.920000e+00, double 1.920000e+00, double 1.920000e+00, double 1.920000e+00, double 1.920000e+00, double 1.920000e+00, double 1.920000e+00, double 1.920000e+00, double 1.920000e+00>
  %2923 = fadd <16 x double> %2922, <double 0x4032502706D50657, double 0x4032502706D50657, double 0x4032502706D50657, double 0x4032502706D50657, double 0x4032502706D50657, double 0x4032502706D50657, double 0x4032502706D50657, double 0x4032502706D50657, double 0x4032502706D50657, double 0x4032502706D50657, double 0x4032502706D50657, double 0x4032502706D50657, double 0x4032502706D50657, double 0x4032502706D50657, double 0x4032502706D50657, double 0x4032502706D50657>
  %2924 = fmul <16 x double> %24, <double 0x40A65E9B0DD82FD7, double 0x40A65E9B0DD82FD7, double 0x40A65E9B0DD82FD7, double 0x40A65E9B0DD82FD7, double 0x40A65E9B0DD82FD7, double 0x40A65E9B0DD82FD7, double 0x40A65E9B0DD82FD7, double 0x40A65E9B0DD82FD7, double 0x40A65E9B0DD82FD7, double 0x40A65E9B0DD82FD7, double 0x40A65E9B0DD82FD7, double 0x40A65E9B0DD82FD7, double 0x40A65E9B0DD82FD7, double 0x40A65E9B0DD82FD7, double 0x40A65E9B0DD82FD7, double 0x40A65E9B0DD82FD7>
  %2925 = fsub <16 x double> %2923, %2924
  %extract6526 = extractelement <16 x double> %2925, i32 0
  %extract6527 = extractelement <16 x double> %2925, i32 1
  %extract6528 = extractelement <16 x double> %2925, i32 2
  %extract6529 = extractelement <16 x double> %2925, i32 3
  %extract6530 = extractelement <16 x double> %2925, i32 4
  %extract6531 = extractelement <16 x double> %2925, i32 5
  %extract6532 = extractelement <16 x double> %2925, i32 6
  %extract6533 = extractelement <16 x double> %2925, i32 7
  %extract6534 = extractelement <16 x double> %2925, i32 8
  %extract6535 = extractelement <16 x double> %2925, i32 9
  %extract6536 = extractelement <16 x double> %2925, i32 10
  %extract6537 = extractelement <16 x double> %2925, i32 11
  %extract6538 = extractelement <16 x double> %2925, i32 12
  %extract6539 = extractelement <16 x double> %2925, i32 13
  %extract6540 = extractelement <16 x double> %2925, i32 14
  %extract6541 = extractelement <16 x double> %2925, i32 15
  %2926 = tail call double @_Z3expd(double %extract6526) nounwind
  %2927 = tail call double @_Z3expd(double %extract6527) nounwind
  %2928 = tail call double @_Z3expd(double %extract6528) nounwind
  %2929 = tail call double @_Z3expd(double %extract6529) nounwind
  %2930 = tail call double @_Z3expd(double %extract6530) nounwind
  %2931 = tail call double @_Z3expd(double %extract6531) nounwind
  %2932 = tail call double @_Z3expd(double %extract6532) nounwind
  %2933 = tail call double @_Z3expd(double %extract6533) nounwind
  %2934 = tail call double @_Z3expd(double %extract6534) nounwind
  %2935 = tail call double @_Z3expd(double %extract6535) nounwind
  %2936 = tail call double @_Z3expd(double %extract6536) nounwind
  %2937 = tail call double @_Z3expd(double %extract6537) nounwind
  %2938 = tail call double @_Z3expd(double %extract6538) nounwind
  %2939 = tail call double @_Z3expd(double %extract6539) nounwind
  %2940 = tail call double @_Z3expd(double %extract6540) nounwind
  %2941 = tail call double @_Z3expd(double %extract6541) nounwind
  %temp.vect6561 = insertelement <16 x double> undef, double %2926, i32 0
  %temp.vect6562 = insertelement <16 x double> %temp.vect6561, double %2927, i32 1
  %temp.vect6563 = insertelement <16 x double> %temp.vect6562, double %2928, i32 2
  %temp.vect6564 = insertelement <16 x double> %temp.vect6563, double %2929, i32 3
  %temp.vect6565 = insertelement <16 x double> %temp.vect6564, double %2930, i32 4
  %temp.vect6566 = insertelement <16 x double> %temp.vect6565, double %2931, i32 5
  %temp.vect6567 = insertelement <16 x double> %temp.vect6566, double %2932, i32 6
  %temp.vect6568 = insertelement <16 x double> %temp.vect6567, double %2933, i32 7
  %temp.vect6569 = insertelement <16 x double> %temp.vect6568, double %2934, i32 8
  %temp.vect6570 = insertelement <16 x double> %temp.vect6569, double %2935, i32 9
  %temp.vect6571 = insertelement <16 x double> %temp.vect6570, double %2936, i32 10
  %temp.vect6572 = insertelement <16 x double> %temp.vect6571, double %2937, i32 11
  %temp.vect6573 = insertelement <16 x double> %temp.vect6572, double %2938, i32 12
  %temp.vect6574 = insertelement <16 x double> %temp.vect6573, double %2939, i32 13
  %temp.vect6575 = insertelement <16 x double> %temp.vect6574, double %2940, i32 14
  %temp.vect6576 = insertelement <16 x double> %temp.vect6575, double %2941, i32 15
  %2942 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2943 = load i64* %2942, align 8
  %2944 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2945 = load i64* %2944, align 8
  %2946 = add i64 %2943, %2945
  %extract6544 = add i64 %2946, 19906560
  %2947 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract6544
  %ptrTypeCast6560 = bitcast double addrspace(1)* %2947 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect6576, <16 x double> addrspace(1)* %ptrTypeCast6560, align 8
  %2948 = fmul <16 x double> %temp.vect97, <double 2.120000e+00, double 2.120000e+00, double 2.120000e+00, double 2.120000e+00, double 2.120000e+00, double 2.120000e+00, double 2.120000e+00, double 2.120000e+00, double 2.120000e+00, double 2.120000e+00, double 2.120000e+00, double 2.120000e+00, double 2.120000e+00, double 2.120000e+00, double 2.120000e+00, double 2.120000e+00>
  %2949 = fadd <16 x double> %2948, <double 0x402E28C6385E155F, double 0x402E28C6385E155F, double 0x402E28C6385E155F, double 0x402E28C6385E155F, double 0x402E28C6385E155F, double 0x402E28C6385E155F, double 0x402E28C6385E155F, double 0x402E28C6385E155F, double 0x402E28C6385E155F, double 0x402E28C6385E155F, double 0x402E28C6385E155F, double 0x402E28C6385E155F, double 0x402E28C6385E155F, double 0x402E28C6385E155F, double 0x402E28C6385E155F, double 0x402E28C6385E155F>
  %2950 = fmul <16 x double> %24, <double 0x407B5CC6A8FC0D2C, double 0x407B5CC6A8FC0D2C, double 0x407B5CC6A8FC0D2C, double 0x407B5CC6A8FC0D2C, double 0x407B5CC6A8FC0D2C, double 0x407B5CC6A8FC0D2C, double 0x407B5CC6A8FC0D2C, double 0x407B5CC6A8FC0D2C, double 0x407B5CC6A8FC0D2C, double 0x407B5CC6A8FC0D2C, double 0x407B5CC6A8FC0D2C, double 0x407B5CC6A8FC0D2C, double 0x407B5CC6A8FC0D2C, double 0x407B5CC6A8FC0D2C, double 0x407B5CC6A8FC0D2C, double 0x407B5CC6A8FC0D2C>
  %2951 = fsub <16 x double> %2949, %2950
  %extract6577 = extractelement <16 x double> %2951, i32 0
  %extract6578 = extractelement <16 x double> %2951, i32 1
  %extract6579 = extractelement <16 x double> %2951, i32 2
  %extract6580 = extractelement <16 x double> %2951, i32 3
  %extract6581 = extractelement <16 x double> %2951, i32 4
  %extract6582 = extractelement <16 x double> %2951, i32 5
  %extract6583 = extractelement <16 x double> %2951, i32 6
  %extract6584 = extractelement <16 x double> %2951, i32 7
  %extract6585 = extractelement <16 x double> %2951, i32 8
  %extract6586 = extractelement <16 x double> %2951, i32 9
  %extract6587 = extractelement <16 x double> %2951, i32 10
  %extract6588 = extractelement <16 x double> %2951, i32 11
  %extract6589 = extractelement <16 x double> %2951, i32 12
  %extract6590 = extractelement <16 x double> %2951, i32 13
  %extract6591 = extractelement <16 x double> %2951, i32 14
  %extract6592 = extractelement <16 x double> %2951, i32 15
  %2952 = tail call double @_Z3expd(double %extract6577) nounwind
  %2953 = tail call double @_Z3expd(double %extract6578) nounwind
  %2954 = tail call double @_Z3expd(double %extract6579) nounwind
  %2955 = tail call double @_Z3expd(double %extract6580) nounwind
  %2956 = tail call double @_Z3expd(double %extract6581) nounwind
  %2957 = tail call double @_Z3expd(double %extract6582) nounwind
  %2958 = tail call double @_Z3expd(double %extract6583) nounwind
  %2959 = tail call double @_Z3expd(double %extract6584) nounwind
  %2960 = tail call double @_Z3expd(double %extract6585) nounwind
  %2961 = tail call double @_Z3expd(double %extract6586) nounwind
  %2962 = tail call double @_Z3expd(double %extract6587) nounwind
  %2963 = tail call double @_Z3expd(double %extract6588) nounwind
  %2964 = tail call double @_Z3expd(double %extract6589) nounwind
  %2965 = tail call double @_Z3expd(double %extract6590) nounwind
  %2966 = tail call double @_Z3expd(double %extract6591) nounwind
  %2967 = tail call double @_Z3expd(double %extract6592) nounwind
  %temp.vect6612 = insertelement <16 x double> undef, double %2952, i32 0
  %temp.vect6613 = insertelement <16 x double> %temp.vect6612, double %2953, i32 1
  %temp.vect6614 = insertelement <16 x double> %temp.vect6613, double %2954, i32 2
  %temp.vect6615 = insertelement <16 x double> %temp.vect6614, double %2955, i32 3
  %temp.vect6616 = insertelement <16 x double> %temp.vect6615, double %2956, i32 4
  %temp.vect6617 = insertelement <16 x double> %temp.vect6616, double %2957, i32 5
  %temp.vect6618 = insertelement <16 x double> %temp.vect6617, double %2958, i32 6
  %temp.vect6619 = insertelement <16 x double> %temp.vect6618, double %2959, i32 7
  %temp.vect6620 = insertelement <16 x double> %temp.vect6619, double %2960, i32 8
  %temp.vect6621 = insertelement <16 x double> %temp.vect6620, double %2961, i32 9
  %temp.vect6622 = insertelement <16 x double> %temp.vect6621, double %2962, i32 10
  %temp.vect6623 = insertelement <16 x double> %temp.vect6622, double %2963, i32 11
  %temp.vect6624 = insertelement <16 x double> %temp.vect6623, double %2964, i32 12
  %temp.vect6625 = insertelement <16 x double> %temp.vect6624, double %2965, i32 13
  %temp.vect6626 = insertelement <16 x double> %temp.vect6625, double %2966, i32 14
  %temp.vect6627 = insertelement <16 x double> %temp.vect6626, double %2967, i32 15
  %2968 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2969 = load i64* %2968, align 8
  %2970 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2971 = load i64* %2970, align 8
  %2972 = add i64 %2969, %2971
  %extract6595 = add i64 %2972, 20017152
  %2973 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract6595
  %ptrTypeCast6611 = bitcast double addrspace(1)* %2973 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect6627, <16 x double> addrspace(1)* %ptrTypeCast6611, align 8
  %2974 = fmul <16 x double> %24, <double 0x40714C4E820E6299, double 0x40714C4E820E6299, double 0x40714C4E820E6299, double 0x40714C4E820E6299, double 0x40714C4E820E6299, double 0x40714C4E820E6299, double 0x40714C4E820E6299, double 0x40714C4E820E6299, double 0x40714C4E820E6299, double 0x40714C4E820E6299, double 0x40714C4E820E6299, double 0x40714C4E820E6299, double 0x40714C4E820E6299, double 0x40714C4E820E6299, double 0x40714C4E820E6299, double 0x40714C4E820E6299>
  %2975 = fadd <16 x double> %2974, <double 0x403F51E50176F885, double 0x403F51E50176F885, double 0x403F51E50176F885, double 0x403F51E50176F885, double 0x403F51E50176F885, double 0x403F51E50176F885, double 0x403F51E50176F885, double 0x403F51E50176F885, double 0x403F51E50176F885, double 0x403F51E50176F885, double 0x403F51E50176F885, double 0x403F51E50176F885, double 0x403F51E50176F885, double 0x403F51E50176F885, double 0x403F51E50176F885, double 0x403F51E50176F885>
  %extract6628 = extractelement <16 x double> %2975, i32 0
  %extract6629 = extractelement <16 x double> %2975, i32 1
  %extract6630 = extractelement <16 x double> %2975, i32 2
  %extract6631 = extractelement <16 x double> %2975, i32 3
  %extract6632 = extractelement <16 x double> %2975, i32 4
  %extract6633 = extractelement <16 x double> %2975, i32 5
  %extract6634 = extractelement <16 x double> %2975, i32 6
  %extract6635 = extractelement <16 x double> %2975, i32 7
  %extract6636 = extractelement <16 x double> %2975, i32 8
  %extract6637 = extractelement <16 x double> %2975, i32 9
  %extract6638 = extractelement <16 x double> %2975, i32 10
  %extract6639 = extractelement <16 x double> %2975, i32 11
  %extract6640 = extractelement <16 x double> %2975, i32 12
  %extract6641 = extractelement <16 x double> %2975, i32 13
  %extract6642 = extractelement <16 x double> %2975, i32 14
  %extract6643 = extractelement <16 x double> %2975, i32 15
  %2976 = tail call double @_Z3expd(double %extract6628) nounwind
  %2977 = tail call double @_Z3expd(double %extract6629) nounwind
  %2978 = tail call double @_Z3expd(double %extract6630) nounwind
  %2979 = tail call double @_Z3expd(double %extract6631) nounwind
  %2980 = tail call double @_Z3expd(double %extract6632) nounwind
  %2981 = tail call double @_Z3expd(double %extract6633) nounwind
  %2982 = tail call double @_Z3expd(double %extract6634) nounwind
  %2983 = tail call double @_Z3expd(double %extract6635) nounwind
  %2984 = tail call double @_Z3expd(double %extract6636) nounwind
  %2985 = tail call double @_Z3expd(double %extract6637) nounwind
  %2986 = tail call double @_Z3expd(double %extract6638) nounwind
  %2987 = tail call double @_Z3expd(double %extract6639) nounwind
  %2988 = tail call double @_Z3expd(double %extract6640) nounwind
  %2989 = tail call double @_Z3expd(double %extract6641) nounwind
  %2990 = tail call double @_Z3expd(double %extract6642) nounwind
  %2991 = tail call double @_Z3expd(double %extract6643) nounwind
  %temp.vect6663 = insertelement <16 x double> undef, double %2976, i32 0
  %temp.vect6664 = insertelement <16 x double> %temp.vect6663, double %2977, i32 1
  %temp.vect6665 = insertelement <16 x double> %temp.vect6664, double %2978, i32 2
  %temp.vect6666 = insertelement <16 x double> %temp.vect6665, double %2979, i32 3
  %temp.vect6667 = insertelement <16 x double> %temp.vect6666, double %2980, i32 4
  %temp.vect6668 = insertelement <16 x double> %temp.vect6667, double %2981, i32 5
  %temp.vect6669 = insertelement <16 x double> %temp.vect6668, double %2982, i32 6
  %temp.vect6670 = insertelement <16 x double> %temp.vect6669, double %2983, i32 7
  %temp.vect6671 = insertelement <16 x double> %temp.vect6670, double %2984, i32 8
  %temp.vect6672 = insertelement <16 x double> %temp.vect6671, double %2985, i32 9
  %temp.vect6673 = insertelement <16 x double> %temp.vect6672, double %2986, i32 10
  %temp.vect6674 = insertelement <16 x double> %temp.vect6673, double %2987, i32 11
  %temp.vect6675 = insertelement <16 x double> %temp.vect6674, double %2988, i32 12
  %temp.vect6676 = insertelement <16 x double> %temp.vect6675, double %2989, i32 13
  %temp.vect6677 = insertelement <16 x double> %temp.vect6676, double %2990, i32 14
  %temp.vect6678 = insertelement <16 x double> %temp.vect6677, double %2991, i32 15
  %2992 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2993 = load i64* %2992, align 8
  %2994 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %2995 = load i64* %2994, align 8
  %2996 = add i64 %2993, %2995
  %extract6646 = add i64 %2996, 20127744
  %2997 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract6646
  %ptrTypeCast6662 = bitcast double addrspace(1)* %2997 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect6678, <16 x double> addrspace(1)* %ptrTypeCast6662, align 8
  %2998 = fmul <16 x double> %temp.vect97, <double 1.740000e+00, double 1.740000e+00, double 1.740000e+00, double 1.740000e+00, double 1.740000e+00, double 1.740000e+00, double 1.740000e+00, double 1.740000e+00, double 1.740000e+00, double 1.740000e+00, double 1.740000e+00, double 1.740000e+00, double 1.740000e+00, double 1.740000e+00, double 1.740000e+00, double 1.740000e+00>
  %2999 = fadd <16 x double> %2998, <double 0x402F42BB4EF60759, double 0x402F42BB4EF60759, double 0x402F42BB4EF60759, double 0x402F42BB4EF60759, double 0x402F42BB4EF60759, double 0x402F42BB4EF60759, double 0x402F42BB4EF60759, double 0x402F42BB4EF60759, double 0x402F42BB4EF60759, double 0x402F42BB4EF60759, double 0x402F42BB4EF60759, double 0x402F42BB4EF60759, double 0x402F42BB4EF60759, double 0x402F42BB4EF60759, double 0x402F42BB4EF60759, double 0x402F42BB4EF60759>
  %3000 = fmul <16 x double> %24, <double 0x40B48A9D3AE685DB, double 0x40B48A9D3AE685DB, double 0x40B48A9D3AE685DB, double 0x40B48A9D3AE685DB, double 0x40B48A9D3AE685DB, double 0x40B48A9D3AE685DB, double 0x40B48A9D3AE685DB, double 0x40B48A9D3AE685DB, double 0x40B48A9D3AE685DB, double 0x40B48A9D3AE685DB, double 0x40B48A9D3AE685DB, double 0x40B48A9D3AE685DB, double 0x40B48A9D3AE685DB, double 0x40B48A9D3AE685DB, double 0x40B48A9D3AE685DB, double 0x40B48A9D3AE685DB>
  %3001 = fsub <16 x double> %2999, %3000
  %extract6679 = extractelement <16 x double> %3001, i32 0
  %extract6680 = extractelement <16 x double> %3001, i32 1
  %extract6681 = extractelement <16 x double> %3001, i32 2
  %extract6682 = extractelement <16 x double> %3001, i32 3
  %extract6683 = extractelement <16 x double> %3001, i32 4
  %extract6684 = extractelement <16 x double> %3001, i32 5
  %extract6685 = extractelement <16 x double> %3001, i32 6
  %extract6686 = extractelement <16 x double> %3001, i32 7
  %extract6687 = extractelement <16 x double> %3001, i32 8
  %extract6688 = extractelement <16 x double> %3001, i32 9
  %extract6689 = extractelement <16 x double> %3001, i32 10
  %extract6690 = extractelement <16 x double> %3001, i32 11
  %extract6691 = extractelement <16 x double> %3001, i32 12
  %extract6692 = extractelement <16 x double> %3001, i32 13
  %extract6693 = extractelement <16 x double> %3001, i32 14
  %extract6694 = extractelement <16 x double> %3001, i32 15
  %3002 = tail call double @_Z3expd(double %extract6679) nounwind
  %3003 = tail call double @_Z3expd(double %extract6680) nounwind
  %3004 = tail call double @_Z3expd(double %extract6681) nounwind
  %3005 = tail call double @_Z3expd(double %extract6682) nounwind
  %3006 = tail call double @_Z3expd(double %extract6683) nounwind
  %3007 = tail call double @_Z3expd(double %extract6684) nounwind
  %3008 = tail call double @_Z3expd(double %extract6685) nounwind
  %3009 = tail call double @_Z3expd(double %extract6686) nounwind
  %3010 = tail call double @_Z3expd(double %extract6687) nounwind
  %3011 = tail call double @_Z3expd(double %extract6688) nounwind
  %3012 = tail call double @_Z3expd(double %extract6689) nounwind
  %3013 = tail call double @_Z3expd(double %extract6690) nounwind
  %3014 = tail call double @_Z3expd(double %extract6691) nounwind
  %3015 = tail call double @_Z3expd(double %extract6692) nounwind
  %3016 = tail call double @_Z3expd(double %extract6693) nounwind
  %3017 = tail call double @_Z3expd(double %extract6694) nounwind
  %temp.vect6714 = insertelement <16 x double> undef, double %3002, i32 0
  %temp.vect6715 = insertelement <16 x double> %temp.vect6714, double %3003, i32 1
  %temp.vect6716 = insertelement <16 x double> %temp.vect6715, double %3004, i32 2
  %temp.vect6717 = insertelement <16 x double> %temp.vect6716, double %3005, i32 3
  %temp.vect6718 = insertelement <16 x double> %temp.vect6717, double %3006, i32 4
  %temp.vect6719 = insertelement <16 x double> %temp.vect6718, double %3007, i32 5
  %temp.vect6720 = insertelement <16 x double> %temp.vect6719, double %3008, i32 6
  %temp.vect6721 = insertelement <16 x double> %temp.vect6720, double %3009, i32 7
  %temp.vect6722 = insertelement <16 x double> %temp.vect6721, double %3010, i32 8
  %temp.vect6723 = insertelement <16 x double> %temp.vect6722, double %3011, i32 9
  %temp.vect6724 = insertelement <16 x double> %temp.vect6723, double %3012, i32 10
  %temp.vect6725 = insertelement <16 x double> %temp.vect6724, double %3013, i32 11
  %temp.vect6726 = insertelement <16 x double> %temp.vect6725, double %3014, i32 12
  %temp.vect6727 = insertelement <16 x double> %temp.vect6726, double %3015, i32 13
  %temp.vect6728 = insertelement <16 x double> %temp.vect6727, double %3016, i32 14
  %temp.vect6729 = insertelement <16 x double> %temp.vect6728, double %3017, i32 15
  %3018 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %3019 = load i64* %3018, align 8
  %3020 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %3021 = load i64* %3020, align 8
  %3022 = add i64 %3019, %3021
  %extract6697 = add i64 %3022, 20238336
  %3023 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract6697
  %ptrTypeCast6713 = bitcast double addrspace(1)* %3023 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect6729, <16 x double> addrspace(1)* %ptrTypeCast6713, align 8
  %3024 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %3025 = load i64* %3024, align 8
  %3026 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %3027 = load i64* %3026, align 8
  %3028 = add i64 %3025, %3027
  %extract6732 = add i64 %3028, 20348928
  %3029 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract6732
  %ptrTypeCast6748 = bitcast double addrspace(1)* %3029 to <16 x double> addrspace(1)*
  store <16 x double> <double 2.000000e+14, double 2.000000e+14, double 2.000000e+14, double 2.000000e+14, double 2.000000e+14, double 2.000000e+14, double 2.000000e+14, double 2.000000e+14, double 2.000000e+14, double 2.000000e+14, double 2.000000e+14, double 2.000000e+14, double 2.000000e+14, double 2.000000e+14, double 2.000000e+14, double 2.000000e+14>, <16 x double> addrspace(1)* %ptrTypeCast6748, align 8
  %3030 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %3031 = load i64* %3030, align 8
  %3032 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %3033 = load i64* %3032, align 8
  %3034 = add i64 %3031, %3033
  %extract6751 = add i64 %3034, 20570112
  %3035 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract6751
  %ptrTypeCast6767 = bitcast double addrspace(1)* %3035 to <16 x double> addrspace(1)*
  store <16 x double> <double 2.660000e+12, double 2.660000e+12, double 2.660000e+12, double 2.660000e+12, double 2.660000e+12, double 2.660000e+12, double 2.660000e+12, double 2.660000e+12, double 2.660000e+12, double 2.660000e+12, double 2.660000e+12, double 2.660000e+12, double 2.660000e+12, double 2.660000e+12, double 2.660000e+12, double 2.660000e+12>, <16 x double> addrspace(1)* %ptrTypeCast6767, align 8
  %3036 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %3037 = load i64* %3036, align 8
  %3038 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %3039 = load i64* %3038, align 8
  %3040 = add i64 %3037, %3039
  %extract6770 = add i64 %3040, 20680704
  %3041 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract6770
  %ptrTypeCast6786 = bitcast double addrspace(1)* %3041 to <16 x double> addrspace(1)*
  store <16 x double> <double 6.600000e+12, double 6.600000e+12, double 6.600000e+12, double 6.600000e+12, double 6.600000e+12, double 6.600000e+12, double 6.600000e+12, double 6.600000e+12, double 6.600000e+12, double 6.600000e+12, double 6.600000e+12, double 6.600000e+12, double 6.600000e+12, double 6.600000e+12, double 6.600000e+12, double 6.600000e+12>, <16 x double> addrspace(1)* %ptrTypeCast6786, align 8
  %3042 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %3043 = load i64* %3042, align 8
  %3044 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %3045 = load i64* %3044, align 8
  %3046 = add i64 %3043, %3045
  %extract6789 = add i64 %3046, 20791296
  %3047 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract6789
  %ptrTypeCast6805 = bitcast double addrspace(1)* %3047 to <16 x double> addrspace(1)*
  store <16 x double> <double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast6805, align 8
  %3048 = fmul <16 x double> %24, <double 0x4099A35AB7564303, double 0x4099A35AB7564303, double 0x4099A35AB7564303, double 0x4099A35AB7564303, double 0x4099A35AB7564303, double 0x4099A35AB7564303, double 0x4099A35AB7564303, double 0x4099A35AB7564303, double 0x4099A35AB7564303, double 0x4099A35AB7564303, double 0x4099A35AB7564303, double 0x4099A35AB7564303, double 0x4099A35AB7564303, double 0x4099A35AB7564303, double 0x4099A35AB7564303, double 0x4099A35AB7564303>
  %3049 = fsub <16 x double> <double 0x403E38024E8ED94C, double 0x403E38024E8ED94C, double 0x403E38024E8ED94C, double 0x403E38024E8ED94C, double 0x403E38024E8ED94C, double 0x403E38024E8ED94C, double 0x403E38024E8ED94C, double 0x403E38024E8ED94C, double 0x403E38024E8ED94C, double 0x403E38024E8ED94C, double 0x403E38024E8ED94C, double 0x403E38024E8ED94C, double 0x403E38024E8ED94C, double 0x403E38024E8ED94C, double 0x403E38024E8ED94C, double 0x403E38024E8ED94C>, %3048
  %extract6806 = extractelement <16 x double> %3049, i32 0
  %extract6807 = extractelement <16 x double> %3049, i32 1
  %extract6808 = extractelement <16 x double> %3049, i32 2
  %extract6809 = extractelement <16 x double> %3049, i32 3
  %extract6810 = extractelement <16 x double> %3049, i32 4
  %extract6811 = extractelement <16 x double> %3049, i32 5
  %extract6812 = extractelement <16 x double> %3049, i32 6
  %extract6813 = extractelement <16 x double> %3049, i32 7
  %extract6814 = extractelement <16 x double> %3049, i32 8
  %extract6815 = extractelement <16 x double> %3049, i32 9
  %extract6816 = extractelement <16 x double> %3049, i32 10
  %extract6817 = extractelement <16 x double> %3049, i32 11
  %extract6818 = extractelement <16 x double> %3049, i32 12
  %extract6819 = extractelement <16 x double> %3049, i32 13
  %extract6820 = extractelement <16 x double> %3049, i32 14
  %extract6821 = extractelement <16 x double> %3049, i32 15
  %3050 = tail call double @_Z3expd(double %extract6806) nounwind
  %3051 = tail call double @_Z3expd(double %extract6807) nounwind
  %3052 = tail call double @_Z3expd(double %extract6808) nounwind
  %3053 = tail call double @_Z3expd(double %extract6809) nounwind
  %3054 = tail call double @_Z3expd(double %extract6810) nounwind
  %3055 = tail call double @_Z3expd(double %extract6811) nounwind
  %3056 = tail call double @_Z3expd(double %extract6812) nounwind
  %3057 = tail call double @_Z3expd(double %extract6813) nounwind
  %3058 = tail call double @_Z3expd(double %extract6814) nounwind
  %3059 = tail call double @_Z3expd(double %extract6815) nounwind
  %3060 = tail call double @_Z3expd(double %extract6816) nounwind
  %3061 = tail call double @_Z3expd(double %extract6817) nounwind
  %3062 = tail call double @_Z3expd(double %extract6818) nounwind
  %3063 = tail call double @_Z3expd(double %extract6819) nounwind
  %3064 = tail call double @_Z3expd(double %extract6820) nounwind
  %3065 = tail call double @_Z3expd(double %extract6821) nounwind
  %temp.vect6841 = insertelement <16 x double> undef, double %3050, i32 0
  %temp.vect6842 = insertelement <16 x double> %temp.vect6841, double %3051, i32 1
  %temp.vect6843 = insertelement <16 x double> %temp.vect6842, double %3052, i32 2
  %temp.vect6844 = insertelement <16 x double> %temp.vect6843, double %3053, i32 3
  %temp.vect6845 = insertelement <16 x double> %temp.vect6844, double %3054, i32 4
  %temp.vect6846 = insertelement <16 x double> %temp.vect6845, double %3055, i32 5
  %temp.vect6847 = insertelement <16 x double> %temp.vect6846, double %3056, i32 6
  %temp.vect6848 = insertelement <16 x double> %temp.vect6847, double %3057, i32 7
  %temp.vect6849 = insertelement <16 x double> %temp.vect6848, double %3058, i32 8
  %temp.vect6850 = insertelement <16 x double> %temp.vect6849, double %3059, i32 9
  %temp.vect6851 = insertelement <16 x double> %temp.vect6850, double %3060, i32 10
  %temp.vect6852 = insertelement <16 x double> %temp.vect6851, double %3061, i32 11
  %temp.vect6853 = insertelement <16 x double> %temp.vect6852, double %3062, i32 12
  %temp.vect6854 = insertelement <16 x double> %temp.vect6853, double %3063, i32 13
  %temp.vect6855 = insertelement <16 x double> %temp.vect6854, double %3064, i32 14
  %temp.vect6856 = insertelement <16 x double> %temp.vect6855, double %3065, i32 15
  %3066 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %3067 = load i64* %3066, align 8
  %3068 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %3069 = load i64* %3068, align 8
  %3070 = add i64 %3067, %3069
  %extract6824 = add i64 %3070, 20901888
  %3071 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract6824
  %ptrTypeCast6840 = bitcast double addrspace(1)* %3071 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect6856, <16 x double> addrspace(1)* %ptrTypeCast6840, align 8
  %3072 = fmul <16 x double> %temp.vect97, <double 2.390000e+00, double 2.390000e+00, double 2.390000e+00, double 2.390000e+00, double 2.390000e+00, double 2.390000e+00, double 2.390000e+00, double 2.390000e+00, double 2.390000e+00, double 2.390000e+00, double 2.390000e+00, double 2.390000e+00, double 2.390000e+00, double 2.390000e+00, double 2.390000e+00, double 2.390000e+00>
  %3073 = fsub <16 x double> <double 0x4049903D7683141C, double 0x4049903D7683141C, double 0x4049903D7683141C, double 0x4049903D7683141C, double 0x4049903D7683141C, double 0x4049903D7683141C, double 0x4049903D7683141C, double 0x4049903D7683141C, double 0x4049903D7683141C, double 0x4049903D7683141C, double 0x4049903D7683141C, double 0x4049903D7683141C, double 0x4049903D7683141C, double 0x4049903D7683141C, double 0x4049903D7683141C, double 0x4049903D7683141C>, %3072
  %3074 = fmul <16 x double> %24, <double 0x40B5F9F65BEA0BA2, double 0x40B5F9F65BEA0BA2, double 0x40B5F9F65BEA0BA2, double 0x40B5F9F65BEA0BA2, double 0x40B5F9F65BEA0BA2, double 0x40B5F9F65BEA0BA2, double 0x40B5F9F65BEA0BA2, double 0x40B5F9F65BEA0BA2, double 0x40B5F9F65BEA0BA2, double 0x40B5F9F65BEA0BA2, double 0x40B5F9F65BEA0BA2, double 0x40B5F9F65BEA0BA2, double 0x40B5F9F65BEA0BA2, double 0x40B5F9F65BEA0BA2, double 0x40B5F9F65BEA0BA2, double 0x40B5F9F65BEA0BA2>
  %3075 = fsub <16 x double> %3073, %3074
  %extract6857 = extractelement <16 x double> %3075, i32 0
  %extract6858 = extractelement <16 x double> %3075, i32 1
  %extract6859 = extractelement <16 x double> %3075, i32 2
  %extract6860 = extractelement <16 x double> %3075, i32 3
  %extract6861 = extractelement <16 x double> %3075, i32 4
  %extract6862 = extractelement <16 x double> %3075, i32 5
  %extract6863 = extractelement <16 x double> %3075, i32 6
  %extract6864 = extractelement <16 x double> %3075, i32 7
  %extract6865 = extractelement <16 x double> %3075, i32 8
  %extract6866 = extractelement <16 x double> %3075, i32 9
  %extract6867 = extractelement <16 x double> %3075, i32 10
  %extract6868 = extractelement <16 x double> %3075, i32 11
  %extract6869 = extractelement <16 x double> %3075, i32 12
  %extract6870 = extractelement <16 x double> %3075, i32 13
  %extract6871 = extractelement <16 x double> %3075, i32 14
  %extract6872 = extractelement <16 x double> %3075, i32 15
  %3076 = tail call double @_Z3expd(double %extract6857) nounwind
  %3077 = tail call double @_Z3expd(double %extract6858) nounwind
  %3078 = tail call double @_Z3expd(double %extract6859) nounwind
  %3079 = tail call double @_Z3expd(double %extract6860) nounwind
  %3080 = tail call double @_Z3expd(double %extract6861) nounwind
  %3081 = tail call double @_Z3expd(double %extract6862) nounwind
  %3082 = tail call double @_Z3expd(double %extract6863) nounwind
  %3083 = tail call double @_Z3expd(double %extract6864) nounwind
  %3084 = tail call double @_Z3expd(double %extract6865) nounwind
  %3085 = tail call double @_Z3expd(double %extract6866) nounwind
  %3086 = tail call double @_Z3expd(double %extract6867) nounwind
  %3087 = tail call double @_Z3expd(double %extract6868) nounwind
  %3088 = tail call double @_Z3expd(double %extract6869) nounwind
  %3089 = tail call double @_Z3expd(double %extract6870) nounwind
  %3090 = tail call double @_Z3expd(double %extract6871) nounwind
  %3091 = tail call double @_Z3expd(double %extract6872) nounwind
  %temp.vect6892 = insertelement <16 x double> undef, double %3076, i32 0
  %temp.vect6893 = insertelement <16 x double> %temp.vect6892, double %3077, i32 1
  %temp.vect6894 = insertelement <16 x double> %temp.vect6893, double %3078, i32 2
  %temp.vect6895 = insertelement <16 x double> %temp.vect6894, double %3079, i32 3
  %temp.vect6896 = insertelement <16 x double> %temp.vect6895, double %3080, i32 4
  %temp.vect6897 = insertelement <16 x double> %temp.vect6896, double %3081, i32 5
  %temp.vect6898 = insertelement <16 x double> %temp.vect6897, double %3082, i32 6
  %temp.vect6899 = insertelement <16 x double> %temp.vect6898, double %3083, i32 7
  %temp.vect6900 = insertelement <16 x double> %temp.vect6899, double %3084, i32 8
  %temp.vect6901 = insertelement <16 x double> %temp.vect6900, double %3085, i32 9
  %temp.vect6902 = insertelement <16 x double> %temp.vect6901, double %3086, i32 10
  %temp.vect6903 = insertelement <16 x double> %temp.vect6902, double %3087, i32 11
  %temp.vect6904 = insertelement <16 x double> %temp.vect6903, double %3088, i32 12
  %temp.vect6905 = insertelement <16 x double> %temp.vect6904, double %3089, i32 13
  %temp.vect6906 = insertelement <16 x double> %temp.vect6905, double %3090, i32 14
  %temp.vect6907 = insertelement <16 x double> %temp.vect6906, double %3091, i32 15
  %3092 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %3093 = load i64* %3092, align 8
  %3094 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %3095 = load i64* %3094, align 8
  %3096 = add i64 %3093, %3095
  %extract6875 = add i64 %3096, 21012480
  %3097 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract6875
  %ptrTypeCast6891 = bitcast double addrspace(1)* %3097 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect6907, <16 x double> addrspace(1)* %ptrTypeCast6891, align 8
  %3098 = fmul <16 x double> %temp.vect97, <double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00>
  %3099 = fadd <16 x double> %3098, <double 0x4028164CABAA3D56, double 0x4028164CABAA3D56, double 0x4028164CABAA3D56, double 0x4028164CABAA3D56, double 0x4028164CABAA3D56, double 0x4028164CABAA3D56, double 0x4028164CABAA3D56, double 0x4028164CABAA3D56, double 0x4028164CABAA3D56, double 0x4028164CABAA3D56, double 0x4028164CABAA3D56, double 0x4028164CABAA3D56, double 0x4028164CABAA3D56, double 0x4028164CABAA3D56, double 0x4028164CABAA3D56, double 0x4028164CABAA3D56>
  %3100 = fmul <16 x double> %24, <double 0x40939409BA5E353F, double 0x40939409BA5E353F, double 0x40939409BA5E353F, double 0x40939409BA5E353F, double 0x40939409BA5E353F, double 0x40939409BA5E353F, double 0x40939409BA5E353F, double 0x40939409BA5E353F, double 0x40939409BA5E353F, double 0x40939409BA5E353F, double 0x40939409BA5E353F, double 0x40939409BA5E353F, double 0x40939409BA5E353F, double 0x40939409BA5E353F, double 0x40939409BA5E353F, double 0x40939409BA5E353F>
  %3101 = fsub <16 x double> %3099, %3100
  %extract6908 = extractelement <16 x double> %3101, i32 0
  %extract6909 = extractelement <16 x double> %3101, i32 1
  %extract6910 = extractelement <16 x double> %3101, i32 2
  %extract6911 = extractelement <16 x double> %3101, i32 3
  %extract6912 = extractelement <16 x double> %3101, i32 4
  %extract6913 = extractelement <16 x double> %3101, i32 5
  %extract6914 = extractelement <16 x double> %3101, i32 6
  %extract6915 = extractelement <16 x double> %3101, i32 7
  %extract6916 = extractelement <16 x double> %3101, i32 8
  %extract6917 = extractelement <16 x double> %3101, i32 9
  %extract6918 = extractelement <16 x double> %3101, i32 10
  %extract6919 = extractelement <16 x double> %3101, i32 11
  %extract6920 = extractelement <16 x double> %3101, i32 12
  %extract6921 = extractelement <16 x double> %3101, i32 13
  %extract6922 = extractelement <16 x double> %3101, i32 14
  %extract6923 = extractelement <16 x double> %3101, i32 15
  %3102 = tail call double @_Z3expd(double %extract6908) nounwind
  %3103 = tail call double @_Z3expd(double %extract6909) nounwind
  %3104 = tail call double @_Z3expd(double %extract6910) nounwind
  %3105 = tail call double @_Z3expd(double %extract6911) nounwind
  %3106 = tail call double @_Z3expd(double %extract6912) nounwind
  %3107 = tail call double @_Z3expd(double %extract6913) nounwind
  %3108 = tail call double @_Z3expd(double %extract6914) nounwind
  %3109 = tail call double @_Z3expd(double %extract6915) nounwind
  %3110 = tail call double @_Z3expd(double %extract6916) nounwind
  %3111 = tail call double @_Z3expd(double %extract6917) nounwind
  %3112 = tail call double @_Z3expd(double %extract6918) nounwind
  %3113 = tail call double @_Z3expd(double %extract6919) nounwind
  %3114 = tail call double @_Z3expd(double %extract6920) nounwind
  %3115 = tail call double @_Z3expd(double %extract6921) nounwind
  %3116 = tail call double @_Z3expd(double %extract6922) nounwind
  %3117 = tail call double @_Z3expd(double %extract6923) nounwind
  %temp.vect6943 = insertelement <16 x double> undef, double %3102, i32 0
  %temp.vect6944 = insertelement <16 x double> %temp.vect6943, double %3103, i32 1
  %temp.vect6945 = insertelement <16 x double> %temp.vect6944, double %3104, i32 2
  %temp.vect6946 = insertelement <16 x double> %temp.vect6945, double %3105, i32 3
  %temp.vect6947 = insertelement <16 x double> %temp.vect6946, double %3106, i32 4
  %temp.vect6948 = insertelement <16 x double> %temp.vect6947, double %3107, i32 5
  %temp.vect6949 = insertelement <16 x double> %temp.vect6948, double %3108, i32 6
  %temp.vect6950 = insertelement <16 x double> %temp.vect6949, double %3109, i32 7
  %temp.vect6951 = insertelement <16 x double> %temp.vect6950, double %3110, i32 8
  %temp.vect6952 = insertelement <16 x double> %temp.vect6951, double %3111, i32 9
  %temp.vect6953 = insertelement <16 x double> %temp.vect6952, double %3112, i32 10
  %temp.vect6954 = insertelement <16 x double> %temp.vect6953, double %3113, i32 11
  %temp.vect6955 = insertelement <16 x double> %temp.vect6954, double %3114, i32 12
  %temp.vect6956 = insertelement <16 x double> %temp.vect6955, double %3115, i32 13
  %temp.vect6957 = insertelement <16 x double> %temp.vect6956, double %3116, i32 14
  %temp.vect6958 = insertelement <16 x double> %temp.vect6957, double %3117, i32 15
  %3118 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %3119 = load i64* %3118, align 8
  %3120 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %3121 = load i64* %3120, align 8
  %3122 = add i64 %3119, %3121
  %extract6926 = add i64 %3122, 21123072
  %3123 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract6926
  %ptrTypeCast6942 = bitcast double addrspace(1)* %3123 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect6958, <16 x double> addrspace(1)* %ptrTypeCast6942, align 8
  %3124 = fmul <16 x double> %temp.vect97, <double 1.650000e+00, double 1.650000e+00, double 1.650000e+00, double 1.650000e+00, double 1.650000e+00, double 1.650000e+00, double 1.650000e+00, double 1.650000e+00, double 1.650000e+00, double 1.650000e+00, double 1.650000e+00, double 1.650000e+00, double 1.650000e+00, double 1.650000e+00, double 1.650000e+00, double 1.650000e+00>
  %3125 = fadd <16 x double> %3124, <double 0x40329A5E5BD5E9AC, double 0x40329A5E5BD5E9AC, double 0x40329A5E5BD5E9AC, double 0x40329A5E5BD5E9AC, double 0x40329A5E5BD5E9AC, double 0x40329A5E5BD5E9AC, double 0x40329A5E5BD5E9AC, double 0x40329A5E5BD5E9AC, double 0x40329A5E5BD5E9AC, double 0x40329A5E5BD5E9AC, double 0x40329A5E5BD5E9AC, double 0x40329A5E5BD5E9AC, double 0x40329A5E5BD5E9AC, double 0x40329A5E5BD5E9AC, double 0x40329A5E5BD5E9AC, double 0x40329A5E5BD5E9AC>
  %3126 = fmul <16 x double> %24, <double 0x406491A8C154C986, double 0x406491A8C154C986, double 0x406491A8C154C986, double 0x406491A8C154C986, double 0x406491A8C154C986, double 0x406491A8C154C986, double 0x406491A8C154C986, double 0x406491A8C154C986, double 0x406491A8C154C986, double 0x406491A8C154C986, double 0x406491A8C154C986, double 0x406491A8C154C986, double 0x406491A8C154C986, double 0x406491A8C154C986, double 0x406491A8C154C986, double 0x406491A8C154C986>
  %3127 = fsub <16 x double> %3125, %3126
  %extract6959 = extractelement <16 x double> %3127, i32 0
  %extract6960 = extractelement <16 x double> %3127, i32 1
  %extract6961 = extractelement <16 x double> %3127, i32 2
  %extract6962 = extractelement <16 x double> %3127, i32 3
  %extract6963 = extractelement <16 x double> %3127, i32 4
  %extract6964 = extractelement <16 x double> %3127, i32 5
  %extract6965 = extractelement <16 x double> %3127, i32 6
  %extract6966 = extractelement <16 x double> %3127, i32 7
  %extract6967 = extractelement <16 x double> %3127, i32 8
  %extract6968 = extractelement <16 x double> %3127, i32 9
  %extract6969 = extractelement <16 x double> %3127, i32 10
  %extract6970 = extractelement <16 x double> %3127, i32 11
  %extract6971 = extractelement <16 x double> %3127, i32 12
  %extract6972 = extractelement <16 x double> %3127, i32 13
  %extract6973 = extractelement <16 x double> %3127, i32 14
  %extract6974 = extractelement <16 x double> %3127, i32 15
  %3128 = tail call double @_Z3expd(double %extract6959) nounwind
  %3129 = tail call double @_Z3expd(double %extract6960) nounwind
  %3130 = tail call double @_Z3expd(double %extract6961) nounwind
  %3131 = tail call double @_Z3expd(double %extract6962) nounwind
  %3132 = tail call double @_Z3expd(double %extract6963) nounwind
  %3133 = tail call double @_Z3expd(double %extract6964) nounwind
  %3134 = tail call double @_Z3expd(double %extract6965) nounwind
  %3135 = tail call double @_Z3expd(double %extract6966) nounwind
  %3136 = tail call double @_Z3expd(double %extract6967) nounwind
  %3137 = tail call double @_Z3expd(double %extract6968) nounwind
  %3138 = tail call double @_Z3expd(double %extract6969) nounwind
  %3139 = tail call double @_Z3expd(double %extract6970) nounwind
  %3140 = tail call double @_Z3expd(double %extract6971) nounwind
  %3141 = tail call double @_Z3expd(double %extract6972) nounwind
  %3142 = tail call double @_Z3expd(double %extract6973) nounwind
  %3143 = tail call double @_Z3expd(double %extract6974) nounwind
  %temp.vect6994 = insertelement <16 x double> undef, double %3128, i32 0
  %temp.vect6995 = insertelement <16 x double> %temp.vect6994, double %3129, i32 1
  %temp.vect6996 = insertelement <16 x double> %temp.vect6995, double %3130, i32 2
  %temp.vect6997 = insertelement <16 x double> %temp.vect6996, double %3131, i32 3
  %temp.vect6998 = insertelement <16 x double> %temp.vect6997, double %3132, i32 4
  %temp.vect6999 = insertelement <16 x double> %temp.vect6998, double %3133, i32 5
  %temp.vect7000 = insertelement <16 x double> %temp.vect6999, double %3134, i32 6
  %temp.vect7001 = insertelement <16 x double> %temp.vect7000, double %3135, i32 7
  %temp.vect7002 = insertelement <16 x double> %temp.vect7001, double %3136, i32 8
  %temp.vect7003 = insertelement <16 x double> %temp.vect7002, double %3137, i32 9
  %temp.vect7004 = insertelement <16 x double> %temp.vect7003, double %3138, i32 10
  %temp.vect7005 = insertelement <16 x double> %temp.vect7004, double %3139, i32 11
  %temp.vect7006 = insertelement <16 x double> %temp.vect7005, double %3140, i32 12
  %temp.vect7007 = insertelement <16 x double> %temp.vect7006, double %3141, i32 13
  %temp.vect7008 = insertelement <16 x double> %temp.vect7007, double %3142, i32 14
  %temp.vect7009 = insertelement <16 x double> %temp.vect7008, double %3143, i32 15
  %3144 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %3145 = load i64* %3144, align 8
  %3146 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %3147 = load i64* %3146, align 8
  %3148 = add i64 %3145, %3147
  %extract6977 = add i64 %3148, 21233664
  %3149 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract6977
  %ptrTypeCast6993 = bitcast double addrspace(1)* %3149 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect7009, <16 x double> addrspace(1)* %ptrTypeCast6993, align 8
  %3150 = fadd <16 x double> %3124, <double 0x40315EF096D670BA, double 0x40315EF096D670BA, double 0x40315EF096D670BA, double 0x40315EF096D670BA, double 0x40315EF096D670BA, double 0x40315EF096D670BA, double 0x40315EF096D670BA, double 0x40315EF096D670BA, double 0x40315EF096D670BA, double 0x40315EF096D670BA, double 0x40315EF096D670BA, double 0x40315EF096D670BA, double 0x40315EF096D670BA, double 0x40315EF096D670BA, double 0x40315EF096D670BA, double 0x40315EF096D670BA>
  %3151 = fmul <16 x double> %24, <double 0x407E92068EC52A41, double 0x407E92068EC52A41, double 0x407E92068EC52A41, double 0x407E92068EC52A41, double 0x407E92068EC52A41, double 0x407E92068EC52A41, double 0x407E92068EC52A41, double 0x407E92068EC52A41, double 0x407E92068EC52A41, double 0x407E92068EC52A41, double 0x407E92068EC52A41, double 0x407E92068EC52A41, double 0x407E92068EC52A41, double 0x407E92068EC52A41, double 0x407E92068EC52A41, double 0x407E92068EC52A41>
  %3152 = fadd <16 x double> %3150, %3151
  %extract7010 = extractelement <16 x double> %3152, i32 0
  %extract7011 = extractelement <16 x double> %3152, i32 1
  %extract7012 = extractelement <16 x double> %3152, i32 2
  %extract7013 = extractelement <16 x double> %3152, i32 3
  %extract7014 = extractelement <16 x double> %3152, i32 4
  %extract7015 = extractelement <16 x double> %3152, i32 5
  %extract7016 = extractelement <16 x double> %3152, i32 6
  %extract7017 = extractelement <16 x double> %3152, i32 7
  %extract7018 = extractelement <16 x double> %3152, i32 8
  %extract7019 = extractelement <16 x double> %3152, i32 9
  %extract7020 = extractelement <16 x double> %3152, i32 10
  %extract7021 = extractelement <16 x double> %3152, i32 11
  %extract7022 = extractelement <16 x double> %3152, i32 12
  %extract7023 = extractelement <16 x double> %3152, i32 13
  %extract7024 = extractelement <16 x double> %3152, i32 14
  %extract7025 = extractelement <16 x double> %3152, i32 15
  %3153 = tail call double @_Z3expd(double %extract7010) nounwind
  %3154 = tail call double @_Z3expd(double %extract7011) nounwind
  %3155 = tail call double @_Z3expd(double %extract7012) nounwind
  %3156 = tail call double @_Z3expd(double %extract7013) nounwind
  %3157 = tail call double @_Z3expd(double %extract7014) nounwind
  %3158 = tail call double @_Z3expd(double %extract7015) nounwind
  %3159 = tail call double @_Z3expd(double %extract7016) nounwind
  %3160 = tail call double @_Z3expd(double %extract7017) nounwind
  %3161 = tail call double @_Z3expd(double %extract7018) nounwind
  %3162 = tail call double @_Z3expd(double %extract7019) nounwind
  %3163 = tail call double @_Z3expd(double %extract7020) nounwind
  %3164 = tail call double @_Z3expd(double %extract7021) nounwind
  %3165 = tail call double @_Z3expd(double %extract7022) nounwind
  %3166 = tail call double @_Z3expd(double %extract7023) nounwind
  %3167 = tail call double @_Z3expd(double %extract7024) nounwind
  %3168 = tail call double @_Z3expd(double %extract7025) nounwind
  %temp.vect7045 = insertelement <16 x double> undef, double %3153, i32 0
  %temp.vect7046 = insertelement <16 x double> %temp.vect7045, double %3154, i32 1
  %temp.vect7047 = insertelement <16 x double> %temp.vect7046, double %3155, i32 2
  %temp.vect7048 = insertelement <16 x double> %temp.vect7047, double %3156, i32 3
  %temp.vect7049 = insertelement <16 x double> %temp.vect7048, double %3157, i32 4
  %temp.vect7050 = insertelement <16 x double> %temp.vect7049, double %3158, i32 5
  %temp.vect7051 = insertelement <16 x double> %temp.vect7050, double %3159, i32 6
  %temp.vect7052 = insertelement <16 x double> %temp.vect7051, double %3160, i32 7
  %temp.vect7053 = insertelement <16 x double> %temp.vect7052, double %3161, i32 8
  %temp.vect7054 = insertelement <16 x double> %temp.vect7053, double %3162, i32 9
  %temp.vect7055 = insertelement <16 x double> %temp.vect7054, double %3163, i32 10
  %temp.vect7056 = insertelement <16 x double> %temp.vect7055, double %3164, i32 11
  %temp.vect7057 = insertelement <16 x double> %temp.vect7056, double %3165, i32 12
  %temp.vect7058 = insertelement <16 x double> %temp.vect7057, double %3166, i32 13
  %temp.vect7059 = insertelement <16 x double> %temp.vect7058, double %3167, i32 14
  %temp.vect7060 = insertelement <16 x double> %temp.vect7059, double %3168, i32 15
  %3169 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %3170 = load i64* %3169, align 8
  %3171 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %3172 = load i64* %3171, align 8
  %3173 = add i64 %3170, %3172
  %extract7028 = add i64 %3173, 21344256
  %3174 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract7028
  %ptrTypeCast7044 = bitcast double addrspace(1)* %3174 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect7060, <16 x double> addrspace(1)* %ptrTypeCast7044, align 8
  %3175 = fmul <16 x double> %temp.vect97, <double 7.000000e-01, double 7.000000e-01, double 7.000000e-01, double 7.000000e-01, double 7.000000e-01, double 7.000000e-01, double 7.000000e-01, double 7.000000e-01, double 7.000000e-01, double 7.000000e-01, double 7.000000e-01, double 7.000000e-01, double 7.000000e-01, double 7.000000e-01, double 7.000000e-01, double 7.000000e-01>
  %3176 = fadd <16 x double> %3175, <double 0x4039EA8D92245A52, double 0x4039EA8D92245A52, double 0x4039EA8D92245A52, double 0x4039EA8D92245A52, double 0x4039EA8D92245A52, double 0x4039EA8D92245A52, double 0x4039EA8D92245A52, double 0x4039EA8D92245A52, double 0x4039EA8D92245A52, double 0x4039EA8D92245A52, double 0x4039EA8D92245A52, double 0x4039EA8D92245A52, double 0x4039EA8D92245A52, double 0x4039EA8D92245A52, double 0x4039EA8D92245A52, double 0x4039EA8D92245A52>
  %3177 = fmul <16 x double> %24, <double 0x40A71DD3F91E646F, double 0x40A71DD3F91E646F, double 0x40A71DD3F91E646F, double 0x40A71DD3F91E646F, double 0x40A71DD3F91E646F, double 0x40A71DD3F91E646F, double 0x40A71DD3F91E646F, double 0x40A71DD3F91E646F, double 0x40A71DD3F91E646F, double 0x40A71DD3F91E646F, double 0x40A71DD3F91E646F, double 0x40A71DD3F91E646F, double 0x40A71DD3F91E646F, double 0x40A71DD3F91E646F, double 0x40A71DD3F91E646F, double 0x40A71DD3F91E646F>
  %3178 = fsub <16 x double> %3176, %3177
  %extract7061 = extractelement <16 x double> %3178, i32 0
  %extract7062 = extractelement <16 x double> %3178, i32 1
  %extract7063 = extractelement <16 x double> %3178, i32 2
  %extract7064 = extractelement <16 x double> %3178, i32 3
  %extract7065 = extractelement <16 x double> %3178, i32 4
  %extract7066 = extractelement <16 x double> %3178, i32 5
  %extract7067 = extractelement <16 x double> %3178, i32 6
  %extract7068 = extractelement <16 x double> %3178, i32 7
  %extract7069 = extractelement <16 x double> %3178, i32 8
  %extract7070 = extractelement <16 x double> %3178, i32 9
  %extract7071 = extractelement <16 x double> %3178, i32 10
  %extract7072 = extractelement <16 x double> %3178, i32 11
  %extract7073 = extractelement <16 x double> %3178, i32 12
  %extract7074 = extractelement <16 x double> %3178, i32 13
  %extract7075 = extractelement <16 x double> %3178, i32 14
  %extract7076 = extractelement <16 x double> %3178, i32 15
  %3179 = tail call double @_Z3expd(double %extract7061) nounwind
  %3180 = tail call double @_Z3expd(double %extract7062) nounwind
  %3181 = tail call double @_Z3expd(double %extract7063) nounwind
  %3182 = tail call double @_Z3expd(double %extract7064) nounwind
  %3183 = tail call double @_Z3expd(double %extract7065) nounwind
  %3184 = tail call double @_Z3expd(double %extract7066) nounwind
  %3185 = tail call double @_Z3expd(double %extract7067) nounwind
  %3186 = tail call double @_Z3expd(double %extract7068) nounwind
  %3187 = tail call double @_Z3expd(double %extract7069) nounwind
  %3188 = tail call double @_Z3expd(double %extract7070) nounwind
  %3189 = tail call double @_Z3expd(double %extract7071) nounwind
  %3190 = tail call double @_Z3expd(double %extract7072) nounwind
  %3191 = tail call double @_Z3expd(double %extract7073) nounwind
  %3192 = tail call double @_Z3expd(double %extract7074) nounwind
  %3193 = tail call double @_Z3expd(double %extract7075) nounwind
  %3194 = tail call double @_Z3expd(double %extract7076) nounwind
  %temp.vect7096 = insertelement <16 x double> undef, double %3179, i32 0
  %temp.vect7097 = insertelement <16 x double> %temp.vect7096, double %3180, i32 1
  %temp.vect7098 = insertelement <16 x double> %temp.vect7097, double %3181, i32 2
  %temp.vect7099 = insertelement <16 x double> %temp.vect7098, double %3182, i32 3
  %temp.vect7100 = insertelement <16 x double> %temp.vect7099, double %3183, i32 4
  %temp.vect7101 = insertelement <16 x double> %temp.vect7100, double %3184, i32 5
  %temp.vect7102 = insertelement <16 x double> %temp.vect7101, double %3185, i32 6
  %temp.vect7103 = insertelement <16 x double> %temp.vect7102, double %3186, i32 7
  %temp.vect7104 = insertelement <16 x double> %temp.vect7103, double %3187, i32 8
  %temp.vect7105 = insertelement <16 x double> %temp.vect7104, double %3188, i32 9
  %temp.vect7106 = insertelement <16 x double> %temp.vect7105, double %3189, i32 10
  %temp.vect7107 = insertelement <16 x double> %temp.vect7106, double %3190, i32 11
  %temp.vect7108 = insertelement <16 x double> %temp.vect7107, double %3191, i32 12
  %temp.vect7109 = insertelement <16 x double> %temp.vect7108, double %3192, i32 13
  %temp.vect7110 = insertelement <16 x double> %temp.vect7109, double %3193, i32 14
  %temp.vect7111 = insertelement <16 x double> %temp.vect7110, double %3194, i32 15
  %3195 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %3196 = load i64* %3195, align 8
  %3197 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %3198 = load i64* %3197, align 8
  %3199 = add i64 %3196, %3198
  %extract7079 = add i64 %3199, 21454848
  %3200 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract7079
  %ptrTypeCast7095 = bitcast double addrspace(1)* %3200 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect7111, <16 x double> addrspace(1)* %ptrTypeCast7095, align 8
  %3201 = fadd <16 x double> %481, <double 0x402DE4D1BDCD5589, double 0x402DE4D1BDCD5589, double 0x402DE4D1BDCD5589, double 0x402DE4D1BDCD5589, double 0x402DE4D1BDCD5589, double 0x402DE4D1BDCD5589, double 0x402DE4D1BDCD5589, double 0x402DE4D1BDCD5589, double 0x402DE4D1BDCD5589, double 0x402DE4D1BDCD5589, double 0x402DE4D1BDCD5589, double 0x402DE4D1BDCD5589, double 0x402DE4D1BDCD5589, double 0x402DE4D1BDCD5589, double 0x402DE4D1BDCD5589, double 0x402DE4D1BDCD5589>
  %3202 = fmul <16 x double> %24, <double 0x4062BEAC94B380CB, double 0x4062BEAC94B380CB, double 0x4062BEAC94B380CB, double 0x4062BEAC94B380CB, double 0x4062BEAC94B380CB, double 0x4062BEAC94B380CB, double 0x4062BEAC94B380CB, double 0x4062BEAC94B380CB, double 0x4062BEAC94B380CB, double 0x4062BEAC94B380CB, double 0x4062BEAC94B380CB, double 0x4062BEAC94B380CB, double 0x4062BEAC94B380CB, double 0x4062BEAC94B380CB, double 0x4062BEAC94B380CB, double 0x4062BEAC94B380CB>
  %3203 = fadd <16 x double> %3201, %3202
  %extract7112 = extractelement <16 x double> %3203, i32 0
  %extract7113 = extractelement <16 x double> %3203, i32 1
  %extract7114 = extractelement <16 x double> %3203, i32 2
  %extract7115 = extractelement <16 x double> %3203, i32 3
  %extract7116 = extractelement <16 x double> %3203, i32 4
  %extract7117 = extractelement <16 x double> %3203, i32 5
  %extract7118 = extractelement <16 x double> %3203, i32 6
  %extract7119 = extractelement <16 x double> %3203, i32 7
  %extract7120 = extractelement <16 x double> %3203, i32 8
  %extract7121 = extractelement <16 x double> %3203, i32 9
  %extract7122 = extractelement <16 x double> %3203, i32 10
  %extract7123 = extractelement <16 x double> %3203, i32 11
  %extract7124 = extractelement <16 x double> %3203, i32 12
  %extract7125 = extractelement <16 x double> %3203, i32 13
  %extract7126 = extractelement <16 x double> %3203, i32 14
  %extract7127 = extractelement <16 x double> %3203, i32 15
  %3204 = tail call double @_Z3expd(double %extract7112) nounwind
  %3205 = tail call double @_Z3expd(double %extract7113) nounwind
  %3206 = tail call double @_Z3expd(double %extract7114) nounwind
  %3207 = tail call double @_Z3expd(double %extract7115) nounwind
  %3208 = tail call double @_Z3expd(double %extract7116) nounwind
  %3209 = tail call double @_Z3expd(double %extract7117) nounwind
  %3210 = tail call double @_Z3expd(double %extract7118) nounwind
  %3211 = tail call double @_Z3expd(double %extract7119) nounwind
  %3212 = tail call double @_Z3expd(double %extract7120) nounwind
  %3213 = tail call double @_Z3expd(double %extract7121) nounwind
  %3214 = tail call double @_Z3expd(double %extract7122) nounwind
  %3215 = tail call double @_Z3expd(double %extract7123) nounwind
  %3216 = tail call double @_Z3expd(double %extract7124) nounwind
  %3217 = tail call double @_Z3expd(double %extract7125) nounwind
  %3218 = tail call double @_Z3expd(double %extract7126) nounwind
  %3219 = tail call double @_Z3expd(double %extract7127) nounwind
  %temp.vect7147 = insertelement <16 x double> undef, double %3204, i32 0
  %temp.vect7148 = insertelement <16 x double> %temp.vect7147, double %3205, i32 1
  %temp.vect7149 = insertelement <16 x double> %temp.vect7148, double %3206, i32 2
  %temp.vect7150 = insertelement <16 x double> %temp.vect7149, double %3207, i32 3
  %temp.vect7151 = insertelement <16 x double> %temp.vect7150, double %3208, i32 4
  %temp.vect7152 = insertelement <16 x double> %temp.vect7151, double %3209, i32 5
  %temp.vect7153 = insertelement <16 x double> %temp.vect7152, double %3210, i32 6
  %temp.vect7154 = insertelement <16 x double> %temp.vect7153, double %3211, i32 7
  %temp.vect7155 = insertelement <16 x double> %temp.vect7154, double %3212, i32 8
  %temp.vect7156 = insertelement <16 x double> %temp.vect7155, double %3213, i32 9
  %temp.vect7157 = insertelement <16 x double> %temp.vect7156, double %3214, i32 10
  %temp.vect7158 = insertelement <16 x double> %temp.vect7157, double %3215, i32 11
  %temp.vect7159 = insertelement <16 x double> %temp.vect7158, double %3216, i32 12
  %temp.vect7160 = insertelement <16 x double> %temp.vect7159, double %3217, i32 13
  %temp.vect7161 = insertelement <16 x double> %temp.vect7160, double %3218, i32 14
  %temp.vect7162 = insertelement <16 x double> %temp.vect7161, double %3219, i32 15
  %3220 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %3221 = load i64* %3220, align 8
  %3222 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %3223 = load i64* %3222, align 8
  %3224 = add i64 %3221, %3223
  %extract7130 = add i64 %3224, 21565440
  %3225 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract7130
  %ptrTypeCast7146 = bitcast double addrspace(1)* %3225 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect7162, <16 x double> addrspace(1)* %ptrTypeCast7146, align 8
  %3226 = fmul <16 x double> %temp.vect97, <double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00>
  %3227 = fadd <16 x double> %3226, <double 0x402256CB1CF45780, double 0x402256CB1CF45780, double 0x402256CB1CF45780, double 0x402256CB1CF45780, double 0x402256CB1CF45780, double 0x402256CB1CF45780, double 0x402256CB1CF45780, double 0x402256CB1CF45780, double 0x402256CB1CF45780, double 0x402256CB1CF45780, double 0x402256CB1CF45780, double 0x402256CB1CF45780, double 0x402256CB1CF45780, double 0x402256CB1CF45780, double 0x402256CB1CF45780, double 0x402256CB1CF45780>
  %3228 = fmul <16 x double> %24, <double 0x40BB57BE6CF41F21, double 0x40BB57BE6CF41F21, double 0x40BB57BE6CF41F21, double 0x40BB57BE6CF41F21, double 0x40BB57BE6CF41F21, double 0x40BB57BE6CF41F21, double 0x40BB57BE6CF41F21, double 0x40BB57BE6CF41F21, double 0x40BB57BE6CF41F21, double 0x40BB57BE6CF41F21, double 0x40BB57BE6CF41F21, double 0x40BB57BE6CF41F21, double 0x40BB57BE6CF41F21, double 0x40BB57BE6CF41F21, double 0x40BB57BE6CF41F21, double 0x40BB57BE6CF41F21>
  %3229 = fsub <16 x double> %3227, %3228
  %extract7163 = extractelement <16 x double> %3229, i32 0
  %extract7164 = extractelement <16 x double> %3229, i32 1
  %extract7165 = extractelement <16 x double> %3229, i32 2
  %extract7166 = extractelement <16 x double> %3229, i32 3
  %extract7167 = extractelement <16 x double> %3229, i32 4
  %extract7168 = extractelement <16 x double> %3229, i32 5
  %extract7169 = extractelement <16 x double> %3229, i32 6
  %extract7170 = extractelement <16 x double> %3229, i32 7
  %extract7171 = extractelement <16 x double> %3229, i32 8
  %extract7172 = extractelement <16 x double> %3229, i32 9
  %extract7173 = extractelement <16 x double> %3229, i32 10
  %extract7174 = extractelement <16 x double> %3229, i32 11
  %extract7175 = extractelement <16 x double> %3229, i32 12
  %extract7176 = extractelement <16 x double> %3229, i32 13
  %extract7177 = extractelement <16 x double> %3229, i32 14
  %extract7178 = extractelement <16 x double> %3229, i32 15
  %3230 = tail call double @_Z3expd(double %extract7163) nounwind
  %3231 = tail call double @_Z3expd(double %extract7164) nounwind
  %3232 = tail call double @_Z3expd(double %extract7165) nounwind
  %3233 = tail call double @_Z3expd(double %extract7166) nounwind
  %3234 = tail call double @_Z3expd(double %extract7167) nounwind
  %3235 = tail call double @_Z3expd(double %extract7168) nounwind
  %3236 = tail call double @_Z3expd(double %extract7169) nounwind
  %3237 = tail call double @_Z3expd(double %extract7170) nounwind
  %3238 = tail call double @_Z3expd(double %extract7171) nounwind
  %3239 = tail call double @_Z3expd(double %extract7172) nounwind
  %3240 = tail call double @_Z3expd(double %extract7173) nounwind
  %3241 = tail call double @_Z3expd(double %extract7174) nounwind
  %3242 = tail call double @_Z3expd(double %extract7175) nounwind
  %3243 = tail call double @_Z3expd(double %extract7176) nounwind
  %3244 = tail call double @_Z3expd(double %extract7177) nounwind
  %3245 = tail call double @_Z3expd(double %extract7178) nounwind
  %temp.vect7198 = insertelement <16 x double> undef, double %3230, i32 0
  %temp.vect7199 = insertelement <16 x double> %temp.vect7198, double %3231, i32 1
  %temp.vect7200 = insertelement <16 x double> %temp.vect7199, double %3232, i32 2
  %temp.vect7201 = insertelement <16 x double> %temp.vect7200, double %3233, i32 3
  %temp.vect7202 = insertelement <16 x double> %temp.vect7201, double %3234, i32 4
  %temp.vect7203 = insertelement <16 x double> %temp.vect7202, double %3235, i32 5
  %temp.vect7204 = insertelement <16 x double> %temp.vect7203, double %3236, i32 6
  %temp.vect7205 = insertelement <16 x double> %temp.vect7204, double %3237, i32 7
  %temp.vect7206 = insertelement <16 x double> %temp.vect7205, double %3238, i32 8
  %temp.vect7207 = insertelement <16 x double> %temp.vect7206, double %3239, i32 9
  %temp.vect7208 = insertelement <16 x double> %temp.vect7207, double %3240, i32 10
  %temp.vect7209 = insertelement <16 x double> %temp.vect7208, double %3241, i32 11
  %temp.vect7210 = insertelement <16 x double> %temp.vect7209, double %3242, i32 12
  %temp.vect7211 = insertelement <16 x double> %temp.vect7210, double %3243, i32 13
  %temp.vect7212 = insertelement <16 x double> %temp.vect7211, double %3244, i32 14
  %temp.vect7213 = insertelement <16 x double> %temp.vect7212, double %3245, i32 15
  %3246 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %3247 = load i64* %3246, align 8
  %3248 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %3249 = load i64* %3248, align 8
  %3250 = add i64 %3247, %3249
  %extract7181 = add i64 %3250, 21676032
  %3251 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract7181
  %ptrTypeCast7197 = bitcast double addrspace(1)* %3251 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect7213, <16 x double> addrspace(1)* %ptrTypeCast7197, align 8
  %3252 = fmul <16 x double> %temp.vect97, <double 3.500000e+00, double 3.500000e+00, double 3.500000e+00, double 3.500000e+00, double 3.500000e+00, double 3.500000e+00, double 3.500000e+00, double 3.500000e+00, double 3.500000e+00, double 3.500000e+00, double 3.500000e+00, double 3.500000e+00, double 3.500000e+00, double 3.500000e+00, double 3.500000e+00, double 3.500000e+00>
  %3253 = fadd <16 x double> %3252, <double 0x3FE93B0AEDEFB22A, double 0x3FE93B0AEDEFB22A, double 0x3FE93B0AEDEFB22A, double 0x3FE93B0AEDEFB22A, double 0x3FE93B0AEDEFB22A, double 0x3FE93B0AEDEFB22A, double 0x3FE93B0AEDEFB22A, double 0x3FE93B0AEDEFB22A, double 0x3FE93B0AEDEFB22A, double 0x3FE93B0AEDEFB22A, double 0x3FE93B0AEDEFB22A, double 0x3FE93B0AEDEFB22A, double 0x3FE93B0AEDEFB22A, double 0x3FE93B0AEDEFB22A, double 0x3FE93B0AEDEFB22A, double 0x3FE93B0AEDEFB22A>
  %3254 = fmul <16 x double> %24, <double 0x40A64F82599ED7C7, double 0x40A64F82599ED7C7, double 0x40A64F82599ED7C7, double 0x40A64F82599ED7C7, double 0x40A64F82599ED7C7, double 0x40A64F82599ED7C7, double 0x40A64F82599ED7C7, double 0x40A64F82599ED7C7, double 0x40A64F82599ED7C7, double 0x40A64F82599ED7C7, double 0x40A64F82599ED7C7, double 0x40A64F82599ED7C7, double 0x40A64F82599ED7C7, double 0x40A64F82599ED7C7, double 0x40A64F82599ED7C7, double 0x40A64F82599ED7C7>
  %3255 = fsub <16 x double> %3253, %3254
  %extract7214 = extractelement <16 x double> %3255, i32 0
  %extract7215 = extractelement <16 x double> %3255, i32 1
  %extract7216 = extractelement <16 x double> %3255, i32 2
  %extract7217 = extractelement <16 x double> %3255, i32 3
  %extract7218 = extractelement <16 x double> %3255, i32 4
  %extract7219 = extractelement <16 x double> %3255, i32 5
  %extract7220 = extractelement <16 x double> %3255, i32 6
  %extract7221 = extractelement <16 x double> %3255, i32 7
  %extract7222 = extractelement <16 x double> %3255, i32 8
  %extract7223 = extractelement <16 x double> %3255, i32 9
  %extract7224 = extractelement <16 x double> %3255, i32 10
  %extract7225 = extractelement <16 x double> %3255, i32 11
  %extract7226 = extractelement <16 x double> %3255, i32 12
  %extract7227 = extractelement <16 x double> %3255, i32 13
  %extract7228 = extractelement <16 x double> %3255, i32 14
  %extract7229 = extractelement <16 x double> %3255, i32 15
  %3256 = tail call double @_Z3expd(double %extract7214) nounwind
  %3257 = tail call double @_Z3expd(double %extract7215) nounwind
  %3258 = tail call double @_Z3expd(double %extract7216) nounwind
  %3259 = tail call double @_Z3expd(double %extract7217) nounwind
  %3260 = tail call double @_Z3expd(double %extract7218) nounwind
  %3261 = tail call double @_Z3expd(double %extract7219) nounwind
  %3262 = tail call double @_Z3expd(double %extract7220) nounwind
  %3263 = tail call double @_Z3expd(double %extract7221) nounwind
  %3264 = tail call double @_Z3expd(double %extract7222) nounwind
  %3265 = tail call double @_Z3expd(double %extract7223) nounwind
  %3266 = tail call double @_Z3expd(double %extract7224) nounwind
  %3267 = tail call double @_Z3expd(double %extract7225) nounwind
  %3268 = tail call double @_Z3expd(double %extract7226) nounwind
  %3269 = tail call double @_Z3expd(double %extract7227) nounwind
  %3270 = tail call double @_Z3expd(double %extract7228) nounwind
  %3271 = tail call double @_Z3expd(double %extract7229) nounwind
  %temp.vect7249 = insertelement <16 x double> undef, double %3256, i32 0
  %temp.vect7250 = insertelement <16 x double> %temp.vect7249, double %3257, i32 1
  %temp.vect7251 = insertelement <16 x double> %temp.vect7250, double %3258, i32 2
  %temp.vect7252 = insertelement <16 x double> %temp.vect7251, double %3259, i32 3
  %temp.vect7253 = insertelement <16 x double> %temp.vect7252, double %3260, i32 4
  %temp.vect7254 = insertelement <16 x double> %temp.vect7253, double %3261, i32 5
  %temp.vect7255 = insertelement <16 x double> %temp.vect7254, double %3262, i32 6
  %temp.vect7256 = insertelement <16 x double> %temp.vect7255, double %3263, i32 7
  %temp.vect7257 = insertelement <16 x double> %temp.vect7256, double %3264, i32 8
  %temp.vect7258 = insertelement <16 x double> %temp.vect7257, double %3265, i32 9
  %temp.vect7259 = insertelement <16 x double> %temp.vect7258, double %3266, i32 10
  %temp.vect7260 = insertelement <16 x double> %temp.vect7259, double %3267, i32 11
  %temp.vect7261 = insertelement <16 x double> %temp.vect7260, double %3268, i32 12
  %temp.vect7262 = insertelement <16 x double> %temp.vect7261, double %3269, i32 13
  %temp.vect7263 = insertelement <16 x double> %temp.vect7262, double %3270, i32 14
  %temp.vect7264 = insertelement <16 x double> %temp.vect7263, double %3271, i32 15
  %3272 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %3273 = load i64* %3272, align 8
  %3274 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %3275 = load i64* %3274, align 8
  %3276 = add i64 %3273, %3275
  %extract7232 = add i64 %3276, 21786624
  %3277 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract7232
  %ptrTypeCast7248 = bitcast double addrspace(1)* %3277 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect7264, <16 x double> addrspace(1)* %ptrTypeCast7248, align 8
  %3278 = fmul <16 x double> %temp.vect97, <double 2.920000e+00, double 2.920000e+00, double 2.920000e+00, double 2.920000e+00, double 2.920000e+00, double 2.920000e+00, double 2.920000e+00, double 2.920000e+00, double 2.920000e+00, double 2.920000e+00, double 2.920000e+00, double 2.920000e+00, double 2.920000e+00, double 2.920000e+00, double 2.920000e+00, double 2.920000e+00>
  %3279 = fsub <16 x double> <double 0x404C49020D2079F3, double 0x404C49020D2079F3, double 0x404C49020D2079F3, double 0x404C49020D2079F3, double 0x404C49020D2079F3, double 0x404C49020D2079F3, double 0x404C49020D2079F3, double 0x404C49020D2079F3, double 0x404C49020D2079F3, double 0x404C49020D2079F3, double 0x404C49020D2079F3, double 0x404C49020D2079F3, double 0x404C49020D2079F3, double 0x404C49020D2079F3, double 0x404C49020D2079F3, double 0x404C49020D2079F3>, %3278
  %3280 = fmul <16 x double> %24, <double 0x40B894B9743E963E, double 0x40B894B9743E963E, double 0x40B894B9743E963E, double 0x40B894B9743E963E, double 0x40B894B9743E963E, double 0x40B894B9743E963E, double 0x40B894B9743E963E, double 0x40B894B9743E963E, double 0x40B894B9743E963E, double 0x40B894B9743E963E, double 0x40B894B9743E963E, double 0x40B894B9743E963E, double 0x40B894B9743E963E, double 0x40B894B9743E963E, double 0x40B894B9743E963E, double 0x40B894B9743E963E>
  %3281 = fsub <16 x double> %3279, %3280
  %extract7265 = extractelement <16 x double> %3281, i32 0
  %extract7266 = extractelement <16 x double> %3281, i32 1
  %extract7267 = extractelement <16 x double> %3281, i32 2
  %extract7268 = extractelement <16 x double> %3281, i32 3
  %extract7269 = extractelement <16 x double> %3281, i32 4
  %extract7270 = extractelement <16 x double> %3281, i32 5
  %extract7271 = extractelement <16 x double> %3281, i32 6
  %extract7272 = extractelement <16 x double> %3281, i32 7
  %extract7273 = extractelement <16 x double> %3281, i32 8
  %extract7274 = extractelement <16 x double> %3281, i32 9
  %extract7275 = extractelement <16 x double> %3281, i32 10
  %extract7276 = extractelement <16 x double> %3281, i32 11
  %extract7277 = extractelement <16 x double> %3281, i32 12
  %extract7278 = extractelement <16 x double> %3281, i32 13
  %extract7279 = extractelement <16 x double> %3281, i32 14
  %extract7280 = extractelement <16 x double> %3281, i32 15
  %3282 = tail call double @_Z3expd(double %extract7265) nounwind
  %3283 = tail call double @_Z3expd(double %extract7266) nounwind
  %3284 = tail call double @_Z3expd(double %extract7267) nounwind
  %3285 = tail call double @_Z3expd(double %extract7268) nounwind
  %3286 = tail call double @_Z3expd(double %extract7269) nounwind
  %3287 = tail call double @_Z3expd(double %extract7270) nounwind
  %3288 = tail call double @_Z3expd(double %extract7271) nounwind
  %3289 = tail call double @_Z3expd(double %extract7272) nounwind
  %3290 = tail call double @_Z3expd(double %extract7273) nounwind
  %3291 = tail call double @_Z3expd(double %extract7274) nounwind
  %3292 = tail call double @_Z3expd(double %extract7275) nounwind
  %3293 = tail call double @_Z3expd(double %extract7276) nounwind
  %3294 = tail call double @_Z3expd(double %extract7277) nounwind
  %3295 = tail call double @_Z3expd(double %extract7278) nounwind
  %3296 = tail call double @_Z3expd(double %extract7279) nounwind
  %3297 = tail call double @_Z3expd(double %extract7280) nounwind
  %temp.vect7300 = insertelement <16 x double> undef, double %3282, i32 0
  %temp.vect7301 = insertelement <16 x double> %temp.vect7300, double %3283, i32 1
  %temp.vect7302 = insertelement <16 x double> %temp.vect7301, double %3284, i32 2
  %temp.vect7303 = insertelement <16 x double> %temp.vect7302, double %3285, i32 3
  %temp.vect7304 = insertelement <16 x double> %temp.vect7303, double %3286, i32 4
  %temp.vect7305 = insertelement <16 x double> %temp.vect7304, double %3287, i32 5
  %temp.vect7306 = insertelement <16 x double> %temp.vect7305, double %3288, i32 6
  %temp.vect7307 = insertelement <16 x double> %temp.vect7306, double %3289, i32 7
  %temp.vect7308 = insertelement <16 x double> %temp.vect7307, double %3290, i32 8
  %temp.vect7309 = insertelement <16 x double> %temp.vect7308, double %3291, i32 9
  %temp.vect7310 = insertelement <16 x double> %temp.vect7309, double %3292, i32 10
  %temp.vect7311 = insertelement <16 x double> %temp.vect7310, double %3293, i32 11
  %temp.vect7312 = insertelement <16 x double> %temp.vect7311, double %3294, i32 12
  %temp.vect7313 = insertelement <16 x double> %temp.vect7312, double %3295, i32 13
  %temp.vect7314 = insertelement <16 x double> %temp.vect7313, double %3296, i32 14
  %temp.vect7315 = insertelement <16 x double> %temp.vect7314, double %3297, i32 15
  %3298 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %3299 = load i64* %3298, align 8
  %3300 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %3301 = load i64* %3300, align 8
  %3302 = add i64 %3299, %3301
  %extract7283 = add i64 %3302, 21897216
  %3303 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract7283
  %ptrTypeCast7299 = bitcast double addrspace(1)* %3303 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect7315, <16 x double> addrspace(1)* %ptrTypeCast7299, align 8
  %3304 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %3305 = load i64* %3304, align 8
  %3306 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %3307 = load i64* %3306, align 8
  %3308 = add i64 %3305, %3307
  %extract7318 = add i64 %3308, 22007808
  %3309 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract7318
  %ptrTypeCast7334 = bitcast double addrspace(1)* %3309 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.800000e+12, double 1.800000e+12, double 1.800000e+12, double 1.800000e+12, double 1.800000e+12, double 1.800000e+12, double 1.800000e+12, double 1.800000e+12, double 1.800000e+12, double 1.800000e+12, double 1.800000e+12, double 1.800000e+12, double 1.800000e+12, double 1.800000e+12, double 1.800000e+12, double 1.800000e+12>, <16 x double> addrspace(1)* %ptrTypeCast7334, align 8
  %3310 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %3311 = load i64* %3310, align 8
  %3312 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %3313 = load i64* %3312, align 8
  %3314 = add i64 %3311, %3313
  %extract7337 = add i64 %3314, 22118400
  %3315 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract7337
  %ptrTypeCast7353 = bitcast double addrspace(1)* %3315 to <16 x double> addrspace(1)*
  store <16 x double> <double 9.600000e+13, double 9.600000e+13, double 9.600000e+13, double 9.600000e+13, double 9.600000e+13, double 9.600000e+13, double 9.600000e+13, double 9.600000e+13, double 9.600000e+13, double 9.600000e+13, double 9.600000e+13, double 9.600000e+13, double 9.600000e+13, double 9.600000e+13, double 9.600000e+13, double 9.600000e+13>, <16 x double> addrspace(1)* %ptrTypeCast7353, align 8
  %3316 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %3317 = load i64* %3316, align 8
  %3318 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %3319 = load i64* %3318, align 8
  %3320 = add i64 %3317, %3319
  %extract7356 = add i64 %3320, 22228992
  %3321 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract7356
  %ptrTypeCast7372 = bitcast double addrspace(1)* %3321 to <16 x double> addrspace(1)*
  store <16 x double> <double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13>, <16 x double> addrspace(1)* %ptrTypeCast7372, align 8
  %3322 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %3323 = load i64* %3322, align 8
  %3324 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %3325 = load i64* %3324, align 8
  %3326 = add i64 %3323, %3325
  %extract7375 = add i64 %3326, 22339584
  %3327 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract7375
  %ptrTypeCast7391 = bitcast double addrspace(1)* %3327 to <16 x double> addrspace(1)*
  store <16 x double> <double 9.000000e+10, double 9.000000e+10, double 9.000000e+10, double 9.000000e+10, double 9.000000e+10, double 9.000000e+10, double 9.000000e+10, double 9.000000e+10, double 9.000000e+10, double 9.000000e+10, double 9.000000e+10, double 9.000000e+10, double 9.000000e+10, double 9.000000e+10, double 9.000000e+10, double 9.000000e+10>, <16 x double> addrspace(1)* %ptrTypeCast7391, align 8
  %3328 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %3329 = load i64* %3328, align 8
  %3330 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %3331 = load i64* %3330, align 8
  %3332 = add i64 %3329, %3331
  %extract7394 = add i64 %3332, 22450176
  %3333 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract7394
  %ptrTypeCast7410 = bitcast double addrspace(1)* %3333 to <16 x double> addrspace(1)*
  store <16 x double> <double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13>, <16 x double> addrspace(1)* %ptrTypeCast7410, align 8
  %3334 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %3335 = load i64* %3334, align 8
  %3336 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %3337 = load i64* %3336, align 8
  %3338 = add i64 %3335, %3337
  %extract7413 = add i64 %3338, 22560768
  %3339 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract7413
  %ptrTypeCast7429 = bitcast double addrspace(1)* %3339 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.100000e+13, double 1.100000e+13, double 1.100000e+13, double 1.100000e+13, double 1.100000e+13, double 1.100000e+13, double 1.100000e+13, double 1.100000e+13, double 1.100000e+13, double 1.100000e+13, double 1.100000e+13, double 1.100000e+13, double 1.100000e+13, double 1.100000e+13, double 1.100000e+13, double 1.100000e+13>, <16 x double> addrspace(1)* %ptrTypeCast7429, align 8
  %3340 = fmul <16 x double> %temp.vect97, <double 5.220000e+00, double 5.220000e+00, double 5.220000e+00, double 5.220000e+00, double 5.220000e+00, double 5.220000e+00, double 5.220000e+00, double 5.220000e+00, double 5.220000e+00, double 5.220000e+00, double 5.220000e+00, double 5.220000e+00, double 5.220000e+00, double 5.220000e+00, double 5.220000e+00, double 5.220000e+00>
  %3341 = fsub <16 x double> <double 0x4052C2CBF8FCD680, double 0x4052C2CBF8FCD680, double 0x4052C2CBF8FCD680, double 0x4052C2CBF8FCD680, double 0x4052C2CBF8FCD680, double 0x4052C2CBF8FCD680, double 0x4052C2CBF8FCD680, double 0x4052C2CBF8FCD680, double 0x4052C2CBF8FCD680, double 0x4052C2CBF8FCD680, double 0x4052C2CBF8FCD680, double 0x4052C2CBF8FCD680, double 0x4052C2CBF8FCD680, double 0x4052C2CBF8FCD680, double 0x4052C2CBF8FCD680, double 0x4052C2CBF8FCD680>, %3340
  %3342 = fmul <16 x double> %24, <double 0x40C368828049667B, double 0x40C368828049667B, double 0x40C368828049667B, double 0x40C368828049667B, double 0x40C368828049667B, double 0x40C368828049667B, double 0x40C368828049667B, double 0x40C368828049667B, double 0x40C368828049667B, double 0x40C368828049667B, double 0x40C368828049667B, double 0x40C368828049667B, double 0x40C368828049667B, double 0x40C368828049667B, double 0x40C368828049667B, double 0x40C368828049667B>
  %3343 = fsub <16 x double> %3341, %3342
  %extract7430 = extractelement <16 x double> %3343, i32 0
  %extract7431 = extractelement <16 x double> %3343, i32 1
  %extract7432 = extractelement <16 x double> %3343, i32 2
  %extract7433 = extractelement <16 x double> %3343, i32 3
  %extract7434 = extractelement <16 x double> %3343, i32 4
  %extract7435 = extractelement <16 x double> %3343, i32 5
  %extract7436 = extractelement <16 x double> %3343, i32 6
  %extract7437 = extractelement <16 x double> %3343, i32 7
  %extract7438 = extractelement <16 x double> %3343, i32 8
  %extract7439 = extractelement <16 x double> %3343, i32 9
  %extract7440 = extractelement <16 x double> %3343, i32 10
  %extract7441 = extractelement <16 x double> %3343, i32 11
  %extract7442 = extractelement <16 x double> %3343, i32 12
  %extract7443 = extractelement <16 x double> %3343, i32 13
  %extract7444 = extractelement <16 x double> %3343, i32 14
  %extract7445 = extractelement <16 x double> %3343, i32 15
  %3344 = tail call double @_Z3expd(double %extract7430) nounwind
  %3345 = tail call double @_Z3expd(double %extract7431) nounwind
  %3346 = tail call double @_Z3expd(double %extract7432) nounwind
  %3347 = tail call double @_Z3expd(double %extract7433) nounwind
  %3348 = tail call double @_Z3expd(double %extract7434) nounwind
  %3349 = tail call double @_Z3expd(double %extract7435) nounwind
  %3350 = tail call double @_Z3expd(double %extract7436) nounwind
  %3351 = tail call double @_Z3expd(double %extract7437) nounwind
  %3352 = tail call double @_Z3expd(double %extract7438) nounwind
  %3353 = tail call double @_Z3expd(double %extract7439) nounwind
  %3354 = tail call double @_Z3expd(double %extract7440) nounwind
  %3355 = tail call double @_Z3expd(double %extract7441) nounwind
  %3356 = tail call double @_Z3expd(double %extract7442) nounwind
  %3357 = tail call double @_Z3expd(double %extract7443) nounwind
  %3358 = tail call double @_Z3expd(double %extract7444) nounwind
  %3359 = tail call double @_Z3expd(double %extract7445) nounwind
  %temp.vect7465 = insertelement <16 x double> undef, double %3344, i32 0
  %temp.vect7466 = insertelement <16 x double> %temp.vect7465, double %3345, i32 1
  %temp.vect7467 = insertelement <16 x double> %temp.vect7466, double %3346, i32 2
  %temp.vect7468 = insertelement <16 x double> %temp.vect7467, double %3347, i32 3
  %temp.vect7469 = insertelement <16 x double> %temp.vect7468, double %3348, i32 4
  %temp.vect7470 = insertelement <16 x double> %temp.vect7469, double %3349, i32 5
  %temp.vect7471 = insertelement <16 x double> %temp.vect7470, double %3350, i32 6
  %temp.vect7472 = insertelement <16 x double> %temp.vect7471, double %3351, i32 7
  %temp.vect7473 = insertelement <16 x double> %temp.vect7472, double %3352, i32 8
  %temp.vect7474 = insertelement <16 x double> %temp.vect7473, double %3353, i32 9
  %temp.vect7475 = insertelement <16 x double> %temp.vect7474, double %3354, i32 10
  %temp.vect7476 = insertelement <16 x double> %temp.vect7475, double %3355, i32 11
  %temp.vect7477 = insertelement <16 x double> %temp.vect7476, double %3356, i32 12
  %temp.vect7478 = insertelement <16 x double> %temp.vect7477, double %3357, i32 13
  %temp.vect7479 = insertelement <16 x double> %temp.vect7478, double %3358, i32 14
  %temp.vect7480 = insertelement <16 x double> %temp.vect7479, double %3359, i32 15
  %3360 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %3361 = load i64* %3360, align 8
  %3362 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %3363 = load i64* %3362, align 8
  %3364 = add i64 %3361, %3363
  %extract7448 = add i64 %3364, 22671360
  %3365 = getelementptr inbounds double addrspace(1)* %RF, i64 %extract7448
  %ptrTypeCast7464 = bitcast double addrspace(1)* %3365 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect7480, <16 x double> addrspace(1)* %ptrTypeCast7464, align 8
  %check.WI.iter = icmp ult i64 %CurrWI..0, %iterCount
  br i1 %check.WI.iter, label %thenBB, label %SyncBB7481

thenBB:                                           ; preds = %SyncBB
  %"CurrWI++" = add nuw i64 %CurrWI..0, 1
  br label %SyncBB

SyncBB7481:                                       ; preds = %SyncBB
  ret void
}

define void @ratt_kernel(i8* %pBuffer) {
entry:
  %0 = bitcast i8* %pBuffer to double addrspace(1)**
  %1 = load double addrspace(1)** %0, align 8
  %2 = getelementptr i8* %pBuffer, i64 8
  %3 = bitcast i8* %2 to double addrspace(1)**
  %4 = load double addrspace(1)** %3, align 8
  %5 = getelementptr i8* %pBuffer, i64 16
  %6 = bitcast i8* %5 to double*
  %7 = load double* %6, align 8
  %8 = getelementptr i8* %pBuffer, i64 48
  %9 = bitcast i8* %8 to %struct.PaddedDimId**
  %10 = load %struct.PaddedDimId** %9, align 8
  %11 = getelementptr i8* %pBuffer, i64 56
  %12 = bitcast i8* %11 to %struct.PaddedDimId**
  %13 = load %struct.PaddedDimId** %12, align 8
  %14 = getelementptr i8* %pBuffer, i64 72
  %15 = bitcast i8* %14 to i64*
  %16 = load i64* %15, align 8
  br label %SyncBB1.i

SyncBB1.i:                                        ; preds = %thenBB.i, %entry
  %CurrWI..0.i = phi i64 [ %"CurrWI++.i", %thenBB.i ], [ 0, %entry ]
  %17 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %18 = load i64* %17, align 8
  %19 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %20 = load i64* %19, align 8
  %21 = add i64 %18, %20
  %22 = getelementptr inbounds double addrspace(1)* %1, i64 %21
  %23 = load double addrspace(1)* %22, align 8
  %24 = fmul double %23, %7
  %25 = call double @_Z3logd(double %24) nounwind
  %26 = fdiv double 1.000000e+00, %24
  %27 = fmul double %26, %26
  %28 = fmul double %26, 0x40BC54DCA0E410B6
  %29 = fsub double 0x40400661DE416957, %28
  %30 = call double @_Z3expd(double %29) nounwind
  %31 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %32 = load i64* %31, align 8
  %33 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %34 = load i64* %33, align 8
  %35 = add i64 %32, %34
  %36 = getelementptr inbounds double addrspace(1)* %4, i64 %35
  store double %30, double addrspace(1)* %36, align 8
  %37 = fmul double %25, 2.670000e+00
  %38 = fadd double %37, 0x4025A3B9FB38F0E2
  %39 = fmul double %26, 0x40A8BA7736CDF267
  %40 = fsub double %38, %39
  %41 = call double @_Z3expd(double %40) nounwind
  %42 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %43 = load i64* %42, align 8
  %44 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %45 = load i64* %44, align 8
  %46 = add i64 %43, %45
  %47 = add i64 %46, 110592
  %48 = getelementptr inbounds double addrspace(1)* %4, i64 %47
  store double %41, double addrspace(1)* %48, align 8
  %49 = fmul double %25, 1.510000e+00
  %50 = fadd double %49, 0x403330D78C436FC1
  %51 = fmul double %26, 0x409AF821F75104D5
  %52 = fsub double %50, %51
  %53 = call double @_Z3expd(double %52) nounwind
  %54 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %55 = load i64* %54, align 8
  %56 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %57 = load i64* %56, align 8
  %58 = add i64 %55, %57
  %59 = add i64 %58, 221184
  %60 = getelementptr inbounds double addrspace(1)* %4, i64 %59
  store double %53, double addrspace(1)* %60, align 8
  %61 = fmul double %25, 2.400000e+00
  %62 = fadd double %61, 0x4024F73F748A1598
  %63 = fmul double %26, 0x409097260FE47992
  %64 = fadd double %62, %63
  %65 = call double @_Z3expd(double %64) nounwind
  %66 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %67 = load i64* %66, align 8
  %68 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %69 = load i64* %68, align 8
  %70 = add i64 %67, %69
  %71 = add i64 %70, 331776
  %72 = getelementptr inbounds double addrspace(1)* %4, i64 %71
  store double %65, double addrspace(1)* %72, align 8
  %73 = fmul double %26, 1.000000e+18
  %74 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %75 = load i64* %74, align 8
  %76 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %77 = load i64* %76, align 8
  %78 = add i64 %75, %77
  %79 = add i64 %78, 442368
  %80 = getelementptr inbounds double addrspace(1)* %4, i64 %79
  store double %73, double addrspace(1)* %80, align 8
  %81 = fmul double %25, 6.000000e-01
  %82 = fsub double 0x404384F063AACA44, %81
  %83 = call double @_Z3expd(double %82) nounwind
  %84 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %85 = load i64* %84, align 8
  %86 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %87 = load i64* %86, align 8
  %88 = add i64 %85, %87
  %89 = add i64 %88, 552960
  %90 = getelementptr inbounds double addrspace(1)* %4, i64 %89
  store double %83, double addrspace(1)* %90, align 8
  %91 = fmul double %25, 1.250000e+00
  %92 = fsub double 0x4046C53B6E6B17A6, %91
  %93 = call double @_Z3expd(double %92) nounwind
  %94 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %95 = load i64* %94, align 8
  %96 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %97 = load i64* %96, align 8
  %98 = add i64 %95, %97
  %99 = add i64 %98, 663552
  %100 = getelementptr inbounds double addrspace(1)* %4, i64 %99
  store double %93, double addrspace(1)* %100, align 8
  %101 = fmul double %27, 5.500000e+20
  %102 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %103 = load i64* %102, align 8
  %104 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %105 = load i64* %104, align 8
  %106 = add i64 %103, %105
  %107 = add i64 %106, 774144
  %108 = getelementptr inbounds double addrspace(1)* %4, i64 %107
  store double %101, double addrspace(1)* %108, align 8
  %109 = fmul double %27, 2.200000e+22
  %110 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %111 = load i64* %110, align 8
  %112 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %113 = load i64* %112, align 8
  %114 = add i64 %111, %113
  %115 = add i64 %114, 884736
  %116 = getelementptr inbounds double addrspace(1)* %4, i64 %115
  store double %109, double addrspace(1)* %116, align 8
  %117 = fmul double %26, 5.000000e+17
  %118 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %119 = load i64* %118, align 8
  %120 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %121 = load i64* %120, align 8
  %122 = add i64 %119, %121
  %123 = add i64 %122, 995328
  %124 = getelementptr inbounds double addrspace(1)* %4, i64 %123
  store double %117, double addrspace(1)* %124, align 8
  %125 = fmul double %26, 1.200000e+17
  %126 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %127 = load i64* %126, align 8
  %128 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %129 = load i64* %128, align 8
  %130 = add i64 %127, %129
  %131 = add i64 %130, 1105920
  %132 = getelementptr inbounds double addrspace(1)* %4, i64 %131
  store double %125, double addrspace(1)* %132, align 8
  %133 = fmul double %25, 8.600000e-01
  %134 = fsub double 0x40453CF284ED3A2B, %133
  %135 = call double @_Z3expd(double %134) nounwind
  %136 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %137 = load i64* %136, align 8
  %138 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %139 = load i64* %138, align 8
  %140 = add i64 %137, %139
  %141 = add i64 %140, 1216512
  %142 = getelementptr inbounds double addrspace(1)* %4, i64 %141
  store double %135, double addrspace(1)* %142, align 8
  %143 = fmul double %25, 1.720000e+00
  %144 = fsub double 0x4047933D7E0FD058, %143
  %145 = call double @_Z3expd(double %144) nounwind
  %146 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %147 = load i64* %146, align 8
  %148 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %149 = load i64* %148, align 8
  %150 = add i64 %147, %149
  %151 = add i64 %150, 1327104
  %152 = getelementptr inbounds double addrspace(1)* %4, i64 %151
  store double %145, double addrspace(1)* %152, align 8
  %153 = fmul double %25, 7.600000e-01
  %154 = fsub double 0x4046202427FD750B, %153
  %155 = call double @_Z3expd(double %154) nounwind
  %156 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %157 = load i64* %156, align 8
  %158 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %159 = load i64* %158, align 8
  %160 = add i64 %157, %159
  %161 = add i64 %160, 1437696
  %162 = getelementptr inbounds double addrspace(1)* %4, i64 %161
  store double %155, double addrspace(1)* %162, align 8
  %163 = fmul double %25, 1.240000e+00
  %164 = fsub double 0x40465A3141C16B70, %163
  %165 = call double @_Z3expd(double %164) nounwind
  %166 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %167 = load i64* %166, align 8
  %168 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %169 = load i64* %168, align 8
  %170 = add i64 %167, %169
  %171 = add i64 %170, 1548288
  %172 = getelementptr inbounds double addrspace(1)* %4, i64 %171
  store double %165, double addrspace(1)* %172, align 8
  %173 = fmul double %25, 3.700000e-01
  %174 = fsub double 0x403FEF61CF27F0E0, %173
  %175 = call double @_Z3expd(double %174) nounwind
  %176 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %177 = load i64* %176, align 8
  %178 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %179 = load i64* %178, align 8
  %180 = add i64 %177, %179
  %181 = add i64 %180, 1658880
  %182 = getelementptr inbounds double addrspace(1)* %4, i64 %181
  store double %175, double addrspace(1)* %182, align 8
  %183 = fmul double %26, 0x40751A88BDA9435B
  %184 = fsub double 0x403D028169F7EB5F, %183
  %185 = call double @_Z3expd(double %184) nounwind
  %186 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %187 = load i64* %186, align 8
  %188 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %189 = load i64* %188, align 8
  %190 = add i64 %187, %189
  %191 = add i64 %190, 1769472
  %192 = getelementptr inbounds double addrspace(1)* %4, i64 %191
  store double %185, double addrspace(1)* %192, align 8
  %193 = fmul double %26, 0x4079CA33E24FEBD1
  %194 = fsub double 0x403E70BF9D39614B, %193
  %195 = call double @_Z3expd(double %194) nounwind
  %196 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %197 = load i64* %196, align 8
  %198 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %199 = load i64* %198, align 8
  %200 = add i64 %197, %199
  %201 = add i64 %200, 1880064
  %202 = getelementptr inbounds double addrspace(1)* %4, i64 %201
  store double %195, double addrspace(1)* %202, align 8
  %203 = fmul double %26, 1.509650e+02
  %204 = fsub double 0x403FE410B7DE283F, %203
  %205 = call double @_Z3expd(double %204) nounwind
  %206 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %207 = load i64* %206, align 8
  %208 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %209 = load i64* %208, align 8
  %210 = add i64 %207, %209
  %211 = add i64 %210, 1990656
  %212 = getelementptr inbounds double addrspace(1)* %4, i64 %211
  store double %205, double addrspace(1)* %212, align 8
  %213 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %214 = load i64* %213, align 8
  %215 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %216 = load i64* %215, align 8
  %217 = add i64 %214, %216
  %218 = add i64 %217, 2101248
  %219 = getelementptr inbounds double addrspace(1)* %4, i64 %218
  store double 2.000000e+13, double addrspace(1)* %219, align 8
  %220 = fmul double %26, 0x406F737778DD6170
  %221 = fadd double %220, 0x403F77E3DBDD0B08
  %222 = call double @_Z3expd(double %221) nounwind
  %223 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %224 = load i64* %223, align 8
  %225 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %226 = load i64* %225, align 8
  %227 = add i64 %224, %226
  %228 = add i64 %227, 2211840
  %229 = getelementptr inbounds double addrspace(1)* %4, i64 %228
  store double %222, double addrspace(1)* %229, align 8
  %230 = fmul double %26, 0x4089A1F202107B78
  %231 = fadd double %230, 0x4039973EB03EF78D
  %232 = call double @_Z3expd(double %231) nounwind
  %233 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %234 = load i64* %233, align 8
  %235 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %236 = load i64* %235, align 8
  %237 = add i64 %234, %236
  %238 = add i64 %237, 2322432
  %239 = getelementptr inbounds double addrspace(1)* %4, i64 %238
  store double %232, double addrspace(1)* %239, align 8
  %240 = fmul double %26, 0x40B796999A415F46
  %241 = fsub double 0x4040D5EC5D8BCC51, %240
  %242 = call double @_Z3expd(double %241) nounwind
  %243 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %244 = load i64* %243, align 8
  %245 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %246 = load i64* %245, align 8
  %247 = add i64 %244, %246
  %248 = add i64 %247, 2433024
  %249 = getelementptr inbounds double addrspace(1)* %4, i64 %248
  store double %242, double addrspace(1)* %249, align 8
  %250 = fmul double %25, 2.000000e+00
  %251 = fadd double %250, 0x40304F080303C07F
  %252 = fmul double %26, 0x40A471740E1719F8
  %253 = fsub double %251, %252
  %254 = call double @_Z3expd(double %253) nounwind
  %255 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %256 = load i64* %255, align 8
  %257 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %258 = load i64* %257, align 8
  %259 = add i64 %256, %258
  %260 = add i64 %259, 2543616
  %261 = getelementptr inbounds double addrspace(1)* %4, i64 %260
  store double %254, double addrspace(1)* %261, align 8
  %262 = fmul double %26, 1.811580e+03
  %263 = fsub double 0x403DEF00D0E057C4, %262
  %264 = call double @_Z3expd(double %263) nounwind
  %265 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %266 = load i64* %265, align 8
  %267 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %268 = load i64* %267, align 8
  %269 = add i64 %266, %268
  %270 = add i64 %269, 2654208
  %271 = getelementptr inbounds double addrspace(1)* %4, i64 %270
  store double %264, double addrspace(1)* %271, align 8
  %272 = fadd double %250, 0x40301494B025CD19
  %273 = fmul double %26, 0x409F7377785729B3
  %274 = fsub double %272, %273
  %275 = call double @_Z3expd(double %274) nounwind
  %276 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %277 = load i64* %276, align 8
  %278 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %279 = load i64* %278, align 8
  %280 = add i64 %277, %279
  %281 = add i64 %280, 2764800
  %282 = getelementptr inbounds double addrspace(1)* %4, i64 %281
  store double %275, double addrspace(1)* %282, align 8
  %283 = fmul double %26, 0x406420F04DDB5526
  %284 = fsub double 0x403C30CD9472E92C, %283
  %285 = call double @_Z3expd(double %284) nounwind
  %286 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %287 = load i64* %286, align 8
  %288 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %289 = load i64* %288, align 8
  %290 = add i64 %287, %289
  %291 = add i64 %290, 2875392
  %292 = getelementptr inbounds double addrspace(1)* %4, i64 %291
  store double %285, double addrspace(1)* %292, align 8
  %293 = fmul double %26, 0x40B2CAC057D1782D
  %294 = fsub double 0x4040FF3D01124EB7, %293
  %295 = call double @_Z3expd(double %294) nounwind
  %296 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %297 = load i64* %296, align 8
  %298 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %299 = load i64* %298, align 8
  %300 = add i64 %297, %299
  %301 = add i64 %300, 2985984
  %302 = getelementptr inbounds double addrspace(1)* %4, i64 %301
  store double %295, double addrspace(1)* %302, align 8
  %303 = fmul double %26, 1.509650e+03
  %304 = fsub double 0x40410400EFEA0847, %303
  %305 = call double @_Z3expd(double %304) nounwind
  %306 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %307 = load i64* %306, align 8
  %308 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %309 = load i64* %308, align 8
  %310 = add i64 %307, %309
  %311 = add i64 %310, 3096576
  %312 = getelementptr inbounds double addrspace(1)* %4, i64 %311
  store double %305, double addrspace(1)* %312, align 8
  %313 = fmul double %25, 1.228000e+00
  %314 = fadd double %313, 0x4031ADA7E810F5F2
  %315 = fmul double %26, 0x40419CD2432E52FA
  %316 = fsub double %314, %315
  %317 = call double @_Z3expd(double %316) nounwind
  %318 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %319 = load i64* %318, align 8
  %320 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %321 = load i64* %320, align 8
  %322 = add i64 %319, %321
  %323 = add i64 %322, 3207168
  %324 = getelementptr inbounds double addrspace(1)* %4, i64 %323
  store double %317, double addrspace(1)* %324, align 8
  %325 = fmul double %25, 1.500000e+00
  %326 = fadd double %325, 0x403193A34FFBC0D6
  %327 = fmul double %26, 0x40E38F017E90FF97
  %328 = fsub double %326, %327
  %329 = call double @_Z3expd(double %328) nounwind
  %330 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %331 = load i64* %330, align 8
  %332 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %333 = load i64* %332, align 8
  %334 = add i64 %331, %333
  %335 = add i64 %334, 3317760
  %336 = getelementptr inbounds double addrspace(1)* %4, i64 %335
  store double %329, double addrspace(1)* %336, align 8
  %337 = fmul double %26, 0x40D77D706DC5D639
  %338 = fsub double 0x403C8C1CA049B703, %337
  %339 = call double @_Z3expd(double %338) nounwind
  %340 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %341 = load i64* %340, align 8
  %342 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %343 = load i64* %342, align 8
  %344 = add i64 %341, %343
  %345 = add i64 %344, 3428352
  %346 = getelementptr inbounds double addrspace(1)* %4, i64 %345
  store double %339, double addrspace(1)* %346, align 8
  %347 = fmul double %26, 0x40C731F4EA4A8C15
  %348 = fsub double 0x40405221CC02A272, %347
  %349 = call double @_Z3expd(double %348) nounwind
  %350 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %351 = load i64* %350, align 8
  %352 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %353 = load i64* %352, align 8
  %354 = add i64 %351, %353
  %355 = add i64 %354, 3538944
  %356 = getelementptr inbounds double addrspace(1)* %4, i64 %355
  store double %349, double addrspace(1)* %356, align 8
  %357 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %358 = load i64* %357, align 8
  %359 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %360 = load i64* %359, align 8
  %361 = add i64 %358, %360
  %362 = add i64 %361, 3649536
  %363 = getelementptr inbounds double addrspace(1)* %4, i64 %362
  store double 5.700000e+13, double addrspace(1)* %363, align 8
  %364 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %365 = load i64* %364, align 8
  %366 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %367 = load i64* %366, align 8
  %368 = add i64 %365, %367
  %369 = add i64 %368, 3760128
  %370 = getelementptr inbounds double addrspace(1)* %4, i64 %369
  store double 3.000000e+13, double addrspace(1)* %370, align 8
  %371 = fmul double %25, 1.790000e+00
  %372 = fadd double %371, 0x403285B7B50D9366
  %373 = fmul double %26, 0x408A42F984A0E411
  %374 = fsub double %372, %373
  %375 = call double @_Z3expd(double %374) nounwind
  %376 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %377 = load i64* %376, align 8
  %378 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %379 = load i64* %378, align 8
  %380 = add i64 %377, %379
  %381 = add i64 %380, 3870720
  %382 = getelementptr inbounds double addrspace(1)* %4, i64 %381
  store double %375, double addrspace(1)* %382, align 8
  %383 = fmul double %26, 0x4077BEDB7AE5796C
  %384 = fadd double %383, 0x403D5F8CA9C70E47
  %385 = call double @_Z3expd(double %384) nounwind
  %386 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %387 = load i64* %386, align 8
  %388 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %389 = load i64* %388, align 8
  %390 = add i64 %387, %389
  %391 = add i64 %390, 3981312
  %392 = getelementptr inbounds double addrspace(1)* %4, i64 %391
  store double %385, double addrspace(1)* %392, align 8
  %393 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %394 = load i64* %393, align 8
  %395 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %396 = load i64* %395, align 8
  %397 = add i64 %394, %396
  %398 = add i64 %397, 4091904
  %399 = getelementptr inbounds double addrspace(1)* %4, i64 %398
  store double 3.300000e+13, double addrspace(1)* %399, align 8
  %400 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %401 = load i64* %400, align 8
  %402 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %403 = load i64* %402, align 8
  %404 = add i64 %401, %403
  %405 = add i64 %404, 4202496
  %406 = getelementptr inbounds double addrspace(1)* %4, i64 %405
  store double 5.000000e+13, double addrspace(1)* %406, align 8
  %407 = fmul double %26, 0x4075B383137B0707
  %408 = fsub double 0x403CDAD3F1843C3A, %407
  %409 = call double @_Z3expd(double %408) nounwind
  %410 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %411 = load i64* %410, align 8
  %412 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %413 = load i64* %412, align 8
  %414 = add i64 %411, %413
  %415 = add i64 %414, 4313088
  %416 = getelementptr inbounds double addrspace(1)* %4, i64 %415
  store double %409, double addrspace(1)* %416, align 8
  %417 = fmul double %25, 4.800000e-01
  %418 = fadd double %417, 0x403BB79A572EBAFE
  %419 = fmul double %26, 0x40605AC33F85510D
  %420 = fadd double %418, %419
  %421 = call double @_Z3expd(double %420) nounwind
  %422 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %423 = load i64* %422, align 8
  %424 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %425 = load i64* %424, align 8
  %426 = add i64 %423, %425
  %427 = add i64 %426, 4423680
  %428 = getelementptr inbounds double addrspace(1)* %4, i64 %427
  store double %421, double addrspace(1)* %428, align 8
  %429 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %430 = load i64* %429, align 8
  %431 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %432 = load i64* %431, align 8
  %433 = add i64 %430, %432
  %434 = add i64 %433, 4534272
  %435 = getelementptr inbounds double addrspace(1)* %4, i64 %434
  store double 7.340000e+13, double addrspace(1)* %435, align 8
  %436 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %437 = load i64* %436, align 8
  %438 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %439 = load i64* %438, align 8
  %440 = add i64 %437, %439
  %441 = add i64 %440, 4644864
  %442 = getelementptr inbounds double addrspace(1)* %4, i64 %441
  store double 3.000000e+13, double addrspace(1)* %442, align 8
  %443 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %444 = load i64* %443, align 8
  %445 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %446 = load i64* %445, align 8
  %447 = add i64 %444, %446
  %448 = add i64 %447, 4755456
  %449 = getelementptr inbounds double addrspace(1)* %4, i64 %448
  store double 3.000000e+13, double addrspace(1)* %449, align 8
  %450 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %451 = load i64* %450, align 8
  %452 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %453 = load i64* %452, align 8
  %454 = add i64 %451, %453
  %455 = add i64 %454, 4866048
  %456 = getelementptr inbounds double addrspace(1)* %4, i64 %455
  store double 5.000000e+13, double addrspace(1)* %456, align 8
  %457 = fsub double 0x4043E28B9778572A, %25
  %458 = fmul double %26, 0x40C0B557780346DC
  %459 = fsub double %457, %458
  %460 = call double @_Z3expd(double %459) nounwind
  %461 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %462 = load i64* %461, align 8
  %463 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %464 = load i64* %463, align 8
  %465 = add i64 %462, %464
  %466 = add i64 %465, 4976640
  %467 = getelementptr inbounds double addrspace(1)* %4, i64 %466
  store double %460, double addrspace(1)* %467, align 8
  %468 = fmul double %26, 0x4069292C6045BAF5
  %469 = fsub double 0x403DA8BF53678621, %468
  %470 = call double @_Z3expd(double %469) nounwind
  %471 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %472 = load i64* %471, align 8
  %473 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %474 = load i64* %473, align 8
  %475 = add i64 %472, %474
  %476 = add i64 %475, 5087232
  %477 = getelementptr inbounds double addrspace(1)* %4, i64 %476
  store double %470, double addrspace(1)* %477, align 8
  %478 = fmul double %25, 8.000000e-01
  %479 = fsub double 0x4042E0FABF4E5F09, %478
  %480 = call double @_Z3expd(double %479) nounwind
  %481 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %482 = load i64* %481, align 8
  %483 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %484 = load i64* %483, align 8
  %485 = add i64 %482, %484
  %486 = add i64 %485, 5197824
  %487 = getelementptr inbounds double addrspace(1)* %4, i64 %486
  store double %480, double addrspace(1)* %487, align 8
  %488 = fadd double %250, 0x402A3EA66A627469
  %489 = fmul double %26, 0x40AC6C8355475A32
  %490 = fsub double %488, %489
  %491 = call double @_Z3expd(double %490) nounwind
  %492 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %493 = load i64* %492, align 8
  %494 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %495 = load i64* %494, align 8
  %496 = add i64 %493, %495
  %497 = add i64 %496, 5308416
  %498 = getelementptr inbounds double addrspace(1)* %4, i64 %497
  store double %491, double addrspace(1)* %498, align 8
  %499 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %500 = load i64* %499, align 8
  %501 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %502 = load i64* %501, align 8
  %503 = add i64 %500, %502
  %504 = add i64 %503, 5419008
  %505 = getelementptr inbounds double addrspace(1)* %4, i64 %504
  store double 8.000000e+13, double addrspace(1)* %505, align 8
  %506 = fmul double %26, 0xC08796999A1FD157
  %507 = call double @_Z3expd(double %506) nounwind
  %508 = fmul double %507, 1.056000e+13
  %509 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %510 = load i64* %509, align 8
  %511 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %512 = load i64* %511, align 8
  %513 = add i64 %510, %512
  %514 = add i64 %513, 5529600
  %515 = getelementptr inbounds double addrspace(1)* %4, i64 %514
  store double %508, double addrspace(1)* %515, align 8
  %516 = fmul double %507, 2.640000e+12
  %517 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %518 = load i64* %517, align 8
  %519 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %520 = load i64* %519, align 8
  %521 = add i64 %518, %520
  %522 = add i64 %521, 5640192
  %523 = getelementptr inbounds double addrspace(1)* %4, i64 %522
  store double %516, double addrspace(1)* %523, align 8
  %524 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %525 = load i64* %524, align 8
  %526 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %527 = load i64* %526, align 8
  %528 = add i64 %525, %527
  %529 = add i64 %528, 5750784
  %530 = getelementptr inbounds double addrspace(1)* %4, i64 %529
  store double 2.000000e+13, double addrspace(1)* %530, align 8
  %531 = fadd double %250, 0x40303D852C244B39
  %532 = fsub double %531, %303
  %533 = call double @_Z3expd(double %532) nounwind
  %534 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %535 = load i64* %534, align 8
  %536 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %537 = load i64* %536, align 8
  %538 = add i64 %535, %537
  %539 = add i64 %538, 5861376
  %540 = getelementptr inbounds double addrspace(1)* %4, i64 %539
  store double %533, double addrspace(1)* %540, align 8
  %541 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %542 = load i64* %541, align 8
  %543 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %544 = load i64* %543, align 8
  %545 = add i64 %542, %544
  %546 = add i64 %545, 5971968
  %547 = getelementptr inbounds double addrspace(1)* %4, i64 %546
  store double 2.000000e+13, double addrspace(1)* %547, align 8
  %548 = fmul double %25, 5.000000e-01
  %549 = fadd double %548, 0x403B6B98C990016A
  %550 = fmul double %26, 0x40A1BB03ABC94706
  %551 = fsub double %549, %550
  %552 = call double @_Z3expd(double %551) nounwind
  %553 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %554 = load i64* %553, align 8
  %555 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %556 = load i64* %555, align 8
  %557 = add i64 %554, %556
  %558 = add i64 %557, 6082560
  %559 = getelementptr inbounds double addrspace(1)* %4, i64 %558
  store double %552, double addrspace(1)* %559, align 8
  %560 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %561 = load i64* %560, align 8
  %562 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %563 = load i64* %562, align 8
  %564 = add i64 %561, %563
  %565 = add i64 %564, 6193152
  %566 = getelementptr inbounds double addrspace(1)* %4, i64 %565
  store double 4.000000e+13, double addrspace(1)* %566, align 8
  %567 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %568 = load i64* %567, align 8
  %569 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %570 = load i64* %569, align 8
  %571 = add i64 %568, %570
  %572 = add i64 %571, 6303744
  %573 = getelementptr inbounds double addrspace(1)* %4, i64 %572
  store double 3.200000e+13, double addrspace(1)* %573, align 8
  %574 = fmul double %26, 0x4072DEE148BA83F5
  %575 = fsub double 0x403E56CD60708320, %574
  %576 = call double @_Z3expd(double %575) nounwind
  %577 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %578 = load i64* %577, align 8
  %579 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %580 = load i64* %579, align 8
  %581 = add i64 %578, %580
  %582 = add i64 %581, 6414336
  %583 = getelementptr inbounds double addrspace(1)* %4, i64 %582
  store double %576, double addrspace(1)* %583, align 8
  %584 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %585 = load i64* %584, align 8
  %586 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %587 = load i64* %586, align 8
  %588 = add i64 %585, %587
  %589 = add i64 %588, 6524928
  %590 = getelementptr inbounds double addrspace(1)* %4, i64 %589
  store double 3.000000e+13, double addrspace(1)* %590, align 8
  %591 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %592 = load i64* %591, align 8
  %593 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %594 = load i64* %593, align 8
  %595 = add i64 %592, %594
  %596 = add i64 %595, 6635520
  %597 = getelementptr inbounds double addrspace(1)* %4, i64 %596
  store double 1.500000e+13, double addrspace(1)* %597, align 8
  %598 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %599 = load i64* %598, align 8
  %600 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %601 = load i64* %600, align 8
  %602 = add i64 %599, %601
  %603 = add i64 %602, 6746112
  %604 = getelementptr inbounds double addrspace(1)* %4, i64 %603
  store double 1.500000e+13, double addrspace(1)* %604, align 8
  %605 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %606 = load i64* %605, align 8
  %607 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %608 = load i64* %607, align 8
  %609 = add i64 %606, %608
  %610 = add i64 %609, 6856704
  %611 = getelementptr inbounds double addrspace(1)* %4, i64 %610
  store double 3.000000e+13, double addrspace(1)* %611, align 8
  %612 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %613 = load i64* %612, align 8
  %614 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %615 = load i64* %614, align 8
  %616 = add i64 %613, %615
  %617 = add i64 %616, 6967296
  %618 = getelementptr inbounds double addrspace(1)* %4, i64 %617
  store double 7.000000e+13, double addrspace(1)* %618, align 8
  %619 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %620 = load i64* %619, align 8
  %621 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %622 = load i64* %621, align 8
  %623 = add i64 %620, %622
  %624 = add i64 %623, 7077888
  %625 = getelementptr inbounds double addrspace(1)* %4, i64 %624
  store double 2.800000e+13, double addrspace(1)* %625, align 8
  %626 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %627 = load i64* %626, align 8
  %628 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %629 = load i64* %628, align 8
  %630 = add i64 %627, %629
  %631 = add i64 %630, 7188480
  %632 = getelementptr inbounds double addrspace(1)* %4, i64 %631
  store double 1.200000e+13, double addrspace(1)* %632, align 8
  %633 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %634 = load i64* %633, align 8
  %635 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %636 = load i64* %635, align 8
  %637 = add i64 %634, %636
  %638 = add i64 %637, 7299072
  %639 = getelementptr inbounds double addrspace(1)* %4, i64 %638
  store double 3.000000e+13, double addrspace(1)* %639, align 8
  %640 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %641 = load i64* %640, align 8
  %642 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %643 = load i64* %642, align 8
  %644 = add i64 %641, %643
  %645 = add i64 %644, 7409664
  %646 = getelementptr inbounds double addrspace(1)* %4, i64 %645
  store double 9.000000e+12, double addrspace(1)* %646, align 8
  %647 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %648 = load i64* %647, align 8
  %649 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %650 = load i64* %649, align 8
  %651 = add i64 %648, %650
  %652 = add i64 %651, 7520256
  %653 = getelementptr inbounds double addrspace(1)* %4, i64 %652
  store double 7.000000e+12, double addrspace(1)* %653, align 8
  %654 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %655 = load i64* %654, align 8
  %656 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %657 = load i64* %656, align 8
  %658 = add i64 %655, %657
  %659 = add i64 %658, 7630848
  %660 = getelementptr inbounds double addrspace(1)* %4, i64 %659
  store double 1.400000e+13, double addrspace(1)* %660, align 8
  %661 = fmul double %25, 4.540000e-01
  %662 = fadd double %661, 0x403B03CC39FFD60F
  %663 = fmul double %26, 0x409471740F66A551
  %664 = fsub double %662, %663
  %665 = call double @_Z3expd(double %664) nounwind
  %666 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %667 = load i64* %666, align 8
  %668 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %669 = load i64* %668, align 8
  %670 = add i64 %667, %669
  %671 = add i64 %670, 7741440
  %672 = getelementptr inbounds double addrspace(1)* %4, i64 %671
  store double %665, double addrspace(1)* %672, align 8
  %673 = fmul double %25, 1.050000e+00
  %674 = fadd double %673, 0x4037DBD7B3B09C15
  %675 = fmul double %26, 0x4099C0236B8F9B13
  %676 = fsub double %674, %675
  %677 = call double @_Z3expd(double %676) nounwind
  %678 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %679 = load i64* %678, align 8
  %680 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %681 = load i64* %680, align 8
  %682 = add i64 %679, %681
  %683 = add i64 %682, 7852032
  %684 = getelementptr inbounds double addrspace(1)* %4, i64 %683
  store double %677, double addrspace(1)* %684, align 8
  %685 = fmul double %26, 1.781387e+03
  %686 = fsub double 0x403F4B69C743F6D0, %685
  %687 = call double @_Z3expd(double %686) nounwind
  %688 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %689 = load i64* %688, align 8
  %690 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %691 = load i64* %690, align 8
  %692 = add i64 %689, %691
  %693 = add i64 %692, 7962624
  %694 = getelementptr inbounds double addrspace(1)* %4, i64 %693
  store double %687, double addrspace(1)* %694, align 8
  %695 = fmul double %25, 1.180000e+00
  %696 = fadd double %695, 0x4035F4B104F029C9
  %697 = fmul double %26, 0x406C1E02DE00D1B7
  %698 = fadd double %696, %697
  %699 = call double @_Z3expd(double %698) nounwind
  %700 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %701 = load i64* %700, align 8
  %702 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %703 = load i64* %702, align 8
  %704 = add i64 %701, %703
  %705 = add i64 %704, 8073216
  %706 = getelementptr inbounds double addrspace(1)* %4, i64 %705
  store double %699, double addrspace(1)* %706, align 8
  %707 = fmul double %26, 0x40D3A82AAB367A10
  %708 = fsub double 0x40401E3B843A8CC4, %707
  %709 = call double @_Z3expd(double %708) nounwind
  %710 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %711 = load i64* %710, align 8
  %712 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %713 = load i64* %712, align 8
  %714 = add i64 %711, %713
  %715 = add i64 %714, 8183808
  %716 = getelementptr inbounds double addrspace(1)* %4, i64 %715
  store double %709, double addrspace(1)* %716, align 8
  %717 = fmul double %26, 0xC0AF7377785729B3
  %718 = call double @_Z3expd(double %717) nounwind
  %719 = fmul double %718, 1.000000e+12
  %720 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %721 = load i64* %720, align 8
  %722 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %723 = load i64* %722, align 8
  %724 = add i64 %721, %723
  %725 = add i64 %724, 8294400
  %726 = getelementptr inbounds double addrspace(1)* %4, i64 %725
  store double %719, double addrspace(1)* %726, align 8
  %727 = fmul double %718, 5.000000e+13
  %728 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %729 = load i64* %728, align 8
  %730 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %731 = load i64* %730, align 8
  %732 = add i64 %729, %731
  %733 = add i64 %732, 13934592
  %734 = getelementptr inbounds double addrspace(1)* %4, i64 %733
  store double %727, double addrspace(1)* %734, align 8
  %735 = fmul double %718, 1.000000e+13
  %736 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %737 = load i64* %736, align 8
  %738 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %739 = load i64* %738, align 8
  %740 = add i64 %737, %739
  %741 = add i64 %740, 14155776
  %742 = getelementptr inbounds double addrspace(1)* %4, i64 %741
  store double %735, double addrspace(1)* %742, align 8
  %743 = fmul double %26, 0x407032815E39713B
  %744 = fadd double %743, 0x4040172079F30B25
  %745 = call double @_Z3expd(double %744) nounwind
  %746 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %747 = load i64* %746, align 8
  %748 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %749 = load i64* %748, align 8
  %750 = add i64 %747, %749
  %751 = add i64 %750, 8404992
  %752 = getelementptr inbounds double addrspace(1)* %4, i64 %751
  store double %745, double addrspace(1)* %752, align 8
  %753 = fmul double %25, 6.300000e-01
  %754 = fsub double 0x40428A49D6E3A704, %753
  %755 = fmul double %26, 0x4068176C69B5A640
  %756 = fsub double %754, %755
  %757 = call double @_Z3expd(double %756) nounwind
  %758 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %759 = load i64* %758, align 8
  %760 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %761 = load i64* %760, align 8
  %762 = add i64 %759, %761
  %763 = add i64 %762, 8515584
  %764 = getelementptr inbounds double addrspace(1)* %4, i64 %763
  store double %757, double addrspace(1)* %764, align 8
  %765 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %766 = load i64* %765, align 8
  %767 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %768 = load i64* %767, align 8
  %769 = add i64 %766, %768
  %770 = add i64 %769, 8626176
  %771 = getelementptr inbounds double addrspace(1)* %4, i64 %770
  store double 8.430000e+13, double addrspace(1)* %771, align 8
  %772 = fmul double %25, 1.600000e+00
  %773 = fadd double %772, 0x4031D742BEC1714F
  %774 = fmul double %26, 0x40A54EDE61CFFEB0
  %775 = fsub double %773, %774
  %776 = call double @_Z3expd(double %775) nounwind
  %777 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %778 = load i64* %777, align 8
  %779 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %780 = load i64* %779, align 8
  %781 = add i64 %778, %780
  %782 = add i64 %781, 8736768
  %783 = getelementptr inbounds double addrspace(1)* %4, i64 %782
  store double %776, double addrspace(1)* %783, align 8
  %784 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %785 = load i64* %784, align 8
  %786 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %787 = load i64* %786, align 8
  %788 = add i64 %785, %787
  %789 = add i64 %788, 8847360
  %790 = getelementptr inbounds double addrspace(1)* %4, i64 %789
  store double 2.501000e+13, double addrspace(1)* %790, align 8
  %791 = fmul double %26, 1.449264e+04
  %792 = fsub double 0x403F0F3C020ECDF9, %791
  %793 = call double @_Z3expd(double %792) nounwind
  %794 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %795 = load i64* %794, align 8
  %796 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %797 = load i64* %796, align 8
  %798 = add i64 %795, %797
  %799 = add i64 %798, 8957952
  %800 = getelementptr inbounds double addrspace(1)* %4, i64 %799
  store double %793, double addrspace(1)* %800, align 8
  %801 = fmul double %26, 0x40B192C1CB6848BF
  %802 = fsub double 0x40384E8972DAE8EF, %801
  %803 = call double @_Z3expd(double %802) nounwind
  %804 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %805 = load i64* %804, align 8
  %806 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %807 = load i64* %806, align 8
  %808 = add i64 %805, %807
  %809 = add i64 %808, 9068544
  %810 = getelementptr inbounds double addrspace(1)* %4, i64 %809
  store double %803, double addrspace(1)* %810, align 8
  %811 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %812 = load i64* %811, align 8
  %813 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %814 = load i64* %813, align 8
  %815 = add i64 %812, %814
  %816 = add i64 %815, 9179136
  %817 = getelementptr inbounds double addrspace(1)* %4, i64 %816
  store double 1.000000e+12, double addrspace(1)* %817, align 8
  %818 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %819 = load i64* %818, align 8
  %820 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %821 = load i64* %820, align 8
  %822 = add i64 %819, %821
  %823 = add i64 %822, 9289728
  %824 = getelementptr inbounds double addrspace(1)* %4, i64 %823
  store double 1.340000e+13, double addrspace(1)* %824, align 8
  %825 = fmul double %25, 2.470000e+00
  %826 = fadd double %825, 0x4024367DC882BB31
  %827 = fmul double %26, 0x40A45D531E3A7DAA
  %828 = fsub double %826, %827
  %829 = call double @_Z3expd(double %828) nounwind
  %830 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %831 = load i64* %830, align 8
  %832 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %833 = load i64* %832, align 8
  %834 = add i64 %831, %833
  %835 = add i64 %834, 9400320
  %836 = getelementptr inbounds double addrspace(1)* %4, i64 %835
  store double %829, double addrspace(1)* %836, align 8
  %837 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %838 = load i64* %837, align 8
  %839 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %840 = load i64* %839, align 8
  %841 = add i64 %838, %840
  %842 = add i64 %841, 9510912
  %843 = getelementptr inbounds double addrspace(1)* %4, i64 %842
  store double 3.000000e+13, double addrspace(1)* %843, align 8
  %844 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %845 = load i64* %844, align 8
  %846 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %847 = load i64* %846, align 8
  %848 = add i64 %845, %847
  %849 = add i64 %848, 9621504
  %850 = getelementptr inbounds double addrspace(1)* %4, i64 %849
  store double 8.480000e+12, double addrspace(1)* %850, align 8
  %851 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %852 = load i64* %851, align 8
  %853 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %854 = load i64* %853, align 8
  %855 = add i64 %852, %854
  %856 = add i64 %855, 9732096
  %857 = getelementptr inbounds double addrspace(1)* %4, i64 %856
  store double 1.800000e+13, double addrspace(1)* %857, align 8
  %858 = fmul double %25, 2.810000e+00
  %859 = fadd double %858, 0x40203727156DA575
  %860 = fmul double %26, 0x40A709B307F23CC9
  %861 = fsub double %859, %860
  %862 = call double @_Z3expd(double %861) nounwind
  %863 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %864 = load i64* %863, align 8
  %865 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %866 = load i64* %865, align 8
  %867 = add i64 %864, %866
  %868 = add i64 %867, 9842688
  %869 = getelementptr inbounds double addrspace(1)* %4, i64 %868
  store double %862, double addrspace(1)* %869, align 8
  %870 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %871 = load i64* %870, align 8
  %872 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %873 = load i64* %872, align 8
  %874 = add i64 %871, %873
  %875 = add i64 %874, 9953280
  %876 = getelementptr inbounds double addrspace(1)* %4, i64 %875
  store double 4.000000e+13, double addrspace(1)* %876, align 8
  %877 = fmul double %26, 0x4071ED56052502EF
  %878 = call double @_Z3expd(double %877) nounwind
  %879 = fmul double %878, 1.200000e+13
  %880 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %881 = load i64* %880, align 8
  %882 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %883 = load i64* %882, align 8
  %884 = add i64 %881, %883
  %885 = add i64 %884, 10063872
  %886 = getelementptr inbounds double addrspace(1)* %4, i64 %885
  store double %879, double addrspace(1)* %886, align 8
  %887 = fmul double %878, 1.600000e+13
  %888 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %889 = load i64* %888, align 8
  %890 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %891 = load i64* %890, align 8
  %892 = add i64 %889, %891
  %893 = add i64 %892, 11722752
  %894 = getelementptr inbounds double addrspace(1)* %4, i64 %893
  store double %887, double addrspace(1)* %894, align 8
  %895 = fmul double %25, 9.700000e-01
  %896 = fsub double 0x4042CBE022EAE693, %895
  %897 = fmul double %26, 0x40737FE8CAC4B4D0
  %898 = fsub double %896, %897
  %899 = call double @_Z3expd(double %898) nounwind
  %900 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %901 = load i64* %900, align 8
  %902 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %903 = load i64* %902, align 8
  %904 = add i64 %901, %903
  %905 = add i64 %904, 10174464
  %906 = getelementptr inbounds double addrspace(1)* %4, i64 %905
  store double %899, double addrspace(1)* %906, align 8
  %907 = fmul double %25, 1.000000e-01
  %908 = fadd double %907, 0x403D3D0B84988095
  %909 = fmul double %26, 0x40B4D618C0053E2D
  %910 = fsub double %908, %909
  %911 = call double @_Z3expd(double %910) nounwind
  %912 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %913 = load i64* %912, align 8
  %914 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %915 = load i64* %914, align 8
  %916 = add i64 %913, %915
  %917 = add i64 %916, 10285056
  %918 = getelementptr inbounds double addrspace(1)* %4, i64 %917
  store double %911, double addrspace(1)* %918, align 8
  %919 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %920 = load i64* %919, align 8
  %921 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %922 = load i64* %921, align 8
  %923 = add i64 %920, %922
  %924 = add i64 %923, 10395648
  %925 = getelementptr inbounds double addrspace(1)* %4, i64 %924
  store double 5.000000e+13, double addrspace(1)* %925, align 8
  %926 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %927 = load i64* %926, align 8
  %928 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %929 = load i64* %928, align 8
  %930 = add i64 %927, %929
  %931 = add i64 %930, 10506240
  %932 = getelementptr inbounds double addrspace(1)* %4, i64 %931
  store double 2.000000e+13, double addrspace(1)* %932, align 8
  %933 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %934 = load i64* %933, align 8
  %935 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %936 = load i64* %935, align 8
  %937 = add i64 %934, %936
  %938 = add i64 %937, 10616832
  %939 = getelementptr inbounds double addrspace(1)* %4, i64 %938
  store double 3.200000e+13, double addrspace(1)* %939, align 8
  %940 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %941 = load i64* %940, align 8
  %942 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %943 = load i64* %942, align 8
  %944 = add i64 %941, %943
  %945 = add i64 %944, 10727424
  %946 = getelementptr inbounds double addrspace(1)* %4, i64 %945
  store double 1.600000e+13, double addrspace(1)* %946, align 8
  %947 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %948 = load i64* %947, align 8
  %949 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %950 = load i64* %949, align 8
  %951 = add i64 %948, %950
  %952 = add i64 %951, 10838016
  %953 = getelementptr inbounds double addrspace(1)* %4, i64 %952
  store double 1.000000e+13, double addrspace(1)* %953, align 8
  %954 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %955 = load i64* %954, align 8
  %956 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %957 = load i64* %956, align 8
  %958 = add i64 %955, %957
  %959 = add i64 %958, 10948608
  %960 = getelementptr inbounds double addrspace(1)* %4, i64 %959
  store double 5.000000e+12, double addrspace(1)* %960, align 8
  %961 = fmul double %25, 7.600000e+00
  %962 = fadd double %961, 0xC03C7ACA8D576BF8
  %963 = fmul double %26, 0x409BC16B5B2D4D40
  %964 = fadd double %962, %963
  %965 = call double @_Z3expd(double %964) nounwind
  %966 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %967 = load i64* %966, align 8
  %968 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %969 = load i64* %968, align 8
  %970 = add i64 %967, %969
  %971 = add i64 %970, 11059200
  %972 = getelementptr inbounds double addrspace(1)* %4, i64 %971
  store double %965, double addrspace(1)* %972, align 8
  %973 = fmul double %25, 1.620000e+00
  %974 = fadd double %973, 0x40344EC8BAEF54B7
  %975 = fmul double %26, 0x40B54EDE61CFFEB0
  %976 = fsub double %974, %975
  %977 = call double @_Z3expd(double %976) nounwind
  %978 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %979 = load i64* %978, align 8
  %980 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %981 = load i64* %980, align 8
  %982 = add i64 %979, %981
  %983 = add i64 %982, 11169792
  %984 = getelementptr inbounds double addrspace(1)* %4, i64 %983
  store double %977, double addrspace(1)* %984, align 8
  %985 = fadd double %325, 0x4034BE39BCBA3012
  %986 = fmul double %26, 0x40B0E7A9D0A67621
  %987 = fsub double %985, %986
  %988 = call double @_Z3expd(double %987) nounwind
  %989 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %990 = load i64* %989, align 8
  %991 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %992 = load i64* %991, align 8
  %993 = add i64 %990, %992
  %994 = add i64 %993, 11280384
  %995 = getelementptr inbounds double addrspace(1)* %4, i64 %994
  store double %988, double addrspace(1)* %995, align 8
  %996 = fadd double %772, 0x40326BB1BAF88EF2
  %997 = fmul double %26, 1.570036e+03
  %998 = fsub double %996, %997
  %999 = call double @_Z3expd(double %998) nounwind
  %1000 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1001 = load i64* %1000, align 8
  %1002 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1003 = load i64* %1002, align 8
  %1004 = add i64 %1001, %1003
  %1005 = add i64 %1004, 11390976
  %1006 = getelementptr inbounds double addrspace(1)* %4, i64 %1005
  store double %999, double addrspace(1)* %1006, align 8
  %1007 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1008 = load i64* %1007, align 8
  %1009 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1010 = load i64* %1009, align 8
  %1011 = add i64 %1008, %1010
  %1012 = add i64 %1011, 11501568
  %1013 = getelementptr inbounds double addrspace(1)* %4, i64 %1012
  store double 6.000000e+13, double addrspace(1)* %1013, align 8
  %1014 = fadd double %250, 0x402D6E6C8C1A5516
  %1015 = fmul double %26, 0x40B0419A122FAD6D
  %1016 = fsub double %1014, %1015
  %1017 = call double @_Z3expd(double %1016) nounwind
  %1018 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1019 = load i64* %1018, align 8
  %1020 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1021 = load i64* %1020, align 8
  %1022 = add i64 %1019, %1021
  %1023 = add i64 %1022, 11612160
  %1024 = getelementptr inbounds double addrspace(1)* %4, i64 %1023
  store double %1017, double addrspace(1)* %1024, align 8
  %1025 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1026 = load i64* %1025, align 8
  %1027 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1028 = load i64* %1027, align 8
  %1029 = add i64 %1026, %1028
  %1030 = add i64 %1029, 11833344
  %1031 = getelementptr inbounds double addrspace(1)* %4, i64 %1030
  store double 1.000000e+14, double addrspace(1)* %1031, align 8
  %1032 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1033 = load i64* %1032, align 8
  %1034 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1035 = load i64* %1034, align 8
  %1036 = add i64 %1033, %1035
  %1037 = add i64 %1036, 11943936
  %1038 = getelementptr inbounds double addrspace(1)* %4, i64 %1037
  store double 1.000000e+14, double addrspace(1)* %1038, align 8
  %1039 = fmul double %26, 0x407ADBF3D9EC7000
  %1040 = fsub double 0x403C19DCC1369695, %1039
  %1041 = call double @_Z3expd(double %1040) nounwind
  %1042 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1043 = load i64* %1042, align 8
  %1044 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1045 = load i64* %1044, align 8
  %1046 = add i64 %1043, %1045
  %1047 = add i64 %1046, 12054528
  %1048 = getelementptr inbounds double addrspace(1)* %4, i64 %1047
  store double %1041, double addrspace(1)* %1048, align 8
  %1049 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1050 = load i64* %1049, align 8
  %1051 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1052 = load i64* %1051, align 8
  %1053 = add i64 %1050, %1052
  %1054 = add i64 %1053, 12165120
  %1055 = getelementptr inbounds double addrspace(1)* %4, i64 %1054
  store double 5.000000e+13, double addrspace(1)* %1055, align 8
  %1056 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1057 = load i64* %1056, align 8
  %1058 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1059 = load i64* %1058, align 8
  %1060 = add i64 %1057, %1059
  %1061 = add i64 %1060, 12275712
  %1062 = getelementptr inbounds double addrspace(1)* %4, i64 %1061
  store double 3.000000e+13, double addrspace(1)* %1062, align 8
  %1063 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1064 = load i64* %1063, align 8
  %1065 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1066 = load i64* %1065, align 8
  %1067 = add i64 %1064, %1066
  %1068 = add i64 %1067, 12386304
  %1069 = getelementptr inbounds double addrspace(1)* %4, i64 %1068
  store double 1.000000e+13, double addrspace(1)* %1069, align 8
  %1070 = fmul double %25, 5.200000e-01
  %1071 = fsub double 0x40412866A7D4C5C0, %1070
  %1072 = fmul double %26, 0x40D8F08FBCD35A86
  %1073 = fsub double %1071, %1072
  %1074 = call double @_Z3expd(double %1073) nounwind
  %1075 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1076 = load i64* %1075, align 8
  %1077 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1078 = load i64* %1077, align 8
  %1079 = add i64 %1076, %1078
  %1080 = add i64 %1079, 12496896
  %1081 = getelementptr inbounds double addrspace(1)* %4, i64 %1080
  store double %1074, double addrspace(1)* %1081, align 8
  %1082 = fadd double %973, 0x4033C5770E545699
  %1083 = fmul double %26, 0x40D234D20902DE01
  %1084 = fsub double %1082, %1083
  %1085 = call double @_Z3expd(double %1084) nounwind
  %1086 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1087 = load i64* %1086, align 8
  %1088 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1089 = load i64* %1088, align 8
  %1090 = add i64 %1087, %1089
  %1091 = add i64 %1090, 12607488
  %1092 = getelementptr inbounds double addrspace(1)* %4, i64 %1091
  store double %1085, double addrspace(1)* %1092, align 8
  %1093 = fmul double %26, 0x408DE0E4B2B777D1
  %1094 = fsub double %250, %1093
  %1095 = call double @_Z3expd(double %1094) nounwind
  %1096 = fmul double %1095, 1.632000e+07
  %1097 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1098 = load i64* %1097, align 8
  %1099 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1100 = load i64* %1099, align 8
  %1101 = add i64 %1098, %1100
  %1102 = add i64 %1101, 12718080
  %1103 = getelementptr inbounds double addrspace(1)* %4, i64 %1102
  store double %1096, double addrspace(1)* %1103, align 8
  %1104 = fmul double %1095, 4.080000e+06
  %1105 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1106 = load i64* %1105, align 8
  %1107 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1108 = load i64* %1107, align 8
  %1109 = add i64 %1106, %1108
  %1110 = add i64 %1109, 12828672
  %1111 = getelementptr inbounds double addrspace(1)* %4, i64 %1110
  store double %1104, double addrspace(1)* %1111, align 8
  %1112 = fmul double %25, 4.500000e+00
  %1113 = fadd double %1112, 0xC020DCAE10492360
  %1114 = fmul double %26, 0x407F737778DD6170
  %1115 = fadd double %1113, %1114
  %1116 = call double @_Z3expd(double %1115) nounwind
  %1117 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1118 = load i64* %1117, align 8
  %1119 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1120 = load i64* %1119, align 8
  %1121 = add i64 %1118, %1120
  %1122 = add i64 %1121, 12939264
  %1123 = getelementptr inbounds double addrspace(1)* %4, i64 %1122
  store double %1116, double addrspace(1)* %1123, align 8
  %1124 = fmul double %25, 4.000000e+00
  %1125 = fadd double %1124, 0xC01E8ABEE9B53AE0
  %1126 = fmul double %26, 0x408F73777AF64064
  %1127 = fadd double %1125, %1126
  %1128 = call double @_Z3expd(double %1127) nounwind
  %1129 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1130 = load i64* %1129, align 8
  %1131 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1132 = load i64* %1131, align 8
  %1133 = add i64 %1130, %1132
  %1134 = add i64 %1133, 13049856
  %1135 = getelementptr inbounds double addrspace(1)* %4, i64 %1134
  store double %1128, double addrspace(1)* %1135, align 8
  %1136 = fadd double %250, 0x40301E3B85114C59
  %1137 = fmul double %26, 0x40A796999AE924F2
  %1138 = fsub double %1136, %1137
  %1139 = call double @_Z3expd(double %1138) nounwind
  %1140 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1141 = load i64* %1140, align 8
  %1142 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1143 = load i64* %1142, align 8
  %1144 = add i64 %1141, %1143
  %1145 = add i64 %1144, 13160448
  %1146 = getelementptr inbounds double addrspace(1)* %4, i64 %1145
  store double %1139, double addrspace(1)* %1146, align 8
  %1147 = fmul double %25, 1.182000e+01
  %1148 = fsub double 0x405FDB8F8E7DDCA5, %1147
  %1149 = fmul double %26, 0x40D18EFB9DB22D0E
  %1150 = fsub double %1148, %1149
  %1151 = call double @_Z3expd(double %1150) nounwind
  %1152 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1153 = load i64* %1152, align 8
  %1154 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1155 = load i64* %1154, align 8
  %1156 = add i64 %1153, %1155
  %1157 = add i64 %1156, 13271040
  %1158 = getelementptr inbounds double addrspace(1)* %4, i64 %1157
  store double %1151, double addrspace(1)* %1158, align 8
  %1159 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1160 = load i64* %1159, align 8
  %1161 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1162 = load i64* %1161, align 8
  %1163 = add i64 %1160, %1162
  %1164 = add i64 %1163, 13381632
  %1165 = getelementptr inbounds double addrspace(1)* %4, i64 %1164
  store double 1.000000e+14, double addrspace(1)* %1165, align 8
  %1166 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1167 = load i64* %1166, align 8
  %1168 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1169 = load i64* %1168, align 8
  %1170 = add i64 %1167, %1169
  %1171 = add i64 %1170, 13492224
  %1172 = getelementptr inbounds double addrspace(1)* %4, i64 %1171
  store double 1.000000e+14, double addrspace(1)* %1172, align 8
  %1173 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1174 = load i64* %1173, align 8
  %1175 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1176 = load i64* %1175, align 8
  %1177 = add i64 %1174, %1176
  %1178 = add i64 %1177, 13602816
  %1179 = getelementptr inbounds double addrspace(1)* %4, i64 %1178
  store double 2.000000e+13, double addrspace(1)* %1179, align 8
  %1180 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1181 = load i64* %1180, align 8
  %1182 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1183 = load i64* %1182, align 8
  %1184 = add i64 %1181, %1183
  %1185 = add i64 %1184, 13713408
  %1186 = getelementptr inbounds double addrspace(1)* %4, i64 %1185
  store double 1.000000e+13, double addrspace(1)* %1186, align 8
  %1187 = fmul double %25, 6.000000e-02
  %1188 = fsub double 0x4040B70DF8104776, %1187
  %1189 = fmul double %26, 0x40B0B55777AF6406
  %1190 = fsub double %1188, %1189
  %1191 = call double @_Z3expd(double %1190) nounwind
  %1192 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1193 = load i64* %1192, align 8
  %1194 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1195 = load i64* %1194, align 8
  %1196 = add i64 %1193, %1195
  %1197 = add i64 %1196, 13824000
  %1198 = getelementptr inbounds double addrspace(1)* %4, i64 %1197
  store double %1191, double addrspace(1)* %1198, align 8
  %1199 = fmul double %25, 1.430000e+00
  %1200 = fadd double %1199, 0x403520F4821D7C12
  %1201 = fmul double %26, 0x4095269C8216C615
  %1202 = fsub double %1200, %1201
  %1203 = call double @_Z3expd(double %1202) nounwind
  %1204 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1205 = load i64* %1204, align 8
  %1206 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1207 = load i64* %1206, align 8
  %1208 = add i64 %1205, %1207
  %1209 = add i64 %1208, 14045184
  %1210 = getelementptr inbounds double addrspace(1)* %4, i64 %1209
  store double %1203, double addrspace(1)* %1210, align 8
  %1211 = fmul double %26, 0x40853ABD712A0EC7
  %1212 = fsub double 0x403C30CD9472E92C, %1211
  %1213 = call double @_Z3expd(double %1212) nounwind
  %1214 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1215 = load i64* %1214, align 8
  %1216 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1217 = load i64* %1216, align 8
  %1218 = add i64 %1215, %1217
  %1219 = add i64 %1218, 14266368
  %1220 = getelementptr inbounds double addrspace(1)* %4, i64 %1219
  store double %1213, double addrspace(1)* %1220, align 8
  %1221 = fmul double %26, 0xC08F73777AF64064
  %1222 = call double @_Z3expd(double %1221) nounwind
  %1223 = fmul double %1222, 7.500000e+12
  %1224 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1225 = load i64* %1224, align 8
  %1226 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1227 = load i64* %1226, align 8
  %1228 = add i64 %1225, %1227
  %1229 = add i64 %1228, 14376960
  %1230 = getelementptr inbounds double addrspace(1)* %4, i64 %1229
  store double %1223, double addrspace(1)* %1230, align 8
  %1231 = fmul double %1222, 1.000000e+13
  %1232 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1233 = load i64* %1232, align 8
  %1234 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1235 = load i64* %1234, align 8
  %1236 = add i64 %1233, %1235
  %1237 = add i64 %1236, 16699392
  %1238 = getelementptr inbounds double addrspace(1)* %4, i64 %1237
  store double %1231, double addrspace(1)* %1238, align 8
  %1239 = fmul double %1222, 2.000000e+13
  %1240 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1241 = load i64* %1240, align 8
  %1242 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1243 = load i64* %1242, align 8
  %1244 = add i64 %1241, %1243
  %1245 = add i64 %1244, 20459520
  %1246 = getelementptr inbounds double addrspace(1)* %4, i64 %1245
  store double %1239, double addrspace(1)* %1246, align 8
  %1247 = fmul double %25, 2.700000e-01
  %1248 = fadd double %1247, 0x403D6F9F63073655
  %1249 = fmul double %26, 0x40619CD24399B2C4
  %1250 = fsub double %1248, %1249
  %1251 = call double @_Z3expd(double %1250) nounwind
  %1252 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1253 = load i64* %1252, align 8
  %1254 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1255 = load i64* %1254, align 8
  %1256 = add i64 %1253, %1255
  %1257 = add i64 %1256, 14487552
  %1258 = getelementptr inbounds double addrspace(1)* %4, i64 %1257
  store double %1251, double addrspace(1)* %1258, align 8
  %1259 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1260 = load i64* %1259, align 8
  %1261 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1262 = load i64* %1261, align 8
  %1263 = add i64 %1260, %1262
  %1264 = add i64 %1263, 14598144
  %1265 = getelementptr inbounds double addrspace(1)* %4, i64 %1264
  store double 3.000000e+13, double addrspace(1)* %1265, align 8
  %1266 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1267 = load i64* %1266, align 8
  %1268 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1269 = load i64* %1268, align 8
  %1270 = add i64 %1267, %1269
  %1271 = add i64 %1270, 14708736
  %1272 = getelementptr inbounds double addrspace(1)* %4, i64 %1271
  store double 6.000000e+13, double addrspace(1)* %1272, align 8
  %1273 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1274 = load i64* %1273, align 8
  %1275 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1276 = load i64* %1275, align 8
  %1277 = add i64 %1274, %1276
  %1278 = add i64 %1277, 14819328
  %1279 = getelementptr inbounds double addrspace(1)* %4, i64 %1278
  store double 4.800000e+13, double addrspace(1)* %1279, align 8
  %1280 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1281 = load i64* %1280, align 8
  %1282 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1283 = load i64* %1282, align 8
  %1284 = add i64 %1281, %1283
  %1285 = add i64 %1284, 14929920
  %1286 = getelementptr inbounds double addrspace(1)* %4, i64 %1285
  store double 4.800000e+13, double addrspace(1)* %1286, align 8
  %1287 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1288 = load i64* %1287, align 8
  %1289 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1290 = load i64* %1289, align 8
  %1291 = add i64 %1288, %1290
  %1292 = add i64 %1291, 15040512
  %1293 = getelementptr inbounds double addrspace(1)* %4, i64 %1292
  store double 3.011000e+13, double addrspace(1)* %1293, align 8
  %1294 = fmul double %25, 1.610000e+00
  %1295 = fadd double %1294, 0x402C3763652A2644
  %1296 = fmul double %26, 0x40681DDD590C0AD0
  %1297 = fadd double %1295, %1296
  %1298 = call double @_Z3expd(double %1297) nounwind
  %1299 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1300 = load i64* %1299, align 8
  %1301 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1302 = load i64* %1301, align 8
  %1303 = add i64 %1300, %1302
  %1304 = add i64 %1303, 15151104
  %1305 = getelementptr inbounds double addrspace(1)* %4, i64 %1304
  store double %1298, double addrspace(1)* %1305, align 8
  %1306 = fmul double %25, 2.900000e-01
  %1307 = fadd double %1306, 0x403A6D5309924FF9
  %1308 = fmul double %26, 0x4016243B87C07E35
  %1309 = fsub double %1307, %1308
  %1310 = call double @_Z3expd(double %1309) nounwind
  %1311 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1312 = load i64* %1311, align 8
  %1313 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1314 = load i64* %1313, align 8
  %1315 = add i64 %1312, %1314
  %1316 = add i64 %1315, 15261696
  %1317 = getelementptr inbounds double addrspace(1)* %4, i64 %1316
  store double %1310, double addrspace(1)* %1317, align 8
  %1318 = fmul double %25, 1.390000e+00
  %1319 = fsub double 0x40432F078BE57BF0, %1318
  %1320 = fmul double %26, 0x407FC3FB395C4220
  %1321 = fsub double %1319, %1320
  %1322 = call double @_Z3expd(double %1321) nounwind
  %1323 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1324 = load i64* %1323, align 8
  %1325 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1326 = load i64* %1325, align 8
  %1327 = add i64 %1324, %1326
  %1328 = add i64 %1327, 15372288
  %1329 = getelementptr inbounds double addrspace(1)* %4, i64 %1328
  store double %1322, double addrspace(1)* %1329, align 8
  %1330 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1331 = load i64* %1330, align 8
  %1332 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1333 = load i64* %1332, align 8
  %1334 = add i64 %1331, %1333
  %1335 = add i64 %1334, 15482880
  %1336 = getelementptr inbounds double addrspace(1)* %4, i64 %1335
  store double 1.000000e+13, double addrspace(1)* %1336, align 8
  %1337 = fmul double %26, 0x4072BEAC94B380CB
  %1338 = fadd double %1337, 0x4037376AA9C205C9
  %1339 = call double @_Z3expd(double %1338) nounwind
  %1340 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1341 = load i64* %1340, align 8
  %1342 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1343 = load i64* %1342, align 8
  %1344 = add i64 %1341, %1343
  %1345 = add i64 %1344, 15593472
  %1346 = getelementptr inbounds double addrspace(1)* %4, i64 %1345
  store double %1339, double addrspace(1)* %1346, align 8
  %1347 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1348 = load i64* %1347, align 8
  %1349 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1350 = load i64* %1349, align 8
  %1351 = add i64 %1348, %1350
  %1352 = add i64 %1351, 15704064
  %1353 = getelementptr inbounds double addrspace(1)* %4, i64 %1352
  store double 9.033000e+13, double addrspace(1)* %1353, align 8
  %1354 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1355 = load i64* %1354, align 8
  %1356 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1357 = load i64* %1356, align 8
  %1358 = add i64 %1355, %1357
  %1359 = add i64 %1358, 15814656
  %1360 = getelementptr inbounds double addrspace(1)* %4, i64 %1359
  store double 3.920000e+11, double addrspace(1)* %1360, align 8
  %1361 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1362 = load i64* %1361, align 8
  %1363 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1364 = load i64* %1363, align 8
  %1365 = add i64 %1362, %1364
  %1366 = add i64 %1365, 15925248
  %1367 = getelementptr inbounds double addrspace(1)* %4, i64 %1366
  store double 2.500000e+13, double addrspace(1)* %1367, align 8
  %1368 = fmul double %25, 2.830000e+00
  %1369 = fsub double 0x404BD570E113ABAE, %1368
  %1370 = fmul double %26, 0x40C24C71A75CD0BB
  %1371 = fsub double %1369, %1370
  %1372 = call double @_Z3expd(double %1371) nounwind
  %1373 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1374 = load i64* %1373, align 8
  %1375 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1376 = load i64* %1375, align 8
  %1377 = add i64 %1374, %1376
  %1378 = add i64 %1377, 16035840
  %1379 = getelementptr inbounds double addrspace(1)* %4, i64 %1378
  store double %1372, double addrspace(1)* %1379, align 8
  %1380 = fmul double %25, 9.147000e+00
  %1381 = fsub double 0x40581D727BB2FEC5, %1380
  %1382 = fmul double %26, 0x40D70C372617C1BE
  %1383 = fsub double %1381, %1382
  %1384 = call double @_Z3expd(double %1383) nounwind
  %1385 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1386 = load i64* %1385, align 8
  %1387 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1388 = load i64* %1387, align 8
  %1389 = add i64 %1386, %1388
  %1390 = add i64 %1389, 16146432
  %1391 = getelementptr inbounds double addrspace(1)* %4, i64 %1390
  store double %1384, double addrspace(1)* %1391, align 8
  %1392 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1393 = load i64* %1392, align 8
  %1394 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1395 = load i64* %1394, align 8
  %1396 = add i64 %1393, %1395
  %1397 = add i64 %1396, 16257024
  %1398 = getelementptr inbounds double addrspace(1)* %4, i64 %1397
  store double 1.000000e+14, double addrspace(1)* %1398, align 8
  %1399 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1400 = load i64* %1399, align 8
  %1401 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1402 = load i64* %1401, align 8
  %1403 = add i64 %1400, %1402
  %1404 = add i64 %1403, 16367616
  %1405 = getelementptr inbounds double addrspace(1)* %4, i64 %1404
  store double 9.000000e+13, double addrspace(1)* %1405, align 8
  %1406 = fmul double %26, 0xC09F7377785729B3
  %1407 = call double @_Z3expd(double %1406) nounwind
  %1408 = fmul double %1407, 2.000000e+13
  %1409 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1410 = load i64* %1409, align 8
  %1411 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1412 = load i64* %1411, align 8
  %1413 = add i64 %1410, %1412
  %1414 = add i64 %1413, 16478208
  %1415 = getelementptr inbounds double addrspace(1)* %4, i64 %1414
  store double %1408, double addrspace(1)* %1415, align 8
  %1416 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1417 = load i64* %1416, align 8
  %1418 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1419 = load i64* %1418, align 8
  %1420 = add i64 %1417, %1419
  %1421 = add i64 %1420, 16588800
  %1422 = getelementptr inbounds double addrspace(1)* %4, i64 %1421
  store double %1408, double addrspace(1)* %1422, align 8
  %1423 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1424 = load i64* %1423, align 8
  %1425 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1426 = load i64* %1425, align 8
  %1427 = add i64 %1424, %1426
  %1428 = add i64 %1427, 16809984
  %1429 = getelementptr inbounds double addrspace(1)* %4, i64 %1428
  store double 1.400000e+11, double addrspace(1)* %1429, align 8
  %1430 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1431 = load i64* %1430, align 8
  %1432 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1433 = load i64* %1432, align 8
  %1434 = add i64 %1431, %1433
  %1435 = add i64 %1434, 16920576
  %1436 = getelementptr inbounds double addrspace(1)* %4, i64 %1435
  store double 1.800000e+10, double addrspace(1)* %1436, align 8
  %1437 = fmul double %25, 4.400000e-01
  %1438 = fadd double %1437, 0x403DB5E0E22D8722
  %1439 = fmul double %26, 0x40E5CFD1652BD3C3
  %1440 = fsub double %1438, %1439
  %1441 = call double @_Z3expd(double %1440) nounwind
  %1442 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1443 = load i64* %1442, align 8
  %1444 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1445 = load i64* %1444, align 8
  %1446 = add i64 %1443, %1445
  %1447 = add i64 %1446, 17031168
  %1448 = getelementptr inbounds double addrspace(1)* %4, i64 %1447
  store double %1441, double addrspace(1)* %1448, align 8
  %1449 = fadd double %661, 0x403BB53E524B266F
  %1450 = fmul double %26, 0x408C9ED5AD96A6A0
  %1451 = fsub double %1449, %1450
  %1452 = call double @_Z3expd(double %1451) nounwind
  %1453 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1454 = load i64* %1453, align 8
  %1455 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1456 = load i64* %1455, align 8
  %1457 = add i64 %1454, %1456
  %1458 = add i64 %1457, 17141760
  %1459 = getelementptr inbounds double addrspace(1)* %4, i64 %1458
  store double %1452, double addrspace(1)* %1459, align 8
  %1460 = fmul double %25, 1.930000e+00
  %1461 = fadd double %1460, 0x4031BDCEC84F8F8A
  %1462 = fmul double %26, 0x40B974A7E5C91D15
  %1463 = fsub double %1461, %1462
  %1464 = call double @_Z3expd(double %1463) nounwind
  %1465 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1466 = load i64* %1465, align 8
  %1467 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1468 = load i64* %1467, align 8
  %1469 = add i64 %1466, %1468
  %1470 = add i64 %1469, 17252352
  %1471 = getelementptr inbounds double addrspace(1)* %4, i64 %1470
  store double %1464, double addrspace(1)* %1471, align 8
  %1472 = fmul double %25, 1.910000e+00
  %1473 = fadd double %1472, 0x403087BB88D7AA76
  %1474 = fmul double %26, 0x409D681F1172EF0B
  %1475 = fsub double %1473, %1474
  %1476 = call double @_Z3expd(double %1475) nounwind
  %1477 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1478 = load i64* %1477, align 8
  %1479 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1480 = load i64* %1479, align 8
  %1481 = add i64 %1478, %1480
  %1482 = add i64 %1481, 17362944
  %1483 = getelementptr inbounds double addrspace(1)* %4, i64 %1482
  store double %1476, double addrspace(1)* %1483, align 8
  %1484 = fmul double %25, 1.830000e+00
  %1485 = fmul double %26, 0x405BAD4A6A875D57
  %1486 = fsub double %1484, %1485
  %1487 = call double @_Z3expd(double %1486) nounwind
  %1488 = fmul double %1487, 1.920000e+07
  %1489 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1490 = load i64* %1489, align 8
  %1491 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1492 = load i64* %1491, align 8
  %1493 = add i64 %1490, %1492
  %1494 = add i64 %1493, 17473536
  %1495 = getelementptr inbounds double addrspace(1)* %4, i64 %1494
  store double %1488, double addrspace(1)* %1495, align 8
  %1496 = fmul double %1487, 3.840000e+05
  %1497 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1498 = load i64* %1497, align 8
  %1499 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1500 = load i64* %1499, align 8
  %1501 = add i64 %1498, %1500
  %1502 = add i64 %1501, 17584128
  %1503 = getelementptr inbounds double addrspace(1)* %4, i64 %1502
  store double %1496, double addrspace(1)* %1503, align 8
  %1504 = fadd double %250, 0x402E3161290FC3C2
  %1505 = fmul double %26, 0x4093A82AAB8A5CE6
  %1506 = fsub double %1504, %1505
  %1507 = call double @_Z3expd(double %1506) nounwind
  %1508 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1509 = load i64* %1508, align 8
  %1510 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1511 = load i64* %1510, align 8
  %1512 = add i64 %1509, %1511
  %1513 = add i64 %1512, 17694720
  %1514 = getelementptr inbounds double addrspace(1)* %4, i64 %1513
  store double %1507, double addrspace(1)* %1514, align 8
  %1515 = fmul double %26, 0x40DDE0E4B295E9E2
  %1516 = fsub double 0x403F5F99D95A79C9, %1515
  %1517 = call double @_Z3expd(double %1516) nounwind
  %1518 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1519 = load i64* %1518, align 8
  %1520 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1521 = load i64* %1520, align 8
  %1522 = add i64 %1519, %1521
  %1523 = add i64 %1522, 17805312
  %1524 = getelementptr inbounds double addrspace(1)* %4, i64 %1523
  store double %1517, double addrspace(1)* %1524, align 8
  %1525 = fmul double %26, 0x40BB850889A02752
  %1526 = fsub double 0x403C52FCB196E661, %1525
  %1527 = call double @_Z3expd(double %1526) nounwind
  %1528 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1529 = load i64* %1528, align 8
  %1530 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1531 = load i64* %1530, align 8
  %1532 = add i64 %1529, %1531
  %1533 = add i64 %1532, 17915904
  %1534 = getelementptr inbounds double addrspace(1)* %4, i64 %1533
  store double %1527, double addrspace(1)* %1534, align 8
  %1535 = fmul double %26, 0x40AF7377785729B3
  %1536 = fsub double %1136, %1535
  %1537 = call double @_Z3expd(double %1536) nounwind
  %1538 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1539 = load i64* %1538, align 8
  %1540 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1541 = load i64* %1540, align 8
  %1542 = add i64 %1539, %1541
  %1543 = add i64 %1542, 18026496
  %1544 = getelementptr inbounds double addrspace(1)* %4, i64 %1543
  store double %1537, double addrspace(1)* %1544, align 8
  %1545 = fsub double 0x403EA072E92BA824, %1137
  %1546 = call double @_Z3expd(double %1545) nounwind
  %1547 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1548 = load i64* %1547, align 8
  %1549 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1550 = load i64* %1549, align 8
  %1551 = add i64 %1548, %1550
  %1552 = add i64 %1551, 18137088
  %1553 = getelementptr inbounds double addrspace(1)* %4, i64 %1552
  store double %1546, double addrspace(1)* %1553, align 8
  %1554 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1555 = load i64* %1554, align 8
  %1556 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1557 = load i64* %1556, align 8
  %1558 = add i64 %1555, %1557
  %1559 = add i64 %1558, 18247680
  %1560 = getelementptr inbounds double addrspace(1)* %4, i64 %1559
  store double 5.000000e+13, double addrspace(1)* %1560, align 8
  %1561 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1562 = load i64* %1561, align 8
  %1563 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1564 = load i64* %1563, align 8
  %1565 = add i64 %1562, %1564
  %1566 = add i64 %1565, 18358272
  %1567 = getelementptr inbounds double addrspace(1)* %4, i64 %1566
  store double 5.000000e+13, double addrspace(1)* %1567, align 8
  %1568 = fadd double %250, 0x4028AA58595D6968
  %1569 = fmul double %26, 0x40B21597E5215769
  %1570 = fsub double %1568, %1569
  %1571 = call double @_Z3expd(double %1570) nounwind
  %1572 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1573 = load i64* %1572, align 8
  %1574 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1575 = load i64* %1574, align 8
  %1576 = add i64 %1573, %1575
  %1577 = add i64 %1576, 18468864
  %1578 = getelementptr inbounds double addrspace(1)* %4, i64 %1577
  store double %1571, double addrspace(1)* %1578, align 8
  %1579 = fmul double %26, 0x40AE458963DC486B
  %1580 = fsub double 0x403A85B9496249A1, %1579
  %1581 = call double @_Z3expd(double %1580) nounwind
  %1582 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1583 = load i64* %1582, align 8
  %1584 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1585 = load i64* %1584, align 8
  %1586 = add i64 %1583, %1585
  %1587 = add i64 %1586, 18579456
  %1588 = getelementptr inbounds double addrspace(1)* %4, i64 %1587
  store double %1581, double addrspace(1)* %1588, align 8
  %1589 = fmul double %25, 9.900000e-01
  %1590 = fsub double 0x404465B30A83E781, %1589
  %1591 = fmul double %26, 0x4088D8A89F40A287
  %1592 = fsub double %1590, %1591
  %1593 = call double @_Z3expd(double %1592) nounwind
  %1594 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1595 = load i64* %1594, align 8
  %1596 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1597 = load i64* %1596, align 8
  %1598 = add i64 %1595, %1597
  %1599 = add i64 %1598, 18690048
  %1600 = getelementptr inbounds double addrspace(1)* %4, i64 %1599
  store double %1593, double addrspace(1)* %1600, align 8
  %1601 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1602 = load i64* %1601, align 8
  %1603 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1604 = load i64* %1603, align 8
  %1605 = add i64 %1602, %1604
  %1606 = add i64 %1605, 18800640
  %1607 = getelementptr inbounds double addrspace(1)* %4, i64 %1606
  store double 2.000000e+12, double addrspace(1)* %1607, align 8
  %1608 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1609 = load i64* %1608, align 8
  %1610 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1611 = load i64* %1610, align 8
  %1612 = add i64 %1609, %1611
  %1613 = add i64 %1612, 18911232
  %1614 = getelementptr inbounds double addrspace(1)* %4, i64 %1613
  store double 1.604000e+13, double addrspace(1)* %1614, align 8
  %1615 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1616 = load i64* %1615, align 8
  %1617 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1618 = load i64* %1617, align 8
  %1619 = add i64 %1616, %1618
  %1620 = add i64 %1619, 19021824
  %1621 = getelementptr inbounds double addrspace(1)* %4, i64 %1620
  store double 8.020000e+13, double addrspace(1)* %1621, align 8
  %1622 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1623 = load i64* %1622, align 8
  %1624 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1625 = load i64* %1624, align 8
  %1626 = add i64 %1623, %1625
  %1627 = add i64 %1626, 19132416
  %1628 = getelementptr inbounds double addrspace(1)* %4, i64 %1627
  store double 2.000000e+10, double addrspace(1)* %1628, align 8
  %1629 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1630 = load i64* %1629, align 8
  %1631 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1632 = load i64* %1631, align 8
  %1633 = add i64 %1630, %1632
  %1634 = add i64 %1633, 19243008
  %1635 = getelementptr inbounds double addrspace(1)* %4, i64 %1634
  store double 3.000000e+11, double addrspace(1)* %1635, align 8
  %1636 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1637 = load i64* %1636, align 8
  %1638 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1639 = load i64* %1638, align 8
  %1640 = add i64 %1637, %1639
  %1641 = add i64 %1640, 19353600
  %1642 = getelementptr inbounds double addrspace(1)* %4, i64 %1641
  store double 3.000000e+11, double addrspace(1)* %1642, align 8
  %1643 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1644 = load i64* %1643, align 8
  %1645 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1646 = load i64* %1645, align 8
  %1647 = add i64 %1644, %1646
  %1648 = add i64 %1647, 19464192
  %1649 = getelementptr inbounds double addrspace(1)* %4, i64 %1648
  store double 2.400000e+13, double addrspace(1)* %1649, align 8
  %1650 = fmul double %26, 0x407EA220E8427419
  %1651 = fsub double 0x4036E2F77D7A7F22, %1650
  %1652 = call double @_Z3expd(double %1651) nounwind
  %1653 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1654 = load i64* %1653, align 8
  %1655 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1656 = load i64* %1655, align 8
  %1657 = add i64 %1654, %1656
  %1658 = add i64 %1657, 19574784
  %1659 = getelementptr inbounds double addrspace(1)* %4, i64 %1658
  store double %1652, double addrspace(1)* %1659, align 8
  %1660 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1661 = load i64* %1660, align 8
  %1662 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1663 = load i64* %1662, align 8
  %1664 = add i64 %1661, %1663
  %1665 = add i64 %1664, 19685376
  %1666 = getelementptr inbounds double addrspace(1)* %4, i64 %1665
  store double 1.200000e+14, double addrspace(1)* %1666, align 8
  %1667 = fmul double %25, 1.900000e+00
  %1668 = fadd double %1667, 0x40328F792C3BC82D
  %1669 = fmul double %26, 0x40AD9A7169C23B79
  %1670 = fsub double %1668, %1669
  %1671 = call double @_Z3expd(double %1670) nounwind
  %1672 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1673 = load i64* %1672, align 8
  %1674 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1675 = load i64* %1674, align 8
  %1676 = add i64 %1673, %1675
  %1677 = add i64 %1676, 19795968
  %1678 = getelementptr inbounds double addrspace(1)* %4, i64 %1677
  store double %1671, double addrspace(1)* %1678, align 8
  %1679 = fmul double %25, 1.920000e+00
  %1680 = fadd double %1679, 0x4032502706D50657
  %1681 = fmul double %26, 0x40A65E9B0DD82FD7
  %1682 = fsub double %1680, %1681
  %1683 = call double @_Z3expd(double %1682) nounwind
  %1684 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1685 = load i64* %1684, align 8
  %1686 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1687 = load i64* %1686, align 8
  %1688 = add i64 %1685, %1687
  %1689 = add i64 %1688, 19906560
  %1690 = getelementptr inbounds double addrspace(1)* %4, i64 %1689
  store double %1683, double addrspace(1)* %1690, align 8
  %1691 = fmul double %25, 2.120000e+00
  %1692 = fadd double %1691, 0x402E28C6385E155F
  %1693 = fmul double %26, 0x407B5CC6A8FC0D2C
  %1694 = fsub double %1692, %1693
  %1695 = call double @_Z3expd(double %1694) nounwind
  %1696 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1697 = load i64* %1696, align 8
  %1698 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1699 = load i64* %1698, align 8
  %1700 = add i64 %1697, %1699
  %1701 = add i64 %1700, 20017152
  %1702 = getelementptr inbounds double addrspace(1)* %4, i64 %1701
  store double %1695, double addrspace(1)* %1702, align 8
  %1703 = fmul double %26, 0x40714C4E820E6299
  %1704 = fadd double %1703, 0x403F51E50176F885
  %1705 = call double @_Z3expd(double %1704) nounwind
  %1706 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1707 = load i64* %1706, align 8
  %1708 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1709 = load i64* %1708, align 8
  %1710 = add i64 %1707, %1709
  %1711 = add i64 %1710, 20127744
  %1712 = getelementptr inbounds double addrspace(1)* %4, i64 %1711
  store double %1705, double addrspace(1)* %1712, align 8
  %1713 = fmul double %25, 1.740000e+00
  %1714 = fadd double %1713, 0x402F42BB4EF60759
  %1715 = fmul double %26, 0x40B48A9D3AE685DB
  %1716 = fsub double %1714, %1715
  %1717 = call double @_Z3expd(double %1716) nounwind
  %1718 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1719 = load i64* %1718, align 8
  %1720 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1721 = load i64* %1720, align 8
  %1722 = add i64 %1719, %1721
  %1723 = add i64 %1722, 20238336
  %1724 = getelementptr inbounds double addrspace(1)* %4, i64 %1723
  store double %1717, double addrspace(1)* %1724, align 8
  %1725 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1726 = load i64* %1725, align 8
  %1727 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1728 = load i64* %1727, align 8
  %1729 = add i64 %1726, %1728
  %1730 = add i64 %1729, 20348928
  %1731 = getelementptr inbounds double addrspace(1)* %4, i64 %1730
  store double 2.000000e+14, double addrspace(1)* %1731, align 8
  %1732 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1733 = load i64* %1732, align 8
  %1734 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1735 = load i64* %1734, align 8
  %1736 = add i64 %1733, %1735
  %1737 = add i64 %1736, 20570112
  %1738 = getelementptr inbounds double addrspace(1)* %4, i64 %1737
  store double 2.660000e+12, double addrspace(1)* %1738, align 8
  %1739 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1740 = load i64* %1739, align 8
  %1741 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1742 = load i64* %1741, align 8
  %1743 = add i64 %1740, %1742
  %1744 = add i64 %1743, 20680704
  %1745 = getelementptr inbounds double addrspace(1)* %4, i64 %1744
  store double 6.600000e+12, double addrspace(1)* %1745, align 8
  %1746 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1747 = load i64* %1746, align 8
  %1748 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1749 = load i64* %1748, align 8
  %1750 = add i64 %1747, %1749
  %1751 = add i64 %1750, 20791296
  %1752 = getelementptr inbounds double addrspace(1)* %4, i64 %1751
  store double 6.000000e+13, double addrspace(1)* %1752, align 8
  %1753 = fmul double %26, 0x4099A35AB7564303
  %1754 = fsub double 0x403E38024E8ED94C, %1753
  %1755 = call double @_Z3expd(double %1754) nounwind
  %1756 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1757 = load i64* %1756, align 8
  %1758 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1759 = load i64* %1758, align 8
  %1760 = add i64 %1757, %1759
  %1761 = add i64 %1760, 20901888
  %1762 = getelementptr inbounds double addrspace(1)* %4, i64 %1761
  store double %1755, double addrspace(1)* %1762, align 8
  %1763 = fmul double %25, 2.390000e+00
  %1764 = fsub double 0x4049903D7683141C, %1763
  %1765 = fmul double %26, 0x40B5F9F65BEA0BA2
  %1766 = fsub double %1764, %1765
  %1767 = call double @_Z3expd(double %1766) nounwind
  %1768 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1769 = load i64* %1768, align 8
  %1770 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1771 = load i64* %1770, align 8
  %1772 = add i64 %1769, %1771
  %1773 = add i64 %1772, 21012480
  %1774 = getelementptr inbounds double addrspace(1)* %4, i64 %1773
  store double %1767, double addrspace(1)* %1774, align 8
  %1775 = fmul double %25, 2.500000e+00
  %1776 = fadd double %1775, 0x4028164CABAA3D56
  %1777 = fmul double %26, 0x40939409BA5E353F
  %1778 = fsub double %1776, %1777
  %1779 = call double @_Z3expd(double %1778) nounwind
  %1780 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1781 = load i64* %1780, align 8
  %1782 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1783 = load i64* %1782, align 8
  %1784 = add i64 %1781, %1783
  %1785 = add i64 %1784, 21123072
  %1786 = getelementptr inbounds double addrspace(1)* %4, i64 %1785
  store double %1779, double addrspace(1)* %1786, align 8
  %1787 = fmul double %25, 1.650000e+00
  %1788 = fadd double %1787, 0x40329A5E5BD5E9AC
  %1789 = fmul double %26, 0x406491A8C154C986
  %1790 = fsub double %1788, %1789
  %1791 = call double @_Z3expd(double %1790) nounwind
  %1792 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1793 = load i64* %1792, align 8
  %1794 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1795 = load i64* %1794, align 8
  %1796 = add i64 %1793, %1795
  %1797 = add i64 %1796, 21233664
  %1798 = getelementptr inbounds double addrspace(1)* %4, i64 %1797
  store double %1791, double addrspace(1)* %1798, align 8
  %1799 = fadd double %1787, 0x40315EF096D670BA
  %1800 = fmul double %26, 0x407E92068EC52A41
  %1801 = fadd double %1799, %1800
  %1802 = call double @_Z3expd(double %1801) nounwind
  %1803 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1804 = load i64* %1803, align 8
  %1805 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1806 = load i64* %1805, align 8
  %1807 = add i64 %1804, %1806
  %1808 = add i64 %1807, 21344256
  %1809 = getelementptr inbounds double addrspace(1)* %4, i64 %1808
  store double %1802, double addrspace(1)* %1809, align 8
  %1810 = fmul double %25, 7.000000e-01
  %1811 = fadd double %1810, 0x4039EA8D92245A52
  %1812 = fmul double %26, 0x40A71DD3F91E646F
  %1813 = fsub double %1811, %1812
  %1814 = call double @_Z3expd(double %1813) nounwind
  %1815 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1816 = load i64* %1815, align 8
  %1817 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1818 = load i64* %1817, align 8
  %1819 = add i64 %1816, %1818
  %1820 = add i64 %1819, 21454848
  %1821 = getelementptr inbounds double addrspace(1)* %4, i64 %1820
  store double %1814, double addrspace(1)* %1821, align 8
  %1822 = fadd double %250, 0x402DE4D1BDCD5589
  %1823 = fmul double %26, 0x4062BEAC94B380CB
  %1824 = fadd double %1822, %1823
  %1825 = call double @_Z3expd(double %1824) nounwind
  %1826 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1827 = load i64* %1826, align 8
  %1828 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1829 = load i64* %1828, align 8
  %1830 = add i64 %1827, %1829
  %1831 = add i64 %1830, 21565440
  %1832 = getelementptr inbounds double addrspace(1)* %4, i64 %1831
  store double %1825, double addrspace(1)* %1832, align 8
  %1833 = fmul double %25, 2.600000e+00
  %1834 = fadd double %1833, 0x402256CB1CF45780
  %1835 = fmul double %26, 0x40BB57BE6CF41F21
  %1836 = fsub double %1834, %1835
  %1837 = call double @_Z3expd(double %1836) nounwind
  %1838 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1839 = load i64* %1838, align 8
  %1840 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1841 = load i64* %1840, align 8
  %1842 = add i64 %1839, %1841
  %1843 = add i64 %1842, 21676032
  %1844 = getelementptr inbounds double addrspace(1)* %4, i64 %1843
  store double %1837, double addrspace(1)* %1844, align 8
  %1845 = fmul double %25, 3.500000e+00
  %1846 = fadd double %1845, 0x3FE93B0AEDEFB22A
  %1847 = fmul double %26, 0x40A64F82599ED7C7
  %1848 = fsub double %1846, %1847
  %1849 = call double @_Z3expd(double %1848) nounwind
  %1850 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1851 = load i64* %1850, align 8
  %1852 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1853 = load i64* %1852, align 8
  %1854 = add i64 %1851, %1853
  %1855 = add i64 %1854, 21786624
  %1856 = getelementptr inbounds double addrspace(1)* %4, i64 %1855
  store double %1849, double addrspace(1)* %1856, align 8
  %1857 = fmul double %25, 2.920000e+00
  %1858 = fsub double 0x404C49020D2079F3, %1857
  %1859 = fmul double %26, 0x40B894B9743E963E
  %1860 = fsub double %1858, %1859
  %1861 = call double @_Z3expd(double %1860) nounwind
  %1862 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1863 = load i64* %1862, align 8
  %1864 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1865 = load i64* %1864, align 8
  %1866 = add i64 %1863, %1865
  %1867 = add i64 %1866, 21897216
  %1868 = getelementptr inbounds double addrspace(1)* %4, i64 %1867
  store double %1861, double addrspace(1)* %1868, align 8
  %1869 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1870 = load i64* %1869, align 8
  %1871 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1872 = load i64* %1871, align 8
  %1873 = add i64 %1870, %1872
  %1874 = add i64 %1873, 22007808
  %1875 = getelementptr inbounds double addrspace(1)* %4, i64 %1874
  store double 1.800000e+12, double addrspace(1)* %1875, align 8
  %1876 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1877 = load i64* %1876, align 8
  %1878 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1879 = load i64* %1878, align 8
  %1880 = add i64 %1877, %1879
  %1881 = add i64 %1880, 22118400
  %1882 = getelementptr inbounds double addrspace(1)* %4, i64 %1881
  store double 9.600000e+13, double addrspace(1)* %1882, align 8
  %1883 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1884 = load i64* %1883, align 8
  %1885 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1886 = load i64* %1885, align 8
  %1887 = add i64 %1884, %1886
  %1888 = add i64 %1887, 22228992
  %1889 = getelementptr inbounds double addrspace(1)* %4, i64 %1888
  store double 2.400000e+13, double addrspace(1)* %1889, align 8
  %1890 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1891 = load i64* %1890, align 8
  %1892 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1893 = load i64* %1892, align 8
  %1894 = add i64 %1891, %1893
  %1895 = add i64 %1894, 22339584
  %1896 = getelementptr inbounds double addrspace(1)* %4, i64 %1895
  store double 9.000000e+10, double addrspace(1)* %1896, align 8
  %1897 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1898 = load i64* %1897, align 8
  %1899 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1900 = load i64* %1899, align 8
  %1901 = add i64 %1898, %1900
  %1902 = add i64 %1901, 22450176
  %1903 = getelementptr inbounds double addrspace(1)* %4, i64 %1902
  store double 2.400000e+13, double addrspace(1)* %1903, align 8
  %1904 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1905 = load i64* %1904, align 8
  %1906 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1907 = load i64* %1906, align 8
  %1908 = add i64 %1905, %1907
  %1909 = add i64 %1908, 22560768
  %1910 = getelementptr inbounds double addrspace(1)* %4, i64 %1909
  store double 1.100000e+13, double addrspace(1)* %1910, align 8
  %1911 = fmul double %25, 5.220000e+00
  %1912 = fsub double 0x4052C2CBF8FCD680, %1911
  %1913 = fmul double %26, 0x40C368828049667B
  %1914 = fsub double %1912, %1913
  %1915 = call double @_Z3expd(double %1914) nounwind
  %1916 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1917 = load i64* %1916, align 8
  %1918 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1919 = load i64* %1918, align 8
  %1920 = add i64 %1917, %1919
  %1921 = add i64 %1920, 22671360
  %1922 = getelementptr inbounds double addrspace(1)* %4, i64 %1921
  store double %1915, double addrspace(1)* %1922, align 8
  %check.WI.iter.i = icmp ult i64 %CurrWI..0.i, %16
  br i1 %check.WI.iter.i, label %thenBB.i, label %__ratt_kernel_separated_args.exit

thenBB.i:                                         ; preds = %SyncBB1.i
  %"CurrWI++.i" = add nuw i64 %CurrWI..0.i, 1
  br label %SyncBB1.i

__ratt_kernel_separated_args.exit:                ; preds = %SyncBB1.i
  ret void
}

define void @__Vectorized_.ratt_kernel(i8* %pBuffer) {
entry:
  %0 = bitcast i8* %pBuffer to double addrspace(1)**
  %1 = load double addrspace(1)** %0, align 8
  %2 = getelementptr i8* %pBuffer, i64 8
  %3 = bitcast i8* %2 to double addrspace(1)**
  %4 = load double addrspace(1)** %3, align 8
  %5 = getelementptr i8* %pBuffer, i64 16
  %6 = bitcast i8* %5 to double*
  %7 = load double* %6, align 8
  %8 = getelementptr i8* %pBuffer, i64 48
  %9 = bitcast i8* %8 to %struct.PaddedDimId**
  %10 = load %struct.PaddedDimId** %9, align 8
  %11 = getelementptr i8* %pBuffer, i64 56
  %12 = bitcast i8* %11 to %struct.PaddedDimId**
  %13 = load %struct.PaddedDimId** %12, align 8
  %14 = getelementptr i8* %pBuffer, i64 72
  %15 = bitcast i8* %14 to i64*
  %16 = load i64* %15, align 8
  %temp.i = insertelement <16 x double> undef, double %7, i32 0
  %vector.i = shufflevector <16 x double> %temp.i, <16 x double> undef, <16 x i32> zeroinitializer
  br label %SyncBB.i

SyncBB.i:                                         ; preds = %thenBB.i, %entry
  %CurrWI..0.i = phi i64 [ 0, %entry ], [ %"CurrWI++.i", %thenBB.i ]
  %17 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %18 = load i64* %17, align 8
  %19 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %20 = load i64* %19, align 8
  %21 = add i64 %18, %20
  %22 = getelementptr inbounds double addrspace(1)* %1, i64 %21
  %ptrTypeCast.i = bitcast double addrspace(1)* %22 to <16 x double> addrspace(1)*
  %23 = load <16 x double> addrspace(1)* %ptrTypeCast.i, align 8
  %24 = fmul <16 x double> %23, %vector.i
  %extract16.i = extractelement <16 x double> %24, i32 0
  %extract17.i = extractelement <16 x double> %24, i32 1
  %extract18.i = extractelement <16 x double> %24, i32 2
  %extract19.i = extractelement <16 x double> %24, i32 3
  %extract20.i = extractelement <16 x double> %24, i32 4
  %extract21.i = extractelement <16 x double> %24, i32 5
  %extract22.i = extractelement <16 x double> %24, i32 6
  %extract23.i = extractelement <16 x double> %24, i32 7
  %extract24.i = extractelement <16 x double> %24, i32 8
  %extract25.i = extractelement <16 x double> %24, i32 9
  %extract26.i = extractelement <16 x double> %24, i32 10
  %extract27.i = extractelement <16 x double> %24, i32 11
  %extract28.i = extractelement <16 x double> %24, i32 12
  %extract29.i = extractelement <16 x double> %24, i32 13
  %extract30.i = extractelement <16 x double> %24, i32 14
  %extract31.i = extractelement <16 x double> %24, i32 15
  %25 = call double @_Z3logd(double %extract16.i) nounwind
  %26 = call double @_Z3logd(double %extract17.i) nounwind
  %27 = call double @_Z3logd(double %extract18.i) nounwind
  %28 = call double @_Z3logd(double %extract19.i) nounwind
  %29 = call double @_Z3logd(double %extract20.i) nounwind
  %30 = call double @_Z3logd(double %extract21.i) nounwind
  %31 = call double @_Z3logd(double %extract22.i) nounwind
  %32 = call double @_Z3logd(double %extract23.i) nounwind
  %33 = call double @_Z3logd(double %extract24.i) nounwind
  %34 = call double @_Z3logd(double %extract25.i) nounwind
  %35 = call double @_Z3logd(double %extract26.i) nounwind
  %36 = call double @_Z3logd(double %extract27.i) nounwind
  %37 = call double @_Z3logd(double %extract28.i) nounwind
  %38 = call double @_Z3logd(double %extract29.i) nounwind
  %39 = call double @_Z3logd(double %extract30.i) nounwind
  %40 = call double @_Z3logd(double %extract31.i) nounwind
  %temp.vect82.i = insertelement <16 x double> undef, double %25, i32 0
  %temp.vect83.i = insertelement <16 x double> %temp.vect82.i, double %26, i32 1
  %temp.vect84.i = insertelement <16 x double> %temp.vect83.i, double %27, i32 2
  %temp.vect85.i = insertelement <16 x double> %temp.vect84.i, double %28, i32 3
  %temp.vect86.i = insertelement <16 x double> %temp.vect85.i, double %29, i32 4
  %temp.vect87.i = insertelement <16 x double> %temp.vect86.i, double %30, i32 5
  %temp.vect88.i = insertelement <16 x double> %temp.vect87.i, double %31, i32 6
  %temp.vect89.i = insertelement <16 x double> %temp.vect88.i, double %32, i32 7
  %temp.vect90.i = insertelement <16 x double> %temp.vect89.i, double %33, i32 8
  %temp.vect91.i = insertelement <16 x double> %temp.vect90.i, double %34, i32 9
  %temp.vect92.i = insertelement <16 x double> %temp.vect91.i, double %35, i32 10
  %temp.vect93.i = insertelement <16 x double> %temp.vect92.i, double %36, i32 11
  %temp.vect94.i = insertelement <16 x double> %temp.vect93.i, double %37, i32 12
  %temp.vect95.i = insertelement <16 x double> %temp.vect94.i, double %38, i32 13
  %temp.vect96.i = insertelement <16 x double> %temp.vect95.i, double %39, i32 14
  %temp.vect97.i = insertelement <16 x double> %temp.vect96.i, double %40, i32 15
  %41 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %24
  %42 = fmul <16 x double> %41, %41
  %43 = fmul <16 x double> %41, <double 0x40BC54DCA0E410B6, double 0x40BC54DCA0E410B6, double 0x40BC54DCA0E410B6, double 0x40BC54DCA0E410B6, double 0x40BC54DCA0E410B6, double 0x40BC54DCA0E410B6, double 0x40BC54DCA0E410B6, double 0x40BC54DCA0E410B6, double 0x40BC54DCA0E410B6, double 0x40BC54DCA0E410B6, double 0x40BC54DCA0E410B6, double 0x40BC54DCA0E410B6, double 0x40BC54DCA0E410B6, double 0x40BC54DCA0E410B6, double 0x40BC54DCA0E410B6, double 0x40BC54DCA0E410B6>
  %44 = fsub <16 x double> <double 0x40400661DE416957, double 0x40400661DE416957, double 0x40400661DE416957, double 0x40400661DE416957, double 0x40400661DE416957, double 0x40400661DE416957, double 0x40400661DE416957, double 0x40400661DE416957, double 0x40400661DE416957, double 0x40400661DE416957, double 0x40400661DE416957, double 0x40400661DE416957, double 0x40400661DE416957, double 0x40400661DE416957, double 0x40400661DE416957, double 0x40400661DE416957>, %43
  %extract32.i = extractelement <16 x double> %44, i32 0
  %extract33.i = extractelement <16 x double> %44, i32 1
  %extract34.i = extractelement <16 x double> %44, i32 2
  %extract35.i = extractelement <16 x double> %44, i32 3
  %extract36.i = extractelement <16 x double> %44, i32 4
  %extract37.i = extractelement <16 x double> %44, i32 5
  %extract38.i = extractelement <16 x double> %44, i32 6
  %extract39.i = extractelement <16 x double> %44, i32 7
  %extract40.i = extractelement <16 x double> %44, i32 8
  %extract41.i = extractelement <16 x double> %44, i32 9
  %extract42.i = extractelement <16 x double> %44, i32 10
  %extract43.i = extractelement <16 x double> %44, i32 11
  %extract44.i = extractelement <16 x double> %44, i32 12
  %extract45.i = extractelement <16 x double> %44, i32 13
  %extract46.i = extractelement <16 x double> %44, i32 14
  %extract47.i = extractelement <16 x double> %44, i32 15
  %45 = call double @_Z3expd(double %extract32.i) nounwind
  %46 = call double @_Z3expd(double %extract33.i) nounwind
  %47 = call double @_Z3expd(double %extract34.i) nounwind
  %48 = call double @_Z3expd(double %extract35.i) nounwind
  %49 = call double @_Z3expd(double %extract36.i) nounwind
  %50 = call double @_Z3expd(double %extract37.i) nounwind
  %51 = call double @_Z3expd(double %extract38.i) nounwind
  %52 = call double @_Z3expd(double %extract39.i) nounwind
  %53 = call double @_Z3expd(double %extract40.i) nounwind
  %54 = call double @_Z3expd(double %extract41.i) nounwind
  %55 = call double @_Z3expd(double %extract42.i) nounwind
  %56 = call double @_Z3expd(double %extract43.i) nounwind
  %57 = call double @_Z3expd(double %extract44.i) nounwind
  %58 = call double @_Z3expd(double %extract45.i) nounwind
  %59 = call double @_Z3expd(double %extract46.i) nounwind
  %60 = call double @_Z3expd(double %extract47.i) nounwind
  %temp.vect.i = insertelement <16 x double> undef, double %45, i32 0
  %temp.vect67.i = insertelement <16 x double> %temp.vect.i, double %46, i32 1
  %temp.vect68.i = insertelement <16 x double> %temp.vect67.i, double %47, i32 2
  %temp.vect69.i = insertelement <16 x double> %temp.vect68.i, double %48, i32 3
  %temp.vect70.i = insertelement <16 x double> %temp.vect69.i, double %49, i32 4
  %temp.vect71.i = insertelement <16 x double> %temp.vect70.i, double %50, i32 5
  %temp.vect72.i = insertelement <16 x double> %temp.vect71.i, double %51, i32 6
  %temp.vect73.i = insertelement <16 x double> %temp.vect72.i, double %52, i32 7
  %temp.vect74.i = insertelement <16 x double> %temp.vect73.i, double %53, i32 8
  %temp.vect75.i = insertelement <16 x double> %temp.vect74.i, double %54, i32 9
  %temp.vect76.i = insertelement <16 x double> %temp.vect75.i, double %55, i32 10
  %temp.vect77.i = insertelement <16 x double> %temp.vect76.i, double %56, i32 11
  %temp.vect78.i = insertelement <16 x double> %temp.vect77.i, double %57, i32 12
  %temp.vect79.i = insertelement <16 x double> %temp.vect78.i, double %58, i32 13
  %temp.vect80.i = insertelement <16 x double> %temp.vect79.i, double %59, i32 14
  %temp.vect81.i = insertelement <16 x double> %temp.vect80.i, double %60, i32 15
  %61 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %62 = load i64* %61, align 8
  %63 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %64 = load i64* %63, align 8
  %65 = add i64 %62, %64
  %66 = getelementptr inbounds double addrspace(1)* %4, i64 %65
  %ptrTypeCast66.i = bitcast double addrspace(1)* %66 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect81.i, <16 x double> addrspace(1)* %ptrTypeCast66.i, align 8
  %67 = fmul <16 x double> %temp.vect97.i, <double 2.670000e+00, double 2.670000e+00, double 2.670000e+00, double 2.670000e+00, double 2.670000e+00, double 2.670000e+00, double 2.670000e+00, double 2.670000e+00, double 2.670000e+00, double 2.670000e+00, double 2.670000e+00, double 2.670000e+00, double 2.670000e+00, double 2.670000e+00, double 2.670000e+00, double 2.670000e+00>
  %68 = fadd <16 x double> %67, <double 0x4025A3B9FB38F0E2, double 0x4025A3B9FB38F0E2, double 0x4025A3B9FB38F0E2, double 0x4025A3B9FB38F0E2, double 0x4025A3B9FB38F0E2, double 0x4025A3B9FB38F0E2, double 0x4025A3B9FB38F0E2, double 0x4025A3B9FB38F0E2, double 0x4025A3B9FB38F0E2, double 0x4025A3B9FB38F0E2, double 0x4025A3B9FB38F0E2, double 0x4025A3B9FB38F0E2, double 0x4025A3B9FB38F0E2, double 0x4025A3B9FB38F0E2, double 0x4025A3B9FB38F0E2, double 0x4025A3B9FB38F0E2>
  %69 = fmul <16 x double> %41, <double 0x40A8BA7736CDF267, double 0x40A8BA7736CDF267, double 0x40A8BA7736CDF267, double 0x40A8BA7736CDF267, double 0x40A8BA7736CDF267, double 0x40A8BA7736CDF267, double 0x40A8BA7736CDF267, double 0x40A8BA7736CDF267, double 0x40A8BA7736CDF267, double 0x40A8BA7736CDF267, double 0x40A8BA7736CDF267, double 0x40A8BA7736CDF267, double 0x40A8BA7736CDF267, double 0x40A8BA7736CDF267, double 0x40A8BA7736CDF267, double 0x40A8BA7736CDF267>
  %70 = fsub <16 x double> %68, %69
  %extract98.i = extractelement <16 x double> %70, i32 0
  %extract99.i = extractelement <16 x double> %70, i32 1
  %extract100.i = extractelement <16 x double> %70, i32 2
  %extract101.i = extractelement <16 x double> %70, i32 3
  %extract102.i = extractelement <16 x double> %70, i32 4
  %extract103.i = extractelement <16 x double> %70, i32 5
  %extract104.i = extractelement <16 x double> %70, i32 6
  %extract105.i = extractelement <16 x double> %70, i32 7
  %extract106.i = extractelement <16 x double> %70, i32 8
  %extract107.i = extractelement <16 x double> %70, i32 9
  %extract108.i = extractelement <16 x double> %70, i32 10
  %extract109.i = extractelement <16 x double> %70, i32 11
  %extract110.i = extractelement <16 x double> %70, i32 12
  %extract111.i = extractelement <16 x double> %70, i32 13
  %extract112.i = extractelement <16 x double> %70, i32 14
  %extract113.i = extractelement <16 x double> %70, i32 15
  %71 = call double @_Z3expd(double %extract98.i) nounwind
  %72 = call double @_Z3expd(double %extract99.i) nounwind
  %73 = call double @_Z3expd(double %extract100.i) nounwind
  %74 = call double @_Z3expd(double %extract101.i) nounwind
  %75 = call double @_Z3expd(double %extract102.i) nounwind
  %76 = call double @_Z3expd(double %extract103.i) nounwind
  %77 = call double @_Z3expd(double %extract104.i) nounwind
  %78 = call double @_Z3expd(double %extract105.i) nounwind
  %79 = call double @_Z3expd(double %extract106.i) nounwind
  %80 = call double @_Z3expd(double %extract107.i) nounwind
  %81 = call double @_Z3expd(double %extract108.i) nounwind
  %82 = call double @_Z3expd(double %extract109.i) nounwind
  %83 = call double @_Z3expd(double %extract110.i) nounwind
  %84 = call double @_Z3expd(double %extract111.i) nounwind
  %85 = call double @_Z3expd(double %extract112.i) nounwind
  %86 = call double @_Z3expd(double %extract113.i) nounwind
  %temp.vect133.i = insertelement <16 x double> undef, double %71, i32 0
  %temp.vect134.i = insertelement <16 x double> %temp.vect133.i, double %72, i32 1
  %temp.vect135.i = insertelement <16 x double> %temp.vect134.i, double %73, i32 2
  %temp.vect136.i = insertelement <16 x double> %temp.vect135.i, double %74, i32 3
  %temp.vect137.i = insertelement <16 x double> %temp.vect136.i, double %75, i32 4
  %temp.vect138.i = insertelement <16 x double> %temp.vect137.i, double %76, i32 5
  %temp.vect139.i = insertelement <16 x double> %temp.vect138.i, double %77, i32 6
  %temp.vect140.i = insertelement <16 x double> %temp.vect139.i, double %78, i32 7
  %temp.vect141.i = insertelement <16 x double> %temp.vect140.i, double %79, i32 8
  %temp.vect142.i = insertelement <16 x double> %temp.vect141.i, double %80, i32 9
  %temp.vect143.i = insertelement <16 x double> %temp.vect142.i, double %81, i32 10
  %temp.vect144.i = insertelement <16 x double> %temp.vect143.i, double %82, i32 11
  %temp.vect145.i = insertelement <16 x double> %temp.vect144.i, double %83, i32 12
  %temp.vect146.i = insertelement <16 x double> %temp.vect145.i, double %84, i32 13
  %temp.vect147.i = insertelement <16 x double> %temp.vect146.i, double %85, i32 14
  %temp.vect148.i = insertelement <16 x double> %temp.vect147.i, double %86, i32 15
  %87 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %88 = load i64* %87, align 8
  %89 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %90 = load i64* %89, align 8
  %91 = add i64 %88, %90
  %extract116.i = add i64 %91, 110592
  %92 = getelementptr inbounds double addrspace(1)* %4, i64 %extract116.i
  %ptrTypeCast132.i = bitcast double addrspace(1)* %92 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect148.i, <16 x double> addrspace(1)* %ptrTypeCast132.i, align 8
  %93 = fmul <16 x double> %temp.vect97.i, <double 1.510000e+00, double 1.510000e+00, double 1.510000e+00, double 1.510000e+00, double 1.510000e+00, double 1.510000e+00, double 1.510000e+00, double 1.510000e+00, double 1.510000e+00, double 1.510000e+00, double 1.510000e+00, double 1.510000e+00, double 1.510000e+00, double 1.510000e+00, double 1.510000e+00, double 1.510000e+00>
  %94 = fadd <16 x double> %93, <double 0x403330D78C436FC1, double 0x403330D78C436FC1, double 0x403330D78C436FC1, double 0x403330D78C436FC1, double 0x403330D78C436FC1, double 0x403330D78C436FC1, double 0x403330D78C436FC1, double 0x403330D78C436FC1, double 0x403330D78C436FC1, double 0x403330D78C436FC1, double 0x403330D78C436FC1, double 0x403330D78C436FC1, double 0x403330D78C436FC1, double 0x403330D78C436FC1, double 0x403330D78C436FC1, double 0x403330D78C436FC1>
  %95 = fmul <16 x double> %41, <double 0x409AF821F75104D5, double 0x409AF821F75104D5, double 0x409AF821F75104D5, double 0x409AF821F75104D5, double 0x409AF821F75104D5, double 0x409AF821F75104D5, double 0x409AF821F75104D5, double 0x409AF821F75104D5, double 0x409AF821F75104D5, double 0x409AF821F75104D5, double 0x409AF821F75104D5, double 0x409AF821F75104D5, double 0x409AF821F75104D5, double 0x409AF821F75104D5, double 0x409AF821F75104D5, double 0x409AF821F75104D5>
  %96 = fsub <16 x double> %94, %95
  %extract149.i = extractelement <16 x double> %96, i32 0
  %extract150.i = extractelement <16 x double> %96, i32 1
  %extract151.i = extractelement <16 x double> %96, i32 2
  %extract152.i = extractelement <16 x double> %96, i32 3
  %extract153.i = extractelement <16 x double> %96, i32 4
  %extract154.i = extractelement <16 x double> %96, i32 5
  %extract155.i = extractelement <16 x double> %96, i32 6
  %extract156.i = extractelement <16 x double> %96, i32 7
  %extract157.i = extractelement <16 x double> %96, i32 8
  %extract158.i = extractelement <16 x double> %96, i32 9
  %extract159.i = extractelement <16 x double> %96, i32 10
  %extract160.i = extractelement <16 x double> %96, i32 11
  %extract161.i = extractelement <16 x double> %96, i32 12
  %extract162.i = extractelement <16 x double> %96, i32 13
  %extract163.i = extractelement <16 x double> %96, i32 14
  %extract164.i = extractelement <16 x double> %96, i32 15
  %97 = call double @_Z3expd(double %extract149.i) nounwind
  %98 = call double @_Z3expd(double %extract150.i) nounwind
  %99 = call double @_Z3expd(double %extract151.i) nounwind
  %100 = call double @_Z3expd(double %extract152.i) nounwind
  %101 = call double @_Z3expd(double %extract153.i) nounwind
  %102 = call double @_Z3expd(double %extract154.i) nounwind
  %103 = call double @_Z3expd(double %extract155.i) nounwind
  %104 = call double @_Z3expd(double %extract156.i) nounwind
  %105 = call double @_Z3expd(double %extract157.i) nounwind
  %106 = call double @_Z3expd(double %extract158.i) nounwind
  %107 = call double @_Z3expd(double %extract159.i) nounwind
  %108 = call double @_Z3expd(double %extract160.i) nounwind
  %109 = call double @_Z3expd(double %extract161.i) nounwind
  %110 = call double @_Z3expd(double %extract162.i) nounwind
  %111 = call double @_Z3expd(double %extract163.i) nounwind
  %112 = call double @_Z3expd(double %extract164.i) nounwind
  %temp.vect184.i = insertelement <16 x double> undef, double %97, i32 0
  %temp.vect185.i = insertelement <16 x double> %temp.vect184.i, double %98, i32 1
  %temp.vect186.i = insertelement <16 x double> %temp.vect185.i, double %99, i32 2
  %temp.vect187.i = insertelement <16 x double> %temp.vect186.i, double %100, i32 3
  %temp.vect188.i = insertelement <16 x double> %temp.vect187.i, double %101, i32 4
  %temp.vect189.i = insertelement <16 x double> %temp.vect188.i, double %102, i32 5
  %temp.vect190.i = insertelement <16 x double> %temp.vect189.i, double %103, i32 6
  %temp.vect191.i = insertelement <16 x double> %temp.vect190.i, double %104, i32 7
  %temp.vect192.i = insertelement <16 x double> %temp.vect191.i, double %105, i32 8
  %temp.vect193.i = insertelement <16 x double> %temp.vect192.i, double %106, i32 9
  %temp.vect194.i = insertelement <16 x double> %temp.vect193.i, double %107, i32 10
  %temp.vect195.i = insertelement <16 x double> %temp.vect194.i, double %108, i32 11
  %temp.vect196.i = insertelement <16 x double> %temp.vect195.i, double %109, i32 12
  %temp.vect197.i = insertelement <16 x double> %temp.vect196.i, double %110, i32 13
  %temp.vect198.i = insertelement <16 x double> %temp.vect197.i, double %111, i32 14
  %temp.vect199.i = insertelement <16 x double> %temp.vect198.i, double %112, i32 15
  %113 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %114 = load i64* %113, align 8
  %115 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %116 = load i64* %115, align 8
  %117 = add i64 %114, %116
  %extract167.i = add i64 %117, 221184
  %118 = getelementptr inbounds double addrspace(1)* %4, i64 %extract167.i
  %ptrTypeCast183.i = bitcast double addrspace(1)* %118 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect199.i, <16 x double> addrspace(1)* %ptrTypeCast183.i, align 8
  %119 = fmul <16 x double> %temp.vect97.i, <double 2.400000e+00, double 2.400000e+00, double 2.400000e+00, double 2.400000e+00, double 2.400000e+00, double 2.400000e+00, double 2.400000e+00, double 2.400000e+00, double 2.400000e+00, double 2.400000e+00, double 2.400000e+00, double 2.400000e+00, double 2.400000e+00, double 2.400000e+00, double 2.400000e+00, double 2.400000e+00>
  %120 = fadd <16 x double> %119, <double 0x4024F73F748A1598, double 0x4024F73F748A1598, double 0x4024F73F748A1598, double 0x4024F73F748A1598, double 0x4024F73F748A1598, double 0x4024F73F748A1598, double 0x4024F73F748A1598, double 0x4024F73F748A1598, double 0x4024F73F748A1598, double 0x4024F73F748A1598, double 0x4024F73F748A1598, double 0x4024F73F748A1598, double 0x4024F73F748A1598, double 0x4024F73F748A1598, double 0x4024F73F748A1598, double 0x4024F73F748A1598>
  %121 = fmul <16 x double> %41, <double 0x409097260FE47992, double 0x409097260FE47992, double 0x409097260FE47992, double 0x409097260FE47992, double 0x409097260FE47992, double 0x409097260FE47992, double 0x409097260FE47992, double 0x409097260FE47992, double 0x409097260FE47992, double 0x409097260FE47992, double 0x409097260FE47992, double 0x409097260FE47992, double 0x409097260FE47992, double 0x409097260FE47992, double 0x409097260FE47992, double 0x409097260FE47992>
  %122 = fadd <16 x double> %120, %121
  %extract200.i = extractelement <16 x double> %122, i32 0
  %extract201.i = extractelement <16 x double> %122, i32 1
  %extract202.i = extractelement <16 x double> %122, i32 2
  %extract203.i = extractelement <16 x double> %122, i32 3
  %extract204.i = extractelement <16 x double> %122, i32 4
  %extract205.i = extractelement <16 x double> %122, i32 5
  %extract206.i = extractelement <16 x double> %122, i32 6
  %extract207.i = extractelement <16 x double> %122, i32 7
  %extract208.i = extractelement <16 x double> %122, i32 8
  %extract209.i = extractelement <16 x double> %122, i32 9
  %extract210.i = extractelement <16 x double> %122, i32 10
  %extract211.i = extractelement <16 x double> %122, i32 11
  %extract212.i = extractelement <16 x double> %122, i32 12
  %extract213.i = extractelement <16 x double> %122, i32 13
  %extract214.i = extractelement <16 x double> %122, i32 14
  %extract215.i = extractelement <16 x double> %122, i32 15
  %123 = call double @_Z3expd(double %extract200.i) nounwind
  %124 = call double @_Z3expd(double %extract201.i) nounwind
  %125 = call double @_Z3expd(double %extract202.i) nounwind
  %126 = call double @_Z3expd(double %extract203.i) nounwind
  %127 = call double @_Z3expd(double %extract204.i) nounwind
  %128 = call double @_Z3expd(double %extract205.i) nounwind
  %129 = call double @_Z3expd(double %extract206.i) nounwind
  %130 = call double @_Z3expd(double %extract207.i) nounwind
  %131 = call double @_Z3expd(double %extract208.i) nounwind
  %132 = call double @_Z3expd(double %extract209.i) nounwind
  %133 = call double @_Z3expd(double %extract210.i) nounwind
  %134 = call double @_Z3expd(double %extract211.i) nounwind
  %135 = call double @_Z3expd(double %extract212.i) nounwind
  %136 = call double @_Z3expd(double %extract213.i) nounwind
  %137 = call double @_Z3expd(double %extract214.i) nounwind
  %138 = call double @_Z3expd(double %extract215.i) nounwind
  %temp.vect235.i = insertelement <16 x double> undef, double %123, i32 0
  %temp.vect236.i = insertelement <16 x double> %temp.vect235.i, double %124, i32 1
  %temp.vect237.i = insertelement <16 x double> %temp.vect236.i, double %125, i32 2
  %temp.vect238.i = insertelement <16 x double> %temp.vect237.i, double %126, i32 3
  %temp.vect239.i = insertelement <16 x double> %temp.vect238.i, double %127, i32 4
  %temp.vect240.i = insertelement <16 x double> %temp.vect239.i, double %128, i32 5
  %temp.vect241.i = insertelement <16 x double> %temp.vect240.i, double %129, i32 6
  %temp.vect242.i = insertelement <16 x double> %temp.vect241.i, double %130, i32 7
  %temp.vect243.i = insertelement <16 x double> %temp.vect242.i, double %131, i32 8
  %temp.vect244.i = insertelement <16 x double> %temp.vect243.i, double %132, i32 9
  %temp.vect245.i = insertelement <16 x double> %temp.vect244.i, double %133, i32 10
  %temp.vect246.i = insertelement <16 x double> %temp.vect245.i, double %134, i32 11
  %temp.vect247.i = insertelement <16 x double> %temp.vect246.i, double %135, i32 12
  %temp.vect248.i = insertelement <16 x double> %temp.vect247.i, double %136, i32 13
  %temp.vect249.i = insertelement <16 x double> %temp.vect248.i, double %137, i32 14
  %temp.vect250.i = insertelement <16 x double> %temp.vect249.i, double %138, i32 15
  %139 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %140 = load i64* %139, align 8
  %141 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %142 = load i64* %141, align 8
  %143 = add i64 %140, %142
  %extract218.i = add i64 %143, 331776
  %144 = getelementptr inbounds double addrspace(1)* %4, i64 %extract218.i
  %ptrTypeCast234.i = bitcast double addrspace(1)* %144 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect250.i, <16 x double> addrspace(1)* %ptrTypeCast234.i, align 8
  %145 = fmul <16 x double> %41, <double 1.000000e+18, double 1.000000e+18, double 1.000000e+18, double 1.000000e+18, double 1.000000e+18, double 1.000000e+18, double 1.000000e+18, double 1.000000e+18, double 1.000000e+18, double 1.000000e+18, double 1.000000e+18, double 1.000000e+18, double 1.000000e+18, double 1.000000e+18, double 1.000000e+18, double 1.000000e+18>
  %146 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %147 = load i64* %146, align 8
  %148 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %149 = load i64* %148, align 8
  %150 = add i64 %147, %149
  %extract253.i = add i64 %150, 442368
  %151 = getelementptr inbounds double addrspace(1)* %4, i64 %extract253.i
  %ptrTypeCast269.i = bitcast double addrspace(1)* %151 to <16 x double> addrspace(1)*
  store <16 x double> %145, <16 x double> addrspace(1)* %ptrTypeCast269.i, align 8
  %152 = fmul <16 x double> %temp.vect97.i, <double 6.000000e-01, double 6.000000e-01, double 6.000000e-01, double 6.000000e-01, double 6.000000e-01, double 6.000000e-01, double 6.000000e-01, double 6.000000e-01, double 6.000000e-01, double 6.000000e-01, double 6.000000e-01, double 6.000000e-01, double 6.000000e-01, double 6.000000e-01, double 6.000000e-01, double 6.000000e-01>
  %153 = fsub <16 x double> <double 0x404384F063AACA44, double 0x404384F063AACA44, double 0x404384F063AACA44, double 0x404384F063AACA44, double 0x404384F063AACA44, double 0x404384F063AACA44, double 0x404384F063AACA44, double 0x404384F063AACA44, double 0x404384F063AACA44, double 0x404384F063AACA44, double 0x404384F063AACA44, double 0x404384F063AACA44, double 0x404384F063AACA44, double 0x404384F063AACA44, double 0x404384F063AACA44, double 0x404384F063AACA44>, %152
  %extract270.i = extractelement <16 x double> %153, i32 0
  %extract271.i = extractelement <16 x double> %153, i32 1
  %extract272.i = extractelement <16 x double> %153, i32 2
  %extract273.i = extractelement <16 x double> %153, i32 3
  %extract274.i = extractelement <16 x double> %153, i32 4
  %extract275.i = extractelement <16 x double> %153, i32 5
  %extract276.i = extractelement <16 x double> %153, i32 6
  %extract277.i = extractelement <16 x double> %153, i32 7
  %extract278.i = extractelement <16 x double> %153, i32 8
  %extract279.i = extractelement <16 x double> %153, i32 9
  %extract280.i = extractelement <16 x double> %153, i32 10
  %extract281.i = extractelement <16 x double> %153, i32 11
  %extract282.i = extractelement <16 x double> %153, i32 12
  %extract283.i = extractelement <16 x double> %153, i32 13
  %extract284.i = extractelement <16 x double> %153, i32 14
  %extract285.i = extractelement <16 x double> %153, i32 15
  %154 = call double @_Z3expd(double %extract270.i) nounwind
  %155 = call double @_Z3expd(double %extract271.i) nounwind
  %156 = call double @_Z3expd(double %extract272.i) nounwind
  %157 = call double @_Z3expd(double %extract273.i) nounwind
  %158 = call double @_Z3expd(double %extract274.i) nounwind
  %159 = call double @_Z3expd(double %extract275.i) nounwind
  %160 = call double @_Z3expd(double %extract276.i) nounwind
  %161 = call double @_Z3expd(double %extract277.i) nounwind
  %162 = call double @_Z3expd(double %extract278.i) nounwind
  %163 = call double @_Z3expd(double %extract279.i) nounwind
  %164 = call double @_Z3expd(double %extract280.i) nounwind
  %165 = call double @_Z3expd(double %extract281.i) nounwind
  %166 = call double @_Z3expd(double %extract282.i) nounwind
  %167 = call double @_Z3expd(double %extract283.i) nounwind
  %168 = call double @_Z3expd(double %extract284.i) nounwind
  %169 = call double @_Z3expd(double %extract285.i) nounwind
  %temp.vect305.i = insertelement <16 x double> undef, double %154, i32 0
  %temp.vect306.i = insertelement <16 x double> %temp.vect305.i, double %155, i32 1
  %temp.vect307.i = insertelement <16 x double> %temp.vect306.i, double %156, i32 2
  %temp.vect308.i = insertelement <16 x double> %temp.vect307.i, double %157, i32 3
  %temp.vect309.i = insertelement <16 x double> %temp.vect308.i, double %158, i32 4
  %temp.vect310.i = insertelement <16 x double> %temp.vect309.i, double %159, i32 5
  %temp.vect311.i = insertelement <16 x double> %temp.vect310.i, double %160, i32 6
  %temp.vect312.i = insertelement <16 x double> %temp.vect311.i, double %161, i32 7
  %temp.vect313.i = insertelement <16 x double> %temp.vect312.i, double %162, i32 8
  %temp.vect314.i = insertelement <16 x double> %temp.vect313.i, double %163, i32 9
  %temp.vect315.i = insertelement <16 x double> %temp.vect314.i, double %164, i32 10
  %temp.vect316.i = insertelement <16 x double> %temp.vect315.i, double %165, i32 11
  %temp.vect317.i = insertelement <16 x double> %temp.vect316.i, double %166, i32 12
  %temp.vect318.i = insertelement <16 x double> %temp.vect317.i, double %167, i32 13
  %temp.vect319.i = insertelement <16 x double> %temp.vect318.i, double %168, i32 14
  %temp.vect320.i = insertelement <16 x double> %temp.vect319.i, double %169, i32 15
  %170 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %171 = load i64* %170, align 8
  %172 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %173 = load i64* %172, align 8
  %174 = add i64 %171, %173
  %extract288.i = add i64 %174, 552960
  %175 = getelementptr inbounds double addrspace(1)* %4, i64 %extract288.i
  %ptrTypeCast304.i = bitcast double addrspace(1)* %175 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect320.i, <16 x double> addrspace(1)* %ptrTypeCast304.i, align 8
  %176 = fmul <16 x double> %temp.vect97.i, <double 1.250000e+00, double 1.250000e+00, double 1.250000e+00, double 1.250000e+00, double 1.250000e+00, double 1.250000e+00, double 1.250000e+00, double 1.250000e+00, double 1.250000e+00, double 1.250000e+00, double 1.250000e+00, double 1.250000e+00, double 1.250000e+00, double 1.250000e+00, double 1.250000e+00, double 1.250000e+00>
  %177 = fsub <16 x double> <double 0x4046C53B6E6B17A6, double 0x4046C53B6E6B17A6, double 0x4046C53B6E6B17A6, double 0x4046C53B6E6B17A6, double 0x4046C53B6E6B17A6, double 0x4046C53B6E6B17A6, double 0x4046C53B6E6B17A6, double 0x4046C53B6E6B17A6, double 0x4046C53B6E6B17A6, double 0x4046C53B6E6B17A6, double 0x4046C53B6E6B17A6, double 0x4046C53B6E6B17A6, double 0x4046C53B6E6B17A6, double 0x4046C53B6E6B17A6, double 0x4046C53B6E6B17A6, double 0x4046C53B6E6B17A6>, %176
  %extract321.i = extractelement <16 x double> %177, i32 0
  %extract322.i = extractelement <16 x double> %177, i32 1
  %extract323.i = extractelement <16 x double> %177, i32 2
  %extract324.i = extractelement <16 x double> %177, i32 3
  %extract325.i = extractelement <16 x double> %177, i32 4
  %extract326.i = extractelement <16 x double> %177, i32 5
  %extract327.i = extractelement <16 x double> %177, i32 6
  %extract328.i = extractelement <16 x double> %177, i32 7
  %extract329.i = extractelement <16 x double> %177, i32 8
  %extract330.i = extractelement <16 x double> %177, i32 9
  %extract331.i = extractelement <16 x double> %177, i32 10
  %extract332.i = extractelement <16 x double> %177, i32 11
  %extract333.i = extractelement <16 x double> %177, i32 12
  %extract334.i = extractelement <16 x double> %177, i32 13
  %extract335.i = extractelement <16 x double> %177, i32 14
  %extract336.i = extractelement <16 x double> %177, i32 15
  %178 = call double @_Z3expd(double %extract321.i) nounwind
  %179 = call double @_Z3expd(double %extract322.i) nounwind
  %180 = call double @_Z3expd(double %extract323.i) nounwind
  %181 = call double @_Z3expd(double %extract324.i) nounwind
  %182 = call double @_Z3expd(double %extract325.i) nounwind
  %183 = call double @_Z3expd(double %extract326.i) nounwind
  %184 = call double @_Z3expd(double %extract327.i) nounwind
  %185 = call double @_Z3expd(double %extract328.i) nounwind
  %186 = call double @_Z3expd(double %extract329.i) nounwind
  %187 = call double @_Z3expd(double %extract330.i) nounwind
  %188 = call double @_Z3expd(double %extract331.i) nounwind
  %189 = call double @_Z3expd(double %extract332.i) nounwind
  %190 = call double @_Z3expd(double %extract333.i) nounwind
  %191 = call double @_Z3expd(double %extract334.i) nounwind
  %192 = call double @_Z3expd(double %extract335.i) nounwind
  %193 = call double @_Z3expd(double %extract336.i) nounwind
  %temp.vect356.i = insertelement <16 x double> undef, double %178, i32 0
  %temp.vect357.i = insertelement <16 x double> %temp.vect356.i, double %179, i32 1
  %temp.vect358.i = insertelement <16 x double> %temp.vect357.i, double %180, i32 2
  %temp.vect359.i = insertelement <16 x double> %temp.vect358.i, double %181, i32 3
  %temp.vect360.i = insertelement <16 x double> %temp.vect359.i, double %182, i32 4
  %temp.vect361.i = insertelement <16 x double> %temp.vect360.i, double %183, i32 5
  %temp.vect362.i = insertelement <16 x double> %temp.vect361.i, double %184, i32 6
  %temp.vect363.i = insertelement <16 x double> %temp.vect362.i, double %185, i32 7
  %temp.vect364.i = insertelement <16 x double> %temp.vect363.i, double %186, i32 8
  %temp.vect365.i = insertelement <16 x double> %temp.vect364.i, double %187, i32 9
  %temp.vect366.i = insertelement <16 x double> %temp.vect365.i, double %188, i32 10
  %temp.vect367.i = insertelement <16 x double> %temp.vect366.i, double %189, i32 11
  %temp.vect368.i = insertelement <16 x double> %temp.vect367.i, double %190, i32 12
  %temp.vect369.i = insertelement <16 x double> %temp.vect368.i, double %191, i32 13
  %temp.vect370.i = insertelement <16 x double> %temp.vect369.i, double %192, i32 14
  %temp.vect371.i = insertelement <16 x double> %temp.vect370.i, double %193, i32 15
  %194 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %195 = load i64* %194, align 8
  %196 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %197 = load i64* %196, align 8
  %198 = add i64 %195, %197
  %extract339.i = add i64 %198, 663552
  %199 = getelementptr inbounds double addrspace(1)* %4, i64 %extract339.i
  %ptrTypeCast355.i = bitcast double addrspace(1)* %199 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect371.i, <16 x double> addrspace(1)* %ptrTypeCast355.i, align 8
  %200 = fmul <16 x double> %42, <double 5.500000e+20, double 5.500000e+20, double 5.500000e+20, double 5.500000e+20, double 5.500000e+20, double 5.500000e+20, double 5.500000e+20, double 5.500000e+20, double 5.500000e+20, double 5.500000e+20, double 5.500000e+20, double 5.500000e+20, double 5.500000e+20, double 5.500000e+20, double 5.500000e+20, double 5.500000e+20>
  %201 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %202 = load i64* %201, align 8
  %203 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %204 = load i64* %203, align 8
  %205 = add i64 %202, %204
  %extract374.i = add i64 %205, 774144
  %206 = getelementptr inbounds double addrspace(1)* %4, i64 %extract374.i
  %ptrTypeCast390.i = bitcast double addrspace(1)* %206 to <16 x double> addrspace(1)*
  store <16 x double> %200, <16 x double> addrspace(1)* %ptrTypeCast390.i, align 8
  %207 = fmul <16 x double> %42, <double 2.200000e+22, double 2.200000e+22, double 2.200000e+22, double 2.200000e+22, double 2.200000e+22, double 2.200000e+22, double 2.200000e+22, double 2.200000e+22, double 2.200000e+22, double 2.200000e+22, double 2.200000e+22, double 2.200000e+22, double 2.200000e+22, double 2.200000e+22, double 2.200000e+22, double 2.200000e+22>
  %208 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %209 = load i64* %208, align 8
  %210 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %211 = load i64* %210, align 8
  %212 = add i64 %209, %211
  %extract393.i = add i64 %212, 884736
  %213 = getelementptr inbounds double addrspace(1)* %4, i64 %extract393.i
  %ptrTypeCast409.i = bitcast double addrspace(1)* %213 to <16 x double> addrspace(1)*
  store <16 x double> %207, <16 x double> addrspace(1)* %ptrTypeCast409.i, align 8
  %214 = fmul <16 x double> %41, <double 5.000000e+17, double 5.000000e+17, double 5.000000e+17, double 5.000000e+17, double 5.000000e+17, double 5.000000e+17, double 5.000000e+17, double 5.000000e+17, double 5.000000e+17, double 5.000000e+17, double 5.000000e+17, double 5.000000e+17, double 5.000000e+17, double 5.000000e+17, double 5.000000e+17, double 5.000000e+17>
  %215 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %216 = load i64* %215, align 8
  %217 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %218 = load i64* %217, align 8
  %219 = add i64 %216, %218
  %extract412.i = add i64 %219, 995328
  %220 = getelementptr inbounds double addrspace(1)* %4, i64 %extract412.i
  %ptrTypeCast428.i = bitcast double addrspace(1)* %220 to <16 x double> addrspace(1)*
  store <16 x double> %214, <16 x double> addrspace(1)* %ptrTypeCast428.i, align 8
  %221 = fmul <16 x double> %41, <double 1.200000e+17, double 1.200000e+17, double 1.200000e+17, double 1.200000e+17, double 1.200000e+17, double 1.200000e+17, double 1.200000e+17, double 1.200000e+17, double 1.200000e+17, double 1.200000e+17, double 1.200000e+17, double 1.200000e+17, double 1.200000e+17, double 1.200000e+17, double 1.200000e+17, double 1.200000e+17>
  %222 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %223 = load i64* %222, align 8
  %224 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %225 = load i64* %224, align 8
  %226 = add i64 %223, %225
  %extract431.i = add i64 %226, 1105920
  %227 = getelementptr inbounds double addrspace(1)* %4, i64 %extract431.i
  %ptrTypeCast447.i = bitcast double addrspace(1)* %227 to <16 x double> addrspace(1)*
  store <16 x double> %221, <16 x double> addrspace(1)* %ptrTypeCast447.i, align 8
  %228 = fmul <16 x double> %temp.vect97.i, <double 8.600000e-01, double 8.600000e-01, double 8.600000e-01, double 8.600000e-01, double 8.600000e-01, double 8.600000e-01, double 8.600000e-01, double 8.600000e-01, double 8.600000e-01, double 8.600000e-01, double 8.600000e-01, double 8.600000e-01, double 8.600000e-01, double 8.600000e-01, double 8.600000e-01, double 8.600000e-01>
  %229 = fsub <16 x double> <double 0x40453CF284ED3A2B, double 0x40453CF284ED3A2B, double 0x40453CF284ED3A2B, double 0x40453CF284ED3A2B, double 0x40453CF284ED3A2B, double 0x40453CF284ED3A2B, double 0x40453CF284ED3A2B, double 0x40453CF284ED3A2B, double 0x40453CF284ED3A2B, double 0x40453CF284ED3A2B, double 0x40453CF284ED3A2B, double 0x40453CF284ED3A2B, double 0x40453CF284ED3A2B, double 0x40453CF284ED3A2B, double 0x40453CF284ED3A2B, double 0x40453CF284ED3A2B>, %228
  %extract448.i = extractelement <16 x double> %229, i32 0
  %extract449.i = extractelement <16 x double> %229, i32 1
  %extract450.i = extractelement <16 x double> %229, i32 2
  %extract451.i = extractelement <16 x double> %229, i32 3
  %extract452.i = extractelement <16 x double> %229, i32 4
  %extract453.i = extractelement <16 x double> %229, i32 5
  %extract454.i = extractelement <16 x double> %229, i32 6
  %extract455.i = extractelement <16 x double> %229, i32 7
  %extract456.i = extractelement <16 x double> %229, i32 8
  %extract457.i = extractelement <16 x double> %229, i32 9
  %extract458.i = extractelement <16 x double> %229, i32 10
  %extract459.i = extractelement <16 x double> %229, i32 11
  %extract460.i = extractelement <16 x double> %229, i32 12
  %extract461.i = extractelement <16 x double> %229, i32 13
  %extract462.i = extractelement <16 x double> %229, i32 14
  %extract463.i = extractelement <16 x double> %229, i32 15
  %230 = call double @_Z3expd(double %extract448.i) nounwind
  %231 = call double @_Z3expd(double %extract449.i) nounwind
  %232 = call double @_Z3expd(double %extract450.i) nounwind
  %233 = call double @_Z3expd(double %extract451.i) nounwind
  %234 = call double @_Z3expd(double %extract452.i) nounwind
  %235 = call double @_Z3expd(double %extract453.i) nounwind
  %236 = call double @_Z3expd(double %extract454.i) nounwind
  %237 = call double @_Z3expd(double %extract455.i) nounwind
  %238 = call double @_Z3expd(double %extract456.i) nounwind
  %239 = call double @_Z3expd(double %extract457.i) nounwind
  %240 = call double @_Z3expd(double %extract458.i) nounwind
  %241 = call double @_Z3expd(double %extract459.i) nounwind
  %242 = call double @_Z3expd(double %extract460.i) nounwind
  %243 = call double @_Z3expd(double %extract461.i) nounwind
  %244 = call double @_Z3expd(double %extract462.i) nounwind
  %245 = call double @_Z3expd(double %extract463.i) nounwind
  %temp.vect483.i = insertelement <16 x double> undef, double %230, i32 0
  %temp.vect484.i = insertelement <16 x double> %temp.vect483.i, double %231, i32 1
  %temp.vect485.i = insertelement <16 x double> %temp.vect484.i, double %232, i32 2
  %temp.vect486.i = insertelement <16 x double> %temp.vect485.i, double %233, i32 3
  %temp.vect487.i = insertelement <16 x double> %temp.vect486.i, double %234, i32 4
  %temp.vect488.i = insertelement <16 x double> %temp.vect487.i, double %235, i32 5
  %temp.vect489.i = insertelement <16 x double> %temp.vect488.i, double %236, i32 6
  %temp.vect490.i = insertelement <16 x double> %temp.vect489.i, double %237, i32 7
  %temp.vect491.i = insertelement <16 x double> %temp.vect490.i, double %238, i32 8
  %temp.vect492.i = insertelement <16 x double> %temp.vect491.i, double %239, i32 9
  %temp.vect493.i = insertelement <16 x double> %temp.vect492.i, double %240, i32 10
  %temp.vect494.i = insertelement <16 x double> %temp.vect493.i, double %241, i32 11
  %temp.vect495.i = insertelement <16 x double> %temp.vect494.i, double %242, i32 12
  %temp.vect496.i = insertelement <16 x double> %temp.vect495.i, double %243, i32 13
  %temp.vect497.i = insertelement <16 x double> %temp.vect496.i, double %244, i32 14
  %temp.vect498.i = insertelement <16 x double> %temp.vect497.i, double %245, i32 15
  %246 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %247 = load i64* %246, align 8
  %248 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %249 = load i64* %248, align 8
  %250 = add i64 %247, %249
  %extract466.i = add i64 %250, 1216512
  %251 = getelementptr inbounds double addrspace(1)* %4, i64 %extract466.i
  %ptrTypeCast482.i = bitcast double addrspace(1)* %251 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect498.i, <16 x double> addrspace(1)* %ptrTypeCast482.i, align 8
  %252 = fmul <16 x double> %temp.vect97.i, <double 1.720000e+00, double 1.720000e+00, double 1.720000e+00, double 1.720000e+00, double 1.720000e+00, double 1.720000e+00, double 1.720000e+00, double 1.720000e+00, double 1.720000e+00, double 1.720000e+00, double 1.720000e+00, double 1.720000e+00, double 1.720000e+00, double 1.720000e+00, double 1.720000e+00, double 1.720000e+00>
  %253 = fsub <16 x double> <double 0x4047933D7E0FD058, double 0x4047933D7E0FD058, double 0x4047933D7E0FD058, double 0x4047933D7E0FD058, double 0x4047933D7E0FD058, double 0x4047933D7E0FD058, double 0x4047933D7E0FD058, double 0x4047933D7E0FD058, double 0x4047933D7E0FD058, double 0x4047933D7E0FD058, double 0x4047933D7E0FD058, double 0x4047933D7E0FD058, double 0x4047933D7E0FD058, double 0x4047933D7E0FD058, double 0x4047933D7E0FD058, double 0x4047933D7E0FD058>, %252
  %extract499.i = extractelement <16 x double> %253, i32 0
  %extract500.i = extractelement <16 x double> %253, i32 1
  %extract501.i = extractelement <16 x double> %253, i32 2
  %extract502.i = extractelement <16 x double> %253, i32 3
  %extract503.i = extractelement <16 x double> %253, i32 4
  %extract504.i = extractelement <16 x double> %253, i32 5
  %extract505.i = extractelement <16 x double> %253, i32 6
  %extract506.i = extractelement <16 x double> %253, i32 7
  %extract507.i = extractelement <16 x double> %253, i32 8
  %extract508.i = extractelement <16 x double> %253, i32 9
  %extract509.i = extractelement <16 x double> %253, i32 10
  %extract510.i = extractelement <16 x double> %253, i32 11
  %extract511.i = extractelement <16 x double> %253, i32 12
  %extract512.i = extractelement <16 x double> %253, i32 13
  %extract513.i = extractelement <16 x double> %253, i32 14
  %extract514.i = extractelement <16 x double> %253, i32 15
  %254 = call double @_Z3expd(double %extract499.i) nounwind
  %255 = call double @_Z3expd(double %extract500.i) nounwind
  %256 = call double @_Z3expd(double %extract501.i) nounwind
  %257 = call double @_Z3expd(double %extract502.i) nounwind
  %258 = call double @_Z3expd(double %extract503.i) nounwind
  %259 = call double @_Z3expd(double %extract504.i) nounwind
  %260 = call double @_Z3expd(double %extract505.i) nounwind
  %261 = call double @_Z3expd(double %extract506.i) nounwind
  %262 = call double @_Z3expd(double %extract507.i) nounwind
  %263 = call double @_Z3expd(double %extract508.i) nounwind
  %264 = call double @_Z3expd(double %extract509.i) nounwind
  %265 = call double @_Z3expd(double %extract510.i) nounwind
  %266 = call double @_Z3expd(double %extract511.i) nounwind
  %267 = call double @_Z3expd(double %extract512.i) nounwind
  %268 = call double @_Z3expd(double %extract513.i) nounwind
  %269 = call double @_Z3expd(double %extract514.i) nounwind
  %temp.vect534.i = insertelement <16 x double> undef, double %254, i32 0
  %temp.vect535.i = insertelement <16 x double> %temp.vect534.i, double %255, i32 1
  %temp.vect536.i = insertelement <16 x double> %temp.vect535.i, double %256, i32 2
  %temp.vect537.i = insertelement <16 x double> %temp.vect536.i, double %257, i32 3
  %temp.vect538.i = insertelement <16 x double> %temp.vect537.i, double %258, i32 4
  %temp.vect539.i = insertelement <16 x double> %temp.vect538.i, double %259, i32 5
  %temp.vect540.i = insertelement <16 x double> %temp.vect539.i, double %260, i32 6
  %temp.vect541.i = insertelement <16 x double> %temp.vect540.i, double %261, i32 7
  %temp.vect542.i = insertelement <16 x double> %temp.vect541.i, double %262, i32 8
  %temp.vect543.i = insertelement <16 x double> %temp.vect542.i, double %263, i32 9
  %temp.vect544.i = insertelement <16 x double> %temp.vect543.i, double %264, i32 10
  %temp.vect545.i = insertelement <16 x double> %temp.vect544.i, double %265, i32 11
  %temp.vect546.i = insertelement <16 x double> %temp.vect545.i, double %266, i32 12
  %temp.vect547.i = insertelement <16 x double> %temp.vect546.i, double %267, i32 13
  %temp.vect548.i = insertelement <16 x double> %temp.vect547.i, double %268, i32 14
  %temp.vect549.i = insertelement <16 x double> %temp.vect548.i, double %269, i32 15
  %270 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %271 = load i64* %270, align 8
  %272 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %273 = load i64* %272, align 8
  %274 = add i64 %271, %273
  %extract517.i = add i64 %274, 1327104
  %275 = getelementptr inbounds double addrspace(1)* %4, i64 %extract517.i
  %ptrTypeCast533.i = bitcast double addrspace(1)* %275 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect549.i, <16 x double> addrspace(1)* %ptrTypeCast533.i, align 8
  %276 = fmul <16 x double> %temp.vect97.i, <double 7.600000e-01, double 7.600000e-01, double 7.600000e-01, double 7.600000e-01, double 7.600000e-01, double 7.600000e-01, double 7.600000e-01, double 7.600000e-01, double 7.600000e-01, double 7.600000e-01, double 7.600000e-01, double 7.600000e-01, double 7.600000e-01, double 7.600000e-01, double 7.600000e-01, double 7.600000e-01>
  %277 = fsub <16 x double> <double 0x4046202427FD750B, double 0x4046202427FD750B, double 0x4046202427FD750B, double 0x4046202427FD750B, double 0x4046202427FD750B, double 0x4046202427FD750B, double 0x4046202427FD750B, double 0x4046202427FD750B, double 0x4046202427FD750B, double 0x4046202427FD750B, double 0x4046202427FD750B, double 0x4046202427FD750B, double 0x4046202427FD750B, double 0x4046202427FD750B, double 0x4046202427FD750B, double 0x4046202427FD750B>, %276
  %extract550.i = extractelement <16 x double> %277, i32 0
  %extract551.i = extractelement <16 x double> %277, i32 1
  %extract552.i = extractelement <16 x double> %277, i32 2
  %extract553.i = extractelement <16 x double> %277, i32 3
  %extract554.i = extractelement <16 x double> %277, i32 4
  %extract555.i = extractelement <16 x double> %277, i32 5
  %extract556.i = extractelement <16 x double> %277, i32 6
  %extract557.i = extractelement <16 x double> %277, i32 7
  %extract558.i = extractelement <16 x double> %277, i32 8
  %extract559.i = extractelement <16 x double> %277, i32 9
  %extract560.i = extractelement <16 x double> %277, i32 10
  %extract561.i = extractelement <16 x double> %277, i32 11
  %extract562.i = extractelement <16 x double> %277, i32 12
  %extract563.i = extractelement <16 x double> %277, i32 13
  %extract564.i = extractelement <16 x double> %277, i32 14
  %extract565.i = extractelement <16 x double> %277, i32 15
  %278 = call double @_Z3expd(double %extract550.i) nounwind
  %279 = call double @_Z3expd(double %extract551.i) nounwind
  %280 = call double @_Z3expd(double %extract552.i) nounwind
  %281 = call double @_Z3expd(double %extract553.i) nounwind
  %282 = call double @_Z3expd(double %extract554.i) nounwind
  %283 = call double @_Z3expd(double %extract555.i) nounwind
  %284 = call double @_Z3expd(double %extract556.i) nounwind
  %285 = call double @_Z3expd(double %extract557.i) nounwind
  %286 = call double @_Z3expd(double %extract558.i) nounwind
  %287 = call double @_Z3expd(double %extract559.i) nounwind
  %288 = call double @_Z3expd(double %extract560.i) nounwind
  %289 = call double @_Z3expd(double %extract561.i) nounwind
  %290 = call double @_Z3expd(double %extract562.i) nounwind
  %291 = call double @_Z3expd(double %extract563.i) nounwind
  %292 = call double @_Z3expd(double %extract564.i) nounwind
  %293 = call double @_Z3expd(double %extract565.i) nounwind
  %temp.vect585.i = insertelement <16 x double> undef, double %278, i32 0
  %temp.vect586.i = insertelement <16 x double> %temp.vect585.i, double %279, i32 1
  %temp.vect587.i = insertelement <16 x double> %temp.vect586.i, double %280, i32 2
  %temp.vect588.i = insertelement <16 x double> %temp.vect587.i, double %281, i32 3
  %temp.vect589.i = insertelement <16 x double> %temp.vect588.i, double %282, i32 4
  %temp.vect590.i = insertelement <16 x double> %temp.vect589.i, double %283, i32 5
  %temp.vect591.i = insertelement <16 x double> %temp.vect590.i, double %284, i32 6
  %temp.vect592.i = insertelement <16 x double> %temp.vect591.i, double %285, i32 7
  %temp.vect593.i = insertelement <16 x double> %temp.vect592.i, double %286, i32 8
  %temp.vect594.i = insertelement <16 x double> %temp.vect593.i, double %287, i32 9
  %temp.vect595.i = insertelement <16 x double> %temp.vect594.i, double %288, i32 10
  %temp.vect596.i = insertelement <16 x double> %temp.vect595.i, double %289, i32 11
  %temp.vect597.i = insertelement <16 x double> %temp.vect596.i, double %290, i32 12
  %temp.vect598.i = insertelement <16 x double> %temp.vect597.i, double %291, i32 13
  %temp.vect599.i = insertelement <16 x double> %temp.vect598.i, double %292, i32 14
  %temp.vect600.i = insertelement <16 x double> %temp.vect599.i, double %293, i32 15
  %294 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %295 = load i64* %294, align 8
  %296 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %297 = load i64* %296, align 8
  %298 = add i64 %295, %297
  %extract568.i = add i64 %298, 1437696
  %299 = getelementptr inbounds double addrspace(1)* %4, i64 %extract568.i
  %ptrTypeCast584.i = bitcast double addrspace(1)* %299 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect600.i, <16 x double> addrspace(1)* %ptrTypeCast584.i, align 8
  %300 = fmul <16 x double> %temp.vect97.i, <double 1.240000e+00, double 1.240000e+00, double 1.240000e+00, double 1.240000e+00, double 1.240000e+00, double 1.240000e+00, double 1.240000e+00, double 1.240000e+00, double 1.240000e+00, double 1.240000e+00, double 1.240000e+00, double 1.240000e+00, double 1.240000e+00, double 1.240000e+00, double 1.240000e+00, double 1.240000e+00>
  %301 = fsub <16 x double> <double 0x40465A3141C16B70, double 0x40465A3141C16B70, double 0x40465A3141C16B70, double 0x40465A3141C16B70, double 0x40465A3141C16B70, double 0x40465A3141C16B70, double 0x40465A3141C16B70, double 0x40465A3141C16B70, double 0x40465A3141C16B70, double 0x40465A3141C16B70, double 0x40465A3141C16B70, double 0x40465A3141C16B70, double 0x40465A3141C16B70, double 0x40465A3141C16B70, double 0x40465A3141C16B70, double 0x40465A3141C16B70>, %300
  %extract601.i = extractelement <16 x double> %301, i32 0
  %extract602.i = extractelement <16 x double> %301, i32 1
  %extract603.i = extractelement <16 x double> %301, i32 2
  %extract604.i = extractelement <16 x double> %301, i32 3
  %extract605.i = extractelement <16 x double> %301, i32 4
  %extract606.i = extractelement <16 x double> %301, i32 5
  %extract607.i = extractelement <16 x double> %301, i32 6
  %extract608.i = extractelement <16 x double> %301, i32 7
  %extract609.i = extractelement <16 x double> %301, i32 8
  %extract610.i = extractelement <16 x double> %301, i32 9
  %extract611.i = extractelement <16 x double> %301, i32 10
  %extract612.i = extractelement <16 x double> %301, i32 11
  %extract613.i = extractelement <16 x double> %301, i32 12
  %extract614.i = extractelement <16 x double> %301, i32 13
  %extract615.i = extractelement <16 x double> %301, i32 14
  %extract616.i = extractelement <16 x double> %301, i32 15
  %302 = call double @_Z3expd(double %extract601.i) nounwind
  %303 = call double @_Z3expd(double %extract602.i) nounwind
  %304 = call double @_Z3expd(double %extract603.i) nounwind
  %305 = call double @_Z3expd(double %extract604.i) nounwind
  %306 = call double @_Z3expd(double %extract605.i) nounwind
  %307 = call double @_Z3expd(double %extract606.i) nounwind
  %308 = call double @_Z3expd(double %extract607.i) nounwind
  %309 = call double @_Z3expd(double %extract608.i) nounwind
  %310 = call double @_Z3expd(double %extract609.i) nounwind
  %311 = call double @_Z3expd(double %extract610.i) nounwind
  %312 = call double @_Z3expd(double %extract611.i) nounwind
  %313 = call double @_Z3expd(double %extract612.i) nounwind
  %314 = call double @_Z3expd(double %extract613.i) nounwind
  %315 = call double @_Z3expd(double %extract614.i) nounwind
  %316 = call double @_Z3expd(double %extract615.i) nounwind
  %317 = call double @_Z3expd(double %extract616.i) nounwind
  %temp.vect636.i = insertelement <16 x double> undef, double %302, i32 0
  %temp.vect637.i = insertelement <16 x double> %temp.vect636.i, double %303, i32 1
  %temp.vect638.i = insertelement <16 x double> %temp.vect637.i, double %304, i32 2
  %temp.vect639.i = insertelement <16 x double> %temp.vect638.i, double %305, i32 3
  %temp.vect640.i = insertelement <16 x double> %temp.vect639.i, double %306, i32 4
  %temp.vect641.i = insertelement <16 x double> %temp.vect640.i, double %307, i32 5
  %temp.vect642.i = insertelement <16 x double> %temp.vect641.i, double %308, i32 6
  %temp.vect643.i = insertelement <16 x double> %temp.vect642.i, double %309, i32 7
  %temp.vect644.i = insertelement <16 x double> %temp.vect643.i, double %310, i32 8
  %temp.vect645.i = insertelement <16 x double> %temp.vect644.i, double %311, i32 9
  %temp.vect646.i = insertelement <16 x double> %temp.vect645.i, double %312, i32 10
  %temp.vect647.i = insertelement <16 x double> %temp.vect646.i, double %313, i32 11
  %temp.vect648.i = insertelement <16 x double> %temp.vect647.i, double %314, i32 12
  %temp.vect649.i = insertelement <16 x double> %temp.vect648.i, double %315, i32 13
  %temp.vect650.i = insertelement <16 x double> %temp.vect649.i, double %316, i32 14
  %temp.vect651.i = insertelement <16 x double> %temp.vect650.i, double %317, i32 15
  %318 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %319 = load i64* %318, align 8
  %320 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %321 = load i64* %320, align 8
  %322 = add i64 %319, %321
  %extract619.i = add i64 %322, 1548288
  %323 = getelementptr inbounds double addrspace(1)* %4, i64 %extract619.i
  %ptrTypeCast635.i = bitcast double addrspace(1)* %323 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect651.i, <16 x double> addrspace(1)* %ptrTypeCast635.i, align 8
  %324 = fmul <16 x double> %temp.vect97.i, <double 3.700000e-01, double 3.700000e-01, double 3.700000e-01, double 3.700000e-01, double 3.700000e-01, double 3.700000e-01, double 3.700000e-01, double 3.700000e-01, double 3.700000e-01, double 3.700000e-01, double 3.700000e-01, double 3.700000e-01, double 3.700000e-01, double 3.700000e-01, double 3.700000e-01, double 3.700000e-01>
  %325 = fsub <16 x double> <double 0x403FEF61CF27F0E0, double 0x403FEF61CF27F0E0, double 0x403FEF61CF27F0E0, double 0x403FEF61CF27F0E0, double 0x403FEF61CF27F0E0, double 0x403FEF61CF27F0E0, double 0x403FEF61CF27F0E0, double 0x403FEF61CF27F0E0, double 0x403FEF61CF27F0E0, double 0x403FEF61CF27F0E0, double 0x403FEF61CF27F0E0, double 0x403FEF61CF27F0E0, double 0x403FEF61CF27F0E0, double 0x403FEF61CF27F0E0, double 0x403FEF61CF27F0E0, double 0x403FEF61CF27F0E0>, %324
  %extract652.i = extractelement <16 x double> %325, i32 0
  %extract653.i = extractelement <16 x double> %325, i32 1
  %extract654.i = extractelement <16 x double> %325, i32 2
  %extract655.i = extractelement <16 x double> %325, i32 3
  %extract656.i = extractelement <16 x double> %325, i32 4
  %extract657.i = extractelement <16 x double> %325, i32 5
  %extract658.i = extractelement <16 x double> %325, i32 6
  %extract659.i = extractelement <16 x double> %325, i32 7
  %extract660.i = extractelement <16 x double> %325, i32 8
  %extract661.i = extractelement <16 x double> %325, i32 9
  %extract662.i = extractelement <16 x double> %325, i32 10
  %extract663.i = extractelement <16 x double> %325, i32 11
  %extract664.i = extractelement <16 x double> %325, i32 12
  %extract665.i = extractelement <16 x double> %325, i32 13
  %extract666.i = extractelement <16 x double> %325, i32 14
  %extract667.i = extractelement <16 x double> %325, i32 15
  %326 = call double @_Z3expd(double %extract652.i) nounwind
  %327 = call double @_Z3expd(double %extract653.i) nounwind
  %328 = call double @_Z3expd(double %extract654.i) nounwind
  %329 = call double @_Z3expd(double %extract655.i) nounwind
  %330 = call double @_Z3expd(double %extract656.i) nounwind
  %331 = call double @_Z3expd(double %extract657.i) nounwind
  %332 = call double @_Z3expd(double %extract658.i) nounwind
  %333 = call double @_Z3expd(double %extract659.i) nounwind
  %334 = call double @_Z3expd(double %extract660.i) nounwind
  %335 = call double @_Z3expd(double %extract661.i) nounwind
  %336 = call double @_Z3expd(double %extract662.i) nounwind
  %337 = call double @_Z3expd(double %extract663.i) nounwind
  %338 = call double @_Z3expd(double %extract664.i) nounwind
  %339 = call double @_Z3expd(double %extract665.i) nounwind
  %340 = call double @_Z3expd(double %extract666.i) nounwind
  %341 = call double @_Z3expd(double %extract667.i) nounwind
  %temp.vect687.i = insertelement <16 x double> undef, double %326, i32 0
  %temp.vect688.i = insertelement <16 x double> %temp.vect687.i, double %327, i32 1
  %temp.vect689.i = insertelement <16 x double> %temp.vect688.i, double %328, i32 2
  %temp.vect690.i = insertelement <16 x double> %temp.vect689.i, double %329, i32 3
  %temp.vect691.i = insertelement <16 x double> %temp.vect690.i, double %330, i32 4
  %temp.vect692.i = insertelement <16 x double> %temp.vect691.i, double %331, i32 5
  %temp.vect693.i = insertelement <16 x double> %temp.vect692.i, double %332, i32 6
  %temp.vect694.i = insertelement <16 x double> %temp.vect693.i, double %333, i32 7
  %temp.vect695.i = insertelement <16 x double> %temp.vect694.i, double %334, i32 8
  %temp.vect696.i = insertelement <16 x double> %temp.vect695.i, double %335, i32 9
  %temp.vect697.i = insertelement <16 x double> %temp.vect696.i, double %336, i32 10
  %temp.vect698.i = insertelement <16 x double> %temp.vect697.i, double %337, i32 11
  %temp.vect699.i = insertelement <16 x double> %temp.vect698.i, double %338, i32 12
  %temp.vect700.i = insertelement <16 x double> %temp.vect699.i, double %339, i32 13
  %temp.vect701.i = insertelement <16 x double> %temp.vect700.i, double %340, i32 14
  %temp.vect702.i = insertelement <16 x double> %temp.vect701.i, double %341, i32 15
  %342 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %343 = load i64* %342, align 8
  %344 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %345 = load i64* %344, align 8
  %346 = add i64 %343, %345
  %extract670.i = add i64 %346, 1658880
  %347 = getelementptr inbounds double addrspace(1)* %4, i64 %extract670.i
  %ptrTypeCast686.i = bitcast double addrspace(1)* %347 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect702.i, <16 x double> addrspace(1)* %ptrTypeCast686.i, align 8
  %348 = fmul <16 x double> %41, <double 0x40751A88BDA9435B, double 0x40751A88BDA9435B, double 0x40751A88BDA9435B, double 0x40751A88BDA9435B, double 0x40751A88BDA9435B, double 0x40751A88BDA9435B, double 0x40751A88BDA9435B, double 0x40751A88BDA9435B, double 0x40751A88BDA9435B, double 0x40751A88BDA9435B, double 0x40751A88BDA9435B, double 0x40751A88BDA9435B, double 0x40751A88BDA9435B, double 0x40751A88BDA9435B, double 0x40751A88BDA9435B, double 0x40751A88BDA9435B>
  %349 = fsub <16 x double> <double 0x403D028169F7EB5F, double 0x403D028169F7EB5F, double 0x403D028169F7EB5F, double 0x403D028169F7EB5F, double 0x403D028169F7EB5F, double 0x403D028169F7EB5F, double 0x403D028169F7EB5F, double 0x403D028169F7EB5F, double 0x403D028169F7EB5F, double 0x403D028169F7EB5F, double 0x403D028169F7EB5F, double 0x403D028169F7EB5F, double 0x403D028169F7EB5F, double 0x403D028169F7EB5F, double 0x403D028169F7EB5F, double 0x403D028169F7EB5F>, %348
  %extract703.i = extractelement <16 x double> %349, i32 0
  %extract704.i = extractelement <16 x double> %349, i32 1
  %extract705.i = extractelement <16 x double> %349, i32 2
  %extract706.i = extractelement <16 x double> %349, i32 3
  %extract707.i = extractelement <16 x double> %349, i32 4
  %extract708.i = extractelement <16 x double> %349, i32 5
  %extract709.i = extractelement <16 x double> %349, i32 6
  %extract710.i = extractelement <16 x double> %349, i32 7
  %extract711.i = extractelement <16 x double> %349, i32 8
  %extract712.i = extractelement <16 x double> %349, i32 9
  %extract713.i = extractelement <16 x double> %349, i32 10
  %extract714.i = extractelement <16 x double> %349, i32 11
  %extract715.i = extractelement <16 x double> %349, i32 12
  %extract716.i = extractelement <16 x double> %349, i32 13
  %extract717.i = extractelement <16 x double> %349, i32 14
  %extract718.i = extractelement <16 x double> %349, i32 15
  %350 = call double @_Z3expd(double %extract703.i) nounwind
  %351 = call double @_Z3expd(double %extract704.i) nounwind
  %352 = call double @_Z3expd(double %extract705.i) nounwind
  %353 = call double @_Z3expd(double %extract706.i) nounwind
  %354 = call double @_Z3expd(double %extract707.i) nounwind
  %355 = call double @_Z3expd(double %extract708.i) nounwind
  %356 = call double @_Z3expd(double %extract709.i) nounwind
  %357 = call double @_Z3expd(double %extract710.i) nounwind
  %358 = call double @_Z3expd(double %extract711.i) nounwind
  %359 = call double @_Z3expd(double %extract712.i) nounwind
  %360 = call double @_Z3expd(double %extract713.i) nounwind
  %361 = call double @_Z3expd(double %extract714.i) nounwind
  %362 = call double @_Z3expd(double %extract715.i) nounwind
  %363 = call double @_Z3expd(double %extract716.i) nounwind
  %364 = call double @_Z3expd(double %extract717.i) nounwind
  %365 = call double @_Z3expd(double %extract718.i) nounwind
  %temp.vect738.i = insertelement <16 x double> undef, double %350, i32 0
  %temp.vect739.i = insertelement <16 x double> %temp.vect738.i, double %351, i32 1
  %temp.vect740.i = insertelement <16 x double> %temp.vect739.i, double %352, i32 2
  %temp.vect741.i = insertelement <16 x double> %temp.vect740.i, double %353, i32 3
  %temp.vect742.i = insertelement <16 x double> %temp.vect741.i, double %354, i32 4
  %temp.vect743.i = insertelement <16 x double> %temp.vect742.i, double %355, i32 5
  %temp.vect744.i = insertelement <16 x double> %temp.vect743.i, double %356, i32 6
  %temp.vect745.i = insertelement <16 x double> %temp.vect744.i, double %357, i32 7
  %temp.vect746.i = insertelement <16 x double> %temp.vect745.i, double %358, i32 8
  %temp.vect747.i = insertelement <16 x double> %temp.vect746.i, double %359, i32 9
  %temp.vect748.i = insertelement <16 x double> %temp.vect747.i, double %360, i32 10
  %temp.vect749.i = insertelement <16 x double> %temp.vect748.i, double %361, i32 11
  %temp.vect750.i = insertelement <16 x double> %temp.vect749.i, double %362, i32 12
  %temp.vect751.i = insertelement <16 x double> %temp.vect750.i, double %363, i32 13
  %temp.vect752.i = insertelement <16 x double> %temp.vect751.i, double %364, i32 14
  %temp.vect753.i = insertelement <16 x double> %temp.vect752.i, double %365, i32 15
  %366 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %367 = load i64* %366, align 8
  %368 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %369 = load i64* %368, align 8
  %370 = add i64 %367, %369
  %extract721.i = add i64 %370, 1769472
  %371 = getelementptr inbounds double addrspace(1)* %4, i64 %extract721.i
  %ptrTypeCast737.i = bitcast double addrspace(1)* %371 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect753.i, <16 x double> addrspace(1)* %ptrTypeCast737.i, align 8
  %372 = fmul <16 x double> %41, <double 0x4079CA33E24FEBD1, double 0x4079CA33E24FEBD1, double 0x4079CA33E24FEBD1, double 0x4079CA33E24FEBD1, double 0x4079CA33E24FEBD1, double 0x4079CA33E24FEBD1, double 0x4079CA33E24FEBD1, double 0x4079CA33E24FEBD1, double 0x4079CA33E24FEBD1, double 0x4079CA33E24FEBD1, double 0x4079CA33E24FEBD1, double 0x4079CA33E24FEBD1, double 0x4079CA33E24FEBD1, double 0x4079CA33E24FEBD1, double 0x4079CA33E24FEBD1, double 0x4079CA33E24FEBD1>
  %373 = fsub <16 x double> <double 0x403E70BF9D39614B, double 0x403E70BF9D39614B, double 0x403E70BF9D39614B, double 0x403E70BF9D39614B, double 0x403E70BF9D39614B, double 0x403E70BF9D39614B, double 0x403E70BF9D39614B, double 0x403E70BF9D39614B, double 0x403E70BF9D39614B, double 0x403E70BF9D39614B, double 0x403E70BF9D39614B, double 0x403E70BF9D39614B, double 0x403E70BF9D39614B, double 0x403E70BF9D39614B, double 0x403E70BF9D39614B, double 0x403E70BF9D39614B>, %372
  %extract754.i = extractelement <16 x double> %373, i32 0
  %extract755.i = extractelement <16 x double> %373, i32 1
  %extract756.i = extractelement <16 x double> %373, i32 2
  %extract757.i = extractelement <16 x double> %373, i32 3
  %extract758.i = extractelement <16 x double> %373, i32 4
  %extract759.i = extractelement <16 x double> %373, i32 5
  %extract760.i = extractelement <16 x double> %373, i32 6
  %extract761.i = extractelement <16 x double> %373, i32 7
  %extract762.i = extractelement <16 x double> %373, i32 8
  %extract763.i = extractelement <16 x double> %373, i32 9
  %extract764.i = extractelement <16 x double> %373, i32 10
  %extract765.i = extractelement <16 x double> %373, i32 11
  %extract766.i = extractelement <16 x double> %373, i32 12
  %extract767.i = extractelement <16 x double> %373, i32 13
  %extract768.i = extractelement <16 x double> %373, i32 14
  %extract769.i = extractelement <16 x double> %373, i32 15
  %374 = call double @_Z3expd(double %extract754.i) nounwind
  %375 = call double @_Z3expd(double %extract755.i) nounwind
  %376 = call double @_Z3expd(double %extract756.i) nounwind
  %377 = call double @_Z3expd(double %extract757.i) nounwind
  %378 = call double @_Z3expd(double %extract758.i) nounwind
  %379 = call double @_Z3expd(double %extract759.i) nounwind
  %380 = call double @_Z3expd(double %extract760.i) nounwind
  %381 = call double @_Z3expd(double %extract761.i) nounwind
  %382 = call double @_Z3expd(double %extract762.i) nounwind
  %383 = call double @_Z3expd(double %extract763.i) nounwind
  %384 = call double @_Z3expd(double %extract764.i) nounwind
  %385 = call double @_Z3expd(double %extract765.i) nounwind
  %386 = call double @_Z3expd(double %extract766.i) nounwind
  %387 = call double @_Z3expd(double %extract767.i) nounwind
  %388 = call double @_Z3expd(double %extract768.i) nounwind
  %389 = call double @_Z3expd(double %extract769.i) nounwind
  %temp.vect789.i = insertelement <16 x double> undef, double %374, i32 0
  %temp.vect790.i = insertelement <16 x double> %temp.vect789.i, double %375, i32 1
  %temp.vect791.i = insertelement <16 x double> %temp.vect790.i, double %376, i32 2
  %temp.vect792.i = insertelement <16 x double> %temp.vect791.i, double %377, i32 3
  %temp.vect793.i = insertelement <16 x double> %temp.vect792.i, double %378, i32 4
  %temp.vect794.i = insertelement <16 x double> %temp.vect793.i, double %379, i32 5
  %temp.vect795.i = insertelement <16 x double> %temp.vect794.i, double %380, i32 6
  %temp.vect796.i = insertelement <16 x double> %temp.vect795.i, double %381, i32 7
  %temp.vect797.i = insertelement <16 x double> %temp.vect796.i, double %382, i32 8
  %temp.vect798.i = insertelement <16 x double> %temp.vect797.i, double %383, i32 9
  %temp.vect799.i = insertelement <16 x double> %temp.vect798.i, double %384, i32 10
  %temp.vect800.i = insertelement <16 x double> %temp.vect799.i, double %385, i32 11
  %temp.vect801.i = insertelement <16 x double> %temp.vect800.i, double %386, i32 12
  %temp.vect802.i = insertelement <16 x double> %temp.vect801.i, double %387, i32 13
  %temp.vect803.i = insertelement <16 x double> %temp.vect802.i, double %388, i32 14
  %temp.vect804.i = insertelement <16 x double> %temp.vect803.i, double %389, i32 15
  %390 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %391 = load i64* %390, align 8
  %392 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %393 = load i64* %392, align 8
  %394 = add i64 %391, %393
  %extract772.i = add i64 %394, 1880064
  %395 = getelementptr inbounds double addrspace(1)* %4, i64 %extract772.i
  %ptrTypeCast788.i = bitcast double addrspace(1)* %395 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect804.i, <16 x double> addrspace(1)* %ptrTypeCast788.i, align 8
  %396 = fmul <16 x double> %41, <double 1.509650e+02, double 1.509650e+02, double 1.509650e+02, double 1.509650e+02, double 1.509650e+02, double 1.509650e+02, double 1.509650e+02, double 1.509650e+02, double 1.509650e+02, double 1.509650e+02, double 1.509650e+02, double 1.509650e+02, double 1.509650e+02, double 1.509650e+02, double 1.509650e+02, double 1.509650e+02>
  %397 = fsub <16 x double> <double 0x403FE410B7DE283F, double 0x403FE410B7DE283F, double 0x403FE410B7DE283F, double 0x403FE410B7DE283F, double 0x403FE410B7DE283F, double 0x403FE410B7DE283F, double 0x403FE410B7DE283F, double 0x403FE410B7DE283F, double 0x403FE410B7DE283F, double 0x403FE410B7DE283F, double 0x403FE410B7DE283F, double 0x403FE410B7DE283F, double 0x403FE410B7DE283F, double 0x403FE410B7DE283F, double 0x403FE410B7DE283F, double 0x403FE410B7DE283F>, %396
  %extract805.i = extractelement <16 x double> %397, i32 0
  %extract806.i = extractelement <16 x double> %397, i32 1
  %extract807.i = extractelement <16 x double> %397, i32 2
  %extract808.i = extractelement <16 x double> %397, i32 3
  %extract809.i = extractelement <16 x double> %397, i32 4
  %extract810.i = extractelement <16 x double> %397, i32 5
  %extract811.i = extractelement <16 x double> %397, i32 6
  %extract812.i = extractelement <16 x double> %397, i32 7
  %extract813.i = extractelement <16 x double> %397, i32 8
  %extract814.i = extractelement <16 x double> %397, i32 9
  %extract815.i = extractelement <16 x double> %397, i32 10
  %extract816.i = extractelement <16 x double> %397, i32 11
  %extract817.i = extractelement <16 x double> %397, i32 12
  %extract818.i = extractelement <16 x double> %397, i32 13
  %extract819.i = extractelement <16 x double> %397, i32 14
  %extract820.i = extractelement <16 x double> %397, i32 15
  %398 = call double @_Z3expd(double %extract805.i) nounwind
  %399 = call double @_Z3expd(double %extract806.i) nounwind
  %400 = call double @_Z3expd(double %extract807.i) nounwind
  %401 = call double @_Z3expd(double %extract808.i) nounwind
  %402 = call double @_Z3expd(double %extract809.i) nounwind
  %403 = call double @_Z3expd(double %extract810.i) nounwind
  %404 = call double @_Z3expd(double %extract811.i) nounwind
  %405 = call double @_Z3expd(double %extract812.i) nounwind
  %406 = call double @_Z3expd(double %extract813.i) nounwind
  %407 = call double @_Z3expd(double %extract814.i) nounwind
  %408 = call double @_Z3expd(double %extract815.i) nounwind
  %409 = call double @_Z3expd(double %extract816.i) nounwind
  %410 = call double @_Z3expd(double %extract817.i) nounwind
  %411 = call double @_Z3expd(double %extract818.i) nounwind
  %412 = call double @_Z3expd(double %extract819.i) nounwind
  %413 = call double @_Z3expd(double %extract820.i) nounwind
  %temp.vect840.i = insertelement <16 x double> undef, double %398, i32 0
  %temp.vect841.i = insertelement <16 x double> %temp.vect840.i, double %399, i32 1
  %temp.vect842.i = insertelement <16 x double> %temp.vect841.i, double %400, i32 2
  %temp.vect843.i = insertelement <16 x double> %temp.vect842.i, double %401, i32 3
  %temp.vect844.i = insertelement <16 x double> %temp.vect843.i, double %402, i32 4
  %temp.vect845.i = insertelement <16 x double> %temp.vect844.i, double %403, i32 5
  %temp.vect846.i = insertelement <16 x double> %temp.vect845.i, double %404, i32 6
  %temp.vect847.i = insertelement <16 x double> %temp.vect846.i, double %405, i32 7
  %temp.vect848.i = insertelement <16 x double> %temp.vect847.i, double %406, i32 8
  %temp.vect849.i = insertelement <16 x double> %temp.vect848.i, double %407, i32 9
  %temp.vect850.i = insertelement <16 x double> %temp.vect849.i, double %408, i32 10
  %temp.vect851.i = insertelement <16 x double> %temp.vect850.i, double %409, i32 11
  %temp.vect852.i = insertelement <16 x double> %temp.vect851.i, double %410, i32 12
  %temp.vect853.i = insertelement <16 x double> %temp.vect852.i, double %411, i32 13
  %temp.vect854.i = insertelement <16 x double> %temp.vect853.i, double %412, i32 14
  %temp.vect855.i = insertelement <16 x double> %temp.vect854.i, double %413, i32 15
  %414 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %415 = load i64* %414, align 8
  %416 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %417 = load i64* %416, align 8
  %418 = add i64 %415, %417
  %extract823.i = add i64 %418, 1990656
  %419 = getelementptr inbounds double addrspace(1)* %4, i64 %extract823.i
  %ptrTypeCast839.i = bitcast double addrspace(1)* %419 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect855.i, <16 x double> addrspace(1)* %ptrTypeCast839.i, align 8
  %420 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %421 = load i64* %420, align 8
  %422 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %423 = load i64* %422, align 8
  %424 = add i64 %421, %423
  %extract858.i = add i64 %424, 2101248
  %425 = getelementptr inbounds double addrspace(1)* %4, i64 %extract858.i
  %ptrTypeCast874.i = bitcast double addrspace(1)* %425 to <16 x double> addrspace(1)*
  store <16 x double> <double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast874.i, align 8
  %426 = fmul <16 x double> %41, <double 0x406F737778DD6170, double 0x406F737778DD6170, double 0x406F737778DD6170, double 0x406F737778DD6170, double 0x406F737778DD6170, double 0x406F737778DD6170, double 0x406F737778DD6170, double 0x406F737778DD6170, double 0x406F737778DD6170, double 0x406F737778DD6170, double 0x406F737778DD6170, double 0x406F737778DD6170, double 0x406F737778DD6170, double 0x406F737778DD6170, double 0x406F737778DD6170, double 0x406F737778DD6170>
  %427 = fadd <16 x double> %426, <double 0x403F77E3DBDD0B08, double 0x403F77E3DBDD0B08, double 0x403F77E3DBDD0B08, double 0x403F77E3DBDD0B08, double 0x403F77E3DBDD0B08, double 0x403F77E3DBDD0B08, double 0x403F77E3DBDD0B08, double 0x403F77E3DBDD0B08, double 0x403F77E3DBDD0B08, double 0x403F77E3DBDD0B08, double 0x403F77E3DBDD0B08, double 0x403F77E3DBDD0B08, double 0x403F77E3DBDD0B08, double 0x403F77E3DBDD0B08, double 0x403F77E3DBDD0B08, double 0x403F77E3DBDD0B08>
  %extract875.i = extractelement <16 x double> %427, i32 0
  %extract876.i = extractelement <16 x double> %427, i32 1
  %extract877.i = extractelement <16 x double> %427, i32 2
  %extract878.i = extractelement <16 x double> %427, i32 3
  %extract879.i = extractelement <16 x double> %427, i32 4
  %extract880.i = extractelement <16 x double> %427, i32 5
  %extract881.i = extractelement <16 x double> %427, i32 6
  %extract882.i = extractelement <16 x double> %427, i32 7
  %extract883.i = extractelement <16 x double> %427, i32 8
  %extract884.i = extractelement <16 x double> %427, i32 9
  %extract885.i = extractelement <16 x double> %427, i32 10
  %extract886.i = extractelement <16 x double> %427, i32 11
  %extract887.i = extractelement <16 x double> %427, i32 12
  %extract888.i = extractelement <16 x double> %427, i32 13
  %extract889.i = extractelement <16 x double> %427, i32 14
  %extract890.i = extractelement <16 x double> %427, i32 15
  %428 = call double @_Z3expd(double %extract875.i) nounwind
  %429 = call double @_Z3expd(double %extract876.i) nounwind
  %430 = call double @_Z3expd(double %extract877.i) nounwind
  %431 = call double @_Z3expd(double %extract878.i) nounwind
  %432 = call double @_Z3expd(double %extract879.i) nounwind
  %433 = call double @_Z3expd(double %extract880.i) nounwind
  %434 = call double @_Z3expd(double %extract881.i) nounwind
  %435 = call double @_Z3expd(double %extract882.i) nounwind
  %436 = call double @_Z3expd(double %extract883.i) nounwind
  %437 = call double @_Z3expd(double %extract884.i) nounwind
  %438 = call double @_Z3expd(double %extract885.i) nounwind
  %439 = call double @_Z3expd(double %extract886.i) nounwind
  %440 = call double @_Z3expd(double %extract887.i) nounwind
  %441 = call double @_Z3expd(double %extract888.i) nounwind
  %442 = call double @_Z3expd(double %extract889.i) nounwind
  %443 = call double @_Z3expd(double %extract890.i) nounwind
  %temp.vect910.i = insertelement <16 x double> undef, double %428, i32 0
  %temp.vect911.i = insertelement <16 x double> %temp.vect910.i, double %429, i32 1
  %temp.vect912.i = insertelement <16 x double> %temp.vect911.i, double %430, i32 2
  %temp.vect913.i = insertelement <16 x double> %temp.vect912.i, double %431, i32 3
  %temp.vect914.i = insertelement <16 x double> %temp.vect913.i, double %432, i32 4
  %temp.vect915.i = insertelement <16 x double> %temp.vect914.i, double %433, i32 5
  %temp.vect916.i = insertelement <16 x double> %temp.vect915.i, double %434, i32 6
  %temp.vect917.i = insertelement <16 x double> %temp.vect916.i, double %435, i32 7
  %temp.vect918.i = insertelement <16 x double> %temp.vect917.i, double %436, i32 8
  %temp.vect919.i = insertelement <16 x double> %temp.vect918.i, double %437, i32 9
  %temp.vect920.i = insertelement <16 x double> %temp.vect919.i, double %438, i32 10
  %temp.vect921.i = insertelement <16 x double> %temp.vect920.i, double %439, i32 11
  %temp.vect922.i = insertelement <16 x double> %temp.vect921.i, double %440, i32 12
  %temp.vect923.i = insertelement <16 x double> %temp.vect922.i, double %441, i32 13
  %temp.vect924.i = insertelement <16 x double> %temp.vect923.i, double %442, i32 14
  %temp.vect925.i = insertelement <16 x double> %temp.vect924.i, double %443, i32 15
  %444 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %445 = load i64* %444, align 8
  %446 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %447 = load i64* %446, align 8
  %448 = add i64 %445, %447
  %extract893.i = add i64 %448, 2211840
  %449 = getelementptr inbounds double addrspace(1)* %4, i64 %extract893.i
  %ptrTypeCast909.i = bitcast double addrspace(1)* %449 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect925.i, <16 x double> addrspace(1)* %ptrTypeCast909.i, align 8
  %450 = fmul <16 x double> %41, <double 0x4089A1F202107B78, double 0x4089A1F202107B78, double 0x4089A1F202107B78, double 0x4089A1F202107B78, double 0x4089A1F202107B78, double 0x4089A1F202107B78, double 0x4089A1F202107B78, double 0x4089A1F202107B78, double 0x4089A1F202107B78, double 0x4089A1F202107B78, double 0x4089A1F202107B78, double 0x4089A1F202107B78, double 0x4089A1F202107B78, double 0x4089A1F202107B78, double 0x4089A1F202107B78, double 0x4089A1F202107B78>
  %451 = fadd <16 x double> %450, <double 0x4039973EB03EF78D, double 0x4039973EB03EF78D, double 0x4039973EB03EF78D, double 0x4039973EB03EF78D, double 0x4039973EB03EF78D, double 0x4039973EB03EF78D, double 0x4039973EB03EF78D, double 0x4039973EB03EF78D, double 0x4039973EB03EF78D, double 0x4039973EB03EF78D, double 0x4039973EB03EF78D, double 0x4039973EB03EF78D, double 0x4039973EB03EF78D, double 0x4039973EB03EF78D, double 0x4039973EB03EF78D, double 0x4039973EB03EF78D>
  %extract926.i = extractelement <16 x double> %451, i32 0
  %extract927.i = extractelement <16 x double> %451, i32 1
  %extract928.i = extractelement <16 x double> %451, i32 2
  %extract929.i = extractelement <16 x double> %451, i32 3
  %extract930.i = extractelement <16 x double> %451, i32 4
  %extract931.i = extractelement <16 x double> %451, i32 5
  %extract932.i = extractelement <16 x double> %451, i32 6
  %extract933.i = extractelement <16 x double> %451, i32 7
  %extract934.i = extractelement <16 x double> %451, i32 8
  %extract935.i = extractelement <16 x double> %451, i32 9
  %extract936.i = extractelement <16 x double> %451, i32 10
  %extract937.i = extractelement <16 x double> %451, i32 11
  %extract938.i = extractelement <16 x double> %451, i32 12
  %extract939.i = extractelement <16 x double> %451, i32 13
  %extract940.i = extractelement <16 x double> %451, i32 14
  %extract941.i = extractelement <16 x double> %451, i32 15
  %452 = call double @_Z3expd(double %extract926.i) nounwind
  %453 = call double @_Z3expd(double %extract927.i) nounwind
  %454 = call double @_Z3expd(double %extract928.i) nounwind
  %455 = call double @_Z3expd(double %extract929.i) nounwind
  %456 = call double @_Z3expd(double %extract930.i) nounwind
  %457 = call double @_Z3expd(double %extract931.i) nounwind
  %458 = call double @_Z3expd(double %extract932.i) nounwind
  %459 = call double @_Z3expd(double %extract933.i) nounwind
  %460 = call double @_Z3expd(double %extract934.i) nounwind
  %461 = call double @_Z3expd(double %extract935.i) nounwind
  %462 = call double @_Z3expd(double %extract936.i) nounwind
  %463 = call double @_Z3expd(double %extract937.i) nounwind
  %464 = call double @_Z3expd(double %extract938.i) nounwind
  %465 = call double @_Z3expd(double %extract939.i) nounwind
  %466 = call double @_Z3expd(double %extract940.i) nounwind
  %467 = call double @_Z3expd(double %extract941.i) nounwind
  %temp.vect961.i = insertelement <16 x double> undef, double %452, i32 0
  %temp.vect962.i = insertelement <16 x double> %temp.vect961.i, double %453, i32 1
  %temp.vect963.i = insertelement <16 x double> %temp.vect962.i, double %454, i32 2
  %temp.vect964.i = insertelement <16 x double> %temp.vect963.i, double %455, i32 3
  %temp.vect965.i = insertelement <16 x double> %temp.vect964.i, double %456, i32 4
  %temp.vect966.i = insertelement <16 x double> %temp.vect965.i, double %457, i32 5
  %temp.vect967.i = insertelement <16 x double> %temp.vect966.i, double %458, i32 6
  %temp.vect968.i = insertelement <16 x double> %temp.vect967.i, double %459, i32 7
  %temp.vect969.i = insertelement <16 x double> %temp.vect968.i, double %460, i32 8
  %temp.vect970.i = insertelement <16 x double> %temp.vect969.i, double %461, i32 9
  %temp.vect971.i = insertelement <16 x double> %temp.vect970.i, double %462, i32 10
  %temp.vect972.i = insertelement <16 x double> %temp.vect971.i, double %463, i32 11
  %temp.vect973.i = insertelement <16 x double> %temp.vect972.i, double %464, i32 12
  %temp.vect974.i = insertelement <16 x double> %temp.vect973.i, double %465, i32 13
  %temp.vect975.i = insertelement <16 x double> %temp.vect974.i, double %466, i32 14
  %temp.vect976.i = insertelement <16 x double> %temp.vect975.i, double %467, i32 15
  %468 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %469 = load i64* %468, align 8
  %470 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %471 = load i64* %470, align 8
  %472 = add i64 %469, %471
  %extract944.i = add i64 %472, 2322432
  %473 = getelementptr inbounds double addrspace(1)* %4, i64 %extract944.i
  %ptrTypeCast960.i = bitcast double addrspace(1)* %473 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect976.i, <16 x double> addrspace(1)* %ptrTypeCast960.i, align 8
  %474 = fmul <16 x double> %41, <double 0x40B796999A415F46, double 0x40B796999A415F46, double 0x40B796999A415F46, double 0x40B796999A415F46, double 0x40B796999A415F46, double 0x40B796999A415F46, double 0x40B796999A415F46, double 0x40B796999A415F46, double 0x40B796999A415F46, double 0x40B796999A415F46, double 0x40B796999A415F46, double 0x40B796999A415F46, double 0x40B796999A415F46, double 0x40B796999A415F46, double 0x40B796999A415F46, double 0x40B796999A415F46>
  %475 = fsub <16 x double> <double 0x4040D5EC5D8BCC51, double 0x4040D5EC5D8BCC51, double 0x4040D5EC5D8BCC51, double 0x4040D5EC5D8BCC51, double 0x4040D5EC5D8BCC51, double 0x4040D5EC5D8BCC51, double 0x4040D5EC5D8BCC51, double 0x4040D5EC5D8BCC51, double 0x4040D5EC5D8BCC51, double 0x4040D5EC5D8BCC51, double 0x4040D5EC5D8BCC51, double 0x4040D5EC5D8BCC51, double 0x4040D5EC5D8BCC51, double 0x4040D5EC5D8BCC51, double 0x4040D5EC5D8BCC51, double 0x4040D5EC5D8BCC51>, %474
  %extract977.i = extractelement <16 x double> %475, i32 0
  %extract978.i = extractelement <16 x double> %475, i32 1
  %extract979.i = extractelement <16 x double> %475, i32 2
  %extract980.i = extractelement <16 x double> %475, i32 3
  %extract981.i = extractelement <16 x double> %475, i32 4
  %extract982.i = extractelement <16 x double> %475, i32 5
  %extract983.i = extractelement <16 x double> %475, i32 6
  %extract984.i = extractelement <16 x double> %475, i32 7
  %extract985.i = extractelement <16 x double> %475, i32 8
  %extract986.i = extractelement <16 x double> %475, i32 9
  %extract987.i = extractelement <16 x double> %475, i32 10
  %extract988.i = extractelement <16 x double> %475, i32 11
  %extract989.i = extractelement <16 x double> %475, i32 12
  %extract990.i = extractelement <16 x double> %475, i32 13
  %extract991.i = extractelement <16 x double> %475, i32 14
  %extract992.i = extractelement <16 x double> %475, i32 15
  %476 = call double @_Z3expd(double %extract977.i) nounwind
  %477 = call double @_Z3expd(double %extract978.i) nounwind
  %478 = call double @_Z3expd(double %extract979.i) nounwind
  %479 = call double @_Z3expd(double %extract980.i) nounwind
  %480 = call double @_Z3expd(double %extract981.i) nounwind
  %481 = call double @_Z3expd(double %extract982.i) nounwind
  %482 = call double @_Z3expd(double %extract983.i) nounwind
  %483 = call double @_Z3expd(double %extract984.i) nounwind
  %484 = call double @_Z3expd(double %extract985.i) nounwind
  %485 = call double @_Z3expd(double %extract986.i) nounwind
  %486 = call double @_Z3expd(double %extract987.i) nounwind
  %487 = call double @_Z3expd(double %extract988.i) nounwind
  %488 = call double @_Z3expd(double %extract989.i) nounwind
  %489 = call double @_Z3expd(double %extract990.i) nounwind
  %490 = call double @_Z3expd(double %extract991.i) nounwind
  %491 = call double @_Z3expd(double %extract992.i) nounwind
  %temp.vect1012.i = insertelement <16 x double> undef, double %476, i32 0
  %temp.vect1013.i = insertelement <16 x double> %temp.vect1012.i, double %477, i32 1
  %temp.vect1014.i = insertelement <16 x double> %temp.vect1013.i, double %478, i32 2
  %temp.vect1015.i = insertelement <16 x double> %temp.vect1014.i, double %479, i32 3
  %temp.vect1016.i = insertelement <16 x double> %temp.vect1015.i, double %480, i32 4
  %temp.vect1017.i = insertelement <16 x double> %temp.vect1016.i, double %481, i32 5
  %temp.vect1018.i = insertelement <16 x double> %temp.vect1017.i, double %482, i32 6
  %temp.vect1019.i = insertelement <16 x double> %temp.vect1018.i, double %483, i32 7
  %temp.vect1020.i = insertelement <16 x double> %temp.vect1019.i, double %484, i32 8
  %temp.vect1021.i = insertelement <16 x double> %temp.vect1020.i, double %485, i32 9
  %temp.vect1022.i = insertelement <16 x double> %temp.vect1021.i, double %486, i32 10
  %temp.vect1023.i = insertelement <16 x double> %temp.vect1022.i, double %487, i32 11
  %temp.vect1024.i = insertelement <16 x double> %temp.vect1023.i, double %488, i32 12
  %temp.vect1025.i = insertelement <16 x double> %temp.vect1024.i, double %489, i32 13
  %temp.vect1026.i = insertelement <16 x double> %temp.vect1025.i, double %490, i32 14
  %temp.vect1027.i = insertelement <16 x double> %temp.vect1026.i, double %491, i32 15
  %492 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %493 = load i64* %492, align 8
  %494 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %495 = load i64* %494, align 8
  %496 = add i64 %493, %495
  %extract995.i = add i64 %496, 2433024
  %497 = getelementptr inbounds double addrspace(1)* %4, i64 %extract995.i
  %ptrTypeCast1011.i = bitcast double addrspace(1)* %497 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect1027.i, <16 x double> addrspace(1)* %ptrTypeCast1011.i, align 8
  %498 = fmul <16 x double> %temp.vect97.i, <double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00, double 2.000000e+00>
  %499 = fadd <16 x double> %498, <double 0x40304F080303C07F, double 0x40304F080303C07F, double 0x40304F080303C07F, double 0x40304F080303C07F, double 0x40304F080303C07F, double 0x40304F080303C07F, double 0x40304F080303C07F, double 0x40304F080303C07F, double 0x40304F080303C07F, double 0x40304F080303C07F, double 0x40304F080303C07F, double 0x40304F080303C07F, double 0x40304F080303C07F, double 0x40304F080303C07F, double 0x40304F080303C07F, double 0x40304F080303C07F>
  %500 = fmul <16 x double> %41, <double 0x40A471740E1719F8, double 0x40A471740E1719F8, double 0x40A471740E1719F8, double 0x40A471740E1719F8, double 0x40A471740E1719F8, double 0x40A471740E1719F8, double 0x40A471740E1719F8, double 0x40A471740E1719F8, double 0x40A471740E1719F8, double 0x40A471740E1719F8, double 0x40A471740E1719F8, double 0x40A471740E1719F8, double 0x40A471740E1719F8, double 0x40A471740E1719F8, double 0x40A471740E1719F8, double 0x40A471740E1719F8>
  %501 = fsub <16 x double> %499, %500
  %extract1028.i = extractelement <16 x double> %501, i32 0
  %extract1029.i = extractelement <16 x double> %501, i32 1
  %extract1030.i = extractelement <16 x double> %501, i32 2
  %extract1031.i = extractelement <16 x double> %501, i32 3
  %extract1032.i = extractelement <16 x double> %501, i32 4
  %extract1033.i = extractelement <16 x double> %501, i32 5
  %extract1034.i = extractelement <16 x double> %501, i32 6
  %extract1035.i = extractelement <16 x double> %501, i32 7
  %extract1036.i = extractelement <16 x double> %501, i32 8
  %extract1037.i = extractelement <16 x double> %501, i32 9
  %extract1038.i = extractelement <16 x double> %501, i32 10
  %extract1039.i = extractelement <16 x double> %501, i32 11
  %extract1040.i = extractelement <16 x double> %501, i32 12
  %extract1041.i = extractelement <16 x double> %501, i32 13
  %extract1042.i = extractelement <16 x double> %501, i32 14
  %extract1043.i = extractelement <16 x double> %501, i32 15
  %502 = call double @_Z3expd(double %extract1028.i) nounwind
  %503 = call double @_Z3expd(double %extract1029.i) nounwind
  %504 = call double @_Z3expd(double %extract1030.i) nounwind
  %505 = call double @_Z3expd(double %extract1031.i) nounwind
  %506 = call double @_Z3expd(double %extract1032.i) nounwind
  %507 = call double @_Z3expd(double %extract1033.i) nounwind
  %508 = call double @_Z3expd(double %extract1034.i) nounwind
  %509 = call double @_Z3expd(double %extract1035.i) nounwind
  %510 = call double @_Z3expd(double %extract1036.i) nounwind
  %511 = call double @_Z3expd(double %extract1037.i) nounwind
  %512 = call double @_Z3expd(double %extract1038.i) nounwind
  %513 = call double @_Z3expd(double %extract1039.i) nounwind
  %514 = call double @_Z3expd(double %extract1040.i) nounwind
  %515 = call double @_Z3expd(double %extract1041.i) nounwind
  %516 = call double @_Z3expd(double %extract1042.i) nounwind
  %517 = call double @_Z3expd(double %extract1043.i) nounwind
  %temp.vect1063.i = insertelement <16 x double> undef, double %502, i32 0
  %temp.vect1064.i = insertelement <16 x double> %temp.vect1063.i, double %503, i32 1
  %temp.vect1065.i = insertelement <16 x double> %temp.vect1064.i, double %504, i32 2
  %temp.vect1066.i = insertelement <16 x double> %temp.vect1065.i, double %505, i32 3
  %temp.vect1067.i = insertelement <16 x double> %temp.vect1066.i, double %506, i32 4
  %temp.vect1068.i = insertelement <16 x double> %temp.vect1067.i, double %507, i32 5
  %temp.vect1069.i = insertelement <16 x double> %temp.vect1068.i, double %508, i32 6
  %temp.vect1070.i = insertelement <16 x double> %temp.vect1069.i, double %509, i32 7
  %temp.vect1071.i = insertelement <16 x double> %temp.vect1070.i, double %510, i32 8
  %temp.vect1072.i = insertelement <16 x double> %temp.vect1071.i, double %511, i32 9
  %temp.vect1073.i = insertelement <16 x double> %temp.vect1072.i, double %512, i32 10
  %temp.vect1074.i = insertelement <16 x double> %temp.vect1073.i, double %513, i32 11
  %temp.vect1075.i = insertelement <16 x double> %temp.vect1074.i, double %514, i32 12
  %temp.vect1076.i = insertelement <16 x double> %temp.vect1075.i, double %515, i32 13
  %temp.vect1077.i = insertelement <16 x double> %temp.vect1076.i, double %516, i32 14
  %temp.vect1078.i = insertelement <16 x double> %temp.vect1077.i, double %517, i32 15
  %518 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %519 = load i64* %518, align 8
  %520 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %521 = load i64* %520, align 8
  %522 = add i64 %519, %521
  %extract1046.i = add i64 %522, 2543616
  %523 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1046.i
  %ptrTypeCast1062.i = bitcast double addrspace(1)* %523 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect1078.i, <16 x double> addrspace(1)* %ptrTypeCast1062.i, align 8
  %524 = fmul <16 x double> %41, <double 1.811580e+03, double 1.811580e+03, double 1.811580e+03, double 1.811580e+03, double 1.811580e+03, double 1.811580e+03, double 1.811580e+03, double 1.811580e+03, double 1.811580e+03, double 1.811580e+03, double 1.811580e+03, double 1.811580e+03, double 1.811580e+03, double 1.811580e+03, double 1.811580e+03, double 1.811580e+03>
  %525 = fsub <16 x double> <double 0x403DEF00D0E057C4, double 0x403DEF00D0E057C4, double 0x403DEF00D0E057C4, double 0x403DEF00D0E057C4, double 0x403DEF00D0E057C4, double 0x403DEF00D0E057C4, double 0x403DEF00D0E057C4, double 0x403DEF00D0E057C4, double 0x403DEF00D0E057C4, double 0x403DEF00D0E057C4, double 0x403DEF00D0E057C4, double 0x403DEF00D0E057C4, double 0x403DEF00D0E057C4, double 0x403DEF00D0E057C4, double 0x403DEF00D0E057C4, double 0x403DEF00D0E057C4>, %524
  %extract1079.i = extractelement <16 x double> %525, i32 0
  %extract1080.i = extractelement <16 x double> %525, i32 1
  %extract1081.i = extractelement <16 x double> %525, i32 2
  %extract1082.i = extractelement <16 x double> %525, i32 3
  %extract1083.i = extractelement <16 x double> %525, i32 4
  %extract1084.i = extractelement <16 x double> %525, i32 5
  %extract1085.i = extractelement <16 x double> %525, i32 6
  %extract1086.i = extractelement <16 x double> %525, i32 7
  %extract1087.i = extractelement <16 x double> %525, i32 8
  %extract1088.i = extractelement <16 x double> %525, i32 9
  %extract1089.i = extractelement <16 x double> %525, i32 10
  %extract1090.i = extractelement <16 x double> %525, i32 11
  %extract1091.i = extractelement <16 x double> %525, i32 12
  %extract1092.i = extractelement <16 x double> %525, i32 13
  %extract1093.i = extractelement <16 x double> %525, i32 14
  %extract1094.i = extractelement <16 x double> %525, i32 15
  %526 = call double @_Z3expd(double %extract1079.i) nounwind
  %527 = call double @_Z3expd(double %extract1080.i) nounwind
  %528 = call double @_Z3expd(double %extract1081.i) nounwind
  %529 = call double @_Z3expd(double %extract1082.i) nounwind
  %530 = call double @_Z3expd(double %extract1083.i) nounwind
  %531 = call double @_Z3expd(double %extract1084.i) nounwind
  %532 = call double @_Z3expd(double %extract1085.i) nounwind
  %533 = call double @_Z3expd(double %extract1086.i) nounwind
  %534 = call double @_Z3expd(double %extract1087.i) nounwind
  %535 = call double @_Z3expd(double %extract1088.i) nounwind
  %536 = call double @_Z3expd(double %extract1089.i) nounwind
  %537 = call double @_Z3expd(double %extract1090.i) nounwind
  %538 = call double @_Z3expd(double %extract1091.i) nounwind
  %539 = call double @_Z3expd(double %extract1092.i) nounwind
  %540 = call double @_Z3expd(double %extract1093.i) nounwind
  %541 = call double @_Z3expd(double %extract1094.i) nounwind
  %temp.vect1114.i = insertelement <16 x double> undef, double %526, i32 0
  %temp.vect1115.i = insertelement <16 x double> %temp.vect1114.i, double %527, i32 1
  %temp.vect1116.i = insertelement <16 x double> %temp.vect1115.i, double %528, i32 2
  %temp.vect1117.i = insertelement <16 x double> %temp.vect1116.i, double %529, i32 3
  %temp.vect1118.i = insertelement <16 x double> %temp.vect1117.i, double %530, i32 4
  %temp.vect1119.i = insertelement <16 x double> %temp.vect1118.i, double %531, i32 5
  %temp.vect1120.i = insertelement <16 x double> %temp.vect1119.i, double %532, i32 6
  %temp.vect1121.i = insertelement <16 x double> %temp.vect1120.i, double %533, i32 7
  %temp.vect1122.i = insertelement <16 x double> %temp.vect1121.i, double %534, i32 8
  %temp.vect1123.i = insertelement <16 x double> %temp.vect1122.i, double %535, i32 9
  %temp.vect1124.i = insertelement <16 x double> %temp.vect1123.i, double %536, i32 10
  %temp.vect1125.i = insertelement <16 x double> %temp.vect1124.i, double %537, i32 11
  %temp.vect1126.i = insertelement <16 x double> %temp.vect1125.i, double %538, i32 12
  %temp.vect1127.i = insertelement <16 x double> %temp.vect1126.i, double %539, i32 13
  %temp.vect1128.i = insertelement <16 x double> %temp.vect1127.i, double %540, i32 14
  %temp.vect1129.i = insertelement <16 x double> %temp.vect1128.i, double %541, i32 15
  %542 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %543 = load i64* %542, align 8
  %544 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %545 = load i64* %544, align 8
  %546 = add i64 %543, %545
  %extract1097.i = add i64 %546, 2654208
  %547 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1097.i
  %ptrTypeCast1113.i = bitcast double addrspace(1)* %547 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect1129.i, <16 x double> addrspace(1)* %ptrTypeCast1113.i, align 8
  %548 = fadd <16 x double> %498, <double 0x40301494B025CD19, double 0x40301494B025CD19, double 0x40301494B025CD19, double 0x40301494B025CD19, double 0x40301494B025CD19, double 0x40301494B025CD19, double 0x40301494B025CD19, double 0x40301494B025CD19, double 0x40301494B025CD19, double 0x40301494B025CD19, double 0x40301494B025CD19, double 0x40301494B025CD19, double 0x40301494B025CD19, double 0x40301494B025CD19, double 0x40301494B025CD19, double 0x40301494B025CD19>
  %549 = fmul <16 x double> %41, <double 0x409F7377785729B3, double 0x409F7377785729B3, double 0x409F7377785729B3, double 0x409F7377785729B3, double 0x409F7377785729B3, double 0x409F7377785729B3, double 0x409F7377785729B3, double 0x409F7377785729B3, double 0x409F7377785729B3, double 0x409F7377785729B3, double 0x409F7377785729B3, double 0x409F7377785729B3, double 0x409F7377785729B3, double 0x409F7377785729B3, double 0x409F7377785729B3, double 0x409F7377785729B3>
  %550 = fsub <16 x double> %548, %549
  %extract1130.i = extractelement <16 x double> %550, i32 0
  %extract1131.i = extractelement <16 x double> %550, i32 1
  %extract1132.i = extractelement <16 x double> %550, i32 2
  %extract1133.i = extractelement <16 x double> %550, i32 3
  %extract1134.i = extractelement <16 x double> %550, i32 4
  %extract1135.i = extractelement <16 x double> %550, i32 5
  %extract1136.i = extractelement <16 x double> %550, i32 6
  %extract1137.i = extractelement <16 x double> %550, i32 7
  %extract1138.i = extractelement <16 x double> %550, i32 8
  %extract1139.i = extractelement <16 x double> %550, i32 9
  %extract1140.i = extractelement <16 x double> %550, i32 10
  %extract1141.i = extractelement <16 x double> %550, i32 11
  %extract1142.i = extractelement <16 x double> %550, i32 12
  %extract1143.i = extractelement <16 x double> %550, i32 13
  %extract1144.i = extractelement <16 x double> %550, i32 14
  %extract1145.i = extractelement <16 x double> %550, i32 15
  %551 = call double @_Z3expd(double %extract1130.i) nounwind
  %552 = call double @_Z3expd(double %extract1131.i) nounwind
  %553 = call double @_Z3expd(double %extract1132.i) nounwind
  %554 = call double @_Z3expd(double %extract1133.i) nounwind
  %555 = call double @_Z3expd(double %extract1134.i) nounwind
  %556 = call double @_Z3expd(double %extract1135.i) nounwind
  %557 = call double @_Z3expd(double %extract1136.i) nounwind
  %558 = call double @_Z3expd(double %extract1137.i) nounwind
  %559 = call double @_Z3expd(double %extract1138.i) nounwind
  %560 = call double @_Z3expd(double %extract1139.i) nounwind
  %561 = call double @_Z3expd(double %extract1140.i) nounwind
  %562 = call double @_Z3expd(double %extract1141.i) nounwind
  %563 = call double @_Z3expd(double %extract1142.i) nounwind
  %564 = call double @_Z3expd(double %extract1143.i) nounwind
  %565 = call double @_Z3expd(double %extract1144.i) nounwind
  %566 = call double @_Z3expd(double %extract1145.i) nounwind
  %temp.vect1165.i = insertelement <16 x double> undef, double %551, i32 0
  %temp.vect1166.i = insertelement <16 x double> %temp.vect1165.i, double %552, i32 1
  %temp.vect1167.i = insertelement <16 x double> %temp.vect1166.i, double %553, i32 2
  %temp.vect1168.i = insertelement <16 x double> %temp.vect1167.i, double %554, i32 3
  %temp.vect1169.i = insertelement <16 x double> %temp.vect1168.i, double %555, i32 4
  %temp.vect1170.i = insertelement <16 x double> %temp.vect1169.i, double %556, i32 5
  %temp.vect1171.i = insertelement <16 x double> %temp.vect1170.i, double %557, i32 6
  %temp.vect1172.i = insertelement <16 x double> %temp.vect1171.i, double %558, i32 7
  %temp.vect1173.i = insertelement <16 x double> %temp.vect1172.i, double %559, i32 8
  %temp.vect1174.i = insertelement <16 x double> %temp.vect1173.i, double %560, i32 9
  %temp.vect1175.i = insertelement <16 x double> %temp.vect1174.i, double %561, i32 10
  %temp.vect1176.i = insertelement <16 x double> %temp.vect1175.i, double %562, i32 11
  %temp.vect1177.i = insertelement <16 x double> %temp.vect1176.i, double %563, i32 12
  %temp.vect1178.i = insertelement <16 x double> %temp.vect1177.i, double %564, i32 13
  %temp.vect1179.i = insertelement <16 x double> %temp.vect1178.i, double %565, i32 14
  %temp.vect1180.i = insertelement <16 x double> %temp.vect1179.i, double %566, i32 15
  %567 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %568 = load i64* %567, align 8
  %569 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %570 = load i64* %569, align 8
  %571 = add i64 %568, %570
  %extract1148.i = add i64 %571, 2764800
  %572 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1148.i
  %ptrTypeCast1164.i = bitcast double addrspace(1)* %572 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect1180.i, <16 x double> addrspace(1)* %ptrTypeCast1164.i, align 8
  %573 = fmul <16 x double> %41, <double 0x406420F04DDB5526, double 0x406420F04DDB5526, double 0x406420F04DDB5526, double 0x406420F04DDB5526, double 0x406420F04DDB5526, double 0x406420F04DDB5526, double 0x406420F04DDB5526, double 0x406420F04DDB5526, double 0x406420F04DDB5526, double 0x406420F04DDB5526, double 0x406420F04DDB5526, double 0x406420F04DDB5526, double 0x406420F04DDB5526, double 0x406420F04DDB5526, double 0x406420F04DDB5526, double 0x406420F04DDB5526>
  %574 = fsub <16 x double> <double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C>, %573
  %extract1181.i = extractelement <16 x double> %574, i32 0
  %extract1182.i = extractelement <16 x double> %574, i32 1
  %extract1183.i = extractelement <16 x double> %574, i32 2
  %extract1184.i = extractelement <16 x double> %574, i32 3
  %extract1185.i = extractelement <16 x double> %574, i32 4
  %extract1186.i = extractelement <16 x double> %574, i32 5
  %extract1187.i = extractelement <16 x double> %574, i32 6
  %extract1188.i = extractelement <16 x double> %574, i32 7
  %extract1189.i = extractelement <16 x double> %574, i32 8
  %extract1190.i = extractelement <16 x double> %574, i32 9
  %extract1191.i = extractelement <16 x double> %574, i32 10
  %extract1192.i = extractelement <16 x double> %574, i32 11
  %extract1193.i = extractelement <16 x double> %574, i32 12
  %extract1194.i = extractelement <16 x double> %574, i32 13
  %extract1195.i = extractelement <16 x double> %574, i32 14
  %extract1196.i = extractelement <16 x double> %574, i32 15
  %575 = call double @_Z3expd(double %extract1181.i) nounwind
  %576 = call double @_Z3expd(double %extract1182.i) nounwind
  %577 = call double @_Z3expd(double %extract1183.i) nounwind
  %578 = call double @_Z3expd(double %extract1184.i) nounwind
  %579 = call double @_Z3expd(double %extract1185.i) nounwind
  %580 = call double @_Z3expd(double %extract1186.i) nounwind
  %581 = call double @_Z3expd(double %extract1187.i) nounwind
  %582 = call double @_Z3expd(double %extract1188.i) nounwind
  %583 = call double @_Z3expd(double %extract1189.i) nounwind
  %584 = call double @_Z3expd(double %extract1190.i) nounwind
  %585 = call double @_Z3expd(double %extract1191.i) nounwind
  %586 = call double @_Z3expd(double %extract1192.i) nounwind
  %587 = call double @_Z3expd(double %extract1193.i) nounwind
  %588 = call double @_Z3expd(double %extract1194.i) nounwind
  %589 = call double @_Z3expd(double %extract1195.i) nounwind
  %590 = call double @_Z3expd(double %extract1196.i) nounwind
  %temp.vect1216.i = insertelement <16 x double> undef, double %575, i32 0
  %temp.vect1217.i = insertelement <16 x double> %temp.vect1216.i, double %576, i32 1
  %temp.vect1218.i = insertelement <16 x double> %temp.vect1217.i, double %577, i32 2
  %temp.vect1219.i = insertelement <16 x double> %temp.vect1218.i, double %578, i32 3
  %temp.vect1220.i = insertelement <16 x double> %temp.vect1219.i, double %579, i32 4
  %temp.vect1221.i = insertelement <16 x double> %temp.vect1220.i, double %580, i32 5
  %temp.vect1222.i = insertelement <16 x double> %temp.vect1221.i, double %581, i32 6
  %temp.vect1223.i = insertelement <16 x double> %temp.vect1222.i, double %582, i32 7
  %temp.vect1224.i = insertelement <16 x double> %temp.vect1223.i, double %583, i32 8
  %temp.vect1225.i = insertelement <16 x double> %temp.vect1224.i, double %584, i32 9
  %temp.vect1226.i = insertelement <16 x double> %temp.vect1225.i, double %585, i32 10
  %temp.vect1227.i = insertelement <16 x double> %temp.vect1226.i, double %586, i32 11
  %temp.vect1228.i = insertelement <16 x double> %temp.vect1227.i, double %587, i32 12
  %temp.vect1229.i = insertelement <16 x double> %temp.vect1228.i, double %588, i32 13
  %temp.vect1230.i = insertelement <16 x double> %temp.vect1229.i, double %589, i32 14
  %temp.vect1231.i = insertelement <16 x double> %temp.vect1230.i, double %590, i32 15
  %591 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %592 = load i64* %591, align 8
  %593 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %594 = load i64* %593, align 8
  %595 = add i64 %592, %594
  %extract1199.i = add i64 %595, 2875392
  %596 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1199.i
  %ptrTypeCast1215.i = bitcast double addrspace(1)* %596 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect1231.i, <16 x double> addrspace(1)* %ptrTypeCast1215.i, align 8
  %597 = fmul <16 x double> %41, <double 0x40B2CAC057D1782D, double 0x40B2CAC057D1782D, double 0x40B2CAC057D1782D, double 0x40B2CAC057D1782D, double 0x40B2CAC057D1782D, double 0x40B2CAC057D1782D, double 0x40B2CAC057D1782D, double 0x40B2CAC057D1782D, double 0x40B2CAC057D1782D, double 0x40B2CAC057D1782D, double 0x40B2CAC057D1782D, double 0x40B2CAC057D1782D, double 0x40B2CAC057D1782D, double 0x40B2CAC057D1782D, double 0x40B2CAC057D1782D, double 0x40B2CAC057D1782D>
  %598 = fsub <16 x double> <double 0x4040FF3D01124EB7, double 0x4040FF3D01124EB7, double 0x4040FF3D01124EB7, double 0x4040FF3D01124EB7, double 0x4040FF3D01124EB7, double 0x4040FF3D01124EB7, double 0x4040FF3D01124EB7, double 0x4040FF3D01124EB7, double 0x4040FF3D01124EB7, double 0x4040FF3D01124EB7, double 0x4040FF3D01124EB7, double 0x4040FF3D01124EB7, double 0x4040FF3D01124EB7, double 0x4040FF3D01124EB7, double 0x4040FF3D01124EB7, double 0x4040FF3D01124EB7>, %597
  %extract1232.i = extractelement <16 x double> %598, i32 0
  %extract1233.i = extractelement <16 x double> %598, i32 1
  %extract1234.i = extractelement <16 x double> %598, i32 2
  %extract1235.i = extractelement <16 x double> %598, i32 3
  %extract1236.i = extractelement <16 x double> %598, i32 4
  %extract1237.i = extractelement <16 x double> %598, i32 5
  %extract1238.i = extractelement <16 x double> %598, i32 6
  %extract1239.i = extractelement <16 x double> %598, i32 7
  %extract1240.i = extractelement <16 x double> %598, i32 8
  %extract1241.i = extractelement <16 x double> %598, i32 9
  %extract1242.i = extractelement <16 x double> %598, i32 10
  %extract1243.i = extractelement <16 x double> %598, i32 11
  %extract1244.i = extractelement <16 x double> %598, i32 12
  %extract1245.i = extractelement <16 x double> %598, i32 13
  %extract1246.i = extractelement <16 x double> %598, i32 14
  %extract1247.i = extractelement <16 x double> %598, i32 15
  %599 = call double @_Z3expd(double %extract1232.i) nounwind
  %600 = call double @_Z3expd(double %extract1233.i) nounwind
  %601 = call double @_Z3expd(double %extract1234.i) nounwind
  %602 = call double @_Z3expd(double %extract1235.i) nounwind
  %603 = call double @_Z3expd(double %extract1236.i) nounwind
  %604 = call double @_Z3expd(double %extract1237.i) nounwind
  %605 = call double @_Z3expd(double %extract1238.i) nounwind
  %606 = call double @_Z3expd(double %extract1239.i) nounwind
  %607 = call double @_Z3expd(double %extract1240.i) nounwind
  %608 = call double @_Z3expd(double %extract1241.i) nounwind
  %609 = call double @_Z3expd(double %extract1242.i) nounwind
  %610 = call double @_Z3expd(double %extract1243.i) nounwind
  %611 = call double @_Z3expd(double %extract1244.i) nounwind
  %612 = call double @_Z3expd(double %extract1245.i) nounwind
  %613 = call double @_Z3expd(double %extract1246.i) nounwind
  %614 = call double @_Z3expd(double %extract1247.i) nounwind
  %temp.vect1267.i = insertelement <16 x double> undef, double %599, i32 0
  %temp.vect1268.i = insertelement <16 x double> %temp.vect1267.i, double %600, i32 1
  %temp.vect1269.i = insertelement <16 x double> %temp.vect1268.i, double %601, i32 2
  %temp.vect1270.i = insertelement <16 x double> %temp.vect1269.i, double %602, i32 3
  %temp.vect1271.i = insertelement <16 x double> %temp.vect1270.i, double %603, i32 4
  %temp.vect1272.i = insertelement <16 x double> %temp.vect1271.i, double %604, i32 5
  %temp.vect1273.i = insertelement <16 x double> %temp.vect1272.i, double %605, i32 6
  %temp.vect1274.i = insertelement <16 x double> %temp.vect1273.i, double %606, i32 7
  %temp.vect1275.i = insertelement <16 x double> %temp.vect1274.i, double %607, i32 8
  %temp.vect1276.i = insertelement <16 x double> %temp.vect1275.i, double %608, i32 9
  %temp.vect1277.i = insertelement <16 x double> %temp.vect1276.i, double %609, i32 10
  %temp.vect1278.i = insertelement <16 x double> %temp.vect1277.i, double %610, i32 11
  %temp.vect1279.i = insertelement <16 x double> %temp.vect1278.i, double %611, i32 12
  %temp.vect1280.i = insertelement <16 x double> %temp.vect1279.i, double %612, i32 13
  %temp.vect1281.i = insertelement <16 x double> %temp.vect1280.i, double %613, i32 14
  %temp.vect1282.i = insertelement <16 x double> %temp.vect1281.i, double %614, i32 15
  %615 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %616 = load i64* %615, align 8
  %617 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %618 = load i64* %617, align 8
  %619 = add i64 %616, %618
  %extract1250.i = add i64 %619, 2985984
  %620 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1250.i
  %ptrTypeCast1266.i = bitcast double addrspace(1)* %620 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect1282.i, <16 x double> addrspace(1)* %ptrTypeCast1266.i, align 8
  %621 = fmul <16 x double> %41, <double 1.509650e+03, double 1.509650e+03, double 1.509650e+03, double 1.509650e+03, double 1.509650e+03, double 1.509650e+03, double 1.509650e+03, double 1.509650e+03, double 1.509650e+03, double 1.509650e+03, double 1.509650e+03, double 1.509650e+03, double 1.509650e+03, double 1.509650e+03, double 1.509650e+03, double 1.509650e+03>
  %622 = fsub <16 x double> <double 0x40410400EFEA0847, double 0x40410400EFEA0847, double 0x40410400EFEA0847, double 0x40410400EFEA0847, double 0x40410400EFEA0847, double 0x40410400EFEA0847, double 0x40410400EFEA0847, double 0x40410400EFEA0847, double 0x40410400EFEA0847, double 0x40410400EFEA0847, double 0x40410400EFEA0847, double 0x40410400EFEA0847, double 0x40410400EFEA0847, double 0x40410400EFEA0847, double 0x40410400EFEA0847, double 0x40410400EFEA0847>, %621
  %extract1283.i = extractelement <16 x double> %622, i32 0
  %extract1284.i = extractelement <16 x double> %622, i32 1
  %extract1285.i = extractelement <16 x double> %622, i32 2
  %extract1286.i = extractelement <16 x double> %622, i32 3
  %extract1287.i = extractelement <16 x double> %622, i32 4
  %extract1288.i = extractelement <16 x double> %622, i32 5
  %extract1289.i = extractelement <16 x double> %622, i32 6
  %extract1290.i = extractelement <16 x double> %622, i32 7
  %extract1291.i = extractelement <16 x double> %622, i32 8
  %extract1292.i = extractelement <16 x double> %622, i32 9
  %extract1293.i = extractelement <16 x double> %622, i32 10
  %extract1294.i = extractelement <16 x double> %622, i32 11
  %extract1295.i = extractelement <16 x double> %622, i32 12
  %extract1296.i = extractelement <16 x double> %622, i32 13
  %extract1297.i = extractelement <16 x double> %622, i32 14
  %extract1298.i = extractelement <16 x double> %622, i32 15
  %623 = call double @_Z3expd(double %extract1283.i) nounwind
  %624 = call double @_Z3expd(double %extract1284.i) nounwind
  %625 = call double @_Z3expd(double %extract1285.i) nounwind
  %626 = call double @_Z3expd(double %extract1286.i) nounwind
  %627 = call double @_Z3expd(double %extract1287.i) nounwind
  %628 = call double @_Z3expd(double %extract1288.i) nounwind
  %629 = call double @_Z3expd(double %extract1289.i) nounwind
  %630 = call double @_Z3expd(double %extract1290.i) nounwind
  %631 = call double @_Z3expd(double %extract1291.i) nounwind
  %632 = call double @_Z3expd(double %extract1292.i) nounwind
  %633 = call double @_Z3expd(double %extract1293.i) nounwind
  %634 = call double @_Z3expd(double %extract1294.i) nounwind
  %635 = call double @_Z3expd(double %extract1295.i) nounwind
  %636 = call double @_Z3expd(double %extract1296.i) nounwind
  %637 = call double @_Z3expd(double %extract1297.i) nounwind
  %638 = call double @_Z3expd(double %extract1298.i) nounwind
  %temp.vect1318.i = insertelement <16 x double> undef, double %623, i32 0
  %temp.vect1319.i = insertelement <16 x double> %temp.vect1318.i, double %624, i32 1
  %temp.vect1320.i = insertelement <16 x double> %temp.vect1319.i, double %625, i32 2
  %temp.vect1321.i = insertelement <16 x double> %temp.vect1320.i, double %626, i32 3
  %temp.vect1322.i = insertelement <16 x double> %temp.vect1321.i, double %627, i32 4
  %temp.vect1323.i = insertelement <16 x double> %temp.vect1322.i, double %628, i32 5
  %temp.vect1324.i = insertelement <16 x double> %temp.vect1323.i, double %629, i32 6
  %temp.vect1325.i = insertelement <16 x double> %temp.vect1324.i, double %630, i32 7
  %temp.vect1326.i = insertelement <16 x double> %temp.vect1325.i, double %631, i32 8
  %temp.vect1327.i = insertelement <16 x double> %temp.vect1326.i, double %632, i32 9
  %temp.vect1328.i = insertelement <16 x double> %temp.vect1327.i, double %633, i32 10
  %temp.vect1329.i = insertelement <16 x double> %temp.vect1328.i, double %634, i32 11
  %temp.vect1330.i = insertelement <16 x double> %temp.vect1329.i, double %635, i32 12
  %temp.vect1331.i = insertelement <16 x double> %temp.vect1330.i, double %636, i32 13
  %temp.vect1332.i = insertelement <16 x double> %temp.vect1331.i, double %637, i32 14
  %temp.vect1333.i = insertelement <16 x double> %temp.vect1332.i, double %638, i32 15
  %639 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %640 = load i64* %639, align 8
  %641 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %642 = load i64* %641, align 8
  %643 = add i64 %640, %642
  %extract1301.i = add i64 %643, 3096576
  %644 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1301.i
  %ptrTypeCast1317.i = bitcast double addrspace(1)* %644 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect1333.i, <16 x double> addrspace(1)* %ptrTypeCast1317.i, align 8
  %645 = fmul <16 x double> %temp.vect97.i, <double 1.228000e+00, double 1.228000e+00, double 1.228000e+00, double 1.228000e+00, double 1.228000e+00, double 1.228000e+00, double 1.228000e+00, double 1.228000e+00, double 1.228000e+00, double 1.228000e+00, double 1.228000e+00, double 1.228000e+00, double 1.228000e+00, double 1.228000e+00, double 1.228000e+00, double 1.228000e+00>
  %646 = fadd <16 x double> %645, <double 0x4031ADA7E810F5F2, double 0x4031ADA7E810F5F2, double 0x4031ADA7E810F5F2, double 0x4031ADA7E810F5F2, double 0x4031ADA7E810F5F2, double 0x4031ADA7E810F5F2, double 0x4031ADA7E810F5F2, double 0x4031ADA7E810F5F2, double 0x4031ADA7E810F5F2, double 0x4031ADA7E810F5F2, double 0x4031ADA7E810F5F2, double 0x4031ADA7E810F5F2, double 0x4031ADA7E810F5F2, double 0x4031ADA7E810F5F2, double 0x4031ADA7E810F5F2, double 0x4031ADA7E810F5F2>
  %647 = fmul <16 x double> %41, <double 0x40419CD2432E52FA, double 0x40419CD2432E52FA, double 0x40419CD2432E52FA, double 0x40419CD2432E52FA, double 0x40419CD2432E52FA, double 0x40419CD2432E52FA, double 0x40419CD2432E52FA, double 0x40419CD2432E52FA, double 0x40419CD2432E52FA, double 0x40419CD2432E52FA, double 0x40419CD2432E52FA, double 0x40419CD2432E52FA, double 0x40419CD2432E52FA, double 0x40419CD2432E52FA, double 0x40419CD2432E52FA, double 0x40419CD2432E52FA>
  %648 = fsub <16 x double> %646, %647
  %extract1334.i = extractelement <16 x double> %648, i32 0
  %extract1335.i = extractelement <16 x double> %648, i32 1
  %extract1336.i = extractelement <16 x double> %648, i32 2
  %extract1337.i = extractelement <16 x double> %648, i32 3
  %extract1338.i = extractelement <16 x double> %648, i32 4
  %extract1339.i = extractelement <16 x double> %648, i32 5
  %extract1340.i = extractelement <16 x double> %648, i32 6
  %extract1341.i = extractelement <16 x double> %648, i32 7
  %extract1342.i = extractelement <16 x double> %648, i32 8
  %extract1343.i = extractelement <16 x double> %648, i32 9
  %extract1344.i = extractelement <16 x double> %648, i32 10
  %extract1345.i = extractelement <16 x double> %648, i32 11
  %extract1346.i = extractelement <16 x double> %648, i32 12
  %extract1347.i = extractelement <16 x double> %648, i32 13
  %extract1348.i = extractelement <16 x double> %648, i32 14
  %extract1349.i = extractelement <16 x double> %648, i32 15
  %649 = call double @_Z3expd(double %extract1334.i) nounwind
  %650 = call double @_Z3expd(double %extract1335.i) nounwind
  %651 = call double @_Z3expd(double %extract1336.i) nounwind
  %652 = call double @_Z3expd(double %extract1337.i) nounwind
  %653 = call double @_Z3expd(double %extract1338.i) nounwind
  %654 = call double @_Z3expd(double %extract1339.i) nounwind
  %655 = call double @_Z3expd(double %extract1340.i) nounwind
  %656 = call double @_Z3expd(double %extract1341.i) nounwind
  %657 = call double @_Z3expd(double %extract1342.i) nounwind
  %658 = call double @_Z3expd(double %extract1343.i) nounwind
  %659 = call double @_Z3expd(double %extract1344.i) nounwind
  %660 = call double @_Z3expd(double %extract1345.i) nounwind
  %661 = call double @_Z3expd(double %extract1346.i) nounwind
  %662 = call double @_Z3expd(double %extract1347.i) nounwind
  %663 = call double @_Z3expd(double %extract1348.i) nounwind
  %664 = call double @_Z3expd(double %extract1349.i) nounwind
  %temp.vect1369.i = insertelement <16 x double> undef, double %649, i32 0
  %temp.vect1370.i = insertelement <16 x double> %temp.vect1369.i, double %650, i32 1
  %temp.vect1371.i = insertelement <16 x double> %temp.vect1370.i, double %651, i32 2
  %temp.vect1372.i = insertelement <16 x double> %temp.vect1371.i, double %652, i32 3
  %temp.vect1373.i = insertelement <16 x double> %temp.vect1372.i, double %653, i32 4
  %temp.vect1374.i = insertelement <16 x double> %temp.vect1373.i, double %654, i32 5
  %temp.vect1375.i = insertelement <16 x double> %temp.vect1374.i, double %655, i32 6
  %temp.vect1376.i = insertelement <16 x double> %temp.vect1375.i, double %656, i32 7
  %temp.vect1377.i = insertelement <16 x double> %temp.vect1376.i, double %657, i32 8
  %temp.vect1378.i = insertelement <16 x double> %temp.vect1377.i, double %658, i32 9
  %temp.vect1379.i = insertelement <16 x double> %temp.vect1378.i, double %659, i32 10
  %temp.vect1380.i = insertelement <16 x double> %temp.vect1379.i, double %660, i32 11
  %temp.vect1381.i = insertelement <16 x double> %temp.vect1380.i, double %661, i32 12
  %temp.vect1382.i = insertelement <16 x double> %temp.vect1381.i, double %662, i32 13
  %temp.vect1383.i = insertelement <16 x double> %temp.vect1382.i, double %663, i32 14
  %temp.vect1384.i = insertelement <16 x double> %temp.vect1383.i, double %664, i32 15
  %665 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %666 = load i64* %665, align 8
  %667 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %668 = load i64* %667, align 8
  %669 = add i64 %666, %668
  %extract1352.i = add i64 %669, 3207168
  %670 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1352.i
  %ptrTypeCast1368.i = bitcast double addrspace(1)* %670 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect1384.i, <16 x double> addrspace(1)* %ptrTypeCast1368.i, align 8
  %671 = fmul <16 x double> %temp.vect97.i, <double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00, double 1.500000e+00>
  %672 = fadd <16 x double> %671, <double 0x403193A34FFBC0D6, double 0x403193A34FFBC0D6, double 0x403193A34FFBC0D6, double 0x403193A34FFBC0D6, double 0x403193A34FFBC0D6, double 0x403193A34FFBC0D6, double 0x403193A34FFBC0D6, double 0x403193A34FFBC0D6, double 0x403193A34FFBC0D6, double 0x403193A34FFBC0D6, double 0x403193A34FFBC0D6, double 0x403193A34FFBC0D6, double 0x403193A34FFBC0D6, double 0x403193A34FFBC0D6, double 0x403193A34FFBC0D6, double 0x403193A34FFBC0D6>
  %673 = fmul <16 x double> %41, <double 0x40E38F017E90FF97, double 0x40E38F017E90FF97, double 0x40E38F017E90FF97, double 0x40E38F017E90FF97, double 0x40E38F017E90FF97, double 0x40E38F017E90FF97, double 0x40E38F017E90FF97, double 0x40E38F017E90FF97, double 0x40E38F017E90FF97, double 0x40E38F017E90FF97, double 0x40E38F017E90FF97, double 0x40E38F017E90FF97, double 0x40E38F017E90FF97, double 0x40E38F017E90FF97, double 0x40E38F017E90FF97, double 0x40E38F017E90FF97>
  %674 = fsub <16 x double> %672, %673
  %extract1385.i = extractelement <16 x double> %674, i32 0
  %extract1386.i = extractelement <16 x double> %674, i32 1
  %extract1387.i = extractelement <16 x double> %674, i32 2
  %extract1388.i = extractelement <16 x double> %674, i32 3
  %extract1389.i = extractelement <16 x double> %674, i32 4
  %extract1390.i = extractelement <16 x double> %674, i32 5
  %extract1391.i = extractelement <16 x double> %674, i32 6
  %extract1392.i = extractelement <16 x double> %674, i32 7
  %extract1393.i = extractelement <16 x double> %674, i32 8
  %extract1394.i = extractelement <16 x double> %674, i32 9
  %extract1395.i = extractelement <16 x double> %674, i32 10
  %extract1396.i = extractelement <16 x double> %674, i32 11
  %extract1397.i = extractelement <16 x double> %674, i32 12
  %extract1398.i = extractelement <16 x double> %674, i32 13
  %extract1399.i = extractelement <16 x double> %674, i32 14
  %extract1400.i = extractelement <16 x double> %674, i32 15
  %675 = call double @_Z3expd(double %extract1385.i) nounwind
  %676 = call double @_Z3expd(double %extract1386.i) nounwind
  %677 = call double @_Z3expd(double %extract1387.i) nounwind
  %678 = call double @_Z3expd(double %extract1388.i) nounwind
  %679 = call double @_Z3expd(double %extract1389.i) nounwind
  %680 = call double @_Z3expd(double %extract1390.i) nounwind
  %681 = call double @_Z3expd(double %extract1391.i) nounwind
  %682 = call double @_Z3expd(double %extract1392.i) nounwind
  %683 = call double @_Z3expd(double %extract1393.i) nounwind
  %684 = call double @_Z3expd(double %extract1394.i) nounwind
  %685 = call double @_Z3expd(double %extract1395.i) nounwind
  %686 = call double @_Z3expd(double %extract1396.i) nounwind
  %687 = call double @_Z3expd(double %extract1397.i) nounwind
  %688 = call double @_Z3expd(double %extract1398.i) nounwind
  %689 = call double @_Z3expd(double %extract1399.i) nounwind
  %690 = call double @_Z3expd(double %extract1400.i) nounwind
  %temp.vect1420.i = insertelement <16 x double> undef, double %675, i32 0
  %temp.vect1421.i = insertelement <16 x double> %temp.vect1420.i, double %676, i32 1
  %temp.vect1422.i = insertelement <16 x double> %temp.vect1421.i, double %677, i32 2
  %temp.vect1423.i = insertelement <16 x double> %temp.vect1422.i, double %678, i32 3
  %temp.vect1424.i = insertelement <16 x double> %temp.vect1423.i, double %679, i32 4
  %temp.vect1425.i = insertelement <16 x double> %temp.vect1424.i, double %680, i32 5
  %temp.vect1426.i = insertelement <16 x double> %temp.vect1425.i, double %681, i32 6
  %temp.vect1427.i = insertelement <16 x double> %temp.vect1426.i, double %682, i32 7
  %temp.vect1428.i = insertelement <16 x double> %temp.vect1427.i, double %683, i32 8
  %temp.vect1429.i = insertelement <16 x double> %temp.vect1428.i, double %684, i32 9
  %temp.vect1430.i = insertelement <16 x double> %temp.vect1429.i, double %685, i32 10
  %temp.vect1431.i = insertelement <16 x double> %temp.vect1430.i, double %686, i32 11
  %temp.vect1432.i = insertelement <16 x double> %temp.vect1431.i, double %687, i32 12
  %temp.vect1433.i = insertelement <16 x double> %temp.vect1432.i, double %688, i32 13
  %temp.vect1434.i = insertelement <16 x double> %temp.vect1433.i, double %689, i32 14
  %temp.vect1435.i = insertelement <16 x double> %temp.vect1434.i, double %690, i32 15
  %691 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %692 = load i64* %691, align 8
  %693 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %694 = load i64* %693, align 8
  %695 = add i64 %692, %694
  %extract1403.i = add i64 %695, 3317760
  %696 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1403.i
  %ptrTypeCast1419.i = bitcast double addrspace(1)* %696 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect1435.i, <16 x double> addrspace(1)* %ptrTypeCast1419.i, align 8
  %697 = fmul <16 x double> %41, <double 0x40D77D706DC5D639, double 0x40D77D706DC5D639, double 0x40D77D706DC5D639, double 0x40D77D706DC5D639, double 0x40D77D706DC5D639, double 0x40D77D706DC5D639, double 0x40D77D706DC5D639, double 0x40D77D706DC5D639, double 0x40D77D706DC5D639, double 0x40D77D706DC5D639, double 0x40D77D706DC5D639, double 0x40D77D706DC5D639, double 0x40D77D706DC5D639, double 0x40D77D706DC5D639, double 0x40D77D706DC5D639, double 0x40D77D706DC5D639>
  %698 = fsub <16 x double> <double 0x403C8C1CA049B703, double 0x403C8C1CA049B703, double 0x403C8C1CA049B703, double 0x403C8C1CA049B703, double 0x403C8C1CA049B703, double 0x403C8C1CA049B703, double 0x403C8C1CA049B703, double 0x403C8C1CA049B703, double 0x403C8C1CA049B703, double 0x403C8C1CA049B703, double 0x403C8C1CA049B703, double 0x403C8C1CA049B703, double 0x403C8C1CA049B703, double 0x403C8C1CA049B703, double 0x403C8C1CA049B703, double 0x403C8C1CA049B703>, %697
  %extract1436.i = extractelement <16 x double> %698, i32 0
  %extract1437.i = extractelement <16 x double> %698, i32 1
  %extract1438.i = extractelement <16 x double> %698, i32 2
  %extract1439.i = extractelement <16 x double> %698, i32 3
  %extract1440.i = extractelement <16 x double> %698, i32 4
  %extract1441.i = extractelement <16 x double> %698, i32 5
  %extract1442.i = extractelement <16 x double> %698, i32 6
  %extract1443.i = extractelement <16 x double> %698, i32 7
  %extract1444.i = extractelement <16 x double> %698, i32 8
  %extract1445.i = extractelement <16 x double> %698, i32 9
  %extract1446.i = extractelement <16 x double> %698, i32 10
  %extract1447.i = extractelement <16 x double> %698, i32 11
  %extract1448.i = extractelement <16 x double> %698, i32 12
  %extract1449.i = extractelement <16 x double> %698, i32 13
  %extract1450.i = extractelement <16 x double> %698, i32 14
  %extract1451.i = extractelement <16 x double> %698, i32 15
  %699 = call double @_Z3expd(double %extract1436.i) nounwind
  %700 = call double @_Z3expd(double %extract1437.i) nounwind
  %701 = call double @_Z3expd(double %extract1438.i) nounwind
  %702 = call double @_Z3expd(double %extract1439.i) nounwind
  %703 = call double @_Z3expd(double %extract1440.i) nounwind
  %704 = call double @_Z3expd(double %extract1441.i) nounwind
  %705 = call double @_Z3expd(double %extract1442.i) nounwind
  %706 = call double @_Z3expd(double %extract1443.i) nounwind
  %707 = call double @_Z3expd(double %extract1444.i) nounwind
  %708 = call double @_Z3expd(double %extract1445.i) nounwind
  %709 = call double @_Z3expd(double %extract1446.i) nounwind
  %710 = call double @_Z3expd(double %extract1447.i) nounwind
  %711 = call double @_Z3expd(double %extract1448.i) nounwind
  %712 = call double @_Z3expd(double %extract1449.i) nounwind
  %713 = call double @_Z3expd(double %extract1450.i) nounwind
  %714 = call double @_Z3expd(double %extract1451.i) nounwind
  %temp.vect1471.i = insertelement <16 x double> undef, double %699, i32 0
  %temp.vect1472.i = insertelement <16 x double> %temp.vect1471.i, double %700, i32 1
  %temp.vect1473.i = insertelement <16 x double> %temp.vect1472.i, double %701, i32 2
  %temp.vect1474.i = insertelement <16 x double> %temp.vect1473.i, double %702, i32 3
  %temp.vect1475.i = insertelement <16 x double> %temp.vect1474.i, double %703, i32 4
  %temp.vect1476.i = insertelement <16 x double> %temp.vect1475.i, double %704, i32 5
  %temp.vect1477.i = insertelement <16 x double> %temp.vect1476.i, double %705, i32 6
  %temp.vect1478.i = insertelement <16 x double> %temp.vect1477.i, double %706, i32 7
  %temp.vect1479.i = insertelement <16 x double> %temp.vect1478.i, double %707, i32 8
  %temp.vect1480.i = insertelement <16 x double> %temp.vect1479.i, double %708, i32 9
  %temp.vect1481.i = insertelement <16 x double> %temp.vect1480.i, double %709, i32 10
  %temp.vect1482.i = insertelement <16 x double> %temp.vect1481.i, double %710, i32 11
  %temp.vect1483.i = insertelement <16 x double> %temp.vect1482.i, double %711, i32 12
  %temp.vect1484.i = insertelement <16 x double> %temp.vect1483.i, double %712, i32 13
  %temp.vect1485.i = insertelement <16 x double> %temp.vect1484.i, double %713, i32 14
  %temp.vect1486.i = insertelement <16 x double> %temp.vect1485.i, double %714, i32 15
  %715 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %716 = load i64* %715, align 8
  %717 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %718 = load i64* %717, align 8
  %719 = add i64 %716, %718
  %extract1454.i = add i64 %719, 3428352
  %720 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1454.i
  %ptrTypeCast1470.i = bitcast double addrspace(1)* %720 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect1486.i, <16 x double> addrspace(1)* %ptrTypeCast1470.i, align 8
  %721 = fmul <16 x double> %41, <double 0x40C731F4EA4A8C15, double 0x40C731F4EA4A8C15, double 0x40C731F4EA4A8C15, double 0x40C731F4EA4A8C15, double 0x40C731F4EA4A8C15, double 0x40C731F4EA4A8C15, double 0x40C731F4EA4A8C15, double 0x40C731F4EA4A8C15, double 0x40C731F4EA4A8C15, double 0x40C731F4EA4A8C15, double 0x40C731F4EA4A8C15, double 0x40C731F4EA4A8C15, double 0x40C731F4EA4A8C15, double 0x40C731F4EA4A8C15, double 0x40C731F4EA4A8C15, double 0x40C731F4EA4A8C15>
  %722 = fsub <16 x double> <double 0x40405221CC02A272, double 0x40405221CC02A272, double 0x40405221CC02A272, double 0x40405221CC02A272, double 0x40405221CC02A272, double 0x40405221CC02A272, double 0x40405221CC02A272, double 0x40405221CC02A272, double 0x40405221CC02A272, double 0x40405221CC02A272, double 0x40405221CC02A272, double 0x40405221CC02A272, double 0x40405221CC02A272, double 0x40405221CC02A272, double 0x40405221CC02A272, double 0x40405221CC02A272>, %721
  %extract1487.i = extractelement <16 x double> %722, i32 0
  %extract1488.i = extractelement <16 x double> %722, i32 1
  %extract1489.i = extractelement <16 x double> %722, i32 2
  %extract1490.i = extractelement <16 x double> %722, i32 3
  %extract1491.i = extractelement <16 x double> %722, i32 4
  %extract1492.i = extractelement <16 x double> %722, i32 5
  %extract1493.i = extractelement <16 x double> %722, i32 6
  %extract1494.i = extractelement <16 x double> %722, i32 7
  %extract1495.i = extractelement <16 x double> %722, i32 8
  %extract1496.i = extractelement <16 x double> %722, i32 9
  %extract1497.i = extractelement <16 x double> %722, i32 10
  %extract1498.i = extractelement <16 x double> %722, i32 11
  %extract1499.i = extractelement <16 x double> %722, i32 12
  %extract1500.i = extractelement <16 x double> %722, i32 13
  %extract1501.i = extractelement <16 x double> %722, i32 14
  %extract1502.i = extractelement <16 x double> %722, i32 15
  %723 = call double @_Z3expd(double %extract1487.i) nounwind
  %724 = call double @_Z3expd(double %extract1488.i) nounwind
  %725 = call double @_Z3expd(double %extract1489.i) nounwind
  %726 = call double @_Z3expd(double %extract1490.i) nounwind
  %727 = call double @_Z3expd(double %extract1491.i) nounwind
  %728 = call double @_Z3expd(double %extract1492.i) nounwind
  %729 = call double @_Z3expd(double %extract1493.i) nounwind
  %730 = call double @_Z3expd(double %extract1494.i) nounwind
  %731 = call double @_Z3expd(double %extract1495.i) nounwind
  %732 = call double @_Z3expd(double %extract1496.i) nounwind
  %733 = call double @_Z3expd(double %extract1497.i) nounwind
  %734 = call double @_Z3expd(double %extract1498.i) nounwind
  %735 = call double @_Z3expd(double %extract1499.i) nounwind
  %736 = call double @_Z3expd(double %extract1500.i) nounwind
  %737 = call double @_Z3expd(double %extract1501.i) nounwind
  %738 = call double @_Z3expd(double %extract1502.i) nounwind
  %temp.vect1522.i = insertelement <16 x double> undef, double %723, i32 0
  %temp.vect1523.i = insertelement <16 x double> %temp.vect1522.i, double %724, i32 1
  %temp.vect1524.i = insertelement <16 x double> %temp.vect1523.i, double %725, i32 2
  %temp.vect1525.i = insertelement <16 x double> %temp.vect1524.i, double %726, i32 3
  %temp.vect1526.i = insertelement <16 x double> %temp.vect1525.i, double %727, i32 4
  %temp.vect1527.i = insertelement <16 x double> %temp.vect1526.i, double %728, i32 5
  %temp.vect1528.i = insertelement <16 x double> %temp.vect1527.i, double %729, i32 6
  %temp.vect1529.i = insertelement <16 x double> %temp.vect1528.i, double %730, i32 7
  %temp.vect1530.i = insertelement <16 x double> %temp.vect1529.i, double %731, i32 8
  %temp.vect1531.i = insertelement <16 x double> %temp.vect1530.i, double %732, i32 9
  %temp.vect1532.i = insertelement <16 x double> %temp.vect1531.i, double %733, i32 10
  %temp.vect1533.i = insertelement <16 x double> %temp.vect1532.i, double %734, i32 11
  %temp.vect1534.i = insertelement <16 x double> %temp.vect1533.i, double %735, i32 12
  %temp.vect1535.i = insertelement <16 x double> %temp.vect1534.i, double %736, i32 13
  %temp.vect1536.i = insertelement <16 x double> %temp.vect1535.i, double %737, i32 14
  %temp.vect1537.i = insertelement <16 x double> %temp.vect1536.i, double %738, i32 15
  %739 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %740 = load i64* %739, align 8
  %741 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %742 = load i64* %741, align 8
  %743 = add i64 %740, %742
  %extract1505.i = add i64 %743, 3538944
  %744 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1505.i
  %ptrTypeCast1521.i = bitcast double addrspace(1)* %744 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect1537.i, <16 x double> addrspace(1)* %ptrTypeCast1521.i, align 8
  %745 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %746 = load i64* %745, align 8
  %747 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %748 = load i64* %747, align 8
  %749 = add i64 %746, %748
  %extract1540.i = add i64 %749, 3649536
  %750 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1540.i
  %ptrTypeCast1556.i = bitcast double addrspace(1)* %750 to <16 x double> addrspace(1)*
  store <16 x double> <double 5.700000e+13, double 5.700000e+13, double 5.700000e+13, double 5.700000e+13, double 5.700000e+13, double 5.700000e+13, double 5.700000e+13, double 5.700000e+13, double 5.700000e+13, double 5.700000e+13, double 5.700000e+13, double 5.700000e+13, double 5.700000e+13, double 5.700000e+13, double 5.700000e+13, double 5.700000e+13>, <16 x double> addrspace(1)* %ptrTypeCast1556.i, align 8
  %751 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %752 = load i64* %751, align 8
  %753 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %754 = load i64* %753, align 8
  %755 = add i64 %752, %754
  %extract1559.i = add i64 %755, 3760128
  %756 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1559.i
  %ptrTypeCast1575.i = bitcast double addrspace(1)* %756 to <16 x double> addrspace(1)*
  store <16 x double> <double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast1575.i, align 8
  %757 = fmul <16 x double> %temp.vect97.i, <double 1.790000e+00, double 1.790000e+00, double 1.790000e+00, double 1.790000e+00, double 1.790000e+00, double 1.790000e+00, double 1.790000e+00, double 1.790000e+00, double 1.790000e+00, double 1.790000e+00, double 1.790000e+00, double 1.790000e+00, double 1.790000e+00, double 1.790000e+00, double 1.790000e+00, double 1.790000e+00>
  %758 = fadd <16 x double> %757, <double 0x403285B7B50D9366, double 0x403285B7B50D9366, double 0x403285B7B50D9366, double 0x403285B7B50D9366, double 0x403285B7B50D9366, double 0x403285B7B50D9366, double 0x403285B7B50D9366, double 0x403285B7B50D9366, double 0x403285B7B50D9366, double 0x403285B7B50D9366, double 0x403285B7B50D9366, double 0x403285B7B50D9366, double 0x403285B7B50D9366, double 0x403285B7B50D9366, double 0x403285B7B50D9366, double 0x403285B7B50D9366>
  %759 = fmul <16 x double> %41, <double 0x408A42F984A0E411, double 0x408A42F984A0E411, double 0x408A42F984A0E411, double 0x408A42F984A0E411, double 0x408A42F984A0E411, double 0x408A42F984A0E411, double 0x408A42F984A0E411, double 0x408A42F984A0E411, double 0x408A42F984A0E411, double 0x408A42F984A0E411, double 0x408A42F984A0E411, double 0x408A42F984A0E411, double 0x408A42F984A0E411, double 0x408A42F984A0E411, double 0x408A42F984A0E411, double 0x408A42F984A0E411>
  %760 = fsub <16 x double> %758, %759
  %extract1576.i = extractelement <16 x double> %760, i32 0
  %extract1577.i = extractelement <16 x double> %760, i32 1
  %extract1578.i = extractelement <16 x double> %760, i32 2
  %extract1579.i = extractelement <16 x double> %760, i32 3
  %extract1580.i = extractelement <16 x double> %760, i32 4
  %extract1581.i = extractelement <16 x double> %760, i32 5
  %extract1582.i = extractelement <16 x double> %760, i32 6
  %extract1583.i = extractelement <16 x double> %760, i32 7
  %extract1584.i = extractelement <16 x double> %760, i32 8
  %extract1585.i = extractelement <16 x double> %760, i32 9
  %extract1586.i = extractelement <16 x double> %760, i32 10
  %extract1587.i = extractelement <16 x double> %760, i32 11
  %extract1588.i = extractelement <16 x double> %760, i32 12
  %extract1589.i = extractelement <16 x double> %760, i32 13
  %extract1590.i = extractelement <16 x double> %760, i32 14
  %extract1591.i = extractelement <16 x double> %760, i32 15
  %761 = call double @_Z3expd(double %extract1576.i) nounwind
  %762 = call double @_Z3expd(double %extract1577.i) nounwind
  %763 = call double @_Z3expd(double %extract1578.i) nounwind
  %764 = call double @_Z3expd(double %extract1579.i) nounwind
  %765 = call double @_Z3expd(double %extract1580.i) nounwind
  %766 = call double @_Z3expd(double %extract1581.i) nounwind
  %767 = call double @_Z3expd(double %extract1582.i) nounwind
  %768 = call double @_Z3expd(double %extract1583.i) nounwind
  %769 = call double @_Z3expd(double %extract1584.i) nounwind
  %770 = call double @_Z3expd(double %extract1585.i) nounwind
  %771 = call double @_Z3expd(double %extract1586.i) nounwind
  %772 = call double @_Z3expd(double %extract1587.i) nounwind
  %773 = call double @_Z3expd(double %extract1588.i) nounwind
  %774 = call double @_Z3expd(double %extract1589.i) nounwind
  %775 = call double @_Z3expd(double %extract1590.i) nounwind
  %776 = call double @_Z3expd(double %extract1591.i) nounwind
  %temp.vect1611.i = insertelement <16 x double> undef, double %761, i32 0
  %temp.vect1612.i = insertelement <16 x double> %temp.vect1611.i, double %762, i32 1
  %temp.vect1613.i = insertelement <16 x double> %temp.vect1612.i, double %763, i32 2
  %temp.vect1614.i = insertelement <16 x double> %temp.vect1613.i, double %764, i32 3
  %temp.vect1615.i = insertelement <16 x double> %temp.vect1614.i, double %765, i32 4
  %temp.vect1616.i = insertelement <16 x double> %temp.vect1615.i, double %766, i32 5
  %temp.vect1617.i = insertelement <16 x double> %temp.vect1616.i, double %767, i32 6
  %temp.vect1618.i = insertelement <16 x double> %temp.vect1617.i, double %768, i32 7
  %temp.vect1619.i = insertelement <16 x double> %temp.vect1618.i, double %769, i32 8
  %temp.vect1620.i = insertelement <16 x double> %temp.vect1619.i, double %770, i32 9
  %temp.vect1621.i = insertelement <16 x double> %temp.vect1620.i, double %771, i32 10
  %temp.vect1622.i = insertelement <16 x double> %temp.vect1621.i, double %772, i32 11
  %temp.vect1623.i = insertelement <16 x double> %temp.vect1622.i, double %773, i32 12
  %temp.vect1624.i = insertelement <16 x double> %temp.vect1623.i, double %774, i32 13
  %temp.vect1625.i = insertelement <16 x double> %temp.vect1624.i, double %775, i32 14
  %temp.vect1626.i = insertelement <16 x double> %temp.vect1625.i, double %776, i32 15
  %777 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %778 = load i64* %777, align 8
  %779 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %780 = load i64* %779, align 8
  %781 = add i64 %778, %780
  %extract1594.i = add i64 %781, 3870720
  %782 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1594.i
  %ptrTypeCast1610.i = bitcast double addrspace(1)* %782 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect1626.i, <16 x double> addrspace(1)* %ptrTypeCast1610.i, align 8
  %783 = fmul <16 x double> %41, <double 0x4077BEDB7AE5796C, double 0x4077BEDB7AE5796C, double 0x4077BEDB7AE5796C, double 0x4077BEDB7AE5796C, double 0x4077BEDB7AE5796C, double 0x4077BEDB7AE5796C, double 0x4077BEDB7AE5796C, double 0x4077BEDB7AE5796C, double 0x4077BEDB7AE5796C, double 0x4077BEDB7AE5796C, double 0x4077BEDB7AE5796C, double 0x4077BEDB7AE5796C, double 0x4077BEDB7AE5796C, double 0x4077BEDB7AE5796C, double 0x4077BEDB7AE5796C, double 0x4077BEDB7AE5796C>
  %784 = fadd <16 x double> %783, <double 0x403D5F8CA9C70E47, double 0x403D5F8CA9C70E47, double 0x403D5F8CA9C70E47, double 0x403D5F8CA9C70E47, double 0x403D5F8CA9C70E47, double 0x403D5F8CA9C70E47, double 0x403D5F8CA9C70E47, double 0x403D5F8CA9C70E47, double 0x403D5F8CA9C70E47, double 0x403D5F8CA9C70E47, double 0x403D5F8CA9C70E47, double 0x403D5F8CA9C70E47, double 0x403D5F8CA9C70E47, double 0x403D5F8CA9C70E47, double 0x403D5F8CA9C70E47, double 0x403D5F8CA9C70E47>
  %extract1627.i = extractelement <16 x double> %784, i32 0
  %extract1628.i = extractelement <16 x double> %784, i32 1
  %extract1629.i = extractelement <16 x double> %784, i32 2
  %extract1630.i = extractelement <16 x double> %784, i32 3
  %extract1631.i = extractelement <16 x double> %784, i32 4
  %extract1632.i = extractelement <16 x double> %784, i32 5
  %extract1633.i = extractelement <16 x double> %784, i32 6
  %extract1634.i = extractelement <16 x double> %784, i32 7
  %extract1635.i = extractelement <16 x double> %784, i32 8
  %extract1636.i = extractelement <16 x double> %784, i32 9
  %extract1637.i = extractelement <16 x double> %784, i32 10
  %extract1638.i = extractelement <16 x double> %784, i32 11
  %extract1639.i = extractelement <16 x double> %784, i32 12
  %extract1640.i = extractelement <16 x double> %784, i32 13
  %extract1641.i = extractelement <16 x double> %784, i32 14
  %extract1642.i = extractelement <16 x double> %784, i32 15
  %785 = call double @_Z3expd(double %extract1627.i) nounwind
  %786 = call double @_Z3expd(double %extract1628.i) nounwind
  %787 = call double @_Z3expd(double %extract1629.i) nounwind
  %788 = call double @_Z3expd(double %extract1630.i) nounwind
  %789 = call double @_Z3expd(double %extract1631.i) nounwind
  %790 = call double @_Z3expd(double %extract1632.i) nounwind
  %791 = call double @_Z3expd(double %extract1633.i) nounwind
  %792 = call double @_Z3expd(double %extract1634.i) nounwind
  %793 = call double @_Z3expd(double %extract1635.i) nounwind
  %794 = call double @_Z3expd(double %extract1636.i) nounwind
  %795 = call double @_Z3expd(double %extract1637.i) nounwind
  %796 = call double @_Z3expd(double %extract1638.i) nounwind
  %797 = call double @_Z3expd(double %extract1639.i) nounwind
  %798 = call double @_Z3expd(double %extract1640.i) nounwind
  %799 = call double @_Z3expd(double %extract1641.i) nounwind
  %800 = call double @_Z3expd(double %extract1642.i) nounwind
  %temp.vect1662.i = insertelement <16 x double> undef, double %785, i32 0
  %temp.vect1663.i = insertelement <16 x double> %temp.vect1662.i, double %786, i32 1
  %temp.vect1664.i = insertelement <16 x double> %temp.vect1663.i, double %787, i32 2
  %temp.vect1665.i = insertelement <16 x double> %temp.vect1664.i, double %788, i32 3
  %temp.vect1666.i = insertelement <16 x double> %temp.vect1665.i, double %789, i32 4
  %temp.vect1667.i = insertelement <16 x double> %temp.vect1666.i, double %790, i32 5
  %temp.vect1668.i = insertelement <16 x double> %temp.vect1667.i, double %791, i32 6
  %temp.vect1669.i = insertelement <16 x double> %temp.vect1668.i, double %792, i32 7
  %temp.vect1670.i = insertelement <16 x double> %temp.vect1669.i, double %793, i32 8
  %temp.vect1671.i = insertelement <16 x double> %temp.vect1670.i, double %794, i32 9
  %temp.vect1672.i = insertelement <16 x double> %temp.vect1671.i, double %795, i32 10
  %temp.vect1673.i = insertelement <16 x double> %temp.vect1672.i, double %796, i32 11
  %temp.vect1674.i = insertelement <16 x double> %temp.vect1673.i, double %797, i32 12
  %temp.vect1675.i = insertelement <16 x double> %temp.vect1674.i, double %798, i32 13
  %temp.vect1676.i = insertelement <16 x double> %temp.vect1675.i, double %799, i32 14
  %temp.vect1677.i = insertelement <16 x double> %temp.vect1676.i, double %800, i32 15
  %801 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %802 = load i64* %801, align 8
  %803 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %804 = load i64* %803, align 8
  %805 = add i64 %802, %804
  %extract1645.i = add i64 %805, 3981312
  %806 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1645.i
  %ptrTypeCast1661.i = bitcast double addrspace(1)* %806 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect1677.i, <16 x double> addrspace(1)* %ptrTypeCast1661.i, align 8
  %807 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %808 = load i64* %807, align 8
  %809 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %810 = load i64* %809, align 8
  %811 = add i64 %808, %810
  %extract1680.i = add i64 %811, 4091904
  %812 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1680.i
  %ptrTypeCast1696.i = bitcast double addrspace(1)* %812 to <16 x double> addrspace(1)*
  store <16 x double> <double 3.300000e+13, double 3.300000e+13, double 3.300000e+13, double 3.300000e+13, double 3.300000e+13, double 3.300000e+13, double 3.300000e+13, double 3.300000e+13, double 3.300000e+13, double 3.300000e+13, double 3.300000e+13, double 3.300000e+13, double 3.300000e+13, double 3.300000e+13, double 3.300000e+13, double 3.300000e+13>, <16 x double> addrspace(1)* %ptrTypeCast1696.i, align 8
  %813 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %814 = load i64* %813, align 8
  %815 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %816 = load i64* %815, align 8
  %817 = add i64 %814, %816
  %extract1699.i = add i64 %817, 4202496
  %818 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1699.i
  %ptrTypeCast1715.i = bitcast double addrspace(1)* %818 to <16 x double> addrspace(1)*
  store <16 x double> <double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast1715.i, align 8
  %819 = fmul <16 x double> %41, <double 0x4075B383137B0707, double 0x4075B383137B0707, double 0x4075B383137B0707, double 0x4075B383137B0707, double 0x4075B383137B0707, double 0x4075B383137B0707, double 0x4075B383137B0707, double 0x4075B383137B0707, double 0x4075B383137B0707, double 0x4075B383137B0707, double 0x4075B383137B0707, double 0x4075B383137B0707, double 0x4075B383137B0707, double 0x4075B383137B0707, double 0x4075B383137B0707, double 0x4075B383137B0707>
  %820 = fsub <16 x double> <double 0x403CDAD3F1843C3A, double 0x403CDAD3F1843C3A, double 0x403CDAD3F1843C3A, double 0x403CDAD3F1843C3A, double 0x403CDAD3F1843C3A, double 0x403CDAD3F1843C3A, double 0x403CDAD3F1843C3A, double 0x403CDAD3F1843C3A, double 0x403CDAD3F1843C3A, double 0x403CDAD3F1843C3A, double 0x403CDAD3F1843C3A, double 0x403CDAD3F1843C3A, double 0x403CDAD3F1843C3A, double 0x403CDAD3F1843C3A, double 0x403CDAD3F1843C3A, double 0x403CDAD3F1843C3A>, %819
  %extract1716.i = extractelement <16 x double> %820, i32 0
  %extract1717.i = extractelement <16 x double> %820, i32 1
  %extract1718.i = extractelement <16 x double> %820, i32 2
  %extract1719.i = extractelement <16 x double> %820, i32 3
  %extract1720.i = extractelement <16 x double> %820, i32 4
  %extract1721.i = extractelement <16 x double> %820, i32 5
  %extract1722.i = extractelement <16 x double> %820, i32 6
  %extract1723.i = extractelement <16 x double> %820, i32 7
  %extract1724.i = extractelement <16 x double> %820, i32 8
  %extract1725.i = extractelement <16 x double> %820, i32 9
  %extract1726.i = extractelement <16 x double> %820, i32 10
  %extract1727.i = extractelement <16 x double> %820, i32 11
  %extract1728.i = extractelement <16 x double> %820, i32 12
  %extract1729.i = extractelement <16 x double> %820, i32 13
  %extract1730.i = extractelement <16 x double> %820, i32 14
  %extract1731.i = extractelement <16 x double> %820, i32 15
  %821 = call double @_Z3expd(double %extract1716.i) nounwind
  %822 = call double @_Z3expd(double %extract1717.i) nounwind
  %823 = call double @_Z3expd(double %extract1718.i) nounwind
  %824 = call double @_Z3expd(double %extract1719.i) nounwind
  %825 = call double @_Z3expd(double %extract1720.i) nounwind
  %826 = call double @_Z3expd(double %extract1721.i) nounwind
  %827 = call double @_Z3expd(double %extract1722.i) nounwind
  %828 = call double @_Z3expd(double %extract1723.i) nounwind
  %829 = call double @_Z3expd(double %extract1724.i) nounwind
  %830 = call double @_Z3expd(double %extract1725.i) nounwind
  %831 = call double @_Z3expd(double %extract1726.i) nounwind
  %832 = call double @_Z3expd(double %extract1727.i) nounwind
  %833 = call double @_Z3expd(double %extract1728.i) nounwind
  %834 = call double @_Z3expd(double %extract1729.i) nounwind
  %835 = call double @_Z3expd(double %extract1730.i) nounwind
  %836 = call double @_Z3expd(double %extract1731.i) nounwind
  %temp.vect1751.i = insertelement <16 x double> undef, double %821, i32 0
  %temp.vect1752.i = insertelement <16 x double> %temp.vect1751.i, double %822, i32 1
  %temp.vect1753.i = insertelement <16 x double> %temp.vect1752.i, double %823, i32 2
  %temp.vect1754.i = insertelement <16 x double> %temp.vect1753.i, double %824, i32 3
  %temp.vect1755.i = insertelement <16 x double> %temp.vect1754.i, double %825, i32 4
  %temp.vect1756.i = insertelement <16 x double> %temp.vect1755.i, double %826, i32 5
  %temp.vect1757.i = insertelement <16 x double> %temp.vect1756.i, double %827, i32 6
  %temp.vect1758.i = insertelement <16 x double> %temp.vect1757.i, double %828, i32 7
  %temp.vect1759.i = insertelement <16 x double> %temp.vect1758.i, double %829, i32 8
  %temp.vect1760.i = insertelement <16 x double> %temp.vect1759.i, double %830, i32 9
  %temp.vect1761.i = insertelement <16 x double> %temp.vect1760.i, double %831, i32 10
  %temp.vect1762.i = insertelement <16 x double> %temp.vect1761.i, double %832, i32 11
  %temp.vect1763.i = insertelement <16 x double> %temp.vect1762.i, double %833, i32 12
  %temp.vect1764.i = insertelement <16 x double> %temp.vect1763.i, double %834, i32 13
  %temp.vect1765.i = insertelement <16 x double> %temp.vect1764.i, double %835, i32 14
  %temp.vect1766.i = insertelement <16 x double> %temp.vect1765.i, double %836, i32 15
  %837 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %838 = load i64* %837, align 8
  %839 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %840 = load i64* %839, align 8
  %841 = add i64 %838, %840
  %extract1734.i = add i64 %841, 4313088
  %842 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1734.i
  %ptrTypeCast1750.i = bitcast double addrspace(1)* %842 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect1766.i, <16 x double> addrspace(1)* %ptrTypeCast1750.i, align 8
  %843 = fmul <16 x double> %temp.vect97.i, <double 4.800000e-01, double 4.800000e-01, double 4.800000e-01, double 4.800000e-01, double 4.800000e-01, double 4.800000e-01, double 4.800000e-01, double 4.800000e-01, double 4.800000e-01, double 4.800000e-01, double 4.800000e-01, double 4.800000e-01, double 4.800000e-01, double 4.800000e-01, double 4.800000e-01, double 4.800000e-01>
  %844 = fadd <16 x double> %843, <double 0x403BB79A572EBAFE, double 0x403BB79A572EBAFE, double 0x403BB79A572EBAFE, double 0x403BB79A572EBAFE, double 0x403BB79A572EBAFE, double 0x403BB79A572EBAFE, double 0x403BB79A572EBAFE, double 0x403BB79A572EBAFE, double 0x403BB79A572EBAFE, double 0x403BB79A572EBAFE, double 0x403BB79A572EBAFE, double 0x403BB79A572EBAFE, double 0x403BB79A572EBAFE, double 0x403BB79A572EBAFE, double 0x403BB79A572EBAFE, double 0x403BB79A572EBAFE>
  %845 = fmul <16 x double> %41, <double 0x40605AC33F85510D, double 0x40605AC33F85510D, double 0x40605AC33F85510D, double 0x40605AC33F85510D, double 0x40605AC33F85510D, double 0x40605AC33F85510D, double 0x40605AC33F85510D, double 0x40605AC33F85510D, double 0x40605AC33F85510D, double 0x40605AC33F85510D, double 0x40605AC33F85510D, double 0x40605AC33F85510D, double 0x40605AC33F85510D, double 0x40605AC33F85510D, double 0x40605AC33F85510D, double 0x40605AC33F85510D>
  %846 = fadd <16 x double> %844, %845
  %extract1767.i = extractelement <16 x double> %846, i32 0
  %extract1768.i = extractelement <16 x double> %846, i32 1
  %extract1769.i = extractelement <16 x double> %846, i32 2
  %extract1770.i = extractelement <16 x double> %846, i32 3
  %extract1771.i = extractelement <16 x double> %846, i32 4
  %extract1772.i = extractelement <16 x double> %846, i32 5
  %extract1773.i = extractelement <16 x double> %846, i32 6
  %extract1774.i = extractelement <16 x double> %846, i32 7
  %extract1775.i = extractelement <16 x double> %846, i32 8
  %extract1776.i = extractelement <16 x double> %846, i32 9
  %extract1777.i = extractelement <16 x double> %846, i32 10
  %extract1778.i = extractelement <16 x double> %846, i32 11
  %extract1779.i = extractelement <16 x double> %846, i32 12
  %extract1780.i = extractelement <16 x double> %846, i32 13
  %extract1781.i = extractelement <16 x double> %846, i32 14
  %extract1782.i = extractelement <16 x double> %846, i32 15
  %847 = call double @_Z3expd(double %extract1767.i) nounwind
  %848 = call double @_Z3expd(double %extract1768.i) nounwind
  %849 = call double @_Z3expd(double %extract1769.i) nounwind
  %850 = call double @_Z3expd(double %extract1770.i) nounwind
  %851 = call double @_Z3expd(double %extract1771.i) nounwind
  %852 = call double @_Z3expd(double %extract1772.i) nounwind
  %853 = call double @_Z3expd(double %extract1773.i) nounwind
  %854 = call double @_Z3expd(double %extract1774.i) nounwind
  %855 = call double @_Z3expd(double %extract1775.i) nounwind
  %856 = call double @_Z3expd(double %extract1776.i) nounwind
  %857 = call double @_Z3expd(double %extract1777.i) nounwind
  %858 = call double @_Z3expd(double %extract1778.i) nounwind
  %859 = call double @_Z3expd(double %extract1779.i) nounwind
  %860 = call double @_Z3expd(double %extract1780.i) nounwind
  %861 = call double @_Z3expd(double %extract1781.i) nounwind
  %862 = call double @_Z3expd(double %extract1782.i) nounwind
  %temp.vect1802.i = insertelement <16 x double> undef, double %847, i32 0
  %temp.vect1803.i = insertelement <16 x double> %temp.vect1802.i, double %848, i32 1
  %temp.vect1804.i = insertelement <16 x double> %temp.vect1803.i, double %849, i32 2
  %temp.vect1805.i = insertelement <16 x double> %temp.vect1804.i, double %850, i32 3
  %temp.vect1806.i = insertelement <16 x double> %temp.vect1805.i, double %851, i32 4
  %temp.vect1807.i = insertelement <16 x double> %temp.vect1806.i, double %852, i32 5
  %temp.vect1808.i = insertelement <16 x double> %temp.vect1807.i, double %853, i32 6
  %temp.vect1809.i = insertelement <16 x double> %temp.vect1808.i, double %854, i32 7
  %temp.vect1810.i = insertelement <16 x double> %temp.vect1809.i, double %855, i32 8
  %temp.vect1811.i = insertelement <16 x double> %temp.vect1810.i, double %856, i32 9
  %temp.vect1812.i = insertelement <16 x double> %temp.vect1811.i, double %857, i32 10
  %temp.vect1813.i = insertelement <16 x double> %temp.vect1812.i, double %858, i32 11
  %temp.vect1814.i = insertelement <16 x double> %temp.vect1813.i, double %859, i32 12
  %temp.vect1815.i = insertelement <16 x double> %temp.vect1814.i, double %860, i32 13
  %temp.vect1816.i = insertelement <16 x double> %temp.vect1815.i, double %861, i32 14
  %temp.vect1817.i = insertelement <16 x double> %temp.vect1816.i, double %862, i32 15
  %863 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %864 = load i64* %863, align 8
  %865 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %866 = load i64* %865, align 8
  %867 = add i64 %864, %866
  %extract1785.i = add i64 %867, 4423680
  %868 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1785.i
  %ptrTypeCast1801.i = bitcast double addrspace(1)* %868 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect1817.i, <16 x double> addrspace(1)* %ptrTypeCast1801.i, align 8
  %869 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %870 = load i64* %869, align 8
  %871 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %872 = load i64* %871, align 8
  %873 = add i64 %870, %872
  %extract1820.i = add i64 %873, 4534272
  %874 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1820.i
  %ptrTypeCast1836.i = bitcast double addrspace(1)* %874 to <16 x double> addrspace(1)*
  store <16 x double> <double 7.340000e+13, double 7.340000e+13, double 7.340000e+13, double 7.340000e+13, double 7.340000e+13, double 7.340000e+13, double 7.340000e+13, double 7.340000e+13, double 7.340000e+13, double 7.340000e+13, double 7.340000e+13, double 7.340000e+13, double 7.340000e+13, double 7.340000e+13, double 7.340000e+13, double 7.340000e+13>, <16 x double> addrspace(1)* %ptrTypeCast1836.i, align 8
  %875 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %876 = load i64* %875, align 8
  %877 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %878 = load i64* %877, align 8
  %879 = add i64 %876, %878
  %extract1839.i = add i64 %879, 4644864
  %880 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1839.i
  %ptrTypeCast1855.i = bitcast double addrspace(1)* %880 to <16 x double> addrspace(1)*
  store <16 x double> <double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast1855.i, align 8
  %881 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %882 = load i64* %881, align 8
  %883 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %884 = load i64* %883, align 8
  %885 = add i64 %882, %884
  %extract1858.i = add i64 %885, 4755456
  %886 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1858.i
  %ptrTypeCast1874.i = bitcast double addrspace(1)* %886 to <16 x double> addrspace(1)*
  store <16 x double> <double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast1874.i, align 8
  %887 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %888 = load i64* %887, align 8
  %889 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %890 = load i64* %889, align 8
  %891 = add i64 %888, %890
  %extract1877.i = add i64 %891, 4866048
  %892 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1877.i
  %ptrTypeCast1893.i = bitcast double addrspace(1)* %892 to <16 x double> addrspace(1)*
  store <16 x double> <double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast1893.i, align 8
  %893 = fsub <16 x double> <double 0x4043E28B9778572A, double 0x4043E28B9778572A, double 0x4043E28B9778572A, double 0x4043E28B9778572A, double 0x4043E28B9778572A, double 0x4043E28B9778572A, double 0x4043E28B9778572A, double 0x4043E28B9778572A, double 0x4043E28B9778572A, double 0x4043E28B9778572A, double 0x4043E28B9778572A, double 0x4043E28B9778572A, double 0x4043E28B9778572A, double 0x4043E28B9778572A, double 0x4043E28B9778572A, double 0x4043E28B9778572A>, %temp.vect97.i
  %894 = fmul <16 x double> %41, <double 0x40C0B557780346DC, double 0x40C0B557780346DC, double 0x40C0B557780346DC, double 0x40C0B557780346DC, double 0x40C0B557780346DC, double 0x40C0B557780346DC, double 0x40C0B557780346DC, double 0x40C0B557780346DC, double 0x40C0B557780346DC, double 0x40C0B557780346DC, double 0x40C0B557780346DC, double 0x40C0B557780346DC, double 0x40C0B557780346DC, double 0x40C0B557780346DC, double 0x40C0B557780346DC, double 0x40C0B557780346DC>
  %895 = fsub <16 x double> %893, %894
  %extract1894.i = extractelement <16 x double> %895, i32 0
  %extract1895.i = extractelement <16 x double> %895, i32 1
  %extract1896.i = extractelement <16 x double> %895, i32 2
  %extract1897.i = extractelement <16 x double> %895, i32 3
  %extract1898.i = extractelement <16 x double> %895, i32 4
  %extract1899.i = extractelement <16 x double> %895, i32 5
  %extract1900.i = extractelement <16 x double> %895, i32 6
  %extract1901.i = extractelement <16 x double> %895, i32 7
  %extract1902.i = extractelement <16 x double> %895, i32 8
  %extract1903.i = extractelement <16 x double> %895, i32 9
  %extract1904.i = extractelement <16 x double> %895, i32 10
  %extract1905.i = extractelement <16 x double> %895, i32 11
  %extract1906.i = extractelement <16 x double> %895, i32 12
  %extract1907.i = extractelement <16 x double> %895, i32 13
  %extract1908.i = extractelement <16 x double> %895, i32 14
  %extract1909.i = extractelement <16 x double> %895, i32 15
  %896 = call double @_Z3expd(double %extract1894.i) nounwind
  %897 = call double @_Z3expd(double %extract1895.i) nounwind
  %898 = call double @_Z3expd(double %extract1896.i) nounwind
  %899 = call double @_Z3expd(double %extract1897.i) nounwind
  %900 = call double @_Z3expd(double %extract1898.i) nounwind
  %901 = call double @_Z3expd(double %extract1899.i) nounwind
  %902 = call double @_Z3expd(double %extract1900.i) nounwind
  %903 = call double @_Z3expd(double %extract1901.i) nounwind
  %904 = call double @_Z3expd(double %extract1902.i) nounwind
  %905 = call double @_Z3expd(double %extract1903.i) nounwind
  %906 = call double @_Z3expd(double %extract1904.i) nounwind
  %907 = call double @_Z3expd(double %extract1905.i) nounwind
  %908 = call double @_Z3expd(double %extract1906.i) nounwind
  %909 = call double @_Z3expd(double %extract1907.i) nounwind
  %910 = call double @_Z3expd(double %extract1908.i) nounwind
  %911 = call double @_Z3expd(double %extract1909.i) nounwind
  %temp.vect1929.i = insertelement <16 x double> undef, double %896, i32 0
  %temp.vect1930.i = insertelement <16 x double> %temp.vect1929.i, double %897, i32 1
  %temp.vect1931.i = insertelement <16 x double> %temp.vect1930.i, double %898, i32 2
  %temp.vect1932.i = insertelement <16 x double> %temp.vect1931.i, double %899, i32 3
  %temp.vect1933.i = insertelement <16 x double> %temp.vect1932.i, double %900, i32 4
  %temp.vect1934.i = insertelement <16 x double> %temp.vect1933.i, double %901, i32 5
  %temp.vect1935.i = insertelement <16 x double> %temp.vect1934.i, double %902, i32 6
  %temp.vect1936.i = insertelement <16 x double> %temp.vect1935.i, double %903, i32 7
  %temp.vect1937.i = insertelement <16 x double> %temp.vect1936.i, double %904, i32 8
  %temp.vect1938.i = insertelement <16 x double> %temp.vect1937.i, double %905, i32 9
  %temp.vect1939.i = insertelement <16 x double> %temp.vect1938.i, double %906, i32 10
  %temp.vect1940.i = insertelement <16 x double> %temp.vect1939.i, double %907, i32 11
  %temp.vect1941.i = insertelement <16 x double> %temp.vect1940.i, double %908, i32 12
  %temp.vect1942.i = insertelement <16 x double> %temp.vect1941.i, double %909, i32 13
  %temp.vect1943.i = insertelement <16 x double> %temp.vect1942.i, double %910, i32 14
  %temp.vect1944.i = insertelement <16 x double> %temp.vect1943.i, double %911, i32 15
  %912 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %913 = load i64* %912, align 8
  %914 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %915 = load i64* %914, align 8
  %916 = add i64 %913, %915
  %extract1912.i = add i64 %916, 4976640
  %917 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1912.i
  %ptrTypeCast1928.i = bitcast double addrspace(1)* %917 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect1944.i, <16 x double> addrspace(1)* %ptrTypeCast1928.i, align 8
  %918 = fmul <16 x double> %41, <double 0x4069292C6045BAF5, double 0x4069292C6045BAF5, double 0x4069292C6045BAF5, double 0x4069292C6045BAF5, double 0x4069292C6045BAF5, double 0x4069292C6045BAF5, double 0x4069292C6045BAF5, double 0x4069292C6045BAF5, double 0x4069292C6045BAF5, double 0x4069292C6045BAF5, double 0x4069292C6045BAF5, double 0x4069292C6045BAF5, double 0x4069292C6045BAF5, double 0x4069292C6045BAF5, double 0x4069292C6045BAF5, double 0x4069292C6045BAF5>
  %919 = fsub <16 x double> <double 0x403DA8BF53678621, double 0x403DA8BF53678621, double 0x403DA8BF53678621, double 0x403DA8BF53678621, double 0x403DA8BF53678621, double 0x403DA8BF53678621, double 0x403DA8BF53678621, double 0x403DA8BF53678621, double 0x403DA8BF53678621, double 0x403DA8BF53678621, double 0x403DA8BF53678621, double 0x403DA8BF53678621, double 0x403DA8BF53678621, double 0x403DA8BF53678621, double 0x403DA8BF53678621, double 0x403DA8BF53678621>, %918
  %extract1945.i = extractelement <16 x double> %919, i32 0
  %extract1946.i = extractelement <16 x double> %919, i32 1
  %extract1947.i = extractelement <16 x double> %919, i32 2
  %extract1948.i = extractelement <16 x double> %919, i32 3
  %extract1949.i = extractelement <16 x double> %919, i32 4
  %extract1950.i = extractelement <16 x double> %919, i32 5
  %extract1951.i = extractelement <16 x double> %919, i32 6
  %extract1952.i = extractelement <16 x double> %919, i32 7
  %extract1953.i = extractelement <16 x double> %919, i32 8
  %extract1954.i = extractelement <16 x double> %919, i32 9
  %extract1955.i = extractelement <16 x double> %919, i32 10
  %extract1956.i = extractelement <16 x double> %919, i32 11
  %extract1957.i = extractelement <16 x double> %919, i32 12
  %extract1958.i = extractelement <16 x double> %919, i32 13
  %extract1959.i = extractelement <16 x double> %919, i32 14
  %extract1960.i = extractelement <16 x double> %919, i32 15
  %920 = call double @_Z3expd(double %extract1945.i) nounwind
  %921 = call double @_Z3expd(double %extract1946.i) nounwind
  %922 = call double @_Z3expd(double %extract1947.i) nounwind
  %923 = call double @_Z3expd(double %extract1948.i) nounwind
  %924 = call double @_Z3expd(double %extract1949.i) nounwind
  %925 = call double @_Z3expd(double %extract1950.i) nounwind
  %926 = call double @_Z3expd(double %extract1951.i) nounwind
  %927 = call double @_Z3expd(double %extract1952.i) nounwind
  %928 = call double @_Z3expd(double %extract1953.i) nounwind
  %929 = call double @_Z3expd(double %extract1954.i) nounwind
  %930 = call double @_Z3expd(double %extract1955.i) nounwind
  %931 = call double @_Z3expd(double %extract1956.i) nounwind
  %932 = call double @_Z3expd(double %extract1957.i) nounwind
  %933 = call double @_Z3expd(double %extract1958.i) nounwind
  %934 = call double @_Z3expd(double %extract1959.i) nounwind
  %935 = call double @_Z3expd(double %extract1960.i) nounwind
  %temp.vect1980.i = insertelement <16 x double> undef, double %920, i32 0
  %temp.vect1981.i = insertelement <16 x double> %temp.vect1980.i, double %921, i32 1
  %temp.vect1982.i = insertelement <16 x double> %temp.vect1981.i, double %922, i32 2
  %temp.vect1983.i = insertelement <16 x double> %temp.vect1982.i, double %923, i32 3
  %temp.vect1984.i = insertelement <16 x double> %temp.vect1983.i, double %924, i32 4
  %temp.vect1985.i = insertelement <16 x double> %temp.vect1984.i, double %925, i32 5
  %temp.vect1986.i = insertelement <16 x double> %temp.vect1985.i, double %926, i32 6
  %temp.vect1987.i = insertelement <16 x double> %temp.vect1986.i, double %927, i32 7
  %temp.vect1988.i = insertelement <16 x double> %temp.vect1987.i, double %928, i32 8
  %temp.vect1989.i = insertelement <16 x double> %temp.vect1988.i, double %929, i32 9
  %temp.vect1990.i = insertelement <16 x double> %temp.vect1989.i, double %930, i32 10
  %temp.vect1991.i = insertelement <16 x double> %temp.vect1990.i, double %931, i32 11
  %temp.vect1992.i = insertelement <16 x double> %temp.vect1991.i, double %932, i32 12
  %temp.vect1993.i = insertelement <16 x double> %temp.vect1992.i, double %933, i32 13
  %temp.vect1994.i = insertelement <16 x double> %temp.vect1993.i, double %934, i32 14
  %temp.vect1995.i = insertelement <16 x double> %temp.vect1994.i, double %935, i32 15
  %936 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %937 = load i64* %936, align 8
  %938 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %939 = load i64* %938, align 8
  %940 = add i64 %937, %939
  %extract1963.i = add i64 %940, 5087232
  %941 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1963.i
  %ptrTypeCast1979.i = bitcast double addrspace(1)* %941 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect1995.i, <16 x double> addrspace(1)* %ptrTypeCast1979.i, align 8
  %942 = fmul <16 x double> %temp.vect97.i, <double 8.000000e-01, double 8.000000e-01, double 8.000000e-01, double 8.000000e-01, double 8.000000e-01, double 8.000000e-01, double 8.000000e-01, double 8.000000e-01, double 8.000000e-01, double 8.000000e-01, double 8.000000e-01, double 8.000000e-01, double 8.000000e-01, double 8.000000e-01, double 8.000000e-01, double 8.000000e-01>
  %943 = fsub <16 x double> <double 0x4042E0FABF4E5F09, double 0x4042E0FABF4E5F09, double 0x4042E0FABF4E5F09, double 0x4042E0FABF4E5F09, double 0x4042E0FABF4E5F09, double 0x4042E0FABF4E5F09, double 0x4042E0FABF4E5F09, double 0x4042E0FABF4E5F09, double 0x4042E0FABF4E5F09, double 0x4042E0FABF4E5F09, double 0x4042E0FABF4E5F09, double 0x4042E0FABF4E5F09, double 0x4042E0FABF4E5F09, double 0x4042E0FABF4E5F09, double 0x4042E0FABF4E5F09, double 0x4042E0FABF4E5F09>, %942
  %extract1996.i = extractelement <16 x double> %943, i32 0
  %extract1997.i = extractelement <16 x double> %943, i32 1
  %extract1998.i = extractelement <16 x double> %943, i32 2
  %extract1999.i = extractelement <16 x double> %943, i32 3
  %extract2000.i = extractelement <16 x double> %943, i32 4
  %extract2001.i = extractelement <16 x double> %943, i32 5
  %extract2002.i = extractelement <16 x double> %943, i32 6
  %extract2003.i = extractelement <16 x double> %943, i32 7
  %extract2004.i = extractelement <16 x double> %943, i32 8
  %extract2005.i = extractelement <16 x double> %943, i32 9
  %extract2006.i = extractelement <16 x double> %943, i32 10
  %extract2007.i = extractelement <16 x double> %943, i32 11
  %extract2008.i = extractelement <16 x double> %943, i32 12
  %extract2009.i = extractelement <16 x double> %943, i32 13
  %extract2010.i = extractelement <16 x double> %943, i32 14
  %extract2011.i = extractelement <16 x double> %943, i32 15
  %944 = call double @_Z3expd(double %extract1996.i) nounwind
  %945 = call double @_Z3expd(double %extract1997.i) nounwind
  %946 = call double @_Z3expd(double %extract1998.i) nounwind
  %947 = call double @_Z3expd(double %extract1999.i) nounwind
  %948 = call double @_Z3expd(double %extract2000.i) nounwind
  %949 = call double @_Z3expd(double %extract2001.i) nounwind
  %950 = call double @_Z3expd(double %extract2002.i) nounwind
  %951 = call double @_Z3expd(double %extract2003.i) nounwind
  %952 = call double @_Z3expd(double %extract2004.i) nounwind
  %953 = call double @_Z3expd(double %extract2005.i) nounwind
  %954 = call double @_Z3expd(double %extract2006.i) nounwind
  %955 = call double @_Z3expd(double %extract2007.i) nounwind
  %956 = call double @_Z3expd(double %extract2008.i) nounwind
  %957 = call double @_Z3expd(double %extract2009.i) nounwind
  %958 = call double @_Z3expd(double %extract2010.i) nounwind
  %959 = call double @_Z3expd(double %extract2011.i) nounwind
  %temp.vect2031.i = insertelement <16 x double> undef, double %944, i32 0
  %temp.vect2032.i = insertelement <16 x double> %temp.vect2031.i, double %945, i32 1
  %temp.vect2033.i = insertelement <16 x double> %temp.vect2032.i, double %946, i32 2
  %temp.vect2034.i = insertelement <16 x double> %temp.vect2033.i, double %947, i32 3
  %temp.vect2035.i = insertelement <16 x double> %temp.vect2034.i, double %948, i32 4
  %temp.vect2036.i = insertelement <16 x double> %temp.vect2035.i, double %949, i32 5
  %temp.vect2037.i = insertelement <16 x double> %temp.vect2036.i, double %950, i32 6
  %temp.vect2038.i = insertelement <16 x double> %temp.vect2037.i, double %951, i32 7
  %temp.vect2039.i = insertelement <16 x double> %temp.vect2038.i, double %952, i32 8
  %temp.vect2040.i = insertelement <16 x double> %temp.vect2039.i, double %953, i32 9
  %temp.vect2041.i = insertelement <16 x double> %temp.vect2040.i, double %954, i32 10
  %temp.vect2042.i = insertelement <16 x double> %temp.vect2041.i, double %955, i32 11
  %temp.vect2043.i = insertelement <16 x double> %temp.vect2042.i, double %956, i32 12
  %temp.vect2044.i = insertelement <16 x double> %temp.vect2043.i, double %957, i32 13
  %temp.vect2045.i = insertelement <16 x double> %temp.vect2044.i, double %958, i32 14
  %temp.vect2046.i = insertelement <16 x double> %temp.vect2045.i, double %959, i32 15
  %960 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %961 = load i64* %960, align 8
  %962 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %963 = load i64* %962, align 8
  %964 = add i64 %961, %963
  %extract2014.i = add i64 %964, 5197824
  %965 = getelementptr inbounds double addrspace(1)* %4, i64 %extract2014.i
  %ptrTypeCast2030.i = bitcast double addrspace(1)* %965 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect2046.i, <16 x double> addrspace(1)* %ptrTypeCast2030.i, align 8
  %966 = fadd <16 x double> %498, <double 0x402A3EA66A627469, double 0x402A3EA66A627469, double 0x402A3EA66A627469, double 0x402A3EA66A627469, double 0x402A3EA66A627469, double 0x402A3EA66A627469, double 0x402A3EA66A627469, double 0x402A3EA66A627469, double 0x402A3EA66A627469, double 0x402A3EA66A627469, double 0x402A3EA66A627469, double 0x402A3EA66A627469, double 0x402A3EA66A627469, double 0x402A3EA66A627469, double 0x402A3EA66A627469, double 0x402A3EA66A627469>
  %967 = fmul <16 x double> %41, <double 0x40AC6C8355475A32, double 0x40AC6C8355475A32, double 0x40AC6C8355475A32, double 0x40AC6C8355475A32, double 0x40AC6C8355475A32, double 0x40AC6C8355475A32, double 0x40AC6C8355475A32, double 0x40AC6C8355475A32, double 0x40AC6C8355475A32, double 0x40AC6C8355475A32, double 0x40AC6C8355475A32, double 0x40AC6C8355475A32, double 0x40AC6C8355475A32, double 0x40AC6C8355475A32, double 0x40AC6C8355475A32, double 0x40AC6C8355475A32>
  %968 = fsub <16 x double> %966, %967
  %extract2047.i = extractelement <16 x double> %968, i32 0
  %extract2048.i = extractelement <16 x double> %968, i32 1
  %extract2049.i = extractelement <16 x double> %968, i32 2
  %extract2050.i = extractelement <16 x double> %968, i32 3
  %extract2051.i = extractelement <16 x double> %968, i32 4
  %extract2052.i = extractelement <16 x double> %968, i32 5
  %extract2053.i = extractelement <16 x double> %968, i32 6
  %extract2054.i = extractelement <16 x double> %968, i32 7
  %extract2055.i = extractelement <16 x double> %968, i32 8
  %extract2056.i = extractelement <16 x double> %968, i32 9
  %extract2057.i = extractelement <16 x double> %968, i32 10
  %extract2058.i = extractelement <16 x double> %968, i32 11
  %extract2059.i = extractelement <16 x double> %968, i32 12
  %extract2060.i = extractelement <16 x double> %968, i32 13
  %extract2061.i = extractelement <16 x double> %968, i32 14
  %extract2062.i = extractelement <16 x double> %968, i32 15
  %969 = call double @_Z3expd(double %extract2047.i) nounwind
  %970 = call double @_Z3expd(double %extract2048.i) nounwind
  %971 = call double @_Z3expd(double %extract2049.i) nounwind
  %972 = call double @_Z3expd(double %extract2050.i) nounwind
  %973 = call double @_Z3expd(double %extract2051.i) nounwind
  %974 = call double @_Z3expd(double %extract2052.i) nounwind
  %975 = call double @_Z3expd(double %extract2053.i) nounwind
  %976 = call double @_Z3expd(double %extract2054.i) nounwind
  %977 = call double @_Z3expd(double %extract2055.i) nounwind
  %978 = call double @_Z3expd(double %extract2056.i) nounwind
  %979 = call double @_Z3expd(double %extract2057.i) nounwind
  %980 = call double @_Z3expd(double %extract2058.i) nounwind
  %981 = call double @_Z3expd(double %extract2059.i) nounwind
  %982 = call double @_Z3expd(double %extract2060.i) nounwind
  %983 = call double @_Z3expd(double %extract2061.i) nounwind
  %984 = call double @_Z3expd(double %extract2062.i) nounwind
  %temp.vect2082.i = insertelement <16 x double> undef, double %969, i32 0
  %temp.vect2083.i = insertelement <16 x double> %temp.vect2082.i, double %970, i32 1
  %temp.vect2084.i = insertelement <16 x double> %temp.vect2083.i, double %971, i32 2
  %temp.vect2085.i = insertelement <16 x double> %temp.vect2084.i, double %972, i32 3
  %temp.vect2086.i = insertelement <16 x double> %temp.vect2085.i, double %973, i32 4
  %temp.vect2087.i = insertelement <16 x double> %temp.vect2086.i, double %974, i32 5
  %temp.vect2088.i = insertelement <16 x double> %temp.vect2087.i, double %975, i32 6
  %temp.vect2089.i = insertelement <16 x double> %temp.vect2088.i, double %976, i32 7
  %temp.vect2090.i = insertelement <16 x double> %temp.vect2089.i, double %977, i32 8
  %temp.vect2091.i = insertelement <16 x double> %temp.vect2090.i, double %978, i32 9
  %temp.vect2092.i = insertelement <16 x double> %temp.vect2091.i, double %979, i32 10
  %temp.vect2093.i = insertelement <16 x double> %temp.vect2092.i, double %980, i32 11
  %temp.vect2094.i = insertelement <16 x double> %temp.vect2093.i, double %981, i32 12
  %temp.vect2095.i = insertelement <16 x double> %temp.vect2094.i, double %982, i32 13
  %temp.vect2096.i = insertelement <16 x double> %temp.vect2095.i, double %983, i32 14
  %temp.vect2097.i = insertelement <16 x double> %temp.vect2096.i, double %984, i32 15
  %985 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %986 = load i64* %985, align 8
  %987 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %988 = load i64* %987, align 8
  %989 = add i64 %986, %988
  %extract2065.i = add i64 %989, 5308416
  %990 = getelementptr inbounds double addrspace(1)* %4, i64 %extract2065.i
  %ptrTypeCast2081.i = bitcast double addrspace(1)* %990 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect2097.i, <16 x double> addrspace(1)* %ptrTypeCast2081.i, align 8
  %991 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %992 = load i64* %991, align 8
  %993 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %994 = load i64* %993, align 8
  %995 = add i64 %992, %994
  %extract2100.i = add i64 %995, 5419008
  %996 = getelementptr inbounds double addrspace(1)* %4, i64 %extract2100.i
  %ptrTypeCast2116.i = bitcast double addrspace(1)* %996 to <16 x double> addrspace(1)*
  store <16 x double> <double 8.000000e+13, double 8.000000e+13, double 8.000000e+13, double 8.000000e+13, double 8.000000e+13, double 8.000000e+13, double 8.000000e+13, double 8.000000e+13, double 8.000000e+13, double 8.000000e+13, double 8.000000e+13, double 8.000000e+13, double 8.000000e+13, double 8.000000e+13, double 8.000000e+13, double 8.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast2116.i, align 8
  %997 = fmul <16 x double> %41, <double 0xC08796999A1FD157, double 0xC08796999A1FD157, double 0xC08796999A1FD157, double 0xC08796999A1FD157, double 0xC08796999A1FD157, double 0xC08796999A1FD157, double 0xC08796999A1FD157, double 0xC08796999A1FD157, double 0xC08796999A1FD157, double 0xC08796999A1FD157, double 0xC08796999A1FD157, double 0xC08796999A1FD157, double 0xC08796999A1FD157, double 0xC08796999A1FD157, double 0xC08796999A1FD157, double 0xC08796999A1FD157>
  %extract2117.i = extractelement <16 x double> %997, i32 0
  %extract2118.i = extractelement <16 x double> %997, i32 1
  %extract2119.i = extractelement <16 x double> %997, i32 2
  %extract2120.i = extractelement <16 x double> %997, i32 3
  %extract2121.i = extractelement <16 x double> %997, i32 4
  %extract2122.i = extractelement <16 x double> %997, i32 5
  %extract2123.i = extractelement <16 x double> %997, i32 6
  %extract2124.i = extractelement <16 x double> %997, i32 7
  %extract2125.i = extractelement <16 x double> %997, i32 8
  %extract2126.i = extractelement <16 x double> %997, i32 9
  %extract2127.i = extractelement <16 x double> %997, i32 10
  %extract2128.i = extractelement <16 x double> %997, i32 11
  %extract2129.i = extractelement <16 x double> %997, i32 12
  %extract2130.i = extractelement <16 x double> %997, i32 13
  %extract2131.i = extractelement <16 x double> %997, i32 14
  %extract2132.i = extractelement <16 x double> %997, i32 15
  %998 = call double @_Z3expd(double %extract2117.i) nounwind
  %999 = call double @_Z3expd(double %extract2118.i) nounwind
  %1000 = call double @_Z3expd(double %extract2119.i) nounwind
  %1001 = call double @_Z3expd(double %extract2120.i) nounwind
  %1002 = call double @_Z3expd(double %extract2121.i) nounwind
  %1003 = call double @_Z3expd(double %extract2122.i) nounwind
  %1004 = call double @_Z3expd(double %extract2123.i) nounwind
  %1005 = call double @_Z3expd(double %extract2124.i) nounwind
  %1006 = call double @_Z3expd(double %extract2125.i) nounwind
  %1007 = call double @_Z3expd(double %extract2126.i) nounwind
  %1008 = call double @_Z3expd(double %extract2127.i) nounwind
  %1009 = call double @_Z3expd(double %extract2128.i) nounwind
  %1010 = call double @_Z3expd(double %extract2129.i) nounwind
  %1011 = call double @_Z3expd(double %extract2130.i) nounwind
  %1012 = call double @_Z3expd(double %extract2131.i) nounwind
  %1013 = call double @_Z3expd(double %extract2132.i) nounwind
  %temp.vect2133.i = insertelement <16 x double> undef, double %998, i32 0
  %temp.vect2134.i = insertelement <16 x double> %temp.vect2133.i, double %999, i32 1
  %temp.vect2135.i = insertelement <16 x double> %temp.vect2134.i, double %1000, i32 2
  %temp.vect2136.i = insertelement <16 x double> %temp.vect2135.i, double %1001, i32 3
  %temp.vect2137.i = insertelement <16 x double> %temp.vect2136.i, double %1002, i32 4
  %temp.vect2138.i = insertelement <16 x double> %temp.vect2137.i, double %1003, i32 5
  %temp.vect2139.i = insertelement <16 x double> %temp.vect2138.i, double %1004, i32 6
  %temp.vect2140.i = insertelement <16 x double> %temp.vect2139.i, double %1005, i32 7
  %temp.vect2141.i = insertelement <16 x double> %temp.vect2140.i, double %1006, i32 8
  %temp.vect2142.i = insertelement <16 x double> %temp.vect2141.i, double %1007, i32 9
  %temp.vect2143.i = insertelement <16 x double> %temp.vect2142.i, double %1008, i32 10
  %temp.vect2144.i = insertelement <16 x double> %temp.vect2143.i, double %1009, i32 11
  %temp.vect2145.i = insertelement <16 x double> %temp.vect2144.i, double %1010, i32 12
  %temp.vect2146.i = insertelement <16 x double> %temp.vect2145.i, double %1011, i32 13
  %temp.vect2147.i = insertelement <16 x double> %temp.vect2146.i, double %1012, i32 14
  %temp.vect2148.i = insertelement <16 x double> %temp.vect2147.i, double %1013, i32 15
  %1014 = fmul <16 x double> %temp.vect2148.i, <double 1.056000e+13, double 1.056000e+13, double 1.056000e+13, double 1.056000e+13, double 1.056000e+13, double 1.056000e+13, double 1.056000e+13, double 1.056000e+13, double 1.056000e+13, double 1.056000e+13, double 1.056000e+13, double 1.056000e+13, double 1.056000e+13, double 1.056000e+13, double 1.056000e+13, double 1.056000e+13>
  %1015 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1016 = load i64* %1015, align 8
  %1017 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1018 = load i64* %1017, align 8
  %1019 = add i64 %1016, %1018
  %extract2151.i = add i64 %1019, 5529600
  %1020 = getelementptr inbounds double addrspace(1)* %4, i64 %extract2151.i
  %ptrTypeCast2167.i = bitcast double addrspace(1)* %1020 to <16 x double> addrspace(1)*
  store <16 x double> %1014, <16 x double> addrspace(1)* %ptrTypeCast2167.i, align 8
  %1021 = fmul <16 x double> %temp.vect2148.i, <double 2.640000e+12, double 2.640000e+12, double 2.640000e+12, double 2.640000e+12, double 2.640000e+12, double 2.640000e+12, double 2.640000e+12, double 2.640000e+12, double 2.640000e+12, double 2.640000e+12, double 2.640000e+12, double 2.640000e+12, double 2.640000e+12, double 2.640000e+12, double 2.640000e+12, double 2.640000e+12>
  %1022 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1023 = load i64* %1022, align 8
  %1024 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1025 = load i64* %1024, align 8
  %1026 = add i64 %1023, %1025
  %extract2170.i = add i64 %1026, 5640192
  %1027 = getelementptr inbounds double addrspace(1)* %4, i64 %extract2170.i
  %ptrTypeCast2186.i = bitcast double addrspace(1)* %1027 to <16 x double> addrspace(1)*
  store <16 x double> %1021, <16 x double> addrspace(1)* %ptrTypeCast2186.i, align 8
  %1028 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1029 = load i64* %1028, align 8
  %1030 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1031 = load i64* %1030, align 8
  %1032 = add i64 %1029, %1031
  %extract2189.i = add i64 %1032, 5750784
  %1033 = getelementptr inbounds double addrspace(1)* %4, i64 %extract2189.i
  %ptrTypeCast2205.i = bitcast double addrspace(1)* %1033 to <16 x double> addrspace(1)*
  store <16 x double> <double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast2205.i, align 8
  %1034 = fadd <16 x double> %498, <double 0x40303D852C244B39, double 0x40303D852C244B39, double 0x40303D852C244B39, double 0x40303D852C244B39, double 0x40303D852C244B39, double 0x40303D852C244B39, double 0x40303D852C244B39, double 0x40303D852C244B39, double 0x40303D852C244B39, double 0x40303D852C244B39, double 0x40303D852C244B39, double 0x40303D852C244B39, double 0x40303D852C244B39, double 0x40303D852C244B39, double 0x40303D852C244B39, double 0x40303D852C244B39>
  %1035 = fsub <16 x double> %1034, %621
  %extract2206.i = extractelement <16 x double> %1035, i32 0
  %extract2207.i = extractelement <16 x double> %1035, i32 1
  %extract2208.i = extractelement <16 x double> %1035, i32 2
  %extract2209.i = extractelement <16 x double> %1035, i32 3
  %extract2210.i = extractelement <16 x double> %1035, i32 4
  %extract2211.i = extractelement <16 x double> %1035, i32 5
  %extract2212.i = extractelement <16 x double> %1035, i32 6
  %extract2213.i = extractelement <16 x double> %1035, i32 7
  %extract2214.i = extractelement <16 x double> %1035, i32 8
  %extract2215.i = extractelement <16 x double> %1035, i32 9
  %extract2216.i = extractelement <16 x double> %1035, i32 10
  %extract2217.i = extractelement <16 x double> %1035, i32 11
  %extract2218.i = extractelement <16 x double> %1035, i32 12
  %extract2219.i = extractelement <16 x double> %1035, i32 13
  %extract2220.i = extractelement <16 x double> %1035, i32 14
  %extract2221.i = extractelement <16 x double> %1035, i32 15
  %1036 = call double @_Z3expd(double %extract2206.i) nounwind
  %1037 = call double @_Z3expd(double %extract2207.i) nounwind
  %1038 = call double @_Z3expd(double %extract2208.i) nounwind
  %1039 = call double @_Z3expd(double %extract2209.i) nounwind
  %1040 = call double @_Z3expd(double %extract2210.i) nounwind
  %1041 = call double @_Z3expd(double %extract2211.i) nounwind
  %1042 = call double @_Z3expd(double %extract2212.i) nounwind
  %1043 = call double @_Z3expd(double %extract2213.i) nounwind
  %1044 = call double @_Z3expd(double %extract2214.i) nounwind
  %1045 = call double @_Z3expd(double %extract2215.i) nounwind
  %1046 = call double @_Z3expd(double %extract2216.i) nounwind
  %1047 = call double @_Z3expd(double %extract2217.i) nounwind
  %1048 = call double @_Z3expd(double %extract2218.i) nounwind
  %1049 = call double @_Z3expd(double %extract2219.i) nounwind
  %1050 = call double @_Z3expd(double %extract2220.i) nounwind
  %1051 = call double @_Z3expd(double %extract2221.i) nounwind
  %temp.vect2241.i = insertelement <16 x double> undef, double %1036, i32 0
  %temp.vect2242.i = insertelement <16 x double> %temp.vect2241.i, double %1037, i32 1
  %temp.vect2243.i = insertelement <16 x double> %temp.vect2242.i, double %1038, i32 2
  %temp.vect2244.i = insertelement <16 x double> %temp.vect2243.i, double %1039, i32 3
  %temp.vect2245.i = insertelement <16 x double> %temp.vect2244.i, double %1040, i32 4
  %temp.vect2246.i = insertelement <16 x double> %temp.vect2245.i, double %1041, i32 5
  %temp.vect2247.i = insertelement <16 x double> %temp.vect2246.i, double %1042, i32 6
  %temp.vect2248.i = insertelement <16 x double> %temp.vect2247.i, double %1043, i32 7
  %temp.vect2249.i = insertelement <16 x double> %temp.vect2248.i, double %1044, i32 8
  %temp.vect2250.i = insertelement <16 x double> %temp.vect2249.i, double %1045, i32 9
  %temp.vect2251.i = insertelement <16 x double> %temp.vect2250.i, double %1046, i32 10
  %temp.vect2252.i = insertelement <16 x double> %temp.vect2251.i, double %1047, i32 11
  %temp.vect2253.i = insertelement <16 x double> %temp.vect2252.i, double %1048, i32 12
  %temp.vect2254.i = insertelement <16 x double> %temp.vect2253.i, double %1049, i32 13
  %temp.vect2255.i = insertelement <16 x double> %temp.vect2254.i, double %1050, i32 14
  %temp.vect2256.i = insertelement <16 x double> %temp.vect2255.i, double %1051, i32 15
  %1052 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1053 = load i64* %1052, align 8
  %1054 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1055 = load i64* %1054, align 8
  %1056 = add i64 %1053, %1055
  %extract2224.i = add i64 %1056, 5861376
  %1057 = getelementptr inbounds double addrspace(1)* %4, i64 %extract2224.i
  %ptrTypeCast2240.i = bitcast double addrspace(1)* %1057 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect2256.i, <16 x double> addrspace(1)* %ptrTypeCast2240.i, align 8
  %1058 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1059 = load i64* %1058, align 8
  %1060 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1061 = load i64* %1060, align 8
  %1062 = add i64 %1059, %1061
  %extract2259.i = add i64 %1062, 5971968
  %1063 = getelementptr inbounds double addrspace(1)* %4, i64 %extract2259.i
  %ptrTypeCast2275.i = bitcast double addrspace(1)* %1063 to <16 x double> addrspace(1)*
  store <16 x double> <double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast2275.i, align 8
  %1064 = fmul <16 x double> %temp.vect97.i, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %1065 = fadd <16 x double> %1064, <double 0x403B6B98C990016A, double 0x403B6B98C990016A, double 0x403B6B98C990016A, double 0x403B6B98C990016A, double 0x403B6B98C990016A, double 0x403B6B98C990016A, double 0x403B6B98C990016A, double 0x403B6B98C990016A, double 0x403B6B98C990016A, double 0x403B6B98C990016A, double 0x403B6B98C990016A, double 0x403B6B98C990016A, double 0x403B6B98C990016A, double 0x403B6B98C990016A, double 0x403B6B98C990016A, double 0x403B6B98C990016A>
  %1066 = fmul <16 x double> %41, <double 0x40A1BB03ABC94706, double 0x40A1BB03ABC94706, double 0x40A1BB03ABC94706, double 0x40A1BB03ABC94706, double 0x40A1BB03ABC94706, double 0x40A1BB03ABC94706, double 0x40A1BB03ABC94706, double 0x40A1BB03ABC94706, double 0x40A1BB03ABC94706, double 0x40A1BB03ABC94706, double 0x40A1BB03ABC94706, double 0x40A1BB03ABC94706, double 0x40A1BB03ABC94706, double 0x40A1BB03ABC94706, double 0x40A1BB03ABC94706, double 0x40A1BB03ABC94706>
  %1067 = fsub <16 x double> %1065, %1066
  %extract2276.i = extractelement <16 x double> %1067, i32 0
  %extract2277.i = extractelement <16 x double> %1067, i32 1
  %extract2278.i = extractelement <16 x double> %1067, i32 2
  %extract2279.i = extractelement <16 x double> %1067, i32 3
  %extract2280.i = extractelement <16 x double> %1067, i32 4
  %extract2281.i = extractelement <16 x double> %1067, i32 5
  %extract2282.i = extractelement <16 x double> %1067, i32 6
  %extract2283.i = extractelement <16 x double> %1067, i32 7
  %extract2284.i = extractelement <16 x double> %1067, i32 8
  %extract2285.i = extractelement <16 x double> %1067, i32 9
  %extract2286.i = extractelement <16 x double> %1067, i32 10
  %extract2287.i = extractelement <16 x double> %1067, i32 11
  %extract2288.i = extractelement <16 x double> %1067, i32 12
  %extract2289.i = extractelement <16 x double> %1067, i32 13
  %extract2290.i = extractelement <16 x double> %1067, i32 14
  %extract2291.i = extractelement <16 x double> %1067, i32 15
  %1068 = call double @_Z3expd(double %extract2276.i) nounwind
  %1069 = call double @_Z3expd(double %extract2277.i) nounwind
  %1070 = call double @_Z3expd(double %extract2278.i) nounwind
  %1071 = call double @_Z3expd(double %extract2279.i) nounwind
  %1072 = call double @_Z3expd(double %extract2280.i) nounwind
  %1073 = call double @_Z3expd(double %extract2281.i) nounwind
  %1074 = call double @_Z3expd(double %extract2282.i) nounwind
  %1075 = call double @_Z3expd(double %extract2283.i) nounwind
  %1076 = call double @_Z3expd(double %extract2284.i) nounwind
  %1077 = call double @_Z3expd(double %extract2285.i) nounwind
  %1078 = call double @_Z3expd(double %extract2286.i) nounwind
  %1079 = call double @_Z3expd(double %extract2287.i) nounwind
  %1080 = call double @_Z3expd(double %extract2288.i) nounwind
  %1081 = call double @_Z3expd(double %extract2289.i) nounwind
  %1082 = call double @_Z3expd(double %extract2290.i) nounwind
  %1083 = call double @_Z3expd(double %extract2291.i) nounwind
  %temp.vect2311.i = insertelement <16 x double> undef, double %1068, i32 0
  %temp.vect2312.i = insertelement <16 x double> %temp.vect2311.i, double %1069, i32 1
  %temp.vect2313.i = insertelement <16 x double> %temp.vect2312.i, double %1070, i32 2
  %temp.vect2314.i = insertelement <16 x double> %temp.vect2313.i, double %1071, i32 3
  %temp.vect2315.i = insertelement <16 x double> %temp.vect2314.i, double %1072, i32 4
  %temp.vect2316.i = insertelement <16 x double> %temp.vect2315.i, double %1073, i32 5
  %temp.vect2317.i = insertelement <16 x double> %temp.vect2316.i, double %1074, i32 6
  %temp.vect2318.i = insertelement <16 x double> %temp.vect2317.i, double %1075, i32 7
  %temp.vect2319.i = insertelement <16 x double> %temp.vect2318.i, double %1076, i32 8
  %temp.vect2320.i = insertelement <16 x double> %temp.vect2319.i, double %1077, i32 9
  %temp.vect2321.i = insertelement <16 x double> %temp.vect2320.i, double %1078, i32 10
  %temp.vect2322.i = insertelement <16 x double> %temp.vect2321.i, double %1079, i32 11
  %temp.vect2323.i = insertelement <16 x double> %temp.vect2322.i, double %1080, i32 12
  %temp.vect2324.i = insertelement <16 x double> %temp.vect2323.i, double %1081, i32 13
  %temp.vect2325.i = insertelement <16 x double> %temp.vect2324.i, double %1082, i32 14
  %temp.vect2326.i = insertelement <16 x double> %temp.vect2325.i, double %1083, i32 15
  %1084 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1085 = load i64* %1084, align 8
  %1086 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1087 = load i64* %1086, align 8
  %1088 = add i64 %1085, %1087
  %extract2294.i = add i64 %1088, 6082560
  %1089 = getelementptr inbounds double addrspace(1)* %4, i64 %extract2294.i
  %ptrTypeCast2310.i = bitcast double addrspace(1)* %1089 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect2326.i, <16 x double> addrspace(1)* %ptrTypeCast2310.i, align 8
  %1090 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1091 = load i64* %1090, align 8
  %1092 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1093 = load i64* %1092, align 8
  %1094 = add i64 %1091, %1093
  %extract2329.i = add i64 %1094, 6193152
  %1095 = getelementptr inbounds double addrspace(1)* %4, i64 %extract2329.i
  %ptrTypeCast2345.i = bitcast double addrspace(1)* %1095 to <16 x double> addrspace(1)*
  store <16 x double> <double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast2345.i, align 8
  %1096 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1097 = load i64* %1096, align 8
  %1098 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1099 = load i64* %1098, align 8
  %1100 = add i64 %1097, %1099
  %extract2348.i = add i64 %1100, 6303744
  %1101 = getelementptr inbounds double addrspace(1)* %4, i64 %extract2348.i
  %ptrTypeCast2364.i = bitcast double addrspace(1)* %1101 to <16 x double> addrspace(1)*
  store <16 x double> <double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13>, <16 x double> addrspace(1)* %ptrTypeCast2364.i, align 8
  %1102 = fmul <16 x double> %41, <double 0x4072DEE148BA83F5, double 0x4072DEE148BA83F5, double 0x4072DEE148BA83F5, double 0x4072DEE148BA83F5, double 0x4072DEE148BA83F5, double 0x4072DEE148BA83F5, double 0x4072DEE148BA83F5, double 0x4072DEE148BA83F5, double 0x4072DEE148BA83F5, double 0x4072DEE148BA83F5, double 0x4072DEE148BA83F5, double 0x4072DEE148BA83F5, double 0x4072DEE148BA83F5, double 0x4072DEE148BA83F5, double 0x4072DEE148BA83F5, double 0x4072DEE148BA83F5>
  %1103 = fsub <16 x double> <double 0x403E56CD60708320, double 0x403E56CD60708320, double 0x403E56CD60708320, double 0x403E56CD60708320, double 0x403E56CD60708320, double 0x403E56CD60708320, double 0x403E56CD60708320, double 0x403E56CD60708320, double 0x403E56CD60708320, double 0x403E56CD60708320, double 0x403E56CD60708320, double 0x403E56CD60708320, double 0x403E56CD60708320, double 0x403E56CD60708320, double 0x403E56CD60708320, double 0x403E56CD60708320>, %1102
  %extract2365.i = extractelement <16 x double> %1103, i32 0
  %extract2366.i = extractelement <16 x double> %1103, i32 1
  %extract2367.i = extractelement <16 x double> %1103, i32 2
  %extract2368.i = extractelement <16 x double> %1103, i32 3
  %extract2369.i = extractelement <16 x double> %1103, i32 4
  %extract2370.i = extractelement <16 x double> %1103, i32 5
  %extract2371.i = extractelement <16 x double> %1103, i32 6
  %extract2372.i = extractelement <16 x double> %1103, i32 7
  %extract2373.i = extractelement <16 x double> %1103, i32 8
  %extract2374.i = extractelement <16 x double> %1103, i32 9
  %extract2375.i = extractelement <16 x double> %1103, i32 10
  %extract2376.i = extractelement <16 x double> %1103, i32 11
  %extract2377.i = extractelement <16 x double> %1103, i32 12
  %extract2378.i = extractelement <16 x double> %1103, i32 13
  %extract2379.i = extractelement <16 x double> %1103, i32 14
  %extract2380.i = extractelement <16 x double> %1103, i32 15
  %1104 = call double @_Z3expd(double %extract2365.i) nounwind
  %1105 = call double @_Z3expd(double %extract2366.i) nounwind
  %1106 = call double @_Z3expd(double %extract2367.i) nounwind
  %1107 = call double @_Z3expd(double %extract2368.i) nounwind
  %1108 = call double @_Z3expd(double %extract2369.i) nounwind
  %1109 = call double @_Z3expd(double %extract2370.i) nounwind
  %1110 = call double @_Z3expd(double %extract2371.i) nounwind
  %1111 = call double @_Z3expd(double %extract2372.i) nounwind
  %1112 = call double @_Z3expd(double %extract2373.i) nounwind
  %1113 = call double @_Z3expd(double %extract2374.i) nounwind
  %1114 = call double @_Z3expd(double %extract2375.i) nounwind
  %1115 = call double @_Z3expd(double %extract2376.i) nounwind
  %1116 = call double @_Z3expd(double %extract2377.i) nounwind
  %1117 = call double @_Z3expd(double %extract2378.i) nounwind
  %1118 = call double @_Z3expd(double %extract2379.i) nounwind
  %1119 = call double @_Z3expd(double %extract2380.i) nounwind
  %temp.vect2400.i = insertelement <16 x double> undef, double %1104, i32 0
  %temp.vect2401.i = insertelement <16 x double> %temp.vect2400.i, double %1105, i32 1
  %temp.vect2402.i = insertelement <16 x double> %temp.vect2401.i, double %1106, i32 2
  %temp.vect2403.i = insertelement <16 x double> %temp.vect2402.i, double %1107, i32 3
  %temp.vect2404.i = insertelement <16 x double> %temp.vect2403.i, double %1108, i32 4
  %temp.vect2405.i = insertelement <16 x double> %temp.vect2404.i, double %1109, i32 5
  %temp.vect2406.i = insertelement <16 x double> %temp.vect2405.i, double %1110, i32 6
  %temp.vect2407.i = insertelement <16 x double> %temp.vect2406.i, double %1111, i32 7
  %temp.vect2408.i = insertelement <16 x double> %temp.vect2407.i, double %1112, i32 8
  %temp.vect2409.i = insertelement <16 x double> %temp.vect2408.i, double %1113, i32 9
  %temp.vect2410.i = insertelement <16 x double> %temp.vect2409.i, double %1114, i32 10
  %temp.vect2411.i = insertelement <16 x double> %temp.vect2410.i, double %1115, i32 11
  %temp.vect2412.i = insertelement <16 x double> %temp.vect2411.i, double %1116, i32 12
  %temp.vect2413.i = insertelement <16 x double> %temp.vect2412.i, double %1117, i32 13
  %temp.vect2414.i = insertelement <16 x double> %temp.vect2413.i, double %1118, i32 14
  %temp.vect2415.i = insertelement <16 x double> %temp.vect2414.i, double %1119, i32 15
  %1120 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1121 = load i64* %1120, align 8
  %1122 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1123 = load i64* %1122, align 8
  %1124 = add i64 %1121, %1123
  %extract2383.i = add i64 %1124, 6414336
  %1125 = getelementptr inbounds double addrspace(1)* %4, i64 %extract2383.i
  %ptrTypeCast2399.i = bitcast double addrspace(1)* %1125 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect2415.i, <16 x double> addrspace(1)* %ptrTypeCast2399.i, align 8
  %1126 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1127 = load i64* %1126, align 8
  %1128 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1129 = load i64* %1128, align 8
  %1130 = add i64 %1127, %1129
  %extract2418.i = add i64 %1130, 6524928
  %1131 = getelementptr inbounds double addrspace(1)* %4, i64 %extract2418.i
  %ptrTypeCast2434.i = bitcast double addrspace(1)* %1131 to <16 x double> addrspace(1)*
  store <16 x double> <double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast2434.i, align 8
  %1132 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1133 = load i64* %1132, align 8
  %1134 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1135 = load i64* %1134, align 8
  %1136 = add i64 %1133, %1135
  %extract2437.i = add i64 %1136, 6635520
  %1137 = getelementptr inbounds double addrspace(1)* %4, i64 %extract2437.i
  %ptrTypeCast2453.i = bitcast double addrspace(1)* %1137 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13>, <16 x double> addrspace(1)* %ptrTypeCast2453.i, align 8
  %1138 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1139 = load i64* %1138, align 8
  %1140 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1141 = load i64* %1140, align 8
  %1142 = add i64 %1139, %1141
  %extract2456.i = add i64 %1142, 6746112
  %1143 = getelementptr inbounds double addrspace(1)* %4, i64 %extract2456.i
  %ptrTypeCast2472.i = bitcast double addrspace(1)* %1143 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13, double 1.500000e+13>, <16 x double> addrspace(1)* %ptrTypeCast2472.i, align 8
  %1144 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1145 = load i64* %1144, align 8
  %1146 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1147 = load i64* %1146, align 8
  %1148 = add i64 %1145, %1147
  %extract2475.i = add i64 %1148, 6856704
  %1149 = getelementptr inbounds double addrspace(1)* %4, i64 %extract2475.i
  %ptrTypeCast2491.i = bitcast double addrspace(1)* %1149 to <16 x double> addrspace(1)*
  store <16 x double> <double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast2491.i, align 8
  %1150 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1151 = load i64* %1150, align 8
  %1152 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1153 = load i64* %1152, align 8
  %1154 = add i64 %1151, %1153
  %extract2494.i = add i64 %1154, 6967296
  %1155 = getelementptr inbounds double addrspace(1)* %4, i64 %extract2494.i
  %ptrTypeCast2510.i = bitcast double addrspace(1)* %1155 to <16 x double> addrspace(1)*
  store <16 x double> <double 7.000000e+13, double 7.000000e+13, double 7.000000e+13, double 7.000000e+13, double 7.000000e+13, double 7.000000e+13, double 7.000000e+13, double 7.000000e+13, double 7.000000e+13, double 7.000000e+13, double 7.000000e+13, double 7.000000e+13, double 7.000000e+13, double 7.000000e+13, double 7.000000e+13, double 7.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast2510.i, align 8
  %1156 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1157 = load i64* %1156, align 8
  %1158 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1159 = load i64* %1158, align 8
  %1160 = add i64 %1157, %1159
  %extract2513.i = add i64 %1160, 7077888
  %1161 = getelementptr inbounds double addrspace(1)* %4, i64 %extract2513.i
  %ptrTypeCast2529.i = bitcast double addrspace(1)* %1161 to <16 x double> addrspace(1)*
  store <16 x double> <double 2.800000e+13, double 2.800000e+13, double 2.800000e+13, double 2.800000e+13, double 2.800000e+13, double 2.800000e+13, double 2.800000e+13, double 2.800000e+13, double 2.800000e+13, double 2.800000e+13, double 2.800000e+13, double 2.800000e+13, double 2.800000e+13, double 2.800000e+13, double 2.800000e+13, double 2.800000e+13>, <16 x double> addrspace(1)* %ptrTypeCast2529.i, align 8
  %1162 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1163 = load i64* %1162, align 8
  %1164 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1165 = load i64* %1164, align 8
  %1166 = add i64 %1163, %1165
  %extract2532.i = add i64 %1166, 7188480
  %1167 = getelementptr inbounds double addrspace(1)* %4, i64 %extract2532.i
  %ptrTypeCast2548.i = bitcast double addrspace(1)* %1167 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13>, <16 x double> addrspace(1)* %ptrTypeCast2548.i, align 8
  %1168 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1169 = load i64* %1168, align 8
  %1170 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1171 = load i64* %1170, align 8
  %1172 = add i64 %1169, %1171
  %extract2551.i = add i64 %1172, 7299072
  %1173 = getelementptr inbounds double addrspace(1)* %4, i64 %extract2551.i
  %ptrTypeCast2567.i = bitcast double addrspace(1)* %1173 to <16 x double> addrspace(1)*
  store <16 x double> <double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast2567.i, align 8
  %1174 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1175 = load i64* %1174, align 8
  %1176 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1177 = load i64* %1176, align 8
  %1178 = add i64 %1175, %1177
  %extract2570.i = add i64 %1178, 7409664
  %1179 = getelementptr inbounds double addrspace(1)* %4, i64 %extract2570.i
  %ptrTypeCast2586.i = bitcast double addrspace(1)* %1179 to <16 x double> addrspace(1)*
  store <16 x double> <double 9.000000e+12, double 9.000000e+12, double 9.000000e+12, double 9.000000e+12, double 9.000000e+12, double 9.000000e+12, double 9.000000e+12, double 9.000000e+12, double 9.000000e+12, double 9.000000e+12, double 9.000000e+12, double 9.000000e+12, double 9.000000e+12, double 9.000000e+12, double 9.000000e+12, double 9.000000e+12>, <16 x double> addrspace(1)* %ptrTypeCast2586.i, align 8
  %1180 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1181 = load i64* %1180, align 8
  %1182 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1183 = load i64* %1182, align 8
  %1184 = add i64 %1181, %1183
  %extract2589.i = add i64 %1184, 7520256
  %1185 = getelementptr inbounds double addrspace(1)* %4, i64 %extract2589.i
  %ptrTypeCast2605.i = bitcast double addrspace(1)* %1185 to <16 x double> addrspace(1)*
  store <16 x double> <double 7.000000e+12, double 7.000000e+12, double 7.000000e+12, double 7.000000e+12, double 7.000000e+12, double 7.000000e+12, double 7.000000e+12, double 7.000000e+12, double 7.000000e+12, double 7.000000e+12, double 7.000000e+12, double 7.000000e+12, double 7.000000e+12, double 7.000000e+12, double 7.000000e+12, double 7.000000e+12>, <16 x double> addrspace(1)* %ptrTypeCast2605.i, align 8
  %1186 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1187 = load i64* %1186, align 8
  %1188 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1189 = load i64* %1188, align 8
  %1190 = add i64 %1187, %1189
  %extract2608.i = add i64 %1190, 7630848
  %1191 = getelementptr inbounds double addrspace(1)* %4, i64 %extract2608.i
  %ptrTypeCast2624.i = bitcast double addrspace(1)* %1191 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.400000e+13, double 1.400000e+13, double 1.400000e+13, double 1.400000e+13, double 1.400000e+13, double 1.400000e+13, double 1.400000e+13, double 1.400000e+13, double 1.400000e+13, double 1.400000e+13, double 1.400000e+13, double 1.400000e+13, double 1.400000e+13, double 1.400000e+13, double 1.400000e+13, double 1.400000e+13>, <16 x double> addrspace(1)* %ptrTypeCast2624.i, align 8
  %1192 = fmul <16 x double> %temp.vect97.i, <double 4.540000e-01, double 4.540000e-01, double 4.540000e-01, double 4.540000e-01, double 4.540000e-01, double 4.540000e-01, double 4.540000e-01, double 4.540000e-01, double 4.540000e-01, double 4.540000e-01, double 4.540000e-01, double 4.540000e-01, double 4.540000e-01, double 4.540000e-01, double 4.540000e-01, double 4.540000e-01>
  %1193 = fadd <16 x double> %1192, <double 0x403B03CC39FFD60F, double 0x403B03CC39FFD60F, double 0x403B03CC39FFD60F, double 0x403B03CC39FFD60F, double 0x403B03CC39FFD60F, double 0x403B03CC39FFD60F, double 0x403B03CC39FFD60F, double 0x403B03CC39FFD60F, double 0x403B03CC39FFD60F, double 0x403B03CC39FFD60F, double 0x403B03CC39FFD60F, double 0x403B03CC39FFD60F, double 0x403B03CC39FFD60F, double 0x403B03CC39FFD60F, double 0x403B03CC39FFD60F, double 0x403B03CC39FFD60F>
  %1194 = fmul <16 x double> %41, <double 0x409471740F66A551, double 0x409471740F66A551, double 0x409471740F66A551, double 0x409471740F66A551, double 0x409471740F66A551, double 0x409471740F66A551, double 0x409471740F66A551, double 0x409471740F66A551, double 0x409471740F66A551, double 0x409471740F66A551, double 0x409471740F66A551, double 0x409471740F66A551, double 0x409471740F66A551, double 0x409471740F66A551, double 0x409471740F66A551, double 0x409471740F66A551>
  %1195 = fsub <16 x double> %1193, %1194
  %extract2625.i = extractelement <16 x double> %1195, i32 0
  %extract2626.i = extractelement <16 x double> %1195, i32 1
  %extract2627.i = extractelement <16 x double> %1195, i32 2
  %extract2628.i = extractelement <16 x double> %1195, i32 3
  %extract2629.i = extractelement <16 x double> %1195, i32 4
  %extract2630.i = extractelement <16 x double> %1195, i32 5
  %extract2631.i = extractelement <16 x double> %1195, i32 6
  %extract2632.i = extractelement <16 x double> %1195, i32 7
  %extract2633.i = extractelement <16 x double> %1195, i32 8
  %extract2634.i = extractelement <16 x double> %1195, i32 9
  %extract2635.i = extractelement <16 x double> %1195, i32 10
  %extract2636.i = extractelement <16 x double> %1195, i32 11
  %extract2637.i = extractelement <16 x double> %1195, i32 12
  %extract2638.i = extractelement <16 x double> %1195, i32 13
  %extract2639.i = extractelement <16 x double> %1195, i32 14
  %extract2640.i = extractelement <16 x double> %1195, i32 15
  %1196 = call double @_Z3expd(double %extract2625.i) nounwind
  %1197 = call double @_Z3expd(double %extract2626.i) nounwind
  %1198 = call double @_Z3expd(double %extract2627.i) nounwind
  %1199 = call double @_Z3expd(double %extract2628.i) nounwind
  %1200 = call double @_Z3expd(double %extract2629.i) nounwind
  %1201 = call double @_Z3expd(double %extract2630.i) nounwind
  %1202 = call double @_Z3expd(double %extract2631.i) nounwind
  %1203 = call double @_Z3expd(double %extract2632.i) nounwind
  %1204 = call double @_Z3expd(double %extract2633.i) nounwind
  %1205 = call double @_Z3expd(double %extract2634.i) nounwind
  %1206 = call double @_Z3expd(double %extract2635.i) nounwind
  %1207 = call double @_Z3expd(double %extract2636.i) nounwind
  %1208 = call double @_Z3expd(double %extract2637.i) nounwind
  %1209 = call double @_Z3expd(double %extract2638.i) nounwind
  %1210 = call double @_Z3expd(double %extract2639.i) nounwind
  %1211 = call double @_Z3expd(double %extract2640.i) nounwind
  %temp.vect2660.i = insertelement <16 x double> undef, double %1196, i32 0
  %temp.vect2661.i = insertelement <16 x double> %temp.vect2660.i, double %1197, i32 1
  %temp.vect2662.i = insertelement <16 x double> %temp.vect2661.i, double %1198, i32 2
  %temp.vect2663.i = insertelement <16 x double> %temp.vect2662.i, double %1199, i32 3
  %temp.vect2664.i = insertelement <16 x double> %temp.vect2663.i, double %1200, i32 4
  %temp.vect2665.i = insertelement <16 x double> %temp.vect2664.i, double %1201, i32 5
  %temp.vect2666.i = insertelement <16 x double> %temp.vect2665.i, double %1202, i32 6
  %temp.vect2667.i = insertelement <16 x double> %temp.vect2666.i, double %1203, i32 7
  %temp.vect2668.i = insertelement <16 x double> %temp.vect2667.i, double %1204, i32 8
  %temp.vect2669.i = insertelement <16 x double> %temp.vect2668.i, double %1205, i32 9
  %temp.vect2670.i = insertelement <16 x double> %temp.vect2669.i, double %1206, i32 10
  %temp.vect2671.i = insertelement <16 x double> %temp.vect2670.i, double %1207, i32 11
  %temp.vect2672.i = insertelement <16 x double> %temp.vect2671.i, double %1208, i32 12
  %temp.vect2673.i = insertelement <16 x double> %temp.vect2672.i, double %1209, i32 13
  %temp.vect2674.i = insertelement <16 x double> %temp.vect2673.i, double %1210, i32 14
  %temp.vect2675.i = insertelement <16 x double> %temp.vect2674.i, double %1211, i32 15
  %1212 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1213 = load i64* %1212, align 8
  %1214 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1215 = load i64* %1214, align 8
  %1216 = add i64 %1213, %1215
  %extract2643.i = add i64 %1216, 7741440
  %1217 = getelementptr inbounds double addrspace(1)* %4, i64 %extract2643.i
  %ptrTypeCast2659.i = bitcast double addrspace(1)* %1217 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect2675.i, <16 x double> addrspace(1)* %ptrTypeCast2659.i, align 8
  %1218 = fmul <16 x double> %temp.vect97.i, <double 1.050000e+00, double 1.050000e+00, double 1.050000e+00, double 1.050000e+00, double 1.050000e+00, double 1.050000e+00, double 1.050000e+00, double 1.050000e+00, double 1.050000e+00, double 1.050000e+00, double 1.050000e+00, double 1.050000e+00, double 1.050000e+00, double 1.050000e+00, double 1.050000e+00, double 1.050000e+00>
  %1219 = fadd <16 x double> %1218, <double 0x4037DBD7B3B09C15, double 0x4037DBD7B3B09C15, double 0x4037DBD7B3B09C15, double 0x4037DBD7B3B09C15, double 0x4037DBD7B3B09C15, double 0x4037DBD7B3B09C15, double 0x4037DBD7B3B09C15, double 0x4037DBD7B3B09C15, double 0x4037DBD7B3B09C15, double 0x4037DBD7B3B09C15, double 0x4037DBD7B3B09C15, double 0x4037DBD7B3B09C15, double 0x4037DBD7B3B09C15, double 0x4037DBD7B3B09C15, double 0x4037DBD7B3B09C15, double 0x4037DBD7B3B09C15>
  %1220 = fmul <16 x double> %41, <double 0x4099C0236B8F9B13, double 0x4099C0236B8F9B13, double 0x4099C0236B8F9B13, double 0x4099C0236B8F9B13, double 0x4099C0236B8F9B13, double 0x4099C0236B8F9B13, double 0x4099C0236B8F9B13, double 0x4099C0236B8F9B13, double 0x4099C0236B8F9B13, double 0x4099C0236B8F9B13, double 0x4099C0236B8F9B13, double 0x4099C0236B8F9B13, double 0x4099C0236B8F9B13, double 0x4099C0236B8F9B13, double 0x4099C0236B8F9B13, double 0x4099C0236B8F9B13>
  %1221 = fsub <16 x double> %1219, %1220
  %extract2676.i = extractelement <16 x double> %1221, i32 0
  %extract2677.i = extractelement <16 x double> %1221, i32 1
  %extract2678.i = extractelement <16 x double> %1221, i32 2
  %extract2679.i = extractelement <16 x double> %1221, i32 3
  %extract2680.i = extractelement <16 x double> %1221, i32 4
  %extract2681.i = extractelement <16 x double> %1221, i32 5
  %extract2682.i = extractelement <16 x double> %1221, i32 6
  %extract2683.i = extractelement <16 x double> %1221, i32 7
  %extract2684.i = extractelement <16 x double> %1221, i32 8
  %extract2685.i = extractelement <16 x double> %1221, i32 9
  %extract2686.i = extractelement <16 x double> %1221, i32 10
  %extract2687.i = extractelement <16 x double> %1221, i32 11
  %extract2688.i = extractelement <16 x double> %1221, i32 12
  %extract2689.i = extractelement <16 x double> %1221, i32 13
  %extract2690.i = extractelement <16 x double> %1221, i32 14
  %extract2691.i = extractelement <16 x double> %1221, i32 15
  %1222 = call double @_Z3expd(double %extract2676.i) nounwind
  %1223 = call double @_Z3expd(double %extract2677.i) nounwind
  %1224 = call double @_Z3expd(double %extract2678.i) nounwind
  %1225 = call double @_Z3expd(double %extract2679.i) nounwind
  %1226 = call double @_Z3expd(double %extract2680.i) nounwind
  %1227 = call double @_Z3expd(double %extract2681.i) nounwind
  %1228 = call double @_Z3expd(double %extract2682.i) nounwind
  %1229 = call double @_Z3expd(double %extract2683.i) nounwind
  %1230 = call double @_Z3expd(double %extract2684.i) nounwind
  %1231 = call double @_Z3expd(double %extract2685.i) nounwind
  %1232 = call double @_Z3expd(double %extract2686.i) nounwind
  %1233 = call double @_Z3expd(double %extract2687.i) nounwind
  %1234 = call double @_Z3expd(double %extract2688.i) nounwind
  %1235 = call double @_Z3expd(double %extract2689.i) nounwind
  %1236 = call double @_Z3expd(double %extract2690.i) nounwind
  %1237 = call double @_Z3expd(double %extract2691.i) nounwind
  %temp.vect2711.i = insertelement <16 x double> undef, double %1222, i32 0
  %temp.vect2712.i = insertelement <16 x double> %temp.vect2711.i, double %1223, i32 1
  %temp.vect2713.i = insertelement <16 x double> %temp.vect2712.i, double %1224, i32 2
  %temp.vect2714.i = insertelement <16 x double> %temp.vect2713.i, double %1225, i32 3
  %temp.vect2715.i = insertelement <16 x double> %temp.vect2714.i, double %1226, i32 4
  %temp.vect2716.i = insertelement <16 x double> %temp.vect2715.i, double %1227, i32 5
  %temp.vect2717.i = insertelement <16 x double> %temp.vect2716.i, double %1228, i32 6
  %temp.vect2718.i = insertelement <16 x double> %temp.vect2717.i, double %1229, i32 7
  %temp.vect2719.i = insertelement <16 x double> %temp.vect2718.i, double %1230, i32 8
  %temp.vect2720.i = insertelement <16 x double> %temp.vect2719.i, double %1231, i32 9
  %temp.vect2721.i = insertelement <16 x double> %temp.vect2720.i, double %1232, i32 10
  %temp.vect2722.i = insertelement <16 x double> %temp.vect2721.i, double %1233, i32 11
  %temp.vect2723.i = insertelement <16 x double> %temp.vect2722.i, double %1234, i32 12
  %temp.vect2724.i = insertelement <16 x double> %temp.vect2723.i, double %1235, i32 13
  %temp.vect2725.i = insertelement <16 x double> %temp.vect2724.i, double %1236, i32 14
  %temp.vect2726.i = insertelement <16 x double> %temp.vect2725.i, double %1237, i32 15
  %1238 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1239 = load i64* %1238, align 8
  %1240 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1241 = load i64* %1240, align 8
  %1242 = add i64 %1239, %1241
  %extract2694.i = add i64 %1242, 7852032
  %1243 = getelementptr inbounds double addrspace(1)* %4, i64 %extract2694.i
  %ptrTypeCast2710.i = bitcast double addrspace(1)* %1243 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect2726.i, <16 x double> addrspace(1)* %ptrTypeCast2710.i, align 8
  %1244 = fmul <16 x double> %41, <double 1.781387e+03, double 1.781387e+03, double 1.781387e+03, double 1.781387e+03, double 1.781387e+03, double 1.781387e+03, double 1.781387e+03, double 1.781387e+03, double 1.781387e+03, double 1.781387e+03, double 1.781387e+03, double 1.781387e+03, double 1.781387e+03, double 1.781387e+03, double 1.781387e+03, double 1.781387e+03>
  %1245 = fsub <16 x double> <double 0x403F4B69C743F6D0, double 0x403F4B69C743F6D0, double 0x403F4B69C743F6D0, double 0x403F4B69C743F6D0, double 0x403F4B69C743F6D0, double 0x403F4B69C743F6D0, double 0x403F4B69C743F6D0, double 0x403F4B69C743F6D0, double 0x403F4B69C743F6D0, double 0x403F4B69C743F6D0, double 0x403F4B69C743F6D0, double 0x403F4B69C743F6D0, double 0x403F4B69C743F6D0, double 0x403F4B69C743F6D0, double 0x403F4B69C743F6D0, double 0x403F4B69C743F6D0>, %1244
  %extract2727.i = extractelement <16 x double> %1245, i32 0
  %extract2728.i = extractelement <16 x double> %1245, i32 1
  %extract2729.i = extractelement <16 x double> %1245, i32 2
  %extract2730.i = extractelement <16 x double> %1245, i32 3
  %extract2731.i = extractelement <16 x double> %1245, i32 4
  %extract2732.i = extractelement <16 x double> %1245, i32 5
  %extract2733.i = extractelement <16 x double> %1245, i32 6
  %extract2734.i = extractelement <16 x double> %1245, i32 7
  %extract2735.i = extractelement <16 x double> %1245, i32 8
  %extract2736.i = extractelement <16 x double> %1245, i32 9
  %extract2737.i = extractelement <16 x double> %1245, i32 10
  %extract2738.i = extractelement <16 x double> %1245, i32 11
  %extract2739.i = extractelement <16 x double> %1245, i32 12
  %extract2740.i = extractelement <16 x double> %1245, i32 13
  %extract2741.i = extractelement <16 x double> %1245, i32 14
  %extract2742.i = extractelement <16 x double> %1245, i32 15
  %1246 = call double @_Z3expd(double %extract2727.i) nounwind
  %1247 = call double @_Z3expd(double %extract2728.i) nounwind
  %1248 = call double @_Z3expd(double %extract2729.i) nounwind
  %1249 = call double @_Z3expd(double %extract2730.i) nounwind
  %1250 = call double @_Z3expd(double %extract2731.i) nounwind
  %1251 = call double @_Z3expd(double %extract2732.i) nounwind
  %1252 = call double @_Z3expd(double %extract2733.i) nounwind
  %1253 = call double @_Z3expd(double %extract2734.i) nounwind
  %1254 = call double @_Z3expd(double %extract2735.i) nounwind
  %1255 = call double @_Z3expd(double %extract2736.i) nounwind
  %1256 = call double @_Z3expd(double %extract2737.i) nounwind
  %1257 = call double @_Z3expd(double %extract2738.i) nounwind
  %1258 = call double @_Z3expd(double %extract2739.i) nounwind
  %1259 = call double @_Z3expd(double %extract2740.i) nounwind
  %1260 = call double @_Z3expd(double %extract2741.i) nounwind
  %1261 = call double @_Z3expd(double %extract2742.i) nounwind
  %temp.vect2762.i = insertelement <16 x double> undef, double %1246, i32 0
  %temp.vect2763.i = insertelement <16 x double> %temp.vect2762.i, double %1247, i32 1
  %temp.vect2764.i = insertelement <16 x double> %temp.vect2763.i, double %1248, i32 2
  %temp.vect2765.i = insertelement <16 x double> %temp.vect2764.i, double %1249, i32 3
  %temp.vect2766.i = insertelement <16 x double> %temp.vect2765.i, double %1250, i32 4
  %temp.vect2767.i = insertelement <16 x double> %temp.vect2766.i, double %1251, i32 5
  %temp.vect2768.i = insertelement <16 x double> %temp.vect2767.i, double %1252, i32 6
  %temp.vect2769.i = insertelement <16 x double> %temp.vect2768.i, double %1253, i32 7
  %temp.vect2770.i = insertelement <16 x double> %temp.vect2769.i, double %1254, i32 8
  %temp.vect2771.i = insertelement <16 x double> %temp.vect2770.i, double %1255, i32 9
  %temp.vect2772.i = insertelement <16 x double> %temp.vect2771.i, double %1256, i32 10
  %temp.vect2773.i = insertelement <16 x double> %temp.vect2772.i, double %1257, i32 11
  %temp.vect2774.i = insertelement <16 x double> %temp.vect2773.i, double %1258, i32 12
  %temp.vect2775.i = insertelement <16 x double> %temp.vect2774.i, double %1259, i32 13
  %temp.vect2776.i = insertelement <16 x double> %temp.vect2775.i, double %1260, i32 14
  %temp.vect2777.i = insertelement <16 x double> %temp.vect2776.i, double %1261, i32 15
  %1262 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1263 = load i64* %1262, align 8
  %1264 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1265 = load i64* %1264, align 8
  %1266 = add i64 %1263, %1265
  %extract2745.i = add i64 %1266, 7962624
  %1267 = getelementptr inbounds double addrspace(1)* %4, i64 %extract2745.i
  %ptrTypeCast2761.i = bitcast double addrspace(1)* %1267 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect2777.i, <16 x double> addrspace(1)* %ptrTypeCast2761.i, align 8
  %1268 = fmul <16 x double> %temp.vect97.i, <double 1.180000e+00, double 1.180000e+00, double 1.180000e+00, double 1.180000e+00, double 1.180000e+00, double 1.180000e+00, double 1.180000e+00, double 1.180000e+00, double 1.180000e+00, double 1.180000e+00, double 1.180000e+00, double 1.180000e+00, double 1.180000e+00, double 1.180000e+00, double 1.180000e+00, double 1.180000e+00>
  %1269 = fadd <16 x double> %1268, <double 0x4035F4B104F029C9, double 0x4035F4B104F029C9, double 0x4035F4B104F029C9, double 0x4035F4B104F029C9, double 0x4035F4B104F029C9, double 0x4035F4B104F029C9, double 0x4035F4B104F029C9, double 0x4035F4B104F029C9, double 0x4035F4B104F029C9, double 0x4035F4B104F029C9, double 0x4035F4B104F029C9, double 0x4035F4B104F029C9, double 0x4035F4B104F029C9, double 0x4035F4B104F029C9, double 0x4035F4B104F029C9, double 0x4035F4B104F029C9>
  %1270 = fmul <16 x double> %41, <double 0x406C1E02DE00D1B7, double 0x406C1E02DE00D1B7, double 0x406C1E02DE00D1B7, double 0x406C1E02DE00D1B7, double 0x406C1E02DE00D1B7, double 0x406C1E02DE00D1B7, double 0x406C1E02DE00D1B7, double 0x406C1E02DE00D1B7, double 0x406C1E02DE00D1B7, double 0x406C1E02DE00D1B7, double 0x406C1E02DE00D1B7, double 0x406C1E02DE00D1B7, double 0x406C1E02DE00D1B7, double 0x406C1E02DE00D1B7, double 0x406C1E02DE00D1B7, double 0x406C1E02DE00D1B7>
  %1271 = fadd <16 x double> %1269, %1270
  %extract2778.i = extractelement <16 x double> %1271, i32 0
  %extract2779.i = extractelement <16 x double> %1271, i32 1
  %extract2780.i = extractelement <16 x double> %1271, i32 2
  %extract2781.i = extractelement <16 x double> %1271, i32 3
  %extract2782.i = extractelement <16 x double> %1271, i32 4
  %extract2783.i = extractelement <16 x double> %1271, i32 5
  %extract2784.i = extractelement <16 x double> %1271, i32 6
  %extract2785.i = extractelement <16 x double> %1271, i32 7
  %extract2786.i = extractelement <16 x double> %1271, i32 8
  %extract2787.i = extractelement <16 x double> %1271, i32 9
  %extract2788.i = extractelement <16 x double> %1271, i32 10
  %extract2789.i = extractelement <16 x double> %1271, i32 11
  %extract2790.i = extractelement <16 x double> %1271, i32 12
  %extract2791.i = extractelement <16 x double> %1271, i32 13
  %extract2792.i = extractelement <16 x double> %1271, i32 14
  %extract2793.i = extractelement <16 x double> %1271, i32 15
  %1272 = call double @_Z3expd(double %extract2778.i) nounwind
  %1273 = call double @_Z3expd(double %extract2779.i) nounwind
  %1274 = call double @_Z3expd(double %extract2780.i) nounwind
  %1275 = call double @_Z3expd(double %extract2781.i) nounwind
  %1276 = call double @_Z3expd(double %extract2782.i) nounwind
  %1277 = call double @_Z3expd(double %extract2783.i) nounwind
  %1278 = call double @_Z3expd(double %extract2784.i) nounwind
  %1279 = call double @_Z3expd(double %extract2785.i) nounwind
  %1280 = call double @_Z3expd(double %extract2786.i) nounwind
  %1281 = call double @_Z3expd(double %extract2787.i) nounwind
  %1282 = call double @_Z3expd(double %extract2788.i) nounwind
  %1283 = call double @_Z3expd(double %extract2789.i) nounwind
  %1284 = call double @_Z3expd(double %extract2790.i) nounwind
  %1285 = call double @_Z3expd(double %extract2791.i) nounwind
  %1286 = call double @_Z3expd(double %extract2792.i) nounwind
  %1287 = call double @_Z3expd(double %extract2793.i) nounwind
  %temp.vect2813.i = insertelement <16 x double> undef, double %1272, i32 0
  %temp.vect2814.i = insertelement <16 x double> %temp.vect2813.i, double %1273, i32 1
  %temp.vect2815.i = insertelement <16 x double> %temp.vect2814.i, double %1274, i32 2
  %temp.vect2816.i = insertelement <16 x double> %temp.vect2815.i, double %1275, i32 3
  %temp.vect2817.i = insertelement <16 x double> %temp.vect2816.i, double %1276, i32 4
  %temp.vect2818.i = insertelement <16 x double> %temp.vect2817.i, double %1277, i32 5
  %temp.vect2819.i = insertelement <16 x double> %temp.vect2818.i, double %1278, i32 6
  %temp.vect2820.i = insertelement <16 x double> %temp.vect2819.i, double %1279, i32 7
  %temp.vect2821.i = insertelement <16 x double> %temp.vect2820.i, double %1280, i32 8
  %temp.vect2822.i = insertelement <16 x double> %temp.vect2821.i, double %1281, i32 9
  %temp.vect2823.i = insertelement <16 x double> %temp.vect2822.i, double %1282, i32 10
  %temp.vect2824.i = insertelement <16 x double> %temp.vect2823.i, double %1283, i32 11
  %temp.vect2825.i = insertelement <16 x double> %temp.vect2824.i, double %1284, i32 12
  %temp.vect2826.i = insertelement <16 x double> %temp.vect2825.i, double %1285, i32 13
  %temp.vect2827.i = insertelement <16 x double> %temp.vect2826.i, double %1286, i32 14
  %temp.vect2828.i = insertelement <16 x double> %temp.vect2827.i, double %1287, i32 15
  %1288 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1289 = load i64* %1288, align 8
  %1290 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1291 = load i64* %1290, align 8
  %1292 = add i64 %1289, %1291
  %extract2796.i = add i64 %1292, 8073216
  %1293 = getelementptr inbounds double addrspace(1)* %4, i64 %extract2796.i
  %ptrTypeCast2812.i = bitcast double addrspace(1)* %1293 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect2828.i, <16 x double> addrspace(1)* %ptrTypeCast2812.i, align 8
  %1294 = fmul <16 x double> %41, <double 0x40D3A82AAB367A10, double 0x40D3A82AAB367A10, double 0x40D3A82AAB367A10, double 0x40D3A82AAB367A10, double 0x40D3A82AAB367A10, double 0x40D3A82AAB367A10, double 0x40D3A82AAB367A10, double 0x40D3A82AAB367A10, double 0x40D3A82AAB367A10, double 0x40D3A82AAB367A10, double 0x40D3A82AAB367A10, double 0x40D3A82AAB367A10, double 0x40D3A82AAB367A10, double 0x40D3A82AAB367A10, double 0x40D3A82AAB367A10, double 0x40D3A82AAB367A10>
  %1295 = fsub <16 x double> <double 0x40401E3B843A8CC4, double 0x40401E3B843A8CC4, double 0x40401E3B843A8CC4, double 0x40401E3B843A8CC4, double 0x40401E3B843A8CC4, double 0x40401E3B843A8CC4, double 0x40401E3B843A8CC4, double 0x40401E3B843A8CC4, double 0x40401E3B843A8CC4, double 0x40401E3B843A8CC4, double 0x40401E3B843A8CC4, double 0x40401E3B843A8CC4, double 0x40401E3B843A8CC4, double 0x40401E3B843A8CC4, double 0x40401E3B843A8CC4, double 0x40401E3B843A8CC4>, %1294
  %extract2829.i = extractelement <16 x double> %1295, i32 0
  %extract2830.i = extractelement <16 x double> %1295, i32 1
  %extract2831.i = extractelement <16 x double> %1295, i32 2
  %extract2832.i = extractelement <16 x double> %1295, i32 3
  %extract2833.i = extractelement <16 x double> %1295, i32 4
  %extract2834.i = extractelement <16 x double> %1295, i32 5
  %extract2835.i = extractelement <16 x double> %1295, i32 6
  %extract2836.i = extractelement <16 x double> %1295, i32 7
  %extract2837.i = extractelement <16 x double> %1295, i32 8
  %extract2838.i = extractelement <16 x double> %1295, i32 9
  %extract2839.i = extractelement <16 x double> %1295, i32 10
  %extract2840.i = extractelement <16 x double> %1295, i32 11
  %extract2841.i = extractelement <16 x double> %1295, i32 12
  %extract2842.i = extractelement <16 x double> %1295, i32 13
  %extract2843.i = extractelement <16 x double> %1295, i32 14
  %extract2844.i = extractelement <16 x double> %1295, i32 15
  %1296 = call double @_Z3expd(double %extract2829.i) nounwind
  %1297 = call double @_Z3expd(double %extract2830.i) nounwind
  %1298 = call double @_Z3expd(double %extract2831.i) nounwind
  %1299 = call double @_Z3expd(double %extract2832.i) nounwind
  %1300 = call double @_Z3expd(double %extract2833.i) nounwind
  %1301 = call double @_Z3expd(double %extract2834.i) nounwind
  %1302 = call double @_Z3expd(double %extract2835.i) nounwind
  %1303 = call double @_Z3expd(double %extract2836.i) nounwind
  %1304 = call double @_Z3expd(double %extract2837.i) nounwind
  %1305 = call double @_Z3expd(double %extract2838.i) nounwind
  %1306 = call double @_Z3expd(double %extract2839.i) nounwind
  %1307 = call double @_Z3expd(double %extract2840.i) nounwind
  %1308 = call double @_Z3expd(double %extract2841.i) nounwind
  %1309 = call double @_Z3expd(double %extract2842.i) nounwind
  %1310 = call double @_Z3expd(double %extract2843.i) nounwind
  %1311 = call double @_Z3expd(double %extract2844.i) nounwind
  %temp.vect2864.i = insertelement <16 x double> undef, double %1296, i32 0
  %temp.vect2865.i = insertelement <16 x double> %temp.vect2864.i, double %1297, i32 1
  %temp.vect2866.i = insertelement <16 x double> %temp.vect2865.i, double %1298, i32 2
  %temp.vect2867.i = insertelement <16 x double> %temp.vect2866.i, double %1299, i32 3
  %temp.vect2868.i = insertelement <16 x double> %temp.vect2867.i, double %1300, i32 4
  %temp.vect2869.i = insertelement <16 x double> %temp.vect2868.i, double %1301, i32 5
  %temp.vect2870.i = insertelement <16 x double> %temp.vect2869.i, double %1302, i32 6
  %temp.vect2871.i = insertelement <16 x double> %temp.vect2870.i, double %1303, i32 7
  %temp.vect2872.i = insertelement <16 x double> %temp.vect2871.i, double %1304, i32 8
  %temp.vect2873.i = insertelement <16 x double> %temp.vect2872.i, double %1305, i32 9
  %temp.vect2874.i = insertelement <16 x double> %temp.vect2873.i, double %1306, i32 10
  %temp.vect2875.i = insertelement <16 x double> %temp.vect2874.i, double %1307, i32 11
  %temp.vect2876.i = insertelement <16 x double> %temp.vect2875.i, double %1308, i32 12
  %temp.vect2877.i = insertelement <16 x double> %temp.vect2876.i, double %1309, i32 13
  %temp.vect2878.i = insertelement <16 x double> %temp.vect2877.i, double %1310, i32 14
  %temp.vect2879.i = insertelement <16 x double> %temp.vect2878.i, double %1311, i32 15
  %1312 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1313 = load i64* %1312, align 8
  %1314 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1315 = load i64* %1314, align 8
  %1316 = add i64 %1313, %1315
  %extract2847.i = add i64 %1316, 8183808
  %1317 = getelementptr inbounds double addrspace(1)* %4, i64 %extract2847.i
  %ptrTypeCast2863.i = bitcast double addrspace(1)* %1317 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect2879.i, <16 x double> addrspace(1)* %ptrTypeCast2863.i, align 8
  %1318 = fmul <16 x double> %41, <double 0xC0AF7377785729B3, double 0xC0AF7377785729B3, double 0xC0AF7377785729B3, double 0xC0AF7377785729B3, double 0xC0AF7377785729B3, double 0xC0AF7377785729B3, double 0xC0AF7377785729B3, double 0xC0AF7377785729B3, double 0xC0AF7377785729B3, double 0xC0AF7377785729B3, double 0xC0AF7377785729B3, double 0xC0AF7377785729B3, double 0xC0AF7377785729B3, double 0xC0AF7377785729B3, double 0xC0AF7377785729B3, double 0xC0AF7377785729B3>
  %extract2880.i = extractelement <16 x double> %1318, i32 0
  %extract2881.i = extractelement <16 x double> %1318, i32 1
  %extract2882.i = extractelement <16 x double> %1318, i32 2
  %extract2883.i = extractelement <16 x double> %1318, i32 3
  %extract2884.i = extractelement <16 x double> %1318, i32 4
  %extract2885.i = extractelement <16 x double> %1318, i32 5
  %extract2886.i = extractelement <16 x double> %1318, i32 6
  %extract2887.i = extractelement <16 x double> %1318, i32 7
  %extract2888.i = extractelement <16 x double> %1318, i32 8
  %extract2889.i = extractelement <16 x double> %1318, i32 9
  %extract2890.i = extractelement <16 x double> %1318, i32 10
  %extract2891.i = extractelement <16 x double> %1318, i32 11
  %extract2892.i = extractelement <16 x double> %1318, i32 12
  %extract2893.i = extractelement <16 x double> %1318, i32 13
  %extract2894.i = extractelement <16 x double> %1318, i32 14
  %extract2895.i = extractelement <16 x double> %1318, i32 15
  %1319 = call double @_Z3expd(double %extract2880.i) nounwind
  %1320 = call double @_Z3expd(double %extract2881.i) nounwind
  %1321 = call double @_Z3expd(double %extract2882.i) nounwind
  %1322 = call double @_Z3expd(double %extract2883.i) nounwind
  %1323 = call double @_Z3expd(double %extract2884.i) nounwind
  %1324 = call double @_Z3expd(double %extract2885.i) nounwind
  %1325 = call double @_Z3expd(double %extract2886.i) nounwind
  %1326 = call double @_Z3expd(double %extract2887.i) nounwind
  %1327 = call double @_Z3expd(double %extract2888.i) nounwind
  %1328 = call double @_Z3expd(double %extract2889.i) nounwind
  %1329 = call double @_Z3expd(double %extract2890.i) nounwind
  %1330 = call double @_Z3expd(double %extract2891.i) nounwind
  %1331 = call double @_Z3expd(double %extract2892.i) nounwind
  %1332 = call double @_Z3expd(double %extract2893.i) nounwind
  %1333 = call double @_Z3expd(double %extract2894.i) nounwind
  %1334 = call double @_Z3expd(double %extract2895.i) nounwind
  %temp.vect2896.i = insertelement <16 x double> undef, double %1319, i32 0
  %temp.vect2897.i = insertelement <16 x double> %temp.vect2896.i, double %1320, i32 1
  %temp.vect2898.i = insertelement <16 x double> %temp.vect2897.i, double %1321, i32 2
  %temp.vect2899.i = insertelement <16 x double> %temp.vect2898.i, double %1322, i32 3
  %temp.vect2900.i = insertelement <16 x double> %temp.vect2899.i, double %1323, i32 4
  %temp.vect2901.i = insertelement <16 x double> %temp.vect2900.i, double %1324, i32 5
  %temp.vect2902.i = insertelement <16 x double> %temp.vect2901.i, double %1325, i32 6
  %temp.vect2903.i = insertelement <16 x double> %temp.vect2902.i, double %1326, i32 7
  %temp.vect2904.i = insertelement <16 x double> %temp.vect2903.i, double %1327, i32 8
  %temp.vect2905.i = insertelement <16 x double> %temp.vect2904.i, double %1328, i32 9
  %temp.vect2906.i = insertelement <16 x double> %temp.vect2905.i, double %1329, i32 10
  %temp.vect2907.i = insertelement <16 x double> %temp.vect2906.i, double %1330, i32 11
  %temp.vect2908.i = insertelement <16 x double> %temp.vect2907.i, double %1331, i32 12
  %temp.vect2909.i = insertelement <16 x double> %temp.vect2908.i, double %1332, i32 13
  %temp.vect2910.i = insertelement <16 x double> %temp.vect2909.i, double %1333, i32 14
  %temp.vect2911.i = insertelement <16 x double> %temp.vect2910.i, double %1334, i32 15
  %1335 = fmul <16 x double> %temp.vect2911.i, <double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12>
  %1336 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1337 = load i64* %1336, align 8
  %1338 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1339 = load i64* %1338, align 8
  %1340 = add i64 %1337, %1339
  %extract2914.i = add i64 %1340, 8294400
  %1341 = getelementptr inbounds double addrspace(1)* %4, i64 %extract2914.i
  %ptrTypeCast2930.i = bitcast double addrspace(1)* %1341 to <16 x double> addrspace(1)*
  store <16 x double> %1335, <16 x double> addrspace(1)* %ptrTypeCast2930.i, align 8
  %1342 = fmul <16 x double> %temp.vect2911.i, <double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13>
  %1343 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1344 = load i64* %1343, align 8
  %1345 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1346 = load i64* %1345, align 8
  %1347 = add i64 %1344, %1346
  %extract2933.i = add i64 %1347, 13934592
  %1348 = getelementptr inbounds double addrspace(1)* %4, i64 %extract2933.i
  %ptrTypeCast2949.i = bitcast double addrspace(1)* %1348 to <16 x double> addrspace(1)*
  store <16 x double> %1342, <16 x double> addrspace(1)* %ptrTypeCast2949.i, align 8
  %1349 = fmul <16 x double> %temp.vect2911.i, <double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13>
  %1350 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1351 = load i64* %1350, align 8
  %1352 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1353 = load i64* %1352, align 8
  %1354 = add i64 %1351, %1353
  %extract2952.i = add i64 %1354, 14155776
  %1355 = getelementptr inbounds double addrspace(1)* %4, i64 %extract2952.i
  %ptrTypeCast2968.i = bitcast double addrspace(1)* %1355 to <16 x double> addrspace(1)*
  store <16 x double> %1349, <16 x double> addrspace(1)* %ptrTypeCast2968.i, align 8
  %1356 = fmul <16 x double> %41, <double 0x407032815E39713B, double 0x407032815E39713B, double 0x407032815E39713B, double 0x407032815E39713B, double 0x407032815E39713B, double 0x407032815E39713B, double 0x407032815E39713B, double 0x407032815E39713B, double 0x407032815E39713B, double 0x407032815E39713B, double 0x407032815E39713B, double 0x407032815E39713B, double 0x407032815E39713B, double 0x407032815E39713B, double 0x407032815E39713B, double 0x407032815E39713B>
  %1357 = fadd <16 x double> %1356, <double 0x4040172079F30B25, double 0x4040172079F30B25, double 0x4040172079F30B25, double 0x4040172079F30B25, double 0x4040172079F30B25, double 0x4040172079F30B25, double 0x4040172079F30B25, double 0x4040172079F30B25, double 0x4040172079F30B25, double 0x4040172079F30B25, double 0x4040172079F30B25, double 0x4040172079F30B25, double 0x4040172079F30B25, double 0x4040172079F30B25, double 0x4040172079F30B25, double 0x4040172079F30B25>
  %extract2969.i = extractelement <16 x double> %1357, i32 0
  %extract2970.i = extractelement <16 x double> %1357, i32 1
  %extract2971.i = extractelement <16 x double> %1357, i32 2
  %extract2972.i = extractelement <16 x double> %1357, i32 3
  %extract2973.i = extractelement <16 x double> %1357, i32 4
  %extract2974.i = extractelement <16 x double> %1357, i32 5
  %extract2975.i = extractelement <16 x double> %1357, i32 6
  %extract2976.i = extractelement <16 x double> %1357, i32 7
  %extract2977.i = extractelement <16 x double> %1357, i32 8
  %extract2978.i = extractelement <16 x double> %1357, i32 9
  %extract2979.i = extractelement <16 x double> %1357, i32 10
  %extract2980.i = extractelement <16 x double> %1357, i32 11
  %extract2981.i = extractelement <16 x double> %1357, i32 12
  %extract2982.i = extractelement <16 x double> %1357, i32 13
  %extract2983.i = extractelement <16 x double> %1357, i32 14
  %extract2984.i = extractelement <16 x double> %1357, i32 15
  %1358 = call double @_Z3expd(double %extract2969.i) nounwind
  %1359 = call double @_Z3expd(double %extract2970.i) nounwind
  %1360 = call double @_Z3expd(double %extract2971.i) nounwind
  %1361 = call double @_Z3expd(double %extract2972.i) nounwind
  %1362 = call double @_Z3expd(double %extract2973.i) nounwind
  %1363 = call double @_Z3expd(double %extract2974.i) nounwind
  %1364 = call double @_Z3expd(double %extract2975.i) nounwind
  %1365 = call double @_Z3expd(double %extract2976.i) nounwind
  %1366 = call double @_Z3expd(double %extract2977.i) nounwind
  %1367 = call double @_Z3expd(double %extract2978.i) nounwind
  %1368 = call double @_Z3expd(double %extract2979.i) nounwind
  %1369 = call double @_Z3expd(double %extract2980.i) nounwind
  %1370 = call double @_Z3expd(double %extract2981.i) nounwind
  %1371 = call double @_Z3expd(double %extract2982.i) nounwind
  %1372 = call double @_Z3expd(double %extract2983.i) nounwind
  %1373 = call double @_Z3expd(double %extract2984.i) nounwind
  %temp.vect3004.i = insertelement <16 x double> undef, double %1358, i32 0
  %temp.vect3005.i = insertelement <16 x double> %temp.vect3004.i, double %1359, i32 1
  %temp.vect3006.i = insertelement <16 x double> %temp.vect3005.i, double %1360, i32 2
  %temp.vect3007.i = insertelement <16 x double> %temp.vect3006.i, double %1361, i32 3
  %temp.vect3008.i = insertelement <16 x double> %temp.vect3007.i, double %1362, i32 4
  %temp.vect3009.i = insertelement <16 x double> %temp.vect3008.i, double %1363, i32 5
  %temp.vect3010.i = insertelement <16 x double> %temp.vect3009.i, double %1364, i32 6
  %temp.vect3011.i = insertelement <16 x double> %temp.vect3010.i, double %1365, i32 7
  %temp.vect3012.i = insertelement <16 x double> %temp.vect3011.i, double %1366, i32 8
  %temp.vect3013.i = insertelement <16 x double> %temp.vect3012.i, double %1367, i32 9
  %temp.vect3014.i = insertelement <16 x double> %temp.vect3013.i, double %1368, i32 10
  %temp.vect3015.i = insertelement <16 x double> %temp.vect3014.i, double %1369, i32 11
  %temp.vect3016.i = insertelement <16 x double> %temp.vect3015.i, double %1370, i32 12
  %temp.vect3017.i = insertelement <16 x double> %temp.vect3016.i, double %1371, i32 13
  %temp.vect3018.i = insertelement <16 x double> %temp.vect3017.i, double %1372, i32 14
  %temp.vect3019.i = insertelement <16 x double> %temp.vect3018.i, double %1373, i32 15
  %1374 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1375 = load i64* %1374, align 8
  %1376 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1377 = load i64* %1376, align 8
  %1378 = add i64 %1375, %1377
  %extract2987.i = add i64 %1378, 8404992
  %1379 = getelementptr inbounds double addrspace(1)* %4, i64 %extract2987.i
  %ptrTypeCast3003.i = bitcast double addrspace(1)* %1379 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect3019.i, <16 x double> addrspace(1)* %ptrTypeCast3003.i, align 8
  %1380 = fmul <16 x double> %temp.vect97.i, <double 6.300000e-01, double 6.300000e-01, double 6.300000e-01, double 6.300000e-01, double 6.300000e-01, double 6.300000e-01, double 6.300000e-01, double 6.300000e-01, double 6.300000e-01, double 6.300000e-01, double 6.300000e-01, double 6.300000e-01, double 6.300000e-01, double 6.300000e-01, double 6.300000e-01, double 6.300000e-01>
  %1381 = fsub <16 x double> <double 0x40428A49D6E3A704, double 0x40428A49D6E3A704, double 0x40428A49D6E3A704, double 0x40428A49D6E3A704, double 0x40428A49D6E3A704, double 0x40428A49D6E3A704, double 0x40428A49D6E3A704, double 0x40428A49D6E3A704, double 0x40428A49D6E3A704, double 0x40428A49D6E3A704, double 0x40428A49D6E3A704, double 0x40428A49D6E3A704, double 0x40428A49D6E3A704, double 0x40428A49D6E3A704, double 0x40428A49D6E3A704, double 0x40428A49D6E3A704>, %1380
  %1382 = fmul <16 x double> %41, <double 0x4068176C69B5A640, double 0x4068176C69B5A640, double 0x4068176C69B5A640, double 0x4068176C69B5A640, double 0x4068176C69B5A640, double 0x4068176C69B5A640, double 0x4068176C69B5A640, double 0x4068176C69B5A640, double 0x4068176C69B5A640, double 0x4068176C69B5A640, double 0x4068176C69B5A640, double 0x4068176C69B5A640, double 0x4068176C69B5A640, double 0x4068176C69B5A640, double 0x4068176C69B5A640, double 0x4068176C69B5A640>
  %1383 = fsub <16 x double> %1381, %1382
  %extract3020.i = extractelement <16 x double> %1383, i32 0
  %extract3021.i = extractelement <16 x double> %1383, i32 1
  %extract3022.i = extractelement <16 x double> %1383, i32 2
  %extract3023.i = extractelement <16 x double> %1383, i32 3
  %extract3024.i = extractelement <16 x double> %1383, i32 4
  %extract3025.i = extractelement <16 x double> %1383, i32 5
  %extract3026.i = extractelement <16 x double> %1383, i32 6
  %extract3027.i = extractelement <16 x double> %1383, i32 7
  %extract3028.i = extractelement <16 x double> %1383, i32 8
  %extract3029.i = extractelement <16 x double> %1383, i32 9
  %extract3030.i = extractelement <16 x double> %1383, i32 10
  %extract3031.i = extractelement <16 x double> %1383, i32 11
  %extract3032.i = extractelement <16 x double> %1383, i32 12
  %extract3033.i = extractelement <16 x double> %1383, i32 13
  %extract3034.i = extractelement <16 x double> %1383, i32 14
  %extract3035.i = extractelement <16 x double> %1383, i32 15
  %1384 = call double @_Z3expd(double %extract3020.i) nounwind
  %1385 = call double @_Z3expd(double %extract3021.i) nounwind
  %1386 = call double @_Z3expd(double %extract3022.i) nounwind
  %1387 = call double @_Z3expd(double %extract3023.i) nounwind
  %1388 = call double @_Z3expd(double %extract3024.i) nounwind
  %1389 = call double @_Z3expd(double %extract3025.i) nounwind
  %1390 = call double @_Z3expd(double %extract3026.i) nounwind
  %1391 = call double @_Z3expd(double %extract3027.i) nounwind
  %1392 = call double @_Z3expd(double %extract3028.i) nounwind
  %1393 = call double @_Z3expd(double %extract3029.i) nounwind
  %1394 = call double @_Z3expd(double %extract3030.i) nounwind
  %1395 = call double @_Z3expd(double %extract3031.i) nounwind
  %1396 = call double @_Z3expd(double %extract3032.i) nounwind
  %1397 = call double @_Z3expd(double %extract3033.i) nounwind
  %1398 = call double @_Z3expd(double %extract3034.i) nounwind
  %1399 = call double @_Z3expd(double %extract3035.i) nounwind
  %temp.vect3055.i = insertelement <16 x double> undef, double %1384, i32 0
  %temp.vect3056.i = insertelement <16 x double> %temp.vect3055.i, double %1385, i32 1
  %temp.vect3057.i = insertelement <16 x double> %temp.vect3056.i, double %1386, i32 2
  %temp.vect3058.i = insertelement <16 x double> %temp.vect3057.i, double %1387, i32 3
  %temp.vect3059.i = insertelement <16 x double> %temp.vect3058.i, double %1388, i32 4
  %temp.vect3060.i = insertelement <16 x double> %temp.vect3059.i, double %1389, i32 5
  %temp.vect3061.i = insertelement <16 x double> %temp.vect3060.i, double %1390, i32 6
  %temp.vect3062.i = insertelement <16 x double> %temp.vect3061.i, double %1391, i32 7
  %temp.vect3063.i = insertelement <16 x double> %temp.vect3062.i, double %1392, i32 8
  %temp.vect3064.i = insertelement <16 x double> %temp.vect3063.i, double %1393, i32 9
  %temp.vect3065.i = insertelement <16 x double> %temp.vect3064.i, double %1394, i32 10
  %temp.vect3066.i = insertelement <16 x double> %temp.vect3065.i, double %1395, i32 11
  %temp.vect3067.i = insertelement <16 x double> %temp.vect3066.i, double %1396, i32 12
  %temp.vect3068.i = insertelement <16 x double> %temp.vect3067.i, double %1397, i32 13
  %temp.vect3069.i = insertelement <16 x double> %temp.vect3068.i, double %1398, i32 14
  %temp.vect3070.i = insertelement <16 x double> %temp.vect3069.i, double %1399, i32 15
  %1400 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1401 = load i64* %1400, align 8
  %1402 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1403 = load i64* %1402, align 8
  %1404 = add i64 %1401, %1403
  %extract3038.i = add i64 %1404, 8515584
  %1405 = getelementptr inbounds double addrspace(1)* %4, i64 %extract3038.i
  %ptrTypeCast3054.i = bitcast double addrspace(1)* %1405 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect3070.i, <16 x double> addrspace(1)* %ptrTypeCast3054.i, align 8
  %1406 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1407 = load i64* %1406, align 8
  %1408 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1409 = load i64* %1408, align 8
  %1410 = add i64 %1407, %1409
  %extract3073.i = add i64 %1410, 8626176
  %1411 = getelementptr inbounds double addrspace(1)* %4, i64 %extract3073.i
  %ptrTypeCast3089.i = bitcast double addrspace(1)* %1411 to <16 x double> addrspace(1)*
  store <16 x double> <double 8.430000e+13, double 8.430000e+13, double 8.430000e+13, double 8.430000e+13, double 8.430000e+13, double 8.430000e+13, double 8.430000e+13, double 8.430000e+13, double 8.430000e+13, double 8.430000e+13, double 8.430000e+13, double 8.430000e+13, double 8.430000e+13, double 8.430000e+13, double 8.430000e+13, double 8.430000e+13>, <16 x double> addrspace(1)* %ptrTypeCast3089.i, align 8
  %1412 = fmul <16 x double> %temp.vect97.i, <double 1.600000e+00, double 1.600000e+00, double 1.600000e+00, double 1.600000e+00, double 1.600000e+00, double 1.600000e+00, double 1.600000e+00, double 1.600000e+00, double 1.600000e+00, double 1.600000e+00, double 1.600000e+00, double 1.600000e+00, double 1.600000e+00, double 1.600000e+00, double 1.600000e+00, double 1.600000e+00>
  %1413 = fadd <16 x double> %1412, <double 0x4031D742BEC1714F, double 0x4031D742BEC1714F, double 0x4031D742BEC1714F, double 0x4031D742BEC1714F, double 0x4031D742BEC1714F, double 0x4031D742BEC1714F, double 0x4031D742BEC1714F, double 0x4031D742BEC1714F, double 0x4031D742BEC1714F, double 0x4031D742BEC1714F, double 0x4031D742BEC1714F, double 0x4031D742BEC1714F, double 0x4031D742BEC1714F, double 0x4031D742BEC1714F, double 0x4031D742BEC1714F, double 0x4031D742BEC1714F>
  %1414 = fmul <16 x double> %41, <double 0x40A54EDE61CFFEB0, double 0x40A54EDE61CFFEB0, double 0x40A54EDE61CFFEB0, double 0x40A54EDE61CFFEB0, double 0x40A54EDE61CFFEB0, double 0x40A54EDE61CFFEB0, double 0x40A54EDE61CFFEB0, double 0x40A54EDE61CFFEB0, double 0x40A54EDE61CFFEB0, double 0x40A54EDE61CFFEB0, double 0x40A54EDE61CFFEB0, double 0x40A54EDE61CFFEB0, double 0x40A54EDE61CFFEB0, double 0x40A54EDE61CFFEB0, double 0x40A54EDE61CFFEB0, double 0x40A54EDE61CFFEB0>
  %1415 = fsub <16 x double> %1413, %1414
  %extract3090.i = extractelement <16 x double> %1415, i32 0
  %extract3091.i = extractelement <16 x double> %1415, i32 1
  %extract3092.i = extractelement <16 x double> %1415, i32 2
  %extract3093.i = extractelement <16 x double> %1415, i32 3
  %extract3094.i = extractelement <16 x double> %1415, i32 4
  %extract3095.i = extractelement <16 x double> %1415, i32 5
  %extract3096.i = extractelement <16 x double> %1415, i32 6
  %extract3097.i = extractelement <16 x double> %1415, i32 7
  %extract3098.i = extractelement <16 x double> %1415, i32 8
  %extract3099.i = extractelement <16 x double> %1415, i32 9
  %extract3100.i = extractelement <16 x double> %1415, i32 10
  %extract3101.i = extractelement <16 x double> %1415, i32 11
  %extract3102.i = extractelement <16 x double> %1415, i32 12
  %extract3103.i = extractelement <16 x double> %1415, i32 13
  %extract3104.i = extractelement <16 x double> %1415, i32 14
  %extract3105.i = extractelement <16 x double> %1415, i32 15
  %1416 = call double @_Z3expd(double %extract3090.i) nounwind
  %1417 = call double @_Z3expd(double %extract3091.i) nounwind
  %1418 = call double @_Z3expd(double %extract3092.i) nounwind
  %1419 = call double @_Z3expd(double %extract3093.i) nounwind
  %1420 = call double @_Z3expd(double %extract3094.i) nounwind
  %1421 = call double @_Z3expd(double %extract3095.i) nounwind
  %1422 = call double @_Z3expd(double %extract3096.i) nounwind
  %1423 = call double @_Z3expd(double %extract3097.i) nounwind
  %1424 = call double @_Z3expd(double %extract3098.i) nounwind
  %1425 = call double @_Z3expd(double %extract3099.i) nounwind
  %1426 = call double @_Z3expd(double %extract3100.i) nounwind
  %1427 = call double @_Z3expd(double %extract3101.i) nounwind
  %1428 = call double @_Z3expd(double %extract3102.i) nounwind
  %1429 = call double @_Z3expd(double %extract3103.i) nounwind
  %1430 = call double @_Z3expd(double %extract3104.i) nounwind
  %1431 = call double @_Z3expd(double %extract3105.i) nounwind
  %temp.vect3125.i = insertelement <16 x double> undef, double %1416, i32 0
  %temp.vect3126.i = insertelement <16 x double> %temp.vect3125.i, double %1417, i32 1
  %temp.vect3127.i = insertelement <16 x double> %temp.vect3126.i, double %1418, i32 2
  %temp.vect3128.i = insertelement <16 x double> %temp.vect3127.i, double %1419, i32 3
  %temp.vect3129.i = insertelement <16 x double> %temp.vect3128.i, double %1420, i32 4
  %temp.vect3130.i = insertelement <16 x double> %temp.vect3129.i, double %1421, i32 5
  %temp.vect3131.i = insertelement <16 x double> %temp.vect3130.i, double %1422, i32 6
  %temp.vect3132.i = insertelement <16 x double> %temp.vect3131.i, double %1423, i32 7
  %temp.vect3133.i = insertelement <16 x double> %temp.vect3132.i, double %1424, i32 8
  %temp.vect3134.i = insertelement <16 x double> %temp.vect3133.i, double %1425, i32 9
  %temp.vect3135.i = insertelement <16 x double> %temp.vect3134.i, double %1426, i32 10
  %temp.vect3136.i = insertelement <16 x double> %temp.vect3135.i, double %1427, i32 11
  %temp.vect3137.i = insertelement <16 x double> %temp.vect3136.i, double %1428, i32 12
  %temp.vect3138.i = insertelement <16 x double> %temp.vect3137.i, double %1429, i32 13
  %temp.vect3139.i = insertelement <16 x double> %temp.vect3138.i, double %1430, i32 14
  %temp.vect3140.i = insertelement <16 x double> %temp.vect3139.i, double %1431, i32 15
  %1432 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1433 = load i64* %1432, align 8
  %1434 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1435 = load i64* %1434, align 8
  %1436 = add i64 %1433, %1435
  %extract3108.i = add i64 %1436, 8736768
  %1437 = getelementptr inbounds double addrspace(1)* %4, i64 %extract3108.i
  %ptrTypeCast3124.i = bitcast double addrspace(1)* %1437 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect3140.i, <16 x double> addrspace(1)* %ptrTypeCast3124.i, align 8
  %1438 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1439 = load i64* %1438, align 8
  %1440 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1441 = load i64* %1440, align 8
  %1442 = add i64 %1439, %1441
  %extract3143.i = add i64 %1442, 8847360
  %1443 = getelementptr inbounds double addrspace(1)* %4, i64 %extract3143.i
  %ptrTypeCast3159.i = bitcast double addrspace(1)* %1443 to <16 x double> addrspace(1)*
  store <16 x double> <double 2.501000e+13, double 2.501000e+13, double 2.501000e+13, double 2.501000e+13, double 2.501000e+13, double 2.501000e+13, double 2.501000e+13, double 2.501000e+13, double 2.501000e+13, double 2.501000e+13, double 2.501000e+13, double 2.501000e+13, double 2.501000e+13, double 2.501000e+13, double 2.501000e+13, double 2.501000e+13>, <16 x double> addrspace(1)* %ptrTypeCast3159.i, align 8
  %1444 = fmul <16 x double> %41, <double 1.449264e+04, double 1.449264e+04, double 1.449264e+04, double 1.449264e+04, double 1.449264e+04, double 1.449264e+04, double 1.449264e+04, double 1.449264e+04, double 1.449264e+04, double 1.449264e+04, double 1.449264e+04, double 1.449264e+04, double 1.449264e+04, double 1.449264e+04, double 1.449264e+04, double 1.449264e+04>
  %1445 = fsub <16 x double> <double 0x403F0F3C020ECDF9, double 0x403F0F3C020ECDF9, double 0x403F0F3C020ECDF9, double 0x403F0F3C020ECDF9, double 0x403F0F3C020ECDF9, double 0x403F0F3C020ECDF9, double 0x403F0F3C020ECDF9, double 0x403F0F3C020ECDF9, double 0x403F0F3C020ECDF9, double 0x403F0F3C020ECDF9, double 0x403F0F3C020ECDF9, double 0x403F0F3C020ECDF9, double 0x403F0F3C020ECDF9, double 0x403F0F3C020ECDF9, double 0x403F0F3C020ECDF9, double 0x403F0F3C020ECDF9>, %1444
  %extract3160.i = extractelement <16 x double> %1445, i32 0
  %extract3161.i = extractelement <16 x double> %1445, i32 1
  %extract3162.i = extractelement <16 x double> %1445, i32 2
  %extract3163.i = extractelement <16 x double> %1445, i32 3
  %extract3164.i = extractelement <16 x double> %1445, i32 4
  %extract3165.i = extractelement <16 x double> %1445, i32 5
  %extract3166.i = extractelement <16 x double> %1445, i32 6
  %extract3167.i = extractelement <16 x double> %1445, i32 7
  %extract3168.i = extractelement <16 x double> %1445, i32 8
  %extract3169.i = extractelement <16 x double> %1445, i32 9
  %extract3170.i = extractelement <16 x double> %1445, i32 10
  %extract3171.i = extractelement <16 x double> %1445, i32 11
  %extract3172.i = extractelement <16 x double> %1445, i32 12
  %extract3173.i = extractelement <16 x double> %1445, i32 13
  %extract3174.i = extractelement <16 x double> %1445, i32 14
  %extract3175.i = extractelement <16 x double> %1445, i32 15
  %1446 = call double @_Z3expd(double %extract3160.i) nounwind
  %1447 = call double @_Z3expd(double %extract3161.i) nounwind
  %1448 = call double @_Z3expd(double %extract3162.i) nounwind
  %1449 = call double @_Z3expd(double %extract3163.i) nounwind
  %1450 = call double @_Z3expd(double %extract3164.i) nounwind
  %1451 = call double @_Z3expd(double %extract3165.i) nounwind
  %1452 = call double @_Z3expd(double %extract3166.i) nounwind
  %1453 = call double @_Z3expd(double %extract3167.i) nounwind
  %1454 = call double @_Z3expd(double %extract3168.i) nounwind
  %1455 = call double @_Z3expd(double %extract3169.i) nounwind
  %1456 = call double @_Z3expd(double %extract3170.i) nounwind
  %1457 = call double @_Z3expd(double %extract3171.i) nounwind
  %1458 = call double @_Z3expd(double %extract3172.i) nounwind
  %1459 = call double @_Z3expd(double %extract3173.i) nounwind
  %1460 = call double @_Z3expd(double %extract3174.i) nounwind
  %1461 = call double @_Z3expd(double %extract3175.i) nounwind
  %temp.vect3195.i = insertelement <16 x double> undef, double %1446, i32 0
  %temp.vect3196.i = insertelement <16 x double> %temp.vect3195.i, double %1447, i32 1
  %temp.vect3197.i = insertelement <16 x double> %temp.vect3196.i, double %1448, i32 2
  %temp.vect3198.i = insertelement <16 x double> %temp.vect3197.i, double %1449, i32 3
  %temp.vect3199.i = insertelement <16 x double> %temp.vect3198.i, double %1450, i32 4
  %temp.vect3200.i = insertelement <16 x double> %temp.vect3199.i, double %1451, i32 5
  %temp.vect3201.i = insertelement <16 x double> %temp.vect3200.i, double %1452, i32 6
  %temp.vect3202.i = insertelement <16 x double> %temp.vect3201.i, double %1453, i32 7
  %temp.vect3203.i = insertelement <16 x double> %temp.vect3202.i, double %1454, i32 8
  %temp.vect3204.i = insertelement <16 x double> %temp.vect3203.i, double %1455, i32 9
  %temp.vect3205.i = insertelement <16 x double> %temp.vect3204.i, double %1456, i32 10
  %temp.vect3206.i = insertelement <16 x double> %temp.vect3205.i, double %1457, i32 11
  %temp.vect3207.i = insertelement <16 x double> %temp.vect3206.i, double %1458, i32 12
  %temp.vect3208.i = insertelement <16 x double> %temp.vect3207.i, double %1459, i32 13
  %temp.vect3209.i = insertelement <16 x double> %temp.vect3208.i, double %1460, i32 14
  %temp.vect3210.i = insertelement <16 x double> %temp.vect3209.i, double %1461, i32 15
  %1462 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1463 = load i64* %1462, align 8
  %1464 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1465 = load i64* %1464, align 8
  %1466 = add i64 %1463, %1465
  %extract3178.i = add i64 %1466, 8957952
  %1467 = getelementptr inbounds double addrspace(1)* %4, i64 %extract3178.i
  %ptrTypeCast3194.i = bitcast double addrspace(1)* %1467 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect3210.i, <16 x double> addrspace(1)* %ptrTypeCast3194.i, align 8
  %1468 = fmul <16 x double> %41, <double 0x40B192C1CB6848BF, double 0x40B192C1CB6848BF, double 0x40B192C1CB6848BF, double 0x40B192C1CB6848BF, double 0x40B192C1CB6848BF, double 0x40B192C1CB6848BF, double 0x40B192C1CB6848BF, double 0x40B192C1CB6848BF, double 0x40B192C1CB6848BF, double 0x40B192C1CB6848BF, double 0x40B192C1CB6848BF, double 0x40B192C1CB6848BF, double 0x40B192C1CB6848BF, double 0x40B192C1CB6848BF, double 0x40B192C1CB6848BF, double 0x40B192C1CB6848BF>
  %1469 = fsub <16 x double> <double 0x40384E8972DAE8EF, double 0x40384E8972DAE8EF, double 0x40384E8972DAE8EF, double 0x40384E8972DAE8EF, double 0x40384E8972DAE8EF, double 0x40384E8972DAE8EF, double 0x40384E8972DAE8EF, double 0x40384E8972DAE8EF, double 0x40384E8972DAE8EF, double 0x40384E8972DAE8EF, double 0x40384E8972DAE8EF, double 0x40384E8972DAE8EF, double 0x40384E8972DAE8EF, double 0x40384E8972DAE8EF, double 0x40384E8972DAE8EF, double 0x40384E8972DAE8EF>, %1468
  %extract3211.i = extractelement <16 x double> %1469, i32 0
  %extract3212.i = extractelement <16 x double> %1469, i32 1
  %extract3213.i = extractelement <16 x double> %1469, i32 2
  %extract3214.i = extractelement <16 x double> %1469, i32 3
  %extract3215.i = extractelement <16 x double> %1469, i32 4
  %extract3216.i = extractelement <16 x double> %1469, i32 5
  %extract3217.i = extractelement <16 x double> %1469, i32 6
  %extract3218.i = extractelement <16 x double> %1469, i32 7
  %extract3219.i = extractelement <16 x double> %1469, i32 8
  %extract3220.i = extractelement <16 x double> %1469, i32 9
  %extract3221.i = extractelement <16 x double> %1469, i32 10
  %extract3222.i = extractelement <16 x double> %1469, i32 11
  %extract3223.i = extractelement <16 x double> %1469, i32 12
  %extract3224.i = extractelement <16 x double> %1469, i32 13
  %extract3225.i = extractelement <16 x double> %1469, i32 14
  %extract3226.i = extractelement <16 x double> %1469, i32 15
  %1470 = call double @_Z3expd(double %extract3211.i) nounwind
  %1471 = call double @_Z3expd(double %extract3212.i) nounwind
  %1472 = call double @_Z3expd(double %extract3213.i) nounwind
  %1473 = call double @_Z3expd(double %extract3214.i) nounwind
  %1474 = call double @_Z3expd(double %extract3215.i) nounwind
  %1475 = call double @_Z3expd(double %extract3216.i) nounwind
  %1476 = call double @_Z3expd(double %extract3217.i) nounwind
  %1477 = call double @_Z3expd(double %extract3218.i) nounwind
  %1478 = call double @_Z3expd(double %extract3219.i) nounwind
  %1479 = call double @_Z3expd(double %extract3220.i) nounwind
  %1480 = call double @_Z3expd(double %extract3221.i) nounwind
  %1481 = call double @_Z3expd(double %extract3222.i) nounwind
  %1482 = call double @_Z3expd(double %extract3223.i) nounwind
  %1483 = call double @_Z3expd(double %extract3224.i) nounwind
  %1484 = call double @_Z3expd(double %extract3225.i) nounwind
  %1485 = call double @_Z3expd(double %extract3226.i) nounwind
  %temp.vect3246.i = insertelement <16 x double> undef, double %1470, i32 0
  %temp.vect3247.i = insertelement <16 x double> %temp.vect3246.i, double %1471, i32 1
  %temp.vect3248.i = insertelement <16 x double> %temp.vect3247.i, double %1472, i32 2
  %temp.vect3249.i = insertelement <16 x double> %temp.vect3248.i, double %1473, i32 3
  %temp.vect3250.i = insertelement <16 x double> %temp.vect3249.i, double %1474, i32 4
  %temp.vect3251.i = insertelement <16 x double> %temp.vect3250.i, double %1475, i32 5
  %temp.vect3252.i = insertelement <16 x double> %temp.vect3251.i, double %1476, i32 6
  %temp.vect3253.i = insertelement <16 x double> %temp.vect3252.i, double %1477, i32 7
  %temp.vect3254.i = insertelement <16 x double> %temp.vect3253.i, double %1478, i32 8
  %temp.vect3255.i = insertelement <16 x double> %temp.vect3254.i, double %1479, i32 9
  %temp.vect3256.i = insertelement <16 x double> %temp.vect3255.i, double %1480, i32 10
  %temp.vect3257.i = insertelement <16 x double> %temp.vect3256.i, double %1481, i32 11
  %temp.vect3258.i = insertelement <16 x double> %temp.vect3257.i, double %1482, i32 12
  %temp.vect3259.i = insertelement <16 x double> %temp.vect3258.i, double %1483, i32 13
  %temp.vect3260.i = insertelement <16 x double> %temp.vect3259.i, double %1484, i32 14
  %temp.vect3261.i = insertelement <16 x double> %temp.vect3260.i, double %1485, i32 15
  %1486 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1487 = load i64* %1486, align 8
  %1488 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1489 = load i64* %1488, align 8
  %1490 = add i64 %1487, %1489
  %extract3229.i = add i64 %1490, 9068544
  %1491 = getelementptr inbounds double addrspace(1)* %4, i64 %extract3229.i
  %ptrTypeCast3245.i = bitcast double addrspace(1)* %1491 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect3261.i, <16 x double> addrspace(1)* %ptrTypeCast3245.i, align 8
  %1492 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1493 = load i64* %1492, align 8
  %1494 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1495 = load i64* %1494, align 8
  %1496 = add i64 %1493, %1495
  %extract3264.i = add i64 %1496, 9179136
  %1497 = getelementptr inbounds double addrspace(1)* %4, i64 %extract3264.i
  %ptrTypeCast3280.i = bitcast double addrspace(1)* %1497 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12, double 1.000000e+12>, <16 x double> addrspace(1)* %ptrTypeCast3280.i, align 8
  %1498 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1499 = load i64* %1498, align 8
  %1500 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1501 = load i64* %1500, align 8
  %1502 = add i64 %1499, %1501
  %extract3283.i = add i64 %1502, 9289728
  %1503 = getelementptr inbounds double addrspace(1)* %4, i64 %extract3283.i
  %ptrTypeCast3299.i = bitcast double addrspace(1)* %1503 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.340000e+13, double 1.340000e+13, double 1.340000e+13, double 1.340000e+13, double 1.340000e+13, double 1.340000e+13, double 1.340000e+13, double 1.340000e+13, double 1.340000e+13, double 1.340000e+13, double 1.340000e+13, double 1.340000e+13, double 1.340000e+13, double 1.340000e+13, double 1.340000e+13, double 1.340000e+13>, <16 x double> addrspace(1)* %ptrTypeCast3299.i, align 8
  %1504 = fmul <16 x double> %temp.vect97.i, <double 2.470000e+00, double 2.470000e+00, double 2.470000e+00, double 2.470000e+00, double 2.470000e+00, double 2.470000e+00, double 2.470000e+00, double 2.470000e+00, double 2.470000e+00, double 2.470000e+00, double 2.470000e+00, double 2.470000e+00, double 2.470000e+00, double 2.470000e+00, double 2.470000e+00, double 2.470000e+00>
  %1505 = fadd <16 x double> %1504, <double 0x4024367DC882BB31, double 0x4024367DC882BB31, double 0x4024367DC882BB31, double 0x4024367DC882BB31, double 0x4024367DC882BB31, double 0x4024367DC882BB31, double 0x4024367DC882BB31, double 0x4024367DC882BB31, double 0x4024367DC882BB31, double 0x4024367DC882BB31, double 0x4024367DC882BB31, double 0x4024367DC882BB31, double 0x4024367DC882BB31, double 0x4024367DC882BB31, double 0x4024367DC882BB31, double 0x4024367DC882BB31>
  %1506 = fmul <16 x double> %41, <double 0x40A45D531E3A7DAA, double 0x40A45D531E3A7DAA, double 0x40A45D531E3A7DAA, double 0x40A45D531E3A7DAA, double 0x40A45D531E3A7DAA, double 0x40A45D531E3A7DAA, double 0x40A45D531E3A7DAA, double 0x40A45D531E3A7DAA, double 0x40A45D531E3A7DAA, double 0x40A45D531E3A7DAA, double 0x40A45D531E3A7DAA, double 0x40A45D531E3A7DAA, double 0x40A45D531E3A7DAA, double 0x40A45D531E3A7DAA, double 0x40A45D531E3A7DAA, double 0x40A45D531E3A7DAA>
  %1507 = fsub <16 x double> %1505, %1506
  %extract3300.i = extractelement <16 x double> %1507, i32 0
  %extract3301.i = extractelement <16 x double> %1507, i32 1
  %extract3302.i = extractelement <16 x double> %1507, i32 2
  %extract3303.i = extractelement <16 x double> %1507, i32 3
  %extract3304.i = extractelement <16 x double> %1507, i32 4
  %extract3305.i = extractelement <16 x double> %1507, i32 5
  %extract3306.i = extractelement <16 x double> %1507, i32 6
  %extract3307.i = extractelement <16 x double> %1507, i32 7
  %extract3308.i = extractelement <16 x double> %1507, i32 8
  %extract3309.i = extractelement <16 x double> %1507, i32 9
  %extract3310.i = extractelement <16 x double> %1507, i32 10
  %extract3311.i = extractelement <16 x double> %1507, i32 11
  %extract3312.i = extractelement <16 x double> %1507, i32 12
  %extract3313.i = extractelement <16 x double> %1507, i32 13
  %extract3314.i = extractelement <16 x double> %1507, i32 14
  %extract3315.i = extractelement <16 x double> %1507, i32 15
  %1508 = call double @_Z3expd(double %extract3300.i) nounwind
  %1509 = call double @_Z3expd(double %extract3301.i) nounwind
  %1510 = call double @_Z3expd(double %extract3302.i) nounwind
  %1511 = call double @_Z3expd(double %extract3303.i) nounwind
  %1512 = call double @_Z3expd(double %extract3304.i) nounwind
  %1513 = call double @_Z3expd(double %extract3305.i) nounwind
  %1514 = call double @_Z3expd(double %extract3306.i) nounwind
  %1515 = call double @_Z3expd(double %extract3307.i) nounwind
  %1516 = call double @_Z3expd(double %extract3308.i) nounwind
  %1517 = call double @_Z3expd(double %extract3309.i) nounwind
  %1518 = call double @_Z3expd(double %extract3310.i) nounwind
  %1519 = call double @_Z3expd(double %extract3311.i) nounwind
  %1520 = call double @_Z3expd(double %extract3312.i) nounwind
  %1521 = call double @_Z3expd(double %extract3313.i) nounwind
  %1522 = call double @_Z3expd(double %extract3314.i) nounwind
  %1523 = call double @_Z3expd(double %extract3315.i) nounwind
  %temp.vect3335.i = insertelement <16 x double> undef, double %1508, i32 0
  %temp.vect3336.i = insertelement <16 x double> %temp.vect3335.i, double %1509, i32 1
  %temp.vect3337.i = insertelement <16 x double> %temp.vect3336.i, double %1510, i32 2
  %temp.vect3338.i = insertelement <16 x double> %temp.vect3337.i, double %1511, i32 3
  %temp.vect3339.i = insertelement <16 x double> %temp.vect3338.i, double %1512, i32 4
  %temp.vect3340.i = insertelement <16 x double> %temp.vect3339.i, double %1513, i32 5
  %temp.vect3341.i = insertelement <16 x double> %temp.vect3340.i, double %1514, i32 6
  %temp.vect3342.i = insertelement <16 x double> %temp.vect3341.i, double %1515, i32 7
  %temp.vect3343.i = insertelement <16 x double> %temp.vect3342.i, double %1516, i32 8
  %temp.vect3344.i = insertelement <16 x double> %temp.vect3343.i, double %1517, i32 9
  %temp.vect3345.i = insertelement <16 x double> %temp.vect3344.i, double %1518, i32 10
  %temp.vect3346.i = insertelement <16 x double> %temp.vect3345.i, double %1519, i32 11
  %temp.vect3347.i = insertelement <16 x double> %temp.vect3346.i, double %1520, i32 12
  %temp.vect3348.i = insertelement <16 x double> %temp.vect3347.i, double %1521, i32 13
  %temp.vect3349.i = insertelement <16 x double> %temp.vect3348.i, double %1522, i32 14
  %temp.vect3350.i = insertelement <16 x double> %temp.vect3349.i, double %1523, i32 15
  %1524 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1525 = load i64* %1524, align 8
  %1526 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1527 = load i64* %1526, align 8
  %1528 = add i64 %1525, %1527
  %extract3318.i = add i64 %1528, 9400320
  %1529 = getelementptr inbounds double addrspace(1)* %4, i64 %extract3318.i
  %ptrTypeCast3334.i = bitcast double addrspace(1)* %1529 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect3350.i, <16 x double> addrspace(1)* %ptrTypeCast3334.i, align 8
  %1530 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1531 = load i64* %1530, align 8
  %1532 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1533 = load i64* %1532, align 8
  %1534 = add i64 %1531, %1533
  %extract3353.i = add i64 %1534, 9510912
  %1535 = getelementptr inbounds double addrspace(1)* %4, i64 %extract3353.i
  %ptrTypeCast3369.i = bitcast double addrspace(1)* %1535 to <16 x double> addrspace(1)*
  store <16 x double> <double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast3369.i, align 8
  %1536 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1537 = load i64* %1536, align 8
  %1538 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1539 = load i64* %1538, align 8
  %1540 = add i64 %1537, %1539
  %extract3372.i = add i64 %1540, 9621504
  %1541 = getelementptr inbounds double addrspace(1)* %4, i64 %extract3372.i
  %ptrTypeCast3388.i = bitcast double addrspace(1)* %1541 to <16 x double> addrspace(1)*
  store <16 x double> <double 8.480000e+12, double 8.480000e+12, double 8.480000e+12, double 8.480000e+12, double 8.480000e+12, double 8.480000e+12, double 8.480000e+12, double 8.480000e+12, double 8.480000e+12, double 8.480000e+12, double 8.480000e+12, double 8.480000e+12, double 8.480000e+12, double 8.480000e+12, double 8.480000e+12, double 8.480000e+12>, <16 x double> addrspace(1)* %ptrTypeCast3388.i, align 8
  %1542 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1543 = load i64* %1542, align 8
  %1544 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1545 = load i64* %1544, align 8
  %1546 = add i64 %1543, %1545
  %extract3391.i = add i64 %1546, 9732096
  %1547 = getelementptr inbounds double addrspace(1)* %4, i64 %extract3391.i
  %ptrTypeCast3407.i = bitcast double addrspace(1)* %1547 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.800000e+13, double 1.800000e+13, double 1.800000e+13, double 1.800000e+13, double 1.800000e+13, double 1.800000e+13, double 1.800000e+13, double 1.800000e+13, double 1.800000e+13, double 1.800000e+13, double 1.800000e+13, double 1.800000e+13, double 1.800000e+13, double 1.800000e+13, double 1.800000e+13, double 1.800000e+13>, <16 x double> addrspace(1)* %ptrTypeCast3407.i, align 8
  %1548 = fmul <16 x double> %temp.vect97.i, <double 2.810000e+00, double 2.810000e+00, double 2.810000e+00, double 2.810000e+00, double 2.810000e+00, double 2.810000e+00, double 2.810000e+00, double 2.810000e+00, double 2.810000e+00, double 2.810000e+00, double 2.810000e+00, double 2.810000e+00, double 2.810000e+00, double 2.810000e+00, double 2.810000e+00, double 2.810000e+00>
  %1549 = fadd <16 x double> %1548, <double 0x40203727156DA575, double 0x40203727156DA575, double 0x40203727156DA575, double 0x40203727156DA575, double 0x40203727156DA575, double 0x40203727156DA575, double 0x40203727156DA575, double 0x40203727156DA575, double 0x40203727156DA575, double 0x40203727156DA575, double 0x40203727156DA575, double 0x40203727156DA575, double 0x40203727156DA575, double 0x40203727156DA575, double 0x40203727156DA575, double 0x40203727156DA575>
  %1550 = fmul <16 x double> %41, <double 0x40A709B307F23CC9, double 0x40A709B307F23CC9, double 0x40A709B307F23CC9, double 0x40A709B307F23CC9, double 0x40A709B307F23CC9, double 0x40A709B307F23CC9, double 0x40A709B307F23CC9, double 0x40A709B307F23CC9, double 0x40A709B307F23CC9, double 0x40A709B307F23CC9, double 0x40A709B307F23CC9, double 0x40A709B307F23CC9, double 0x40A709B307F23CC9, double 0x40A709B307F23CC9, double 0x40A709B307F23CC9, double 0x40A709B307F23CC9>
  %1551 = fsub <16 x double> %1549, %1550
  %extract3408.i = extractelement <16 x double> %1551, i32 0
  %extract3409.i = extractelement <16 x double> %1551, i32 1
  %extract3410.i = extractelement <16 x double> %1551, i32 2
  %extract3411.i = extractelement <16 x double> %1551, i32 3
  %extract3412.i = extractelement <16 x double> %1551, i32 4
  %extract3413.i = extractelement <16 x double> %1551, i32 5
  %extract3414.i = extractelement <16 x double> %1551, i32 6
  %extract3415.i = extractelement <16 x double> %1551, i32 7
  %extract3416.i = extractelement <16 x double> %1551, i32 8
  %extract3417.i = extractelement <16 x double> %1551, i32 9
  %extract3418.i = extractelement <16 x double> %1551, i32 10
  %extract3419.i = extractelement <16 x double> %1551, i32 11
  %extract3420.i = extractelement <16 x double> %1551, i32 12
  %extract3421.i = extractelement <16 x double> %1551, i32 13
  %extract3422.i = extractelement <16 x double> %1551, i32 14
  %extract3423.i = extractelement <16 x double> %1551, i32 15
  %1552 = call double @_Z3expd(double %extract3408.i) nounwind
  %1553 = call double @_Z3expd(double %extract3409.i) nounwind
  %1554 = call double @_Z3expd(double %extract3410.i) nounwind
  %1555 = call double @_Z3expd(double %extract3411.i) nounwind
  %1556 = call double @_Z3expd(double %extract3412.i) nounwind
  %1557 = call double @_Z3expd(double %extract3413.i) nounwind
  %1558 = call double @_Z3expd(double %extract3414.i) nounwind
  %1559 = call double @_Z3expd(double %extract3415.i) nounwind
  %1560 = call double @_Z3expd(double %extract3416.i) nounwind
  %1561 = call double @_Z3expd(double %extract3417.i) nounwind
  %1562 = call double @_Z3expd(double %extract3418.i) nounwind
  %1563 = call double @_Z3expd(double %extract3419.i) nounwind
  %1564 = call double @_Z3expd(double %extract3420.i) nounwind
  %1565 = call double @_Z3expd(double %extract3421.i) nounwind
  %1566 = call double @_Z3expd(double %extract3422.i) nounwind
  %1567 = call double @_Z3expd(double %extract3423.i) nounwind
  %temp.vect3443.i = insertelement <16 x double> undef, double %1552, i32 0
  %temp.vect3444.i = insertelement <16 x double> %temp.vect3443.i, double %1553, i32 1
  %temp.vect3445.i = insertelement <16 x double> %temp.vect3444.i, double %1554, i32 2
  %temp.vect3446.i = insertelement <16 x double> %temp.vect3445.i, double %1555, i32 3
  %temp.vect3447.i = insertelement <16 x double> %temp.vect3446.i, double %1556, i32 4
  %temp.vect3448.i = insertelement <16 x double> %temp.vect3447.i, double %1557, i32 5
  %temp.vect3449.i = insertelement <16 x double> %temp.vect3448.i, double %1558, i32 6
  %temp.vect3450.i = insertelement <16 x double> %temp.vect3449.i, double %1559, i32 7
  %temp.vect3451.i = insertelement <16 x double> %temp.vect3450.i, double %1560, i32 8
  %temp.vect3452.i = insertelement <16 x double> %temp.vect3451.i, double %1561, i32 9
  %temp.vect3453.i = insertelement <16 x double> %temp.vect3452.i, double %1562, i32 10
  %temp.vect3454.i = insertelement <16 x double> %temp.vect3453.i, double %1563, i32 11
  %temp.vect3455.i = insertelement <16 x double> %temp.vect3454.i, double %1564, i32 12
  %temp.vect3456.i = insertelement <16 x double> %temp.vect3455.i, double %1565, i32 13
  %temp.vect3457.i = insertelement <16 x double> %temp.vect3456.i, double %1566, i32 14
  %temp.vect3458.i = insertelement <16 x double> %temp.vect3457.i, double %1567, i32 15
  %1568 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1569 = load i64* %1568, align 8
  %1570 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1571 = load i64* %1570, align 8
  %1572 = add i64 %1569, %1571
  %extract3426.i = add i64 %1572, 9842688
  %1573 = getelementptr inbounds double addrspace(1)* %4, i64 %extract3426.i
  %ptrTypeCast3442.i = bitcast double addrspace(1)* %1573 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect3458.i, <16 x double> addrspace(1)* %ptrTypeCast3442.i, align 8
  %1574 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1575 = load i64* %1574, align 8
  %1576 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1577 = load i64* %1576, align 8
  %1578 = add i64 %1575, %1577
  %extract3461.i = add i64 %1578, 9953280
  %1579 = getelementptr inbounds double addrspace(1)* %4, i64 %extract3461.i
  %ptrTypeCast3477.i = bitcast double addrspace(1)* %1579 to <16 x double> addrspace(1)*
  store <16 x double> <double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13, double 4.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast3477.i, align 8
  %1580 = fmul <16 x double> %41, <double 0x4071ED56052502EF, double 0x4071ED56052502EF, double 0x4071ED56052502EF, double 0x4071ED56052502EF, double 0x4071ED56052502EF, double 0x4071ED56052502EF, double 0x4071ED56052502EF, double 0x4071ED56052502EF, double 0x4071ED56052502EF, double 0x4071ED56052502EF, double 0x4071ED56052502EF, double 0x4071ED56052502EF, double 0x4071ED56052502EF, double 0x4071ED56052502EF, double 0x4071ED56052502EF, double 0x4071ED56052502EF>
  %extract3478.i = extractelement <16 x double> %1580, i32 0
  %extract3479.i = extractelement <16 x double> %1580, i32 1
  %extract3480.i = extractelement <16 x double> %1580, i32 2
  %extract3481.i = extractelement <16 x double> %1580, i32 3
  %extract3482.i = extractelement <16 x double> %1580, i32 4
  %extract3483.i = extractelement <16 x double> %1580, i32 5
  %extract3484.i = extractelement <16 x double> %1580, i32 6
  %extract3485.i = extractelement <16 x double> %1580, i32 7
  %extract3486.i = extractelement <16 x double> %1580, i32 8
  %extract3487.i = extractelement <16 x double> %1580, i32 9
  %extract3488.i = extractelement <16 x double> %1580, i32 10
  %extract3489.i = extractelement <16 x double> %1580, i32 11
  %extract3490.i = extractelement <16 x double> %1580, i32 12
  %extract3491.i = extractelement <16 x double> %1580, i32 13
  %extract3492.i = extractelement <16 x double> %1580, i32 14
  %extract3493.i = extractelement <16 x double> %1580, i32 15
  %1581 = call double @_Z3expd(double %extract3478.i) nounwind
  %1582 = call double @_Z3expd(double %extract3479.i) nounwind
  %1583 = call double @_Z3expd(double %extract3480.i) nounwind
  %1584 = call double @_Z3expd(double %extract3481.i) nounwind
  %1585 = call double @_Z3expd(double %extract3482.i) nounwind
  %1586 = call double @_Z3expd(double %extract3483.i) nounwind
  %1587 = call double @_Z3expd(double %extract3484.i) nounwind
  %1588 = call double @_Z3expd(double %extract3485.i) nounwind
  %1589 = call double @_Z3expd(double %extract3486.i) nounwind
  %1590 = call double @_Z3expd(double %extract3487.i) nounwind
  %1591 = call double @_Z3expd(double %extract3488.i) nounwind
  %1592 = call double @_Z3expd(double %extract3489.i) nounwind
  %1593 = call double @_Z3expd(double %extract3490.i) nounwind
  %1594 = call double @_Z3expd(double %extract3491.i) nounwind
  %1595 = call double @_Z3expd(double %extract3492.i) nounwind
  %1596 = call double @_Z3expd(double %extract3493.i) nounwind
  %temp.vect3494.i = insertelement <16 x double> undef, double %1581, i32 0
  %temp.vect3495.i = insertelement <16 x double> %temp.vect3494.i, double %1582, i32 1
  %temp.vect3496.i = insertelement <16 x double> %temp.vect3495.i, double %1583, i32 2
  %temp.vect3497.i = insertelement <16 x double> %temp.vect3496.i, double %1584, i32 3
  %temp.vect3498.i = insertelement <16 x double> %temp.vect3497.i, double %1585, i32 4
  %temp.vect3499.i = insertelement <16 x double> %temp.vect3498.i, double %1586, i32 5
  %temp.vect3500.i = insertelement <16 x double> %temp.vect3499.i, double %1587, i32 6
  %temp.vect3501.i = insertelement <16 x double> %temp.vect3500.i, double %1588, i32 7
  %temp.vect3502.i = insertelement <16 x double> %temp.vect3501.i, double %1589, i32 8
  %temp.vect3503.i = insertelement <16 x double> %temp.vect3502.i, double %1590, i32 9
  %temp.vect3504.i = insertelement <16 x double> %temp.vect3503.i, double %1591, i32 10
  %temp.vect3505.i = insertelement <16 x double> %temp.vect3504.i, double %1592, i32 11
  %temp.vect3506.i = insertelement <16 x double> %temp.vect3505.i, double %1593, i32 12
  %temp.vect3507.i = insertelement <16 x double> %temp.vect3506.i, double %1594, i32 13
  %temp.vect3508.i = insertelement <16 x double> %temp.vect3507.i, double %1595, i32 14
  %temp.vect3509.i = insertelement <16 x double> %temp.vect3508.i, double %1596, i32 15
  %1597 = fmul <16 x double> %temp.vect3509.i, <double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13, double 1.200000e+13>
  %1598 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1599 = load i64* %1598, align 8
  %1600 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1601 = load i64* %1600, align 8
  %1602 = add i64 %1599, %1601
  %extract3512.i = add i64 %1602, 10063872
  %1603 = getelementptr inbounds double addrspace(1)* %4, i64 %extract3512.i
  %ptrTypeCast3528.i = bitcast double addrspace(1)* %1603 to <16 x double> addrspace(1)*
  store <16 x double> %1597, <16 x double> addrspace(1)* %ptrTypeCast3528.i, align 8
  %1604 = fmul <16 x double> %temp.vect3509.i, <double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13>
  %1605 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1606 = load i64* %1605, align 8
  %1607 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1608 = load i64* %1607, align 8
  %1609 = add i64 %1606, %1608
  %extract3531.i = add i64 %1609, 11722752
  %1610 = getelementptr inbounds double addrspace(1)* %4, i64 %extract3531.i
  %ptrTypeCast3547.i = bitcast double addrspace(1)* %1610 to <16 x double> addrspace(1)*
  store <16 x double> %1604, <16 x double> addrspace(1)* %ptrTypeCast3547.i, align 8
  %1611 = fmul <16 x double> %temp.vect97.i, <double 9.700000e-01, double 9.700000e-01, double 9.700000e-01, double 9.700000e-01, double 9.700000e-01, double 9.700000e-01, double 9.700000e-01, double 9.700000e-01, double 9.700000e-01, double 9.700000e-01, double 9.700000e-01, double 9.700000e-01, double 9.700000e-01, double 9.700000e-01, double 9.700000e-01, double 9.700000e-01>
  %1612 = fsub <16 x double> <double 0x4042CBE022EAE693, double 0x4042CBE022EAE693, double 0x4042CBE022EAE693, double 0x4042CBE022EAE693, double 0x4042CBE022EAE693, double 0x4042CBE022EAE693, double 0x4042CBE022EAE693, double 0x4042CBE022EAE693, double 0x4042CBE022EAE693, double 0x4042CBE022EAE693, double 0x4042CBE022EAE693, double 0x4042CBE022EAE693, double 0x4042CBE022EAE693, double 0x4042CBE022EAE693, double 0x4042CBE022EAE693, double 0x4042CBE022EAE693>, %1611
  %1613 = fmul <16 x double> %41, <double 0x40737FE8CAC4B4D0, double 0x40737FE8CAC4B4D0, double 0x40737FE8CAC4B4D0, double 0x40737FE8CAC4B4D0, double 0x40737FE8CAC4B4D0, double 0x40737FE8CAC4B4D0, double 0x40737FE8CAC4B4D0, double 0x40737FE8CAC4B4D0, double 0x40737FE8CAC4B4D0, double 0x40737FE8CAC4B4D0, double 0x40737FE8CAC4B4D0, double 0x40737FE8CAC4B4D0, double 0x40737FE8CAC4B4D0, double 0x40737FE8CAC4B4D0, double 0x40737FE8CAC4B4D0, double 0x40737FE8CAC4B4D0>
  %1614 = fsub <16 x double> %1612, %1613
  %extract3548.i = extractelement <16 x double> %1614, i32 0
  %extract3549.i = extractelement <16 x double> %1614, i32 1
  %extract3550.i = extractelement <16 x double> %1614, i32 2
  %extract3551.i = extractelement <16 x double> %1614, i32 3
  %extract3552.i = extractelement <16 x double> %1614, i32 4
  %extract3553.i = extractelement <16 x double> %1614, i32 5
  %extract3554.i = extractelement <16 x double> %1614, i32 6
  %extract3555.i = extractelement <16 x double> %1614, i32 7
  %extract3556.i = extractelement <16 x double> %1614, i32 8
  %extract3557.i = extractelement <16 x double> %1614, i32 9
  %extract3558.i = extractelement <16 x double> %1614, i32 10
  %extract3559.i = extractelement <16 x double> %1614, i32 11
  %extract3560.i = extractelement <16 x double> %1614, i32 12
  %extract3561.i = extractelement <16 x double> %1614, i32 13
  %extract3562.i = extractelement <16 x double> %1614, i32 14
  %extract3563.i = extractelement <16 x double> %1614, i32 15
  %1615 = call double @_Z3expd(double %extract3548.i) nounwind
  %1616 = call double @_Z3expd(double %extract3549.i) nounwind
  %1617 = call double @_Z3expd(double %extract3550.i) nounwind
  %1618 = call double @_Z3expd(double %extract3551.i) nounwind
  %1619 = call double @_Z3expd(double %extract3552.i) nounwind
  %1620 = call double @_Z3expd(double %extract3553.i) nounwind
  %1621 = call double @_Z3expd(double %extract3554.i) nounwind
  %1622 = call double @_Z3expd(double %extract3555.i) nounwind
  %1623 = call double @_Z3expd(double %extract3556.i) nounwind
  %1624 = call double @_Z3expd(double %extract3557.i) nounwind
  %1625 = call double @_Z3expd(double %extract3558.i) nounwind
  %1626 = call double @_Z3expd(double %extract3559.i) nounwind
  %1627 = call double @_Z3expd(double %extract3560.i) nounwind
  %1628 = call double @_Z3expd(double %extract3561.i) nounwind
  %1629 = call double @_Z3expd(double %extract3562.i) nounwind
  %1630 = call double @_Z3expd(double %extract3563.i) nounwind
  %temp.vect3583.i = insertelement <16 x double> undef, double %1615, i32 0
  %temp.vect3584.i = insertelement <16 x double> %temp.vect3583.i, double %1616, i32 1
  %temp.vect3585.i = insertelement <16 x double> %temp.vect3584.i, double %1617, i32 2
  %temp.vect3586.i = insertelement <16 x double> %temp.vect3585.i, double %1618, i32 3
  %temp.vect3587.i = insertelement <16 x double> %temp.vect3586.i, double %1619, i32 4
  %temp.vect3588.i = insertelement <16 x double> %temp.vect3587.i, double %1620, i32 5
  %temp.vect3589.i = insertelement <16 x double> %temp.vect3588.i, double %1621, i32 6
  %temp.vect3590.i = insertelement <16 x double> %temp.vect3589.i, double %1622, i32 7
  %temp.vect3591.i = insertelement <16 x double> %temp.vect3590.i, double %1623, i32 8
  %temp.vect3592.i = insertelement <16 x double> %temp.vect3591.i, double %1624, i32 9
  %temp.vect3593.i = insertelement <16 x double> %temp.vect3592.i, double %1625, i32 10
  %temp.vect3594.i = insertelement <16 x double> %temp.vect3593.i, double %1626, i32 11
  %temp.vect3595.i = insertelement <16 x double> %temp.vect3594.i, double %1627, i32 12
  %temp.vect3596.i = insertelement <16 x double> %temp.vect3595.i, double %1628, i32 13
  %temp.vect3597.i = insertelement <16 x double> %temp.vect3596.i, double %1629, i32 14
  %temp.vect3598.i = insertelement <16 x double> %temp.vect3597.i, double %1630, i32 15
  %1631 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1632 = load i64* %1631, align 8
  %1633 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1634 = load i64* %1633, align 8
  %1635 = add i64 %1632, %1634
  %extract3566.i = add i64 %1635, 10174464
  %1636 = getelementptr inbounds double addrspace(1)* %4, i64 %extract3566.i
  %ptrTypeCast3582.i = bitcast double addrspace(1)* %1636 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect3598.i, <16 x double> addrspace(1)* %ptrTypeCast3582.i, align 8
  %1637 = fmul <16 x double> %temp.vect97.i, <double 1.000000e-01, double 1.000000e-01, double 1.000000e-01, double 1.000000e-01, double 1.000000e-01, double 1.000000e-01, double 1.000000e-01, double 1.000000e-01, double 1.000000e-01, double 1.000000e-01, double 1.000000e-01, double 1.000000e-01, double 1.000000e-01, double 1.000000e-01, double 1.000000e-01, double 1.000000e-01>
  %1638 = fadd <16 x double> %1637, <double 0x403D3D0B84988095, double 0x403D3D0B84988095, double 0x403D3D0B84988095, double 0x403D3D0B84988095, double 0x403D3D0B84988095, double 0x403D3D0B84988095, double 0x403D3D0B84988095, double 0x403D3D0B84988095, double 0x403D3D0B84988095, double 0x403D3D0B84988095, double 0x403D3D0B84988095, double 0x403D3D0B84988095, double 0x403D3D0B84988095, double 0x403D3D0B84988095, double 0x403D3D0B84988095, double 0x403D3D0B84988095>
  %1639 = fmul <16 x double> %41, <double 0x40B4D618C0053E2D, double 0x40B4D618C0053E2D, double 0x40B4D618C0053E2D, double 0x40B4D618C0053E2D, double 0x40B4D618C0053E2D, double 0x40B4D618C0053E2D, double 0x40B4D618C0053E2D, double 0x40B4D618C0053E2D, double 0x40B4D618C0053E2D, double 0x40B4D618C0053E2D, double 0x40B4D618C0053E2D, double 0x40B4D618C0053E2D, double 0x40B4D618C0053E2D, double 0x40B4D618C0053E2D, double 0x40B4D618C0053E2D, double 0x40B4D618C0053E2D>
  %1640 = fsub <16 x double> %1638, %1639
  %extract3599.i = extractelement <16 x double> %1640, i32 0
  %extract3600.i = extractelement <16 x double> %1640, i32 1
  %extract3601.i = extractelement <16 x double> %1640, i32 2
  %extract3602.i = extractelement <16 x double> %1640, i32 3
  %extract3603.i = extractelement <16 x double> %1640, i32 4
  %extract3604.i = extractelement <16 x double> %1640, i32 5
  %extract3605.i = extractelement <16 x double> %1640, i32 6
  %extract3606.i = extractelement <16 x double> %1640, i32 7
  %extract3607.i = extractelement <16 x double> %1640, i32 8
  %extract3608.i = extractelement <16 x double> %1640, i32 9
  %extract3609.i = extractelement <16 x double> %1640, i32 10
  %extract3610.i = extractelement <16 x double> %1640, i32 11
  %extract3611.i = extractelement <16 x double> %1640, i32 12
  %extract3612.i = extractelement <16 x double> %1640, i32 13
  %extract3613.i = extractelement <16 x double> %1640, i32 14
  %extract3614.i = extractelement <16 x double> %1640, i32 15
  %1641 = call double @_Z3expd(double %extract3599.i) nounwind
  %1642 = call double @_Z3expd(double %extract3600.i) nounwind
  %1643 = call double @_Z3expd(double %extract3601.i) nounwind
  %1644 = call double @_Z3expd(double %extract3602.i) nounwind
  %1645 = call double @_Z3expd(double %extract3603.i) nounwind
  %1646 = call double @_Z3expd(double %extract3604.i) nounwind
  %1647 = call double @_Z3expd(double %extract3605.i) nounwind
  %1648 = call double @_Z3expd(double %extract3606.i) nounwind
  %1649 = call double @_Z3expd(double %extract3607.i) nounwind
  %1650 = call double @_Z3expd(double %extract3608.i) nounwind
  %1651 = call double @_Z3expd(double %extract3609.i) nounwind
  %1652 = call double @_Z3expd(double %extract3610.i) nounwind
  %1653 = call double @_Z3expd(double %extract3611.i) nounwind
  %1654 = call double @_Z3expd(double %extract3612.i) nounwind
  %1655 = call double @_Z3expd(double %extract3613.i) nounwind
  %1656 = call double @_Z3expd(double %extract3614.i) nounwind
  %temp.vect3634.i = insertelement <16 x double> undef, double %1641, i32 0
  %temp.vect3635.i = insertelement <16 x double> %temp.vect3634.i, double %1642, i32 1
  %temp.vect3636.i = insertelement <16 x double> %temp.vect3635.i, double %1643, i32 2
  %temp.vect3637.i = insertelement <16 x double> %temp.vect3636.i, double %1644, i32 3
  %temp.vect3638.i = insertelement <16 x double> %temp.vect3637.i, double %1645, i32 4
  %temp.vect3639.i = insertelement <16 x double> %temp.vect3638.i, double %1646, i32 5
  %temp.vect3640.i = insertelement <16 x double> %temp.vect3639.i, double %1647, i32 6
  %temp.vect3641.i = insertelement <16 x double> %temp.vect3640.i, double %1648, i32 7
  %temp.vect3642.i = insertelement <16 x double> %temp.vect3641.i, double %1649, i32 8
  %temp.vect3643.i = insertelement <16 x double> %temp.vect3642.i, double %1650, i32 9
  %temp.vect3644.i = insertelement <16 x double> %temp.vect3643.i, double %1651, i32 10
  %temp.vect3645.i = insertelement <16 x double> %temp.vect3644.i, double %1652, i32 11
  %temp.vect3646.i = insertelement <16 x double> %temp.vect3645.i, double %1653, i32 12
  %temp.vect3647.i = insertelement <16 x double> %temp.vect3646.i, double %1654, i32 13
  %temp.vect3648.i = insertelement <16 x double> %temp.vect3647.i, double %1655, i32 14
  %temp.vect3649.i = insertelement <16 x double> %temp.vect3648.i, double %1656, i32 15
  %1657 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1658 = load i64* %1657, align 8
  %1659 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1660 = load i64* %1659, align 8
  %1661 = add i64 %1658, %1660
  %extract3617.i = add i64 %1661, 10285056
  %1662 = getelementptr inbounds double addrspace(1)* %4, i64 %extract3617.i
  %ptrTypeCast3633.i = bitcast double addrspace(1)* %1662 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect3649.i, <16 x double> addrspace(1)* %ptrTypeCast3633.i, align 8
  %1663 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1664 = load i64* %1663, align 8
  %1665 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1666 = load i64* %1665, align 8
  %1667 = add i64 %1664, %1666
  %extract3652.i = add i64 %1667, 10395648
  %1668 = getelementptr inbounds double addrspace(1)* %4, i64 %extract3652.i
  %ptrTypeCast3668.i = bitcast double addrspace(1)* %1668 to <16 x double> addrspace(1)*
  store <16 x double> <double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast3668.i, align 8
  %1669 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1670 = load i64* %1669, align 8
  %1671 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1672 = load i64* %1671, align 8
  %1673 = add i64 %1670, %1672
  %extract3671.i = add i64 %1673, 10506240
  %1674 = getelementptr inbounds double addrspace(1)* %4, i64 %extract3671.i
  %ptrTypeCast3687.i = bitcast double addrspace(1)* %1674 to <16 x double> addrspace(1)*
  store <16 x double> <double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast3687.i, align 8
  %1675 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1676 = load i64* %1675, align 8
  %1677 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1678 = load i64* %1677, align 8
  %1679 = add i64 %1676, %1678
  %extract3690.i = add i64 %1679, 10616832
  %1680 = getelementptr inbounds double addrspace(1)* %4, i64 %extract3690.i
  %ptrTypeCast3706.i = bitcast double addrspace(1)* %1680 to <16 x double> addrspace(1)*
  store <16 x double> <double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13, double 3.200000e+13>, <16 x double> addrspace(1)* %ptrTypeCast3706.i, align 8
  %1681 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1682 = load i64* %1681, align 8
  %1683 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1684 = load i64* %1683, align 8
  %1685 = add i64 %1682, %1684
  %extract3709.i = add i64 %1685, 10727424
  %1686 = getelementptr inbounds double addrspace(1)* %4, i64 %extract3709.i
  %ptrTypeCast3725.i = bitcast double addrspace(1)* %1686 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13, double 1.600000e+13>, <16 x double> addrspace(1)* %ptrTypeCast3725.i, align 8
  %1687 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1688 = load i64* %1687, align 8
  %1689 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1690 = load i64* %1689, align 8
  %1691 = add i64 %1688, %1690
  %extract3728.i = add i64 %1691, 10838016
  %1692 = getelementptr inbounds double addrspace(1)* %4, i64 %extract3728.i
  %ptrTypeCast3744.i = bitcast double addrspace(1)* %1692 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast3744.i, align 8
  %1693 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1694 = load i64* %1693, align 8
  %1695 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1696 = load i64* %1695, align 8
  %1697 = add i64 %1694, %1696
  %extract3747.i = add i64 %1697, 10948608
  %1698 = getelementptr inbounds double addrspace(1)* %4, i64 %extract3747.i
  %ptrTypeCast3763.i = bitcast double addrspace(1)* %1698 to <16 x double> addrspace(1)*
  store <16 x double> <double 5.000000e+12, double 5.000000e+12, double 5.000000e+12, double 5.000000e+12, double 5.000000e+12, double 5.000000e+12, double 5.000000e+12, double 5.000000e+12, double 5.000000e+12, double 5.000000e+12, double 5.000000e+12, double 5.000000e+12, double 5.000000e+12, double 5.000000e+12, double 5.000000e+12, double 5.000000e+12>, <16 x double> addrspace(1)* %ptrTypeCast3763.i, align 8
  %1699 = fmul <16 x double> %temp.vect97.i, <double 7.600000e+00, double 7.600000e+00, double 7.600000e+00, double 7.600000e+00, double 7.600000e+00, double 7.600000e+00, double 7.600000e+00, double 7.600000e+00, double 7.600000e+00, double 7.600000e+00, double 7.600000e+00, double 7.600000e+00, double 7.600000e+00, double 7.600000e+00, double 7.600000e+00, double 7.600000e+00>
  %1700 = fadd <16 x double> %1699, <double 0xC03C7ACA8D576BF8, double 0xC03C7ACA8D576BF8, double 0xC03C7ACA8D576BF8, double 0xC03C7ACA8D576BF8, double 0xC03C7ACA8D576BF8, double 0xC03C7ACA8D576BF8, double 0xC03C7ACA8D576BF8, double 0xC03C7ACA8D576BF8, double 0xC03C7ACA8D576BF8, double 0xC03C7ACA8D576BF8, double 0xC03C7ACA8D576BF8, double 0xC03C7ACA8D576BF8, double 0xC03C7ACA8D576BF8, double 0xC03C7ACA8D576BF8, double 0xC03C7ACA8D576BF8, double 0xC03C7ACA8D576BF8>
  %1701 = fmul <16 x double> %41, <double 0x409BC16B5B2D4D40, double 0x409BC16B5B2D4D40, double 0x409BC16B5B2D4D40, double 0x409BC16B5B2D4D40, double 0x409BC16B5B2D4D40, double 0x409BC16B5B2D4D40, double 0x409BC16B5B2D4D40, double 0x409BC16B5B2D4D40, double 0x409BC16B5B2D4D40, double 0x409BC16B5B2D4D40, double 0x409BC16B5B2D4D40, double 0x409BC16B5B2D4D40, double 0x409BC16B5B2D4D40, double 0x409BC16B5B2D4D40, double 0x409BC16B5B2D4D40, double 0x409BC16B5B2D4D40>
  %1702 = fadd <16 x double> %1700, %1701
  %extract3764.i = extractelement <16 x double> %1702, i32 0
  %extract3765.i = extractelement <16 x double> %1702, i32 1
  %extract3766.i = extractelement <16 x double> %1702, i32 2
  %extract3767.i = extractelement <16 x double> %1702, i32 3
  %extract3768.i = extractelement <16 x double> %1702, i32 4
  %extract3769.i = extractelement <16 x double> %1702, i32 5
  %extract3770.i = extractelement <16 x double> %1702, i32 6
  %extract3771.i = extractelement <16 x double> %1702, i32 7
  %extract3772.i = extractelement <16 x double> %1702, i32 8
  %extract3773.i = extractelement <16 x double> %1702, i32 9
  %extract3774.i = extractelement <16 x double> %1702, i32 10
  %extract3775.i = extractelement <16 x double> %1702, i32 11
  %extract3776.i = extractelement <16 x double> %1702, i32 12
  %extract3777.i = extractelement <16 x double> %1702, i32 13
  %extract3778.i = extractelement <16 x double> %1702, i32 14
  %extract3779.i = extractelement <16 x double> %1702, i32 15
  %1703 = call double @_Z3expd(double %extract3764.i) nounwind
  %1704 = call double @_Z3expd(double %extract3765.i) nounwind
  %1705 = call double @_Z3expd(double %extract3766.i) nounwind
  %1706 = call double @_Z3expd(double %extract3767.i) nounwind
  %1707 = call double @_Z3expd(double %extract3768.i) nounwind
  %1708 = call double @_Z3expd(double %extract3769.i) nounwind
  %1709 = call double @_Z3expd(double %extract3770.i) nounwind
  %1710 = call double @_Z3expd(double %extract3771.i) nounwind
  %1711 = call double @_Z3expd(double %extract3772.i) nounwind
  %1712 = call double @_Z3expd(double %extract3773.i) nounwind
  %1713 = call double @_Z3expd(double %extract3774.i) nounwind
  %1714 = call double @_Z3expd(double %extract3775.i) nounwind
  %1715 = call double @_Z3expd(double %extract3776.i) nounwind
  %1716 = call double @_Z3expd(double %extract3777.i) nounwind
  %1717 = call double @_Z3expd(double %extract3778.i) nounwind
  %1718 = call double @_Z3expd(double %extract3779.i) nounwind
  %temp.vect3799.i = insertelement <16 x double> undef, double %1703, i32 0
  %temp.vect3800.i = insertelement <16 x double> %temp.vect3799.i, double %1704, i32 1
  %temp.vect3801.i = insertelement <16 x double> %temp.vect3800.i, double %1705, i32 2
  %temp.vect3802.i = insertelement <16 x double> %temp.vect3801.i, double %1706, i32 3
  %temp.vect3803.i = insertelement <16 x double> %temp.vect3802.i, double %1707, i32 4
  %temp.vect3804.i = insertelement <16 x double> %temp.vect3803.i, double %1708, i32 5
  %temp.vect3805.i = insertelement <16 x double> %temp.vect3804.i, double %1709, i32 6
  %temp.vect3806.i = insertelement <16 x double> %temp.vect3805.i, double %1710, i32 7
  %temp.vect3807.i = insertelement <16 x double> %temp.vect3806.i, double %1711, i32 8
  %temp.vect3808.i = insertelement <16 x double> %temp.vect3807.i, double %1712, i32 9
  %temp.vect3809.i = insertelement <16 x double> %temp.vect3808.i, double %1713, i32 10
  %temp.vect3810.i = insertelement <16 x double> %temp.vect3809.i, double %1714, i32 11
  %temp.vect3811.i = insertelement <16 x double> %temp.vect3810.i, double %1715, i32 12
  %temp.vect3812.i = insertelement <16 x double> %temp.vect3811.i, double %1716, i32 13
  %temp.vect3813.i = insertelement <16 x double> %temp.vect3812.i, double %1717, i32 14
  %temp.vect3814.i = insertelement <16 x double> %temp.vect3813.i, double %1718, i32 15
  %1719 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1720 = load i64* %1719, align 8
  %1721 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1722 = load i64* %1721, align 8
  %1723 = add i64 %1720, %1722
  %extract3782.i = add i64 %1723, 11059200
  %1724 = getelementptr inbounds double addrspace(1)* %4, i64 %extract3782.i
  %ptrTypeCast3798.i = bitcast double addrspace(1)* %1724 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect3814.i, <16 x double> addrspace(1)* %ptrTypeCast3798.i, align 8
  %1725 = fmul <16 x double> %temp.vect97.i, <double 1.620000e+00, double 1.620000e+00, double 1.620000e+00, double 1.620000e+00, double 1.620000e+00, double 1.620000e+00, double 1.620000e+00, double 1.620000e+00, double 1.620000e+00, double 1.620000e+00, double 1.620000e+00, double 1.620000e+00, double 1.620000e+00, double 1.620000e+00, double 1.620000e+00, double 1.620000e+00>
  %1726 = fadd <16 x double> %1725, <double 0x40344EC8BAEF54B7, double 0x40344EC8BAEF54B7, double 0x40344EC8BAEF54B7, double 0x40344EC8BAEF54B7, double 0x40344EC8BAEF54B7, double 0x40344EC8BAEF54B7, double 0x40344EC8BAEF54B7, double 0x40344EC8BAEF54B7, double 0x40344EC8BAEF54B7, double 0x40344EC8BAEF54B7, double 0x40344EC8BAEF54B7, double 0x40344EC8BAEF54B7, double 0x40344EC8BAEF54B7, double 0x40344EC8BAEF54B7, double 0x40344EC8BAEF54B7, double 0x40344EC8BAEF54B7>
  %1727 = fmul <16 x double> %41, <double 0x40B54EDE61CFFEB0, double 0x40B54EDE61CFFEB0, double 0x40B54EDE61CFFEB0, double 0x40B54EDE61CFFEB0, double 0x40B54EDE61CFFEB0, double 0x40B54EDE61CFFEB0, double 0x40B54EDE61CFFEB0, double 0x40B54EDE61CFFEB0, double 0x40B54EDE61CFFEB0, double 0x40B54EDE61CFFEB0, double 0x40B54EDE61CFFEB0, double 0x40B54EDE61CFFEB0, double 0x40B54EDE61CFFEB0, double 0x40B54EDE61CFFEB0, double 0x40B54EDE61CFFEB0, double 0x40B54EDE61CFFEB0>
  %1728 = fsub <16 x double> %1726, %1727
  %extract3815.i = extractelement <16 x double> %1728, i32 0
  %extract3816.i = extractelement <16 x double> %1728, i32 1
  %extract3817.i = extractelement <16 x double> %1728, i32 2
  %extract3818.i = extractelement <16 x double> %1728, i32 3
  %extract3819.i = extractelement <16 x double> %1728, i32 4
  %extract3820.i = extractelement <16 x double> %1728, i32 5
  %extract3821.i = extractelement <16 x double> %1728, i32 6
  %extract3822.i = extractelement <16 x double> %1728, i32 7
  %extract3823.i = extractelement <16 x double> %1728, i32 8
  %extract3824.i = extractelement <16 x double> %1728, i32 9
  %extract3825.i = extractelement <16 x double> %1728, i32 10
  %extract3826.i = extractelement <16 x double> %1728, i32 11
  %extract3827.i = extractelement <16 x double> %1728, i32 12
  %extract3828.i = extractelement <16 x double> %1728, i32 13
  %extract3829.i = extractelement <16 x double> %1728, i32 14
  %extract3830.i = extractelement <16 x double> %1728, i32 15
  %1729 = call double @_Z3expd(double %extract3815.i) nounwind
  %1730 = call double @_Z3expd(double %extract3816.i) nounwind
  %1731 = call double @_Z3expd(double %extract3817.i) nounwind
  %1732 = call double @_Z3expd(double %extract3818.i) nounwind
  %1733 = call double @_Z3expd(double %extract3819.i) nounwind
  %1734 = call double @_Z3expd(double %extract3820.i) nounwind
  %1735 = call double @_Z3expd(double %extract3821.i) nounwind
  %1736 = call double @_Z3expd(double %extract3822.i) nounwind
  %1737 = call double @_Z3expd(double %extract3823.i) nounwind
  %1738 = call double @_Z3expd(double %extract3824.i) nounwind
  %1739 = call double @_Z3expd(double %extract3825.i) nounwind
  %1740 = call double @_Z3expd(double %extract3826.i) nounwind
  %1741 = call double @_Z3expd(double %extract3827.i) nounwind
  %1742 = call double @_Z3expd(double %extract3828.i) nounwind
  %1743 = call double @_Z3expd(double %extract3829.i) nounwind
  %1744 = call double @_Z3expd(double %extract3830.i) nounwind
  %temp.vect3850.i = insertelement <16 x double> undef, double %1729, i32 0
  %temp.vect3851.i = insertelement <16 x double> %temp.vect3850.i, double %1730, i32 1
  %temp.vect3852.i = insertelement <16 x double> %temp.vect3851.i, double %1731, i32 2
  %temp.vect3853.i = insertelement <16 x double> %temp.vect3852.i, double %1732, i32 3
  %temp.vect3854.i = insertelement <16 x double> %temp.vect3853.i, double %1733, i32 4
  %temp.vect3855.i = insertelement <16 x double> %temp.vect3854.i, double %1734, i32 5
  %temp.vect3856.i = insertelement <16 x double> %temp.vect3855.i, double %1735, i32 6
  %temp.vect3857.i = insertelement <16 x double> %temp.vect3856.i, double %1736, i32 7
  %temp.vect3858.i = insertelement <16 x double> %temp.vect3857.i, double %1737, i32 8
  %temp.vect3859.i = insertelement <16 x double> %temp.vect3858.i, double %1738, i32 9
  %temp.vect3860.i = insertelement <16 x double> %temp.vect3859.i, double %1739, i32 10
  %temp.vect3861.i = insertelement <16 x double> %temp.vect3860.i, double %1740, i32 11
  %temp.vect3862.i = insertelement <16 x double> %temp.vect3861.i, double %1741, i32 12
  %temp.vect3863.i = insertelement <16 x double> %temp.vect3862.i, double %1742, i32 13
  %temp.vect3864.i = insertelement <16 x double> %temp.vect3863.i, double %1743, i32 14
  %temp.vect3865.i = insertelement <16 x double> %temp.vect3864.i, double %1744, i32 15
  %1745 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1746 = load i64* %1745, align 8
  %1747 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1748 = load i64* %1747, align 8
  %1749 = add i64 %1746, %1748
  %extract3833.i = add i64 %1749, 11169792
  %1750 = getelementptr inbounds double addrspace(1)* %4, i64 %extract3833.i
  %ptrTypeCast3849.i = bitcast double addrspace(1)* %1750 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect3865.i, <16 x double> addrspace(1)* %ptrTypeCast3849.i, align 8
  %1751 = fadd <16 x double> %671, <double 0x4034BE39BCBA3012, double 0x4034BE39BCBA3012, double 0x4034BE39BCBA3012, double 0x4034BE39BCBA3012, double 0x4034BE39BCBA3012, double 0x4034BE39BCBA3012, double 0x4034BE39BCBA3012, double 0x4034BE39BCBA3012, double 0x4034BE39BCBA3012, double 0x4034BE39BCBA3012, double 0x4034BE39BCBA3012, double 0x4034BE39BCBA3012, double 0x4034BE39BCBA3012, double 0x4034BE39BCBA3012, double 0x4034BE39BCBA3012, double 0x4034BE39BCBA3012>
  %1752 = fmul <16 x double> %41, <double 0x40B0E7A9D0A67621, double 0x40B0E7A9D0A67621, double 0x40B0E7A9D0A67621, double 0x40B0E7A9D0A67621, double 0x40B0E7A9D0A67621, double 0x40B0E7A9D0A67621, double 0x40B0E7A9D0A67621, double 0x40B0E7A9D0A67621, double 0x40B0E7A9D0A67621, double 0x40B0E7A9D0A67621, double 0x40B0E7A9D0A67621, double 0x40B0E7A9D0A67621, double 0x40B0E7A9D0A67621, double 0x40B0E7A9D0A67621, double 0x40B0E7A9D0A67621, double 0x40B0E7A9D0A67621>
  %1753 = fsub <16 x double> %1751, %1752
  %extract3866.i = extractelement <16 x double> %1753, i32 0
  %extract3867.i = extractelement <16 x double> %1753, i32 1
  %extract3868.i = extractelement <16 x double> %1753, i32 2
  %extract3869.i = extractelement <16 x double> %1753, i32 3
  %extract3870.i = extractelement <16 x double> %1753, i32 4
  %extract3871.i = extractelement <16 x double> %1753, i32 5
  %extract3872.i = extractelement <16 x double> %1753, i32 6
  %extract3873.i = extractelement <16 x double> %1753, i32 7
  %extract3874.i = extractelement <16 x double> %1753, i32 8
  %extract3875.i = extractelement <16 x double> %1753, i32 9
  %extract3876.i = extractelement <16 x double> %1753, i32 10
  %extract3877.i = extractelement <16 x double> %1753, i32 11
  %extract3878.i = extractelement <16 x double> %1753, i32 12
  %extract3879.i = extractelement <16 x double> %1753, i32 13
  %extract3880.i = extractelement <16 x double> %1753, i32 14
  %extract3881.i = extractelement <16 x double> %1753, i32 15
  %1754 = call double @_Z3expd(double %extract3866.i) nounwind
  %1755 = call double @_Z3expd(double %extract3867.i) nounwind
  %1756 = call double @_Z3expd(double %extract3868.i) nounwind
  %1757 = call double @_Z3expd(double %extract3869.i) nounwind
  %1758 = call double @_Z3expd(double %extract3870.i) nounwind
  %1759 = call double @_Z3expd(double %extract3871.i) nounwind
  %1760 = call double @_Z3expd(double %extract3872.i) nounwind
  %1761 = call double @_Z3expd(double %extract3873.i) nounwind
  %1762 = call double @_Z3expd(double %extract3874.i) nounwind
  %1763 = call double @_Z3expd(double %extract3875.i) nounwind
  %1764 = call double @_Z3expd(double %extract3876.i) nounwind
  %1765 = call double @_Z3expd(double %extract3877.i) nounwind
  %1766 = call double @_Z3expd(double %extract3878.i) nounwind
  %1767 = call double @_Z3expd(double %extract3879.i) nounwind
  %1768 = call double @_Z3expd(double %extract3880.i) nounwind
  %1769 = call double @_Z3expd(double %extract3881.i) nounwind
  %temp.vect3901.i = insertelement <16 x double> undef, double %1754, i32 0
  %temp.vect3902.i = insertelement <16 x double> %temp.vect3901.i, double %1755, i32 1
  %temp.vect3903.i = insertelement <16 x double> %temp.vect3902.i, double %1756, i32 2
  %temp.vect3904.i = insertelement <16 x double> %temp.vect3903.i, double %1757, i32 3
  %temp.vect3905.i = insertelement <16 x double> %temp.vect3904.i, double %1758, i32 4
  %temp.vect3906.i = insertelement <16 x double> %temp.vect3905.i, double %1759, i32 5
  %temp.vect3907.i = insertelement <16 x double> %temp.vect3906.i, double %1760, i32 6
  %temp.vect3908.i = insertelement <16 x double> %temp.vect3907.i, double %1761, i32 7
  %temp.vect3909.i = insertelement <16 x double> %temp.vect3908.i, double %1762, i32 8
  %temp.vect3910.i = insertelement <16 x double> %temp.vect3909.i, double %1763, i32 9
  %temp.vect3911.i = insertelement <16 x double> %temp.vect3910.i, double %1764, i32 10
  %temp.vect3912.i = insertelement <16 x double> %temp.vect3911.i, double %1765, i32 11
  %temp.vect3913.i = insertelement <16 x double> %temp.vect3912.i, double %1766, i32 12
  %temp.vect3914.i = insertelement <16 x double> %temp.vect3913.i, double %1767, i32 13
  %temp.vect3915.i = insertelement <16 x double> %temp.vect3914.i, double %1768, i32 14
  %temp.vect3916.i = insertelement <16 x double> %temp.vect3915.i, double %1769, i32 15
  %1770 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1771 = load i64* %1770, align 8
  %1772 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1773 = load i64* %1772, align 8
  %1774 = add i64 %1771, %1773
  %extract3884.i = add i64 %1774, 11280384
  %1775 = getelementptr inbounds double addrspace(1)* %4, i64 %extract3884.i
  %ptrTypeCast3900.i = bitcast double addrspace(1)* %1775 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect3916.i, <16 x double> addrspace(1)* %ptrTypeCast3900.i, align 8
  %1776 = fadd <16 x double> %1412, <double 0x40326BB1BAF88EF2, double 0x40326BB1BAF88EF2, double 0x40326BB1BAF88EF2, double 0x40326BB1BAF88EF2, double 0x40326BB1BAF88EF2, double 0x40326BB1BAF88EF2, double 0x40326BB1BAF88EF2, double 0x40326BB1BAF88EF2, double 0x40326BB1BAF88EF2, double 0x40326BB1BAF88EF2, double 0x40326BB1BAF88EF2, double 0x40326BB1BAF88EF2, double 0x40326BB1BAF88EF2, double 0x40326BB1BAF88EF2, double 0x40326BB1BAF88EF2, double 0x40326BB1BAF88EF2>
  %1777 = fmul <16 x double> %41, <double 1.570036e+03, double 1.570036e+03, double 1.570036e+03, double 1.570036e+03, double 1.570036e+03, double 1.570036e+03, double 1.570036e+03, double 1.570036e+03, double 1.570036e+03, double 1.570036e+03, double 1.570036e+03, double 1.570036e+03, double 1.570036e+03, double 1.570036e+03, double 1.570036e+03, double 1.570036e+03>
  %1778 = fsub <16 x double> %1776, %1777
  %extract3917.i = extractelement <16 x double> %1778, i32 0
  %extract3918.i = extractelement <16 x double> %1778, i32 1
  %extract3919.i = extractelement <16 x double> %1778, i32 2
  %extract3920.i = extractelement <16 x double> %1778, i32 3
  %extract3921.i = extractelement <16 x double> %1778, i32 4
  %extract3922.i = extractelement <16 x double> %1778, i32 5
  %extract3923.i = extractelement <16 x double> %1778, i32 6
  %extract3924.i = extractelement <16 x double> %1778, i32 7
  %extract3925.i = extractelement <16 x double> %1778, i32 8
  %extract3926.i = extractelement <16 x double> %1778, i32 9
  %extract3927.i = extractelement <16 x double> %1778, i32 10
  %extract3928.i = extractelement <16 x double> %1778, i32 11
  %extract3929.i = extractelement <16 x double> %1778, i32 12
  %extract3930.i = extractelement <16 x double> %1778, i32 13
  %extract3931.i = extractelement <16 x double> %1778, i32 14
  %extract3932.i = extractelement <16 x double> %1778, i32 15
  %1779 = call double @_Z3expd(double %extract3917.i) nounwind
  %1780 = call double @_Z3expd(double %extract3918.i) nounwind
  %1781 = call double @_Z3expd(double %extract3919.i) nounwind
  %1782 = call double @_Z3expd(double %extract3920.i) nounwind
  %1783 = call double @_Z3expd(double %extract3921.i) nounwind
  %1784 = call double @_Z3expd(double %extract3922.i) nounwind
  %1785 = call double @_Z3expd(double %extract3923.i) nounwind
  %1786 = call double @_Z3expd(double %extract3924.i) nounwind
  %1787 = call double @_Z3expd(double %extract3925.i) nounwind
  %1788 = call double @_Z3expd(double %extract3926.i) nounwind
  %1789 = call double @_Z3expd(double %extract3927.i) nounwind
  %1790 = call double @_Z3expd(double %extract3928.i) nounwind
  %1791 = call double @_Z3expd(double %extract3929.i) nounwind
  %1792 = call double @_Z3expd(double %extract3930.i) nounwind
  %1793 = call double @_Z3expd(double %extract3931.i) nounwind
  %1794 = call double @_Z3expd(double %extract3932.i) nounwind
  %temp.vect3952.i = insertelement <16 x double> undef, double %1779, i32 0
  %temp.vect3953.i = insertelement <16 x double> %temp.vect3952.i, double %1780, i32 1
  %temp.vect3954.i = insertelement <16 x double> %temp.vect3953.i, double %1781, i32 2
  %temp.vect3955.i = insertelement <16 x double> %temp.vect3954.i, double %1782, i32 3
  %temp.vect3956.i = insertelement <16 x double> %temp.vect3955.i, double %1783, i32 4
  %temp.vect3957.i = insertelement <16 x double> %temp.vect3956.i, double %1784, i32 5
  %temp.vect3958.i = insertelement <16 x double> %temp.vect3957.i, double %1785, i32 6
  %temp.vect3959.i = insertelement <16 x double> %temp.vect3958.i, double %1786, i32 7
  %temp.vect3960.i = insertelement <16 x double> %temp.vect3959.i, double %1787, i32 8
  %temp.vect3961.i = insertelement <16 x double> %temp.vect3960.i, double %1788, i32 9
  %temp.vect3962.i = insertelement <16 x double> %temp.vect3961.i, double %1789, i32 10
  %temp.vect3963.i = insertelement <16 x double> %temp.vect3962.i, double %1790, i32 11
  %temp.vect3964.i = insertelement <16 x double> %temp.vect3963.i, double %1791, i32 12
  %temp.vect3965.i = insertelement <16 x double> %temp.vect3964.i, double %1792, i32 13
  %temp.vect3966.i = insertelement <16 x double> %temp.vect3965.i, double %1793, i32 14
  %temp.vect3967.i = insertelement <16 x double> %temp.vect3966.i, double %1794, i32 15
  %1795 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1796 = load i64* %1795, align 8
  %1797 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1798 = load i64* %1797, align 8
  %1799 = add i64 %1796, %1798
  %extract3935.i = add i64 %1799, 11390976
  %1800 = getelementptr inbounds double addrspace(1)* %4, i64 %extract3935.i
  %ptrTypeCast3951.i = bitcast double addrspace(1)* %1800 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect3967.i, <16 x double> addrspace(1)* %ptrTypeCast3951.i, align 8
  %1801 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1802 = load i64* %1801, align 8
  %1803 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1804 = load i64* %1803, align 8
  %1805 = add i64 %1802, %1804
  %extract3970.i = add i64 %1805, 11501568
  %1806 = getelementptr inbounds double addrspace(1)* %4, i64 %extract3970.i
  %ptrTypeCast3986.i = bitcast double addrspace(1)* %1806 to <16 x double> addrspace(1)*
  store <16 x double> <double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast3986.i, align 8
  %1807 = fadd <16 x double> %498, <double 0x402D6E6C8C1A5516, double 0x402D6E6C8C1A5516, double 0x402D6E6C8C1A5516, double 0x402D6E6C8C1A5516, double 0x402D6E6C8C1A5516, double 0x402D6E6C8C1A5516, double 0x402D6E6C8C1A5516, double 0x402D6E6C8C1A5516, double 0x402D6E6C8C1A5516, double 0x402D6E6C8C1A5516, double 0x402D6E6C8C1A5516, double 0x402D6E6C8C1A5516, double 0x402D6E6C8C1A5516, double 0x402D6E6C8C1A5516, double 0x402D6E6C8C1A5516, double 0x402D6E6C8C1A5516>
  %1808 = fmul <16 x double> %41, <double 0x40B0419A122FAD6D, double 0x40B0419A122FAD6D, double 0x40B0419A122FAD6D, double 0x40B0419A122FAD6D, double 0x40B0419A122FAD6D, double 0x40B0419A122FAD6D, double 0x40B0419A122FAD6D, double 0x40B0419A122FAD6D, double 0x40B0419A122FAD6D, double 0x40B0419A122FAD6D, double 0x40B0419A122FAD6D, double 0x40B0419A122FAD6D, double 0x40B0419A122FAD6D, double 0x40B0419A122FAD6D, double 0x40B0419A122FAD6D, double 0x40B0419A122FAD6D>
  %1809 = fsub <16 x double> %1807, %1808
  %extract3987.i = extractelement <16 x double> %1809, i32 0
  %extract3988.i = extractelement <16 x double> %1809, i32 1
  %extract3989.i = extractelement <16 x double> %1809, i32 2
  %extract3990.i = extractelement <16 x double> %1809, i32 3
  %extract3991.i = extractelement <16 x double> %1809, i32 4
  %extract3992.i = extractelement <16 x double> %1809, i32 5
  %extract3993.i = extractelement <16 x double> %1809, i32 6
  %extract3994.i = extractelement <16 x double> %1809, i32 7
  %extract3995.i = extractelement <16 x double> %1809, i32 8
  %extract3996.i = extractelement <16 x double> %1809, i32 9
  %extract3997.i = extractelement <16 x double> %1809, i32 10
  %extract3998.i = extractelement <16 x double> %1809, i32 11
  %extract3999.i = extractelement <16 x double> %1809, i32 12
  %extract4000.i = extractelement <16 x double> %1809, i32 13
  %extract4001.i = extractelement <16 x double> %1809, i32 14
  %extract4002.i = extractelement <16 x double> %1809, i32 15
  %1810 = call double @_Z3expd(double %extract3987.i) nounwind
  %1811 = call double @_Z3expd(double %extract3988.i) nounwind
  %1812 = call double @_Z3expd(double %extract3989.i) nounwind
  %1813 = call double @_Z3expd(double %extract3990.i) nounwind
  %1814 = call double @_Z3expd(double %extract3991.i) nounwind
  %1815 = call double @_Z3expd(double %extract3992.i) nounwind
  %1816 = call double @_Z3expd(double %extract3993.i) nounwind
  %1817 = call double @_Z3expd(double %extract3994.i) nounwind
  %1818 = call double @_Z3expd(double %extract3995.i) nounwind
  %1819 = call double @_Z3expd(double %extract3996.i) nounwind
  %1820 = call double @_Z3expd(double %extract3997.i) nounwind
  %1821 = call double @_Z3expd(double %extract3998.i) nounwind
  %1822 = call double @_Z3expd(double %extract3999.i) nounwind
  %1823 = call double @_Z3expd(double %extract4000.i) nounwind
  %1824 = call double @_Z3expd(double %extract4001.i) nounwind
  %1825 = call double @_Z3expd(double %extract4002.i) nounwind
  %temp.vect4022.i = insertelement <16 x double> undef, double %1810, i32 0
  %temp.vect4023.i = insertelement <16 x double> %temp.vect4022.i, double %1811, i32 1
  %temp.vect4024.i = insertelement <16 x double> %temp.vect4023.i, double %1812, i32 2
  %temp.vect4025.i = insertelement <16 x double> %temp.vect4024.i, double %1813, i32 3
  %temp.vect4026.i = insertelement <16 x double> %temp.vect4025.i, double %1814, i32 4
  %temp.vect4027.i = insertelement <16 x double> %temp.vect4026.i, double %1815, i32 5
  %temp.vect4028.i = insertelement <16 x double> %temp.vect4027.i, double %1816, i32 6
  %temp.vect4029.i = insertelement <16 x double> %temp.vect4028.i, double %1817, i32 7
  %temp.vect4030.i = insertelement <16 x double> %temp.vect4029.i, double %1818, i32 8
  %temp.vect4031.i = insertelement <16 x double> %temp.vect4030.i, double %1819, i32 9
  %temp.vect4032.i = insertelement <16 x double> %temp.vect4031.i, double %1820, i32 10
  %temp.vect4033.i = insertelement <16 x double> %temp.vect4032.i, double %1821, i32 11
  %temp.vect4034.i = insertelement <16 x double> %temp.vect4033.i, double %1822, i32 12
  %temp.vect4035.i = insertelement <16 x double> %temp.vect4034.i, double %1823, i32 13
  %temp.vect4036.i = insertelement <16 x double> %temp.vect4035.i, double %1824, i32 14
  %temp.vect4037.i = insertelement <16 x double> %temp.vect4036.i, double %1825, i32 15
  %1826 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1827 = load i64* %1826, align 8
  %1828 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1829 = load i64* %1828, align 8
  %1830 = add i64 %1827, %1829
  %extract4005.i = add i64 %1830, 11612160
  %1831 = getelementptr inbounds double addrspace(1)* %4, i64 %extract4005.i
  %ptrTypeCast4021.i = bitcast double addrspace(1)* %1831 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect4037.i, <16 x double> addrspace(1)* %ptrTypeCast4021.i, align 8
  %1832 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1833 = load i64* %1832, align 8
  %1834 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1835 = load i64* %1834, align 8
  %1836 = add i64 %1833, %1835
  %extract4040.i = add i64 %1836, 11833344
  %1837 = getelementptr inbounds double addrspace(1)* %4, i64 %extract4040.i
  %ptrTypeCast4056.i = bitcast double addrspace(1)* %1837 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14>, <16 x double> addrspace(1)* %ptrTypeCast4056.i, align 8
  %1838 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1839 = load i64* %1838, align 8
  %1840 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1841 = load i64* %1840, align 8
  %1842 = add i64 %1839, %1841
  %extract4059.i = add i64 %1842, 11943936
  %1843 = getelementptr inbounds double addrspace(1)* %4, i64 %extract4059.i
  %ptrTypeCast4075.i = bitcast double addrspace(1)* %1843 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14>, <16 x double> addrspace(1)* %ptrTypeCast4075.i, align 8
  %1844 = fmul <16 x double> %41, <double 0x407ADBF3D9EC7000, double 0x407ADBF3D9EC7000, double 0x407ADBF3D9EC7000, double 0x407ADBF3D9EC7000, double 0x407ADBF3D9EC7000, double 0x407ADBF3D9EC7000, double 0x407ADBF3D9EC7000, double 0x407ADBF3D9EC7000, double 0x407ADBF3D9EC7000, double 0x407ADBF3D9EC7000, double 0x407ADBF3D9EC7000, double 0x407ADBF3D9EC7000, double 0x407ADBF3D9EC7000, double 0x407ADBF3D9EC7000, double 0x407ADBF3D9EC7000, double 0x407ADBF3D9EC7000>
  %1845 = fsub <16 x double> <double 0x403C19DCC1369695, double 0x403C19DCC1369695, double 0x403C19DCC1369695, double 0x403C19DCC1369695, double 0x403C19DCC1369695, double 0x403C19DCC1369695, double 0x403C19DCC1369695, double 0x403C19DCC1369695, double 0x403C19DCC1369695, double 0x403C19DCC1369695, double 0x403C19DCC1369695, double 0x403C19DCC1369695, double 0x403C19DCC1369695, double 0x403C19DCC1369695, double 0x403C19DCC1369695, double 0x403C19DCC1369695>, %1844
  %extract4076.i = extractelement <16 x double> %1845, i32 0
  %extract4077.i = extractelement <16 x double> %1845, i32 1
  %extract4078.i = extractelement <16 x double> %1845, i32 2
  %extract4079.i = extractelement <16 x double> %1845, i32 3
  %extract4080.i = extractelement <16 x double> %1845, i32 4
  %extract4081.i = extractelement <16 x double> %1845, i32 5
  %extract4082.i = extractelement <16 x double> %1845, i32 6
  %extract4083.i = extractelement <16 x double> %1845, i32 7
  %extract4084.i = extractelement <16 x double> %1845, i32 8
  %extract4085.i = extractelement <16 x double> %1845, i32 9
  %extract4086.i = extractelement <16 x double> %1845, i32 10
  %extract4087.i = extractelement <16 x double> %1845, i32 11
  %extract4088.i = extractelement <16 x double> %1845, i32 12
  %extract4089.i = extractelement <16 x double> %1845, i32 13
  %extract4090.i = extractelement <16 x double> %1845, i32 14
  %extract4091.i = extractelement <16 x double> %1845, i32 15
  %1846 = call double @_Z3expd(double %extract4076.i) nounwind
  %1847 = call double @_Z3expd(double %extract4077.i) nounwind
  %1848 = call double @_Z3expd(double %extract4078.i) nounwind
  %1849 = call double @_Z3expd(double %extract4079.i) nounwind
  %1850 = call double @_Z3expd(double %extract4080.i) nounwind
  %1851 = call double @_Z3expd(double %extract4081.i) nounwind
  %1852 = call double @_Z3expd(double %extract4082.i) nounwind
  %1853 = call double @_Z3expd(double %extract4083.i) nounwind
  %1854 = call double @_Z3expd(double %extract4084.i) nounwind
  %1855 = call double @_Z3expd(double %extract4085.i) nounwind
  %1856 = call double @_Z3expd(double %extract4086.i) nounwind
  %1857 = call double @_Z3expd(double %extract4087.i) nounwind
  %1858 = call double @_Z3expd(double %extract4088.i) nounwind
  %1859 = call double @_Z3expd(double %extract4089.i) nounwind
  %1860 = call double @_Z3expd(double %extract4090.i) nounwind
  %1861 = call double @_Z3expd(double %extract4091.i) nounwind
  %temp.vect4111.i = insertelement <16 x double> undef, double %1846, i32 0
  %temp.vect4112.i = insertelement <16 x double> %temp.vect4111.i, double %1847, i32 1
  %temp.vect4113.i = insertelement <16 x double> %temp.vect4112.i, double %1848, i32 2
  %temp.vect4114.i = insertelement <16 x double> %temp.vect4113.i, double %1849, i32 3
  %temp.vect4115.i = insertelement <16 x double> %temp.vect4114.i, double %1850, i32 4
  %temp.vect4116.i = insertelement <16 x double> %temp.vect4115.i, double %1851, i32 5
  %temp.vect4117.i = insertelement <16 x double> %temp.vect4116.i, double %1852, i32 6
  %temp.vect4118.i = insertelement <16 x double> %temp.vect4117.i, double %1853, i32 7
  %temp.vect4119.i = insertelement <16 x double> %temp.vect4118.i, double %1854, i32 8
  %temp.vect4120.i = insertelement <16 x double> %temp.vect4119.i, double %1855, i32 9
  %temp.vect4121.i = insertelement <16 x double> %temp.vect4120.i, double %1856, i32 10
  %temp.vect4122.i = insertelement <16 x double> %temp.vect4121.i, double %1857, i32 11
  %temp.vect4123.i = insertelement <16 x double> %temp.vect4122.i, double %1858, i32 12
  %temp.vect4124.i = insertelement <16 x double> %temp.vect4123.i, double %1859, i32 13
  %temp.vect4125.i = insertelement <16 x double> %temp.vect4124.i, double %1860, i32 14
  %temp.vect4126.i = insertelement <16 x double> %temp.vect4125.i, double %1861, i32 15
  %1862 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1863 = load i64* %1862, align 8
  %1864 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1865 = load i64* %1864, align 8
  %1866 = add i64 %1863, %1865
  %extract4094.i = add i64 %1866, 12054528
  %1867 = getelementptr inbounds double addrspace(1)* %4, i64 %extract4094.i
  %ptrTypeCast4110.i = bitcast double addrspace(1)* %1867 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect4126.i, <16 x double> addrspace(1)* %ptrTypeCast4110.i, align 8
  %1868 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1869 = load i64* %1868, align 8
  %1870 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1871 = load i64* %1870, align 8
  %1872 = add i64 %1869, %1871
  %extract4129.i = add i64 %1872, 12165120
  %1873 = getelementptr inbounds double addrspace(1)* %4, i64 %extract4129.i
  %ptrTypeCast4145.i = bitcast double addrspace(1)* %1873 to <16 x double> addrspace(1)*
  store <16 x double> <double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast4145.i, align 8
  %1874 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1875 = load i64* %1874, align 8
  %1876 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1877 = load i64* %1876, align 8
  %1878 = add i64 %1875, %1877
  %extract4148.i = add i64 %1878, 12275712
  %1879 = getelementptr inbounds double addrspace(1)* %4, i64 %extract4148.i
  %ptrTypeCast4164.i = bitcast double addrspace(1)* %1879 to <16 x double> addrspace(1)*
  store <16 x double> <double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast4164.i, align 8
  %1880 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1881 = load i64* %1880, align 8
  %1882 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1883 = load i64* %1882, align 8
  %1884 = add i64 %1881, %1883
  %extract4167.i = add i64 %1884, 12386304
  %1885 = getelementptr inbounds double addrspace(1)* %4, i64 %extract4167.i
  %ptrTypeCast4183.i = bitcast double addrspace(1)* %1885 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast4183.i, align 8
  %1886 = fmul <16 x double> %temp.vect97.i, <double 5.200000e-01, double 5.200000e-01, double 5.200000e-01, double 5.200000e-01, double 5.200000e-01, double 5.200000e-01, double 5.200000e-01, double 5.200000e-01, double 5.200000e-01, double 5.200000e-01, double 5.200000e-01, double 5.200000e-01, double 5.200000e-01, double 5.200000e-01, double 5.200000e-01, double 5.200000e-01>
  %1887 = fsub <16 x double> <double 0x40412866A7D4C5C0, double 0x40412866A7D4C5C0, double 0x40412866A7D4C5C0, double 0x40412866A7D4C5C0, double 0x40412866A7D4C5C0, double 0x40412866A7D4C5C0, double 0x40412866A7D4C5C0, double 0x40412866A7D4C5C0, double 0x40412866A7D4C5C0, double 0x40412866A7D4C5C0, double 0x40412866A7D4C5C0, double 0x40412866A7D4C5C0, double 0x40412866A7D4C5C0, double 0x40412866A7D4C5C0, double 0x40412866A7D4C5C0, double 0x40412866A7D4C5C0>, %1886
  %1888 = fmul <16 x double> %41, <double 0x40D8F08FBCD35A86, double 0x40D8F08FBCD35A86, double 0x40D8F08FBCD35A86, double 0x40D8F08FBCD35A86, double 0x40D8F08FBCD35A86, double 0x40D8F08FBCD35A86, double 0x40D8F08FBCD35A86, double 0x40D8F08FBCD35A86, double 0x40D8F08FBCD35A86, double 0x40D8F08FBCD35A86, double 0x40D8F08FBCD35A86, double 0x40D8F08FBCD35A86, double 0x40D8F08FBCD35A86, double 0x40D8F08FBCD35A86, double 0x40D8F08FBCD35A86, double 0x40D8F08FBCD35A86>
  %1889 = fsub <16 x double> %1887, %1888
  %extract4184.i = extractelement <16 x double> %1889, i32 0
  %extract4185.i = extractelement <16 x double> %1889, i32 1
  %extract4186.i = extractelement <16 x double> %1889, i32 2
  %extract4187.i = extractelement <16 x double> %1889, i32 3
  %extract4188.i = extractelement <16 x double> %1889, i32 4
  %extract4189.i = extractelement <16 x double> %1889, i32 5
  %extract4190.i = extractelement <16 x double> %1889, i32 6
  %extract4191.i = extractelement <16 x double> %1889, i32 7
  %extract4192.i = extractelement <16 x double> %1889, i32 8
  %extract4193.i = extractelement <16 x double> %1889, i32 9
  %extract4194.i = extractelement <16 x double> %1889, i32 10
  %extract4195.i = extractelement <16 x double> %1889, i32 11
  %extract4196.i = extractelement <16 x double> %1889, i32 12
  %extract4197.i = extractelement <16 x double> %1889, i32 13
  %extract4198.i = extractelement <16 x double> %1889, i32 14
  %extract4199.i = extractelement <16 x double> %1889, i32 15
  %1890 = call double @_Z3expd(double %extract4184.i) nounwind
  %1891 = call double @_Z3expd(double %extract4185.i) nounwind
  %1892 = call double @_Z3expd(double %extract4186.i) nounwind
  %1893 = call double @_Z3expd(double %extract4187.i) nounwind
  %1894 = call double @_Z3expd(double %extract4188.i) nounwind
  %1895 = call double @_Z3expd(double %extract4189.i) nounwind
  %1896 = call double @_Z3expd(double %extract4190.i) nounwind
  %1897 = call double @_Z3expd(double %extract4191.i) nounwind
  %1898 = call double @_Z3expd(double %extract4192.i) nounwind
  %1899 = call double @_Z3expd(double %extract4193.i) nounwind
  %1900 = call double @_Z3expd(double %extract4194.i) nounwind
  %1901 = call double @_Z3expd(double %extract4195.i) nounwind
  %1902 = call double @_Z3expd(double %extract4196.i) nounwind
  %1903 = call double @_Z3expd(double %extract4197.i) nounwind
  %1904 = call double @_Z3expd(double %extract4198.i) nounwind
  %1905 = call double @_Z3expd(double %extract4199.i) nounwind
  %temp.vect4219.i = insertelement <16 x double> undef, double %1890, i32 0
  %temp.vect4220.i = insertelement <16 x double> %temp.vect4219.i, double %1891, i32 1
  %temp.vect4221.i = insertelement <16 x double> %temp.vect4220.i, double %1892, i32 2
  %temp.vect4222.i = insertelement <16 x double> %temp.vect4221.i, double %1893, i32 3
  %temp.vect4223.i = insertelement <16 x double> %temp.vect4222.i, double %1894, i32 4
  %temp.vect4224.i = insertelement <16 x double> %temp.vect4223.i, double %1895, i32 5
  %temp.vect4225.i = insertelement <16 x double> %temp.vect4224.i, double %1896, i32 6
  %temp.vect4226.i = insertelement <16 x double> %temp.vect4225.i, double %1897, i32 7
  %temp.vect4227.i = insertelement <16 x double> %temp.vect4226.i, double %1898, i32 8
  %temp.vect4228.i = insertelement <16 x double> %temp.vect4227.i, double %1899, i32 9
  %temp.vect4229.i = insertelement <16 x double> %temp.vect4228.i, double %1900, i32 10
  %temp.vect4230.i = insertelement <16 x double> %temp.vect4229.i, double %1901, i32 11
  %temp.vect4231.i = insertelement <16 x double> %temp.vect4230.i, double %1902, i32 12
  %temp.vect4232.i = insertelement <16 x double> %temp.vect4231.i, double %1903, i32 13
  %temp.vect4233.i = insertelement <16 x double> %temp.vect4232.i, double %1904, i32 14
  %temp.vect4234.i = insertelement <16 x double> %temp.vect4233.i, double %1905, i32 15
  %1906 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1907 = load i64* %1906, align 8
  %1908 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1909 = load i64* %1908, align 8
  %1910 = add i64 %1907, %1909
  %extract4202.i = add i64 %1910, 12496896
  %1911 = getelementptr inbounds double addrspace(1)* %4, i64 %extract4202.i
  %ptrTypeCast4218.i = bitcast double addrspace(1)* %1911 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect4234.i, <16 x double> addrspace(1)* %ptrTypeCast4218.i, align 8
  %1912 = fadd <16 x double> %1725, <double 0x4033C5770E545699, double 0x4033C5770E545699, double 0x4033C5770E545699, double 0x4033C5770E545699, double 0x4033C5770E545699, double 0x4033C5770E545699, double 0x4033C5770E545699, double 0x4033C5770E545699, double 0x4033C5770E545699, double 0x4033C5770E545699, double 0x4033C5770E545699, double 0x4033C5770E545699, double 0x4033C5770E545699, double 0x4033C5770E545699, double 0x4033C5770E545699, double 0x4033C5770E545699>
  %1913 = fmul <16 x double> %41, <double 0x40D234D20902DE01, double 0x40D234D20902DE01, double 0x40D234D20902DE01, double 0x40D234D20902DE01, double 0x40D234D20902DE01, double 0x40D234D20902DE01, double 0x40D234D20902DE01, double 0x40D234D20902DE01, double 0x40D234D20902DE01, double 0x40D234D20902DE01, double 0x40D234D20902DE01, double 0x40D234D20902DE01, double 0x40D234D20902DE01, double 0x40D234D20902DE01, double 0x40D234D20902DE01, double 0x40D234D20902DE01>
  %1914 = fsub <16 x double> %1912, %1913
  %extract4235.i = extractelement <16 x double> %1914, i32 0
  %extract4236.i = extractelement <16 x double> %1914, i32 1
  %extract4237.i = extractelement <16 x double> %1914, i32 2
  %extract4238.i = extractelement <16 x double> %1914, i32 3
  %extract4239.i = extractelement <16 x double> %1914, i32 4
  %extract4240.i = extractelement <16 x double> %1914, i32 5
  %extract4241.i = extractelement <16 x double> %1914, i32 6
  %extract4242.i = extractelement <16 x double> %1914, i32 7
  %extract4243.i = extractelement <16 x double> %1914, i32 8
  %extract4244.i = extractelement <16 x double> %1914, i32 9
  %extract4245.i = extractelement <16 x double> %1914, i32 10
  %extract4246.i = extractelement <16 x double> %1914, i32 11
  %extract4247.i = extractelement <16 x double> %1914, i32 12
  %extract4248.i = extractelement <16 x double> %1914, i32 13
  %extract4249.i = extractelement <16 x double> %1914, i32 14
  %extract4250.i = extractelement <16 x double> %1914, i32 15
  %1915 = call double @_Z3expd(double %extract4235.i) nounwind
  %1916 = call double @_Z3expd(double %extract4236.i) nounwind
  %1917 = call double @_Z3expd(double %extract4237.i) nounwind
  %1918 = call double @_Z3expd(double %extract4238.i) nounwind
  %1919 = call double @_Z3expd(double %extract4239.i) nounwind
  %1920 = call double @_Z3expd(double %extract4240.i) nounwind
  %1921 = call double @_Z3expd(double %extract4241.i) nounwind
  %1922 = call double @_Z3expd(double %extract4242.i) nounwind
  %1923 = call double @_Z3expd(double %extract4243.i) nounwind
  %1924 = call double @_Z3expd(double %extract4244.i) nounwind
  %1925 = call double @_Z3expd(double %extract4245.i) nounwind
  %1926 = call double @_Z3expd(double %extract4246.i) nounwind
  %1927 = call double @_Z3expd(double %extract4247.i) nounwind
  %1928 = call double @_Z3expd(double %extract4248.i) nounwind
  %1929 = call double @_Z3expd(double %extract4249.i) nounwind
  %1930 = call double @_Z3expd(double %extract4250.i) nounwind
  %temp.vect4270.i = insertelement <16 x double> undef, double %1915, i32 0
  %temp.vect4271.i = insertelement <16 x double> %temp.vect4270.i, double %1916, i32 1
  %temp.vect4272.i = insertelement <16 x double> %temp.vect4271.i, double %1917, i32 2
  %temp.vect4273.i = insertelement <16 x double> %temp.vect4272.i, double %1918, i32 3
  %temp.vect4274.i = insertelement <16 x double> %temp.vect4273.i, double %1919, i32 4
  %temp.vect4275.i = insertelement <16 x double> %temp.vect4274.i, double %1920, i32 5
  %temp.vect4276.i = insertelement <16 x double> %temp.vect4275.i, double %1921, i32 6
  %temp.vect4277.i = insertelement <16 x double> %temp.vect4276.i, double %1922, i32 7
  %temp.vect4278.i = insertelement <16 x double> %temp.vect4277.i, double %1923, i32 8
  %temp.vect4279.i = insertelement <16 x double> %temp.vect4278.i, double %1924, i32 9
  %temp.vect4280.i = insertelement <16 x double> %temp.vect4279.i, double %1925, i32 10
  %temp.vect4281.i = insertelement <16 x double> %temp.vect4280.i, double %1926, i32 11
  %temp.vect4282.i = insertelement <16 x double> %temp.vect4281.i, double %1927, i32 12
  %temp.vect4283.i = insertelement <16 x double> %temp.vect4282.i, double %1928, i32 13
  %temp.vect4284.i = insertelement <16 x double> %temp.vect4283.i, double %1929, i32 14
  %temp.vect4285.i = insertelement <16 x double> %temp.vect4284.i, double %1930, i32 15
  %1931 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1932 = load i64* %1931, align 8
  %1933 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1934 = load i64* %1933, align 8
  %1935 = add i64 %1932, %1934
  %extract4253.i = add i64 %1935, 12607488
  %1936 = getelementptr inbounds double addrspace(1)* %4, i64 %extract4253.i
  %ptrTypeCast4269.i = bitcast double addrspace(1)* %1936 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect4285.i, <16 x double> addrspace(1)* %ptrTypeCast4269.i, align 8
  %1937 = fmul <16 x double> %41, <double 0x408DE0E4B2B777D1, double 0x408DE0E4B2B777D1, double 0x408DE0E4B2B777D1, double 0x408DE0E4B2B777D1, double 0x408DE0E4B2B777D1, double 0x408DE0E4B2B777D1, double 0x408DE0E4B2B777D1, double 0x408DE0E4B2B777D1, double 0x408DE0E4B2B777D1, double 0x408DE0E4B2B777D1, double 0x408DE0E4B2B777D1, double 0x408DE0E4B2B777D1, double 0x408DE0E4B2B777D1, double 0x408DE0E4B2B777D1, double 0x408DE0E4B2B777D1, double 0x408DE0E4B2B777D1>
  %1938 = fsub <16 x double> %498, %1937
  %extract4286.i = extractelement <16 x double> %1938, i32 0
  %extract4287.i = extractelement <16 x double> %1938, i32 1
  %extract4288.i = extractelement <16 x double> %1938, i32 2
  %extract4289.i = extractelement <16 x double> %1938, i32 3
  %extract4290.i = extractelement <16 x double> %1938, i32 4
  %extract4291.i = extractelement <16 x double> %1938, i32 5
  %extract4292.i = extractelement <16 x double> %1938, i32 6
  %extract4293.i = extractelement <16 x double> %1938, i32 7
  %extract4294.i = extractelement <16 x double> %1938, i32 8
  %extract4295.i = extractelement <16 x double> %1938, i32 9
  %extract4296.i = extractelement <16 x double> %1938, i32 10
  %extract4297.i = extractelement <16 x double> %1938, i32 11
  %extract4298.i = extractelement <16 x double> %1938, i32 12
  %extract4299.i = extractelement <16 x double> %1938, i32 13
  %extract4300.i = extractelement <16 x double> %1938, i32 14
  %extract4301.i = extractelement <16 x double> %1938, i32 15
  %1939 = call double @_Z3expd(double %extract4286.i) nounwind
  %1940 = call double @_Z3expd(double %extract4287.i) nounwind
  %1941 = call double @_Z3expd(double %extract4288.i) nounwind
  %1942 = call double @_Z3expd(double %extract4289.i) nounwind
  %1943 = call double @_Z3expd(double %extract4290.i) nounwind
  %1944 = call double @_Z3expd(double %extract4291.i) nounwind
  %1945 = call double @_Z3expd(double %extract4292.i) nounwind
  %1946 = call double @_Z3expd(double %extract4293.i) nounwind
  %1947 = call double @_Z3expd(double %extract4294.i) nounwind
  %1948 = call double @_Z3expd(double %extract4295.i) nounwind
  %1949 = call double @_Z3expd(double %extract4296.i) nounwind
  %1950 = call double @_Z3expd(double %extract4297.i) nounwind
  %1951 = call double @_Z3expd(double %extract4298.i) nounwind
  %1952 = call double @_Z3expd(double %extract4299.i) nounwind
  %1953 = call double @_Z3expd(double %extract4300.i) nounwind
  %1954 = call double @_Z3expd(double %extract4301.i) nounwind
  %temp.vect4302.i = insertelement <16 x double> undef, double %1939, i32 0
  %temp.vect4303.i = insertelement <16 x double> %temp.vect4302.i, double %1940, i32 1
  %temp.vect4304.i = insertelement <16 x double> %temp.vect4303.i, double %1941, i32 2
  %temp.vect4305.i = insertelement <16 x double> %temp.vect4304.i, double %1942, i32 3
  %temp.vect4306.i = insertelement <16 x double> %temp.vect4305.i, double %1943, i32 4
  %temp.vect4307.i = insertelement <16 x double> %temp.vect4306.i, double %1944, i32 5
  %temp.vect4308.i = insertelement <16 x double> %temp.vect4307.i, double %1945, i32 6
  %temp.vect4309.i = insertelement <16 x double> %temp.vect4308.i, double %1946, i32 7
  %temp.vect4310.i = insertelement <16 x double> %temp.vect4309.i, double %1947, i32 8
  %temp.vect4311.i = insertelement <16 x double> %temp.vect4310.i, double %1948, i32 9
  %temp.vect4312.i = insertelement <16 x double> %temp.vect4311.i, double %1949, i32 10
  %temp.vect4313.i = insertelement <16 x double> %temp.vect4312.i, double %1950, i32 11
  %temp.vect4314.i = insertelement <16 x double> %temp.vect4313.i, double %1951, i32 12
  %temp.vect4315.i = insertelement <16 x double> %temp.vect4314.i, double %1952, i32 13
  %temp.vect4316.i = insertelement <16 x double> %temp.vect4315.i, double %1953, i32 14
  %temp.vect4317.i = insertelement <16 x double> %temp.vect4316.i, double %1954, i32 15
  %1955 = fmul <16 x double> %temp.vect4317.i, <double 1.632000e+07, double 1.632000e+07, double 1.632000e+07, double 1.632000e+07, double 1.632000e+07, double 1.632000e+07, double 1.632000e+07, double 1.632000e+07, double 1.632000e+07, double 1.632000e+07, double 1.632000e+07, double 1.632000e+07, double 1.632000e+07, double 1.632000e+07, double 1.632000e+07, double 1.632000e+07>
  %1956 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1957 = load i64* %1956, align 8
  %1958 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1959 = load i64* %1958, align 8
  %1960 = add i64 %1957, %1959
  %extract4320.i = add i64 %1960, 12718080
  %1961 = getelementptr inbounds double addrspace(1)* %4, i64 %extract4320.i
  %ptrTypeCast4336.i = bitcast double addrspace(1)* %1961 to <16 x double> addrspace(1)*
  store <16 x double> %1955, <16 x double> addrspace(1)* %ptrTypeCast4336.i, align 8
  %1962 = fmul <16 x double> %temp.vect4317.i, <double 4.080000e+06, double 4.080000e+06, double 4.080000e+06, double 4.080000e+06, double 4.080000e+06, double 4.080000e+06, double 4.080000e+06, double 4.080000e+06, double 4.080000e+06, double 4.080000e+06, double 4.080000e+06, double 4.080000e+06, double 4.080000e+06, double 4.080000e+06, double 4.080000e+06, double 4.080000e+06>
  %1963 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1964 = load i64* %1963, align 8
  %1965 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1966 = load i64* %1965, align 8
  %1967 = add i64 %1964, %1966
  %extract4339.i = add i64 %1967, 12828672
  %1968 = getelementptr inbounds double addrspace(1)* %4, i64 %extract4339.i
  %ptrTypeCast4355.i = bitcast double addrspace(1)* %1968 to <16 x double> addrspace(1)*
  store <16 x double> %1962, <16 x double> addrspace(1)* %ptrTypeCast4355.i, align 8
  %1969 = fmul <16 x double> %temp.vect97.i, <double 4.500000e+00, double 4.500000e+00, double 4.500000e+00, double 4.500000e+00, double 4.500000e+00, double 4.500000e+00, double 4.500000e+00, double 4.500000e+00, double 4.500000e+00, double 4.500000e+00, double 4.500000e+00, double 4.500000e+00, double 4.500000e+00, double 4.500000e+00, double 4.500000e+00, double 4.500000e+00>
  %1970 = fadd <16 x double> %1969, <double 0xC020DCAE10492360, double 0xC020DCAE10492360, double 0xC020DCAE10492360, double 0xC020DCAE10492360, double 0xC020DCAE10492360, double 0xC020DCAE10492360, double 0xC020DCAE10492360, double 0xC020DCAE10492360, double 0xC020DCAE10492360, double 0xC020DCAE10492360, double 0xC020DCAE10492360, double 0xC020DCAE10492360, double 0xC020DCAE10492360, double 0xC020DCAE10492360, double 0xC020DCAE10492360, double 0xC020DCAE10492360>
  %1971 = fmul <16 x double> %41, <double 0x407F737778DD6170, double 0x407F737778DD6170, double 0x407F737778DD6170, double 0x407F737778DD6170, double 0x407F737778DD6170, double 0x407F737778DD6170, double 0x407F737778DD6170, double 0x407F737778DD6170, double 0x407F737778DD6170, double 0x407F737778DD6170, double 0x407F737778DD6170, double 0x407F737778DD6170, double 0x407F737778DD6170, double 0x407F737778DD6170, double 0x407F737778DD6170, double 0x407F737778DD6170>
  %1972 = fadd <16 x double> %1970, %1971
  %extract4356.i = extractelement <16 x double> %1972, i32 0
  %extract4357.i = extractelement <16 x double> %1972, i32 1
  %extract4358.i = extractelement <16 x double> %1972, i32 2
  %extract4359.i = extractelement <16 x double> %1972, i32 3
  %extract4360.i = extractelement <16 x double> %1972, i32 4
  %extract4361.i = extractelement <16 x double> %1972, i32 5
  %extract4362.i = extractelement <16 x double> %1972, i32 6
  %extract4363.i = extractelement <16 x double> %1972, i32 7
  %extract4364.i = extractelement <16 x double> %1972, i32 8
  %extract4365.i = extractelement <16 x double> %1972, i32 9
  %extract4366.i = extractelement <16 x double> %1972, i32 10
  %extract4367.i = extractelement <16 x double> %1972, i32 11
  %extract4368.i = extractelement <16 x double> %1972, i32 12
  %extract4369.i = extractelement <16 x double> %1972, i32 13
  %extract4370.i = extractelement <16 x double> %1972, i32 14
  %extract4371.i = extractelement <16 x double> %1972, i32 15
  %1973 = call double @_Z3expd(double %extract4356.i) nounwind
  %1974 = call double @_Z3expd(double %extract4357.i) nounwind
  %1975 = call double @_Z3expd(double %extract4358.i) nounwind
  %1976 = call double @_Z3expd(double %extract4359.i) nounwind
  %1977 = call double @_Z3expd(double %extract4360.i) nounwind
  %1978 = call double @_Z3expd(double %extract4361.i) nounwind
  %1979 = call double @_Z3expd(double %extract4362.i) nounwind
  %1980 = call double @_Z3expd(double %extract4363.i) nounwind
  %1981 = call double @_Z3expd(double %extract4364.i) nounwind
  %1982 = call double @_Z3expd(double %extract4365.i) nounwind
  %1983 = call double @_Z3expd(double %extract4366.i) nounwind
  %1984 = call double @_Z3expd(double %extract4367.i) nounwind
  %1985 = call double @_Z3expd(double %extract4368.i) nounwind
  %1986 = call double @_Z3expd(double %extract4369.i) nounwind
  %1987 = call double @_Z3expd(double %extract4370.i) nounwind
  %1988 = call double @_Z3expd(double %extract4371.i) nounwind
  %temp.vect4391.i = insertelement <16 x double> undef, double %1973, i32 0
  %temp.vect4392.i = insertelement <16 x double> %temp.vect4391.i, double %1974, i32 1
  %temp.vect4393.i = insertelement <16 x double> %temp.vect4392.i, double %1975, i32 2
  %temp.vect4394.i = insertelement <16 x double> %temp.vect4393.i, double %1976, i32 3
  %temp.vect4395.i = insertelement <16 x double> %temp.vect4394.i, double %1977, i32 4
  %temp.vect4396.i = insertelement <16 x double> %temp.vect4395.i, double %1978, i32 5
  %temp.vect4397.i = insertelement <16 x double> %temp.vect4396.i, double %1979, i32 6
  %temp.vect4398.i = insertelement <16 x double> %temp.vect4397.i, double %1980, i32 7
  %temp.vect4399.i = insertelement <16 x double> %temp.vect4398.i, double %1981, i32 8
  %temp.vect4400.i = insertelement <16 x double> %temp.vect4399.i, double %1982, i32 9
  %temp.vect4401.i = insertelement <16 x double> %temp.vect4400.i, double %1983, i32 10
  %temp.vect4402.i = insertelement <16 x double> %temp.vect4401.i, double %1984, i32 11
  %temp.vect4403.i = insertelement <16 x double> %temp.vect4402.i, double %1985, i32 12
  %temp.vect4404.i = insertelement <16 x double> %temp.vect4403.i, double %1986, i32 13
  %temp.vect4405.i = insertelement <16 x double> %temp.vect4404.i, double %1987, i32 14
  %temp.vect4406.i = insertelement <16 x double> %temp.vect4405.i, double %1988, i32 15
  %1989 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %1990 = load i64* %1989, align 8
  %1991 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %1992 = load i64* %1991, align 8
  %1993 = add i64 %1990, %1992
  %extract4374.i = add i64 %1993, 12939264
  %1994 = getelementptr inbounds double addrspace(1)* %4, i64 %extract4374.i
  %ptrTypeCast4390.i = bitcast double addrspace(1)* %1994 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect4406.i, <16 x double> addrspace(1)* %ptrTypeCast4390.i, align 8
  %1995 = fmul <16 x double> %temp.vect97.i, <double 4.000000e+00, double 4.000000e+00, double 4.000000e+00, double 4.000000e+00, double 4.000000e+00, double 4.000000e+00, double 4.000000e+00, double 4.000000e+00, double 4.000000e+00, double 4.000000e+00, double 4.000000e+00, double 4.000000e+00, double 4.000000e+00, double 4.000000e+00, double 4.000000e+00, double 4.000000e+00>
  %1996 = fadd <16 x double> %1995, <double 0xC01E8ABEE9B53AE0, double 0xC01E8ABEE9B53AE0, double 0xC01E8ABEE9B53AE0, double 0xC01E8ABEE9B53AE0, double 0xC01E8ABEE9B53AE0, double 0xC01E8ABEE9B53AE0, double 0xC01E8ABEE9B53AE0, double 0xC01E8ABEE9B53AE0, double 0xC01E8ABEE9B53AE0, double 0xC01E8ABEE9B53AE0, double 0xC01E8ABEE9B53AE0, double 0xC01E8ABEE9B53AE0, double 0xC01E8ABEE9B53AE0, double 0xC01E8ABEE9B53AE0, double 0xC01E8ABEE9B53AE0, double 0xC01E8ABEE9B53AE0>
  %1997 = fmul <16 x double> %41, <double 0x408F73777AF64064, double 0x408F73777AF64064, double 0x408F73777AF64064, double 0x408F73777AF64064, double 0x408F73777AF64064, double 0x408F73777AF64064, double 0x408F73777AF64064, double 0x408F73777AF64064, double 0x408F73777AF64064, double 0x408F73777AF64064, double 0x408F73777AF64064, double 0x408F73777AF64064, double 0x408F73777AF64064, double 0x408F73777AF64064, double 0x408F73777AF64064, double 0x408F73777AF64064>
  %1998 = fadd <16 x double> %1996, %1997
  %extract4407.i = extractelement <16 x double> %1998, i32 0
  %extract4408.i = extractelement <16 x double> %1998, i32 1
  %extract4409.i = extractelement <16 x double> %1998, i32 2
  %extract4410.i = extractelement <16 x double> %1998, i32 3
  %extract4411.i = extractelement <16 x double> %1998, i32 4
  %extract4412.i = extractelement <16 x double> %1998, i32 5
  %extract4413.i = extractelement <16 x double> %1998, i32 6
  %extract4414.i = extractelement <16 x double> %1998, i32 7
  %extract4415.i = extractelement <16 x double> %1998, i32 8
  %extract4416.i = extractelement <16 x double> %1998, i32 9
  %extract4417.i = extractelement <16 x double> %1998, i32 10
  %extract4418.i = extractelement <16 x double> %1998, i32 11
  %extract4419.i = extractelement <16 x double> %1998, i32 12
  %extract4420.i = extractelement <16 x double> %1998, i32 13
  %extract4421.i = extractelement <16 x double> %1998, i32 14
  %extract4422.i = extractelement <16 x double> %1998, i32 15
  %1999 = call double @_Z3expd(double %extract4407.i) nounwind
  %2000 = call double @_Z3expd(double %extract4408.i) nounwind
  %2001 = call double @_Z3expd(double %extract4409.i) nounwind
  %2002 = call double @_Z3expd(double %extract4410.i) nounwind
  %2003 = call double @_Z3expd(double %extract4411.i) nounwind
  %2004 = call double @_Z3expd(double %extract4412.i) nounwind
  %2005 = call double @_Z3expd(double %extract4413.i) nounwind
  %2006 = call double @_Z3expd(double %extract4414.i) nounwind
  %2007 = call double @_Z3expd(double %extract4415.i) nounwind
  %2008 = call double @_Z3expd(double %extract4416.i) nounwind
  %2009 = call double @_Z3expd(double %extract4417.i) nounwind
  %2010 = call double @_Z3expd(double %extract4418.i) nounwind
  %2011 = call double @_Z3expd(double %extract4419.i) nounwind
  %2012 = call double @_Z3expd(double %extract4420.i) nounwind
  %2013 = call double @_Z3expd(double %extract4421.i) nounwind
  %2014 = call double @_Z3expd(double %extract4422.i) nounwind
  %temp.vect4442.i = insertelement <16 x double> undef, double %1999, i32 0
  %temp.vect4443.i = insertelement <16 x double> %temp.vect4442.i, double %2000, i32 1
  %temp.vect4444.i = insertelement <16 x double> %temp.vect4443.i, double %2001, i32 2
  %temp.vect4445.i = insertelement <16 x double> %temp.vect4444.i, double %2002, i32 3
  %temp.vect4446.i = insertelement <16 x double> %temp.vect4445.i, double %2003, i32 4
  %temp.vect4447.i = insertelement <16 x double> %temp.vect4446.i, double %2004, i32 5
  %temp.vect4448.i = insertelement <16 x double> %temp.vect4447.i, double %2005, i32 6
  %temp.vect4449.i = insertelement <16 x double> %temp.vect4448.i, double %2006, i32 7
  %temp.vect4450.i = insertelement <16 x double> %temp.vect4449.i, double %2007, i32 8
  %temp.vect4451.i = insertelement <16 x double> %temp.vect4450.i, double %2008, i32 9
  %temp.vect4452.i = insertelement <16 x double> %temp.vect4451.i, double %2009, i32 10
  %temp.vect4453.i = insertelement <16 x double> %temp.vect4452.i, double %2010, i32 11
  %temp.vect4454.i = insertelement <16 x double> %temp.vect4453.i, double %2011, i32 12
  %temp.vect4455.i = insertelement <16 x double> %temp.vect4454.i, double %2012, i32 13
  %temp.vect4456.i = insertelement <16 x double> %temp.vect4455.i, double %2013, i32 14
  %temp.vect4457.i = insertelement <16 x double> %temp.vect4456.i, double %2014, i32 15
  %2015 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2016 = load i64* %2015, align 8
  %2017 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2018 = load i64* %2017, align 8
  %2019 = add i64 %2016, %2018
  %extract4425.i = add i64 %2019, 13049856
  %2020 = getelementptr inbounds double addrspace(1)* %4, i64 %extract4425.i
  %ptrTypeCast4441.i = bitcast double addrspace(1)* %2020 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect4457.i, <16 x double> addrspace(1)* %ptrTypeCast4441.i, align 8
  %2021 = fadd <16 x double> %498, <double 0x40301E3B85114C59, double 0x40301E3B85114C59, double 0x40301E3B85114C59, double 0x40301E3B85114C59, double 0x40301E3B85114C59, double 0x40301E3B85114C59, double 0x40301E3B85114C59, double 0x40301E3B85114C59, double 0x40301E3B85114C59, double 0x40301E3B85114C59, double 0x40301E3B85114C59, double 0x40301E3B85114C59, double 0x40301E3B85114C59, double 0x40301E3B85114C59, double 0x40301E3B85114C59, double 0x40301E3B85114C59>
  %2022 = fmul <16 x double> %41, <double 0x40A796999AE924F2, double 0x40A796999AE924F2, double 0x40A796999AE924F2, double 0x40A796999AE924F2, double 0x40A796999AE924F2, double 0x40A796999AE924F2, double 0x40A796999AE924F2, double 0x40A796999AE924F2, double 0x40A796999AE924F2, double 0x40A796999AE924F2, double 0x40A796999AE924F2, double 0x40A796999AE924F2, double 0x40A796999AE924F2, double 0x40A796999AE924F2, double 0x40A796999AE924F2, double 0x40A796999AE924F2>
  %2023 = fsub <16 x double> %2021, %2022
  %extract4458.i = extractelement <16 x double> %2023, i32 0
  %extract4459.i = extractelement <16 x double> %2023, i32 1
  %extract4460.i = extractelement <16 x double> %2023, i32 2
  %extract4461.i = extractelement <16 x double> %2023, i32 3
  %extract4462.i = extractelement <16 x double> %2023, i32 4
  %extract4463.i = extractelement <16 x double> %2023, i32 5
  %extract4464.i = extractelement <16 x double> %2023, i32 6
  %extract4465.i = extractelement <16 x double> %2023, i32 7
  %extract4466.i = extractelement <16 x double> %2023, i32 8
  %extract4467.i = extractelement <16 x double> %2023, i32 9
  %extract4468.i = extractelement <16 x double> %2023, i32 10
  %extract4469.i = extractelement <16 x double> %2023, i32 11
  %extract4470.i = extractelement <16 x double> %2023, i32 12
  %extract4471.i = extractelement <16 x double> %2023, i32 13
  %extract4472.i = extractelement <16 x double> %2023, i32 14
  %extract4473.i = extractelement <16 x double> %2023, i32 15
  %2024 = call double @_Z3expd(double %extract4458.i) nounwind
  %2025 = call double @_Z3expd(double %extract4459.i) nounwind
  %2026 = call double @_Z3expd(double %extract4460.i) nounwind
  %2027 = call double @_Z3expd(double %extract4461.i) nounwind
  %2028 = call double @_Z3expd(double %extract4462.i) nounwind
  %2029 = call double @_Z3expd(double %extract4463.i) nounwind
  %2030 = call double @_Z3expd(double %extract4464.i) nounwind
  %2031 = call double @_Z3expd(double %extract4465.i) nounwind
  %2032 = call double @_Z3expd(double %extract4466.i) nounwind
  %2033 = call double @_Z3expd(double %extract4467.i) nounwind
  %2034 = call double @_Z3expd(double %extract4468.i) nounwind
  %2035 = call double @_Z3expd(double %extract4469.i) nounwind
  %2036 = call double @_Z3expd(double %extract4470.i) nounwind
  %2037 = call double @_Z3expd(double %extract4471.i) nounwind
  %2038 = call double @_Z3expd(double %extract4472.i) nounwind
  %2039 = call double @_Z3expd(double %extract4473.i) nounwind
  %temp.vect4493.i = insertelement <16 x double> undef, double %2024, i32 0
  %temp.vect4494.i = insertelement <16 x double> %temp.vect4493.i, double %2025, i32 1
  %temp.vect4495.i = insertelement <16 x double> %temp.vect4494.i, double %2026, i32 2
  %temp.vect4496.i = insertelement <16 x double> %temp.vect4495.i, double %2027, i32 3
  %temp.vect4497.i = insertelement <16 x double> %temp.vect4496.i, double %2028, i32 4
  %temp.vect4498.i = insertelement <16 x double> %temp.vect4497.i, double %2029, i32 5
  %temp.vect4499.i = insertelement <16 x double> %temp.vect4498.i, double %2030, i32 6
  %temp.vect4500.i = insertelement <16 x double> %temp.vect4499.i, double %2031, i32 7
  %temp.vect4501.i = insertelement <16 x double> %temp.vect4500.i, double %2032, i32 8
  %temp.vect4502.i = insertelement <16 x double> %temp.vect4501.i, double %2033, i32 9
  %temp.vect4503.i = insertelement <16 x double> %temp.vect4502.i, double %2034, i32 10
  %temp.vect4504.i = insertelement <16 x double> %temp.vect4503.i, double %2035, i32 11
  %temp.vect4505.i = insertelement <16 x double> %temp.vect4504.i, double %2036, i32 12
  %temp.vect4506.i = insertelement <16 x double> %temp.vect4505.i, double %2037, i32 13
  %temp.vect4507.i = insertelement <16 x double> %temp.vect4506.i, double %2038, i32 14
  %temp.vect4508.i = insertelement <16 x double> %temp.vect4507.i, double %2039, i32 15
  %2040 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2041 = load i64* %2040, align 8
  %2042 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2043 = load i64* %2042, align 8
  %2044 = add i64 %2041, %2043
  %extract4476.i = add i64 %2044, 13160448
  %2045 = getelementptr inbounds double addrspace(1)* %4, i64 %extract4476.i
  %ptrTypeCast4492.i = bitcast double addrspace(1)* %2045 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect4508.i, <16 x double> addrspace(1)* %ptrTypeCast4492.i, align 8
  %2046 = fmul <16 x double> %temp.vect97.i, <double 1.182000e+01, double 1.182000e+01, double 1.182000e+01, double 1.182000e+01, double 1.182000e+01, double 1.182000e+01, double 1.182000e+01, double 1.182000e+01, double 1.182000e+01, double 1.182000e+01, double 1.182000e+01, double 1.182000e+01, double 1.182000e+01, double 1.182000e+01, double 1.182000e+01, double 1.182000e+01>
  %2047 = fsub <16 x double> <double 0x405FDB8F8E7DDCA5, double 0x405FDB8F8E7DDCA5, double 0x405FDB8F8E7DDCA5, double 0x405FDB8F8E7DDCA5, double 0x405FDB8F8E7DDCA5, double 0x405FDB8F8E7DDCA5, double 0x405FDB8F8E7DDCA5, double 0x405FDB8F8E7DDCA5, double 0x405FDB8F8E7DDCA5, double 0x405FDB8F8E7DDCA5, double 0x405FDB8F8E7DDCA5, double 0x405FDB8F8E7DDCA5, double 0x405FDB8F8E7DDCA5, double 0x405FDB8F8E7DDCA5, double 0x405FDB8F8E7DDCA5, double 0x405FDB8F8E7DDCA5>, %2046
  %2048 = fmul <16 x double> %41, <double 0x40D18EFB9DB22D0E, double 0x40D18EFB9DB22D0E, double 0x40D18EFB9DB22D0E, double 0x40D18EFB9DB22D0E, double 0x40D18EFB9DB22D0E, double 0x40D18EFB9DB22D0E, double 0x40D18EFB9DB22D0E, double 0x40D18EFB9DB22D0E, double 0x40D18EFB9DB22D0E, double 0x40D18EFB9DB22D0E, double 0x40D18EFB9DB22D0E, double 0x40D18EFB9DB22D0E, double 0x40D18EFB9DB22D0E, double 0x40D18EFB9DB22D0E, double 0x40D18EFB9DB22D0E, double 0x40D18EFB9DB22D0E>
  %2049 = fsub <16 x double> %2047, %2048
  %extract4509.i = extractelement <16 x double> %2049, i32 0
  %extract4510.i = extractelement <16 x double> %2049, i32 1
  %extract4511.i = extractelement <16 x double> %2049, i32 2
  %extract4512.i = extractelement <16 x double> %2049, i32 3
  %extract4513.i = extractelement <16 x double> %2049, i32 4
  %extract4514.i = extractelement <16 x double> %2049, i32 5
  %extract4515.i = extractelement <16 x double> %2049, i32 6
  %extract4516.i = extractelement <16 x double> %2049, i32 7
  %extract4517.i = extractelement <16 x double> %2049, i32 8
  %extract4518.i = extractelement <16 x double> %2049, i32 9
  %extract4519.i = extractelement <16 x double> %2049, i32 10
  %extract4520.i = extractelement <16 x double> %2049, i32 11
  %extract4521.i = extractelement <16 x double> %2049, i32 12
  %extract4522.i = extractelement <16 x double> %2049, i32 13
  %extract4523.i = extractelement <16 x double> %2049, i32 14
  %extract4524.i = extractelement <16 x double> %2049, i32 15
  %2050 = call double @_Z3expd(double %extract4509.i) nounwind
  %2051 = call double @_Z3expd(double %extract4510.i) nounwind
  %2052 = call double @_Z3expd(double %extract4511.i) nounwind
  %2053 = call double @_Z3expd(double %extract4512.i) nounwind
  %2054 = call double @_Z3expd(double %extract4513.i) nounwind
  %2055 = call double @_Z3expd(double %extract4514.i) nounwind
  %2056 = call double @_Z3expd(double %extract4515.i) nounwind
  %2057 = call double @_Z3expd(double %extract4516.i) nounwind
  %2058 = call double @_Z3expd(double %extract4517.i) nounwind
  %2059 = call double @_Z3expd(double %extract4518.i) nounwind
  %2060 = call double @_Z3expd(double %extract4519.i) nounwind
  %2061 = call double @_Z3expd(double %extract4520.i) nounwind
  %2062 = call double @_Z3expd(double %extract4521.i) nounwind
  %2063 = call double @_Z3expd(double %extract4522.i) nounwind
  %2064 = call double @_Z3expd(double %extract4523.i) nounwind
  %2065 = call double @_Z3expd(double %extract4524.i) nounwind
  %temp.vect4544.i = insertelement <16 x double> undef, double %2050, i32 0
  %temp.vect4545.i = insertelement <16 x double> %temp.vect4544.i, double %2051, i32 1
  %temp.vect4546.i = insertelement <16 x double> %temp.vect4545.i, double %2052, i32 2
  %temp.vect4547.i = insertelement <16 x double> %temp.vect4546.i, double %2053, i32 3
  %temp.vect4548.i = insertelement <16 x double> %temp.vect4547.i, double %2054, i32 4
  %temp.vect4549.i = insertelement <16 x double> %temp.vect4548.i, double %2055, i32 5
  %temp.vect4550.i = insertelement <16 x double> %temp.vect4549.i, double %2056, i32 6
  %temp.vect4551.i = insertelement <16 x double> %temp.vect4550.i, double %2057, i32 7
  %temp.vect4552.i = insertelement <16 x double> %temp.vect4551.i, double %2058, i32 8
  %temp.vect4553.i = insertelement <16 x double> %temp.vect4552.i, double %2059, i32 9
  %temp.vect4554.i = insertelement <16 x double> %temp.vect4553.i, double %2060, i32 10
  %temp.vect4555.i = insertelement <16 x double> %temp.vect4554.i, double %2061, i32 11
  %temp.vect4556.i = insertelement <16 x double> %temp.vect4555.i, double %2062, i32 12
  %temp.vect4557.i = insertelement <16 x double> %temp.vect4556.i, double %2063, i32 13
  %temp.vect4558.i = insertelement <16 x double> %temp.vect4557.i, double %2064, i32 14
  %temp.vect4559.i = insertelement <16 x double> %temp.vect4558.i, double %2065, i32 15
  %2066 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2067 = load i64* %2066, align 8
  %2068 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2069 = load i64* %2068, align 8
  %2070 = add i64 %2067, %2069
  %extract4527.i = add i64 %2070, 13271040
  %2071 = getelementptr inbounds double addrspace(1)* %4, i64 %extract4527.i
  %ptrTypeCast4543.i = bitcast double addrspace(1)* %2071 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect4559.i, <16 x double> addrspace(1)* %ptrTypeCast4543.i, align 8
  %2072 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2073 = load i64* %2072, align 8
  %2074 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2075 = load i64* %2074, align 8
  %2076 = add i64 %2073, %2075
  %extract4562.i = add i64 %2076, 13381632
  %2077 = getelementptr inbounds double addrspace(1)* %4, i64 %extract4562.i
  %ptrTypeCast4578.i = bitcast double addrspace(1)* %2077 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14>, <16 x double> addrspace(1)* %ptrTypeCast4578.i, align 8
  %2078 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2079 = load i64* %2078, align 8
  %2080 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2081 = load i64* %2080, align 8
  %2082 = add i64 %2079, %2081
  %extract4581.i = add i64 %2082, 13492224
  %2083 = getelementptr inbounds double addrspace(1)* %4, i64 %extract4581.i
  %ptrTypeCast4597.i = bitcast double addrspace(1)* %2083 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14>, <16 x double> addrspace(1)* %ptrTypeCast4597.i, align 8
  %2084 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2085 = load i64* %2084, align 8
  %2086 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2087 = load i64* %2086, align 8
  %2088 = add i64 %2085, %2087
  %extract4600.i = add i64 %2088, 13602816
  %2089 = getelementptr inbounds double addrspace(1)* %4, i64 %extract4600.i
  %ptrTypeCast4616.i = bitcast double addrspace(1)* %2089 to <16 x double> addrspace(1)*
  store <16 x double> <double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast4616.i, align 8
  %2090 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2091 = load i64* %2090, align 8
  %2092 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2093 = load i64* %2092, align 8
  %2094 = add i64 %2091, %2093
  %extract4619.i = add i64 %2094, 13713408
  %2095 = getelementptr inbounds double addrspace(1)* %4, i64 %extract4619.i
  %ptrTypeCast4635.i = bitcast double addrspace(1)* %2095 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast4635.i, align 8
  %2096 = fmul <16 x double> %temp.vect97.i, <double 6.000000e-02, double 6.000000e-02, double 6.000000e-02, double 6.000000e-02, double 6.000000e-02, double 6.000000e-02, double 6.000000e-02, double 6.000000e-02, double 6.000000e-02, double 6.000000e-02, double 6.000000e-02, double 6.000000e-02, double 6.000000e-02, double 6.000000e-02, double 6.000000e-02, double 6.000000e-02>
  %2097 = fsub <16 x double> <double 0x4040B70DF8104776, double 0x4040B70DF8104776, double 0x4040B70DF8104776, double 0x4040B70DF8104776, double 0x4040B70DF8104776, double 0x4040B70DF8104776, double 0x4040B70DF8104776, double 0x4040B70DF8104776, double 0x4040B70DF8104776, double 0x4040B70DF8104776, double 0x4040B70DF8104776, double 0x4040B70DF8104776, double 0x4040B70DF8104776, double 0x4040B70DF8104776, double 0x4040B70DF8104776, double 0x4040B70DF8104776>, %2096
  %2098 = fmul <16 x double> %41, <double 0x40B0B55777AF6406, double 0x40B0B55777AF6406, double 0x40B0B55777AF6406, double 0x40B0B55777AF6406, double 0x40B0B55777AF6406, double 0x40B0B55777AF6406, double 0x40B0B55777AF6406, double 0x40B0B55777AF6406, double 0x40B0B55777AF6406, double 0x40B0B55777AF6406, double 0x40B0B55777AF6406, double 0x40B0B55777AF6406, double 0x40B0B55777AF6406, double 0x40B0B55777AF6406, double 0x40B0B55777AF6406, double 0x40B0B55777AF6406>
  %2099 = fsub <16 x double> %2097, %2098
  %extract4636.i = extractelement <16 x double> %2099, i32 0
  %extract4637.i = extractelement <16 x double> %2099, i32 1
  %extract4638.i = extractelement <16 x double> %2099, i32 2
  %extract4639.i = extractelement <16 x double> %2099, i32 3
  %extract4640.i = extractelement <16 x double> %2099, i32 4
  %extract4641.i = extractelement <16 x double> %2099, i32 5
  %extract4642.i = extractelement <16 x double> %2099, i32 6
  %extract4643.i = extractelement <16 x double> %2099, i32 7
  %extract4644.i = extractelement <16 x double> %2099, i32 8
  %extract4645.i = extractelement <16 x double> %2099, i32 9
  %extract4646.i = extractelement <16 x double> %2099, i32 10
  %extract4647.i = extractelement <16 x double> %2099, i32 11
  %extract4648.i = extractelement <16 x double> %2099, i32 12
  %extract4649.i = extractelement <16 x double> %2099, i32 13
  %extract4650.i = extractelement <16 x double> %2099, i32 14
  %extract4651.i = extractelement <16 x double> %2099, i32 15
  %2100 = call double @_Z3expd(double %extract4636.i) nounwind
  %2101 = call double @_Z3expd(double %extract4637.i) nounwind
  %2102 = call double @_Z3expd(double %extract4638.i) nounwind
  %2103 = call double @_Z3expd(double %extract4639.i) nounwind
  %2104 = call double @_Z3expd(double %extract4640.i) nounwind
  %2105 = call double @_Z3expd(double %extract4641.i) nounwind
  %2106 = call double @_Z3expd(double %extract4642.i) nounwind
  %2107 = call double @_Z3expd(double %extract4643.i) nounwind
  %2108 = call double @_Z3expd(double %extract4644.i) nounwind
  %2109 = call double @_Z3expd(double %extract4645.i) nounwind
  %2110 = call double @_Z3expd(double %extract4646.i) nounwind
  %2111 = call double @_Z3expd(double %extract4647.i) nounwind
  %2112 = call double @_Z3expd(double %extract4648.i) nounwind
  %2113 = call double @_Z3expd(double %extract4649.i) nounwind
  %2114 = call double @_Z3expd(double %extract4650.i) nounwind
  %2115 = call double @_Z3expd(double %extract4651.i) nounwind
  %temp.vect4671.i = insertelement <16 x double> undef, double %2100, i32 0
  %temp.vect4672.i = insertelement <16 x double> %temp.vect4671.i, double %2101, i32 1
  %temp.vect4673.i = insertelement <16 x double> %temp.vect4672.i, double %2102, i32 2
  %temp.vect4674.i = insertelement <16 x double> %temp.vect4673.i, double %2103, i32 3
  %temp.vect4675.i = insertelement <16 x double> %temp.vect4674.i, double %2104, i32 4
  %temp.vect4676.i = insertelement <16 x double> %temp.vect4675.i, double %2105, i32 5
  %temp.vect4677.i = insertelement <16 x double> %temp.vect4676.i, double %2106, i32 6
  %temp.vect4678.i = insertelement <16 x double> %temp.vect4677.i, double %2107, i32 7
  %temp.vect4679.i = insertelement <16 x double> %temp.vect4678.i, double %2108, i32 8
  %temp.vect4680.i = insertelement <16 x double> %temp.vect4679.i, double %2109, i32 9
  %temp.vect4681.i = insertelement <16 x double> %temp.vect4680.i, double %2110, i32 10
  %temp.vect4682.i = insertelement <16 x double> %temp.vect4681.i, double %2111, i32 11
  %temp.vect4683.i = insertelement <16 x double> %temp.vect4682.i, double %2112, i32 12
  %temp.vect4684.i = insertelement <16 x double> %temp.vect4683.i, double %2113, i32 13
  %temp.vect4685.i = insertelement <16 x double> %temp.vect4684.i, double %2114, i32 14
  %temp.vect4686.i = insertelement <16 x double> %temp.vect4685.i, double %2115, i32 15
  %2116 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2117 = load i64* %2116, align 8
  %2118 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2119 = load i64* %2118, align 8
  %2120 = add i64 %2117, %2119
  %extract4654.i = add i64 %2120, 13824000
  %2121 = getelementptr inbounds double addrspace(1)* %4, i64 %extract4654.i
  %ptrTypeCast4670.i = bitcast double addrspace(1)* %2121 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect4686.i, <16 x double> addrspace(1)* %ptrTypeCast4670.i, align 8
  %2122 = fmul <16 x double> %temp.vect97.i, <double 1.430000e+00, double 1.430000e+00, double 1.430000e+00, double 1.430000e+00, double 1.430000e+00, double 1.430000e+00, double 1.430000e+00, double 1.430000e+00, double 1.430000e+00, double 1.430000e+00, double 1.430000e+00, double 1.430000e+00, double 1.430000e+00, double 1.430000e+00, double 1.430000e+00, double 1.430000e+00>
  %2123 = fadd <16 x double> %2122, <double 0x403520F4821D7C12, double 0x403520F4821D7C12, double 0x403520F4821D7C12, double 0x403520F4821D7C12, double 0x403520F4821D7C12, double 0x403520F4821D7C12, double 0x403520F4821D7C12, double 0x403520F4821D7C12, double 0x403520F4821D7C12, double 0x403520F4821D7C12, double 0x403520F4821D7C12, double 0x403520F4821D7C12, double 0x403520F4821D7C12, double 0x403520F4821D7C12, double 0x403520F4821D7C12, double 0x403520F4821D7C12>
  %2124 = fmul <16 x double> %41, <double 0x4095269C8216C615, double 0x4095269C8216C615, double 0x4095269C8216C615, double 0x4095269C8216C615, double 0x4095269C8216C615, double 0x4095269C8216C615, double 0x4095269C8216C615, double 0x4095269C8216C615, double 0x4095269C8216C615, double 0x4095269C8216C615, double 0x4095269C8216C615, double 0x4095269C8216C615, double 0x4095269C8216C615, double 0x4095269C8216C615, double 0x4095269C8216C615, double 0x4095269C8216C615>
  %2125 = fsub <16 x double> %2123, %2124
  %extract4687.i = extractelement <16 x double> %2125, i32 0
  %extract4688.i = extractelement <16 x double> %2125, i32 1
  %extract4689.i = extractelement <16 x double> %2125, i32 2
  %extract4690.i = extractelement <16 x double> %2125, i32 3
  %extract4691.i = extractelement <16 x double> %2125, i32 4
  %extract4692.i = extractelement <16 x double> %2125, i32 5
  %extract4693.i = extractelement <16 x double> %2125, i32 6
  %extract4694.i = extractelement <16 x double> %2125, i32 7
  %extract4695.i = extractelement <16 x double> %2125, i32 8
  %extract4696.i = extractelement <16 x double> %2125, i32 9
  %extract4697.i = extractelement <16 x double> %2125, i32 10
  %extract4698.i = extractelement <16 x double> %2125, i32 11
  %extract4699.i = extractelement <16 x double> %2125, i32 12
  %extract4700.i = extractelement <16 x double> %2125, i32 13
  %extract4701.i = extractelement <16 x double> %2125, i32 14
  %extract4702.i = extractelement <16 x double> %2125, i32 15
  %2126 = call double @_Z3expd(double %extract4687.i) nounwind
  %2127 = call double @_Z3expd(double %extract4688.i) nounwind
  %2128 = call double @_Z3expd(double %extract4689.i) nounwind
  %2129 = call double @_Z3expd(double %extract4690.i) nounwind
  %2130 = call double @_Z3expd(double %extract4691.i) nounwind
  %2131 = call double @_Z3expd(double %extract4692.i) nounwind
  %2132 = call double @_Z3expd(double %extract4693.i) nounwind
  %2133 = call double @_Z3expd(double %extract4694.i) nounwind
  %2134 = call double @_Z3expd(double %extract4695.i) nounwind
  %2135 = call double @_Z3expd(double %extract4696.i) nounwind
  %2136 = call double @_Z3expd(double %extract4697.i) nounwind
  %2137 = call double @_Z3expd(double %extract4698.i) nounwind
  %2138 = call double @_Z3expd(double %extract4699.i) nounwind
  %2139 = call double @_Z3expd(double %extract4700.i) nounwind
  %2140 = call double @_Z3expd(double %extract4701.i) nounwind
  %2141 = call double @_Z3expd(double %extract4702.i) nounwind
  %temp.vect4722.i = insertelement <16 x double> undef, double %2126, i32 0
  %temp.vect4723.i = insertelement <16 x double> %temp.vect4722.i, double %2127, i32 1
  %temp.vect4724.i = insertelement <16 x double> %temp.vect4723.i, double %2128, i32 2
  %temp.vect4725.i = insertelement <16 x double> %temp.vect4724.i, double %2129, i32 3
  %temp.vect4726.i = insertelement <16 x double> %temp.vect4725.i, double %2130, i32 4
  %temp.vect4727.i = insertelement <16 x double> %temp.vect4726.i, double %2131, i32 5
  %temp.vect4728.i = insertelement <16 x double> %temp.vect4727.i, double %2132, i32 6
  %temp.vect4729.i = insertelement <16 x double> %temp.vect4728.i, double %2133, i32 7
  %temp.vect4730.i = insertelement <16 x double> %temp.vect4729.i, double %2134, i32 8
  %temp.vect4731.i = insertelement <16 x double> %temp.vect4730.i, double %2135, i32 9
  %temp.vect4732.i = insertelement <16 x double> %temp.vect4731.i, double %2136, i32 10
  %temp.vect4733.i = insertelement <16 x double> %temp.vect4732.i, double %2137, i32 11
  %temp.vect4734.i = insertelement <16 x double> %temp.vect4733.i, double %2138, i32 12
  %temp.vect4735.i = insertelement <16 x double> %temp.vect4734.i, double %2139, i32 13
  %temp.vect4736.i = insertelement <16 x double> %temp.vect4735.i, double %2140, i32 14
  %temp.vect4737.i = insertelement <16 x double> %temp.vect4736.i, double %2141, i32 15
  %2142 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2143 = load i64* %2142, align 8
  %2144 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2145 = load i64* %2144, align 8
  %2146 = add i64 %2143, %2145
  %extract4705.i = add i64 %2146, 14045184
  %2147 = getelementptr inbounds double addrspace(1)* %4, i64 %extract4705.i
  %ptrTypeCast4721.i = bitcast double addrspace(1)* %2147 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect4737.i, <16 x double> addrspace(1)* %ptrTypeCast4721.i, align 8
  %2148 = fmul <16 x double> %41, <double 0x40853ABD712A0EC7, double 0x40853ABD712A0EC7, double 0x40853ABD712A0EC7, double 0x40853ABD712A0EC7, double 0x40853ABD712A0EC7, double 0x40853ABD712A0EC7, double 0x40853ABD712A0EC7, double 0x40853ABD712A0EC7, double 0x40853ABD712A0EC7, double 0x40853ABD712A0EC7, double 0x40853ABD712A0EC7, double 0x40853ABD712A0EC7, double 0x40853ABD712A0EC7, double 0x40853ABD712A0EC7, double 0x40853ABD712A0EC7, double 0x40853ABD712A0EC7>
  %2149 = fsub <16 x double> <double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C, double 0x403C30CD9472E92C>, %2148
  %extract4738.i = extractelement <16 x double> %2149, i32 0
  %extract4739.i = extractelement <16 x double> %2149, i32 1
  %extract4740.i = extractelement <16 x double> %2149, i32 2
  %extract4741.i = extractelement <16 x double> %2149, i32 3
  %extract4742.i = extractelement <16 x double> %2149, i32 4
  %extract4743.i = extractelement <16 x double> %2149, i32 5
  %extract4744.i = extractelement <16 x double> %2149, i32 6
  %extract4745.i = extractelement <16 x double> %2149, i32 7
  %extract4746.i = extractelement <16 x double> %2149, i32 8
  %extract4747.i = extractelement <16 x double> %2149, i32 9
  %extract4748.i = extractelement <16 x double> %2149, i32 10
  %extract4749.i = extractelement <16 x double> %2149, i32 11
  %extract4750.i = extractelement <16 x double> %2149, i32 12
  %extract4751.i = extractelement <16 x double> %2149, i32 13
  %extract4752.i = extractelement <16 x double> %2149, i32 14
  %extract4753.i = extractelement <16 x double> %2149, i32 15
  %2150 = call double @_Z3expd(double %extract4738.i) nounwind
  %2151 = call double @_Z3expd(double %extract4739.i) nounwind
  %2152 = call double @_Z3expd(double %extract4740.i) nounwind
  %2153 = call double @_Z3expd(double %extract4741.i) nounwind
  %2154 = call double @_Z3expd(double %extract4742.i) nounwind
  %2155 = call double @_Z3expd(double %extract4743.i) nounwind
  %2156 = call double @_Z3expd(double %extract4744.i) nounwind
  %2157 = call double @_Z3expd(double %extract4745.i) nounwind
  %2158 = call double @_Z3expd(double %extract4746.i) nounwind
  %2159 = call double @_Z3expd(double %extract4747.i) nounwind
  %2160 = call double @_Z3expd(double %extract4748.i) nounwind
  %2161 = call double @_Z3expd(double %extract4749.i) nounwind
  %2162 = call double @_Z3expd(double %extract4750.i) nounwind
  %2163 = call double @_Z3expd(double %extract4751.i) nounwind
  %2164 = call double @_Z3expd(double %extract4752.i) nounwind
  %2165 = call double @_Z3expd(double %extract4753.i) nounwind
  %temp.vect4773.i = insertelement <16 x double> undef, double %2150, i32 0
  %temp.vect4774.i = insertelement <16 x double> %temp.vect4773.i, double %2151, i32 1
  %temp.vect4775.i = insertelement <16 x double> %temp.vect4774.i, double %2152, i32 2
  %temp.vect4776.i = insertelement <16 x double> %temp.vect4775.i, double %2153, i32 3
  %temp.vect4777.i = insertelement <16 x double> %temp.vect4776.i, double %2154, i32 4
  %temp.vect4778.i = insertelement <16 x double> %temp.vect4777.i, double %2155, i32 5
  %temp.vect4779.i = insertelement <16 x double> %temp.vect4778.i, double %2156, i32 6
  %temp.vect4780.i = insertelement <16 x double> %temp.vect4779.i, double %2157, i32 7
  %temp.vect4781.i = insertelement <16 x double> %temp.vect4780.i, double %2158, i32 8
  %temp.vect4782.i = insertelement <16 x double> %temp.vect4781.i, double %2159, i32 9
  %temp.vect4783.i = insertelement <16 x double> %temp.vect4782.i, double %2160, i32 10
  %temp.vect4784.i = insertelement <16 x double> %temp.vect4783.i, double %2161, i32 11
  %temp.vect4785.i = insertelement <16 x double> %temp.vect4784.i, double %2162, i32 12
  %temp.vect4786.i = insertelement <16 x double> %temp.vect4785.i, double %2163, i32 13
  %temp.vect4787.i = insertelement <16 x double> %temp.vect4786.i, double %2164, i32 14
  %temp.vect4788.i = insertelement <16 x double> %temp.vect4787.i, double %2165, i32 15
  %2166 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2167 = load i64* %2166, align 8
  %2168 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2169 = load i64* %2168, align 8
  %2170 = add i64 %2167, %2169
  %extract4756.i = add i64 %2170, 14266368
  %2171 = getelementptr inbounds double addrspace(1)* %4, i64 %extract4756.i
  %ptrTypeCast4772.i = bitcast double addrspace(1)* %2171 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect4788.i, <16 x double> addrspace(1)* %ptrTypeCast4772.i, align 8
  %2172 = fmul <16 x double> %41, <double 0xC08F73777AF64064, double 0xC08F73777AF64064, double 0xC08F73777AF64064, double 0xC08F73777AF64064, double 0xC08F73777AF64064, double 0xC08F73777AF64064, double 0xC08F73777AF64064, double 0xC08F73777AF64064, double 0xC08F73777AF64064, double 0xC08F73777AF64064, double 0xC08F73777AF64064, double 0xC08F73777AF64064, double 0xC08F73777AF64064, double 0xC08F73777AF64064, double 0xC08F73777AF64064, double 0xC08F73777AF64064>
  %extract4789.i = extractelement <16 x double> %2172, i32 0
  %extract4790.i = extractelement <16 x double> %2172, i32 1
  %extract4791.i = extractelement <16 x double> %2172, i32 2
  %extract4792.i = extractelement <16 x double> %2172, i32 3
  %extract4793.i = extractelement <16 x double> %2172, i32 4
  %extract4794.i = extractelement <16 x double> %2172, i32 5
  %extract4795.i = extractelement <16 x double> %2172, i32 6
  %extract4796.i = extractelement <16 x double> %2172, i32 7
  %extract4797.i = extractelement <16 x double> %2172, i32 8
  %extract4798.i = extractelement <16 x double> %2172, i32 9
  %extract4799.i = extractelement <16 x double> %2172, i32 10
  %extract4800.i = extractelement <16 x double> %2172, i32 11
  %extract4801.i = extractelement <16 x double> %2172, i32 12
  %extract4802.i = extractelement <16 x double> %2172, i32 13
  %extract4803.i = extractelement <16 x double> %2172, i32 14
  %extract4804.i = extractelement <16 x double> %2172, i32 15
  %2173 = call double @_Z3expd(double %extract4789.i) nounwind
  %2174 = call double @_Z3expd(double %extract4790.i) nounwind
  %2175 = call double @_Z3expd(double %extract4791.i) nounwind
  %2176 = call double @_Z3expd(double %extract4792.i) nounwind
  %2177 = call double @_Z3expd(double %extract4793.i) nounwind
  %2178 = call double @_Z3expd(double %extract4794.i) nounwind
  %2179 = call double @_Z3expd(double %extract4795.i) nounwind
  %2180 = call double @_Z3expd(double %extract4796.i) nounwind
  %2181 = call double @_Z3expd(double %extract4797.i) nounwind
  %2182 = call double @_Z3expd(double %extract4798.i) nounwind
  %2183 = call double @_Z3expd(double %extract4799.i) nounwind
  %2184 = call double @_Z3expd(double %extract4800.i) nounwind
  %2185 = call double @_Z3expd(double %extract4801.i) nounwind
  %2186 = call double @_Z3expd(double %extract4802.i) nounwind
  %2187 = call double @_Z3expd(double %extract4803.i) nounwind
  %2188 = call double @_Z3expd(double %extract4804.i) nounwind
  %temp.vect4805.i = insertelement <16 x double> undef, double %2173, i32 0
  %temp.vect4806.i = insertelement <16 x double> %temp.vect4805.i, double %2174, i32 1
  %temp.vect4807.i = insertelement <16 x double> %temp.vect4806.i, double %2175, i32 2
  %temp.vect4808.i = insertelement <16 x double> %temp.vect4807.i, double %2176, i32 3
  %temp.vect4809.i = insertelement <16 x double> %temp.vect4808.i, double %2177, i32 4
  %temp.vect4810.i = insertelement <16 x double> %temp.vect4809.i, double %2178, i32 5
  %temp.vect4811.i = insertelement <16 x double> %temp.vect4810.i, double %2179, i32 6
  %temp.vect4812.i = insertelement <16 x double> %temp.vect4811.i, double %2180, i32 7
  %temp.vect4813.i = insertelement <16 x double> %temp.vect4812.i, double %2181, i32 8
  %temp.vect4814.i = insertelement <16 x double> %temp.vect4813.i, double %2182, i32 9
  %temp.vect4815.i = insertelement <16 x double> %temp.vect4814.i, double %2183, i32 10
  %temp.vect4816.i = insertelement <16 x double> %temp.vect4815.i, double %2184, i32 11
  %temp.vect4817.i = insertelement <16 x double> %temp.vect4816.i, double %2185, i32 12
  %temp.vect4818.i = insertelement <16 x double> %temp.vect4817.i, double %2186, i32 13
  %temp.vect4819.i = insertelement <16 x double> %temp.vect4818.i, double %2187, i32 14
  %temp.vect4820.i = insertelement <16 x double> %temp.vect4819.i, double %2188, i32 15
  %2189 = fmul <16 x double> %temp.vect4820.i, <double 7.500000e+12, double 7.500000e+12, double 7.500000e+12, double 7.500000e+12, double 7.500000e+12, double 7.500000e+12, double 7.500000e+12, double 7.500000e+12, double 7.500000e+12, double 7.500000e+12, double 7.500000e+12, double 7.500000e+12, double 7.500000e+12, double 7.500000e+12, double 7.500000e+12, double 7.500000e+12>
  %2190 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2191 = load i64* %2190, align 8
  %2192 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2193 = load i64* %2192, align 8
  %2194 = add i64 %2191, %2193
  %extract4823.i = add i64 %2194, 14376960
  %2195 = getelementptr inbounds double addrspace(1)* %4, i64 %extract4823.i
  %ptrTypeCast4839.i = bitcast double addrspace(1)* %2195 to <16 x double> addrspace(1)*
  store <16 x double> %2189, <16 x double> addrspace(1)* %ptrTypeCast4839.i, align 8
  %2196 = fmul <16 x double> %temp.vect4820.i, <double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13>
  %2197 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2198 = load i64* %2197, align 8
  %2199 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2200 = load i64* %2199, align 8
  %2201 = add i64 %2198, %2200
  %extract4842.i = add i64 %2201, 16699392
  %2202 = getelementptr inbounds double addrspace(1)* %4, i64 %extract4842.i
  %ptrTypeCast4858.i = bitcast double addrspace(1)* %2202 to <16 x double> addrspace(1)*
  store <16 x double> %2196, <16 x double> addrspace(1)* %ptrTypeCast4858.i, align 8
  %2203 = fmul <16 x double> %temp.vect4820.i, <double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13>
  %2204 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2205 = load i64* %2204, align 8
  %2206 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2207 = load i64* %2206, align 8
  %2208 = add i64 %2205, %2207
  %extract4861.i = add i64 %2208, 20459520
  %2209 = getelementptr inbounds double addrspace(1)* %4, i64 %extract4861.i
  %ptrTypeCast4877.i = bitcast double addrspace(1)* %2209 to <16 x double> addrspace(1)*
  store <16 x double> %2203, <16 x double> addrspace(1)* %ptrTypeCast4877.i, align 8
  %2210 = fmul <16 x double> %temp.vect97.i, <double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01, double 2.700000e-01>
  %2211 = fadd <16 x double> %2210, <double 0x403D6F9F63073655, double 0x403D6F9F63073655, double 0x403D6F9F63073655, double 0x403D6F9F63073655, double 0x403D6F9F63073655, double 0x403D6F9F63073655, double 0x403D6F9F63073655, double 0x403D6F9F63073655, double 0x403D6F9F63073655, double 0x403D6F9F63073655, double 0x403D6F9F63073655, double 0x403D6F9F63073655, double 0x403D6F9F63073655, double 0x403D6F9F63073655, double 0x403D6F9F63073655, double 0x403D6F9F63073655>
  %2212 = fmul <16 x double> %41, <double 0x40619CD24399B2C4, double 0x40619CD24399B2C4, double 0x40619CD24399B2C4, double 0x40619CD24399B2C4, double 0x40619CD24399B2C4, double 0x40619CD24399B2C4, double 0x40619CD24399B2C4, double 0x40619CD24399B2C4, double 0x40619CD24399B2C4, double 0x40619CD24399B2C4, double 0x40619CD24399B2C4, double 0x40619CD24399B2C4, double 0x40619CD24399B2C4, double 0x40619CD24399B2C4, double 0x40619CD24399B2C4, double 0x40619CD24399B2C4>
  %2213 = fsub <16 x double> %2211, %2212
  %extract4878.i = extractelement <16 x double> %2213, i32 0
  %extract4879.i = extractelement <16 x double> %2213, i32 1
  %extract4880.i = extractelement <16 x double> %2213, i32 2
  %extract4881.i = extractelement <16 x double> %2213, i32 3
  %extract4882.i = extractelement <16 x double> %2213, i32 4
  %extract4883.i = extractelement <16 x double> %2213, i32 5
  %extract4884.i = extractelement <16 x double> %2213, i32 6
  %extract4885.i = extractelement <16 x double> %2213, i32 7
  %extract4886.i = extractelement <16 x double> %2213, i32 8
  %extract4887.i = extractelement <16 x double> %2213, i32 9
  %extract4888.i = extractelement <16 x double> %2213, i32 10
  %extract4889.i = extractelement <16 x double> %2213, i32 11
  %extract4890.i = extractelement <16 x double> %2213, i32 12
  %extract4891.i = extractelement <16 x double> %2213, i32 13
  %extract4892.i = extractelement <16 x double> %2213, i32 14
  %extract4893.i = extractelement <16 x double> %2213, i32 15
  %2214 = call double @_Z3expd(double %extract4878.i) nounwind
  %2215 = call double @_Z3expd(double %extract4879.i) nounwind
  %2216 = call double @_Z3expd(double %extract4880.i) nounwind
  %2217 = call double @_Z3expd(double %extract4881.i) nounwind
  %2218 = call double @_Z3expd(double %extract4882.i) nounwind
  %2219 = call double @_Z3expd(double %extract4883.i) nounwind
  %2220 = call double @_Z3expd(double %extract4884.i) nounwind
  %2221 = call double @_Z3expd(double %extract4885.i) nounwind
  %2222 = call double @_Z3expd(double %extract4886.i) nounwind
  %2223 = call double @_Z3expd(double %extract4887.i) nounwind
  %2224 = call double @_Z3expd(double %extract4888.i) nounwind
  %2225 = call double @_Z3expd(double %extract4889.i) nounwind
  %2226 = call double @_Z3expd(double %extract4890.i) nounwind
  %2227 = call double @_Z3expd(double %extract4891.i) nounwind
  %2228 = call double @_Z3expd(double %extract4892.i) nounwind
  %2229 = call double @_Z3expd(double %extract4893.i) nounwind
  %temp.vect4913.i = insertelement <16 x double> undef, double %2214, i32 0
  %temp.vect4914.i = insertelement <16 x double> %temp.vect4913.i, double %2215, i32 1
  %temp.vect4915.i = insertelement <16 x double> %temp.vect4914.i, double %2216, i32 2
  %temp.vect4916.i = insertelement <16 x double> %temp.vect4915.i, double %2217, i32 3
  %temp.vect4917.i = insertelement <16 x double> %temp.vect4916.i, double %2218, i32 4
  %temp.vect4918.i = insertelement <16 x double> %temp.vect4917.i, double %2219, i32 5
  %temp.vect4919.i = insertelement <16 x double> %temp.vect4918.i, double %2220, i32 6
  %temp.vect4920.i = insertelement <16 x double> %temp.vect4919.i, double %2221, i32 7
  %temp.vect4921.i = insertelement <16 x double> %temp.vect4920.i, double %2222, i32 8
  %temp.vect4922.i = insertelement <16 x double> %temp.vect4921.i, double %2223, i32 9
  %temp.vect4923.i = insertelement <16 x double> %temp.vect4922.i, double %2224, i32 10
  %temp.vect4924.i = insertelement <16 x double> %temp.vect4923.i, double %2225, i32 11
  %temp.vect4925.i = insertelement <16 x double> %temp.vect4924.i, double %2226, i32 12
  %temp.vect4926.i = insertelement <16 x double> %temp.vect4925.i, double %2227, i32 13
  %temp.vect4927.i = insertelement <16 x double> %temp.vect4926.i, double %2228, i32 14
  %temp.vect4928.i = insertelement <16 x double> %temp.vect4927.i, double %2229, i32 15
  %2230 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2231 = load i64* %2230, align 8
  %2232 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2233 = load i64* %2232, align 8
  %2234 = add i64 %2231, %2233
  %extract4896.i = add i64 %2234, 14487552
  %2235 = getelementptr inbounds double addrspace(1)* %4, i64 %extract4896.i
  %ptrTypeCast4912.i = bitcast double addrspace(1)* %2235 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect4928.i, <16 x double> addrspace(1)* %ptrTypeCast4912.i, align 8
  %2236 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2237 = load i64* %2236, align 8
  %2238 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2239 = load i64* %2238, align 8
  %2240 = add i64 %2237, %2239
  %extract4931.i = add i64 %2240, 14598144
  %2241 = getelementptr inbounds double addrspace(1)* %4, i64 %extract4931.i
  %ptrTypeCast4947.i = bitcast double addrspace(1)* %2241 to <16 x double> addrspace(1)*
  store <16 x double> <double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13, double 3.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast4947.i, align 8
  %2242 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2243 = load i64* %2242, align 8
  %2244 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2245 = load i64* %2244, align 8
  %2246 = add i64 %2243, %2245
  %extract4950.i = add i64 %2246, 14708736
  %2247 = getelementptr inbounds double addrspace(1)* %4, i64 %extract4950.i
  %ptrTypeCast4966.i = bitcast double addrspace(1)* %2247 to <16 x double> addrspace(1)*
  store <16 x double> <double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast4966.i, align 8
  %2248 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2249 = load i64* %2248, align 8
  %2250 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2251 = load i64* %2250, align 8
  %2252 = add i64 %2249, %2251
  %extract4969.i = add i64 %2252, 14819328
  %2253 = getelementptr inbounds double addrspace(1)* %4, i64 %extract4969.i
  %ptrTypeCast4985.i = bitcast double addrspace(1)* %2253 to <16 x double> addrspace(1)*
  store <16 x double> <double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13>, <16 x double> addrspace(1)* %ptrTypeCast4985.i, align 8
  %2254 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2255 = load i64* %2254, align 8
  %2256 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2257 = load i64* %2256, align 8
  %2258 = add i64 %2255, %2257
  %extract4988.i = add i64 %2258, 14929920
  %2259 = getelementptr inbounds double addrspace(1)* %4, i64 %extract4988.i
  %ptrTypeCast5004.i = bitcast double addrspace(1)* %2259 to <16 x double> addrspace(1)*
  store <16 x double> <double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13, double 4.800000e+13>, <16 x double> addrspace(1)* %ptrTypeCast5004.i, align 8
  %2260 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2261 = load i64* %2260, align 8
  %2262 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2263 = load i64* %2262, align 8
  %2264 = add i64 %2261, %2263
  %extract5007.i = add i64 %2264, 15040512
  %2265 = getelementptr inbounds double addrspace(1)* %4, i64 %extract5007.i
  %ptrTypeCast5023.i = bitcast double addrspace(1)* %2265 to <16 x double> addrspace(1)*
  store <16 x double> <double 3.011000e+13, double 3.011000e+13, double 3.011000e+13, double 3.011000e+13, double 3.011000e+13, double 3.011000e+13, double 3.011000e+13, double 3.011000e+13, double 3.011000e+13, double 3.011000e+13, double 3.011000e+13, double 3.011000e+13, double 3.011000e+13, double 3.011000e+13, double 3.011000e+13, double 3.011000e+13>, <16 x double> addrspace(1)* %ptrTypeCast5023.i, align 8
  %2266 = fmul <16 x double> %temp.vect97.i, <double 1.610000e+00, double 1.610000e+00, double 1.610000e+00, double 1.610000e+00, double 1.610000e+00, double 1.610000e+00, double 1.610000e+00, double 1.610000e+00, double 1.610000e+00, double 1.610000e+00, double 1.610000e+00, double 1.610000e+00, double 1.610000e+00, double 1.610000e+00, double 1.610000e+00, double 1.610000e+00>
  %2267 = fadd <16 x double> %2266, <double 0x402C3763652A2644, double 0x402C3763652A2644, double 0x402C3763652A2644, double 0x402C3763652A2644, double 0x402C3763652A2644, double 0x402C3763652A2644, double 0x402C3763652A2644, double 0x402C3763652A2644, double 0x402C3763652A2644, double 0x402C3763652A2644, double 0x402C3763652A2644, double 0x402C3763652A2644, double 0x402C3763652A2644, double 0x402C3763652A2644, double 0x402C3763652A2644, double 0x402C3763652A2644>
  %2268 = fmul <16 x double> %41, <double 0x40681DDD590C0AD0, double 0x40681DDD590C0AD0, double 0x40681DDD590C0AD0, double 0x40681DDD590C0AD0, double 0x40681DDD590C0AD0, double 0x40681DDD590C0AD0, double 0x40681DDD590C0AD0, double 0x40681DDD590C0AD0, double 0x40681DDD590C0AD0, double 0x40681DDD590C0AD0, double 0x40681DDD590C0AD0, double 0x40681DDD590C0AD0, double 0x40681DDD590C0AD0, double 0x40681DDD590C0AD0, double 0x40681DDD590C0AD0, double 0x40681DDD590C0AD0>
  %2269 = fadd <16 x double> %2267, %2268
  %extract5024.i = extractelement <16 x double> %2269, i32 0
  %extract5025.i = extractelement <16 x double> %2269, i32 1
  %extract5026.i = extractelement <16 x double> %2269, i32 2
  %extract5027.i = extractelement <16 x double> %2269, i32 3
  %extract5028.i = extractelement <16 x double> %2269, i32 4
  %extract5029.i = extractelement <16 x double> %2269, i32 5
  %extract5030.i = extractelement <16 x double> %2269, i32 6
  %extract5031.i = extractelement <16 x double> %2269, i32 7
  %extract5032.i = extractelement <16 x double> %2269, i32 8
  %extract5033.i = extractelement <16 x double> %2269, i32 9
  %extract5034.i = extractelement <16 x double> %2269, i32 10
  %extract5035.i = extractelement <16 x double> %2269, i32 11
  %extract5036.i = extractelement <16 x double> %2269, i32 12
  %extract5037.i = extractelement <16 x double> %2269, i32 13
  %extract5038.i = extractelement <16 x double> %2269, i32 14
  %extract5039.i = extractelement <16 x double> %2269, i32 15
  %2270 = call double @_Z3expd(double %extract5024.i) nounwind
  %2271 = call double @_Z3expd(double %extract5025.i) nounwind
  %2272 = call double @_Z3expd(double %extract5026.i) nounwind
  %2273 = call double @_Z3expd(double %extract5027.i) nounwind
  %2274 = call double @_Z3expd(double %extract5028.i) nounwind
  %2275 = call double @_Z3expd(double %extract5029.i) nounwind
  %2276 = call double @_Z3expd(double %extract5030.i) nounwind
  %2277 = call double @_Z3expd(double %extract5031.i) nounwind
  %2278 = call double @_Z3expd(double %extract5032.i) nounwind
  %2279 = call double @_Z3expd(double %extract5033.i) nounwind
  %2280 = call double @_Z3expd(double %extract5034.i) nounwind
  %2281 = call double @_Z3expd(double %extract5035.i) nounwind
  %2282 = call double @_Z3expd(double %extract5036.i) nounwind
  %2283 = call double @_Z3expd(double %extract5037.i) nounwind
  %2284 = call double @_Z3expd(double %extract5038.i) nounwind
  %2285 = call double @_Z3expd(double %extract5039.i) nounwind
  %temp.vect5059.i = insertelement <16 x double> undef, double %2270, i32 0
  %temp.vect5060.i = insertelement <16 x double> %temp.vect5059.i, double %2271, i32 1
  %temp.vect5061.i = insertelement <16 x double> %temp.vect5060.i, double %2272, i32 2
  %temp.vect5062.i = insertelement <16 x double> %temp.vect5061.i, double %2273, i32 3
  %temp.vect5063.i = insertelement <16 x double> %temp.vect5062.i, double %2274, i32 4
  %temp.vect5064.i = insertelement <16 x double> %temp.vect5063.i, double %2275, i32 5
  %temp.vect5065.i = insertelement <16 x double> %temp.vect5064.i, double %2276, i32 6
  %temp.vect5066.i = insertelement <16 x double> %temp.vect5065.i, double %2277, i32 7
  %temp.vect5067.i = insertelement <16 x double> %temp.vect5066.i, double %2278, i32 8
  %temp.vect5068.i = insertelement <16 x double> %temp.vect5067.i, double %2279, i32 9
  %temp.vect5069.i = insertelement <16 x double> %temp.vect5068.i, double %2280, i32 10
  %temp.vect5070.i = insertelement <16 x double> %temp.vect5069.i, double %2281, i32 11
  %temp.vect5071.i = insertelement <16 x double> %temp.vect5070.i, double %2282, i32 12
  %temp.vect5072.i = insertelement <16 x double> %temp.vect5071.i, double %2283, i32 13
  %temp.vect5073.i = insertelement <16 x double> %temp.vect5072.i, double %2284, i32 14
  %temp.vect5074.i = insertelement <16 x double> %temp.vect5073.i, double %2285, i32 15
  %2286 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2287 = load i64* %2286, align 8
  %2288 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2289 = load i64* %2288, align 8
  %2290 = add i64 %2287, %2289
  %extract5042.i = add i64 %2290, 15151104
  %2291 = getelementptr inbounds double addrspace(1)* %4, i64 %extract5042.i
  %ptrTypeCast5058.i = bitcast double addrspace(1)* %2291 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect5074.i, <16 x double> addrspace(1)* %ptrTypeCast5058.i, align 8
  %2292 = fmul <16 x double> %temp.vect97.i, <double 2.900000e-01, double 2.900000e-01, double 2.900000e-01, double 2.900000e-01, double 2.900000e-01, double 2.900000e-01, double 2.900000e-01, double 2.900000e-01, double 2.900000e-01, double 2.900000e-01, double 2.900000e-01, double 2.900000e-01, double 2.900000e-01, double 2.900000e-01, double 2.900000e-01, double 2.900000e-01>
  %2293 = fadd <16 x double> %2292, <double 0x403A6D5309924FF9, double 0x403A6D5309924FF9, double 0x403A6D5309924FF9, double 0x403A6D5309924FF9, double 0x403A6D5309924FF9, double 0x403A6D5309924FF9, double 0x403A6D5309924FF9, double 0x403A6D5309924FF9, double 0x403A6D5309924FF9, double 0x403A6D5309924FF9, double 0x403A6D5309924FF9, double 0x403A6D5309924FF9, double 0x403A6D5309924FF9, double 0x403A6D5309924FF9, double 0x403A6D5309924FF9, double 0x403A6D5309924FF9>
  %2294 = fmul <16 x double> %41, <double 0x4016243B87C07E35, double 0x4016243B87C07E35, double 0x4016243B87C07E35, double 0x4016243B87C07E35, double 0x4016243B87C07E35, double 0x4016243B87C07E35, double 0x4016243B87C07E35, double 0x4016243B87C07E35, double 0x4016243B87C07E35, double 0x4016243B87C07E35, double 0x4016243B87C07E35, double 0x4016243B87C07E35, double 0x4016243B87C07E35, double 0x4016243B87C07E35, double 0x4016243B87C07E35, double 0x4016243B87C07E35>
  %2295 = fsub <16 x double> %2293, %2294
  %extract5075.i = extractelement <16 x double> %2295, i32 0
  %extract5076.i = extractelement <16 x double> %2295, i32 1
  %extract5077.i = extractelement <16 x double> %2295, i32 2
  %extract5078.i = extractelement <16 x double> %2295, i32 3
  %extract5079.i = extractelement <16 x double> %2295, i32 4
  %extract5080.i = extractelement <16 x double> %2295, i32 5
  %extract5081.i = extractelement <16 x double> %2295, i32 6
  %extract5082.i = extractelement <16 x double> %2295, i32 7
  %extract5083.i = extractelement <16 x double> %2295, i32 8
  %extract5084.i = extractelement <16 x double> %2295, i32 9
  %extract5085.i = extractelement <16 x double> %2295, i32 10
  %extract5086.i = extractelement <16 x double> %2295, i32 11
  %extract5087.i = extractelement <16 x double> %2295, i32 12
  %extract5088.i = extractelement <16 x double> %2295, i32 13
  %extract5089.i = extractelement <16 x double> %2295, i32 14
  %extract5090.i = extractelement <16 x double> %2295, i32 15
  %2296 = call double @_Z3expd(double %extract5075.i) nounwind
  %2297 = call double @_Z3expd(double %extract5076.i) nounwind
  %2298 = call double @_Z3expd(double %extract5077.i) nounwind
  %2299 = call double @_Z3expd(double %extract5078.i) nounwind
  %2300 = call double @_Z3expd(double %extract5079.i) nounwind
  %2301 = call double @_Z3expd(double %extract5080.i) nounwind
  %2302 = call double @_Z3expd(double %extract5081.i) nounwind
  %2303 = call double @_Z3expd(double %extract5082.i) nounwind
  %2304 = call double @_Z3expd(double %extract5083.i) nounwind
  %2305 = call double @_Z3expd(double %extract5084.i) nounwind
  %2306 = call double @_Z3expd(double %extract5085.i) nounwind
  %2307 = call double @_Z3expd(double %extract5086.i) nounwind
  %2308 = call double @_Z3expd(double %extract5087.i) nounwind
  %2309 = call double @_Z3expd(double %extract5088.i) nounwind
  %2310 = call double @_Z3expd(double %extract5089.i) nounwind
  %2311 = call double @_Z3expd(double %extract5090.i) nounwind
  %temp.vect5110.i = insertelement <16 x double> undef, double %2296, i32 0
  %temp.vect5111.i = insertelement <16 x double> %temp.vect5110.i, double %2297, i32 1
  %temp.vect5112.i = insertelement <16 x double> %temp.vect5111.i, double %2298, i32 2
  %temp.vect5113.i = insertelement <16 x double> %temp.vect5112.i, double %2299, i32 3
  %temp.vect5114.i = insertelement <16 x double> %temp.vect5113.i, double %2300, i32 4
  %temp.vect5115.i = insertelement <16 x double> %temp.vect5114.i, double %2301, i32 5
  %temp.vect5116.i = insertelement <16 x double> %temp.vect5115.i, double %2302, i32 6
  %temp.vect5117.i = insertelement <16 x double> %temp.vect5116.i, double %2303, i32 7
  %temp.vect5118.i = insertelement <16 x double> %temp.vect5117.i, double %2304, i32 8
  %temp.vect5119.i = insertelement <16 x double> %temp.vect5118.i, double %2305, i32 9
  %temp.vect5120.i = insertelement <16 x double> %temp.vect5119.i, double %2306, i32 10
  %temp.vect5121.i = insertelement <16 x double> %temp.vect5120.i, double %2307, i32 11
  %temp.vect5122.i = insertelement <16 x double> %temp.vect5121.i, double %2308, i32 12
  %temp.vect5123.i = insertelement <16 x double> %temp.vect5122.i, double %2309, i32 13
  %temp.vect5124.i = insertelement <16 x double> %temp.vect5123.i, double %2310, i32 14
  %temp.vect5125.i = insertelement <16 x double> %temp.vect5124.i, double %2311, i32 15
  %2312 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2313 = load i64* %2312, align 8
  %2314 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2315 = load i64* %2314, align 8
  %2316 = add i64 %2313, %2315
  %extract5093.i = add i64 %2316, 15261696
  %2317 = getelementptr inbounds double addrspace(1)* %4, i64 %extract5093.i
  %ptrTypeCast5109.i = bitcast double addrspace(1)* %2317 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect5125.i, <16 x double> addrspace(1)* %ptrTypeCast5109.i, align 8
  %2318 = fmul <16 x double> %temp.vect97.i, <double 1.390000e+00, double 1.390000e+00, double 1.390000e+00, double 1.390000e+00, double 1.390000e+00, double 1.390000e+00, double 1.390000e+00, double 1.390000e+00, double 1.390000e+00, double 1.390000e+00, double 1.390000e+00, double 1.390000e+00, double 1.390000e+00, double 1.390000e+00, double 1.390000e+00, double 1.390000e+00>
  %2319 = fsub <16 x double> <double 0x40432F078BE57BF0, double 0x40432F078BE57BF0, double 0x40432F078BE57BF0, double 0x40432F078BE57BF0, double 0x40432F078BE57BF0, double 0x40432F078BE57BF0, double 0x40432F078BE57BF0, double 0x40432F078BE57BF0, double 0x40432F078BE57BF0, double 0x40432F078BE57BF0, double 0x40432F078BE57BF0, double 0x40432F078BE57BF0, double 0x40432F078BE57BF0, double 0x40432F078BE57BF0, double 0x40432F078BE57BF0, double 0x40432F078BE57BF0>, %2318
  %2320 = fmul <16 x double> %41, <double 0x407FC3FB395C4220, double 0x407FC3FB395C4220, double 0x407FC3FB395C4220, double 0x407FC3FB395C4220, double 0x407FC3FB395C4220, double 0x407FC3FB395C4220, double 0x407FC3FB395C4220, double 0x407FC3FB395C4220, double 0x407FC3FB395C4220, double 0x407FC3FB395C4220, double 0x407FC3FB395C4220, double 0x407FC3FB395C4220, double 0x407FC3FB395C4220, double 0x407FC3FB395C4220, double 0x407FC3FB395C4220, double 0x407FC3FB395C4220>
  %2321 = fsub <16 x double> %2319, %2320
  %extract5126.i = extractelement <16 x double> %2321, i32 0
  %extract5127.i = extractelement <16 x double> %2321, i32 1
  %extract5128.i = extractelement <16 x double> %2321, i32 2
  %extract5129.i = extractelement <16 x double> %2321, i32 3
  %extract5130.i = extractelement <16 x double> %2321, i32 4
  %extract5131.i = extractelement <16 x double> %2321, i32 5
  %extract5132.i = extractelement <16 x double> %2321, i32 6
  %extract5133.i = extractelement <16 x double> %2321, i32 7
  %extract5134.i = extractelement <16 x double> %2321, i32 8
  %extract5135.i = extractelement <16 x double> %2321, i32 9
  %extract5136.i = extractelement <16 x double> %2321, i32 10
  %extract5137.i = extractelement <16 x double> %2321, i32 11
  %extract5138.i = extractelement <16 x double> %2321, i32 12
  %extract5139.i = extractelement <16 x double> %2321, i32 13
  %extract5140.i = extractelement <16 x double> %2321, i32 14
  %extract5141.i = extractelement <16 x double> %2321, i32 15
  %2322 = call double @_Z3expd(double %extract5126.i) nounwind
  %2323 = call double @_Z3expd(double %extract5127.i) nounwind
  %2324 = call double @_Z3expd(double %extract5128.i) nounwind
  %2325 = call double @_Z3expd(double %extract5129.i) nounwind
  %2326 = call double @_Z3expd(double %extract5130.i) nounwind
  %2327 = call double @_Z3expd(double %extract5131.i) nounwind
  %2328 = call double @_Z3expd(double %extract5132.i) nounwind
  %2329 = call double @_Z3expd(double %extract5133.i) nounwind
  %2330 = call double @_Z3expd(double %extract5134.i) nounwind
  %2331 = call double @_Z3expd(double %extract5135.i) nounwind
  %2332 = call double @_Z3expd(double %extract5136.i) nounwind
  %2333 = call double @_Z3expd(double %extract5137.i) nounwind
  %2334 = call double @_Z3expd(double %extract5138.i) nounwind
  %2335 = call double @_Z3expd(double %extract5139.i) nounwind
  %2336 = call double @_Z3expd(double %extract5140.i) nounwind
  %2337 = call double @_Z3expd(double %extract5141.i) nounwind
  %temp.vect5161.i = insertelement <16 x double> undef, double %2322, i32 0
  %temp.vect5162.i = insertelement <16 x double> %temp.vect5161.i, double %2323, i32 1
  %temp.vect5163.i = insertelement <16 x double> %temp.vect5162.i, double %2324, i32 2
  %temp.vect5164.i = insertelement <16 x double> %temp.vect5163.i, double %2325, i32 3
  %temp.vect5165.i = insertelement <16 x double> %temp.vect5164.i, double %2326, i32 4
  %temp.vect5166.i = insertelement <16 x double> %temp.vect5165.i, double %2327, i32 5
  %temp.vect5167.i = insertelement <16 x double> %temp.vect5166.i, double %2328, i32 6
  %temp.vect5168.i = insertelement <16 x double> %temp.vect5167.i, double %2329, i32 7
  %temp.vect5169.i = insertelement <16 x double> %temp.vect5168.i, double %2330, i32 8
  %temp.vect5170.i = insertelement <16 x double> %temp.vect5169.i, double %2331, i32 9
  %temp.vect5171.i = insertelement <16 x double> %temp.vect5170.i, double %2332, i32 10
  %temp.vect5172.i = insertelement <16 x double> %temp.vect5171.i, double %2333, i32 11
  %temp.vect5173.i = insertelement <16 x double> %temp.vect5172.i, double %2334, i32 12
  %temp.vect5174.i = insertelement <16 x double> %temp.vect5173.i, double %2335, i32 13
  %temp.vect5175.i = insertelement <16 x double> %temp.vect5174.i, double %2336, i32 14
  %temp.vect5176.i = insertelement <16 x double> %temp.vect5175.i, double %2337, i32 15
  %2338 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2339 = load i64* %2338, align 8
  %2340 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2341 = load i64* %2340, align 8
  %2342 = add i64 %2339, %2341
  %extract5144.i = add i64 %2342, 15372288
  %2343 = getelementptr inbounds double addrspace(1)* %4, i64 %extract5144.i
  %ptrTypeCast5160.i = bitcast double addrspace(1)* %2343 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect5176.i, <16 x double> addrspace(1)* %ptrTypeCast5160.i, align 8
  %2344 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2345 = load i64* %2344, align 8
  %2346 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2347 = load i64* %2346, align 8
  %2348 = add i64 %2345, %2347
  %extract5179.i = add i64 %2348, 15482880
  %2349 = getelementptr inbounds double addrspace(1)* %4, i64 %extract5179.i
  %ptrTypeCast5195.i = bitcast double addrspace(1)* %2349 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13, double 1.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast5195.i, align 8
  %2350 = fmul <16 x double> %41, <double 0x4072BEAC94B380CB, double 0x4072BEAC94B380CB, double 0x4072BEAC94B380CB, double 0x4072BEAC94B380CB, double 0x4072BEAC94B380CB, double 0x4072BEAC94B380CB, double 0x4072BEAC94B380CB, double 0x4072BEAC94B380CB, double 0x4072BEAC94B380CB, double 0x4072BEAC94B380CB, double 0x4072BEAC94B380CB, double 0x4072BEAC94B380CB, double 0x4072BEAC94B380CB, double 0x4072BEAC94B380CB, double 0x4072BEAC94B380CB, double 0x4072BEAC94B380CB>
  %2351 = fadd <16 x double> %2350, <double 0x4037376AA9C205C9, double 0x4037376AA9C205C9, double 0x4037376AA9C205C9, double 0x4037376AA9C205C9, double 0x4037376AA9C205C9, double 0x4037376AA9C205C9, double 0x4037376AA9C205C9, double 0x4037376AA9C205C9, double 0x4037376AA9C205C9, double 0x4037376AA9C205C9, double 0x4037376AA9C205C9, double 0x4037376AA9C205C9, double 0x4037376AA9C205C9, double 0x4037376AA9C205C9, double 0x4037376AA9C205C9, double 0x4037376AA9C205C9>
  %extract5196.i = extractelement <16 x double> %2351, i32 0
  %extract5197.i = extractelement <16 x double> %2351, i32 1
  %extract5198.i = extractelement <16 x double> %2351, i32 2
  %extract5199.i = extractelement <16 x double> %2351, i32 3
  %extract5200.i = extractelement <16 x double> %2351, i32 4
  %extract5201.i = extractelement <16 x double> %2351, i32 5
  %extract5202.i = extractelement <16 x double> %2351, i32 6
  %extract5203.i = extractelement <16 x double> %2351, i32 7
  %extract5204.i = extractelement <16 x double> %2351, i32 8
  %extract5205.i = extractelement <16 x double> %2351, i32 9
  %extract5206.i = extractelement <16 x double> %2351, i32 10
  %extract5207.i = extractelement <16 x double> %2351, i32 11
  %extract5208.i = extractelement <16 x double> %2351, i32 12
  %extract5209.i = extractelement <16 x double> %2351, i32 13
  %extract5210.i = extractelement <16 x double> %2351, i32 14
  %extract5211.i = extractelement <16 x double> %2351, i32 15
  %2352 = call double @_Z3expd(double %extract5196.i) nounwind
  %2353 = call double @_Z3expd(double %extract5197.i) nounwind
  %2354 = call double @_Z3expd(double %extract5198.i) nounwind
  %2355 = call double @_Z3expd(double %extract5199.i) nounwind
  %2356 = call double @_Z3expd(double %extract5200.i) nounwind
  %2357 = call double @_Z3expd(double %extract5201.i) nounwind
  %2358 = call double @_Z3expd(double %extract5202.i) nounwind
  %2359 = call double @_Z3expd(double %extract5203.i) nounwind
  %2360 = call double @_Z3expd(double %extract5204.i) nounwind
  %2361 = call double @_Z3expd(double %extract5205.i) nounwind
  %2362 = call double @_Z3expd(double %extract5206.i) nounwind
  %2363 = call double @_Z3expd(double %extract5207.i) nounwind
  %2364 = call double @_Z3expd(double %extract5208.i) nounwind
  %2365 = call double @_Z3expd(double %extract5209.i) nounwind
  %2366 = call double @_Z3expd(double %extract5210.i) nounwind
  %2367 = call double @_Z3expd(double %extract5211.i) nounwind
  %temp.vect5231.i = insertelement <16 x double> undef, double %2352, i32 0
  %temp.vect5232.i = insertelement <16 x double> %temp.vect5231.i, double %2353, i32 1
  %temp.vect5233.i = insertelement <16 x double> %temp.vect5232.i, double %2354, i32 2
  %temp.vect5234.i = insertelement <16 x double> %temp.vect5233.i, double %2355, i32 3
  %temp.vect5235.i = insertelement <16 x double> %temp.vect5234.i, double %2356, i32 4
  %temp.vect5236.i = insertelement <16 x double> %temp.vect5235.i, double %2357, i32 5
  %temp.vect5237.i = insertelement <16 x double> %temp.vect5236.i, double %2358, i32 6
  %temp.vect5238.i = insertelement <16 x double> %temp.vect5237.i, double %2359, i32 7
  %temp.vect5239.i = insertelement <16 x double> %temp.vect5238.i, double %2360, i32 8
  %temp.vect5240.i = insertelement <16 x double> %temp.vect5239.i, double %2361, i32 9
  %temp.vect5241.i = insertelement <16 x double> %temp.vect5240.i, double %2362, i32 10
  %temp.vect5242.i = insertelement <16 x double> %temp.vect5241.i, double %2363, i32 11
  %temp.vect5243.i = insertelement <16 x double> %temp.vect5242.i, double %2364, i32 12
  %temp.vect5244.i = insertelement <16 x double> %temp.vect5243.i, double %2365, i32 13
  %temp.vect5245.i = insertelement <16 x double> %temp.vect5244.i, double %2366, i32 14
  %temp.vect5246.i = insertelement <16 x double> %temp.vect5245.i, double %2367, i32 15
  %2368 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2369 = load i64* %2368, align 8
  %2370 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2371 = load i64* %2370, align 8
  %2372 = add i64 %2369, %2371
  %extract5214.i = add i64 %2372, 15593472
  %2373 = getelementptr inbounds double addrspace(1)* %4, i64 %extract5214.i
  %ptrTypeCast5230.i = bitcast double addrspace(1)* %2373 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect5246.i, <16 x double> addrspace(1)* %ptrTypeCast5230.i, align 8
  %2374 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2375 = load i64* %2374, align 8
  %2376 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2377 = load i64* %2376, align 8
  %2378 = add i64 %2375, %2377
  %extract5249.i = add i64 %2378, 15704064
  %2379 = getelementptr inbounds double addrspace(1)* %4, i64 %extract5249.i
  %ptrTypeCast5265.i = bitcast double addrspace(1)* %2379 to <16 x double> addrspace(1)*
  store <16 x double> <double 9.033000e+13, double 9.033000e+13, double 9.033000e+13, double 9.033000e+13, double 9.033000e+13, double 9.033000e+13, double 9.033000e+13, double 9.033000e+13, double 9.033000e+13, double 9.033000e+13, double 9.033000e+13, double 9.033000e+13, double 9.033000e+13, double 9.033000e+13, double 9.033000e+13, double 9.033000e+13>, <16 x double> addrspace(1)* %ptrTypeCast5265.i, align 8
  %2380 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2381 = load i64* %2380, align 8
  %2382 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2383 = load i64* %2382, align 8
  %2384 = add i64 %2381, %2383
  %extract5268.i = add i64 %2384, 15814656
  %2385 = getelementptr inbounds double addrspace(1)* %4, i64 %extract5268.i
  %ptrTypeCast5284.i = bitcast double addrspace(1)* %2385 to <16 x double> addrspace(1)*
  store <16 x double> <double 3.920000e+11, double 3.920000e+11, double 3.920000e+11, double 3.920000e+11, double 3.920000e+11, double 3.920000e+11, double 3.920000e+11, double 3.920000e+11, double 3.920000e+11, double 3.920000e+11, double 3.920000e+11, double 3.920000e+11, double 3.920000e+11, double 3.920000e+11, double 3.920000e+11, double 3.920000e+11>, <16 x double> addrspace(1)* %ptrTypeCast5284.i, align 8
  %2386 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2387 = load i64* %2386, align 8
  %2388 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2389 = load i64* %2388, align 8
  %2390 = add i64 %2387, %2389
  %extract5287.i = add i64 %2390, 15925248
  %2391 = getelementptr inbounds double addrspace(1)* %4, i64 %extract5287.i
  %ptrTypeCast5303.i = bitcast double addrspace(1)* %2391 to <16 x double> addrspace(1)*
  store <16 x double> <double 2.500000e+13, double 2.500000e+13, double 2.500000e+13, double 2.500000e+13, double 2.500000e+13, double 2.500000e+13, double 2.500000e+13, double 2.500000e+13, double 2.500000e+13, double 2.500000e+13, double 2.500000e+13, double 2.500000e+13, double 2.500000e+13, double 2.500000e+13, double 2.500000e+13, double 2.500000e+13>, <16 x double> addrspace(1)* %ptrTypeCast5303.i, align 8
  %2392 = fmul <16 x double> %temp.vect97.i, <double 2.830000e+00, double 2.830000e+00, double 2.830000e+00, double 2.830000e+00, double 2.830000e+00, double 2.830000e+00, double 2.830000e+00, double 2.830000e+00, double 2.830000e+00, double 2.830000e+00, double 2.830000e+00, double 2.830000e+00, double 2.830000e+00, double 2.830000e+00, double 2.830000e+00, double 2.830000e+00>
  %2393 = fsub <16 x double> <double 0x404BD570E113ABAE, double 0x404BD570E113ABAE, double 0x404BD570E113ABAE, double 0x404BD570E113ABAE, double 0x404BD570E113ABAE, double 0x404BD570E113ABAE, double 0x404BD570E113ABAE, double 0x404BD570E113ABAE, double 0x404BD570E113ABAE, double 0x404BD570E113ABAE, double 0x404BD570E113ABAE, double 0x404BD570E113ABAE, double 0x404BD570E113ABAE, double 0x404BD570E113ABAE, double 0x404BD570E113ABAE, double 0x404BD570E113ABAE>, %2392
  %2394 = fmul <16 x double> %41, <double 0x40C24C71A75CD0BB, double 0x40C24C71A75CD0BB, double 0x40C24C71A75CD0BB, double 0x40C24C71A75CD0BB, double 0x40C24C71A75CD0BB, double 0x40C24C71A75CD0BB, double 0x40C24C71A75CD0BB, double 0x40C24C71A75CD0BB, double 0x40C24C71A75CD0BB, double 0x40C24C71A75CD0BB, double 0x40C24C71A75CD0BB, double 0x40C24C71A75CD0BB, double 0x40C24C71A75CD0BB, double 0x40C24C71A75CD0BB, double 0x40C24C71A75CD0BB, double 0x40C24C71A75CD0BB>
  %2395 = fsub <16 x double> %2393, %2394
  %extract5304.i = extractelement <16 x double> %2395, i32 0
  %extract5305.i = extractelement <16 x double> %2395, i32 1
  %extract5306.i = extractelement <16 x double> %2395, i32 2
  %extract5307.i = extractelement <16 x double> %2395, i32 3
  %extract5308.i = extractelement <16 x double> %2395, i32 4
  %extract5309.i = extractelement <16 x double> %2395, i32 5
  %extract5310.i = extractelement <16 x double> %2395, i32 6
  %extract5311.i = extractelement <16 x double> %2395, i32 7
  %extract5312.i = extractelement <16 x double> %2395, i32 8
  %extract5313.i = extractelement <16 x double> %2395, i32 9
  %extract5314.i = extractelement <16 x double> %2395, i32 10
  %extract5315.i = extractelement <16 x double> %2395, i32 11
  %extract5316.i = extractelement <16 x double> %2395, i32 12
  %extract5317.i = extractelement <16 x double> %2395, i32 13
  %extract5318.i = extractelement <16 x double> %2395, i32 14
  %extract5319.i = extractelement <16 x double> %2395, i32 15
  %2396 = call double @_Z3expd(double %extract5304.i) nounwind
  %2397 = call double @_Z3expd(double %extract5305.i) nounwind
  %2398 = call double @_Z3expd(double %extract5306.i) nounwind
  %2399 = call double @_Z3expd(double %extract5307.i) nounwind
  %2400 = call double @_Z3expd(double %extract5308.i) nounwind
  %2401 = call double @_Z3expd(double %extract5309.i) nounwind
  %2402 = call double @_Z3expd(double %extract5310.i) nounwind
  %2403 = call double @_Z3expd(double %extract5311.i) nounwind
  %2404 = call double @_Z3expd(double %extract5312.i) nounwind
  %2405 = call double @_Z3expd(double %extract5313.i) nounwind
  %2406 = call double @_Z3expd(double %extract5314.i) nounwind
  %2407 = call double @_Z3expd(double %extract5315.i) nounwind
  %2408 = call double @_Z3expd(double %extract5316.i) nounwind
  %2409 = call double @_Z3expd(double %extract5317.i) nounwind
  %2410 = call double @_Z3expd(double %extract5318.i) nounwind
  %2411 = call double @_Z3expd(double %extract5319.i) nounwind
  %temp.vect5339.i = insertelement <16 x double> undef, double %2396, i32 0
  %temp.vect5340.i = insertelement <16 x double> %temp.vect5339.i, double %2397, i32 1
  %temp.vect5341.i = insertelement <16 x double> %temp.vect5340.i, double %2398, i32 2
  %temp.vect5342.i = insertelement <16 x double> %temp.vect5341.i, double %2399, i32 3
  %temp.vect5343.i = insertelement <16 x double> %temp.vect5342.i, double %2400, i32 4
  %temp.vect5344.i = insertelement <16 x double> %temp.vect5343.i, double %2401, i32 5
  %temp.vect5345.i = insertelement <16 x double> %temp.vect5344.i, double %2402, i32 6
  %temp.vect5346.i = insertelement <16 x double> %temp.vect5345.i, double %2403, i32 7
  %temp.vect5347.i = insertelement <16 x double> %temp.vect5346.i, double %2404, i32 8
  %temp.vect5348.i = insertelement <16 x double> %temp.vect5347.i, double %2405, i32 9
  %temp.vect5349.i = insertelement <16 x double> %temp.vect5348.i, double %2406, i32 10
  %temp.vect5350.i = insertelement <16 x double> %temp.vect5349.i, double %2407, i32 11
  %temp.vect5351.i = insertelement <16 x double> %temp.vect5350.i, double %2408, i32 12
  %temp.vect5352.i = insertelement <16 x double> %temp.vect5351.i, double %2409, i32 13
  %temp.vect5353.i = insertelement <16 x double> %temp.vect5352.i, double %2410, i32 14
  %temp.vect5354.i = insertelement <16 x double> %temp.vect5353.i, double %2411, i32 15
  %2412 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2413 = load i64* %2412, align 8
  %2414 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2415 = load i64* %2414, align 8
  %2416 = add i64 %2413, %2415
  %extract5322.i = add i64 %2416, 16035840
  %2417 = getelementptr inbounds double addrspace(1)* %4, i64 %extract5322.i
  %ptrTypeCast5338.i = bitcast double addrspace(1)* %2417 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect5354.i, <16 x double> addrspace(1)* %ptrTypeCast5338.i, align 8
  %2418 = fmul <16 x double> %temp.vect97.i, <double 9.147000e+00, double 9.147000e+00, double 9.147000e+00, double 9.147000e+00, double 9.147000e+00, double 9.147000e+00, double 9.147000e+00, double 9.147000e+00, double 9.147000e+00, double 9.147000e+00, double 9.147000e+00, double 9.147000e+00, double 9.147000e+00, double 9.147000e+00, double 9.147000e+00, double 9.147000e+00>
  %2419 = fsub <16 x double> <double 0x40581D727BB2FEC5, double 0x40581D727BB2FEC5, double 0x40581D727BB2FEC5, double 0x40581D727BB2FEC5, double 0x40581D727BB2FEC5, double 0x40581D727BB2FEC5, double 0x40581D727BB2FEC5, double 0x40581D727BB2FEC5, double 0x40581D727BB2FEC5, double 0x40581D727BB2FEC5, double 0x40581D727BB2FEC5, double 0x40581D727BB2FEC5, double 0x40581D727BB2FEC5, double 0x40581D727BB2FEC5, double 0x40581D727BB2FEC5, double 0x40581D727BB2FEC5>, %2418
  %2420 = fmul <16 x double> %41, <double 0x40D70C372617C1BE, double 0x40D70C372617C1BE, double 0x40D70C372617C1BE, double 0x40D70C372617C1BE, double 0x40D70C372617C1BE, double 0x40D70C372617C1BE, double 0x40D70C372617C1BE, double 0x40D70C372617C1BE, double 0x40D70C372617C1BE, double 0x40D70C372617C1BE, double 0x40D70C372617C1BE, double 0x40D70C372617C1BE, double 0x40D70C372617C1BE, double 0x40D70C372617C1BE, double 0x40D70C372617C1BE, double 0x40D70C372617C1BE>
  %2421 = fsub <16 x double> %2419, %2420
  %extract5355.i = extractelement <16 x double> %2421, i32 0
  %extract5356.i = extractelement <16 x double> %2421, i32 1
  %extract5357.i = extractelement <16 x double> %2421, i32 2
  %extract5358.i = extractelement <16 x double> %2421, i32 3
  %extract5359.i = extractelement <16 x double> %2421, i32 4
  %extract5360.i = extractelement <16 x double> %2421, i32 5
  %extract5361.i = extractelement <16 x double> %2421, i32 6
  %extract5362.i = extractelement <16 x double> %2421, i32 7
  %extract5363.i = extractelement <16 x double> %2421, i32 8
  %extract5364.i = extractelement <16 x double> %2421, i32 9
  %extract5365.i = extractelement <16 x double> %2421, i32 10
  %extract5366.i = extractelement <16 x double> %2421, i32 11
  %extract5367.i = extractelement <16 x double> %2421, i32 12
  %extract5368.i = extractelement <16 x double> %2421, i32 13
  %extract5369.i = extractelement <16 x double> %2421, i32 14
  %extract5370.i = extractelement <16 x double> %2421, i32 15
  %2422 = call double @_Z3expd(double %extract5355.i) nounwind
  %2423 = call double @_Z3expd(double %extract5356.i) nounwind
  %2424 = call double @_Z3expd(double %extract5357.i) nounwind
  %2425 = call double @_Z3expd(double %extract5358.i) nounwind
  %2426 = call double @_Z3expd(double %extract5359.i) nounwind
  %2427 = call double @_Z3expd(double %extract5360.i) nounwind
  %2428 = call double @_Z3expd(double %extract5361.i) nounwind
  %2429 = call double @_Z3expd(double %extract5362.i) nounwind
  %2430 = call double @_Z3expd(double %extract5363.i) nounwind
  %2431 = call double @_Z3expd(double %extract5364.i) nounwind
  %2432 = call double @_Z3expd(double %extract5365.i) nounwind
  %2433 = call double @_Z3expd(double %extract5366.i) nounwind
  %2434 = call double @_Z3expd(double %extract5367.i) nounwind
  %2435 = call double @_Z3expd(double %extract5368.i) nounwind
  %2436 = call double @_Z3expd(double %extract5369.i) nounwind
  %2437 = call double @_Z3expd(double %extract5370.i) nounwind
  %temp.vect5390.i = insertelement <16 x double> undef, double %2422, i32 0
  %temp.vect5391.i = insertelement <16 x double> %temp.vect5390.i, double %2423, i32 1
  %temp.vect5392.i = insertelement <16 x double> %temp.vect5391.i, double %2424, i32 2
  %temp.vect5393.i = insertelement <16 x double> %temp.vect5392.i, double %2425, i32 3
  %temp.vect5394.i = insertelement <16 x double> %temp.vect5393.i, double %2426, i32 4
  %temp.vect5395.i = insertelement <16 x double> %temp.vect5394.i, double %2427, i32 5
  %temp.vect5396.i = insertelement <16 x double> %temp.vect5395.i, double %2428, i32 6
  %temp.vect5397.i = insertelement <16 x double> %temp.vect5396.i, double %2429, i32 7
  %temp.vect5398.i = insertelement <16 x double> %temp.vect5397.i, double %2430, i32 8
  %temp.vect5399.i = insertelement <16 x double> %temp.vect5398.i, double %2431, i32 9
  %temp.vect5400.i = insertelement <16 x double> %temp.vect5399.i, double %2432, i32 10
  %temp.vect5401.i = insertelement <16 x double> %temp.vect5400.i, double %2433, i32 11
  %temp.vect5402.i = insertelement <16 x double> %temp.vect5401.i, double %2434, i32 12
  %temp.vect5403.i = insertelement <16 x double> %temp.vect5402.i, double %2435, i32 13
  %temp.vect5404.i = insertelement <16 x double> %temp.vect5403.i, double %2436, i32 14
  %temp.vect5405.i = insertelement <16 x double> %temp.vect5404.i, double %2437, i32 15
  %2438 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2439 = load i64* %2438, align 8
  %2440 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2441 = load i64* %2440, align 8
  %2442 = add i64 %2439, %2441
  %extract5373.i = add i64 %2442, 16146432
  %2443 = getelementptr inbounds double addrspace(1)* %4, i64 %extract5373.i
  %ptrTypeCast5389.i = bitcast double addrspace(1)* %2443 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect5405.i, <16 x double> addrspace(1)* %ptrTypeCast5389.i, align 8
  %2444 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2445 = load i64* %2444, align 8
  %2446 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2447 = load i64* %2446, align 8
  %2448 = add i64 %2445, %2447
  %extract5408.i = add i64 %2448, 16257024
  %2449 = getelementptr inbounds double addrspace(1)* %4, i64 %extract5408.i
  %ptrTypeCast5424.i = bitcast double addrspace(1)* %2449 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14, double 1.000000e+14>, <16 x double> addrspace(1)* %ptrTypeCast5424.i, align 8
  %2450 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2451 = load i64* %2450, align 8
  %2452 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2453 = load i64* %2452, align 8
  %2454 = add i64 %2451, %2453
  %extract5427.i = add i64 %2454, 16367616
  %2455 = getelementptr inbounds double addrspace(1)* %4, i64 %extract5427.i
  %ptrTypeCast5443.i = bitcast double addrspace(1)* %2455 to <16 x double> addrspace(1)*
  store <16 x double> <double 9.000000e+13, double 9.000000e+13, double 9.000000e+13, double 9.000000e+13, double 9.000000e+13, double 9.000000e+13, double 9.000000e+13, double 9.000000e+13, double 9.000000e+13, double 9.000000e+13, double 9.000000e+13, double 9.000000e+13, double 9.000000e+13, double 9.000000e+13, double 9.000000e+13, double 9.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast5443.i, align 8
  %2456 = fmul <16 x double> %41, <double 0xC09F7377785729B3, double 0xC09F7377785729B3, double 0xC09F7377785729B3, double 0xC09F7377785729B3, double 0xC09F7377785729B3, double 0xC09F7377785729B3, double 0xC09F7377785729B3, double 0xC09F7377785729B3, double 0xC09F7377785729B3, double 0xC09F7377785729B3, double 0xC09F7377785729B3, double 0xC09F7377785729B3, double 0xC09F7377785729B3, double 0xC09F7377785729B3, double 0xC09F7377785729B3, double 0xC09F7377785729B3>
  %extract5444.i = extractelement <16 x double> %2456, i32 0
  %extract5445.i = extractelement <16 x double> %2456, i32 1
  %extract5446.i = extractelement <16 x double> %2456, i32 2
  %extract5447.i = extractelement <16 x double> %2456, i32 3
  %extract5448.i = extractelement <16 x double> %2456, i32 4
  %extract5449.i = extractelement <16 x double> %2456, i32 5
  %extract5450.i = extractelement <16 x double> %2456, i32 6
  %extract5451.i = extractelement <16 x double> %2456, i32 7
  %extract5452.i = extractelement <16 x double> %2456, i32 8
  %extract5453.i = extractelement <16 x double> %2456, i32 9
  %extract5454.i = extractelement <16 x double> %2456, i32 10
  %extract5455.i = extractelement <16 x double> %2456, i32 11
  %extract5456.i = extractelement <16 x double> %2456, i32 12
  %extract5457.i = extractelement <16 x double> %2456, i32 13
  %extract5458.i = extractelement <16 x double> %2456, i32 14
  %extract5459.i = extractelement <16 x double> %2456, i32 15
  %2457 = call double @_Z3expd(double %extract5444.i) nounwind
  %2458 = call double @_Z3expd(double %extract5445.i) nounwind
  %2459 = call double @_Z3expd(double %extract5446.i) nounwind
  %2460 = call double @_Z3expd(double %extract5447.i) nounwind
  %2461 = call double @_Z3expd(double %extract5448.i) nounwind
  %2462 = call double @_Z3expd(double %extract5449.i) nounwind
  %2463 = call double @_Z3expd(double %extract5450.i) nounwind
  %2464 = call double @_Z3expd(double %extract5451.i) nounwind
  %2465 = call double @_Z3expd(double %extract5452.i) nounwind
  %2466 = call double @_Z3expd(double %extract5453.i) nounwind
  %2467 = call double @_Z3expd(double %extract5454.i) nounwind
  %2468 = call double @_Z3expd(double %extract5455.i) nounwind
  %2469 = call double @_Z3expd(double %extract5456.i) nounwind
  %2470 = call double @_Z3expd(double %extract5457.i) nounwind
  %2471 = call double @_Z3expd(double %extract5458.i) nounwind
  %2472 = call double @_Z3expd(double %extract5459.i) nounwind
  %temp.vect5460.i = insertelement <16 x double> undef, double %2457, i32 0
  %temp.vect5461.i = insertelement <16 x double> %temp.vect5460.i, double %2458, i32 1
  %temp.vect5462.i = insertelement <16 x double> %temp.vect5461.i, double %2459, i32 2
  %temp.vect5463.i = insertelement <16 x double> %temp.vect5462.i, double %2460, i32 3
  %temp.vect5464.i = insertelement <16 x double> %temp.vect5463.i, double %2461, i32 4
  %temp.vect5465.i = insertelement <16 x double> %temp.vect5464.i, double %2462, i32 5
  %temp.vect5466.i = insertelement <16 x double> %temp.vect5465.i, double %2463, i32 6
  %temp.vect5467.i = insertelement <16 x double> %temp.vect5466.i, double %2464, i32 7
  %temp.vect5468.i = insertelement <16 x double> %temp.vect5467.i, double %2465, i32 8
  %temp.vect5469.i = insertelement <16 x double> %temp.vect5468.i, double %2466, i32 9
  %temp.vect5470.i = insertelement <16 x double> %temp.vect5469.i, double %2467, i32 10
  %temp.vect5471.i = insertelement <16 x double> %temp.vect5470.i, double %2468, i32 11
  %temp.vect5472.i = insertelement <16 x double> %temp.vect5471.i, double %2469, i32 12
  %temp.vect5473.i = insertelement <16 x double> %temp.vect5472.i, double %2470, i32 13
  %temp.vect5474.i = insertelement <16 x double> %temp.vect5473.i, double %2471, i32 14
  %temp.vect5475.i = insertelement <16 x double> %temp.vect5474.i, double %2472, i32 15
  %2473 = fmul <16 x double> %temp.vect5475.i, <double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13, double 2.000000e+13>
  %2474 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2475 = load i64* %2474, align 8
  %2476 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2477 = load i64* %2476, align 8
  %2478 = add i64 %2475, %2477
  %extract5478.i = add i64 %2478, 16478208
  %2479 = getelementptr inbounds double addrspace(1)* %4, i64 %extract5478.i
  %ptrTypeCast5494.i = bitcast double addrspace(1)* %2479 to <16 x double> addrspace(1)*
  store <16 x double> %2473, <16 x double> addrspace(1)* %ptrTypeCast5494.i, align 8
  %2480 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2481 = load i64* %2480, align 8
  %2482 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2483 = load i64* %2482, align 8
  %2484 = add i64 %2481, %2483
  %extract5497.i = add i64 %2484, 16588800
  %2485 = getelementptr inbounds double addrspace(1)* %4, i64 %extract5497.i
  %ptrTypeCast5513.i = bitcast double addrspace(1)* %2485 to <16 x double> addrspace(1)*
  store <16 x double> %2473, <16 x double> addrspace(1)* %ptrTypeCast5513.i, align 8
  %2486 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2487 = load i64* %2486, align 8
  %2488 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2489 = load i64* %2488, align 8
  %2490 = add i64 %2487, %2489
  %extract5516.i = add i64 %2490, 16809984
  %2491 = getelementptr inbounds double addrspace(1)* %4, i64 %extract5516.i
  %ptrTypeCast5532.i = bitcast double addrspace(1)* %2491 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.400000e+11, double 1.400000e+11, double 1.400000e+11, double 1.400000e+11, double 1.400000e+11, double 1.400000e+11, double 1.400000e+11, double 1.400000e+11, double 1.400000e+11, double 1.400000e+11, double 1.400000e+11, double 1.400000e+11, double 1.400000e+11, double 1.400000e+11, double 1.400000e+11, double 1.400000e+11>, <16 x double> addrspace(1)* %ptrTypeCast5532.i, align 8
  %2492 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2493 = load i64* %2492, align 8
  %2494 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2495 = load i64* %2494, align 8
  %2496 = add i64 %2493, %2495
  %extract5535.i = add i64 %2496, 16920576
  %2497 = getelementptr inbounds double addrspace(1)* %4, i64 %extract5535.i
  %ptrTypeCast5551.i = bitcast double addrspace(1)* %2497 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.800000e+10, double 1.800000e+10, double 1.800000e+10, double 1.800000e+10, double 1.800000e+10, double 1.800000e+10, double 1.800000e+10, double 1.800000e+10, double 1.800000e+10, double 1.800000e+10, double 1.800000e+10, double 1.800000e+10, double 1.800000e+10, double 1.800000e+10, double 1.800000e+10, double 1.800000e+10>, <16 x double> addrspace(1)* %ptrTypeCast5551.i, align 8
  %2498 = fmul <16 x double> %temp.vect97.i, <double 4.400000e-01, double 4.400000e-01, double 4.400000e-01, double 4.400000e-01, double 4.400000e-01, double 4.400000e-01, double 4.400000e-01, double 4.400000e-01, double 4.400000e-01, double 4.400000e-01, double 4.400000e-01, double 4.400000e-01, double 4.400000e-01, double 4.400000e-01, double 4.400000e-01, double 4.400000e-01>
  %2499 = fadd <16 x double> %2498, <double 0x403DB5E0E22D8722, double 0x403DB5E0E22D8722, double 0x403DB5E0E22D8722, double 0x403DB5E0E22D8722, double 0x403DB5E0E22D8722, double 0x403DB5E0E22D8722, double 0x403DB5E0E22D8722, double 0x403DB5E0E22D8722, double 0x403DB5E0E22D8722, double 0x403DB5E0E22D8722, double 0x403DB5E0E22D8722, double 0x403DB5E0E22D8722, double 0x403DB5E0E22D8722, double 0x403DB5E0E22D8722, double 0x403DB5E0E22D8722, double 0x403DB5E0E22D8722>
  %2500 = fmul <16 x double> %41, <double 0x40E5CFD1652BD3C3, double 0x40E5CFD1652BD3C3, double 0x40E5CFD1652BD3C3, double 0x40E5CFD1652BD3C3, double 0x40E5CFD1652BD3C3, double 0x40E5CFD1652BD3C3, double 0x40E5CFD1652BD3C3, double 0x40E5CFD1652BD3C3, double 0x40E5CFD1652BD3C3, double 0x40E5CFD1652BD3C3, double 0x40E5CFD1652BD3C3, double 0x40E5CFD1652BD3C3, double 0x40E5CFD1652BD3C3, double 0x40E5CFD1652BD3C3, double 0x40E5CFD1652BD3C3, double 0x40E5CFD1652BD3C3>
  %2501 = fsub <16 x double> %2499, %2500
  %extract5552.i = extractelement <16 x double> %2501, i32 0
  %extract5553.i = extractelement <16 x double> %2501, i32 1
  %extract5554.i = extractelement <16 x double> %2501, i32 2
  %extract5555.i = extractelement <16 x double> %2501, i32 3
  %extract5556.i = extractelement <16 x double> %2501, i32 4
  %extract5557.i = extractelement <16 x double> %2501, i32 5
  %extract5558.i = extractelement <16 x double> %2501, i32 6
  %extract5559.i = extractelement <16 x double> %2501, i32 7
  %extract5560.i = extractelement <16 x double> %2501, i32 8
  %extract5561.i = extractelement <16 x double> %2501, i32 9
  %extract5562.i = extractelement <16 x double> %2501, i32 10
  %extract5563.i = extractelement <16 x double> %2501, i32 11
  %extract5564.i = extractelement <16 x double> %2501, i32 12
  %extract5565.i = extractelement <16 x double> %2501, i32 13
  %extract5566.i = extractelement <16 x double> %2501, i32 14
  %extract5567.i = extractelement <16 x double> %2501, i32 15
  %2502 = call double @_Z3expd(double %extract5552.i) nounwind
  %2503 = call double @_Z3expd(double %extract5553.i) nounwind
  %2504 = call double @_Z3expd(double %extract5554.i) nounwind
  %2505 = call double @_Z3expd(double %extract5555.i) nounwind
  %2506 = call double @_Z3expd(double %extract5556.i) nounwind
  %2507 = call double @_Z3expd(double %extract5557.i) nounwind
  %2508 = call double @_Z3expd(double %extract5558.i) nounwind
  %2509 = call double @_Z3expd(double %extract5559.i) nounwind
  %2510 = call double @_Z3expd(double %extract5560.i) nounwind
  %2511 = call double @_Z3expd(double %extract5561.i) nounwind
  %2512 = call double @_Z3expd(double %extract5562.i) nounwind
  %2513 = call double @_Z3expd(double %extract5563.i) nounwind
  %2514 = call double @_Z3expd(double %extract5564.i) nounwind
  %2515 = call double @_Z3expd(double %extract5565.i) nounwind
  %2516 = call double @_Z3expd(double %extract5566.i) nounwind
  %2517 = call double @_Z3expd(double %extract5567.i) nounwind
  %temp.vect5587.i = insertelement <16 x double> undef, double %2502, i32 0
  %temp.vect5588.i = insertelement <16 x double> %temp.vect5587.i, double %2503, i32 1
  %temp.vect5589.i = insertelement <16 x double> %temp.vect5588.i, double %2504, i32 2
  %temp.vect5590.i = insertelement <16 x double> %temp.vect5589.i, double %2505, i32 3
  %temp.vect5591.i = insertelement <16 x double> %temp.vect5590.i, double %2506, i32 4
  %temp.vect5592.i = insertelement <16 x double> %temp.vect5591.i, double %2507, i32 5
  %temp.vect5593.i = insertelement <16 x double> %temp.vect5592.i, double %2508, i32 6
  %temp.vect5594.i = insertelement <16 x double> %temp.vect5593.i, double %2509, i32 7
  %temp.vect5595.i = insertelement <16 x double> %temp.vect5594.i, double %2510, i32 8
  %temp.vect5596.i = insertelement <16 x double> %temp.vect5595.i, double %2511, i32 9
  %temp.vect5597.i = insertelement <16 x double> %temp.vect5596.i, double %2512, i32 10
  %temp.vect5598.i = insertelement <16 x double> %temp.vect5597.i, double %2513, i32 11
  %temp.vect5599.i = insertelement <16 x double> %temp.vect5598.i, double %2514, i32 12
  %temp.vect5600.i = insertelement <16 x double> %temp.vect5599.i, double %2515, i32 13
  %temp.vect5601.i = insertelement <16 x double> %temp.vect5600.i, double %2516, i32 14
  %temp.vect5602.i = insertelement <16 x double> %temp.vect5601.i, double %2517, i32 15
  %2518 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2519 = load i64* %2518, align 8
  %2520 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2521 = load i64* %2520, align 8
  %2522 = add i64 %2519, %2521
  %extract5570.i = add i64 %2522, 17031168
  %2523 = getelementptr inbounds double addrspace(1)* %4, i64 %extract5570.i
  %ptrTypeCast5586.i = bitcast double addrspace(1)* %2523 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect5602.i, <16 x double> addrspace(1)* %ptrTypeCast5586.i, align 8
  %2524 = fadd <16 x double> %1192, <double 0x403BB53E524B266F, double 0x403BB53E524B266F, double 0x403BB53E524B266F, double 0x403BB53E524B266F, double 0x403BB53E524B266F, double 0x403BB53E524B266F, double 0x403BB53E524B266F, double 0x403BB53E524B266F, double 0x403BB53E524B266F, double 0x403BB53E524B266F, double 0x403BB53E524B266F, double 0x403BB53E524B266F, double 0x403BB53E524B266F, double 0x403BB53E524B266F, double 0x403BB53E524B266F, double 0x403BB53E524B266F>
  %2525 = fmul <16 x double> %41, <double 0x408C9ED5AD96A6A0, double 0x408C9ED5AD96A6A0, double 0x408C9ED5AD96A6A0, double 0x408C9ED5AD96A6A0, double 0x408C9ED5AD96A6A0, double 0x408C9ED5AD96A6A0, double 0x408C9ED5AD96A6A0, double 0x408C9ED5AD96A6A0, double 0x408C9ED5AD96A6A0, double 0x408C9ED5AD96A6A0, double 0x408C9ED5AD96A6A0, double 0x408C9ED5AD96A6A0, double 0x408C9ED5AD96A6A0, double 0x408C9ED5AD96A6A0, double 0x408C9ED5AD96A6A0, double 0x408C9ED5AD96A6A0>
  %2526 = fsub <16 x double> %2524, %2525
  %extract5603.i = extractelement <16 x double> %2526, i32 0
  %extract5604.i = extractelement <16 x double> %2526, i32 1
  %extract5605.i = extractelement <16 x double> %2526, i32 2
  %extract5606.i = extractelement <16 x double> %2526, i32 3
  %extract5607.i = extractelement <16 x double> %2526, i32 4
  %extract5608.i = extractelement <16 x double> %2526, i32 5
  %extract5609.i = extractelement <16 x double> %2526, i32 6
  %extract5610.i = extractelement <16 x double> %2526, i32 7
  %extract5611.i = extractelement <16 x double> %2526, i32 8
  %extract5612.i = extractelement <16 x double> %2526, i32 9
  %extract5613.i = extractelement <16 x double> %2526, i32 10
  %extract5614.i = extractelement <16 x double> %2526, i32 11
  %extract5615.i = extractelement <16 x double> %2526, i32 12
  %extract5616.i = extractelement <16 x double> %2526, i32 13
  %extract5617.i = extractelement <16 x double> %2526, i32 14
  %extract5618.i = extractelement <16 x double> %2526, i32 15
  %2527 = call double @_Z3expd(double %extract5603.i) nounwind
  %2528 = call double @_Z3expd(double %extract5604.i) nounwind
  %2529 = call double @_Z3expd(double %extract5605.i) nounwind
  %2530 = call double @_Z3expd(double %extract5606.i) nounwind
  %2531 = call double @_Z3expd(double %extract5607.i) nounwind
  %2532 = call double @_Z3expd(double %extract5608.i) nounwind
  %2533 = call double @_Z3expd(double %extract5609.i) nounwind
  %2534 = call double @_Z3expd(double %extract5610.i) nounwind
  %2535 = call double @_Z3expd(double %extract5611.i) nounwind
  %2536 = call double @_Z3expd(double %extract5612.i) nounwind
  %2537 = call double @_Z3expd(double %extract5613.i) nounwind
  %2538 = call double @_Z3expd(double %extract5614.i) nounwind
  %2539 = call double @_Z3expd(double %extract5615.i) nounwind
  %2540 = call double @_Z3expd(double %extract5616.i) nounwind
  %2541 = call double @_Z3expd(double %extract5617.i) nounwind
  %2542 = call double @_Z3expd(double %extract5618.i) nounwind
  %temp.vect5638.i = insertelement <16 x double> undef, double %2527, i32 0
  %temp.vect5639.i = insertelement <16 x double> %temp.vect5638.i, double %2528, i32 1
  %temp.vect5640.i = insertelement <16 x double> %temp.vect5639.i, double %2529, i32 2
  %temp.vect5641.i = insertelement <16 x double> %temp.vect5640.i, double %2530, i32 3
  %temp.vect5642.i = insertelement <16 x double> %temp.vect5641.i, double %2531, i32 4
  %temp.vect5643.i = insertelement <16 x double> %temp.vect5642.i, double %2532, i32 5
  %temp.vect5644.i = insertelement <16 x double> %temp.vect5643.i, double %2533, i32 6
  %temp.vect5645.i = insertelement <16 x double> %temp.vect5644.i, double %2534, i32 7
  %temp.vect5646.i = insertelement <16 x double> %temp.vect5645.i, double %2535, i32 8
  %temp.vect5647.i = insertelement <16 x double> %temp.vect5646.i, double %2536, i32 9
  %temp.vect5648.i = insertelement <16 x double> %temp.vect5647.i, double %2537, i32 10
  %temp.vect5649.i = insertelement <16 x double> %temp.vect5648.i, double %2538, i32 11
  %temp.vect5650.i = insertelement <16 x double> %temp.vect5649.i, double %2539, i32 12
  %temp.vect5651.i = insertelement <16 x double> %temp.vect5650.i, double %2540, i32 13
  %temp.vect5652.i = insertelement <16 x double> %temp.vect5651.i, double %2541, i32 14
  %temp.vect5653.i = insertelement <16 x double> %temp.vect5652.i, double %2542, i32 15
  %2543 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2544 = load i64* %2543, align 8
  %2545 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2546 = load i64* %2545, align 8
  %2547 = add i64 %2544, %2546
  %extract5621.i = add i64 %2547, 17141760
  %2548 = getelementptr inbounds double addrspace(1)* %4, i64 %extract5621.i
  %ptrTypeCast5637.i = bitcast double addrspace(1)* %2548 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect5653.i, <16 x double> addrspace(1)* %ptrTypeCast5637.i, align 8
  %2549 = fmul <16 x double> %temp.vect97.i, <double 1.930000e+00, double 1.930000e+00, double 1.930000e+00, double 1.930000e+00, double 1.930000e+00, double 1.930000e+00, double 1.930000e+00, double 1.930000e+00, double 1.930000e+00, double 1.930000e+00, double 1.930000e+00, double 1.930000e+00, double 1.930000e+00, double 1.930000e+00, double 1.930000e+00, double 1.930000e+00>
  %2550 = fadd <16 x double> %2549, <double 0x4031BDCEC84F8F8A, double 0x4031BDCEC84F8F8A, double 0x4031BDCEC84F8F8A, double 0x4031BDCEC84F8F8A, double 0x4031BDCEC84F8F8A, double 0x4031BDCEC84F8F8A, double 0x4031BDCEC84F8F8A, double 0x4031BDCEC84F8F8A, double 0x4031BDCEC84F8F8A, double 0x4031BDCEC84F8F8A, double 0x4031BDCEC84F8F8A, double 0x4031BDCEC84F8F8A, double 0x4031BDCEC84F8F8A, double 0x4031BDCEC84F8F8A, double 0x4031BDCEC84F8F8A, double 0x4031BDCEC84F8F8A>
  %2551 = fmul <16 x double> %41, <double 0x40B974A7E5C91D15, double 0x40B974A7E5C91D15, double 0x40B974A7E5C91D15, double 0x40B974A7E5C91D15, double 0x40B974A7E5C91D15, double 0x40B974A7E5C91D15, double 0x40B974A7E5C91D15, double 0x40B974A7E5C91D15, double 0x40B974A7E5C91D15, double 0x40B974A7E5C91D15, double 0x40B974A7E5C91D15, double 0x40B974A7E5C91D15, double 0x40B974A7E5C91D15, double 0x40B974A7E5C91D15, double 0x40B974A7E5C91D15, double 0x40B974A7E5C91D15>
  %2552 = fsub <16 x double> %2550, %2551
  %extract5654.i = extractelement <16 x double> %2552, i32 0
  %extract5655.i = extractelement <16 x double> %2552, i32 1
  %extract5656.i = extractelement <16 x double> %2552, i32 2
  %extract5657.i = extractelement <16 x double> %2552, i32 3
  %extract5658.i = extractelement <16 x double> %2552, i32 4
  %extract5659.i = extractelement <16 x double> %2552, i32 5
  %extract5660.i = extractelement <16 x double> %2552, i32 6
  %extract5661.i = extractelement <16 x double> %2552, i32 7
  %extract5662.i = extractelement <16 x double> %2552, i32 8
  %extract5663.i = extractelement <16 x double> %2552, i32 9
  %extract5664.i = extractelement <16 x double> %2552, i32 10
  %extract5665.i = extractelement <16 x double> %2552, i32 11
  %extract5666.i = extractelement <16 x double> %2552, i32 12
  %extract5667.i = extractelement <16 x double> %2552, i32 13
  %extract5668.i = extractelement <16 x double> %2552, i32 14
  %extract5669.i = extractelement <16 x double> %2552, i32 15
  %2553 = call double @_Z3expd(double %extract5654.i) nounwind
  %2554 = call double @_Z3expd(double %extract5655.i) nounwind
  %2555 = call double @_Z3expd(double %extract5656.i) nounwind
  %2556 = call double @_Z3expd(double %extract5657.i) nounwind
  %2557 = call double @_Z3expd(double %extract5658.i) nounwind
  %2558 = call double @_Z3expd(double %extract5659.i) nounwind
  %2559 = call double @_Z3expd(double %extract5660.i) nounwind
  %2560 = call double @_Z3expd(double %extract5661.i) nounwind
  %2561 = call double @_Z3expd(double %extract5662.i) nounwind
  %2562 = call double @_Z3expd(double %extract5663.i) nounwind
  %2563 = call double @_Z3expd(double %extract5664.i) nounwind
  %2564 = call double @_Z3expd(double %extract5665.i) nounwind
  %2565 = call double @_Z3expd(double %extract5666.i) nounwind
  %2566 = call double @_Z3expd(double %extract5667.i) nounwind
  %2567 = call double @_Z3expd(double %extract5668.i) nounwind
  %2568 = call double @_Z3expd(double %extract5669.i) nounwind
  %temp.vect5689.i = insertelement <16 x double> undef, double %2553, i32 0
  %temp.vect5690.i = insertelement <16 x double> %temp.vect5689.i, double %2554, i32 1
  %temp.vect5691.i = insertelement <16 x double> %temp.vect5690.i, double %2555, i32 2
  %temp.vect5692.i = insertelement <16 x double> %temp.vect5691.i, double %2556, i32 3
  %temp.vect5693.i = insertelement <16 x double> %temp.vect5692.i, double %2557, i32 4
  %temp.vect5694.i = insertelement <16 x double> %temp.vect5693.i, double %2558, i32 5
  %temp.vect5695.i = insertelement <16 x double> %temp.vect5694.i, double %2559, i32 6
  %temp.vect5696.i = insertelement <16 x double> %temp.vect5695.i, double %2560, i32 7
  %temp.vect5697.i = insertelement <16 x double> %temp.vect5696.i, double %2561, i32 8
  %temp.vect5698.i = insertelement <16 x double> %temp.vect5697.i, double %2562, i32 9
  %temp.vect5699.i = insertelement <16 x double> %temp.vect5698.i, double %2563, i32 10
  %temp.vect5700.i = insertelement <16 x double> %temp.vect5699.i, double %2564, i32 11
  %temp.vect5701.i = insertelement <16 x double> %temp.vect5700.i, double %2565, i32 12
  %temp.vect5702.i = insertelement <16 x double> %temp.vect5701.i, double %2566, i32 13
  %temp.vect5703.i = insertelement <16 x double> %temp.vect5702.i, double %2567, i32 14
  %temp.vect5704.i = insertelement <16 x double> %temp.vect5703.i, double %2568, i32 15
  %2569 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2570 = load i64* %2569, align 8
  %2571 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2572 = load i64* %2571, align 8
  %2573 = add i64 %2570, %2572
  %extract5672.i = add i64 %2573, 17252352
  %2574 = getelementptr inbounds double addrspace(1)* %4, i64 %extract5672.i
  %ptrTypeCast5688.i = bitcast double addrspace(1)* %2574 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect5704.i, <16 x double> addrspace(1)* %ptrTypeCast5688.i, align 8
  %2575 = fmul <16 x double> %temp.vect97.i, <double 1.910000e+00, double 1.910000e+00, double 1.910000e+00, double 1.910000e+00, double 1.910000e+00, double 1.910000e+00, double 1.910000e+00, double 1.910000e+00, double 1.910000e+00, double 1.910000e+00, double 1.910000e+00, double 1.910000e+00, double 1.910000e+00, double 1.910000e+00, double 1.910000e+00, double 1.910000e+00>
  %2576 = fadd <16 x double> %2575, <double 0x403087BB88D7AA76, double 0x403087BB88D7AA76, double 0x403087BB88D7AA76, double 0x403087BB88D7AA76, double 0x403087BB88D7AA76, double 0x403087BB88D7AA76, double 0x403087BB88D7AA76, double 0x403087BB88D7AA76, double 0x403087BB88D7AA76, double 0x403087BB88D7AA76, double 0x403087BB88D7AA76, double 0x403087BB88D7AA76, double 0x403087BB88D7AA76, double 0x403087BB88D7AA76, double 0x403087BB88D7AA76, double 0x403087BB88D7AA76>
  %2577 = fmul <16 x double> %41, <double 0x409D681F1172EF0B, double 0x409D681F1172EF0B, double 0x409D681F1172EF0B, double 0x409D681F1172EF0B, double 0x409D681F1172EF0B, double 0x409D681F1172EF0B, double 0x409D681F1172EF0B, double 0x409D681F1172EF0B, double 0x409D681F1172EF0B, double 0x409D681F1172EF0B, double 0x409D681F1172EF0B, double 0x409D681F1172EF0B, double 0x409D681F1172EF0B, double 0x409D681F1172EF0B, double 0x409D681F1172EF0B, double 0x409D681F1172EF0B>
  %2578 = fsub <16 x double> %2576, %2577
  %extract5705.i = extractelement <16 x double> %2578, i32 0
  %extract5706.i = extractelement <16 x double> %2578, i32 1
  %extract5707.i = extractelement <16 x double> %2578, i32 2
  %extract5708.i = extractelement <16 x double> %2578, i32 3
  %extract5709.i = extractelement <16 x double> %2578, i32 4
  %extract5710.i = extractelement <16 x double> %2578, i32 5
  %extract5711.i = extractelement <16 x double> %2578, i32 6
  %extract5712.i = extractelement <16 x double> %2578, i32 7
  %extract5713.i = extractelement <16 x double> %2578, i32 8
  %extract5714.i = extractelement <16 x double> %2578, i32 9
  %extract5715.i = extractelement <16 x double> %2578, i32 10
  %extract5716.i = extractelement <16 x double> %2578, i32 11
  %extract5717.i = extractelement <16 x double> %2578, i32 12
  %extract5718.i = extractelement <16 x double> %2578, i32 13
  %extract5719.i = extractelement <16 x double> %2578, i32 14
  %extract5720.i = extractelement <16 x double> %2578, i32 15
  %2579 = call double @_Z3expd(double %extract5705.i) nounwind
  %2580 = call double @_Z3expd(double %extract5706.i) nounwind
  %2581 = call double @_Z3expd(double %extract5707.i) nounwind
  %2582 = call double @_Z3expd(double %extract5708.i) nounwind
  %2583 = call double @_Z3expd(double %extract5709.i) nounwind
  %2584 = call double @_Z3expd(double %extract5710.i) nounwind
  %2585 = call double @_Z3expd(double %extract5711.i) nounwind
  %2586 = call double @_Z3expd(double %extract5712.i) nounwind
  %2587 = call double @_Z3expd(double %extract5713.i) nounwind
  %2588 = call double @_Z3expd(double %extract5714.i) nounwind
  %2589 = call double @_Z3expd(double %extract5715.i) nounwind
  %2590 = call double @_Z3expd(double %extract5716.i) nounwind
  %2591 = call double @_Z3expd(double %extract5717.i) nounwind
  %2592 = call double @_Z3expd(double %extract5718.i) nounwind
  %2593 = call double @_Z3expd(double %extract5719.i) nounwind
  %2594 = call double @_Z3expd(double %extract5720.i) nounwind
  %temp.vect5740.i = insertelement <16 x double> undef, double %2579, i32 0
  %temp.vect5741.i = insertelement <16 x double> %temp.vect5740.i, double %2580, i32 1
  %temp.vect5742.i = insertelement <16 x double> %temp.vect5741.i, double %2581, i32 2
  %temp.vect5743.i = insertelement <16 x double> %temp.vect5742.i, double %2582, i32 3
  %temp.vect5744.i = insertelement <16 x double> %temp.vect5743.i, double %2583, i32 4
  %temp.vect5745.i = insertelement <16 x double> %temp.vect5744.i, double %2584, i32 5
  %temp.vect5746.i = insertelement <16 x double> %temp.vect5745.i, double %2585, i32 6
  %temp.vect5747.i = insertelement <16 x double> %temp.vect5746.i, double %2586, i32 7
  %temp.vect5748.i = insertelement <16 x double> %temp.vect5747.i, double %2587, i32 8
  %temp.vect5749.i = insertelement <16 x double> %temp.vect5748.i, double %2588, i32 9
  %temp.vect5750.i = insertelement <16 x double> %temp.vect5749.i, double %2589, i32 10
  %temp.vect5751.i = insertelement <16 x double> %temp.vect5750.i, double %2590, i32 11
  %temp.vect5752.i = insertelement <16 x double> %temp.vect5751.i, double %2591, i32 12
  %temp.vect5753.i = insertelement <16 x double> %temp.vect5752.i, double %2592, i32 13
  %temp.vect5754.i = insertelement <16 x double> %temp.vect5753.i, double %2593, i32 14
  %temp.vect5755.i = insertelement <16 x double> %temp.vect5754.i, double %2594, i32 15
  %2595 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2596 = load i64* %2595, align 8
  %2597 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2598 = load i64* %2597, align 8
  %2599 = add i64 %2596, %2598
  %extract5723.i = add i64 %2599, 17362944
  %2600 = getelementptr inbounds double addrspace(1)* %4, i64 %extract5723.i
  %ptrTypeCast5739.i = bitcast double addrspace(1)* %2600 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect5755.i, <16 x double> addrspace(1)* %ptrTypeCast5739.i, align 8
  %2601 = fmul <16 x double> %temp.vect97.i, <double 1.830000e+00, double 1.830000e+00, double 1.830000e+00, double 1.830000e+00, double 1.830000e+00, double 1.830000e+00, double 1.830000e+00, double 1.830000e+00, double 1.830000e+00, double 1.830000e+00, double 1.830000e+00, double 1.830000e+00, double 1.830000e+00, double 1.830000e+00, double 1.830000e+00, double 1.830000e+00>
  %2602 = fmul <16 x double> %41, <double 0x405BAD4A6A875D57, double 0x405BAD4A6A875D57, double 0x405BAD4A6A875D57, double 0x405BAD4A6A875D57, double 0x405BAD4A6A875D57, double 0x405BAD4A6A875D57, double 0x405BAD4A6A875D57, double 0x405BAD4A6A875D57, double 0x405BAD4A6A875D57, double 0x405BAD4A6A875D57, double 0x405BAD4A6A875D57, double 0x405BAD4A6A875D57, double 0x405BAD4A6A875D57, double 0x405BAD4A6A875D57, double 0x405BAD4A6A875D57, double 0x405BAD4A6A875D57>
  %2603 = fsub <16 x double> %2601, %2602
  %extract5756.i = extractelement <16 x double> %2603, i32 0
  %extract5757.i = extractelement <16 x double> %2603, i32 1
  %extract5758.i = extractelement <16 x double> %2603, i32 2
  %extract5759.i = extractelement <16 x double> %2603, i32 3
  %extract5760.i = extractelement <16 x double> %2603, i32 4
  %extract5761.i = extractelement <16 x double> %2603, i32 5
  %extract5762.i = extractelement <16 x double> %2603, i32 6
  %extract5763.i = extractelement <16 x double> %2603, i32 7
  %extract5764.i = extractelement <16 x double> %2603, i32 8
  %extract5765.i = extractelement <16 x double> %2603, i32 9
  %extract5766.i = extractelement <16 x double> %2603, i32 10
  %extract5767.i = extractelement <16 x double> %2603, i32 11
  %extract5768.i = extractelement <16 x double> %2603, i32 12
  %extract5769.i = extractelement <16 x double> %2603, i32 13
  %extract5770.i = extractelement <16 x double> %2603, i32 14
  %extract5771.i = extractelement <16 x double> %2603, i32 15
  %2604 = call double @_Z3expd(double %extract5756.i) nounwind
  %2605 = call double @_Z3expd(double %extract5757.i) nounwind
  %2606 = call double @_Z3expd(double %extract5758.i) nounwind
  %2607 = call double @_Z3expd(double %extract5759.i) nounwind
  %2608 = call double @_Z3expd(double %extract5760.i) nounwind
  %2609 = call double @_Z3expd(double %extract5761.i) nounwind
  %2610 = call double @_Z3expd(double %extract5762.i) nounwind
  %2611 = call double @_Z3expd(double %extract5763.i) nounwind
  %2612 = call double @_Z3expd(double %extract5764.i) nounwind
  %2613 = call double @_Z3expd(double %extract5765.i) nounwind
  %2614 = call double @_Z3expd(double %extract5766.i) nounwind
  %2615 = call double @_Z3expd(double %extract5767.i) nounwind
  %2616 = call double @_Z3expd(double %extract5768.i) nounwind
  %2617 = call double @_Z3expd(double %extract5769.i) nounwind
  %2618 = call double @_Z3expd(double %extract5770.i) nounwind
  %2619 = call double @_Z3expd(double %extract5771.i) nounwind
  %temp.vect5772.i = insertelement <16 x double> undef, double %2604, i32 0
  %temp.vect5773.i = insertelement <16 x double> %temp.vect5772.i, double %2605, i32 1
  %temp.vect5774.i = insertelement <16 x double> %temp.vect5773.i, double %2606, i32 2
  %temp.vect5775.i = insertelement <16 x double> %temp.vect5774.i, double %2607, i32 3
  %temp.vect5776.i = insertelement <16 x double> %temp.vect5775.i, double %2608, i32 4
  %temp.vect5777.i = insertelement <16 x double> %temp.vect5776.i, double %2609, i32 5
  %temp.vect5778.i = insertelement <16 x double> %temp.vect5777.i, double %2610, i32 6
  %temp.vect5779.i = insertelement <16 x double> %temp.vect5778.i, double %2611, i32 7
  %temp.vect5780.i = insertelement <16 x double> %temp.vect5779.i, double %2612, i32 8
  %temp.vect5781.i = insertelement <16 x double> %temp.vect5780.i, double %2613, i32 9
  %temp.vect5782.i = insertelement <16 x double> %temp.vect5781.i, double %2614, i32 10
  %temp.vect5783.i = insertelement <16 x double> %temp.vect5782.i, double %2615, i32 11
  %temp.vect5784.i = insertelement <16 x double> %temp.vect5783.i, double %2616, i32 12
  %temp.vect5785.i = insertelement <16 x double> %temp.vect5784.i, double %2617, i32 13
  %temp.vect5786.i = insertelement <16 x double> %temp.vect5785.i, double %2618, i32 14
  %temp.vect5787.i = insertelement <16 x double> %temp.vect5786.i, double %2619, i32 15
  %2620 = fmul <16 x double> %temp.vect5787.i, <double 1.920000e+07, double 1.920000e+07, double 1.920000e+07, double 1.920000e+07, double 1.920000e+07, double 1.920000e+07, double 1.920000e+07, double 1.920000e+07, double 1.920000e+07, double 1.920000e+07, double 1.920000e+07, double 1.920000e+07, double 1.920000e+07, double 1.920000e+07, double 1.920000e+07, double 1.920000e+07>
  %2621 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2622 = load i64* %2621, align 8
  %2623 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2624 = load i64* %2623, align 8
  %2625 = add i64 %2622, %2624
  %extract5790.i = add i64 %2625, 17473536
  %2626 = getelementptr inbounds double addrspace(1)* %4, i64 %extract5790.i
  %ptrTypeCast5806.i = bitcast double addrspace(1)* %2626 to <16 x double> addrspace(1)*
  store <16 x double> %2620, <16 x double> addrspace(1)* %ptrTypeCast5806.i, align 8
  %2627 = fmul <16 x double> %temp.vect5787.i, <double 3.840000e+05, double 3.840000e+05, double 3.840000e+05, double 3.840000e+05, double 3.840000e+05, double 3.840000e+05, double 3.840000e+05, double 3.840000e+05, double 3.840000e+05, double 3.840000e+05, double 3.840000e+05, double 3.840000e+05, double 3.840000e+05, double 3.840000e+05, double 3.840000e+05, double 3.840000e+05>
  %2628 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2629 = load i64* %2628, align 8
  %2630 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2631 = load i64* %2630, align 8
  %2632 = add i64 %2629, %2631
  %extract5809.i = add i64 %2632, 17584128
  %2633 = getelementptr inbounds double addrspace(1)* %4, i64 %extract5809.i
  %ptrTypeCast5825.i = bitcast double addrspace(1)* %2633 to <16 x double> addrspace(1)*
  store <16 x double> %2627, <16 x double> addrspace(1)* %ptrTypeCast5825.i, align 8
  %2634 = fadd <16 x double> %498, <double 0x402E3161290FC3C2, double 0x402E3161290FC3C2, double 0x402E3161290FC3C2, double 0x402E3161290FC3C2, double 0x402E3161290FC3C2, double 0x402E3161290FC3C2, double 0x402E3161290FC3C2, double 0x402E3161290FC3C2, double 0x402E3161290FC3C2, double 0x402E3161290FC3C2, double 0x402E3161290FC3C2, double 0x402E3161290FC3C2, double 0x402E3161290FC3C2, double 0x402E3161290FC3C2, double 0x402E3161290FC3C2, double 0x402E3161290FC3C2>
  %2635 = fmul <16 x double> %41, <double 0x4093A82AAB8A5CE6, double 0x4093A82AAB8A5CE6, double 0x4093A82AAB8A5CE6, double 0x4093A82AAB8A5CE6, double 0x4093A82AAB8A5CE6, double 0x4093A82AAB8A5CE6, double 0x4093A82AAB8A5CE6, double 0x4093A82AAB8A5CE6, double 0x4093A82AAB8A5CE6, double 0x4093A82AAB8A5CE6, double 0x4093A82AAB8A5CE6, double 0x4093A82AAB8A5CE6, double 0x4093A82AAB8A5CE6, double 0x4093A82AAB8A5CE6, double 0x4093A82AAB8A5CE6, double 0x4093A82AAB8A5CE6>
  %2636 = fsub <16 x double> %2634, %2635
  %extract5826.i = extractelement <16 x double> %2636, i32 0
  %extract5827.i = extractelement <16 x double> %2636, i32 1
  %extract5828.i = extractelement <16 x double> %2636, i32 2
  %extract5829.i = extractelement <16 x double> %2636, i32 3
  %extract5830.i = extractelement <16 x double> %2636, i32 4
  %extract5831.i = extractelement <16 x double> %2636, i32 5
  %extract5832.i = extractelement <16 x double> %2636, i32 6
  %extract5833.i = extractelement <16 x double> %2636, i32 7
  %extract5834.i = extractelement <16 x double> %2636, i32 8
  %extract5835.i = extractelement <16 x double> %2636, i32 9
  %extract5836.i = extractelement <16 x double> %2636, i32 10
  %extract5837.i = extractelement <16 x double> %2636, i32 11
  %extract5838.i = extractelement <16 x double> %2636, i32 12
  %extract5839.i = extractelement <16 x double> %2636, i32 13
  %extract5840.i = extractelement <16 x double> %2636, i32 14
  %extract5841.i = extractelement <16 x double> %2636, i32 15
  %2637 = call double @_Z3expd(double %extract5826.i) nounwind
  %2638 = call double @_Z3expd(double %extract5827.i) nounwind
  %2639 = call double @_Z3expd(double %extract5828.i) nounwind
  %2640 = call double @_Z3expd(double %extract5829.i) nounwind
  %2641 = call double @_Z3expd(double %extract5830.i) nounwind
  %2642 = call double @_Z3expd(double %extract5831.i) nounwind
  %2643 = call double @_Z3expd(double %extract5832.i) nounwind
  %2644 = call double @_Z3expd(double %extract5833.i) nounwind
  %2645 = call double @_Z3expd(double %extract5834.i) nounwind
  %2646 = call double @_Z3expd(double %extract5835.i) nounwind
  %2647 = call double @_Z3expd(double %extract5836.i) nounwind
  %2648 = call double @_Z3expd(double %extract5837.i) nounwind
  %2649 = call double @_Z3expd(double %extract5838.i) nounwind
  %2650 = call double @_Z3expd(double %extract5839.i) nounwind
  %2651 = call double @_Z3expd(double %extract5840.i) nounwind
  %2652 = call double @_Z3expd(double %extract5841.i) nounwind
  %temp.vect5861.i = insertelement <16 x double> undef, double %2637, i32 0
  %temp.vect5862.i = insertelement <16 x double> %temp.vect5861.i, double %2638, i32 1
  %temp.vect5863.i = insertelement <16 x double> %temp.vect5862.i, double %2639, i32 2
  %temp.vect5864.i = insertelement <16 x double> %temp.vect5863.i, double %2640, i32 3
  %temp.vect5865.i = insertelement <16 x double> %temp.vect5864.i, double %2641, i32 4
  %temp.vect5866.i = insertelement <16 x double> %temp.vect5865.i, double %2642, i32 5
  %temp.vect5867.i = insertelement <16 x double> %temp.vect5866.i, double %2643, i32 6
  %temp.vect5868.i = insertelement <16 x double> %temp.vect5867.i, double %2644, i32 7
  %temp.vect5869.i = insertelement <16 x double> %temp.vect5868.i, double %2645, i32 8
  %temp.vect5870.i = insertelement <16 x double> %temp.vect5869.i, double %2646, i32 9
  %temp.vect5871.i = insertelement <16 x double> %temp.vect5870.i, double %2647, i32 10
  %temp.vect5872.i = insertelement <16 x double> %temp.vect5871.i, double %2648, i32 11
  %temp.vect5873.i = insertelement <16 x double> %temp.vect5872.i, double %2649, i32 12
  %temp.vect5874.i = insertelement <16 x double> %temp.vect5873.i, double %2650, i32 13
  %temp.vect5875.i = insertelement <16 x double> %temp.vect5874.i, double %2651, i32 14
  %temp.vect5876.i = insertelement <16 x double> %temp.vect5875.i, double %2652, i32 15
  %2653 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2654 = load i64* %2653, align 8
  %2655 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2656 = load i64* %2655, align 8
  %2657 = add i64 %2654, %2656
  %extract5844.i = add i64 %2657, 17694720
  %2658 = getelementptr inbounds double addrspace(1)* %4, i64 %extract5844.i
  %ptrTypeCast5860.i = bitcast double addrspace(1)* %2658 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect5876.i, <16 x double> addrspace(1)* %ptrTypeCast5860.i, align 8
  %2659 = fmul <16 x double> %41, <double 0x40DDE0E4B295E9E2, double 0x40DDE0E4B295E9E2, double 0x40DDE0E4B295E9E2, double 0x40DDE0E4B295E9E2, double 0x40DDE0E4B295E9E2, double 0x40DDE0E4B295E9E2, double 0x40DDE0E4B295E9E2, double 0x40DDE0E4B295E9E2, double 0x40DDE0E4B295E9E2, double 0x40DDE0E4B295E9E2, double 0x40DDE0E4B295E9E2, double 0x40DDE0E4B295E9E2, double 0x40DDE0E4B295E9E2, double 0x40DDE0E4B295E9E2, double 0x40DDE0E4B295E9E2, double 0x40DDE0E4B295E9E2>
  %2660 = fsub <16 x double> <double 0x403F5F99D95A79C9, double 0x403F5F99D95A79C9, double 0x403F5F99D95A79C9, double 0x403F5F99D95A79C9, double 0x403F5F99D95A79C9, double 0x403F5F99D95A79C9, double 0x403F5F99D95A79C9, double 0x403F5F99D95A79C9, double 0x403F5F99D95A79C9, double 0x403F5F99D95A79C9, double 0x403F5F99D95A79C9, double 0x403F5F99D95A79C9, double 0x403F5F99D95A79C9, double 0x403F5F99D95A79C9, double 0x403F5F99D95A79C9, double 0x403F5F99D95A79C9>, %2659
  %extract5877.i = extractelement <16 x double> %2660, i32 0
  %extract5878.i = extractelement <16 x double> %2660, i32 1
  %extract5879.i = extractelement <16 x double> %2660, i32 2
  %extract5880.i = extractelement <16 x double> %2660, i32 3
  %extract5881.i = extractelement <16 x double> %2660, i32 4
  %extract5882.i = extractelement <16 x double> %2660, i32 5
  %extract5883.i = extractelement <16 x double> %2660, i32 6
  %extract5884.i = extractelement <16 x double> %2660, i32 7
  %extract5885.i = extractelement <16 x double> %2660, i32 8
  %extract5886.i = extractelement <16 x double> %2660, i32 9
  %extract5887.i = extractelement <16 x double> %2660, i32 10
  %extract5888.i = extractelement <16 x double> %2660, i32 11
  %extract5889.i = extractelement <16 x double> %2660, i32 12
  %extract5890.i = extractelement <16 x double> %2660, i32 13
  %extract5891.i = extractelement <16 x double> %2660, i32 14
  %extract5892.i = extractelement <16 x double> %2660, i32 15
  %2661 = call double @_Z3expd(double %extract5877.i) nounwind
  %2662 = call double @_Z3expd(double %extract5878.i) nounwind
  %2663 = call double @_Z3expd(double %extract5879.i) nounwind
  %2664 = call double @_Z3expd(double %extract5880.i) nounwind
  %2665 = call double @_Z3expd(double %extract5881.i) nounwind
  %2666 = call double @_Z3expd(double %extract5882.i) nounwind
  %2667 = call double @_Z3expd(double %extract5883.i) nounwind
  %2668 = call double @_Z3expd(double %extract5884.i) nounwind
  %2669 = call double @_Z3expd(double %extract5885.i) nounwind
  %2670 = call double @_Z3expd(double %extract5886.i) nounwind
  %2671 = call double @_Z3expd(double %extract5887.i) nounwind
  %2672 = call double @_Z3expd(double %extract5888.i) nounwind
  %2673 = call double @_Z3expd(double %extract5889.i) nounwind
  %2674 = call double @_Z3expd(double %extract5890.i) nounwind
  %2675 = call double @_Z3expd(double %extract5891.i) nounwind
  %2676 = call double @_Z3expd(double %extract5892.i) nounwind
  %temp.vect5912.i = insertelement <16 x double> undef, double %2661, i32 0
  %temp.vect5913.i = insertelement <16 x double> %temp.vect5912.i, double %2662, i32 1
  %temp.vect5914.i = insertelement <16 x double> %temp.vect5913.i, double %2663, i32 2
  %temp.vect5915.i = insertelement <16 x double> %temp.vect5914.i, double %2664, i32 3
  %temp.vect5916.i = insertelement <16 x double> %temp.vect5915.i, double %2665, i32 4
  %temp.vect5917.i = insertelement <16 x double> %temp.vect5916.i, double %2666, i32 5
  %temp.vect5918.i = insertelement <16 x double> %temp.vect5917.i, double %2667, i32 6
  %temp.vect5919.i = insertelement <16 x double> %temp.vect5918.i, double %2668, i32 7
  %temp.vect5920.i = insertelement <16 x double> %temp.vect5919.i, double %2669, i32 8
  %temp.vect5921.i = insertelement <16 x double> %temp.vect5920.i, double %2670, i32 9
  %temp.vect5922.i = insertelement <16 x double> %temp.vect5921.i, double %2671, i32 10
  %temp.vect5923.i = insertelement <16 x double> %temp.vect5922.i, double %2672, i32 11
  %temp.vect5924.i = insertelement <16 x double> %temp.vect5923.i, double %2673, i32 12
  %temp.vect5925.i = insertelement <16 x double> %temp.vect5924.i, double %2674, i32 13
  %temp.vect5926.i = insertelement <16 x double> %temp.vect5925.i, double %2675, i32 14
  %temp.vect5927.i = insertelement <16 x double> %temp.vect5926.i, double %2676, i32 15
  %2677 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2678 = load i64* %2677, align 8
  %2679 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2680 = load i64* %2679, align 8
  %2681 = add i64 %2678, %2680
  %extract5895.i = add i64 %2681, 17805312
  %2682 = getelementptr inbounds double addrspace(1)* %4, i64 %extract5895.i
  %ptrTypeCast5911.i = bitcast double addrspace(1)* %2682 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect5927.i, <16 x double> addrspace(1)* %ptrTypeCast5911.i, align 8
  %2683 = fmul <16 x double> %41, <double 0x40BB850889A02752, double 0x40BB850889A02752, double 0x40BB850889A02752, double 0x40BB850889A02752, double 0x40BB850889A02752, double 0x40BB850889A02752, double 0x40BB850889A02752, double 0x40BB850889A02752, double 0x40BB850889A02752, double 0x40BB850889A02752, double 0x40BB850889A02752, double 0x40BB850889A02752, double 0x40BB850889A02752, double 0x40BB850889A02752, double 0x40BB850889A02752, double 0x40BB850889A02752>
  %2684 = fsub <16 x double> <double 0x403C52FCB196E661, double 0x403C52FCB196E661, double 0x403C52FCB196E661, double 0x403C52FCB196E661, double 0x403C52FCB196E661, double 0x403C52FCB196E661, double 0x403C52FCB196E661, double 0x403C52FCB196E661, double 0x403C52FCB196E661, double 0x403C52FCB196E661, double 0x403C52FCB196E661, double 0x403C52FCB196E661, double 0x403C52FCB196E661, double 0x403C52FCB196E661, double 0x403C52FCB196E661, double 0x403C52FCB196E661>, %2683
  %extract5928.i = extractelement <16 x double> %2684, i32 0
  %extract5929.i = extractelement <16 x double> %2684, i32 1
  %extract5930.i = extractelement <16 x double> %2684, i32 2
  %extract5931.i = extractelement <16 x double> %2684, i32 3
  %extract5932.i = extractelement <16 x double> %2684, i32 4
  %extract5933.i = extractelement <16 x double> %2684, i32 5
  %extract5934.i = extractelement <16 x double> %2684, i32 6
  %extract5935.i = extractelement <16 x double> %2684, i32 7
  %extract5936.i = extractelement <16 x double> %2684, i32 8
  %extract5937.i = extractelement <16 x double> %2684, i32 9
  %extract5938.i = extractelement <16 x double> %2684, i32 10
  %extract5939.i = extractelement <16 x double> %2684, i32 11
  %extract5940.i = extractelement <16 x double> %2684, i32 12
  %extract5941.i = extractelement <16 x double> %2684, i32 13
  %extract5942.i = extractelement <16 x double> %2684, i32 14
  %extract5943.i = extractelement <16 x double> %2684, i32 15
  %2685 = call double @_Z3expd(double %extract5928.i) nounwind
  %2686 = call double @_Z3expd(double %extract5929.i) nounwind
  %2687 = call double @_Z3expd(double %extract5930.i) nounwind
  %2688 = call double @_Z3expd(double %extract5931.i) nounwind
  %2689 = call double @_Z3expd(double %extract5932.i) nounwind
  %2690 = call double @_Z3expd(double %extract5933.i) nounwind
  %2691 = call double @_Z3expd(double %extract5934.i) nounwind
  %2692 = call double @_Z3expd(double %extract5935.i) nounwind
  %2693 = call double @_Z3expd(double %extract5936.i) nounwind
  %2694 = call double @_Z3expd(double %extract5937.i) nounwind
  %2695 = call double @_Z3expd(double %extract5938.i) nounwind
  %2696 = call double @_Z3expd(double %extract5939.i) nounwind
  %2697 = call double @_Z3expd(double %extract5940.i) nounwind
  %2698 = call double @_Z3expd(double %extract5941.i) nounwind
  %2699 = call double @_Z3expd(double %extract5942.i) nounwind
  %2700 = call double @_Z3expd(double %extract5943.i) nounwind
  %temp.vect5963.i = insertelement <16 x double> undef, double %2685, i32 0
  %temp.vect5964.i = insertelement <16 x double> %temp.vect5963.i, double %2686, i32 1
  %temp.vect5965.i = insertelement <16 x double> %temp.vect5964.i, double %2687, i32 2
  %temp.vect5966.i = insertelement <16 x double> %temp.vect5965.i, double %2688, i32 3
  %temp.vect5967.i = insertelement <16 x double> %temp.vect5966.i, double %2689, i32 4
  %temp.vect5968.i = insertelement <16 x double> %temp.vect5967.i, double %2690, i32 5
  %temp.vect5969.i = insertelement <16 x double> %temp.vect5968.i, double %2691, i32 6
  %temp.vect5970.i = insertelement <16 x double> %temp.vect5969.i, double %2692, i32 7
  %temp.vect5971.i = insertelement <16 x double> %temp.vect5970.i, double %2693, i32 8
  %temp.vect5972.i = insertelement <16 x double> %temp.vect5971.i, double %2694, i32 9
  %temp.vect5973.i = insertelement <16 x double> %temp.vect5972.i, double %2695, i32 10
  %temp.vect5974.i = insertelement <16 x double> %temp.vect5973.i, double %2696, i32 11
  %temp.vect5975.i = insertelement <16 x double> %temp.vect5974.i, double %2697, i32 12
  %temp.vect5976.i = insertelement <16 x double> %temp.vect5975.i, double %2698, i32 13
  %temp.vect5977.i = insertelement <16 x double> %temp.vect5976.i, double %2699, i32 14
  %temp.vect5978.i = insertelement <16 x double> %temp.vect5977.i, double %2700, i32 15
  %2701 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2702 = load i64* %2701, align 8
  %2703 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2704 = load i64* %2703, align 8
  %2705 = add i64 %2702, %2704
  %extract5946.i = add i64 %2705, 17915904
  %2706 = getelementptr inbounds double addrspace(1)* %4, i64 %extract5946.i
  %ptrTypeCast5962.i = bitcast double addrspace(1)* %2706 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect5978.i, <16 x double> addrspace(1)* %ptrTypeCast5962.i, align 8
  %2707 = fmul <16 x double> %41, <double 0x40AF7377785729B3, double 0x40AF7377785729B3, double 0x40AF7377785729B3, double 0x40AF7377785729B3, double 0x40AF7377785729B3, double 0x40AF7377785729B3, double 0x40AF7377785729B3, double 0x40AF7377785729B3, double 0x40AF7377785729B3, double 0x40AF7377785729B3, double 0x40AF7377785729B3, double 0x40AF7377785729B3, double 0x40AF7377785729B3, double 0x40AF7377785729B3, double 0x40AF7377785729B3, double 0x40AF7377785729B3>
  %2708 = fsub <16 x double> %2021, %2707
  %extract5979.i = extractelement <16 x double> %2708, i32 0
  %extract5980.i = extractelement <16 x double> %2708, i32 1
  %extract5981.i = extractelement <16 x double> %2708, i32 2
  %extract5982.i = extractelement <16 x double> %2708, i32 3
  %extract5983.i = extractelement <16 x double> %2708, i32 4
  %extract5984.i = extractelement <16 x double> %2708, i32 5
  %extract5985.i = extractelement <16 x double> %2708, i32 6
  %extract5986.i = extractelement <16 x double> %2708, i32 7
  %extract5987.i = extractelement <16 x double> %2708, i32 8
  %extract5988.i = extractelement <16 x double> %2708, i32 9
  %extract5989.i = extractelement <16 x double> %2708, i32 10
  %extract5990.i = extractelement <16 x double> %2708, i32 11
  %extract5991.i = extractelement <16 x double> %2708, i32 12
  %extract5992.i = extractelement <16 x double> %2708, i32 13
  %extract5993.i = extractelement <16 x double> %2708, i32 14
  %extract5994.i = extractelement <16 x double> %2708, i32 15
  %2709 = call double @_Z3expd(double %extract5979.i) nounwind
  %2710 = call double @_Z3expd(double %extract5980.i) nounwind
  %2711 = call double @_Z3expd(double %extract5981.i) nounwind
  %2712 = call double @_Z3expd(double %extract5982.i) nounwind
  %2713 = call double @_Z3expd(double %extract5983.i) nounwind
  %2714 = call double @_Z3expd(double %extract5984.i) nounwind
  %2715 = call double @_Z3expd(double %extract5985.i) nounwind
  %2716 = call double @_Z3expd(double %extract5986.i) nounwind
  %2717 = call double @_Z3expd(double %extract5987.i) nounwind
  %2718 = call double @_Z3expd(double %extract5988.i) nounwind
  %2719 = call double @_Z3expd(double %extract5989.i) nounwind
  %2720 = call double @_Z3expd(double %extract5990.i) nounwind
  %2721 = call double @_Z3expd(double %extract5991.i) nounwind
  %2722 = call double @_Z3expd(double %extract5992.i) nounwind
  %2723 = call double @_Z3expd(double %extract5993.i) nounwind
  %2724 = call double @_Z3expd(double %extract5994.i) nounwind
  %temp.vect6014.i = insertelement <16 x double> undef, double %2709, i32 0
  %temp.vect6015.i = insertelement <16 x double> %temp.vect6014.i, double %2710, i32 1
  %temp.vect6016.i = insertelement <16 x double> %temp.vect6015.i, double %2711, i32 2
  %temp.vect6017.i = insertelement <16 x double> %temp.vect6016.i, double %2712, i32 3
  %temp.vect6018.i = insertelement <16 x double> %temp.vect6017.i, double %2713, i32 4
  %temp.vect6019.i = insertelement <16 x double> %temp.vect6018.i, double %2714, i32 5
  %temp.vect6020.i = insertelement <16 x double> %temp.vect6019.i, double %2715, i32 6
  %temp.vect6021.i = insertelement <16 x double> %temp.vect6020.i, double %2716, i32 7
  %temp.vect6022.i = insertelement <16 x double> %temp.vect6021.i, double %2717, i32 8
  %temp.vect6023.i = insertelement <16 x double> %temp.vect6022.i, double %2718, i32 9
  %temp.vect6024.i = insertelement <16 x double> %temp.vect6023.i, double %2719, i32 10
  %temp.vect6025.i = insertelement <16 x double> %temp.vect6024.i, double %2720, i32 11
  %temp.vect6026.i = insertelement <16 x double> %temp.vect6025.i, double %2721, i32 12
  %temp.vect6027.i = insertelement <16 x double> %temp.vect6026.i, double %2722, i32 13
  %temp.vect6028.i = insertelement <16 x double> %temp.vect6027.i, double %2723, i32 14
  %temp.vect6029.i = insertelement <16 x double> %temp.vect6028.i, double %2724, i32 15
  %2725 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2726 = load i64* %2725, align 8
  %2727 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2728 = load i64* %2727, align 8
  %2729 = add i64 %2726, %2728
  %extract5997.i = add i64 %2729, 18026496
  %2730 = getelementptr inbounds double addrspace(1)* %4, i64 %extract5997.i
  %ptrTypeCast6013.i = bitcast double addrspace(1)* %2730 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect6029.i, <16 x double> addrspace(1)* %ptrTypeCast6013.i, align 8
  %2731 = fsub <16 x double> <double 0x403EA072E92BA824, double 0x403EA072E92BA824, double 0x403EA072E92BA824, double 0x403EA072E92BA824, double 0x403EA072E92BA824, double 0x403EA072E92BA824, double 0x403EA072E92BA824, double 0x403EA072E92BA824, double 0x403EA072E92BA824, double 0x403EA072E92BA824, double 0x403EA072E92BA824, double 0x403EA072E92BA824, double 0x403EA072E92BA824, double 0x403EA072E92BA824, double 0x403EA072E92BA824, double 0x403EA072E92BA824>, %2022
  %extract6030.i = extractelement <16 x double> %2731, i32 0
  %extract6031.i = extractelement <16 x double> %2731, i32 1
  %extract6032.i = extractelement <16 x double> %2731, i32 2
  %extract6033.i = extractelement <16 x double> %2731, i32 3
  %extract6034.i = extractelement <16 x double> %2731, i32 4
  %extract6035.i = extractelement <16 x double> %2731, i32 5
  %extract6036.i = extractelement <16 x double> %2731, i32 6
  %extract6037.i = extractelement <16 x double> %2731, i32 7
  %extract6038.i = extractelement <16 x double> %2731, i32 8
  %extract6039.i = extractelement <16 x double> %2731, i32 9
  %extract6040.i = extractelement <16 x double> %2731, i32 10
  %extract6041.i = extractelement <16 x double> %2731, i32 11
  %extract6042.i = extractelement <16 x double> %2731, i32 12
  %extract6043.i = extractelement <16 x double> %2731, i32 13
  %extract6044.i = extractelement <16 x double> %2731, i32 14
  %extract6045.i = extractelement <16 x double> %2731, i32 15
  %2732 = call double @_Z3expd(double %extract6030.i) nounwind
  %2733 = call double @_Z3expd(double %extract6031.i) nounwind
  %2734 = call double @_Z3expd(double %extract6032.i) nounwind
  %2735 = call double @_Z3expd(double %extract6033.i) nounwind
  %2736 = call double @_Z3expd(double %extract6034.i) nounwind
  %2737 = call double @_Z3expd(double %extract6035.i) nounwind
  %2738 = call double @_Z3expd(double %extract6036.i) nounwind
  %2739 = call double @_Z3expd(double %extract6037.i) nounwind
  %2740 = call double @_Z3expd(double %extract6038.i) nounwind
  %2741 = call double @_Z3expd(double %extract6039.i) nounwind
  %2742 = call double @_Z3expd(double %extract6040.i) nounwind
  %2743 = call double @_Z3expd(double %extract6041.i) nounwind
  %2744 = call double @_Z3expd(double %extract6042.i) nounwind
  %2745 = call double @_Z3expd(double %extract6043.i) nounwind
  %2746 = call double @_Z3expd(double %extract6044.i) nounwind
  %2747 = call double @_Z3expd(double %extract6045.i) nounwind
  %temp.vect6065.i = insertelement <16 x double> undef, double %2732, i32 0
  %temp.vect6066.i = insertelement <16 x double> %temp.vect6065.i, double %2733, i32 1
  %temp.vect6067.i = insertelement <16 x double> %temp.vect6066.i, double %2734, i32 2
  %temp.vect6068.i = insertelement <16 x double> %temp.vect6067.i, double %2735, i32 3
  %temp.vect6069.i = insertelement <16 x double> %temp.vect6068.i, double %2736, i32 4
  %temp.vect6070.i = insertelement <16 x double> %temp.vect6069.i, double %2737, i32 5
  %temp.vect6071.i = insertelement <16 x double> %temp.vect6070.i, double %2738, i32 6
  %temp.vect6072.i = insertelement <16 x double> %temp.vect6071.i, double %2739, i32 7
  %temp.vect6073.i = insertelement <16 x double> %temp.vect6072.i, double %2740, i32 8
  %temp.vect6074.i = insertelement <16 x double> %temp.vect6073.i, double %2741, i32 9
  %temp.vect6075.i = insertelement <16 x double> %temp.vect6074.i, double %2742, i32 10
  %temp.vect6076.i = insertelement <16 x double> %temp.vect6075.i, double %2743, i32 11
  %temp.vect6077.i = insertelement <16 x double> %temp.vect6076.i, double %2744, i32 12
  %temp.vect6078.i = insertelement <16 x double> %temp.vect6077.i, double %2745, i32 13
  %temp.vect6079.i = insertelement <16 x double> %temp.vect6078.i, double %2746, i32 14
  %temp.vect6080.i = insertelement <16 x double> %temp.vect6079.i, double %2747, i32 15
  %2748 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2749 = load i64* %2748, align 8
  %2750 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2751 = load i64* %2750, align 8
  %2752 = add i64 %2749, %2751
  %extract6048.i = add i64 %2752, 18137088
  %2753 = getelementptr inbounds double addrspace(1)* %4, i64 %extract6048.i
  %ptrTypeCast6064.i = bitcast double addrspace(1)* %2753 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect6080.i, <16 x double> addrspace(1)* %ptrTypeCast6064.i, align 8
  %2754 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2755 = load i64* %2754, align 8
  %2756 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2757 = load i64* %2756, align 8
  %2758 = add i64 %2755, %2757
  %extract6083.i = add i64 %2758, 18247680
  %2759 = getelementptr inbounds double addrspace(1)* %4, i64 %extract6083.i
  %ptrTypeCast6099.i = bitcast double addrspace(1)* %2759 to <16 x double> addrspace(1)*
  store <16 x double> <double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast6099.i, align 8
  %2760 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2761 = load i64* %2760, align 8
  %2762 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2763 = load i64* %2762, align 8
  %2764 = add i64 %2761, %2763
  %extract6102.i = add i64 %2764, 18358272
  %2765 = getelementptr inbounds double addrspace(1)* %4, i64 %extract6102.i
  %ptrTypeCast6118.i = bitcast double addrspace(1)* %2765 to <16 x double> addrspace(1)*
  store <16 x double> <double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13, double 5.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast6118.i, align 8
  %2766 = fadd <16 x double> %498, <double 0x4028AA58595D6968, double 0x4028AA58595D6968, double 0x4028AA58595D6968, double 0x4028AA58595D6968, double 0x4028AA58595D6968, double 0x4028AA58595D6968, double 0x4028AA58595D6968, double 0x4028AA58595D6968, double 0x4028AA58595D6968, double 0x4028AA58595D6968, double 0x4028AA58595D6968, double 0x4028AA58595D6968, double 0x4028AA58595D6968, double 0x4028AA58595D6968, double 0x4028AA58595D6968, double 0x4028AA58595D6968>
  %2767 = fmul <16 x double> %41, <double 0x40B21597E5215769, double 0x40B21597E5215769, double 0x40B21597E5215769, double 0x40B21597E5215769, double 0x40B21597E5215769, double 0x40B21597E5215769, double 0x40B21597E5215769, double 0x40B21597E5215769, double 0x40B21597E5215769, double 0x40B21597E5215769, double 0x40B21597E5215769, double 0x40B21597E5215769, double 0x40B21597E5215769, double 0x40B21597E5215769, double 0x40B21597E5215769, double 0x40B21597E5215769>
  %2768 = fsub <16 x double> %2766, %2767
  %extract6119.i = extractelement <16 x double> %2768, i32 0
  %extract6120.i = extractelement <16 x double> %2768, i32 1
  %extract6121.i = extractelement <16 x double> %2768, i32 2
  %extract6122.i = extractelement <16 x double> %2768, i32 3
  %extract6123.i = extractelement <16 x double> %2768, i32 4
  %extract6124.i = extractelement <16 x double> %2768, i32 5
  %extract6125.i = extractelement <16 x double> %2768, i32 6
  %extract6126.i = extractelement <16 x double> %2768, i32 7
  %extract6127.i = extractelement <16 x double> %2768, i32 8
  %extract6128.i = extractelement <16 x double> %2768, i32 9
  %extract6129.i = extractelement <16 x double> %2768, i32 10
  %extract6130.i = extractelement <16 x double> %2768, i32 11
  %extract6131.i = extractelement <16 x double> %2768, i32 12
  %extract6132.i = extractelement <16 x double> %2768, i32 13
  %extract6133.i = extractelement <16 x double> %2768, i32 14
  %extract6134.i = extractelement <16 x double> %2768, i32 15
  %2769 = call double @_Z3expd(double %extract6119.i) nounwind
  %2770 = call double @_Z3expd(double %extract6120.i) nounwind
  %2771 = call double @_Z3expd(double %extract6121.i) nounwind
  %2772 = call double @_Z3expd(double %extract6122.i) nounwind
  %2773 = call double @_Z3expd(double %extract6123.i) nounwind
  %2774 = call double @_Z3expd(double %extract6124.i) nounwind
  %2775 = call double @_Z3expd(double %extract6125.i) nounwind
  %2776 = call double @_Z3expd(double %extract6126.i) nounwind
  %2777 = call double @_Z3expd(double %extract6127.i) nounwind
  %2778 = call double @_Z3expd(double %extract6128.i) nounwind
  %2779 = call double @_Z3expd(double %extract6129.i) nounwind
  %2780 = call double @_Z3expd(double %extract6130.i) nounwind
  %2781 = call double @_Z3expd(double %extract6131.i) nounwind
  %2782 = call double @_Z3expd(double %extract6132.i) nounwind
  %2783 = call double @_Z3expd(double %extract6133.i) nounwind
  %2784 = call double @_Z3expd(double %extract6134.i) nounwind
  %temp.vect6154.i = insertelement <16 x double> undef, double %2769, i32 0
  %temp.vect6155.i = insertelement <16 x double> %temp.vect6154.i, double %2770, i32 1
  %temp.vect6156.i = insertelement <16 x double> %temp.vect6155.i, double %2771, i32 2
  %temp.vect6157.i = insertelement <16 x double> %temp.vect6156.i, double %2772, i32 3
  %temp.vect6158.i = insertelement <16 x double> %temp.vect6157.i, double %2773, i32 4
  %temp.vect6159.i = insertelement <16 x double> %temp.vect6158.i, double %2774, i32 5
  %temp.vect6160.i = insertelement <16 x double> %temp.vect6159.i, double %2775, i32 6
  %temp.vect6161.i = insertelement <16 x double> %temp.vect6160.i, double %2776, i32 7
  %temp.vect6162.i = insertelement <16 x double> %temp.vect6161.i, double %2777, i32 8
  %temp.vect6163.i = insertelement <16 x double> %temp.vect6162.i, double %2778, i32 9
  %temp.vect6164.i = insertelement <16 x double> %temp.vect6163.i, double %2779, i32 10
  %temp.vect6165.i = insertelement <16 x double> %temp.vect6164.i, double %2780, i32 11
  %temp.vect6166.i = insertelement <16 x double> %temp.vect6165.i, double %2781, i32 12
  %temp.vect6167.i = insertelement <16 x double> %temp.vect6166.i, double %2782, i32 13
  %temp.vect6168.i = insertelement <16 x double> %temp.vect6167.i, double %2783, i32 14
  %temp.vect6169.i = insertelement <16 x double> %temp.vect6168.i, double %2784, i32 15
  %2785 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2786 = load i64* %2785, align 8
  %2787 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2788 = load i64* %2787, align 8
  %2789 = add i64 %2786, %2788
  %extract6137.i = add i64 %2789, 18468864
  %2790 = getelementptr inbounds double addrspace(1)* %4, i64 %extract6137.i
  %ptrTypeCast6153.i = bitcast double addrspace(1)* %2790 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect6169.i, <16 x double> addrspace(1)* %ptrTypeCast6153.i, align 8
  %2791 = fmul <16 x double> %41, <double 0x40AE458963DC486B, double 0x40AE458963DC486B, double 0x40AE458963DC486B, double 0x40AE458963DC486B, double 0x40AE458963DC486B, double 0x40AE458963DC486B, double 0x40AE458963DC486B, double 0x40AE458963DC486B, double 0x40AE458963DC486B, double 0x40AE458963DC486B, double 0x40AE458963DC486B, double 0x40AE458963DC486B, double 0x40AE458963DC486B, double 0x40AE458963DC486B, double 0x40AE458963DC486B, double 0x40AE458963DC486B>
  %2792 = fsub <16 x double> <double 0x403A85B9496249A1, double 0x403A85B9496249A1, double 0x403A85B9496249A1, double 0x403A85B9496249A1, double 0x403A85B9496249A1, double 0x403A85B9496249A1, double 0x403A85B9496249A1, double 0x403A85B9496249A1, double 0x403A85B9496249A1, double 0x403A85B9496249A1, double 0x403A85B9496249A1, double 0x403A85B9496249A1, double 0x403A85B9496249A1, double 0x403A85B9496249A1, double 0x403A85B9496249A1, double 0x403A85B9496249A1>, %2791
  %extract6170.i = extractelement <16 x double> %2792, i32 0
  %extract6171.i = extractelement <16 x double> %2792, i32 1
  %extract6172.i = extractelement <16 x double> %2792, i32 2
  %extract6173.i = extractelement <16 x double> %2792, i32 3
  %extract6174.i = extractelement <16 x double> %2792, i32 4
  %extract6175.i = extractelement <16 x double> %2792, i32 5
  %extract6176.i = extractelement <16 x double> %2792, i32 6
  %extract6177.i = extractelement <16 x double> %2792, i32 7
  %extract6178.i = extractelement <16 x double> %2792, i32 8
  %extract6179.i = extractelement <16 x double> %2792, i32 9
  %extract6180.i = extractelement <16 x double> %2792, i32 10
  %extract6181.i = extractelement <16 x double> %2792, i32 11
  %extract6182.i = extractelement <16 x double> %2792, i32 12
  %extract6183.i = extractelement <16 x double> %2792, i32 13
  %extract6184.i = extractelement <16 x double> %2792, i32 14
  %extract6185.i = extractelement <16 x double> %2792, i32 15
  %2793 = call double @_Z3expd(double %extract6170.i) nounwind
  %2794 = call double @_Z3expd(double %extract6171.i) nounwind
  %2795 = call double @_Z3expd(double %extract6172.i) nounwind
  %2796 = call double @_Z3expd(double %extract6173.i) nounwind
  %2797 = call double @_Z3expd(double %extract6174.i) nounwind
  %2798 = call double @_Z3expd(double %extract6175.i) nounwind
  %2799 = call double @_Z3expd(double %extract6176.i) nounwind
  %2800 = call double @_Z3expd(double %extract6177.i) nounwind
  %2801 = call double @_Z3expd(double %extract6178.i) nounwind
  %2802 = call double @_Z3expd(double %extract6179.i) nounwind
  %2803 = call double @_Z3expd(double %extract6180.i) nounwind
  %2804 = call double @_Z3expd(double %extract6181.i) nounwind
  %2805 = call double @_Z3expd(double %extract6182.i) nounwind
  %2806 = call double @_Z3expd(double %extract6183.i) nounwind
  %2807 = call double @_Z3expd(double %extract6184.i) nounwind
  %2808 = call double @_Z3expd(double %extract6185.i) nounwind
  %temp.vect6205.i = insertelement <16 x double> undef, double %2793, i32 0
  %temp.vect6206.i = insertelement <16 x double> %temp.vect6205.i, double %2794, i32 1
  %temp.vect6207.i = insertelement <16 x double> %temp.vect6206.i, double %2795, i32 2
  %temp.vect6208.i = insertelement <16 x double> %temp.vect6207.i, double %2796, i32 3
  %temp.vect6209.i = insertelement <16 x double> %temp.vect6208.i, double %2797, i32 4
  %temp.vect6210.i = insertelement <16 x double> %temp.vect6209.i, double %2798, i32 5
  %temp.vect6211.i = insertelement <16 x double> %temp.vect6210.i, double %2799, i32 6
  %temp.vect6212.i = insertelement <16 x double> %temp.vect6211.i, double %2800, i32 7
  %temp.vect6213.i = insertelement <16 x double> %temp.vect6212.i, double %2801, i32 8
  %temp.vect6214.i = insertelement <16 x double> %temp.vect6213.i, double %2802, i32 9
  %temp.vect6215.i = insertelement <16 x double> %temp.vect6214.i, double %2803, i32 10
  %temp.vect6216.i = insertelement <16 x double> %temp.vect6215.i, double %2804, i32 11
  %temp.vect6217.i = insertelement <16 x double> %temp.vect6216.i, double %2805, i32 12
  %temp.vect6218.i = insertelement <16 x double> %temp.vect6217.i, double %2806, i32 13
  %temp.vect6219.i = insertelement <16 x double> %temp.vect6218.i, double %2807, i32 14
  %temp.vect6220.i = insertelement <16 x double> %temp.vect6219.i, double %2808, i32 15
  %2809 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2810 = load i64* %2809, align 8
  %2811 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2812 = load i64* %2811, align 8
  %2813 = add i64 %2810, %2812
  %extract6188.i = add i64 %2813, 18579456
  %2814 = getelementptr inbounds double addrspace(1)* %4, i64 %extract6188.i
  %ptrTypeCast6204.i = bitcast double addrspace(1)* %2814 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect6220.i, <16 x double> addrspace(1)* %ptrTypeCast6204.i, align 8
  %2815 = fmul <16 x double> %temp.vect97.i, <double 9.900000e-01, double 9.900000e-01, double 9.900000e-01, double 9.900000e-01, double 9.900000e-01, double 9.900000e-01, double 9.900000e-01, double 9.900000e-01, double 9.900000e-01, double 9.900000e-01, double 9.900000e-01, double 9.900000e-01, double 9.900000e-01, double 9.900000e-01, double 9.900000e-01, double 9.900000e-01>
  %2816 = fsub <16 x double> <double 0x404465B30A83E781, double 0x404465B30A83E781, double 0x404465B30A83E781, double 0x404465B30A83E781, double 0x404465B30A83E781, double 0x404465B30A83E781, double 0x404465B30A83E781, double 0x404465B30A83E781, double 0x404465B30A83E781, double 0x404465B30A83E781, double 0x404465B30A83E781, double 0x404465B30A83E781, double 0x404465B30A83E781, double 0x404465B30A83E781, double 0x404465B30A83E781, double 0x404465B30A83E781>, %2815
  %2817 = fmul <16 x double> %41, <double 0x4088D8A89F40A287, double 0x4088D8A89F40A287, double 0x4088D8A89F40A287, double 0x4088D8A89F40A287, double 0x4088D8A89F40A287, double 0x4088D8A89F40A287, double 0x4088D8A89F40A287, double 0x4088D8A89F40A287, double 0x4088D8A89F40A287, double 0x4088D8A89F40A287, double 0x4088D8A89F40A287, double 0x4088D8A89F40A287, double 0x4088D8A89F40A287, double 0x4088D8A89F40A287, double 0x4088D8A89F40A287, double 0x4088D8A89F40A287>
  %2818 = fsub <16 x double> %2816, %2817
  %extract6221.i = extractelement <16 x double> %2818, i32 0
  %extract6222.i = extractelement <16 x double> %2818, i32 1
  %extract6223.i = extractelement <16 x double> %2818, i32 2
  %extract6224.i = extractelement <16 x double> %2818, i32 3
  %extract6225.i = extractelement <16 x double> %2818, i32 4
  %extract6226.i = extractelement <16 x double> %2818, i32 5
  %extract6227.i = extractelement <16 x double> %2818, i32 6
  %extract6228.i = extractelement <16 x double> %2818, i32 7
  %extract6229.i = extractelement <16 x double> %2818, i32 8
  %extract6230.i = extractelement <16 x double> %2818, i32 9
  %extract6231.i = extractelement <16 x double> %2818, i32 10
  %extract6232.i = extractelement <16 x double> %2818, i32 11
  %extract6233.i = extractelement <16 x double> %2818, i32 12
  %extract6234.i = extractelement <16 x double> %2818, i32 13
  %extract6235.i = extractelement <16 x double> %2818, i32 14
  %extract6236.i = extractelement <16 x double> %2818, i32 15
  %2819 = call double @_Z3expd(double %extract6221.i) nounwind
  %2820 = call double @_Z3expd(double %extract6222.i) nounwind
  %2821 = call double @_Z3expd(double %extract6223.i) nounwind
  %2822 = call double @_Z3expd(double %extract6224.i) nounwind
  %2823 = call double @_Z3expd(double %extract6225.i) nounwind
  %2824 = call double @_Z3expd(double %extract6226.i) nounwind
  %2825 = call double @_Z3expd(double %extract6227.i) nounwind
  %2826 = call double @_Z3expd(double %extract6228.i) nounwind
  %2827 = call double @_Z3expd(double %extract6229.i) nounwind
  %2828 = call double @_Z3expd(double %extract6230.i) nounwind
  %2829 = call double @_Z3expd(double %extract6231.i) nounwind
  %2830 = call double @_Z3expd(double %extract6232.i) nounwind
  %2831 = call double @_Z3expd(double %extract6233.i) nounwind
  %2832 = call double @_Z3expd(double %extract6234.i) nounwind
  %2833 = call double @_Z3expd(double %extract6235.i) nounwind
  %2834 = call double @_Z3expd(double %extract6236.i) nounwind
  %temp.vect6256.i = insertelement <16 x double> undef, double %2819, i32 0
  %temp.vect6257.i = insertelement <16 x double> %temp.vect6256.i, double %2820, i32 1
  %temp.vect6258.i = insertelement <16 x double> %temp.vect6257.i, double %2821, i32 2
  %temp.vect6259.i = insertelement <16 x double> %temp.vect6258.i, double %2822, i32 3
  %temp.vect6260.i = insertelement <16 x double> %temp.vect6259.i, double %2823, i32 4
  %temp.vect6261.i = insertelement <16 x double> %temp.vect6260.i, double %2824, i32 5
  %temp.vect6262.i = insertelement <16 x double> %temp.vect6261.i, double %2825, i32 6
  %temp.vect6263.i = insertelement <16 x double> %temp.vect6262.i, double %2826, i32 7
  %temp.vect6264.i = insertelement <16 x double> %temp.vect6263.i, double %2827, i32 8
  %temp.vect6265.i = insertelement <16 x double> %temp.vect6264.i, double %2828, i32 9
  %temp.vect6266.i = insertelement <16 x double> %temp.vect6265.i, double %2829, i32 10
  %temp.vect6267.i = insertelement <16 x double> %temp.vect6266.i, double %2830, i32 11
  %temp.vect6268.i = insertelement <16 x double> %temp.vect6267.i, double %2831, i32 12
  %temp.vect6269.i = insertelement <16 x double> %temp.vect6268.i, double %2832, i32 13
  %temp.vect6270.i = insertelement <16 x double> %temp.vect6269.i, double %2833, i32 14
  %temp.vect6271.i = insertelement <16 x double> %temp.vect6270.i, double %2834, i32 15
  %2835 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2836 = load i64* %2835, align 8
  %2837 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2838 = load i64* %2837, align 8
  %2839 = add i64 %2836, %2838
  %extract6239.i = add i64 %2839, 18690048
  %2840 = getelementptr inbounds double addrspace(1)* %4, i64 %extract6239.i
  %ptrTypeCast6255.i = bitcast double addrspace(1)* %2840 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect6271.i, <16 x double> addrspace(1)* %ptrTypeCast6255.i, align 8
  %2841 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2842 = load i64* %2841, align 8
  %2843 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2844 = load i64* %2843, align 8
  %2845 = add i64 %2842, %2844
  %extract6274.i = add i64 %2845, 18800640
  %2846 = getelementptr inbounds double addrspace(1)* %4, i64 %extract6274.i
  %ptrTypeCast6290.i = bitcast double addrspace(1)* %2846 to <16 x double> addrspace(1)*
  store <16 x double> <double 2.000000e+12, double 2.000000e+12, double 2.000000e+12, double 2.000000e+12, double 2.000000e+12, double 2.000000e+12, double 2.000000e+12, double 2.000000e+12, double 2.000000e+12, double 2.000000e+12, double 2.000000e+12, double 2.000000e+12, double 2.000000e+12, double 2.000000e+12, double 2.000000e+12, double 2.000000e+12>, <16 x double> addrspace(1)* %ptrTypeCast6290.i, align 8
  %2847 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2848 = load i64* %2847, align 8
  %2849 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2850 = load i64* %2849, align 8
  %2851 = add i64 %2848, %2850
  %extract6293.i = add i64 %2851, 18911232
  %2852 = getelementptr inbounds double addrspace(1)* %4, i64 %extract6293.i
  %ptrTypeCast6309.i = bitcast double addrspace(1)* %2852 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.604000e+13, double 1.604000e+13, double 1.604000e+13, double 1.604000e+13, double 1.604000e+13, double 1.604000e+13, double 1.604000e+13, double 1.604000e+13, double 1.604000e+13, double 1.604000e+13, double 1.604000e+13, double 1.604000e+13, double 1.604000e+13, double 1.604000e+13, double 1.604000e+13, double 1.604000e+13>, <16 x double> addrspace(1)* %ptrTypeCast6309.i, align 8
  %2853 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2854 = load i64* %2853, align 8
  %2855 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2856 = load i64* %2855, align 8
  %2857 = add i64 %2854, %2856
  %extract6312.i = add i64 %2857, 19021824
  %2858 = getelementptr inbounds double addrspace(1)* %4, i64 %extract6312.i
  %ptrTypeCast6328.i = bitcast double addrspace(1)* %2858 to <16 x double> addrspace(1)*
  store <16 x double> <double 8.020000e+13, double 8.020000e+13, double 8.020000e+13, double 8.020000e+13, double 8.020000e+13, double 8.020000e+13, double 8.020000e+13, double 8.020000e+13, double 8.020000e+13, double 8.020000e+13, double 8.020000e+13, double 8.020000e+13, double 8.020000e+13, double 8.020000e+13, double 8.020000e+13, double 8.020000e+13>, <16 x double> addrspace(1)* %ptrTypeCast6328.i, align 8
  %2859 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2860 = load i64* %2859, align 8
  %2861 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2862 = load i64* %2861, align 8
  %2863 = add i64 %2860, %2862
  %extract6331.i = add i64 %2863, 19132416
  %2864 = getelementptr inbounds double addrspace(1)* %4, i64 %extract6331.i
  %ptrTypeCast6347.i = bitcast double addrspace(1)* %2864 to <16 x double> addrspace(1)*
  store <16 x double> <double 2.000000e+10, double 2.000000e+10, double 2.000000e+10, double 2.000000e+10, double 2.000000e+10, double 2.000000e+10, double 2.000000e+10, double 2.000000e+10, double 2.000000e+10, double 2.000000e+10, double 2.000000e+10, double 2.000000e+10, double 2.000000e+10, double 2.000000e+10, double 2.000000e+10, double 2.000000e+10>, <16 x double> addrspace(1)* %ptrTypeCast6347.i, align 8
  %2865 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2866 = load i64* %2865, align 8
  %2867 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2868 = load i64* %2867, align 8
  %2869 = add i64 %2866, %2868
  %extract6350.i = add i64 %2869, 19243008
  %2870 = getelementptr inbounds double addrspace(1)* %4, i64 %extract6350.i
  %ptrTypeCast6366.i = bitcast double addrspace(1)* %2870 to <16 x double> addrspace(1)*
  store <16 x double> <double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11>, <16 x double> addrspace(1)* %ptrTypeCast6366.i, align 8
  %2871 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2872 = load i64* %2871, align 8
  %2873 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2874 = load i64* %2873, align 8
  %2875 = add i64 %2872, %2874
  %extract6369.i = add i64 %2875, 19353600
  %2876 = getelementptr inbounds double addrspace(1)* %4, i64 %extract6369.i
  %ptrTypeCast6385.i = bitcast double addrspace(1)* %2876 to <16 x double> addrspace(1)*
  store <16 x double> <double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11, double 3.000000e+11>, <16 x double> addrspace(1)* %ptrTypeCast6385.i, align 8
  %2877 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2878 = load i64* %2877, align 8
  %2879 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2880 = load i64* %2879, align 8
  %2881 = add i64 %2878, %2880
  %extract6388.i = add i64 %2881, 19464192
  %2882 = getelementptr inbounds double addrspace(1)* %4, i64 %extract6388.i
  %ptrTypeCast6404.i = bitcast double addrspace(1)* %2882 to <16 x double> addrspace(1)*
  store <16 x double> <double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13>, <16 x double> addrspace(1)* %ptrTypeCast6404.i, align 8
  %2883 = fmul <16 x double> %41, <double 0x407EA220E8427419, double 0x407EA220E8427419, double 0x407EA220E8427419, double 0x407EA220E8427419, double 0x407EA220E8427419, double 0x407EA220E8427419, double 0x407EA220E8427419, double 0x407EA220E8427419, double 0x407EA220E8427419, double 0x407EA220E8427419, double 0x407EA220E8427419, double 0x407EA220E8427419, double 0x407EA220E8427419, double 0x407EA220E8427419, double 0x407EA220E8427419, double 0x407EA220E8427419>
  %2884 = fsub <16 x double> <double 0x4036E2F77D7A7F22, double 0x4036E2F77D7A7F22, double 0x4036E2F77D7A7F22, double 0x4036E2F77D7A7F22, double 0x4036E2F77D7A7F22, double 0x4036E2F77D7A7F22, double 0x4036E2F77D7A7F22, double 0x4036E2F77D7A7F22, double 0x4036E2F77D7A7F22, double 0x4036E2F77D7A7F22, double 0x4036E2F77D7A7F22, double 0x4036E2F77D7A7F22, double 0x4036E2F77D7A7F22, double 0x4036E2F77D7A7F22, double 0x4036E2F77D7A7F22, double 0x4036E2F77D7A7F22>, %2883
  %extract6405.i = extractelement <16 x double> %2884, i32 0
  %extract6406.i = extractelement <16 x double> %2884, i32 1
  %extract6407.i = extractelement <16 x double> %2884, i32 2
  %extract6408.i = extractelement <16 x double> %2884, i32 3
  %extract6409.i = extractelement <16 x double> %2884, i32 4
  %extract6410.i = extractelement <16 x double> %2884, i32 5
  %extract6411.i = extractelement <16 x double> %2884, i32 6
  %extract6412.i = extractelement <16 x double> %2884, i32 7
  %extract6413.i = extractelement <16 x double> %2884, i32 8
  %extract6414.i = extractelement <16 x double> %2884, i32 9
  %extract6415.i = extractelement <16 x double> %2884, i32 10
  %extract6416.i = extractelement <16 x double> %2884, i32 11
  %extract6417.i = extractelement <16 x double> %2884, i32 12
  %extract6418.i = extractelement <16 x double> %2884, i32 13
  %extract6419.i = extractelement <16 x double> %2884, i32 14
  %extract6420.i = extractelement <16 x double> %2884, i32 15
  %2885 = call double @_Z3expd(double %extract6405.i) nounwind
  %2886 = call double @_Z3expd(double %extract6406.i) nounwind
  %2887 = call double @_Z3expd(double %extract6407.i) nounwind
  %2888 = call double @_Z3expd(double %extract6408.i) nounwind
  %2889 = call double @_Z3expd(double %extract6409.i) nounwind
  %2890 = call double @_Z3expd(double %extract6410.i) nounwind
  %2891 = call double @_Z3expd(double %extract6411.i) nounwind
  %2892 = call double @_Z3expd(double %extract6412.i) nounwind
  %2893 = call double @_Z3expd(double %extract6413.i) nounwind
  %2894 = call double @_Z3expd(double %extract6414.i) nounwind
  %2895 = call double @_Z3expd(double %extract6415.i) nounwind
  %2896 = call double @_Z3expd(double %extract6416.i) nounwind
  %2897 = call double @_Z3expd(double %extract6417.i) nounwind
  %2898 = call double @_Z3expd(double %extract6418.i) nounwind
  %2899 = call double @_Z3expd(double %extract6419.i) nounwind
  %2900 = call double @_Z3expd(double %extract6420.i) nounwind
  %temp.vect6440.i = insertelement <16 x double> undef, double %2885, i32 0
  %temp.vect6441.i = insertelement <16 x double> %temp.vect6440.i, double %2886, i32 1
  %temp.vect6442.i = insertelement <16 x double> %temp.vect6441.i, double %2887, i32 2
  %temp.vect6443.i = insertelement <16 x double> %temp.vect6442.i, double %2888, i32 3
  %temp.vect6444.i = insertelement <16 x double> %temp.vect6443.i, double %2889, i32 4
  %temp.vect6445.i = insertelement <16 x double> %temp.vect6444.i, double %2890, i32 5
  %temp.vect6446.i = insertelement <16 x double> %temp.vect6445.i, double %2891, i32 6
  %temp.vect6447.i = insertelement <16 x double> %temp.vect6446.i, double %2892, i32 7
  %temp.vect6448.i = insertelement <16 x double> %temp.vect6447.i, double %2893, i32 8
  %temp.vect6449.i = insertelement <16 x double> %temp.vect6448.i, double %2894, i32 9
  %temp.vect6450.i = insertelement <16 x double> %temp.vect6449.i, double %2895, i32 10
  %temp.vect6451.i = insertelement <16 x double> %temp.vect6450.i, double %2896, i32 11
  %temp.vect6452.i = insertelement <16 x double> %temp.vect6451.i, double %2897, i32 12
  %temp.vect6453.i = insertelement <16 x double> %temp.vect6452.i, double %2898, i32 13
  %temp.vect6454.i = insertelement <16 x double> %temp.vect6453.i, double %2899, i32 14
  %temp.vect6455.i = insertelement <16 x double> %temp.vect6454.i, double %2900, i32 15
  %2901 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2902 = load i64* %2901, align 8
  %2903 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2904 = load i64* %2903, align 8
  %2905 = add i64 %2902, %2904
  %extract6423.i = add i64 %2905, 19574784
  %2906 = getelementptr inbounds double addrspace(1)* %4, i64 %extract6423.i
  %ptrTypeCast6439.i = bitcast double addrspace(1)* %2906 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect6455.i, <16 x double> addrspace(1)* %ptrTypeCast6439.i, align 8
  %2907 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2908 = load i64* %2907, align 8
  %2909 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2910 = load i64* %2909, align 8
  %2911 = add i64 %2908, %2910
  %extract6458.i = add i64 %2911, 19685376
  %2912 = getelementptr inbounds double addrspace(1)* %4, i64 %extract6458.i
  %ptrTypeCast6474.i = bitcast double addrspace(1)* %2912 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.200000e+14, double 1.200000e+14, double 1.200000e+14, double 1.200000e+14, double 1.200000e+14, double 1.200000e+14, double 1.200000e+14, double 1.200000e+14, double 1.200000e+14, double 1.200000e+14, double 1.200000e+14, double 1.200000e+14, double 1.200000e+14, double 1.200000e+14, double 1.200000e+14, double 1.200000e+14>, <16 x double> addrspace(1)* %ptrTypeCast6474.i, align 8
  %2913 = fmul <16 x double> %temp.vect97.i, <double 1.900000e+00, double 1.900000e+00, double 1.900000e+00, double 1.900000e+00, double 1.900000e+00, double 1.900000e+00, double 1.900000e+00, double 1.900000e+00, double 1.900000e+00, double 1.900000e+00, double 1.900000e+00, double 1.900000e+00, double 1.900000e+00, double 1.900000e+00, double 1.900000e+00, double 1.900000e+00>
  %2914 = fadd <16 x double> %2913, <double 0x40328F792C3BC82D, double 0x40328F792C3BC82D, double 0x40328F792C3BC82D, double 0x40328F792C3BC82D, double 0x40328F792C3BC82D, double 0x40328F792C3BC82D, double 0x40328F792C3BC82D, double 0x40328F792C3BC82D, double 0x40328F792C3BC82D, double 0x40328F792C3BC82D, double 0x40328F792C3BC82D, double 0x40328F792C3BC82D, double 0x40328F792C3BC82D, double 0x40328F792C3BC82D, double 0x40328F792C3BC82D, double 0x40328F792C3BC82D>
  %2915 = fmul <16 x double> %41, <double 0x40AD9A7169C23B79, double 0x40AD9A7169C23B79, double 0x40AD9A7169C23B79, double 0x40AD9A7169C23B79, double 0x40AD9A7169C23B79, double 0x40AD9A7169C23B79, double 0x40AD9A7169C23B79, double 0x40AD9A7169C23B79, double 0x40AD9A7169C23B79, double 0x40AD9A7169C23B79, double 0x40AD9A7169C23B79, double 0x40AD9A7169C23B79, double 0x40AD9A7169C23B79, double 0x40AD9A7169C23B79, double 0x40AD9A7169C23B79, double 0x40AD9A7169C23B79>
  %2916 = fsub <16 x double> %2914, %2915
  %extract6475.i = extractelement <16 x double> %2916, i32 0
  %extract6476.i = extractelement <16 x double> %2916, i32 1
  %extract6477.i = extractelement <16 x double> %2916, i32 2
  %extract6478.i = extractelement <16 x double> %2916, i32 3
  %extract6479.i = extractelement <16 x double> %2916, i32 4
  %extract6480.i = extractelement <16 x double> %2916, i32 5
  %extract6481.i = extractelement <16 x double> %2916, i32 6
  %extract6482.i = extractelement <16 x double> %2916, i32 7
  %extract6483.i = extractelement <16 x double> %2916, i32 8
  %extract6484.i = extractelement <16 x double> %2916, i32 9
  %extract6485.i = extractelement <16 x double> %2916, i32 10
  %extract6486.i = extractelement <16 x double> %2916, i32 11
  %extract6487.i = extractelement <16 x double> %2916, i32 12
  %extract6488.i = extractelement <16 x double> %2916, i32 13
  %extract6489.i = extractelement <16 x double> %2916, i32 14
  %extract6490.i = extractelement <16 x double> %2916, i32 15
  %2917 = call double @_Z3expd(double %extract6475.i) nounwind
  %2918 = call double @_Z3expd(double %extract6476.i) nounwind
  %2919 = call double @_Z3expd(double %extract6477.i) nounwind
  %2920 = call double @_Z3expd(double %extract6478.i) nounwind
  %2921 = call double @_Z3expd(double %extract6479.i) nounwind
  %2922 = call double @_Z3expd(double %extract6480.i) nounwind
  %2923 = call double @_Z3expd(double %extract6481.i) nounwind
  %2924 = call double @_Z3expd(double %extract6482.i) nounwind
  %2925 = call double @_Z3expd(double %extract6483.i) nounwind
  %2926 = call double @_Z3expd(double %extract6484.i) nounwind
  %2927 = call double @_Z3expd(double %extract6485.i) nounwind
  %2928 = call double @_Z3expd(double %extract6486.i) nounwind
  %2929 = call double @_Z3expd(double %extract6487.i) nounwind
  %2930 = call double @_Z3expd(double %extract6488.i) nounwind
  %2931 = call double @_Z3expd(double %extract6489.i) nounwind
  %2932 = call double @_Z3expd(double %extract6490.i) nounwind
  %temp.vect6510.i = insertelement <16 x double> undef, double %2917, i32 0
  %temp.vect6511.i = insertelement <16 x double> %temp.vect6510.i, double %2918, i32 1
  %temp.vect6512.i = insertelement <16 x double> %temp.vect6511.i, double %2919, i32 2
  %temp.vect6513.i = insertelement <16 x double> %temp.vect6512.i, double %2920, i32 3
  %temp.vect6514.i = insertelement <16 x double> %temp.vect6513.i, double %2921, i32 4
  %temp.vect6515.i = insertelement <16 x double> %temp.vect6514.i, double %2922, i32 5
  %temp.vect6516.i = insertelement <16 x double> %temp.vect6515.i, double %2923, i32 6
  %temp.vect6517.i = insertelement <16 x double> %temp.vect6516.i, double %2924, i32 7
  %temp.vect6518.i = insertelement <16 x double> %temp.vect6517.i, double %2925, i32 8
  %temp.vect6519.i = insertelement <16 x double> %temp.vect6518.i, double %2926, i32 9
  %temp.vect6520.i = insertelement <16 x double> %temp.vect6519.i, double %2927, i32 10
  %temp.vect6521.i = insertelement <16 x double> %temp.vect6520.i, double %2928, i32 11
  %temp.vect6522.i = insertelement <16 x double> %temp.vect6521.i, double %2929, i32 12
  %temp.vect6523.i = insertelement <16 x double> %temp.vect6522.i, double %2930, i32 13
  %temp.vect6524.i = insertelement <16 x double> %temp.vect6523.i, double %2931, i32 14
  %temp.vect6525.i = insertelement <16 x double> %temp.vect6524.i, double %2932, i32 15
  %2933 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2934 = load i64* %2933, align 8
  %2935 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2936 = load i64* %2935, align 8
  %2937 = add i64 %2934, %2936
  %extract6493.i = add i64 %2937, 19795968
  %2938 = getelementptr inbounds double addrspace(1)* %4, i64 %extract6493.i
  %ptrTypeCast6509.i = bitcast double addrspace(1)* %2938 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect6525.i, <16 x double> addrspace(1)* %ptrTypeCast6509.i, align 8
  %2939 = fmul <16 x double> %temp.vect97.i, <double 1.920000e+00, double 1.920000e+00, double 1.920000e+00, double 1.920000e+00, double 1.920000e+00, double 1.920000e+00, double 1.920000e+00, double 1.920000e+00, double 1.920000e+00, double 1.920000e+00, double 1.920000e+00, double 1.920000e+00, double 1.920000e+00, double 1.920000e+00, double 1.920000e+00, double 1.920000e+00>
  %2940 = fadd <16 x double> %2939, <double 0x4032502706D50657, double 0x4032502706D50657, double 0x4032502706D50657, double 0x4032502706D50657, double 0x4032502706D50657, double 0x4032502706D50657, double 0x4032502706D50657, double 0x4032502706D50657, double 0x4032502706D50657, double 0x4032502706D50657, double 0x4032502706D50657, double 0x4032502706D50657, double 0x4032502706D50657, double 0x4032502706D50657, double 0x4032502706D50657, double 0x4032502706D50657>
  %2941 = fmul <16 x double> %41, <double 0x40A65E9B0DD82FD7, double 0x40A65E9B0DD82FD7, double 0x40A65E9B0DD82FD7, double 0x40A65E9B0DD82FD7, double 0x40A65E9B0DD82FD7, double 0x40A65E9B0DD82FD7, double 0x40A65E9B0DD82FD7, double 0x40A65E9B0DD82FD7, double 0x40A65E9B0DD82FD7, double 0x40A65E9B0DD82FD7, double 0x40A65E9B0DD82FD7, double 0x40A65E9B0DD82FD7, double 0x40A65E9B0DD82FD7, double 0x40A65E9B0DD82FD7, double 0x40A65E9B0DD82FD7, double 0x40A65E9B0DD82FD7>
  %2942 = fsub <16 x double> %2940, %2941
  %extract6526.i = extractelement <16 x double> %2942, i32 0
  %extract6527.i = extractelement <16 x double> %2942, i32 1
  %extract6528.i = extractelement <16 x double> %2942, i32 2
  %extract6529.i = extractelement <16 x double> %2942, i32 3
  %extract6530.i = extractelement <16 x double> %2942, i32 4
  %extract6531.i = extractelement <16 x double> %2942, i32 5
  %extract6532.i = extractelement <16 x double> %2942, i32 6
  %extract6533.i = extractelement <16 x double> %2942, i32 7
  %extract6534.i = extractelement <16 x double> %2942, i32 8
  %extract6535.i = extractelement <16 x double> %2942, i32 9
  %extract6536.i = extractelement <16 x double> %2942, i32 10
  %extract6537.i = extractelement <16 x double> %2942, i32 11
  %extract6538.i = extractelement <16 x double> %2942, i32 12
  %extract6539.i = extractelement <16 x double> %2942, i32 13
  %extract6540.i = extractelement <16 x double> %2942, i32 14
  %extract6541.i = extractelement <16 x double> %2942, i32 15
  %2943 = call double @_Z3expd(double %extract6526.i) nounwind
  %2944 = call double @_Z3expd(double %extract6527.i) nounwind
  %2945 = call double @_Z3expd(double %extract6528.i) nounwind
  %2946 = call double @_Z3expd(double %extract6529.i) nounwind
  %2947 = call double @_Z3expd(double %extract6530.i) nounwind
  %2948 = call double @_Z3expd(double %extract6531.i) nounwind
  %2949 = call double @_Z3expd(double %extract6532.i) nounwind
  %2950 = call double @_Z3expd(double %extract6533.i) nounwind
  %2951 = call double @_Z3expd(double %extract6534.i) nounwind
  %2952 = call double @_Z3expd(double %extract6535.i) nounwind
  %2953 = call double @_Z3expd(double %extract6536.i) nounwind
  %2954 = call double @_Z3expd(double %extract6537.i) nounwind
  %2955 = call double @_Z3expd(double %extract6538.i) nounwind
  %2956 = call double @_Z3expd(double %extract6539.i) nounwind
  %2957 = call double @_Z3expd(double %extract6540.i) nounwind
  %2958 = call double @_Z3expd(double %extract6541.i) nounwind
  %temp.vect6561.i = insertelement <16 x double> undef, double %2943, i32 0
  %temp.vect6562.i = insertelement <16 x double> %temp.vect6561.i, double %2944, i32 1
  %temp.vect6563.i = insertelement <16 x double> %temp.vect6562.i, double %2945, i32 2
  %temp.vect6564.i = insertelement <16 x double> %temp.vect6563.i, double %2946, i32 3
  %temp.vect6565.i = insertelement <16 x double> %temp.vect6564.i, double %2947, i32 4
  %temp.vect6566.i = insertelement <16 x double> %temp.vect6565.i, double %2948, i32 5
  %temp.vect6567.i = insertelement <16 x double> %temp.vect6566.i, double %2949, i32 6
  %temp.vect6568.i = insertelement <16 x double> %temp.vect6567.i, double %2950, i32 7
  %temp.vect6569.i = insertelement <16 x double> %temp.vect6568.i, double %2951, i32 8
  %temp.vect6570.i = insertelement <16 x double> %temp.vect6569.i, double %2952, i32 9
  %temp.vect6571.i = insertelement <16 x double> %temp.vect6570.i, double %2953, i32 10
  %temp.vect6572.i = insertelement <16 x double> %temp.vect6571.i, double %2954, i32 11
  %temp.vect6573.i = insertelement <16 x double> %temp.vect6572.i, double %2955, i32 12
  %temp.vect6574.i = insertelement <16 x double> %temp.vect6573.i, double %2956, i32 13
  %temp.vect6575.i = insertelement <16 x double> %temp.vect6574.i, double %2957, i32 14
  %temp.vect6576.i = insertelement <16 x double> %temp.vect6575.i, double %2958, i32 15
  %2959 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2960 = load i64* %2959, align 8
  %2961 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2962 = load i64* %2961, align 8
  %2963 = add i64 %2960, %2962
  %extract6544.i = add i64 %2963, 19906560
  %2964 = getelementptr inbounds double addrspace(1)* %4, i64 %extract6544.i
  %ptrTypeCast6560.i = bitcast double addrspace(1)* %2964 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect6576.i, <16 x double> addrspace(1)* %ptrTypeCast6560.i, align 8
  %2965 = fmul <16 x double> %temp.vect97.i, <double 2.120000e+00, double 2.120000e+00, double 2.120000e+00, double 2.120000e+00, double 2.120000e+00, double 2.120000e+00, double 2.120000e+00, double 2.120000e+00, double 2.120000e+00, double 2.120000e+00, double 2.120000e+00, double 2.120000e+00, double 2.120000e+00, double 2.120000e+00, double 2.120000e+00, double 2.120000e+00>
  %2966 = fadd <16 x double> %2965, <double 0x402E28C6385E155F, double 0x402E28C6385E155F, double 0x402E28C6385E155F, double 0x402E28C6385E155F, double 0x402E28C6385E155F, double 0x402E28C6385E155F, double 0x402E28C6385E155F, double 0x402E28C6385E155F, double 0x402E28C6385E155F, double 0x402E28C6385E155F, double 0x402E28C6385E155F, double 0x402E28C6385E155F, double 0x402E28C6385E155F, double 0x402E28C6385E155F, double 0x402E28C6385E155F, double 0x402E28C6385E155F>
  %2967 = fmul <16 x double> %41, <double 0x407B5CC6A8FC0D2C, double 0x407B5CC6A8FC0D2C, double 0x407B5CC6A8FC0D2C, double 0x407B5CC6A8FC0D2C, double 0x407B5CC6A8FC0D2C, double 0x407B5CC6A8FC0D2C, double 0x407B5CC6A8FC0D2C, double 0x407B5CC6A8FC0D2C, double 0x407B5CC6A8FC0D2C, double 0x407B5CC6A8FC0D2C, double 0x407B5CC6A8FC0D2C, double 0x407B5CC6A8FC0D2C, double 0x407B5CC6A8FC0D2C, double 0x407B5CC6A8FC0D2C, double 0x407B5CC6A8FC0D2C, double 0x407B5CC6A8FC0D2C>
  %2968 = fsub <16 x double> %2966, %2967
  %extract6577.i = extractelement <16 x double> %2968, i32 0
  %extract6578.i = extractelement <16 x double> %2968, i32 1
  %extract6579.i = extractelement <16 x double> %2968, i32 2
  %extract6580.i = extractelement <16 x double> %2968, i32 3
  %extract6581.i = extractelement <16 x double> %2968, i32 4
  %extract6582.i = extractelement <16 x double> %2968, i32 5
  %extract6583.i = extractelement <16 x double> %2968, i32 6
  %extract6584.i = extractelement <16 x double> %2968, i32 7
  %extract6585.i = extractelement <16 x double> %2968, i32 8
  %extract6586.i = extractelement <16 x double> %2968, i32 9
  %extract6587.i = extractelement <16 x double> %2968, i32 10
  %extract6588.i = extractelement <16 x double> %2968, i32 11
  %extract6589.i = extractelement <16 x double> %2968, i32 12
  %extract6590.i = extractelement <16 x double> %2968, i32 13
  %extract6591.i = extractelement <16 x double> %2968, i32 14
  %extract6592.i = extractelement <16 x double> %2968, i32 15
  %2969 = call double @_Z3expd(double %extract6577.i) nounwind
  %2970 = call double @_Z3expd(double %extract6578.i) nounwind
  %2971 = call double @_Z3expd(double %extract6579.i) nounwind
  %2972 = call double @_Z3expd(double %extract6580.i) nounwind
  %2973 = call double @_Z3expd(double %extract6581.i) nounwind
  %2974 = call double @_Z3expd(double %extract6582.i) nounwind
  %2975 = call double @_Z3expd(double %extract6583.i) nounwind
  %2976 = call double @_Z3expd(double %extract6584.i) nounwind
  %2977 = call double @_Z3expd(double %extract6585.i) nounwind
  %2978 = call double @_Z3expd(double %extract6586.i) nounwind
  %2979 = call double @_Z3expd(double %extract6587.i) nounwind
  %2980 = call double @_Z3expd(double %extract6588.i) nounwind
  %2981 = call double @_Z3expd(double %extract6589.i) nounwind
  %2982 = call double @_Z3expd(double %extract6590.i) nounwind
  %2983 = call double @_Z3expd(double %extract6591.i) nounwind
  %2984 = call double @_Z3expd(double %extract6592.i) nounwind
  %temp.vect6612.i = insertelement <16 x double> undef, double %2969, i32 0
  %temp.vect6613.i = insertelement <16 x double> %temp.vect6612.i, double %2970, i32 1
  %temp.vect6614.i = insertelement <16 x double> %temp.vect6613.i, double %2971, i32 2
  %temp.vect6615.i = insertelement <16 x double> %temp.vect6614.i, double %2972, i32 3
  %temp.vect6616.i = insertelement <16 x double> %temp.vect6615.i, double %2973, i32 4
  %temp.vect6617.i = insertelement <16 x double> %temp.vect6616.i, double %2974, i32 5
  %temp.vect6618.i = insertelement <16 x double> %temp.vect6617.i, double %2975, i32 6
  %temp.vect6619.i = insertelement <16 x double> %temp.vect6618.i, double %2976, i32 7
  %temp.vect6620.i = insertelement <16 x double> %temp.vect6619.i, double %2977, i32 8
  %temp.vect6621.i = insertelement <16 x double> %temp.vect6620.i, double %2978, i32 9
  %temp.vect6622.i = insertelement <16 x double> %temp.vect6621.i, double %2979, i32 10
  %temp.vect6623.i = insertelement <16 x double> %temp.vect6622.i, double %2980, i32 11
  %temp.vect6624.i = insertelement <16 x double> %temp.vect6623.i, double %2981, i32 12
  %temp.vect6625.i = insertelement <16 x double> %temp.vect6624.i, double %2982, i32 13
  %temp.vect6626.i = insertelement <16 x double> %temp.vect6625.i, double %2983, i32 14
  %temp.vect6627.i = insertelement <16 x double> %temp.vect6626.i, double %2984, i32 15
  %2985 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %2986 = load i64* %2985, align 8
  %2987 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %2988 = load i64* %2987, align 8
  %2989 = add i64 %2986, %2988
  %extract6595.i = add i64 %2989, 20017152
  %2990 = getelementptr inbounds double addrspace(1)* %4, i64 %extract6595.i
  %ptrTypeCast6611.i = bitcast double addrspace(1)* %2990 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect6627.i, <16 x double> addrspace(1)* %ptrTypeCast6611.i, align 8
  %2991 = fmul <16 x double> %41, <double 0x40714C4E820E6299, double 0x40714C4E820E6299, double 0x40714C4E820E6299, double 0x40714C4E820E6299, double 0x40714C4E820E6299, double 0x40714C4E820E6299, double 0x40714C4E820E6299, double 0x40714C4E820E6299, double 0x40714C4E820E6299, double 0x40714C4E820E6299, double 0x40714C4E820E6299, double 0x40714C4E820E6299, double 0x40714C4E820E6299, double 0x40714C4E820E6299, double 0x40714C4E820E6299, double 0x40714C4E820E6299>
  %2992 = fadd <16 x double> %2991, <double 0x403F51E50176F885, double 0x403F51E50176F885, double 0x403F51E50176F885, double 0x403F51E50176F885, double 0x403F51E50176F885, double 0x403F51E50176F885, double 0x403F51E50176F885, double 0x403F51E50176F885, double 0x403F51E50176F885, double 0x403F51E50176F885, double 0x403F51E50176F885, double 0x403F51E50176F885, double 0x403F51E50176F885, double 0x403F51E50176F885, double 0x403F51E50176F885, double 0x403F51E50176F885>
  %extract6628.i = extractelement <16 x double> %2992, i32 0
  %extract6629.i = extractelement <16 x double> %2992, i32 1
  %extract6630.i = extractelement <16 x double> %2992, i32 2
  %extract6631.i = extractelement <16 x double> %2992, i32 3
  %extract6632.i = extractelement <16 x double> %2992, i32 4
  %extract6633.i = extractelement <16 x double> %2992, i32 5
  %extract6634.i = extractelement <16 x double> %2992, i32 6
  %extract6635.i = extractelement <16 x double> %2992, i32 7
  %extract6636.i = extractelement <16 x double> %2992, i32 8
  %extract6637.i = extractelement <16 x double> %2992, i32 9
  %extract6638.i = extractelement <16 x double> %2992, i32 10
  %extract6639.i = extractelement <16 x double> %2992, i32 11
  %extract6640.i = extractelement <16 x double> %2992, i32 12
  %extract6641.i = extractelement <16 x double> %2992, i32 13
  %extract6642.i = extractelement <16 x double> %2992, i32 14
  %extract6643.i = extractelement <16 x double> %2992, i32 15
  %2993 = call double @_Z3expd(double %extract6628.i) nounwind
  %2994 = call double @_Z3expd(double %extract6629.i) nounwind
  %2995 = call double @_Z3expd(double %extract6630.i) nounwind
  %2996 = call double @_Z3expd(double %extract6631.i) nounwind
  %2997 = call double @_Z3expd(double %extract6632.i) nounwind
  %2998 = call double @_Z3expd(double %extract6633.i) nounwind
  %2999 = call double @_Z3expd(double %extract6634.i) nounwind
  %3000 = call double @_Z3expd(double %extract6635.i) nounwind
  %3001 = call double @_Z3expd(double %extract6636.i) nounwind
  %3002 = call double @_Z3expd(double %extract6637.i) nounwind
  %3003 = call double @_Z3expd(double %extract6638.i) nounwind
  %3004 = call double @_Z3expd(double %extract6639.i) nounwind
  %3005 = call double @_Z3expd(double %extract6640.i) nounwind
  %3006 = call double @_Z3expd(double %extract6641.i) nounwind
  %3007 = call double @_Z3expd(double %extract6642.i) nounwind
  %3008 = call double @_Z3expd(double %extract6643.i) nounwind
  %temp.vect6663.i = insertelement <16 x double> undef, double %2993, i32 0
  %temp.vect6664.i = insertelement <16 x double> %temp.vect6663.i, double %2994, i32 1
  %temp.vect6665.i = insertelement <16 x double> %temp.vect6664.i, double %2995, i32 2
  %temp.vect6666.i = insertelement <16 x double> %temp.vect6665.i, double %2996, i32 3
  %temp.vect6667.i = insertelement <16 x double> %temp.vect6666.i, double %2997, i32 4
  %temp.vect6668.i = insertelement <16 x double> %temp.vect6667.i, double %2998, i32 5
  %temp.vect6669.i = insertelement <16 x double> %temp.vect6668.i, double %2999, i32 6
  %temp.vect6670.i = insertelement <16 x double> %temp.vect6669.i, double %3000, i32 7
  %temp.vect6671.i = insertelement <16 x double> %temp.vect6670.i, double %3001, i32 8
  %temp.vect6672.i = insertelement <16 x double> %temp.vect6671.i, double %3002, i32 9
  %temp.vect6673.i = insertelement <16 x double> %temp.vect6672.i, double %3003, i32 10
  %temp.vect6674.i = insertelement <16 x double> %temp.vect6673.i, double %3004, i32 11
  %temp.vect6675.i = insertelement <16 x double> %temp.vect6674.i, double %3005, i32 12
  %temp.vect6676.i = insertelement <16 x double> %temp.vect6675.i, double %3006, i32 13
  %temp.vect6677.i = insertelement <16 x double> %temp.vect6676.i, double %3007, i32 14
  %temp.vect6678.i = insertelement <16 x double> %temp.vect6677.i, double %3008, i32 15
  %3009 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %3010 = load i64* %3009, align 8
  %3011 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %3012 = load i64* %3011, align 8
  %3013 = add i64 %3010, %3012
  %extract6646.i = add i64 %3013, 20127744
  %3014 = getelementptr inbounds double addrspace(1)* %4, i64 %extract6646.i
  %ptrTypeCast6662.i = bitcast double addrspace(1)* %3014 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect6678.i, <16 x double> addrspace(1)* %ptrTypeCast6662.i, align 8
  %3015 = fmul <16 x double> %temp.vect97.i, <double 1.740000e+00, double 1.740000e+00, double 1.740000e+00, double 1.740000e+00, double 1.740000e+00, double 1.740000e+00, double 1.740000e+00, double 1.740000e+00, double 1.740000e+00, double 1.740000e+00, double 1.740000e+00, double 1.740000e+00, double 1.740000e+00, double 1.740000e+00, double 1.740000e+00, double 1.740000e+00>
  %3016 = fadd <16 x double> %3015, <double 0x402F42BB4EF60759, double 0x402F42BB4EF60759, double 0x402F42BB4EF60759, double 0x402F42BB4EF60759, double 0x402F42BB4EF60759, double 0x402F42BB4EF60759, double 0x402F42BB4EF60759, double 0x402F42BB4EF60759, double 0x402F42BB4EF60759, double 0x402F42BB4EF60759, double 0x402F42BB4EF60759, double 0x402F42BB4EF60759, double 0x402F42BB4EF60759, double 0x402F42BB4EF60759, double 0x402F42BB4EF60759, double 0x402F42BB4EF60759>
  %3017 = fmul <16 x double> %41, <double 0x40B48A9D3AE685DB, double 0x40B48A9D3AE685DB, double 0x40B48A9D3AE685DB, double 0x40B48A9D3AE685DB, double 0x40B48A9D3AE685DB, double 0x40B48A9D3AE685DB, double 0x40B48A9D3AE685DB, double 0x40B48A9D3AE685DB, double 0x40B48A9D3AE685DB, double 0x40B48A9D3AE685DB, double 0x40B48A9D3AE685DB, double 0x40B48A9D3AE685DB, double 0x40B48A9D3AE685DB, double 0x40B48A9D3AE685DB, double 0x40B48A9D3AE685DB, double 0x40B48A9D3AE685DB>
  %3018 = fsub <16 x double> %3016, %3017
  %extract6679.i = extractelement <16 x double> %3018, i32 0
  %extract6680.i = extractelement <16 x double> %3018, i32 1
  %extract6681.i = extractelement <16 x double> %3018, i32 2
  %extract6682.i = extractelement <16 x double> %3018, i32 3
  %extract6683.i = extractelement <16 x double> %3018, i32 4
  %extract6684.i = extractelement <16 x double> %3018, i32 5
  %extract6685.i = extractelement <16 x double> %3018, i32 6
  %extract6686.i = extractelement <16 x double> %3018, i32 7
  %extract6687.i = extractelement <16 x double> %3018, i32 8
  %extract6688.i = extractelement <16 x double> %3018, i32 9
  %extract6689.i = extractelement <16 x double> %3018, i32 10
  %extract6690.i = extractelement <16 x double> %3018, i32 11
  %extract6691.i = extractelement <16 x double> %3018, i32 12
  %extract6692.i = extractelement <16 x double> %3018, i32 13
  %extract6693.i = extractelement <16 x double> %3018, i32 14
  %extract6694.i = extractelement <16 x double> %3018, i32 15
  %3019 = call double @_Z3expd(double %extract6679.i) nounwind
  %3020 = call double @_Z3expd(double %extract6680.i) nounwind
  %3021 = call double @_Z3expd(double %extract6681.i) nounwind
  %3022 = call double @_Z3expd(double %extract6682.i) nounwind
  %3023 = call double @_Z3expd(double %extract6683.i) nounwind
  %3024 = call double @_Z3expd(double %extract6684.i) nounwind
  %3025 = call double @_Z3expd(double %extract6685.i) nounwind
  %3026 = call double @_Z3expd(double %extract6686.i) nounwind
  %3027 = call double @_Z3expd(double %extract6687.i) nounwind
  %3028 = call double @_Z3expd(double %extract6688.i) nounwind
  %3029 = call double @_Z3expd(double %extract6689.i) nounwind
  %3030 = call double @_Z3expd(double %extract6690.i) nounwind
  %3031 = call double @_Z3expd(double %extract6691.i) nounwind
  %3032 = call double @_Z3expd(double %extract6692.i) nounwind
  %3033 = call double @_Z3expd(double %extract6693.i) nounwind
  %3034 = call double @_Z3expd(double %extract6694.i) nounwind
  %temp.vect6714.i = insertelement <16 x double> undef, double %3019, i32 0
  %temp.vect6715.i = insertelement <16 x double> %temp.vect6714.i, double %3020, i32 1
  %temp.vect6716.i = insertelement <16 x double> %temp.vect6715.i, double %3021, i32 2
  %temp.vect6717.i = insertelement <16 x double> %temp.vect6716.i, double %3022, i32 3
  %temp.vect6718.i = insertelement <16 x double> %temp.vect6717.i, double %3023, i32 4
  %temp.vect6719.i = insertelement <16 x double> %temp.vect6718.i, double %3024, i32 5
  %temp.vect6720.i = insertelement <16 x double> %temp.vect6719.i, double %3025, i32 6
  %temp.vect6721.i = insertelement <16 x double> %temp.vect6720.i, double %3026, i32 7
  %temp.vect6722.i = insertelement <16 x double> %temp.vect6721.i, double %3027, i32 8
  %temp.vect6723.i = insertelement <16 x double> %temp.vect6722.i, double %3028, i32 9
  %temp.vect6724.i = insertelement <16 x double> %temp.vect6723.i, double %3029, i32 10
  %temp.vect6725.i = insertelement <16 x double> %temp.vect6724.i, double %3030, i32 11
  %temp.vect6726.i = insertelement <16 x double> %temp.vect6725.i, double %3031, i32 12
  %temp.vect6727.i = insertelement <16 x double> %temp.vect6726.i, double %3032, i32 13
  %temp.vect6728.i = insertelement <16 x double> %temp.vect6727.i, double %3033, i32 14
  %temp.vect6729.i = insertelement <16 x double> %temp.vect6728.i, double %3034, i32 15
  %3035 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %3036 = load i64* %3035, align 8
  %3037 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %3038 = load i64* %3037, align 8
  %3039 = add i64 %3036, %3038
  %extract6697.i = add i64 %3039, 20238336
  %3040 = getelementptr inbounds double addrspace(1)* %4, i64 %extract6697.i
  %ptrTypeCast6713.i = bitcast double addrspace(1)* %3040 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect6729.i, <16 x double> addrspace(1)* %ptrTypeCast6713.i, align 8
  %3041 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %3042 = load i64* %3041, align 8
  %3043 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %3044 = load i64* %3043, align 8
  %3045 = add i64 %3042, %3044
  %extract6732.i = add i64 %3045, 20348928
  %3046 = getelementptr inbounds double addrspace(1)* %4, i64 %extract6732.i
  %ptrTypeCast6748.i = bitcast double addrspace(1)* %3046 to <16 x double> addrspace(1)*
  store <16 x double> <double 2.000000e+14, double 2.000000e+14, double 2.000000e+14, double 2.000000e+14, double 2.000000e+14, double 2.000000e+14, double 2.000000e+14, double 2.000000e+14, double 2.000000e+14, double 2.000000e+14, double 2.000000e+14, double 2.000000e+14, double 2.000000e+14, double 2.000000e+14, double 2.000000e+14, double 2.000000e+14>, <16 x double> addrspace(1)* %ptrTypeCast6748.i, align 8
  %3047 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %3048 = load i64* %3047, align 8
  %3049 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %3050 = load i64* %3049, align 8
  %3051 = add i64 %3048, %3050
  %extract6751.i = add i64 %3051, 20570112
  %3052 = getelementptr inbounds double addrspace(1)* %4, i64 %extract6751.i
  %ptrTypeCast6767.i = bitcast double addrspace(1)* %3052 to <16 x double> addrspace(1)*
  store <16 x double> <double 2.660000e+12, double 2.660000e+12, double 2.660000e+12, double 2.660000e+12, double 2.660000e+12, double 2.660000e+12, double 2.660000e+12, double 2.660000e+12, double 2.660000e+12, double 2.660000e+12, double 2.660000e+12, double 2.660000e+12, double 2.660000e+12, double 2.660000e+12, double 2.660000e+12, double 2.660000e+12>, <16 x double> addrspace(1)* %ptrTypeCast6767.i, align 8
  %3053 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %3054 = load i64* %3053, align 8
  %3055 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %3056 = load i64* %3055, align 8
  %3057 = add i64 %3054, %3056
  %extract6770.i = add i64 %3057, 20680704
  %3058 = getelementptr inbounds double addrspace(1)* %4, i64 %extract6770.i
  %ptrTypeCast6786.i = bitcast double addrspace(1)* %3058 to <16 x double> addrspace(1)*
  store <16 x double> <double 6.600000e+12, double 6.600000e+12, double 6.600000e+12, double 6.600000e+12, double 6.600000e+12, double 6.600000e+12, double 6.600000e+12, double 6.600000e+12, double 6.600000e+12, double 6.600000e+12, double 6.600000e+12, double 6.600000e+12, double 6.600000e+12, double 6.600000e+12, double 6.600000e+12, double 6.600000e+12>, <16 x double> addrspace(1)* %ptrTypeCast6786.i, align 8
  %3059 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %3060 = load i64* %3059, align 8
  %3061 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %3062 = load i64* %3061, align 8
  %3063 = add i64 %3060, %3062
  %extract6789.i = add i64 %3063, 20791296
  %3064 = getelementptr inbounds double addrspace(1)* %4, i64 %extract6789.i
  %ptrTypeCast6805.i = bitcast double addrspace(1)* %3064 to <16 x double> addrspace(1)*
  store <16 x double> <double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13, double 6.000000e+13>, <16 x double> addrspace(1)* %ptrTypeCast6805.i, align 8
  %3065 = fmul <16 x double> %41, <double 0x4099A35AB7564303, double 0x4099A35AB7564303, double 0x4099A35AB7564303, double 0x4099A35AB7564303, double 0x4099A35AB7564303, double 0x4099A35AB7564303, double 0x4099A35AB7564303, double 0x4099A35AB7564303, double 0x4099A35AB7564303, double 0x4099A35AB7564303, double 0x4099A35AB7564303, double 0x4099A35AB7564303, double 0x4099A35AB7564303, double 0x4099A35AB7564303, double 0x4099A35AB7564303, double 0x4099A35AB7564303>
  %3066 = fsub <16 x double> <double 0x403E38024E8ED94C, double 0x403E38024E8ED94C, double 0x403E38024E8ED94C, double 0x403E38024E8ED94C, double 0x403E38024E8ED94C, double 0x403E38024E8ED94C, double 0x403E38024E8ED94C, double 0x403E38024E8ED94C, double 0x403E38024E8ED94C, double 0x403E38024E8ED94C, double 0x403E38024E8ED94C, double 0x403E38024E8ED94C, double 0x403E38024E8ED94C, double 0x403E38024E8ED94C, double 0x403E38024E8ED94C, double 0x403E38024E8ED94C>, %3065
  %extract6806.i = extractelement <16 x double> %3066, i32 0
  %extract6807.i = extractelement <16 x double> %3066, i32 1
  %extract6808.i = extractelement <16 x double> %3066, i32 2
  %extract6809.i = extractelement <16 x double> %3066, i32 3
  %extract6810.i = extractelement <16 x double> %3066, i32 4
  %extract6811.i = extractelement <16 x double> %3066, i32 5
  %extract6812.i = extractelement <16 x double> %3066, i32 6
  %extract6813.i = extractelement <16 x double> %3066, i32 7
  %extract6814.i = extractelement <16 x double> %3066, i32 8
  %extract6815.i = extractelement <16 x double> %3066, i32 9
  %extract6816.i = extractelement <16 x double> %3066, i32 10
  %extract6817.i = extractelement <16 x double> %3066, i32 11
  %extract6818.i = extractelement <16 x double> %3066, i32 12
  %extract6819.i = extractelement <16 x double> %3066, i32 13
  %extract6820.i = extractelement <16 x double> %3066, i32 14
  %extract6821.i = extractelement <16 x double> %3066, i32 15
  %3067 = call double @_Z3expd(double %extract6806.i) nounwind
  %3068 = call double @_Z3expd(double %extract6807.i) nounwind
  %3069 = call double @_Z3expd(double %extract6808.i) nounwind
  %3070 = call double @_Z3expd(double %extract6809.i) nounwind
  %3071 = call double @_Z3expd(double %extract6810.i) nounwind
  %3072 = call double @_Z3expd(double %extract6811.i) nounwind
  %3073 = call double @_Z3expd(double %extract6812.i) nounwind
  %3074 = call double @_Z3expd(double %extract6813.i) nounwind
  %3075 = call double @_Z3expd(double %extract6814.i) nounwind
  %3076 = call double @_Z3expd(double %extract6815.i) nounwind
  %3077 = call double @_Z3expd(double %extract6816.i) nounwind
  %3078 = call double @_Z3expd(double %extract6817.i) nounwind
  %3079 = call double @_Z3expd(double %extract6818.i) nounwind
  %3080 = call double @_Z3expd(double %extract6819.i) nounwind
  %3081 = call double @_Z3expd(double %extract6820.i) nounwind
  %3082 = call double @_Z3expd(double %extract6821.i) nounwind
  %temp.vect6841.i = insertelement <16 x double> undef, double %3067, i32 0
  %temp.vect6842.i = insertelement <16 x double> %temp.vect6841.i, double %3068, i32 1
  %temp.vect6843.i = insertelement <16 x double> %temp.vect6842.i, double %3069, i32 2
  %temp.vect6844.i = insertelement <16 x double> %temp.vect6843.i, double %3070, i32 3
  %temp.vect6845.i = insertelement <16 x double> %temp.vect6844.i, double %3071, i32 4
  %temp.vect6846.i = insertelement <16 x double> %temp.vect6845.i, double %3072, i32 5
  %temp.vect6847.i = insertelement <16 x double> %temp.vect6846.i, double %3073, i32 6
  %temp.vect6848.i = insertelement <16 x double> %temp.vect6847.i, double %3074, i32 7
  %temp.vect6849.i = insertelement <16 x double> %temp.vect6848.i, double %3075, i32 8
  %temp.vect6850.i = insertelement <16 x double> %temp.vect6849.i, double %3076, i32 9
  %temp.vect6851.i = insertelement <16 x double> %temp.vect6850.i, double %3077, i32 10
  %temp.vect6852.i = insertelement <16 x double> %temp.vect6851.i, double %3078, i32 11
  %temp.vect6853.i = insertelement <16 x double> %temp.vect6852.i, double %3079, i32 12
  %temp.vect6854.i = insertelement <16 x double> %temp.vect6853.i, double %3080, i32 13
  %temp.vect6855.i = insertelement <16 x double> %temp.vect6854.i, double %3081, i32 14
  %temp.vect6856.i = insertelement <16 x double> %temp.vect6855.i, double %3082, i32 15
  %3083 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %3084 = load i64* %3083, align 8
  %3085 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %3086 = load i64* %3085, align 8
  %3087 = add i64 %3084, %3086
  %extract6824.i = add i64 %3087, 20901888
  %3088 = getelementptr inbounds double addrspace(1)* %4, i64 %extract6824.i
  %ptrTypeCast6840.i = bitcast double addrspace(1)* %3088 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect6856.i, <16 x double> addrspace(1)* %ptrTypeCast6840.i, align 8
  %3089 = fmul <16 x double> %temp.vect97.i, <double 2.390000e+00, double 2.390000e+00, double 2.390000e+00, double 2.390000e+00, double 2.390000e+00, double 2.390000e+00, double 2.390000e+00, double 2.390000e+00, double 2.390000e+00, double 2.390000e+00, double 2.390000e+00, double 2.390000e+00, double 2.390000e+00, double 2.390000e+00, double 2.390000e+00, double 2.390000e+00>
  %3090 = fsub <16 x double> <double 0x4049903D7683141C, double 0x4049903D7683141C, double 0x4049903D7683141C, double 0x4049903D7683141C, double 0x4049903D7683141C, double 0x4049903D7683141C, double 0x4049903D7683141C, double 0x4049903D7683141C, double 0x4049903D7683141C, double 0x4049903D7683141C, double 0x4049903D7683141C, double 0x4049903D7683141C, double 0x4049903D7683141C, double 0x4049903D7683141C, double 0x4049903D7683141C, double 0x4049903D7683141C>, %3089
  %3091 = fmul <16 x double> %41, <double 0x40B5F9F65BEA0BA2, double 0x40B5F9F65BEA0BA2, double 0x40B5F9F65BEA0BA2, double 0x40B5F9F65BEA0BA2, double 0x40B5F9F65BEA0BA2, double 0x40B5F9F65BEA0BA2, double 0x40B5F9F65BEA0BA2, double 0x40B5F9F65BEA0BA2, double 0x40B5F9F65BEA0BA2, double 0x40B5F9F65BEA0BA2, double 0x40B5F9F65BEA0BA2, double 0x40B5F9F65BEA0BA2, double 0x40B5F9F65BEA0BA2, double 0x40B5F9F65BEA0BA2, double 0x40B5F9F65BEA0BA2, double 0x40B5F9F65BEA0BA2>
  %3092 = fsub <16 x double> %3090, %3091
  %extract6857.i = extractelement <16 x double> %3092, i32 0
  %extract6858.i = extractelement <16 x double> %3092, i32 1
  %extract6859.i = extractelement <16 x double> %3092, i32 2
  %extract6860.i = extractelement <16 x double> %3092, i32 3
  %extract6861.i = extractelement <16 x double> %3092, i32 4
  %extract6862.i = extractelement <16 x double> %3092, i32 5
  %extract6863.i = extractelement <16 x double> %3092, i32 6
  %extract6864.i = extractelement <16 x double> %3092, i32 7
  %extract6865.i = extractelement <16 x double> %3092, i32 8
  %extract6866.i = extractelement <16 x double> %3092, i32 9
  %extract6867.i = extractelement <16 x double> %3092, i32 10
  %extract6868.i = extractelement <16 x double> %3092, i32 11
  %extract6869.i = extractelement <16 x double> %3092, i32 12
  %extract6870.i = extractelement <16 x double> %3092, i32 13
  %extract6871.i = extractelement <16 x double> %3092, i32 14
  %extract6872.i = extractelement <16 x double> %3092, i32 15
  %3093 = call double @_Z3expd(double %extract6857.i) nounwind
  %3094 = call double @_Z3expd(double %extract6858.i) nounwind
  %3095 = call double @_Z3expd(double %extract6859.i) nounwind
  %3096 = call double @_Z3expd(double %extract6860.i) nounwind
  %3097 = call double @_Z3expd(double %extract6861.i) nounwind
  %3098 = call double @_Z3expd(double %extract6862.i) nounwind
  %3099 = call double @_Z3expd(double %extract6863.i) nounwind
  %3100 = call double @_Z3expd(double %extract6864.i) nounwind
  %3101 = call double @_Z3expd(double %extract6865.i) nounwind
  %3102 = call double @_Z3expd(double %extract6866.i) nounwind
  %3103 = call double @_Z3expd(double %extract6867.i) nounwind
  %3104 = call double @_Z3expd(double %extract6868.i) nounwind
  %3105 = call double @_Z3expd(double %extract6869.i) nounwind
  %3106 = call double @_Z3expd(double %extract6870.i) nounwind
  %3107 = call double @_Z3expd(double %extract6871.i) nounwind
  %3108 = call double @_Z3expd(double %extract6872.i) nounwind
  %temp.vect6892.i = insertelement <16 x double> undef, double %3093, i32 0
  %temp.vect6893.i = insertelement <16 x double> %temp.vect6892.i, double %3094, i32 1
  %temp.vect6894.i = insertelement <16 x double> %temp.vect6893.i, double %3095, i32 2
  %temp.vect6895.i = insertelement <16 x double> %temp.vect6894.i, double %3096, i32 3
  %temp.vect6896.i = insertelement <16 x double> %temp.vect6895.i, double %3097, i32 4
  %temp.vect6897.i = insertelement <16 x double> %temp.vect6896.i, double %3098, i32 5
  %temp.vect6898.i = insertelement <16 x double> %temp.vect6897.i, double %3099, i32 6
  %temp.vect6899.i = insertelement <16 x double> %temp.vect6898.i, double %3100, i32 7
  %temp.vect6900.i = insertelement <16 x double> %temp.vect6899.i, double %3101, i32 8
  %temp.vect6901.i = insertelement <16 x double> %temp.vect6900.i, double %3102, i32 9
  %temp.vect6902.i = insertelement <16 x double> %temp.vect6901.i, double %3103, i32 10
  %temp.vect6903.i = insertelement <16 x double> %temp.vect6902.i, double %3104, i32 11
  %temp.vect6904.i = insertelement <16 x double> %temp.vect6903.i, double %3105, i32 12
  %temp.vect6905.i = insertelement <16 x double> %temp.vect6904.i, double %3106, i32 13
  %temp.vect6906.i = insertelement <16 x double> %temp.vect6905.i, double %3107, i32 14
  %temp.vect6907.i = insertelement <16 x double> %temp.vect6906.i, double %3108, i32 15
  %3109 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %3110 = load i64* %3109, align 8
  %3111 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %3112 = load i64* %3111, align 8
  %3113 = add i64 %3110, %3112
  %extract6875.i = add i64 %3113, 21012480
  %3114 = getelementptr inbounds double addrspace(1)* %4, i64 %extract6875.i
  %ptrTypeCast6891.i = bitcast double addrspace(1)* %3114 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect6907.i, <16 x double> addrspace(1)* %ptrTypeCast6891.i, align 8
  %3115 = fmul <16 x double> %temp.vect97.i, <double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00, double 2.500000e+00>
  %3116 = fadd <16 x double> %3115, <double 0x4028164CABAA3D56, double 0x4028164CABAA3D56, double 0x4028164CABAA3D56, double 0x4028164CABAA3D56, double 0x4028164CABAA3D56, double 0x4028164CABAA3D56, double 0x4028164CABAA3D56, double 0x4028164CABAA3D56, double 0x4028164CABAA3D56, double 0x4028164CABAA3D56, double 0x4028164CABAA3D56, double 0x4028164CABAA3D56, double 0x4028164CABAA3D56, double 0x4028164CABAA3D56, double 0x4028164CABAA3D56, double 0x4028164CABAA3D56>
  %3117 = fmul <16 x double> %41, <double 0x40939409BA5E353F, double 0x40939409BA5E353F, double 0x40939409BA5E353F, double 0x40939409BA5E353F, double 0x40939409BA5E353F, double 0x40939409BA5E353F, double 0x40939409BA5E353F, double 0x40939409BA5E353F, double 0x40939409BA5E353F, double 0x40939409BA5E353F, double 0x40939409BA5E353F, double 0x40939409BA5E353F, double 0x40939409BA5E353F, double 0x40939409BA5E353F, double 0x40939409BA5E353F, double 0x40939409BA5E353F>
  %3118 = fsub <16 x double> %3116, %3117
  %extract6908.i = extractelement <16 x double> %3118, i32 0
  %extract6909.i = extractelement <16 x double> %3118, i32 1
  %extract6910.i = extractelement <16 x double> %3118, i32 2
  %extract6911.i = extractelement <16 x double> %3118, i32 3
  %extract6912.i = extractelement <16 x double> %3118, i32 4
  %extract6913.i = extractelement <16 x double> %3118, i32 5
  %extract6914.i = extractelement <16 x double> %3118, i32 6
  %extract6915.i = extractelement <16 x double> %3118, i32 7
  %extract6916.i = extractelement <16 x double> %3118, i32 8
  %extract6917.i = extractelement <16 x double> %3118, i32 9
  %extract6918.i = extractelement <16 x double> %3118, i32 10
  %extract6919.i = extractelement <16 x double> %3118, i32 11
  %extract6920.i = extractelement <16 x double> %3118, i32 12
  %extract6921.i = extractelement <16 x double> %3118, i32 13
  %extract6922.i = extractelement <16 x double> %3118, i32 14
  %extract6923.i = extractelement <16 x double> %3118, i32 15
  %3119 = call double @_Z3expd(double %extract6908.i) nounwind
  %3120 = call double @_Z3expd(double %extract6909.i) nounwind
  %3121 = call double @_Z3expd(double %extract6910.i) nounwind
  %3122 = call double @_Z3expd(double %extract6911.i) nounwind
  %3123 = call double @_Z3expd(double %extract6912.i) nounwind
  %3124 = call double @_Z3expd(double %extract6913.i) nounwind
  %3125 = call double @_Z3expd(double %extract6914.i) nounwind
  %3126 = call double @_Z3expd(double %extract6915.i) nounwind
  %3127 = call double @_Z3expd(double %extract6916.i) nounwind
  %3128 = call double @_Z3expd(double %extract6917.i) nounwind
  %3129 = call double @_Z3expd(double %extract6918.i) nounwind
  %3130 = call double @_Z3expd(double %extract6919.i) nounwind
  %3131 = call double @_Z3expd(double %extract6920.i) nounwind
  %3132 = call double @_Z3expd(double %extract6921.i) nounwind
  %3133 = call double @_Z3expd(double %extract6922.i) nounwind
  %3134 = call double @_Z3expd(double %extract6923.i) nounwind
  %temp.vect6943.i = insertelement <16 x double> undef, double %3119, i32 0
  %temp.vect6944.i = insertelement <16 x double> %temp.vect6943.i, double %3120, i32 1
  %temp.vect6945.i = insertelement <16 x double> %temp.vect6944.i, double %3121, i32 2
  %temp.vect6946.i = insertelement <16 x double> %temp.vect6945.i, double %3122, i32 3
  %temp.vect6947.i = insertelement <16 x double> %temp.vect6946.i, double %3123, i32 4
  %temp.vect6948.i = insertelement <16 x double> %temp.vect6947.i, double %3124, i32 5
  %temp.vect6949.i = insertelement <16 x double> %temp.vect6948.i, double %3125, i32 6
  %temp.vect6950.i = insertelement <16 x double> %temp.vect6949.i, double %3126, i32 7
  %temp.vect6951.i = insertelement <16 x double> %temp.vect6950.i, double %3127, i32 8
  %temp.vect6952.i = insertelement <16 x double> %temp.vect6951.i, double %3128, i32 9
  %temp.vect6953.i = insertelement <16 x double> %temp.vect6952.i, double %3129, i32 10
  %temp.vect6954.i = insertelement <16 x double> %temp.vect6953.i, double %3130, i32 11
  %temp.vect6955.i = insertelement <16 x double> %temp.vect6954.i, double %3131, i32 12
  %temp.vect6956.i = insertelement <16 x double> %temp.vect6955.i, double %3132, i32 13
  %temp.vect6957.i = insertelement <16 x double> %temp.vect6956.i, double %3133, i32 14
  %temp.vect6958.i = insertelement <16 x double> %temp.vect6957.i, double %3134, i32 15
  %3135 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %3136 = load i64* %3135, align 8
  %3137 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %3138 = load i64* %3137, align 8
  %3139 = add i64 %3136, %3138
  %extract6926.i = add i64 %3139, 21123072
  %3140 = getelementptr inbounds double addrspace(1)* %4, i64 %extract6926.i
  %ptrTypeCast6942.i = bitcast double addrspace(1)* %3140 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect6958.i, <16 x double> addrspace(1)* %ptrTypeCast6942.i, align 8
  %3141 = fmul <16 x double> %temp.vect97.i, <double 1.650000e+00, double 1.650000e+00, double 1.650000e+00, double 1.650000e+00, double 1.650000e+00, double 1.650000e+00, double 1.650000e+00, double 1.650000e+00, double 1.650000e+00, double 1.650000e+00, double 1.650000e+00, double 1.650000e+00, double 1.650000e+00, double 1.650000e+00, double 1.650000e+00, double 1.650000e+00>
  %3142 = fadd <16 x double> %3141, <double 0x40329A5E5BD5E9AC, double 0x40329A5E5BD5E9AC, double 0x40329A5E5BD5E9AC, double 0x40329A5E5BD5E9AC, double 0x40329A5E5BD5E9AC, double 0x40329A5E5BD5E9AC, double 0x40329A5E5BD5E9AC, double 0x40329A5E5BD5E9AC, double 0x40329A5E5BD5E9AC, double 0x40329A5E5BD5E9AC, double 0x40329A5E5BD5E9AC, double 0x40329A5E5BD5E9AC, double 0x40329A5E5BD5E9AC, double 0x40329A5E5BD5E9AC, double 0x40329A5E5BD5E9AC, double 0x40329A5E5BD5E9AC>
  %3143 = fmul <16 x double> %41, <double 0x406491A8C154C986, double 0x406491A8C154C986, double 0x406491A8C154C986, double 0x406491A8C154C986, double 0x406491A8C154C986, double 0x406491A8C154C986, double 0x406491A8C154C986, double 0x406491A8C154C986, double 0x406491A8C154C986, double 0x406491A8C154C986, double 0x406491A8C154C986, double 0x406491A8C154C986, double 0x406491A8C154C986, double 0x406491A8C154C986, double 0x406491A8C154C986, double 0x406491A8C154C986>
  %3144 = fsub <16 x double> %3142, %3143
  %extract6959.i = extractelement <16 x double> %3144, i32 0
  %extract6960.i = extractelement <16 x double> %3144, i32 1
  %extract6961.i = extractelement <16 x double> %3144, i32 2
  %extract6962.i = extractelement <16 x double> %3144, i32 3
  %extract6963.i = extractelement <16 x double> %3144, i32 4
  %extract6964.i = extractelement <16 x double> %3144, i32 5
  %extract6965.i = extractelement <16 x double> %3144, i32 6
  %extract6966.i = extractelement <16 x double> %3144, i32 7
  %extract6967.i = extractelement <16 x double> %3144, i32 8
  %extract6968.i = extractelement <16 x double> %3144, i32 9
  %extract6969.i = extractelement <16 x double> %3144, i32 10
  %extract6970.i = extractelement <16 x double> %3144, i32 11
  %extract6971.i = extractelement <16 x double> %3144, i32 12
  %extract6972.i = extractelement <16 x double> %3144, i32 13
  %extract6973.i = extractelement <16 x double> %3144, i32 14
  %extract6974.i = extractelement <16 x double> %3144, i32 15
  %3145 = call double @_Z3expd(double %extract6959.i) nounwind
  %3146 = call double @_Z3expd(double %extract6960.i) nounwind
  %3147 = call double @_Z3expd(double %extract6961.i) nounwind
  %3148 = call double @_Z3expd(double %extract6962.i) nounwind
  %3149 = call double @_Z3expd(double %extract6963.i) nounwind
  %3150 = call double @_Z3expd(double %extract6964.i) nounwind
  %3151 = call double @_Z3expd(double %extract6965.i) nounwind
  %3152 = call double @_Z3expd(double %extract6966.i) nounwind
  %3153 = call double @_Z3expd(double %extract6967.i) nounwind
  %3154 = call double @_Z3expd(double %extract6968.i) nounwind
  %3155 = call double @_Z3expd(double %extract6969.i) nounwind
  %3156 = call double @_Z3expd(double %extract6970.i) nounwind
  %3157 = call double @_Z3expd(double %extract6971.i) nounwind
  %3158 = call double @_Z3expd(double %extract6972.i) nounwind
  %3159 = call double @_Z3expd(double %extract6973.i) nounwind
  %3160 = call double @_Z3expd(double %extract6974.i) nounwind
  %temp.vect6994.i = insertelement <16 x double> undef, double %3145, i32 0
  %temp.vect6995.i = insertelement <16 x double> %temp.vect6994.i, double %3146, i32 1
  %temp.vect6996.i = insertelement <16 x double> %temp.vect6995.i, double %3147, i32 2
  %temp.vect6997.i = insertelement <16 x double> %temp.vect6996.i, double %3148, i32 3
  %temp.vect6998.i = insertelement <16 x double> %temp.vect6997.i, double %3149, i32 4
  %temp.vect6999.i = insertelement <16 x double> %temp.vect6998.i, double %3150, i32 5
  %temp.vect7000.i = insertelement <16 x double> %temp.vect6999.i, double %3151, i32 6
  %temp.vect7001.i = insertelement <16 x double> %temp.vect7000.i, double %3152, i32 7
  %temp.vect7002.i = insertelement <16 x double> %temp.vect7001.i, double %3153, i32 8
  %temp.vect7003.i = insertelement <16 x double> %temp.vect7002.i, double %3154, i32 9
  %temp.vect7004.i = insertelement <16 x double> %temp.vect7003.i, double %3155, i32 10
  %temp.vect7005.i = insertelement <16 x double> %temp.vect7004.i, double %3156, i32 11
  %temp.vect7006.i = insertelement <16 x double> %temp.vect7005.i, double %3157, i32 12
  %temp.vect7007.i = insertelement <16 x double> %temp.vect7006.i, double %3158, i32 13
  %temp.vect7008.i = insertelement <16 x double> %temp.vect7007.i, double %3159, i32 14
  %temp.vect7009.i = insertelement <16 x double> %temp.vect7008.i, double %3160, i32 15
  %3161 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %3162 = load i64* %3161, align 8
  %3163 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %3164 = load i64* %3163, align 8
  %3165 = add i64 %3162, %3164
  %extract6977.i = add i64 %3165, 21233664
  %3166 = getelementptr inbounds double addrspace(1)* %4, i64 %extract6977.i
  %ptrTypeCast6993.i = bitcast double addrspace(1)* %3166 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect7009.i, <16 x double> addrspace(1)* %ptrTypeCast6993.i, align 8
  %3167 = fadd <16 x double> %3141, <double 0x40315EF096D670BA, double 0x40315EF096D670BA, double 0x40315EF096D670BA, double 0x40315EF096D670BA, double 0x40315EF096D670BA, double 0x40315EF096D670BA, double 0x40315EF096D670BA, double 0x40315EF096D670BA, double 0x40315EF096D670BA, double 0x40315EF096D670BA, double 0x40315EF096D670BA, double 0x40315EF096D670BA, double 0x40315EF096D670BA, double 0x40315EF096D670BA, double 0x40315EF096D670BA, double 0x40315EF096D670BA>
  %3168 = fmul <16 x double> %41, <double 0x407E92068EC52A41, double 0x407E92068EC52A41, double 0x407E92068EC52A41, double 0x407E92068EC52A41, double 0x407E92068EC52A41, double 0x407E92068EC52A41, double 0x407E92068EC52A41, double 0x407E92068EC52A41, double 0x407E92068EC52A41, double 0x407E92068EC52A41, double 0x407E92068EC52A41, double 0x407E92068EC52A41, double 0x407E92068EC52A41, double 0x407E92068EC52A41, double 0x407E92068EC52A41, double 0x407E92068EC52A41>
  %3169 = fadd <16 x double> %3167, %3168
  %extract7010.i = extractelement <16 x double> %3169, i32 0
  %extract7011.i = extractelement <16 x double> %3169, i32 1
  %extract7012.i = extractelement <16 x double> %3169, i32 2
  %extract7013.i = extractelement <16 x double> %3169, i32 3
  %extract7014.i = extractelement <16 x double> %3169, i32 4
  %extract7015.i = extractelement <16 x double> %3169, i32 5
  %extract7016.i = extractelement <16 x double> %3169, i32 6
  %extract7017.i = extractelement <16 x double> %3169, i32 7
  %extract7018.i = extractelement <16 x double> %3169, i32 8
  %extract7019.i = extractelement <16 x double> %3169, i32 9
  %extract7020.i = extractelement <16 x double> %3169, i32 10
  %extract7021.i = extractelement <16 x double> %3169, i32 11
  %extract7022.i = extractelement <16 x double> %3169, i32 12
  %extract7023.i = extractelement <16 x double> %3169, i32 13
  %extract7024.i = extractelement <16 x double> %3169, i32 14
  %extract7025.i = extractelement <16 x double> %3169, i32 15
  %3170 = call double @_Z3expd(double %extract7010.i) nounwind
  %3171 = call double @_Z3expd(double %extract7011.i) nounwind
  %3172 = call double @_Z3expd(double %extract7012.i) nounwind
  %3173 = call double @_Z3expd(double %extract7013.i) nounwind
  %3174 = call double @_Z3expd(double %extract7014.i) nounwind
  %3175 = call double @_Z3expd(double %extract7015.i) nounwind
  %3176 = call double @_Z3expd(double %extract7016.i) nounwind
  %3177 = call double @_Z3expd(double %extract7017.i) nounwind
  %3178 = call double @_Z3expd(double %extract7018.i) nounwind
  %3179 = call double @_Z3expd(double %extract7019.i) nounwind
  %3180 = call double @_Z3expd(double %extract7020.i) nounwind
  %3181 = call double @_Z3expd(double %extract7021.i) nounwind
  %3182 = call double @_Z3expd(double %extract7022.i) nounwind
  %3183 = call double @_Z3expd(double %extract7023.i) nounwind
  %3184 = call double @_Z3expd(double %extract7024.i) nounwind
  %3185 = call double @_Z3expd(double %extract7025.i) nounwind
  %temp.vect7045.i = insertelement <16 x double> undef, double %3170, i32 0
  %temp.vect7046.i = insertelement <16 x double> %temp.vect7045.i, double %3171, i32 1
  %temp.vect7047.i = insertelement <16 x double> %temp.vect7046.i, double %3172, i32 2
  %temp.vect7048.i = insertelement <16 x double> %temp.vect7047.i, double %3173, i32 3
  %temp.vect7049.i = insertelement <16 x double> %temp.vect7048.i, double %3174, i32 4
  %temp.vect7050.i = insertelement <16 x double> %temp.vect7049.i, double %3175, i32 5
  %temp.vect7051.i = insertelement <16 x double> %temp.vect7050.i, double %3176, i32 6
  %temp.vect7052.i = insertelement <16 x double> %temp.vect7051.i, double %3177, i32 7
  %temp.vect7053.i = insertelement <16 x double> %temp.vect7052.i, double %3178, i32 8
  %temp.vect7054.i = insertelement <16 x double> %temp.vect7053.i, double %3179, i32 9
  %temp.vect7055.i = insertelement <16 x double> %temp.vect7054.i, double %3180, i32 10
  %temp.vect7056.i = insertelement <16 x double> %temp.vect7055.i, double %3181, i32 11
  %temp.vect7057.i = insertelement <16 x double> %temp.vect7056.i, double %3182, i32 12
  %temp.vect7058.i = insertelement <16 x double> %temp.vect7057.i, double %3183, i32 13
  %temp.vect7059.i = insertelement <16 x double> %temp.vect7058.i, double %3184, i32 14
  %temp.vect7060.i = insertelement <16 x double> %temp.vect7059.i, double %3185, i32 15
  %3186 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %3187 = load i64* %3186, align 8
  %3188 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %3189 = load i64* %3188, align 8
  %3190 = add i64 %3187, %3189
  %extract7028.i = add i64 %3190, 21344256
  %3191 = getelementptr inbounds double addrspace(1)* %4, i64 %extract7028.i
  %ptrTypeCast7044.i = bitcast double addrspace(1)* %3191 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect7060.i, <16 x double> addrspace(1)* %ptrTypeCast7044.i, align 8
  %3192 = fmul <16 x double> %temp.vect97.i, <double 7.000000e-01, double 7.000000e-01, double 7.000000e-01, double 7.000000e-01, double 7.000000e-01, double 7.000000e-01, double 7.000000e-01, double 7.000000e-01, double 7.000000e-01, double 7.000000e-01, double 7.000000e-01, double 7.000000e-01, double 7.000000e-01, double 7.000000e-01, double 7.000000e-01, double 7.000000e-01>
  %3193 = fadd <16 x double> %3192, <double 0x4039EA8D92245A52, double 0x4039EA8D92245A52, double 0x4039EA8D92245A52, double 0x4039EA8D92245A52, double 0x4039EA8D92245A52, double 0x4039EA8D92245A52, double 0x4039EA8D92245A52, double 0x4039EA8D92245A52, double 0x4039EA8D92245A52, double 0x4039EA8D92245A52, double 0x4039EA8D92245A52, double 0x4039EA8D92245A52, double 0x4039EA8D92245A52, double 0x4039EA8D92245A52, double 0x4039EA8D92245A52, double 0x4039EA8D92245A52>
  %3194 = fmul <16 x double> %41, <double 0x40A71DD3F91E646F, double 0x40A71DD3F91E646F, double 0x40A71DD3F91E646F, double 0x40A71DD3F91E646F, double 0x40A71DD3F91E646F, double 0x40A71DD3F91E646F, double 0x40A71DD3F91E646F, double 0x40A71DD3F91E646F, double 0x40A71DD3F91E646F, double 0x40A71DD3F91E646F, double 0x40A71DD3F91E646F, double 0x40A71DD3F91E646F, double 0x40A71DD3F91E646F, double 0x40A71DD3F91E646F, double 0x40A71DD3F91E646F, double 0x40A71DD3F91E646F>
  %3195 = fsub <16 x double> %3193, %3194
  %extract7061.i = extractelement <16 x double> %3195, i32 0
  %extract7062.i = extractelement <16 x double> %3195, i32 1
  %extract7063.i = extractelement <16 x double> %3195, i32 2
  %extract7064.i = extractelement <16 x double> %3195, i32 3
  %extract7065.i = extractelement <16 x double> %3195, i32 4
  %extract7066.i = extractelement <16 x double> %3195, i32 5
  %extract7067.i = extractelement <16 x double> %3195, i32 6
  %extract7068.i = extractelement <16 x double> %3195, i32 7
  %extract7069.i = extractelement <16 x double> %3195, i32 8
  %extract7070.i = extractelement <16 x double> %3195, i32 9
  %extract7071.i = extractelement <16 x double> %3195, i32 10
  %extract7072.i = extractelement <16 x double> %3195, i32 11
  %extract7073.i = extractelement <16 x double> %3195, i32 12
  %extract7074.i = extractelement <16 x double> %3195, i32 13
  %extract7075.i = extractelement <16 x double> %3195, i32 14
  %extract7076.i = extractelement <16 x double> %3195, i32 15
  %3196 = call double @_Z3expd(double %extract7061.i) nounwind
  %3197 = call double @_Z3expd(double %extract7062.i) nounwind
  %3198 = call double @_Z3expd(double %extract7063.i) nounwind
  %3199 = call double @_Z3expd(double %extract7064.i) nounwind
  %3200 = call double @_Z3expd(double %extract7065.i) nounwind
  %3201 = call double @_Z3expd(double %extract7066.i) nounwind
  %3202 = call double @_Z3expd(double %extract7067.i) nounwind
  %3203 = call double @_Z3expd(double %extract7068.i) nounwind
  %3204 = call double @_Z3expd(double %extract7069.i) nounwind
  %3205 = call double @_Z3expd(double %extract7070.i) nounwind
  %3206 = call double @_Z3expd(double %extract7071.i) nounwind
  %3207 = call double @_Z3expd(double %extract7072.i) nounwind
  %3208 = call double @_Z3expd(double %extract7073.i) nounwind
  %3209 = call double @_Z3expd(double %extract7074.i) nounwind
  %3210 = call double @_Z3expd(double %extract7075.i) nounwind
  %3211 = call double @_Z3expd(double %extract7076.i) nounwind
  %temp.vect7096.i = insertelement <16 x double> undef, double %3196, i32 0
  %temp.vect7097.i = insertelement <16 x double> %temp.vect7096.i, double %3197, i32 1
  %temp.vect7098.i = insertelement <16 x double> %temp.vect7097.i, double %3198, i32 2
  %temp.vect7099.i = insertelement <16 x double> %temp.vect7098.i, double %3199, i32 3
  %temp.vect7100.i = insertelement <16 x double> %temp.vect7099.i, double %3200, i32 4
  %temp.vect7101.i = insertelement <16 x double> %temp.vect7100.i, double %3201, i32 5
  %temp.vect7102.i = insertelement <16 x double> %temp.vect7101.i, double %3202, i32 6
  %temp.vect7103.i = insertelement <16 x double> %temp.vect7102.i, double %3203, i32 7
  %temp.vect7104.i = insertelement <16 x double> %temp.vect7103.i, double %3204, i32 8
  %temp.vect7105.i = insertelement <16 x double> %temp.vect7104.i, double %3205, i32 9
  %temp.vect7106.i = insertelement <16 x double> %temp.vect7105.i, double %3206, i32 10
  %temp.vect7107.i = insertelement <16 x double> %temp.vect7106.i, double %3207, i32 11
  %temp.vect7108.i = insertelement <16 x double> %temp.vect7107.i, double %3208, i32 12
  %temp.vect7109.i = insertelement <16 x double> %temp.vect7108.i, double %3209, i32 13
  %temp.vect7110.i = insertelement <16 x double> %temp.vect7109.i, double %3210, i32 14
  %temp.vect7111.i = insertelement <16 x double> %temp.vect7110.i, double %3211, i32 15
  %3212 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %3213 = load i64* %3212, align 8
  %3214 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %3215 = load i64* %3214, align 8
  %3216 = add i64 %3213, %3215
  %extract7079.i = add i64 %3216, 21454848
  %3217 = getelementptr inbounds double addrspace(1)* %4, i64 %extract7079.i
  %ptrTypeCast7095.i = bitcast double addrspace(1)* %3217 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect7111.i, <16 x double> addrspace(1)* %ptrTypeCast7095.i, align 8
  %3218 = fadd <16 x double> %498, <double 0x402DE4D1BDCD5589, double 0x402DE4D1BDCD5589, double 0x402DE4D1BDCD5589, double 0x402DE4D1BDCD5589, double 0x402DE4D1BDCD5589, double 0x402DE4D1BDCD5589, double 0x402DE4D1BDCD5589, double 0x402DE4D1BDCD5589, double 0x402DE4D1BDCD5589, double 0x402DE4D1BDCD5589, double 0x402DE4D1BDCD5589, double 0x402DE4D1BDCD5589, double 0x402DE4D1BDCD5589, double 0x402DE4D1BDCD5589, double 0x402DE4D1BDCD5589, double 0x402DE4D1BDCD5589>
  %3219 = fmul <16 x double> %41, <double 0x4062BEAC94B380CB, double 0x4062BEAC94B380CB, double 0x4062BEAC94B380CB, double 0x4062BEAC94B380CB, double 0x4062BEAC94B380CB, double 0x4062BEAC94B380CB, double 0x4062BEAC94B380CB, double 0x4062BEAC94B380CB, double 0x4062BEAC94B380CB, double 0x4062BEAC94B380CB, double 0x4062BEAC94B380CB, double 0x4062BEAC94B380CB, double 0x4062BEAC94B380CB, double 0x4062BEAC94B380CB, double 0x4062BEAC94B380CB, double 0x4062BEAC94B380CB>
  %3220 = fadd <16 x double> %3218, %3219
  %extract7112.i = extractelement <16 x double> %3220, i32 0
  %extract7113.i = extractelement <16 x double> %3220, i32 1
  %extract7114.i = extractelement <16 x double> %3220, i32 2
  %extract7115.i = extractelement <16 x double> %3220, i32 3
  %extract7116.i = extractelement <16 x double> %3220, i32 4
  %extract7117.i = extractelement <16 x double> %3220, i32 5
  %extract7118.i = extractelement <16 x double> %3220, i32 6
  %extract7119.i = extractelement <16 x double> %3220, i32 7
  %extract7120.i = extractelement <16 x double> %3220, i32 8
  %extract7121.i = extractelement <16 x double> %3220, i32 9
  %extract7122.i = extractelement <16 x double> %3220, i32 10
  %extract7123.i = extractelement <16 x double> %3220, i32 11
  %extract7124.i = extractelement <16 x double> %3220, i32 12
  %extract7125.i = extractelement <16 x double> %3220, i32 13
  %extract7126.i = extractelement <16 x double> %3220, i32 14
  %extract7127.i = extractelement <16 x double> %3220, i32 15
  %3221 = call double @_Z3expd(double %extract7112.i) nounwind
  %3222 = call double @_Z3expd(double %extract7113.i) nounwind
  %3223 = call double @_Z3expd(double %extract7114.i) nounwind
  %3224 = call double @_Z3expd(double %extract7115.i) nounwind
  %3225 = call double @_Z3expd(double %extract7116.i) nounwind
  %3226 = call double @_Z3expd(double %extract7117.i) nounwind
  %3227 = call double @_Z3expd(double %extract7118.i) nounwind
  %3228 = call double @_Z3expd(double %extract7119.i) nounwind
  %3229 = call double @_Z3expd(double %extract7120.i) nounwind
  %3230 = call double @_Z3expd(double %extract7121.i) nounwind
  %3231 = call double @_Z3expd(double %extract7122.i) nounwind
  %3232 = call double @_Z3expd(double %extract7123.i) nounwind
  %3233 = call double @_Z3expd(double %extract7124.i) nounwind
  %3234 = call double @_Z3expd(double %extract7125.i) nounwind
  %3235 = call double @_Z3expd(double %extract7126.i) nounwind
  %3236 = call double @_Z3expd(double %extract7127.i) nounwind
  %temp.vect7147.i = insertelement <16 x double> undef, double %3221, i32 0
  %temp.vect7148.i = insertelement <16 x double> %temp.vect7147.i, double %3222, i32 1
  %temp.vect7149.i = insertelement <16 x double> %temp.vect7148.i, double %3223, i32 2
  %temp.vect7150.i = insertelement <16 x double> %temp.vect7149.i, double %3224, i32 3
  %temp.vect7151.i = insertelement <16 x double> %temp.vect7150.i, double %3225, i32 4
  %temp.vect7152.i = insertelement <16 x double> %temp.vect7151.i, double %3226, i32 5
  %temp.vect7153.i = insertelement <16 x double> %temp.vect7152.i, double %3227, i32 6
  %temp.vect7154.i = insertelement <16 x double> %temp.vect7153.i, double %3228, i32 7
  %temp.vect7155.i = insertelement <16 x double> %temp.vect7154.i, double %3229, i32 8
  %temp.vect7156.i = insertelement <16 x double> %temp.vect7155.i, double %3230, i32 9
  %temp.vect7157.i = insertelement <16 x double> %temp.vect7156.i, double %3231, i32 10
  %temp.vect7158.i = insertelement <16 x double> %temp.vect7157.i, double %3232, i32 11
  %temp.vect7159.i = insertelement <16 x double> %temp.vect7158.i, double %3233, i32 12
  %temp.vect7160.i = insertelement <16 x double> %temp.vect7159.i, double %3234, i32 13
  %temp.vect7161.i = insertelement <16 x double> %temp.vect7160.i, double %3235, i32 14
  %temp.vect7162.i = insertelement <16 x double> %temp.vect7161.i, double %3236, i32 15
  %3237 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %3238 = load i64* %3237, align 8
  %3239 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %3240 = load i64* %3239, align 8
  %3241 = add i64 %3238, %3240
  %extract7130.i = add i64 %3241, 21565440
  %3242 = getelementptr inbounds double addrspace(1)* %4, i64 %extract7130.i
  %ptrTypeCast7146.i = bitcast double addrspace(1)* %3242 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect7162.i, <16 x double> addrspace(1)* %ptrTypeCast7146.i, align 8
  %3243 = fmul <16 x double> %temp.vect97.i, <double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00, double 2.600000e+00>
  %3244 = fadd <16 x double> %3243, <double 0x402256CB1CF45780, double 0x402256CB1CF45780, double 0x402256CB1CF45780, double 0x402256CB1CF45780, double 0x402256CB1CF45780, double 0x402256CB1CF45780, double 0x402256CB1CF45780, double 0x402256CB1CF45780, double 0x402256CB1CF45780, double 0x402256CB1CF45780, double 0x402256CB1CF45780, double 0x402256CB1CF45780, double 0x402256CB1CF45780, double 0x402256CB1CF45780, double 0x402256CB1CF45780, double 0x402256CB1CF45780>
  %3245 = fmul <16 x double> %41, <double 0x40BB57BE6CF41F21, double 0x40BB57BE6CF41F21, double 0x40BB57BE6CF41F21, double 0x40BB57BE6CF41F21, double 0x40BB57BE6CF41F21, double 0x40BB57BE6CF41F21, double 0x40BB57BE6CF41F21, double 0x40BB57BE6CF41F21, double 0x40BB57BE6CF41F21, double 0x40BB57BE6CF41F21, double 0x40BB57BE6CF41F21, double 0x40BB57BE6CF41F21, double 0x40BB57BE6CF41F21, double 0x40BB57BE6CF41F21, double 0x40BB57BE6CF41F21, double 0x40BB57BE6CF41F21>
  %3246 = fsub <16 x double> %3244, %3245
  %extract7163.i = extractelement <16 x double> %3246, i32 0
  %extract7164.i = extractelement <16 x double> %3246, i32 1
  %extract7165.i = extractelement <16 x double> %3246, i32 2
  %extract7166.i = extractelement <16 x double> %3246, i32 3
  %extract7167.i = extractelement <16 x double> %3246, i32 4
  %extract7168.i = extractelement <16 x double> %3246, i32 5
  %extract7169.i = extractelement <16 x double> %3246, i32 6
  %extract7170.i = extractelement <16 x double> %3246, i32 7
  %extract7171.i = extractelement <16 x double> %3246, i32 8
  %extract7172.i = extractelement <16 x double> %3246, i32 9
  %extract7173.i = extractelement <16 x double> %3246, i32 10
  %extract7174.i = extractelement <16 x double> %3246, i32 11
  %extract7175.i = extractelement <16 x double> %3246, i32 12
  %extract7176.i = extractelement <16 x double> %3246, i32 13
  %extract7177.i = extractelement <16 x double> %3246, i32 14
  %extract7178.i = extractelement <16 x double> %3246, i32 15
  %3247 = call double @_Z3expd(double %extract7163.i) nounwind
  %3248 = call double @_Z3expd(double %extract7164.i) nounwind
  %3249 = call double @_Z3expd(double %extract7165.i) nounwind
  %3250 = call double @_Z3expd(double %extract7166.i) nounwind
  %3251 = call double @_Z3expd(double %extract7167.i) nounwind
  %3252 = call double @_Z3expd(double %extract7168.i) nounwind
  %3253 = call double @_Z3expd(double %extract7169.i) nounwind
  %3254 = call double @_Z3expd(double %extract7170.i) nounwind
  %3255 = call double @_Z3expd(double %extract7171.i) nounwind
  %3256 = call double @_Z3expd(double %extract7172.i) nounwind
  %3257 = call double @_Z3expd(double %extract7173.i) nounwind
  %3258 = call double @_Z3expd(double %extract7174.i) nounwind
  %3259 = call double @_Z3expd(double %extract7175.i) nounwind
  %3260 = call double @_Z3expd(double %extract7176.i) nounwind
  %3261 = call double @_Z3expd(double %extract7177.i) nounwind
  %3262 = call double @_Z3expd(double %extract7178.i) nounwind
  %temp.vect7198.i = insertelement <16 x double> undef, double %3247, i32 0
  %temp.vect7199.i = insertelement <16 x double> %temp.vect7198.i, double %3248, i32 1
  %temp.vect7200.i = insertelement <16 x double> %temp.vect7199.i, double %3249, i32 2
  %temp.vect7201.i = insertelement <16 x double> %temp.vect7200.i, double %3250, i32 3
  %temp.vect7202.i = insertelement <16 x double> %temp.vect7201.i, double %3251, i32 4
  %temp.vect7203.i = insertelement <16 x double> %temp.vect7202.i, double %3252, i32 5
  %temp.vect7204.i = insertelement <16 x double> %temp.vect7203.i, double %3253, i32 6
  %temp.vect7205.i = insertelement <16 x double> %temp.vect7204.i, double %3254, i32 7
  %temp.vect7206.i = insertelement <16 x double> %temp.vect7205.i, double %3255, i32 8
  %temp.vect7207.i = insertelement <16 x double> %temp.vect7206.i, double %3256, i32 9
  %temp.vect7208.i = insertelement <16 x double> %temp.vect7207.i, double %3257, i32 10
  %temp.vect7209.i = insertelement <16 x double> %temp.vect7208.i, double %3258, i32 11
  %temp.vect7210.i = insertelement <16 x double> %temp.vect7209.i, double %3259, i32 12
  %temp.vect7211.i = insertelement <16 x double> %temp.vect7210.i, double %3260, i32 13
  %temp.vect7212.i = insertelement <16 x double> %temp.vect7211.i, double %3261, i32 14
  %temp.vect7213.i = insertelement <16 x double> %temp.vect7212.i, double %3262, i32 15
  %3263 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %3264 = load i64* %3263, align 8
  %3265 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %3266 = load i64* %3265, align 8
  %3267 = add i64 %3264, %3266
  %extract7181.i = add i64 %3267, 21676032
  %3268 = getelementptr inbounds double addrspace(1)* %4, i64 %extract7181.i
  %ptrTypeCast7197.i = bitcast double addrspace(1)* %3268 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect7213.i, <16 x double> addrspace(1)* %ptrTypeCast7197.i, align 8
  %3269 = fmul <16 x double> %temp.vect97.i, <double 3.500000e+00, double 3.500000e+00, double 3.500000e+00, double 3.500000e+00, double 3.500000e+00, double 3.500000e+00, double 3.500000e+00, double 3.500000e+00, double 3.500000e+00, double 3.500000e+00, double 3.500000e+00, double 3.500000e+00, double 3.500000e+00, double 3.500000e+00, double 3.500000e+00, double 3.500000e+00>
  %3270 = fadd <16 x double> %3269, <double 0x3FE93B0AEDEFB22A, double 0x3FE93B0AEDEFB22A, double 0x3FE93B0AEDEFB22A, double 0x3FE93B0AEDEFB22A, double 0x3FE93B0AEDEFB22A, double 0x3FE93B0AEDEFB22A, double 0x3FE93B0AEDEFB22A, double 0x3FE93B0AEDEFB22A, double 0x3FE93B0AEDEFB22A, double 0x3FE93B0AEDEFB22A, double 0x3FE93B0AEDEFB22A, double 0x3FE93B0AEDEFB22A, double 0x3FE93B0AEDEFB22A, double 0x3FE93B0AEDEFB22A, double 0x3FE93B0AEDEFB22A, double 0x3FE93B0AEDEFB22A>
  %3271 = fmul <16 x double> %41, <double 0x40A64F82599ED7C7, double 0x40A64F82599ED7C7, double 0x40A64F82599ED7C7, double 0x40A64F82599ED7C7, double 0x40A64F82599ED7C7, double 0x40A64F82599ED7C7, double 0x40A64F82599ED7C7, double 0x40A64F82599ED7C7, double 0x40A64F82599ED7C7, double 0x40A64F82599ED7C7, double 0x40A64F82599ED7C7, double 0x40A64F82599ED7C7, double 0x40A64F82599ED7C7, double 0x40A64F82599ED7C7, double 0x40A64F82599ED7C7, double 0x40A64F82599ED7C7>
  %3272 = fsub <16 x double> %3270, %3271
  %extract7214.i = extractelement <16 x double> %3272, i32 0
  %extract7215.i = extractelement <16 x double> %3272, i32 1
  %extract7216.i = extractelement <16 x double> %3272, i32 2
  %extract7217.i = extractelement <16 x double> %3272, i32 3
  %extract7218.i = extractelement <16 x double> %3272, i32 4
  %extract7219.i = extractelement <16 x double> %3272, i32 5
  %extract7220.i = extractelement <16 x double> %3272, i32 6
  %extract7221.i = extractelement <16 x double> %3272, i32 7
  %extract7222.i = extractelement <16 x double> %3272, i32 8
  %extract7223.i = extractelement <16 x double> %3272, i32 9
  %extract7224.i = extractelement <16 x double> %3272, i32 10
  %extract7225.i = extractelement <16 x double> %3272, i32 11
  %extract7226.i = extractelement <16 x double> %3272, i32 12
  %extract7227.i = extractelement <16 x double> %3272, i32 13
  %extract7228.i = extractelement <16 x double> %3272, i32 14
  %extract7229.i = extractelement <16 x double> %3272, i32 15
  %3273 = call double @_Z3expd(double %extract7214.i) nounwind
  %3274 = call double @_Z3expd(double %extract7215.i) nounwind
  %3275 = call double @_Z3expd(double %extract7216.i) nounwind
  %3276 = call double @_Z3expd(double %extract7217.i) nounwind
  %3277 = call double @_Z3expd(double %extract7218.i) nounwind
  %3278 = call double @_Z3expd(double %extract7219.i) nounwind
  %3279 = call double @_Z3expd(double %extract7220.i) nounwind
  %3280 = call double @_Z3expd(double %extract7221.i) nounwind
  %3281 = call double @_Z3expd(double %extract7222.i) nounwind
  %3282 = call double @_Z3expd(double %extract7223.i) nounwind
  %3283 = call double @_Z3expd(double %extract7224.i) nounwind
  %3284 = call double @_Z3expd(double %extract7225.i) nounwind
  %3285 = call double @_Z3expd(double %extract7226.i) nounwind
  %3286 = call double @_Z3expd(double %extract7227.i) nounwind
  %3287 = call double @_Z3expd(double %extract7228.i) nounwind
  %3288 = call double @_Z3expd(double %extract7229.i) nounwind
  %temp.vect7249.i = insertelement <16 x double> undef, double %3273, i32 0
  %temp.vect7250.i = insertelement <16 x double> %temp.vect7249.i, double %3274, i32 1
  %temp.vect7251.i = insertelement <16 x double> %temp.vect7250.i, double %3275, i32 2
  %temp.vect7252.i = insertelement <16 x double> %temp.vect7251.i, double %3276, i32 3
  %temp.vect7253.i = insertelement <16 x double> %temp.vect7252.i, double %3277, i32 4
  %temp.vect7254.i = insertelement <16 x double> %temp.vect7253.i, double %3278, i32 5
  %temp.vect7255.i = insertelement <16 x double> %temp.vect7254.i, double %3279, i32 6
  %temp.vect7256.i = insertelement <16 x double> %temp.vect7255.i, double %3280, i32 7
  %temp.vect7257.i = insertelement <16 x double> %temp.vect7256.i, double %3281, i32 8
  %temp.vect7258.i = insertelement <16 x double> %temp.vect7257.i, double %3282, i32 9
  %temp.vect7259.i = insertelement <16 x double> %temp.vect7258.i, double %3283, i32 10
  %temp.vect7260.i = insertelement <16 x double> %temp.vect7259.i, double %3284, i32 11
  %temp.vect7261.i = insertelement <16 x double> %temp.vect7260.i, double %3285, i32 12
  %temp.vect7262.i = insertelement <16 x double> %temp.vect7261.i, double %3286, i32 13
  %temp.vect7263.i = insertelement <16 x double> %temp.vect7262.i, double %3287, i32 14
  %temp.vect7264.i = insertelement <16 x double> %temp.vect7263.i, double %3288, i32 15
  %3289 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %3290 = load i64* %3289, align 8
  %3291 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %3292 = load i64* %3291, align 8
  %3293 = add i64 %3290, %3292
  %extract7232.i = add i64 %3293, 21786624
  %3294 = getelementptr inbounds double addrspace(1)* %4, i64 %extract7232.i
  %ptrTypeCast7248.i = bitcast double addrspace(1)* %3294 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect7264.i, <16 x double> addrspace(1)* %ptrTypeCast7248.i, align 8
  %3295 = fmul <16 x double> %temp.vect97.i, <double 2.920000e+00, double 2.920000e+00, double 2.920000e+00, double 2.920000e+00, double 2.920000e+00, double 2.920000e+00, double 2.920000e+00, double 2.920000e+00, double 2.920000e+00, double 2.920000e+00, double 2.920000e+00, double 2.920000e+00, double 2.920000e+00, double 2.920000e+00, double 2.920000e+00, double 2.920000e+00>
  %3296 = fsub <16 x double> <double 0x404C49020D2079F3, double 0x404C49020D2079F3, double 0x404C49020D2079F3, double 0x404C49020D2079F3, double 0x404C49020D2079F3, double 0x404C49020D2079F3, double 0x404C49020D2079F3, double 0x404C49020D2079F3, double 0x404C49020D2079F3, double 0x404C49020D2079F3, double 0x404C49020D2079F3, double 0x404C49020D2079F3, double 0x404C49020D2079F3, double 0x404C49020D2079F3, double 0x404C49020D2079F3, double 0x404C49020D2079F3>, %3295
  %3297 = fmul <16 x double> %41, <double 0x40B894B9743E963E, double 0x40B894B9743E963E, double 0x40B894B9743E963E, double 0x40B894B9743E963E, double 0x40B894B9743E963E, double 0x40B894B9743E963E, double 0x40B894B9743E963E, double 0x40B894B9743E963E, double 0x40B894B9743E963E, double 0x40B894B9743E963E, double 0x40B894B9743E963E, double 0x40B894B9743E963E, double 0x40B894B9743E963E, double 0x40B894B9743E963E, double 0x40B894B9743E963E, double 0x40B894B9743E963E>
  %3298 = fsub <16 x double> %3296, %3297
  %extract7265.i = extractelement <16 x double> %3298, i32 0
  %extract7266.i = extractelement <16 x double> %3298, i32 1
  %extract7267.i = extractelement <16 x double> %3298, i32 2
  %extract7268.i = extractelement <16 x double> %3298, i32 3
  %extract7269.i = extractelement <16 x double> %3298, i32 4
  %extract7270.i = extractelement <16 x double> %3298, i32 5
  %extract7271.i = extractelement <16 x double> %3298, i32 6
  %extract7272.i = extractelement <16 x double> %3298, i32 7
  %extract7273.i = extractelement <16 x double> %3298, i32 8
  %extract7274.i = extractelement <16 x double> %3298, i32 9
  %extract7275.i = extractelement <16 x double> %3298, i32 10
  %extract7276.i = extractelement <16 x double> %3298, i32 11
  %extract7277.i = extractelement <16 x double> %3298, i32 12
  %extract7278.i = extractelement <16 x double> %3298, i32 13
  %extract7279.i = extractelement <16 x double> %3298, i32 14
  %extract7280.i = extractelement <16 x double> %3298, i32 15
  %3299 = call double @_Z3expd(double %extract7265.i) nounwind
  %3300 = call double @_Z3expd(double %extract7266.i) nounwind
  %3301 = call double @_Z3expd(double %extract7267.i) nounwind
  %3302 = call double @_Z3expd(double %extract7268.i) nounwind
  %3303 = call double @_Z3expd(double %extract7269.i) nounwind
  %3304 = call double @_Z3expd(double %extract7270.i) nounwind
  %3305 = call double @_Z3expd(double %extract7271.i) nounwind
  %3306 = call double @_Z3expd(double %extract7272.i) nounwind
  %3307 = call double @_Z3expd(double %extract7273.i) nounwind
  %3308 = call double @_Z3expd(double %extract7274.i) nounwind
  %3309 = call double @_Z3expd(double %extract7275.i) nounwind
  %3310 = call double @_Z3expd(double %extract7276.i) nounwind
  %3311 = call double @_Z3expd(double %extract7277.i) nounwind
  %3312 = call double @_Z3expd(double %extract7278.i) nounwind
  %3313 = call double @_Z3expd(double %extract7279.i) nounwind
  %3314 = call double @_Z3expd(double %extract7280.i) nounwind
  %temp.vect7300.i = insertelement <16 x double> undef, double %3299, i32 0
  %temp.vect7301.i = insertelement <16 x double> %temp.vect7300.i, double %3300, i32 1
  %temp.vect7302.i = insertelement <16 x double> %temp.vect7301.i, double %3301, i32 2
  %temp.vect7303.i = insertelement <16 x double> %temp.vect7302.i, double %3302, i32 3
  %temp.vect7304.i = insertelement <16 x double> %temp.vect7303.i, double %3303, i32 4
  %temp.vect7305.i = insertelement <16 x double> %temp.vect7304.i, double %3304, i32 5
  %temp.vect7306.i = insertelement <16 x double> %temp.vect7305.i, double %3305, i32 6
  %temp.vect7307.i = insertelement <16 x double> %temp.vect7306.i, double %3306, i32 7
  %temp.vect7308.i = insertelement <16 x double> %temp.vect7307.i, double %3307, i32 8
  %temp.vect7309.i = insertelement <16 x double> %temp.vect7308.i, double %3308, i32 9
  %temp.vect7310.i = insertelement <16 x double> %temp.vect7309.i, double %3309, i32 10
  %temp.vect7311.i = insertelement <16 x double> %temp.vect7310.i, double %3310, i32 11
  %temp.vect7312.i = insertelement <16 x double> %temp.vect7311.i, double %3311, i32 12
  %temp.vect7313.i = insertelement <16 x double> %temp.vect7312.i, double %3312, i32 13
  %temp.vect7314.i = insertelement <16 x double> %temp.vect7313.i, double %3313, i32 14
  %temp.vect7315.i = insertelement <16 x double> %temp.vect7314.i, double %3314, i32 15
  %3315 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %3316 = load i64* %3315, align 8
  %3317 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %3318 = load i64* %3317, align 8
  %3319 = add i64 %3316, %3318
  %extract7283.i = add i64 %3319, 21897216
  %3320 = getelementptr inbounds double addrspace(1)* %4, i64 %extract7283.i
  %ptrTypeCast7299.i = bitcast double addrspace(1)* %3320 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect7315.i, <16 x double> addrspace(1)* %ptrTypeCast7299.i, align 8
  %3321 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %3322 = load i64* %3321, align 8
  %3323 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %3324 = load i64* %3323, align 8
  %3325 = add i64 %3322, %3324
  %extract7318.i = add i64 %3325, 22007808
  %3326 = getelementptr inbounds double addrspace(1)* %4, i64 %extract7318.i
  %ptrTypeCast7334.i = bitcast double addrspace(1)* %3326 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.800000e+12, double 1.800000e+12, double 1.800000e+12, double 1.800000e+12, double 1.800000e+12, double 1.800000e+12, double 1.800000e+12, double 1.800000e+12, double 1.800000e+12, double 1.800000e+12, double 1.800000e+12, double 1.800000e+12, double 1.800000e+12, double 1.800000e+12, double 1.800000e+12, double 1.800000e+12>, <16 x double> addrspace(1)* %ptrTypeCast7334.i, align 8
  %3327 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %3328 = load i64* %3327, align 8
  %3329 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %3330 = load i64* %3329, align 8
  %3331 = add i64 %3328, %3330
  %extract7337.i = add i64 %3331, 22118400
  %3332 = getelementptr inbounds double addrspace(1)* %4, i64 %extract7337.i
  %ptrTypeCast7353.i = bitcast double addrspace(1)* %3332 to <16 x double> addrspace(1)*
  store <16 x double> <double 9.600000e+13, double 9.600000e+13, double 9.600000e+13, double 9.600000e+13, double 9.600000e+13, double 9.600000e+13, double 9.600000e+13, double 9.600000e+13, double 9.600000e+13, double 9.600000e+13, double 9.600000e+13, double 9.600000e+13, double 9.600000e+13, double 9.600000e+13, double 9.600000e+13, double 9.600000e+13>, <16 x double> addrspace(1)* %ptrTypeCast7353.i, align 8
  %3333 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %3334 = load i64* %3333, align 8
  %3335 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %3336 = load i64* %3335, align 8
  %3337 = add i64 %3334, %3336
  %extract7356.i = add i64 %3337, 22228992
  %3338 = getelementptr inbounds double addrspace(1)* %4, i64 %extract7356.i
  %ptrTypeCast7372.i = bitcast double addrspace(1)* %3338 to <16 x double> addrspace(1)*
  store <16 x double> <double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13>, <16 x double> addrspace(1)* %ptrTypeCast7372.i, align 8
  %3339 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %3340 = load i64* %3339, align 8
  %3341 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %3342 = load i64* %3341, align 8
  %3343 = add i64 %3340, %3342
  %extract7375.i = add i64 %3343, 22339584
  %3344 = getelementptr inbounds double addrspace(1)* %4, i64 %extract7375.i
  %ptrTypeCast7391.i = bitcast double addrspace(1)* %3344 to <16 x double> addrspace(1)*
  store <16 x double> <double 9.000000e+10, double 9.000000e+10, double 9.000000e+10, double 9.000000e+10, double 9.000000e+10, double 9.000000e+10, double 9.000000e+10, double 9.000000e+10, double 9.000000e+10, double 9.000000e+10, double 9.000000e+10, double 9.000000e+10, double 9.000000e+10, double 9.000000e+10, double 9.000000e+10, double 9.000000e+10>, <16 x double> addrspace(1)* %ptrTypeCast7391.i, align 8
  %3345 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %3346 = load i64* %3345, align 8
  %3347 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %3348 = load i64* %3347, align 8
  %3349 = add i64 %3346, %3348
  %extract7394.i = add i64 %3349, 22450176
  %3350 = getelementptr inbounds double addrspace(1)* %4, i64 %extract7394.i
  %ptrTypeCast7410.i = bitcast double addrspace(1)* %3350 to <16 x double> addrspace(1)*
  store <16 x double> <double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13, double 2.400000e+13>, <16 x double> addrspace(1)* %ptrTypeCast7410.i, align 8
  %3351 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %3352 = load i64* %3351, align 8
  %3353 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %3354 = load i64* %3353, align 8
  %3355 = add i64 %3352, %3354
  %extract7413.i = add i64 %3355, 22560768
  %3356 = getelementptr inbounds double addrspace(1)* %4, i64 %extract7413.i
  %ptrTypeCast7429.i = bitcast double addrspace(1)* %3356 to <16 x double> addrspace(1)*
  store <16 x double> <double 1.100000e+13, double 1.100000e+13, double 1.100000e+13, double 1.100000e+13, double 1.100000e+13, double 1.100000e+13, double 1.100000e+13, double 1.100000e+13, double 1.100000e+13, double 1.100000e+13, double 1.100000e+13, double 1.100000e+13, double 1.100000e+13, double 1.100000e+13, double 1.100000e+13, double 1.100000e+13>, <16 x double> addrspace(1)* %ptrTypeCast7429.i, align 8
  %3357 = fmul <16 x double> %temp.vect97.i, <double 5.220000e+00, double 5.220000e+00, double 5.220000e+00, double 5.220000e+00, double 5.220000e+00, double 5.220000e+00, double 5.220000e+00, double 5.220000e+00, double 5.220000e+00, double 5.220000e+00, double 5.220000e+00, double 5.220000e+00, double 5.220000e+00, double 5.220000e+00, double 5.220000e+00, double 5.220000e+00>
  %3358 = fsub <16 x double> <double 0x4052C2CBF8FCD680, double 0x4052C2CBF8FCD680, double 0x4052C2CBF8FCD680, double 0x4052C2CBF8FCD680, double 0x4052C2CBF8FCD680, double 0x4052C2CBF8FCD680, double 0x4052C2CBF8FCD680, double 0x4052C2CBF8FCD680, double 0x4052C2CBF8FCD680, double 0x4052C2CBF8FCD680, double 0x4052C2CBF8FCD680, double 0x4052C2CBF8FCD680, double 0x4052C2CBF8FCD680, double 0x4052C2CBF8FCD680, double 0x4052C2CBF8FCD680, double 0x4052C2CBF8FCD680>, %3357
  %3359 = fmul <16 x double> %41, <double 0x40C368828049667B, double 0x40C368828049667B, double 0x40C368828049667B, double 0x40C368828049667B, double 0x40C368828049667B, double 0x40C368828049667B, double 0x40C368828049667B, double 0x40C368828049667B, double 0x40C368828049667B, double 0x40C368828049667B, double 0x40C368828049667B, double 0x40C368828049667B, double 0x40C368828049667B, double 0x40C368828049667B, double 0x40C368828049667B, double 0x40C368828049667B>
  %3360 = fsub <16 x double> %3358, %3359
  %extract7430.i = extractelement <16 x double> %3360, i32 0
  %extract7431.i = extractelement <16 x double> %3360, i32 1
  %extract7432.i = extractelement <16 x double> %3360, i32 2
  %extract7433.i = extractelement <16 x double> %3360, i32 3
  %extract7434.i = extractelement <16 x double> %3360, i32 4
  %extract7435.i = extractelement <16 x double> %3360, i32 5
  %extract7436.i = extractelement <16 x double> %3360, i32 6
  %extract7437.i = extractelement <16 x double> %3360, i32 7
  %extract7438.i = extractelement <16 x double> %3360, i32 8
  %extract7439.i = extractelement <16 x double> %3360, i32 9
  %extract7440.i = extractelement <16 x double> %3360, i32 10
  %extract7441.i = extractelement <16 x double> %3360, i32 11
  %extract7442.i = extractelement <16 x double> %3360, i32 12
  %extract7443.i = extractelement <16 x double> %3360, i32 13
  %extract7444.i = extractelement <16 x double> %3360, i32 14
  %extract7445.i = extractelement <16 x double> %3360, i32 15
  %3361 = call double @_Z3expd(double %extract7430.i) nounwind
  %3362 = call double @_Z3expd(double %extract7431.i) nounwind
  %3363 = call double @_Z3expd(double %extract7432.i) nounwind
  %3364 = call double @_Z3expd(double %extract7433.i) nounwind
  %3365 = call double @_Z3expd(double %extract7434.i) nounwind
  %3366 = call double @_Z3expd(double %extract7435.i) nounwind
  %3367 = call double @_Z3expd(double %extract7436.i) nounwind
  %3368 = call double @_Z3expd(double %extract7437.i) nounwind
  %3369 = call double @_Z3expd(double %extract7438.i) nounwind
  %3370 = call double @_Z3expd(double %extract7439.i) nounwind
  %3371 = call double @_Z3expd(double %extract7440.i) nounwind
  %3372 = call double @_Z3expd(double %extract7441.i) nounwind
  %3373 = call double @_Z3expd(double %extract7442.i) nounwind
  %3374 = call double @_Z3expd(double %extract7443.i) nounwind
  %3375 = call double @_Z3expd(double %extract7444.i) nounwind
  %3376 = call double @_Z3expd(double %extract7445.i) nounwind
  %temp.vect7465.i = insertelement <16 x double> undef, double %3361, i32 0
  %temp.vect7466.i = insertelement <16 x double> %temp.vect7465.i, double %3362, i32 1
  %temp.vect7467.i = insertelement <16 x double> %temp.vect7466.i, double %3363, i32 2
  %temp.vect7468.i = insertelement <16 x double> %temp.vect7467.i, double %3364, i32 3
  %temp.vect7469.i = insertelement <16 x double> %temp.vect7468.i, double %3365, i32 4
  %temp.vect7470.i = insertelement <16 x double> %temp.vect7469.i, double %3366, i32 5
  %temp.vect7471.i = insertelement <16 x double> %temp.vect7470.i, double %3367, i32 6
  %temp.vect7472.i = insertelement <16 x double> %temp.vect7471.i, double %3368, i32 7
  %temp.vect7473.i = insertelement <16 x double> %temp.vect7472.i, double %3369, i32 8
  %temp.vect7474.i = insertelement <16 x double> %temp.vect7473.i, double %3370, i32 9
  %temp.vect7475.i = insertelement <16 x double> %temp.vect7474.i, double %3371, i32 10
  %temp.vect7476.i = insertelement <16 x double> %temp.vect7475.i, double %3372, i32 11
  %temp.vect7477.i = insertelement <16 x double> %temp.vect7476.i, double %3373, i32 12
  %temp.vect7478.i = insertelement <16 x double> %temp.vect7477.i, double %3374, i32 13
  %temp.vect7479.i = insertelement <16 x double> %temp.vect7478.i, double %3375, i32 14
  %temp.vect7480.i = insertelement <16 x double> %temp.vect7479.i, double %3376, i32 15
  %3377 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %3378 = load i64* %3377, align 8
  %3379 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %3380 = load i64* %3379, align 8
  %3381 = add i64 %3378, %3380
  %extract7448.i = add i64 %3381, 22671360
  %3382 = getelementptr inbounds double addrspace(1)* %4, i64 %extract7448.i
  %ptrTypeCast7464.i = bitcast double addrspace(1)* %3382 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect7480.i, <16 x double> addrspace(1)* %ptrTypeCast7464.i, align 8
  %check.WI.iter.i = icmp ult i64 %CurrWI..0.i, %16
  br i1 %check.WI.iter.i, label %thenBB.i, label %____Vectorized_.ratt_kernel_separated_args.exit

thenBB.i:                                         ; preds = %SyncBB.i
  %"CurrWI++.i" = add nuw i64 %CurrWI..0.i, 1
  br label %SyncBB.i

____Vectorized_.ratt_kernel_separated_args.exit:  ; preds = %SyncBB.i
  ret void
}

!opencl.kernels = !{!0}

!0 = metadata !{void (double addrspace(1)*, double addrspace(1)*, double, i8 addrspace(3)*, %struct.WorkDim*, i64*, %struct.PaddedDimId*, %struct.PaddedDimId*, i64*, i64, i8*, i64*)* @__ratt_kernel_separated_args, metadata !1, metadata !1, metadata !"", metadata !"double const __attribute__((address_space(1))) *, double __attribute__((address_space(1))) *, double", metadata !"opencl_ratt_kernel_locals_anchor", void (i8*)* @ratt_kernel}
!1 = metadata !{i32 0, i32 0, i32 0}
