; XFAIL: *
; XFAIL: win32
;
; RUN: llc < %s -mtriple=x86_64-pc-linux \
; RUN:       -march=y86-64 -mcpu=knc
;
;
; ModuleID = 'Program'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64"
target triple = "x86_64-unknown-linux-gnu"

%struct.PaddedDimId = type <{ [4 x i64] }>
%struct.WorkDim = type { i32, [3 x i64], [3 x i64], [3 x i64], [3 x i64] }

@opencl_sgemmNT_local_bs = internal addrspace(3) global [4 x [16 x double]] zeroinitializer, align 16
@opencl_sgemmNN_local_bs = internal addrspace(3) global [16 x [17 x double]] zeroinitializer, align 16

declare void @__sgemmNT_original(double addrspace(1)* nocapture, i32, double addrspace(1)* nocapture, i32, double addrspace(1)* nocapture, i32, i32, double, double) nounwind

declare i64 @get_local_id(i32)

declare i64 @get_group_id(i32)

declare void @barrier(i64)

declare void @__sgemmNN_original(double addrspace(1)* nocapture, i32, double addrspace(1)* nocapture, i32, double addrspace(1)* nocapture, i32, i32, double, double) nounwind

declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) nounwind

declare void @____Vectorized_.sgemmNT_original(double addrspace(1)* nocapture, i32, double addrspace(1)* nocapture, i32, double addrspace(1)* nocapture, i32, i32, double, double) nounwind

declare void @____Vectorized_.sgemmNN_original(double addrspace(1)* nocapture, i32, double addrspace(1)* nocapture, i32, double addrspace(1)* nocapture, i32, i32, double, double) nounwind

define i1 @allOne(i1 %pred) {
entry:
  ret i1 %pred
}

define i1 @allZero(i1 %t) {
entry:
  ret i1 %t
}

declare void @dummybarrier.()

declare i8* @get_special_buffer.()

declare i64 @get_iter_count.()

declare i64 @get_new_local_id.(i32, i64)

define void @__sgemmNT_separated_args(double addrspace(1)* nocapture %A, i32 %lda, double addrspace(1)* nocapture %B, i32 %ldb, double addrspace(1)* nocapture %C, i32 %ldc, i32 %k, double %alpha, double %beta, i8 addrspace(3)* %pLocalMem, %struct.WorkDim* %pWorkDim, i64* %pWGId, %struct.PaddedDimId* %pBaseGlbId, %struct.PaddedDimId* %pLocalIds, i64* %contextpointer, i64 %iterCount, i8* %pSpecialBuf, i64* %pCurrWI) nounwind alwaysinline {
.preheader:
  %0 = bitcast i8 addrspace(3)* %pLocalMem to [4 x [16 x double]] addrspace(3)*
  %1 = bitcast i8 addrspace(3)* %pLocalMem to double addrspace(3)*
  %2 = getelementptr i8 addrspace(3)* %pLocalMem, i64 8
  %3 = bitcast i8 addrspace(3)* %2 to double addrspace(3)*
  %4 = getelementptr i8 addrspace(3)* %pLocalMem, i64 16
  %5 = bitcast i8 addrspace(3)* %4 to double addrspace(3)*
  %6 = getelementptr i8 addrspace(3)* %pLocalMem, i64 24
  %7 = bitcast i8 addrspace(3)* %6 to double addrspace(3)*
  %8 = getelementptr i8 addrspace(3)* %pLocalMem, i64 32
  %9 = bitcast i8 addrspace(3)* %8 to double addrspace(3)*
  %10 = getelementptr i8 addrspace(3)* %pLocalMem, i64 40
  %11 = bitcast i8 addrspace(3)* %10 to double addrspace(3)*
  %12 = getelementptr i8 addrspace(3)* %pLocalMem, i64 48
  %13 = bitcast i8 addrspace(3)* %12 to double addrspace(3)*
  %14 = getelementptr i8 addrspace(3)* %pLocalMem, i64 56
  %15 = bitcast i8 addrspace(3)* %14 to double addrspace(3)*
  %16 = getelementptr i8 addrspace(3)* %pLocalMem, i64 64
  %17 = bitcast i8 addrspace(3)* %16 to double addrspace(3)*
  %18 = getelementptr i8 addrspace(3)* %pLocalMem, i64 72
  %19 = bitcast i8 addrspace(3)* %18 to double addrspace(3)*
  %20 = getelementptr i8 addrspace(3)* %pLocalMem, i64 80
  %21 = bitcast i8 addrspace(3)* %20 to double addrspace(3)*
  %22 = getelementptr i8 addrspace(3)* %pLocalMem, i64 88
  %23 = bitcast i8 addrspace(3)* %22 to double addrspace(3)*
  %24 = getelementptr i8 addrspace(3)* %pLocalMem, i64 96
  %25 = bitcast i8 addrspace(3)* %24 to double addrspace(3)*
  %26 = getelementptr i8 addrspace(3)* %pLocalMem, i64 104
  %27 = bitcast i8 addrspace(3)* %26 to double addrspace(3)*
  %28 = getelementptr i8 addrspace(3)* %pLocalMem, i64 112
  %29 = bitcast i8 addrspace(3)* %28 to double addrspace(3)*
  %30 = getelementptr i8 addrspace(3)* %pLocalMem, i64 120
  %31 = bitcast i8 addrspace(3)* %30 to double addrspace(3)*
  %32 = getelementptr i8 addrspace(3)* %pLocalMem, i64 128
  %33 = bitcast i8 addrspace(3)* %32 to double addrspace(3)*
  %34 = getelementptr i8 addrspace(3)* %pLocalMem, i64 136
  %35 = bitcast i8 addrspace(3)* %34 to double addrspace(3)*
  %36 = getelementptr i8 addrspace(3)* %pLocalMem, i64 144
  %37 = bitcast i8 addrspace(3)* %36 to double addrspace(3)*
  %38 = getelementptr i8 addrspace(3)* %pLocalMem, i64 152
  %39 = bitcast i8 addrspace(3)* %38 to double addrspace(3)*
  %40 = getelementptr i8 addrspace(3)* %pLocalMem, i64 160
  %41 = bitcast i8 addrspace(3)* %40 to double addrspace(3)*
  %42 = getelementptr i8 addrspace(3)* %pLocalMem, i64 168
  %43 = bitcast i8 addrspace(3)* %42 to double addrspace(3)*
  %44 = getelementptr i8 addrspace(3)* %pLocalMem, i64 176
  %45 = bitcast i8 addrspace(3)* %44 to double addrspace(3)*
  %46 = getelementptr i8 addrspace(3)* %pLocalMem, i64 184
  %47 = bitcast i8 addrspace(3)* %46 to double addrspace(3)*
  %48 = getelementptr i8 addrspace(3)* %pLocalMem, i64 192
  %49 = bitcast i8 addrspace(3)* %48 to double addrspace(3)*
  %50 = getelementptr i8 addrspace(3)* %pLocalMem, i64 200
  %51 = bitcast i8 addrspace(3)* %50 to double addrspace(3)*
  %52 = getelementptr i8 addrspace(3)* %pLocalMem, i64 208
  %53 = bitcast i8 addrspace(3)* %52 to double addrspace(3)*
  %54 = getelementptr i8 addrspace(3)* %pLocalMem, i64 216
  %55 = bitcast i8 addrspace(3)* %54 to double addrspace(3)*
  %56 = getelementptr i8 addrspace(3)* %pLocalMem, i64 224
  %57 = bitcast i8 addrspace(3)* %56 to double addrspace(3)*
  %58 = getelementptr i8 addrspace(3)* %pLocalMem, i64 232
  %59 = bitcast i8 addrspace(3)* %58 to double addrspace(3)*
  %60 = getelementptr i8 addrspace(3)* %pLocalMem, i64 240
  %61 = bitcast i8 addrspace(3)* %60 to double addrspace(3)*
  %62 = getelementptr i8 addrspace(3)* %pLocalMem, i64 248
  %63 = bitcast i8 addrspace(3)* %62 to double addrspace(3)*
  %64 = getelementptr i8 addrspace(3)* %pLocalMem, i64 256
  %65 = bitcast i8 addrspace(3)* %64 to double addrspace(3)*
  %66 = getelementptr i8 addrspace(3)* %pLocalMem, i64 264
  %67 = bitcast i8 addrspace(3)* %66 to double addrspace(3)*
  %68 = getelementptr i8 addrspace(3)* %pLocalMem, i64 272
  %69 = bitcast i8 addrspace(3)* %68 to double addrspace(3)*
  %70 = getelementptr i8 addrspace(3)* %pLocalMem, i64 280
  %71 = bitcast i8 addrspace(3)* %70 to double addrspace(3)*
  %72 = getelementptr i8 addrspace(3)* %pLocalMem, i64 288
  %73 = bitcast i8 addrspace(3)* %72 to double addrspace(3)*
  %74 = getelementptr i8 addrspace(3)* %pLocalMem, i64 296
  %75 = bitcast i8 addrspace(3)* %74 to double addrspace(3)*
  %76 = getelementptr i8 addrspace(3)* %pLocalMem, i64 304
  %77 = bitcast i8 addrspace(3)* %76 to double addrspace(3)*
  %78 = getelementptr i8 addrspace(3)* %pLocalMem, i64 312
  %79 = bitcast i8 addrspace(3)* %78 to double addrspace(3)*
  %80 = getelementptr i8 addrspace(3)* %pLocalMem, i64 320
  %81 = bitcast i8 addrspace(3)* %80 to double addrspace(3)*
  %82 = getelementptr i8 addrspace(3)* %pLocalMem, i64 328
  %83 = bitcast i8 addrspace(3)* %82 to double addrspace(3)*
  %84 = getelementptr i8 addrspace(3)* %pLocalMem, i64 336
  %85 = bitcast i8 addrspace(3)* %84 to double addrspace(3)*
  %86 = getelementptr i8 addrspace(3)* %pLocalMem, i64 344
  %87 = bitcast i8 addrspace(3)* %86 to double addrspace(3)*
  %88 = getelementptr i8 addrspace(3)* %pLocalMem, i64 352
  %89 = bitcast i8 addrspace(3)* %88 to double addrspace(3)*
  %90 = getelementptr i8 addrspace(3)* %pLocalMem, i64 360
  %91 = bitcast i8 addrspace(3)* %90 to double addrspace(3)*
  %92 = getelementptr i8 addrspace(3)* %pLocalMem, i64 368
  %93 = bitcast i8 addrspace(3)* %92 to double addrspace(3)*
  %94 = getelementptr i8 addrspace(3)* %pLocalMem, i64 376
  %95 = bitcast i8 addrspace(3)* %94 to double addrspace(3)*
  %96 = getelementptr i8 addrspace(3)* %pLocalMem, i64 384
  %97 = bitcast i8 addrspace(3)* %96 to double addrspace(3)*
  %98 = getelementptr i8 addrspace(3)* %pLocalMem, i64 392
  %99 = bitcast i8 addrspace(3)* %98 to double addrspace(3)*
  %100 = getelementptr i8 addrspace(3)* %pLocalMem, i64 400
  %101 = bitcast i8 addrspace(3)* %100 to double addrspace(3)*
  %102 = getelementptr i8 addrspace(3)* %pLocalMem, i64 408
  %103 = bitcast i8 addrspace(3)* %102 to double addrspace(3)*
  %104 = getelementptr i8 addrspace(3)* %pLocalMem, i64 416
  %105 = bitcast i8 addrspace(3)* %104 to double addrspace(3)*
  %106 = getelementptr i8 addrspace(3)* %pLocalMem, i64 424
  %107 = bitcast i8 addrspace(3)* %106 to double addrspace(3)*
  %108 = getelementptr i8 addrspace(3)* %pLocalMem, i64 432
  %109 = bitcast i8 addrspace(3)* %108 to double addrspace(3)*
  %110 = getelementptr i8 addrspace(3)* %pLocalMem, i64 440
  %111 = bitcast i8 addrspace(3)* %110 to double addrspace(3)*
  %112 = getelementptr i8 addrspace(3)* %pLocalMem, i64 448
  %113 = bitcast i8 addrspace(3)* %112 to double addrspace(3)*
  %114 = getelementptr i8 addrspace(3)* %pLocalMem, i64 456
  %115 = bitcast i8 addrspace(3)* %114 to double addrspace(3)*
  %116 = getelementptr i8 addrspace(3)* %pLocalMem, i64 464
  %117 = bitcast i8 addrspace(3)* %116 to double addrspace(3)*
  %118 = getelementptr i8 addrspace(3)* %pLocalMem, i64 472
  %119 = bitcast i8 addrspace(3)* %118 to double addrspace(3)*
  %120 = getelementptr i8 addrspace(3)* %pLocalMem, i64 480
  %121 = bitcast i8 addrspace(3)* %120 to double addrspace(3)*
  %122 = getelementptr i8 addrspace(3)* %pLocalMem, i64 488
  %123 = bitcast i8 addrspace(3)* %122 to double addrspace(3)*
  %124 = getelementptr i8 addrspace(3)* %pLocalMem, i64 496
  %125 = bitcast i8 addrspace(3)* %124 to double addrspace(3)*
  %126 = getelementptr i8 addrspace(3)* %pLocalMem, i64 504
  %127 = bitcast i8 addrspace(3)* %126 to double addrspace(3)*
  %128 = sext i32 %lda to i64
  %tmp95.2 = shl i32 %lda, 1
  %129 = sext i32 %tmp95.2 to i64
  %tmp95.3 = mul i32 %lda, 3
  %130 = sext i32 %tmp95.3 to i64
  %131 = mul nsw i32 %k, %ldb
  %tmp37 = shl i32 %ldb, 2
  %tmp38 = zext i32 %tmp37 to i64
  %tmp40 = shl i32 %ldb, 3
  %tmp41 = zext i32 %tmp40 to i64
  %tmp44 = sext i32 %tmp37 to i64
  %tmp57 = shl i32 %lda, 2
  %tmp58 = sext i32 %tmp57 to i64
  %tmp69 = mul i32 %lda, 3
  %tmp70 = sext i32 %tmp69 to i64
  %tmp71 = add i64 %tmp58, %tmp70
  %tmp75 = shl i32 %lda, 1
  %tmp76 = sext i32 %tmp75 to i64
  %tmp77 = add i64 %tmp58, %tmp76
  %tmp81 = sext i32 %lda to i64
  %tmp82 = add i64 %tmp81, %tmp58
  br label %SyncBB855

SyncBB855:                                        ; preds = %thenBB, %.preheader
  %currBarrier.2 = phi i32 [ 15, %.preheader ], [ %currBarrier.1, %thenBB ]
  %CurrSBIndex..0 = phi i64 [ 0, %.preheader ], [ %"loadedCurrSB+Stride", %thenBB ]
  %CurrWI..0 = phi i64 [ 0, %.preheader ], [ %"CurrWI++", %thenBB ]
  %132 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %133 = load i64* %132, align 8
  %134 = trunc i64 %133 to i32
  %"&pSB[currWI].offset" = getelementptr inbounds i8* %pSpecialBuf, i64 %CurrSBIndex..0
  %CastToValueType = bitcast i8* %"&pSB[currWI].offset" to i32*
  store i32 %134, i32* %CastToValueType, align 4
  %135 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 1
  %136 = load i64* %135, align 8
  %137 = trunc i64 %136 to i32
  %138 = load i64* %pWGId, align 8
  %139 = shl i64 %138, 6
  %140 = trunc i64 %139 to i32
  %141 = getelementptr i64* %pWGId, i64 1
  %142 = load i64* %141, align 8
  %143 = shl i64 %142, 4
  %144 = trunc i64 %143 to i32
  %145 = shl i32 %137, 4
  %"&(pSB[currWI].offset)106" = add nuw i64 %CurrSBIndex..0, 4
  %"&pSB[currWI].offset107" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)106"
  %CastToValueType108 = bitcast i8* %"&pSB[currWI].offset107" to i32*
  store i32 %145, i32* %CastToValueType108, align 4
  %146 = add nsw i32 %145, %134
  %147 = add nsw i32 %140, %146
  %148 = sext i32 %147 to i64
  %149 = mul nsw i32 %137, %ldb
  %150 = add nsw i32 %149, %134
  %151 = add nsw i32 %150, %144
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds double addrspace(1)* %B, i64 %152
  %"&(pSB[currWI].offset)659" = add nuw i64 %CurrSBIndex..0, 240
  %"&pSB[currWI].offset660" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)659"
  %scevgep93 = bitcast i8* %"&pSB[currWI].offset660" to double*
  %154 = getelementptr inbounds double addrspace(1)* %A, i64 %148
  %155 = load double addrspace(1)* %154, align 8
  %"&(pSB[currWI].offset)115" = add nuw i64 %CurrSBIndex..0, 8
  %"&pSB[currWI].offset116" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)115"
  %CastToValueType117 = bitcast i8* %"&pSB[currWI].offset116" to double*
  store double %155, double* %CastToValueType117, align 8
  store double %155, double* %scevgep93, align 16
  %"&pSB[currWI].offset656.sum" = add i64 %CurrSBIndex..0, 248
  %scevgep93.1 = getelementptr i8* %pSpecialBuf, i64 %"&pSB[currWI].offset656.sum"
  %156 = bitcast i8* %scevgep93.1 to double*
  %.sum4.1 = add i64 %128, %148
  %157 = getelementptr inbounds double addrspace(1)* %A, i64 %.sum4.1
  %158 = load double addrspace(1)* %157, align 8
  %"&(pSB[currWI].offset)119" = add nuw i64 %CurrSBIndex..0, 16
  %"&pSB[currWI].offset120" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)119"
  %CastToValueType121 = bitcast i8* %"&pSB[currWI].offset120" to double*
  store double %158, double* %CastToValueType121, align 8
  store double %158, double* %156, align 8
  %"&pSB[currWI].offset652.sum" = add i64 %CurrSBIndex..0, 256
  %scevgep93.2 = getelementptr i8* %pSpecialBuf, i64 %"&pSB[currWI].offset652.sum"
  %159 = bitcast i8* %scevgep93.2 to double*
  %.sum4.2 = add i64 %129, %148
  %160 = getelementptr inbounds double addrspace(1)* %A, i64 %.sum4.2
  %161 = load double addrspace(1)* %160, align 8
  %"&(pSB[currWI].offset)123" = add nuw i64 %CurrSBIndex..0, 24
  %"&pSB[currWI].offset124" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)123"
  %CastToValueType125 = bitcast i8* %"&pSB[currWI].offset124" to double*
  store double %161, double* %CastToValueType125, align 8
  store double %161, double* %159, align 16
  %"&pSB[currWI].offset648.sum" = add i64 %CurrSBIndex..0, 264
  %scevgep93.3 = getelementptr i8* %pSpecialBuf, i64 %"&pSB[currWI].offset648.sum"
  %162 = bitcast i8* %scevgep93.3 to double*
  %.sum4.3 = add i64 %130, %148
  %163 = getelementptr inbounds double addrspace(1)* %A, i64 %.sum4.3
  %164 = load double addrspace(1)* %163, align 8
  %"&(pSB[currWI].offset)127" = add nuw i64 %CurrSBIndex..0, 32
  %"&pSB[currWI].offset128" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)127"
  %CastToValueType129 = bitcast i8* %"&pSB[currWI].offset128" to double*
  store double %164, double* %CastToValueType129, align 8
  store double %164, double* %162, align 8
  %165 = load double addrspace(1)* %153, align 8
  %"&(pSB[currWI].offset)131" = add nuw i64 %CurrSBIndex..0, 40
  %"&pSB[currWI].offset132" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)131"
  %CastToValueType133 = bitcast i8* %"&pSB[currWI].offset132" to double*
  store double %165, double* %CastToValueType133, align 8
  %"&(pSB[currWI].offset)679" = add nuw i64 %CurrSBIndex..0, 272
  %"&pSB[currWI].offset680" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)679"
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset680", i8 0, i64 128, i32 16, i1 false)
  %166 = sext i32 %134 to i64
  %167 = sext i32 %137 to i64
  %168 = getelementptr inbounds [4 x [16 x double]] addrspace(3)* %0, i64 0, i64 %167, i64 %166
  %"&(pSB[currWI].offset)135" = add nuw i64 %CurrSBIndex..0, 48
  %"&pSB[currWI].offset136" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)135"
  %CastToValueType137 = bitcast i8* %"&pSB[currWI].offset136" to double addrspace(3)**
  store double addrspace(3)* %168, double addrspace(3)** %CastToValueType137, align 8
  %"&(pSB[currWI].offset)675" = add nuw i64 %CurrSBIndex..0, 240
  %"&pSB[currWI].offset676" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)675"
  %169 = bitcast i8* %"&pSB[currWI].offset676" to double*
  %"&pSB[currWI].offset672.sum" = add i64 %CurrSBIndex..0, 248
  %170 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset672.sum"
  %171 = bitcast i8* %170 to double*
  %"&pSB[currWI].offset668.sum" = add i64 %CurrSBIndex..0, 256
  %172 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset668.sum"
  %173 = bitcast i8* %172 to double*
  %"&pSB[currWI].offset664.sum" = add i64 %CurrSBIndex..0, 264
  %174 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset664.sum"
  %175 = bitcast i8* %174 to double*
  %"&(pSB[currWI].offset)763" = add nuw i64 %CurrSBIndex..0, 400
  %"&pSB[currWI].offset764" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)763"
  %176 = bitcast i8* %"&pSB[currWI].offset764" to double*
  %"&(pSB[currWI].offset)747" = add nuw i64 %CurrSBIndex..0, 272
  %"&pSB[currWI].offset748" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)747"
  %177 = bitcast i8* %"&pSB[currWI].offset748" to double*
  %"&pSB[currWI].offset744.sum" = add i64 %CurrSBIndex..0, 280
  %178 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset744.sum"
  %179 = bitcast i8* %178 to double*
  %"&pSB[currWI].offset740.sum" = add i64 %CurrSBIndex..0, 288
  %180 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset740.sum"
  %181 = bitcast i8* %180 to double*
  %"&pSB[currWI].offset736.sum" = add i64 %CurrSBIndex..0, 296
  %182 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset736.sum"
  %183 = bitcast i8* %182 to double*
  %"&pSB[currWI].offset732.sum" = add i64 %CurrSBIndex..0, 304
  %184 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset732.sum"
  %185 = bitcast i8* %184 to double*
  %"&pSB[currWI].offset728.sum" = add i64 %CurrSBIndex..0, 312
  %186 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset728.sum"
  %187 = bitcast i8* %186 to double*
  %"&pSB[currWI].offset724.sum" = add i64 %CurrSBIndex..0, 320
  %188 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset724.sum"
  %189 = bitcast i8* %188 to double*
  %"&pSB[currWI].offset720.sum" = add i64 %CurrSBIndex..0, 328
  %190 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset720.sum"
  %191 = bitcast i8* %190 to double*
  %"&pSB[currWI].offset716.sum" = add i64 %CurrSBIndex..0, 336
  %192 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset716.sum"
  %193 = bitcast i8* %192 to double*
  %"&pSB[currWI].offset712.sum" = add i64 %CurrSBIndex..0, 344
  %194 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset712.sum"
  %195 = bitcast i8* %194 to double*
  %"&pSB[currWI].offset708.sum" = add i64 %CurrSBIndex..0, 352
  %196 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset708.sum"
  %197 = bitcast i8* %196 to double*
  %"&pSB[currWI].offset704.sum" = add i64 %CurrSBIndex..0, 360
  %198 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset704.sum"
  %199 = bitcast i8* %198 to double*
  %"&pSB[currWI].offset700.sum" = add i64 %CurrSBIndex..0, 368
  %200 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset700.sum"
  %201 = bitcast i8* %200 to double*
  %"&pSB[currWI].offset696.sum" = add i64 %CurrSBIndex..0, 376
  %202 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset696.sum"
  %203 = bitcast i8* %202 to double*
  %"&pSB[currWI].offset692.sum" = add i64 %CurrSBIndex..0, 384
  %204 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset692.sum"
  %205 = bitcast i8* %204 to double*
  %"&pSB[currWI].offset688.sum" = add i64 %CurrSBIndex..0, 392
  %206 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset688.sum"
  %207 = bitcast i8* %206 to double*
  %"&pSB[currWI].offset760.sum" = add i64 %CurrSBIndex..0, 408
  %208 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset760.sum"
  %209 = bitcast i8* %208 to double*
  %"&pSB[currWI].offset756.sum" = add i64 %CurrSBIndex..0, 416
  %210 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset756.sum"
  %211 = bitcast i8* %210 to double*
  %"&pSB[currWI].offset752.sum" = add i64 %CurrSBIndex..0, 424
  %212 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset752.sum"
  %213 = bitcast i8* %212 to double*
  %tmp54 = add i64 %tmp44, %152
  %"&(pSB[currWI].offset)149" = add nuw i64 %CurrSBIndex..0, 56
  %"&pSB[currWI].offset150" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)149"
  %CastToValueType151 = bitcast i8* %"&pSB[currWI].offset150" to i64*
  store i64 %tmp54, i64* %CastToValueType151, align 8
  %tmp64 = add i32 %146, %140
  %tmp65 = sext i32 %tmp64 to i64
  %tmp66 = add i64 %tmp58, %tmp65
  %"&(pSB[currWI].offset)158" = add nuw i64 %CurrSBIndex..0, 64
  %"&pSB[currWI].offset159" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)158"
  %CastToValueType160 = bitcast i8* %"&pSB[currWI].offset159" to i64*
  store i64 %tmp66, i64* %CastToValueType160, align 8
  %tmp72 = add i64 %tmp71, %tmp65
  %"&(pSB[currWI].offset)167" = add nuw i64 %CurrSBIndex..0, 72
  %"&pSB[currWI].offset168" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)167"
  %CastToValueType169 = bitcast i8* %"&pSB[currWI].offset168" to i64*
  store i64 %tmp72, i64* %CastToValueType169, align 8
  %tmp78 = add i64 %tmp77, %tmp65
  %"&(pSB[currWI].offset)176" = add nuw i64 %CurrSBIndex..0, 80
  %"&pSB[currWI].offset177" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)176"
  %CastToValueType178 = bitcast i8* %"&pSB[currWI].offset177" to i64*
  store i64 %tmp78, i64* %CastToValueType178, align 8
  %tmp83 = add i64 %tmp82, %tmp65
  %"&(pSB[currWI].offset)185" = add nuw i64 %CurrSBIndex..0, 88
  %"&pSB[currWI].offset186" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)185"
  %CastToValueType187 = bitcast i8* %"&pSB[currWI].offset186" to i64*
  store i64 %tmp83, i64* %CastToValueType187, align 8
  br label %"Barrier BB"

.loopexit:                                        ; preds = %SyncBB853
  %"&(pSB[currWI].offset)638" = add nuw i64 %CurrSBIndex..1, 216
  %"&(pSB[currWI].offset)624" = add nuw i64 %CurrSBIndex..1, 208
  %"&(pSB[currWI].offset)615" = add nuw i64 %CurrSBIndex..1, 200
  %"&(pSB[currWI].offset)606" = add nuw i64 %CurrSBIndex..1, 192
  %"&(pSB[currWI].offset)597" = add nuw i64 %CurrSBIndex..1, 184
  %"&pSB[currWI].offset639" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)638"
  %"&pSB[currWI].offset625" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)624"
  %"&pSB[currWI].offset616" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)615"
  %"&pSB[currWI].offset607" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)606"
  %"&pSB[currWI].offset598" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)597"
  %CastToValueType640 = bitcast i8* %"&pSB[currWI].offset639" to double*
  %CastToValueType626 = bitcast i8* %"&pSB[currWI].offset625" to double*
  %CastToValueType617 = bitcast i8* %"&pSB[currWI].offset616" to double*
  %CastToValueType608 = bitcast i8* %"&pSB[currWI].offset607" to double*
  %CastToValueType599 = bitcast i8* %"&pSB[currWI].offset598" to double*
  %loadedValue641 = load double* %CastToValueType640, align 8
  %loadedValue627 = load double* %CastToValueType626, align 8
  %loadedValue618 = load double* %CastToValueType617, align 8
  %loadedValue609 = load double* %CastToValueType608, align 8
  %loadedValue600 = load double* %CastToValueType599, align 8
  br label %"Barrier BB"

"Barrier BB":                                     ; preds = %.loopexit, %SyncBB855
  %currBarrier.1 = phi i32 [ %currBarrier.2, %SyncBB855 ], [ %currBarrier.0.ph, %.loopexit ]
  %CurrSBIndex..2 = phi i64 [ %CurrSBIndex..0, %SyncBB855 ], [ %CurrSBIndex..1, %.loopexit ]
  %CurrWI..2 = phi i64 [ %CurrWI..0, %SyncBB855 ], [ %CurrWI..1, %.loopexit ]
  %214 = phi double [ %164, %SyncBB855 ], [ %loadedValue627, %.loopexit ]
  %215 = phi double [ %161, %SyncBB855 ], [ %loadedValue618, %.loopexit ]
  %216 = phi double [ %158, %SyncBB855 ], [ %loadedValue609, %.loopexit ]
  %217 = phi double [ %155, %SyncBB855 ], [ %loadedValue600, %.loopexit ]
  %indvar35 = phi i64 [ 0, %SyncBB855 ], [ %indvar.next36, %.loopexit ]
  %b.0 = phi double [ %165, %SyncBB855 ], [ %loadedValue641, %.loopexit ]
  %"&(pSB[currWI].offset)530" = add nuw i64 %CurrSBIndex..2, 128
  %"&pSB[currWI].offset531" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)530"
  %CastToValueType532 = bitcast i8* %"&pSB[currWI].offset531" to i64*
  store i64 %indvar35, i64* %CastToValueType532, align 8
  %"&(pSB[currWI].offset)446" = add nuw i64 %CurrSBIndex..2, 120
  %"&pSB[currWI].offset447" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)446"
  %CastToValueType448 = bitcast i8* %"&pSB[currWI].offset447" to double*
  store double %217, double* %CastToValueType448, align 8
  %"&(pSB[currWI].offset)362" = add nuw i64 %CurrSBIndex..2, 112
  %"&pSB[currWI].offset363" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)362"
  %CastToValueType364 = bitcast i8* %"&pSB[currWI].offset363" to double*
  store double %216, double* %CastToValueType364, align 8
  %"&(pSB[currWI].offset)278" = add nuw i64 %CurrSBIndex..2, 104
  %"&pSB[currWI].offset279" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)278"
  %CastToValueType280 = bitcast i8* %"&pSB[currWI].offset279" to double*
  store double %215, double* %CastToValueType280, align 8
  %"&(pSB[currWI].offset)194" = add nuw i64 %CurrSBIndex..2, 96
  %"&pSB[currWI].offset195" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)194"
  %CastToValueType196 = bitcast i8* %"&pSB[currWI].offset195" to double*
  store double %214, double* %CastToValueType196, align 8
  %tmp39 = mul i64 %tmp38, %indvar35
  %tmp42 = add i64 %tmp41, %tmp39
  %tmp43 = trunc i64 %tmp42 to i32
  %"&(pSB[currWI].offset)539" = add nuw i64 %CurrSBIndex..2, 136
  %"&pSB[currWI].offset540" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)539"
  %CastToValueType541 = bitcast i8* %"&pSB[currWI].offset540" to i32*
  store i32 %tmp43, i32* %CastToValueType541, align 4
  %tmp45 = mul i64 %tmp44, %indvar35
  %"&(pSB[currWI].offset)153" = add nuw i64 %CurrSBIndex..2, 56
  %"&pSB[currWI].offset154" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)153"
  %CastToValueType155 = bitcast i8* %"&pSB[currWI].offset154" to i64*
  %loadedValue156 = load i64* %CastToValueType155, align 8
  %tmp55 = add i64 %loadedValue156, %tmp45
  %.01 = getelementptr double addrspace(1)* %B, i64 %tmp55
  %"&(pSB[currWI].offset)548" = add nuw i64 %CurrSBIndex..2, 144
  %"&pSB[currWI].offset549" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)548"
  %CastToValueType550 = bitcast i8* %"&pSB[currWI].offset549" to double addrspace(1)**
  store double addrspace(1)* %.01, double addrspace(1)** %CastToValueType550, align 8
  %tmp59 = mul i64 %tmp58, %indvar35
  %"&(pSB[currWI].offset)162" = add nuw i64 %CurrSBIndex..2, 64
  %"&pSB[currWI].offset163" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)162"
  %CastToValueType164 = bitcast i8* %"&pSB[currWI].offset163" to i64*
  %loadedValue165 = load i64* %CastToValueType164, align 8
  %tmp67 = add i64 %loadedValue165, %tmp59
  %.0 = getelementptr double addrspace(1)* %A, i64 %tmp67
  %"&(pSB[currWI].offset)557" = add nuw i64 %CurrSBIndex..2, 152
  %"&pSB[currWI].offset558" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)557"
  %CastToValueType559 = bitcast i8* %"&pSB[currWI].offset558" to double addrspace(1)**
  store double addrspace(1)* %.0, double addrspace(1)** %CastToValueType559, align 8
  %"&(pSB[currWI].offset)171" = add nuw i64 %CurrSBIndex..2, 72
  %"&pSB[currWI].offset172" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)171"
  %CastToValueType173 = bitcast i8* %"&pSB[currWI].offset172" to i64*
  %loadedValue174 = load i64* %CastToValueType173, align 8
  %tmp73 = add i64 %loadedValue174, %tmp59
  %scevgep74 = getelementptr double addrspace(1)* %A, i64 %tmp73
  %"&(pSB[currWI].offset)566" = add nuw i64 %CurrSBIndex..2, 160
  %"&pSB[currWI].offset567" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)566"
  %CastToValueType568 = bitcast i8* %"&pSB[currWI].offset567" to double addrspace(1)**
  store double addrspace(1)* %scevgep74, double addrspace(1)** %CastToValueType568, align 8
  %"&(pSB[currWI].offset)180" = add nuw i64 %CurrSBIndex..2, 80
  %"&pSB[currWI].offset181" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)180"
  %CastToValueType182 = bitcast i8* %"&pSB[currWI].offset181" to i64*
  %loadedValue183 = load i64* %CastToValueType182, align 8
  %tmp79 = add i64 %loadedValue183, %tmp59
  %scevgep80 = getelementptr double addrspace(1)* %A, i64 %tmp79
  %"&(pSB[currWI].offset)575" = add nuw i64 %CurrSBIndex..2, 168
  %"&pSB[currWI].offset576" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)575"
  %CastToValueType577 = bitcast i8* %"&pSB[currWI].offset576" to double addrspace(1)**
  store double addrspace(1)* %scevgep80, double addrspace(1)** %CastToValueType577, align 8
  %"&(pSB[currWI].offset)189" = add nuw i64 %CurrSBIndex..2, 88
  %"&pSB[currWI].offset190" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)189"
  %CastToValueType191 = bitcast i8* %"&pSB[currWI].offset190" to i64*
  %loadedValue192 = load i64* %CastToValueType191, align 8
  %tmp84 = add i64 %loadedValue192, %tmp59
  %scevgep85 = getelementptr double addrspace(1)* %A, i64 %tmp84
  %"&(pSB[currWI].offset)584" = add nuw i64 %CurrSBIndex..2, 176
  %"&pSB[currWI].offset585" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)584"
  %CastToValueType586 = bitcast i8* %"&pSB[currWI].offset585" to double addrspace(1)**
  store double addrspace(1)* %scevgep85, double addrspace(1)** %CastToValueType586, align 8
  store double %217, double* %176, align 16
  store double %216, double* %209, align 8
  store double %215, double* %211, align 16
  store double %214, double* %213, align 8
  %"&(pSB[currWI].offset)144" = add nuw i64 %CurrSBIndex..2, 48
  %"&pSB[currWI].offset145" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)144"
  %CastToValueType146 = bitcast i8* %"&pSB[currWI].offset145" to double addrspace(3)**
  %loadedValue147 = load double addrspace(3)** %CastToValueType146, align 8
  store double %b.0, double addrspace(3)* %loadedValue147, align 8
  %check.WI.iter = icmp ult i64 %CurrWI..2, %iterCount
  br i1 %check.WI.iter, label %thenBB, label %SyncBB

thenBB:                                           ; preds = %"Barrier BB"
  %"CurrWI++" = add nuw i64 %CurrWI..2, 1
  %"loadedCurrSB+Stride" = add nuw i64 %CurrSBIndex..2, 12032
  %cond = icmp eq i32 %currBarrier.1, 2
  br i1 %cond, label %SyncBB853.preheader, label %SyncBB855

SyncBB:                                           ; preds = %"Barrier BB", %thenBB858
  %CurrSBIndex..3 = phi i64 [ %"loadedCurrSB+Stride864", %thenBB858 ], [ 0, %"Barrier BB" ]
  %CurrWI..3 = phi i64 [ %"CurrWI++862", %thenBB858 ], [ 0, %"Barrier BB" ]
  %"&(pSB[currWI].offset)5611" = or i64 %CurrSBIndex..3, 152
  %"&pSB[currWI].offset562" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)5611"
  %CastToValueType563 = bitcast i8* %"&pSB[currWI].offset562" to double addrspace(1)**
  %loadedValue564 = load double addrspace(1)** %CastToValueType563, align 8
  %218 = load double addrspace(1)* %loadedValue564, align 8
  %"&(pSB[currWI].offset)5932" = or i64 %CurrSBIndex..3, 184
  %"&pSB[currWI].offset594" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)5932"
  %CastToValueType595 = bitcast i8* %"&pSB[currWI].offset594" to double*
  store double %218, double* %CastToValueType595, align 8
  store double %218, double* %169, align 16
  %"&(pSB[currWI].offset)5883" = or i64 %CurrSBIndex..3, 176
  %"&pSB[currWI].offset589" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)5883"
  %CastToValueType590 = bitcast i8* %"&pSB[currWI].offset589" to double addrspace(1)**
  %loadedValue591 = load double addrspace(1)** %CastToValueType590, align 8
  %219 = load double addrspace(1)* %loadedValue591, align 8
  %"&(pSB[currWI].offset)6024" = or i64 %CurrSBIndex..3, 192
  %"&pSB[currWI].offset603" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)6024"
  %CastToValueType604 = bitcast i8* %"&pSB[currWI].offset603" to double*
  store double %219, double* %CastToValueType604, align 8
  store double %219, double* %171, align 8
  %"&(pSB[currWI].offset)5795" = or i64 %CurrSBIndex..3, 168
  %"&pSB[currWI].offset580" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)5795"
  %CastToValueType581 = bitcast i8* %"&pSB[currWI].offset580" to double addrspace(1)**
  %loadedValue582 = load double addrspace(1)** %CastToValueType581, align 8
  %220 = load double addrspace(1)* %loadedValue582, align 8
  %"&(pSB[currWI].offset)6116" = or i64 %CurrSBIndex..3, 200
  %"&pSB[currWI].offset612" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)6116"
  %CastToValueType613 = bitcast i8* %"&pSB[currWI].offset612" to double*
  store double %220, double* %CastToValueType613, align 8
  store double %220, double* %173, align 16
  %"&(pSB[currWI].offset)5707" = or i64 %CurrSBIndex..3, 160
  %"&pSB[currWI].offset571" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)5707"
  %CastToValueType572 = bitcast i8* %"&pSB[currWI].offset571" to double addrspace(1)**
  %loadedValue573 = load double addrspace(1)** %CastToValueType572, align 8
  %221 = load double addrspace(1)* %loadedValue573, align 8
  %"&(pSB[currWI].offset)6208" = or i64 %CurrSBIndex..3, 208
  %"&pSB[currWI].offset621" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)6208"
  %CastToValueType622 = bitcast i8* %"&pSB[currWI].offset621" to double*
  store double %221, double* %CastToValueType622, align 8
  store double %221, double* %175, align 8
  %"&(pSB[currWI].offset)5529" = or i64 %CurrSBIndex..3, 144
  %"&pSB[currWI].offset553" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)5529"
  %CastToValueType554 = bitcast i8* %"&pSB[currWI].offset553" to double addrspace(1)**
  %loadedValue555 = load double addrspace(1)** %CastToValueType554, align 8
  %222 = load double addrspace(1)* %loadedValue555, align 8
  %"&(pSB[currWI].offset)62910" = or i64 %CurrSBIndex..3, 216
  %"&pSB[currWI].offset630" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)62910"
  %CastToValueType631 = bitcast i8* %"&pSB[currWI].offset630" to double*
  store double %222, double* %CastToValueType631, align 8
  %223 = load double addrspace(3)* %1, align 16
  %"&(pSB[currWI].offset)45011" = or i64 %CurrSBIndex..3, 120
  %"&pSB[currWI].offset451" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)45011"
  %CastToValueType452 = bitcast i8* %"&pSB[currWI].offset451" to double*
  %loadedValue453 = load double* %CastToValueType452, align 8
  %224 = fmul double %loadedValue453, %223
  %225 = load double* %177, align 16
  %226 = fadd double %225, %224
  %227 = load double addrspace(3)* %3, align 8
  %"&(pSB[currWI].offset)45512" = or i64 %CurrSBIndex..3, 120
  %"&pSB[currWI].offset456" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)45512"
  %CastToValueType457 = bitcast i8* %"&pSB[currWI].offset456" to double*
  %loadedValue458 = load double* %CastToValueType457, align 8
  %228 = fmul double %loadedValue458, %227
  %229 = load double* %179, align 8
  %230 = fadd double %229, %228
  %231 = load double addrspace(3)* %5, align 16
  %"&(pSB[currWI].offset)46013" = or i64 %CurrSBIndex..3, 120
  %"&pSB[currWI].offset461" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)46013"
  %CastToValueType462 = bitcast i8* %"&pSB[currWI].offset461" to double*
  %loadedValue463 = load double* %CastToValueType462, align 8
  %232 = fmul double %loadedValue463, %231
  %233 = load double* %181, align 16
  %234 = fadd double %233, %232
  %235 = load double addrspace(3)* %7, align 8
  %"&(pSB[currWI].offset)46514" = or i64 %CurrSBIndex..3, 120
  %"&pSB[currWI].offset466" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)46514"
  %CastToValueType467 = bitcast i8* %"&pSB[currWI].offset466" to double*
  %loadedValue468 = load double* %CastToValueType467, align 8
  %236 = fmul double %loadedValue468, %235
  %237 = load double* %183, align 8
  %238 = fadd double %237, %236
  %239 = load double addrspace(3)* %9, align 16
  %"&(pSB[currWI].offset)47015" = or i64 %CurrSBIndex..3, 120
  %"&pSB[currWI].offset471" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)47015"
  %CastToValueType472 = bitcast i8* %"&pSB[currWI].offset471" to double*
  %loadedValue473 = load double* %CastToValueType472, align 8
  %240 = fmul double %loadedValue473, %239
  %241 = load double* %185, align 16
  %242 = fadd double %241, %240
  %243 = load double addrspace(3)* %11, align 8
  %"&(pSB[currWI].offset)47516" = or i64 %CurrSBIndex..3, 120
  %"&pSB[currWI].offset476" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)47516"
  %CastToValueType477 = bitcast i8* %"&pSB[currWI].offset476" to double*
  %loadedValue478 = load double* %CastToValueType477, align 8
  %244 = fmul double %loadedValue478, %243
  %245 = load double* %187, align 8
  %246 = fadd double %245, %244
  %247 = load double addrspace(3)* %13, align 16
  %"&(pSB[currWI].offset)48017" = or i64 %CurrSBIndex..3, 120
  %"&pSB[currWI].offset481" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)48017"
  %CastToValueType482 = bitcast i8* %"&pSB[currWI].offset481" to double*
  %loadedValue483 = load double* %CastToValueType482, align 8
  %248 = fmul double %loadedValue483, %247
  %249 = load double* %189, align 16
  %250 = fadd double %249, %248
  %251 = load double addrspace(3)* %15, align 8
  %"&(pSB[currWI].offset)48518" = or i64 %CurrSBIndex..3, 120
  %"&pSB[currWI].offset486" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)48518"
  %CastToValueType487 = bitcast i8* %"&pSB[currWI].offset486" to double*
  %loadedValue488 = load double* %CastToValueType487, align 8
  %252 = fmul double %loadedValue488, %251
  %253 = load double* %191, align 8
  %254 = fadd double %253, %252
  %255 = load double addrspace(3)* %17, align 16
  %"&(pSB[currWI].offset)49019" = or i64 %CurrSBIndex..3, 120
  %"&pSB[currWI].offset491" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)49019"
  %CastToValueType492 = bitcast i8* %"&pSB[currWI].offset491" to double*
  %loadedValue493 = load double* %CastToValueType492, align 8
  %256 = fmul double %loadedValue493, %255
  %257 = load double* %193, align 16
  %258 = fadd double %257, %256
  %259 = load double addrspace(3)* %19, align 8
  %"&(pSB[currWI].offset)49520" = or i64 %CurrSBIndex..3, 120
  %"&pSB[currWI].offset496" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)49520"
  %CastToValueType497 = bitcast i8* %"&pSB[currWI].offset496" to double*
  %loadedValue498 = load double* %CastToValueType497, align 8
  %260 = fmul double %loadedValue498, %259
  %261 = load double* %195, align 8
  %262 = fadd double %261, %260
  %263 = load double addrspace(3)* %21, align 16
  %"&(pSB[currWI].offset)50021" = or i64 %CurrSBIndex..3, 120
  %"&pSB[currWI].offset501" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)50021"
  %CastToValueType502 = bitcast i8* %"&pSB[currWI].offset501" to double*
  %loadedValue503 = load double* %CastToValueType502, align 8
  %264 = fmul double %loadedValue503, %263
  %265 = load double* %197, align 16
  %266 = fadd double %265, %264
  %267 = load double addrspace(3)* %23, align 8
  %"&(pSB[currWI].offset)50522" = or i64 %CurrSBIndex..3, 120
  %"&pSB[currWI].offset506" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)50522"
  %CastToValueType507 = bitcast i8* %"&pSB[currWI].offset506" to double*
  %loadedValue508 = load double* %CastToValueType507, align 8
  %268 = fmul double %loadedValue508, %267
  %269 = load double* %199, align 8
  %270 = fadd double %269, %268
  %271 = load double addrspace(3)* %25, align 16
  %"&(pSB[currWI].offset)51023" = or i64 %CurrSBIndex..3, 120
  %"&pSB[currWI].offset511" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)51023"
  %CastToValueType512 = bitcast i8* %"&pSB[currWI].offset511" to double*
  %loadedValue513 = load double* %CastToValueType512, align 8
  %272 = fmul double %loadedValue513, %271
  %273 = load double* %201, align 16
  %274 = fadd double %273, %272
  %275 = load double addrspace(3)* %27, align 8
  %"&(pSB[currWI].offset)51524" = or i64 %CurrSBIndex..3, 120
  %"&pSB[currWI].offset516" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)51524"
  %CastToValueType517 = bitcast i8* %"&pSB[currWI].offset516" to double*
  %loadedValue518 = load double* %CastToValueType517, align 8
  %276 = fmul double %loadedValue518, %275
  %277 = load double* %203, align 8
  %278 = fadd double %277, %276
  %279 = load double addrspace(3)* %29, align 16
  %"&(pSB[currWI].offset)52025" = or i64 %CurrSBIndex..3, 120
  %"&pSB[currWI].offset521" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)52025"
  %CastToValueType522 = bitcast i8* %"&pSB[currWI].offset521" to double*
  %loadedValue523 = load double* %CastToValueType522, align 8
  %280 = fmul double %loadedValue523, %279
  %281 = load double* %205, align 16
  %282 = fadd double %281, %280
  %283 = load double addrspace(3)* %31, align 8
  %"&(pSB[currWI].offset)52526" = or i64 %CurrSBIndex..3, 120
  %"&pSB[currWI].offset526" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)52526"
  %CastToValueType527 = bitcast i8* %"&pSB[currWI].offset526" to double*
  %loadedValue528 = load double* %CastToValueType527, align 8
  %284 = fmul double %loadedValue528, %283
  %285 = load double* %207, align 8
  %286 = fadd double %285, %284
  %287 = load double addrspace(3)* %33, align 16
  %"&(pSB[currWI].offset)36627" = or i64 %CurrSBIndex..3, 112
  %"&pSB[currWI].offset367" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)36627"
  %CastToValueType368 = bitcast i8* %"&pSB[currWI].offset367" to double*
  %loadedValue369 = load double* %CastToValueType368, align 8
  %288 = fmul double %loadedValue369, %287
  %289 = fadd double %226, %288
  %290 = load double addrspace(3)* %35, align 8
  %"&(pSB[currWI].offset)37128" = or i64 %CurrSBIndex..3, 112
  %"&pSB[currWI].offset372" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)37128"
  %CastToValueType373 = bitcast i8* %"&pSB[currWI].offset372" to double*
  %loadedValue374 = load double* %CastToValueType373, align 8
  %291 = fmul double %loadedValue374, %290
  %292 = fadd double %230, %291
  %293 = load double addrspace(3)* %37, align 16
  %"&(pSB[currWI].offset)37629" = or i64 %CurrSBIndex..3, 112
  %"&pSB[currWI].offset377" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)37629"
  %CastToValueType378 = bitcast i8* %"&pSB[currWI].offset377" to double*
  %loadedValue379 = load double* %CastToValueType378, align 8
  %294 = fmul double %loadedValue379, %293
  %295 = fadd double %234, %294
  %296 = load double addrspace(3)* %39, align 8
  %"&(pSB[currWI].offset)38130" = or i64 %CurrSBIndex..3, 112
  %"&pSB[currWI].offset382" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)38130"
  %CastToValueType383 = bitcast i8* %"&pSB[currWI].offset382" to double*
  %loadedValue384 = load double* %CastToValueType383, align 8
  %297 = fmul double %loadedValue384, %296
  %298 = fadd double %238, %297
  %299 = load double addrspace(3)* %41, align 16
  %"&(pSB[currWI].offset)38631" = or i64 %CurrSBIndex..3, 112
  %"&pSB[currWI].offset387" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)38631"
  %CastToValueType388 = bitcast i8* %"&pSB[currWI].offset387" to double*
  %loadedValue389 = load double* %CastToValueType388, align 8
  %300 = fmul double %loadedValue389, %299
  %301 = fadd double %242, %300
  %302 = load double addrspace(3)* %43, align 8
  %"&(pSB[currWI].offset)39132" = or i64 %CurrSBIndex..3, 112
  %"&pSB[currWI].offset392" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)39132"
  %CastToValueType393 = bitcast i8* %"&pSB[currWI].offset392" to double*
  %loadedValue394 = load double* %CastToValueType393, align 8
  %303 = fmul double %loadedValue394, %302
  %304 = fadd double %246, %303
  %305 = load double addrspace(3)* %45, align 16
  %"&(pSB[currWI].offset)39633" = or i64 %CurrSBIndex..3, 112
  %"&pSB[currWI].offset397" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)39633"
  %CastToValueType398 = bitcast i8* %"&pSB[currWI].offset397" to double*
  %loadedValue399 = load double* %CastToValueType398, align 8
  %306 = fmul double %loadedValue399, %305
  %307 = fadd double %250, %306
  %308 = load double addrspace(3)* %47, align 8
  %"&(pSB[currWI].offset)40134" = or i64 %CurrSBIndex..3, 112
  %"&pSB[currWI].offset402" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)40134"
  %CastToValueType403 = bitcast i8* %"&pSB[currWI].offset402" to double*
  %loadedValue404 = load double* %CastToValueType403, align 8
  %309 = fmul double %loadedValue404, %308
  %310 = fadd double %254, %309
  %311 = load double addrspace(3)* %49, align 16
  %"&(pSB[currWI].offset)40635" = or i64 %CurrSBIndex..3, 112
  %"&pSB[currWI].offset407" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)40635"
  %CastToValueType408 = bitcast i8* %"&pSB[currWI].offset407" to double*
  %loadedValue409 = load double* %CastToValueType408, align 8
  %312 = fmul double %loadedValue409, %311
  %313 = fadd double %258, %312
  %314 = load double addrspace(3)* %51, align 8
  %"&(pSB[currWI].offset)41136" = or i64 %CurrSBIndex..3, 112
  %"&pSB[currWI].offset412" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)41136"
  %CastToValueType413 = bitcast i8* %"&pSB[currWI].offset412" to double*
  %loadedValue414 = load double* %CastToValueType413, align 8
  %315 = fmul double %loadedValue414, %314
  %316 = fadd double %262, %315
  %317 = load double addrspace(3)* %53, align 16
  %"&(pSB[currWI].offset)41637" = or i64 %CurrSBIndex..3, 112
  %"&pSB[currWI].offset417" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)41637"
  %CastToValueType418 = bitcast i8* %"&pSB[currWI].offset417" to double*
  %loadedValue419 = load double* %CastToValueType418, align 8
  %318 = fmul double %loadedValue419, %317
  %319 = fadd double %266, %318
  %320 = load double addrspace(3)* %55, align 8
  %"&(pSB[currWI].offset)42138" = or i64 %CurrSBIndex..3, 112
  %"&pSB[currWI].offset422" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)42138"
  %CastToValueType423 = bitcast i8* %"&pSB[currWI].offset422" to double*
  %loadedValue424 = load double* %CastToValueType423, align 8
  %321 = fmul double %loadedValue424, %320
  %322 = fadd double %270, %321
  %323 = load double addrspace(3)* %57, align 16
  %"&(pSB[currWI].offset)42639" = or i64 %CurrSBIndex..3, 112
  %"&pSB[currWI].offset427" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)42639"
  %CastToValueType428 = bitcast i8* %"&pSB[currWI].offset427" to double*
  %loadedValue429 = load double* %CastToValueType428, align 8
  %324 = fmul double %loadedValue429, %323
  %325 = fadd double %274, %324
  %326 = load double addrspace(3)* %59, align 8
  %"&(pSB[currWI].offset)43140" = or i64 %CurrSBIndex..3, 112
  %"&pSB[currWI].offset432" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)43140"
  %CastToValueType433 = bitcast i8* %"&pSB[currWI].offset432" to double*
  %loadedValue434 = load double* %CastToValueType433, align 8
  %327 = fmul double %loadedValue434, %326
  %328 = fadd double %278, %327
  %329 = load double addrspace(3)* %61, align 16
  %"&(pSB[currWI].offset)43641" = or i64 %CurrSBIndex..3, 112
  %"&pSB[currWI].offset437" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)43641"
  %CastToValueType438 = bitcast i8* %"&pSB[currWI].offset437" to double*
  %loadedValue439 = load double* %CastToValueType438, align 8
  %330 = fmul double %loadedValue439, %329
  %331 = fadd double %282, %330
  %332 = load double addrspace(3)* %63, align 8
  %"&(pSB[currWI].offset)44142" = or i64 %CurrSBIndex..3, 112
  %"&pSB[currWI].offset442" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)44142"
  %CastToValueType443 = bitcast i8* %"&pSB[currWI].offset442" to double*
  %loadedValue444 = load double* %CastToValueType443, align 8
  %333 = fmul double %loadedValue444, %332
  %334 = fadd double %286, %333
  %335 = load double addrspace(3)* %65, align 16
  %"&(pSB[currWI].offset)28243" = or i64 %CurrSBIndex..3, 104
  %"&pSB[currWI].offset283" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)28243"
  %CastToValueType284 = bitcast i8* %"&pSB[currWI].offset283" to double*
  %loadedValue285 = load double* %CastToValueType284, align 8
  %336 = fmul double %loadedValue285, %335
  %337 = fadd double %289, %336
  %338 = load double addrspace(3)* %67, align 8
  %"&(pSB[currWI].offset)28744" = or i64 %CurrSBIndex..3, 104
  %"&pSB[currWI].offset288" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)28744"
  %CastToValueType289 = bitcast i8* %"&pSB[currWI].offset288" to double*
  %loadedValue290 = load double* %CastToValueType289, align 8
  %339 = fmul double %loadedValue290, %338
  %340 = fadd double %292, %339
  %341 = load double addrspace(3)* %69, align 16
  %"&(pSB[currWI].offset)29245" = or i64 %CurrSBIndex..3, 104
  %"&pSB[currWI].offset293" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)29245"
  %CastToValueType294 = bitcast i8* %"&pSB[currWI].offset293" to double*
  %loadedValue295 = load double* %CastToValueType294, align 8
  %342 = fmul double %loadedValue295, %341
  %343 = fadd double %295, %342
  %344 = load double addrspace(3)* %71, align 8
  %"&(pSB[currWI].offset)29746" = or i64 %CurrSBIndex..3, 104
  %"&pSB[currWI].offset298" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)29746"
  %CastToValueType299 = bitcast i8* %"&pSB[currWI].offset298" to double*
  %loadedValue300 = load double* %CastToValueType299, align 8
  %345 = fmul double %loadedValue300, %344
  %346 = fadd double %298, %345
  %347 = load double addrspace(3)* %73, align 16
  %"&(pSB[currWI].offset)30247" = or i64 %CurrSBIndex..3, 104
  %"&pSB[currWI].offset303" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)30247"
  %CastToValueType304 = bitcast i8* %"&pSB[currWI].offset303" to double*
  %loadedValue305 = load double* %CastToValueType304, align 8
  %348 = fmul double %loadedValue305, %347
  %349 = fadd double %301, %348
  %350 = load double addrspace(3)* %75, align 8
  %"&(pSB[currWI].offset)30748" = or i64 %CurrSBIndex..3, 104
  %"&pSB[currWI].offset308" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)30748"
  %CastToValueType309 = bitcast i8* %"&pSB[currWI].offset308" to double*
  %loadedValue310 = load double* %CastToValueType309, align 8
  %351 = fmul double %loadedValue310, %350
  %352 = fadd double %304, %351
  %353 = load double addrspace(3)* %77, align 16
  %"&(pSB[currWI].offset)31249" = or i64 %CurrSBIndex..3, 104
  %"&pSB[currWI].offset313" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)31249"
  %CastToValueType314 = bitcast i8* %"&pSB[currWI].offset313" to double*
  %loadedValue315 = load double* %CastToValueType314, align 8
  %354 = fmul double %loadedValue315, %353
  %355 = fadd double %307, %354
  %356 = load double addrspace(3)* %79, align 8
  %"&(pSB[currWI].offset)31750" = or i64 %CurrSBIndex..3, 104
  %"&pSB[currWI].offset318" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)31750"
  %CastToValueType319 = bitcast i8* %"&pSB[currWI].offset318" to double*
  %loadedValue320 = load double* %CastToValueType319, align 8
  %357 = fmul double %loadedValue320, %356
  %358 = fadd double %310, %357
  %359 = load double addrspace(3)* %81, align 16
  %"&(pSB[currWI].offset)32251" = or i64 %CurrSBIndex..3, 104
  %"&pSB[currWI].offset323" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)32251"
  %CastToValueType324 = bitcast i8* %"&pSB[currWI].offset323" to double*
  %loadedValue325 = load double* %CastToValueType324, align 8
  %360 = fmul double %loadedValue325, %359
  %361 = fadd double %313, %360
  %362 = load double addrspace(3)* %83, align 8
  %"&(pSB[currWI].offset)32752" = or i64 %CurrSBIndex..3, 104
  %"&pSB[currWI].offset328" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)32752"
  %CastToValueType329 = bitcast i8* %"&pSB[currWI].offset328" to double*
  %loadedValue330 = load double* %CastToValueType329, align 8
  %363 = fmul double %loadedValue330, %362
  %364 = fadd double %316, %363
  %365 = load double addrspace(3)* %85, align 16
  %"&(pSB[currWI].offset)33253" = or i64 %CurrSBIndex..3, 104
  %"&pSB[currWI].offset333" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)33253"
  %CastToValueType334 = bitcast i8* %"&pSB[currWI].offset333" to double*
  %loadedValue335 = load double* %CastToValueType334, align 8
  %366 = fmul double %loadedValue335, %365
  %367 = fadd double %319, %366
  %368 = load double addrspace(3)* %87, align 8
  %"&(pSB[currWI].offset)33754" = or i64 %CurrSBIndex..3, 104
  %"&pSB[currWI].offset338" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)33754"
  %CastToValueType339 = bitcast i8* %"&pSB[currWI].offset338" to double*
  %loadedValue340 = load double* %CastToValueType339, align 8
  %369 = fmul double %loadedValue340, %368
  %370 = fadd double %322, %369
  %371 = load double addrspace(3)* %89, align 16
  %"&(pSB[currWI].offset)34255" = or i64 %CurrSBIndex..3, 104
  %"&pSB[currWI].offset343" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)34255"
  %CastToValueType344 = bitcast i8* %"&pSB[currWI].offset343" to double*
  %loadedValue345 = load double* %CastToValueType344, align 8
  %372 = fmul double %loadedValue345, %371
  %373 = fadd double %325, %372
  %374 = load double addrspace(3)* %91, align 8
  %"&(pSB[currWI].offset)34756" = or i64 %CurrSBIndex..3, 104
  %"&pSB[currWI].offset348" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)34756"
  %CastToValueType349 = bitcast i8* %"&pSB[currWI].offset348" to double*
  %loadedValue350 = load double* %CastToValueType349, align 8
  %375 = fmul double %loadedValue350, %374
  %376 = fadd double %328, %375
  %377 = load double addrspace(3)* %93, align 16
  %"&(pSB[currWI].offset)35257" = or i64 %CurrSBIndex..3, 104
  %"&pSB[currWI].offset353" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)35257"
  %CastToValueType354 = bitcast i8* %"&pSB[currWI].offset353" to double*
  %loadedValue355 = load double* %CastToValueType354, align 8
  %378 = fmul double %loadedValue355, %377
  %379 = fadd double %331, %378
  %380 = load double addrspace(3)* %95, align 8
  %"&(pSB[currWI].offset)35758" = or i64 %CurrSBIndex..3, 104
  %"&pSB[currWI].offset358" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)35758"
  %CastToValueType359 = bitcast i8* %"&pSB[currWI].offset358" to double*
  %loadedValue360 = load double* %CastToValueType359, align 8
  %381 = fmul double %loadedValue360, %380
  %382 = fadd double %334, %381
  %383 = load double addrspace(3)* %97, align 16
  %"&(pSB[currWI].offset)19859" = or i64 %CurrSBIndex..3, 96
  %"&pSB[currWI].offset199" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)19859"
  %CastToValueType200 = bitcast i8* %"&pSB[currWI].offset199" to double*
  %loadedValue201 = load double* %CastToValueType200, align 8
  %384 = fmul double %loadedValue201, %383
  %385 = fadd double %337, %384
  store double %385, double* %177, align 16
  %386 = load double addrspace(3)* %99, align 8
  %"&(pSB[currWI].offset)20360" = or i64 %CurrSBIndex..3, 96
  %"&pSB[currWI].offset204" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)20360"
  %CastToValueType205 = bitcast i8* %"&pSB[currWI].offset204" to double*
  %loadedValue206 = load double* %CastToValueType205, align 8
  %387 = fmul double %loadedValue206, %386
  %388 = fadd double %340, %387
  store double %388, double* %179, align 8
  %389 = load double addrspace(3)* %101, align 16
  %"&(pSB[currWI].offset)20861" = or i64 %CurrSBIndex..3, 96
  %"&pSB[currWI].offset209" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)20861"
  %CastToValueType210 = bitcast i8* %"&pSB[currWI].offset209" to double*
  %loadedValue211 = load double* %CastToValueType210, align 8
  %390 = fmul double %loadedValue211, %389
  %391 = fadd double %343, %390
  store double %391, double* %181, align 16
  %392 = load double addrspace(3)* %103, align 8
  %"&(pSB[currWI].offset)21362" = or i64 %CurrSBIndex..3, 96
  %"&pSB[currWI].offset214" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)21362"
  %CastToValueType215 = bitcast i8* %"&pSB[currWI].offset214" to double*
  %loadedValue216 = load double* %CastToValueType215, align 8
  %393 = fmul double %loadedValue216, %392
  %394 = fadd double %346, %393
  store double %394, double* %183, align 8
  %395 = load double addrspace(3)* %105, align 16
  %"&(pSB[currWI].offset)21863" = or i64 %CurrSBIndex..3, 96
  %"&pSB[currWI].offset219" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)21863"
  %CastToValueType220 = bitcast i8* %"&pSB[currWI].offset219" to double*
  %loadedValue221 = load double* %CastToValueType220, align 8
  %396 = fmul double %loadedValue221, %395
  %397 = fadd double %349, %396
  store double %397, double* %185, align 16
  %398 = load double addrspace(3)* %107, align 8
  %"&(pSB[currWI].offset)22364" = or i64 %CurrSBIndex..3, 96
  %"&pSB[currWI].offset224" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)22364"
  %CastToValueType225 = bitcast i8* %"&pSB[currWI].offset224" to double*
  %loadedValue226 = load double* %CastToValueType225, align 8
  %399 = fmul double %loadedValue226, %398
  %400 = fadd double %352, %399
  store double %400, double* %187, align 8
  %401 = load double addrspace(3)* %109, align 16
  %"&(pSB[currWI].offset)22865" = or i64 %CurrSBIndex..3, 96
  %"&pSB[currWI].offset229" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)22865"
  %CastToValueType230 = bitcast i8* %"&pSB[currWI].offset229" to double*
  %loadedValue231 = load double* %CastToValueType230, align 8
  %402 = fmul double %loadedValue231, %401
  %403 = fadd double %355, %402
  store double %403, double* %189, align 16
  %404 = load double addrspace(3)* %111, align 8
  %"&(pSB[currWI].offset)23366" = or i64 %CurrSBIndex..3, 96
  %"&pSB[currWI].offset234" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)23366"
  %CastToValueType235 = bitcast i8* %"&pSB[currWI].offset234" to double*
  %loadedValue236 = load double* %CastToValueType235, align 8
  %405 = fmul double %loadedValue236, %404
  %406 = fadd double %358, %405
  store double %406, double* %191, align 8
  %407 = load double addrspace(3)* %113, align 16
  %"&(pSB[currWI].offset)23867" = or i64 %CurrSBIndex..3, 96
  %"&pSB[currWI].offset239" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)23867"
  %CastToValueType240 = bitcast i8* %"&pSB[currWI].offset239" to double*
  %loadedValue241 = load double* %CastToValueType240, align 8
  %408 = fmul double %loadedValue241, %407
  %409 = fadd double %361, %408
  store double %409, double* %193, align 16
  %410 = load double addrspace(3)* %115, align 8
  %"&(pSB[currWI].offset)24368" = or i64 %CurrSBIndex..3, 96
  %"&pSB[currWI].offset244" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)24368"
  %CastToValueType245 = bitcast i8* %"&pSB[currWI].offset244" to double*
  %loadedValue246 = load double* %CastToValueType245, align 8
  %411 = fmul double %loadedValue246, %410
  %412 = fadd double %364, %411
  store double %412, double* %195, align 8
  %413 = load double addrspace(3)* %117, align 16
  %"&(pSB[currWI].offset)24869" = or i64 %CurrSBIndex..3, 96
  %"&pSB[currWI].offset249" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)24869"
  %CastToValueType250 = bitcast i8* %"&pSB[currWI].offset249" to double*
  %loadedValue251 = load double* %CastToValueType250, align 8
  %414 = fmul double %loadedValue251, %413
  %415 = fadd double %367, %414
  store double %415, double* %197, align 16
  %416 = load double addrspace(3)* %119, align 8
  %"&(pSB[currWI].offset)25370" = or i64 %CurrSBIndex..3, 96
  %"&pSB[currWI].offset254" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)25370"
  %CastToValueType255 = bitcast i8* %"&pSB[currWI].offset254" to double*
  %loadedValue256 = load double* %CastToValueType255, align 8
  %417 = fmul double %loadedValue256, %416
  %418 = fadd double %370, %417
  store double %418, double* %199, align 8
  %419 = load double addrspace(3)* %121, align 16
  %"&(pSB[currWI].offset)25871" = or i64 %CurrSBIndex..3, 96
  %"&pSB[currWI].offset259" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)25871"
  %CastToValueType260 = bitcast i8* %"&pSB[currWI].offset259" to double*
  %loadedValue261 = load double* %CastToValueType260, align 8
  %420 = fmul double %loadedValue261, %419
  %421 = fadd double %373, %420
  store double %421, double* %201, align 16
  %422 = load double addrspace(3)* %123, align 8
  %"&(pSB[currWI].offset)26372" = or i64 %CurrSBIndex..3, 96
  %"&pSB[currWI].offset264" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)26372"
  %CastToValueType265 = bitcast i8* %"&pSB[currWI].offset264" to double*
  %loadedValue266 = load double* %CastToValueType265, align 8
  %423 = fmul double %loadedValue266, %422
  %424 = fadd double %376, %423
  store double %424, double* %203, align 8
  %425 = load double addrspace(3)* %125, align 16
  %"&(pSB[currWI].offset)26873" = or i64 %CurrSBIndex..3, 96
  %"&pSB[currWI].offset269" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)26873"
  %CastToValueType270 = bitcast i8* %"&pSB[currWI].offset269" to double*
  %loadedValue271 = load double* %CastToValueType270, align 8
  %426 = fmul double %loadedValue271, %425
  %427 = fadd double %379, %426
  store double %427, double* %205, align 16
  %428 = load double addrspace(3)* %127, align 8
  %"&(pSB[currWI].offset)27374" = or i64 %CurrSBIndex..3, 96
  %"&pSB[currWI].offset274" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)27374"
  %CastToValueType275 = bitcast i8* %"&pSB[currWI].offset274" to double*
  %loadedValue276 = load double* %CastToValueType275, align 8
  %429 = fmul double %loadedValue276, %428
  %430 = fadd double %382, %429
  store double %430, double* %207, align 8
  %check.WI.iter861 = icmp ult i64 %CurrWI..3, %iterCount
  br i1 %check.WI.iter861, label %thenBB858, label %SyncBB853.preheader

thenBB858:                                        ; preds = %SyncBB
  %"CurrWI++862" = add nuw i64 %CurrWI..3, 1
  %"loadedCurrSB+Stride864" = add nuw i64 %CurrSBIndex..3, 12032
  br label %SyncBB

SyncBB853.preheader:                              ; preds = %SyncBB, %thenBB
  %currBarrier.0.ph = phi i32 [ %currBarrier.1, %thenBB ], [ 2, %SyncBB ]
  %CurrSBIndex..1.ph = phi i64 [ %"loadedCurrSB+Stride", %thenBB ], [ 0, %SyncBB ]
  %CurrWI..1.ph = phi i64 [ %"CurrWI++", %thenBB ], [ 0, %SyncBB ]
  br label %SyncBB853

SyncBB853:                                        ; preds = %thenBB865, %SyncBB853.preheader
  %CurrSBIndex..1 = phi i64 [ %"loadedCurrSB+Stride871", %thenBB865 ], [ %CurrSBIndex..1.ph, %SyncBB853.preheader ]
  %CurrWI..1 = phi i64 [ %"CurrWI++869", %thenBB865 ], [ %CurrWI..1.ph, %SyncBB853.preheader ]
  %"&(pSB[currWI].offset)543" = add nuw i64 %CurrSBIndex..1, 136
  %"&pSB[currWI].offset544" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)543"
  %CastToValueType545 = bitcast i8* %"&pSB[currWI].offset544" to i32*
  %loadedValue546 = load i32* %CastToValueType545, align 4
  %431 = icmp slt i32 %loadedValue546, %131
  %"&(pSB[currWI].offset)534" = add nuw i64 %CurrSBIndex..1, 128
  %"&pSB[currWI].offset535" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)534"
  %CastToValueType536 = bitcast i8* %"&pSB[currWI].offset535" to i64*
  %loadedValue537 = load i64* %CastToValueType536, align 8
  %indvar.next36 = add i64 %loadedValue537, 1
  %"&(pSB[currWI].offset)643" = add nuw i64 %CurrSBIndex..1, 224
  %"&pSB[currWI].offset644" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)643"
  %CastToValueType645 = bitcast i8* %"&pSB[currWI].offset644" to i64*
  store i64 %indvar.next36, i64* %CastToValueType645, align 8
  br i1 %431, label %.loopexit, label %bb.nph

bb.nph:                                           ; preds = %SyncBB853
  %"&(pSB[currWI].offset)139" = add nuw i64 %CurrSBIndex..1, 48
  %"&pSB[currWI].offset140" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)139"
  %CastToValueType141 = bitcast i8* %"&pSB[currWI].offset140" to double addrspace(3)**
  %loadedValue142 = load double addrspace(3)** %CastToValueType141, align 8
  %"&(pSB[currWI].offset)633" = add nuw i64 %CurrSBIndex..1, 216
  %"&pSB[currWI].offset634" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)633"
  %CastToValueType635 = bitcast i8* %"&pSB[currWI].offset634" to double*
  %loadedValue636 = load double* %CastToValueType635, align 8
  store double %loadedValue636, double addrspace(3)* %loadedValue142, align 8
  %check.WI.iter868 = icmp ult i64 %CurrWI..1, %iterCount
  br i1 %check.WI.iter868, label %thenBB865, label %elseBB866

thenBB865:                                        ; preds = %bb.nph
  %"CurrWI++869" = add nuw i64 %CurrWI..1, 1
  %"loadedCurrSB+Stride871" = add nuw i64 %CurrSBIndex..1, 12032
  br label %SyncBB853

elseBB866:                                        ; preds = %bb.nph
  %tmp = sext i32 %ldc to i64
  %tmp18 = mul i32 %144, %ldc
  br label %SyncBB854

SyncBB854:                                        ; preds = %thenBB872, %elseBB866
  %CurrSBIndex..4 = phi i64 [ 0, %elseBB866 ], [ %"loadedCurrSB+Stride878", %thenBB872 ]
  %CurrWI..4 = phi i64 [ 0, %elseBB866 ], [ %"CurrWI++876", %thenBB872 ]
  %432 = load double* %169, align 16
  %433 = load double addrspace(3)* %1, align 16
  %434 = fmul double %432, %433
  %435 = load double* %177, align 16
  %436 = fadd double %435, %434
  %437 = load double addrspace(3)* %3, align 8
  %438 = fmul double %432, %437
  %439 = load double* %179, align 8
  %440 = fadd double %439, %438
  %441 = load double addrspace(3)* %5, align 16
  %442 = fmul double %432, %441
  %443 = load double* %181, align 16
  %444 = fadd double %443, %442
  %445 = load double addrspace(3)* %7, align 8
  %446 = fmul double %432, %445
  %447 = load double* %183, align 8
  %448 = fadd double %447, %446
  %449 = load double addrspace(3)* %9, align 16
  %450 = fmul double %432, %449
  %451 = load double* %185, align 16
  %452 = fadd double %451, %450
  %453 = load double addrspace(3)* %11, align 8
  %454 = fmul double %432, %453
  %455 = load double* %187, align 8
  %456 = fadd double %455, %454
  %457 = load double addrspace(3)* %13, align 16
  %458 = fmul double %432, %457
  %459 = load double* %189, align 16
  %460 = fadd double %459, %458
  %461 = load double addrspace(3)* %15, align 8
  %462 = fmul double %432, %461
  %463 = load double* %191, align 8
  %464 = fadd double %463, %462
  %465 = load double addrspace(3)* %17, align 16
  %466 = fmul double %432, %465
  %467 = load double* %193, align 16
  %468 = fadd double %467, %466
  %469 = load double addrspace(3)* %19, align 8
  %470 = fmul double %432, %469
  %471 = load double* %195, align 8
  %472 = fadd double %471, %470
  %473 = load double addrspace(3)* %21, align 16
  %474 = fmul double %432, %473
  %475 = load double* %197, align 16
  %476 = fadd double %475, %474
  %477 = load double addrspace(3)* %23, align 8
  %478 = fmul double %432, %477
  %479 = load double* %199, align 8
  %480 = fadd double %479, %478
  %481 = load double addrspace(3)* %25, align 16
  %482 = fmul double %432, %481
  %483 = load double* %201, align 16
  %484 = fadd double %483, %482
  %485 = load double addrspace(3)* %27, align 8
  %486 = fmul double %432, %485
  %487 = load double* %203, align 8
  %488 = fadd double %487, %486
  %489 = load double addrspace(3)* %29, align 16
  %490 = fmul double %432, %489
  %491 = load double* %205, align 16
  %492 = fadd double %491, %490
  %493 = load double addrspace(3)* %31, align 8
  %494 = fmul double %432, %493
  %495 = load double* %207, align 8
  %496 = fadd double %495, %494
  %497 = load double* %171, align 8
  %498 = load double addrspace(3)* %33, align 16
  %499 = fmul double %497, %498
  %500 = fadd double %436, %499
  %501 = load double addrspace(3)* %35, align 8
  %502 = fmul double %497, %501
  %503 = fadd double %440, %502
  %504 = load double addrspace(3)* %37, align 16
  %505 = fmul double %497, %504
  %506 = fadd double %444, %505
  %507 = load double addrspace(3)* %39, align 8
  %508 = fmul double %497, %507
  %509 = fadd double %448, %508
  %510 = load double addrspace(3)* %41, align 16
  %511 = fmul double %497, %510
  %512 = fadd double %452, %511
  %513 = load double addrspace(3)* %43, align 8
  %514 = fmul double %497, %513
  %515 = fadd double %456, %514
  %516 = load double addrspace(3)* %45, align 16
  %517 = fmul double %497, %516
  %518 = fadd double %460, %517
  %519 = load double addrspace(3)* %47, align 8
  %520 = fmul double %497, %519
  %521 = fadd double %464, %520
  %522 = load double addrspace(3)* %49, align 16
  %523 = fmul double %497, %522
  %524 = fadd double %468, %523
  %525 = load double addrspace(3)* %51, align 8
  %526 = fmul double %497, %525
  %527 = fadd double %472, %526
  %528 = load double addrspace(3)* %53, align 16
  %529 = fmul double %497, %528
  %530 = fadd double %476, %529
  %531 = load double addrspace(3)* %55, align 8
  %532 = fmul double %497, %531
  %533 = fadd double %480, %532
  %534 = load double addrspace(3)* %57, align 16
  %535 = fmul double %497, %534
  %536 = fadd double %484, %535
  %537 = load double addrspace(3)* %59, align 8
  %538 = fmul double %497, %537
  %539 = fadd double %488, %538
  %540 = load double addrspace(3)* %61, align 16
  %541 = fmul double %497, %540
  %542 = fadd double %492, %541
  %543 = load double addrspace(3)* %63, align 8
  %544 = fmul double %497, %543
  %545 = fadd double %496, %544
  %546 = load double* %173, align 16
  %547 = load double addrspace(3)* %65, align 16
  %548 = fmul double %546, %547
  %549 = fadd double %500, %548
  %550 = load double addrspace(3)* %67, align 8
  %551 = fmul double %546, %550
  %552 = fadd double %503, %551
  %553 = load double addrspace(3)* %69, align 16
  %554 = fmul double %546, %553
  %555 = fadd double %506, %554
  %556 = load double addrspace(3)* %71, align 8
  %557 = fmul double %546, %556
  %558 = fadd double %509, %557
  %559 = load double addrspace(3)* %73, align 16
  %560 = fmul double %546, %559
  %561 = fadd double %512, %560
  %562 = load double addrspace(3)* %75, align 8
  %563 = fmul double %546, %562
  %564 = fadd double %515, %563
  %565 = load double addrspace(3)* %77, align 16
  %566 = fmul double %546, %565
  %567 = fadd double %518, %566
  %568 = load double addrspace(3)* %79, align 8
  %569 = fmul double %546, %568
  %570 = fadd double %521, %569
  %571 = load double addrspace(3)* %81, align 16
  %572 = fmul double %546, %571
  %573 = fadd double %524, %572
  %574 = load double addrspace(3)* %83, align 8
  %575 = fmul double %546, %574
  %576 = fadd double %527, %575
  %577 = load double addrspace(3)* %85, align 16
  %578 = fmul double %546, %577
  %579 = fadd double %530, %578
  %580 = load double addrspace(3)* %87, align 8
  %581 = fmul double %546, %580
  %582 = fadd double %533, %581
  %583 = load double addrspace(3)* %89, align 16
  %584 = fmul double %546, %583
  %585 = fadd double %536, %584
  %586 = load double addrspace(3)* %91, align 8
  %587 = fmul double %546, %586
  %588 = fadd double %539, %587
  %589 = load double addrspace(3)* %93, align 16
  %590 = fmul double %546, %589
  %591 = fadd double %542, %590
  %592 = load double addrspace(3)* %95, align 8
  %593 = fmul double %546, %592
  %594 = fadd double %545, %593
  %595 = load double* %175, align 8
  %596 = load double addrspace(3)* %97, align 16
  %597 = fmul double %595, %596
  %598 = fadd double %549, %597
  store double %598, double* %177, align 16
  %599 = load double addrspace(3)* %99, align 8
  %600 = fmul double %595, %599
  %601 = fadd double %552, %600
  store double %601, double* %179, align 8
  %602 = load double addrspace(3)* %101, align 16
  %603 = fmul double %595, %602
  %604 = fadd double %555, %603
  store double %604, double* %181, align 16
  %605 = load double addrspace(3)* %103, align 8
  %606 = fmul double %595, %605
  %607 = fadd double %558, %606
  store double %607, double* %183, align 8
  %608 = load double addrspace(3)* %105, align 16
  %609 = fmul double %595, %608
  %610 = fadd double %561, %609
  store double %610, double* %185, align 16
  %611 = load double addrspace(3)* %107, align 8
  %612 = fmul double %595, %611
  %613 = fadd double %564, %612
  store double %613, double* %187, align 8
  %614 = load double addrspace(3)* %109, align 16
  %615 = fmul double %595, %614
  %616 = fadd double %567, %615
  store double %616, double* %189, align 16
  %617 = load double addrspace(3)* %111, align 8
  %618 = fmul double %595, %617
  %619 = fadd double %570, %618
  store double %619, double* %191, align 8
  %620 = load double addrspace(3)* %113, align 16
  %621 = fmul double %595, %620
  %622 = fadd double %573, %621
  store double %622, double* %193, align 16
  %623 = load double addrspace(3)* %115, align 8
  %624 = fmul double %595, %623
  %625 = fadd double %576, %624
  store double %625, double* %195, align 8
  %626 = load double addrspace(3)* %117, align 16
  %627 = fmul double %595, %626
  %628 = fadd double %579, %627
  store double %628, double* %197, align 16
  %629 = load double addrspace(3)* %119, align 8
  %630 = fmul double %595, %629
  %631 = fadd double %582, %630
  store double %631, double* %199, align 8
  %632 = load double addrspace(3)* %121, align 16
  %633 = fmul double %595, %632
  %634 = fadd double %585, %633
  store double %634, double* %201, align 16
  %635 = load double addrspace(3)* %123, align 8
  %636 = fmul double %595, %635
  %637 = fadd double %588, %636
  store double %637, double* %203, align 8
  %638 = load double addrspace(3)* %125, align 16
  %639 = fmul double %595, %638
  %640 = fadd double %591, %639
  store double %640, double* %205, align 16
  %641 = load double addrspace(3)* %127, align 8
  %642 = fmul double %595, %641
  %643 = fadd double %594, %642
  store double %643, double* %207, align 8
  %"&(pSB[currWI].offset)11075" = or i64 %CurrSBIndex..4, 4
  %"&pSB[currWI].offset111" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)11075"
  %CastToValueType112 = bitcast i8* %"&pSB[currWI].offset111" to i32*
  %loadedValue113 = load i32* %CastToValueType112, align 4
  %tmp21 = add i32 %tmp18, %loadedValue113
  %"&pSB[currWI].offset103" = getelementptr inbounds i8* %pSpecialBuf, i64 %CurrSBIndex..4
  %CastToValueType104 = bitcast i8* %"&pSB[currWI].offset103" to i32*
  %loadedValue = load i32* %CastToValueType104, align 4
  %tmp23 = add i32 %tmp21, %loadedValue
  %tmp26 = add i32 %tmp23, %140
  %tmp27 = sext i32 %tmp26 to i64
  %"&(pSB[currWI].offset)683" = add nuw i64 %CurrSBIndex..4, 272
  %"&pSB[currWI].offset684" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)683"
  %CastToValueType685 = bitcast i8* %"&pSB[currWI].offset684" to [16 x double]*
  br label %644

; <label>:644                                     ; preds = %._crit_edge97, %SyncBB854
  %645 = phi double [ %598, %SyncBB854 ], [ %.pre, %._crit_edge97 ]
  %indvar = phi i64 [ 0, %SyncBB854 ], [ %indvar.next, %._crit_edge97 ]
  %tmp15 = mul i64 %tmp, %indvar
  %tmp28 = add i64 %tmp27, %tmp15
  %.025 = getelementptr double addrspace(1)* %C, i64 %tmp28
  %646 = fmul double %645, %alpha
  %647 = load double addrspace(1)* %.025, align 8
  %648 = fmul double %647, %beta
  %649 = fadd double %646, %648
  store double %649, double addrspace(1)* %.025, align 8
  %indvar.next = add i64 %indvar, 1
  %exitcond = icmp eq i64 %indvar.next, 16
  br i1 %exitcond, label %._crit_edge, label %._crit_edge97

._crit_edge97:                                    ; preds = %644
  %scevgep.phi.trans.insert = getelementptr [16 x double]* %CastToValueType685, i64 0, i64 %indvar.next
  %.pre = load double* %scevgep.phi.trans.insert, align 8
  br label %644

._crit_edge:                                      ; preds = %644
  %check.WI.iter875 = icmp ult i64 %CurrWI..4, %iterCount
  br i1 %check.WI.iter875, label %thenBB872, label %SyncBB856

thenBB872:                                        ; preds = %._crit_edge
  %"CurrWI++876" = add nuw i64 %CurrWI..4, 1
  %"loadedCurrSB+Stride878" = add nuw i64 %CurrSBIndex..4, 12032
  br label %SyncBB854

SyncBB856:                                        ; preds = %._crit_edge
  ret void
}

define void @__sgemmNN_separated_args(double addrspace(1)* nocapture %A, i32 %lda, double addrspace(1)* nocapture %B, i32 %ldb, double addrspace(1)* nocapture %C, i32 %ldc, i32 %k, double %alpha, double %beta, i8 addrspace(3)* %pLocalMem, %struct.WorkDim* %pWorkDim, i64* %pWGId, %struct.PaddedDimId* %pBaseGlbId, %struct.PaddedDimId* %pLocalIds, i64* %contextpointer, i64 %iterCount, i8* %pSpecialBuf, i64* %pCurrWI) nounwind alwaysinline {
.preheader19:
  %0 = bitcast i8 addrspace(3)* %pLocalMem to [16 x [17 x double]] addrspace(3)*
  %1 = bitcast i8 addrspace(3)* %pLocalMem to double addrspace(3)*
  %2 = getelementptr i8 addrspace(3)* %pLocalMem, i64 8
  %3 = bitcast i8 addrspace(3)* %2 to double addrspace(3)*
  %4 = getelementptr i8 addrspace(3)* %pLocalMem, i64 16
  %5 = bitcast i8 addrspace(3)* %4 to double addrspace(3)*
  %6 = getelementptr i8 addrspace(3)* %pLocalMem, i64 24
  %7 = bitcast i8 addrspace(3)* %6 to double addrspace(3)*
  %8 = getelementptr i8 addrspace(3)* %pLocalMem, i64 32
  %9 = bitcast i8 addrspace(3)* %8 to double addrspace(3)*
  %10 = getelementptr i8 addrspace(3)* %pLocalMem, i64 40
  %11 = bitcast i8 addrspace(3)* %10 to double addrspace(3)*
  %12 = getelementptr i8 addrspace(3)* %pLocalMem, i64 48
  %13 = bitcast i8 addrspace(3)* %12 to double addrspace(3)*
  %14 = getelementptr i8 addrspace(3)* %pLocalMem, i64 56
  %15 = bitcast i8 addrspace(3)* %14 to double addrspace(3)*
  %16 = getelementptr i8 addrspace(3)* %pLocalMem, i64 64
  %17 = bitcast i8 addrspace(3)* %16 to double addrspace(3)*
  %18 = getelementptr i8 addrspace(3)* %pLocalMem, i64 72
  %19 = bitcast i8 addrspace(3)* %18 to double addrspace(3)*
  %20 = getelementptr i8 addrspace(3)* %pLocalMem, i64 80
  %21 = bitcast i8 addrspace(3)* %20 to double addrspace(3)*
  %22 = getelementptr i8 addrspace(3)* %pLocalMem, i64 88
  %23 = bitcast i8 addrspace(3)* %22 to double addrspace(3)*
  %24 = getelementptr i8 addrspace(3)* %pLocalMem, i64 96
  %25 = bitcast i8 addrspace(3)* %24 to double addrspace(3)*
  %26 = getelementptr i8 addrspace(3)* %pLocalMem, i64 104
  %27 = bitcast i8 addrspace(3)* %26 to double addrspace(3)*
  %28 = getelementptr i8 addrspace(3)* %pLocalMem, i64 112
  %29 = bitcast i8 addrspace(3)* %28 to double addrspace(3)*
  %30 = getelementptr i8 addrspace(3)* %pLocalMem, i64 120
  %31 = bitcast i8 addrspace(3)* %30 to double addrspace(3)*
  %32 = getelementptr i8 addrspace(3)* %pLocalMem, i64 136
  %33 = bitcast i8 addrspace(3)* %32 to double addrspace(3)*
  %34 = getelementptr i8 addrspace(3)* %pLocalMem, i64 144
  %35 = bitcast i8 addrspace(3)* %34 to double addrspace(3)*
  %36 = getelementptr i8 addrspace(3)* %pLocalMem, i64 152
  %37 = bitcast i8 addrspace(3)* %36 to double addrspace(3)*
  %38 = getelementptr i8 addrspace(3)* %pLocalMem, i64 160
  %39 = bitcast i8 addrspace(3)* %38 to double addrspace(3)*
  %40 = getelementptr i8 addrspace(3)* %pLocalMem, i64 168
  %41 = bitcast i8 addrspace(3)* %40 to double addrspace(3)*
  %42 = getelementptr i8 addrspace(3)* %pLocalMem, i64 176
  %43 = bitcast i8 addrspace(3)* %42 to double addrspace(3)*
  %44 = getelementptr i8 addrspace(3)* %pLocalMem, i64 184
  %45 = bitcast i8 addrspace(3)* %44 to double addrspace(3)*
  %46 = getelementptr i8 addrspace(3)* %pLocalMem, i64 192
  %47 = bitcast i8 addrspace(3)* %46 to double addrspace(3)*
  %48 = getelementptr i8 addrspace(3)* %pLocalMem, i64 200
  %49 = bitcast i8 addrspace(3)* %48 to double addrspace(3)*
  %50 = getelementptr i8 addrspace(3)* %pLocalMem, i64 208
  %51 = bitcast i8 addrspace(3)* %50 to double addrspace(3)*
  %52 = getelementptr i8 addrspace(3)* %pLocalMem, i64 216
  %53 = bitcast i8 addrspace(3)* %52 to double addrspace(3)*
  %54 = getelementptr i8 addrspace(3)* %pLocalMem, i64 224
  %55 = bitcast i8 addrspace(3)* %54 to double addrspace(3)*
  %56 = getelementptr i8 addrspace(3)* %pLocalMem, i64 232
  %57 = bitcast i8 addrspace(3)* %56 to double addrspace(3)*
  %58 = getelementptr i8 addrspace(3)* %pLocalMem, i64 240
  %59 = bitcast i8 addrspace(3)* %58 to double addrspace(3)*
  %60 = getelementptr i8 addrspace(3)* %pLocalMem, i64 248
  %61 = bitcast i8 addrspace(3)* %60 to double addrspace(3)*
  %62 = getelementptr i8 addrspace(3)* %pLocalMem, i64 256
  %63 = bitcast i8 addrspace(3)* %62 to double addrspace(3)*
  %64 = getelementptr i8 addrspace(3)* %pLocalMem, i64 272
  %65 = bitcast i8 addrspace(3)* %64 to double addrspace(3)*
  %66 = getelementptr i8 addrspace(3)* %pLocalMem, i64 280
  %67 = bitcast i8 addrspace(3)* %66 to double addrspace(3)*
  %68 = getelementptr i8 addrspace(3)* %pLocalMem, i64 288
  %69 = bitcast i8 addrspace(3)* %68 to double addrspace(3)*
  %70 = getelementptr i8 addrspace(3)* %pLocalMem, i64 296
  %71 = bitcast i8 addrspace(3)* %70 to double addrspace(3)*
  %72 = getelementptr i8 addrspace(3)* %pLocalMem, i64 304
  %73 = bitcast i8 addrspace(3)* %72 to double addrspace(3)*
  %74 = getelementptr i8 addrspace(3)* %pLocalMem, i64 312
  %75 = bitcast i8 addrspace(3)* %74 to double addrspace(3)*
  %76 = getelementptr i8 addrspace(3)* %pLocalMem, i64 320
  %77 = bitcast i8 addrspace(3)* %76 to double addrspace(3)*
  %78 = getelementptr i8 addrspace(3)* %pLocalMem, i64 328
  %79 = bitcast i8 addrspace(3)* %78 to double addrspace(3)*
  %80 = getelementptr i8 addrspace(3)* %pLocalMem, i64 336
  %81 = bitcast i8 addrspace(3)* %80 to double addrspace(3)*
  %82 = getelementptr i8 addrspace(3)* %pLocalMem, i64 344
  %83 = bitcast i8 addrspace(3)* %82 to double addrspace(3)*
  %84 = getelementptr i8 addrspace(3)* %pLocalMem, i64 352
  %85 = bitcast i8 addrspace(3)* %84 to double addrspace(3)*
  %86 = getelementptr i8 addrspace(3)* %pLocalMem, i64 360
  %87 = bitcast i8 addrspace(3)* %86 to double addrspace(3)*
  %88 = getelementptr i8 addrspace(3)* %pLocalMem, i64 368
  %89 = bitcast i8 addrspace(3)* %88 to double addrspace(3)*
  %90 = getelementptr i8 addrspace(3)* %pLocalMem, i64 376
  %91 = bitcast i8 addrspace(3)* %90 to double addrspace(3)*
  %92 = getelementptr i8 addrspace(3)* %pLocalMem, i64 384
  %93 = bitcast i8 addrspace(3)* %92 to double addrspace(3)*
  %94 = getelementptr i8 addrspace(3)* %pLocalMem, i64 392
  %95 = bitcast i8 addrspace(3)* %94 to double addrspace(3)*
  %96 = getelementptr i8 addrspace(3)* %pLocalMem, i64 408
  %97 = bitcast i8 addrspace(3)* %96 to double addrspace(3)*
  %98 = getelementptr i8 addrspace(3)* %pLocalMem, i64 416
  %99 = bitcast i8 addrspace(3)* %98 to double addrspace(3)*
  %100 = getelementptr i8 addrspace(3)* %pLocalMem, i64 424
  %101 = bitcast i8 addrspace(3)* %100 to double addrspace(3)*
  %102 = getelementptr i8 addrspace(3)* %pLocalMem, i64 432
  %103 = bitcast i8 addrspace(3)* %102 to double addrspace(3)*
  %104 = getelementptr i8 addrspace(3)* %pLocalMem, i64 440
  %105 = bitcast i8 addrspace(3)* %104 to double addrspace(3)*
  %106 = getelementptr i8 addrspace(3)* %pLocalMem, i64 448
  %107 = bitcast i8 addrspace(3)* %106 to double addrspace(3)*
  %108 = getelementptr i8 addrspace(3)* %pLocalMem, i64 456
  %109 = bitcast i8 addrspace(3)* %108 to double addrspace(3)*
  %110 = getelementptr i8 addrspace(3)* %pLocalMem, i64 464
  %111 = bitcast i8 addrspace(3)* %110 to double addrspace(3)*
  %112 = getelementptr i8 addrspace(3)* %pLocalMem, i64 472
  %113 = bitcast i8 addrspace(3)* %112 to double addrspace(3)*
  %114 = getelementptr i8 addrspace(3)* %pLocalMem, i64 480
  %115 = bitcast i8 addrspace(3)* %114 to double addrspace(3)*
  %116 = getelementptr i8 addrspace(3)* %pLocalMem, i64 488
  %117 = bitcast i8 addrspace(3)* %116 to double addrspace(3)*
  %118 = getelementptr i8 addrspace(3)* %pLocalMem, i64 496
  %119 = bitcast i8 addrspace(3)* %118 to double addrspace(3)*
  %120 = getelementptr i8 addrspace(3)* %pLocalMem, i64 504
  %121 = bitcast i8 addrspace(3)* %120 to double addrspace(3)*
  %122 = getelementptr i8 addrspace(3)* %pLocalMem, i64 512
  %123 = bitcast i8 addrspace(3)* %122 to double addrspace(3)*
  %124 = getelementptr i8 addrspace(3)* %pLocalMem, i64 520
  %125 = bitcast i8 addrspace(3)* %124 to double addrspace(3)*
  %126 = getelementptr i8 addrspace(3)* %pLocalMem, i64 528
  %127 = bitcast i8 addrspace(3)* %126 to double addrspace(3)*
  %128 = getelementptr i8 addrspace(3)* %pLocalMem, i64 544
  %129 = bitcast i8 addrspace(3)* %128 to double addrspace(3)*
  %130 = getelementptr i8 addrspace(3)* %pLocalMem, i64 552
  %131 = bitcast i8 addrspace(3)* %130 to double addrspace(3)*
  %132 = getelementptr i8 addrspace(3)* %pLocalMem, i64 560
  %133 = bitcast i8 addrspace(3)* %132 to double addrspace(3)*
  %134 = getelementptr i8 addrspace(3)* %pLocalMem, i64 568
  %135 = bitcast i8 addrspace(3)* %134 to double addrspace(3)*
  %136 = getelementptr i8 addrspace(3)* %pLocalMem, i64 576
  %137 = bitcast i8 addrspace(3)* %136 to double addrspace(3)*
  %138 = getelementptr i8 addrspace(3)* %pLocalMem, i64 584
  %139 = bitcast i8 addrspace(3)* %138 to double addrspace(3)*
  %140 = getelementptr i8 addrspace(3)* %pLocalMem, i64 592
  %141 = bitcast i8 addrspace(3)* %140 to double addrspace(3)*
  %142 = getelementptr i8 addrspace(3)* %pLocalMem, i64 600
  %143 = bitcast i8 addrspace(3)* %142 to double addrspace(3)*
  %144 = getelementptr i8 addrspace(3)* %pLocalMem, i64 608
  %145 = bitcast i8 addrspace(3)* %144 to double addrspace(3)*
  %146 = getelementptr i8 addrspace(3)* %pLocalMem, i64 616
  %147 = bitcast i8 addrspace(3)* %146 to double addrspace(3)*
  %148 = getelementptr i8 addrspace(3)* %pLocalMem, i64 624
  %149 = bitcast i8 addrspace(3)* %148 to double addrspace(3)*
  %150 = getelementptr i8 addrspace(3)* %pLocalMem, i64 632
  %151 = bitcast i8 addrspace(3)* %150 to double addrspace(3)*
  %152 = getelementptr i8 addrspace(3)* %pLocalMem, i64 640
  %153 = bitcast i8 addrspace(3)* %152 to double addrspace(3)*
  %154 = getelementptr i8 addrspace(3)* %pLocalMem, i64 648
  %155 = bitcast i8 addrspace(3)* %154 to double addrspace(3)*
  %156 = getelementptr i8 addrspace(3)* %pLocalMem, i64 656
  %157 = bitcast i8 addrspace(3)* %156 to double addrspace(3)*
  %158 = getelementptr i8 addrspace(3)* %pLocalMem, i64 664
  %159 = bitcast i8 addrspace(3)* %158 to double addrspace(3)*
  %160 = getelementptr i8 addrspace(3)* %pLocalMem, i64 680
  %161 = bitcast i8 addrspace(3)* %160 to double addrspace(3)*
  %162 = getelementptr i8 addrspace(3)* %pLocalMem, i64 688
  %163 = bitcast i8 addrspace(3)* %162 to double addrspace(3)*
  %164 = getelementptr i8 addrspace(3)* %pLocalMem, i64 696
  %165 = bitcast i8 addrspace(3)* %164 to double addrspace(3)*
  %166 = getelementptr i8 addrspace(3)* %pLocalMem, i64 704
  %167 = bitcast i8 addrspace(3)* %166 to double addrspace(3)*
  %168 = getelementptr i8 addrspace(3)* %pLocalMem, i64 712
  %169 = bitcast i8 addrspace(3)* %168 to double addrspace(3)*
  %170 = getelementptr i8 addrspace(3)* %pLocalMem, i64 720
  %171 = bitcast i8 addrspace(3)* %170 to double addrspace(3)*
  %172 = getelementptr i8 addrspace(3)* %pLocalMem, i64 728
  %173 = bitcast i8 addrspace(3)* %172 to double addrspace(3)*
  %174 = getelementptr i8 addrspace(3)* %pLocalMem, i64 736
  %175 = bitcast i8 addrspace(3)* %174 to double addrspace(3)*
  %176 = getelementptr i8 addrspace(3)* %pLocalMem, i64 744
  %177 = bitcast i8 addrspace(3)* %176 to double addrspace(3)*
  %178 = getelementptr i8 addrspace(3)* %pLocalMem, i64 752
  %179 = bitcast i8 addrspace(3)* %178 to double addrspace(3)*
  %180 = getelementptr i8 addrspace(3)* %pLocalMem, i64 760
  %181 = bitcast i8 addrspace(3)* %180 to double addrspace(3)*
  %182 = getelementptr i8 addrspace(3)* %pLocalMem, i64 768
  %183 = bitcast i8 addrspace(3)* %182 to double addrspace(3)*
  %184 = getelementptr i8 addrspace(3)* %pLocalMem, i64 776
  %185 = bitcast i8 addrspace(3)* %184 to double addrspace(3)*
  %186 = getelementptr i8 addrspace(3)* %pLocalMem, i64 784
  %187 = bitcast i8 addrspace(3)* %186 to double addrspace(3)*
  %188 = getelementptr i8 addrspace(3)* %pLocalMem, i64 792
  %189 = bitcast i8 addrspace(3)* %188 to double addrspace(3)*
  %190 = getelementptr i8 addrspace(3)* %pLocalMem, i64 800
  %191 = bitcast i8 addrspace(3)* %190 to double addrspace(3)*
  %192 = getelementptr i8 addrspace(3)* %pLocalMem, i64 816
  %193 = bitcast i8 addrspace(3)* %192 to double addrspace(3)*
  %194 = getelementptr i8 addrspace(3)* %pLocalMem, i64 824
  %195 = bitcast i8 addrspace(3)* %194 to double addrspace(3)*
  %196 = getelementptr i8 addrspace(3)* %pLocalMem, i64 832
  %197 = bitcast i8 addrspace(3)* %196 to double addrspace(3)*
  %198 = getelementptr i8 addrspace(3)* %pLocalMem, i64 840
  %199 = bitcast i8 addrspace(3)* %198 to double addrspace(3)*
  %200 = getelementptr i8 addrspace(3)* %pLocalMem, i64 848
  %201 = bitcast i8 addrspace(3)* %200 to double addrspace(3)*
  %202 = getelementptr i8 addrspace(3)* %pLocalMem, i64 856
  %203 = bitcast i8 addrspace(3)* %202 to double addrspace(3)*
  %204 = getelementptr i8 addrspace(3)* %pLocalMem, i64 864
  %205 = bitcast i8 addrspace(3)* %204 to double addrspace(3)*
  %206 = getelementptr i8 addrspace(3)* %pLocalMem, i64 872
  %207 = bitcast i8 addrspace(3)* %206 to double addrspace(3)*
  %208 = getelementptr i8 addrspace(3)* %pLocalMem, i64 880
  %209 = bitcast i8 addrspace(3)* %208 to double addrspace(3)*
  %210 = getelementptr i8 addrspace(3)* %pLocalMem, i64 888
  %211 = bitcast i8 addrspace(3)* %210 to double addrspace(3)*
  %212 = getelementptr i8 addrspace(3)* %pLocalMem, i64 896
  %213 = bitcast i8 addrspace(3)* %212 to double addrspace(3)*
  %214 = getelementptr i8 addrspace(3)* %pLocalMem, i64 904
  %215 = bitcast i8 addrspace(3)* %214 to double addrspace(3)*
  %216 = getelementptr i8 addrspace(3)* %pLocalMem, i64 912
  %217 = bitcast i8 addrspace(3)* %216 to double addrspace(3)*
  %218 = getelementptr i8 addrspace(3)* %pLocalMem, i64 920
  %219 = bitcast i8 addrspace(3)* %218 to double addrspace(3)*
  %220 = getelementptr i8 addrspace(3)* %pLocalMem, i64 928
  %221 = bitcast i8 addrspace(3)* %220 to double addrspace(3)*
  %222 = getelementptr i8 addrspace(3)* %pLocalMem, i64 936
  %223 = bitcast i8 addrspace(3)* %222 to double addrspace(3)*
  %224 = getelementptr i8 addrspace(3)* %pLocalMem, i64 952
  %225 = bitcast i8 addrspace(3)* %224 to double addrspace(3)*
  %226 = getelementptr i8 addrspace(3)* %pLocalMem, i64 960
  %227 = bitcast i8 addrspace(3)* %226 to double addrspace(3)*
  %228 = getelementptr i8 addrspace(3)* %pLocalMem, i64 968
  %229 = bitcast i8 addrspace(3)* %228 to double addrspace(3)*
  %230 = getelementptr i8 addrspace(3)* %pLocalMem, i64 976
  %231 = bitcast i8 addrspace(3)* %230 to double addrspace(3)*
  %232 = getelementptr i8 addrspace(3)* %pLocalMem, i64 984
  %233 = bitcast i8 addrspace(3)* %232 to double addrspace(3)*
  %234 = getelementptr i8 addrspace(3)* %pLocalMem, i64 992
  %235 = bitcast i8 addrspace(3)* %234 to double addrspace(3)*
  %236 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1000
  %237 = bitcast i8 addrspace(3)* %236 to double addrspace(3)*
  %238 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1008
  %239 = bitcast i8 addrspace(3)* %238 to double addrspace(3)*
  %240 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1016
  %241 = bitcast i8 addrspace(3)* %240 to double addrspace(3)*
  %242 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1024
  %243 = bitcast i8 addrspace(3)* %242 to double addrspace(3)*
  %244 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1032
  %245 = bitcast i8 addrspace(3)* %244 to double addrspace(3)*
  %246 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1040
  %247 = bitcast i8 addrspace(3)* %246 to double addrspace(3)*
  %248 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1048
  %249 = bitcast i8 addrspace(3)* %248 to double addrspace(3)*
  %250 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1056
  %251 = bitcast i8 addrspace(3)* %250 to double addrspace(3)*
  %252 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1064
  %253 = bitcast i8 addrspace(3)* %252 to double addrspace(3)*
  %254 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1072
  %255 = bitcast i8 addrspace(3)* %254 to double addrspace(3)*
  %256 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1088
  %257 = bitcast i8 addrspace(3)* %256 to double addrspace(3)*
  %258 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1096
  %259 = bitcast i8 addrspace(3)* %258 to double addrspace(3)*
  %260 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1104
  %261 = bitcast i8 addrspace(3)* %260 to double addrspace(3)*
  %262 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1112
  %263 = bitcast i8 addrspace(3)* %262 to double addrspace(3)*
  %264 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1120
  %265 = bitcast i8 addrspace(3)* %264 to double addrspace(3)*
  %266 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1128
  %267 = bitcast i8 addrspace(3)* %266 to double addrspace(3)*
  %268 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1136
  %269 = bitcast i8 addrspace(3)* %268 to double addrspace(3)*
  %270 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1144
  %271 = bitcast i8 addrspace(3)* %270 to double addrspace(3)*
  %272 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1152
  %273 = bitcast i8 addrspace(3)* %272 to double addrspace(3)*
  %274 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1160
  %275 = bitcast i8 addrspace(3)* %274 to double addrspace(3)*
  %276 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1168
  %277 = bitcast i8 addrspace(3)* %276 to double addrspace(3)*
  %278 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1176
  %279 = bitcast i8 addrspace(3)* %278 to double addrspace(3)*
  %280 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1184
  %281 = bitcast i8 addrspace(3)* %280 to double addrspace(3)*
  %282 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1192
  %283 = bitcast i8 addrspace(3)* %282 to double addrspace(3)*
  %284 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1200
  %285 = bitcast i8 addrspace(3)* %284 to double addrspace(3)*
  %286 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1208
  %287 = bitcast i8 addrspace(3)* %286 to double addrspace(3)*
  %288 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1224
  %289 = bitcast i8 addrspace(3)* %288 to double addrspace(3)*
  %290 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1232
  %291 = bitcast i8 addrspace(3)* %290 to double addrspace(3)*
  %292 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1240
  %293 = bitcast i8 addrspace(3)* %292 to double addrspace(3)*
  %294 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1248
  %295 = bitcast i8 addrspace(3)* %294 to double addrspace(3)*
  %296 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1256
  %297 = bitcast i8 addrspace(3)* %296 to double addrspace(3)*
  %298 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1264
  %299 = bitcast i8 addrspace(3)* %298 to double addrspace(3)*
  %300 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1272
  %301 = bitcast i8 addrspace(3)* %300 to double addrspace(3)*
  %302 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1280
  %303 = bitcast i8 addrspace(3)* %302 to double addrspace(3)*
  %304 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1288
  %305 = bitcast i8 addrspace(3)* %304 to double addrspace(3)*
  %306 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1296
  %307 = bitcast i8 addrspace(3)* %306 to double addrspace(3)*
  %308 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1304
  %309 = bitcast i8 addrspace(3)* %308 to double addrspace(3)*
  %310 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1312
  %311 = bitcast i8 addrspace(3)* %310 to double addrspace(3)*
  %312 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1320
  %313 = bitcast i8 addrspace(3)* %312 to double addrspace(3)*
  %314 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1328
  %315 = bitcast i8 addrspace(3)* %314 to double addrspace(3)*
  %316 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1336
  %317 = bitcast i8 addrspace(3)* %316 to double addrspace(3)*
  %318 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1344
  %319 = bitcast i8 addrspace(3)* %318 to double addrspace(3)*
  %320 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1360
  %321 = bitcast i8 addrspace(3)* %320 to double addrspace(3)*
  %322 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1368
  %323 = bitcast i8 addrspace(3)* %322 to double addrspace(3)*
  %324 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1376
  %325 = bitcast i8 addrspace(3)* %324 to double addrspace(3)*
  %326 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1384
  %327 = bitcast i8 addrspace(3)* %326 to double addrspace(3)*
  %328 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1392
  %329 = bitcast i8 addrspace(3)* %328 to double addrspace(3)*
  %330 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1400
  %331 = bitcast i8 addrspace(3)* %330 to double addrspace(3)*
  %332 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1408
  %333 = bitcast i8 addrspace(3)* %332 to double addrspace(3)*
  %334 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1416
  %335 = bitcast i8 addrspace(3)* %334 to double addrspace(3)*
  %336 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1424
  %337 = bitcast i8 addrspace(3)* %336 to double addrspace(3)*
  %338 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1432
  %339 = bitcast i8 addrspace(3)* %338 to double addrspace(3)*
  %340 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1440
  %341 = bitcast i8 addrspace(3)* %340 to double addrspace(3)*
  %342 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1448
  %343 = bitcast i8 addrspace(3)* %342 to double addrspace(3)*
  %344 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1456
  %345 = bitcast i8 addrspace(3)* %344 to double addrspace(3)*
  %346 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1464
  %347 = bitcast i8 addrspace(3)* %346 to double addrspace(3)*
  %348 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1472
  %349 = bitcast i8 addrspace(3)* %348 to double addrspace(3)*
  %350 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1480
  %351 = bitcast i8 addrspace(3)* %350 to double addrspace(3)*
  %352 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1496
  %353 = bitcast i8 addrspace(3)* %352 to double addrspace(3)*
  %354 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1504
  %355 = bitcast i8 addrspace(3)* %354 to double addrspace(3)*
  %356 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1512
  %357 = bitcast i8 addrspace(3)* %356 to double addrspace(3)*
  %358 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1520
  %359 = bitcast i8 addrspace(3)* %358 to double addrspace(3)*
  %360 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1528
  %361 = bitcast i8 addrspace(3)* %360 to double addrspace(3)*
  %362 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1536
  %363 = bitcast i8 addrspace(3)* %362 to double addrspace(3)*
  %364 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1544
  %365 = bitcast i8 addrspace(3)* %364 to double addrspace(3)*
  %366 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1552
  %367 = bitcast i8 addrspace(3)* %366 to double addrspace(3)*
  %368 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1560
  %369 = bitcast i8 addrspace(3)* %368 to double addrspace(3)*
  %370 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1568
  %371 = bitcast i8 addrspace(3)* %370 to double addrspace(3)*
  %372 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1576
  %373 = bitcast i8 addrspace(3)* %372 to double addrspace(3)*
  %374 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1584
  %375 = bitcast i8 addrspace(3)* %374 to double addrspace(3)*
  %376 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1592
  %377 = bitcast i8 addrspace(3)* %376 to double addrspace(3)*
  %378 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1600
  %379 = bitcast i8 addrspace(3)* %378 to double addrspace(3)*
  %380 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1608
  %381 = bitcast i8 addrspace(3)* %380 to double addrspace(3)*
  %382 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1616
  %383 = bitcast i8 addrspace(3)* %382 to double addrspace(3)*
  %384 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1632
  %385 = bitcast i8 addrspace(3)* %384 to double addrspace(3)*
  %386 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1640
  %387 = bitcast i8 addrspace(3)* %386 to double addrspace(3)*
  %388 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1648
  %389 = bitcast i8 addrspace(3)* %388 to double addrspace(3)*
  %390 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1656
  %391 = bitcast i8 addrspace(3)* %390 to double addrspace(3)*
  %392 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1664
  %393 = bitcast i8 addrspace(3)* %392 to double addrspace(3)*
  %394 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1672
  %395 = bitcast i8 addrspace(3)* %394 to double addrspace(3)*
  %396 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1680
  %397 = bitcast i8 addrspace(3)* %396 to double addrspace(3)*
  %398 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1688
  %399 = bitcast i8 addrspace(3)* %398 to double addrspace(3)*
  %400 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1696
  %401 = bitcast i8 addrspace(3)* %400 to double addrspace(3)*
  %402 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1704
  %403 = bitcast i8 addrspace(3)* %402 to double addrspace(3)*
  %404 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1712
  %405 = bitcast i8 addrspace(3)* %404 to double addrspace(3)*
  %406 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1720
  %407 = bitcast i8 addrspace(3)* %406 to double addrspace(3)*
  %408 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1728
  %409 = bitcast i8 addrspace(3)* %408 to double addrspace(3)*
  %410 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1736
  %411 = bitcast i8 addrspace(3)* %410 to double addrspace(3)*
  %412 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1744
  %413 = bitcast i8 addrspace(3)* %412 to double addrspace(3)*
  %414 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1752
  %415 = bitcast i8 addrspace(3)* %414 to double addrspace(3)*
  %416 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1768
  %417 = bitcast i8 addrspace(3)* %416 to double addrspace(3)*
  %418 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1776
  %419 = bitcast i8 addrspace(3)* %418 to double addrspace(3)*
  %420 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1784
  %421 = bitcast i8 addrspace(3)* %420 to double addrspace(3)*
  %422 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1792
  %423 = bitcast i8 addrspace(3)* %422 to double addrspace(3)*
  %424 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1800
  %425 = bitcast i8 addrspace(3)* %424 to double addrspace(3)*
  %426 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1808
  %427 = bitcast i8 addrspace(3)* %426 to double addrspace(3)*
  %428 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1816
  %429 = bitcast i8 addrspace(3)* %428 to double addrspace(3)*
  %430 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1824
  %431 = bitcast i8 addrspace(3)* %430 to double addrspace(3)*
  %432 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1832
  %433 = bitcast i8 addrspace(3)* %432 to double addrspace(3)*
  %434 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1840
  %435 = bitcast i8 addrspace(3)* %434 to double addrspace(3)*
  %436 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1848
  %437 = bitcast i8 addrspace(3)* %436 to double addrspace(3)*
  %438 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1856
  %439 = bitcast i8 addrspace(3)* %438 to double addrspace(3)*
  %440 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1864
  %441 = bitcast i8 addrspace(3)* %440 to double addrspace(3)*
  %442 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1872
  %443 = bitcast i8 addrspace(3)* %442 to double addrspace(3)*
  %444 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1880
  %445 = bitcast i8 addrspace(3)* %444 to double addrspace(3)*
  %446 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1888
  %447 = bitcast i8 addrspace(3)* %446 to double addrspace(3)*
  %448 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1904
  %449 = bitcast i8 addrspace(3)* %448 to double addrspace(3)*
  %450 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1912
  %451 = bitcast i8 addrspace(3)* %450 to double addrspace(3)*
  %452 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1920
  %453 = bitcast i8 addrspace(3)* %452 to double addrspace(3)*
  %454 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1928
  %455 = bitcast i8 addrspace(3)* %454 to double addrspace(3)*
  %456 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1936
  %457 = bitcast i8 addrspace(3)* %456 to double addrspace(3)*
  %458 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1944
  %459 = bitcast i8 addrspace(3)* %458 to double addrspace(3)*
  %460 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1952
  %461 = bitcast i8 addrspace(3)* %460 to double addrspace(3)*
  %462 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1960
  %463 = bitcast i8 addrspace(3)* %462 to double addrspace(3)*
  %464 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1968
  %465 = bitcast i8 addrspace(3)* %464 to double addrspace(3)*
  %466 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1976
  %467 = bitcast i8 addrspace(3)* %466 to double addrspace(3)*
  %468 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1984
  %469 = bitcast i8 addrspace(3)* %468 to double addrspace(3)*
  %470 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1992
  %471 = bitcast i8 addrspace(3)* %470 to double addrspace(3)*
  %472 = getelementptr i8 addrspace(3)* %pLocalMem, i64 2000
  %473 = bitcast i8 addrspace(3)* %472 to double addrspace(3)*
  %474 = getelementptr i8 addrspace(3)* %pLocalMem, i64 2008
  %475 = bitcast i8 addrspace(3)* %474 to double addrspace(3)*
  %476 = getelementptr i8 addrspace(3)* %pLocalMem, i64 2016
  %477 = bitcast i8 addrspace(3)* %476 to double addrspace(3)*
  %478 = getelementptr i8 addrspace(3)* %pLocalMem, i64 2024
  %479 = bitcast i8 addrspace(3)* %478 to double addrspace(3)*
  %480 = getelementptr i8 addrspace(3)* %pLocalMem, i64 2040
  %481 = bitcast i8 addrspace(3)* %480 to double addrspace(3)*
  %482 = getelementptr i8 addrspace(3)* %pLocalMem, i64 2048
  %483 = bitcast i8 addrspace(3)* %482 to double addrspace(3)*
  %484 = getelementptr i8 addrspace(3)* %pLocalMem, i64 2056
  %485 = bitcast i8 addrspace(3)* %484 to double addrspace(3)*
  %486 = getelementptr i8 addrspace(3)* %pLocalMem, i64 2064
  %487 = bitcast i8 addrspace(3)* %486 to double addrspace(3)*
  %488 = getelementptr i8 addrspace(3)* %pLocalMem, i64 2072
  %489 = bitcast i8 addrspace(3)* %488 to double addrspace(3)*
  %490 = getelementptr i8 addrspace(3)* %pLocalMem, i64 2080
  %491 = bitcast i8 addrspace(3)* %490 to double addrspace(3)*
  %492 = getelementptr i8 addrspace(3)* %pLocalMem, i64 2088
  %493 = bitcast i8 addrspace(3)* %492 to double addrspace(3)*
  %494 = getelementptr i8 addrspace(3)* %pLocalMem, i64 2096
  %495 = bitcast i8 addrspace(3)* %494 to double addrspace(3)*
  %496 = getelementptr i8 addrspace(3)* %pLocalMem, i64 2104
  %497 = bitcast i8 addrspace(3)* %496 to double addrspace(3)*
  %498 = getelementptr i8 addrspace(3)* %pLocalMem, i64 2112
  %499 = bitcast i8 addrspace(3)* %498 to double addrspace(3)*
  %500 = getelementptr i8 addrspace(3)* %pLocalMem, i64 2120
  %501 = bitcast i8 addrspace(3)* %500 to double addrspace(3)*
  %502 = getelementptr i8 addrspace(3)* %pLocalMem, i64 2128
  %503 = bitcast i8 addrspace(3)* %502 to double addrspace(3)*
  %504 = getelementptr i8 addrspace(3)* %pLocalMem, i64 2136
  %505 = bitcast i8 addrspace(3)* %504 to double addrspace(3)*
  %506 = getelementptr i8 addrspace(3)* %pLocalMem, i64 2144
  %507 = bitcast i8 addrspace(3)* %506 to double addrspace(3)*
  %508 = getelementptr i8 addrspace(3)* %pLocalMem, i64 2152
  %509 = bitcast i8 addrspace(3)* %508 to double addrspace(3)*
  %510 = getelementptr i8 addrspace(3)* %pLocalMem, i64 2160
  %511 = bitcast i8 addrspace(3)* %510 to double addrspace(3)*
  %tmp59 = mul i32 %ldb, 12
  %tmp60 = sext i32 %tmp59 to i64
  %tmp64 = shl i32 %ldb, 3
  %tmp65 = sext i32 %tmp64 to i64
  %tmp69 = shl i32 %ldb, 2
  %tmp70 = sext i32 %tmp69 to i64
  %tmp74 = shl i32 %lda, 2
  %tmp75 = sext i32 %tmp74 to i64
  %tmp76 = shl i64 %tmp75, 2
  %tmp85 = mul i32 %lda, 3
  %tmp87 = sext i32 %tmp85 to i64
  %tmp91 = shl i32 %lda, 1
  %tmp93 = sext i32 %tmp91 to i64
  %tmp97 = sext i32 %lda to i64
  %tmp101 = mul i64 %tmp75, 3
  %tmp104 = add i64 %tmp101, %tmp87
  %tmp110 = add i64 %tmp101, %tmp93
  %tmp114 = add i64 %tmp101, %tmp97
  %tmp121 = shl i64 %tmp75, 1
  %tmp122 = add i64 %tmp121, %tmp87
  %tmp126 = add i64 %tmp121, %tmp93
  %tmp130 = add i64 %tmp121, %tmp97
  %tmp137 = add i64 %tmp75, %tmp87
  %tmp141 = add i64 %tmp75, %tmp93
  %tmp145 = add i64 %tmp97, %tmp75
  %tmp = sext i32 %ldc to i64
  br label %SyncBB

SyncBB:                                           ; preds = %thenBB, %.preheader19
  %currBarrier.2 = phi i32 [ 14, %.preheader19 ], [ %currBarrier.1, %thenBB ]
  %CurrSBIndex..0 = phi i64 [ 0, %.preheader19 ], [ %"loadedCurrSB+Stride", %thenBB ]
  %CurrWI..0 = phi i64 [ 0, %.preheader19 ], [ %"CurrWI++", %thenBB ]
  %512 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %513 = load i64* %512, align 8
  %514 = trunc i64 %513 to i32
  %"&(pSB[currWI].offset)" = add nuw i64 %CurrSBIndex..0, 432
  %"&pSB[currWI].offset" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)"
  %CastToValueType = bitcast i8* %"&pSB[currWI].offset" to i32*
  store i32 %514, i32* %CastToValueType, align 4
  %515 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 1
  %516 = load i64* %515, align 8
  %517 = trunc i64 %516 to i32
  %518 = load i64* %pWGId, align 8
  %519 = getelementptr i64* %pWGId, i64 1
  %520 = load i64* %519, align 8
  %"&(pSB[currWI].offset)856" = add nuw i64 %CurrSBIndex..0, 800
  %"&pSB[currWI].offset857" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)856"
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset857", i8 0, i64 128, i32 16, i1 false)
  %521 = sext i32 %517 to i64
  %522 = sext i32 %514 to i64
  %523 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %522, i64 %521
  %"&(pSB[currWI].offset)165" = add nuw i64 %CurrSBIndex..0, 440
  %"&pSB[currWI].offset166" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)165"
  %CastToValueType167 = bitcast i8* %"&pSB[currWI].offset166" to double addrspace(3)**
  store double addrspace(3)* %523, double addrspace(3)** %CastToValueType167, align 8
  %524 = add nsw i32 %517, 4
  %525 = sext i32 %524 to i64
  %526 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %522, i64 %525
  %"&(pSB[currWI].offset)174" = add nuw i64 %CurrSBIndex..0, 448
  %"&pSB[currWI].offset175" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)174"
  %CastToValueType176 = bitcast i8* %"&pSB[currWI].offset175" to double addrspace(3)**
  store double addrspace(3)* %526, double addrspace(3)** %CastToValueType176, align 8
  %527 = add nsw i32 %517, 8
  %528 = sext i32 %527 to i64
  %529 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %522, i64 %528
  %"&(pSB[currWI].offset)183" = add nuw i64 %CurrSBIndex..0, 456
  %"&pSB[currWI].offset184" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)183"
  %CastToValueType185 = bitcast i8* %"&pSB[currWI].offset184" to double addrspace(3)**
  store double addrspace(3)* %529, double addrspace(3)** %CastToValueType185, align 8
  %530 = add nsw i32 %517, 12
  %531 = sext i32 %530 to i64
  %532 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %522, i64 %531
  %"&(pSB[currWI].offset)192" = add nuw i64 %CurrSBIndex..0, 464
  %"&pSB[currWI].offset193" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)192"
  %CastToValueType194 = bitcast i8* %"&pSB[currWI].offset193" to double addrspace(3)**
  store double addrspace(3)* %532, double addrspace(3)** %CastToValueType194, align 8
  %"&(pSB[currWI].offset)940" = add nuw i64 %CurrSBIndex..0, 928
  %"&pSB[currWI].offset941" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)940"
  %533 = bitcast i8* %"&pSB[currWI].offset941" to double*
  %"&(pSB[currWI].offset)924" = add nuw i64 %CurrSBIndex..0, 800
  %"&pSB[currWI].offset925" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)924"
  %534 = bitcast i8* %"&pSB[currWI].offset925" to double*
  %"&pSB[currWI].offset921.sum" = add i64 %CurrSBIndex..0, 808
  %535 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset921.sum"
  %536 = bitcast i8* %535 to double*
  %"&pSB[currWI].offset917.sum" = add i64 %CurrSBIndex..0, 816
  %537 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset917.sum"
  %538 = bitcast i8* %537 to double*
  %"&pSB[currWI].offset913.sum" = add i64 %CurrSBIndex..0, 824
  %539 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset913.sum"
  %540 = bitcast i8* %539 to double*
  %"&pSB[currWI].offset909.sum" = add i64 %CurrSBIndex..0, 832
  %541 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset909.sum"
  %542 = bitcast i8* %541 to double*
  %"&pSB[currWI].offset905.sum" = add i64 %CurrSBIndex..0, 840
  %543 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset905.sum"
  %544 = bitcast i8* %543 to double*
  %"&pSB[currWI].offset901.sum" = add i64 %CurrSBIndex..0, 848
  %545 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset901.sum"
  %546 = bitcast i8* %545 to double*
  %"&pSB[currWI].offset897.sum" = add i64 %CurrSBIndex..0, 856
  %547 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset897.sum"
  %548 = bitcast i8* %547 to double*
  %"&pSB[currWI].offset893.sum" = add i64 %CurrSBIndex..0, 864
  %549 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset893.sum"
  %550 = bitcast i8* %549 to double*
  %"&pSB[currWI].offset889.sum" = add i64 %CurrSBIndex..0, 872
  %551 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset889.sum"
  %552 = bitcast i8* %551 to double*
  %"&pSB[currWI].offset885.sum" = add i64 %CurrSBIndex..0, 880
  %553 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset885.sum"
  %554 = bitcast i8* %553 to double*
  %"&pSB[currWI].offset881.sum" = add i64 %CurrSBIndex..0, 888
  %555 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset881.sum"
  %556 = bitcast i8* %555 to double*
  %"&pSB[currWI].offset877.sum" = add i64 %CurrSBIndex..0, 896
  %557 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset877.sum"
  %558 = bitcast i8* %557 to double*
  %"&pSB[currWI].offset873.sum" = add i64 %CurrSBIndex..0, 904
  %559 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset873.sum"
  %560 = bitcast i8* %559 to double*
  %"&pSB[currWI].offset869.sum" = add i64 %CurrSBIndex..0, 912
  %561 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset869.sum"
  %562 = bitcast i8* %561 to double*
  %"&pSB[currWI].offset865.sum" = add i64 %CurrSBIndex..0, 920
  %563 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset865.sum"
  %564 = bitcast i8* %563 to double*
  %"&pSB[currWI].offset937.sum" = add i64 %CurrSBIndex..0, 936
  %565 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset937.sum"
  %566 = bitcast i8* %565 to double*
  %"&pSB[currWI].offset933.sum" = add i64 %CurrSBIndex..0, 944
  %567 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset933.sum"
  %568 = bitcast i8* %567 to double*
  %"&pSB[currWI].offset929.sum" = add i64 %CurrSBIndex..0, 952
  %569 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset929.sum"
  %570 = bitcast i8* %569 to double*
  %tmp50 = shl i64 %520, 4
  %tmp51 = trunc i64 %tmp50 to i32
  %tmp52 = add i32 %517, %tmp51
  %tmp53 = mul i32 %tmp52, %ldb
  %tmp55 = add i32 %tmp53, %514
  %tmp56 = sext i32 %tmp55 to i64
  %"&(pSB[currWI].offset)201" = add nuw i64 %CurrSBIndex..0, 472
  %"&pSB[currWI].offset202" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)201"
  %CastToValueType203 = bitcast i8* %"&pSB[currWI].offset202" to i64*
  store i64 %tmp56, i64* %CastToValueType203, align 8
  %tmp61 = add i64 %tmp60, %tmp56
  %"&(pSB[currWI].offset)210" = add nuw i64 %CurrSBIndex..0, 480
  %"&pSB[currWI].offset211" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)210"
  %CastToValueType212 = bitcast i8* %"&pSB[currWI].offset211" to i64*
  store i64 %tmp61, i64* %CastToValueType212, align 8
  %tmp66 = add i64 %tmp65, %tmp56
  %"&(pSB[currWI].offset)219" = add nuw i64 %CurrSBIndex..0, 488
  %"&pSB[currWI].offset220" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)219"
  %CastToValueType221 = bitcast i8* %"&pSB[currWI].offset220" to i64*
  store i64 %tmp66, i64* %CastToValueType221, align 8
  %tmp71 = add i64 %tmp70, %tmp56
  %"&(pSB[currWI].offset)228" = add nuw i64 %CurrSBIndex..0, 496
  %"&pSB[currWI].offset229" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)228"
  %CastToValueType230 = bitcast i8* %"&pSB[currWI].offset229" to i64*
  store i64 %tmp71, i64* %CastToValueType230, align 8
  %tmp78 = shl i32 %517, 4
  %"&(pSB[currWI].offset)237" = add nuw i64 %CurrSBIndex..0, 504
  %"&pSB[currWI].offset238" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)237"
  %CastToValueType239 = bitcast i8* %"&pSB[currWI].offset238" to i32*
  store i32 %tmp78, i32* %CastToValueType239, align 4
  %tmp79 = add i32 %tmp78, %514
  %tmp80 = shl i64 %518, 6
  %tmp81 = trunc i64 %tmp80 to i32
  %tmp82 = add i32 %tmp79, %tmp81
  %tmp83 = sext i32 %tmp82 to i64
  %"&(pSB[currWI].offset)246" = add nuw i64 %CurrSBIndex..0, 512
  %"&pSB[currWI].offset247" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)246"
  %CastToValueType248 = bitcast i8* %"&pSB[currWI].offset247" to i64*
  store i64 %tmp83, i64* %CastToValueType248, align 8
  %tmp88 = add i64 %tmp83, %tmp87
  %"&(pSB[currWI].offset)255" = add nuw i64 %CurrSBIndex..0, 520
  %"&pSB[currWI].offset256" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)255"
  %CastToValueType257 = bitcast i8* %"&pSB[currWI].offset256" to i64*
  store i64 %tmp88, i64* %CastToValueType257, align 8
  %tmp94 = add i64 %tmp83, %tmp93
  %"&(pSB[currWI].offset)264" = add nuw i64 %CurrSBIndex..0, 528
  %"&pSB[currWI].offset265" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)264"
  %CastToValueType266 = bitcast i8* %"&pSB[currWI].offset265" to i64*
  store i64 %tmp94, i64* %CastToValueType266, align 8
  %tmp98 = add i64 %tmp97, %tmp83
  %"&(pSB[currWI].offset)273" = add nuw i64 %CurrSBIndex..0, 536
  %"&pSB[currWI].offset274" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)273"
  %CastToValueType275 = bitcast i8* %"&pSB[currWI].offset274" to i64*
  store i64 %tmp98, i64* %CastToValueType275, align 8
  %tmp105 = add i64 %tmp104, %tmp83
  %"&(pSB[currWI].offset)282" = add nuw i64 %CurrSBIndex..0, 544
  %"&pSB[currWI].offset283" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)282"
  %CastToValueType284 = bitcast i8* %"&pSB[currWI].offset283" to i64*
  store i64 %tmp105, i64* %CastToValueType284, align 8
  %tmp111 = add i64 %tmp110, %tmp83
  %"&(pSB[currWI].offset)291" = add nuw i64 %CurrSBIndex..0, 552
  %"&pSB[currWI].offset292" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)291"
  %CastToValueType293 = bitcast i8* %"&pSB[currWI].offset292" to i64*
  store i64 %tmp111, i64* %CastToValueType293, align 8
  %tmp115 = add i64 %tmp114, %tmp83
  %"&(pSB[currWI].offset)300" = add nuw i64 %CurrSBIndex..0, 560
  %"&pSB[currWI].offset301" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)300"
  %CastToValueType302 = bitcast i8* %"&pSB[currWI].offset301" to i64*
  store i64 %tmp115, i64* %CastToValueType302, align 8
  %tmp118 = add i64 %tmp101, %tmp83
  %"&(pSB[currWI].offset)309" = add nuw i64 %CurrSBIndex..0, 568
  %"&pSB[currWI].offset310" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)309"
  %CastToValueType311 = bitcast i8* %"&pSB[currWI].offset310" to i64*
  store i64 %tmp118, i64* %CastToValueType311, align 8
  %tmp123 = add i64 %tmp122, %tmp83
  %"&(pSB[currWI].offset)318" = add nuw i64 %CurrSBIndex..0, 576
  %"&pSB[currWI].offset319" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)318"
  %CastToValueType320 = bitcast i8* %"&pSB[currWI].offset319" to i64*
  store i64 %tmp123, i64* %CastToValueType320, align 8
  %tmp127 = add i64 %tmp126, %tmp83
  %"&(pSB[currWI].offset)327" = add nuw i64 %CurrSBIndex..0, 584
  %"&pSB[currWI].offset328" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)327"
  %CastToValueType329 = bitcast i8* %"&pSB[currWI].offset328" to i64*
  store i64 %tmp127, i64* %CastToValueType329, align 8
  %tmp131 = add i64 %tmp130, %tmp83
  %"&(pSB[currWI].offset)336" = add nuw i64 %CurrSBIndex..0, 592
  %"&pSB[currWI].offset337" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)336"
  %CastToValueType338 = bitcast i8* %"&pSB[currWI].offset337" to i64*
  store i64 %tmp131, i64* %CastToValueType338, align 8
  %tmp134 = add i64 %tmp121, %tmp83
  %"&(pSB[currWI].offset)345" = add nuw i64 %CurrSBIndex..0, 600
  %"&pSB[currWI].offset346" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)345"
  %CastToValueType347 = bitcast i8* %"&pSB[currWI].offset346" to i64*
  store i64 %tmp134, i64* %CastToValueType347, align 8
  %tmp138 = add i64 %tmp137, %tmp83
  %"&(pSB[currWI].offset)354" = add nuw i64 %CurrSBIndex..0, 608
  %"&pSB[currWI].offset355" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)354"
  %CastToValueType356 = bitcast i8* %"&pSB[currWI].offset355" to i64*
  store i64 %tmp138, i64* %CastToValueType356, align 8
  %tmp142 = add i64 %tmp141, %tmp83
  %"&(pSB[currWI].offset)363" = add nuw i64 %CurrSBIndex..0, 616
  %"&pSB[currWI].offset364" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)363"
  %CastToValueType365 = bitcast i8* %"&pSB[currWI].offset364" to i64*
  store i64 %tmp142, i64* %CastToValueType365, align 8
  %tmp146 = add i64 %tmp145, %tmp83
  %"&(pSB[currWI].offset)372" = add nuw i64 %CurrSBIndex..0, 624
  %"&pSB[currWI].offset373" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)372"
  %CastToValueType374 = bitcast i8* %"&pSB[currWI].offset373" to i64*
  store i64 %tmp146, i64* %CastToValueType374, align 8
  %tmp149 = add i64 %tmp75, %tmp83
  %"&(pSB[currWI].offset)381" = add nuw i64 %CurrSBIndex..0, 632
  %"&pSB[currWI].offset382" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)381"
  %CastToValueType383 = bitcast i8* %"&pSB[currWI].offset382" to i64*
  store i64 %tmp149, i64* %CastToValueType383, align 8
  %tmp25 = mul i32 %tmp51, %ldc
  br label %.loopexit

.loopexit:                                        ; preds = %SyncBB987, %SyncBB
  %currBarrier.1 = phi i32 [ %currBarrier.2, %SyncBB ], [ %currBarrier.0.ph, %SyncBB987 ]
  %CurrSBIndex..2 = phi i64 [ %CurrSBIndex..0, %SyncBB ], [ %CurrSBIndex..1, %SyncBB987 ]
  %CurrWI..2 = phi i64 [ %CurrWI..0, %SyncBB ], [ %CurrWI..1, %SyncBB987 ]
  %indvar44 = phi i64 [ 0, %SyncBB ], [ %indvar.next45, %SyncBB987 ]
  %"&(pSB[currWI].offset)390" = add nuw i64 %CurrSBIndex..2, 640
  %"&pSB[currWI].offset391" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)390"
  %CastToValueType392 = bitcast i8* %"&pSB[currWI].offset391" to i64*
  store i64 %indvar44, i64* %CastToValueType392, align 8
  %tmp46 = shl i64 %indvar44, 4
  %tmp47 = add i64 %tmp46, 16
  %tmp48 = trunc i64 %tmp47 to i32
  %"&(pSB[currWI].offset)399" = add nuw i64 %CurrSBIndex..2, 648
  %"&pSB[currWI].offset400" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)399"
  %CastToValueType401 = bitcast i8* %"&pSB[currWI].offset400" to i32*
  store i32 %tmp48, i32* %CastToValueType401, align 4
  %"&(pSB[currWI].offset)205" = add nuw i64 %CurrSBIndex..2, 472
  %"&pSB[currWI].offset206" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)205"
  %CastToValueType207 = bitcast i8* %"&pSB[currWI].offset206" to i64*
  %loadedValue208 = load i64* %CastToValueType207, align 8
  %tmp57 = add i64 %loadedValue208, %tmp46
  %.01 = getelementptr double addrspace(1)* %B, i64 %tmp57
  %"&(pSB[currWI].offset)214" = add nuw i64 %CurrSBIndex..2, 480
  %"&pSB[currWI].offset215" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)214"
  %CastToValueType216 = bitcast i8* %"&pSB[currWI].offset215" to i64*
  %loadedValue217 = load i64* %CastToValueType216, align 8
  %tmp62 = add i64 %loadedValue217, %tmp46
  %scevgep63 = getelementptr double addrspace(1)* %B, i64 %tmp62
  %"&(pSB[currWI].offset)223" = add nuw i64 %CurrSBIndex..2, 488
  %"&pSB[currWI].offset224" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)223"
  %CastToValueType225 = bitcast i8* %"&pSB[currWI].offset224" to i64*
  %loadedValue226 = load i64* %CastToValueType225, align 8
  %tmp67 = add i64 %loadedValue226, %tmp46
  %scevgep68 = getelementptr double addrspace(1)* %B, i64 %tmp67
  %"&(pSB[currWI].offset)232" = add nuw i64 %CurrSBIndex..2, 496
  %"&pSB[currWI].offset233" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)232"
  %CastToValueType234 = bitcast i8* %"&pSB[currWI].offset233" to i64*
  %loadedValue235 = load i64* %CastToValueType234, align 8
  %tmp72 = add i64 %loadedValue235, %tmp46
  %scevgep73 = getelementptr double addrspace(1)* %B, i64 %tmp72
  %tmp77 = mul i64 %tmp76, %indvar44
  %"&(pSB[currWI].offset)286" = add nuw i64 %CurrSBIndex..2, 544
  %"&pSB[currWI].offset287" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)286"
  %CastToValueType288 = bitcast i8* %"&pSB[currWI].offset287" to i64*
  %loadedValue289 = load i64* %CastToValueType288, align 8
  %tmp106 = add i64 %loadedValue289, %tmp77
  %scevgep107 = getelementptr double addrspace(1)* %A, i64 %tmp106
  %"&(pSB[currWI].offset)408" = add nuw i64 %CurrSBIndex..2, 656
  %"&pSB[currWI].offset409" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)408"
  %CastToValueType410 = bitcast i8* %"&pSB[currWI].offset409" to double addrspace(1)**
  store double addrspace(1)* %scevgep107, double addrspace(1)** %CastToValueType410, align 8
  %"&(pSB[currWI].offset)295" = add nuw i64 %CurrSBIndex..2, 552
  %"&pSB[currWI].offset296" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)295"
  %CastToValueType297 = bitcast i8* %"&pSB[currWI].offset296" to i64*
  %loadedValue298 = load i64* %CastToValueType297, align 8
  %tmp112 = add i64 %loadedValue298, %tmp77
  %scevgep113 = getelementptr double addrspace(1)* %A, i64 %tmp112
  %"&(pSB[currWI].offset)417" = add nuw i64 %CurrSBIndex..2, 664
  %"&pSB[currWI].offset418" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)417"
  %CastToValueType419 = bitcast i8* %"&pSB[currWI].offset418" to double addrspace(1)**
  store double addrspace(1)* %scevgep113, double addrspace(1)** %CastToValueType419, align 8
  %"&(pSB[currWI].offset)304" = add nuw i64 %CurrSBIndex..2, 560
  %"&pSB[currWI].offset305" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)304"
  %CastToValueType306 = bitcast i8* %"&pSB[currWI].offset305" to i64*
  %loadedValue307 = load i64* %CastToValueType306, align 8
  %tmp116 = add i64 %loadedValue307, %tmp77
  %scevgep117 = getelementptr double addrspace(1)* %A, i64 %tmp116
  %"&(pSB[currWI].offset)426" = add nuw i64 %CurrSBIndex..2, 672
  %"&pSB[currWI].offset427" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)426"
  %CastToValueType428 = bitcast i8* %"&pSB[currWI].offset427" to double addrspace(1)**
  store double addrspace(1)* %scevgep117, double addrspace(1)** %CastToValueType428, align 8
  %"&(pSB[currWI].offset)313" = add nuw i64 %CurrSBIndex..2, 568
  %"&pSB[currWI].offset314" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)313"
  %CastToValueType315 = bitcast i8* %"&pSB[currWI].offset314" to i64*
  %loadedValue316 = load i64* %CastToValueType315, align 8
  %tmp119 = add i64 %loadedValue316, %tmp77
  %scevgep120 = getelementptr double addrspace(1)* %A, i64 %tmp119
  %"&(pSB[currWI].offset)435" = add nuw i64 %CurrSBIndex..2, 680
  %"&pSB[currWI].offset436" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)435"
  %CastToValueType437 = bitcast i8* %"&pSB[currWI].offset436" to double addrspace(1)**
  store double addrspace(1)* %scevgep120, double addrspace(1)** %CastToValueType437, align 8
  %"&(pSB[currWI].offset)322" = add nuw i64 %CurrSBIndex..2, 576
  %"&pSB[currWI].offset323" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)322"
  %CastToValueType324 = bitcast i8* %"&pSB[currWI].offset323" to i64*
  %loadedValue325 = load i64* %CastToValueType324, align 8
  %tmp124 = add i64 %loadedValue325, %tmp77
  %scevgep125 = getelementptr double addrspace(1)* %A, i64 %tmp124
  %"&(pSB[currWI].offset)444" = add nuw i64 %CurrSBIndex..2, 688
  %"&pSB[currWI].offset445" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)444"
  %CastToValueType446 = bitcast i8* %"&pSB[currWI].offset445" to double addrspace(1)**
  store double addrspace(1)* %scevgep125, double addrspace(1)** %CastToValueType446, align 8
  %"&(pSB[currWI].offset)331" = add nuw i64 %CurrSBIndex..2, 584
  %"&pSB[currWI].offset332" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)331"
  %CastToValueType333 = bitcast i8* %"&pSB[currWI].offset332" to i64*
  %loadedValue334 = load i64* %CastToValueType333, align 8
  %tmp128 = add i64 %loadedValue334, %tmp77
  %scevgep129 = getelementptr double addrspace(1)* %A, i64 %tmp128
  %"&(pSB[currWI].offset)453" = add nuw i64 %CurrSBIndex..2, 696
  %"&pSB[currWI].offset454" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)453"
  %CastToValueType455 = bitcast i8* %"&pSB[currWI].offset454" to double addrspace(1)**
  store double addrspace(1)* %scevgep129, double addrspace(1)** %CastToValueType455, align 8
  %"&(pSB[currWI].offset)340" = add nuw i64 %CurrSBIndex..2, 592
  %"&pSB[currWI].offset341" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)340"
  %CastToValueType342 = bitcast i8* %"&pSB[currWI].offset341" to i64*
  %loadedValue343 = load i64* %CastToValueType342, align 8
  %tmp132 = add i64 %loadedValue343, %tmp77
  %scevgep133 = getelementptr double addrspace(1)* %A, i64 %tmp132
  %"&(pSB[currWI].offset)462" = add nuw i64 %CurrSBIndex..2, 704
  %"&pSB[currWI].offset463" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)462"
  %CastToValueType464 = bitcast i8* %"&pSB[currWI].offset463" to double addrspace(1)**
  store double addrspace(1)* %scevgep133, double addrspace(1)** %CastToValueType464, align 8
  %"&(pSB[currWI].offset)349" = add nuw i64 %CurrSBIndex..2, 600
  %"&pSB[currWI].offset350" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)349"
  %CastToValueType351 = bitcast i8* %"&pSB[currWI].offset350" to i64*
  %loadedValue352 = load i64* %CastToValueType351, align 8
  %tmp135 = add i64 %loadedValue352, %tmp77
  %scevgep136 = getelementptr double addrspace(1)* %A, i64 %tmp135
  %"&(pSB[currWI].offset)471" = add nuw i64 %CurrSBIndex..2, 712
  %"&pSB[currWI].offset472" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)471"
  %CastToValueType473 = bitcast i8* %"&pSB[currWI].offset472" to double addrspace(1)**
  store double addrspace(1)* %scevgep136, double addrspace(1)** %CastToValueType473, align 8
  %"&(pSB[currWI].offset)358" = add nuw i64 %CurrSBIndex..2, 608
  %"&pSB[currWI].offset359" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)358"
  %CastToValueType360 = bitcast i8* %"&pSB[currWI].offset359" to i64*
  %loadedValue361 = load i64* %CastToValueType360, align 8
  %tmp139 = add i64 %loadedValue361, %tmp77
  %scevgep140 = getelementptr double addrspace(1)* %A, i64 %tmp139
  %"&(pSB[currWI].offset)480" = add nuw i64 %CurrSBIndex..2, 720
  %"&pSB[currWI].offset481" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)480"
  %CastToValueType482 = bitcast i8* %"&pSB[currWI].offset481" to double addrspace(1)**
  store double addrspace(1)* %scevgep140, double addrspace(1)** %CastToValueType482, align 8
  %"&(pSB[currWI].offset)367" = add nuw i64 %CurrSBIndex..2, 616
  %"&pSB[currWI].offset368" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)367"
  %CastToValueType369 = bitcast i8* %"&pSB[currWI].offset368" to i64*
  %loadedValue370 = load i64* %CastToValueType369, align 8
  %tmp143 = add i64 %loadedValue370, %tmp77
  %scevgep144 = getelementptr double addrspace(1)* %A, i64 %tmp143
  %"&(pSB[currWI].offset)489" = add nuw i64 %CurrSBIndex..2, 728
  %"&pSB[currWI].offset490" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)489"
  %CastToValueType491 = bitcast i8* %"&pSB[currWI].offset490" to double addrspace(1)**
  store double addrspace(1)* %scevgep144, double addrspace(1)** %CastToValueType491, align 8
  %"&(pSB[currWI].offset)376" = add nuw i64 %CurrSBIndex..2, 624
  %"&pSB[currWI].offset377" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)376"
  %CastToValueType378 = bitcast i8* %"&pSB[currWI].offset377" to i64*
  %loadedValue379 = load i64* %CastToValueType378, align 8
  %tmp147 = add i64 %loadedValue379, %tmp77
  %scevgep148 = getelementptr double addrspace(1)* %A, i64 %tmp147
  %"&(pSB[currWI].offset)498" = add nuw i64 %CurrSBIndex..2, 736
  %"&pSB[currWI].offset499" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)498"
  %CastToValueType500 = bitcast i8* %"&pSB[currWI].offset499" to double addrspace(1)**
  store double addrspace(1)* %scevgep148, double addrspace(1)** %CastToValueType500, align 8
  %"&(pSB[currWI].offset)385" = add nuw i64 %CurrSBIndex..2, 632
  %"&pSB[currWI].offset386" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)385"
  %CastToValueType387 = bitcast i8* %"&pSB[currWI].offset386" to i64*
  %loadedValue388 = load i64* %CastToValueType387, align 8
  %tmp150 = add i64 %loadedValue388, %tmp77
  %scevgep151 = getelementptr double addrspace(1)* %A, i64 %tmp150
  %"&(pSB[currWI].offset)507" = add nuw i64 %CurrSBIndex..2, 744
  %"&pSB[currWI].offset508" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)507"
  %CastToValueType509 = bitcast i8* %"&pSB[currWI].offset508" to double addrspace(1)**
  store double addrspace(1)* %scevgep151, double addrspace(1)** %CastToValueType509, align 8
  %"&(pSB[currWI].offset)250" = add nuw i64 %CurrSBIndex..2, 512
  %"&pSB[currWI].offset251" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)250"
  %CastToValueType252 = bitcast i8* %"&pSB[currWI].offset251" to i64*
  %loadedValue253 = load i64* %CastToValueType252, align 8
  %tmp152 = add i64 %loadedValue253, %tmp77
  %"&(pSB[currWI].offset)277" = add nuw i64 %CurrSBIndex..2, 536
  %"&pSB[currWI].offset278" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)277"
  %CastToValueType279 = bitcast i8* %"&pSB[currWI].offset278" to i64*
  %loadedValue280 = load i64* %CastToValueType279, align 8
  %tmp99 = add i64 %loadedValue280, %tmp77
  %"&(pSB[currWI].offset)268" = add nuw i64 %CurrSBIndex..2, 528
  %"&pSB[currWI].offset269" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)268"
  %CastToValueType270 = bitcast i8* %"&pSB[currWI].offset269" to i64*
  %loadedValue271 = load i64* %CastToValueType270, align 8
  %tmp95 = add i64 %loadedValue271, %tmp77
  %"&(pSB[currWI].offset)259" = add nuw i64 %CurrSBIndex..2, 520
  %"&pSB[currWI].offset260" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)259"
  %CastToValueType261 = bitcast i8* %"&pSB[currWI].offset260" to i64*
  %loadedValue262 = load i64* %CastToValueType261, align 8
  %tmp89 = add i64 %loadedValue262, %tmp77
  %scevgep153 = getelementptr double addrspace(1)* %A, i64 %tmp152
  %scevgep100 = getelementptr double addrspace(1)* %A, i64 %tmp99
  %scevgep96 = getelementptr double addrspace(1)* %A, i64 %tmp95
  %scevgep90 = getelementptr double addrspace(1)* %A, i64 %tmp89
  %571 = load double addrspace(1)* %scevgep153, align 8
  %"&(pSB[currWI].offset)516" = add nuw i64 %CurrSBIndex..2, 752
  %"&pSB[currWI].offset517" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)516"
  %CastToValueType518 = bitcast i8* %"&pSB[currWI].offset517" to double*
  store double %571, double* %CastToValueType518, align 8
  %572 = load double addrspace(1)* %scevgep100, align 8
  %"&(pSB[currWI].offset)600" = add nuw i64 %CurrSBIndex..2, 760
  %"&pSB[currWI].offset601" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)600"
  %CastToValueType602 = bitcast i8* %"&pSB[currWI].offset601" to double*
  store double %572, double* %CastToValueType602, align 8
  %573 = load double addrspace(1)* %scevgep96, align 8
  %"&(pSB[currWI].offset)684" = add nuw i64 %CurrSBIndex..2, 768
  %"&pSB[currWI].offset685" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)684"
  %CastToValueType686 = bitcast i8* %"&pSB[currWI].offset685" to double*
  store double %573, double* %CastToValueType686, align 8
  %574 = load double addrspace(1)* %scevgep90, align 8
  %"&(pSB[currWI].offset)768" = add nuw i64 %CurrSBIndex..2, 776
  %"&pSB[currWI].offset769" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)768"
  %CastToValueType770 = bitcast i8* %"&pSB[currWI].offset769" to double*
  store double %574, double* %CastToValueType770, align 8
  %575 = load double addrspace(1)* %.01, align 8
  %"&(pSB[currWI].offset)169" = add nuw i64 %CurrSBIndex..2, 440
  %"&pSB[currWI].offset170" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)169"
  %CastToValueType171 = bitcast i8* %"&pSB[currWI].offset170" to double addrspace(3)**
  %loadedValue172 = load double addrspace(3)** %CastToValueType171, align 8
  store double %575, double addrspace(3)* %loadedValue172, align 8
  %576 = load double addrspace(1)* %scevgep73, align 8
  %"&(pSB[currWI].offset)178" = add nuw i64 %CurrSBIndex..2, 448
  %"&pSB[currWI].offset179" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)178"
  %CastToValueType180 = bitcast i8* %"&pSB[currWI].offset179" to double addrspace(3)**
  %loadedValue181 = load double addrspace(3)** %CastToValueType180, align 8
  store double %576, double addrspace(3)* %loadedValue181, align 8
  %577 = load double addrspace(1)* %scevgep68, align 8
  %"&(pSB[currWI].offset)187" = add nuw i64 %CurrSBIndex..2, 456
  %"&pSB[currWI].offset188" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)187"
  %CastToValueType189 = bitcast i8* %"&pSB[currWI].offset188" to double addrspace(3)**
  %loadedValue190 = load double addrspace(3)** %CastToValueType189, align 8
  store double %577, double addrspace(3)* %loadedValue190, align 8
  %578 = load double addrspace(1)* %scevgep63, align 8
  %"&(pSB[currWI].offset)196" = add nuw i64 %CurrSBIndex..2, 464
  %"&pSB[currWI].offset197" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)196"
  %CastToValueType198 = bitcast i8* %"&pSB[currWI].offset197" to double addrspace(3)**
  %loadedValue199 = load double addrspace(3)** %CastToValueType198, align 8
  store double %578, double addrspace(3)* %loadedValue199, align 8
  %check.WI.iter = icmp ult i64 %CurrWI..2, %iterCount
  br i1 %check.WI.iter, label %thenBB, label %SyncBB985

thenBB:                                           ; preds = %.loopexit
  %"CurrWI++" = add nuw i64 %CurrWI..2, 1
  %"loadedCurrSB+Stride" = add nuw i64 %CurrSBIndex..2, 12032
  %cond = icmp eq i32 %currBarrier.1, 13
  br i1 %cond, label %SyncBB987.preheader, label %SyncBB

SyncBB985:                                        ; preds = %.loopexit, %thenBB996
  %CurrSBIndex..3 = phi i64 [ %"loadedCurrSB+Stride1002", %thenBB996 ], [ 0, %.loopexit ]
  %CurrWI..3 = phi i64 [ %"CurrWI++1000", %thenBB996 ], [ 0, %.loopexit ]
  %579 = load double addrspace(3)* %1, align 16
  %"&(pSB[currWI].offset)520" = add nuw i64 %CurrSBIndex..3, 752
  %"&pSB[currWI].offset521" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)520"
  %CastToValueType522 = bitcast i8* %"&pSB[currWI].offset521" to double*
  %loadedValue523 = load double* %CastToValueType522, align 8
  %580 = fmul double %loadedValue523, %579
  %581 = load double* %534, align 16
  %582 = fadd double %581, %580
  %583 = load double addrspace(3)* %3, align 8
  %"&(pSB[currWI].offset)525" = add nuw i64 %CurrSBIndex..3, 752
  %"&pSB[currWI].offset526" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)525"
  %CastToValueType527 = bitcast i8* %"&pSB[currWI].offset526" to double*
  %loadedValue528 = load double* %CastToValueType527, align 8
  %584 = fmul double %loadedValue528, %583
  %585 = load double* %536, align 8
  %586 = fadd double %585, %584
  %587 = load double addrspace(3)* %5, align 16
  %"&(pSB[currWI].offset)530" = add nuw i64 %CurrSBIndex..3, 752
  %"&pSB[currWI].offset531" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)530"
  %CastToValueType532 = bitcast i8* %"&pSB[currWI].offset531" to double*
  %loadedValue533 = load double* %CastToValueType532, align 8
  %588 = fmul double %loadedValue533, %587
  %589 = load double* %538, align 16
  %590 = fadd double %589, %588
  %591 = load double addrspace(3)* %7, align 8
  %"&(pSB[currWI].offset)535" = add nuw i64 %CurrSBIndex..3, 752
  %"&pSB[currWI].offset536" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)535"
  %CastToValueType537 = bitcast i8* %"&pSB[currWI].offset536" to double*
  %loadedValue538 = load double* %CastToValueType537, align 8
  %592 = fmul double %loadedValue538, %591
  %593 = load double* %540, align 8
  %594 = fadd double %593, %592
  %595 = load double addrspace(3)* %9, align 16
  %"&(pSB[currWI].offset)540" = add nuw i64 %CurrSBIndex..3, 752
  %"&pSB[currWI].offset541" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)540"
  %CastToValueType542 = bitcast i8* %"&pSB[currWI].offset541" to double*
  %loadedValue543 = load double* %CastToValueType542, align 8
  %596 = fmul double %loadedValue543, %595
  %597 = load double* %542, align 16
  %598 = fadd double %597, %596
  %599 = load double addrspace(3)* %11, align 8
  %"&(pSB[currWI].offset)545" = add nuw i64 %CurrSBIndex..3, 752
  %"&pSB[currWI].offset546" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)545"
  %CastToValueType547 = bitcast i8* %"&pSB[currWI].offset546" to double*
  %loadedValue548 = load double* %CastToValueType547, align 8
  %600 = fmul double %loadedValue548, %599
  %601 = load double* %544, align 8
  %602 = fadd double %601, %600
  %603 = load double addrspace(3)* %13, align 16
  %"&(pSB[currWI].offset)550" = add nuw i64 %CurrSBIndex..3, 752
  %"&pSB[currWI].offset551" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)550"
  %CastToValueType552 = bitcast i8* %"&pSB[currWI].offset551" to double*
  %loadedValue553 = load double* %CastToValueType552, align 8
  %604 = fmul double %loadedValue553, %603
  %605 = load double* %546, align 16
  %606 = fadd double %605, %604
  %607 = load double addrspace(3)* %15, align 8
  %"&(pSB[currWI].offset)555" = add nuw i64 %CurrSBIndex..3, 752
  %"&pSB[currWI].offset556" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)555"
  %CastToValueType557 = bitcast i8* %"&pSB[currWI].offset556" to double*
  %loadedValue558 = load double* %CastToValueType557, align 8
  %608 = fmul double %loadedValue558, %607
  %609 = load double* %548, align 8
  %610 = fadd double %609, %608
  %611 = load double addrspace(3)* %17, align 16
  %"&(pSB[currWI].offset)560" = add nuw i64 %CurrSBIndex..3, 752
  %"&pSB[currWI].offset561" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)560"
  %CastToValueType562 = bitcast i8* %"&pSB[currWI].offset561" to double*
  %loadedValue563 = load double* %CastToValueType562, align 8
  %612 = fmul double %loadedValue563, %611
  %613 = load double* %550, align 16
  %614 = fadd double %613, %612
  %615 = load double addrspace(3)* %19, align 8
  %"&(pSB[currWI].offset)565" = add nuw i64 %CurrSBIndex..3, 752
  %"&pSB[currWI].offset566" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)565"
  %CastToValueType567 = bitcast i8* %"&pSB[currWI].offset566" to double*
  %loadedValue568 = load double* %CastToValueType567, align 8
  %616 = fmul double %loadedValue568, %615
  %617 = load double* %552, align 8
  %618 = fadd double %617, %616
  %619 = load double addrspace(3)* %21, align 16
  %"&(pSB[currWI].offset)570" = add nuw i64 %CurrSBIndex..3, 752
  %"&pSB[currWI].offset571" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)570"
  %CastToValueType572 = bitcast i8* %"&pSB[currWI].offset571" to double*
  %loadedValue573 = load double* %CastToValueType572, align 8
  %620 = fmul double %loadedValue573, %619
  %621 = load double* %554, align 16
  %622 = fadd double %621, %620
  %623 = load double addrspace(3)* %23, align 8
  %"&(pSB[currWI].offset)575" = add nuw i64 %CurrSBIndex..3, 752
  %"&pSB[currWI].offset576" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)575"
  %CastToValueType577 = bitcast i8* %"&pSB[currWI].offset576" to double*
  %loadedValue578 = load double* %CastToValueType577, align 8
  %624 = fmul double %loadedValue578, %623
  %625 = load double* %556, align 8
  %626 = fadd double %625, %624
  %627 = load double addrspace(3)* %25, align 16
  %"&(pSB[currWI].offset)580" = add nuw i64 %CurrSBIndex..3, 752
  %"&pSB[currWI].offset581" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)580"
  %CastToValueType582 = bitcast i8* %"&pSB[currWI].offset581" to double*
  %loadedValue583 = load double* %CastToValueType582, align 8
  %628 = fmul double %loadedValue583, %627
  %629 = load double* %558, align 16
  %630 = fadd double %629, %628
  %631 = load double addrspace(3)* %27, align 8
  %"&(pSB[currWI].offset)585" = add nuw i64 %CurrSBIndex..3, 752
  %"&pSB[currWI].offset586" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)585"
  %CastToValueType587 = bitcast i8* %"&pSB[currWI].offset586" to double*
  %loadedValue588 = load double* %CastToValueType587, align 8
  %632 = fmul double %loadedValue588, %631
  %633 = load double* %560, align 8
  %634 = fadd double %633, %632
  %635 = load double addrspace(3)* %29, align 16
  %"&(pSB[currWI].offset)590" = add nuw i64 %CurrSBIndex..3, 752
  %"&pSB[currWI].offset591" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)590"
  %CastToValueType592 = bitcast i8* %"&pSB[currWI].offset591" to double*
  %loadedValue593 = load double* %CastToValueType592, align 8
  %636 = fmul double %loadedValue593, %635
  %637 = load double* %562, align 16
  %638 = fadd double %637, %636
  %639 = load double addrspace(3)* %31, align 8
  %"&(pSB[currWI].offset)595" = add nuw i64 %CurrSBIndex..3, 752
  %"&pSB[currWI].offset596" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)595"
  %CastToValueType597 = bitcast i8* %"&pSB[currWI].offset596" to double*
  %loadedValue598 = load double* %CastToValueType597, align 8
  %640 = fmul double %loadedValue598, %639
  %641 = load double* %564, align 8
  %642 = fadd double %641, %640
  %"&(pSB[currWI].offset)511" = add nuw i64 %CurrSBIndex..3, 744
  %"&pSB[currWI].offset512" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)511"
  %CastToValueType513 = bitcast i8* %"&pSB[currWI].offset512" to double addrspace(1)**
  %loadedValue514 = load double addrspace(1)** %CastToValueType513, align 8
  %643 = load double addrspace(1)* %loadedValue514, align 8
  %644 = load double addrspace(3)* %33, align 8
  %"&(pSB[currWI].offset)604" = add nuw i64 %CurrSBIndex..3, 760
  %"&pSB[currWI].offset605" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)604"
  %CastToValueType606 = bitcast i8* %"&pSB[currWI].offset605" to double*
  %loadedValue607 = load double* %CastToValueType606, align 8
  %645 = fmul double %loadedValue607, %644
  %646 = fadd double %582, %645
  %647 = load double addrspace(3)* %35, align 8
  %"&(pSB[currWI].offset)609" = add nuw i64 %CurrSBIndex..3, 760
  %"&pSB[currWI].offset610" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)609"
  %CastToValueType611 = bitcast i8* %"&pSB[currWI].offset610" to double*
  %loadedValue612 = load double* %CastToValueType611, align 8
  %648 = fmul double %loadedValue612, %647
  %649 = fadd double %586, %648
  %650 = load double addrspace(3)* %37, align 8
  %"&(pSB[currWI].offset)614" = add nuw i64 %CurrSBIndex..3, 760
  %"&pSB[currWI].offset615" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)614"
  %CastToValueType616 = bitcast i8* %"&pSB[currWI].offset615" to double*
  %loadedValue617 = load double* %CastToValueType616, align 8
  %651 = fmul double %loadedValue617, %650
  %652 = fadd double %590, %651
  %653 = load double addrspace(3)* %39, align 8
  %"&(pSB[currWI].offset)619" = add nuw i64 %CurrSBIndex..3, 760
  %"&pSB[currWI].offset620" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)619"
  %CastToValueType621 = bitcast i8* %"&pSB[currWI].offset620" to double*
  %loadedValue622 = load double* %CastToValueType621, align 8
  %654 = fmul double %loadedValue622, %653
  %655 = fadd double %594, %654
  %656 = load double addrspace(3)* %41, align 8
  %"&(pSB[currWI].offset)624" = add nuw i64 %CurrSBIndex..3, 760
  %"&pSB[currWI].offset625" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)624"
  %CastToValueType626 = bitcast i8* %"&pSB[currWI].offset625" to double*
  %loadedValue627 = load double* %CastToValueType626, align 8
  %657 = fmul double %loadedValue627, %656
  %658 = fadd double %598, %657
  %659 = load double addrspace(3)* %43, align 8
  %"&(pSB[currWI].offset)629" = add nuw i64 %CurrSBIndex..3, 760
  %"&pSB[currWI].offset630" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)629"
  %CastToValueType631 = bitcast i8* %"&pSB[currWI].offset630" to double*
  %loadedValue632 = load double* %CastToValueType631, align 8
  %660 = fmul double %loadedValue632, %659
  %661 = fadd double %602, %660
  %662 = load double addrspace(3)* %45, align 8
  %"&(pSB[currWI].offset)634" = add nuw i64 %CurrSBIndex..3, 760
  %"&pSB[currWI].offset635" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)634"
  %CastToValueType636 = bitcast i8* %"&pSB[currWI].offset635" to double*
  %loadedValue637 = load double* %CastToValueType636, align 8
  %663 = fmul double %loadedValue637, %662
  %664 = fadd double %606, %663
  %665 = load double addrspace(3)* %47, align 8
  %"&(pSB[currWI].offset)639" = add nuw i64 %CurrSBIndex..3, 760
  %"&pSB[currWI].offset640" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)639"
  %CastToValueType641 = bitcast i8* %"&pSB[currWI].offset640" to double*
  %loadedValue642 = load double* %CastToValueType641, align 8
  %666 = fmul double %loadedValue642, %665
  %667 = fadd double %610, %666
  %668 = load double addrspace(3)* %49, align 8
  %"&(pSB[currWI].offset)644" = add nuw i64 %CurrSBIndex..3, 760
  %"&pSB[currWI].offset645" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)644"
  %CastToValueType646 = bitcast i8* %"&pSB[currWI].offset645" to double*
  %loadedValue647 = load double* %CastToValueType646, align 8
  %669 = fmul double %loadedValue647, %668
  %670 = fadd double %614, %669
  %671 = load double addrspace(3)* %51, align 8
  %"&(pSB[currWI].offset)649" = add nuw i64 %CurrSBIndex..3, 760
  %"&pSB[currWI].offset650" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)649"
  %CastToValueType651 = bitcast i8* %"&pSB[currWI].offset650" to double*
  %loadedValue652 = load double* %CastToValueType651, align 8
  %672 = fmul double %loadedValue652, %671
  %673 = fadd double %618, %672
  %674 = load double addrspace(3)* %53, align 8
  %"&(pSB[currWI].offset)654" = add nuw i64 %CurrSBIndex..3, 760
  %"&pSB[currWI].offset655" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)654"
  %CastToValueType656 = bitcast i8* %"&pSB[currWI].offset655" to double*
  %loadedValue657 = load double* %CastToValueType656, align 8
  %675 = fmul double %loadedValue657, %674
  %676 = fadd double %622, %675
  %677 = load double addrspace(3)* %55, align 8
  %"&(pSB[currWI].offset)659" = add nuw i64 %CurrSBIndex..3, 760
  %"&pSB[currWI].offset660" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)659"
  %CastToValueType661 = bitcast i8* %"&pSB[currWI].offset660" to double*
  %loadedValue662 = load double* %CastToValueType661, align 8
  %678 = fmul double %loadedValue662, %677
  %679 = fadd double %626, %678
  %680 = load double addrspace(3)* %57, align 8
  %"&(pSB[currWI].offset)664" = add nuw i64 %CurrSBIndex..3, 760
  %"&pSB[currWI].offset665" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)664"
  %CastToValueType666 = bitcast i8* %"&pSB[currWI].offset665" to double*
  %loadedValue667 = load double* %CastToValueType666, align 8
  %681 = fmul double %loadedValue667, %680
  %682 = fadd double %630, %681
  %683 = load double addrspace(3)* %59, align 8
  %"&(pSB[currWI].offset)669" = add nuw i64 %CurrSBIndex..3, 760
  %"&pSB[currWI].offset670" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)669"
  %CastToValueType671 = bitcast i8* %"&pSB[currWI].offset670" to double*
  %loadedValue672 = load double* %CastToValueType671, align 8
  %684 = fmul double %loadedValue672, %683
  %685 = fadd double %634, %684
  %686 = load double addrspace(3)* %61, align 8
  %"&(pSB[currWI].offset)674" = add nuw i64 %CurrSBIndex..3, 760
  %"&pSB[currWI].offset675" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)674"
  %CastToValueType676 = bitcast i8* %"&pSB[currWI].offset675" to double*
  %loadedValue677 = load double* %CastToValueType676, align 8
  %687 = fmul double %loadedValue677, %686
  %688 = fadd double %638, %687
  %689 = load double addrspace(3)* %63, align 8
  %"&(pSB[currWI].offset)679" = add nuw i64 %CurrSBIndex..3, 760
  %"&pSB[currWI].offset680" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)679"
  %CastToValueType681 = bitcast i8* %"&pSB[currWI].offset680" to double*
  %loadedValue682 = load double* %CastToValueType681, align 8
  %690 = fmul double %loadedValue682, %689
  %691 = fadd double %642, %690
  %"&(pSB[currWI].offset)502" = add nuw i64 %CurrSBIndex..3, 736
  %"&pSB[currWI].offset503" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)502"
  %CastToValueType504 = bitcast i8* %"&pSB[currWI].offset503" to double addrspace(1)**
  %loadedValue505 = load double addrspace(1)** %CastToValueType504, align 8
  %692 = load double addrspace(1)* %loadedValue505, align 8
  %693 = load double addrspace(3)* %65, align 16
  %"&(pSB[currWI].offset)688" = add nuw i64 %CurrSBIndex..3, 768
  %"&pSB[currWI].offset689" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)688"
  %CastToValueType690 = bitcast i8* %"&pSB[currWI].offset689" to double*
  %loadedValue691 = load double* %CastToValueType690, align 8
  %694 = fmul double %loadedValue691, %693
  %695 = fadd double %646, %694
  %696 = load double addrspace(3)* %67, align 8
  %"&(pSB[currWI].offset)693" = add nuw i64 %CurrSBIndex..3, 768
  %"&pSB[currWI].offset694" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)693"
  %CastToValueType695 = bitcast i8* %"&pSB[currWI].offset694" to double*
  %loadedValue696 = load double* %CastToValueType695, align 8
  %697 = fmul double %loadedValue696, %696
  %698 = fadd double %649, %697
  %699 = load double addrspace(3)* %69, align 16
  %"&(pSB[currWI].offset)698" = add nuw i64 %CurrSBIndex..3, 768
  %"&pSB[currWI].offset699" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)698"
  %CastToValueType700 = bitcast i8* %"&pSB[currWI].offset699" to double*
  %loadedValue701 = load double* %CastToValueType700, align 8
  %700 = fmul double %loadedValue701, %699
  %701 = fadd double %652, %700
  %702 = load double addrspace(3)* %71, align 8
  %"&(pSB[currWI].offset)703" = add nuw i64 %CurrSBIndex..3, 768
  %"&pSB[currWI].offset704" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)703"
  %CastToValueType705 = bitcast i8* %"&pSB[currWI].offset704" to double*
  %loadedValue706 = load double* %CastToValueType705, align 8
  %703 = fmul double %loadedValue706, %702
  %704 = fadd double %655, %703
  %705 = load double addrspace(3)* %73, align 16
  %"&(pSB[currWI].offset)708" = add nuw i64 %CurrSBIndex..3, 768
  %"&pSB[currWI].offset709" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)708"
  %CastToValueType710 = bitcast i8* %"&pSB[currWI].offset709" to double*
  %loadedValue711 = load double* %CastToValueType710, align 8
  %706 = fmul double %loadedValue711, %705
  %707 = fadd double %658, %706
  %708 = load double addrspace(3)* %75, align 8
  %"&(pSB[currWI].offset)713" = add nuw i64 %CurrSBIndex..3, 768
  %"&pSB[currWI].offset714" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)713"
  %CastToValueType715 = bitcast i8* %"&pSB[currWI].offset714" to double*
  %loadedValue716 = load double* %CastToValueType715, align 8
  %709 = fmul double %loadedValue716, %708
  %710 = fadd double %661, %709
  %711 = load double addrspace(3)* %77, align 16
  %"&(pSB[currWI].offset)718" = add nuw i64 %CurrSBIndex..3, 768
  %"&pSB[currWI].offset719" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)718"
  %CastToValueType720 = bitcast i8* %"&pSB[currWI].offset719" to double*
  %loadedValue721 = load double* %CastToValueType720, align 8
  %712 = fmul double %loadedValue721, %711
  %713 = fadd double %664, %712
  %714 = load double addrspace(3)* %79, align 8
  %"&(pSB[currWI].offset)723" = add nuw i64 %CurrSBIndex..3, 768
  %"&pSB[currWI].offset724" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)723"
  %CastToValueType725 = bitcast i8* %"&pSB[currWI].offset724" to double*
  %loadedValue726 = load double* %CastToValueType725, align 8
  %715 = fmul double %loadedValue726, %714
  %716 = fadd double %667, %715
  %717 = load double addrspace(3)* %81, align 16
  %"&(pSB[currWI].offset)728" = add nuw i64 %CurrSBIndex..3, 768
  %"&pSB[currWI].offset729" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)728"
  %CastToValueType730 = bitcast i8* %"&pSB[currWI].offset729" to double*
  %loadedValue731 = load double* %CastToValueType730, align 8
  %718 = fmul double %loadedValue731, %717
  %719 = fadd double %670, %718
  %720 = load double addrspace(3)* %83, align 8
  %"&(pSB[currWI].offset)733" = add nuw i64 %CurrSBIndex..3, 768
  %"&pSB[currWI].offset734" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)733"
  %CastToValueType735 = bitcast i8* %"&pSB[currWI].offset734" to double*
  %loadedValue736 = load double* %CastToValueType735, align 8
  %721 = fmul double %loadedValue736, %720
  %722 = fadd double %673, %721
  %723 = load double addrspace(3)* %85, align 16
  %"&(pSB[currWI].offset)738" = add nuw i64 %CurrSBIndex..3, 768
  %"&pSB[currWI].offset739" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)738"
  %CastToValueType740 = bitcast i8* %"&pSB[currWI].offset739" to double*
  %loadedValue741 = load double* %CastToValueType740, align 8
  %724 = fmul double %loadedValue741, %723
  %725 = fadd double %676, %724
  %726 = load double addrspace(3)* %87, align 8
  %"&(pSB[currWI].offset)743" = add nuw i64 %CurrSBIndex..3, 768
  %"&pSB[currWI].offset744" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)743"
  %CastToValueType745 = bitcast i8* %"&pSB[currWI].offset744" to double*
  %loadedValue746 = load double* %CastToValueType745, align 8
  %727 = fmul double %loadedValue746, %726
  %728 = fadd double %679, %727
  %729 = load double addrspace(3)* %89, align 16
  %"&(pSB[currWI].offset)748" = add nuw i64 %CurrSBIndex..3, 768
  %"&pSB[currWI].offset749" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)748"
  %CastToValueType750 = bitcast i8* %"&pSB[currWI].offset749" to double*
  %loadedValue751 = load double* %CastToValueType750, align 8
  %730 = fmul double %loadedValue751, %729
  %731 = fadd double %682, %730
  %732 = load double addrspace(3)* %91, align 8
  %"&(pSB[currWI].offset)753" = add nuw i64 %CurrSBIndex..3, 768
  %"&pSB[currWI].offset754" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)753"
  %CastToValueType755 = bitcast i8* %"&pSB[currWI].offset754" to double*
  %loadedValue756 = load double* %CastToValueType755, align 8
  %733 = fmul double %loadedValue756, %732
  %734 = fadd double %685, %733
  %735 = load double addrspace(3)* %93, align 16
  %"&(pSB[currWI].offset)758" = add nuw i64 %CurrSBIndex..3, 768
  %"&pSB[currWI].offset759" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)758"
  %CastToValueType760 = bitcast i8* %"&pSB[currWI].offset759" to double*
  %loadedValue761 = load double* %CastToValueType760, align 8
  %736 = fmul double %loadedValue761, %735
  %737 = fadd double %688, %736
  %738 = load double addrspace(3)* %95, align 8
  %"&(pSB[currWI].offset)763" = add nuw i64 %CurrSBIndex..3, 768
  %"&pSB[currWI].offset764" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)763"
  %CastToValueType765 = bitcast i8* %"&pSB[currWI].offset764" to double*
  %loadedValue766 = load double* %CastToValueType765, align 8
  %739 = fmul double %loadedValue766, %738
  %740 = fadd double %691, %739
  %"&(pSB[currWI].offset)493" = add nuw i64 %CurrSBIndex..3, 728
  %"&pSB[currWI].offset494" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)493"
  %CastToValueType495 = bitcast i8* %"&pSB[currWI].offset494" to double addrspace(1)**
  %loadedValue496 = load double addrspace(1)** %CastToValueType495, align 8
  %741 = load double addrspace(1)* %loadedValue496, align 8
  %742 = load double addrspace(3)* %97, align 8
  %"&(pSB[currWI].offset)772" = add nuw i64 %CurrSBIndex..3, 776
  %"&pSB[currWI].offset773" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)772"
  %CastToValueType774 = bitcast i8* %"&pSB[currWI].offset773" to double*
  %loadedValue775 = load double* %CastToValueType774, align 8
  %743 = fmul double %loadedValue775, %742
  %744 = fadd double %695, %743
  %745 = load double addrspace(3)* %99, align 8
  %"&(pSB[currWI].offset)777" = add nuw i64 %CurrSBIndex..3, 776
  %"&pSB[currWI].offset778" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)777"
  %CastToValueType779 = bitcast i8* %"&pSB[currWI].offset778" to double*
  %loadedValue780 = load double* %CastToValueType779, align 8
  %746 = fmul double %loadedValue780, %745
  %747 = fadd double %698, %746
  %748 = load double addrspace(3)* %101, align 8
  %"&(pSB[currWI].offset)782" = add nuw i64 %CurrSBIndex..3, 776
  %"&pSB[currWI].offset783" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)782"
  %CastToValueType784 = bitcast i8* %"&pSB[currWI].offset783" to double*
  %loadedValue785 = load double* %CastToValueType784, align 8
  %749 = fmul double %loadedValue785, %748
  %750 = fadd double %701, %749
  %751 = load double addrspace(3)* %103, align 8
  %"&(pSB[currWI].offset)787" = add nuw i64 %CurrSBIndex..3, 776
  %"&pSB[currWI].offset788" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)787"
  %CastToValueType789 = bitcast i8* %"&pSB[currWI].offset788" to double*
  %loadedValue790 = load double* %CastToValueType789, align 8
  %752 = fmul double %loadedValue790, %751
  %753 = fadd double %704, %752
  %754 = load double addrspace(3)* %105, align 8
  %"&(pSB[currWI].offset)792" = add nuw i64 %CurrSBIndex..3, 776
  %"&pSB[currWI].offset793" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)792"
  %CastToValueType794 = bitcast i8* %"&pSB[currWI].offset793" to double*
  %loadedValue795 = load double* %CastToValueType794, align 8
  %755 = fmul double %loadedValue795, %754
  %756 = fadd double %707, %755
  %757 = load double addrspace(3)* %107, align 8
  %"&(pSB[currWI].offset)797" = add nuw i64 %CurrSBIndex..3, 776
  %"&pSB[currWI].offset798" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)797"
  %CastToValueType799 = bitcast i8* %"&pSB[currWI].offset798" to double*
  %loadedValue800 = load double* %CastToValueType799, align 8
  %758 = fmul double %loadedValue800, %757
  %759 = fadd double %710, %758
  %760 = load double addrspace(3)* %109, align 8
  %"&(pSB[currWI].offset)802" = add nuw i64 %CurrSBIndex..3, 776
  %"&pSB[currWI].offset803" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)802"
  %CastToValueType804 = bitcast i8* %"&pSB[currWI].offset803" to double*
  %loadedValue805 = load double* %CastToValueType804, align 8
  %761 = fmul double %loadedValue805, %760
  %762 = fadd double %713, %761
  %763 = load double addrspace(3)* %111, align 8
  %"&(pSB[currWI].offset)807" = add nuw i64 %CurrSBIndex..3, 776
  %"&pSB[currWI].offset808" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)807"
  %CastToValueType809 = bitcast i8* %"&pSB[currWI].offset808" to double*
  %loadedValue810 = load double* %CastToValueType809, align 8
  %764 = fmul double %loadedValue810, %763
  %765 = fadd double %716, %764
  %766 = load double addrspace(3)* %113, align 8
  %"&(pSB[currWI].offset)812" = add nuw i64 %CurrSBIndex..3, 776
  %"&pSB[currWI].offset813" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)812"
  %CastToValueType814 = bitcast i8* %"&pSB[currWI].offset813" to double*
  %loadedValue815 = load double* %CastToValueType814, align 8
  %767 = fmul double %loadedValue815, %766
  %768 = fadd double %719, %767
  %769 = load double addrspace(3)* %115, align 8
  %"&(pSB[currWI].offset)817" = add nuw i64 %CurrSBIndex..3, 776
  %"&pSB[currWI].offset818" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)817"
  %CastToValueType819 = bitcast i8* %"&pSB[currWI].offset818" to double*
  %loadedValue820 = load double* %CastToValueType819, align 8
  %770 = fmul double %loadedValue820, %769
  %771 = fadd double %722, %770
  %772 = load double addrspace(3)* %117, align 8
  %"&(pSB[currWI].offset)822" = add nuw i64 %CurrSBIndex..3, 776
  %"&pSB[currWI].offset823" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)822"
  %CastToValueType824 = bitcast i8* %"&pSB[currWI].offset823" to double*
  %loadedValue825 = load double* %CastToValueType824, align 8
  %773 = fmul double %loadedValue825, %772
  %774 = fadd double %725, %773
  %775 = load double addrspace(3)* %119, align 8
  %"&(pSB[currWI].offset)827" = add nuw i64 %CurrSBIndex..3, 776
  %"&pSB[currWI].offset828" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)827"
  %CastToValueType829 = bitcast i8* %"&pSB[currWI].offset828" to double*
  %loadedValue830 = load double* %CastToValueType829, align 8
  %776 = fmul double %loadedValue830, %775
  %777 = fadd double %728, %776
  %778 = load double addrspace(3)* %121, align 8
  %"&(pSB[currWI].offset)832" = add nuw i64 %CurrSBIndex..3, 776
  %"&pSB[currWI].offset833" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)832"
  %CastToValueType834 = bitcast i8* %"&pSB[currWI].offset833" to double*
  %loadedValue835 = load double* %CastToValueType834, align 8
  %779 = fmul double %loadedValue835, %778
  %780 = fadd double %731, %779
  %781 = load double addrspace(3)* %123, align 8
  %"&(pSB[currWI].offset)837" = add nuw i64 %CurrSBIndex..3, 776
  %"&pSB[currWI].offset838" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)837"
  %CastToValueType839 = bitcast i8* %"&pSB[currWI].offset838" to double*
  %loadedValue840 = load double* %CastToValueType839, align 8
  %782 = fmul double %loadedValue840, %781
  %783 = fadd double %734, %782
  %784 = load double addrspace(3)* %125, align 8
  %"&(pSB[currWI].offset)842" = add nuw i64 %CurrSBIndex..3, 776
  %"&pSB[currWI].offset843" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)842"
  %CastToValueType844 = bitcast i8* %"&pSB[currWI].offset843" to double*
  %loadedValue845 = load double* %CastToValueType844, align 8
  %785 = fmul double %loadedValue845, %784
  %786 = fadd double %737, %785
  %787 = load double addrspace(3)* %127, align 8
  %"&(pSB[currWI].offset)847" = add nuw i64 %CurrSBIndex..3, 776
  %"&pSB[currWI].offset848" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)847"
  %CastToValueType849 = bitcast i8* %"&pSB[currWI].offset848" to double*
  %loadedValue850 = load double* %CastToValueType849, align 8
  %788 = fmul double %loadedValue850, %787
  %789 = fadd double %740, %788
  %"&(pSB[currWI].offset)484" = add nuw i64 %CurrSBIndex..3, 720
  %"&pSB[currWI].offset485" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)484"
  %CastToValueType486 = bitcast i8* %"&pSB[currWI].offset485" to double addrspace(1)**
  %loadedValue487 = load double addrspace(1)** %CastToValueType486, align 8
  %790 = load double addrspace(1)* %loadedValue487, align 8
  %791 = load double addrspace(3)* %129, align 16
  %792 = fmul double %643, %791
  %793 = fadd double %744, %792
  %794 = load double addrspace(3)* %131, align 8
  %795 = fmul double %643, %794
  %796 = fadd double %747, %795
  %797 = load double addrspace(3)* %133, align 16
  %798 = fmul double %643, %797
  %799 = fadd double %750, %798
  %800 = load double addrspace(3)* %135, align 8
  %801 = fmul double %643, %800
  %802 = fadd double %753, %801
  %803 = load double addrspace(3)* %137, align 16
  %804 = fmul double %643, %803
  %805 = fadd double %756, %804
  %806 = load double addrspace(3)* %139, align 8
  %807 = fmul double %643, %806
  %808 = fadd double %759, %807
  %809 = load double addrspace(3)* %141, align 16
  %810 = fmul double %643, %809
  %811 = fadd double %762, %810
  %812 = load double addrspace(3)* %143, align 8
  %813 = fmul double %643, %812
  %814 = fadd double %765, %813
  %815 = load double addrspace(3)* %145, align 16
  %816 = fmul double %643, %815
  %817 = fadd double %768, %816
  %818 = load double addrspace(3)* %147, align 8
  %819 = fmul double %643, %818
  %820 = fadd double %771, %819
  %821 = load double addrspace(3)* %149, align 16
  %822 = fmul double %643, %821
  %823 = fadd double %774, %822
  %824 = load double addrspace(3)* %151, align 8
  %825 = fmul double %643, %824
  %826 = fadd double %777, %825
  %827 = load double addrspace(3)* %153, align 16
  %828 = fmul double %643, %827
  %829 = fadd double %780, %828
  %830 = load double addrspace(3)* %155, align 8
  %831 = fmul double %643, %830
  %832 = fadd double %783, %831
  %833 = load double addrspace(3)* %157, align 16
  %834 = fmul double %643, %833
  %835 = fadd double %786, %834
  %836 = load double addrspace(3)* %159, align 8
  %837 = fmul double %643, %836
  %838 = fadd double %789, %837
  %"&(pSB[currWI].offset)475" = add nuw i64 %CurrSBIndex..3, 712
  %"&pSB[currWI].offset476" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)475"
  %CastToValueType477 = bitcast i8* %"&pSB[currWI].offset476" to double addrspace(1)**
  %loadedValue478 = load double addrspace(1)** %CastToValueType477, align 8
  %839 = load double addrspace(1)* %loadedValue478, align 8
  %840 = load double addrspace(3)* %161, align 8
  %841 = fmul double %692, %840
  %842 = fadd double %793, %841
  %843 = load double addrspace(3)* %163, align 8
  %844 = fmul double %692, %843
  %845 = fadd double %796, %844
  %846 = load double addrspace(3)* %165, align 8
  %847 = fmul double %692, %846
  %848 = fadd double %799, %847
  %849 = load double addrspace(3)* %167, align 8
  %850 = fmul double %692, %849
  %851 = fadd double %802, %850
  %852 = load double addrspace(3)* %169, align 8
  %853 = fmul double %692, %852
  %854 = fadd double %805, %853
  %855 = load double addrspace(3)* %171, align 8
  %856 = fmul double %692, %855
  %857 = fadd double %808, %856
  %858 = load double addrspace(3)* %173, align 8
  %859 = fmul double %692, %858
  %860 = fadd double %811, %859
  %861 = load double addrspace(3)* %175, align 8
  %862 = fmul double %692, %861
  %863 = fadd double %814, %862
  %864 = load double addrspace(3)* %177, align 8
  %865 = fmul double %692, %864
  %866 = fadd double %817, %865
  %867 = load double addrspace(3)* %179, align 8
  %868 = fmul double %692, %867
  %869 = fadd double %820, %868
  %870 = load double addrspace(3)* %181, align 8
  %871 = fmul double %692, %870
  %872 = fadd double %823, %871
  %873 = load double addrspace(3)* %183, align 8
  %874 = fmul double %692, %873
  %875 = fadd double %826, %874
  %876 = load double addrspace(3)* %185, align 8
  %877 = fmul double %692, %876
  %878 = fadd double %829, %877
  %879 = load double addrspace(3)* %187, align 8
  %880 = fmul double %692, %879
  %881 = fadd double %832, %880
  %882 = load double addrspace(3)* %189, align 8
  %883 = fmul double %692, %882
  %884 = fadd double %835, %883
  %885 = load double addrspace(3)* %191, align 8
  %886 = fmul double %692, %885
  %887 = fadd double %838, %886
  %"&(pSB[currWI].offset)466" = add nuw i64 %CurrSBIndex..3, 704
  %"&pSB[currWI].offset467" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)466"
  %CastToValueType468 = bitcast i8* %"&pSB[currWI].offset467" to double addrspace(1)**
  %loadedValue469 = load double addrspace(1)** %CastToValueType468, align 8
  %888 = load double addrspace(1)* %loadedValue469, align 8
  %889 = load double addrspace(3)* %193, align 16
  %890 = fmul double %741, %889
  %891 = fadd double %842, %890
  %892 = load double addrspace(3)* %195, align 8
  %893 = fmul double %741, %892
  %894 = fadd double %845, %893
  %895 = load double addrspace(3)* %197, align 16
  %896 = fmul double %741, %895
  %897 = fadd double %848, %896
  %898 = load double addrspace(3)* %199, align 8
  %899 = fmul double %741, %898
  %900 = fadd double %851, %899
  %901 = load double addrspace(3)* %201, align 16
  %902 = fmul double %741, %901
  %903 = fadd double %854, %902
  %904 = load double addrspace(3)* %203, align 8
  %905 = fmul double %741, %904
  %906 = fadd double %857, %905
  %907 = load double addrspace(3)* %205, align 16
  %908 = fmul double %741, %907
  %909 = fadd double %860, %908
  %910 = load double addrspace(3)* %207, align 8
  %911 = fmul double %741, %910
  %912 = fadd double %863, %911
  %913 = load double addrspace(3)* %209, align 16
  %914 = fmul double %741, %913
  %915 = fadd double %866, %914
  %916 = load double addrspace(3)* %211, align 8
  %917 = fmul double %741, %916
  %918 = fadd double %869, %917
  %919 = load double addrspace(3)* %213, align 16
  %920 = fmul double %741, %919
  %921 = fadd double %872, %920
  %922 = load double addrspace(3)* %215, align 8
  %923 = fmul double %741, %922
  %924 = fadd double %875, %923
  %925 = load double addrspace(3)* %217, align 16
  %926 = fmul double %741, %925
  %927 = fadd double %878, %926
  %928 = load double addrspace(3)* %219, align 8
  %929 = fmul double %741, %928
  %930 = fadd double %881, %929
  %931 = load double addrspace(3)* %221, align 16
  %932 = fmul double %741, %931
  %933 = fadd double %884, %932
  %934 = load double addrspace(3)* %223, align 8
  %935 = fmul double %741, %934
  %936 = fadd double %887, %935
  %"&(pSB[currWI].offset)457" = add nuw i64 %CurrSBIndex..3, 696
  %"&pSB[currWI].offset458" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)457"
  %CastToValueType459 = bitcast i8* %"&pSB[currWI].offset458" to double addrspace(1)**
  %loadedValue460 = load double addrspace(1)** %CastToValueType459, align 8
  %937 = load double addrspace(1)* %loadedValue460, align 8
  %938 = load double addrspace(3)* %225, align 8
  %939 = fmul double %790, %938
  %940 = fadd double %891, %939
  %941 = load double addrspace(3)* %227, align 8
  %942 = fmul double %790, %941
  %943 = fadd double %894, %942
  %944 = load double addrspace(3)* %229, align 8
  %945 = fmul double %790, %944
  %946 = fadd double %897, %945
  %947 = load double addrspace(3)* %231, align 8
  %948 = fmul double %790, %947
  %949 = fadd double %900, %948
  %950 = load double addrspace(3)* %233, align 8
  %951 = fmul double %790, %950
  %952 = fadd double %903, %951
  %953 = load double addrspace(3)* %235, align 8
  %954 = fmul double %790, %953
  %955 = fadd double %906, %954
  %956 = load double addrspace(3)* %237, align 8
  %957 = fmul double %790, %956
  %958 = fadd double %909, %957
  %959 = load double addrspace(3)* %239, align 8
  %960 = fmul double %790, %959
  %961 = fadd double %912, %960
  %962 = load double addrspace(3)* %241, align 8
  %963 = fmul double %790, %962
  %964 = fadd double %915, %963
  %965 = load double addrspace(3)* %243, align 8
  %966 = fmul double %790, %965
  %967 = fadd double %918, %966
  %968 = load double addrspace(3)* %245, align 8
  %969 = fmul double %790, %968
  %970 = fadd double %921, %969
  %971 = load double addrspace(3)* %247, align 8
  %972 = fmul double %790, %971
  %973 = fadd double %924, %972
  %974 = load double addrspace(3)* %249, align 8
  %975 = fmul double %790, %974
  %976 = fadd double %927, %975
  %977 = load double addrspace(3)* %251, align 8
  %978 = fmul double %790, %977
  %979 = fadd double %930, %978
  %980 = load double addrspace(3)* %253, align 8
  %981 = fmul double %790, %980
  %982 = fadd double %933, %981
  %983 = load double addrspace(3)* %255, align 8
  %984 = fmul double %790, %983
  %985 = fadd double %936, %984
  %"&(pSB[currWI].offset)448" = add nuw i64 %CurrSBIndex..3, 688
  %"&pSB[currWI].offset449" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)448"
  %CastToValueType450 = bitcast i8* %"&pSB[currWI].offset449" to double addrspace(1)**
  %loadedValue451 = load double addrspace(1)** %CastToValueType450, align 8
  %986 = load double addrspace(1)* %loadedValue451, align 8
  %987 = load double addrspace(3)* %257, align 16
  %988 = fmul double %839, %987
  %989 = fadd double %940, %988
  %990 = load double addrspace(3)* %259, align 8
  %991 = fmul double %839, %990
  %992 = fadd double %943, %991
  %993 = load double addrspace(3)* %261, align 16
  %994 = fmul double %839, %993
  %995 = fadd double %946, %994
  %996 = load double addrspace(3)* %263, align 8
  %997 = fmul double %839, %996
  %998 = fadd double %949, %997
  %999 = load double addrspace(3)* %265, align 16
  %1000 = fmul double %839, %999
  %1001 = fadd double %952, %1000
  %1002 = load double addrspace(3)* %267, align 8
  %1003 = fmul double %839, %1002
  %1004 = fadd double %955, %1003
  %1005 = load double addrspace(3)* %269, align 16
  %1006 = fmul double %839, %1005
  %1007 = fadd double %958, %1006
  %1008 = load double addrspace(3)* %271, align 8
  %1009 = fmul double %839, %1008
  %1010 = fadd double %961, %1009
  %1011 = load double addrspace(3)* %273, align 16
  %1012 = fmul double %839, %1011
  %1013 = fadd double %964, %1012
  %1014 = load double addrspace(3)* %275, align 8
  %1015 = fmul double %839, %1014
  %1016 = fadd double %967, %1015
  %1017 = load double addrspace(3)* %277, align 16
  %1018 = fmul double %839, %1017
  %1019 = fadd double %970, %1018
  %1020 = load double addrspace(3)* %279, align 8
  %1021 = fmul double %839, %1020
  %1022 = fadd double %973, %1021
  %1023 = load double addrspace(3)* %281, align 16
  %1024 = fmul double %839, %1023
  %1025 = fadd double %976, %1024
  %1026 = load double addrspace(3)* %283, align 8
  %1027 = fmul double %839, %1026
  %1028 = fadd double %979, %1027
  %1029 = load double addrspace(3)* %285, align 16
  %1030 = fmul double %839, %1029
  %1031 = fadd double %982, %1030
  %1032 = load double addrspace(3)* %287, align 8
  %1033 = fmul double %839, %1032
  %1034 = fadd double %985, %1033
  %"&(pSB[currWI].offset)439" = add nuw i64 %CurrSBIndex..3, 680
  %"&pSB[currWI].offset440" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)439"
  %CastToValueType441 = bitcast i8* %"&pSB[currWI].offset440" to double addrspace(1)**
  %loadedValue442 = load double addrspace(1)** %CastToValueType441, align 8
  %1035 = load double addrspace(1)* %loadedValue442, align 8
  store double %1035, double* %533, align 16
  %1036 = load double addrspace(3)* %289, align 8
  %1037 = fmul double %888, %1036
  %1038 = fadd double %989, %1037
  %1039 = load double addrspace(3)* %291, align 8
  %1040 = fmul double %888, %1039
  %1041 = fadd double %992, %1040
  %1042 = load double addrspace(3)* %293, align 8
  %1043 = fmul double %888, %1042
  %1044 = fadd double %995, %1043
  %1045 = load double addrspace(3)* %295, align 8
  %1046 = fmul double %888, %1045
  %1047 = fadd double %998, %1046
  %1048 = load double addrspace(3)* %297, align 8
  %1049 = fmul double %888, %1048
  %1050 = fadd double %1001, %1049
  %1051 = load double addrspace(3)* %299, align 8
  %1052 = fmul double %888, %1051
  %1053 = fadd double %1004, %1052
  %1054 = load double addrspace(3)* %301, align 8
  %1055 = fmul double %888, %1054
  %1056 = fadd double %1007, %1055
  %1057 = load double addrspace(3)* %303, align 8
  %1058 = fmul double %888, %1057
  %1059 = fadd double %1010, %1058
  %1060 = load double addrspace(3)* %305, align 8
  %1061 = fmul double %888, %1060
  %1062 = fadd double %1013, %1061
  %1063 = load double addrspace(3)* %307, align 8
  %1064 = fmul double %888, %1063
  %1065 = fadd double %1016, %1064
  %1066 = load double addrspace(3)* %309, align 8
  %1067 = fmul double %888, %1066
  %1068 = fadd double %1019, %1067
  %1069 = load double addrspace(3)* %311, align 8
  %1070 = fmul double %888, %1069
  %1071 = fadd double %1022, %1070
  %1072 = load double addrspace(3)* %313, align 8
  %1073 = fmul double %888, %1072
  %1074 = fadd double %1025, %1073
  %1075 = load double addrspace(3)* %315, align 8
  %1076 = fmul double %888, %1075
  %1077 = fadd double %1028, %1076
  %1078 = load double addrspace(3)* %317, align 8
  %1079 = fmul double %888, %1078
  %1080 = fadd double %1031, %1079
  %1081 = load double addrspace(3)* %319, align 8
  %1082 = fmul double %888, %1081
  %1083 = fadd double %1034, %1082
  %"&(pSB[currWI].offset)430" = add nuw i64 %CurrSBIndex..3, 672
  %"&pSB[currWI].offset431" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)430"
  %CastToValueType432 = bitcast i8* %"&pSB[currWI].offset431" to double addrspace(1)**
  %loadedValue433 = load double addrspace(1)** %CastToValueType432, align 8
  %1084 = load double addrspace(1)* %loadedValue433, align 8
  store double %1084, double* %566, align 8
  %1085 = load double addrspace(3)* %321, align 16
  %1086 = fmul double %937, %1085
  %1087 = fadd double %1038, %1086
  %1088 = load double addrspace(3)* %323, align 8
  %1089 = fmul double %937, %1088
  %1090 = fadd double %1041, %1089
  %1091 = load double addrspace(3)* %325, align 16
  %1092 = fmul double %937, %1091
  %1093 = fadd double %1044, %1092
  %1094 = load double addrspace(3)* %327, align 8
  %1095 = fmul double %937, %1094
  %1096 = fadd double %1047, %1095
  %1097 = load double addrspace(3)* %329, align 16
  %1098 = fmul double %937, %1097
  %1099 = fadd double %1050, %1098
  %1100 = load double addrspace(3)* %331, align 8
  %1101 = fmul double %937, %1100
  %1102 = fadd double %1053, %1101
  %1103 = load double addrspace(3)* %333, align 16
  %1104 = fmul double %937, %1103
  %1105 = fadd double %1056, %1104
  %1106 = load double addrspace(3)* %335, align 8
  %1107 = fmul double %937, %1106
  %1108 = fadd double %1059, %1107
  %1109 = load double addrspace(3)* %337, align 16
  %1110 = fmul double %937, %1109
  %1111 = fadd double %1062, %1110
  %1112 = load double addrspace(3)* %339, align 8
  %1113 = fmul double %937, %1112
  %1114 = fadd double %1065, %1113
  %1115 = load double addrspace(3)* %341, align 16
  %1116 = fmul double %937, %1115
  %1117 = fadd double %1068, %1116
  %1118 = load double addrspace(3)* %343, align 8
  %1119 = fmul double %937, %1118
  %1120 = fadd double %1071, %1119
  %1121 = load double addrspace(3)* %345, align 16
  %1122 = fmul double %937, %1121
  %1123 = fadd double %1074, %1122
  %1124 = load double addrspace(3)* %347, align 8
  %1125 = fmul double %937, %1124
  %1126 = fadd double %1077, %1125
  %1127 = load double addrspace(3)* %349, align 16
  %1128 = fmul double %937, %1127
  %1129 = fadd double %1080, %1128
  %1130 = load double addrspace(3)* %351, align 8
  %1131 = fmul double %937, %1130
  %1132 = fadd double %1083, %1131
  %"&(pSB[currWI].offset)421" = add nuw i64 %CurrSBIndex..3, 664
  %"&pSB[currWI].offset422" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)421"
  %CastToValueType423 = bitcast i8* %"&pSB[currWI].offset422" to double addrspace(1)**
  %loadedValue424 = load double addrspace(1)** %CastToValueType423, align 8
  %1133 = load double addrspace(1)* %loadedValue424, align 8
  store double %1133, double* %568, align 16
  %1134 = load double addrspace(3)* %353, align 8
  %1135 = fmul double %986, %1134
  %1136 = fadd double %1087, %1135
  %1137 = load double addrspace(3)* %355, align 8
  %1138 = fmul double %986, %1137
  %1139 = fadd double %1090, %1138
  %1140 = load double addrspace(3)* %357, align 8
  %1141 = fmul double %986, %1140
  %1142 = fadd double %1093, %1141
  %1143 = load double addrspace(3)* %359, align 8
  %1144 = fmul double %986, %1143
  %1145 = fadd double %1096, %1144
  %1146 = load double addrspace(3)* %361, align 8
  %1147 = fmul double %986, %1146
  %1148 = fadd double %1099, %1147
  %1149 = load double addrspace(3)* %363, align 8
  %1150 = fmul double %986, %1149
  %1151 = fadd double %1102, %1150
  %1152 = load double addrspace(3)* %365, align 8
  %1153 = fmul double %986, %1152
  %1154 = fadd double %1105, %1153
  %1155 = load double addrspace(3)* %367, align 8
  %1156 = fmul double %986, %1155
  %1157 = fadd double %1108, %1156
  %1158 = load double addrspace(3)* %369, align 8
  %1159 = fmul double %986, %1158
  %1160 = fadd double %1111, %1159
  %1161 = load double addrspace(3)* %371, align 8
  %1162 = fmul double %986, %1161
  %1163 = fadd double %1114, %1162
  %1164 = load double addrspace(3)* %373, align 8
  %1165 = fmul double %986, %1164
  %1166 = fadd double %1117, %1165
  %1167 = load double addrspace(3)* %375, align 8
  %1168 = fmul double %986, %1167
  %1169 = fadd double %1120, %1168
  %1170 = load double addrspace(3)* %377, align 8
  %1171 = fmul double %986, %1170
  %1172 = fadd double %1123, %1171
  %1173 = load double addrspace(3)* %379, align 8
  %1174 = fmul double %986, %1173
  %1175 = fadd double %1126, %1174
  %1176 = load double addrspace(3)* %381, align 8
  %1177 = fmul double %986, %1176
  %1178 = fadd double %1129, %1177
  %1179 = load double addrspace(3)* %383, align 8
  %1180 = fmul double %986, %1179
  %1181 = fadd double %1132, %1180
  %"&(pSB[currWI].offset)412" = add nuw i64 %CurrSBIndex..3, 656
  %"&pSB[currWI].offset413" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)412"
  %CastToValueType414 = bitcast i8* %"&pSB[currWI].offset413" to double addrspace(1)**
  %loadedValue415 = load double addrspace(1)** %CastToValueType414, align 8
  %1182 = load double addrspace(1)* %loadedValue415, align 8
  store double %1182, double* %570, align 8
  %1183 = load double addrspace(3)* %385, align 16
  %1184 = fmul double %1035, %1183
  %1185 = fadd double %1136, %1184
  %1186 = load double addrspace(3)* %387, align 8
  %1187 = fmul double %1035, %1186
  %1188 = fadd double %1139, %1187
  %1189 = load double addrspace(3)* %389, align 16
  %1190 = fmul double %1035, %1189
  %1191 = fadd double %1142, %1190
  %1192 = load double addrspace(3)* %391, align 8
  %1193 = fmul double %1035, %1192
  %1194 = fadd double %1145, %1193
  %1195 = load double addrspace(3)* %393, align 16
  %1196 = fmul double %1035, %1195
  %1197 = fadd double %1148, %1196
  %1198 = load double addrspace(3)* %395, align 8
  %1199 = fmul double %1035, %1198
  %1200 = fadd double %1151, %1199
  %1201 = load double addrspace(3)* %397, align 16
  %1202 = fmul double %1035, %1201
  %1203 = fadd double %1154, %1202
  %1204 = load double addrspace(3)* %399, align 8
  %1205 = fmul double %1035, %1204
  %1206 = fadd double %1157, %1205
  %1207 = load double addrspace(3)* %401, align 16
  %1208 = fmul double %1035, %1207
  %1209 = fadd double %1160, %1208
  %1210 = load double addrspace(3)* %403, align 8
  %1211 = fmul double %1035, %1210
  %1212 = fadd double %1163, %1211
  %1213 = load double addrspace(3)* %405, align 16
  %1214 = fmul double %1035, %1213
  %1215 = fadd double %1166, %1214
  %1216 = load double addrspace(3)* %407, align 8
  %1217 = fmul double %1035, %1216
  %1218 = fadd double %1169, %1217
  %1219 = load double addrspace(3)* %409, align 16
  %1220 = fmul double %1035, %1219
  %1221 = fadd double %1172, %1220
  %1222 = load double addrspace(3)* %411, align 8
  %1223 = fmul double %1035, %1222
  %1224 = fadd double %1175, %1223
  %1225 = load double addrspace(3)* %413, align 16
  %1226 = fmul double %1035, %1225
  %1227 = fadd double %1178, %1226
  %1228 = load double addrspace(3)* %415, align 8
  %1229 = fmul double %1035, %1228
  %1230 = fadd double %1181, %1229
  %1231 = load double addrspace(3)* %417, align 8
  %1232 = fmul double %1084, %1231
  %1233 = fadd double %1185, %1232
  %1234 = load double addrspace(3)* %419, align 8
  %1235 = fmul double %1084, %1234
  %1236 = fadd double %1188, %1235
  %1237 = load double addrspace(3)* %421, align 8
  %1238 = fmul double %1084, %1237
  %1239 = fadd double %1191, %1238
  %1240 = load double addrspace(3)* %423, align 8
  %1241 = fmul double %1084, %1240
  %1242 = fadd double %1194, %1241
  %1243 = load double addrspace(3)* %425, align 8
  %1244 = fmul double %1084, %1243
  %1245 = fadd double %1197, %1244
  %1246 = load double addrspace(3)* %427, align 8
  %1247 = fmul double %1084, %1246
  %1248 = fadd double %1200, %1247
  %1249 = load double addrspace(3)* %429, align 8
  %1250 = fmul double %1084, %1249
  %1251 = fadd double %1203, %1250
  %1252 = load double addrspace(3)* %431, align 8
  %1253 = fmul double %1084, %1252
  %1254 = fadd double %1206, %1253
  %1255 = load double addrspace(3)* %433, align 8
  %1256 = fmul double %1084, %1255
  %1257 = fadd double %1209, %1256
  %1258 = load double addrspace(3)* %435, align 8
  %1259 = fmul double %1084, %1258
  %1260 = fadd double %1212, %1259
  %1261 = load double addrspace(3)* %437, align 8
  %1262 = fmul double %1084, %1261
  %1263 = fadd double %1215, %1262
  %1264 = load double addrspace(3)* %439, align 8
  %1265 = fmul double %1084, %1264
  %1266 = fadd double %1218, %1265
  %1267 = load double addrspace(3)* %441, align 8
  %1268 = fmul double %1084, %1267
  %1269 = fadd double %1221, %1268
  %1270 = load double addrspace(3)* %443, align 8
  %1271 = fmul double %1084, %1270
  %1272 = fadd double %1224, %1271
  %1273 = load double addrspace(3)* %445, align 8
  %1274 = fmul double %1084, %1273
  %1275 = fadd double %1227, %1274
  %1276 = load double addrspace(3)* %447, align 8
  %1277 = fmul double %1084, %1276
  %1278 = fadd double %1230, %1277
  %1279 = load double addrspace(3)* %449, align 16
  %1280 = fmul double %1133, %1279
  %1281 = fadd double %1233, %1280
  %1282 = load double addrspace(3)* %451, align 8
  %1283 = fmul double %1133, %1282
  %1284 = fadd double %1236, %1283
  %1285 = load double addrspace(3)* %453, align 16
  %1286 = fmul double %1133, %1285
  %1287 = fadd double %1239, %1286
  %1288 = load double addrspace(3)* %455, align 8
  %1289 = fmul double %1133, %1288
  %1290 = fadd double %1242, %1289
  %1291 = load double addrspace(3)* %457, align 16
  %1292 = fmul double %1133, %1291
  %1293 = fadd double %1245, %1292
  %1294 = load double addrspace(3)* %459, align 8
  %1295 = fmul double %1133, %1294
  %1296 = fadd double %1248, %1295
  %1297 = load double addrspace(3)* %461, align 16
  %1298 = fmul double %1133, %1297
  %1299 = fadd double %1251, %1298
  %1300 = load double addrspace(3)* %463, align 8
  %1301 = fmul double %1133, %1300
  %1302 = fadd double %1254, %1301
  %1303 = load double addrspace(3)* %465, align 16
  %1304 = fmul double %1133, %1303
  %1305 = fadd double %1257, %1304
  %1306 = load double addrspace(3)* %467, align 8
  %1307 = fmul double %1133, %1306
  %1308 = fadd double %1260, %1307
  %1309 = load double addrspace(3)* %469, align 16
  %1310 = fmul double %1133, %1309
  %1311 = fadd double %1263, %1310
  %1312 = load double addrspace(3)* %471, align 8
  %1313 = fmul double %1133, %1312
  %1314 = fadd double %1266, %1313
  %1315 = load double addrspace(3)* %473, align 16
  %1316 = fmul double %1133, %1315
  %1317 = fadd double %1269, %1316
  %1318 = load double addrspace(3)* %475, align 8
  %1319 = fmul double %1133, %1318
  %1320 = fadd double %1272, %1319
  %1321 = load double addrspace(3)* %477, align 16
  %1322 = fmul double %1133, %1321
  %1323 = fadd double %1275, %1322
  %1324 = load double addrspace(3)* %479, align 8
  %1325 = fmul double %1133, %1324
  %1326 = fadd double %1278, %1325
  %1327 = load double addrspace(3)* %481, align 8
  %1328 = fmul double %1182, %1327
  %1329 = fadd double %1281, %1328
  store double %1329, double* %534, align 16
  %1330 = load double addrspace(3)* %483, align 8
  %1331 = fmul double %1182, %1330
  %1332 = fadd double %1284, %1331
  store double %1332, double* %536, align 8
  %1333 = load double addrspace(3)* %485, align 8
  %1334 = fmul double %1182, %1333
  %1335 = fadd double %1287, %1334
  store double %1335, double* %538, align 16
  %1336 = load double addrspace(3)* %487, align 8
  %1337 = fmul double %1182, %1336
  %1338 = fadd double %1290, %1337
  store double %1338, double* %540, align 8
  %1339 = load double addrspace(3)* %489, align 8
  %1340 = fmul double %1182, %1339
  %1341 = fadd double %1293, %1340
  store double %1341, double* %542, align 16
  %1342 = load double addrspace(3)* %491, align 8
  %1343 = fmul double %1182, %1342
  %1344 = fadd double %1296, %1343
  store double %1344, double* %544, align 8
  %1345 = load double addrspace(3)* %493, align 8
  %1346 = fmul double %1182, %1345
  %1347 = fadd double %1299, %1346
  store double %1347, double* %546, align 16
  %1348 = load double addrspace(3)* %495, align 8
  %1349 = fmul double %1182, %1348
  %1350 = fadd double %1302, %1349
  store double %1350, double* %548, align 8
  %1351 = load double addrspace(3)* %497, align 8
  %1352 = fmul double %1182, %1351
  %1353 = fadd double %1305, %1352
  store double %1353, double* %550, align 16
  %1354 = load double addrspace(3)* %499, align 8
  %1355 = fmul double %1182, %1354
  %1356 = fadd double %1308, %1355
  store double %1356, double* %552, align 8
  %1357 = load double addrspace(3)* %501, align 8
  %1358 = fmul double %1182, %1357
  %1359 = fadd double %1311, %1358
  store double %1359, double* %554, align 16
  %1360 = load double addrspace(3)* %503, align 8
  %1361 = fmul double %1182, %1360
  %1362 = fadd double %1314, %1361
  store double %1362, double* %556, align 8
  %1363 = load double addrspace(3)* %505, align 8
  %1364 = fmul double %1182, %1363
  %1365 = fadd double %1317, %1364
  store double %1365, double* %558, align 16
  %1366 = load double addrspace(3)* %507, align 8
  %1367 = fmul double %1182, %1366
  %1368 = fadd double %1320, %1367
  store double %1368, double* %560, align 8
  %1369 = load double addrspace(3)* %509, align 8
  %1370 = fmul double %1182, %1369
  %1371 = fadd double %1323, %1370
  store double %1371, double* %562, align 16
  %1372 = load double addrspace(3)* %511, align 8
  %1373 = fmul double %1182, %1372
  %1374 = fadd double %1326, %1373
  store double %1374, double* %564, align 8
  %check.WI.iter999 = icmp ult i64 %CurrWI..3, %iterCount
  br i1 %check.WI.iter999, label %thenBB996, label %SyncBB987.preheader

thenBB996:                                        ; preds = %SyncBB985
  %"CurrWI++1000" = add nuw i64 %CurrWI..3, 1
  %"loadedCurrSB+Stride1002" = add nuw i64 %CurrSBIndex..3, 12032
  br label %SyncBB985

SyncBB987.preheader:                              ; preds = %SyncBB985, %thenBB
  %currBarrier.0.ph = phi i32 [ %currBarrier.1, %thenBB ], [ 13, %SyncBB985 ]
  %CurrSBIndex..1.ph = phi i64 [ %"loadedCurrSB+Stride", %thenBB ], [ 0, %SyncBB985 ]
  %CurrWI..1.ph = phi i64 [ %"CurrWI++", %thenBB ], [ 0, %SyncBB985 ]
  br label %SyncBB987

SyncBB987:                                        ; preds = %thenBB989, %SyncBB987.preheader
  %CurrSBIndex..1 = phi i64 [ %"loadedCurrSB+Stride995", %thenBB989 ], [ %CurrSBIndex..1.ph, %SyncBB987.preheader ]
  %CurrWI..1 = phi i64 [ %"CurrWI++993", %thenBB989 ], [ %CurrWI..1.ph, %SyncBB987.preheader ]
  %"&(pSB[currWI].offset)403" = add nuw i64 %CurrSBIndex..1, 648
  %"&pSB[currWI].offset404" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)403"
  %CastToValueType405 = bitcast i8* %"&pSB[currWI].offset404" to i32*
  %loadedValue406 = load i32* %CastToValueType405, align 4
  %1375 = icmp slt i32 %loadedValue406, %k
  %"&(pSB[currWI].offset)394" = add nuw i64 %CurrSBIndex..1, 640
  %"&pSB[currWI].offset395" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)394"
  %CastToValueType396 = bitcast i8* %"&pSB[currWI].offset395" to i64*
  %loadedValue397 = load i64* %CastToValueType396, align 8
  %indvar.next45 = add i64 %loadedValue397, 1
  %"&(pSB[currWI].offset)852" = add nuw i64 %CurrSBIndex..1, 784
  %"&pSB[currWI].offset853" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)852"
  %CastToValueType854 = bitcast i8* %"&pSB[currWI].offset853" to i64*
  store i64 %indvar.next45, i64* %CastToValueType854, align 8
  br i1 %1375, label %.loopexit, label %bb.nph

bb.nph:                                           ; preds = %SyncBB987
  %"&(pSB[currWI].offset)241" = add nuw i64 %CurrSBIndex..1, 504
  %"&pSB[currWI].offset242" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)241"
  %CastToValueType243 = bitcast i8* %"&pSB[currWI].offset242" to i32*
  %loadedValue244 = load i32* %CastToValueType243, align 4
  %tmp28 = add i32 %tmp25, %loadedValue244
  %"&(pSB[currWI].offset)161" = add nuw i64 %CurrSBIndex..1, 432
  %"&pSB[currWI].offset162" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)161"
  %CastToValueType163 = bitcast i8* %"&pSB[currWI].offset162" to i32*
  %loadedValue = load i32* %CastToValueType163, align 4
  %tmp30 = add i32 %tmp28, %loadedValue
  %tmp33 = add i32 %tmp30, %tmp81
  %tmp34 = sext i32 %tmp33 to i64
  %"&(pSB[currWI].offset)860" = add nuw i64 %CurrSBIndex..1, 800
  %"&pSB[currWI].offset861" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)860"
  %CastToValueType862 = bitcast i8* %"&pSB[currWI].offset861" to [16 x double]*
  br label %1376

; <label>:1376                                    ; preds = %1376, %bb.nph
  %indvar = phi i64 [ 0, %bb.nph ], [ %indvar.next, %1376 ]
  %scevgep = getelementptr [16 x double]* %CastToValueType862, i64 0, i64 %indvar
  %tmp22 = mul i64 %tmp, %indvar
  %tmp35 = add i64 %tmp34, %tmp22
  %.0214 = getelementptr double addrspace(1)* %C, i64 %tmp35
  %1377 = load double* %scevgep, align 8
  %1378 = fmul double %1377, %alpha
  %1379 = load double addrspace(1)* %.0214, align 8
  %1380 = fmul double %1379, %beta
  %1381 = fadd double %1378, %1380
  store double %1381, double addrspace(1)* %.0214, align 8
  %indvar.next = add i64 %indvar, 1
  %exitcond = icmp eq i64 %indvar.next, 16
  br i1 %exitcond, label %._crit_edge, label %1376

._crit_edge:                                      ; preds = %1376
  %check.WI.iter992 = icmp ult i64 %CurrWI..1, %iterCount
  br i1 %check.WI.iter992, label %thenBB989, label %SyncBB986

thenBB989:                                        ; preds = %._crit_edge
  %"CurrWI++993" = add nuw i64 %CurrWI..1, 1
  %"loadedCurrSB+Stride995" = add nuw i64 %CurrSBIndex..1, 12032
  br label %SyncBB987

SyncBB986:                                        ; preds = %._crit_edge
  ret void
}

define void @____Vectorized_.sgemmNT_separated_args(double addrspace(1)* nocapture %A, i32 %lda, double addrspace(1)* nocapture %B, i32 %ldb, double addrspace(1)* nocapture %C, i32 %ldc, i32 %k, double %alpha, double %beta, i8 addrspace(3)* %pLocalMem, %struct.WorkDim* %pWorkDim, i64* %pWGId, %struct.PaddedDimId* %pBaseGlbId, %struct.PaddedDimId* %pLocalIds, i64* %contextpointer, i64 %iterCount, i8* %pSpecialBuf, i64* %pCurrWI) nounwind alwaysinline {
.preheader:
  %0 = bitcast i8 addrspace(3)* %pLocalMem to [4 x [16 x double]] addrspace(3)*
  %1 = bitcast i8 addrspace(3)* %pLocalMem to double addrspace(3)*
  %2 = getelementptr i8 addrspace(3)* %pLocalMem, i64 8
  %3 = bitcast i8 addrspace(3)* %2 to double addrspace(3)*
  %4 = getelementptr i8 addrspace(3)* %pLocalMem, i64 16
  %5 = bitcast i8 addrspace(3)* %4 to double addrspace(3)*
  %6 = getelementptr i8 addrspace(3)* %pLocalMem, i64 24
  %7 = bitcast i8 addrspace(3)* %6 to double addrspace(3)*
  %8 = getelementptr i8 addrspace(3)* %pLocalMem, i64 32
  %9 = bitcast i8 addrspace(3)* %8 to double addrspace(3)*
  %10 = getelementptr i8 addrspace(3)* %pLocalMem, i64 40
  %11 = bitcast i8 addrspace(3)* %10 to double addrspace(3)*
  %12 = getelementptr i8 addrspace(3)* %pLocalMem, i64 48
  %13 = bitcast i8 addrspace(3)* %12 to double addrspace(3)*
  %14 = getelementptr i8 addrspace(3)* %pLocalMem, i64 56
  %15 = bitcast i8 addrspace(3)* %14 to double addrspace(3)*
  %16 = getelementptr i8 addrspace(3)* %pLocalMem, i64 64
  %17 = bitcast i8 addrspace(3)* %16 to double addrspace(3)*
  %18 = getelementptr i8 addrspace(3)* %pLocalMem, i64 72
  %19 = bitcast i8 addrspace(3)* %18 to double addrspace(3)*
  %20 = getelementptr i8 addrspace(3)* %pLocalMem, i64 80
  %21 = bitcast i8 addrspace(3)* %20 to double addrspace(3)*
  %22 = getelementptr i8 addrspace(3)* %pLocalMem, i64 88
  %23 = bitcast i8 addrspace(3)* %22 to double addrspace(3)*
  %24 = getelementptr i8 addrspace(3)* %pLocalMem, i64 96
  %25 = bitcast i8 addrspace(3)* %24 to double addrspace(3)*
  %26 = getelementptr i8 addrspace(3)* %pLocalMem, i64 104
  %27 = bitcast i8 addrspace(3)* %26 to double addrspace(3)*
  %28 = getelementptr i8 addrspace(3)* %pLocalMem, i64 112
  %29 = bitcast i8 addrspace(3)* %28 to double addrspace(3)*
  %30 = getelementptr i8 addrspace(3)* %pLocalMem, i64 120
  %31 = bitcast i8 addrspace(3)* %30 to double addrspace(3)*
  %32 = getelementptr i8 addrspace(3)* %pLocalMem, i64 128
  %33 = bitcast i8 addrspace(3)* %32 to double addrspace(3)*
  %34 = getelementptr i8 addrspace(3)* %pLocalMem, i64 136
  %35 = bitcast i8 addrspace(3)* %34 to double addrspace(3)*
  %36 = getelementptr i8 addrspace(3)* %pLocalMem, i64 144
  %37 = bitcast i8 addrspace(3)* %36 to double addrspace(3)*
  %38 = getelementptr i8 addrspace(3)* %pLocalMem, i64 152
  %39 = bitcast i8 addrspace(3)* %38 to double addrspace(3)*
  %40 = getelementptr i8 addrspace(3)* %pLocalMem, i64 160
  %41 = bitcast i8 addrspace(3)* %40 to double addrspace(3)*
  %42 = getelementptr i8 addrspace(3)* %pLocalMem, i64 168
  %43 = bitcast i8 addrspace(3)* %42 to double addrspace(3)*
  %44 = getelementptr i8 addrspace(3)* %pLocalMem, i64 176
  %45 = bitcast i8 addrspace(3)* %44 to double addrspace(3)*
  %46 = getelementptr i8 addrspace(3)* %pLocalMem, i64 184
  %47 = bitcast i8 addrspace(3)* %46 to double addrspace(3)*
  %48 = getelementptr i8 addrspace(3)* %pLocalMem, i64 192
  %49 = bitcast i8 addrspace(3)* %48 to double addrspace(3)*
  %50 = getelementptr i8 addrspace(3)* %pLocalMem, i64 200
  %51 = bitcast i8 addrspace(3)* %50 to double addrspace(3)*
  %52 = getelementptr i8 addrspace(3)* %pLocalMem, i64 208
  %53 = bitcast i8 addrspace(3)* %52 to double addrspace(3)*
  %54 = getelementptr i8 addrspace(3)* %pLocalMem, i64 216
  %55 = bitcast i8 addrspace(3)* %54 to double addrspace(3)*
  %56 = getelementptr i8 addrspace(3)* %pLocalMem, i64 224
  %57 = bitcast i8 addrspace(3)* %56 to double addrspace(3)*
  %58 = getelementptr i8 addrspace(3)* %pLocalMem, i64 232
  %59 = bitcast i8 addrspace(3)* %58 to double addrspace(3)*
  %60 = getelementptr i8 addrspace(3)* %pLocalMem, i64 240
  %61 = bitcast i8 addrspace(3)* %60 to double addrspace(3)*
  %62 = getelementptr i8 addrspace(3)* %pLocalMem, i64 248
  %63 = bitcast i8 addrspace(3)* %62 to double addrspace(3)*
  %64 = getelementptr i8 addrspace(3)* %pLocalMem, i64 256
  %65 = bitcast i8 addrspace(3)* %64 to double addrspace(3)*
  %66 = getelementptr i8 addrspace(3)* %pLocalMem, i64 264
  %67 = bitcast i8 addrspace(3)* %66 to double addrspace(3)*
  %68 = getelementptr i8 addrspace(3)* %pLocalMem, i64 272
  %69 = bitcast i8 addrspace(3)* %68 to double addrspace(3)*
  %70 = getelementptr i8 addrspace(3)* %pLocalMem, i64 280
  %71 = bitcast i8 addrspace(3)* %70 to double addrspace(3)*
  %72 = getelementptr i8 addrspace(3)* %pLocalMem, i64 288
  %73 = bitcast i8 addrspace(3)* %72 to double addrspace(3)*
  %74 = getelementptr i8 addrspace(3)* %pLocalMem, i64 296
  %75 = bitcast i8 addrspace(3)* %74 to double addrspace(3)*
  %76 = getelementptr i8 addrspace(3)* %pLocalMem, i64 304
  %77 = bitcast i8 addrspace(3)* %76 to double addrspace(3)*
  %78 = getelementptr i8 addrspace(3)* %pLocalMem, i64 312
  %79 = bitcast i8 addrspace(3)* %78 to double addrspace(3)*
  %80 = getelementptr i8 addrspace(3)* %pLocalMem, i64 320
  %81 = bitcast i8 addrspace(3)* %80 to double addrspace(3)*
  %82 = getelementptr i8 addrspace(3)* %pLocalMem, i64 328
  %83 = bitcast i8 addrspace(3)* %82 to double addrspace(3)*
  %84 = getelementptr i8 addrspace(3)* %pLocalMem, i64 336
  %85 = bitcast i8 addrspace(3)* %84 to double addrspace(3)*
  %86 = getelementptr i8 addrspace(3)* %pLocalMem, i64 344
  %87 = bitcast i8 addrspace(3)* %86 to double addrspace(3)*
  %88 = getelementptr i8 addrspace(3)* %pLocalMem, i64 352
  %89 = bitcast i8 addrspace(3)* %88 to double addrspace(3)*
  %90 = getelementptr i8 addrspace(3)* %pLocalMem, i64 360
  %91 = bitcast i8 addrspace(3)* %90 to double addrspace(3)*
  %92 = getelementptr i8 addrspace(3)* %pLocalMem, i64 368
  %93 = bitcast i8 addrspace(3)* %92 to double addrspace(3)*
  %94 = getelementptr i8 addrspace(3)* %pLocalMem, i64 376
  %95 = bitcast i8 addrspace(3)* %94 to double addrspace(3)*
  %96 = getelementptr i8 addrspace(3)* %pLocalMem, i64 384
  %97 = bitcast i8 addrspace(3)* %96 to double addrspace(3)*
  %98 = getelementptr i8 addrspace(3)* %pLocalMem, i64 392
  %99 = bitcast i8 addrspace(3)* %98 to double addrspace(3)*
  %100 = getelementptr i8 addrspace(3)* %pLocalMem, i64 400
  %101 = bitcast i8 addrspace(3)* %100 to double addrspace(3)*
  %102 = getelementptr i8 addrspace(3)* %pLocalMem, i64 408
  %103 = bitcast i8 addrspace(3)* %102 to double addrspace(3)*
  %104 = getelementptr i8 addrspace(3)* %pLocalMem, i64 416
  %105 = bitcast i8 addrspace(3)* %104 to double addrspace(3)*
  %106 = getelementptr i8 addrspace(3)* %pLocalMem, i64 424
  %107 = bitcast i8 addrspace(3)* %106 to double addrspace(3)*
  %108 = getelementptr i8 addrspace(3)* %pLocalMem, i64 432
  %109 = bitcast i8 addrspace(3)* %108 to double addrspace(3)*
  %110 = getelementptr i8 addrspace(3)* %pLocalMem, i64 440
  %111 = bitcast i8 addrspace(3)* %110 to double addrspace(3)*
  %112 = getelementptr i8 addrspace(3)* %pLocalMem, i64 448
  %113 = bitcast i8 addrspace(3)* %112 to double addrspace(3)*
  %114 = getelementptr i8 addrspace(3)* %pLocalMem, i64 456
  %115 = bitcast i8 addrspace(3)* %114 to double addrspace(3)*
  %116 = getelementptr i8 addrspace(3)* %pLocalMem, i64 464
  %117 = bitcast i8 addrspace(3)* %116 to double addrspace(3)*
  %118 = getelementptr i8 addrspace(3)* %pLocalMem, i64 472
  %119 = bitcast i8 addrspace(3)* %118 to double addrspace(3)*
  %120 = getelementptr i8 addrspace(3)* %pLocalMem, i64 480
  %121 = bitcast i8 addrspace(3)* %120 to double addrspace(3)*
  %122 = getelementptr i8 addrspace(3)* %pLocalMem, i64 488
  %123 = bitcast i8 addrspace(3)* %122 to double addrspace(3)*
  %124 = getelementptr i8 addrspace(3)* %pLocalMem, i64 496
  %125 = bitcast i8 addrspace(3)* %124 to double addrspace(3)*
  %126 = getelementptr i8 addrspace(3)* %pLocalMem, i64 504
  %127 = bitcast i8 addrspace(3)* %126 to double addrspace(3)*
  %128 = sext i32 %lda to i64
  %temp38 = insertelement <16 x i64> undef, i64 %128, i32 0
  %vector39 = shufflevector <16 x i64> %temp38, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp95.2 = shl i32 %lda, 1
  %129 = sext i32 %tmp95.2 to i64
  %temp58 = insertelement <16 x i64> undef, i64 %129, i32 0
  %vector59 = shufflevector <16 x i64> %temp58, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp95.3 = mul i32 %lda, 3
  %130 = sext i32 %tmp95.3 to i64
  %temp78 = insertelement <16 x i64> undef, i64 %130, i32 0
  %vector79 = shufflevector <16 x i64> %temp78, <16 x i64> undef, <16 x i32> zeroinitializer
  %131 = mul nsw i32 %k, %ldb
  %tmp37 = shl i32 %ldb, 2
  %tmp38 = zext i32 %tmp37 to i64
  %tmp40 = shl i32 %ldb, 3
  %tmp41 = zext i32 %tmp40 to i64
  %tmp44 = sext i32 %tmp37 to i64
  %temp115 = insertelement <16 x i64> undef, i64 %tmp44, i32 0
  %vector116 = shufflevector <16 x i64> %temp115, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp57 = shl i32 %lda, 2
  %tmp58 = sext i32 %tmp57 to i64
  %temp120 = insertelement <16 x i64> undef, i64 %tmp58, i32 0
  %vector121 = shufflevector <16 x i64> %temp120, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp69 = mul i32 %lda, 3
  %tmp70 = sext i32 %tmp69 to i64
  %tmp71 = add i64 %tmp58, %tmp70
  %temp123 = insertelement <16 x i64> undef, i64 %tmp71, i32 0
  %vector124 = shufflevector <16 x i64> %temp123, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp75 = shl i32 %lda, 1
  %tmp76 = sext i32 %tmp75 to i64
  %tmp77 = add i64 %tmp58, %tmp76
  %temp126 = insertelement <16 x i64> undef, i64 %tmp77, i32 0
  %vector127 = shufflevector <16 x i64> %temp126, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp81 = sext i32 %lda to i64
  %tmp82 = add i64 %tmp81, %tmp58
  %temp129 = insertelement <16 x i64> undef, i64 %tmp82, i32 0
  %vector130 = shufflevector <16 x i64> %temp129, <16 x i64> undef, <16 x i32> zeroinitializer
  br label %SyncBB4620

SyncBB4620:                                       ; preds = %thenBB, %.preheader
  %currBarrier.2 = phi i32 [ 17, %.preheader ], [ %currBarrier.1, %thenBB ]
  %CurrSBIndex..0 = phi i64 [ 0, %.preheader ], [ %"loadedCurrSB+Stride", %thenBB ]
  %CurrWI..0 = phi i64 [ 0, %.preheader ], [ %"CurrWI++", %thenBB ]
  %132 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %133 = load i64* %132, align 8
  %broadcast1 = insertelement <16 x i64> undef, i64 %133, i32 0
  %broadcast2 = shufflevector <16 x i64> %broadcast1, <16 x i64> undef, <16 x i32> zeroinitializer
  %134 = add <16 x i64> %broadcast2, <i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8, i64 9, i64 10, i64 11, i64 12, i64 13, i64 14, i64 15>
  %135 = trunc <16 x i64> %134 to <16 x i32>
  %"&(pSB[currWI].offset)" = add nuw i64 %CurrSBIndex..0, 960
  %"&pSB[currWI].offset" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)"
  %CastToValueType = bitcast i8* %"&pSB[currWI].offset" to <16 x i32>*
  store <16 x i32> %135, <16 x i32>* %CastToValueType, align 64
  %136 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 1
  %137 = load i64* %136, align 8
  %138 = trunc i64 %137 to i32
  %139 = load i64* %pWGId, align 8
  %140 = shl i64 %139, 6
  %141 = trunc i64 %140 to i32
  %temp1 = insertelement <16 x i32> undef, i32 %141, i32 0
  %vector2 = shufflevector <16 x i32> %temp1, <16 x i32> undef, <16 x i32> zeroinitializer
  %142 = getelementptr i64* %pWGId, i64 1
  %143 = load i64* %142, align 8
  %144 = shl i64 %143, 4
  %145 = trunc i64 %144 to i32
  %temp5 = insertelement <16 x i32> undef, i32 %145, i32 0
  %vector6 = shufflevector <16 x i32> %temp5, <16 x i32> undef, <16 x i32> zeroinitializer
  %146 = shl i32 %138, 4
  %"&(pSB[currWI].offset)1565" = add nuw i64 %CurrSBIndex..0, 1024
  %"&pSB[currWI].offset1566" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1565"
  %CastToValueType1567 = bitcast i8* %"&pSB[currWI].offset1566" to i32*
  store i32 %146, i32* %CastToValueType1567, align 4
  %temp = insertelement <16 x i32> undef, i32 %146, i32 0
  %vector = shufflevector <16 x i32> %temp, <16 x i32> undef, <16 x i32> zeroinitializer
  %147 = add nsw <16 x i32> %vector, %135
  %148 = add nsw <16 x i32> %vector2, %147
  %149 = sext <16 x i32> %148 to <16 x i64>
  %150 = mul nsw i32 %138, %ldb
  %temp3 = insertelement <16 x i32> undef, i32 %150, i32 0
  %vector4 = shufflevector <16 x i32> %temp3, <16 x i32> undef, <16 x i32> zeroinitializer
  %151 = add nsw <16 x i32> %vector4, %135
  %152 = add nsw <16 x i32> %151, %vector6
  %153 = sext <16 x i32> %152 to <16 x i64>
  %154 = extractelement <16 x i32> %152, i32 0
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds double addrspace(1)* %B, i64 %155
  %157 = extractelement <16 x i32> %148, i32 0
  %158 = sext i32 %157 to i64
  %159 = getelementptr inbounds double addrspace(1)* %A, i64 %158
  %ptrTypeCast = bitcast double addrspace(1)* %159 to <16 x double> addrspace(1)*
  %160 = load <16 x double> addrspace(1)* %ptrTypeCast, align 8
  %"&(pSB[currWI].offset)1574" = add nuw i64 %CurrSBIndex..0, 1152
  %"&pSB[currWI].offset1575" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1574"
  %CastToValueType1576 = bitcast i8* %"&pSB[currWI].offset1575" to <16 x double>*
  store <16 x double> %160, <16 x double>* %CastToValueType1576, align 128
  %.sum4.140 = add <16 x i64> %vector39, %149
  %extract41 = extractelement <16 x i64> %.sum4.140, i32 0
  %161 = getelementptr inbounds double addrspace(1)* %A, i64 %extract41
  %ptrTypeCast57 = bitcast double addrspace(1)* %161 to <16 x double> addrspace(1)*
  %162 = load <16 x double> addrspace(1)* %ptrTypeCast57, align 8
  %"&(pSB[currWI].offset)1578" = add nuw i64 %CurrSBIndex..0, 1280
  %"&pSB[currWI].offset1579" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1578"
  %CastToValueType1580 = bitcast i8* %"&pSB[currWI].offset1579" to <16 x double>*
  store <16 x double> %162, <16 x double>* %CastToValueType1580, align 128
  %.sum4.260 = add <16 x i64> %vector59, %149
  %extract61 = extractelement <16 x i64> %.sum4.260, i32 0
  %163 = getelementptr inbounds double addrspace(1)* %A, i64 %extract61
  %ptrTypeCast77 = bitcast double addrspace(1)* %163 to <16 x double> addrspace(1)*
  %164 = load <16 x double> addrspace(1)* %ptrTypeCast77, align 8
  %"&(pSB[currWI].offset)1582" = add nuw i64 %CurrSBIndex..0, 1408
  %"&pSB[currWI].offset1583" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1582"
  %CastToValueType1584 = bitcast i8* %"&pSB[currWI].offset1583" to <16 x double>*
  store <16 x double> %164, <16 x double>* %CastToValueType1584, align 128
  %.sum4.380 = add <16 x i64> %vector79, %149
  %extract81 = extractelement <16 x i64> %.sum4.380, i32 0
  %165 = getelementptr inbounds double addrspace(1)* %A, i64 %extract81
  %ptrTypeCast97 = bitcast double addrspace(1)* %165 to <16 x double> addrspace(1)*
  %166 = load <16 x double> addrspace(1)* %ptrTypeCast97, align 8
  %"&(pSB[currWI].offset)1586" = add nuw i64 %CurrSBIndex..0, 1536
  %"&pSB[currWI].offset1587" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1586"
  %CastToValueType1588 = bitcast i8* %"&pSB[currWI].offset1587" to <16 x double>*
  store <16 x double> %166, <16 x double>* %CastToValueType1588, align 128
  %ptrTypeCast98 = bitcast double addrspace(1)* %156 to <16 x double> addrspace(1)*
  %167 = load <16 x double> addrspace(1)* %ptrTypeCast98, align 8
  %"&(pSB[currWI].offset)1590" = add nuw i64 %CurrSBIndex..0, 1664
  %"&pSB[currWI].offset1591" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1590"
  %CastToValueType1592 = bitcast i8* %"&pSB[currWI].offset1591" to <16 x double>*
  store <16 x double> %167, <16 x double>* %CastToValueType1592, align 128
  %"&(pSB[currWI].offset)2494" = add nuw i64 %CurrSBIndex..0, 3856
  %"&pSB[currWI].offset2495" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2494"
  %"&(pSB[currWI].offset)2566" = add nuw i64 %CurrSBIndex..0, 3984
  %"&pSB[currWI].offset2567" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2566"
  %"&(pSB[currWI].offset)2638" = add nuw i64 %CurrSBIndex..0, 4112
  %"&pSB[currWI].offset2639" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2638"
  %"&(pSB[currWI].offset)2710" = add nuw i64 %CurrSBIndex..0, 4240
  %"&pSB[currWI].offset2711" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2710"
  %"&(pSB[currWI].offset)2782" = add nuw i64 %CurrSBIndex..0, 4368
  %"&pSB[currWI].offset2783" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2782"
  %"&(pSB[currWI].offset)2854" = add nuw i64 %CurrSBIndex..0, 4496
  %"&pSB[currWI].offset2855" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2854"
  %"&(pSB[currWI].offset)2926" = add nuw i64 %CurrSBIndex..0, 4624
  %"&pSB[currWI].offset2927" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2926"
  %"&(pSB[currWI].offset)2998" = add nuw i64 %CurrSBIndex..0, 4752
  %"&pSB[currWI].offset2999" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2998"
  %"&(pSB[currWI].offset)3070" = add nuw i64 %CurrSBIndex..0, 4880
  %"&pSB[currWI].offset3071" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3070"
  %"&(pSB[currWI].offset)3142" = add nuw i64 %CurrSBIndex..0, 5008
  %"&pSB[currWI].offset3143" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3142"
  %"&(pSB[currWI].offset)3214" = add nuw i64 %CurrSBIndex..0, 5136
  %"&pSB[currWI].offset3215" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3214"
  %"&(pSB[currWI].offset)3286" = add nuw i64 %CurrSBIndex..0, 5264
  %"&pSB[currWI].offset3287" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3286"
  %"&(pSB[currWI].offset)3358" = add nuw i64 %CurrSBIndex..0, 5392
  %"&pSB[currWI].offset3359" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3358"
  %"&(pSB[currWI].offset)3430" = add nuw i64 %CurrSBIndex..0, 5520
  %"&pSB[currWI].offset3431" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3430"
  %"&(pSB[currWI].offset)3502" = add nuw i64 %CurrSBIndex..0, 5648
  %"&pSB[currWI].offset3503" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3502"
  %"&(pSB[currWI].offset)3574" = add nuw i64 %CurrSBIndex..0, 5776
  %"&pSB[currWI].offset3575" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3574"
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset2495", i8 0, i64 128, i32 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset2567", i8 0, i64 128, i32 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset2639", i8 0, i64 128, i32 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset2711", i8 0, i64 128, i32 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset2783", i8 0, i64 128, i32 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset2855", i8 0, i64 128, i32 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset2927", i8 0, i64 128, i32 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset2999", i8 0, i64 128, i32 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3071", i8 0, i64 128, i32 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3143", i8 0, i64 128, i32 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3215", i8 0, i64 128, i32 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3287", i8 0, i64 128, i32 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3359", i8 0, i64 128, i32 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3431", i8 0, i64 128, i32 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3503", i8 0, i64 128, i32 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3575", i8 0, i64 128, i32 16, i1 false)
  %168 = extractelement <16 x i32> %135, i32 0
  %extract99 = sext i32 %168 to i64
  %169 = sext i32 %138 to i64
  %170 = getelementptr inbounds [4 x [16 x double]] addrspace(3)* %0, i64 0, i64 %169, i64 %extract99
  %"&(pSB[currWI].offset)1594" = add nuw i64 %CurrSBIndex..0, 1792
  %"&pSB[currWI].offset1595" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1594"
  %CastToValueType1596 = bitcast i8* %"&pSB[currWI].offset1595" to double addrspace(3)**
  store double addrspace(3)* %170, double addrspace(3)** %CastToValueType1596, align 8
  %"&(pSB[currWI].offset)2490" = add nuw i64 %CurrSBIndex..0, 3856
  %"&pSB[currWI].offset2491" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2490"
  %171 = bitcast i8* %"&pSB[currWI].offset2491" to double*
  %"&(pSB[currWI].offset)2562" = add nuw i64 %CurrSBIndex..0, 3984
  %"&pSB[currWI].offset2563" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2562"
  %172 = bitcast i8* %"&pSB[currWI].offset2563" to double*
  %"&(pSB[currWI].offset)2634" = add nuw i64 %CurrSBIndex..0, 4112
  %"&pSB[currWI].offset2635" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2634"
  %173 = bitcast i8* %"&pSB[currWI].offset2635" to double*
  %"&(pSB[currWI].offset)2706" = add nuw i64 %CurrSBIndex..0, 4240
  %"&pSB[currWI].offset2707" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2706"
  %174 = bitcast i8* %"&pSB[currWI].offset2707" to double*
  %"&(pSB[currWI].offset)2778" = add nuw i64 %CurrSBIndex..0, 4368
  %"&pSB[currWI].offset2779" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2778"
  %175 = bitcast i8* %"&pSB[currWI].offset2779" to double*
  %"&(pSB[currWI].offset)2850" = add nuw i64 %CurrSBIndex..0, 4496
  %"&pSB[currWI].offset2851" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2850"
  %176 = bitcast i8* %"&pSB[currWI].offset2851" to double*
  %"&(pSB[currWI].offset)2922" = add nuw i64 %CurrSBIndex..0, 4624
  %"&pSB[currWI].offset2923" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2922"
  %177 = bitcast i8* %"&pSB[currWI].offset2923" to double*
  %"&(pSB[currWI].offset)2994" = add nuw i64 %CurrSBIndex..0, 4752
  %"&pSB[currWI].offset2995" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2994"
  %178 = bitcast i8* %"&pSB[currWI].offset2995" to double*
  %"&(pSB[currWI].offset)3066" = add nuw i64 %CurrSBIndex..0, 4880
  %"&pSB[currWI].offset3067" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3066"
  %179 = bitcast i8* %"&pSB[currWI].offset3067" to double*
  %"&(pSB[currWI].offset)3138" = add nuw i64 %CurrSBIndex..0, 5008
  %"&pSB[currWI].offset3139" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3138"
  %180 = bitcast i8* %"&pSB[currWI].offset3139" to double*
  %"&(pSB[currWI].offset)3210" = add nuw i64 %CurrSBIndex..0, 5136
  %"&pSB[currWI].offset3211" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3210"
  %181 = bitcast i8* %"&pSB[currWI].offset3211" to double*
  %"&(pSB[currWI].offset)3282" = add nuw i64 %CurrSBIndex..0, 5264
  %"&pSB[currWI].offset3283" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3282"
  %182 = bitcast i8* %"&pSB[currWI].offset3283" to double*
  %"&(pSB[currWI].offset)3354" = add nuw i64 %CurrSBIndex..0, 5392
  %"&pSB[currWI].offset3355" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3354"
  %183 = bitcast i8* %"&pSB[currWI].offset3355" to double*
  %"&(pSB[currWI].offset)3426" = add nuw i64 %CurrSBIndex..0, 5520
  %"&pSB[currWI].offset3427" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3426"
  %184 = bitcast i8* %"&pSB[currWI].offset3427" to double*
  %"&(pSB[currWI].offset)3498" = add nuw i64 %CurrSBIndex..0, 5648
  %"&pSB[currWI].offset3499" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3498"
  %185 = bitcast i8* %"&pSB[currWI].offset3499" to double*
  %"&(pSB[currWI].offset)3570" = add nuw i64 %CurrSBIndex..0, 5776
  %"&pSB[currWI].offset3571" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3570"
  %186 = bitcast i8* %"&pSB[currWI].offset3571" to double*
  %"&pSB[currWI].offset2487.sum" = add i64 %CurrSBIndex..0, 3864
  %187 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2487.sum"
  %188 = bitcast i8* %187 to double*
  %"&pSB[currWI].offset2559.sum" = add i64 %CurrSBIndex..0, 3992
  %189 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2559.sum"
  %190 = bitcast i8* %189 to double*
  %"&pSB[currWI].offset2631.sum" = add i64 %CurrSBIndex..0, 4120
  %191 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2631.sum"
  %192 = bitcast i8* %191 to double*
  %"&pSB[currWI].offset2703.sum" = add i64 %CurrSBIndex..0, 4248
  %193 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2703.sum"
  %194 = bitcast i8* %193 to double*
  %"&pSB[currWI].offset2775.sum" = add i64 %CurrSBIndex..0, 4376
  %195 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2775.sum"
  %196 = bitcast i8* %195 to double*
  %"&pSB[currWI].offset2847.sum" = add i64 %CurrSBIndex..0, 4504
  %197 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2847.sum"
  %198 = bitcast i8* %197 to double*
  %"&pSB[currWI].offset2919.sum" = add i64 %CurrSBIndex..0, 4632
  %199 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2919.sum"
  %200 = bitcast i8* %199 to double*
  %"&pSB[currWI].offset2991.sum" = add i64 %CurrSBIndex..0, 4760
  %201 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2991.sum"
  %202 = bitcast i8* %201 to double*
  %"&pSB[currWI].offset3063.sum" = add i64 %CurrSBIndex..0, 4888
  %203 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3063.sum"
  %204 = bitcast i8* %203 to double*
  %"&pSB[currWI].offset3135.sum" = add i64 %CurrSBIndex..0, 5016
  %205 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3135.sum"
  %206 = bitcast i8* %205 to double*
  %"&pSB[currWI].offset3207.sum" = add i64 %CurrSBIndex..0, 5144
  %207 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3207.sum"
  %208 = bitcast i8* %207 to double*
  %"&pSB[currWI].offset3279.sum" = add i64 %CurrSBIndex..0, 5272
  %209 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3279.sum"
  %210 = bitcast i8* %209 to double*
  %"&pSB[currWI].offset3351.sum" = add i64 %CurrSBIndex..0, 5400
  %211 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3351.sum"
  %212 = bitcast i8* %211 to double*
  %"&pSB[currWI].offset3423.sum" = add i64 %CurrSBIndex..0, 5528
  %213 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3423.sum"
  %214 = bitcast i8* %213 to double*
  %"&pSB[currWI].offset3495.sum" = add i64 %CurrSBIndex..0, 5656
  %215 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3495.sum"
  %216 = bitcast i8* %215 to double*
  %"&pSB[currWI].offset3567.sum" = add i64 %CurrSBIndex..0, 5784
  %217 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3567.sum"
  %218 = bitcast i8* %217 to double*
  %"&pSB[currWI].offset2483.sum" = add i64 %CurrSBIndex..0, 3872
  %219 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2483.sum"
  %220 = bitcast i8* %219 to double*
  %"&pSB[currWI].offset2555.sum" = add i64 %CurrSBIndex..0, 4000
  %221 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2555.sum"
  %222 = bitcast i8* %221 to double*
  %"&pSB[currWI].offset2627.sum" = add i64 %CurrSBIndex..0, 4128
  %223 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2627.sum"
  %224 = bitcast i8* %223 to double*
  %"&pSB[currWI].offset2699.sum" = add i64 %CurrSBIndex..0, 4256
  %225 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2699.sum"
  %226 = bitcast i8* %225 to double*
  %"&pSB[currWI].offset2771.sum" = add i64 %CurrSBIndex..0, 4384
  %227 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2771.sum"
  %228 = bitcast i8* %227 to double*
  %"&pSB[currWI].offset2843.sum" = add i64 %CurrSBIndex..0, 4512
  %229 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2843.sum"
  %230 = bitcast i8* %229 to double*
  %"&pSB[currWI].offset2915.sum" = add i64 %CurrSBIndex..0, 4640
  %231 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2915.sum"
  %232 = bitcast i8* %231 to double*
  %"&pSB[currWI].offset2987.sum" = add i64 %CurrSBIndex..0, 4768
  %233 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2987.sum"
  %234 = bitcast i8* %233 to double*
  %"&pSB[currWI].offset3059.sum" = add i64 %CurrSBIndex..0, 4896
  %235 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3059.sum"
  %236 = bitcast i8* %235 to double*
  %"&pSB[currWI].offset3131.sum" = add i64 %CurrSBIndex..0, 5024
  %237 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3131.sum"
  %238 = bitcast i8* %237 to double*
  %"&pSB[currWI].offset3203.sum" = add i64 %CurrSBIndex..0, 5152
  %239 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3203.sum"
  %240 = bitcast i8* %239 to double*
  %"&pSB[currWI].offset3275.sum" = add i64 %CurrSBIndex..0, 5280
  %241 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3275.sum"
  %242 = bitcast i8* %241 to double*
  %"&pSB[currWI].offset3347.sum" = add i64 %CurrSBIndex..0, 5408
  %243 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3347.sum"
  %244 = bitcast i8* %243 to double*
  %"&pSB[currWI].offset3419.sum" = add i64 %CurrSBIndex..0, 5536
  %245 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3419.sum"
  %246 = bitcast i8* %245 to double*
  %"&pSB[currWI].offset3491.sum" = add i64 %CurrSBIndex..0, 5664
  %247 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3491.sum"
  %248 = bitcast i8* %247 to double*
  %"&pSB[currWI].offset3563.sum" = add i64 %CurrSBIndex..0, 5792
  %249 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3563.sum"
  %250 = bitcast i8* %249 to double*
  %"&pSB[currWI].offset2479.sum" = add i64 %CurrSBIndex..0, 3880
  %251 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2479.sum"
  %252 = bitcast i8* %251 to double*
  %"&pSB[currWI].offset2551.sum" = add i64 %CurrSBIndex..0, 4008
  %253 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2551.sum"
  %254 = bitcast i8* %253 to double*
  %"&pSB[currWI].offset2623.sum" = add i64 %CurrSBIndex..0, 4136
  %255 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2623.sum"
  %256 = bitcast i8* %255 to double*
  %"&pSB[currWI].offset2695.sum" = add i64 %CurrSBIndex..0, 4264
  %257 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2695.sum"
  %258 = bitcast i8* %257 to double*
  %"&pSB[currWI].offset2767.sum" = add i64 %CurrSBIndex..0, 4392
  %259 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2767.sum"
  %260 = bitcast i8* %259 to double*
  %"&pSB[currWI].offset2839.sum" = add i64 %CurrSBIndex..0, 4520
  %261 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2839.sum"
  %262 = bitcast i8* %261 to double*
  %"&pSB[currWI].offset2911.sum" = add i64 %CurrSBIndex..0, 4648
  %263 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2911.sum"
  %264 = bitcast i8* %263 to double*
  %"&pSB[currWI].offset2983.sum" = add i64 %CurrSBIndex..0, 4776
  %265 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2983.sum"
  %266 = bitcast i8* %265 to double*
  %"&pSB[currWI].offset3055.sum" = add i64 %CurrSBIndex..0, 4904
  %267 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3055.sum"
  %268 = bitcast i8* %267 to double*
  %"&pSB[currWI].offset3127.sum" = add i64 %CurrSBIndex..0, 5032
  %269 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3127.sum"
  %270 = bitcast i8* %269 to double*
  %"&pSB[currWI].offset3199.sum" = add i64 %CurrSBIndex..0, 5160
  %271 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3199.sum"
  %272 = bitcast i8* %271 to double*
  %"&pSB[currWI].offset3271.sum" = add i64 %CurrSBIndex..0, 5288
  %273 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3271.sum"
  %274 = bitcast i8* %273 to double*
  %"&pSB[currWI].offset3343.sum" = add i64 %CurrSBIndex..0, 5416
  %275 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3343.sum"
  %276 = bitcast i8* %275 to double*
  %"&pSB[currWI].offset3415.sum" = add i64 %CurrSBIndex..0, 5544
  %277 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3415.sum"
  %278 = bitcast i8* %277 to double*
  %"&pSB[currWI].offset3487.sum" = add i64 %CurrSBIndex..0, 5672
  %279 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3487.sum"
  %280 = bitcast i8* %279 to double*
  %"&pSB[currWI].offset3559.sum" = add i64 %CurrSBIndex..0, 5800
  %281 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3559.sum"
  %282 = bitcast i8* %281 to double*
  %"&pSB[currWI].offset2475.sum" = add i64 %CurrSBIndex..0, 3888
  %283 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2475.sum"
  %284 = bitcast i8* %283 to double*
  %"&pSB[currWI].offset2547.sum" = add i64 %CurrSBIndex..0, 4016
  %285 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2547.sum"
  %286 = bitcast i8* %285 to double*
  %"&pSB[currWI].offset2619.sum" = add i64 %CurrSBIndex..0, 4144
  %287 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2619.sum"
  %288 = bitcast i8* %287 to double*
  %"&pSB[currWI].offset2691.sum" = add i64 %CurrSBIndex..0, 4272
  %289 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2691.sum"
  %290 = bitcast i8* %289 to double*
  %"&pSB[currWI].offset2763.sum" = add i64 %CurrSBIndex..0, 4400
  %291 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2763.sum"
  %292 = bitcast i8* %291 to double*
  %"&pSB[currWI].offset2835.sum" = add i64 %CurrSBIndex..0, 4528
  %293 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2835.sum"
  %294 = bitcast i8* %293 to double*
  %"&pSB[currWI].offset2907.sum" = add i64 %CurrSBIndex..0, 4656
  %295 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2907.sum"
  %296 = bitcast i8* %295 to double*
  %"&pSB[currWI].offset2979.sum" = add i64 %CurrSBIndex..0, 4784
  %297 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2979.sum"
  %298 = bitcast i8* %297 to double*
  %"&pSB[currWI].offset3051.sum" = add i64 %CurrSBIndex..0, 4912
  %299 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3051.sum"
  %300 = bitcast i8* %299 to double*
  %"&pSB[currWI].offset3123.sum" = add i64 %CurrSBIndex..0, 5040
  %301 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3123.sum"
  %302 = bitcast i8* %301 to double*
  %"&pSB[currWI].offset3195.sum" = add i64 %CurrSBIndex..0, 5168
  %303 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3195.sum"
  %304 = bitcast i8* %303 to double*
  %"&pSB[currWI].offset3267.sum" = add i64 %CurrSBIndex..0, 5296
  %305 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3267.sum"
  %306 = bitcast i8* %305 to double*
  %"&pSB[currWI].offset3339.sum" = add i64 %CurrSBIndex..0, 5424
  %307 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3339.sum"
  %308 = bitcast i8* %307 to double*
  %"&pSB[currWI].offset3411.sum" = add i64 %CurrSBIndex..0, 5552
  %309 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3411.sum"
  %310 = bitcast i8* %309 to double*
  %"&pSB[currWI].offset3483.sum" = add i64 %CurrSBIndex..0, 5680
  %311 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3483.sum"
  %312 = bitcast i8* %311 to double*
  %"&pSB[currWI].offset3555.sum" = add i64 %CurrSBIndex..0, 5808
  %313 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3555.sum"
  %314 = bitcast i8* %313 to double*
  %"&pSB[currWI].offset2471.sum" = add i64 %CurrSBIndex..0, 3896
  %315 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2471.sum"
  %316 = bitcast i8* %315 to double*
  %"&pSB[currWI].offset2543.sum" = add i64 %CurrSBIndex..0, 4024
  %317 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2543.sum"
  %318 = bitcast i8* %317 to double*
  %"&pSB[currWI].offset2615.sum" = add i64 %CurrSBIndex..0, 4152
  %319 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2615.sum"
  %320 = bitcast i8* %319 to double*
  %"&pSB[currWI].offset2687.sum" = add i64 %CurrSBIndex..0, 4280
  %321 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2687.sum"
  %322 = bitcast i8* %321 to double*
  %"&pSB[currWI].offset2759.sum" = add i64 %CurrSBIndex..0, 4408
  %323 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2759.sum"
  %324 = bitcast i8* %323 to double*
  %"&pSB[currWI].offset2831.sum" = add i64 %CurrSBIndex..0, 4536
  %325 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2831.sum"
  %326 = bitcast i8* %325 to double*
  %"&pSB[currWI].offset2903.sum" = add i64 %CurrSBIndex..0, 4664
  %327 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2903.sum"
  %328 = bitcast i8* %327 to double*
  %"&pSB[currWI].offset2975.sum" = add i64 %CurrSBIndex..0, 4792
  %329 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2975.sum"
  %330 = bitcast i8* %329 to double*
  %"&pSB[currWI].offset3047.sum" = add i64 %CurrSBIndex..0, 4920
  %331 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3047.sum"
  %332 = bitcast i8* %331 to double*
  %"&pSB[currWI].offset3119.sum" = add i64 %CurrSBIndex..0, 5048
  %333 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3119.sum"
  %334 = bitcast i8* %333 to double*
  %"&pSB[currWI].offset3191.sum" = add i64 %CurrSBIndex..0, 5176
  %335 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3191.sum"
  %336 = bitcast i8* %335 to double*
  %"&pSB[currWI].offset3263.sum" = add i64 %CurrSBIndex..0, 5304
  %337 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3263.sum"
  %338 = bitcast i8* %337 to double*
  %"&pSB[currWI].offset3335.sum" = add i64 %CurrSBIndex..0, 5432
  %339 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3335.sum"
  %340 = bitcast i8* %339 to double*
  %"&pSB[currWI].offset3407.sum" = add i64 %CurrSBIndex..0, 5560
  %341 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3407.sum"
  %342 = bitcast i8* %341 to double*
  %"&pSB[currWI].offset3479.sum" = add i64 %CurrSBIndex..0, 5688
  %343 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3479.sum"
  %344 = bitcast i8* %343 to double*
  %"&pSB[currWI].offset3551.sum" = add i64 %CurrSBIndex..0, 5816
  %345 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3551.sum"
  %346 = bitcast i8* %345 to double*
  %"&pSB[currWI].offset2467.sum" = add i64 %CurrSBIndex..0, 3904
  %347 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2467.sum"
  %348 = bitcast i8* %347 to double*
  %"&pSB[currWI].offset2539.sum" = add i64 %CurrSBIndex..0, 4032
  %349 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2539.sum"
  %350 = bitcast i8* %349 to double*
  %"&pSB[currWI].offset2611.sum" = add i64 %CurrSBIndex..0, 4160
  %351 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2611.sum"
  %352 = bitcast i8* %351 to double*
  %"&pSB[currWI].offset2683.sum" = add i64 %CurrSBIndex..0, 4288
  %353 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2683.sum"
  %354 = bitcast i8* %353 to double*
  %"&pSB[currWI].offset2755.sum" = add i64 %CurrSBIndex..0, 4416
  %355 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2755.sum"
  %356 = bitcast i8* %355 to double*
  %"&pSB[currWI].offset2827.sum" = add i64 %CurrSBIndex..0, 4544
  %357 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2827.sum"
  %358 = bitcast i8* %357 to double*
  %"&pSB[currWI].offset2899.sum" = add i64 %CurrSBIndex..0, 4672
  %359 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2899.sum"
  %360 = bitcast i8* %359 to double*
  %"&pSB[currWI].offset2971.sum" = add i64 %CurrSBIndex..0, 4800
  %361 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2971.sum"
  %362 = bitcast i8* %361 to double*
  %"&pSB[currWI].offset3043.sum" = add i64 %CurrSBIndex..0, 4928
  %363 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3043.sum"
  %364 = bitcast i8* %363 to double*
  %"&pSB[currWI].offset3115.sum" = add i64 %CurrSBIndex..0, 5056
  %365 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3115.sum"
  %366 = bitcast i8* %365 to double*
  %"&pSB[currWI].offset3187.sum" = add i64 %CurrSBIndex..0, 5184
  %367 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3187.sum"
  %368 = bitcast i8* %367 to double*
  %"&pSB[currWI].offset3259.sum" = add i64 %CurrSBIndex..0, 5312
  %369 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3259.sum"
  %370 = bitcast i8* %369 to double*
  %"&pSB[currWI].offset3331.sum" = add i64 %CurrSBIndex..0, 5440
  %371 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3331.sum"
  %372 = bitcast i8* %371 to double*
  %"&pSB[currWI].offset3403.sum" = add i64 %CurrSBIndex..0, 5568
  %373 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3403.sum"
  %374 = bitcast i8* %373 to double*
  %"&pSB[currWI].offset3475.sum" = add i64 %CurrSBIndex..0, 5696
  %375 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3475.sum"
  %376 = bitcast i8* %375 to double*
  %"&pSB[currWI].offset3547.sum" = add i64 %CurrSBIndex..0, 5824
  %377 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3547.sum"
  %378 = bitcast i8* %377 to double*
  %"&pSB[currWI].offset2463.sum" = add i64 %CurrSBIndex..0, 3912
  %379 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2463.sum"
  %380 = bitcast i8* %379 to double*
  %"&pSB[currWI].offset2535.sum" = add i64 %CurrSBIndex..0, 4040
  %381 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2535.sum"
  %382 = bitcast i8* %381 to double*
  %"&pSB[currWI].offset2607.sum" = add i64 %CurrSBIndex..0, 4168
  %383 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2607.sum"
  %384 = bitcast i8* %383 to double*
  %"&pSB[currWI].offset2679.sum" = add i64 %CurrSBIndex..0, 4296
  %385 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2679.sum"
  %386 = bitcast i8* %385 to double*
  %"&pSB[currWI].offset2751.sum" = add i64 %CurrSBIndex..0, 4424
  %387 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2751.sum"
  %388 = bitcast i8* %387 to double*
  %"&pSB[currWI].offset2823.sum" = add i64 %CurrSBIndex..0, 4552
  %389 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2823.sum"
  %390 = bitcast i8* %389 to double*
  %"&pSB[currWI].offset2895.sum" = add i64 %CurrSBIndex..0, 4680
  %391 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2895.sum"
  %392 = bitcast i8* %391 to double*
  %"&pSB[currWI].offset2967.sum" = add i64 %CurrSBIndex..0, 4808
  %393 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2967.sum"
  %394 = bitcast i8* %393 to double*
  %"&pSB[currWI].offset3039.sum" = add i64 %CurrSBIndex..0, 4936
  %395 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3039.sum"
  %396 = bitcast i8* %395 to double*
  %"&pSB[currWI].offset3111.sum" = add i64 %CurrSBIndex..0, 5064
  %397 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3111.sum"
  %398 = bitcast i8* %397 to double*
  %"&pSB[currWI].offset3183.sum" = add i64 %CurrSBIndex..0, 5192
  %399 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3183.sum"
  %400 = bitcast i8* %399 to double*
  %"&pSB[currWI].offset3255.sum" = add i64 %CurrSBIndex..0, 5320
  %401 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3255.sum"
  %402 = bitcast i8* %401 to double*
  %"&pSB[currWI].offset3327.sum" = add i64 %CurrSBIndex..0, 5448
  %403 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3327.sum"
  %404 = bitcast i8* %403 to double*
  %"&pSB[currWI].offset3399.sum" = add i64 %CurrSBIndex..0, 5576
  %405 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3399.sum"
  %406 = bitcast i8* %405 to double*
  %"&pSB[currWI].offset3471.sum" = add i64 %CurrSBIndex..0, 5704
  %407 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3471.sum"
  %408 = bitcast i8* %407 to double*
  %"&pSB[currWI].offset3543.sum" = add i64 %CurrSBIndex..0, 5832
  %409 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3543.sum"
  %410 = bitcast i8* %409 to double*
  %"&pSB[currWI].offset2459.sum" = add i64 %CurrSBIndex..0, 3920
  %411 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2459.sum"
  %412 = bitcast i8* %411 to double*
  %"&pSB[currWI].offset2531.sum" = add i64 %CurrSBIndex..0, 4048
  %413 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2531.sum"
  %414 = bitcast i8* %413 to double*
  %"&pSB[currWI].offset2603.sum" = add i64 %CurrSBIndex..0, 4176
  %415 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2603.sum"
  %416 = bitcast i8* %415 to double*
  %"&pSB[currWI].offset2675.sum" = add i64 %CurrSBIndex..0, 4304
  %417 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2675.sum"
  %418 = bitcast i8* %417 to double*
  %"&pSB[currWI].offset2747.sum" = add i64 %CurrSBIndex..0, 4432
  %419 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2747.sum"
  %420 = bitcast i8* %419 to double*
  %"&pSB[currWI].offset2819.sum" = add i64 %CurrSBIndex..0, 4560
  %421 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2819.sum"
  %422 = bitcast i8* %421 to double*
  %"&pSB[currWI].offset2891.sum" = add i64 %CurrSBIndex..0, 4688
  %423 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2891.sum"
  %424 = bitcast i8* %423 to double*
  %"&pSB[currWI].offset2963.sum" = add i64 %CurrSBIndex..0, 4816
  %425 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2963.sum"
  %426 = bitcast i8* %425 to double*
  %"&pSB[currWI].offset3035.sum" = add i64 %CurrSBIndex..0, 4944
  %427 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3035.sum"
  %428 = bitcast i8* %427 to double*
  %"&pSB[currWI].offset3107.sum" = add i64 %CurrSBIndex..0, 5072
  %429 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3107.sum"
  %430 = bitcast i8* %429 to double*
  %"&pSB[currWI].offset3179.sum" = add i64 %CurrSBIndex..0, 5200
  %431 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3179.sum"
  %432 = bitcast i8* %431 to double*
  %"&pSB[currWI].offset3251.sum" = add i64 %CurrSBIndex..0, 5328
  %433 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3251.sum"
  %434 = bitcast i8* %433 to double*
  %"&pSB[currWI].offset3323.sum" = add i64 %CurrSBIndex..0, 5456
  %435 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3323.sum"
  %436 = bitcast i8* %435 to double*
  %"&pSB[currWI].offset3395.sum" = add i64 %CurrSBIndex..0, 5584
  %437 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3395.sum"
  %438 = bitcast i8* %437 to double*
  %"&pSB[currWI].offset3467.sum" = add i64 %CurrSBIndex..0, 5712
  %439 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3467.sum"
  %440 = bitcast i8* %439 to double*
  %"&pSB[currWI].offset3539.sum" = add i64 %CurrSBIndex..0, 5840
  %441 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3539.sum"
  %442 = bitcast i8* %441 to double*
  %"&pSB[currWI].offset2455.sum" = add i64 %CurrSBIndex..0, 3928
  %443 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2455.sum"
  %444 = bitcast i8* %443 to double*
  %"&pSB[currWI].offset2527.sum" = add i64 %CurrSBIndex..0, 4056
  %445 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2527.sum"
  %446 = bitcast i8* %445 to double*
  %"&pSB[currWI].offset2599.sum" = add i64 %CurrSBIndex..0, 4184
  %447 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2599.sum"
  %448 = bitcast i8* %447 to double*
  %"&pSB[currWI].offset2671.sum" = add i64 %CurrSBIndex..0, 4312
  %449 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2671.sum"
  %450 = bitcast i8* %449 to double*
  %"&pSB[currWI].offset2743.sum" = add i64 %CurrSBIndex..0, 4440
  %451 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2743.sum"
  %452 = bitcast i8* %451 to double*
  %"&pSB[currWI].offset2815.sum" = add i64 %CurrSBIndex..0, 4568
  %453 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2815.sum"
  %454 = bitcast i8* %453 to double*
  %"&pSB[currWI].offset2887.sum" = add i64 %CurrSBIndex..0, 4696
  %455 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2887.sum"
  %456 = bitcast i8* %455 to double*
  %"&pSB[currWI].offset2959.sum" = add i64 %CurrSBIndex..0, 4824
  %457 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2959.sum"
  %458 = bitcast i8* %457 to double*
  %"&pSB[currWI].offset3031.sum" = add i64 %CurrSBIndex..0, 4952
  %459 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3031.sum"
  %460 = bitcast i8* %459 to double*
  %"&pSB[currWI].offset3103.sum" = add i64 %CurrSBIndex..0, 5080
  %461 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3103.sum"
  %462 = bitcast i8* %461 to double*
  %"&pSB[currWI].offset3175.sum" = add i64 %CurrSBIndex..0, 5208
  %463 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3175.sum"
  %464 = bitcast i8* %463 to double*
  %"&pSB[currWI].offset3247.sum" = add i64 %CurrSBIndex..0, 5336
  %465 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3247.sum"
  %466 = bitcast i8* %465 to double*
  %"&pSB[currWI].offset3319.sum" = add i64 %CurrSBIndex..0, 5464
  %467 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3319.sum"
  %468 = bitcast i8* %467 to double*
  %"&pSB[currWI].offset3391.sum" = add i64 %CurrSBIndex..0, 5592
  %469 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3391.sum"
  %470 = bitcast i8* %469 to double*
  %"&pSB[currWI].offset3463.sum" = add i64 %CurrSBIndex..0, 5720
  %471 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3463.sum"
  %472 = bitcast i8* %471 to double*
  %"&pSB[currWI].offset3535.sum" = add i64 %CurrSBIndex..0, 5848
  %473 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3535.sum"
  %474 = bitcast i8* %473 to double*
  %"&pSB[currWI].offset2451.sum" = add i64 %CurrSBIndex..0, 3936
  %475 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2451.sum"
  %476 = bitcast i8* %475 to double*
  %"&pSB[currWI].offset2523.sum" = add i64 %CurrSBIndex..0, 4064
  %477 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2523.sum"
  %478 = bitcast i8* %477 to double*
  %"&pSB[currWI].offset2595.sum" = add i64 %CurrSBIndex..0, 4192
  %479 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2595.sum"
  %480 = bitcast i8* %479 to double*
  %"&pSB[currWI].offset2667.sum" = add i64 %CurrSBIndex..0, 4320
  %481 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2667.sum"
  %482 = bitcast i8* %481 to double*
  %"&pSB[currWI].offset2739.sum" = add i64 %CurrSBIndex..0, 4448
  %483 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2739.sum"
  %484 = bitcast i8* %483 to double*
  %"&pSB[currWI].offset2811.sum" = add i64 %CurrSBIndex..0, 4576
  %485 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2811.sum"
  %486 = bitcast i8* %485 to double*
  %"&pSB[currWI].offset2883.sum" = add i64 %CurrSBIndex..0, 4704
  %487 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2883.sum"
  %488 = bitcast i8* %487 to double*
  %"&pSB[currWI].offset2955.sum" = add i64 %CurrSBIndex..0, 4832
  %489 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2955.sum"
  %490 = bitcast i8* %489 to double*
  %"&pSB[currWI].offset3027.sum" = add i64 %CurrSBIndex..0, 4960
  %491 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3027.sum"
  %492 = bitcast i8* %491 to double*
  %"&pSB[currWI].offset3099.sum" = add i64 %CurrSBIndex..0, 5088
  %493 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3099.sum"
  %494 = bitcast i8* %493 to double*
  %"&pSB[currWI].offset3171.sum" = add i64 %CurrSBIndex..0, 5216
  %495 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3171.sum"
  %496 = bitcast i8* %495 to double*
  %"&pSB[currWI].offset3243.sum" = add i64 %CurrSBIndex..0, 5344
  %497 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3243.sum"
  %498 = bitcast i8* %497 to double*
  %"&pSB[currWI].offset3315.sum" = add i64 %CurrSBIndex..0, 5472
  %499 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3315.sum"
  %500 = bitcast i8* %499 to double*
  %"&pSB[currWI].offset3387.sum" = add i64 %CurrSBIndex..0, 5600
  %501 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3387.sum"
  %502 = bitcast i8* %501 to double*
  %"&pSB[currWI].offset3459.sum" = add i64 %CurrSBIndex..0, 5728
  %503 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3459.sum"
  %504 = bitcast i8* %503 to double*
  %"&pSB[currWI].offset3531.sum" = add i64 %CurrSBIndex..0, 5856
  %505 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3531.sum"
  %506 = bitcast i8* %505 to double*
  %"&pSB[currWI].offset2447.sum" = add i64 %CurrSBIndex..0, 3944
  %507 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2447.sum"
  %508 = bitcast i8* %507 to double*
  %"&pSB[currWI].offset2519.sum" = add i64 %CurrSBIndex..0, 4072
  %509 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2519.sum"
  %510 = bitcast i8* %509 to double*
  %"&pSB[currWI].offset2591.sum" = add i64 %CurrSBIndex..0, 4200
  %511 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2591.sum"
  %512 = bitcast i8* %511 to double*
  %"&pSB[currWI].offset2663.sum" = add i64 %CurrSBIndex..0, 4328
  %513 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2663.sum"
  %514 = bitcast i8* %513 to double*
  %"&pSB[currWI].offset2735.sum" = add i64 %CurrSBIndex..0, 4456
  %515 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2735.sum"
  %516 = bitcast i8* %515 to double*
  %"&pSB[currWI].offset2807.sum" = add i64 %CurrSBIndex..0, 4584
  %517 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2807.sum"
  %518 = bitcast i8* %517 to double*
  %"&pSB[currWI].offset2879.sum" = add i64 %CurrSBIndex..0, 4712
  %519 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2879.sum"
  %520 = bitcast i8* %519 to double*
  %"&pSB[currWI].offset2951.sum" = add i64 %CurrSBIndex..0, 4840
  %521 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2951.sum"
  %522 = bitcast i8* %521 to double*
  %"&pSB[currWI].offset3023.sum" = add i64 %CurrSBIndex..0, 4968
  %523 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3023.sum"
  %524 = bitcast i8* %523 to double*
  %"&pSB[currWI].offset3095.sum" = add i64 %CurrSBIndex..0, 5096
  %525 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3095.sum"
  %526 = bitcast i8* %525 to double*
  %"&pSB[currWI].offset3167.sum" = add i64 %CurrSBIndex..0, 5224
  %527 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3167.sum"
  %528 = bitcast i8* %527 to double*
  %"&pSB[currWI].offset3239.sum" = add i64 %CurrSBIndex..0, 5352
  %529 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3239.sum"
  %530 = bitcast i8* %529 to double*
  %"&pSB[currWI].offset3311.sum" = add i64 %CurrSBIndex..0, 5480
  %531 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3311.sum"
  %532 = bitcast i8* %531 to double*
  %"&pSB[currWI].offset3383.sum" = add i64 %CurrSBIndex..0, 5608
  %533 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3383.sum"
  %534 = bitcast i8* %533 to double*
  %"&pSB[currWI].offset3455.sum" = add i64 %CurrSBIndex..0, 5736
  %535 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3455.sum"
  %536 = bitcast i8* %535 to double*
  %"&pSB[currWI].offset3527.sum" = add i64 %CurrSBIndex..0, 5864
  %537 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3527.sum"
  %538 = bitcast i8* %537 to double*
  %"&pSB[currWI].offset2443.sum" = add i64 %CurrSBIndex..0, 3952
  %539 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2443.sum"
  %540 = bitcast i8* %539 to double*
  %"&pSB[currWI].offset2515.sum" = add i64 %CurrSBIndex..0, 4080
  %541 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2515.sum"
  %542 = bitcast i8* %541 to double*
  %"&pSB[currWI].offset2587.sum" = add i64 %CurrSBIndex..0, 4208
  %543 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2587.sum"
  %544 = bitcast i8* %543 to double*
  %"&pSB[currWI].offset2659.sum" = add i64 %CurrSBIndex..0, 4336
  %545 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2659.sum"
  %546 = bitcast i8* %545 to double*
  %"&pSB[currWI].offset2731.sum" = add i64 %CurrSBIndex..0, 4464
  %547 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2731.sum"
  %548 = bitcast i8* %547 to double*
  %"&pSB[currWI].offset2803.sum" = add i64 %CurrSBIndex..0, 4592
  %549 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2803.sum"
  %550 = bitcast i8* %549 to double*
  %"&pSB[currWI].offset2875.sum" = add i64 %CurrSBIndex..0, 4720
  %551 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2875.sum"
  %552 = bitcast i8* %551 to double*
  %"&pSB[currWI].offset2947.sum" = add i64 %CurrSBIndex..0, 4848
  %553 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2947.sum"
  %554 = bitcast i8* %553 to double*
  %"&pSB[currWI].offset3019.sum" = add i64 %CurrSBIndex..0, 4976
  %555 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3019.sum"
  %556 = bitcast i8* %555 to double*
  %"&pSB[currWI].offset3091.sum" = add i64 %CurrSBIndex..0, 5104
  %557 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3091.sum"
  %558 = bitcast i8* %557 to double*
  %"&pSB[currWI].offset3163.sum" = add i64 %CurrSBIndex..0, 5232
  %559 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3163.sum"
  %560 = bitcast i8* %559 to double*
  %"&pSB[currWI].offset3235.sum" = add i64 %CurrSBIndex..0, 5360
  %561 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3235.sum"
  %562 = bitcast i8* %561 to double*
  %"&pSB[currWI].offset3307.sum" = add i64 %CurrSBIndex..0, 5488
  %563 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3307.sum"
  %564 = bitcast i8* %563 to double*
  %"&pSB[currWI].offset3379.sum" = add i64 %CurrSBIndex..0, 5616
  %565 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3379.sum"
  %566 = bitcast i8* %565 to double*
  %"&pSB[currWI].offset3451.sum" = add i64 %CurrSBIndex..0, 5744
  %567 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3451.sum"
  %568 = bitcast i8* %567 to double*
  %"&pSB[currWI].offset3523.sum" = add i64 %CurrSBIndex..0, 5872
  %569 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3523.sum"
  %570 = bitcast i8* %569 to double*
  %"&pSB[currWI].offset2439.sum" = add i64 %CurrSBIndex..0, 3960
  %571 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2439.sum"
  %572 = bitcast i8* %571 to double*
  %"&pSB[currWI].offset2511.sum" = add i64 %CurrSBIndex..0, 4088
  %573 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2511.sum"
  %574 = bitcast i8* %573 to double*
  %"&pSB[currWI].offset2583.sum" = add i64 %CurrSBIndex..0, 4216
  %575 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2583.sum"
  %576 = bitcast i8* %575 to double*
  %"&pSB[currWI].offset2655.sum" = add i64 %CurrSBIndex..0, 4344
  %577 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2655.sum"
  %578 = bitcast i8* %577 to double*
  %"&pSB[currWI].offset2727.sum" = add i64 %CurrSBIndex..0, 4472
  %579 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2727.sum"
  %580 = bitcast i8* %579 to double*
  %"&pSB[currWI].offset2799.sum" = add i64 %CurrSBIndex..0, 4600
  %581 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2799.sum"
  %582 = bitcast i8* %581 to double*
  %"&pSB[currWI].offset2871.sum" = add i64 %CurrSBIndex..0, 4728
  %583 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2871.sum"
  %584 = bitcast i8* %583 to double*
  %"&pSB[currWI].offset2943.sum" = add i64 %CurrSBIndex..0, 4856
  %585 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2943.sum"
  %586 = bitcast i8* %585 to double*
  %"&pSB[currWI].offset3015.sum" = add i64 %CurrSBIndex..0, 4984
  %587 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3015.sum"
  %588 = bitcast i8* %587 to double*
  %"&pSB[currWI].offset3087.sum" = add i64 %CurrSBIndex..0, 5112
  %589 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3087.sum"
  %590 = bitcast i8* %589 to double*
  %"&pSB[currWI].offset3159.sum" = add i64 %CurrSBIndex..0, 5240
  %591 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3159.sum"
  %592 = bitcast i8* %591 to double*
  %"&pSB[currWI].offset3231.sum" = add i64 %CurrSBIndex..0, 5368
  %593 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3231.sum"
  %594 = bitcast i8* %593 to double*
  %"&pSB[currWI].offset3303.sum" = add i64 %CurrSBIndex..0, 5496
  %595 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3303.sum"
  %596 = bitcast i8* %595 to double*
  %"&pSB[currWI].offset3375.sum" = add i64 %CurrSBIndex..0, 5624
  %597 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3375.sum"
  %598 = bitcast i8* %597 to double*
  %"&pSB[currWI].offset3447.sum" = add i64 %CurrSBIndex..0, 5752
  %599 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3447.sum"
  %600 = bitcast i8* %599 to double*
  %"&pSB[currWI].offset3519.sum" = add i64 %CurrSBIndex..0, 5880
  %601 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3519.sum"
  %602 = bitcast i8* %601 to double*
  %"&pSB[currWI].offset2435.sum" = add i64 %CurrSBIndex..0, 3968
  %603 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2435.sum"
  %604 = bitcast i8* %603 to double*
  %"&pSB[currWI].offset2507.sum" = add i64 %CurrSBIndex..0, 4096
  %605 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2507.sum"
  %606 = bitcast i8* %605 to double*
  %"&pSB[currWI].offset2579.sum" = add i64 %CurrSBIndex..0, 4224
  %607 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2579.sum"
  %608 = bitcast i8* %607 to double*
  %"&pSB[currWI].offset2651.sum" = add i64 %CurrSBIndex..0, 4352
  %609 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2651.sum"
  %610 = bitcast i8* %609 to double*
  %"&pSB[currWI].offset2723.sum" = add i64 %CurrSBIndex..0, 4480
  %611 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2723.sum"
  %612 = bitcast i8* %611 to double*
  %"&pSB[currWI].offset2795.sum" = add i64 %CurrSBIndex..0, 4608
  %613 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2795.sum"
  %614 = bitcast i8* %613 to double*
  %"&pSB[currWI].offset2867.sum" = add i64 %CurrSBIndex..0, 4736
  %615 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2867.sum"
  %616 = bitcast i8* %615 to double*
  %"&pSB[currWI].offset2939.sum" = add i64 %CurrSBIndex..0, 4864
  %617 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2939.sum"
  %618 = bitcast i8* %617 to double*
  %"&pSB[currWI].offset3011.sum" = add i64 %CurrSBIndex..0, 4992
  %619 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3011.sum"
  %620 = bitcast i8* %619 to double*
  %"&pSB[currWI].offset3083.sum" = add i64 %CurrSBIndex..0, 5120
  %621 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3083.sum"
  %622 = bitcast i8* %621 to double*
  %"&pSB[currWI].offset3155.sum" = add i64 %CurrSBIndex..0, 5248
  %623 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3155.sum"
  %624 = bitcast i8* %623 to double*
  %"&pSB[currWI].offset3227.sum" = add i64 %CurrSBIndex..0, 5376
  %625 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3227.sum"
  %626 = bitcast i8* %625 to double*
  %"&pSB[currWI].offset3299.sum" = add i64 %CurrSBIndex..0, 5504
  %627 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3299.sum"
  %628 = bitcast i8* %627 to double*
  %"&pSB[currWI].offset3371.sum" = add i64 %CurrSBIndex..0, 5632
  %629 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3371.sum"
  %630 = bitcast i8* %629 to double*
  %"&pSB[currWI].offset3443.sum" = add i64 %CurrSBIndex..0, 5760
  %631 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3443.sum"
  %632 = bitcast i8* %631 to double*
  %"&pSB[currWI].offset3515.sum" = add i64 %CurrSBIndex..0, 5888
  %633 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3515.sum"
  %634 = bitcast i8* %633 to double*
  %"&pSB[currWI].offset2431.sum" = add i64 %CurrSBIndex..0, 3976
  %635 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2431.sum"
  %636 = bitcast i8* %635 to double*
  %"&pSB[currWI].offset2503.sum" = add i64 %CurrSBIndex..0, 4104
  %637 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2503.sum"
  %638 = bitcast i8* %637 to double*
  %"&pSB[currWI].offset2575.sum" = add i64 %CurrSBIndex..0, 4232
  %639 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2575.sum"
  %640 = bitcast i8* %639 to double*
  %"&pSB[currWI].offset2647.sum" = add i64 %CurrSBIndex..0, 4360
  %641 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2647.sum"
  %642 = bitcast i8* %641 to double*
  %"&pSB[currWI].offset2719.sum" = add i64 %CurrSBIndex..0, 4488
  %643 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2719.sum"
  %644 = bitcast i8* %643 to double*
  %"&pSB[currWI].offset2791.sum" = add i64 %CurrSBIndex..0, 4616
  %645 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2791.sum"
  %646 = bitcast i8* %645 to double*
  %"&pSB[currWI].offset2863.sum" = add i64 %CurrSBIndex..0, 4744
  %647 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2863.sum"
  %648 = bitcast i8* %647 to double*
  %"&pSB[currWI].offset2935.sum" = add i64 %CurrSBIndex..0, 4872
  %649 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2935.sum"
  %650 = bitcast i8* %649 to double*
  %"&pSB[currWI].offset3007.sum" = add i64 %CurrSBIndex..0, 5000
  %651 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3007.sum"
  %652 = bitcast i8* %651 to double*
  %"&pSB[currWI].offset3079.sum" = add i64 %CurrSBIndex..0, 5128
  %653 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3079.sum"
  %654 = bitcast i8* %653 to double*
  %"&pSB[currWI].offset3151.sum" = add i64 %CurrSBIndex..0, 5256
  %655 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3151.sum"
  %656 = bitcast i8* %655 to double*
  %"&pSB[currWI].offset3223.sum" = add i64 %CurrSBIndex..0, 5384
  %657 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3223.sum"
  %658 = bitcast i8* %657 to double*
  %"&pSB[currWI].offset3295.sum" = add i64 %CurrSBIndex..0, 5512
  %659 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3295.sum"
  %660 = bitcast i8* %659 to double*
  %"&pSB[currWI].offset3367.sum" = add i64 %CurrSBIndex..0, 5640
  %661 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3367.sum"
  %662 = bitcast i8* %661 to double*
  %"&pSB[currWI].offset3439.sum" = add i64 %CurrSBIndex..0, 5768
  %663 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3439.sum"
  %664 = bitcast i8* %663 to double*
  %"&pSB[currWI].offset3511.sum" = add i64 %CurrSBIndex..0, 5896
  %665 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3511.sum"
  %666 = bitcast i8* %665 to double*
  %tmp54117 = add <16 x i64> %vector116, %153
  %"&(pSB[currWI].offset)1608" = add nuw i64 %CurrSBIndex..0, 1920
  %"&pSB[currWI].offset1609" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1608"
  %CastToValueType1610 = bitcast i8* %"&pSB[currWI].offset1609" to <16 x i64>*
  store <16 x i64> %tmp54117, <16 x i64>* %CastToValueType1610, align 128
  %tmp64118 = add <16 x i32> %147, %vector2
  %tmp65119 = sext <16 x i32> %tmp64118 to <16 x i64>
  %tmp66122 = add <16 x i64> %vector121, %tmp65119
  %"&(pSB[currWI].offset)1617" = add nuw i64 %CurrSBIndex..0, 2048
  %"&pSB[currWI].offset1618" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1617"
  %CastToValueType1619 = bitcast i8* %"&pSB[currWI].offset1618" to <16 x i64>*
  store <16 x i64> %tmp66122, <16 x i64>* %CastToValueType1619, align 128
  %tmp72125 = add <16 x i64> %vector124, %tmp65119
  %"&(pSB[currWI].offset)1626" = add nuw i64 %CurrSBIndex..0, 2176
  %"&pSB[currWI].offset1627" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1626"
  %CastToValueType1628 = bitcast i8* %"&pSB[currWI].offset1627" to <16 x i64>*
  store <16 x i64> %tmp72125, <16 x i64>* %CastToValueType1628, align 128
  %tmp78128 = add <16 x i64> %vector127, %tmp65119
  %"&(pSB[currWI].offset)1635" = add nuw i64 %CurrSBIndex..0, 2304
  %"&pSB[currWI].offset1636" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1635"
  %CastToValueType1637 = bitcast i8* %"&pSB[currWI].offset1636" to <16 x i64>*
  store <16 x i64> %tmp78128, <16 x i64>* %CastToValueType1637, align 128
  %tmp83131 = add <16 x i64> %vector130, %tmp65119
  %"&(pSB[currWI].offset)1644" = add nuw i64 %CurrSBIndex..0, 2432
  %"&pSB[currWI].offset1645" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1644"
  %CastToValueType1646 = bitcast i8* %"&pSB[currWI].offset1645" to <16 x i64>*
  store <16 x i64> %tmp83131, <16 x i64>* %CastToValueType1646, align 128
  br label %"Barrier BB"

.loopexit:                                        ; preds = %SyncBB4618
  %"&(pSB[currWI].offset)2412" = add nuw i64 %CurrSBIndex..1, 3712
  %"&(pSB[currWI].offset)2323" = add nuw i64 %CurrSBIndex..1, 3584
  %"&(pSB[currWI].offset)2234" = add nuw i64 %CurrSBIndex..1, 3456
  %"&(pSB[currWI].offset)2145" = add nuw i64 %CurrSBIndex..1, 3328
  %"&(pSB[currWI].offset)2056" = add nuw i64 %CurrSBIndex..1, 3200
  %"&pSB[currWI].offset2413" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2412"
  %"&pSB[currWI].offset2324" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2323"
  %"&pSB[currWI].offset2235" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2234"
  %"&pSB[currWI].offset2146" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2145"
  %"&pSB[currWI].offset2057" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2056"
  %CastToValueType2414 = bitcast i8* %"&pSB[currWI].offset2413" to <16 x double>*
  %CastToValueType2325 = bitcast i8* %"&pSB[currWI].offset2324" to <16 x double>*
  %CastToValueType2236 = bitcast i8* %"&pSB[currWI].offset2235" to <16 x double>*
  %CastToValueType2147 = bitcast i8* %"&pSB[currWI].offset2146" to <16 x double>*
  %CastToValueType2058 = bitcast i8* %"&pSB[currWI].offset2057" to <16 x double>*
  %loadedValue2415 = load <16 x double>* %CastToValueType2414, align 128
  %loadedValue2326 = load <16 x double>* %CastToValueType2325, align 128
  %loadedValue2237 = load <16 x double>* %CastToValueType2236, align 128
  %loadedValue2148 = load <16 x double>* %CastToValueType2147, align 128
  %loadedValue2059 = load <16 x double>* %CastToValueType2058, align 128
  br label %"Barrier BB"

"Barrier BB":                                     ; preds = %.loopexit, %SyncBB4620
  %currBarrier.1 = phi i32 [ %currBarrier.2, %SyncBB4620 ], [ %currBarrier.0.ph, %.loopexit ]
  %CurrSBIndex..2 = phi i64 [ %CurrSBIndex..0, %SyncBB4620 ], [ %CurrSBIndex..1, %.loopexit ]
  %CurrWI..2 = phi i64 [ %CurrWI..0, %SyncBB4620 ], [ %CurrWI..1, %.loopexit ]
  %vectorPHI = phi <16 x double> [ %166, %SyncBB4620 ], [ %loadedValue2326, %.loopexit ]
  %vectorPHI132 = phi <16 x double> [ %164, %SyncBB4620 ], [ %loadedValue2237, %.loopexit ]
  %vectorPHI133 = phi <16 x double> [ %162, %SyncBB4620 ], [ %loadedValue2148, %.loopexit ]
  %vectorPHI134 = phi <16 x double> [ %160, %SyncBB4620 ], [ %loadedValue2059, %.loopexit ]
  %indvar35 = phi i64 [ 0, %SyncBB4620 ], [ %indvar.next36, %.loopexit ]
  %vectorPHI135 = phi <16 x double> [ %167, %SyncBB4620 ], [ %loadedValue2415, %.loopexit ]
  %"&(pSB[currWI].offset)1989" = add nuw i64 %CurrSBIndex..2, 3072
  %"&pSB[currWI].offset1990" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1989"
  %CastToValueType1991 = bitcast i8* %"&pSB[currWI].offset1990" to i64*
  store i64 %indvar35, i64* %CastToValueType1991, align 8
  %"&(pSB[currWI].offset)1905" = add nuw i64 %CurrSBIndex..2, 2944
  %"&pSB[currWI].offset1906" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1905"
  %CastToValueType1907 = bitcast i8* %"&pSB[currWI].offset1906" to <16 x double>*
  store <16 x double> %vectorPHI134, <16 x double>* %CastToValueType1907, align 128
  %"&(pSB[currWI].offset)1821" = add nuw i64 %CurrSBIndex..2, 2816
  %"&pSB[currWI].offset1822" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1821"
  %CastToValueType1823 = bitcast i8* %"&pSB[currWI].offset1822" to <16 x double>*
  store <16 x double> %vectorPHI133, <16 x double>* %CastToValueType1823, align 128
  %"&(pSB[currWI].offset)1737" = add nuw i64 %CurrSBIndex..2, 2688
  %"&pSB[currWI].offset1738" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1737"
  %CastToValueType1739 = bitcast i8* %"&pSB[currWI].offset1738" to <16 x double>*
  store <16 x double> %vectorPHI132, <16 x double>* %CastToValueType1739, align 128
  %"&(pSB[currWI].offset)1653" = add nuw i64 %CurrSBIndex..2, 2560
  %"&pSB[currWI].offset1654" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1653"
  %CastToValueType1655 = bitcast i8* %"&pSB[currWI].offset1654" to <16 x double>*
  store <16 x double> %vectorPHI, <16 x double>* %CastToValueType1655, align 128
  %tmp39 = mul i64 %tmp38, %indvar35
  %tmp42 = add i64 %tmp41, %tmp39
  %tmp43 = trunc i64 %tmp42 to i32
  %"&(pSB[currWI].offset)1998" = add nuw i64 %CurrSBIndex..2, 3080
  %"&pSB[currWI].offset1999" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1998"
  %CastToValueType2000 = bitcast i8* %"&pSB[currWI].offset1999" to i32*
  store i32 %tmp43, i32* %CastToValueType2000, align 4
  %tmp45 = mul i64 %tmp44, %indvar35
  %"&(pSB[currWI].offset)1612" = add nuw i64 %CurrSBIndex..2, 1920
  %"&pSB[currWI].offset1613" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1612"
  %CastToValueType1614 = bitcast i8* %"&pSB[currWI].offset1613" to <16 x i64>*
  %loadedValue1615 = load <16 x i64>* %CastToValueType1614, align 128
  %extract139.lhs = extractelement <16 x i64> %loadedValue1615, i32 0
  %extract139 = add i64 %extract139.lhs, %tmp45
  %667 = getelementptr double addrspace(1)* %B, i64 %extract139
  %"&(pSB[currWI].offset)2007" = add nuw i64 %CurrSBIndex..2, 3088
  %"&pSB[currWI].offset2008" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2007"
  %CastToValueType2009 = bitcast i8* %"&pSB[currWI].offset2008" to double addrspace(1)**
  store double addrspace(1)* %667, double addrspace(1)** %CastToValueType2009, align 8
  %tmp59 = mul i64 %tmp58, %indvar35
  %"&(pSB[currWI].offset)1621" = add nuw i64 %CurrSBIndex..2, 2048
  %"&pSB[currWI].offset1622" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1621"
  %CastToValueType1623 = bitcast i8* %"&pSB[currWI].offset1622" to <16 x i64>*
  %loadedValue1624 = load <16 x i64>* %CastToValueType1623, align 128
  %extract158.lhs = extractelement <16 x i64> %loadedValue1624, i32 0
  %extract158 = add i64 %extract158.lhs, %tmp59
  %668 = getelementptr double addrspace(1)* %A, i64 %extract158
  %"&(pSB[currWI].offset)2016" = add nuw i64 %CurrSBIndex..2, 3096
  %"&pSB[currWI].offset2017" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2016"
  %CastToValueType2018 = bitcast i8* %"&pSB[currWI].offset2017" to double addrspace(1)**
  store double addrspace(1)* %668, double addrspace(1)** %CastToValueType2018, align 8
  %"&(pSB[currWI].offset)1630" = add nuw i64 %CurrSBIndex..2, 2176
  %"&pSB[currWI].offset1631" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1630"
  %CastToValueType1632 = bitcast i8* %"&pSB[currWI].offset1631" to <16 x i64>*
  %loadedValue1633 = load <16 x i64>* %CastToValueType1632, align 128
  %extract175.lhs = extractelement <16 x i64> %loadedValue1633, i32 0
  %extract175 = add i64 %extract175.lhs, %tmp59
  %669 = getelementptr double addrspace(1)* %A, i64 %extract175
  %"&(pSB[currWI].offset)2025" = add nuw i64 %CurrSBIndex..2, 3104
  %"&pSB[currWI].offset2026" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2025"
  %CastToValueType2027 = bitcast i8* %"&pSB[currWI].offset2026" to double addrspace(1)**
  store double addrspace(1)* %669, double addrspace(1)** %CastToValueType2027, align 8
  %"&(pSB[currWI].offset)1639" = add nuw i64 %CurrSBIndex..2, 2304
  %"&pSB[currWI].offset1640" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1639"
  %CastToValueType1641 = bitcast i8* %"&pSB[currWI].offset1640" to <16 x i64>*
  %loadedValue1642 = load <16 x i64>* %CastToValueType1641, align 128
  %extract192.lhs = extractelement <16 x i64> %loadedValue1642, i32 0
  %extract192 = add i64 %extract192.lhs, %tmp59
  %670 = getelementptr double addrspace(1)* %A, i64 %extract192
  %"&(pSB[currWI].offset)2034" = add nuw i64 %CurrSBIndex..2, 3112
  %"&pSB[currWI].offset2035" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2034"
  %CastToValueType2036 = bitcast i8* %"&pSB[currWI].offset2035" to double addrspace(1)**
  store double addrspace(1)* %670, double addrspace(1)** %CastToValueType2036, align 8
  %"&(pSB[currWI].offset)1648" = add nuw i64 %CurrSBIndex..2, 2432
  %"&pSB[currWI].offset1649" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1648"
  %CastToValueType1650 = bitcast i8* %"&pSB[currWI].offset1649" to <16 x i64>*
  %loadedValue1651 = load <16 x i64>* %CastToValueType1650, align 128
  %extract209.lhs = extractelement <16 x i64> %loadedValue1651, i32 0
  %extract209 = add i64 %extract209.lhs, %tmp59
  %671 = getelementptr double addrspace(1)* %A, i64 %extract209
  %"&(pSB[currWI].offset)2043" = add nuw i64 %CurrSBIndex..2, 3120
  %"&pSB[currWI].offset2044" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2043"
  %CastToValueType2045 = bitcast i8* %"&pSB[currWI].offset2044" to double addrspace(1)**
  store double addrspace(1)* %671, double addrspace(1)** %CastToValueType2045, align 8
  %"&(pSB[currWI].offset)1603" = add nuw i64 %CurrSBIndex..2, 1792
  %"&pSB[currWI].offset1604" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1603"
  %CastToValueType1605 = bitcast i8* %"&pSB[currWI].offset1604" to double addrspace(3)**
  %loadedValue1606 = load double addrspace(3)** %CastToValueType1605, align 8
  %ptrTypeCast225 = bitcast double addrspace(3)* %loadedValue1606 to <16 x double> addrspace(3)*
  store <16 x double> %vectorPHI135, <16 x double> addrspace(3)* %ptrTypeCast225, align 8
  %check.WI.iter = icmp ult i64 %CurrWI..2, %iterCount
  br i1 %check.WI.iter, label %thenBB, label %SyncBB

thenBB:                                           ; preds = %"Barrier BB"
  %"CurrWI++" = add nuw i64 %CurrWI..2, 1
  %"loadedCurrSB+Stride" = add nuw i64 %CurrSBIndex..2, 12032
  %cond = icmp eq i32 %currBarrier.1, 17
  br i1 %cond, label %SyncBB4620, label %SyncBB4618.preheader

SyncBB:                                           ; preds = %"Barrier BB", %thenBB4629
  %CurrSBIndex..3 = phi i64 [ %"loadedCurrSB+Stride4635", %thenBB4629 ], [ 0, %"Barrier BB" ]
  %CurrWI..3 = phi i64 [ %"CurrWI++4633", %thenBB4629 ], [ 0, %"Barrier BB" ]
  %"&(pSB[currWI].offset)2020" = add nuw i64 %CurrSBIndex..3, 3096
  %"&pSB[currWI].offset2021" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2020"
  %CastToValueType2022 = bitcast i8* %"&pSB[currWI].offset2021" to double addrspace(1)**
  %loadedValue2023 = load double addrspace(1)** %CastToValueType2022, align 8
  %ptrTypeCast226 = bitcast double addrspace(1)* %loadedValue2023 to <16 x double> addrspace(1)*
  %672 = load <16 x double> addrspace(1)* %ptrTypeCast226, align 8
  %"&(pSB[currWI].offset)2052" = add nuw i64 %CurrSBIndex..3, 3200
  %"&pSB[currWI].offset2053" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2052"
  %CastToValueType2054 = bitcast i8* %"&pSB[currWI].offset2053" to <16 x double>*
  store <16 x double> %672, <16 x double>* %CastToValueType2054, align 128
  %"&(pSB[currWI].offset)2047" = add nuw i64 %CurrSBIndex..3, 3120
  %"&pSB[currWI].offset2048" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2047"
  %CastToValueType2049 = bitcast i8* %"&pSB[currWI].offset2048" to double addrspace(1)**
  %loadedValue2050 = load double addrspace(1)** %CastToValueType2049, align 8
  %ptrTypeCast227 = bitcast double addrspace(1)* %loadedValue2050 to <16 x double> addrspace(1)*
  %673 = load <16 x double> addrspace(1)* %ptrTypeCast227, align 8
  %"&(pSB[currWI].offset)2141" = add nuw i64 %CurrSBIndex..3, 3328
  %"&pSB[currWI].offset2142" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2141"
  %CastToValueType2143 = bitcast i8* %"&pSB[currWI].offset2142" to <16 x double>*
  store <16 x double> %673, <16 x double>* %CastToValueType2143, align 128
  %"&(pSB[currWI].offset)2038" = add nuw i64 %CurrSBIndex..3, 3112
  %"&pSB[currWI].offset2039" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2038"
  %CastToValueType2040 = bitcast i8* %"&pSB[currWI].offset2039" to double addrspace(1)**
  %loadedValue2041 = load double addrspace(1)** %CastToValueType2040, align 8
  %ptrTypeCast228 = bitcast double addrspace(1)* %loadedValue2041 to <16 x double> addrspace(1)*
  %674 = load <16 x double> addrspace(1)* %ptrTypeCast228, align 8
  %"&(pSB[currWI].offset)2230" = add nuw i64 %CurrSBIndex..3, 3456
  %"&pSB[currWI].offset2231" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2230"
  %CastToValueType2232 = bitcast i8* %"&pSB[currWI].offset2231" to <16 x double>*
  store <16 x double> %674, <16 x double>* %CastToValueType2232, align 128
  %"&(pSB[currWI].offset)2029" = add nuw i64 %CurrSBIndex..3, 3104
  %"&pSB[currWI].offset2030" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2029"
  %CastToValueType2031 = bitcast i8* %"&pSB[currWI].offset2030" to double addrspace(1)**
  %loadedValue2032 = load double addrspace(1)** %CastToValueType2031, align 8
  %ptrTypeCast229 = bitcast double addrspace(1)* %loadedValue2032 to <16 x double> addrspace(1)*
  %675 = load <16 x double> addrspace(1)* %ptrTypeCast229, align 8
  %"&(pSB[currWI].offset)2319" = add nuw i64 %CurrSBIndex..3, 3584
  %"&pSB[currWI].offset2320" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2319"
  %CastToValueType2321 = bitcast i8* %"&pSB[currWI].offset2320" to <16 x double>*
  store <16 x double> %675, <16 x double>* %CastToValueType2321, align 128
  %"&(pSB[currWI].offset)2011" = add nuw i64 %CurrSBIndex..3, 3088
  %"&pSB[currWI].offset2012" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2011"
  %CastToValueType2013 = bitcast i8* %"&pSB[currWI].offset2012" to double addrspace(1)**
  %loadedValue2014 = load double addrspace(1)** %CastToValueType2013, align 8
  %ptrTypeCast230 = bitcast double addrspace(1)* %loadedValue2014 to <16 x double> addrspace(1)*
  %676 = load <16 x double> addrspace(1)* %ptrTypeCast230, align 8
  %"&(pSB[currWI].offset)2408" = add nuw i64 %CurrSBIndex..3, 3712
  %"&pSB[currWI].offset2409" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2408"
  %CastToValueType2410 = bitcast i8* %"&pSB[currWI].offset2409" to <16 x double>*
  store <16 x double> %676, <16 x double>* %CastToValueType2410, align 128
  %677 = load double addrspace(3)* %1, align 16
  %temp231 = insertelement <16 x double> undef, double %677, i32 0
  %vector232 = shufflevector <16 x double> %temp231, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1984" = add nuw i64 %CurrSBIndex..3, 2944
  %"&pSB[currWI].offset1985" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1984"
  %CastToValueType1986 = bitcast i8* %"&pSB[currWI].offset1985" to <16 x double>*
  %loadedValue1987 = load <16 x double>* %CastToValueType1986, align 128
  %678 = fmul <16 x double> %loadedValue1987, %vector232
  %679 = load double* %171, align 16
  %680 = load double* %172, align 16
  %681 = load double* %173, align 16
  %682 = load double* %174, align 16
  %683 = load double* %175, align 16
  %684 = load double* %176, align 16
  %685 = load double* %177, align 16
  %686 = load double* %178, align 16
  %687 = load double* %179, align 16
  %688 = load double* %180, align 16
  %689 = load double* %181, align 16
  %690 = load double* %182, align 16
  %691 = load double* %183, align 16
  %692 = load double* %184, align 16
  %693 = load double* %185, align 16
  %694 = load double* %186, align 16
  %temp.vect = insertelement <16 x double> undef, double %679, i32 0
  %temp.vect233 = insertelement <16 x double> %temp.vect, double %680, i32 1
  %temp.vect234 = insertelement <16 x double> %temp.vect233, double %681, i32 2
  %temp.vect235 = insertelement <16 x double> %temp.vect234, double %682, i32 3
  %temp.vect236 = insertelement <16 x double> %temp.vect235, double %683, i32 4
  %temp.vect237 = insertelement <16 x double> %temp.vect236, double %684, i32 5
  %temp.vect238 = insertelement <16 x double> %temp.vect237, double %685, i32 6
  %temp.vect239 = insertelement <16 x double> %temp.vect238, double %686, i32 7
  %temp.vect240 = insertelement <16 x double> %temp.vect239, double %687, i32 8
  %temp.vect241 = insertelement <16 x double> %temp.vect240, double %688, i32 9
  %temp.vect242 = insertelement <16 x double> %temp.vect241, double %689, i32 10
  %temp.vect243 = insertelement <16 x double> %temp.vect242, double %690, i32 11
  %temp.vect244 = insertelement <16 x double> %temp.vect243, double %691, i32 12
  %temp.vect245 = insertelement <16 x double> %temp.vect244, double %692, i32 13
  %temp.vect246 = insertelement <16 x double> %temp.vect245, double %693, i32 14
  %temp.vect247 = insertelement <16 x double> %temp.vect246, double %694, i32 15
  %695 = fadd <16 x double> %temp.vect247, %678
  %696 = load double addrspace(3)* %3, align 8
  %temp248 = insertelement <16 x double> undef, double %696, i32 0
  %vector249 = shufflevector <16 x double> %temp248, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1979" = add nuw i64 %CurrSBIndex..3, 2944
  %"&pSB[currWI].offset1980" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1979"
  %CastToValueType1981 = bitcast i8* %"&pSB[currWI].offset1980" to <16 x double>*
  %loadedValue1982 = load <16 x double>* %CastToValueType1981, align 128
  %697 = fmul <16 x double> %loadedValue1982, %vector249
  %698 = load double* %188, align 8
  %699 = load double* %190, align 8
  %700 = load double* %192, align 8
  %701 = load double* %194, align 8
  %702 = load double* %196, align 8
  %703 = load double* %198, align 8
  %704 = load double* %200, align 8
  %705 = load double* %202, align 8
  %706 = load double* %204, align 8
  %707 = load double* %206, align 8
  %708 = load double* %208, align 8
  %709 = load double* %210, align 8
  %710 = load double* %212, align 8
  %711 = load double* %214, align 8
  %712 = load double* %216, align 8
  %713 = load double* %218, align 8
  %temp.vect250 = insertelement <16 x double> undef, double %698, i32 0
  %temp.vect251 = insertelement <16 x double> %temp.vect250, double %699, i32 1
  %temp.vect252 = insertelement <16 x double> %temp.vect251, double %700, i32 2
  %temp.vect253 = insertelement <16 x double> %temp.vect252, double %701, i32 3
  %temp.vect254 = insertelement <16 x double> %temp.vect253, double %702, i32 4
  %temp.vect255 = insertelement <16 x double> %temp.vect254, double %703, i32 5
  %temp.vect256 = insertelement <16 x double> %temp.vect255, double %704, i32 6
  %temp.vect257 = insertelement <16 x double> %temp.vect256, double %705, i32 7
  %temp.vect258 = insertelement <16 x double> %temp.vect257, double %706, i32 8
  %temp.vect259 = insertelement <16 x double> %temp.vect258, double %707, i32 9
  %temp.vect260 = insertelement <16 x double> %temp.vect259, double %708, i32 10
  %temp.vect261 = insertelement <16 x double> %temp.vect260, double %709, i32 11
  %temp.vect262 = insertelement <16 x double> %temp.vect261, double %710, i32 12
  %temp.vect263 = insertelement <16 x double> %temp.vect262, double %711, i32 13
  %temp.vect264 = insertelement <16 x double> %temp.vect263, double %712, i32 14
  %temp.vect265 = insertelement <16 x double> %temp.vect264, double %713, i32 15
  %714 = fadd <16 x double> %temp.vect265, %697
  %715 = load double addrspace(3)* %5, align 16
  %temp266 = insertelement <16 x double> undef, double %715, i32 0
  %vector267 = shufflevector <16 x double> %temp266, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1974" = add nuw i64 %CurrSBIndex..3, 2944
  %"&pSB[currWI].offset1975" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1974"
  %CastToValueType1976 = bitcast i8* %"&pSB[currWI].offset1975" to <16 x double>*
  %loadedValue1977 = load <16 x double>* %CastToValueType1976, align 128
  %716 = fmul <16 x double> %loadedValue1977, %vector267
  %717 = load double* %220, align 16
  %718 = load double* %222, align 16
  %719 = load double* %224, align 16
  %720 = load double* %226, align 16
  %721 = load double* %228, align 16
  %722 = load double* %230, align 16
  %723 = load double* %232, align 16
  %724 = load double* %234, align 16
  %725 = load double* %236, align 16
  %726 = load double* %238, align 16
  %727 = load double* %240, align 16
  %728 = load double* %242, align 16
  %729 = load double* %244, align 16
  %730 = load double* %246, align 16
  %731 = load double* %248, align 16
  %732 = load double* %250, align 16
  %temp.vect268 = insertelement <16 x double> undef, double %717, i32 0
  %temp.vect269 = insertelement <16 x double> %temp.vect268, double %718, i32 1
  %temp.vect270 = insertelement <16 x double> %temp.vect269, double %719, i32 2
  %temp.vect271 = insertelement <16 x double> %temp.vect270, double %720, i32 3
  %temp.vect272 = insertelement <16 x double> %temp.vect271, double %721, i32 4
  %temp.vect273 = insertelement <16 x double> %temp.vect272, double %722, i32 5
  %temp.vect274 = insertelement <16 x double> %temp.vect273, double %723, i32 6
  %temp.vect275 = insertelement <16 x double> %temp.vect274, double %724, i32 7
  %temp.vect276 = insertelement <16 x double> %temp.vect275, double %725, i32 8
  %temp.vect277 = insertelement <16 x double> %temp.vect276, double %726, i32 9
  %temp.vect278 = insertelement <16 x double> %temp.vect277, double %727, i32 10
  %temp.vect279 = insertelement <16 x double> %temp.vect278, double %728, i32 11
  %temp.vect280 = insertelement <16 x double> %temp.vect279, double %729, i32 12
  %temp.vect281 = insertelement <16 x double> %temp.vect280, double %730, i32 13
  %temp.vect282 = insertelement <16 x double> %temp.vect281, double %731, i32 14
  %temp.vect283 = insertelement <16 x double> %temp.vect282, double %732, i32 15
  %733 = fadd <16 x double> %temp.vect283, %716
  %734 = load double addrspace(3)* %7, align 8
  %temp284 = insertelement <16 x double> undef, double %734, i32 0
  %vector285 = shufflevector <16 x double> %temp284, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1969" = add nuw i64 %CurrSBIndex..3, 2944
  %"&pSB[currWI].offset1970" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1969"
  %CastToValueType1971 = bitcast i8* %"&pSB[currWI].offset1970" to <16 x double>*
  %loadedValue1972 = load <16 x double>* %CastToValueType1971, align 128
  %735 = fmul <16 x double> %loadedValue1972, %vector285
  %736 = load double* %252, align 8
  %737 = load double* %254, align 8
  %738 = load double* %256, align 8
  %739 = load double* %258, align 8
  %740 = load double* %260, align 8
  %741 = load double* %262, align 8
  %742 = load double* %264, align 8
  %743 = load double* %266, align 8
  %744 = load double* %268, align 8
  %745 = load double* %270, align 8
  %746 = load double* %272, align 8
  %747 = load double* %274, align 8
  %748 = load double* %276, align 8
  %749 = load double* %278, align 8
  %750 = load double* %280, align 8
  %751 = load double* %282, align 8
  %temp.vect286 = insertelement <16 x double> undef, double %736, i32 0
  %temp.vect287 = insertelement <16 x double> %temp.vect286, double %737, i32 1
  %temp.vect288 = insertelement <16 x double> %temp.vect287, double %738, i32 2
  %temp.vect289 = insertelement <16 x double> %temp.vect288, double %739, i32 3
  %temp.vect290 = insertelement <16 x double> %temp.vect289, double %740, i32 4
  %temp.vect291 = insertelement <16 x double> %temp.vect290, double %741, i32 5
  %temp.vect292 = insertelement <16 x double> %temp.vect291, double %742, i32 6
  %temp.vect293 = insertelement <16 x double> %temp.vect292, double %743, i32 7
  %temp.vect294 = insertelement <16 x double> %temp.vect293, double %744, i32 8
  %temp.vect295 = insertelement <16 x double> %temp.vect294, double %745, i32 9
  %temp.vect296 = insertelement <16 x double> %temp.vect295, double %746, i32 10
  %temp.vect297 = insertelement <16 x double> %temp.vect296, double %747, i32 11
  %temp.vect298 = insertelement <16 x double> %temp.vect297, double %748, i32 12
  %temp.vect299 = insertelement <16 x double> %temp.vect298, double %749, i32 13
  %temp.vect300 = insertelement <16 x double> %temp.vect299, double %750, i32 14
  %temp.vect301 = insertelement <16 x double> %temp.vect300, double %751, i32 15
  %752 = fadd <16 x double> %temp.vect301, %735
  %753 = load double addrspace(3)* %9, align 16
  %temp302 = insertelement <16 x double> undef, double %753, i32 0
  %vector303 = shufflevector <16 x double> %temp302, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1964" = add nuw i64 %CurrSBIndex..3, 2944
  %"&pSB[currWI].offset1965" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1964"
  %CastToValueType1966 = bitcast i8* %"&pSB[currWI].offset1965" to <16 x double>*
  %loadedValue1967 = load <16 x double>* %CastToValueType1966, align 128
  %754 = fmul <16 x double> %loadedValue1967, %vector303
  %755 = load double* %284, align 16
  %756 = load double* %286, align 16
  %757 = load double* %288, align 16
  %758 = load double* %290, align 16
  %759 = load double* %292, align 16
  %760 = load double* %294, align 16
  %761 = load double* %296, align 16
  %762 = load double* %298, align 16
  %763 = load double* %300, align 16
  %764 = load double* %302, align 16
  %765 = load double* %304, align 16
  %766 = load double* %306, align 16
  %767 = load double* %308, align 16
  %768 = load double* %310, align 16
  %769 = load double* %312, align 16
  %770 = load double* %314, align 16
  %temp.vect304 = insertelement <16 x double> undef, double %755, i32 0
  %temp.vect305 = insertelement <16 x double> %temp.vect304, double %756, i32 1
  %temp.vect306 = insertelement <16 x double> %temp.vect305, double %757, i32 2
  %temp.vect307 = insertelement <16 x double> %temp.vect306, double %758, i32 3
  %temp.vect308 = insertelement <16 x double> %temp.vect307, double %759, i32 4
  %temp.vect309 = insertelement <16 x double> %temp.vect308, double %760, i32 5
  %temp.vect310 = insertelement <16 x double> %temp.vect309, double %761, i32 6
  %temp.vect311 = insertelement <16 x double> %temp.vect310, double %762, i32 7
  %temp.vect312 = insertelement <16 x double> %temp.vect311, double %763, i32 8
  %temp.vect313 = insertelement <16 x double> %temp.vect312, double %764, i32 9
  %temp.vect314 = insertelement <16 x double> %temp.vect313, double %765, i32 10
  %temp.vect315 = insertelement <16 x double> %temp.vect314, double %766, i32 11
  %temp.vect316 = insertelement <16 x double> %temp.vect315, double %767, i32 12
  %temp.vect317 = insertelement <16 x double> %temp.vect316, double %768, i32 13
  %temp.vect318 = insertelement <16 x double> %temp.vect317, double %769, i32 14
  %temp.vect319 = insertelement <16 x double> %temp.vect318, double %770, i32 15
  %771 = fadd <16 x double> %temp.vect319, %754
  %772 = load double addrspace(3)* %11, align 8
  %temp320 = insertelement <16 x double> undef, double %772, i32 0
  %vector321 = shufflevector <16 x double> %temp320, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1959" = add nuw i64 %CurrSBIndex..3, 2944
  %"&pSB[currWI].offset1960" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1959"
  %CastToValueType1961 = bitcast i8* %"&pSB[currWI].offset1960" to <16 x double>*
  %loadedValue1962 = load <16 x double>* %CastToValueType1961, align 128
  %773 = fmul <16 x double> %loadedValue1962, %vector321
  %774 = load double* %316, align 8
  %775 = load double* %318, align 8
  %776 = load double* %320, align 8
  %777 = load double* %322, align 8
  %778 = load double* %324, align 8
  %779 = load double* %326, align 8
  %780 = load double* %328, align 8
  %781 = load double* %330, align 8
  %782 = load double* %332, align 8
  %783 = load double* %334, align 8
  %784 = load double* %336, align 8
  %785 = load double* %338, align 8
  %786 = load double* %340, align 8
  %787 = load double* %342, align 8
  %788 = load double* %344, align 8
  %789 = load double* %346, align 8
  %temp.vect322 = insertelement <16 x double> undef, double %774, i32 0
  %temp.vect323 = insertelement <16 x double> %temp.vect322, double %775, i32 1
  %temp.vect324 = insertelement <16 x double> %temp.vect323, double %776, i32 2
  %temp.vect325 = insertelement <16 x double> %temp.vect324, double %777, i32 3
  %temp.vect326 = insertelement <16 x double> %temp.vect325, double %778, i32 4
  %temp.vect327 = insertelement <16 x double> %temp.vect326, double %779, i32 5
  %temp.vect328 = insertelement <16 x double> %temp.vect327, double %780, i32 6
  %temp.vect329 = insertelement <16 x double> %temp.vect328, double %781, i32 7
  %temp.vect330 = insertelement <16 x double> %temp.vect329, double %782, i32 8
  %temp.vect331 = insertelement <16 x double> %temp.vect330, double %783, i32 9
  %temp.vect332 = insertelement <16 x double> %temp.vect331, double %784, i32 10
  %temp.vect333 = insertelement <16 x double> %temp.vect332, double %785, i32 11
  %temp.vect334 = insertelement <16 x double> %temp.vect333, double %786, i32 12
  %temp.vect335 = insertelement <16 x double> %temp.vect334, double %787, i32 13
  %temp.vect336 = insertelement <16 x double> %temp.vect335, double %788, i32 14
  %temp.vect337 = insertelement <16 x double> %temp.vect336, double %789, i32 15
  %790 = fadd <16 x double> %temp.vect337, %773
  %791 = load double addrspace(3)* %13, align 16
  %temp338 = insertelement <16 x double> undef, double %791, i32 0
  %vector339 = shufflevector <16 x double> %temp338, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1954" = add nuw i64 %CurrSBIndex..3, 2944
  %"&pSB[currWI].offset1955" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1954"
  %CastToValueType1956 = bitcast i8* %"&pSB[currWI].offset1955" to <16 x double>*
  %loadedValue1957 = load <16 x double>* %CastToValueType1956, align 128
  %792 = fmul <16 x double> %loadedValue1957, %vector339
  %793 = load double* %348, align 16
  %794 = load double* %350, align 16
  %795 = load double* %352, align 16
  %796 = load double* %354, align 16
  %797 = load double* %356, align 16
  %798 = load double* %358, align 16
  %799 = load double* %360, align 16
  %800 = load double* %362, align 16
  %801 = load double* %364, align 16
  %802 = load double* %366, align 16
  %803 = load double* %368, align 16
  %804 = load double* %370, align 16
  %805 = load double* %372, align 16
  %806 = load double* %374, align 16
  %807 = load double* %376, align 16
  %808 = load double* %378, align 16
  %temp.vect340 = insertelement <16 x double> undef, double %793, i32 0
  %temp.vect341 = insertelement <16 x double> %temp.vect340, double %794, i32 1
  %temp.vect342 = insertelement <16 x double> %temp.vect341, double %795, i32 2
  %temp.vect343 = insertelement <16 x double> %temp.vect342, double %796, i32 3
  %temp.vect344 = insertelement <16 x double> %temp.vect343, double %797, i32 4
  %temp.vect345 = insertelement <16 x double> %temp.vect344, double %798, i32 5
  %temp.vect346 = insertelement <16 x double> %temp.vect345, double %799, i32 6
  %temp.vect347 = insertelement <16 x double> %temp.vect346, double %800, i32 7
  %temp.vect348 = insertelement <16 x double> %temp.vect347, double %801, i32 8
  %temp.vect349 = insertelement <16 x double> %temp.vect348, double %802, i32 9
  %temp.vect350 = insertelement <16 x double> %temp.vect349, double %803, i32 10
  %temp.vect351 = insertelement <16 x double> %temp.vect350, double %804, i32 11
  %temp.vect352 = insertelement <16 x double> %temp.vect351, double %805, i32 12
  %temp.vect353 = insertelement <16 x double> %temp.vect352, double %806, i32 13
  %temp.vect354 = insertelement <16 x double> %temp.vect353, double %807, i32 14
  %temp.vect355 = insertelement <16 x double> %temp.vect354, double %808, i32 15
  %809 = fadd <16 x double> %temp.vect355, %792
  %810 = load double addrspace(3)* %15, align 8
  %temp356 = insertelement <16 x double> undef, double %810, i32 0
  %vector357 = shufflevector <16 x double> %temp356, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1949" = add nuw i64 %CurrSBIndex..3, 2944
  %"&pSB[currWI].offset1950" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1949"
  %CastToValueType1951 = bitcast i8* %"&pSB[currWI].offset1950" to <16 x double>*
  %loadedValue1952 = load <16 x double>* %CastToValueType1951, align 128
  %811 = fmul <16 x double> %loadedValue1952, %vector357
  %812 = load double* %380, align 8
  %813 = load double* %382, align 8
  %814 = load double* %384, align 8
  %815 = load double* %386, align 8
  %816 = load double* %388, align 8
  %817 = load double* %390, align 8
  %818 = load double* %392, align 8
  %819 = load double* %394, align 8
  %820 = load double* %396, align 8
  %821 = load double* %398, align 8
  %822 = load double* %400, align 8
  %823 = load double* %402, align 8
  %824 = load double* %404, align 8
  %825 = load double* %406, align 8
  %826 = load double* %408, align 8
  %827 = load double* %410, align 8
  %temp.vect358 = insertelement <16 x double> undef, double %812, i32 0
  %temp.vect359 = insertelement <16 x double> %temp.vect358, double %813, i32 1
  %temp.vect360 = insertelement <16 x double> %temp.vect359, double %814, i32 2
  %temp.vect361 = insertelement <16 x double> %temp.vect360, double %815, i32 3
  %temp.vect362 = insertelement <16 x double> %temp.vect361, double %816, i32 4
  %temp.vect363 = insertelement <16 x double> %temp.vect362, double %817, i32 5
  %temp.vect364 = insertelement <16 x double> %temp.vect363, double %818, i32 6
  %temp.vect365 = insertelement <16 x double> %temp.vect364, double %819, i32 7
  %temp.vect366 = insertelement <16 x double> %temp.vect365, double %820, i32 8
  %temp.vect367 = insertelement <16 x double> %temp.vect366, double %821, i32 9
  %temp.vect368 = insertelement <16 x double> %temp.vect367, double %822, i32 10
  %temp.vect369 = insertelement <16 x double> %temp.vect368, double %823, i32 11
  %temp.vect370 = insertelement <16 x double> %temp.vect369, double %824, i32 12
  %temp.vect371 = insertelement <16 x double> %temp.vect370, double %825, i32 13
  %temp.vect372 = insertelement <16 x double> %temp.vect371, double %826, i32 14
  %temp.vect373 = insertelement <16 x double> %temp.vect372, double %827, i32 15
  %828 = fadd <16 x double> %temp.vect373, %811
  %829 = load double addrspace(3)* %17, align 16
  %temp374 = insertelement <16 x double> undef, double %829, i32 0
  %vector375 = shufflevector <16 x double> %temp374, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1944" = add nuw i64 %CurrSBIndex..3, 2944
  %"&pSB[currWI].offset1945" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1944"
  %CastToValueType1946 = bitcast i8* %"&pSB[currWI].offset1945" to <16 x double>*
  %loadedValue1947 = load <16 x double>* %CastToValueType1946, align 128
  %830 = fmul <16 x double> %loadedValue1947, %vector375
  %831 = load double* %412, align 16
  %832 = load double* %414, align 16
  %833 = load double* %416, align 16
  %834 = load double* %418, align 16
  %835 = load double* %420, align 16
  %836 = load double* %422, align 16
  %837 = load double* %424, align 16
  %838 = load double* %426, align 16
  %839 = load double* %428, align 16
  %840 = load double* %430, align 16
  %841 = load double* %432, align 16
  %842 = load double* %434, align 16
  %843 = load double* %436, align 16
  %844 = load double* %438, align 16
  %845 = load double* %440, align 16
  %846 = load double* %442, align 16
  %temp.vect376 = insertelement <16 x double> undef, double %831, i32 0
  %temp.vect377 = insertelement <16 x double> %temp.vect376, double %832, i32 1
  %temp.vect378 = insertelement <16 x double> %temp.vect377, double %833, i32 2
  %temp.vect379 = insertelement <16 x double> %temp.vect378, double %834, i32 3
  %temp.vect380 = insertelement <16 x double> %temp.vect379, double %835, i32 4
  %temp.vect381 = insertelement <16 x double> %temp.vect380, double %836, i32 5
  %temp.vect382 = insertelement <16 x double> %temp.vect381, double %837, i32 6
  %temp.vect383 = insertelement <16 x double> %temp.vect382, double %838, i32 7
  %temp.vect384 = insertelement <16 x double> %temp.vect383, double %839, i32 8
  %temp.vect385 = insertelement <16 x double> %temp.vect384, double %840, i32 9
  %temp.vect386 = insertelement <16 x double> %temp.vect385, double %841, i32 10
  %temp.vect387 = insertelement <16 x double> %temp.vect386, double %842, i32 11
  %temp.vect388 = insertelement <16 x double> %temp.vect387, double %843, i32 12
  %temp.vect389 = insertelement <16 x double> %temp.vect388, double %844, i32 13
  %temp.vect390 = insertelement <16 x double> %temp.vect389, double %845, i32 14
  %temp.vect391 = insertelement <16 x double> %temp.vect390, double %846, i32 15
  %847 = fadd <16 x double> %temp.vect391, %830
  %848 = load double addrspace(3)* %19, align 8
  %temp392 = insertelement <16 x double> undef, double %848, i32 0
  %vector393 = shufflevector <16 x double> %temp392, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1939" = add nuw i64 %CurrSBIndex..3, 2944
  %"&pSB[currWI].offset1940" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1939"
  %CastToValueType1941 = bitcast i8* %"&pSB[currWI].offset1940" to <16 x double>*
  %loadedValue1942 = load <16 x double>* %CastToValueType1941, align 128
  %849 = fmul <16 x double> %loadedValue1942, %vector393
  %850 = load double* %444, align 8
  %851 = load double* %446, align 8
  %852 = load double* %448, align 8
  %853 = load double* %450, align 8
  %854 = load double* %452, align 8
  %855 = load double* %454, align 8
  %856 = load double* %456, align 8
  %857 = load double* %458, align 8
  %858 = load double* %460, align 8
  %859 = load double* %462, align 8
  %860 = load double* %464, align 8
  %861 = load double* %466, align 8
  %862 = load double* %468, align 8
  %863 = load double* %470, align 8
  %864 = load double* %472, align 8
  %865 = load double* %474, align 8
  %temp.vect394 = insertelement <16 x double> undef, double %850, i32 0
  %temp.vect395 = insertelement <16 x double> %temp.vect394, double %851, i32 1
  %temp.vect396 = insertelement <16 x double> %temp.vect395, double %852, i32 2
  %temp.vect397 = insertelement <16 x double> %temp.vect396, double %853, i32 3
  %temp.vect398 = insertelement <16 x double> %temp.vect397, double %854, i32 4
  %temp.vect399 = insertelement <16 x double> %temp.vect398, double %855, i32 5
  %temp.vect400 = insertelement <16 x double> %temp.vect399, double %856, i32 6
  %temp.vect401 = insertelement <16 x double> %temp.vect400, double %857, i32 7
  %temp.vect402 = insertelement <16 x double> %temp.vect401, double %858, i32 8
  %temp.vect403 = insertelement <16 x double> %temp.vect402, double %859, i32 9
  %temp.vect404 = insertelement <16 x double> %temp.vect403, double %860, i32 10
  %temp.vect405 = insertelement <16 x double> %temp.vect404, double %861, i32 11
  %temp.vect406 = insertelement <16 x double> %temp.vect405, double %862, i32 12
  %temp.vect407 = insertelement <16 x double> %temp.vect406, double %863, i32 13
  %temp.vect408 = insertelement <16 x double> %temp.vect407, double %864, i32 14
  %temp.vect409 = insertelement <16 x double> %temp.vect408, double %865, i32 15
  %866 = fadd <16 x double> %temp.vect409, %849
  %867 = load double addrspace(3)* %21, align 16
  %temp410 = insertelement <16 x double> undef, double %867, i32 0
  %vector411 = shufflevector <16 x double> %temp410, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1934" = add nuw i64 %CurrSBIndex..3, 2944
  %"&pSB[currWI].offset1935" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1934"
  %CastToValueType1936 = bitcast i8* %"&pSB[currWI].offset1935" to <16 x double>*
  %loadedValue1937 = load <16 x double>* %CastToValueType1936, align 128
  %868 = fmul <16 x double> %loadedValue1937, %vector411
  %869 = load double* %476, align 16
  %870 = load double* %478, align 16
  %871 = load double* %480, align 16
  %872 = load double* %482, align 16
  %873 = load double* %484, align 16
  %874 = load double* %486, align 16
  %875 = load double* %488, align 16
  %876 = load double* %490, align 16
  %877 = load double* %492, align 16
  %878 = load double* %494, align 16
  %879 = load double* %496, align 16
  %880 = load double* %498, align 16
  %881 = load double* %500, align 16
  %882 = load double* %502, align 16
  %883 = load double* %504, align 16
  %884 = load double* %506, align 16
  %temp.vect412 = insertelement <16 x double> undef, double %869, i32 0
  %temp.vect413 = insertelement <16 x double> %temp.vect412, double %870, i32 1
  %temp.vect414 = insertelement <16 x double> %temp.vect413, double %871, i32 2
  %temp.vect415 = insertelement <16 x double> %temp.vect414, double %872, i32 3
  %temp.vect416 = insertelement <16 x double> %temp.vect415, double %873, i32 4
  %temp.vect417 = insertelement <16 x double> %temp.vect416, double %874, i32 5
  %temp.vect418 = insertelement <16 x double> %temp.vect417, double %875, i32 6
  %temp.vect419 = insertelement <16 x double> %temp.vect418, double %876, i32 7
  %temp.vect420 = insertelement <16 x double> %temp.vect419, double %877, i32 8
  %temp.vect421 = insertelement <16 x double> %temp.vect420, double %878, i32 9
  %temp.vect422 = insertelement <16 x double> %temp.vect421, double %879, i32 10
  %temp.vect423 = insertelement <16 x double> %temp.vect422, double %880, i32 11
  %temp.vect424 = insertelement <16 x double> %temp.vect423, double %881, i32 12
  %temp.vect425 = insertelement <16 x double> %temp.vect424, double %882, i32 13
  %temp.vect426 = insertelement <16 x double> %temp.vect425, double %883, i32 14
  %temp.vect427 = insertelement <16 x double> %temp.vect426, double %884, i32 15
  %885 = fadd <16 x double> %temp.vect427, %868
  %886 = load double addrspace(3)* %23, align 8
  %temp428 = insertelement <16 x double> undef, double %886, i32 0
  %vector429 = shufflevector <16 x double> %temp428, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1929" = add nuw i64 %CurrSBIndex..3, 2944
  %"&pSB[currWI].offset1930" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1929"
  %CastToValueType1931 = bitcast i8* %"&pSB[currWI].offset1930" to <16 x double>*
  %loadedValue1932 = load <16 x double>* %CastToValueType1931, align 128
  %887 = fmul <16 x double> %loadedValue1932, %vector429
  %888 = load double* %508, align 8
  %889 = load double* %510, align 8
  %890 = load double* %512, align 8
  %891 = load double* %514, align 8
  %892 = load double* %516, align 8
  %893 = load double* %518, align 8
  %894 = load double* %520, align 8
  %895 = load double* %522, align 8
  %896 = load double* %524, align 8
  %897 = load double* %526, align 8
  %898 = load double* %528, align 8
  %899 = load double* %530, align 8
  %900 = load double* %532, align 8
  %901 = load double* %534, align 8
  %902 = load double* %536, align 8
  %903 = load double* %538, align 8
  %temp.vect430 = insertelement <16 x double> undef, double %888, i32 0
  %temp.vect431 = insertelement <16 x double> %temp.vect430, double %889, i32 1
  %temp.vect432 = insertelement <16 x double> %temp.vect431, double %890, i32 2
  %temp.vect433 = insertelement <16 x double> %temp.vect432, double %891, i32 3
  %temp.vect434 = insertelement <16 x double> %temp.vect433, double %892, i32 4
  %temp.vect435 = insertelement <16 x double> %temp.vect434, double %893, i32 5
  %temp.vect436 = insertelement <16 x double> %temp.vect435, double %894, i32 6
  %temp.vect437 = insertelement <16 x double> %temp.vect436, double %895, i32 7
  %temp.vect438 = insertelement <16 x double> %temp.vect437, double %896, i32 8
  %temp.vect439 = insertelement <16 x double> %temp.vect438, double %897, i32 9
  %temp.vect440 = insertelement <16 x double> %temp.vect439, double %898, i32 10
  %temp.vect441 = insertelement <16 x double> %temp.vect440, double %899, i32 11
  %temp.vect442 = insertelement <16 x double> %temp.vect441, double %900, i32 12
  %temp.vect443 = insertelement <16 x double> %temp.vect442, double %901, i32 13
  %temp.vect444 = insertelement <16 x double> %temp.vect443, double %902, i32 14
  %temp.vect445 = insertelement <16 x double> %temp.vect444, double %903, i32 15
  %904 = fadd <16 x double> %temp.vect445, %887
  %905 = load double addrspace(3)* %25, align 16
  %temp446 = insertelement <16 x double> undef, double %905, i32 0
  %vector447 = shufflevector <16 x double> %temp446, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1924" = add nuw i64 %CurrSBIndex..3, 2944
  %"&pSB[currWI].offset1925" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1924"
  %CastToValueType1926 = bitcast i8* %"&pSB[currWI].offset1925" to <16 x double>*
  %loadedValue1927 = load <16 x double>* %CastToValueType1926, align 128
  %906 = fmul <16 x double> %loadedValue1927, %vector447
  %907 = load double* %540, align 16
  %908 = load double* %542, align 16
  %909 = load double* %544, align 16
  %910 = load double* %546, align 16
  %911 = load double* %548, align 16
  %912 = load double* %550, align 16
  %913 = load double* %552, align 16
  %914 = load double* %554, align 16
  %915 = load double* %556, align 16
  %916 = load double* %558, align 16
  %917 = load double* %560, align 16
  %918 = load double* %562, align 16
  %919 = load double* %564, align 16
  %920 = load double* %566, align 16
  %921 = load double* %568, align 16
  %922 = load double* %570, align 16
  %temp.vect448 = insertelement <16 x double> undef, double %907, i32 0
  %temp.vect449 = insertelement <16 x double> %temp.vect448, double %908, i32 1
  %temp.vect450 = insertelement <16 x double> %temp.vect449, double %909, i32 2
  %temp.vect451 = insertelement <16 x double> %temp.vect450, double %910, i32 3
  %temp.vect452 = insertelement <16 x double> %temp.vect451, double %911, i32 4
  %temp.vect453 = insertelement <16 x double> %temp.vect452, double %912, i32 5
  %temp.vect454 = insertelement <16 x double> %temp.vect453, double %913, i32 6
  %temp.vect455 = insertelement <16 x double> %temp.vect454, double %914, i32 7
  %temp.vect456 = insertelement <16 x double> %temp.vect455, double %915, i32 8
  %temp.vect457 = insertelement <16 x double> %temp.vect456, double %916, i32 9
  %temp.vect458 = insertelement <16 x double> %temp.vect457, double %917, i32 10
  %temp.vect459 = insertelement <16 x double> %temp.vect458, double %918, i32 11
  %temp.vect460 = insertelement <16 x double> %temp.vect459, double %919, i32 12
  %temp.vect461 = insertelement <16 x double> %temp.vect460, double %920, i32 13
  %temp.vect462 = insertelement <16 x double> %temp.vect461, double %921, i32 14
  %temp.vect463 = insertelement <16 x double> %temp.vect462, double %922, i32 15
  %923 = fadd <16 x double> %temp.vect463, %906
  %924 = load double addrspace(3)* %27, align 8
  %temp464 = insertelement <16 x double> undef, double %924, i32 0
  %vector465 = shufflevector <16 x double> %temp464, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1919" = add nuw i64 %CurrSBIndex..3, 2944
  %"&pSB[currWI].offset1920" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1919"
  %CastToValueType1921 = bitcast i8* %"&pSB[currWI].offset1920" to <16 x double>*
  %loadedValue1922 = load <16 x double>* %CastToValueType1921, align 128
  %925 = fmul <16 x double> %loadedValue1922, %vector465
  %926 = load double* %572, align 8
  %927 = load double* %574, align 8
  %928 = load double* %576, align 8
  %929 = load double* %578, align 8
  %930 = load double* %580, align 8
  %931 = load double* %582, align 8
  %932 = load double* %584, align 8
  %933 = load double* %586, align 8
  %934 = load double* %588, align 8
  %935 = load double* %590, align 8
  %936 = load double* %592, align 8
  %937 = load double* %594, align 8
  %938 = load double* %596, align 8
  %939 = load double* %598, align 8
  %940 = load double* %600, align 8
  %941 = load double* %602, align 8
  %temp.vect466 = insertelement <16 x double> undef, double %926, i32 0
  %temp.vect467 = insertelement <16 x double> %temp.vect466, double %927, i32 1
  %temp.vect468 = insertelement <16 x double> %temp.vect467, double %928, i32 2
  %temp.vect469 = insertelement <16 x double> %temp.vect468, double %929, i32 3
  %temp.vect470 = insertelement <16 x double> %temp.vect469, double %930, i32 4
  %temp.vect471 = insertelement <16 x double> %temp.vect470, double %931, i32 5
  %temp.vect472 = insertelement <16 x double> %temp.vect471, double %932, i32 6
  %temp.vect473 = insertelement <16 x double> %temp.vect472, double %933, i32 7
  %temp.vect474 = insertelement <16 x double> %temp.vect473, double %934, i32 8
  %temp.vect475 = insertelement <16 x double> %temp.vect474, double %935, i32 9
  %temp.vect476 = insertelement <16 x double> %temp.vect475, double %936, i32 10
  %temp.vect477 = insertelement <16 x double> %temp.vect476, double %937, i32 11
  %temp.vect478 = insertelement <16 x double> %temp.vect477, double %938, i32 12
  %temp.vect479 = insertelement <16 x double> %temp.vect478, double %939, i32 13
  %temp.vect480 = insertelement <16 x double> %temp.vect479, double %940, i32 14
  %temp.vect481 = insertelement <16 x double> %temp.vect480, double %941, i32 15
  %942 = fadd <16 x double> %temp.vect481, %925
  %943 = load double addrspace(3)* %29, align 16
  %temp482 = insertelement <16 x double> undef, double %943, i32 0
  %vector483 = shufflevector <16 x double> %temp482, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1914" = add nuw i64 %CurrSBIndex..3, 2944
  %"&pSB[currWI].offset1915" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1914"
  %CastToValueType1916 = bitcast i8* %"&pSB[currWI].offset1915" to <16 x double>*
  %loadedValue1917 = load <16 x double>* %CastToValueType1916, align 128
  %944 = fmul <16 x double> %loadedValue1917, %vector483
  %945 = load double* %604, align 16
  %946 = load double* %606, align 16
  %947 = load double* %608, align 16
  %948 = load double* %610, align 16
  %949 = load double* %612, align 16
  %950 = load double* %614, align 16
  %951 = load double* %616, align 16
  %952 = load double* %618, align 16
  %953 = load double* %620, align 16
  %954 = load double* %622, align 16
  %955 = load double* %624, align 16
  %956 = load double* %626, align 16
  %957 = load double* %628, align 16
  %958 = load double* %630, align 16
  %959 = load double* %632, align 16
  %960 = load double* %634, align 16
  %temp.vect484 = insertelement <16 x double> undef, double %945, i32 0
  %temp.vect485 = insertelement <16 x double> %temp.vect484, double %946, i32 1
  %temp.vect486 = insertelement <16 x double> %temp.vect485, double %947, i32 2
  %temp.vect487 = insertelement <16 x double> %temp.vect486, double %948, i32 3
  %temp.vect488 = insertelement <16 x double> %temp.vect487, double %949, i32 4
  %temp.vect489 = insertelement <16 x double> %temp.vect488, double %950, i32 5
  %temp.vect490 = insertelement <16 x double> %temp.vect489, double %951, i32 6
  %temp.vect491 = insertelement <16 x double> %temp.vect490, double %952, i32 7
  %temp.vect492 = insertelement <16 x double> %temp.vect491, double %953, i32 8
  %temp.vect493 = insertelement <16 x double> %temp.vect492, double %954, i32 9
  %temp.vect494 = insertelement <16 x double> %temp.vect493, double %955, i32 10
  %temp.vect495 = insertelement <16 x double> %temp.vect494, double %956, i32 11
  %temp.vect496 = insertelement <16 x double> %temp.vect495, double %957, i32 12
  %temp.vect497 = insertelement <16 x double> %temp.vect496, double %958, i32 13
  %temp.vect498 = insertelement <16 x double> %temp.vect497, double %959, i32 14
  %temp.vect499 = insertelement <16 x double> %temp.vect498, double %960, i32 15
  %961 = fadd <16 x double> %temp.vect499, %944
  %962 = load double addrspace(3)* %31, align 8
  %temp500 = insertelement <16 x double> undef, double %962, i32 0
  %vector501 = shufflevector <16 x double> %temp500, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1909" = add nuw i64 %CurrSBIndex..3, 2944
  %"&pSB[currWI].offset1910" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1909"
  %CastToValueType1911 = bitcast i8* %"&pSB[currWI].offset1910" to <16 x double>*
  %loadedValue1912 = load <16 x double>* %CastToValueType1911, align 128
  %963 = fmul <16 x double> %loadedValue1912, %vector501
  %964 = load double* %636, align 8
  %965 = load double* %638, align 8
  %966 = load double* %640, align 8
  %967 = load double* %642, align 8
  %968 = load double* %644, align 8
  %969 = load double* %646, align 8
  %970 = load double* %648, align 8
  %971 = load double* %650, align 8
  %972 = load double* %652, align 8
  %973 = load double* %654, align 8
  %974 = load double* %656, align 8
  %975 = load double* %658, align 8
  %976 = load double* %660, align 8
  %977 = load double* %662, align 8
  %978 = load double* %664, align 8
  %979 = load double* %666, align 8
  %temp.vect502 = insertelement <16 x double> undef, double %964, i32 0
  %temp.vect503 = insertelement <16 x double> %temp.vect502, double %965, i32 1
  %temp.vect504 = insertelement <16 x double> %temp.vect503, double %966, i32 2
  %temp.vect505 = insertelement <16 x double> %temp.vect504, double %967, i32 3
  %temp.vect506 = insertelement <16 x double> %temp.vect505, double %968, i32 4
  %temp.vect507 = insertelement <16 x double> %temp.vect506, double %969, i32 5
  %temp.vect508 = insertelement <16 x double> %temp.vect507, double %970, i32 6
  %temp.vect509 = insertelement <16 x double> %temp.vect508, double %971, i32 7
  %temp.vect510 = insertelement <16 x double> %temp.vect509, double %972, i32 8
  %temp.vect511 = insertelement <16 x double> %temp.vect510, double %973, i32 9
  %temp.vect512 = insertelement <16 x double> %temp.vect511, double %974, i32 10
  %temp.vect513 = insertelement <16 x double> %temp.vect512, double %975, i32 11
  %temp.vect514 = insertelement <16 x double> %temp.vect513, double %976, i32 12
  %temp.vect515 = insertelement <16 x double> %temp.vect514, double %977, i32 13
  %temp.vect516 = insertelement <16 x double> %temp.vect515, double %978, i32 14
  %temp.vect517 = insertelement <16 x double> %temp.vect516, double %979, i32 15
  %980 = fadd <16 x double> %temp.vect517, %963
  %981 = load double addrspace(3)* %33, align 16
  %temp518 = insertelement <16 x double> undef, double %981, i32 0
  %vector519 = shufflevector <16 x double> %temp518, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1900" = add nuw i64 %CurrSBIndex..3, 2816
  %"&pSB[currWI].offset1901" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1900"
  %CastToValueType1902 = bitcast i8* %"&pSB[currWI].offset1901" to <16 x double>*
  %loadedValue1903 = load <16 x double>* %CastToValueType1902, align 128
  %982 = fmul <16 x double> %loadedValue1903, %vector519
  %983 = fadd <16 x double> %695, %982
  %984 = load double addrspace(3)* %35, align 8
  %temp520 = insertelement <16 x double> undef, double %984, i32 0
  %vector521 = shufflevector <16 x double> %temp520, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1895" = add nuw i64 %CurrSBIndex..3, 2816
  %"&pSB[currWI].offset1896" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1895"
  %CastToValueType1897 = bitcast i8* %"&pSB[currWI].offset1896" to <16 x double>*
  %loadedValue1898 = load <16 x double>* %CastToValueType1897, align 128
  %985 = fmul <16 x double> %loadedValue1898, %vector521
  %986 = fadd <16 x double> %714, %985
  %987 = load double addrspace(3)* %37, align 16
  %temp522 = insertelement <16 x double> undef, double %987, i32 0
  %vector523 = shufflevector <16 x double> %temp522, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1890" = add nuw i64 %CurrSBIndex..3, 2816
  %"&pSB[currWI].offset1891" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1890"
  %CastToValueType1892 = bitcast i8* %"&pSB[currWI].offset1891" to <16 x double>*
  %loadedValue1893 = load <16 x double>* %CastToValueType1892, align 128
  %988 = fmul <16 x double> %loadedValue1893, %vector523
  %989 = fadd <16 x double> %733, %988
  %990 = load double addrspace(3)* %39, align 8
  %temp524 = insertelement <16 x double> undef, double %990, i32 0
  %vector525 = shufflevector <16 x double> %temp524, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1885" = add nuw i64 %CurrSBIndex..3, 2816
  %"&pSB[currWI].offset1886" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1885"
  %CastToValueType1887 = bitcast i8* %"&pSB[currWI].offset1886" to <16 x double>*
  %loadedValue1888 = load <16 x double>* %CastToValueType1887, align 128
  %991 = fmul <16 x double> %loadedValue1888, %vector525
  %992 = fadd <16 x double> %752, %991
  %993 = load double addrspace(3)* %41, align 16
  %temp526 = insertelement <16 x double> undef, double %993, i32 0
  %vector527 = shufflevector <16 x double> %temp526, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1880" = add nuw i64 %CurrSBIndex..3, 2816
  %"&pSB[currWI].offset1881" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1880"
  %CastToValueType1882 = bitcast i8* %"&pSB[currWI].offset1881" to <16 x double>*
  %loadedValue1883 = load <16 x double>* %CastToValueType1882, align 128
  %994 = fmul <16 x double> %loadedValue1883, %vector527
  %995 = fadd <16 x double> %771, %994
  %996 = load double addrspace(3)* %43, align 8
  %temp528 = insertelement <16 x double> undef, double %996, i32 0
  %vector529 = shufflevector <16 x double> %temp528, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1875" = add nuw i64 %CurrSBIndex..3, 2816
  %"&pSB[currWI].offset1876" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1875"
  %CastToValueType1877 = bitcast i8* %"&pSB[currWI].offset1876" to <16 x double>*
  %loadedValue1878 = load <16 x double>* %CastToValueType1877, align 128
  %997 = fmul <16 x double> %loadedValue1878, %vector529
  %998 = fadd <16 x double> %790, %997
  %999 = load double addrspace(3)* %45, align 16
  %temp530 = insertelement <16 x double> undef, double %999, i32 0
  %vector531 = shufflevector <16 x double> %temp530, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1870" = add nuw i64 %CurrSBIndex..3, 2816
  %"&pSB[currWI].offset1871" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1870"
  %CastToValueType1872 = bitcast i8* %"&pSB[currWI].offset1871" to <16 x double>*
  %loadedValue1873 = load <16 x double>* %CastToValueType1872, align 128
  %1000 = fmul <16 x double> %loadedValue1873, %vector531
  %1001 = fadd <16 x double> %809, %1000
  %1002 = load double addrspace(3)* %47, align 8
  %temp532 = insertelement <16 x double> undef, double %1002, i32 0
  %vector533 = shufflevector <16 x double> %temp532, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1865" = add nuw i64 %CurrSBIndex..3, 2816
  %"&pSB[currWI].offset1866" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1865"
  %CastToValueType1867 = bitcast i8* %"&pSB[currWI].offset1866" to <16 x double>*
  %loadedValue1868 = load <16 x double>* %CastToValueType1867, align 128
  %1003 = fmul <16 x double> %loadedValue1868, %vector533
  %1004 = fadd <16 x double> %828, %1003
  %1005 = load double addrspace(3)* %49, align 16
  %temp534 = insertelement <16 x double> undef, double %1005, i32 0
  %vector535 = shufflevector <16 x double> %temp534, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1860" = add nuw i64 %CurrSBIndex..3, 2816
  %"&pSB[currWI].offset1861" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1860"
  %CastToValueType1862 = bitcast i8* %"&pSB[currWI].offset1861" to <16 x double>*
  %loadedValue1863 = load <16 x double>* %CastToValueType1862, align 128
  %1006 = fmul <16 x double> %loadedValue1863, %vector535
  %1007 = fadd <16 x double> %847, %1006
  %1008 = load double addrspace(3)* %51, align 8
  %temp536 = insertelement <16 x double> undef, double %1008, i32 0
  %vector537 = shufflevector <16 x double> %temp536, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1855" = add nuw i64 %CurrSBIndex..3, 2816
  %"&pSB[currWI].offset1856" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1855"
  %CastToValueType1857 = bitcast i8* %"&pSB[currWI].offset1856" to <16 x double>*
  %loadedValue1858 = load <16 x double>* %CastToValueType1857, align 128
  %1009 = fmul <16 x double> %loadedValue1858, %vector537
  %1010 = fadd <16 x double> %866, %1009
  %1011 = load double addrspace(3)* %53, align 16
  %temp538 = insertelement <16 x double> undef, double %1011, i32 0
  %vector539 = shufflevector <16 x double> %temp538, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1850" = add nuw i64 %CurrSBIndex..3, 2816
  %"&pSB[currWI].offset1851" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1850"
  %CastToValueType1852 = bitcast i8* %"&pSB[currWI].offset1851" to <16 x double>*
  %loadedValue1853 = load <16 x double>* %CastToValueType1852, align 128
  %1012 = fmul <16 x double> %loadedValue1853, %vector539
  %1013 = fadd <16 x double> %885, %1012
  %1014 = load double addrspace(3)* %55, align 8
  %temp540 = insertelement <16 x double> undef, double %1014, i32 0
  %vector541 = shufflevector <16 x double> %temp540, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1845" = add nuw i64 %CurrSBIndex..3, 2816
  %"&pSB[currWI].offset1846" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1845"
  %CastToValueType1847 = bitcast i8* %"&pSB[currWI].offset1846" to <16 x double>*
  %loadedValue1848 = load <16 x double>* %CastToValueType1847, align 128
  %1015 = fmul <16 x double> %loadedValue1848, %vector541
  %1016 = fadd <16 x double> %904, %1015
  %1017 = load double addrspace(3)* %57, align 16
  %temp542 = insertelement <16 x double> undef, double %1017, i32 0
  %vector543 = shufflevector <16 x double> %temp542, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1840" = add nuw i64 %CurrSBIndex..3, 2816
  %"&pSB[currWI].offset1841" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1840"
  %CastToValueType1842 = bitcast i8* %"&pSB[currWI].offset1841" to <16 x double>*
  %loadedValue1843 = load <16 x double>* %CastToValueType1842, align 128
  %1018 = fmul <16 x double> %loadedValue1843, %vector543
  %1019 = fadd <16 x double> %923, %1018
  %1020 = load double addrspace(3)* %59, align 8
  %temp544 = insertelement <16 x double> undef, double %1020, i32 0
  %vector545 = shufflevector <16 x double> %temp544, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1835" = add nuw i64 %CurrSBIndex..3, 2816
  %"&pSB[currWI].offset1836" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1835"
  %CastToValueType1837 = bitcast i8* %"&pSB[currWI].offset1836" to <16 x double>*
  %loadedValue1838 = load <16 x double>* %CastToValueType1837, align 128
  %1021 = fmul <16 x double> %loadedValue1838, %vector545
  %1022 = fadd <16 x double> %942, %1021
  %1023 = load double addrspace(3)* %61, align 16
  %temp546 = insertelement <16 x double> undef, double %1023, i32 0
  %vector547 = shufflevector <16 x double> %temp546, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1830" = add nuw i64 %CurrSBIndex..3, 2816
  %"&pSB[currWI].offset1831" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1830"
  %CastToValueType1832 = bitcast i8* %"&pSB[currWI].offset1831" to <16 x double>*
  %loadedValue1833 = load <16 x double>* %CastToValueType1832, align 128
  %1024 = fmul <16 x double> %loadedValue1833, %vector547
  %1025 = fadd <16 x double> %961, %1024
  %1026 = load double addrspace(3)* %63, align 8
  %temp548 = insertelement <16 x double> undef, double %1026, i32 0
  %vector549 = shufflevector <16 x double> %temp548, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1825" = add nuw i64 %CurrSBIndex..3, 2816
  %"&pSB[currWI].offset1826" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1825"
  %CastToValueType1827 = bitcast i8* %"&pSB[currWI].offset1826" to <16 x double>*
  %loadedValue1828 = load <16 x double>* %CastToValueType1827, align 128
  %1027 = fmul <16 x double> %loadedValue1828, %vector549
  %1028 = fadd <16 x double> %980, %1027
  %1029 = load double addrspace(3)* %65, align 16
  %temp550 = insertelement <16 x double> undef, double %1029, i32 0
  %vector551 = shufflevector <16 x double> %temp550, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1816" = add nuw i64 %CurrSBIndex..3, 2688
  %"&pSB[currWI].offset1817" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1816"
  %CastToValueType1818 = bitcast i8* %"&pSB[currWI].offset1817" to <16 x double>*
  %loadedValue1819 = load <16 x double>* %CastToValueType1818, align 128
  %1030 = fmul <16 x double> %loadedValue1819, %vector551
  %1031 = fadd <16 x double> %983, %1030
  %1032 = load double addrspace(3)* %67, align 8
  %temp552 = insertelement <16 x double> undef, double %1032, i32 0
  %vector553 = shufflevector <16 x double> %temp552, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1811" = add nuw i64 %CurrSBIndex..3, 2688
  %"&pSB[currWI].offset1812" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1811"
  %CastToValueType1813 = bitcast i8* %"&pSB[currWI].offset1812" to <16 x double>*
  %loadedValue1814 = load <16 x double>* %CastToValueType1813, align 128
  %1033 = fmul <16 x double> %loadedValue1814, %vector553
  %1034 = fadd <16 x double> %986, %1033
  %1035 = load double addrspace(3)* %69, align 16
  %temp554 = insertelement <16 x double> undef, double %1035, i32 0
  %vector555 = shufflevector <16 x double> %temp554, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1806" = add nuw i64 %CurrSBIndex..3, 2688
  %"&pSB[currWI].offset1807" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1806"
  %CastToValueType1808 = bitcast i8* %"&pSB[currWI].offset1807" to <16 x double>*
  %loadedValue1809 = load <16 x double>* %CastToValueType1808, align 128
  %1036 = fmul <16 x double> %loadedValue1809, %vector555
  %1037 = fadd <16 x double> %989, %1036
  %1038 = load double addrspace(3)* %71, align 8
  %temp556 = insertelement <16 x double> undef, double %1038, i32 0
  %vector557 = shufflevector <16 x double> %temp556, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1801" = add nuw i64 %CurrSBIndex..3, 2688
  %"&pSB[currWI].offset1802" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1801"
  %CastToValueType1803 = bitcast i8* %"&pSB[currWI].offset1802" to <16 x double>*
  %loadedValue1804 = load <16 x double>* %CastToValueType1803, align 128
  %1039 = fmul <16 x double> %loadedValue1804, %vector557
  %1040 = fadd <16 x double> %992, %1039
  %1041 = load double addrspace(3)* %73, align 16
  %temp558 = insertelement <16 x double> undef, double %1041, i32 0
  %vector559 = shufflevector <16 x double> %temp558, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1796" = add nuw i64 %CurrSBIndex..3, 2688
  %"&pSB[currWI].offset1797" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1796"
  %CastToValueType1798 = bitcast i8* %"&pSB[currWI].offset1797" to <16 x double>*
  %loadedValue1799 = load <16 x double>* %CastToValueType1798, align 128
  %1042 = fmul <16 x double> %loadedValue1799, %vector559
  %1043 = fadd <16 x double> %995, %1042
  %1044 = load double addrspace(3)* %75, align 8
  %temp560 = insertelement <16 x double> undef, double %1044, i32 0
  %vector561 = shufflevector <16 x double> %temp560, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1791" = add nuw i64 %CurrSBIndex..3, 2688
  %"&pSB[currWI].offset1792" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1791"
  %CastToValueType1793 = bitcast i8* %"&pSB[currWI].offset1792" to <16 x double>*
  %loadedValue1794 = load <16 x double>* %CastToValueType1793, align 128
  %1045 = fmul <16 x double> %loadedValue1794, %vector561
  %1046 = fadd <16 x double> %998, %1045
  %1047 = load double addrspace(3)* %77, align 16
  %temp562 = insertelement <16 x double> undef, double %1047, i32 0
  %vector563 = shufflevector <16 x double> %temp562, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1786" = add nuw i64 %CurrSBIndex..3, 2688
  %"&pSB[currWI].offset1787" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1786"
  %CastToValueType1788 = bitcast i8* %"&pSB[currWI].offset1787" to <16 x double>*
  %loadedValue1789 = load <16 x double>* %CastToValueType1788, align 128
  %1048 = fmul <16 x double> %loadedValue1789, %vector563
  %1049 = fadd <16 x double> %1001, %1048
  %1050 = load double addrspace(3)* %79, align 8
  %temp564 = insertelement <16 x double> undef, double %1050, i32 0
  %vector565 = shufflevector <16 x double> %temp564, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1781" = add nuw i64 %CurrSBIndex..3, 2688
  %"&pSB[currWI].offset1782" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1781"
  %CastToValueType1783 = bitcast i8* %"&pSB[currWI].offset1782" to <16 x double>*
  %loadedValue1784 = load <16 x double>* %CastToValueType1783, align 128
  %1051 = fmul <16 x double> %loadedValue1784, %vector565
  %1052 = fadd <16 x double> %1004, %1051
  %1053 = load double addrspace(3)* %81, align 16
  %temp566 = insertelement <16 x double> undef, double %1053, i32 0
  %vector567 = shufflevector <16 x double> %temp566, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1776" = add nuw i64 %CurrSBIndex..3, 2688
  %"&pSB[currWI].offset1777" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1776"
  %CastToValueType1778 = bitcast i8* %"&pSB[currWI].offset1777" to <16 x double>*
  %loadedValue1779 = load <16 x double>* %CastToValueType1778, align 128
  %1054 = fmul <16 x double> %loadedValue1779, %vector567
  %1055 = fadd <16 x double> %1007, %1054
  %1056 = load double addrspace(3)* %83, align 8
  %temp568 = insertelement <16 x double> undef, double %1056, i32 0
  %vector569 = shufflevector <16 x double> %temp568, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1771" = add nuw i64 %CurrSBIndex..3, 2688
  %"&pSB[currWI].offset1772" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1771"
  %CastToValueType1773 = bitcast i8* %"&pSB[currWI].offset1772" to <16 x double>*
  %loadedValue1774 = load <16 x double>* %CastToValueType1773, align 128
  %1057 = fmul <16 x double> %loadedValue1774, %vector569
  %1058 = fadd <16 x double> %1010, %1057
  %1059 = load double addrspace(3)* %85, align 16
  %temp570 = insertelement <16 x double> undef, double %1059, i32 0
  %vector571 = shufflevector <16 x double> %temp570, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1766" = add nuw i64 %CurrSBIndex..3, 2688
  %"&pSB[currWI].offset1767" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1766"
  %CastToValueType1768 = bitcast i8* %"&pSB[currWI].offset1767" to <16 x double>*
  %loadedValue1769 = load <16 x double>* %CastToValueType1768, align 128
  %1060 = fmul <16 x double> %loadedValue1769, %vector571
  %1061 = fadd <16 x double> %1013, %1060
  %1062 = load double addrspace(3)* %87, align 8
  %temp572 = insertelement <16 x double> undef, double %1062, i32 0
  %vector573 = shufflevector <16 x double> %temp572, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1761" = add nuw i64 %CurrSBIndex..3, 2688
  %"&pSB[currWI].offset1762" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1761"
  %CastToValueType1763 = bitcast i8* %"&pSB[currWI].offset1762" to <16 x double>*
  %loadedValue1764 = load <16 x double>* %CastToValueType1763, align 128
  %1063 = fmul <16 x double> %loadedValue1764, %vector573
  %1064 = fadd <16 x double> %1016, %1063
  %1065 = load double addrspace(3)* %89, align 16
  %temp574 = insertelement <16 x double> undef, double %1065, i32 0
  %vector575 = shufflevector <16 x double> %temp574, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1756" = add nuw i64 %CurrSBIndex..3, 2688
  %"&pSB[currWI].offset1757" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1756"
  %CastToValueType1758 = bitcast i8* %"&pSB[currWI].offset1757" to <16 x double>*
  %loadedValue1759 = load <16 x double>* %CastToValueType1758, align 128
  %1066 = fmul <16 x double> %loadedValue1759, %vector575
  %1067 = fadd <16 x double> %1019, %1066
  %1068 = load double addrspace(3)* %91, align 8
  %temp576 = insertelement <16 x double> undef, double %1068, i32 0
  %vector577 = shufflevector <16 x double> %temp576, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1751" = add nuw i64 %CurrSBIndex..3, 2688
  %"&pSB[currWI].offset1752" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1751"
  %CastToValueType1753 = bitcast i8* %"&pSB[currWI].offset1752" to <16 x double>*
  %loadedValue1754 = load <16 x double>* %CastToValueType1753, align 128
  %1069 = fmul <16 x double> %loadedValue1754, %vector577
  %1070 = fadd <16 x double> %1022, %1069
  %1071 = load double addrspace(3)* %93, align 16
  %temp578 = insertelement <16 x double> undef, double %1071, i32 0
  %vector579 = shufflevector <16 x double> %temp578, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1746" = add nuw i64 %CurrSBIndex..3, 2688
  %"&pSB[currWI].offset1747" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1746"
  %CastToValueType1748 = bitcast i8* %"&pSB[currWI].offset1747" to <16 x double>*
  %loadedValue1749 = load <16 x double>* %CastToValueType1748, align 128
  %1072 = fmul <16 x double> %loadedValue1749, %vector579
  %1073 = fadd <16 x double> %1025, %1072
  %1074 = load double addrspace(3)* %95, align 8
  %temp580 = insertelement <16 x double> undef, double %1074, i32 0
  %vector581 = shufflevector <16 x double> %temp580, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1741" = add nuw i64 %CurrSBIndex..3, 2688
  %"&pSB[currWI].offset1742" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1741"
  %CastToValueType1743 = bitcast i8* %"&pSB[currWI].offset1742" to <16 x double>*
  %loadedValue1744 = load <16 x double>* %CastToValueType1743, align 128
  %1075 = fmul <16 x double> %loadedValue1744, %vector581
  %1076 = fadd <16 x double> %1028, %1075
  %1077 = load double addrspace(3)* %97, align 16
  %temp582 = insertelement <16 x double> undef, double %1077, i32 0
  %vector583 = shufflevector <16 x double> %temp582, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1732" = add nuw i64 %CurrSBIndex..3, 2560
  %"&pSB[currWI].offset1733" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1732"
  %CastToValueType1734 = bitcast i8* %"&pSB[currWI].offset1733" to <16 x double>*
  %loadedValue1735 = load <16 x double>* %CastToValueType1734, align 128
  %1078 = fmul <16 x double> %loadedValue1735, %vector583
  %1079 = fadd <16 x double> %1031, %1078
  %extract584 = extractelement <16 x double> %1079, i32 0
  %extract585 = extractelement <16 x double> %1079, i32 1
  %extract586 = extractelement <16 x double> %1079, i32 2
  %extract587 = extractelement <16 x double> %1079, i32 3
  %extract588 = extractelement <16 x double> %1079, i32 4
  %extract589 = extractelement <16 x double> %1079, i32 5
  %extract590 = extractelement <16 x double> %1079, i32 6
  %extract591 = extractelement <16 x double> %1079, i32 7
  %extract592 = extractelement <16 x double> %1079, i32 8
  %extract593 = extractelement <16 x double> %1079, i32 9
  %extract594 = extractelement <16 x double> %1079, i32 10
  %extract595 = extractelement <16 x double> %1079, i32 11
  %extract596 = extractelement <16 x double> %1079, i32 12
  %extract597 = extractelement <16 x double> %1079, i32 13
  %extract598 = extractelement <16 x double> %1079, i32 14
  %extract599 = extractelement <16 x double> %1079, i32 15
  store double %extract584, double* %171, align 16
  store double %extract585, double* %172, align 16
  store double %extract586, double* %173, align 16
  store double %extract587, double* %174, align 16
  store double %extract588, double* %175, align 16
  store double %extract589, double* %176, align 16
  store double %extract590, double* %177, align 16
  store double %extract591, double* %178, align 16
  store double %extract592, double* %179, align 16
  store double %extract593, double* %180, align 16
  store double %extract594, double* %181, align 16
  store double %extract595, double* %182, align 16
  store double %extract596, double* %183, align 16
  store double %extract597, double* %184, align 16
  store double %extract598, double* %185, align 16
  store double %extract599, double* %186, align 16
  %1080 = load double addrspace(3)* %99, align 8
  %temp600 = insertelement <16 x double> undef, double %1080, i32 0
  %vector601 = shufflevector <16 x double> %temp600, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1727" = add nuw i64 %CurrSBIndex..3, 2560
  %"&pSB[currWI].offset1728" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1727"
  %CastToValueType1729 = bitcast i8* %"&pSB[currWI].offset1728" to <16 x double>*
  %loadedValue1730 = load <16 x double>* %CastToValueType1729, align 128
  %1081 = fmul <16 x double> %loadedValue1730, %vector601
  %1082 = fadd <16 x double> %1034, %1081
  %extract602 = extractelement <16 x double> %1082, i32 0
  %extract603 = extractelement <16 x double> %1082, i32 1
  %extract604 = extractelement <16 x double> %1082, i32 2
  %extract605 = extractelement <16 x double> %1082, i32 3
  %extract606 = extractelement <16 x double> %1082, i32 4
  %extract607 = extractelement <16 x double> %1082, i32 5
  %extract608 = extractelement <16 x double> %1082, i32 6
  %extract609 = extractelement <16 x double> %1082, i32 7
  %extract610 = extractelement <16 x double> %1082, i32 8
  %extract611 = extractelement <16 x double> %1082, i32 9
  %extract612 = extractelement <16 x double> %1082, i32 10
  %extract613 = extractelement <16 x double> %1082, i32 11
  %extract614 = extractelement <16 x double> %1082, i32 12
  %extract615 = extractelement <16 x double> %1082, i32 13
  %extract616 = extractelement <16 x double> %1082, i32 14
  %extract617 = extractelement <16 x double> %1082, i32 15
  store double %extract602, double* %188, align 8
  store double %extract603, double* %190, align 8
  store double %extract604, double* %192, align 8
  store double %extract605, double* %194, align 8
  store double %extract606, double* %196, align 8
  store double %extract607, double* %198, align 8
  store double %extract608, double* %200, align 8
  store double %extract609, double* %202, align 8
  store double %extract610, double* %204, align 8
  store double %extract611, double* %206, align 8
  store double %extract612, double* %208, align 8
  store double %extract613, double* %210, align 8
  store double %extract614, double* %212, align 8
  store double %extract615, double* %214, align 8
  store double %extract616, double* %216, align 8
  store double %extract617, double* %218, align 8
  %1083 = load double addrspace(3)* %101, align 16
  %temp618 = insertelement <16 x double> undef, double %1083, i32 0
  %vector619 = shufflevector <16 x double> %temp618, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1722" = add nuw i64 %CurrSBIndex..3, 2560
  %"&pSB[currWI].offset1723" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1722"
  %CastToValueType1724 = bitcast i8* %"&pSB[currWI].offset1723" to <16 x double>*
  %loadedValue1725 = load <16 x double>* %CastToValueType1724, align 128
  %1084 = fmul <16 x double> %loadedValue1725, %vector619
  %1085 = fadd <16 x double> %1037, %1084
  %extract620 = extractelement <16 x double> %1085, i32 0
  %extract621 = extractelement <16 x double> %1085, i32 1
  %extract622 = extractelement <16 x double> %1085, i32 2
  %extract623 = extractelement <16 x double> %1085, i32 3
  %extract624 = extractelement <16 x double> %1085, i32 4
  %extract625 = extractelement <16 x double> %1085, i32 5
  %extract626 = extractelement <16 x double> %1085, i32 6
  %extract627 = extractelement <16 x double> %1085, i32 7
  %extract628 = extractelement <16 x double> %1085, i32 8
  %extract629 = extractelement <16 x double> %1085, i32 9
  %extract630 = extractelement <16 x double> %1085, i32 10
  %extract631 = extractelement <16 x double> %1085, i32 11
  %extract632 = extractelement <16 x double> %1085, i32 12
  %extract633 = extractelement <16 x double> %1085, i32 13
  %extract634 = extractelement <16 x double> %1085, i32 14
  %extract635 = extractelement <16 x double> %1085, i32 15
  store double %extract620, double* %220, align 16
  store double %extract621, double* %222, align 16
  store double %extract622, double* %224, align 16
  store double %extract623, double* %226, align 16
  store double %extract624, double* %228, align 16
  store double %extract625, double* %230, align 16
  store double %extract626, double* %232, align 16
  store double %extract627, double* %234, align 16
  store double %extract628, double* %236, align 16
  store double %extract629, double* %238, align 16
  store double %extract630, double* %240, align 16
  store double %extract631, double* %242, align 16
  store double %extract632, double* %244, align 16
  store double %extract633, double* %246, align 16
  store double %extract634, double* %248, align 16
  store double %extract635, double* %250, align 16
  %1086 = load double addrspace(3)* %103, align 8
  %temp636 = insertelement <16 x double> undef, double %1086, i32 0
  %vector637 = shufflevector <16 x double> %temp636, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1717" = add nuw i64 %CurrSBIndex..3, 2560
  %"&pSB[currWI].offset1718" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1717"
  %CastToValueType1719 = bitcast i8* %"&pSB[currWI].offset1718" to <16 x double>*
  %loadedValue1720 = load <16 x double>* %CastToValueType1719, align 128
  %1087 = fmul <16 x double> %loadedValue1720, %vector637
  %1088 = fadd <16 x double> %1040, %1087
  %extract638 = extractelement <16 x double> %1088, i32 0
  %extract639 = extractelement <16 x double> %1088, i32 1
  %extract640 = extractelement <16 x double> %1088, i32 2
  %extract641 = extractelement <16 x double> %1088, i32 3
  %extract642 = extractelement <16 x double> %1088, i32 4
  %extract643 = extractelement <16 x double> %1088, i32 5
  %extract644 = extractelement <16 x double> %1088, i32 6
  %extract645 = extractelement <16 x double> %1088, i32 7
  %extract646 = extractelement <16 x double> %1088, i32 8
  %extract647 = extractelement <16 x double> %1088, i32 9
  %extract648 = extractelement <16 x double> %1088, i32 10
  %extract649 = extractelement <16 x double> %1088, i32 11
  %extract650 = extractelement <16 x double> %1088, i32 12
  %extract651 = extractelement <16 x double> %1088, i32 13
  %extract652 = extractelement <16 x double> %1088, i32 14
  %extract653 = extractelement <16 x double> %1088, i32 15
  store double %extract638, double* %252, align 8
  store double %extract639, double* %254, align 8
  store double %extract640, double* %256, align 8
  store double %extract641, double* %258, align 8
  store double %extract642, double* %260, align 8
  store double %extract643, double* %262, align 8
  store double %extract644, double* %264, align 8
  store double %extract645, double* %266, align 8
  store double %extract646, double* %268, align 8
  store double %extract647, double* %270, align 8
  store double %extract648, double* %272, align 8
  store double %extract649, double* %274, align 8
  store double %extract650, double* %276, align 8
  store double %extract651, double* %278, align 8
  store double %extract652, double* %280, align 8
  store double %extract653, double* %282, align 8
  %1089 = load double addrspace(3)* %105, align 16
  %temp654 = insertelement <16 x double> undef, double %1089, i32 0
  %vector655 = shufflevector <16 x double> %temp654, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1712" = add nuw i64 %CurrSBIndex..3, 2560
  %"&pSB[currWI].offset1713" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1712"
  %CastToValueType1714 = bitcast i8* %"&pSB[currWI].offset1713" to <16 x double>*
  %loadedValue1715 = load <16 x double>* %CastToValueType1714, align 128
  %1090 = fmul <16 x double> %loadedValue1715, %vector655
  %1091 = fadd <16 x double> %1043, %1090
  %extract656 = extractelement <16 x double> %1091, i32 0
  %extract657 = extractelement <16 x double> %1091, i32 1
  %extract658 = extractelement <16 x double> %1091, i32 2
  %extract659 = extractelement <16 x double> %1091, i32 3
  %extract660 = extractelement <16 x double> %1091, i32 4
  %extract661 = extractelement <16 x double> %1091, i32 5
  %extract662 = extractelement <16 x double> %1091, i32 6
  %extract663 = extractelement <16 x double> %1091, i32 7
  %extract664 = extractelement <16 x double> %1091, i32 8
  %extract665 = extractelement <16 x double> %1091, i32 9
  %extract666 = extractelement <16 x double> %1091, i32 10
  %extract667 = extractelement <16 x double> %1091, i32 11
  %extract668 = extractelement <16 x double> %1091, i32 12
  %extract669 = extractelement <16 x double> %1091, i32 13
  %extract670 = extractelement <16 x double> %1091, i32 14
  %extract671 = extractelement <16 x double> %1091, i32 15
  store double %extract656, double* %284, align 16
  store double %extract657, double* %286, align 16
  store double %extract658, double* %288, align 16
  store double %extract659, double* %290, align 16
  store double %extract660, double* %292, align 16
  store double %extract661, double* %294, align 16
  store double %extract662, double* %296, align 16
  store double %extract663, double* %298, align 16
  store double %extract664, double* %300, align 16
  store double %extract665, double* %302, align 16
  store double %extract666, double* %304, align 16
  store double %extract667, double* %306, align 16
  store double %extract668, double* %308, align 16
  store double %extract669, double* %310, align 16
  store double %extract670, double* %312, align 16
  store double %extract671, double* %314, align 16
  %1092 = load double addrspace(3)* %107, align 8
  %temp672 = insertelement <16 x double> undef, double %1092, i32 0
  %vector673 = shufflevector <16 x double> %temp672, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1707" = add nuw i64 %CurrSBIndex..3, 2560
  %"&pSB[currWI].offset1708" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1707"
  %CastToValueType1709 = bitcast i8* %"&pSB[currWI].offset1708" to <16 x double>*
  %loadedValue1710 = load <16 x double>* %CastToValueType1709, align 128
  %1093 = fmul <16 x double> %loadedValue1710, %vector673
  %1094 = fadd <16 x double> %1046, %1093
  %extract674 = extractelement <16 x double> %1094, i32 0
  %extract675 = extractelement <16 x double> %1094, i32 1
  %extract676 = extractelement <16 x double> %1094, i32 2
  %extract677 = extractelement <16 x double> %1094, i32 3
  %extract678 = extractelement <16 x double> %1094, i32 4
  %extract679 = extractelement <16 x double> %1094, i32 5
  %extract680 = extractelement <16 x double> %1094, i32 6
  %extract681 = extractelement <16 x double> %1094, i32 7
  %extract682 = extractelement <16 x double> %1094, i32 8
  %extract683 = extractelement <16 x double> %1094, i32 9
  %extract684 = extractelement <16 x double> %1094, i32 10
  %extract685 = extractelement <16 x double> %1094, i32 11
  %extract686 = extractelement <16 x double> %1094, i32 12
  %extract687 = extractelement <16 x double> %1094, i32 13
  %extract688 = extractelement <16 x double> %1094, i32 14
  %extract689 = extractelement <16 x double> %1094, i32 15
  store double %extract674, double* %316, align 8
  store double %extract675, double* %318, align 8
  store double %extract676, double* %320, align 8
  store double %extract677, double* %322, align 8
  store double %extract678, double* %324, align 8
  store double %extract679, double* %326, align 8
  store double %extract680, double* %328, align 8
  store double %extract681, double* %330, align 8
  store double %extract682, double* %332, align 8
  store double %extract683, double* %334, align 8
  store double %extract684, double* %336, align 8
  store double %extract685, double* %338, align 8
  store double %extract686, double* %340, align 8
  store double %extract687, double* %342, align 8
  store double %extract688, double* %344, align 8
  store double %extract689, double* %346, align 8
  %1095 = load double addrspace(3)* %109, align 16
  %temp690 = insertelement <16 x double> undef, double %1095, i32 0
  %vector691 = shufflevector <16 x double> %temp690, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1702" = add nuw i64 %CurrSBIndex..3, 2560
  %"&pSB[currWI].offset1703" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1702"
  %CastToValueType1704 = bitcast i8* %"&pSB[currWI].offset1703" to <16 x double>*
  %loadedValue1705 = load <16 x double>* %CastToValueType1704, align 128
  %1096 = fmul <16 x double> %loadedValue1705, %vector691
  %1097 = fadd <16 x double> %1049, %1096
  %extract692 = extractelement <16 x double> %1097, i32 0
  %extract693 = extractelement <16 x double> %1097, i32 1
  %extract694 = extractelement <16 x double> %1097, i32 2
  %extract695 = extractelement <16 x double> %1097, i32 3
  %extract696 = extractelement <16 x double> %1097, i32 4
  %extract697 = extractelement <16 x double> %1097, i32 5
  %extract698 = extractelement <16 x double> %1097, i32 6
  %extract699 = extractelement <16 x double> %1097, i32 7
  %extract700 = extractelement <16 x double> %1097, i32 8
  %extract701 = extractelement <16 x double> %1097, i32 9
  %extract702 = extractelement <16 x double> %1097, i32 10
  %extract703 = extractelement <16 x double> %1097, i32 11
  %extract704 = extractelement <16 x double> %1097, i32 12
  %extract705 = extractelement <16 x double> %1097, i32 13
  %extract706 = extractelement <16 x double> %1097, i32 14
  %extract707 = extractelement <16 x double> %1097, i32 15
  store double %extract692, double* %348, align 16
  store double %extract693, double* %350, align 16
  store double %extract694, double* %352, align 16
  store double %extract695, double* %354, align 16
  store double %extract696, double* %356, align 16
  store double %extract697, double* %358, align 16
  store double %extract698, double* %360, align 16
  store double %extract699, double* %362, align 16
  store double %extract700, double* %364, align 16
  store double %extract701, double* %366, align 16
  store double %extract702, double* %368, align 16
  store double %extract703, double* %370, align 16
  store double %extract704, double* %372, align 16
  store double %extract705, double* %374, align 16
  store double %extract706, double* %376, align 16
  store double %extract707, double* %378, align 16
  %1098 = load double addrspace(3)* %111, align 8
  %temp708 = insertelement <16 x double> undef, double %1098, i32 0
  %vector709 = shufflevector <16 x double> %temp708, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1697" = add nuw i64 %CurrSBIndex..3, 2560
  %"&pSB[currWI].offset1698" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1697"
  %CastToValueType1699 = bitcast i8* %"&pSB[currWI].offset1698" to <16 x double>*
  %loadedValue1700 = load <16 x double>* %CastToValueType1699, align 128
  %1099 = fmul <16 x double> %loadedValue1700, %vector709
  %1100 = fadd <16 x double> %1052, %1099
  %extract710 = extractelement <16 x double> %1100, i32 0
  %extract711 = extractelement <16 x double> %1100, i32 1
  %extract712 = extractelement <16 x double> %1100, i32 2
  %extract713 = extractelement <16 x double> %1100, i32 3
  %extract714 = extractelement <16 x double> %1100, i32 4
  %extract715 = extractelement <16 x double> %1100, i32 5
  %extract716 = extractelement <16 x double> %1100, i32 6
  %extract717 = extractelement <16 x double> %1100, i32 7
  %extract718 = extractelement <16 x double> %1100, i32 8
  %extract719 = extractelement <16 x double> %1100, i32 9
  %extract720 = extractelement <16 x double> %1100, i32 10
  %extract721 = extractelement <16 x double> %1100, i32 11
  %extract722 = extractelement <16 x double> %1100, i32 12
  %extract723 = extractelement <16 x double> %1100, i32 13
  %extract724 = extractelement <16 x double> %1100, i32 14
  %extract725 = extractelement <16 x double> %1100, i32 15
  store double %extract710, double* %380, align 8
  store double %extract711, double* %382, align 8
  store double %extract712, double* %384, align 8
  store double %extract713, double* %386, align 8
  store double %extract714, double* %388, align 8
  store double %extract715, double* %390, align 8
  store double %extract716, double* %392, align 8
  store double %extract717, double* %394, align 8
  store double %extract718, double* %396, align 8
  store double %extract719, double* %398, align 8
  store double %extract720, double* %400, align 8
  store double %extract721, double* %402, align 8
  store double %extract722, double* %404, align 8
  store double %extract723, double* %406, align 8
  store double %extract724, double* %408, align 8
  store double %extract725, double* %410, align 8
  %1101 = load double addrspace(3)* %113, align 16
  %temp726 = insertelement <16 x double> undef, double %1101, i32 0
  %vector727 = shufflevector <16 x double> %temp726, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1692" = add nuw i64 %CurrSBIndex..3, 2560
  %"&pSB[currWI].offset1693" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1692"
  %CastToValueType1694 = bitcast i8* %"&pSB[currWI].offset1693" to <16 x double>*
  %loadedValue1695 = load <16 x double>* %CastToValueType1694, align 128
  %1102 = fmul <16 x double> %loadedValue1695, %vector727
  %1103 = fadd <16 x double> %1055, %1102
  %extract728 = extractelement <16 x double> %1103, i32 0
  %extract729 = extractelement <16 x double> %1103, i32 1
  %extract730 = extractelement <16 x double> %1103, i32 2
  %extract731 = extractelement <16 x double> %1103, i32 3
  %extract732 = extractelement <16 x double> %1103, i32 4
  %extract733 = extractelement <16 x double> %1103, i32 5
  %extract734 = extractelement <16 x double> %1103, i32 6
  %extract735 = extractelement <16 x double> %1103, i32 7
  %extract736 = extractelement <16 x double> %1103, i32 8
  %extract737 = extractelement <16 x double> %1103, i32 9
  %extract738 = extractelement <16 x double> %1103, i32 10
  %extract739 = extractelement <16 x double> %1103, i32 11
  %extract740 = extractelement <16 x double> %1103, i32 12
  %extract741 = extractelement <16 x double> %1103, i32 13
  %extract742 = extractelement <16 x double> %1103, i32 14
  %extract743 = extractelement <16 x double> %1103, i32 15
  store double %extract728, double* %412, align 16
  store double %extract729, double* %414, align 16
  store double %extract730, double* %416, align 16
  store double %extract731, double* %418, align 16
  store double %extract732, double* %420, align 16
  store double %extract733, double* %422, align 16
  store double %extract734, double* %424, align 16
  store double %extract735, double* %426, align 16
  store double %extract736, double* %428, align 16
  store double %extract737, double* %430, align 16
  store double %extract738, double* %432, align 16
  store double %extract739, double* %434, align 16
  store double %extract740, double* %436, align 16
  store double %extract741, double* %438, align 16
  store double %extract742, double* %440, align 16
  store double %extract743, double* %442, align 16
  %1104 = load double addrspace(3)* %115, align 8
  %temp744 = insertelement <16 x double> undef, double %1104, i32 0
  %vector745 = shufflevector <16 x double> %temp744, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1687" = add nuw i64 %CurrSBIndex..3, 2560
  %"&pSB[currWI].offset1688" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1687"
  %CastToValueType1689 = bitcast i8* %"&pSB[currWI].offset1688" to <16 x double>*
  %loadedValue1690 = load <16 x double>* %CastToValueType1689, align 128
  %1105 = fmul <16 x double> %loadedValue1690, %vector745
  %1106 = fadd <16 x double> %1058, %1105
  %extract746 = extractelement <16 x double> %1106, i32 0
  %extract747 = extractelement <16 x double> %1106, i32 1
  %extract748 = extractelement <16 x double> %1106, i32 2
  %extract749 = extractelement <16 x double> %1106, i32 3
  %extract750 = extractelement <16 x double> %1106, i32 4
  %extract751 = extractelement <16 x double> %1106, i32 5
  %extract752 = extractelement <16 x double> %1106, i32 6
  %extract753 = extractelement <16 x double> %1106, i32 7
  %extract754 = extractelement <16 x double> %1106, i32 8
  %extract755 = extractelement <16 x double> %1106, i32 9
  %extract756 = extractelement <16 x double> %1106, i32 10
  %extract757 = extractelement <16 x double> %1106, i32 11
  %extract758 = extractelement <16 x double> %1106, i32 12
  %extract759 = extractelement <16 x double> %1106, i32 13
  %extract760 = extractelement <16 x double> %1106, i32 14
  %extract761 = extractelement <16 x double> %1106, i32 15
  store double %extract746, double* %444, align 8
  store double %extract747, double* %446, align 8
  store double %extract748, double* %448, align 8
  store double %extract749, double* %450, align 8
  store double %extract750, double* %452, align 8
  store double %extract751, double* %454, align 8
  store double %extract752, double* %456, align 8
  store double %extract753, double* %458, align 8
  store double %extract754, double* %460, align 8
  store double %extract755, double* %462, align 8
  store double %extract756, double* %464, align 8
  store double %extract757, double* %466, align 8
  store double %extract758, double* %468, align 8
  store double %extract759, double* %470, align 8
  store double %extract760, double* %472, align 8
  store double %extract761, double* %474, align 8
  %1107 = load double addrspace(3)* %117, align 16
  %temp762 = insertelement <16 x double> undef, double %1107, i32 0
  %vector763 = shufflevector <16 x double> %temp762, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1682" = add nuw i64 %CurrSBIndex..3, 2560
  %"&pSB[currWI].offset1683" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1682"
  %CastToValueType1684 = bitcast i8* %"&pSB[currWI].offset1683" to <16 x double>*
  %loadedValue1685 = load <16 x double>* %CastToValueType1684, align 128
  %1108 = fmul <16 x double> %loadedValue1685, %vector763
  %1109 = fadd <16 x double> %1061, %1108
  %extract764 = extractelement <16 x double> %1109, i32 0
  %extract765 = extractelement <16 x double> %1109, i32 1
  %extract766 = extractelement <16 x double> %1109, i32 2
  %extract767 = extractelement <16 x double> %1109, i32 3
  %extract768 = extractelement <16 x double> %1109, i32 4
  %extract769 = extractelement <16 x double> %1109, i32 5
  %extract770 = extractelement <16 x double> %1109, i32 6
  %extract771 = extractelement <16 x double> %1109, i32 7
  %extract772 = extractelement <16 x double> %1109, i32 8
  %extract773 = extractelement <16 x double> %1109, i32 9
  %extract774 = extractelement <16 x double> %1109, i32 10
  %extract775 = extractelement <16 x double> %1109, i32 11
  %extract776 = extractelement <16 x double> %1109, i32 12
  %extract777 = extractelement <16 x double> %1109, i32 13
  %extract778 = extractelement <16 x double> %1109, i32 14
  %extract779 = extractelement <16 x double> %1109, i32 15
  store double %extract764, double* %476, align 16
  store double %extract765, double* %478, align 16
  store double %extract766, double* %480, align 16
  store double %extract767, double* %482, align 16
  store double %extract768, double* %484, align 16
  store double %extract769, double* %486, align 16
  store double %extract770, double* %488, align 16
  store double %extract771, double* %490, align 16
  store double %extract772, double* %492, align 16
  store double %extract773, double* %494, align 16
  store double %extract774, double* %496, align 16
  store double %extract775, double* %498, align 16
  store double %extract776, double* %500, align 16
  store double %extract777, double* %502, align 16
  store double %extract778, double* %504, align 16
  store double %extract779, double* %506, align 16
  %1110 = load double addrspace(3)* %119, align 8
  %temp780 = insertelement <16 x double> undef, double %1110, i32 0
  %vector781 = shufflevector <16 x double> %temp780, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1677" = add nuw i64 %CurrSBIndex..3, 2560
  %"&pSB[currWI].offset1678" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1677"
  %CastToValueType1679 = bitcast i8* %"&pSB[currWI].offset1678" to <16 x double>*
  %loadedValue1680 = load <16 x double>* %CastToValueType1679, align 128
  %1111 = fmul <16 x double> %loadedValue1680, %vector781
  %1112 = fadd <16 x double> %1064, %1111
  %extract782 = extractelement <16 x double> %1112, i32 0
  %extract783 = extractelement <16 x double> %1112, i32 1
  %extract784 = extractelement <16 x double> %1112, i32 2
  %extract785 = extractelement <16 x double> %1112, i32 3
  %extract786 = extractelement <16 x double> %1112, i32 4
  %extract787 = extractelement <16 x double> %1112, i32 5
  %extract788 = extractelement <16 x double> %1112, i32 6
  %extract789 = extractelement <16 x double> %1112, i32 7
  %extract790 = extractelement <16 x double> %1112, i32 8
  %extract791 = extractelement <16 x double> %1112, i32 9
  %extract792 = extractelement <16 x double> %1112, i32 10
  %extract793 = extractelement <16 x double> %1112, i32 11
  %extract794 = extractelement <16 x double> %1112, i32 12
  %extract795 = extractelement <16 x double> %1112, i32 13
  %extract796 = extractelement <16 x double> %1112, i32 14
  %extract797 = extractelement <16 x double> %1112, i32 15
  store double %extract782, double* %508, align 8
  store double %extract783, double* %510, align 8
  store double %extract784, double* %512, align 8
  store double %extract785, double* %514, align 8
  store double %extract786, double* %516, align 8
  store double %extract787, double* %518, align 8
  store double %extract788, double* %520, align 8
  store double %extract789, double* %522, align 8
  store double %extract790, double* %524, align 8
  store double %extract791, double* %526, align 8
  store double %extract792, double* %528, align 8
  store double %extract793, double* %530, align 8
  store double %extract794, double* %532, align 8
  store double %extract795, double* %534, align 8
  store double %extract796, double* %536, align 8
  store double %extract797, double* %538, align 8
  %1113 = load double addrspace(3)* %121, align 16
  %temp798 = insertelement <16 x double> undef, double %1113, i32 0
  %vector799 = shufflevector <16 x double> %temp798, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1672" = add nuw i64 %CurrSBIndex..3, 2560
  %"&pSB[currWI].offset1673" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1672"
  %CastToValueType1674 = bitcast i8* %"&pSB[currWI].offset1673" to <16 x double>*
  %loadedValue1675 = load <16 x double>* %CastToValueType1674, align 128
  %1114 = fmul <16 x double> %loadedValue1675, %vector799
  %1115 = fadd <16 x double> %1067, %1114
  %extract800 = extractelement <16 x double> %1115, i32 0
  %extract801 = extractelement <16 x double> %1115, i32 1
  %extract802 = extractelement <16 x double> %1115, i32 2
  %extract803 = extractelement <16 x double> %1115, i32 3
  %extract804 = extractelement <16 x double> %1115, i32 4
  %extract805 = extractelement <16 x double> %1115, i32 5
  %extract806 = extractelement <16 x double> %1115, i32 6
  %extract807 = extractelement <16 x double> %1115, i32 7
  %extract808 = extractelement <16 x double> %1115, i32 8
  %extract809 = extractelement <16 x double> %1115, i32 9
  %extract810 = extractelement <16 x double> %1115, i32 10
  %extract811 = extractelement <16 x double> %1115, i32 11
  %extract812 = extractelement <16 x double> %1115, i32 12
  %extract813 = extractelement <16 x double> %1115, i32 13
  %extract814 = extractelement <16 x double> %1115, i32 14
  %extract815 = extractelement <16 x double> %1115, i32 15
  store double %extract800, double* %540, align 16
  store double %extract801, double* %542, align 16
  store double %extract802, double* %544, align 16
  store double %extract803, double* %546, align 16
  store double %extract804, double* %548, align 16
  store double %extract805, double* %550, align 16
  store double %extract806, double* %552, align 16
  store double %extract807, double* %554, align 16
  store double %extract808, double* %556, align 16
  store double %extract809, double* %558, align 16
  store double %extract810, double* %560, align 16
  store double %extract811, double* %562, align 16
  store double %extract812, double* %564, align 16
  store double %extract813, double* %566, align 16
  store double %extract814, double* %568, align 16
  store double %extract815, double* %570, align 16
  %1116 = load double addrspace(3)* %123, align 8
  %temp816 = insertelement <16 x double> undef, double %1116, i32 0
  %vector817 = shufflevector <16 x double> %temp816, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1667" = add nuw i64 %CurrSBIndex..3, 2560
  %"&pSB[currWI].offset1668" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1667"
  %CastToValueType1669 = bitcast i8* %"&pSB[currWI].offset1668" to <16 x double>*
  %loadedValue1670 = load <16 x double>* %CastToValueType1669, align 128
  %1117 = fmul <16 x double> %loadedValue1670, %vector817
  %1118 = fadd <16 x double> %1070, %1117
  %extract818 = extractelement <16 x double> %1118, i32 0
  %extract819 = extractelement <16 x double> %1118, i32 1
  %extract820 = extractelement <16 x double> %1118, i32 2
  %extract821 = extractelement <16 x double> %1118, i32 3
  %extract822 = extractelement <16 x double> %1118, i32 4
  %extract823 = extractelement <16 x double> %1118, i32 5
  %extract824 = extractelement <16 x double> %1118, i32 6
  %extract825 = extractelement <16 x double> %1118, i32 7
  %extract826 = extractelement <16 x double> %1118, i32 8
  %extract827 = extractelement <16 x double> %1118, i32 9
  %extract828 = extractelement <16 x double> %1118, i32 10
  %extract829 = extractelement <16 x double> %1118, i32 11
  %extract830 = extractelement <16 x double> %1118, i32 12
  %extract831 = extractelement <16 x double> %1118, i32 13
  %extract832 = extractelement <16 x double> %1118, i32 14
  %extract833 = extractelement <16 x double> %1118, i32 15
  store double %extract818, double* %572, align 8
  store double %extract819, double* %574, align 8
  store double %extract820, double* %576, align 8
  store double %extract821, double* %578, align 8
  store double %extract822, double* %580, align 8
  store double %extract823, double* %582, align 8
  store double %extract824, double* %584, align 8
  store double %extract825, double* %586, align 8
  store double %extract826, double* %588, align 8
  store double %extract827, double* %590, align 8
  store double %extract828, double* %592, align 8
  store double %extract829, double* %594, align 8
  store double %extract830, double* %596, align 8
  store double %extract831, double* %598, align 8
  store double %extract832, double* %600, align 8
  store double %extract833, double* %602, align 8
  %1119 = load double addrspace(3)* %125, align 16
  %temp834 = insertelement <16 x double> undef, double %1119, i32 0
  %vector835 = shufflevector <16 x double> %temp834, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1662" = add nuw i64 %CurrSBIndex..3, 2560
  %"&pSB[currWI].offset1663" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1662"
  %CastToValueType1664 = bitcast i8* %"&pSB[currWI].offset1663" to <16 x double>*
  %loadedValue1665 = load <16 x double>* %CastToValueType1664, align 128
  %1120 = fmul <16 x double> %loadedValue1665, %vector835
  %1121 = fadd <16 x double> %1073, %1120
  %extract836 = extractelement <16 x double> %1121, i32 0
  %extract837 = extractelement <16 x double> %1121, i32 1
  %extract838 = extractelement <16 x double> %1121, i32 2
  %extract839 = extractelement <16 x double> %1121, i32 3
  %extract840 = extractelement <16 x double> %1121, i32 4
  %extract841 = extractelement <16 x double> %1121, i32 5
  %extract842 = extractelement <16 x double> %1121, i32 6
  %extract843 = extractelement <16 x double> %1121, i32 7
  %extract844 = extractelement <16 x double> %1121, i32 8
  %extract845 = extractelement <16 x double> %1121, i32 9
  %extract846 = extractelement <16 x double> %1121, i32 10
  %extract847 = extractelement <16 x double> %1121, i32 11
  %extract848 = extractelement <16 x double> %1121, i32 12
  %extract849 = extractelement <16 x double> %1121, i32 13
  %extract850 = extractelement <16 x double> %1121, i32 14
  %extract851 = extractelement <16 x double> %1121, i32 15
  store double %extract836, double* %604, align 16
  store double %extract837, double* %606, align 16
  store double %extract838, double* %608, align 16
  store double %extract839, double* %610, align 16
  store double %extract840, double* %612, align 16
  store double %extract841, double* %614, align 16
  store double %extract842, double* %616, align 16
  store double %extract843, double* %618, align 16
  store double %extract844, double* %620, align 16
  store double %extract845, double* %622, align 16
  store double %extract846, double* %624, align 16
  store double %extract847, double* %626, align 16
  store double %extract848, double* %628, align 16
  store double %extract849, double* %630, align 16
  store double %extract850, double* %632, align 16
  store double %extract851, double* %634, align 16
  %1122 = load double addrspace(3)* %127, align 8
  %temp852 = insertelement <16 x double> undef, double %1122, i32 0
  %vector853 = shufflevector <16 x double> %temp852, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1657" = add nuw i64 %CurrSBIndex..3, 2560
  %"&pSB[currWI].offset1658" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1657"
  %CastToValueType1659 = bitcast i8* %"&pSB[currWI].offset1658" to <16 x double>*
  %loadedValue1660 = load <16 x double>* %CastToValueType1659, align 128
  %1123 = fmul <16 x double> %loadedValue1660, %vector853
  %1124 = fadd <16 x double> %1076, %1123
  %extract854 = extractelement <16 x double> %1124, i32 0
  %extract855 = extractelement <16 x double> %1124, i32 1
  %extract856 = extractelement <16 x double> %1124, i32 2
  %extract857 = extractelement <16 x double> %1124, i32 3
  %extract858 = extractelement <16 x double> %1124, i32 4
  %extract859 = extractelement <16 x double> %1124, i32 5
  %extract860 = extractelement <16 x double> %1124, i32 6
  %extract861 = extractelement <16 x double> %1124, i32 7
  %extract862 = extractelement <16 x double> %1124, i32 8
  %extract863 = extractelement <16 x double> %1124, i32 9
  %extract864 = extractelement <16 x double> %1124, i32 10
  %extract865 = extractelement <16 x double> %1124, i32 11
  %extract866 = extractelement <16 x double> %1124, i32 12
  %extract867 = extractelement <16 x double> %1124, i32 13
  %extract868 = extractelement <16 x double> %1124, i32 14
  %extract869 = extractelement <16 x double> %1124, i32 15
  store double %extract854, double* %636, align 8
  store double %extract855, double* %638, align 8
  store double %extract856, double* %640, align 8
  store double %extract857, double* %642, align 8
  store double %extract858, double* %644, align 8
  store double %extract859, double* %646, align 8
  store double %extract860, double* %648, align 8
  store double %extract861, double* %650, align 8
  store double %extract862, double* %652, align 8
  store double %extract863, double* %654, align 8
  store double %extract864, double* %656, align 8
  store double %extract865, double* %658, align 8
  store double %extract866, double* %660, align 8
  store double %extract867, double* %662, align 8
  store double %extract868, double* %664, align 8
  store double %extract869, double* %666, align 8
  %check.WI.iter4632 = icmp ult i64 %CurrWI..3, %iterCount
  br i1 %check.WI.iter4632, label %thenBB4629, label %SyncBB4618.preheader

thenBB4629:                                       ; preds = %SyncBB
  %"CurrWI++4633" = add nuw i64 %CurrWI..3, 1
  %"loadedCurrSB+Stride4635" = add nuw i64 %CurrSBIndex..3, 12032
  br label %SyncBB

SyncBB4618.preheader:                             ; preds = %SyncBB, %thenBB
  %currBarrier.0.ph = phi i32 [ %currBarrier.1, %thenBB ], [ 6, %SyncBB ]
  %CurrSBIndex..1.ph = phi i64 [ %"loadedCurrSB+Stride", %thenBB ], [ 0, %SyncBB ]
  %CurrWI..1.ph = phi i64 [ %"CurrWI++", %thenBB ], [ 0, %SyncBB ]
  br label %SyncBB4618

SyncBB4618:                                       ; preds = %thenBB4622, %SyncBB4618.preheader
  %CurrSBIndex..1 = phi i64 [ %"loadedCurrSB+Stride4628", %thenBB4622 ], [ %CurrSBIndex..1.ph, %SyncBB4618.preheader ]
  %CurrWI..1 = phi i64 [ %"CurrWI++4626", %thenBB4622 ], [ %CurrWI..1.ph, %SyncBB4618.preheader ]
  %"&(pSB[currWI].offset)2002" = add nuw i64 %CurrSBIndex..1, 3080
  %"&pSB[currWI].offset2003" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2002"
  %CastToValueType2004 = bitcast i8* %"&pSB[currWI].offset2003" to i32*
  %loadedValue2005 = load i32* %CastToValueType2004, align 4
  %1125 = icmp slt i32 %loadedValue2005, %131
  %"&(pSB[currWI].offset)1993" = add nuw i64 %CurrSBIndex..1, 3072
  %"&pSB[currWI].offset1994" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1993"
  %CastToValueType1995 = bitcast i8* %"&pSB[currWI].offset1994" to i64*
  %loadedValue1996 = load i64* %CastToValueType1995, align 8
  %indvar.next36 = add i64 %loadedValue1996, 1
  %"&(pSB[currWI].offset)2422" = add nuw i64 %CurrSBIndex..1, 3840
  %"&pSB[currWI].offset2423" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2422"
  %CastToValueType2424 = bitcast i8* %"&pSB[currWI].offset2423" to i64*
  store i64 %indvar.next36, i64* %CastToValueType2424, align 8
  br i1 %1125, label %.loopexit, label %bb.nph

bb.nph:                                           ; preds = %SyncBB4618
  %"&(pSB[currWI].offset)1598" = add nuw i64 %CurrSBIndex..1, 1792
  %"&pSB[currWI].offset1599" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1598"
  %CastToValueType1600 = bitcast i8* %"&pSB[currWI].offset1599" to double addrspace(3)**
  %loadedValue1601 = load double addrspace(3)** %CastToValueType1600, align 8
  %ptrTypeCast870 = bitcast double addrspace(3)* %loadedValue1601 to <16 x double> addrspace(3)*
  %"&(pSB[currWI].offset)2417" = add nuw i64 %CurrSBIndex..1, 3712
  %"&pSB[currWI].offset2418" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2417"
  %CastToValueType2419 = bitcast i8* %"&pSB[currWI].offset2418" to <16 x double>*
  %loadedValue2420 = load <16 x double>* %CastToValueType2419, align 128
  store <16 x double> %loadedValue2420, <16 x double> addrspace(3)* %ptrTypeCast870, align 8
  %check.WI.iter4625 = icmp ult i64 %CurrWI..1, %iterCount
  br i1 %check.WI.iter4625, label %thenBB4622, label %elseBB4623

thenBB4622:                                       ; preds = %bb.nph
  %"CurrWI++4626" = add nuw i64 %CurrWI..1, 1
  %"loadedCurrSB+Stride4628" = add nuw i64 %CurrSBIndex..1, 12032
  br label %SyncBB4618

elseBB4623:                                       ; preds = %bb.nph
  %temp1539 = insertelement <16 x double> undef, double %beta, i32 0
  %vector1540 = shufflevector <16 x double> %temp1539, <16 x double> undef, <16 x i32> zeroinitializer
  %temp1536 = insertelement <16 x double> undef, double %alpha, i32 0
  %vector1537 = shufflevector <16 x double> %temp1536, <16 x double> undef, <16 x i32> zeroinitializer
  %tmp = sext i32 %ldc to i64
  %tmp18 = mul i32 %145, %ldc
  br label %SyncBB4617

SyncBB4617:                                       ; preds = %thenBB4636, %elseBB4623
  %CurrSBIndex..4 = phi i64 [ 0, %elseBB4623 ], [ %"loadedCurrSB+Stride4642", %thenBB4636 ]
  %CurrWI..4 = phi i64 [ 0, %elseBB4623 ], [ %"CurrWI++4640", %thenBB4636 ]
  %1126 = load double addrspace(3)* %1, align 16
  %temp871 = insertelement <16 x double> undef, double %1126, i32 0
  %vector872 = shufflevector <16 x double> %temp871, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2136" = add nuw i64 %CurrSBIndex..4, 3200
  %"&pSB[currWI].offset2137" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2136"
  %CastToValueType2138 = bitcast i8* %"&pSB[currWI].offset2137" to <16 x double>*
  %loadedValue2139 = load <16 x double>* %CastToValueType2138, align 128
  %1127 = fmul <16 x double> %loadedValue2139, %vector872
  %1128 = load double* %171, align 16
  %1129 = load double* %172, align 16
  %1130 = load double* %173, align 16
  %1131 = load double* %174, align 16
  %1132 = load double* %175, align 16
  %1133 = load double* %176, align 16
  %1134 = load double* %177, align 16
  %1135 = load double* %178, align 16
  %1136 = load double* %179, align 16
  %1137 = load double* %180, align 16
  %1138 = load double* %181, align 16
  %1139 = load double* %182, align 16
  %1140 = load double* %183, align 16
  %1141 = load double* %184, align 16
  %1142 = load double* %185, align 16
  %1143 = load double* %186, align 16
  %temp.vect873 = insertelement <16 x double> undef, double %1128, i32 0
  %temp.vect874 = insertelement <16 x double> %temp.vect873, double %1129, i32 1
  %temp.vect875 = insertelement <16 x double> %temp.vect874, double %1130, i32 2
  %temp.vect876 = insertelement <16 x double> %temp.vect875, double %1131, i32 3
  %temp.vect877 = insertelement <16 x double> %temp.vect876, double %1132, i32 4
  %temp.vect878 = insertelement <16 x double> %temp.vect877, double %1133, i32 5
  %temp.vect879 = insertelement <16 x double> %temp.vect878, double %1134, i32 6
  %temp.vect880 = insertelement <16 x double> %temp.vect879, double %1135, i32 7
  %temp.vect881 = insertelement <16 x double> %temp.vect880, double %1136, i32 8
  %temp.vect882 = insertelement <16 x double> %temp.vect881, double %1137, i32 9
  %temp.vect883 = insertelement <16 x double> %temp.vect882, double %1138, i32 10
  %temp.vect884 = insertelement <16 x double> %temp.vect883, double %1139, i32 11
  %temp.vect885 = insertelement <16 x double> %temp.vect884, double %1140, i32 12
  %temp.vect886 = insertelement <16 x double> %temp.vect885, double %1141, i32 13
  %temp.vect887 = insertelement <16 x double> %temp.vect886, double %1142, i32 14
  %temp.vect888 = insertelement <16 x double> %temp.vect887, double %1143, i32 15
  %1144 = fadd <16 x double> %temp.vect888, %1127
  %1145 = load double addrspace(3)* %3, align 8
  %temp889 = insertelement <16 x double> undef, double %1145, i32 0
  %vector890 = shufflevector <16 x double> %temp889, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2131" = add nuw i64 %CurrSBIndex..4, 3200
  %"&pSB[currWI].offset2132" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2131"
  %CastToValueType2133 = bitcast i8* %"&pSB[currWI].offset2132" to <16 x double>*
  %loadedValue2134 = load <16 x double>* %CastToValueType2133, align 128
  %1146 = fmul <16 x double> %loadedValue2134, %vector890
  %1147 = load double* %188, align 8
  %1148 = load double* %190, align 8
  %1149 = load double* %192, align 8
  %1150 = load double* %194, align 8
  %1151 = load double* %196, align 8
  %1152 = load double* %198, align 8
  %1153 = load double* %200, align 8
  %1154 = load double* %202, align 8
  %1155 = load double* %204, align 8
  %1156 = load double* %206, align 8
  %1157 = load double* %208, align 8
  %1158 = load double* %210, align 8
  %1159 = load double* %212, align 8
  %1160 = load double* %214, align 8
  %1161 = load double* %216, align 8
  %1162 = load double* %218, align 8
  %temp.vect891 = insertelement <16 x double> undef, double %1147, i32 0
  %temp.vect892 = insertelement <16 x double> %temp.vect891, double %1148, i32 1
  %temp.vect893 = insertelement <16 x double> %temp.vect892, double %1149, i32 2
  %temp.vect894 = insertelement <16 x double> %temp.vect893, double %1150, i32 3
  %temp.vect895 = insertelement <16 x double> %temp.vect894, double %1151, i32 4
  %temp.vect896 = insertelement <16 x double> %temp.vect895, double %1152, i32 5
  %temp.vect897 = insertelement <16 x double> %temp.vect896, double %1153, i32 6
  %temp.vect898 = insertelement <16 x double> %temp.vect897, double %1154, i32 7
  %temp.vect899 = insertelement <16 x double> %temp.vect898, double %1155, i32 8
  %temp.vect900 = insertelement <16 x double> %temp.vect899, double %1156, i32 9
  %temp.vect901 = insertelement <16 x double> %temp.vect900, double %1157, i32 10
  %temp.vect902 = insertelement <16 x double> %temp.vect901, double %1158, i32 11
  %temp.vect903 = insertelement <16 x double> %temp.vect902, double %1159, i32 12
  %temp.vect904 = insertelement <16 x double> %temp.vect903, double %1160, i32 13
  %temp.vect905 = insertelement <16 x double> %temp.vect904, double %1161, i32 14
  %temp.vect906 = insertelement <16 x double> %temp.vect905, double %1162, i32 15
  %1163 = fadd <16 x double> %temp.vect906, %1146
  %1164 = load double addrspace(3)* %5, align 16
  %temp907 = insertelement <16 x double> undef, double %1164, i32 0
  %vector908 = shufflevector <16 x double> %temp907, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2126" = add nuw i64 %CurrSBIndex..4, 3200
  %"&pSB[currWI].offset2127" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2126"
  %CastToValueType2128 = bitcast i8* %"&pSB[currWI].offset2127" to <16 x double>*
  %loadedValue2129 = load <16 x double>* %CastToValueType2128, align 128
  %1165 = fmul <16 x double> %loadedValue2129, %vector908
  %1166 = load double* %220, align 16
  %1167 = load double* %222, align 16
  %1168 = load double* %224, align 16
  %1169 = load double* %226, align 16
  %1170 = load double* %228, align 16
  %1171 = load double* %230, align 16
  %1172 = load double* %232, align 16
  %1173 = load double* %234, align 16
  %1174 = load double* %236, align 16
  %1175 = load double* %238, align 16
  %1176 = load double* %240, align 16
  %1177 = load double* %242, align 16
  %1178 = load double* %244, align 16
  %1179 = load double* %246, align 16
  %1180 = load double* %248, align 16
  %1181 = load double* %250, align 16
  %temp.vect909 = insertelement <16 x double> undef, double %1166, i32 0
  %temp.vect910 = insertelement <16 x double> %temp.vect909, double %1167, i32 1
  %temp.vect911 = insertelement <16 x double> %temp.vect910, double %1168, i32 2
  %temp.vect912 = insertelement <16 x double> %temp.vect911, double %1169, i32 3
  %temp.vect913 = insertelement <16 x double> %temp.vect912, double %1170, i32 4
  %temp.vect914 = insertelement <16 x double> %temp.vect913, double %1171, i32 5
  %temp.vect915 = insertelement <16 x double> %temp.vect914, double %1172, i32 6
  %temp.vect916 = insertelement <16 x double> %temp.vect915, double %1173, i32 7
  %temp.vect917 = insertelement <16 x double> %temp.vect916, double %1174, i32 8
  %temp.vect918 = insertelement <16 x double> %temp.vect917, double %1175, i32 9
  %temp.vect919 = insertelement <16 x double> %temp.vect918, double %1176, i32 10
  %temp.vect920 = insertelement <16 x double> %temp.vect919, double %1177, i32 11
  %temp.vect921 = insertelement <16 x double> %temp.vect920, double %1178, i32 12
  %temp.vect922 = insertelement <16 x double> %temp.vect921, double %1179, i32 13
  %temp.vect923 = insertelement <16 x double> %temp.vect922, double %1180, i32 14
  %temp.vect924 = insertelement <16 x double> %temp.vect923, double %1181, i32 15
  %1182 = fadd <16 x double> %temp.vect924, %1165
  %1183 = load double addrspace(3)* %7, align 8
  %temp925 = insertelement <16 x double> undef, double %1183, i32 0
  %vector926 = shufflevector <16 x double> %temp925, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2121" = add nuw i64 %CurrSBIndex..4, 3200
  %"&pSB[currWI].offset2122" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2121"
  %CastToValueType2123 = bitcast i8* %"&pSB[currWI].offset2122" to <16 x double>*
  %loadedValue2124 = load <16 x double>* %CastToValueType2123, align 128
  %1184 = fmul <16 x double> %loadedValue2124, %vector926
  %1185 = load double* %252, align 8
  %1186 = load double* %254, align 8
  %1187 = load double* %256, align 8
  %1188 = load double* %258, align 8
  %1189 = load double* %260, align 8
  %1190 = load double* %262, align 8
  %1191 = load double* %264, align 8
  %1192 = load double* %266, align 8
  %1193 = load double* %268, align 8
  %1194 = load double* %270, align 8
  %1195 = load double* %272, align 8
  %1196 = load double* %274, align 8
  %1197 = load double* %276, align 8
  %1198 = load double* %278, align 8
  %1199 = load double* %280, align 8
  %1200 = load double* %282, align 8
  %temp.vect927 = insertelement <16 x double> undef, double %1185, i32 0
  %temp.vect928 = insertelement <16 x double> %temp.vect927, double %1186, i32 1
  %temp.vect929 = insertelement <16 x double> %temp.vect928, double %1187, i32 2
  %temp.vect930 = insertelement <16 x double> %temp.vect929, double %1188, i32 3
  %temp.vect931 = insertelement <16 x double> %temp.vect930, double %1189, i32 4
  %temp.vect932 = insertelement <16 x double> %temp.vect931, double %1190, i32 5
  %temp.vect933 = insertelement <16 x double> %temp.vect932, double %1191, i32 6
  %temp.vect934 = insertelement <16 x double> %temp.vect933, double %1192, i32 7
  %temp.vect935 = insertelement <16 x double> %temp.vect934, double %1193, i32 8
  %temp.vect936 = insertelement <16 x double> %temp.vect935, double %1194, i32 9
  %temp.vect937 = insertelement <16 x double> %temp.vect936, double %1195, i32 10
  %temp.vect938 = insertelement <16 x double> %temp.vect937, double %1196, i32 11
  %temp.vect939 = insertelement <16 x double> %temp.vect938, double %1197, i32 12
  %temp.vect940 = insertelement <16 x double> %temp.vect939, double %1198, i32 13
  %temp.vect941 = insertelement <16 x double> %temp.vect940, double %1199, i32 14
  %temp.vect942 = insertelement <16 x double> %temp.vect941, double %1200, i32 15
  %1201 = fadd <16 x double> %temp.vect942, %1184
  %1202 = load double addrspace(3)* %9, align 16
  %temp943 = insertelement <16 x double> undef, double %1202, i32 0
  %vector944 = shufflevector <16 x double> %temp943, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2116" = add nuw i64 %CurrSBIndex..4, 3200
  %"&pSB[currWI].offset2117" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2116"
  %CastToValueType2118 = bitcast i8* %"&pSB[currWI].offset2117" to <16 x double>*
  %loadedValue2119 = load <16 x double>* %CastToValueType2118, align 128
  %1203 = fmul <16 x double> %loadedValue2119, %vector944
  %1204 = load double* %284, align 16
  %1205 = load double* %286, align 16
  %1206 = load double* %288, align 16
  %1207 = load double* %290, align 16
  %1208 = load double* %292, align 16
  %1209 = load double* %294, align 16
  %1210 = load double* %296, align 16
  %1211 = load double* %298, align 16
  %1212 = load double* %300, align 16
  %1213 = load double* %302, align 16
  %1214 = load double* %304, align 16
  %1215 = load double* %306, align 16
  %1216 = load double* %308, align 16
  %1217 = load double* %310, align 16
  %1218 = load double* %312, align 16
  %1219 = load double* %314, align 16
  %temp.vect945 = insertelement <16 x double> undef, double %1204, i32 0
  %temp.vect946 = insertelement <16 x double> %temp.vect945, double %1205, i32 1
  %temp.vect947 = insertelement <16 x double> %temp.vect946, double %1206, i32 2
  %temp.vect948 = insertelement <16 x double> %temp.vect947, double %1207, i32 3
  %temp.vect949 = insertelement <16 x double> %temp.vect948, double %1208, i32 4
  %temp.vect950 = insertelement <16 x double> %temp.vect949, double %1209, i32 5
  %temp.vect951 = insertelement <16 x double> %temp.vect950, double %1210, i32 6
  %temp.vect952 = insertelement <16 x double> %temp.vect951, double %1211, i32 7
  %temp.vect953 = insertelement <16 x double> %temp.vect952, double %1212, i32 8
  %temp.vect954 = insertelement <16 x double> %temp.vect953, double %1213, i32 9
  %temp.vect955 = insertelement <16 x double> %temp.vect954, double %1214, i32 10
  %temp.vect956 = insertelement <16 x double> %temp.vect955, double %1215, i32 11
  %temp.vect957 = insertelement <16 x double> %temp.vect956, double %1216, i32 12
  %temp.vect958 = insertelement <16 x double> %temp.vect957, double %1217, i32 13
  %temp.vect959 = insertelement <16 x double> %temp.vect958, double %1218, i32 14
  %temp.vect960 = insertelement <16 x double> %temp.vect959, double %1219, i32 15
  %1220 = fadd <16 x double> %temp.vect960, %1203
  %1221 = load double addrspace(3)* %11, align 8
  %temp961 = insertelement <16 x double> undef, double %1221, i32 0
  %vector962 = shufflevector <16 x double> %temp961, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2111" = add nuw i64 %CurrSBIndex..4, 3200
  %"&pSB[currWI].offset2112" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2111"
  %CastToValueType2113 = bitcast i8* %"&pSB[currWI].offset2112" to <16 x double>*
  %loadedValue2114 = load <16 x double>* %CastToValueType2113, align 128
  %1222 = fmul <16 x double> %loadedValue2114, %vector962
  %1223 = load double* %316, align 8
  %1224 = load double* %318, align 8
  %1225 = load double* %320, align 8
  %1226 = load double* %322, align 8
  %1227 = load double* %324, align 8
  %1228 = load double* %326, align 8
  %1229 = load double* %328, align 8
  %1230 = load double* %330, align 8
  %1231 = load double* %332, align 8
  %1232 = load double* %334, align 8
  %1233 = load double* %336, align 8
  %1234 = load double* %338, align 8
  %1235 = load double* %340, align 8
  %1236 = load double* %342, align 8
  %1237 = load double* %344, align 8
  %1238 = load double* %346, align 8
  %temp.vect963 = insertelement <16 x double> undef, double %1223, i32 0
  %temp.vect964 = insertelement <16 x double> %temp.vect963, double %1224, i32 1
  %temp.vect965 = insertelement <16 x double> %temp.vect964, double %1225, i32 2
  %temp.vect966 = insertelement <16 x double> %temp.vect965, double %1226, i32 3
  %temp.vect967 = insertelement <16 x double> %temp.vect966, double %1227, i32 4
  %temp.vect968 = insertelement <16 x double> %temp.vect967, double %1228, i32 5
  %temp.vect969 = insertelement <16 x double> %temp.vect968, double %1229, i32 6
  %temp.vect970 = insertelement <16 x double> %temp.vect969, double %1230, i32 7
  %temp.vect971 = insertelement <16 x double> %temp.vect970, double %1231, i32 8
  %temp.vect972 = insertelement <16 x double> %temp.vect971, double %1232, i32 9
  %temp.vect973 = insertelement <16 x double> %temp.vect972, double %1233, i32 10
  %temp.vect974 = insertelement <16 x double> %temp.vect973, double %1234, i32 11
  %temp.vect975 = insertelement <16 x double> %temp.vect974, double %1235, i32 12
  %temp.vect976 = insertelement <16 x double> %temp.vect975, double %1236, i32 13
  %temp.vect977 = insertelement <16 x double> %temp.vect976, double %1237, i32 14
  %temp.vect978 = insertelement <16 x double> %temp.vect977, double %1238, i32 15
  %1239 = fadd <16 x double> %temp.vect978, %1222
  %1240 = load double addrspace(3)* %13, align 16
  %temp979 = insertelement <16 x double> undef, double %1240, i32 0
  %vector980 = shufflevector <16 x double> %temp979, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2106" = add nuw i64 %CurrSBIndex..4, 3200
  %"&pSB[currWI].offset2107" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2106"
  %CastToValueType2108 = bitcast i8* %"&pSB[currWI].offset2107" to <16 x double>*
  %loadedValue2109 = load <16 x double>* %CastToValueType2108, align 128
  %1241 = fmul <16 x double> %loadedValue2109, %vector980
  %1242 = load double* %348, align 16
  %1243 = load double* %350, align 16
  %1244 = load double* %352, align 16
  %1245 = load double* %354, align 16
  %1246 = load double* %356, align 16
  %1247 = load double* %358, align 16
  %1248 = load double* %360, align 16
  %1249 = load double* %362, align 16
  %1250 = load double* %364, align 16
  %1251 = load double* %366, align 16
  %1252 = load double* %368, align 16
  %1253 = load double* %370, align 16
  %1254 = load double* %372, align 16
  %1255 = load double* %374, align 16
  %1256 = load double* %376, align 16
  %1257 = load double* %378, align 16
  %temp.vect981 = insertelement <16 x double> undef, double %1242, i32 0
  %temp.vect982 = insertelement <16 x double> %temp.vect981, double %1243, i32 1
  %temp.vect983 = insertelement <16 x double> %temp.vect982, double %1244, i32 2
  %temp.vect984 = insertelement <16 x double> %temp.vect983, double %1245, i32 3
  %temp.vect985 = insertelement <16 x double> %temp.vect984, double %1246, i32 4
  %temp.vect986 = insertelement <16 x double> %temp.vect985, double %1247, i32 5
  %temp.vect987 = insertelement <16 x double> %temp.vect986, double %1248, i32 6
  %temp.vect988 = insertelement <16 x double> %temp.vect987, double %1249, i32 7
  %temp.vect989 = insertelement <16 x double> %temp.vect988, double %1250, i32 8
  %temp.vect990 = insertelement <16 x double> %temp.vect989, double %1251, i32 9
  %temp.vect991 = insertelement <16 x double> %temp.vect990, double %1252, i32 10
  %temp.vect992 = insertelement <16 x double> %temp.vect991, double %1253, i32 11
  %temp.vect993 = insertelement <16 x double> %temp.vect992, double %1254, i32 12
  %temp.vect994 = insertelement <16 x double> %temp.vect993, double %1255, i32 13
  %temp.vect995 = insertelement <16 x double> %temp.vect994, double %1256, i32 14
  %temp.vect996 = insertelement <16 x double> %temp.vect995, double %1257, i32 15
  %1258 = fadd <16 x double> %temp.vect996, %1241
  %1259 = load double addrspace(3)* %15, align 8
  %temp997 = insertelement <16 x double> undef, double %1259, i32 0
  %vector998 = shufflevector <16 x double> %temp997, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2101" = add nuw i64 %CurrSBIndex..4, 3200
  %"&pSB[currWI].offset2102" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2101"
  %CastToValueType2103 = bitcast i8* %"&pSB[currWI].offset2102" to <16 x double>*
  %loadedValue2104 = load <16 x double>* %CastToValueType2103, align 128
  %1260 = fmul <16 x double> %loadedValue2104, %vector998
  %1261 = load double* %380, align 8
  %1262 = load double* %382, align 8
  %1263 = load double* %384, align 8
  %1264 = load double* %386, align 8
  %1265 = load double* %388, align 8
  %1266 = load double* %390, align 8
  %1267 = load double* %392, align 8
  %1268 = load double* %394, align 8
  %1269 = load double* %396, align 8
  %1270 = load double* %398, align 8
  %1271 = load double* %400, align 8
  %1272 = load double* %402, align 8
  %1273 = load double* %404, align 8
  %1274 = load double* %406, align 8
  %1275 = load double* %408, align 8
  %1276 = load double* %410, align 8
  %temp.vect999 = insertelement <16 x double> undef, double %1261, i32 0
  %temp.vect1000 = insertelement <16 x double> %temp.vect999, double %1262, i32 1
  %temp.vect1001 = insertelement <16 x double> %temp.vect1000, double %1263, i32 2
  %temp.vect1002 = insertelement <16 x double> %temp.vect1001, double %1264, i32 3
  %temp.vect1003 = insertelement <16 x double> %temp.vect1002, double %1265, i32 4
  %temp.vect1004 = insertelement <16 x double> %temp.vect1003, double %1266, i32 5
  %temp.vect1005 = insertelement <16 x double> %temp.vect1004, double %1267, i32 6
  %temp.vect1006 = insertelement <16 x double> %temp.vect1005, double %1268, i32 7
  %temp.vect1007 = insertelement <16 x double> %temp.vect1006, double %1269, i32 8
  %temp.vect1008 = insertelement <16 x double> %temp.vect1007, double %1270, i32 9
  %temp.vect1009 = insertelement <16 x double> %temp.vect1008, double %1271, i32 10
  %temp.vect1010 = insertelement <16 x double> %temp.vect1009, double %1272, i32 11
  %temp.vect1011 = insertelement <16 x double> %temp.vect1010, double %1273, i32 12
  %temp.vect1012 = insertelement <16 x double> %temp.vect1011, double %1274, i32 13
  %temp.vect1013 = insertelement <16 x double> %temp.vect1012, double %1275, i32 14
  %temp.vect1014 = insertelement <16 x double> %temp.vect1013, double %1276, i32 15
  %1277 = fadd <16 x double> %temp.vect1014, %1260
  %1278 = load double addrspace(3)* %17, align 16
  %temp1015 = insertelement <16 x double> undef, double %1278, i32 0
  %vector1016 = shufflevector <16 x double> %temp1015, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2096" = add nuw i64 %CurrSBIndex..4, 3200
  %"&pSB[currWI].offset2097" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2096"
  %CastToValueType2098 = bitcast i8* %"&pSB[currWI].offset2097" to <16 x double>*
  %loadedValue2099 = load <16 x double>* %CastToValueType2098, align 128
  %1279 = fmul <16 x double> %loadedValue2099, %vector1016
  %1280 = load double* %412, align 16
  %1281 = load double* %414, align 16
  %1282 = load double* %416, align 16
  %1283 = load double* %418, align 16
  %1284 = load double* %420, align 16
  %1285 = load double* %422, align 16
  %1286 = load double* %424, align 16
  %1287 = load double* %426, align 16
  %1288 = load double* %428, align 16
  %1289 = load double* %430, align 16
  %1290 = load double* %432, align 16
  %1291 = load double* %434, align 16
  %1292 = load double* %436, align 16
  %1293 = load double* %438, align 16
  %1294 = load double* %440, align 16
  %1295 = load double* %442, align 16
  %temp.vect1017 = insertelement <16 x double> undef, double %1280, i32 0
  %temp.vect1018 = insertelement <16 x double> %temp.vect1017, double %1281, i32 1
  %temp.vect1019 = insertelement <16 x double> %temp.vect1018, double %1282, i32 2
  %temp.vect1020 = insertelement <16 x double> %temp.vect1019, double %1283, i32 3
  %temp.vect1021 = insertelement <16 x double> %temp.vect1020, double %1284, i32 4
  %temp.vect1022 = insertelement <16 x double> %temp.vect1021, double %1285, i32 5
  %temp.vect1023 = insertelement <16 x double> %temp.vect1022, double %1286, i32 6
  %temp.vect1024 = insertelement <16 x double> %temp.vect1023, double %1287, i32 7
  %temp.vect1025 = insertelement <16 x double> %temp.vect1024, double %1288, i32 8
  %temp.vect1026 = insertelement <16 x double> %temp.vect1025, double %1289, i32 9
  %temp.vect1027 = insertelement <16 x double> %temp.vect1026, double %1290, i32 10
  %temp.vect1028 = insertelement <16 x double> %temp.vect1027, double %1291, i32 11
  %temp.vect1029 = insertelement <16 x double> %temp.vect1028, double %1292, i32 12
  %temp.vect1030 = insertelement <16 x double> %temp.vect1029, double %1293, i32 13
  %temp.vect1031 = insertelement <16 x double> %temp.vect1030, double %1294, i32 14
  %temp.vect1032 = insertelement <16 x double> %temp.vect1031, double %1295, i32 15
  %1296 = fadd <16 x double> %temp.vect1032, %1279
  %1297 = load double addrspace(3)* %19, align 8
  %temp1033 = insertelement <16 x double> undef, double %1297, i32 0
  %vector1034 = shufflevector <16 x double> %temp1033, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2091" = add nuw i64 %CurrSBIndex..4, 3200
  %"&pSB[currWI].offset2092" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2091"
  %CastToValueType2093 = bitcast i8* %"&pSB[currWI].offset2092" to <16 x double>*
  %loadedValue2094 = load <16 x double>* %CastToValueType2093, align 128
  %1298 = fmul <16 x double> %loadedValue2094, %vector1034
  %1299 = load double* %444, align 8
  %1300 = load double* %446, align 8
  %1301 = load double* %448, align 8
  %1302 = load double* %450, align 8
  %1303 = load double* %452, align 8
  %1304 = load double* %454, align 8
  %1305 = load double* %456, align 8
  %1306 = load double* %458, align 8
  %1307 = load double* %460, align 8
  %1308 = load double* %462, align 8
  %1309 = load double* %464, align 8
  %1310 = load double* %466, align 8
  %1311 = load double* %468, align 8
  %1312 = load double* %470, align 8
  %1313 = load double* %472, align 8
  %1314 = load double* %474, align 8
  %temp.vect1035 = insertelement <16 x double> undef, double %1299, i32 0
  %temp.vect1036 = insertelement <16 x double> %temp.vect1035, double %1300, i32 1
  %temp.vect1037 = insertelement <16 x double> %temp.vect1036, double %1301, i32 2
  %temp.vect1038 = insertelement <16 x double> %temp.vect1037, double %1302, i32 3
  %temp.vect1039 = insertelement <16 x double> %temp.vect1038, double %1303, i32 4
  %temp.vect1040 = insertelement <16 x double> %temp.vect1039, double %1304, i32 5
  %temp.vect1041 = insertelement <16 x double> %temp.vect1040, double %1305, i32 6
  %temp.vect1042 = insertelement <16 x double> %temp.vect1041, double %1306, i32 7
  %temp.vect1043 = insertelement <16 x double> %temp.vect1042, double %1307, i32 8
  %temp.vect1044 = insertelement <16 x double> %temp.vect1043, double %1308, i32 9
  %temp.vect1045 = insertelement <16 x double> %temp.vect1044, double %1309, i32 10
  %temp.vect1046 = insertelement <16 x double> %temp.vect1045, double %1310, i32 11
  %temp.vect1047 = insertelement <16 x double> %temp.vect1046, double %1311, i32 12
  %temp.vect1048 = insertelement <16 x double> %temp.vect1047, double %1312, i32 13
  %temp.vect1049 = insertelement <16 x double> %temp.vect1048, double %1313, i32 14
  %temp.vect1050 = insertelement <16 x double> %temp.vect1049, double %1314, i32 15
  %1315 = fadd <16 x double> %temp.vect1050, %1298
  %1316 = load double addrspace(3)* %21, align 16
  %temp1051 = insertelement <16 x double> undef, double %1316, i32 0
  %vector1052 = shufflevector <16 x double> %temp1051, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2086" = add nuw i64 %CurrSBIndex..4, 3200
  %"&pSB[currWI].offset2087" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2086"
  %CastToValueType2088 = bitcast i8* %"&pSB[currWI].offset2087" to <16 x double>*
  %loadedValue2089 = load <16 x double>* %CastToValueType2088, align 128
  %1317 = fmul <16 x double> %loadedValue2089, %vector1052
  %1318 = load double* %476, align 16
  %1319 = load double* %478, align 16
  %1320 = load double* %480, align 16
  %1321 = load double* %482, align 16
  %1322 = load double* %484, align 16
  %1323 = load double* %486, align 16
  %1324 = load double* %488, align 16
  %1325 = load double* %490, align 16
  %1326 = load double* %492, align 16
  %1327 = load double* %494, align 16
  %1328 = load double* %496, align 16
  %1329 = load double* %498, align 16
  %1330 = load double* %500, align 16
  %1331 = load double* %502, align 16
  %1332 = load double* %504, align 16
  %1333 = load double* %506, align 16
  %temp.vect1053 = insertelement <16 x double> undef, double %1318, i32 0
  %temp.vect1054 = insertelement <16 x double> %temp.vect1053, double %1319, i32 1
  %temp.vect1055 = insertelement <16 x double> %temp.vect1054, double %1320, i32 2
  %temp.vect1056 = insertelement <16 x double> %temp.vect1055, double %1321, i32 3
  %temp.vect1057 = insertelement <16 x double> %temp.vect1056, double %1322, i32 4
  %temp.vect1058 = insertelement <16 x double> %temp.vect1057, double %1323, i32 5
  %temp.vect1059 = insertelement <16 x double> %temp.vect1058, double %1324, i32 6
  %temp.vect1060 = insertelement <16 x double> %temp.vect1059, double %1325, i32 7
  %temp.vect1061 = insertelement <16 x double> %temp.vect1060, double %1326, i32 8
  %temp.vect1062 = insertelement <16 x double> %temp.vect1061, double %1327, i32 9
  %temp.vect1063 = insertelement <16 x double> %temp.vect1062, double %1328, i32 10
  %temp.vect1064 = insertelement <16 x double> %temp.vect1063, double %1329, i32 11
  %temp.vect1065 = insertelement <16 x double> %temp.vect1064, double %1330, i32 12
  %temp.vect1066 = insertelement <16 x double> %temp.vect1065, double %1331, i32 13
  %temp.vect1067 = insertelement <16 x double> %temp.vect1066, double %1332, i32 14
  %temp.vect1068 = insertelement <16 x double> %temp.vect1067, double %1333, i32 15
  %1334 = fadd <16 x double> %temp.vect1068, %1317
  %1335 = load double addrspace(3)* %23, align 8
  %temp1069 = insertelement <16 x double> undef, double %1335, i32 0
  %vector1070 = shufflevector <16 x double> %temp1069, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2081" = add nuw i64 %CurrSBIndex..4, 3200
  %"&pSB[currWI].offset2082" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2081"
  %CastToValueType2083 = bitcast i8* %"&pSB[currWI].offset2082" to <16 x double>*
  %loadedValue2084 = load <16 x double>* %CastToValueType2083, align 128
  %1336 = fmul <16 x double> %loadedValue2084, %vector1070
  %1337 = load double* %508, align 8
  %1338 = load double* %510, align 8
  %1339 = load double* %512, align 8
  %1340 = load double* %514, align 8
  %1341 = load double* %516, align 8
  %1342 = load double* %518, align 8
  %1343 = load double* %520, align 8
  %1344 = load double* %522, align 8
  %1345 = load double* %524, align 8
  %1346 = load double* %526, align 8
  %1347 = load double* %528, align 8
  %1348 = load double* %530, align 8
  %1349 = load double* %532, align 8
  %1350 = load double* %534, align 8
  %1351 = load double* %536, align 8
  %1352 = load double* %538, align 8
  %temp.vect1071 = insertelement <16 x double> undef, double %1337, i32 0
  %temp.vect1072 = insertelement <16 x double> %temp.vect1071, double %1338, i32 1
  %temp.vect1073 = insertelement <16 x double> %temp.vect1072, double %1339, i32 2
  %temp.vect1074 = insertelement <16 x double> %temp.vect1073, double %1340, i32 3
  %temp.vect1075 = insertelement <16 x double> %temp.vect1074, double %1341, i32 4
  %temp.vect1076 = insertelement <16 x double> %temp.vect1075, double %1342, i32 5
  %temp.vect1077 = insertelement <16 x double> %temp.vect1076, double %1343, i32 6
  %temp.vect1078 = insertelement <16 x double> %temp.vect1077, double %1344, i32 7
  %temp.vect1079 = insertelement <16 x double> %temp.vect1078, double %1345, i32 8
  %temp.vect1080 = insertelement <16 x double> %temp.vect1079, double %1346, i32 9
  %temp.vect1081 = insertelement <16 x double> %temp.vect1080, double %1347, i32 10
  %temp.vect1082 = insertelement <16 x double> %temp.vect1081, double %1348, i32 11
  %temp.vect1083 = insertelement <16 x double> %temp.vect1082, double %1349, i32 12
  %temp.vect1084 = insertelement <16 x double> %temp.vect1083, double %1350, i32 13
  %temp.vect1085 = insertelement <16 x double> %temp.vect1084, double %1351, i32 14
  %temp.vect1086 = insertelement <16 x double> %temp.vect1085, double %1352, i32 15
  %1353 = fadd <16 x double> %temp.vect1086, %1336
  %1354 = load double addrspace(3)* %25, align 16
  %temp1087 = insertelement <16 x double> undef, double %1354, i32 0
  %vector1088 = shufflevector <16 x double> %temp1087, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2076" = add nuw i64 %CurrSBIndex..4, 3200
  %"&pSB[currWI].offset2077" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2076"
  %CastToValueType2078 = bitcast i8* %"&pSB[currWI].offset2077" to <16 x double>*
  %loadedValue2079 = load <16 x double>* %CastToValueType2078, align 128
  %1355 = fmul <16 x double> %loadedValue2079, %vector1088
  %1356 = load double* %540, align 16
  %1357 = load double* %542, align 16
  %1358 = load double* %544, align 16
  %1359 = load double* %546, align 16
  %1360 = load double* %548, align 16
  %1361 = load double* %550, align 16
  %1362 = load double* %552, align 16
  %1363 = load double* %554, align 16
  %1364 = load double* %556, align 16
  %1365 = load double* %558, align 16
  %1366 = load double* %560, align 16
  %1367 = load double* %562, align 16
  %1368 = load double* %564, align 16
  %1369 = load double* %566, align 16
  %1370 = load double* %568, align 16
  %1371 = load double* %570, align 16
  %temp.vect1089 = insertelement <16 x double> undef, double %1356, i32 0
  %temp.vect1090 = insertelement <16 x double> %temp.vect1089, double %1357, i32 1
  %temp.vect1091 = insertelement <16 x double> %temp.vect1090, double %1358, i32 2
  %temp.vect1092 = insertelement <16 x double> %temp.vect1091, double %1359, i32 3
  %temp.vect1093 = insertelement <16 x double> %temp.vect1092, double %1360, i32 4
  %temp.vect1094 = insertelement <16 x double> %temp.vect1093, double %1361, i32 5
  %temp.vect1095 = insertelement <16 x double> %temp.vect1094, double %1362, i32 6
  %temp.vect1096 = insertelement <16 x double> %temp.vect1095, double %1363, i32 7
  %temp.vect1097 = insertelement <16 x double> %temp.vect1096, double %1364, i32 8
  %temp.vect1098 = insertelement <16 x double> %temp.vect1097, double %1365, i32 9
  %temp.vect1099 = insertelement <16 x double> %temp.vect1098, double %1366, i32 10
  %temp.vect1100 = insertelement <16 x double> %temp.vect1099, double %1367, i32 11
  %temp.vect1101 = insertelement <16 x double> %temp.vect1100, double %1368, i32 12
  %temp.vect1102 = insertelement <16 x double> %temp.vect1101, double %1369, i32 13
  %temp.vect1103 = insertelement <16 x double> %temp.vect1102, double %1370, i32 14
  %temp.vect1104 = insertelement <16 x double> %temp.vect1103, double %1371, i32 15
  %1372 = fadd <16 x double> %temp.vect1104, %1355
  %1373 = load double addrspace(3)* %27, align 8
  %temp1105 = insertelement <16 x double> undef, double %1373, i32 0
  %vector1106 = shufflevector <16 x double> %temp1105, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2071" = add nuw i64 %CurrSBIndex..4, 3200
  %"&pSB[currWI].offset2072" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2071"
  %CastToValueType2073 = bitcast i8* %"&pSB[currWI].offset2072" to <16 x double>*
  %loadedValue2074 = load <16 x double>* %CastToValueType2073, align 128
  %1374 = fmul <16 x double> %loadedValue2074, %vector1106
  %1375 = load double* %572, align 8
  %1376 = load double* %574, align 8
  %1377 = load double* %576, align 8
  %1378 = load double* %578, align 8
  %1379 = load double* %580, align 8
  %1380 = load double* %582, align 8
  %1381 = load double* %584, align 8
  %1382 = load double* %586, align 8
  %1383 = load double* %588, align 8
  %1384 = load double* %590, align 8
  %1385 = load double* %592, align 8
  %1386 = load double* %594, align 8
  %1387 = load double* %596, align 8
  %1388 = load double* %598, align 8
  %1389 = load double* %600, align 8
  %1390 = load double* %602, align 8
  %temp.vect1107 = insertelement <16 x double> undef, double %1375, i32 0
  %temp.vect1108 = insertelement <16 x double> %temp.vect1107, double %1376, i32 1
  %temp.vect1109 = insertelement <16 x double> %temp.vect1108, double %1377, i32 2
  %temp.vect1110 = insertelement <16 x double> %temp.vect1109, double %1378, i32 3
  %temp.vect1111 = insertelement <16 x double> %temp.vect1110, double %1379, i32 4
  %temp.vect1112 = insertelement <16 x double> %temp.vect1111, double %1380, i32 5
  %temp.vect1113 = insertelement <16 x double> %temp.vect1112, double %1381, i32 6
  %temp.vect1114 = insertelement <16 x double> %temp.vect1113, double %1382, i32 7
  %temp.vect1115 = insertelement <16 x double> %temp.vect1114, double %1383, i32 8
  %temp.vect1116 = insertelement <16 x double> %temp.vect1115, double %1384, i32 9
  %temp.vect1117 = insertelement <16 x double> %temp.vect1116, double %1385, i32 10
  %temp.vect1118 = insertelement <16 x double> %temp.vect1117, double %1386, i32 11
  %temp.vect1119 = insertelement <16 x double> %temp.vect1118, double %1387, i32 12
  %temp.vect1120 = insertelement <16 x double> %temp.vect1119, double %1388, i32 13
  %temp.vect1121 = insertelement <16 x double> %temp.vect1120, double %1389, i32 14
  %temp.vect1122 = insertelement <16 x double> %temp.vect1121, double %1390, i32 15
  %1391 = fadd <16 x double> %temp.vect1122, %1374
  %1392 = load double addrspace(3)* %29, align 16
  %temp1123 = insertelement <16 x double> undef, double %1392, i32 0
  %vector1124 = shufflevector <16 x double> %temp1123, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2066" = add nuw i64 %CurrSBIndex..4, 3200
  %"&pSB[currWI].offset2067" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2066"
  %CastToValueType2068 = bitcast i8* %"&pSB[currWI].offset2067" to <16 x double>*
  %loadedValue2069 = load <16 x double>* %CastToValueType2068, align 128
  %1393 = fmul <16 x double> %loadedValue2069, %vector1124
  %1394 = load double* %604, align 16
  %1395 = load double* %606, align 16
  %1396 = load double* %608, align 16
  %1397 = load double* %610, align 16
  %1398 = load double* %612, align 16
  %1399 = load double* %614, align 16
  %1400 = load double* %616, align 16
  %1401 = load double* %618, align 16
  %1402 = load double* %620, align 16
  %1403 = load double* %622, align 16
  %1404 = load double* %624, align 16
  %1405 = load double* %626, align 16
  %1406 = load double* %628, align 16
  %1407 = load double* %630, align 16
  %1408 = load double* %632, align 16
  %1409 = load double* %634, align 16
  %temp.vect1125 = insertelement <16 x double> undef, double %1394, i32 0
  %temp.vect1126 = insertelement <16 x double> %temp.vect1125, double %1395, i32 1
  %temp.vect1127 = insertelement <16 x double> %temp.vect1126, double %1396, i32 2
  %temp.vect1128 = insertelement <16 x double> %temp.vect1127, double %1397, i32 3
  %temp.vect1129 = insertelement <16 x double> %temp.vect1128, double %1398, i32 4
  %temp.vect1130 = insertelement <16 x double> %temp.vect1129, double %1399, i32 5
  %temp.vect1131 = insertelement <16 x double> %temp.vect1130, double %1400, i32 6
  %temp.vect1132 = insertelement <16 x double> %temp.vect1131, double %1401, i32 7
  %temp.vect1133 = insertelement <16 x double> %temp.vect1132, double %1402, i32 8
  %temp.vect1134 = insertelement <16 x double> %temp.vect1133, double %1403, i32 9
  %temp.vect1135 = insertelement <16 x double> %temp.vect1134, double %1404, i32 10
  %temp.vect1136 = insertelement <16 x double> %temp.vect1135, double %1405, i32 11
  %temp.vect1137 = insertelement <16 x double> %temp.vect1136, double %1406, i32 12
  %temp.vect1138 = insertelement <16 x double> %temp.vect1137, double %1407, i32 13
  %temp.vect1139 = insertelement <16 x double> %temp.vect1138, double %1408, i32 14
  %temp.vect1140 = insertelement <16 x double> %temp.vect1139, double %1409, i32 15
  %1410 = fadd <16 x double> %temp.vect1140, %1393
  %1411 = load double addrspace(3)* %31, align 8
  %temp1141 = insertelement <16 x double> undef, double %1411, i32 0
  %vector1142 = shufflevector <16 x double> %temp1141, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2061" = add nuw i64 %CurrSBIndex..4, 3200
  %"&pSB[currWI].offset2062" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2061"
  %CastToValueType2063 = bitcast i8* %"&pSB[currWI].offset2062" to <16 x double>*
  %loadedValue2064 = load <16 x double>* %CastToValueType2063, align 128
  %1412 = fmul <16 x double> %loadedValue2064, %vector1142
  %1413 = load double* %636, align 8
  %1414 = load double* %638, align 8
  %1415 = load double* %640, align 8
  %1416 = load double* %642, align 8
  %1417 = load double* %644, align 8
  %1418 = load double* %646, align 8
  %1419 = load double* %648, align 8
  %1420 = load double* %650, align 8
  %1421 = load double* %652, align 8
  %1422 = load double* %654, align 8
  %1423 = load double* %656, align 8
  %1424 = load double* %658, align 8
  %1425 = load double* %660, align 8
  %1426 = load double* %662, align 8
  %1427 = load double* %664, align 8
  %1428 = load double* %666, align 8
  %temp.vect1143 = insertelement <16 x double> undef, double %1413, i32 0
  %temp.vect1144 = insertelement <16 x double> %temp.vect1143, double %1414, i32 1
  %temp.vect1145 = insertelement <16 x double> %temp.vect1144, double %1415, i32 2
  %temp.vect1146 = insertelement <16 x double> %temp.vect1145, double %1416, i32 3
  %temp.vect1147 = insertelement <16 x double> %temp.vect1146, double %1417, i32 4
  %temp.vect1148 = insertelement <16 x double> %temp.vect1147, double %1418, i32 5
  %temp.vect1149 = insertelement <16 x double> %temp.vect1148, double %1419, i32 6
  %temp.vect1150 = insertelement <16 x double> %temp.vect1149, double %1420, i32 7
  %temp.vect1151 = insertelement <16 x double> %temp.vect1150, double %1421, i32 8
  %temp.vect1152 = insertelement <16 x double> %temp.vect1151, double %1422, i32 9
  %temp.vect1153 = insertelement <16 x double> %temp.vect1152, double %1423, i32 10
  %temp.vect1154 = insertelement <16 x double> %temp.vect1153, double %1424, i32 11
  %temp.vect1155 = insertelement <16 x double> %temp.vect1154, double %1425, i32 12
  %temp.vect1156 = insertelement <16 x double> %temp.vect1155, double %1426, i32 13
  %temp.vect1157 = insertelement <16 x double> %temp.vect1156, double %1427, i32 14
  %temp.vect1158 = insertelement <16 x double> %temp.vect1157, double %1428, i32 15
  %1429 = fadd <16 x double> %temp.vect1158, %1412
  %1430 = load double addrspace(3)* %33, align 16
  %temp1159 = insertelement <16 x double> undef, double %1430, i32 0
  %vector1160 = shufflevector <16 x double> %temp1159, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2225" = add nuw i64 %CurrSBIndex..4, 3328
  %"&pSB[currWI].offset2226" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2225"
  %CastToValueType2227 = bitcast i8* %"&pSB[currWI].offset2226" to <16 x double>*
  %loadedValue2228 = load <16 x double>* %CastToValueType2227, align 128
  %1431 = fmul <16 x double> %loadedValue2228, %vector1160
  %1432 = fadd <16 x double> %1144, %1431
  %1433 = load double addrspace(3)* %35, align 8
  %temp1161 = insertelement <16 x double> undef, double %1433, i32 0
  %vector1162 = shufflevector <16 x double> %temp1161, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2220" = add nuw i64 %CurrSBIndex..4, 3328
  %"&pSB[currWI].offset2221" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2220"
  %CastToValueType2222 = bitcast i8* %"&pSB[currWI].offset2221" to <16 x double>*
  %loadedValue2223 = load <16 x double>* %CastToValueType2222, align 128
  %1434 = fmul <16 x double> %loadedValue2223, %vector1162
  %1435 = fadd <16 x double> %1163, %1434
  %1436 = load double addrspace(3)* %37, align 16
  %temp1163 = insertelement <16 x double> undef, double %1436, i32 0
  %vector1164 = shufflevector <16 x double> %temp1163, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2215" = add nuw i64 %CurrSBIndex..4, 3328
  %"&pSB[currWI].offset2216" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2215"
  %CastToValueType2217 = bitcast i8* %"&pSB[currWI].offset2216" to <16 x double>*
  %loadedValue2218 = load <16 x double>* %CastToValueType2217, align 128
  %1437 = fmul <16 x double> %loadedValue2218, %vector1164
  %1438 = fadd <16 x double> %1182, %1437
  %1439 = load double addrspace(3)* %39, align 8
  %temp1165 = insertelement <16 x double> undef, double %1439, i32 0
  %vector1166 = shufflevector <16 x double> %temp1165, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2210" = add nuw i64 %CurrSBIndex..4, 3328
  %"&pSB[currWI].offset2211" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2210"
  %CastToValueType2212 = bitcast i8* %"&pSB[currWI].offset2211" to <16 x double>*
  %loadedValue2213 = load <16 x double>* %CastToValueType2212, align 128
  %1440 = fmul <16 x double> %loadedValue2213, %vector1166
  %1441 = fadd <16 x double> %1201, %1440
  %1442 = load double addrspace(3)* %41, align 16
  %temp1167 = insertelement <16 x double> undef, double %1442, i32 0
  %vector1168 = shufflevector <16 x double> %temp1167, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2205" = add nuw i64 %CurrSBIndex..4, 3328
  %"&pSB[currWI].offset2206" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2205"
  %CastToValueType2207 = bitcast i8* %"&pSB[currWI].offset2206" to <16 x double>*
  %loadedValue2208 = load <16 x double>* %CastToValueType2207, align 128
  %1443 = fmul <16 x double> %loadedValue2208, %vector1168
  %1444 = fadd <16 x double> %1220, %1443
  %1445 = load double addrspace(3)* %43, align 8
  %temp1169 = insertelement <16 x double> undef, double %1445, i32 0
  %vector1170 = shufflevector <16 x double> %temp1169, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2200" = add nuw i64 %CurrSBIndex..4, 3328
  %"&pSB[currWI].offset2201" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2200"
  %CastToValueType2202 = bitcast i8* %"&pSB[currWI].offset2201" to <16 x double>*
  %loadedValue2203 = load <16 x double>* %CastToValueType2202, align 128
  %1446 = fmul <16 x double> %loadedValue2203, %vector1170
  %1447 = fadd <16 x double> %1239, %1446
  %1448 = load double addrspace(3)* %45, align 16
  %temp1171 = insertelement <16 x double> undef, double %1448, i32 0
  %vector1172 = shufflevector <16 x double> %temp1171, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2195" = add nuw i64 %CurrSBIndex..4, 3328
  %"&pSB[currWI].offset2196" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2195"
  %CastToValueType2197 = bitcast i8* %"&pSB[currWI].offset2196" to <16 x double>*
  %loadedValue2198 = load <16 x double>* %CastToValueType2197, align 128
  %1449 = fmul <16 x double> %loadedValue2198, %vector1172
  %1450 = fadd <16 x double> %1258, %1449
  %1451 = load double addrspace(3)* %47, align 8
  %temp1173 = insertelement <16 x double> undef, double %1451, i32 0
  %vector1174 = shufflevector <16 x double> %temp1173, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2190" = add nuw i64 %CurrSBIndex..4, 3328
  %"&pSB[currWI].offset2191" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2190"
  %CastToValueType2192 = bitcast i8* %"&pSB[currWI].offset2191" to <16 x double>*
  %loadedValue2193 = load <16 x double>* %CastToValueType2192, align 128
  %1452 = fmul <16 x double> %loadedValue2193, %vector1174
  %1453 = fadd <16 x double> %1277, %1452
  %1454 = load double addrspace(3)* %49, align 16
  %temp1175 = insertelement <16 x double> undef, double %1454, i32 0
  %vector1176 = shufflevector <16 x double> %temp1175, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2185" = add nuw i64 %CurrSBIndex..4, 3328
  %"&pSB[currWI].offset2186" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2185"
  %CastToValueType2187 = bitcast i8* %"&pSB[currWI].offset2186" to <16 x double>*
  %loadedValue2188 = load <16 x double>* %CastToValueType2187, align 128
  %1455 = fmul <16 x double> %loadedValue2188, %vector1176
  %1456 = fadd <16 x double> %1296, %1455
  %1457 = load double addrspace(3)* %51, align 8
  %temp1177 = insertelement <16 x double> undef, double %1457, i32 0
  %vector1178 = shufflevector <16 x double> %temp1177, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2180" = add nuw i64 %CurrSBIndex..4, 3328
  %"&pSB[currWI].offset2181" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2180"
  %CastToValueType2182 = bitcast i8* %"&pSB[currWI].offset2181" to <16 x double>*
  %loadedValue2183 = load <16 x double>* %CastToValueType2182, align 128
  %1458 = fmul <16 x double> %loadedValue2183, %vector1178
  %1459 = fadd <16 x double> %1315, %1458
  %1460 = load double addrspace(3)* %53, align 16
  %temp1179 = insertelement <16 x double> undef, double %1460, i32 0
  %vector1180 = shufflevector <16 x double> %temp1179, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2175" = add nuw i64 %CurrSBIndex..4, 3328
  %"&pSB[currWI].offset2176" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2175"
  %CastToValueType2177 = bitcast i8* %"&pSB[currWI].offset2176" to <16 x double>*
  %loadedValue2178 = load <16 x double>* %CastToValueType2177, align 128
  %1461 = fmul <16 x double> %loadedValue2178, %vector1180
  %1462 = fadd <16 x double> %1334, %1461
  %1463 = load double addrspace(3)* %55, align 8
  %temp1181 = insertelement <16 x double> undef, double %1463, i32 0
  %vector1182 = shufflevector <16 x double> %temp1181, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2170" = add nuw i64 %CurrSBIndex..4, 3328
  %"&pSB[currWI].offset2171" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2170"
  %CastToValueType2172 = bitcast i8* %"&pSB[currWI].offset2171" to <16 x double>*
  %loadedValue2173 = load <16 x double>* %CastToValueType2172, align 128
  %1464 = fmul <16 x double> %loadedValue2173, %vector1182
  %1465 = fadd <16 x double> %1353, %1464
  %1466 = load double addrspace(3)* %57, align 16
  %temp1183 = insertelement <16 x double> undef, double %1466, i32 0
  %vector1184 = shufflevector <16 x double> %temp1183, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2165" = add nuw i64 %CurrSBIndex..4, 3328
  %"&pSB[currWI].offset2166" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2165"
  %CastToValueType2167 = bitcast i8* %"&pSB[currWI].offset2166" to <16 x double>*
  %loadedValue2168 = load <16 x double>* %CastToValueType2167, align 128
  %1467 = fmul <16 x double> %loadedValue2168, %vector1184
  %1468 = fadd <16 x double> %1372, %1467
  %1469 = load double addrspace(3)* %59, align 8
  %temp1185 = insertelement <16 x double> undef, double %1469, i32 0
  %vector1186 = shufflevector <16 x double> %temp1185, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2160" = add nuw i64 %CurrSBIndex..4, 3328
  %"&pSB[currWI].offset2161" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2160"
  %CastToValueType2162 = bitcast i8* %"&pSB[currWI].offset2161" to <16 x double>*
  %loadedValue2163 = load <16 x double>* %CastToValueType2162, align 128
  %1470 = fmul <16 x double> %loadedValue2163, %vector1186
  %1471 = fadd <16 x double> %1391, %1470
  %1472 = load double addrspace(3)* %61, align 16
  %temp1187 = insertelement <16 x double> undef, double %1472, i32 0
  %vector1188 = shufflevector <16 x double> %temp1187, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2155" = add nuw i64 %CurrSBIndex..4, 3328
  %"&pSB[currWI].offset2156" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2155"
  %CastToValueType2157 = bitcast i8* %"&pSB[currWI].offset2156" to <16 x double>*
  %loadedValue2158 = load <16 x double>* %CastToValueType2157, align 128
  %1473 = fmul <16 x double> %loadedValue2158, %vector1188
  %1474 = fadd <16 x double> %1410, %1473
  %1475 = load double addrspace(3)* %63, align 8
  %temp1189 = insertelement <16 x double> undef, double %1475, i32 0
  %vector1190 = shufflevector <16 x double> %temp1189, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2150" = add nuw i64 %CurrSBIndex..4, 3328
  %"&pSB[currWI].offset2151" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2150"
  %CastToValueType2152 = bitcast i8* %"&pSB[currWI].offset2151" to <16 x double>*
  %loadedValue2153 = load <16 x double>* %CastToValueType2152, align 128
  %1476 = fmul <16 x double> %loadedValue2153, %vector1190
  %1477 = fadd <16 x double> %1429, %1476
  %1478 = load double addrspace(3)* %65, align 16
  %temp1191 = insertelement <16 x double> undef, double %1478, i32 0
  %vector1192 = shufflevector <16 x double> %temp1191, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2314" = add nuw i64 %CurrSBIndex..4, 3456
  %"&pSB[currWI].offset2315" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2314"
  %CastToValueType2316 = bitcast i8* %"&pSB[currWI].offset2315" to <16 x double>*
  %loadedValue2317 = load <16 x double>* %CastToValueType2316, align 128
  %1479 = fmul <16 x double> %loadedValue2317, %vector1192
  %1480 = fadd <16 x double> %1432, %1479
  %1481 = load double addrspace(3)* %67, align 8
  %temp1193 = insertelement <16 x double> undef, double %1481, i32 0
  %vector1194 = shufflevector <16 x double> %temp1193, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2309" = add nuw i64 %CurrSBIndex..4, 3456
  %"&pSB[currWI].offset2310" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2309"
  %CastToValueType2311 = bitcast i8* %"&pSB[currWI].offset2310" to <16 x double>*
  %loadedValue2312 = load <16 x double>* %CastToValueType2311, align 128
  %1482 = fmul <16 x double> %loadedValue2312, %vector1194
  %1483 = fadd <16 x double> %1435, %1482
  %1484 = load double addrspace(3)* %69, align 16
  %temp1195 = insertelement <16 x double> undef, double %1484, i32 0
  %vector1196 = shufflevector <16 x double> %temp1195, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2304" = add nuw i64 %CurrSBIndex..4, 3456
  %"&pSB[currWI].offset2305" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2304"
  %CastToValueType2306 = bitcast i8* %"&pSB[currWI].offset2305" to <16 x double>*
  %loadedValue2307 = load <16 x double>* %CastToValueType2306, align 128
  %1485 = fmul <16 x double> %loadedValue2307, %vector1196
  %1486 = fadd <16 x double> %1438, %1485
  %1487 = load double addrspace(3)* %71, align 8
  %temp1197 = insertelement <16 x double> undef, double %1487, i32 0
  %vector1198 = shufflevector <16 x double> %temp1197, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2299" = add nuw i64 %CurrSBIndex..4, 3456
  %"&pSB[currWI].offset2300" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2299"
  %CastToValueType2301 = bitcast i8* %"&pSB[currWI].offset2300" to <16 x double>*
  %loadedValue2302 = load <16 x double>* %CastToValueType2301, align 128
  %1488 = fmul <16 x double> %loadedValue2302, %vector1198
  %1489 = fadd <16 x double> %1441, %1488
  %1490 = load double addrspace(3)* %73, align 16
  %temp1199 = insertelement <16 x double> undef, double %1490, i32 0
  %vector1200 = shufflevector <16 x double> %temp1199, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2294" = add nuw i64 %CurrSBIndex..4, 3456
  %"&pSB[currWI].offset2295" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2294"
  %CastToValueType2296 = bitcast i8* %"&pSB[currWI].offset2295" to <16 x double>*
  %loadedValue2297 = load <16 x double>* %CastToValueType2296, align 128
  %1491 = fmul <16 x double> %loadedValue2297, %vector1200
  %1492 = fadd <16 x double> %1444, %1491
  %1493 = load double addrspace(3)* %75, align 8
  %temp1201 = insertelement <16 x double> undef, double %1493, i32 0
  %vector1202 = shufflevector <16 x double> %temp1201, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2289" = add nuw i64 %CurrSBIndex..4, 3456
  %"&pSB[currWI].offset2290" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2289"
  %CastToValueType2291 = bitcast i8* %"&pSB[currWI].offset2290" to <16 x double>*
  %loadedValue2292 = load <16 x double>* %CastToValueType2291, align 128
  %1494 = fmul <16 x double> %loadedValue2292, %vector1202
  %1495 = fadd <16 x double> %1447, %1494
  %1496 = load double addrspace(3)* %77, align 16
  %temp1203 = insertelement <16 x double> undef, double %1496, i32 0
  %vector1204 = shufflevector <16 x double> %temp1203, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2284" = add nuw i64 %CurrSBIndex..4, 3456
  %"&pSB[currWI].offset2285" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2284"
  %CastToValueType2286 = bitcast i8* %"&pSB[currWI].offset2285" to <16 x double>*
  %loadedValue2287 = load <16 x double>* %CastToValueType2286, align 128
  %1497 = fmul <16 x double> %loadedValue2287, %vector1204
  %1498 = fadd <16 x double> %1450, %1497
  %1499 = load double addrspace(3)* %79, align 8
  %temp1205 = insertelement <16 x double> undef, double %1499, i32 0
  %vector1206 = shufflevector <16 x double> %temp1205, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2279" = add nuw i64 %CurrSBIndex..4, 3456
  %"&pSB[currWI].offset2280" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2279"
  %CastToValueType2281 = bitcast i8* %"&pSB[currWI].offset2280" to <16 x double>*
  %loadedValue2282 = load <16 x double>* %CastToValueType2281, align 128
  %1500 = fmul <16 x double> %loadedValue2282, %vector1206
  %1501 = fadd <16 x double> %1453, %1500
  %1502 = load double addrspace(3)* %81, align 16
  %temp1207 = insertelement <16 x double> undef, double %1502, i32 0
  %vector1208 = shufflevector <16 x double> %temp1207, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2274" = add nuw i64 %CurrSBIndex..4, 3456
  %"&pSB[currWI].offset2275" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2274"
  %CastToValueType2276 = bitcast i8* %"&pSB[currWI].offset2275" to <16 x double>*
  %loadedValue2277 = load <16 x double>* %CastToValueType2276, align 128
  %1503 = fmul <16 x double> %loadedValue2277, %vector1208
  %1504 = fadd <16 x double> %1456, %1503
  %1505 = load double addrspace(3)* %83, align 8
  %temp1209 = insertelement <16 x double> undef, double %1505, i32 0
  %vector1210 = shufflevector <16 x double> %temp1209, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2269" = add nuw i64 %CurrSBIndex..4, 3456
  %"&pSB[currWI].offset2270" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2269"
  %CastToValueType2271 = bitcast i8* %"&pSB[currWI].offset2270" to <16 x double>*
  %loadedValue2272 = load <16 x double>* %CastToValueType2271, align 128
  %1506 = fmul <16 x double> %loadedValue2272, %vector1210
  %1507 = fadd <16 x double> %1459, %1506
  %1508 = load double addrspace(3)* %85, align 16
  %temp1211 = insertelement <16 x double> undef, double %1508, i32 0
  %vector1212 = shufflevector <16 x double> %temp1211, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2264" = add nuw i64 %CurrSBIndex..4, 3456
  %"&pSB[currWI].offset2265" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2264"
  %CastToValueType2266 = bitcast i8* %"&pSB[currWI].offset2265" to <16 x double>*
  %loadedValue2267 = load <16 x double>* %CastToValueType2266, align 128
  %1509 = fmul <16 x double> %loadedValue2267, %vector1212
  %1510 = fadd <16 x double> %1462, %1509
  %1511 = load double addrspace(3)* %87, align 8
  %temp1213 = insertelement <16 x double> undef, double %1511, i32 0
  %vector1214 = shufflevector <16 x double> %temp1213, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2259" = add nuw i64 %CurrSBIndex..4, 3456
  %"&pSB[currWI].offset2260" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2259"
  %CastToValueType2261 = bitcast i8* %"&pSB[currWI].offset2260" to <16 x double>*
  %loadedValue2262 = load <16 x double>* %CastToValueType2261, align 128
  %1512 = fmul <16 x double> %loadedValue2262, %vector1214
  %1513 = fadd <16 x double> %1465, %1512
  %1514 = load double addrspace(3)* %89, align 16
  %temp1215 = insertelement <16 x double> undef, double %1514, i32 0
  %vector1216 = shufflevector <16 x double> %temp1215, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2254" = add nuw i64 %CurrSBIndex..4, 3456
  %"&pSB[currWI].offset2255" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2254"
  %CastToValueType2256 = bitcast i8* %"&pSB[currWI].offset2255" to <16 x double>*
  %loadedValue2257 = load <16 x double>* %CastToValueType2256, align 128
  %1515 = fmul <16 x double> %loadedValue2257, %vector1216
  %1516 = fadd <16 x double> %1468, %1515
  %1517 = load double addrspace(3)* %91, align 8
  %temp1217 = insertelement <16 x double> undef, double %1517, i32 0
  %vector1218 = shufflevector <16 x double> %temp1217, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2249" = add nuw i64 %CurrSBIndex..4, 3456
  %"&pSB[currWI].offset2250" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2249"
  %CastToValueType2251 = bitcast i8* %"&pSB[currWI].offset2250" to <16 x double>*
  %loadedValue2252 = load <16 x double>* %CastToValueType2251, align 128
  %1518 = fmul <16 x double> %loadedValue2252, %vector1218
  %1519 = fadd <16 x double> %1471, %1518
  %1520 = load double addrspace(3)* %93, align 16
  %temp1219 = insertelement <16 x double> undef, double %1520, i32 0
  %vector1220 = shufflevector <16 x double> %temp1219, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2244" = add nuw i64 %CurrSBIndex..4, 3456
  %"&pSB[currWI].offset2245" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2244"
  %CastToValueType2246 = bitcast i8* %"&pSB[currWI].offset2245" to <16 x double>*
  %loadedValue2247 = load <16 x double>* %CastToValueType2246, align 128
  %1521 = fmul <16 x double> %loadedValue2247, %vector1220
  %1522 = fadd <16 x double> %1474, %1521
  %1523 = load double addrspace(3)* %95, align 8
  %temp1221 = insertelement <16 x double> undef, double %1523, i32 0
  %vector1222 = shufflevector <16 x double> %temp1221, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2239" = add nuw i64 %CurrSBIndex..4, 3456
  %"&pSB[currWI].offset2240" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2239"
  %CastToValueType2241 = bitcast i8* %"&pSB[currWI].offset2240" to <16 x double>*
  %loadedValue2242 = load <16 x double>* %CastToValueType2241, align 128
  %1524 = fmul <16 x double> %loadedValue2242, %vector1222
  %1525 = fadd <16 x double> %1477, %1524
  %1526 = load double addrspace(3)* %97, align 16
  %temp1223 = insertelement <16 x double> undef, double %1526, i32 0
  %vector1224 = shufflevector <16 x double> %temp1223, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2403" = add nuw i64 %CurrSBIndex..4, 3584
  %"&pSB[currWI].offset2404" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2403"
  %CastToValueType2405 = bitcast i8* %"&pSB[currWI].offset2404" to <16 x double>*
  %loadedValue2406 = load <16 x double>* %CastToValueType2405, align 128
  %1527 = fmul <16 x double> %loadedValue2406, %vector1224
  %1528 = fadd <16 x double> %1480, %1527
  %extract1225 = extractelement <16 x double> %1528, i32 0
  %extract1226 = extractelement <16 x double> %1528, i32 1
  %extract1227 = extractelement <16 x double> %1528, i32 2
  %extract1228 = extractelement <16 x double> %1528, i32 3
  %extract1229 = extractelement <16 x double> %1528, i32 4
  %extract1230 = extractelement <16 x double> %1528, i32 5
  %extract1231 = extractelement <16 x double> %1528, i32 6
  %extract1232 = extractelement <16 x double> %1528, i32 7
  %extract1233 = extractelement <16 x double> %1528, i32 8
  %extract1234 = extractelement <16 x double> %1528, i32 9
  %extract1235 = extractelement <16 x double> %1528, i32 10
  %extract1236 = extractelement <16 x double> %1528, i32 11
  %extract1237 = extractelement <16 x double> %1528, i32 12
  %extract1238 = extractelement <16 x double> %1528, i32 13
  %extract1239 = extractelement <16 x double> %1528, i32 14
  %extract1240 = extractelement <16 x double> %1528, i32 15
  store double %extract1225, double* %171, align 16
  store double %extract1226, double* %172, align 16
  store double %extract1227, double* %173, align 16
  store double %extract1228, double* %174, align 16
  store double %extract1229, double* %175, align 16
  store double %extract1230, double* %176, align 16
  store double %extract1231, double* %177, align 16
  store double %extract1232, double* %178, align 16
  store double %extract1233, double* %179, align 16
  store double %extract1234, double* %180, align 16
  store double %extract1235, double* %181, align 16
  store double %extract1236, double* %182, align 16
  store double %extract1237, double* %183, align 16
  store double %extract1238, double* %184, align 16
  store double %extract1239, double* %185, align 16
  store double %extract1240, double* %186, align 16
  %1529 = load double addrspace(3)* %99, align 8
  %temp1241 = insertelement <16 x double> undef, double %1529, i32 0
  %vector1242 = shufflevector <16 x double> %temp1241, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2398" = add nuw i64 %CurrSBIndex..4, 3584
  %"&pSB[currWI].offset2399" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2398"
  %CastToValueType2400 = bitcast i8* %"&pSB[currWI].offset2399" to <16 x double>*
  %loadedValue2401 = load <16 x double>* %CastToValueType2400, align 128
  %1530 = fmul <16 x double> %loadedValue2401, %vector1242
  %1531 = fadd <16 x double> %1483, %1530
  %extract1243 = extractelement <16 x double> %1531, i32 0
  %extract1244 = extractelement <16 x double> %1531, i32 1
  %extract1245 = extractelement <16 x double> %1531, i32 2
  %extract1246 = extractelement <16 x double> %1531, i32 3
  %extract1247 = extractelement <16 x double> %1531, i32 4
  %extract1248 = extractelement <16 x double> %1531, i32 5
  %extract1249 = extractelement <16 x double> %1531, i32 6
  %extract1250 = extractelement <16 x double> %1531, i32 7
  %extract1251 = extractelement <16 x double> %1531, i32 8
  %extract1252 = extractelement <16 x double> %1531, i32 9
  %extract1253 = extractelement <16 x double> %1531, i32 10
  %extract1254 = extractelement <16 x double> %1531, i32 11
  %extract1255 = extractelement <16 x double> %1531, i32 12
  %extract1256 = extractelement <16 x double> %1531, i32 13
  %extract1257 = extractelement <16 x double> %1531, i32 14
  %extract1258 = extractelement <16 x double> %1531, i32 15
  store double %extract1243, double* %188, align 8
  store double %extract1244, double* %190, align 8
  store double %extract1245, double* %192, align 8
  store double %extract1246, double* %194, align 8
  store double %extract1247, double* %196, align 8
  store double %extract1248, double* %198, align 8
  store double %extract1249, double* %200, align 8
  store double %extract1250, double* %202, align 8
  store double %extract1251, double* %204, align 8
  store double %extract1252, double* %206, align 8
  store double %extract1253, double* %208, align 8
  store double %extract1254, double* %210, align 8
  store double %extract1255, double* %212, align 8
  store double %extract1256, double* %214, align 8
  store double %extract1257, double* %216, align 8
  store double %extract1258, double* %218, align 8
  %1532 = load double addrspace(3)* %101, align 16
  %temp1259 = insertelement <16 x double> undef, double %1532, i32 0
  %vector1260 = shufflevector <16 x double> %temp1259, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2393" = add nuw i64 %CurrSBIndex..4, 3584
  %"&pSB[currWI].offset2394" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2393"
  %CastToValueType2395 = bitcast i8* %"&pSB[currWI].offset2394" to <16 x double>*
  %loadedValue2396 = load <16 x double>* %CastToValueType2395, align 128
  %1533 = fmul <16 x double> %loadedValue2396, %vector1260
  %1534 = fadd <16 x double> %1486, %1533
  %extract1261 = extractelement <16 x double> %1534, i32 0
  %extract1262 = extractelement <16 x double> %1534, i32 1
  %extract1263 = extractelement <16 x double> %1534, i32 2
  %extract1264 = extractelement <16 x double> %1534, i32 3
  %extract1265 = extractelement <16 x double> %1534, i32 4
  %extract1266 = extractelement <16 x double> %1534, i32 5
  %extract1267 = extractelement <16 x double> %1534, i32 6
  %extract1268 = extractelement <16 x double> %1534, i32 7
  %extract1269 = extractelement <16 x double> %1534, i32 8
  %extract1270 = extractelement <16 x double> %1534, i32 9
  %extract1271 = extractelement <16 x double> %1534, i32 10
  %extract1272 = extractelement <16 x double> %1534, i32 11
  %extract1273 = extractelement <16 x double> %1534, i32 12
  %extract1274 = extractelement <16 x double> %1534, i32 13
  %extract1275 = extractelement <16 x double> %1534, i32 14
  %extract1276 = extractelement <16 x double> %1534, i32 15
  store double %extract1261, double* %220, align 16
  store double %extract1262, double* %222, align 16
  store double %extract1263, double* %224, align 16
  store double %extract1264, double* %226, align 16
  store double %extract1265, double* %228, align 16
  store double %extract1266, double* %230, align 16
  store double %extract1267, double* %232, align 16
  store double %extract1268, double* %234, align 16
  store double %extract1269, double* %236, align 16
  store double %extract1270, double* %238, align 16
  store double %extract1271, double* %240, align 16
  store double %extract1272, double* %242, align 16
  store double %extract1273, double* %244, align 16
  store double %extract1274, double* %246, align 16
  store double %extract1275, double* %248, align 16
  store double %extract1276, double* %250, align 16
  %1535 = load double addrspace(3)* %103, align 8
  %temp1277 = insertelement <16 x double> undef, double %1535, i32 0
  %vector1278 = shufflevector <16 x double> %temp1277, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2388" = add nuw i64 %CurrSBIndex..4, 3584
  %"&pSB[currWI].offset2389" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2388"
  %CastToValueType2390 = bitcast i8* %"&pSB[currWI].offset2389" to <16 x double>*
  %loadedValue2391 = load <16 x double>* %CastToValueType2390, align 128
  %1536 = fmul <16 x double> %loadedValue2391, %vector1278
  %1537 = fadd <16 x double> %1489, %1536
  %extract1279 = extractelement <16 x double> %1537, i32 0
  %extract1280 = extractelement <16 x double> %1537, i32 1
  %extract1281 = extractelement <16 x double> %1537, i32 2
  %extract1282 = extractelement <16 x double> %1537, i32 3
  %extract1283 = extractelement <16 x double> %1537, i32 4
  %extract1284 = extractelement <16 x double> %1537, i32 5
  %extract1285 = extractelement <16 x double> %1537, i32 6
  %extract1286 = extractelement <16 x double> %1537, i32 7
  %extract1287 = extractelement <16 x double> %1537, i32 8
  %extract1288 = extractelement <16 x double> %1537, i32 9
  %extract1289 = extractelement <16 x double> %1537, i32 10
  %extract1290 = extractelement <16 x double> %1537, i32 11
  %extract1291 = extractelement <16 x double> %1537, i32 12
  %extract1292 = extractelement <16 x double> %1537, i32 13
  %extract1293 = extractelement <16 x double> %1537, i32 14
  %extract1294 = extractelement <16 x double> %1537, i32 15
  store double %extract1279, double* %252, align 8
  store double %extract1280, double* %254, align 8
  store double %extract1281, double* %256, align 8
  store double %extract1282, double* %258, align 8
  store double %extract1283, double* %260, align 8
  store double %extract1284, double* %262, align 8
  store double %extract1285, double* %264, align 8
  store double %extract1286, double* %266, align 8
  store double %extract1287, double* %268, align 8
  store double %extract1288, double* %270, align 8
  store double %extract1289, double* %272, align 8
  store double %extract1290, double* %274, align 8
  store double %extract1291, double* %276, align 8
  store double %extract1292, double* %278, align 8
  store double %extract1293, double* %280, align 8
  store double %extract1294, double* %282, align 8
  %1538 = load double addrspace(3)* %105, align 16
  %temp1295 = insertelement <16 x double> undef, double %1538, i32 0
  %vector1296 = shufflevector <16 x double> %temp1295, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2383" = add nuw i64 %CurrSBIndex..4, 3584
  %"&pSB[currWI].offset2384" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2383"
  %CastToValueType2385 = bitcast i8* %"&pSB[currWI].offset2384" to <16 x double>*
  %loadedValue2386 = load <16 x double>* %CastToValueType2385, align 128
  %1539 = fmul <16 x double> %loadedValue2386, %vector1296
  %1540 = fadd <16 x double> %1492, %1539
  %extract1297 = extractelement <16 x double> %1540, i32 0
  %extract1298 = extractelement <16 x double> %1540, i32 1
  %extract1299 = extractelement <16 x double> %1540, i32 2
  %extract1300 = extractelement <16 x double> %1540, i32 3
  %extract1301 = extractelement <16 x double> %1540, i32 4
  %extract1302 = extractelement <16 x double> %1540, i32 5
  %extract1303 = extractelement <16 x double> %1540, i32 6
  %extract1304 = extractelement <16 x double> %1540, i32 7
  %extract1305 = extractelement <16 x double> %1540, i32 8
  %extract1306 = extractelement <16 x double> %1540, i32 9
  %extract1307 = extractelement <16 x double> %1540, i32 10
  %extract1308 = extractelement <16 x double> %1540, i32 11
  %extract1309 = extractelement <16 x double> %1540, i32 12
  %extract1310 = extractelement <16 x double> %1540, i32 13
  %extract1311 = extractelement <16 x double> %1540, i32 14
  %extract1312 = extractelement <16 x double> %1540, i32 15
  store double %extract1297, double* %284, align 16
  store double %extract1298, double* %286, align 16
  store double %extract1299, double* %288, align 16
  store double %extract1300, double* %290, align 16
  store double %extract1301, double* %292, align 16
  store double %extract1302, double* %294, align 16
  store double %extract1303, double* %296, align 16
  store double %extract1304, double* %298, align 16
  store double %extract1305, double* %300, align 16
  store double %extract1306, double* %302, align 16
  store double %extract1307, double* %304, align 16
  store double %extract1308, double* %306, align 16
  store double %extract1309, double* %308, align 16
  store double %extract1310, double* %310, align 16
  store double %extract1311, double* %312, align 16
  store double %extract1312, double* %314, align 16
  %1541 = load double addrspace(3)* %107, align 8
  %temp1313 = insertelement <16 x double> undef, double %1541, i32 0
  %vector1314 = shufflevector <16 x double> %temp1313, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2378" = add nuw i64 %CurrSBIndex..4, 3584
  %"&pSB[currWI].offset2379" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2378"
  %CastToValueType2380 = bitcast i8* %"&pSB[currWI].offset2379" to <16 x double>*
  %loadedValue2381 = load <16 x double>* %CastToValueType2380, align 128
  %1542 = fmul <16 x double> %loadedValue2381, %vector1314
  %1543 = fadd <16 x double> %1495, %1542
  %extract1315 = extractelement <16 x double> %1543, i32 0
  %extract1316 = extractelement <16 x double> %1543, i32 1
  %extract1317 = extractelement <16 x double> %1543, i32 2
  %extract1318 = extractelement <16 x double> %1543, i32 3
  %extract1319 = extractelement <16 x double> %1543, i32 4
  %extract1320 = extractelement <16 x double> %1543, i32 5
  %extract1321 = extractelement <16 x double> %1543, i32 6
  %extract1322 = extractelement <16 x double> %1543, i32 7
  %extract1323 = extractelement <16 x double> %1543, i32 8
  %extract1324 = extractelement <16 x double> %1543, i32 9
  %extract1325 = extractelement <16 x double> %1543, i32 10
  %extract1326 = extractelement <16 x double> %1543, i32 11
  %extract1327 = extractelement <16 x double> %1543, i32 12
  %extract1328 = extractelement <16 x double> %1543, i32 13
  %extract1329 = extractelement <16 x double> %1543, i32 14
  %extract1330 = extractelement <16 x double> %1543, i32 15
  store double %extract1315, double* %316, align 8
  store double %extract1316, double* %318, align 8
  store double %extract1317, double* %320, align 8
  store double %extract1318, double* %322, align 8
  store double %extract1319, double* %324, align 8
  store double %extract1320, double* %326, align 8
  store double %extract1321, double* %328, align 8
  store double %extract1322, double* %330, align 8
  store double %extract1323, double* %332, align 8
  store double %extract1324, double* %334, align 8
  store double %extract1325, double* %336, align 8
  store double %extract1326, double* %338, align 8
  store double %extract1327, double* %340, align 8
  store double %extract1328, double* %342, align 8
  store double %extract1329, double* %344, align 8
  store double %extract1330, double* %346, align 8
  %1544 = load double addrspace(3)* %109, align 16
  %temp1331 = insertelement <16 x double> undef, double %1544, i32 0
  %vector1332 = shufflevector <16 x double> %temp1331, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2373" = add nuw i64 %CurrSBIndex..4, 3584
  %"&pSB[currWI].offset2374" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2373"
  %CastToValueType2375 = bitcast i8* %"&pSB[currWI].offset2374" to <16 x double>*
  %loadedValue2376 = load <16 x double>* %CastToValueType2375, align 128
  %1545 = fmul <16 x double> %loadedValue2376, %vector1332
  %1546 = fadd <16 x double> %1498, %1545
  %extract1333 = extractelement <16 x double> %1546, i32 0
  %extract1334 = extractelement <16 x double> %1546, i32 1
  %extract1335 = extractelement <16 x double> %1546, i32 2
  %extract1336 = extractelement <16 x double> %1546, i32 3
  %extract1337 = extractelement <16 x double> %1546, i32 4
  %extract1338 = extractelement <16 x double> %1546, i32 5
  %extract1339 = extractelement <16 x double> %1546, i32 6
  %extract1340 = extractelement <16 x double> %1546, i32 7
  %extract1341 = extractelement <16 x double> %1546, i32 8
  %extract1342 = extractelement <16 x double> %1546, i32 9
  %extract1343 = extractelement <16 x double> %1546, i32 10
  %extract1344 = extractelement <16 x double> %1546, i32 11
  %extract1345 = extractelement <16 x double> %1546, i32 12
  %extract1346 = extractelement <16 x double> %1546, i32 13
  %extract1347 = extractelement <16 x double> %1546, i32 14
  %extract1348 = extractelement <16 x double> %1546, i32 15
  store double %extract1333, double* %348, align 16
  store double %extract1334, double* %350, align 16
  store double %extract1335, double* %352, align 16
  store double %extract1336, double* %354, align 16
  store double %extract1337, double* %356, align 16
  store double %extract1338, double* %358, align 16
  store double %extract1339, double* %360, align 16
  store double %extract1340, double* %362, align 16
  store double %extract1341, double* %364, align 16
  store double %extract1342, double* %366, align 16
  store double %extract1343, double* %368, align 16
  store double %extract1344, double* %370, align 16
  store double %extract1345, double* %372, align 16
  store double %extract1346, double* %374, align 16
  store double %extract1347, double* %376, align 16
  store double %extract1348, double* %378, align 16
  %1547 = load double addrspace(3)* %111, align 8
  %temp1349 = insertelement <16 x double> undef, double %1547, i32 0
  %vector1350 = shufflevector <16 x double> %temp1349, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2368" = add nuw i64 %CurrSBIndex..4, 3584
  %"&pSB[currWI].offset2369" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2368"
  %CastToValueType2370 = bitcast i8* %"&pSB[currWI].offset2369" to <16 x double>*
  %loadedValue2371 = load <16 x double>* %CastToValueType2370, align 128
  %1548 = fmul <16 x double> %loadedValue2371, %vector1350
  %1549 = fadd <16 x double> %1501, %1548
  %extract1351 = extractelement <16 x double> %1549, i32 0
  %extract1352 = extractelement <16 x double> %1549, i32 1
  %extract1353 = extractelement <16 x double> %1549, i32 2
  %extract1354 = extractelement <16 x double> %1549, i32 3
  %extract1355 = extractelement <16 x double> %1549, i32 4
  %extract1356 = extractelement <16 x double> %1549, i32 5
  %extract1357 = extractelement <16 x double> %1549, i32 6
  %extract1358 = extractelement <16 x double> %1549, i32 7
  %extract1359 = extractelement <16 x double> %1549, i32 8
  %extract1360 = extractelement <16 x double> %1549, i32 9
  %extract1361 = extractelement <16 x double> %1549, i32 10
  %extract1362 = extractelement <16 x double> %1549, i32 11
  %extract1363 = extractelement <16 x double> %1549, i32 12
  %extract1364 = extractelement <16 x double> %1549, i32 13
  %extract1365 = extractelement <16 x double> %1549, i32 14
  %extract1366 = extractelement <16 x double> %1549, i32 15
  store double %extract1351, double* %380, align 8
  store double %extract1352, double* %382, align 8
  store double %extract1353, double* %384, align 8
  store double %extract1354, double* %386, align 8
  store double %extract1355, double* %388, align 8
  store double %extract1356, double* %390, align 8
  store double %extract1357, double* %392, align 8
  store double %extract1358, double* %394, align 8
  store double %extract1359, double* %396, align 8
  store double %extract1360, double* %398, align 8
  store double %extract1361, double* %400, align 8
  store double %extract1362, double* %402, align 8
  store double %extract1363, double* %404, align 8
  store double %extract1364, double* %406, align 8
  store double %extract1365, double* %408, align 8
  store double %extract1366, double* %410, align 8
  %1550 = load double addrspace(3)* %113, align 16
  %temp1367 = insertelement <16 x double> undef, double %1550, i32 0
  %vector1368 = shufflevector <16 x double> %temp1367, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2363" = add nuw i64 %CurrSBIndex..4, 3584
  %"&pSB[currWI].offset2364" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2363"
  %CastToValueType2365 = bitcast i8* %"&pSB[currWI].offset2364" to <16 x double>*
  %loadedValue2366 = load <16 x double>* %CastToValueType2365, align 128
  %1551 = fmul <16 x double> %loadedValue2366, %vector1368
  %1552 = fadd <16 x double> %1504, %1551
  %extract1369 = extractelement <16 x double> %1552, i32 0
  %extract1370 = extractelement <16 x double> %1552, i32 1
  %extract1371 = extractelement <16 x double> %1552, i32 2
  %extract1372 = extractelement <16 x double> %1552, i32 3
  %extract1373 = extractelement <16 x double> %1552, i32 4
  %extract1374 = extractelement <16 x double> %1552, i32 5
  %extract1375 = extractelement <16 x double> %1552, i32 6
  %extract1376 = extractelement <16 x double> %1552, i32 7
  %extract1377 = extractelement <16 x double> %1552, i32 8
  %extract1378 = extractelement <16 x double> %1552, i32 9
  %extract1379 = extractelement <16 x double> %1552, i32 10
  %extract1380 = extractelement <16 x double> %1552, i32 11
  %extract1381 = extractelement <16 x double> %1552, i32 12
  %extract1382 = extractelement <16 x double> %1552, i32 13
  %extract1383 = extractelement <16 x double> %1552, i32 14
  %extract1384 = extractelement <16 x double> %1552, i32 15
  store double %extract1369, double* %412, align 16
  store double %extract1370, double* %414, align 16
  store double %extract1371, double* %416, align 16
  store double %extract1372, double* %418, align 16
  store double %extract1373, double* %420, align 16
  store double %extract1374, double* %422, align 16
  store double %extract1375, double* %424, align 16
  store double %extract1376, double* %426, align 16
  store double %extract1377, double* %428, align 16
  store double %extract1378, double* %430, align 16
  store double %extract1379, double* %432, align 16
  store double %extract1380, double* %434, align 16
  store double %extract1381, double* %436, align 16
  store double %extract1382, double* %438, align 16
  store double %extract1383, double* %440, align 16
  store double %extract1384, double* %442, align 16
  %1553 = load double addrspace(3)* %115, align 8
  %temp1385 = insertelement <16 x double> undef, double %1553, i32 0
  %vector1386 = shufflevector <16 x double> %temp1385, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2358" = add nuw i64 %CurrSBIndex..4, 3584
  %"&pSB[currWI].offset2359" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2358"
  %CastToValueType2360 = bitcast i8* %"&pSB[currWI].offset2359" to <16 x double>*
  %loadedValue2361 = load <16 x double>* %CastToValueType2360, align 128
  %1554 = fmul <16 x double> %loadedValue2361, %vector1386
  %1555 = fadd <16 x double> %1507, %1554
  %extract1387 = extractelement <16 x double> %1555, i32 0
  %extract1388 = extractelement <16 x double> %1555, i32 1
  %extract1389 = extractelement <16 x double> %1555, i32 2
  %extract1390 = extractelement <16 x double> %1555, i32 3
  %extract1391 = extractelement <16 x double> %1555, i32 4
  %extract1392 = extractelement <16 x double> %1555, i32 5
  %extract1393 = extractelement <16 x double> %1555, i32 6
  %extract1394 = extractelement <16 x double> %1555, i32 7
  %extract1395 = extractelement <16 x double> %1555, i32 8
  %extract1396 = extractelement <16 x double> %1555, i32 9
  %extract1397 = extractelement <16 x double> %1555, i32 10
  %extract1398 = extractelement <16 x double> %1555, i32 11
  %extract1399 = extractelement <16 x double> %1555, i32 12
  %extract1400 = extractelement <16 x double> %1555, i32 13
  %extract1401 = extractelement <16 x double> %1555, i32 14
  %extract1402 = extractelement <16 x double> %1555, i32 15
  store double %extract1387, double* %444, align 8
  store double %extract1388, double* %446, align 8
  store double %extract1389, double* %448, align 8
  store double %extract1390, double* %450, align 8
  store double %extract1391, double* %452, align 8
  store double %extract1392, double* %454, align 8
  store double %extract1393, double* %456, align 8
  store double %extract1394, double* %458, align 8
  store double %extract1395, double* %460, align 8
  store double %extract1396, double* %462, align 8
  store double %extract1397, double* %464, align 8
  store double %extract1398, double* %466, align 8
  store double %extract1399, double* %468, align 8
  store double %extract1400, double* %470, align 8
  store double %extract1401, double* %472, align 8
  store double %extract1402, double* %474, align 8
  %1556 = load double addrspace(3)* %117, align 16
  %temp1403 = insertelement <16 x double> undef, double %1556, i32 0
  %vector1404 = shufflevector <16 x double> %temp1403, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2353" = add nuw i64 %CurrSBIndex..4, 3584
  %"&pSB[currWI].offset2354" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2353"
  %CastToValueType2355 = bitcast i8* %"&pSB[currWI].offset2354" to <16 x double>*
  %loadedValue2356 = load <16 x double>* %CastToValueType2355, align 128
  %1557 = fmul <16 x double> %loadedValue2356, %vector1404
  %1558 = fadd <16 x double> %1510, %1557
  %extract1405 = extractelement <16 x double> %1558, i32 0
  %extract1406 = extractelement <16 x double> %1558, i32 1
  %extract1407 = extractelement <16 x double> %1558, i32 2
  %extract1408 = extractelement <16 x double> %1558, i32 3
  %extract1409 = extractelement <16 x double> %1558, i32 4
  %extract1410 = extractelement <16 x double> %1558, i32 5
  %extract1411 = extractelement <16 x double> %1558, i32 6
  %extract1412 = extractelement <16 x double> %1558, i32 7
  %extract1413 = extractelement <16 x double> %1558, i32 8
  %extract1414 = extractelement <16 x double> %1558, i32 9
  %extract1415 = extractelement <16 x double> %1558, i32 10
  %extract1416 = extractelement <16 x double> %1558, i32 11
  %extract1417 = extractelement <16 x double> %1558, i32 12
  %extract1418 = extractelement <16 x double> %1558, i32 13
  %extract1419 = extractelement <16 x double> %1558, i32 14
  %extract1420 = extractelement <16 x double> %1558, i32 15
  store double %extract1405, double* %476, align 16
  store double %extract1406, double* %478, align 16
  store double %extract1407, double* %480, align 16
  store double %extract1408, double* %482, align 16
  store double %extract1409, double* %484, align 16
  store double %extract1410, double* %486, align 16
  store double %extract1411, double* %488, align 16
  store double %extract1412, double* %490, align 16
  store double %extract1413, double* %492, align 16
  store double %extract1414, double* %494, align 16
  store double %extract1415, double* %496, align 16
  store double %extract1416, double* %498, align 16
  store double %extract1417, double* %500, align 16
  store double %extract1418, double* %502, align 16
  store double %extract1419, double* %504, align 16
  store double %extract1420, double* %506, align 16
  %1559 = load double addrspace(3)* %119, align 8
  %temp1421 = insertelement <16 x double> undef, double %1559, i32 0
  %vector1422 = shufflevector <16 x double> %temp1421, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2348" = add nuw i64 %CurrSBIndex..4, 3584
  %"&pSB[currWI].offset2349" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2348"
  %CastToValueType2350 = bitcast i8* %"&pSB[currWI].offset2349" to <16 x double>*
  %loadedValue2351 = load <16 x double>* %CastToValueType2350, align 128
  %1560 = fmul <16 x double> %loadedValue2351, %vector1422
  %1561 = fadd <16 x double> %1513, %1560
  %extract1423 = extractelement <16 x double> %1561, i32 0
  %extract1424 = extractelement <16 x double> %1561, i32 1
  %extract1425 = extractelement <16 x double> %1561, i32 2
  %extract1426 = extractelement <16 x double> %1561, i32 3
  %extract1427 = extractelement <16 x double> %1561, i32 4
  %extract1428 = extractelement <16 x double> %1561, i32 5
  %extract1429 = extractelement <16 x double> %1561, i32 6
  %extract1430 = extractelement <16 x double> %1561, i32 7
  %extract1431 = extractelement <16 x double> %1561, i32 8
  %extract1432 = extractelement <16 x double> %1561, i32 9
  %extract1433 = extractelement <16 x double> %1561, i32 10
  %extract1434 = extractelement <16 x double> %1561, i32 11
  %extract1435 = extractelement <16 x double> %1561, i32 12
  %extract1436 = extractelement <16 x double> %1561, i32 13
  %extract1437 = extractelement <16 x double> %1561, i32 14
  %extract1438 = extractelement <16 x double> %1561, i32 15
  store double %extract1423, double* %508, align 8
  store double %extract1424, double* %510, align 8
  store double %extract1425, double* %512, align 8
  store double %extract1426, double* %514, align 8
  store double %extract1427, double* %516, align 8
  store double %extract1428, double* %518, align 8
  store double %extract1429, double* %520, align 8
  store double %extract1430, double* %522, align 8
  store double %extract1431, double* %524, align 8
  store double %extract1432, double* %526, align 8
  store double %extract1433, double* %528, align 8
  store double %extract1434, double* %530, align 8
  store double %extract1435, double* %532, align 8
  store double %extract1436, double* %534, align 8
  store double %extract1437, double* %536, align 8
  store double %extract1438, double* %538, align 8
  %1562 = load double addrspace(3)* %121, align 16
  %temp1439 = insertelement <16 x double> undef, double %1562, i32 0
  %vector1440 = shufflevector <16 x double> %temp1439, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2343" = add nuw i64 %CurrSBIndex..4, 3584
  %"&pSB[currWI].offset2344" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2343"
  %CastToValueType2345 = bitcast i8* %"&pSB[currWI].offset2344" to <16 x double>*
  %loadedValue2346 = load <16 x double>* %CastToValueType2345, align 128
  %1563 = fmul <16 x double> %loadedValue2346, %vector1440
  %1564 = fadd <16 x double> %1516, %1563
  %extract1441 = extractelement <16 x double> %1564, i32 0
  %extract1442 = extractelement <16 x double> %1564, i32 1
  %extract1443 = extractelement <16 x double> %1564, i32 2
  %extract1444 = extractelement <16 x double> %1564, i32 3
  %extract1445 = extractelement <16 x double> %1564, i32 4
  %extract1446 = extractelement <16 x double> %1564, i32 5
  %extract1447 = extractelement <16 x double> %1564, i32 6
  %extract1448 = extractelement <16 x double> %1564, i32 7
  %extract1449 = extractelement <16 x double> %1564, i32 8
  %extract1450 = extractelement <16 x double> %1564, i32 9
  %extract1451 = extractelement <16 x double> %1564, i32 10
  %extract1452 = extractelement <16 x double> %1564, i32 11
  %extract1453 = extractelement <16 x double> %1564, i32 12
  %extract1454 = extractelement <16 x double> %1564, i32 13
  %extract1455 = extractelement <16 x double> %1564, i32 14
  %extract1456 = extractelement <16 x double> %1564, i32 15
  store double %extract1441, double* %540, align 16
  store double %extract1442, double* %542, align 16
  store double %extract1443, double* %544, align 16
  store double %extract1444, double* %546, align 16
  store double %extract1445, double* %548, align 16
  store double %extract1446, double* %550, align 16
  store double %extract1447, double* %552, align 16
  store double %extract1448, double* %554, align 16
  store double %extract1449, double* %556, align 16
  store double %extract1450, double* %558, align 16
  store double %extract1451, double* %560, align 16
  store double %extract1452, double* %562, align 16
  store double %extract1453, double* %564, align 16
  store double %extract1454, double* %566, align 16
  store double %extract1455, double* %568, align 16
  store double %extract1456, double* %570, align 16
  %1565 = load double addrspace(3)* %123, align 8
  %temp1457 = insertelement <16 x double> undef, double %1565, i32 0
  %vector1458 = shufflevector <16 x double> %temp1457, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2338" = add nuw i64 %CurrSBIndex..4, 3584
  %"&pSB[currWI].offset2339" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2338"
  %CastToValueType2340 = bitcast i8* %"&pSB[currWI].offset2339" to <16 x double>*
  %loadedValue2341 = load <16 x double>* %CastToValueType2340, align 128
  %1566 = fmul <16 x double> %loadedValue2341, %vector1458
  %1567 = fadd <16 x double> %1519, %1566
  %extract1459 = extractelement <16 x double> %1567, i32 0
  %extract1460 = extractelement <16 x double> %1567, i32 1
  %extract1461 = extractelement <16 x double> %1567, i32 2
  %extract1462 = extractelement <16 x double> %1567, i32 3
  %extract1463 = extractelement <16 x double> %1567, i32 4
  %extract1464 = extractelement <16 x double> %1567, i32 5
  %extract1465 = extractelement <16 x double> %1567, i32 6
  %extract1466 = extractelement <16 x double> %1567, i32 7
  %extract1467 = extractelement <16 x double> %1567, i32 8
  %extract1468 = extractelement <16 x double> %1567, i32 9
  %extract1469 = extractelement <16 x double> %1567, i32 10
  %extract1470 = extractelement <16 x double> %1567, i32 11
  %extract1471 = extractelement <16 x double> %1567, i32 12
  %extract1472 = extractelement <16 x double> %1567, i32 13
  %extract1473 = extractelement <16 x double> %1567, i32 14
  %extract1474 = extractelement <16 x double> %1567, i32 15
  store double %extract1459, double* %572, align 8
  store double %extract1460, double* %574, align 8
  store double %extract1461, double* %576, align 8
  store double %extract1462, double* %578, align 8
  store double %extract1463, double* %580, align 8
  store double %extract1464, double* %582, align 8
  store double %extract1465, double* %584, align 8
  store double %extract1466, double* %586, align 8
  store double %extract1467, double* %588, align 8
  store double %extract1468, double* %590, align 8
  store double %extract1469, double* %592, align 8
  store double %extract1470, double* %594, align 8
  store double %extract1471, double* %596, align 8
  store double %extract1472, double* %598, align 8
  store double %extract1473, double* %600, align 8
  store double %extract1474, double* %602, align 8
  %1568 = load double addrspace(3)* %125, align 16
  %temp1475 = insertelement <16 x double> undef, double %1568, i32 0
  %vector1476 = shufflevector <16 x double> %temp1475, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2333" = add nuw i64 %CurrSBIndex..4, 3584
  %"&pSB[currWI].offset2334" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2333"
  %CastToValueType2335 = bitcast i8* %"&pSB[currWI].offset2334" to <16 x double>*
  %loadedValue2336 = load <16 x double>* %CastToValueType2335, align 128
  %1569 = fmul <16 x double> %loadedValue2336, %vector1476
  %1570 = fadd <16 x double> %1522, %1569
  %extract1477 = extractelement <16 x double> %1570, i32 0
  %extract1478 = extractelement <16 x double> %1570, i32 1
  %extract1479 = extractelement <16 x double> %1570, i32 2
  %extract1480 = extractelement <16 x double> %1570, i32 3
  %extract1481 = extractelement <16 x double> %1570, i32 4
  %extract1482 = extractelement <16 x double> %1570, i32 5
  %extract1483 = extractelement <16 x double> %1570, i32 6
  %extract1484 = extractelement <16 x double> %1570, i32 7
  %extract1485 = extractelement <16 x double> %1570, i32 8
  %extract1486 = extractelement <16 x double> %1570, i32 9
  %extract1487 = extractelement <16 x double> %1570, i32 10
  %extract1488 = extractelement <16 x double> %1570, i32 11
  %extract1489 = extractelement <16 x double> %1570, i32 12
  %extract1490 = extractelement <16 x double> %1570, i32 13
  %extract1491 = extractelement <16 x double> %1570, i32 14
  %extract1492 = extractelement <16 x double> %1570, i32 15
  store double %extract1477, double* %604, align 16
  store double %extract1478, double* %606, align 16
  store double %extract1479, double* %608, align 16
  store double %extract1480, double* %610, align 16
  store double %extract1481, double* %612, align 16
  store double %extract1482, double* %614, align 16
  store double %extract1483, double* %616, align 16
  store double %extract1484, double* %618, align 16
  store double %extract1485, double* %620, align 16
  store double %extract1486, double* %622, align 16
  store double %extract1487, double* %624, align 16
  store double %extract1488, double* %626, align 16
  store double %extract1489, double* %628, align 16
  store double %extract1490, double* %630, align 16
  store double %extract1491, double* %632, align 16
  store double %extract1492, double* %634, align 16
  %1571 = load double addrspace(3)* %127, align 8
  %temp1493 = insertelement <16 x double> undef, double %1571, i32 0
  %vector1494 = shufflevector <16 x double> %temp1493, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2328" = add nuw i64 %CurrSBIndex..4, 3584
  %"&pSB[currWI].offset2329" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2328"
  %CastToValueType2330 = bitcast i8* %"&pSB[currWI].offset2329" to <16 x double>*
  %loadedValue2331 = load <16 x double>* %CastToValueType2330, align 128
  %1572 = fmul <16 x double> %loadedValue2331, %vector1494
  %1573 = fadd <16 x double> %1525, %1572
  %extract1495 = extractelement <16 x double> %1573, i32 0
  %extract1496 = extractelement <16 x double> %1573, i32 1
  %extract1497 = extractelement <16 x double> %1573, i32 2
  %extract1498 = extractelement <16 x double> %1573, i32 3
  %extract1499 = extractelement <16 x double> %1573, i32 4
  %extract1500 = extractelement <16 x double> %1573, i32 5
  %extract1501 = extractelement <16 x double> %1573, i32 6
  %extract1502 = extractelement <16 x double> %1573, i32 7
  %extract1503 = extractelement <16 x double> %1573, i32 8
  %extract1504 = extractelement <16 x double> %1573, i32 9
  %extract1505 = extractelement <16 x double> %1573, i32 10
  %extract1506 = extractelement <16 x double> %1573, i32 11
  %extract1507 = extractelement <16 x double> %1573, i32 12
  %extract1508 = extractelement <16 x double> %1573, i32 13
  %extract1509 = extractelement <16 x double> %1573, i32 14
  %extract1510 = extractelement <16 x double> %1573, i32 15
  store double %extract1495, double* %636, align 8
  store double %extract1496, double* %638, align 8
  store double %extract1497, double* %640, align 8
  store double %extract1498, double* %642, align 8
  store double %extract1499, double* %644, align 8
  store double %extract1500, double* %646, align 8
  store double %extract1501, double* %648, align 8
  store double %extract1502, double* %650, align 8
  store double %extract1503, double* %652, align 8
  store double %extract1504, double* %654, align 8
  store double %extract1505, double* %656, align 8
  store double %extract1506, double* %658, align 8
  store double %extract1507, double* %660, align 8
  store double %extract1508, double* %662, align 8
  store double %extract1509, double* %664, align 8
  store double %extract1510, double* %666, align 8
  %"&(pSB[currWI].offset)1569" = add nuw i64 %CurrSBIndex..4, 1024
  %"&pSB[currWI].offset1570" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1569"
  %CastToValueType1571 = bitcast i8* %"&pSB[currWI].offset1570" to i32*
  %loadedValue1572 = load i32* %CastToValueType1571, align 4
  %tmp21 = add i32 %tmp18, %loadedValue1572
  %temp1511 = insertelement <16 x i32> undef, i32 %tmp21, i32 0
  %vector1512 = shufflevector <16 x i32> %temp1511, <16 x i32> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1561" = add nuw i64 %CurrSBIndex..4, 960
  %"&pSB[currWI].offset1562" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1561"
  %CastToValueType1563 = bitcast i8* %"&pSB[currWI].offset1562" to <16 x i32>*
  %loadedValue = load <16 x i32>* %CastToValueType1563, align 64
  %tmp231513 = add <16 x i32> %vector1512, %loadedValue
  %tmp261514 = add <16 x i32> %tmp231513, %vector2
  %tmp271515 = sext <16 x i32> %tmp261514 to <16 x i64>
  %"&(pSB[currWI].offset)2426" = add nuw i64 %CurrSBIndex..4, 3856
  %"&pSB[currWI].offset2427" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2426"
  %CastToValueType2428 = bitcast i8* %"&pSB[currWI].offset2427" to [16 x double]*
  %"&(pSB[currWI].offset)2498" = add nuw i64 %CurrSBIndex..4, 3984
  %"&pSB[currWI].offset2499" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2498"
  %CastToValueType2500 = bitcast i8* %"&pSB[currWI].offset2499" to [16 x double]*
  %"&(pSB[currWI].offset)2570" = add nuw i64 %CurrSBIndex..4, 4112
  %"&pSB[currWI].offset2571" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2570"
  %CastToValueType2572 = bitcast i8* %"&pSB[currWI].offset2571" to [16 x double]*
  %"&(pSB[currWI].offset)2642" = add nuw i64 %CurrSBIndex..4, 4240
  %"&pSB[currWI].offset2643" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2642"
  %CastToValueType2644 = bitcast i8* %"&pSB[currWI].offset2643" to [16 x double]*
  %"&(pSB[currWI].offset)2714" = add nuw i64 %CurrSBIndex..4, 4368
  %"&pSB[currWI].offset2715" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2714"
  %CastToValueType2716 = bitcast i8* %"&pSB[currWI].offset2715" to [16 x double]*
  %"&(pSB[currWI].offset)2786" = add nuw i64 %CurrSBIndex..4, 4496
  %"&pSB[currWI].offset2787" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2786"
  %CastToValueType2788 = bitcast i8* %"&pSB[currWI].offset2787" to [16 x double]*
  %"&(pSB[currWI].offset)2858" = add nuw i64 %CurrSBIndex..4, 4624
  %"&pSB[currWI].offset2859" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2858"
  %CastToValueType2860 = bitcast i8* %"&pSB[currWI].offset2859" to [16 x double]*
  %"&(pSB[currWI].offset)2930" = add nuw i64 %CurrSBIndex..4, 4752
  %"&pSB[currWI].offset2931" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2930"
  %CastToValueType2932 = bitcast i8* %"&pSB[currWI].offset2931" to [16 x double]*
  %"&(pSB[currWI].offset)3002" = add nuw i64 %CurrSBIndex..4, 4880
  %"&pSB[currWI].offset3003" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3002"
  %CastToValueType3004 = bitcast i8* %"&pSB[currWI].offset3003" to [16 x double]*
  %"&(pSB[currWI].offset)3074" = add nuw i64 %CurrSBIndex..4, 5008
  %"&pSB[currWI].offset3075" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3074"
  %CastToValueType3076 = bitcast i8* %"&pSB[currWI].offset3075" to [16 x double]*
  %"&(pSB[currWI].offset)3146" = add nuw i64 %CurrSBIndex..4, 5136
  %"&pSB[currWI].offset3147" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3146"
  %CastToValueType3148 = bitcast i8* %"&pSB[currWI].offset3147" to [16 x double]*
  %"&(pSB[currWI].offset)3218" = add nuw i64 %CurrSBIndex..4, 5264
  %"&pSB[currWI].offset3219" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3218"
  %CastToValueType3220 = bitcast i8* %"&pSB[currWI].offset3219" to [16 x double]*
  %"&(pSB[currWI].offset)3290" = add nuw i64 %CurrSBIndex..4, 5392
  %"&pSB[currWI].offset3291" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3290"
  %CastToValueType3292 = bitcast i8* %"&pSB[currWI].offset3291" to [16 x double]*
  %"&(pSB[currWI].offset)3362" = add nuw i64 %CurrSBIndex..4, 5520
  %"&pSB[currWI].offset3363" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3362"
  %CastToValueType3364 = bitcast i8* %"&pSB[currWI].offset3363" to [16 x double]*
  %"&(pSB[currWI].offset)3434" = add nuw i64 %CurrSBIndex..4, 5648
  %"&pSB[currWI].offset3435" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3434"
  %CastToValueType3436 = bitcast i8* %"&pSB[currWI].offset3435" to [16 x double]*
  %"&(pSB[currWI].offset)3506" = add nuw i64 %CurrSBIndex..4, 5776
  %"&pSB[currWI].offset3507" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3506"
  %CastToValueType3508 = bitcast i8* %"&pSB[currWI].offset3507" to [16 x double]*
  br label %1574

; <label>:1574                                    ; preds = %._crit_edge97, %SyncBB4617
  %vectorPHI1516 = phi <16 x double> [ %1528, %SyncBB4617 ], [ %temp.vect1557, %._crit_edge97 ]
  %indvar = phi i64 [ 0, %SyncBB4617 ], [ %indvar.next, %._crit_edge97 ]
  %tmp15 = mul i64 %tmp, %indvar
  %temp1517 = insertelement <16 x i64> undef, i64 %tmp15, i32 0
  %vector1518 = shufflevector <16 x i64> %temp1517, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp281519 = add <16 x i64> %tmp271515, %vector1518
  %extract1520 = extractelement <16 x i64> %tmp281519, i32 0
  %1575 = getelementptr double addrspace(1)* %C, i64 %extract1520
  %1576 = fmul <16 x double> %vectorPHI1516, %vector1537
  %ptrTypeCast1538 = bitcast double addrspace(1)* %1575 to <16 x double> addrspace(1)*
  %1577 = load <16 x double> addrspace(1)* %ptrTypeCast1538, align 8
  %1578 = fmul <16 x double> %1577, %vector1540
  %1579 = fadd <16 x double> %1576, %1578
  %ptrTypeCast1541 = bitcast double addrspace(1)* %1575 to <16 x double> addrspace(1)*
  store <16 x double> %1579, <16 x double> addrspace(1)* %ptrTypeCast1541, align 8
  %indvar.next = add i64 %indvar, 1
  %exitcond = icmp eq i64 %indvar.next, 16
  br i1 %exitcond, label %._crit_edge, label %._crit_edge97

._crit_edge97:                                    ; preds = %1574
  %1580 = getelementptr [16 x double]* %CastToValueType2428, i64 0, i64 %indvar.next
  %1581 = getelementptr [16 x double]* %CastToValueType2500, i64 0, i64 %indvar.next
  %1582 = getelementptr [16 x double]* %CastToValueType2572, i64 0, i64 %indvar.next
  %1583 = getelementptr [16 x double]* %CastToValueType2644, i64 0, i64 %indvar.next
  %1584 = getelementptr [16 x double]* %CastToValueType2716, i64 0, i64 %indvar.next
  %1585 = getelementptr [16 x double]* %CastToValueType2788, i64 0, i64 %indvar.next
  %1586 = getelementptr [16 x double]* %CastToValueType2860, i64 0, i64 %indvar.next
  %1587 = getelementptr [16 x double]* %CastToValueType2932, i64 0, i64 %indvar.next
  %1588 = getelementptr [16 x double]* %CastToValueType3004, i64 0, i64 %indvar.next
  %1589 = getelementptr [16 x double]* %CastToValueType3076, i64 0, i64 %indvar.next
  %1590 = getelementptr [16 x double]* %CastToValueType3148, i64 0, i64 %indvar.next
  %1591 = getelementptr [16 x double]* %CastToValueType3220, i64 0, i64 %indvar.next
  %1592 = getelementptr [16 x double]* %CastToValueType3292, i64 0, i64 %indvar.next
  %1593 = getelementptr [16 x double]* %CastToValueType3364, i64 0, i64 %indvar.next
  %1594 = getelementptr [16 x double]* %CastToValueType3436, i64 0, i64 %indvar.next
  %1595 = getelementptr [16 x double]* %CastToValueType3508, i64 0, i64 %indvar.next
  %1596 = load double* %1580, align 8
  %1597 = load double* %1581, align 8
  %1598 = load double* %1582, align 8
  %1599 = load double* %1583, align 8
  %1600 = load double* %1584, align 8
  %1601 = load double* %1585, align 8
  %1602 = load double* %1586, align 8
  %1603 = load double* %1587, align 8
  %1604 = load double* %1588, align 8
  %1605 = load double* %1589, align 8
  %1606 = load double* %1590, align 8
  %1607 = load double* %1591, align 8
  %1608 = load double* %1592, align 8
  %1609 = load double* %1593, align 8
  %1610 = load double* %1594, align 8
  %1611 = load double* %1595, align 8
  %temp.vect1542 = insertelement <16 x double> undef, double %1596, i32 0
  %temp.vect1543 = insertelement <16 x double> %temp.vect1542, double %1597, i32 1
  %temp.vect1544 = insertelement <16 x double> %temp.vect1543, double %1598, i32 2
  %temp.vect1545 = insertelement <16 x double> %temp.vect1544, double %1599, i32 3
  %temp.vect1546 = insertelement <16 x double> %temp.vect1545, double %1600, i32 4
  %temp.vect1547 = insertelement <16 x double> %temp.vect1546, double %1601, i32 5
  %temp.vect1548 = insertelement <16 x double> %temp.vect1547, double %1602, i32 6
  %temp.vect1549 = insertelement <16 x double> %temp.vect1548, double %1603, i32 7
  %temp.vect1550 = insertelement <16 x double> %temp.vect1549, double %1604, i32 8
  %temp.vect1551 = insertelement <16 x double> %temp.vect1550, double %1605, i32 9
  %temp.vect1552 = insertelement <16 x double> %temp.vect1551, double %1606, i32 10
  %temp.vect1553 = insertelement <16 x double> %temp.vect1552, double %1607, i32 11
  %temp.vect1554 = insertelement <16 x double> %temp.vect1553, double %1608, i32 12
  %temp.vect1555 = insertelement <16 x double> %temp.vect1554, double %1609, i32 13
  %temp.vect1556 = insertelement <16 x double> %temp.vect1555, double %1610, i32 14
  %temp.vect1557 = insertelement <16 x double> %temp.vect1556, double %1611, i32 15
  br label %1574

._crit_edge:                                      ; preds = %1574
  %check.WI.iter4639 = icmp ult i64 %CurrWI..4, %iterCount
  br i1 %check.WI.iter4639, label %thenBB4636, label %SyncBB4619

thenBB4636:                                       ; preds = %._crit_edge
  %"CurrWI++4640" = add nuw i64 %CurrWI..4, 1
  %"loadedCurrSB+Stride4642" = add nuw i64 %CurrSBIndex..4, 12032
  br label %SyncBB4617

SyncBB4619:                                       ; preds = %._crit_edge
  ret void
}

define void @____Vectorized_.sgemmNN_separated_args(double addrspace(1)* nocapture %A, i32 %lda, double addrspace(1)* nocapture %B, i32 %ldb, double addrspace(1)* nocapture %C, i32 %ldc, i32 %k, double %alpha, double %beta, i8 addrspace(3)* %pLocalMem, %struct.WorkDim* %pWorkDim, i64* %pWGId, %struct.PaddedDimId* %pBaseGlbId, %struct.PaddedDimId* %pLocalIds, i64* %contextpointer, i64 %iterCount, i8* %pSpecialBuf, i64* %pCurrWI) nounwind alwaysinline {
.preheader19:
  %0 = bitcast i8 addrspace(3)* %pLocalMem to [16 x [17 x double]] addrspace(3)*
  %1 = bitcast i8 addrspace(3)* %pLocalMem to double addrspace(3)*
  %2 = getelementptr i8 addrspace(3)* %pLocalMem, i64 8
  %3 = bitcast i8 addrspace(3)* %2 to double addrspace(3)*
  %4 = getelementptr i8 addrspace(3)* %pLocalMem, i64 16
  %5 = bitcast i8 addrspace(3)* %4 to double addrspace(3)*
  %6 = getelementptr i8 addrspace(3)* %pLocalMem, i64 24
  %7 = bitcast i8 addrspace(3)* %6 to double addrspace(3)*
  %8 = getelementptr i8 addrspace(3)* %pLocalMem, i64 32
  %9 = bitcast i8 addrspace(3)* %8 to double addrspace(3)*
  %10 = getelementptr i8 addrspace(3)* %pLocalMem, i64 40
  %11 = bitcast i8 addrspace(3)* %10 to double addrspace(3)*
  %12 = getelementptr i8 addrspace(3)* %pLocalMem, i64 48
  %13 = bitcast i8 addrspace(3)* %12 to double addrspace(3)*
  %14 = getelementptr i8 addrspace(3)* %pLocalMem, i64 56
  %15 = bitcast i8 addrspace(3)* %14 to double addrspace(3)*
  %16 = getelementptr i8 addrspace(3)* %pLocalMem, i64 64
  %17 = bitcast i8 addrspace(3)* %16 to double addrspace(3)*
  %18 = getelementptr i8 addrspace(3)* %pLocalMem, i64 72
  %19 = bitcast i8 addrspace(3)* %18 to double addrspace(3)*
  %20 = getelementptr i8 addrspace(3)* %pLocalMem, i64 80
  %21 = bitcast i8 addrspace(3)* %20 to double addrspace(3)*
  %22 = getelementptr i8 addrspace(3)* %pLocalMem, i64 88
  %23 = bitcast i8 addrspace(3)* %22 to double addrspace(3)*
  %24 = getelementptr i8 addrspace(3)* %pLocalMem, i64 96
  %25 = bitcast i8 addrspace(3)* %24 to double addrspace(3)*
  %26 = getelementptr i8 addrspace(3)* %pLocalMem, i64 104
  %27 = bitcast i8 addrspace(3)* %26 to double addrspace(3)*
  %28 = getelementptr i8 addrspace(3)* %pLocalMem, i64 112
  %29 = bitcast i8 addrspace(3)* %28 to double addrspace(3)*
  %30 = getelementptr i8 addrspace(3)* %pLocalMem, i64 120
  %31 = bitcast i8 addrspace(3)* %30 to double addrspace(3)*
  %32 = getelementptr i8 addrspace(3)* %pLocalMem, i64 136
  %33 = bitcast i8 addrspace(3)* %32 to double addrspace(3)*
  %34 = getelementptr i8 addrspace(3)* %pLocalMem, i64 144
  %35 = bitcast i8 addrspace(3)* %34 to double addrspace(3)*
  %36 = getelementptr i8 addrspace(3)* %pLocalMem, i64 152
  %37 = bitcast i8 addrspace(3)* %36 to double addrspace(3)*
  %38 = getelementptr i8 addrspace(3)* %pLocalMem, i64 160
  %39 = bitcast i8 addrspace(3)* %38 to double addrspace(3)*
  %40 = getelementptr i8 addrspace(3)* %pLocalMem, i64 168
  %41 = bitcast i8 addrspace(3)* %40 to double addrspace(3)*
  %42 = getelementptr i8 addrspace(3)* %pLocalMem, i64 176
  %43 = bitcast i8 addrspace(3)* %42 to double addrspace(3)*
  %44 = getelementptr i8 addrspace(3)* %pLocalMem, i64 184
  %45 = bitcast i8 addrspace(3)* %44 to double addrspace(3)*
  %46 = getelementptr i8 addrspace(3)* %pLocalMem, i64 192
  %47 = bitcast i8 addrspace(3)* %46 to double addrspace(3)*
  %48 = getelementptr i8 addrspace(3)* %pLocalMem, i64 200
  %49 = bitcast i8 addrspace(3)* %48 to double addrspace(3)*
  %50 = getelementptr i8 addrspace(3)* %pLocalMem, i64 208
  %51 = bitcast i8 addrspace(3)* %50 to double addrspace(3)*
  %52 = getelementptr i8 addrspace(3)* %pLocalMem, i64 216
  %53 = bitcast i8 addrspace(3)* %52 to double addrspace(3)*
  %54 = getelementptr i8 addrspace(3)* %pLocalMem, i64 224
  %55 = bitcast i8 addrspace(3)* %54 to double addrspace(3)*
  %56 = getelementptr i8 addrspace(3)* %pLocalMem, i64 232
  %57 = bitcast i8 addrspace(3)* %56 to double addrspace(3)*
  %58 = getelementptr i8 addrspace(3)* %pLocalMem, i64 240
  %59 = bitcast i8 addrspace(3)* %58 to double addrspace(3)*
  %60 = getelementptr i8 addrspace(3)* %pLocalMem, i64 248
  %61 = bitcast i8 addrspace(3)* %60 to double addrspace(3)*
  %62 = getelementptr i8 addrspace(3)* %pLocalMem, i64 256
  %63 = bitcast i8 addrspace(3)* %62 to double addrspace(3)*
  %64 = getelementptr i8 addrspace(3)* %pLocalMem, i64 272
  %65 = bitcast i8 addrspace(3)* %64 to double addrspace(3)*
  %66 = getelementptr i8 addrspace(3)* %pLocalMem, i64 280
  %67 = bitcast i8 addrspace(3)* %66 to double addrspace(3)*
  %68 = getelementptr i8 addrspace(3)* %pLocalMem, i64 288
  %69 = bitcast i8 addrspace(3)* %68 to double addrspace(3)*
  %70 = getelementptr i8 addrspace(3)* %pLocalMem, i64 296
  %71 = bitcast i8 addrspace(3)* %70 to double addrspace(3)*
  %72 = getelementptr i8 addrspace(3)* %pLocalMem, i64 304
  %73 = bitcast i8 addrspace(3)* %72 to double addrspace(3)*
  %74 = getelementptr i8 addrspace(3)* %pLocalMem, i64 312
  %75 = bitcast i8 addrspace(3)* %74 to double addrspace(3)*
  %76 = getelementptr i8 addrspace(3)* %pLocalMem, i64 320
  %77 = bitcast i8 addrspace(3)* %76 to double addrspace(3)*
  %78 = getelementptr i8 addrspace(3)* %pLocalMem, i64 328
  %79 = bitcast i8 addrspace(3)* %78 to double addrspace(3)*
  %80 = getelementptr i8 addrspace(3)* %pLocalMem, i64 336
  %81 = bitcast i8 addrspace(3)* %80 to double addrspace(3)*
  %82 = getelementptr i8 addrspace(3)* %pLocalMem, i64 344
  %83 = bitcast i8 addrspace(3)* %82 to double addrspace(3)*
  %84 = getelementptr i8 addrspace(3)* %pLocalMem, i64 352
  %85 = bitcast i8 addrspace(3)* %84 to double addrspace(3)*
  %86 = getelementptr i8 addrspace(3)* %pLocalMem, i64 360
  %87 = bitcast i8 addrspace(3)* %86 to double addrspace(3)*
  %88 = getelementptr i8 addrspace(3)* %pLocalMem, i64 368
  %89 = bitcast i8 addrspace(3)* %88 to double addrspace(3)*
  %90 = getelementptr i8 addrspace(3)* %pLocalMem, i64 376
  %91 = bitcast i8 addrspace(3)* %90 to double addrspace(3)*
  %92 = getelementptr i8 addrspace(3)* %pLocalMem, i64 384
  %93 = bitcast i8 addrspace(3)* %92 to double addrspace(3)*
  %94 = getelementptr i8 addrspace(3)* %pLocalMem, i64 392
  %95 = bitcast i8 addrspace(3)* %94 to double addrspace(3)*
  %96 = getelementptr i8 addrspace(3)* %pLocalMem, i64 408
  %97 = bitcast i8 addrspace(3)* %96 to double addrspace(3)*
  %98 = getelementptr i8 addrspace(3)* %pLocalMem, i64 416
  %99 = bitcast i8 addrspace(3)* %98 to double addrspace(3)*
  %100 = getelementptr i8 addrspace(3)* %pLocalMem, i64 424
  %101 = bitcast i8 addrspace(3)* %100 to double addrspace(3)*
  %102 = getelementptr i8 addrspace(3)* %pLocalMem, i64 432
  %103 = bitcast i8 addrspace(3)* %102 to double addrspace(3)*
  %104 = getelementptr i8 addrspace(3)* %pLocalMem, i64 440
  %105 = bitcast i8 addrspace(3)* %104 to double addrspace(3)*
  %106 = getelementptr i8 addrspace(3)* %pLocalMem, i64 448
  %107 = bitcast i8 addrspace(3)* %106 to double addrspace(3)*
  %108 = getelementptr i8 addrspace(3)* %pLocalMem, i64 456
  %109 = bitcast i8 addrspace(3)* %108 to double addrspace(3)*
  %110 = getelementptr i8 addrspace(3)* %pLocalMem, i64 464
  %111 = bitcast i8 addrspace(3)* %110 to double addrspace(3)*
  %112 = getelementptr i8 addrspace(3)* %pLocalMem, i64 472
  %113 = bitcast i8 addrspace(3)* %112 to double addrspace(3)*
  %114 = getelementptr i8 addrspace(3)* %pLocalMem, i64 480
  %115 = bitcast i8 addrspace(3)* %114 to double addrspace(3)*
  %116 = getelementptr i8 addrspace(3)* %pLocalMem, i64 488
  %117 = bitcast i8 addrspace(3)* %116 to double addrspace(3)*
  %118 = getelementptr i8 addrspace(3)* %pLocalMem, i64 496
  %119 = bitcast i8 addrspace(3)* %118 to double addrspace(3)*
  %120 = getelementptr i8 addrspace(3)* %pLocalMem, i64 504
  %121 = bitcast i8 addrspace(3)* %120 to double addrspace(3)*
  %122 = getelementptr i8 addrspace(3)* %pLocalMem, i64 512
  %123 = bitcast i8 addrspace(3)* %122 to double addrspace(3)*
  %124 = getelementptr i8 addrspace(3)* %pLocalMem, i64 520
  %125 = bitcast i8 addrspace(3)* %124 to double addrspace(3)*
  %126 = getelementptr i8 addrspace(3)* %pLocalMem, i64 528
  %127 = bitcast i8 addrspace(3)* %126 to double addrspace(3)*
  %128 = getelementptr i8 addrspace(3)* %pLocalMem, i64 544
  %129 = bitcast i8 addrspace(3)* %128 to double addrspace(3)*
  %130 = getelementptr i8 addrspace(3)* %pLocalMem, i64 552
  %131 = bitcast i8 addrspace(3)* %130 to double addrspace(3)*
  %132 = getelementptr i8 addrspace(3)* %pLocalMem, i64 560
  %133 = bitcast i8 addrspace(3)* %132 to double addrspace(3)*
  %134 = getelementptr i8 addrspace(3)* %pLocalMem, i64 568
  %135 = bitcast i8 addrspace(3)* %134 to double addrspace(3)*
  %136 = getelementptr i8 addrspace(3)* %pLocalMem, i64 576
  %137 = bitcast i8 addrspace(3)* %136 to double addrspace(3)*
  %138 = getelementptr i8 addrspace(3)* %pLocalMem, i64 584
  %139 = bitcast i8 addrspace(3)* %138 to double addrspace(3)*
  %140 = getelementptr i8 addrspace(3)* %pLocalMem, i64 592
  %141 = bitcast i8 addrspace(3)* %140 to double addrspace(3)*
  %142 = getelementptr i8 addrspace(3)* %pLocalMem, i64 600
  %143 = bitcast i8 addrspace(3)* %142 to double addrspace(3)*
  %144 = getelementptr i8 addrspace(3)* %pLocalMem, i64 608
  %145 = bitcast i8 addrspace(3)* %144 to double addrspace(3)*
  %146 = getelementptr i8 addrspace(3)* %pLocalMem, i64 616
  %147 = bitcast i8 addrspace(3)* %146 to double addrspace(3)*
  %148 = getelementptr i8 addrspace(3)* %pLocalMem, i64 624
  %149 = bitcast i8 addrspace(3)* %148 to double addrspace(3)*
  %150 = getelementptr i8 addrspace(3)* %pLocalMem, i64 632
  %151 = bitcast i8 addrspace(3)* %150 to double addrspace(3)*
  %152 = getelementptr i8 addrspace(3)* %pLocalMem, i64 640
  %153 = bitcast i8 addrspace(3)* %152 to double addrspace(3)*
  %154 = getelementptr i8 addrspace(3)* %pLocalMem, i64 648
  %155 = bitcast i8 addrspace(3)* %154 to double addrspace(3)*
  %156 = getelementptr i8 addrspace(3)* %pLocalMem, i64 656
  %157 = bitcast i8 addrspace(3)* %156 to double addrspace(3)*
  %158 = getelementptr i8 addrspace(3)* %pLocalMem, i64 664
  %159 = bitcast i8 addrspace(3)* %158 to double addrspace(3)*
  %160 = getelementptr i8 addrspace(3)* %pLocalMem, i64 680
  %161 = bitcast i8 addrspace(3)* %160 to double addrspace(3)*
  %162 = getelementptr i8 addrspace(3)* %pLocalMem, i64 688
  %163 = bitcast i8 addrspace(3)* %162 to double addrspace(3)*
  %164 = getelementptr i8 addrspace(3)* %pLocalMem, i64 696
  %165 = bitcast i8 addrspace(3)* %164 to double addrspace(3)*
  %166 = getelementptr i8 addrspace(3)* %pLocalMem, i64 704
  %167 = bitcast i8 addrspace(3)* %166 to double addrspace(3)*
  %168 = getelementptr i8 addrspace(3)* %pLocalMem, i64 712
  %169 = bitcast i8 addrspace(3)* %168 to double addrspace(3)*
  %170 = getelementptr i8 addrspace(3)* %pLocalMem, i64 720
  %171 = bitcast i8 addrspace(3)* %170 to double addrspace(3)*
  %172 = getelementptr i8 addrspace(3)* %pLocalMem, i64 728
  %173 = bitcast i8 addrspace(3)* %172 to double addrspace(3)*
  %174 = getelementptr i8 addrspace(3)* %pLocalMem, i64 736
  %175 = bitcast i8 addrspace(3)* %174 to double addrspace(3)*
  %176 = getelementptr i8 addrspace(3)* %pLocalMem, i64 744
  %177 = bitcast i8 addrspace(3)* %176 to double addrspace(3)*
  %178 = getelementptr i8 addrspace(3)* %pLocalMem, i64 752
  %179 = bitcast i8 addrspace(3)* %178 to double addrspace(3)*
  %180 = getelementptr i8 addrspace(3)* %pLocalMem, i64 760
  %181 = bitcast i8 addrspace(3)* %180 to double addrspace(3)*
  %182 = getelementptr i8 addrspace(3)* %pLocalMem, i64 768
  %183 = bitcast i8 addrspace(3)* %182 to double addrspace(3)*
  %184 = getelementptr i8 addrspace(3)* %pLocalMem, i64 776
  %185 = bitcast i8 addrspace(3)* %184 to double addrspace(3)*
  %186 = getelementptr i8 addrspace(3)* %pLocalMem, i64 784
  %187 = bitcast i8 addrspace(3)* %186 to double addrspace(3)*
  %188 = getelementptr i8 addrspace(3)* %pLocalMem, i64 792
  %189 = bitcast i8 addrspace(3)* %188 to double addrspace(3)*
  %190 = getelementptr i8 addrspace(3)* %pLocalMem, i64 800
  %191 = bitcast i8 addrspace(3)* %190 to double addrspace(3)*
  %192 = getelementptr i8 addrspace(3)* %pLocalMem, i64 816
  %193 = bitcast i8 addrspace(3)* %192 to double addrspace(3)*
  %194 = getelementptr i8 addrspace(3)* %pLocalMem, i64 824
  %195 = bitcast i8 addrspace(3)* %194 to double addrspace(3)*
  %196 = getelementptr i8 addrspace(3)* %pLocalMem, i64 832
  %197 = bitcast i8 addrspace(3)* %196 to double addrspace(3)*
  %198 = getelementptr i8 addrspace(3)* %pLocalMem, i64 840
  %199 = bitcast i8 addrspace(3)* %198 to double addrspace(3)*
  %200 = getelementptr i8 addrspace(3)* %pLocalMem, i64 848
  %201 = bitcast i8 addrspace(3)* %200 to double addrspace(3)*
  %202 = getelementptr i8 addrspace(3)* %pLocalMem, i64 856
  %203 = bitcast i8 addrspace(3)* %202 to double addrspace(3)*
  %204 = getelementptr i8 addrspace(3)* %pLocalMem, i64 864
  %205 = bitcast i8 addrspace(3)* %204 to double addrspace(3)*
  %206 = getelementptr i8 addrspace(3)* %pLocalMem, i64 872
  %207 = bitcast i8 addrspace(3)* %206 to double addrspace(3)*
  %208 = getelementptr i8 addrspace(3)* %pLocalMem, i64 880
  %209 = bitcast i8 addrspace(3)* %208 to double addrspace(3)*
  %210 = getelementptr i8 addrspace(3)* %pLocalMem, i64 888
  %211 = bitcast i8 addrspace(3)* %210 to double addrspace(3)*
  %212 = getelementptr i8 addrspace(3)* %pLocalMem, i64 896
  %213 = bitcast i8 addrspace(3)* %212 to double addrspace(3)*
  %214 = getelementptr i8 addrspace(3)* %pLocalMem, i64 904
  %215 = bitcast i8 addrspace(3)* %214 to double addrspace(3)*
  %216 = getelementptr i8 addrspace(3)* %pLocalMem, i64 912
  %217 = bitcast i8 addrspace(3)* %216 to double addrspace(3)*
  %218 = getelementptr i8 addrspace(3)* %pLocalMem, i64 920
  %219 = bitcast i8 addrspace(3)* %218 to double addrspace(3)*
  %220 = getelementptr i8 addrspace(3)* %pLocalMem, i64 928
  %221 = bitcast i8 addrspace(3)* %220 to double addrspace(3)*
  %222 = getelementptr i8 addrspace(3)* %pLocalMem, i64 936
  %223 = bitcast i8 addrspace(3)* %222 to double addrspace(3)*
  %224 = getelementptr i8 addrspace(3)* %pLocalMem, i64 952
  %225 = bitcast i8 addrspace(3)* %224 to double addrspace(3)*
  %226 = getelementptr i8 addrspace(3)* %pLocalMem, i64 960
  %227 = bitcast i8 addrspace(3)* %226 to double addrspace(3)*
  %228 = getelementptr i8 addrspace(3)* %pLocalMem, i64 968
  %229 = bitcast i8 addrspace(3)* %228 to double addrspace(3)*
  %230 = getelementptr i8 addrspace(3)* %pLocalMem, i64 976
  %231 = bitcast i8 addrspace(3)* %230 to double addrspace(3)*
  %232 = getelementptr i8 addrspace(3)* %pLocalMem, i64 984
  %233 = bitcast i8 addrspace(3)* %232 to double addrspace(3)*
  %234 = getelementptr i8 addrspace(3)* %pLocalMem, i64 992
  %235 = bitcast i8 addrspace(3)* %234 to double addrspace(3)*
  %236 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1000
  %237 = bitcast i8 addrspace(3)* %236 to double addrspace(3)*
  %238 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1008
  %239 = bitcast i8 addrspace(3)* %238 to double addrspace(3)*
  %240 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1016
  %241 = bitcast i8 addrspace(3)* %240 to double addrspace(3)*
  %242 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1024
  %243 = bitcast i8 addrspace(3)* %242 to double addrspace(3)*
  %244 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1032
  %245 = bitcast i8 addrspace(3)* %244 to double addrspace(3)*
  %246 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1040
  %247 = bitcast i8 addrspace(3)* %246 to double addrspace(3)*
  %248 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1048
  %249 = bitcast i8 addrspace(3)* %248 to double addrspace(3)*
  %250 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1056
  %251 = bitcast i8 addrspace(3)* %250 to double addrspace(3)*
  %252 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1064
  %253 = bitcast i8 addrspace(3)* %252 to double addrspace(3)*
  %254 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1072
  %255 = bitcast i8 addrspace(3)* %254 to double addrspace(3)*
  %256 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1088
  %257 = bitcast i8 addrspace(3)* %256 to double addrspace(3)*
  %258 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1096
  %259 = bitcast i8 addrspace(3)* %258 to double addrspace(3)*
  %260 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1104
  %261 = bitcast i8 addrspace(3)* %260 to double addrspace(3)*
  %262 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1112
  %263 = bitcast i8 addrspace(3)* %262 to double addrspace(3)*
  %264 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1120
  %265 = bitcast i8 addrspace(3)* %264 to double addrspace(3)*
  %266 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1128
  %267 = bitcast i8 addrspace(3)* %266 to double addrspace(3)*
  %268 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1136
  %269 = bitcast i8 addrspace(3)* %268 to double addrspace(3)*
  %270 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1144
  %271 = bitcast i8 addrspace(3)* %270 to double addrspace(3)*
  %272 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1152
  %273 = bitcast i8 addrspace(3)* %272 to double addrspace(3)*
  %274 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1160
  %275 = bitcast i8 addrspace(3)* %274 to double addrspace(3)*
  %276 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1168
  %277 = bitcast i8 addrspace(3)* %276 to double addrspace(3)*
  %278 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1176
  %279 = bitcast i8 addrspace(3)* %278 to double addrspace(3)*
  %280 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1184
  %281 = bitcast i8 addrspace(3)* %280 to double addrspace(3)*
  %282 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1192
  %283 = bitcast i8 addrspace(3)* %282 to double addrspace(3)*
  %284 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1200
  %285 = bitcast i8 addrspace(3)* %284 to double addrspace(3)*
  %286 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1208
  %287 = bitcast i8 addrspace(3)* %286 to double addrspace(3)*
  %288 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1224
  %289 = bitcast i8 addrspace(3)* %288 to double addrspace(3)*
  %290 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1232
  %291 = bitcast i8 addrspace(3)* %290 to double addrspace(3)*
  %292 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1240
  %293 = bitcast i8 addrspace(3)* %292 to double addrspace(3)*
  %294 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1248
  %295 = bitcast i8 addrspace(3)* %294 to double addrspace(3)*
  %296 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1256
  %297 = bitcast i8 addrspace(3)* %296 to double addrspace(3)*
  %298 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1264
  %299 = bitcast i8 addrspace(3)* %298 to double addrspace(3)*
  %300 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1272
  %301 = bitcast i8 addrspace(3)* %300 to double addrspace(3)*
  %302 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1280
  %303 = bitcast i8 addrspace(3)* %302 to double addrspace(3)*
  %304 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1288
  %305 = bitcast i8 addrspace(3)* %304 to double addrspace(3)*
  %306 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1296
  %307 = bitcast i8 addrspace(3)* %306 to double addrspace(3)*
  %308 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1304
  %309 = bitcast i8 addrspace(3)* %308 to double addrspace(3)*
  %310 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1312
  %311 = bitcast i8 addrspace(3)* %310 to double addrspace(3)*
  %312 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1320
  %313 = bitcast i8 addrspace(3)* %312 to double addrspace(3)*
  %314 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1328
  %315 = bitcast i8 addrspace(3)* %314 to double addrspace(3)*
  %316 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1336
  %317 = bitcast i8 addrspace(3)* %316 to double addrspace(3)*
  %318 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1344
  %319 = bitcast i8 addrspace(3)* %318 to double addrspace(3)*
  %320 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1360
  %321 = bitcast i8 addrspace(3)* %320 to double addrspace(3)*
  %322 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1368
  %323 = bitcast i8 addrspace(3)* %322 to double addrspace(3)*
  %324 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1376
  %325 = bitcast i8 addrspace(3)* %324 to double addrspace(3)*
  %326 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1384
  %327 = bitcast i8 addrspace(3)* %326 to double addrspace(3)*
  %328 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1392
  %329 = bitcast i8 addrspace(3)* %328 to double addrspace(3)*
  %330 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1400
  %331 = bitcast i8 addrspace(3)* %330 to double addrspace(3)*
  %332 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1408
  %333 = bitcast i8 addrspace(3)* %332 to double addrspace(3)*
  %334 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1416
  %335 = bitcast i8 addrspace(3)* %334 to double addrspace(3)*
  %336 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1424
  %337 = bitcast i8 addrspace(3)* %336 to double addrspace(3)*
  %338 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1432
  %339 = bitcast i8 addrspace(3)* %338 to double addrspace(3)*
  %340 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1440
  %341 = bitcast i8 addrspace(3)* %340 to double addrspace(3)*
  %342 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1448
  %343 = bitcast i8 addrspace(3)* %342 to double addrspace(3)*
  %344 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1456
  %345 = bitcast i8 addrspace(3)* %344 to double addrspace(3)*
  %346 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1464
  %347 = bitcast i8 addrspace(3)* %346 to double addrspace(3)*
  %348 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1472
  %349 = bitcast i8 addrspace(3)* %348 to double addrspace(3)*
  %350 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1480
  %351 = bitcast i8 addrspace(3)* %350 to double addrspace(3)*
  %352 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1496
  %353 = bitcast i8 addrspace(3)* %352 to double addrspace(3)*
  %354 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1504
  %355 = bitcast i8 addrspace(3)* %354 to double addrspace(3)*
  %356 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1512
  %357 = bitcast i8 addrspace(3)* %356 to double addrspace(3)*
  %358 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1520
  %359 = bitcast i8 addrspace(3)* %358 to double addrspace(3)*
  %360 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1528
  %361 = bitcast i8 addrspace(3)* %360 to double addrspace(3)*
  %362 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1536
  %363 = bitcast i8 addrspace(3)* %362 to double addrspace(3)*
  %364 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1544
  %365 = bitcast i8 addrspace(3)* %364 to double addrspace(3)*
  %366 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1552
  %367 = bitcast i8 addrspace(3)* %366 to double addrspace(3)*
  %368 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1560
  %369 = bitcast i8 addrspace(3)* %368 to double addrspace(3)*
  %370 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1568
  %371 = bitcast i8 addrspace(3)* %370 to double addrspace(3)*
  %372 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1576
  %373 = bitcast i8 addrspace(3)* %372 to double addrspace(3)*
  %374 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1584
  %375 = bitcast i8 addrspace(3)* %374 to double addrspace(3)*
  %376 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1592
  %377 = bitcast i8 addrspace(3)* %376 to double addrspace(3)*
  %378 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1600
  %379 = bitcast i8 addrspace(3)* %378 to double addrspace(3)*
  %380 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1608
  %381 = bitcast i8 addrspace(3)* %380 to double addrspace(3)*
  %382 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1616
  %383 = bitcast i8 addrspace(3)* %382 to double addrspace(3)*
  %384 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1632
  %385 = bitcast i8 addrspace(3)* %384 to double addrspace(3)*
  %386 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1640
  %387 = bitcast i8 addrspace(3)* %386 to double addrspace(3)*
  %388 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1648
  %389 = bitcast i8 addrspace(3)* %388 to double addrspace(3)*
  %390 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1656
  %391 = bitcast i8 addrspace(3)* %390 to double addrspace(3)*
  %392 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1664
  %393 = bitcast i8 addrspace(3)* %392 to double addrspace(3)*
  %394 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1672
  %395 = bitcast i8 addrspace(3)* %394 to double addrspace(3)*
  %396 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1680
  %397 = bitcast i8 addrspace(3)* %396 to double addrspace(3)*
  %398 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1688
  %399 = bitcast i8 addrspace(3)* %398 to double addrspace(3)*
  %400 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1696
  %401 = bitcast i8 addrspace(3)* %400 to double addrspace(3)*
  %402 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1704
  %403 = bitcast i8 addrspace(3)* %402 to double addrspace(3)*
  %404 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1712
  %405 = bitcast i8 addrspace(3)* %404 to double addrspace(3)*
  %406 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1720
  %407 = bitcast i8 addrspace(3)* %406 to double addrspace(3)*
  %408 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1728
  %409 = bitcast i8 addrspace(3)* %408 to double addrspace(3)*
  %410 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1736
  %411 = bitcast i8 addrspace(3)* %410 to double addrspace(3)*
  %412 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1744
  %413 = bitcast i8 addrspace(3)* %412 to double addrspace(3)*
  %414 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1752
  %415 = bitcast i8 addrspace(3)* %414 to double addrspace(3)*
  %416 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1768
  %417 = bitcast i8 addrspace(3)* %416 to double addrspace(3)*
  %418 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1776
  %419 = bitcast i8 addrspace(3)* %418 to double addrspace(3)*
  %420 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1784
  %421 = bitcast i8 addrspace(3)* %420 to double addrspace(3)*
  %422 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1792
  %423 = bitcast i8 addrspace(3)* %422 to double addrspace(3)*
  %424 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1800
  %425 = bitcast i8 addrspace(3)* %424 to double addrspace(3)*
  %426 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1808
  %427 = bitcast i8 addrspace(3)* %426 to double addrspace(3)*
  %428 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1816
  %429 = bitcast i8 addrspace(3)* %428 to double addrspace(3)*
  %430 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1824
  %431 = bitcast i8 addrspace(3)* %430 to double addrspace(3)*
  %432 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1832
  %433 = bitcast i8 addrspace(3)* %432 to double addrspace(3)*
  %434 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1840
  %435 = bitcast i8 addrspace(3)* %434 to double addrspace(3)*
  %436 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1848
  %437 = bitcast i8 addrspace(3)* %436 to double addrspace(3)*
  %438 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1856
  %439 = bitcast i8 addrspace(3)* %438 to double addrspace(3)*
  %440 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1864
  %441 = bitcast i8 addrspace(3)* %440 to double addrspace(3)*
  %442 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1872
  %443 = bitcast i8 addrspace(3)* %442 to double addrspace(3)*
  %444 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1880
  %445 = bitcast i8 addrspace(3)* %444 to double addrspace(3)*
  %446 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1888
  %447 = bitcast i8 addrspace(3)* %446 to double addrspace(3)*
  %448 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1904
  %449 = bitcast i8 addrspace(3)* %448 to double addrspace(3)*
  %450 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1912
  %451 = bitcast i8 addrspace(3)* %450 to double addrspace(3)*
  %452 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1920
  %453 = bitcast i8 addrspace(3)* %452 to double addrspace(3)*
  %454 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1928
  %455 = bitcast i8 addrspace(3)* %454 to double addrspace(3)*
  %456 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1936
  %457 = bitcast i8 addrspace(3)* %456 to double addrspace(3)*
  %458 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1944
  %459 = bitcast i8 addrspace(3)* %458 to double addrspace(3)*
  %460 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1952
  %461 = bitcast i8 addrspace(3)* %460 to double addrspace(3)*
  %462 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1960
  %463 = bitcast i8 addrspace(3)* %462 to double addrspace(3)*
  %464 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1968
  %465 = bitcast i8 addrspace(3)* %464 to double addrspace(3)*
  %466 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1976
  %467 = bitcast i8 addrspace(3)* %466 to double addrspace(3)*
  %468 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1984
  %469 = bitcast i8 addrspace(3)* %468 to double addrspace(3)*
  %470 = getelementptr i8 addrspace(3)* %pLocalMem, i64 1992
  %471 = bitcast i8 addrspace(3)* %470 to double addrspace(3)*
  %472 = getelementptr i8 addrspace(3)* %pLocalMem, i64 2000
  %473 = bitcast i8 addrspace(3)* %472 to double addrspace(3)*
  %474 = getelementptr i8 addrspace(3)* %pLocalMem, i64 2008
  %475 = bitcast i8 addrspace(3)* %474 to double addrspace(3)*
  %476 = getelementptr i8 addrspace(3)* %pLocalMem, i64 2016
  %477 = bitcast i8 addrspace(3)* %476 to double addrspace(3)*
  %478 = getelementptr i8 addrspace(3)* %pLocalMem, i64 2024
  %479 = bitcast i8 addrspace(3)* %478 to double addrspace(3)*
  %480 = getelementptr i8 addrspace(3)* %pLocalMem, i64 2040
  %481 = bitcast i8 addrspace(3)* %480 to double addrspace(3)*
  %482 = getelementptr i8 addrspace(3)* %pLocalMem, i64 2048
  %483 = bitcast i8 addrspace(3)* %482 to double addrspace(3)*
  %484 = getelementptr i8 addrspace(3)* %pLocalMem, i64 2056
  %485 = bitcast i8 addrspace(3)* %484 to double addrspace(3)*
  %486 = getelementptr i8 addrspace(3)* %pLocalMem, i64 2064
  %487 = bitcast i8 addrspace(3)* %486 to double addrspace(3)*
  %488 = getelementptr i8 addrspace(3)* %pLocalMem, i64 2072
  %489 = bitcast i8 addrspace(3)* %488 to double addrspace(3)*
  %490 = getelementptr i8 addrspace(3)* %pLocalMem, i64 2080
  %491 = bitcast i8 addrspace(3)* %490 to double addrspace(3)*
  %492 = getelementptr i8 addrspace(3)* %pLocalMem, i64 2088
  %493 = bitcast i8 addrspace(3)* %492 to double addrspace(3)*
  %494 = getelementptr i8 addrspace(3)* %pLocalMem, i64 2096
  %495 = bitcast i8 addrspace(3)* %494 to double addrspace(3)*
  %496 = getelementptr i8 addrspace(3)* %pLocalMem, i64 2104
  %497 = bitcast i8 addrspace(3)* %496 to double addrspace(3)*
  %498 = getelementptr i8 addrspace(3)* %pLocalMem, i64 2112
  %499 = bitcast i8 addrspace(3)* %498 to double addrspace(3)*
  %500 = getelementptr i8 addrspace(3)* %pLocalMem, i64 2120
  %501 = bitcast i8 addrspace(3)* %500 to double addrspace(3)*
  %502 = getelementptr i8 addrspace(3)* %pLocalMem, i64 2128
  %503 = bitcast i8 addrspace(3)* %502 to double addrspace(3)*
  %504 = getelementptr i8 addrspace(3)* %pLocalMem, i64 2136
  %505 = bitcast i8 addrspace(3)* %504 to double addrspace(3)*
  %506 = getelementptr i8 addrspace(3)* %pLocalMem, i64 2144
  %507 = bitcast i8 addrspace(3)* %506 to double addrspace(3)*
  %508 = getelementptr i8 addrspace(3)* %pLocalMem, i64 2152
  %509 = bitcast i8 addrspace(3)* %508 to double addrspace(3)*
  %510 = getelementptr i8 addrspace(3)* %pLocalMem, i64 2160
  %511 = bitcast i8 addrspace(3)* %510 to double addrspace(3)*
  %temp1572 = insertelement <16 x double> undef, double %beta, i32 0
  %vector1573 = shufflevector <16 x double> %temp1572, <16 x double> undef, <16 x i32> zeroinitializer
  %temp1569 = insertelement <16 x double> undef, double %alpha, i32 0
  %vector1570 = shufflevector <16 x double> %temp1569, <16 x double> undef, <16 x i32> zeroinitializer
  %tmp59 = mul i32 %ldb, 12
  %tmp60 = sext i32 %tmp59 to i64
  %temp18 = insertelement <16 x i64> undef, i64 %tmp60, i32 0
  %vector19 = shufflevector <16 x i64> %temp18, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp64 = shl i32 %ldb, 3
  %tmp65 = sext i32 %tmp64 to i64
  %temp21 = insertelement <16 x i64> undef, i64 %tmp65, i32 0
  %vector22 = shufflevector <16 x i64> %temp21, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp69 = shl i32 %ldb, 2
  %tmp70 = sext i32 %tmp69 to i64
  %temp24 = insertelement <16 x i64> undef, i64 %tmp70, i32 0
  %vector25 = shufflevector <16 x i64> %temp24, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp74 = shl i32 %lda, 2
  %tmp75 = sext i32 %tmp74 to i64
  %temp76 = insertelement <16 x i64> undef, i64 %tmp75, i32 0
  %vector77 = shufflevector <16 x i64> %temp76, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp76 = shl i64 %tmp75, 2
  %tmp85 = mul i32 %lda, 3
  %tmp87 = sext i32 %tmp85 to i64
  %temp34 = insertelement <16 x i64> undef, i64 %tmp87, i32 0
  %vector35 = shufflevector <16 x i64> %temp34, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp91 = shl i32 %lda, 1
  %tmp93 = sext i32 %tmp91 to i64
  %temp37 = insertelement <16 x i64> undef, i64 %tmp93, i32 0
  %vector38 = shufflevector <16 x i64> %temp37, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp97 = sext i32 %lda to i64
  %temp40 = insertelement <16 x i64> undef, i64 %tmp97, i32 0
  %vector41 = shufflevector <16 x i64> %temp40, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp101 = mul i64 %tmp75, 3
  %temp52 = insertelement <16 x i64> undef, i64 %tmp101, i32 0
  %vector53 = shufflevector <16 x i64> %temp52, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp104 = add i64 %tmp101, %tmp87
  %temp43 = insertelement <16 x i64> undef, i64 %tmp104, i32 0
  %vector44 = shufflevector <16 x i64> %temp43, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp110 = add i64 %tmp101, %tmp93
  %temp46 = insertelement <16 x i64> undef, i64 %tmp110, i32 0
  %vector47 = shufflevector <16 x i64> %temp46, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp114 = add i64 %tmp101, %tmp97
  %temp49 = insertelement <16 x i64> undef, i64 %tmp114, i32 0
  %vector50 = shufflevector <16 x i64> %temp49, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp121 = shl i64 %tmp75, 1
  %temp64 = insertelement <16 x i64> undef, i64 %tmp121, i32 0
  %vector65 = shufflevector <16 x i64> %temp64, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp122 = add i64 %tmp121, %tmp87
  %temp55 = insertelement <16 x i64> undef, i64 %tmp122, i32 0
  %vector56 = shufflevector <16 x i64> %temp55, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp126 = add i64 %tmp121, %tmp93
  %temp58 = insertelement <16 x i64> undef, i64 %tmp126, i32 0
  %vector59 = shufflevector <16 x i64> %temp58, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp130 = add i64 %tmp121, %tmp97
  %temp61 = insertelement <16 x i64> undef, i64 %tmp130, i32 0
  %vector62 = shufflevector <16 x i64> %temp61, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp137 = add i64 %tmp75, %tmp87
  %temp67 = insertelement <16 x i64> undef, i64 %tmp137, i32 0
  %vector68 = shufflevector <16 x i64> %temp67, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp141 = add i64 %tmp75, %tmp93
  %temp70 = insertelement <16 x i64> undef, i64 %tmp141, i32 0
  %vector71 = shufflevector <16 x i64> %temp70, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp145 = add i64 %tmp97, %tmp75
  %temp73 = insertelement <16 x i64> undef, i64 %tmp145, i32 0
  %vector74 = shufflevector <16 x i64> %temp73, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp = sext i32 %ldc to i64
  br label %SyncBB4486

SyncBB4486:                                       ; preds = %thenBB, %.preheader19
  %currBarrier.2 = phi i32 [ 16, %.preheader19 ], [ %currBarrier.1, %thenBB ]
  %CurrSBIndex..0 = phi i64 [ 0, %.preheader19 ], [ %"loadedCurrSB+Stride", %thenBB ]
  %CurrWI..0 = phi i64 [ 0, %.preheader19 ], [ %"CurrWI++", %thenBB ]
  %512 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %513 = load i64* %512, align 8
  %broadcast1 = insertelement <16 x i64> undef, i64 %513, i32 0
  %broadcast2 = shufflevector <16 x i64> %broadcast1, <16 x i64> undef, <16 x i32> zeroinitializer
  %514 = add <16 x i64> %broadcast2, <i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8, i64 9, i64 10, i64 11, i64 12, i64 13, i64 14, i64 15>
  %515 = trunc <16 x i64> %514 to <16 x i32>
  %"&(pSB[currWI].offset)" = add nuw i64 %CurrSBIndex..0, 5952
  %"&pSB[currWI].offset" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)"
  %CastToValueType = bitcast i8* %"&pSB[currWI].offset" to <16 x i32>*
  store <16 x i32> %515, <16 x i32>* %CastToValueType, align 64
  %516 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 1
  %517 = load i64* %516, align 8
  %518 = trunc i64 %517 to i32
  %519 = load i64* %pWGId, align 8
  %520 = getelementptr i64* %pWGId, i64 1
  %521 = load i64* %520, align 8
  %"&(pSB[currWI].offset)2880" = add nuw i64 %CurrSBIndex..0, 9872
  %"&pSB[currWI].offset2881" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2880"
  %"&(pSB[currWI].offset)2952" = add nuw i64 %CurrSBIndex..0, 10000
  %"&pSB[currWI].offset2953" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2952"
  %"&(pSB[currWI].offset)3024" = add nuw i64 %CurrSBIndex..0, 10128
  %"&pSB[currWI].offset3025" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3024"
  %"&(pSB[currWI].offset)3096" = add nuw i64 %CurrSBIndex..0, 10256
  %"&pSB[currWI].offset3097" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3096"
  %"&(pSB[currWI].offset)3168" = add nuw i64 %CurrSBIndex..0, 10384
  %"&pSB[currWI].offset3169" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3168"
  %"&(pSB[currWI].offset)3240" = add nuw i64 %CurrSBIndex..0, 10512
  %"&pSB[currWI].offset3241" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3240"
  %"&(pSB[currWI].offset)3312" = add nuw i64 %CurrSBIndex..0, 10640
  %"&pSB[currWI].offset3313" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3312"
  %"&(pSB[currWI].offset)3384" = add nuw i64 %CurrSBIndex..0, 10768
  %"&pSB[currWI].offset3385" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3384"
  %"&(pSB[currWI].offset)3456" = add nuw i64 %CurrSBIndex..0, 10896
  %"&pSB[currWI].offset3457" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3456"
  %"&(pSB[currWI].offset)3528" = add nuw i64 %CurrSBIndex..0, 11024
  %"&pSB[currWI].offset3529" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3528"
  %"&(pSB[currWI].offset)3600" = add nuw i64 %CurrSBIndex..0, 11152
  %"&pSB[currWI].offset3601" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3600"
  %"&(pSB[currWI].offset)3672" = add nuw i64 %CurrSBIndex..0, 11280
  %"&pSB[currWI].offset3673" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3672"
  %"&(pSB[currWI].offset)3744" = add nuw i64 %CurrSBIndex..0, 11408
  %"&pSB[currWI].offset3745" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3744"
  %"&(pSB[currWI].offset)3816" = add nuw i64 %CurrSBIndex..0, 11536
  %"&pSB[currWI].offset3817" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3816"
  %"&(pSB[currWI].offset)3888" = add nuw i64 %CurrSBIndex..0, 11664
  %"&pSB[currWI].offset3889" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3888"
  %"&(pSB[currWI].offset)3960" = add nuw i64 %CurrSBIndex..0, 11792
  %"&pSB[currWI].offset3961" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3960"
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset2881", i8 0, i64 128, i32 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset2953", i8 0, i64 128, i32 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3025", i8 0, i64 128, i32 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3097", i8 0, i64 128, i32 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3169", i8 0, i64 128, i32 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3241", i8 0, i64 128, i32 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3313", i8 0, i64 128, i32 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3385", i8 0, i64 128, i32 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3457", i8 0, i64 128, i32 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3529", i8 0, i64 128, i32 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3601", i8 0, i64 128, i32 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3673", i8 0, i64 128, i32 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3745", i8 0, i64 128, i32 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3817", i8 0, i64 128, i32 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3889", i8 0, i64 128, i32 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3961", i8 0, i64 128, i32 16, i1 false)
  %522 = sext i32 %518 to i64
  %523 = extractelement <16 x i32> %515, i32 0
  %524 = sext i32 %523 to i64
  %525 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %524, i64 %522
  %"&(pSB[currWI].offset)1581" = add nuw i64 %CurrSBIndex..0, 6016
  %"&pSB[currWI].offset1582" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1581"
  %CastToValueType1583 = bitcast i8* %"&pSB[currWI].offset1582" to double addrspace(3)**
  store double addrspace(3)* %525, double addrspace(3)** %CastToValueType1583, align 8
  %526 = extractelement <16 x i32> %515, i32 1
  %527 = sext i32 %526 to i64
  %528 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %527, i64 %522
  %"&(pSB[currWI].offset)1590" = add nuw i64 %CurrSBIndex..0, 6024
  %"&pSB[currWI].offset1591" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1590"
  %CastToValueType1592 = bitcast i8* %"&pSB[currWI].offset1591" to double addrspace(3)**
  store double addrspace(3)* %528, double addrspace(3)** %CastToValueType1592, align 8
  %529 = extractelement <16 x i32> %515, i32 2
  %530 = sext i32 %529 to i64
  %531 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %530, i64 %522
  %"&(pSB[currWI].offset)1599" = add nuw i64 %CurrSBIndex..0, 6032
  %"&pSB[currWI].offset1600" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1599"
  %CastToValueType1601 = bitcast i8* %"&pSB[currWI].offset1600" to double addrspace(3)**
  store double addrspace(3)* %531, double addrspace(3)** %CastToValueType1601, align 8
  %532 = extractelement <16 x i32> %515, i32 3
  %533 = sext i32 %532 to i64
  %534 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %533, i64 %522
  %"&(pSB[currWI].offset)1608" = add nuw i64 %CurrSBIndex..0, 6040
  %"&pSB[currWI].offset1609" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1608"
  %CastToValueType1610 = bitcast i8* %"&pSB[currWI].offset1609" to double addrspace(3)**
  store double addrspace(3)* %534, double addrspace(3)** %CastToValueType1610, align 8
  %535 = extractelement <16 x i32> %515, i32 4
  %536 = sext i32 %535 to i64
  %537 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %536, i64 %522
  %"&(pSB[currWI].offset)1617" = add nuw i64 %CurrSBIndex..0, 6048
  %"&pSB[currWI].offset1618" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1617"
  %CastToValueType1619 = bitcast i8* %"&pSB[currWI].offset1618" to double addrspace(3)**
  store double addrspace(3)* %537, double addrspace(3)** %CastToValueType1619, align 8
  %538 = extractelement <16 x i32> %515, i32 5
  %539 = sext i32 %538 to i64
  %540 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %539, i64 %522
  %"&(pSB[currWI].offset)1626" = add nuw i64 %CurrSBIndex..0, 6056
  %"&pSB[currWI].offset1627" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1626"
  %CastToValueType1628 = bitcast i8* %"&pSB[currWI].offset1627" to double addrspace(3)**
  store double addrspace(3)* %540, double addrspace(3)** %CastToValueType1628, align 8
  %541 = extractelement <16 x i32> %515, i32 6
  %542 = sext i32 %541 to i64
  %543 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %542, i64 %522
  %"&(pSB[currWI].offset)1635" = add nuw i64 %CurrSBIndex..0, 6064
  %"&pSB[currWI].offset1636" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1635"
  %CastToValueType1637 = bitcast i8* %"&pSB[currWI].offset1636" to double addrspace(3)**
  store double addrspace(3)* %543, double addrspace(3)** %CastToValueType1637, align 8
  %544 = extractelement <16 x i32> %515, i32 7
  %545 = sext i32 %544 to i64
  %546 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %545, i64 %522
  %"&(pSB[currWI].offset)1644" = add nuw i64 %CurrSBIndex..0, 6072
  %"&pSB[currWI].offset1645" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1644"
  %CastToValueType1646 = bitcast i8* %"&pSB[currWI].offset1645" to double addrspace(3)**
  store double addrspace(3)* %546, double addrspace(3)** %CastToValueType1646, align 8
  %547 = extractelement <16 x i32> %515, i32 8
  %548 = sext i32 %547 to i64
  %549 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %548, i64 %522
  %"&(pSB[currWI].offset)1653" = add nuw i64 %CurrSBIndex..0, 6080
  %"&pSB[currWI].offset1654" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1653"
  %CastToValueType1655 = bitcast i8* %"&pSB[currWI].offset1654" to double addrspace(3)**
  store double addrspace(3)* %549, double addrspace(3)** %CastToValueType1655, align 8
  %550 = extractelement <16 x i32> %515, i32 9
  %551 = sext i32 %550 to i64
  %552 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %551, i64 %522
  %"&(pSB[currWI].offset)1662" = add nuw i64 %CurrSBIndex..0, 6088
  %"&pSB[currWI].offset1663" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1662"
  %CastToValueType1664 = bitcast i8* %"&pSB[currWI].offset1663" to double addrspace(3)**
  store double addrspace(3)* %552, double addrspace(3)** %CastToValueType1664, align 8
  %553 = extractelement <16 x i32> %515, i32 10
  %554 = sext i32 %553 to i64
  %555 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %554, i64 %522
  %"&(pSB[currWI].offset)1671" = add nuw i64 %CurrSBIndex..0, 6096
  %"&pSB[currWI].offset1672" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1671"
  %CastToValueType1673 = bitcast i8* %"&pSB[currWI].offset1672" to double addrspace(3)**
  store double addrspace(3)* %555, double addrspace(3)** %CastToValueType1673, align 8
  %556 = extractelement <16 x i32> %515, i32 11
  %557 = sext i32 %556 to i64
  %558 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %557, i64 %522
  %"&(pSB[currWI].offset)1680" = add nuw i64 %CurrSBIndex..0, 6104
  %"&pSB[currWI].offset1681" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1680"
  %CastToValueType1682 = bitcast i8* %"&pSB[currWI].offset1681" to double addrspace(3)**
  store double addrspace(3)* %558, double addrspace(3)** %CastToValueType1682, align 8
  %559 = extractelement <16 x i32> %515, i32 12
  %560 = sext i32 %559 to i64
  %561 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %560, i64 %522
  %"&(pSB[currWI].offset)1689" = add nuw i64 %CurrSBIndex..0, 6112
  %"&pSB[currWI].offset1690" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1689"
  %CastToValueType1691 = bitcast i8* %"&pSB[currWI].offset1690" to double addrspace(3)**
  store double addrspace(3)* %561, double addrspace(3)** %CastToValueType1691, align 8
  %562 = extractelement <16 x i32> %515, i32 13
  %563 = sext i32 %562 to i64
  %564 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %563, i64 %522
  %"&(pSB[currWI].offset)1698" = add nuw i64 %CurrSBIndex..0, 6120
  %"&pSB[currWI].offset1699" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1698"
  %CastToValueType1700 = bitcast i8* %"&pSB[currWI].offset1699" to double addrspace(3)**
  store double addrspace(3)* %564, double addrspace(3)** %CastToValueType1700, align 8
  %565 = extractelement <16 x i32> %515, i32 14
  %566 = sext i32 %565 to i64
  %567 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %566, i64 %522
  %"&(pSB[currWI].offset)1707" = add nuw i64 %CurrSBIndex..0, 6128
  %"&pSB[currWI].offset1708" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1707"
  %CastToValueType1709 = bitcast i8* %"&pSB[currWI].offset1708" to double addrspace(3)**
  store double addrspace(3)* %567, double addrspace(3)** %CastToValueType1709, align 8
  %568 = extractelement <16 x i32> %515, i32 15
  %569 = sext i32 %568 to i64
  %570 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %569, i64 %522
  %"&(pSB[currWI].offset)1716" = add nuw i64 %CurrSBIndex..0, 6136
  %"&pSB[currWI].offset1717" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1716"
  %CastToValueType1718 = bitcast i8* %"&pSB[currWI].offset1717" to double addrspace(3)**
  store double addrspace(3)* %570, double addrspace(3)** %CastToValueType1718, align 8
  %571 = add nsw i32 %518, 4
  %572 = sext i32 %571 to i64
  %573 = extractelement <16 x i32> %515, i32 0
  %574 = sext i32 %573 to i64
  %575 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %574, i64 %572
  %"&(pSB[currWI].offset)1725" = add nuw i64 %CurrSBIndex..0, 6144
  %"&pSB[currWI].offset1726" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1725"
  %CastToValueType1727 = bitcast i8* %"&pSB[currWI].offset1726" to double addrspace(3)**
  store double addrspace(3)* %575, double addrspace(3)** %CastToValueType1727, align 8
  %576 = extractelement <16 x i32> %515, i32 1
  %577 = sext i32 %576 to i64
  %578 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %577, i64 %572
  %"&(pSB[currWI].offset)1734" = add nuw i64 %CurrSBIndex..0, 6152
  %"&pSB[currWI].offset1735" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1734"
  %CastToValueType1736 = bitcast i8* %"&pSB[currWI].offset1735" to double addrspace(3)**
  store double addrspace(3)* %578, double addrspace(3)** %CastToValueType1736, align 8
  %579 = extractelement <16 x i32> %515, i32 2
  %580 = sext i32 %579 to i64
  %581 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %580, i64 %572
  %"&(pSB[currWI].offset)1743" = add nuw i64 %CurrSBIndex..0, 6160
  %"&pSB[currWI].offset1744" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1743"
  %CastToValueType1745 = bitcast i8* %"&pSB[currWI].offset1744" to double addrspace(3)**
  store double addrspace(3)* %581, double addrspace(3)** %CastToValueType1745, align 8
  %582 = extractelement <16 x i32> %515, i32 3
  %583 = sext i32 %582 to i64
  %584 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %583, i64 %572
  %"&(pSB[currWI].offset)1752" = add nuw i64 %CurrSBIndex..0, 6168
  %"&pSB[currWI].offset1753" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1752"
  %CastToValueType1754 = bitcast i8* %"&pSB[currWI].offset1753" to double addrspace(3)**
  store double addrspace(3)* %584, double addrspace(3)** %CastToValueType1754, align 8
  %585 = extractelement <16 x i32> %515, i32 4
  %586 = sext i32 %585 to i64
  %587 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %586, i64 %572
  %"&(pSB[currWI].offset)1761" = add nuw i64 %CurrSBIndex..0, 6176
  %"&pSB[currWI].offset1762" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1761"
  %CastToValueType1763 = bitcast i8* %"&pSB[currWI].offset1762" to double addrspace(3)**
  store double addrspace(3)* %587, double addrspace(3)** %CastToValueType1763, align 8
  %588 = extractelement <16 x i32> %515, i32 5
  %589 = sext i32 %588 to i64
  %590 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %589, i64 %572
  %"&(pSB[currWI].offset)1770" = add nuw i64 %CurrSBIndex..0, 6184
  %"&pSB[currWI].offset1771" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1770"
  %CastToValueType1772 = bitcast i8* %"&pSB[currWI].offset1771" to double addrspace(3)**
  store double addrspace(3)* %590, double addrspace(3)** %CastToValueType1772, align 8
  %591 = extractelement <16 x i32> %515, i32 6
  %592 = sext i32 %591 to i64
  %593 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %592, i64 %572
  %"&(pSB[currWI].offset)1779" = add nuw i64 %CurrSBIndex..0, 6192
  %"&pSB[currWI].offset1780" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1779"
  %CastToValueType1781 = bitcast i8* %"&pSB[currWI].offset1780" to double addrspace(3)**
  store double addrspace(3)* %593, double addrspace(3)** %CastToValueType1781, align 8
  %594 = extractelement <16 x i32> %515, i32 7
  %595 = sext i32 %594 to i64
  %596 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %595, i64 %572
  %"&(pSB[currWI].offset)1788" = add nuw i64 %CurrSBIndex..0, 6200
  %"&pSB[currWI].offset1789" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1788"
  %CastToValueType1790 = bitcast i8* %"&pSB[currWI].offset1789" to double addrspace(3)**
  store double addrspace(3)* %596, double addrspace(3)** %CastToValueType1790, align 8
  %597 = extractelement <16 x i32> %515, i32 8
  %598 = sext i32 %597 to i64
  %599 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %598, i64 %572
  %"&(pSB[currWI].offset)1797" = add nuw i64 %CurrSBIndex..0, 6208
  %"&pSB[currWI].offset1798" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1797"
  %CastToValueType1799 = bitcast i8* %"&pSB[currWI].offset1798" to double addrspace(3)**
  store double addrspace(3)* %599, double addrspace(3)** %CastToValueType1799, align 8
  %600 = extractelement <16 x i32> %515, i32 9
  %601 = sext i32 %600 to i64
  %602 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %601, i64 %572
  %"&(pSB[currWI].offset)1806" = add nuw i64 %CurrSBIndex..0, 6216
  %"&pSB[currWI].offset1807" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1806"
  %CastToValueType1808 = bitcast i8* %"&pSB[currWI].offset1807" to double addrspace(3)**
  store double addrspace(3)* %602, double addrspace(3)** %CastToValueType1808, align 8
  %603 = extractelement <16 x i32> %515, i32 10
  %604 = sext i32 %603 to i64
  %605 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %604, i64 %572
  %"&(pSB[currWI].offset)1815" = add nuw i64 %CurrSBIndex..0, 6224
  %"&pSB[currWI].offset1816" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1815"
  %CastToValueType1817 = bitcast i8* %"&pSB[currWI].offset1816" to double addrspace(3)**
  store double addrspace(3)* %605, double addrspace(3)** %CastToValueType1817, align 8
  %606 = extractelement <16 x i32> %515, i32 11
  %607 = sext i32 %606 to i64
  %608 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %607, i64 %572
  %"&(pSB[currWI].offset)1824" = add nuw i64 %CurrSBIndex..0, 6232
  %"&pSB[currWI].offset1825" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1824"
  %CastToValueType1826 = bitcast i8* %"&pSB[currWI].offset1825" to double addrspace(3)**
  store double addrspace(3)* %608, double addrspace(3)** %CastToValueType1826, align 8
  %609 = extractelement <16 x i32> %515, i32 12
  %610 = sext i32 %609 to i64
  %611 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %610, i64 %572
  %"&(pSB[currWI].offset)1833" = add nuw i64 %CurrSBIndex..0, 6240
  %"&pSB[currWI].offset1834" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1833"
  %CastToValueType1835 = bitcast i8* %"&pSB[currWI].offset1834" to double addrspace(3)**
  store double addrspace(3)* %611, double addrspace(3)** %CastToValueType1835, align 8
  %612 = extractelement <16 x i32> %515, i32 13
  %613 = sext i32 %612 to i64
  %614 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %613, i64 %572
  %"&(pSB[currWI].offset)1842" = add nuw i64 %CurrSBIndex..0, 6248
  %"&pSB[currWI].offset1843" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1842"
  %CastToValueType1844 = bitcast i8* %"&pSB[currWI].offset1843" to double addrspace(3)**
  store double addrspace(3)* %614, double addrspace(3)** %CastToValueType1844, align 8
  %615 = extractelement <16 x i32> %515, i32 14
  %616 = sext i32 %615 to i64
  %617 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %616, i64 %572
  %"&(pSB[currWI].offset)1851" = add nuw i64 %CurrSBIndex..0, 6256
  %"&pSB[currWI].offset1852" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1851"
  %CastToValueType1853 = bitcast i8* %"&pSB[currWI].offset1852" to double addrspace(3)**
  store double addrspace(3)* %617, double addrspace(3)** %CastToValueType1853, align 8
  %618 = extractelement <16 x i32> %515, i32 15
  %619 = sext i32 %618 to i64
  %620 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %619, i64 %572
  %"&(pSB[currWI].offset)1860" = add nuw i64 %CurrSBIndex..0, 6264
  %"&pSB[currWI].offset1861" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1860"
  %CastToValueType1862 = bitcast i8* %"&pSB[currWI].offset1861" to double addrspace(3)**
  store double addrspace(3)* %620, double addrspace(3)** %CastToValueType1862, align 8
  %621 = add nsw i32 %518, 8
  %622 = sext i32 %621 to i64
  %623 = extractelement <16 x i32> %515, i32 0
  %624 = sext i32 %623 to i64
  %625 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %624, i64 %622
  %"&(pSB[currWI].offset)1869" = add nuw i64 %CurrSBIndex..0, 6272
  %"&pSB[currWI].offset1870" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1869"
  %CastToValueType1871 = bitcast i8* %"&pSB[currWI].offset1870" to double addrspace(3)**
  store double addrspace(3)* %625, double addrspace(3)** %CastToValueType1871, align 8
  %626 = extractelement <16 x i32> %515, i32 1
  %627 = sext i32 %626 to i64
  %628 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %627, i64 %622
  %"&(pSB[currWI].offset)1878" = add nuw i64 %CurrSBIndex..0, 6280
  %"&pSB[currWI].offset1879" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1878"
  %CastToValueType1880 = bitcast i8* %"&pSB[currWI].offset1879" to double addrspace(3)**
  store double addrspace(3)* %628, double addrspace(3)** %CastToValueType1880, align 8
  %629 = extractelement <16 x i32> %515, i32 2
  %630 = sext i32 %629 to i64
  %631 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %630, i64 %622
  %"&(pSB[currWI].offset)1887" = add nuw i64 %CurrSBIndex..0, 6288
  %"&pSB[currWI].offset1888" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1887"
  %CastToValueType1889 = bitcast i8* %"&pSB[currWI].offset1888" to double addrspace(3)**
  store double addrspace(3)* %631, double addrspace(3)** %CastToValueType1889, align 8
  %632 = extractelement <16 x i32> %515, i32 3
  %633 = sext i32 %632 to i64
  %634 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %633, i64 %622
  %"&(pSB[currWI].offset)1896" = add nuw i64 %CurrSBIndex..0, 6296
  %"&pSB[currWI].offset1897" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1896"
  %CastToValueType1898 = bitcast i8* %"&pSB[currWI].offset1897" to double addrspace(3)**
  store double addrspace(3)* %634, double addrspace(3)** %CastToValueType1898, align 8
  %635 = extractelement <16 x i32> %515, i32 4
  %636 = sext i32 %635 to i64
  %637 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %636, i64 %622
  %"&(pSB[currWI].offset)1905" = add nuw i64 %CurrSBIndex..0, 6304
  %"&pSB[currWI].offset1906" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1905"
  %CastToValueType1907 = bitcast i8* %"&pSB[currWI].offset1906" to double addrspace(3)**
  store double addrspace(3)* %637, double addrspace(3)** %CastToValueType1907, align 8
  %638 = extractelement <16 x i32> %515, i32 5
  %639 = sext i32 %638 to i64
  %640 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %639, i64 %622
  %"&(pSB[currWI].offset)1914" = add nuw i64 %CurrSBIndex..0, 6312
  %"&pSB[currWI].offset1915" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1914"
  %CastToValueType1916 = bitcast i8* %"&pSB[currWI].offset1915" to double addrspace(3)**
  store double addrspace(3)* %640, double addrspace(3)** %CastToValueType1916, align 8
  %641 = extractelement <16 x i32> %515, i32 6
  %642 = sext i32 %641 to i64
  %643 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %642, i64 %622
  %"&(pSB[currWI].offset)1923" = add nuw i64 %CurrSBIndex..0, 6320
  %"&pSB[currWI].offset1924" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1923"
  %CastToValueType1925 = bitcast i8* %"&pSB[currWI].offset1924" to double addrspace(3)**
  store double addrspace(3)* %643, double addrspace(3)** %CastToValueType1925, align 8
  %644 = extractelement <16 x i32> %515, i32 7
  %645 = sext i32 %644 to i64
  %646 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %645, i64 %622
  %"&(pSB[currWI].offset)1932" = add nuw i64 %CurrSBIndex..0, 6328
  %"&pSB[currWI].offset1933" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1932"
  %CastToValueType1934 = bitcast i8* %"&pSB[currWI].offset1933" to double addrspace(3)**
  store double addrspace(3)* %646, double addrspace(3)** %CastToValueType1934, align 8
  %647 = extractelement <16 x i32> %515, i32 8
  %648 = sext i32 %647 to i64
  %649 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %648, i64 %622
  %"&(pSB[currWI].offset)1941" = add nuw i64 %CurrSBIndex..0, 6336
  %"&pSB[currWI].offset1942" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1941"
  %CastToValueType1943 = bitcast i8* %"&pSB[currWI].offset1942" to double addrspace(3)**
  store double addrspace(3)* %649, double addrspace(3)** %CastToValueType1943, align 8
  %650 = extractelement <16 x i32> %515, i32 9
  %651 = sext i32 %650 to i64
  %652 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %651, i64 %622
  %"&(pSB[currWI].offset)1950" = add nuw i64 %CurrSBIndex..0, 6344
  %"&pSB[currWI].offset1951" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1950"
  %CastToValueType1952 = bitcast i8* %"&pSB[currWI].offset1951" to double addrspace(3)**
  store double addrspace(3)* %652, double addrspace(3)** %CastToValueType1952, align 8
  %653 = extractelement <16 x i32> %515, i32 10
  %654 = sext i32 %653 to i64
  %655 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %654, i64 %622
  %"&(pSB[currWI].offset)1959" = add nuw i64 %CurrSBIndex..0, 6352
  %"&pSB[currWI].offset1960" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1959"
  %CastToValueType1961 = bitcast i8* %"&pSB[currWI].offset1960" to double addrspace(3)**
  store double addrspace(3)* %655, double addrspace(3)** %CastToValueType1961, align 8
  %656 = extractelement <16 x i32> %515, i32 11
  %657 = sext i32 %656 to i64
  %658 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %657, i64 %622
  %"&(pSB[currWI].offset)1968" = add nuw i64 %CurrSBIndex..0, 6360
  %"&pSB[currWI].offset1969" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1968"
  %CastToValueType1970 = bitcast i8* %"&pSB[currWI].offset1969" to double addrspace(3)**
  store double addrspace(3)* %658, double addrspace(3)** %CastToValueType1970, align 8
  %659 = extractelement <16 x i32> %515, i32 12
  %660 = sext i32 %659 to i64
  %661 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %660, i64 %622
  %"&(pSB[currWI].offset)1977" = add nuw i64 %CurrSBIndex..0, 6368
  %"&pSB[currWI].offset1978" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1977"
  %CastToValueType1979 = bitcast i8* %"&pSB[currWI].offset1978" to double addrspace(3)**
  store double addrspace(3)* %661, double addrspace(3)** %CastToValueType1979, align 8
  %662 = extractelement <16 x i32> %515, i32 13
  %663 = sext i32 %662 to i64
  %664 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %663, i64 %622
  %"&(pSB[currWI].offset)1986" = add nuw i64 %CurrSBIndex..0, 6376
  %"&pSB[currWI].offset1987" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1986"
  %CastToValueType1988 = bitcast i8* %"&pSB[currWI].offset1987" to double addrspace(3)**
  store double addrspace(3)* %664, double addrspace(3)** %CastToValueType1988, align 8
  %665 = extractelement <16 x i32> %515, i32 14
  %666 = sext i32 %665 to i64
  %667 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %666, i64 %622
  %"&(pSB[currWI].offset)1995" = add nuw i64 %CurrSBIndex..0, 6384
  %"&pSB[currWI].offset1996" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1995"
  %CastToValueType1997 = bitcast i8* %"&pSB[currWI].offset1996" to double addrspace(3)**
  store double addrspace(3)* %667, double addrspace(3)** %CastToValueType1997, align 8
  %668 = extractelement <16 x i32> %515, i32 15
  %669 = sext i32 %668 to i64
  %670 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %669, i64 %622
  %"&(pSB[currWI].offset)2004" = add nuw i64 %CurrSBIndex..0, 6392
  %"&pSB[currWI].offset2005" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2004"
  %CastToValueType2006 = bitcast i8* %"&pSB[currWI].offset2005" to double addrspace(3)**
  store double addrspace(3)* %670, double addrspace(3)** %CastToValueType2006, align 8
  %671 = add nsw i32 %518, 12
  %672 = sext i32 %671 to i64
  %673 = extractelement <16 x i32> %515, i32 0
  %674 = sext i32 %673 to i64
  %675 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %674, i64 %672
  %"&(pSB[currWI].offset)2013" = add nuw i64 %CurrSBIndex..0, 6400
  %"&pSB[currWI].offset2014" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2013"
  %CastToValueType2015 = bitcast i8* %"&pSB[currWI].offset2014" to double addrspace(3)**
  store double addrspace(3)* %675, double addrspace(3)** %CastToValueType2015, align 8
  %676 = extractelement <16 x i32> %515, i32 1
  %677 = sext i32 %676 to i64
  %678 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %677, i64 %672
  %"&(pSB[currWI].offset)2022" = add nuw i64 %CurrSBIndex..0, 6408
  %"&pSB[currWI].offset2023" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2022"
  %CastToValueType2024 = bitcast i8* %"&pSB[currWI].offset2023" to double addrspace(3)**
  store double addrspace(3)* %678, double addrspace(3)** %CastToValueType2024, align 8
  %679 = extractelement <16 x i32> %515, i32 2
  %680 = sext i32 %679 to i64
  %681 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %680, i64 %672
  %"&(pSB[currWI].offset)2031" = add nuw i64 %CurrSBIndex..0, 6416
  %"&pSB[currWI].offset2032" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2031"
  %CastToValueType2033 = bitcast i8* %"&pSB[currWI].offset2032" to double addrspace(3)**
  store double addrspace(3)* %681, double addrspace(3)** %CastToValueType2033, align 8
  %682 = extractelement <16 x i32> %515, i32 3
  %683 = sext i32 %682 to i64
  %684 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %683, i64 %672
  %"&(pSB[currWI].offset)2040" = add nuw i64 %CurrSBIndex..0, 6424
  %"&pSB[currWI].offset2041" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2040"
  %CastToValueType2042 = bitcast i8* %"&pSB[currWI].offset2041" to double addrspace(3)**
  store double addrspace(3)* %684, double addrspace(3)** %CastToValueType2042, align 8
  %685 = extractelement <16 x i32> %515, i32 4
  %686 = sext i32 %685 to i64
  %687 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %686, i64 %672
  %"&(pSB[currWI].offset)2049" = add nuw i64 %CurrSBIndex..0, 6432
  %"&pSB[currWI].offset2050" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2049"
  %CastToValueType2051 = bitcast i8* %"&pSB[currWI].offset2050" to double addrspace(3)**
  store double addrspace(3)* %687, double addrspace(3)** %CastToValueType2051, align 8
  %688 = extractelement <16 x i32> %515, i32 5
  %689 = sext i32 %688 to i64
  %690 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %689, i64 %672
  %"&(pSB[currWI].offset)2058" = add nuw i64 %CurrSBIndex..0, 6440
  %"&pSB[currWI].offset2059" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2058"
  %CastToValueType2060 = bitcast i8* %"&pSB[currWI].offset2059" to double addrspace(3)**
  store double addrspace(3)* %690, double addrspace(3)** %CastToValueType2060, align 8
  %691 = extractelement <16 x i32> %515, i32 6
  %692 = sext i32 %691 to i64
  %693 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %692, i64 %672
  %"&(pSB[currWI].offset)2067" = add nuw i64 %CurrSBIndex..0, 6448
  %"&pSB[currWI].offset2068" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2067"
  %CastToValueType2069 = bitcast i8* %"&pSB[currWI].offset2068" to double addrspace(3)**
  store double addrspace(3)* %693, double addrspace(3)** %CastToValueType2069, align 8
  %694 = extractelement <16 x i32> %515, i32 7
  %695 = sext i32 %694 to i64
  %696 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %695, i64 %672
  %"&(pSB[currWI].offset)2076" = add nuw i64 %CurrSBIndex..0, 6456
  %"&pSB[currWI].offset2077" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2076"
  %CastToValueType2078 = bitcast i8* %"&pSB[currWI].offset2077" to double addrspace(3)**
  store double addrspace(3)* %696, double addrspace(3)** %CastToValueType2078, align 8
  %697 = extractelement <16 x i32> %515, i32 8
  %698 = sext i32 %697 to i64
  %699 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %698, i64 %672
  %"&(pSB[currWI].offset)2085" = add nuw i64 %CurrSBIndex..0, 6464
  %"&pSB[currWI].offset2086" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2085"
  %CastToValueType2087 = bitcast i8* %"&pSB[currWI].offset2086" to double addrspace(3)**
  store double addrspace(3)* %699, double addrspace(3)** %CastToValueType2087, align 8
  %700 = extractelement <16 x i32> %515, i32 9
  %701 = sext i32 %700 to i64
  %702 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %701, i64 %672
  %"&(pSB[currWI].offset)2094" = add nuw i64 %CurrSBIndex..0, 6472
  %"&pSB[currWI].offset2095" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2094"
  %CastToValueType2096 = bitcast i8* %"&pSB[currWI].offset2095" to double addrspace(3)**
  store double addrspace(3)* %702, double addrspace(3)** %CastToValueType2096, align 8
  %703 = extractelement <16 x i32> %515, i32 10
  %704 = sext i32 %703 to i64
  %705 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %704, i64 %672
  %"&(pSB[currWI].offset)2103" = add nuw i64 %CurrSBIndex..0, 6480
  %"&pSB[currWI].offset2104" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2103"
  %CastToValueType2105 = bitcast i8* %"&pSB[currWI].offset2104" to double addrspace(3)**
  store double addrspace(3)* %705, double addrspace(3)** %CastToValueType2105, align 8
  %706 = extractelement <16 x i32> %515, i32 11
  %707 = sext i32 %706 to i64
  %708 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %707, i64 %672
  %"&(pSB[currWI].offset)2112" = add nuw i64 %CurrSBIndex..0, 6488
  %"&pSB[currWI].offset2113" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2112"
  %CastToValueType2114 = bitcast i8* %"&pSB[currWI].offset2113" to double addrspace(3)**
  store double addrspace(3)* %708, double addrspace(3)** %CastToValueType2114, align 8
  %709 = extractelement <16 x i32> %515, i32 12
  %710 = sext i32 %709 to i64
  %711 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %710, i64 %672
  %"&(pSB[currWI].offset)2121" = add nuw i64 %CurrSBIndex..0, 6496
  %"&pSB[currWI].offset2122" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2121"
  %CastToValueType2123 = bitcast i8* %"&pSB[currWI].offset2122" to double addrspace(3)**
  store double addrspace(3)* %711, double addrspace(3)** %CastToValueType2123, align 8
  %712 = extractelement <16 x i32> %515, i32 13
  %713 = sext i32 %712 to i64
  %714 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %713, i64 %672
  %"&(pSB[currWI].offset)2130" = add nuw i64 %CurrSBIndex..0, 6504
  %"&pSB[currWI].offset2131" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2130"
  %CastToValueType2132 = bitcast i8* %"&pSB[currWI].offset2131" to double addrspace(3)**
  store double addrspace(3)* %714, double addrspace(3)** %CastToValueType2132, align 8
  %715 = extractelement <16 x i32> %515, i32 14
  %716 = sext i32 %715 to i64
  %717 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %716, i64 %672
  %"&(pSB[currWI].offset)2139" = add nuw i64 %CurrSBIndex..0, 6512
  %"&pSB[currWI].offset2140" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2139"
  %CastToValueType2141 = bitcast i8* %"&pSB[currWI].offset2140" to double addrspace(3)**
  store double addrspace(3)* %717, double addrspace(3)** %CastToValueType2141, align 8
  %718 = extractelement <16 x i32> %515, i32 15
  %719 = sext i32 %718 to i64
  %720 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %0, i64 0, i64 %719, i64 %672
  %"&(pSB[currWI].offset)2148" = add nuw i64 %CurrSBIndex..0, 6520
  %"&pSB[currWI].offset2149" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2148"
  %CastToValueType2150 = bitcast i8* %"&pSB[currWI].offset2149" to double addrspace(3)**
  store double addrspace(3)* %720, double addrspace(3)** %CastToValueType2150, align 8
  %"&(pSB[currWI].offset)2876" = add nuw i64 %CurrSBIndex..0, 9872
  %"&pSB[currWI].offset2877" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2876"
  %721 = bitcast i8* %"&pSB[currWI].offset2877" to double*
  %"&(pSB[currWI].offset)2948" = add nuw i64 %CurrSBIndex..0, 10000
  %"&pSB[currWI].offset2949" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2948"
  %722 = bitcast i8* %"&pSB[currWI].offset2949" to double*
  %"&(pSB[currWI].offset)3020" = add nuw i64 %CurrSBIndex..0, 10128
  %"&pSB[currWI].offset3021" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3020"
  %723 = bitcast i8* %"&pSB[currWI].offset3021" to double*
  %"&(pSB[currWI].offset)3092" = add nuw i64 %CurrSBIndex..0, 10256
  %"&pSB[currWI].offset3093" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3092"
  %724 = bitcast i8* %"&pSB[currWI].offset3093" to double*
  %"&(pSB[currWI].offset)3164" = add nuw i64 %CurrSBIndex..0, 10384
  %"&pSB[currWI].offset3165" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3164"
  %725 = bitcast i8* %"&pSB[currWI].offset3165" to double*
  %"&(pSB[currWI].offset)3236" = add nuw i64 %CurrSBIndex..0, 10512
  %"&pSB[currWI].offset3237" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3236"
  %726 = bitcast i8* %"&pSB[currWI].offset3237" to double*
  %"&(pSB[currWI].offset)3308" = add nuw i64 %CurrSBIndex..0, 10640
  %"&pSB[currWI].offset3309" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3308"
  %727 = bitcast i8* %"&pSB[currWI].offset3309" to double*
  %"&(pSB[currWI].offset)3380" = add nuw i64 %CurrSBIndex..0, 10768
  %"&pSB[currWI].offset3381" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3380"
  %728 = bitcast i8* %"&pSB[currWI].offset3381" to double*
  %"&(pSB[currWI].offset)3452" = add nuw i64 %CurrSBIndex..0, 10896
  %"&pSB[currWI].offset3453" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3452"
  %729 = bitcast i8* %"&pSB[currWI].offset3453" to double*
  %"&(pSB[currWI].offset)3524" = add nuw i64 %CurrSBIndex..0, 11024
  %"&pSB[currWI].offset3525" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3524"
  %730 = bitcast i8* %"&pSB[currWI].offset3525" to double*
  %"&(pSB[currWI].offset)3596" = add nuw i64 %CurrSBIndex..0, 11152
  %"&pSB[currWI].offset3597" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3596"
  %731 = bitcast i8* %"&pSB[currWI].offset3597" to double*
  %"&(pSB[currWI].offset)3668" = add nuw i64 %CurrSBIndex..0, 11280
  %"&pSB[currWI].offset3669" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3668"
  %732 = bitcast i8* %"&pSB[currWI].offset3669" to double*
  %"&(pSB[currWI].offset)3740" = add nuw i64 %CurrSBIndex..0, 11408
  %"&pSB[currWI].offset3741" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3740"
  %733 = bitcast i8* %"&pSB[currWI].offset3741" to double*
  %"&(pSB[currWI].offset)3812" = add nuw i64 %CurrSBIndex..0, 11536
  %"&pSB[currWI].offset3813" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3812"
  %734 = bitcast i8* %"&pSB[currWI].offset3813" to double*
  %"&(pSB[currWI].offset)3884" = add nuw i64 %CurrSBIndex..0, 11664
  %"&pSB[currWI].offset3885" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3884"
  %735 = bitcast i8* %"&pSB[currWI].offset3885" to double*
  %"&(pSB[currWI].offset)3956" = add nuw i64 %CurrSBIndex..0, 11792
  %"&pSB[currWI].offset3957" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3956"
  %736 = bitcast i8* %"&pSB[currWI].offset3957" to double*
  %"&pSB[currWI].offset2873.sum" = add i64 %CurrSBIndex..0, 9880
  %737 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2873.sum"
  %738 = bitcast i8* %737 to double*
  %"&pSB[currWI].offset2945.sum" = add i64 %CurrSBIndex..0, 10008
  %739 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2945.sum"
  %740 = bitcast i8* %739 to double*
  %"&pSB[currWI].offset3017.sum" = add i64 %CurrSBIndex..0, 10136
  %741 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3017.sum"
  %742 = bitcast i8* %741 to double*
  %"&pSB[currWI].offset3089.sum" = add i64 %CurrSBIndex..0, 10264
  %743 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3089.sum"
  %744 = bitcast i8* %743 to double*
  %"&pSB[currWI].offset3161.sum" = add i64 %CurrSBIndex..0, 10392
  %745 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3161.sum"
  %746 = bitcast i8* %745 to double*
  %"&pSB[currWI].offset3233.sum" = add i64 %CurrSBIndex..0, 10520
  %747 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3233.sum"
  %748 = bitcast i8* %747 to double*
  %"&pSB[currWI].offset3305.sum" = add i64 %CurrSBIndex..0, 10648
  %749 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3305.sum"
  %750 = bitcast i8* %749 to double*
  %"&pSB[currWI].offset3377.sum" = add i64 %CurrSBIndex..0, 10776
  %751 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3377.sum"
  %752 = bitcast i8* %751 to double*
  %"&pSB[currWI].offset3449.sum" = add i64 %CurrSBIndex..0, 10904
  %753 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3449.sum"
  %754 = bitcast i8* %753 to double*
  %"&pSB[currWI].offset3521.sum" = add i64 %CurrSBIndex..0, 11032
  %755 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3521.sum"
  %756 = bitcast i8* %755 to double*
  %"&pSB[currWI].offset3593.sum" = add i64 %CurrSBIndex..0, 11160
  %757 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3593.sum"
  %758 = bitcast i8* %757 to double*
  %"&pSB[currWI].offset3665.sum" = add i64 %CurrSBIndex..0, 11288
  %759 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3665.sum"
  %760 = bitcast i8* %759 to double*
  %"&pSB[currWI].offset3737.sum" = add i64 %CurrSBIndex..0, 11416
  %761 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3737.sum"
  %762 = bitcast i8* %761 to double*
  %"&pSB[currWI].offset3809.sum" = add i64 %CurrSBIndex..0, 11544
  %763 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3809.sum"
  %764 = bitcast i8* %763 to double*
  %"&pSB[currWI].offset3881.sum" = add i64 %CurrSBIndex..0, 11672
  %765 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3881.sum"
  %766 = bitcast i8* %765 to double*
  %"&pSB[currWI].offset3953.sum" = add i64 %CurrSBIndex..0, 11800
  %767 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3953.sum"
  %768 = bitcast i8* %767 to double*
  %"&pSB[currWI].offset2869.sum" = add i64 %CurrSBIndex..0, 9888
  %769 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2869.sum"
  %770 = bitcast i8* %769 to double*
  %"&pSB[currWI].offset2941.sum" = add i64 %CurrSBIndex..0, 10016
  %771 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2941.sum"
  %772 = bitcast i8* %771 to double*
  %"&pSB[currWI].offset3013.sum" = add i64 %CurrSBIndex..0, 10144
  %773 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3013.sum"
  %774 = bitcast i8* %773 to double*
  %"&pSB[currWI].offset3085.sum" = add i64 %CurrSBIndex..0, 10272
  %775 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3085.sum"
  %776 = bitcast i8* %775 to double*
  %"&pSB[currWI].offset3157.sum" = add i64 %CurrSBIndex..0, 10400
  %777 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3157.sum"
  %778 = bitcast i8* %777 to double*
  %"&pSB[currWI].offset3229.sum" = add i64 %CurrSBIndex..0, 10528
  %779 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3229.sum"
  %780 = bitcast i8* %779 to double*
  %"&pSB[currWI].offset3301.sum" = add i64 %CurrSBIndex..0, 10656
  %781 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3301.sum"
  %782 = bitcast i8* %781 to double*
  %"&pSB[currWI].offset3373.sum" = add i64 %CurrSBIndex..0, 10784
  %783 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3373.sum"
  %784 = bitcast i8* %783 to double*
  %"&pSB[currWI].offset3445.sum" = add i64 %CurrSBIndex..0, 10912
  %785 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3445.sum"
  %786 = bitcast i8* %785 to double*
  %"&pSB[currWI].offset3517.sum" = add i64 %CurrSBIndex..0, 11040
  %787 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3517.sum"
  %788 = bitcast i8* %787 to double*
  %"&pSB[currWI].offset3589.sum" = add i64 %CurrSBIndex..0, 11168
  %789 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3589.sum"
  %790 = bitcast i8* %789 to double*
  %"&pSB[currWI].offset3661.sum" = add i64 %CurrSBIndex..0, 11296
  %791 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3661.sum"
  %792 = bitcast i8* %791 to double*
  %"&pSB[currWI].offset3733.sum" = add i64 %CurrSBIndex..0, 11424
  %793 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3733.sum"
  %794 = bitcast i8* %793 to double*
  %"&pSB[currWI].offset3805.sum" = add i64 %CurrSBIndex..0, 11552
  %795 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3805.sum"
  %796 = bitcast i8* %795 to double*
  %"&pSB[currWI].offset3877.sum" = add i64 %CurrSBIndex..0, 11680
  %797 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3877.sum"
  %798 = bitcast i8* %797 to double*
  %"&pSB[currWI].offset3949.sum" = add i64 %CurrSBIndex..0, 11808
  %799 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3949.sum"
  %800 = bitcast i8* %799 to double*
  %"&pSB[currWI].offset2865.sum" = add i64 %CurrSBIndex..0, 9896
  %801 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2865.sum"
  %802 = bitcast i8* %801 to double*
  %"&pSB[currWI].offset2937.sum" = add i64 %CurrSBIndex..0, 10024
  %803 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2937.sum"
  %804 = bitcast i8* %803 to double*
  %"&pSB[currWI].offset3009.sum" = add i64 %CurrSBIndex..0, 10152
  %805 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3009.sum"
  %806 = bitcast i8* %805 to double*
  %"&pSB[currWI].offset3081.sum" = add i64 %CurrSBIndex..0, 10280
  %807 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3081.sum"
  %808 = bitcast i8* %807 to double*
  %"&pSB[currWI].offset3153.sum" = add i64 %CurrSBIndex..0, 10408
  %809 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3153.sum"
  %810 = bitcast i8* %809 to double*
  %"&pSB[currWI].offset3225.sum" = add i64 %CurrSBIndex..0, 10536
  %811 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3225.sum"
  %812 = bitcast i8* %811 to double*
  %"&pSB[currWI].offset3297.sum" = add i64 %CurrSBIndex..0, 10664
  %813 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3297.sum"
  %814 = bitcast i8* %813 to double*
  %"&pSB[currWI].offset3369.sum" = add i64 %CurrSBIndex..0, 10792
  %815 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3369.sum"
  %816 = bitcast i8* %815 to double*
  %"&pSB[currWI].offset3441.sum" = add i64 %CurrSBIndex..0, 10920
  %817 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3441.sum"
  %818 = bitcast i8* %817 to double*
  %"&pSB[currWI].offset3513.sum" = add i64 %CurrSBIndex..0, 11048
  %819 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3513.sum"
  %820 = bitcast i8* %819 to double*
  %"&pSB[currWI].offset3585.sum" = add i64 %CurrSBIndex..0, 11176
  %821 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3585.sum"
  %822 = bitcast i8* %821 to double*
  %"&pSB[currWI].offset3657.sum" = add i64 %CurrSBIndex..0, 11304
  %823 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3657.sum"
  %824 = bitcast i8* %823 to double*
  %"&pSB[currWI].offset3729.sum" = add i64 %CurrSBIndex..0, 11432
  %825 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3729.sum"
  %826 = bitcast i8* %825 to double*
  %"&pSB[currWI].offset3801.sum" = add i64 %CurrSBIndex..0, 11560
  %827 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3801.sum"
  %828 = bitcast i8* %827 to double*
  %"&pSB[currWI].offset3873.sum" = add i64 %CurrSBIndex..0, 11688
  %829 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3873.sum"
  %830 = bitcast i8* %829 to double*
  %"&pSB[currWI].offset3945.sum" = add i64 %CurrSBIndex..0, 11816
  %831 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3945.sum"
  %832 = bitcast i8* %831 to double*
  %"&pSB[currWI].offset2861.sum" = add i64 %CurrSBIndex..0, 9904
  %833 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2861.sum"
  %834 = bitcast i8* %833 to double*
  %"&pSB[currWI].offset2933.sum" = add i64 %CurrSBIndex..0, 10032
  %835 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2933.sum"
  %836 = bitcast i8* %835 to double*
  %"&pSB[currWI].offset3005.sum" = add i64 %CurrSBIndex..0, 10160
  %837 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3005.sum"
  %838 = bitcast i8* %837 to double*
  %"&pSB[currWI].offset3077.sum" = add i64 %CurrSBIndex..0, 10288
  %839 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3077.sum"
  %840 = bitcast i8* %839 to double*
  %"&pSB[currWI].offset3149.sum" = add i64 %CurrSBIndex..0, 10416
  %841 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3149.sum"
  %842 = bitcast i8* %841 to double*
  %"&pSB[currWI].offset3221.sum" = add i64 %CurrSBIndex..0, 10544
  %843 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3221.sum"
  %844 = bitcast i8* %843 to double*
  %"&pSB[currWI].offset3293.sum" = add i64 %CurrSBIndex..0, 10672
  %845 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3293.sum"
  %846 = bitcast i8* %845 to double*
  %"&pSB[currWI].offset3365.sum" = add i64 %CurrSBIndex..0, 10800
  %847 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3365.sum"
  %848 = bitcast i8* %847 to double*
  %"&pSB[currWI].offset3437.sum" = add i64 %CurrSBIndex..0, 10928
  %849 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3437.sum"
  %850 = bitcast i8* %849 to double*
  %"&pSB[currWI].offset3509.sum" = add i64 %CurrSBIndex..0, 11056
  %851 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3509.sum"
  %852 = bitcast i8* %851 to double*
  %"&pSB[currWI].offset3581.sum" = add i64 %CurrSBIndex..0, 11184
  %853 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3581.sum"
  %854 = bitcast i8* %853 to double*
  %"&pSB[currWI].offset3653.sum" = add i64 %CurrSBIndex..0, 11312
  %855 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3653.sum"
  %856 = bitcast i8* %855 to double*
  %"&pSB[currWI].offset3725.sum" = add i64 %CurrSBIndex..0, 11440
  %857 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3725.sum"
  %858 = bitcast i8* %857 to double*
  %"&pSB[currWI].offset3797.sum" = add i64 %CurrSBIndex..0, 11568
  %859 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3797.sum"
  %860 = bitcast i8* %859 to double*
  %"&pSB[currWI].offset3869.sum" = add i64 %CurrSBIndex..0, 11696
  %861 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3869.sum"
  %862 = bitcast i8* %861 to double*
  %"&pSB[currWI].offset3941.sum" = add i64 %CurrSBIndex..0, 11824
  %863 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3941.sum"
  %864 = bitcast i8* %863 to double*
  %"&pSB[currWI].offset2857.sum" = add i64 %CurrSBIndex..0, 9912
  %865 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2857.sum"
  %866 = bitcast i8* %865 to double*
  %"&pSB[currWI].offset2929.sum" = add i64 %CurrSBIndex..0, 10040
  %867 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2929.sum"
  %868 = bitcast i8* %867 to double*
  %"&pSB[currWI].offset3001.sum" = add i64 %CurrSBIndex..0, 10168
  %869 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3001.sum"
  %870 = bitcast i8* %869 to double*
  %"&pSB[currWI].offset3073.sum" = add i64 %CurrSBIndex..0, 10296
  %871 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3073.sum"
  %872 = bitcast i8* %871 to double*
  %"&pSB[currWI].offset3145.sum" = add i64 %CurrSBIndex..0, 10424
  %873 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3145.sum"
  %874 = bitcast i8* %873 to double*
  %"&pSB[currWI].offset3217.sum" = add i64 %CurrSBIndex..0, 10552
  %875 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3217.sum"
  %876 = bitcast i8* %875 to double*
  %"&pSB[currWI].offset3289.sum" = add i64 %CurrSBIndex..0, 10680
  %877 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3289.sum"
  %878 = bitcast i8* %877 to double*
  %"&pSB[currWI].offset3361.sum" = add i64 %CurrSBIndex..0, 10808
  %879 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3361.sum"
  %880 = bitcast i8* %879 to double*
  %"&pSB[currWI].offset3433.sum" = add i64 %CurrSBIndex..0, 10936
  %881 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3433.sum"
  %882 = bitcast i8* %881 to double*
  %"&pSB[currWI].offset3505.sum" = add i64 %CurrSBIndex..0, 11064
  %883 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3505.sum"
  %884 = bitcast i8* %883 to double*
  %"&pSB[currWI].offset3577.sum" = add i64 %CurrSBIndex..0, 11192
  %885 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3577.sum"
  %886 = bitcast i8* %885 to double*
  %"&pSB[currWI].offset3649.sum" = add i64 %CurrSBIndex..0, 11320
  %887 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3649.sum"
  %888 = bitcast i8* %887 to double*
  %"&pSB[currWI].offset3721.sum" = add i64 %CurrSBIndex..0, 11448
  %889 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3721.sum"
  %890 = bitcast i8* %889 to double*
  %"&pSB[currWI].offset3793.sum" = add i64 %CurrSBIndex..0, 11576
  %891 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3793.sum"
  %892 = bitcast i8* %891 to double*
  %"&pSB[currWI].offset3865.sum" = add i64 %CurrSBIndex..0, 11704
  %893 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3865.sum"
  %894 = bitcast i8* %893 to double*
  %"&pSB[currWI].offset3937.sum" = add i64 %CurrSBIndex..0, 11832
  %895 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3937.sum"
  %896 = bitcast i8* %895 to double*
  %"&pSB[currWI].offset2853.sum" = add i64 %CurrSBIndex..0, 9920
  %897 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2853.sum"
  %898 = bitcast i8* %897 to double*
  %"&pSB[currWI].offset2925.sum" = add i64 %CurrSBIndex..0, 10048
  %899 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2925.sum"
  %900 = bitcast i8* %899 to double*
  %"&pSB[currWI].offset2997.sum" = add i64 %CurrSBIndex..0, 10176
  %901 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2997.sum"
  %902 = bitcast i8* %901 to double*
  %"&pSB[currWI].offset3069.sum" = add i64 %CurrSBIndex..0, 10304
  %903 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3069.sum"
  %904 = bitcast i8* %903 to double*
  %"&pSB[currWI].offset3141.sum" = add i64 %CurrSBIndex..0, 10432
  %905 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3141.sum"
  %906 = bitcast i8* %905 to double*
  %"&pSB[currWI].offset3213.sum" = add i64 %CurrSBIndex..0, 10560
  %907 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3213.sum"
  %908 = bitcast i8* %907 to double*
  %"&pSB[currWI].offset3285.sum" = add i64 %CurrSBIndex..0, 10688
  %909 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3285.sum"
  %910 = bitcast i8* %909 to double*
  %"&pSB[currWI].offset3357.sum" = add i64 %CurrSBIndex..0, 10816
  %911 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3357.sum"
  %912 = bitcast i8* %911 to double*
  %"&pSB[currWI].offset3429.sum" = add i64 %CurrSBIndex..0, 10944
  %913 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3429.sum"
  %914 = bitcast i8* %913 to double*
  %"&pSB[currWI].offset3501.sum" = add i64 %CurrSBIndex..0, 11072
  %915 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3501.sum"
  %916 = bitcast i8* %915 to double*
  %"&pSB[currWI].offset3573.sum" = add i64 %CurrSBIndex..0, 11200
  %917 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3573.sum"
  %918 = bitcast i8* %917 to double*
  %"&pSB[currWI].offset3645.sum" = add i64 %CurrSBIndex..0, 11328
  %919 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3645.sum"
  %920 = bitcast i8* %919 to double*
  %"&pSB[currWI].offset3717.sum" = add i64 %CurrSBIndex..0, 11456
  %921 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3717.sum"
  %922 = bitcast i8* %921 to double*
  %"&pSB[currWI].offset3789.sum" = add i64 %CurrSBIndex..0, 11584
  %923 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3789.sum"
  %924 = bitcast i8* %923 to double*
  %"&pSB[currWI].offset3861.sum" = add i64 %CurrSBIndex..0, 11712
  %925 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3861.sum"
  %926 = bitcast i8* %925 to double*
  %"&pSB[currWI].offset3933.sum" = add i64 %CurrSBIndex..0, 11840
  %927 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3933.sum"
  %928 = bitcast i8* %927 to double*
  %"&pSB[currWI].offset2849.sum" = add i64 %CurrSBIndex..0, 9928
  %929 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2849.sum"
  %930 = bitcast i8* %929 to double*
  %"&pSB[currWI].offset2921.sum" = add i64 %CurrSBIndex..0, 10056
  %931 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2921.sum"
  %932 = bitcast i8* %931 to double*
  %"&pSB[currWI].offset2993.sum" = add i64 %CurrSBIndex..0, 10184
  %933 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2993.sum"
  %934 = bitcast i8* %933 to double*
  %"&pSB[currWI].offset3065.sum" = add i64 %CurrSBIndex..0, 10312
  %935 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3065.sum"
  %936 = bitcast i8* %935 to double*
  %"&pSB[currWI].offset3137.sum" = add i64 %CurrSBIndex..0, 10440
  %937 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3137.sum"
  %938 = bitcast i8* %937 to double*
  %"&pSB[currWI].offset3209.sum" = add i64 %CurrSBIndex..0, 10568
  %939 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3209.sum"
  %940 = bitcast i8* %939 to double*
  %"&pSB[currWI].offset3281.sum" = add i64 %CurrSBIndex..0, 10696
  %941 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3281.sum"
  %942 = bitcast i8* %941 to double*
  %"&pSB[currWI].offset3353.sum" = add i64 %CurrSBIndex..0, 10824
  %943 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3353.sum"
  %944 = bitcast i8* %943 to double*
  %"&pSB[currWI].offset3425.sum" = add i64 %CurrSBIndex..0, 10952
  %945 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3425.sum"
  %946 = bitcast i8* %945 to double*
  %"&pSB[currWI].offset3497.sum" = add i64 %CurrSBIndex..0, 11080
  %947 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3497.sum"
  %948 = bitcast i8* %947 to double*
  %"&pSB[currWI].offset3569.sum" = add i64 %CurrSBIndex..0, 11208
  %949 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3569.sum"
  %950 = bitcast i8* %949 to double*
  %"&pSB[currWI].offset3641.sum" = add i64 %CurrSBIndex..0, 11336
  %951 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3641.sum"
  %952 = bitcast i8* %951 to double*
  %"&pSB[currWI].offset3713.sum" = add i64 %CurrSBIndex..0, 11464
  %953 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3713.sum"
  %954 = bitcast i8* %953 to double*
  %"&pSB[currWI].offset3785.sum" = add i64 %CurrSBIndex..0, 11592
  %955 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3785.sum"
  %956 = bitcast i8* %955 to double*
  %"&pSB[currWI].offset3857.sum" = add i64 %CurrSBIndex..0, 11720
  %957 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3857.sum"
  %958 = bitcast i8* %957 to double*
  %"&pSB[currWI].offset3929.sum" = add i64 %CurrSBIndex..0, 11848
  %959 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3929.sum"
  %960 = bitcast i8* %959 to double*
  %"&pSB[currWI].offset2845.sum" = add i64 %CurrSBIndex..0, 9936
  %961 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2845.sum"
  %962 = bitcast i8* %961 to double*
  %"&pSB[currWI].offset2917.sum" = add i64 %CurrSBIndex..0, 10064
  %963 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2917.sum"
  %964 = bitcast i8* %963 to double*
  %"&pSB[currWI].offset2989.sum" = add i64 %CurrSBIndex..0, 10192
  %965 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2989.sum"
  %966 = bitcast i8* %965 to double*
  %"&pSB[currWI].offset3061.sum" = add i64 %CurrSBIndex..0, 10320
  %967 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3061.sum"
  %968 = bitcast i8* %967 to double*
  %"&pSB[currWI].offset3133.sum" = add i64 %CurrSBIndex..0, 10448
  %969 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3133.sum"
  %970 = bitcast i8* %969 to double*
  %"&pSB[currWI].offset3205.sum" = add i64 %CurrSBIndex..0, 10576
  %971 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3205.sum"
  %972 = bitcast i8* %971 to double*
  %"&pSB[currWI].offset3277.sum" = add i64 %CurrSBIndex..0, 10704
  %973 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3277.sum"
  %974 = bitcast i8* %973 to double*
  %"&pSB[currWI].offset3349.sum" = add i64 %CurrSBIndex..0, 10832
  %975 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3349.sum"
  %976 = bitcast i8* %975 to double*
  %"&pSB[currWI].offset3421.sum" = add i64 %CurrSBIndex..0, 10960
  %977 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3421.sum"
  %978 = bitcast i8* %977 to double*
  %"&pSB[currWI].offset3493.sum" = add i64 %CurrSBIndex..0, 11088
  %979 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3493.sum"
  %980 = bitcast i8* %979 to double*
  %"&pSB[currWI].offset3565.sum" = add i64 %CurrSBIndex..0, 11216
  %981 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3565.sum"
  %982 = bitcast i8* %981 to double*
  %"&pSB[currWI].offset3637.sum" = add i64 %CurrSBIndex..0, 11344
  %983 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3637.sum"
  %984 = bitcast i8* %983 to double*
  %"&pSB[currWI].offset3709.sum" = add i64 %CurrSBIndex..0, 11472
  %985 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3709.sum"
  %986 = bitcast i8* %985 to double*
  %"&pSB[currWI].offset3781.sum" = add i64 %CurrSBIndex..0, 11600
  %987 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3781.sum"
  %988 = bitcast i8* %987 to double*
  %"&pSB[currWI].offset3853.sum" = add i64 %CurrSBIndex..0, 11728
  %989 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3853.sum"
  %990 = bitcast i8* %989 to double*
  %"&pSB[currWI].offset3925.sum" = add i64 %CurrSBIndex..0, 11856
  %991 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3925.sum"
  %992 = bitcast i8* %991 to double*
  %"&pSB[currWI].offset2841.sum" = add i64 %CurrSBIndex..0, 9944
  %993 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2841.sum"
  %994 = bitcast i8* %993 to double*
  %"&pSB[currWI].offset2913.sum" = add i64 %CurrSBIndex..0, 10072
  %995 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2913.sum"
  %996 = bitcast i8* %995 to double*
  %"&pSB[currWI].offset2985.sum" = add i64 %CurrSBIndex..0, 10200
  %997 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2985.sum"
  %998 = bitcast i8* %997 to double*
  %"&pSB[currWI].offset3057.sum" = add i64 %CurrSBIndex..0, 10328
  %999 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3057.sum"
  %1000 = bitcast i8* %999 to double*
  %"&pSB[currWI].offset3129.sum" = add i64 %CurrSBIndex..0, 10456
  %1001 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3129.sum"
  %1002 = bitcast i8* %1001 to double*
  %"&pSB[currWI].offset3201.sum" = add i64 %CurrSBIndex..0, 10584
  %1003 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3201.sum"
  %1004 = bitcast i8* %1003 to double*
  %"&pSB[currWI].offset3273.sum" = add i64 %CurrSBIndex..0, 10712
  %1005 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3273.sum"
  %1006 = bitcast i8* %1005 to double*
  %"&pSB[currWI].offset3345.sum" = add i64 %CurrSBIndex..0, 10840
  %1007 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3345.sum"
  %1008 = bitcast i8* %1007 to double*
  %"&pSB[currWI].offset3417.sum" = add i64 %CurrSBIndex..0, 10968
  %1009 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3417.sum"
  %1010 = bitcast i8* %1009 to double*
  %"&pSB[currWI].offset3489.sum" = add i64 %CurrSBIndex..0, 11096
  %1011 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3489.sum"
  %1012 = bitcast i8* %1011 to double*
  %"&pSB[currWI].offset3561.sum" = add i64 %CurrSBIndex..0, 11224
  %1013 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3561.sum"
  %1014 = bitcast i8* %1013 to double*
  %"&pSB[currWI].offset3633.sum" = add i64 %CurrSBIndex..0, 11352
  %1015 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3633.sum"
  %1016 = bitcast i8* %1015 to double*
  %"&pSB[currWI].offset3705.sum" = add i64 %CurrSBIndex..0, 11480
  %1017 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3705.sum"
  %1018 = bitcast i8* %1017 to double*
  %"&pSB[currWI].offset3777.sum" = add i64 %CurrSBIndex..0, 11608
  %1019 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3777.sum"
  %1020 = bitcast i8* %1019 to double*
  %"&pSB[currWI].offset3849.sum" = add i64 %CurrSBIndex..0, 11736
  %1021 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3849.sum"
  %1022 = bitcast i8* %1021 to double*
  %"&pSB[currWI].offset3921.sum" = add i64 %CurrSBIndex..0, 11864
  %1023 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3921.sum"
  %1024 = bitcast i8* %1023 to double*
  %"&pSB[currWI].offset2837.sum" = add i64 %CurrSBIndex..0, 9952
  %1025 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2837.sum"
  %1026 = bitcast i8* %1025 to double*
  %"&pSB[currWI].offset2909.sum" = add i64 %CurrSBIndex..0, 10080
  %1027 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2909.sum"
  %1028 = bitcast i8* %1027 to double*
  %"&pSB[currWI].offset2981.sum" = add i64 %CurrSBIndex..0, 10208
  %1029 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2981.sum"
  %1030 = bitcast i8* %1029 to double*
  %"&pSB[currWI].offset3053.sum" = add i64 %CurrSBIndex..0, 10336
  %1031 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3053.sum"
  %1032 = bitcast i8* %1031 to double*
  %"&pSB[currWI].offset3125.sum" = add i64 %CurrSBIndex..0, 10464
  %1033 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3125.sum"
  %1034 = bitcast i8* %1033 to double*
  %"&pSB[currWI].offset3197.sum" = add i64 %CurrSBIndex..0, 10592
  %1035 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3197.sum"
  %1036 = bitcast i8* %1035 to double*
  %"&pSB[currWI].offset3269.sum" = add i64 %CurrSBIndex..0, 10720
  %1037 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3269.sum"
  %1038 = bitcast i8* %1037 to double*
  %"&pSB[currWI].offset3341.sum" = add i64 %CurrSBIndex..0, 10848
  %1039 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3341.sum"
  %1040 = bitcast i8* %1039 to double*
  %"&pSB[currWI].offset3413.sum" = add i64 %CurrSBIndex..0, 10976
  %1041 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3413.sum"
  %1042 = bitcast i8* %1041 to double*
  %"&pSB[currWI].offset3485.sum" = add i64 %CurrSBIndex..0, 11104
  %1043 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3485.sum"
  %1044 = bitcast i8* %1043 to double*
  %"&pSB[currWI].offset3557.sum" = add i64 %CurrSBIndex..0, 11232
  %1045 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3557.sum"
  %1046 = bitcast i8* %1045 to double*
  %"&pSB[currWI].offset3629.sum" = add i64 %CurrSBIndex..0, 11360
  %1047 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3629.sum"
  %1048 = bitcast i8* %1047 to double*
  %"&pSB[currWI].offset3701.sum" = add i64 %CurrSBIndex..0, 11488
  %1049 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3701.sum"
  %1050 = bitcast i8* %1049 to double*
  %"&pSB[currWI].offset3773.sum" = add i64 %CurrSBIndex..0, 11616
  %1051 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3773.sum"
  %1052 = bitcast i8* %1051 to double*
  %"&pSB[currWI].offset3845.sum" = add i64 %CurrSBIndex..0, 11744
  %1053 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3845.sum"
  %1054 = bitcast i8* %1053 to double*
  %"&pSB[currWI].offset3917.sum" = add i64 %CurrSBIndex..0, 11872
  %1055 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3917.sum"
  %1056 = bitcast i8* %1055 to double*
  %"&pSB[currWI].offset2833.sum" = add i64 %CurrSBIndex..0, 9960
  %1057 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2833.sum"
  %1058 = bitcast i8* %1057 to double*
  %"&pSB[currWI].offset2905.sum" = add i64 %CurrSBIndex..0, 10088
  %1059 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2905.sum"
  %1060 = bitcast i8* %1059 to double*
  %"&pSB[currWI].offset2977.sum" = add i64 %CurrSBIndex..0, 10216
  %1061 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2977.sum"
  %1062 = bitcast i8* %1061 to double*
  %"&pSB[currWI].offset3049.sum" = add i64 %CurrSBIndex..0, 10344
  %1063 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3049.sum"
  %1064 = bitcast i8* %1063 to double*
  %"&pSB[currWI].offset3121.sum" = add i64 %CurrSBIndex..0, 10472
  %1065 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3121.sum"
  %1066 = bitcast i8* %1065 to double*
  %"&pSB[currWI].offset3193.sum" = add i64 %CurrSBIndex..0, 10600
  %1067 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3193.sum"
  %1068 = bitcast i8* %1067 to double*
  %"&pSB[currWI].offset3265.sum" = add i64 %CurrSBIndex..0, 10728
  %1069 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3265.sum"
  %1070 = bitcast i8* %1069 to double*
  %"&pSB[currWI].offset3337.sum" = add i64 %CurrSBIndex..0, 10856
  %1071 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3337.sum"
  %1072 = bitcast i8* %1071 to double*
  %"&pSB[currWI].offset3409.sum" = add i64 %CurrSBIndex..0, 10984
  %1073 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3409.sum"
  %1074 = bitcast i8* %1073 to double*
  %"&pSB[currWI].offset3481.sum" = add i64 %CurrSBIndex..0, 11112
  %1075 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3481.sum"
  %1076 = bitcast i8* %1075 to double*
  %"&pSB[currWI].offset3553.sum" = add i64 %CurrSBIndex..0, 11240
  %1077 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3553.sum"
  %1078 = bitcast i8* %1077 to double*
  %"&pSB[currWI].offset3625.sum" = add i64 %CurrSBIndex..0, 11368
  %1079 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3625.sum"
  %1080 = bitcast i8* %1079 to double*
  %"&pSB[currWI].offset3697.sum" = add i64 %CurrSBIndex..0, 11496
  %1081 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3697.sum"
  %1082 = bitcast i8* %1081 to double*
  %"&pSB[currWI].offset3769.sum" = add i64 %CurrSBIndex..0, 11624
  %1083 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3769.sum"
  %1084 = bitcast i8* %1083 to double*
  %"&pSB[currWI].offset3841.sum" = add i64 %CurrSBIndex..0, 11752
  %1085 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3841.sum"
  %1086 = bitcast i8* %1085 to double*
  %"&pSB[currWI].offset3913.sum" = add i64 %CurrSBIndex..0, 11880
  %1087 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3913.sum"
  %1088 = bitcast i8* %1087 to double*
  %"&pSB[currWI].offset2829.sum" = add i64 %CurrSBIndex..0, 9968
  %1089 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2829.sum"
  %1090 = bitcast i8* %1089 to double*
  %"&pSB[currWI].offset2901.sum" = add i64 %CurrSBIndex..0, 10096
  %1091 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2901.sum"
  %1092 = bitcast i8* %1091 to double*
  %"&pSB[currWI].offset2973.sum" = add i64 %CurrSBIndex..0, 10224
  %1093 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2973.sum"
  %1094 = bitcast i8* %1093 to double*
  %"&pSB[currWI].offset3045.sum" = add i64 %CurrSBIndex..0, 10352
  %1095 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3045.sum"
  %1096 = bitcast i8* %1095 to double*
  %"&pSB[currWI].offset3117.sum" = add i64 %CurrSBIndex..0, 10480
  %1097 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3117.sum"
  %1098 = bitcast i8* %1097 to double*
  %"&pSB[currWI].offset3189.sum" = add i64 %CurrSBIndex..0, 10608
  %1099 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3189.sum"
  %1100 = bitcast i8* %1099 to double*
  %"&pSB[currWI].offset3261.sum" = add i64 %CurrSBIndex..0, 10736
  %1101 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3261.sum"
  %1102 = bitcast i8* %1101 to double*
  %"&pSB[currWI].offset3333.sum" = add i64 %CurrSBIndex..0, 10864
  %1103 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3333.sum"
  %1104 = bitcast i8* %1103 to double*
  %"&pSB[currWI].offset3405.sum" = add i64 %CurrSBIndex..0, 10992
  %1105 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3405.sum"
  %1106 = bitcast i8* %1105 to double*
  %"&pSB[currWI].offset3477.sum" = add i64 %CurrSBIndex..0, 11120
  %1107 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3477.sum"
  %1108 = bitcast i8* %1107 to double*
  %"&pSB[currWI].offset3549.sum" = add i64 %CurrSBIndex..0, 11248
  %1109 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3549.sum"
  %1110 = bitcast i8* %1109 to double*
  %"&pSB[currWI].offset3621.sum" = add i64 %CurrSBIndex..0, 11376
  %1111 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3621.sum"
  %1112 = bitcast i8* %1111 to double*
  %"&pSB[currWI].offset3693.sum" = add i64 %CurrSBIndex..0, 11504
  %1113 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3693.sum"
  %1114 = bitcast i8* %1113 to double*
  %"&pSB[currWI].offset3765.sum" = add i64 %CurrSBIndex..0, 11632
  %1115 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3765.sum"
  %1116 = bitcast i8* %1115 to double*
  %"&pSB[currWI].offset3837.sum" = add i64 %CurrSBIndex..0, 11760
  %1117 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3837.sum"
  %1118 = bitcast i8* %1117 to double*
  %"&pSB[currWI].offset3909.sum" = add i64 %CurrSBIndex..0, 11888
  %1119 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3909.sum"
  %1120 = bitcast i8* %1119 to double*
  %"&pSB[currWI].offset2825.sum" = add i64 %CurrSBIndex..0, 9976
  %1121 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2825.sum"
  %1122 = bitcast i8* %1121 to double*
  %"&pSB[currWI].offset2897.sum" = add i64 %CurrSBIndex..0, 10104
  %1123 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2897.sum"
  %1124 = bitcast i8* %1123 to double*
  %"&pSB[currWI].offset2969.sum" = add i64 %CurrSBIndex..0, 10232
  %1125 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2969.sum"
  %1126 = bitcast i8* %1125 to double*
  %"&pSB[currWI].offset3041.sum" = add i64 %CurrSBIndex..0, 10360
  %1127 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3041.sum"
  %1128 = bitcast i8* %1127 to double*
  %"&pSB[currWI].offset3113.sum" = add i64 %CurrSBIndex..0, 10488
  %1129 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3113.sum"
  %1130 = bitcast i8* %1129 to double*
  %"&pSB[currWI].offset3185.sum" = add i64 %CurrSBIndex..0, 10616
  %1131 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3185.sum"
  %1132 = bitcast i8* %1131 to double*
  %"&pSB[currWI].offset3257.sum" = add i64 %CurrSBIndex..0, 10744
  %1133 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3257.sum"
  %1134 = bitcast i8* %1133 to double*
  %"&pSB[currWI].offset3329.sum" = add i64 %CurrSBIndex..0, 10872
  %1135 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3329.sum"
  %1136 = bitcast i8* %1135 to double*
  %"&pSB[currWI].offset3401.sum" = add i64 %CurrSBIndex..0, 11000
  %1137 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3401.sum"
  %1138 = bitcast i8* %1137 to double*
  %"&pSB[currWI].offset3473.sum" = add i64 %CurrSBIndex..0, 11128
  %1139 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3473.sum"
  %1140 = bitcast i8* %1139 to double*
  %"&pSB[currWI].offset3545.sum" = add i64 %CurrSBIndex..0, 11256
  %1141 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3545.sum"
  %1142 = bitcast i8* %1141 to double*
  %"&pSB[currWI].offset3617.sum" = add i64 %CurrSBIndex..0, 11384
  %1143 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3617.sum"
  %1144 = bitcast i8* %1143 to double*
  %"&pSB[currWI].offset3689.sum" = add i64 %CurrSBIndex..0, 11512
  %1145 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3689.sum"
  %1146 = bitcast i8* %1145 to double*
  %"&pSB[currWI].offset3761.sum" = add i64 %CurrSBIndex..0, 11640
  %1147 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3761.sum"
  %1148 = bitcast i8* %1147 to double*
  %"&pSB[currWI].offset3833.sum" = add i64 %CurrSBIndex..0, 11768
  %1149 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3833.sum"
  %1150 = bitcast i8* %1149 to double*
  %"&pSB[currWI].offset3905.sum" = add i64 %CurrSBIndex..0, 11896
  %1151 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3905.sum"
  %1152 = bitcast i8* %1151 to double*
  %"&pSB[currWI].offset2821.sum" = add i64 %CurrSBIndex..0, 9984
  %1153 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2821.sum"
  %1154 = bitcast i8* %1153 to double*
  %"&pSB[currWI].offset2893.sum" = add i64 %CurrSBIndex..0, 10112
  %1155 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2893.sum"
  %1156 = bitcast i8* %1155 to double*
  %"&pSB[currWI].offset2965.sum" = add i64 %CurrSBIndex..0, 10240
  %1157 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2965.sum"
  %1158 = bitcast i8* %1157 to double*
  %"&pSB[currWI].offset3037.sum" = add i64 %CurrSBIndex..0, 10368
  %1159 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3037.sum"
  %1160 = bitcast i8* %1159 to double*
  %"&pSB[currWI].offset3109.sum" = add i64 %CurrSBIndex..0, 10496
  %1161 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3109.sum"
  %1162 = bitcast i8* %1161 to double*
  %"&pSB[currWI].offset3181.sum" = add i64 %CurrSBIndex..0, 10624
  %1163 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3181.sum"
  %1164 = bitcast i8* %1163 to double*
  %"&pSB[currWI].offset3253.sum" = add i64 %CurrSBIndex..0, 10752
  %1165 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3253.sum"
  %1166 = bitcast i8* %1165 to double*
  %"&pSB[currWI].offset3325.sum" = add i64 %CurrSBIndex..0, 10880
  %1167 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3325.sum"
  %1168 = bitcast i8* %1167 to double*
  %"&pSB[currWI].offset3397.sum" = add i64 %CurrSBIndex..0, 11008
  %1169 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3397.sum"
  %1170 = bitcast i8* %1169 to double*
  %"&pSB[currWI].offset3469.sum" = add i64 %CurrSBIndex..0, 11136
  %1171 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3469.sum"
  %1172 = bitcast i8* %1171 to double*
  %"&pSB[currWI].offset3541.sum" = add i64 %CurrSBIndex..0, 11264
  %1173 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3541.sum"
  %1174 = bitcast i8* %1173 to double*
  %"&pSB[currWI].offset3613.sum" = add i64 %CurrSBIndex..0, 11392
  %1175 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3613.sum"
  %1176 = bitcast i8* %1175 to double*
  %"&pSB[currWI].offset3685.sum" = add i64 %CurrSBIndex..0, 11520
  %1177 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3685.sum"
  %1178 = bitcast i8* %1177 to double*
  %"&pSB[currWI].offset3757.sum" = add i64 %CurrSBIndex..0, 11648
  %1179 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3757.sum"
  %1180 = bitcast i8* %1179 to double*
  %"&pSB[currWI].offset3829.sum" = add i64 %CurrSBIndex..0, 11776
  %1181 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3829.sum"
  %1182 = bitcast i8* %1181 to double*
  %"&pSB[currWI].offset3901.sum" = add i64 %CurrSBIndex..0, 11904
  %1183 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3901.sum"
  %1184 = bitcast i8* %1183 to double*
  %"&pSB[currWI].offset2817.sum" = add i64 %CurrSBIndex..0, 9992
  %1185 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2817.sum"
  %1186 = bitcast i8* %1185 to double*
  %"&pSB[currWI].offset2889.sum" = add i64 %CurrSBIndex..0, 10120
  %1187 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2889.sum"
  %1188 = bitcast i8* %1187 to double*
  %"&pSB[currWI].offset2961.sum" = add i64 %CurrSBIndex..0, 10248
  %1189 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset2961.sum"
  %1190 = bitcast i8* %1189 to double*
  %"&pSB[currWI].offset3033.sum" = add i64 %CurrSBIndex..0, 10376
  %1191 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3033.sum"
  %1192 = bitcast i8* %1191 to double*
  %"&pSB[currWI].offset3105.sum" = add i64 %CurrSBIndex..0, 10504
  %1193 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3105.sum"
  %1194 = bitcast i8* %1193 to double*
  %"&pSB[currWI].offset3177.sum" = add i64 %CurrSBIndex..0, 10632
  %1195 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3177.sum"
  %1196 = bitcast i8* %1195 to double*
  %"&pSB[currWI].offset3249.sum" = add i64 %CurrSBIndex..0, 10760
  %1197 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3249.sum"
  %1198 = bitcast i8* %1197 to double*
  %"&pSB[currWI].offset3321.sum" = add i64 %CurrSBIndex..0, 10888
  %1199 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3321.sum"
  %1200 = bitcast i8* %1199 to double*
  %"&pSB[currWI].offset3393.sum" = add i64 %CurrSBIndex..0, 11016
  %1201 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3393.sum"
  %1202 = bitcast i8* %1201 to double*
  %"&pSB[currWI].offset3465.sum" = add i64 %CurrSBIndex..0, 11144
  %1203 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3465.sum"
  %1204 = bitcast i8* %1203 to double*
  %"&pSB[currWI].offset3537.sum" = add i64 %CurrSBIndex..0, 11272
  %1205 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3537.sum"
  %1206 = bitcast i8* %1205 to double*
  %"&pSB[currWI].offset3609.sum" = add i64 %CurrSBIndex..0, 11400
  %1207 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3609.sum"
  %1208 = bitcast i8* %1207 to double*
  %"&pSB[currWI].offset3681.sum" = add i64 %CurrSBIndex..0, 11528
  %1209 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3681.sum"
  %1210 = bitcast i8* %1209 to double*
  %"&pSB[currWI].offset3753.sum" = add i64 %CurrSBIndex..0, 11656
  %1211 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3753.sum"
  %1212 = bitcast i8* %1211 to double*
  %"&pSB[currWI].offset3825.sum" = add i64 %CurrSBIndex..0, 11784
  %1213 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3825.sum"
  %1214 = bitcast i8* %1213 to double*
  %"&pSB[currWI].offset3897.sum" = add i64 %CurrSBIndex..0, 11912
  %1215 = getelementptr inbounds i8* %pSpecialBuf, i64 %"&pSB[currWI].offset3897.sum"
  %1216 = bitcast i8* %1215 to double*
  %tmp50 = shl i64 %521, 4
  %tmp51 = trunc i64 %tmp50 to i32
  %tmp52 = add i32 %518, %tmp51
  %tmp53 = mul i32 %tmp52, %ldb
  %temp = insertelement <16 x i32> undef, i32 %tmp53, i32 0
  %vector = shufflevector <16 x i32> %temp, <16 x i32> undef, <16 x i32> zeroinitializer
  %tmp5516 = add <16 x i32> %vector, %515
  %tmp5617 = sext <16 x i32> %tmp5516 to <16 x i64>
  %"&(pSB[currWI].offset)2157" = add nuw i64 %CurrSBIndex..0, 6528
  %"&pSB[currWI].offset2158" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2157"
  %CastToValueType2159 = bitcast i8* %"&pSB[currWI].offset2158" to <16 x i64>*
  store <16 x i64> %tmp5617, <16 x i64>* %CastToValueType2159, align 128
  %tmp6120 = add <16 x i64> %vector19, %tmp5617
  %"&(pSB[currWI].offset)2166" = add nuw i64 %CurrSBIndex..0, 6656
  %"&pSB[currWI].offset2167" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2166"
  %CastToValueType2168 = bitcast i8* %"&pSB[currWI].offset2167" to <16 x i64>*
  store <16 x i64> %tmp6120, <16 x i64>* %CastToValueType2168, align 128
  %tmp6623 = add <16 x i64> %vector22, %tmp5617
  %"&(pSB[currWI].offset)2175" = add nuw i64 %CurrSBIndex..0, 6784
  %"&pSB[currWI].offset2176" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2175"
  %CastToValueType2177 = bitcast i8* %"&pSB[currWI].offset2176" to <16 x i64>*
  store <16 x i64> %tmp6623, <16 x i64>* %CastToValueType2177, align 128
  %tmp7126 = add <16 x i64> %vector25, %tmp5617
  %"&(pSB[currWI].offset)2184" = add nuw i64 %CurrSBIndex..0, 6912
  %"&pSB[currWI].offset2185" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2184"
  %CastToValueType2186 = bitcast i8* %"&pSB[currWI].offset2185" to <16 x i64>*
  store <16 x i64> %tmp7126, <16 x i64>* %CastToValueType2186, align 128
  %tmp78 = shl i32 %518, 4
  %"&(pSB[currWI].offset)2193" = add nuw i64 %CurrSBIndex..0, 7040
  %"&pSB[currWI].offset2194" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2193"
  %CastToValueType2195 = bitcast i8* %"&pSB[currWI].offset2194" to i32*
  store i32 %tmp78, i32* %CastToValueType2195, align 4
  %temp27 = insertelement <16 x i32> undef, i32 %tmp78, i32 0
  %vector28 = shufflevector <16 x i32> %temp27, <16 x i32> undef, <16 x i32> zeroinitializer
  %tmp7929 = add <16 x i32> %vector28, %515
  %tmp80 = shl i64 %519, 6
  %tmp81 = trunc i64 %tmp80 to i32
  %temp30 = insertelement <16 x i32> undef, i32 %tmp81, i32 0
  %vector31 = shufflevector <16 x i32> %temp30, <16 x i32> undef, <16 x i32> zeroinitializer
  %tmp8232 = add <16 x i32> %tmp7929, %vector31
  %tmp8333 = sext <16 x i32> %tmp8232 to <16 x i64>
  %"&(pSB[currWI].offset)2202" = add nuw i64 %CurrSBIndex..0, 7168
  %"&pSB[currWI].offset2203" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2202"
  %CastToValueType2204 = bitcast i8* %"&pSB[currWI].offset2203" to <16 x i64>*
  store <16 x i64> %tmp8333, <16 x i64>* %CastToValueType2204, align 128
  %tmp8836 = add <16 x i64> %tmp8333, %vector35
  %"&(pSB[currWI].offset)2211" = add nuw i64 %CurrSBIndex..0, 7296
  %"&pSB[currWI].offset2212" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2211"
  %CastToValueType2213 = bitcast i8* %"&pSB[currWI].offset2212" to <16 x i64>*
  store <16 x i64> %tmp8836, <16 x i64>* %CastToValueType2213, align 128
  %tmp9439 = add <16 x i64> %tmp8333, %vector38
  %"&(pSB[currWI].offset)2220" = add nuw i64 %CurrSBIndex..0, 7424
  %"&pSB[currWI].offset2221" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2220"
  %CastToValueType2222 = bitcast i8* %"&pSB[currWI].offset2221" to <16 x i64>*
  store <16 x i64> %tmp9439, <16 x i64>* %CastToValueType2222, align 128
  %tmp9842 = add <16 x i64> %vector41, %tmp8333
  %"&(pSB[currWI].offset)2229" = add nuw i64 %CurrSBIndex..0, 7552
  %"&pSB[currWI].offset2230" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2229"
  %CastToValueType2231 = bitcast i8* %"&pSB[currWI].offset2230" to <16 x i64>*
  store <16 x i64> %tmp9842, <16 x i64>* %CastToValueType2231, align 128
  %tmp10545 = add <16 x i64> %vector44, %tmp8333
  %"&(pSB[currWI].offset)2238" = add nuw i64 %CurrSBIndex..0, 7680
  %"&pSB[currWI].offset2239" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2238"
  %CastToValueType2240 = bitcast i8* %"&pSB[currWI].offset2239" to <16 x i64>*
  store <16 x i64> %tmp10545, <16 x i64>* %CastToValueType2240, align 128
  %tmp11148 = add <16 x i64> %vector47, %tmp8333
  %"&(pSB[currWI].offset)2247" = add nuw i64 %CurrSBIndex..0, 7808
  %"&pSB[currWI].offset2248" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2247"
  %CastToValueType2249 = bitcast i8* %"&pSB[currWI].offset2248" to <16 x i64>*
  store <16 x i64> %tmp11148, <16 x i64>* %CastToValueType2249, align 128
  %tmp11551 = add <16 x i64> %vector50, %tmp8333
  %"&(pSB[currWI].offset)2256" = add nuw i64 %CurrSBIndex..0, 7936
  %"&pSB[currWI].offset2257" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2256"
  %CastToValueType2258 = bitcast i8* %"&pSB[currWI].offset2257" to <16 x i64>*
  store <16 x i64> %tmp11551, <16 x i64>* %CastToValueType2258, align 128
  %tmp11854 = add <16 x i64> %vector53, %tmp8333
  %"&(pSB[currWI].offset)2265" = add nuw i64 %CurrSBIndex..0, 8064
  %"&pSB[currWI].offset2266" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2265"
  %CastToValueType2267 = bitcast i8* %"&pSB[currWI].offset2266" to <16 x i64>*
  store <16 x i64> %tmp11854, <16 x i64>* %CastToValueType2267, align 128
  %tmp12357 = add <16 x i64> %vector56, %tmp8333
  %"&(pSB[currWI].offset)2274" = add nuw i64 %CurrSBIndex..0, 8192
  %"&pSB[currWI].offset2275" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2274"
  %CastToValueType2276 = bitcast i8* %"&pSB[currWI].offset2275" to <16 x i64>*
  store <16 x i64> %tmp12357, <16 x i64>* %CastToValueType2276, align 128
  %tmp12760 = add <16 x i64> %vector59, %tmp8333
  %"&(pSB[currWI].offset)2283" = add nuw i64 %CurrSBIndex..0, 8320
  %"&pSB[currWI].offset2284" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2283"
  %CastToValueType2285 = bitcast i8* %"&pSB[currWI].offset2284" to <16 x i64>*
  store <16 x i64> %tmp12760, <16 x i64>* %CastToValueType2285, align 128
  %tmp13163 = add <16 x i64> %vector62, %tmp8333
  %"&(pSB[currWI].offset)2292" = add nuw i64 %CurrSBIndex..0, 8448
  %"&pSB[currWI].offset2293" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2292"
  %CastToValueType2294 = bitcast i8* %"&pSB[currWI].offset2293" to <16 x i64>*
  store <16 x i64> %tmp13163, <16 x i64>* %CastToValueType2294, align 128
  %tmp13466 = add <16 x i64> %vector65, %tmp8333
  %"&(pSB[currWI].offset)2301" = add nuw i64 %CurrSBIndex..0, 8576
  %"&pSB[currWI].offset2302" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2301"
  %CastToValueType2303 = bitcast i8* %"&pSB[currWI].offset2302" to <16 x i64>*
  store <16 x i64> %tmp13466, <16 x i64>* %CastToValueType2303, align 128
  %tmp13869 = add <16 x i64> %vector68, %tmp8333
  %"&(pSB[currWI].offset)2310" = add nuw i64 %CurrSBIndex..0, 8704
  %"&pSB[currWI].offset2311" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2310"
  %CastToValueType2312 = bitcast i8* %"&pSB[currWI].offset2311" to <16 x i64>*
  store <16 x i64> %tmp13869, <16 x i64>* %CastToValueType2312, align 128
  %tmp14272 = add <16 x i64> %vector71, %tmp8333
  %"&(pSB[currWI].offset)2319" = add nuw i64 %CurrSBIndex..0, 8832
  %"&pSB[currWI].offset2320" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2319"
  %CastToValueType2321 = bitcast i8* %"&pSB[currWI].offset2320" to <16 x i64>*
  store <16 x i64> %tmp14272, <16 x i64>* %CastToValueType2321, align 128
  %tmp14675 = add <16 x i64> %vector74, %tmp8333
  %"&(pSB[currWI].offset)2328" = add nuw i64 %CurrSBIndex..0, 8960
  %"&pSB[currWI].offset2329" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2328"
  %CastToValueType2330 = bitcast i8* %"&pSB[currWI].offset2329" to <16 x i64>*
  store <16 x i64> %tmp14675, <16 x i64>* %CastToValueType2330, align 128
  %tmp14978 = add <16 x i64> %vector77, %tmp8333
  %"&(pSB[currWI].offset)2337" = add nuw i64 %CurrSBIndex..0, 9088
  %"&pSB[currWI].offset2338" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2337"
  %CastToValueType2339 = bitcast i8* %"&pSB[currWI].offset2338" to <16 x i64>*
  store <16 x i64> %tmp14978, <16 x i64>* %CastToValueType2339, align 128
  %tmp25 = mul i32 %tmp51, %ldc
  br label %.loopexit

.loopexit:                                        ; preds = %SyncBB4485, %SyncBB4486
  %currBarrier.1 = phi i32 [ %currBarrier.2, %SyncBB4486 ], [ %currBarrier.0.ph, %SyncBB4485 ]
  %CurrSBIndex..2 = phi i64 [ %CurrSBIndex..0, %SyncBB4486 ], [ %CurrSBIndex..1, %SyncBB4485 ]
  %CurrWI..2 = phi i64 [ %CurrWI..0, %SyncBB4486 ], [ %CurrWI..1, %SyncBB4485 ]
  %indvar44 = phi i64 [ 0, %SyncBB4486 ], [ %indvar.next45, %SyncBB4485 ]
  %"&(pSB[currWI].offset)2346" = add nuw i64 %CurrSBIndex..2, 9216
  %"&pSB[currWI].offset2347" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2346"
  %CastToValueType2348 = bitcast i8* %"&pSB[currWI].offset2347" to i64*
  store i64 %indvar44, i64* %CastToValueType2348, align 8
  %tmp46 = shl i64 %indvar44, 4
  %tmp47 = add i64 %tmp46, 16
  %tmp48 = trunc i64 %tmp47 to i32
  %"&(pSB[currWI].offset)2355" = add nuw i64 %CurrSBIndex..2, 9224
  %"&pSB[currWI].offset2356" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2355"
  %CastToValueType2357 = bitcast i8* %"&pSB[currWI].offset2356" to i32*
  store i32 %tmp48, i32* %CastToValueType2357, align 4
  %"&(pSB[currWI].offset)2161" = add nuw i64 %CurrSBIndex..2, 6528
  %"&pSB[currWI].offset2162" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2161"
  %CastToValueType2163 = bitcast i8* %"&pSB[currWI].offset2162" to <16 x i64>*
  %loadedValue2164 = load <16 x i64>* %CastToValueType2163, align 128
  %extract82.lhs = extractelement <16 x i64> %loadedValue2164, i32 0
  %extract82 = add i64 %extract82.lhs, %tmp46
  %1217 = getelementptr double addrspace(1)* %B, i64 %extract82
  %"&(pSB[currWI].offset)2170" = add nuw i64 %CurrSBIndex..2, 6656
  %"&pSB[currWI].offset2171" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2170"
  %CastToValueType2172 = bitcast i8* %"&pSB[currWI].offset2171" to <16 x i64>*
  %loadedValue2173 = load <16 x i64>* %CastToValueType2172, align 128
  %extract99.lhs = extractelement <16 x i64> %loadedValue2173, i32 0
  %extract99 = add i64 %extract99.lhs, %tmp46
  %1218 = getelementptr double addrspace(1)* %B, i64 %extract99
  %"&(pSB[currWI].offset)2179" = add nuw i64 %CurrSBIndex..2, 6784
  %"&pSB[currWI].offset2180" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2179"
  %CastToValueType2181 = bitcast i8* %"&pSB[currWI].offset2180" to <16 x i64>*
  %loadedValue2182 = load <16 x i64>* %CastToValueType2181, align 128
  %extract116.lhs = extractelement <16 x i64> %loadedValue2182, i32 0
  %extract116 = add i64 %extract116.lhs, %tmp46
  %1219 = getelementptr double addrspace(1)* %B, i64 %extract116
  %"&(pSB[currWI].offset)2188" = add nuw i64 %CurrSBIndex..2, 6912
  %"&pSB[currWI].offset2189" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2188"
  %CastToValueType2190 = bitcast i8* %"&pSB[currWI].offset2189" to <16 x i64>*
  %loadedValue2191 = load <16 x i64>* %CastToValueType2190, align 128
  %extract133.lhs = extractelement <16 x i64> %loadedValue2191, i32 0
  %extract133 = add i64 %extract133.lhs, %tmp46
  %1220 = getelementptr double addrspace(1)* %B, i64 %extract133
  %tmp77 = mul i64 %tmp76, %indvar44
  %"&(pSB[currWI].offset)2242" = add nuw i64 %CurrSBIndex..2, 7680
  %"&pSB[currWI].offset2243" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2242"
  %CastToValueType2244 = bitcast i8* %"&pSB[currWI].offset2243" to <16 x i64>*
  %loadedValue2245 = load <16 x i64>* %CastToValueType2244, align 128
  %extract152.lhs = extractelement <16 x i64> %loadedValue2245, i32 0
  %extract152 = add i64 %extract152.lhs, %tmp77
  %1221 = getelementptr double addrspace(1)* %A, i64 %extract152
  %"&(pSB[currWI].offset)2364" = add nuw i64 %CurrSBIndex..2, 9232
  %"&pSB[currWI].offset2365" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2364"
  %CastToValueType2366 = bitcast i8* %"&pSB[currWI].offset2365" to double addrspace(1)**
  store double addrspace(1)* %1221, double addrspace(1)** %CastToValueType2366, align 8
  %"&(pSB[currWI].offset)2251" = add nuw i64 %CurrSBIndex..2, 7808
  %"&pSB[currWI].offset2252" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2251"
  %CastToValueType2253 = bitcast i8* %"&pSB[currWI].offset2252" to <16 x i64>*
  %loadedValue2254 = load <16 x i64>* %CastToValueType2253, align 128
  %extract169.lhs = extractelement <16 x i64> %loadedValue2254, i32 0
  %extract169 = add i64 %extract169.lhs, %tmp77
  %1222 = getelementptr double addrspace(1)* %A, i64 %extract169
  %"&(pSB[currWI].offset)2373" = add nuw i64 %CurrSBIndex..2, 9240
  %"&pSB[currWI].offset2374" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2373"
  %CastToValueType2375 = bitcast i8* %"&pSB[currWI].offset2374" to double addrspace(1)**
  store double addrspace(1)* %1222, double addrspace(1)** %CastToValueType2375, align 8
  %"&(pSB[currWI].offset)2260" = add nuw i64 %CurrSBIndex..2, 7936
  %"&pSB[currWI].offset2261" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2260"
  %CastToValueType2262 = bitcast i8* %"&pSB[currWI].offset2261" to <16 x i64>*
  %loadedValue2263 = load <16 x i64>* %CastToValueType2262, align 128
  %extract186.lhs = extractelement <16 x i64> %loadedValue2263, i32 0
  %extract186 = add i64 %extract186.lhs, %tmp77
  %1223 = getelementptr double addrspace(1)* %A, i64 %extract186
  %"&(pSB[currWI].offset)2382" = add nuw i64 %CurrSBIndex..2, 9248
  %"&pSB[currWI].offset2383" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2382"
  %CastToValueType2384 = bitcast i8* %"&pSB[currWI].offset2383" to double addrspace(1)**
  store double addrspace(1)* %1223, double addrspace(1)** %CastToValueType2384, align 8
  %"&(pSB[currWI].offset)2269" = add nuw i64 %CurrSBIndex..2, 8064
  %"&pSB[currWI].offset2270" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2269"
  %CastToValueType2271 = bitcast i8* %"&pSB[currWI].offset2270" to <16 x i64>*
  %loadedValue2272 = load <16 x i64>* %CastToValueType2271, align 128
  %extract203.lhs = extractelement <16 x i64> %loadedValue2272, i32 0
  %extract203 = add i64 %extract203.lhs, %tmp77
  %1224 = getelementptr double addrspace(1)* %A, i64 %extract203
  %"&(pSB[currWI].offset)2391" = add nuw i64 %CurrSBIndex..2, 9256
  %"&pSB[currWI].offset2392" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2391"
  %CastToValueType2393 = bitcast i8* %"&pSB[currWI].offset2392" to double addrspace(1)**
  store double addrspace(1)* %1224, double addrspace(1)** %CastToValueType2393, align 8
  %"&(pSB[currWI].offset)2278" = add nuw i64 %CurrSBIndex..2, 8192
  %"&pSB[currWI].offset2279" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2278"
  %CastToValueType2280 = bitcast i8* %"&pSB[currWI].offset2279" to <16 x i64>*
  %loadedValue2281 = load <16 x i64>* %CastToValueType2280, align 128
  %extract220.lhs = extractelement <16 x i64> %loadedValue2281, i32 0
  %extract220 = add i64 %extract220.lhs, %tmp77
  %1225 = getelementptr double addrspace(1)* %A, i64 %extract220
  %"&(pSB[currWI].offset)2400" = add nuw i64 %CurrSBIndex..2, 9264
  %"&pSB[currWI].offset2401" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2400"
  %CastToValueType2402 = bitcast i8* %"&pSB[currWI].offset2401" to double addrspace(1)**
  store double addrspace(1)* %1225, double addrspace(1)** %CastToValueType2402, align 8
  %"&(pSB[currWI].offset)2287" = add nuw i64 %CurrSBIndex..2, 8320
  %"&pSB[currWI].offset2288" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2287"
  %CastToValueType2289 = bitcast i8* %"&pSB[currWI].offset2288" to <16 x i64>*
  %loadedValue2290 = load <16 x i64>* %CastToValueType2289, align 128
  %extract237.lhs = extractelement <16 x i64> %loadedValue2290, i32 0
  %extract237 = add i64 %extract237.lhs, %tmp77
  %1226 = getelementptr double addrspace(1)* %A, i64 %extract237
  %"&(pSB[currWI].offset)2409" = add nuw i64 %CurrSBIndex..2, 9272
  %"&pSB[currWI].offset2410" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2409"
  %CastToValueType2411 = bitcast i8* %"&pSB[currWI].offset2410" to double addrspace(1)**
  store double addrspace(1)* %1226, double addrspace(1)** %CastToValueType2411, align 8
  %"&(pSB[currWI].offset)2296" = add nuw i64 %CurrSBIndex..2, 8448
  %"&pSB[currWI].offset2297" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2296"
  %CastToValueType2298 = bitcast i8* %"&pSB[currWI].offset2297" to <16 x i64>*
  %loadedValue2299 = load <16 x i64>* %CastToValueType2298, align 128
  %extract254.lhs = extractelement <16 x i64> %loadedValue2299, i32 0
  %extract254 = add i64 %extract254.lhs, %tmp77
  %1227 = getelementptr double addrspace(1)* %A, i64 %extract254
  %"&(pSB[currWI].offset)2418" = add nuw i64 %CurrSBIndex..2, 9280
  %"&pSB[currWI].offset2419" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2418"
  %CastToValueType2420 = bitcast i8* %"&pSB[currWI].offset2419" to double addrspace(1)**
  store double addrspace(1)* %1227, double addrspace(1)** %CastToValueType2420, align 8
  %"&(pSB[currWI].offset)2305" = add nuw i64 %CurrSBIndex..2, 8576
  %"&pSB[currWI].offset2306" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2305"
  %CastToValueType2307 = bitcast i8* %"&pSB[currWI].offset2306" to <16 x i64>*
  %loadedValue2308 = load <16 x i64>* %CastToValueType2307, align 128
  %extract271.lhs = extractelement <16 x i64> %loadedValue2308, i32 0
  %extract271 = add i64 %extract271.lhs, %tmp77
  %1228 = getelementptr double addrspace(1)* %A, i64 %extract271
  %"&(pSB[currWI].offset)2427" = add nuw i64 %CurrSBIndex..2, 9288
  %"&pSB[currWI].offset2428" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2427"
  %CastToValueType2429 = bitcast i8* %"&pSB[currWI].offset2428" to double addrspace(1)**
  store double addrspace(1)* %1228, double addrspace(1)** %CastToValueType2429, align 8
  %"&(pSB[currWI].offset)2314" = add nuw i64 %CurrSBIndex..2, 8704
  %"&pSB[currWI].offset2315" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2314"
  %CastToValueType2316 = bitcast i8* %"&pSB[currWI].offset2315" to <16 x i64>*
  %loadedValue2317 = load <16 x i64>* %CastToValueType2316, align 128
  %extract288.lhs = extractelement <16 x i64> %loadedValue2317, i32 0
  %extract288 = add i64 %extract288.lhs, %tmp77
  %1229 = getelementptr double addrspace(1)* %A, i64 %extract288
  %"&(pSB[currWI].offset)2436" = add nuw i64 %CurrSBIndex..2, 9296
  %"&pSB[currWI].offset2437" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2436"
  %CastToValueType2438 = bitcast i8* %"&pSB[currWI].offset2437" to double addrspace(1)**
  store double addrspace(1)* %1229, double addrspace(1)** %CastToValueType2438, align 8
  %"&(pSB[currWI].offset)2323" = add nuw i64 %CurrSBIndex..2, 8832
  %"&pSB[currWI].offset2324" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2323"
  %CastToValueType2325 = bitcast i8* %"&pSB[currWI].offset2324" to <16 x i64>*
  %loadedValue2326 = load <16 x i64>* %CastToValueType2325, align 128
  %extract305.lhs = extractelement <16 x i64> %loadedValue2326, i32 0
  %extract305 = add i64 %extract305.lhs, %tmp77
  %1230 = getelementptr double addrspace(1)* %A, i64 %extract305
  %"&(pSB[currWI].offset)2445" = add nuw i64 %CurrSBIndex..2, 9304
  %"&pSB[currWI].offset2446" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2445"
  %CastToValueType2447 = bitcast i8* %"&pSB[currWI].offset2446" to double addrspace(1)**
  store double addrspace(1)* %1230, double addrspace(1)** %CastToValueType2447, align 8
  %"&(pSB[currWI].offset)2332" = add nuw i64 %CurrSBIndex..2, 8960
  %"&pSB[currWI].offset2333" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2332"
  %CastToValueType2334 = bitcast i8* %"&pSB[currWI].offset2333" to <16 x i64>*
  %loadedValue2335 = load <16 x i64>* %CastToValueType2334, align 128
  %extract322.lhs = extractelement <16 x i64> %loadedValue2335, i32 0
  %extract322 = add i64 %extract322.lhs, %tmp77
  %1231 = getelementptr double addrspace(1)* %A, i64 %extract322
  %"&(pSB[currWI].offset)2454" = add nuw i64 %CurrSBIndex..2, 9312
  %"&pSB[currWI].offset2455" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2454"
  %CastToValueType2456 = bitcast i8* %"&pSB[currWI].offset2455" to double addrspace(1)**
  store double addrspace(1)* %1231, double addrspace(1)** %CastToValueType2456, align 8
  %"&(pSB[currWI].offset)2341" = add nuw i64 %CurrSBIndex..2, 9088
  %"&pSB[currWI].offset2342" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2341"
  %CastToValueType2343 = bitcast i8* %"&pSB[currWI].offset2342" to <16 x i64>*
  %loadedValue2344 = load <16 x i64>* %CastToValueType2343, align 128
  %extract339.lhs = extractelement <16 x i64> %loadedValue2344, i32 0
  %extract339 = add i64 %extract339.lhs, %tmp77
  %1232 = getelementptr double addrspace(1)* %A, i64 %extract339
  %"&(pSB[currWI].offset)2463" = add nuw i64 %CurrSBIndex..2, 9320
  %"&pSB[currWI].offset2464" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2463"
  %CastToValueType2465 = bitcast i8* %"&pSB[currWI].offset2464" to double addrspace(1)**
  store double addrspace(1)* %1232, double addrspace(1)** %CastToValueType2465, align 8
  %"&(pSB[currWI].offset)2206" = add nuw i64 %CurrSBIndex..2, 7168
  %"&pSB[currWI].offset2207" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2206"
  %CastToValueType2208 = bitcast i8* %"&pSB[currWI].offset2207" to <16 x i64>*
  %loadedValue2209 = load <16 x i64>* %CastToValueType2208, align 128
  %extract359.lhs = extractelement <16 x i64> %loadedValue2209, i32 0
  %extract359 = add i64 %extract359.lhs, %tmp77
  %"&(pSB[currWI].offset)2233" = add nuw i64 %CurrSBIndex..2, 7552
  %"&pSB[currWI].offset2234" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2233"
  %CastToValueType2235 = bitcast i8* %"&pSB[currWI].offset2234" to <16 x i64>*
  %loadedValue2236 = load <16 x i64>* %CastToValueType2235, align 128
  %extract375.lhs = extractelement <16 x i64> %loadedValue2236, i32 0
  %extract375 = add i64 %extract375.lhs, %tmp77
  %"&(pSB[currWI].offset)2224" = add nuw i64 %CurrSBIndex..2, 7424
  %"&pSB[currWI].offset2225" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2224"
  %CastToValueType2226 = bitcast i8* %"&pSB[currWI].offset2225" to <16 x i64>*
  %loadedValue2227 = load <16 x i64>* %CastToValueType2226, align 128
  %extract391.lhs = extractelement <16 x i64> %loadedValue2227, i32 0
  %extract391 = add i64 %extract391.lhs, %tmp77
  %"&(pSB[currWI].offset)2215" = add nuw i64 %CurrSBIndex..2, 7296
  %"&pSB[currWI].offset2216" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2215"
  %CastToValueType2217 = bitcast i8* %"&pSB[currWI].offset2216" to <16 x i64>*
  %loadedValue2218 = load <16 x i64>* %CastToValueType2217, align 128
  %extract407.lhs = extractelement <16 x i64> %loadedValue2218, i32 0
  %extract407 = add i64 %extract407.lhs, %tmp77
  %1233 = getelementptr double addrspace(1)* %A, i64 %extract359
  %1234 = getelementptr double addrspace(1)* %A, i64 %extract375
  %1235 = getelementptr double addrspace(1)* %A, i64 %extract391
  %1236 = getelementptr double addrspace(1)* %A, i64 %extract407
  %ptrTypeCast = bitcast double addrspace(1)* %1233 to <16 x double> addrspace(1)*
  %1237 = load <16 x double> addrspace(1)* %ptrTypeCast, align 8
  %"&(pSB[currWI].offset)2472" = add nuw i64 %CurrSBIndex..2, 9344
  %"&pSB[currWI].offset2473" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2472"
  %CastToValueType2474 = bitcast i8* %"&pSB[currWI].offset2473" to <16 x double>*
  store <16 x double> %1237, <16 x double>* %CastToValueType2474, align 128
  %ptrTypeCast423 = bitcast double addrspace(1)* %1234 to <16 x double> addrspace(1)*
  %1238 = load <16 x double> addrspace(1)* %ptrTypeCast423, align 8
  %"&(pSB[currWI].offset)2556" = add nuw i64 %CurrSBIndex..2, 9472
  %"&pSB[currWI].offset2557" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2556"
  %CastToValueType2558 = bitcast i8* %"&pSB[currWI].offset2557" to <16 x double>*
  store <16 x double> %1238, <16 x double>* %CastToValueType2558, align 128
  %ptrTypeCast424 = bitcast double addrspace(1)* %1235 to <16 x double> addrspace(1)*
  %1239 = load <16 x double> addrspace(1)* %ptrTypeCast424, align 8
  %"&(pSB[currWI].offset)2640" = add nuw i64 %CurrSBIndex..2, 9600
  %"&pSB[currWI].offset2641" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2640"
  %CastToValueType2642 = bitcast i8* %"&pSB[currWI].offset2641" to <16 x double>*
  store <16 x double> %1239, <16 x double>* %CastToValueType2642, align 128
  %ptrTypeCast425 = bitcast double addrspace(1)* %1236 to <16 x double> addrspace(1)*
  %1240 = load <16 x double> addrspace(1)* %ptrTypeCast425, align 8
  %"&(pSB[currWI].offset)2724" = add nuw i64 %CurrSBIndex..2, 9728
  %"&pSB[currWI].offset2725" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2724"
  %CastToValueType2726 = bitcast i8* %"&pSB[currWI].offset2725" to <16 x double>*
  store <16 x double> %1240, <16 x double>* %CastToValueType2726, align 128
  %ptrTypeCast426 = bitcast double addrspace(1)* %1217 to <16 x double> addrspace(1)*
  %1241 = load <16 x double> addrspace(1)* %ptrTypeCast426, align 8
  %extract427 = extractelement <16 x double> %1241, i32 0
  %extract428 = extractelement <16 x double> %1241, i32 1
  %extract429 = extractelement <16 x double> %1241, i32 2
  %extract430 = extractelement <16 x double> %1241, i32 3
  %extract431 = extractelement <16 x double> %1241, i32 4
  %extract432 = extractelement <16 x double> %1241, i32 5
  %extract433 = extractelement <16 x double> %1241, i32 6
  %extract434 = extractelement <16 x double> %1241, i32 7
  %extract435 = extractelement <16 x double> %1241, i32 8
  %extract436 = extractelement <16 x double> %1241, i32 9
  %extract437 = extractelement <16 x double> %1241, i32 10
  %extract438 = extractelement <16 x double> %1241, i32 11
  %extract439 = extractelement <16 x double> %1241, i32 12
  %extract440 = extractelement <16 x double> %1241, i32 13
  %extract441 = extractelement <16 x double> %1241, i32 14
  %extract442 = extractelement <16 x double> %1241, i32 15
  %"&(pSB[currWI].offset)1585" = add nuw i64 %CurrSBIndex..2, 6016
  %"&pSB[currWI].offset1586" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1585"
  %CastToValueType1587 = bitcast i8* %"&pSB[currWI].offset1586" to double addrspace(3)**
  %loadedValue1588 = load double addrspace(3)** %CastToValueType1587, align 8
  store double %extract427, double addrspace(3)* %loadedValue1588, align 8
  %"&(pSB[currWI].offset)1594" = add nuw i64 %CurrSBIndex..2, 6024
  %"&pSB[currWI].offset1595" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1594"
  %CastToValueType1596 = bitcast i8* %"&pSB[currWI].offset1595" to double addrspace(3)**
  %loadedValue1597 = load double addrspace(3)** %CastToValueType1596, align 8
  store double %extract428, double addrspace(3)* %loadedValue1597, align 8
  %"&(pSB[currWI].offset)1603" = add nuw i64 %CurrSBIndex..2, 6032
  %"&pSB[currWI].offset1604" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1603"
  %CastToValueType1605 = bitcast i8* %"&pSB[currWI].offset1604" to double addrspace(3)**
  %loadedValue1606 = load double addrspace(3)** %CastToValueType1605, align 8
  store double %extract429, double addrspace(3)* %loadedValue1606, align 8
  %"&(pSB[currWI].offset)1612" = add nuw i64 %CurrSBIndex..2, 6040
  %"&pSB[currWI].offset1613" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1612"
  %CastToValueType1614 = bitcast i8* %"&pSB[currWI].offset1613" to double addrspace(3)**
  %loadedValue1615 = load double addrspace(3)** %CastToValueType1614, align 8
  store double %extract430, double addrspace(3)* %loadedValue1615, align 8
  %"&(pSB[currWI].offset)1621" = add nuw i64 %CurrSBIndex..2, 6048
  %"&pSB[currWI].offset1622" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1621"
  %CastToValueType1623 = bitcast i8* %"&pSB[currWI].offset1622" to double addrspace(3)**
  %loadedValue1624 = load double addrspace(3)** %CastToValueType1623, align 8
  store double %extract431, double addrspace(3)* %loadedValue1624, align 8
  %"&(pSB[currWI].offset)1630" = add nuw i64 %CurrSBIndex..2, 6056
  %"&pSB[currWI].offset1631" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1630"
  %CastToValueType1632 = bitcast i8* %"&pSB[currWI].offset1631" to double addrspace(3)**
  %loadedValue1633 = load double addrspace(3)** %CastToValueType1632, align 8
  store double %extract432, double addrspace(3)* %loadedValue1633, align 8
  %"&(pSB[currWI].offset)1639" = add nuw i64 %CurrSBIndex..2, 6064
  %"&pSB[currWI].offset1640" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1639"
  %CastToValueType1641 = bitcast i8* %"&pSB[currWI].offset1640" to double addrspace(3)**
  %loadedValue1642 = load double addrspace(3)** %CastToValueType1641, align 8
  store double %extract433, double addrspace(3)* %loadedValue1642, align 8
  %"&(pSB[currWI].offset)1648" = add nuw i64 %CurrSBIndex..2, 6072
  %"&pSB[currWI].offset1649" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1648"
  %CastToValueType1650 = bitcast i8* %"&pSB[currWI].offset1649" to double addrspace(3)**
  %loadedValue1651 = load double addrspace(3)** %CastToValueType1650, align 8
  store double %extract434, double addrspace(3)* %loadedValue1651, align 8
  %"&(pSB[currWI].offset)1657" = add nuw i64 %CurrSBIndex..2, 6080
  %"&pSB[currWI].offset1658" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1657"
  %CastToValueType1659 = bitcast i8* %"&pSB[currWI].offset1658" to double addrspace(3)**
  %loadedValue1660 = load double addrspace(3)** %CastToValueType1659, align 8
  store double %extract435, double addrspace(3)* %loadedValue1660, align 8
  %"&(pSB[currWI].offset)1666" = add nuw i64 %CurrSBIndex..2, 6088
  %"&pSB[currWI].offset1667" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1666"
  %CastToValueType1668 = bitcast i8* %"&pSB[currWI].offset1667" to double addrspace(3)**
  %loadedValue1669 = load double addrspace(3)** %CastToValueType1668, align 8
  store double %extract436, double addrspace(3)* %loadedValue1669, align 8
  %"&(pSB[currWI].offset)1675" = add nuw i64 %CurrSBIndex..2, 6096
  %"&pSB[currWI].offset1676" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1675"
  %CastToValueType1677 = bitcast i8* %"&pSB[currWI].offset1676" to double addrspace(3)**
  %loadedValue1678 = load double addrspace(3)** %CastToValueType1677, align 8
  store double %extract437, double addrspace(3)* %loadedValue1678, align 8
  %"&(pSB[currWI].offset)1684" = add nuw i64 %CurrSBIndex..2, 6104
  %"&pSB[currWI].offset1685" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1684"
  %CastToValueType1686 = bitcast i8* %"&pSB[currWI].offset1685" to double addrspace(3)**
  %loadedValue1687 = load double addrspace(3)** %CastToValueType1686, align 8
  store double %extract438, double addrspace(3)* %loadedValue1687, align 8
  %"&(pSB[currWI].offset)1693" = add nuw i64 %CurrSBIndex..2, 6112
  %"&pSB[currWI].offset1694" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1693"
  %CastToValueType1695 = bitcast i8* %"&pSB[currWI].offset1694" to double addrspace(3)**
  %loadedValue1696 = load double addrspace(3)** %CastToValueType1695, align 8
  store double %extract439, double addrspace(3)* %loadedValue1696, align 8
  %"&(pSB[currWI].offset)1702" = add nuw i64 %CurrSBIndex..2, 6120
  %"&pSB[currWI].offset1703" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1702"
  %CastToValueType1704 = bitcast i8* %"&pSB[currWI].offset1703" to double addrspace(3)**
  %loadedValue1705 = load double addrspace(3)** %CastToValueType1704, align 8
  store double %extract440, double addrspace(3)* %loadedValue1705, align 8
  %"&(pSB[currWI].offset)1711" = add nuw i64 %CurrSBIndex..2, 6128
  %"&pSB[currWI].offset1712" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1711"
  %CastToValueType1713 = bitcast i8* %"&pSB[currWI].offset1712" to double addrspace(3)**
  %loadedValue1714 = load double addrspace(3)** %CastToValueType1713, align 8
  store double %extract441, double addrspace(3)* %loadedValue1714, align 8
  %"&(pSB[currWI].offset)1720" = add nuw i64 %CurrSBIndex..2, 6136
  %"&pSB[currWI].offset1721" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1720"
  %CastToValueType1722 = bitcast i8* %"&pSB[currWI].offset1721" to double addrspace(3)**
  %loadedValue1723 = load double addrspace(3)** %CastToValueType1722, align 8
  store double %extract442, double addrspace(3)* %loadedValue1723, align 8
  %ptrTypeCast443 = bitcast double addrspace(1)* %1220 to <16 x double> addrspace(1)*
  %1242 = load <16 x double> addrspace(1)* %ptrTypeCast443, align 8
  %extract444 = extractelement <16 x double> %1242, i32 0
  %extract445 = extractelement <16 x double> %1242, i32 1
  %extract446 = extractelement <16 x double> %1242, i32 2
  %extract447 = extractelement <16 x double> %1242, i32 3
  %extract448 = extractelement <16 x double> %1242, i32 4
  %extract449 = extractelement <16 x double> %1242, i32 5
  %extract450 = extractelement <16 x double> %1242, i32 6
  %extract451 = extractelement <16 x double> %1242, i32 7
  %extract452 = extractelement <16 x double> %1242, i32 8
  %extract453 = extractelement <16 x double> %1242, i32 9
  %extract454 = extractelement <16 x double> %1242, i32 10
  %extract455 = extractelement <16 x double> %1242, i32 11
  %extract456 = extractelement <16 x double> %1242, i32 12
  %extract457 = extractelement <16 x double> %1242, i32 13
  %extract458 = extractelement <16 x double> %1242, i32 14
  %extract459 = extractelement <16 x double> %1242, i32 15
  %"&(pSB[currWI].offset)1729" = add nuw i64 %CurrSBIndex..2, 6144
  %"&pSB[currWI].offset1730" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1729"
  %CastToValueType1731 = bitcast i8* %"&pSB[currWI].offset1730" to double addrspace(3)**
  %loadedValue1732 = load double addrspace(3)** %CastToValueType1731, align 8
  store double %extract444, double addrspace(3)* %loadedValue1732, align 8
  %"&(pSB[currWI].offset)1738" = add nuw i64 %CurrSBIndex..2, 6152
  %"&pSB[currWI].offset1739" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1738"
  %CastToValueType1740 = bitcast i8* %"&pSB[currWI].offset1739" to double addrspace(3)**
  %loadedValue1741 = load double addrspace(3)** %CastToValueType1740, align 8
  store double %extract445, double addrspace(3)* %loadedValue1741, align 8
  %"&(pSB[currWI].offset)1747" = add nuw i64 %CurrSBIndex..2, 6160
  %"&pSB[currWI].offset1748" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1747"
  %CastToValueType1749 = bitcast i8* %"&pSB[currWI].offset1748" to double addrspace(3)**
  %loadedValue1750 = load double addrspace(3)** %CastToValueType1749, align 8
  store double %extract446, double addrspace(3)* %loadedValue1750, align 8
  %"&(pSB[currWI].offset)1756" = add nuw i64 %CurrSBIndex..2, 6168
  %"&pSB[currWI].offset1757" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1756"
  %CastToValueType1758 = bitcast i8* %"&pSB[currWI].offset1757" to double addrspace(3)**
  %loadedValue1759 = load double addrspace(3)** %CastToValueType1758, align 8
  store double %extract447, double addrspace(3)* %loadedValue1759, align 8
  %"&(pSB[currWI].offset)1765" = add nuw i64 %CurrSBIndex..2, 6176
  %"&pSB[currWI].offset1766" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1765"
  %CastToValueType1767 = bitcast i8* %"&pSB[currWI].offset1766" to double addrspace(3)**
  %loadedValue1768 = load double addrspace(3)** %CastToValueType1767, align 8
  store double %extract448, double addrspace(3)* %loadedValue1768, align 8
  %"&(pSB[currWI].offset)1774" = add nuw i64 %CurrSBIndex..2, 6184
  %"&pSB[currWI].offset1775" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1774"
  %CastToValueType1776 = bitcast i8* %"&pSB[currWI].offset1775" to double addrspace(3)**
  %loadedValue1777 = load double addrspace(3)** %CastToValueType1776, align 8
  store double %extract449, double addrspace(3)* %loadedValue1777, align 8
  %"&(pSB[currWI].offset)1783" = add nuw i64 %CurrSBIndex..2, 6192
  %"&pSB[currWI].offset1784" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1783"
  %CastToValueType1785 = bitcast i8* %"&pSB[currWI].offset1784" to double addrspace(3)**
  %loadedValue1786 = load double addrspace(3)** %CastToValueType1785, align 8
  store double %extract450, double addrspace(3)* %loadedValue1786, align 8
  %"&(pSB[currWI].offset)1792" = add nuw i64 %CurrSBIndex..2, 6200
  %"&pSB[currWI].offset1793" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1792"
  %CastToValueType1794 = bitcast i8* %"&pSB[currWI].offset1793" to double addrspace(3)**
  %loadedValue1795 = load double addrspace(3)** %CastToValueType1794, align 8
  store double %extract451, double addrspace(3)* %loadedValue1795, align 8
  %"&(pSB[currWI].offset)1801" = add nuw i64 %CurrSBIndex..2, 6208
  %"&pSB[currWI].offset1802" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1801"
  %CastToValueType1803 = bitcast i8* %"&pSB[currWI].offset1802" to double addrspace(3)**
  %loadedValue1804 = load double addrspace(3)** %CastToValueType1803, align 8
  store double %extract452, double addrspace(3)* %loadedValue1804, align 8
  %"&(pSB[currWI].offset)1810" = add nuw i64 %CurrSBIndex..2, 6216
  %"&pSB[currWI].offset1811" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1810"
  %CastToValueType1812 = bitcast i8* %"&pSB[currWI].offset1811" to double addrspace(3)**
  %loadedValue1813 = load double addrspace(3)** %CastToValueType1812, align 8
  store double %extract453, double addrspace(3)* %loadedValue1813, align 8
  %"&(pSB[currWI].offset)1819" = add nuw i64 %CurrSBIndex..2, 6224
  %"&pSB[currWI].offset1820" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1819"
  %CastToValueType1821 = bitcast i8* %"&pSB[currWI].offset1820" to double addrspace(3)**
  %loadedValue1822 = load double addrspace(3)** %CastToValueType1821, align 8
  store double %extract454, double addrspace(3)* %loadedValue1822, align 8
  %"&(pSB[currWI].offset)1828" = add nuw i64 %CurrSBIndex..2, 6232
  %"&pSB[currWI].offset1829" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1828"
  %CastToValueType1830 = bitcast i8* %"&pSB[currWI].offset1829" to double addrspace(3)**
  %loadedValue1831 = load double addrspace(3)** %CastToValueType1830, align 8
  store double %extract455, double addrspace(3)* %loadedValue1831, align 8
  %"&(pSB[currWI].offset)1837" = add nuw i64 %CurrSBIndex..2, 6240
  %"&pSB[currWI].offset1838" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1837"
  %CastToValueType1839 = bitcast i8* %"&pSB[currWI].offset1838" to double addrspace(3)**
  %loadedValue1840 = load double addrspace(3)** %CastToValueType1839, align 8
  store double %extract456, double addrspace(3)* %loadedValue1840, align 8
  %"&(pSB[currWI].offset)1846" = add nuw i64 %CurrSBIndex..2, 6248
  %"&pSB[currWI].offset1847" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1846"
  %CastToValueType1848 = bitcast i8* %"&pSB[currWI].offset1847" to double addrspace(3)**
  %loadedValue1849 = load double addrspace(3)** %CastToValueType1848, align 8
  store double %extract457, double addrspace(3)* %loadedValue1849, align 8
  %"&(pSB[currWI].offset)1855" = add nuw i64 %CurrSBIndex..2, 6256
  %"&pSB[currWI].offset1856" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1855"
  %CastToValueType1857 = bitcast i8* %"&pSB[currWI].offset1856" to double addrspace(3)**
  %loadedValue1858 = load double addrspace(3)** %CastToValueType1857, align 8
  store double %extract458, double addrspace(3)* %loadedValue1858, align 8
  %"&(pSB[currWI].offset)1864" = add nuw i64 %CurrSBIndex..2, 6264
  %"&pSB[currWI].offset1865" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1864"
  %CastToValueType1866 = bitcast i8* %"&pSB[currWI].offset1865" to double addrspace(3)**
  %loadedValue1867 = load double addrspace(3)** %CastToValueType1866, align 8
  store double %extract459, double addrspace(3)* %loadedValue1867, align 8
  %ptrTypeCast460 = bitcast double addrspace(1)* %1219 to <16 x double> addrspace(1)*
  %1243 = load <16 x double> addrspace(1)* %ptrTypeCast460, align 8
  %extract461 = extractelement <16 x double> %1243, i32 0
  %extract462 = extractelement <16 x double> %1243, i32 1
  %extract463 = extractelement <16 x double> %1243, i32 2
  %extract464 = extractelement <16 x double> %1243, i32 3
  %extract465 = extractelement <16 x double> %1243, i32 4
  %extract466 = extractelement <16 x double> %1243, i32 5
  %extract467 = extractelement <16 x double> %1243, i32 6
  %extract468 = extractelement <16 x double> %1243, i32 7
  %extract469 = extractelement <16 x double> %1243, i32 8
  %extract470 = extractelement <16 x double> %1243, i32 9
  %extract471 = extractelement <16 x double> %1243, i32 10
  %extract472 = extractelement <16 x double> %1243, i32 11
  %extract473 = extractelement <16 x double> %1243, i32 12
  %extract474 = extractelement <16 x double> %1243, i32 13
  %extract475 = extractelement <16 x double> %1243, i32 14
  %extract476 = extractelement <16 x double> %1243, i32 15
  %"&(pSB[currWI].offset)1873" = add nuw i64 %CurrSBIndex..2, 6272
  %"&pSB[currWI].offset1874" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1873"
  %CastToValueType1875 = bitcast i8* %"&pSB[currWI].offset1874" to double addrspace(3)**
  %loadedValue1876 = load double addrspace(3)** %CastToValueType1875, align 8
  store double %extract461, double addrspace(3)* %loadedValue1876, align 8
  %"&(pSB[currWI].offset)1882" = add nuw i64 %CurrSBIndex..2, 6280
  %"&pSB[currWI].offset1883" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1882"
  %CastToValueType1884 = bitcast i8* %"&pSB[currWI].offset1883" to double addrspace(3)**
  %loadedValue1885 = load double addrspace(3)** %CastToValueType1884, align 8
  store double %extract462, double addrspace(3)* %loadedValue1885, align 8
  %"&(pSB[currWI].offset)1891" = add nuw i64 %CurrSBIndex..2, 6288
  %"&pSB[currWI].offset1892" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1891"
  %CastToValueType1893 = bitcast i8* %"&pSB[currWI].offset1892" to double addrspace(3)**
  %loadedValue1894 = load double addrspace(3)** %CastToValueType1893, align 8
  store double %extract463, double addrspace(3)* %loadedValue1894, align 8
  %"&(pSB[currWI].offset)1900" = add nuw i64 %CurrSBIndex..2, 6296
  %"&pSB[currWI].offset1901" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1900"
  %CastToValueType1902 = bitcast i8* %"&pSB[currWI].offset1901" to double addrspace(3)**
  %loadedValue1903 = load double addrspace(3)** %CastToValueType1902, align 8
  store double %extract464, double addrspace(3)* %loadedValue1903, align 8
  %"&(pSB[currWI].offset)1909" = add nuw i64 %CurrSBIndex..2, 6304
  %"&pSB[currWI].offset1910" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1909"
  %CastToValueType1911 = bitcast i8* %"&pSB[currWI].offset1910" to double addrspace(3)**
  %loadedValue1912 = load double addrspace(3)** %CastToValueType1911, align 8
  store double %extract465, double addrspace(3)* %loadedValue1912, align 8
  %"&(pSB[currWI].offset)1918" = add nuw i64 %CurrSBIndex..2, 6312
  %"&pSB[currWI].offset1919" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1918"
  %CastToValueType1920 = bitcast i8* %"&pSB[currWI].offset1919" to double addrspace(3)**
  %loadedValue1921 = load double addrspace(3)** %CastToValueType1920, align 8
  store double %extract466, double addrspace(3)* %loadedValue1921, align 8
  %"&(pSB[currWI].offset)1927" = add nuw i64 %CurrSBIndex..2, 6320
  %"&pSB[currWI].offset1928" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1927"
  %CastToValueType1929 = bitcast i8* %"&pSB[currWI].offset1928" to double addrspace(3)**
  %loadedValue1930 = load double addrspace(3)** %CastToValueType1929, align 8
  store double %extract467, double addrspace(3)* %loadedValue1930, align 8
  %"&(pSB[currWI].offset)1936" = add nuw i64 %CurrSBIndex..2, 6328
  %"&pSB[currWI].offset1937" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1936"
  %CastToValueType1938 = bitcast i8* %"&pSB[currWI].offset1937" to double addrspace(3)**
  %loadedValue1939 = load double addrspace(3)** %CastToValueType1938, align 8
  store double %extract468, double addrspace(3)* %loadedValue1939, align 8
  %"&(pSB[currWI].offset)1945" = add nuw i64 %CurrSBIndex..2, 6336
  %"&pSB[currWI].offset1946" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1945"
  %CastToValueType1947 = bitcast i8* %"&pSB[currWI].offset1946" to double addrspace(3)**
  %loadedValue1948 = load double addrspace(3)** %CastToValueType1947, align 8
  store double %extract469, double addrspace(3)* %loadedValue1948, align 8
  %"&(pSB[currWI].offset)1954" = add nuw i64 %CurrSBIndex..2, 6344
  %"&pSB[currWI].offset1955" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1954"
  %CastToValueType1956 = bitcast i8* %"&pSB[currWI].offset1955" to double addrspace(3)**
  %loadedValue1957 = load double addrspace(3)** %CastToValueType1956, align 8
  store double %extract470, double addrspace(3)* %loadedValue1957, align 8
  %"&(pSB[currWI].offset)1963" = add nuw i64 %CurrSBIndex..2, 6352
  %"&pSB[currWI].offset1964" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1963"
  %CastToValueType1965 = bitcast i8* %"&pSB[currWI].offset1964" to double addrspace(3)**
  %loadedValue1966 = load double addrspace(3)** %CastToValueType1965, align 8
  store double %extract471, double addrspace(3)* %loadedValue1966, align 8
  %"&(pSB[currWI].offset)1972" = add nuw i64 %CurrSBIndex..2, 6360
  %"&pSB[currWI].offset1973" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1972"
  %CastToValueType1974 = bitcast i8* %"&pSB[currWI].offset1973" to double addrspace(3)**
  %loadedValue1975 = load double addrspace(3)** %CastToValueType1974, align 8
  store double %extract472, double addrspace(3)* %loadedValue1975, align 8
  %"&(pSB[currWI].offset)1981" = add nuw i64 %CurrSBIndex..2, 6368
  %"&pSB[currWI].offset1982" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1981"
  %CastToValueType1983 = bitcast i8* %"&pSB[currWI].offset1982" to double addrspace(3)**
  %loadedValue1984 = load double addrspace(3)** %CastToValueType1983, align 8
  store double %extract473, double addrspace(3)* %loadedValue1984, align 8
  %"&(pSB[currWI].offset)1990" = add nuw i64 %CurrSBIndex..2, 6376
  %"&pSB[currWI].offset1991" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1990"
  %CastToValueType1992 = bitcast i8* %"&pSB[currWI].offset1991" to double addrspace(3)**
  %loadedValue1993 = load double addrspace(3)** %CastToValueType1992, align 8
  store double %extract474, double addrspace(3)* %loadedValue1993, align 8
  %"&(pSB[currWI].offset)1999" = add nuw i64 %CurrSBIndex..2, 6384
  %"&pSB[currWI].offset2000" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1999"
  %CastToValueType2001 = bitcast i8* %"&pSB[currWI].offset2000" to double addrspace(3)**
  %loadedValue2002 = load double addrspace(3)** %CastToValueType2001, align 8
  store double %extract475, double addrspace(3)* %loadedValue2002, align 8
  %"&(pSB[currWI].offset)2008" = add nuw i64 %CurrSBIndex..2, 6392
  %"&pSB[currWI].offset2009" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2008"
  %CastToValueType2010 = bitcast i8* %"&pSB[currWI].offset2009" to double addrspace(3)**
  %loadedValue2011 = load double addrspace(3)** %CastToValueType2010, align 8
  store double %extract476, double addrspace(3)* %loadedValue2011, align 8
  %ptrTypeCast477 = bitcast double addrspace(1)* %1218 to <16 x double> addrspace(1)*
  %1244 = load <16 x double> addrspace(1)* %ptrTypeCast477, align 8
  %extract478 = extractelement <16 x double> %1244, i32 0
  %extract479 = extractelement <16 x double> %1244, i32 1
  %extract480 = extractelement <16 x double> %1244, i32 2
  %extract481 = extractelement <16 x double> %1244, i32 3
  %extract482 = extractelement <16 x double> %1244, i32 4
  %extract483 = extractelement <16 x double> %1244, i32 5
  %extract484 = extractelement <16 x double> %1244, i32 6
  %extract485 = extractelement <16 x double> %1244, i32 7
  %extract486 = extractelement <16 x double> %1244, i32 8
  %extract487 = extractelement <16 x double> %1244, i32 9
  %extract488 = extractelement <16 x double> %1244, i32 10
  %extract489 = extractelement <16 x double> %1244, i32 11
  %extract490 = extractelement <16 x double> %1244, i32 12
  %extract491 = extractelement <16 x double> %1244, i32 13
  %extract492 = extractelement <16 x double> %1244, i32 14
  %extract493 = extractelement <16 x double> %1244, i32 15
  %"&(pSB[currWI].offset)2017" = add nuw i64 %CurrSBIndex..2, 6400
  %"&pSB[currWI].offset2018" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2017"
  %CastToValueType2019 = bitcast i8* %"&pSB[currWI].offset2018" to double addrspace(3)**
  %loadedValue2020 = load double addrspace(3)** %CastToValueType2019, align 8
  store double %extract478, double addrspace(3)* %loadedValue2020, align 8
  %"&(pSB[currWI].offset)2026" = add nuw i64 %CurrSBIndex..2, 6408
  %"&pSB[currWI].offset2027" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2026"
  %CastToValueType2028 = bitcast i8* %"&pSB[currWI].offset2027" to double addrspace(3)**
  %loadedValue2029 = load double addrspace(3)** %CastToValueType2028, align 8
  store double %extract479, double addrspace(3)* %loadedValue2029, align 8
  %"&(pSB[currWI].offset)2035" = add nuw i64 %CurrSBIndex..2, 6416
  %"&pSB[currWI].offset2036" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2035"
  %CastToValueType2037 = bitcast i8* %"&pSB[currWI].offset2036" to double addrspace(3)**
  %loadedValue2038 = load double addrspace(3)** %CastToValueType2037, align 8
  store double %extract480, double addrspace(3)* %loadedValue2038, align 8
  %"&(pSB[currWI].offset)2044" = add nuw i64 %CurrSBIndex..2, 6424
  %"&pSB[currWI].offset2045" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2044"
  %CastToValueType2046 = bitcast i8* %"&pSB[currWI].offset2045" to double addrspace(3)**
  %loadedValue2047 = load double addrspace(3)** %CastToValueType2046, align 8
  store double %extract481, double addrspace(3)* %loadedValue2047, align 8
  %"&(pSB[currWI].offset)2053" = add nuw i64 %CurrSBIndex..2, 6432
  %"&pSB[currWI].offset2054" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2053"
  %CastToValueType2055 = bitcast i8* %"&pSB[currWI].offset2054" to double addrspace(3)**
  %loadedValue2056 = load double addrspace(3)** %CastToValueType2055, align 8
  store double %extract482, double addrspace(3)* %loadedValue2056, align 8
  %"&(pSB[currWI].offset)2062" = add nuw i64 %CurrSBIndex..2, 6440
  %"&pSB[currWI].offset2063" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2062"
  %CastToValueType2064 = bitcast i8* %"&pSB[currWI].offset2063" to double addrspace(3)**
  %loadedValue2065 = load double addrspace(3)** %CastToValueType2064, align 8
  store double %extract483, double addrspace(3)* %loadedValue2065, align 8
  %"&(pSB[currWI].offset)2071" = add nuw i64 %CurrSBIndex..2, 6448
  %"&pSB[currWI].offset2072" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2071"
  %CastToValueType2073 = bitcast i8* %"&pSB[currWI].offset2072" to double addrspace(3)**
  %loadedValue2074 = load double addrspace(3)** %CastToValueType2073, align 8
  store double %extract484, double addrspace(3)* %loadedValue2074, align 8
  %"&(pSB[currWI].offset)2080" = add nuw i64 %CurrSBIndex..2, 6456
  %"&pSB[currWI].offset2081" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2080"
  %CastToValueType2082 = bitcast i8* %"&pSB[currWI].offset2081" to double addrspace(3)**
  %loadedValue2083 = load double addrspace(3)** %CastToValueType2082, align 8
  store double %extract485, double addrspace(3)* %loadedValue2083, align 8
  %"&(pSB[currWI].offset)2089" = add nuw i64 %CurrSBIndex..2, 6464
  %"&pSB[currWI].offset2090" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2089"
  %CastToValueType2091 = bitcast i8* %"&pSB[currWI].offset2090" to double addrspace(3)**
  %loadedValue2092 = load double addrspace(3)** %CastToValueType2091, align 8
  store double %extract486, double addrspace(3)* %loadedValue2092, align 8
  %"&(pSB[currWI].offset)2098" = add nuw i64 %CurrSBIndex..2, 6472
  %"&pSB[currWI].offset2099" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2098"
  %CastToValueType2100 = bitcast i8* %"&pSB[currWI].offset2099" to double addrspace(3)**
  %loadedValue2101 = load double addrspace(3)** %CastToValueType2100, align 8
  store double %extract487, double addrspace(3)* %loadedValue2101, align 8
  %"&(pSB[currWI].offset)2107" = add nuw i64 %CurrSBIndex..2, 6480
  %"&pSB[currWI].offset2108" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2107"
  %CastToValueType2109 = bitcast i8* %"&pSB[currWI].offset2108" to double addrspace(3)**
  %loadedValue2110 = load double addrspace(3)** %CastToValueType2109, align 8
  store double %extract488, double addrspace(3)* %loadedValue2110, align 8
  %"&(pSB[currWI].offset)2116" = add nuw i64 %CurrSBIndex..2, 6488
  %"&pSB[currWI].offset2117" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2116"
  %CastToValueType2118 = bitcast i8* %"&pSB[currWI].offset2117" to double addrspace(3)**
  %loadedValue2119 = load double addrspace(3)** %CastToValueType2118, align 8
  store double %extract489, double addrspace(3)* %loadedValue2119, align 8
  %"&(pSB[currWI].offset)2125" = add nuw i64 %CurrSBIndex..2, 6496
  %"&pSB[currWI].offset2126" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2125"
  %CastToValueType2127 = bitcast i8* %"&pSB[currWI].offset2126" to double addrspace(3)**
  %loadedValue2128 = load double addrspace(3)** %CastToValueType2127, align 8
  store double %extract490, double addrspace(3)* %loadedValue2128, align 8
  %"&(pSB[currWI].offset)2134" = add nuw i64 %CurrSBIndex..2, 6504
  %"&pSB[currWI].offset2135" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2134"
  %CastToValueType2136 = bitcast i8* %"&pSB[currWI].offset2135" to double addrspace(3)**
  %loadedValue2137 = load double addrspace(3)** %CastToValueType2136, align 8
  store double %extract491, double addrspace(3)* %loadedValue2137, align 8
  %"&(pSB[currWI].offset)2143" = add nuw i64 %CurrSBIndex..2, 6512
  %"&pSB[currWI].offset2144" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2143"
  %CastToValueType2145 = bitcast i8* %"&pSB[currWI].offset2144" to double addrspace(3)**
  %loadedValue2146 = load double addrspace(3)** %CastToValueType2145, align 8
  store double %extract492, double addrspace(3)* %loadedValue2146, align 8
  %"&(pSB[currWI].offset)2152" = add nuw i64 %CurrSBIndex..2, 6520
  %"&pSB[currWI].offset2153" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2152"
  %CastToValueType2154 = bitcast i8* %"&pSB[currWI].offset2153" to double addrspace(3)**
  %loadedValue2155 = load double addrspace(3)** %CastToValueType2154, align 8
  store double %extract493, double addrspace(3)* %loadedValue2155, align 8
  %check.WI.iter = icmp ult i64 %CurrWI..2, %iterCount
  br i1 %check.WI.iter, label %thenBB, label %SyncBB

thenBB:                                           ; preds = %.loopexit
  %"CurrWI++" = add nuw i64 %CurrWI..2, 1
  %"loadedCurrSB+Stride" = add nuw i64 %CurrSBIndex..2, 12032
  %cond = icmp eq i32 %currBarrier.1, 16
  br i1 %cond, label %SyncBB4486, label %SyncBB4485.preheader

SyncBB:                                           ; preds = %.loopexit, %thenBB4489
  %CurrSBIndex..3 = phi i64 [ %"loadedCurrSB+Stride4495", %thenBB4489 ], [ 0, %.loopexit ]
  %CurrWI..3 = phi i64 [ %"CurrWI++4493", %thenBB4489 ], [ 0, %.loopexit ]
  %1245 = load double addrspace(3)* %1, align 16
  %temp494 = insertelement <16 x double> undef, double %1245, i32 0
  %vector495 = shufflevector <16 x double> %temp494, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2551" = add nuw i64 %CurrSBIndex..3, 9344
  %"&pSB[currWI].offset2552" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2551"
  %CastToValueType2553 = bitcast i8* %"&pSB[currWI].offset2552" to <16 x double>*
  %loadedValue2554 = load <16 x double>* %CastToValueType2553, align 128
  %1246 = fmul <16 x double> %loadedValue2554, %vector495
  %1247 = load double* %721, align 16
  %1248 = load double* %722, align 16
  %1249 = load double* %723, align 16
  %1250 = load double* %724, align 16
  %1251 = load double* %725, align 16
  %1252 = load double* %726, align 16
  %1253 = load double* %727, align 16
  %1254 = load double* %728, align 16
  %1255 = load double* %729, align 16
  %1256 = load double* %730, align 16
  %1257 = load double* %731, align 16
  %1258 = load double* %732, align 16
  %1259 = load double* %733, align 16
  %1260 = load double* %734, align 16
  %1261 = load double* %735, align 16
  %1262 = load double* %736, align 16
  %temp.vect = insertelement <16 x double> undef, double %1247, i32 0
  %temp.vect496 = insertelement <16 x double> %temp.vect, double %1248, i32 1
  %temp.vect497 = insertelement <16 x double> %temp.vect496, double %1249, i32 2
  %temp.vect498 = insertelement <16 x double> %temp.vect497, double %1250, i32 3
  %temp.vect499 = insertelement <16 x double> %temp.vect498, double %1251, i32 4
  %temp.vect500 = insertelement <16 x double> %temp.vect499, double %1252, i32 5
  %temp.vect501 = insertelement <16 x double> %temp.vect500, double %1253, i32 6
  %temp.vect502 = insertelement <16 x double> %temp.vect501, double %1254, i32 7
  %temp.vect503 = insertelement <16 x double> %temp.vect502, double %1255, i32 8
  %temp.vect504 = insertelement <16 x double> %temp.vect503, double %1256, i32 9
  %temp.vect505 = insertelement <16 x double> %temp.vect504, double %1257, i32 10
  %temp.vect506 = insertelement <16 x double> %temp.vect505, double %1258, i32 11
  %temp.vect507 = insertelement <16 x double> %temp.vect506, double %1259, i32 12
  %temp.vect508 = insertelement <16 x double> %temp.vect507, double %1260, i32 13
  %temp.vect509 = insertelement <16 x double> %temp.vect508, double %1261, i32 14
  %temp.vect510 = insertelement <16 x double> %temp.vect509, double %1262, i32 15
  %1263 = fadd <16 x double> %temp.vect510, %1246
  %1264 = load double addrspace(3)* %3, align 8
  %temp511 = insertelement <16 x double> undef, double %1264, i32 0
  %vector512 = shufflevector <16 x double> %temp511, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2546" = add nuw i64 %CurrSBIndex..3, 9344
  %"&pSB[currWI].offset2547" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2546"
  %CastToValueType2548 = bitcast i8* %"&pSB[currWI].offset2547" to <16 x double>*
  %loadedValue2549 = load <16 x double>* %CastToValueType2548, align 128
  %1265 = fmul <16 x double> %loadedValue2549, %vector512
  %1266 = load double* %738, align 8
  %1267 = load double* %740, align 8
  %1268 = load double* %742, align 8
  %1269 = load double* %744, align 8
  %1270 = load double* %746, align 8
  %1271 = load double* %748, align 8
  %1272 = load double* %750, align 8
  %1273 = load double* %752, align 8
  %1274 = load double* %754, align 8
  %1275 = load double* %756, align 8
  %1276 = load double* %758, align 8
  %1277 = load double* %760, align 8
  %1278 = load double* %762, align 8
  %1279 = load double* %764, align 8
  %1280 = load double* %766, align 8
  %1281 = load double* %768, align 8
  %temp.vect513 = insertelement <16 x double> undef, double %1266, i32 0
  %temp.vect514 = insertelement <16 x double> %temp.vect513, double %1267, i32 1
  %temp.vect515 = insertelement <16 x double> %temp.vect514, double %1268, i32 2
  %temp.vect516 = insertelement <16 x double> %temp.vect515, double %1269, i32 3
  %temp.vect517 = insertelement <16 x double> %temp.vect516, double %1270, i32 4
  %temp.vect518 = insertelement <16 x double> %temp.vect517, double %1271, i32 5
  %temp.vect519 = insertelement <16 x double> %temp.vect518, double %1272, i32 6
  %temp.vect520 = insertelement <16 x double> %temp.vect519, double %1273, i32 7
  %temp.vect521 = insertelement <16 x double> %temp.vect520, double %1274, i32 8
  %temp.vect522 = insertelement <16 x double> %temp.vect521, double %1275, i32 9
  %temp.vect523 = insertelement <16 x double> %temp.vect522, double %1276, i32 10
  %temp.vect524 = insertelement <16 x double> %temp.vect523, double %1277, i32 11
  %temp.vect525 = insertelement <16 x double> %temp.vect524, double %1278, i32 12
  %temp.vect526 = insertelement <16 x double> %temp.vect525, double %1279, i32 13
  %temp.vect527 = insertelement <16 x double> %temp.vect526, double %1280, i32 14
  %temp.vect528 = insertelement <16 x double> %temp.vect527, double %1281, i32 15
  %1282 = fadd <16 x double> %temp.vect528, %1265
  %1283 = load double addrspace(3)* %5, align 16
  %temp529 = insertelement <16 x double> undef, double %1283, i32 0
  %vector530 = shufflevector <16 x double> %temp529, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2541" = add nuw i64 %CurrSBIndex..3, 9344
  %"&pSB[currWI].offset2542" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2541"
  %CastToValueType2543 = bitcast i8* %"&pSB[currWI].offset2542" to <16 x double>*
  %loadedValue2544 = load <16 x double>* %CastToValueType2543, align 128
  %1284 = fmul <16 x double> %loadedValue2544, %vector530
  %1285 = load double* %770, align 16
  %1286 = load double* %772, align 16
  %1287 = load double* %774, align 16
  %1288 = load double* %776, align 16
  %1289 = load double* %778, align 16
  %1290 = load double* %780, align 16
  %1291 = load double* %782, align 16
  %1292 = load double* %784, align 16
  %1293 = load double* %786, align 16
  %1294 = load double* %788, align 16
  %1295 = load double* %790, align 16
  %1296 = load double* %792, align 16
  %1297 = load double* %794, align 16
  %1298 = load double* %796, align 16
  %1299 = load double* %798, align 16
  %1300 = load double* %800, align 16
  %temp.vect531 = insertelement <16 x double> undef, double %1285, i32 0
  %temp.vect532 = insertelement <16 x double> %temp.vect531, double %1286, i32 1
  %temp.vect533 = insertelement <16 x double> %temp.vect532, double %1287, i32 2
  %temp.vect534 = insertelement <16 x double> %temp.vect533, double %1288, i32 3
  %temp.vect535 = insertelement <16 x double> %temp.vect534, double %1289, i32 4
  %temp.vect536 = insertelement <16 x double> %temp.vect535, double %1290, i32 5
  %temp.vect537 = insertelement <16 x double> %temp.vect536, double %1291, i32 6
  %temp.vect538 = insertelement <16 x double> %temp.vect537, double %1292, i32 7
  %temp.vect539 = insertelement <16 x double> %temp.vect538, double %1293, i32 8
  %temp.vect540 = insertelement <16 x double> %temp.vect539, double %1294, i32 9
  %temp.vect541 = insertelement <16 x double> %temp.vect540, double %1295, i32 10
  %temp.vect542 = insertelement <16 x double> %temp.vect541, double %1296, i32 11
  %temp.vect543 = insertelement <16 x double> %temp.vect542, double %1297, i32 12
  %temp.vect544 = insertelement <16 x double> %temp.vect543, double %1298, i32 13
  %temp.vect545 = insertelement <16 x double> %temp.vect544, double %1299, i32 14
  %temp.vect546 = insertelement <16 x double> %temp.vect545, double %1300, i32 15
  %1301 = fadd <16 x double> %temp.vect546, %1284
  %1302 = load double addrspace(3)* %7, align 8
  %temp547 = insertelement <16 x double> undef, double %1302, i32 0
  %vector548 = shufflevector <16 x double> %temp547, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2536" = add nuw i64 %CurrSBIndex..3, 9344
  %"&pSB[currWI].offset2537" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2536"
  %CastToValueType2538 = bitcast i8* %"&pSB[currWI].offset2537" to <16 x double>*
  %loadedValue2539 = load <16 x double>* %CastToValueType2538, align 128
  %1303 = fmul <16 x double> %loadedValue2539, %vector548
  %1304 = load double* %802, align 8
  %1305 = load double* %804, align 8
  %1306 = load double* %806, align 8
  %1307 = load double* %808, align 8
  %1308 = load double* %810, align 8
  %1309 = load double* %812, align 8
  %1310 = load double* %814, align 8
  %1311 = load double* %816, align 8
  %1312 = load double* %818, align 8
  %1313 = load double* %820, align 8
  %1314 = load double* %822, align 8
  %1315 = load double* %824, align 8
  %1316 = load double* %826, align 8
  %1317 = load double* %828, align 8
  %1318 = load double* %830, align 8
  %1319 = load double* %832, align 8
  %temp.vect549 = insertelement <16 x double> undef, double %1304, i32 0
  %temp.vect550 = insertelement <16 x double> %temp.vect549, double %1305, i32 1
  %temp.vect551 = insertelement <16 x double> %temp.vect550, double %1306, i32 2
  %temp.vect552 = insertelement <16 x double> %temp.vect551, double %1307, i32 3
  %temp.vect553 = insertelement <16 x double> %temp.vect552, double %1308, i32 4
  %temp.vect554 = insertelement <16 x double> %temp.vect553, double %1309, i32 5
  %temp.vect555 = insertelement <16 x double> %temp.vect554, double %1310, i32 6
  %temp.vect556 = insertelement <16 x double> %temp.vect555, double %1311, i32 7
  %temp.vect557 = insertelement <16 x double> %temp.vect556, double %1312, i32 8
  %temp.vect558 = insertelement <16 x double> %temp.vect557, double %1313, i32 9
  %temp.vect559 = insertelement <16 x double> %temp.vect558, double %1314, i32 10
  %temp.vect560 = insertelement <16 x double> %temp.vect559, double %1315, i32 11
  %temp.vect561 = insertelement <16 x double> %temp.vect560, double %1316, i32 12
  %temp.vect562 = insertelement <16 x double> %temp.vect561, double %1317, i32 13
  %temp.vect563 = insertelement <16 x double> %temp.vect562, double %1318, i32 14
  %temp.vect564 = insertelement <16 x double> %temp.vect563, double %1319, i32 15
  %1320 = fadd <16 x double> %temp.vect564, %1303
  %1321 = load double addrspace(3)* %9, align 16
  %temp565 = insertelement <16 x double> undef, double %1321, i32 0
  %vector566 = shufflevector <16 x double> %temp565, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2531" = add nuw i64 %CurrSBIndex..3, 9344
  %"&pSB[currWI].offset2532" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2531"
  %CastToValueType2533 = bitcast i8* %"&pSB[currWI].offset2532" to <16 x double>*
  %loadedValue2534 = load <16 x double>* %CastToValueType2533, align 128
  %1322 = fmul <16 x double> %loadedValue2534, %vector566
  %1323 = load double* %834, align 16
  %1324 = load double* %836, align 16
  %1325 = load double* %838, align 16
  %1326 = load double* %840, align 16
  %1327 = load double* %842, align 16
  %1328 = load double* %844, align 16
  %1329 = load double* %846, align 16
  %1330 = load double* %848, align 16
  %1331 = load double* %850, align 16
  %1332 = load double* %852, align 16
  %1333 = load double* %854, align 16
  %1334 = load double* %856, align 16
  %1335 = load double* %858, align 16
  %1336 = load double* %860, align 16
  %1337 = load double* %862, align 16
  %1338 = load double* %864, align 16
  %temp.vect567 = insertelement <16 x double> undef, double %1323, i32 0
  %temp.vect568 = insertelement <16 x double> %temp.vect567, double %1324, i32 1
  %temp.vect569 = insertelement <16 x double> %temp.vect568, double %1325, i32 2
  %temp.vect570 = insertelement <16 x double> %temp.vect569, double %1326, i32 3
  %temp.vect571 = insertelement <16 x double> %temp.vect570, double %1327, i32 4
  %temp.vect572 = insertelement <16 x double> %temp.vect571, double %1328, i32 5
  %temp.vect573 = insertelement <16 x double> %temp.vect572, double %1329, i32 6
  %temp.vect574 = insertelement <16 x double> %temp.vect573, double %1330, i32 7
  %temp.vect575 = insertelement <16 x double> %temp.vect574, double %1331, i32 8
  %temp.vect576 = insertelement <16 x double> %temp.vect575, double %1332, i32 9
  %temp.vect577 = insertelement <16 x double> %temp.vect576, double %1333, i32 10
  %temp.vect578 = insertelement <16 x double> %temp.vect577, double %1334, i32 11
  %temp.vect579 = insertelement <16 x double> %temp.vect578, double %1335, i32 12
  %temp.vect580 = insertelement <16 x double> %temp.vect579, double %1336, i32 13
  %temp.vect581 = insertelement <16 x double> %temp.vect580, double %1337, i32 14
  %temp.vect582 = insertelement <16 x double> %temp.vect581, double %1338, i32 15
  %1339 = fadd <16 x double> %temp.vect582, %1322
  %1340 = load double addrspace(3)* %11, align 8
  %temp583 = insertelement <16 x double> undef, double %1340, i32 0
  %vector584 = shufflevector <16 x double> %temp583, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2526" = add nuw i64 %CurrSBIndex..3, 9344
  %"&pSB[currWI].offset2527" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2526"
  %CastToValueType2528 = bitcast i8* %"&pSB[currWI].offset2527" to <16 x double>*
  %loadedValue2529 = load <16 x double>* %CastToValueType2528, align 128
  %1341 = fmul <16 x double> %loadedValue2529, %vector584
  %1342 = load double* %866, align 8
  %1343 = load double* %868, align 8
  %1344 = load double* %870, align 8
  %1345 = load double* %872, align 8
  %1346 = load double* %874, align 8
  %1347 = load double* %876, align 8
  %1348 = load double* %878, align 8
  %1349 = load double* %880, align 8
  %1350 = load double* %882, align 8
  %1351 = load double* %884, align 8
  %1352 = load double* %886, align 8
  %1353 = load double* %888, align 8
  %1354 = load double* %890, align 8
  %1355 = load double* %892, align 8
  %1356 = load double* %894, align 8
  %1357 = load double* %896, align 8
  %temp.vect585 = insertelement <16 x double> undef, double %1342, i32 0
  %temp.vect586 = insertelement <16 x double> %temp.vect585, double %1343, i32 1
  %temp.vect587 = insertelement <16 x double> %temp.vect586, double %1344, i32 2
  %temp.vect588 = insertelement <16 x double> %temp.vect587, double %1345, i32 3
  %temp.vect589 = insertelement <16 x double> %temp.vect588, double %1346, i32 4
  %temp.vect590 = insertelement <16 x double> %temp.vect589, double %1347, i32 5
  %temp.vect591 = insertelement <16 x double> %temp.vect590, double %1348, i32 6
  %temp.vect592 = insertelement <16 x double> %temp.vect591, double %1349, i32 7
  %temp.vect593 = insertelement <16 x double> %temp.vect592, double %1350, i32 8
  %temp.vect594 = insertelement <16 x double> %temp.vect593, double %1351, i32 9
  %temp.vect595 = insertelement <16 x double> %temp.vect594, double %1352, i32 10
  %temp.vect596 = insertelement <16 x double> %temp.vect595, double %1353, i32 11
  %temp.vect597 = insertelement <16 x double> %temp.vect596, double %1354, i32 12
  %temp.vect598 = insertelement <16 x double> %temp.vect597, double %1355, i32 13
  %temp.vect599 = insertelement <16 x double> %temp.vect598, double %1356, i32 14
  %temp.vect600 = insertelement <16 x double> %temp.vect599, double %1357, i32 15
  %1358 = fadd <16 x double> %temp.vect600, %1341
  %1359 = load double addrspace(3)* %13, align 16
  %temp601 = insertelement <16 x double> undef, double %1359, i32 0
  %vector602 = shufflevector <16 x double> %temp601, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2521" = add nuw i64 %CurrSBIndex..3, 9344
  %"&pSB[currWI].offset2522" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2521"
  %CastToValueType2523 = bitcast i8* %"&pSB[currWI].offset2522" to <16 x double>*
  %loadedValue2524 = load <16 x double>* %CastToValueType2523, align 128
  %1360 = fmul <16 x double> %loadedValue2524, %vector602
  %1361 = load double* %898, align 16
  %1362 = load double* %900, align 16
  %1363 = load double* %902, align 16
  %1364 = load double* %904, align 16
  %1365 = load double* %906, align 16
  %1366 = load double* %908, align 16
  %1367 = load double* %910, align 16
  %1368 = load double* %912, align 16
  %1369 = load double* %914, align 16
  %1370 = load double* %916, align 16
  %1371 = load double* %918, align 16
  %1372 = load double* %920, align 16
  %1373 = load double* %922, align 16
  %1374 = load double* %924, align 16
  %1375 = load double* %926, align 16
  %1376 = load double* %928, align 16
  %temp.vect603 = insertelement <16 x double> undef, double %1361, i32 0
  %temp.vect604 = insertelement <16 x double> %temp.vect603, double %1362, i32 1
  %temp.vect605 = insertelement <16 x double> %temp.vect604, double %1363, i32 2
  %temp.vect606 = insertelement <16 x double> %temp.vect605, double %1364, i32 3
  %temp.vect607 = insertelement <16 x double> %temp.vect606, double %1365, i32 4
  %temp.vect608 = insertelement <16 x double> %temp.vect607, double %1366, i32 5
  %temp.vect609 = insertelement <16 x double> %temp.vect608, double %1367, i32 6
  %temp.vect610 = insertelement <16 x double> %temp.vect609, double %1368, i32 7
  %temp.vect611 = insertelement <16 x double> %temp.vect610, double %1369, i32 8
  %temp.vect612 = insertelement <16 x double> %temp.vect611, double %1370, i32 9
  %temp.vect613 = insertelement <16 x double> %temp.vect612, double %1371, i32 10
  %temp.vect614 = insertelement <16 x double> %temp.vect613, double %1372, i32 11
  %temp.vect615 = insertelement <16 x double> %temp.vect614, double %1373, i32 12
  %temp.vect616 = insertelement <16 x double> %temp.vect615, double %1374, i32 13
  %temp.vect617 = insertelement <16 x double> %temp.vect616, double %1375, i32 14
  %temp.vect618 = insertelement <16 x double> %temp.vect617, double %1376, i32 15
  %1377 = fadd <16 x double> %temp.vect618, %1360
  %1378 = load double addrspace(3)* %15, align 8
  %temp619 = insertelement <16 x double> undef, double %1378, i32 0
  %vector620 = shufflevector <16 x double> %temp619, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2516" = add nuw i64 %CurrSBIndex..3, 9344
  %"&pSB[currWI].offset2517" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2516"
  %CastToValueType2518 = bitcast i8* %"&pSB[currWI].offset2517" to <16 x double>*
  %loadedValue2519 = load <16 x double>* %CastToValueType2518, align 128
  %1379 = fmul <16 x double> %loadedValue2519, %vector620
  %1380 = load double* %930, align 8
  %1381 = load double* %932, align 8
  %1382 = load double* %934, align 8
  %1383 = load double* %936, align 8
  %1384 = load double* %938, align 8
  %1385 = load double* %940, align 8
  %1386 = load double* %942, align 8
  %1387 = load double* %944, align 8
  %1388 = load double* %946, align 8
  %1389 = load double* %948, align 8
  %1390 = load double* %950, align 8
  %1391 = load double* %952, align 8
  %1392 = load double* %954, align 8
  %1393 = load double* %956, align 8
  %1394 = load double* %958, align 8
  %1395 = load double* %960, align 8
  %temp.vect621 = insertelement <16 x double> undef, double %1380, i32 0
  %temp.vect622 = insertelement <16 x double> %temp.vect621, double %1381, i32 1
  %temp.vect623 = insertelement <16 x double> %temp.vect622, double %1382, i32 2
  %temp.vect624 = insertelement <16 x double> %temp.vect623, double %1383, i32 3
  %temp.vect625 = insertelement <16 x double> %temp.vect624, double %1384, i32 4
  %temp.vect626 = insertelement <16 x double> %temp.vect625, double %1385, i32 5
  %temp.vect627 = insertelement <16 x double> %temp.vect626, double %1386, i32 6
  %temp.vect628 = insertelement <16 x double> %temp.vect627, double %1387, i32 7
  %temp.vect629 = insertelement <16 x double> %temp.vect628, double %1388, i32 8
  %temp.vect630 = insertelement <16 x double> %temp.vect629, double %1389, i32 9
  %temp.vect631 = insertelement <16 x double> %temp.vect630, double %1390, i32 10
  %temp.vect632 = insertelement <16 x double> %temp.vect631, double %1391, i32 11
  %temp.vect633 = insertelement <16 x double> %temp.vect632, double %1392, i32 12
  %temp.vect634 = insertelement <16 x double> %temp.vect633, double %1393, i32 13
  %temp.vect635 = insertelement <16 x double> %temp.vect634, double %1394, i32 14
  %temp.vect636 = insertelement <16 x double> %temp.vect635, double %1395, i32 15
  %1396 = fadd <16 x double> %temp.vect636, %1379
  %1397 = load double addrspace(3)* %17, align 16
  %temp637 = insertelement <16 x double> undef, double %1397, i32 0
  %vector638 = shufflevector <16 x double> %temp637, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2511" = add nuw i64 %CurrSBIndex..3, 9344
  %"&pSB[currWI].offset2512" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2511"
  %CastToValueType2513 = bitcast i8* %"&pSB[currWI].offset2512" to <16 x double>*
  %loadedValue2514 = load <16 x double>* %CastToValueType2513, align 128
  %1398 = fmul <16 x double> %loadedValue2514, %vector638
  %1399 = load double* %962, align 16
  %1400 = load double* %964, align 16
  %1401 = load double* %966, align 16
  %1402 = load double* %968, align 16
  %1403 = load double* %970, align 16
  %1404 = load double* %972, align 16
  %1405 = load double* %974, align 16
  %1406 = load double* %976, align 16
  %1407 = load double* %978, align 16
  %1408 = load double* %980, align 16
  %1409 = load double* %982, align 16
  %1410 = load double* %984, align 16
  %1411 = load double* %986, align 16
  %1412 = load double* %988, align 16
  %1413 = load double* %990, align 16
  %1414 = load double* %992, align 16
  %temp.vect639 = insertelement <16 x double> undef, double %1399, i32 0
  %temp.vect640 = insertelement <16 x double> %temp.vect639, double %1400, i32 1
  %temp.vect641 = insertelement <16 x double> %temp.vect640, double %1401, i32 2
  %temp.vect642 = insertelement <16 x double> %temp.vect641, double %1402, i32 3
  %temp.vect643 = insertelement <16 x double> %temp.vect642, double %1403, i32 4
  %temp.vect644 = insertelement <16 x double> %temp.vect643, double %1404, i32 5
  %temp.vect645 = insertelement <16 x double> %temp.vect644, double %1405, i32 6
  %temp.vect646 = insertelement <16 x double> %temp.vect645, double %1406, i32 7
  %temp.vect647 = insertelement <16 x double> %temp.vect646, double %1407, i32 8
  %temp.vect648 = insertelement <16 x double> %temp.vect647, double %1408, i32 9
  %temp.vect649 = insertelement <16 x double> %temp.vect648, double %1409, i32 10
  %temp.vect650 = insertelement <16 x double> %temp.vect649, double %1410, i32 11
  %temp.vect651 = insertelement <16 x double> %temp.vect650, double %1411, i32 12
  %temp.vect652 = insertelement <16 x double> %temp.vect651, double %1412, i32 13
  %temp.vect653 = insertelement <16 x double> %temp.vect652, double %1413, i32 14
  %temp.vect654 = insertelement <16 x double> %temp.vect653, double %1414, i32 15
  %1415 = fadd <16 x double> %temp.vect654, %1398
  %1416 = load double addrspace(3)* %19, align 8
  %temp655 = insertelement <16 x double> undef, double %1416, i32 0
  %vector656 = shufflevector <16 x double> %temp655, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2506" = add nuw i64 %CurrSBIndex..3, 9344
  %"&pSB[currWI].offset2507" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2506"
  %CastToValueType2508 = bitcast i8* %"&pSB[currWI].offset2507" to <16 x double>*
  %loadedValue2509 = load <16 x double>* %CastToValueType2508, align 128
  %1417 = fmul <16 x double> %loadedValue2509, %vector656
  %1418 = load double* %994, align 8
  %1419 = load double* %996, align 8
  %1420 = load double* %998, align 8
  %1421 = load double* %1000, align 8
  %1422 = load double* %1002, align 8
  %1423 = load double* %1004, align 8
  %1424 = load double* %1006, align 8
  %1425 = load double* %1008, align 8
  %1426 = load double* %1010, align 8
  %1427 = load double* %1012, align 8
  %1428 = load double* %1014, align 8
  %1429 = load double* %1016, align 8
  %1430 = load double* %1018, align 8
  %1431 = load double* %1020, align 8
  %1432 = load double* %1022, align 8
  %1433 = load double* %1024, align 8
  %temp.vect657 = insertelement <16 x double> undef, double %1418, i32 0
  %temp.vect658 = insertelement <16 x double> %temp.vect657, double %1419, i32 1
  %temp.vect659 = insertelement <16 x double> %temp.vect658, double %1420, i32 2
  %temp.vect660 = insertelement <16 x double> %temp.vect659, double %1421, i32 3
  %temp.vect661 = insertelement <16 x double> %temp.vect660, double %1422, i32 4
  %temp.vect662 = insertelement <16 x double> %temp.vect661, double %1423, i32 5
  %temp.vect663 = insertelement <16 x double> %temp.vect662, double %1424, i32 6
  %temp.vect664 = insertelement <16 x double> %temp.vect663, double %1425, i32 7
  %temp.vect665 = insertelement <16 x double> %temp.vect664, double %1426, i32 8
  %temp.vect666 = insertelement <16 x double> %temp.vect665, double %1427, i32 9
  %temp.vect667 = insertelement <16 x double> %temp.vect666, double %1428, i32 10
  %temp.vect668 = insertelement <16 x double> %temp.vect667, double %1429, i32 11
  %temp.vect669 = insertelement <16 x double> %temp.vect668, double %1430, i32 12
  %temp.vect670 = insertelement <16 x double> %temp.vect669, double %1431, i32 13
  %temp.vect671 = insertelement <16 x double> %temp.vect670, double %1432, i32 14
  %temp.vect672 = insertelement <16 x double> %temp.vect671, double %1433, i32 15
  %1434 = fadd <16 x double> %temp.vect672, %1417
  %1435 = load double addrspace(3)* %21, align 16
  %temp673 = insertelement <16 x double> undef, double %1435, i32 0
  %vector674 = shufflevector <16 x double> %temp673, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2501" = add nuw i64 %CurrSBIndex..3, 9344
  %"&pSB[currWI].offset2502" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2501"
  %CastToValueType2503 = bitcast i8* %"&pSB[currWI].offset2502" to <16 x double>*
  %loadedValue2504 = load <16 x double>* %CastToValueType2503, align 128
  %1436 = fmul <16 x double> %loadedValue2504, %vector674
  %1437 = load double* %1026, align 16
  %1438 = load double* %1028, align 16
  %1439 = load double* %1030, align 16
  %1440 = load double* %1032, align 16
  %1441 = load double* %1034, align 16
  %1442 = load double* %1036, align 16
  %1443 = load double* %1038, align 16
  %1444 = load double* %1040, align 16
  %1445 = load double* %1042, align 16
  %1446 = load double* %1044, align 16
  %1447 = load double* %1046, align 16
  %1448 = load double* %1048, align 16
  %1449 = load double* %1050, align 16
  %1450 = load double* %1052, align 16
  %1451 = load double* %1054, align 16
  %1452 = load double* %1056, align 16
  %temp.vect675 = insertelement <16 x double> undef, double %1437, i32 0
  %temp.vect676 = insertelement <16 x double> %temp.vect675, double %1438, i32 1
  %temp.vect677 = insertelement <16 x double> %temp.vect676, double %1439, i32 2
  %temp.vect678 = insertelement <16 x double> %temp.vect677, double %1440, i32 3
  %temp.vect679 = insertelement <16 x double> %temp.vect678, double %1441, i32 4
  %temp.vect680 = insertelement <16 x double> %temp.vect679, double %1442, i32 5
  %temp.vect681 = insertelement <16 x double> %temp.vect680, double %1443, i32 6
  %temp.vect682 = insertelement <16 x double> %temp.vect681, double %1444, i32 7
  %temp.vect683 = insertelement <16 x double> %temp.vect682, double %1445, i32 8
  %temp.vect684 = insertelement <16 x double> %temp.vect683, double %1446, i32 9
  %temp.vect685 = insertelement <16 x double> %temp.vect684, double %1447, i32 10
  %temp.vect686 = insertelement <16 x double> %temp.vect685, double %1448, i32 11
  %temp.vect687 = insertelement <16 x double> %temp.vect686, double %1449, i32 12
  %temp.vect688 = insertelement <16 x double> %temp.vect687, double %1450, i32 13
  %temp.vect689 = insertelement <16 x double> %temp.vect688, double %1451, i32 14
  %temp.vect690 = insertelement <16 x double> %temp.vect689, double %1452, i32 15
  %1453 = fadd <16 x double> %temp.vect690, %1436
  %1454 = load double addrspace(3)* %23, align 8
  %temp691 = insertelement <16 x double> undef, double %1454, i32 0
  %vector692 = shufflevector <16 x double> %temp691, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2496" = add nuw i64 %CurrSBIndex..3, 9344
  %"&pSB[currWI].offset2497" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2496"
  %CastToValueType2498 = bitcast i8* %"&pSB[currWI].offset2497" to <16 x double>*
  %loadedValue2499 = load <16 x double>* %CastToValueType2498, align 128
  %1455 = fmul <16 x double> %loadedValue2499, %vector692
  %1456 = load double* %1058, align 8
  %1457 = load double* %1060, align 8
  %1458 = load double* %1062, align 8
  %1459 = load double* %1064, align 8
  %1460 = load double* %1066, align 8
  %1461 = load double* %1068, align 8
  %1462 = load double* %1070, align 8
  %1463 = load double* %1072, align 8
  %1464 = load double* %1074, align 8
  %1465 = load double* %1076, align 8
  %1466 = load double* %1078, align 8
  %1467 = load double* %1080, align 8
  %1468 = load double* %1082, align 8
  %1469 = load double* %1084, align 8
  %1470 = load double* %1086, align 8
  %1471 = load double* %1088, align 8
  %temp.vect693 = insertelement <16 x double> undef, double %1456, i32 0
  %temp.vect694 = insertelement <16 x double> %temp.vect693, double %1457, i32 1
  %temp.vect695 = insertelement <16 x double> %temp.vect694, double %1458, i32 2
  %temp.vect696 = insertelement <16 x double> %temp.vect695, double %1459, i32 3
  %temp.vect697 = insertelement <16 x double> %temp.vect696, double %1460, i32 4
  %temp.vect698 = insertelement <16 x double> %temp.vect697, double %1461, i32 5
  %temp.vect699 = insertelement <16 x double> %temp.vect698, double %1462, i32 6
  %temp.vect700 = insertelement <16 x double> %temp.vect699, double %1463, i32 7
  %temp.vect701 = insertelement <16 x double> %temp.vect700, double %1464, i32 8
  %temp.vect702 = insertelement <16 x double> %temp.vect701, double %1465, i32 9
  %temp.vect703 = insertelement <16 x double> %temp.vect702, double %1466, i32 10
  %temp.vect704 = insertelement <16 x double> %temp.vect703, double %1467, i32 11
  %temp.vect705 = insertelement <16 x double> %temp.vect704, double %1468, i32 12
  %temp.vect706 = insertelement <16 x double> %temp.vect705, double %1469, i32 13
  %temp.vect707 = insertelement <16 x double> %temp.vect706, double %1470, i32 14
  %temp.vect708 = insertelement <16 x double> %temp.vect707, double %1471, i32 15
  %1472 = fadd <16 x double> %temp.vect708, %1455
  %1473 = load double addrspace(3)* %25, align 16
  %temp709 = insertelement <16 x double> undef, double %1473, i32 0
  %vector710 = shufflevector <16 x double> %temp709, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2491" = add nuw i64 %CurrSBIndex..3, 9344
  %"&pSB[currWI].offset2492" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2491"
  %CastToValueType2493 = bitcast i8* %"&pSB[currWI].offset2492" to <16 x double>*
  %loadedValue2494 = load <16 x double>* %CastToValueType2493, align 128
  %1474 = fmul <16 x double> %loadedValue2494, %vector710
  %1475 = load double* %1090, align 16
  %1476 = load double* %1092, align 16
  %1477 = load double* %1094, align 16
  %1478 = load double* %1096, align 16
  %1479 = load double* %1098, align 16
  %1480 = load double* %1100, align 16
  %1481 = load double* %1102, align 16
  %1482 = load double* %1104, align 16
  %1483 = load double* %1106, align 16
  %1484 = load double* %1108, align 16
  %1485 = load double* %1110, align 16
  %1486 = load double* %1112, align 16
  %1487 = load double* %1114, align 16
  %1488 = load double* %1116, align 16
  %1489 = load double* %1118, align 16
  %1490 = load double* %1120, align 16
  %temp.vect711 = insertelement <16 x double> undef, double %1475, i32 0
  %temp.vect712 = insertelement <16 x double> %temp.vect711, double %1476, i32 1
  %temp.vect713 = insertelement <16 x double> %temp.vect712, double %1477, i32 2
  %temp.vect714 = insertelement <16 x double> %temp.vect713, double %1478, i32 3
  %temp.vect715 = insertelement <16 x double> %temp.vect714, double %1479, i32 4
  %temp.vect716 = insertelement <16 x double> %temp.vect715, double %1480, i32 5
  %temp.vect717 = insertelement <16 x double> %temp.vect716, double %1481, i32 6
  %temp.vect718 = insertelement <16 x double> %temp.vect717, double %1482, i32 7
  %temp.vect719 = insertelement <16 x double> %temp.vect718, double %1483, i32 8
  %temp.vect720 = insertelement <16 x double> %temp.vect719, double %1484, i32 9
  %temp.vect721 = insertelement <16 x double> %temp.vect720, double %1485, i32 10
  %temp.vect722 = insertelement <16 x double> %temp.vect721, double %1486, i32 11
  %temp.vect723 = insertelement <16 x double> %temp.vect722, double %1487, i32 12
  %temp.vect724 = insertelement <16 x double> %temp.vect723, double %1488, i32 13
  %temp.vect725 = insertelement <16 x double> %temp.vect724, double %1489, i32 14
  %temp.vect726 = insertelement <16 x double> %temp.vect725, double %1490, i32 15
  %1491 = fadd <16 x double> %temp.vect726, %1474
  %1492 = load double addrspace(3)* %27, align 8
  %temp727 = insertelement <16 x double> undef, double %1492, i32 0
  %vector728 = shufflevector <16 x double> %temp727, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2486" = add nuw i64 %CurrSBIndex..3, 9344
  %"&pSB[currWI].offset2487" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2486"
  %CastToValueType2488 = bitcast i8* %"&pSB[currWI].offset2487" to <16 x double>*
  %loadedValue2489 = load <16 x double>* %CastToValueType2488, align 128
  %1493 = fmul <16 x double> %loadedValue2489, %vector728
  %1494 = load double* %1122, align 8
  %1495 = load double* %1124, align 8
  %1496 = load double* %1126, align 8
  %1497 = load double* %1128, align 8
  %1498 = load double* %1130, align 8
  %1499 = load double* %1132, align 8
  %1500 = load double* %1134, align 8
  %1501 = load double* %1136, align 8
  %1502 = load double* %1138, align 8
  %1503 = load double* %1140, align 8
  %1504 = load double* %1142, align 8
  %1505 = load double* %1144, align 8
  %1506 = load double* %1146, align 8
  %1507 = load double* %1148, align 8
  %1508 = load double* %1150, align 8
  %1509 = load double* %1152, align 8
  %temp.vect729 = insertelement <16 x double> undef, double %1494, i32 0
  %temp.vect730 = insertelement <16 x double> %temp.vect729, double %1495, i32 1
  %temp.vect731 = insertelement <16 x double> %temp.vect730, double %1496, i32 2
  %temp.vect732 = insertelement <16 x double> %temp.vect731, double %1497, i32 3
  %temp.vect733 = insertelement <16 x double> %temp.vect732, double %1498, i32 4
  %temp.vect734 = insertelement <16 x double> %temp.vect733, double %1499, i32 5
  %temp.vect735 = insertelement <16 x double> %temp.vect734, double %1500, i32 6
  %temp.vect736 = insertelement <16 x double> %temp.vect735, double %1501, i32 7
  %temp.vect737 = insertelement <16 x double> %temp.vect736, double %1502, i32 8
  %temp.vect738 = insertelement <16 x double> %temp.vect737, double %1503, i32 9
  %temp.vect739 = insertelement <16 x double> %temp.vect738, double %1504, i32 10
  %temp.vect740 = insertelement <16 x double> %temp.vect739, double %1505, i32 11
  %temp.vect741 = insertelement <16 x double> %temp.vect740, double %1506, i32 12
  %temp.vect742 = insertelement <16 x double> %temp.vect741, double %1507, i32 13
  %temp.vect743 = insertelement <16 x double> %temp.vect742, double %1508, i32 14
  %temp.vect744 = insertelement <16 x double> %temp.vect743, double %1509, i32 15
  %1510 = fadd <16 x double> %temp.vect744, %1493
  %1511 = load double addrspace(3)* %29, align 16
  %temp745 = insertelement <16 x double> undef, double %1511, i32 0
  %vector746 = shufflevector <16 x double> %temp745, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2481" = add nuw i64 %CurrSBIndex..3, 9344
  %"&pSB[currWI].offset2482" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2481"
  %CastToValueType2483 = bitcast i8* %"&pSB[currWI].offset2482" to <16 x double>*
  %loadedValue2484 = load <16 x double>* %CastToValueType2483, align 128
  %1512 = fmul <16 x double> %loadedValue2484, %vector746
  %1513 = load double* %1154, align 16
  %1514 = load double* %1156, align 16
  %1515 = load double* %1158, align 16
  %1516 = load double* %1160, align 16
  %1517 = load double* %1162, align 16
  %1518 = load double* %1164, align 16
  %1519 = load double* %1166, align 16
  %1520 = load double* %1168, align 16
  %1521 = load double* %1170, align 16
  %1522 = load double* %1172, align 16
  %1523 = load double* %1174, align 16
  %1524 = load double* %1176, align 16
  %1525 = load double* %1178, align 16
  %1526 = load double* %1180, align 16
  %1527 = load double* %1182, align 16
  %1528 = load double* %1184, align 16
  %temp.vect747 = insertelement <16 x double> undef, double %1513, i32 0
  %temp.vect748 = insertelement <16 x double> %temp.vect747, double %1514, i32 1
  %temp.vect749 = insertelement <16 x double> %temp.vect748, double %1515, i32 2
  %temp.vect750 = insertelement <16 x double> %temp.vect749, double %1516, i32 3
  %temp.vect751 = insertelement <16 x double> %temp.vect750, double %1517, i32 4
  %temp.vect752 = insertelement <16 x double> %temp.vect751, double %1518, i32 5
  %temp.vect753 = insertelement <16 x double> %temp.vect752, double %1519, i32 6
  %temp.vect754 = insertelement <16 x double> %temp.vect753, double %1520, i32 7
  %temp.vect755 = insertelement <16 x double> %temp.vect754, double %1521, i32 8
  %temp.vect756 = insertelement <16 x double> %temp.vect755, double %1522, i32 9
  %temp.vect757 = insertelement <16 x double> %temp.vect756, double %1523, i32 10
  %temp.vect758 = insertelement <16 x double> %temp.vect757, double %1524, i32 11
  %temp.vect759 = insertelement <16 x double> %temp.vect758, double %1525, i32 12
  %temp.vect760 = insertelement <16 x double> %temp.vect759, double %1526, i32 13
  %temp.vect761 = insertelement <16 x double> %temp.vect760, double %1527, i32 14
  %temp.vect762 = insertelement <16 x double> %temp.vect761, double %1528, i32 15
  %1529 = fadd <16 x double> %temp.vect762, %1512
  %1530 = load double addrspace(3)* %31, align 8
  %temp763 = insertelement <16 x double> undef, double %1530, i32 0
  %vector764 = shufflevector <16 x double> %temp763, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2476" = add nuw i64 %CurrSBIndex..3, 9344
  %"&pSB[currWI].offset2477" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2476"
  %CastToValueType2478 = bitcast i8* %"&pSB[currWI].offset2477" to <16 x double>*
  %loadedValue2479 = load <16 x double>* %CastToValueType2478, align 128
  %1531 = fmul <16 x double> %loadedValue2479, %vector764
  %1532 = load double* %1186, align 8
  %1533 = load double* %1188, align 8
  %1534 = load double* %1190, align 8
  %1535 = load double* %1192, align 8
  %1536 = load double* %1194, align 8
  %1537 = load double* %1196, align 8
  %1538 = load double* %1198, align 8
  %1539 = load double* %1200, align 8
  %1540 = load double* %1202, align 8
  %1541 = load double* %1204, align 8
  %1542 = load double* %1206, align 8
  %1543 = load double* %1208, align 8
  %1544 = load double* %1210, align 8
  %1545 = load double* %1212, align 8
  %1546 = load double* %1214, align 8
  %1547 = load double* %1216, align 8
  %temp.vect765 = insertelement <16 x double> undef, double %1532, i32 0
  %temp.vect766 = insertelement <16 x double> %temp.vect765, double %1533, i32 1
  %temp.vect767 = insertelement <16 x double> %temp.vect766, double %1534, i32 2
  %temp.vect768 = insertelement <16 x double> %temp.vect767, double %1535, i32 3
  %temp.vect769 = insertelement <16 x double> %temp.vect768, double %1536, i32 4
  %temp.vect770 = insertelement <16 x double> %temp.vect769, double %1537, i32 5
  %temp.vect771 = insertelement <16 x double> %temp.vect770, double %1538, i32 6
  %temp.vect772 = insertelement <16 x double> %temp.vect771, double %1539, i32 7
  %temp.vect773 = insertelement <16 x double> %temp.vect772, double %1540, i32 8
  %temp.vect774 = insertelement <16 x double> %temp.vect773, double %1541, i32 9
  %temp.vect775 = insertelement <16 x double> %temp.vect774, double %1542, i32 10
  %temp.vect776 = insertelement <16 x double> %temp.vect775, double %1543, i32 11
  %temp.vect777 = insertelement <16 x double> %temp.vect776, double %1544, i32 12
  %temp.vect778 = insertelement <16 x double> %temp.vect777, double %1545, i32 13
  %temp.vect779 = insertelement <16 x double> %temp.vect778, double %1546, i32 14
  %temp.vect780 = insertelement <16 x double> %temp.vect779, double %1547, i32 15
  %1548 = fadd <16 x double> %temp.vect780, %1531
  %"&(pSB[currWI].offset)2467" = add nuw i64 %CurrSBIndex..3, 9320
  %"&pSB[currWI].offset2468" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2467"
  %CastToValueType2469 = bitcast i8* %"&pSB[currWI].offset2468" to double addrspace(1)**
  %loadedValue2470 = load double addrspace(1)** %CastToValueType2469, align 8
  %ptrTypeCast781 = bitcast double addrspace(1)* %loadedValue2470 to <16 x double> addrspace(1)*
  %1549 = load <16 x double> addrspace(1)* %ptrTypeCast781, align 8
  %1550 = load double addrspace(3)* %33, align 8
  %temp782 = insertelement <16 x double> undef, double %1550, i32 0
  %vector783 = shufflevector <16 x double> %temp782, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2635" = add nuw i64 %CurrSBIndex..3, 9472
  %"&pSB[currWI].offset2636" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2635"
  %CastToValueType2637 = bitcast i8* %"&pSB[currWI].offset2636" to <16 x double>*
  %loadedValue2638 = load <16 x double>* %CastToValueType2637, align 128
  %1551 = fmul <16 x double> %loadedValue2638, %vector783
  %1552 = fadd <16 x double> %1263, %1551
  %1553 = load double addrspace(3)* %35, align 8
  %temp784 = insertelement <16 x double> undef, double %1553, i32 0
  %vector785 = shufflevector <16 x double> %temp784, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2630" = add nuw i64 %CurrSBIndex..3, 9472
  %"&pSB[currWI].offset2631" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2630"
  %CastToValueType2632 = bitcast i8* %"&pSB[currWI].offset2631" to <16 x double>*
  %loadedValue2633 = load <16 x double>* %CastToValueType2632, align 128
  %1554 = fmul <16 x double> %loadedValue2633, %vector785
  %1555 = fadd <16 x double> %1282, %1554
  %1556 = load double addrspace(3)* %37, align 8
  %temp786 = insertelement <16 x double> undef, double %1556, i32 0
  %vector787 = shufflevector <16 x double> %temp786, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2625" = add nuw i64 %CurrSBIndex..3, 9472
  %"&pSB[currWI].offset2626" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2625"
  %CastToValueType2627 = bitcast i8* %"&pSB[currWI].offset2626" to <16 x double>*
  %loadedValue2628 = load <16 x double>* %CastToValueType2627, align 128
  %1557 = fmul <16 x double> %loadedValue2628, %vector787
  %1558 = fadd <16 x double> %1301, %1557
  %1559 = load double addrspace(3)* %39, align 8
  %temp788 = insertelement <16 x double> undef, double %1559, i32 0
  %vector789 = shufflevector <16 x double> %temp788, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2620" = add nuw i64 %CurrSBIndex..3, 9472
  %"&pSB[currWI].offset2621" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2620"
  %CastToValueType2622 = bitcast i8* %"&pSB[currWI].offset2621" to <16 x double>*
  %loadedValue2623 = load <16 x double>* %CastToValueType2622, align 128
  %1560 = fmul <16 x double> %loadedValue2623, %vector789
  %1561 = fadd <16 x double> %1320, %1560
  %1562 = load double addrspace(3)* %41, align 8
  %temp790 = insertelement <16 x double> undef, double %1562, i32 0
  %vector791 = shufflevector <16 x double> %temp790, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2615" = add nuw i64 %CurrSBIndex..3, 9472
  %"&pSB[currWI].offset2616" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2615"
  %CastToValueType2617 = bitcast i8* %"&pSB[currWI].offset2616" to <16 x double>*
  %loadedValue2618 = load <16 x double>* %CastToValueType2617, align 128
  %1563 = fmul <16 x double> %loadedValue2618, %vector791
  %1564 = fadd <16 x double> %1339, %1563
  %1565 = load double addrspace(3)* %43, align 8
  %temp792 = insertelement <16 x double> undef, double %1565, i32 0
  %vector793 = shufflevector <16 x double> %temp792, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2610" = add nuw i64 %CurrSBIndex..3, 9472
  %"&pSB[currWI].offset2611" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2610"
  %CastToValueType2612 = bitcast i8* %"&pSB[currWI].offset2611" to <16 x double>*
  %loadedValue2613 = load <16 x double>* %CastToValueType2612, align 128
  %1566 = fmul <16 x double> %loadedValue2613, %vector793
  %1567 = fadd <16 x double> %1358, %1566
  %1568 = load double addrspace(3)* %45, align 8
  %temp794 = insertelement <16 x double> undef, double %1568, i32 0
  %vector795 = shufflevector <16 x double> %temp794, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2605" = add nuw i64 %CurrSBIndex..3, 9472
  %"&pSB[currWI].offset2606" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2605"
  %CastToValueType2607 = bitcast i8* %"&pSB[currWI].offset2606" to <16 x double>*
  %loadedValue2608 = load <16 x double>* %CastToValueType2607, align 128
  %1569 = fmul <16 x double> %loadedValue2608, %vector795
  %1570 = fadd <16 x double> %1377, %1569
  %1571 = load double addrspace(3)* %47, align 8
  %temp796 = insertelement <16 x double> undef, double %1571, i32 0
  %vector797 = shufflevector <16 x double> %temp796, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2600" = add nuw i64 %CurrSBIndex..3, 9472
  %"&pSB[currWI].offset2601" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2600"
  %CastToValueType2602 = bitcast i8* %"&pSB[currWI].offset2601" to <16 x double>*
  %loadedValue2603 = load <16 x double>* %CastToValueType2602, align 128
  %1572 = fmul <16 x double> %loadedValue2603, %vector797
  %1573 = fadd <16 x double> %1396, %1572
  %1574 = load double addrspace(3)* %49, align 8
  %temp798 = insertelement <16 x double> undef, double %1574, i32 0
  %vector799 = shufflevector <16 x double> %temp798, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2595" = add nuw i64 %CurrSBIndex..3, 9472
  %"&pSB[currWI].offset2596" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2595"
  %CastToValueType2597 = bitcast i8* %"&pSB[currWI].offset2596" to <16 x double>*
  %loadedValue2598 = load <16 x double>* %CastToValueType2597, align 128
  %1575 = fmul <16 x double> %loadedValue2598, %vector799
  %1576 = fadd <16 x double> %1415, %1575
  %1577 = load double addrspace(3)* %51, align 8
  %temp800 = insertelement <16 x double> undef, double %1577, i32 0
  %vector801 = shufflevector <16 x double> %temp800, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2590" = add nuw i64 %CurrSBIndex..3, 9472
  %"&pSB[currWI].offset2591" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2590"
  %CastToValueType2592 = bitcast i8* %"&pSB[currWI].offset2591" to <16 x double>*
  %loadedValue2593 = load <16 x double>* %CastToValueType2592, align 128
  %1578 = fmul <16 x double> %loadedValue2593, %vector801
  %1579 = fadd <16 x double> %1434, %1578
  %1580 = load double addrspace(3)* %53, align 8
  %temp802 = insertelement <16 x double> undef, double %1580, i32 0
  %vector803 = shufflevector <16 x double> %temp802, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2585" = add nuw i64 %CurrSBIndex..3, 9472
  %"&pSB[currWI].offset2586" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2585"
  %CastToValueType2587 = bitcast i8* %"&pSB[currWI].offset2586" to <16 x double>*
  %loadedValue2588 = load <16 x double>* %CastToValueType2587, align 128
  %1581 = fmul <16 x double> %loadedValue2588, %vector803
  %1582 = fadd <16 x double> %1453, %1581
  %1583 = load double addrspace(3)* %55, align 8
  %temp804 = insertelement <16 x double> undef, double %1583, i32 0
  %vector805 = shufflevector <16 x double> %temp804, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2580" = add nuw i64 %CurrSBIndex..3, 9472
  %"&pSB[currWI].offset2581" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2580"
  %CastToValueType2582 = bitcast i8* %"&pSB[currWI].offset2581" to <16 x double>*
  %loadedValue2583 = load <16 x double>* %CastToValueType2582, align 128
  %1584 = fmul <16 x double> %loadedValue2583, %vector805
  %1585 = fadd <16 x double> %1472, %1584
  %1586 = load double addrspace(3)* %57, align 8
  %temp806 = insertelement <16 x double> undef, double %1586, i32 0
  %vector807 = shufflevector <16 x double> %temp806, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2575" = add nuw i64 %CurrSBIndex..3, 9472
  %"&pSB[currWI].offset2576" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2575"
  %CastToValueType2577 = bitcast i8* %"&pSB[currWI].offset2576" to <16 x double>*
  %loadedValue2578 = load <16 x double>* %CastToValueType2577, align 128
  %1587 = fmul <16 x double> %loadedValue2578, %vector807
  %1588 = fadd <16 x double> %1491, %1587
  %1589 = load double addrspace(3)* %59, align 8
  %temp808 = insertelement <16 x double> undef, double %1589, i32 0
  %vector809 = shufflevector <16 x double> %temp808, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2570" = add nuw i64 %CurrSBIndex..3, 9472
  %"&pSB[currWI].offset2571" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2570"
  %CastToValueType2572 = bitcast i8* %"&pSB[currWI].offset2571" to <16 x double>*
  %loadedValue2573 = load <16 x double>* %CastToValueType2572, align 128
  %1590 = fmul <16 x double> %loadedValue2573, %vector809
  %1591 = fadd <16 x double> %1510, %1590
  %1592 = load double addrspace(3)* %61, align 8
  %temp810 = insertelement <16 x double> undef, double %1592, i32 0
  %vector811 = shufflevector <16 x double> %temp810, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2565" = add nuw i64 %CurrSBIndex..3, 9472
  %"&pSB[currWI].offset2566" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2565"
  %CastToValueType2567 = bitcast i8* %"&pSB[currWI].offset2566" to <16 x double>*
  %loadedValue2568 = load <16 x double>* %CastToValueType2567, align 128
  %1593 = fmul <16 x double> %loadedValue2568, %vector811
  %1594 = fadd <16 x double> %1529, %1593
  %1595 = load double addrspace(3)* %63, align 8
  %temp812 = insertelement <16 x double> undef, double %1595, i32 0
  %vector813 = shufflevector <16 x double> %temp812, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2560" = add nuw i64 %CurrSBIndex..3, 9472
  %"&pSB[currWI].offset2561" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2560"
  %CastToValueType2562 = bitcast i8* %"&pSB[currWI].offset2561" to <16 x double>*
  %loadedValue2563 = load <16 x double>* %CastToValueType2562, align 128
  %1596 = fmul <16 x double> %loadedValue2563, %vector813
  %1597 = fadd <16 x double> %1548, %1596
  %"&(pSB[currWI].offset)2458" = add nuw i64 %CurrSBIndex..3, 9312
  %"&pSB[currWI].offset2459" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2458"
  %CastToValueType2460 = bitcast i8* %"&pSB[currWI].offset2459" to double addrspace(1)**
  %loadedValue2461 = load double addrspace(1)** %CastToValueType2460, align 8
  %ptrTypeCast814 = bitcast double addrspace(1)* %loadedValue2461 to <16 x double> addrspace(1)*
  %1598 = load <16 x double> addrspace(1)* %ptrTypeCast814, align 8
  %1599 = load double addrspace(3)* %65, align 16
  %temp815 = insertelement <16 x double> undef, double %1599, i32 0
  %vector816 = shufflevector <16 x double> %temp815, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2719" = add nuw i64 %CurrSBIndex..3, 9600
  %"&pSB[currWI].offset2720" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2719"
  %CastToValueType2721 = bitcast i8* %"&pSB[currWI].offset2720" to <16 x double>*
  %loadedValue2722 = load <16 x double>* %CastToValueType2721, align 128
  %1600 = fmul <16 x double> %loadedValue2722, %vector816
  %1601 = fadd <16 x double> %1552, %1600
  %1602 = load double addrspace(3)* %67, align 8
  %temp817 = insertelement <16 x double> undef, double %1602, i32 0
  %vector818 = shufflevector <16 x double> %temp817, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2714" = add nuw i64 %CurrSBIndex..3, 9600
  %"&pSB[currWI].offset2715" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2714"
  %CastToValueType2716 = bitcast i8* %"&pSB[currWI].offset2715" to <16 x double>*
  %loadedValue2717 = load <16 x double>* %CastToValueType2716, align 128
  %1603 = fmul <16 x double> %loadedValue2717, %vector818
  %1604 = fadd <16 x double> %1555, %1603
  %1605 = load double addrspace(3)* %69, align 16
  %temp819 = insertelement <16 x double> undef, double %1605, i32 0
  %vector820 = shufflevector <16 x double> %temp819, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2709" = add nuw i64 %CurrSBIndex..3, 9600
  %"&pSB[currWI].offset2710" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2709"
  %CastToValueType2711 = bitcast i8* %"&pSB[currWI].offset2710" to <16 x double>*
  %loadedValue2712 = load <16 x double>* %CastToValueType2711, align 128
  %1606 = fmul <16 x double> %loadedValue2712, %vector820
  %1607 = fadd <16 x double> %1558, %1606
  %1608 = load double addrspace(3)* %71, align 8
  %temp821 = insertelement <16 x double> undef, double %1608, i32 0
  %vector822 = shufflevector <16 x double> %temp821, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2704" = add nuw i64 %CurrSBIndex..3, 9600
  %"&pSB[currWI].offset2705" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2704"
  %CastToValueType2706 = bitcast i8* %"&pSB[currWI].offset2705" to <16 x double>*
  %loadedValue2707 = load <16 x double>* %CastToValueType2706, align 128
  %1609 = fmul <16 x double> %loadedValue2707, %vector822
  %1610 = fadd <16 x double> %1561, %1609
  %1611 = load double addrspace(3)* %73, align 16
  %temp823 = insertelement <16 x double> undef, double %1611, i32 0
  %vector824 = shufflevector <16 x double> %temp823, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2699" = add nuw i64 %CurrSBIndex..3, 9600
  %"&pSB[currWI].offset2700" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2699"
  %CastToValueType2701 = bitcast i8* %"&pSB[currWI].offset2700" to <16 x double>*
  %loadedValue2702 = load <16 x double>* %CastToValueType2701, align 128
  %1612 = fmul <16 x double> %loadedValue2702, %vector824
  %1613 = fadd <16 x double> %1564, %1612
  %1614 = load double addrspace(3)* %75, align 8
  %temp825 = insertelement <16 x double> undef, double %1614, i32 0
  %vector826 = shufflevector <16 x double> %temp825, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2694" = add nuw i64 %CurrSBIndex..3, 9600
  %"&pSB[currWI].offset2695" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2694"
  %CastToValueType2696 = bitcast i8* %"&pSB[currWI].offset2695" to <16 x double>*
  %loadedValue2697 = load <16 x double>* %CastToValueType2696, align 128
  %1615 = fmul <16 x double> %loadedValue2697, %vector826
  %1616 = fadd <16 x double> %1567, %1615
  %1617 = load double addrspace(3)* %77, align 16
  %temp827 = insertelement <16 x double> undef, double %1617, i32 0
  %vector828 = shufflevector <16 x double> %temp827, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2689" = add nuw i64 %CurrSBIndex..3, 9600
  %"&pSB[currWI].offset2690" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2689"
  %CastToValueType2691 = bitcast i8* %"&pSB[currWI].offset2690" to <16 x double>*
  %loadedValue2692 = load <16 x double>* %CastToValueType2691, align 128
  %1618 = fmul <16 x double> %loadedValue2692, %vector828
  %1619 = fadd <16 x double> %1570, %1618
  %1620 = load double addrspace(3)* %79, align 8
  %temp829 = insertelement <16 x double> undef, double %1620, i32 0
  %vector830 = shufflevector <16 x double> %temp829, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2684" = add nuw i64 %CurrSBIndex..3, 9600
  %"&pSB[currWI].offset2685" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2684"
  %CastToValueType2686 = bitcast i8* %"&pSB[currWI].offset2685" to <16 x double>*
  %loadedValue2687 = load <16 x double>* %CastToValueType2686, align 128
  %1621 = fmul <16 x double> %loadedValue2687, %vector830
  %1622 = fadd <16 x double> %1573, %1621
  %1623 = load double addrspace(3)* %81, align 16
  %temp831 = insertelement <16 x double> undef, double %1623, i32 0
  %vector832 = shufflevector <16 x double> %temp831, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2679" = add nuw i64 %CurrSBIndex..3, 9600
  %"&pSB[currWI].offset2680" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2679"
  %CastToValueType2681 = bitcast i8* %"&pSB[currWI].offset2680" to <16 x double>*
  %loadedValue2682 = load <16 x double>* %CastToValueType2681, align 128
  %1624 = fmul <16 x double> %loadedValue2682, %vector832
  %1625 = fadd <16 x double> %1576, %1624
  %1626 = load double addrspace(3)* %83, align 8
  %temp833 = insertelement <16 x double> undef, double %1626, i32 0
  %vector834 = shufflevector <16 x double> %temp833, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2674" = add nuw i64 %CurrSBIndex..3, 9600
  %"&pSB[currWI].offset2675" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2674"
  %CastToValueType2676 = bitcast i8* %"&pSB[currWI].offset2675" to <16 x double>*
  %loadedValue2677 = load <16 x double>* %CastToValueType2676, align 128
  %1627 = fmul <16 x double> %loadedValue2677, %vector834
  %1628 = fadd <16 x double> %1579, %1627
  %1629 = load double addrspace(3)* %85, align 16
  %temp835 = insertelement <16 x double> undef, double %1629, i32 0
  %vector836 = shufflevector <16 x double> %temp835, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2669" = add nuw i64 %CurrSBIndex..3, 9600
  %"&pSB[currWI].offset2670" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2669"
  %CastToValueType2671 = bitcast i8* %"&pSB[currWI].offset2670" to <16 x double>*
  %loadedValue2672 = load <16 x double>* %CastToValueType2671, align 128
  %1630 = fmul <16 x double> %loadedValue2672, %vector836
  %1631 = fadd <16 x double> %1582, %1630
  %1632 = load double addrspace(3)* %87, align 8
  %temp837 = insertelement <16 x double> undef, double %1632, i32 0
  %vector838 = shufflevector <16 x double> %temp837, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2664" = add nuw i64 %CurrSBIndex..3, 9600
  %"&pSB[currWI].offset2665" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2664"
  %CastToValueType2666 = bitcast i8* %"&pSB[currWI].offset2665" to <16 x double>*
  %loadedValue2667 = load <16 x double>* %CastToValueType2666, align 128
  %1633 = fmul <16 x double> %loadedValue2667, %vector838
  %1634 = fadd <16 x double> %1585, %1633
  %1635 = load double addrspace(3)* %89, align 16
  %temp839 = insertelement <16 x double> undef, double %1635, i32 0
  %vector840 = shufflevector <16 x double> %temp839, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2659" = add nuw i64 %CurrSBIndex..3, 9600
  %"&pSB[currWI].offset2660" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2659"
  %CastToValueType2661 = bitcast i8* %"&pSB[currWI].offset2660" to <16 x double>*
  %loadedValue2662 = load <16 x double>* %CastToValueType2661, align 128
  %1636 = fmul <16 x double> %loadedValue2662, %vector840
  %1637 = fadd <16 x double> %1588, %1636
  %1638 = load double addrspace(3)* %91, align 8
  %temp841 = insertelement <16 x double> undef, double %1638, i32 0
  %vector842 = shufflevector <16 x double> %temp841, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2654" = add nuw i64 %CurrSBIndex..3, 9600
  %"&pSB[currWI].offset2655" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2654"
  %CastToValueType2656 = bitcast i8* %"&pSB[currWI].offset2655" to <16 x double>*
  %loadedValue2657 = load <16 x double>* %CastToValueType2656, align 128
  %1639 = fmul <16 x double> %loadedValue2657, %vector842
  %1640 = fadd <16 x double> %1591, %1639
  %1641 = load double addrspace(3)* %93, align 16
  %temp843 = insertelement <16 x double> undef, double %1641, i32 0
  %vector844 = shufflevector <16 x double> %temp843, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2649" = add nuw i64 %CurrSBIndex..3, 9600
  %"&pSB[currWI].offset2650" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2649"
  %CastToValueType2651 = bitcast i8* %"&pSB[currWI].offset2650" to <16 x double>*
  %loadedValue2652 = load <16 x double>* %CastToValueType2651, align 128
  %1642 = fmul <16 x double> %loadedValue2652, %vector844
  %1643 = fadd <16 x double> %1594, %1642
  %1644 = load double addrspace(3)* %95, align 8
  %temp845 = insertelement <16 x double> undef, double %1644, i32 0
  %vector846 = shufflevector <16 x double> %temp845, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2644" = add nuw i64 %CurrSBIndex..3, 9600
  %"&pSB[currWI].offset2645" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2644"
  %CastToValueType2646 = bitcast i8* %"&pSB[currWI].offset2645" to <16 x double>*
  %loadedValue2647 = load <16 x double>* %CastToValueType2646, align 128
  %1645 = fmul <16 x double> %loadedValue2647, %vector846
  %1646 = fadd <16 x double> %1597, %1645
  %"&(pSB[currWI].offset)2449" = add nuw i64 %CurrSBIndex..3, 9304
  %"&pSB[currWI].offset2450" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2449"
  %CastToValueType2451 = bitcast i8* %"&pSB[currWI].offset2450" to double addrspace(1)**
  %loadedValue2452 = load double addrspace(1)** %CastToValueType2451, align 8
  %ptrTypeCast847 = bitcast double addrspace(1)* %loadedValue2452 to <16 x double> addrspace(1)*
  %1647 = load <16 x double> addrspace(1)* %ptrTypeCast847, align 8
  %1648 = load double addrspace(3)* %97, align 8
  %temp848 = insertelement <16 x double> undef, double %1648, i32 0
  %vector849 = shufflevector <16 x double> %temp848, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2803" = add nuw i64 %CurrSBIndex..3, 9728
  %"&pSB[currWI].offset2804" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2803"
  %CastToValueType2805 = bitcast i8* %"&pSB[currWI].offset2804" to <16 x double>*
  %loadedValue2806 = load <16 x double>* %CastToValueType2805, align 128
  %1649 = fmul <16 x double> %loadedValue2806, %vector849
  %1650 = fadd <16 x double> %1601, %1649
  %1651 = load double addrspace(3)* %99, align 8
  %temp850 = insertelement <16 x double> undef, double %1651, i32 0
  %vector851 = shufflevector <16 x double> %temp850, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2798" = add nuw i64 %CurrSBIndex..3, 9728
  %"&pSB[currWI].offset2799" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2798"
  %CastToValueType2800 = bitcast i8* %"&pSB[currWI].offset2799" to <16 x double>*
  %loadedValue2801 = load <16 x double>* %CastToValueType2800, align 128
  %1652 = fmul <16 x double> %loadedValue2801, %vector851
  %1653 = fadd <16 x double> %1604, %1652
  %1654 = load double addrspace(3)* %101, align 8
  %temp852 = insertelement <16 x double> undef, double %1654, i32 0
  %vector853 = shufflevector <16 x double> %temp852, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2793" = add nuw i64 %CurrSBIndex..3, 9728
  %"&pSB[currWI].offset2794" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2793"
  %CastToValueType2795 = bitcast i8* %"&pSB[currWI].offset2794" to <16 x double>*
  %loadedValue2796 = load <16 x double>* %CastToValueType2795, align 128
  %1655 = fmul <16 x double> %loadedValue2796, %vector853
  %1656 = fadd <16 x double> %1607, %1655
  %1657 = load double addrspace(3)* %103, align 8
  %temp854 = insertelement <16 x double> undef, double %1657, i32 0
  %vector855 = shufflevector <16 x double> %temp854, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2788" = add nuw i64 %CurrSBIndex..3, 9728
  %"&pSB[currWI].offset2789" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2788"
  %CastToValueType2790 = bitcast i8* %"&pSB[currWI].offset2789" to <16 x double>*
  %loadedValue2791 = load <16 x double>* %CastToValueType2790, align 128
  %1658 = fmul <16 x double> %loadedValue2791, %vector855
  %1659 = fadd <16 x double> %1610, %1658
  %1660 = load double addrspace(3)* %105, align 8
  %temp856 = insertelement <16 x double> undef, double %1660, i32 0
  %vector857 = shufflevector <16 x double> %temp856, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2783" = add nuw i64 %CurrSBIndex..3, 9728
  %"&pSB[currWI].offset2784" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2783"
  %CastToValueType2785 = bitcast i8* %"&pSB[currWI].offset2784" to <16 x double>*
  %loadedValue2786 = load <16 x double>* %CastToValueType2785, align 128
  %1661 = fmul <16 x double> %loadedValue2786, %vector857
  %1662 = fadd <16 x double> %1613, %1661
  %1663 = load double addrspace(3)* %107, align 8
  %temp858 = insertelement <16 x double> undef, double %1663, i32 0
  %vector859 = shufflevector <16 x double> %temp858, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2778" = add nuw i64 %CurrSBIndex..3, 9728
  %"&pSB[currWI].offset2779" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2778"
  %CastToValueType2780 = bitcast i8* %"&pSB[currWI].offset2779" to <16 x double>*
  %loadedValue2781 = load <16 x double>* %CastToValueType2780, align 128
  %1664 = fmul <16 x double> %loadedValue2781, %vector859
  %1665 = fadd <16 x double> %1616, %1664
  %1666 = load double addrspace(3)* %109, align 8
  %temp860 = insertelement <16 x double> undef, double %1666, i32 0
  %vector861 = shufflevector <16 x double> %temp860, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2773" = add nuw i64 %CurrSBIndex..3, 9728
  %"&pSB[currWI].offset2774" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2773"
  %CastToValueType2775 = bitcast i8* %"&pSB[currWI].offset2774" to <16 x double>*
  %loadedValue2776 = load <16 x double>* %CastToValueType2775, align 128
  %1667 = fmul <16 x double> %loadedValue2776, %vector861
  %1668 = fadd <16 x double> %1619, %1667
  %1669 = load double addrspace(3)* %111, align 8
  %temp862 = insertelement <16 x double> undef, double %1669, i32 0
  %vector863 = shufflevector <16 x double> %temp862, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2768" = add nuw i64 %CurrSBIndex..3, 9728
  %"&pSB[currWI].offset2769" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2768"
  %CastToValueType2770 = bitcast i8* %"&pSB[currWI].offset2769" to <16 x double>*
  %loadedValue2771 = load <16 x double>* %CastToValueType2770, align 128
  %1670 = fmul <16 x double> %loadedValue2771, %vector863
  %1671 = fadd <16 x double> %1622, %1670
  %1672 = load double addrspace(3)* %113, align 8
  %temp864 = insertelement <16 x double> undef, double %1672, i32 0
  %vector865 = shufflevector <16 x double> %temp864, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2763" = add nuw i64 %CurrSBIndex..3, 9728
  %"&pSB[currWI].offset2764" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2763"
  %CastToValueType2765 = bitcast i8* %"&pSB[currWI].offset2764" to <16 x double>*
  %loadedValue2766 = load <16 x double>* %CastToValueType2765, align 128
  %1673 = fmul <16 x double> %loadedValue2766, %vector865
  %1674 = fadd <16 x double> %1625, %1673
  %1675 = load double addrspace(3)* %115, align 8
  %temp866 = insertelement <16 x double> undef, double %1675, i32 0
  %vector867 = shufflevector <16 x double> %temp866, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2758" = add nuw i64 %CurrSBIndex..3, 9728
  %"&pSB[currWI].offset2759" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2758"
  %CastToValueType2760 = bitcast i8* %"&pSB[currWI].offset2759" to <16 x double>*
  %loadedValue2761 = load <16 x double>* %CastToValueType2760, align 128
  %1676 = fmul <16 x double> %loadedValue2761, %vector867
  %1677 = fadd <16 x double> %1628, %1676
  %1678 = load double addrspace(3)* %117, align 8
  %temp868 = insertelement <16 x double> undef, double %1678, i32 0
  %vector869 = shufflevector <16 x double> %temp868, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2753" = add nuw i64 %CurrSBIndex..3, 9728
  %"&pSB[currWI].offset2754" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2753"
  %CastToValueType2755 = bitcast i8* %"&pSB[currWI].offset2754" to <16 x double>*
  %loadedValue2756 = load <16 x double>* %CastToValueType2755, align 128
  %1679 = fmul <16 x double> %loadedValue2756, %vector869
  %1680 = fadd <16 x double> %1631, %1679
  %1681 = load double addrspace(3)* %119, align 8
  %temp870 = insertelement <16 x double> undef, double %1681, i32 0
  %vector871 = shufflevector <16 x double> %temp870, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2748" = add nuw i64 %CurrSBIndex..3, 9728
  %"&pSB[currWI].offset2749" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2748"
  %CastToValueType2750 = bitcast i8* %"&pSB[currWI].offset2749" to <16 x double>*
  %loadedValue2751 = load <16 x double>* %CastToValueType2750, align 128
  %1682 = fmul <16 x double> %loadedValue2751, %vector871
  %1683 = fadd <16 x double> %1634, %1682
  %1684 = load double addrspace(3)* %121, align 8
  %temp872 = insertelement <16 x double> undef, double %1684, i32 0
  %vector873 = shufflevector <16 x double> %temp872, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2743" = add nuw i64 %CurrSBIndex..3, 9728
  %"&pSB[currWI].offset2744" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2743"
  %CastToValueType2745 = bitcast i8* %"&pSB[currWI].offset2744" to <16 x double>*
  %loadedValue2746 = load <16 x double>* %CastToValueType2745, align 128
  %1685 = fmul <16 x double> %loadedValue2746, %vector873
  %1686 = fadd <16 x double> %1637, %1685
  %1687 = load double addrspace(3)* %123, align 8
  %temp874 = insertelement <16 x double> undef, double %1687, i32 0
  %vector875 = shufflevector <16 x double> %temp874, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2738" = add nuw i64 %CurrSBIndex..3, 9728
  %"&pSB[currWI].offset2739" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2738"
  %CastToValueType2740 = bitcast i8* %"&pSB[currWI].offset2739" to <16 x double>*
  %loadedValue2741 = load <16 x double>* %CastToValueType2740, align 128
  %1688 = fmul <16 x double> %loadedValue2741, %vector875
  %1689 = fadd <16 x double> %1640, %1688
  %1690 = load double addrspace(3)* %125, align 8
  %temp876 = insertelement <16 x double> undef, double %1690, i32 0
  %vector877 = shufflevector <16 x double> %temp876, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2733" = add nuw i64 %CurrSBIndex..3, 9728
  %"&pSB[currWI].offset2734" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2733"
  %CastToValueType2735 = bitcast i8* %"&pSB[currWI].offset2734" to <16 x double>*
  %loadedValue2736 = load <16 x double>* %CastToValueType2735, align 128
  %1691 = fmul <16 x double> %loadedValue2736, %vector877
  %1692 = fadd <16 x double> %1643, %1691
  %1693 = load double addrspace(3)* %127, align 8
  %temp878 = insertelement <16 x double> undef, double %1693, i32 0
  %vector879 = shufflevector <16 x double> %temp878, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2728" = add nuw i64 %CurrSBIndex..3, 9728
  %"&pSB[currWI].offset2729" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2728"
  %CastToValueType2730 = bitcast i8* %"&pSB[currWI].offset2729" to <16 x double>*
  %loadedValue2731 = load <16 x double>* %CastToValueType2730, align 128
  %1694 = fmul <16 x double> %loadedValue2731, %vector879
  %1695 = fadd <16 x double> %1646, %1694
  %"&(pSB[currWI].offset)2440" = add nuw i64 %CurrSBIndex..3, 9296
  %"&pSB[currWI].offset2441" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2440"
  %CastToValueType2442 = bitcast i8* %"&pSB[currWI].offset2441" to double addrspace(1)**
  %loadedValue2443 = load double addrspace(1)** %CastToValueType2442, align 8
  %ptrTypeCast880 = bitcast double addrspace(1)* %loadedValue2443 to <16 x double> addrspace(1)*
  %1696 = load <16 x double> addrspace(1)* %ptrTypeCast880, align 8
  %1697 = load double addrspace(3)* %129, align 16
  %temp881 = insertelement <16 x double> undef, double %1697, i32 0
  %vector882 = shufflevector <16 x double> %temp881, <16 x double> undef, <16 x i32> zeroinitializer
  %1698 = fmul <16 x double> %1549, %vector882
  %1699 = fadd <16 x double> %1650, %1698
  %1700 = load double addrspace(3)* %131, align 8
  %temp883 = insertelement <16 x double> undef, double %1700, i32 0
  %vector884 = shufflevector <16 x double> %temp883, <16 x double> undef, <16 x i32> zeroinitializer
  %1701 = fmul <16 x double> %1549, %vector884
  %1702 = fadd <16 x double> %1653, %1701
  %1703 = load double addrspace(3)* %133, align 16
  %temp885 = insertelement <16 x double> undef, double %1703, i32 0
  %vector886 = shufflevector <16 x double> %temp885, <16 x double> undef, <16 x i32> zeroinitializer
  %1704 = fmul <16 x double> %1549, %vector886
  %1705 = fadd <16 x double> %1656, %1704
  %1706 = load double addrspace(3)* %135, align 8
  %temp887 = insertelement <16 x double> undef, double %1706, i32 0
  %vector888 = shufflevector <16 x double> %temp887, <16 x double> undef, <16 x i32> zeroinitializer
  %1707 = fmul <16 x double> %1549, %vector888
  %1708 = fadd <16 x double> %1659, %1707
  %1709 = load double addrspace(3)* %137, align 16
  %temp889 = insertelement <16 x double> undef, double %1709, i32 0
  %vector890 = shufflevector <16 x double> %temp889, <16 x double> undef, <16 x i32> zeroinitializer
  %1710 = fmul <16 x double> %1549, %vector890
  %1711 = fadd <16 x double> %1662, %1710
  %1712 = load double addrspace(3)* %139, align 8
  %temp891 = insertelement <16 x double> undef, double %1712, i32 0
  %vector892 = shufflevector <16 x double> %temp891, <16 x double> undef, <16 x i32> zeroinitializer
  %1713 = fmul <16 x double> %1549, %vector892
  %1714 = fadd <16 x double> %1665, %1713
  %1715 = load double addrspace(3)* %141, align 16
  %temp893 = insertelement <16 x double> undef, double %1715, i32 0
  %vector894 = shufflevector <16 x double> %temp893, <16 x double> undef, <16 x i32> zeroinitializer
  %1716 = fmul <16 x double> %1549, %vector894
  %1717 = fadd <16 x double> %1668, %1716
  %1718 = load double addrspace(3)* %143, align 8
  %temp895 = insertelement <16 x double> undef, double %1718, i32 0
  %vector896 = shufflevector <16 x double> %temp895, <16 x double> undef, <16 x i32> zeroinitializer
  %1719 = fmul <16 x double> %1549, %vector896
  %1720 = fadd <16 x double> %1671, %1719
  %1721 = load double addrspace(3)* %145, align 16
  %temp897 = insertelement <16 x double> undef, double %1721, i32 0
  %vector898 = shufflevector <16 x double> %temp897, <16 x double> undef, <16 x i32> zeroinitializer
  %1722 = fmul <16 x double> %1549, %vector898
  %1723 = fadd <16 x double> %1674, %1722
  %1724 = load double addrspace(3)* %147, align 8
  %temp899 = insertelement <16 x double> undef, double %1724, i32 0
  %vector900 = shufflevector <16 x double> %temp899, <16 x double> undef, <16 x i32> zeroinitializer
  %1725 = fmul <16 x double> %1549, %vector900
  %1726 = fadd <16 x double> %1677, %1725
  %1727 = load double addrspace(3)* %149, align 16
  %temp901 = insertelement <16 x double> undef, double %1727, i32 0
  %vector902 = shufflevector <16 x double> %temp901, <16 x double> undef, <16 x i32> zeroinitializer
  %1728 = fmul <16 x double> %1549, %vector902
  %1729 = fadd <16 x double> %1680, %1728
  %1730 = load double addrspace(3)* %151, align 8
  %temp903 = insertelement <16 x double> undef, double %1730, i32 0
  %vector904 = shufflevector <16 x double> %temp903, <16 x double> undef, <16 x i32> zeroinitializer
  %1731 = fmul <16 x double> %1549, %vector904
  %1732 = fadd <16 x double> %1683, %1731
  %1733 = load double addrspace(3)* %153, align 16
  %temp905 = insertelement <16 x double> undef, double %1733, i32 0
  %vector906 = shufflevector <16 x double> %temp905, <16 x double> undef, <16 x i32> zeroinitializer
  %1734 = fmul <16 x double> %1549, %vector906
  %1735 = fadd <16 x double> %1686, %1734
  %1736 = load double addrspace(3)* %155, align 8
  %temp907 = insertelement <16 x double> undef, double %1736, i32 0
  %vector908 = shufflevector <16 x double> %temp907, <16 x double> undef, <16 x i32> zeroinitializer
  %1737 = fmul <16 x double> %1549, %vector908
  %1738 = fadd <16 x double> %1689, %1737
  %1739 = load double addrspace(3)* %157, align 16
  %temp909 = insertelement <16 x double> undef, double %1739, i32 0
  %vector910 = shufflevector <16 x double> %temp909, <16 x double> undef, <16 x i32> zeroinitializer
  %1740 = fmul <16 x double> %1549, %vector910
  %1741 = fadd <16 x double> %1692, %1740
  %1742 = load double addrspace(3)* %159, align 8
  %temp911 = insertelement <16 x double> undef, double %1742, i32 0
  %vector912 = shufflevector <16 x double> %temp911, <16 x double> undef, <16 x i32> zeroinitializer
  %1743 = fmul <16 x double> %1549, %vector912
  %1744 = fadd <16 x double> %1695, %1743
  %"&(pSB[currWI].offset)2431" = add nuw i64 %CurrSBIndex..3, 9288
  %"&pSB[currWI].offset2432" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2431"
  %CastToValueType2433 = bitcast i8* %"&pSB[currWI].offset2432" to double addrspace(1)**
  %loadedValue2434 = load double addrspace(1)** %CastToValueType2433, align 8
  %ptrTypeCast913 = bitcast double addrspace(1)* %loadedValue2434 to <16 x double> addrspace(1)*
  %1745 = load <16 x double> addrspace(1)* %ptrTypeCast913, align 8
  %1746 = load double addrspace(3)* %161, align 8
  %temp914 = insertelement <16 x double> undef, double %1746, i32 0
  %vector915 = shufflevector <16 x double> %temp914, <16 x double> undef, <16 x i32> zeroinitializer
  %1747 = fmul <16 x double> %1598, %vector915
  %1748 = fadd <16 x double> %1699, %1747
  %1749 = load double addrspace(3)* %163, align 8
  %temp916 = insertelement <16 x double> undef, double %1749, i32 0
  %vector917 = shufflevector <16 x double> %temp916, <16 x double> undef, <16 x i32> zeroinitializer
  %1750 = fmul <16 x double> %1598, %vector917
  %1751 = fadd <16 x double> %1702, %1750
  %1752 = load double addrspace(3)* %165, align 8
  %temp918 = insertelement <16 x double> undef, double %1752, i32 0
  %vector919 = shufflevector <16 x double> %temp918, <16 x double> undef, <16 x i32> zeroinitializer
  %1753 = fmul <16 x double> %1598, %vector919
  %1754 = fadd <16 x double> %1705, %1753
  %1755 = load double addrspace(3)* %167, align 8
  %temp920 = insertelement <16 x double> undef, double %1755, i32 0
  %vector921 = shufflevector <16 x double> %temp920, <16 x double> undef, <16 x i32> zeroinitializer
  %1756 = fmul <16 x double> %1598, %vector921
  %1757 = fadd <16 x double> %1708, %1756
  %1758 = load double addrspace(3)* %169, align 8
  %temp922 = insertelement <16 x double> undef, double %1758, i32 0
  %vector923 = shufflevector <16 x double> %temp922, <16 x double> undef, <16 x i32> zeroinitializer
  %1759 = fmul <16 x double> %1598, %vector923
  %1760 = fadd <16 x double> %1711, %1759
  %1761 = load double addrspace(3)* %171, align 8
  %temp924 = insertelement <16 x double> undef, double %1761, i32 0
  %vector925 = shufflevector <16 x double> %temp924, <16 x double> undef, <16 x i32> zeroinitializer
  %1762 = fmul <16 x double> %1598, %vector925
  %1763 = fadd <16 x double> %1714, %1762
  %1764 = load double addrspace(3)* %173, align 8
  %temp926 = insertelement <16 x double> undef, double %1764, i32 0
  %vector927 = shufflevector <16 x double> %temp926, <16 x double> undef, <16 x i32> zeroinitializer
  %1765 = fmul <16 x double> %1598, %vector927
  %1766 = fadd <16 x double> %1717, %1765
  %1767 = load double addrspace(3)* %175, align 8
  %temp928 = insertelement <16 x double> undef, double %1767, i32 0
  %vector929 = shufflevector <16 x double> %temp928, <16 x double> undef, <16 x i32> zeroinitializer
  %1768 = fmul <16 x double> %1598, %vector929
  %1769 = fadd <16 x double> %1720, %1768
  %1770 = load double addrspace(3)* %177, align 8
  %temp930 = insertelement <16 x double> undef, double %1770, i32 0
  %vector931 = shufflevector <16 x double> %temp930, <16 x double> undef, <16 x i32> zeroinitializer
  %1771 = fmul <16 x double> %1598, %vector931
  %1772 = fadd <16 x double> %1723, %1771
  %1773 = load double addrspace(3)* %179, align 8
  %temp932 = insertelement <16 x double> undef, double %1773, i32 0
  %vector933 = shufflevector <16 x double> %temp932, <16 x double> undef, <16 x i32> zeroinitializer
  %1774 = fmul <16 x double> %1598, %vector933
  %1775 = fadd <16 x double> %1726, %1774
  %1776 = load double addrspace(3)* %181, align 8
  %temp934 = insertelement <16 x double> undef, double %1776, i32 0
  %vector935 = shufflevector <16 x double> %temp934, <16 x double> undef, <16 x i32> zeroinitializer
  %1777 = fmul <16 x double> %1598, %vector935
  %1778 = fadd <16 x double> %1729, %1777
  %1779 = load double addrspace(3)* %183, align 8
  %temp936 = insertelement <16 x double> undef, double %1779, i32 0
  %vector937 = shufflevector <16 x double> %temp936, <16 x double> undef, <16 x i32> zeroinitializer
  %1780 = fmul <16 x double> %1598, %vector937
  %1781 = fadd <16 x double> %1732, %1780
  %1782 = load double addrspace(3)* %185, align 8
  %temp938 = insertelement <16 x double> undef, double %1782, i32 0
  %vector939 = shufflevector <16 x double> %temp938, <16 x double> undef, <16 x i32> zeroinitializer
  %1783 = fmul <16 x double> %1598, %vector939
  %1784 = fadd <16 x double> %1735, %1783
  %1785 = load double addrspace(3)* %187, align 8
  %temp940 = insertelement <16 x double> undef, double %1785, i32 0
  %vector941 = shufflevector <16 x double> %temp940, <16 x double> undef, <16 x i32> zeroinitializer
  %1786 = fmul <16 x double> %1598, %vector941
  %1787 = fadd <16 x double> %1738, %1786
  %1788 = load double addrspace(3)* %189, align 8
  %temp942 = insertelement <16 x double> undef, double %1788, i32 0
  %vector943 = shufflevector <16 x double> %temp942, <16 x double> undef, <16 x i32> zeroinitializer
  %1789 = fmul <16 x double> %1598, %vector943
  %1790 = fadd <16 x double> %1741, %1789
  %1791 = load double addrspace(3)* %191, align 8
  %temp944 = insertelement <16 x double> undef, double %1791, i32 0
  %vector945 = shufflevector <16 x double> %temp944, <16 x double> undef, <16 x i32> zeroinitializer
  %1792 = fmul <16 x double> %1598, %vector945
  %1793 = fadd <16 x double> %1744, %1792
  %"&(pSB[currWI].offset)2422" = add nuw i64 %CurrSBIndex..3, 9280
  %"&pSB[currWI].offset2423" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2422"
  %CastToValueType2424 = bitcast i8* %"&pSB[currWI].offset2423" to double addrspace(1)**
  %loadedValue2425 = load double addrspace(1)** %CastToValueType2424, align 8
  %ptrTypeCast946 = bitcast double addrspace(1)* %loadedValue2425 to <16 x double> addrspace(1)*
  %1794 = load <16 x double> addrspace(1)* %ptrTypeCast946, align 8
  %1795 = load double addrspace(3)* %193, align 16
  %temp947 = insertelement <16 x double> undef, double %1795, i32 0
  %vector948 = shufflevector <16 x double> %temp947, <16 x double> undef, <16 x i32> zeroinitializer
  %1796 = fmul <16 x double> %1647, %vector948
  %1797 = fadd <16 x double> %1748, %1796
  %1798 = load double addrspace(3)* %195, align 8
  %temp949 = insertelement <16 x double> undef, double %1798, i32 0
  %vector950 = shufflevector <16 x double> %temp949, <16 x double> undef, <16 x i32> zeroinitializer
  %1799 = fmul <16 x double> %1647, %vector950
  %1800 = fadd <16 x double> %1751, %1799
  %1801 = load double addrspace(3)* %197, align 16
  %temp951 = insertelement <16 x double> undef, double %1801, i32 0
  %vector952 = shufflevector <16 x double> %temp951, <16 x double> undef, <16 x i32> zeroinitializer
  %1802 = fmul <16 x double> %1647, %vector952
  %1803 = fadd <16 x double> %1754, %1802
  %1804 = load double addrspace(3)* %199, align 8
  %temp953 = insertelement <16 x double> undef, double %1804, i32 0
  %vector954 = shufflevector <16 x double> %temp953, <16 x double> undef, <16 x i32> zeroinitializer
  %1805 = fmul <16 x double> %1647, %vector954
  %1806 = fadd <16 x double> %1757, %1805
  %1807 = load double addrspace(3)* %201, align 16
  %temp955 = insertelement <16 x double> undef, double %1807, i32 0
  %vector956 = shufflevector <16 x double> %temp955, <16 x double> undef, <16 x i32> zeroinitializer
  %1808 = fmul <16 x double> %1647, %vector956
  %1809 = fadd <16 x double> %1760, %1808
  %1810 = load double addrspace(3)* %203, align 8
  %temp957 = insertelement <16 x double> undef, double %1810, i32 0
  %vector958 = shufflevector <16 x double> %temp957, <16 x double> undef, <16 x i32> zeroinitializer
  %1811 = fmul <16 x double> %1647, %vector958
  %1812 = fadd <16 x double> %1763, %1811
  %1813 = load double addrspace(3)* %205, align 16
  %temp959 = insertelement <16 x double> undef, double %1813, i32 0
  %vector960 = shufflevector <16 x double> %temp959, <16 x double> undef, <16 x i32> zeroinitializer
  %1814 = fmul <16 x double> %1647, %vector960
  %1815 = fadd <16 x double> %1766, %1814
  %1816 = load double addrspace(3)* %207, align 8
  %temp961 = insertelement <16 x double> undef, double %1816, i32 0
  %vector962 = shufflevector <16 x double> %temp961, <16 x double> undef, <16 x i32> zeroinitializer
  %1817 = fmul <16 x double> %1647, %vector962
  %1818 = fadd <16 x double> %1769, %1817
  %1819 = load double addrspace(3)* %209, align 16
  %temp963 = insertelement <16 x double> undef, double %1819, i32 0
  %vector964 = shufflevector <16 x double> %temp963, <16 x double> undef, <16 x i32> zeroinitializer
  %1820 = fmul <16 x double> %1647, %vector964
  %1821 = fadd <16 x double> %1772, %1820
  %1822 = load double addrspace(3)* %211, align 8
  %temp965 = insertelement <16 x double> undef, double %1822, i32 0
  %vector966 = shufflevector <16 x double> %temp965, <16 x double> undef, <16 x i32> zeroinitializer
  %1823 = fmul <16 x double> %1647, %vector966
  %1824 = fadd <16 x double> %1775, %1823
  %1825 = load double addrspace(3)* %213, align 16
  %temp967 = insertelement <16 x double> undef, double %1825, i32 0
  %vector968 = shufflevector <16 x double> %temp967, <16 x double> undef, <16 x i32> zeroinitializer
  %1826 = fmul <16 x double> %1647, %vector968
  %1827 = fadd <16 x double> %1778, %1826
  %1828 = load double addrspace(3)* %215, align 8
  %temp969 = insertelement <16 x double> undef, double %1828, i32 0
  %vector970 = shufflevector <16 x double> %temp969, <16 x double> undef, <16 x i32> zeroinitializer
  %1829 = fmul <16 x double> %1647, %vector970
  %1830 = fadd <16 x double> %1781, %1829
  %1831 = load double addrspace(3)* %217, align 16
  %temp971 = insertelement <16 x double> undef, double %1831, i32 0
  %vector972 = shufflevector <16 x double> %temp971, <16 x double> undef, <16 x i32> zeroinitializer
  %1832 = fmul <16 x double> %1647, %vector972
  %1833 = fadd <16 x double> %1784, %1832
  %1834 = load double addrspace(3)* %219, align 8
  %temp973 = insertelement <16 x double> undef, double %1834, i32 0
  %vector974 = shufflevector <16 x double> %temp973, <16 x double> undef, <16 x i32> zeroinitializer
  %1835 = fmul <16 x double> %1647, %vector974
  %1836 = fadd <16 x double> %1787, %1835
  %1837 = load double addrspace(3)* %221, align 16
  %temp975 = insertelement <16 x double> undef, double %1837, i32 0
  %vector976 = shufflevector <16 x double> %temp975, <16 x double> undef, <16 x i32> zeroinitializer
  %1838 = fmul <16 x double> %1647, %vector976
  %1839 = fadd <16 x double> %1790, %1838
  %1840 = load double addrspace(3)* %223, align 8
  %temp977 = insertelement <16 x double> undef, double %1840, i32 0
  %vector978 = shufflevector <16 x double> %temp977, <16 x double> undef, <16 x i32> zeroinitializer
  %1841 = fmul <16 x double> %1647, %vector978
  %1842 = fadd <16 x double> %1793, %1841
  %"&(pSB[currWI].offset)2413" = add nuw i64 %CurrSBIndex..3, 9272
  %"&pSB[currWI].offset2414" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2413"
  %CastToValueType2415 = bitcast i8* %"&pSB[currWI].offset2414" to double addrspace(1)**
  %loadedValue2416 = load double addrspace(1)** %CastToValueType2415, align 8
  %ptrTypeCast979 = bitcast double addrspace(1)* %loadedValue2416 to <16 x double> addrspace(1)*
  %1843 = load <16 x double> addrspace(1)* %ptrTypeCast979, align 8
  %1844 = load double addrspace(3)* %225, align 8
  %temp980 = insertelement <16 x double> undef, double %1844, i32 0
  %vector981 = shufflevector <16 x double> %temp980, <16 x double> undef, <16 x i32> zeroinitializer
  %1845 = fmul <16 x double> %1696, %vector981
  %1846 = fadd <16 x double> %1797, %1845
  %1847 = load double addrspace(3)* %227, align 8
  %temp982 = insertelement <16 x double> undef, double %1847, i32 0
  %vector983 = shufflevector <16 x double> %temp982, <16 x double> undef, <16 x i32> zeroinitializer
  %1848 = fmul <16 x double> %1696, %vector983
  %1849 = fadd <16 x double> %1800, %1848
  %1850 = load double addrspace(3)* %229, align 8
  %temp984 = insertelement <16 x double> undef, double %1850, i32 0
  %vector985 = shufflevector <16 x double> %temp984, <16 x double> undef, <16 x i32> zeroinitializer
  %1851 = fmul <16 x double> %1696, %vector985
  %1852 = fadd <16 x double> %1803, %1851
  %1853 = load double addrspace(3)* %231, align 8
  %temp986 = insertelement <16 x double> undef, double %1853, i32 0
  %vector987 = shufflevector <16 x double> %temp986, <16 x double> undef, <16 x i32> zeroinitializer
  %1854 = fmul <16 x double> %1696, %vector987
  %1855 = fadd <16 x double> %1806, %1854
  %1856 = load double addrspace(3)* %233, align 8
  %temp988 = insertelement <16 x double> undef, double %1856, i32 0
  %vector989 = shufflevector <16 x double> %temp988, <16 x double> undef, <16 x i32> zeroinitializer
  %1857 = fmul <16 x double> %1696, %vector989
  %1858 = fadd <16 x double> %1809, %1857
  %1859 = load double addrspace(3)* %235, align 8
  %temp990 = insertelement <16 x double> undef, double %1859, i32 0
  %vector991 = shufflevector <16 x double> %temp990, <16 x double> undef, <16 x i32> zeroinitializer
  %1860 = fmul <16 x double> %1696, %vector991
  %1861 = fadd <16 x double> %1812, %1860
  %1862 = load double addrspace(3)* %237, align 8
  %temp992 = insertelement <16 x double> undef, double %1862, i32 0
  %vector993 = shufflevector <16 x double> %temp992, <16 x double> undef, <16 x i32> zeroinitializer
  %1863 = fmul <16 x double> %1696, %vector993
  %1864 = fadd <16 x double> %1815, %1863
  %1865 = load double addrspace(3)* %239, align 8
  %temp994 = insertelement <16 x double> undef, double %1865, i32 0
  %vector995 = shufflevector <16 x double> %temp994, <16 x double> undef, <16 x i32> zeroinitializer
  %1866 = fmul <16 x double> %1696, %vector995
  %1867 = fadd <16 x double> %1818, %1866
  %1868 = load double addrspace(3)* %241, align 8
  %temp996 = insertelement <16 x double> undef, double %1868, i32 0
  %vector997 = shufflevector <16 x double> %temp996, <16 x double> undef, <16 x i32> zeroinitializer
  %1869 = fmul <16 x double> %1696, %vector997
  %1870 = fadd <16 x double> %1821, %1869
  %1871 = load double addrspace(3)* %243, align 8
  %temp998 = insertelement <16 x double> undef, double %1871, i32 0
  %vector999 = shufflevector <16 x double> %temp998, <16 x double> undef, <16 x i32> zeroinitializer
  %1872 = fmul <16 x double> %1696, %vector999
  %1873 = fadd <16 x double> %1824, %1872
  %1874 = load double addrspace(3)* %245, align 8
  %temp1000 = insertelement <16 x double> undef, double %1874, i32 0
  %vector1001 = shufflevector <16 x double> %temp1000, <16 x double> undef, <16 x i32> zeroinitializer
  %1875 = fmul <16 x double> %1696, %vector1001
  %1876 = fadd <16 x double> %1827, %1875
  %1877 = load double addrspace(3)* %247, align 8
  %temp1002 = insertelement <16 x double> undef, double %1877, i32 0
  %vector1003 = shufflevector <16 x double> %temp1002, <16 x double> undef, <16 x i32> zeroinitializer
  %1878 = fmul <16 x double> %1696, %vector1003
  %1879 = fadd <16 x double> %1830, %1878
  %1880 = load double addrspace(3)* %249, align 8
  %temp1004 = insertelement <16 x double> undef, double %1880, i32 0
  %vector1005 = shufflevector <16 x double> %temp1004, <16 x double> undef, <16 x i32> zeroinitializer
  %1881 = fmul <16 x double> %1696, %vector1005
  %1882 = fadd <16 x double> %1833, %1881
  %1883 = load double addrspace(3)* %251, align 8
  %temp1006 = insertelement <16 x double> undef, double %1883, i32 0
  %vector1007 = shufflevector <16 x double> %temp1006, <16 x double> undef, <16 x i32> zeroinitializer
  %1884 = fmul <16 x double> %1696, %vector1007
  %1885 = fadd <16 x double> %1836, %1884
  %1886 = load double addrspace(3)* %253, align 8
  %temp1008 = insertelement <16 x double> undef, double %1886, i32 0
  %vector1009 = shufflevector <16 x double> %temp1008, <16 x double> undef, <16 x i32> zeroinitializer
  %1887 = fmul <16 x double> %1696, %vector1009
  %1888 = fadd <16 x double> %1839, %1887
  %1889 = load double addrspace(3)* %255, align 8
  %temp1010 = insertelement <16 x double> undef, double %1889, i32 0
  %vector1011 = shufflevector <16 x double> %temp1010, <16 x double> undef, <16 x i32> zeroinitializer
  %1890 = fmul <16 x double> %1696, %vector1011
  %1891 = fadd <16 x double> %1842, %1890
  %"&(pSB[currWI].offset)2404" = add nuw i64 %CurrSBIndex..3, 9264
  %"&pSB[currWI].offset2405" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2404"
  %CastToValueType2406 = bitcast i8* %"&pSB[currWI].offset2405" to double addrspace(1)**
  %loadedValue2407 = load double addrspace(1)** %CastToValueType2406, align 8
  %ptrTypeCast1012 = bitcast double addrspace(1)* %loadedValue2407 to <16 x double> addrspace(1)*
  %1892 = load <16 x double> addrspace(1)* %ptrTypeCast1012, align 8
  %1893 = load double addrspace(3)* %257, align 16
  %temp1013 = insertelement <16 x double> undef, double %1893, i32 0
  %vector1014 = shufflevector <16 x double> %temp1013, <16 x double> undef, <16 x i32> zeroinitializer
  %1894 = fmul <16 x double> %1745, %vector1014
  %1895 = fadd <16 x double> %1846, %1894
  %1896 = load double addrspace(3)* %259, align 8
  %temp1015 = insertelement <16 x double> undef, double %1896, i32 0
  %vector1016 = shufflevector <16 x double> %temp1015, <16 x double> undef, <16 x i32> zeroinitializer
  %1897 = fmul <16 x double> %1745, %vector1016
  %1898 = fadd <16 x double> %1849, %1897
  %1899 = load double addrspace(3)* %261, align 16
  %temp1017 = insertelement <16 x double> undef, double %1899, i32 0
  %vector1018 = shufflevector <16 x double> %temp1017, <16 x double> undef, <16 x i32> zeroinitializer
  %1900 = fmul <16 x double> %1745, %vector1018
  %1901 = fadd <16 x double> %1852, %1900
  %1902 = load double addrspace(3)* %263, align 8
  %temp1019 = insertelement <16 x double> undef, double %1902, i32 0
  %vector1020 = shufflevector <16 x double> %temp1019, <16 x double> undef, <16 x i32> zeroinitializer
  %1903 = fmul <16 x double> %1745, %vector1020
  %1904 = fadd <16 x double> %1855, %1903
  %1905 = load double addrspace(3)* %265, align 16
  %temp1021 = insertelement <16 x double> undef, double %1905, i32 0
  %vector1022 = shufflevector <16 x double> %temp1021, <16 x double> undef, <16 x i32> zeroinitializer
  %1906 = fmul <16 x double> %1745, %vector1022
  %1907 = fadd <16 x double> %1858, %1906
  %1908 = load double addrspace(3)* %267, align 8
  %temp1023 = insertelement <16 x double> undef, double %1908, i32 0
  %vector1024 = shufflevector <16 x double> %temp1023, <16 x double> undef, <16 x i32> zeroinitializer
  %1909 = fmul <16 x double> %1745, %vector1024
  %1910 = fadd <16 x double> %1861, %1909
  %1911 = load double addrspace(3)* %269, align 16
  %temp1025 = insertelement <16 x double> undef, double %1911, i32 0
  %vector1026 = shufflevector <16 x double> %temp1025, <16 x double> undef, <16 x i32> zeroinitializer
  %1912 = fmul <16 x double> %1745, %vector1026
  %1913 = fadd <16 x double> %1864, %1912
  %1914 = load double addrspace(3)* %271, align 8
  %temp1027 = insertelement <16 x double> undef, double %1914, i32 0
  %vector1028 = shufflevector <16 x double> %temp1027, <16 x double> undef, <16 x i32> zeroinitializer
  %1915 = fmul <16 x double> %1745, %vector1028
  %1916 = fadd <16 x double> %1867, %1915
  %1917 = load double addrspace(3)* %273, align 16
  %temp1029 = insertelement <16 x double> undef, double %1917, i32 0
  %vector1030 = shufflevector <16 x double> %temp1029, <16 x double> undef, <16 x i32> zeroinitializer
  %1918 = fmul <16 x double> %1745, %vector1030
  %1919 = fadd <16 x double> %1870, %1918
  %1920 = load double addrspace(3)* %275, align 8
  %temp1031 = insertelement <16 x double> undef, double %1920, i32 0
  %vector1032 = shufflevector <16 x double> %temp1031, <16 x double> undef, <16 x i32> zeroinitializer
  %1921 = fmul <16 x double> %1745, %vector1032
  %1922 = fadd <16 x double> %1873, %1921
  %1923 = load double addrspace(3)* %277, align 16
  %temp1033 = insertelement <16 x double> undef, double %1923, i32 0
  %vector1034 = shufflevector <16 x double> %temp1033, <16 x double> undef, <16 x i32> zeroinitializer
  %1924 = fmul <16 x double> %1745, %vector1034
  %1925 = fadd <16 x double> %1876, %1924
  %1926 = load double addrspace(3)* %279, align 8
  %temp1035 = insertelement <16 x double> undef, double %1926, i32 0
  %vector1036 = shufflevector <16 x double> %temp1035, <16 x double> undef, <16 x i32> zeroinitializer
  %1927 = fmul <16 x double> %1745, %vector1036
  %1928 = fadd <16 x double> %1879, %1927
  %1929 = load double addrspace(3)* %281, align 16
  %temp1037 = insertelement <16 x double> undef, double %1929, i32 0
  %vector1038 = shufflevector <16 x double> %temp1037, <16 x double> undef, <16 x i32> zeroinitializer
  %1930 = fmul <16 x double> %1745, %vector1038
  %1931 = fadd <16 x double> %1882, %1930
  %1932 = load double addrspace(3)* %283, align 8
  %temp1039 = insertelement <16 x double> undef, double %1932, i32 0
  %vector1040 = shufflevector <16 x double> %temp1039, <16 x double> undef, <16 x i32> zeroinitializer
  %1933 = fmul <16 x double> %1745, %vector1040
  %1934 = fadd <16 x double> %1885, %1933
  %1935 = load double addrspace(3)* %285, align 16
  %temp1041 = insertelement <16 x double> undef, double %1935, i32 0
  %vector1042 = shufflevector <16 x double> %temp1041, <16 x double> undef, <16 x i32> zeroinitializer
  %1936 = fmul <16 x double> %1745, %vector1042
  %1937 = fadd <16 x double> %1888, %1936
  %1938 = load double addrspace(3)* %287, align 8
  %temp1043 = insertelement <16 x double> undef, double %1938, i32 0
  %vector1044 = shufflevector <16 x double> %temp1043, <16 x double> undef, <16 x i32> zeroinitializer
  %1939 = fmul <16 x double> %1745, %vector1044
  %1940 = fadd <16 x double> %1891, %1939
  %"&(pSB[currWI].offset)2395" = add nuw i64 %CurrSBIndex..3, 9256
  %"&pSB[currWI].offset2396" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2395"
  %CastToValueType2397 = bitcast i8* %"&pSB[currWI].offset2396" to double addrspace(1)**
  %loadedValue2398 = load double addrspace(1)** %CastToValueType2397, align 8
  %ptrTypeCast1045 = bitcast double addrspace(1)* %loadedValue2398 to <16 x double> addrspace(1)*
  %1941 = load <16 x double> addrspace(1)* %ptrTypeCast1045, align 8
  %1942 = load double addrspace(3)* %289, align 8
  %temp1046 = insertelement <16 x double> undef, double %1942, i32 0
  %vector1047 = shufflevector <16 x double> %temp1046, <16 x double> undef, <16 x i32> zeroinitializer
  %1943 = fmul <16 x double> %1794, %vector1047
  %1944 = fadd <16 x double> %1895, %1943
  %1945 = load double addrspace(3)* %291, align 8
  %temp1048 = insertelement <16 x double> undef, double %1945, i32 0
  %vector1049 = shufflevector <16 x double> %temp1048, <16 x double> undef, <16 x i32> zeroinitializer
  %1946 = fmul <16 x double> %1794, %vector1049
  %1947 = fadd <16 x double> %1898, %1946
  %1948 = load double addrspace(3)* %293, align 8
  %temp1050 = insertelement <16 x double> undef, double %1948, i32 0
  %vector1051 = shufflevector <16 x double> %temp1050, <16 x double> undef, <16 x i32> zeroinitializer
  %1949 = fmul <16 x double> %1794, %vector1051
  %1950 = fadd <16 x double> %1901, %1949
  %1951 = load double addrspace(3)* %295, align 8
  %temp1052 = insertelement <16 x double> undef, double %1951, i32 0
  %vector1053 = shufflevector <16 x double> %temp1052, <16 x double> undef, <16 x i32> zeroinitializer
  %1952 = fmul <16 x double> %1794, %vector1053
  %1953 = fadd <16 x double> %1904, %1952
  %1954 = load double addrspace(3)* %297, align 8
  %temp1054 = insertelement <16 x double> undef, double %1954, i32 0
  %vector1055 = shufflevector <16 x double> %temp1054, <16 x double> undef, <16 x i32> zeroinitializer
  %1955 = fmul <16 x double> %1794, %vector1055
  %1956 = fadd <16 x double> %1907, %1955
  %1957 = load double addrspace(3)* %299, align 8
  %temp1056 = insertelement <16 x double> undef, double %1957, i32 0
  %vector1057 = shufflevector <16 x double> %temp1056, <16 x double> undef, <16 x i32> zeroinitializer
  %1958 = fmul <16 x double> %1794, %vector1057
  %1959 = fadd <16 x double> %1910, %1958
  %1960 = load double addrspace(3)* %301, align 8
  %temp1058 = insertelement <16 x double> undef, double %1960, i32 0
  %vector1059 = shufflevector <16 x double> %temp1058, <16 x double> undef, <16 x i32> zeroinitializer
  %1961 = fmul <16 x double> %1794, %vector1059
  %1962 = fadd <16 x double> %1913, %1961
  %1963 = load double addrspace(3)* %303, align 8
  %temp1060 = insertelement <16 x double> undef, double %1963, i32 0
  %vector1061 = shufflevector <16 x double> %temp1060, <16 x double> undef, <16 x i32> zeroinitializer
  %1964 = fmul <16 x double> %1794, %vector1061
  %1965 = fadd <16 x double> %1916, %1964
  %1966 = load double addrspace(3)* %305, align 8
  %temp1062 = insertelement <16 x double> undef, double %1966, i32 0
  %vector1063 = shufflevector <16 x double> %temp1062, <16 x double> undef, <16 x i32> zeroinitializer
  %1967 = fmul <16 x double> %1794, %vector1063
  %1968 = fadd <16 x double> %1919, %1967
  %1969 = load double addrspace(3)* %307, align 8
  %temp1064 = insertelement <16 x double> undef, double %1969, i32 0
  %vector1065 = shufflevector <16 x double> %temp1064, <16 x double> undef, <16 x i32> zeroinitializer
  %1970 = fmul <16 x double> %1794, %vector1065
  %1971 = fadd <16 x double> %1922, %1970
  %1972 = load double addrspace(3)* %309, align 8
  %temp1066 = insertelement <16 x double> undef, double %1972, i32 0
  %vector1067 = shufflevector <16 x double> %temp1066, <16 x double> undef, <16 x i32> zeroinitializer
  %1973 = fmul <16 x double> %1794, %vector1067
  %1974 = fadd <16 x double> %1925, %1973
  %1975 = load double addrspace(3)* %311, align 8
  %temp1068 = insertelement <16 x double> undef, double %1975, i32 0
  %vector1069 = shufflevector <16 x double> %temp1068, <16 x double> undef, <16 x i32> zeroinitializer
  %1976 = fmul <16 x double> %1794, %vector1069
  %1977 = fadd <16 x double> %1928, %1976
  %1978 = load double addrspace(3)* %313, align 8
  %temp1070 = insertelement <16 x double> undef, double %1978, i32 0
  %vector1071 = shufflevector <16 x double> %temp1070, <16 x double> undef, <16 x i32> zeroinitializer
  %1979 = fmul <16 x double> %1794, %vector1071
  %1980 = fadd <16 x double> %1931, %1979
  %1981 = load double addrspace(3)* %315, align 8
  %temp1072 = insertelement <16 x double> undef, double %1981, i32 0
  %vector1073 = shufflevector <16 x double> %temp1072, <16 x double> undef, <16 x i32> zeroinitializer
  %1982 = fmul <16 x double> %1794, %vector1073
  %1983 = fadd <16 x double> %1934, %1982
  %1984 = load double addrspace(3)* %317, align 8
  %temp1074 = insertelement <16 x double> undef, double %1984, i32 0
  %vector1075 = shufflevector <16 x double> %temp1074, <16 x double> undef, <16 x i32> zeroinitializer
  %1985 = fmul <16 x double> %1794, %vector1075
  %1986 = fadd <16 x double> %1937, %1985
  %1987 = load double addrspace(3)* %319, align 8
  %temp1076 = insertelement <16 x double> undef, double %1987, i32 0
  %vector1077 = shufflevector <16 x double> %temp1076, <16 x double> undef, <16 x i32> zeroinitializer
  %1988 = fmul <16 x double> %1794, %vector1077
  %1989 = fadd <16 x double> %1940, %1988
  %"&(pSB[currWI].offset)2386" = add nuw i64 %CurrSBIndex..3, 9248
  %"&pSB[currWI].offset2387" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2386"
  %CastToValueType2388 = bitcast i8* %"&pSB[currWI].offset2387" to double addrspace(1)**
  %loadedValue2389 = load double addrspace(1)** %CastToValueType2388, align 8
  %ptrTypeCast1078 = bitcast double addrspace(1)* %loadedValue2389 to <16 x double> addrspace(1)*
  %1990 = load <16 x double> addrspace(1)* %ptrTypeCast1078, align 8
  %1991 = load double addrspace(3)* %321, align 16
  %temp1079 = insertelement <16 x double> undef, double %1991, i32 0
  %vector1080 = shufflevector <16 x double> %temp1079, <16 x double> undef, <16 x i32> zeroinitializer
  %1992 = fmul <16 x double> %1843, %vector1080
  %1993 = fadd <16 x double> %1944, %1992
  %1994 = load double addrspace(3)* %323, align 8
  %temp1081 = insertelement <16 x double> undef, double %1994, i32 0
  %vector1082 = shufflevector <16 x double> %temp1081, <16 x double> undef, <16 x i32> zeroinitializer
  %1995 = fmul <16 x double> %1843, %vector1082
  %1996 = fadd <16 x double> %1947, %1995
  %1997 = load double addrspace(3)* %325, align 16
  %temp1083 = insertelement <16 x double> undef, double %1997, i32 0
  %vector1084 = shufflevector <16 x double> %temp1083, <16 x double> undef, <16 x i32> zeroinitializer
  %1998 = fmul <16 x double> %1843, %vector1084
  %1999 = fadd <16 x double> %1950, %1998
  %2000 = load double addrspace(3)* %327, align 8
  %temp1085 = insertelement <16 x double> undef, double %2000, i32 0
  %vector1086 = shufflevector <16 x double> %temp1085, <16 x double> undef, <16 x i32> zeroinitializer
  %2001 = fmul <16 x double> %1843, %vector1086
  %2002 = fadd <16 x double> %1953, %2001
  %2003 = load double addrspace(3)* %329, align 16
  %temp1087 = insertelement <16 x double> undef, double %2003, i32 0
  %vector1088 = shufflevector <16 x double> %temp1087, <16 x double> undef, <16 x i32> zeroinitializer
  %2004 = fmul <16 x double> %1843, %vector1088
  %2005 = fadd <16 x double> %1956, %2004
  %2006 = load double addrspace(3)* %331, align 8
  %temp1089 = insertelement <16 x double> undef, double %2006, i32 0
  %vector1090 = shufflevector <16 x double> %temp1089, <16 x double> undef, <16 x i32> zeroinitializer
  %2007 = fmul <16 x double> %1843, %vector1090
  %2008 = fadd <16 x double> %1959, %2007
  %2009 = load double addrspace(3)* %333, align 16
  %temp1091 = insertelement <16 x double> undef, double %2009, i32 0
  %vector1092 = shufflevector <16 x double> %temp1091, <16 x double> undef, <16 x i32> zeroinitializer
  %2010 = fmul <16 x double> %1843, %vector1092
  %2011 = fadd <16 x double> %1962, %2010
  %2012 = load double addrspace(3)* %335, align 8
  %temp1093 = insertelement <16 x double> undef, double %2012, i32 0
  %vector1094 = shufflevector <16 x double> %temp1093, <16 x double> undef, <16 x i32> zeroinitializer
  %2013 = fmul <16 x double> %1843, %vector1094
  %2014 = fadd <16 x double> %1965, %2013
  %2015 = load double addrspace(3)* %337, align 16
  %temp1095 = insertelement <16 x double> undef, double %2015, i32 0
  %vector1096 = shufflevector <16 x double> %temp1095, <16 x double> undef, <16 x i32> zeroinitializer
  %2016 = fmul <16 x double> %1843, %vector1096
  %2017 = fadd <16 x double> %1968, %2016
  %2018 = load double addrspace(3)* %339, align 8
  %temp1097 = insertelement <16 x double> undef, double %2018, i32 0
  %vector1098 = shufflevector <16 x double> %temp1097, <16 x double> undef, <16 x i32> zeroinitializer
  %2019 = fmul <16 x double> %1843, %vector1098
  %2020 = fadd <16 x double> %1971, %2019
  %2021 = load double addrspace(3)* %341, align 16
  %temp1099 = insertelement <16 x double> undef, double %2021, i32 0
  %vector1100 = shufflevector <16 x double> %temp1099, <16 x double> undef, <16 x i32> zeroinitializer
  %2022 = fmul <16 x double> %1843, %vector1100
  %2023 = fadd <16 x double> %1974, %2022
  %2024 = load double addrspace(3)* %343, align 8
  %temp1101 = insertelement <16 x double> undef, double %2024, i32 0
  %vector1102 = shufflevector <16 x double> %temp1101, <16 x double> undef, <16 x i32> zeroinitializer
  %2025 = fmul <16 x double> %1843, %vector1102
  %2026 = fadd <16 x double> %1977, %2025
  %2027 = load double addrspace(3)* %345, align 16
  %temp1103 = insertelement <16 x double> undef, double %2027, i32 0
  %vector1104 = shufflevector <16 x double> %temp1103, <16 x double> undef, <16 x i32> zeroinitializer
  %2028 = fmul <16 x double> %1843, %vector1104
  %2029 = fadd <16 x double> %1980, %2028
  %2030 = load double addrspace(3)* %347, align 8
  %temp1105 = insertelement <16 x double> undef, double %2030, i32 0
  %vector1106 = shufflevector <16 x double> %temp1105, <16 x double> undef, <16 x i32> zeroinitializer
  %2031 = fmul <16 x double> %1843, %vector1106
  %2032 = fadd <16 x double> %1983, %2031
  %2033 = load double addrspace(3)* %349, align 16
  %temp1107 = insertelement <16 x double> undef, double %2033, i32 0
  %vector1108 = shufflevector <16 x double> %temp1107, <16 x double> undef, <16 x i32> zeroinitializer
  %2034 = fmul <16 x double> %1843, %vector1108
  %2035 = fadd <16 x double> %1986, %2034
  %2036 = load double addrspace(3)* %351, align 8
  %temp1109 = insertelement <16 x double> undef, double %2036, i32 0
  %vector1110 = shufflevector <16 x double> %temp1109, <16 x double> undef, <16 x i32> zeroinitializer
  %2037 = fmul <16 x double> %1843, %vector1110
  %2038 = fadd <16 x double> %1989, %2037
  %"&(pSB[currWI].offset)2377" = add nuw i64 %CurrSBIndex..3, 9240
  %"&pSB[currWI].offset2378" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2377"
  %CastToValueType2379 = bitcast i8* %"&pSB[currWI].offset2378" to double addrspace(1)**
  %loadedValue2380 = load double addrspace(1)** %CastToValueType2379, align 8
  %ptrTypeCast1111 = bitcast double addrspace(1)* %loadedValue2380 to <16 x double> addrspace(1)*
  %2039 = load <16 x double> addrspace(1)* %ptrTypeCast1111, align 8
  %2040 = load double addrspace(3)* %353, align 8
  %temp1112 = insertelement <16 x double> undef, double %2040, i32 0
  %vector1113 = shufflevector <16 x double> %temp1112, <16 x double> undef, <16 x i32> zeroinitializer
  %2041 = fmul <16 x double> %1892, %vector1113
  %2042 = fadd <16 x double> %1993, %2041
  %2043 = load double addrspace(3)* %355, align 8
  %temp1114 = insertelement <16 x double> undef, double %2043, i32 0
  %vector1115 = shufflevector <16 x double> %temp1114, <16 x double> undef, <16 x i32> zeroinitializer
  %2044 = fmul <16 x double> %1892, %vector1115
  %2045 = fadd <16 x double> %1996, %2044
  %2046 = load double addrspace(3)* %357, align 8
  %temp1116 = insertelement <16 x double> undef, double %2046, i32 0
  %vector1117 = shufflevector <16 x double> %temp1116, <16 x double> undef, <16 x i32> zeroinitializer
  %2047 = fmul <16 x double> %1892, %vector1117
  %2048 = fadd <16 x double> %1999, %2047
  %2049 = load double addrspace(3)* %359, align 8
  %temp1118 = insertelement <16 x double> undef, double %2049, i32 0
  %vector1119 = shufflevector <16 x double> %temp1118, <16 x double> undef, <16 x i32> zeroinitializer
  %2050 = fmul <16 x double> %1892, %vector1119
  %2051 = fadd <16 x double> %2002, %2050
  %2052 = load double addrspace(3)* %361, align 8
  %temp1120 = insertelement <16 x double> undef, double %2052, i32 0
  %vector1121 = shufflevector <16 x double> %temp1120, <16 x double> undef, <16 x i32> zeroinitializer
  %2053 = fmul <16 x double> %1892, %vector1121
  %2054 = fadd <16 x double> %2005, %2053
  %2055 = load double addrspace(3)* %363, align 8
  %temp1122 = insertelement <16 x double> undef, double %2055, i32 0
  %vector1123 = shufflevector <16 x double> %temp1122, <16 x double> undef, <16 x i32> zeroinitializer
  %2056 = fmul <16 x double> %1892, %vector1123
  %2057 = fadd <16 x double> %2008, %2056
  %2058 = load double addrspace(3)* %365, align 8
  %temp1124 = insertelement <16 x double> undef, double %2058, i32 0
  %vector1125 = shufflevector <16 x double> %temp1124, <16 x double> undef, <16 x i32> zeroinitializer
  %2059 = fmul <16 x double> %1892, %vector1125
  %2060 = fadd <16 x double> %2011, %2059
  %2061 = load double addrspace(3)* %367, align 8
  %temp1126 = insertelement <16 x double> undef, double %2061, i32 0
  %vector1127 = shufflevector <16 x double> %temp1126, <16 x double> undef, <16 x i32> zeroinitializer
  %2062 = fmul <16 x double> %1892, %vector1127
  %2063 = fadd <16 x double> %2014, %2062
  %2064 = load double addrspace(3)* %369, align 8
  %temp1128 = insertelement <16 x double> undef, double %2064, i32 0
  %vector1129 = shufflevector <16 x double> %temp1128, <16 x double> undef, <16 x i32> zeroinitializer
  %2065 = fmul <16 x double> %1892, %vector1129
  %2066 = fadd <16 x double> %2017, %2065
  %2067 = load double addrspace(3)* %371, align 8
  %temp1130 = insertelement <16 x double> undef, double %2067, i32 0
  %vector1131 = shufflevector <16 x double> %temp1130, <16 x double> undef, <16 x i32> zeroinitializer
  %2068 = fmul <16 x double> %1892, %vector1131
  %2069 = fadd <16 x double> %2020, %2068
  %2070 = load double addrspace(3)* %373, align 8
  %temp1132 = insertelement <16 x double> undef, double %2070, i32 0
  %vector1133 = shufflevector <16 x double> %temp1132, <16 x double> undef, <16 x i32> zeroinitializer
  %2071 = fmul <16 x double> %1892, %vector1133
  %2072 = fadd <16 x double> %2023, %2071
  %2073 = load double addrspace(3)* %375, align 8
  %temp1134 = insertelement <16 x double> undef, double %2073, i32 0
  %vector1135 = shufflevector <16 x double> %temp1134, <16 x double> undef, <16 x i32> zeroinitializer
  %2074 = fmul <16 x double> %1892, %vector1135
  %2075 = fadd <16 x double> %2026, %2074
  %2076 = load double addrspace(3)* %377, align 8
  %temp1136 = insertelement <16 x double> undef, double %2076, i32 0
  %vector1137 = shufflevector <16 x double> %temp1136, <16 x double> undef, <16 x i32> zeroinitializer
  %2077 = fmul <16 x double> %1892, %vector1137
  %2078 = fadd <16 x double> %2029, %2077
  %2079 = load double addrspace(3)* %379, align 8
  %temp1138 = insertelement <16 x double> undef, double %2079, i32 0
  %vector1139 = shufflevector <16 x double> %temp1138, <16 x double> undef, <16 x i32> zeroinitializer
  %2080 = fmul <16 x double> %1892, %vector1139
  %2081 = fadd <16 x double> %2032, %2080
  %2082 = load double addrspace(3)* %381, align 8
  %temp1140 = insertelement <16 x double> undef, double %2082, i32 0
  %vector1141 = shufflevector <16 x double> %temp1140, <16 x double> undef, <16 x i32> zeroinitializer
  %2083 = fmul <16 x double> %1892, %vector1141
  %2084 = fadd <16 x double> %2035, %2083
  %2085 = load double addrspace(3)* %383, align 8
  %temp1142 = insertelement <16 x double> undef, double %2085, i32 0
  %vector1143 = shufflevector <16 x double> %temp1142, <16 x double> undef, <16 x i32> zeroinitializer
  %2086 = fmul <16 x double> %1892, %vector1143
  %2087 = fadd <16 x double> %2038, %2086
  %"&(pSB[currWI].offset)2368" = add nuw i64 %CurrSBIndex..3, 9232
  %"&pSB[currWI].offset2369" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2368"
  %CastToValueType2370 = bitcast i8* %"&pSB[currWI].offset2369" to double addrspace(1)**
  %loadedValue2371 = load double addrspace(1)** %CastToValueType2370, align 8
  %ptrTypeCast1144 = bitcast double addrspace(1)* %loadedValue2371 to <16 x double> addrspace(1)*
  %2088 = load <16 x double> addrspace(1)* %ptrTypeCast1144, align 8
  %2089 = load double addrspace(3)* %385, align 16
  %temp1145 = insertelement <16 x double> undef, double %2089, i32 0
  %vector1146 = shufflevector <16 x double> %temp1145, <16 x double> undef, <16 x i32> zeroinitializer
  %2090 = fmul <16 x double> %1941, %vector1146
  %2091 = fadd <16 x double> %2042, %2090
  %2092 = load double addrspace(3)* %387, align 8
  %temp1147 = insertelement <16 x double> undef, double %2092, i32 0
  %vector1148 = shufflevector <16 x double> %temp1147, <16 x double> undef, <16 x i32> zeroinitializer
  %2093 = fmul <16 x double> %1941, %vector1148
  %2094 = fadd <16 x double> %2045, %2093
  %2095 = load double addrspace(3)* %389, align 16
  %temp1149 = insertelement <16 x double> undef, double %2095, i32 0
  %vector1150 = shufflevector <16 x double> %temp1149, <16 x double> undef, <16 x i32> zeroinitializer
  %2096 = fmul <16 x double> %1941, %vector1150
  %2097 = fadd <16 x double> %2048, %2096
  %2098 = load double addrspace(3)* %391, align 8
  %temp1151 = insertelement <16 x double> undef, double %2098, i32 0
  %vector1152 = shufflevector <16 x double> %temp1151, <16 x double> undef, <16 x i32> zeroinitializer
  %2099 = fmul <16 x double> %1941, %vector1152
  %2100 = fadd <16 x double> %2051, %2099
  %2101 = load double addrspace(3)* %393, align 16
  %temp1153 = insertelement <16 x double> undef, double %2101, i32 0
  %vector1154 = shufflevector <16 x double> %temp1153, <16 x double> undef, <16 x i32> zeroinitializer
  %2102 = fmul <16 x double> %1941, %vector1154
  %2103 = fadd <16 x double> %2054, %2102
  %2104 = load double addrspace(3)* %395, align 8
  %temp1155 = insertelement <16 x double> undef, double %2104, i32 0
  %vector1156 = shufflevector <16 x double> %temp1155, <16 x double> undef, <16 x i32> zeroinitializer
  %2105 = fmul <16 x double> %1941, %vector1156
  %2106 = fadd <16 x double> %2057, %2105
  %2107 = load double addrspace(3)* %397, align 16
  %temp1157 = insertelement <16 x double> undef, double %2107, i32 0
  %vector1158 = shufflevector <16 x double> %temp1157, <16 x double> undef, <16 x i32> zeroinitializer
  %2108 = fmul <16 x double> %1941, %vector1158
  %2109 = fadd <16 x double> %2060, %2108
  %2110 = load double addrspace(3)* %399, align 8
  %temp1159 = insertelement <16 x double> undef, double %2110, i32 0
  %vector1160 = shufflevector <16 x double> %temp1159, <16 x double> undef, <16 x i32> zeroinitializer
  %2111 = fmul <16 x double> %1941, %vector1160
  %2112 = fadd <16 x double> %2063, %2111
  %2113 = load double addrspace(3)* %401, align 16
  %temp1161 = insertelement <16 x double> undef, double %2113, i32 0
  %vector1162 = shufflevector <16 x double> %temp1161, <16 x double> undef, <16 x i32> zeroinitializer
  %2114 = fmul <16 x double> %1941, %vector1162
  %2115 = fadd <16 x double> %2066, %2114
  %2116 = load double addrspace(3)* %403, align 8
  %temp1163 = insertelement <16 x double> undef, double %2116, i32 0
  %vector1164 = shufflevector <16 x double> %temp1163, <16 x double> undef, <16 x i32> zeroinitializer
  %2117 = fmul <16 x double> %1941, %vector1164
  %2118 = fadd <16 x double> %2069, %2117
  %2119 = load double addrspace(3)* %405, align 16
  %temp1165 = insertelement <16 x double> undef, double %2119, i32 0
  %vector1166 = shufflevector <16 x double> %temp1165, <16 x double> undef, <16 x i32> zeroinitializer
  %2120 = fmul <16 x double> %1941, %vector1166
  %2121 = fadd <16 x double> %2072, %2120
  %2122 = load double addrspace(3)* %407, align 8
  %temp1167 = insertelement <16 x double> undef, double %2122, i32 0
  %vector1168 = shufflevector <16 x double> %temp1167, <16 x double> undef, <16 x i32> zeroinitializer
  %2123 = fmul <16 x double> %1941, %vector1168
  %2124 = fadd <16 x double> %2075, %2123
  %2125 = load double addrspace(3)* %409, align 16
  %temp1169 = insertelement <16 x double> undef, double %2125, i32 0
  %vector1170 = shufflevector <16 x double> %temp1169, <16 x double> undef, <16 x i32> zeroinitializer
  %2126 = fmul <16 x double> %1941, %vector1170
  %2127 = fadd <16 x double> %2078, %2126
  %2128 = load double addrspace(3)* %411, align 8
  %temp1171 = insertelement <16 x double> undef, double %2128, i32 0
  %vector1172 = shufflevector <16 x double> %temp1171, <16 x double> undef, <16 x i32> zeroinitializer
  %2129 = fmul <16 x double> %1941, %vector1172
  %2130 = fadd <16 x double> %2081, %2129
  %2131 = load double addrspace(3)* %413, align 16
  %temp1173 = insertelement <16 x double> undef, double %2131, i32 0
  %vector1174 = shufflevector <16 x double> %temp1173, <16 x double> undef, <16 x i32> zeroinitializer
  %2132 = fmul <16 x double> %1941, %vector1174
  %2133 = fadd <16 x double> %2084, %2132
  %2134 = load double addrspace(3)* %415, align 8
  %temp1175 = insertelement <16 x double> undef, double %2134, i32 0
  %vector1176 = shufflevector <16 x double> %temp1175, <16 x double> undef, <16 x i32> zeroinitializer
  %2135 = fmul <16 x double> %1941, %vector1176
  %2136 = fadd <16 x double> %2087, %2135
  %2137 = load double addrspace(3)* %417, align 8
  %temp1177 = insertelement <16 x double> undef, double %2137, i32 0
  %vector1178 = shufflevector <16 x double> %temp1177, <16 x double> undef, <16 x i32> zeroinitializer
  %2138 = fmul <16 x double> %1990, %vector1178
  %2139 = fadd <16 x double> %2091, %2138
  %2140 = load double addrspace(3)* %419, align 8
  %temp1179 = insertelement <16 x double> undef, double %2140, i32 0
  %vector1180 = shufflevector <16 x double> %temp1179, <16 x double> undef, <16 x i32> zeroinitializer
  %2141 = fmul <16 x double> %1990, %vector1180
  %2142 = fadd <16 x double> %2094, %2141
  %2143 = load double addrspace(3)* %421, align 8
  %temp1181 = insertelement <16 x double> undef, double %2143, i32 0
  %vector1182 = shufflevector <16 x double> %temp1181, <16 x double> undef, <16 x i32> zeroinitializer
  %2144 = fmul <16 x double> %1990, %vector1182
  %2145 = fadd <16 x double> %2097, %2144
  %2146 = load double addrspace(3)* %423, align 8
  %temp1183 = insertelement <16 x double> undef, double %2146, i32 0
  %vector1184 = shufflevector <16 x double> %temp1183, <16 x double> undef, <16 x i32> zeroinitializer
  %2147 = fmul <16 x double> %1990, %vector1184
  %2148 = fadd <16 x double> %2100, %2147
  %2149 = load double addrspace(3)* %425, align 8
  %temp1185 = insertelement <16 x double> undef, double %2149, i32 0
  %vector1186 = shufflevector <16 x double> %temp1185, <16 x double> undef, <16 x i32> zeroinitializer
  %2150 = fmul <16 x double> %1990, %vector1186
  %2151 = fadd <16 x double> %2103, %2150
  %2152 = load double addrspace(3)* %427, align 8
  %temp1187 = insertelement <16 x double> undef, double %2152, i32 0
  %vector1188 = shufflevector <16 x double> %temp1187, <16 x double> undef, <16 x i32> zeroinitializer
  %2153 = fmul <16 x double> %1990, %vector1188
  %2154 = fadd <16 x double> %2106, %2153
  %2155 = load double addrspace(3)* %429, align 8
  %temp1189 = insertelement <16 x double> undef, double %2155, i32 0
  %vector1190 = shufflevector <16 x double> %temp1189, <16 x double> undef, <16 x i32> zeroinitializer
  %2156 = fmul <16 x double> %1990, %vector1190
  %2157 = fadd <16 x double> %2109, %2156
  %2158 = load double addrspace(3)* %431, align 8
  %temp1191 = insertelement <16 x double> undef, double %2158, i32 0
  %vector1192 = shufflevector <16 x double> %temp1191, <16 x double> undef, <16 x i32> zeroinitializer
  %2159 = fmul <16 x double> %1990, %vector1192
  %2160 = fadd <16 x double> %2112, %2159
  %2161 = load double addrspace(3)* %433, align 8
  %temp1193 = insertelement <16 x double> undef, double %2161, i32 0
  %vector1194 = shufflevector <16 x double> %temp1193, <16 x double> undef, <16 x i32> zeroinitializer
  %2162 = fmul <16 x double> %1990, %vector1194
  %2163 = fadd <16 x double> %2115, %2162
  %2164 = load double addrspace(3)* %435, align 8
  %temp1195 = insertelement <16 x double> undef, double %2164, i32 0
  %vector1196 = shufflevector <16 x double> %temp1195, <16 x double> undef, <16 x i32> zeroinitializer
  %2165 = fmul <16 x double> %1990, %vector1196
  %2166 = fadd <16 x double> %2118, %2165
  %2167 = load double addrspace(3)* %437, align 8
  %temp1197 = insertelement <16 x double> undef, double %2167, i32 0
  %vector1198 = shufflevector <16 x double> %temp1197, <16 x double> undef, <16 x i32> zeroinitializer
  %2168 = fmul <16 x double> %1990, %vector1198
  %2169 = fadd <16 x double> %2121, %2168
  %2170 = load double addrspace(3)* %439, align 8
  %temp1199 = insertelement <16 x double> undef, double %2170, i32 0
  %vector1200 = shufflevector <16 x double> %temp1199, <16 x double> undef, <16 x i32> zeroinitializer
  %2171 = fmul <16 x double> %1990, %vector1200
  %2172 = fadd <16 x double> %2124, %2171
  %2173 = load double addrspace(3)* %441, align 8
  %temp1201 = insertelement <16 x double> undef, double %2173, i32 0
  %vector1202 = shufflevector <16 x double> %temp1201, <16 x double> undef, <16 x i32> zeroinitializer
  %2174 = fmul <16 x double> %1990, %vector1202
  %2175 = fadd <16 x double> %2127, %2174
  %2176 = load double addrspace(3)* %443, align 8
  %temp1203 = insertelement <16 x double> undef, double %2176, i32 0
  %vector1204 = shufflevector <16 x double> %temp1203, <16 x double> undef, <16 x i32> zeroinitializer
  %2177 = fmul <16 x double> %1990, %vector1204
  %2178 = fadd <16 x double> %2130, %2177
  %2179 = load double addrspace(3)* %445, align 8
  %temp1205 = insertelement <16 x double> undef, double %2179, i32 0
  %vector1206 = shufflevector <16 x double> %temp1205, <16 x double> undef, <16 x i32> zeroinitializer
  %2180 = fmul <16 x double> %1990, %vector1206
  %2181 = fadd <16 x double> %2133, %2180
  %2182 = load double addrspace(3)* %447, align 8
  %temp1207 = insertelement <16 x double> undef, double %2182, i32 0
  %vector1208 = shufflevector <16 x double> %temp1207, <16 x double> undef, <16 x i32> zeroinitializer
  %2183 = fmul <16 x double> %1990, %vector1208
  %2184 = fadd <16 x double> %2136, %2183
  %2185 = load double addrspace(3)* %449, align 16
  %temp1209 = insertelement <16 x double> undef, double %2185, i32 0
  %vector1210 = shufflevector <16 x double> %temp1209, <16 x double> undef, <16 x i32> zeroinitializer
  %2186 = fmul <16 x double> %2039, %vector1210
  %2187 = fadd <16 x double> %2139, %2186
  %2188 = load double addrspace(3)* %451, align 8
  %temp1211 = insertelement <16 x double> undef, double %2188, i32 0
  %vector1212 = shufflevector <16 x double> %temp1211, <16 x double> undef, <16 x i32> zeroinitializer
  %2189 = fmul <16 x double> %2039, %vector1212
  %2190 = fadd <16 x double> %2142, %2189
  %2191 = load double addrspace(3)* %453, align 16
  %temp1213 = insertelement <16 x double> undef, double %2191, i32 0
  %vector1214 = shufflevector <16 x double> %temp1213, <16 x double> undef, <16 x i32> zeroinitializer
  %2192 = fmul <16 x double> %2039, %vector1214
  %2193 = fadd <16 x double> %2145, %2192
  %2194 = load double addrspace(3)* %455, align 8
  %temp1215 = insertelement <16 x double> undef, double %2194, i32 0
  %vector1216 = shufflevector <16 x double> %temp1215, <16 x double> undef, <16 x i32> zeroinitializer
  %2195 = fmul <16 x double> %2039, %vector1216
  %2196 = fadd <16 x double> %2148, %2195
  %2197 = load double addrspace(3)* %457, align 16
  %temp1217 = insertelement <16 x double> undef, double %2197, i32 0
  %vector1218 = shufflevector <16 x double> %temp1217, <16 x double> undef, <16 x i32> zeroinitializer
  %2198 = fmul <16 x double> %2039, %vector1218
  %2199 = fadd <16 x double> %2151, %2198
  %2200 = load double addrspace(3)* %459, align 8
  %temp1219 = insertelement <16 x double> undef, double %2200, i32 0
  %vector1220 = shufflevector <16 x double> %temp1219, <16 x double> undef, <16 x i32> zeroinitializer
  %2201 = fmul <16 x double> %2039, %vector1220
  %2202 = fadd <16 x double> %2154, %2201
  %2203 = load double addrspace(3)* %461, align 16
  %temp1221 = insertelement <16 x double> undef, double %2203, i32 0
  %vector1222 = shufflevector <16 x double> %temp1221, <16 x double> undef, <16 x i32> zeroinitializer
  %2204 = fmul <16 x double> %2039, %vector1222
  %2205 = fadd <16 x double> %2157, %2204
  %2206 = load double addrspace(3)* %463, align 8
  %temp1223 = insertelement <16 x double> undef, double %2206, i32 0
  %vector1224 = shufflevector <16 x double> %temp1223, <16 x double> undef, <16 x i32> zeroinitializer
  %2207 = fmul <16 x double> %2039, %vector1224
  %2208 = fadd <16 x double> %2160, %2207
  %2209 = load double addrspace(3)* %465, align 16
  %temp1225 = insertelement <16 x double> undef, double %2209, i32 0
  %vector1226 = shufflevector <16 x double> %temp1225, <16 x double> undef, <16 x i32> zeroinitializer
  %2210 = fmul <16 x double> %2039, %vector1226
  %2211 = fadd <16 x double> %2163, %2210
  %2212 = load double addrspace(3)* %467, align 8
  %temp1227 = insertelement <16 x double> undef, double %2212, i32 0
  %vector1228 = shufflevector <16 x double> %temp1227, <16 x double> undef, <16 x i32> zeroinitializer
  %2213 = fmul <16 x double> %2039, %vector1228
  %2214 = fadd <16 x double> %2166, %2213
  %2215 = load double addrspace(3)* %469, align 16
  %temp1229 = insertelement <16 x double> undef, double %2215, i32 0
  %vector1230 = shufflevector <16 x double> %temp1229, <16 x double> undef, <16 x i32> zeroinitializer
  %2216 = fmul <16 x double> %2039, %vector1230
  %2217 = fadd <16 x double> %2169, %2216
  %2218 = load double addrspace(3)* %471, align 8
  %temp1231 = insertelement <16 x double> undef, double %2218, i32 0
  %vector1232 = shufflevector <16 x double> %temp1231, <16 x double> undef, <16 x i32> zeroinitializer
  %2219 = fmul <16 x double> %2039, %vector1232
  %2220 = fadd <16 x double> %2172, %2219
  %2221 = load double addrspace(3)* %473, align 16
  %temp1233 = insertelement <16 x double> undef, double %2221, i32 0
  %vector1234 = shufflevector <16 x double> %temp1233, <16 x double> undef, <16 x i32> zeroinitializer
  %2222 = fmul <16 x double> %2039, %vector1234
  %2223 = fadd <16 x double> %2175, %2222
  %2224 = load double addrspace(3)* %475, align 8
  %temp1235 = insertelement <16 x double> undef, double %2224, i32 0
  %vector1236 = shufflevector <16 x double> %temp1235, <16 x double> undef, <16 x i32> zeroinitializer
  %2225 = fmul <16 x double> %2039, %vector1236
  %2226 = fadd <16 x double> %2178, %2225
  %2227 = load double addrspace(3)* %477, align 16
  %temp1237 = insertelement <16 x double> undef, double %2227, i32 0
  %vector1238 = shufflevector <16 x double> %temp1237, <16 x double> undef, <16 x i32> zeroinitializer
  %2228 = fmul <16 x double> %2039, %vector1238
  %2229 = fadd <16 x double> %2181, %2228
  %2230 = load double addrspace(3)* %479, align 8
  %temp1239 = insertelement <16 x double> undef, double %2230, i32 0
  %vector1240 = shufflevector <16 x double> %temp1239, <16 x double> undef, <16 x i32> zeroinitializer
  %2231 = fmul <16 x double> %2039, %vector1240
  %2232 = fadd <16 x double> %2184, %2231
  %2233 = load double addrspace(3)* %481, align 8
  %temp1241 = insertelement <16 x double> undef, double %2233, i32 0
  %vector1242 = shufflevector <16 x double> %temp1241, <16 x double> undef, <16 x i32> zeroinitializer
  %2234 = fmul <16 x double> %2088, %vector1242
  %2235 = fadd <16 x double> %2187, %2234
  %extract1243 = extractelement <16 x double> %2235, i32 0
  %extract1244 = extractelement <16 x double> %2235, i32 1
  %extract1245 = extractelement <16 x double> %2235, i32 2
  %extract1246 = extractelement <16 x double> %2235, i32 3
  %extract1247 = extractelement <16 x double> %2235, i32 4
  %extract1248 = extractelement <16 x double> %2235, i32 5
  %extract1249 = extractelement <16 x double> %2235, i32 6
  %extract1250 = extractelement <16 x double> %2235, i32 7
  %extract1251 = extractelement <16 x double> %2235, i32 8
  %extract1252 = extractelement <16 x double> %2235, i32 9
  %extract1253 = extractelement <16 x double> %2235, i32 10
  %extract1254 = extractelement <16 x double> %2235, i32 11
  %extract1255 = extractelement <16 x double> %2235, i32 12
  %extract1256 = extractelement <16 x double> %2235, i32 13
  %extract1257 = extractelement <16 x double> %2235, i32 14
  %extract1258 = extractelement <16 x double> %2235, i32 15
  store double %extract1243, double* %721, align 16
  store double %extract1244, double* %722, align 16
  store double %extract1245, double* %723, align 16
  store double %extract1246, double* %724, align 16
  store double %extract1247, double* %725, align 16
  store double %extract1248, double* %726, align 16
  store double %extract1249, double* %727, align 16
  store double %extract1250, double* %728, align 16
  store double %extract1251, double* %729, align 16
  store double %extract1252, double* %730, align 16
  store double %extract1253, double* %731, align 16
  store double %extract1254, double* %732, align 16
  store double %extract1255, double* %733, align 16
  store double %extract1256, double* %734, align 16
  store double %extract1257, double* %735, align 16
  store double %extract1258, double* %736, align 16
  %2236 = load double addrspace(3)* %483, align 8
  %temp1259 = insertelement <16 x double> undef, double %2236, i32 0
  %vector1260 = shufflevector <16 x double> %temp1259, <16 x double> undef, <16 x i32> zeroinitializer
  %2237 = fmul <16 x double> %2088, %vector1260
  %2238 = fadd <16 x double> %2190, %2237
  %extract1261 = extractelement <16 x double> %2238, i32 0
  %extract1262 = extractelement <16 x double> %2238, i32 1
  %extract1263 = extractelement <16 x double> %2238, i32 2
  %extract1264 = extractelement <16 x double> %2238, i32 3
  %extract1265 = extractelement <16 x double> %2238, i32 4
  %extract1266 = extractelement <16 x double> %2238, i32 5
  %extract1267 = extractelement <16 x double> %2238, i32 6
  %extract1268 = extractelement <16 x double> %2238, i32 7
  %extract1269 = extractelement <16 x double> %2238, i32 8
  %extract1270 = extractelement <16 x double> %2238, i32 9
  %extract1271 = extractelement <16 x double> %2238, i32 10
  %extract1272 = extractelement <16 x double> %2238, i32 11
  %extract1273 = extractelement <16 x double> %2238, i32 12
  %extract1274 = extractelement <16 x double> %2238, i32 13
  %extract1275 = extractelement <16 x double> %2238, i32 14
  %extract1276 = extractelement <16 x double> %2238, i32 15
  store double %extract1261, double* %738, align 8
  store double %extract1262, double* %740, align 8
  store double %extract1263, double* %742, align 8
  store double %extract1264, double* %744, align 8
  store double %extract1265, double* %746, align 8
  store double %extract1266, double* %748, align 8
  store double %extract1267, double* %750, align 8
  store double %extract1268, double* %752, align 8
  store double %extract1269, double* %754, align 8
  store double %extract1270, double* %756, align 8
  store double %extract1271, double* %758, align 8
  store double %extract1272, double* %760, align 8
  store double %extract1273, double* %762, align 8
  store double %extract1274, double* %764, align 8
  store double %extract1275, double* %766, align 8
  store double %extract1276, double* %768, align 8
  %2239 = load double addrspace(3)* %485, align 8
  %temp1277 = insertelement <16 x double> undef, double %2239, i32 0
  %vector1278 = shufflevector <16 x double> %temp1277, <16 x double> undef, <16 x i32> zeroinitializer
  %2240 = fmul <16 x double> %2088, %vector1278
  %2241 = fadd <16 x double> %2193, %2240
  %extract1279 = extractelement <16 x double> %2241, i32 0
  %extract1280 = extractelement <16 x double> %2241, i32 1
  %extract1281 = extractelement <16 x double> %2241, i32 2
  %extract1282 = extractelement <16 x double> %2241, i32 3
  %extract1283 = extractelement <16 x double> %2241, i32 4
  %extract1284 = extractelement <16 x double> %2241, i32 5
  %extract1285 = extractelement <16 x double> %2241, i32 6
  %extract1286 = extractelement <16 x double> %2241, i32 7
  %extract1287 = extractelement <16 x double> %2241, i32 8
  %extract1288 = extractelement <16 x double> %2241, i32 9
  %extract1289 = extractelement <16 x double> %2241, i32 10
  %extract1290 = extractelement <16 x double> %2241, i32 11
  %extract1291 = extractelement <16 x double> %2241, i32 12
  %extract1292 = extractelement <16 x double> %2241, i32 13
  %extract1293 = extractelement <16 x double> %2241, i32 14
  %extract1294 = extractelement <16 x double> %2241, i32 15
  store double %extract1279, double* %770, align 16
  store double %extract1280, double* %772, align 16
  store double %extract1281, double* %774, align 16
  store double %extract1282, double* %776, align 16
  store double %extract1283, double* %778, align 16
  store double %extract1284, double* %780, align 16
  store double %extract1285, double* %782, align 16
  store double %extract1286, double* %784, align 16
  store double %extract1287, double* %786, align 16
  store double %extract1288, double* %788, align 16
  store double %extract1289, double* %790, align 16
  store double %extract1290, double* %792, align 16
  store double %extract1291, double* %794, align 16
  store double %extract1292, double* %796, align 16
  store double %extract1293, double* %798, align 16
  store double %extract1294, double* %800, align 16
  %2242 = load double addrspace(3)* %487, align 8
  %temp1295 = insertelement <16 x double> undef, double %2242, i32 0
  %vector1296 = shufflevector <16 x double> %temp1295, <16 x double> undef, <16 x i32> zeroinitializer
  %2243 = fmul <16 x double> %2088, %vector1296
  %2244 = fadd <16 x double> %2196, %2243
  %extract1297 = extractelement <16 x double> %2244, i32 0
  %extract1298 = extractelement <16 x double> %2244, i32 1
  %extract1299 = extractelement <16 x double> %2244, i32 2
  %extract1300 = extractelement <16 x double> %2244, i32 3
  %extract1301 = extractelement <16 x double> %2244, i32 4
  %extract1302 = extractelement <16 x double> %2244, i32 5
  %extract1303 = extractelement <16 x double> %2244, i32 6
  %extract1304 = extractelement <16 x double> %2244, i32 7
  %extract1305 = extractelement <16 x double> %2244, i32 8
  %extract1306 = extractelement <16 x double> %2244, i32 9
  %extract1307 = extractelement <16 x double> %2244, i32 10
  %extract1308 = extractelement <16 x double> %2244, i32 11
  %extract1309 = extractelement <16 x double> %2244, i32 12
  %extract1310 = extractelement <16 x double> %2244, i32 13
  %extract1311 = extractelement <16 x double> %2244, i32 14
  %extract1312 = extractelement <16 x double> %2244, i32 15
  store double %extract1297, double* %802, align 8
  store double %extract1298, double* %804, align 8
  store double %extract1299, double* %806, align 8
  store double %extract1300, double* %808, align 8
  store double %extract1301, double* %810, align 8
  store double %extract1302, double* %812, align 8
  store double %extract1303, double* %814, align 8
  store double %extract1304, double* %816, align 8
  store double %extract1305, double* %818, align 8
  store double %extract1306, double* %820, align 8
  store double %extract1307, double* %822, align 8
  store double %extract1308, double* %824, align 8
  store double %extract1309, double* %826, align 8
  store double %extract1310, double* %828, align 8
  store double %extract1311, double* %830, align 8
  store double %extract1312, double* %832, align 8
  %2245 = load double addrspace(3)* %489, align 8
  %temp1313 = insertelement <16 x double> undef, double %2245, i32 0
  %vector1314 = shufflevector <16 x double> %temp1313, <16 x double> undef, <16 x i32> zeroinitializer
  %2246 = fmul <16 x double> %2088, %vector1314
  %2247 = fadd <16 x double> %2199, %2246
  %extract1315 = extractelement <16 x double> %2247, i32 0
  %extract1316 = extractelement <16 x double> %2247, i32 1
  %extract1317 = extractelement <16 x double> %2247, i32 2
  %extract1318 = extractelement <16 x double> %2247, i32 3
  %extract1319 = extractelement <16 x double> %2247, i32 4
  %extract1320 = extractelement <16 x double> %2247, i32 5
  %extract1321 = extractelement <16 x double> %2247, i32 6
  %extract1322 = extractelement <16 x double> %2247, i32 7
  %extract1323 = extractelement <16 x double> %2247, i32 8
  %extract1324 = extractelement <16 x double> %2247, i32 9
  %extract1325 = extractelement <16 x double> %2247, i32 10
  %extract1326 = extractelement <16 x double> %2247, i32 11
  %extract1327 = extractelement <16 x double> %2247, i32 12
  %extract1328 = extractelement <16 x double> %2247, i32 13
  %extract1329 = extractelement <16 x double> %2247, i32 14
  %extract1330 = extractelement <16 x double> %2247, i32 15
  store double %extract1315, double* %834, align 16
  store double %extract1316, double* %836, align 16
  store double %extract1317, double* %838, align 16
  store double %extract1318, double* %840, align 16
  store double %extract1319, double* %842, align 16
  store double %extract1320, double* %844, align 16
  store double %extract1321, double* %846, align 16
  store double %extract1322, double* %848, align 16
  store double %extract1323, double* %850, align 16
  store double %extract1324, double* %852, align 16
  store double %extract1325, double* %854, align 16
  store double %extract1326, double* %856, align 16
  store double %extract1327, double* %858, align 16
  store double %extract1328, double* %860, align 16
  store double %extract1329, double* %862, align 16
  store double %extract1330, double* %864, align 16
  %2248 = load double addrspace(3)* %491, align 8
  %temp1331 = insertelement <16 x double> undef, double %2248, i32 0
  %vector1332 = shufflevector <16 x double> %temp1331, <16 x double> undef, <16 x i32> zeroinitializer
  %2249 = fmul <16 x double> %2088, %vector1332
  %2250 = fadd <16 x double> %2202, %2249
  %extract1333 = extractelement <16 x double> %2250, i32 0
  %extract1334 = extractelement <16 x double> %2250, i32 1
  %extract1335 = extractelement <16 x double> %2250, i32 2
  %extract1336 = extractelement <16 x double> %2250, i32 3
  %extract1337 = extractelement <16 x double> %2250, i32 4
  %extract1338 = extractelement <16 x double> %2250, i32 5
  %extract1339 = extractelement <16 x double> %2250, i32 6
  %extract1340 = extractelement <16 x double> %2250, i32 7
  %extract1341 = extractelement <16 x double> %2250, i32 8
  %extract1342 = extractelement <16 x double> %2250, i32 9
  %extract1343 = extractelement <16 x double> %2250, i32 10
  %extract1344 = extractelement <16 x double> %2250, i32 11
  %extract1345 = extractelement <16 x double> %2250, i32 12
  %extract1346 = extractelement <16 x double> %2250, i32 13
  %extract1347 = extractelement <16 x double> %2250, i32 14
  %extract1348 = extractelement <16 x double> %2250, i32 15
  store double %extract1333, double* %866, align 8
  store double %extract1334, double* %868, align 8
  store double %extract1335, double* %870, align 8
  store double %extract1336, double* %872, align 8
  store double %extract1337, double* %874, align 8
  store double %extract1338, double* %876, align 8
  store double %extract1339, double* %878, align 8
  store double %extract1340, double* %880, align 8
  store double %extract1341, double* %882, align 8
  store double %extract1342, double* %884, align 8
  store double %extract1343, double* %886, align 8
  store double %extract1344, double* %888, align 8
  store double %extract1345, double* %890, align 8
  store double %extract1346, double* %892, align 8
  store double %extract1347, double* %894, align 8
  store double %extract1348, double* %896, align 8
  %2251 = load double addrspace(3)* %493, align 8
  %temp1349 = insertelement <16 x double> undef, double %2251, i32 0
  %vector1350 = shufflevector <16 x double> %temp1349, <16 x double> undef, <16 x i32> zeroinitializer
  %2252 = fmul <16 x double> %2088, %vector1350
  %2253 = fadd <16 x double> %2205, %2252
  %extract1351 = extractelement <16 x double> %2253, i32 0
  %extract1352 = extractelement <16 x double> %2253, i32 1
  %extract1353 = extractelement <16 x double> %2253, i32 2
  %extract1354 = extractelement <16 x double> %2253, i32 3
  %extract1355 = extractelement <16 x double> %2253, i32 4
  %extract1356 = extractelement <16 x double> %2253, i32 5
  %extract1357 = extractelement <16 x double> %2253, i32 6
  %extract1358 = extractelement <16 x double> %2253, i32 7
  %extract1359 = extractelement <16 x double> %2253, i32 8
  %extract1360 = extractelement <16 x double> %2253, i32 9
  %extract1361 = extractelement <16 x double> %2253, i32 10
  %extract1362 = extractelement <16 x double> %2253, i32 11
  %extract1363 = extractelement <16 x double> %2253, i32 12
  %extract1364 = extractelement <16 x double> %2253, i32 13
  %extract1365 = extractelement <16 x double> %2253, i32 14
  %extract1366 = extractelement <16 x double> %2253, i32 15
  store double %extract1351, double* %898, align 16
  store double %extract1352, double* %900, align 16
  store double %extract1353, double* %902, align 16
  store double %extract1354, double* %904, align 16
  store double %extract1355, double* %906, align 16
  store double %extract1356, double* %908, align 16
  store double %extract1357, double* %910, align 16
  store double %extract1358, double* %912, align 16
  store double %extract1359, double* %914, align 16
  store double %extract1360, double* %916, align 16
  store double %extract1361, double* %918, align 16
  store double %extract1362, double* %920, align 16
  store double %extract1363, double* %922, align 16
  store double %extract1364, double* %924, align 16
  store double %extract1365, double* %926, align 16
  store double %extract1366, double* %928, align 16
  %2254 = load double addrspace(3)* %495, align 8
  %temp1367 = insertelement <16 x double> undef, double %2254, i32 0
  %vector1368 = shufflevector <16 x double> %temp1367, <16 x double> undef, <16 x i32> zeroinitializer
  %2255 = fmul <16 x double> %2088, %vector1368
  %2256 = fadd <16 x double> %2208, %2255
  %extract1369 = extractelement <16 x double> %2256, i32 0
  %extract1370 = extractelement <16 x double> %2256, i32 1
  %extract1371 = extractelement <16 x double> %2256, i32 2
  %extract1372 = extractelement <16 x double> %2256, i32 3
  %extract1373 = extractelement <16 x double> %2256, i32 4
  %extract1374 = extractelement <16 x double> %2256, i32 5
  %extract1375 = extractelement <16 x double> %2256, i32 6
  %extract1376 = extractelement <16 x double> %2256, i32 7
  %extract1377 = extractelement <16 x double> %2256, i32 8
  %extract1378 = extractelement <16 x double> %2256, i32 9
  %extract1379 = extractelement <16 x double> %2256, i32 10
  %extract1380 = extractelement <16 x double> %2256, i32 11
  %extract1381 = extractelement <16 x double> %2256, i32 12
  %extract1382 = extractelement <16 x double> %2256, i32 13
  %extract1383 = extractelement <16 x double> %2256, i32 14
  %extract1384 = extractelement <16 x double> %2256, i32 15
  store double %extract1369, double* %930, align 8
  store double %extract1370, double* %932, align 8
  store double %extract1371, double* %934, align 8
  store double %extract1372, double* %936, align 8
  store double %extract1373, double* %938, align 8
  store double %extract1374, double* %940, align 8
  store double %extract1375, double* %942, align 8
  store double %extract1376, double* %944, align 8
  store double %extract1377, double* %946, align 8
  store double %extract1378, double* %948, align 8
  store double %extract1379, double* %950, align 8
  store double %extract1380, double* %952, align 8
  store double %extract1381, double* %954, align 8
  store double %extract1382, double* %956, align 8
  store double %extract1383, double* %958, align 8
  store double %extract1384, double* %960, align 8
  %2257 = load double addrspace(3)* %497, align 8
  %temp1385 = insertelement <16 x double> undef, double %2257, i32 0
  %vector1386 = shufflevector <16 x double> %temp1385, <16 x double> undef, <16 x i32> zeroinitializer
  %2258 = fmul <16 x double> %2088, %vector1386
  %2259 = fadd <16 x double> %2211, %2258
  %extract1387 = extractelement <16 x double> %2259, i32 0
  %extract1388 = extractelement <16 x double> %2259, i32 1
  %extract1389 = extractelement <16 x double> %2259, i32 2
  %extract1390 = extractelement <16 x double> %2259, i32 3
  %extract1391 = extractelement <16 x double> %2259, i32 4
  %extract1392 = extractelement <16 x double> %2259, i32 5
  %extract1393 = extractelement <16 x double> %2259, i32 6
  %extract1394 = extractelement <16 x double> %2259, i32 7
  %extract1395 = extractelement <16 x double> %2259, i32 8
  %extract1396 = extractelement <16 x double> %2259, i32 9
  %extract1397 = extractelement <16 x double> %2259, i32 10
  %extract1398 = extractelement <16 x double> %2259, i32 11
  %extract1399 = extractelement <16 x double> %2259, i32 12
  %extract1400 = extractelement <16 x double> %2259, i32 13
  %extract1401 = extractelement <16 x double> %2259, i32 14
  %extract1402 = extractelement <16 x double> %2259, i32 15
  store double %extract1387, double* %962, align 16
  store double %extract1388, double* %964, align 16
  store double %extract1389, double* %966, align 16
  store double %extract1390, double* %968, align 16
  store double %extract1391, double* %970, align 16
  store double %extract1392, double* %972, align 16
  store double %extract1393, double* %974, align 16
  store double %extract1394, double* %976, align 16
  store double %extract1395, double* %978, align 16
  store double %extract1396, double* %980, align 16
  store double %extract1397, double* %982, align 16
  store double %extract1398, double* %984, align 16
  store double %extract1399, double* %986, align 16
  store double %extract1400, double* %988, align 16
  store double %extract1401, double* %990, align 16
  store double %extract1402, double* %992, align 16
  %2260 = load double addrspace(3)* %499, align 8
  %temp1403 = insertelement <16 x double> undef, double %2260, i32 0
  %vector1404 = shufflevector <16 x double> %temp1403, <16 x double> undef, <16 x i32> zeroinitializer
  %2261 = fmul <16 x double> %2088, %vector1404
  %2262 = fadd <16 x double> %2214, %2261
  %extract1405 = extractelement <16 x double> %2262, i32 0
  %extract1406 = extractelement <16 x double> %2262, i32 1
  %extract1407 = extractelement <16 x double> %2262, i32 2
  %extract1408 = extractelement <16 x double> %2262, i32 3
  %extract1409 = extractelement <16 x double> %2262, i32 4
  %extract1410 = extractelement <16 x double> %2262, i32 5
  %extract1411 = extractelement <16 x double> %2262, i32 6
  %extract1412 = extractelement <16 x double> %2262, i32 7
  %extract1413 = extractelement <16 x double> %2262, i32 8
  %extract1414 = extractelement <16 x double> %2262, i32 9
  %extract1415 = extractelement <16 x double> %2262, i32 10
  %extract1416 = extractelement <16 x double> %2262, i32 11
  %extract1417 = extractelement <16 x double> %2262, i32 12
  %extract1418 = extractelement <16 x double> %2262, i32 13
  %extract1419 = extractelement <16 x double> %2262, i32 14
  %extract1420 = extractelement <16 x double> %2262, i32 15
  store double %extract1405, double* %994, align 8
  store double %extract1406, double* %996, align 8
  store double %extract1407, double* %998, align 8
  store double %extract1408, double* %1000, align 8
  store double %extract1409, double* %1002, align 8
  store double %extract1410, double* %1004, align 8
  store double %extract1411, double* %1006, align 8
  store double %extract1412, double* %1008, align 8
  store double %extract1413, double* %1010, align 8
  store double %extract1414, double* %1012, align 8
  store double %extract1415, double* %1014, align 8
  store double %extract1416, double* %1016, align 8
  store double %extract1417, double* %1018, align 8
  store double %extract1418, double* %1020, align 8
  store double %extract1419, double* %1022, align 8
  store double %extract1420, double* %1024, align 8
  %2263 = load double addrspace(3)* %501, align 8
  %temp1421 = insertelement <16 x double> undef, double %2263, i32 0
  %vector1422 = shufflevector <16 x double> %temp1421, <16 x double> undef, <16 x i32> zeroinitializer
  %2264 = fmul <16 x double> %2088, %vector1422
  %2265 = fadd <16 x double> %2217, %2264
  %extract1423 = extractelement <16 x double> %2265, i32 0
  %extract1424 = extractelement <16 x double> %2265, i32 1
  %extract1425 = extractelement <16 x double> %2265, i32 2
  %extract1426 = extractelement <16 x double> %2265, i32 3
  %extract1427 = extractelement <16 x double> %2265, i32 4
  %extract1428 = extractelement <16 x double> %2265, i32 5
  %extract1429 = extractelement <16 x double> %2265, i32 6
  %extract1430 = extractelement <16 x double> %2265, i32 7
  %extract1431 = extractelement <16 x double> %2265, i32 8
  %extract1432 = extractelement <16 x double> %2265, i32 9
  %extract1433 = extractelement <16 x double> %2265, i32 10
  %extract1434 = extractelement <16 x double> %2265, i32 11
  %extract1435 = extractelement <16 x double> %2265, i32 12
  %extract1436 = extractelement <16 x double> %2265, i32 13
  %extract1437 = extractelement <16 x double> %2265, i32 14
  %extract1438 = extractelement <16 x double> %2265, i32 15
  store double %extract1423, double* %1026, align 16
  store double %extract1424, double* %1028, align 16
  store double %extract1425, double* %1030, align 16
  store double %extract1426, double* %1032, align 16
  store double %extract1427, double* %1034, align 16
  store double %extract1428, double* %1036, align 16
  store double %extract1429, double* %1038, align 16
  store double %extract1430, double* %1040, align 16
  store double %extract1431, double* %1042, align 16
  store double %extract1432, double* %1044, align 16
  store double %extract1433, double* %1046, align 16
  store double %extract1434, double* %1048, align 16
  store double %extract1435, double* %1050, align 16
  store double %extract1436, double* %1052, align 16
  store double %extract1437, double* %1054, align 16
  store double %extract1438, double* %1056, align 16
  %2266 = load double addrspace(3)* %503, align 8
  %temp1439 = insertelement <16 x double> undef, double %2266, i32 0
  %vector1440 = shufflevector <16 x double> %temp1439, <16 x double> undef, <16 x i32> zeroinitializer
  %2267 = fmul <16 x double> %2088, %vector1440
  %2268 = fadd <16 x double> %2220, %2267
  %extract1441 = extractelement <16 x double> %2268, i32 0
  %extract1442 = extractelement <16 x double> %2268, i32 1
  %extract1443 = extractelement <16 x double> %2268, i32 2
  %extract1444 = extractelement <16 x double> %2268, i32 3
  %extract1445 = extractelement <16 x double> %2268, i32 4
  %extract1446 = extractelement <16 x double> %2268, i32 5
  %extract1447 = extractelement <16 x double> %2268, i32 6
  %extract1448 = extractelement <16 x double> %2268, i32 7
  %extract1449 = extractelement <16 x double> %2268, i32 8
  %extract1450 = extractelement <16 x double> %2268, i32 9
  %extract1451 = extractelement <16 x double> %2268, i32 10
  %extract1452 = extractelement <16 x double> %2268, i32 11
  %extract1453 = extractelement <16 x double> %2268, i32 12
  %extract1454 = extractelement <16 x double> %2268, i32 13
  %extract1455 = extractelement <16 x double> %2268, i32 14
  %extract1456 = extractelement <16 x double> %2268, i32 15
  store double %extract1441, double* %1058, align 8
  store double %extract1442, double* %1060, align 8
  store double %extract1443, double* %1062, align 8
  store double %extract1444, double* %1064, align 8
  store double %extract1445, double* %1066, align 8
  store double %extract1446, double* %1068, align 8
  store double %extract1447, double* %1070, align 8
  store double %extract1448, double* %1072, align 8
  store double %extract1449, double* %1074, align 8
  store double %extract1450, double* %1076, align 8
  store double %extract1451, double* %1078, align 8
  store double %extract1452, double* %1080, align 8
  store double %extract1453, double* %1082, align 8
  store double %extract1454, double* %1084, align 8
  store double %extract1455, double* %1086, align 8
  store double %extract1456, double* %1088, align 8
  %2269 = load double addrspace(3)* %505, align 8
  %temp1457 = insertelement <16 x double> undef, double %2269, i32 0
  %vector1458 = shufflevector <16 x double> %temp1457, <16 x double> undef, <16 x i32> zeroinitializer
  %2270 = fmul <16 x double> %2088, %vector1458
  %2271 = fadd <16 x double> %2223, %2270
  %extract1459 = extractelement <16 x double> %2271, i32 0
  %extract1460 = extractelement <16 x double> %2271, i32 1
  %extract1461 = extractelement <16 x double> %2271, i32 2
  %extract1462 = extractelement <16 x double> %2271, i32 3
  %extract1463 = extractelement <16 x double> %2271, i32 4
  %extract1464 = extractelement <16 x double> %2271, i32 5
  %extract1465 = extractelement <16 x double> %2271, i32 6
  %extract1466 = extractelement <16 x double> %2271, i32 7
  %extract1467 = extractelement <16 x double> %2271, i32 8
  %extract1468 = extractelement <16 x double> %2271, i32 9
  %extract1469 = extractelement <16 x double> %2271, i32 10
  %extract1470 = extractelement <16 x double> %2271, i32 11
  %extract1471 = extractelement <16 x double> %2271, i32 12
  %extract1472 = extractelement <16 x double> %2271, i32 13
  %extract1473 = extractelement <16 x double> %2271, i32 14
  %extract1474 = extractelement <16 x double> %2271, i32 15
  store double %extract1459, double* %1090, align 16
  store double %extract1460, double* %1092, align 16
  store double %extract1461, double* %1094, align 16
  store double %extract1462, double* %1096, align 16
  store double %extract1463, double* %1098, align 16
  store double %extract1464, double* %1100, align 16
  store double %extract1465, double* %1102, align 16
  store double %extract1466, double* %1104, align 16
  store double %extract1467, double* %1106, align 16
  store double %extract1468, double* %1108, align 16
  store double %extract1469, double* %1110, align 16
  store double %extract1470, double* %1112, align 16
  store double %extract1471, double* %1114, align 16
  store double %extract1472, double* %1116, align 16
  store double %extract1473, double* %1118, align 16
  store double %extract1474, double* %1120, align 16
  %2272 = load double addrspace(3)* %507, align 8
  %temp1475 = insertelement <16 x double> undef, double %2272, i32 0
  %vector1476 = shufflevector <16 x double> %temp1475, <16 x double> undef, <16 x i32> zeroinitializer
  %2273 = fmul <16 x double> %2088, %vector1476
  %2274 = fadd <16 x double> %2226, %2273
  %extract1477 = extractelement <16 x double> %2274, i32 0
  %extract1478 = extractelement <16 x double> %2274, i32 1
  %extract1479 = extractelement <16 x double> %2274, i32 2
  %extract1480 = extractelement <16 x double> %2274, i32 3
  %extract1481 = extractelement <16 x double> %2274, i32 4
  %extract1482 = extractelement <16 x double> %2274, i32 5
  %extract1483 = extractelement <16 x double> %2274, i32 6
  %extract1484 = extractelement <16 x double> %2274, i32 7
  %extract1485 = extractelement <16 x double> %2274, i32 8
  %extract1486 = extractelement <16 x double> %2274, i32 9
  %extract1487 = extractelement <16 x double> %2274, i32 10
  %extract1488 = extractelement <16 x double> %2274, i32 11
  %extract1489 = extractelement <16 x double> %2274, i32 12
  %extract1490 = extractelement <16 x double> %2274, i32 13
  %extract1491 = extractelement <16 x double> %2274, i32 14
  %extract1492 = extractelement <16 x double> %2274, i32 15
  store double %extract1477, double* %1122, align 8
  store double %extract1478, double* %1124, align 8
  store double %extract1479, double* %1126, align 8
  store double %extract1480, double* %1128, align 8
  store double %extract1481, double* %1130, align 8
  store double %extract1482, double* %1132, align 8
  store double %extract1483, double* %1134, align 8
  store double %extract1484, double* %1136, align 8
  store double %extract1485, double* %1138, align 8
  store double %extract1486, double* %1140, align 8
  store double %extract1487, double* %1142, align 8
  store double %extract1488, double* %1144, align 8
  store double %extract1489, double* %1146, align 8
  store double %extract1490, double* %1148, align 8
  store double %extract1491, double* %1150, align 8
  store double %extract1492, double* %1152, align 8
  %2275 = load double addrspace(3)* %509, align 8
  %temp1493 = insertelement <16 x double> undef, double %2275, i32 0
  %vector1494 = shufflevector <16 x double> %temp1493, <16 x double> undef, <16 x i32> zeroinitializer
  %2276 = fmul <16 x double> %2088, %vector1494
  %2277 = fadd <16 x double> %2229, %2276
  %extract1495 = extractelement <16 x double> %2277, i32 0
  %extract1496 = extractelement <16 x double> %2277, i32 1
  %extract1497 = extractelement <16 x double> %2277, i32 2
  %extract1498 = extractelement <16 x double> %2277, i32 3
  %extract1499 = extractelement <16 x double> %2277, i32 4
  %extract1500 = extractelement <16 x double> %2277, i32 5
  %extract1501 = extractelement <16 x double> %2277, i32 6
  %extract1502 = extractelement <16 x double> %2277, i32 7
  %extract1503 = extractelement <16 x double> %2277, i32 8
  %extract1504 = extractelement <16 x double> %2277, i32 9
  %extract1505 = extractelement <16 x double> %2277, i32 10
  %extract1506 = extractelement <16 x double> %2277, i32 11
  %extract1507 = extractelement <16 x double> %2277, i32 12
  %extract1508 = extractelement <16 x double> %2277, i32 13
  %extract1509 = extractelement <16 x double> %2277, i32 14
  %extract1510 = extractelement <16 x double> %2277, i32 15
  store double %extract1495, double* %1154, align 16
  store double %extract1496, double* %1156, align 16
  store double %extract1497, double* %1158, align 16
  store double %extract1498, double* %1160, align 16
  store double %extract1499, double* %1162, align 16
  store double %extract1500, double* %1164, align 16
  store double %extract1501, double* %1166, align 16
  store double %extract1502, double* %1168, align 16
  store double %extract1503, double* %1170, align 16
  store double %extract1504, double* %1172, align 16
  store double %extract1505, double* %1174, align 16
  store double %extract1506, double* %1176, align 16
  store double %extract1507, double* %1178, align 16
  store double %extract1508, double* %1180, align 16
  store double %extract1509, double* %1182, align 16
  store double %extract1510, double* %1184, align 16
  %2278 = load double addrspace(3)* %511, align 8
  %temp1511 = insertelement <16 x double> undef, double %2278, i32 0
  %vector1512 = shufflevector <16 x double> %temp1511, <16 x double> undef, <16 x i32> zeroinitializer
  %2279 = fmul <16 x double> %2088, %vector1512
  %2280 = fadd <16 x double> %2232, %2279
  %extract1513 = extractelement <16 x double> %2280, i32 0
  %extract1514 = extractelement <16 x double> %2280, i32 1
  %extract1515 = extractelement <16 x double> %2280, i32 2
  %extract1516 = extractelement <16 x double> %2280, i32 3
  %extract1517 = extractelement <16 x double> %2280, i32 4
  %extract1518 = extractelement <16 x double> %2280, i32 5
  %extract1519 = extractelement <16 x double> %2280, i32 6
  %extract1520 = extractelement <16 x double> %2280, i32 7
  %extract1521 = extractelement <16 x double> %2280, i32 8
  %extract1522 = extractelement <16 x double> %2280, i32 9
  %extract1523 = extractelement <16 x double> %2280, i32 10
  %extract1524 = extractelement <16 x double> %2280, i32 11
  %extract1525 = extractelement <16 x double> %2280, i32 12
  %extract1526 = extractelement <16 x double> %2280, i32 13
  %extract1527 = extractelement <16 x double> %2280, i32 14
  %extract1528 = extractelement <16 x double> %2280, i32 15
  store double %extract1513, double* %1186, align 8
  store double %extract1514, double* %1188, align 8
  store double %extract1515, double* %1190, align 8
  store double %extract1516, double* %1192, align 8
  store double %extract1517, double* %1194, align 8
  store double %extract1518, double* %1196, align 8
  store double %extract1519, double* %1198, align 8
  store double %extract1520, double* %1200, align 8
  store double %extract1521, double* %1202, align 8
  store double %extract1522, double* %1204, align 8
  store double %extract1523, double* %1206, align 8
  store double %extract1524, double* %1208, align 8
  store double %extract1525, double* %1210, align 8
  store double %extract1526, double* %1212, align 8
  store double %extract1527, double* %1214, align 8
  store double %extract1528, double* %1216, align 8
  %check.WI.iter4492 = icmp ult i64 %CurrWI..3, %iterCount
  br i1 %check.WI.iter4492, label %thenBB4489, label %SyncBB4485.preheader

thenBB4489:                                       ; preds = %SyncBB
  %"CurrWI++4493" = add nuw i64 %CurrWI..3, 1
  %"loadedCurrSB+Stride4495" = add nuw i64 %CurrSBIndex..3, 12032
  br label %SyncBB

SyncBB4485.preheader:                             ; preds = %SyncBB, %thenBB
  %currBarrier.0.ph = phi i32 [ %currBarrier.1, %thenBB ], [ 8, %SyncBB ]
  %CurrSBIndex..1.ph = phi i64 [ %"loadedCurrSB+Stride", %thenBB ], [ 0, %SyncBB ]
  %CurrWI..1.ph = phi i64 [ %"CurrWI++", %thenBB ], [ 0, %SyncBB ]
  br label %SyncBB4485

SyncBB4485:                                       ; preds = %thenBB4496, %SyncBB4485.preheader
  %CurrSBIndex..1 = phi i64 [ %"loadedCurrSB+Stride4502", %thenBB4496 ], [ %CurrSBIndex..1.ph, %SyncBB4485.preheader ]
  %CurrWI..1 = phi i64 [ %"CurrWI++4500", %thenBB4496 ], [ %CurrWI..1.ph, %SyncBB4485.preheader ]
  %"&(pSB[currWI].offset)2359" = add nuw i64 %CurrSBIndex..1, 9224
  %"&pSB[currWI].offset2360" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2359"
  %CastToValueType2361 = bitcast i8* %"&pSB[currWI].offset2360" to i32*
  %loadedValue2362 = load i32* %CastToValueType2361, align 4
  %2281 = icmp slt i32 %loadedValue2362, %k
  %"&(pSB[currWI].offset)2350" = add nuw i64 %CurrSBIndex..1, 9216
  %"&pSB[currWI].offset2351" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2350"
  %CastToValueType2352 = bitcast i8* %"&pSB[currWI].offset2351" to i64*
  %loadedValue2353 = load i64* %CastToValueType2352, align 8
  %indvar.next45 = add i64 %loadedValue2353, 1
  %"&(pSB[currWI].offset)2808" = add nuw i64 %CurrSBIndex..1, 9856
  %"&pSB[currWI].offset2809" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2808"
  %CastToValueType2810 = bitcast i8* %"&pSB[currWI].offset2809" to i64*
  store i64 %indvar.next45, i64* %CastToValueType2810, align 8
  br i1 %2281, label %.loopexit, label %bb.nph

bb.nph:                                           ; preds = %SyncBB4485
  %"&(pSB[currWI].offset)2197" = add nuw i64 %CurrSBIndex..1, 7040
  %"&pSB[currWI].offset2198" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2197"
  %CastToValueType2199 = bitcast i8* %"&pSB[currWI].offset2198" to i32*
  %loadedValue2200 = load i32* %CastToValueType2199, align 4
  %tmp28 = add i32 %tmp25, %loadedValue2200
  %temp1529 = insertelement <16 x i32> undef, i32 %tmp28, i32 0
  %vector1530 = shufflevector <16 x i32> %temp1529, <16 x i32> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1577" = add nuw i64 %CurrSBIndex..1, 5952
  %"&pSB[currWI].offset1578" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)1577"
  %CastToValueType1579 = bitcast i8* %"&pSB[currWI].offset1578" to <16 x i32>*
  %loadedValue = load <16 x i32>* %CastToValueType1579, align 64
  %tmp301531 = add <16 x i32> %vector1530, %loadedValue
  %tmp331532 = add <16 x i32> %tmp301531, %vector31
  %tmp341533 = sext <16 x i32> %tmp331532 to <16 x i64>
  %"&(pSB[currWI].offset)2812" = add nuw i64 %CurrSBIndex..1, 9872
  %"&pSB[currWI].offset2813" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2812"
  %CastToValueType2814 = bitcast i8* %"&pSB[currWI].offset2813" to [16 x double]*
  %"&(pSB[currWI].offset)2884" = add nuw i64 %CurrSBIndex..1, 10000
  %"&pSB[currWI].offset2885" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2884"
  %CastToValueType2886 = bitcast i8* %"&pSB[currWI].offset2885" to [16 x double]*
  %"&(pSB[currWI].offset)2956" = add nuw i64 %CurrSBIndex..1, 10128
  %"&pSB[currWI].offset2957" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)2956"
  %CastToValueType2958 = bitcast i8* %"&pSB[currWI].offset2957" to [16 x double]*
  %"&(pSB[currWI].offset)3028" = add nuw i64 %CurrSBIndex..1, 10256
  %"&pSB[currWI].offset3029" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3028"
  %CastToValueType3030 = bitcast i8* %"&pSB[currWI].offset3029" to [16 x double]*
  %"&(pSB[currWI].offset)3100" = add nuw i64 %CurrSBIndex..1, 10384
  %"&pSB[currWI].offset3101" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3100"
  %CastToValueType3102 = bitcast i8* %"&pSB[currWI].offset3101" to [16 x double]*
  %"&(pSB[currWI].offset)3172" = add nuw i64 %CurrSBIndex..1, 10512
  %"&pSB[currWI].offset3173" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3172"
  %CastToValueType3174 = bitcast i8* %"&pSB[currWI].offset3173" to [16 x double]*
  %"&(pSB[currWI].offset)3244" = add nuw i64 %CurrSBIndex..1, 10640
  %"&pSB[currWI].offset3245" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3244"
  %CastToValueType3246 = bitcast i8* %"&pSB[currWI].offset3245" to [16 x double]*
  %"&(pSB[currWI].offset)3316" = add nuw i64 %CurrSBIndex..1, 10768
  %"&pSB[currWI].offset3317" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3316"
  %CastToValueType3318 = bitcast i8* %"&pSB[currWI].offset3317" to [16 x double]*
  %"&(pSB[currWI].offset)3388" = add nuw i64 %CurrSBIndex..1, 10896
  %"&pSB[currWI].offset3389" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3388"
  %CastToValueType3390 = bitcast i8* %"&pSB[currWI].offset3389" to [16 x double]*
  %"&(pSB[currWI].offset)3460" = add nuw i64 %CurrSBIndex..1, 11024
  %"&pSB[currWI].offset3461" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3460"
  %CastToValueType3462 = bitcast i8* %"&pSB[currWI].offset3461" to [16 x double]*
  %"&(pSB[currWI].offset)3532" = add nuw i64 %CurrSBIndex..1, 11152
  %"&pSB[currWI].offset3533" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3532"
  %CastToValueType3534 = bitcast i8* %"&pSB[currWI].offset3533" to [16 x double]*
  %"&(pSB[currWI].offset)3604" = add nuw i64 %CurrSBIndex..1, 11280
  %"&pSB[currWI].offset3605" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3604"
  %CastToValueType3606 = bitcast i8* %"&pSB[currWI].offset3605" to [16 x double]*
  %"&(pSB[currWI].offset)3676" = add nuw i64 %CurrSBIndex..1, 11408
  %"&pSB[currWI].offset3677" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3676"
  %CastToValueType3678 = bitcast i8* %"&pSB[currWI].offset3677" to [16 x double]*
  %"&(pSB[currWI].offset)3748" = add nuw i64 %CurrSBIndex..1, 11536
  %"&pSB[currWI].offset3749" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3748"
  %CastToValueType3750 = bitcast i8* %"&pSB[currWI].offset3749" to [16 x double]*
  %"&(pSB[currWI].offset)3820" = add nuw i64 %CurrSBIndex..1, 11664
  %"&pSB[currWI].offset3821" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3820"
  %CastToValueType3822 = bitcast i8* %"&pSB[currWI].offset3821" to [16 x double]*
  %"&(pSB[currWI].offset)3892" = add nuw i64 %CurrSBIndex..1, 11792
  %"&pSB[currWI].offset3893" = getelementptr inbounds i8* %pSpecialBuf, i64 %"&(pSB[currWI].offset)3892"
  %CastToValueType3894 = bitcast i8* %"&pSB[currWI].offset3893" to [16 x double]*
  br label %2282

; <label>:2282                                    ; preds = %2282, %bb.nph
  %indvar = phi i64 [ 0, %bb.nph ], [ %indvar.next, %2282 ]
  %2283 = getelementptr [16 x double]* %CastToValueType2814, i64 0, i64 %indvar
  %2284 = getelementptr [16 x double]* %CastToValueType2886, i64 0, i64 %indvar
  %2285 = getelementptr [16 x double]* %CastToValueType2958, i64 0, i64 %indvar
  %2286 = getelementptr [16 x double]* %CastToValueType3030, i64 0, i64 %indvar
  %2287 = getelementptr [16 x double]* %CastToValueType3102, i64 0, i64 %indvar
  %2288 = getelementptr [16 x double]* %CastToValueType3174, i64 0, i64 %indvar
  %2289 = getelementptr [16 x double]* %CastToValueType3246, i64 0, i64 %indvar
  %2290 = getelementptr [16 x double]* %CastToValueType3318, i64 0, i64 %indvar
  %2291 = getelementptr [16 x double]* %CastToValueType3390, i64 0, i64 %indvar
  %2292 = getelementptr [16 x double]* %CastToValueType3462, i64 0, i64 %indvar
  %2293 = getelementptr [16 x double]* %CastToValueType3534, i64 0, i64 %indvar
  %2294 = getelementptr [16 x double]* %CastToValueType3606, i64 0, i64 %indvar
  %2295 = getelementptr [16 x double]* %CastToValueType3678, i64 0, i64 %indvar
  %2296 = getelementptr [16 x double]* %CastToValueType3750, i64 0, i64 %indvar
  %2297 = getelementptr [16 x double]* %CastToValueType3822, i64 0, i64 %indvar
  %2298 = getelementptr [16 x double]* %CastToValueType3894, i64 0, i64 %indvar
  %tmp22 = mul i64 %tmp, %indvar
  %temp1534 = insertelement <16 x i64> undef, i64 %tmp22, i32 0
  %vector1535 = shufflevector <16 x i64> %temp1534, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp351536 = add <16 x i64> %tmp341533, %vector1535
  %extract1537 = extractelement <16 x i64> %tmp351536, i32 0
  %2299 = getelementptr double addrspace(1)* %C, i64 %extract1537
  %2300 = load double* %2283, align 8
  %2301 = load double* %2284, align 8
  %2302 = load double* %2285, align 8
  %2303 = load double* %2286, align 8
  %2304 = load double* %2287, align 8
  %2305 = load double* %2288, align 8
  %2306 = load double* %2289, align 8
  %2307 = load double* %2290, align 8
  %2308 = load double* %2291, align 8
  %2309 = load double* %2292, align 8
  %2310 = load double* %2293, align 8
  %2311 = load double* %2294, align 8
  %2312 = load double* %2295, align 8
  %2313 = load double* %2296, align 8
  %2314 = load double* %2297, align 8
  %2315 = load double* %2298, align 8
  %temp.vect1553 = insertelement <16 x double> undef, double %2300, i32 0
  %temp.vect1554 = insertelement <16 x double> %temp.vect1553, double %2301, i32 1
  %temp.vect1555 = insertelement <16 x double> %temp.vect1554, double %2302, i32 2
  %temp.vect1556 = insertelement <16 x double> %temp.vect1555, double %2303, i32 3
  %temp.vect1557 = insertelement <16 x double> %temp.vect1556, double %2304, i32 4
  %temp.vect1558 = insertelement <16 x double> %temp.vect1557, double %2305, i32 5
  %temp.vect1559 = insertelement <16 x double> %temp.vect1558, double %2306, i32 6
  %temp.vect1560 = insertelement <16 x double> %temp.vect1559, double %2307, i32 7
  %temp.vect1561 = insertelement <16 x double> %temp.vect1560, double %2308, i32 8
  %temp.vect1562 = insertelement <16 x double> %temp.vect1561, double %2309, i32 9
  %temp.vect1563 = insertelement <16 x double> %temp.vect1562, double %2310, i32 10
  %temp.vect1564 = insertelement <16 x double> %temp.vect1563, double %2311, i32 11
  %temp.vect1565 = insertelement <16 x double> %temp.vect1564, double %2312, i32 12
  %temp.vect1566 = insertelement <16 x double> %temp.vect1565, double %2313, i32 13
  %temp.vect1567 = insertelement <16 x double> %temp.vect1566, double %2314, i32 14
  %temp.vect1568 = insertelement <16 x double> %temp.vect1567, double %2315, i32 15
  %2316 = fmul <16 x double> %temp.vect1568, %vector1570
  %ptrTypeCast1571 = bitcast double addrspace(1)* %2299 to <16 x double> addrspace(1)*
  %2317 = load <16 x double> addrspace(1)* %ptrTypeCast1571, align 8
  %2318 = fmul <16 x double> %2317, %vector1573
  %2319 = fadd <16 x double> %2316, %2318
  %ptrTypeCast1574 = bitcast double addrspace(1)* %2299 to <16 x double> addrspace(1)*
  store <16 x double> %2319, <16 x double> addrspace(1)* %ptrTypeCast1574, align 8
  %indvar.next = add i64 %indvar, 1
  %exitcond = icmp eq i64 %indvar.next, 16
  br i1 %exitcond, label %._crit_edge, label %2282

._crit_edge:                                      ; preds = %2282
  %check.WI.iter4499 = icmp ult i64 %CurrWI..1, %iterCount
  br i1 %check.WI.iter4499, label %thenBB4496, label %SyncBB4487

thenBB4496:                                       ; preds = %._crit_edge
  %"CurrWI++4500" = add nuw i64 %CurrWI..1, 1
  %"loadedCurrSB+Stride4502" = add nuw i64 %CurrSBIndex..1, 12032
  br label %SyncBB4485

SyncBB4487:                                       ; preds = %._crit_edge
  ret void
}

define void @sgemmNN(i8* %pBuffer) {
entry:
  %0 = bitcast i8* %pBuffer to double addrspace(1)**
  %1 = load double addrspace(1)** %0, align 8
  %2 = getelementptr i8* %pBuffer, i64 8
  %3 = bitcast i8* %2 to i32*
  %4 = load i32* %3, align 4
  %5 = getelementptr i8* %pBuffer, i64 16
  %6 = bitcast i8* %5 to double addrspace(1)**
  %7 = load double addrspace(1)** %6, align 8
  %8 = getelementptr i8* %pBuffer, i64 24
  %9 = bitcast i8* %8 to i32*
  %10 = load i32* %9, align 4
  %11 = getelementptr i8* %pBuffer, i64 32
  %12 = bitcast i8* %11 to double addrspace(1)**
  %13 = load double addrspace(1)** %12, align 8
  %14 = getelementptr i8* %pBuffer, i64 40
  %15 = bitcast i8* %14 to i32*
  %16 = load i32* %15, align 4
  %17 = getelementptr i8* %pBuffer, i64 44
  %18 = bitcast i8* %17 to i32*
  %19 = load i32* %18, align 4
  %20 = getelementptr i8* %pBuffer, i64 48
  %21 = bitcast i8* %20 to double*
  %22 = load double* %21, align 8
  %23 = getelementptr i8* %pBuffer, i64 56
  %24 = bitcast i8* %23 to double*
  %25 = load double* %24, align 8
  %26 = getelementptr i8* %pBuffer, i64 64
  %27 = bitcast i8* %26 to i8 addrspace(3)**
  %28 = load i8 addrspace(3)** %27, align 8
  %29 = getelementptr i8* %pBuffer, i64 80
  %30 = bitcast i8* %29 to i64**
  %31 = load i64** %30, align 8
  %32 = getelementptr i8* %pBuffer, i64 96
  %33 = bitcast i8* %32 to %struct.PaddedDimId**
  %34 = load %struct.PaddedDimId** %33, align 8
  %35 = getelementptr i8* %pBuffer, i64 112
  %36 = bitcast i8* %35 to i64*
  %37 = load i64* %36, align 8
  %38 = getelementptr i8* %pBuffer, i64 120
  %39 = bitcast i8* %38 to i8**
  %40 = load i8** %39, align 8
  %41 = bitcast i8 addrspace(3)* %28 to [16 x [17 x double]] addrspace(3)*
  %42 = bitcast i8 addrspace(3)* %28 to double addrspace(3)*
  %43 = getelementptr i8 addrspace(3)* %28, i64 8
  %44 = bitcast i8 addrspace(3)* %43 to double addrspace(3)*
  %45 = getelementptr i8 addrspace(3)* %28, i64 16
  %46 = bitcast i8 addrspace(3)* %45 to double addrspace(3)*
  %47 = getelementptr i8 addrspace(3)* %28, i64 24
  %48 = bitcast i8 addrspace(3)* %47 to double addrspace(3)*
  %49 = getelementptr i8 addrspace(3)* %28, i64 32
  %50 = bitcast i8 addrspace(3)* %49 to double addrspace(3)*
  %51 = getelementptr i8 addrspace(3)* %28, i64 40
  %52 = bitcast i8 addrspace(3)* %51 to double addrspace(3)*
  %53 = getelementptr i8 addrspace(3)* %28, i64 48
  %54 = bitcast i8 addrspace(3)* %53 to double addrspace(3)*
  %55 = getelementptr i8 addrspace(3)* %28, i64 56
  %56 = bitcast i8 addrspace(3)* %55 to double addrspace(3)*
  %57 = getelementptr i8 addrspace(3)* %28, i64 64
  %58 = bitcast i8 addrspace(3)* %57 to double addrspace(3)*
  %59 = getelementptr i8 addrspace(3)* %28, i64 72
  %60 = bitcast i8 addrspace(3)* %59 to double addrspace(3)*
  %61 = getelementptr i8 addrspace(3)* %28, i64 80
  %62 = bitcast i8 addrspace(3)* %61 to double addrspace(3)*
  %63 = getelementptr i8 addrspace(3)* %28, i64 88
  %64 = bitcast i8 addrspace(3)* %63 to double addrspace(3)*
  %65 = getelementptr i8 addrspace(3)* %28, i64 96
  %66 = bitcast i8 addrspace(3)* %65 to double addrspace(3)*
  %67 = getelementptr i8 addrspace(3)* %28, i64 104
  %68 = bitcast i8 addrspace(3)* %67 to double addrspace(3)*
  %69 = getelementptr i8 addrspace(3)* %28, i64 112
  %70 = bitcast i8 addrspace(3)* %69 to double addrspace(3)*
  %71 = getelementptr i8 addrspace(3)* %28, i64 120
  %72 = bitcast i8 addrspace(3)* %71 to double addrspace(3)*
  %73 = getelementptr i8 addrspace(3)* %28, i64 136
  %74 = bitcast i8 addrspace(3)* %73 to double addrspace(3)*
  %75 = getelementptr i8 addrspace(3)* %28, i64 144
  %76 = bitcast i8 addrspace(3)* %75 to double addrspace(3)*
  %77 = getelementptr i8 addrspace(3)* %28, i64 152
  %78 = bitcast i8 addrspace(3)* %77 to double addrspace(3)*
  %79 = getelementptr i8 addrspace(3)* %28, i64 160
  %80 = bitcast i8 addrspace(3)* %79 to double addrspace(3)*
  %81 = getelementptr i8 addrspace(3)* %28, i64 168
  %82 = bitcast i8 addrspace(3)* %81 to double addrspace(3)*
  %83 = getelementptr i8 addrspace(3)* %28, i64 176
  %84 = bitcast i8 addrspace(3)* %83 to double addrspace(3)*
  %85 = getelementptr i8 addrspace(3)* %28, i64 184
  %86 = bitcast i8 addrspace(3)* %85 to double addrspace(3)*
  %87 = getelementptr i8 addrspace(3)* %28, i64 192
  %88 = bitcast i8 addrspace(3)* %87 to double addrspace(3)*
  %89 = getelementptr i8 addrspace(3)* %28, i64 200
  %90 = bitcast i8 addrspace(3)* %89 to double addrspace(3)*
  %91 = getelementptr i8 addrspace(3)* %28, i64 208
  %92 = bitcast i8 addrspace(3)* %91 to double addrspace(3)*
  %93 = getelementptr i8 addrspace(3)* %28, i64 216
  %94 = bitcast i8 addrspace(3)* %93 to double addrspace(3)*
  %95 = getelementptr i8 addrspace(3)* %28, i64 224
  %96 = bitcast i8 addrspace(3)* %95 to double addrspace(3)*
  %97 = getelementptr i8 addrspace(3)* %28, i64 232
  %98 = bitcast i8 addrspace(3)* %97 to double addrspace(3)*
  %99 = getelementptr i8 addrspace(3)* %28, i64 240
  %100 = bitcast i8 addrspace(3)* %99 to double addrspace(3)*
  %101 = getelementptr i8 addrspace(3)* %28, i64 248
  %102 = bitcast i8 addrspace(3)* %101 to double addrspace(3)*
  %103 = getelementptr i8 addrspace(3)* %28, i64 256
  %104 = bitcast i8 addrspace(3)* %103 to double addrspace(3)*
  %105 = getelementptr i8 addrspace(3)* %28, i64 272
  %106 = bitcast i8 addrspace(3)* %105 to double addrspace(3)*
  %107 = getelementptr i8 addrspace(3)* %28, i64 280
  %108 = bitcast i8 addrspace(3)* %107 to double addrspace(3)*
  %109 = getelementptr i8 addrspace(3)* %28, i64 288
  %110 = bitcast i8 addrspace(3)* %109 to double addrspace(3)*
  %111 = getelementptr i8 addrspace(3)* %28, i64 296
  %112 = bitcast i8 addrspace(3)* %111 to double addrspace(3)*
  %113 = getelementptr i8 addrspace(3)* %28, i64 304
  %114 = bitcast i8 addrspace(3)* %113 to double addrspace(3)*
  %115 = getelementptr i8 addrspace(3)* %28, i64 312
  %116 = bitcast i8 addrspace(3)* %115 to double addrspace(3)*
  %117 = getelementptr i8 addrspace(3)* %28, i64 320
  %118 = bitcast i8 addrspace(3)* %117 to double addrspace(3)*
  %119 = getelementptr i8 addrspace(3)* %28, i64 328
  %120 = bitcast i8 addrspace(3)* %119 to double addrspace(3)*
  %121 = getelementptr i8 addrspace(3)* %28, i64 336
  %122 = bitcast i8 addrspace(3)* %121 to double addrspace(3)*
  %123 = getelementptr i8 addrspace(3)* %28, i64 344
  %124 = bitcast i8 addrspace(3)* %123 to double addrspace(3)*
  %125 = getelementptr i8 addrspace(3)* %28, i64 352
  %126 = bitcast i8 addrspace(3)* %125 to double addrspace(3)*
  %127 = getelementptr i8 addrspace(3)* %28, i64 360
  %128 = bitcast i8 addrspace(3)* %127 to double addrspace(3)*
  %129 = getelementptr i8 addrspace(3)* %28, i64 368
  %130 = bitcast i8 addrspace(3)* %129 to double addrspace(3)*
  %131 = getelementptr i8 addrspace(3)* %28, i64 376
  %132 = bitcast i8 addrspace(3)* %131 to double addrspace(3)*
  %133 = getelementptr i8 addrspace(3)* %28, i64 384
  %134 = bitcast i8 addrspace(3)* %133 to double addrspace(3)*
  %135 = getelementptr i8 addrspace(3)* %28, i64 392
  %136 = bitcast i8 addrspace(3)* %135 to double addrspace(3)*
  %137 = getelementptr i8 addrspace(3)* %28, i64 408
  %138 = bitcast i8 addrspace(3)* %137 to double addrspace(3)*
  %139 = getelementptr i8 addrspace(3)* %28, i64 416
  %140 = bitcast i8 addrspace(3)* %139 to double addrspace(3)*
  %141 = getelementptr i8 addrspace(3)* %28, i64 424
  %142 = bitcast i8 addrspace(3)* %141 to double addrspace(3)*
  %143 = getelementptr i8 addrspace(3)* %28, i64 432
  %144 = bitcast i8 addrspace(3)* %143 to double addrspace(3)*
  %145 = getelementptr i8 addrspace(3)* %28, i64 440
  %146 = bitcast i8 addrspace(3)* %145 to double addrspace(3)*
  %147 = getelementptr i8 addrspace(3)* %28, i64 448
  %148 = bitcast i8 addrspace(3)* %147 to double addrspace(3)*
  %149 = getelementptr i8 addrspace(3)* %28, i64 456
  %150 = bitcast i8 addrspace(3)* %149 to double addrspace(3)*
  %151 = getelementptr i8 addrspace(3)* %28, i64 464
  %152 = bitcast i8 addrspace(3)* %151 to double addrspace(3)*
  %153 = getelementptr i8 addrspace(3)* %28, i64 472
  %154 = bitcast i8 addrspace(3)* %153 to double addrspace(3)*
  %155 = getelementptr i8 addrspace(3)* %28, i64 480
  %156 = bitcast i8 addrspace(3)* %155 to double addrspace(3)*
  %157 = getelementptr i8 addrspace(3)* %28, i64 488
  %158 = bitcast i8 addrspace(3)* %157 to double addrspace(3)*
  %159 = getelementptr i8 addrspace(3)* %28, i64 496
  %160 = bitcast i8 addrspace(3)* %159 to double addrspace(3)*
  %161 = getelementptr i8 addrspace(3)* %28, i64 504
  %162 = bitcast i8 addrspace(3)* %161 to double addrspace(3)*
  %163 = getelementptr i8 addrspace(3)* %28, i64 512
  %164 = bitcast i8 addrspace(3)* %163 to double addrspace(3)*
  %165 = getelementptr i8 addrspace(3)* %28, i64 520
  %166 = bitcast i8 addrspace(3)* %165 to double addrspace(3)*
  %167 = getelementptr i8 addrspace(3)* %28, i64 528
  %168 = bitcast i8 addrspace(3)* %167 to double addrspace(3)*
  %169 = getelementptr i8 addrspace(3)* %28, i64 544
  %170 = bitcast i8 addrspace(3)* %169 to double addrspace(3)*
  %171 = getelementptr i8 addrspace(3)* %28, i64 552
  %172 = bitcast i8 addrspace(3)* %171 to double addrspace(3)*
  %173 = getelementptr i8 addrspace(3)* %28, i64 560
  %174 = bitcast i8 addrspace(3)* %173 to double addrspace(3)*
  %175 = getelementptr i8 addrspace(3)* %28, i64 568
  %176 = bitcast i8 addrspace(3)* %175 to double addrspace(3)*
  %177 = getelementptr i8 addrspace(3)* %28, i64 576
  %178 = bitcast i8 addrspace(3)* %177 to double addrspace(3)*
  %179 = getelementptr i8 addrspace(3)* %28, i64 584
  %180 = bitcast i8 addrspace(3)* %179 to double addrspace(3)*
  %181 = getelementptr i8 addrspace(3)* %28, i64 592
  %182 = bitcast i8 addrspace(3)* %181 to double addrspace(3)*
  %183 = getelementptr i8 addrspace(3)* %28, i64 600
  %184 = bitcast i8 addrspace(3)* %183 to double addrspace(3)*
  %185 = getelementptr i8 addrspace(3)* %28, i64 608
  %186 = bitcast i8 addrspace(3)* %185 to double addrspace(3)*
  %187 = getelementptr i8 addrspace(3)* %28, i64 616
  %188 = bitcast i8 addrspace(3)* %187 to double addrspace(3)*
  %189 = getelementptr i8 addrspace(3)* %28, i64 624
  %190 = bitcast i8 addrspace(3)* %189 to double addrspace(3)*
  %191 = getelementptr i8 addrspace(3)* %28, i64 632
  %192 = bitcast i8 addrspace(3)* %191 to double addrspace(3)*
  %193 = getelementptr i8 addrspace(3)* %28, i64 640
  %194 = bitcast i8 addrspace(3)* %193 to double addrspace(3)*
  %195 = getelementptr i8 addrspace(3)* %28, i64 648
  %196 = bitcast i8 addrspace(3)* %195 to double addrspace(3)*
  %197 = getelementptr i8 addrspace(3)* %28, i64 656
  %198 = bitcast i8 addrspace(3)* %197 to double addrspace(3)*
  %199 = getelementptr i8 addrspace(3)* %28, i64 664
  %200 = bitcast i8 addrspace(3)* %199 to double addrspace(3)*
  %201 = getelementptr i8 addrspace(3)* %28, i64 680
  %202 = bitcast i8 addrspace(3)* %201 to double addrspace(3)*
  %203 = getelementptr i8 addrspace(3)* %28, i64 688
  %204 = bitcast i8 addrspace(3)* %203 to double addrspace(3)*
  %205 = getelementptr i8 addrspace(3)* %28, i64 696
  %206 = bitcast i8 addrspace(3)* %205 to double addrspace(3)*
  %207 = getelementptr i8 addrspace(3)* %28, i64 704
  %208 = bitcast i8 addrspace(3)* %207 to double addrspace(3)*
  %209 = getelementptr i8 addrspace(3)* %28, i64 712
  %210 = bitcast i8 addrspace(3)* %209 to double addrspace(3)*
  %211 = getelementptr i8 addrspace(3)* %28, i64 720
  %212 = bitcast i8 addrspace(3)* %211 to double addrspace(3)*
  %213 = getelementptr i8 addrspace(3)* %28, i64 728
  %214 = bitcast i8 addrspace(3)* %213 to double addrspace(3)*
  %215 = getelementptr i8 addrspace(3)* %28, i64 736
  %216 = bitcast i8 addrspace(3)* %215 to double addrspace(3)*
  %217 = getelementptr i8 addrspace(3)* %28, i64 744
  %218 = bitcast i8 addrspace(3)* %217 to double addrspace(3)*
  %219 = getelementptr i8 addrspace(3)* %28, i64 752
  %220 = bitcast i8 addrspace(3)* %219 to double addrspace(3)*
  %221 = getelementptr i8 addrspace(3)* %28, i64 760
  %222 = bitcast i8 addrspace(3)* %221 to double addrspace(3)*
  %223 = getelementptr i8 addrspace(3)* %28, i64 768
  %224 = bitcast i8 addrspace(3)* %223 to double addrspace(3)*
  %225 = getelementptr i8 addrspace(3)* %28, i64 776
  %226 = bitcast i8 addrspace(3)* %225 to double addrspace(3)*
  %227 = getelementptr i8 addrspace(3)* %28, i64 784
  %228 = bitcast i8 addrspace(3)* %227 to double addrspace(3)*
  %229 = getelementptr i8 addrspace(3)* %28, i64 792
  %230 = bitcast i8 addrspace(3)* %229 to double addrspace(3)*
  %231 = getelementptr i8 addrspace(3)* %28, i64 800
  %232 = bitcast i8 addrspace(3)* %231 to double addrspace(3)*
  %233 = getelementptr i8 addrspace(3)* %28, i64 816
  %234 = bitcast i8 addrspace(3)* %233 to double addrspace(3)*
  %235 = getelementptr i8 addrspace(3)* %28, i64 824
  %236 = bitcast i8 addrspace(3)* %235 to double addrspace(3)*
  %237 = getelementptr i8 addrspace(3)* %28, i64 832
  %238 = bitcast i8 addrspace(3)* %237 to double addrspace(3)*
  %239 = getelementptr i8 addrspace(3)* %28, i64 840
  %240 = bitcast i8 addrspace(3)* %239 to double addrspace(3)*
  %241 = getelementptr i8 addrspace(3)* %28, i64 848
  %242 = bitcast i8 addrspace(3)* %241 to double addrspace(3)*
  %243 = getelementptr i8 addrspace(3)* %28, i64 856
  %244 = bitcast i8 addrspace(3)* %243 to double addrspace(3)*
  %245 = getelementptr i8 addrspace(3)* %28, i64 864
  %246 = bitcast i8 addrspace(3)* %245 to double addrspace(3)*
  %247 = getelementptr i8 addrspace(3)* %28, i64 872
  %248 = bitcast i8 addrspace(3)* %247 to double addrspace(3)*
  %249 = getelementptr i8 addrspace(3)* %28, i64 880
  %250 = bitcast i8 addrspace(3)* %249 to double addrspace(3)*
  %251 = getelementptr i8 addrspace(3)* %28, i64 888
  %252 = bitcast i8 addrspace(3)* %251 to double addrspace(3)*
  %253 = getelementptr i8 addrspace(3)* %28, i64 896
  %254 = bitcast i8 addrspace(3)* %253 to double addrspace(3)*
  %255 = getelementptr i8 addrspace(3)* %28, i64 904
  %256 = bitcast i8 addrspace(3)* %255 to double addrspace(3)*
  %257 = getelementptr i8 addrspace(3)* %28, i64 912
  %258 = bitcast i8 addrspace(3)* %257 to double addrspace(3)*
  %259 = getelementptr i8 addrspace(3)* %28, i64 920
  %260 = bitcast i8 addrspace(3)* %259 to double addrspace(3)*
  %261 = getelementptr i8 addrspace(3)* %28, i64 928
  %262 = bitcast i8 addrspace(3)* %261 to double addrspace(3)*
  %263 = getelementptr i8 addrspace(3)* %28, i64 936
  %264 = bitcast i8 addrspace(3)* %263 to double addrspace(3)*
  %265 = getelementptr i8 addrspace(3)* %28, i64 952
  %266 = bitcast i8 addrspace(3)* %265 to double addrspace(3)*
  %267 = getelementptr i8 addrspace(3)* %28, i64 960
  %268 = bitcast i8 addrspace(3)* %267 to double addrspace(3)*
  %269 = getelementptr i8 addrspace(3)* %28, i64 968
  %270 = bitcast i8 addrspace(3)* %269 to double addrspace(3)*
  %271 = getelementptr i8 addrspace(3)* %28, i64 976
  %272 = bitcast i8 addrspace(3)* %271 to double addrspace(3)*
  %273 = getelementptr i8 addrspace(3)* %28, i64 984
  %274 = bitcast i8 addrspace(3)* %273 to double addrspace(3)*
  %275 = getelementptr i8 addrspace(3)* %28, i64 992
  %276 = bitcast i8 addrspace(3)* %275 to double addrspace(3)*
  %277 = getelementptr i8 addrspace(3)* %28, i64 1000
  %278 = bitcast i8 addrspace(3)* %277 to double addrspace(3)*
  %279 = getelementptr i8 addrspace(3)* %28, i64 1008
  %280 = bitcast i8 addrspace(3)* %279 to double addrspace(3)*
  %281 = getelementptr i8 addrspace(3)* %28, i64 1016
  %282 = bitcast i8 addrspace(3)* %281 to double addrspace(3)*
  %283 = getelementptr i8 addrspace(3)* %28, i64 1024
  %284 = bitcast i8 addrspace(3)* %283 to double addrspace(3)*
  %285 = getelementptr i8 addrspace(3)* %28, i64 1032
  %286 = bitcast i8 addrspace(3)* %285 to double addrspace(3)*
  %287 = getelementptr i8 addrspace(3)* %28, i64 1040
  %288 = bitcast i8 addrspace(3)* %287 to double addrspace(3)*
  %289 = getelementptr i8 addrspace(3)* %28, i64 1048
  %290 = bitcast i8 addrspace(3)* %289 to double addrspace(3)*
  %291 = getelementptr i8 addrspace(3)* %28, i64 1056
  %292 = bitcast i8 addrspace(3)* %291 to double addrspace(3)*
  %293 = getelementptr i8 addrspace(3)* %28, i64 1064
  %294 = bitcast i8 addrspace(3)* %293 to double addrspace(3)*
  %295 = getelementptr i8 addrspace(3)* %28, i64 1072
  %296 = bitcast i8 addrspace(3)* %295 to double addrspace(3)*
  %297 = getelementptr i8 addrspace(3)* %28, i64 1088
  %298 = bitcast i8 addrspace(3)* %297 to double addrspace(3)*
  %299 = getelementptr i8 addrspace(3)* %28, i64 1096
  %300 = bitcast i8 addrspace(3)* %299 to double addrspace(3)*
  %301 = getelementptr i8 addrspace(3)* %28, i64 1104
  %302 = bitcast i8 addrspace(3)* %301 to double addrspace(3)*
  %303 = getelementptr i8 addrspace(3)* %28, i64 1112
  %304 = bitcast i8 addrspace(3)* %303 to double addrspace(3)*
  %305 = getelementptr i8 addrspace(3)* %28, i64 1120
  %306 = bitcast i8 addrspace(3)* %305 to double addrspace(3)*
  %307 = getelementptr i8 addrspace(3)* %28, i64 1128
  %308 = bitcast i8 addrspace(3)* %307 to double addrspace(3)*
  %309 = getelementptr i8 addrspace(3)* %28, i64 1136
  %310 = bitcast i8 addrspace(3)* %309 to double addrspace(3)*
  %311 = getelementptr i8 addrspace(3)* %28, i64 1144
  %312 = bitcast i8 addrspace(3)* %311 to double addrspace(3)*
  %313 = getelementptr i8 addrspace(3)* %28, i64 1152
  %314 = bitcast i8 addrspace(3)* %313 to double addrspace(3)*
  %315 = getelementptr i8 addrspace(3)* %28, i64 1160
  %316 = bitcast i8 addrspace(3)* %315 to double addrspace(3)*
  %317 = getelementptr i8 addrspace(3)* %28, i64 1168
  %318 = bitcast i8 addrspace(3)* %317 to double addrspace(3)*
  %319 = getelementptr i8 addrspace(3)* %28, i64 1176
  %320 = bitcast i8 addrspace(3)* %319 to double addrspace(3)*
  %321 = getelementptr i8 addrspace(3)* %28, i64 1184
  %322 = bitcast i8 addrspace(3)* %321 to double addrspace(3)*
  %323 = getelementptr i8 addrspace(3)* %28, i64 1192
  %324 = bitcast i8 addrspace(3)* %323 to double addrspace(3)*
  %325 = getelementptr i8 addrspace(3)* %28, i64 1200
  %326 = bitcast i8 addrspace(3)* %325 to double addrspace(3)*
  %327 = getelementptr i8 addrspace(3)* %28, i64 1208
  %328 = bitcast i8 addrspace(3)* %327 to double addrspace(3)*
  %329 = getelementptr i8 addrspace(3)* %28, i64 1224
  %330 = bitcast i8 addrspace(3)* %329 to double addrspace(3)*
  %331 = getelementptr i8 addrspace(3)* %28, i64 1232
  %332 = bitcast i8 addrspace(3)* %331 to double addrspace(3)*
  %333 = getelementptr i8 addrspace(3)* %28, i64 1240
  %334 = bitcast i8 addrspace(3)* %333 to double addrspace(3)*
  %335 = getelementptr i8 addrspace(3)* %28, i64 1248
  %336 = bitcast i8 addrspace(3)* %335 to double addrspace(3)*
  %337 = getelementptr i8 addrspace(3)* %28, i64 1256
  %338 = bitcast i8 addrspace(3)* %337 to double addrspace(3)*
  %339 = getelementptr i8 addrspace(3)* %28, i64 1264
  %340 = bitcast i8 addrspace(3)* %339 to double addrspace(3)*
  %341 = getelementptr i8 addrspace(3)* %28, i64 1272
  %342 = bitcast i8 addrspace(3)* %341 to double addrspace(3)*
  %343 = getelementptr i8 addrspace(3)* %28, i64 1280
  %344 = bitcast i8 addrspace(3)* %343 to double addrspace(3)*
  %345 = getelementptr i8 addrspace(3)* %28, i64 1288
  %346 = bitcast i8 addrspace(3)* %345 to double addrspace(3)*
  %347 = getelementptr i8 addrspace(3)* %28, i64 1296
  %348 = bitcast i8 addrspace(3)* %347 to double addrspace(3)*
  %349 = getelementptr i8 addrspace(3)* %28, i64 1304
  %350 = bitcast i8 addrspace(3)* %349 to double addrspace(3)*
  %351 = getelementptr i8 addrspace(3)* %28, i64 1312
  %352 = bitcast i8 addrspace(3)* %351 to double addrspace(3)*
  %353 = getelementptr i8 addrspace(3)* %28, i64 1320
  %354 = bitcast i8 addrspace(3)* %353 to double addrspace(3)*
  %355 = getelementptr i8 addrspace(3)* %28, i64 1328
  %356 = bitcast i8 addrspace(3)* %355 to double addrspace(3)*
  %357 = getelementptr i8 addrspace(3)* %28, i64 1336
  %358 = bitcast i8 addrspace(3)* %357 to double addrspace(3)*
  %359 = getelementptr i8 addrspace(3)* %28, i64 1344
  %360 = bitcast i8 addrspace(3)* %359 to double addrspace(3)*
  %361 = getelementptr i8 addrspace(3)* %28, i64 1360
  %362 = bitcast i8 addrspace(3)* %361 to double addrspace(3)*
  %363 = getelementptr i8 addrspace(3)* %28, i64 1368
  %364 = bitcast i8 addrspace(3)* %363 to double addrspace(3)*
  %365 = getelementptr i8 addrspace(3)* %28, i64 1376
  %366 = bitcast i8 addrspace(3)* %365 to double addrspace(3)*
  %367 = getelementptr i8 addrspace(3)* %28, i64 1384
  %368 = bitcast i8 addrspace(3)* %367 to double addrspace(3)*
  %369 = getelementptr i8 addrspace(3)* %28, i64 1392
  %370 = bitcast i8 addrspace(3)* %369 to double addrspace(3)*
  %371 = getelementptr i8 addrspace(3)* %28, i64 1400
  %372 = bitcast i8 addrspace(3)* %371 to double addrspace(3)*
  %373 = getelementptr i8 addrspace(3)* %28, i64 1408
  %374 = bitcast i8 addrspace(3)* %373 to double addrspace(3)*
  %375 = getelementptr i8 addrspace(3)* %28, i64 1416
  %376 = bitcast i8 addrspace(3)* %375 to double addrspace(3)*
  %377 = getelementptr i8 addrspace(3)* %28, i64 1424
  %378 = bitcast i8 addrspace(3)* %377 to double addrspace(3)*
  %379 = getelementptr i8 addrspace(3)* %28, i64 1432
  %380 = bitcast i8 addrspace(3)* %379 to double addrspace(3)*
  %381 = getelementptr i8 addrspace(3)* %28, i64 1440
  %382 = bitcast i8 addrspace(3)* %381 to double addrspace(3)*
  %383 = getelementptr i8 addrspace(3)* %28, i64 1448
  %384 = bitcast i8 addrspace(3)* %383 to double addrspace(3)*
  %385 = getelementptr i8 addrspace(3)* %28, i64 1456
  %386 = bitcast i8 addrspace(3)* %385 to double addrspace(3)*
  %387 = getelementptr i8 addrspace(3)* %28, i64 1464
  %388 = bitcast i8 addrspace(3)* %387 to double addrspace(3)*
  %389 = getelementptr i8 addrspace(3)* %28, i64 1472
  %390 = bitcast i8 addrspace(3)* %389 to double addrspace(3)*
  %391 = getelementptr i8 addrspace(3)* %28, i64 1480
  %392 = bitcast i8 addrspace(3)* %391 to double addrspace(3)*
  %393 = getelementptr i8 addrspace(3)* %28, i64 1496
  %394 = bitcast i8 addrspace(3)* %393 to double addrspace(3)*
  %395 = getelementptr i8 addrspace(3)* %28, i64 1504
  %396 = bitcast i8 addrspace(3)* %395 to double addrspace(3)*
  %397 = getelementptr i8 addrspace(3)* %28, i64 1512
  %398 = bitcast i8 addrspace(3)* %397 to double addrspace(3)*
  %399 = getelementptr i8 addrspace(3)* %28, i64 1520
  %400 = bitcast i8 addrspace(3)* %399 to double addrspace(3)*
  %401 = getelementptr i8 addrspace(3)* %28, i64 1528
  %402 = bitcast i8 addrspace(3)* %401 to double addrspace(3)*
  %403 = getelementptr i8 addrspace(3)* %28, i64 1536
  %404 = bitcast i8 addrspace(3)* %403 to double addrspace(3)*
  %405 = getelementptr i8 addrspace(3)* %28, i64 1544
  %406 = bitcast i8 addrspace(3)* %405 to double addrspace(3)*
  %407 = getelementptr i8 addrspace(3)* %28, i64 1552
  %408 = bitcast i8 addrspace(3)* %407 to double addrspace(3)*
  %409 = getelementptr i8 addrspace(3)* %28, i64 1560
  %410 = bitcast i8 addrspace(3)* %409 to double addrspace(3)*
  %411 = getelementptr i8 addrspace(3)* %28, i64 1568
  %412 = bitcast i8 addrspace(3)* %411 to double addrspace(3)*
  %413 = getelementptr i8 addrspace(3)* %28, i64 1576
  %414 = bitcast i8 addrspace(3)* %413 to double addrspace(3)*
  %415 = getelementptr i8 addrspace(3)* %28, i64 1584
  %416 = bitcast i8 addrspace(3)* %415 to double addrspace(3)*
  %417 = getelementptr i8 addrspace(3)* %28, i64 1592
  %418 = bitcast i8 addrspace(3)* %417 to double addrspace(3)*
  %419 = getelementptr i8 addrspace(3)* %28, i64 1600
  %420 = bitcast i8 addrspace(3)* %419 to double addrspace(3)*
  %421 = getelementptr i8 addrspace(3)* %28, i64 1608
  %422 = bitcast i8 addrspace(3)* %421 to double addrspace(3)*
  %423 = getelementptr i8 addrspace(3)* %28, i64 1616
  %424 = bitcast i8 addrspace(3)* %423 to double addrspace(3)*
  %425 = getelementptr i8 addrspace(3)* %28, i64 1632
  %426 = bitcast i8 addrspace(3)* %425 to double addrspace(3)*
  %427 = getelementptr i8 addrspace(3)* %28, i64 1640
  %428 = bitcast i8 addrspace(3)* %427 to double addrspace(3)*
  %429 = getelementptr i8 addrspace(3)* %28, i64 1648
  %430 = bitcast i8 addrspace(3)* %429 to double addrspace(3)*
  %431 = getelementptr i8 addrspace(3)* %28, i64 1656
  %432 = bitcast i8 addrspace(3)* %431 to double addrspace(3)*
  %433 = getelementptr i8 addrspace(3)* %28, i64 1664
  %434 = bitcast i8 addrspace(3)* %433 to double addrspace(3)*
  %435 = getelementptr i8 addrspace(3)* %28, i64 1672
  %436 = bitcast i8 addrspace(3)* %435 to double addrspace(3)*
  %437 = getelementptr i8 addrspace(3)* %28, i64 1680
  %438 = bitcast i8 addrspace(3)* %437 to double addrspace(3)*
  %439 = getelementptr i8 addrspace(3)* %28, i64 1688
  %440 = bitcast i8 addrspace(3)* %439 to double addrspace(3)*
  %441 = getelementptr i8 addrspace(3)* %28, i64 1696
  %442 = bitcast i8 addrspace(3)* %441 to double addrspace(3)*
  %443 = getelementptr i8 addrspace(3)* %28, i64 1704
  %444 = bitcast i8 addrspace(3)* %443 to double addrspace(3)*
  %445 = getelementptr i8 addrspace(3)* %28, i64 1712
  %446 = bitcast i8 addrspace(3)* %445 to double addrspace(3)*
  %447 = getelementptr i8 addrspace(3)* %28, i64 1720
  %448 = bitcast i8 addrspace(3)* %447 to double addrspace(3)*
  %449 = getelementptr i8 addrspace(3)* %28, i64 1728
  %450 = bitcast i8 addrspace(3)* %449 to double addrspace(3)*
  %451 = getelementptr i8 addrspace(3)* %28, i64 1736
  %452 = bitcast i8 addrspace(3)* %451 to double addrspace(3)*
  %453 = getelementptr i8 addrspace(3)* %28, i64 1744
  %454 = bitcast i8 addrspace(3)* %453 to double addrspace(3)*
  %455 = getelementptr i8 addrspace(3)* %28, i64 1752
  %456 = bitcast i8 addrspace(3)* %455 to double addrspace(3)*
  %457 = getelementptr i8 addrspace(3)* %28, i64 1768
  %458 = bitcast i8 addrspace(3)* %457 to double addrspace(3)*
  %459 = getelementptr i8 addrspace(3)* %28, i64 1776
  %460 = bitcast i8 addrspace(3)* %459 to double addrspace(3)*
  %461 = getelementptr i8 addrspace(3)* %28, i64 1784
  %462 = bitcast i8 addrspace(3)* %461 to double addrspace(3)*
  %463 = getelementptr i8 addrspace(3)* %28, i64 1792
  %464 = bitcast i8 addrspace(3)* %463 to double addrspace(3)*
  %465 = getelementptr i8 addrspace(3)* %28, i64 1800
  %466 = bitcast i8 addrspace(3)* %465 to double addrspace(3)*
  %467 = getelementptr i8 addrspace(3)* %28, i64 1808
  %468 = bitcast i8 addrspace(3)* %467 to double addrspace(3)*
  %469 = getelementptr i8 addrspace(3)* %28, i64 1816
  %470 = bitcast i8 addrspace(3)* %469 to double addrspace(3)*
  %471 = getelementptr i8 addrspace(3)* %28, i64 1824
  %472 = bitcast i8 addrspace(3)* %471 to double addrspace(3)*
  %473 = getelementptr i8 addrspace(3)* %28, i64 1832
  %474 = bitcast i8 addrspace(3)* %473 to double addrspace(3)*
  %475 = getelementptr i8 addrspace(3)* %28, i64 1840
  %476 = bitcast i8 addrspace(3)* %475 to double addrspace(3)*
  %477 = getelementptr i8 addrspace(3)* %28, i64 1848
  %478 = bitcast i8 addrspace(3)* %477 to double addrspace(3)*
  %479 = getelementptr i8 addrspace(3)* %28, i64 1856
  %480 = bitcast i8 addrspace(3)* %479 to double addrspace(3)*
  %481 = getelementptr i8 addrspace(3)* %28, i64 1864
  %482 = bitcast i8 addrspace(3)* %481 to double addrspace(3)*
  %483 = getelementptr i8 addrspace(3)* %28, i64 1872
  %484 = bitcast i8 addrspace(3)* %483 to double addrspace(3)*
  %485 = getelementptr i8 addrspace(3)* %28, i64 1880
  %486 = bitcast i8 addrspace(3)* %485 to double addrspace(3)*
  %487 = getelementptr i8 addrspace(3)* %28, i64 1888
  %488 = bitcast i8 addrspace(3)* %487 to double addrspace(3)*
  %489 = getelementptr i8 addrspace(3)* %28, i64 1904
  %490 = bitcast i8 addrspace(3)* %489 to double addrspace(3)*
  %491 = getelementptr i8 addrspace(3)* %28, i64 1912
  %492 = bitcast i8 addrspace(3)* %491 to double addrspace(3)*
  %493 = getelementptr i8 addrspace(3)* %28, i64 1920
  %494 = bitcast i8 addrspace(3)* %493 to double addrspace(3)*
  %495 = getelementptr i8 addrspace(3)* %28, i64 1928
  %496 = bitcast i8 addrspace(3)* %495 to double addrspace(3)*
  %497 = getelementptr i8 addrspace(3)* %28, i64 1936
  %498 = bitcast i8 addrspace(3)* %497 to double addrspace(3)*
  %499 = getelementptr i8 addrspace(3)* %28, i64 1944
  %500 = bitcast i8 addrspace(3)* %499 to double addrspace(3)*
  %501 = getelementptr i8 addrspace(3)* %28, i64 1952
  %502 = bitcast i8 addrspace(3)* %501 to double addrspace(3)*
  %503 = getelementptr i8 addrspace(3)* %28, i64 1960
  %504 = bitcast i8 addrspace(3)* %503 to double addrspace(3)*
  %505 = getelementptr i8 addrspace(3)* %28, i64 1968
  %506 = bitcast i8 addrspace(3)* %505 to double addrspace(3)*
  %507 = getelementptr i8 addrspace(3)* %28, i64 1976
  %508 = bitcast i8 addrspace(3)* %507 to double addrspace(3)*
  %509 = getelementptr i8 addrspace(3)* %28, i64 1984
  %510 = bitcast i8 addrspace(3)* %509 to double addrspace(3)*
  %511 = getelementptr i8 addrspace(3)* %28, i64 1992
  %512 = bitcast i8 addrspace(3)* %511 to double addrspace(3)*
  %513 = getelementptr i8 addrspace(3)* %28, i64 2000
  %514 = bitcast i8 addrspace(3)* %513 to double addrspace(3)*
  %515 = getelementptr i8 addrspace(3)* %28, i64 2008
  %516 = bitcast i8 addrspace(3)* %515 to double addrspace(3)*
  %517 = getelementptr i8 addrspace(3)* %28, i64 2016
  %518 = bitcast i8 addrspace(3)* %517 to double addrspace(3)*
  %519 = getelementptr i8 addrspace(3)* %28, i64 2024
  %520 = bitcast i8 addrspace(3)* %519 to double addrspace(3)*
  %521 = getelementptr i8 addrspace(3)* %28, i64 2040
  %522 = bitcast i8 addrspace(3)* %521 to double addrspace(3)*
  %523 = getelementptr i8 addrspace(3)* %28, i64 2048
  %524 = bitcast i8 addrspace(3)* %523 to double addrspace(3)*
  %525 = getelementptr i8 addrspace(3)* %28, i64 2056
  %526 = bitcast i8 addrspace(3)* %525 to double addrspace(3)*
  %527 = getelementptr i8 addrspace(3)* %28, i64 2064
  %528 = bitcast i8 addrspace(3)* %527 to double addrspace(3)*
  %529 = getelementptr i8 addrspace(3)* %28, i64 2072
  %530 = bitcast i8 addrspace(3)* %529 to double addrspace(3)*
  %531 = getelementptr i8 addrspace(3)* %28, i64 2080
  %532 = bitcast i8 addrspace(3)* %531 to double addrspace(3)*
  %533 = getelementptr i8 addrspace(3)* %28, i64 2088
  %534 = bitcast i8 addrspace(3)* %533 to double addrspace(3)*
  %535 = getelementptr i8 addrspace(3)* %28, i64 2096
  %536 = bitcast i8 addrspace(3)* %535 to double addrspace(3)*
  %537 = getelementptr i8 addrspace(3)* %28, i64 2104
  %538 = bitcast i8 addrspace(3)* %537 to double addrspace(3)*
  %539 = getelementptr i8 addrspace(3)* %28, i64 2112
  %540 = bitcast i8 addrspace(3)* %539 to double addrspace(3)*
  %541 = getelementptr i8 addrspace(3)* %28, i64 2120
  %542 = bitcast i8 addrspace(3)* %541 to double addrspace(3)*
  %543 = getelementptr i8 addrspace(3)* %28, i64 2128
  %544 = bitcast i8 addrspace(3)* %543 to double addrspace(3)*
  %545 = getelementptr i8 addrspace(3)* %28, i64 2136
  %546 = bitcast i8 addrspace(3)* %545 to double addrspace(3)*
  %547 = getelementptr i8 addrspace(3)* %28, i64 2144
  %548 = bitcast i8 addrspace(3)* %547 to double addrspace(3)*
  %549 = getelementptr i8 addrspace(3)* %28, i64 2152
  %550 = bitcast i8 addrspace(3)* %549 to double addrspace(3)*
  %551 = getelementptr i8 addrspace(3)* %28, i64 2160
  %552 = bitcast i8 addrspace(3)* %551 to double addrspace(3)*
  %tmp59.i = mul i32 %10, 12
  %tmp60.i = sext i32 %tmp59.i to i64
  %tmp64.i = shl i32 %10, 3
  %tmp65.i = sext i32 %tmp64.i to i64
  %tmp69.i = shl i32 %10, 2
  %tmp70.i = sext i32 %tmp69.i to i64
  %tmp74.i = shl i32 %4, 2
  %tmp75.i = sext i32 %tmp74.i to i64
  %tmp76.i = shl i64 %tmp75.i, 2
  %tmp85.i = mul i32 %4, 3
  %tmp87.i = sext i32 %tmp85.i to i64
  %tmp91.i = shl i32 %4, 1
  %tmp93.i = sext i32 %tmp91.i to i64
  %tmp97.i = sext i32 %4 to i64
  %tmp101.i = mul i64 %tmp75.i, 3
  %tmp104.i = add i64 %tmp101.i, %tmp87.i
  %tmp110.i = add i64 %tmp101.i, %tmp93.i
  %tmp114.i = add i64 %tmp101.i, %tmp97.i
  %tmp121.i = shl i64 %tmp75.i, 1
  %tmp122.i = add i64 %tmp121.i, %tmp87.i
  %tmp126.i = add i64 %tmp121.i, %tmp93.i
  %tmp130.i = add i64 %tmp121.i, %tmp97.i
  %tmp137.i = add i64 %tmp75.i, %tmp87.i
  %tmp141.i = add i64 %tmp75.i, %tmp93.i
  %tmp145.i = add i64 %tmp97.i, %tmp75.i
  %tmp.i = sext i32 %16 to i64
  br label %SyncBB.i

SyncBB.i:                                         ; preds = %thenBB.i, %entry
  %currBarrier.2.i = phi i32 [ 14, %entry ], [ %currBarrier.1.i, %thenBB.i ]
  %CurrSBIndex..0.i = phi i64 [ 0, %entry ], [ %"loadedCurrSB+Stride.i", %thenBB.i ]
  %CurrWI..0.i = phi i64 [ 0, %entry ], [ %"CurrWI++.i", %thenBB.i ]
  %553 = getelementptr %struct.PaddedDimId* %34, i64 %CurrWI..0.i, i32 0, i64 0
  %554 = load i64* %553, align 8
  %555 = trunc i64 %554 to i32
  %"&(pSB[currWI].offset).i" = add nuw i64 %CurrSBIndex..0.i, 432
  %"&pSB[currWI].offset.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset).i"
  %CastToValueType.i = bitcast i8* %"&pSB[currWI].offset.i" to i32*
  store i32 %555, i32* %CastToValueType.i, align 4
  %556 = getelementptr %struct.PaddedDimId* %34, i64 %CurrWI..0.i, i32 0, i64 1
  %557 = load i64* %556, align 8
  %558 = trunc i64 %557 to i32
  %559 = load i64* %31, align 8
  %560 = getelementptr i64* %31, i64 1
  %561 = load i64* %560, align 8
  %"&(pSB[currWI].offset)856.i" = add nuw i64 %CurrSBIndex..0.i, 800
  %"&pSB[currWI].offset857.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)856.i"
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset857.i", i8 0, i64 128, i32 16, i1 false) nounwind
  %562 = sext i32 %558 to i64
  %563 = sext i32 %555 to i64
  %564 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %563, i64 %562
  %"&(pSB[currWI].offset)165.i" = add nuw i64 %CurrSBIndex..0.i, 440
  %"&pSB[currWI].offset166.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)165.i"
  %CastToValueType167.i = bitcast i8* %"&pSB[currWI].offset166.i" to double addrspace(3)**
  store double addrspace(3)* %564, double addrspace(3)** %CastToValueType167.i, align 8
  %565 = add nsw i32 %558, 4
  %566 = sext i32 %565 to i64
  %567 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %563, i64 %566
  %"&(pSB[currWI].offset)174.i" = add nuw i64 %CurrSBIndex..0.i, 448
  %"&pSB[currWI].offset175.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)174.i"
  %CastToValueType176.i = bitcast i8* %"&pSB[currWI].offset175.i" to double addrspace(3)**
  store double addrspace(3)* %567, double addrspace(3)** %CastToValueType176.i, align 8
  %568 = add nsw i32 %558, 8
  %569 = sext i32 %568 to i64
  %570 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %563, i64 %569
  %"&(pSB[currWI].offset)183.i" = add nuw i64 %CurrSBIndex..0.i, 456
  %"&pSB[currWI].offset184.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)183.i"
  %CastToValueType185.i = bitcast i8* %"&pSB[currWI].offset184.i" to double addrspace(3)**
  store double addrspace(3)* %570, double addrspace(3)** %CastToValueType185.i, align 8
  %571 = add nsw i32 %558, 12
  %572 = sext i32 %571 to i64
  %573 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %563, i64 %572
  %"&(pSB[currWI].offset)192.i" = add nuw i64 %CurrSBIndex..0.i, 464
  %"&pSB[currWI].offset193.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)192.i"
  %CastToValueType194.i = bitcast i8* %"&pSB[currWI].offset193.i" to double addrspace(3)**
  store double addrspace(3)* %573, double addrspace(3)** %CastToValueType194.i, align 8
  %"&(pSB[currWI].offset)940.i" = add nuw i64 %CurrSBIndex..0.i, 928
  %"&pSB[currWI].offset941.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)940.i"
  %574 = bitcast i8* %"&pSB[currWI].offset941.i" to double*
  %"&(pSB[currWI].offset)924.i" = add nuw i64 %CurrSBIndex..0.i, 800
  %"&pSB[currWI].offset925.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)924.i"
  %575 = bitcast i8* %"&pSB[currWI].offset925.i" to double*
  %"&pSB[currWI].offset921.sum.i" = add i64 %CurrSBIndex..0.i, 808
  %576 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset921.sum.i"
  %577 = bitcast i8* %576 to double*
  %"&pSB[currWI].offset917.sum.i" = add i64 %CurrSBIndex..0.i, 816
  %578 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset917.sum.i"
  %579 = bitcast i8* %578 to double*
  %"&pSB[currWI].offset913.sum.i" = add i64 %CurrSBIndex..0.i, 824
  %580 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset913.sum.i"
  %581 = bitcast i8* %580 to double*
  %"&pSB[currWI].offset909.sum.i" = add i64 %CurrSBIndex..0.i, 832
  %582 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset909.sum.i"
  %583 = bitcast i8* %582 to double*
  %"&pSB[currWI].offset905.sum.i" = add i64 %CurrSBIndex..0.i, 840
  %584 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset905.sum.i"
  %585 = bitcast i8* %584 to double*
  %"&pSB[currWI].offset901.sum.i" = add i64 %CurrSBIndex..0.i, 848
  %586 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset901.sum.i"
  %587 = bitcast i8* %586 to double*
  %"&pSB[currWI].offset897.sum.i" = add i64 %CurrSBIndex..0.i, 856
  %588 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset897.sum.i"
  %589 = bitcast i8* %588 to double*
  %"&pSB[currWI].offset893.sum.i" = add i64 %CurrSBIndex..0.i, 864
  %590 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset893.sum.i"
  %591 = bitcast i8* %590 to double*
  %"&pSB[currWI].offset889.sum.i" = add i64 %CurrSBIndex..0.i, 872
  %592 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset889.sum.i"
  %593 = bitcast i8* %592 to double*
  %"&pSB[currWI].offset885.sum.i" = add i64 %CurrSBIndex..0.i, 880
  %594 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset885.sum.i"
  %595 = bitcast i8* %594 to double*
  %"&pSB[currWI].offset881.sum.i" = add i64 %CurrSBIndex..0.i, 888
  %596 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset881.sum.i"
  %597 = bitcast i8* %596 to double*
  %"&pSB[currWI].offset877.sum.i" = add i64 %CurrSBIndex..0.i, 896
  %598 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset877.sum.i"
  %599 = bitcast i8* %598 to double*
  %"&pSB[currWI].offset873.sum.i" = add i64 %CurrSBIndex..0.i, 904
  %600 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset873.sum.i"
  %601 = bitcast i8* %600 to double*
  %"&pSB[currWI].offset869.sum.i" = add i64 %CurrSBIndex..0.i, 912
  %602 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset869.sum.i"
  %603 = bitcast i8* %602 to double*
  %"&pSB[currWI].offset865.sum.i" = add i64 %CurrSBIndex..0.i, 920
  %604 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset865.sum.i"
  %605 = bitcast i8* %604 to double*
  %"&pSB[currWI].offset937.sum.i" = add i64 %CurrSBIndex..0.i, 936
  %606 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset937.sum.i"
  %607 = bitcast i8* %606 to double*
  %"&pSB[currWI].offset933.sum.i" = add i64 %CurrSBIndex..0.i, 944
  %608 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset933.sum.i"
  %609 = bitcast i8* %608 to double*
  %"&pSB[currWI].offset929.sum.i" = add i64 %CurrSBIndex..0.i, 952
  %610 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset929.sum.i"
  %611 = bitcast i8* %610 to double*
  %tmp50.i = shl i64 %561, 4
  %tmp51.i = trunc i64 %tmp50.i to i32
  %tmp52.i = add i32 %558, %tmp51.i
  %tmp53.i = mul i32 %tmp52.i, %10
  %tmp55.i = add i32 %tmp53.i, %555
  %tmp56.i = sext i32 %tmp55.i to i64
  %"&(pSB[currWI].offset)201.i" = add nuw i64 %CurrSBIndex..0.i, 472
  %"&pSB[currWI].offset202.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)201.i"
  %CastToValueType203.i = bitcast i8* %"&pSB[currWI].offset202.i" to i64*
  store i64 %tmp56.i, i64* %CastToValueType203.i, align 8
  %tmp61.i = add i64 %tmp60.i, %tmp56.i
  %"&(pSB[currWI].offset)210.i" = add nuw i64 %CurrSBIndex..0.i, 480
  %"&pSB[currWI].offset211.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)210.i"
  %CastToValueType212.i = bitcast i8* %"&pSB[currWI].offset211.i" to i64*
  store i64 %tmp61.i, i64* %CastToValueType212.i, align 8
  %tmp66.i = add i64 %tmp65.i, %tmp56.i
  %"&(pSB[currWI].offset)219.i" = add nuw i64 %CurrSBIndex..0.i, 488
  %"&pSB[currWI].offset220.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)219.i"
  %CastToValueType221.i = bitcast i8* %"&pSB[currWI].offset220.i" to i64*
  store i64 %tmp66.i, i64* %CastToValueType221.i, align 8
  %tmp71.i = add i64 %tmp70.i, %tmp56.i
  %"&(pSB[currWI].offset)228.i" = add nuw i64 %CurrSBIndex..0.i, 496
  %"&pSB[currWI].offset229.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)228.i"
  %CastToValueType230.i = bitcast i8* %"&pSB[currWI].offset229.i" to i64*
  store i64 %tmp71.i, i64* %CastToValueType230.i, align 8
  %tmp78.i = shl i32 %558, 4
  %"&(pSB[currWI].offset)237.i" = add nuw i64 %CurrSBIndex..0.i, 504
  %"&pSB[currWI].offset238.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)237.i"
  %CastToValueType239.i = bitcast i8* %"&pSB[currWI].offset238.i" to i32*
  store i32 %tmp78.i, i32* %CastToValueType239.i, align 4
  %tmp79.i = add i32 %tmp78.i, %555
  %tmp80.i = shl i64 %559, 6
  %tmp81.i = trunc i64 %tmp80.i to i32
  %tmp82.i = add i32 %tmp79.i, %tmp81.i
  %tmp83.i = sext i32 %tmp82.i to i64
  %"&(pSB[currWI].offset)246.i" = add nuw i64 %CurrSBIndex..0.i, 512
  %"&pSB[currWI].offset247.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)246.i"
  %CastToValueType248.i = bitcast i8* %"&pSB[currWI].offset247.i" to i64*
  store i64 %tmp83.i, i64* %CastToValueType248.i, align 8
  %tmp88.i = add i64 %tmp83.i, %tmp87.i
  %"&(pSB[currWI].offset)255.i" = add nuw i64 %CurrSBIndex..0.i, 520
  %"&pSB[currWI].offset256.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)255.i"
  %CastToValueType257.i = bitcast i8* %"&pSB[currWI].offset256.i" to i64*
  store i64 %tmp88.i, i64* %CastToValueType257.i, align 8
  %tmp94.i = add i64 %tmp83.i, %tmp93.i
  %"&(pSB[currWI].offset)264.i" = add nuw i64 %CurrSBIndex..0.i, 528
  %"&pSB[currWI].offset265.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)264.i"
  %CastToValueType266.i = bitcast i8* %"&pSB[currWI].offset265.i" to i64*
  store i64 %tmp94.i, i64* %CastToValueType266.i, align 8
  %tmp98.i = add i64 %tmp97.i, %tmp83.i
  %"&(pSB[currWI].offset)273.i" = add nuw i64 %CurrSBIndex..0.i, 536
  %"&pSB[currWI].offset274.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)273.i"
  %CastToValueType275.i = bitcast i8* %"&pSB[currWI].offset274.i" to i64*
  store i64 %tmp98.i, i64* %CastToValueType275.i, align 8
  %tmp105.i = add i64 %tmp104.i, %tmp83.i
  %"&(pSB[currWI].offset)282.i" = add nuw i64 %CurrSBIndex..0.i, 544
  %"&pSB[currWI].offset283.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)282.i"
  %CastToValueType284.i = bitcast i8* %"&pSB[currWI].offset283.i" to i64*
  store i64 %tmp105.i, i64* %CastToValueType284.i, align 8
  %tmp111.i = add i64 %tmp110.i, %tmp83.i
  %"&(pSB[currWI].offset)291.i" = add nuw i64 %CurrSBIndex..0.i, 552
  %"&pSB[currWI].offset292.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)291.i"
  %CastToValueType293.i = bitcast i8* %"&pSB[currWI].offset292.i" to i64*
  store i64 %tmp111.i, i64* %CastToValueType293.i, align 8
  %tmp115.i = add i64 %tmp114.i, %tmp83.i
  %"&(pSB[currWI].offset)300.i" = add nuw i64 %CurrSBIndex..0.i, 560
  %"&pSB[currWI].offset301.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)300.i"
  %CastToValueType302.i = bitcast i8* %"&pSB[currWI].offset301.i" to i64*
  store i64 %tmp115.i, i64* %CastToValueType302.i, align 8
  %tmp118.i = add i64 %tmp101.i, %tmp83.i
  %"&(pSB[currWI].offset)309.i" = add nuw i64 %CurrSBIndex..0.i, 568
  %"&pSB[currWI].offset310.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)309.i"
  %CastToValueType311.i = bitcast i8* %"&pSB[currWI].offset310.i" to i64*
  store i64 %tmp118.i, i64* %CastToValueType311.i, align 8
  %tmp123.i = add i64 %tmp122.i, %tmp83.i
  %"&(pSB[currWI].offset)318.i" = add nuw i64 %CurrSBIndex..0.i, 576
  %"&pSB[currWI].offset319.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)318.i"
  %CastToValueType320.i = bitcast i8* %"&pSB[currWI].offset319.i" to i64*
  store i64 %tmp123.i, i64* %CastToValueType320.i, align 8
  %tmp127.i = add i64 %tmp126.i, %tmp83.i
  %"&(pSB[currWI].offset)327.i" = add nuw i64 %CurrSBIndex..0.i, 584
  %"&pSB[currWI].offset328.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)327.i"
  %CastToValueType329.i = bitcast i8* %"&pSB[currWI].offset328.i" to i64*
  store i64 %tmp127.i, i64* %CastToValueType329.i, align 8
  %tmp131.i = add i64 %tmp130.i, %tmp83.i
  %"&(pSB[currWI].offset)336.i" = add nuw i64 %CurrSBIndex..0.i, 592
  %"&pSB[currWI].offset337.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)336.i"
  %CastToValueType338.i = bitcast i8* %"&pSB[currWI].offset337.i" to i64*
  store i64 %tmp131.i, i64* %CastToValueType338.i, align 8
  %tmp134.i = add i64 %tmp121.i, %tmp83.i
  %"&(pSB[currWI].offset)345.i" = add nuw i64 %CurrSBIndex..0.i, 600
  %"&pSB[currWI].offset346.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)345.i"
  %CastToValueType347.i = bitcast i8* %"&pSB[currWI].offset346.i" to i64*
  store i64 %tmp134.i, i64* %CastToValueType347.i, align 8
  %tmp138.i = add i64 %tmp137.i, %tmp83.i
  %"&(pSB[currWI].offset)354.i" = add nuw i64 %CurrSBIndex..0.i, 608
  %"&pSB[currWI].offset355.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)354.i"
  %CastToValueType356.i = bitcast i8* %"&pSB[currWI].offset355.i" to i64*
  store i64 %tmp138.i, i64* %CastToValueType356.i, align 8
  %tmp142.i = add i64 %tmp141.i, %tmp83.i
  %"&(pSB[currWI].offset)363.i" = add nuw i64 %CurrSBIndex..0.i, 616
  %"&pSB[currWI].offset364.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)363.i"
  %CastToValueType365.i = bitcast i8* %"&pSB[currWI].offset364.i" to i64*
  store i64 %tmp142.i, i64* %CastToValueType365.i, align 8
  %tmp146.i = add i64 %tmp145.i, %tmp83.i
  %"&(pSB[currWI].offset)372.i" = add nuw i64 %CurrSBIndex..0.i, 624
  %"&pSB[currWI].offset373.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)372.i"
  %CastToValueType374.i = bitcast i8* %"&pSB[currWI].offset373.i" to i64*
  store i64 %tmp146.i, i64* %CastToValueType374.i, align 8
  %tmp149.i = add i64 %tmp75.i, %tmp83.i
  %"&(pSB[currWI].offset)381.i" = add nuw i64 %CurrSBIndex..0.i, 632
  %"&pSB[currWI].offset382.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)381.i"
  %CastToValueType383.i = bitcast i8* %"&pSB[currWI].offset382.i" to i64*
  store i64 %tmp149.i, i64* %CastToValueType383.i, align 8
  %tmp25.i = mul i32 %tmp51.i, %16
  br label %.loopexit.i

.loopexit.i:                                      ; preds = %SyncBB987.i, %SyncBB.i
  %currBarrier.1.i = phi i32 [ %currBarrier.2.i, %SyncBB.i ], [ %currBarrier.0.ph.i, %SyncBB987.i ]
  %CurrSBIndex..2.i = phi i64 [ %CurrSBIndex..0.i, %SyncBB.i ], [ %CurrSBIndex..1.i, %SyncBB987.i ]
  %CurrWI..2.i = phi i64 [ %CurrWI..0.i, %SyncBB.i ], [ %CurrWI..1.i, %SyncBB987.i ]
  %indvar44.i = phi i64 [ 0, %SyncBB.i ], [ %indvar.next45.i, %SyncBB987.i ]
  %"&(pSB[currWI].offset)390.i" = add nuw i64 %CurrSBIndex..2.i, 640
  %"&pSB[currWI].offset391.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)390.i"
  %CastToValueType392.i = bitcast i8* %"&pSB[currWI].offset391.i" to i64*
  store i64 %indvar44.i, i64* %CastToValueType392.i, align 8
  %tmp46.i = shl i64 %indvar44.i, 4
  %tmp47.i = add i64 %tmp46.i, 16
  %tmp48.i = trunc i64 %tmp47.i to i32
  %"&(pSB[currWI].offset)399.i" = add nuw i64 %CurrSBIndex..2.i, 648
  %"&pSB[currWI].offset400.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)399.i"
  %CastToValueType401.i = bitcast i8* %"&pSB[currWI].offset400.i" to i32*
  store i32 %tmp48.i, i32* %CastToValueType401.i, align 4
  %"&(pSB[currWI].offset)205.i" = add nuw i64 %CurrSBIndex..2.i, 472
  %"&pSB[currWI].offset206.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)205.i"
  %CastToValueType207.i = bitcast i8* %"&pSB[currWI].offset206.i" to i64*
  %loadedValue208.i = load i64* %CastToValueType207.i, align 8
  %tmp57.i = add i64 %loadedValue208.i, %tmp46.i
  %.01.i = getelementptr double addrspace(1)* %7, i64 %tmp57.i
  %"&(pSB[currWI].offset)214.i" = add nuw i64 %CurrSBIndex..2.i, 480
  %"&pSB[currWI].offset215.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)214.i"
  %CastToValueType216.i = bitcast i8* %"&pSB[currWI].offset215.i" to i64*
  %loadedValue217.i = load i64* %CastToValueType216.i, align 8
  %tmp62.i = add i64 %loadedValue217.i, %tmp46.i
  %scevgep63.i = getelementptr double addrspace(1)* %7, i64 %tmp62.i
  %"&(pSB[currWI].offset)223.i" = add nuw i64 %CurrSBIndex..2.i, 488
  %"&pSB[currWI].offset224.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)223.i"
  %CastToValueType225.i = bitcast i8* %"&pSB[currWI].offset224.i" to i64*
  %loadedValue226.i = load i64* %CastToValueType225.i, align 8
  %tmp67.i = add i64 %loadedValue226.i, %tmp46.i
  %scevgep68.i = getelementptr double addrspace(1)* %7, i64 %tmp67.i
  %"&(pSB[currWI].offset)232.i" = add nuw i64 %CurrSBIndex..2.i, 496
  %"&pSB[currWI].offset233.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)232.i"
  %CastToValueType234.i = bitcast i8* %"&pSB[currWI].offset233.i" to i64*
  %loadedValue235.i = load i64* %CastToValueType234.i, align 8
  %tmp72.i = add i64 %loadedValue235.i, %tmp46.i
  %scevgep73.i = getelementptr double addrspace(1)* %7, i64 %tmp72.i
  %tmp77.i = mul i64 %tmp76.i, %indvar44.i
  %"&(pSB[currWI].offset)286.i" = add nuw i64 %CurrSBIndex..2.i, 544
  %"&pSB[currWI].offset287.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)286.i"
  %CastToValueType288.i = bitcast i8* %"&pSB[currWI].offset287.i" to i64*
  %loadedValue289.i = load i64* %CastToValueType288.i, align 8
  %tmp106.i = add i64 %loadedValue289.i, %tmp77.i
  %scevgep107.i = getelementptr double addrspace(1)* %1, i64 %tmp106.i
  %"&(pSB[currWI].offset)408.i" = add nuw i64 %CurrSBIndex..2.i, 656
  %"&pSB[currWI].offset409.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)408.i"
  %CastToValueType410.i = bitcast i8* %"&pSB[currWI].offset409.i" to double addrspace(1)**
  store double addrspace(1)* %scevgep107.i, double addrspace(1)** %CastToValueType410.i, align 8
  %"&(pSB[currWI].offset)295.i" = add nuw i64 %CurrSBIndex..2.i, 552
  %"&pSB[currWI].offset296.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)295.i"
  %CastToValueType297.i = bitcast i8* %"&pSB[currWI].offset296.i" to i64*
  %loadedValue298.i = load i64* %CastToValueType297.i, align 8
  %tmp112.i = add i64 %loadedValue298.i, %tmp77.i
  %scevgep113.i = getelementptr double addrspace(1)* %1, i64 %tmp112.i
  %"&(pSB[currWI].offset)417.i" = add nuw i64 %CurrSBIndex..2.i, 664
  %"&pSB[currWI].offset418.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)417.i"
  %CastToValueType419.i = bitcast i8* %"&pSB[currWI].offset418.i" to double addrspace(1)**
  store double addrspace(1)* %scevgep113.i, double addrspace(1)** %CastToValueType419.i, align 8
  %"&(pSB[currWI].offset)304.i" = add nuw i64 %CurrSBIndex..2.i, 560
  %"&pSB[currWI].offset305.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)304.i"
  %CastToValueType306.i = bitcast i8* %"&pSB[currWI].offset305.i" to i64*
  %loadedValue307.i = load i64* %CastToValueType306.i, align 8
  %tmp116.i = add i64 %loadedValue307.i, %tmp77.i
  %scevgep117.i = getelementptr double addrspace(1)* %1, i64 %tmp116.i
  %"&(pSB[currWI].offset)426.i" = add nuw i64 %CurrSBIndex..2.i, 672
  %"&pSB[currWI].offset427.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)426.i"
  %CastToValueType428.i = bitcast i8* %"&pSB[currWI].offset427.i" to double addrspace(1)**
  store double addrspace(1)* %scevgep117.i, double addrspace(1)** %CastToValueType428.i, align 8
  %"&(pSB[currWI].offset)313.i" = add nuw i64 %CurrSBIndex..2.i, 568
  %"&pSB[currWI].offset314.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)313.i"
  %CastToValueType315.i = bitcast i8* %"&pSB[currWI].offset314.i" to i64*
  %loadedValue316.i = load i64* %CastToValueType315.i, align 8
  %tmp119.i = add i64 %loadedValue316.i, %tmp77.i
  %scevgep120.i = getelementptr double addrspace(1)* %1, i64 %tmp119.i
  %"&(pSB[currWI].offset)435.i" = add nuw i64 %CurrSBIndex..2.i, 680
  %"&pSB[currWI].offset436.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)435.i"
  %CastToValueType437.i = bitcast i8* %"&pSB[currWI].offset436.i" to double addrspace(1)**
  store double addrspace(1)* %scevgep120.i, double addrspace(1)** %CastToValueType437.i, align 8
  %"&(pSB[currWI].offset)322.i" = add nuw i64 %CurrSBIndex..2.i, 576
  %"&pSB[currWI].offset323.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)322.i"
  %CastToValueType324.i = bitcast i8* %"&pSB[currWI].offset323.i" to i64*
  %loadedValue325.i = load i64* %CastToValueType324.i, align 8
  %tmp124.i = add i64 %loadedValue325.i, %tmp77.i
  %scevgep125.i = getelementptr double addrspace(1)* %1, i64 %tmp124.i
  %"&(pSB[currWI].offset)444.i" = add nuw i64 %CurrSBIndex..2.i, 688
  %"&pSB[currWI].offset445.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)444.i"
  %CastToValueType446.i = bitcast i8* %"&pSB[currWI].offset445.i" to double addrspace(1)**
  store double addrspace(1)* %scevgep125.i, double addrspace(1)** %CastToValueType446.i, align 8
  %"&(pSB[currWI].offset)331.i" = add nuw i64 %CurrSBIndex..2.i, 584
  %"&pSB[currWI].offset332.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)331.i"
  %CastToValueType333.i = bitcast i8* %"&pSB[currWI].offset332.i" to i64*
  %loadedValue334.i = load i64* %CastToValueType333.i, align 8
  %tmp128.i = add i64 %loadedValue334.i, %tmp77.i
  %scevgep129.i = getelementptr double addrspace(1)* %1, i64 %tmp128.i
  %"&(pSB[currWI].offset)453.i" = add nuw i64 %CurrSBIndex..2.i, 696
  %"&pSB[currWI].offset454.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)453.i"
  %CastToValueType455.i = bitcast i8* %"&pSB[currWI].offset454.i" to double addrspace(1)**
  store double addrspace(1)* %scevgep129.i, double addrspace(1)** %CastToValueType455.i, align 8
  %"&(pSB[currWI].offset)340.i" = add nuw i64 %CurrSBIndex..2.i, 592
  %"&pSB[currWI].offset341.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)340.i"
  %CastToValueType342.i = bitcast i8* %"&pSB[currWI].offset341.i" to i64*
  %loadedValue343.i = load i64* %CastToValueType342.i, align 8
  %tmp132.i = add i64 %loadedValue343.i, %tmp77.i
  %scevgep133.i = getelementptr double addrspace(1)* %1, i64 %tmp132.i
  %"&(pSB[currWI].offset)462.i" = add nuw i64 %CurrSBIndex..2.i, 704
  %"&pSB[currWI].offset463.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)462.i"
  %CastToValueType464.i = bitcast i8* %"&pSB[currWI].offset463.i" to double addrspace(1)**
  store double addrspace(1)* %scevgep133.i, double addrspace(1)** %CastToValueType464.i, align 8
  %"&(pSB[currWI].offset)349.i" = add nuw i64 %CurrSBIndex..2.i, 600
  %"&pSB[currWI].offset350.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)349.i"
  %CastToValueType351.i = bitcast i8* %"&pSB[currWI].offset350.i" to i64*
  %loadedValue352.i = load i64* %CastToValueType351.i, align 8
  %tmp135.i = add i64 %loadedValue352.i, %tmp77.i
  %scevgep136.i = getelementptr double addrspace(1)* %1, i64 %tmp135.i
  %"&(pSB[currWI].offset)471.i" = add nuw i64 %CurrSBIndex..2.i, 712
  %"&pSB[currWI].offset472.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)471.i"
  %CastToValueType473.i = bitcast i8* %"&pSB[currWI].offset472.i" to double addrspace(1)**
  store double addrspace(1)* %scevgep136.i, double addrspace(1)** %CastToValueType473.i, align 8
  %"&(pSB[currWI].offset)358.i" = add nuw i64 %CurrSBIndex..2.i, 608
  %"&pSB[currWI].offset359.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)358.i"
  %CastToValueType360.i = bitcast i8* %"&pSB[currWI].offset359.i" to i64*
  %loadedValue361.i = load i64* %CastToValueType360.i, align 8
  %tmp139.i = add i64 %loadedValue361.i, %tmp77.i
  %scevgep140.i = getelementptr double addrspace(1)* %1, i64 %tmp139.i
  %"&(pSB[currWI].offset)480.i" = add nuw i64 %CurrSBIndex..2.i, 720
  %"&pSB[currWI].offset481.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)480.i"
  %CastToValueType482.i = bitcast i8* %"&pSB[currWI].offset481.i" to double addrspace(1)**
  store double addrspace(1)* %scevgep140.i, double addrspace(1)** %CastToValueType482.i, align 8
  %"&(pSB[currWI].offset)367.i" = add nuw i64 %CurrSBIndex..2.i, 616
  %"&pSB[currWI].offset368.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)367.i"
  %CastToValueType369.i = bitcast i8* %"&pSB[currWI].offset368.i" to i64*
  %loadedValue370.i = load i64* %CastToValueType369.i, align 8
  %tmp143.i = add i64 %loadedValue370.i, %tmp77.i
  %scevgep144.i = getelementptr double addrspace(1)* %1, i64 %tmp143.i
  %"&(pSB[currWI].offset)489.i" = add nuw i64 %CurrSBIndex..2.i, 728
  %"&pSB[currWI].offset490.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)489.i"
  %CastToValueType491.i = bitcast i8* %"&pSB[currWI].offset490.i" to double addrspace(1)**
  store double addrspace(1)* %scevgep144.i, double addrspace(1)** %CastToValueType491.i, align 8
  %"&(pSB[currWI].offset)376.i" = add nuw i64 %CurrSBIndex..2.i, 624
  %"&pSB[currWI].offset377.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)376.i"
  %CastToValueType378.i = bitcast i8* %"&pSB[currWI].offset377.i" to i64*
  %loadedValue379.i = load i64* %CastToValueType378.i, align 8
  %tmp147.i = add i64 %loadedValue379.i, %tmp77.i
  %scevgep148.i = getelementptr double addrspace(1)* %1, i64 %tmp147.i
  %"&(pSB[currWI].offset)498.i" = add nuw i64 %CurrSBIndex..2.i, 736
  %"&pSB[currWI].offset499.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)498.i"
  %CastToValueType500.i = bitcast i8* %"&pSB[currWI].offset499.i" to double addrspace(1)**
  store double addrspace(1)* %scevgep148.i, double addrspace(1)** %CastToValueType500.i, align 8
  %"&(pSB[currWI].offset)385.i" = add nuw i64 %CurrSBIndex..2.i, 632
  %"&pSB[currWI].offset386.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)385.i"
  %CastToValueType387.i = bitcast i8* %"&pSB[currWI].offset386.i" to i64*
  %loadedValue388.i = load i64* %CastToValueType387.i, align 8
  %tmp150.i = add i64 %loadedValue388.i, %tmp77.i
  %scevgep151.i = getelementptr double addrspace(1)* %1, i64 %tmp150.i
  %"&(pSB[currWI].offset)507.i" = add nuw i64 %CurrSBIndex..2.i, 744
  %"&pSB[currWI].offset508.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)507.i"
  %CastToValueType509.i = bitcast i8* %"&pSB[currWI].offset508.i" to double addrspace(1)**
  store double addrspace(1)* %scevgep151.i, double addrspace(1)** %CastToValueType509.i, align 8
  %"&(pSB[currWI].offset)250.i" = add nuw i64 %CurrSBIndex..2.i, 512
  %"&pSB[currWI].offset251.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)250.i"
  %CastToValueType252.i = bitcast i8* %"&pSB[currWI].offset251.i" to i64*
  %loadedValue253.i = load i64* %CastToValueType252.i, align 8
  %tmp152.i = add i64 %loadedValue253.i, %tmp77.i
  %"&(pSB[currWI].offset)277.i" = add nuw i64 %CurrSBIndex..2.i, 536
  %"&pSB[currWI].offset278.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)277.i"
  %CastToValueType279.i = bitcast i8* %"&pSB[currWI].offset278.i" to i64*
  %loadedValue280.i = load i64* %CastToValueType279.i, align 8
  %tmp99.i = add i64 %loadedValue280.i, %tmp77.i
  %"&(pSB[currWI].offset)268.i" = add nuw i64 %CurrSBIndex..2.i, 528
  %"&pSB[currWI].offset269.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)268.i"
  %CastToValueType270.i = bitcast i8* %"&pSB[currWI].offset269.i" to i64*
  %loadedValue271.i = load i64* %CastToValueType270.i, align 8
  %tmp95.i = add i64 %loadedValue271.i, %tmp77.i
  %"&(pSB[currWI].offset)259.i" = add nuw i64 %CurrSBIndex..2.i, 520
  %"&pSB[currWI].offset260.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)259.i"
  %CastToValueType261.i = bitcast i8* %"&pSB[currWI].offset260.i" to i64*
  %loadedValue262.i = load i64* %CastToValueType261.i, align 8
  %tmp89.i = add i64 %loadedValue262.i, %tmp77.i
  %scevgep153.i = getelementptr double addrspace(1)* %1, i64 %tmp152.i
  %scevgep100.i = getelementptr double addrspace(1)* %1, i64 %tmp99.i
  %scevgep96.i = getelementptr double addrspace(1)* %1, i64 %tmp95.i
  %scevgep90.i = getelementptr double addrspace(1)* %1, i64 %tmp89.i
  %612 = load double addrspace(1)* %scevgep153.i, align 8
  %"&(pSB[currWI].offset)516.i" = add nuw i64 %CurrSBIndex..2.i, 752
  %"&pSB[currWI].offset517.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)516.i"
  %CastToValueType518.i = bitcast i8* %"&pSB[currWI].offset517.i" to double*
  store double %612, double* %CastToValueType518.i, align 8
  %613 = load double addrspace(1)* %scevgep100.i, align 8
  %"&(pSB[currWI].offset)600.i" = add nuw i64 %CurrSBIndex..2.i, 760
  %"&pSB[currWI].offset601.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)600.i"
  %CastToValueType602.i = bitcast i8* %"&pSB[currWI].offset601.i" to double*
  store double %613, double* %CastToValueType602.i, align 8
  %614 = load double addrspace(1)* %scevgep96.i, align 8
  %"&(pSB[currWI].offset)684.i" = add nuw i64 %CurrSBIndex..2.i, 768
  %"&pSB[currWI].offset685.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)684.i"
  %CastToValueType686.i = bitcast i8* %"&pSB[currWI].offset685.i" to double*
  store double %614, double* %CastToValueType686.i, align 8
  %615 = load double addrspace(1)* %scevgep90.i, align 8
  %"&(pSB[currWI].offset)768.i" = add nuw i64 %CurrSBIndex..2.i, 776
  %"&pSB[currWI].offset769.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)768.i"
  %CastToValueType770.i = bitcast i8* %"&pSB[currWI].offset769.i" to double*
  store double %615, double* %CastToValueType770.i, align 8
  %616 = load double addrspace(1)* %.01.i, align 8
  %"&(pSB[currWI].offset)169.i" = add nuw i64 %CurrSBIndex..2.i, 440
  %"&pSB[currWI].offset170.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)169.i"
  %CastToValueType171.i = bitcast i8* %"&pSB[currWI].offset170.i" to double addrspace(3)**
  %loadedValue172.i = load double addrspace(3)** %CastToValueType171.i, align 8
  store double %616, double addrspace(3)* %loadedValue172.i, align 8
  %617 = load double addrspace(1)* %scevgep73.i, align 8
  %"&(pSB[currWI].offset)178.i" = add nuw i64 %CurrSBIndex..2.i, 448
  %"&pSB[currWI].offset179.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)178.i"
  %CastToValueType180.i = bitcast i8* %"&pSB[currWI].offset179.i" to double addrspace(3)**
  %loadedValue181.i = load double addrspace(3)** %CastToValueType180.i, align 8
  store double %617, double addrspace(3)* %loadedValue181.i, align 8
  %618 = load double addrspace(1)* %scevgep68.i, align 8
  %"&(pSB[currWI].offset)187.i" = add nuw i64 %CurrSBIndex..2.i, 456
  %"&pSB[currWI].offset188.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)187.i"
  %CastToValueType189.i = bitcast i8* %"&pSB[currWI].offset188.i" to double addrspace(3)**
  %loadedValue190.i = load double addrspace(3)** %CastToValueType189.i, align 8
  store double %618, double addrspace(3)* %loadedValue190.i, align 8
  %619 = load double addrspace(1)* %scevgep63.i, align 8
  %"&(pSB[currWI].offset)196.i" = add nuw i64 %CurrSBIndex..2.i, 464
  %"&pSB[currWI].offset197.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)196.i"
  %CastToValueType198.i = bitcast i8* %"&pSB[currWI].offset197.i" to double addrspace(3)**
  %loadedValue199.i = load double addrspace(3)** %CastToValueType198.i, align 8
  store double %619, double addrspace(3)* %loadedValue199.i, align 8
  %check.WI.iter.i = icmp ult i64 %CurrWI..2.i, %37
  br i1 %check.WI.iter.i, label %thenBB.i, label %SyncBB985.i

thenBB.i:                                         ; preds = %.loopexit.i
  %"CurrWI++.i" = add nuw i64 %CurrWI..2.i, 1
  %"loadedCurrSB+Stride.i" = add nuw i64 %CurrSBIndex..2.i, 12032
  %cond.i = icmp eq i32 %currBarrier.1.i, 13
  br i1 %cond.i, label %SyncBB987.preheader.i, label %SyncBB.i

SyncBB985.i:                                      ; preds = %thenBB996.i, %.loopexit.i
  %CurrSBIndex..3.i = phi i64 [ %"loadedCurrSB+Stride1002.i", %thenBB996.i ], [ 0, %.loopexit.i ]
  %CurrWI..3.i = phi i64 [ %"CurrWI++1000.i", %thenBB996.i ], [ 0, %.loopexit.i ]
  %620 = load double addrspace(3)* %42, align 16
  %"&(pSB[currWI].offset)520.i" = add nuw i64 %CurrSBIndex..3.i, 752
  %"&pSB[currWI].offset521.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)520.i"
  %CastToValueType522.i = bitcast i8* %"&pSB[currWI].offset521.i" to double*
  %loadedValue523.i = load double* %CastToValueType522.i, align 8
  %621 = fmul double %loadedValue523.i, %620
  %622 = load double* %575, align 16
  %623 = fadd double %622, %621
  %624 = load double addrspace(3)* %44, align 8
  %"&(pSB[currWI].offset)525.i" = add nuw i64 %CurrSBIndex..3.i, 752
  %"&pSB[currWI].offset526.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)525.i"
  %CastToValueType527.i = bitcast i8* %"&pSB[currWI].offset526.i" to double*
  %loadedValue528.i = load double* %CastToValueType527.i, align 8
  %625 = fmul double %loadedValue528.i, %624
  %626 = load double* %577, align 8
  %627 = fadd double %626, %625
  %628 = load double addrspace(3)* %46, align 16
  %"&(pSB[currWI].offset)530.i" = add nuw i64 %CurrSBIndex..3.i, 752
  %"&pSB[currWI].offset531.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)530.i"
  %CastToValueType532.i = bitcast i8* %"&pSB[currWI].offset531.i" to double*
  %loadedValue533.i = load double* %CastToValueType532.i, align 8
  %629 = fmul double %loadedValue533.i, %628
  %630 = load double* %579, align 16
  %631 = fadd double %630, %629
  %632 = load double addrspace(3)* %48, align 8
  %"&(pSB[currWI].offset)535.i" = add nuw i64 %CurrSBIndex..3.i, 752
  %"&pSB[currWI].offset536.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)535.i"
  %CastToValueType537.i = bitcast i8* %"&pSB[currWI].offset536.i" to double*
  %loadedValue538.i = load double* %CastToValueType537.i, align 8
  %633 = fmul double %loadedValue538.i, %632
  %634 = load double* %581, align 8
  %635 = fadd double %634, %633
  %636 = load double addrspace(3)* %50, align 16
  %"&(pSB[currWI].offset)540.i" = add nuw i64 %CurrSBIndex..3.i, 752
  %"&pSB[currWI].offset541.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)540.i"
  %CastToValueType542.i = bitcast i8* %"&pSB[currWI].offset541.i" to double*
  %loadedValue543.i = load double* %CastToValueType542.i, align 8
  %637 = fmul double %loadedValue543.i, %636
  %638 = load double* %583, align 16
  %639 = fadd double %638, %637
  %640 = load double addrspace(3)* %52, align 8
  %"&(pSB[currWI].offset)545.i" = add nuw i64 %CurrSBIndex..3.i, 752
  %"&pSB[currWI].offset546.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)545.i"
  %CastToValueType547.i = bitcast i8* %"&pSB[currWI].offset546.i" to double*
  %loadedValue548.i = load double* %CastToValueType547.i, align 8
  %641 = fmul double %loadedValue548.i, %640
  %642 = load double* %585, align 8
  %643 = fadd double %642, %641
  %644 = load double addrspace(3)* %54, align 16
  %"&(pSB[currWI].offset)550.i" = add nuw i64 %CurrSBIndex..3.i, 752
  %"&pSB[currWI].offset551.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)550.i"
  %CastToValueType552.i = bitcast i8* %"&pSB[currWI].offset551.i" to double*
  %loadedValue553.i = load double* %CastToValueType552.i, align 8
  %645 = fmul double %loadedValue553.i, %644
  %646 = load double* %587, align 16
  %647 = fadd double %646, %645
  %648 = load double addrspace(3)* %56, align 8
  %"&(pSB[currWI].offset)555.i" = add nuw i64 %CurrSBIndex..3.i, 752
  %"&pSB[currWI].offset556.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)555.i"
  %CastToValueType557.i = bitcast i8* %"&pSB[currWI].offset556.i" to double*
  %loadedValue558.i = load double* %CastToValueType557.i, align 8
  %649 = fmul double %loadedValue558.i, %648
  %650 = load double* %589, align 8
  %651 = fadd double %650, %649
  %652 = load double addrspace(3)* %58, align 16
  %"&(pSB[currWI].offset)560.i" = add nuw i64 %CurrSBIndex..3.i, 752
  %"&pSB[currWI].offset561.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)560.i"
  %CastToValueType562.i = bitcast i8* %"&pSB[currWI].offset561.i" to double*
  %loadedValue563.i = load double* %CastToValueType562.i, align 8
  %653 = fmul double %loadedValue563.i, %652
  %654 = load double* %591, align 16
  %655 = fadd double %654, %653
  %656 = load double addrspace(3)* %60, align 8
  %"&(pSB[currWI].offset)565.i" = add nuw i64 %CurrSBIndex..3.i, 752
  %"&pSB[currWI].offset566.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)565.i"
  %CastToValueType567.i = bitcast i8* %"&pSB[currWI].offset566.i" to double*
  %loadedValue568.i = load double* %CastToValueType567.i, align 8
  %657 = fmul double %loadedValue568.i, %656
  %658 = load double* %593, align 8
  %659 = fadd double %658, %657
  %660 = load double addrspace(3)* %62, align 16
  %"&(pSB[currWI].offset)570.i" = add nuw i64 %CurrSBIndex..3.i, 752
  %"&pSB[currWI].offset571.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)570.i"
  %CastToValueType572.i = bitcast i8* %"&pSB[currWI].offset571.i" to double*
  %loadedValue573.i = load double* %CastToValueType572.i, align 8
  %661 = fmul double %loadedValue573.i, %660
  %662 = load double* %595, align 16
  %663 = fadd double %662, %661
  %664 = load double addrspace(3)* %64, align 8
  %"&(pSB[currWI].offset)575.i" = add nuw i64 %CurrSBIndex..3.i, 752
  %"&pSB[currWI].offset576.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)575.i"
  %CastToValueType577.i = bitcast i8* %"&pSB[currWI].offset576.i" to double*
  %loadedValue578.i = load double* %CastToValueType577.i, align 8
  %665 = fmul double %loadedValue578.i, %664
  %666 = load double* %597, align 8
  %667 = fadd double %666, %665
  %668 = load double addrspace(3)* %66, align 16
  %"&(pSB[currWI].offset)580.i" = add nuw i64 %CurrSBIndex..3.i, 752
  %"&pSB[currWI].offset581.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)580.i"
  %CastToValueType582.i = bitcast i8* %"&pSB[currWI].offset581.i" to double*
  %loadedValue583.i = load double* %CastToValueType582.i, align 8
  %669 = fmul double %loadedValue583.i, %668
  %670 = load double* %599, align 16
  %671 = fadd double %670, %669
  %672 = load double addrspace(3)* %68, align 8
  %"&(pSB[currWI].offset)585.i" = add nuw i64 %CurrSBIndex..3.i, 752
  %"&pSB[currWI].offset586.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)585.i"
  %CastToValueType587.i = bitcast i8* %"&pSB[currWI].offset586.i" to double*
  %loadedValue588.i = load double* %CastToValueType587.i, align 8
  %673 = fmul double %loadedValue588.i, %672
  %674 = load double* %601, align 8
  %675 = fadd double %674, %673
  %676 = load double addrspace(3)* %70, align 16
  %"&(pSB[currWI].offset)590.i" = add nuw i64 %CurrSBIndex..3.i, 752
  %"&pSB[currWI].offset591.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)590.i"
  %CastToValueType592.i = bitcast i8* %"&pSB[currWI].offset591.i" to double*
  %loadedValue593.i = load double* %CastToValueType592.i, align 8
  %677 = fmul double %loadedValue593.i, %676
  %678 = load double* %603, align 16
  %679 = fadd double %678, %677
  %680 = load double addrspace(3)* %72, align 8
  %"&(pSB[currWI].offset)595.i" = add nuw i64 %CurrSBIndex..3.i, 752
  %"&pSB[currWI].offset596.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)595.i"
  %CastToValueType597.i = bitcast i8* %"&pSB[currWI].offset596.i" to double*
  %loadedValue598.i = load double* %CastToValueType597.i, align 8
  %681 = fmul double %loadedValue598.i, %680
  %682 = load double* %605, align 8
  %683 = fadd double %682, %681
  %"&(pSB[currWI].offset)511.i" = add nuw i64 %CurrSBIndex..3.i, 744
  %"&pSB[currWI].offset512.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)511.i"
  %CastToValueType513.i = bitcast i8* %"&pSB[currWI].offset512.i" to double addrspace(1)**
  %loadedValue514.i = load double addrspace(1)** %CastToValueType513.i, align 8
  %684 = load double addrspace(1)* %loadedValue514.i, align 8
  %685 = load double addrspace(3)* %74, align 8
  %"&(pSB[currWI].offset)604.i" = add nuw i64 %CurrSBIndex..3.i, 760
  %"&pSB[currWI].offset605.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)604.i"
  %CastToValueType606.i = bitcast i8* %"&pSB[currWI].offset605.i" to double*
  %loadedValue607.i = load double* %CastToValueType606.i, align 8
  %686 = fmul double %loadedValue607.i, %685
  %687 = fadd double %623, %686
  %688 = load double addrspace(3)* %76, align 8
  %"&(pSB[currWI].offset)609.i" = add nuw i64 %CurrSBIndex..3.i, 760
  %"&pSB[currWI].offset610.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)609.i"
  %CastToValueType611.i = bitcast i8* %"&pSB[currWI].offset610.i" to double*
  %loadedValue612.i = load double* %CastToValueType611.i, align 8
  %689 = fmul double %loadedValue612.i, %688
  %690 = fadd double %627, %689
  %691 = load double addrspace(3)* %78, align 8
  %"&(pSB[currWI].offset)614.i" = add nuw i64 %CurrSBIndex..3.i, 760
  %"&pSB[currWI].offset615.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)614.i"
  %CastToValueType616.i = bitcast i8* %"&pSB[currWI].offset615.i" to double*
  %loadedValue617.i = load double* %CastToValueType616.i, align 8
  %692 = fmul double %loadedValue617.i, %691
  %693 = fadd double %631, %692
  %694 = load double addrspace(3)* %80, align 8
  %"&(pSB[currWI].offset)619.i" = add nuw i64 %CurrSBIndex..3.i, 760
  %"&pSB[currWI].offset620.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)619.i"
  %CastToValueType621.i = bitcast i8* %"&pSB[currWI].offset620.i" to double*
  %loadedValue622.i = load double* %CastToValueType621.i, align 8
  %695 = fmul double %loadedValue622.i, %694
  %696 = fadd double %635, %695
  %697 = load double addrspace(3)* %82, align 8
  %"&(pSB[currWI].offset)624.i" = add nuw i64 %CurrSBIndex..3.i, 760
  %"&pSB[currWI].offset625.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)624.i"
  %CastToValueType626.i = bitcast i8* %"&pSB[currWI].offset625.i" to double*
  %loadedValue627.i = load double* %CastToValueType626.i, align 8
  %698 = fmul double %loadedValue627.i, %697
  %699 = fadd double %639, %698
  %700 = load double addrspace(3)* %84, align 8
  %"&(pSB[currWI].offset)629.i" = add nuw i64 %CurrSBIndex..3.i, 760
  %"&pSB[currWI].offset630.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)629.i"
  %CastToValueType631.i = bitcast i8* %"&pSB[currWI].offset630.i" to double*
  %loadedValue632.i = load double* %CastToValueType631.i, align 8
  %701 = fmul double %loadedValue632.i, %700
  %702 = fadd double %643, %701
  %703 = load double addrspace(3)* %86, align 8
  %"&(pSB[currWI].offset)634.i" = add nuw i64 %CurrSBIndex..3.i, 760
  %"&pSB[currWI].offset635.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)634.i"
  %CastToValueType636.i = bitcast i8* %"&pSB[currWI].offset635.i" to double*
  %loadedValue637.i = load double* %CastToValueType636.i, align 8
  %704 = fmul double %loadedValue637.i, %703
  %705 = fadd double %647, %704
  %706 = load double addrspace(3)* %88, align 8
  %"&(pSB[currWI].offset)639.i" = add nuw i64 %CurrSBIndex..3.i, 760
  %"&pSB[currWI].offset640.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)639.i"
  %CastToValueType641.i = bitcast i8* %"&pSB[currWI].offset640.i" to double*
  %loadedValue642.i = load double* %CastToValueType641.i, align 8
  %707 = fmul double %loadedValue642.i, %706
  %708 = fadd double %651, %707
  %709 = load double addrspace(3)* %90, align 8
  %"&(pSB[currWI].offset)644.i" = add nuw i64 %CurrSBIndex..3.i, 760
  %"&pSB[currWI].offset645.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)644.i"
  %CastToValueType646.i = bitcast i8* %"&pSB[currWI].offset645.i" to double*
  %loadedValue647.i = load double* %CastToValueType646.i, align 8
  %710 = fmul double %loadedValue647.i, %709
  %711 = fadd double %655, %710
  %712 = load double addrspace(3)* %92, align 8
  %"&(pSB[currWI].offset)649.i" = add nuw i64 %CurrSBIndex..3.i, 760
  %"&pSB[currWI].offset650.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)649.i"
  %CastToValueType651.i = bitcast i8* %"&pSB[currWI].offset650.i" to double*
  %loadedValue652.i = load double* %CastToValueType651.i, align 8
  %713 = fmul double %loadedValue652.i, %712
  %714 = fadd double %659, %713
  %715 = load double addrspace(3)* %94, align 8
  %"&(pSB[currWI].offset)654.i" = add nuw i64 %CurrSBIndex..3.i, 760
  %"&pSB[currWI].offset655.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)654.i"
  %CastToValueType656.i = bitcast i8* %"&pSB[currWI].offset655.i" to double*
  %loadedValue657.i = load double* %CastToValueType656.i, align 8
  %716 = fmul double %loadedValue657.i, %715
  %717 = fadd double %663, %716
  %718 = load double addrspace(3)* %96, align 8
  %"&(pSB[currWI].offset)659.i" = add nuw i64 %CurrSBIndex..3.i, 760
  %"&pSB[currWI].offset660.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)659.i"
  %CastToValueType661.i = bitcast i8* %"&pSB[currWI].offset660.i" to double*
  %loadedValue662.i = load double* %CastToValueType661.i, align 8
  %719 = fmul double %loadedValue662.i, %718
  %720 = fadd double %667, %719
  %721 = load double addrspace(3)* %98, align 8
  %"&(pSB[currWI].offset)664.i" = add nuw i64 %CurrSBIndex..3.i, 760
  %"&pSB[currWI].offset665.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)664.i"
  %CastToValueType666.i = bitcast i8* %"&pSB[currWI].offset665.i" to double*
  %loadedValue667.i = load double* %CastToValueType666.i, align 8
  %722 = fmul double %loadedValue667.i, %721
  %723 = fadd double %671, %722
  %724 = load double addrspace(3)* %100, align 8
  %"&(pSB[currWI].offset)669.i" = add nuw i64 %CurrSBIndex..3.i, 760
  %"&pSB[currWI].offset670.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)669.i"
  %CastToValueType671.i = bitcast i8* %"&pSB[currWI].offset670.i" to double*
  %loadedValue672.i = load double* %CastToValueType671.i, align 8
  %725 = fmul double %loadedValue672.i, %724
  %726 = fadd double %675, %725
  %727 = load double addrspace(3)* %102, align 8
  %"&(pSB[currWI].offset)674.i" = add nuw i64 %CurrSBIndex..3.i, 760
  %"&pSB[currWI].offset675.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)674.i"
  %CastToValueType676.i = bitcast i8* %"&pSB[currWI].offset675.i" to double*
  %loadedValue677.i = load double* %CastToValueType676.i, align 8
  %728 = fmul double %loadedValue677.i, %727
  %729 = fadd double %679, %728
  %730 = load double addrspace(3)* %104, align 8
  %"&(pSB[currWI].offset)679.i" = add nuw i64 %CurrSBIndex..3.i, 760
  %"&pSB[currWI].offset680.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)679.i"
  %CastToValueType681.i = bitcast i8* %"&pSB[currWI].offset680.i" to double*
  %loadedValue682.i = load double* %CastToValueType681.i, align 8
  %731 = fmul double %loadedValue682.i, %730
  %732 = fadd double %683, %731
  %"&(pSB[currWI].offset)502.i" = add nuw i64 %CurrSBIndex..3.i, 736
  %"&pSB[currWI].offset503.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)502.i"
  %CastToValueType504.i = bitcast i8* %"&pSB[currWI].offset503.i" to double addrspace(1)**
  %loadedValue505.i = load double addrspace(1)** %CastToValueType504.i, align 8
  %733 = load double addrspace(1)* %loadedValue505.i, align 8
  %734 = load double addrspace(3)* %106, align 16
  %"&(pSB[currWI].offset)688.i" = add nuw i64 %CurrSBIndex..3.i, 768
  %"&pSB[currWI].offset689.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)688.i"
  %CastToValueType690.i = bitcast i8* %"&pSB[currWI].offset689.i" to double*
  %loadedValue691.i = load double* %CastToValueType690.i, align 8
  %735 = fmul double %loadedValue691.i, %734
  %736 = fadd double %687, %735
  %737 = load double addrspace(3)* %108, align 8
  %"&(pSB[currWI].offset)693.i" = add nuw i64 %CurrSBIndex..3.i, 768
  %"&pSB[currWI].offset694.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)693.i"
  %CastToValueType695.i = bitcast i8* %"&pSB[currWI].offset694.i" to double*
  %loadedValue696.i = load double* %CastToValueType695.i, align 8
  %738 = fmul double %loadedValue696.i, %737
  %739 = fadd double %690, %738
  %740 = load double addrspace(3)* %110, align 16
  %"&(pSB[currWI].offset)698.i" = add nuw i64 %CurrSBIndex..3.i, 768
  %"&pSB[currWI].offset699.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)698.i"
  %CastToValueType700.i = bitcast i8* %"&pSB[currWI].offset699.i" to double*
  %loadedValue701.i = load double* %CastToValueType700.i, align 8
  %741 = fmul double %loadedValue701.i, %740
  %742 = fadd double %693, %741
  %743 = load double addrspace(3)* %112, align 8
  %"&(pSB[currWI].offset)703.i" = add nuw i64 %CurrSBIndex..3.i, 768
  %"&pSB[currWI].offset704.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)703.i"
  %CastToValueType705.i = bitcast i8* %"&pSB[currWI].offset704.i" to double*
  %loadedValue706.i = load double* %CastToValueType705.i, align 8
  %744 = fmul double %loadedValue706.i, %743
  %745 = fadd double %696, %744
  %746 = load double addrspace(3)* %114, align 16
  %"&(pSB[currWI].offset)708.i" = add nuw i64 %CurrSBIndex..3.i, 768
  %"&pSB[currWI].offset709.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)708.i"
  %CastToValueType710.i = bitcast i8* %"&pSB[currWI].offset709.i" to double*
  %loadedValue711.i = load double* %CastToValueType710.i, align 8
  %747 = fmul double %loadedValue711.i, %746
  %748 = fadd double %699, %747
  %749 = load double addrspace(3)* %116, align 8
  %"&(pSB[currWI].offset)713.i" = add nuw i64 %CurrSBIndex..3.i, 768
  %"&pSB[currWI].offset714.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)713.i"
  %CastToValueType715.i = bitcast i8* %"&pSB[currWI].offset714.i" to double*
  %loadedValue716.i = load double* %CastToValueType715.i, align 8
  %750 = fmul double %loadedValue716.i, %749
  %751 = fadd double %702, %750
  %752 = load double addrspace(3)* %118, align 16
  %"&(pSB[currWI].offset)718.i" = add nuw i64 %CurrSBIndex..3.i, 768
  %"&pSB[currWI].offset719.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)718.i"
  %CastToValueType720.i = bitcast i8* %"&pSB[currWI].offset719.i" to double*
  %loadedValue721.i = load double* %CastToValueType720.i, align 8
  %753 = fmul double %loadedValue721.i, %752
  %754 = fadd double %705, %753
  %755 = load double addrspace(3)* %120, align 8
  %"&(pSB[currWI].offset)723.i" = add nuw i64 %CurrSBIndex..3.i, 768
  %"&pSB[currWI].offset724.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)723.i"
  %CastToValueType725.i = bitcast i8* %"&pSB[currWI].offset724.i" to double*
  %loadedValue726.i = load double* %CastToValueType725.i, align 8
  %756 = fmul double %loadedValue726.i, %755
  %757 = fadd double %708, %756
  %758 = load double addrspace(3)* %122, align 16
  %"&(pSB[currWI].offset)728.i" = add nuw i64 %CurrSBIndex..3.i, 768
  %"&pSB[currWI].offset729.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)728.i"
  %CastToValueType730.i = bitcast i8* %"&pSB[currWI].offset729.i" to double*
  %loadedValue731.i = load double* %CastToValueType730.i, align 8
  %759 = fmul double %loadedValue731.i, %758
  %760 = fadd double %711, %759
  %761 = load double addrspace(3)* %124, align 8
  %"&(pSB[currWI].offset)733.i" = add nuw i64 %CurrSBIndex..3.i, 768
  %"&pSB[currWI].offset734.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)733.i"
  %CastToValueType735.i = bitcast i8* %"&pSB[currWI].offset734.i" to double*
  %loadedValue736.i = load double* %CastToValueType735.i, align 8
  %762 = fmul double %loadedValue736.i, %761
  %763 = fadd double %714, %762
  %764 = load double addrspace(3)* %126, align 16
  %"&(pSB[currWI].offset)738.i" = add nuw i64 %CurrSBIndex..3.i, 768
  %"&pSB[currWI].offset739.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)738.i"
  %CastToValueType740.i = bitcast i8* %"&pSB[currWI].offset739.i" to double*
  %loadedValue741.i = load double* %CastToValueType740.i, align 8
  %765 = fmul double %loadedValue741.i, %764
  %766 = fadd double %717, %765
  %767 = load double addrspace(3)* %128, align 8
  %"&(pSB[currWI].offset)743.i" = add nuw i64 %CurrSBIndex..3.i, 768
  %"&pSB[currWI].offset744.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)743.i"
  %CastToValueType745.i = bitcast i8* %"&pSB[currWI].offset744.i" to double*
  %loadedValue746.i = load double* %CastToValueType745.i, align 8
  %768 = fmul double %loadedValue746.i, %767
  %769 = fadd double %720, %768
  %770 = load double addrspace(3)* %130, align 16
  %"&(pSB[currWI].offset)748.i" = add nuw i64 %CurrSBIndex..3.i, 768
  %"&pSB[currWI].offset749.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)748.i"
  %CastToValueType750.i = bitcast i8* %"&pSB[currWI].offset749.i" to double*
  %loadedValue751.i = load double* %CastToValueType750.i, align 8
  %771 = fmul double %loadedValue751.i, %770
  %772 = fadd double %723, %771
  %773 = load double addrspace(3)* %132, align 8
  %"&(pSB[currWI].offset)753.i" = add nuw i64 %CurrSBIndex..3.i, 768
  %"&pSB[currWI].offset754.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)753.i"
  %CastToValueType755.i = bitcast i8* %"&pSB[currWI].offset754.i" to double*
  %loadedValue756.i = load double* %CastToValueType755.i, align 8
  %774 = fmul double %loadedValue756.i, %773
  %775 = fadd double %726, %774
  %776 = load double addrspace(3)* %134, align 16
  %"&(pSB[currWI].offset)758.i" = add nuw i64 %CurrSBIndex..3.i, 768
  %"&pSB[currWI].offset759.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)758.i"
  %CastToValueType760.i = bitcast i8* %"&pSB[currWI].offset759.i" to double*
  %loadedValue761.i = load double* %CastToValueType760.i, align 8
  %777 = fmul double %loadedValue761.i, %776
  %778 = fadd double %729, %777
  %779 = load double addrspace(3)* %136, align 8
  %"&(pSB[currWI].offset)763.i" = add nuw i64 %CurrSBIndex..3.i, 768
  %"&pSB[currWI].offset764.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)763.i"
  %CastToValueType765.i = bitcast i8* %"&pSB[currWI].offset764.i" to double*
  %loadedValue766.i = load double* %CastToValueType765.i, align 8
  %780 = fmul double %loadedValue766.i, %779
  %781 = fadd double %732, %780
  %"&(pSB[currWI].offset)493.i" = add nuw i64 %CurrSBIndex..3.i, 728
  %"&pSB[currWI].offset494.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)493.i"
  %CastToValueType495.i = bitcast i8* %"&pSB[currWI].offset494.i" to double addrspace(1)**
  %loadedValue496.i = load double addrspace(1)** %CastToValueType495.i, align 8
  %782 = load double addrspace(1)* %loadedValue496.i, align 8
  %783 = load double addrspace(3)* %138, align 8
  %"&(pSB[currWI].offset)772.i" = add nuw i64 %CurrSBIndex..3.i, 776
  %"&pSB[currWI].offset773.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)772.i"
  %CastToValueType774.i = bitcast i8* %"&pSB[currWI].offset773.i" to double*
  %loadedValue775.i = load double* %CastToValueType774.i, align 8
  %784 = fmul double %loadedValue775.i, %783
  %785 = fadd double %736, %784
  %786 = load double addrspace(3)* %140, align 8
  %"&(pSB[currWI].offset)777.i" = add nuw i64 %CurrSBIndex..3.i, 776
  %"&pSB[currWI].offset778.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)777.i"
  %CastToValueType779.i = bitcast i8* %"&pSB[currWI].offset778.i" to double*
  %loadedValue780.i = load double* %CastToValueType779.i, align 8
  %787 = fmul double %loadedValue780.i, %786
  %788 = fadd double %739, %787
  %789 = load double addrspace(3)* %142, align 8
  %"&(pSB[currWI].offset)782.i" = add nuw i64 %CurrSBIndex..3.i, 776
  %"&pSB[currWI].offset783.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)782.i"
  %CastToValueType784.i = bitcast i8* %"&pSB[currWI].offset783.i" to double*
  %loadedValue785.i = load double* %CastToValueType784.i, align 8
  %790 = fmul double %loadedValue785.i, %789
  %791 = fadd double %742, %790
  %792 = load double addrspace(3)* %144, align 8
  %"&(pSB[currWI].offset)787.i" = add nuw i64 %CurrSBIndex..3.i, 776
  %"&pSB[currWI].offset788.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)787.i"
  %CastToValueType789.i = bitcast i8* %"&pSB[currWI].offset788.i" to double*
  %loadedValue790.i = load double* %CastToValueType789.i, align 8
  %793 = fmul double %loadedValue790.i, %792
  %794 = fadd double %745, %793
  %795 = load double addrspace(3)* %146, align 8
  %"&(pSB[currWI].offset)792.i" = add nuw i64 %CurrSBIndex..3.i, 776
  %"&pSB[currWI].offset793.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)792.i"
  %CastToValueType794.i = bitcast i8* %"&pSB[currWI].offset793.i" to double*
  %loadedValue795.i = load double* %CastToValueType794.i, align 8
  %796 = fmul double %loadedValue795.i, %795
  %797 = fadd double %748, %796
  %798 = load double addrspace(3)* %148, align 8
  %"&(pSB[currWI].offset)797.i" = add nuw i64 %CurrSBIndex..3.i, 776
  %"&pSB[currWI].offset798.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)797.i"
  %CastToValueType799.i = bitcast i8* %"&pSB[currWI].offset798.i" to double*
  %loadedValue800.i = load double* %CastToValueType799.i, align 8
  %799 = fmul double %loadedValue800.i, %798
  %800 = fadd double %751, %799
  %801 = load double addrspace(3)* %150, align 8
  %"&(pSB[currWI].offset)802.i" = add nuw i64 %CurrSBIndex..3.i, 776
  %"&pSB[currWI].offset803.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)802.i"
  %CastToValueType804.i = bitcast i8* %"&pSB[currWI].offset803.i" to double*
  %loadedValue805.i = load double* %CastToValueType804.i, align 8
  %802 = fmul double %loadedValue805.i, %801
  %803 = fadd double %754, %802
  %804 = load double addrspace(3)* %152, align 8
  %"&(pSB[currWI].offset)807.i" = add nuw i64 %CurrSBIndex..3.i, 776
  %"&pSB[currWI].offset808.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)807.i"
  %CastToValueType809.i = bitcast i8* %"&pSB[currWI].offset808.i" to double*
  %loadedValue810.i = load double* %CastToValueType809.i, align 8
  %805 = fmul double %loadedValue810.i, %804
  %806 = fadd double %757, %805
  %807 = load double addrspace(3)* %154, align 8
  %"&(pSB[currWI].offset)812.i" = add nuw i64 %CurrSBIndex..3.i, 776
  %"&pSB[currWI].offset813.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)812.i"
  %CastToValueType814.i = bitcast i8* %"&pSB[currWI].offset813.i" to double*
  %loadedValue815.i = load double* %CastToValueType814.i, align 8
  %808 = fmul double %loadedValue815.i, %807
  %809 = fadd double %760, %808
  %810 = load double addrspace(3)* %156, align 8
  %"&(pSB[currWI].offset)817.i" = add nuw i64 %CurrSBIndex..3.i, 776
  %"&pSB[currWI].offset818.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)817.i"
  %CastToValueType819.i = bitcast i8* %"&pSB[currWI].offset818.i" to double*
  %loadedValue820.i = load double* %CastToValueType819.i, align 8
  %811 = fmul double %loadedValue820.i, %810
  %812 = fadd double %763, %811
  %813 = load double addrspace(3)* %158, align 8
  %"&(pSB[currWI].offset)822.i" = add nuw i64 %CurrSBIndex..3.i, 776
  %"&pSB[currWI].offset823.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)822.i"
  %CastToValueType824.i = bitcast i8* %"&pSB[currWI].offset823.i" to double*
  %loadedValue825.i = load double* %CastToValueType824.i, align 8
  %814 = fmul double %loadedValue825.i, %813
  %815 = fadd double %766, %814
  %816 = load double addrspace(3)* %160, align 8
  %"&(pSB[currWI].offset)827.i" = add nuw i64 %CurrSBIndex..3.i, 776
  %"&pSB[currWI].offset828.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)827.i"
  %CastToValueType829.i = bitcast i8* %"&pSB[currWI].offset828.i" to double*
  %loadedValue830.i = load double* %CastToValueType829.i, align 8
  %817 = fmul double %loadedValue830.i, %816
  %818 = fadd double %769, %817
  %819 = load double addrspace(3)* %162, align 8
  %"&(pSB[currWI].offset)832.i" = add nuw i64 %CurrSBIndex..3.i, 776
  %"&pSB[currWI].offset833.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)832.i"
  %CastToValueType834.i = bitcast i8* %"&pSB[currWI].offset833.i" to double*
  %loadedValue835.i = load double* %CastToValueType834.i, align 8
  %820 = fmul double %loadedValue835.i, %819
  %821 = fadd double %772, %820
  %822 = load double addrspace(3)* %164, align 8
  %"&(pSB[currWI].offset)837.i" = add nuw i64 %CurrSBIndex..3.i, 776
  %"&pSB[currWI].offset838.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)837.i"
  %CastToValueType839.i = bitcast i8* %"&pSB[currWI].offset838.i" to double*
  %loadedValue840.i = load double* %CastToValueType839.i, align 8
  %823 = fmul double %loadedValue840.i, %822
  %824 = fadd double %775, %823
  %825 = load double addrspace(3)* %166, align 8
  %"&(pSB[currWI].offset)842.i" = add nuw i64 %CurrSBIndex..3.i, 776
  %"&pSB[currWI].offset843.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)842.i"
  %CastToValueType844.i = bitcast i8* %"&pSB[currWI].offset843.i" to double*
  %loadedValue845.i = load double* %CastToValueType844.i, align 8
  %826 = fmul double %loadedValue845.i, %825
  %827 = fadd double %778, %826
  %828 = load double addrspace(3)* %168, align 8
  %"&(pSB[currWI].offset)847.i" = add nuw i64 %CurrSBIndex..3.i, 776
  %"&pSB[currWI].offset848.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)847.i"
  %CastToValueType849.i = bitcast i8* %"&pSB[currWI].offset848.i" to double*
  %loadedValue850.i = load double* %CastToValueType849.i, align 8
  %829 = fmul double %loadedValue850.i, %828
  %830 = fadd double %781, %829
  %"&(pSB[currWI].offset)484.i" = add nuw i64 %CurrSBIndex..3.i, 720
  %"&pSB[currWI].offset485.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)484.i"
  %CastToValueType486.i = bitcast i8* %"&pSB[currWI].offset485.i" to double addrspace(1)**
  %loadedValue487.i = load double addrspace(1)** %CastToValueType486.i, align 8
  %831 = load double addrspace(1)* %loadedValue487.i, align 8
  %832 = load double addrspace(3)* %170, align 16
  %833 = fmul double %684, %832
  %834 = fadd double %785, %833
  %835 = load double addrspace(3)* %172, align 8
  %836 = fmul double %684, %835
  %837 = fadd double %788, %836
  %838 = load double addrspace(3)* %174, align 16
  %839 = fmul double %684, %838
  %840 = fadd double %791, %839
  %841 = load double addrspace(3)* %176, align 8
  %842 = fmul double %684, %841
  %843 = fadd double %794, %842
  %844 = load double addrspace(3)* %178, align 16
  %845 = fmul double %684, %844
  %846 = fadd double %797, %845
  %847 = load double addrspace(3)* %180, align 8
  %848 = fmul double %684, %847
  %849 = fadd double %800, %848
  %850 = load double addrspace(3)* %182, align 16
  %851 = fmul double %684, %850
  %852 = fadd double %803, %851
  %853 = load double addrspace(3)* %184, align 8
  %854 = fmul double %684, %853
  %855 = fadd double %806, %854
  %856 = load double addrspace(3)* %186, align 16
  %857 = fmul double %684, %856
  %858 = fadd double %809, %857
  %859 = load double addrspace(3)* %188, align 8
  %860 = fmul double %684, %859
  %861 = fadd double %812, %860
  %862 = load double addrspace(3)* %190, align 16
  %863 = fmul double %684, %862
  %864 = fadd double %815, %863
  %865 = load double addrspace(3)* %192, align 8
  %866 = fmul double %684, %865
  %867 = fadd double %818, %866
  %868 = load double addrspace(3)* %194, align 16
  %869 = fmul double %684, %868
  %870 = fadd double %821, %869
  %871 = load double addrspace(3)* %196, align 8
  %872 = fmul double %684, %871
  %873 = fadd double %824, %872
  %874 = load double addrspace(3)* %198, align 16
  %875 = fmul double %684, %874
  %876 = fadd double %827, %875
  %877 = load double addrspace(3)* %200, align 8
  %878 = fmul double %684, %877
  %879 = fadd double %830, %878
  %"&(pSB[currWI].offset)475.i" = add nuw i64 %CurrSBIndex..3.i, 712
  %"&pSB[currWI].offset476.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)475.i"
  %CastToValueType477.i = bitcast i8* %"&pSB[currWI].offset476.i" to double addrspace(1)**
  %loadedValue478.i = load double addrspace(1)** %CastToValueType477.i, align 8
  %880 = load double addrspace(1)* %loadedValue478.i, align 8
  %881 = load double addrspace(3)* %202, align 8
  %882 = fmul double %733, %881
  %883 = fadd double %834, %882
  %884 = load double addrspace(3)* %204, align 8
  %885 = fmul double %733, %884
  %886 = fadd double %837, %885
  %887 = load double addrspace(3)* %206, align 8
  %888 = fmul double %733, %887
  %889 = fadd double %840, %888
  %890 = load double addrspace(3)* %208, align 8
  %891 = fmul double %733, %890
  %892 = fadd double %843, %891
  %893 = load double addrspace(3)* %210, align 8
  %894 = fmul double %733, %893
  %895 = fadd double %846, %894
  %896 = load double addrspace(3)* %212, align 8
  %897 = fmul double %733, %896
  %898 = fadd double %849, %897
  %899 = load double addrspace(3)* %214, align 8
  %900 = fmul double %733, %899
  %901 = fadd double %852, %900
  %902 = load double addrspace(3)* %216, align 8
  %903 = fmul double %733, %902
  %904 = fadd double %855, %903
  %905 = load double addrspace(3)* %218, align 8
  %906 = fmul double %733, %905
  %907 = fadd double %858, %906
  %908 = load double addrspace(3)* %220, align 8
  %909 = fmul double %733, %908
  %910 = fadd double %861, %909
  %911 = load double addrspace(3)* %222, align 8
  %912 = fmul double %733, %911
  %913 = fadd double %864, %912
  %914 = load double addrspace(3)* %224, align 8
  %915 = fmul double %733, %914
  %916 = fadd double %867, %915
  %917 = load double addrspace(3)* %226, align 8
  %918 = fmul double %733, %917
  %919 = fadd double %870, %918
  %920 = load double addrspace(3)* %228, align 8
  %921 = fmul double %733, %920
  %922 = fadd double %873, %921
  %923 = load double addrspace(3)* %230, align 8
  %924 = fmul double %733, %923
  %925 = fadd double %876, %924
  %926 = load double addrspace(3)* %232, align 8
  %927 = fmul double %733, %926
  %928 = fadd double %879, %927
  %"&(pSB[currWI].offset)466.i" = add nuw i64 %CurrSBIndex..3.i, 704
  %"&pSB[currWI].offset467.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)466.i"
  %CastToValueType468.i = bitcast i8* %"&pSB[currWI].offset467.i" to double addrspace(1)**
  %loadedValue469.i = load double addrspace(1)** %CastToValueType468.i, align 8
  %929 = load double addrspace(1)* %loadedValue469.i, align 8
  %930 = load double addrspace(3)* %234, align 16
  %931 = fmul double %782, %930
  %932 = fadd double %883, %931
  %933 = load double addrspace(3)* %236, align 8
  %934 = fmul double %782, %933
  %935 = fadd double %886, %934
  %936 = load double addrspace(3)* %238, align 16
  %937 = fmul double %782, %936
  %938 = fadd double %889, %937
  %939 = load double addrspace(3)* %240, align 8
  %940 = fmul double %782, %939
  %941 = fadd double %892, %940
  %942 = load double addrspace(3)* %242, align 16
  %943 = fmul double %782, %942
  %944 = fadd double %895, %943
  %945 = load double addrspace(3)* %244, align 8
  %946 = fmul double %782, %945
  %947 = fadd double %898, %946
  %948 = load double addrspace(3)* %246, align 16
  %949 = fmul double %782, %948
  %950 = fadd double %901, %949
  %951 = load double addrspace(3)* %248, align 8
  %952 = fmul double %782, %951
  %953 = fadd double %904, %952
  %954 = load double addrspace(3)* %250, align 16
  %955 = fmul double %782, %954
  %956 = fadd double %907, %955
  %957 = load double addrspace(3)* %252, align 8
  %958 = fmul double %782, %957
  %959 = fadd double %910, %958
  %960 = load double addrspace(3)* %254, align 16
  %961 = fmul double %782, %960
  %962 = fadd double %913, %961
  %963 = load double addrspace(3)* %256, align 8
  %964 = fmul double %782, %963
  %965 = fadd double %916, %964
  %966 = load double addrspace(3)* %258, align 16
  %967 = fmul double %782, %966
  %968 = fadd double %919, %967
  %969 = load double addrspace(3)* %260, align 8
  %970 = fmul double %782, %969
  %971 = fadd double %922, %970
  %972 = load double addrspace(3)* %262, align 16
  %973 = fmul double %782, %972
  %974 = fadd double %925, %973
  %975 = load double addrspace(3)* %264, align 8
  %976 = fmul double %782, %975
  %977 = fadd double %928, %976
  %"&(pSB[currWI].offset)457.i" = add nuw i64 %CurrSBIndex..3.i, 696
  %"&pSB[currWI].offset458.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)457.i"
  %CastToValueType459.i = bitcast i8* %"&pSB[currWI].offset458.i" to double addrspace(1)**
  %loadedValue460.i = load double addrspace(1)** %CastToValueType459.i, align 8
  %978 = load double addrspace(1)* %loadedValue460.i, align 8
  %979 = load double addrspace(3)* %266, align 8
  %980 = fmul double %831, %979
  %981 = fadd double %932, %980
  %982 = load double addrspace(3)* %268, align 8
  %983 = fmul double %831, %982
  %984 = fadd double %935, %983
  %985 = load double addrspace(3)* %270, align 8
  %986 = fmul double %831, %985
  %987 = fadd double %938, %986
  %988 = load double addrspace(3)* %272, align 8
  %989 = fmul double %831, %988
  %990 = fadd double %941, %989
  %991 = load double addrspace(3)* %274, align 8
  %992 = fmul double %831, %991
  %993 = fadd double %944, %992
  %994 = load double addrspace(3)* %276, align 8
  %995 = fmul double %831, %994
  %996 = fadd double %947, %995
  %997 = load double addrspace(3)* %278, align 8
  %998 = fmul double %831, %997
  %999 = fadd double %950, %998
  %1000 = load double addrspace(3)* %280, align 8
  %1001 = fmul double %831, %1000
  %1002 = fadd double %953, %1001
  %1003 = load double addrspace(3)* %282, align 8
  %1004 = fmul double %831, %1003
  %1005 = fadd double %956, %1004
  %1006 = load double addrspace(3)* %284, align 8
  %1007 = fmul double %831, %1006
  %1008 = fadd double %959, %1007
  %1009 = load double addrspace(3)* %286, align 8
  %1010 = fmul double %831, %1009
  %1011 = fadd double %962, %1010
  %1012 = load double addrspace(3)* %288, align 8
  %1013 = fmul double %831, %1012
  %1014 = fadd double %965, %1013
  %1015 = load double addrspace(3)* %290, align 8
  %1016 = fmul double %831, %1015
  %1017 = fadd double %968, %1016
  %1018 = load double addrspace(3)* %292, align 8
  %1019 = fmul double %831, %1018
  %1020 = fadd double %971, %1019
  %1021 = load double addrspace(3)* %294, align 8
  %1022 = fmul double %831, %1021
  %1023 = fadd double %974, %1022
  %1024 = load double addrspace(3)* %296, align 8
  %1025 = fmul double %831, %1024
  %1026 = fadd double %977, %1025
  %"&(pSB[currWI].offset)448.i" = add nuw i64 %CurrSBIndex..3.i, 688
  %"&pSB[currWI].offset449.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)448.i"
  %CastToValueType450.i = bitcast i8* %"&pSB[currWI].offset449.i" to double addrspace(1)**
  %loadedValue451.i = load double addrspace(1)** %CastToValueType450.i, align 8
  %1027 = load double addrspace(1)* %loadedValue451.i, align 8
  %1028 = load double addrspace(3)* %298, align 16
  %1029 = fmul double %880, %1028
  %1030 = fadd double %981, %1029
  %1031 = load double addrspace(3)* %300, align 8
  %1032 = fmul double %880, %1031
  %1033 = fadd double %984, %1032
  %1034 = load double addrspace(3)* %302, align 16
  %1035 = fmul double %880, %1034
  %1036 = fadd double %987, %1035
  %1037 = load double addrspace(3)* %304, align 8
  %1038 = fmul double %880, %1037
  %1039 = fadd double %990, %1038
  %1040 = load double addrspace(3)* %306, align 16
  %1041 = fmul double %880, %1040
  %1042 = fadd double %993, %1041
  %1043 = load double addrspace(3)* %308, align 8
  %1044 = fmul double %880, %1043
  %1045 = fadd double %996, %1044
  %1046 = load double addrspace(3)* %310, align 16
  %1047 = fmul double %880, %1046
  %1048 = fadd double %999, %1047
  %1049 = load double addrspace(3)* %312, align 8
  %1050 = fmul double %880, %1049
  %1051 = fadd double %1002, %1050
  %1052 = load double addrspace(3)* %314, align 16
  %1053 = fmul double %880, %1052
  %1054 = fadd double %1005, %1053
  %1055 = load double addrspace(3)* %316, align 8
  %1056 = fmul double %880, %1055
  %1057 = fadd double %1008, %1056
  %1058 = load double addrspace(3)* %318, align 16
  %1059 = fmul double %880, %1058
  %1060 = fadd double %1011, %1059
  %1061 = load double addrspace(3)* %320, align 8
  %1062 = fmul double %880, %1061
  %1063 = fadd double %1014, %1062
  %1064 = load double addrspace(3)* %322, align 16
  %1065 = fmul double %880, %1064
  %1066 = fadd double %1017, %1065
  %1067 = load double addrspace(3)* %324, align 8
  %1068 = fmul double %880, %1067
  %1069 = fadd double %1020, %1068
  %1070 = load double addrspace(3)* %326, align 16
  %1071 = fmul double %880, %1070
  %1072 = fadd double %1023, %1071
  %1073 = load double addrspace(3)* %328, align 8
  %1074 = fmul double %880, %1073
  %1075 = fadd double %1026, %1074
  %"&(pSB[currWI].offset)439.i" = add nuw i64 %CurrSBIndex..3.i, 680
  %"&pSB[currWI].offset440.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)439.i"
  %CastToValueType441.i = bitcast i8* %"&pSB[currWI].offset440.i" to double addrspace(1)**
  %loadedValue442.i = load double addrspace(1)** %CastToValueType441.i, align 8
  %1076 = load double addrspace(1)* %loadedValue442.i, align 8
  store double %1076, double* %574, align 16
  %1077 = load double addrspace(3)* %330, align 8
  %1078 = fmul double %929, %1077
  %1079 = fadd double %1030, %1078
  %1080 = load double addrspace(3)* %332, align 8
  %1081 = fmul double %929, %1080
  %1082 = fadd double %1033, %1081
  %1083 = load double addrspace(3)* %334, align 8
  %1084 = fmul double %929, %1083
  %1085 = fadd double %1036, %1084
  %1086 = load double addrspace(3)* %336, align 8
  %1087 = fmul double %929, %1086
  %1088 = fadd double %1039, %1087
  %1089 = load double addrspace(3)* %338, align 8
  %1090 = fmul double %929, %1089
  %1091 = fadd double %1042, %1090
  %1092 = load double addrspace(3)* %340, align 8
  %1093 = fmul double %929, %1092
  %1094 = fadd double %1045, %1093
  %1095 = load double addrspace(3)* %342, align 8
  %1096 = fmul double %929, %1095
  %1097 = fadd double %1048, %1096
  %1098 = load double addrspace(3)* %344, align 8
  %1099 = fmul double %929, %1098
  %1100 = fadd double %1051, %1099
  %1101 = load double addrspace(3)* %346, align 8
  %1102 = fmul double %929, %1101
  %1103 = fadd double %1054, %1102
  %1104 = load double addrspace(3)* %348, align 8
  %1105 = fmul double %929, %1104
  %1106 = fadd double %1057, %1105
  %1107 = load double addrspace(3)* %350, align 8
  %1108 = fmul double %929, %1107
  %1109 = fadd double %1060, %1108
  %1110 = load double addrspace(3)* %352, align 8
  %1111 = fmul double %929, %1110
  %1112 = fadd double %1063, %1111
  %1113 = load double addrspace(3)* %354, align 8
  %1114 = fmul double %929, %1113
  %1115 = fadd double %1066, %1114
  %1116 = load double addrspace(3)* %356, align 8
  %1117 = fmul double %929, %1116
  %1118 = fadd double %1069, %1117
  %1119 = load double addrspace(3)* %358, align 8
  %1120 = fmul double %929, %1119
  %1121 = fadd double %1072, %1120
  %1122 = load double addrspace(3)* %360, align 8
  %1123 = fmul double %929, %1122
  %1124 = fadd double %1075, %1123
  %"&(pSB[currWI].offset)430.i" = add nuw i64 %CurrSBIndex..3.i, 672
  %"&pSB[currWI].offset431.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)430.i"
  %CastToValueType432.i = bitcast i8* %"&pSB[currWI].offset431.i" to double addrspace(1)**
  %loadedValue433.i = load double addrspace(1)** %CastToValueType432.i, align 8
  %1125 = load double addrspace(1)* %loadedValue433.i, align 8
  store double %1125, double* %607, align 8
  %1126 = load double addrspace(3)* %362, align 16
  %1127 = fmul double %978, %1126
  %1128 = fadd double %1079, %1127
  %1129 = load double addrspace(3)* %364, align 8
  %1130 = fmul double %978, %1129
  %1131 = fadd double %1082, %1130
  %1132 = load double addrspace(3)* %366, align 16
  %1133 = fmul double %978, %1132
  %1134 = fadd double %1085, %1133
  %1135 = load double addrspace(3)* %368, align 8
  %1136 = fmul double %978, %1135
  %1137 = fadd double %1088, %1136
  %1138 = load double addrspace(3)* %370, align 16
  %1139 = fmul double %978, %1138
  %1140 = fadd double %1091, %1139
  %1141 = load double addrspace(3)* %372, align 8
  %1142 = fmul double %978, %1141
  %1143 = fadd double %1094, %1142
  %1144 = load double addrspace(3)* %374, align 16
  %1145 = fmul double %978, %1144
  %1146 = fadd double %1097, %1145
  %1147 = load double addrspace(3)* %376, align 8
  %1148 = fmul double %978, %1147
  %1149 = fadd double %1100, %1148
  %1150 = load double addrspace(3)* %378, align 16
  %1151 = fmul double %978, %1150
  %1152 = fadd double %1103, %1151
  %1153 = load double addrspace(3)* %380, align 8
  %1154 = fmul double %978, %1153
  %1155 = fadd double %1106, %1154
  %1156 = load double addrspace(3)* %382, align 16
  %1157 = fmul double %978, %1156
  %1158 = fadd double %1109, %1157
  %1159 = load double addrspace(3)* %384, align 8
  %1160 = fmul double %978, %1159
  %1161 = fadd double %1112, %1160
  %1162 = load double addrspace(3)* %386, align 16
  %1163 = fmul double %978, %1162
  %1164 = fadd double %1115, %1163
  %1165 = load double addrspace(3)* %388, align 8
  %1166 = fmul double %978, %1165
  %1167 = fadd double %1118, %1166
  %1168 = load double addrspace(3)* %390, align 16
  %1169 = fmul double %978, %1168
  %1170 = fadd double %1121, %1169
  %1171 = load double addrspace(3)* %392, align 8
  %1172 = fmul double %978, %1171
  %1173 = fadd double %1124, %1172
  %"&(pSB[currWI].offset)421.i" = add nuw i64 %CurrSBIndex..3.i, 664
  %"&pSB[currWI].offset422.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)421.i"
  %CastToValueType423.i = bitcast i8* %"&pSB[currWI].offset422.i" to double addrspace(1)**
  %loadedValue424.i = load double addrspace(1)** %CastToValueType423.i, align 8
  %1174 = load double addrspace(1)* %loadedValue424.i, align 8
  store double %1174, double* %609, align 16
  %1175 = load double addrspace(3)* %394, align 8
  %1176 = fmul double %1027, %1175
  %1177 = fadd double %1128, %1176
  %1178 = load double addrspace(3)* %396, align 8
  %1179 = fmul double %1027, %1178
  %1180 = fadd double %1131, %1179
  %1181 = load double addrspace(3)* %398, align 8
  %1182 = fmul double %1027, %1181
  %1183 = fadd double %1134, %1182
  %1184 = load double addrspace(3)* %400, align 8
  %1185 = fmul double %1027, %1184
  %1186 = fadd double %1137, %1185
  %1187 = load double addrspace(3)* %402, align 8
  %1188 = fmul double %1027, %1187
  %1189 = fadd double %1140, %1188
  %1190 = load double addrspace(3)* %404, align 8
  %1191 = fmul double %1027, %1190
  %1192 = fadd double %1143, %1191
  %1193 = load double addrspace(3)* %406, align 8
  %1194 = fmul double %1027, %1193
  %1195 = fadd double %1146, %1194
  %1196 = load double addrspace(3)* %408, align 8
  %1197 = fmul double %1027, %1196
  %1198 = fadd double %1149, %1197
  %1199 = load double addrspace(3)* %410, align 8
  %1200 = fmul double %1027, %1199
  %1201 = fadd double %1152, %1200
  %1202 = load double addrspace(3)* %412, align 8
  %1203 = fmul double %1027, %1202
  %1204 = fadd double %1155, %1203
  %1205 = load double addrspace(3)* %414, align 8
  %1206 = fmul double %1027, %1205
  %1207 = fadd double %1158, %1206
  %1208 = load double addrspace(3)* %416, align 8
  %1209 = fmul double %1027, %1208
  %1210 = fadd double %1161, %1209
  %1211 = load double addrspace(3)* %418, align 8
  %1212 = fmul double %1027, %1211
  %1213 = fadd double %1164, %1212
  %1214 = load double addrspace(3)* %420, align 8
  %1215 = fmul double %1027, %1214
  %1216 = fadd double %1167, %1215
  %1217 = load double addrspace(3)* %422, align 8
  %1218 = fmul double %1027, %1217
  %1219 = fadd double %1170, %1218
  %1220 = load double addrspace(3)* %424, align 8
  %1221 = fmul double %1027, %1220
  %1222 = fadd double %1173, %1221
  %"&(pSB[currWI].offset)412.i" = add nuw i64 %CurrSBIndex..3.i, 656
  %"&pSB[currWI].offset413.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)412.i"
  %CastToValueType414.i = bitcast i8* %"&pSB[currWI].offset413.i" to double addrspace(1)**
  %loadedValue415.i = load double addrspace(1)** %CastToValueType414.i, align 8
  %1223 = load double addrspace(1)* %loadedValue415.i, align 8
  store double %1223, double* %611, align 8
  %1224 = load double addrspace(3)* %426, align 16
  %1225 = fmul double %1076, %1224
  %1226 = fadd double %1177, %1225
  %1227 = load double addrspace(3)* %428, align 8
  %1228 = fmul double %1076, %1227
  %1229 = fadd double %1180, %1228
  %1230 = load double addrspace(3)* %430, align 16
  %1231 = fmul double %1076, %1230
  %1232 = fadd double %1183, %1231
  %1233 = load double addrspace(3)* %432, align 8
  %1234 = fmul double %1076, %1233
  %1235 = fadd double %1186, %1234
  %1236 = load double addrspace(3)* %434, align 16
  %1237 = fmul double %1076, %1236
  %1238 = fadd double %1189, %1237
  %1239 = load double addrspace(3)* %436, align 8
  %1240 = fmul double %1076, %1239
  %1241 = fadd double %1192, %1240
  %1242 = load double addrspace(3)* %438, align 16
  %1243 = fmul double %1076, %1242
  %1244 = fadd double %1195, %1243
  %1245 = load double addrspace(3)* %440, align 8
  %1246 = fmul double %1076, %1245
  %1247 = fadd double %1198, %1246
  %1248 = load double addrspace(3)* %442, align 16
  %1249 = fmul double %1076, %1248
  %1250 = fadd double %1201, %1249
  %1251 = load double addrspace(3)* %444, align 8
  %1252 = fmul double %1076, %1251
  %1253 = fadd double %1204, %1252
  %1254 = load double addrspace(3)* %446, align 16
  %1255 = fmul double %1076, %1254
  %1256 = fadd double %1207, %1255
  %1257 = load double addrspace(3)* %448, align 8
  %1258 = fmul double %1076, %1257
  %1259 = fadd double %1210, %1258
  %1260 = load double addrspace(3)* %450, align 16
  %1261 = fmul double %1076, %1260
  %1262 = fadd double %1213, %1261
  %1263 = load double addrspace(3)* %452, align 8
  %1264 = fmul double %1076, %1263
  %1265 = fadd double %1216, %1264
  %1266 = load double addrspace(3)* %454, align 16
  %1267 = fmul double %1076, %1266
  %1268 = fadd double %1219, %1267
  %1269 = load double addrspace(3)* %456, align 8
  %1270 = fmul double %1076, %1269
  %1271 = fadd double %1222, %1270
  %1272 = load double addrspace(3)* %458, align 8
  %1273 = fmul double %1125, %1272
  %1274 = fadd double %1226, %1273
  %1275 = load double addrspace(3)* %460, align 8
  %1276 = fmul double %1125, %1275
  %1277 = fadd double %1229, %1276
  %1278 = load double addrspace(3)* %462, align 8
  %1279 = fmul double %1125, %1278
  %1280 = fadd double %1232, %1279
  %1281 = load double addrspace(3)* %464, align 8
  %1282 = fmul double %1125, %1281
  %1283 = fadd double %1235, %1282
  %1284 = load double addrspace(3)* %466, align 8
  %1285 = fmul double %1125, %1284
  %1286 = fadd double %1238, %1285
  %1287 = load double addrspace(3)* %468, align 8
  %1288 = fmul double %1125, %1287
  %1289 = fadd double %1241, %1288
  %1290 = load double addrspace(3)* %470, align 8
  %1291 = fmul double %1125, %1290
  %1292 = fadd double %1244, %1291
  %1293 = load double addrspace(3)* %472, align 8
  %1294 = fmul double %1125, %1293
  %1295 = fadd double %1247, %1294
  %1296 = load double addrspace(3)* %474, align 8
  %1297 = fmul double %1125, %1296
  %1298 = fadd double %1250, %1297
  %1299 = load double addrspace(3)* %476, align 8
  %1300 = fmul double %1125, %1299
  %1301 = fadd double %1253, %1300
  %1302 = load double addrspace(3)* %478, align 8
  %1303 = fmul double %1125, %1302
  %1304 = fadd double %1256, %1303
  %1305 = load double addrspace(3)* %480, align 8
  %1306 = fmul double %1125, %1305
  %1307 = fadd double %1259, %1306
  %1308 = load double addrspace(3)* %482, align 8
  %1309 = fmul double %1125, %1308
  %1310 = fadd double %1262, %1309
  %1311 = load double addrspace(3)* %484, align 8
  %1312 = fmul double %1125, %1311
  %1313 = fadd double %1265, %1312
  %1314 = load double addrspace(3)* %486, align 8
  %1315 = fmul double %1125, %1314
  %1316 = fadd double %1268, %1315
  %1317 = load double addrspace(3)* %488, align 8
  %1318 = fmul double %1125, %1317
  %1319 = fadd double %1271, %1318
  %1320 = load double addrspace(3)* %490, align 16
  %1321 = fmul double %1174, %1320
  %1322 = fadd double %1274, %1321
  %1323 = load double addrspace(3)* %492, align 8
  %1324 = fmul double %1174, %1323
  %1325 = fadd double %1277, %1324
  %1326 = load double addrspace(3)* %494, align 16
  %1327 = fmul double %1174, %1326
  %1328 = fadd double %1280, %1327
  %1329 = load double addrspace(3)* %496, align 8
  %1330 = fmul double %1174, %1329
  %1331 = fadd double %1283, %1330
  %1332 = load double addrspace(3)* %498, align 16
  %1333 = fmul double %1174, %1332
  %1334 = fadd double %1286, %1333
  %1335 = load double addrspace(3)* %500, align 8
  %1336 = fmul double %1174, %1335
  %1337 = fadd double %1289, %1336
  %1338 = load double addrspace(3)* %502, align 16
  %1339 = fmul double %1174, %1338
  %1340 = fadd double %1292, %1339
  %1341 = load double addrspace(3)* %504, align 8
  %1342 = fmul double %1174, %1341
  %1343 = fadd double %1295, %1342
  %1344 = load double addrspace(3)* %506, align 16
  %1345 = fmul double %1174, %1344
  %1346 = fadd double %1298, %1345
  %1347 = load double addrspace(3)* %508, align 8
  %1348 = fmul double %1174, %1347
  %1349 = fadd double %1301, %1348
  %1350 = load double addrspace(3)* %510, align 16
  %1351 = fmul double %1174, %1350
  %1352 = fadd double %1304, %1351
  %1353 = load double addrspace(3)* %512, align 8
  %1354 = fmul double %1174, %1353
  %1355 = fadd double %1307, %1354
  %1356 = load double addrspace(3)* %514, align 16
  %1357 = fmul double %1174, %1356
  %1358 = fadd double %1310, %1357
  %1359 = load double addrspace(3)* %516, align 8
  %1360 = fmul double %1174, %1359
  %1361 = fadd double %1313, %1360
  %1362 = load double addrspace(3)* %518, align 16
  %1363 = fmul double %1174, %1362
  %1364 = fadd double %1316, %1363
  %1365 = load double addrspace(3)* %520, align 8
  %1366 = fmul double %1174, %1365
  %1367 = fadd double %1319, %1366
  %1368 = load double addrspace(3)* %522, align 8
  %1369 = fmul double %1223, %1368
  %1370 = fadd double %1322, %1369
  store double %1370, double* %575, align 16
  %1371 = load double addrspace(3)* %524, align 8
  %1372 = fmul double %1223, %1371
  %1373 = fadd double %1325, %1372
  store double %1373, double* %577, align 8
  %1374 = load double addrspace(3)* %526, align 8
  %1375 = fmul double %1223, %1374
  %1376 = fadd double %1328, %1375
  store double %1376, double* %579, align 16
  %1377 = load double addrspace(3)* %528, align 8
  %1378 = fmul double %1223, %1377
  %1379 = fadd double %1331, %1378
  store double %1379, double* %581, align 8
  %1380 = load double addrspace(3)* %530, align 8
  %1381 = fmul double %1223, %1380
  %1382 = fadd double %1334, %1381
  store double %1382, double* %583, align 16
  %1383 = load double addrspace(3)* %532, align 8
  %1384 = fmul double %1223, %1383
  %1385 = fadd double %1337, %1384
  store double %1385, double* %585, align 8
  %1386 = load double addrspace(3)* %534, align 8
  %1387 = fmul double %1223, %1386
  %1388 = fadd double %1340, %1387
  store double %1388, double* %587, align 16
  %1389 = load double addrspace(3)* %536, align 8
  %1390 = fmul double %1223, %1389
  %1391 = fadd double %1343, %1390
  store double %1391, double* %589, align 8
  %1392 = load double addrspace(3)* %538, align 8
  %1393 = fmul double %1223, %1392
  %1394 = fadd double %1346, %1393
  store double %1394, double* %591, align 16
  %1395 = load double addrspace(3)* %540, align 8
  %1396 = fmul double %1223, %1395
  %1397 = fadd double %1349, %1396
  store double %1397, double* %593, align 8
  %1398 = load double addrspace(3)* %542, align 8
  %1399 = fmul double %1223, %1398
  %1400 = fadd double %1352, %1399
  store double %1400, double* %595, align 16
  %1401 = load double addrspace(3)* %544, align 8
  %1402 = fmul double %1223, %1401
  %1403 = fadd double %1355, %1402
  store double %1403, double* %597, align 8
  %1404 = load double addrspace(3)* %546, align 8
  %1405 = fmul double %1223, %1404
  %1406 = fadd double %1358, %1405
  store double %1406, double* %599, align 16
  %1407 = load double addrspace(3)* %548, align 8
  %1408 = fmul double %1223, %1407
  %1409 = fadd double %1361, %1408
  store double %1409, double* %601, align 8
  %1410 = load double addrspace(3)* %550, align 8
  %1411 = fmul double %1223, %1410
  %1412 = fadd double %1364, %1411
  store double %1412, double* %603, align 16
  %1413 = load double addrspace(3)* %552, align 8
  %1414 = fmul double %1223, %1413
  %1415 = fadd double %1367, %1414
  store double %1415, double* %605, align 8
  %check.WI.iter999.i = icmp ult i64 %CurrWI..3.i, %37
  br i1 %check.WI.iter999.i, label %thenBB996.i, label %SyncBB987.preheader.i

thenBB996.i:                                      ; preds = %SyncBB985.i
  %"CurrWI++1000.i" = add nuw i64 %CurrWI..3.i, 1
  %"loadedCurrSB+Stride1002.i" = add nuw i64 %CurrSBIndex..3.i, 12032
  br label %SyncBB985.i

SyncBB987.preheader.i:                            ; preds = %SyncBB985.i, %thenBB.i
  %currBarrier.0.ph.i = phi i32 [ %currBarrier.1.i, %thenBB.i ], [ 13, %SyncBB985.i ]
  %CurrSBIndex..1.ph.i = phi i64 [ %"loadedCurrSB+Stride.i", %thenBB.i ], [ 0, %SyncBB985.i ]
  %CurrWI..1.ph.i = phi i64 [ %"CurrWI++.i", %thenBB.i ], [ 0, %SyncBB985.i ]
  br label %SyncBB987.i

SyncBB987.i:                                      ; preds = %thenBB989.i, %SyncBB987.preheader.i
  %CurrSBIndex..1.i = phi i64 [ %"loadedCurrSB+Stride995.i", %thenBB989.i ], [ %CurrSBIndex..1.ph.i, %SyncBB987.preheader.i ]
  %CurrWI..1.i = phi i64 [ %"CurrWI++993.i", %thenBB989.i ], [ %CurrWI..1.ph.i, %SyncBB987.preheader.i ]
  %"&(pSB[currWI].offset)403.i" = add nuw i64 %CurrSBIndex..1.i, 648
  %"&pSB[currWI].offset404.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)403.i"
  %CastToValueType405.i = bitcast i8* %"&pSB[currWI].offset404.i" to i32*
  %loadedValue406.i = load i32* %CastToValueType405.i, align 4
  %1416 = icmp slt i32 %loadedValue406.i, %19
  %"&(pSB[currWI].offset)394.i" = add nuw i64 %CurrSBIndex..1.i, 640
  %"&pSB[currWI].offset395.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)394.i"
  %CastToValueType396.i = bitcast i8* %"&pSB[currWI].offset395.i" to i64*
  %loadedValue397.i = load i64* %CastToValueType396.i, align 8
  %indvar.next45.i = add i64 %loadedValue397.i, 1
  %"&(pSB[currWI].offset)852.i" = add nuw i64 %CurrSBIndex..1.i, 784
  %"&pSB[currWI].offset853.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)852.i"
  %CastToValueType854.i = bitcast i8* %"&pSB[currWI].offset853.i" to i64*
  store i64 %indvar.next45.i, i64* %CastToValueType854.i, align 8
  br i1 %1416, label %.loopexit.i, label %bb.nph.i

bb.nph.i:                                         ; preds = %SyncBB987.i
  %"&(pSB[currWI].offset)241.i" = add nuw i64 %CurrSBIndex..1.i, 504
  %"&pSB[currWI].offset242.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)241.i"
  %CastToValueType243.i = bitcast i8* %"&pSB[currWI].offset242.i" to i32*
  %loadedValue244.i = load i32* %CastToValueType243.i, align 4
  %tmp28.i = add i32 %tmp25.i, %loadedValue244.i
  %"&(pSB[currWI].offset)161.i" = add nuw i64 %CurrSBIndex..1.i, 432
  %"&pSB[currWI].offset162.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)161.i"
  %CastToValueType163.i = bitcast i8* %"&pSB[currWI].offset162.i" to i32*
  %loadedValue.i = load i32* %CastToValueType163.i, align 4
  %tmp30.i = add i32 %tmp28.i, %loadedValue.i
  %tmp33.i = add i32 %tmp30.i, %tmp81.i
  %tmp34.i = sext i32 %tmp33.i to i64
  %"&(pSB[currWI].offset)860.i" = add nuw i64 %CurrSBIndex..1.i, 800
  %"&pSB[currWI].offset861.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)860.i"
  %CastToValueType862.i = bitcast i8* %"&pSB[currWI].offset861.i" to [16 x double]*
  br label %1417

; <label>:1417                                    ; preds = %1417, %bb.nph.i
  %indvar.i = phi i64 [ 0, %bb.nph.i ], [ %indvar.next.i, %1417 ]
  %scevgep.i = getelementptr [16 x double]* %CastToValueType862.i, i64 0, i64 %indvar.i
  %tmp22.i = mul i64 %tmp.i, %indvar.i
  %tmp35.i = add i64 %tmp34.i, %tmp22.i
  %.0214.i = getelementptr double addrspace(1)* %13, i64 %tmp35.i
  %1418 = load double* %scevgep.i, align 8
  %1419 = fmul double %1418, %22
  %1420 = load double addrspace(1)* %.0214.i, align 8
  %1421 = fmul double %1420, %25
  %1422 = fadd double %1419, %1421
  store double %1422, double addrspace(1)* %.0214.i, align 8
  %indvar.next.i = add i64 %indvar.i, 1
  %exitcond.i = icmp eq i64 %indvar.next.i, 16
  br i1 %exitcond.i, label %._crit_edge.i, label %1417

._crit_edge.i:                                    ; preds = %1417
  %check.WI.iter992.i = icmp ult i64 %CurrWI..1.i, %37
  br i1 %check.WI.iter992.i, label %thenBB989.i, label %__sgemmNN_separated_args.exit

thenBB989.i:                                      ; preds = %._crit_edge.i
  %"CurrWI++993.i" = add nuw i64 %CurrWI..1.i, 1
  %"loadedCurrSB+Stride995.i" = add nuw i64 %CurrSBIndex..1.i, 12032
  br label %SyncBB987.i

__sgemmNN_separated_args.exit:                    ; preds = %._crit_edge.i
  ret void
}

define void @sgemmNT(i8* %pBuffer) {
entry:
  %0 = bitcast i8* %pBuffer to double addrspace(1)**
  %1 = load double addrspace(1)** %0, align 8
  %2 = getelementptr i8* %pBuffer, i64 8
  %3 = bitcast i8* %2 to i32*
  %4 = load i32* %3, align 4
  %5 = getelementptr i8* %pBuffer, i64 16
  %6 = bitcast i8* %5 to double addrspace(1)**
  %7 = load double addrspace(1)** %6, align 8
  %8 = getelementptr i8* %pBuffer, i64 24
  %9 = bitcast i8* %8 to i32*
  %10 = load i32* %9, align 4
  %11 = getelementptr i8* %pBuffer, i64 32
  %12 = bitcast i8* %11 to double addrspace(1)**
  %13 = load double addrspace(1)** %12, align 8
  %14 = getelementptr i8* %pBuffer, i64 40
  %15 = bitcast i8* %14 to i32*
  %16 = load i32* %15, align 4
  %17 = getelementptr i8* %pBuffer, i64 44
  %18 = bitcast i8* %17 to i32*
  %19 = load i32* %18, align 4
  %20 = getelementptr i8* %pBuffer, i64 48
  %21 = bitcast i8* %20 to double*
  %22 = load double* %21, align 8
  %23 = getelementptr i8* %pBuffer, i64 56
  %24 = bitcast i8* %23 to double*
  %25 = load double* %24, align 8
  %26 = getelementptr i8* %pBuffer, i64 64
  %27 = bitcast i8* %26 to i8 addrspace(3)**
  %28 = load i8 addrspace(3)** %27, align 8
  %29 = getelementptr i8* %pBuffer, i64 80
  %30 = bitcast i8* %29 to i64**
  %31 = load i64** %30, align 8
  %32 = getelementptr i8* %pBuffer, i64 96
  %33 = bitcast i8* %32 to %struct.PaddedDimId**
  %34 = load %struct.PaddedDimId** %33, align 8
  %35 = getelementptr i8* %pBuffer, i64 112
  %36 = bitcast i8* %35 to i64*
  %37 = load i64* %36, align 8
  %38 = getelementptr i8* %pBuffer, i64 120
  %39 = bitcast i8* %38 to i8**
  %40 = load i8** %39, align 8
  %41 = bitcast i8 addrspace(3)* %28 to [4 x [16 x double]] addrspace(3)*
  %42 = bitcast i8 addrspace(3)* %28 to double addrspace(3)*
  %43 = getelementptr i8 addrspace(3)* %28, i64 8
  %44 = bitcast i8 addrspace(3)* %43 to double addrspace(3)*
  %45 = getelementptr i8 addrspace(3)* %28, i64 16
  %46 = bitcast i8 addrspace(3)* %45 to double addrspace(3)*
  %47 = getelementptr i8 addrspace(3)* %28, i64 24
  %48 = bitcast i8 addrspace(3)* %47 to double addrspace(3)*
  %49 = getelementptr i8 addrspace(3)* %28, i64 32
  %50 = bitcast i8 addrspace(3)* %49 to double addrspace(3)*
  %51 = getelementptr i8 addrspace(3)* %28, i64 40
  %52 = bitcast i8 addrspace(3)* %51 to double addrspace(3)*
  %53 = getelementptr i8 addrspace(3)* %28, i64 48
  %54 = bitcast i8 addrspace(3)* %53 to double addrspace(3)*
  %55 = getelementptr i8 addrspace(3)* %28, i64 56
  %56 = bitcast i8 addrspace(3)* %55 to double addrspace(3)*
  %57 = getelementptr i8 addrspace(3)* %28, i64 64
  %58 = bitcast i8 addrspace(3)* %57 to double addrspace(3)*
  %59 = getelementptr i8 addrspace(3)* %28, i64 72
  %60 = bitcast i8 addrspace(3)* %59 to double addrspace(3)*
  %61 = getelementptr i8 addrspace(3)* %28, i64 80
  %62 = bitcast i8 addrspace(3)* %61 to double addrspace(3)*
  %63 = getelementptr i8 addrspace(3)* %28, i64 88
  %64 = bitcast i8 addrspace(3)* %63 to double addrspace(3)*
  %65 = getelementptr i8 addrspace(3)* %28, i64 96
  %66 = bitcast i8 addrspace(3)* %65 to double addrspace(3)*
  %67 = getelementptr i8 addrspace(3)* %28, i64 104
  %68 = bitcast i8 addrspace(3)* %67 to double addrspace(3)*
  %69 = getelementptr i8 addrspace(3)* %28, i64 112
  %70 = bitcast i8 addrspace(3)* %69 to double addrspace(3)*
  %71 = getelementptr i8 addrspace(3)* %28, i64 120
  %72 = bitcast i8 addrspace(3)* %71 to double addrspace(3)*
  %73 = getelementptr i8 addrspace(3)* %28, i64 128
  %74 = bitcast i8 addrspace(3)* %73 to double addrspace(3)*
  %75 = getelementptr i8 addrspace(3)* %28, i64 136
  %76 = bitcast i8 addrspace(3)* %75 to double addrspace(3)*
  %77 = getelementptr i8 addrspace(3)* %28, i64 144
  %78 = bitcast i8 addrspace(3)* %77 to double addrspace(3)*
  %79 = getelementptr i8 addrspace(3)* %28, i64 152
  %80 = bitcast i8 addrspace(3)* %79 to double addrspace(3)*
  %81 = getelementptr i8 addrspace(3)* %28, i64 160
  %82 = bitcast i8 addrspace(3)* %81 to double addrspace(3)*
  %83 = getelementptr i8 addrspace(3)* %28, i64 168
  %84 = bitcast i8 addrspace(3)* %83 to double addrspace(3)*
  %85 = getelementptr i8 addrspace(3)* %28, i64 176
  %86 = bitcast i8 addrspace(3)* %85 to double addrspace(3)*
  %87 = getelementptr i8 addrspace(3)* %28, i64 184
  %88 = bitcast i8 addrspace(3)* %87 to double addrspace(3)*
  %89 = getelementptr i8 addrspace(3)* %28, i64 192
  %90 = bitcast i8 addrspace(3)* %89 to double addrspace(3)*
  %91 = getelementptr i8 addrspace(3)* %28, i64 200
  %92 = bitcast i8 addrspace(3)* %91 to double addrspace(3)*
  %93 = getelementptr i8 addrspace(3)* %28, i64 208
  %94 = bitcast i8 addrspace(3)* %93 to double addrspace(3)*
  %95 = getelementptr i8 addrspace(3)* %28, i64 216
  %96 = bitcast i8 addrspace(3)* %95 to double addrspace(3)*
  %97 = getelementptr i8 addrspace(3)* %28, i64 224
  %98 = bitcast i8 addrspace(3)* %97 to double addrspace(3)*
  %99 = getelementptr i8 addrspace(3)* %28, i64 232
  %100 = bitcast i8 addrspace(3)* %99 to double addrspace(3)*
  %101 = getelementptr i8 addrspace(3)* %28, i64 240
  %102 = bitcast i8 addrspace(3)* %101 to double addrspace(3)*
  %103 = getelementptr i8 addrspace(3)* %28, i64 248
  %104 = bitcast i8 addrspace(3)* %103 to double addrspace(3)*
  %105 = getelementptr i8 addrspace(3)* %28, i64 256
  %106 = bitcast i8 addrspace(3)* %105 to double addrspace(3)*
  %107 = getelementptr i8 addrspace(3)* %28, i64 264
  %108 = bitcast i8 addrspace(3)* %107 to double addrspace(3)*
  %109 = getelementptr i8 addrspace(3)* %28, i64 272
  %110 = bitcast i8 addrspace(3)* %109 to double addrspace(3)*
  %111 = getelementptr i8 addrspace(3)* %28, i64 280
  %112 = bitcast i8 addrspace(3)* %111 to double addrspace(3)*
  %113 = getelementptr i8 addrspace(3)* %28, i64 288
  %114 = bitcast i8 addrspace(3)* %113 to double addrspace(3)*
  %115 = getelementptr i8 addrspace(3)* %28, i64 296
  %116 = bitcast i8 addrspace(3)* %115 to double addrspace(3)*
  %117 = getelementptr i8 addrspace(3)* %28, i64 304
  %118 = bitcast i8 addrspace(3)* %117 to double addrspace(3)*
  %119 = getelementptr i8 addrspace(3)* %28, i64 312
  %120 = bitcast i8 addrspace(3)* %119 to double addrspace(3)*
  %121 = getelementptr i8 addrspace(3)* %28, i64 320
  %122 = bitcast i8 addrspace(3)* %121 to double addrspace(3)*
  %123 = getelementptr i8 addrspace(3)* %28, i64 328
  %124 = bitcast i8 addrspace(3)* %123 to double addrspace(3)*
  %125 = getelementptr i8 addrspace(3)* %28, i64 336
  %126 = bitcast i8 addrspace(3)* %125 to double addrspace(3)*
  %127 = getelementptr i8 addrspace(3)* %28, i64 344
  %128 = bitcast i8 addrspace(3)* %127 to double addrspace(3)*
  %129 = getelementptr i8 addrspace(3)* %28, i64 352
  %130 = bitcast i8 addrspace(3)* %129 to double addrspace(3)*
  %131 = getelementptr i8 addrspace(3)* %28, i64 360
  %132 = bitcast i8 addrspace(3)* %131 to double addrspace(3)*
  %133 = getelementptr i8 addrspace(3)* %28, i64 368
  %134 = bitcast i8 addrspace(3)* %133 to double addrspace(3)*
  %135 = getelementptr i8 addrspace(3)* %28, i64 376
  %136 = bitcast i8 addrspace(3)* %135 to double addrspace(3)*
  %137 = getelementptr i8 addrspace(3)* %28, i64 384
  %138 = bitcast i8 addrspace(3)* %137 to double addrspace(3)*
  %139 = getelementptr i8 addrspace(3)* %28, i64 392
  %140 = bitcast i8 addrspace(3)* %139 to double addrspace(3)*
  %141 = getelementptr i8 addrspace(3)* %28, i64 400
  %142 = bitcast i8 addrspace(3)* %141 to double addrspace(3)*
  %143 = getelementptr i8 addrspace(3)* %28, i64 408
  %144 = bitcast i8 addrspace(3)* %143 to double addrspace(3)*
  %145 = getelementptr i8 addrspace(3)* %28, i64 416
  %146 = bitcast i8 addrspace(3)* %145 to double addrspace(3)*
  %147 = getelementptr i8 addrspace(3)* %28, i64 424
  %148 = bitcast i8 addrspace(3)* %147 to double addrspace(3)*
  %149 = getelementptr i8 addrspace(3)* %28, i64 432
  %150 = bitcast i8 addrspace(3)* %149 to double addrspace(3)*
  %151 = getelementptr i8 addrspace(3)* %28, i64 440
  %152 = bitcast i8 addrspace(3)* %151 to double addrspace(3)*
  %153 = getelementptr i8 addrspace(3)* %28, i64 448
  %154 = bitcast i8 addrspace(3)* %153 to double addrspace(3)*
  %155 = getelementptr i8 addrspace(3)* %28, i64 456
  %156 = bitcast i8 addrspace(3)* %155 to double addrspace(3)*
  %157 = getelementptr i8 addrspace(3)* %28, i64 464
  %158 = bitcast i8 addrspace(3)* %157 to double addrspace(3)*
  %159 = getelementptr i8 addrspace(3)* %28, i64 472
  %160 = bitcast i8 addrspace(3)* %159 to double addrspace(3)*
  %161 = getelementptr i8 addrspace(3)* %28, i64 480
  %162 = bitcast i8 addrspace(3)* %161 to double addrspace(3)*
  %163 = getelementptr i8 addrspace(3)* %28, i64 488
  %164 = bitcast i8 addrspace(3)* %163 to double addrspace(3)*
  %165 = getelementptr i8 addrspace(3)* %28, i64 496
  %166 = bitcast i8 addrspace(3)* %165 to double addrspace(3)*
  %167 = getelementptr i8 addrspace(3)* %28, i64 504
  %168 = bitcast i8 addrspace(3)* %167 to double addrspace(3)*
  %169 = sext i32 %4 to i64
  %tmp95.2.i = shl i32 %4, 1
  %170 = sext i32 %tmp95.2.i to i64
  %tmp95.3.i = mul i32 %4, 3
  %171 = sext i32 %tmp95.3.i to i64
  %172 = mul nsw i32 %19, %10
  %tmp37.i = shl i32 %10, 2
  %tmp38.i = zext i32 %tmp37.i to i64
  %tmp40.i = shl i32 %10, 3
  %tmp41.i = zext i32 %tmp40.i to i64
  %tmp44.i = sext i32 %tmp37.i to i64
  %tmp57.i = shl i32 %4, 2
  %tmp58.i = sext i32 %tmp57.i to i64
  %tmp69.i = mul i32 %4, 3
  %tmp70.i = sext i32 %tmp69.i to i64
  %tmp71.i = add i64 %tmp58.i, %tmp70.i
  %tmp75.i = shl i32 %4, 1
  %tmp76.i = sext i32 %tmp75.i to i64
  %tmp77.i = add i64 %tmp58.i, %tmp76.i
  %tmp81.i = sext i32 %4 to i64
  %tmp82.i = add i64 %tmp81.i, %tmp58.i
  br label %SyncBB855.i

SyncBB855.i:                                      ; preds = %thenBB.i, %entry
  %currBarrier.2.i = phi i32 [ 15, %entry ], [ %currBarrier.1.i, %thenBB.i ]
  %CurrSBIndex..0.i = phi i64 [ 0, %entry ], [ %"loadedCurrSB+Stride.i", %thenBB.i ]
  %CurrWI..0.i = phi i64 [ 0, %entry ], [ %"CurrWI++.i", %thenBB.i ]
  %173 = getelementptr %struct.PaddedDimId* %34, i64 %CurrWI..0.i, i32 0, i64 0
  %174 = load i64* %173, align 8
  %175 = trunc i64 %174 to i32
  %"&pSB[currWI].offset.i" = getelementptr inbounds i8* %40, i64 %CurrSBIndex..0.i
  %CastToValueType.i = bitcast i8* %"&pSB[currWI].offset.i" to i32*
  store i32 %175, i32* %CastToValueType.i, align 4
  %176 = getelementptr %struct.PaddedDimId* %34, i64 %CurrWI..0.i, i32 0, i64 1
  %177 = load i64* %176, align 8
  %178 = trunc i64 %177 to i32
  %179 = load i64* %31, align 8
  %180 = shl i64 %179, 6
  %181 = trunc i64 %180 to i32
  %182 = getelementptr i64* %31, i64 1
  %183 = load i64* %182, align 8
  %184 = shl i64 %183, 4
  %185 = trunc i64 %184 to i32
  %186 = shl i32 %178, 4
  %"&(pSB[currWI].offset)106.i" = add nuw i64 %CurrSBIndex..0.i, 4
  %"&pSB[currWI].offset107.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)106.i"
  %CastToValueType108.i = bitcast i8* %"&pSB[currWI].offset107.i" to i32*
  store i32 %186, i32* %CastToValueType108.i, align 4
  %187 = add nsw i32 %186, %175
  %188 = add nsw i32 %181, %187
  %189 = sext i32 %188 to i64
  %190 = mul nsw i32 %178, %10
  %191 = add nsw i32 %190, %175
  %192 = add nsw i32 %191, %185
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds double addrspace(1)* %7, i64 %193
  %"&(pSB[currWI].offset)659.i" = add nuw i64 %CurrSBIndex..0.i, 240
  %"&pSB[currWI].offset660.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)659.i"
  %scevgep93.i = bitcast i8* %"&pSB[currWI].offset660.i" to double*
  %195 = getelementptr inbounds double addrspace(1)* %1, i64 %189
  %196 = load double addrspace(1)* %195, align 8
  %"&(pSB[currWI].offset)115.i" = add nuw i64 %CurrSBIndex..0.i, 8
  %"&pSB[currWI].offset116.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)115.i"
  %CastToValueType117.i = bitcast i8* %"&pSB[currWI].offset116.i" to double*
  store double %196, double* %CastToValueType117.i, align 8
  store double %196, double* %scevgep93.i, align 16
  %"&pSB[currWI].offset656.sum.i" = add i64 %CurrSBIndex..0.i, 248
  %scevgep93.1.i = getelementptr i8* %40, i64 %"&pSB[currWI].offset656.sum.i"
  %197 = bitcast i8* %scevgep93.1.i to double*
  %.sum4.1.i = add i64 %169, %189
  %198 = getelementptr inbounds double addrspace(1)* %1, i64 %.sum4.1.i
  %199 = load double addrspace(1)* %198, align 8
  %"&(pSB[currWI].offset)119.i" = add nuw i64 %CurrSBIndex..0.i, 16
  %"&pSB[currWI].offset120.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)119.i"
  %CastToValueType121.i = bitcast i8* %"&pSB[currWI].offset120.i" to double*
  store double %199, double* %CastToValueType121.i, align 8
  store double %199, double* %197, align 8
  %"&pSB[currWI].offset652.sum.i" = add i64 %CurrSBIndex..0.i, 256
  %scevgep93.2.i = getelementptr i8* %40, i64 %"&pSB[currWI].offset652.sum.i"
  %200 = bitcast i8* %scevgep93.2.i to double*
  %.sum4.2.i = add i64 %170, %189
  %201 = getelementptr inbounds double addrspace(1)* %1, i64 %.sum4.2.i
  %202 = load double addrspace(1)* %201, align 8
  %"&(pSB[currWI].offset)123.i" = add nuw i64 %CurrSBIndex..0.i, 24
  %"&pSB[currWI].offset124.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)123.i"
  %CastToValueType125.i = bitcast i8* %"&pSB[currWI].offset124.i" to double*
  store double %202, double* %CastToValueType125.i, align 8
  store double %202, double* %200, align 16
  %"&pSB[currWI].offset648.sum.i" = add i64 %CurrSBIndex..0.i, 264
  %scevgep93.3.i = getelementptr i8* %40, i64 %"&pSB[currWI].offset648.sum.i"
  %203 = bitcast i8* %scevgep93.3.i to double*
  %.sum4.3.i = add i64 %171, %189
  %204 = getelementptr inbounds double addrspace(1)* %1, i64 %.sum4.3.i
  %205 = load double addrspace(1)* %204, align 8
  %"&(pSB[currWI].offset)127.i" = add nuw i64 %CurrSBIndex..0.i, 32
  %"&pSB[currWI].offset128.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)127.i"
  %CastToValueType129.i = bitcast i8* %"&pSB[currWI].offset128.i" to double*
  store double %205, double* %CastToValueType129.i, align 8
  store double %205, double* %203, align 8
  %206 = load double addrspace(1)* %194, align 8
  %"&(pSB[currWI].offset)131.i" = add nuw i64 %CurrSBIndex..0.i, 40
  %"&pSB[currWI].offset132.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)131.i"
  %CastToValueType133.i = bitcast i8* %"&pSB[currWI].offset132.i" to double*
  store double %206, double* %CastToValueType133.i, align 8
  %"&(pSB[currWI].offset)679.i" = add nuw i64 %CurrSBIndex..0.i, 272
  %"&pSB[currWI].offset680.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)679.i"
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset680.i", i8 0, i64 128, i32 16, i1 false) nounwind
  %207 = sext i32 %175 to i64
  %208 = sext i32 %178 to i64
  %209 = getelementptr inbounds [4 x [16 x double]] addrspace(3)* %41, i64 0, i64 %208, i64 %207
  %"&(pSB[currWI].offset)135.i" = add nuw i64 %CurrSBIndex..0.i, 48
  %"&pSB[currWI].offset136.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)135.i"
  %CastToValueType137.i = bitcast i8* %"&pSB[currWI].offset136.i" to double addrspace(3)**
  store double addrspace(3)* %209, double addrspace(3)** %CastToValueType137.i, align 8
  %"&(pSB[currWI].offset)675.i" = add nuw i64 %CurrSBIndex..0.i, 240
  %"&pSB[currWI].offset676.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)675.i"
  %210 = bitcast i8* %"&pSB[currWI].offset676.i" to double*
  %"&pSB[currWI].offset672.sum.i" = add i64 %CurrSBIndex..0.i, 248
  %211 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset672.sum.i"
  %212 = bitcast i8* %211 to double*
  %"&pSB[currWI].offset668.sum.i" = add i64 %CurrSBIndex..0.i, 256
  %213 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset668.sum.i"
  %214 = bitcast i8* %213 to double*
  %"&pSB[currWI].offset664.sum.i" = add i64 %CurrSBIndex..0.i, 264
  %215 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset664.sum.i"
  %216 = bitcast i8* %215 to double*
  %"&(pSB[currWI].offset)763.i" = add nuw i64 %CurrSBIndex..0.i, 400
  %"&pSB[currWI].offset764.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)763.i"
  %217 = bitcast i8* %"&pSB[currWI].offset764.i" to double*
  %"&(pSB[currWI].offset)747.i" = add nuw i64 %CurrSBIndex..0.i, 272
  %"&pSB[currWI].offset748.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)747.i"
  %218 = bitcast i8* %"&pSB[currWI].offset748.i" to double*
  %"&pSB[currWI].offset744.sum.i" = add i64 %CurrSBIndex..0.i, 280
  %219 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset744.sum.i"
  %220 = bitcast i8* %219 to double*
  %"&pSB[currWI].offset740.sum.i" = add i64 %CurrSBIndex..0.i, 288
  %221 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset740.sum.i"
  %222 = bitcast i8* %221 to double*
  %"&pSB[currWI].offset736.sum.i" = add i64 %CurrSBIndex..0.i, 296
  %223 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset736.sum.i"
  %224 = bitcast i8* %223 to double*
  %"&pSB[currWI].offset732.sum.i" = add i64 %CurrSBIndex..0.i, 304
  %225 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset732.sum.i"
  %226 = bitcast i8* %225 to double*
  %"&pSB[currWI].offset728.sum.i" = add i64 %CurrSBIndex..0.i, 312
  %227 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset728.sum.i"
  %228 = bitcast i8* %227 to double*
  %"&pSB[currWI].offset724.sum.i" = add i64 %CurrSBIndex..0.i, 320
  %229 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset724.sum.i"
  %230 = bitcast i8* %229 to double*
  %"&pSB[currWI].offset720.sum.i" = add i64 %CurrSBIndex..0.i, 328
  %231 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset720.sum.i"
  %232 = bitcast i8* %231 to double*
  %"&pSB[currWI].offset716.sum.i" = add i64 %CurrSBIndex..0.i, 336
  %233 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset716.sum.i"
  %234 = bitcast i8* %233 to double*
  %"&pSB[currWI].offset712.sum.i" = add i64 %CurrSBIndex..0.i, 344
  %235 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset712.sum.i"
  %236 = bitcast i8* %235 to double*
  %"&pSB[currWI].offset708.sum.i" = add i64 %CurrSBIndex..0.i, 352
  %237 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset708.sum.i"
  %238 = bitcast i8* %237 to double*
  %"&pSB[currWI].offset704.sum.i" = add i64 %CurrSBIndex..0.i, 360
  %239 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset704.sum.i"
  %240 = bitcast i8* %239 to double*
  %"&pSB[currWI].offset700.sum.i" = add i64 %CurrSBIndex..0.i, 368
  %241 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset700.sum.i"
  %242 = bitcast i8* %241 to double*
  %"&pSB[currWI].offset696.sum.i" = add i64 %CurrSBIndex..0.i, 376
  %243 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset696.sum.i"
  %244 = bitcast i8* %243 to double*
  %"&pSB[currWI].offset692.sum.i" = add i64 %CurrSBIndex..0.i, 384
  %245 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset692.sum.i"
  %246 = bitcast i8* %245 to double*
  %"&pSB[currWI].offset688.sum.i" = add i64 %CurrSBIndex..0.i, 392
  %247 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset688.sum.i"
  %248 = bitcast i8* %247 to double*
  %"&pSB[currWI].offset760.sum.i" = add i64 %CurrSBIndex..0.i, 408
  %249 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset760.sum.i"
  %250 = bitcast i8* %249 to double*
  %"&pSB[currWI].offset756.sum.i" = add i64 %CurrSBIndex..0.i, 416
  %251 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset756.sum.i"
  %252 = bitcast i8* %251 to double*
  %"&pSB[currWI].offset752.sum.i" = add i64 %CurrSBIndex..0.i, 424
  %253 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset752.sum.i"
  %254 = bitcast i8* %253 to double*
  %tmp54.i = add i64 %tmp44.i, %193
  %"&(pSB[currWI].offset)149.i" = add nuw i64 %CurrSBIndex..0.i, 56
  %"&pSB[currWI].offset150.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)149.i"
  %CastToValueType151.i = bitcast i8* %"&pSB[currWI].offset150.i" to i64*
  store i64 %tmp54.i, i64* %CastToValueType151.i, align 8
  %tmp64.i = add i32 %187, %181
  %tmp65.i = sext i32 %tmp64.i to i64
  %tmp66.i = add i64 %tmp58.i, %tmp65.i
  %"&(pSB[currWI].offset)158.i" = add nuw i64 %CurrSBIndex..0.i, 64
  %"&pSB[currWI].offset159.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)158.i"
  %CastToValueType160.i = bitcast i8* %"&pSB[currWI].offset159.i" to i64*
  store i64 %tmp66.i, i64* %CastToValueType160.i, align 8
  %tmp72.i = add i64 %tmp71.i, %tmp65.i
  %"&(pSB[currWI].offset)167.i" = add nuw i64 %CurrSBIndex..0.i, 72
  %"&pSB[currWI].offset168.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)167.i"
  %CastToValueType169.i = bitcast i8* %"&pSB[currWI].offset168.i" to i64*
  store i64 %tmp72.i, i64* %CastToValueType169.i, align 8
  %tmp78.i = add i64 %tmp77.i, %tmp65.i
  %"&(pSB[currWI].offset)176.i" = add nuw i64 %CurrSBIndex..0.i, 80
  %"&pSB[currWI].offset177.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)176.i"
  %CastToValueType178.i = bitcast i8* %"&pSB[currWI].offset177.i" to i64*
  store i64 %tmp78.i, i64* %CastToValueType178.i, align 8
  %tmp83.i = add i64 %tmp82.i, %tmp65.i
  %"&(pSB[currWI].offset)185.i" = add nuw i64 %CurrSBIndex..0.i, 88
  %"&pSB[currWI].offset186.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)185.i"
  %CastToValueType187.i = bitcast i8* %"&pSB[currWI].offset186.i" to i64*
  store i64 %tmp83.i, i64* %CastToValueType187.i, align 8
  br label %"Barrier BB.i"

.loopexit.i:                                      ; preds = %SyncBB853.i
  %"&(pSB[currWI].offset)638.i" = add nuw i64 %CurrSBIndex..1.i, 216
  %"&(pSB[currWI].offset)624.i" = add nuw i64 %CurrSBIndex..1.i, 208
  %"&(pSB[currWI].offset)615.i" = add nuw i64 %CurrSBIndex..1.i, 200
  %"&(pSB[currWI].offset)606.i" = add nuw i64 %CurrSBIndex..1.i, 192
  %"&(pSB[currWI].offset)597.i" = add nuw i64 %CurrSBIndex..1.i, 184
  %"&pSB[currWI].offset639.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)638.i"
  %"&pSB[currWI].offset625.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)624.i"
  %"&pSB[currWI].offset616.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)615.i"
  %"&pSB[currWI].offset607.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)606.i"
  %"&pSB[currWI].offset598.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)597.i"
  %CastToValueType640.i = bitcast i8* %"&pSB[currWI].offset639.i" to double*
  %CastToValueType626.i = bitcast i8* %"&pSB[currWI].offset625.i" to double*
  %CastToValueType617.i = bitcast i8* %"&pSB[currWI].offset616.i" to double*
  %CastToValueType608.i = bitcast i8* %"&pSB[currWI].offset607.i" to double*
  %CastToValueType599.i = bitcast i8* %"&pSB[currWI].offset598.i" to double*
  %loadedValue641.i = load double* %CastToValueType640.i, align 8
  %loadedValue627.i = load double* %CastToValueType626.i, align 8
  %loadedValue618.i = load double* %CastToValueType617.i, align 8
  %loadedValue609.i = load double* %CastToValueType608.i, align 8
  %loadedValue600.i = load double* %CastToValueType599.i, align 8
  br label %"Barrier BB.i"

"Barrier BB.i":                                   ; preds = %.loopexit.i, %SyncBB855.i
  %currBarrier.1.i = phi i32 [ %currBarrier.2.i, %SyncBB855.i ], [ %currBarrier.0.ph.i, %.loopexit.i ]
  %CurrSBIndex..2.i = phi i64 [ %CurrSBIndex..0.i, %SyncBB855.i ], [ %CurrSBIndex..1.i, %.loopexit.i ]
  %CurrWI..2.i = phi i64 [ %CurrWI..0.i, %SyncBB855.i ], [ %CurrWI..1.i, %.loopexit.i ]
  %255 = phi double [ %205, %SyncBB855.i ], [ %loadedValue627.i, %.loopexit.i ]
  %256 = phi double [ %202, %SyncBB855.i ], [ %loadedValue618.i, %.loopexit.i ]
  %257 = phi double [ %199, %SyncBB855.i ], [ %loadedValue609.i, %.loopexit.i ]
  %258 = phi double [ %196, %SyncBB855.i ], [ %loadedValue600.i, %.loopexit.i ]
  %indvar35.i = phi i64 [ 0, %SyncBB855.i ], [ %indvar.next36.i, %.loopexit.i ]
  %b.0.i = phi double [ %206, %SyncBB855.i ], [ %loadedValue641.i, %.loopexit.i ]
  %"&(pSB[currWI].offset)530.i" = add nuw i64 %CurrSBIndex..2.i, 128
  %"&pSB[currWI].offset531.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)530.i"
  %CastToValueType532.i = bitcast i8* %"&pSB[currWI].offset531.i" to i64*
  store i64 %indvar35.i, i64* %CastToValueType532.i, align 8
  %"&(pSB[currWI].offset)446.i" = add nuw i64 %CurrSBIndex..2.i, 120
  %"&pSB[currWI].offset447.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)446.i"
  %CastToValueType448.i = bitcast i8* %"&pSB[currWI].offset447.i" to double*
  store double %258, double* %CastToValueType448.i, align 8
  %"&(pSB[currWI].offset)362.i" = add nuw i64 %CurrSBIndex..2.i, 112
  %"&pSB[currWI].offset363.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)362.i"
  %CastToValueType364.i = bitcast i8* %"&pSB[currWI].offset363.i" to double*
  store double %257, double* %CastToValueType364.i, align 8
  %"&(pSB[currWI].offset)278.i" = add nuw i64 %CurrSBIndex..2.i, 104
  %"&pSB[currWI].offset279.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)278.i"
  %CastToValueType280.i = bitcast i8* %"&pSB[currWI].offset279.i" to double*
  store double %256, double* %CastToValueType280.i, align 8
  %"&(pSB[currWI].offset)194.i" = add nuw i64 %CurrSBIndex..2.i, 96
  %"&pSB[currWI].offset195.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)194.i"
  %CastToValueType196.i = bitcast i8* %"&pSB[currWI].offset195.i" to double*
  store double %255, double* %CastToValueType196.i, align 8
  %tmp39.i = mul i64 %tmp38.i, %indvar35.i
  %tmp42.i = add i64 %tmp41.i, %tmp39.i
  %tmp43.i = trunc i64 %tmp42.i to i32
  %"&(pSB[currWI].offset)539.i" = add nuw i64 %CurrSBIndex..2.i, 136
  %"&pSB[currWI].offset540.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)539.i"
  %CastToValueType541.i = bitcast i8* %"&pSB[currWI].offset540.i" to i32*
  store i32 %tmp43.i, i32* %CastToValueType541.i, align 4
  %tmp45.i = mul i64 %tmp44.i, %indvar35.i
  %"&(pSB[currWI].offset)153.i" = add nuw i64 %CurrSBIndex..2.i, 56
  %"&pSB[currWI].offset154.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)153.i"
  %CastToValueType155.i = bitcast i8* %"&pSB[currWI].offset154.i" to i64*
  %loadedValue156.i = load i64* %CastToValueType155.i, align 8
  %tmp55.i = add i64 %loadedValue156.i, %tmp45.i
  %.01.i = getelementptr double addrspace(1)* %7, i64 %tmp55.i
  %"&(pSB[currWI].offset)548.i" = add nuw i64 %CurrSBIndex..2.i, 144
  %"&pSB[currWI].offset549.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)548.i"
  %CastToValueType550.i = bitcast i8* %"&pSB[currWI].offset549.i" to double addrspace(1)**
  store double addrspace(1)* %.01.i, double addrspace(1)** %CastToValueType550.i, align 8
  %tmp59.i = mul i64 %tmp58.i, %indvar35.i
  %"&(pSB[currWI].offset)162.i" = add nuw i64 %CurrSBIndex..2.i, 64
  %"&pSB[currWI].offset163.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)162.i"
  %CastToValueType164.i = bitcast i8* %"&pSB[currWI].offset163.i" to i64*
  %loadedValue165.i = load i64* %CastToValueType164.i, align 8
  %tmp67.i = add i64 %loadedValue165.i, %tmp59.i
  %.0.i = getelementptr double addrspace(1)* %1, i64 %tmp67.i
  %"&(pSB[currWI].offset)557.i" = add nuw i64 %CurrSBIndex..2.i, 152
  %"&pSB[currWI].offset558.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)557.i"
  %CastToValueType559.i = bitcast i8* %"&pSB[currWI].offset558.i" to double addrspace(1)**
  store double addrspace(1)* %.0.i, double addrspace(1)** %CastToValueType559.i, align 8
  %"&(pSB[currWI].offset)171.i" = add nuw i64 %CurrSBIndex..2.i, 72
  %"&pSB[currWI].offset172.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)171.i"
  %CastToValueType173.i = bitcast i8* %"&pSB[currWI].offset172.i" to i64*
  %loadedValue174.i = load i64* %CastToValueType173.i, align 8
  %tmp73.i = add i64 %loadedValue174.i, %tmp59.i
  %scevgep74.i = getelementptr double addrspace(1)* %1, i64 %tmp73.i
  %"&(pSB[currWI].offset)566.i" = add nuw i64 %CurrSBIndex..2.i, 160
  %"&pSB[currWI].offset567.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)566.i"
  %CastToValueType568.i = bitcast i8* %"&pSB[currWI].offset567.i" to double addrspace(1)**
  store double addrspace(1)* %scevgep74.i, double addrspace(1)** %CastToValueType568.i, align 8
  %"&(pSB[currWI].offset)180.i" = add nuw i64 %CurrSBIndex..2.i, 80
  %"&pSB[currWI].offset181.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)180.i"
  %CastToValueType182.i = bitcast i8* %"&pSB[currWI].offset181.i" to i64*
  %loadedValue183.i = load i64* %CastToValueType182.i, align 8
  %tmp79.i = add i64 %loadedValue183.i, %tmp59.i
  %scevgep80.i = getelementptr double addrspace(1)* %1, i64 %tmp79.i
  %"&(pSB[currWI].offset)575.i" = add nuw i64 %CurrSBIndex..2.i, 168
  %"&pSB[currWI].offset576.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)575.i"
  %CastToValueType577.i = bitcast i8* %"&pSB[currWI].offset576.i" to double addrspace(1)**
  store double addrspace(1)* %scevgep80.i, double addrspace(1)** %CastToValueType577.i, align 8
  %"&(pSB[currWI].offset)189.i" = add nuw i64 %CurrSBIndex..2.i, 88
  %"&pSB[currWI].offset190.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)189.i"
  %CastToValueType191.i = bitcast i8* %"&pSB[currWI].offset190.i" to i64*
  %loadedValue192.i = load i64* %CastToValueType191.i, align 8
  %tmp84.i = add i64 %loadedValue192.i, %tmp59.i
  %scevgep85.i = getelementptr double addrspace(1)* %1, i64 %tmp84.i
  %"&(pSB[currWI].offset)584.i" = add nuw i64 %CurrSBIndex..2.i, 176
  %"&pSB[currWI].offset585.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)584.i"
  %CastToValueType586.i = bitcast i8* %"&pSB[currWI].offset585.i" to double addrspace(1)**
  store double addrspace(1)* %scevgep85.i, double addrspace(1)** %CastToValueType586.i, align 8
  store double %258, double* %217, align 16
  store double %257, double* %250, align 8
  store double %256, double* %252, align 16
  store double %255, double* %254, align 8
  %"&(pSB[currWI].offset)144.i" = add nuw i64 %CurrSBIndex..2.i, 48
  %"&pSB[currWI].offset145.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)144.i"
  %CastToValueType146.i = bitcast i8* %"&pSB[currWI].offset145.i" to double addrspace(3)**
  %loadedValue147.i = load double addrspace(3)** %CastToValueType146.i, align 8
  store double %b.0.i, double addrspace(3)* %loadedValue147.i, align 8
  %check.WI.iter.i = icmp ult i64 %CurrWI..2.i, %37
  br i1 %check.WI.iter.i, label %thenBB.i, label %SyncBB.i

thenBB.i:                                         ; preds = %"Barrier BB.i"
  %"CurrWI++.i" = add nuw i64 %CurrWI..2.i, 1
  %"loadedCurrSB+Stride.i" = add nuw i64 %CurrSBIndex..2.i, 12032
  %cond.i = icmp eq i32 %currBarrier.1.i, 2
  br i1 %cond.i, label %SyncBB853.preheader.i, label %SyncBB855.i

SyncBB.i:                                         ; preds = %thenBB858.i, %"Barrier BB.i"
  %CurrSBIndex..3.i = phi i64 [ %"loadedCurrSB+Stride864.i", %thenBB858.i ], [ 0, %"Barrier BB.i" ]
  %CurrWI..3.i = phi i64 [ %"CurrWI++862.i", %thenBB858.i ], [ 0, %"Barrier BB.i" ]
  %"&(pSB[currWI].offset)5611.i" = or i64 %CurrSBIndex..3.i, 152
  %"&pSB[currWI].offset562.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)5611.i"
  %CastToValueType563.i = bitcast i8* %"&pSB[currWI].offset562.i" to double addrspace(1)**
  %loadedValue564.i = load double addrspace(1)** %CastToValueType563.i, align 8
  %259 = load double addrspace(1)* %loadedValue564.i, align 8
  %"&(pSB[currWI].offset)5932.i" = or i64 %CurrSBIndex..3.i, 184
  %"&pSB[currWI].offset594.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)5932.i"
  %CastToValueType595.i = bitcast i8* %"&pSB[currWI].offset594.i" to double*
  store double %259, double* %CastToValueType595.i, align 8
  store double %259, double* %210, align 16
  %"&(pSB[currWI].offset)5883.i" = or i64 %CurrSBIndex..3.i, 176
  %"&pSB[currWI].offset589.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)5883.i"
  %CastToValueType590.i = bitcast i8* %"&pSB[currWI].offset589.i" to double addrspace(1)**
  %loadedValue591.i = load double addrspace(1)** %CastToValueType590.i, align 8
  %260 = load double addrspace(1)* %loadedValue591.i, align 8
  %"&(pSB[currWI].offset)6024.i" = or i64 %CurrSBIndex..3.i, 192
  %"&pSB[currWI].offset603.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)6024.i"
  %CastToValueType604.i = bitcast i8* %"&pSB[currWI].offset603.i" to double*
  store double %260, double* %CastToValueType604.i, align 8
  store double %260, double* %212, align 8
  %"&(pSB[currWI].offset)5795.i" = or i64 %CurrSBIndex..3.i, 168
  %"&pSB[currWI].offset580.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)5795.i"
  %CastToValueType581.i = bitcast i8* %"&pSB[currWI].offset580.i" to double addrspace(1)**
  %loadedValue582.i = load double addrspace(1)** %CastToValueType581.i, align 8
  %261 = load double addrspace(1)* %loadedValue582.i, align 8
  %"&(pSB[currWI].offset)6116.i" = or i64 %CurrSBIndex..3.i, 200
  %"&pSB[currWI].offset612.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)6116.i"
  %CastToValueType613.i = bitcast i8* %"&pSB[currWI].offset612.i" to double*
  store double %261, double* %CastToValueType613.i, align 8
  store double %261, double* %214, align 16
  %"&(pSB[currWI].offset)5707.i" = or i64 %CurrSBIndex..3.i, 160
  %"&pSB[currWI].offset571.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)5707.i"
  %CastToValueType572.i = bitcast i8* %"&pSB[currWI].offset571.i" to double addrspace(1)**
  %loadedValue573.i = load double addrspace(1)** %CastToValueType572.i, align 8
  %262 = load double addrspace(1)* %loadedValue573.i, align 8
  %"&(pSB[currWI].offset)6208.i" = or i64 %CurrSBIndex..3.i, 208
  %"&pSB[currWI].offset621.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)6208.i"
  %CastToValueType622.i = bitcast i8* %"&pSB[currWI].offset621.i" to double*
  store double %262, double* %CastToValueType622.i, align 8
  store double %262, double* %216, align 8
  %"&(pSB[currWI].offset)5529.i" = or i64 %CurrSBIndex..3.i, 144
  %"&pSB[currWI].offset553.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)5529.i"
  %CastToValueType554.i = bitcast i8* %"&pSB[currWI].offset553.i" to double addrspace(1)**
  %loadedValue555.i = load double addrspace(1)** %CastToValueType554.i, align 8
  %263 = load double addrspace(1)* %loadedValue555.i, align 8
  %"&(pSB[currWI].offset)62910.i" = or i64 %CurrSBIndex..3.i, 216
  %"&pSB[currWI].offset630.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)62910.i"
  %CastToValueType631.i = bitcast i8* %"&pSB[currWI].offset630.i" to double*
  store double %263, double* %CastToValueType631.i, align 8
  %264 = load double addrspace(3)* %42, align 16
  %"&(pSB[currWI].offset)45011.i" = or i64 %CurrSBIndex..3.i, 120
  %"&pSB[currWI].offset451.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)45011.i"
  %CastToValueType452.i = bitcast i8* %"&pSB[currWI].offset451.i" to double*
  %loadedValue453.i = load double* %CastToValueType452.i, align 8
  %265 = fmul double %loadedValue453.i, %264
  %266 = load double* %218, align 16
  %267 = fadd double %266, %265
  %268 = load double addrspace(3)* %44, align 8
  %"&(pSB[currWI].offset)45512.i" = or i64 %CurrSBIndex..3.i, 120
  %"&pSB[currWI].offset456.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)45512.i"
  %CastToValueType457.i = bitcast i8* %"&pSB[currWI].offset456.i" to double*
  %loadedValue458.i = load double* %CastToValueType457.i, align 8
  %269 = fmul double %loadedValue458.i, %268
  %270 = load double* %220, align 8
  %271 = fadd double %270, %269
  %272 = load double addrspace(3)* %46, align 16
  %"&(pSB[currWI].offset)46013.i" = or i64 %CurrSBIndex..3.i, 120
  %"&pSB[currWI].offset461.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)46013.i"
  %CastToValueType462.i = bitcast i8* %"&pSB[currWI].offset461.i" to double*
  %loadedValue463.i = load double* %CastToValueType462.i, align 8
  %273 = fmul double %loadedValue463.i, %272
  %274 = load double* %222, align 16
  %275 = fadd double %274, %273
  %276 = load double addrspace(3)* %48, align 8
  %"&(pSB[currWI].offset)46514.i" = or i64 %CurrSBIndex..3.i, 120
  %"&pSB[currWI].offset466.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)46514.i"
  %CastToValueType467.i = bitcast i8* %"&pSB[currWI].offset466.i" to double*
  %loadedValue468.i = load double* %CastToValueType467.i, align 8
  %277 = fmul double %loadedValue468.i, %276
  %278 = load double* %224, align 8
  %279 = fadd double %278, %277
  %280 = load double addrspace(3)* %50, align 16
  %"&(pSB[currWI].offset)47015.i" = or i64 %CurrSBIndex..3.i, 120
  %"&pSB[currWI].offset471.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)47015.i"
  %CastToValueType472.i = bitcast i8* %"&pSB[currWI].offset471.i" to double*
  %loadedValue473.i = load double* %CastToValueType472.i, align 8
  %281 = fmul double %loadedValue473.i, %280
  %282 = load double* %226, align 16
  %283 = fadd double %282, %281
  %284 = load double addrspace(3)* %52, align 8
  %"&(pSB[currWI].offset)47516.i" = or i64 %CurrSBIndex..3.i, 120
  %"&pSB[currWI].offset476.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)47516.i"
  %CastToValueType477.i = bitcast i8* %"&pSB[currWI].offset476.i" to double*
  %loadedValue478.i = load double* %CastToValueType477.i, align 8
  %285 = fmul double %loadedValue478.i, %284
  %286 = load double* %228, align 8
  %287 = fadd double %286, %285
  %288 = load double addrspace(3)* %54, align 16
  %"&(pSB[currWI].offset)48017.i" = or i64 %CurrSBIndex..3.i, 120
  %"&pSB[currWI].offset481.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)48017.i"
  %CastToValueType482.i = bitcast i8* %"&pSB[currWI].offset481.i" to double*
  %loadedValue483.i = load double* %CastToValueType482.i, align 8
  %289 = fmul double %loadedValue483.i, %288
  %290 = load double* %230, align 16
  %291 = fadd double %290, %289
  %292 = load double addrspace(3)* %56, align 8
  %"&(pSB[currWI].offset)48518.i" = or i64 %CurrSBIndex..3.i, 120
  %"&pSB[currWI].offset486.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)48518.i"
  %CastToValueType487.i = bitcast i8* %"&pSB[currWI].offset486.i" to double*
  %loadedValue488.i = load double* %CastToValueType487.i, align 8
  %293 = fmul double %loadedValue488.i, %292
  %294 = load double* %232, align 8
  %295 = fadd double %294, %293
  %296 = load double addrspace(3)* %58, align 16
  %"&(pSB[currWI].offset)49019.i" = or i64 %CurrSBIndex..3.i, 120
  %"&pSB[currWI].offset491.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)49019.i"
  %CastToValueType492.i = bitcast i8* %"&pSB[currWI].offset491.i" to double*
  %loadedValue493.i = load double* %CastToValueType492.i, align 8
  %297 = fmul double %loadedValue493.i, %296
  %298 = load double* %234, align 16
  %299 = fadd double %298, %297
  %300 = load double addrspace(3)* %60, align 8
  %"&(pSB[currWI].offset)49520.i" = or i64 %CurrSBIndex..3.i, 120
  %"&pSB[currWI].offset496.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)49520.i"
  %CastToValueType497.i = bitcast i8* %"&pSB[currWI].offset496.i" to double*
  %loadedValue498.i = load double* %CastToValueType497.i, align 8
  %301 = fmul double %loadedValue498.i, %300
  %302 = load double* %236, align 8
  %303 = fadd double %302, %301
  %304 = load double addrspace(3)* %62, align 16
  %"&(pSB[currWI].offset)50021.i" = or i64 %CurrSBIndex..3.i, 120
  %"&pSB[currWI].offset501.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)50021.i"
  %CastToValueType502.i = bitcast i8* %"&pSB[currWI].offset501.i" to double*
  %loadedValue503.i = load double* %CastToValueType502.i, align 8
  %305 = fmul double %loadedValue503.i, %304
  %306 = load double* %238, align 16
  %307 = fadd double %306, %305
  %308 = load double addrspace(3)* %64, align 8
  %"&(pSB[currWI].offset)50522.i" = or i64 %CurrSBIndex..3.i, 120
  %"&pSB[currWI].offset506.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)50522.i"
  %CastToValueType507.i = bitcast i8* %"&pSB[currWI].offset506.i" to double*
  %loadedValue508.i = load double* %CastToValueType507.i, align 8
  %309 = fmul double %loadedValue508.i, %308
  %310 = load double* %240, align 8
  %311 = fadd double %310, %309
  %312 = load double addrspace(3)* %66, align 16
  %"&(pSB[currWI].offset)51023.i" = or i64 %CurrSBIndex..3.i, 120
  %"&pSB[currWI].offset511.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)51023.i"
  %CastToValueType512.i = bitcast i8* %"&pSB[currWI].offset511.i" to double*
  %loadedValue513.i = load double* %CastToValueType512.i, align 8
  %313 = fmul double %loadedValue513.i, %312
  %314 = load double* %242, align 16
  %315 = fadd double %314, %313
  %316 = load double addrspace(3)* %68, align 8
  %"&(pSB[currWI].offset)51524.i" = or i64 %CurrSBIndex..3.i, 120
  %"&pSB[currWI].offset516.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)51524.i"
  %CastToValueType517.i = bitcast i8* %"&pSB[currWI].offset516.i" to double*
  %loadedValue518.i = load double* %CastToValueType517.i, align 8
  %317 = fmul double %loadedValue518.i, %316
  %318 = load double* %244, align 8
  %319 = fadd double %318, %317
  %320 = load double addrspace(3)* %70, align 16
  %"&(pSB[currWI].offset)52025.i" = or i64 %CurrSBIndex..3.i, 120
  %"&pSB[currWI].offset521.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)52025.i"
  %CastToValueType522.i = bitcast i8* %"&pSB[currWI].offset521.i" to double*
  %loadedValue523.i = load double* %CastToValueType522.i, align 8
  %321 = fmul double %loadedValue523.i, %320
  %322 = load double* %246, align 16
  %323 = fadd double %322, %321
  %324 = load double addrspace(3)* %72, align 8
  %"&(pSB[currWI].offset)52526.i" = or i64 %CurrSBIndex..3.i, 120
  %"&pSB[currWI].offset526.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)52526.i"
  %CastToValueType527.i = bitcast i8* %"&pSB[currWI].offset526.i" to double*
  %loadedValue528.i = load double* %CastToValueType527.i, align 8
  %325 = fmul double %loadedValue528.i, %324
  %326 = load double* %248, align 8
  %327 = fadd double %326, %325
  %328 = load double addrspace(3)* %74, align 16
  %"&(pSB[currWI].offset)36627.i" = or i64 %CurrSBIndex..3.i, 112
  %"&pSB[currWI].offset367.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)36627.i"
  %CastToValueType368.i = bitcast i8* %"&pSB[currWI].offset367.i" to double*
  %loadedValue369.i = load double* %CastToValueType368.i, align 8
  %329 = fmul double %loadedValue369.i, %328
  %330 = fadd double %267, %329
  %331 = load double addrspace(3)* %76, align 8
  %"&(pSB[currWI].offset)37128.i" = or i64 %CurrSBIndex..3.i, 112
  %"&pSB[currWI].offset372.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)37128.i"
  %CastToValueType373.i = bitcast i8* %"&pSB[currWI].offset372.i" to double*
  %loadedValue374.i = load double* %CastToValueType373.i, align 8
  %332 = fmul double %loadedValue374.i, %331
  %333 = fadd double %271, %332
  %334 = load double addrspace(3)* %78, align 16
  %"&(pSB[currWI].offset)37629.i" = or i64 %CurrSBIndex..3.i, 112
  %"&pSB[currWI].offset377.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)37629.i"
  %CastToValueType378.i = bitcast i8* %"&pSB[currWI].offset377.i" to double*
  %loadedValue379.i = load double* %CastToValueType378.i, align 8
  %335 = fmul double %loadedValue379.i, %334
  %336 = fadd double %275, %335
  %337 = load double addrspace(3)* %80, align 8
  %"&(pSB[currWI].offset)38130.i" = or i64 %CurrSBIndex..3.i, 112
  %"&pSB[currWI].offset382.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)38130.i"
  %CastToValueType383.i = bitcast i8* %"&pSB[currWI].offset382.i" to double*
  %loadedValue384.i = load double* %CastToValueType383.i, align 8
  %338 = fmul double %loadedValue384.i, %337
  %339 = fadd double %279, %338
  %340 = load double addrspace(3)* %82, align 16
  %"&(pSB[currWI].offset)38631.i" = or i64 %CurrSBIndex..3.i, 112
  %"&pSB[currWI].offset387.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)38631.i"
  %CastToValueType388.i = bitcast i8* %"&pSB[currWI].offset387.i" to double*
  %loadedValue389.i = load double* %CastToValueType388.i, align 8
  %341 = fmul double %loadedValue389.i, %340
  %342 = fadd double %283, %341
  %343 = load double addrspace(3)* %84, align 8
  %"&(pSB[currWI].offset)39132.i" = or i64 %CurrSBIndex..3.i, 112
  %"&pSB[currWI].offset392.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)39132.i"
  %CastToValueType393.i = bitcast i8* %"&pSB[currWI].offset392.i" to double*
  %loadedValue394.i = load double* %CastToValueType393.i, align 8
  %344 = fmul double %loadedValue394.i, %343
  %345 = fadd double %287, %344
  %346 = load double addrspace(3)* %86, align 16
  %"&(pSB[currWI].offset)39633.i" = or i64 %CurrSBIndex..3.i, 112
  %"&pSB[currWI].offset397.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)39633.i"
  %CastToValueType398.i = bitcast i8* %"&pSB[currWI].offset397.i" to double*
  %loadedValue399.i = load double* %CastToValueType398.i, align 8
  %347 = fmul double %loadedValue399.i, %346
  %348 = fadd double %291, %347
  %349 = load double addrspace(3)* %88, align 8
  %"&(pSB[currWI].offset)40134.i" = or i64 %CurrSBIndex..3.i, 112
  %"&pSB[currWI].offset402.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)40134.i"
  %CastToValueType403.i = bitcast i8* %"&pSB[currWI].offset402.i" to double*
  %loadedValue404.i = load double* %CastToValueType403.i, align 8
  %350 = fmul double %loadedValue404.i, %349
  %351 = fadd double %295, %350
  %352 = load double addrspace(3)* %90, align 16
  %"&(pSB[currWI].offset)40635.i" = or i64 %CurrSBIndex..3.i, 112
  %"&pSB[currWI].offset407.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)40635.i"
  %CastToValueType408.i = bitcast i8* %"&pSB[currWI].offset407.i" to double*
  %loadedValue409.i = load double* %CastToValueType408.i, align 8
  %353 = fmul double %loadedValue409.i, %352
  %354 = fadd double %299, %353
  %355 = load double addrspace(3)* %92, align 8
  %"&(pSB[currWI].offset)41136.i" = or i64 %CurrSBIndex..3.i, 112
  %"&pSB[currWI].offset412.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)41136.i"
  %CastToValueType413.i = bitcast i8* %"&pSB[currWI].offset412.i" to double*
  %loadedValue414.i = load double* %CastToValueType413.i, align 8
  %356 = fmul double %loadedValue414.i, %355
  %357 = fadd double %303, %356
  %358 = load double addrspace(3)* %94, align 16
  %"&(pSB[currWI].offset)41637.i" = or i64 %CurrSBIndex..3.i, 112
  %"&pSB[currWI].offset417.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)41637.i"
  %CastToValueType418.i = bitcast i8* %"&pSB[currWI].offset417.i" to double*
  %loadedValue419.i = load double* %CastToValueType418.i, align 8
  %359 = fmul double %loadedValue419.i, %358
  %360 = fadd double %307, %359
  %361 = load double addrspace(3)* %96, align 8
  %"&(pSB[currWI].offset)42138.i" = or i64 %CurrSBIndex..3.i, 112
  %"&pSB[currWI].offset422.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)42138.i"
  %CastToValueType423.i = bitcast i8* %"&pSB[currWI].offset422.i" to double*
  %loadedValue424.i = load double* %CastToValueType423.i, align 8
  %362 = fmul double %loadedValue424.i, %361
  %363 = fadd double %311, %362
  %364 = load double addrspace(3)* %98, align 16
  %"&(pSB[currWI].offset)42639.i" = or i64 %CurrSBIndex..3.i, 112
  %"&pSB[currWI].offset427.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)42639.i"
  %CastToValueType428.i = bitcast i8* %"&pSB[currWI].offset427.i" to double*
  %loadedValue429.i = load double* %CastToValueType428.i, align 8
  %365 = fmul double %loadedValue429.i, %364
  %366 = fadd double %315, %365
  %367 = load double addrspace(3)* %100, align 8
  %"&(pSB[currWI].offset)43140.i" = or i64 %CurrSBIndex..3.i, 112
  %"&pSB[currWI].offset432.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)43140.i"
  %CastToValueType433.i = bitcast i8* %"&pSB[currWI].offset432.i" to double*
  %loadedValue434.i = load double* %CastToValueType433.i, align 8
  %368 = fmul double %loadedValue434.i, %367
  %369 = fadd double %319, %368
  %370 = load double addrspace(3)* %102, align 16
  %"&(pSB[currWI].offset)43641.i" = or i64 %CurrSBIndex..3.i, 112
  %"&pSB[currWI].offset437.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)43641.i"
  %CastToValueType438.i = bitcast i8* %"&pSB[currWI].offset437.i" to double*
  %loadedValue439.i = load double* %CastToValueType438.i, align 8
  %371 = fmul double %loadedValue439.i, %370
  %372 = fadd double %323, %371
  %373 = load double addrspace(3)* %104, align 8
  %"&(pSB[currWI].offset)44142.i" = or i64 %CurrSBIndex..3.i, 112
  %"&pSB[currWI].offset442.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)44142.i"
  %CastToValueType443.i = bitcast i8* %"&pSB[currWI].offset442.i" to double*
  %loadedValue444.i = load double* %CastToValueType443.i, align 8
  %374 = fmul double %loadedValue444.i, %373
  %375 = fadd double %327, %374
  %376 = load double addrspace(3)* %106, align 16
  %"&(pSB[currWI].offset)28243.i" = or i64 %CurrSBIndex..3.i, 104
  %"&pSB[currWI].offset283.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)28243.i"
  %CastToValueType284.i = bitcast i8* %"&pSB[currWI].offset283.i" to double*
  %loadedValue285.i = load double* %CastToValueType284.i, align 8
  %377 = fmul double %loadedValue285.i, %376
  %378 = fadd double %330, %377
  %379 = load double addrspace(3)* %108, align 8
  %"&(pSB[currWI].offset)28744.i" = or i64 %CurrSBIndex..3.i, 104
  %"&pSB[currWI].offset288.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)28744.i"
  %CastToValueType289.i = bitcast i8* %"&pSB[currWI].offset288.i" to double*
  %loadedValue290.i = load double* %CastToValueType289.i, align 8
  %380 = fmul double %loadedValue290.i, %379
  %381 = fadd double %333, %380
  %382 = load double addrspace(3)* %110, align 16
  %"&(pSB[currWI].offset)29245.i" = or i64 %CurrSBIndex..3.i, 104
  %"&pSB[currWI].offset293.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)29245.i"
  %CastToValueType294.i = bitcast i8* %"&pSB[currWI].offset293.i" to double*
  %loadedValue295.i = load double* %CastToValueType294.i, align 8
  %383 = fmul double %loadedValue295.i, %382
  %384 = fadd double %336, %383
  %385 = load double addrspace(3)* %112, align 8
  %"&(pSB[currWI].offset)29746.i" = or i64 %CurrSBIndex..3.i, 104
  %"&pSB[currWI].offset298.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)29746.i"
  %CastToValueType299.i = bitcast i8* %"&pSB[currWI].offset298.i" to double*
  %loadedValue300.i = load double* %CastToValueType299.i, align 8
  %386 = fmul double %loadedValue300.i, %385
  %387 = fadd double %339, %386
  %388 = load double addrspace(3)* %114, align 16
  %"&(pSB[currWI].offset)30247.i" = or i64 %CurrSBIndex..3.i, 104
  %"&pSB[currWI].offset303.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)30247.i"
  %CastToValueType304.i = bitcast i8* %"&pSB[currWI].offset303.i" to double*
  %loadedValue305.i = load double* %CastToValueType304.i, align 8
  %389 = fmul double %loadedValue305.i, %388
  %390 = fadd double %342, %389
  %391 = load double addrspace(3)* %116, align 8
  %"&(pSB[currWI].offset)30748.i" = or i64 %CurrSBIndex..3.i, 104
  %"&pSB[currWI].offset308.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)30748.i"
  %CastToValueType309.i = bitcast i8* %"&pSB[currWI].offset308.i" to double*
  %loadedValue310.i = load double* %CastToValueType309.i, align 8
  %392 = fmul double %loadedValue310.i, %391
  %393 = fadd double %345, %392
  %394 = load double addrspace(3)* %118, align 16
  %"&(pSB[currWI].offset)31249.i" = or i64 %CurrSBIndex..3.i, 104
  %"&pSB[currWI].offset313.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)31249.i"
  %CastToValueType314.i = bitcast i8* %"&pSB[currWI].offset313.i" to double*
  %loadedValue315.i = load double* %CastToValueType314.i, align 8
  %395 = fmul double %loadedValue315.i, %394
  %396 = fadd double %348, %395
  %397 = load double addrspace(3)* %120, align 8
  %"&(pSB[currWI].offset)31750.i" = or i64 %CurrSBIndex..3.i, 104
  %"&pSB[currWI].offset318.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)31750.i"
  %CastToValueType319.i = bitcast i8* %"&pSB[currWI].offset318.i" to double*
  %loadedValue320.i = load double* %CastToValueType319.i, align 8
  %398 = fmul double %loadedValue320.i, %397
  %399 = fadd double %351, %398
  %400 = load double addrspace(3)* %122, align 16
  %"&(pSB[currWI].offset)32251.i" = or i64 %CurrSBIndex..3.i, 104
  %"&pSB[currWI].offset323.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)32251.i"
  %CastToValueType324.i = bitcast i8* %"&pSB[currWI].offset323.i" to double*
  %loadedValue325.i = load double* %CastToValueType324.i, align 8
  %401 = fmul double %loadedValue325.i, %400
  %402 = fadd double %354, %401
  %403 = load double addrspace(3)* %124, align 8
  %"&(pSB[currWI].offset)32752.i" = or i64 %CurrSBIndex..3.i, 104
  %"&pSB[currWI].offset328.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)32752.i"
  %CastToValueType329.i = bitcast i8* %"&pSB[currWI].offset328.i" to double*
  %loadedValue330.i = load double* %CastToValueType329.i, align 8
  %404 = fmul double %loadedValue330.i, %403
  %405 = fadd double %357, %404
  %406 = load double addrspace(3)* %126, align 16
  %"&(pSB[currWI].offset)33253.i" = or i64 %CurrSBIndex..3.i, 104
  %"&pSB[currWI].offset333.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)33253.i"
  %CastToValueType334.i = bitcast i8* %"&pSB[currWI].offset333.i" to double*
  %loadedValue335.i = load double* %CastToValueType334.i, align 8
  %407 = fmul double %loadedValue335.i, %406
  %408 = fadd double %360, %407
  %409 = load double addrspace(3)* %128, align 8
  %"&(pSB[currWI].offset)33754.i" = or i64 %CurrSBIndex..3.i, 104
  %"&pSB[currWI].offset338.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)33754.i"
  %CastToValueType339.i = bitcast i8* %"&pSB[currWI].offset338.i" to double*
  %loadedValue340.i = load double* %CastToValueType339.i, align 8
  %410 = fmul double %loadedValue340.i, %409
  %411 = fadd double %363, %410
  %412 = load double addrspace(3)* %130, align 16
  %"&(pSB[currWI].offset)34255.i" = or i64 %CurrSBIndex..3.i, 104
  %"&pSB[currWI].offset343.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)34255.i"
  %CastToValueType344.i = bitcast i8* %"&pSB[currWI].offset343.i" to double*
  %loadedValue345.i = load double* %CastToValueType344.i, align 8
  %413 = fmul double %loadedValue345.i, %412
  %414 = fadd double %366, %413
  %415 = load double addrspace(3)* %132, align 8
  %"&(pSB[currWI].offset)34756.i" = or i64 %CurrSBIndex..3.i, 104
  %"&pSB[currWI].offset348.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)34756.i"
  %CastToValueType349.i = bitcast i8* %"&pSB[currWI].offset348.i" to double*
  %loadedValue350.i = load double* %CastToValueType349.i, align 8
  %416 = fmul double %loadedValue350.i, %415
  %417 = fadd double %369, %416
  %418 = load double addrspace(3)* %134, align 16
  %"&(pSB[currWI].offset)35257.i" = or i64 %CurrSBIndex..3.i, 104
  %"&pSB[currWI].offset353.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)35257.i"
  %CastToValueType354.i = bitcast i8* %"&pSB[currWI].offset353.i" to double*
  %loadedValue355.i = load double* %CastToValueType354.i, align 8
  %419 = fmul double %loadedValue355.i, %418
  %420 = fadd double %372, %419
  %421 = load double addrspace(3)* %136, align 8
  %"&(pSB[currWI].offset)35758.i" = or i64 %CurrSBIndex..3.i, 104
  %"&pSB[currWI].offset358.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)35758.i"
  %CastToValueType359.i = bitcast i8* %"&pSB[currWI].offset358.i" to double*
  %loadedValue360.i = load double* %CastToValueType359.i, align 8
  %422 = fmul double %loadedValue360.i, %421
  %423 = fadd double %375, %422
  %424 = load double addrspace(3)* %138, align 16
  %"&(pSB[currWI].offset)19859.i" = or i64 %CurrSBIndex..3.i, 96
  %"&pSB[currWI].offset199.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)19859.i"
  %CastToValueType200.i = bitcast i8* %"&pSB[currWI].offset199.i" to double*
  %loadedValue201.i = load double* %CastToValueType200.i, align 8
  %425 = fmul double %loadedValue201.i, %424
  %426 = fadd double %378, %425
  store double %426, double* %218, align 16
  %427 = load double addrspace(3)* %140, align 8
  %"&(pSB[currWI].offset)20360.i" = or i64 %CurrSBIndex..3.i, 96
  %"&pSB[currWI].offset204.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)20360.i"
  %CastToValueType205.i = bitcast i8* %"&pSB[currWI].offset204.i" to double*
  %loadedValue206.i = load double* %CastToValueType205.i, align 8
  %428 = fmul double %loadedValue206.i, %427
  %429 = fadd double %381, %428
  store double %429, double* %220, align 8
  %430 = load double addrspace(3)* %142, align 16
  %"&(pSB[currWI].offset)20861.i" = or i64 %CurrSBIndex..3.i, 96
  %"&pSB[currWI].offset209.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)20861.i"
  %CastToValueType210.i = bitcast i8* %"&pSB[currWI].offset209.i" to double*
  %loadedValue211.i = load double* %CastToValueType210.i, align 8
  %431 = fmul double %loadedValue211.i, %430
  %432 = fadd double %384, %431
  store double %432, double* %222, align 16
  %433 = load double addrspace(3)* %144, align 8
  %"&(pSB[currWI].offset)21362.i" = or i64 %CurrSBIndex..3.i, 96
  %"&pSB[currWI].offset214.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)21362.i"
  %CastToValueType215.i = bitcast i8* %"&pSB[currWI].offset214.i" to double*
  %loadedValue216.i = load double* %CastToValueType215.i, align 8
  %434 = fmul double %loadedValue216.i, %433
  %435 = fadd double %387, %434
  store double %435, double* %224, align 8
  %436 = load double addrspace(3)* %146, align 16
  %"&(pSB[currWI].offset)21863.i" = or i64 %CurrSBIndex..3.i, 96
  %"&pSB[currWI].offset219.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)21863.i"
  %CastToValueType220.i = bitcast i8* %"&pSB[currWI].offset219.i" to double*
  %loadedValue221.i = load double* %CastToValueType220.i, align 8
  %437 = fmul double %loadedValue221.i, %436
  %438 = fadd double %390, %437
  store double %438, double* %226, align 16
  %439 = load double addrspace(3)* %148, align 8
  %"&(pSB[currWI].offset)22364.i" = or i64 %CurrSBIndex..3.i, 96
  %"&pSB[currWI].offset224.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)22364.i"
  %CastToValueType225.i = bitcast i8* %"&pSB[currWI].offset224.i" to double*
  %loadedValue226.i = load double* %CastToValueType225.i, align 8
  %440 = fmul double %loadedValue226.i, %439
  %441 = fadd double %393, %440
  store double %441, double* %228, align 8
  %442 = load double addrspace(3)* %150, align 16
  %"&(pSB[currWI].offset)22865.i" = or i64 %CurrSBIndex..3.i, 96
  %"&pSB[currWI].offset229.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)22865.i"
  %CastToValueType230.i = bitcast i8* %"&pSB[currWI].offset229.i" to double*
  %loadedValue231.i = load double* %CastToValueType230.i, align 8
  %443 = fmul double %loadedValue231.i, %442
  %444 = fadd double %396, %443
  store double %444, double* %230, align 16
  %445 = load double addrspace(3)* %152, align 8
  %"&(pSB[currWI].offset)23366.i" = or i64 %CurrSBIndex..3.i, 96
  %"&pSB[currWI].offset234.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)23366.i"
  %CastToValueType235.i = bitcast i8* %"&pSB[currWI].offset234.i" to double*
  %loadedValue236.i = load double* %CastToValueType235.i, align 8
  %446 = fmul double %loadedValue236.i, %445
  %447 = fadd double %399, %446
  store double %447, double* %232, align 8
  %448 = load double addrspace(3)* %154, align 16
  %"&(pSB[currWI].offset)23867.i" = or i64 %CurrSBIndex..3.i, 96
  %"&pSB[currWI].offset239.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)23867.i"
  %CastToValueType240.i = bitcast i8* %"&pSB[currWI].offset239.i" to double*
  %loadedValue241.i = load double* %CastToValueType240.i, align 8
  %449 = fmul double %loadedValue241.i, %448
  %450 = fadd double %402, %449
  store double %450, double* %234, align 16
  %451 = load double addrspace(3)* %156, align 8
  %"&(pSB[currWI].offset)24368.i" = or i64 %CurrSBIndex..3.i, 96
  %"&pSB[currWI].offset244.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)24368.i"
  %CastToValueType245.i = bitcast i8* %"&pSB[currWI].offset244.i" to double*
  %loadedValue246.i = load double* %CastToValueType245.i, align 8
  %452 = fmul double %loadedValue246.i, %451
  %453 = fadd double %405, %452
  store double %453, double* %236, align 8
  %454 = load double addrspace(3)* %158, align 16
  %"&(pSB[currWI].offset)24869.i" = or i64 %CurrSBIndex..3.i, 96
  %"&pSB[currWI].offset249.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)24869.i"
  %CastToValueType250.i = bitcast i8* %"&pSB[currWI].offset249.i" to double*
  %loadedValue251.i = load double* %CastToValueType250.i, align 8
  %455 = fmul double %loadedValue251.i, %454
  %456 = fadd double %408, %455
  store double %456, double* %238, align 16
  %457 = load double addrspace(3)* %160, align 8
  %"&(pSB[currWI].offset)25370.i" = or i64 %CurrSBIndex..3.i, 96
  %"&pSB[currWI].offset254.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)25370.i"
  %CastToValueType255.i = bitcast i8* %"&pSB[currWI].offset254.i" to double*
  %loadedValue256.i = load double* %CastToValueType255.i, align 8
  %458 = fmul double %loadedValue256.i, %457
  %459 = fadd double %411, %458
  store double %459, double* %240, align 8
  %460 = load double addrspace(3)* %162, align 16
  %"&(pSB[currWI].offset)25871.i" = or i64 %CurrSBIndex..3.i, 96
  %"&pSB[currWI].offset259.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)25871.i"
  %CastToValueType260.i = bitcast i8* %"&pSB[currWI].offset259.i" to double*
  %loadedValue261.i = load double* %CastToValueType260.i, align 8
  %461 = fmul double %loadedValue261.i, %460
  %462 = fadd double %414, %461
  store double %462, double* %242, align 16
  %463 = load double addrspace(3)* %164, align 8
  %"&(pSB[currWI].offset)26372.i" = or i64 %CurrSBIndex..3.i, 96
  %"&pSB[currWI].offset264.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)26372.i"
  %CastToValueType265.i = bitcast i8* %"&pSB[currWI].offset264.i" to double*
  %loadedValue266.i = load double* %CastToValueType265.i, align 8
  %464 = fmul double %loadedValue266.i, %463
  %465 = fadd double %417, %464
  store double %465, double* %244, align 8
  %466 = load double addrspace(3)* %166, align 16
  %"&(pSB[currWI].offset)26873.i" = or i64 %CurrSBIndex..3.i, 96
  %"&pSB[currWI].offset269.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)26873.i"
  %CastToValueType270.i = bitcast i8* %"&pSB[currWI].offset269.i" to double*
  %loadedValue271.i = load double* %CastToValueType270.i, align 8
  %467 = fmul double %loadedValue271.i, %466
  %468 = fadd double %420, %467
  store double %468, double* %246, align 16
  %469 = load double addrspace(3)* %168, align 8
  %"&(pSB[currWI].offset)27374.i" = or i64 %CurrSBIndex..3.i, 96
  %"&pSB[currWI].offset274.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)27374.i"
  %CastToValueType275.i = bitcast i8* %"&pSB[currWI].offset274.i" to double*
  %loadedValue276.i = load double* %CastToValueType275.i, align 8
  %470 = fmul double %loadedValue276.i, %469
  %471 = fadd double %423, %470
  store double %471, double* %248, align 8
  %check.WI.iter861.i = icmp ult i64 %CurrWI..3.i, %37
  br i1 %check.WI.iter861.i, label %thenBB858.i, label %SyncBB853.preheader.i

thenBB858.i:                                      ; preds = %SyncBB.i
  %"CurrWI++862.i" = add nuw i64 %CurrWI..3.i, 1
  %"loadedCurrSB+Stride864.i" = add nuw i64 %CurrSBIndex..3.i, 12032
  br label %SyncBB.i

SyncBB853.preheader.i:                            ; preds = %SyncBB.i, %thenBB.i
  %currBarrier.0.ph.i = phi i32 [ %currBarrier.1.i, %thenBB.i ], [ 2, %SyncBB.i ]
  %CurrSBIndex..1.ph.i = phi i64 [ %"loadedCurrSB+Stride.i", %thenBB.i ], [ 0, %SyncBB.i ]
  %CurrWI..1.ph.i = phi i64 [ %"CurrWI++.i", %thenBB.i ], [ 0, %SyncBB.i ]
  br label %SyncBB853.i

SyncBB853.i:                                      ; preds = %thenBB865.i, %SyncBB853.preheader.i
  %CurrSBIndex..1.i = phi i64 [ %"loadedCurrSB+Stride871.i", %thenBB865.i ], [ %CurrSBIndex..1.ph.i, %SyncBB853.preheader.i ]
  %CurrWI..1.i = phi i64 [ %"CurrWI++869.i", %thenBB865.i ], [ %CurrWI..1.ph.i, %SyncBB853.preheader.i ]
  %"&(pSB[currWI].offset)543.i" = add nuw i64 %CurrSBIndex..1.i, 136
  %"&pSB[currWI].offset544.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)543.i"
  %CastToValueType545.i = bitcast i8* %"&pSB[currWI].offset544.i" to i32*
  %loadedValue546.i = load i32* %CastToValueType545.i, align 4
  %472 = icmp slt i32 %loadedValue546.i, %172
  %"&(pSB[currWI].offset)534.i" = add nuw i64 %CurrSBIndex..1.i, 128
  %"&pSB[currWI].offset535.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)534.i"
  %CastToValueType536.i = bitcast i8* %"&pSB[currWI].offset535.i" to i64*
  %loadedValue537.i = load i64* %CastToValueType536.i, align 8
  %indvar.next36.i = add i64 %loadedValue537.i, 1
  %"&(pSB[currWI].offset)643.i" = add nuw i64 %CurrSBIndex..1.i, 224
  %"&pSB[currWI].offset644.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)643.i"
  %CastToValueType645.i = bitcast i8* %"&pSB[currWI].offset644.i" to i64*
  store i64 %indvar.next36.i, i64* %CastToValueType645.i, align 8
  br i1 %472, label %.loopexit.i, label %bb.nph.i

bb.nph.i:                                         ; preds = %SyncBB853.i
  %"&(pSB[currWI].offset)139.i" = add nuw i64 %CurrSBIndex..1.i, 48
  %"&pSB[currWI].offset140.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)139.i"
  %CastToValueType141.i = bitcast i8* %"&pSB[currWI].offset140.i" to double addrspace(3)**
  %loadedValue142.i = load double addrspace(3)** %CastToValueType141.i, align 8
  %"&(pSB[currWI].offset)633.i" = add nuw i64 %CurrSBIndex..1.i, 216
  %"&pSB[currWI].offset634.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)633.i"
  %CastToValueType635.i = bitcast i8* %"&pSB[currWI].offset634.i" to double*
  %loadedValue636.i = load double* %CastToValueType635.i, align 8
  store double %loadedValue636.i, double addrspace(3)* %loadedValue142.i, align 8
  %check.WI.iter868.i = icmp ult i64 %CurrWI..1.i, %37
  br i1 %check.WI.iter868.i, label %thenBB865.i, label %elseBB866.i

thenBB865.i:                                      ; preds = %bb.nph.i
  %"CurrWI++869.i" = add nuw i64 %CurrWI..1.i, 1
  %"loadedCurrSB+Stride871.i" = add nuw i64 %CurrSBIndex..1.i, 12032
  br label %SyncBB853.i

elseBB866.i:                                      ; preds = %bb.nph.i
  %tmp.i = sext i32 %16 to i64
  %tmp18.i = mul i32 %185, %16
  br label %SyncBB854.i

SyncBB854.i:                                      ; preds = %thenBB872.i, %elseBB866.i
  %CurrSBIndex..4.i = phi i64 [ 0, %elseBB866.i ], [ %"loadedCurrSB+Stride878.i", %thenBB872.i ]
  %CurrWI..4.i = phi i64 [ 0, %elseBB866.i ], [ %"CurrWI++876.i", %thenBB872.i ]
  %473 = load double* %210, align 16
  %474 = load double addrspace(3)* %42, align 16
  %475 = fmul double %473, %474
  %476 = load double* %218, align 16
  %477 = fadd double %476, %475
  %478 = load double addrspace(3)* %44, align 8
  %479 = fmul double %473, %478
  %480 = load double* %220, align 8
  %481 = fadd double %480, %479
  %482 = load double addrspace(3)* %46, align 16
  %483 = fmul double %473, %482
  %484 = load double* %222, align 16
  %485 = fadd double %484, %483
  %486 = load double addrspace(3)* %48, align 8
  %487 = fmul double %473, %486
  %488 = load double* %224, align 8
  %489 = fadd double %488, %487
  %490 = load double addrspace(3)* %50, align 16
  %491 = fmul double %473, %490
  %492 = load double* %226, align 16
  %493 = fadd double %492, %491
  %494 = load double addrspace(3)* %52, align 8
  %495 = fmul double %473, %494
  %496 = load double* %228, align 8
  %497 = fadd double %496, %495
  %498 = load double addrspace(3)* %54, align 16
  %499 = fmul double %473, %498
  %500 = load double* %230, align 16
  %501 = fadd double %500, %499
  %502 = load double addrspace(3)* %56, align 8
  %503 = fmul double %473, %502
  %504 = load double* %232, align 8
  %505 = fadd double %504, %503
  %506 = load double addrspace(3)* %58, align 16
  %507 = fmul double %473, %506
  %508 = load double* %234, align 16
  %509 = fadd double %508, %507
  %510 = load double addrspace(3)* %60, align 8
  %511 = fmul double %473, %510
  %512 = load double* %236, align 8
  %513 = fadd double %512, %511
  %514 = load double addrspace(3)* %62, align 16
  %515 = fmul double %473, %514
  %516 = load double* %238, align 16
  %517 = fadd double %516, %515
  %518 = load double addrspace(3)* %64, align 8
  %519 = fmul double %473, %518
  %520 = load double* %240, align 8
  %521 = fadd double %520, %519
  %522 = load double addrspace(3)* %66, align 16
  %523 = fmul double %473, %522
  %524 = load double* %242, align 16
  %525 = fadd double %524, %523
  %526 = load double addrspace(3)* %68, align 8
  %527 = fmul double %473, %526
  %528 = load double* %244, align 8
  %529 = fadd double %528, %527
  %530 = load double addrspace(3)* %70, align 16
  %531 = fmul double %473, %530
  %532 = load double* %246, align 16
  %533 = fadd double %532, %531
  %534 = load double addrspace(3)* %72, align 8
  %535 = fmul double %473, %534
  %536 = load double* %248, align 8
  %537 = fadd double %536, %535
  %538 = load double* %212, align 8
  %539 = load double addrspace(3)* %74, align 16
  %540 = fmul double %538, %539
  %541 = fadd double %477, %540
  %542 = load double addrspace(3)* %76, align 8
  %543 = fmul double %538, %542
  %544 = fadd double %481, %543
  %545 = load double addrspace(3)* %78, align 16
  %546 = fmul double %538, %545
  %547 = fadd double %485, %546
  %548 = load double addrspace(3)* %80, align 8
  %549 = fmul double %538, %548
  %550 = fadd double %489, %549
  %551 = load double addrspace(3)* %82, align 16
  %552 = fmul double %538, %551
  %553 = fadd double %493, %552
  %554 = load double addrspace(3)* %84, align 8
  %555 = fmul double %538, %554
  %556 = fadd double %497, %555
  %557 = load double addrspace(3)* %86, align 16
  %558 = fmul double %538, %557
  %559 = fadd double %501, %558
  %560 = load double addrspace(3)* %88, align 8
  %561 = fmul double %538, %560
  %562 = fadd double %505, %561
  %563 = load double addrspace(3)* %90, align 16
  %564 = fmul double %538, %563
  %565 = fadd double %509, %564
  %566 = load double addrspace(3)* %92, align 8
  %567 = fmul double %538, %566
  %568 = fadd double %513, %567
  %569 = load double addrspace(3)* %94, align 16
  %570 = fmul double %538, %569
  %571 = fadd double %517, %570
  %572 = load double addrspace(3)* %96, align 8
  %573 = fmul double %538, %572
  %574 = fadd double %521, %573
  %575 = load double addrspace(3)* %98, align 16
  %576 = fmul double %538, %575
  %577 = fadd double %525, %576
  %578 = load double addrspace(3)* %100, align 8
  %579 = fmul double %538, %578
  %580 = fadd double %529, %579
  %581 = load double addrspace(3)* %102, align 16
  %582 = fmul double %538, %581
  %583 = fadd double %533, %582
  %584 = load double addrspace(3)* %104, align 8
  %585 = fmul double %538, %584
  %586 = fadd double %537, %585
  %587 = load double* %214, align 16
  %588 = load double addrspace(3)* %106, align 16
  %589 = fmul double %587, %588
  %590 = fadd double %541, %589
  %591 = load double addrspace(3)* %108, align 8
  %592 = fmul double %587, %591
  %593 = fadd double %544, %592
  %594 = load double addrspace(3)* %110, align 16
  %595 = fmul double %587, %594
  %596 = fadd double %547, %595
  %597 = load double addrspace(3)* %112, align 8
  %598 = fmul double %587, %597
  %599 = fadd double %550, %598
  %600 = load double addrspace(3)* %114, align 16
  %601 = fmul double %587, %600
  %602 = fadd double %553, %601
  %603 = load double addrspace(3)* %116, align 8
  %604 = fmul double %587, %603
  %605 = fadd double %556, %604
  %606 = load double addrspace(3)* %118, align 16
  %607 = fmul double %587, %606
  %608 = fadd double %559, %607
  %609 = load double addrspace(3)* %120, align 8
  %610 = fmul double %587, %609
  %611 = fadd double %562, %610
  %612 = load double addrspace(3)* %122, align 16
  %613 = fmul double %587, %612
  %614 = fadd double %565, %613
  %615 = load double addrspace(3)* %124, align 8
  %616 = fmul double %587, %615
  %617 = fadd double %568, %616
  %618 = load double addrspace(3)* %126, align 16
  %619 = fmul double %587, %618
  %620 = fadd double %571, %619
  %621 = load double addrspace(3)* %128, align 8
  %622 = fmul double %587, %621
  %623 = fadd double %574, %622
  %624 = load double addrspace(3)* %130, align 16
  %625 = fmul double %587, %624
  %626 = fadd double %577, %625
  %627 = load double addrspace(3)* %132, align 8
  %628 = fmul double %587, %627
  %629 = fadd double %580, %628
  %630 = load double addrspace(3)* %134, align 16
  %631 = fmul double %587, %630
  %632 = fadd double %583, %631
  %633 = load double addrspace(3)* %136, align 8
  %634 = fmul double %587, %633
  %635 = fadd double %586, %634
  %636 = load double* %216, align 8
  %637 = load double addrspace(3)* %138, align 16
  %638 = fmul double %636, %637
  %639 = fadd double %590, %638
  store double %639, double* %218, align 16
  %640 = load double addrspace(3)* %140, align 8
  %641 = fmul double %636, %640
  %642 = fadd double %593, %641
  store double %642, double* %220, align 8
  %643 = load double addrspace(3)* %142, align 16
  %644 = fmul double %636, %643
  %645 = fadd double %596, %644
  store double %645, double* %222, align 16
  %646 = load double addrspace(3)* %144, align 8
  %647 = fmul double %636, %646
  %648 = fadd double %599, %647
  store double %648, double* %224, align 8
  %649 = load double addrspace(3)* %146, align 16
  %650 = fmul double %636, %649
  %651 = fadd double %602, %650
  store double %651, double* %226, align 16
  %652 = load double addrspace(3)* %148, align 8
  %653 = fmul double %636, %652
  %654 = fadd double %605, %653
  store double %654, double* %228, align 8
  %655 = load double addrspace(3)* %150, align 16
  %656 = fmul double %636, %655
  %657 = fadd double %608, %656
  store double %657, double* %230, align 16
  %658 = load double addrspace(3)* %152, align 8
  %659 = fmul double %636, %658
  %660 = fadd double %611, %659
  store double %660, double* %232, align 8
  %661 = load double addrspace(3)* %154, align 16
  %662 = fmul double %636, %661
  %663 = fadd double %614, %662
  store double %663, double* %234, align 16
  %664 = load double addrspace(3)* %156, align 8
  %665 = fmul double %636, %664
  %666 = fadd double %617, %665
  store double %666, double* %236, align 8
  %667 = load double addrspace(3)* %158, align 16
  %668 = fmul double %636, %667
  %669 = fadd double %620, %668
  store double %669, double* %238, align 16
  %670 = load double addrspace(3)* %160, align 8
  %671 = fmul double %636, %670
  %672 = fadd double %623, %671
  store double %672, double* %240, align 8
  %673 = load double addrspace(3)* %162, align 16
  %674 = fmul double %636, %673
  %675 = fadd double %626, %674
  store double %675, double* %242, align 16
  %676 = load double addrspace(3)* %164, align 8
  %677 = fmul double %636, %676
  %678 = fadd double %629, %677
  store double %678, double* %244, align 8
  %679 = load double addrspace(3)* %166, align 16
  %680 = fmul double %636, %679
  %681 = fadd double %632, %680
  store double %681, double* %246, align 16
  %682 = load double addrspace(3)* %168, align 8
  %683 = fmul double %636, %682
  %684 = fadd double %635, %683
  store double %684, double* %248, align 8
  %"&(pSB[currWI].offset)11075.i" = or i64 %CurrSBIndex..4.i, 4
  %"&pSB[currWI].offset111.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)11075.i"
  %CastToValueType112.i = bitcast i8* %"&pSB[currWI].offset111.i" to i32*
  %loadedValue113.i = load i32* %CastToValueType112.i, align 4
  %tmp21.i = add i32 %tmp18.i, %loadedValue113.i
  %"&pSB[currWI].offset103.i" = getelementptr inbounds i8* %40, i64 %CurrSBIndex..4.i
  %CastToValueType104.i = bitcast i8* %"&pSB[currWI].offset103.i" to i32*
  %loadedValue.i = load i32* %CastToValueType104.i, align 4
  %tmp23.i = add i32 %tmp21.i, %loadedValue.i
  %tmp26.i = add i32 %tmp23.i, %181
  %tmp27.i = sext i32 %tmp26.i to i64
  %"&(pSB[currWI].offset)683.i" = add nuw i64 %CurrSBIndex..4.i, 272
  %"&pSB[currWI].offset684.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)683.i"
  %CastToValueType685.i = bitcast i8* %"&pSB[currWI].offset684.i" to [16 x double]*
  br label %685

; <label>:685                                     ; preds = %._crit_edge97.i, %SyncBB854.i
  %686 = phi double [ %639, %SyncBB854.i ], [ %.pre.i, %._crit_edge97.i ]
  %indvar.i = phi i64 [ 0, %SyncBB854.i ], [ %indvar.next.i, %._crit_edge97.i ]
  %tmp15.i = mul i64 %tmp.i, %indvar.i
  %tmp28.i = add i64 %tmp27.i, %tmp15.i
  %.025.i = getelementptr double addrspace(1)* %13, i64 %tmp28.i
  %687 = fmul double %686, %22
  %688 = load double addrspace(1)* %.025.i, align 8
  %689 = fmul double %688, %25
  %690 = fadd double %687, %689
  store double %690, double addrspace(1)* %.025.i, align 8
  %indvar.next.i = add i64 %indvar.i, 1
  %exitcond.i = icmp eq i64 %indvar.next.i, 16
  br i1 %exitcond.i, label %._crit_edge.i, label %._crit_edge97.i

._crit_edge97.i:                                  ; preds = %685
  %scevgep.phi.trans.insert.i = getelementptr [16 x double]* %CastToValueType685.i, i64 0, i64 %indvar.next.i
  %.pre.i = load double* %scevgep.phi.trans.insert.i, align 8
  br label %685

._crit_edge.i:                                    ; preds = %685
  %check.WI.iter875.i = icmp ult i64 %CurrWI..4.i, %37
  br i1 %check.WI.iter875.i, label %thenBB872.i, label %__sgemmNT_separated_args.exit

thenBB872.i:                                      ; preds = %._crit_edge.i
  %"CurrWI++876.i" = add nuw i64 %CurrWI..4.i, 1
  %"loadedCurrSB+Stride878.i" = add nuw i64 %CurrSBIndex..4.i, 12032
  br label %SyncBB854.i

__sgemmNT_separated_args.exit:                    ; preds = %._crit_edge.i
  ret void
}

define void @__Vectorized_.sgemmNN(i8* %pBuffer) {
entry:
  %0 = bitcast i8* %pBuffer to double addrspace(1)**
  %1 = load double addrspace(1)** %0, align 8
  %2 = getelementptr i8* %pBuffer, i64 8
  %3 = bitcast i8* %2 to i32*
  %4 = load i32* %3, align 4
  %5 = getelementptr i8* %pBuffer, i64 16
  %6 = bitcast i8* %5 to double addrspace(1)**
  %7 = load double addrspace(1)** %6, align 8
  %8 = getelementptr i8* %pBuffer, i64 24
  %9 = bitcast i8* %8 to i32*
  %10 = load i32* %9, align 4
  %11 = getelementptr i8* %pBuffer, i64 32
  %12 = bitcast i8* %11 to double addrspace(1)**
  %13 = load double addrspace(1)** %12, align 8
  %14 = getelementptr i8* %pBuffer, i64 40
  %15 = bitcast i8* %14 to i32*
  %16 = load i32* %15, align 4
  %17 = getelementptr i8* %pBuffer, i64 44
  %18 = bitcast i8* %17 to i32*
  %19 = load i32* %18, align 4
  %20 = getelementptr i8* %pBuffer, i64 48
  %21 = bitcast i8* %20 to double*
  %22 = load double* %21, align 8
  %23 = getelementptr i8* %pBuffer, i64 56
  %24 = bitcast i8* %23 to double*
  %25 = load double* %24, align 8
  %26 = getelementptr i8* %pBuffer, i64 64
  %27 = bitcast i8* %26 to i8 addrspace(3)**
  %28 = load i8 addrspace(3)** %27, align 8
  %29 = getelementptr i8* %pBuffer, i64 80
  %30 = bitcast i8* %29 to i64**
  %31 = load i64** %30, align 8
  %32 = getelementptr i8* %pBuffer, i64 96
  %33 = bitcast i8* %32 to %struct.PaddedDimId**
  %34 = load %struct.PaddedDimId** %33, align 8
  %35 = getelementptr i8* %pBuffer, i64 112
  %36 = bitcast i8* %35 to i64*
  %37 = load i64* %36, align 8
  %38 = getelementptr i8* %pBuffer, i64 120
  %39 = bitcast i8* %38 to i8**
  %40 = load i8** %39, align 8
  %41 = bitcast i8 addrspace(3)* %28 to [16 x [17 x double]] addrspace(3)*
  %42 = bitcast i8 addrspace(3)* %28 to double addrspace(3)*
  %43 = getelementptr i8 addrspace(3)* %28, i64 8
  %44 = bitcast i8 addrspace(3)* %43 to double addrspace(3)*
  %45 = getelementptr i8 addrspace(3)* %28, i64 16
  %46 = bitcast i8 addrspace(3)* %45 to double addrspace(3)*
  %47 = getelementptr i8 addrspace(3)* %28, i64 24
  %48 = bitcast i8 addrspace(3)* %47 to double addrspace(3)*
  %49 = getelementptr i8 addrspace(3)* %28, i64 32
  %50 = bitcast i8 addrspace(3)* %49 to double addrspace(3)*
  %51 = getelementptr i8 addrspace(3)* %28, i64 40
  %52 = bitcast i8 addrspace(3)* %51 to double addrspace(3)*
  %53 = getelementptr i8 addrspace(3)* %28, i64 48
  %54 = bitcast i8 addrspace(3)* %53 to double addrspace(3)*
  %55 = getelementptr i8 addrspace(3)* %28, i64 56
  %56 = bitcast i8 addrspace(3)* %55 to double addrspace(3)*
  %57 = getelementptr i8 addrspace(3)* %28, i64 64
  %58 = bitcast i8 addrspace(3)* %57 to double addrspace(3)*
  %59 = getelementptr i8 addrspace(3)* %28, i64 72
  %60 = bitcast i8 addrspace(3)* %59 to double addrspace(3)*
  %61 = getelementptr i8 addrspace(3)* %28, i64 80
  %62 = bitcast i8 addrspace(3)* %61 to double addrspace(3)*
  %63 = getelementptr i8 addrspace(3)* %28, i64 88
  %64 = bitcast i8 addrspace(3)* %63 to double addrspace(3)*
  %65 = getelementptr i8 addrspace(3)* %28, i64 96
  %66 = bitcast i8 addrspace(3)* %65 to double addrspace(3)*
  %67 = getelementptr i8 addrspace(3)* %28, i64 104
  %68 = bitcast i8 addrspace(3)* %67 to double addrspace(3)*
  %69 = getelementptr i8 addrspace(3)* %28, i64 112
  %70 = bitcast i8 addrspace(3)* %69 to double addrspace(3)*
  %71 = getelementptr i8 addrspace(3)* %28, i64 120
  %72 = bitcast i8 addrspace(3)* %71 to double addrspace(3)*
  %73 = getelementptr i8 addrspace(3)* %28, i64 136
  %74 = bitcast i8 addrspace(3)* %73 to double addrspace(3)*
  %75 = getelementptr i8 addrspace(3)* %28, i64 144
  %76 = bitcast i8 addrspace(3)* %75 to double addrspace(3)*
  %77 = getelementptr i8 addrspace(3)* %28, i64 152
  %78 = bitcast i8 addrspace(3)* %77 to double addrspace(3)*
  %79 = getelementptr i8 addrspace(3)* %28, i64 160
  %80 = bitcast i8 addrspace(3)* %79 to double addrspace(3)*
  %81 = getelementptr i8 addrspace(3)* %28, i64 168
  %82 = bitcast i8 addrspace(3)* %81 to double addrspace(3)*
  %83 = getelementptr i8 addrspace(3)* %28, i64 176
  %84 = bitcast i8 addrspace(3)* %83 to double addrspace(3)*
  %85 = getelementptr i8 addrspace(3)* %28, i64 184
  %86 = bitcast i8 addrspace(3)* %85 to double addrspace(3)*
  %87 = getelementptr i8 addrspace(3)* %28, i64 192
  %88 = bitcast i8 addrspace(3)* %87 to double addrspace(3)*
  %89 = getelementptr i8 addrspace(3)* %28, i64 200
  %90 = bitcast i8 addrspace(3)* %89 to double addrspace(3)*
  %91 = getelementptr i8 addrspace(3)* %28, i64 208
  %92 = bitcast i8 addrspace(3)* %91 to double addrspace(3)*
  %93 = getelementptr i8 addrspace(3)* %28, i64 216
  %94 = bitcast i8 addrspace(3)* %93 to double addrspace(3)*
  %95 = getelementptr i8 addrspace(3)* %28, i64 224
  %96 = bitcast i8 addrspace(3)* %95 to double addrspace(3)*
  %97 = getelementptr i8 addrspace(3)* %28, i64 232
  %98 = bitcast i8 addrspace(3)* %97 to double addrspace(3)*
  %99 = getelementptr i8 addrspace(3)* %28, i64 240
  %100 = bitcast i8 addrspace(3)* %99 to double addrspace(3)*
  %101 = getelementptr i8 addrspace(3)* %28, i64 248
  %102 = bitcast i8 addrspace(3)* %101 to double addrspace(3)*
  %103 = getelementptr i8 addrspace(3)* %28, i64 256
  %104 = bitcast i8 addrspace(3)* %103 to double addrspace(3)*
  %105 = getelementptr i8 addrspace(3)* %28, i64 272
  %106 = bitcast i8 addrspace(3)* %105 to double addrspace(3)*
  %107 = getelementptr i8 addrspace(3)* %28, i64 280
  %108 = bitcast i8 addrspace(3)* %107 to double addrspace(3)*
  %109 = getelementptr i8 addrspace(3)* %28, i64 288
  %110 = bitcast i8 addrspace(3)* %109 to double addrspace(3)*
  %111 = getelementptr i8 addrspace(3)* %28, i64 296
  %112 = bitcast i8 addrspace(3)* %111 to double addrspace(3)*
  %113 = getelementptr i8 addrspace(3)* %28, i64 304
  %114 = bitcast i8 addrspace(3)* %113 to double addrspace(3)*
  %115 = getelementptr i8 addrspace(3)* %28, i64 312
  %116 = bitcast i8 addrspace(3)* %115 to double addrspace(3)*
  %117 = getelementptr i8 addrspace(3)* %28, i64 320
  %118 = bitcast i8 addrspace(3)* %117 to double addrspace(3)*
  %119 = getelementptr i8 addrspace(3)* %28, i64 328
  %120 = bitcast i8 addrspace(3)* %119 to double addrspace(3)*
  %121 = getelementptr i8 addrspace(3)* %28, i64 336
  %122 = bitcast i8 addrspace(3)* %121 to double addrspace(3)*
  %123 = getelementptr i8 addrspace(3)* %28, i64 344
  %124 = bitcast i8 addrspace(3)* %123 to double addrspace(3)*
  %125 = getelementptr i8 addrspace(3)* %28, i64 352
  %126 = bitcast i8 addrspace(3)* %125 to double addrspace(3)*
  %127 = getelementptr i8 addrspace(3)* %28, i64 360
  %128 = bitcast i8 addrspace(3)* %127 to double addrspace(3)*
  %129 = getelementptr i8 addrspace(3)* %28, i64 368
  %130 = bitcast i8 addrspace(3)* %129 to double addrspace(3)*
  %131 = getelementptr i8 addrspace(3)* %28, i64 376
  %132 = bitcast i8 addrspace(3)* %131 to double addrspace(3)*
  %133 = getelementptr i8 addrspace(3)* %28, i64 384
  %134 = bitcast i8 addrspace(3)* %133 to double addrspace(3)*
  %135 = getelementptr i8 addrspace(3)* %28, i64 392
  %136 = bitcast i8 addrspace(3)* %135 to double addrspace(3)*
  %137 = getelementptr i8 addrspace(3)* %28, i64 408
  %138 = bitcast i8 addrspace(3)* %137 to double addrspace(3)*
  %139 = getelementptr i8 addrspace(3)* %28, i64 416
  %140 = bitcast i8 addrspace(3)* %139 to double addrspace(3)*
  %141 = getelementptr i8 addrspace(3)* %28, i64 424
  %142 = bitcast i8 addrspace(3)* %141 to double addrspace(3)*
  %143 = getelementptr i8 addrspace(3)* %28, i64 432
  %144 = bitcast i8 addrspace(3)* %143 to double addrspace(3)*
  %145 = getelementptr i8 addrspace(3)* %28, i64 440
  %146 = bitcast i8 addrspace(3)* %145 to double addrspace(3)*
  %147 = getelementptr i8 addrspace(3)* %28, i64 448
  %148 = bitcast i8 addrspace(3)* %147 to double addrspace(3)*
  %149 = getelementptr i8 addrspace(3)* %28, i64 456
  %150 = bitcast i8 addrspace(3)* %149 to double addrspace(3)*
  %151 = getelementptr i8 addrspace(3)* %28, i64 464
  %152 = bitcast i8 addrspace(3)* %151 to double addrspace(3)*
  %153 = getelementptr i8 addrspace(3)* %28, i64 472
  %154 = bitcast i8 addrspace(3)* %153 to double addrspace(3)*
  %155 = getelementptr i8 addrspace(3)* %28, i64 480
  %156 = bitcast i8 addrspace(3)* %155 to double addrspace(3)*
  %157 = getelementptr i8 addrspace(3)* %28, i64 488
  %158 = bitcast i8 addrspace(3)* %157 to double addrspace(3)*
  %159 = getelementptr i8 addrspace(3)* %28, i64 496
  %160 = bitcast i8 addrspace(3)* %159 to double addrspace(3)*
  %161 = getelementptr i8 addrspace(3)* %28, i64 504
  %162 = bitcast i8 addrspace(3)* %161 to double addrspace(3)*
  %163 = getelementptr i8 addrspace(3)* %28, i64 512
  %164 = bitcast i8 addrspace(3)* %163 to double addrspace(3)*
  %165 = getelementptr i8 addrspace(3)* %28, i64 520
  %166 = bitcast i8 addrspace(3)* %165 to double addrspace(3)*
  %167 = getelementptr i8 addrspace(3)* %28, i64 528
  %168 = bitcast i8 addrspace(3)* %167 to double addrspace(3)*
  %169 = getelementptr i8 addrspace(3)* %28, i64 544
  %170 = bitcast i8 addrspace(3)* %169 to double addrspace(3)*
  %171 = getelementptr i8 addrspace(3)* %28, i64 552
  %172 = bitcast i8 addrspace(3)* %171 to double addrspace(3)*
  %173 = getelementptr i8 addrspace(3)* %28, i64 560
  %174 = bitcast i8 addrspace(3)* %173 to double addrspace(3)*
  %175 = getelementptr i8 addrspace(3)* %28, i64 568
  %176 = bitcast i8 addrspace(3)* %175 to double addrspace(3)*
  %177 = getelementptr i8 addrspace(3)* %28, i64 576
  %178 = bitcast i8 addrspace(3)* %177 to double addrspace(3)*
  %179 = getelementptr i8 addrspace(3)* %28, i64 584
  %180 = bitcast i8 addrspace(3)* %179 to double addrspace(3)*
  %181 = getelementptr i8 addrspace(3)* %28, i64 592
  %182 = bitcast i8 addrspace(3)* %181 to double addrspace(3)*
  %183 = getelementptr i8 addrspace(3)* %28, i64 600
  %184 = bitcast i8 addrspace(3)* %183 to double addrspace(3)*
  %185 = getelementptr i8 addrspace(3)* %28, i64 608
  %186 = bitcast i8 addrspace(3)* %185 to double addrspace(3)*
  %187 = getelementptr i8 addrspace(3)* %28, i64 616
  %188 = bitcast i8 addrspace(3)* %187 to double addrspace(3)*
  %189 = getelementptr i8 addrspace(3)* %28, i64 624
  %190 = bitcast i8 addrspace(3)* %189 to double addrspace(3)*
  %191 = getelementptr i8 addrspace(3)* %28, i64 632
  %192 = bitcast i8 addrspace(3)* %191 to double addrspace(3)*
  %193 = getelementptr i8 addrspace(3)* %28, i64 640
  %194 = bitcast i8 addrspace(3)* %193 to double addrspace(3)*
  %195 = getelementptr i8 addrspace(3)* %28, i64 648
  %196 = bitcast i8 addrspace(3)* %195 to double addrspace(3)*
  %197 = getelementptr i8 addrspace(3)* %28, i64 656
  %198 = bitcast i8 addrspace(3)* %197 to double addrspace(3)*
  %199 = getelementptr i8 addrspace(3)* %28, i64 664
  %200 = bitcast i8 addrspace(3)* %199 to double addrspace(3)*
  %201 = getelementptr i8 addrspace(3)* %28, i64 680
  %202 = bitcast i8 addrspace(3)* %201 to double addrspace(3)*
  %203 = getelementptr i8 addrspace(3)* %28, i64 688
  %204 = bitcast i8 addrspace(3)* %203 to double addrspace(3)*
  %205 = getelementptr i8 addrspace(3)* %28, i64 696
  %206 = bitcast i8 addrspace(3)* %205 to double addrspace(3)*
  %207 = getelementptr i8 addrspace(3)* %28, i64 704
  %208 = bitcast i8 addrspace(3)* %207 to double addrspace(3)*
  %209 = getelementptr i8 addrspace(3)* %28, i64 712
  %210 = bitcast i8 addrspace(3)* %209 to double addrspace(3)*
  %211 = getelementptr i8 addrspace(3)* %28, i64 720
  %212 = bitcast i8 addrspace(3)* %211 to double addrspace(3)*
  %213 = getelementptr i8 addrspace(3)* %28, i64 728
  %214 = bitcast i8 addrspace(3)* %213 to double addrspace(3)*
  %215 = getelementptr i8 addrspace(3)* %28, i64 736
  %216 = bitcast i8 addrspace(3)* %215 to double addrspace(3)*
  %217 = getelementptr i8 addrspace(3)* %28, i64 744
  %218 = bitcast i8 addrspace(3)* %217 to double addrspace(3)*
  %219 = getelementptr i8 addrspace(3)* %28, i64 752
  %220 = bitcast i8 addrspace(3)* %219 to double addrspace(3)*
  %221 = getelementptr i8 addrspace(3)* %28, i64 760
  %222 = bitcast i8 addrspace(3)* %221 to double addrspace(3)*
  %223 = getelementptr i8 addrspace(3)* %28, i64 768
  %224 = bitcast i8 addrspace(3)* %223 to double addrspace(3)*
  %225 = getelementptr i8 addrspace(3)* %28, i64 776
  %226 = bitcast i8 addrspace(3)* %225 to double addrspace(3)*
  %227 = getelementptr i8 addrspace(3)* %28, i64 784
  %228 = bitcast i8 addrspace(3)* %227 to double addrspace(3)*
  %229 = getelementptr i8 addrspace(3)* %28, i64 792
  %230 = bitcast i8 addrspace(3)* %229 to double addrspace(3)*
  %231 = getelementptr i8 addrspace(3)* %28, i64 800
  %232 = bitcast i8 addrspace(3)* %231 to double addrspace(3)*
  %233 = getelementptr i8 addrspace(3)* %28, i64 816
  %234 = bitcast i8 addrspace(3)* %233 to double addrspace(3)*
  %235 = getelementptr i8 addrspace(3)* %28, i64 824
  %236 = bitcast i8 addrspace(3)* %235 to double addrspace(3)*
  %237 = getelementptr i8 addrspace(3)* %28, i64 832
  %238 = bitcast i8 addrspace(3)* %237 to double addrspace(3)*
  %239 = getelementptr i8 addrspace(3)* %28, i64 840
  %240 = bitcast i8 addrspace(3)* %239 to double addrspace(3)*
  %241 = getelementptr i8 addrspace(3)* %28, i64 848
  %242 = bitcast i8 addrspace(3)* %241 to double addrspace(3)*
  %243 = getelementptr i8 addrspace(3)* %28, i64 856
  %244 = bitcast i8 addrspace(3)* %243 to double addrspace(3)*
  %245 = getelementptr i8 addrspace(3)* %28, i64 864
  %246 = bitcast i8 addrspace(3)* %245 to double addrspace(3)*
  %247 = getelementptr i8 addrspace(3)* %28, i64 872
  %248 = bitcast i8 addrspace(3)* %247 to double addrspace(3)*
  %249 = getelementptr i8 addrspace(3)* %28, i64 880
  %250 = bitcast i8 addrspace(3)* %249 to double addrspace(3)*
  %251 = getelementptr i8 addrspace(3)* %28, i64 888
  %252 = bitcast i8 addrspace(3)* %251 to double addrspace(3)*
  %253 = getelementptr i8 addrspace(3)* %28, i64 896
  %254 = bitcast i8 addrspace(3)* %253 to double addrspace(3)*
  %255 = getelementptr i8 addrspace(3)* %28, i64 904
  %256 = bitcast i8 addrspace(3)* %255 to double addrspace(3)*
  %257 = getelementptr i8 addrspace(3)* %28, i64 912
  %258 = bitcast i8 addrspace(3)* %257 to double addrspace(3)*
  %259 = getelementptr i8 addrspace(3)* %28, i64 920
  %260 = bitcast i8 addrspace(3)* %259 to double addrspace(3)*
  %261 = getelementptr i8 addrspace(3)* %28, i64 928
  %262 = bitcast i8 addrspace(3)* %261 to double addrspace(3)*
  %263 = getelementptr i8 addrspace(3)* %28, i64 936
  %264 = bitcast i8 addrspace(3)* %263 to double addrspace(3)*
  %265 = getelementptr i8 addrspace(3)* %28, i64 952
  %266 = bitcast i8 addrspace(3)* %265 to double addrspace(3)*
  %267 = getelementptr i8 addrspace(3)* %28, i64 960
  %268 = bitcast i8 addrspace(3)* %267 to double addrspace(3)*
  %269 = getelementptr i8 addrspace(3)* %28, i64 968
  %270 = bitcast i8 addrspace(3)* %269 to double addrspace(3)*
  %271 = getelementptr i8 addrspace(3)* %28, i64 976
  %272 = bitcast i8 addrspace(3)* %271 to double addrspace(3)*
  %273 = getelementptr i8 addrspace(3)* %28, i64 984
  %274 = bitcast i8 addrspace(3)* %273 to double addrspace(3)*
  %275 = getelementptr i8 addrspace(3)* %28, i64 992
  %276 = bitcast i8 addrspace(3)* %275 to double addrspace(3)*
  %277 = getelementptr i8 addrspace(3)* %28, i64 1000
  %278 = bitcast i8 addrspace(3)* %277 to double addrspace(3)*
  %279 = getelementptr i8 addrspace(3)* %28, i64 1008
  %280 = bitcast i8 addrspace(3)* %279 to double addrspace(3)*
  %281 = getelementptr i8 addrspace(3)* %28, i64 1016
  %282 = bitcast i8 addrspace(3)* %281 to double addrspace(3)*
  %283 = getelementptr i8 addrspace(3)* %28, i64 1024
  %284 = bitcast i8 addrspace(3)* %283 to double addrspace(3)*
  %285 = getelementptr i8 addrspace(3)* %28, i64 1032
  %286 = bitcast i8 addrspace(3)* %285 to double addrspace(3)*
  %287 = getelementptr i8 addrspace(3)* %28, i64 1040
  %288 = bitcast i8 addrspace(3)* %287 to double addrspace(3)*
  %289 = getelementptr i8 addrspace(3)* %28, i64 1048
  %290 = bitcast i8 addrspace(3)* %289 to double addrspace(3)*
  %291 = getelementptr i8 addrspace(3)* %28, i64 1056
  %292 = bitcast i8 addrspace(3)* %291 to double addrspace(3)*
  %293 = getelementptr i8 addrspace(3)* %28, i64 1064
  %294 = bitcast i8 addrspace(3)* %293 to double addrspace(3)*
  %295 = getelementptr i8 addrspace(3)* %28, i64 1072
  %296 = bitcast i8 addrspace(3)* %295 to double addrspace(3)*
  %297 = getelementptr i8 addrspace(3)* %28, i64 1088
  %298 = bitcast i8 addrspace(3)* %297 to double addrspace(3)*
  %299 = getelementptr i8 addrspace(3)* %28, i64 1096
  %300 = bitcast i8 addrspace(3)* %299 to double addrspace(3)*
  %301 = getelementptr i8 addrspace(3)* %28, i64 1104
  %302 = bitcast i8 addrspace(3)* %301 to double addrspace(3)*
  %303 = getelementptr i8 addrspace(3)* %28, i64 1112
  %304 = bitcast i8 addrspace(3)* %303 to double addrspace(3)*
  %305 = getelementptr i8 addrspace(3)* %28, i64 1120
  %306 = bitcast i8 addrspace(3)* %305 to double addrspace(3)*
  %307 = getelementptr i8 addrspace(3)* %28, i64 1128
  %308 = bitcast i8 addrspace(3)* %307 to double addrspace(3)*
  %309 = getelementptr i8 addrspace(3)* %28, i64 1136
  %310 = bitcast i8 addrspace(3)* %309 to double addrspace(3)*
  %311 = getelementptr i8 addrspace(3)* %28, i64 1144
  %312 = bitcast i8 addrspace(3)* %311 to double addrspace(3)*
  %313 = getelementptr i8 addrspace(3)* %28, i64 1152
  %314 = bitcast i8 addrspace(3)* %313 to double addrspace(3)*
  %315 = getelementptr i8 addrspace(3)* %28, i64 1160
  %316 = bitcast i8 addrspace(3)* %315 to double addrspace(3)*
  %317 = getelementptr i8 addrspace(3)* %28, i64 1168
  %318 = bitcast i8 addrspace(3)* %317 to double addrspace(3)*
  %319 = getelementptr i8 addrspace(3)* %28, i64 1176
  %320 = bitcast i8 addrspace(3)* %319 to double addrspace(3)*
  %321 = getelementptr i8 addrspace(3)* %28, i64 1184
  %322 = bitcast i8 addrspace(3)* %321 to double addrspace(3)*
  %323 = getelementptr i8 addrspace(3)* %28, i64 1192
  %324 = bitcast i8 addrspace(3)* %323 to double addrspace(3)*
  %325 = getelementptr i8 addrspace(3)* %28, i64 1200
  %326 = bitcast i8 addrspace(3)* %325 to double addrspace(3)*
  %327 = getelementptr i8 addrspace(3)* %28, i64 1208
  %328 = bitcast i8 addrspace(3)* %327 to double addrspace(3)*
  %329 = getelementptr i8 addrspace(3)* %28, i64 1224
  %330 = bitcast i8 addrspace(3)* %329 to double addrspace(3)*
  %331 = getelementptr i8 addrspace(3)* %28, i64 1232
  %332 = bitcast i8 addrspace(3)* %331 to double addrspace(3)*
  %333 = getelementptr i8 addrspace(3)* %28, i64 1240
  %334 = bitcast i8 addrspace(3)* %333 to double addrspace(3)*
  %335 = getelementptr i8 addrspace(3)* %28, i64 1248
  %336 = bitcast i8 addrspace(3)* %335 to double addrspace(3)*
  %337 = getelementptr i8 addrspace(3)* %28, i64 1256
  %338 = bitcast i8 addrspace(3)* %337 to double addrspace(3)*
  %339 = getelementptr i8 addrspace(3)* %28, i64 1264
  %340 = bitcast i8 addrspace(3)* %339 to double addrspace(3)*
  %341 = getelementptr i8 addrspace(3)* %28, i64 1272
  %342 = bitcast i8 addrspace(3)* %341 to double addrspace(3)*
  %343 = getelementptr i8 addrspace(3)* %28, i64 1280
  %344 = bitcast i8 addrspace(3)* %343 to double addrspace(3)*
  %345 = getelementptr i8 addrspace(3)* %28, i64 1288
  %346 = bitcast i8 addrspace(3)* %345 to double addrspace(3)*
  %347 = getelementptr i8 addrspace(3)* %28, i64 1296
  %348 = bitcast i8 addrspace(3)* %347 to double addrspace(3)*
  %349 = getelementptr i8 addrspace(3)* %28, i64 1304
  %350 = bitcast i8 addrspace(3)* %349 to double addrspace(3)*
  %351 = getelementptr i8 addrspace(3)* %28, i64 1312
  %352 = bitcast i8 addrspace(3)* %351 to double addrspace(3)*
  %353 = getelementptr i8 addrspace(3)* %28, i64 1320
  %354 = bitcast i8 addrspace(3)* %353 to double addrspace(3)*
  %355 = getelementptr i8 addrspace(3)* %28, i64 1328
  %356 = bitcast i8 addrspace(3)* %355 to double addrspace(3)*
  %357 = getelementptr i8 addrspace(3)* %28, i64 1336
  %358 = bitcast i8 addrspace(3)* %357 to double addrspace(3)*
  %359 = getelementptr i8 addrspace(3)* %28, i64 1344
  %360 = bitcast i8 addrspace(3)* %359 to double addrspace(3)*
  %361 = getelementptr i8 addrspace(3)* %28, i64 1360
  %362 = bitcast i8 addrspace(3)* %361 to double addrspace(3)*
  %363 = getelementptr i8 addrspace(3)* %28, i64 1368
  %364 = bitcast i8 addrspace(3)* %363 to double addrspace(3)*
  %365 = getelementptr i8 addrspace(3)* %28, i64 1376
  %366 = bitcast i8 addrspace(3)* %365 to double addrspace(3)*
  %367 = getelementptr i8 addrspace(3)* %28, i64 1384
  %368 = bitcast i8 addrspace(3)* %367 to double addrspace(3)*
  %369 = getelementptr i8 addrspace(3)* %28, i64 1392
  %370 = bitcast i8 addrspace(3)* %369 to double addrspace(3)*
  %371 = getelementptr i8 addrspace(3)* %28, i64 1400
  %372 = bitcast i8 addrspace(3)* %371 to double addrspace(3)*
  %373 = getelementptr i8 addrspace(3)* %28, i64 1408
  %374 = bitcast i8 addrspace(3)* %373 to double addrspace(3)*
  %375 = getelementptr i8 addrspace(3)* %28, i64 1416
  %376 = bitcast i8 addrspace(3)* %375 to double addrspace(3)*
  %377 = getelementptr i8 addrspace(3)* %28, i64 1424
  %378 = bitcast i8 addrspace(3)* %377 to double addrspace(3)*
  %379 = getelementptr i8 addrspace(3)* %28, i64 1432
  %380 = bitcast i8 addrspace(3)* %379 to double addrspace(3)*
  %381 = getelementptr i8 addrspace(3)* %28, i64 1440
  %382 = bitcast i8 addrspace(3)* %381 to double addrspace(3)*
  %383 = getelementptr i8 addrspace(3)* %28, i64 1448
  %384 = bitcast i8 addrspace(3)* %383 to double addrspace(3)*
  %385 = getelementptr i8 addrspace(3)* %28, i64 1456
  %386 = bitcast i8 addrspace(3)* %385 to double addrspace(3)*
  %387 = getelementptr i8 addrspace(3)* %28, i64 1464
  %388 = bitcast i8 addrspace(3)* %387 to double addrspace(3)*
  %389 = getelementptr i8 addrspace(3)* %28, i64 1472
  %390 = bitcast i8 addrspace(3)* %389 to double addrspace(3)*
  %391 = getelementptr i8 addrspace(3)* %28, i64 1480
  %392 = bitcast i8 addrspace(3)* %391 to double addrspace(3)*
  %393 = getelementptr i8 addrspace(3)* %28, i64 1496
  %394 = bitcast i8 addrspace(3)* %393 to double addrspace(3)*
  %395 = getelementptr i8 addrspace(3)* %28, i64 1504
  %396 = bitcast i8 addrspace(3)* %395 to double addrspace(3)*
  %397 = getelementptr i8 addrspace(3)* %28, i64 1512
  %398 = bitcast i8 addrspace(3)* %397 to double addrspace(3)*
  %399 = getelementptr i8 addrspace(3)* %28, i64 1520
  %400 = bitcast i8 addrspace(3)* %399 to double addrspace(3)*
  %401 = getelementptr i8 addrspace(3)* %28, i64 1528
  %402 = bitcast i8 addrspace(3)* %401 to double addrspace(3)*
  %403 = getelementptr i8 addrspace(3)* %28, i64 1536
  %404 = bitcast i8 addrspace(3)* %403 to double addrspace(3)*
  %405 = getelementptr i8 addrspace(3)* %28, i64 1544
  %406 = bitcast i8 addrspace(3)* %405 to double addrspace(3)*
  %407 = getelementptr i8 addrspace(3)* %28, i64 1552
  %408 = bitcast i8 addrspace(3)* %407 to double addrspace(3)*
  %409 = getelementptr i8 addrspace(3)* %28, i64 1560
  %410 = bitcast i8 addrspace(3)* %409 to double addrspace(3)*
  %411 = getelementptr i8 addrspace(3)* %28, i64 1568
  %412 = bitcast i8 addrspace(3)* %411 to double addrspace(3)*
  %413 = getelementptr i8 addrspace(3)* %28, i64 1576
  %414 = bitcast i8 addrspace(3)* %413 to double addrspace(3)*
  %415 = getelementptr i8 addrspace(3)* %28, i64 1584
  %416 = bitcast i8 addrspace(3)* %415 to double addrspace(3)*
  %417 = getelementptr i8 addrspace(3)* %28, i64 1592
  %418 = bitcast i8 addrspace(3)* %417 to double addrspace(3)*
  %419 = getelementptr i8 addrspace(3)* %28, i64 1600
  %420 = bitcast i8 addrspace(3)* %419 to double addrspace(3)*
  %421 = getelementptr i8 addrspace(3)* %28, i64 1608
  %422 = bitcast i8 addrspace(3)* %421 to double addrspace(3)*
  %423 = getelementptr i8 addrspace(3)* %28, i64 1616
  %424 = bitcast i8 addrspace(3)* %423 to double addrspace(3)*
  %425 = getelementptr i8 addrspace(3)* %28, i64 1632
  %426 = bitcast i8 addrspace(3)* %425 to double addrspace(3)*
  %427 = getelementptr i8 addrspace(3)* %28, i64 1640
  %428 = bitcast i8 addrspace(3)* %427 to double addrspace(3)*
  %429 = getelementptr i8 addrspace(3)* %28, i64 1648
  %430 = bitcast i8 addrspace(3)* %429 to double addrspace(3)*
  %431 = getelementptr i8 addrspace(3)* %28, i64 1656
  %432 = bitcast i8 addrspace(3)* %431 to double addrspace(3)*
  %433 = getelementptr i8 addrspace(3)* %28, i64 1664
  %434 = bitcast i8 addrspace(3)* %433 to double addrspace(3)*
  %435 = getelementptr i8 addrspace(3)* %28, i64 1672
  %436 = bitcast i8 addrspace(3)* %435 to double addrspace(3)*
  %437 = getelementptr i8 addrspace(3)* %28, i64 1680
  %438 = bitcast i8 addrspace(3)* %437 to double addrspace(3)*
  %439 = getelementptr i8 addrspace(3)* %28, i64 1688
  %440 = bitcast i8 addrspace(3)* %439 to double addrspace(3)*
  %441 = getelementptr i8 addrspace(3)* %28, i64 1696
  %442 = bitcast i8 addrspace(3)* %441 to double addrspace(3)*
  %443 = getelementptr i8 addrspace(3)* %28, i64 1704
  %444 = bitcast i8 addrspace(3)* %443 to double addrspace(3)*
  %445 = getelementptr i8 addrspace(3)* %28, i64 1712
  %446 = bitcast i8 addrspace(3)* %445 to double addrspace(3)*
  %447 = getelementptr i8 addrspace(3)* %28, i64 1720
  %448 = bitcast i8 addrspace(3)* %447 to double addrspace(3)*
  %449 = getelementptr i8 addrspace(3)* %28, i64 1728
  %450 = bitcast i8 addrspace(3)* %449 to double addrspace(3)*
  %451 = getelementptr i8 addrspace(3)* %28, i64 1736
  %452 = bitcast i8 addrspace(3)* %451 to double addrspace(3)*
  %453 = getelementptr i8 addrspace(3)* %28, i64 1744
  %454 = bitcast i8 addrspace(3)* %453 to double addrspace(3)*
  %455 = getelementptr i8 addrspace(3)* %28, i64 1752
  %456 = bitcast i8 addrspace(3)* %455 to double addrspace(3)*
  %457 = getelementptr i8 addrspace(3)* %28, i64 1768
  %458 = bitcast i8 addrspace(3)* %457 to double addrspace(3)*
  %459 = getelementptr i8 addrspace(3)* %28, i64 1776
  %460 = bitcast i8 addrspace(3)* %459 to double addrspace(3)*
  %461 = getelementptr i8 addrspace(3)* %28, i64 1784
  %462 = bitcast i8 addrspace(3)* %461 to double addrspace(3)*
  %463 = getelementptr i8 addrspace(3)* %28, i64 1792
  %464 = bitcast i8 addrspace(3)* %463 to double addrspace(3)*
  %465 = getelementptr i8 addrspace(3)* %28, i64 1800
  %466 = bitcast i8 addrspace(3)* %465 to double addrspace(3)*
  %467 = getelementptr i8 addrspace(3)* %28, i64 1808
  %468 = bitcast i8 addrspace(3)* %467 to double addrspace(3)*
  %469 = getelementptr i8 addrspace(3)* %28, i64 1816
  %470 = bitcast i8 addrspace(3)* %469 to double addrspace(3)*
  %471 = getelementptr i8 addrspace(3)* %28, i64 1824
  %472 = bitcast i8 addrspace(3)* %471 to double addrspace(3)*
  %473 = getelementptr i8 addrspace(3)* %28, i64 1832
  %474 = bitcast i8 addrspace(3)* %473 to double addrspace(3)*
  %475 = getelementptr i8 addrspace(3)* %28, i64 1840
  %476 = bitcast i8 addrspace(3)* %475 to double addrspace(3)*
  %477 = getelementptr i8 addrspace(3)* %28, i64 1848
  %478 = bitcast i8 addrspace(3)* %477 to double addrspace(3)*
  %479 = getelementptr i8 addrspace(3)* %28, i64 1856
  %480 = bitcast i8 addrspace(3)* %479 to double addrspace(3)*
  %481 = getelementptr i8 addrspace(3)* %28, i64 1864
  %482 = bitcast i8 addrspace(3)* %481 to double addrspace(3)*
  %483 = getelementptr i8 addrspace(3)* %28, i64 1872
  %484 = bitcast i8 addrspace(3)* %483 to double addrspace(3)*
  %485 = getelementptr i8 addrspace(3)* %28, i64 1880
  %486 = bitcast i8 addrspace(3)* %485 to double addrspace(3)*
  %487 = getelementptr i8 addrspace(3)* %28, i64 1888
  %488 = bitcast i8 addrspace(3)* %487 to double addrspace(3)*
  %489 = getelementptr i8 addrspace(3)* %28, i64 1904
  %490 = bitcast i8 addrspace(3)* %489 to double addrspace(3)*
  %491 = getelementptr i8 addrspace(3)* %28, i64 1912
  %492 = bitcast i8 addrspace(3)* %491 to double addrspace(3)*
  %493 = getelementptr i8 addrspace(3)* %28, i64 1920
  %494 = bitcast i8 addrspace(3)* %493 to double addrspace(3)*
  %495 = getelementptr i8 addrspace(3)* %28, i64 1928
  %496 = bitcast i8 addrspace(3)* %495 to double addrspace(3)*
  %497 = getelementptr i8 addrspace(3)* %28, i64 1936
  %498 = bitcast i8 addrspace(3)* %497 to double addrspace(3)*
  %499 = getelementptr i8 addrspace(3)* %28, i64 1944
  %500 = bitcast i8 addrspace(3)* %499 to double addrspace(3)*
  %501 = getelementptr i8 addrspace(3)* %28, i64 1952
  %502 = bitcast i8 addrspace(3)* %501 to double addrspace(3)*
  %503 = getelementptr i8 addrspace(3)* %28, i64 1960
  %504 = bitcast i8 addrspace(3)* %503 to double addrspace(3)*
  %505 = getelementptr i8 addrspace(3)* %28, i64 1968
  %506 = bitcast i8 addrspace(3)* %505 to double addrspace(3)*
  %507 = getelementptr i8 addrspace(3)* %28, i64 1976
  %508 = bitcast i8 addrspace(3)* %507 to double addrspace(3)*
  %509 = getelementptr i8 addrspace(3)* %28, i64 1984
  %510 = bitcast i8 addrspace(3)* %509 to double addrspace(3)*
  %511 = getelementptr i8 addrspace(3)* %28, i64 1992
  %512 = bitcast i8 addrspace(3)* %511 to double addrspace(3)*
  %513 = getelementptr i8 addrspace(3)* %28, i64 2000
  %514 = bitcast i8 addrspace(3)* %513 to double addrspace(3)*
  %515 = getelementptr i8 addrspace(3)* %28, i64 2008
  %516 = bitcast i8 addrspace(3)* %515 to double addrspace(3)*
  %517 = getelementptr i8 addrspace(3)* %28, i64 2016
  %518 = bitcast i8 addrspace(3)* %517 to double addrspace(3)*
  %519 = getelementptr i8 addrspace(3)* %28, i64 2024
  %520 = bitcast i8 addrspace(3)* %519 to double addrspace(3)*
  %521 = getelementptr i8 addrspace(3)* %28, i64 2040
  %522 = bitcast i8 addrspace(3)* %521 to double addrspace(3)*
  %523 = getelementptr i8 addrspace(3)* %28, i64 2048
  %524 = bitcast i8 addrspace(3)* %523 to double addrspace(3)*
  %525 = getelementptr i8 addrspace(3)* %28, i64 2056
  %526 = bitcast i8 addrspace(3)* %525 to double addrspace(3)*
  %527 = getelementptr i8 addrspace(3)* %28, i64 2064
  %528 = bitcast i8 addrspace(3)* %527 to double addrspace(3)*
  %529 = getelementptr i8 addrspace(3)* %28, i64 2072
  %530 = bitcast i8 addrspace(3)* %529 to double addrspace(3)*
  %531 = getelementptr i8 addrspace(3)* %28, i64 2080
  %532 = bitcast i8 addrspace(3)* %531 to double addrspace(3)*
  %533 = getelementptr i8 addrspace(3)* %28, i64 2088
  %534 = bitcast i8 addrspace(3)* %533 to double addrspace(3)*
  %535 = getelementptr i8 addrspace(3)* %28, i64 2096
  %536 = bitcast i8 addrspace(3)* %535 to double addrspace(3)*
  %537 = getelementptr i8 addrspace(3)* %28, i64 2104
  %538 = bitcast i8 addrspace(3)* %537 to double addrspace(3)*
  %539 = getelementptr i8 addrspace(3)* %28, i64 2112
  %540 = bitcast i8 addrspace(3)* %539 to double addrspace(3)*
  %541 = getelementptr i8 addrspace(3)* %28, i64 2120
  %542 = bitcast i8 addrspace(3)* %541 to double addrspace(3)*
  %543 = getelementptr i8 addrspace(3)* %28, i64 2128
  %544 = bitcast i8 addrspace(3)* %543 to double addrspace(3)*
  %545 = getelementptr i8 addrspace(3)* %28, i64 2136
  %546 = bitcast i8 addrspace(3)* %545 to double addrspace(3)*
  %547 = getelementptr i8 addrspace(3)* %28, i64 2144
  %548 = bitcast i8 addrspace(3)* %547 to double addrspace(3)*
  %549 = getelementptr i8 addrspace(3)* %28, i64 2152
  %550 = bitcast i8 addrspace(3)* %549 to double addrspace(3)*
  %551 = getelementptr i8 addrspace(3)* %28, i64 2160
  %552 = bitcast i8 addrspace(3)* %551 to double addrspace(3)*
  %temp1572.i = insertelement <16 x double> undef, double %25, i32 0
  %vector1573.i = shufflevector <16 x double> %temp1572.i, <16 x double> undef, <16 x i32> zeroinitializer
  %temp1569.i = insertelement <16 x double> undef, double %22, i32 0
  %vector1570.i = shufflevector <16 x double> %temp1569.i, <16 x double> undef, <16 x i32> zeroinitializer
  %tmp59.i = mul i32 %10, 12
  %tmp60.i = sext i32 %tmp59.i to i64
  %temp18.i = insertelement <16 x i64> undef, i64 %tmp60.i, i32 0
  %vector19.i = shufflevector <16 x i64> %temp18.i, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp64.i = shl i32 %10, 3
  %tmp65.i = sext i32 %tmp64.i to i64
  %temp21.i = insertelement <16 x i64> undef, i64 %tmp65.i, i32 0
  %vector22.i = shufflevector <16 x i64> %temp21.i, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp69.i = shl i32 %10, 2
  %tmp70.i = sext i32 %tmp69.i to i64
  %temp24.i = insertelement <16 x i64> undef, i64 %tmp70.i, i32 0
  %vector25.i = shufflevector <16 x i64> %temp24.i, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp74.i = shl i32 %4, 2
  %tmp75.i = sext i32 %tmp74.i to i64
  %temp76.i = insertelement <16 x i64> undef, i64 %tmp75.i, i32 0
  %vector77.i = shufflevector <16 x i64> %temp76.i, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp76.i = shl i64 %tmp75.i, 2
  %tmp85.i = mul i32 %4, 3
  %tmp87.i = sext i32 %tmp85.i to i64
  %temp34.i = insertelement <16 x i64> undef, i64 %tmp87.i, i32 0
  %vector35.i = shufflevector <16 x i64> %temp34.i, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp91.i = shl i32 %4, 1
  %tmp93.i = sext i32 %tmp91.i to i64
  %temp37.i = insertelement <16 x i64> undef, i64 %tmp93.i, i32 0
  %vector38.i = shufflevector <16 x i64> %temp37.i, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp97.i = sext i32 %4 to i64
  %temp40.i = insertelement <16 x i64> undef, i64 %tmp97.i, i32 0
  %vector41.i = shufflevector <16 x i64> %temp40.i, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp101.i = mul i64 %tmp75.i, 3
  %temp52.i = insertelement <16 x i64> undef, i64 %tmp101.i, i32 0
  %vector53.i = shufflevector <16 x i64> %temp52.i, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp104.i = add i64 %tmp101.i, %tmp87.i
  %temp43.i = insertelement <16 x i64> undef, i64 %tmp104.i, i32 0
  %vector44.i = shufflevector <16 x i64> %temp43.i, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp110.i = add i64 %tmp101.i, %tmp93.i
  %temp46.i = insertelement <16 x i64> undef, i64 %tmp110.i, i32 0
  %vector47.i = shufflevector <16 x i64> %temp46.i, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp114.i = add i64 %tmp101.i, %tmp97.i
  %temp49.i = insertelement <16 x i64> undef, i64 %tmp114.i, i32 0
  %vector50.i = shufflevector <16 x i64> %temp49.i, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp121.i = shl i64 %tmp75.i, 1
  %temp64.i = insertelement <16 x i64> undef, i64 %tmp121.i, i32 0
  %vector65.i = shufflevector <16 x i64> %temp64.i, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp122.i = add i64 %tmp121.i, %tmp87.i
  %temp55.i = insertelement <16 x i64> undef, i64 %tmp122.i, i32 0
  %vector56.i = shufflevector <16 x i64> %temp55.i, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp126.i = add i64 %tmp121.i, %tmp93.i
  %temp58.i = insertelement <16 x i64> undef, i64 %tmp126.i, i32 0
  %vector59.i = shufflevector <16 x i64> %temp58.i, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp130.i = add i64 %tmp121.i, %tmp97.i
  %temp61.i = insertelement <16 x i64> undef, i64 %tmp130.i, i32 0
  %vector62.i = shufflevector <16 x i64> %temp61.i, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp137.i = add i64 %tmp75.i, %tmp87.i
  %temp67.i = insertelement <16 x i64> undef, i64 %tmp137.i, i32 0
  %vector68.i = shufflevector <16 x i64> %temp67.i, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp141.i = add i64 %tmp75.i, %tmp93.i
  %temp70.i = insertelement <16 x i64> undef, i64 %tmp141.i, i32 0
  %vector71.i = shufflevector <16 x i64> %temp70.i, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp145.i = add i64 %tmp97.i, %tmp75.i
  %temp73.i = insertelement <16 x i64> undef, i64 %tmp145.i, i32 0
  %vector74.i = shufflevector <16 x i64> %temp73.i, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp.i = sext i32 %16 to i64
  br label %SyncBB4486.i

SyncBB4486.i:                                     ; preds = %thenBB.i, %entry
  %currBarrier.2.i = phi i32 [ 16, %entry ], [ %currBarrier.1.i, %thenBB.i ]
  %CurrSBIndex..0.i = phi i64 [ 0, %entry ], [ %"loadedCurrSB+Stride.i", %thenBB.i ]
  %CurrWI..0.i = phi i64 [ 0, %entry ], [ %"CurrWI++.i", %thenBB.i ]
  %553 = getelementptr %struct.PaddedDimId* %34, i64 %CurrWI..0.i, i32 0, i64 0
  %554 = load i64* %553, align 8
  %broadcast1.i = insertelement <16 x i64> undef, i64 %554, i32 0
  %broadcast2.i = shufflevector <16 x i64> %broadcast1.i, <16 x i64> undef, <16 x i32> zeroinitializer
  %555 = add <16 x i64> %broadcast2.i, <i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8, i64 9, i64 10, i64 11, i64 12, i64 13, i64 14, i64 15>
  %556 = trunc <16 x i64> %555 to <16 x i32>
  %"&(pSB[currWI].offset).i" = add nuw i64 %CurrSBIndex..0.i, 5952
  %"&pSB[currWI].offset.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset).i"
  %CastToValueType.i = bitcast i8* %"&pSB[currWI].offset.i" to <16 x i32>*
  store <16 x i32> %556, <16 x i32>* %CastToValueType.i, align 64
  %557 = getelementptr %struct.PaddedDimId* %34, i64 %CurrWI..0.i, i32 0, i64 1
  %558 = load i64* %557, align 8
  %559 = trunc i64 %558 to i32
  %560 = load i64* %31, align 8
  %561 = getelementptr i64* %31, i64 1
  %562 = load i64* %561, align 8
  %"&(pSB[currWI].offset)2880.i" = add nuw i64 %CurrSBIndex..0.i, 9872
  %"&pSB[currWI].offset2881.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2880.i"
  %"&(pSB[currWI].offset)2952.i" = add nuw i64 %CurrSBIndex..0.i, 10000
  %"&pSB[currWI].offset2953.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2952.i"
  %"&(pSB[currWI].offset)3024.i" = add nuw i64 %CurrSBIndex..0.i, 10128
  %"&pSB[currWI].offset3025.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3024.i"
  %"&(pSB[currWI].offset)3096.i" = add nuw i64 %CurrSBIndex..0.i, 10256
  %"&pSB[currWI].offset3097.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3096.i"
  %"&(pSB[currWI].offset)3168.i" = add nuw i64 %CurrSBIndex..0.i, 10384
  %"&pSB[currWI].offset3169.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3168.i"
  %"&(pSB[currWI].offset)3240.i" = add nuw i64 %CurrSBIndex..0.i, 10512
  %"&pSB[currWI].offset3241.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3240.i"
  %"&(pSB[currWI].offset)3312.i" = add nuw i64 %CurrSBIndex..0.i, 10640
  %"&pSB[currWI].offset3313.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3312.i"
  %"&(pSB[currWI].offset)3384.i" = add nuw i64 %CurrSBIndex..0.i, 10768
  %"&pSB[currWI].offset3385.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3384.i"
  %"&(pSB[currWI].offset)3456.i" = add nuw i64 %CurrSBIndex..0.i, 10896
  %"&pSB[currWI].offset3457.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3456.i"
  %"&(pSB[currWI].offset)3528.i" = add nuw i64 %CurrSBIndex..0.i, 11024
  %"&pSB[currWI].offset3529.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3528.i"
  %"&(pSB[currWI].offset)3600.i" = add nuw i64 %CurrSBIndex..0.i, 11152
  %"&pSB[currWI].offset3601.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3600.i"
  %"&(pSB[currWI].offset)3672.i" = add nuw i64 %CurrSBIndex..0.i, 11280
  %"&pSB[currWI].offset3673.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3672.i"
  %"&(pSB[currWI].offset)3744.i" = add nuw i64 %CurrSBIndex..0.i, 11408
  %"&pSB[currWI].offset3745.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3744.i"
  %"&(pSB[currWI].offset)3816.i" = add nuw i64 %CurrSBIndex..0.i, 11536
  %"&pSB[currWI].offset3817.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3816.i"
  %"&(pSB[currWI].offset)3888.i" = add nuw i64 %CurrSBIndex..0.i, 11664
  %"&pSB[currWI].offset3889.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3888.i"
  %"&(pSB[currWI].offset)3960.i" = add nuw i64 %CurrSBIndex..0.i, 11792
  %"&pSB[currWI].offset3961.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3960.i"
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset2881.i", i8 0, i64 128, i32 16, i1 false) nounwind
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset2953.i", i8 0, i64 128, i32 16, i1 false) nounwind
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3025.i", i8 0, i64 128, i32 16, i1 false) nounwind
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3097.i", i8 0, i64 128, i32 16, i1 false) nounwind
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3169.i", i8 0, i64 128, i32 16, i1 false) nounwind
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3241.i", i8 0, i64 128, i32 16, i1 false) nounwind
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3313.i", i8 0, i64 128, i32 16, i1 false) nounwind
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3385.i", i8 0, i64 128, i32 16, i1 false) nounwind
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3457.i", i8 0, i64 128, i32 16, i1 false) nounwind
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3529.i", i8 0, i64 128, i32 16, i1 false) nounwind
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3601.i", i8 0, i64 128, i32 16, i1 false) nounwind
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3673.i", i8 0, i64 128, i32 16, i1 false) nounwind
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3745.i", i8 0, i64 128, i32 16, i1 false) nounwind
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3817.i", i8 0, i64 128, i32 16, i1 false) nounwind
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3889.i", i8 0, i64 128, i32 16, i1 false) nounwind
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3961.i", i8 0, i64 128, i32 16, i1 false) nounwind
  %563 = sext i32 %559 to i64
  %564 = extractelement <16 x i32> %556, i32 0
  %565 = sext i32 %564 to i64
  %566 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %565, i64 %563
  %"&(pSB[currWI].offset)1581.i" = add nuw i64 %CurrSBIndex..0.i, 6016
  %"&pSB[currWI].offset1582.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1581.i"
  %CastToValueType1583.i = bitcast i8* %"&pSB[currWI].offset1582.i" to double addrspace(3)**
  store double addrspace(3)* %566, double addrspace(3)** %CastToValueType1583.i, align 8
  %567 = extractelement <16 x i32> %556, i32 1
  %568 = sext i32 %567 to i64
  %569 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %568, i64 %563
  %"&(pSB[currWI].offset)1590.i" = add nuw i64 %CurrSBIndex..0.i, 6024
  %"&pSB[currWI].offset1591.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1590.i"
  %CastToValueType1592.i = bitcast i8* %"&pSB[currWI].offset1591.i" to double addrspace(3)**
  store double addrspace(3)* %569, double addrspace(3)** %CastToValueType1592.i, align 8
  %570 = extractelement <16 x i32> %556, i32 2
  %571 = sext i32 %570 to i64
  %572 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %571, i64 %563
  %"&(pSB[currWI].offset)1599.i" = add nuw i64 %CurrSBIndex..0.i, 6032
  %"&pSB[currWI].offset1600.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1599.i"
  %CastToValueType1601.i = bitcast i8* %"&pSB[currWI].offset1600.i" to double addrspace(3)**
  store double addrspace(3)* %572, double addrspace(3)** %CastToValueType1601.i, align 8
  %573 = extractelement <16 x i32> %556, i32 3
  %574 = sext i32 %573 to i64
  %575 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %574, i64 %563
  %"&(pSB[currWI].offset)1608.i" = add nuw i64 %CurrSBIndex..0.i, 6040
  %"&pSB[currWI].offset1609.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1608.i"
  %CastToValueType1610.i = bitcast i8* %"&pSB[currWI].offset1609.i" to double addrspace(3)**
  store double addrspace(3)* %575, double addrspace(3)** %CastToValueType1610.i, align 8
  %576 = extractelement <16 x i32> %556, i32 4
  %577 = sext i32 %576 to i64
  %578 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %577, i64 %563
  %"&(pSB[currWI].offset)1617.i" = add nuw i64 %CurrSBIndex..0.i, 6048
  %"&pSB[currWI].offset1618.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1617.i"
  %CastToValueType1619.i = bitcast i8* %"&pSB[currWI].offset1618.i" to double addrspace(3)**
  store double addrspace(3)* %578, double addrspace(3)** %CastToValueType1619.i, align 8
  %579 = extractelement <16 x i32> %556, i32 5
  %580 = sext i32 %579 to i64
  %581 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %580, i64 %563
  %"&(pSB[currWI].offset)1626.i" = add nuw i64 %CurrSBIndex..0.i, 6056
  %"&pSB[currWI].offset1627.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1626.i"
  %CastToValueType1628.i = bitcast i8* %"&pSB[currWI].offset1627.i" to double addrspace(3)**
  store double addrspace(3)* %581, double addrspace(3)** %CastToValueType1628.i, align 8
  %582 = extractelement <16 x i32> %556, i32 6
  %583 = sext i32 %582 to i64
  %584 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %583, i64 %563
  %"&(pSB[currWI].offset)1635.i" = add nuw i64 %CurrSBIndex..0.i, 6064
  %"&pSB[currWI].offset1636.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1635.i"
  %CastToValueType1637.i = bitcast i8* %"&pSB[currWI].offset1636.i" to double addrspace(3)**
  store double addrspace(3)* %584, double addrspace(3)** %CastToValueType1637.i, align 8
  %585 = extractelement <16 x i32> %556, i32 7
  %586 = sext i32 %585 to i64
  %587 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %586, i64 %563
  %"&(pSB[currWI].offset)1644.i" = add nuw i64 %CurrSBIndex..0.i, 6072
  %"&pSB[currWI].offset1645.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1644.i"
  %CastToValueType1646.i = bitcast i8* %"&pSB[currWI].offset1645.i" to double addrspace(3)**
  store double addrspace(3)* %587, double addrspace(3)** %CastToValueType1646.i, align 8
  %588 = extractelement <16 x i32> %556, i32 8
  %589 = sext i32 %588 to i64
  %590 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %589, i64 %563
  %"&(pSB[currWI].offset)1653.i" = add nuw i64 %CurrSBIndex..0.i, 6080
  %"&pSB[currWI].offset1654.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1653.i"
  %CastToValueType1655.i = bitcast i8* %"&pSB[currWI].offset1654.i" to double addrspace(3)**
  store double addrspace(3)* %590, double addrspace(3)** %CastToValueType1655.i, align 8
  %591 = extractelement <16 x i32> %556, i32 9
  %592 = sext i32 %591 to i64
  %593 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %592, i64 %563
  %"&(pSB[currWI].offset)1662.i" = add nuw i64 %CurrSBIndex..0.i, 6088
  %"&pSB[currWI].offset1663.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1662.i"
  %CastToValueType1664.i = bitcast i8* %"&pSB[currWI].offset1663.i" to double addrspace(3)**
  store double addrspace(3)* %593, double addrspace(3)** %CastToValueType1664.i, align 8
  %594 = extractelement <16 x i32> %556, i32 10
  %595 = sext i32 %594 to i64
  %596 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %595, i64 %563
  %"&(pSB[currWI].offset)1671.i" = add nuw i64 %CurrSBIndex..0.i, 6096
  %"&pSB[currWI].offset1672.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1671.i"
  %CastToValueType1673.i = bitcast i8* %"&pSB[currWI].offset1672.i" to double addrspace(3)**
  store double addrspace(3)* %596, double addrspace(3)** %CastToValueType1673.i, align 8
  %597 = extractelement <16 x i32> %556, i32 11
  %598 = sext i32 %597 to i64
  %599 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %598, i64 %563
  %"&(pSB[currWI].offset)1680.i" = add nuw i64 %CurrSBIndex..0.i, 6104
  %"&pSB[currWI].offset1681.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1680.i"
  %CastToValueType1682.i = bitcast i8* %"&pSB[currWI].offset1681.i" to double addrspace(3)**
  store double addrspace(3)* %599, double addrspace(3)** %CastToValueType1682.i, align 8
  %600 = extractelement <16 x i32> %556, i32 12
  %601 = sext i32 %600 to i64
  %602 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %601, i64 %563
  %"&(pSB[currWI].offset)1689.i" = add nuw i64 %CurrSBIndex..0.i, 6112
  %"&pSB[currWI].offset1690.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1689.i"
  %CastToValueType1691.i = bitcast i8* %"&pSB[currWI].offset1690.i" to double addrspace(3)**
  store double addrspace(3)* %602, double addrspace(3)** %CastToValueType1691.i, align 8
  %603 = extractelement <16 x i32> %556, i32 13
  %604 = sext i32 %603 to i64
  %605 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %604, i64 %563
  %"&(pSB[currWI].offset)1698.i" = add nuw i64 %CurrSBIndex..0.i, 6120
  %"&pSB[currWI].offset1699.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1698.i"
  %CastToValueType1700.i = bitcast i8* %"&pSB[currWI].offset1699.i" to double addrspace(3)**
  store double addrspace(3)* %605, double addrspace(3)** %CastToValueType1700.i, align 8
  %606 = extractelement <16 x i32> %556, i32 14
  %607 = sext i32 %606 to i64
  %608 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %607, i64 %563
  %"&(pSB[currWI].offset)1707.i" = add nuw i64 %CurrSBIndex..0.i, 6128
  %"&pSB[currWI].offset1708.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1707.i"
  %CastToValueType1709.i = bitcast i8* %"&pSB[currWI].offset1708.i" to double addrspace(3)**
  store double addrspace(3)* %608, double addrspace(3)** %CastToValueType1709.i, align 8
  %609 = extractelement <16 x i32> %556, i32 15
  %610 = sext i32 %609 to i64
  %611 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %610, i64 %563
  %"&(pSB[currWI].offset)1716.i" = add nuw i64 %CurrSBIndex..0.i, 6136
  %"&pSB[currWI].offset1717.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1716.i"
  %CastToValueType1718.i = bitcast i8* %"&pSB[currWI].offset1717.i" to double addrspace(3)**
  store double addrspace(3)* %611, double addrspace(3)** %CastToValueType1718.i, align 8
  %612 = add nsw i32 %559, 4
  %613 = sext i32 %612 to i64
  %614 = extractelement <16 x i32> %556, i32 0
  %615 = sext i32 %614 to i64
  %616 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %615, i64 %613
  %"&(pSB[currWI].offset)1725.i" = add nuw i64 %CurrSBIndex..0.i, 6144
  %"&pSB[currWI].offset1726.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1725.i"
  %CastToValueType1727.i = bitcast i8* %"&pSB[currWI].offset1726.i" to double addrspace(3)**
  store double addrspace(3)* %616, double addrspace(3)** %CastToValueType1727.i, align 8
  %617 = extractelement <16 x i32> %556, i32 1
  %618 = sext i32 %617 to i64
  %619 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %618, i64 %613
  %"&(pSB[currWI].offset)1734.i" = add nuw i64 %CurrSBIndex..0.i, 6152
  %"&pSB[currWI].offset1735.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1734.i"
  %CastToValueType1736.i = bitcast i8* %"&pSB[currWI].offset1735.i" to double addrspace(3)**
  store double addrspace(3)* %619, double addrspace(3)** %CastToValueType1736.i, align 8
  %620 = extractelement <16 x i32> %556, i32 2
  %621 = sext i32 %620 to i64
  %622 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %621, i64 %613
  %"&(pSB[currWI].offset)1743.i" = add nuw i64 %CurrSBIndex..0.i, 6160
  %"&pSB[currWI].offset1744.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1743.i"
  %CastToValueType1745.i = bitcast i8* %"&pSB[currWI].offset1744.i" to double addrspace(3)**
  store double addrspace(3)* %622, double addrspace(3)** %CastToValueType1745.i, align 8
  %623 = extractelement <16 x i32> %556, i32 3
  %624 = sext i32 %623 to i64
  %625 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %624, i64 %613
  %"&(pSB[currWI].offset)1752.i" = add nuw i64 %CurrSBIndex..0.i, 6168
  %"&pSB[currWI].offset1753.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1752.i"
  %CastToValueType1754.i = bitcast i8* %"&pSB[currWI].offset1753.i" to double addrspace(3)**
  store double addrspace(3)* %625, double addrspace(3)** %CastToValueType1754.i, align 8
  %626 = extractelement <16 x i32> %556, i32 4
  %627 = sext i32 %626 to i64
  %628 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %627, i64 %613
  %"&(pSB[currWI].offset)1761.i" = add nuw i64 %CurrSBIndex..0.i, 6176
  %"&pSB[currWI].offset1762.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1761.i"
  %CastToValueType1763.i = bitcast i8* %"&pSB[currWI].offset1762.i" to double addrspace(3)**
  store double addrspace(3)* %628, double addrspace(3)** %CastToValueType1763.i, align 8
  %629 = extractelement <16 x i32> %556, i32 5
  %630 = sext i32 %629 to i64
  %631 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %630, i64 %613
  %"&(pSB[currWI].offset)1770.i" = add nuw i64 %CurrSBIndex..0.i, 6184
  %"&pSB[currWI].offset1771.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1770.i"
  %CastToValueType1772.i = bitcast i8* %"&pSB[currWI].offset1771.i" to double addrspace(3)**
  store double addrspace(3)* %631, double addrspace(3)** %CastToValueType1772.i, align 8
  %632 = extractelement <16 x i32> %556, i32 6
  %633 = sext i32 %632 to i64
  %634 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %633, i64 %613
  %"&(pSB[currWI].offset)1779.i" = add nuw i64 %CurrSBIndex..0.i, 6192
  %"&pSB[currWI].offset1780.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1779.i"
  %CastToValueType1781.i = bitcast i8* %"&pSB[currWI].offset1780.i" to double addrspace(3)**
  store double addrspace(3)* %634, double addrspace(3)** %CastToValueType1781.i, align 8
  %635 = extractelement <16 x i32> %556, i32 7
  %636 = sext i32 %635 to i64
  %637 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %636, i64 %613
  %"&(pSB[currWI].offset)1788.i" = add nuw i64 %CurrSBIndex..0.i, 6200
  %"&pSB[currWI].offset1789.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1788.i"
  %CastToValueType1790.i = bitcast i8* %"&pSB[currWI].offset1789.i" to double addrspace(3)**
  store double addrspace(3)* %637, double addrspace(3)** %CastToValueType1790.i, align 8
  %638 = extractelement <16 x i32> %556, i32 8
  %639 = sext i32 %638 to i64
  %640 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %639, i64 %613
  %"&(pSB[currWI].offset)1797.i" = add nuw i64 %CurrSBIndex..0.i, 6208
  %"&pSB[currWI].offset1798.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1797.i"
  %CastToValueType1799.i = bitcast i8* %"&pSB[currWI].offset1798.i" to double addrspace(3)**
  store double addrspace(3)* %640, double addrspace(3)** %CastToValueType1799.i, align 8
  %641 = extractelement <16 x i32> %556, i32 9
  %642 = sext i32 %641 to i64
  %643 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %642, i64 %613
  %"&(pSB[currWI].offset)1806.i" = add nuw i64 %CurrSBIndex..0.i, 6216
  %"&pSB[currWI].offset1807.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1806.i"
  %CastToValueType1808.i = bitcast i8* %"&pSB[currWI].offset1807.i" to double addrspace(3)**
  store double addrspace(3)* %643, double addrspace(3)** %CastToValueType1808.i, align 8
  %644 = extractelement <16 x i32> %556, i32 10
  %645 = sext i32 %644 to i64
  %646 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %645, i64 %613
  %"&(pSB[currWI].offset)1815.i" = add nuw i64 %CurrSBIndex..0.i, 6224
  %"&pSB[currWI].offset1816.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1815.i"
  %CastToValueType1817.i = bitcast i8* %"&pSB[currWI].offset1816.i" to double addrspace(3)**
  store double addrspace(3)* %646, double addrspace(3)** %CastToValueType1817.i, align 8
  %647 = extractelement <16 x i32> %556, i32 11
  %648 = sext i32 %647 to i64
  %649 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %648, i64 %613
  %"&(pSB[currWI].offset)1824.i" = add nuw i64 %CurrSBIndex..0.i, 6232
  %"&pSB[currWI].offset1825.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1824.i"
  %CastToValueType1826.i = bitcast i8* %"&pSB[currWI].offset1825.i" to double addrspace(3)**
  store double addrspace(3)* %649, double addrspace(3)** %CastToValueType1826.i, align 8
  %650 = extractelement <16 x i32> %556, i32 12
  %651 = sext i32 %650 to i64
  %652 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %651, i64 %613
  %"&(pSB[currWI].offset)1833.i" = add nuw i64 %CurrSBIndex..0.i, 6240
  %"&pSB[currWI].offset1834.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1833.i"
  %CastToValueType1835.i = bitcast i8* %"&pSB[currWI].offset1834.i" to double addrspace(3)**
  store double addrspace(3)* %652, double addrspace(3)** %CastToValueType1835.i, align 8
  %653 = extractelement <16 x i32> %556, i32 13
  %654 = sext i32 %653 to i64
  %655 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %654, i64 %613
  %"&(pSB[currWI].offset)1842.i" = add nuw i64 %CurrSBIndex..0.i, 6248
  %"&pSB[currWI].offset1843.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1842.i"
  %CastToValueType1844.i = bitcast i8* %"&pSB[currWI].offset1843.i" to double addrspace(3)**
  store double addrspace(3)* %655, double addrspace(3)** %CastToValueType1844.i, align 8
  %656 = extractelement <16 x i32> %556, i32 14
  %657 = sext i32 %656 to i64
  %658 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %657, i64 %613
  %"&(pSB[currWI].offset)1851.i" = add nuw i64 %CurrSBIndex..0.i, 6256
  %"&pSB[currWI].offset1852.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1851.i"
  %CastToValueType1853.i = bitcast i8* %"&pSB[currWI].offset1852.i" to double addrspace(3)**
  store double addrspace(3)* %658, double addrspace(3)** %CastToValueType1853.i, align 8
  %659 = extractelement <16 x i32> %556, i32 15
  %660 = sext i32 %659 to i64
  %661 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %660, i64 %613
  %"&(pSB[currWI].offset)1860.i" = add nuw i64 %CurrSBIndex..0.i, 6264
  %"&pSB[currWI].offset1861.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1860.i"
  %CastToValueType1862.i = bitcast i8* %"&pSB[currWI].offset1861.i" to double addrspace(3)**
  store double addrspace(3)* %661, double addrspace(3)** %CastToValueType1862.i, align 8
  %662 = add nsw i32 %559, 8
  %663 = sext i32 %662 to i64
  %664 = extractelement <16 x i32> %556, i32 0
  %665 = sext i32 %664 to i64
  %666 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %665, i64 %663
  %"&(pSB[currWI].offset)1869.i" = add nuw i64 %CurrSBIndex..0.i, 6272
  %"&pSB[currWI].offset1870.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1869.i"
  %CastToValueType1871.i = bitcast i8* %"&pSB[currWI].offset1870.i" to double addrspace(3)**
  store double addrspace(3)* %666, double addrspace(3)** %CastToValueType1871.i, align 8
  %667 = extractelement <16 x i32> %556, i32 1
  %668 = sext i32 %667 to i64
  %669 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %668, i64 %663
  %"&(pSB[currWI].offset)1878.i" = add nuw i64 %CurrSBIndex..0.i, 6280
  %"&pSB[currWI].offset1879.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1878.i"
  %CastToValueType1880.i = bitcast i8* %"&pSB[currWI].offset1879.i" to double addrspace(3)**
  store double addrspace(3)* %669, double addrspace(3)** %CastToValueType1880.i, align 8
  %670 = extractelement <16 x i32> %556, i32 2
  %671 = sext i32 %670 to i64
  %672 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %671, i64 %663
  %"&(pSB[currWI].offset)1887.i" = add nuw i64 %CurrSBIndex..0.i, 6288
  %"&pSB[currWI].offset1888.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1887.i"
  %CastToValueType1889.i = bitcast i8* %"&pSB[currWI].offset1888.i" to double addrspace(3)**
  store double addrspace(3)* %672, double addrspace(3)** %CastToValueType1889.i, align 8
  %673 = extractelement <16 x i32> %556, i32 3
  %674 = sext i32 %673 to i64
  %675 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %674, i64 %663
  %"&(pSB[currWI].offset)1896.i" = add nuw i64 %CurrSBIndex..0.i, 6296
  %"&pSB[currWI].offset1897.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1896.i"
  %CastToValueType1898.i = bitcast i8* %"&pSB[currWI].offset1897.i" to double addrspace(3)**
  store double addrspace(3)* %675, double addrspace(3)** %CastToValueType1898.i, align 8
  %676 = extractelement <16 x i32> %556, i32 4
  %677 = sext i32 %676 to i64
  %678 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %677, i64 %663
  %"&(pSB[currWI].offset)1905.i" = add nuw i64 %CurrSBIndex..0.i, 6304
  %"&pSB[currWI].offset1906.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1905.i"
  %CastToValueType1907.i = bitcast i8* %"&pSB[currWI].offset1906.i" to double addrspace(3)**
  store double addrspace(3)* %678, double addrspace(3)** %CastToValueType1907.i, align 8
  %679 = extractelement <16 x i32> %556, i32 5
  %680 = sext i32 %679 to i64
  %681 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %680, i64 %663
  %"&(pSB[currWI].offset)1914.i" = add nuw i64 %CurrSBIndex..0.i, 6312
  %"&pSB[currWI].offset1915.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1914.i"
  %CastToValueType1916.i = bitcast i8* %"&pSB[currWI].offset1915.i" to double addrspace(3)**
  store double addrspace(3)* %681, double addrspace(3)** %CastToValueType1916.i, align 8
  %682 = extractelement <16 x i32> %556, i32 6
  %683 = sext i32 %682 to i64
  %684 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %683, i64 %663
  %"&(pSB[currWI].offset)1923.i" = add nuw i64 %CurrSBIndex..0.i, 6320
  %"&pSB[currWI].offset1924.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1923.i"
  %CastToValueType1925.i = bitcast i8* %"&pSB[currWI].offset1924.i" to double addrspace(3)**
  store double addrspace(3)* %684, double addrspace(3)** %CastToValueType1925.i, align 8
  %685 = extractelement <16 x i32> %556, i32 7
  %686 = sext i32 %685 to i64
  %687 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %686, i64 %663
  %"&(pSB[currWI].offset)1932.i" = add nuw i64 %CurrSBIndex..0.i, 6328
  %"&pSB[currWI].offset1933.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1932.i"
  %CastToValueType1934.i = bitcast i8* %"&pSB[currWI].offset1933.i" to double addrspace(3)**
  store double addrspace(3)* %687, double addrspace(3)** %CastToValueType1934.i, align 8
  %688 = extractelement <16 x i32> %556, i32 8
  %689 = sext i32 %688 to i64
  %690 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %689, i64 %663
  %"&(pSB[currWI].offset)1941.i" = add nuw i64 %CurrSBIndex..0.i, 6336
  %"&pSB[currWI].offset1942.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1941.i"
  %CastToValueType1943.i = bitcast i8* %"&pSB[currWI].offset1942.i" to double addrspace(3)**
  store double addrspace(3)* %690, double addrspace(3)** %CastToValueType1943.i, align 8
  %691 = extractelement <16 x i32> %556, i32 9
  %692 = sext i32 %691 to i64
  %693 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %692, i64 %663
  %"&(pSB[currWI].offset)1950.i" = add nuw i64 %CurrSBIndex..0.i, 6344
  %"&pSB[currWI].offset1951.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1950.i"
  %CastToValueType1952.i = bitcast i8* %"&pSB[currWI].offset1951.i" to double addrspace(3)**
  store double addrspace(3)* %693, double addrspace(3)** %CastToValueType1952.i, align 8
  %694 = extractelement <16 x i32> %556, i32 10
  %695 = sext i32 %694 to i64
  %696 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %695, i64 %663
  %"&(pSB[currWI].offset)1959.i" = add nuw i64 %CurrSBIndex..0.i, 6352
  %"&pSB[currWI].offset1960.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1959.i"
  %CastToValueType1961.i = bitcast i8* %"&pSB[currWI].offset1960.i" to double addrspace(3)**
  store double addrspace(3)* %696, double addrspace(3)** %CastToValueType1961.i, align 8
  %697 = extractelement <16 x i32> %556, i32 11
  %698 = sext i32 %697 to i64
  %699 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %698, i64 %663
  %"&(pSB[currWI].offset)1968.i" = add nuw i64 %CurrSBIndex..0.i, 6360
  %"&pSB[currWI].offset1969.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1968.i"
  %CastToValueType1970.i = bitcast i8* %"&pSB[currWI].offset1969.i" to double addrspace(3)**
  store double addrspace(3)* %699, double addrspace(3)** %CastToValueType1970.i, align 8
  %700 = extractelement <16 x i32> %556, i32 12
  %701 = sext i32 %700 to i64
  %702 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %701, i64 %663
  %"&(pSB[currWI].offset)1977.i" = add nuw i64 %CurrSBIndex..0.i, 6368
  %"&pSB[currWI].offset1978.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1977.i"
  %CastToValueType1979.i = bitcast i8* %"&pSB[currWI].offset1978.i" to double addrspace(3)**
  store double addrspace(3)* %702, double addrspace(3)** %CastToValueType1979.i, align 8
  %703 = extractelement <16 x i32> %556, i32 13
  %704 = sext i32 %703 to i64
  %705 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %704, i64 %663
  %"&(pSB[currWI].offset)1986.i" = add nuw i64 %CurrSBIndex..0.i, 6376
  %"&pSB[currWI].offset1987.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1986.i"
  %CastToValueType1988.i = bitcast i8* %"&pSB[currWI].offset1987.i" to double addrspace(3)**
  store double addrspace(3)* %705, double addrspace(3)** %CastToValueType1988.i, align 8
  %706 = extractelement <16 x i32> %556, i32 14
  %707 = sext i32 %706 to i64
  %708 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %707, i64 %663
  %"&(pSB[currWI].offset)1995.i" = add nuw i64 %CurrSBIndex..0.i, 6384
  %"&pSB[currWI].offset1996.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1995.i"
  %CastToValueType1997.i = bitcast i8* %"&pSB[currWI].offset1996.i" to double addrspace(3)**
  store double addrspace(3)* %708, double addrspace(3)** %CastToValueType1997.i, align 8
  %709 = extractelement <16 x i32> %556, i32 15
  %710 = sext i32 %709 to i64
  %711 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %710, i64 %663
  %"&(pSB[currWI].offset)2004.i" = add nuw i64 %CurrSBIndex..0.i, 6392
  %"&pSB[currWI].offset2005.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2004.i"
  %CastToValueType2006.i = bitcast i8* %"&pSB[currWI].offset2005.i" to double addrspace(3)**
  store double addrspace(3)* %711, double addrspace(3)** %CastToValueType2006.i, align 8
  %712 = add nsw i32 %559, 12
  %713 = sext i32 %712 to i64
  %714 = extractelement <16 x i32> %556, i32 0
  %715 = sext i32 %714 to i64
  %716 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %715, i64 %713
  %"&(pSB[currWI].offset)2013.i" = add nuw i64 %CurrSBIndex..0.i, 6400
  %"&pSB[currWI].offset2014.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2013.i"
  %CastToValueType2015.i = bitcast i8* %"&pSB[currWI].offset2014.i" to double addrspace(3)**
  store double addrspace(3)* %716, double addrspace(3)** %CastToValueType2015.i, align 8
  %717 = extractelement <16 x i32> %556, i32 1
  %718 = sext i32 %717 to i64
  %719 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %718, i64 %713
  %"&(pSB[currWI].offset)2022.i" = add nuw i64 %CurrSBIndex..0.i, 6408
  %"&pSB[currWI].offset2023.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2022.i"
  %CastToValueType2024.i = bitcast i8* %"&pSB[currWI].offset2023.i" to double addrspace(3)**
  store double addrspace(3)* %719, double addrspace(3)** %CastToValueType2024.i, align 8
  %720 = extractelement <16 x i32> %556, i32 2
  %721 = sext i32 %720 to i64
  %722 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %721, i64 %713
  %"&(pSB[currWI].offset)2031.i" = add nuw i64 %CurrSBIndex..0.i, 6416
  %"&pSB[currWI].offset2032.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2031.i"
  %CastToValueType2033.i = bitcast i8* %"&pSB[currWI].offset2032.i" to double addrspace(3)**
  store double addrspace(3)* %722, double addrspace(3)** %CastToValueType2033.i, align 8
  %723 = extractelement <16 x i32> %556, i32 3
  %724 = sext i32 %723 to i64
  %725 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %724, i64 %713
  %"&(pSB[currWI].offset)2040.i" = add nuw i64 %CurrSBIndex..0.i, 6424
  %"&pSB[currWI].offset2041.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2040.i"
  %CastToValueType2042.i = bitcast i8* %"&pSB[currWI].offset2041.i" to double addrspace(3)**
  store double addrspace(3)* %725, double addrspace(3)** %CastToValueType2042.i, align 8
  %726 = extractelement <16 x i32> %556, i32 4
  %727 = sext i32 %726 to i64
  %728 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %727, i64 %713
  %"&(pSB[currWI].offset)2049.i" = add nuw i64 %CurrSBIndex..0.i, 6432
  %"&pSB[currWI].offset2050.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2049.i"
  %CastToValueType2051.i = bitcast i8* %"&pSB[currWI].offset2050.i" to double addrspace(3)**
  store double addrspace(3)* %728, double addrspace(3)** %CastToValueType2051.i, align 8
  %729 = extractelement <16 x i32> %556, i32 5
  %730 = sext i32 %729 to i64
  %731 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %730, i64 %713
  %"&(pSB[currWI].offset)2058.i" = add nuw i64 %CurrSBIndex..0.i, 6440
  %"&pSB[currWI].offset2059.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2058.i"
  %CastToValueType2060.i = bitcast i8* %"&pSB[currWI].offset2059.i" to double addrspace(3)**
  store double addrspace(3)* %731, double addrspace(3)** %CastToValueType2060.i, align 8
  %732 = extractelement <16 x i32> %556, i32 6
  %733 = sext i32 %732 to i64
  %734 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %733, i64 %713
  %"&(pSB[currWI].offset)2067.i" = add nuw i64 %CurrSBIndex..0.i, 6448
  %"&pSB[currWI].offset2068.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2067.i"
  %CastToValueType2069.i = bitcast i8* %"&pSB[currWI].offset2068.i" to double addrspace(3)**
  store double addrspace(3)* %734, double addrspace(3)** %CastToValueType2069.i, align 8
  %735 = extractelement <16 x i32> %556, i32 7
  %736 = sext i32 %735 to i64
  %737 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %736, i64 %713
  %"&(pSB[currWI].offset)2076.i" = add nuw i64 %CurrSBIndex..0.i, 6456
  %"&pSB[currWI].offset2077.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2076.i"
  %CastToValueType2078.i = bitcast i8* %"&pSB[currWI].offset2077.i" to double addrspace(3)**
  store double addrspace(3)* %737, double addrspace(3)** %CastToValueType2078.i, align 8
  %738 = extractelement <16 x i32> %556, i32 8
  %739 = sext i32 %738 to i64
  %740 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %739, i64 %713
  %"&(pSB[currWI].offset)2085.i" = add nuw i64 %CurrSBIndex..0.i, 6464
  %"&pSB[currWI].offset2086.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2085.i"
  %CastToValueType2087.i = bitcast i8* %"&pSB[currWI].offset2086.i" to double addrspace(3)**
  store double addrspace(3)* %740, double addrspace(3)** %CastToValueType2087.i, align 8
  %741 = extractelement <16 x i32> %556, i32 9
  %742 = sext i32 %741 to i64
  %743 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %742, i64 %713
  %"&(pSB[currWI].offset)2094.i" = add nuw i64 %CurrSBIndex..0.i, 6472
  %"&pSB[currWI].offset2095.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2094.i"
  %CastToValueType2096.i = bitcast i8* %"&pSB[currWI].offset2095.i" to double addrspace(3)**
  store double addrspace(3)* %743, double addrspace(3)** %CastToValueType2096.i, align 8
  %744 = extractelement <16 x i32> %556, i32 10
  %745 = sext i32 %744 to i64
  %746 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %745, i64 %713
  %"&(pSB[currWI].offset)2103.i" = add nuw i64 %CurrSBIndex..0.i, 6480
  %"&pSB[currWI].offset2104.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2103.i"
  %CastToValueType2105.i = bitcast i8* %"&pSB[currWI].offset2104.i" to double addrspace(3)**
  store double addrspace(3)* %746, double addrspace(3)** %CastToValueType2105.i, align 8
  %747 = extractelement <16 x i32> %556, i32 11
  %748 = sext i32 %747 to i64
  %749 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %748, i64 %713
  %"&(pSB[currWI].offset)2112.i" = add nuw i64 %CurrSBIndex..0.i, 6488
  %"&pSB[currWI].offset2113.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2112.i"
  %CastToValueType2114.i = bitcast i8* %"&pSB[currWI].offset2113.i" to double addrspace(3)**
  store double addrspace(3)* %749, double addrspace(3)** %CastToValueType2114.i, align 8
  %750 = extractelement <16 x i32> %556, i32 12
  %751 = sext i32 %750 to i64
  %752 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %751, i64 %713
  %"&(pSB[currWI].offset)2121.i" = add nuw i64 %CurrSBIndex..0.i, 6496
  %"&pSB[currWI].offset2122.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2121.i"
  %CastToValueType2123.i = bitcast i8* %"&pSB[currWI].offset2122.i" to double addrspace(3)**
  store double addrspace(3)* %752, double addrspace(3)** %CastToValueType2123.i, align 8
  %753 = extractelement <16 x i32> %556, i32 13
  %754 = sext i32 %753 to i64
  %755 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %754, i64 %713
  %"&(pSB[currWI].offset)2130.i" = add nuw i64 %CurrSBIndex..0.i, 6504
  %"&pSB[currWI].offset2131.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2130.i"
  %CastToValueType2132.i = bitcast i8* %"&pSB[currWI].offset2131.i" to double addrspace(3)**
  store double addrspace(3)* %755, double addrspace(3)** %CastToValueType2132.i, align 8
  %756 = extractelement <16 x i32> %556, i32 14
  %757 = sext i32 %756 to i64
  %758 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %757, i64 %713
  %"&(pSB[currWI].offset)2139.i" = add nuw i64 %CurrSBIndex..0.i, 6512
  %"&pSB[currWI].offset2140.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2139.i"
  %CastToValueType2141.i = bitcast i8* %"&pSB[currWI].offset2140.i" to double addrspace(3)**
  store double addrspace(3)* %758, double addrspace(3)** %CastToValueType2141.i, align 8
  %759 = extractelement <16 x i32> %556, i32 15
  %760 = sext i32 %759 to i64
  %761 = getelementptr inbounds [16 x [17 x double]] addrspace(3)* %41, i64 0, i64 %760, i64 %713
  %"&(pSB[currWI].offset)2148.i" = add nuw i64 %CurrSBIndex..0.i, 6520
  %"&pSB[currWI].offset2149.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2148.i"
  %CastToValueType2150.i = bitcast i8* %"&pSB[currWI].offset2149.i" to double addrspace(3)**
  store double addrspace(3)* %761, double addrspace(3)** %CastToValueType2150.i, align 8
  %"&(pSB[currWI].offset)2876.i" = add nuw i64 %CurrSBIndex..0.i, 9872
  %"&pSB[currWI].offset2877.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2876.i"
  %762 = bitcast i8* %"&pSB[currWI].offset2877.i" to double*
  %"&(pSB[currWI].offset)2948.i" = add nuw i64 %CurrSBIndex..0.i, 10000
  %"&pSB[currWI].offset2949.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2948.i"
  %763 = bitcast i8* %"&pSB[currWI].offset2949.i" to double*
  %"&(pSB[currWI].offset)3020.i" = add nuw i64 %CurrSBIndex..0.i, 10128
  %"&pSB[currWI].offset3021.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3020.i"
  %764 = bitcast i8* %"&pSB[currWI].offset3021.i" to double*
  %"&(pSB[currWI].offset)3092.i" = add nuw i64 %CurrSBIndex..0.i, 10256
  %"&pSB[currWI].offset3093.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3092.i"
  %765 = bitcast i8* %"&pSB[currWI].offset3093.i" to double*
  %"&(pSB[currWI].offset)3164.i" = add nuw i64 %CurrSBIndex..0.i, 10384
  %"&pSB[currWI].offset3165.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3164.i"
  %766 = bitcast i8* %"&pSB[currWI].offset3165.i" to double*
  %"&(pSB[currWI].offset)3236.i" = add nuw i64 %CurrSBIndex..0.i, 10512
  %"&pSB[currWI].offset3237.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3236.i"
  %767 = bitcast i8* %"&pSB[currWI].offset3237.i" to double*
  %"&(pSB[currWI].offset)3308.i" = add nuw i64 %CurrSBIndex..0.i, 10640
  %"&pSB[currWI].offset3309.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3308.i"
  %768 = bitcast i8* %"&pSB[currWI].offset3309.i" to double*
  %"&(pSB[currWI].offset)3380.i" = add nuw i64 %CurrSBIndex..0.i, 10768
  %"&pSB[currWI].offset3381.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3380.i"
  %769 = bitcast i8* %"&pSB[currWI].offset3381.i" to double*
  %"&(pSB[currWI].offset)3452.i" = add nuw i64 %CurrSBIndex..0.i, 10896
  %"&pSB[currWI].offset3453.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3452.i"
  %770 = bitcast i8* %"&pSB[currWI].offset3453.i" to double*
  %"&(pSB[currWI].offset)3524.i" = add nuw i64 %CurrSBIndex..0.i, 11024
  %"&pSB[currWI].offset3525.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3524.i"
  %771 = bitcast i8* %"&pSB[currWI].offset3525.i" to double*
  %"&(pSB[currWI].offset)3596.i" = add nuw i64 %CurrSBIndex..0.i, 11152
  %"&pSB[currWI].offset3597.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3596.i"
  %772 = bitcast i8* %"&pSB[currWI].offset3597.i" to double*
  %"&(pSB[currWI].offset)3668.i" = add nuw i64 %CurrSBIndex..0.i, 11280
  %"&pSB[currWI].offset3669.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3668.i"
  %773 = bitcast i8* %"&pSB[currWI].offset3669.i" to double*
  %"&(pSB[currWI].offset)3740.i" = add nuw i64 %CurrSBIndex..0.i, 11408
  %"&pSB[currWI].offset3741.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3740.i"
  %774 = bitcast i8* %"&pSB[currWI].offset3741.i" to double*
  %"&(pSB[currWI].offset)3812.i" = add nuw i64 %CurrSBIndex..0.i, 11536
  %"&pSB[currWI].offset3813.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3812.i"
  %775 = bitcast i8* %"&pSB[currWI].offset3813.i" to double*
  %"&(pSB[currWI].offset)3884.i" = add nuw i64 %CurrSBIndex..0.i, 11664
  %"&pSB[currWI].offset3885.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3884.i"
  %776 = bitcast i8* %"&pSB[currWI].offset3885.i" to double*
  %"&(pSB[currWI].offset)3956.i" = add nuw i64 %CurrSBIndex..0.i, 11792
  %"&pSB[currWI].offset3957.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3956.i"
  %777 = bitcast i8* %"&pSB[currWI].offset3957.i" to double*
  %"&pSB[currWI].offset2873.sum.i" = add i64 %CurrSBIndex..0.i, 9880
  %778 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2873.sum.i"
  %779 = bitcast i8* %778 to double*
  %"&pSB[currWI].offset2945.sum.i" = add i64 %CurrSBIndex..0.i, 10008
  %780 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2945.sum.i"
  %781 = bitcast i8* %780 to double*
  %"&pSB[currWI].offset3017.sum.i" = add i64 %CurrSBIndex..0.i, 10136
  %782 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3017.sum.i"
  %783 = bitcast i8* %782 to double*
  %"&pSB[currWI].offset3089.sum.i" = add i64 %CurrSBIndex..0.i, 10264
  %784 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3089.sum.i"
  %785 = bitcast i8* %784 to double*
  %"&pSB[currWI].offset3161.sum.i" = add i64 %CurrSBIndex..0.i, 10392
  %786 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3161.sum.i"
  %787 = bitcast i8* %786 to double*
  %"&pSB[currWI].offset3233.sum.i" = add i64 %CurrSBIndex..0.i, 10520
  %788 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3233.sum.i"
  %789 = bitcast i8* %788 to double*
  %"&pSB[currWI].offset3305.sum.i" = add i64 %CurrSBIndex..0.i, 10648
  %790 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3305.sum.i"
  %791 = bitcast i8* %790 to double*
  %"&pSB[currWI].offset3377.sum.i" = add i64 %CurrSBIndex..0.i, 10776
  %792 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3377.sum.i"
  %793 = bitcast i8* %792 to double*
  %"&pSB[currWI].offset3449.sum.i" = add i64 %CurrSBIndex..0.i, 10904
  %794 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3449.sum.i"
  %795 = bitcast i8* %794 to double*
  %"&pSB[currWI].offset3521.sum.i" = add i64 %CurrSBIndex..0.i, 11032
  %796 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3521.sum.i"
  %797 = bitcast i8* %796 to double*
  %"&pSB[currWI].offset3593.sum.i" = add i64 %CurrSBIndex..0.i, 11160
  %798 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3593.sum.i"
  %799 = bitcast i8* %798 to double*
  %"&pSB[currWI].offset3665.sum.i" = add i64 %CurrSBIndex..0.i, 11288
  %800 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3665.sum.i"
  %801 = bitcast i8* %800 to double*
  %"&pSB[currWI].offset3737.sum.i" = add i64 %CurrSBIndex..0.i, 11416
  %802 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3737.sum.i"
  %803 = bitcast i8* %802 to double*
  %"&pSB[currWI].offset3809.sum.i" = add i64 %CurrSBIndex..0.i, 11544
  %804 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3809.sum.i"
  %805 = bitcast i8* %804 to double*
  %"&pSB[currWI].offset3881.sum.i" = add i64 %CurrSBIndex..0.i, 11672
  %806 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3881.sum.i"
  %807 = bitcast i8* %806 to double*
  %"&pSB[currWI].offset3953.sum.i" = add i64 %CurrSBIndex..0.i, 11800
  %808 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3953.sum.i"
  %809 = bitcast i8* %808 to double*
  %"&pSB[currWI].offset2869.sum.i" = add i64 %CurrSBIndex..0.i, 9888
  %810 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2869.sum.i"
  %811 = bitcast i8* %810 to double*
  %"&pSB[currWI].offset2941.sum.i" = add i64 %CurrSBIndex..0.i, 10016
  %812 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2941.sum.i"
  %813 = bitcast i8* %812 to double*
  %"&pSB[currWI].offset3013.sum.i" = add i64 %CurrSBIndex..0.i, 10144
  %814 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3013.sum.i"
  %815 = bitcast i8* %814 to double*
  %"&pSB[currWI].offset3085.sum.i" = add i64 %CurrSBIndex..0.i, 10272
  %816 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3085.sum.i"
  %817 = bitcast i8* %816 to double*
  %"&pSB[currWI].offset3157.sum.i" = add i64 %CurrSBIndex..0.i, 10400
  %818 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3157.sum.i"
  %819 = bitcast i8* %818 to double*
  %"&pSB[currWI].offset3229.sum.i" = add i64 %CurrSBIndex..0.i, 10528
  %820 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3229.sum.i"
  %821 = bitcast i8* %820 to double*
  %"&pSB[currWI].offset3301.sum.i" = add i64 %CurrSBIndex..0.i, 10656
  %822 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3301.sum.i"
  %823 = bitcast i8* %822 to double*
  %"&pSB[currWI].offset3373.sum.i" = add i64 %CurrSBIndex..0.i, 10784
  %824 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3373.sum.i"
  %825 = bitcast i8* %824 to double*
  %"&pSB[currWI].offset3445.sum.i" = add i64 %CurrSBIndex..0.i, 10912
  %826 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3445.sum.i"
  %827 = bitcast i8* %826 to double*
  %"&pSB[currWI].offset3517.sum.i" = add i64 %CurrSBIndex..0.i, 11040
  %828 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3517.sum.i"
  %829 = bitcast i8* %828 to double*
  %"&pSB[currWI].offset3589.sum.i" = add i64 %CurrSBIndex..0.i, 11168
  %830 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3589.sum.i"
  %831 = bitcast i8* %830 to double*
  %"&pSB[currWI].offset3661.sum.i" = add i64 %CurrSBIndex..0.i, 11296
  %832 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3661.sum.i"
  %833 = bitcast i8* %832 to double*
  %"&pSB[currWI].offset3733.sum.i" = add i64 %CurrSBIndex..0.i, 11424
  %834 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3733.sum.i"
  %835 = bitcast i8* %834 to double*
  %"&pSB[currWI].offset3805.sum.i" = add i64 %CurrSBIndex..0.i, 11552
  %836 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3805.sum.i"
  %837 = bitcast i8* %836 to double*
  %"&pSB[currWI].offset3877.sum.i" = add i64 %CurrSBIndex..0.i, 11680
  %838 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3877.sum.i"
  %839 = bitcast i8* %838 to double*
  %"&pSB[currWI].offset3949.sum.i" = add i64 %CurrSBIndex..0.i, 11808
  %840 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3949.sum.i"
  %841 = bitcast i8* %840 to double*
  %"&pSB[currWI].offset2865.sum.i" = add i64 %CurrSBIndex..0.i, 9896
  %842 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2865.sum.i"
  %843 = bitcast i8* %842 to double*
  %"&pSB[currWI].offset2937.sum.i" = add i64 %CurrSBIndex..0.i, 10024
  %844 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2937.sum.i"
  %845 = bitcast i8* %844 to double*
  %"&pSB[currWI].offset3009.sum.i" = add i64 %CurrSBIndex..0.i, 10152
  %846 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3009.sum.i"
  %847 = bitcast i8* %846 to double*
  %"&pSB[currWI].offset3081.sum.i" = add i64 %CurrSBIndex..0.i, 10280
  %848 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3081.sum.i"
  %849 = bitcast i8* %848 to double*
  %"&pSB[currWI].offset3153.sum.i" = add i64 %CurrSBIndex..0.i, 10408
  %850 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3153.sum.i"
  %851 = bitcast i8* %850 to double*
  %"&pSB[currWI].offset3225.sum.i" = add i64 %CurrSBIndex..0.i, 10536
  %852 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3225.sum.i"
  %853 = bitcast i8* %852 to double*
  %"&pSB[currWI].offset3297.sum.i" = add i64 %CurrSBIndex..0.i, 10664
  %854 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3297.sum.i"
  %855 = bitcast i8* %854 to double*
  %"&pSB[currWI].offset3369.sum.i" = add i64 %CurrSBIndex..0.i, 10792
  %856 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3369.sum.i"
  %857 = bitcast i8* %856 to double*
  %"&pSB[currWI].offset3441.sum.i" = add i64 %CurrSBIndex..0.i, 10920
  %858 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3441.sum.i"
  %859 = bitcast i8* %858 to double*
  %"&pSB[currWI].offset3513.sum.i" = add i64 %CurrSBIndex..0.i, 11048
  %860 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3513.sum.i"
  %861 = bitcast i8* %860 to double*
  %"&pSB[currWI].offset3585.sum.i" = add i64 %CurrSBIndex..0.i, 11176
  %862 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3585.sum.i"
  %863 = bitcast i8* %862 to double*
  %"&pSB[currWI].offset3657.sum.i" = add i64 %CurrSBIndex..0.i, 11304
  %864 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3657.sum.i"
  %865 = bitcast i8* %864 to double*
  %"&pSB[currWI].offset3729.sum.i" = add i64 %CurrSBIndex..0.i, 11432
  %866 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3729.sum.i"
  %867 = bitcast i8* %866 to double*
  %"&pSB[currWI].offset3801.sum.i" = add i64 %CurrSBIndex..0.i, 11560
  %868 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3801.sum.i"
  %869 = bitcast i8* %868 to double*
  %"&pSB[currWI].offset3873.sum.i" = add i64 %CurrSBIndex..0.i, 11688
  %870 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3873.sum.i"
  %871 = bitcast i8* %870 to double*
  %"&pSB[currWI].offset3945.sum.i" = add i64 %CurrSBIndex..0.i, 11816
  %872 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3945.sum.i"
  %873 = bitcast i8* %872 to double*
  %"&pSB[currWI].offset2861.sum.i" = add i64 %CurrSBIndex..0.i, 9904
  %874 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2861.sum.i"
  %875 = bitcast i8* %874 to double*
  %"&pSB[currWI].offset2933.sum.i" = add i64 %CurrSBIndex..0.i, 10032
  %876 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2933.sum.i"
  %877 = bitcast i8* %876 to double*
  %"&pSB[currWI].offset3005.sum.i" = add i64 %CurrSBIndex..0.i, 10160
  %878 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3005.sum.i"
  %879 = bitcast i8* %878 to double*
  %"&pSB[currWI].offset3077.sum.i" = add i64 %CurrSBIndex..0.i, 10288
  %880 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3077.sum.i"
  %881 = bitcast i8* %880 to double*
  %"&pSB[currWI].offset3149.sum.i" = add i64 %CurrSBIndex..0.i, 10416
  %882 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3149.sum.i"
  %883 = bitcast i8* %882 to double*
  %"&pSB[currWI].offset3221.sum.i" = add i64 %CurrSBIndex..0.i, 10544
  %884 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3221.sum.i"
  %885 = bitcast i8* %884 to double*
  %"&pSB[currWI].offset3293.sum.i" = add i64 %CurrSBIndex..0.i, 10672
  %886 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3293.sum.i"
  %887 = bitcast i8* %886 to double*
  %"&pSB[currWI].offset3365.sum.i" = add i64 %CurrSBIndex..0.i, 10800
  %888 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3365.sum.i"
  %889 = bitcast i8* %888 to double*
  %"&pSB[currWI].offset3437.sum.i" = add i64 %CurrSBIndex..0.i, 10928
  %890 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3437.sum.i"
  %891 = bitcast i8* %890 to double*
  %"&pSB[currWI].offset3509.sum.i" = add i64 %CurrSBIndex..0.i, 11056
  %892 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3509.sum.i"
  %893 = bitcast i8* %892 to double*
  %"&pSB[currWI].offset3581.sum.i" = add i64 %CurrSBIndex..0.i, 11184
  %894 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3581.sum.i"
  %895 = bitcast i8* %894 to double*
  %"&pSB[currWI].offset3653.sum.i" = add i64 %CurrSBIndex..0.i, 11312
  %896 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3653.sum.i"
  %897 = bitcast i8* %896 to double*
  %"&pSB[currWI].offset3725.sum.i" = add i64 %CurrSBIndex..0.i, 11440
  %898 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3725.sum.i"
  %899 = bitcast i8* %898 to double*
  %"&pSB[currWI].offset3797.sum.i" = add i64 %CurrSBIndex..0.i, 11568
  %900 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3797.sum.i"
  %901 = bitcast i8* %900 to double*
  %"&pSB[currWI].offset3869.sum.i" = add i64 %CurrSBIndex..0.i, 11696
  %902 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3869.sum.i"
  %903 = bitcast i8* %902 to double*
  %"&pSB[currWI].offset3941.sum.i" = add i64 %CurrSBIndex..0.i, 11824
  %904 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3941.sum.i"
  %905 = bitcast i8* %904 to double*
  %"&pSB[currWI].offset2857.sum.i" = add i64 %CurrSBIndex..0.i, 9912
  %906 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2857.sum.i"
  %907 = bitcast i8* %906 to double*
  %"&pSB[currWI].offset2929.sum.i" = add i64 %CurrSBIndex..0.i, 10040
  %908 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2929.sum.i"
  %909 = bitcast i8* %908 to double*
  %"&pSB[currWI].offset3001.sum.i" = add i64 %CurrSBIndex..0.i, 10168
  %910 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3001.sum.i"
  %911 = bitcast i8* %910 to double*
  %"&pSB[currWI].offset3073.sum.i" = add i64 %CurrSBIndex..0.i, 10296
  %912 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3073.sum.i"
  %913 = bitcast i8* %912 to double*
  %"&pSB[currWI].offset3145.sum.i" = add i64 %CurrSBIndex..0.i, 10424
  %914 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3145.sum.i"
  %915 = bitcast i8* %914 to double*
  %"&pSB[currWI].offset3217.sum.i" = add i64 %CurrSBIndex..0.i, 10552
  %916 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3217.sum.i"
  %917 = bitcast i8* %916 to double*
  %"&pSB[currWI].offset3289.sum.i" = add i64 %CurrSBIndex..0.i, 10680
  %918 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3289.sum.i"
  %919 = bitcast i8* %918 to double*
  %"&pSB[currWI].offset3361.sum.i" = add i64 %CurrSBIndex..0.i, 10808
  %920 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3361.sum.i"
  %921 = bitcast i8* %920 to double*
  %"&pSB[currWI].offset3433.sum.i" = add i64 %CurrSBIndex..0.i, 10936
  %922 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3433.sum.i"
  %923 = bitcast i8* %922 to double*
  %"&pSB[currWI].offset3505.sum.i" = add i64 %CurrSBIndex..0.i, 11064
  %924 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3505.sum.i"
  %925 = bitcast i8* %924 to double*
  %"&pSB[currWI].offset3577.sum.i" = add i64 %CurrSBIndex..0.i, 11192
  %926 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3577.sum.i"
  %927 = bitcast i8* %926 to double*
  %"&pSB[currWI].offset3649.sum.i" = add i64 %CurrSBIndex..0.i, 11320
  %928 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3649.sum.i"
  %929 = bitcast i8* %928 to double*
  %"&pSB[currWI].offset3721.sum.i" = add i64 %CurrSBIndex..0.i, 11448
  %930 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3721.sum.i"
  %931 = bitcast i8* %930 to double*
  %"&pSB[currWI].offset3793.sum.i" = add i64 %CurrSBIndex..0.i, 11576
  %932 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3793.sum.i"
  %933 = bitcast i8* %932 to double*
  %"&pSB[currWI].offset3865.sum.i" = add i64 %CurrSBIndex..0.i, 11704
  %934 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3865.sum.i"
  %935 = bitcast i8* %934 to double*
  %"&pSB[currWI].offset3937.sum.i" = add i64 %CurrSBIndex..0.i, 11832
  %936 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3937.sum.i"
  %937 = bitcast i8* %936 to double*
  %"&pSB[currWI].offset2853.sum.i" = add i64 %CurrSBIndex..0.i, 9920
  %938 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2853.sum.i"
  %939 = bitcast i8* %938 to double*
  %"&pSB[currWI].offset2925.sum.i" = add i64 %CurrSBIndex..0.i, 10048
  %940 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2925.sum.i"
  %941 = bitcast i8* %940 to double*
  %"&pSB[currWI].offset2997.sum.i" = add i64 %CurrSBIndex..0.i, 10176
  %942 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2997.sum.i"
  %943 = bitcast i8* %942 to double*
  %"&pSB[currWI].offset3069.sum.i" = add i64 %CurrSBIndex..0.i, 10304
  %944 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3069.sum.i"
  %945 = bitcast i8* %944 to double*
  %"&pSB[currWI].offset3141.sum.i" = add i64 %CurrSBIndex..0.i, 10432
  %946 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3141.sum.i"
  %947 = bitcast i8* %946 to double*
  %"&pSB[currWI].offset3213.sum.i" = add i64 %CurrSBIndex..0.i, 10560
  %948 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3213.sum.i"
  %949 = bitcast i8* %948 to double*
  %"&pSB[currWI].offset3285.sum.i" = add i64 %CurrSBIndex..0.i, 10688
  %950 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3285.sum.i"
  %951 = bitcast i8* %950 to double*
  %"&pSB[currWI].offset3357.sum.i" = add i64 %CurrSBIndex..0.i, 10816
  %952 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3357.sum.i"
  %953 = bitcast i8* %952 to double*
  %"&pSB[currWI].offset3429.sum.i" = add i64 %CurrSBIndex..0.i, 10944
  %954 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3429.sum.i"
  %955 = bitcast i8* %954 to double*
  %"&pSB[currWI].offset3501.sum.i" = add i64 %CurrSBIndex..0.i, 11072
  %956 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3501.sum.i"
  %957 = bitcast i8* %956 to double*
  %"&pSB[currWI].offset3573.sum.i" = add i64 %CurrSBIndex..0.i, 11200
  %958 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3573.sum.i"
  %959 = bitcast i8* %958 to double*
  %"&pSB[currWI].offset3645.sum.i" = add i64 %CurrSBIndex..0.i, 11328
  %960 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3645.sum.i"
  %961 = bitcast i8* %960 to double*
  %"&pSB[currWI].offset3717.sum.i" = add i64 %CurrSBIndex..0.i, 11456
  %962 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3717.sum.i"
  %963 = bitcast i8* %962 to double*
  %"&pSB[currWI].offset3789.sum.i" = add i64 %CurrSBIndex..0.i, 11584
  %964 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3789.sum.i"
  %965 = bitcast i8* %964 to double*
  %"&pSB[currWI].offset3861.sum.i" = add i64 %CurrSBIndex..0.i, 11712
  %966 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3861.sum.i"
  %967 = bitcast i8* %966 to double*
  %"&pSB[currWI].offset3933.sum.i" = add i64 %CurrSBIndex..0.i, 11840
  %968 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3933.sum.i"
  %969 = bitcast i8* %968 to double*
  %"&pSB[currWI].offset2849.sum.i" = add i64 %CurrSBIndex..0.i, 9928
  %970 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2849.sum.i"
  %971 = bitcast i8* %970 to double*
  %"&pSB[currWI].offset2921.sum.i" = add i64 %CurrSBIndex..0.i, 10056
  %972 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2921.sum.i"
  %973 = bitcast i8* %972 to double*
  %"&pSB[currWI].offset2993.sum.i" = add i64 %CurrSBIndex..0.i, 10184
  %974 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2993.sum.i"
  %975 = bitcast i8* %974 to double*
  %"&pSB[currWI].offset3065.sum.i" = add i64 %CurrSBIndex..0.i, 10312
  %976 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3065.sum.i"
  %977 = bitcast i8* %976 to double*
  %"&pSB[currWI].offset3137.sum.i" = add i64 %CurrSBIndex..0.i, 10440
  %978 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3137.sum.i"
  %979 = bitcast i8* %978 to double*
  %"&pSB[currWI].offset3209.sum.i" = add i64 %CurrSBIndex..0.i, 10568
  %980 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3209.sum.i"
  %981 = bitcast i8* %980 to double*
  %"&pSB[currWI].offset3281.sum.i" = add i64 %CurrSBIndex..0.i, 10696
  %982 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3281.sum.i"
  %983 = bitcast i8* %982 to double*
  %"&pSB[currWI].offset3353.sum.i" = add i64 %CurrSBIndex..0.i, 10824
  %984 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3353.sum.i"
  %985 = bitcast i8* %984 to double*
  %"&pSB[currWI].offset3425.sum.i" = add i64 %CurrSBIndex..0.i, 10952
  %986 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3425.sum.i"
  %987 = bitcast i8* %986 to double*
  %"&pSB[currWI].offset3497.sum.i" = add i64 %CurrSBIndex..0.i, 11080
  %988 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3497.sum.i"
  %989 = bitcast i8* %988 to double*
  %"&pSB[currWI].offset3569.sum.i" = add i64 %CurrSBIndex..0.i, 11208
  %990 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3569.sum.i"
  %991 = bitcast i8* %990 to double*
  %"&pSB[currWI].offset3641.sum.i" = add i64 %CurrSBIndex..0.i, 11336
  %992 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3641.sum.i"
  %993 = bitcast i8* %992 to double*
  %"&pSB[currWI].offset3713.sum.i" = add i64 %CurrSBIndex..0.i, 11464
  %994 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3713.sum.i"
  %995 = bitcast i8* %994 to double*
  %"&pSB[currWI].offset3785.sum.i" = add i64 %CurrSBIndex..0.i, 11592
  %996 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3785.sum.i"
  %997 = bitcast i8* %996 to double*
  %"&pSB[currWI].offset3857.sum.i" = add i64 %CurrSBIndex..0.i, 11720
  %998 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3857.sum.i"
  %999 = bitcast i8* %998 to double*
  %"&pSB[currWI].offset3929.sum.i" = add i64 %CurrSBIndex..0.i, 11848
  %1000 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3929.sum.i"
  %1001 = bitcast i8* %1000 to double*
  %"&pSB[currWI].offset2845.sum.i" = add i64 %CurrSBIndex..0.i, 9936
  %1002 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2845.sum.i"
  %1003 = bitcast i8* %1002 to double*
  %"&pSB[currWI].offset2917.sum.i" = add i64 %CurrSBIndex..0.i, 10064
  %1004 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2917.sum.i"
  %1005 = bitcast i8* %1004 to double*
  %"&pSB[currWI].offset2989.sum.i" = add i64 %CurrSBIndex..0.i, 10192
  %1006 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2989.sum.i"
  %1007 = bitcast i8* %1006 to double*
  %"&pSB[currWI].offset3061.sum.i" = add i64 %CurrSBIndex..0.i, 10320
  %1008 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3061.sum.i"
  %1009 = bitcast i8* %1008 to double*
  %"&pSB[currWI].offset3133.sum.i" = add i64 %CurrSBIndex..0.i, 10448
  %1010 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3133.sum.i"
  %1011 = bitcast i8* %1010 to double*
  %"&pSB[currWI].offset3205.sum.i" = add i64 %CurrSBIndex..0.i, 10576
  %1012 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3205.sum.i"
  %1013 = bitcast i8* %1012 to double*
  %"&pSB[currWI].offset3277.sum.i" = add i64 %CurrSBIndex..0.i, 10704
  %1014 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3277.sum.i"
  %1015 = bitcast i8* %1014 to double*
  %"&pSB[currWI].offset3349.sum.i" = add i64 %CurrSBIndex..0.i, 10832
  %1016 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3349.sum.i"
  %1017 = bitcast i8* %1016 to double*
  %"&pSB[currWI].offset3421.sum.i" = add i64 %CurrSBIndex..0.i, 10960
  %1018 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3421.sum.i"
  %1019 = bitcast i8* %1018 to double*
  %"&pSB[currWI].offset3493.sum.i" = add i64 %CurrSBIndex..0.i, 11088
  %1020 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3493.sum.i"
  %1021 = bitcast i8* %1020 to double*
  %"&pSB[currWI].offset3565.sum.i" = add i64 %CurrSBIndex..0.i, 11216
  %1022 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3565.sum.i"
  %1023 = bitcast i8* %1022 to double*
  %"&pSB[currWI].offset3637.sum.i" = add i64 %CurrSBIndex..0.i, 11344
  %1024 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3637.sum.i"
  %1025 = bitcast i8* %1024 to double*
  %"&pSB[currWI].offset3709.sum.i" = add i64 %CurrSBIndex..0.i, 11472
  %1026 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3709.sum.i"
  %1027 = bitcast i8* %1026 to double*
  %"&pSB[currWI].offset3781.sum.i" = add i64 %CurrSBIndex..0.i, 11600
  %1028 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3781.sum.i"
  %1029 = bitcast i8* %1028 to double*
  %"&pSB[currWI].offset3853.sum.i" = add i64 %CurrSBIndex..0.i, 11728
  %1030 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3853.sum.i"
  %1031 = bitcast i8* %1030 to double*
  %"&pSB[currWI].offset3925.sum.i" = add i64 %CurrSBIndex..0.i, 11856
  %1032 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3925.sum.i"
  %1033 = bitcast i8* %1032 to double*
  %"&pSB[currWI].offset2841.sum.i" = add i64 %CurrSBIndex..0.i, 9944
  %1034 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2841.sum.i"
  %1035 = bitcast i8* %1034 to double*
  %"&pSB[currWI].offset2913.sum.i" = add i64 %CurrSBIndex..0.i, 10072
  %1036 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2913.sum.i"
  %1037 = bitcast i8* %1036 to double*
  %"&pSB[currWI].offset2985.sum.i" = add i64 %CurrSBIndex..0.i, 10200
  %1038 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2985.sum.i"
  %1039 = bitcast i8* %1038 to double*
  %"&pSB[currWI].offset3057.sum.i" = add i64 %CurrSBIndex..0.i, 10328
  %1040 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3057.sum.i"
  %1041 = bitcast i8* %1040 to double*
  %"&pSB[currWI].offset3129.sum.i" = add i64 %CurrSBIndex..0.i, 10456
  %1042 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3129.sum.i"
  %1043 = bitcast i8* %1042 to double*
  %"&pSB[currWI].offset3201.sum.i" = add i64 %CurrSBIndex..0.i, 10584
  %1044 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3201.sum.i"
  %1045 = bitcast i8* %1044 to double*
  %"&pSB[currWI].offset3273.sum.i" = add i64 %CurrSBIndex..0.i, 10712
  %1046 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3273.sum.i"
  %1047 = bitcast i8* %1046 to double*
  %"&pSB[currWI].offset3345.sum.i" = add i64 %CurrSBIndex..0.i, 10840
  %1048 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3345.sum.i"
  %1049 = bitcast i8* %1048 to double*
  %"&pSB[currWI].offset3417.sum.i" = add i64 %CurrSBIndex..0.i, 10968
  %1050 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3417.sum.i"
  %1051 = bitcast i8* %1050 to double*
  %"&pSB[currWI].offset3489.sum.i" = add i64 %CurrSBIndex..0.i, 11096
  %1052 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3489.sum.i"
  %1053 = bitcast i8* %1052 to double*
  %"&pSB[currWI].offset3561.sum.i" = add i64 %CurrSBIndex..0.i, 11224
  %1054 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3561.sum.i"
  %1055 = bitcast i8* %1054 to double*
  %"&pSB[currWI].offset3633.sum.i" = add i64 %CurrSBIndex..0.i, 11352
  %1056 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3633.sum.i"
  %1057 = bitcast i8* %1056 to double*
  %"&pSB[currWI].offset3705.sum.i" = add i64 %CurrSBIndex..0.i, 11480
  %1058 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3705.sum.i"
  %1059 = bitcast i8* %1058 to double*
  %"&pSB[currWI].offset3777.sum.i" = add i64 %CurrSBIndex..0.i, 11608
  %1060 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3777.sum.i"
  %1061 = bitcast i8* %1060 to double*
  %"&pSB[currWI].offset3849.sum.i" = add i64 %CurrSBIndex..0.i, 11736
  %1062 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3849.sum.i"
  %1063 = bitcast i8* %1062 to double*
  %"&pSB[currWI].offset3921.sum.i" = add i64 %CurrSBIndex..0.i, 11864
  %1064 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3921.sum.i"
  %1065 = bitcast i8* %1064 to double*
  %"&pSB[currWI].offset2837.sum.i" = add i64 %CurrSBIndex..0.i, 9952
  %1066 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2837.sum.i"
  %1067 = bitcast i8* %1066 to double*
  %"&pSB[currWI].offset2909.sum.i" = add i64 %CurrSBIndex..0.i, 10080
  %1068 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2909.sum.i"
  %1069 = bitcast i8* %1068 to double*
  %"&pSB[currWI].offset2981.sum.i" = add i64 %CurrSBIndex..0.i, 10208
  %1070 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2981.sum.i"
  %1071 = bitcast i8* %1070 to double*
  %"&pSB[currWI].offset3053.sum.i" = add i64 %CurrSBIndex..0.i, 10336
  %1072 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3053.sum.i"
  %1073 = bitcast i8* %1072 to double*
  %"&pSB[currWI].offset3125.sum.i" = add i64 %CurrSBIndex..0.i, 10464
  %1074 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3125.sum.i"
  %1075 = bitcast i8* %1074 to double*
  %"&pSB[currWI].offset3197.sum.i" = add i64 %CurrSBIndex..0.i, 10592
  %1076 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3197.sum.i"
  %1077 = bitcast i8* %1076 to double*
  %"&pSB[currWI].offset3269.sum.i" = add i64 %CurrSBIndex..0.i, 10720
  %1078 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3269.sum.i"
  %1079 = bitcast i8* %1078 to double*
  %"&pSB[currWI].offset3341.sum.i" = add i64 %CurrSBIndex..0.i, 10848
  %1080 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3341.sum.i"
  %1081 = bitcast i8* %1080 to double*
  %"&pSB[currWI].offset3413.sum.i" = add i64 %CurrSBIndex..0.i, 10976
  %1082 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3413.sum.i"
  %1083 = bitcast i8* %1082 to double*
  %"&pSB[currWI].offset3485.sum.i" = add i64 %CurrSBIndex..0.i, 11104
  %1084 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3485.sum.i"
  %1085 = bitcast i8* %1084 to double*
  %"&pSB[currWI].offset3557.sum.i" = add i64 %CurrSBIndex..0.i, 11232
  %1086 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3557.sum.i"
  %1087 = bitcast i8* %1086 to double*
  %"&pSB[currWI].offset3629.sum.i" = add i64 %CurrSBIndex..0.i, 11360
  %1088 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3629.sum.i"
  %1089 = bitcast i8* %1088 to double*
  %"&pSB[currWI].offset3701.sum.i" = add i64 %CurrSBIndex..0.i, 11488
  %1090 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3701.sum.i"
  %1091 = bitcast i8* %1090 to double*
  %"&pSB[currWI].offset3773.sum.i" = add i64 %CurrSBIndex..0.i, 11616
  %1092 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3773.sum.i"
  %1093 = bitcast i8* %1092 to double*
  %"&pSB[currWI].offset3845.sum.i" = add i64 %CurrSBIndex..0.i, 11744
  %1094 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3845.sum.i"
  %1095 = bitcast i8* %1094 to double*
  %"&pSB[currWI].offset3917.sum.i" = add i64 %CurrSBIndex..0.i, 11872
  %1096 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3917.sum.i"
  %1097 = bitcast i8* %1096 to double*
  %"&pSB[currWI].offset2833.sum.i" = add i64 %CurrSBIndex..0.i, 9960
  %1098 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2833.sum.i"
  %1099 = bitcast i8* %1098 to double*
  %"&pSB[currWI].offset2905.sum.i" = add i64 %CurrSBIndex..0.i, 10088
  %1100 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2905.sum.i"
  %1101 = bitcast i8* %1100 to double*
  %"&pSB[currWI].offset2977.sum.i" = add i64 %CurrSBIndex..0.i, 10216
  %1102 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2977.sum.i"
  %1103 = bitcast i8* %1102 to double*
  %"&pSB[currWI].offset3049.sum.i" = add i64 %CurrSBIndex..0.i, 10344
  %1104 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3049.sum.i"
  %1105 = bitcast i8* %1104 to double*
  %"&pSB[currWI].offset3121.sum.i" = add i64 %CurrSBIndex..0.i, 10472
  %1106 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3121.sum.i"
  %1107 = bitcast i8* %1106 to double*
  %"&pSB[currWI].offset3193.sum.i" = add i64 %CurrSBIndex..0.i, 10600
  %1108 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3193.sum.i"
  %1109 = bitcast i8* %1108 to double*
  %"&pSB[currWI].offset3265.sum.i" = add i64 %CurrSBIndex..0.i, 10728
  %1110 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3265.sum.i"
  %1111 = bitcast i8* %1110 to double*
  %"&pSB[currWI].offset3337.sum.i" = add i64 %CurrSBIndex..0.i, 10856
  %1112 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3337.sum.i"
  %1113 = bitcast i8* %1112 to double*
  %"&pSB[currWI].offset3409.sum.i" = add i64 %CurrSBIndex..0.i, 10984
  %1114 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3409.sum.i"
  %1115 = bitcast i8* %1114 to double*
  %"&pSB[currWI].offset3481.sum.i" = add i64 %CurrSBIndex..0.i, 11112
  %1116 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3481.sum.i"
  %1117 = bitcast i8* %1116 to double*
  %"&pSB[currWI].offset3553.sum.i" = add i64 %CurrSBIndex..0.i, 11240
  %1118 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3553.sum.i"
  %1119 = bitcast i8* %1118 to double*
  %"&pSB[currWI].offset3625.sum.i" = add i64 %CurrSBIndex..0.i, 11368
  %1120 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3625.sum.i"
  %1121 = bitcast i8* %1120 to double*
  %"&pSB[currWI].offset3697.sum.i" = add i64 %CurrSBIndex..0.i, 11496
  %1122 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3697.sum.i"
  %1123 = bitcast i8* %1122 to double*
  %"&pSB[currWI].offset3769.sum.i" = add i64 %CurrSBIndex..0.i, 11624
  %1124 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3769.sum.i"
  %1125 = bitcast i8* %1124 to double*
  %"&pSB[currWI].offset3841.sum.i" = add i64 %CurrSBIndex..0.i, 11752
  %1126 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3841.sum.i"
  %1127 = bitcast i8* %1126 to double*
  %"&pSB[currWI].offset3913.sum.i" = add i64 %CurrSBIndex..0.i, 11880
  %1128 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3913.sum.i"
  %1129 = bitcast i8* %1128 to double*
  %"&pSB[currWI].offset2829.sum.i" = add i64 %CurrSBIndex..0.i, 9968
  %1130 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2829.sum.i"
  %1131 = bitcast i8* %1130 to double*
  %"&pSB[currWI].offset2901.sum.i" = add i64 %CurrSBIndex..0.i, 10096
  %1132 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2901.sum.i"
  %1133 = bitcast i8* %1132 to double*
  %"&pSB[currWI].offset2973.sum.i" = add i64 %CurrSBIndex..0.i, 10224
  %1134 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2973.sum.i"
  %1135 = bitcast i8* %1134 to double*
  %"&pSB[currWI].offset3045.sum.i" = add i64 %CurrSBIndex..0.i, 10352
  %1136 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3045.sum.i"
  %1137 = bitcast i8* %1136 to double*
  %"&pSB[currWI].offset3117.sum.i" = add i64 %CurrSBIndex..0.i, 10480
  %1138 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3117.sum.i"
  %1139 = bitcast i8* %1138 to double*
  %"&pSB[currWI].offset3189.sum.i" = add i64 %CurrSBIndex..0.i, 10608
  %1140 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3189.sum.i"
  %1141 = bitcast i8* %1140 to double*
  %"&pSB[currWI].offset3261.sum.i" = add i64 %CurrSBIndex..0.i, 10736
  %1142 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3261.sum.i"
  %1143 = bitcast i8* %1142 to double*
  %"&pSB[currWI].offset3333.sum.i" = add i64 %CurrSBIndex..0.i, 10864
  %1144 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3333.sum.i"
  %1145 = bitcast i8* %1144 to double*
  %"&pSB[currWI].offset3405.sum.i" = add i64 %CurrSBIndex..0.i, 10992
  %1146 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3405.sum.i"
  %1147 = bitcast i8* %1146 to double*
  %"&pSB[currWI].offset3477.sum.i" = add i64 %CurrSBIndex..0.i, 11120
  %1148 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3477.sum.i"
  %1149 = bitcast i8* %1148 to double*
  %"&pSB[currWI].offset3549.sum.i" = add i64 %CurrSBIndex..0.i, 11248
  %1150 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3549.sum.i"
  %1151 = bitcast i8* %1150 to double*
  %"&pSB[currWI].offset3621.sum.i" = add i64 %CurrSBIndex..0.i, 11376
  %1152 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3621.sum.i"
  %1153 = bitcast i8* %1152 to double*
  %"&pSB[currWI].offset3693.sum.i" = add i64 %CurrSBIndex..0.i, 11504
  %1154 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3693.sum.i"
  %1155 = bitcast i8* %1154 to double*
  %"&pSB[currWI].offset3765.sum.i" = add i64 %CurrSBIndex..0.i, 11632
  %1156 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3765.sum.i"
  %1157 = bitcast i8* %1156 to double*
  %"&pSB[currWI].offset3837.sum.i" = add i64 %CurrSBIndex..0.i, 11760
  %1158 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3837.sum.i"
  %1159 = bitcast i8* %1158 to double*
  %"&pSB[currWI].offset3909.sum.i" = add i64 %CurrSBIndex..0.i, 11888
  %1160 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3909.sum.i"
  %1161 = bitcast i8* %1160 to double*
  %"&pSB[currWI].offset2825.sum.i" = add i64 %CurrSBIndex..0.i, 9976
  %1162 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2825.sum.i"
  %1163 = bitcast i8* %1162 to double*
  %"&pSB[currWI].offset2897.sum.i" = add i64 %CurrSBIndex..0.i, 10104
  %1164 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2897.sum.i"
  %1165 = bitcast i8* %1164 to double*
  %"&pSB[currWI].offset2969.sum.i" = add i64 %CurrSBIndex..0.i, 10232
  %1166 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2969.sum.i"
  %1167 = bitcast i8* %1166 to double*
  %"&pSB[currWI].offset3041.sum.i" = add i64 %CurrSBIndex..0.i, 10360
  %1168 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3041.sum.i"
  %1169 = bitcast i8* %1168 to double*
  %"&pSB[currWI].offset3113.sum.i" = add i64 %CurrSBIndex..0.i, 10488
  %1170 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3113.sum.i"
  %1171 = bitcast i8* %1170 to double*
  %"&pSB[currWI].offset3185.sum.i" = add i64 %CurrSBIndex..0.i, 10616
  %1172 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3185.sum.i"
  %1173 = bitcast i8* %1172 to double*
  %"&pSB[currWI].offset3257.sum.i" = add i64 %CurrSBIndex..0.i, 10744
  %1174 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3257.sum.i"
  %1175 = bitcast i8* %1174 to double*
  %"&pSB[currWI].offset3329.sum.i" = add i64 %CurrSBIndex..0.i, 10872
  %1176 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3329.sum.i"
  %1177 = bitcast i8* %1176 to double*
  %"&pSB[currWI].offset3401.sum.i" = add i64 %CurrSBIndex..0.i, 11000
  %1178 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3401.sum.i"
  %1179 = bitcast i8* %1178 to double*
  %"&pSB[currWI].offset3473.sum.i" = add i64 %CurrSBIndex..0.i, 11128
  %1180 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3473.sum.i"
  %1181 = bitcast i8* %1180 to double*
  %"&pSB[currWI].offset3545.sum.i" = add i64 %CurrSBIndex..0.i, 11256
  %1182 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3545.sum.i"
  %1183 = bitcast i8* %1182 to double*
  %"&pSB[currWI].offset3617.sum.i" = add i64 %CurrSBIndex..0.i, 11384
  %1184 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3617.sum.i"
  %1185 = bitcast i8* %1184 to double*
  %"&pSB[currWI].offset3689.sum.i" = add i64 %CurrSBIndex..0.i, 11512
  %1186 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3689.sum.i"
  %1187 = bitcast i8* %1186 to double*
  %"&pSB[currWI].offset3761.sum.i" = add i64 %CurrSBIndex..0.i, 11640
  %1188 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3761.sum.i"
  %1189 = bitcast i8* %1188 to double*
  %"&pSB[currWI].offset3833.sum.i" = add i64 %CurrSBIndex..0.i, 11768
  %1190 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3833.sum.i"
  %1191 = bitcast i8* %1190 to double*
  %"&pSB[currWI].offset3905.sum.i" = add i64 %CurrSBIndex..0.i, 11896
  %1192 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3905.sum.i"
  %1193 = bitcast i8* %1192 to double*
  %"&pSB[currWI].offset2821.sum.i" = add i64 %CurrSBIndex..0.i, 9984
  %1194 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2821.sum.i"
  %1195 = bitcast i8* %1194 to double*
  %"&pSB[currWI].offset2893.sum.i" = add i64 %CurrSBIndex..0.i, 10112
  %1196 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2893.sum.i"
  %1197 = bitcast i8* %1196 to double*
  %"&pSB[currWI].offset2965.sum.i" = add i64 %CurrSBIndex..0.i, 10240
  %1198 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2965.sum.i"
  %1199 = bitcast i8* %1198 to double*
  %"&pSB[currWI].offset3037.sum.i" = add i64 %CurrSBIndex..0.i, 10368
  %1200 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3037.sum.i"
  %1201 = bitcast i8* %1200 to double*
  %"&pSB[currWI].offset3109.sum.i" = add i64 %CurrSBIndex..0.i, 10496
  %1202 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3109.sum.i"
  %1203 = bitcast i8* %1202 to double*
  %"&pSB[currWI].offset3181.sum.i" = add i64 %CurrSBIndex..0.i, 10624
  %1204 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3181.sum.i"
  %1205 = bitcast i8* %1204 to double*
  %"&pSB[currWI].offset3253.sum.i" = add i64 %CurrSBIndex..0.i, 10752
  %1206 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3253.sum.i"
  %1207 = bitcast i8* %1206 to double*
  %"&pSB[currWI].offset3325.sum.i" = add i64 %CurrSBIndex..0.i, 10880
  %1208 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3325.sum.i"
  %1209 = bitcast i8* %1208 to double*
  %"&pSB[currWI].offset3397.sum.i" = add i64 %CurrSBIndex..0.i, 11008
  %1210 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3397.sum.i"
  %1211 = bitcast i8* %1210 to double*
  %"&pSB[currWI].offset3469.sum.i" = add i64 %CurrSBIndex..0.i, 11136
  %1212 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3469.sum.i"
  %1213 = bitcast i8* %1212 to double*
  %"&pSB[currWI].offset3541.sum.i" = add i64 %CurrSBIndex..0.i, 11264
  %1214 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3541.sum.i"
  %1215 = bitcast i8* %1214 to double*
  %"&pSB[currWI].offset3613.sum.i" = add i64 %CurrSBIndex..0.i, 11392
  %1216 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3613.sum.i"
  %1217 = bitcast i8* %1216 to double*
  %"&pSB[currWI].offset3685.sum.i" = add i64 %CurrSBIndex..0.i, 11520
  %1218 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3685.sum.i"
  %1219 = bitcast i8* %1218 to double*
  %"&pSB[currWI].offset3757.sum.i" = add i64 %CurrSBIndex..0.i, 11648
  %1220 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3757.sum.i"
  %1221 = bitcast i8* %1220 to double*
  %"&pSB[currWI].offset3829.sum.i" = add i64 %CurrSBIndex..0.i, 11776
  %1222 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3829.sum.i"
  %1223 = bitcast i8* %1222 to double*
  %"&pSB[currWI].offset3901.sum.i" = add i64 %CurrSBIndex..0.i, 11904
  %1224 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3901.sum.i"
  %1225 = bitcast i8* %1224 to double*
  %"&pSB[currWI].offset2817.sum.i" = add i64 %CurrSBIndex..0.i, 9992
  %1226 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2817.sum.i"
  %1227 = bitcast i8* %1226 to double*
  %"&pSB[currWI].offset2889.sum.i" = add i64 %CurrSBIndex..0.i, 10120
  %1228 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2889.sum.i"
  %1229 = bitcast i8* %1228 to double*
  %"&pSB[currWI].offset2961.sum.i" = add i64 %CurrSBIndex..0.i, 10248
  %1230 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2961.sum.i"
  %1231 = bitcast i8* %1230 to double*
  %"&pSB[currWI].offset3033.sum.i" = add i64 %CurrSBIndex..0.i, 10376
  %1232 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3033.sum.i"
  %1233 = bitcast i8* %1232 to double*
  %"&pSB[currWI].offset3105.sum.i" = add i64 %CurrSBIndex..0.i, 10504
  %1234 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3105.sum.i"
  %1235 = bitcast i8* %1234 to double*
  %"&pSB[currWI].offset3177.sum.i" = add i64 %CurrSBIndex..0.i, 10632
  %1236 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3177.sum.i"
  %1237 = bitcast i8* %1236 to double*
  %"&pSB[currWI].offset3249.sum.i" = add i64 %CurrSBIndex..0.i, 10760
  %1238 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3249.sum.i"
  %1239 = bitcast i8* %1238 to double*
  %"&pSB[currWI].offset3321.sum.i" = add i64 %CurrSBIndex..0.i, 10888
  %1240 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3321.sum.i"
  %1241 = bitcast i8* %1240 to double*
  %"&pSB[currWI].offset3393.sum.i" = add i64 %CurrSBIndex..0.i, 11016
  %1242 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3393.sum.i"
  %1243 = bitcast i8* %1242 to double*
  %"&pSB[currWI].offset3465.sum.i" = add i64 %CurrSBIndex..0.i, 11144
  %1244 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3465.sum.i"
  %1245 = bitcast i8* %1244 to double*
  %"&pSB[currWI].offset3537.sum.i" = add i64 %CurrSBIndex..0.i, 11272
  %1246 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3537.sum.i"
  %1247 = bitcast i8* %1246 to double*
  %"&pSB[currWI].offset3609.sum.i" = add i64 %CurrSBIndex..0.i, 11400
  %1248 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3609.sum.i"
  %1249 = bitcast i8* %1248 to double*
  %"&pSB[currWI].offset3681.sum.i" = add i64 %CurrSBIndex..0.i, 11528
  %1250 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3681.sum.i"
  %1251 = bitcast i8* %1250 to double*
  %"&pSB[currWI].offset3753.sum.i" = add i64 %CurrSBIndex..0.i, 11656
  %1252 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3753.sum.i"
  %1253 = bitcast i8* %1252 to double*
  %"&pSB[currWI].offset3825.sum.i" = add i64 %CurrSBIndex..0.i, 11784
  %1254 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3825.sum.i"
  %1255 = bitcast i8* %1254 to double*
  %"&pSB[currWI].offset3897.sum.i" = add i64 %CurrSBIndex..0.i, 11912
  %1256 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3897.sum.i"
  %1257 = bitcast i8* %1256 to double*
  %tmp50.i = shl i64 %562, 4
  %tmp51.i = trunc i64 %tmp50.i to i32
  %tmp52.i = add i32 %559, %tmp51.i
  %tmp53.i = mul i32 %tmp52.i, %10
  %temp.i = insertelement <16 x i32> undef, i32 %tmp53.i, i32 0
  %vector.i = shufflevector <16 x i32> %temp.i, <16 x i32> undef, <16 x i32> zeroinitializer
  %tmp5516.i = add <16 x i32> %vector.i, %556
  %tmp5617.i = sext <16 x i32> %tmp5516.i to <16 x i64>
  %"&(pSB[currWI].offset)2157.i" = add nuw i64 %CurrSBIndex..0.i, 6528
  %"&pSB[currWI].offset2158.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2157.i"
  %CastToValueType2159.i = bitcast i8* %"&pSB[currWI].offset2158.i" to <16 x i64>*
  store <16 x i64> %tmp5617.i, <16 x i64>* %CastToValueType2159.i, align 128
  %tmp6120.i = add <16 x i64> %vector19.i, %tmp5617.i
  %"&(pSB[currWI].offset)2166.i" = add nuw i64 %CurrSBIndex..0.i, 6656
  %"&pSB[currWI].offset2167.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2166.i"
  %CastToValueType2168.i = bitcast i8* %"&pSB[currWI].offset2167.i" to <16 x i64>*
  store <16 x i64> %tmp6120.i, <16 x i64>* %CastToValueType2168.i, align 128
  %tmp6623.i = add <16 x i64> %vector22.i, %tmp5617.i
  %"&(pSB[currWI].offset)2175.i" = add nuw i64 %CurrSBIndex..0.i, 6784
  %"&pSB[currWI].offset2176.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2175.i"
  %CastToValueType2177.i = bitcast i8* %"&pSB[currWI].offset2176.i" to <16 x i64>*
  store <16 x i64> %tmp6623.i, <16 x i64>* %CastToValueType2177.i, align 128
  %tmp7126.i = add <16 x i64> %vector25.i, %tmp5617.i
  %"&(pSB[currWI].offset)2184.i" = add nuw i64 %CurrSBIndex..0.i, 6912
  %"&pSB[currWI].offset2185.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2184.i"
  %CastToValueType2186.i = bitcast i8* %"&pSB[currWI].offset2185.i" to <16 x i64>*
  store <16 x i64> %tmp7126.i, <16 x i64>* %CastToValueType2186.i, align 128
  %tmp78.i = shl i32 %559, 4
  %"&(pSB[currWI].offset)2193.i" = add nuw i64 %CurrSBIndex..0.i, 7040
  %"&pSB[currWI].offset2194.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2193.i"
  %CastToValueType2195.i = bitcast i8* %"&pSB[currWI].offset2194.i" to i32*
  store i32 %tmp78.i, i32* %CastToValueType2195.i, align 4
  %temp27.i = insertelement <16 x i32> undef, i32 %tmp78.i, i32 0
  %vector28.i = shufflevector <16 x i32> %temp27.i, <16 x i32> undef, <16 x i32> zeroinitializer
  %tmp7929.i = add <16 x i32> %vector28.i, %556
  %tmp80.i = shl i64 %560, 6
  %tmp81.i = trunc i64 %tmp80.i to i32
  %temp30.i = insertelement <16 x i32> undef, i32 %tmp81.i, i32 0
  %vector31.i = shufflevector <16 x i32> %temp30.i, <16 x i32> undef, <16 x i32> zeroinitializer
  %tmp8232.i = add <16 x i32> %tmp7929.i, %vector31.i
  %tmp8333.i = sext <16 x i32> %tmp8232.i to <16 x i64>
  %"&(pSB[currWI].offset)2202.i" = add nuw i64 %CurrSBIndex..0.i, 7168
  %"&pSB[currWI].offset2203.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2202.i"
  %CastToValueType2204.i = bitcast i8* %"&pSB[currWI].offset2203.i" to <16 x i64>*
  store <16 x i64> %tmp8333.i, <16 x i64>* %CastToValueType2204.i, align 128
  %tmp8836.i = add <16 x i64> %tmp8333.i, %vector35.i
  %"&(pSB[currWI].offset)2211.i" = add nuw i64 %CurrSBIndex..0.i, 7296
  %"&pSB[currWI].offset2212.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2211.i"
  %CastToValueType2213.i = bitcast i8* %"&pSB[currWI].offset2212.i" to <16 x i64>*
  store <16 x i64> %tmp8836.i, <16 x i64>* %CastToValueType2213.i, align 128
  %tmp9439.i = add <16 x i64> %tmp8333.i, %vector38.i
  %"&(pSB[currWI].offset)2220.i" = add nuw i64 %CurrSBIndex..0.i, 7424
  %"&pSB[currWI].offset2221.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2220.i"
  %CastToValueType2222.i = bitcast i8* %"&pSB[currWI].offset2221.i" to <16 x i64>*
  store <16 x i64> %tmp9439.i, <16 x i64>* %CastToValueType2222.i, align 128
  %tmp9842.i = add <16 x i64> %vector41.i, %tmp8333.i
  %"&(pSB[currWI].offset)2229.i" = add nuw i64 %CurrSBIndex..0.i, 7552
  %"&pSB[currWI].offset2230.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2229.i"
  %CastToValueType2231.i = bitcast i8* %"&pSB[currWI].offset2230.i" to <16 x i64>*
  store <16 x i64> %tmp9842.i, <16 x i64>* %CastToValueType2231.i, align 128
  %tmp10545.i = add <16 x i64> %vector44.i, %tmp8333.i
  %"&(pSB[currWI].offset)2238.i" = add nuw i64 %CurrSBIndex..0.i, 7680
  %"&pSB[currWI].offset2239.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2238.i"
  %CastToValueType2240.i = bitcast i8* %"&pSB[currWI].offset2239.i" to <16 x i64>*
  store <16 x i64> %tmp10545.i, <16 x i64>* %CastToValueType2240.i, align 128
  %tmp11148.i = add <16 x i64> %vector47.i, %tmp8333.i
  %"&(pSB[currWI].offset)2247.i" = add nuw i64 %CurrSBIndex..0.i, 7808
  %"&pSB[currWI].offset2248.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2247.i"
  %CastToValueType2249.i = bitcast i8* %"&pSB[currWI].offset2248.i" to <16 x i64>*
  store <16 x i64> %tmp11148.i, <16 x i64>* %CastToValueType2249.i, align 128
  %tmp11551.i = add <16 x i64> %vector50.i, %tmp8333.i
  %"&(pSB[currWI].offset)2256.i" = add nuw i64 %CurrSBIndex..0.i, 7936
  %"&pSB[currWI].offset2257.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2256.i"
  %CastToValueType2258.i = bitcast i8* %"&pSB[currWI].offset2257.i" to <16 x i64>*
  store <16 x i64> %tmp11551.i, <16 x i64>* %CastToValueType2258.i, align 128
  %tmp11854.i = add <16 x i64> %vector53.i, %tmp8333.i
  %"&(pSB[currWI].offset)2265.i" = add nuw i64 %CurrSBIndex..0.i, 8064
  %"&pSB[currWI].offset2266.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2265.i"
  %CastToValueType2267.i = bitcast i8* %"&pSB[currWI].offset2266.i" to <16 x i64>*
  store <16 x i64> %tmp11854.i, <16 x i64>* %CastToValueType2267.i, align 128
  %tmp12357.i = add <16 x i64> %vector56.i, %tmp8333.i
  %"&(pSB[currWI].offset)2274.i" = add nuw i64 %CurrSBIndex..0.i, 8192
  %"&pSB[currWI].offset2275.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2274.i"
  %CastToValueType2276.i = bitcast i8* %"&pSB[currWI].offset2275.i" to <16 x i64>*
  store <16 x i64> %tmp12357.i, <16 x i64>* %CastToValueType2276.i, align 128
  %tmp12760.i = add <16 x i64> %vector59.i, %tmp8333.i
  %"&(pSB[currWI].offset)2283.i" = add nuw i64 %CurrSBIndex..0.i, 8320
  %"&pSB[currWI].offset2284.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2283.i"
  %CastToValueType2285.i = bitcast i8* %"&pSB[currWI].offset2284.i" to <16 x i64>*
  store <16 x i64> %tmp12760.i, <16 x i64>* %CastToValueType2285.i, align 128
  %tmp13163.i = add <16 x i64> %vector62.i, %tmp8333.i
  %"&(pSB[currWI].offset)2292.i" = add nuw i64 %CurrSBIndex..0.i, 8448
  %"&pSB[currWI].offset2293.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2292.i"
  %CastToValueType2294.i = bitcast i8* %"&pSB[currWI].offset2293.i" to <16 x i64>*
  store <16 x i64> %tmp13163.i, <16 x i64>* %CastToValueType2294.i, align 128
  %tmp13466.i = add <16 x i64> %vector65.i, %tmp8333.i
  %"&(pSB[currWI].offset)2301.i" = add nuw i64 %CurrSBIndex..0.i, 8576
  %"&pSB[currWI].offset2302.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2301.i"
  %CastToValueType2303.i = bitcast i8* %"&pSB[currWI].offset2302.i" to <16 x i64>*
  store <16 x i64> %tmp13466.i, <16 x i64>* %CastToValueType2303.i, align 128
  %tmp13869.i = add <16 x i64> %vector68.i, %tmp8333.i
  %"&(pSB[currWI].offset)2310.i" = add nuw i64 %CurrSBIndex..0.i, 8704
  %"&pSB[currWI].offset2311.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2310.i"
  %CastToValueType2312.i = bitcast i8* %"&pSB[currWI].offset2311.i" to <16 x i64>*
  store <16 x i64> %tmp13869.i, <16 x i64>* %CastToValueType2312.i, align 128
  %tmp14272.i = add <16 x i64> %vector71.i, %tmp8333.i
  %"&(pSB[currWI].offset)2319.i" = add nuw i64 %CurrSBIndex..0.i, 8832
  %"&pSB[currWI].offset2320.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2319.i"
  %CastToValueType2321.i = bitcast i8* %"&pSB[currWI].offset2320.i" to <16 x i64>*
  store <16 x i64> %tmp14272.i, <16 x i64>* %CastToValueType2321.i, align 128
  %tmp14675.i = add <16 x i64> %vector74.i, %tmp8333.i
  %"&(pSB[currWI].offset)2328.i" = add nuw i64 %CurrSBIndex..0.i, 8960
  %"&pSB[currWI].offset2329.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2328.i"
  %CastToValueType2330.i = bitcast i8* %"&pSB[currWI].offset2329.i" to <16 x i64>*
  store <16 x i64> %tmp14675.i, <16 x i64>* %CastToValueType2330.i, align 128
  %tmp14978.i = add <16 x i64> %vector77.i, %tmp8333.i
  %"&(pSB[currWI].offset)2337.i" = add nuw i64 %CurrSBIndex..0.i, 9088
  %"&pSB[currWI].offset2338.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2337.i"
  %CastToValueType2339.i = bitcast i8* %"&pSB[currWI].offset2338.i" to <16 x i64>*
  store <16 x i64> %tmp14978.i, <16 x i64>* %CastToValueType2339.i, align 128
  %tmp25.i = mul i32 %tmp51.i, %16
  br label %.loopexit.i

.loopexit.i:                                      ; preds = %SyncBB4485.i, %SyncBB4486.i
  %currBarrier.1.i = phi i32 [ %currBarrier.2.i, %SyncBB4486.i ], [ %currBarrier.0.ph.i, %SyncBB4485.i ]
  %CurrSBIndex..2.i = phi i64 [ %CurrSBIndex..0.i, %SyncBB4486.i ], [ %CurrSBIndex..1.i, %SyncBB4485.i ]
  %CurrWI..2.i = phi i64 [ %CurrWI..0.i, %SyncBB4486.i ], [ %CurrWI..1.i, %SyncBB4485.i ]
  %indvar44.i = phi i64 [ 0, %SyncBB4486.i ], [ %indvar.next45.i, %SyncBB4485.i ]
  %"&(pSB[currWI].offset)2346.i" = add nuw i64 %CurrSBIndex..2.i, 9216
  %"&pSB[currWI].offset2347.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2346.i"
  %CastToValueType2348.i = bitcast i8* %"&pSB[currWI].offset2347.i" to i64*
  store i64 %indvar44.i, i64* %CastToValueType2348.i, align 8
  %tmp46.i = shl i64 %indvar44.i, 4
  %tmp47.i = add i64 %tmp46.i, 16
  %tmp48.i = trunc i64 %tmp47.i to i32
  %"&(pSB[currWI].offset)2355.i" = add nuw i64 %CurrSBIndex..2.i, 9224
  %"&pSB[currWI].offset2356.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2355.i"
  %CastToValueType2357.i = bitcast i8* %"&pSB[currWI].offset2356.i" to i32*
  store i32 %tmp48.i, i32* %CastToValueType2357.i, align 4
  %"&(pSB[currWI].offset)2161.i" = add nuw i64 %CurrSBIndex..2.i, 6528
  %"&pSB[currWI].offset2162.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2161.i"
  %CastToValueType2163.i = bitcast i8* %"&pSB[currWI].offset2162.i" to <16 x i64>*
  %loadedValue2164.i = load <16 x i64>* %CastToValueType2163.i, align 128
  %extract82.lhs.i = extractelement <16 x i64> %loadedValue2164.i, i32 0
  %extract82.i = add i64 %extract82.lhs.i, %tmp46.i
  %1258 = getelementptr double addrspace(1)* %7, i64 %extract82.i
  %"&(pSB[currWI].offset)2170.i" = add nuw i64 %CurrSBIndex..2.i, 6656
  %"&pSB[currWI].offset2171.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2170.i"
  %CastToValueType2172.i = bitcast i8* %"&pSB[currWI].offset2171.i" to <16 x i64>*
  %loadedValue2173.i = load <16 x i64>* %CastToValueType2172.i, align 128
  %extract99.lhs.i = extractelement <16 x i64> %loadedValue2173.i, i32 0
  %extract99.i = add i64 %extract99.lhs.i, %tmp46.i
  %1259 = getelementptr double addrspace(1)* %7, i64 %extract99.i
  %"&(pSB[currWI].offset)2179.i" = add nuw i64 %CurrSBIndex..2.i, 6784
  %"&pSB[currWI].offset2180.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2179.i"
  %CastToValueType2181.i = bitcast i8* %"&pSB[currWI].offset2180.i" to <16 x i64>*
  %loadedValue2182.i = load <16 x i64>* %CastToValueType2181.i, align 128
  %extract116.lhs.i = extractelement <16 x i64> %loadedValue2182.i, i32 0
  %extract116.i = add i64 %extract116.lhs.i, %tmp46.i
  %1260 = getelementptr double addrspace(1)* %7, i64 %extract116.i
  %"&(pSB[currWI].offset)2188.i" = add nuw i64 %CurrSBIndex..2.i, 6912
  %"&pSB[currWI].offset2189.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2188.i"
  %CastToValueType2190.i = bitcast i8* %"&pSB[currWI].offset2189.i" to <16 x i64>*
  %loadedValue2191.i = load <16 x i64>* %CastToValueType2190.i, align 128
  %extract133.lhs.i = extractelement <16 x i64> %loadedValue2191.i, i32 0
  %extract133.i = add i64 %extract133.lhs.i, %tmp46.i
  %1261 = getelementptr double addrspace(1)* %7, i64 %extract133.i
  %tmp77.i = mul i64 %tmp76.i, %indvar44.i
  %"&(pSB[currWI].offset)2242.i" = add nuw i64 %CurrSBIndex..2.i, 7680
  %"&pSB[currWI].offset2243.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2242.i"
  %CastToValueType2244.i = bitcast i8* %"&pSB[currWI].offset2243.i" to <16 x i64>*
  %loadedValue2245.i = load <16 x i64>* %CastToValueType2244.i, align 128
  %extract152.lhs.i = extractelement <16 x i64> %loadedValue2245.i, i32 0
  %extract152.i = add i64 %extract152.lhs.i, %tmp77.i
  %1262 = getelementptr double addrspace(1)* %1, i64 %extract152.i
  %"&(pSB[currWI].offset)2364.i" = add nuw i64 %CurrSBIndex..2.i, 9232
  %"&pSB[currWI].offset2365.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2364.i"
  %CastToValueType2366.i = bitcast i8* %"&pSB[currWI].offset2365.i" to double addrspace(1)**
  store double addrspace(1)* %1262, double addrspace(1)** %CastToValueType2366.i, align 8
  %"&(pSB[currWI].offset)2251.i" = add nuw i64 %CurrSBIndex..2.i, 7808
  %"&pSB[currWI].offset2252.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2251.i"
  %CastToValueType2253.i = bitcast i8* %"&pSB[currWI].offset2252.i" to <16 x i64>*
  %loadedValue2254.i = load <16 x i64>* %CastToValueType2253.i, align 128
  %extract169.lhs.i = extractelement <16 x i64> %loadedValue2254.i, i32 0
  %extract169.i = add i64 %extract169.lhs.i, %tmp77.i
  %1263 = getelementptr double addrspace(1)* %1, i64 %extract169.i
  %"&(pSB[currWI].offset)2373.i" = add nuw i64 %CurrSBIndex..2.i, 9240
  %"&pSB[currWI].offset2374.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2373.i"
  %CastToValueType2375.i = bitcast i8* %"&pSB[currWI].offset2374.i" to double addrspace(1)**
  store double addrspace(1)* %1263, double addrspace(1)** %CastToValueType2375.i, align 8
  %"&(pSB[currWI].offset)2260.i" = add nuw i64 %CurrSBIndex..2.i, 7936
  %"&pSB[currWI].offset2261.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2260.i"
  %CastToValueType2262.i = bitcast i8* %"&pSB[currWI].offset2261.i" to <16 x i64>*
  %loadedValue2263.i = load <16 x i64>* %CastToValueType2262.i, align 128
  %extract186.lhs.i = extractelement <16 x i64> %loadedValue2263.i, i32 0
  %extract186.i = add i64 %extract186.lhs.i, %tmp77.i
  %1264 = getelementptr double addrspace(1)* %1, i64 %extract186.i
  %"&(pSB[currWI].offset)2382.i" = add nuw i64 %CurrSBIndex..2.i, 9248
  %"&pSB[currWI].offset2383.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2382.i"
  %CastToValueType2384.i = bitcast i8* %"&pSB[currWI].offset2383.i" to double addrspace(1)**
  store double addrspace(1)* %1264, double addrspace(1)** %CastToValueType2384.i, align 8
  %"&(pSB[currWI].offset)2269.i" = add nuw i64 %CurrSBIndex..2.i, 8064
  %"&pSB[currWI].offset2270.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2269.i"
  %CastToValueType2271.i = bitcast i8* %"&pSB[currWI].offset2270.i" to <16 x i64>*
  %loadedValue2272.i = load <16 x i64>* %CastToValueType2271.i, align 128
  %extract203.lhs.i = extractelement <16 x i64> %loadedValue2272.i, i32 0
  %extract203.i = add i64 %extract203.lhs.i, %tmp77.i
  %1265 = getelementptr double addrspace(1)* %1, i64 %extract203.i
  %"&(pSB[currWI].offset)2391.i" = add nuw i64 %CurrSBIndex..2.i, 9256
  %"&pSB[currWI].offset2392.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2391.i"
  %CastToValueType2393.i = bitcast i8* %"&pSB[currWI].offset2392.i" to double addrspace(1)**
  store double addrspace(1)* %1265, double addrspace(1)** %CastToValueType2393.i, align 8
  %"&(pSB[currWI].offset)2278.i" = add nuw i64 %CurrSBIndex..2.i, 8192
  %"&pSB[currWI].offset2279.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2278.i"
  %CastToValueType2280.i = bitcast i8* %"&pSB[currWI].offset2279.i" to <16 x i64>*
  %loadedValue2281.i = load <16 x i64>* %CastToValueType2280.i, align 128
  %extract220.lhs.i = extractelement <16 x i64> %loadedValue2281.i, i32 0
  %extract220.i = add i64 %extract220.lhs.i, %tmp77.i
  %1266 = getelementptr double addrspace(1)* %1, i64 %extract220.i
  %"&(pSB[currWI].offset)2400.i" = add nuw i64 %CurrSBIndex..2.i, 9264
  %"&pSB[currWI].offset2401.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2400.i"
  %CastToValueType2402.i = bitcast i8* %"&pSB[currWI].offset2401.i" to double addrspace(1)**
  store double addrspace(1)* %1266, double addrspace(1)** %CastToValueType2402.i, align 8
  %"&(pSB[currWI].offset)2287.i" = add nuw i64 %CurrSBIndex..2.i, 8320
  %"&pSB[currWI].offset2288.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2287.i"
  %CastToValueType2289.i = bitcast i8* %"&pSB[currWI].offset2288.i" to <16 x i64>*
  %loadedValue2290.i = load <16 x i64>* %CastToValueType2289.i, align 128
  %extract237.lhs.i = extractelement <16 x i64> %loadedValue2290.i, i32 0
  %extract237.i = add i64 %extract237.lhs.i, %tmp77.i
  %1267 = getelementptr double addrspace(1)* %1, i64 %extract237.i
  %"&(pSB[currWI].offset)2409.i" = add nuw i64 %CurrSBIndex..2.i, 9272
  %"&pSB[currWI].offset2410.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2409.i"
  %CastToValueType2411.i = bitcast i8* %"&pSB[currWI].offset2410.i" to double addrspace(1)**
  store double addrspace(1)* %1267, double addrspace(1)** %CastToValueType2411.i, align 8
  %"&(pSB[currWI].offset)2296.i" = add nuw i64 %CurrSBIndex..2.i, 8448
  %"&pSB[currWI].offset2297.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2296.i"
  %CastToValueType2298.i = bitcast i8* %"&pSB[currWI].offset2297.i" to <16 x i64>*
  %loadedValue2299.i = load <16 x i64>* %CastToValueType2298.i, align 128
  %extract254.lhs.i = extractelement <16 x i64> %loadedValue2299.i, i32 0
  %extract254.i = add i64 %extract254.lhs.i, %tmp77.i
  %1268 = getelementptr double addrspace(1)* %1, i64 %extract254.i
  %"&(pSB[currWI].offset)2418.i" = add nuw i64 %CurrSBIndex..2.i, 9280
  %"&pSB[currWI].offset2419.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2418.i"
  %CastToValueType2420.i = bitcast i8* %"&pSB[currWI].offset2419.i" to double addrspace(1)**
  store double addrspace(1)* %1268, double addrspace(1)** %CastToValueType2420.i, align 8
  %"&(pSB[currWI].offset)2305.i" = add nuw i64 %CurrSBIndex..2.i, 8576
  %"&pSB[currWI].offset2306.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2305.i"
  %CastToValueType2307.i = bitcast i8* %"&pSB[currWI].offset2306.i" to <16 x i64>*
  %loadedValue2308.i = load <16 x i64>* %CastToValueType2307.i, align 128
  %extract271.lhs.i = extractelement <16 x i64> %loadedValue2308.i, i32 0
  %extract271.i = add i64 %extract271.lhs.i, %tmp77.i
  %1269 = getelementptr double addrspace(1)* %1, i64 %extract271.i
  %"&(pSB[currWI].offset)2427.i" = add nuw i64 %CurrSBIndex..2.i, 9288
  %"&pSB[currWI].offset2428.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2427.i"
  %CastToValueType2429.i = bitcast i8* %"&pSB[currWI].offset2428.i" to double addrspace(1)**
  store double addrspace(1)* %1269, double addrspace(1)** %CastToValueType2429.i, align 8
  %"&(pSB[currWI].offset)2314.i" = add nuw i64 %CurrSBIndex..2.i, 8704
  %"&pSB[currWI].offset2315.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2314.i"
  %CastToValueType2316.i = bitcast i8* %"&pSB[currWI].offset2315.i" to <16 x i64>*
  %loadedValue2317.i = load <16 x i64>* %CastToValueType2316.i, align 128
  %extract288.lhs.i = extractelement <16 x i64> %loadedValue2317.i, i32 0
  %extract288.i = add i64 %extract288.lhs.i, %tmp77.i
  %1270 = getelementptr double addrspace(1)* %1, i64 %extract288.i
  %"&(pSB[currWI].offset)2436.i" = add nuw i64 %CurrSBIndex..2.i, 9296
  %"&pSB[currWI].offset2437.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2436.i"
  %CastToValueType2438.i = bitcast i8* %"&pSB[currWI].offset2437.i" to double addrspace(1)**
  store double addrspace(1)* %1270, double addrspace(1)** %CastToValueType2438.i, align 8
  %"&(pSB[currWI].offset)2323.i" = add nuw i64 %CurrSBIndex..2.i, 8832
  %"&pSB[currWI].offset2324.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2323.i"
  %CastToValueType2325.i = bitcast i8* %"&pSB[currWI].offset2324.i" to <16 x i64>*
  %loadedValue2326.i = load <16 x i64>* %CastToValueType2325.i, align 128
  %extract305.lhs.i = extractelement <16 x i64> %loadedValue2326.i, i32 0
  %extract305.i = add i64 %extract305.lhs.i, %tmp77.i
  %1271 = getelementptr double addrspace(1)* %1, i64 %extract305.i
  %"&(pSB[currWI].offset)2445.i" = add nuw i64 %CurrSBIndex..2.i, 9304
  %"&pSB[currWI].offset2446.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2445.i"
  %CastToValueType2447.i = bitcast i8* %"&pSB[currWI].offset2446.i" to double addrspace(1)**
  store double addrspace(1)* %1271, double addrspace(1)** %CastToValueType2447.i, align 8
  %"&(pSB[currWI].offset)2332.i" = add nuw i64 %CurrSBIndex..2.i, 8960
  %"&pSB[currWI].offset2333.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2332.i"
  %CastToValueType2334.i = bitcast i8* %"&pSB[currWI].offset2333.i" to <16 x i64>*
  %loadedValue2335.i = load <16 x i64>* %CastToValueType2334.i, align 128
  %extract322.lhs.i = extractelement <16 x i64> %loadedValue2335.i, i32 0
  %extract322.i = add i64 %extract322.lhs.i, %tmp77.i
  %1272 = getelementptr double addrspace(1)* %1, i64 %extract322.i
  %"&(pSB[currWI].offset)2454.i" = add nuw i64 %CurrSBIndex..2.i, 9312
  %"&pSB[currWI].offset2455.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2454.i"
  %CastToValueType2456.i = bitcast i8* %"&pSB[currWI].offset2455.i" to double addrspace(1)**
  store double addrspace(1)* %1272, double addrspace(1)** %CastToValueType2456.i, align 8
  %"&(pSB[currWI].offset)2341.i" = add nuw i64 %CurrSBIndex..2.i, 9088
  %"&pSB[currWI].offset2342.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2341.i"
  %CastToValueType2343.i = bitcast i8* %"&pSB[currWI].offset2342.i" to <16 x i64>*
  %loadedValue2344.i = load <16 x i64>* %CastToValueType2343.i, align 128
  %extract339.lhs.i = extractelement <16 x i64> %loadedValue2344.i, i32 0
  %extract339.i = add i64 %extract339.lhs.i, %tmp77.i
  %1273 = getelementptr double addrspace(1)* %1, i64 %extract339.i
  %"&(pSB[currWI].offset)2463.i" = add nuw i64 %CurrSBIndex..2.i, 9320
  %"&pSB[currWI].offset2464.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2463.i"
  %CastToValueType2465.i = bitcast i8* %"&pSB[currWI].offset2464.i" to double addrspace(1)**
  store double addrspace(1)* %1273, double addrspace(1)** %CastToValueType2465.i, align 8
  %"&(pSB[currWI].offset)2206.i" = add nuw i64 %CurrSBIndex..2.i, 7168
  %"&pSB[currWI].offset2207.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2206.i"
  %CastToValueType2208.i = bitcast i8* %"&pSB[currWI].offset2207.i" to <16 x i64>*
  %loadedValue2209.i = load <16 x i64>* %CastToValueType2208.i, align 128
  %extract359.lhs.i = extractelement <16 x i64> %loadedValue2209.i, i32 0
  %extract359.i = add i64 %extract359.lhs.i, %tmp77.i
  %"&(pSB[currWI].offset)2233.i" = add nuw i64 %CurrSBIndex..2.i, 7552
  %"&pSB[currWI].offset2234.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2233.i"
  %CastToValueType2235.i = bitcast i8* %"&pSB[currWI].offset2234.i" to <16 x i64>*
  %loadedValue2236.i = load <16 x i64>* %CastToValueType2235.i, align 128
  %extract375.lhs.i = extractelement <16 x i64> %loadedValue2236.i, i32 0
  %extract375.i = add i64 %extract375.lhs.i, %tmp77.i
  %"&(pSB[currWI].offset)2224.i" = add nuw i64 %CurrSBIndex..2.i, 7424
  %"&pSB[currWI].offset2225.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2224.i"
  %CastToValueType2226.i = bitcast i8* %"&pSB[currWI].offset2225.i" to <16 x i64>*
  %loadedValue2227.i = load <16 x i64>* %CastToValueType2226.i, align 128
  %extract391.lhs.i = extractelement <16 x i64> %loadedValue2227.i, i32 0
  %extract391.i = add i64 %extract391.lhs.i, %tmp77.i
  %"&(pSB[currWI].offset)2215.i" = add nuw i64 %CurrSBIndex..2.i, 7296
  %"&pSB[currWI].offset2216.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2215.i"
  %CastToValueType2217.i = bitcast i8* %"&pSB[currWI].offset2216.i" to <16 x i64>*
  %loadedValue2218.i = load <16 x i64>* %CastToValueType2217.i, align 128
  %extract407.lhs.i = extractelement <16 x i64> %loadedValue2218.i, i32 0
  %extract407.i = add i64 %extract407.lhs.i, %tmp77.i
  %1274 = getelementptr double addrspace(1)* %1, i64 %extract359.i
  %1275 = getelementptr double addrspace(1)* %1, i64 %extract375.i
  %1276 = getelementptr double addrspace(1)* %1, i64 %extract391.i
  %1277 = getelementptr double addrspace(1)* %1, i64 %extract407.i
  %ptrTypeCast.i = bitcast double addrspace(1)* %1274 to <16 x double> addrspace(1)*
  %1278 = load <16 x double> addrspace(1)* %ptrTypeCast.i, align 8
  %"&(pSB[currWI].offset)2472.i" = add nuw i64 %CurrSBIndex..2.i, 9344
  %"&pSB[currWI].offset2473.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2472.i"
  %CastToValueType2474.i = bitcast i8* %"&pSB[currWI].offset2473.i" to <16 x double>*
  store <16 x double> %1278, <16 x double>* %CastToValueType2474.i, align 128
  %ptrTypeCast423.i = bitcast double addrspace(1)* %1275 to <16 x double> addrspace(1)*
  %1279 = load <16 x double> addrspace(1)* %ptrTypeCast423.i, align 8
  %"&(pSB[currWI].offset)2556.i" = add nuw i64 %CurrSBIndex..2.i, 9472
  %"&pSB[currWI].offset2557.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2556.i"
  %CastToValueType2558.i = bitcast i8* %"&pSB[currWI].offset2557.i" to <16 x double>*
  store <16 x double> %1279, <16 x double>* %CastToValueType2558.i, align 128
  %ptrTypeCast424.i = bitcast double addrspace(1)* %1276 to <16 x double> addrspace(1)*
  %1280 = load <16 x double> addrspace(1)* %ptrTypeCast424.i, align 8
  %"&(pSB[currWI].offset)2640.i" = add nuw i64 %CurrSBIndex..2.i, 9600
  %"&pSB[currWI].offset2641.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2640.i"
  %CastToValueType2642.i = bitcast i8* %"&pSB[currWI].offset2641.i" to <16 x double>*
  store <16 x double> %1280, <16 x double>* %CastToValueType2642.i, align 128
  %ptrTypeCast425.i = bitcast double addrspace(1)* %1277 to <16 x double> addrspace(1)*
  %1281 = load <16 x double> addrspace(1)* %ptrTypeCast425.i, align 8
  %"&(pSB[currWI].offset)2724.i" = add nuw i64 %CurrSBIndex..2.i, 9728
  %"&pSB[currWI].offset2725.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2724.i"
  %CastToValueType2726.i = bitcast i8* %"&pSB[currWI].offset2725.i" to <16 x double>*
  store <16 x double> %1281, <16 x double>* %CastToValueType2726.i, align 128
  %ptrTypeCast426.i = bitcast double addrspace(1)* %1258 to <16 x double> addrspace(1)*
  %1282 = load <16 x double> addrspace(1)* %ptrTypeCast426.i, align 8
  %extract427.i = extractelement <16 x double> %1282, i32 0
  %extract428.i = extractelement <16 x double> %1282, i32 1
  %extract429.i = extractelement <16 x double> %1282, i32 2
  %extract430.i = extractelement <16 x double> %1282, i32 3
  %extract431.i = extractelement <16 x double> %1282, i32 4
  %extract432.i = extractelement <16 x double> %1282, i32 5
  %extract433.i = extractelement <16 x double> %1282, i32 6
  %extract434.i = extractelement <16 x double> %1282, i32 7
  %extract435.i = extractelement <16 x double> %1282, i32 8
  %extract436.i = extractelement <16 x double> %1282, i32 9
  %extract437.i = extractelement <16 x double> %1282, i32 10
  %extract438.i = extractelement <16 x double> %1282, i32 11
  %extract439.i = extractelement <16 x double> %1282, i32 12
  %extract440.i = extractelement <16 x double> %1282, i32 13
  %extract441.i = extractelement <16 x double> %1282, i32 14
  %extract442.i = extractelement <16 x double> %1282, i32 15
  %"&(pSB[currWI].offset)1585.i" = add nuw i64 %CurrSBIndex..2.i, 6016
  %"&pSB[currWI].offset1586.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1585.i"
  %CastToValueType1587.i = bitcast i8* %"&pSB[currWI].offset1586.i" to double addrspace(3)**
  %loadedValue1588.i = load double addrspace(3)** %CastToValueType1587.i, align 8
  store double %extract427.i, double addrspace(3)* %loadedValue1588.i, align 8
  %"&(pSB[currWI].offset)1594.i" = add nuw i64 %CurrSBIndex..2.i, 6024
  %"&pSB[currWI].offset1595.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1594.i"
  %CastToValueType1596.i = bitcast i8* %"&pSB[currWI].offset1595.i" to double addrspace(3)**
  %loadedValue1597.i = load double addrspace(3)** %CastToValueType1596.i, align 8
  store double %extract428.i, double addrspace(3)* %loadedValue1597.i, align 8
  %"&(pSB[currWI].offset)1603.i" = add nuw i64 %CurrSBIndex..2.i, 6032
  %"&pSB[currWI].offset1604.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1603.i"
  %CastToValueType1605.i = bitcast i8* %"&pSB[currWI].offset1604.i" to double addrspace(3)**
  %loadedValue1606.i = load double addrspace(3)** %CastToValueType1605.i, align 8
  store double %extract429.i, double addrspace(3)* %loadedValue1606.i, align 8
  %"&(pSB[currWI].offset)1612.i" = add nuw i64 %CurrSBIndex..2.i, 6040
  %"&pSB[currWI].offset1613.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1612.i"
  %CastToValueType1614.i = bitcast i8* %"&pSB[currWI].offset1613.i" to double addrspace(3)**
  %loadedValue1615.i = load double addrspace(3)** %CastToValueType1614.i, align 8
  store double %extract430.i, double addrspace(3)* %loadedValue1615.i, align 8
  %"&(pSB[currWI].offset)1621.i" = add nuw i64 %CurrSBIndex..2.i, 6048
  %"&pSB[currWI].offset1622.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1621.i"
  %CastToValueType1623.i = bitcast i8* %"&pSB[currWI].offset1622.i" to double addrspace(3)**
  %loadedValue1624.i = load double addrspace(3)** %CastToValueType1623.i, align 8
  store double %extract431.i, double addrspace(3)* %loadedValue1624.i, align 8
  %"&(pSB[currWI].offset)1630.i" = add nuw i64 %CurrSBIndex..2.i, 6056
  %"&pSB[currWI].offset1631.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1630.i"
  %CastToValueType1632.i = bitcast i8* %"&pSB[currWI].offset1631.i" to double addrspace(3)**
  %loadedValue1633.i = load double addrspace(3)** %CastToValueType1632.i, align 8
  store double %extract432.i, double addrspace(3)* %loadedValue1633.i, align 8
  %"&(pSB[currWI].offset)1639.i" = add nuw i64 %CurrSBIndex..2.i, 6064
  %"&pSB[currWI].offset1640.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1639.i"
  %CastToValueType1641.i = bitcast i8* %"&pSB[currWI].offset1640.i" to double addrspace(3)**
  %loadedValue1642.i = load double addrspace(3)** %CastToValueType1641.i, align 8
  store double %extract433.i, double addrspace(3)* %loadedValue1642.i, align 8
  %"&(pSB[currWI].offset)1648.i" = add nuw i64 %CurrSBIndex..2.i, 6072
  %"&pSB[currWI].offset1649.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1648.i"
  %CastToValueType1650.i = bitcast i8* %"&pSB[currWI].offset1649.i" to double addrspace(3)**
  %loadedValue1651.i = load double addrspace(3)** %CastToValueType1650.i, align 8
  store double %extract434.i, double addrspace(3)* %loadedValue1651.i, align 8
  %"&(pSB[currWI].offset)1657.i" = add nuw i64 %CurrSBIndex..2.i, 6080
  %"&pSB[currWI].offset1658.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1657.i"
  %CastToValueType1659.i = bitcast i8* %"&pSB[currWI].offset1658.i" to double addrspace(3)**
  %loadedValue1660.i = load double addrspace(3)** %CastToValueType1659.i, align 8
  store double %extract435.i, double addrspace(3)* %loadedValue1660.i, align 8
  %"&(pSB[currWI].offset)1666.i" = add nuw i64 %CurrSBIndex..2.i, 6088
  %"&pSB[currWI].offset1667.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1666.i"
  %CastToValueType1668.i = bitcast i8* %"&pSB[currWI].offset1667.i" to double addrspace(3)**
  %loadedValue1669.i = load double addrspace(3)** %CastToValueType1668.i, align 8
  store double %extract436.i, double addrspace(3)* %loadedValue1669.i, align 8
  %"&(pSB[currWI].offset)1675.i" = add nuw i64 %CurrSBIndex..2.i, 6096
  %"&pSB[currWI].offset1676.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1675.i"
  %CastToValueType1677.i = bitcast i8* %"&pSB[currWI].offset1676.i" to double addrspace(3)**
  %loadedValue1678.i = load double addrspace(3)** %CastToValueType1677.i, align 8
  store double %extract437.i, double addrspace(3)* %loadedValue1678.i, align 8
  %"&(pSB[currWI].offset)1684.i" = add nuw i64 %CurrSBIndex..2.i, 6104
  %"&pSB[currWI].offset1685.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1684.i"
  %CastToValueType1686.i = bitcast i8* %"&pSB[currWI].offset1685.i" to double addrspace(3)**
  %loadedValue1687.i = load double addrspace(3)** %CastToValueType1686.i, align 8
  store double %extract438.i, double addrspace(3)* %loadedValue1687.i, align 8
  %"&(pSB[currWI].offset)1693.i" = add nuw i64 %CurrSBIndex..2.i, 6112
  %"&pSB[currWI].offset1694.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1693.i"
  %CastToValueType1695.i = bitcast i8* %"&pSB[currWI].offset1694.i" to double addrspace(3)**
  %loadedValue1696.i = load double addrspace(3)** %CastToValueType1695.i, align 8
  store double %extract439.i, double addrspace(3)* %loadedValue1696.i, align 8
  %"&(pSB[currWI].offset)1702.i" = add nuw i64 %CurrSBIndex..2.i, 6120
  %"&pSB[currWI].offset1703.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1702.i"
  %CastToValueType1704.i = bitcast i8* %"&pSB[currWI].offset1703.i" to double addrspace(3)**
  %loadedValue1705.i = load double addrspace(3)** %CastToValueType1704.i, align 8
  store double %extract440.i, double addrspace(3)* %loadedValue1705.i, align 8
  %"&(pSB[currWI].offset)1711.i" = add nuw i64 %CurrSBIndex..2.i, 6128
  %"&pSB[currWI].offset1712.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1711.i"
  %CastToValueType1713.i = bitcast i8* %"&pSB[currWI].offset1712.i" to double addrspace(3)**
  %loadedValue1714.i = load double addrspace(3)** %CastToValueType1713.i, align 8
  store double %extract441.i, double addrspace(3)* %loadedValue1714.i, align 8
  %"&(pSB[currWI].offset)1720.i" = add nuw i64 %CurrSBIndex..2.i, 6136
  %"&pSB[currWI].offset1721.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1720.i"
  %CastToValueType1722.i = bitcast i8* %"&pSB[currWI].offset1721.i" to double addrspace(3)**
  %loadedValue1723.i = load double addrspace(3)** %CastToValueType1722.i, align 8
  store double %extract442.i, double addrspace(3)* %loadedValue1723.i, align 8
  %ptrTypeCast443.i = bitcast double addrspace(1)* %1261 to <16 x double> addrspace(1)*
  %1283 = load <16 x double> addrspace(1)* %ptrTypeCast443.i, align 8
  %extract444.i = extractelement <16 x double> %1283, i32 0
  %extract445.i = extractelement <16 x double> %1283, i32 1
  %extract446.i = extractelement <16 x double> %1283, i32 2
  %extract447.i = extractelement <16 x double> %1283, i32 3
  %extract448.i = extractelement <16 x double> %1283, i32 4
  %extract449.i = extractelement <16 x double> %1283, i32 5
  %extract450.i = extractelement <16 x double> %1283, i32 6
  %extract451.i = extractelement <16 x double> %1283, i32 7
  %extract452.i = extractelement <16 x double> %1283, i32 8
  %extract453.i = extractelement <16 x double> %1283, i32 9
  %extract454.i = extractelement <16 x double> %1283, i32 10
  %extract455.i = extractelement <16 x double> %1283, i32 11
  %extract456.i = extractelement <16 x double> %1283, i32 12
  %extract457.i = extractelement <16 x double> %1283, i32 13
  %extract458.i = extractelement <16 x double> %1283, i32 14
  %extract459.i = extractelement <16 x double> %1283, i32 15
  %"&(pSB[currWI].offset)1729.i" = add nuw i64 %CurrSBIndex..2.i, 6144
  %"&pSB[currWI].offset1730.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1729.i"
  %CastToValueType1731.i = bitcast i8* %"&pSB[currWI].offset1730.i" to double addrspace(3)**
  %loadedValue1732.i = load double addrspace(3)** %CastToValueType1731.i, align 8
  store double %extract444.i, double addrspace(3)* %loadedValue1732.i, align 8
  %"&(pSB[currWI].offset)1738.i" = add nuw i64 %CurrSBIndex..2.i, 6152
  %"&pSB[currWI].offset1739.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1738.i"
  %CastToValueType1740.i = bitcast i8* %"&pSB[currWI].offset1739.i" to double addrspace(3)**
  %loadedValue1741.i = load double addrspace(3)** %CastToValueType1740.i, align 8
  store double %extract445.i, double addrspace(3)* %loadedValue1741.i, align 8
  %"&(pSB[currWI].offset)1747.i" = add nuw i64 %CurrSBIndex..2.i, 6160
  %"&pSB[currWI].offset1748.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1747.i"
  %CastToValueType1749.i = bitcast i8* %"&pSB[currWI].offset1748.i" to double addrspace(3)**
  %loadedValue1750.i = load double addrspace(3)** %CastToValueType1749.i, align 8
  store double %extract446.i, double addrspace(3)* %loadedValue1750.i, align 8
  %"&(pSB[currWI].offset)1756.i" = add nuw i64 %CurrSBIndex..2.i, 6168
  %"&pSB[currWI].offset1757.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1756.i"
  %CastToValueType1758.i = bitcast i8* %"&pSB[currWI].offset1757.i" to double addrspace(3)**
  %loadedValue1759.i = load double addrspace(3)** %CastToValueType1758.i, align 8
  store double %extract447.i, double addrspace(3)* %loadedValue1759.i, align 8
  %"&(pSB[currWI].offset)1765.i" = add nuw i64 %CurrSBIndex..2.i, 6176
  %"&pSB[currWI].offset1766.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1765.i"
  %CastToValueType1767.i = bitcast i8* %"&pSB[currWI].offset1766.i" to double addrspace(3)**
  %loadedValue1768.i = load double addrspace(3)** %CastToValueType1767.i, align 8
  store double %extract448.i, double addrspace(3)* %loadedValue1768.i, align 8
  %"&(pSB[currWI].offset)1774.i" = add nuw i64 %CurrSBIndex..2.i, 6184
  %"&pSB[currWI].offset1775.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1774.i"
  %CastToValueType1776.i = bitcast i8* %"&pSB[currWI].offset1775.i" to double addrspace(3)**
  %loadedValue1777.i = load double addrspace(3)** %CastToValueType1776.i, align 8
  store double %extract449.i, double addrspace(3)* %loadedValue1777.i, align 8
  %"&(pSB[currWI].offset)1783.i" = add nuw i64 %CurrSBIndex..2.i, 6192
  %"&pSB[currWI].offset1784.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1783.i"
  %CastToValueType1785.i = bitcast i8* %"&pSB[currWI].offset1784.i" to double addrspace(3)**
  %loadedValue1786.i = load double addrspace(3)** %CastToValueType1785.i, align 8
  store double %extract450.i, double addrspace(3)* %loadedValue1786.i, align 8
  %"&(pSB[currWI].offset)1792.i" = add nuw i64 %CurrSBIndex..2.i, 6200
  %"&pSB[currWI].offset1793.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1792.i"
  %CastToValueType1794.i = bitcast i8* %"&pSB[currWI].offset1793.i" to double addrspace(3)**
  %loadedValue1795.i = load double addrspace(3)** %CastToValueType1794.i, align 8
  store double %extract451.i, double addrspace(3)* %loadedValue1795.i, align 8
  %"&(pSB[currWI].offset)1801.i" = add nuw i64 %CurrSBIndex..2.i, 6208
  %"&pSB[currWI].offset1802.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1801.i"
  %CastToValueType1803.i = bitcast i8* %"&pSB[currWI].offset1802.i" to double addrspace(3)**
  %loadedValue1804.i = load double addrspace(3)** %CastToValueType1803.i, align 8
  store double %extract452.i, double addrspace(3)* %loadedValue1804.i, align 8
  %"&(pSB[currWI].offset)1810.i" = add nuw i64 %CurrSBIndex..2.i, 6216
  %"&pSB[currWI].offset1811.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1810.i"
  %CastToValueType1812.i = bitcast i8* %"&pSB[currWI].offset1811.i" to double addrspace(3)**
  %loadedValue1813.i = load double addrspace(3)** %CastToValueType1812.i, align 8
  store double %extract453.i, double addrspace(3)* %loadedValue1813.i, align 8
  %"&(pSB[currWI].offset)1819.i" = add nuw i64 %CurrSBIndex..2.i, 6224
  %"&pSB[currWI].offset1820.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1819.i"
  %CastToValueType1821.i = bitcast i8* %"&pSB[currWI].offset1820.i" to double addrspace(3)**
  %loadedValue1822.i = load double addrspace(3)** %CastToValueType1821.i, align 8
  store double %extract454.i, double addrspace(3)* %loadedValue1822.i, align 8
  %"&(pSB[currWI].offset)1828.i" = add nuw i64 %CurrSBIndex..2.i, 6232
  %"&pSB[currWI].offset1829.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1828.i"
  %CastToValueType1830.i = bitcast i8* %"&pSB[currWI].offset1829.i" to double addrspace(3)**
  %loadedValue1831.i = load double addrspace(3)** %CastToValueType1830.i, align 8
  store double %extract455.i, double addrspace(3)* %loadedValue1831.i, align 8
  %"&(pSB[currWI].offset)1837.i" = add nuw i64 %CurrSBIndex..2.i, 6240
  %"&pSB[currWI].offset1838.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1837.i"
  %CastToValueType1839.i = bitcast i8* %"&pSB[currWI].offset1838.i" to double addrspace(3)**
  %loadedValue1840.i = load double addrspace(3)** %CastToValueType1839.i, align 8
  store double %extract456.i, double addrspace(3)* %loadedValue1840.i, align 8
  %"&(pSB[currWI].offset)1846.i" = add nuw i64 %CurrSBIndex..2.i, 6248
  %"&pSB[currWI].offset1847.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1846.i"
  %CastToValueType1848.i = bitcast i8* %"&pSB[currWI].offset1847.i" to double addrspace(3)**
  %loadedValue1849.i = load double addrspace(3)** %CastToValueType1848.i, align 8
  store double %extract457.i, double addrspace(3)* %loadedValue1849.i, align 8
  %"&(pSB[currWI].offset)1855.i" = add nuw i64 %CurrSBIndex..2.i, 6256
  %"&pSB[currWI].offset1856.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1855.i"
  %CastToValueType1857.i = bitcast i8* %"&pSB[currWI].offset1856.i" to double addrspace(3)**
  %loadedValue1858.i = load double addrspace(3)** %CastToValueType1857.i, align 8
  store double %extract458.i, double addrspace(3)* %loadedValue1858.i, align 8
  %"&(pSB[currWI].offset)1864.i" = add nuw i64 %CurrSBIndex..2.i, 6264
  %"&pSB[currWI].offset1865.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1864.i"
  %CastToValueType1866.i = bitcast i8* %"&pSB[currWI].offset1865.i" to double addrspace(3)**
  %loadedValue1867.i = load double addrspace(3)** %CastToValueType1866.i, align 8
  store double %extract459.i, double addrspace(3)* %loadedValue1867.i, align 8
  %ptrTypeCast460.i = bitcast double addrspace(1)* %1260 to <16 x double> addrspace(1)*
  %1284 = load <16 x double> addrspace(1)* %ptrTypeCast460.i, align 8
  %extract461.i = extractelement <16 x double> %1284, i32 0
  %extract462.i = extractelement <16 x double> %1284, i32 1
  %extract463.i = extractelement <16 x double> %1284, i32 2
  %extract464.i = extractelement <16 x double> %1284, i32 3
  %extract465.i = extractelement <16 x double> %1284, i32 4
  %extract466.i = extractelement <16 x double> %1284, i32 5
  %extract467.i = extractelement <16 x double> %1284, i32 6
  %extract468.i = extractelement <16 x double> %1284, i32 7
  %extract469.i = extractelement <16 x double> %1284, i32 8
  %extract470.i = extractelement <16 x double> %1284, i32 9
  %extract471.i = extractelement <16 x double> %1284, i32 10
  %extract472.i = extractelement <16 x double> %1284, i32 11
  %extract473.i = extractelement <16 x double> %1284, i32 12
  %extract474.i = extractelement <16 x double> %1284, i32 13
  %extract475.i = extractelement <16 x double> %1284, i32 14
  %extract476.i = extractelement <16 x double> %1284, i32 15
  %"&(pSB[currWI].offset)1873.i" = add nuw i64 %CurrSBIndex..2.i, 6272
  %"&pSB[currWI].offset1874.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1873.i"
  %CastToValueType1875.i = bitcast i8* %"&pSB[currWI].offset1874.i" to double addrspace(3)**
  %loadedValue1876.i = load double addrspace(3)** %CastToValueType1875.i, align 8
  store double %extract461.i, double addrspace(3)* %loadedValue1876.i, align 8
  %"&(pSB[currWI].offset)1882.i" = add nuw i64 %CurrSBIndex..2.i, 6280
  %"&pSB[currWI].offset1883.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1882.i"
  %CastToValueType1884.i = bitcast i8* %"&pSB[currWI].offset1883.i" to double addrspace(3)**
  %loadedValue1885.i = load double addrspace(3)** %CastToValueType1884.i, align 8
  store double %extract462.i, double addrspace(3)* %loadedValue1885.i, align 8
  %"&(pSB[currWI].offset)1891.i" = add nuw i64 %CurrSBIndex..2.i, 6288
  %"&pSB[currWI].offset1892.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1891.i"
  %CastToValueType1893.i = bitcast i8* %"&pSB[currWI].offset1892.i" to double addrspace(3)**
  %loadedValue1894.i = load double addrspace(3)** %CastToValueType1893.i, align 8
  store double %extract463.i, double addrspace(3)* %loadedValue1894.i, align 8
  %"&(pSB[currWI].offset)1900.i" = add nuw i64 %CurrSBIndex..2.i, 6296
  %"&pSB[currWI].offset1901.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1900.i"
  %CastToValueType1902.i = bitcast i8* %"&pSB[currWI].offset1901.i" to double addrspace(3)**
  %loadedValue1903.i = load double addrspace(3)** %CastToValueType1902.i, align 8
  store double %extract464.i, double addrspace(3)* %loadedValue1903.i, align 8
  %"&(pSB[currWI].offset)1909.i" = add nuw i64 %CurrSBIndex..2.i, 6304
  %"&pSB[currWI].offset1910.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1909.i"
  %CastToValueType1911.i = bitcast i8* %"&pSB[currWI].offset1910.i" to double addrspace(3)**
  %loadedValue1912.i = load double addrspace(3)** %CastToValueType1911.i, align 8
  store double %extract465.i, double addrspace(3)* %loadedValue1912.i, align 8
  %"&(pSB[currWI].offset)1918.i" = add nuw i64 %CurrSBIndex..2.i, 6312
  %"&pSB[currWI].offset1919.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1918.i"
  %CastToValueType1920.i = bitcast i8* %"&pSB[currWI].offset1919.i" to double addrspace(3)**
  %loadedValue1921.i = load double addrspace(3)** %CastToValueType1920.i, align 8
  store double %extract466.i, double addrspace(3)* %loadedValue1921.i, align 8
  %"&(pSB[currWI].offset)1927.i" = add nuw i64 %CurrSBIndex..2.i, 6320
  %"&pSB[currWI].offset1928.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1927.i"
  %CastToValueType1929.i = bitcast i8* %"&pSB[currWI].offset1928.i" to double addrspace(3)**
  %loadedValue1930.i = load double addrspace(3)** %CastToValueType1929.i, align 8
  store double %extract467.i, double addrspace(3)* %loadedValue1930.i, align 8
  %"&(pSB[currWI].offset)1936.i" = add nuw i64 %CurrSBIndex..2.i, 6328
  %"&pSB[currWI].offset1937.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1936.i"
  %CastToValueType1938.i = bitcast i8* %"&pSB[currWI].offset1937.i" to double addrspace(3)**
  %loadedValue1939.i = load double addrspace(3)** %CastToValueType1938.i, align 8
  store double %extract468.i, double addrspace(3)* %loadedValue1939.i, align 8
  %"&(pSB[currWI].offset)1945.i" = add nuw i64 %CurrSBIndex..2.i, 6336
  %"&pSB[currWI].offset1946.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1945.i"
  %CastToValueType1947.i = bitcast i8* %"&pSB[currWI].offset1946.i" to double addrspace(3)**
  %loadedValue1948.i = load double addrspace(3)** %CastToValueType1947.i, align 8
  store double %extract469.i, double addrspace(3)* %loadedValue1948.i, align 8
  %"&(pSB[currWI].offset)1954.i" = add nuw i64 %CurrSBIndex..2.i, 6344
  %"&pSB[currWI].offset1955.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1954.i"
  %CastToValueType1956.i = bitcast i8* %"&pSB[currWI].offset1955.i" to double addrspace(3)**
  %loadedValue1957.i = load double addrspace(3)** %CastToValueType1956.i, align 8
  store double %extract470.i, double addrspace(3)* %loadedValue1957.i, align 8
  %"&(pSB[currWI].offset)1963.i" = add nuw i64 %CurrSBIndex..2.i, 6352
  %"&pSB[currWI].offset1964.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1963.i"
  %CastToValueType1965.i = bitcast i8* %"&pSB[currWI].offset1964.i" to double addrspace(3)**
  %loadedValue1966.i = load double addrspace(3)** %CastToValueType1965.i, align 8
  store double %extract471.i, double addrspace(3)* %loadedValue1966.i, align 8
  %"&(pSB[currWI].offset)1972.i" = add nuw i64 %CurrSBIndex..2.i, 6360
  %"&pSB[currWI].offset1973.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1972.i"
  %CastToValueType1974.i = bitcast i8* %"&pSB[currWI].offset1973.i" to double addrspace(3)**
  %loadedValue1975.i = load double addrspace(3)** %CastToValueType1974.i, align 8
  store double %extract472.i, double addrspace(3)* %loadedValue1975.i, align 8
  %"&(pSB[currWI].offset)1981.i" = add nuw i64 %CurrSBIndex..2.i, 6368
  %"&pSB[currWI].offset1982.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1981.i"
  %CastToValueType1983.i = bitcast i8* %"&pSB[currWI].offset1982.i" to double addrspace(3)**
  %loadedValue1984.i = load double addrspace(3)** %CastToValueType1983.i, align 8
  store double %extract473.i, double addrspace(3)* %loadedValue1984.i, align 8
  %"&(pSB[currWI].offset)1990.i" = add nuw i64 %CurrSBIndex..2.i, 6376
  %"&pSB[currWI].offset1991.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1990.i"
  %CastToValueType1992.i = bitcast i8* %"&pSB[currWI].offset1991.i" to double addrspace(3)**
  %loadedValue1993.i = load double addrspace(3)** %CastToValueType1992.i, align 8
  store double %extract474.i, double addrspace(3)* %loadedValue1993.i, align 8
  %"&(pSB[currWI].offset)1999.i" = add nuw i64 %CurrSBIndex..2.i, 6384
  %"&pSB[currWI].offset2000.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1999.i"
  %CastToValueType2001.i = bitcast i8* %"&pSB[currWI].offset2000.i" to double addrspace(3)**
  %loadedValue2002.i = load double addrspace(3)** %CastToValueType2001.i, align 8
  store double %extract475.i, double addrspace(3)* %loadedValue2002.i, align 8
  %"&(pSB[currWI].offset)2008.i" = add nuw i64 %CurrSBIndex..2.i, 6392
  %"&pSB[currWI].offset2009.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2008.i"
  %CastToValueType2010.i = bitcast i8* %"&pSB[currWI].offset2009.i" to double addrspace(3)**
  %loadedValue2011.i = load double addrspace(3)** %CastToValueType2010.i, align 8
  store double %extract476.i, double addrspace(3)* %loadedValue2011.i, align 8
  %ptrTypeCast477.i = bitcast double addrspace(1)* %1259 to <16 x double> addrspace(1)*
  %1285 = load <16 x double> addrspace(1)* %ptrTypeCast477.i, align 8
  %extract478.i = extractelement <16 x double> %1285, i32 0
  %extract479.i = extractelement <16 x double> %1285, i32 1
  %extract480.i = extractelement <16 x double> %1285, i32 2
  %extract481.i = extractelement <16 x double> %1285, i32 3
  %extract482.i = extractelement <16 x double> %1285, i32 4
  %extract483.i = extractelement <16 x double> %1285, i32 5
  %extract484.i = extractelement <16 x double> %1285, i32 6
  %extract485.i = extractelement <16 x double> %1285, i32 7
  %extract486.i = extractelement <16 x double> %1285, i32 8
  %extract487.i = extractelement <16 x double> %1285, i32 9
  %extract488.i = extractelement <16 x double> %1285, i32 10
  %extract489.i = extractelement <16 x double> %1285, i32 11
  %extract490.i = extractelement <16 x double> %1285, i32 12
  %extract491.i = extractelement <16 x double> %1285, i32 13
  %extract492.i = extractelement <16 x double> %1285, i32 14
  %extract493.i = extractelement <16 x double> %1285, i32 15
  %"&(pSB[currWI].offset)2017.i" = add nuw i64 %CurrSBIndex..2.i, 6400
  %"&pSB[currWI].offset2018.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2017.i"
  %CastToValueType2019.i = bitcast i8* %"&pSB[currWI].offset2018.i" to double addrspace(3)**
  %loadedValue2020.i = load double addrspace(3)** %CastToValueType2019.i, align 8
  store double %extract478.i, double addrspace(3)* %loadedValue2020.i, align 8
  %"&(pSB[currWI].offset)2026.i" = add nuw i64 %CurrSBIndex..2.i, 6408
  %"&pSB[currWI].offset2027.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2026.i"
  %CastToValueType2028.i = bitcast i8* %"&pSB[currWI].offset2027.i" to double addrspace(3)**
  %loadedValue2029.i = load double addrspace(3)** %CastToValueType2028.i, align 8
  store double %extract479.i, double addrspace(3)* %loadedValue2029.i, align 8
  %"&(pSB[currWI].offset)2035.i" = add nuw i64 %CurrSBIndex..2.i, 6416
  %"&pSB[currWI].offset2036.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2035.i"
  %CastToValueType2037.i = bitcast i8* %"&pSB[currWI].offset2036.i" to double addrspace(3)**
  %loadedValue2038.i = load double addrspace(3)** %CastToValueType2037.i, align 8
  store double %extract480.i, double addrspace(3)* %loadedValue2038.i, align 8
  %"&(pSB[currWI].offset)2044.i" = add nuw i64 %CurrSBIndex..2.i, 6424
  %"&pSB[currWI].offset2045.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2044.i"
  %CastToValueType2046.i = bitcast i8* %"&pSB[currWI].offset2045.i" to double addrspace(3)**
  %loadedValue2047.i = load double addrspace(3)** %CastToValueType2046.i, align 8
  store double %extract481.i, double addrspace(3)* %loadedValue2047.i, align 8
  %"&(pSB[currWI].offset)2053.i" = add nuw i64 %CurrSBIndex..2.i, 6432
  %"&pSB[currWI].offset2054.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2053.i"
  %CastToValueType2055.i = bitcast i8* %"&pSB[currWI].offset2054.i" to double addrspace(3)**
  %loadedValue2056.i = load double addrspace(3)** %CastToValueType2055.i, align 8
  store double %extract482.i, double addrspace(3)* %loadedValue2056.i, align 8
  %"&(pSB[currWI].offset)2062.i" = add nuw i64 %CurrSBIndex..2.i, 6440
  %"&pSB[currWI].offset2063.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2062.i"
  %CastToValueType2064.i = bitcast i8* %"&pSB[currWI].offset2063.i" to double addrspace(3)**
  %loadedValue2065.i = load double addrspace(3)** %CastToValueType2064.i, align 8
  store double %extract483.i, double addrspace(3)* %loadedValue2065.i, align 8
  %"&(pSB[currWI].offset)2071.i" = add nuw i64 %CurrSBIndex..2.i, 6448
  %"&pSB[currWI].offset2072.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2071.i"
  %CastToValueType2073.i = bitcast i8* %"&pSB[currWI].offset2072.i" to double addrspace(3)**
  %loadedValue2074.i = load double addrspace(3)** %CastToValueType2073.i, align 8
  store double %extract484.i, double addrspace(3)* %loadedValue2074.i, align 8
  %"&(pSB[currWI].offset)2080.i" = add nuw i64 %CurrSBIndex..2.i, 6456
  %"&pSB[currWI].offset2081.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2080.i"
  %CastToValueType2082.i = bitcast i8* %"&pSB[currWI].offset2081.i" to double addrspace(3)**
  %loadedValue2083.i = load double addrspace(3)** %CastToValueType2082.i, align 8
  store double %extract485.i, double addrspace(3)* %loadedValue2083.i, align 8
  %"&(pSB[currWI].offset)2089.i" = add nuw i64 %CurrSBIndex..2.i, 6464
  %"&pSB[currWI].offset2090.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2089.i"
  %CastToValueType2091.i = bitcast i8* %"&pSB[currWI].offset2090.i" to double addrspace(3)**
  %loadedValue2092.i = load double addrspace(3)** %CastToValueType2091.i, align 8
  store double %extract486.i, double addrspace(3)* %loadedValue2092.i, align 8
  %"&(pSB[currWI].offset)2098.i" = add nuw i64 %CurrSBIndex..2.i, 6472
  %"&pSB[currWI].offset2099.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2098.i"
  %CastToValueType2100.i = bitcast i8* %"&pSB[currWI].offset2099.i" to double addrspace(3)**
  %loadedValue2101.i = load double addrspace(3)** %CastToValueType2100.i, align 8
  store double %extract487.i, double addrspace(3)* %loadedValue2101.i, align 8
  %"&(pSB[currWI].offset)2107.i" = add nuw i64 %CurrSBIndex..2.i, 6480
  %"&pSB[currWI].offset2108.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2107.i"
  %CastToValueType2109.i = bitcast i8* %"&pSB[currWI].offset2108.i" to double addrspace(3)**
  %loadedValue2110.i = load double addrspace(3)** %CastToValueType2109.i, align 8
  store double %extract488.i, double addrspace(3)* %loadedValue2110.i, align 8
  %"&(pSB[currWI].offset)2116.i" = add nuw i64 %CurrSBIndex..2.i, 6488
  %"&pSB[currWI].offset2117.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2116.i"
  %CastToValueType2118.i = bitcast i8* %"&pSB[currWI].offset2117.i" to double addrspace(3)**
  %loadedValue2119.i = load double addrspace(3)** %CastToValueType2118.i, align 8
  store double %extract489.i, double addrspace(3)* %loadedValue2119.i, align 8
  %"&(pSB[currWI].offset)2125.i" = add nuw i64 %CurrSBIndex..2.i, 6496
  %"&pSB[currWI].offset2126.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2125.i"
  %CastToValueType2127.i = bitcast i8* %"&pSB[currWI].offset2126.i" to double addrspace(3)**
  %loadedValue2128.i = load double addrspace(3)** %CastToValueType2127.i, align 8
  store double %extract490.i, double addrspace(3)* %loadedValue2128.i, align 8
  %"&(pSB[currWI].offset)2134.i" = add nuw i64 %CurrSBIndex..2.i, 6504
  %"&pSB[currWI].offset2135.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2134.i"
  %CastToValueType2136.i = bitcast i8* %"&pSB[currWI].offset2135.i" to double addrspace(3)**
  %loadedValue2137.i = load double addrspace(3)** %CastToValueType2136.i, align 8
  store double %extract491.i, double addrspace(3)* %loadedValue2137.i, align 8
  %"&(pSB[currWI].offset)2143.i" = add nuw i64 %CurrSBIndex..2.i, 6512
  %"&pSB[currWI].offset2144.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2143.i"
  %CastToValueType2145.i = bitcast i8* %"&pSB[currWI].offset2144.i" to double addrspace(3)**
  %loadedValue2146.i = load double addrspace(3)** %CastToValueType2145.i, align 8
  store double %extract492.i, double addrspace(3)* %loadedValue2146.i, align 8
  %"&(pSB[currWI].offset)2152.i" = add nuw i64 %CurrSBIndex..2.i, 6520
  %"&pSB[currWI].offset2153.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2152.i"
  %CastToValueType2154.i = bitcast i8* %"&pSB[currWI].offset2153.i" to double addrspace(3)**
  %loadedValue2155.i = load double addrspace(3)** %CastToValueType2154.i, align 8
  store double %extract493.i, double addrspace(3)* %loadedValue2155.i, align 8
  %check.WI.iter.i = icmp ult i64 %CurrWI..2.i, %37
  br i1 %check.WI.iter.i, label %thenBB.i, label %SyncBB.i

thenBB.i:                                         ; preds = %.loopexit.i
  %"CurrWI++.i" = add nuw i64 %CurrWI..2.i, 1
  %"loadedCurrSB+Stride.i" = add nuw i64 %CurrSBIndex..2.i, 12032
  %cond.i = icmp eq i32 %currBarrier.1.i, 16
  br i1 %cond.i, label %SyncBB4486.i, label %SyncBB4485.preheader.i

SyncBB.i:                                         ; preds = %thenBB4489.i, %.loopexit.i
  %CurrSBIndex..3.i = phi i64 [ %"loadedCurrSB+Stride4495.i", %thenBB4489.i ], [ 0, %.loopexit.i ]
  %CurrWI..3.i = phi i64 [ %"CurrWI++4493.i", %thenBB4489.i ], [ 0, %.loopexit.i ]
  %1286 = load double addrspace(3)* %42, align 16
  %temp494.i = insertelement <16 x double> undef, double %1286, i32 0
  %vector495.i = shufflevector <16 x double> %temp494.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2551.i" = add nuw i64 %CurrSBIndex..3.i, 9344
  %"&pSB[currWI].offset2552.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2551.i"
  %CastToValueType2553.i = bitcast i8* %"&pSB[currWI].offset2552.i" to <16 x double>*
  %loadedValue2554.i = load <16 x double>* %CastToValueType2553.i, align 128
  %1287 = fmul <16 x double> %loadedValue2554.i, %vector495.i
  %1288 = load double* %762, align 16
  %1289 = load double* %763, align 16
  %1290 = load double* %764, align 16
  %1291 = load double* %765, align 16
  %1292 = load double* %766, align 16
  %1293 = load double* %767, align 16
  %1294 = load double* %768, align 16
  %1295 = load double* %769, align 16
  %1296 = load double* %770, align 16
  %1297 = load double* %771, align 16
  %1298 = load double* %772, align 16
  %1299 = load double* %773, align 16
  %1300 = load double* %774, align 16
  %1301 = load double* %775, align 16
  %1302 = load double* %776, align 16
  %1303 = load double* %777, align 16
  %temp.vect.i = insertelement <16 x double> undef, double %1288, i32 0
  %temp.vect496.i = insertelement <16 x double> %temp.vect.i, double %1289, i32 1
  %temp.vect497.i = insertelement <16 x double> %temp.vect496.i, double %1290, i32 2
  %temp.vect498.i = insertelement <16 x double> %temp.vect497.i, double %1291, i32 3
  %temp.vect499.i = insertelement <16 x double> %temp.vect498.i, double %1292, i32 4
  %temp.vect500.i = insertelement <16 x double> %temp.vect499.i, double %1293, i32 5
  %temp.vect501.i = insertelement <16 x double> %temp.vect500.i, double %1294, i32 6
  %temp.vect502.i = insertelement <16 x double> %temp.vect501.i, double %1295, i32 7
  %temp.vect503.i = insertelement <16 x double> %temp.vect502.i, double %1296, i32 8
  %temp.vect504.i = insertelement <16 x double> %temp.vect503.i, double %1297, i32 9
  %temp.vect505.i = insertelement <16 x double> %temp.vect504.i, double %1298, i32 10
  %temp.vect506.i = insertelement <16 x double> %temp.vect505.i, double %1299, i32 11
  %temp.vect507.i = insertelement <16 x double> %temp.vect506.i, double %1300, i32 12
  %temp.vect508.i = insertelement <16 x double> %temp.vect507.i, double %1301, i32 13
  %temp.vect509.i = insertelement <16 x double> %temp.vect508.i, double %1302, i32 14
  %temp.vect510.i = insertelement <16 x double> %temp.vect509.i, double %1303, i32 15
  %1304 = fadd <16 x double> %temp.vect510.i, %1287
  %1305 = load double addrspace(3)* %44, align 8
  %temp511.i = insertelement <16 x double> undef, double %1305, i32 0
  %vector512.i = shufflevector <16 x double> %temp511.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2546.i" = add nuw i64 %CurrSBIndex..3.i, 9344
  %"&pSB[currWI].offset2547.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2546.i"
  %CastToValueType2548.i = bitcast i8* %"&pSB[currWI].offset2547.i" to <16 x double>*
  %loadedValue2549.i = load <16 x double>* %CastToValueType2548.i, align 128
  %1306 = fmul <16 x double> %loadedValue2549.i, %vector512.i
  %1307 = load double* %779, align 8
  %1308 = load double* %781, align 8
  %1309 = load double* %783, align 8
  %1310 = load double* %785, align 8
  %1311 = load double* %787, align 8
  %1312 = load double* %789, align 8
  %1313 = load double* %791, align 8
  %1314 = load double* %793, align 8
  %1315 = load double* %795, align 8
  %1316 = load double* %797, align 8
  %1317 = load double* %799, align 8
  %1318 = load double* %801, align 8
  %1319 = load double* %803, align 8
  %1320 = load double* %805, align 8
  %1321 = load double* %807, align 8
  %1322 = load double* %809, align 8
  %temp.vect513.i = insertelement <16 x double> undef, double %1307, i32 0
  %temp.vect514.i = insertelement <16 x double> %temp.vect513.i, double %1308, i32 1
  %temp.vect515.i = insertelement <16 x double> %temp.vect514.i, double %1309, i32 2
  %temp.vect516.i = insertelement <16 x double> %temp.vect515.i, double %1310, i32 3
  %temp.vect517.i = insertelement <16 x double> %temp.vect516.i, double %1311, i32 4
  %temp.vect518.i = insertelement <16 x double> %temp.vect517.i, double %1312, i32 5
  %temp.vect519.i = insertelement <16 x double> %temp.vect518.i, double %1313, i32 6
  %temp.vect520.i = insertelement <16 x double> %temp.vect519.i, double %1314, i32 7
  %temp.vect521.i = insertelement <16 x double> %temp.vect520.i, double %1315, i32 8
  %temp.vect522.i = insertelement <16 x double> %temp.vect521.i, double %1316, i32 9
  %temp.vect523.i = insertelement <16 x double> %temp.vect522.i, double %1317, i32 10
  %temp.vect524.i = insertelement <16 x double> %temp.vect523.i, double %1318, i32 11
  %temp.vect525.i = insertelement <16 x double> %temp.vect524.i, double %1319, i32 12
  %temp.vect526.i = insertelement <16 x double> %temp.vect525.i, double %1320, i32 13
  %temp.vect527.i = insertelement <16 x double> %temp.vect526.i, double %1321, i32 14
  %temp.vect528.i = insertelement <16 x double> %temp.vect527.i, double %1322, i32 15
  %1323 = fadd <16 x double> %temp.vect528.i, %1306
  %1324 = load double addrspace(3)* %46, align 16
  %temp529.i = insertelement <16 x double> undef, double %1324, i32 0
  %vector530.i = shufflevector <16 x double> %temp529.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2541.i" = add nuw i64 %CurrSBIndex..3.i, 9344
  %"&pSB[currWI].offset2542.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2541.i"
  %CastToValueType2543.i = bitcast i8* %"&pSB[currWI].offset2542.i" to <16 x double>*
  %loadedValue2544.i = load <16 x double>* %CastToValueType2543.i, align 128
  %1325 = fmul <16 x double> %loadedValue2544.i, %vector530.i
  %1326 = load double* %811, align 16
  %1327 = load double* %813, align 16
  %1328 = load double* %815, align 16
  %1329 = load double* %817, align 16
  %1330 = load double* %819, align 16
  %1331 = load double* %821, align 16
  %1332 = load double* %823, align 16
  %1333 = load double* %825, align 16
  %1334 = load double* %827, align 16
  %1335 = load double* %829, align 16
  %1336 = load double* %831, align 16
  %1337 = load double* %833, align 16
  %1338 = load double* %835, align 16
  %1339 = load double* %837, align 16
  %1340 = load double* %839, align 16
  %1341 = load double* %841, align 16
  %temp.vect531.i = insertelement <16 x double> undef, double %1326, i32 0
  %temp.vect532.i = insertelement <16 x double> %temp.vect531.i, double %1327, i32 1
  %temp.vect533.i = insertelement <16 x double> %temp.vect532.i, double %1328, i32 2
  %temp.vect534.i = insertelement <16 x double> %temp.vect533.i, double %1329, i32 3
  %temp.vect535.i = insertelement <16 x double> %temp.vect534.i, double %1330, i32 4
  %temp.vect536.i = insertelement <16 x double> %temp.vect535.i, double %1331, i32 5
  %temp.vect537.i = insertelement <16 x double> %temp.vect536.i, double %1332, i32 6
  %temp.vect538.i = insertelement <16 x double> %temp.vect537.i, double %1333, i32 7
  %temp.vect539.i = insertelement <16 x double> %temp.vect538.i, double %1334, i32 8
  %temp.vect540.i = insertelement <16 x double> %temp.vect539.i, double %1335, i32 9
  %temp.vect541.i = insertelement <16 x double> %temp.vect540.i, double %1336, i32 10
  %temp.vect542.i = insertelement <16 x double> %temp.vect541.i, double %1337, i32 11
  %temp.vect543.i = insertelement <16 x double> %temp.vect542.i, double %1338, i32 12
  %temp.vect544.i = insertelement <16 x double> %temp.vect543.i, double %1339, i32 13
  %temp.vect545.i = insertelement <16 x double> %temp.vect544.i, double %1340, i32 14
  %temp.vect546.i = insertelement <16 x double> %temp.vect545.i, double %1341, i32 15
  %1342 = fadd <16 x double> %temp.vect546.i, %1325
  %1343 = load double addrspace(3)* %48, align 8
  %temp547.i = insertelement <16 x double> undef, double %1343, i32 0
  %vector548.i = shufflevector <16 x double> %temp547.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2536.i" = add nuw i64 %CurrSBIndex..3.i, 9344
  %"&pSB[currWI].offset2537.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2536.i"
  %CastToValueType2538.i = bitcast i8* %"&pSB[currWI].offset2537.i" to <16 x double>*
  %loadedValue2539.i = load <16 x double>* %CastToValueType2538.i, align 128
  %1344 = fmul <16 x double> %loadedValue2539.i, %vector548.i
  %1345 = load double* %843, align 8
  %1346 = load double* %845, align 8
  %1347 = load double* %847, align 8
  %1348 = load double* %849, align 8
  %1349 = load double* %851, align 8
  %1350 = load double* %853, align 8
  %1351 = load double* %855, align 8
  %1352 = load double* %857, align 8
  %1353 = load double* %859, align 8
  %1354 = load double* %861, align 8
  %1355 = load double* %863, align 8
  %1356 = load double* %865, align 8
  %1357 = load double* %867, align 8
  %1358 = load double* %869, align 8
  %1359 = load double* %871, align 8
  %1360 = load double* %873, align 8
  %temp.vect549.i = insertelement <16 x double> undef, double %1345, i32 0
  %temp.vect550.i = insertelement <16 x double> %temp.vect549.i, double %1346, i32 1
  %temp.vect551.i = insertelement <16 x double> %temp.vect550.i, double %1347, i32 2
  %temp.vect552.i = insertelement <16 x double> %temp.vect551.i, double %1348, i32 3
  %temp.vect553.i = insertelement <16 x double> %temp.vect552.i, double %1349, i32 4
  %temp.vect554.i = insertelement <16 x double> %temp.vect553.i, double %1350, i32 5
  %temp.vect555.i = insertelement <16 x double> %temp.vect554.i, double %1351, i32 6
  %temp.vect556.i = insertelement <16 x double> %temp.vect555.i, double %1352, i32 7
  %temp.vect557.i = insertelement <16 x double> %temp.vect556.i, double %1353, i32 8
  %temp.vect558.i = insertelement <16 x double> %temp.vect557.i, double %1354, i32 9
  %temp.vect559.i = insertelement <16 x double> %temp.vect558.i, double %1355, i32 10
  %temp.vect560.i = insertelement <16 x double> %temp.vect559.i, double %1356, i32 11
  %temp.vect561.i = insertelement <16 x double> %temp.vect560.i, double %1357, i32 12
  %temp.vect562.i = insertelement <16 x double> %temp.vect561.i, double %1358, i32 13
  %temp.vect563.i = insertelement <16 x double> %temp.vect562.i, double %1359, i32 14
  %temp.vect564.i = insertelement <16 x double> %temp.vect563.i, double %1360, i32 15
  %1361 = fadd <16 x double> %temp.vect564.i, %1344
  %1362 = load double addrspace(3)* %50, align 16
  %temp565.i = insertelement <16 x double> undef, double %1362, i32 0
  %vector566.i = shufflevector <16 x double> %temp565.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2531.i" = add nuw i64 %CurrSBIndex..3.i, 9344
  %"&pSB[currWI].offset2532.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2531.i"
  %CastToValueType2533.i = bitcast i8* %"&pSB[currWI].offset2532.i" to <16 x double>*
  %loadedValue2534.i = load <16 x double>* %CastToValueType2533.i, align 128
  %1363 = fmul <16 x double> %loadedValue2534.i, %vector566.i
  %1364 = load double* %875, align 16
  %1365 = load double* %877, align 16
  %1366 = load double* %879, align 16
  %1367 = load double* %881, align 16
  %1368 = load double* %883, align 16
  %1369 = load double* %885, align 16
  %1370 = load double* %887, align 16
  %1371 = load double* %889, align 16
  %1372 = load double* %891, align 16
  %1373 = load double* %893, align 16
  %1374 = load double* %895, align 16
  %1375 = load double* %897, align 16
  %1376 = load double* %899, align 16
  %1377 = load double* %901, align 16
  %1378 = load double* %903, align 16
  %1379 = load double* %905, align 16
  %temp.vect567.i = insertelement <16 x double> undef, double %1364, i32 0
  %temp.vect568.i = insertelement <16 x double> %temp.vect567.i, double %1365, i32 1
  %temp.vect569.i = insertelement <16 x double> %temp.vect568.i, double %1366, i32 2
  %temp.vect570.i = insertelement <16 x double> %temp.vect569.i, double %1367, i32 3
  %temp.vect571.i = insertelement <16 x double> %temp.vect570.i, double %1368, i32 4
  %temp.vect572.i = insertelement <16 x double> %temp.vect571.i, double %1369, i32 5
  %temp.vect573.i = insertelement <16 x double> %temp.vect572.i, double %1370, i32 6
  %temp.vect574.i = insertelement <16 x double> %temp.vect573.i, double %1371, i32 7
  %temp.vect575.i = insertelement <16 x double> %temp.vect574.i, double %1372, i32 8
  %temp.vect576.i = insertelement <16 x double> %temp.vect575.i, double %1373, i32 9
  %temp.vect577.i = insertelement <16 x double> %temp.vect576.i, double %1374, i32 10
  %temp.vect578.i = insertelement <16 x double> %temp.vect577.i, double %1375, i32 11
  %temp.vect579.i = insertelement <16 x double> %temp.vect578.i, double %1376, i32 12
  %temp.vect580.i = insertelement <16 x double> %temp.vect579.i, double %1377, i32 13
  %temp.vect581.i = insertelement <16 x double> %temp.vect580.i, double %1378, i32 14
  %temp.vect582.i = insertelement <16 x double> %temp.vect581.i, double %1379, i32 15
  %1380 = fadd <16 x double> %temp.vect582.i, %1363
  %1381 = load double addrspace(3)* %52, align 8
  %temp583.i = insertelement <16 x double> undef, double %1381, i32 0
  %vector584.i = shufflevector <16 x double> %temp583.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2526.i" = add nuw i64 %CurrSBIndex..3.i, 9344
  %"&pSB[currWI].offset2527.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2526.i"
  %CastToValueType2528.i = bitcast i8* %"&pSB[currWI].offset2527.i" to <16 x double>*
  %loadedValue2529.i = load <16 x double>* %CastToValueType2528.i, align 128
  %1382 = fmul <16 x double> %loadedValue2529.i, %vector584.i
  %1383 = load double* %907, align 8
  %1384 = load double* %909, align 8
  %1385 = load double* %911, align 8
  %1386 = load double* %913, align 8
  %1387 = load double* %915, align 8
  %1388 = load double* %917, align 8
  %1389 = load double* %919, align 8
  %1390 = load double* %921, align 8
  %1391 = load double* %923, align 8
  %1392 = load double* %925, align 8
  %1393 = load double* %927, align 8
  %1394 = load double* %929, align 8
  %1395 = load double* %931, align 8
  %1396 = load double* %933, align 8
  %1397 = load double* %935, align 8
  %1398 = load double* %937, align 8
  %temp.vect585.i = insertelement <16 x double> undef, double %1383, i32 0
  %temp.vect586.i = insertelement <16 x double> %temp.vect585.i, double %1384, i32 1
  %temp.vect587.i = insertelement <16 x double> %temp.vect586.i, double %1385, i32 2
  %temp.vect588.i = insertelement <16 x double> %temp.vect587.i, double %1386, i32 3
  %temp.vect589.i = insertelement <16 x double> %temp.vect588.i, double %1387, i32 4
  %temp.vect590.i = insertelement <16 x double> %temp.vect589.i, double %1388, i32 5
  %temp.vect591.i = insertelement <16 x double> %temp.vect590.i, double %1389, i32 6
  %temp.vect592.i = insertelement <16 x double> %temp.vect591.i, double %1390, i32 7
  %temp.vect593.i = insertelement <16 x double> %temp.vect592.i, double %1391, i32 8
  %temp.vect594.i = insertelement <16 x double> %temp.vect593.i, double %1392, i32 9
  %temp.vect595.i = insertelement <16 x double> %temp.vect594.i, double %1393, i32 10
  %temp.vect596.i = insertelement <16 x double> %temp.vect595.i, double %1394, i32 11
  %temp.vect597.i = insertelement <16 x double> %temp.vect596.i, double %1395, i32 12
  %temp.vect598.i = insertelement <16 x double> %temp.vect597.i, double %1396, i32 13
  %temp.vect599.i = insertelement <16 x double> %temp.vect598.i, double %1397, i32 14
  %temp.vect600.i = insertelement <16 x double> %temp.vect599.i, double %1398, i32 15
  %1399 = fadd <16 x double> %temp.vect600.i, %1382
  %1400 = load double addrspace(3)* %54, align 16
  %temp601.i = insertelement <16 x double> undef, double %1400, i32 0
  %vector602.i = shufflevector <16 x double> %temp601.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2521.i" = add nuw i64 %CurrSBIndex..3.i, 9344
  %"&pSB[currWI].offset2522.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2521.i"
  %CastToValueType2523.i = bitcast i8* %"&pSB[currWI].offset2522.i" to <16 x double>*
  %loadedValue2524.i = load <16 x double>* %CastToValueType2523.i, align 128
  %1401 = fmul <16 x double> %loadedValue2524.i, %vector602.i
  %1402 = load double* %939, align 16
  %1403 = load double* %941, align 16
  %1404 = load double* %943, align 16
  %1405 = load double* %945, align 16
  %1406 = load double* %947, align 16
  %1407 = load double* %949, align 16
  %1408 = load double* %951, align 16
  %1409 = load double* %953, align 16
  %1410 = load double* %955, align 16
  %1411 = load double* %957, align 16
  %1412 = load double* %959, align 16
  %1413 = load double* %961, align 16
  %1414 = load double* %963, align 16
  %1415 = load double* %965, align 16
  %1416 = load double* %967, align 16
  %1417 = load double* %969, align 16
  %temp.vect603.i = insertelement <16 x double> undef, double %1402, i32 0
  %temp.vect604.i = insertelement <16 x double> %temp.vect603.i, double %1403, i32 1
  %temp.vect605.i = insertelement <16 x double> %temp.vect604.i, double %1404, i32 2
  %temp.vect606.i = insertelement <16 x double> %temp.vect605.i, double %1405, i32 3
  %temp.vect607.i = insertelement <16 x double> %temp.vect606.i, double %1406, i32 4
  %temp.vect608.i = insertelement <16 x double> %temp.vect607.i, double %1407, i32 5
  %temp.vect609.i = insertelement <16 x double> %temp.vect608.i, double %1408, i32 6
  %temp.vect610.i = insertelement <16 x double> %temp.vect609.i, double %1409, i32 7
  %temp.vect611.i = insertelement <16 x double> %temp.vect610.i, double %1410, i32 8
  %temp.vect612.i = insertelement <16 x double> %temp.vect611.i, double %1411, i32 9
  %temp.vect613.i = insertelement <16 x double> %temp.vect612.i, double %1412, i32 10
  %temp.vect614.i = insertelement <16 x double> %temp.vect613.i, double %1413, i32 11
  %temp.vect615.i = insertelement <16 x double> %temp.vect614.i, double %1414, i32 12
  %temp.vect616.i = insertelement <16 x double> %temp.vect615.i, double %1415, i32 13
  %temp.vect617.i = insertelement <16 x double> %temp.vect616.i, double %1416, i32 14
  %temp.vect618.i = insertelement <16 x double> %temp.vect617.i, double %1417, i32 15
  %1418 = fadd <16 x double> %temp.vect618.i, %1401
  %1419 = load double addrspace(3)* %56, align 8
  %temp619.i = insertelement <16 x double> undef, double %1419, i32 0
  %vector620.i = shufflevector <16 x double> %temp619.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2516.i" = add nuw i64 %CurrSBIndex..3.i, 9344
  %"&pSB[currWI].offset2517.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2516.i"
  %CastToValueType2518.i = bitcast i8* %"&pSB[currWI].offset2517.i" to <16 x double>*
  %loadedValue2519.i = load <16 x double>* %CastToValueType2518.i, align 128
  %1420 = fmul <16 x double> %loadedValue2519.i, %vector620.i
  %1421 = load double* %971, align 8
  %1422 = load double* %973, align 8
  %1423 = load double* %975, align 8
  %1424 = load double* %977, align 8
  %1425 = load double* %979, align 8
  %1426 = load double* %981, align 8
  %1427 = load double* %983, align 8
  %1428 = load double* %985, align 8
  %1429 = load double* %987, align 8
  %1430 = load double* %989, align 8
  %1431 = load double* %991, align 8
  %1432 = load double* %993, align 8
  %1433 = load double* %995, align 8
  %1434 = load double* %997, align 8
  %1435 = load double* %999, align 8
  %1436 = load double* %1001, align 8
  %temp.vect621.i = insertelement <16 x double> undef, double %1421, i32 0
  %temp.vect622.i = insertelement <16 x double> %temp.vect621.i, double %1422, i32 1
  %temp.vect623.i = insertelement <16 x double> %temp.vect622.i, double %1423, i32 2
  %temp.vect624.i = insertelement <16 x double> %temp.vect623.i, double %1424, i32 3
  %temp.vect625.i = insertelement <16 x double> %temp.vect624.i, double %1425, i32 4
  %temp.vect626.i = insertelement <16 x double> %temp.vect625.i, double %1426, i32 5
  %temp.vect627.i = insertelement <16 x double> %temp.vect626.i, double %1427, i32 6
  %temp.vect628.i = insertelement <16 x double> %temp.vect627.i, double %1428, i32 7
  %temp.vect629.i = insertelement <16 x double> %temp.vect628.i, double %1429, i32 8
  %temp.vect630.i = insertelement <16 x double> %temp.vect629.i, double %1430, i32 9
  %temp.vect631.i = insertelement <16 x double> %temp.vect630.i, double %1431, i32 10
  %temp.vect632.i = insertelement <16 x double> %temp.vect631.i, double %1432, i32 11
  %temp.vect633.i = insertelement <16 x double> %temp.vect632.i, double %1433, i32 12
  %temp.vect634.i = insertelement <16 x double> %temp.vect633.i, double %1434, i32 13
  %temp.vect635.i = insertelement <16 x double> %temp.vect634.i, double %1435, i32 14
  %temp.vect636.i = insertelement <16 x double> %temp.vect635.i, double %1436, i32 15
  %1437 = fadd <16 x double> %temp.vect636.i, %1420
  %1438 = load double addrspace(3)* %58, align 16
  %temp637.i = insertelement <16 x double> undef, double %1438, i32 0
  %vector638.i = shufflevector <16 x double> %temp637.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2511.i" = add nuw i64 %CurrSBIndex..3.i, 9344
  %"&pSB[currWI].offset2512.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2511.i"
  %CastToValueType2513.i = bitcast i8* %"&pSB[currWI].offset2512.i" to <16 x double>*
  %loadedValue2514.i = load <16 x double>* %CastToValueType2513.i, align 128
  %1439 = fmul <16 x double> %loadedValue2514.i, %vector638.i
  %1440 = load double* %1003, align 16
  %1441 = load double* %1005, align 16
  %1442 = load double* %1007, align 16
  %1443 = load double* %1009, align 16
  %1444 = load double* %1011, align 16
  %1445 = load double* %1013, align 16
  %1446 = load double* %1015, align 16
  %1447 = load double* %1017, align 16
  %1448 = load double* %1019, align 16
  %1449 = load double* %1021, align 16
  %1450 = load double* %1023, align 16
  %1451 = load double* %1025, align 16
  %1452 = load double* %1027, align 16
  %1453 = load double* %1029, align 16
  %1454 = load double* %1031, align 16
  %1455 = load double* %1033, align 16
  %temp.vect639.i = insertelement <16 x double> undef, double %1440, i32 0
  %temp.vect640.i = insertelement <16 x double> %temp.vect639.i, double %1441, i32 1
  %temp.vect641.i = insertelement <16 x double> %temp.vect640.i, double %1442, i32 2
  %temp.vect642.i = insertelement <16 x double> %temp.vect641.i, double %1443, i32 3
  %temp.vect643.i = insertelement <16 x double> %temp.vect642.i, double %1444, i32 4
  %temp.vect644.i = insertelement <16 x double> %temp.vect643.i, double %1445, i32 5
  %temp.vect645.i = insertelement <16 x double> %temp.vect644.i, double %1446, i32 6
  %temp.vect646.i = insertelement <16 x double> %temp.vect645.i, double %1447, i32 7
  %temp.vect647.i = insertelement <16 x double> %temp.vect646.i, double %1448, i32 8
  %temp.vect648.i = insertelement <16 x double> %temp.vect647.i, double %1449, i32 9
  %temp.vect649.i = insertelement <16 x double> %temp.vect648.i, double %1450, i32 10
  %temp.vect650.i = insertelement <16 x double> %temp.vect649.i, double %1451, i32 11
  %temp.vect651.i = insertelement <16 x double> %temp.vect650.i, double %1452, i32 12
  %temp.vect652.i = insertelement <16 x double> %temp.vect651.i, double %1453, i32 13
  %temp.vect653.i = insertelement <16 x double> %temp.vect652.i, double %1454, i32 14
  %temp.vect654.i = insertelement <16 x double> %temp.vect653.i, double %1455, i32 15
  %1456 = fadd <16 x double> %temp.vect654.i, %1439
  %1457 = load double addrspace(3)* %60, align 8
  %temp655.i = insertelement <16 x double> undef, double %1457, i32 0
  %vector656.i = shufflevector <16 x double> %temp655.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2506.i" = add nuw i64 %CurrSBIndex..3.i, 9344
  %"&pSB[currWI].offset2507.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2506.i"
  %CastToValueType2508.i = bitcast i8* %"&pSB[currWI].offset2507.i" to <16 x double>*
  %loadedValue2509.i = load <16 x double>* %CastToValueType2508.i, align 128
  %1458 = fmul <16 x double> %loadedValue2509.i, %vector656.i
  %1459 = load double* %1035, align 8
  %1460 = load double* %1037, align 8
  %1461 = load double* %1039, align 8
  %1462 = load double* %1041, align 8
  %1463 = load double* %1043, align 8
  %1464 = load double* %1045, align 8
  %1465 = load double* %1047, align 8
  %1466 = load double* %1049, align 8
  %1467 = load double* %1051, align 8
  %1468 = load double* %1053, align 8
  %1469 = load double* %1055, align 8
  %1470 = load double* %1057, align 8
  %1471 = load double* %1059, align 8
  %1472 = load double* %1061, align 8
  %1473 = load double* %1063, align 8
  %1474 = load double* %1065, align 8
  %temp.vect657.i = insertelement <16 x double> undef, double %1459, i32 0
  %temp.vect658.i = insertelement <16 x double> %temp.vect657.i, double %1460, i32 1
  %temp.vect659.i = insertelement <16 x double> %temp.vect658.i, double %1461, i32 2
  %temp.vect660.i = insertelement <16 x double> %temp.vect659.i, double %1462, i32 3
  %temp.vect661.i = insertelement <16 x double> %temp.vect660.i, double %1463, i32 4
  %temp.vect662.i = insertelement <16 x double> %temp.vect661.i, double %1464, i32 5
  %temp.vect663.i = insertelement <16 x double> %temp.vect662.i, double %1465, i32 6
  %temp.vect664.i = insertelement <16 x double> %temp.vect663.i, double %1466, i32 7
  %temp.vect665.i = insertelement <16 x double> %temp.vect664.i, double %1467, i32 8
  %temp.vect666.i = insertelement <16 x double> %temp.vect665.i, double %1468, i32 9
  %temp.vect667.i = insertelement <16 x double> %temp.vect666.i, double %1469, i32 10
  %temp.vect668.i = insertelement <16 x double> %temp.vect667.i, double %1470, i32 11
  %temp.vect669.i = insertelement <16 x double> %temp.vect668.i, double %1471, i32 12
  %temp.vect670.i = insertelement <16 x double> %temp.vect669.i, double %1472, i32 13
  %temp.vect671.i = insertelement <16 x double> %temp.vect670.i, double %1473, i32 14
  %temp.vect672.i = insertelement <16 x double> %temp.vect671.i, double %1474, i32 15
  %1475 = fadd <16 x double> %temp.vect672.i, %1458
  %1476 = load double addrspace(3)* %62, align 16
  %temp673.i = insertelement <16 x double> undef, double %1476, i32 0
  %vector674.i = shufflevector <16 x double> %temp673.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2501.i" = add nuw i64 %CurrSBIndex..3.i, 9344
  %"&pSB[currWI].offset2502.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2501.i"
  %CastToValueType2503.i = bitcast i8* %"&pSB[currWI].offset2502.i" to <16 x double>*
  %loadedValue2504.i = load <16 x double>* %CastToValueType2503.i, align 128
  %1477 = fmul <16 x double> %loadedValue2504.i, %vector674.i
  %1478 = load double* %1067, align 16
  %1479 = load double* %1069, align 16
  %1480 = load double* %1071, align 16
  %1481 = load double* %1073, align 16
  %1482 = load double* %1075, align 16
  %1483 = load double* %1077, align 16
  %1484 = load double* %1079, align 16
  %1485 = load double* %1081, align 16
  %1486 = load double* %1083, align 16
  %1487 = load double* %1085, align 16
  %1488 = load double* %1087, align 16
  %1489 = load double* %1089, align 16
  %1490 = load double* %1091, align 16
  %1491 = load double* %1093, align 16
  %1492 = load double* %1095, align 16
  %1493 = load double* %1097, align 16
  %temp.vect675.i = insertelement <16 x double> undef, double %1478, i32 0
  %temp.vect676.i = insertelement <16 x double> %temp.vect675.i, double %1479, i32 1
  %temp.vect677.i = insertelement <16 x double> %temp.vect676.i, double %1480, i32 2
  %temp.vect678.i = insertelement <16 x double> %temp.vect677.i, double %1481, i32 3
  %temp.vect679.i = insertelement <16 x double> %temp.vect678.i, double %1482, i32 4
  %temp.vect680.i = insertelement <16 x double> %temp.vect679.i, double %1483, i32 5
  %temp.vect681.i = insertelement <16 x double> %temp.vect680.i, double %1484, i32 6
  %temp.vect682.i = insertelement <16 x double> %temp.vect681.i, double %1485, i32 7
  %temp.vect683.i = insertelement <16 x double> %temp.vect682.i, double %1486, i32 8
  %temp.vect684.i = insertelement <16 x double> %temp.vect683.i, double %1487, i32 9
  %temp.vect685.i = insertelement <16 x double> %temp.vect684.i, double %1488, i32 10
  %temp.vect686.i = insertelement <16 x double> %temp.vect685.i, double %1489, i32 11
  %temp.vect687.i = insertelement <16 x double> %temp.vect686.i, double %1490, i32 12
  %temp.vect688.i = insertelement <16 x double> %temp.vect687.i, double %1491, i32 13
  %temp.vect689.i = insertelement <16 x double> %temp.vect688.i, double %1492, i32 14
  %temp.vect690.i = insertelement <16 x double> %temp.vect689.i, double %1493, i32 15
  %1494 = fadd <16 x double> %temp.vect690.i, %1477
  %1495 = load double addrspace(3)* %64, align 8
  %temp691.i = insertelement <16 x double> undef, double %1495, i32 0
  %vector692.i = shufflevector <16 x double> %temp691.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2496.i" = add nuw i64 %CurrSBIndex..3.i, 9344
  %"&pSB[currWI].offset2497.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2496.i"
  %CastToValueType2498.i = bitcast i8* %"&pSB[currWI].offset2497.i" to <16 x double>*
  %loadedValue2499.i = load <16 x double>* %CastToValueType2498.i, align 128
  %1496 = fmul <16 x double> %loadedValue2499.i, %vector692.i
  %1497 = load double* %1099, align 8
  %1498 = load double* %1101, align 8
  %1499 = load double* %1103, align 8
  %1500 = load double* %1105, align 8
  %1501 = load double* %1107, align 8
  %1502 = load double* %1109, align 8
  %1503 = load double* %1111, align 8
  %1504 = load double* %1113, align 8
  %1505 = load double* %1115, align 8
  %1506 = load double* %1117, align 8
  %1507 = load double* %1119, align 8
  %1508 = load double* %1121, align 8
  %1509 = load double* %1123, align 8
  %1510 = load double* %1125, align 8
  %1511 = load double* %1127, align 8
  %1512 = load double* %1129, align 8
  %temp.vect693.i = insertelement <16 x double> undef, double %1497, i32 0
  %temp.vect694.i = insertelement <16 x double> %temp.vect693.i, double %1498, i32 1
  %temp.vect695.i = insertelement <16 x double> %temp.vect694.i, double %1499, i32 2
  %temp.vect696.i = insertelement <16 x double> %temp.vect695.i, double %1500, i32 3
  %temp.vect697.i = insertelement <16 x double> %temp.vect696.i, double %1501, i32 4
  %temp.vect698.i = insertelement <16 x double> %temp.vect697.i, double %1502, i32 5
  %temp.vect699.i = insertelement <16 x double> %temp.vect698.i, double %1503, i32 6
  %temp.vect700.i = insertelement <16 x double> %temp.vect699.i, double %1504, i32 7
  %temp.vect701.i = insertelement <16 x double> %temp.vect700.i, double %1505, i32 8
  %temp.vect702.i = insertelement <16 x double> %temp.vect701.i, double %1506, i32 9
  %temp.vect703.i = insertelement <16 x double> %temp.vect702.i, double %1507, i32 10
  %temp.vect704.i = insertelement <16 x double> %temp.vect703.i, double %1508, i32 11
  %temp.vect705.i = insertelement <16 x double> %temp.vect704.i, double %1509, i32 12
  %temp.vect706.i = insertelement <16 x double> %temp.vect705.i, double %1510, i32 13
  %temp.vect707.i = insertelement <16 x double> %temp.vect706.i, double %1511, i32 14
  %temp.vect708.i = insertelement <16 x double> %temp.vect707.i, double %1512, i32 15
  %1513 = fadd <16 x double> %temp.vect708.i, %1496
  %1514 = load double addrspace(3)* %66, align 16
  %temp709.i = insertelement <16 x double> undef, double %1514, i32 0
  %vector710.i = shufflevector <16 x double> %temp709.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2491.i" = add nuw i64 %CurrSBIndex..3.i, 9344
  %"&pSB[currWI].offset2492.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2491.i"
  %CastToValueType2493.i = bitcast i8* %"&pSB[currWI].offset2492.i" to <16 x double>*
  %loadedValue2494.i = load <16 x double>* %CastToValueType2493.i, align 128
  %1515 = fmul <16 x double> %loadedValue2494.i, %vector710.i
  %1516 = load double* %1131, align 16
  %1517 = load double* %1133, align 16
  %1518 = load double* %1135, align 16
  %1519 = load double* %1137, align 16
  %1520 = load double* %1139, align 16
  %1521 = load double* %1141, align 16
  %1522 = load double* %1143, align 16
  %1523 = load double* %1145, align 16
  %1524 = load double* %1147, align 16
  %1525 = load double* %1149, align 16
  %1526 = load double* %1151, align 16
  %1527 = load double* %1153, align 16
  %1528 = load double* %1155, align 16
  %1529 = load double* %1157, align 16
  %1530 = load double* %1159, align 16
  %1531 = load double* %1161, align 16
  %temp.vect711.i = insertelement <16 x double> undef, double %1516, i32 0
  %temp.vect712.i = insertelement <16 x double> %temp.vect711.i, double %1517, i32 1
  %temp.vect713.i = insertelement <16 x double> %temp.vect712.i, double %1518, i32 2
  %temp.vect714.i = insertelement <16 x double> %temp.vect713.i, double %1519, i32 3
  %temp.vect715.i = insertelement <16 x double> %temp.vect714.i, double %1520, i32 4
  %temp.vect716.i = insertelement <16 x double> %temp.vect715.i, double %1521, i32 5
  %temp.vect717.i = insertelement <16 x double> %temp.vect716.i, double %1522, i32 6
  %temp.vect718.i = insertelement <16 x double> %temp.vect717.i, double %1523, i32 7
  %temp.vect719.i = insertelement <16 x double> %temp.vect718.i, double %1524, i32 8
  %temp.vect720.i = insertelement <16 x double> %temp.vect719.i, double %1525, i32 9
  %temp.vect721.i = insertelement <16 x double> %temp.vect720.i, double %1526, i32 10
  %temp.vect722.i = insertelement <16 x double> %temp.vect721.i, double %1527, i32 11
  %temp.vect723.i = insertelement <16 x double> %temp.vect722.i, double %1528, i32 12
  %temp.vect724.i = insertelement <16 x double> %temp.vect723.i, double %1529, i32 13
  %temp.vect725.i = insertelement <16 x double> %temp.vect724.i, double %1530, i32 14
  %temp.vect726.i = insertelement <16 x double> %temp.vect725.i, double %1531, i32 15
  %1532 = fadd <16 x double> %temp.vect726.i, %1515
  %1533 = load double addrspace(3)* %68, align 8
  %temp727.i = insertelement <16 x double> undef, double %1533, i32 0
  %vector728.i = shufflevector <16 x double> %temp727.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2486.i" = add nuw i64 %CurrSBIndex..3.i, 9344
  %"&pSB[currWI].offset2487.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2486.i"
  %CastToValueType2488.i = bitcast i8* %"&pSB[currWI].offset2487.i" to <16 x double>*
  %loadedValue2489.i = load <16 x double>* %CastToValueType2488.i, align 128
  %1534 = fmul <16 x double> %loadedValue2489.i, %vector728.i
  %1535 = load double* %1163, align 8
  %1536 = load double* %1165, align 8
  %1537 = load double* %1167, align 8
  %1538 = load double* %1169, align 8
  %1539 = load double* %1171, align 8
  %1540 = load double* %1173, align 8
  %1541 = load double* %1175, align 8
  %1542 = load double* %1177, align 8
  %1543 = load double* %1179, align 8
  %1544 = load double* %1181, align 8
  %1545 = load double* %1183, align 8
  %1546 = load double* %1185, align 8
  %1547 = load double* %1187, align 8
  %1548 = load double* %1189, align 8
  %1549 = load double* %1191, align 8
  %1550 = load double* %1193, align 8
  %temp.vect729.i = insertelement <16 x double> undef, double %1535, i32 0
  %temp.vect730.i = insertelement <16 x double> %temp.vect729.i, double %1536, i32 1
  %temp.vect731.i = insertelement <16 x double> %temp.vect730.i, double %1537, i32 2
  %temp.vect732.i = insertelement <16 x double> %temp.vect731.i, double %1538, i32 3
  %temp.vect733.i = insertelement <16 x double> %temp.vect732.i, double %1539, i32 4
  %temp.vect734.i = insertelement <16 x double> %temp.vect733.i, double %1540, i32 5
  %temp.vect735.i = insertelement <16 x double> %temp.vect734.i, double %1541, i32 6
  %temp.vect736.i = insertelement <16 x double> %temp.vect735.i, double %1542, i32 7
  %temp.vect737.i = insertelement <16 x double> %temp.vect736.i, double %1543, i32 8
  %temp.vect738.i = insertelement <16 x double> %temp.vect737.i, double %1544, i32 9
  %temp.vect739.i = insertelement <16 x double> %temp.vect738.i, double %1545, i32 10
  %temp.vect740.i = insertelement <16 x double> %temp.vect739.i, double %1546, i32 11
  %temp.vect741.i = insertelement <16 x double> %temp.vect740.i, double %1547, i32 12
  %temp.vect742.i = insertelement <16 x double> %temp.vect741.i, double %1548, i32 13
  %temp.vect743.i = insertelement <16 x double> %temp.vect742.i, double %1549, i32 14
  %temp.vect744.i = insertelement <16 x double> %temp.vect743.i, double %1550, i32 15
  %1551 = fadd <16 x double> %temp.vect744.i, %1534
  %1552 = load double addrspace(3)* %70, align 16
  %temp745.i = insertelement <16 x double> undef, double %1552, i32 0
  %vector746.i = shufflevector <16 x double> %temp745.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2481.i" = add nuw i64 %CurrSBIndex..3.i, 9344
  %"&pSB[currWI].offset2482.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2481.i"
  %CastToValueType2483.i = bitcast i8* %"&pSB[currWI].offset2482.i" to <16 x double>*
  %loadedValue2484.i = load <16 x double>* %CastToValueType2483.i, align 128
  %1553 = fmul <16 x double> %loadedValue2484.i, %vector746.i
  %1554 = load double* %1195, align 16
  %1555 = load double* %1197, align 16
  %1556 = load double* %1199, align 16
  %1557 = load double* %1201, align 16
  %1558 = load double* %1203, align 16
  %1559 = load double* %1205, align 16
  %1560 = load double* %1207, align 16
  %1561 = load double* %1209, align 16
  %1562 = load double* %1211, align 16
  %1563 = load double* %1213, align 16
  %1564 = load double* %1215, align 16
  %1565 = load double* %1217, align 16
  %1566 = load double* %1219, align 16
  %1567 = load double* %1221, align 16
  %1568 = load double* %1223, align 16
  %1569 = load double* %1225, align 16
  %temp.vect747.i = insertelement <16 x double> undef, double %1554, i32 0
  %temp.vect748.i = insertelement <16 x double> %temp.vect747.i, double %1555, i32 1
  %temp.vect749.i = insertelement <16 x double> %temp.vect748.i, double %1556, i32 2
  %temp.vect750.i = insertelement <16 x double> %temp.vect749.i, double %1557, i32 3
  %temp.vect751.i = insertelement <16 x double> %temp.vect750.i, double %1558, i32 4
  %temp.vect752.i = insertelement <16 x double> %temp.vect751.i, double %1559, i32 5
  %temp.vect753.i = insertelement <16 x double> %temp.vect752.i, double %1560, i32 6
  %temp.vect754.i = insertelement <16 x double> %temp.vect753.i, double %1561, i32 7
  %temp.vect755.i = insertelement <16 x double> %temp.vect754.i, double %1562, i32 8
  %temp.vect756.i = insertelement <16 x double> %temp.vect755.i, double %1563, i32 9
  %temp.vect757.i = insertelement <16 x double> %temp.vect756.i, double %1564, i32 10
  %temp.vect758.i = insertelement <16 x double> %temp.vect757.i, double %1565, i32 11
  %temp.vect759.i = insertelement <16 x double> %temp.vect758.i, double %1566, i32 12
  %temp.vect760.i = insertelement <16 x double> %temp.vect759.i, double %1567, i32 13
  %temp.vect761.i = insertelement <16 x double> %temp.vect760.i, double %1568, i32 14
  %temp.vect762.i = insertelement <16 x double> %temp.vect761.i, double %1569, i32 15
  %1570 = fadd <16 x double> %temp.vect762.i, %1553
  %1571 = load double addrspace(3)* %72, align 8
  %temp763.i = insertelement <16 x double> undef, double %1571, i32 0
  %vector764.i = shufflevector <16 x double> %temp763.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2476.i" = add nuw i64 %CurrSBIndex..3.i, 9344
  %"&pSB[currWI].offset2477.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2476.i"
  %CastToValueType2478.i = bitcast i8* %"&pSB[currWI].offset2477.i" to <16 x double>*
  %loadedValue2479.i = load <16 x double>* %CastToValueType2478.i, align 128
  %1572 = fmul <16 x double> %loadedValue2479.i, %vector764.i
  %1573 = load double* %1227, align 8
  %1574 = load double* %1229, align 8
  %1575 = load double* %1231, align 8
  %1576 = load double* %1233, align 8
  %1577 = load double* %1235, align 8
  %1578 = load double* %1237, align 8
  %1579 = load double* %1239, align 8
  %1580 = load double* %1241, align 8
  %1581 = load double* %1243, align 8
  %1582 = load double* %1245, align 8
  %1583 = load double* %1247, align 8
  %1584 = load double* %1249, align 8
  %1585 = load double* %1251, align 8
  %1586 = load double* %1253, align 8
  %1587 = load double* %1255, align 8
  %1588 = load double* %1257, align 8
  %temp.vect765.i = insertelement <16 x double> undef, double %1573, i32 0
  %temp.vect766.i = insertelement <16 x double> %temp.vect765.i, double %1574, i32 1
  %temp.vect767.i = insertelement <16 x double> %temp.vect766.i, double %1575, i32 2
  %temp.vect768.i = insertelement <16 x double> %temp.vect767.i, double %1576, i32 3
  %temp.vect769.i = insertelement <16 x double> %temp.vect768.i, double %1577, i32 4
  %temp.vect770.i = insertelement <16 x double> %temp.vect769.i, double %1578, i32 5
  %temp.vect771.i = insertelement <16 x double> %temp.vect770.i, double %1579, i32 6
  %temp.vect772.i = insertelement <16 x double> %temp.vect771.i, double %1580, i32 7
  %temp.vect773.i = insertelement <16 x double> %temp.vect772.i, double %1581, i32 8
  %temp.vect774.i = insertelement <16 x double> %temp.vect773.i, double %1582, i32 9
  %temp.vect775.i = insertelement <16 x double> %temp.vect774.i, double %1583, i32 10
  %temp.vect776.i = insertelement <16 x double> %temp.vect775.i, double %1584, i32 11
  %temp.vect777.i = insertelement <16 x double> %temp.vect776.i, double %1585, i32 12
  %temp.vect778.i = insertelement <16 x double> %temp.vect777.i, double %1586, i32 13
  %temp.vect779.i = insertelement <16 x double> %temp.vect778.i, double %1587, i32 14
  %temp.vect780.i = insertelement <16 x double> %temp.vect779.i, double %1588, i32 15
  %1589 = fadd <16 x double> %temp.vect780.i, %1572
  %"&(pSB[currWI].offset)2467.i" = add nuw i64 %CurrSBIndex..3.i, 9320
  %"&pSB[currWI].offset2468.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2467.i"
  %CastToValueType2469.i = bitcast i8* %"&pSB[currWI].offset2468.i" to double addrspace(1)**
  %loadedValue2470.i = load double addrspace(1)** %CastToValueType2469.i, align 8
  %ptrTypeCast781.i = bitcast double addrspace(1)* %loadedValue2470.i to <16 x double> addrspace(1)*
  %1590 = load <16 x double> addrspace(1)* %ptrTypeCast781.i, align 8
  %1591 = load double addrspace(3)* %74, align 8
  %temp782.i = insertelement <16 x double> undef, double %1591, i32 0
  %vector783.i = shufflevector <16 x double> %temp782.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2635.i" = add nuw i64 %CurrSBIndex..3.i, 9472
  %"&pSB[currWI].offset2636.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2635.i"
  %CastToValueType2637.i = bitcast i8* %"&pSB[currWI].offset2636.i" to <16 x double>*
  %loadedValue2638.i = load <16 x double>* %CastToValueType2637.i, align 128
  %1592 = fmul <16 x double> %loadedValue2638.i, %vector783.i
  %1593 = fadd <16 x double> %1304, %1592
  %1594 = load double addrspace(3)* %76, align 8
  %temp784.i = insertelement <16 x double> undef, double %1594, i32 0
  %vector785.i = shufflevector <16 x double> %temp784.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2630.i" = add nuw i64 %CurrSBIndex..3.i, 9472
  %"&pSB[currWI].offset2631.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2630.i"
  %CastToValueType2632.i = bitcast i8* %"&pSB[currWI].offset2631.i" to <16 x double>*
  %loadedValue2633.i = load <16 x double>* %CastToValueType2632.i, align 128
  %1595 = fmul <16 x double> %loadedValue2633.i, %vector785.i
  %1596 = fadd <16 x double> %1323, %1595
  %1597 = load double addrspace(3)* %78, align 8
  %temp786.i = insertelement <16 x double> undef, double %1597, i32 0
  %vector787.i = shufflevector <16 x double> %temp786.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2625.i" = add nuw i64 %CurrSBIndex..3.i, 9472
  %"&pSB[currWI].offset2626.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2625.i"
  %CastToValueType2627.i = bitcast i8* %"&pSB[currWI].offset2626.i" to <16 x double>*
  %loadedValue2628.i = load <16 x double>* %CastToValueType2627.i, align 128
  %1598 = fmul <16 x double> %loadedValue2628.i, %vector787.i
  %1599 = fadd <16 x double> %1342, %1598
  %1600 = load double addrspace(3)* %80, align 8
  %temp788.i = insertelement <16 x double> undef, double %1600, i32 0
  %vector789.i = shufflevector <16 x double> %temp788.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2620.i" = add nuw i64 %CurrSBIndex..3.i, 9472
  %"&pSB[currWI].offset2621.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2620.i"
  %CastToValueType2622.i = bitcast i8* %"&pSB[currWI].offset2621.i" to <16 x double>*
  %loadedValue2623.i = load <16 x double>* %CastToValueType2622.i, align 128
  %1601 = fmul <16 x double> %loadedValue2623.i, %vector789.i
  %1602 = fadd <16 x double> %1361, %1601
  %1603 = load double addrspace(3)* %82, align 8
  %temp790.i = insertelement <16 x double> undef, double %1603, i32 0
  %vector791.i = shufflevector <16 x double> %temp790.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2615.i" = add nuw i64 %CurrSBIndex..3.i, 9472
  %"&pSB[currWI].offset2616.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2615.i"
  %CastToValueType2617.i = bitcast i8* %"&pSB[currWI].offset2616.i" to <16 x double>*
  %loadedValue2618.i = load <16 x double>* %CastToValueType2617.i, align 128
  %1604 = fmul <16 x double> %loadedValue2618.i, %vector791.i
  %1605 = fadd <16 x double> %1380, %1604
  %1606 = load double addrspace(3)* %84, align 8
  %temp792.i = insertelement <16 x double> undef, double %1606, i32 0
  %vector793.i = shufflevector <16 x double> %temp792.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2610.i" = add nuw i64 %CurrSBIndex..3.i, 9472
  %"&pSB[currWI].offset2611.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2610.i"
  %CastToValueType2612.i = bitcast i8* %"&pSB[currWI].offset2611.i" to <16 x double>*
  %loadedValue2613.i = load <16 x double>* %CastToValueType2612.i, align 128
  %1607 = fmul <16 x double> %loadedValue2613.i, %vector793.i
  %1608 = fadd <16 x double> %1399, %1607
  %1609 = load double addrspace(3)* %86, align 8
  %temp794.i = insertelement <16 x double> undef, double %1609, i32 0
  %vector795.i = shufflevector <16 x double> %temp794.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2605.i" = add nuw i64 %CurrSBIndex..3.i, 9472
  %"&pSB[currWI].offset2606.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2605.i"
  %CastToValueType2607.i = bitcast i8* %"&pSB[currWI].offset2606.i" to <16 x double>*
  %loadedValue2608.i = load <16 x double>* %CastToValueType2607.i, align 128
  %1610 = fmul <16 x double> %loadedValue2608.i, %vector795.i
  %1611 = fadd <16 x double> %1418, %1610
  %1612 = load double addrspace(3)* %88, align 8
  %temp796.i = insertelement <16 x double> undef, double %1612, i32 0
  %vector797.i = shufflevector <16 x double> %temp796.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2600.i" = add nuw i64 %CurrSBIndex..3.i, 9472
  %"&pSB[currWI].offset2601.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2600.i"
  %CastToValueType2602.i = bitcast i8* %"&pSB[currWI].offset2601.i" to <16 x double>*
  %loadedValue2603.i = load <16 x double>* %CastToValueType2602.i, align 128
  %1613 = fmul <16 x double> %loadedValue2603.i, %vector797.i
  %1614 = fadd <16 x double> %1437, %1613
  %1615 = load double addrspace(3)* %90, align 8
  %temp798.i = insertelement <16 x double> undef, double %1615, i32 0
  %vector799.i = shufflevector <16 x double> %temp798.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2595.i" = add nuw i64 %CurrSBIndex..3.i, 9472
  %"&pSB[currWI].offset2596.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2595.i"
  %CastToValueType2597.i = bitcast i8* %"&pSB[currWI].offset2596.i" to <16 x double>*
  %loadedValue2598.i = load <16 x double>* %CastToValueType2597.i, align 128
  %1616 = fmul <16 x double> %loadedValue2598.i, %vector799.i
  %1617 = fadd <16 x double> %1456, %1616
  %1618 = load double addrspace(3)* %92, align 8
  %temp800.i = insertelement <16 x double> undef, double %1618, i32 0
  %vector801.i = shufflevector <16 x double> %temp800.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2590.i" = add nuw i64 %CurrSBIndex..3.i, 9472
  %"&pSB[currWI].offset2591.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2590.i"
  %CastToValueType2592.i = bitcast i8* %"&pSB[currWI].offset2591.i" to <16 x double>*
  %loadedValue2593.i = load <16 x double>* %CastToValueType2592.i, align 128
  %1619 = fmul <16 x double> %loadedValue2593.i, %vector801.i
  %1620 = fadd <16 x double> %1475, %1619
  %1621 = load double addrspace(3)* %94, align 8
  %temp802.i = insertelement <16 x double> undef, double %1621, i32 0
  %vector803.i = shufflevector <16 x double> %temp802.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2585.i" = add nuw i64 %CurrSBIndex..3.i, 9472
  %"&pSB[currWI].offset2586.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2585.i"
  %CastToValueType2587.i = bitcast i8* %"&pSB[currWI].offset2586.i" to <16 x double>*
  %loadedValue2588.i = load <16 x double>* %CastToValueType2587.i, align 128
  %1622 = fmul <16 x double> %loadedValue2588.i, %vector803.i
  %1623 = fadd <16 x double> %1494, %1622
  %1624 = load double addrspace(3)* %96, align 8
  %temp804.i = insertelement <16 x double> undef, double %1624, i32 0
  %vector805.i = shufflevector <16 x double> %temp804.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2580.i" = add nuw i64 %CurrSBIndex..3.i, 9472
  %"&pSB[currWI].offset2581.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2580.i"
  %CastToValueType2582.i = bitcast i8* %"&pSB[currWI].offset2581.i" to <16 x double>*
  %loadedValue2583.i = load <16 x double>* %CastToValueType2582.i, align 128
  %1625 = fmul <16 x double> %loadedValue2583.i, %vector805.i
  %1626 = fadd <16 x double> %1513, %1625
  %1627 = load double addrspace(3)* %98, align 8
  %temp806.i = insertelement <16 x double> undef, double %1627, i32 0
  %vector807.i = shufflevector <16 x double> %temp806.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2575.i" = add nuw i64 %CurrSBIndex..3.i, 9472
  %"&pSB[currWI].offset2576.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2575.i"
  %CastToValueType2577.i = bitcast i8* %"&pSB[currWI].offset2576.i" to <16 x double>*
  %loadedValue2578.i = load <16 x double>* %CastToValueType2577.i, align 128
  %1628 = fmul <16 x double> %loadedValue2578.i, %vector807.i
  %1629 = fadd <16 x double> %1532, %1628
  %1630 = load double addrspace(3)* %100, align 8
  %temp808.i = insertelement <16 x double> undef, double %1630, i32 0
  %vector809.i = shufflevector <16 x double> %temp808.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2570.i" = add nuw i64 %CurrSBIndex..3.i, 9472
  %"&pSB[currWI].offset2571.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2570.i"
  %CastToValueType2572.i = bitcast i8* %"&pSB[currWI].offset2571.i" to <16 x double>*
  %loadedValue2573.i = load <16 x double>* %CastToValueType2572.i, align 128
  %1631 = fmul <16 x double> %loadedValue2573.i, %vector809.i
  %1632 = fadd <16 x double> %1551, %1631
  %1633 = load double addrspace(3)* %102, align 8
  %temp810.i = insertelement <16 x double> undef, double %1633, i32 0
  %vector811.i = shufflevector <16 x double> %temp810.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2565.i" = add nuw i64 %CurrSBIndex..3.i, 9472
  %"&pSB[currWI].offset2566.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2565.i"
  %CastToValueType2567.i = bitcast i8* %"&pSB[currWI].offset2566.i" to <16 x double>*
  %loadedValue2568.i = load <16 x double>* %CastToValueType2567.i, align 128
  %1634 = fmul <16 x double> %loadedValue2568.i, %vector811.i
  %1635 = fadd <16 x double> %1570, %1634
  %1636 = load double addrspace(3)* %104, align 8
  %temp812.i = insertelement <16 x double> undef, double %1636, i32 0
  %vector813.i = shufflevector <16 x double> %temp812.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2560.i" = add nuw i64 %CurrSBIndex..3.i, 9472
  %"&pSB[currWI].offset2561.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2560.i"
  %CastToValueType2562.i = bitcast i8* %"&pSB[currWI].offset2561.i" to <16 x double>*
  %loadedValue2563.i = load <16 x double>* %CastToValueType2562.i, align 128
  %1637 = fmul <16 x double> %loadedValue2563.i, %vector813.i
  %1638 = fadd <16 x double> %1589, %1637
  %"&(pSB[currWI].offset)2458.i" = add nuw i64 %CurrSBIndex..3.i, 9312
  %"&pSB[currWI].offset2459.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2458.i"
  %CastToValueType2460.i = bitcast i8* %"&pSB[currWI].offset2459.i" to double addrspace(1)**
  %loadedValue2461.i = load double addrspace(1)** %CastToValueType2460.i, align 8
  %ptrTypeCast814.i = bitcast double addrspace(1)* %loadedValue2461.i to <16 x double> addrspace(1)*
  %1639 = load <16 x double> addrspace(1)* %ptrTypeCast814.i, align 8
  %1640 = load double addrspace(3)* %106, align 16
  %temp815.i = insertelement <16 x double> undef, double %1640, i32 0
  %vector816.i = shufflevector <16 x double> %temp815.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2719.i" = add nuw i64 %CurrSBIndex..3.i, 9600
  %"&pSB[currWI].offset2720.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2719.i"
  %CastToValueType2721.i = bitcast i8* %"&pSB[currWI].offset2720.i" to <16 x double>*
  %loadedValue2722.i = load <16 x double>* %CastToValueType2721.i, align 128
  %1641 = fmul <16 x double> %loadedValue2722.i, %vector816.i
  %1642 = fadd <16 x double> %1593, %1641
  %1643 = load double addrspace(3)* %108, align 8
  %temp817.i = insertelement <16 x double> undef, double %1643, i32 0
  %vector818.i = shufflevector <16 x double> %temp817.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2714.i" = add nuw i64 %CurrSBIndex..3.i, 9600
  %"&pSB[currWI].offset2715.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2714.i"
  %CastToValueType2716.i = bitcast i8* %"&pSB[currWI].offset2715.i" to <16 x double>*
  %loadedValue2717.i = load <16 x double>* %CastToValueType2716.i, align 128
  %1644 = fmul <16 x double> %loadedValue2717.i, %vector818.i
  %1645 = fadd <16 x double> %1596, %1644
  %1646 = load double addrspace(3)* %110, align 16
  %temp819.i = insertelement <16 x double> undef, double %1646, i32 0
  %vector820.i = shufflevector <16 x double> %temp819.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2709.i" = add nuw i64 %CurrSBIndex..3.i, 9600
  %"&pSB[currWI].offset2710.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2709.i"
  %CastToValueType2711.i = bitcast i8* %"&pSB[currWI].offset2710.i" to <16 x double>*
  %loadedValue2712.i = load <16 x double>* %CastToValueType2711.i, align 128
  %1647 = fmul <16 x double> %loadedValue2712.i, %vector820.i
  %1648 = fadd <16 x double> %1599, %1647
  %1649 = load double addrspace(3)* %112, align 8
  %temp821.i = insertelement <16 x double> undef, double %1649, i32 0
  %vector822.i = shufflevector <16 x double> %temp821.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2704.i" = add nuw i64 %CurrSBIndex..3.i, 9600
  %"&pSB[currWI].offset2705.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2704.i"
  %CastToValueType2706.i = bitcast i8* %"&pSB[currWI].offset2705.i" to <16 x double>*
  %loadedValue2707.i = load <16 x double>* %CastToValueType2706.i, align 128
  %1650 = fmul <16 x double> %loadedValue2707.i, %vector822.i
  %1651 = fadd <16 x double> %1602, %1650
  %1652 = load double addrspace(3)* %114, align 16
  %temp823.i = insertelement <16 x double> undef, double %1652, i32 0
  %vector824.i = shufflevector <16 x double> %temp823.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2699.i" = add nuw i64 %CurrSBIndex..3.i, 9600
  %"&pSB[currWI].offset2700.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2699.i"
  %CastToValueType2701.i = bitcast i8* %"&pSB[currWI].offset2700.i" to <16 x double>*
  %loadedValue2702.i = load <16 x double>* %CastToValueType2701.i, align 128
  %1653 = fmul <16 x double> %loadedValue2702.i, %vector824.i
  %1654 = fadd <16 x double> %1605, %1653
  %1655 = load double addrspace(3)* %116, align 8
  %temp825.i = insertelement <16 x double> undef, double %1655, i32 0
  %vector826.i = shufflevector <16 x double> %temp825.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2694.i" = add nuw i64 %CurrSBIndex..3.i, 9600
  %"&pSB[currWI].offset2695.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2694.i"
  %CastToValueType2696.i = bitcast i8* %"&pSB[currWI].offset2695.i" to <16 x double>*
  %loadedValue2697.i = load <16 x double>* %CastToValueType2696.i, align 128
  %1656 = fmul <16 x double> %loadedValue2697.i, %vector826.i
  %1657 = fadd <16 x double> %1608, %1656
  %1658 = load double addrspace(3)* %118, align 16
  %temp827.i = insertelement <16 x double> undef, double %1658, i32 0
  %vector828.i = shufflevector <16 x double> %temp827.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2689.i" = add nuw i64 %CurrSBIndex..3.i, 9600
  %"&pSB[currWI].offset2690.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2689.i"
  %CastToValueType2691.i = bitcast i8* %"&pSB[currWI].offset2690.i" to <16 x double>*
  %loadedValue2692.i = load <16 x double>* %CastToValueType2691.i, align 128
  %1659 = fmul <16 x double> %loadedValue2692.i, %vector828.i
  %1660 = fadd <16 x double> %1611, %1659
  %1661 = load double addrspace(3)* %120, align 8
  %temp829.i = insertelement <16 x double> undef, double %1661, i32 0
  %vector830.i = shufflevector <16 x double> %temp829.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2684.i" = add nuw i64 %CurrSBIndex..3.i, 9600
  %"&pSB[currWI].offset2685.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2684.i"
  %CastToValueType2686.i = bitcast i8* %"&pSB[currWI].offset2685.i" to <16 x double>*
  %loadedValue2687.i = load <16 x double>* %CastToValueType2686.i, align 128
  %1662 = fmul <16 x double> %loadedValue2687.i, %vector830.i
  %1663 = fadd <16 x double> %1614, %1662
  %1664 = load double addrspace(3)* %122, align 16
  %temp831.i = insertelement <16 x double> undef, double %1664, i32 0
  %vector832.i = shufflevector <16 x double> %temp831.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2679.i" = add nuw i64 %CurrSBIndex..3.i, 9600
  %"&pSB[currWI].offset2680.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2679.i"
  %CastToValueType2681.i = bitcast i8* %"&pSB[currWI].offset2680.i" to <16 x double>*
  %loadedValue2682.i = load <16 x double>* %CastToValueType2681.i, align 128
  %1665 = fmul <16 x double> %loadedValue2682.i, %vector832.i
  %1666 = fadd <16 x double> %1617, %1665
  %1667 = load double addrspace(3)* %124, align 8
  %temp833.i = insertelement <16 x double> undef, double %1667, i32 0
  %vector834.i = shufflevector <16 x double> %temp833.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2674.i" = add nuw i64 %CurrSBIndex..3.i, 9600
  %"&pSB[currWI].offset2675.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2674.i"
  %CastToValueType2676.i = bitcast i8* %"&pSB[currWI].offset2675.i" to <16 x double>*
  %loadedValue2677.i = load <16 x double>* %CastToValueType2676.i, align 128
  %1668 = fmul <16 x double> %loadedValue2677.i, %vector834.i
  %1669 = fadd <16 x double> %1620, %1668
  %1670 = load double addrspace(3)* %126, align 16
  %temp835.i = insertelement <16 x double> undef, double %1670, i32 0
  %vector836.i = shufflevector <16 x double> %temp835.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2669.i" = add nuw i64 %CurrSBIndex..3.i, 9600
  %"&pSB[currWI].offset2670.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2669.i"
  %CastToValueType2671.i = bitcast i8* %"&pSB[currWI].offset2670.i" to <16 x double>*
  %loadedValue2672.i = load <16 x double>* %CastToValueType2671.i, align 128
  %1671 = fmul <16 x double> %loadedValue2672.i, %vector836.i
  %1672 = fadd <16 x double> %1623, %1671
  %1673 = load double addrspace(3)* %128, align 8
  %temp837.i = insertelement <16 x double> undef, double %1673, i32 0
  %vector838.i = shufflevector <16 x double> %temp837.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2664.i" = add nuw i64 %CurrSBIndex..3.i, 9600
  %"&pSB[currWI].offset2665.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2664.i"
  %CastToValueType2666.i = bitcast i8* %"&pSB[currWI].offset2665.i" to <16 x double>*
  %loadedValue2667.i = load <16 x double>* %CastToValueType2666.i, align 128
  %1674 = fmul <16 x double> %loadedValue2667.i, %vector838.i
  %1675 = fadd <16 x double> %1626, %1674
  %1676 = load double addrspace(3)* %130, align 16
  %temp839.i = insertelement <16 x double> undef, double %1676, i32 0
  %vector840.i = shufflevector <16 x double> %temp839.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2659.i" = add nuw i64 %CurrSBIndex..3.i, 9600
  %"&pSB[currWI].offset2660.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2659.i"
  %CastToValueType2661.i = bitcast i8* %"&pSB[currWI].offset2660.i" to <16 x double>*
  %loadedValue2662.i = load <16 x double>* %CastToValueType2661.i, align 128
  %1677 = fmul <16 x double> %loadedValue2662.i, %vector840.i
  %1678 = fadd <16 x double> %1629, %1677
  %1679 = load double addrspace(3)* %132, align 8
  %temp841.i = insertelement <16 x double> undef, double %1679, i32 0
  %vector842.i = shufflevector <16 x double> %temp841.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2654.i" = add nuw i64 %CurrSBIndex..3.i, 9600
  %"&pSB[currWI].offset2655.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2654.i"
  %CastToValueType2656.i = bitcast i8* %"&pSB[currWI].offset2655.i" to <16 x double>*
  %loadedValue2657.i = load <16 x double>* %CastToValueType2656.i, align 128
  %1680 = fmul <16 x double> %loadedValue2657.i, %vector842.i
  %1681 = fadd <16 x double> %1632, %1680
  %1682 = load double addrspace(3)* %134, align 16
  %temp843.i = insertelement <16 x double> undef, double %1682, i32 0
  %vector844.i = shufflevector <16 x double> %temp843.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2649.i" = add nuw i64 %CurrSBIndex..3.i, 9600
  %"&pSB[currWI].offset2650.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2649.i"
  %CastToValueType2651.i = bitcast i8* %"&pSB[currWI].offset2650.i" to <16 x double>*
  %loadedValue2652.i = load <16 x double>* %CastToValueType2651.i, align 128
  %1683 = fmul <16 x double> %loadedValue2652.i, %vector844.i
  %1684 = fadd <16 x double> %1635, %1683
  %1685 = load double addrspace(3)* %136, align 8
  %temp845.i = insertelement <16 x double> undef, double %1685, i32 0
  %vector846.i = shufflevector <16 x double> %temp845.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2644.i" = add nuw i64 %CurrSBIndex..3.i, 9600
  %"&pSB[currWI].offset2645.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2644.i"
  %CastToValueType2646.i = bitcast i8* %"&pSB[currWI].offset2645.i" to <16 x double>*
  %loadedValue2647.i = load <16 x double>* %CastToValueType2646.i, align 128
  %1686 = fmul <16 x double> %loadedValue2647.i, %vector846.i
  %1687 = fadd <16 x double> %1638, %1686
  %"&(pSB[currWI].offset)2449.i" = add nuw i64 %CurrSBIndex..3.i, 9304
  %"&pSB[currWI].offset2450.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2449.i"
  %CastToValueType2451.i = bitcast i8* %"&pSB[currWI].offset2450.i" to double addrspace(1)**
  %loadedValue2452.i = load double addrspace(1)** %CastToValueType2451.i, align 8
  %ptrTypeCast847.i = bitcast double addrspace(1)* %loadedValue2452.i to <16 x double> addrspace(1)*
  %1688 = load <16 x double> addrspace(1)* %ptrTypeCast847.i, align 8
  %1689 = load double addrspace(3)* %138, align 8
  %temp848.i = insertelement <16 x double> undef, double %1689, i32 0
  %vector849.i = shufflevector <16 x double> %temp848.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2803.i" = add nuw i64 %CurrSBIndex..3.i, 9728
  %"&pSB[currWI].offset2804.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2803.i"
  %CastToValueType2805.i = bitcast i8* %"&pSB[currWI].offset2804.i" to <16 x double>*
  %loadedValue2806.i = load <16 x double>* %CastToValueType2805.i, align 128
  %1690 = fmul <16 x double> %loadedValue2806.i, %vector849.i
  %1691 = fadd <16 x double> %1642, %1690
  %1692 = load double addrspace(3)* %140, align 8
  %temp850.i = insertelement <16 x double> undef, double %1692, i32 0
  %vector851.i = shufflevector <16 x double> %temp850.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2798.i" = add nuw i64 %CurrSBIndex..3.i, 9728
  %"&pSB[currWI].offset2799.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2798.i"
  %CastToValueType2800.i = bitcast i8* %"&pSB[currWI].offset2799.i" to <16 x double>*
  %loadedValue2801.i = load <16 x double>* %CastToValueType2800.i, align 128
  %1693 = fmul <16 x double> %loadedValue2801.i, %vector851.i
  %1694 = fadd <16 x double> %1645, %1693
  %1695 = load double addrspace(3)* %142, align 8
  %temp852.i = insertelement <16 x double> undef, double %1695, i32 0
  %vector853.i = shufflevector <16 x double> %temp852.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2793.i" = add nuw i64 %CurrSBIndex..3.i, 9728
  %"&pSB[currWI].offset2794.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2793.i"
  %CastToValueType2795.i = bitcast i8* %"&pSB[currWI].offset2794.i" to <16 x double>*
  %loadedValue2796.i = load <16 x double>* %CastToValueType2795.i, align 128
  %1696 = fmul <16 x double> %loadedValue2796.i, %vector853.i
  %1697 = fadd <16 x double> %1648, %1696
  %1698 = load double addrspace(3)* %144, align 8
  %temp854.i = insertelement <16 x double> undef, double %1698, i32 0
  %vector855.i = shufflevector <16 x double> %temp854.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2788.i" = add nuw i64 %CurrSBIndex..3.i, 9728
  %"&pSB[currWI].offset2789.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2788.i"
  %CastToValueType2790.i = bitcast i8* %"&pSB[currWI].offset2789.i" to <16 x double>*
  %loadedValue2791.i = load <16 x double>* %CastToValueType2790.i, align 128
  %1699 = fmul <16 x double> %loadedValue2791.i, %vector855.i
  %1700 = fadd <16 x double> %1651, %1699
  %1701 = load double addrspace(3)* %146, align 8
  %temp856.i = insertelement <16 x double> undef, double %1701, i32 0
  %vector857.i = shufflevector <16 x double> %temp856.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2783.i" = add nuw i64 %CurrSBIndex..3.i, 9728
  %"&pSB[currWI].offset2784.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2783.i"
  %CastToValueType2785.i = bitcast i8* %"&pSB[currWI].offset2784.i" to <16 x double>*
  %loadedValue2786.i = load <16 x double>* %CastToValueType2785.i, align 128
  %1702 = fmul <16 x double> %loadedValue2786.i, %vector857.i
  %1703 = fadd <16 x double> %1654, %1702
  %1704 = load double addrspace(3)* %148, align 8
  %temp858.i = insertelement <16 x double> undef, double %1704, i32 0
  %vector859.i = shufflevector <16 x double> %temp858.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2778.i" = add nuw i64 %CurrSBIndex..3.i, 9728
  %"&pSB[currWI].offset2779.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2778.i"
  %CastToValueType2780.i = bitcast i8* %"&pSB[currWI].offset2779.i" to <16 x double>*
  %loadedValue2781.i = load <16 x double>* %CastToValueType2780.i, align 128
  %1705 = fmul <16 x double> %loadedValue2781.i, %vector859.i
  %1706 = fadd <16 x double> %1657, %1705
  %1707 = load double addrspace(3)* %150, align 8
  %temp860.i = insertelement <16 x double> undef, double %1707, i32 0
  %vector861.i = shufflevector <16 x double> %temp860.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2773.i" = add nuw i64 %CurrSBIndex..3.i, 9728
  %"&pSB[currWI].offset2774.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2773.i"
  %CastToValueType2775.i = bitcast i8* %"&pSB[currWI].offset2774.i" to <16 x double>*
  %loadedValue2776.i = load <16 x double>* %CastToValueType2775.i, align 128
  %1708 = fmul <16 x double> %loadedValue2776.i, %vector861.i
  %1709 = fadd <16 x double> %1660, %1708
  %1710 = load double addrspace(3)* %152, align 8
  %temp862.i = insertelement <16 x double> undef, double %1710, i32 0
  %vector863.i = shufflevector <16 x double> %temp862.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2768.i" = add nuw i64 %CurrSBIndex..3.i, 9728
  %"&pSB[currWI].offset2769.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2768.i"
  %CastToValueType2770.i = bitcast i8* %"&pSB[currWI].offset2769.i" to <16 x double>*
  %loadedValue2771.i = load <16 x double>* %CastToValueType2770.i, align 128
  %1711 = fmul <16 x double> %loadedValue2771.i, %vector863.i
  %1712 = fadd <16 x double> %1663, %1711
  %1713 = load double addrspace(3)* %154, align 8
  %temp864.i = insertelement <16 x double> undef, double %1713, i32 0
  %vector865.i = shufflevector <16 x double> %temp864.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2763.i" = add nuw i64 %CurrSBIndex..3.i, 9728
  %"&pSB[currWI].offset2764.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2763.i"
  %CastToValueType2765.i = bitcast i8* %"&pSB[currWI].offset2764.i" to <16 x double>*
  %loadedValue2766.i = load <16 x double>* %CastToValueType2765.i, align 128
  %1714 = fmul <16 x double> %loadedValue2766.i, %vector865.i
  %1715 = fadd <16 x double> %1666, %1714
  %1716 = load double addrspace(3)* %156, align 8
  %temp866.i = insertelement <16 x double> undef, double %1716, i32 0
  %vector867.i = shufflevector <16 x double> %temp866.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2758.i" = add nuw i64 %CurrSBIndex..3.i, 9728
  %"&pSB[currWI].offset2759.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2758.i"
  %CastToValueType2760.i = bitcast i8* %"&pSB[currWI].offset2759.i" to <16 x double>*
  %loadedValue2761.i = load <16 x double>* %CastToValueType2760.i, align 128
  %1717 = fmul <16 x double> %loadedValue2761.i, %vector867.i
  %1718 = fadd <16 x double> %1669, %1717
  %1719 = load double addrspace(3)* %158, align 8
  %temp868.i = insertelement <16 x double> undef, double %1719, i32 0
  %vector869.i = shufflevector <16 x double> %temp868.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2753.i" = add nuw i64 %CurrSBIndex..3.i, 9728
  %"&pSB[currWI].offset2754.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2753.i"
  %CastToValueType2755.i = bitcast i8* %"&pSB[currWI].offset2754.i" to <16 x double>*
  %loadedValue2756.i = load <16 x double>* %CastToValueType2755.i, align 128
  %1720 = fmul <16 x double> %loadedValue2756.i, %vector869.i
  %1721 = fadd <16 x double> %1672, %1720
  %1722 = load double addrspace(3)* %160, align 8
  %temp870.i = insertelement <16 x double> undef, double %1722, i32 0
  %vector871.i = shufflevector <16 x double> %temp870.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2748.i" = add nuw i64 %CurrSBIndex..3.i, 9728
  %"&pSB[currWI].offset2749.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2748.i"
  %CastToValueType2750.i = bitcast i8* %"&pSB[currWI].offset2749.i" to <16 x double>*
  %loadedValue2751.i = load <16 x double>* %CastToValueType2750.i, align 128
  %1723 = fmul <16 x double> %loadedValue2751.i, %vector871.i
  %1724 = fadd <16 x double> %1675, %1723
  %1725 = load double addrspace(3)* %162, align 8
  %temp872.i = insertelement <16 x double> undef, double %1725, i32 0
  %vector873.i = shufflevector <16 x double> %temp872.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2743.i" = add nuw i64 %CurrSBIndex..3.i, 9728
  %"&pSB[currWI].offset2744.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2743.i"
  %CastToValueType2745.i = bitcast i8* %"&pSB[currWI].offset2744.i" to <16 x double>*
  %loadedValue2746.i = load <16 x double>* %CastToValueType2745.i, align 128
  %1726 = fmul <16 x double> %loadedValue2746.i, %vector873.i
  %1727 = fadd <16 x double> %1678, %1726
  %1728 = load double addrspace(3)* %164, align 8
  %temp874.i = insertelement <16 x double> undef, double %1728, i32 0
  %vector875.i = shufflevector <16 x double> %temp874.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2738.i" = add nuw i64 %CurrSBIndex..3.i, 9728
  %"&pSB[currWI].offset2739.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2738.i"
  %CastToValueType2740.i = bitcast i8* %"&pSB[currWI].offset2739.i" to <16 x double>*
  %loadedValue2741.i = load <16 x double>* %CastToValueType2740.i, align 128
  %1729 = fmul <16 x double> %loadedValue2741.i, %vector875.i
  %1730 = fadd <16 x double> %1681, %1729
  %1731 = load double addrspace(3)* %166, align 8
  %temp876.i = insertelement <16 x double> undef, double %1731, i32 0
  %vector877.i = shufflevector <16 x double> %temp876.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2733.i" = add nuw i64 %CurrSBIndex..3.i, 9728
  %"&pSB[currWI].offset2734.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2733.i"
  %CastToValueType2735.i = bitcast i8* %"&pSB[currWI].offset2734.i" to <16 x double>*
  %loadedValue2736.i = load <16 x double>* %CastToValueType2735.i, align 128
  %1732 = fmul <16 x double> %loadedValue2736.i, %vector877.i
  %1733 = fadd <16 x double> %1684, %1732
  %1734 = load double addrspace(3)* %168, align 8
  %temp878.i = insertelement <16 x double> undef, double %1734, i32 0
  %vector879.i = shufflevector <16 x double> %temp878.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2728.i" = add nuw i64 %CurrSBIndex..3.i, 9728
  %"&pSB[currWI].offset2729.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2728.i"
  %CastToValueType2730.i = bitcast i8* %"&pSB[currWI].offset2729.i" to <16 x double>*
  %loadedValue2731.i = load <16 x double>* %CastToValueType2730.i, align 128
  %1735 = fmul <16 x double> %loadedValue2731.i, %vector879.i
  %1736 = fadd <16 x double> %1687, %1735
  %"&(pSB[currWI].offset)2440.i" = add nuw i64 %CurrSBIndex..3.i, 9296
  %"&pSB[currWI].offset2441.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2440.i"
  %CastToValueType2442.i = bitcast i8* %"&pSB[currWI].offset2441.i" to double addrspace(1)**
  %loadedValue2443.i = load double addrspace(1)** %CastToValueType2442.i, align 8
  %ptrTypeCast880.i = bitcast double addrspace(1)* %loadedValue2443.i to <16 x double> addrspace(1)*
  %1737 = load <16 x double> addrspace(1)* %ptrTypeCast880.i, align 8
  %1738 = load double addrspace(3)* %170, align 16
  %temp881.i = insertelement <16 x double> undef, double %1738, i32 0
  %vector882.i = shufflevector <16 x double> %temp881.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1739 = fmul <16 x double> %1590, %vector882.i
  %1740 = fadd <16 x double> %1691, %1739
  %1741 = load double addrspace(3)* %172, align 8
  %temp883.i = insertelement <16 x double> undef, double %1741, i32 0
  %vector884.i = shufflevector <16 x double> %temp883.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1742 = fmul <16 x double> %1590, %vector884.i
  %1743 = fadd <16 x double> %1694, %1742
  %1744 = load double addrspace(3)* %174, align 16
  %temp885.i = insertelement <16 x double> undef, double %1744, i32 0
  %vector886.i = shufflevector <16 x double> %temp885.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1745 = fmul <16 x double> %1590, %vector886.i
  %1746 = fadd <16 x double> %1697, %1745
  %1747 = load double addrspace(3)* %176, align 8
  %temp887.i = insertelement <16 x double> undef, double %1747, i32 0
  %vector888.i = shufflevector <16 x double> %temp887.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1748 = fmul <16 x double> %1590, %vector888.i
  %1749 = fadd <16 x double> %1700, %1748
  %1750 = load double addrspace(3)* %178, align 16
  %temp889.i = insertelement <16 x double> undef, double %1750, i32 0
  %vector890.i = shufflevector <16 x double> %temp889.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1751 = fmul <16 x double> %1590, %vector890.i
  %1752 = fadd <16 x double> %1703, %1751
  %1753 = load double addrspace(3)* %180, align 8
  %temp891.i = insertelement <16 x double> undef, double %1753, i32 0
  %vector892.i = shufflevector <16 x double> %temp891.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1754 = fmul <16 x double> %1590, %vector892.i
  %1755 = fadd <16 x double> %1706, %1754
  %1756 = load double addrspace(3)* %182, align 16
  %temp893.i = insertelement <16 x double> undef, double %1756, i32 0
  %vector894.i = shufflevector <16 x double> %temp893.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1757 = fmul <16 x double> %1590, %vector894.i
  %1758 = fadd <16 x double> %1709, %1757
  %1759 = load double addrspace(3)* %184, align 8
  %temp895.i = insertelement <16 x double> undef, double %1759, i32 0
  %vector896.i = shufflevector <16 x double> %temp895.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1760 = fmul <16 x double> %1590, %vector896.i
  %1761 = fadd <16 x double> %1712, %1760
  %1762 = load double addrspace(3)* %186, align 16
  %temp897.i = insertelement <16 x double> undef, double %1762, i32 0
  %vector898.i = shufflevector <16 x double> %temp897.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1763 = fmul <16 x double> %1590, %vector898.i
  %1764 = fadd <16 x double> %1715, %1763
  %1765 = load double addrspace(3)* %188, align 8
  %temp899.i = insertelement <16 x double> undef, double %1765, i32 0
  %vector900.i = shufflevector <16 x double> %temp899.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1766 = fmul <16 x double> %1590, %vector900.i
  %1767 = fadd <16 x double> %1718, %1766
  %1768 = load double addrspace(3)* %190, align 16
  %temp901.i = insertelement <16 x double> undef, double %1768, i32 0
  %vector902.i = shufflevector <16 x double> %temp901.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1769 = fmul <16 x double> %1590, %vector902.i
  %1770 = fadd <16 x double> %1721, %1769
  %1771 = load double addrspace(3)* %192, align 8
  %temp903.i = insertelement <16 x double> undef, double %1771, i32 0
  %vector904.i = shufflevector <16 x double> %temp903.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1772 = fmul <16 x double> %1590, %vector904.i
  %1773 = fadd <16 x double> %1724, %1772
  %1774 = load double addrspace(3)* %194, align 16
  %temp905.i = insertelement <16 x double> undef, double %1774, i32 0
  %vector906.i = shufflevector <16 x double> %temp905.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1775 = fmul <16 x double> %1590, %vector906.i
  %1776 = fadd <16 x double> %1727, %1775
  %1777 = load double addrspace(3)* %196, align 8
  %temp907.i = insertelement <16 x double> undef, double %1777, i32 0
  %vector908.i = shufflevector <16 x double> %temp907.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1778 = fmul <16 x double> %1590, %vector908.i
  %1779 = fadd <16 x double> %1730, %1778
  %1780 = load double addrspace(3)* %198, align 16
  %temp909.i = insertelement <16 x double> undef, double %1780, i32 0
  %vector910.i = shufflevector <16 x double> %temp909.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1781 = fmul <16 x double> %1590, %vector910.i
  %1782 = fadd <16 x double> %1733, %1781
  %1783 = load double addrspace(3)* %200, align 8
  %temp911.i = insertelement <16 x double> undef, double %1783, i32 0
  %vector912.i = shufflevector <16 x double> %temp911.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1784 = fmul <16 x double> %1590, %vector912.i
  %1785 = fadd <16 x double> %1736, %1784
  %"&(pSB[currWI].offset)2431.i" = add nuw i64 %CurrSBIndex..3.i, 9288
  %"&pSB[currWI].offset2432.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2431.i"
  %CastToValueType2433.i = bitcast i8* %"&pSB[currWI].offset2432.i" to double addrspace(1)**
  %loadedValue2434.i = load double addrspace(1)** %CastToValueType2433.i, align 8
  %ptrTypeCast913.i = bitcast double addrspace(1)* %loadedValue2434.i to <16 x double> addrspace(1)*
  %1786 = load <16 x double> addrspace(1)* %ptrTypeCast913.i, align 8
  %1787 = load double addrspace(3)* %202, align 8
  %temp914.i = insertelement <16 x double> undef, double %1787, i32 0
  %vector915.i = shufflevector <16 x double> %temp914.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1788 = fmul <16 x double> %1639, %vector915.i
  %1789 = fadd <16 x double> %1740, %1788
  %1790 = load double addrspace(3)* %204, align 8
  %temp916.i = insertelement <16 x double> undef, double %1790, i32 0
  %vector917.i = shufflevector <16 x double> %temp916.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1791 = fmul <16 x double> %1639, %vector917.i
  %1792 = fadd <16 x double> %1743, %1791
  %1793 = load double addrspace(3)* %206, align 8
  %temp918.i = insertelement <16 x double> undef, double %1793, i32 0
  %vector919.i = shufflevector <16 x double> %temp918.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1794 = fmul <16 x double> %1639, %vector919.i
  %1795 = fadd <16 x double> %1746, %1794
  %1796 = load double addrspace(3)* %208, align 8
  %temp920.i = insertelement <16 x double> undef, double %1796, i32 0
  %vector921.i = shufflevector <16 x double> %temp920.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1797 = fmul <16 x double> %1639, %vector921.i
  %1798 = fadd <16 x double> %1749, %1797
  %1799 = load double addrspace(3)* %210, align 8
  %temp922.i = insertelement <16 x double> undef, double %1799, i32 0
  %vector923.i = shufflevector <16 x double> %temp922.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1800 = fmul <16 x double> %1639, %vector923.i
  %1801 = fadd <16 x double> %1752, %1800
  %1802 = load double addrspace(3)* %212, align 8
  %temp924.i = insertelement <16 x double> undef, double %1802, i32 0
  %vector925.i = shufflevector <16 x double> %temp924.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1803 = fmul <16 x double> %1639, %vector925.i
  %1804 = fadd <16 x double> %1755, %1803
  %1805 = load double addrspace(3)* %214, align 8
  %temp926.i = insertelement <16 x double> undef, double %1805, i32 0
  %vector927.i = shufflevector <16 x double> %temp926.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1806 = fmul <16 x double> %1639, %vector927.i
  %1807 = fadd <16 x double> %1758, %1806
  %1808 = load double addrspace(3)* %216, align 8
  %temp928.i = insertelement <16 x double> undef, double %1808, i32 0
  %vector929.i = shufflevector <16 x double> %temp928.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1809 = fmul <16 x double> %1639, %vector929.i
  %1810 = fadd <16 x double> %1761, %1809
  %1811 = load double addrspace(3)* %218, align 8
  %temp930.i = insertelement <16 x double> undef, double %1811, i32 0
  %vector931.i = shufflevector <16 x double> %temp930.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1812 = fmul <16 x double> %1639, %vector931.i
  %1813 = fadd <16 x double> %1764, %1812
  %1814 = load double addrspace(3)* %220, align 8
  %temp932.i = insertelement <16 x double> undef, double %1814, i32 0
  %vector933.i = shufflevector <16 x double> %temp932.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1815 = fmul <16 x double> %1639, %vector933.i
  %1816 = fadd <16 x double> %1767, %1815
  %1817 = load double addrspace(3)* %222, align 8
  %temp934.i = insertelement <16 x double> undef, double %1817, i32 0
  %vector935.i = shufflevector <16 x double> %temp934.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1818 = fmul <16 x double> %1639, %vector935.i
  %1819 = fadd <16 x double> %1770, %1818
  %1820 = load double addrspace(3)* %224, align 8
  %temp936.i = insertelement <16 x double> undef, double %1820, i32 0
  %vector937.i = shufflevector <16 x double> %temp936.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1821 = fmul <16 x double> %1639, %vector937.i
  %1822 = fadd <16 x double> %1773, %1821
  %1823 = load double addrspace(3)* %226, align 8
  %temp938.i = insertelement <16 x double> undef, double %1823, i32 0
  %vector939.i = shufflevector <16 x double> %temp938.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1824 = fmul <16 x double> %1639, %vector939.i
  %1825 = fadd <16 x double> %1776, %1824
  %1826 = load double addrspace(3)* %228, align 8
  %temp940.i = insertelement <16 x double> undef, double %1826, i32 0
  %vector941.i = shufflevector <16 x double> %temp940.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1827 = fmul <16 x double> %1639, %vector941.i
  %1828 = fadd <16 x double> %1779, %1827
  %1829 = load double addrspace(3)* %230, align 8
  %temp942.i = insertelement <16 x double> undef, double %1829, i32 0
  %vector943.i = shufflevector <16 x double> %temp942.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1830 = fmul <16 x double> %1639, %vector943.i
  %1831 = fadd <16 x double> %1782, %1830
  %1832 = load double addrspace(3)* %232, align 8
  %temp944.i = insertelement <16 x double> undef, double %1832, i32 0
  %vector945.i = shufflevector <16 x double> %temp944.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1833 = fmul <16 x double> %1639, %vector945.i
  %1834 = fadd <16 x double> %1785, %1833
  %"&(pSB[currWI].offset)2422.i" = add nuw i64 %CurrSBIndex..3.i, 9280
  %"&pSB[currWI].offset2423.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2422.i"
  %CastToValueType2424.i = bitcast i8* %"&pSB[currWI].offset2423.i" to double addrspace(1)**
  %loadedValue2425.i = load double addrspace(1)** %CastToValueType2424.i, align 8
  %ptrTypeCast946.i = bitcast double addrspace(1)* %loadedValue2425.i to <16 x double> addrspace(1)*
  %1835 = load <16 x double> addrspace(1)* %ptrTypeCast946.i, align 8
  %1836 = load double addrspace(3)* %234, align 16
  %temp947.i = insertelement <16 x double> undef, double %1836, i32 0
  %vector948.i = shufflevector <16 x double> %temp947.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1837 = fmul <16 x double> %1688, %vector948.i
  %1838 = fadd <16 x double> %1789, %1837
  %1839 = load double addrspace(3)* %236, align 8
  %temp949.i = insertelement <16 x double> undef, double %1839, i32 0
  %vector950.i = shufflevector <16 x double> %temp949.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1840 = fmul <16 x double> %1688, %vector950.i
  %1841 = fadd <16 x double> %1792, %1840
  %1842 = load double addrspace(3)* %238, align 16
  %temp951.i = insertelement <16 x double> undef, double %1842, i32 0
  %vector952.i = shufflevector <16 x double> %temp951.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1843 = fmul <16 x double> %1688, %vector952.i
  %1844 = fadd <16 x double> %1795, %1843
  %1845 = load double addrspace(3)* %240, align 8
  %temp953.i = insertelement <16 x double> undef, double %1845, i32 0
  %vector954.i = shufflevector <16 x double> %temp953.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1846 = fmul <16 x double> %1688, %vector954.i
  %1847 = fadd <16 x double> %1798, %1846
  %1848 = load double addrspace(3)* %242, align 16
  %temp955.i = insertelement <16 x double> undef, double %1848, i32 0
  %vector956.i = shufflevector <16 x double> %temp955.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1849 = fmul <16 x double> %1688, %vector956.i
  %1850 = fadd <16 x double> %1801, %1849
  %1851 = load double addrspace(3)* %244, align 8
  %temp957.i = insertelement <16 x double> undef, double %1851, i32 0
  %vector958.i = shufflevector <16 x double> %temp957.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1852 = fmul <16 x double> %1688, %vector958.i
  %1853 = fadd <16 x double> %1804, %1852
  %1854 = load double addrspace(3)* %246, align 16
  %temp959.i = insertelement <16 x double> undef, double %1854, i32 0
  %vector960.i = shufflevector <16 x double> %temp959.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1855 = fmul <16 x double> %1688, %vector960.i
  %1856 = fadd <16 x double> %1807, %1855
  %1857 = load double addrspace(3)* %248, align 8
  %temp961.i = insertelement <16 x double> undef, double %1857, i32 0
  %vector962.i = shufflevector <16 x double> %temp961.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1858 = fmul <16 x double> %1688, %vector962.i
  %1859 = fadd <16 x double> %1810, %1858
  %1860 = load double addrspace(3)* %250, align 16
  %temp963.i = insertelement <16 x double> undef, double %1860, i32 0
  %vector964.i = shufflevector <16 x double> %temp963.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1861 = fmul <16 x double> %1688, %vector964.i
  %1862 = fadd <16 x double> %1813, %1861
  %1863 = load double addrspace(3)* %252, align 8
  %temp965.i = insertelement <16 x double> undef, double %1863, i32 0
  %vector966.i = shufflevector <16 x double> %temp965.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1864 = fmul <16 x double> %1688, %vector966.i
  %1865 = fadd <16 x double> %1816, %1864
  %1866 = load double addrspace(3)* %254, align 16
  %temp967.i = insertelement <16 x double> undef, double %1866, i32 0
  %vector968.i = shufflevector <16 x double> %temp967.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1867 = fmul <16 x double> %1688, %vector968.i
  %1868 = fadd <16 x double> %1819, %1867
  %1869 = load double addrspace(3)* %256, align 8
  %temp969.i = insertelement <16 x double> undef, double %1869, i32 0
  %vector970.i = shufflevector <16 x double> %temp969.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1870 = fmul <16 x double> %1688, %vector970.i
  %1871 = fadd <16 x double> %1822, %1870
  %1872 = load double addrspace(3)* %258, align 16
  %temp971.i = insertelement <16 x double> undef, double %1872, i32 0
  %vector972.i = shufflevector <16 x double> %temp971.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1873 = fmul <16 x double> %1688, %vector972.i
  %1874 = fadd <16 x double> %1825, %1873
  %1875 = load double addrspace(3)* %260, align 8
  %temp973.i = insertelement <16 x double> undef, double %1875, i32 0
  %vector974.i = shufflevector <16 x double> %temp973.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1876 = fmul <16 x double> %1688, %vector974.i
  %1877 = fadd <16 x double> %1828, %1876
  %1878 = load double addrspace(3)* %262, align 16
  %temp975.i = insertelement <16 x double> undef, double %1878, i32 0
  %vector976.i = shufflevector <16 x double> %temp975.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1879 = fmul <16 x double> %1688, %vector976.i
  %1880 = fadd <16 x double> %1831, %1879
  %1881 = load double addrspace(3)* %264, align 8
  %temp977.i = insertelement <16 x double> undef, double %1881, i32 0
  %vector978.i = shufflevector <16 x double> %temp977.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1882 = fmul <16 x double> %1688, %vector978.i
  %1883 = fadd <16 x double> %1834, %1882
  %"&(pSB[currWI].offset)2413.i" = add nuw i64 %CurrSBIndex..3.i, 9272
  %"&pSB[currWI].offset2414.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2413.i"
  %CastToValueType2415.i = bitcast i8* %"&pSB[currWI].offset2414.i" to double addrspace(1)**
  %loadedValue2416.i = load double addrspace(1)** %CastToValueType2415.i, align 8
  %ptrTypeCast979.i = bitcast double addrspace(1)* %loadedValue2416.i to <16 x double> addrspace(1)*
  %1884 = load <16 x double> addrspace(1)* %ptrTypeCast979.i, align 8
  %1885 = load double addrspace(3)* %266, align 8
  %temp980.i = insertelement <16 x double> undef, double %1885, i32 0
  %vector981.i = shufflevector <16 x double> %temp980.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1886 = fmul <16 x double> %1737, %vector981.i
  %1887 = fadd <16 x double> %1838, %1886
  %1888 = load double addrspace(3)* %268, align 8
  %temp982.i = insertelement <16 x double> undef, double %1888, i32 0
  %vector983.i = shufflevector <16 x double> %temp982.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1889 = fmul <16 x double> %1737, %vector983.i
  %1890 = fadd <16 x double> %1841, %1889
  %1891 = load double addrspace(3)* %270, align 8
  %temp984.i = insertelement <16 x double> undef, double %1891, i32 0
  %vector985.i = shufflevector <16 x double> %temp984.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1892 = fmul <16 x double> %1737, %vector985.i
  %1893 = fadd <16 x double> %1844, %1892
  %1894 = load double addrspace(3)* %272, align 8
  %temp986.i = insertelement <16 x double> undef, double %1894, i32 0
  %vector987.i = shufflevector <16 x double> %temp986.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1895 = fmul <16 x double> %1737, %vector987.i
  %1896 = fadd <16 x double> %1847, %1895
  %1897 = load double addrspace(3)* %274, align 8
  %temp988.i = insertelement <16 x double> undef, double %1897, i32 0
  %vector989.i = shufflevector <16 x double> %temp988.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1898 = fmul <16 x double> %1737, %vector989.i
  %1899 = fadd <16 x double> %1850, %1898
  %1900 = load double addrspace(3)* %276, align 8
  %temp990.i = insertelement <16 x double> undef, double %1900, i32 0
  %vector991.i = shufflevector <16 x double> %temp990.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1901 = fmul <16 x double> %1737, %vector991.i
  %1902 = fadd <16 x double> %1853, %1901
  %1903 = load double addrspace(3)* %278, align 8
  %temp992.i = insertelement <16 x double> undef, double %1903, i32 0
  %vector993.i = shufflevector <16 x double> %temp992.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1904 = fmul <16 x double> %1737, %vector993.i
  %1905 = fadd <16 x double> %1856, %1904
  %1906 = load double addrspace(3)* %280, align 8
  %temp994.i = insertelement <16 x double> undef, double %1906, i32 0
  %vector995.i = shufflevector <16 x double> %temp994.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1907 = fmul <16 x double> %1737, %vector995.i
  %1908 = fadd <16 x double> %1859, %1907
  %1909 = load double addrspace(3)* %282, align 8
  %temp996.i = insertelement <16 x double> undef, double %1909, i32 0
  %vector997.i = shufflevector <16 x double> %temp996.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1910 = fmul <16 x double> %1737, %vector997.i
  %1911 = fadd <16 x double> %1862, %1910
  %1912 = load double addrspace(3)* %284, align 8
  %temp998.i = insertelement <16 x double> undef, double %1912, i32 0
  %vector999.i = shufflevector <16 x double> %temp998.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1913 = fmul <16 x double> %1737, %vector999.i
  %1914 = fadd <16 x double> %1865, %1913
  %1915 = load double addrspace(3)* %286, align 8
  %temp1000.i = insertelement <16 x double> undef, double %1915, i32 0
  %vector1001.i = shufflevector <16 x double> %temp1000.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1916 = fmul <16 x double> %1737, %vector1001.i
  %1917 = fadd <16 x double> %1868, %1916
  %1918 = load double addrspace(3)* %288, align 8
  %temp1002.i = insertelement <16 x double> undef, double %1918, i32 0
  %vector1003.i = shufflevector <16 x double> %temp1002.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1919 = fmul <16 x double> %1737, %vector1003.i
  %1920 = fadd <16 x double> %1871, %1919
  %1921 = load double addrspace(3)* %290, align 8
  %temp1004.i = insertelement <16 x double> undef, double %1921, i32 0
  %vector1005.i = shufflevector <16 x double> %temp1004.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1922 = fmul <16 x double> %1737, %vector1005.i
  %1923 = fadd <16 x double> %1874, %1922
  %1924 = load double addrspace(3)* %292, align 8
  %temp1006.i = insertelement <16 x double> undef, double %1924, i32 0
  %vector1007.i = shufflevector <16 x double> %temp1006.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1925 = fmul <16 x double> %1737, %vector1007.i
  %1926 = fadd <16 x double> %1877, %1925
  %1927 = load double addrspace(3)* %294, align 8
  %temp1008.i = insertelement <16 x double> undef, double %1927, i32 0
  %vector1009.i = shufflevector <16 x double> %temp1008.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1928 = fmul <16 x double> %1737, %vector1009.i
  %1929 = fadd <16 x double> %1880, %1928
  %1930 = load double addrspace(3)* %296, align 8
  %temp1010.i = insertelement <16 x double> undef, double %1930, i32 0
  %vector1011.i = shufflevector <16 x double> %temp1010.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1931 = fmul <16 x double> %1737, %vector1011.i
  %1932 = fadd <16 x double> %1883, %1931
  %"&(pSB[currWI].offset)2404.i" = add nuw i64 %CurrSBIndex..3.i, 9264
  %"&pSB[currWI].offset2405.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2404.i"
  %CastToValueType2406.i = bitcast i8* %"&pSB[currWI].offset2405.i" to double addrspace(1)**
  %loadedValue2407.i = load double addrspace(1)** %CastToValueType2406.i, align 8
  %ptrTypeCast1012.i = bitcast double addrspace(1)* %loadedValue2407.i to <16 x double> addrspace(1)*
  %1933 = load <16 x double> addrspace(1)* %ptrTypeCast1012.i, align 8
  %1934 = load double addrspace(3)* %298, align 16
  %temp1013.i = insertelement <16 x double> undef, double %1934, i32 0
  %vector1014.i = shufflevector <16 x double> %temp1013.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1935 = fmul <16 x double> %1786, %vector1014.i
  %1936 = fadd <16 x double> %1887, %1935
  %1937 = load double addrspace(3)* %300, align 8
  %temp1015.i = insertelement <16 x double> undef, double %1937, i32 0
  %vector1016.i = shufflevector <16 x double> %temp1015.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1938 = fmul <16 x double> %1786, %vector1016.i
  %1939 = fadd <16 x double> %1890, %1938
  %1940 = load double addrspace(3)* %302, align 16
  %temp1017.i = insertelement <16 x double> undef, double %1940, i32 0
  %vector1018.i = shufflevector <16 x double> %temp1017.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1941 = fmul <16 x double> %1786, %vector1018.i
  %1942 = fadd <16 x double> %1893, %1941
  %1943 = load double addrspace(3)* %304, align 8
  %temp1019.i = insertelement <16 x double> undef, double %1943, i32 0
  %vector1020.i = shufflevector <16 x double> %temp1019.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1944 = fmul <16 x double> %1786, %vector1020.i
  %1945 = fadd <16 x double> %1896, %1944
  %1946 = load double addrspace(3)* %306, align 16
  %temp1021.i = insertelement <16 x double> undef, double %1946, i32 0
  %vector1022.i = shufflevector <16 x double> %temp1021.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1947 = fmul <16 x double> %1786, %vector1022.i
  %1948 = fadd <16 x double> %1899, %1947
  %1949 = load double addrspace(3)* %308, align 8
  %temp1023.i = insertelement <16 x double> undef, double %1949, i32 0
  %vector1024.i = shufflevector <16 x double> %temp1023.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1950 = fmul <16 x double> %1786, %vector1024.i
  %1951 = fadd <16 x double> %1902, %1950
  %1952 = load double addrspace(3)* %310, align 16
  %temp1025.i = insertelement <16 x double> undef, double %1952, i32 0
  %vector1026.i = shufflevector <16 x double> %temp1025.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1953 = fmul <16 x double> %1786, %vector1026.i
  %1954 = fadd <16 x double> %1905, %1953
  %1955 = load double addrspace(3)* %312, align 8
  %temp1027.i = insertelement <16 x double> undef, double %1955, i32 0
  %vector1028.i = shufflevector <16 x double> %temp1027.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1956 = fmul <16 x double> %1786, %vector1028.i
  %1957 = fadd <16 x double> %1908, %1956
  %1958 = load double addrspace(3)* %314, align 16
  %temp1029.i = insertelement <16 x double> undef, double %1958, i32 0
  %vector1030.i = shufflevector <16 x double> %temp1029.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1959 = fmul <16 x double> %1786, %vector1030.i
  %1960 = fadd <16 x double> %1911, %1959
  %1961 = load double addrspace(3)* %316, align 8
  %temp1031.i = insertelement <16 x double> undef, double %1961, i32 0
  %vector1032.i = shufflevector <16 x double> %temp1031.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1962 = fmul <16 x double> %1786, %vector1032.i
  %1963 = fadd <16 x double> %1914, %1962
  %1964 = load double addrspace(3)* %318, align 16
  %temp1033.i = insertelement <16 x double> undef, double %1964, i32 0
  %vector1034.i = shufflevector <16 x double> %temp1033.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1965 = fmul <16 x double> %1786, %vector1034.i
  %1966 = fadd <16 x double> %1917, %1965
  %1967 = load double addrspace(3)* %320, align 8
  %temp1035.i = insertelement <16 x double> undef, double %1967, i32 0
  %vector1036.i = shufflevector <16 x double> %temp1035.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1968 = fmul <16 x double> %1786, %vector1036.i
  %1969 = fadd <16 x double> %1920, %1968
  %1970 = load double addrspace(3)* %322, align 16
  %temp1037.i = insertelement <16 x double> undef, double %1970, i32 0
  %vector1038.i = shufflevector <16 x double> %temp1037.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1971 = fmul <16 x double> %1786, %vector1038.i
  %1972 = fadd <16 x double> %1923, %1971
  %1973 = load double addrspace(3)* %324, align 8
  %temp1039.i = insertelement <16 x double> undef, double %1973, i32 0
  %vector1040.i = shufflevector <16 x double> %temp1039.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1974 = fmul <16 x double> %1786, %vector1040.i
  %1975 = fadd <16 x double> %1926, %1974
  %1976 = load double addrspace(3)* %326, align 16
  %temp1041.i = insertelement <16 x double> undef, double %1976, i32 0
  %vector1042.i = shufflevector <16 x double> %temp1041.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1977 = fmul <16 x double> %1786, %vector1042.i
  %1978 = fadd <16 x double> %1929, %1977
  %1979 = load double addrspace(3)* %328, align 8
  %temp1043.i = insertelement <16 x double> undef, double %1979, i32 0
  %vector1044.i = shufflevector <16 x double> %temp1043.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1980 = fmul <16 x double> %1786, %vector1044.i
  %1981 = fadd <16 x double> %1932, %1980
  %"&(pSB[currWI].offset)2395.i" = add nuw i64 %CurrSBIndex..3.i, 9256
  %"&pSB[currWI].offset2396.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2395.i"
  %CastToValueType2397.i = bitcast i8* %"&pSB[currWI].offset2396.i" to double addrspace(1)**
  %loadedValue2398.i = load double addrspace(1)** %CastToValueType2397.i, align 8
  %ptrTypeCast1045.i = bitcast double addrspace(1)* %loadedValue2398.i to <16 x double> addrspace(1)*
  %1982 = load <16 x double> addrspace(1)* %ptrTypeCast1045.i, align 8
  %1983 = load double addrspace(3)* %330, align 8
  %temp1046.i = insertelement <16 x double> undef, double %1983, i32 0
  %vector1047.i = shufflevector <16 x double> %temp1046.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1984 = fmul <16 x double> %1835, %vector1047.i
  %1985 = fadd <16 x double> %1936, %1984
  %1986 = load double addrspace(3)* %332, align 8
  %temp1048.i = insertelement <16 x double> undef, double %1986, i32 0
  %vector1049.i = shufflevector <16 x double> %temp1048.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1987 = fmul <16 x double> %1835, %vector1049.i
  %1988 = fadd <16 x double> %1939, %1987
  %1989 = load double addrspace(3)* %334, align 8
  %temp1050.i = insertelement <16 x double> undef, double %1989, i32 0
  %vector1051.i = shufflevector <16 x double> %temp1050.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1990 = fmul <16 x double> %1835, %vector1051.i
  %1991 = fadd <16 x double> %1942, %1990
  %1992 = load double addrspace(3)* %336, align 8
  %temp1052.i = insertelement <16 x double> undef, double %1992, i32 0
  %vector1053.i = shufflevector <16 x double> %temp1052.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1993 = fmul <16 x double> %1835, %vector1053.i
  %1994 = fadd <16 x double> %1945, %1993
  %1995 = load double addrspace(3)* %338, align 8
  %temp1054.i = insertelement <16 x double> undef, double %1995, i32 0
  %vector1055.i = shufflevector <16 x double> %temp1054.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1996 = fmul <16 x double> %1835, %vector1055.i
  %1997 = fadd <16 x double> %1948, %1996
  %1998 = load double addrspace(3)* %340, align 8
  %temp1056.i = insertelement <16 x double> undef, double %1998, i32 0
  %vector1057.i = shufflevector <16 x double> %temp1056.i, <16 x double> undef, <16 x i32> zeroinitializer
  %1999 = fmul <16 x double> %1835, %vector1057.i
  %2000 = fadd <16 x double> %1951, %1999
  %2001 = load double addrspace(3)* %342, align 8
  %temp1058.i = insertelement <16 x double> undef, double %2001, i32 0
  %vector1059.i = shufflevector <16 x double> %temp1058.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2002 = fmul <16 x double> %1835, %vector1059.i
  %2003 = fadd <16 x double> %1954, %2002
  %2004 = load double addrspace(3)* %344, align 8
  %temp1060.i = insertelement <16 x double> undef, double %2004, i32 0
  %vector1061.i = shufflevector <16 x double> %temp1060.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2005 = fmul <16 x double> %1835, %vector1061.i
  %2006 = fadd <16 x double> %1957, %2005
  %2007 = load double addrspace(3)* %346, align 8
  %temp1062.i = insertelement <16 x double> undef, double %2007, i32 0
  %vector1063.i = shufflevector <16 x double> %temp1062.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2008 = fmul <16 x double> %1835, %vector1063.i
  %2009 = fadd <16 x double> %1960, %2008
  %2010 = load double addrspace(3)* %348, align 8
  %temp1064.i = insertelement <16 x double> undef, double %2010, i32 0
  %vector1065.i = shufflevector <16 x double> %temp1064.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2011 = fmul <16 x double> %1835, %vector1065.i
  %2012 = fadd <16 x double> %1963, %2011
  %2013 = load double addrspace(3)* %350, align 8
  %temp1066.i = insertelement <16 x double> undef, double %2013, i32 0
  %vector1067.i = shufflevector <16 x double> %temp1066.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2014 = fmul <16 x double> %1835, %vector1067.i
  %2015 = fadd <16 x double> %1966, %2014
  %2016 = load double addrspace(3)* %352, align 8
  %temp1068.i = insertelement <16 x double> undef, double %2016, i32 0
  %vector1069.i = shufflevector <16 x double> %temp1068.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2017 = fmul <16 x double> %1835, %vector1069.i
  %2018 = fadd <16 x double> %1969, %2017
  %2019 = load double addrspace(3)* %354, align 8
  %temp1070.i = insertelement <16 x double> undef, double %2019, i32 0
  %vector1071.i = shufflevector <16 x double> %temp1070.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2020 = fmul <16 x double> %1835, %vector1071.i
  %2021 = fadd <16 x double> %1972, %2020
  %2022 = load double addrspace(3)* %356, align 8
  %temp1072.i = insertelement <16 x double> undef, double %2022, i32 0
  %vector1073.i = shufflevector <16 x double> %temp1072.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2023 = fmul <16 x double> %1835, %vector1073.i
  %2024 = fadd <16 x double> %1975, %2023
  %2025 = load double addrspace(3)* %358, align 8
  %temp1074.i = insertelement <16 x double> undef, double %2025, i32 0
  %vector1075.i = shufflevector <16 x double> %temp1074.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2026 = fmul <16 x double> %1835, %vector1075.i
  %2027 = fadd <16 x double> %1978, %2026
  %2028 = load double addrspace(3)* %360, align 8
  %temp1076.i = insertelement <16 x double> undef, double %2028, i32 0
  %vector1077.i = shufflevector <16 x double> %temp1076.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2029 = fmul <16 x double> %1835, %vector1077.i
  %2030 = fadd <16 x double> %1981, %2029
  %"&(pSB[currWI].offset)2386.i" = add nuw i64 %CurrSBIndex..3.i, 9248
  %"&pSB[currWI].offset2387.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2386.i"
  %CastToValueType2388.i = bitcast i8* %"&pSB[currWI].offset2387.i" to double addrspace(1)**
  %loadedValue2389.i = load double addrspace(1)** %CastToValueType2388.i, align 8
  %ptrTypeCast1078.i = bitcast double addrspace(1)* %loadedValue2389.i to <16 x double> addrspace(1)*
  %2031 = load <16 x double> addrspace(1)* %ptrTypeCast1078.i, align 8
  %2032 = load double addrspace(3)* %362, align 16
  %temp1079.i = insertelement <16 x double> undef, double %2032, i32 0
  %vector1080.i = shufflevector <16 x double> %temp1079.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2033 = fmul <16 x double> %1884, %vector1080.i
  %2034 = fadd <16 x double> %1985, %2033
  %2035 = load double addrspace(3)* %364, align 8
  %temp1081.i = insertelement <16 x double> undef, double %2035, i32 0
  %vector1082.i = shufflevector <16 x double> %temp1081.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2036 = fmul <16 x double> %1884, %vector1082.i
  %2037 = fadd <16 x double> %1988, %2036
  %2038 = load double addrspace(3)* %366, align 16
  %temp1083.i = insertelement <16 x double> undef, double %2038, i32 0
  %vector1084.i = shufflevector <16 x double> %temp1083.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2039 = fmul <16 x double> %1884, %vector1084.i
  %2040 = fadd <16 x double> %1991, %2039
  %2041 = load double addrspace(3)* %368, align 8
  %temp1085.i = insertelement <16 x double> undef, double %2041, i32 0
  %vector1086.i = shufflevector <16 x double> %temp1085.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2042 = fmul <16 x double> %1884, %vector1086.i
  %2043 = fadd <16 x double> %1994, %2042
  %2044 = load double addrspace(3)* %370, align 16
  %temp1087.i = insertelement <16 x double> undef, double %2044, i32 0
  %vector1088.i = shufflevector <16 x double> %temp1087.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2045 = fmul <16 x double> %1884, %vector1088.i
  %2046 = fadd <16 x double> %1997, %2045
  %2047 = load double addrspace(3)* %372, align 8
  %temp1089.i = insertelement <16 x double> undef, double %2047, i32 0
  %vector1090.i = shufflevector <16 x double> %temp1089.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2048 = fmul <16 x double> %1884, %vector1090.i
  %2049 = fadd <16 x double> %2000, %2048
  %2050 = load double addrspace(3)* %374, align 16
  %temp1091.i = insertelement <16 x double> undef, double %2050, i32 0
  %vector1092.i = shufflevector <16 x double> %temp1091.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2051 = fmul <16 x double> %1884, %vector1092.i
  %2052 = fadd <16 x double> %2003, %2051
  %2053 = load double addrspace(3)* %376, align 8
  %temp1093.i = insertelement <16 x double> undef, double %2053, i32 0
  %vector1094.i = shufflevector <16 x double> %temp1093.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2054 = fmul <16 x double> %1884, %vector1094.i
  %2055 = fadd <16 x double> %2006, %2054
  %2056 = load double addrspace(3)* %378, align 16
  %temp1095.i = insertelement <16 x double> undef, double %2056, i32 0
  %vector1096.i = shufflevector <16 x double> %temp1095.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2057 = fmul <16 x double> %1884, %vector1096.i
  %2058 = fadd <16 x double> %2009, %2057
  %2059 = load double addrspace(3)* %380, align 8
  %temp1097.i = insertelement <16 x double> undef, double %2059, i32 0
  %vector1098.i = shufflevector <16 x double> %temp1097.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2060 = fmul <16 x double> %1884, %vector1098.i
  %2061 = fadd <16 x double> %2012, %2060
  %2062 = load double addrspace(3)* %382, align 16
  %temp1099.i = insertelement <16 x double> undef, double %2062, i32 0
  %vector1100.i = shufflevector <16 x double> %temp1099.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2063 = fmul <16 x double> %1884, %vector1100.i
  %2064 = fadd <16 x double> %2015, %2063
  %2065 = load double addrspace(3)* %384, align 8
  %temp1101.i = insertelement <16 x double> undef, double %2065, i32 0
  %vector1102.i = shufflevector <16 x double> %temp1101.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2066 = fmul <16 x double> %1884, %vector1102.i
  %2067 = fadd <16 x double> %2018, %2066
  %2068 = load double addrspace(3)* %386, align 16
  %temp1103.i = insertelement <16 x double> undef, double %2068, i32 0
  %vector1104.i = shufflevector <16 x double> %temp1103.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2069 = fmul <16 x double> %1884, %vector1104.i
  %2070 = fadd <16 x double> %2021, %2069
  %2071 = load double addrspace(3)* %388, align 8
  %temp1105.i = insertelement <16 x double> undef, double %2071, i32 0
  %vector1106.i = shufflevector <16 x double> %temp1105.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2072 = fmul <16 x double> %1884, %vector1106.i
  %2073 = fadd <16 x double> %2024, %2072
  %2074 = load double addrspace(3)* %390, align 16
  %temp1107.i = insertelement <16 x double> undef, double %2074, i32 0
  %vector1108.i = shufflevector <16 x double> %temp1107.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2075 = fmul <16 x double> %1884, %vector1108.i
  %2076 = fadd <16 x double> %2027, %2075
  %2077 = load double addrspace(3)* %392, align 8
  %temp1109.i = insertelement <16 x double> undef, double %2077, i32 0
  %vector1110.i = shufflevector <16 x double> %temp1109.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2078 = fmul <16 x double> %1884, %vector1110.i
  %2079 = fadd <16 x double> %2030, %2078
  %"&(pSB[currWI].offset)2377.i" = add nuw i64 %CurrSBIndex..3.i, 9240
  %"&pSB[currWI].offset2378.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2377.i"
  %CastToValueType2379.i = bitcast i8* %"&pSB[currWI].offset2378.i" to double addrspace(1)**
  %loadedValue2380.i = load double addrspace(1)** %CastToValueType2379.i, align 8
  %ptrTypeCast1111.i = bitcast double addrspace(1)* %loadedValue2380.i to <16 x double> addrspace(1)*
  %2080 = load <16 x double> addrspace(1)* %ptrTypeCast1111.i, align 8
  %2081 = load double addrspace(3)* %394, align 8
  %temp1112.i = insertelement <16 x double> undef, double %2081, i32 0
  %vector1113.i = shufflevector <16 x double> %temp1112.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2082 = fmul <16 x double> %1933, %vector1113.i
  %2083 = fadd <16 x double> %2034, %2082
  %2084 = load double addrspace(3)* %396, align 8
  %temp1114.i = insertelement <16 x double> undef, double %2084, i32 0
  %vector1115.i = shufflevector <16 x double> %temp1114.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2085 = fmul <16 x double> %1933, %vector1115.i
  %2086 = fadd <16 x double> %2037, %2085
  %2087 = load double addrspace(3)* %398, align 8
  %temp1116.i = insertelement <16 x double> undef, double %2087, i32 0
  %vector1117.i = shufflevector <16 x double> %temp1116.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2088 = fmul <16 x double> %1933, %vector1117.i
  %2089 = fadd <16 x double> %2040, %2088
  %2090 = load double addrspace(3)* %400, align 8
  %temp1118.i = insertelement <16 x double> undef, double %2090, i32 0
  %vector1119.i = shufflevector <16 x double> %temp1118.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2091 = fmul <16 x double> %1933, %vector1119.i
  %2092 = fadd <16 x double> %2043, %2091
  %2093 = load double addrspace(3)* %402, align 8
  %temp1120.i = insertelement <16 x double> undef, double %2093, i32 0
  %vector1121.i = shufflevector <16 x double> %temp1120.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2094 = fmul <16 x double> %1933, %vector1121.i
  %2095 = fadd <16 x double> %2046, %2094
  %2096 = load double addrspace(3)* %404, align 8
  %temp1122.i = insertelement <16 x double> undef, double %2096, i32 0
  %vector1123.i = shufflevector <16 x double> %temp1122.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2097 = fmul <16 x double> %1933, %vector1123.i
  %2098 = fadd <16 x double> %2049, %2097
  %2099 = load double addrspace(3)* %406, align 8
  %temp1124.i = insertelement <16 x double> undef, double %2099, i32 0
  %vector1125.i = shufflevector <16 x double> %temp1124.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2100 = fmul <16 x double> %1933, %vector1125.i
  %2101 = fadd <16 x double> %2052, %2100
  %2102 = load double addrspace(3)* %408, align 8
  %temp1126.i = insertelement <16 x double> undef, double %2102, i32 0
  %vector1127.i = shufflevector <16 x double> %temp1126.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2103 = fmul <16 x double> %1933, %vector1127.i
  %2104 = fadd <16 x double> %2055, %2103
  %2105 = load double addrspace(3)* %410, align 8
  %temp1128.i = insertelement <16 x double> undef, double %2105, i32 0
  %vector1129.i = shufflevector <16 x double> %temp1128.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2106 = fmul <16 x double> %1933, %vector1129.i
  %2107 = fadd <16 x double> %2058, %2106
  %2108 = load double addrspace(3)* %412, align 8
  %temp1130.i = insertelement <16 x double> undef, double %2108, i32 0
  %vector1131.i = shufflevector <16 x double> %temp1130.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2109 = fmul <16 x double> %1933, %vector1131.i
  %2110 = fadd <16 x double> %2061, %2109
  %2111 = load double addrspace(3)* %414, align 8
  %temp1132.i = insertelement <16 x double> undef, double %2111, i32 0
  %vector1133.i = shufflevector <16 x double> %temp1132.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2112 = fmul <16 x double> %1933, %vector1133.i
  %2113 = fadd <16 x double> %2064, %2112
  %2114 = load double addrspace(3)* %416, align 8
  %temp1134.i = insertelement <16 x double> undef, double %2114, i32 0
  %vector1135.i = shufflevector <16 x double> %temp1134.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2115 = fmul <16 x double> %1933, %vector1135.i
  %2116 = fadd <16 x double> %2067, %2115
  %2117 = load double addrspace(3)* %418, align 8
  %temp1136.i = insertelement <16 x double> undef, double %2117, i32 0
  %vector1137.i = shufflevector <16 x double> %temp1136.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2118 = fmul <16 x double> %1933, %vector1137.i
  %2119 = fadd <16 x double> %2070, %2118
  %2120 = load double addrspace(3)* %420, align 8
  %temp1138.i = insertelement <16 x double> undef, double %2120, i32 0
  %vector1139.i = shufflevector <16 x double> %temp1138.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2121 = fmul <16 x double> %1933, %vector1139.i
  %2122 = fadd <16 x double> %2073, %2121
  %2123 = load double addrspace(3)* %422, align 8
  %temp1140.i = insertelement <16 x double> undef, double %2123, i32 0
  %vector1141.i = shufflevector <16 x double> %temp1140.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2124 = fmul <16 x double> %1933, %vector1141.i
  %2125 = fadd <16 x double> %2076, %2124
  %2126 = load double addrspace(3)* %424, align 8
  %temp1142.i = insertelement <16 x double> undef, double %2126, i32 0
  %vector1143.i = shufflevector <16 x double> %temp1142.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2127 = fmul <16 x double> %1933, %vector1143.i
  %2128 = fadd <16 x double> %2079, %2127
  %"&(pSB[currWI].offset)2368.i" = add nuw i64 %CurrSBIndex..3.i, 9232
  %"&pSB[currWI].offset2369.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2368.i"
  %CastToValueType2370.i = bitcast i8* %"&pSB[currWI].offset2369.i" to double addrspace(1)**
  %loadedValue2371.i = load double addrspace(1)** %CastToValueType2370.i, align 8
  %ptrTypeCast1144.i = bitcast double addrspace(1)* %loadedValue2371.i to <16 x double> addrspace(1)*
  %2129 = load <16 x double> addrspace(1)* %ptrTypeCast1144.i, align 8
  %2130 = load double addrspace(3)* %426, align 16
  %temp1145.i = insertelement <16 x double> undef, double %2130, i32 0
  %vector1146.i = shufflevector <16 x double> %temp1145.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2131 = fmul <16 x double> %1982, %vector1146.i
  %2132 = fadd <16 x double> %2083, %2131
  %2133 = load double addrspace(3)* %428, align 8
  %temp1147.i = insertelement <16 x double> undef, double %2133, i32 0
  %vector1148.i = shufflevector <16 x double> %temp1147.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2134 = fmul <16 x double> %1982, %vector1148.i
  %2135 = fadd <16 x double> %2086, %2134
  %2136 = load double addrspace(3)* %430, align 16
  %temp1149.i = insertelement <16 x double> undef, double %2136, i32 0
  %vector1150.i = shufflevector <16 x double> %temp1149.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2137 = fmul <16 x double> %1982, %vector1150.i
  %2138 = fadd <16 x double> %2089, %2137
  %2139 = load double addrspace(3)* %432, align 8
  %temp1151.i = insertelement <16 x double> undef, double %2139, i32 0
  %vector1152.i = shufflevector <16 x double> %temp1151.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2140 = fmul <16 x double> %1982, %vector1152.i
  %2141 = fadd <16 x double> %2092, %2140
  %2142 = load double addrspace(3)* %434, align 16
  %temp1153.i = insertelement <16 x double> undef, double %2142, i32 0
  %vector1154.i = shufflevector <16 x double> %temp1153.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2143 = fmul <16 x double> %1982, %vector1154.i
  %2144 = fadd <16 x double> %2095, %2143
  %2145 = load double addrspace(3)* %436, align 8
  %temp1155.i = insertelement <16 x double> undef, double %2145, i32 0
  %vector1156.i = shufflevector <16 x double> %temp1155.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2146 = fmul <16 x double> %1982, %vector1156.i
  %2147 = fadd <16 x double> %2098, %2146
  %2148 = load double addrspace(3)* %438, align 16
  %temp1157.i = insertelement <16 x double> undef, double %2148, i32 0
  %vector1158.i = shufflevector <16 x double> %temp1157.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2149 = fmul <16 x double> %1982, %vector1158.i
  %2150 = fadd <16 x double> %2101, %2149
  %2151 = load double addrspace(3)* %440, align 8
  %temp1159.i = insertelement <16 x double> undef, double %2151, i32 0
  %vector1160.i = shufflevector <16 x double> %temp1159.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2152 = fmul <16 x double> %1982, %vector1160.i
  %2153 = fadd <16 x double> %2104, %2152
  %2154 = load double addrspace(3)* %442, align 16
  %temp1161.i = insertelement <16 x double> undef, double %2154, i32 0
  %vector1162.i = shufflevector <16 x double> %temp1161.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2155 = fmul <16 x double> %1982, %vector1162.i
  %2156 = fadd <16 x double> %2107, %2155
  %2157 = load double addrspace(3)* %444, align 8
  %temp1163.i = insertelement <16 x double> undef, double %2157, i32 0
  %vector1164.i = shufflevector <16 x double> %temp1163.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2158 = fmul <16 x double> %1982, %vector1164.i
  %2159 = fadd <16 x double> %2110, %2158
  %2160 = load double addrspace(3)* %446, align 16
  %temp1165.i = insertelement <16 x double> undef, double %2160, i32 0
  %vector1166.i = shufflevector <16 x double> %temp1165.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2161 = fmul <16 x double> %1982, %vector1166.i
  %2162 = fadd <16 x double> %2113, %2161
  %2163 = load double addrspace(3)* %448, align 8
  %temp1167.i = insertelement <16 x double> undef, double %2163, i32 0
  %vector1168.i = shufflevector <16 x double> %temp1167.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2164 = fmul <16 x double> %1982, %vector1168.i
  %2165 = fadd <16 x double> %2116, %2164
  %2166 = load double addrspace(3)* %450, align 16
  %temp1169.i = insertelement <16 x double> undef, double %2166, i32 0
  %vector1170.i = shufflevector <16 x double> %temp1169.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2167 = fmul <16 x double> %1982, %vector1170.i
  %2168 = fadd <16 x double> %2119, %2167
  %2169 = load double addrspace(3)* %452, align 8
  %temp1171.i = insertelement <16 x double> undef, double %2169, i32 0
  %vector1172.i = shufflevector <16 x double> %temp1171.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2170 = fmul <16 x double> %1982, %vector1172.i
  %2171 = fadd <16 x double> %2122, %2170
  %2172 = load double addrspace(3)* %454, align 16
  %temp1173.i = insertelement <16 x double> undef, double %2172, i32 0
  %vector1174.i = shufflevector <16 x double> %temp1173.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2173 = fmul <16 x double> %1982, %vector1174.i
  %2174 = fadd <16 x double> %2125, %2173
  %2175 = load double addrspace(3)* %456, align 8
  %temp1175.i = insertelement <16 x double> undef, double %2175, i32 0
  %vector1176.i = shufflevector <16 x double> %temp1175.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2176 = fmul <16 x double> %1982, %vector1176.i
  %2177 = fadd <16 x double> %2128, %2176
  %2178 = load double addrspace(3)* %458, align 8
  %temp1177.i = insertelement <16 x double> undef, double %2178, i32 0
  %vector1178.i = shufflevector <16 x double> %temp1177.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2179 = fmul <16 x double> %2031, %vector1178.i
  %2180 = fadd <16 x double> %2132, %2179
  %2181 = load double addrspace(3)* %460, align 8
  %temp1179.i = insertelement <16 x double> undef, double %2181, i32 0
  %vector1180.i = shufflevector <16 x double> %temp1179.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2182 = fmul <16 x double> %2031, %vector1180.i
  %2183 = fadd <16 x double> %2135, %2182
  %2184 = load double addrspace(3)* %462, align 8
  %temp1181.i = insertelement <16 x double> undef, double %2184, i32 0
  %vector1182.i = shufflevector <16 x double> %temp1181.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2185 = fmul <16 x double> %2031, %vector1182.i
  %2186 = fadd <16 x double> %2138, %2185
  %2187 = load double addrspace(3)* %464, align 8
  %temp1183.i = insertelement <16 x double> undef, double %2187, i32 0
  %vector1184.i = shufflevector <16 x double> %temp1183.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2188 = fmul <16 x double> %2031, %vector1184.i
  %2189 = fadd <16 x double> %2141, %2188
  %2190 = load double addrspace(3)* %466, align 8
  %temp1185.i = insertelement <16 x double> undef, double %2190, i32 0
  %vector1186.i = shufflevector <16 x double> %temp1185.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2191 = fmul <16 x double> %2031, %vector1186.i
  %2192 = fadd <16 x double> %2144, %2191
  %2193 = load double addrspace(3)* %468, align 8
  %temp1187.i = insertelement <16 x double> undef, double %2193, i32 0
  %vector1188.i = shufflevector <16 x double> %temp1187.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2194 = fmul <16 x double> %2031, %vector1188.i
  %2195 = fadd <16 x double> %2147, %2194
  %2196 = load double addrspace(3)* %470, align 8
  %temp1189.i = insertelement <16 x double> undef, double %2196, i32 0
  %vector1190.i = shufflevector <16 x double> %temp1189.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2197 = fmul <16 x double> %2031, %vector1190.i
  %2198 = fadd <16 x double> %2150, %2197
  %2199 = load double addrspace(3)* %472, align 8
  %temp1191.i = insertelement <16 x double> undef, double %2199, i32 0
  %vector1192.i = shufflevector <16 x double> %temp1191.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2200 = fmul <16 x double> %2031, %vector1192.i
  %2201 = fadd <16 x double> %2153, %2200
  %2202 = load double addrspace(3)* %474, align 8
  %temp1193.i = insertelement <16 x double> undef, double %2202, i32 0
  %vector1194.i = shufflevector <16 x double> %temp1193.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2203 = fmul <16 x double> %2031, %vector1194.i
  %2204 = fadd <16 x double> %2156, %2203
  %2205 = load double addrspace(3)* %476, align 8
  %temp1195.i = insertelement <16 x double> undef, double %2205, i32 0
  %vector1196.i = shufflevector <16 x double> %temp1195.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2206 = fmul <16 x double> %2031, %vector1196.i
  %2207 = fadd <16 x double> %2159, %2206
  %2208 = load double addrspace(3)* %478, align 8
  %temp1197.i = insertelement <16 x double> undef, double %2208, i32 0
  %vector1198.i = shufflevector <16 x double> %temp1197.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2209 = fmul <16 x double> %2031, %vector1198.i
  %2210 = fadd <16 x double> %2162, %2209
  %2211 = load double addrspace(3)* %480, align 8
  %temp1199.i = insertelement <16 x double> undef, double %2211, i32 0
  %vector1200.i = shufflevector <16 x double> %temp1199.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2212 = fmul <16 x double> %2031, %vector1200.i
  %2213 = fadd <16 x double> %2165, %2212
  %2214 = load double addrspace(3)* %482, align 8
  %temp1201.i = insertelement <16 x double> undef, double %2214, i32 0
  %vector1202.i = shufflevector <16 x double> %temp1201.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2215 = fmul <16 x double> %2031, %vector1202.i
  %2216 = fadd <16 x double> %2168, %2215
  %2217 = load double addrspace(3)* %484, align 8
  %temp1203.i = insertelement <16 x double> undef, double %2217, i32 0
  %vector1204.i = shufflevector <16 x double> %temp1203.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2218 = fmul <16 x double> %2031, %vector1204.i
  %2219 = fadd <16 x double> %2171, %2218
  %2220 = load double addrspace(3)* %486, align 8
  %temp1205.i = insertelement <16 x double> undef, double %2220, i32 0
  %vector1206.i = shufflevector <16 x double> %temp1205.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2221 = fmul <16 x double> %2031, %vector1206.i
  %2222 = fadd <16 x double> %2174, %2221
  %2223 = load double addrspace(3)* %488, align 8
  %temp1207.i = insertelement <16 x double> undef, double %2223, i32 0
  %vector1208.i = shufflevector <16 x double> %temp1207.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2224 = fmul <16 x double> %2031, %vector1208.i
  %2225 = fadd <16 x double> %2177, %2224
  %2226 = load double addrspace(3)* %490, align 16
  %temp1209.i = insertelement <16 x double> undef, double %2226, i32 0
  %vector1210.i = shufflevector <16 x double> %temp1209.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2227 = fmul <16 x double> %2080, %vector1210.i
  %2228 = fadd <16 x double> %2180, %2227
  %2229 = load double addrspace(3)* %492, align 8
  %temp1211.i = insertelement <16 x double> undef, double %2229, i32 0
  %vector1212.i = shufflevector <16 x double> %temp1211.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2230 = fmul <16 x double> %2080, %vector1212.i
  %2231 = fadd <16 x double> %2183, %2230
  %2232 = load double addrspace(3)* %494, align 16
  %temp1213.i = insertelement <16 x double> undef, double %2232, i32 0
  %vector1214.i = shufflevector <16 x double> %temp1213.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2233 = fmul <16 x double> %2080, %vector1214.i
  %2234 = fadd <16 x double> %2186, %2233
  %2235 = load double addrspace(3)* %496, align 8
  %temp1215.i = insertelement <16 x double> undef, double %2235, i32 0
  %vector1216.i = shufflevector <16 x double> %temp1215.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2236 = fmul <16 x double> %2080, %vector1216.i
  %2237 = fadd <16 x double> %2189, %2236
  %2238 = load double addrspace(3)* %498, align 16
  %temp1217.i = insertelement <16 x double> undef, double %2238, i32 0
  %vector1218.i = shufflevector <16 x double> %temp1217.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2239 = fmul <16 x double> %2080, %vector1218.i
  %2240 = fadd <16 x double> %2192, %2239
  %2241 = load double addrspace(3)* %500, align 8
  %temp1219.i = insertelement <16 x double> undef, double %2241, i32 0
  %vector1220.i = shufflevector <16 x double> %temp1219.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2242 = fmul <16 x double> %2080, %vector1220.i
  %2243 = fadd <16 x double> %2195, %2242
  %2244 = load double addrspace(3)* %502, align 16
  %temp1221.i = insertelement <16 x double> undef, double %2244, i32 0
  %vector1222.i = shufflevector <16 x double> %temp1221.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2245 = fmul <16 x double> %2080, %vector1222.i
  %2246 = fadd <16 x double> %2198, %2245
  %2247 = load double addrspace(3)* %504, align 8
  %temp1223.i = insertelement <16 x double> undef, double %2247, i32 0
  %vector1224.i = shufflevector <16 x double> %temp1223.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2248 = fmul <16 x double> %2080, %vector1224.i
  %2249 = fadd <16 x double> %2201, %2248
  %2250 = load double addrspace(3)* %506, align 16
  %temp1225.i = insertelement <16 x double> undef, double %2250, i32 0
  %vector1226.i = shufflevector <16 x double> %temp1225.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2251 = fmul <16 x double> %2080, %vector1226.i
  %2252 = fadd <16 x double> %2204, %2251
  %2253 = load double addrspace(3)* %508, align 8
  %temp1227.i = insertelement <16 x double> undef, double %2253, i32 0
  %vector1228.i = shufflevector <16 x double> %temp1227.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2254 = fmul <16 x double> %2080, %vector1228.i
  %2255 = fadd <16 x double> %2207, %2254
  %2256 = load double addrspace(3)* %510, align 16
  %temp1229.i = insertelement <16 x double> undef, double %2256, i32 0
  %vector1230.i = shufflevector <16 x double> %temp1229.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2257 = fmul <16 x double> %2080, %vector1230.i
  %2258 = fadd <16 x double> %2210, %2257
  %2259 = load double addrspace(3)* %512, align 8
  %temp1231.i = insertelement <16 x double> undef, double %2259, i32 0
  %vector1232.i = shufflevector <16 x double> %temp1231.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2260 = fmul <16 x double> %2080, %vector1232.i
  %2261 = fadd <16 x double> %2213, %2260
  %2262 = load double addrspace(3)* %514, align 16
  %temp1233.i = insertelement <16 x double> undef, double %2262, i32 0
  %vector1234.i = shufflevector <16 x double> %temp1233.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2263 = fmul <16 x double> %2080, %vector1234.i
  %2264 = fadd <16 x double> %2216, %2263
  %2265 = load double addrspace(3)* %516, align 8
  %temp1235.i = insertelement <16 x double> undef, double %2265, i32 0
  %vector1236.i = shufflevector <16 x double> %temp1235.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2266 = fmul <16 x double> %2080, %vector1236.i
  %2267 = fadd <16 x double> %2219, %2266
  %2268 = load double addrspace(3)* %518, align 16
  %temp1237.i = insertelement <16 x double> undef, double %2268, i32 0
  %vector1238.i = shufflevector <16 x double> %temp1237.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2269 = fmul <16 x double> %2080, %vector1238.i
  %2270 = fadd <16 x double> %2222, %2269
  %2271 = load double addrspace(3)* %520, align 8
  %temp1239.i = insertelement <16 x double> undef, double %2271, i32 0
  %vector1240.i = shufflevector <16 x double> %temp1239.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2272 = fmul <16 x double> %2080, %vector1240.i
  %2273 = fadd <16 x double> %2225, %2272
  %2274 = load double addrspace(3)* %522, align 8
  %temp1241.i = insertelement <16 x double> undef, double %2274, i32 0
  %vector1242.i = shufflevector <16 x double> %temp1241.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2275 = fmul <16 x double> %2129, %vector1242.i
  %2276 = fadd <16 x double> %2228, %2275
  %extract1243.i = extractelement <16 x double> %2276, i32 0
  %extract1244.i = extractelement <16 x double> %2276, i32 1
  %extract1245.i = extractelement <16 x double> %2276, i32 2
  %extract1246.i = extractelement <16 x double> %2276, i32 3
  %extract1247.i = extractelement <16 x double> %2276, i32 4
  %extract1248.i = extractelement <16 x double> %2276, i32 5
  %extract1249.i = extractelement <16 x double> %2276, i32 6
  %extract1250.i = extractelement <16 x double> %2276, i32 7
  %extract1251.i = extractelement <16 x double> %2276, i32 8
  %extract1252.i = extractelement <16 x double> %2276, i32 9
  %extract1253.i = extractelement <16 x double> %2276, i32 10
  %extract1254.i = extractelement <16 x double> %2276, i32 11
  %extract1255.i = extractelement <16 x double> %2276, i32 12
  %extract1256.i = extractelement <16 x double> %2276, i32 13
  %extract1257.i = extractelement <16 x double> %2276, i32 14
  %extract1258.i = extractelement <16 x double> %2276, i32 15
  store double %extract1243.i, double* %762, align 16
  store double %extract1244.i, double* %763, align 16
  store double %extract1245.i, double* %764, align 16
  store double %extract1246.i, double* %765, align 16
  store double %extract1247.i, double* %766, align 16
  store double %extract1248.i, double* %767, align 16
  store double %extract1249.i, double* %768, align 16
  store double %extract1250.i, double* %769, align 16
  store double %extract1251.i, double* %770, align 16
  store double %extract1252.i, double* %771, align 16
  store double %extract1253.i, double* %772, align 16
  store double %extract1254.i, double* %773, align 16
  store double %extract1255.i, double* %774, align 16
  store double %extract1256.i, double* %775, align 16
  store double %extract1257.i, double* %776, align 16
  store double %extract1258.i, double* %777, align 16
  %2277 = load double addrspace(3)* %524, align 8
  %temp1259.i = insertelement <16 x double> undef, double %2277, i32 0
  %vector1260.i = shufflevector <16 x double> %temp1259.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2278 = fmul <16 x double> %2129, %vector1260.i
  %2279 = fadd <16 x double> %2231, %2278
  %extract1261.i = extractelement <16 x double> %2279, i32 0
  %extract1262.i = extractelement <16 x double> %2279, i32 1
  %extract1263.i = extractelement <16 x double> %2279, i32 2
  %extract1264.i = extractelement <16 x double> %2279, i32 3
  %extract1265.i = extractelement <16 x double> %2279, i32 4
  %extract1266.i = extractelement <16 x double> %2279, i32 5
  %extract1267.i = extractelement <16 x double> %2279, i32 6
  %extract1268.i = extractelement <16 x double> %2279, i32 7
  %extract1269.i = extractelement <16 x double> %2279, i32 8
  %extract1270.i = extractelement <16 x double> %2279, i32 9
  %extract1271.i = extractelement <16 x double> %2279, i32 10
  %extract1272.i = extractelement <16 x double> %2279, i32 11
  %extract1273.i = extractelement <16 x double> %2279, i32 12
  %extract1274.i = extractelement <16 x double> %2279, i32 13
  %extract1275.i = extractelement <16 x double> %2279, i32 14
  %extract1276.i = extractelement <16 x double> %2279, i32 15
  store double %extract1261.i, double* %779, align 8
  store double %extract1262.i, double* %781, align 8
  store double %extract1263.i, double* %783, align 8
  store double %extract1264.i, double* %785, align 8
  store double %extract1265.i, double* %787, align 8
  store double %extract1266.i, double* %789, align 8
  store double %extract1267.i, double* %791, align 8
  store double %extract1268.i, double* %793, align 8
  store double %extract1269.i, double* %795, align 8
  store double %extract1270.i, double* %797, align 8
  store double %extract1271.i, double* %799, align 8
  store double %extract1272.i, double* %801, align 8
  store double %extract1273.i, double* %803, align 8
  store double %extract1274.i, double* %805, align 8
  store double %extract1275.i, double* %807, align 8
  store double %extract1276.i, double* %809, align 8
  %2280 = load double addrspace(3)* %526, align 8
  %temp1277.i = insertelement <16 x double> undef, double %2280, i32 0
  %vector1278.i = shufflevector <16 x double> %temp1277.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2281 = fmul <16 x double> %2129, %vector1278.i
  %2282 = fadd <16 x double> %2234, %2281
  %extract1279.i = extractelement <16 x double> %2282, i32 0
  %extract1280.i = extractelement <16 x double> %2282, i32 1
  %extract1281.i = extractelement <16 x double> %2282, i32 2
  %extract1282.i = extractelement <16 x double> %2282, i32 3
  %extract1283.i = extractelement <16 x double> %2282, i32 4
  %extract1284.i = extractelement <16 x double> %2282, i32 5
  %extract1285.i = extractelement <16 x double> %2282, i32 6
  %extract1286.i = extractelement <16 x double> %2282, i32 7
  %extract1287.i = extractelement <16 x double> %2282, i32 8
  %extract1288.i = extractelement <16 x double> %2282, i32 9
  %extract1289.i = extractelement <16 x double> %2282, i32 10
  %extract1290.i = extractelement <16 x double> %2282, i32 11
  %extract1291.i = extractelement <16 x double> %2282, i32 12
  %extract1292.i = extractelement <16 x double> %2282, i32 13
  %extract1293.i = extractelement <16 x double> %2282, i32 14
  %extract1294.i = extractelement <16 x double> %2282, i32 15
  store double %extract1279.i, double* %811, align 16
  store double %extract1280.i, double* %813, align 16
  store double %extract1281.i, double* %815, align 16
  store double %extract1282.i, double* %817, align 16
  store double %extract1283.i, double* %819, align 16
  store double %extract1284.i, double* %821, align 16
  store double %extract1285.i, double* %823, align 16
  store double %extract1286.i, double* %825, align 16
  store double %extract1287.i, double* %827, align 16
  store double %extract1288.i, double* %829, align 16
  store double %extract1289.i, double* %831, align 16
  store double %extract1290.i, double* %833, align 16
  store double %extract1291.i, double* %835, align 16
  store double %extract1292.i, double* %837, align 16
  store double %extract1293.i, double* %839, align 16
  store double %extract1294.i, double* %841, align 16
  %2283 = load double addrspace(3)* %528, align 8
  %temp1295.i = insertelement <16 x double> undef, double %2283, i32 0
  %vector1296.i = shufflevector <16 x double> %temp1295.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2284 = fmul <16 x double> %2129, %vector1296.i
  %2285 = fadd <16 x double> %2237, %2284
  %extract1297.i = extractelement <16 x double> %2285, i32 0
  %extract1298.i = extractelement <16 x double> %2285, i32 1
  %extract1299.i = extractelement <16 x double> %2285, i32 2
  %extract1300.i = extractelement <16 x double> %2285, i32 3
  %extract1301.i = extractelement <16 x double> %2285, i32 4
  %extract1302.i = extractelement <16 x double> %2285, i32 5
  %extract1303.i = extractelement <16 x double> %2285, i32 6
  %extract1304.i = extractelement <16 x double> %2285, i32 7
  %extract1305.i = extractelement <16 x double> %2285, i32 8
  %extract1306.i = extractelement <16 x double> %2285, i32 9
  %extract1307.i = extractelement <16 x double> %2285, i32 10
  %extract1308.i = extractelement <16 x double> %2285, i32 11
  %extract1309.i = extractelement <16 x double> %2285, i32 12
  %extract1310.i = extractelement <16 x double> %2285, i32 13
  %extract1311.i = extractelement <16 x double> %2285, i32 14
  %extract1312.i = extractelement <16 x double> %2285, i32 15
  store double %extract1297.i, double* %843, align 8
  store double %extract1298.i, double* %845, align 8
  store double %extract1299.i, double* %847, align 8
  store double %extract1300.i, double* %849, align 8
  store double %extract1301.i, double* %851, align 8
  store double %extract1302.i, double* %853, align 8
  store double %extract1303.i, double* %855, align 8
  store double %extract1304.i, double* %857, align 8
  store double %extract1305.i, double* %859, align 8
  store double %extract1306.i, double* %861, align 8
  store double %extract1307.i, double* %863, align 8
  store double %extract1308.i, double* %865, align 8
  store double %extract1309.i, double* %867, align 8
  store double %extract1310.i, double* %869, align 8
  store double %extract1311.i, double* %871, align 8
  store double %extract1312.i, double* %873, align 8
  %2286 = load double addrspace(3)* %530, align 8
  %temp1313.i = insertelement <16 x double> undef, double %2286, i32 0
  %vector1314.i = shufflevector <16 x double> %temp1313.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2287 = fmul <16 x double> %2129, %vector1314.i
  %2288 = fadd <16 x double> %2240, %2287
  %extract1315.i = extractelement <16 x double> %2288, i32 0
  %extract1316.i = extractelement <16 x double> %2288, i32 1
  %extract1317.i = extractelement <16 x double> %2288, i32 2
  %extract1318.i = extractelement <16 x double> %2288, i32 3
  %extract1319.i = extractelement <16 x double> %2288, i32 4
  %extract1320.i = extractelement <16 x double> %2288, i32 5
  %extract1321.i = extractelement <16 x double> %2288, i32 6
  %extract1322.i = extractelement <16 x double> %2288, i32 7
  %extract1323.i = extractelement <16 x double> %2288, i32 8
  %extract1324.i = extractelement <16 x double> %2288, i32 9
  %extract1325.i = extractelement <16 x double> %2288, i32 10
  %extract1326.i = extractelement <16 x double> %2288, i32 11
  %extract1327.i = extractelement <16 x double> %2288, i32 12
  %extract1328.i = extractelement <16 x double> %2288, i32 13
  %extract1329.i = extractelement <16 x double> %2288, i32 14
  %extract1330.i = extractelement <16 x double> %2288, i32 15
  store double %extract1315.i, double* %875, align 16
  store double %extract1316.i, double* %877, align 16
  store double %extract1317.i, double* %879, align 16
  store double %extract1318.i, double* %881, align 16
  store double %extract1319.i, double* %883, align 16
  store double %extract1320.i, double* %885, align 16
  store double %extract1321.i, double* %887, align 16
  store double %extract1322.i, double* %889, align 16
  store double %extract1323.i, double* %891, align 16
  store double %extract1324.i, double* %893, align 16
  store double %extract1325.i, double* %895, align 16
  store double %extract1326.i, double* %897, align 16
  store double %extract1327.i, double* %899, align 16
  store double %extract1328.i, double* %901, align 16
  store double %extract1329.i, double* %903, align 16
  store double %extract1330.i, double* %905, align 16
  %2289 = load double addrspace(3)* %532, align 8
  %temp1331.i = insertelement <16 x double> undef, double %2289, i32 0
  %vector1332.i = shufflevector <16 x double> %temp1331.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2290 = fmul <16 x double> %2129, %vector1332.i
  %2291 = fadd <16 x double> %2243, %2290
  %extract1333.i = extractelement <16 x double> %2291, i32 0
  %extract1334.i = extractelement <16 x double> %2291, i32 1
  %extract1335.i = extractelement <16 x double> %2291, i32 2
  %extract1336.i = extractelement <16 x double> %2291, i32 3
  %extract1337.i = extractelement <16 x double> %2291, i32 4
  %extract1338.i = extractelement <16 x double> %2291, i32 5
  %extract1339.i = extractelement <16 x double> %2291, i32 6
  %extract1340.i = extractelement <16 x double> %2291, i32 7
  %extract1341.i = extractelement <16 x double> %2291, i32 8
  %extract1342.i = extractelement <16 x double> %2291, i32 9
  %extract1343.i = extractelement <16 x double> %2291, i32 10
  %extract1344.i = extractelement <16 x double> %2291, i32 11
  %extract1345.i = extractelement <16 x double> %2291, i32 12
  %extract1346.i = extractelement <16 x double> %2291, i32 13
  %extract1347.i = extractelement <16 x double> %2291, i32 14
  %extract1348.i = extractelement <16 x double> %2291, i32 15
  store double %extract1333.i, double* %907, align 8
  store double %extract1334.i, double* %909, align 8
  store double %extract1335.i, double* %911, align 8
  store double %extract1336.i, double* %913, align 8
  store double %extract1337.i, double* %915, align 8
  store double %extract1338.i, double* %917, align 8
  store double %extract1339.i, double* %919, align 8
  store double %extract1340.i, double* %921, align 8
  store double %extract1341.i, double* %923, align 8
  store double %extract1342.i, double* %925, align 8
  store double %extract1343.i, double* %927, align 8
  store double %extract1344.i, double* %929, align 8
  store double %extract1345.i, double* %931, align 8
  store double %extract1346.i, double* %933, align 8
  store double %extract1347.i, double* %935, align 8
  store double %extract1348.i, double* %937, align 8
  %2292 = load double addrspace(3)* %534, align 8
  %temp1349.i = insertelement <16 x double> undef, double %2292, i32 0
  %vector1350.i = shufflevector <16 x double> %temp1349.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2293 = fmul <16 x double> %2129, %vector1350.i
  %2294 = fadd <16 x double> %2246, %2293
  %extract1351.i = extractelement <16 x double> %2294, i32 0
  %extract1352.i = extractelement <16 x double> %2294, i32 1
  %extract1353.i = extractelement <16 x double> %2294, i32 2
  %extract1354.i = extractelement <16 x double> %2294, i32 3
  %extract1355.i = extractelement <16 x double> %2294, i32 4
  %extract1356.i = extractelement <16 x double> %2294, i32 5
  %extract1357.i = extractelement <16 x double> %2294, i32 6
  %extract1358.i = extractelement <16 x double> %2294, i32 7
  %extract1359.i = extractelement <16 x double> %2294, i32 8
  %extract1360.i = extractelement <16 x double> %2294, i32 9
  %extract1361.i = extractelement <16 x double> %2294, i32 10
  %extract1362.i = extractelement <16 x double> %2294, i32 11
  %extract1363.i = extractelement <16 x double> %2294, i32 12
  %extract1364.i = extractelement <16 x double> %2294, i32 13
  %extract1365.i = extractelement <16 x double> %2294, i32 14
  %extract1366.i = extractelement <16 x double> %2294, i32 15
  store double %extract1351.i, double* %939, align 16
  store double %extract1352.i, double* %941, align 16
  store double %extract1353.i, double* %943, align 16
  store double %extract1354.i, double* %945, align 16
  store double %extract1355.i, double* %947, align 16
  store double %extract1356.i, double* %949, align 16
  store double %extract1357.i, double* %951, align 16
  store double %extract1358.i, double* %953, align 16
  store double %extract1359.i, double* %955, align 16
  store double %extract1360.i, double* %957, align 16
  store double %extract1361.i, double* %959, align 16
  store double %extract1362.i, double* %961, align 16
  store double %extract1363.i, double* %963, align 16
  store double %extract1364.i, double* %965, align 16
  store double %extract1365.i, double* %967, align 16
  store double %extract1366.i, double* %969, align 16
  %2295 = load double addrspace(3)* %536, align 8
  %temp1367.i = insertelement <16 x double> undef, double %2295, i32 0
  %vector1368.i = shufflevector <16 x double> %temp1367.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2296 = fmul <16 x double> %2129, %vector1368.i
  %2297 = fadd <16 x double> %2249, %2296
  %extract1369.i = extractelement <16 x double> %2297, i32 0
  %extract1370.i = extractelement <16 x double> %2297, i32 1
  %extract1371.i = extractelement <16 x double> %2297, i32 2
  %extract1372.i = extractelement <16 x double> %2297, i32 3
  %extract1373.i = extractelement <16 x double> %2297, i32 4
  %extract1374.i = extractelement <16 x double> %2297, i32 5
  %extract1375.i = extractelement <16 x double> %2297, i32 6
  %extract1376.i = extractelement <16 x double> %2297, i32 7
  %extract1377.i = extractelement <16 x double> %2297, i32 8
  %extract1378.i = extractelement <16 x double> %2297, i32 9
  %extract1379.i = extractelement <16 x double> %2297, i32 10
  %extract1380.i = extractelement <16 x double> %2297, i32 11
  %extract1381.i = extractelement <16 x double> %2297, i32 12
  %extract1382.i = extractelement <16 x double> %2297, i32 13
  %extract1383.i = extractelement <16 x double> %2297, i32 14
  %extract1384.i = extractelement <16 x double> %2297, i32 15
  store double %extract1369.i, double* %971, align 8
  store double %extract1370.i, double* %973, align 8
  store double %extract1371.i, double* %975, align 8
  store double %extract1372.i, double* %977, align 8
  store double %extract1373.i, double* %979, align 8
  store double %extract1374.i, double* %981, align 8
  store double %extract1375.i, double* %983, align 8
  store double %extract1376.i, double* %985, align 8
  store double %extract1377.i, double* %987, align 8
  store double %extract1378.i, double* %989, align 8
  store double %extract1379.i, double* %991, align 8
  store double %extract1380.i, double* %993, align 8
  store double %extract1381.i, double* %995, align 8
  store double %extract1382.i, double* %997, align 8
  store double %extract1383.i, double* %999, align 8
  store double %extract1384.i, double* %1001, align 8
  %2298 = load double addrspace(3)* %538, align 8
  %temp1385.i = insertelement <16 x double> undef, double %2298, i32 0
  %vector1386.i = shufflevector <16 x double> %temp1385.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2299 = fmul <16 x double> %2129, %vector1386.i
  %2300 = fadd <16 x double> %2252, %2299
  %extract1387.i = extractelement <16 x double> %2300, i32 0
  %extract1388.i = extractelement <16 x double> %2300, i32 1
  %extract1389.i = extractelement <16 x double> %2300, i32 2
  %extract1390.i = extractelement <16 x double> %2300, i32 3
  %extract1391.i = extractelement <16 x double> %2300, i32 4
  %extract1392.i = extractelement <16 x double> %2300, i32 5
  %extract1393.i = extractelement <16 x double> %2300, i32 6
  %extract1394.i = extractelement <16 x double> %2300, i32 7
  %extract1395.i = extractelement <16 x double> %2300, i32 8
  %extract1396.i = extractelement <16 x double> %2300, i32 9
  %extract1397.i = extractelement <16 x double> %2300, i32 10
  %extract1398.i = extractelement <16 x double> %2300, i32 11
  %extract1399.i = extractelement <16 x double> %2300, i32 12
  %extract1400.i = extractelement <16 x double> %2300, i32 13
  %extract1401.i = extractelement <16 x double> %2300, i32 14
  %extract1402.i = extractelement <16 x double> %2300, i32 15
  store double %extract1387.i, double* %1003, align 16
  store double %extract1388.i, double* %1005, align 16
  store double %extract1389.i, double* %1007, align 16
  store double %extract1390.i, double* %1009, align 16
  store double %extract1391.i, double* %1011, align 16
  store double %extract1392.i, double* %1013, align 16
  store double %extract1393.i, double* %1015, align 16
  store double %extract1394.i, double* %1017, align 16
  store double %extract1395.i, double* %1019, align 16
  store double %extract1396.i, double* %1021, align 16
  store double %extract1397.i, double* %1023, align 16
  store double %extract1398.i, double* %1025, align 16
  store double %extract1399.i, double* %1027, align 16
  store double %extract1400.i, double* %1029, align 16
  store double %extract1401.i, double* %1031, align 16
  store double %extract1402.i, double* %1033, align 16
  %2301 = load double addrspace(3)* %540, align 8
  %temp1403.i = insertelement <16 x double> undef, double %2301, i32 0
  %vector1404.i = shufflevector <16 x double> %temp1403.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2302 = fmul <16 x double> %2129, %vector1404.i
  %2303 = fadd <16 x double> %2255, %2302
  %extract1405.i = extractelement <16 x double> %2303, i32 0
  %extract1406.i = extractelement <16 x double> %2303, i32 1
  %extract1407.i = extractelement <16 x double> %2303, i32 2
  %extract1408.i = extractelement <16 x double> %2303, i32 3
  %extract1409.i = extractelement <16 x double> %2303, i32 4
  %extract1410.i = extractelement <16 x double> %2303, i32 5
  %extract1411.i = extractelement <16 x double> %2303, i32 6
  %extract1412.i = extractelement <16 x double> %2303, i32 7
  %extract1413.i = extractelement <16 x double> %2303, i32 8
  %extract1414.i = extractelement <16 x double> %2303, i32 9
  %extract1415.i = extractelement <16 x double> %2303, i32 10
  %extract1416.i = extractelement <16 x double> %2303, i32 11
  %extract1417.i = extractelement <16 x double> %2303, i32 12
  %extract1418.i = extractelement <16 x double> %2303, i32 13
  %extract1419.i = extractelement <16 x double> %2303, i32 14
  %extract1420.i = extractelement <16 x double> %2303, i32 15
  store double %extract1405.i, double* %1035, align 8
  store double %extract1406.i, double* %1037, align 8
  store double %extract1407.i, double* %1039, align 8
  store double %extract1408.i, double* %1041, align 8
  store double %extract1409.i, double* %1043, align 8
  store double %extract1410.i, double* %1045, align 8
  store double %extract1411.i, double* %1047, align 8
  store double %extract1412.i, double* %1049, align 8
  store double %extract1413.i, double* %1051, align 8
  store double %extract1414.i, double* %1053, align 8
  store double %extract1415.i, double* %1055, align 8
  store double %extract1416.i, double* %1057, align 8
  store double %extract1417.i, double* %1059, align 8
  store double %extract1418.i, double* %1061, align 8
  store double %extract1419.i, double* %1063, align 8
  store double %extract1420.i, double* %1065, align 8
  %2304 = load double addrspace(3)* %542, align 8
  %temp1421.i = insertelement <16 x double> undef, double %2304, i32 0
  %vector1422.i = shufflevector <16 x double> %temp1421.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2305 = fmul <16 x double> %2129, %vector1422.i
  %2306 = fadd <16 x double> %2258, %2305
  %extract1423.i = extractelement <16 x double> %2306, i32 0
  %extract1424.i = extractelement <16 x double> %2306, i32 1
  %extract1425.i = extractelement <16 x double> %2306, i32 2
  %extract1426.i = extractelement <16 x double> %2306, i32 3
  %extract1427.i = extractelement <16 x double> %2306, i32 4
  %extract1428.i = extractelement <16 x double> %2306, i32 5
  %extract1429.i = extractelement <16 x double> %2306, i32 6
  %extract1430.i = extractelement <16 x double> %2306, i32 7
  %extract1431.i = extractelement <16 x double> %2306, i32 8
  %extract1432.i = extractelement <16 x double> %2306, i32 9
  %extract1433.i = extractelement <16 x double> %2306, i32 10
  %extract1434.i = extractelement <16 x double> %2306, i32 11
  %extract1435.i = extractelement <16 x double> %2306, i32 12
  %extract1436.i = extractelement <16 x double> %2306, i32 13
  %extract1437.i = extractelement <16 x double> %2306, i32 14
  %extract1438.i = extractelement <16 x double> %2306, i32 15
  store double %extract1423.i, double* %1067, align 16
  store double %extract1424.i, double* %1069, align 16
  store double %extract1425.i, double* %1071, align 16
  store double %extract1426.i, double* %1073, align 16
  store double %extract1427.i, double* %1075, align 16
  store double %extract1428.i, double* %1077, align 16
  store double %extract1429.i, double* %1079, align 16
  store double %extract1430.i, double* %1081, align 16
  store double %extract1431.i, double* %1083, align 16
  store double %extract1432.i, double* %1085, align 16
  store double %extract1433.i, double* %1087, align 16
  store double %extract1434.i, double* %1089, align 16
  store double %extract1435.i, double* %1091, align 16
  store double %extract1436.i, double* %1093, align 16
  store double %extract1437.i, double* %1095, align 16
  store double %extract1438.i, double* %1097, align 16
  %2307 = load double addrspace(3)* %544, align 8
  %temp1439.i = insertelement <16 x double> undef, double %2307, i32 0
  %vector1440.i = shufflevector <16 x double> %temp1439.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2308 = fmul <16 x double> %2129, %vector1440.i
  %2309 = fadd <16 x double> %2261, %2308
  %extract1441.i = extractelement <16 x double> %2309, i32 0
  %extract1442.i = extractelement <16 x double> %2309, i32 1
  %extract1443.i = extractelement <16 x double> %2309, i32 2
  %extract1444.i = extractelement <16 x double> %2309, i32 3
  %extract1445.i = extractelement <16 x double> %2309, i32 4
  %extract1446.i = extractelement <16 x double> %2309, i32 5
  %extract1447.i = extractelement <16 x double> %2309, i32 6
  %extract1448.i = extractelement <16 x double> %2309, i32 7
  %extract1449.i = extractelement <16 x double> %2309, i32 8
  %extract1450.i = extractelement <16 x double> %2309, i32 9
  %extract1451.i = extractelement <16 x double> %2309, i32 10
  %extract1452.i = extractelement <16 x double> %2309, i32 11
  %extract1453.i = extractelement <16 x double> %2309, i32 12
  %extract1454.i = extractelement <16 x double> %2309, i32 13
  %extract1455.i = extractelement <16 x double> %2309, i32 14
  %extract1456.i = extractelement <16 x double> %2309, i32 15
  store double %extract1441.i, double* %1099, align 8
  store double %extract1442.i, double* %1101, align 8
  store double %extract1443.i, double* %1103, align 8
  store double %extract1444.i, double* %1105, align 8
  store double %extract1445.i, double* %1107, align 8
  store double %extract1446.i, double* %1109, align 8
  store double %extract1447.i, double* %1111, align 8
  store double %extract1448.i, double* %1113, align 8
  store double %extract1449.i, double* %1115, align 8
  store double %extract1450.i, double* %1117, align 8
  store double %extract1451.i, double* %1119, align 8
  store double %extract1452.i, double* %1121, align 8
  store double %extract1453.i, double* %1123, align 8
  store double %extract1454.i, double* %1125, align 8
  store double %extract1455.i, double* %1127, align 8
  store double %extract1456.i, double* %1129, align 8
  %2310 = load double addrspace(3)* %546, align 8
  %temp1457.i = insertelement <16 x double> undef, double %2310, i32 0
  %vector1458.i = shufflevector <16 x double> %temp1457.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2311 = fmul <16 x double> %2129, %vector1458.i
  %2312 = fadd <16 x double> %2264, %2311
  %extract1459.i = extractelement <16 x double> %2312, i32 0
  %extract1460.i = extractelement <16 x double> %2312, i32 1
  %extract1461.i = extractelement <16 x double> %2312, i32 2
  %extract1462.i = extractelement <16 x double> %2312, i32 3
  %extract1463.i = extractelement <16 x double> %2312, i32 4
  %extract1464.i = extractelement <16 x double> %2312, i32 5
  %extract1465.i = extractelement <16 x double> %2312, i32 6
  %extract1466.i = extractelement <16 x double> %2312, i32 7
  %extract1467.i = extractelement <16 x double> %2312, i32 8
  %extract1468.i = extractelement <16 x double> %2312, i32 9
  %extract1469.i = extractelement <16 x double> %2312, i32 10
  %extract1470.i = extractelement <16 x double> %2312, i32 11
  %extract1471.i = extractelement <16 x double> %2312, i32 12
  %extract1472.i = extractelement <16 x double> %2312, i32 13
  %extract1473.i = extractelement <16 x double> %2312, i32 14
  %extract1474.i = extractelement <16 x double> %2312, i32 15
  store double %extract1459.i, double* %1131, align 16
  store double %extract1460.i, double* %1133, align 16
  store double %extract1461.i, double* %1135, align 16
  store double %extract1462.i, double* %1137, align 16
  store double %extract1463.i, double* %1139, align 16
  store double %extract1464.i, double* %1141, align 16
  store double %extract1465.i, double* %1143, align 16
  store double %extract1466.i, double* %1145, align 16
  store double %extract1467.i, double* %1147, align 16
  store double %extract1468.i, double* %1149, align 16
  store double %extract1469.i, double* %1151, align 16
  store double %extract1470.i, double* %1153, align 16
  store double %extract1471.i, double* %1155, align 16
  store double %extract1472.i, double* %1157, align 16
  store double %extract1473.i, double* %1159, align 16
  store double %extract1474.i, double* %1161, align 16
  %2313 = load double addrspace(3)* %548, align 8
  %temp1475.i = insertelement <16 x double> undef, double %2313, i32 0
  %vector1476.i = shufflevector <16 x double> %temp1475.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2314 = fmul <16 x double> %2129, %vector1476.i
  %2315 = fadd <16 x double> %2267, %2314
  %extract1477.i = extractelement <16 x double> %2315, i32 0
  %extract1478.i = extractelement <16 x double> %2315, i32 1
  %extract1479.i = extractelement <16 x double> %2315, i32 2
  %extract1480.i = extractelement <16 x double> %2315, i32 3
  %extract1481.i = extractelement <16 x double> %2315, i32 4
  %extract1482.i = extractelement <16 x double> %2315, i32 5
  %extract1483.i = extractelement <16 x double> %2315, i32 6
  %extract1484.i = extractelement <16 x double> %2315, i32 7
  %extract1485.i = extractelement <16 x double> %2315, i32 8
  %extract1486.i = extractelement <16 x double> %2315, i32 9
  %extract1487.i = extractelement <16 x double> %2315, i32 10
  %extract1488.i = extractelement <16 x double> %2315, i32 11
  %extract1489.i = extractelement <16 x double> %2315, i32 12
  %extract1490.i = extractelement <16 x double> %2315, i32 13
  %extract1491.i = extractelement <16 x double> %2315, i32 14
  %extract1492.i = extractelement <16 x double> %2315, i32 15
  store double %extract1477.i, double* %1163, align 8
  store double %extract1478.i, double* %1165, align 8
  store double %extract1479.i, double* %1167, align 8
  store double %extract1480.i, double* %1169, align 8
  store double %extract1481.i, double* %1171, align 8
  store double %extract1482.i, double* %1173, align 8
  store double %extract1483.i, double* %1175, align 8
  store double %extract1484.i, double* %1177, align 8
  store double %extract1485.i, double* %1179, align 8
  store double %extract1486.i, double* %1181, align 8
  store double %extract1487.i, double* %1183, align 8
  store double %extract1488.i, double* %1185, align 8
  store double %extract1489.i, double* %1187, align 8
  store double %extract1490.i, double* %1189, align 8
  store double %extract1491.i, double* %1191, align 8
  store double %extract1492.i, double* %1193, align 8
  %2316 = load double addrspace(3)* %550, align 8
  %temp1493.i = insertelement <16 x double> undef, double %2316, i32 0
  %vector1494.i = shufflevector <16 x double> %temp1493.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2317 = fmul <16 x double> %2129, %vector1494.i
  %2318 = fadd <16 x double> %2270, %2317
  %extract1495.i = extractelement <16 x double> %2318, i32 0
  %extract1496.i = extractelement <16 x double> %2318, i32 1
  %extract1497.i = extractelement <16 x double> %2318, i32 2
  %extract1498.i = extractelement <16 x double> %2318, i32 3
  %extract1499.i = extractelement <16 x double> %2318, i32 4
  %extract1500.i = extractelement <16 x double> %2318, i32 5
  %extract1501.i = extractelement <16 x double> %2318, i32 6
  %extract1502.i = extractelement <16 x double> %2318, i32 7
  %extract1503.i = extractelement <16 x double> %2318, i32 8
  %extract1504.i = extractelement <16 x double> %2318, i32 9
  %extract1505.i = extractelement <16 x double> %2318, i32 10
  %extract1506.i = extractelement <16 x double> %2318, i32 11
  %extract1507.i = extractelement <16 x double> %2318, i32 12
  %extract1508.i = extractelement <16 x double> %2318, i32 13
  %extract1509.i = extractelement <16 x double> %2318, i32 14
  %extract1510.i = extractelement <16 x double> %2318, i32 15
  store double %extract1495.i, double* %1195, align 16
  store double %extract1496.i, double* %1197, align 16
  store double %extract1497.i, double* %1199, align 16
  store double %extract1498.i, double* %1201, align 16
  store double %extract1499.i, double* %1203, align 16
  store double %extract1500.i, double* %1205, align 16
  store double %extract1501.i, double* %1207, align 16
  store double %extract1502.i, double* %1209, align 16
  store double %extract1503.i, double* %1211, align 16
  store double %extract1504.i, double* %1213, align 16
  store double %extract1505.i, double* %1215, align 16
  store double %extract1506.i, double* %1217, align 16
  store double %extract1507.i, double* %1219, align 16
  store double %extract1508.i, double* %1221, align 16
  store double %extract1509.i, double* %1223, align 16
  store double %extract1510.i, double* %1225, align 16
  %2319 = load double addrspace(3)* %552, align 8
  %temp1511.i = insertelement <16 x double> undef, double %2319, i32 0
  %vector1512.i = shufflevector <16 x double> %temp1511.i, <16 x double> undef, <16 x i32> zeroinitializer
  %2320 = fmul <16 x double> %2129, %vector1512.i
  %2321 = fadd <16 x double> %2273, %2320
  %extract1513.i = extractelement <16 x double> %2321, i32 0
  %extract1514.i = extractelement <16 x double> %2321, i32 1
  %extract1515.i = extractelement <16 x double> %2321, i32 2
  %extract1516.i = extractelement <16 x double> %2321, i32 3
  %extract1517.i = extractelement <16 x double> %2321, i32 4
  %extract1518.i = extractelement <16 x double> %2321, i32 5
  %extract1519.i = extractelement <16 x double> %2321, i32 6
  %extract1520.i = extractelement <16 x double> %2321, i32 7
  %extract1521.i = extractelement <16 x double> %2321, i32 8
  %extract1522.i = extractelement <16 x double> %2321, i32 9
  %extract1523.i = extractelement <16 x double> %2321, i32 10
  %extract1524.i = extractelement <16 x double> %2321, i32 11
  %extract1525.i = extractelement <16 x double> %2321, i32 12
  %extract1526.i = extractelement <16 x double> %2321, i32 13
  %extract1527.i = extractelement <16 x double> %2321, i32 14
  %extract1528.i = extractelement <16 x double> %2321, i32 15
  store double %extract1513.i, double* %1227, align 8
  store double %extract1514.i, double* %1229, align 8
  store double %extract1515.i, double* %1231, align 8
  store double %extract1516.i, double* %1233, align 8
  store double %extract1517.i, double* %1235, align 8
  store double %extract1518.i, double* %1237, align 8
  store double %extract1519.i, double* %1239, align 8
  store double %extract1520.i, double* %1241, align 8
  store double %extract1521.i, double* %1243, align 8
  store double %extract1522.i, double* %1245, align 8
  store double %extract1523.i, double* %1247, align 8
  store double %extract1524.i, double* %1249, align 8
  store double %extract1525.i, double* %1251, align 8
  store double %extract1526.i, double* %1253, align 8
  store double %extract1527.i, double* %1255, align 8
  store double %extract1528.i, double* %1257, align 8
  %check.WI.iter4492.i = icmp ult i64 %CurrWI..3.i, %37
  br i1 %check.WI.iter4492.i, label %thenBB4489.i, label %SyncBB4485.preheader.i

thenBB4489.i:                                     ; preds = %SyncBB.i
  %"CurrWI++4493.i" = add nuw i64 %CurrWI..3.i, 1
  %"loadedCurrSB+Stride4495.i" = add nuw i64 %CurrSBIndex..3.i, 12032
  br label %SyncBB.i

SyncBB4485.preheader.i:                           ; preds = %SyncBB.i, %thenBB.i
  %currBarrier.0.ph.i = phi i32 [ %currBarrier.1.i, %thenBB.i ], [ 8, %SyncBB.i ]
  %CurrSBIndex..1.ph.i = phi i64 [ %"loadedCurrSB+Stride.i", %thenBB.i ], [ 0, %SyncBB.i ]
  %CurrWI..1.ph.i = phi i64 [ %"CurrWI++.i", %thenBB.i ], [ 0, %SyncBB.i ]
  br label %SyncBB4485.i

SyncBB4485.i:                                     ; preds = %thenBB4496.i, %SyncBB4485.preheader.i
  %CurrSBIndex..1.i = phi i64 [ %"loadedCurrSB+Stride4502.i", %thenBB4496.i ], [ %CurrSBIndex..1.ph.i, %SyncBB4485.preheader.i ]
  %CurrWI..1.i = phi i64 [ %"CurrWI++4500.i", %thenBB4496.i ], [ %CurrWI..1.ph.i, %SyncBB4485.preheader.i ]
  %"&(pSB[currWI].offset)2359.i" = add nuw i64 %CurrSBIndex..1.i, 9224
  %"&pSB[currWI].offset2360.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2359.i"
  %CastToValueType2361.i = bitcast i8* %"&pSB[currWI].offset2360.i" to i32*
  %loadedValue2362.i = load i32* %CastToValueType2361.i, align 4
  %2322 = icmp slt i32 %loadedValue2362.i, %19
  %"&(pSB[currWI].offset)2350.i" = add nuw i64 %CurrSBIndex..1.i, 9216
  %"&pSB[currWI].offset2351.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2350.i"
  %CastToValueType2352.i = bitcast i8* %"&pSB[currWI].offset2351.i" to i64*
  %loadedValue2353.i = load i64* %CastToValueType2352.i, align 8
  %indvar.next45.i = add i64 %loadedValue2353.i, 1
  %"&(pSB[currWI].offset)2808.i" = add nuw i64 %CurrSBIndex..1.i, 9856
  %"&pSB[currWI].offset2809.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2808.i"
  %CastToValueType2810.i = bitcast i8* %"&pSB[currWI].offset2809.i" to i64*
  store i64 %indvar.next45.i, i64* %CastToValueType2810.i, align 8
  br i1 %2322, label %.loopexit.i, label %bb.nph.i

bb.nph.i:                                         ; preds = %SyncBB4485.i
  %"&(pSB[currWI].offset)2197.i" = add nuw i64 %CurrSBIndex..1.i, 7040
  %"&pSB[currWI].offset2198.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2197.i"
  %CastToValueType2199.i = bitcast i8* %"&pSB[currWI].offset2198.i" to i32*
  %loadedValue2200.i = load i32* %CastToValueType2199.i, align 4
  %tmp28.i = add i32 %tmp25.i, %loadedValue2200.i
  %temp1529.i = insertelement <16 x i32> undef, i32 %tmp28.i, i32 0
  %vector1530.i = shufflevector <16 x i32> %temp1529.i, <16 x i32> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1577.i" = add nuw i64 %CurrSBIndex..1.i, 5952
  %"&pSB[currWI].offset1578.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1577.i"
  %CastToValueType1579.i = bitcast i8* %"&pSB[currWI].offset1578.i" to <16 x i32>*
  %loadedValue.i = load <16 x i32>* %CastToValueType1579.i, align 64
  %tmp301531.i = add <16 x i32> %vector1530.i, %loadedValue.i
  %tmp331532.i = add <16 x i32> %tmp301531.i, %vector31.i
  %tmp341533.i = sext <16 x i32> %tmp331532.i to <16 x i64>
  %"&(pSB[currWI].offset)2812.i" = add nuw i64 %CurrSBIndex..1.i, 9872
  %"&pSB[currWI].offset2813.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2812.i"
  %CastToValueType2814.i = bitcast i8* %"&pSB[currWI].offset2813.i" to [16 x double]*
  %"&(pSB[currWI].offset)2884.i" = add nuw i64 %CurrSBIndex..1.i, 10000
  %"&pSB[currWI].offset2885.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2884.i"
  %CastToValueType2886.i = bitcast i8* %"&pSB[currWI].offset2885.i" to [16 x double]*
  %"&(pSB[currWI].offset)2956.i" = add nuw i64 %CurrSBIndex..1.i, 10128
  %"&pSB[currWI].offset2957.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2956.i"
  %CastToValueType2958.i = bitcast i8* %"&pSB[currWI].offset2957.i" to [16 x double]*
  %"&(pSB[currWI].offset)3028.i" = add nuw i64 %CurrSBIndex..1.i, 10256
  %"&pSB[currWI].offset3029.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3028.i"
  %CastToValueType3030.i = bitcast i8* %"&pSB[currWI].offset3029.i" to [16 x double]*
  %"&(pSB[currWI].offset)3100.i" = add nuw i64 %CurrSBIndex..1.i, 10384
  %"&pSB[currWI].offset3101.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3100.i"
  %CastToValueType3102.i = bitcast i8* %"&pSB[currWI].offset3101.i" to [16 x double]*
  %"&(pSB[currWI].offset)3172.i" = add nuw i64 %CurrSBIndex..1.i, 10512
  %"&pSB[currWI].offset3173.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3172.i"
  %CastToValueType3174.i = bitcast i8* %"&pSB[currWI].offset3173.i" to [16 x double]*
  %"&(pSB[currWI].offset)3244.i" = add nuw i64 %CurrSBIndex..1.i, 10640
  %"&pSB[currWI].offset3245.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3244.i"
  %CastToValueType3246.i = bitcast i8* %"&pSB[currWI].offset3245.i" to [16 x double]*
  %"&(pSB[currWI].offset)3316.i" = add nuw i64 %CurrSBIndex..1.i, 10768
  %"&pSB[currWI].offset3317.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3316.i"
  %CastToValueType3318.i = bitcast i8* %"&pSB[currWI].offset3317.i" to [16 x double]*
  %"&(pSB[currWI].offset)3388.i" = add nuw i64 %CurrSBIndex..1.i, 10896
  %"&pSB[currWI].offset3389.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3388.i"
  %CastToValueType3390.i = bitcast i8* %"&pSB[currWI].offset3389.i" to [16 x double]*
  %"&(pSB[currWI].offset)3460.i" = add nuw i64 %CurrSBIndex..1.i, 11024
  %"&pSB[currWI].offset3461.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3460.i"
  %CastToValueType3462.i = bitcast i8* %"&pSB[currWI].offset3461.i" to [16 x double]*
  %"&(pSB[currWI].offset)3532.i" = add nuw i64 %CurrSBIndex..1.i, 11152
  %"&pSB[currWI].offset3533.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3532.i"
  %CastToValueType3534.i = bitcast i8* %"&pSB[currWI].offset3533.i" to [16 x double]*
  %"&(pSB[currWI].offset)3604.i" = add nuw i64 %CurrSBIndex..1.i, 11280
  %"&pSB[currWI].offset3605.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3604.i"
  %CastToValueType3606.i = bitcast i8* %"&pSB[currWI].offset3605.i" to [16 x double]*
  %"&(pSB[currWI].offset)3676.i" = add nuw i64 %CurrSBIndex..1.i, 11408
  %"&pSB[currWI].offset3677.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3676.i"
  %CastToValueType3678.i = bitcast i8* %"&pSB[currWI].offset3677.i" to [16 x double]*
  %"&(pSB[currWI].offset)3748.i" = add nuw i64 %CurrSBIndex..1.i, 11536
  %"&pSB[currWI].offset3749.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3748.i"
  %CastToValueType3750.i = bitcast i8* %"&pSB[currWI].offset3749.i" to [16 x double]*
  %"&(pSB[currWI].offset)3820.i" = add nuw i64 %CurrSBIndex..1.i, 11664
  %"&pSB[currWI].offset3821.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3820.i"
  %CastToValueType3822.i = bitcast i8* %"&pSB[currWI].offset3821.i" to [16 x double]*
  %"&(pSB[currWI].offset)3892.i" = add nuw i64 %CurrSBIndex..1.i, 11792
  %"&pSB[currWI].offset3893.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3892.i"
  %CastToValueType3894.i = bitcast i8* %"&pSB[currWI].offset3893.i" to [16 x double]*
  br label %2323

; <label>:2323                                    ; preds = %2323, %bb.nph.i
  %indvar.i = phi i64 [ 0, %bb.nph.i ], [ %indvar.next.i, %2323 ]
  %2324 = getelementptr [16 x double]* %CastToValueType2814.i, i64 0, i64 %indvar.i
  %2325 = getelementptr [16 x double]* %CastToValueType2886.i, i64 0, i64 %indvar.i
  %2326 = getelementptr [16 x double]* %CastToValueType2958.i, i64 0, i64 %indvar.i
  %2327 = getelementptr [16 x double]* %CastToValueType3030.i, i64 0, i64 %indvar.i
  %2328 = getelementptr [16 x double]* %CastToValueType3102.i, i64 0, i64 %indvar.i
  %2329 = getelementptr [16 x double]* %CastToValueType3174.i, i64 0, i64 %indvar.i
  %2330 = getelementptr [16 x double]* %CastToValueType3246.i, i64 0, i64 %indvar.i
  %2331 = getelementptr [16 x double]* %CastToValueType3318.i, i64 0, i64 %indvar.i
  %2332 = getelementptr [16 x double]* %CastToValueType3390.i, i64 0, i64 %indvar.i
  %2333 = getelementptr [16 x double]* %CastToValueType3462.i, i64 0, i64 %indvar.i
  %2334 = getelementptr [16 x double]* %CastToValueType3534.i, i64 0, i64 %indvar.i
  %2335 = getelementptr [16 x double]* %CastToValueType3606.i, i64 0, i64 %indvar.i
  %2336 = getelementptr [16 x double]* %CastToValueType3678.i, i64 0, i64 %indvar.i
  %2337 = getelementptr [16 x double]* %CastToValueType3750.i, i64 0, i64 %indvar.i
  %2338 = getelementptr [16 x double]* %CastToValueType3822.i, i64 0, i64 %indvar.i
  %2339 = getelementptr [16 x double]* %CastToValueType3894.i, i64 0, i64 %indvar.i
  %tmp22.i = mul i64 %tmp.i, %indvar.i
  %temp1534.i = insertelement <16 x i64> undef, i64 %tmp22.i, i32 0
  %vector1535.i = shufflevector <16 x i64> %temp1534.i, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp351536.i = add <16 x i64> %tmp341533.i, %vector1535.i
  %extract1537.i = extractelement <16 x i64> %tmp351536.i, i32 0
  %2340 = getelementptr double addrspace(1)* %13, i64 %extract1537.i
  %2341 = load double* %2324, align 8
  %2342 = load double* %2325, align 8
  %2343 = load double* %2326, align 8
  %2344 = load double* %2327, align 8
  %2345 = load double* %2328, align 8
  %2346 = load double* %2329, align 8
  %2347 = load double* %2330, align 8
  %2348 = load double* %2331, align 8
  %2349 = load double* %2332, align 8
  %2350 = load double* %2333, align 8
  %2351 = load double* %2334, align 8
  %2352 = load double* %2335, align 8
  %2353 = load double* %2336, align 8
  %2354 = load double* %2337, align 8
  %2355 = load double* %2338, align 8
  %2356 = load double* %2339, align 8
  %temp.vect1553.i = insertelement <16 x double> undef, double %2341, i32 0
  %temp.vect1554.i = insertelement <16 x double> %temp.vect1553.i, double %2342, i32 1
  %temp.vect1555.i = insertelement <16 x double> %temp.vect1554.i, double %2343, i32 2
  %temp.vect1556.i = insertelement <16 x double> %temp.vect1555.i, double %2344, i32 3
  %temp.vect1557.i = insertelement <16 x double> %temp.vect1556.i, double %2345, i32 4
  %temp.vect1558.i = insertelement <16 x double> %temp.vect1557.i, double %2346, i32 5
  %temp.vect1559.i = insertelement <16 x double> %temp.vect1558.i, double %2347, i32 6
  %temp.vect1560.i = insertelement <16 x double> %temp.vect1559.i, double %2348, i32 7
  %temp.vect1561.i = insertelement <16 x double> %temp.vect1560.i, double %2349, i32 8
  %temp.vect1562.i = insertelement <16 x double> %temp.vect1561.i, double %2350, i32 9
  %temp.vect1563.i = insertelement <16 x double> %temp.vect1562.i, double %2351, i32 10
  %temp.vect1564.i = insertelement <16 x double> %temp.vect1563.i, double %2352, i32 11
  %temp.vect1565.i = insertelement <16 x double> %temp.vect1564.i, double %2353, i32 12
  %temp.vect1566.i = insertelement <16 x double> %temp.vect1565.i, double %2354, i32 13
  %temp.vect1567.i = insertelement <16 x double> %temp.vect1566.i, double %2355, i32 14
  %temp.vect1568.i = insertelement <16 x double> %temp.vect1567.i, double %2356, i32 15
  %2357 = fmul <16 x double> %temp.vect1568.i, %vector1570.i
  %ptrTypeCast1571.i = bitcast double addrspace(1)* %2340 to <16 x double> addrspace(1)*
  %2358 = load <16 x double> addrspace(1)* %ptrTypeCast1571.i, align 8
  %2359 = fmul <16 x double> %2358, %vector1573.i
  %2360 = fadd <16 x double> %2357, %2359
  %ptrTypeCast1574.i = bitcast double addrspace(1)* %2340 to <16 x double> addrspace(1)*
  store <16 x double> %2360, <16 x double> addrspace(1)* %ptrTypeCast1574.i, align 8
  %indvar.next.i = add i64 %indvar.i, 1
  %exitcond.i = icmp eq i64 %indvar.next.i, 16
  br i1 %exitcond.i, label %._crit_edge.i, label %2323

._crit_edge.i:                                    ; preds = %2323
  %check.WI.iter4499.i = icmp ult i64 %CurrWI..1.i, %37
  br i1 %check.WI.iter4499.i, label %thenBB4496.i, label %____Vectorized_.sgemmNN_separated_args.exit

thenBB4496.i:                                     ; preds = %._crit_edge.i
  %"CurrWI++4500.i" = add nuw i64 %CurrWI..1.i, 1
  %"loadedCurrSB+Stride4502.i" = add nuw i64 %CurrSBIndex..1.i, 12032
  br label %SyncBB4485.i

____Vectorized_.sgemmNN_separated_args.exit:      ; preds = %._crit_edge.i
  ret void
}

define void @__Vectorized_.sgemmNT(i8* %pBuffer) {
entry:
  %0 = bitcast i8* %pBuffer to double addrspace(1)**
  %1 = load double addrspace(1)** %0, align 8
  %2 = getelementptr i8* %pBuffer, i64 8
  %3 = bitcast i8* %2 to i32*
  %4 = load i32* %3, align 4
  %5 = getelementptr i8* %pBuffer, i64 16
  %6 = bitcast i8* %5 to double addrspace(1)**
  %7 = load double addrspace(1)** %6, align 8
  %8 = getelementptr i8* %pBuffer, i64 24
  %9 = bitcast i8* %8 to i32*
  %10 = load i32* %9, align 4
  %11 = getelementptr i8* %pBuffer, i64 32
  %12 = bitcast i8* %11 to double addrspace(1)**
  %13 = load double addrspace(1)** %12, align 8
  %14 = getelementptr i8* %pBuffer, i64 40
  %15 = bitcast i8* %14 to i32*
  %16 = load i32* %15, align 4
  %17 = getelementptr i8* %pBuffer, i64 44
  %18 = bitcast i8* %17 to i32*
  %19 = load i32* %18, align 4
  %20 = getelementptr i8* %pBuffer, i64 48
  %21 = bitcast i8* %20 to double*
  %22 = load double* %21, align 8
  %23 = getelementptr i8* %pBuffer, i64 56
  %24 = bitcast i8* %23 to double*
  %25 = load double* %24, align 8
  %26 = getelementptr i8* %pBuffer, i64 64
  %27 = bitcast i8* %26 to i8 addrspace(3)**
  %28 = load i8 addrspace(3)** %27, align 8
  %29 = getelementptr i8* %pBuffer, i64 80
  %30 = bitcast i8* %29 to i64**
  %31 = load i64** %30, align 8
  %32 = getelementptr i8* %pBuffer, i64 96
  %33 = bitcast i8* %32 to %struct.PaddedDimId**
  %34 = load %struct.PaddedDimId** %33, align 8
  %35 = getelementptr i8* %pBuffer, i64 112
  %36 = bitcast i8* %35 to i64*
  %37 = load i64* %36, align 8
  %38 = getelementptr i8* %pBuffer, i64 120
  %39 = bitcast i8* %38 to i8**
  %40 = load i8** %39, align 8
  %41 = bitcast i8 addrspace(3)* %28 to [4 x [16 x double]] addrspace(3)*
  %42 = bitcast i8 addrspace(3)* %28 to double addrspace(3)*
  %43 = getelementptr i8 addrspace(3)* %28, i64 8
  %44 = bitcast i8 addrspace(3)* %43 to double addrspace(3)*
  %45 = getelementptr i8 addrspace(3)* %28, i64 16
  %46 = bitcast i8 addrspace(3)* %45 to double addrspace(3)*
  %47 = getelementptr i8 addrspace(3)* %28, i64 24
  %48 = bitcast i8 addrspace(3)* %47 to double addrspace(3)*
  %49 = getelementptr i8 addrspace(3)* %28, i64 32
  %50 = bitcast i8 addrspace(3)* %49 to double addrspace(3)*
  %51 = getelementptr i8 addrspace(3)* %28, i64 40
  %52 = bitcast i8 addrspace(3)* %51 to double addrspace(3)*
  %53 = getelementptr i8 addrspace(3)* %28, i64 48
  %54 = bitcast i8 addrspace(3)* %53 to double addrspace(3)*
  %55 = getelementptr i8 addrspace(3)* %28, i64 56
  %56 = bitcast i8 addrspace(3)* %55 to double addrspace(3)*
  %57 = getelementptr i8 addrspace(3)* %28, i64 64
  %58 = bitcast i8 addrspace(3)* %57 to double addrspace(3)*
  %59 = getelementptr i8 addrspace(3)* %28, i64 72
  %60 = bitcast i8 addrspace(3)* %59 to double addrspace(3)*
  %61 = getelementptr i8 addrspace(3)* %28, i64 80
  %62 = bitcast i8 addrspace(3)* %61 to double addrspace(3)*
  %63 = getelementptr i8 addrspace(3)* %28, i64 88
  %64 = bitcast i8 addrspace(3)* %63 to double addrspace(3)*
  %65 = getelementptr i8 addrspace(3)* %28, i64 96
  %66 = bitcast i8 addrspace(3)* %65 to double addrspace(3)*
  %67 = getelementptr i8 addrspace(3)* %28, i64 104
  %68 = bitcast i8 addrspace(3)* %67 to double addrspace(3)*
  %69 = getelementptr i8 addrspace(3)* %28, i64 112
  %70 = bitcast i8 addrspace(3)* %69 to double addrspace(3)*
  %71 = getelementptr i8 addrspace(3)* %28, i64 120
  %72 = bitcast i8 addrspace(3)* %71 to double addrspace(3)*
  %73 = getelementptr i8 addrspace(3)* %28, i64 128
  %74 = bitcast i8 addrspace(3)* %73 to double addrspace(3)*
  %75 = getelementptr i8 addrspace(3)* %28, i64 136
  %76 = bitcast i8 addrspace(3)* %75 to double addrspace(3)*
  %77 = getelementptr i8 addrspace(3)* %28, i64 144
  %78 = bitcast i8 addrspace(3)* %77 to double addrspace(3)*
  %79 = getelementptr i8 addrspace(3)* %28, i64 152
  %80 = bitcast i8 addrspace(3)* %79 to double addrspace(3)*
  %81 = getelementptr i8 addrspace(3)* %28, i64 160
  %82 = bitcast i8 addrspace(3)* %81 to double addrspace(3)*
  %83 = getelementptr i8 addrspace(3)* %28, i64 168
  %84 = bitcast i8 addrspace(3)* %83 to double addrspace(3)*
  %85 = getelementptr i8 addrspace(3)* %28, i64 176
  %86 = bitcast i8 addrspace(3)* %85 to double addrspace(3)*
  %87 = getelementptr i8 addrspace(3)* %28, i64 184
  %88 = bitcast i8 addrspace(3)* %87 to double addrspace(3)*
  %89 = getelementptr i8 addrspace(3)* %28, i64 192
  %90 = bitcast i8 addrspace(3)* %89 to double addrspace(3)*
  %91 = getelementptr i8 addrspace(3)* %28, i64 200
  %92 = bitcast i8 addrspace(3)* %91 to double addrspace(3)*
  %93 = getelementptr i8 addrspace(3)* %28, i64 208
  %94 = bitcast i8 addrspace(3)* %93 to double addrspace(3)*
  %95 = getelementptr i8 addrspace(3)* %28, i64 216
  %96 = bitcast i8 addrspace(3)* %95 to double addrspace(3)*
  %97 = getelementptr i8 addrspace(3)* %28, i64 224
  %98 = bitcast i8 addrspace(3)* %97 to double addrspace(3)*
  %99 = getelementptr i8 addrspace(3)* %28, i64 232
  %100 = bitcast i8 addrspace(3)* %99 to double addrspace(3)*
  %101 = getelementptr i8 addrspace(3)* %28, i64 240
  %102 = bitcast i8 addrspace(3)* %101 to double addrspace(3)*
  %103 = getelementptr i8 addrspace(3)* %28, i64 248
  %104 = bitcast i8 addrspace(3)* %103 to double addrspace(3)*
  %105 = getelementptr i8 addrspace(3)* %28, i64 256
  %106 = bitcast i8 addrspace(3)* %105 to double addrspace(3)*
  %107 = getelementptr i8 addrspace(3)* %28, i64 264
  %108 = bitcast i8 addrspace(3)* %107 to double addrspace(3)*
  %109 = getelementptr i8 addrspace(3)* %28, i64 272
  %110 = bitcast i8 addrspace(3)* %109 to double addrspace(3)*
  %111 = getelementptr i8 addrspace(3)* %28, i64 280
  %112 = bitcast i8 addrspace(3)* %111 to double addrspace(3)*
  %113 = getelementptr i8 addrspace(3)* %28, i64 288
  %114 = bitcast i8 addrspace(3)* %113 to double addrspace(3)*
  %115 = getelementptr i8 addrspace(3)* %28, i64 296
  %116 = bitcast i8 addrspace(3)* %115 to double addrspace(3)*
  %117 = getelementptr i8 addrspace(3)* %28, i64 304
  %118 = bitcast i8 addrspace(3)* %117 to double addrspace(3)*
  %119 = getelementptr i8 addrspace(3)* %28, i64 312
  %120 = bitcast i8 addrspace(3)* %119 to double addrspace(3)*
  %121 = getelementptr i8 addrspace(3)* %28, i64 320
  %122 = bitcast i8 addrspace(3)* %121 to double addrspace(3)*
  %123 = getelementptr i8 addrspace(3)* %28, i64 328
  %124 = bitcast i8 addrspace(3)* %123 to double addrspace(3)*
  %125 = getelementptr i8 addrspace(3)* %28, i64 336
  %126 = bitcast i8 addrspace(3)* %125 to double addrspace(3)*
  %127 = getelementptr i8 addrspace(3)* %28, i64 344
  %128 = bitcast i8 addrspace(3)* %127 to double addrspace(3)*
  %129 = getelementptr i8 addrspace(3)* %28, i64 352
  %130 = bitcast i8 addrspace(3)* %129 to double addrspace(3)*
  %131 = getelementptr i8 addrspace(3)* %28, i64 360
  %132 = bitcast i8 addrspace(3)* %131 to double addrspace(3)*
  %133 = getelementptr i8 addrspace(3)* %28, i64 368
  %134 = bitcast i8 addrspace(3)* %133 to double addrspace(3)*
  %135 = getelementptr i8 addrspace(3)* %28, i64 376
  %136 = bitcast i8 addrspace(3)* %135 to double addrspace(3)*
  %137 = getelementptr i8 addrspace(3)* %28, i64 384
  %138 = bitcast i8 addrspace(3)* %137 to double addrspace(3)*
  %139 = getelementptr i8 addrspace(3)* %28, i64 392
  %140 = bitcast i8 addrspace(3)* %139 to double addrspace(3)*
  %141 = getelementptr i8 addrspace(3)* %28, i64 400
  %142 = bitcast i8 addrspace(3)* %141 to double addrspace(3)*
  %143 = getelementptr i8 addrspace(3)* %28, i64 408
  %144 = bitcast i8 addrspace(3)* %143 to double addrspace(3)*
  %145 = getelementptr i8 addrspace(3)* %28, i64 416
  %146 = bitcast i8 addrspace(3)* %145 to double addrspace(3)*
  %147 = getelementptr i8 addrspace(3)* %28, i64 424
  %148 = bitcast i8 addrspace(3)* %147 to double addrspace(3)*
  %149 = getelementptr i8 addrspace(3)* %28, i64 432
  %150 = bitcast i8 addrspace(3)* %149 to double addrspace(3)*
  %151 = getelementptr i8 addrspace(3)* %28, i64 440
  %152 = bitcast i8 addrspace(3)* %151 to double addrspace(3)*
  %153 = getelementptr i8 addrspace(3)* %28, i64 448
  %154 = bitcast i8 addrspace(3)* %153 to double addrspace(3)*
  %155 = getelementptr i8 addrspace(3)* %28, i64 456
  %156 = bitcast i8 addrspace(3)* %155 to double addrspace(3)*
  %157 = getelementptr i8 addrspace(3)* %28, i64 464
  %158 = bitcast i8 addrspace(3)* %157 to double addrspace(3)*
  %159 = getelementptr i8 addrspace(3)* %28, i64 472
  %160 = bitcast i8 addrspace(3)* %159 to double addrspace(3)*
  %161 = getelementptr i8 addrspace(3)* %28, i64 480
  %162 = bitcast i8 addrspace(3)* %161 to double addrspace(3)*
  %163 = getelementptr i8 addrspace(3)* %28, i64 488
  %164 = bitcast i8 addrspace(3)* %163 to double addrspace(3)*
  %165 = getelementptr i8 addrspace(3)* %28, i64 496
  %166 = bitcast i8 addrspace(3)* %165 to double addrspace(3)*
  %167 = getelementptr i8 addrspace(3)* %28, i64 504
  %168 = bitcast i8 addrspace(3)* %167 to double addrspace(3)*
  %169 = sext i32 %4 to i64
  %temp38.i = insertelement <16 x i64> undef, i64 %169, i32 0
  %vector39.i = shufflevector <16 x i64> %temp38.i, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp95.2.i = shl i32 %4, 1
  %170 = sext i32 %tmp95.2.i to i64
  %temp58.i = insertelement <16 x i64> undef, i64 %170, i32 0
  %vector59.i = shufflevector <16 x i64> %temp58.i, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp95.3.i = mul i32 %4, 3
  %171 = sext i32 %tmp95.3.i to i64
  %temp78.i = insertelement <16 x i64> undef, i64 %171, i32 0
  %vector79.i = shufflevector <16 x i64> %temp78.i, <16 x i64> undef, <16 x i32> zeroinitializer
  %172 = mul nsw i32 %19, %10
  %tmp37.i = shl i32 %10, 2
  %tmp38.i = zext i32 %tmp37.i to i64
  %tmp40.i = shl i32 %10, 3
  %tmp41.i = zext i32 %tmp40.i to i64
  %tmp44.i = sext i32 %tmp37.i to i64
  %temp115.i = insertelement <16 x i64> undef, i64 %tmp44.i, i32 0
  %vector116.i = shufflevector <16 x i64> %temp115.i, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp57.i = shl i32 %4, 2
  %tmp58.i = sext i32 %tmp57.i to i64
  %temp120.i = insertelement <16 x i64> undef, i64 %tmp58.i, i32 0
  %vector121.i = shufflevector <16 x i64> %temp120.i, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp69.i = mul i32 %4, 3
  %tmp70.i = sext i32 %tmp69.i to i64
  %tmp71.i = add i64 %tmp58.i, %tmp70.i
  %temp123.i = insertelement <16 x i64> undef, i64 %tmp71.i, i32 0
  %vector124.i = shufflevector <16 x i64> %temp123.i, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp75.i = shl i32 %4, 1
  %tmp76.i = sext i32 %tmp75.i to i64
  %tmp77.i = add i64 %tmp58.i, %tmp76.i
  %temp126.i = insertelement <16 x i64> undef, i64 %tmp77.i, i32 0
  %vector127.i = shufflevector <16 x i64> %temp126.i, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp81.i = sext i32 %4 to i64
  %tmp82.i = add i64 %tmp81.i, %tmp58.i
  %temp129.i = insertelement <16 x i64> undef, i64 %tmp82.i, i32 0
  %vector130.i = shufflevector <16 x i64> %temp129.i, <16 x i64> undef, <16 x i32> zeroinitializer
  br label %SyncBB4620.i

SyncBB4620.i:                                     ; preds = %thenBB.i, %entry
  %currBarrier.2.i = phi i32 [ 17, %entry ], [ %currBarrier.1.i, %thenBB.i ]
  %CurrSBIndex..0.i = phi i64 [ 0, %entry ], [ %"loadedCurrSB+Stride.i", %thenBB.i ]
  %CurrWI..0.i = phi i64 [ 0, %entry ], [ %"CurrWI++.i", %thenBB.i ]
  %173 = getelementptr %struct.PaddedDimId* %34, i64 %CurrWI..0.i, i32 0, i64 0
  %174 = load i64* %173, align 8
  %broadcast1.i = insertelement <16 x i64> undef, i64 %174, i32 0
  %broadcast2.i = shufflevector <16 x i64> %broadcast1.i, <16 x i64> undef, <16 x i32> zeroinitializer
  %175 = add <16 x i64> %broadcast2.i, <i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8, i64 9, i64 10, i64 11, i64 12, i64 13, i64 14, i64 15>
  %176 = trunc <16 x i64> %175 to <16 x i32>
  %"&(pSB[currWI].offset).i" = add nuw i64 %CurrSBIndex..0.i, 960
  %"&pSB[currWI].offset.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset).i"
  %CastToValueType.i = bitcast i8* %"&pSB[currWI].offset.i" to <16 x i32>*
  store <16 x i32> %176, <16 x i32>* %CastToValueType.i, align 64
  %177 = getelementptr %struct.PaddedDimId* %34, i64 %CurrWI..0.i, i32 0, i64 1
  %178 = load i64* %177, align 8
  %179 = trunc i64 %178 to i32
  %180 = load i64* %31, align 8
  %181 = shl i64 %180, 6
  %182 = trunc i64 %181 to i32
  %temp1.i = insertelement <16 x i32> undef, i32 %182, i32 0
  %vector2.i = shufflevector <16 x i32> %temp1.i, <16 x i32> undef, <16 x i32> zeroinitializer
  %183 = getelementptr i64* %31, i64 1
  %184 = load i64* %183, align 8
  %185 = shl i64 %184, 4
  %186 = trunc i64 %185 to i32
  %temp5.i = insertelement <16 x i32> undef, i32 %186, i32 0
  %vector6.i = shufflevector <16 x i32> %temp5.i, <16 x i32> undef, <16 x i32> zeroinitializer
  %187 = shl i32 %179, 4
  %"&(pSB[currWI].offset)1565.i" = add nuw i64 %CurrSBIndex..0.i, 1024
  %"&pSB[currWI].offset1566.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1565.i"
  %CastToValueType1567.i = bitcast i8* %"&pSB[currWI].offset1566.i" to i32*
  store i32 %187, i32* %CastToValueType1567.i, align 4
  %temp.i = insertelement <16 x i32> undef, i32 %187, i32 0
  %vector.i = shufflevector <16 x i32> %temp.i, <16 x i32> undef, <16 x i32> zeroinitializer
  %188 = add nsw <16 x i32> %vector.i, %176
  %189 = add nsw <16 x i32> %vector2.i, %188
  %190 = sext <16 x i32> %189 to <16 x i64>
  %191 = mul nsw i32 %179, %10
  %temp3.i = insertelement <16 x i32> undef, i32 %191, i32 0
  %vector4.i = shufflevector <16 x i32> %temp3.i, <16 x i32> undef, <16 x i32> zeroinitializer
  %192 = add nsw <16 x i32> %vector4.i, %176
  %193 = add nsw <16 x i32> %192, %vector6.i
  %194 = sext <16 x i32> %193 to <16 x i64>
  %195 = extractelement <16 x i32> %193, i32 0
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds double addrspace(1)* %7, i64 %196
  %198 = extractelement <16 x i32> %189, i32 0
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds double addrspace(1)* %1, i64 %199
  %ptrTypeCast.i = bitcast double addrspace(1)* %200 to <16 x double> addrspace(1)*
  %201 = load <16 x double> addrspace(1)* %ptrTypeCast.i, align 8
  %"&(pSB[currWI].offset)1574.i" = add nuw i64 %CurrSBIndex..0.i, 1152
  %"&pSB[currWI].offset1575.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1574.i"
  %CastToValueType1576.i = bitcast i8* %"&pSB[currWI].offset1575.i" to <16 x double>*
  store <16 x double> %201, <16 x double>* %CastToValueType1576.i, align 128
  %.sum4.140.i = add <16 x i64> %vector39.i, %190
  %extract41.i = extractelement <16 x i64> %.sum4.140.i, i32 0
  %202 = getelementptr inbounds double addrspace(1)* %1, i64 %extract41.i
  %ptrTypeCast57.i = bitcast double addrspace(1)* %202 to <16 x double> addrspace(1)*
  %203 = load <16 x double> addrspace(1)* %ptrTypeCast57.i, align 8
  %"&(pSB[currWI].offset)1578.i" = add nuw i64 %CurrSBIndex..0.i, 1280
  %"&pSB[currWI].offset1579.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1578.i"
  %CastToValueType1580.i = bitcast i8* %"&pSB[currWI].offset1579.i" to <16 x double>*
  store <16 x double> %203, <16 x double>* %CastToValueType1580.i, align 128
  %.sum4.260.i = add <16 x i64> %vector59.i, %190
  %extract61.i = extractelement <16 x i64> %.sum4.260.i, i32 0
  %204 = getelementptr inbounds double addrspace(1)* %1, i64 %extract61.i
  %ptrTypeCast77.i = bitcast double addrspace(1)* %204 to <16 x double> addrspace(1)*
  %205 = load <16 x double> addrspace(1)* %ptrTypeCast77.i, align 8
  %"&(pSB[currWI].offset)1582.i" = add nuw i64 %CurrSBIndex..0.i, 1408
  %"&pSB[currWI].offset1583.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1582.i"
  %CastToValueType1584.i = bitcast i8* %"&pSB[currWI].offset1583.i" to <16 x double>*
  store <16 x double> %205, <16 x double>* %CastToValueType1584.i, align 128
  %.sum4.380.i = add <16 x i64> %vector79.i, %190
  %extract81.i = extractelement <16 x i64> %.sum4.380.i, i32 0
  %206 = getelementptr inbounds double addrspace(1)* %1, i64 %extract81.i
  %ptrTypeCast97.i = bitcast double addrspace(1)* %206 to <16 x double> addrspace(1)*
  %207 = load <16 x double> addrspace(1)* %ptrTypeCast97.i, align 8
  %"&(pSB[currWI].offset)1586.i" = add nuw i64 %CurrSBIndex..0.i, 1536
  %"&pSB[currWI].offset1587.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1586.i"
  %CastToValueType1588.i = bitcast i8* %"&pSB[currWI].offset1587.i" to <16 x double>*
  store <16 x double> %207, <16 x double>* %CastToValueType1588.i, align 128
  %ptrTypeCast98.i = bitcast double addrspace(1)* %197 to <16 x double> addrspace(1)*
  %208 = load <16 x double> addrspace(1)* %ptrTypeCast98.i, align 8
  %"&(pSB[currWI].offset)1590.i" = add nuw i64 %CurrSBIndex..0.i, 1664
  %"&pSB[currWI].offset1591.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1590.i"
  %CastToValueType1592.i = bitcast i8* %"&pSB[currWI].offset1591.i" to <16 x double>*
  store <16 x double> %208, <16 x double>* %CastToValueType1592.i, align 128
  %"&(pSB[currWI].offset)2494.i" = add nuw i64 %CurrSBIndex..0.i, 3856
  %"&pSB[currWI].offset2495.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2494.i"
  %"&(pSB[currWI].offset)2566.i" = add nuw i64 %CurrSBIndex..0.i, 3984
  %"&pSB[currWI].offset2567.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2566.i"
  %"&(pSB[currWI].offset)2638.i" = add nuw i64 %CurrSBIndex..0.i, 4112
  %"&pSB[currWI].offset2639.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2638.i"
  %"&(pSB[currWI].offset)2710.i" = add nuw i64 %CurrSBIndex..0.i, 4240
  %"&pSB[currWI].offset2711.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2710.i"
  %"&(pSB[currWI].offset)2782.i" = add nuw i64 %CurrSBIndex..0.i, 4368
  %"&pSB[currWI].offset2783.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2782.i"
  %"&(pSB[currWI].offset)2854.i" = add nuw i64 %CurrSBIndex..0.i, 4496
  %"&pSB[currWI].offset2855.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2854.i"
  %"&(pSB[currWI].offset)2926.i" = add nuw i64 %CurrSBIndex..0.i, 4624
  %"&pSB[currWI].offset2927.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2926.i"
  %"&(pSB[currWI].offset)2998.i" = add nuw i64 %CurrSBIndex..0.i, 4752
  %"&pSB[currWI].offset2999.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2998.i"
  %"&(pSB[currWI].offset)3070.i" = add nuw i64 %CurrSBIndex..0.i, 4880
  %"&pSB[currWI].offset3071.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3070.i"
  %"&(pSB[currWI].offset)3142.i" = add nuw i64 %CurrSBIndex..0.i, 5008
  %"&pSB[currWI].offset3143.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3142.i"
  %"&(pSB[currWI].offset)3214.i" = add nuw i64 %CurrSBIndex..0.i, 5136
  %"&pSB[currWI].offset3215.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3214.i"
  %"&(pSB[currWI].offset)3286.i" = add nuw i64 %CurrSBIndex..0.i, 5264
  %"&pSB[currWI].offset3287.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3286.i"
  %"&(pSB[currWI].offset)3358.i" = add nuw i64 %CurrSBIndex..0.i, 5392
  %"&pSB[currWI].offset3359.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3358.i"
  %"&(pSB[currWI].offset)3430.i" = add nuw i64 %CurrSBIndex..0.i, 5520
  %"&pSB[currWI].offset3431.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3430.i"
  %"&(pSB[currWI].offset)3502.i" = add nuw i64 %CurrSBIndex..0.i, 5648
  %"&pSB[currWI].offset3503.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3502.i"
  %"&(pSB[currWI].offset)3574.i" = add nuw i64 %CurrSBIndex..0.i, 5776
  %"&pSB[currWI].offset3575.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3574.i"
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset2495.i", i8 0, i64 128, i32 16, i1 false) nounwind
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset2567.i", i8 0, i64 128, i32 16, i1 false) nounwind
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset2639.i", i8 0, i64 128, i32 16, i1 false) nounwind
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset2711.i", i8 0, i64 128, i32 16, i1 false) nounwind
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset2783.i", i8 0, i64 128, i32 16, i1 false) nounwind
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset2855.i", i8 0, i64 128, i32 16, i1 false) nounwind
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset2927.i", i8 0, i64 128, i32 16, i1 false) nounwind
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset2999.i", i8 0, i64 128, i32 16, i1 false) nounwind
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3071.i", i8 0, i64 128, i32 16, i1 false) nounwind
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3143.i", i8 0, i64 128, i32 16, i1 false) nounwind
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3215.i", i8 0, i64 128, i32 16, i1 false) nounwind
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3287.i", i8 0, i64 128, i32 16, i1 false) nounwind
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3359.i", i8 0, i64 128, i32 16, i1 false) nounwind
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3431.i", i8 0, i64 128, i32 16, i1 false) nounwind
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3503.i", i8 0, i64 128, i32 16, i1 false) nounwind
  call void @llvm.memset.p0i8.i64(i8* %"&pSB[currWI].offset3575.i", i8 0, i64 128, i32 16, i1 false) nounwind
  %209 = extractelement <16 x i32> %176, i32 0
  %extract99.i = sext i32 %209 to i64
  %210 = sext i32 %179 to i64
  %211 = getelementptr inbounds [4 x [16 x double]] addrspace(3)* %41, i64 0, i64 %210, i64 %extract99.i
  %"&(pSB[currWI].offset)1594.i" = add nuw i64 %CurrSBIndex..0.i, 1792
  %"&pSB[currWI].offset1595.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1594.i"
  %CastToValueType1596.i = bitcast i8* %"&pSB[currWI].offset1595.i" to double addrspace(3)**
  store double addrspace(3)* %211, double addrspace(3)** %CastToValueType1596.i, align 8
  %"&(pSB[currWI].offset)2490.i" = add nuw i64 %CurrSBIndex..0.i, 3856
  %"&pSB[currWI].offset2491.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2490.i"
  %212 = bitcast i8* %"&pSB[currWI].offset2491.i" to double*
  %"&(pSB[currWI].offset)2562.i" = add nuw i64 %CurrSBIndex..0.i, 3984
  %"&pSB[currWI].offset2563.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2562.i"
  %213 = bitcast i8* %"&pSB[currWI].offset2563.i" to double*
  %"&(pSB[currWI].offset)2634.i" = add nuw i64 %CurrSBIndex..0.i, 4112
  %"&pSB[currWI].offset2635.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2634.i"
  %214 = bitcast i8* %"&pSB[currWI].offset2635.i" to double*
  %"&(pSB[currWI].offset)2706.i" = add nuw i64 %CurrSBIndex..0.i, 4240
  %"&pSB[currWI].offset2707.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2706.i"
  %215 = bitcast i8* %"&pSB[currWI].offset2707.i" to double*
  %"&(pSB[currWI].offset)2778.i" = add nuw i64 %CurrSBIndex..0.i, 4368
  %"&pSB[currWI].offset2779.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2778.i"
  %216 = bitcast i8* %"&pSB[currWI].offset2779.i" to double*
  %"&(pSB[currWI].offset)2850.i" = add nuw i64 %CurrSBIndex..0.i, 4496
  %"&pSB[currWI].offset2851.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2850.i"
  %217 = bitcast i8* %"&pSB[currWI].offset2851.i" to double*
  %"&(pSB[currWI].offset)2922.i" = add nuw i64 %CurrSBIndex..0.i, 4624
  %"&pSB[currWI].offset2923.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2922.i"
  %218 = bitcast i8* %"&pSB[currWI].offset2923.i" to double*
  %"&(pSB[currWI].offset)2994.i" = add nuw i64 %CurrSBIndex..0.i, 4752
  %"&pSB[currWI].offset2995.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2994.i"
  %219 = bitcast i8* %"&pSB[currWI].offset2995.i" to double*
  %"&(pSB[currWI].offset)3066.i" = add nuw i64 %CurrSBIndex..0.i, 4880
  %"&pSB[currWI].offset3067.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3066.i"
  %220 = bitcast i8* %"&pSB[currWI].offset3067.i" to double*
  %"&(pSB[currWI].offset)3138.i" = add nuw i64 %CurrSBIndex..0.i, 5008
  %"&pSB[currWI].offset3139.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3138.i"
  %221 = bitcast i8* %"&pSB[currWI].offset3139.i" to double*
  %"&(pSB[currWI].offset)3210.i" = add nuw i64 %CurrSBIndex..0.i, 5136
  %"&pSB[currWI].offset3211.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3210.i"
  %222 = bitcast i8* %"&pSB[currWI].offset3211.i" to double*
  %"&(pSB[currWI].offset)3282.i" = add nuw i64 %CurrSBIndex..0.i, 5264
  %"&pSB[currWI].offset3283.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3282.i"
  %223 = bitcast i8* %"&pSB[currWI].offset3283.i" to double*
  %"&(pSB[currWI].offset)3354.i" = add nuw i64 %CurrSBIndex..0.i, 5392
  %"&pSB[currWI].offset3355.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3354.i"
  %224 = bitcast i8* %"&pSB[currWI].offset3355.i" to double*
  %"&(pSB[currWI].offset)3426.i" = add nuw i64 %CurrSBIndex..0.i, 5520
  %"&pSB[currWI].offset3427.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3426.i"
  %225 = bitcast i8* %"&pSB[currWI].offset3427.i" to double*
  %"&(pSB[currWI].offset)3498.i" = add nuw i64 %CurrSBIndex..0.i, 5648
  %"&pSB[currWI].offset3499.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3498.i"
  %226 = bitcast i8* %"&pSB[currWI].offset3499.i" to double*
  %"&(pSB[currWI].offset)3570.i" = add nuw i64 %CurrSBIndex..0.i, 5776
  %"&pSB[currWI].offset3571.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3570.i"
  %227 = bitcast i8* %"&pSB[currWI].offset3571.i" to double*
  %"&pSB[currWI].offset2487.sum.i" = add i64 %CurrSBIndex..0.i, 3864
  %228 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2487.sum.i"
  %229 = bitcast i8* %228 to double*
  %"&pSB[currWI].offset2559.sum.i" = add i64 %CurrSBIndex..0.i, 3992
  %230 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2559.sum.i"
  %231 = bitcast i8* %230 to double*
  %"&pSB[currWI].offset2631.sum.i" = add i64 %CurrSBIndex..0.i, 4120
  %232 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2631.sum.i"
  %233 = bitcast i8* %232 to double*
  %"&pSB[currWI].offset2703.sum.i" = add i64 %CurrSBIndex..0.i, 4248
  %234 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2703.sum.i"
  %235 = bitcast i8* %234 to double*
  %"&pSB[currWI].offset2775.sum.i" = add i64 %CurrSBIndex..0.i, 4376
  %236 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2775.sum.i"
  %237 = bitcast i8* %236 to double*
  %"&pSB[currWI].offset2847.sum.i" = add i64 %CurrSBIndex..0.i, 4504
  %238 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2847.sum.i"
  %239 = bitcast i8* %238 to double*
  %"&pSB[currWI].offset2919.sum.i" = add i64 %CurrSBIndex..0.i, 4632
  %240 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2919.sum.i"
  %241 = bitcast i8* %240 to double*
  %"&pSB[currWI].offset2991.sum.i" = add i64 %CurrSBIndex..0.i, 4760
  %242 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2991.sum.i"
  %243 = bitcast i8* %242 to double*
  %"&pSB[currWI].offset3063.sum.i" = add i64 %CurrSBIndex..0.i, 4888
  %244 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3063.sum.i"
  %245 = bitcast i8* %244 to double*
  %"&pSB[currWI].offset3135.sum.i" = add i64 %CurrSBIndex..0.i, 5016
  %246 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3135.sum.i"
  %247 = bitcast i8* %246 to double*
  %"&pSB[currWI].offset3207.sum.i" = add i64 %CurrSBIndex..0.i, 5144
  %248 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3207.sum.i"
  %249 = bitcast i8* %248 to double*
  %"&pSB[currWI].offset3279.sum.i" = add i64 %CurrSBIndex..0.i, 5272
  %250 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3279.sum.i"
  %251 = bitcast i8* %250 to double*
  %"&pSB[currWI].offset3351.sum.i" = add i64 %CurrSBIndex..0.i, 5400
  %252 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3351.sum.i"
  %253 = bitcast i8* %252 to double*
  %"&pSB[currWI].offset3423.sum.i" = add i64 %CurrSBIndex..0.i, 5528
  %254 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3423.sum.i"
  %255 = bitcast i8* %254 to double*
  %"&pSB[currWI].offset3495.sum.i" = add i64 %CurrSBIndex..0.i, 5656
  %256 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3495.sum.i"
  %257 = bitcast i8* %256 to double*
  %"&pSB[currWI].offset3567.sum.i" = add i64 %CurrSBIndex..0.i, 5784
  %258 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3567.sum.i"
  %259 = bitcast i8* %258 to double*
  %"&pSB[currWI].offset2483.sum.i" = add i64 %CurrSBIndex..0.i, 3872
  %260 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2483.sum.i"
  %261 = bitcast i8* %260 to double*
  %"&pSB[currWI].offset2555.sum.i" = add i64 %CurrSBIndex..0.i, 4000
  %262 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2555.sum.i"
  %263 = bitcast i8* %262 to double*
  %"&pSB[currWI].offset2627.sum.i" = add i64 %CurrSBIndex..0.i, 4128
  %264 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2627.sum.i"
  %265 = bitcast i8* %264 to double*
  %"&pSB[currWI].offset2699.sum.i" = add i64 %CurrSBIndex..0.i, 4256
  %266 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2699.sum.i"
  %267 = bitcast i8* %266 to double*
  %"&pSB[currWI].offset2771.sum.i" = add i64 %CurrSBIndex..0.i, 4384
  %268 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2771.sum.i"
  %269 = bitcast i8* %268 to double*
  %"&pSB[currWI].offset2843.sum.i" = add i64 %CurrSBIndex..0.i, 4512
  %270 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2843.sum.i"
  %271 = bitcast i8* %270 to double*
  %"&pSB[currWI].offset2915.sum.i" = add i64 %CurrSBIndex..0.i, 4640
  %272 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2915.sum.i"
  %273 = bitcast i8* %272 to double*
  %"&pSB[currWI].offset2987.sum.i" = add i64 %CurrSBIndex..0.i, 4768
  %274 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2987.sum.i"
  %275 = bitcast i8* %274 to double*
  %"&pSB[currWI].offset3059.sum.i" = add i64 %CurrSBIndex..0.i, 4896
  %276 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3059.sum.i"
  %277 = bitcast i8* %276 to double*
  %"&pSB[currWI].offset3131.sum.i" = add i64 %CurrSBIndex..0.i, 5024
  %278 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3131.sum.i"
  %279 = bitcast i8* %278 to double*
  %"&pSB[currWI].offset3203.sum.i" = add i64 %CurrSBIndex..0.i, 5152
  %280 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3203.sum.i"
  %281 = bitcast i8* %280 to double*
  %"&pSB[currWI].offset3275.sum.i" = add i64 %CurrSBIndex..0.i, 5280
  %282 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3275.sum.i"
  %283 = bitcast i8* %282 to double*
  %"&pSB[currWI].offset3347.sum.i" = add i64 %CurrSBIndex..0.i, 5408
  %284 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3347.sum.i"
  %285 = bitcast i8* %284 to double*
  %"&pSB[currWI].offset3419.sum.i" = add i64 %CurrSBIndex..0.i, 5536
  %286 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3419.sum.i"
  %287 = bitcast i8* %286 to double*
  %"&pSB[currWI].offset3491.sum.i" = add i64 %CurrSBIndex..0.i, 5664
  %288 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3491.sum.i"
  %289 = bitcast i8* %288 to double*
  %"&pSB[currWI].offset3563.sum.i" = add i64 %CurrSBIndex..0.i, 5792
  %290 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3563.sum.i"
  %291 = bitcast i8* %290 to double*
  %"&pSB[currWI].offset2479.sum.i" = add i64 %CurrSBIndex..0.i, 3880
  %292 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2479.sum.i"
  %293 = bitcast i8* %292 to double*
  %"&pSB[currWI].offset2551.sum.i" = add i64 %CurrSBIndex..0.i, 4008
  %294 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2551.sum.i"
  %295 = bitcast i8* %294 to double*
  %"&pSB[currWI].offset2623.sum.i" = add i64 %CurrSBIndex..0.i, 4136
  %296 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2623.sum.i"
  %297 = bitcast i8* %296 to double*
  %"&pSB[currWI].offset2695.sum.i" = add i64 %CurrSBIndex..0.i, 4264
  %298 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2695.sum.i"
  %299 = bitcast i8* %298 to double*
  %"&pSB[currWI].offset2767.sum.i" = add i64 %CurrSBIndex..0.i, 4392
  %300 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2767.sum.i"
  %301 = bitcast i8* %300 to double*
  %"&pSB[currWI].offset2839.sum.i" = add i64 %CurrSBIndex..0.i, 4520
  %302 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2839.sum.i"
  %303 = bitcast i8* %302 to double*
  %"&pSB[currWI].offset2911.sum.i" = add i64 %CurrSBIndex..0.i, 4648
  %304 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2911.sum.i"
  %305 = bitcast i8* %304 to double*
  %"&pSB[currWI].offset2983.sum.i" = add i64 %CurrSBIndex..0.i, 4776
  %306 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2983.sum.i"
  %307 = bitcast i8* %306 to double*
  %"&pSB[currWI].offset3055.sum.i" = add i64 %CurrSBIndex..0.i, 4904
  %308 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3055.sum.i"
  %309 = bitcast i8* %308 to double*
  %"&pSB[currWI].offset3127.sum.i" = add i64 %CurrSBIndex..0.i, 5032
  %310 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3127.sum.i"
  %311 = bitcast i8* %310 to double*
  %"&pSB[currWI].offset3199.sum.i" = add i64 %CurrSBIndex..0.i, 5160
  %312 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3199.sum.i"
  %313 = bitcast i8* %312 to double*
  %"&pSB[currWI].offset3271.sum.i" = add i64 %CurrSBIndex..0.i, 5288
  %314 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3271.sum.i"
  %315 = bitcast i8* %314 to double*
  %"&pSB[currWI].offset3343.sum.i" = add i64 %CurrSBIndex..0.i, 5416
  %316 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3343.sum.i"
  %317 = bitcast i8* %316 to double*
  %"&pSB[currWI].offset3415.sum.i" = add i64 %CurrSBIndex..0.i, 5544
  %318 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3415.sum.i"
  %319 = bitcast i8* %318 to double*
  %"&pSB[currWI].offset3487.sum.i" = add i64 %CurrSBIndex..0.i, 5672
  %320 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3487.sum.i"
  %321 = bitcast i8* %320 to double*
  %"&pSB[currWI].offset3559.sum.i" = add i64 %CurrSBIndex..0.i, 5800
  %322 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3559.sum.i"
  %323 = bitcast i8* %322 to double*
  %"&pSB[currWI].offset2475.sum.i" = add i64 %CurrSBIndex..0.i, 3888
  %324 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2475.sum.i"
  %325 = bitcast i8* %324 to double*
  %"&pSB[currWI].offset2547.sum.i" = add i64 %CurrSBIndex..0.i, 4016
  %326 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2547.sum.i"
  %327 = bitcast i8* %326 to double*
  %"&pSB[currWI].offset2619.sum.i" = add i64 %CurrSBIndex..0.i, 4144
  %328 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2619.sum.i"
  %329 = bitcast i8* %328 to double*
  %"&pSB[currWI].offset2691.sum.i" = add i64 %CurrSBIndex..0.i, 4272
  %330 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2691.sum.i"
  %331 = bitcast i8* %330 to double*
  %"&pSB[currWI].offset2763.sum.i" = add i64 %CurrSBIndex..0.i, 4400
  %332 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2763.sum.i"
  %333 = bitcast i8* %332 to double*
  %"&pSB[currWI].offset2835.sum.i" = add i64 %CurrSBIndex..0.i, 4528
  %334 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2835.sum.i"
  %335 = bitcast i8* %334 to double*
  %"&pSB[currWI].offset2907.sum.i" = add i64 %CurrSBIndex..0.i, 4656
  %336 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2907.sum.i"
  %337 = bitcast i8* %336 to double*
  %"&pSB[currWI].offset2979.sum.i" = add i64 %CurrSBIndex..0.i, 4784
  %338 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2979.sum.i"
  %339 = bitcast i8* %338 to double*
  %"&pSB[currWI].offset3051.sum.i" = add i64 %CurrSBIndex..0.i, 4912
  %340 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3051.sum.i"
  %341 = bitcast i8* %340 to double*
  %"&pSB[currWI].offset3123.sum.i" = add i64 %CurrSBIndex..0.i, 5040
  %342 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3123.sum.i"
  %343 = bitcast i8* %342 to double*
  %"&pSB[currWI].offset3195.sum.i" = add i64 %CurrSBIndex..0.i, 5168
  %344 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3195.sum.i"
  %345 = bitcast i8* %344 to double*
  %"&pSB[currWI].offset3267.sum.i" = add i64 %CurrSBIndex..0.i, 5296
  %346 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3267.sum.i"
  %347 = bitcast i8* %346 to double*
  %"&pSB[currWI].offset3339.sum.i" = add i64 %CurrSBIndex..0.i, 5424
  %348 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3339.sum.i"
  %349 = bitcast i8* %348 to double*
  %"&pSB[currWI].offset3411.sum.i" = add i64 %CurrSBIndex..0.i, 5552
  %350 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3411.sum.i"
  %351 = bitcast i8* %350 to double*
  %"&pSB[currWI].offset3483.sum.i" = add i64 %CurrSBIndex..0.i, 5680
  %352 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3483.sum.i"
  %353 = bitcast i8* %352 to double*
  %"&pSB[currWI].offset3555.sum.i" = add i64 %CurrSBIndex..0.i, 5808
  %354 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3555.sum.i"
  %355 = bitcast i8* %354 to double*
  %"&pSB[currWI].offset2471.sum.i" = add i64 %CurrSBIndex..0.i, 3896
  %356 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2471.sum.i"
  %357 = bitcast i8* %356 to double*
  %"&pSB[currWI].offset2543.sum.i" = add i64 %CurrSBIndex..0.i, 4024
  %358 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2543.sum.i"
  %359 = bitcast i8* %358 to double*
  %"&pSB[currWI].offset2615.sum.i" = add i64 %CurrSBIndex..0.i, 4152
  %360 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2615.sum.i"
  %361 = bitcast i8* %360 to double*
  %"&pSB[currWI].offset2687.sum.i" = add i64 %CurrSBIndex..0.i, 4280
  %362 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2687.sum.i"
  %363 = bitcast i8* %362 to double*
  %"&pSB[currWI].offset2759.sum.i" = add i64 %CurrSBIndex..0.i, 4408
  %364 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2759.sum.i"
  %365 = bitcast i8* %364 to double*
  %"&pSB[currWI].offset2831.sum.i" = add i64 %CurrSBIndex..0.i, 4536
  %366 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2831.sum.i"
  %367 = bitcast i8* %366 to double*
  %"&pSB[currWI].offset2903.sum.i" = add i64 %CurrSBIndex..0.i, 4664
  %368 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2903.sum.i"
  %369 = bitcast i8* %368 to double*
  %"&pSB[currWI].offset2975.sum.i" = add i64 %CurrSBIndex..0.i, 4792
  %370 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2975.sum.i"
  %371 = bitcast i8* %370 to double*
  %"&pSB[currWI].offset3047.sum.i" = add i64 %CurrSBIndex..0.i, 4920
  %372 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3047.sum.i"
  %373 = bitcast i8* %372 to double*
  %"&pSB[currWI].offset3119.sum.i" = add i64 %CurrSBIndex..0.i, 5048
  %374 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3119.sum.i"
  %375 = bitcast i8* %374 to double*
  %"&pSB[currWI].offset3191.sum.i" = add i64 %CurrSBIndex..0.i, 5176
  %376 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3191.sum.i"
  %377 = bitcast i8* %376 to double*
  %"&pSB[currWI].offset3263.sum.i" = add i64 %CurrSBIndex..0.i, 5304
  %378 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3263.sum.i"
  %379 = bitcast i8* %378 to double*
  %"&pSB[currWI].offset3335.sum.i" = add i64 %CurrSBIndex..0.i, 5432
  %380 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3335.sum.i"
  %381 = bitcast i8* %380 to double*
  %"&pSB[currWI].offset3407.sum.i" = add i64 %CurrSBIndex..0.i, 5560
  %382 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3407.sum.i"
  %383 = bitcast i8* %382 to double*
  %"&pSB[currWI].offset3479.sum.i" = add i64 %CurrSBIndex..0.i, 5688
  %384 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3479.sum.i"
  %385 = bitcast i8* %384 to double*
  %"&pSB[currWI].offset3551.sum.i" = add i64 %CurrSBIndex..0.i, 5816
  %386 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3551.sum.i"
  %387 = bitcast i8* %386 to double*
  %"&pSB[currWI].offset2467.sum.i" = add i64 %CurrSBIndex..0.i, 3904
  %388 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2467.sum.i"
  %389 = bitcast i8* %388 to double*
  %"&pSB[currWI].offset2539.sum.i" = add i64 %CurrSBIndex..0.i, 4032
  %390 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2539.sum.i"
  %391 = bitcast i8* %390 to double*
  %"&pSB[currWI].offset2611.sum.i" = add i64 %CurrSBIndex..0.i, 4160
  %392 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2611.sum.i"
  %393 = bitcast i8* %392 to double*
  %"&pSB[currWI].offset2683.sum.i" = add i64 %CurrSBIndex..0.i, 4288
  %394 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2683.sum.i"
  %395 = bitcast i8* %394 to double*
  %"&pSB[currWI].offset2755.sum.i" = add i64 %CurrSBIndex..0.i, 4416
  %396 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2755.sum.i"
  %397 = bitcast i8* %396 to double*
  %"&pSB[currWI].offset2827.sum.i" = add i64 %CurrSBIndex..0.i, 4544
  %398 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2827.sum.i"
  %399 = bitcast i8* %398 to double*
  %"&pSB[currWI].offset2899.sum.i" = add i64 %CurrSBIndex..0.i, 4672
  %400 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2899.sum.i"
  %401 = bitcast i8* %400 to double*
  %"&pSB[currWI].offset2971.sum.i" = add i64 %CurrSBIndex..0.i, 4800
  %402 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2971.sum.i"
  %403 = bitcast i8* %402 to double*
  %"&pSB[currWI].offset3043.sum.i" = add i64 %CurrSBIndex..0.i, 4928
  %404 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3043.sum.i"
  %405 = bitcast i8* %404 to double*
  %"&pSB[currWI].offset3115.sum.i" = add i64 %CurrSBIndex..0.i, 5056
  %406 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3115.sum.i"
  %407 = bitcast i8* %406 to double*
  %"&pSB[currWI].offset3187.sum.i" = add i64 %CurrSBIndex..0.i, 5184
  %408 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3187.sum.i"
  %409 = bitcast i8* %408 to double*
  %"&pSB[currWI].offset3259.sum.i" = add i64 %CurrSBIndex..0.i, 5312
  %410 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3259.sum.i"
  %411 = bitcast i8* %410 to double*
  %"&pSB[currWI].offset3331.sum.i" = add i64 %CurrSBIndex..0.i, 5440
  %412 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3331.sum.i"
  %413 = bitcast i8* %412 to double*
  %"&pSB[currWI].offset3403.sum.i" = add i64 %CurrSBIndex..0.i, 5568
  %414 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3403.sum.i"
  %415 = bitcast i8* %414 to double*
  %"&pSB[currWI].offset3475.sum.i" = add i64 %CurrSBIndex..0.i, 5696
  %416 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3475.sum.i"
  %417 = bitcast i8* %416 to double*
  %"&pSB[currWI].offset3547.sum.i" = add i64 %CurrSBIndex..0.i, 5824
  %418 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3547.sum.i"
  %419 = bitcast i8* %418 to double*
  %"&pSB[currWI].offset2463.sum.i" = add i64 %CurrSBIndex..0.i, 3912
  %420 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2463.sum.i"
  %421 = bitcast i8* %420 to double*
  %"&pSB[currWI].offset2535.sum.i" = add i64 %CurrSBIndex..0.i, 4040
  %422 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2535.sum.i"
  %423 = bitcast i8* %422 to double*
  %"&pSB[currWI].offset2607.sum.i" = add i64 %CurrSBIndex..0.i, 4168
  %424 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2607.sum.i"
  %425 = bitcast i8* %424 to double*
  %"&pSB[currWI].offset2679.sum.i" = add i64 %CurrSBIndex..0.i, 4296
  %426 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2679.sum.i"
  %427 = bitcast i8* %426 to double*
  %"&pSB[currWI].offset2751.sum.i" = add i64 %CurrSBIndex..0.i, 4424
  %428 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2751.sum.i"
  %429 = bitcast i8* %428 to double*
  %"&pSB[currWI].offset2823.sum.i" = add i64 %CurrSBIndex..0.i, 4552
  %430 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2823.sum.i"
  %431 = bitcast i8* %430 to double*
  %"&pSB[currWI].offset2895.sum.i" = add i64 %CurrSBIndex..0.i, 4680
  %432 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2895.sum.i"
  %433 = bitcast i8* %432 to double*
  %"&pSB[currWI].offset2967.sum.i" = add i64 %CurrSBIndex..0.i, 4808
  %434 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2967.sum.i"
  %435 = bitcast i8* %434 to double*
  %"&pSB[currWI].offset3039.sum.i" = add i64 %CurrSBIndex..0.i, 4936
  %436 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3039.sum.i"
  %437 = bitcast i8* %436 to double*
  %"&pSB[currWI].offset3111.sum.i" = add i64 %CurrSBIndex..0.i, 5064
  %438 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3111.sum.i"
  %439 = bitcast i8* %438 to double*
  %"&pSB[currWI].offset3183.sum.i" = add i64 %CurrSBIndex..0.i, 5192
  %440 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3183.sum.i"
  %441 = bitcast i8* %440 to double*
  %"&pSB[currWI].offset3255.sum.i" = add i64 %CurrSBIndex..0.i, 5320
  %442 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3255.sum.i"
  %443 = bitcast i8* %442 to double*
  %"&pSB[currWI].offset3327.sum.i" = add i64 %CurrSBIndex..0.i, 5448
  %444 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3327.sum.i"
  %445 = bitcast i8* %444 to double*
  %"&pSB[currWI].offset3399.sum.i" = add i64 %CurrSBIndex..0.i, 5576
  %446 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3399.sum.i"
  %447 = bitcast i8* %446 to double*
  %"&pSB[currWI].offset3471.sum.i" = add i64 %CurrSBIndex..0.i, 5704
  %448 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3471.sum.i"
  %449 = bitcast i8* %448 to double*
  %"&pSB[currWI].offset3543.sum.i" = add i64 %CurrSBIndex..0.i, 5832
  %450 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3543.sum.i"
  %451 = bitcast i8* %450 to double*
  %"&pSB[currWI].offset2459.sum.i" = add i64 %CurrSBIndex..0.i, 3920
  %452 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2459.sum.i"
  %453 = bitcast i8* %452 to double*
  %"&pSB[currWI].offset2531.sum.i" = add i64 %CurrSBIndex..0.i, 4048
  %454 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2531.sum.i"
  %455 = bitcast i8* %454 to double*
  %"&pSB[currWI].offset2603.sum.i" = add i64 %CurrSBIndex..0.i, 4176
  %456 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2603.sum.i"
  %457 = bitcast i8* %456 to double*
  %"&pSB[currWI].offset2675.sum.i" = add i64 %CurrSBIndex..0.i, 4304
  %458 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2675.sum.i"
  %459 = bitcast i8* %458 to double*
  %"&pSB[currWI].offset2747.sum.i" = add i64 %CurrSBIndex..0.i, 4432
  %460 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2747.sum.i"
  %461 = bitcast i8* %460 to double*
  %"&pSB[currWI].offset2819.sum.i" = add i64 %CurrSBIndex..0.i, 4560
  %462 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2819.sum.i"
  %463 = bitcast i8* %462 to double*
  %"&pSB[currWI].offset2891.sum.i" = add i64 %CurrSBIndex..0.i, 4688
  %464 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2891.sum.i"
  %465 = bitcast i8* %464 to double*
  %"&pSB[currWI].offset2963.sum.i" = add i64 %CurrSBIndex..0.i, 4816
  %466 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2963.sum.i"
  %467 = bitcast i8* %466 to double*
  %"&pSB[currWI].offset3035.sum.i" = add i64 %CurrSBIndex..0.i, 4944
  %468 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3035.sum.i"
  %469 = bitcast i8* %468 to double*
  %"&pSB[currWI].offset3107.sum.i" = add i64 %CurrSBIndex..0.i, 5072
  %470 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3107.sum.i"
  %471 = bitcast i8* %470 to double*
  %"&pSB[currWI].offset3179.sum.i" = add i64 %CurrSBIndex..0.i, 5200
  %472 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3179.sum.i"
  %473 = bitcast i8* %472 to double*
  %"&pSB[currWI].offset3251.sum.i" = add i64 %CurrSBIndex..0.i, 5328
  %474 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3251.sum.i"
  %475 = bitcast i8* %474 to double*
  %"&pSB[currWI].offset3323.sum.i" = add i64 %CurrSBIndex..0.i, 5456
  %476 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3323.sum.i"
  %477 = bitcast i8* %476 to double*
  %"&pSB[currWI].offset3395.sum.i" = add i64 %CurrSBIndex..0.i, 5584
  %478 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3395.sum.i"
  %479 = bitcast i8* %478 to double*
  %"&pSB[currWI].offset3467.sum.i" = add i64 %CurrSBIndex..0.i, 5712
  %480 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3467.sum.i"
  %481 = bitcast i8* %480 to double*
  %"&pSB[currWI].offset3539.sum.i" = add i64 %CurrSBIndex..0.i, 5840
  %482 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3539.sum.i"
  %483 = bitcast i8* %482 to double*
  %"&pSB[currWI].offset2455.sum.i" = add i64 %CurrSBIndex..0.i, 3928
  %484 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2455.sum.i"
  %485 = bitcast i8* %484 to double*
  %"&pSB[currWI].offset2527.sum.i" = add i64 %CurrSBIndex..0.i, 4056
  %486 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2527.sum.i"
  %487 = bitcast i8* %486 to double*
  %"&pSB[currWI].offset2599.sum.i" = add i64 %CurrSBIndex..0.i, 4184
  %488 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2599.sum.i"
  %489 = bitcast i8* %488 to double*
  %"&pSB[currWI].offset2671.sum.i" = add i64 %CurrSBIndex..0.i, 4312
  %490 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2671.sum.i"
  %491 = bitcast i8* %490 to double*
  %"&pSB[currWI].offset2743.sum.i" = add i64 %CurrSBIndex..0.i, 4440
  %492 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2743.sum.i"
  %493 = bitcast i8* %492 to double*
  %"&pSB[currWI].offset2815.sum.i" = add i64 %CurrSBIndex..0.i, 4568
  %494 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2815.sum.i"
  %495 = bitcast i8* %494 to double*
  %"&pSB[currWI].offset2887.sum.i" = add i64 %CurrSBIndex..0.i, 4696
  %496 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2887.sum.i"
  %497 = bitcast i8* %496 to double*
  %"&pSB[currWI].offset2959.sum.i" = add i64 %CurrSBIndex..0.i, 4824
  %498 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2959.sum.i"
  %499 = bitcast i8* %498 to double*
  %"&pSB[currWI].offset3031.sum.i" = add i64 %CurrSBIndex..0.i, 4952
  %500 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3031.sum.i"
  %501 = bitcast i8* %500 to double*
  %"&pSB[currWI].offset3103.sum.i" = add i64 %CurrSBIndex..0.i, 5080
  %502 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3103.sum.i"
  %503 = bitcast i8* %502 to double*
  %"&pSB[currWI].offset3175.sum.i" = add i64 %CurrSBIndex..0.i, 5208
  %504 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3175.sum.i"
  %505 = bitcast i8* %504 to double*
  %"&pSB[currWI].offset3247.sum.i" = add i64 %CurrSBIndex..0.i, 5336
  %506 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3247.sum.i"
  %507 = bitcast i8* %506 to double*
  %"&pSB[currWI].offset3319.sum.i" = add i64 %CurrSBIndex..0.i, 5464
  %508 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3319.sum.i"
  %509 = bitcast i8* %508 to double*
  %"&pSB[currWI].offset3391.sum.i" = add i64 %CurrSBIndex..0.i, 5592
  %510 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3391.sum.i"
  %511 = bitcast i8* %510 to double*
  %"&pSB[currWI].offset3463.sum.i" = add i64 %CurrSBIndex..0.i, 5720
  %512 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3463.sum.i"
  %513 = bitcast i8* %512 to double*
  %"&pSB[currWI].offset3535.sum.i" = add i64 %CurrSBIndex..0.i, 5848
  %514 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3535.sum.i"
  %515 = bitcast i8* %514 to double*
  %"&pSB[currWI].offset2451.sum.i" = add i64 %CurrSBIndex..0.i, 3936
  %516 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2451.sum.i"
  %517 = bitcast i8* %516 to double*
  %"&pSB[currWI].offset2523.sum.i" = add i64 %CurrSBIndex..0.i, 4064
  %518 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2523.sum.i"
  %519 = bitcast i8* %518 to double*
  %"&pSB[currWI].offset2595.sum.i" = add i64 %CurrSBIndex..0.i, 4192
  %520 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2595.sum.i"
  %521 = bitcast i8* %520 to double*
  %"&pSB[currWI].offset2667.sum.i" = add i64 %CurrSBIndex..0.i, 4320
  %522 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2667.sum.i"
  %523 = bitcast i8* %522 to double*
  %"&pSB[currWI].offset2739.sum.i" = add i64 %CurrSBIndex..0.i, 4448
  %524 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2739.sum.i"
  %525 = bitcast i8* %524 to double*
  %"&pSB[currWI].offset2811.sum.i" = add i64 %CurrSBIndex..0.i, 4576
  %526 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2811.sum.i"
  %527 = bitcast i8* %526 to double*
  %"&pSB[currWI].offset2883.sum.i" = add i64 %CurrSBIndex..0.i, 4704
  %528 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2883.sum.i"
  %529 = bitcast i8* %528 to double*
  %"&pSB[currWI].offset2955.sum.i" = add i64 %CurrSBIndex..0.i, 4832
  %530 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2955.sum.i"
  %531 = bitcast i8* %530 to double*
  %"&pSB[currWI].offset3027.sum.i" = add i64 %CurrSBIndex..0.i, 4960
  %532 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3027.sum.i"
  %533 = bitcast i8* %532 to double*
  %"&pSB[currWI].offset3099.sum.i" = add i64 %CurrSBIndex..0.i, 5088
  %534 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3099.sum.i"
  %535 = bitcast i8* %534 to double*
  %"&pSB[currWI].offset3171.sum.i" = add i64 %CurrSBIndex..0.i, 5216
  %536 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3171.sum.i"
  %537 = bitcast i8* %536 to double*
  %"&pSB[currWI].offset3243.sum.i" = add i64 %CurrSBIndex..0.i, 5344
  %538 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3243.sum.i"
  %539 = bitcast i8* %538 to double*
  %"&pSB[currWI].offset3315.sum.i" = add i64 %CurrSBIndex..0.i, 5472
  %540 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3315.sum.i"
  %541 = bitcast i8* %540 to double*
  %"&pSB[currWI].offset3387.sum.i" = add i64 %CurrSBIndex..0.i, 5600
  %542 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3387.sum.i"
  %543 = bitcast i8* %542 to double*
  %"&pSB[currWI].offset3459.sum.i" = add i64 %CurrSBIndex..0.i, 5728
  %544 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3459.sum.i"
  %545 = bitcast i8* %544 to double*
  %"&pSB[currWI].offset3531.sum.i" = add i64 %CurrSBIndex..0.i, 5856
  %546 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3531.sum.i"
  %547 = bitcast i8* %546 to double*
  %"&pSB[currWI].offset2447.sum.i" = add i64 %CurrSBIndex..0.i, 3944
  %548 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2447.sum.i"
  %549 = bitcast i8* %548 to double*
  %"&pSB[currWI].offset2519.sum.i" = add i64 %CurrSBIndex..0.i, 4072
  %550 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2519.sum.i"
  %551 = bitcast i8* %550 to double*
  %"&pSB[currWI].offset2591.sum.i" = add i64 %CurrSBIndex..0.i, 4200
  %552 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2591.sum.i"
  %553 = bitcast i8* %552 to double*
  %"&pSB[currWI].offset2663.sum.i" = add i64 %CurrSBIndex..0.i, 4328
  %554 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2663.sum.i"
  %555 = bitcast i8* %554 to double*
  %"&pSB[currWI].offset2735.sum.i" = add i64 %CurrSBIndex..0.i, 4456
  %556 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2735.sum.i"
  %557 = bitcast i8* %556 to double*
  %"&pSB[currWI].offset2807.sum.i" = add i64 %CurrSBIndex..0.i, 4584
  %558 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2807.sum.i"
  %559 = bitcast i8* %558 to double*
  %"&pSB[currWI].offset2879.sum.i" = add i64 %CurrSBIndex..0.i, 4712
  %560 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2879.sum.i"
  %561 = bitcast i8* %560 to double*
  %"&pSB[currWI].offset2951.sum.i" = add i64 %CurrSBIndex..0.i, 4840
  %562 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2951.sum.i"
  %563 = bitcast i8* %562 to double*
  %"&pSB[currWI].offset3023.sum.i" = add i64 %CurrSBIndex..0.i, 4968
  %564 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3023.sum.i"
  %565 = bitcast i8* %564 to double*
  %"&pSB[currWI].offset3095.sum.i" = add i64 %CurrSBIndex..0.i, 5096
  %566 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3095.sum.i"
  %567 = bitcast i8* %566 to double*
  %"&pSB[currWI].offset3167.sum.i" = add i64 %CurrSBIndex..0.i, 5224
  %568 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3167.sum.i"
  %569 = bitcast i8* %568 to double*
  %"&pSB[currWI].offset3239.sum.i" = add i64 %CurrSBIndex..0.i, 5352
  %570 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3239.sum.i"
  %571 = bitcast i8* %570 to double*
  %"&pSB[currWI].offset3311.sum.i" = add i64 %CurrSBIndex..0.i, 5480
  %572 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3311.sum.i"
  %573 = bitcast i8* %572 to double*
  %"&pSB[currWI].offset3383.sum.i" = add i64 %CurrSBIndex..0.i, 5608
  %574 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3383.sum.i"
  %575 = bitcast i8* %574 to double*
  %"&pSB[currWI].offset3455.sum.i" = add i64 %CurrSBIndex..0.i, 5736
  %576 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3455.sum.i"
  %577 = bitcast i8* %576 to double*
  %"&pSB[currWI].offset3527.sum.i" = add i64 %CurrSBIndex..0.i, 5864
  %578 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3527.sum.i"
  %579 = bitcast i8* %578 to double*
  %"&pSB[currWI].offset2443.sum.i" = add i64 %CurrSBIndex..0.i, 3952
  %580 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2443.sum.i"
  %581 = bitcast i8* %580 to double*
  %"&pSB[currWI].offset2515.sum.i" = add i64 %CurrSBIndex..0.i, 4080
  %582 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2515.sum.i"
  %583 = bitcast i8* %582 to double*
  %"&pSB[currWI].offset2587.sum.i" = add i64 %CurrSBIndex..0.i, 4208
  %584 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2587.sum.i"
  %585 = bitcast i8* %584 to double*
  %"&pSB[currWI].offset2659.sum.i" = add i64 %CurrSBIndex..0.i, 4336
  %586 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2659.sum.i"
  %587 = bitcast i8* %586 to double*
  %"&pSB[currWI].offset2731.sum.i" = add i64 %CurrSBIndex..0.i, 4464
  %588 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2731.sum.i"
  %589 = bitcast i8* %588 to double*
  %"&pSB[currWI].offset2803.sum.i" = add i64 %CurrSBIndex..0.i, 4592
  %590 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2803.sum.i"
  %591 = bitcast i8* %590 to double*
  %"&pSB[currWI].offset2875.sum.i" = add i64 %CurrSBIndex..0.i, 4720
  %592 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2875.sum.i"
  %593 = bitcast i8* %592 to double*
  %"&pSB[currWI].offset2947.sum.i" = add i64 %CurrSBIndex..0.i, 4848
  %594 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2947.sum.i"
  %595 = bitcast i8* %594 to double*
  %"&pSB[currWI].offset3019.sum.i" = add i64 %CurrSBIndex..0.i, 4976
  %596 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3019.sum.i"
  %597 = bitcast i8* %596 to double*
  %"&pSB[currWI].offset3091.sum.i" = add i64 %CurrSBIndex..0.i, 5104
  %598 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3091.sum.i"
  %599 = bitcast i8* %598 to double*
  %"&pSB[currWI].offset3163.sum.i" = add i64 %CurrSBIndex..0.i, 5232
  %600 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3163.sum.i"
  %601 = bitcast i8* %600 to double*
  %"&pSB[currWI].offset3235.sum.i" = add i64 %CurrSBIndex..0.i, 5360
  %602 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3235.sum.i"
  %603 = bitcast i8* %602 to double*
  %"&pSB[currWI].offset3307.sum.i" = add i64 %CurrSBIndex..0.i, 5488
  %604 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3307.sum.i"
  %605 = bitcast i8* %604 to double*
  %"&pSB[currWI].offset3379.sum.i" = add i64 %CurrSBIndex..0.i, 5616
  %606 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3379.sum.i"
  %607 = bitcast i8* %606 to double*
  %"&pSB[currWI].offset3451.sum.i" = add i64 %CurrSBIndex..0.i, 5744
  %608 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3451.sum.i"
  %609 = bitcast i8* %608 to double*
  %"&pSB[currWI].offset3523.sum.i" = add i64 %CurrSBIndex..0.i, 5872
  %610 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3523.sum.i"
  %611 = bitcast i8* %610 to double*
  %"&pSB[currWI].offset2439.sum.i" = add i64 %CurrSBIndex..0.i, 3960
  %612 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2439.sum.i"
  %613 = bitcast i8* %612 to double*
  %"&pSB[currWI].offset2511.sum.i" = add i64 %CurrSBIndex..0.i, 4088
  %614 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2511.sum.i"
  %615 = bitcast i8* %614 to double*
  %"&pSB[currWI].offset2583.sum.i" = add i64 %CurrSBIndex..0.i, 4216
  %616 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2583.sum.i"
  %617 = bitcast i8* %616 to double*
  %"&pSB[currWI].offset2655.sum.i" = add i64 %CurrSBIndex..0.i, 4344
  %618 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2655.sum.i"
  %619 = bitcast i8* %618 to double*
  %"&pSB[currWI].offset2727.sum.i" = add i64 %CurrSBIndex..0.i, 4472
  %620 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2727.sum.i"
  %621 = bitcast i8* %620 to double*
  %"&pSB[currWI].offset2799.sum.i" = add i64 %CurrSBIndex..0.i, 4600
  %622 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2799.sum.i"
  %623 = bitcast i8* %622 to double*
  %"&pSB[currWI].offset2871.sum.i" = add i64 %CurrSBIndex..0.i, 4728
  %624 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2871.sum.i"
  %625 = bitcast i8* %624 to double*
  %"&pSB[currWI].offset2943.sum.i" = add i64 %CurrSBIndex..0.i, 4856
  %626 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2943.sum.i"
  %627 = bitcast i8* %626 to double*
  %"&pSB[currWI].offset3015.sum.i" = add i64 %CurrSBIndex..0.i, 4984
  %628 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3015.sum.i"
  %629 = bitcast i8* %628 to double*
  %"&pSB[currWI].offset3087.sum.i" = add i64 %CurrSBIndex..0.i, 5112
  %630 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3087.sum.i"
  %631 = bitcast i8* %630 to double*
  %"&pSB[currWI].offset3159.sum.i" = add i64 %CurrSBIndex..0.i, 5240
  %632 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3159.sum.i"
  %633 = bitcast i8* %632 to double*
  %"&pSB[currWI].offset3231.sum.i" = add i64 %CurrSBIndex..0.i, 5368
  %634 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3231.sum.i"
  %635 = bitcast i8* %634 to double*
  %"&pSB[currWI].offset3303.sum.i" = add i64 %CurrSBIndex..0.i, 5496
  %636 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3303.sum.i"
  %637 = bitcast i8* %636 to double*
  %"&pSB[currWI].offset3375.sum.i" = add i64 %CurrSBIndex..0.i, 5624
  %638 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3375.sum.i"
  %639 = bitcast i8* %638 to double*
  %"&pSB[currWI].offset3447.sum.i" = add i64 %CurrSBIndex..0.i, 5752
  %640 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3447.sum.i"
  %641 = bitcast i8* %640 to double*
  %"&pSB[currWI].offset3519.sum.i" = add i64 %CurrSBIndex..0.i, 5880
  %642 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3519.sum.i"
  %643 = bitcast i8* %642 to double*
  %"&pSB[currWI].offset2435.sum.i" = add i64 %CurrSBIndex..0.i, 3968
  %644 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2435.sum.i"
  %645 = bitcast i8* %644 to double*
  %"&pSB[currWI].offset2507.sum.i" = add i64 %CurrSBIndex..0.i, 4096
  %646 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2507.sum.i"
  %647 = bitcast i8* %646 to double*
  %"&pSB[currWI].offset2579.sum.i" = add i64 %CurrSBIndex..0.i, 4224
  %648 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2579.sum.i"
  %649 = bitcast i8* %648 to double*
  %"&pSB[currWI].offset2651.sum.i" = add i64 %CurrSBIndex..0.i, 4352
  %650 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2651.sum.i"
  %651 = bitcast i8* %650 to double*
  %"&pSB[currWI].offset2723.sum.i" = add i64 %CurrSBIndex..0.i, 4480
  %652 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2723.sum.i"
  %653 = bitcast i8* %652 to double*
  %"&pSB[currWI].offset2795.sum.i" = add i64 %CurrSBIndex..0.i, 4608
  %654 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2795.sum.i"
  %655 = bitcast i8* %654 to double*
  %"&pSB[currWI].offset2867.sum.i" = add i64 %CurrSBIndex..0.i, 4736
  %656 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2867.sum.i"
  %657 = bitcast i8* %656 to double*
  %"&pSB[currWI].offset2939.sum.i" = add i64 %CurrSBIndex..0.i, 4864
  %658 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2939.sum.i"
  %659 = bitcast i8* %658 to double*
  %"&pSB[currWI].offset3011.sum.i" = add i64 %CurrSBIndex..0.i, 4992
  %660 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3011.sum.i"
  %661 = bitcast i8* %660 to double*
  %"&pSB[currWI].offset3083.sum.i" = add i64 %CurrSBIndex..0.i, 5120
  %662 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3083.sum.i"
  %663 = bitcast i8* %662 to double*
  %"&pSB[currWI].offset3155.sum.i" = add i64 %CurrSBIndex..0.i, 5248
  %664 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3155.sum.i"
  %665 = bitcast i8* %664 to double*
  %"&pSB[currWI].offset3227.sum.i" = add i64 %CurrSBIndex..0.i, 5376
  %666 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3227.sum.i"
  %667 = bitcast i8* %666 to double*
  %"&pSB[currWI].offset3299.sum.i" = add i64 %CurrSBIndex..0.i, 5504
  %668 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3299.sum.i"
  %669 = bitcast i8* %668 to double*
  %"&pSB[currWI].offset3371.sum.i" = add i64 %CurrSBIndex..0.i, 5632
  %670 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3371.sum.i"
  %671 = bitcast i8* %670 to double*
  %"&pSB[currWI].offset3443.sum.i" = add i64 %CurrSBIndex..0.i, 5760
  %672 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3443.sum.i"
  %673 = bitcast i8* %672 to double*
  %"&pSB[currWI].offset3515.sum.i" = add i64 %CurrSBIndex..0.i, 5888
  %674 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3515.sum.i"
  %675 = bitcast i8* %674 to double*
  %"&pSB[currWI].offset2431.sum.i" = add i64 %CurrSBIndex..0.i, 3976
  %676 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2431.sum.i"
  %677 = bitcast i8* %676 to double*
  %"&pSB[currWI].offset2503.sum.i" = add i64 %CurrSBIndex..0.i, 4104
  %678 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2503.sum.i"
  %679 = bitcast i8* %678 to double*
  %"&pSB[currWI].offset2575.sum.i" = add i64 %CurrSBIndex..0.i, 4232
  %680 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2575.sum.i"
  %681 = bitcast i8* %680 to double*
  %"&pSB[currWI].offset2647.sum.i" = add i64 %CurrSBIndex..0.i, 4360
  %682 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2647.sum.i"
  %683 = bitcast i8* %682 to double*
  %"&pSB[currWI].offset2719.sum.i" = add i64 %CurrSBIndex..0.i, 4488
  %684 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2719.sum.i"
  %685 = bitcast i8* %684 to double*
  %"&pSB[currWI].offset2791.sum.i" = add i64 %CurrSBIndex..0.i, 4616
  %686 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2791.sum.i"
  %687 = bitcast i8* %686 to double*
  %"&pSB[currWI].offset2863.sum.i" = add i64 %CurrSBIndex..0.i, 4744
  %688 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2863.sum.i"
  %689 = bitcast i8* %688 to double*
  %"&pSB[currWI].offset2935.sum.i" = add i64 %CurrSBIndex..0.i, 4872
  %690 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset2935.sum.i"
  %691 = bitcast i8* %690 to double*
  %"&pSB[currWI].offset3007.sum.i" = add i64 %CurrSBIndex..0.i, 5000
  %692 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3007.sum.i"
  %693 = bitcast i8* %692 to double*
  %"&pSB[currWI].offset3079.sum.i" = add i64 %CurrSBIndex..0.i, 5128
  %694 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3079.sum.i"
  %695 = bitcast i8* %694 to double*
  %"&pSB[currWI].offset3151.sum.i" = add i64 %CurrSBIndex..0.i, 5256
  %696 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3151.sum.i"
  %697 = bitcast i8* %696 to double*
  %"&pSB[currWI].offset3223.sum.i" = add i64 %CurrSBIndex..0.i, 5384
  %698 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3223.sum.i"
  %699 = bitcast i8* %698 to double*
  %"&pSB[currWI].offset3295.sum.i" = add i64 %CurrSBIndex..0.i, 5512
  %700 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3295.sum.i"
  %701 = bitcast i8* %700 to double*
  %"&pSB[currWI].offset3367.sum.i" = add i64 %CurrSBIndex..0.i, 5640
  %702 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3367.sum.i"
  %703 = bitcast i8* %702 to double*
  %"&pSB[currWI].offset3439.sum.i" = add i64 %CurrSBIndex..0.i, 5768
  %704 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3439.sum.i"
  %705 = bitcast i8* %704 to double*
  %"&pSB[currWI].offset3511.sum.i" = add i64 %CurrSBIndex..0.i, 5896
  %706 = getelementptr inbounds i8* %40, i64 %"&pSB[currWI].offset3511.sum.i"
  %707 = bitcast i8* %706 to double*
  %tmp54117.i = add <16 x i64> %vector116.i, %194
  %"&(pSB[currWI].offset)1608.i" = add nuw i64 %CurrSBIndex..0.i, 1920
  %"&pSB[currWI].offset1609.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1608.i"
  %CastToValueType1610.i = bitcast i8* %"&pSB[currWI].offset1609.i" to <16 x i64>*
  store <16 x i64> %tmp54117.i, <16 x i64>* %CastToValueType1610.i, align 128
  %tmp64118.i = add <16 x i32> %188, %vector2.i
  %tmp65119.i = sext <16 x i32> %tmp64118.i to <16 x i64>
  %tmp66122.i = add <16 x i64> %vector121.i, %tmp65119.i
  %"&(pSB[currWI].offset)1617.i" = add nuw i64 %CurrSBIndex..0.i, 2048
  %"&pSB[currWI].offset1618.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1617.i"
  %CastToValueType1619.i = bitcast i8* %"&pSB[currWI].offset1618.i" to <16 x i64>*
  store <16 x i64> %tmp66122.i, <16 x i64>* %CastToValueType1619.i, align 128
  %tmp72125.i = add <16 x i64> %vector124.i, %tmp65119.i
  %"&(pSB[currWI].offset)1626.i" = add nuw i64 %CurrSBIndex..0.i, 2176
  %"&pSB[currWI].offset1627.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1626.i"
  %CastToValueType1628.i = bitcast i8* %"&pSB[currWI].offset1627.i" to <16 x i64>*
  store <16 x i64> %tmp72125.i, <16 x i64>* %CastToValueType1628.i, align 128
  %tmp78128.i = add <16 x i64> %vector127.i, %tmp65119.i
  %"&(pSB[currWI].offset)1635.i" = add nuw i64 %CurrSBIndex..0.i, 2304
  %"&pSB[currWI].offset1636.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1635.i"
  %CastToValueType1637.i = bitcast i8* %"&pSB[currWI].offset1636.i" to <16 x i64>*
  store <16 x i64> %tmp78128.i, <16 x i64>* %CastToValueType1637.i, align 128
  %tmp83131.i = add <16 x i64> %vector130.i, %tmp65119.i
  %"&(pSB[currWI].offset)1644.i" = add nuw i64 %CurrSBIndex..0.i, 2432
  %"&pSB[currWI].offset1645.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1644.i"
  %CastToValueType1646.i = bitcast i8* %"&pSB[currWI].offset1645.i" to <16 x i64>*
  store <16 x i64> %tmp83131.i, <16 x i64>* %CastToValueType1646.i, align 128
  br label %"Barrier BB.i"

.loopexit.i:                                      ; preds = %SyncBB4618.i
  %"&(pSB[currWI].offset)2412.i" = add nuw i64 %CurrSBIndex..1.i, 3712
  %"&(pSB[currWI].offset)2323.i" = add nuw i64 %CurrSBIndex..1.i, 3584
  %"&(pSB[currWI].offset)2234.i" = add nuw i64 %CurrSBIndex..1.i, 3456
  %"&(pSB[currWI].offset)2145.i" = add nuw i64 %CurrSBIndex..1.i, 3328
  %"&(pSB[currWI].offset)2056.i" = add nuw i64 %CurrSBIndex..1.i, 3200
  %"&pSB[currWI].offset2413.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2412.i"
  %"&pSB[currWI].offset2324.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2323.i"
  %"&pSB[currWI].offset2235.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2234.i"
  %"&pSB[currWI].offset2146.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2145.i"
  %"&pSB[currWI].offset2057.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2056.i"
  %CastToValueType2414.i = bitcast i8* %"&pSB[currWI].offset2413.i" to <16 x double>*
  %CastToValueType2325.i = bitcast i8* %"&pSB[currWI].offset2324.i" to <16 x double>*
  %CastToValueType2236.i = bitcast i8* %"&pSB[currWI].offset2235.i" to <16 x double>*
  %CastToValueType2147.i = bitcast i8* %"&pSB[currWI].offset2146.i" to <16 x double>*
  %CastToValueType2058.i = bitcast i8* %"&pSB[currWI].offset2057.i" to <16 x double>*
  %loadedValue2415.i = load <16 x double>* %CastToValueType2414.i, align 128
  %loadedValue2326.i = load <16 x double>* %CastToValueType2325.i, align 128
  %loadedValue2237.i = load <16 x double>* %CastToValueType2236.i, align 128
  %loadedValue2148.i = load <16 x double>* %CastToValueType2147.i, align 128
  %loadedValue2059.i = load <16 x double>* %CastToValueType2058.i, align 128
  br label %"Barrier BB.i"

"Barrier BB.i":                                   ; preds = %.loopexit.i, %SyncBB4620.i
  %currBarrier.1.i = phi i32 [ %currBarrier.2.i, %SyncBB4620.i ], [ %currBarrier.0.ph.i, %.loopexit.i ]
  %CurrSBIndex..2.i = phi i64 [ %CurrSBIndex..0.i, %SyncBB4620.i ], [ %CurrSBIndex..1.i, %.loopexit.i ]
  %CurrWI..2.i = phi i64 [ %CurrWI..0.i, %SyncBB4620.i ], [ %CurrWI..1.i, %.loopexit.i ]
  %vectorPHI.i = phi <16 x double> [ %207, %SyncBB4620.i ], [ %loadedValue2326.i, %.loopexit.i ]
  %vectorPHI132.i = phi <16 x double> [ %205, %SyncBB4620.i ], [ %loadedValue2237.i, %.loopexit.i ]
  %vectorPHI133.i = phi <16 x double> [ %203, %SyncBB4620.i ], [ %loadedValue2148.i, %.loopexit.i ]
  %vectorPHI134.i = phi <16 x double> [ %201, %SyncBB4620.i ], [ %loadedValue2059.i, %.loopexit.i ]
  %indvar35.i = phi i64 [ 0, %SyncBB4620.i ], [ %indvar.next36.i, %.loopexit.i ]
  %vectorPHI135.i = phi <16 x double> [ %208, %SyncBB4620.i ], [ %loadedValue2415.i, %.loopexit.i ]
  %"&(pSB[currWI].offset)1989.i" = add nuw i64 %CurrSBIndex..2.i, 3072
  %"&pSB[currWI].offset1990.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1989.i"
  %CastToValueType1991.i = bitcast i8* %"&pSB[currWI].offset1990.i" to i64*
  store i64 %indvar35.i, i64* %CastToValueType1991.i, align 8
  %"&(pSB[currWI].offset)1905.i" = add nuw i64 %CurrSBIndex..2.i, 2944
  %"&pSB[currWI].offset1906.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1905.i"
  %CastToValueType1907.i = bitcast i8* %"&pSB[currWI].offset1906.i" to <16 x double>*
  store <16 x double> %vectorPHI134.i, <16 x double>* %CastToValueType1907.i, align 128
  %"&(pSB[currWI].offset)1821.i" = add nuw i64 %CurrSBIndex..2.i, 2816
  %"&pSB[currWI].offset1822.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1821.i"
  %CastToValueType1823.i = bitcast i8* %"&pSB[currWI].offset1822.i" to <16 x double>*
  store <16 x double> %vectorPHI133.i, <16 x double>* %CastToValueType1823.i, align 128
  %"&(pSB[currWI].offset)1737.i" = add nuw i64 %CurrSBIndex..2.i, 2688
  %"&pSB[currWI].offset1738.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1737.i"
  %CastToValueType1739.i = bitcast i8* %"&pSB[currWI].offset1738.i" to <16 x double>*
  store <16 x double> %vectorPHI132.i, <16 x double>* %CastToValueType1739.i, align 128
  %"&(pSB[currWI].offset)1653.i" = add nuw i64 %CurrSBIndex..2.i, 2560
  %"&pSB[currWI].offset1654.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1653.i"
  %CastToValueType1655.i = bitcast i8* %"&pSB[currWI].offset1654.i" to <16 x double>*
  store <16 x double> %vectorPHI.i, <16 x double>* %CastToValueType1655.i, align 128
  %tmp39.i = mul i64 %tmp38.i, %indvar35.i
  %tmp42.i = add i64 %tmp41.i, %tmp39.i
  %tmp43.i = trunc i64 %tmp42.i to i32
  %"&(pSB[currWI].offset)1998.i" = add nuw i64 %CurrSBIndex..2.i, 3080
  %"&pSB[currWI].offset1999.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1998.i"
  %CastToValueType2000.i = bitcast i8* %"&pSB[currWI].offset1999.i" to i32*
  store i32 %tmp43.i, i32* %CastToValueType2000.i, align 4
  %tmp45.i = mul i64 %tmp44.i, %indvar35.i
  %"&(pSB[currWI].offset)1612.i" = add nuw i64 %CurrSBIndex..2.i, 1920
  %"&pSB[currWI].offset1613.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1612.i"
  %CastToValueType1614.i = bitcast i8* %"&pSB[currWI].offset1613.i" to <16 x i64>*
  %loadedValue1615.i = load <16 x i64>* %CastToValueType1614.i, align 128
  %extract139.lhs.i = extractelement <16 x i64> %loadedValue1615.i, i32 0
  %extract139.i = add i64 %extract139.lhs.i, %tmp45.i
  %708 = getelementptr double addrspace(1)* %7, i64 %extract139.i
  %"&(pSB[currWI].offset)2007.i" = add nuw i64 %CurrSBIndex..2.i, 3088
  %"&pSB[currWI].offset2008.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2007.i"
  %CastToValueType2009.i = bitcast i8* %"&pSB[currWI].offset2008.i" to double addrspace(1)**
  store double addrspace(1)* %708, double addrspace(1)** %CastToValueType2009.i, align 8
  %tmp59.i = mul i64 %tmp58.i, %indvar35.i
  %"&(pSB[currWI].offset)1621.i" = add nuw i64 %CurrSBIndex..2.i, 2048
  %"&pSB[currWI].offset1622.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1621.i"
  %CastToValueType1623.i = bitcast i8* %"&pSB[currWI].offset1622.i" to <16 x i64>*
  %loadedValue1624.i = load <16 x i64>* %CastToValueType1623.i, align 128
  %extract158.lhs.i = extractelement <16 x i64> %loadedValue1624.i, i32 0
  %extract158.i = add i64 %extract158.lhs.i, %tmp59.i
  %709 = getelementptr double addrspace(1)* %1, i64 %extract158.i
  %"&(pSB[currWI].offset)2016.i" = add nuw i64 %CurrSBIndex..2.i, 3096
  %"&pSB[currWI].offset2017.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2016.i"
  %CastToValueType2018.i = bitcast i8* %"&pSB[currWI].offset2017.i" to double addrspace(1)**
  store double addrspace(1)* %709, double addrspace(1)** %CastToValueType2018.i, align 8
  %"&(pSB[currWI].offset)1630.i" = add nuw i64 %CurrSBIndex..2.i, 2176
  %"&pSB[currWI].offset1631.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1630.i"
  %CastToValueType1632.i = bitcast i8* %"&pSB[currWI].offset1631.i" to <16 x i64>*
  %loadedValue1633.i = load <16 x i64>* %CastToValueType1632.i, align 128
  %extract175.lhs.i = extractelement <16 x i64> %loadedValue1633.i, i32 0
  %extract175.i = add i64 %extract175.lhs.i, %tmp59.i
  %710 = getelementptr double addrspace(1)* %1, i64 %extract175.i
  %"&(pSB[currWI].offset)2025.i" = add nuw i64 %CurrSBIndex..2.i, 3104
  %"&pSB[currWI].offset2026.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2025.i"
  %CastToValueType2027.i = bitcast i8* %"&pSB[currWI].offset2026.i" to double addrspace(1)**
  store double addrspace(1)* %710, double addrspace(1)** %CastToValueType2027.i, align 8
  %"&(pSB[currWI].offset)1639.i" = add nuw i64 %CurrSBIndex..2.i, 2304
  %"&pSB[currWI].offset1640.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1639.i"
  %CastToValueType1641.i = bitcast i8* %"&pSB[currWI].offset1640.i" to <16 x i64>*
  %loadedValue1642.i = load <16 x i64>* %CastToValueType1641.i, align 128
  %extract192.lhs.i = extractelement <16 x i64> %loadedValue1642.i, i32 0
  %extract192.i = add i64 %extract192.lhs.i, %tmp59.i
  %711 = getelementptr double addrspace(1)* %1, i64 %extract192.i
  %"&(pSB[currWI].offset)2034.i" = add nuw i64 %CurrSBIndex..2.i, 3112
  %"&pSB[currWI].offset2035.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2034.i"
  %CastToValueType2036.i = bitcast i8* %"&pSB[currWI].offset2035.i" to double addrspace(1)**
  store double addrspace(1)* %711, double addrspace(1)** %CastToValueType2036.i, align 8
  %"&(pSB[currWI].offset)1648.i" = add nuw i64 %CurrSBIndex..2.i, 2432
  %"&pSB[currWI].offset1649.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1648.i"
  %CastToValueType1650.i = bitcast i8* %"&pSB[currWI].offset1649.i" to <16 x i64>*
  %loadedValue1651.i = load <16 x i64>* %CastToValueType1650.i, align 128
  %extract209.lhs.i = extractelement <16 x i64> %loadedValue1651.i, i32 0
  %extract209.i = add i64 %extract209.lhs.i, %tmp59.i
  %712 = getelementptr double addrspace(1)* %1, i64 %extract209.i
  %"&(pSB[currWI].offset)2043.i" = add nuw i64 %CurrSBIndex..2.i, 3120
  %"&pSB[currWI].offset2044.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2043.i"
  %CastToValueType2045.i = bitcast i8* %"&pSB[currWI].offset2044.i" to double addrspace(1)**
  store double addrspace(1)* %712, double addrspace(1)** %CastToValueType2045.i, align 8
  %"&(pSB[currWI].offset)1603.i" = add nuw i64 %CurrSBIndex..2.i, 1792
  %"&pSB[currWI].offset1604.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1603.i"
  %CastToValueType1605.i = bitcast i8* %"&pSB[currWI].offset1604.i" to double addrspace(3)**
  %loadedValue1606.i = load double addrspace(3)** %CastToValueType1605.i, align 8
  %ptrTypeCast225.i = bitcast double addrspace(3)* %loadedValue1606.i to <16 x double> addrspace(3)*
  store <16 x double> %vectorPHI135.i, <16 x double> addrspace(3)* %ptrTypeCast225.i, align 8
  %check.WI.iter.i = icmp ult i64 %CurrWI..2.i, %37
  br i1 %check.WI.iter.i, label %thenBB.i, label %SyncBB.i

thenBB.i:                                         ; preds = %"Barrier BB.i"
  %"CurrWI++.i" = add nuw i64 %CurrWI..2.i, 1
  %"loadedCurrSB+Stride.i" = add nuw i64 %CurrSBIndex..2.i, 12032
  %cond.i = icmp eq i32 %currBarrier.1.i, 17
  br i1 %cond.i, label %SyncBB4620.i, label %SyncBB4618.preheader.i

SyncBB.i:                                         ; preds = %thenBB4629.i, %"Barrier BB.i"
  %CurrSBIndex..3.i = phi i64 [ %"loadedCurrSB+Stride4635.i", %thenBB4629.i ], [ 0, %"Barrier BB.i" ]
  %CurrWI..3.i = phi i64 [ %"CurrWI++4633.i", %thenBB4629.i ], [ 0, %"Barrier BB.i" ]
  %"&(pSB[currWI].offset)2020.i" = add nuw i64 %CurrSBIndex..3.i, 3096
  %"&pSB[currWI].offset2021.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2020.i"
  %CastToValueType2022.i = bitcast i8* %"&pSB[currWI].offset2021.i" to double addrspace(1)**
  %loadedValue2023.i = load double addrspace(1)** %CastToValueType2022.i, align 8
  %ptrTypeCast226.i = bitcast double addrspace(1)* %loadedValue2023.i to <16 x double> addrspace(1)*
  %713 = load <16 x double> addrspace(1)* %ptrTypeCast226.i, align 8
  %"&(pSB[currWI].offset)2052.i" = add nuw i64 %CurrSBIndex..3.i, 3200
  %"&pSB[currWI].offset2053.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2052.i"
  %CastToValueType2054.i = bitcast i8* %"&pSB[currWI].offset2053.i" to <16 x double>*
  store <16 x double> %713, <16 x double>* %CastToValueType2054.i, align 128
  %"&(pSB[currWI].offset)2047.i" = add nuw i64 %CurrSBIndex..3.i, 3120
  %"&pSB[currWI].offset2048.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2047.i"
  %CastToValueType2049.i = bitcast i8* %"&pSB[currWI].offset2048.i" to double addrspace(1)**
  %loadedValue2050.i = load double addrspace(1)** %CastToValueType2049.i, align 8
  %ptrTypeCast227.i = bitcast double addrspace(1)* %loadedValue2050.i to <16 x double> addrspace(1)*
  %714 = load <16 x double> addrspace(1)* %ptrTypeCast227.i, align 8
  %"&(pSB[currWI].offset)2141.i" = add nuw i64 %CurrSBIndex..3.i, 3328
  %"&pSB[currWI].offset2142.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2141.i"
  %CastToValueType2143.i = bitcast i8* %"&pSB[currWI].offset2142.i" to <16 x double>*
  store <16 x double> %714, <16 x double>* %CastToValueType2143.i, align 128
  %"&(pSB[currWI].offset)2038.i" = add nuw i64 %CurrSBIndex..3.i, 3112
  %"&pSB[currWI].offset2039.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2038.i"
  %CastToValueType2040.i = bitcast i8* %"&pSB[currWI].offset2039.i" to double addrspace(1)**
  %loadedValue2041.i = load double addrspace(1)** %CastToValueType2040.i, align 8
  %ptrTypeCast228.i = bitcast double addrspace(1)* %loadedValue2041.i to <16 x double> addrspace(1)*
  %715 = load <16 x double> addrspace(1)* %ptrTypeCast228.i, align 8
  %"&(pSB[currWI].offset)2230.i" = add nuw i64 %CurrSBIndex..3.i, 3456
  %"&pSB[currWI].offset2231.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2230.i"
  %CastToValueType2232.i = bitcast i8* %"&pSB[currWI].offset2231.i" to <16 x double>*
  store <16 x double> %715, <16 x double>* %CastToValueType2232.i, align 128
  %"&(pSB[currWI].offset)2029.i" = add nuw i64 %CurrSBIndex..3.i, 3104
  %"&pSB[currWI].offset2030.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2029.i"
  %CastToValueType2031.i = bitcast i8* %"&pSB[currWI].offset2030.i" to double addrspace(1)**
  %loadedValue2032.i = load double addrspace(1)** %CastToValueType2031.i, align 8
  %ptrTypeCast229.i = bitcast double addrspace(1)* %loadedValue2032.i to <16 x double> addrspace(1)*
  %716 = load <16 x double> addrspace(1)* %ptrTypeCast229.i, align 8
  %"&(pSB[currWI].offset)2319.i" = add nuw i64 %CurrSBIndex..3.i, 3584
  %"&pSB[currWI].offset2320.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2319.i"
  %CastToValueType2321.i = bitcast i8* %"&pSB[currWI].offset2320.i" to <16 x double>*
  store <16 x double> %716, <16 x double>* %CastToValueType2321.i, align 128
  %"&(pSB[currWI].offset)2011.i" = add nuw i64 %CurrSBIndex..3.i, 3088
  %"&pSB[currWI].offset2012.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2011.i"
  %CastToValueType2013.i = bitcast i8* %"&pSB[currWI].offset2012.i" to double addrspace(1)**
  %loadedValue2014.i = load double addrspace(1)** %CastToValueType2013.i, align 8
  %ptrTypeCast230.i = bitcast double addrspace(1)* %loadedValue2014.i to <16 x double> addrspace(1)*
  %717 = load <16 x double> addrspace(1)* %ptrTypeCast230.i, align 8
  %"&(pSB[currWI].offset)2408.i" = add nuw i64 %CurrSBIndex..3.i, 3712
  %"&pSB[currWI].offset2409.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2408.i"
  %CastToValueType2410.i = bitcast i8* %"&pSB[currWI].offset2409.i" to <16 x double>*
  store <16 x double> %717, <16 x double>* %CastToValueType2410.i, align 128
  %718 = load double addrspace(3)* %42, align 16
  %temp231.i = insertelement <16 x double> undef, double %718, i32 0
  %vector232.i = shufflevector <16 x double> %temp231.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1984.i" = add nuw i64 %CurrSBIndex..3.i, 2944
  %"&pSB[currWI].offset1985.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1984.i"
  %CastToValueType1986.i = bitcast i8* %"&pSB[currWI].offset1985.i" to <16 x double>*
  %loadedValue1987.i = load <16 x double>* %CastToValueType1986.i, align 128
  %719 = fmul <16 x double> %loadedValue1987.i, %vector232.i
  %720 = load double* %212, align 16
  %721 = load double* %213, align 16
  %722 = load double* %214, align 16
  %723 = load double* %215, align 16
  %724 = load double* %216, align 16
  %725 = load double* %217, align 16
  %726 = load double* %218, align 16
  %727 = load double* %219, align 16
  %728 = load double* %220, align 16
  %729 = load double* %221, align 16
  %730 = load double* %222, align 16
  %731 = load double* %223, align 16
  %732 = load double* %224, align 16
  %733 = load double* %225, align 16
  %734 = load double* %226, align 16
  %735 = load double* %227, align 16
  %temp.vect.i = insertelement <16 x double> undef, double %720, i32 0
  %temp.vect233.i = insertelement <16 x double> %temp.vect.i, double %721, i32 1
  %temp.vect234.i = insertelement <16 x double> %temp.vect233.i, double %722, i32 2
  %temp.vect235.i = insertelement <16 x double> %temp.vect234.i, double %723, i32 3
  %temp.vect236.i = insertelement <16 x double> %temp.vect235.i, double %724, i32 4
  %temp.vect237.i = insertelement <16 x double> %temp.vect236.i, double %725, i32 5
  %temp.vect238.i = insertelement <16 x double> %temp.vect237.i, double %726, i32 6
  %temp.vect239.i = insertelement <16 x double> %temp.vect238.i, double %727, i32 7
  %temp.vect240.i = insertelement <16 x double> %temp.vect239.i, double %728, i32 8
  %temp.vect241.i = insertelement <16 x double> %temp.vect240.i, double %729, i32 9
  %temp.vect242.i = insertelement <16 x double> %temp.vect241.i, double %730, i32 10
  %temp.vect243.i = insertelement <16 x double> %temp.vect242.i, double %731, i32 11
  %temp.vect244.i = insertelement <16 x double> %temp.vect243.i, double %732, i32 12
  %temp.vect245.i = insertelement <16 x double> %temp.vect244.i, double %733, i32 13
  %temp.vect246.i = insertelement <16 x double> %temp.vect245.i, double %734, i32 14
  %temp.vect247.i = insertelement <16 x double> %temp.vect246.i, double %735, i32 15
  %736 = fadd <16 x double> %temp.vect247.i, %719
  %737 = load double addrspace(3)* %44, align 8
  %temp248.i = insertelement <16 x double> undef, double %737, i32 0
  %vector249.i = shufflevector <16 x double> %temp248.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1979.i" = add nuw i64 %CurrSBIndex..3.i, 2944
  %"&pSB[currWI].offset1980.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1979.i"
  %CastToValueType1981.i = bitcast i8* %"&pSB[currWI].offset1980.i" to <16 x double>*
  %loadedValue1982.i = load <16 x double>* %CastToValueType1981.i, align 128
  %738 = fmul <16 x double> %loadedValue1982.i, %vector249.i
  %739 = load double* %229, align 8
  %740 = load double* %231, align 8
  %741 = load double* %233, align 8
  %742 = load double* %235, align 8
  %743 = load double* %237, align 8
  %744 = load double* %239, align 8
  %745 = load double* %241, align 8
  %746 = load double* %243, align 8
  %747 = load double* %245, align 8
  %748 = load double* %247, align 8
  %749 = load double* %249, align 8
  %750 = load double* %251, align 8
  %751 = load double* %253, align 8
  %752 = load double* %255, align 8
  %753 = load double* %257, align 8
  %754 = load double* %259, align 8
  %temp.vect250.i = insertelement <16 x double> undef, double %739, i32 0
  %temp.vect251.i = insertelement <16 x double> %temp.vect250.i, double %740, i32 1
  %temp.vect252.i = insertelement <16 x double> %temp.vect251.i, double %741, i32 2
  %temp.vect253.i = insertelement <16 x double> %temp.vect252.i, double %742, i32 3
  %temp.vect254.i = insertelement <16 x double> %temp.vect253.i, double %743, i32 4
  %temp.vect255.i = insertelement <16 x double> %temp.vect254.i, double %744, i32 5
  %temp.vect256.i = insertelement <16 x double> %temp.vect255.i, double %745, i32 6
  %temp.vect257.i = insertelement <16 x double> %temp.vect256.i, double %746, i32 7
  %temp.vect258.i = insertelement <16 x double> %temp.vect257.i, double %747, i32 8
  %temp.vect259.i = insertelement <16 x double> %temp.vect258.i, double %748, i32 9
  %temp.vect260.i = insertelement <16 x double> %temp.vect259.i, double %749, i32 10
  %temp.vect261.i = insertelement <16 x double> %temp.vect260.i, double %750, i32 11
  %temp.vect262.i = insertelement <16 x double> %temp.vect261.i, double %751, i32 12
  %temp.vect263.i = insertelement <16 x double> %temp.vect262.i, double %752, i32 13
  %temp.vect264.i = insertelement <16 x double> %temp.vect263.i, double %753, i32 14
  %temp.vect265.i = insertelement <16 x double> %temp.vect264.i, double %754, i32 15
  %755 = fadd <16 x double> %temp.vect265.i, %738
  %756 = load double addrspace(3)* %46, align 16
  %temp266.i = insertelement <16 x double> undef, double %756, i32 0
  %vector267.i = shufflevector <16 x double> %temp266.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1974.i" = add nuw i64 %CurrSBIndex..3.i, 2944
  %"&pSB[currWI].offset1975.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1974.i"
  %CastToValueType1976.i = bitcast i8* %"&pSB[currWI].offset1975.i" to <16 x double>*
  %loadedValue1977.i = load <16 x double>* %CastToValueType1976.i, align 128
  %757 = fmul <16 x double> %loadedValue1977.i, %vector267.i
  %758 = load double* %261, align 16
  %759 = load double* %263, align 16
  %760 = load double* %265, align 16
  %761 = load double* %267, align 16
  %762 = load double* %269, align 16
  %763 = load double* %271, align 16
  %764 = load double* %273, align 16
  %765 = load double* %275, align 16
  %766 = load double* %277, align 16
  %767 = load double* %279, align 16
  %768 = load double* %281, align 16
  %769 = load double* %283, align 16
  %770 = load double* %285, align 16
  %771 = load double* %287, align 16
  %772 = load double* %289, align 16
  %773 = load double* %291, align 16
  %temp.vect268.i = insertelement <16 x double> undef, double %758, i32 0
  %temp.vect269.i = insertelement <16 x double> %temp.vect268.i, double %759, i32 1
  %temp.vect270.i = insertelement <16 x double> %temp.vect269.i, double %760, i32 2
  %temp.vect271.i = insertelement <16 x double> %temp.vect270.i, double %761, i32 3
  %temp.vect272.i = insertelement <16 x double> %temp.vect271.i, double %762, i32 4
  %temp.vect273.i = insertelement <16 x double> %temp.vect272.i, double %763, i32 5
  %temp.vect274.i = insertelement <16 x double> %temp.vect273.i, double %764, i32 6
  %temp.vect275.i = insertelement <16 x double> %temp.vect274.i, double %765, i32 7
  %temp.vect276.i = insertelement <16 x double> %temp.vect275.i, double %766, i32 8
  %temp.vect277.i = insertelement <16 x double> %temp.vect276.i, double %767, i32 9
  %temp.vect278.i = insertelement <16 x double> %temp.vect277.i, double %768, i32 10
  %temp.vect279.i = insertelement <16 x double> %temp.vect278.i, double %769, i32 11
  %temp.vect280.i = insertelement <16 x double> %temp.vect279.i, double %770, i32 12
  %temp.vect281.i = insertelement <16 x double> %temp.vect280.i, double %771, i32 13
  %temp.vect282.i = insertelement <16 x double> %temp.vect281.i, double %772, i32 14
  %temp.vect283.i = insertelement <16 x double> %temp.vect282.i, double %773, i32 15
  %774 = fadd <16 x double> %temp.vect283.i, %757
  %775 = load double addrspace(3)* %48, align 8
  %temp284.i = insertelement <16 x double> undef, double %775, i32 0
  %vector285.i = shufflevector <16 x double> %temp284.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1969.i" = add nuw i64 %CurrSBIndex..3.i, 2944
  %"&pSB[currWI].offset1970.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1969.i"
  %CastToValueType1971.i = bitcast i8* %"&pSB[currWI].offset1970.i" to <16 x double>*
  %loadedValue1972.i = load <16 x double>* %CastToValueType1971.i, align 128
  %776 = fmul <16 x double> %loadedValue1972.i, %vector285.i
  %777 = load double* %293, align 8
  %778 = load double* %295, align 8
  %779 = load double* %297, align 8
  %780 = load double* %299, align 8
  %781 = load double* %301, align 8
  %782 = load double* %303, align 8
  %783 = load double* %305, align 8
  %784 = load double* %307, align 8
  %785 = load double* %309, align 8
  %786 = load double* %311, align 8
  %787 = load double* %313, align 8
  %788 = load double* %315, align 8
  %789 = load double* %317, align 8
  %790 = load double* %319, align 8
  %791 = load double* %321, align 8
  %792 = load double* %323, align 8
  %temp.vect286.i = insertelement <16 x double> undef, double %777, i32 0
  %temp.vect287.i = insertelement <16 x double> %temp.vect286.i, double %778, i32 1
  %temp.vect288.i = insertelement <16 x double> %temp.vect287.i, double %779, i32 2
  %temp.vect289.i = insertelement <16 x double> %temp.vect288.i, double %780, i32 3
  %temp.vect290.i = insertelement <16 x double> %temp.vect289.i, double %781, i32 4
  %temp.vect291.i = insertelement <16 x double> %temp.vect290.i, double %782, i32 5
  %temp.vect292.i = insertelement <16 x double> %temp.vect291.i, double %783, i32 6
  %temp.vect293.i = insertelement <16 x double> %temp.vect292.i, double %784, i32 7
  %temp.vect294.i = insertelement <16 x double> %temp.vect293.i, double %785, i32 8
  %temp.vect295.i = insertelement <16 x double> %temp.vect294.i, double %786, i32 9
  %temp.vect296.i = insertelement <16 x double> %temp.vect295.i, double %787, i32 10
  %temp.vect297.i = insertelement <16 x double> %temp.vect296.i, double %788, i32 11
  %temp.vect298.i = insertelement <16 x double> %temp.vect297.i, double %789, i32 12
  %temp.vect299.i = insertelement <16 x double> %temp.vect298.i, double %790, i32 13
  %temp.vect300.i = insertelement <16 x double> %temp.vect299.i, double %791, i32 14
  %temp.vect301.i = insertelement <16 x double> %temp.vect300.i, double %792, i32 15
  %793 = fadd <16 x double> %temp.vect301.i, %776
  %794 = load double addrspace(3)* %50, align 16
  %temp302.i = insertelement <16 x double> undef, double %794, i32 0
  %vector303.i = shufflevector <16 x double> %temp302.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1964.i" = add nuw i64 %CurrSBIndex..3.i, 2944
  %"&pSB[currWI].offset1965.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1964.i"
  %CastToValueType1966.i = bitcast i8* %"&pSB[currWI].offset1965.i" to <16 x double>*
  %loadedValue1967.i = load <16 x double>* %CastToValueType1966.i, align 128
  %795 = fmul <16 x double> %loadedValue1967.i, %vector303.i
  %796 = load double* %325, align 16
  %797 = load double* %327, align 16
  %798 = load double* %329, align 16
  %799 = load double* %331, align 16
  %800 = load double* %333, align 16
  %801 = load double* %335, align 16
  %802 = load double* %337, align 16
  %803 = load double* %339, align 16
  %804 = load double* %341, align 16
  %805 = load double* %343, align 16
  %806 = load double* %345, align 16
  %807 = load double* %347, align 16
  %808 = load double* %349, align 16
  %809 = load double* %351, align 16
  %810 = load double* %353, align 16
  %811 = load double* %355, align 16
  %temp.vect304.i = insertelement <16 x double> undef, double %796, i32 0
  %temp.vect305.i = insertelement <16 x double> %temp.vect304.i, double %797, i32 1
  %temp.vect306.i = insertelement <16 x double> %temp.vect305.i, double %798, i32 2
  %temp.vect307.i = insertelement <16 x double> %temp.vect306.i, double %799, i32 3
  %temp.vect308.i = insertelement <16 x double> %temp.vect307.i, double %800, i32 4
  %temp.vect309.i = insertelement <16 x double> %temp.vect308.i, double %801, i32 5
  %temp.vect310.i = insertelement <16 x double> %temp.vect309.i, double %802, i32 6
  %temp.vect311.i = insertelement <16 x double> %temp.vect310.i, double %803, i32 7
  %temp.vect312.i = insertelement <16 x double> %temp.vect311.i, double %804, i32 8
  %temp.vect313.i = insertelement <16 x double> %temp.vect312.i, double %805, i32 9
  %temp.vect314.i = insertelement <16 x double> %temp.vect313.i, double %806, i32 10
  %temp.vect315.i = insertelement <16 x double> %temp.vect314.i, double %807, i32 11
  %temp.vect316.i = insertelement <16 x double> %temp.vect315.i, double %808, i32 12
  %temp.vect317.i = insertelement <16 x double> %temp.vect316.i, double %809, i32 13
  %temp.vect318.i = insertelement <16 x double> %temp.vect317.i, double %810, i32 14
  %temp.vect319.i = insertelement <16 x double> %temp.vect318.i, double %811, i32 15
  %812 = fadd <16 x double> %temp.vect319.i, %795
  %813 = load double addrspace(3)* %52, align 8
  %temp320.i = insertelement <16 x double> undef, double %813, i32 0
  %vector321.i = shufflevector <16 x double> %temp320.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1959.i" = add nuw i64 %CurrSBIndex..3.i, 2944
  %"&pSB[currWI].offset1960.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1959.i"
  %CastToValueType1961.i = bitcast i8* %"&pSB[currWI].offset1960.i" to <16 x double>*
  %loadedValue1962.i = load <16 x double>* %CastToValueType1961.i, align 128
  %814 = fmul <16 x double> %loadedValue1962.i, %vector321.i
  %815 = load double* %357, align 8
  %816 = load double* %359, align 8
  %817 = load double* %361, align 8
  %818 = load double* %363, align 8
  %819 = load double* %365, align 8
  %820 = load double* %367, align 8
  %821 = load double* %369, align 8
  %822 = load double* %371, align 8
  %823 = load double* %373, align 8
  %824 = load double* %375, align 8
  %825 = load double* %377, align 8
  %826 = load double* %379, align 8
  %827 = load double* %381, align 8
  %828 = load double* %383, align 8
  %829 = load double* %385, align 8
  %830 = load double* %387, align 8
  %temp.vect322.i = insertelement <16 x double> undef, double %815, i32 0
  %temp.vect323.i = insertelement <16 x double> %temp.vect322.i, double %816, i32 1
  %temp.vect324.i = insertelement <16 x double> %temp.vect323.i, double %817, i32 2
  %temp.vect325.i = insertelement <16 x double> %temp.vect324.i, double %818, i32 3
  %temp.vect326.i = insertelement <16 x double> %temp.vect325.i, double %819, i32 4
  %temp.vect327.i = insertelement <16 x double> %temp.vect326.i, double %820, i32 5
  %temp.vect328.i = insertelement <16 x double> %temp.vect327.i, double %821, i32 6
  %temp.vect329.i = insertelement <16 x double> %temp.vect328.i, double %822, i32 7
  %temp.vect330.i = insertelement <16 x double> %temp.vect329.i, double %823, i32 8
  %temp.vect331.i = insertelement <16 x double> %temp.vect330.i, double %824, i32 9
  %temp.vect332.i = insertelement <16 x double> %temp.vect331.i, double %825, i32 10
  %temp.vect333.i = insertelement <16 x double> %temp.vect332.i, double %826, i32 11
  %temp.vect334.i = insertelement <16 x double> %temp.vect333.i, double %827, i32 12
  %temp.vect335.i = insertelement <16 x double> %temp.vect334.i, double %828, i32 13
  %temp.vect336.i = insertelement <16 x double> %temp.vect335.i, double %829, i32 14
  %temp.vect337.i = insertelement <16 x double> %temp.vect336.i, double %830, i32 15
  %831 = fadd <16 x double> %temp.vect337.i, %814
  %832 = load double addrspace(3)* %54, align 16
  %temp338.i = insertelement <16 x double> undef, double %832, i32 0
  %vector339.i = shufflevector <16 x double> %temp338.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1954.i" = add nuw i64 %CurrSBIndex..3.i, 2944
  %"&pSB[currWI].offset1955.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1954.i"
  %CastToValueType1956.i = bitcast i8* %"&pSB[currWI].offset1955.i" to <16 x double>*
  %loadedValue1957.i = load <16 x double>* %CastToValueType1956.i, align 128
  %833 = fmul <16 x double> %loadedValue1957.i, %vector339.i
  %834 = load double* %389, align 16
  %835 = load double* %391, align 16
  %836 = load double* %393, align 16
  %837 = load double* %395, align 16
  %838 = load double* %397, align 16
  %839 = load double* %399, align 16
  %840 = load double* %401, align 16
  %841 = load double* %403, align 16
  %842 = load double* %405, align 16
  %843 = load double* %407, align 16
  %844 = load double* %409, align 16
  %845 = load double* %411, align 16
  %846 = load double* %413, align 16
  %847 = load double* %415, align 16
  %848 = load double* %417, align 16
  %849 = load double* %419, align 16
  %temp.vect340.i = insertelement <16 x double> undef, double %834, i32 0
  %temp.vect341.i = insertelement <16 x double> %temp.vect340.i, double %835, i32 1
  %temp.vect342.i = insertelement <16 x double> %temp.vect341.i, double %836, i32 2
  %temp.vect343.i = insertelement <16 x double> %temp.vect342.i, double %837, i32 3
  %temp.vect344.i = insertelement <16 x double> %temp.vect343.i, double %838, i32 4
  %temp.vect345.i = insertelement <16 x double> %temp.vect344.i, double %839, i32 5
  %temp.vect346.i = insertelement <16 x double> %temp.vect345.i, double %840, i32 6
  %temp.vect347.i = insertelement <16 x double> %temp.vect346.i, double %841, i32 7
  %temp.vect348.i = insertelement <16 x double> %temp.vect347.i, double %842, i32 8
  %temp.vect349.i = insertelement <16 x double> %temp.vect348.i, double %843, i32 9
  %temp.vect350.i = insertelement <16 x double> %temp.vect349.i, double %844, i32 10
  %temp.vect351.i = insertelement <16 x double> %temp.vect350.i, double %845, i32 11
  %temp.vect352.i = insertelement <16 x double> %temp.vect351.i, double %846, i32 12
  %temp.vect353.i = insertelement <16 x double> %temp.vect352.i, double %847, i32 13
  %temp.vect354.i = insertelement <16 x double> %temp.vect353.i, double %848, i32 14
  %temp.vect355.i = insertelement <16 x double> %temp.vect354.i, double %849, i32 15
  %850 = fadd <16 x double> %temp.vect355.i, %833
  %851 = load double addrspace(3)* %56, align 8
  %temp356.i = insertelement <16 x double> undef, double %851, i32 0
  %vector357.i = shufflevector <16 x double> %temp356.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1949.i" = add nuw i64 %CurrSBIndex..3.i, 2944
  %"&pSB[currWI].offset1950.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1949.i"
  %CastToValueType1951.i = bitcast i8* %"&pSB[currWI].offset1950.i" to <16 x double>*
  %loadedValue1952.i = load <16 x double>* %CastToValueType1951.i, align 128
  %852 = fmul <16 x double> %loadedValue1952.i, %vector357.i
  %853 = load double* %421, align 8
  %854 = load double* %423, align 8
  %855 = load double* %425, align 8
  %856 = load double* %427, align 8
  %857 = load double* %429, align 8
  %858 = load double* %431, align 8
  %859 = load double* %433, align 8
  %860 = load double* %435, align 8
  %861 = load double* %437, align 8
  %862 = load double* %439, align 8
  %863 = load double* %441, align 8
  %864 = load double* %443, align 8
  %865 = load double* %445, align 8
  %866 = load double* %447, align 8
  %867 = load double* %449, align 8
  %868 = load double* %451, align 8
  %temp.vect358.i = insertelement <16 x double> undef, double %853, i32 0
  %temp.vect359.i = insertelement <16 x double> %temp.vect358.i, double %854, i32 1
  %temp.vect360.i = insertelement <16 x double> %temp.vect359.i, double %855, i32 2
  %temp.vect361.i = insertelement <16 x double> %temp.vect360.i, double %856, i32 3
  %temp.vect362.i = insertelement <16 x double> %temp.vect361.i, double %857, i32 4
  %temp.vect363.i = insertelement <16 x double> %temp.vect362.i, double %858, i32 5
  %temp.vect364.i = insertelement <16 x double> %temp.vect363.i, double %859, i32 6
  %temp.vect365.i = insertelement <16 x double> %temp.vect364.i, double %860, i32 7
  %temp.vect366.i = insertelement <16 x double> %temp.vect365.i, double %861, i32 8
  %temp.vect367.i = insertelement <16 x double> %temp.vect366.i, double %862, i32 9
  %temp.vect368.i = insertelement <16 x double> %temp.vect367.i, double %863, i32 10
  %temp.vect369.i = insertelement <16 x double> %temp.vect368.i, double %864, i32 11
  %temp.vect370.i = insertelement <16 x double> %temp.vect369.i, double %865, i32 12
  %temp.vect371.i = insertelement <16 x double> %temp.vect370.i, double %866, i32 13
  %temp.vect372.i = insertelement <16 x double> %temp.vect371.i, double %867, i32 14
  %temp.vect373.i = insertelement <16 x double> %temp.vect372.i, double %868, i32 15
  %869 = fadd <16 x double> %temp.vect373.i, %852
  %870 = load double addrspace(3)* %58, align 16
  %temp374.i = insertelement <16 x double> undef, double %870, i32 0
  %vector375.i = shufflevector <16 x double> %temp374.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1944.i" = add nuw i64 %CurrSBIndex..3.i, 2944
  %"&pSB[currWI].offset1945.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1944.i"
  %CastToValueType1946.i = bitcast i8* %"&pSB[currWI].offset1945.i" to <16 x double>*
  %loadedValue1947.i = load <16 x double>* %CastToValueType1946.i, align 128
  %871 = fmul <16 x double> %loadedValue1947.i, %vector375.i
  %872 = load double* %453, align 16
  %873 = load double* %455, align 16
  %874 = load double* %457, align 16
  %875 = load double* %459, align 16
  %876 = load double* %461, align 16
  %877 = load double* %463, align 16
  %878 = load double* %465, align 16
  %879 = load double* %467, align 16
  %880 = load double* %469, align 16
  %881 = load double* %471, align 16
  %882 = load double* %473, align 16
  %883 = load double* %475, align 16
  %884 = load double* %477, align 16
  %885 = load double* %479, align 16
  %886 = load double* %481, align 16
  %887 = load double* %483, align 16
  %temp.vect376.i = insertelement <16 x double> undef, double %872, i32 0
  %temp.vect377.i = insertelement <16 x double> %temp.vect376.i, double %873, i32 1
  %temp.vect378.i = insertelement <16 x double> %temp.vect377.i, double %874, i32 2
  %temp.vect379.i = insertelement <16 x double> %temp.vect378.i, double %875, i32 3
  %temp.vect380.i = insertelement <16 x double> %temp.vect379.i, double %876, i32 4
  %temp.vect381.i = insertelement <16 x double> %temp.vect380.i, double %877, i32 5
  %temp.vect382.i = insertelement <16 x double> %temp.vect381.i, double %878, i32 6
  %temp.vect383.i = insertelement <16 x double> %temp.vect382.i, double %879, i32 7
  %temp.vect384.i = insertelement <16 x double> %temp.vect383.i, double %880, i32 8
  %temp.vect385.i = insertelement <16 x double> %temp.vect384.i, double %881, i32 9
  %temp.vect386.i = insertelement <16 x double> %temp.vect385.i, double %882, i32 10
  %temp.vect387.i = insertelement <16 x double> %temp.vect386.i, double %883, i32 11
  %temp.vect388.i = insertelement <16 x double> %temp.vect387.i, double %884, i32 12
  %temp.vect389.i = insertelement <16 x double> %temp.vect388.i, double %885, i32 13
  %temp.vect390.i = insertelement <16 x double> %temp.vect389.i, double %886, i32 14
  %temp.vect391.i = insertelement <16 x double> %temp.vect390.i, double %887, i32 15
  %888 = fadd <16 x double> %temp.vect391.i, %871
  %889 = load double addrspace(3)* %60, align 8
  %temp392.i = insertelement <16 x double> undef, double %889, i32 0
  %vector393.i = shufflevector <16 x double> %temp392.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1939.i" = add nuw i64 %CurrSBIndex..3.i, 2944
  %"&pSB[currWI].offset1940.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1939.i"
  %CastToValueType1941.i = bitcast i8* %"&pSB[currWI].offset1940.i" to <16 x double>*
  %loadedValue1942.i = load <16 x double>* %CastToValueType1941.i, align 128
  %890 = fmul <16 x double> %loadedValue1942.i, %vector393.i
  %891 = load double* %485, align 8
  %892 = load double* %487, align 8
  %893 = load double* %489, align 8
  %894 = load double* %491, align 8
  %895 = load double* %493, align 8
  %896 = load double* %495, align 8
  %897 = load double* %497, align 8
  %898 = load double* %499, align 8
  %899 = load double* %501, align 8
  %900 = load double* %503, align 8
  %901 = load double* %505, align 8
  %902 = load double* %507, align 8
  %903 = load double* %509, align 8
  %904 = load double* %511, align 8
  %905 = load double* %513, align 8
  %906 = load double* %515, align 8
  %temp.vect394.i = insertelement <16 x double> undef, double %891, i32 0
  %temp.vect395.i = insertelement <16 x double> %temp.vect394.i, double %892, i32 1
  %temp.vect396.i = insertelement <16 x double> %temp.vect395.i, double %893, i32 2
  %temp.vect397.i = insertelement <16 x double> %temp.vect396.i, double %894, i32 3
  %temp.vect398.i = insertelement <16 x double> %temp.vect397.i, double %895, i32 4
  %temp.vect399.i = insertelement <16 x double> %temp.vect398.i, double %896, i32 5
  %temp.vect400.i = insertelement <16 x double> %temp.vect399.i, double %897, i32 6
  %temp.vect401.i = insertelement <16 x double> %temp.vect400.i, double %898, i32 7
  %temp.vect402.i = insertelement <16 x double> %temp.vect401.i, double %899, i32 8
  %temp.vect403.i = insertelement <16 x double> %temp.vect402.i, double %900, i32 9
  %temp.vect404.i = insertelement <16 x double> %temp.vect403.i, double %901, i32 10
  %temp.vect405.i = insertelement <16 x double> %temp.vect404.i, double %902, i32 11
  %temp.vect406.i = insertelement <16 x double> %temp.vect405.i, double %903, i32 12
  %temp.vect407.i = insertelement <16 x double> %temp.vect406.i, double %904, i32 13
  %temp.vect408.i = insertelement <16 x double> %temp.vect407.i, double %905, i32 14
  %temp.vect409.i = insertelement <16 x double> %temp.vect408.i, double %906, i32 15
  %907 = fadd <16 x double> %temp.vect409.i, %890
  %908 = load double addrspace(3)* %62, align 16
  %temp410.i = insertelement <16 x double> undef, double %908, i32 0
  %vector411.i = shufflevector <16 x double> %temp410.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1934.i" = add nuw i64 %CurrSBIndex..3.i, 2944
  %"&pSB[currWI].offset1935.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1934.i"
  %CastToValueType1936.i = bitcast i8* %"&pSB[currWI].offset1935.i" to <16 x double>*
  %loadedValue1937.i = load <16 x double>* %CastToValueType1936.i, align 128
  %909 = fmul <16 x double> %loadedValue1937.i, %vector411.i
  %910 = load double* %517, align 16
  %911 = load double* %519, align 16
  %912 = load double* %521, align 16
  %913 = load double* %523, align 16
  %914 = load double* %525, align 16
  %915 = load double* %527, align 16
  %916 = load double* %529, align 16
  %917 = load double* %531, align 16
  %918 = load double* %533, align 16
  %919 = load double* %535, align 16
  %920 = load double* %537, align 16
  %921 = load double* %539, align 16
  %922 = load double* %541, align 16
  %923 = load double* %543, align 16
  %924 = load double* %545, align 16
  %925 = load double* %547, align 16
  %temp.vect412.i = insertelement <16 x double> undef, double %910, i32 0
  %temp.vect413.i = insertelement <16 x double> %temp.vect412.i, double %911, i32 1
  %temp.vect414.i = insertelement <16 x double> %temp.vect413.i, double %912, i32 2
  %temp.vect415.i = insertelement <16 x double> %temp.vect414.i, double %913, i32 3
  %temp.vect416.i = insertelement <16 x double> %temp.vect415.i, double %914, i32 4
  %temp.vect417.i = insertelement <16 x double> %temp.vect416.i, double %915, i32 5
  %temp.vect418.i = insertelement <16 x double> %temp.vect417.i, double %916, i32 6
  %temp.vect419.i = insertelement <16 x double> %temp.vect418.i, double %917, i32 7
  %temp.vect420.i = insertelement <16 x double> %temp.vect419.i, double %918, i32 8
  %temp.vect421.i = insertelement <16 x double> %temp.vect420.i, double %919, i32 9
  %temp.vect422.i = insertelement <16 x double> %temp.vect421.i, double %920, i32 10
  %temp.vect423.i = insertelement <16 x double> %temp.vect422.i, double %921, i32 11
  %temp.vect424.i = insertelement <16 x double> %temp.vect423.i, double %922, i32 12
  %temp.vect425.i = insertelement <16 x double> %temp.vect424.i, double %923, i32 13
  %temp.vect426.i = insertelement <16 x double> %temp.vect425.i, double %924, i32 14
  %temp.vect427.i = insertelement <16 x double> %temp.vect426.i, double %925, i32 15
  %926 = fadd <16 x double> %temp.vect427.i, %909
  %927 = load double addrspace(3)* %64, align 8
  %temp428.i = insertelement <16 x double> undef, double %927, i32 0
  %vector429.i = shufflevector <16 x double> %temp428.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1929.i" = add nuw i64 %CurrSBIndex..3.i, 2944
  %"&pSB[currWI].offset1930.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1929.i"
  %CastToValueType1931.i = bitcast i8* %"&pSB[currWI].offset1930.i" to <16 x double>*
  %loadedValue1932.i = load <16 x double>* %CastToValueType1931.i, align 128
  %928 = fmul <16 x double> %loadedValue1932.i, %vector429.i
  %929 = load double* %549, align 8
  %930 = load double* %551, align 8
  %931 = load double* %553, align 8
  %932 = load double* %555, align 8
  %933 = load double* %557, align 8
  %934 = load double* %559, align 8
  %935 = load double* %561, align 8
  %936 = load double* %563, align 8
  %937 = load double* %565, align 8
  %938 = load double* %567, align 8
  %939 = load double* %569, align 8
  %940 = load double* %571, align 8
  %941 = load double* %573, align 8
  %942 = load double* %575, align 8
  %943 = load double* %577, align 8
  %944 = load double* %579, align 8
  %temp.vect430.i = insertelement <16 x double> undef, double %929, i32 0
  %temp.vect431.i = insertelement <16 x double> %temp.vect430.i, double %930, i32 1
  %temp.vect432.i = insertelement <16 x double> %temp.vect431.i, double %931, i32 2
  %temp.vect433.i = insertelement <16 x double> %temp.vect432.i, double %932, i32 3
  %temp.vect434.i = insertelement <16 x double> %temp.vect433.i, double %933, i32 4
  %temp.vect435.i = insertelement <16 x double> %temp.vect434.i, double %934, i32 5
  %temp.vect436.i = insertelement <16 x double> %temp.vect435.i, double %935, i32 6
  %temp.vect437.i = insertelement <16 x double> %temp.vect436.i, double %936, i32 7
  %temp.vect438.i = insertelement <16 x double> %temp.vect437.i, double %937, i32 8
  %temp.vect439.i = insertelement <16 x double> %temp.vect438.i, double %938, i32 9
  %temp.vect440.i = insertelement <16 x double> %temp.vect439.i, double %939, i32 10
  %temp.vect441.i = insertelement <16 x double> %temp.vect440.i, double %940, i32 11
  %temp.vect442.i = insertelement <16 x double> %temp.vect441.i, double %941, i32 12
  %temp.vect443.i = insertelement <16 x double> %temp.vect442.i, double %942, i32 13
  %temp.vect444.i = insertelement <16 x double> %temp.vect443.i, double %943, i32 14
  %temp.vect445.i = insertelement <16 x double> %temp.vect444.i, double %944, i32 15
  %945 = fadd <16 x double> %temp.vect445.i, %928
  %946 = load double addrspace(3)* %66, align 16
  %temp446.i = insertelement <16 x double> undef, double %946, i32 0
  %vector447.i = shufflevector <16 x double> %temp446.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1924.i" = add nuw i64 %CurrSBIndex..3.i, 2944
  %"&pSB[currWI].offset1925.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1924.i"
  %CastToValueType1926.i = bitcast i8* %"&pSB[currWI].offset1925.i" to <16 x double>*
  %loadedValue1927.i = load <16 x double>* %CastToValueType1926.i, align 128
  %947 = fmul <16 x double> %loadedValue1927.i, %vector447.i
  %948 = load double* %581, align 16
  %949 = load double* %583, align 16
  %950 = load double* %585, align 16
  %951 = load double* %587, align 16
  %952 = load double* %589, align 16
  %953 = load double* %591, align 16
  %954 = load double* %593, align 16
  %955 = load double* %595, align 16
  %956 = load double* %597, align 16
  %957 = load double* %599, align 16
  %958 = load double* %601, align 16
  %959 = load double* %603, align 16
  %960 = load double* %605, align 16
  %961 = load double* %607, align 16
  %962 = load double* %609, align 16
  %963 = load double* %611, align 16
  %temp.vect448.i = insertelement <16 x double> undef, double %948, i32 0
  %temp.vect449.i = insertelement <16 x double> %temp.vect448.i, double %949, i32 1
  %temp.vect450.i = insertelement <16 x double> %temp.vect449.i, double %950, i32 2
  %temp.vect451.i = insertelement <16 x double> %temp.vect450.i, double %951, i32 3
  %temp.vect452.i = insertelement <16 x double> %temp.vect451.i, double %952, i32 4
  %temp.vect453.i = insertelement <16 x double> %temp.vect452.i, double %953, i32 5
  %temp.vect454.i = insertelement <16 x double> %temp.vect453.i, double %954, i32 6
  %temp.vect455.i = insertelement <16 x double> %temp.vect454.i, double %955, i32 7
  %temp.vect456.i = insertelement <16 x double> %temp.vect455.i, double %956, i32 8
  %temp.vect457.i = insertelement <16 x double> %temp.vect456.i, double %957, i32 9
  %temp.vect458.i = insertelement <16 x double> %temp.vect457.i, double %958, i32 10
  %temp.vect459.i = insertelement <16 x double> %temp.vect458.i, double %959, i32 11
  %temp.vect460.i = insertelement <16 x double> %temp.vect459.i, double %960, i32 12
  %temp.vect461.i = insertelement <16 x double> %temp.vect460.i, double %961, i32 13
  %temp.vect462.i = insertelement <16 x double> %temp.vect461.i, double %962, i32 14
  %temp.vect463.i = insertelement <16 x double> %temp.vect462.i, double %963, i32 15
  %964 = fadd <16 x double> %temp.vect463.i, %947
  %965 = load double addrspace(3)* %68, align 8
  %temp464.i = insertelement <16 x double> undef, double %965, i32 0
  %vector465.i = shufflevector <16 x double> %temp464.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1919.i" = add nuw i64 %CurrSBIndex..3.i, 2944
  %"&pSB[currWI].offset1920.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1919.i"
  %CastToValueType1921.i = bitcast i8* %"&pSB[currWI].offset1920.i" to <16 x double>*
  %loadedValue1922.i = load <16 x double>* %CastToValueType1921.i, align 128
  %966 = fmul <16 x double> %loadedValue1922.i, %vector465.i
  %967 = load double* %613, align 8
  %968 = load double* %615, align 8
  %969 = load double* %617, align 8
  %970 = load double* %619, align 8
  %971 = load double* %621, align 8
  %972 = load double* %623, align 8
  %973 = load double* %625, align 8
  %974 = load double* %627, align 8
  %975 = load double* %629, align 8
  %976 = load double* %631, align 8
  %977 = load double* %633, align 8
  %978 = load double* %635, align 8
  %979 = load double* %637, align 8
  %980 = load double* %639, align 8
  %981 = load double* %641, align 8
  %982 = load double* %643, align 8
  %temp.vect466.i = insertelement <16 x double> undef, double %967, i32 0
  %temp.vect467.i = insertelement <16 x double> %temp.vect466.i, double %968, i32 1
  %temp.vect468.i = insertelement <16 x double> %temp.vect467.i, double %969, i32 2
  %temp.vect469.i = insertelement <16 x double> %temp.vect468.i, double %970, i32 3
  %temp.vect470.i = insertelement <16 x double> %temp.vect469.i, double %971, i32 4
  %temp.vect471.i = insertelement <16 x double> %temp.vect470.i, double %972, i32 5
  %temp.vect472.i = insertelement <16 x double> %temp.vect471.i, double %973, i32 6
  %temp.vect473.i = insertelement <16 x double> %temp.vect472.i, double %974, i32 7
  %temp.vect474.i = insertelement <16 x double> %temp.vect473.i, double %975, i32 8
  %temp.vect475.i = insertelement <16 x double> %temp.vect474.i, double %976, i32 9
  %temp.vect476.i = insertelement <16 x double> %temp.vect475.i, double %977, i32 10
  %temp.vect477.i = insertelement <16 x double> %temp.vect476.i, double %978, i32 11
  %temp.vect478.i = insertelement <16 x double> %temp.vect477.i, double %979, i32 12
  %temp.vect479.i = insertelement <16 x double> %temp.vect478.i, double %980, i32 13
  %temp.vect480.i = insertelement <16 x double> %temp.vect479.i, double %981, i32 14
  %temp.vect481.i = insertelement <16 x double> %temp.vect480.i, double %982, i32 15
  %983 = fadd <16 x double> %temp.vect481.i, %966
  %984 = load double addrspace(3)* %70, align 16
  %temp482.i = insertelement <16 x double> undef, double %984, i32 0
  %vector483.i = shufflevector <16 x double> %temp482.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1914.i" = add nuw i64 %CurrSBIndex..3.i, 2944
  %"&pSB[currWI].offset1915.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1914.i"
  %CastToValueType1916.i = bitcast i8* %"&pSB[currWI].offset1915.i" to <16 x double>*
  %loadedValue1917.i = load <16 x double>* %CastToValueType1916.i, align 128
  %985 = fmul <16 x double> %loadedValue1917.i, %vector483.i
  %986 = load double* %645, align 16
  %987 = load double* %647, align 16
  %988 = load double* %649, align 16
  %989 = load double* %651, align 16
  %990 = load double* %653, align 16
  %991 = load double* %655, align 16
  %992 = load double* %657, align 16
  %993 = load double* %659, align 16
  %994 = load double* %661, align 16
  %995 = load double* %663, align 16
  %996 = load double* %665, align 16
  %997 = load double* %667, align 16
  %998 = load double* %669, align 16
  %999 = load double* %671, align 16
  %1000 = load double* %673, align 16
  %1001 = load double* %675, align 16
  %temp.vect484.i = insertelement <16 x double> undef, double %986, i32 0
  %temp.vect485.i = insertelement <16 x double> %temp.vect484.i, double %987, i32 1
  %temp.vect486.i = insertelement <16 x double> %temp.vect485.i, double %988, i32 2
  %temp.vect487.i = insertelement <16 x double> %temp.vect486.i, double %989, i32 3
  %temp.vect488.i = insertelement <16 x double> %temp.vect487.i, double %990, i32 4
  %temp.vect489.i = insertelement <16 x double> %temp.vect488.i, double %991, i32 5
  %temp.vect490.i = insertelement <16 x double> %temp.vect489.i, double %992, i32 6
  %temp.vect491.i = insertelement <16 x double> %temp.vect490.i, double %993, i32 7
  %temp.vect492.i = insertelement <16 x double> %temp.vect491.i, double %994, i32 8
  %temp.vect493.i = insertelement <16 x double> %temp.vect492.i, double %995, i32 9
  %temp.vect494.i = insertelement <16 x double> %temp.vect493.i, double %996, i32 10
  %temp.vect495.i = insertelement <16 x double> %temp.vect494.i, double %997, i32 11
  %temp.vect496.i = insertelement <16 x double> %temp.vect495.i, double %998, i32 12
  %temp.vect497.i = insertelement <16 x double> %temp.vect496.i, double %999, i32 13
  %temp.vect498.i = insertelement <16 x double> %temp.vect497.i, double %1000, i32 14
  %temp.vect499.i = insertelement <16 x double> %temp.vect498.i, double %1001, i32 15
  %1002 = fadd <16 x double> %temp.vect499.i, %985
  %1003 = load double addrspace(3)* %72, align 8
  %temp500.i = insertelement <16 x double> undef, double %1003, i32 0
  %vector501.i = shufflevector <16 x double> %temp500.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1909.i" = add nuw i64 %CurrSBIndex..3.i, 2944
  %"&pSB[currWI].offset1910.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1909.i"
  %CastToValueType1911.i = bitcast i8* %"&pSB[currWI].offset1910.i" to <16 x double>*
  %loadedValue1912.i = load <16 x double>* %CastToValueType1911.i, align 128
  %1004 = fmul <16 x double> %loadedValue1912.i, %vector501.i
  %1005 = load double* %677, align 8
  %1006 = load double* %679, align 8
  %1007 = load double* %681, align 8
  %1008 = load double* %683, align 8
  %1009 = load double* %685, align 8
  %1010 = load double* %687, align 8
  %1011 = load double* %689, align 8
  %1012 = load double* %691, align 8
  %1013 = load double* %693, align 8
  %1014 = load double* %695, align 8
  %1015 = load double* %697, align 8
  %1016 = load double* %699, align 8
  %1017 = load double* %701, align 8
  %1018 = load double* %703, align 8
  %1019 = load double* %705, align 8
  %1020 = load double* %707, align 8
  %temp.vect502.i = insertelement <16 x double> undef, double %1005, i32 0
  %temp.vect503.i = insertelement <16 x double> %temp.vect502.i, double %1006, i32 1
  %temp.vect504.i = insertelement <16 x double> %temp.vect503.i, double %1007, i32 2
  %temp.vect505.i = insertelement <16 x double> %temp.vect504.i, double %1008, i32 3
  %temp.vect506.i = insertelement <16 x double> %temp.vect505.i, double %1009, i32 4
  %temp.vect507.i = insertelement <16 x double> %temp.vect506.i, double %1010, i32 5
  %temp.vect508.i = insertelement <16 x double> %temp.vect507.i, double %1011, i32 6
  %temp.vect509.i = insertelement <16 x double> %temp.vect508.i, double %1012, i32 7
  %temp.vect510.i = insertelement <16 x double> %temp.vect509.i, double %1013, i32 8
  %temp.vect511.i = insertelement <16 x double> %temp.vect510.i, double %1014, i32 9
  %temp.vect512.i = insertelement <16 x double> %temp.vect511.i, double %1015, i32 10
  %temp.vect513.i = insertelement <16 x double> %temp.vect512.i, double %1016, i32 11
  %temp.vect514.i = insertelement <16 x double> %temp.vect513.i, double %1017, i32 12
  %temp.vect515.i = insertelement <16 x double> %temp.vect514.i, double %1018, i32 13
  %temp.vect516.i = insertelement <16 x double> %temp.vect515.i, double %1019, i32 14
  %temp.vect517.i = insertelement <16 x double> %temp.vect516.i, double %1020, i32 15
  %1021 = fadd <16 x double> %temp.vect517.i, %1004
  %1022 = load double addrspace(3)* %74, align 16
  %temp518.i = insertelement <16 x double> undef, double %1022, i32 0
  %vector519.i = shufflevector <16 x double> %temp518.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1900.i" = add nuw i64 %CurrSBIndex..3.i, 2816
  %"&pSB[currWI].offset1901.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1900.i"
  %CastToValueType1902.i = bitcast i8* %"&pSB[currWI].offset1901.i" to <16 x double>*
  %loadedValue1903.i = load <16 x double>* %CastToValueType1902.i, align 128
  %1023 = fmul <16 x double> %loadedValue1903.i, %vector519.i
  %1024 = fadd <16 x double> %736, %1023
  %1025 = load double addrspace(3)* %76, align 8
  %temp520.i = insertelement <16 x double> undef, double %1025, i32 0
  %vector521.i = shufflevector <16 x double> %temp520.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1895.i" = add nuw i64 %CurrSBIndex..3.i, 2816
  %"&pSB[currWI].offset1896.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1895.i"
  %CastToValueType1897.i = bitcast i8* %"&pSB[currWI].offset1896.i" to <16 x double>*
  %loadedValue1898.i = load <16 x double>* %CastToValueType1897.i, align 128
  %1026 = fmul <16 x double> %loadedValue1898.i, %vector521.i
  %1027 = fadd <16 x double> %755, %1026
  %1028 = load double addrspace(3)* %78, align 16
  %temp522.i = insertelement <16 x double> undef, double %1028, i32 0
  %vector523.i = shufflevector <16 x double> %temp522.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1890.i" = add nuw i64 %CurrSBIndex..3.i, 2816
  %"&pSB[currWI].offset1891.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1890.i"
  %CastToValueType1892.i = bitcast i8* %"&pSB[currWI].offset1891.i" to <16 x double>*
  %loadedValue1893.i = load <16 x double>* %CastToValueType1892.i, align 128
  %1029 = fmul <16 x double> %loadedValue1893.i, %vector523.i
  %1030 = fadd <16 x double> %774, %1029
  %1031 = load double addrspace(3)* %80, align 8
  %temp524.i = insertelement <16 x double> undef, double %1031, i32 0
  %vector525.i = shufflevector <16 x double> %temp524.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1885.i" = add nuw i64 %CurrSBIndex..3.i, 2816
  %"&pSB[currWI].offset1886.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1885.i"
  %CastToValueType1887.i = bitcast i8* %"&pSB[currWI].offset1886.i" to <16 x double>*
  %loadedValue1888.i = load <16 x double>* %CastToValueType1887.i, align 128
  %1032 = fmul <16 x double> %loadedValue1888.i, %vector525.i
  %1033 = fadd <16 x double> %793, %1032
  %1034 = load double addrspace(3)* %82, align 16
  %temp526.i = insertelement <16 x double> undef, double %1034, i32 0
  %vector527.i = shufflevector <16 x double> %temp526.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1880.i" = add nuw i64 %CurrSBIndex..3.i, 2816
  %"&pSB[currWI].offset1881.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1880.i"
  %CastToValueType1882.i = bitcast i8* %"&pSB[currWI].offset1881.i" to <16 x double>*
  %loadedValue1883.i = load <16 x double>* %CastToValueType1882.i, align 128
  %1035 = fmul <16 x double> %loadedValue1883.i, %vector527.i
  %1036 = fadd <16 x double> %812, %1035
  %1037 = load double addrspace(3)* %84, align 8
  %temp528.i = insertelement <16 x double> undef, double %1037, i32 0
  %vector529.i = shufflevector <16 x double> %temp528.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1875.i" = add nuw i64 %CurrSBIndex..3.i, 2816
  %"&pSB[currWI].offset1876.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1875.i"
  %CastToValueType1877.i = bitcast i8* %"&pSB[currWI].offset1876.i" to <16 x double>*
  %loadedValue1878.i = load <16 x double>* %CastToValueType1877.i, align 128
  %1038 = fmul <16 x double> %loadedValue1878.i, %vector529.i
  %1039 = fadd <16 x double> %831, %1038
  %1040 = load double addrspace(3)* %86, align 16
  %temp530.i = insertelement <16 x double> undef, double %1040, i32 0
  %vector531.i = shufflevector <16 x double> %temp530.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1870.i" = add nuw i64 %CurrSBIndex..3.i, 2816
  %"&pSB[currWI].offset1871.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1870.i"
  %CastToValueType1872.i = bitcast i8* %"&pSB[currWI].offset1871.i" to <16 x double>*
  %loadedValue1873.i = load <16 x double>* %CastToValueType1872.i, align 128
  %1041 = fmul <16 x double> %loadedValue1873.i, %vector531.i
  %1042 = fadd <16 x double> %850, %1041
  %1043 = load double addrspace(3)* %88, align 8
  %temp532.i = insertelement <16 x double> undef, double %1043, i32 0
  %vector533.i = shufflevector <16 x double> %temp532.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1865.i" = add nuw i64 %CurrSBIndex..3.i, 2816
  %"&pSB[currWI].offset1866.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1865.i"
  %CastToValueType1867.i = bitcast i8* %"&pSB[currWI].offset1866.i" to <16 x double>*
  %loadedValue1868.i = load <16 x double>* %CastToValueType1867.i, align 128
  %1044 = fmul <16 x double> %loadedValue1868.i, %vector533.i
  %1045 = fadd <16 x double> %869, %1044
  %1046 = load double addrspace(3)* %90, align 16
  %temp534.i = insertelement <16 x double> undef, double %1046, i32 0
  %vector535.i = shufflevector <16 x double> %temp534.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1860.i" = add nuw i64 %CurrSBIndex..3.i, 2816
  %"&pSB[currWI].offset1861.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1860.i"
  %CastToValueType1862.i = bitcast i8* %"&pSB[currWI].offset1861.i" to <16 x double>*
  %loadedValue1863.i = load <16 x double>* %CastToValueType1862.i, align 128
  %1047 = fmul <16 x double> %loadedValue1863.i, %vector535.i
  %1048 = fadd <16 x double> %888, %1047
  %1049 = load double addrspace(3)* %92, align 8
  %temp536.i = insertelement <16 x double> undef, double %1049, i32 0
  %vector537.i = shufflevector <16 x double> %temp536.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1855.i" = add nuw i64 %CurrSBIndex..3.i, 2816
  %"&pSB[currWI].offset1856.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1855.i"
  %CastToValueType1857.i = bitcast i8* %"&pSB[currWI].offset1856.i" to <16 x double>*
  %loadedValue1858.i = load <16 x double>* %CastToValueType1857.i, align 128
  %1050 = fmul <16 x double> %loadedValue1858.i, %vector537.i
  %1051 = fadd <16 x double> %907, %1050
  %1052 = load double addrspace(3)* %94, align 16
  %temp538.i = insertelement <16 x double> undef, double %1052, i32 0
  %vector539.i = shufflevector <16 x double> %temp538.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1850.i" = add nuw i64 %CurrSBIndex..3.i, 2816
  %"&pSB[currWI].offset1851.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1850.i"
  %CastToValueType1852.i = bitcast i8* %"&pSB[currWI].offset1851.i" to <16 x double>*
  %loadedValue1853.i = load <16 x double>* %CastToValueType1852.i, align 128
  %1053 = fmul <16 x double> %loadedValue1853.i, %vector539.i
  %1054 = fadd <16 x double> %926, %1053
  %1055 = load double addrspace(3)* %96, align 8
  %temp540.i = insertelement <16 x double> undef, double %1055, i32 0
  %vector541.i = shufflevector <16 x double> %temp540.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1845.i" = add nuw i64 %CurrSBIndex..3.i, 2816
  %"&pSB[currWI].offset1846.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1845.i"
  %CastToValueType1847.i = bitcast i8* %"&pSB[currWI].offset1846.i" to <16 x double>*
  %loadedValue1848.i = load <16 x double>* %CastToValueType1847.i, align 128
  %1056 = fmul <16 x double> %loadedValue1848.i, %vector541.i
  %1057 = fadd <16 x double> %945, %1056
  %1058 = load double addrspace(3)* %98, align 16
  %temp542.i = insertelement <16 x double> undef, double %1058, i32 0
  %vector543.i = shufflevector <16 x double> %temp542.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1840.i" = add nuw i64 %CurrSBIndex..3.i, 2816
  %"&pSB[currWI].offset1841.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1840.i"
  %CastToValueType1842.i = bitcast i8* %"&pSB[currWI].offset1841.i" to <16 x double>*
  %loadedValue1843.i = load <16 x double>* %CastToValueType1842.i, align 128
  %1059 = fmul <16 x double> %loadedValue1843.i, %vector543.i
  %1060 = fadd <16 x double> %964, %1059
  %1061 = load double addrspace(3)* %100, align 8
  %temp544.i = insertelement <16 x double> undef, double %1061, i32 0
  %vector545.i = shufflevector <16 x double> %temp544.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1835.i" = add nuw i64 %CurrSBIndex..3.i, 2816
  %"&pSB[currWI].offset1836.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1835.i"
  %CastToValueType1837.i = bitcast i8* %"&pSB[currWI].offset1836.i" to <16 x double>*
  %loadedValue1838.i = load <16 x double>* %CastToValueType1837.i, align 128
  %1062 = fmul <16 x double> %loadedValue1838.i, %vector545.i
  %1063 = fadd <16 x double> %983, %1062
  %1064 = load double addrspace(3)* %102, align 16
  %temp546.i = insertelement <16 x double> undef, double %1064, i32 0
  %vector547.i = shufflevector <16 x double> %temp546.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1830.i" = add nuw i64 %CurrSBIndex..3.i, 2816
  %"&pSB[currWI].offset1831.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1830.i"
  %CastToValueType1832.i = bitcast i8* %"&pSB[currWI].offset1831.i" to <16 x double>*
  %loadedValue1833.i = load <16 x double>* %CastToValueType1832.i, align 128
  %1065 = fmul <16 x double> %loadedValue1833.i, %vector547.i
  %1066 = fadd <16 x double> %1002, %1065
  %1067 = load double addrspace(3)* %104, align 8
  %temp548.i = insertelement <16 x double> undef, double %1067, i32 0
  %vector549.i = shufflevector <16 x double> %temp548.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1825.i" = add nuw i64 %CurrSBIndex..3.i, 2816
  %"&pSB[currWI].offset1826.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1825.i"
  %CastToValueType1827.i = bitcast i8* %"&pSB[currWI].offset1826.i" to <16 x double>*
  %loadedValue1828.i = load <16 x double>* %CastToValueType1827.i, align 128
  %1068 = fmul <16 x double> %loadedValue1828.i, %vector549.i
  %1069 = fadd <16 x double> %1021, %1068
  %1070 = load double addrspace(3)* %106, align 16
  %temp550.i = insertelement <16 x double> undef, double %1070, i32 0
  %vector551.i = shufflevector <16 x double> %temp550.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1816.i" = add nuw i64 %CurrSBIndex..3.i, 2688
  %"&pSB[currWI].offset1817.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1816.i"
  %CastToValueType1818.i = bitcast i8* %"&pSB[currWI].offset1817.i" to <16 x double>*
  %loadedValue1819.i = load <16 x double>* %CastToValueType1818.i, align 128
  %1071 = fmul <16 x double> %loadedValue1819.i, %vector551.i
  %1072 = fadd <16 x double> %1024, %1071
  %1073 = load double addrspace(3)* %108, align 8
  %temp552.i = insertelement <16 x double> undef, double %1073, i32 0
  %vector553.i = shufflevector <16 x double> %temp552.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1811.i" = add nuw i64 %CurrSBIndex..3.i, 2688
  %"&pSB[currWI].offset1812.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1811.i"
  %CastToValueType1813.i = bitcast i8* %"&pSB[currWI].offset1812.i" to <16 x double>*
  %loadedValue1814.i = load <16 x double>* %CastToValueType1813.i, align 128
  %1074 = fmul <16 x double> %loadedValue1814.i, %vector553.i
  %1075 = fadd <16 x double> %1027, %1074
  %1076 = load double addrspace(3)* %110, align 16
  %temp554.i = insertelement <16 x double> undef, double %1076, i32 0
  %vector555.i = shufflevector <16 x double> %temp554.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1806.i" = add nuw i64 %CurrSBIndex..3.i, 2688
  %"&pSB[currWI].offset1807.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1806.i"
  %CastToValueType1808.i = bitcast i8* %"&pSB[currWI].offset1807.i" to <16 x double>*
  %loadedValue1809.i = load <16 x double>* %CastToValueType1808.i, align 128
  %1077 = fmul <16 x double> %loadedValue1809.i, %vector555.i
  %1078 = fadd <16 x double> %1030, %1077
  %1079 = load double addrspace(3)* %112, align 8
  %temp556.i = insertelement <16 x double> undef, double %1079, i32 0
  %vector557.i = shufflevector <16 x double> %temp556.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1801.i" = add nuw i64 %CurrSBIndex..3.i, 2688
  %"&pSB[currWI].offset1802.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1801.i"
  %CastToValueType1803.i = bitcast i8* %"&pSB[currWI].offset1802.i" to <16 x double>*
  %loadedValue1804.i = load <16 x double>* %CastToValueType1803.i, align 128
  %1080 = fmul <16 x double> %loadedValue1804.i, %vector557.i
  %1081 = fadd <16 x double> %1033, %1080
  %1082 = load double addrspace(3)* %114, align 16
  %temp558.i = insertelement <16 x double> undef, double %1082, i32 0
  %vector559.i = shufflevector <16 x double> %temp558.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1796.i" = add nuw i64 %CurrSBIndex..3.i, 2688
  %"&pSB[currWI].offset1797.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1796.i"
  %CastToValueType1798.i = bitcast i8* %"&pSB[currWI].offset1797.i" to <16 x double>*
  %loadedValue1799.i = load <16 x double>* %CastToValueType1798.i, align 128
  %1083 = fmul <16 x double> %loadedValue1799.i, %vector559.i
  %1084 = fadd <16 x double> %1036, %1083
  %1085 = load double addrspace(3)* %116, align 8
  %temp560.i = insertelement <16 x double> undef, double %1085, i32 0
  %vector561.i = shufflevector <16 x double> %temp560.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1791.i" = add nuw i64 %CurrSBIndex..3.i, 2688
  %"&pSB[currWI].offset1792.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1791.i"
  %CastToValueType1793.i = bitcast i8* %"&pSB[currWI].offset1792.i" to <16 x double>*
  %loadedValue1794.i = load <16 x double>* %CastToValueType1793.i, align 128
  %1086 = fmul <16 x double> %loadedValue1794.i, %vector561.i
  %1087 = fadd <16 x double> %1039, %1086
  %1088 = load double addrspace(3)* %118, align 16
  %temp562.i = insertelement <16 x double> undef, double %1088, i32 0
  %vector563.i = shufflevector <16 x double> %temp562.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1786.i" = add nuw i64 %CurrSBIndex..3.i, 2688
  %"&pSB[currWI].offset1787.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1786.i"
  %CastToValueType1788.i = bitcast i8* %"&pSB[currWI].offset1787.i" to <16 x double>*
  %loadedValue1789.i = load <16 x double>* %CastToValueType1788.i, align 128
  %1089 = fmul <16 x double> %loadedValue1789.i, %vector563.i
  %1090 = fadd <16 x double> %1042, %1089
  %1091 = load double addrspace(3)* %120, align 8
  %temp564.i = insertelement <16 x double> undef, double %1091, i32 0
  %vector565.i = shufflevector <16 x double> %temp564.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1781.i" = add nuw i64 %CurrSBIndex..3.i, 2688
  %"&pSB[currWI].offset1782.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1781.i"
  %CastToValueType1783.i = bitcast i8* %"&pSB[currWI].offset1782.i" to <16 x double>*
  %loadedValue1784.i = load <16 x double>* %CastToValueType1783.i, align 128
  %1092 = fmul <16 x double> %loadedValue1784.i, %vector565.i
  %1093 = fadd <16 x double> %1045, %1092
  %1094 = load double addrspace(3)* %122, align 16
  %temp566.i = insertelement <16 x double> undef, double %1094, i32 0
  %vector567.i = shufflevector <16 x double> %temp566.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1776.i" = add nuw i64 %CurrSBIndex..3.i, 2688
  %"&pSB[currWI].offset1777.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1776.i"
  %CastToValueType1778.i = bitcast i8* %"&pSB[currWI].offset1777.i" to <16 x double>*
  %loadedValue1779.i = load <16 x double>* %CastToValueType1778.i, align 128
  %1095 = fmul <16 x double> %loadedValue1779.i, %vector567.i
  %1096 = fadd <16 x double> %1048, %1095
  %1097 = load double addrspace(3)* %124, align 8
  %temp568.i = insertelement <16 x double> undef, double %1097, i32 0
  %vector569.i = shufflevector <16 x double> %temp568.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1771.i" = add nuw i64 %CurrSBIndex..3.i, 2688
  %"&pSB[currWI].offset1772.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1771.i"
  %CastToValueType1773.i = bitcast i8* %"&pSB[currWI].offset1772.i" to <16 x double>*
  %loadedValue1774.i = load <16 x double>* %CastToValueType1773.i, align 128
  %1098 = fmul <16 x double> %loadedValue1774.i, %vector569.i
  %1099 = fadd <16 x double> %1051, %1098
  %1100 = load double addrspace(3)* %126, align 16
  %temp570.i = insertelement <16 x double> undef, double %1100, i32 0
  %vector571.i = shufflevector <16 x double> %temp570.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1766.i" = add nuw i64 %CurrSBIndex..3.i, 2688
  %"&pSB[currWI].offset1767.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1766.i"
  %CastToValueType1768.i = bitcast i8* %"&pSB[currWI].offset1767.i" to <16 x double>*
  %loadedValue1769.i = load <16 x double>* %CastToValueType1768.i, align 128
  %1101 = fmul <16 x double> %loadedValue1769.i, %vector571.i
  %1102 = fadd <16 x double> %1054, %1101
  %1103 = load double addrspace(3)* %128, align 8
  %temp572.i = insertelement <16 x double> undef, double %1103, i32 0
  %vector573.i = shufflevector <16 x double> %temp572.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1761.i" = add nuw i64 %CurrSBIndex..3.i, 2688
  %"&pSB[currWI].offset1762.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1761.i"
  %CastToValueType1763.i = bitcast i8* %"&pSB[currWI].offset1762.i" to <16 x double>*
  %loadedValue1764.i = load <16 x double>* %CastToValueType1763.i, align 128
  %1104 = fmul <16 x double> %loadedValue1764.i, %vector573.i
  %1105 = fadd <16 x double> %1057, %1104
  %1106 = load double addrspace(3)* %130, align 16
  %temp574.i = insertelement <16 x double> undef, double %1106, i32 0
  %vector575.i = shufflevector <16 x double> %temp574.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1756.i" = add nuw i64 %CurrSBIndex..3.i, 2688
  %"&pSB[currWI].offset1757.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1756.i"
  %CastToValueType1758.i = bitcast i8* %"&pSB[currWI].offset1757.i" to <16 x double>*
  %loadedValue1759.i = load <16 x double>* %CastToValueType1758.i, align 128
  %1107 = fmul <16 x double> %loadedValue1759.i, %vector575.i
  %1108 = fadd <16 x double> %1060, %1107
  %1109 = load double addrspace(3)* %132, align 8
  %temp576.i = insertelement <16 x double> undef, double %1109, i32 0
  %vector577.i = shufflevector <16 x double> %temp576.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1751.i" = add nuw i64 %CurrSBIndex..3.i, 2688
  %"&pSB[currWI].offset1752.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1751.i"
  %CastToValueType1753.i = bitcast i8* %"&pSB[currWI].offset1752.i" to <16 x double>*
  %loadedValue1754.i = load <16 x double>* %CastToValueType1753.i, align 128
  %1110 = fmul <16 x double> %loadedValue1754.i, %vector577.i
  %1111 = fadd <16 x double> %1063, %1110
  %1112 = load double addrspace(3)* %134, align 16
  %temp578.i = insertelement <16 x double> undef, double %1112, i32 0
  %vector579.i = shufflevector <16 x double> %temp578.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1746.i" = add nuw i64 %CurrSBIndex..3.i, 2688
  %"&pSB[currWI].offset1747.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1746.i"
  %CastToValueType1748.i = bitcast i8* %"&pSB[currWI].offset1747.i" to <16 x double>*
  %loadedValue1749.i = load <16 x double>* %CastToValueType1748.i, align 128
  %1113 = fmul <16 x double> %loadedValue1749.i, %vector579.i
  %1114 = fadd <16 x double> %1066, %1113
  %1115 = load double addrspace(3)* %136, align 8
  %temp580.i = insertelement <16 x double> undef, double %1115, i32 0
  %vector581.i = shufflevector <16 x double> %temp580.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1741.i" = add nuw i64 %CurrSBIndex..3.i, 2688
  %"&pSB[currWI].offset1742.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1741.i"
  %CastToValueType1743.i = bitcast i8* %"&pSB[currWI].offset1742.i" to <16 x double>*
  %loadedValue1744.i = load <16 x double>* %CastToValueType1743.i, align 128
  %1116 = fmul <16 x double> %loadedValue1744.i, %vector581.i
  %1117 = fadd <16 x double> %1069, %1116
  %1118 = load double addrspace(3)* %138, align 16
  %temp582.i = insertelement <16 x double> undef, double %1118, i32 0
  %vector583.i = shufflevector <16 x double> %temp582.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1732.i" = add nuw i64 %CurrSBIndex..3.i, 2560
  %"&pSB[currWI].offset1733.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1732.i"
  %CastToValueType1734.i = bitcast i8* %"&pSB[currWI].offset1733.i" to <16 x double>*
  %loadedValue1735.i = load <16 x double>* %CastToValueType1734.i, align 128
  %1119 = fmul <16 x double> %loadedValue1735.i, %vector583.i
  %1120 = fadd <16 x double> %1072, %1119
  %extract584.i = extractelement <16 x double> %1120, i32 0
  %extract585.i = extractelement <16 x double> %1120, i32 1
  %extract586.i = extractelement <16 x double> %1120, i32 2
  %extract587.i = extractelement <16 x double> %1120, i32 3
  %extract588.i = extractelement <16 x double> %1120, i32 4
  %extract589.i = extractelement <16 x double> %1120, i32 5
  %extract590.i = extractelement <16 x double> %1120, i32 6
  %extract591.i = extractelement <16 x double> %1120, i32 7
  %extract592.i = extractelement <16 x double> %1120, i32 8
  %extract593.i = extractelement <16 x double> %1120, i32 9
  %extract594.i = extractelement <16 x double> %1120, i32 10
  %extract595.i = extractelement <16 x double> %1120, i32 11
  %extract596.i = extractelement <16 x double> %1120, i32 12
  %extract597.i = extractelement <16 x double> %1120, i32 13
  %extract598.i = extractelement <16 x double> %1120, i32 14
  %extract599.i = extractelement <16 x double> %1120, i32 15
  store double %extract584.i, double* %212, align 16
  store double %extract585.i, double* %213, align 16
  store double %extract586.i, double* %214, align 16
  store double %extract587.i, double* %215, align 16
  store double %extract588.i, double* %216, align 16
  store double %extract589.i, double* %217, align 16
  store double %extract590.i, double* %218, align 16
  store double %extract591.i, double* %219, align 16
  store double %extract592.i, double* %220, align 16
  store double %extract593.i, double* %221, align 16
  store double %extract594.i, double* %222, align 16
  store double %extract595.i, double* %223, align 16
  store double %extract596.i, double* %224, align 16
  store double %extract597.i, double* %225, align 16
  store double %extract598.i, double* %226, align 16
  store double %extract599.i, double* %227, align 16
  %1121 = load double addrspace(3)* %140, align 8
  %temp600.i = insertelement <16 x double> undef, double %1121, i32 0
  %vector601.i = shufflevector <16 x double> %temp600.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1727.i" = add nuw i64 %CurrSBIndex..3.i, 2560
  %"&pSB[currWI].offset1728.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1727.i"
  %CastToValueType1729.i = bitcast i8* %"&pSB[currWI].offset1728.i" to <16 x double>*
  %loadedValue1730.i = load <16 x double>* %CastToValueType1729.i, align 128
  %1122 = fmul <16 x double> %loadedValue1730.i, %vector601.i
  %1123 = fadd <16 x double> %1075, %1122
  %extract602.i = extractelement <16 x double> %1123, i32 0
  %extract603.i = extractelement <16 x double> %1123, i32 1
  %extract604.i = extractelement <16 x double> %1123, i32 2
  %extract605.i = extractelement <16 x double> %1123, i32 3
  %extract606.i = extractelement <16 x double> %1123, i32 4
  %extract607.i = extractelement <16 x double> %1123, i32 5
  %extract608.i = extractelement <16 x double> %1123, i32 6
  %extract609.i = extractelement <16 x double> %1123, i32 7
  %extract610.i = extractelement <16 x double> %1123, i32 8
  %extract611.i = extractelement <16 x double> %1123, i32 9
  %extract612.i = extractelement <16 x double> %1123, i32 10
  %extract613.i = extractelement <16 x double> %1123, i32 11
  %extract614.i = extractelement <16 x double> %1123, i32 12
  %extract615.i = extractelement <16 x double> %1123, i32 13
  %extract616.i = extractelement <16 x double> %1123, i32 14
  %extract617.i = extractelement <16 x double> %1123, i32 15
  store double %extract602.i, double* %229, align 8
  store double %extract603.i, double* %231, align 8
  store double %extract604.i, double* %233, align 8
  store double %extract605.i, double* %235, align 8
  store double %extract606.i, double* %237, align 8
  store double %extract607.i, double* %239, align 8
  store double %extract608.i, double* %241, align 8
  store double %extract609.i, double* %243, align 8
  store double %extract610.i, double* %245, align 8
  store double %extract611.i, double* %247, align 8
  store double %extract612.i, double* %249, align 8
  store double %extract613.i, double* %251, align 8
  store double %extract614.i, double* %253, align 8
  store double %extract615.i, double* %255, align 8
  store double %extract616.i, double* %257, align 8
  store double %extract617.i, double* %259, align 8
  %1124 = load double addrspace(3)* %142, align 16
  %temp618.i = insertelement <16 x double> undef, double %1124, i32 0
  %vector619.i = shufflevector <16 x double> %temp618.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1722.i" = add nuw i64 %CurrSBIndex..3.i, 2560
  %"&pSB[currWI].offset1723.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1722.i"
  %CastToValueType1724.i = bitcast i8* %"&pSB[currWI].offset1723.i" to <16 x double>*
  %loadedValue1725.i = load <16 x double>* %CastToValueType1724.i, align 128
  %1125 = fmul <16 x double> %loadedValue1725.i, %vector619.i
  %1126 = fadd <16 x double> %1078, %1125
  %extract620.i = extractelement <16 x double> %1126, i32 0
  %extract621.i = extractelement <16 x double> %1126, i32 1
  %extract622.i = extractelement <16 x double> %1126, i32 2
  %extract623.i = extractelement <16 x double> %1126, i32 3
  %extract624.i = extractelement <16 x double> %1126, i32 4
  %extract625.i = extractelement <16 x double> %1126, i32 5
  %extract626.i = extractelement <16 x double> %1126, i32 6
  %extract627.i = extractelement <16 x double> %1126, i32 7
  %extract628.i = extractelement <16 x double> %1126, i32 8
  %extract629.i = extractelement <16 x double> %1126, i32 9
  %extract630.i = extractelement <16 x double> %1126, i32 10
  %extract631.i = extractelement <16 x double> %1126, i32 11
  %extract632.i = extractelement <16 x double> %1126, i32 12
  %extract633.i = extractelement <16 x double> %1126, i32 13
  %extract634.i = extractelement <16 x double> %1126, i32 14
  %extract635.i = extractelement <16 x double> %1126, i32 15
  store double %extract620.i, double* %261, align 16
  store double %extract621.i, double* %263, align 16
  store double %extract622.i, double* %265, align 16
  store double %extract623.i, double* %267, align 16
  store double %extract624.i, double* %269, align 16
  store double %extract625.i, double* %271, align 16
  store double %extract626.i, double* %273, align 16
  store double %extract627.i, double* %275, align 16
  store double %extract628.i, double* %277, align 16
  store double %extract629.i, double* %279, align 16
  store double %extract630.i, double* %281, align 16
  store double %extract631.i, double* %283, align 16
  store double %extract632.i, double* %285, align 16
  store double %extract633.i, double* %287, align 16
  store double %extract634.i, double* %289, align 16
  store double %extract635.i, double* %291, align 16
  %1127 = load double addrspace(3)* %144, align 8
  %temp636.i = insertelement <16 x double> undef, double %1127, i32 0
  %vector637.i = shufflevector <16 x double> %temp636.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1717.i" = add nuw i64 %CurrSBIndex..3.i, 2560
  %"&pSB[currWI].offset1718.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1717.i"
  %CastToValueType1719.i = bitcast i8* %"&pSB[currWI].offset1718.i" to <16 x double>*
  %loadedValue1720.i = load <16 x double>* %CastToValueType1719.i, align 128
  %1128 = fmul <16 x double> %loadedValue1720.i, %vector637.i
  %1129 = fadd <16 x double> %1081, %1128
  %extract638.i = extractelement <16 x double> %1129, i32 0
  %extract639.i = extractelement <16 x double> %1129, i32 1
  %extract640.i = extractelement <16 x double> %1129, i32 2
  %extract641.i = extractelement <16 x double> %1129, i32 3
  %extract642.i = extractelement <16 x double> %1129, i32 4
  %extract643.i = extractelement <16 x double> %1129, i32 5
  %extract644.i = extractelement <16 x double> %1129, i32 6
  %extract645.i = extractelement <16 x double> %1129, i32 7
  %extract646.i = extractelement <16 x double> %1129, i32 8
  %extract647.i = extractelement <16 x double> %1129, i32 9
  %extract648.i = extractelement <16 x double> %1129, i32 10
  %extract649.i = extractelement <16 x double> %1129, i32 11
  %extract650.i = extractelement <16 x double> %1129, i32 12
  %extract651.i = extractelement <16 x double> %1129, i32 13
  %extract652.i = extractelement <16 x double> %1129, i32 14
  %extract653.i = extractelement <16 x double> %1129, i32 15
  store double %extract638.i, double* %293, align 8
  store double %extract639.i, double* %295, align 8
  store double %extract640.i, double* %297, align 8
  store double %extract641.i, double* %299, align 8
  store double %extract642.i, double* %301, align 8
  store double %extract643.i, double* %303, align 8
  store double %extract644.i, double* %305, align 8
  store double %extract645.i, double* %307, align 8
  store double %extract646.i, double* %309, align 8
  store double %extract647.i, double* %311, align 8
  store double %extract648.i, double* %313, align 8
  store double %extract649.i, double* %315, align 8
  store double %extract650.i, double* %317, align 8
  store double %extract651.i, double* %319, align 8
  store double %extract652.i, double* %321, align 8
  store double %extract653.i, double* %323, align 8
  %1130 = load double addrspace(3)* %146, align 16
  %temp654.i = insertelement <16 x double> undef, double %1130, i32 0
  %vector655.i = shufflevector <16 x double> %temp654.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1712.i" = add nuw i64 %CurrSBIndex..3.i, 2560
  %"&pSB[currWI].offset1713.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1712.i"
  %CastToValueType1714.i = bitcast i8* %"&pSB[currWI].offset1713.i" to <16 x double>*
  %loadedValue1715.i = load <16 x double>* %CastToValueType1714.i, align 128
  %1131 = fmul <16 x double> %loadedValue1715.i, %vector655.i
  %1132 = fadd <16 x double> %1084, %1131
  %extract656.i = extractelement <16 x double> %1132, i32 0
  %extract657.i = extractelement <16 x double> %1132, i32 1
  %extract658.i = extractelement <16 x double> %1132, i32 2
  %extract659.i = extractelement <16 x double> %1132, i32 3
  %extract660.i = extractelement <16 x double> %1132, i32 4
  %extract661.i = extractelement <16 x double> %1132, i32 5
  %extract662.i = extractelement <16 x double> %1132, i32 6
  %extract663.i = extractelement <16 x double> %1132, i32 7
  %extract664.i = extractelement <16 x double> %1132, i32 8
  %extract665.i = extractelement <16 x double> %1132, i32 9
  %extract666.i = extractelement <16 x double> %1132, i32 10
  %extract667.i = extractelement <16 x double> %1132, i32 11
  %extract668.i = extractelement <16 x double> %1132, i32 12
  %extract669.i = extractelement <16 x double> %1132, i32 13
  %extract670.i = extractelement <16 x double> %1132, i32 14
  %extract671.i = extractelement <16 x double> %1132, i32 15
  store double %extract656.i, double* %325, align 16
  store double %extract657.i, double* %327, align 16
  store double %extract658.i, double* %329, align 16
  store double %extract659.i, double* %331, align 16
  store double %extract660.i, double* %333, align 16
  store double %extract661.i, double* %335, align 16
  store double %extract662.i, double* %337, align 16
  store double %extract663.i, double* %339, align 16
  store double %extract664.i, double* %341, align 16
  store double %extract665.i, double* %343, align 16
  store double %extract666.i, double* %345, align 16
  store double %extract667.i, double* %347, align 16
  store double %extract668.i, double* %349, align 16
  store double %extract669.i, double* %351, align 16
  store double %extract670.i, double* %353, align 16
  store double %extract671.i, double* %355, align 16
  %1133 = load double addrspace(3)* %148, align 8
  %temp672.i = insertelement <16 x double> undef, double %1133, i32 0
  %vector673.i = shufflevector <16 x double> %temp672.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1707.i" = add nuw i64 %CurrSBIndex..3.i, 2560
  %"&pSB[currWI].offset1708.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1707.i"
  %CastToValueType1709.i = bitcast i8* %"&pSB[currWI].offset1708.i" to <16 x double>*
  %loadedValue1710.i = load <16 x double>* %CastToValueType1709.i, align 128
  %1134 = fmul <16 x double> %loadedValue1710.i, %vector673.i
  %1135 = fadd <16 x double> %1087, %1134
  %extract674.i = extractelement <16 x double> %1135, i32 0
  %extract675.i = extractelement <16 x double> %1135, i32 1
  %extract676.i = extractelement <16 x double> %1135, i32 2
  %extract677.i = extractelement <16 x double> %1135, i32 3
  %extract678.i = extractelement <16 x double> %1135, i32 4
  %extract679.i = extractelement <16 x double> %1135, i32 5
  %extract680.i = extractelement <16 x double> %1135, i32 6
  %extract681.i = extractelement <16 x double> %1135, i32 7
  %extract682.i = extractelement <16 x double> %1135, i32 8
  %extract683.i = extractelement <16 x double> %1135, i32 9
  %extract684.i = extractelement <16 x double> %1135, i32 10
  %extract685.i = extractelement <16 x double> %1135, i32 11
  %extract686.i = extractelement <16 x double> %1135, i32 12
  %extract687.i = extractelement <16 x double> %1135, i32 13
  %extract688.i = extractelement <16 x double> %1135, i32 14
  %extract689.i = extractelement <16 x double> %1135, i32 15
  store double %extract674.i, double* %357, align 8
  store double %extract675.i, double* %359, align 8
  store double %extract676.i, double* %361, align 8
  store double %extract677.i, double* %363, align 8
  store double %extract678.i, double* %365, align 8
  store double %extract679.i, double* %367, align 8
  store double %extract680.i, double* %369, align 8
  store double %extract681.i, double* %371, align 8
  store double %extract682.i, double* %373, align 8
  store double %extract683.i, double* %375, align 8
  store double %extract684.i, double* %377, align 8
  store double %extract685.i, double* %379, align 8
  store double %extract686.i, double* %381, align 8
  store double %extract687.i, double* %383, align 8
  store double %extract688.i, double* %385, align 8
  store double %extract689.i, double* %387, align 8
  %1136 = load double addrspace(3)* %150, align 16
  %temp690.i = insertelement <16 x double> undef, double %1136, i32 0
  %vector691.i = shufflevector <16 x double> %temp690.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1702.i" = add nuw i64 %CurrSBIndex..3.i, 2560
  %"&pSB[currWI].offset1703.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1702.i"
  %CastToValueType1704.i = bitcast i8* %"&pSB[currWI].offset1703.i" to <16 x double>*
  %loadedValue1705.i = load <16 x double>* %CastToValueType1704.i, align 128
  %1137 = fmul <16 x double> %loadedValue1705.i, %vector691.i
  %1138 = fadd <16 x double> %1090, %1137
  %extract692.i = extractelement <16 x double> %1138, i32 0
  %extract693.i = extractelement <16 x double> %1138, i32 1
  %extract694.i = extractelement <16 x double> %1138, i32 2
  %extract695.i = extractelement <16 x double> %1138, i32 3
  %extract696.i = extractelement <16 x double> %1138, i32 4
  %extract697.i = extractelement <16 x double> %1138, i32 5
  %extract698.i = extractelement <16 x double> %1138, i32 6
  %extract699.i = extractelement <16 x double> %1138, i32 7
  %extract700.i = extractelement <16 x double> %1138, i32 8
  %extract701.i = extractelement <16 x double> %1138, i32 9
  %extract702.i = extractelement <16 x double> %1138, i32 10
  %extract703.i = extractelement <16 x double> %1138, i32 11
  %extract704.i = extractelement <16 x double> %1138, i32 12
  %extract705.i = extractelement <16 x double> %1138, i32 13
  %extract706.i = extractelement <16 x double> %1138, i32 14
  %extract707.i = extractelement <16 x double> %1138, i32 15
  store double %extract692.i, double* %389, align 16
  store double %extract693.i, double* %391, align 16
  store double %extract694.i, double* %393, align 16
  store double %extract695.i, double* %395, align 16
  store double %extract696.i, double* %397, align 16
  store double %extract697.i, double* %399, align 16
  store double %extract698.i, double* %401, align 16
  store double %extract699.i, double* %403, align 16
  store double %extract700.i, double* %405, align 16
  store double %extract701.i, double* %407, align 16
  store double %extract702.i, double* %409, align 16
  store double %extract703.i, double* %411, align 16
  store double %extract704.i, double* %413, align 16
  store double %extract705.i, double* %415, align 16
  store double %extract706.i, double* %417, align 16
  store double %extract707.i, double* %419, align 16
  %1139 = load double addrspace(3)* %152, align 8
  %temp708.i = insertelement <16 x double> undef, double %1139, i32 0
  %vector709.i = shufflevector <16 x double> %temp708.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1697.i" = add nuw i64 %CurrSBIndex..3.i, 2560
  %"&pSB[currWI].offset1698.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1697.i"
  %CastToValueType1699.i = bitcast i8* %"&pSB[currWI].offset1698.i" to <16 x double>*
  %loadedValue1700.i = load <16 x double>* %CastToValueType1699.i, align 128
  %1140 = fmul <16 x double> %loadedValue1700.i, %vector709.i
  %1141 = fadd <16 x double> %1093, %1140
  %extract710.i = extractelement <16 x double> %1141, i32 0
  %extract711.i = extractelement <16 x double> %1141, i32 1
  %extract712.i = extractelement <16 x double> %1141, i32 2
  %extract713.i = extractelement <16 x double> %1141, i32 3
  %extract714.i = extractelement <16 x double> %1141, i32 4
  %extract715.i = extractelement <16 x double> %1141, i32 5
  %extract716.i = extractelement <16 x double> %1141, i32 6
  %extract717.i = extractelement <16 x double> %1141, i32 7
  %extract718.i = extractelement <16 x double> %1141, i32 8
  %extract719.i = extractelement <16 x double> %1141, i32 9
  %extract720.i = extractelement <16 x double> %1141, i32 10
  %extract721.i = extractelement <16 x double> %1141, i32 11
  %extract722.i = extractelement <16 x double> %1141, i32 12
  %extract723.i = extractelement <16 x double> %1141, i32 13
  %extract724.i = extractelement <16 x double> %1141, i32 14
  %extract725.i = extractelement <16 x double> %1141, i32 15
  store double %extract710.i, double* %421, align 8
  store double %extract711.i, double* %423, align 8
  store double %extract712.i, double* %425, align 8
  store double %extract713.i, double* %427, align 8
  store double %extract714.i, double* %429, align 8
  store double %extract715.i, double* %431, align 8
  store double %extract716.i, double* %433, align 8
  store double %extract717.i, double* %435, align 8
  store double %extract718.i, double* %437, align 8
  store double %extract719.i, double* %439, align 8
  store double %extract720.i, double* %441, align 8
  store double %extract721.i, double* %443, align 8
  store double %extract722.i, double* %445, align 8
  store double %extract723.i, double* %447, align 8
  store double %extract724.i, double* %449, align 8
  store double %extract725.i, double* %451, align 8
  %1142 = load double addrspace(3)* %154, align 16
  %temp726.i = insertelement <16 x double> undef, double %1142, i32 0
  %vector727.i = shufflevector <16 x double> %temp726.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1692.i" = add nuw i64 %CurrSBIndex..3.i, 2560
  %"&pSB[currWI].offset1693.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1692.i"
  %CastToValueType1694.i = bitcast i8* %"&pSB[currWI].offset1693.i" to <16 x double>*
  %loadedValue1695.i = load <16 x double>* %CastToValueType1694.i, align 128
  %1143 = fmul <16 x double> %loadedValue1695.i, %vector727.i
  %1144 = fadd <16 x double> %1096, %1143
  %extract728.i = extractelement <16 x double> %1144, i32 0
  %extract729.i = extractelement <16 x double> %1144, i32 1
  %extract730.i = extractelement <16 x double> %1144, i32 2
  %extract731.i = extractelement <16 x double> %1144, i32 3
  %extract732.i = extractelement <16 x double> %1144, i32 4
  %extract733.i = extractelement <16 x double> %1144, i32 5
  %extract734.i = extractelement <16 x double> %1144, i32 6
  %extract735.i = extractelement <16 x double> %1144, i32 7
  %extract736.i = extractelement <16 x double> %1144, i32 8
  %extract737.i = extractelement <16 x double> %1144, i32 9
  %extract738.i = extractelement <16 x double> %1144, i32 10
  %extract739.i = extractelement <16 x double> %1144, i32 11
  %extract740.i = extractelement <16 x double> %1144, i32 12
  %extract741.i = extractelement <16 x double> %1144, i32 13
  %extract742.i = extractelement <16 x double> %1144, i32 14
  %extract743.i = extractelement <16 x double> %1144, i32 15
  store double %extract728.i, double* %453, align 16
  store double %extract729.i, double* %455, align 16
  store double %extract730.i, double* %457, align 16
  store double %extract731.i, double* %459, align 16
  store double %extract732.i, double* %461, align 16
  store double %extract733.i, double* %463, align 16
  store double %extract734.i, double* %465, align 16
  store double %extract735.i, double* %467, align 16
  store double %extract736.i, double* %469, align 16
  store double %extract737.i, double* %471, align 16
  store double %extract738.i, double* %473, align 16
  store double %extract739.i, double* %475, align 16
  store double %extract740.i, double* %477, align 16
  store double %extract741.i, double* %479, align 16
  store double %extract742.i, double* %481, align 16
  store double %extract743.i, double* %483, align 16
  %1145 = load double addrspace(3)* %156, align 8
  %temp744.i = insertelement <16 x double> undef, double %1145, i32 0
  %vector745.i = shufflevector <16 x double> %temp744.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1687.i" = add nuw i64 %CurrSBIndex..3.i, 2560
  %"&pSB[currWI].offset1688.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1687.i"
  %CastToValueType1689.i = bitcast i8* %"&pSB[currWI].offset1688.i" to <16 x double>*
  %loadedValue1690.i = load <16 x double>* %CastToValueType1689.i, align 128
  %1146 = fmul <16 x double> %loadedValue1690.i, %vector745.i
  %1147 = fadd <16 x double> %1099, %1146
  %extract746.i = extractelement <16 x double> %1147, i32 0
  %extract747.i = extractelement <16 x double> %1147, i32 1
  %extract748.i = extractelement <16 x double> %1147, i32 2
  %extract749.i = extractelement <16 x double> %1147, i32 3
  %extract750.i = extractelement <16 x double> %1147, i32 4
  %extract751.i = extractelement <16 x double> %1147, i32 5
  %extract752.i = extractelement <16 x double> %1147, i32 6
  %extract753.i = extractelement <16 x double> %1147, i32 7
  %extract754.i = extractelement <16 x double> %1147, i32 8
  %extract755.i = extractelement <16 x double> %1147, i32 9
  %extract756.i = extractelement <16 x double> %1147, i32 10
  %extract757.i = extractelement <16 x double> %1147, i32 11
  %extract758.i = extractelement <16 x double> %1147, i32 12
  %extract759.i = extractelement <16 x double> %1147, i32 13
  %extract760.i = extractelement <16 x double> %1147, i32 14
  %extract761.i = extractelement <16 x double> %1147, i32 15
  store double %extract746.i, double* %485, align 8
  store double %extract747.i, double* %487, align 8
  store double %extract748.i, double* %489, align 8
  store double %extract749.i, double* %491, align 8
  store double %extract750.i, double* %493, align 8
  store double %extract751.i, double* %495, align 8
  store double %extract752.i, double* %497, align 8
  store double %extract753.i, double* %499, align 8
  store double %extract754.i, double* %501, align 8
  store double %extract755.i, double* %503, align 8
  store double %extract756.i, double* %505, align 8
  store double %extract757.i, double* %507, align 8
  store double %extract758.i, double* %509, align 8
  store double %extract759.i, double* %511, align 8
  store double %extract760.i, double* %513, align 8
  store double %extract761.i, double* %515, align 8
  %1148 = load double addrspace(3)* %158, align 16
  %temp762.i = insertelement <16 x double> undef, double %1148, i32 0
  %vector763.i = shufflevector <16 x double> %temp762.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1682.i" = add nuw i64 %CurrSBIndex..3.i, 2560
  %"&pSB[currWI].offset1683.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1682.i"
  %CastToValueType1684.i = bitcast i8* %"&pSB[currWI].offset1683.i" to <16 x double>*
  %loadedValue1685.i = load <16 x double>* %CastToValueType1684.i, align 128
  %1149 = fmul <16 x double> %loadedValue1685.i, %vector763.i
  %1150 = fadd <16 x double> %1102, %1149
  %extract764.i = extractelement <16 x double> %1150, i32 0
  %extract765.i = extractelement <16 x double> %1150, i32 1
  %extract766.i = extractelement <16 x double> %1150, i32 2
  %extract767.i = extractelement <16 x double> %1150, i32 3
  %extract768.i = extractelement <16 x double> %1150, i32 4
  %extract769.i = extractelement <16 x double> %1150, i32 5
  %extract770.i = extractelement <16 x double> %1150, i32 6
  %extract771.i = extractelement <16 x double> %1150, i32 7
  %extract772.i = extractelement <16 x double> %1150, i32 8
  %extract773.i = extractelement <16 x double> %1150, i32 9
  %extract774.i = extractelement <16 x double> %1150, i32 10
  %extract775.i = extractelement <16 x double> %1150, i32 11
  %extract776.i = extractelement <16 x double> %1150, i32 12
  %extract777.i = extractelement <16 x double> %1150, i32 13
  %extract778.i = extractelement <16 x double> %1150, i32 14
  %extract779.i = extractelement <16 x double> %1150, i32 15
  store double %extract764.i, double* %517, align 16
  store double %extract765.i, double* %519, align 16
  store double %extract766.i, double* %521, align 16
  store double %extract767.i, double* %523, align 16
  store double %extract768.i, double* %525, align 16
  store double %extract769.i, double* %527, align 16
  store double %extract770.i, double* %529, align 16
  store double %extract771.i, double* %531, align 16
  store double %extract772.i, double* %533, align 16
  store double %extract773.i, double* %535, align 16
  store double %extract774.i, double* %537, align 16
  store double %extract775.i, double* %539, align 16
  store double %extract776.i, double* %541, align 16
  store double %extract777.i, double* %543, align 16
  store double %extract778.i, double* %545, align 16
  store double %extract779.i, double* %547, align 16
  %1151 = load double addrspace(3)* %160, align 8
  %temp780.i = insertelement <16 x double> undef, double %1151, i32 0
  %vector781.i = shufflevector <16 x double> %temp780.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1677.i" = add nuw i64 %CurrSBIndex..3.i, 2560
  %"&pSB[currWI].offset1678.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1677.i"
  %CastToValueType1679.i = bitcast i8* %"&pSB[currWI].offset1678.i" to <16 x double>*
  %loadedValue1680.i = load <16 x double>* %CastToValueType1679.i, align 128
  %1152 = fmul <16 x double> %loadedValue1680.i, %vector781.i
  %1153 = fadd <16 x double> %1105, %1152
  %extract782.i = extractelement <16 x double> %1153, i32 0
  %extract783.i = extractelement <16 x double> %1153, i32 1
  %extract784.i = extractelement <16 x double> %1153, i32 2
  %extract785.i = extractelement <16 x double> %1153, i32 3
  %extract786.i = extractelement <16 x double> %1153, i32 4
  %extract787.i = extractelement <16 x double> %1153, i32 5
  %extract788.i = extractelement <16 x double> %1153, i32 6
  %extract789.i = extractelement <16 x double> %1153, i32 7
  %extract790.i = extractelement <16 x double> %1153, i32 8
  %extract791.i = extractelement <16 x double> %1153, i32 9
  %extract792.i = extractelement <16 x double> %1153, i32 10
  %extract793.i = extractelement <16 x double> %1153, i32 11
  %extract794.i = extractelement <16 x double> %1153, i32 12
  %extract795.i = extractelement <16 x double> %1153, i32 13
  %extract796.i = extractelement <16 x double> %1153, i32 14
  %extract797.i = extractelement <16 x double> %1153, i32 15
  store double %extract782.i, double* %549, align 8
  store double %extract783.i, double* %551, align 8
  store double %extract784.i, double* %553, align 8
  store double %extract785.i, double* %555, align 8
  store double %extract786.i, double* %557, align 8
  store double %extract787.i, double* %559, align 8
  store double %extract788.i, double* %561, align 8
  store double %extract789.i, double* %563, align 8
  store double %extract790.i, double* %565, align 8
  store double %extract791.i, double* %567, align 8
  store double %extract792.i, double* %569, align 8
  store double %extract793.i, double* %571, align 8
  store double %extract794.i, double* %573, align 8
  store double %extract795.i, double* %575, align 8
  store double %extract796.i, double* %577, align 8
  store double %extract797.i, double* %579, align 8
  %1154 = load double addrspace(3)* %162, align 16
  %temp798.i = insertelement <16 x double> undef, double %1154, i32 0
  %vector799.i = shufflevector <16 x double> %temp798.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1672.i" = add nuw i64 %CurrSBIndex..3.i, 2560
  %"&pSB[currWI].offset1673.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1672.i"
  %CastToValueType1674.i = bitcast i8* %"&pSB[currWI].offset1673.i" to <16 x double>*
  %loadedValue1675.i = load <16 x double>* %CastToValueType1674.i, align 128
  %1155 = fmul <16 x double> %loadedValue1675.i, %vector799.i
  %1156 = fadd <16 x double> %1108, %1155
  %extract800.i = extractelement <16 x double> %1156, i32 0
  %extract801.i = extractelement <16 x double> %1156, i32 1
  %extract802.i = extractelement <16 x double> %1156, i32 2
  %extract803.i = extractelement <16 x double> %1156, i32 3
  %extract804.i = extractelement <16 x double> %1156, i32 4
  %extract805.i = extractelement <16 x double> %1156, i32 5
  %extract806.i = extractelement <16 x double> %1156, i32 6
  %extract807.i = extractelement <16 x double> %1156, i32 7
  %extract808.i = extractelement <16 x double> %1156, i32 8
  %extract809.i = extractelement <16 x double> %1156, i32 9
  %extract810.i = extractelement <16 x double> %1156, i32 10
  %extract811.i = extractelement <16 x double> %1156, i32 11
  %extract812.i = extractelement <16 x double> %1156, i32 12
  %extract813.i = extractelement <16 x double> %1156, i32 13
  %extract814.i = extractelement <16 x double> %1156, i32 14
  %extract815.i = extractelement <16 x double> %1156, i32 15
  store double %extract800.i, double* %581, align 16
  store double %extract801.i, double* %583, align 16
  store double %extract802.i, double* %585, align 16
  store double %extract803.i, double* %587, align 16
  store double %extract804.i, double* %589, align 16
  store double %extract805.i, double* %591, align 16
  store double %extract806.i, double* %593, align 16
  store double %extract807.i, double* %595, align 16
  store double %extract808.i, double* %597, align 16
  store double %extract809.i, double* %599, align 16
  store double %extract810.i, double* %601, align 16
  store double %extract811.i, double* %603, align 16
  store double %extract812.i, double* %605, align 16
  store double %extract813.i, double* %607, align 16
  store double %extract814.i, double* %609, align 16
  store double %extract815.i, double* %611, align 16
  %1157 = load double addrspace(3)* %164, align 8
  %temp816.i = insertelement <16 x double> undef, double %1157, i32 0
  %vector817.i = shufflevector <16 x double> %temp816.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1667.i" = add nuw i64 %CurrSBIndex..3.i, 2560
  %"&pSB[currWI].offset1668.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1667.i"
  %CastToValueType1669.i = bitcast i8* %"&pSB[currWI].offset1668.i" to <16 x double>*
  %loadedValue1670.i = load <16 x double>* %CastToValueType1669.i, align 128
  %1158 = fmul <16 x double> %loadedValue1670.i, %vector817.i
  %1159 = fadd <16 x double> %1111, %1158
  %extract818.i = extractelement <16 x double> %1159, i32 0
  %extract819.i = extractelement <16 x double> %1159, i32 1
  %extract820.i = extractelement <16 x double> %1159, i32 2
  %extract821.i = extractelement <16 x double> %1159, i32 3
  %extract822.i = extractelement <16 x double> %1159, i32 4
  %extract823.i = extractelement <16 x double> %1159, i32 5
  %extract824.i = extractelement <16 x double> %1159, i32 6
  %extract825.i = extractelement <16 x double> %1159, i32 7
  %extract826.i = extractelement <16 x double> %1159, i32 8
  %extract827.i = extractelement <16 x double> %1159, i32 9
  %extract828.i = extractelement <16 x double> %1159, i32 10
  %extract829.i = extractelement <16 x double> %1159, i32 11
  %extract830.i = extractelement <16 x double> %1159, i32 12
  %extract831.i = extractelement <16 x double> %1159, i32 13
  %extract832.i = extractelement <16 x double> %1159, i32 14
  %extract833.i = extractelement <16 x double> %1159, i32 15
  store double %extract818.i, double* %613, align 8
  store double %extract819.i, double* %615, align 8
  store double %extract820.i, double* %617, align 8
  store double %extract821.i, double* %619, align 8
  store double %extract822.i, double* %621, align 8
  store double %extract823.i, double* %623, align 8
  store double %extract824.i, double* %625, align 8
  store double %extract825.i, double* %627, align 8
  store double %extract826.i, double* %629, align 8
  store double %extract827.i, double* %631, align 8
  store double %extract828.i, double* %633, align 8
  store double %extract829.i, double* %635, align 8
  store double %extract830.i, double* %637, align 8
  store double %extract831.i, double* %639, align 8
  store double %extract832.i, double* %641, align 8
  store double %extract833.i, double* %643, align 8
  %1160 = load double addrspace(3)* %166, align 16
  %temp834.i = insertelement <16 x double> undef, double %1160, i32 0
  %vector835.i = shufflevector <16 x double> %temp834.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1662.i" = add nuw i64 %CurrSBIndex..3.i, 2560
  %"&pSB[currWI].offset1663.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1662.i"
  %CastToValueType1664.i = bitcast i8* %"&pSB[currWI].offset1663.i" to <16 x double>*
  %loadedValue1665.i = load <16 x double>* %CastToValueType1664.i, align 128
  %1161 = fmul <16 x double> %loadedValue1665.i, %vector835.i
  %1162 = fadd <16 x double> %1114, %1161
  %extract836.i = extractelement <16 x double> %1162, i32 0
  %extract837.i = extractelement <16 x double> %1162, i32 1
  %extract838.i = extractelement <16 x double> %1162, i32 2
  %extract839.i = extractelement <16 x double> %1162, i32 3
  %extract840.i = extractelement <16 x double> %1162, i32 4
  %extract841.i = extractelement <16 x double> %1162, i32 5
  %extract842.i = extractelement <16 x double> %1162, i32 6
  %extract843.i = extractelement <16 x double> %1162, i32 7
  %extract844.i = extractelement <16 x double> %1162, i32 8
  %extract845.i = extractelement <16 x double> %1162, i32 9
  %extract846.i = extractelement <16 x double> %1162, i32 10
  %extract847.i = extractelement <16 x double> %1162, i32 11
  %extract848.i = extractelement <16 x double> %1162, i32 12
  %extract849.i = extractelement <16 x double> %1162, i32 13
  %extract850.i = extractelement <16 x double> %1162, i32 14
  %extract851.i = extractelement <16 x double> %1162, i32 15
  store double %extract836.i, double* %645, align 16
  store double %extract837.i, double* %647, align 16
  store double %extract838.i, double* %649, align 16
  store double %extract839.i, double* %651, align 16
  store double %extract840.i, double* %653, align 16
  store double %extract841.i, double* %655, align 16
  store double %extract842.i, double* %657, align 16
  store double %extract843.i, double* %659, align 16
  store double %extract844.i, double* %661, align 16
  store double %extract845.i, double* %663, align 16
  store double %extract846.i, double* %665, align 16
  store double %extract847.i, double* %667, align 16
  store double %extract848.i, double* %669, align 16
  store double %extract849.i, double* %671, align 16
  store double %extract850.i, double* %673, align 16
  store double %extract851.i, double* %675, align 16
  %1163 = load double addrspace(3)* %168, align 8
  %temp852.i = insertelement <16 x double> undef, double %1163, i32 0
  %vector853.i = shufflevector <16 x double> %temp852.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1657.i" = add nuw i64 %CurrSBIndex..3.i, 2560
  %"&pSB[currWI].offset1658.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1657.i"
  %CastToValueType1659.i = bitcast i8* %"&pSB[currWI].offset1658.i" to <16 x double>*
  %loadedValue1660.i = load <16 x double>* %CastToValueType1659.i, align 128
  %1164 = fmul <16 x double> %loadedValue1660.i, %vector853.i
  %1165 = fadd <16 x double> %1117, %1164
  %extract854.i = extractelement <16 x double> %1165, i32 0
  %extract855.i = extractelement <16 x double> %1165, i32 1
  %extract856.i = extractelement <16 x double> %1165, i32 2
  %extract857.i = extractelement <16 x double> %1165, i32 3
  %extract858.i = extractelement <16 x double> %1165, i32 4
  %extract859.i = extractelement <16 x double> %1165, i32 5
  %extract860.i = extractelement <16 x double> %1165, i32 6
  %extract861.i = extractelement <16 x double> %1165, i32 7
  %extract862.i = extractelement <16 x double> %1165, i32 8
  %extract863.i = extractelement <16 x double> %1165, i32 9
  %extract864.i = extractelement <16 x double> %1165, i32 10
  %extract865.i = extractelement <16 x double> %1165, i32 11
  %extract866.i = extractelement <16 x double> %1165, i32 12
  %extract867.i = extractelement <16 x double> %1165, i32 13
  %extract868.i = extractelement <16 x double> %1165, i32 14
  %extract869.i = extractelement <16 x double> %1165, i32 15
  store double %extract854.i, double* %677, align 8
  store double %extract855.i, double* %679, align 8
  store double %extract856.i, double* %681, align 8
  store double %extract857.i, double* %683, align 8
  store double %extract858.i, double* %685, align 8
  store double %extract859.i, double* %687, align 8
  store double %extract860.i, double* %689, align 8
  store double %extract861.i, double* %691, align 8
  store double %extract862.i, double* %693, align 8
  store double %extract863.i, double* %695, align 8
  store double %extract864.i, double* %697, align 8
  store double %extract865.i, double* %699, align 8
  store double %extract866.i, double* %701, align 8
  store double %extract867.i, double* %703, align 8
  store double %extract868.i, double* %705, align 8
  store double %extract869.i, double* %707, align 8
  %check.WI.iter4632.i = icmp ult i64 %CurrWI..3.i, %37
  br i1 %check.WI.iter4632.i, label %thenBB4629.i, label %SyncBB4618.preheader.i

thenBB4629.i:                                     ; preds = %SyncBB.i
  %"CurrWI++4633.i" = add nuw i64 %CurrWI..3.i, 1
  %"loadedCurrSB+Stride4635.i" = add nuw i64 %CurrSBIndex..3.i, 12032
  br label %SyncBB.i

SyncBB4618.preheader.i:                           ; preds = %SyncBB.i, %thenBB.i
  %currBarrier.0.ph.i = phi i32 [ %currBarrier.1.i, %thenBB.i ], [ 6, %SyncBB.i ]
  %CurrSBIndex..1.ph.i = phi i64 [ %"loadedCurrSB+Stride.i", %thenBB.i ], [ 0, %SyncBB.i ]
  %CurrWI..1.ph.i = phi i64 [ %"CurrWI++.i", %thenBB.i ], [ 0, %SyncBB.i ]
  br label %SyncBB4618.i

SyncBB4618.i:                                     ; preds = %thenBB4622.i, %SyncBB4618.preheader.i
  %CurrSBIndex..1.i = phi i64 [ %"loadedCurrSB+Stride4628.i", %thenBB4622.i ], [ %CurrSBIndex..1.ph.i, %SyncBB4618.preheader.i ]
  %CurrWI..1.i = phi i64 [ %"CurrWI++4626.i", %thenBB4622.i ], [ %CurrWI..1.ph.i, %SyncBB4618.preheader.i ]
  %"&(pSB[currWI].offset)2002.i" = add nuw i64 %CurrSBIndex..1.i, 3080
  %"&pSB[currWI].offset2003.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2002.i"
  %CastToValueType2004.i = bitcast i8* %"&pSB[currWI].offset2003.i" to i32*
  %loadedValue2005.i = load i32* %CastToValueType2004.i, align 4
  %1166 = icmp slt i32 %loadedValue2005.i, %172
  %"&(pSB[currWI].offset)1993.i" = add nuw i64 %CurrSBIndex..1.i, 3072
  %"&pSB[currWI].offset1994.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1993.i"
  %CastToValueType1995.i = bitcast i8* %"&pSB[currWI].offset1994.i" to i64*
  %loadedValue1996.i = load i64* %CastToValueType1995.i, align 8
  %indvar.next36.i = add i64 %loadedValue1996.i, 1
  %"&(pSB[currWI].offset)2422.i" = add nuw i64 %CurrSBIndex..1.i, 3840
  %"&pSB[currWI].offset2423.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2422.i"
  %CastToValueType2424.i = bitcast i8* %"&pSB[currWI].offset2423.i" to i64*
  store i64 %indvar.next36.i, i64* %CastToValueType2424.i, align 8
  br i1 %1166, label %.loopexit.i, label %bb.nph.i

bb.nph.i:                                         ; preds = %SyncBB4618.i
  %"&(pSB[currWI].offset)1598.i" = add nuw i64 %CurrSBIndex..1.i, 1792
  %"&pSB[currWI].offset1599.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1598.i"
  %CastToValueType1600.i = bitcast i8* %"&pSB[currWI].offset1599.i" to double addrspace(3)**
  %loadedValue1601.i = load double addrspace(3)** %CastToValueType1600.i, align 8
  %ptrTypeCast870.i = bitcast double addrspace(3)* %loadedValue1601.i to <16 x double> addrspace(3)*
  %"&(pSB[currWI].offset)2417.i" = add nuw i64 %CurrSBIndex..1.i, 3712
  %"&pSB[currWI].offset2418.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2417.i"
  %CastToValueType2419.i = bitcast i8* %"&pSB[currWI].offset2418.i" to <16 x double>*
  %loadedValue2420.i = load <16 x double>* %CastToValueType2419.i, align 128
  store <16 x double> %loadedValue2420.i, <16 x double> addrspace(3)* %ptrTypeCast870.i, align 8
  %check.WI.iter4625.i = icmp ult i64 %CurrWI..1.i, %37
  br i1 %check.WI.iter4625.i, label %thenBB4622.i, label %elseBB4623.i

thenBB4622.i:                                     ; preds = %bb.nph.i
  %"CurrWI++4626.i" = add nuw i64 %CurrWI..1.i, 1
  %"loadedCurrSB+Stride4628.i" = add nuw i64 %CurrSBIndex..1.i, 12032
  br label %SyncBB4618.i

elseBB4623.i:                                     ; preds = %bb.nph.i
  %temp1539.i = insertelement <16 x double> undef, double %25, i32 0
  %vector1540.i = shufflevector <16 x double> %temp1539.i, <16 x double> undef, <16 x i32> zeroinitializer
  %temp1536.i = insertelement <16 x double> undef, double %22, i32 0
  %vector1537.i = shufflevector <16 x double> %temp1536.i, <16 x double> undef, <16 x i32> zeroinitializer
  %tmp.i = sext i32 %16 to i64
  %tmp18.i = mul i32 %186, %16
  br label %SyncBB4617.i

SyncBB4617.i:                                     ; preds = %thenBB4636.i, %elseBB4623.i
  %CurrSBIndex..4.i = phi i64 [ 0, %elseBB4623.i ], [ %"loadedCurrSB+Stride4642.i", %thenBB4636.i ]
  %CurrWI..4.i = phi i64 [ 0, %elseBB4623.i ], [ %"CurrWI++4640.i", %thenBB4636.i ]
  %1167 = load double addrspace(3)* %42, align 16
  %temp871.i = insertelement <16 x double> undef, double %1167, i32 0
  %vector872.i = shufflevector <16 x double> %temp871.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2136.i" = add nuw i64 %CurrSBIndex..4.i, 3200
  %"&pSB[currWI].offset2137.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2136.i"
  %CastToValueType2138.i = bitcast i8* %"&pSB[currWI].offset2137.i" to <16 x double>*
  %loadedValue2139.i = load <16 x double>* %CastToValueType2138.i, align 128
  %1168 = fmul <16 x double> %loadedValue2139.i, %vector872.i
  %1169 = load double* %212, align 16
  %1170 = load double* %213, align 16
  %1171 = load double* %214, align 16
  %1172 = load double* %215, align 16
  %1173 = load double* %216, align 16
  %1174 = load double* %217, align 16
  %1175 = load double* %218, align 16
  %1176 = load double* %219, align 16
  %1177 = load double* %220, align 16
  %1178 = load double* %221, align 16
  %1179 = load double* %222, align 16
  %1180 = load double* %223, align 16
  %1181 = load double* %224, align 16
  %1182 = load double* %225, align 16
  %1183 = load double* %226, align 16
  %1184 = load double* %227, align 16
  %temp.vect873.i = insertelement <16 x double> undef, double %1169, i32 0
  %temp.vect874.i = insertelement <16 x double> %temp.vect873.i, double %1170, i32 1
  %temp.vect875.i = insertelement <16 x double> %temp.vect874.i, double %1171, i32 2
  %temp.vect876.i = insertelement <16 x double> %temp.vect875.i, double %1172, i32 3
  %temp.vect877.i = insertelement <16 x double> %temp.vect876.i, double %1173, i32 4
  %temp.vect878.i = insertelement <16 x double> %temp.vect877.i, double %1174, i32 5
  %temp.vect879.i = insertelement <16 x double> %temp.vect878.i, double %1175, i32 6
  %temp.vect880.i = insertelement <16 x double> %temp.vect879.i, double %1176, i32 7
  %temp.vect881.i = insertelement <16 x double> %temp.vect880.i, double %1177, i32 8
  %temp.vect882.i = insertelement <16 x double> %temp.vect881.i, double %1178, i32 9
  %temp.vect883.i = insertelement <16 x double> %temp.vect882.i, double %1179, i32 10
  %temp.vect884.i = insertelement <16 x double> %temp.vect883.i, double %1180, i32 11
  %temp.vect885.i = insertelement <16 x double> %temp.vect884.i, double %1181, i32 12
  %temp.vect886.i = insertelement <16 x double> %temp.vect885.i, double %1182, i32 13
  %temp.vect887.i = insertelement <16 x double> %temp.vect886.i, double %1183, i32 14
  %temp.vect888.i = insertelement <16 x double> %temp.vect887.i, double %1184, i32 15
  %1185 = fadd <16 x double> %temp.vect888.i, %1168
  %1186 = load double addrspace(3)* %44, align 8
  %temp889.i = insertelement <16 x double> undef, double %1186, i32 0
  %vector890.i = shufflevector <16 x double> %temp889.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2131.i" = add nuw i64 %CurrSBIndex..4.i, 3200
  %"&pSB[currWI].offset2132.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2131.i"
  %CastToValueType2133.i = bitcast i8* %"&pSB[currWI].offset2132.i" to <16 x double>*
  %loadedValue2134.i = load <16 x double>* %CastToValueType2133.i, align 128
  %1187 = fmul <16 x double> %loadedValue2134.i, %vector890.i
  %1188 = load double* %229, align 8
  %1189 = load double* %231, align 8
  %1190 = load double* %233, align 8
  %1191 = load double* %235, align 8
  %1192 = load double* %237, align 8
  %1193 = load double* %239, align 8
  %1194 = load double* %241, align 8
  %1195 = load double* %243, align 8
  %1196 = load double* %245, align 8
  %1197 = load double* %247, align 8
  %1198 = load double* %249, align 8
  %1199 = load double* %251, align 8
  %1200 = load double* %253, align 8
  %1201 = load double* %255, align 8
  %1202 = load double* %257, align 8
  %1203 = load double* %259, align 8
  %temp.vect891.i = insertelement <16 x double> undef, double %1188, i32 0
  %temp.vect892.i = insertelement <16 x double> %temp.vect891.i, double %1189, i32 1
  %temp.vect893.i = insertelement <16 x double> %temp.vect892.i, double %1190, i32 2
  %temp.vect894.i = insertelement <16 x double> %temp.vect893.i, double %1191, i32 3
  %temp.vect895.i = insertelement <16 x double> %temp.vect894.i, double %1192, i32 4
  %temp.vect896.i = insertelement <16 x double> %temp.vect895.i, double %1193, i32 5
  %temp.vect897.i = insertelement <16 x double> %temp.vect896.i, double %1194, i32 6
  %temp.vect898.i = insertelement <16 x double> %temp.vect897.i, double %1195, i32 7
  %temp.vect899.i = insertelement <16 x double> %temp.vect898.i, double %1196, i32 8
  %temp.vect900.i = insertelement <16 x double> %temp.vect899.i, double %1197, i32 9
  %temp.vect901.i = insertelement <16 x double> %temp.vect900.i, double %1198, i32 10
  %temp.vect902.i = insertelement <16 x double> %temp.vect901.i, double %1199, i32 11
  %temp.vect903.i = insertelement <16 x double> %temp.vect902.i, double %1200, i32 12
  %temp.vect904.i = insertelement <16 x double> %temp.vect903.i, double %1201, i32 13
  %temp.vect905.i = insertelement <16 x double> %temp.vect904.i, double %1202, i32 14
  %temp.vect906.i = insertelement <16 x double> %temp.vect905.i, double %1203, i32 15
  %1204 = fadd <16 x double> %temp.vect906.i, %1187
  %1205 = load double addrspace(3)* %46, align 16
  %temp907.i = insertelement <16 x double> undef, double %1205, i32 0
  %vector908.i = shufflevector <16 x double> %temp907.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2126.i" = add nuw i64 %CurrSBIndex..4.i, 3200
  %"&pSB[currWI].offset2127.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2126.i"
  %CastToValueType2128.i = bitcast i8* %"&pSB[currWI].offset2127.i" to <16 x double>*
  %loadedValue2129.i = load <16 x double>* %CastToValueType2128.i, align 128
  %1206 = fmul <16 x double> %loadedValue2129.i, %vector908.i
  %1207 = load double* %261, align 16
  %1208 = load double* %263, align 16
  %1209 = load double* %265, align 16
  %1210 = load double* %267, align 16
  %1211 = load double* %269, align 16
  %1212 = load double* %271, align 16
  %1213 = load double* %273, align 16
  %1214 = load double* %275, align 16
  %1215 = load double* %277, align 16
  %1216 = load double* %279, align 16
  %1217 = load double* %281, align 16
  %1218 = load double* %283, align 16
  %1219 = load double* %285, align 16
  %1220 = load double* %287, align 16
  %1221 = load double* %289, align 16
  %1222 = load double* %291, align 16
  %temp.vect909.i = insertelement <16 x double> undef, double %1207, i32 0
  %temp.vect910.i = insertelement <16 x double> %temp.vect909.i, double %1208, i32 1
  %temp.vect911.i = insertelement <16 x double> %temp.vect910.i, double %1209, i32 2
  %temp.vect912.i = insertelement <16 x double> %temp.vect911.i, double %1210, i32 3
  %temp.vect913.i = insertelement <16 x double> %temp.vect912.i, double %1211, i32 4
  %temp.vect914.i = insertelement <16 x double> %temp.vect913.i, double %1212, i32 5
  %temp.vect915.i = insertelement <16 x double> %temp.vect914.i, double %1213, i32 6
  %temp.vect916.i = insertelement <16 x double> %temp.vect915.i, double %1214, i32 7
  %temp.vect917.i = insertelement <16 x double> %temp.vect916.i, double %1215, i32 8
  %temp.vect918.i = insertelement <16 x double> %temp.vect917.i, double %1216, i32 9
  %temp.vect919.i = insertelement <16 x double> %temp.vect918.i, double %1217, i32 10
  %temp.vect920.i = insertelement <16 x double> %temp.vect919.i, double %1218, i32 11
  %temp.vect921.i = insertelement <16 x double> %temp.vect920.i, double %1219, i32 12
  %temp.vect922.i = insertelement <16 x double> %temp.vect921.i, double %1220, i32 13
  %temp.vect923.i = insertelement <16 x double> %temp.vect922.i, double %1221, i32 14
  %temp.vect924.i = insertelement <16 x double> %temp.vect923.i, double %1222, i32 15
  %1223 = fadd <16 x double> %temp.vect924.i, %1206
  %1224 = load double addrspace(3)* %48, align 8
  %temp925.i = insertelement <16 x double> undef, double %1224, i32 0
  %vector926.i = shufflevector <16 x double> %temp925.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2121.i" = add nuw i64 %CurrSBIndex..4.i, 3200
  %"&pSB[currWI].offset2122.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2121.i"
  %CastToValueType2123.i = bitcast i8* %"&pSB[currWI].offset2122.i" to <16 x double>*
  %loadedValue2124.i = load <16 x double>* %CastToValueType2123.i, align 128
  %1225 = fmul <16 x double> %loadedValue2124.i, %vector926.i
  %1226 = load double* %293, align 8
  %1227 = load double* %295, align 8
  %1228 = load double* %297, align 8
  %1229 = load double* %299, align 8
  %1230 = load double* %301, align 8
  %1231 = load double* %303, align 8
  %1232 = load double* %305, align 8
  %1233 = load double* %307, align 8
  %1234 = load double* %309, align 8
  %1235 = load double* %311, align 8
  %1236 = load double* %313, align 8
  %1237 = load double* %315, align 8
  %1238 = load double* %317, align 8
  %1239 = load double* %319, align 8
  %1240 = load double* %321, align 8
  %1241 = load double* %323, align 8
  %temp.vect927.i = insertelement <16 x double> undef, double %1226, i32 0
  %temp.vect928.i = insertelement <16 x double> %temp.vect927.i, double %1227, i32 1
  %temp.vect929.i = insertelement <16 x double> %temp.vect928.i, double %1228, i32 2
  %temp.vect930.i = insertelement <16 x double> %temp.vect929.i, double %1229, i32 3
  %temp.vect931.i = insertelement <16 x double> %temp.vect930.i, double %1230, i32 4
  %temp.vect932.i = insertelement <16 x double> %temp.vect931.i, double %1231, i32 5
  %temp.vect933.i = insertelement <16 x double> %temp.vect932.i, double %1232, i32 6
  %temp.vect934.i = insertelement <16 x double> %temp.vect933.i, double %1233, i32 7
  %temp.vect935.i = insertelement <16 x double> %temp.vect934.i, double %1234, i32 8
  %temp.vect936.i = insertelement <16 x double> %temp.vect935.i, double %1235, i32 9
  %temp.vect937.i = insertelement <16 x double> %temp.vect936.i, double %1236, i32 10
  %temp.vect938.i = insertelement <16 x double> %temp.vect937.i, double %1237, i32 11
  %temp.vect939.i = insertelement <16 x double> %temp.vect938.i, double %1238, i32 12
  %temp.vect940.i = insertelement <16 x double> %temp.vect939.i, double %1239, i32 13
  %temp.vect941.i = insertelement <16 x double> %temp.vect940.i, double %1240, i32 14
  %temp.vect942.i = insertelement <16 x double> %temp.vect941.i, double %1241, i32 15
  %1242 = fadd <16 x double> %temp.vect942.i, %1225
  %1243 = load double addrspace(3)* %50, align 16
  %temp943.i = insertelement <16 x double> undef, double %1243, i32 0
  %vector944.i = shufflevector <16 x double> %temp943.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2116.i" = add nuw i64 %CurrSBIndex..4.i, 3200
  %"&pSB[currWI].offset2117.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2116.i"
  %CastToValueType2118.i = bitcast i8* %"&pSB[currWI].offset2117.i" to <16 x double>*
  %loadedValue2119.i = load <16 x double>* %CastToValueType2118.i, align 128
  %1244 = fmul <16 x double> %loadedValue2119.i, %vector944.i
  %1245 = load double* %325, align 16
  %1246 = load double* %327, align 16
  %1247 = load double* %329, align 16
  %1248 = load double* %331, align 16
  %1249 = load double* %333, align 16
  %1250 = load double* %335, align 16
  %1251 = load double* %337, align 16
  %1252 = load double* %339, align 16
  %1253 = load double* %341, align 16
  %1254 = load double* %343, align 16
  %1255 = load double* %345, align 16
  %1256 = load double* %347, align 16
  %1257 = load double* %349, align 16
  %1258 = load double* %351, align 16
  %1259 = load double* %353, align 16
  %1260 = load double* %355, align 16
  %temp.vect945.i = insertelement <16 x double> undef, double %1245, i32 0
  %temp.vect946.i = insertelement <16 x double> %temp.vect945.i, double %1246, i32 1
  %temp.vect947.i = insertelement <16 x double> %temp.vect946.i, double %1247, i32 2
  %temp.vect948.i = insertelement <16 x double> %temp.vect947.i, double %1248, i32 3
  %temp.vect949.i = insertelement <16 x double> %temp.vect948.i, double %1249, i32 4
  %temp.vect950.i = insertelement <16 x double> %temp.vect949.i, double %1250, i32 5
  %temp.vect951.i = insertelement <16 x double> %temp.vect950.i, double %1251, i32 6
  %temp.vect952.i = insertelement <16 x double> %temp.vect951.i, double %1252, i32 7
  %temp.vect953.i = insertelement <16 x double> %temp.vect952.i, double %1253, i32 8
  %temp.vect954.i = insertelement <16 x double> %temp.vect953.i, double %1254, i32 9
  %temp.vect955.i = insertelement <16 x double> %temp.vect954.i, double %1255, i32 10
  %temp.vect956.i = insertelement <16 x double> %temp.vect955.i, double %1256, i32 11
  %temp.vect957.i = insertelement <16 x double> %temp.vect956.i, double %1257, i32 12
  %temp.vect958.i = insertelement <16 x double> %temp.vect957.i, double %1258, i32 13
  %temp.vect959.i = insertelement <16 x double> %temp.vect958.i, double %1259, i32 14
  %temp.vect960.i = insertelement <16 x double> %temp.vect959.i, double %1260, i32 15
  %1261 = fadd <16 x double> %temp.vect960.i, %1244
  %1262 = load double addrspace(3)* %52, align 8
  %temp961.i = insertelement <16 x double> undef, double %1262, i32 0
  %vector962.i = shufflevector <16 x double> %temp961.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2111.i" = add nuw i64 %CurrSBIndex..4.i, 3200
  %"&pSB[currWI].offset2112.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2111.i"
  %CastToValueType2113.i = bitcast i8* %"&pSB[currWI].offset2112.i" to <16 x double>*
  %loadedValue2114.i = load <16 x double>* %CastToValueType2113.i, align 128
  %1263 = fmul <16 x double> %loadedValue2114.i, %vector962.i
  %1264 = load double* %357, align 8
  %1265 = load double* %359, align 8
  %1266 = load double* %361, align 8
  %1267 = load double* %363, align 8
  %1268 = load double* %365, align 8
  %1269 = load double* %367, align 8
  %1270 = load double* %369, align 8
  %1271 = load double* %371, align 8
  %1272 = load double* %373, align 8
  %1273 = load double* %375, align 8
  %1274 = load double* %377, align 8
  %1275 = load double* %379, align 8
  %1276 = load double* %381, align 8
  %1277 = load double* %383, align 8
  %1278 = load double* %385, align 8
  %1279 = load double* %387, align 8
  %temp.vect963.i = insertelement <16 x double> undef, double %1264, i32 0
  %temp.vect964.i = insertelement <16 x double> %temp.vect963.i, double %1265, i32 1
  %temp.vect965.i = insertelement <16 x double> %temp.vect964.i, double %1266, i32 2
  %temp.vect966.i = insertelement <16 x double> %temp.vect965.i, double %1267, i32 3
  %temp.vect967.i = insertelement <16 x double> %temp.vect966.i, double %1268, i32 4
  %temp.vect968.i = insertelement <16 x double> %temp.vect967.i, double %1269, i32 5
  %temp.vect969.i = insertelement <16 x double> %temp.vect968.i, double %1270, i32 6
  %temp.vect970.i = insertelement <16 x double> %temp.vect969.i, double %1271, i32 7
  %temp.vect971.i = insertelement <16 x double> %temp.vect970.i, double %1272, i32 8
  %temp.vect972.i = insertelement <16 x double> %temp.vect971.i, double %1273, i32 9
  %temp.vect973.i = insertelement <16 x double> %temp.vect972.i, double %1274, i32 10
  %temp.vect974.i = insertelement <16 x double> %temp.vect973.i, double %1275, i32 11
  %temp.vect975.i = insertelement <16 x double> %temp.vect974.i, double %1276, i32 12
  %temp.vect976.i = insertelement <16 x double> %temp.vect975.i, double %1277, i32 13
  %temp.vect977.i = insertelement <16 x double> %temp.vect976.i, double %1278, i32 14
  %temp.vect978.i = insertelement <16 x double> %temp.vect977.i, double %1279, i32 15
  %1280 = fadd <16 x double> %temp.vect978.i, %1263
  %1281 = load double addrspace(3)* %54, align 16
  %temp979.i = insertelement <16 x double> undef, double %1281, i32 0
  %vector980.i = shufflevector <16 x double> %temp979.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2106.i" = add nuw i64 %CurrSBIndex..4.i, 3200
  %"&pSB[currWI].offset2107.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2106.i"
  %CastToValueType2108.i = bitcast i8* %"&pSB[currWI].offset2107.i" to <16 x double>*
  %loadedValue2109.i = load <16 x double>* %CastToValueType2108.i, align 128
  %1282 = fmul <16 x double> %loadedValue2109.i, %vector980.i
  %1283 = load double* %389, align 16
  %1284 = load double* %391, align 16
  %1285 = load double* %393, align 16
  %1286 = load double* %395, align 16
  %1287 = load double* %397, align 16
  %1288 = load double* %399, align 16
  %1289 = load double* %401, align 16
  %1290 = load double* %403, align 16
  %1291 = load double* %405, align 16
  %1292 = load double* %407, align 16
  %1293 = load double* %409, align 16
  %1294 = load double* %411, align 16
  %1295 = load double* %413, align 16
  %1296 = load double* %415, align 16
  %1297 = load double* %417, align 16
  %1298 = load double* %419, align 16
  %temp.vect981.i = insertelement <16 x double> undef, double %1283, i32 0
  %temp.vect982.i = insertelement <16 x double> %temp.vect981.i, double %1284, i32 1
  %temp.vect983.i = insertelement <16 x double> %temp.vect982.i, double %1285, i32 2
  %temp.vect984.i = insertelement <16 x double> %temp.vect983.i, double %1286, i32 3
  %temp.vect985.i = insertelement <16 x double> %temp.vect984.i, double %1287, i32 4
  %temp.vect986.i = insertelement <16 x double> %temp.vect985.i, double %1288, i32 5
  %temp.vect987.i = insertelement <16 x double> %temp.vect986.i, double %1289, i32 6
  %temp.vect988.i = insertelement <16 x double> %temp.vect987.i, double %1290, i32 7
  %temp.vect989.i = insertelement <16 x double> %temp.vect988.i, double %1291, i32 8
  %temp.vect990.i = insertelement <16 x double> %temp.vect989.i, double %1292, i32 9
  %temp.vect991.i = insertelement <16 x double> %temp.vect990.i, double %1293, i32 10
  %temp.vect992.i = insertelement <16 x double> %temp.vect991.i, double %1294, i32 11
  %temp.vect993.i = insertelement <16 x double> %temp.vect992.i, double %1295, i32 12
  %temp.vect994.i = insertelement <16 x double> %temp.vect993.i, double %1296, i32 13
  %temp.vect995.i = insertelement <16 x double> %temp.vect994.i, double %1297, i32 14
  %temp.vect996.i = insertelement <16 x double> %temp.vect995.i, double %1298, i32 15
  %1299 = fadd <16 x double> %temp.vect996.i, %1282
  %1300 = load double addrspace(3)* %56, align 8
  %temp997.i = insertelement <16 x double> undef, double %1300, i32 0
  %vector998.i = shufflevector <16 x double> %temp997.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2101.i" = add nuw i64 %CurrSBIndex..4.i, 3200
  %"&pSB[currWI].offset2102.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2101.i"
  %CastToValueType2103.i = bitcast i8* %"&pSB[currWI].offset2102.i" to <16 x double>*
  %loadedValue2104.i = load <16 x double>* %CastToValueType2103.i, align 128
  %1301 = fmul <16 x double> %loadedValue2104.i, %vector998.i
  %1302 = load double* %421, align 8
  %1303 = load double* %423, align 8
  %1304 = load double* %425, align 8
  %1305 = load double* %427, align 8
  %1306 = load double* %429, align 8
  %1307 = load double* %431, align 8
  %1308 = load double* %433, align 8
  %1309 = load double* %435, align 8
  %1310 = load double* %437, align 8
  %1311 = load double* %439, align 8
  %1312 = load double* %441, align 8
  %1313 = load double* %443, align 8
  %1314 = load double* %445, align 8
  %1315 = load double* %447, align 8
  %1316 = load double* %449, align 8
  %1317 = load double* %451, align 8
  %temp.vect999.i = insertelement <16 x double> undef, double %1302, i32 0
  %temp.vect1000.i = insertelement <16 x double> %temp.vect999.i, double %1303, i32 1
  %temp.vect1001.i = insertelement <16 x double> %temp.vect1000.i, double %1304, i32 2
  %temp.vect1002.i = insertelement <16 x double> %temp.vect1001.i, double %1305, i32 3
  %temp.vect1003.i = insertelement <16 x double> %temp.vect1002.i, double %1306, i32 4
  %temp.vect1004.i = insertelement <16 x double> %temp.vect1003.i, double %1307, i32 5
  %temp.vect1005.i = insertelement <16 x double> %temp.vect1004.i, double %1308, i32 6
  %temp.vect1006.i = insertelement <16 x double> %temp.vect1005.i, double %1309, i32 7
  %temp.vect1007.i = insertelement <16 x double> %temp.vect1006.i, double %1310, i32 8
  %temp.vect1008.i = insertelement <16 x double> %temp.vect1007.i, double %1311, i32 9
  %temp.vect1009.i = insertelement <16 x double> %temp.vect1008.i, double %1312, i32 10
  %temp.vect1010.i = insertelement <16 x double> %temp.vect1009.i, double %1313, i32 11
  %temp.vect1011.i = insertelement <16 x double> %temp.vect1010.i, double %1314, i32 12
  %temp.vect1012.i = insertelement <16 x double> %temp.vect1011.i, double %1315, i32 13
  %temp.vect1013.i = insertelement <16 x double> %temp.vect1012.i, double %1316, i32 14
  %temp.vect1014.i = insertelement <16 x double> %temp.vect1013.i, double %1317, i32 15
  %1318 = fadd <16 x double> %temp.vect1014.i, %1301
  %1319 = load double addrspace(3)* %58, align 16
  %temp1015.i = insertelement <16 x double> undef, double %1319, i32 0
  %vector1016.i = shufflevector <16 x double> %temp1015.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2096.i" = add nuw i64 %CurrSBIndex..4.i, 3200
  %"&pSB[currWI].offset2097.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2096.i"
  %CastToValueType2098.i = bitcast i8* %"&pSB[currWI].offset2097.i" to <16 x double>*
  %loadedValue2099.i = load <16 x double>* %CastToValueType2098.i, align 128
  %1320 = fmul <16 x double> %loadedValue2099.i, %vector1016.i
  %1321 = load double* %453, align 16
  %1322 = load double* %455, align 16
  %1323 = load double* %457, align 16
  %1324 = load double* %459, align 16
  %1325 = load double* %461, align 16
  %1326 = load double* %463, align 16
  %1327 = load double* %465, align 16
  %1328 = load double* %467, align 16
  %1329 = load double* %469, align 16
  %1330 = load double* %471, align 16
  %1331 = load double* %473, align 16
  %1332 = load double* %475, align 16
  %1333 = load double* %477, align 16
  %1334 = load double* %479, align 16
  %1335 = load double* %481, align 16
  %1336 = load double* %483, align 16
  %temp.vect1017.i = insertelement <16 x double> undef, double %1321, i32 0
  %temp.vect1018.i = insertelement <16 x double> %temp.vect1017.i, double %1322, i32 1
  %temp.vect1019.i = insertelement <16 x double> %temp.vect1018.i, double %1323, i32 2
  %temp.vect1020.i = insertelement <16 x double> %temp.vect1019.i, double %1324, i32 3
  %temp.vect1021.i = insertelement <16 x double> %temp.vect1020.i, double %1325, i32 4
  %temp.vect1022.i = insertelement <16 x double> %temp.vect1021.i, double %1326, i32 5
  %temp.vect1023.i = insertelement <16 x double> %temp.vect1022.i, double %1327, i32 6
  %temp.vect1024.i = insertelement <16 x double> %temp.vect1023.i, double %1328, i32 7
  %temp.vect1025.i = insertelement <16 x double> %temp.vect1024.i, double %1329, i32 8
  %temp.vect1026.i = insertelement <16 x double> %temp.vect1025.i, double %1330, i32 9
  %temp.vect1027.i = insertelement <16 x double> %temp.vect1026.i, double %1331, i32 10
  %temp.vect1028.i = insertelement <16 x double> %temp.vect1027.i, double %1332, i32 11
  %temp.vect1029.i = insertelement <16 x double> %temp.vect1028.i, double %1333, i32 12
  %temp.vect1030.i = insertelement <16 x double> %temp.vect1029.i, double %1334, i32 13
  %temp.vect1031.i = insertelement <16 x double> %temp.vect1030.i, double %1335, i32 14
  %temp.vect1032.i = insertelement <16 x double> %temp.vect1031.i, double %1336, i32 15
  %1337 = fadd <16 x double> %temp.vect1032.i, %1320
  %1338 = load double addrspace(3)* %60, align 8
  %temp1033.i = insertelement <16 x double> undef, double %1338, i32 0
  %vector1034.i = shufflevector <16 x double> %temp1033.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2091.i" = add nuw i64 %CurrSBIndex..4.i, 3200
  %"&pSB[currWI].offset2092.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2091.i"
  %CastToValueType2093.i = bitcast i8* %"&pSB[currWI].offset2092.i" to <16 x double>*
  %loadedValue2094.i = load <16 x double>* %CastToValueType2093.i, align 128
  %1339 = fmul <16 x double> %loadedValue2094.i, %vector1034.i
  %1340 = load double* %485, align 8
  %1341 = load double* %487, align 8
  %1342 = load double* %489, align 8
  %1343 = load double* %491, align 8
  %1344 = load double* %493, align 8
  %1345 = load double* %495, align 8
  %1346 = load double* %497, align 8
  %1347 = load double* %499, align 8
  %1348 = load double* %501, align 8
  %1349 = load double* %503, align 8
  %1350 = load double* %505, align 8
  %1351 = load double* %507, align 8
  %1352 = load double* %509, align 8
  %1353 = load double* %511, align 8
  %1354 = load double* %513, align 8
  %1355 = load double* %515, align 8
  %temp.vect1035.i = insertelement <16 x double> undef, double %1340, i32 0
  %temp.vect1036.i = insertelement <16 x double> %temp.vect1035.i, double %1341, i32 1
  %temp.vect1037.i = insertelement <16 x double> %temp.vect1036.i, double %1342, i32 2
  %temp.vect1038.i = insertelement <16 x double> %temp.vect1037.i, double %1343, i32 3
  %temp.vect1039.i = insertelement <16 x double> %temp.vect1038.i, double %1344, i32 4
  %temp.vect1040.i = insertelement <16 x double> %temp.vect1039.i, double %1345, i32 5
  %temp.vect1041.i = insertelement <16 x double> %temp.vect1040.i, double %1346, i32 6
  %temp.vect1042.i = insertelement <16 x double> %temp.vect1041.i, double %1347, i32 7
  %temp.vect1043.i = insertelement <16 x double> %temp.vect1042.i, double %1348, i32 8
  %temp.vect1044.i = insertelement <16 x double> %temp.vect1043.i, double %1349, i32 9
  %temp.vect1045.i = insertelement <16 x double> %temp.vect1044.i, double %1350, i32 10
  %temp.vect1046.i = insertelement <16 x double> %temp.vect1045.i, double %1351, i32 11
  %temp.vect1047.i = insertelement <16 x double> %temp.vect1046.i, double %1352, i32 12
  %temp.vect1048.i = insertelement <16 x double> %temp.vect1047.i, double %1353, i32 13
  %temp.vect1049.i = insertelement <16 x double> %temp.vect1048.i, double %1354, i32 14
  %temp.vect1050.i = insertelement <16 x double> %temp.vect1049.i, double %1355, i32 15
  %1356 = fadd <16 x double> %temp.vect1050.i, %1339
  %1357 = load double addrspace(3)* %62, align 16
  %temp1051.i = insertelement <16 x double> undef, double %1357, i32 0
  %vector1052.i = shufflevector <16 x double> %temp1051.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2086.i" = add nuw i64 %CurrSBIndex..4.i, 3200
  %"&pSB[currWI].offset2087.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2086.i"
  %CastToValueType2088.i = bitcast i8* %"&pSB[currWI].offset2087.i" to <16 x double>*
  %loadedValue2089.i = load <16 x double>* %CastToValueType2088.i, align 128
  %1358 = fmul <16 x double> %loadedValue2089.i, %vector1052.i
  %1359 = load double* %517, align 16
  %1360 = load double* %519, align 16
  %1361 = load double* %521, align 16
  %1362 = load double* %523, align 16
  %1363 = load double* %525, align 16
  %1364 = load double* %527, align 16
  %1365 = load double* %529, align 16
  %1366 = load double* %531, align 16
  %1367 = load double* %533, align 16
  %1368 = load double* %535, align 16
  %1369 = load double* %537, align 16
  %1370 = load double* %539, align 16
  %1371 = load double* %541, align 16
  %1372 = load double* %543, align 16
  %1373 = load double* %545, align 16
  %1374 = load double* %547, align 16
  %temp.vect1053.i = insertelement <16 x double> undef, double %1359, i32 0
  %temp.vect1054.i = insertelement <16 x double> %temp.vect1053.i, double %1360, i32 1
  %temp.vect1055.i = insertelement <16 x double> %temp.vect1054.i, double %1361, i32 2
  %temp.vect1056.i = insertelement <16 x double> %temp.vect1055.i, double %1362, i32 3
  %temp.vect1057.i = insertelement <16 x double> %temp.vect1056.i, double %1363, i32 4
  %temp.vect1058.i = insertelement <16 x double> %temp.vect1057.i, double %1364, i32 5
  %temp.vect1059.i = insertelement <16 x double> %temp.vect1058.i, double %1365, i32 6
  %temp.vect1060.i = insertelement <16 x double> %temp.vect1059.i, double %1366, i32 7
  %temp.vect1061.i = insertelement <16 x double> %temp.vect1060.i, double %1367, i32 8
  %temp.vect1062.i = insertelement <16 x double> %temp.vect1061.i, double %1368, i32 9
  %temp.vect1063.i = insertelement <16 x double> %temp.vect1062.i, double %1369, i32 10
  %temp.vect1064.i = insertelement <16 x double> %temp.vect1063.i, double %1370, i32 11
  %temp.vect1065.i = insertelement <16 x double> %temp.vect1064.i, double %1371, i32 12
  %temp.vect1066.i = insertelement <16 x double> %temp.vect1065.i, double %1372, i32 13
  %temp.vect1067.i = insertelement <16 x double> %temp.vect1066.i, double %1373, i32 14
  %temp.vect1068.i = insertelement <16 x double> %temp.vect1067.i, double %1374, i32 15
  %1375 = fadd <16 x double> %temp.vect1068.i, %1358
  %1376 = load double addrspace(3)* %64, align 8
  %temp1069.i = insertelement <16 x double> undef, double %1376, i32 0
  %vector1070.i = shufflevector <16 x double> %temp1069.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2081.i" = add nuw i64 %CurrSBIndex..4.i, 3200
  %"&pSB[currWI].offset2082.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2081.i"
  %CastToValueType2083.i = bitcast i8* %"&pSB[currWI].offset2082.i" to <16 x double>*
  %loadedValue2084.i = load <16 x double>* %CastToValueType2083.i, align 128
  %1377 = fmul <16 x double> %loadedValue2084.i, %vector1070.i
  %1378 = load double* %549, align 8
  %1379 = load double* %551, align 8
  %1380 = load double* %553, align 8
  %1381 = load double* %555, align 8
  %1382 = load double* %557, align 8
  %1383 = load double* %559, align 8
  %1384 = load double* %561, align 8
  %1385 = load double* %563, align 8
  %1386 = load double* %565, align 8
  %1387 = load double* %567, align 8
  %1388 = load double* %569, align 8
  %1389 = load double* %571, align 8
  %1390 = load double* %573, align 8
  %1391 = load double* %575, align 8
  %1392 = load double* %577, align 8
  %1393 = load double* %579, align 8
  %temp.vect1071.i = insertelement <16 x double> undef, double %1378, i32 0
  %temp.vect1072.i = insertelement <16 x double> %temp.vect1071.i, double %1379, i32 1
  %temp.vect1073.i = insertelement <16 x double> %temp.vect1072.i, double %1380, i32 2
  %temp.vect1074.i = insertelement <16 x double> %temp.vect1073.i, double %1381, i32 3
  %temp.vect1075.i = insertelement <16 x double> %temp.vect1074.i, double %1382, i32 4
  %temp.vect1076.i = insertelement <16 x double> %temp.vect1075.i, double %1383, i32 5
  %temp.vect1077.i = insertelement <16 x double> %temp.vect1076.i, double %1384, i32 6
  %temp.vect1078.i = insertelement <16 x double> %temp.vect1077.i, double %1385, i32 7
  %temp.vect1079.i = insertelement <16 x double> %temp.vect1078.i, double %1386, i32 8
  %temp.vect1080.i = insertelement <16 x double> %temp.vect1079.i, double %1387, i32 9
  %temp.vect1081.i = insertelement <16 x double> %temp.vect1080.i, double %1388, i32 10
  %temp.vect1082.i = insertelement <16 x double> %temp.vect1081.i, double %1389, i32 11
  %temp.vect1083.i = insertelement <16 x double> %temp.vect1082.i, double %1390, i32 12
  %temp.vect1084.i = insertelement <16 x double> %temp.vect1083.i, double %1391, i32 13
  %temp.vect1085.i = insertelement <16 x double> %temp.vect1084.i, double %1392, i32 14
  %temp.vect1086.i = insertelement <16 x double> %temp.vect1085.i, double %1393, i32 15
  %1394 = fadd <16 x double> %temp.vect1086.i, %1377
  %1395 = load double addrspace(3)* %66, align 16
  %temp1087.i = insertelement <16 x double> undef, double %1395, i32 0
  %vector1088.i = shufflevector <16 x double> %temp1087.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2076.i" = add nuw i64 %CurrSBIndex..4.i, 3200
  %"&pSB[currWI].offset2077.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2076.i"
  %CastToValueType2078.i = bitcast i8* %"&pSB[currWI].offset2077.i" to <16 x double>*
  %loadedValue2079.i = load <16 x double>* %CastToValueType2078.i, align 128
  %1396 = fmul <16 x double> %loadedValue2079.i, %vector1088.i
  %1397 = load double* %581, align 16
  %1398 = load double* %583, align 16
  %1399 = load double* %585, align 16
  %1400 = load double* %587, align 16
  %1401 = load double* %589, align 16
  %1402 = load double* %591, align 16
  %1403 = load double* %593, align 16
  %1404 = load double* %595, align 16
  %1405 = load double* %597, align 16
  %1406 = load double* %599, align 16
  %1407 = load double* %601, align 16
  %1408 = load double* %603, align 16
  %1409 = load double* %605, align 16
  %1410 = load double* %607, align 16
  %1411 = load double* %609, align 16
  %1412 = load double* %611, align 16
  %temp.vect1089.i = insertelement <16 x double> undef, double %1397, i32 0
  %temp.vect1090.i = insertelement <16 x double> %temp.vect1089.i, double %1398, i32 1
  %temp.vect1091.i = insertelement <16 x double> %temp.vect1090.i, double %1399, i32 2
  %temp.vect1092.i = insertelement <16 x double> %temp.vect1091.i, double %1400, i32 3
  %temp.vect1093.i = insertelement <16 x double> %temp.vect1092.i, double %1401, i32 4
  %temp.vect1094.i = insertelement <16 x double> %temp.vect1093.i, double %1402, i32 5
  %temp.vect1095.i = insertelement <16 x double> %temp.vect1094.i, double %1403, i32 6
  %temp.vect1096.i = insertelement <16 x double> %temp.vect1095.i, double %1404, i32 7
  %temp.vect1097.i = insertelement <16 x double> %temp.vect1096.i, double %1405, i32 8
  %temp.vect1098.i = insertelement <16 x double> %temp.vect1097.i, double %1406, i32 9
  %temp.vect1099.i = insertelement <16 x double> %temp.vect1098.i, double %1407, i32 10
  %temp.vect1100.i = insertelement <16 x double> %temp.vect1099.i, double %1408, i32 11
  %temp.vect1101.i = insertelement <16 x double> %temp.vect1100.i, double %1409, i32 12
  %temp.vect1102.i = insertelement <16 x double> %temp.vect1101.i, double %1410, i32 13
  %temp.vect1103.i = insertelement <16 x double> %temp.vect1102.i, double %1411, i32 14
  %temp.vect1104.i = insertelement <16 x double> %temp.vect1103.i, double %1412, i32 15
  %1413 = fadd <16 x double> %temp.vect1104.i, %1396
  %1414 = load double addrspace(3)* %68, align 8
  %temp1105.i = insertelement <16 x double> undef, double %1414, i32 0
  %vector1106.i = shufflevector <16 x double> %temp1105.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2071.i" = add nuw i64 %CurrSBIndex..4.i, 3200
  %"&pSB[currWI].offset2072.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2071.i"
  %CastToValueType2073.i = bitcast i8* %"&pSB[currWI].offset2072.i" to <16 x double>*
  %loadedValue2074.i = load <16 x double>* %CastToValueType2073.i, align 128
  %1415 = fmul <16 x double> %loadedValue2074.i, %vector1106.i
  %1416 = load double* %613, align 8
  %1417 = load double* %615, align 8
  %1418 = load double* %617, align 8
  %1419 = load double* %619, align 8
  %1420 = load double* %621, align 8
  %1421 = load double* %623, align 8
  %1422 = load double* %625, align 8
  %1423 = load double* %627, align 8
  %1424 = load double* %629, align 8
  %1425 = load double* %631, align 8
  %1426 = load double* %633, align 8
  %1427 = load double* %635, align 8
  %1428 = load double* %637, align 8
  %1429 = load double* %639, align 8
  %1430 = load double* %641, align 8
  %1431 = load double* %643, align 8
  %temp.vect1107.i = insertelement <16 x double> undef, double %1416, i32 0
  %temp.vect1108.i = insertelement <16 x double> %temp.vect1107.i, double %1417, i32 1
  %temp.vect1109.i = insertelement <16 x double> %temp.vect1108.i, double %1418, i32 2
  %temp.vect1110.i = insertelement <16 x double> %temp.vect1109.i, double %1419, i32 3
  %temp.vect1111.i = insertelement <16 x double> %temp.vect1110.i, double %1420, i32 4
  %temp.vect1112.i = insertelement <16 x double> %temp.vect1111.i, double %1421, i32 5
  %temp.vect1113.i = insertelement <16 x double> %temp.vect1112.i, double %1422, i32 6
  %temp.vect1114.i = insertelement <16 x double> %temp.vect1113.i, double %1423, i32 7
  %temp.vect1115.i = insertelement <16 x double> %temp.vect1114.i, double %1424, i32 8
  %temp.vect1116.i = insertelement <16 x double> %temp.vect1115.i, double %1425, i32 9
  %temp.vect1117.i = insertelement <16 x double> %temp.vect1116.i, double %1426, i32 10
  %temp.vect1118.i = insertelement <16 x double> %temp.vect1117.i, double %1427, i32 11
  %temp.vect1119.i = insertelement <16 x double> %temp.vect1118.i, double %1428, i32 12
  %temp.vect1120.i = insertelement <16 x double> %temp.vect1119.i, double %1429, i32 13
  %temp.vect1121.i = insertelement <16 x double> %temp.vect1120.i, double %1430, i32 14
  %temp.vect1122.i = insertelement <16 x double> %temp.vect1121.i, double %1431, i32 15
  %1432 = fadd <16 x double> %temp.vect1122.i, %1415
  %1433 = load double addrspace(3)* %70, align 16
  %temp1123.i = insertelement <16 x double> undef, double %1433, i32 0
  %vector1124.i = shufflevector <16 x double> %temp1123.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2066.i" = add nuw i64 %CurrSBIndex..4.i, 3200
  %"&pSB[currWI].offset2067.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2066.i"
  %CastToValueType2068.i = bitcast i8* %"&pSB[currWI].offset2067.i" to <16 x double>*
  %loadedValue2069.i = load <16 x double>* %CastToValueType2068.i, align 128
  %1434 = fmul <16 x double> %loadedValue2069.i, %vector1124.i
  %1435 = load double* %645, align 16
  %1436 = load double* %647, align 16
  %1437 = load double* %649, align 16
  %1438 = load double* %651, align 16
  %1439 = load double* %653, align 16
  %1440 = load double* %655, align 16
  %1441 = load double* %657, align 16
  %1442 = load double* %659, align 16
  %1443 = load double* %661, align 16
  %1444 = load double* %663, align 16
  %1445 = load double* %665, align 16
  %1446 = load double* %667, align 16
  %1447 = load double* %669, align 16
  %1448 = load double* %671, align 16
  %1449 = load double* %673, align 16
  %1450 = load double* %675, align 16
  %temp.vect1125.i = insertelement <16 x double> undef, double %1435, i32 0
  %temp.vect1126.i = insertelement <16 x double> %temp.vect1125.i, double %1436, i32 1
  %temp.vect1127.i = insertelement <16 x double> %temp.vect1126.i, double %1437, i32 2
  %temp.vect1128.i = insertelement <16 x double> %temp.vect1127.i, double %1438, i32 3
  %temp.vect1129.i = insertelement <16 x double> %temp.vect1128.i, double %1439, i32 4
  %temp.vect1130.i = insertelement <16 x double> %temp.vect1129.i, double %1440, i32 5
  %temp.vect1131.i = insertelement <16 x double> %temp.vect1130.i, double %1441, i32 6
  %temp.vect1132.i = insertelement <16 x double> %temp.vect1131.i, double %1442, i32 7
  %temp.vect1133.i = insertelement <16 x double> %temp.vect1132.i, double %1443, i32 8
  %temp.vect1134.i = insertelement <16 x double> %temp.vect1133.i, double %1444, i32 9
  %temp.vect1135.i = insertelement <16 x double> %temp.vect1134.i, double %1445, i32 10
  %temp.vect1136.i = insertelement <16 x double> %temp.vect1135.i, double %1446, i32 11
  %temp.vect1137.i = insertelement <16 x double> %temp.vect1136.i, double %1447, i32 12
  %temp.vect1138.i = insertelement <16 x double> %temp.vect1137.i, double %1448, i32 13
  %temp.vect1139.i = insertelement <16 x double> %temp.vect1138.i, double %1449, i32 14
  %temp.vect1140.i = insertelement <16 x double> %temp.vect1139.i, double %1450, i32 15
  %1451 = fadd <16 x double> %temp.vect1140.i, %1434
  %1452 = load double addrspace(3)* %72, align 8
  %temp1141.i = insertelement <16 x double> undef, double %1452, i32 0
  %vector1142.i = shufflevector <16 x double> %temp1141.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2061.i" = add nuw i64 %CurrSBIndex..4.i, 3200
  %"&pSB[currWI].offset2062.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2061.i"
  %CastToValueType2063.i = bitcast i8* %"&pSB[currWI].offset2062.i" to <16 x double>*
  %loadedValue2064.i = load <16 x double>* %CastToValueType2063.i, align 128
  %1453 = fmul <16 x double> %loadedValue2064.i, %vector1142.i
  %1454 = load double* %677, align 8
  %1455 = load double* %679, align 8
  %1456 = load double* %681, align 8
  %1457 = load double* %683, align 8
  %1458 = load double* %685, align 8
  %1459 = load double* %687, align 8
  %1460 = load double* %689, align 8
  %1461 = load double* %691, align 8
  %1462 = load double* %693, align 8
  %1463 = load double* %695, align 8
  %1464 = load double* %697, align 8
  %1465 = load double* %699, align 8
  %1466 = load double* %701, align 8
  %1467 = load double* %703, align 8
  %1468 = load double* %705, align 8
  %1469 = load double* %707, align 8
  %temp.vect1143.i = insertelement <16 x double> undef, double %1454, i32 0
  %temp.vect1144.i = insertelement <16 x double> %temp.vect1143.i, double %1455, i32 1
  %temp.vect1145.i = insertelement <16 x double> %temp.vect1144.i, double %1456, i32 2
  %temp.vect1146.i = insertelement <16 x double> %temp.vect1145.i, double %1457, i32 3
  %temp.vect1147.i = insertelement <16 x double> %temp.vect1146.i, double %1458, i32 4
  %temp.vect1148.i = insertelement <16 x double> %temp.vect1147.i, double %1459, i32 5
  %temp.vect1149.i = insertelement <16 x double> %temp.vect1148.i, double %1460, i32 6
  %temp.vect1150.i = insertelement <16 x double> %temp.vect1149.i, double %1461, i32 7
  %temp.vect1151.i = insertelement <16 x double> %temp.vect1150.i, double %1462, i32 8
  %temp.vect1152.i = insertelement <16 x double> %temp.vect1151.i, double %1463, i32 9
  %temp.vect1153.i = insertelement <16 x double> %temp.vect1152.i, double %1464, i32 10
  %temp.vect1154.i = insertelement <16 x double> %temp.vect1153.i, double %1465, i32 11
  %temp.vect1155.i = insertelement <16 x double> %temp.vect1154.i, double %1466, i32 12
  %temp.vect1156.i = insertelement <16 x double> %temp.vect1155.i, double %1467, i32 13
  %temp.vect1157.i = insertelement <16 x double> %temp.vect1156.i, double %1468, i32 14
  %temp.vect1158.i = insertelement <16 x double> %temp.vect1157.i, double %1469, i32 15
  %1470 = fadd <16 x double> %temp.vect1158.i, %1453
  %1471 = load double addrspace(3)* %74, align 16
  %temp1159.i = insertelement <16 x double> undef, double %1471, i32 0
  %vector1160.i = shufflevector <16 x double> %temp1159.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2225.i" = add nuw i64 %CurrSBIndex..4.i, 3328
  %"&pSB[currWI].offset2226.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2225.i"
  %CastToValueType2227.i = bitcast i8* %"&pSB[currWI].offset2226.i" to <16 x double>*
  %loadedValue2228.i = load <16 x double>* %CastToValueType2227.i, align 128
  %1472 = fmul <16 x double> %loadedValue2228.i, %vector1160.i
  %1473 = fadd <16 x double> %1185, %1472
  %1474 = load double addrspace(3)* %76, align 8
  %temp1161.i = insertelement <16 x double> undef, double %1474, i32 0
  %vector1162.i = shufflevector <16 x double> %temp1161.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2220.i" = add nuw i64 %CurrSBIndex..4.i, 3328
  %"&pSB[currWI].offset2221.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2220.i"
  %CastToValueType2222.i = bitcast i8* %"&pSB[currWI].offset2221.i" to <16 x double>*
  %loadedValue2223.i = load <16 x double>* %CastToValueType2222.i, align 128
  %1475 = fmul <16 x double> %loadedValue2223.i, %vector1162.i
  %1476 = fadd <16 x double> %1204, %1475
  %1477 = load double addrspace(3)* %78, align 16
  %temp1163.i = insertelement <16 x double> undef, double %1477, i32 0
  %vector1164.i = shufflevector <16 x double> %temp1163.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2215.i" = add nuw i64 %CurrSBIndex..4.i, 3328
  %"&pSB[currWI].offset2216.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2215.i"
  %CastToValueType2217.i = bitcast i8* %"&pSB[currWI].offset2216.i" to <16 x double>*
  %loadedValue2218.i = load <16 x double>* %CastToValueType2217.i, align 128
  %1478 = fmul <16 x double> %loadedValue2218.i, %vector1164.i
  %1479 = fadd <16 x double> %1223, %1478
  %1480 = load double addrspace(3)* %80, align 8
  %temp1165.i = insertelement <16 x double> undef, double %1480, i32 0
  %vector1166.i = shufflevector <16 x double> %temp1165.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2210.i" = add nuw i64 %CurrSBIndex..4.i, 3328
  %"&pSB[currWI].offset2211.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2210.i"
  %CastToValueType2212.i = bitcast i8* %"&pSB[currWI].offset2211.i" to <16 x double>*
  %loadedValue2213.i = load <16 x double>* %CastToValueType2212.i, align 128
  %1481 = fmul <16 x double> %loadedValue2213.i, %vector1166.i
  %1482 = fadd <16 x double> %1242, %1481
  %1483 = load double addrspace(3)* %82, align 16
  %temp1167.i = insertelement <16 x double> undef, double %1483, i32 0
  %vector1168.i = shufflevector <16 x double> %temp1167.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2205.i" = add nuw i64 %CurrSBIndex..4.i, 3328
  %"&pSB[currWI].offset2206.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2205.i"
  %CastToValueType2207.i = bitcast i8* %"&pSB[currWI].offset2206.i" to <16 x double>*
  %loadedValue2208.i = load <16 x double>* %CastToValueType2207.i, align 128
  %1484 = fmul <16 x double> %loadedValue2208.i, %vector1168.i
  %1485 = fadd <16 x double> %1261, %1484
  %1486 = load double addrspace(3)* %84, align 8
  %temp1169.i = insertelement <16 x double> undef, double %1486, i32 0
  %vector1170.i = shufflevector <16 x double> %temp1169.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2200.i" = add nuw i64 %CurrSBIndex..4.i, 3328
  %"&pSB[currWI].offset2201.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2200.i"
  %CastToValueType2202.i = bitcast i8* %"&pSB[currWI].offset2201.i" to <16 x double>*
  %loadedValue2203.i = load <16 x double>* %CastToValueType2202.i, align 128
  %1487 = fmul <16 x double> %loadedValue2203.i, %vector1170.i
  %1488 = fadd <16 x double> %1280, %1487
  %1489 = load double addrspace(3)* %86, align 16
  %temp1171.i = insertelement <16 x double> undef, double %1489, i32 0
  %vector1172.i = shufflevector <16 x double> %temp1171.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2195.i" = add nuw i64 %CurrSBIndex..4.i, 3328
  %"&pSB[currWI].offset2196.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2195.i"
  %CastToValueType2197.i = bitcast i8* %"&pSB[currWI].offset2196.i" to <16 x double>*
  %loadedValue2198.i = load <16 x double>* %CastToValueType2197.i, align 128
  %1490 = fmul <16 x double> %loadedValue2198.i, %vector1172.i
  %1491 = fadd <16 x double> %1299, %1490
  %1492 = load double addrspace(3)* %88, align 8
  %temp1173.i = insertelement <16 x double> undef, double %1492, i32 0
  %vector1174.i = shufflevector <16 x double> %temp1173.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2190.i" = add nuw i64 %CurrSBIndex..4.i, 3328
  %"&pSB[currWI].offset2191.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2190.i"
  %CastToValueType2192.i = bitcast i8* %"&pSB[currWI].offset2191.i" to <16 x double>*
  %loadedValue2193.i = load <16 x double>* %CastToValueType2192.i, align 128
  %1493 = fmul <16 x double> %loadedValue2193.i, %vector1174.i
  %1494 = fadd <16 x double> %1318, %1493
  %1495 = load double addrspace(3)* %90, align 16
  %temp1175.i = insertelement <16 x double> undef, double %1495, i32 0
  %vector1176.i = shufflevector <16 x double> %temp1175.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2185.i" = add nuw i64 %CurrSBIndex..4.i, 3328
  %"&pSB[currWI].offset2186.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2185.i"
  %CastToValueType2187.i = bitcast i8* %"&pSB[currWI].offset2186.i" to <16 x double>*
  %loadedValue2188.i = load <16 x double>* %CastToValueType2187.i, align 128
  %1496 = fmul <16 x double> %loadedValue2188.i, %vector1176.i
  %1497 = fadd <16 x double> %1337, %1496
  %1498 = load double addrspace(3)* %92, align 8
  %temp1177.i = insertelement <16 x double> undef, double %1498, i32 0
  %vector1178.i = shufflevector <16 x double> %temp1177.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2180.i" = add nuw i64 %CurrSBIndex..4.i, 3328
  %"&pSB[currWI].offset2181.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2180.i"
  %CastToValueType2182.i = bitcast i8* %"&pSB[currWI].offset2181.i" to <16 x double>*
  %loadedValue2183.i = load <16 x double>* %CastToValueType2182.i, align 128
  %1499 = fmul <16 x double> %loadedValue2183.i, %vector1178.i
  %1500 = fadd <16 x double> %1356, %1499
  %1501 = load double addrspace(3)* %94, align 16
  %temp1179.i = insertelement <16 x double> undef, double %1501, i32 0
  %vector1180.i = shufflevector <16 x double> %temp1179.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2175.i" = add nuw i64 %CurrSBIndex..4.i, 3328
  %"&pSB[currWI].offset2176.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2175.i"
  %CastToValueType2177.i = bitcast i8* %"&pSB[currWI].offset2176.i" to <16 x double>*
  %loadedValue2178.i = load <16 x double>* %CastToValueType2177.i, align 128
  %1502 = fmul <16 x double> %loadedValue2178.i, %vector1180.i
  %1503 = fadd <16 x double> %1375, %1502
  %1504 = load double addrspace(3)* %96, align 8
  %temp1181.i = insertelement <16 x double> undef, double %1504, i32 0
  %vector1182.i = shufflevector <16 x double> %temp1181.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2170.i" = add nuw i64 %CurrSBIndex..4.i, 3328
  %"&pSB[currWI].offset2171.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2170.i"
  %CastToValueType2172.i = bitcast i8* %"&pSB[currWI].offset2171.i" to <16 x double>*
  %loadedValue2173.i = load <16 x double>* %CastToValueType2172.i, align 128
  %1505 = fmul <16 x double> %loadedValue2173.i, %vector1182.i
  %1506 = fadd <16 x double> %1394, %1505
  %1507 = load double addrspace(3)* %98, align 16
  %temp1183.i = insertelement <16 x double> undef, double %1507, i32 0
  %vector1184.i = shufflevector <16 x double> %temp1183.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2165.i" = add nuw i64 %CurrSBIndex..4.i, 3328
  %"&pSB[currWI].offset2166.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2165.i"
  %CastToValueType2167.i = bitcast i8* %"&pSB[currWI].offset2166.i" to <16 x double>*
  %loadedValue2168.i = load <16 x double>* %CastToValueType2167.i, align 128
  %1508 = fmul <16 x double> %loadedValue2168.i, %vector1184.i
  %1509 = fadd <16 x double> %1413, %1508
  %1510 = load double addrspace(3)* %100, align 8
  %temp1185.i = insertelement <16 x double> undef, double %1510, i32 0
  %vector1186.i = shufflevector <16 x double> %temp1185.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2160.i" = add nuw i64 %CurrSBIndex..4.i, 3328
  %"&pSB[currWI].offset2161.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2160.i"
  %CastToValueType2162.i = bitcast i8* %"&pSB[currWI].offset2161.i" to <16 x double>*
  %loadedValue2163.i = load <16 x double>* %CastToValueType2162.i, align 128
  %1511 = fmul <16 x double> %loadedValue2163.i, %vector1186.i
  %1512 = fadd <16 x double> %1432, %1511
  %1513 = load double addrspace(3)* %102, align 16
  %temp1187.i = insertelement <16 x double> undef, double %1513, i32 0
  %vector1188.i = shufflevector <16 x double> %temp1187.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2155.i" = add nuw i64 %CurrSBIndex..4.i, 3328
  %"&pSB[currWI].offset2156.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2155.i"
  %CastToValueType2157.i = bitcast i8* %"&pSB[currWI].offset2156.i" to <16 x double>*
  %loadedValue2158.i = load <16 x double>* %CastToValueType2157.i, align 128
  %1514 = fmul <16 x double> %loadedValue2158.i, %vector1188.i
  %1515 = fadd <16 x double> %1451, %1514
  %1516 = load double addrspace(3)* %104, align 8
  %temp1189.i = insertelement <16 x double> undef, double %1516, i32 0
  %vector1190.i = shufflevector <16 x double> %temp1189.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2150.i" = add nuw i64 %CurrSBIndex..4.i, 3328
  %"&pSB[currWI].offset2151.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2150.i"
  %CastToValueType2152.i = bitcast i8* %"&pSB[currWI].offset2151.i" to <16 x double>*
  %loadedValue2153.i = load <16 x double>* %CastToValueType2152.i, align 128
  %1517 = fmul <16 x double> %loadedValue2153.i, %vector1190.i
  %1518 = fadd <16 x double> %1470, %1517
  %1519 = load double addrspace(3)* %106, align 16
  %temp1191.i = insertelement <16 x double> undef, double %1519, i32 0
  %vector1192.i = shufflevector <16 x double> %temp1191.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2314.i" = add nuw i64 %CurrSBIndex..4.i, 3456
  %"&pSB[currWI].offset2315.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2314.i"
  %CastToValueType2316.i = bitcast i8* %"&pSB[currWI].offset2315.i" to <16 x double>*
  %loadedValue2317.i = load <16 x double>* %CastToValueType2316.i, align 128
  %1520 = fmul <16 x double> %loadedValue2317.i, %vector1192.i
  %1521 = fadd <16 x double> %1473, %1520
  %1522 = load double addrspace(3)* %108, align 8
  %temp1193.i = insertelement <16 x double> undef, double %1522, i32 0
  %vector1194.i = shufflevector <16 x double> %temp1193.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2309.i" = add nuw i64 %CurrSBIndex..4.i, 3456
  %"&pSB[currWI].offset2310.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2309.i"
  %CastToValueType2311.i = bitcast i8* %"&pSB[currWI].offset2310.i" to <16 x double>*
  %loadedValue2312.i = load <16 x double>* %CastToValueType2311.i, align 128
  %1523 = fmul <16 x double> %loadedValue2312.i, %vector1194.i
  %1524 = fadd <16 x double> %1476, %1523
  %1525 = load double addrspace(3)* %110, align 16
  %temp1195.i = insertelement <16 x double> undef, double %1525, i32 0
  %vector1196.i = shufflevector <16 x double> %temp1195.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2304.i" = add nuw i64 %CurrSBIndex..4.i, 3456
  %"&pSB[currWI].offset2305.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2304.i"
  %CastToValueType2306.i = bitcast i8* %"&pSB[currWI].offset2305.i" to <16 x double>*
  %loadedValue2307.i = load <16 x double>* %CastToValueType2306.i, align 128
  %1526 = fmul <16 x double> %loadedValue2307.i, %vector1196.i
  %1527 = fadd <16 x double> %1479, %1526
  %1528 = load double addrspace(3)* %112, align 8
  %temp1197.i = insertelement <16 x double> undef, double %1528, i32 0
  %vector1198.i = shufflevector <16 x double> %temp1197.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2299.i" = add nuw i64 %CurrSBIndex..4.i, 3456
  %"&pSB[currWI].offset2300.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2299.i"
  %CastToValueType2301.i = bitcast i8* %"&pSB[currWI].offset2300.i" to <16 x double>*
  %loadedValue2302.i = load <16 x double>* %CastToValueType2301.i, align 128
  %1529 = fmul <16 x double> %loadedValue2302.i, %vector1198.i
  %1530 = fadd <16 x double> %1482, %1529
  %1531 = load double addrspace(3)* %114, align 16
  %temp1199.i = insertelement <16 x double> undef, double %1531, i32 0
  %vector1200.i = shufflevector <16 x double> %temp1199.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2294.i" = add nuw i64 %CurrSBIndex..4.i, 3456
  %"&pSB[currWI].offset2295.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2294.i"
  %CastToValueType2296.i = bitcast i8* %"&pSB[currWI].offset2295.i" to <16 x double>*
  %loadedValue2297.i = load <16 x double>* %CastToValueType2296.i, align 128
  %1532 = fmul <16 x double> %loadedValue2297.i, %vector1200.i
  %1533 = fadd <16 x double> %1485, %1532
  %1534 = load double addrspace(3)* %116, align 8
  %temp1201.i = insertelement <16 x double> undef, double %1534, i32 0
  %vector1202.i = shufflevector <16 x double> %temp1201.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2289.i" = add nuw i64 %CurrSBIndex..4.i, 3456
  %"&pSB[currWI].offset2290.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2289.i"
  %CastToValueType2291.i = bitcast i8* %"&pSB[currWI].offset2290.i" to <16 x double>*
  %loadedValue2292.i = load <16 x double>* %CastToValueType2291.i, align 128
  %1535 = fmul <16 x double> %loadedValue2292.i, %vector1202.i
  %1536 = fadd <16 x double> %1488, %1535
  %1537 = load double addrspace(3)* %118, align 16
  %temp1203.i = insertelement <16 x double> undef, double %1537, i32 0
  %vector1204.i = shufflevector <16 x double> %temp1203.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2284.i" = add nuw i64 %CurrSBIndex..4.i, 3456
  %"&pSB[currWI].offset2285.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2284.i"
  %CastToValueType2286.i = bitcast i8* %"&pSB[currWI].offset2285.i" to <16 x double>*
  %loadedValue2287.i = load <16 x double>* %CastToValueType2286.i, align 128
  %1538 = fmul <16 x double> %loadedValue2287.i, %vector1204.i
  %1539 = fadd <16 x double> %1491, %1538
  %1540 = load double addrspace(3)* %120, align 8
  %temp1205.i = insertelement <16 x double> undef, double %1540, i32 0
  %vector1206.i = shufflevector <16 x double> %temp1205.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2279.i" = add nuw i64 %CurrSBIndex..4.i, 3456
  %"&pSB[currWI].offset2280.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2279.i"
  %CastToValueType2281.i = bitcast i8* %"&pSB[currWI].offset2280.i" to <16 x double>*
  %loadedValue2282.i = load <16 x double>* %CastToValueType2281.i, align 128
  %1541 = fmul <16 x double> %loadedValue2282.i, %vector1206.i
  %1542 = fadd <16 x double> %1494, %1541
  %1543 = load double addrspace(3)* %122, align 16
  %temp1207.i = insertelement <16 x double> undef, double %1543, i32 0
  %vector1208.i = shufflevector <16 x double> %temp1207.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2274.i" = add nuw i64 %CurrSBIndex..4.i, 3456
  %"&pSB[currWI].offset2275.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2274.i"
  %CastToValueType2276.i = bitcast i8* %"&pSB[currWI].offset2275.i" to <16 x double>*
  %loadedValue2277.i = load <16 x double>* %CastToValueType2276.i, align 128
  %1544 = fmul <16 x double> %loadedValue2277.i, %vector1208.i
  %1545 = fadd <16 x double> %1497, %1544
  %1546 = load double addrspace(3)* %124, align 8
  %temp1209.i = insertelement <16 x double> undef, double %1546, i32 0
  %vector1210.i = shufflevector <16 x double> %temp1209.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2269.i" = add nuw i64 %CurrSBIndex..4.i, 3456
  %"&pSB[currWI].offset2270.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2269.i"
  %CastToValueType2271.i = bitcast i8* %"&pSB[currWI].offset2270.i" to <16 x double>*
  %loadedValue2272.i = load <16 x double>* %CastToValueType2271.i, align 128
  %1547 = fmul <16 x double> %loadedValue2272.i, %vector1210.i
  %1548 = fadd <16 x double> %1500, %1547
  %1549 = load double addrspace(3)* %126, align 16
  %temp1211.i = insertelement <16 x double> undef, double %1549, i32 0
  %vector1212.i = shufflevector <16 x double> %temp1211.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2264.i" = add nuw i64 %CurrSBIndex..4.i, 3456
  %"&pSB[currWI].offset2265.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2264.i"
  %CastToValueType2266.i = bitcast i8* %"&pSB[currWI].offset2265.i" to <16 x double>*
  %loadedValue2267.i = load <16 x double>* %CastToValueType2266.i, align 128
  %1550 = fmul <16 x double> %loadedValue2267.i, %vector1212.i
  %1551 = fadd <16 x double> %1503, %1550
  %1552 = load double addrspace(3)* %128, align 8
  %temp1213.i = insertelement <16 x double> undef, double %1552, i32 0
  %vector1214.i = shufflevector <16 x double> %temp1213.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2259.i" = add nuw i64 %CurrSBIndex..4.i, 3456
  %"&pSB[currWI].offset2260.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2259.i"
  %CastToValueType2261.i = bitcast i8* %"&pSB[currWI].offset2260.i" to <16 x double>*
  %loadedValue2262.i = load <16 x double>* %CastToValueType2261.i, align 128
  %1553 = fmul <16 x double> %loadedValue2262.i, %vector1214.i
  %1554 = fadd <16 x double> %1506, %1553
  %1555 = load double addrspace(3)* %130, align 16
  %temp1215.i = insertelement <16 x double> undef, double %1555, i32 0
  %vector1216.i = shufflevector <16 x double> %temp1215.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2254.i" = add nuw i64 %CurrSBIndex..4.i, 3456
  %"&pSB[currWI].offset2255.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2254.i"
  %CastToValueType2256.i = bitcast i8* %"&pSB[currWI].offset2255.i" to <16 x double>*
  %loadedValue2257.i = load <16 x double>* %CastToValueType2256.i, align 128
  %1556 = fmul <16 x double> %loadedValue2257.i, %vector1216.i
  %1557 = fadd <16 x double> %1509, %1556
  %1558 = load double addrspace(3)* %132, align 8
  %temp1217.i = insertelement <16 x double> undef, double %1558, i32 0
  %vector1218.i = shufflevector <16 x double> %temp1217.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2249.i" = add nuw i64 %CurrSBIndex..4.i, 3456
  %"&pSB[currWI].offset2250.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2249.i"
  %CastToValueType2251.i = bitcast i8* %"&pSB[currWI].offset2250.i" to <16 x double>*
  %loadedValue2252.i = load <16 x double>* %CastToValueType2251.i, align 128
  %1559 = fmul <16 x double> %loadedValue2252.i, %vector1218.i
  %1560 = fadd <16 x double> %1512, %1559
  %1561 = load double addrspace(3)* %134, align 16
  %temp1219.i = insertelement <16 x double> undef, double %1561, i32 0
  %vector1220.i = shufflevector <16 x double> %temp1219.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2244.i" = add nuw i64 %CurrSBIndex..4.i, 3456
  %"&pSB[currWI].offset2245.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2244.i"
  %CastToValueType2246.i = bitcast i8* %"&pSB[currWI].offset2245.i" to <16 x double>*
  %loadedValue2247.i = load <16 x double>* %CastToValueType2246.i, align 128
  %1562 = fmul <16 x double> %loadedValue2247.i, %vector1220.i
  %1563 = fadd <16 x double> %1515, %1562
  %1564 = load double addrspace(3)* %136, align 8
  %temp1221.i = insertelement <16 x double> undef, double %1564, i32 0
  %vector1222.i = shufflevector <16 x double> %temp1221.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2239.i" = add nuw i64 %CurrSBIndex..4.i, 3456
  %"&pSB[currWI].offset2240.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2239.i"
  %CastToValueType2241.i = bitcast i8* %"&pSB[currWI].offset2240.i" to <16 x double>*
  %loadedValue2242.i = load <16 x double>* %CastToValueType2241.i, align 128
  %1565 = fmul <16 x double> %loadedValue2242.i, %vector1222.i
  %1566 = fadd <16 x double> %1518, %1565
  %1567 = load double addrspace(3)* %138, align 16
  %temp1223.i = insertelement <16 x double> undef, double %1567, i32 0
  %vector1224.i = shufflevector <16 x double> %temp1223.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2403.i" = add nuw i64 %CurrSBIndex..4.i, 3584
  %"&pSB[currWI].offset2404.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2403.i"
  %CastToValueType2405.i = bitcast i8* %"&pSB[currWI].offset2404.i" to <16 x double>*
  %loadedValue2406.i = load <16 x double>* %CastToValueType2405.i, align 128
  %1568 = fmul <16 x double> %loadedValue2406.i, %vector1224.i
  %1569 = fadd <16 x double> %1521, %1568
  %extract1225.i = extractelement <16 x double> %1569, i32 0
  %extract1226.i = extractelement <16 x double> %1569, i32 1
  %extract1227.i = extractelement <16 x double> %1569, i32 2
  %extract1228.i = extractelement <16 x double> %1569, i32 3
  %extract1229.i = extractelement <16 x double> %1569, i32 4
  %extract1230.i = extractelement <16 x double> %1569, i32 5
  %extract1231.i = extractelement <16 x double> %1569, i32 6
  %extract1232.i = extractelement <16 x double> %1569, i32 7
  %extract1233.i = extractelement <16 x double> %1569, i32 8
  %extract1234.i = extractelement <16 x double> %1569, i32 9
  %extract1235.i = extractelement <16 x double> %1569, i32 10
  %extract1236.i = extractelement <16 x double> %1569, i32 11
  %extract1237.i = extractelement <16 x double> %1569, i32 12
  %extract1238.i = extractelement <16 x double> %1569, i32 13
  %extract1239.i = extractelement <16 x double> %1569, i32 14
  %extract1240.i = extractelement <16 x double> %1569, i32 15
  store double %extract1225.i, double* %212, align 16
  store double %extract1226.i, double* %213, align 16
  store double %extract1227.i, double* %214, align 16
  store double %extract1228.i, double* %215, align 16
  store double %extract1229.i, double* %216, align 16
  store double %extract1230.i, double* %217, align 16
  store double %extract1231.i, double* %218, align 16
  store double %extract1232.i, double* %219, align 16
  store double %extract1233.i, double* %220, align 16
  store double %extract1234.i, double* %221, align 16
  store double %extract1235.i, double* %222, align 16
  store double %extract1236.i, double* %223, align 16
  store double %extract1237.i, double* %224, align 16
  store double %extract1238.i, double* %225, align 16
  store double %extract1239.i, double* %226, align 16
  store double %extract1240.i, double* %227, align 16
  %1570 = load double addrspace(3)* %140, align 8
  %temp1241.i = insertelement <16 x double> undef, double %1570, i32 0
  %vector1242.i = shufflevector <16 x double> %temp1241.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2398.i" = add nuw i64 %CurrSBIndex..4.i, 3584
  %"&pSB[currWI].offset2399.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2398.i"
  %CastToValueType2400.i = bitcast i8* %"&pSB[currWI].offset2399.i" to <16 x double>*
  %loadedValue2401.i = load <16 x double>* %CastToValueType2400.i, align 128
  %1571 = fmul <16 x double> %loadedValue2401.i, %vector1242.i
  %1572 = fadd <16 x double> %1524, %1571
  %extract1243.i = extractelement <16 x double> %1572, i32 0
  %extract1244.i = extractelement <16 x double> %1572, i32 1
  %extract1245.i = extractelement <16 x double> %1572, i32 2
  %extract1246.i = extractelement <16 x double> %1572, i32 3
  %extract1247.i = extractelement <16 x double> %1572, i32 4
  %extract1248.i = extractelement <16 x double> %1572, i32 5
  %extract1249.i = extractelement <16 x double> %1572, i32 6
  %extract1250.i = extractelement <16 x double> %1572, i32 7
  %extract1251.i = extractelement <16 x double> %1572, i32 8
  %extract1252.i = extractelement <16 x double> %1572, i32 9
  %extract1253.i = extractelement <16 x double> %1572, i32 10
  %extract1254.i = extractelement <16 x double> %1572, i32 11
  %extract1255.i = extractelement <16 x double> %1572, i32 12
  %extract1256.i = extractelement <16 x double> %1572, i32 13
  %extract1257.i = extractelement <16 x double> %1572, i32 14
  %extract1258.i = extractelement <16 x double> %1572, i32 15
  store double %extract1243.i, double* %229, align 8
  store double %extract1244.i, double* %231, align 8
  store double %extract1245.i, double* %233, align 8
  store double %extract1246.i, double* %235, align 8
  store double %extract1247.i, double* %237, align 8
  store double %extract1248.i, double* %239, align 8
  store double %extract1249.i, double* %241, align 8
  store double %extract1250.i, double* %243, align 8
  store double %extract1251.i, double* %245, align 8
  store double %extract1252.i, double* %247, align 8
  store double %extract1253.i, double* %249, align 8
  store double %extract1254.i, double* %251, align 8
  store double %extract1255.i, double* %253, align 8
  store double %extract1256.i, double* %255, align 8
  store double %extract1257.i, double* %257, align 8
  store double %extract1258.i, double* %259, align 8
  %1573 = load double addrspace(3)* %142, align 16
  %temp1259.i = insertelement <16 x double> undef, double %1573, i32 0
  %vector1260.i = shufflevector <16 x double> %temp1259.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2393.i" = add nuw i64 %CurrSBIndex..4.i, 3584
  %"&pSB[currWI].offset2394.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2393.i"
  %CastToValueType2395.i = bitcast i8* %"&pSB[currWI].offset2394.i" to <16 x double>*
  %loadedValue2396.i = load <16 x double>* %CastToValueType2395.i, align 128
  %1574 = fmul <16 x double> %loadedValue2396.i, %vector1260.i
  %1575 = fadd <16 x double> %1527, %1574
  %extract1261.i = extractelement <16 x double> %1575, i32 0
  %extract1262.i = extractelement <16 x double> %1575, i32 1
  %extract1263.i = extractelement <16 x double> %1575, i32 2
  %extract1264.i = extractelement <16 x double> %1575, i32 3
  %extract1265.i = extractelement <16 x double> %1575, i32 4
  %extract1266.i = extractelement <16 x double> %1575, i32 5
  %extract1267.i = extractelement <16 x double> %1575, i32 6
  %extract1268.i = extractelement <16 x double> %1575, i32 7
  %extract1269.i = extractelement <16 x double> %1575, i32 8
  %extract1270.i = extractelement <16 x double> %1575, i32 9
  %extract1271.i = extractelement <16 x double> %1575, i32 10
  %extract1272.i = extractelement <16 x double> %1575, i32 11
  %extract1273.i = extractelement <16 x double> %1575, i32 12
  %extract1274.i = extractelement <16 x double> %1575, i32 13
  %extract1275.i = extractelement <16 x double> %1575, i32 14
  %extract1276.i = extractelement <16 x double> %1575, i32 15
  store double %extract1261.i, double* %261, align 16
  store double %extract1262.i, double* %263, align 16
  store double %extract1263.i, double* %265, align 16
  store double %extract1264.i, double* %267, align 16
  store double %extract1265.i, double* %269, align 16
  store double %extract1266.i, double* %271, align 16
  store double %extract1267.i, double* %273, align 16
  store double %extract1268.i, double* %275, align 16
  store double %extract1269.i, double* %277, align 16
  store double %extract1270.i, double* %279, align 16
  store double %extract1271.i, double* %281, align 16
  store double %extract1272.i, double* %283, align 16
  store double %extract1273.i, double* %285, align 16
  store double %extract1274.i, double* %287, align 16
  store double %extract1275.i, double* %289, align 16
  store double %extract1276.i, double* %291, align 16
  %1576 = load double addrspace(3)* %144, align 8
  %temp1277.i = insertelement <16 x double> undef, double %1576, i32 0
  %vector1278.i = shufflevector <16 x double> %temp1277.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2388.i" = add nuw i64 %CurrSBIndex..4.i, 3584
  %"&pSB[currWI].offset2389.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2388.i"
  %CastToValueType2390.i = bitcast i8* %"&pSB[currWI].offset2389.i" to <16 x double>*
  %loadedValue2391.i = load <16 x double>* %CastToValueType2390.i, align 128
  %1577 = fmul <16 x double> %loadedValue2391.i, %vector1278.i
  %1578 = fadd <16 x double> %1530, %1577
  %extract1279.i = extractelement <16 x double> %1578, i32 0
  %extract1280.i = extractelement <16 x double> %1578, i32 1
  %extract1281.i = extractelement <16 x double> %1578, i32 2
  %extract1282.i = extractelement <16 x double> %1578, i32 3
  %extract1283.i = extractelement <16 x double> %1578, i32 4
  %extract1284.i = extractelement <16 x double> %1578, i32 5
  %extract1285.i = extractelement <16 x double> %1578, i32 6
  %extract1286.i = extractelement <16 x double> %1578, i32 7
  %extract1287.i = extractelement <16 x double> %1578, i32 8
  %extract1288.i = extractelement <16 x double> %1578, i32 9
  %extract1289.i = extractelement <16 x double> %1578, i32 10
  %extract1290.i = extractelement <16 x double> %1578, i32 11
  %extract1291.i = extractelement <16 x double> %1578, i32 12
  %extract1292.i = extractelement <16 x double> %1578, i32 13
  %extract1293.i = extractelement <16 x double> %1578, i32 14
  %extract1294.i = extractelement <16 x double> %1578, i32 15
  store double %extract1279.i, double* %293, align 8
  store double %extract1280.i, double* %295, align 8
  store double %extract1281.i, double* %297, align 8
  store double %extract1282.i, double* %299, align 8
  store double %extract1283.i, double* %301, align 8
  store double %extract1284.i, double* %303, align 8
  store double %extract1285.i, double* %305, align 8
  store double %extract1286.i, double* %307, align 8
  store double %extract1287.i, double* %309, align 8
  store double %extract1288.i, double* %311, align 8
  store double %extract1289.i, double* %313, align 8
  store double %extract1290.i, double* %315, align 8
  store double %extract1291.i, double* %317, align 8
  store double %extract1292.i, double* %319, align 8
  store double %extract1293.i, double* %321, align 8
  store double %extract1294.i, double* %323, align 8
  %1579 = load double addrspace(3)* %146, align 16
  %temp1295.i = insertelement <16 x double> undef, double %1579, i32 0
  %vector1296.i = shufflevector <16 x double> %temp1295.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2383.i" = add nuw i64 %CurrSBIndex..4.i, 3584
  %"&pSB[currWI].offset2384.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2383.i"
  %CastToValueType2385.i = bitcast i8* %"&pSB[currWI].offset2384.i" to <16 x double>*
  %loadedValue2386.i = load <16 x double>* %CastToValueType2385.i, align 128
  %1580 = fmul <16 x double> %loadedValue2386.i, %vector1296.i
  %1581 = fadd <16 x double> %1533, %1580
  %extract1297.i = extractelement <16 x double> %1581, i32 0
  %extract1298.i = extractelement <16 x double> %1581, i32 1
  %extract1299.i = extractelement <16 x double> %1581, i32 2
  %extract1300.i = extractelement <16 x double> %1581, i32 3
  %extract1301.i = extractelement <16 x double> %1581, i32 4
  %extract1302.i = extractelement <16 x double> %1581, i32 5
  %extract1303.i = extractelement <16 x double> %1581, i32 6
  %extract1304.i = extractelement <16 x double> %1581, i32 7
  %extract1305.i = extractelement <16 x double> %1581, i32 8
  %extract1306.i = extractelement <16 x double> %1581, i32 9
  %extract1307.i = extractelement <16 x double> %1581, i32 10
  %extract1308.i = extractelement <16 x double> %1581, i32 11
  %extract1309.i = extractelement <16 x double> %1581, i32 12
  %extract1310.i = extractelement <16 x double> %1581, i32 13
  %extract1311.i = extractelement <16 x double> %1581, i32 14
  %extract1312.i = extractelement <16 x double> %1581, i32 15
  store double %extract1297.i, double* %325, align 16
  store double %extract1298.i, double* %327, align 16
  store double %extract1299.i, double* %329, align 16
  store double %extract1300.i, double* %331, align 16
  store double %extract1301.i, double* %333, align 16
  store double %extract1302.i, double* %335, align 16
  store double %extract1303.i, double* %337, align 16
  store double %extract1304.i, double* %339, align 16
  store double %extract1305.i, double* %341, align 16
  store double %extract1306.i, double* %343, align 16
  store double %extract1307.i, double* %345, align 16
  store double %extract1308.i, double* %347, align 16
  store double %extract1309.i, double* %349, align 16
  store double %extract1310.i, double* %351, align 16
  store double %extract1311.i, double* %353, align 16
  store double %extract1312.i, double* %355, align 16
  %1582 = load double addrspace(3)* %148, align 8
  %temp1313.i = insertelement <16 x double> undef, double %1582, i32 0
  %vector1314.i = shufflevector <16 x double> %temp1313.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2378.i" = add nuw i64 %CurrSBIndex..4.i, 3584
  %"&pSB[currWI].offset2379.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2378.i"
  %CastToValueType2380.i = bitcast i8* %"&pSB[currWI].offset2379.i" to <16 x double>*
  %loadedValue2381.i = load <16 x double>* %CastToValueType2380.i, align 128
  %1583 = fmul <16 x double> %loadedValue2381.i, %vector1314.i
  %1584 = fadd <16 x double> %1536, %1583
  %extract1315.i = extractelement <16 x double> %1584, i32 0
  %extract1316.i = extractelement <16 x double> %1584, i32 1
  %extract1317.i = extractelement <16 x double> %1584, i32 2
  %extract1318.i = extractelement <16 x double> %1584, i32 3
  %extract1319.i = extractelement <16 x double> %1584, i32 4
  %extract1320.i = extractelement <16 x double> %1584, i32 5
  %extract1321.i = extractelement <16 x double> %1584, i32 6
  %extract1322.i = extractelement <16 x double> %1584, i32 7
  %extract1323.i = extractelement <16 x double> %1584, i32 8
  %extract1324.i = extractelement <16 x double> %1584, i32 9
  %extract1325.i = extractelement <16 x double> %1584, i32 10
  %extract1326.i = extractelement <16 x double> %1584, i32 11
  %extract1327.i = extractelement <16 x double> %1584, i32 12
  %extract1328.i = extractelement <16 x double> %1584, i32 13
  %extract1329.i = extractelement <16 x double> %1584, i32 14
  %extract1330.i = extractelement <16 x double> %1584, i32 15
  store double %extract1315.i, double* %357, align 8
  store double %extract1316.i, double* %359, align 8
  store double %extract1317.i, double* %361, align 8
  store double %extract1318.i, double* %363, align 8
  store double %extract1319.i, double* %365, align 8
  store double %extract1320.i, double* %367, align 8
  store double %extract1321.i, double* %369, align 8
  store double %extract1322.i, double* %371, align 8
  store double %extract1323.i, double* %373, align 8
  store double %extract1324.i, double* %375, align 8
  store double %extract1325.i, double* %377, align 8
  store double %extract1326.i, double* %379, align 8
  store double %extract1327.i, double* %381, align 8
  store double %extract1328.i, double* %383, align 8
  store double %extract1329.i, double* %385, align 8
  store double %extract1330.i, double* %387, align 8
  %1585 = load double addrspace(3)* %150, align 16
  %temp1331.i = insertelement <16 x double> undef, double %1585, i32 0
  %vector1332.i = shufflevector <16 x double> %temp1331.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2373.i" = add nuw i64 %CurrSBIndex..4.i, 3584
  %"&pSB[currWI].offset2374.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2373.i"
  %CastToValueType2375.i = bitcast i8* %"&pSB[currWI].offset2374.i" to <16 x double>*
  %loadedValue2376.i = load <16 x double>* %CastToValueType2375.i, align 128
  %1586 = fmul <16 x double> %loadedValue2376.i, %vector1332.i
  %1587 = fadd <16 x double> %1539, %1586
  %extract1333.i = extractelement <16 x double> %1587, i32 0
  %extract1334.i = extractelement <16 x double> %1587, i32 1
  %extract1335.i = extractelement <16 x double> %1587, i32 2
  %extract1336.i = extractelement <16 x double> %1587, i32 3
  %extract1337.i = extractelement <16 x double> %1587, i32 4
  %extract1338.i = extractelement <16 x double> %1587, i32 5
  %extract1339.i = extractelement <16 x double> %1587, i32 6
  %extract1340.i = extractelement <16 x double> %1587, i32 7
  %extract1341.i = extractelement <16 x double> %1587, i32 8
  %extract1342.i = extractelement <16 x double> %1587, i32 9
  %extract1343.i = extractelement <16 x double> %1587, i32 10
  %extract1344.i = extractelement <16 x double> %1587, i32 11
  %extract1345.i = extractelement <16 x double> %1587, i32 12
  %extract1346.i = extractelement <16 x double> %1587, i32 13
  %extract1347.i = extractelement <16 x double> %1587, i32 14
  %extract1348.i = extractelement <16 x double> %1587, i32 15
  store double %extract1333.i, double* %389, align 16
  store double %extract1334.i, double* %391, align 16
  store double %extract1335.i, double* %393, align 16
  store double %extract1336.i, double* %395, align 16
  store double %extract1337.i, double* %397, align 16
  store double %extract1338.i, double* %399, align 16
  store double %extract1339.i, double* %401, align 16
  store double %extract1340.i, double* %403, align 16
  store double %extract1341.i, double* %405, align 16
  store double %extract1342.i, double* %407, align 16
  store double %extract1343.i, double* %409, align 16
  store double %extract1344.i, double* %411, align 16
  store double %extract1345.i, double* %413, align 16
  store double %extract1346.i, double* %415, align 16
  store double %extract1347.i, double* %417, align 16
  store double %extract1348.i, double* %419, align 16
  %1588 = load double addrspace(3)* %152, align 8
  %temp1349.i = insertelement <16 x double> undef, double %1588, i32 0
  %vector1350.i = shufflevector <16 x double> %temp1349.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2368.i" = add nuw i64 %CurrSBIndex..4.i, 3584
  %"&pSB[currWI].offset2369.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2368.i"
  %CastToValueType2370.i = bitcast i8* %"&pSB[currWI].offset2369.i" to <16 x double>*
  %loadedValue2371.i = load <16 x double>* %CastToValueType2370.i, align 128
  %1589 = fmul <16 x double> %loadedValue2371.i, %vector1350.i
  %1590 = fadd <16 x double> %1542, %1589
  %extract1351.i = extractelement <16 x double> %1590, i32 0
  %extract1352.i = extractelement <16 x double> %1590, i32 1
  %extract1353.i = extractelement <16 x double> %1590, i32 2
  %extract1354.i = extractelement <16 x double> %1590, i32 3
  %extract1355.i = extractelement <16 x double> %1590, i32 4
  %extract1356.i = extractelement <16 x double> %1590, i32 5
  %extract1357.i = extractelement <16 x double> %1590, i32 6
  %extract1358.i = extractelement <16 x double> %1590, i32 7
  %extract1359.i = extractelement <16 x double> %1590, i32 8
  %extract1360.i = extractelement <16 x double> %1590, i32 9
  %extract1361.i = extractelement <16 x double> %1590, i32 10
  %extract1362.i = extractelement <16 x double> %1590, i32 11
  %extract1363.i = extractelement <16 x double> %1590, i32 12
  %extract1364.i = extractelement <16 x double> %1590, i32 13
  %extract1365.i = extractelement <16 x double> %1590, i32 14
  %extract1366.i = extractelement <16 x double> %1590, i32 15
  store double %extract1351.i, double* %421, align 8
  store double %extract1352.i, double* %423, align 8
  store double %extract1353.i, double* %425, align 8
  store double %extract1354.i, double* %427, align 8
  store double %extract1355.i, double* %429, align 8
  store double %extract1356.i, double* %431, align 8
  store double %extract1357.i, double* %433, align 8
  store double %extract1358.i, double* %435, align 8
  store double %extract1359.i, double* %437, align 8
  store double %extract1360.i, double* %439, align 8
  store double %extract1361.i, double* %441, align 8
  store double %extract1362.i, double* %443, align 8
  store double %extract1363.i, double* %445, align 8
  store double %extract1364.i, double* %447, align 8
  store double %extract1365.i, double* %449, align 8
  store double %extract1366.i, double* %451, align 8
  %1591 = load double addrspace(3)* %154, align 16
  %temp1367.i = insertelement <16 x double> undef, double %1591, i32 0
  %vector1368.i = shufflevector <16 x double> %temp1367.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2363.i" = add nuw i64 %CurrSBIndex..4.i, 3584
  %"&pSB[currWI].offset2364.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2363.i"
  %CastToValueType2365.i = bitcast i8* %"&pSB[currWI].offset2364.i" to <16 x double>*
  %loadedValue2366.i = load <16 x double>* %CastToValueType2365.i, align 128
  %1592 = fmul <16 x double> %loadedValue2366.i, %vector1368.i
  %1593 = fadd <16 x double> %1545, %1592
  %extract1369.i = extractelement <16 x double> %1593, i32 0
  %extract1370.i = extractelement <16 x double> %1593, i32 1
  %extract1371.i = extractelement <16 x double> %1593, i32 2
  %extract1372.i = extractelement <16 x double> %1593, i32 3
  %extract1373.i = extractelement <16 x double> %1593, i32 4
  %extract1374.i = extractelement <16 x double> %1593, i32 5
  %extract1375.i = extractelement <16 x double> %1593, i32 6
  %extract1376.i = extractelement <16 x double> %1593, i32 7
  %extract1377.i = extractelement <16 x double> %1593, i32 8
  %extract1378.i = extractelement <16 x double> %1593, i32 9
  %extract1379.i = extractelement <16 x double> %1593, i32 10
  %extract1380.i = extractelement <16 x double> %1593, i32 11
  %extract1381.i = extractelement <16 x double> %1593, i32 12
  %extract1382.i = extractelement <16 x double> %1593, i32 13
  %extract1383.i = extractelement <16 x double> %1593, i32 14
  %extract1384.i = extractelement <16 x double> %1593, i32 15
  store double %extract1369.i, double* %453, align 16
  store double %extract1370.i, double* %455, align 16
  store double %extract1371.i, double* %457, align 16
  store double %extract1372.i, double* %459, align 16
  store double %extract1373.i, double* %461, align 16
  store double %extract1374.i, double* %463, align 16
  store double %extract1375.i, double* %465, align 16
  store double %extract1376.i, double* %467, align 16
  store double %extract1377.i, double* %469, align 16
  store double %extract1378.i, double* %471, align 16
  store double %extract1379.i, double* %473, align 16
  store double %extract1380.i, double* %475, align 16
  store double %extract1381.i, double* %477, align 16
  store double %extract1382.i, double* %479, align 16
  store double %extract1383.i, double* %481, align 16
  store double %extract1384.i, double* %483, align 16
  %1594 = load double addrspace(3)* %156, align 8
  %temp1385.i = insertelement <16 x double> undef, double %1594, i32 0
  %vector1386.i = shufflevector <16 x double> %temp1385.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2358.i" = add nuw i64 %CurrSBIndex..4.i, 3584
  %"&pSB[currWI].offset2359.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2358.i"
  %CastToValueType2360.i = bitcast i8* %"&pSB[currWI].offset2359.i" to <16 x double>*
  %loadedValue2361.i = load <16 x double>* %CastToValueType2360.i, align 128
  %1595 = fmul <16 x double> %loadedValue2361.i, %vector1386.i
  %1596 = fadd <16 x double> %1548, %1595
  %extract1387.i = extractelement <16 x double> %1596, i32 0
  %extract1388.i = extractelement <16 x double> %1596, i32 1
  %extract1389.i = extractelement <16 x double> %1596, i32 2
  %extract1390.i = extractelement <16 x double> %1596, i32 3
  %extract1391.i = extractelement <16 x double> %1596, i32 4
  %extract1392.i = extractelement <16 x double> %1596, i32 5
  %extract1393.i = extractelement <16 x double> %1596, i32 6
  %extract1394.i = extractelement <16 x double> %1596, i32 7
  %extract1395.i = extractelement <16 x double> %1596, i32 8
  %extract1396.i = extractelement <16 x double> %1596, i32 9
  %extract1397.i = extractelement <16 x double> %1596, i32 10
  %extract1398.i = extractelement <16 x double> %1596, i32 11
  %extract1399.i = extractelement <16 x double> %1596, i32 12
  %extract1400.i = extractelement <16 x double> %1596, i32 13
  %extract1401.i = extractelement <16 x double> %1596, i32 14
  %extract1402.i = extractelement <16 x double> %1596, i32 15
  store double %extract1387.i, double* %485, align 8
  store double %extract1388.i, double* %487, align 8
  store double %extract1389.i, double* %489, align 8
  store double %extract1390.i, double* %491, align 8
  store double %extract1391.i, double* %493, align 8
  store double %extract1392.i, double* %495, align 8
  store double %extract1393.i, double* %497, align 8
  store double %extract1394.i, double* %499, align 8
  store double %extract1395.i, double* %501, align 8
  store double %extract1396.i, double* %503, align 8
  store double %extract1397.i, double* %505, align 8
  store double %extract1398.i, double* %507, align 8
  store double %extract1399.i, double* %509, align 8
  store double %extract1400.i, double* %511, align 8
  store double %extract1401.i, double* %513, align 8
  store double %extract1402.i, double* %515, align 8
  %1597 = load double addrspace(3)* %158, align 16
  %temp1403.i = insertelement <16 x double> undef, double %1597, i32 0
  %vector1404.i = shufflevector <16 x double> %temp1403.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2353.i" = add nuw i64 %CurrSBIndex..4.i, 3584
  %"&pSB[currWI].offset2354.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2353.i"
  %CastToValueType2355.i = bitcast i8* %"&pSB[currWI].offset2354.i" to <16 x double>*
  %loadedValue2356.i = load <16 x double>* %CastToValueType2355.i, align 128
  %1598 = fmul <16 x double> %loadedValue2356.i, %vector1404.i
  %1599 = fadd <16 x double> %1551, %1598
  %extract1405.i = extractelement <16 x double> %1599, i32 0
  %extract1406.i = extractelement <16 x double> %1599, i32 1
  %extract1407.i = extractelement <16 x double> %1599, i32 2
  %extract1408.i = extractelement <16 x double> %1599, i32 3
  %extract1409.i = extractelement <16 x double> %1599, i32 4
  %extract1410.i = extractelement <16 x double> %1599, i32 5
  %extract1411.i = extractelement <16 x double> %1599, i32 6
  %extract1412.i = extractelement <16 x double> %1599, i32 7
  %extract1413.i = extractelement <16 x double> %1599, i32 8
  %extract1414.i = extractelement <16 x double> %1599, i32 9
  %extract1415.i = extractelement <16 x double> %1599, i32 10
  %extract1416.i = extractelement <16 x double> %1599, i32 11
  %extract1417.i = extractelement <16 x double> %1599, i32 12
  %extract1418.i = extractelement <16 x double> %1599, i32 13
  %extract1419.i = extractelement <16 x double> %1599, i32 14
  %extract1420.i = extractelement <16 x double> %1599, i32 15
  store double %extract1405.i, double* %517, align 16
  store double %extract1406.i, double* %519, align 16
  store double %extract1407.i, double* %521, align 16
  store double %extract1408.i, double* %523, align 16
  store double %extract1409.i, double* %525, align 16
  store double %extract1410.i, double* %527, align 16
  store double %extract1411.i, double* %529, align 16
  store double %extract1412.i, double* %531, align 16
  store double %extract1413.i, double* %533, align 16
  store double %extract1414.i, double* %535, align 16
  store double %extract1415.i, double* %537, align 16
  store double %extract1416.i, double* %539, align 16
  store double %extract1417.i, double* %541, align 16
  store double %extract1418.i, double* %543, align 16
  store double %extract1419.i, double* %545, align 16
  store double %extract1420.i, double* %547, align 16
  %1600 = load double addrspace(3)* %160, align 8
  %temp1421.i = insertelement <16 x double> undef, double %1600, i32 0
  %vector1422.i = shufflevector <16 x double> %temp1421.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2348.i" = add nuw i64 %CurrSBIndex..4.i, 3584
  %"&pSB[currWI].offset2349.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2348.i"
  %CastToValueType2350.i = bitcast i8* %"&pSB[currWI].offset2349.i" to <16 x double>*
  %loadedValue2351.i = load <16 x double>* %CastToValueType2350.i, align 128
  %1601 = fmul <16 x double> %loadedValue2351.i, %vector1422.i
  %1602 = fadd <16 x double> %1554, %1601
  %extract1423.i = extractelement <16 x double> %1602, i32 0
  %extract1424.i = extractelement <16 x double> %1602, i32 1
  %extract1425.i = extractelement <16 x double> %1602, i32 2
  %extract1426.i = extractelement <16 x double> %1602, i32 3
  %extract1427.i = extractelement <16 x double> %1602, i32 4
  %extract1428.i = extractelement <16 x double> %1602, i32 5
  %extract1429.i = extractelement <16 x double> %1602, i32 6
  %extract1430.i = extractelement <16 x double> %1602, i32 7
  %extract1431.i = extractelement <16 x double> %1602, i32 8
  %extract1432.i = extractelement <16 x double> %1602, i32 9
  %extract1433.i = extractelement <16 x double> %1602, i32 10
  %extract1434.i = extractelement <16 x double> %1602, i32 11
  %extract1435.i = extractelement <16 x double> %1602, i32 12
  %extract1436.i = extractelement <16 x double> %1602, i32 13
  %extract1437.i = extractelement <16 x double> %1602, i32 14
  %extract1438.i = extractelement <16 x double> %1602, i32 15
  store double %extract1423.i, double* %549, align 8
  store double %extract1424.i, double* %551, align 8
  store double %extract1425.i, double* %553, align 8
  store double %extract1426.i, double* %555, align 8
  store double %extract1427.i, double* %557, align 8
  store double %extract1428.i, double* %559, align 8
  store double %extract1429.i, double* %561, align 8
  store double %extract1430.i, double* %563, align 8
  store double %extract1431.i, double* %565, align 8
  store double %extract1432.i, double* %567, align 8
  store double %extract1433.i, double* %569, align 8
  store double %extract1434.i, double* %571, align 8
  store double %extract1435.i, double* %573, align 8
  store double %extract1436.i, double* %575, align 8
  store double %extract1437.i, double* %577, align 8
  store double %extract1438.i, double* %579, align 8
  %1603 = load double addrspace(3)* %162, align 16
  %temp1439.i = insertelement <16 x double> undef, double %1603, i32 0
  %vector1440.i = shufflevector <16 x double> %temp1439.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2343.i" = add nuw i64 %CurrSBIndex..4.i, 3584
  %"&pSB[currWI].offset2344.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2343.i"
  %CastToValueType2345.i = bitcast i8* %"&pSB[currWI].offset2344.i" to <16 x double>*
  %loadedValue2346.i = load <16 x double>* %CastToValueType2345.i, align 128
  %1604 = fmul <16 x double> %loadedValue2346.i, %vector1440.i
  %1605 = fadd <16 x double> %1557, %1604
  %extract1441.i = extractelement <16 x double> %1605, i32 0
  %extract1442.i = extractelement <16 x double> %1605, i32 1
  %extract1443.i = extractelement <16 x double> %1605, i32 2
  %extract1444.i = extractelement <16 x double> %1605, i32 3
  %extract1445.i = extractelement <16 x double> %1605, i32 4
  %extract1446.i = extractelement <16 x double> %1605, i32 5
  %extract1447.i = extractelement <16 x double> %1605, i32 6
  %extract1448.i = extractelement <16 x double> %1605, i32 7
  %extract1449.i = extractelement <16 x double> %1605, i32 8
  %extract1450.i = extractelement <16 x double> %1605, i32 9
  %extract1451.i = extractelement <16 x double> %1605, i32 10
  %extract1452.i = extractelement <16 x double> %1605, i32 11
  %extract1453.i = extractelement <16 x double> %1605, i32 12
  %extract1454.i = extractelement <16 x double> %1605, i32 13
  %extract1455.i = extractelement <16 x double> %1605, i32 14
  %extract1456.i = extractelement <16 x double> %1605, i32 15
  store double %extract1441.i, double* %581, align 16
  store double %extract1442.i, double* %583, align 16
  store double %extract1443.i, double* %585, align 16
  store double %extract1444.i, double* %587, align 16
  store double %extract1445.i, double* %589, align 16
  store double %extract1446.i, double* %591, align 16
  store double %extract1447.i, double* %593, align 16
  store double %extract1448.i, double* %595, align 16
  store double %extract1449.i, double* %597, align 16
  store double %extract1450.i, double* %599, align 16
  store double %extract1451.i, double* %601, align 16
  store double %extract1452.i, double* %603, align 16
  store double %extract1453.i, double* %605, align 16
  store double %extract1454.i, double* %607, align 16
  store double %extract1455.i, double* %609, align 16
  store double %extract1456.i, double* %611, align 16
  %1606 = load double addrspace(3)* %164, align 8
  %temp1457.i = insertelement <16 x double> undef, double %1606, i32 0
  %vector1458.i = shufflevector <16 x double> %temp1457.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2338.i" = add nuw i64 %CurrSBIndex..4.i, 3584
  %"&pSB[currWI].offset2339.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2338.i"
  %CastToValueType2340.i = bitcast i8* %"&pSB[currWI].offset2339.i" to <16 x double>*
  %loadedValue2341.i = load <16 x double>* %CastToValueType2340.i, align 128
  %1607 = fmul <16 x double> %loadedValue2341.i, %vector1458.i
  %1608 = fadd <16 x double> %1560, %1607
  %extract1459.i = extractelement <16 x double> %1608, i32 0
  %extract1460.i = extractelement <16 x double> %1608, i32 1
  %extract1461.i = extractelement <16 x double> %1608, i32 2
  %extract1462.i = extractelement <16 x double> %1608, i32 3
  %extract1463.i = extractelement <16 x double> %1608, i32 4
  %extract1464.i = extractelement <16 x double> %1608, i32 5
  %extract1465.i = extractelement <16 x double> %1608, i32 6
  %extract1466.i = extractelement <16 x double> %1608, i32 7
  %extract1467.i = extractelement <16 x double> %1608, i32 8
  %extract1468.i = extractelement <16 x double> %1608, i32 9
  %extract1469.i = extractelement <16 x double> %1608, i32 10
  %extract1470.i = extractelement <16 x double> %1608, i32 11
  %extract1471.i = extractelement <16 x double> %1608, i32 12
  %extract1472.i = extractelement <16 x double> %1608, i32 13
  %extract1473.i = extractelement <16 x double> %1608, i32 14
  %extract1474.i = extractelement <16 x double> %1608, i32 15
  store double %extract1459.i, double* %613, align 8
  store double %extract1460.i, double* %615, align 8
  store double %extract1461.i, double* %617, align 8
  store double %extract1462.i, double* %619, align 8
  store double %extract1463.i, double* %621, align 8
  store double %extract1464.i, double* %623, align 8
  store double %extract1465.i, double* %625, align 8
  store double %extract1466.i, double* %627, align 8
  store double %extract1467.i, double* %629, align 8
  store double %extract1468.i, double* %631, align 8
  store double %extract1469.i, double* %633, align 8
  store double %extract1470.i, double* %635, align 8
  store double %extract1471.i, double* %637, align 8
  store double %extract1472.i, double* %639, align 8
  store double %extract1473.i, double* %641, align 8
  store double %extract1474.i, double* %643, align 8
  %1609 = load double addrspace(3)* %166, align 16
  %temp1475.i = insertelement <16 x double> undef, double %1609, i32 0
  %vector1476.i = shufflevector <16 x double> %temp1475.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2333.i" = add nuw i64 %CurrSBIndex..4.i, 3584
  %"&pSB[currWI].offset2334.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2333.i"
  %CastToValueType2335.i = bitcast i8* %"&pSB[currWI].offset2334.i" to <16 x double>*
  %loadedValue2336.i = load <16 x double>* %CastToValueType2335.i, align 128
  %1610 = fmul <16 x double> %loadedValue2336.i, %vector1476.i
  %1611 = fadd <16 x double> %1563, %1610
  %extract1477.i = extractelement <16 x double> %1611, i32 0
  %extract1478.i = extractelement <16 x double> %1611, i32 1
  %extract1479.i = extractelement <16 x double> %1611, i32 2
  %extract1480.i = extractelement <16 x double> %1611, i32 3
  %extract1481.i = extractelement <16 x double> %1611, i32 4
  %extract1482.i = extractelement <16 x double> %1611, i32 5
  %extract1483.i = extractelement <16 x double> %1611, i32 6
  %extract1484.i = extractelement <16 x double> %1611, i32 7
  %extract1485.i = extractelement <16 x double> %1611, i32 8
  %extract1486.i = extractelement <16 x double> %1611, i32 9
  %extract1487.i = extractelement <16 x double> %1611, i32 10
  %extract1488.i = extractelement <16 x double> %1611, i32 11
  %extract1489.i = extractelement <16 x double> %1611, i32 12
  %extract1490.i = extractelement <16 x double> %1611, i32 13
  %extract1491.i = extractelement <16 x double> %1611, i32 14
  %extract1492.i = extractelement <16 x double> %1611, i32 15
  store double %extract1477.i, double* %645, align 16
  store double %extract1478.i, double* %647, align 16
  store double %extract1479.i, double* %649, align 16
  store double %extract1480.i, double* %651, align 16
  store double %extract1481.i, double* %653, align 16
  store double %extract1482.i, double* %655, align 16
  store double %extract1483.i, double* %657, align 16
  store double %extract1484.i, double* %659, align 16
  store double %extract1485.i, double* %661, align 16
  store double %extract1486.i, double* %663, align 16
  store double %extract1487.i, double* %665, align 16
  store double %extract1488.i, double* %667, align 16
  store double %extract1489.i, double* %669, align 16
  store double %extract1490.i, double* %671, align 16
  store double %extract1491.i, double* %673, align 16
  store double %extract1492.i, double* %675, align 16
  %1612 = load double addrspace(3)* %168, align 8
  %temp1493.i = insertelement <16 x double> undef, double %1612, i32 0
  %vector1494.i = shufflevector <16 x double> %temp1493.i, <16 x double> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)2328.i" = add nuw i64 %CurrSBIndex..4.i, 3584
  %"&pSB[currWI].offset2329.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2328.i"
  %CastToValueType2330.i = bitcast i8* %"&pSB[currWI].offset2329.i" to <16 x double>*
  %loadedValue2331.i = load <16 x double>* %CastToValueType2330.i, align 128
  %1613 = fmul <16 x double> %loadedValue2331.i, %vector1494.i
  %1614 = fadd <16 x double> %1566, %1613
  %extract1495.i = extractelement <16 x double> %1614, i32 0
  %extract1496.i = extractelement <16 x double> %1614, i32 1
  %extract1497.i = extractelement <16 x double> %1614, i32 2
  %extract1498.i = extractelement <16 x double> %1614, i32 3
  %extract1499.i = extractelement <16 x double> %1614, i32 4
  %extract1500.i = extractelement <16 x double> %1614, i32 5
  %extract1501.i = extractelement <16 x double> %1614, i32 6
  %extract1502.i = extractelement <16 x double> %1614, i32 7
  %extract1503.i = extractelement <16 x double> %1614, i32 8
  %extract1504.i = extractelement <16 x double> %1614, i32 9
  %extract1505.i = extractelement <16 x double> %1614, i32 10
  %extract1506.i = extractelement <16 x double> %1614, i32 11
  %extract1507.i = extractelement <16 x double> %1614, i32 12
  %extract1508.i = extractelement <16 x double> %1614, i32 13
  %extract1509.i = extractelement <16 x double> %1614, i32 14
  %extract1510.i = extractelement <16 x double> %1614, i32 15
  store double %extract1495.i, double* %677, align 8
  store double %extract1496.i, double* %679, align 8
  store double %extract1497.i, double* %681, align 8
  store double %extract1498.i, double* %683, align 8
  store double %extract1499.i, double* %685, align 8
  store double %extract1500.i, double* %687, align 8
  store double %extract1501.i, double* %689, align 8
  store double %extract1502.i, double* %691, align 8
  store double %extract1503.i, double* %693, align 8
  store double %extract1504.i, double* %695, align 8
  store double %extract1505.i, double* %697, align 8
  store double %extract1506.i, double* %699, align 8
  store double %extract1507.i, double* %701, align 8
  store double %extract1508.i, double* %703, align 8
  store double %extract1509.i, double* %705, align 8
  store double %extract1510.i, double* %707, align 8
  %"&(pSB[currWI].offset)1569.i" = add nuw i64 %CurrSBIndex..4.i, 1024
  %"&pSB[currWI].offset1570.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1569.i"
  %CastToValueType1571.i = bitcast i8* %"&pSB[currWI].offset1570.i" to i32*
  %loadedValue1572.i = load i32* %CastToValueType1571.i, align 4
  %tmp21.i = add i32 %tmp18.i, %loadedValue1572.i
  %temp1511.i = insertelement <16 x i32> undef, i32 %tmp21.i, i32 0
  %vector1512.i = shufflevector <16 x i32> %temp1511.i, <16 x i32> undef, <16 x i32> zeroinitializer
  %"&(pSB[currWI].offset)1561.i" = add nuw i64 %CurrSBIndex..4.i, 960
  %"&pSB[currWI].offset1562.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)1561.i"
  %CastToValueType1563.i = bitcast i8* %"&pSB[currWI].offset1562.i" to <16 x i32>*
  %loadedValue.i = load <16 x i32>* %CastToValueType1563.i, align 64
  %tmp231513.i = add <16 x i32> %vector1512.i, %loadedValue.i
  %tmp261514.i = add <16 x i32> %tmp231513.i, %vector2.i
  %tmp271515.i = sext <16 x i32> %tmp261514.i to <16 x i64>
  %"&(pSB[currWI].offset)2426.i" = add nuw i64 %CurrSBIndex..4.i, 3856
  %"&pSB[currWI].offset2427.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2426.i"
  %CastToValueType2428.i = bitcast i8* %"&pSB[currWI].offset2427.i" to [16 x double]*
  %"&(pSB[currWI].offset)2498.i" = add nuw i64 %CurrSBIndex..4.i, 3984
  %"&pSB[currWI].offset2499.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2498.i"
  %CastToValueType2500.i = bitcast i8* %"&pSB[currWI].offset2499.i" to [16 x double]*
  %"&(pSB[currWI].offset)2570.i" = add nuw i64 %CurrSBIndex..4.i, 4112
  %"&pSB[currWI].offset2571.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2570.i"
  %CastToValueType2572.i = bitcast i8* %"&pSB[currWI].offset2571.i" to [16 x double]*
  %"&(pSB[currWI].offset)2642.i" = add nuw i64 %CurrSBIndex..4.i, 4240
  %"&pSB[currWI].offset2643.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2642.i"
  %CastToValueType2644.i = bitcast i8* %"&pSB[currWI].offset2643.i" to [16 x double]*
  %"&(pSB[currWI].offset)2714.i" = add nuw i64 %CurrSBIndex..4.i, 4368
  %"&pSB[currWI].offset2715.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2714.i"
  %CastToValueType2716.i = bitcast i8* %"&pSB[currWI].offset2715.i" to [16 x double]*
  %"&(pSB[currWI].offset)2786.i" = add nuw i64 %CurrSBIndex..4.i, 4496
  %"&pSB[currWI].offset2787.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2786.i"
  %CastToValueType2788.i = bitcast i8* %"&pSB[currWI].offset2787.i" to [16 x double]*
  %"&(pSB[currWI].offset)2858.i" = add nuw i64 %CurrSBIndex..4.i, 4624
  %"&pSB[currWI].offset2859.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2858.i"
  %CastToValueType2860.i = bitcast i8* %"&pSB[currWI].offset2859.i" to [16 x double]*
  %"&(pSB[currWI].offset)2930.i" = add nuw i64 %CurrSBIndex..4.i, 4752
  %"&pSB[currWI].offset2931.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)2930.i"
  %CastToValueType2932.i = bitcast i8* %"&pSB[currWI].offset2931.i" to [16 x double]*
  %"&(pSB[currWI].offset)3002.i" = add nuw i64 %CurrSBIndex..4.i, 4880
  %"&pSB[currWI].offset3003.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3002.i"
  %CastToValueType3004.i = bitcast i8* %"&pSB[currWI].offset3003.i" to [16 x double]*
  %"&(pSB[currWI].offset)3074.i" = add nuw i64 %CurrSBIndex..4.i, 5008
  %"&pSB[currWI].offset3075.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3074.i"
  %CastToValueType3076.i = bitcast i8* %"&pSB[currWI].offset3075.i" to [16 x double]*
  %"&(pSB[currWI].offset)3146.i" = add nuw i64 %CurrSBIndex..4.i, 5136
  %"&pSB[currWI].offset3147.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3146.i"
  %CastToValueType3148.i = bitcast i8* %"&pSB[currWI].offset3147.i" to [16 x double]*
  %"&(pSB[currWI].offset)3218.i" = add nuw i64 %CurrSBIndex..4.i, 5264
  %"&pSB[currWI].offset3219.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3218.i"
  %CastToValueType3220.i = bitcast i8* %"&pSB[currWI].offset3219.i" to [16 x double]*
  %"&(pSB[currWI].offset)3290.i" = add nuw i64 %CurrSBIndex..4.i, 5392
  %"&pSB[currWI].offset3291.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3290.i"
  %CastToValueType3292.i = bitcast i8* %"&pSB[currWI].offset3291.i" to [16 x double]*
  %"&(pSB[currWI].offset)3362.i" = add nuw i64 %CurrSBIndex..4.i, 5520
  %"&pSB[currWI].offset3363.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3362.i"
  %CastToValueType3364.i = bitcast i8* %"&pSB[currWI].offset3363.i" to [16 x double]*
  %"&(pSB[currWI].offset)3434.i" = add nuw i64 %CurrSBIndex..4.i, 5648
  %"&pSB[currWI].offset3435.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3434.i"
  %CastToValueType3436.i = bitcast i8* %"&pSB[currWI].offset3435.i" to [16 x double]*
  %"&(pSB[currWI].offset)3506.i" = add nuw i64 %CurrSBIndex..4.i, 5776
  %"&pSB[currWI].offset3507.i" = getelementptr inbounds i8* %40, i64 %"&(pSB[currWI].offset)3506.i"
  %CastToValueType3508.i = bitcast i8* %"&pSB[currWI].offset3507.i" to [16 x double]*
  br label %1615

; <label>:1615                                    ; preds = %._crit_edge97.i, %SyncBB4617.i
  %vectorPHI1516.i = phi <16 x double> [ %1569, %SyncBB4617.i ], [ %temp.vect1557.i, %._crit_edge97.i ]
  %indvar.i = phi i64 [ 0, %SyncBB4617.i ], [ %indvar.next.i, %._crit_edge97.i ]
  %tmp15.i = mul i64 %tmp.i, %indvar.i
  %temp1517.i = insertelement <16 x i64> undef, i64 %tmp15.i, i32 0
  %vector1518.i = shufflevector <16 x i64> %temp1517.i, <16 x i64> undef, <16 x i32> zeroinitializer
  %tmp281519.i = add <16 x i64> %tmp271515.i, %vector1518.i
  %extract1520.i = extractelement <16 x i64> %tmp281519.i, i32 0
  %1616 = getelementptr double addrspace(1)* %13, i64 %extract1520.i
  %1617 = fmul <16 x double> %vectorPHI1516.i, %vector1537.i
  %ptrTypeCast1538.i = bitcast double addrspace(1)* %1616 to <16 x double> addrspace(1)*
  %1618 = load <16 x double> addrspace(1)* %ptrTypeCast1538.i, align 8
  %1619 = fmul <16 x double> %1618, %vector1540.i
  %1620 = fadd <16 x double> %1617, %1619
  %ptrTypeCast1541.i = bitcast double addrspace(1)* %1616 to <16 x double> addrspace(1)*
  store <16 x double> %1620, <16 x double> addrspace(1)* %ptrTypeCast1541.i, align 8
  %indvar.next.i = add i64 %indvar.i, 1
  %exitcond.i = icmp eq i64 %indvar.next.i, 16
  br i1 %exitcond.i, label %._crit_edge.i, label %._crit_edge97.i

._crit_edge97.i:                                  ; preds = %1615
  %1621 = getelementptr [16 x double]* %CastToValueType2428.i, i64 0, i64 %indvar.next.i
  %1622 = getelementptr [16 x double]* %CastToValueType2500.i, i64 0, i64 %indvar.next.i
  %1623 = getelementptr [16 x double]* %CastToValueType2572.i, i64 0, i64 %indvar.next.i
  %1624 = getelementptr [16 x double]* %CastToValueType2644.i, i64 0, i64 %indvar.next.i
  %1625 = getelementptr [16 x double]* %CastToValueType2716.i, i64 0, i64 %indvar.next.i
  %1626 = getelementptr [16 x double]* %CastToValueType2788.i, i64 0, i64 %indvar.next.i
  %1627 = getelementptr [16 x double]* %CastToValueType2860.i, i64 0, i64 %indvar.next.i
  %1628 = getelementptr [16 x double]* %CastToValueType2932.i, i64 0, i64 %indvar.next.i
  %1629 = getelementptr [16 x double]* %CastToValueType3004.i, i64 0, i64 %indvar.next.i
  %1630 = getelementptr [16 x double]* %CastToValueType3076.i, i64 0, i64 %indvar.next.i
  %1631 = getelementptr [16 x double]* %CastToValueType3148.i, i64 0, i64 %indvar.next.i
  %1632 = getelementptr [16 x double]* %CastToValueType3220.i, i64 0, i64 %indvar.next.i
  %1633 = getelementptr [16 x double]* %CastToValueType3292.i, i64 0, i64 %indvar.next.i
  %1634 = getelementptr [16 x double]* %CastToValueType3364.i, i64 0, i64 %indvar.next.i
  %1635 = getelementptr [16 x double]* %CastToValueType3436.i, i64 0, i64 %indvar.next.i
  %1636 = getelementptr [16 x double]* %CastToValueType3508.i, i64 0, i64 %indvar.next.i
  %1637 = load double* %1621, align 8
  %1638 = load double* %1622, align 8
  %1639 = load double* %1623, align 8
  %1640 = load double* %1624, align 8
  %1641 = load double* %1625, align 8
  %1642 = load double* %1626, align 8
  %1643 = load double* %1627, align 8
  %1644 = load double* %1628, align 8
  %1645 = load double* %1629, align 8
  %1646 = load double* %1630, align 8
  %1647 = load double* %1631, align 8
  %1648 = load double* %1632, align 8
  %1649 = load double* %1633, align 8
  %1650 = load double* %1634, align 8
  %1651 = load double* %1635, align 8
  %1652 = load double* %1636, align 8
  %temp.vect1542.i = insertelement <16 x double> undef, double %1637, i32 0
  %temp.vect1543.i = insertelement <16 x double> %temp.vect1542.i, double %1638, i32 1
  %temp.vect1544.i = insertelement <16 x double> %temp.vect1543.i, double %1639, i32 2
  %temp.vect1545.i = insertelement <16 x double> %temp.vect1544.i, double %1640, i32 3
  %temp.vect1546.i = insertelement <16 x double> %temp.vect1545.i, double %1641, i32 4
  %temp.vect1547.i = insertelement <16 x double> %temp.vect1546.i, double %1642, i32 5
  %temp.vect1548.i = insertelement <16 x double> %temp.vect1547.i, double %1643, i32 6
  %temp.vect1549.i = insertelement <16 x double> %temp.vect1548.i, double %1644, i32 7
  %temp.vect1550.i = insertelement <16 x double> %temp.vect1549.i, double %1645, i32 8
  %temp.vect1551.i = insertelement <16 x double> %temp.vect1550.i, double %1646, i32 9
  %temp.vect1552.i = insertelement <16 x double> %temp.vect1551.i, double %1647, i32 10
  %temp.vect1553.i = insertelement <16 x double> %temp.vect1552.i, double %1648, i32 11
  %temp.vect1554.i = insertelement <16 x double> %temp.vect1553.i, double %1649, i32 12
  %temp.vect1555.i = insertelement <16 x double> %temp.vect1554.i, double %1650, i32 13
  %temp.vect1556.i = insertelement <16 x double> %temp.vect1555.i, double %1651, i32 14
  %temp.vect1557.i = insertelement <16 x double> %temp.vect1556.i, double %1652, i32 15
  br label %1615

._crit_edge.i:                                    ; preds = %1615
  %check.WI.iter4639.i = icmp ult i64 %CurrWI..4.i, %37
  br i1 %check.WI.iter4639.i, label %thenBB4636.i, label %____Vectorized_.sgemmNT_separated_args.exit

thenBB4636.i:                                     ; preds = %._crit_edge.i
  %"CurrWI++4640.i" = add nuw i64 %CurrWI..4.i, 1
  %"loadedCurrSB+Stride4642.i" = add nuw i64 %CurrSBIndex..4.i, 12032
  br label %SyncBB4617.i

____Vectorized_.sgemmNT_separated_args.exit:      ; preds = %._crit_edge.i
  ret void
}

!opencl.kernels = !{!0, !2}
!opencl_sgemmNT_locals_anchor = !{!3}
!opencl_sgemmNN_locals_anchor = !{!4}

!0 = metadata !{void (double addrspace(1)*, i32, double addrspace(1)*, i32, double addrspace(1)*, i32, i32, double, double, i8 addrspace(3)*, %struct.WorkDim*, i64*, %struct.PaddedDimId*, %struct.PaddedDimId*, i64*, i64, i8*, i64*)* @__sgemmNT_separated_args, metadata !1, metadata !1, metadata !"", metadata !"double const __attribute__((address_space(1))) *, int, double const __attribute__((address_space(1))) *, int, double __attribute__((address_space(1))) *, int, int, double, double", metadata !"opencl_sgemmNT_locals_anchor", void (i8*)* @sgemmNT}
!1 = metadata !{i32 0, i32 0, i32 0}
!2 = metadata !{void (double addrspace(1)*, i32, double addrspace(1)*, i32, double addrspace(1)*, i32, i32, double, double, i8 addrspace(3)*, %struct.WorkDim*, i64*, %struct.PaddedDimId*, %struct.PaddedDimId*, i64*, i64, i8*, i64*)* @__sgemmNN_separated_args, metadata !1, metadata !1, metadata !"", metadata !"double const __attribute__((address_space(1))) *, int, double const __attribute__((address_space(1))) *, int, double __attribute__((address_space(1))) *, int, int, double, double", metadata !"opencl_sgemmNN_locals_anchor", void (i8*)* @sgemmNN}
!3 = metadata !{metadata !"opencl_sgemmNT_local_bs"}
!4 = metadata !{metadata !"opencl_sgemmNN_local_bs"}
