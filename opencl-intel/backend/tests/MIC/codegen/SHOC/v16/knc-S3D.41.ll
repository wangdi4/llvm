; XFAIL: win32
;
; RUN: llc < %s -mtriple=x86_64-pc-linux \
; RUN:       -march=y86-64 -mcpu=knc
;
;
; ModuleID = 'Program'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64"
target triple = "x86_64-unknown-linux-gnu"

%struct.PaddedDimId = type <{ [4 x i64] }>
%struct.WorkDim = type { i32, [3 x i64], [3 x i64], [3 x i64], [3 x i64] }

declare void @__ratt10_kernel_original(double addrspace(1)* nocapture, double addrspace(1)*, double) nounwind

declare i64 @get_global_id(i32)

declare double @_Z3logd(double)

declare double @_Z3expd(double)

declare void @____Vectorized_.ratt10_kernel_original(double addrspace(1)* nocapture, double addrspace(1)*, double) nounwind

define i1 @allOne(i1 %pred) {
entry:
  ret i1 %pred
}

define i1 @allZero(i1 %t) {
entry:
  ret i1 %t
}

declare void @dummybarrier.()

declare void @barrier(i64)

declare i8* @get_special_buffer.()

declare i64 @get_iter_count.()

declare i64 @get_new_global_id.(i32, i64)

define void @__ratt10_kernel_separated_args(double addrspace(1)* nocapture %T, double addrspace(1)* %RKLOW, double %TCONV, i8 addrspace(3)* %pLocalMem, %struct.WorkDim* %pWorkDim, i64* %pWGId, %struct.PaddedDimId* %pBaseGlbId, %struct.PaddedDimId* %pLocalIds, i64* %contextpointer, i64 %iterCount, i8* %pSpecialBuf, i64* %pCurrWI) nounwind alwaysinline {
; <label>:0
  br label %SyncBB1

SyncBB1:                                          ; preds = %0, %thenBB
  %CurrWI..0 = phi i64 [ %"CurrWI++", %thenBB ], [ 0, %0 ]
  %1 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %2 = load i64* %1, align 8
  %3 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %4 = load i64* %3, align 8
  %5 = add i64 %2, %4
  %6 = getelementptr inbounds double addrspace(1)* %T, i64 %5
  %7 = load double addrspace(1)* %6, align 8
  %8 = fmul double %7, %TCONV
  %9 = tail call double @_Z3logd(double %8) nounwind
  %10 = fmul double %9, 9.000000e-01
  %11 = fsub double 0x404523C4B7549584, %10
  %12 = fdiv double 1.000000e+00, %8
  %13 = fmul double %12, 0x408ABBBF266BA494
  %14 = fadd double %11, %13
  %15 = tail call double @_Z3expd(double %14) nounwind
  %16 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %17 = load i64* %16, align 8
  %18 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %19 = load i64* %18, align 8
  %20 = add i64 %17, %19
  %21 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %20
  store double %15, double addrspace(1)* %21, align 8
  %22 = fmul double %9, 3.420000e+00
  %23 = fsub double 0x404FE5858E49DA3F, %22
  %24 = fmul double %12, 0x40E4B9CA6DC5D639
  %25 = fsub double %23, %24
  %26 = tail call double @_Z3expd(double %25) nounwind
  %27 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %28 = load i64* %27, align 8
  %29 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %30 = load i64* %29, align 8
  %31 = add i64 %28, %30
  %32 = add i64 %31, 110592
  %33 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %32
  store double %26, double addrspace(1)* %33, align 8
  %34 = fmul double %9, 3.740000e+00
  %35 = fsub double 0x40505D9028D78F9E, %34
  %36 = fmul double %12, 0x408E71D1DB445ED5
  %37 = fsub double %35, %36
  %38 = tail call double @_Z3expd(double %37) nounwind
  %39 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %40 = load i64* %39, align 8
  %41 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %42 = load i64* %41, align 8
  %43 = add i64 %40, %42
  %44 = add i64 %43, 221184
  %45 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %44
  store double %38, double addrspace(1)* %45, align 8
  %46 = fmul double %9, 2.570000e+00
  %47 = fsub double 0x404BC7F46D24C689, %46
  %48 = fmul double %12, 0x408668AB85A4F00F
  %49 = fsub double %47, %48
  %50 = tail call double @_Z3expd(double %49) nounwind
  %51 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %52 = load i64* %51, align 8
  %53 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %54 = load i64* %53, align 8
  %55 = add i64 %52, %54
  %56 = add i64 %55, 331776
  %57 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %56
  store double %50, double addrspace(1)* %57, align 8
  %58 = fmul double %9, 3.140000e+00
  %59 = fsub double 0x404FAA9E0CC5E120, %58
  %60 = fmul double %12, 0x408357A6E9FF0CBB
  %61 = fsub double %59, %60
  %62 = tail call double @_Z3expd(double %61) nounwind
  %63 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %64 = load i64* %63, align 8
  %65 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %66 = load i64* %65, align 8
  %67 = add i64 %64, %66
  %68 = add i64 %67, 442368
  %69 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %68
  store double %62, double addrspace(1)* %69, align 8
  %70 = fmul double %9, 5.110000e+00
  %71 = fsub double 0x40533E63EE5181D3, %70
  %72 = fmul double %12, 0x40ABE4A4FF43419E
  %73 = fsub double %71, %72
  %74 = tail call double @_Z3expd(double %73) nounwind
  %75 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %76 = load i64* %75, align 8
  %77 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %78 = load i64* %77, align 8
  %79 = add i64 %76, %78
  %80 = add i64 %79, 552960
  %81 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %80
  store double %74, double addrspace(1)* %81, align 8
  %82 = fmul double %9, 4.800000e+00
  %83 = fsub double 0x4051776CB60BC028, %82
  %84 = fmul double %12, 0x40A5DBC4F3775B81
  %85 = fsub double %83, %84
  %86 = tail call double @_Z3expd(double %85) nounwind
  %87 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %88 = load i64* %87, align 8
  %89 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %90 = load i64* %89, align 8
  %91 = add i64 %88, %90
  %92 = add i64 %91, 663552
  %93 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %92
  store double %86, double addrspace(1)* %93, align 8
  %94 = fmul double %9, 4.760000e+00
  %95 = fsub double 0x4053391C5D2DD880, %94
  %96 = fmul double %12, 0x40932F6509BF9C63
  %97 = fsub double %95, %96
  %98 = tail call double @_Z3expd(double %97) nounwind
  %99 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %100 = load i64* %99, align 8
  %101 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %102 = load i64* %101, align 8
  %103 = add i64 %100, %102
  %104 = add i64 %103, 774144
  %105 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %104
  store double %98, double addrspace(1)* %105, align 8
  %106 = fmul double %9, 9.588000e+00
  %107 = fsub double 0x405BD400B0292817, %106
  %108 = fmul double %12, 2.566405e+03
  %109 = fsub double %107, %108
  %110 = tail call double @_Z3expd(double %109) nounwind
  %111 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %112 = load i64* %111, align 8
  %113 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %114 = load i64* %113, align 8
  %115 = add i64 %112, %114
  %116 = add i64 %115, 884736
  %117 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %116
  store double %110, double addrspace(1)* %117, align 8
  %118 = fmul double %9, 9.670000e+00
  %119 = fsub double 0x405CECD0A2446306, %118
  %120 = fmul double %12, 0x40A87403ED527E52
  %121 = fsub double %119, %120
  %122 = tail call double @_Z3expd(double %121) nounwind
  %123 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %124 = load i64* %123, align 8
  %125 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %126 = load i64* %125, align 8
  %127 = add i64 %124, %126
  %128 = add i64 %127, 995328
  %129 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %128
  store double %122, double addrspace(1)* %129, align 8
  %130 = fmul double %9, 6.400000e-01
  %131 = fsub double 0x4041B7A9A2FC18EB, %130
  %132 = fmul double %12, 0x40D86C7793DD97F6
  %133 = fsub double %131, %132
  %134 = tail call double @_Z3expd(double %133) nounwind
  %135 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %136 = load i64* %135, align 8
  %137 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %138 = load i64* %137, align 8
  %139 = add i64 %136, %138
  %140 = add i64 %139, 1105920
  %141 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %140
  store double %134, double addrspace(1)* %141, align 8
  %142 = fmul double %9, 3.400000e+00
  %143 = fsub double 0x404F8E4E054690DE, %142
  %144 = fmul double %12, 0x40D197A0CE703AFB
  %145 = fsub double %143, %144
  %146 = tail call double @_Z3expd(double %145) nounwind
  %147 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %148 = load i64* %147, align 8
  %149 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %150 = load i64* %149, align 8
  %151 = add i64 %148, %150
  %152 = add i64 %151, 1216512
  %153 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %152
  store double %146, double addrspace(1)* %153, align 8
  %154 = fmul double %9, 7.640000e+00
  %155 = fsub double 0x4057EF6C60E6CAA5, %154
  %156 = fmul double %12, 0x40B76447414A4D2B
  %157 = fsub double %155, %156
  %158 = tail call double @_Z3expd(double %157) nounwind
  %159 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %160 = load i64* %159, align 8
  %161 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %162 = load i64* %161, align 8
  %163 = add i64 %160, %162
  %164 = add i64 %163, 1327104
  %165 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %164
  store double %158, double addrspace(1)* %165, align 8
  %166 = fmul double %9, 3.860000e+00
  %167 = fsub double 0x40515A7F62B6AE7D, %166
  %168 = fmul double %12, 0x409A1AB7A4E7AB75
  %169 = fsub double %167, %168
  %170 = tail call double @_Z3expd(double %169) nounwind
  %171 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %172 = load i64* %171, align 8
  %173 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %174 = load i64* %173, align 8
  %175 = add i64 %172, %174
  %176 = add i64 %175, 1437696
  %177 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %176
  store double %170, double addrspace(1)* %177, align 8
  %178 = fmul double %9, 1.194000e+01
  %179 = fsub double 0x4060E00CB07D0AEE, %178
  %180 = fmul double %12, 0x40B3345381D7DBF5
  %181 = fsub double %179, %180
  %182 = tail call double @_Z3expd(double %181) nounwind
  %183 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %184 = load i64* %183, align 8
  %185 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %186 = load i64* %185, align 8
  %187 = add i64 %184, %186
  %188 = add i64 %187, 1548288
  %189 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %188
  store double %182, double addrspace(1)* %189, align 8
  %190 = fmul double %9, 7.297000e+00
  %191 = fsub double 0x4056DCC43C6FF2D7, %190
  %192 = fmul double %12, 0x40A27A3C970F7B9E
  %193 = fsub double %191, %192
  %194 = tail call double @_Z3expd(double %193) nounwind
  %195 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %196 = load i64* %195, align 8
  %197 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %198 = load i64* %197, align 8
  %199 = add i64 %196, %198
  %200 = add i64 %199, 1658880
  %201 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %200
  store double %194, double addrspace(1)* %201, align 8
  %202 = fmul double %9, 9.310000e+00
  %203 = fsub double 0x405D44CF80DC3372, %202
  %204 = fmul double %12, 0x40E88966ECBFB15B
  %205 = fsub double %203, %204
  %206 = tail call double @_Z3expd(double %205) nounwind
  %207 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %208 = load i64* %207, align 8
  %209 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %210 = load i64* %209, align 8
  %211 = add i64 %208, %210
  %212 = add i64 %211, 1769472
  %213 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %212
  store double %206, double addrspace(1)* %213, align 8
  %214 = fmul double %9, 7.620000e+00
  %215 = fsub double 0x405839046E8F29D4, %214
  %216 = fmul double %12, 0x40AB66D72085B185
  %217 = fsub double %215, %216
  %218 = tail call double @_Z3expd(double %217) nounwind
  %219 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %220 = load i64* %219, align 8
  %221 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %222 = load i64* %221, align 8
  %223 = add i64 %220, %222
  %224 = add i64 %223, 1880064
  %225 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %224
  store double %218, double addrspace(1)* %225, align 8
  %226 = fmul double %9, 7.080000e+00
  %227 = fsub double 0x4057C6061E92923E, %226
  %228 = fmul double %12, 0x40AA4801C044284E
  %229 = fsub double %227, %228
  %230 = tail call double @_Z3expd(double %229) nounwind
  %231 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %232 = load i64* %231, align 8
  %233 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %234 = load i64* %233, align 8
  %235 = add i64 %232, %234
  %236 = add i64 %235, 1990656
  %237 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %236
  store double %230, double addrspace(1)* %237, align 8
  %238 = fmul double %9, 1.200000e+01
  %239 = fsub double 0x40614E16D0917D6B, %238
  %240 = fmul double %12, 0x40A776315F45E0B5
  %241 = fsub double %239, %240
  %242 = tail call double @_Z3expd(double %241) nounwind
  %243 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %244 = load i64* %243, align 8
  %245 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %246 = load i64* %245, align 8
  %247 = add i64 %244, %246
  %248 = add i64 %247, 2101248
  %249 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %248
  store double %242, double addrspace(1)* %249, align 8
  %250 = fmul double %9, 6.660000e+00
  %251 = fsub double 0x40565546441C8F83, %250
  %252 = fmul double %12, 0x40AB850888F861A6
  %253 = fsub double %251, %252
  %254 = tail call double @_Z3expd(double %253) nounwind
  %255 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %256 = load i64* %255, align 8
  %257 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %258 = load i64* %257, align 8
  %259 = add i64 %256, %258
  %260 = add i64 %259, 2211840
  %261 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %260
  store double %254, double addrspace(1)* %261, align 8
  %check.WI.iter = icmp ult i64 %CurrWI..0, %iterCount
  br i1 %check.WI.iter, label %thenBB, label %SyncBB

thenBB:                                           ; preds = %SyncBB1
  %"CurrWI++" = add nuw i64 %CurrWI..0, 1
  br label %SyncBB1

SyncBB:                                           ; preds = %SyncBB1
  ret void
}

define void @____Vectorized_.ratt10_kernel_separated_args(double addrspace(1)* nocapture %T, double addrspace(1)* %RKLOW, double %TCONV, i8 addrspace(3)* %pLocalMem, %struct.WorkDim* %pWorkDim, i64* %pWGId, %struct.PaddedDimId* %pBaseGlbId, %struct.PaddedDimId* %pLocalIds, i64* %contextpointer, i64 %iterCount, i8* %pSpecialBuf, i64* %pCurrWI) nounwind alwaysinline {
FirstBB:
  %temp = insertelement <16 x double> undef, double %TCONV, i32 0
  %vector = shufflevector <16 x double> %temp, <16 x double> undef, <16 x i32> zeroinitializer
  br label %SyncBB

SyncBB:                                           ; preds = %thenBB, %FirstBB
  %CurrWI..0 = phi i64 [ 0, %FirstBB ], [ %"CurrWI++", %thenBB ]
  %0 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %1 = load i64* %0, align 8
  %2 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %3 = load i64* %2, align 8
  %4 = add i64 %1, %3
  %5 = getelementptr inbounds double addrspace(1)* %T, i64 %4
  %ptrTypeCast = bitcast double addrspace(1)* %5 to <16 x double> addrspace(1)*
  %6 = load <16 x double> addrspace(1)* %ptrTypeCast, align 8
  %7 = fmul <16 x double> %6, %vector
  %extract16 = extractelement <16 x double> %7, i32 0
  %extract17 = extractelement <16 x double> %7, i32 1
  %extract18 = extractelement <16 x double> %7, i32 2
  %extract19 = extractelement <16 x double> %7, i32 3
  %extract20 = extractelement <16 x double> %7, i32 4
  %extract21 = extractelement <16 x double> %7, i32 5
  %extract22 = extractelement <16 x double> %7, i32 6
  %extract23 = extractelement <16 x double> %7, i32 7
  %extract24 = extractelement <16 x double> %7, i32 8
  %extract25 = extractelement <16 x double> %7, i32 9
  %extract26 = extractelement <16 x double> %7, i32 10
  %extract27 = extractelement <16 x double> %7, i32 11
  %extract28 = extractelement <16 x double> %7, i32 12
  %extract29 = extractelement <16 x double> %7, i32 13
  %extract30 = extractelement <16 x double> %7, i32 14
  %extract31 = extractelement <16 x double> %7, i32 15
  %8 = tail call double @_Z3logd(double %extract16) nounwind
  %9 = tail call double @_Z3logd(double %extract17) nounwind
  %10 = tail call double @_Z3logd(double %extract18) nounwind
  %11 = tail call double @_Z3logd(double %extract19) nounwind
  %12 = tail call double @_Z3logd(double %extract20) nounwind
  %13 = tail call double @_Z3logd(double %extract21) nounwind
  %14 = tail call double @_Z3logd(double %extract22) nounwind
  %15 = tail call double @_Z3logd(double %extract23) nounwind
  %16 = tail call double @_Z3logd(double %extract24) nounwind
  %17 = tail call double @_Z3logd(double %extract25) nounwind
  %18 = tail call double @_Z3logd(double %extract26) nounwind
  %19 = tail call double @_Z3logd(double %extract27) nounwind
  %20 = tail call double @_Z3logd(double %extract28) nounwind
  %21 = tail call double @_Z3logd(double %extract29) nounwind
  %22 = tail call double @_Z3logd(double %extract30) nounwind
  %23 = tail call double @_Z3logd(double %extract31) nounwind
  %temp.vect = insertelement <16 x double> undef, double %8, i32 0
  %temp.vect32 = insertelement <16 x double> %temp.vect, double %9, i32 1
  %temp.vect33 = insertelement <16 x double> %temp.vect32, double %10, i32 2
  %temp.vect34 = insertelement <16 x double> %temp.vect33, double %11, i32 3
  %temp.vect35 = insertelement <16 x double> %temp.vect34, double %12, i32 4
  %temp.vect36 = insertelement <16 x double> %temp.vect35, double %13, i32 5
  %temp.vect37 = insertelement <16 x double> %temp.vect36, double %14, i32 6
  %temp.vect38 = insertelement <16 x double> %temp.vect37, double %15, i32 7
  %temp.vect39 = insertelement <16 x double> %temp.vect38, double %16, i32 8
  %temp.vect40 = insertelement <16 x double> %temp.vect39, double %17, i32 9
  %temp.vect41 = insertelement <16 x double> %temp.vect40, double %18, i32 10
  %temp.vect42 = insertelement <16 x double> %temp.vect41, double %19, i32 11
  %temp.vect43 = insertelement <16 x double> %temp.vect42, double %20, i32 12
  %temp.vect44 = insertelement <16 x double> %temp.vect43, double %21, i32 13
  %temp.vect45 = insertelement <16 x double> %temp.vect44, double %22, i32 14
  %temp.vect46 = insertelement <16 x double> %temp.vect45, double %23, i32 15
  %24 = fmul <16 x double> %temp.vect46, <double 9.000000e-01, double 9.000000e-01, double 9.000000e-01, double 9.000000e-01, double 9.000000e-01, double 9.000000e-01, double 9.000000e-01, double 9.000000e-01, double 9.000000e-01, double 9.000000e-01, double 9.000000e-01, double 9.000000e-01, double 9.000000e-01, double 9.000000e-01, double 9.000000e-01, double 9.000000e-01>
  %25 = fsub <16 x double> <double 0x404523C4B7549584, double 0x404523C4B7549584, double 0x404523C4B7549584, double 0x404523C4B7549584, double 0x404523C4B7549584, double 0x404523C4B7549584, double 0x404523C4B7549584, double 0x404523C4B7549584, double 0x404523C4B7549584, double 0x404523C4B7549584, double 0x404523C4B7549584, double 0x404523C4B7549584, double 0x404523C4B7549584, double 0x404523C4B7549584, double 0x404523C4B7549584, double 0x404523C4B7549584>, %24
  %26 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %7
  %27 = fmul <16 x double> %26, <double 0x408ABBBF266BA494, double 0x408ABBBF266BA494, double 0x408ABBBF266BA494, double 0x408ABBBF266BA494, double 0x408ABBBF266BA494, double 0x408ABBBF266BA494, double 0x408ABBBF266BA494, double 0x408ABBBF266BA494, double 0x408ABBBF266BA494, double 0x408ABBBF266BA494, double 0x408ABBBF266BA494, double 0x408ABBBF266BA494, double 0x408ABBBF266BA494, double 0x408ABBBF266BA494, double 0x408ABBBF266BA494, double 0x408ABBBF266BA494>
  %28 = fadd <16 x double> %25, %27
  %extract47 = extractelement <16 x double> %28, i32 0
  %extract48 = extractelement <16 x double> %28, i32 1
  %extract49 = extractelement <16 x double> %28, i32 2
  %extract50 = extractelement <16 x double> %28, i32 3
  %extract51 = extractelement <16 x double> %28, i32 4
  %extract52 = extractelement <16 x double> %28, i32 5
  %extract53 = extractelement <16 x double> %28, i32 6
  %extract54 = extractelement <16 x double> %28, i32 7
  %extract55 = extractelement <16 x double> %28, i32 8
  %extract56 = extractelement <16 x double> %28, i32 9
  %extract57 = extractelement <16 x double> %28, i32 10
  %extract58 = extractelement <16 x double> %28, i32 11
  %extract59 = extractelement <16 x double> %28, i32 12
  %extract60 = extractelement <16 x double> %28, i32 13
  %extract61 = extractelement <16 x double> %28, i32 14
  %extract62 = extractelement <16 x double> %28, i32 15
  %29 = tail call double @_Z3expd(double %extract47) nounwind
  %30 = tail call double @_Z3expd(double %extract48) nounwind
  %31 = tail call double @_Z3expd(double %extract49) nounwind
  %32 = tail call double @_Z3expd(double %extract50) nounwind
  %33 = tail call double @_Z3expd(double %extract51) nounwind
  %34 = tail call double @_Z3expd(double %extract52) nounwind
  %35 = tail call double @_Z3expd(double %extract53) nounwind
  %36 = tail call double @_Z3expd(double %extract54) nounwind
  %37 = tail call double @_Z3expd(double %extract55) nounwind
  %38 = tail call double @_Z3expd(double %extract56) nounwind
  %39 = tail call double @_Z3expd(double %extract57) nounwind
  %40 = tail call double @_Z3expd(double %extract58) nounwind
  %41 = tail call double @_Z3expd(double %extract59) nounwind
  %42 = tail call double @_Z3expd(double %extract60) nounwind
  %43 = tail call double @_Z3expd(double %extract61) nounwind
  %44 = tail call double @_Z3expd(double %extract62) nounwind
  %temp.vect82 = insertelement <16 x double> undef, double %29, i32 0
  %temp.vect83 = insertelement <16 x double> %temp.vect82, double %30, i32 1
  %temp.vect84 = insertelement <16 x double> %temp.vect83, double %31, i32 2
  %temp.vect85 = insertelement <16 x double> %temp.vect84, double %32, i32 3
  %temp.vect86 = insertelement <16 x double> %temp.vect85, double %33, i32 4
  %temp.vect87 = insertelement <16 x double> %temp.vect86, double %34, i32 5
  %temp.vect88 = insertelement <16 x double> %temp.vect87, double %35, i32 6
  %temp.vect89 = insertelement <16 x double> %temp.vect88, double %36, i32 7
  %temp.vect90 = insertelement <16 x double> %temp.vect89, double %37, i32 8
  %temp.vect91 = insertelement <16 x double> %temp.vect90, double %38, i32 9
  %temp.vect92 = insertelement <16 x double> %temp.vect91, double %39, i32 10
  %temp.vect93 = insertelement <16 x double> %temp.vect92, double %40, i32 11
  %temp.vect94 = insertelement <16 x double> %temp.vect93, double %41, i32 12
  %temp.vect95 = insertelement <16 x double> %temp.vect94, double %42, i32 13
  %temp.vect96 = insertelement <16 x double> %temp.vect95, double %43, i32 14
  %temp.vect97 = insertelement <16 x double> %temp.vect96, double %44, i32 15
  %45 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %46 = load i64* %45, align 8
  %47 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %48 = load i64* %47, align 8
  %49 = add i64 %46, %48
  %50 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %49
  %ptrTypeCast81 = bitcast double addrspace(1)* %50 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect97, <16 x double> addrspace(1)* %ptrTypeCast81, align 8
  %51 = fmul <16 x double> %temp.vect46, <double 3.420000e+00, double 3.420000e+00, double 3.420000e+00, double 3.420000e+00, double 3.420000e+00, double 3.420000e+00, double 3.420000e+00, double 3.420000e+00, double 3.420000e+00, double 3.420000e+00, double 3.420000e+00, double 3.420000e+00, double 3.420000e+00, double 3.420000e+00, double 3.420000e+00, double 3.420000e+00>
  %52 = fsub <16 x double> <double 0x404FE5858E49DA3F, double 0x404FE5858E49DA3F, double 0x404FE5858E49DA3F, double 0x404FE5858E49DA3F, double 0x404FE5858E49DA3F, double 0x404FE5858E49DA3F, double 0x404FE5858E49DA3F, double 0x404FE5858E49DA3F, double 0x404FE5858E49DA3F, double 0x404FE5858E49DA3F, double 0x404FE5858E49DA3F, double 0x404FE5858E49DA3F, double 0x404FE5858E49DA3F, double 0x404FE5858E49DA3F, double 0x404FE5858E49DA3F, double 0x404FE5858E49DA3F>, %51
  %53 = fmul <16 x double> %26, <double 0x40E4B9CA6DC5D639, double 0x40E4B9CA6DC5D639, double 0x40E4B9CA6DC5D639, double 0x40E4B9CA6DC5D639, double 0x40E4B9CA6DC5D639, double 0x40E4B9CA6DC5D639, double 0x40E4B9CA6DC5D639, double 0x40E4B9CA6DC5D639, double 0x40E4B9CA6DC5D639, double 0x40E4B9CA6DC5D639, double 0x40E4B9CA6DC5D639, double 0x40E4B9CA6DC5D639, double 0x40E4B9CA6DC5D639, double 0x40E4B9CA6DC5D639, double 0x40E4B9CA6DC5D639, double 0x40E4B9CA6DC5D639>
  %54 = fsub <16 x double> %52, %53
  %extract98 = extractelement <16 x double> %54, i32 0
  %extract99 = extractelement <16 x double> %54, i32 1
  %extract100 = extractelement <16 x double> %54, i32 2
  %extract101 = extractelement <16 x double> %54, i32 3
  %extract102 = extractelement <16 x double> %54, i32 4
  %extract103 = extractelement <16 x double> %54, i32 5
  %extract104 = extractelement <16 x double> %54, i32 6
  %extract105 = extractelement <16 x double> %54, i32 7
  %extract106 = extractelement <16 x double> %54, i32 8
  %extract107 = extractelement <16 x double> %54, i32 9
  %extract108 = extractelement <16 x double> %54, i32 10
  %extract109 = extractelement <16 x double> %54, i32 11
  %extract110 = extractelement <16 x double> %54, i32 12
  %extract111 = extractelement <16 x double> %54, i32 13
  %extract112 = extractelement <16 x double> %54, i32 14
  %extract113 = extractelement <16 x double> %54, i32 15
  %55 = tail call double @_Z3expd(double %extract98) nounwind
  %56 = tail call double @_Z3expd(double %extract99) nounwind
  %57 = tail call double @_Z3expd(double %extract100) nounwind
  %58 = tail call double @_Z3expd(double %extract101) nounwind
  %59 = tail call double @_Z3expd(double %extract102) nounwind
  %60 = tail call double @_Z3expd(double %extract103) nounwind
  %61 = tail call double @_Z3expd(double %extract104) nounwind
  %62 = tail call double @_Z3expd(double %extract105) nounwind
  %63 = tail call double @_Z3expd(double %extract106) nounwind
  %64 = tail call double @_Z3expd(double %extract107) nounwind
  %65 = tail call double @_Z3expd(double %extract108) nounwind
  %66 = tail call double @_Z3expd(double %extract109) nounwind
  %67 = tail call double @_Z3expd(double %extract110) nounwind
  %68 = tail call double @_Z3expd(double %extract111) nounwind
  %69 = tail call double @_Z3expd(double %extract112) nounwind
  %70 = tail call double @_Z3expd(double %extract113) nounwind
  %temp.vect133 = insertelement <16 x double> undef, double %55, i32 0
  %temp.vect134 = insertelement <16 x double> %temp.vect133, double %56, i32 1
  %temp.vect135 = insertelement <16 x double> %temp.vect134, double %57, i32 2
  %temp.vect136 = insertelement <16 x double> %temp.vect135, double %58, i32 3
  %temp.vect137 = insertelement <16 x double> %temp.vect136, double %59, i32 4
  %temp.vect138 = insertelement <16 x double> %temp.vect137, double %60, i32 5
  %temp.vect139 = insertelement <16 x double> %temp.vect138, double %61, i32 6
  %temp.vect140 = insertelement <16 x double> %temp.vect139, double %62, i32 7
  %temp.vect141 = insertelement <16 x double> %temp.vect140, double %63, i32 8
  %temp.vect142 = insertelement <16 x double> %temp.vect141, double %64, i32 9
  %temp.vect143 = insertelement <16 x double> %temp.vect142, double %65, i32 10
  %temp.vect144 = insertelement <16 x double> %temp.vect143, double %66, i32 11
  %temp.vect145 = insertelement <16 x double> %temp.vect144, double %67, i32 12
  %temp.vect146 = insertelement <16 x double> %temp.vect145, double %68, i32 13
  %temp.vect147 = insertelement <16 x double> %temp.vect146, double %69, i32 14
  %temp.vect148 = insertelement <16 x double> %temp.vect147, double %70, i32 15
  %71 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %72 = load i64* %71, align 8
  %73 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %74 = load i64* %73, align 8
  %75 = add i64 %72, %74
  %extract116 = add i64 %75, 110592
  %76 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %extract116
  %ptrTypeCast132 = bitcast double addrspace(1)* %76 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect148, <16 x double> addrspace(1)* %ptrTypeCast132, align 8
  %77 = fmul <16 x double> %temp.vect46, <double 3.740000e+00, double 3.740000e+00, double 3.740000e+00, double 3.740000e+00, double 3.740000e+00, double 3.740000e+00, double 3.740000e+00, double 3.740000e+00, double 3.740000e+00, double 3.740000e+00, double 3.740000e+00, double 3.740000e+00, double 3.740000e+00, double 3.740000e+00, double 3.740000e+00, double 3.740000e+00>
  %78 = fsub <16 x double> <double 0x40505D9028D78F9E, double 0x40505D9028D78F9E, double 0x40505D9028D78F9E, double 0x40505D9028D78F9E, double 0x40505D9028D78F9E, double 0x40505D9028D78F9E, double 0x40505D9028D78F9E, double 0x40505D9028D78F9E, double 0x40505D9028D78F9E, double 0x40505D9028D78F9E, double 0x40505D9028D78F9E, double 0x40505D9028D78F9E, double 0x40505D9028D78F9E, double 0x40505D9028D78F9E, double 0x40505D9028D78F9E, double 0x40505D9028D78F9E>, %77
  %79 = fmul <16 x double> %26, <double 0x408E71D1DB445ED5, double 0x408E71D1DB445ED5, double 0x408E71D1DB445ED5, double 0x408E71D1DB445ED5, double 0x408E71D1DB445ED5, double 0x408E71D1DB445ED5, double 0x408E71D1DB445ED5, double 0x408E71D1DB445ED5, double 0x408E71D1DB445ED5, double 0x408E71D1DB445ED5, double 0x408E71D1DB445ED5, double 0x408E71D1DB445ED5, double 0x408E71D1DB445ED5, double 0x408E71D1DB445ED5, double 0x408E71D1DB445ED5, double 0x408E71D1DB445ED5>
  %80 = fsub <16 x double> %78, %79
  %extract149 = extractelement <16 x double> %80, i32 0
  %extract150 = extractelement <16 x double> %80, i32 1
  %extract151 = extractelement <16 x double> %80, i32 2
  %extract152 = extractelement <16 x double> %80, i32 3
  %extract153 = extractelement <16 x double> %80, i32 4
  %extract154 = extractelement <16 x double> %80, i32 5
  %extract155 = extractelement <16 x double> %80, i32 6
  %extract156 = extractelement <16 x double> %80, i32 7
  %extract157 = extractelement <16 x double> %80, i32 8
  %extract158 = extractelement <16 x double> %80, i32 9
  %extract159 = extractelement <16 x double> %80, i32 10
  %extract160 = extractelement <16 x double> %80, i32 11
  %extract161 = extractelement <16 x double> %80, i32 12
  %extract162 = extractelement <16 x double> %80, i32 13
  %extract163 = extractelement <16 x double> %80, i32 14
  %extract164 = extractelement <16 x double> %80, i32 15
  %81 = tail call double @_Z3expd(double %extract149) nounwind
  %82 = tail call double @_Z3expd(double %extract150) nounwind
  %83 = tail call double @_Z3expd(double %extract151) nounwind
  %84 = tail call double @_Z3expd(double %extract152) nounwind
  %85 = tail call double @_Z3expd(double %extract153) nounwind
  %86 = tail call double @_Z3expd(double %extract154) nounwind
  %87 = tail call double @_Z3expd(double %extract155) nounwind
  %88 = tail call double @_Z3expd(double %extract156) nounwind
  %89 = tail call double @_Z3expd(double %extract157) nounwind
  %90 = tail call double @_Z3expd(double %extract158) nounwind
  %91 = tail call double @_Z3expd(double %extract159) nounwind
  %92 = tail call double @_Z3expd(double %extract160) nounwind
  %93 = tail call double @_Z3expd(double %extract161) nounwind
  %94 = tail call double @_Z3expd(double %extract162) nounwind
  %95 = tail call double @_Z3expd(double %extract163) nounwind
  %96 = tail call double @_Z3expd(double %extract164) nounwind
  %temp.vect184 = insertelement <16 x double> undef, double %81, i32 0
  %temp.vect185 = insertelement <16 x double> %temp.vect184, double %82, i32 1
  %temp.vect186 = insertelement <16 x double> %temp.vect185, double %83, i32 2
  %temp.vect187 = insertelement <16 x double> %temp.vect186, double %84, i32 3
  %temp.vect188 = insertelement <16 x double> %temp.vect187, double %85, i32 4
  %temp.vect189 = insertelement <16 x double> %temp.vect188, double %86, i32 5
  %temp.vect190 = insertelement <16 x double> %temp.vect189, double %87, i32 6
  %temp.vect191 = insertelement <16 x double> %temp.vect190, double %88, i32 7
  %temp.vect192 = insertelement <16 x double> %temp.vect191, double %89, i32 8
  %temp.vect193 = insertelement <16 x double> %temp.vect192, double %90, i32 9
  %temp.vect194 = insertelement <16 x double> %temp.vect193, double %91, i32 10
  %temp.vect195 = insertelement <16 x double> %temp.vect194, double %92, i32 11
  %temp.vect196 = insertelement <16 x double> %temp.vect195, double %93, i32 12
  %temp.vect197 = insertelement <16 x double> %temp.vect196, double %94, i32 13
  %temp.vect198 = insertelement <16 x double> %temp.vect197, double %95, i32 14
  %temp.vect199 = insertelement <16 x double> %temp.vect198, double %96, i32 15
  %97 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %98 = load i64* %97, align 8
  %99 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %100 = load i64* %99, align 8
  %101 = add i64 %98, %100
  %extract167 = add i64 %101, 221184
  %102 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %extract167
  %ptrTypeCast183 = bitcast double addrspace(1)* %102 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect199, <16 x double> addrspace(1)* %ptrTypeCast183, align 8
  %103 = fmul <16 x double> %temp.vect46, <double 2.570000e+00, double 2.570000e+00, double 2.570000e+00, double 2.570000e+00, double 2.570000e+00, double 2.570000e+00, double 2.570000e+00, double 2.570000e+00, double 2.570000e+00, double 2.570000e+00, double 2.570000e+00, double 2.570000e+00, double 2.570000e+00, double 2.570000e+00, double 2.570000e+00, double 2.570000e+00>
  %104 = fsub <16 x double> <double 0x404BC7F46D24C689, double 0x404BC7F46D24C689, double 0x404BC7F46D24C689, double 0x404BC7F46D24C689, double 0x404BC7F46D24C689, double 0x404BC7F46D24C689, double 0x404BC7F46D24C689, double 0x404BC7F46D24C689, double 0x404BC7F46D24C689, double 0x404BC7F46D24C689, double 0x404BC7F46D24C689, double 0x404BC7F46D24C689, double 0x404BC7F46D24C689, double 0x404BC7F46D24C689, double 0x404BC7F46D24C689, double 0x404BC7F46D24C689>, %103
  %105 = fmul <16 x double> %26, <double 0x408668AB85A4F00F, double 0x408668AB85A4F00F, double 0x408668AB85A4F00F, double 0x408668AB85A4F00F, double 0x408668AB85A4F00F, double 0x408668AB85A4F00F, double 0x408668AB85A4F00F, double 0x408668AB85A4F00F, double 0x408668AB85A4F00F, double 0x408668AB85A4F00F, double 0x408668AB85A4F00F, double 0x408668AB85A4F00F, double 0x408668AB85A4F00F, double 0x408668AB85A4F00F, double 0x408668AB85A4F00F, double 0x408668AB85A4F00F>
  %106 = fsub <16 x double> %104, %105
  %extract200 = extractelement <16 x double> %106, i32 0
  %extract201 = extractelement <16 x double> %106, i32 1
  %extract202 = extractelement <16 x double> %106, i32 2
  %extract203 = extractelement <16 x double> %106, i32 3
  %extract204 = extractelement <16 x double> %106, i32 4
  %extract205 = extractelement <16 x double> %106, i32 5
  %extract206 = extractelement <16 x double> %106, i32 6
  %extract207 = extractelement <16 x double> %106, i32 7
  %extract208 = extractelement <16 x double> %106, i32 8
  %extract209 = extractelement <16 x double> %106, i32 9
  %extract210 = extractelement <16 x double> %106, i32 10
  %extract211 = extractelement <16 x double> %106, i32 11
  %extract212 = extractelement <16 x double> %106, i32 12
  %extract213 = extractelement <16 x double> %106, i32 13
  %extract214 = extractelement <16 x double> %106, i32 14
  %extract215 = extractelement <16 x double> %106, i32 15
  %107 = tail call double @_Z3expd(double %extract200) nounwind
  %108 = tail call double @_Z3expd(double %extract201) nounwind
  %109 = tail call double @_Z3expd(double %extract202) nounwind
  %110 = tail call double @_Z3expd(double %extract203) nounwind
  %111 = tail call double @_Z3expd(double %extract204) nounwind
  %112 = tail call double @_Z3expd(double %extract205) nounwind
  %113 = tail call double @_Z3expd(double %extract206) nounwind
  %114 = tail call double @_Z3expd(double %extract207) nounwind
  %115 = tail call double @_Z3expd(double %extract208) nounwind
  %116 = tail call double @_Z3expd(double %extract209) nounwind
  %117 = tail call double @_Z3expd(double %extract210) nounwind
  %118 = tail call double @_Z3expd(double %extract211) nounwind
  %119 = tail call double @_Z3expd(double %extract212) nounwind
  %120 = tail call double @_Z3expd(double %extract213) nounwind
  %121 = tail call double @_Z3expd(double %extract214) nounwind
  %122 = tail call double @_Z3expd(double %extract215) nounwind
  %temp.vect235 = insertelement <16 x double> undef, double %107, i32 0
  %temp.vect236 = insertelement <16 x double> %temp.vect235, double %108, i32 1
  %temp.vect237 = insertelement <16 x double> %temp.vect236, double %109, i32 2
  %temp.vect238 = insertelement <16 x double> %temp.vect237, double %110, i32 3
  %temp.vect239 = insertelement <16 x double> %temp.vect238, double %111, i32 4
  %temp.vect240 = insertelement <16 x double> %temp.vect239, double %112, i32 5
  %temp.vect241 = insertelement <16 x double> %temp.vect240, double %113, i32 6
  %temp.vect242 = insertelement <16 x double> %temp.vect241, double %114, i32 7
  %temp.vect243 = insertelement <16 x double> %temp.vect242, double %115, i32 8
  %temp.vect244 = insertelement <16 x double> %temp.vect243, double %116, i32 9
  %temp.vect245 = insertelement <16 x double> %temp.vect244, double %117, i32 10
  %temp.vect246 = insertelement <16 x double> %temp.vect245, double %118, i32 11
  %temp.vect247 = insertelement <16 x double> %temp.vect246, double %119, i32 12
  %temp.vect248 = insertelement <16 x double> %temp.vect247, double %120, i32 13
  %temp.vect249 = insertelement <16 x double> %temp.vect248, double %121, i32 14
  %temp.vect250 = insertelement <16 x double> %temp.vect249, double %122, i32 15
  %123 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %124 = load i64* %123, align 8
  %125 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %126 = load i64* %125, align 8
  %127 = add i64 %124, %126
  %extract218 = add i64 %127, 331776
  %128 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %extract218
  %ptrTypeCast234 = bitcast double addrspace(1)* %128 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect250, <16 x double> addrspace(1)* %ptrTypeCast234, align 8
  %129 = fmul <16 x double> %temp.vect46, <double 3.140000e+00, double 3.140000e+00, double 3.140000e+00, double 3.140000e+00, double 3.140000e+00, double 3.140000e+00, double 3.140000e+00, double 3.140000e+00, double 3.140000e+00, double 3.140000e+00, double 3.140000e+00, double 3.140000e+00, double 3.140000e+00, double 3.140000e+00, double 3.140000e+00, double 3.140000e+00>
  %130 = fsub <16 x double> <double 0x404FAA9E0CC5E120, double 0x404FAA9E0CC5E120, double 0x404FAA9E0CC5E120, double 0x404FAA9E0CC5E120, double 0x404FAA9E0CC5E120, double 0x404FAA9E0CC5E120, double 0x404FAA9E0CC5E120, double 0x404FAA9E0CC5E120, double 0x404FAA9E0CC5E120, double 0x404FAA9E0CC5E120, double 0x404FAA9E0CC5E120, double 0x404FAA9E0CC5E120, double 0x404FAA9E0CC5E120, double 0x404FAA9E0CC5E120, double 0x404FAA9E0CC5E120, double 0x404FAA9E0CC5E120>, %129
  %131 = fmul <16 x double> %26, <double 0x408357A6E9FF0CBB, double 0x408357A6E9FF0CBB, double 0x408357A6E9FF0CBB, double 0x408357A6E9FF0CBB, double 0x408357A6E9FF0CBB, double 0x408357A6E9FF0CBB, double 0x408357A6E9FF0CBB, double 0x408357A6E9FF0CBB, double 0x408357A6E9FF0CBB, double 0x408357A6E9FF0CBB, double 0x408357A6E9FF0CBB, double 0x408357A6E9FF0CBB, double 0x408357A6E9FF0CBB, double 0x408357A6E9FF0CBB, double 0x408357A6E9FF0CBB, double 0x408357A6E9FF0CBB>
  %132 = fsub <16 x double> %130, %131
  %extract251 = extractelement <16 x double> %132, i32 0
  %extract252 = extractelement <16 x double> %132, i32 1
  %extract253 = extractelement <16 x double> %132, i32 2
  %extract254 = extractelement <16 x double> %132, i32 3
  %extract255 = extractelement <16 x double> %132, i32 4
  %extract256 = extractelement <16 x double> %132, i32 5
  %extract257 = extractelement <16 x double> %132, i32 6
  %extract258 = extractelement <16 x double> %132, i32 7
  %extract259 = extractelement <16 x double> %132, i32 8
  %extract260 = extractelement <16 x double> %132, i32 9
  %extract261 = extractelement <16 x double> %132, i32 10
  %extract262 = extractelement <16 x double> %132, i32 11
  %extract263 = extractelement <16 x double> %132, i32 12
  %extract264 = extractelement <16 x double> %132, i32 13
  %extract265 = extractelement <16 x double> %132, i32 14
  %extract266 = extractelement <16 x double> %132, i32 15
  %133 = tail call double @_Z3expd(double %extract251) nounwind
  %134 = tail call double @_Z3expd(double %extract252) nounwind
  %135 = tail call double @_Z3expd(double %extract253) nounwind
  %136 = tail call double @_Z3expd(double %extract254) nounwind
  %137 = tail call double @_Z3expd(double %extract255) nounwind
  %138 = tail call double @_Z3expd(double %extract256) nounwind
  %139 = tail call double @_Z3expd(double %extract257) nounwind
  %140 = tail call double @_Z3expd(double %extract258) nounwind
  %141 = tail call double @_Z3expd(double %extract259) nounwind
  %142 = tail call double @_Z3expd(double %extract260) nounwind
  %143 = tail call double @_Z3expd(double %extract261) nounwind
  %144 = tail call double @_Z3expd(double %extract262) nounwind
  %145 = tail call double @_Z3expd(double %extract263) nounwind
  %146 = tail call double @_Z3expd(double %extract264) nounwind
  %147 = tail call double @_Z3expd(double %extract265) nounwind
  %148 = tail call double @_Z3expd(double %extract266) nounwind
  %temp.vect286 = insertelement <16 x double> undef, double %133, i32 0
  %temp.vect287 = insertelement <16 x double> %temp.vect286, double %134, i32 1
  %temp.vect288 = insertelement <16 x double> %temp.vect287, double %135, i32 2
  %temp.vect289 = insertelement <16 x double> %temp.vect288, double %136, i32 3
  %temp.vect290 = insertelement <16 x double> %temp.vect289, double %137, i32 4
  %temp.vect291 = insertelement <16 x double> %temp.vect290, double %138, i32 5
  %temp.vect292 = insertelement <16 x double> %temp.vect291, double %139, i32 6
  %temp.vect293 = insertelement <16 x double> %temp.vect292, double %140, i32 7
  %temp.vect294 = insertelement <16 x double> %temp.vect293, double %141, i32 8
  %temp.vect295 = insertelement <16 x double> %temp.vect294, double %142, i32 9
  %temp.vect296 = insertelement <16 x double> %temp.vect295, double %143, i32 10
  %temp.vect297 = insertelement <16 x double> %temp.vect296, double %144, i32 11
  %temp.vect298 = insertelement <16 x double> %temp.vect297, double %145, i32 12
  %temp.vect299 = insertelement <16 x double> %temp.vect298, double %146, i32 13
  %temp.vect300 = insertelement <16 x double> %temp.vect299, double %147, i32 14
  %temp.vect301 = insertelement <16 x double> %temp.vect300, double %148, i32 15
  %149 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %150 = load i64* %149, align 8
  %151 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %152 = load i64* %151, align 8
  %153 = add i64 %150, %152
  %extract269 = add i64 %153, 442368
  %154 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %extract269
  %ptrTypeCast285 = bitcast double addrspace(1)* %154 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect301, <16 x double> addrspace(1)* %ptrTypeCast285, align 8
  %155 = fmul <16 x double> %temp.vect46, <double 5.110000e+00, double 5.110000e+00, double 5.110000e+00, double 5.110000e+00, double 5.110000e+00, double 5.110000e+00, double 5.110000e+00, double 5.110000e+00, double 5.110000e+00, double 5.110000e+00, double 5.110000e+00, double 5.110000e+00, double 5.110000e+00, double 5.110000e+00, double 5.110000e+00, double 5.110000e+00>
  %156 = fsub <16 x double> <double 0x40533E63EE5181D3, double 0x40533E63EE5181D3, double 0x40533E63EE5181D3, double 0x40533E63EE5181D3, double 0x40533E63EE5181D3, double 0x40533E63EE5181D3, double 0x40533E63EE5181D3, double 0x40533E63EE5181D3, double 0x40533E63EE5181D3, double 0x40533E63EE5181D3, double 0x40533E63EE5181D3, double 0x40533E63EE5181D3, double 0x40533E63EE5181D3, double 0x40533E63EE5181D3, double 0x40533E63EE5181D3, double 0x40533E63EE5181D3>, %155
  %157 = fmul <16 x double> %26, <double 0x40ABE4A4FF43419E, double 0x40ABE4A4FF43419E, double 0x40ABE4A4FF43419E, double 0x40ABE4A4FF43419E, double 0x40ABE4A4FF43419E, double 0x40ABE4A4FF43419E, double 0x40ABE4A4FF43419E, double 0x40ABE4A4FF43419E, double 0x40ABE4A4FF43419E, double 0x40ABE4A4FF43419E, double 0x40ABE4A4FF43419E, double 0x40ABE4A4FF43419E, double 0x40ABE4A4FF43419E, double 0x40ABE4A4FF43419E, double 0x40ABE4A4FF43419E, double 0x40ABE4A4FF43419E>
  %158 = fsub <16 x double> %156, %157
  %extract302 = extractelement <16 x double> %158, i32 0
  %extract303 = extractelement <16 x double> %158, i32 1
  %extract304 = extractelement <16 x double> %158, i32 2
  %extract305 = extractelement <16 x double> %158, i32 3
  %extract306 = extractelement <16 x double> %158, i32 4
  %extract307 = extractelement <16 x double> %158, i32 5
  %extract308 = extractelement <16 x double> %158, i32 6
  %extract309 = extractelement <16 x double> %158, i32 7
  %extract310 = extractelement <16 x double> %158, i32 8
  %extract311 = extractelement <16 x double> %158, i32 9
  %extract312 = extractelement <16 x double> %158, i32 10
  %extract313 = extractelement <16 x double> %158, i32 11
  %extract314 = extractelement <16 x double> %158, i32 12
  %extract315 = extractelement <16 x double> %158, i32 13
  %extract316 = extractelement <16 x double> %158, i32 14
  %extract317 = extractelement <16 x double> %158, i32 15
  %159 = tail call double @_Z3expd(double %extract302) nounwind
  %160 = tail call double @_Z3expd(double %extract303) nounwind
  %161 = tail call double @_Z3expd(double %extract304) nounwind
  %162 = tail call double @_Z3expd(double %extract305) nounwind
  %163 = tail call double @_Z3expd(double %extract306) nounwind
  %164 = tail call double @_Z3expd(double %extract307) nounwind
  %165 = tail call double @_Z3expd(double %extract308) nounwind
  %166 = tail call double @_Z3expd(double %extract309) nounwind
  %167 = tail call double @_Z3expd(double %extract310) nounwind
  %168 = tail call double @_Z3expd(double %extract311) nounwind
  %169 = tail call double @_Z3expd(double %extract312) nounwind
  %170 = tail call double @_Z3expd(double %extract313) nounwind
  %171 = tail call double @_Z3expd(double %extract314) nounwind
  %172 = tail call double @_Z3expd(double %extract315) nounwind
  %173 = tail call double @_Z3expd(double %extract316) nounwind
  %174 = tail call double @_Z3expd(double %extract317) nounwind
  %temp.vect337 = insertelement <16 x double> undef, double %159, i32 0
  %temp.vect338 = insertelement <16 x double> %temp.vect337, double %160, i32 1
  %temp.vect339 = insertelement <16 x double> %temp.vect338, double %161, i32 2
  %temp.vect340 = insertelement <16 x double> %temp.vect339, double %162, i32 3
  %temp.vect341 = insertelement <16 x double> %temp.vect340, double %163, i32 4
  %temp.vect342 = insertelement <16 x double> %temp.vect341, double %164, i32 5
  %temp.vect343 = insertelement <16 x double> %temp.vect342, double %165, i32 6
  %temp.vect344 = insertelement <16 x double> %temp.vect343, double %166, i32 7
  %temp.vect345 = insertelement <16 x double> %temp.vect344, double %167, i32 8
  %temp.vect346 = insertelement <16 x double> %temp.vect345, double %168, i32 9
  %temp.vect347 = insertelement <16 x double> %temp.vect346, double %169, i32 10
  %temp.vect348 = insertelement <16 x double> %temp.vect347, double %170, i32 11
  %temp.vect349 = insertelement <16 x double> %temp.vect348, double %171, i32 12
  %temp.vect350 = insertelement <16 x double> %temp.vect349, double %172, i32 13
  %temp.vect351 = insertelement <16 x double> %temp.vect350, double %173, i32 14
  %temp.vect352 = insertelement <16 x double> %temp.vect351, double %174, i32 15
  %175 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %176 = load i64* %175, align 8
  %177 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %178 = load i64* %177, align 8
  %179 = add i64 %176, %178
  %extract320 = add i64 %179, 552960
  %180 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %extract320
  %ptrTypeCast336 = bitcast double addrspace(1)* %180 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect352, <16 x double> addrspace(1)* %ptrTypeCast336, align 8
  %181 = fmul <16 x double> %temp.vect46, <double 4.800000e+00, double 4.800000e+00, double 4.800000e+00, double 4.800000e+00, double 4.800000e+00, double 4.800000e+00, double 4.800000e+00, double 4.800000e+00, double 4.800000e+00, double 4.800000e+00, double 4.800000e+00, double 4.800000e+00, double 4.800000e+00, double 4.800000e+00, double 4.800000e+00, double 4.800000e+00>
  %182 = fsub <16 x double> <double 0x4051776CB60BC028, double 0x4051776CB60BC028, double 0x4051776CB60BC028, double 0x4051776CB60BC028, double 0x4051776CB60BC028, double 0x4051776CB60BC028, double 0x4051776CB60BC028, double 0x4051776CB60BC028, double 0x4051776CB60BC028, double 0x4051776CB60BC028, double 0x4051776CB60BC028, double 0x4051776CB60BC028, double 0x4051776CB60BC028, double 0x4051776CB60BC028, double 0x4051776CB60BC028, double 0x4051776CB60BC028>, %181
  %183 = fmul <16 x double> %26, <double 0x40A5DBC4F3775B81, double 0x40A5DBC4F3775B81, double 0x40A5DBC4F3775B81, double 0x40A5DBC4F3775B81, double 0x40A5DBC4F3775B81, double 0x40A5DBC4F3775B81, double 0x40A5DBC4F3775B81, double 0x40A5DBC4F3775B81, double 0x40A5DBC4F3775B81, double 0x40A5DBC4F3775B81, double 0x40A5DBC4F3775B81, double 0x40A5DBC4F3775B81, double 0x40A5DBC4F3775B81, double 0x40A5DBC4F3775B81, double 0x40A5DBC4F3775B81, double 0x40A5DBC4F3775B81>
  %184 = fsub <16 x double> %182, %183
  %extract353 = extractelement <16 x double> %184, i32 0
  %extract354 = extractelement <16 x double> %184, i32 1
  %extract355 = extractelement <16 x double> %184, i32 2
  %extract356 = extractelement <16 x double> %184, i32 3
  %extract357 = extractelement <16 x double> %184, i32 4
  %extract358 = extractelement <16 x double> %184, i32 5
  %extract359 = extractelement <16 x double> %184, i32 6
  %extract360 = extractelement <16 x double> %184, i32 7
  %extract361 = extractelement <16 x double> %184, i32 8
  %extract362 = extractelement <16 x double> %184, i32 9
  %extract363 = extractelement <16 x double> %184, i32 10
  %extract364 = extractelement <16 x double> %184, i32 11
  %extract365 = extractelement <16 x double> %184, i32 12
  %extract366 = extractelement <16 x double> %184, i32 13
  %extract367 = extractelement <16 x double> %184, i32 14
  %extract368 = extractelement <16 x double> %184, i32 15
  %185 = tail call double @_Z3expd(double %extract353) nounwind
  %186 = tail call double @_Z3expd(double %extract354) nounwind
  %187 = tail call double @_Z3expd(double %extract355) nounwind
  %188 = tail call double @_Z3expd(double %extract356) nounwind
  %189 = tail call double @_Z3expd(double %extract357) nounwind
  %190 = tail call double @_Z3expd(double %extract358) nounwind
  %191 = tail call double @_Z3expd(double %extract359) nounwind
  %192 = tail call double @_Z3expd(double %extract360) nounwind
  %193 = tail call double @_Z3expd(double %extract361) nounwind
  %194 = tail call double @_Z3expd(double %extract362) nounwind
  %195 = tail call double @_Z3expd(double %extract363) nounwind
  %196 = tail call double @_Z3expd(double %extract364) nounwind
  %197 = tail call double @_Z3expd(double %extract365) nounwind
  %198 = tail call double @_Z3expd(double %extract366) nounwind
  %199 = tail call double @_Z3expd(double %extract367) nounwind
  %200 = tail call double @_Z3expd(double %extract368) nounwind
  %temp.vect388 = insertelement <16 x double> undef, double %185, i32 0
  %temp.vect389 = insertelement <16 x double> %temp.vect388, double %186, i32 1
  %temp.vect390 = insertelement <16 x double> %temp.vect389, double %187, i32 2
  %temp.vect391 = insertelement <16 x double> %temp.vect390, double %188, i32 3
  %temp.vect392 = insertelement <16 x double> %temp.vect391, double %189, i32 4
  %temp.vect393 = insertelement <16 x double> %temp.vect392, double %190, i32 5
  %temp.vect394 = insertelement <16 x double> %temp.vect393, double %191, i32 6
  %temp.vect395 = insertelement <16 x double> %temp.vect394, double %192, i32 7
  %temp.vect396 = insertelement <16 x double> %temp.vect395, double %193, i32 8
  %temp.vect397 = insertelement <16 x double> %temp.vect396, double %194, i32 9
  %temp.vect398 = insertelement <16 x double> %temp.vect397, double %195, i32 10
  %temp.vect399 = insertelement <16 x double> %temp.vect398, double %196, i32 11
  %temp.vect400 = insertelement <16 x double> %temp.vect399, double %197, i32 12
  %temp.vect401 = insertelement <16 x double> %temp.vect400, double %198, i32 13
  %temp.vect402 = insertelement <16 x double> %temp.vect401, double %199, i32 14
  %temp.vect403 = insertelement <16 x double> %temp.vect402, double %200, i32 15
  %201 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %202 = load i64* %201, align 8
  %203 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %204 = load i64* %203, align 8
  %205 = add i64 %202, %204
  %extract371 = add i64 %205, 663552
  %206 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %extract371
  %ptrTypeCast387 = bitcast double addrspace(1)* %206 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect403, <16 x double> addrspace(1)* %ptrTypeCast387, align 8
  %207 = fmul <16 x double> %temp.vect46, <double 4.760000e+00, double 4.760000e+00, double 4.760000e+00, double 4.760000e+00, double 4.760000e+00, double 4.760000e+00, double 4.760000e+00, double 4.760000e+00, double 4.760000e+00, double 4.760000e+00, double 4.760000e+00, double 4.760000e+00, double 4.760000e+00, double 4.760000e+00, double 4.760000e+00, double 4.760000e+00>
  %208 = fsub <16 x double> <double 0x4053391C5D2DD880, double 0x4053391C5D2DD880, double 0x4053391C5D2DD880, double 0x4053391C5D2DD880, double 0x4053391C5D2DD880, double 0x4053391C5D2DD880, double 0x4053391C5D2DD880, double 0x4053391C5D2DD880, double 0x4053391C5D2DD880, double 0x4053391C5D2DD880, double 0x4053391C5D2DD880, double 0x4053391C5D2DD880, double 0x4053391C5D2DD880, double 0x4053391C5D2DD880, double 0x4053391C5D2DD880, double 0x4053391C5D2DD880>, %207
  %209 = fmul <16 x double> %26, <double 0x40932F6509BF9C63, double 0x40932F6509BF9C63, double 0x40932F6509BF9C63, double 0x40932F6509BF9C63, double 0x40932F6509BF9C63, double 0x40932F6509BF9C63, double 0x40932F6509BF9C63, double 0x40932F6509BF9C63, double 0x40932F6509BF9C63, double 0x40932F6509BF9C63, double 0x40932F6509BF9C63, double 0x40932F6509BF9C63, double 0x40932F6509BF9C63, double 0x40932F6509BF9C63, double 0x40932F6509BF9C63, double 0x40932F6509BF9C63>
  %210 = fsub <16 x double> %208, %209
  %extract404 = extractelement <16 x double> %210, i32 0
  %extract405 = extractelement <16 x double> %210, i32 1
  %extract406 = extractelement <16 x double> %210, i32 2
  %extract407 = extractelement <16 x double> %210, i32 3
  %extract408 = extractelement <16 x double> %210, i32 4
  %extract409 = extractelement <16 x double> %210, i32 5
  %extract410 = extractelement <16 x double> %210, i32 6
  %extract411 = extractelement <16 x double> %210, i32 7
  %extract412 = extractelement <16 x double> %210, i32 8
  %extract413 = extractelement <16 x double> %210, i32 9
  %extract414 = extractelement <16 x double> %210, i32 10
  %extract415 = extractelement <16 x double> %210, i32 11
  %extract416 = extractelement <16 x double> %210, i32 12
  %extract417 = extractelement <16 x double> %210, i32 13
  %extract418 = extractelement <16 x double> %210, i32 14
  %extract419 = extractelement <16 x double> %210, i32 15
  %211 = tail call double @_Z3expd(double %extract404) nounwind
  %212 = tail call double @_Z3expd(double %extract405) nounwind
  %213 = tail call double @_Z3expd(double %extract406) nounwind
  %214 = tail call double @_Z3expd(double %extract407) nounwind
  %215 = tail call double @_Z3expd(double %extract408) nounwind
  %216 = tail call double @_Z3expd(double %extract409) nounwind
  %217 = tail call double @_Z3expd(double %extract410) nounwind
  %218 = tail call double @_Z3expd(double %extract411) nounwind
  %219 = tail call double @_Z3expd(double %extract412) nounwind
  %220 = tail call double @_Z3expd(double %extract413) nounwind
  %221 = tail call double @_Z3expd(double %extract414) nounwind
  %222 = tail call double @_Z3expd(double %extract415) nounwind
  %223 = tail call double @_Z3expd(double %extract416) nounwind
  %224 = tail call double @_Z3expd(double %extract417) nounwind
  %225 = tail call double @_Z3expd(double %extract418) nounwind
  %226 = tail call double @_Z3expd(double %extract419) nounwind
  %temp.vect439 = insertelement <16 x double> undef, double %211, i32 0
  %temp.vect440 = insertelement <16 x double> %temp.vect439, double %212, i32 1
  %temp.vect441 = insertelement <16 x double> %temp.vect440, double %213, i32 2
  %temp.vect442 = insertelement <16 x double> %temp.vect441, double %214, i32 3
  %temp.vect443 = insertelement <16 x double> %temp.vect442, double %215, i32 4
  %temp.vect444 = insertelement <16 x double> %temp.vect443, double %216, i32 5
  %temp.vect445 = insertelement <16 x double> %temp.vect444, double %217, i32 6
  %temp.vect446 = insertelement <16 x double> %temp.vect445, double %218, i32 7
  %temp.vect447 = insertelement <16 x double> %temp.vect446, double %219, i32 8
  %temp.vect448 = insertelement <16 x double> %temp.vect447, double %220, i32 9
  %temp.vect449 = insertelement <16 x double> %temp.vect448, double %221, i32 10
  %temp.vect450 = insertelement <16 x double> %temp.vect449, double %222, i32 11
  %temp.vect451 = insertelement <16 x double> %temp.vect450, double %223, i32 12
  %temp.vect452 = insertelement <16 x double> %temp.vect451, double %224, i32 13
  %temp.vect453 = insertelement <16 x double> %temp.vect452, double %225, i32 14
  %temp.vect454 = insertelement <16 x double> %temp.vect453, double %226, i32 15
  %227 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %228 = load i64* %227, align 8
  %229 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %230 = load i64* %229, align 8
  %231 = add i64 %228, %230
  %extract422 = add i64 %231, 774144
  %232 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %extract422
  %ptrTypeCast438 = bitcast double addrspace(1)* %232 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect454, <16 x double> addrspace(1)* %ptrTypeCast438, align 8
  %233 = fmul <16 x double> %temp.vect46, <double 9.588000e+00, double 9.588000e+00, double 9.588000e+00, double 9.588000e+00, double 9.588000e+00, double 9.588000e+00, double 9.588000e+00, double 9.588000e+00, double 9.588000e+00, double 9.588000e+00, double 9.588000e+00, double 9.588000e+00, double 9.588000e+00, double 9.588000e+00, double 9.588000e+00, double 9.588000e+00>
  %234 = fsub <16 x double> <double 0x405BD400B0292817, double 0x405BD400B0292817, double 0x405BD400B0292817, double 0x405BD400B0292817, double 0x405BD400B0292817, double 0x405BD400B0292817, double 0x405BD400B0292817, double 0x405BD400B0292817, double 0x405BD400B0292817, double 0x405BD400B0292817, double 0x405BD400B0292817, double 0x405BD400B0292817, double 0x405BD400B0292817, double 0x405BD400B0292817, double 0x405BD400B0292817, double 0x405BD400B0292817>, %233
  %235 = fmul <16 x double> %26, <double 2.566405e+03, double 2.566405e+03, double 2.566405e+03, double 2.566405e+03, double 2.566405e+03, double 2.566405e+03, double 2.566405e+03, double 2.566405e+03, double 2.566405e+03, double 2.566405e+03, double 2.566405e+03, double 2.566405e+03, double 2.566405e+03, double 2.566405e+03, double 2.566405e+03, double 2.566405e+03>
  %236 = fsub <16 x double> %234, %235
  %extract455 = extractelement <16 x double> %236, i32 0
  %extract456 = extractelement <16 x double> %236, i32 1
  %extract457 = extractelement <16 x double> %236, i32 2
  %extract458 = extractelement <16 x double> %236, i32 3
  %extract459 = extractelement <16 x double> %236, i32 4
  %extract460 = extractelement <16 x double> %236, i32 5
  %extract461 = extractelement <16 x double> %236, i32 6
  %extract462 = extractelement <16 x double> %236, i32 7
  %extract463 = extractelement <16 x double> %236, i32 8
  %extract464 = extractelement <16 x double> %236, i32 9
  %extract465 = extractelement <16 x double> %236, i32 10
  %extract466 = extractelement <16 x double> %236, i32 11
  %extract467 = extractelement <16 x double> %236, i32 12
  %extract468 = extractelement <16 x double> %236, i32 13
  %extract469 = extractelement <16 x double> %236, i32 14
  %extract470 = extractelement <16 x double> %236, i32 15
  %237 = tail call double @_Z3expd(double %extract455) nounwind
  %238 = tail call double @_Z3expd(double %extract456) nounwind
  %239 = tail call double @_Z3expd(double %extract457) nounwind
  %240 = tail call double @_Z3expd(double %extract458) nounwind
  %241 = tail call double @_Z3expd(double %extract459) nounwind
  %242 = tail call double @_Z3expd(double %extract460) nounwind
  %243 = tail call double @_Z3expd(double %extract461) nounwind
  %244 = tail call double @_Z3expd(double %extract462) nounwind
  %245 = tail call double @_Z3expd(double %extract463) nounwind
  %246 = tail call double @_Z3expd(double %extract464) nounwind
  %247 = tail call double @_Z3expd(double %extract465) nounwind
  %248 = tail call double @_Z3expd(double %extract466) nounwind
  %249 = tail call double @_Z3expd(double %extract467) nounwind
  %250 = tail call double @_Z3expd(double %extract468) nounwind
  %251 = tail call double @_Z3expd(double %extract469) nounwind
  %252 = tail call double @_Z3expd(double %extract470) nounwind
  %temp.vect490 = insertelement <16 x double> undef, double %237, i32 0
  %temp.vect491 = insertelement <16 x double> %temp.vect490, double %238, i32 1
  %temp.vect492 = insertelement <16 x double> %temp.vect491, double %239, i32 2
  %temp.vect493 = insertelement <16 x double> %temp.vect492, double %240, i32 3
  %temp.vect494 = insertelement <16 x double> %temp.vect493, double %241, i32 4
  %temp.vect495 = insertelement <16 x double> %temp.vect494, double %242, i32 5
  %temp.vect496 = insertelement <16 x double> %temp.vect495, double %243, i32 6
  %temp.vect497 = insertelement <16 x double> %temp.vect496, double %244, i32 7
  %temp.vect498 = insertelement <16 x double> %temp.vect497, double %245, i32 8
  %temp.vect499 = insertelement <16 x double> %temp.vect498, double %246, i32 9
  %temp.vect500 = insertelement <16 x double> %temp.vect499, double %247, i32 10
  %temp.vect501 = insertelement <16 x double> %temp.vect500, double %248, i32 11
  %temp.vect502 = insertelement <16 x double> %temp.vect501, double %249, i32 12
  %temp.vect503 = insertelement <16 x double> %temp.vect502, double %250, i32 13
  %temp.vect504 = insertelement <16 x double> %temp.vect503, double %251, i32 14
  %temp.vect505 = insertelement <16 x double> %temp.vect504, double %252, i32 15
  %253 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %254 = load i64* %253, align 8
  %255 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %256 = load i64* %255, align 8
  %257 = add i64 %254, %256
  %extract473 = add i64 %257, 884736
  %258 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %extract473
  %ptrTypeCast489 = bitcast double addrspace(1)* %258 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect505, <16 x double> addrspace(1)* %ptrTypeCast489, align 8
  %259 = fmul <16 x double> %temp.vect46, <double 9.670000e+00, double 9.670000e+00, double 9.670000e+00, double 9.670000e+00, double 9.670000e+00, double 9.670000e+00, double 9.670000e+00, double 9.670000e+00, double 9.670000e+00, double 9.670000e+00, double 9.670000e+00, double 9.670000e+00, double 9.670000e+00, double 9.670000e+00, double 9.670000e+00, double 9.670000e+00>
  %260 = fsub <16 x double> <double 0x405CECD0A2446306, double 0x405CECD0A2446306, double 0x405CECD0A2446306, double 0x405CECD0A2446306, double 0x405CECD0A2446306, double 0x405CECD0A2446306, double 0x405CECD0A2446306, double 0x405CECD0A2446306, double 0x405CECD0A2446306, double 0x405CECD0A2446306, double 0x405CECD0A2446306, double 0x405CECD0A2446306, double 0x405CECD0A2446306, double 0x405CECD0A2446306, double 0x405CECD0A2446306, double 0x405CECD0A2446306>, %259
  %261 = fmul <16 x double> %26, <double 0x40A87403ED527E52, double 0x40A87403ED527E52, double 0x40A87403ED527E52, double 0x40A87403ED527E52, double 0x40A87403ED527E52, double 0x40A87403ED527E52, double 0x40A87403ED527E52, double 0x40A87403ED527E52, double 0x40A87403ED527E52, double 0x40A87403ED527E52, double 0x40A87403ED527E52, double 0x40A87403ED527E52, double 0x40A87403ED527E52, double 0x40A87403ED527E52, double 0x40A87403ED527E52, double 0x40A87403ED527E52>
  %262 = fsub <16 x double> %260, %261
  %extract506 = extractelement <16 x double> %262, i32 0
  %extract507 = extractelement <16 x double> %262, i32 1
  %extract508 = extractelement <16 x double> %262, i32 2
  %extract509 = extractelement <16 x double> %262, i32 3
  %extract510 = extractelement <16 x double> %262, i32 4
  %extract511 = extractelement <16 x double> %262, i32 5
  %extract512 = extractelement <16 x double> %262, i32 6
  %extract513 = extractelement <16 x double> %262, i32 7
  %extract514 = extractelement <16 x double> %262, i32 8
  %extract515 = extractelement <16 x double> %262, i32 9
  %extract516 = extractelement <16 x double> %262, i32 10
  %extract517 = extractelement <16 x double> %262, i32 11
  %extract518 = extractelement <16 x double> %262, i32 12
  %extract519 = extractelement <16 x double> %262, i32 13
  %extract520 = extractelement <16 x double> %262, i32 14
  %extract521 = extractelement <16 x double> %262, i32 15
  %263 = tail call double @_Z3expd(double %extract506) nounwind
  %264 = tail call double @_Z3expd(double %extract507) nounwind
  %265 = tail call double @_Z3expd(double %extract508) nounwind
  %266 = tail call double @_Z3expd(double %extract509) nounwind
  %267 = tail call double @_Z3expd(double %extract510) nounwind
  %268 = tail call double @_Z3expd(double %extract511) nounwind
  %269 = tail call double @_Z3expd(double %extract512) nounwind
  %270 = tail call double @_Z3expd(double %extract513) nounwind
  %271 = tail call double @_Z3expd(double %extract514) nounwind
  %272 = tail call double @_Z3expd(double %extract515) nounwind
  %273 = tail call double @_Z3expd(double %extract516) nounwind
  %274 = tail call double @_Z3expd(double %extract517) nounwind
  %275 = tail call double @_Z3expd(double %extract518) nounwind
  %276 = tail call double @_Z3expd(double %extract519) nounwind
  %277 = tail call double @_Z3expd(double %extract520) nounwind
  %278 = tail call double @_Z3expd(double %extract521) nounwind
  %temp.vect541 = insertelement <16 x double> undef, double %263, i32 0
  %temp.vect542 = insertelement <16 x double> %temp.vect541, double %264, i32 1
  %temp.vect543 = insertelement <16 x double> %temp.vect542, double %265, i32 2
  %temp.vect544 = insertelement <16 x double> %temp.vect543, double %266, i32 3
  %temp.vect545 = insertelement <16 x double> %temp.vect544, double %267, i32 4
  %temp.vect546 = insertelement <16 x double> %temp.vect545, double %268, i32 5
  %temp.vect547 = insertelement <16 x double> %temp.vect546, double %269, i32 6
  %temp.vect548 = insertelement <16 x double> %temp.vect547, double %270, i32 7
  %temp.vect549 = insertelement <16 x double> %temp.vect548, double %271, i32 8
  %temp.vect550 = insertelement <16 x double> %temp.vect549, double %272, i32 9
  %temp.vect551 = insertelement <16 x double> %temp.vect550, double %273, i32 10
  %temp.vect552 = insertelement <16 x double> %temp.vect551, double %274, i32 11
  %temp.vect553 = insertelement <16 x double> %temp.vect552, double %275, i32 12
  %temp.vect554 = insertelement <16 x double> %temp.vect553, double %276, i32 13
  %temp.vect555 = insertelement <16 x double> %temp.vect554, double %277, i32 14
  %temp.vect556 = insertelement <16 x double> %temp.vect555, double %278, i32 15
  %279 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %280 = load i64* %279, align 8
  %281 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %282 = load i64* %281, align 8
  %283 = add i64 %280, %282
  %extract524 = add i64 %283, 995328
  %284 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %extract524
  %ptrTypeCast540 = bitcast double addrspace(1)* %284 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect556, <16 x double> addrspace(1)* %ptrTypeCast540, align 8
  %285 = fmul <16 x double> %temp.vect46, <double 6.400000e-01, double 6.400000e-01, double 6.400000e-01, double 6.400000e-01, double 6.400000e-01, double 6.400000e-01, double 6.400000e-01, double 6.400000e-01, double 6.400000e-01, double 6.400000e-01, double 6.400000e-01, double 6.400000e-01, double 6.400000e-01, double 6.400000e-01, double 6.400000e-01, double 6.400000e-01>
  %286 = fsub <16 x double> <double 0x4041B7A9A2FC18EB, double 0x4041B7A9A2FC18EB, double 0x4041B7A9A2FC18EB, double 0x4041B7A9A2FC18EB, double 0x4041B7A9A2FC18EB, double 0x4041B7A9A2FC18EB, double 0x4041B7A9A2FC18EB, double 0x4041B7A9A2FC18EB, double 0x4041B7A9A2FC18EB, double 0x4041B7A9A2FC18EB, double 0x4041B7A9A2FC18EB, double 0x4041B7A9A2FC18EB, double 0x4041B7A9A2FC18EB, double 0x4041B7A9A2FC18EB, double 0x4041B7A9A2FC18EB, double 0x4041B7A9A2FC18EB>, %285
  %287 = fmul <16 x double> %26, <double 0x40D86C7793DD97F6, double 0x40D86C7793DD97F6, double 0x40D86C7793DD97F6, double 0x40D86C7793DD97F6, double 0x40D86C7793DD97F6, double 0x40D86C7793DD97F6, double 0x40D86C7793DD97F6, double 0x40D86C7793DD97F6, double 0x40D86C7793DD97F6, double 0x40D86C7793DD97F6, double 0x40D86C7793DD97F6, double 0x40D86C7793DD97F6, double 0x40D86C7793DD97F6, double 0x40D86C7793DD97F6, double 0x40D86C7793DD97F6, double 0x40D86C7793DD97F6>
  %288 = fsub <16 x double> %286, %287
  %extract557 = extractelement <16 x double> %288, i32 0
  %extract558 = extractelement <16 x double> %288, i32 1
  %extract559 = extractelement <16 x double> %288, i32 2
  %extract560 = extractelement <16 x double> %288, i32 3
  %extract561 = extractelement <16 x double> %288, i32 4
  %extract562 = extractelement <16 x double> %288, i32 5
  %extract563 = extractelement <16 x double> %288, i32 6
  %extract564 = extractelement <16 x double> %288, i32 7
  %extract565 = extractelement <16 x double> %288, i32 8
  %extract566 = extractelement <16 x double> %288, i32 9
  %extract567 = extractelement <16 x double> %288, i32 10
  %extract568 = extractelement <16 x double> %288, i32 11
  %extract569 = extractelement <16 x double> %288, i32 12
  %extract570 = extractelement <16 x double> %288, i32 13
  %extract571 = extractelement <16 x double> %288, i32 14
  %extract572 = extractelement <16 x double> %288, i32 15
  %289 = tail call double @_Z3expd(double %extract557) nounwind
  %290 = tail call double @_Z3expd(double %extract558) nounwind
  %291 = tail call double @_Z3expd(double %extract559) nounwind
  %292 = tail call double @_Z3expd(double %extract560) nounwind
  %293 = tail call double @_Z3expd(double %extract561) nounwind
  %294 = tail call double @_Z3expd(double %extract562) nounwind
  %295 = tail call double @_Z3expd(double %extract563) nounwind
  %296 = tail call double @_Z3expd(double %extract564) nounwind
  %297 = tail call double @_Z3expd(double %extract565) nounwind
  %298 = tail call double @_Z3expd(double %extract566) nounwind
  %299 = tail call double @_Z3expd(double %extract567) nounwind
  %300 = tail call double @_Z3expd(double %extract568) nounwind
  %301 = tail call double @_Z3expd(double %extract569) nounwind
  %302 = tail call double @_Z3expd(double %extract570) nounwind
  %303 = tail call double @_Z3expd(double %extract571) nounwind
  %304 = tail call double @_Z3expd(double %extract572) nounwind
  %temp.vect592 = insertelement <16 x double> undef, double %289, i32 0
  %temp.vect593 = insertelement <16 x double> %temp.vect592, double %290, i32 1
  %temp.vect594 = insertelement <16 x double> %temp.vect593, double %291, i32 2
  %temp.vect595 = insertelement <16 x double> %temp.vect594, double %292, i32 3
  %temp.vect596 = insertelement <16 x double> %temp.vect595, double %293, i32 4
  %temp.vect597 = insertelement <16 x double> %temp.vect596, double %294, i32 5
  %temp.vect598 = insertelement <16 x double> %temp.vect597, double %295, i32 6
  %temp.vect599 = insertelement <16 x double> %temp.vect598, double %296, i32 7
  %temp.vect600 = insertelement <16 x double> %temp.vect599, double %297, i32 8
  %temp.vect601 = insertelement <16 x double> %temp.vect600, double %298, i32 9
  %temp.vect602 = insertelement <16 x double> %temp.vect601, double %299, i32 10
  %temp.vect603 = insertelement <16 x double> %temp.vect602, double %300, i32 11
  %temp.vect604 = insertelement <16 x double> %temp.vect603, double %301, i32 12
  %temp.vect605 = insertelement <16 x double> %temp.vect604, double %302, i32 13
  %temp.vect606 = insertelement <16 x double> %temp.vect605, double %303, i32 14
  %temp.vect607 = insertelement <16 x double> %temp.vect606, double %304, i32 15
  %305 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %306 = load i64* %305, align 8
  %307 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %308 = load i64* %307, align 8
  %309 = add i64 %306, %308
  %extract575 = add i64 %309, 1105920
  %310 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %extract575
  %ptrTypeCast591 = bitcast double addrspace(1)* %310 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect607, <16 x double> addrspace(1)* %ptrTypeCast591, align 8
  %311 = fmul <16 x double> %temp.vect46, <double 3.400000e+00, double 3.400000e+00, double 3.400000e+00, double 3.400000e+00, double 3.400000e+00, double 3.400000e+00, double 3.400000e+00, double 3.400000e+00, double 3.400000e+00, double 3.400000e+00, double 3.400000e+00, double 3.400000e+00, double 3.400000e+00, double 3.400000e+00, double 3.400000e+00, double 3.400000e+00>
  %312 = fsub <16 x double> <double 0x404F8E4E054690DE, double 0x404F8E4E054690DE, double 0x404F8E4E054690DE, double 0x404F8E4E054690DE, double 0x404F8E4E054690DE, double 0x404F8E4E054690DE, double 0x404F8E4E054690DE, double 0x404F8E4E054690DE, double 0x404F8E4E054690DE, double 0x404F8E4E054690DE, double 0x404F8E4E054690DE, double 0x404F8E4E054690DE, double 0x404F8E4E054690DE, double 0x404F8E4E054690DE, double 0x404F8E4E054690DE, double 0x404F8E4E054690DE>, %311
  %313 = fmul <16 x double> %26, <double 0x40D197A0CE703AFB, double 0x40D197A0CE703AFB, double 0x40D197A0CE703AFB, double 0x40D197A0CE703AFB, double 0x40D197A0CE703AFB, double 0x40D197A0CE703AFB, double 0x40D197A0CE703AFB, double 0x40D197A0CE703AFB, double 0x40D197A0CE703AFB, double 0x40D197A0CE703AFB, double 0x40D197A0CE703AFB, double 0x40D197A0CE703AFB, double 0x40D197A0CE703AFB, double 0x40D197A0CE703AFB, double 0x40D197A0CE703AFB, double 0x40D197A0CE703AFB>
  %314 = fsub <16 x double> %312, %313
  %extract608 = extractelement <16 x double> %314, i32 0
  %extract609 = extractelement <16 x double> %314, i32 1
  %extract610 = extractelement <16 x double> %314, i32 2
  %extract611 = extractelement <16 x double> %314, i32 3
  %extract612 = extractelement <16 x double> %314, i32 4
  %extract613 = extractelement <16 x double> %314, i32 5
  %extract614 = extractelement <16 x double> %314, i32 6
  %extract615 = extractelement <16 x double> %314, i32 7
  %extract616 = extractelement <16 x double> %314, i32 8
  %extract617 = extractelement <16 x double> %314, i32 9
  %extract618 = extractelement <16 x double> %314, i32 10
  %extract619 = extractelement <16 x double> %314, i32 11
  %extract620 = extractelement <16 x double> %314, i32 12
  %extract621 = extractelement <16 x double> %314, i32 13
  %extract622 = extractelement <16 x double> %314, i32 14
  %extract623 = extractelement <16 x double> %314, i32 15
  %315 = tail call double @_Z3expd(double %extract608) nounwind
  %316 = tail call double @_Z3expd(double %extract609) nounwind
  %317 = tail call double @_Z3expd(double %extract610) nounwind
  %318 = tail call double @_Z3expd(double %extract611) nounwind
  %319 = tail call double @_Z3expd(double %extract612) nounwind
  %320 = tail call double @_Z3expd(double %extract613) nounwind
  %321 = tail call double @_Z3expd(double %extract614) nounwind
  %322 = tail call double @_Z3expd(double %extract615) nounwind
  %323 = tail call double @_Z3expd(double %extract616) nounwind
  %324 = tail call double @_Z3expd(double %extract617) nounwind
  %325 = tail call double @_Z3expd(double %extract618) nounwind
  %326 = tail call double @_Z3expd(double %extract619) nounwind
  %327 = tail call double @_Z3expd(double %extract620) nounwind
  %328 = tail call double @_Z3expd(double %extract621) nounwind
  %329 = tail call double @_Z3expd(double %extract622) nounwind
  %330 = tail call double @_Z3expd(double %extract623) nounwind
  %temp.vect643 = insertelement <16 x double> undef, double %315, i32 0
  %temp.vect644 = insertelement <16 x double> %temp.vect643, double %316, i32 1
  %temp.vect645 = insertelement <16 x double> %temp.vect644, double %317, i32 2
  %temp.vect646 = insertelement <16 x double> %temp.vect645, double %318, i32 3
  %temp.vect647 = insertelement <16 x double> %temp.vect646, double %319, i32 4
  %temp.vect648 = insertelement <16 x double> %temp.vect647, double %320, i32 5
  %temp.vect649 = insertelement <16 x double> %temp.vect648, double %321, i32 6
  %temp.vect650 = insertelement <16 x double> %temp.vect649, double %322, i32 7
  %temp.vect651 = insertelement <16 x double> %temp.vect650, double %323, i32 8
  %temp.vect652 = insertelement <16 x double> %temp.vect651, double %324, i32 9
  %temp.vect653 = insertelement <16 x double> %temp.vect652, double %325, i32 10
  %temp.vect654 = insertelement <16 x double> %temp.vect653, double %326, i32 11
  %temp.vect655 = insertelement <16 x double> %temp.vect654, double %327, i32 12
  %temp.vect656 = insertelement <16 x double> %temp.vect655, double %328, i32 13
  %temp.vect657 = insertelement <16 x double> %temp.vect656, double %329, i32 14
  %temp.vect658 = insertelement <16 x double> %temp.vect657, double %330, i32 15
  %331 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %332 = load i64* %331, align 8
  %333 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %334 = load i64* %333, align 8
  %335 = add i64 %332, %334
  %extract626 = add i64 %335, 1216512
  %336 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %extract626
  %ptrTypeCast642 = bitcast double addrspace(1)* %336 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect658, <16 x double> addrspace(1)* %ptrTypeCast642, align 8
  %337 = fmul <16 x double> %temp.vect46, <double 7.640000e+00, double 7.640000e+00, double 7.640000e+00, double 7.640000e+00, double 7.640000e+00, double 7.640000e+00, double 7.640000e+00, double 7.640000e+00, double 7.640000e+00, double 7.640000e+00, double 7.640000e+00, double 7.640000e+00, double 7.640000e+00, double 7.640000e+00, double 7.640000e+00, double 7.640000e+00>
  %338 = fsub <16 x double> <double 0x4057EF6C60E6CAA5, double 0x4057EF6C60E6CAA5, double 0x4057EF6C60E6CAA5, double 0x4057EF6C60E6CAA5, double 0x4057EF6C60E6CAA5, double 0x4057EF6C60E6CAA5, double 0x4057EF6C60E6CAA5, double 0x4057EF6C60E6CAA5, double 0x4057EF6C60E6CAA5, double 0x4057EF6C60E6CAA5, double 0x4057EF6C60E6CAA5, double 0x4057EF6C60E6CAA5, double 0x4057EF6C60E6CAA5, double 0x4057EF6C60E6CAA5, double 0x4057EF6C60E6CAA5, double 0x4057EF6C60E6CAA5>, %337
  %339 = fmul <16 x double> %26, <double 0x40B76447414A4D2B, double 0x40B76447414A4D2B, double 0x40B76447414A4D2B, double 0x40B76447414A4D2B, double 0x40B76447414A4D2B, double 0x40B76447414A4D2B, double 0x40B76447414A4D2B, double 0x40B76447414A4D2B, double 0x40B76447414A4D2B, double 0x40B76447414A4D2B, double 0x40B76447414A4D2B, double 0x40B76447414A4D2B, double 0x40B76447414A4D2B, double 0x40B76447414A4D2B, double 0x40B76447414A4D2B, double 0x40B76447414A4D2B>
  %340 = fsub <16 x double> %338, %339
  %extract659 = extractelement <16 x double> %340, i32 0
  %extract660 = extractelement <16 x double> %340, i32 1
  %extract661 = extractelement <16 x double> %340, i32 2
  %extract662 = extractelement <16 x double> %340, i32 3
  %extract663 = extractelement <16 x double> %340, i32 4
  %extract664 = extractelement <16 x double> %340, i32 5
  %extract665 = extractelement <16 x double> %340, i32 6
  %extract666 = extractelement <16 x double> %340, i32 7
  %extract667 = extractelement <16 x double> %340, i32 8
  %extract668 = extractelement <16 x double> %340, i32 9
  %extract669 = extractelement <16 x double> %340, i32 10
  %extract670 = extractelement <16 x double> %340, i32 11
  %extract671 = extractelement <16 x double> %340, i32 12
  %extract672 = extractelement <16 x double> %340, i32 13
  %extract673 = extractelement <16 x double> %340, i32 14
  %extract674 = extractelement <16 x double> %340, i32 15
  %341 = tail call double @_Z3expd(double %extract659) nounwind
  %342 = tail call double @_Z3expd(double %extract660) nounwind
  %343 = tail call double @_Z3expd(double %extract661) nounwind
  %344 = tail call double @_Z3expd(double %extract662) nounwind
  %345 = tail call double @_Z3expd(double %extract663) nounwind
  %346 = tail call double @_Z3expd(double %extract664) nounwind
  %347 = tail call double @_Z3expd(double %extract665) nounwind
  %348 = tail call double @_Z3expd(double %extract666) nounwind
  %349 = tail call double @_Z3expd(double %extract667) nounwind
  %350 = tail call double @_Z3expd(double %extract668) nounwind
  %351 = tail call double @_Z3expd(double %extract669) nounwind
  %352 = tail call double @_Z3expd(double %extract670) nounwind
  %353 = tail call double @_Z3expd(double %extract671) nounwind
  %354 = tail call double @_Z3expd(double %extract672) nounwind
  %355 = tail call double @_Z3expd(double %extract673) nounwind
  %356 = tail call double @_Z3expd(double %extract674) nounwind
  %temp.vect694 = insertelement <16 x double> undef, double %341, i32 0
  %temp.vect695 = insertelement <16 x double> %temp.vect694, double %342, i32 1
  %temp.vect696 = insertelement <16 x double> %temp.vect695, double %343, i32 2
  %temp.vect697 = insertelement <16 x double> %temp.vect696, double %344, i32 3
  %temp.vect698 = insertelement <16 x double> %temp.vect697, double %345, i32 4
  %temp.vect699 = insertelement <16 x double> %temp.vect698, double %346, i32 5
  %temp.vect700 = insertelement <16 x double> %temp.vect699, double %347, i32 6
  %temp.vect701 = insertelement <16 x double> %temp.vect700, double %348, i32 7
  %temp.vect702 = insertelement <16 x double> %temp.vect701, double %349, i32 8
  %temp.vect703 = insertelement <16 x double> %temp.vect702, double %350, i32 9
  %temp.vect704 = insertelement <16 x double> %temp.vect703, double %351, i32 10
  %temp.vect705 = insertelement <16 x double> %temp.vect704, double %352, i32 11
  %temp.vect706 = insertelement <16 x double> %temp.vect705, double %353, i32 12
  %temp.vect707 = insertelement <16 x double> %temp.vect706, double %354, i32 13
  %temp.vect708 = insertelement <16 x double> %temp.vect707, double %355, i32 14
  %temp.vect709 = insertelement <16 x double> %temp.vect708, double %356, i32 15
  %357 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %358 = load i64* %357, align 8
  %359 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %360 = load i64* %359, align 8
  %361 = add i64 %358, %360
  %extract677 = add i64 %361, 1327104
  %362 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %extract677
  %ptrTypeCast693 = bitcast double addrspace(1)* %362 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect709, <16 x double> addrspace(1)* %ptrTypeCast693, align 8
  %363 = fmul <16 x double> %temp.vect46, <double 3.860000e+00, double 3.860000e+00, double 3.860000e+00, double 3.860000e+00, double 3.860000e+00, double 3.860000e+00, double 3.860000e+00, double 3.860000e+00, double 3.860000e+00, double 3.860000e+00, double 3.860000e+00, double 3.860000e+00, double 3.860000e+00, double 3.860000e+00, double 3.860000e+00, double 3.860000e+00>
  %364 = fsub <16 x double> <double 0x40515A7F62B6AE7D, double 0x40515A7F62B6AE7D, double 0x40515A7F62B6AE7D, double 0x40515A7F62B6AE7D, double 0x40515A7F62B6AE7D, double 0x40515A7F62B6AE7D, double 0x40515A7F62B6AE7D, double 0x40515A7F62B6AE7D, double 0x40515A7F62B6AE7D, double 0x40515A7F62B6AE7D, double 0x40515A7F62B6AE7D, double 0x40515A7F62B6AE7D, double 0x40515A7F62B6AE7D, double 0x40515A7F62B6AE7D, double 0x40515A7F62B6AE7D, double 0x40515A7F62B6AE7D>, %363
  %365 = fmul <16 x double> %26, <double 0x409A1AB7A4E7AB75, double 0x409A1AB7A4E7AB75, double 0x409A1AB7A4E7AB75, double 0x409A1AB7A4E7AB75, double 0x409A1AB7A4E7AB75, double 0x409A1AB7A4E7AB75, double 0x409A1AB7A4E7AB75, double 0x409A1AB7A4E7AB75, double 0x409A1AB7A4E7AB75, double 0x409A1AB7A4E7AB75, double 0x409A1AB7A4E7AB75, double 0x409A1AB7A4E7AB75, double 0x409A1AB7A4E7AB75, double 0x409A1AB7A4E7AB75, double 0x409A1AB7A4E7AB75, double 0x409A1AB7A4E7AB75>
  %366 = fsub <16 x double> %364, %365
  %extract710 = extractelement <16 x double> %366, i32 0
  %extract711 = extractelement <16 x double> %366, i32 1
  %extract712 = extractelement <16 x double> %366, i32 2
  %extract713 = extractelement <16 x double> %366, i32 3
  %extract714 = extractelement <16 x double> %366, i32 4
  %extract715 = extractelement <16 x double> %366, i32 5
  %extract716 = extractelement <16 x double> %366, i32 6
  %extract717 = extractelement <16 x double> %366, i32 7
  %extract718 = extractelement <16 x double> %366, i32 8
  %extract719 = extractelement <16 x double> %366, i32 9
  %extract720 = extractelement <16 x double> %366, i32 10
  %extract721 = extractelement <16 x double> %366, i32 11
  %extract722 = extractelement <16 x double> %366, i32 12
  %extract723 = extractelement <16 x double> %366, i32 13
  %extract724 = extractelement <16 x double> %366, i32 14
  %extract725 = extractelement <16 x double> %366, i32 15
  %367 = tail call double @_Z3expd(double %extract710) nounwind
  %368 = tail call double @_Z3expd(double %extract711) nounwind
  %369 = tail call double @_Z3expd(double %extract712) nounwind
  %370 = tail call double @_Z3expd(double %extract713) nounwind
  %371 = tail call double @_Z3expd(double %extract714) nounwind
  %372 = tail call double @_Z3expd(double %extract715) nounwind
  %373 = tail call double @_Z3expd(double %extract716) nounwind
  %374 = tail call double @_Z3expd(double %extract717) nounwind
  %375 = tail call double @_Z3expd(double %extract718) nounwind
  %376 = tail call double @_Z3expd(double %extract719) nounwind
  %377 = tail call double @_Z3expd(double %extract720) nounwind
  %378 = tail call double @_Z3expd(double %extract721) nounwind
  %379 = tail call double @_Z3expd(double %extract722) nounwind
  %380 = tail call double @_Z3expd(double %extract723) nounwind
  %381 = tail call double @_Z3expd(double %extract724) nounwind
  %382 = tail call double @_Z3expd(double %extract725) nounwind
  %temp.vect745 = insertelement <16 x double> undef, double %367, i32 0
  %temp.vect746 = insertelement <16 x double> %temp.vect745, double %368, i32 1
  %temp.vect747 = insertelement <16 x double> %temp.vect746, double %369, i32 2
  %temp.vect748 = insertelement <16 x double> %temp.vect747, double %370, i32 3
  %temp.vect749 = insertelement <16 x double> %temp.vect748, double %371, i32 4
  %temp.vect750 = insertelement <16 x double> %temp.vect749, double %372, i32 5
  %temp.vect751 = insertelement <16 x double> %temp.vect750, double %373, i32 6
  %temp.vect752 = insertelement <16 x double> %temp.vect751, double %374, i32 7
  %temp.vect753 = insertelement <16 x double> %temp.vect752, double %375, i32 8
  %temp.vect754 = insertelement <16 x double> %temp.vect753, double %376, i32 9
  %temp.vect755 = insertelement <16 x double> %temp.vect754, double %377, i32 10
  %temp.vect756 = insertelement <16 x double> %temp.vect755, double %378, i32 11
  %temp.vect757 = insertelement <16 x double> %temp.vect756, double %379, i32 12
  %temp.vect758 = insertelement <16 x double> %temp.vect757, double %380, i32 13
  %temp.vect759 = insertelement <16 x double> %temp.vect758, double %381, i32 14
  %temp.vect760 = insertelement <16 x double> %temp.vect759, double %382, i32 15
  %383 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %384 = load i64* %383, align 8
  %385 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %386 = load i64* %385, align 8
  %387 = add i64 %384, %386
  %extract728 = add i64 %387, 1437696
  %388 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %extract728
  %ptrTypeCast744 = bitcast double addrspace(1)* %388 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect760, <16 x double> addrspace(1)* %ptrTypeCast744, align 8
  %389 = fmul <16 x double> %temp.vect46, <double 1.194000e+01, double 1.194000e+01, double 1.194000e+01, double 1.194000e+01, double 1.194000e+01, double 1.194000e+01, double 1.194000e+01, double 1.194000e+01, double 1.194000e+01, double 1.194000e+01, double 1.194000e+01, double 1.194000e+01, double 1.194000e+01, double 1.194000e+01, double 1.194000e+01, double 1.194000e+01>
  %390 = fsub <16 x double> <double 0x4060E00CB07D0AEE, double 0x4060E00CB07D0AEE, double 0x4060E00CB07D0AEE, double 0x4060E00CB07D0AEE, double 0x4060E00CB07D0AEE, double 0x4060E00CB07D0AEE, double 0x4060E00CB07D0AEE, double 0x4060E00CB07D0AEE, double 0x4060E00CB07D0AEE, double 0x4060E00CB07D0AEE, double 0x4060E00CB07D0AEE, double 0x4060E00CB07D0AEE, double 0x4060E00CB07D0AEE, double 0x4060E00CB07D0AEE, double 0x4060E00CB07D0AEE, double 0x4060E00CB07D0AEE>, %389
  %391 = fmul <16 x double> %26, <double 0x40B3345381D7DBF5, double 0x40B3345381D7DBF5, double 0x40B3345381D7DBF5, double 0x40B3345381D7DBF5, double 0x40B3345381D7DBF5, double 0x40B3345381D7DBF5, double 0x40B3345381D7DBF5, double 0x40B3345381D7DBF5, double 0x40B3345381D7DBF5, double 0x40B3345381D7DBF5, double 0x40B3345381D7DBF5, double 0x40B3345381D7DBF5, double 0x40B3345381D7DBF5, double 0x40B3345381D7DBF5, double 0x40B3345381D7DBF5, double 0x40B3345381D7DBF5>
  %392 = fsub <16 x double> %390, %391
  %extract761 = extractelement <16 x double> %392, i32 0
  %extract762 = extractelement <16 x double> %392, i32 1
  %extract763 = extractelement <16 x double> %392, i32 2
  %extract764 = extractelement <16 x double> %392, i32 3
  %extract765 = extractelement <16 x double> %392, i32 4
  %extract766 = extractelement <16 x double> %392, i32 5
  %extract767 = extractelement <16 x double> %392, i32 6
  %extract768 = extractelement <16 x double> %392, i32 7
  %extract769 = extractelement <16 x double> %392, i32 8
  %extract770 = extractelement <16 x double> %392, i32 9
  %extract771 = extractelement <16 x double> %392, i32 10
  %extract772 = extractelement <16 x double> %392, i32 11
  %extract773 = extractelement <16 x double> %392, i32 12
  %extract774 = extractelement <16 x double> %392, i32 13
  %extract775 = extractelement <16 x double> %392, i32 14
  %extract776 = extractelement <16 x double> %392, i32 15
  %393 = tail call double @_Z3expd(double %extract761) nounwind
  %394 = tail call double @_Z3expd(double %extract762) nounwind
  %395 = tail call double @_Z3expd(double %extract763) nounwind
  %396 = tail call double @_Z3expd(double %extract764) nounwind
  %397 = tail call double @_Z3expd(double %extract765) nounwind
  %398 = tail call double @_Z3expd(double %extract766) nounwind
  %399 = tail call double @_Z3expd(double %extract767) nounwind
  %400 = tail call double @_Z3expd(double %extract768) nounwind
  %401 = tail call double @_Z3expd(double %extract769) nounwind
  %402 = tail call double @_Z3expd(double %extract770) nounwind
  %403 = tail call double @_Z3expd(double %extract771) nounwind
  %404 = tail call double @_Z3expd(double %extract772) nounwind
  %405 = tail call double @_Z3expd(double %extract773) nounwind
  %406 = tail call double @_Z3expd(double %extract774) nounwind
  %407 = tail call double @_Z3expd(double %extract775) nounwind
  %408 = tail call double @_Z3expd(double %extract776) nounwind
  %temp.vect796 = insertelement <16 x double> undef, double %393, i32 0
  %temp.vect797 = insertelement <16 x double> %temp.vect796, double %394, i32 1
  %temp.vect798 = insertelement <16 x double> %temp.vect797, double %395, i32 2
  %temp.vect799 = insertelement <16 x double> %temp.vect798, double %396, i32 3
  %temp.vect800 = insertelement <16 x double> %temp.vect799, double %397, i32 4
  %temp.vect801 = insertelement <16 x double> %temp.vect800, double %398, i32 5
  %temp.vect802 = insertelement <16 x double> %temp.vect801, double %399, i32 6
  %temp.vect803 = insertelement <16 x double> %temp.vect802, double %400, i32 7
  %temp.vect804 = insertelement <16 x double> %temp.vect803, double %401, i32 8
  %temp.vect805 = insertelement <16 x double> %temp.vect804, double %402, i32 9
  %temp.vect806 = insertelement <16 x double> %temp.vect805, double %403, i32 10
  %temp.vect807 = insertelement <16 x double> %temp.vect806, double %404, i32 11
  %temp.vect808 = insertelement <16 x double> %temp.vect807, double %405, i32 12
  %temp.vect809 = insertelement <16 x double> %temp.vect808, double %406, i32 13
  %temp.vect810 = insertelement <16 x double> %temp.vect809, double %407, i32 14
  %temp.vect811 = insertelement <16 x double> %temp.vect810, double %408, i32 15
  %409 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %410 = load i64* %409, align 8
  %411 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %412 = load i64* %411, align 8
  %413 = add i64 %410, %412
  %extract779 = add i64 %413, 1548288
  %414 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %extract779
  %ptrTypeCast795 = bitcast double addrspace(1)* %414 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect811, <16 x double> addrspace(1)* %ptrTypeCast795, align 8
  %415 = fmul <16 x double> %temp.vect46, <double 7.297000e+00, double 7.297000e+00, double 7.297000e+00, double 7.297000e+00, double 7.297000e+00, double 7.297000e+00, double 7.297000e+00, double 7.297000e+00, double 7.297000e+00, double 7.297000e+00, double 7.297000e+00, double 7.297000e+00, double 7.297000e+00, double 7.297000e+00, double 7.297000e+00, double 7.297000e+00>
  %416 = fsub <16 x double> <double 0x4056DCC43C6FF2D7, double 0x4056DCC43C6FF2D7, double 0x4056DCC43C6FF2D7, double 0x4056DCC43C6FF2D7, double 0x4056DCC43C6FF2D7, double 0x4056DCC43C6FF2D7, double 0x4056DCC43C6FF2D7, double 0x4056DCC43C6FF2D7, double 0x4056DCC43C6FF2D7, double 0x4056DCC43C6FF2D7, double 0x4056DCC43C6FF2D7, double 0x4056DCC43C6FF2D7, double 0x4056DCC43C6FF2D7, double 0x4056DCC43C6FF2D7, double 0x4056DCC43C6FF2D7, double 0x4056DCC43C6FF2D7>, %415
  %417 = fmul <16 x double> %26, <double 0x40A27A3C970F7B9E, double 0x40A27A3C970F7B9E, double 0x40A27A3C970F7B9E, double 0x40A27A3C970F7B9E, double 0x40A27A3C970F7B9E, double 0x40A27A3C970F7B9E, double 0x40A27A3C970F7B9E, double 0x40A27A3C970F7B9E, double 0x40A27A3C970F7B9E, double 0x40A27A3C970F7B9E, double 0x40A27A3C970F7B9E, double 0x40A27A3C970F7B9E, double 0x40A27A3C970F7B9E, double 0x40A27A3C970F7B9E, double 0x40A27A3C970F7B9E, double 0x40A27A3C970F7B9E>
  %418 = fsub <16 x double> %416, %417
  %extract812 = extractelement <16 x double> %418, i32 0
  %extract813 = extractelement <16 x double> %418, i32 1
  %extract814 = extractelement <16 x double> %418, i32 2
  %extract815 = extractelement <16 x double> %418, i32 3
  %extract816 = extractelement <16 x double> %418, i32 4
  %extract817 = extractelement <16 x double> %418, i32 5
  %extract818 = extractelement <16 x double> %418, i32 6
  %extract819 = extractelement <16 x double> %418, i32 7
  %extract820 = extractelement <16 x double> %418, i32 8
  %extract821 = extractelement <16 x double> %418, i32 9
  %extract822 = extractelement <16 x double> %418, i32 10
  %extract823 = extractelement <16 x double> %418, i32 11
  %extract824 = extractelement <16 x double> %418, i32 12
  %extract825 = extractelement <16 x double> %418, i32 13
  %extract826 = extractelement <16 x double> %418, i32 14
  %extract827 = extractelement <16 x double> %418, i32 15
  %419 = tail call double @_Z3expd(double %extract812) nounwind
  %420 = tail call double @_Z3expd(double %extract813) nounwind
  %421 = tail call double @_Z3expd(double %extract814) nounwind
  %422 = tail call double @_Z3expd(double %extract815) nounwind
  %423 = tail call double @_Z3expd(double %extract816) nounwind
  %424 = tail call double @_Z3expd(double %extract817) nounwind
  %425 = tail call double @_Z3expd(double %extract818) nounwind
  %426 = tail call double @_Z3expd(double %extract819) nounwind
  %427 = tail call double @_Z3expd(double %extract820) nounwind
  %428 = tail call double @_Z3expd(double %extract821) nounwind
  %429 = tail call double @_Z3expd(double %extract822) nounwind
  %430 = tail call double @_Z3expd(double %extract823) nounwind
  %431 = tail call double @_Z3expd(double %extract824) nounwind
  %432 = tail call double @_Z3expd(double %extract825) nounwind
  %433 = tail call double @_Z3expd(double %extract826) nounwind
  %434 = tail call double @_Z3expd(double %extract827) nounwind
  %temp.vect847 = insertelement <16 x double> undef, double %419, i32 0
  %temp.vect848 = insertelement <16 x double> %temp.vect847, double %420, i32 1
  %temp.vect849 = insertelement <16 x double> %temp.vect848, double %421, i32 2
  %temp.vect850 = insertelement <16 x double> %temp.vect849, double %422, i32 3
  %temp.vect851 = insertelement <16 x double> %temp.vect850, double %423, i32 4
  %temp.vect852 = insertelement <16 x double> %temp.vect851, double %424, i32 5
  %temp.vect853 = insertelement <16 x double> %temp.vect852, double %425, i32 6
  %temp.vect854 = insertelement <16 x double> %temp.vect853, double %426, i32 7
  %temp.vect855 = insertelement <16 x double> %temp.vect854, double %427, i32 8
  %temp.vect856 = insertelement <16 x double> %temp.vect855, double %428, i32 9
  %temp.vect857 = insertelement <16 x double> %temp.vect856, double %429, i32 10
  %temp.vect858 = insertelement <16 x double> %temp.vect857, double %430, i32 11
  %temp.vect859 = insertelement <16 x double> %temp.vect858, double %431, i32 12
  %temp.vect860 = insertelement <16 x double> %temp.vect859, double %432, i32 13
  %temp.vect861 = insertelement <16 x double> %temp.vect860, double %433, i32 14
  %temp.vect862 = insertelement <16 x double> %temp.vect861, double %434, i32 15
  %435 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %436 = load i64* %435, align 8
  %437 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %438 = load i64* %437, align 8
  %439 = add i64 %436, %438
  %extract830 = add i64 %439, 1658880
  %440 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %extract830
  %ptrTypeCast846 = bitcast double addrspace(1)* %440 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect862, <16 x double> addrspace(1)* %ptrTypeCast846, align 8
  %441 = fmul <16 x double> %temp.vect46, <double 9.310000e+00, double 9.310000e+00, double 9.310000e+00, double 9.310000e+00, double 9.310000e+00, double 9.310000e+00, double 9.310000e+00, double 9.310000e+00, double 9.310000e+00, double 9.310000e+00, double 9.310000e+00, double 9.310000e+00, double 9.310000e+00, double 9.310000e+00, double 9.310000e+00, double 9.310000e+00>
  %442 = fsub <16 x double> <double 0x405D44CF80DC3372, double 0x405D44CF80DC3372, double 0x405D44CF80DC3372, double 0x405D44CF80DC3372, double 0x405D44CF80DC3372, double 0x405D44CF80DC3372, double 0x405D44CF80DC3372, double 0x405D44CF80DC3372, double 0x405D44CF80DC3372, double 0x405D44CF80DC3372, double 0x405D44CF80DC3372, double 0x405D44CF80DC3372, double 0x405D44CF80DC3372, double 0x405D44CF80DC3372, double 0x405D44CF80DC3372, double 0x405D44CF80DC3372>, %441
  %443 = fmul <16 x double> %26, <double 0x40E88966ECBFB15B, double 0x40E88966ECBFB15B, double 0x40E88966ECBFB15B, double 0x40E88966ECBFB15B, double 0x40E88966ECBFB15B, double 0x40E88966ECBFB15B, double 0x40E88966ECBFB15B, double 0x40E88966ECBFB15B, double 0x40E88966ECBFB15B, double 0x40E88966ECBFB15B, double 0x40E88966ECBFB15B, double 0x40E88966ECBFB15B, double 0x40E88966ECBFB15B, double 0x40E88966ECBFB15B, double 0x40E88966ECBFB15B, double 0x40E88966ECBFB15B>
  %444 = fsub <16 x double> %442, %443
  %extract863 = extractelement <16 x double> %444, i32 0
  %extract864 = extractelement <16 x double> %444, i32 1
  %extract865 = extractelement <16 x double> %444, i32 2
  %extract866 = extractelement <16 x double> %444, i32 3
  %extract867 = extractelement <16 x double> %444, i32 4
  %extract868 = extractelement <16 x double> %444, i32 5
  %extract869 = extractelement <16 x double> %444, i32 6
  %extract870 = extractelement <16 x double> %444, i32 7
  %extract871 = extractelement <16 x double> %444, i32 8
  %extract872 = extractelement <16 x double> %444, i32 9
  %extract873 = extractelement <16 x double> %444, i32 10
  %extract874 = extractelement <16 x double> %444, i32 11
  %extract875 = extractelement <16 x double> %444, i32 12
  %extract876 = extractelement <16 x double> %444, i32 13
  %extract877 = extractelement <16 x double> %444, i32 14
  %extract878 = extractelement <16 x double> %444, i32 15
  %445 = tail call double @_Z3expd(double %extract863) nounwind
  %446 = tail call double @_Z3expd(double %extract864) nounwind
  %447 = tail call double @_Z3expd(double %extract865) nounwind
  %448 = tail call double @_Z3expd(double %extract866) nounwind
  %449 = tail call double @_Z3expd(double %extract867) nounwind
  %450 = tail call double @_Z3expd(double %extract868) nounwind
  %451 = tail call double @_Z3expd(double %extract869) nounwind
  %452 = tail call double @_Z3expd(double %extract870) nounwind
  %453 = tail call double @_Z3expd(double %extract871) nounwind
  %454 = tail call double @_Z3expd(double %extract872) nounwind
  %455 = tail call double @_Z3expd(double %extract873) nounwind
  %456 = tail call double @_Z3expd(double %extract874) nounwind
  %457 = tail call double @_Z3expd(double %extract875) nounwind
  %458 = tail call double @_Z3expd(double %extract876) nounwind
  %459 = tail call double @_Z3expd(double %extract877) nounwind
  %460 = tail call double @_Z3expd(double %extract878) nounwind
  %temp.vect898 = insertelement <16 x double> undef, double %445, i32 0
  %temp.vect899 = insertelement <16 x double> %temp.vect898, double %446, i32 1
  %temp.vect900 = insertelement <16 x double> %temp.vect899, double %447, i32 2
  %temp.vect901 = insertelement <16 x double> %temp.vect900, double %448, i32 3
  %temp.vect902 = insertelement <16 x double> %temp.vect901, double %449, i32 4
  %temp.vect903 = insertelement <16 x double> %temp.vect902, double %450, i32 5
  %temp.vect904 = insertelement <16 x double> %temp.vect903, double %451, i32 6
  %temp.vect905 = insertelement <16 x double> %temp.vect904, double %452, i32 7
  %temp.vect906 = insertelement <16 x double> %temp.vect905, double %453, i32 8
  %temp.vect907 = insertelement <16 x double> %temp.vect906, double %454, i32 9
  %temp.vect908 = insertelement <16 x double> %temp.vect907, double %455, i32 10
  %temp.vect909 = insertelement <16 x double> %temp.vect908, double %456, i32 11
  %temp.vect910 = insertelement <16 x double> %temp.vect909, double %457, i32 12
  %temp.vect911 = insertelement <16 x double> %temp.vect910, double %458, i32 13
  %temp.vect912 = insertelement <16 x double> %temp.vect911, double %459, i32 14
  %temp.vect913 = insertelement <16 x double> %temp.vect912, double %460, i32 15
  %461 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %462 = load i64* %461, align 8
  %463 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %464 = load i64* %463, align 8
  %465 = add i64 %462, %464
  %extract881 = add i64 %465, 1769472
  %466 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %extract881
  %ptrTypeCast897 = bitcast double addrspace(1)* %466 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect913, <16 x double> addrspace(1)* %ptrTypeCast897, align 8
  %467 = fmul <16 x double> %temp.vect46, <double 7.620000e+00, double 7.620000e+00, double 7.620000e+00, double 7.620000e+00, double 7.620000e+00, double 7.620000e+00, double 7.620000e+00, double 7.620000e+00, double 7.620000e+00, double 7.620000e+00, double 7.620000e+00, double 7.620000e+00, double 7.620000e+00, double 7.620000e+00, double 7.620000e+00, double 7.620000e+00>
  %468 = fsub <16 x double> <double 0x405839046E8F29D4, double 0x405839046E8F29D4, double 0x405839046E8F29D4, double 0x405839046E8F29D4, double 0x405839046E8F29D4, double 0x405839046E8F29D4, double 0x405839046E8F29D4, double 0x405839046E8F29D4, double 0x405839046E8F29D4, double 0x405839046E8F29D4, double 0x405839046E8F29D4, double 0x405839046E8F29D4, double 0x405839046E8F29D4, double 0x405839046E8F29D4, double 0x405839046E8F29D4, double 0x405839046E8F29D4>, %467
  %469 = fmul <16 x double> %26, <double 0x40AB66D72085B185, double 0x40AB66D72085B185, double 0x40AB66D72085B185, double 0x40AB66D72085B185, double 0x40AB66D72085B185, double 0x40AB66D72085B185, double 0x40AB66D72085B185, double 0x40AB66D72085B185, double 0x40AB66D72085B185, double 0x40AB66D72085B185, double 0x40AB66D72085B185, double 0x40AB66D72085B185, double 0x40AB66D72085B185, double 0x40AB66D72085B185, double 0x40AB66D72085B185, double 0x40AB66D72085B185>
  %470 = fsub <16 x double> %468, %469
  %extract914 = extractelement <16 x double> %470, i32 0
  %extract915 = extractelement <16 x double> %470, i32 1
  %extract916 = extractelement <16 x double> %470, i32 2
  %extract917 = extractelement <16 x double> %470, i32 3
  %extract918 = extractelement <16 x double> %470, i32 4
  %extract919 = extractelement <16 x double> %470, i32 5
  %extract920 = extractelement <16 x double> %470, i32 6
  %extract921 = extractelement <16 x double> %470, i32 7
  %extract922 = extractelement <16 x double> %470, i32 8
  %extract923 = extractelement <16 x double> %470, i32 9
  %extract924 = extractelement <16 x double> %470, i32 10
  %extract925 = extractelement <16 x double> %470, i32 11
  %extract926 = extractelement <16 x double> %470, i32 12
  %extract927 = extractelement <16 x double> %470, i32 13
  %extract928 = extractelement <16 x double> %470, i32 14
  %extract929 = extractelement <16 x double> %470, i32 15
  %471 = tail call double @_Z3expd(double %extract914) nounwind
  %472 = tail call double @_Z3expd(double %extract915) nounwind
  %473 = tail call double @_Z3expd(double %extract916) nounwind
  %474 = tail call double @_Z3expd(double %extract917) nounwind
  %475 = tail call double @_Z3expd(double %extract918) nounwind
  %476 = tail call double @_Z3expd(double %extract919) nounwind
  %477 = tail call double @_Z3expd(double %extract920) nounwind
  %478 = tail call double @_Z3expd(double %extract921) nounwind
  %479 = tail call double @_Z3expd(double %extract922) nounwind
  %480 = tail call double @_Z3expd(double %extract923) nounwind
  %481 = tail call double @_Z3expd(double %extract924) nounwind
  %482 = tail call double @_Z3expd(double %extract925) nounwind
  %483 = tail call double @_Z3expd(double %extract926) nounwind
  %484 = tail call double @_Z3expd(double %extract927) nounwind
  %485 = tail call double @_Z3expd(double %extract928) nounwind
  %486 = tail call double @_Z3expd(double %extract929) nounwind
  %temp.vect949 = insertelement <16 x double> undef, double %471, i32 0
  %temp.vect950 = insertelement <16 x double> %temp.vect949, double %472, i32 1
  %temp.vect951 = insertelement <16 x double> %temp.vect950, double %473, i32 2
  %temp.vect952 = insertelement <16 x double> %temp.vect951, double %474, i32 3
  %temp.vect953 = insertelement <16 x double> %temp.vect952, double %475, i32 4
  %temp.vect954 = insertelement <16 x double> %temp.vect953, double %476, i32 5
  %temp.vect955 = insertelement <16 x double> %temp.vect954, double %477, i32 6
  %temp.vect956 = insertelement <16 x double> %temp.vect955, double %478, i32 7
  %temp.vect957 = insertelement <16 x double> %temp.vect956, double %479, i32 8
  %temp.vect958 = insertelement <16 x double> %temp.vect957, double %480, i32 9
  %temp.vect959 = insertelement <16 x double> %temp.vect958, double %481, i32 10
  %temp.vect960 = insertelement <16 x double> %temp.vect959, double %482, i32 11
  %temp.vect961 = insertelement <16 x double> %temp.vect960, double %483, i32 12
  %temp.vect962 = insertelement <16 x double> %temp.vect961, double %484, i32 13
  %temp.vect963 = insertelement <16 x double> %temp.vect962, double %485, i32 14
  %temp.vect964 = insertelement <16 x double> %temp.vect963, double %486, i32 15
  %487 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %488 = load i64* %487, align 8
  %489 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %490 = load i64* %489, align 8
  %491 = add i64 %488, %490
  %extract932 = add i64 %491, 1880064
  %492 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %extract932
  %ptrTypeCast948 = bitcast double addrspace(1)* %492 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect964, <16 x double> addrspace(1)* %ptrTypeCast948, align 8
  %493 = fmul <16 x double> %temp.vect46, <double 7.080000e+00, double 7.080000e+00, double 7.080000e+00, double 7.080000e+00, double 7.080000e+00, double 7.080000e+00, double 7.080000e+00, double 7.080000e+00, double 7.080000e+00, double 7.080000e+00, double 7.080000e+00, double 7.080000e+00, double 7.080000e+00, double 7.080000e+00, double 7.080000e+00, double 7.080000e+00>
  %494 = fsub <16 x double> <double 0x4057C6061E92923E, double 0x4057C6061E92923E, double 0x4057C6061E92923E, double 0x4057C6061E92923E, double 0x4057C6061E92923E, double 0x4057C6061E92923E, double 0x4057C6061E92923E, double 0x4057C6061E92923E, double 0x4057C6061E92923E, double 0x4057C6061E92923E, double 0x4057C6061E92923E, double 0x4057C6061E92923E, double 0x4057C6061E92923E, double 0x4057C6061E92923E, double 0x4057C6061E92923E, double 0x4057C6061E92923E>, %493
  %495 = fmul <16 x double> %26, <double 0x40AA4801C044284E, double 0x40AA4801C044284E, double 0x40AA4801C044284E, double 0x40AA4801C044284E, double 0x40AA4801C044284E, double 0x40AA4801C044284E, double 0x40AA4801C044284E, double 0x40AA4801C044284E, double 0x40AA4801C044284E, double 0x40AA4801C044284E, double 0x40AA4801C044284E, double 0x40AA4801C044284E, double 0x40AA4801C044284E, double 0x40AA4801C044284E, double 0x40AA4801C044284E, double 0x40AA4801C044284E>
  %496 = fsub <16 x double> %494, %495
  %extract965 = extractelement <16 x double> %496, i32 0
  %extract966 = extractelement <16 x double> %496, i32 1
  %extract967 = extractelement <16 x double> %496, i32 2
  %extract968 = extractelement <16 x double> %496, i32 3
  %extract969 = extractelement <16 x double> %496, i32 4
  %extract970 = extractelement <16 x double> %496, i32 5
  %extract971 = extractelement <16 x double> %496, i32 6
  %extract972 = extractelement <16 x double> %496, i32 7
  %extract973 = extractelement <16 x double> %496, i32 8
  %extract974 = extractelement <16 x double> %496, i32 9
  %extract975 = extractelement <16 x double> %496, i32 10
  %extract976 = extractelement <16 x double> %496, i32 11
  %extract977 = extractelement <16 x double> %496, i32 12
  %extract978 = extractelement <16 x double> %496, i32 13
  %extract979 = extractelement <16 x double> %496, i32 14
  %extract980 = extractelement <16 x double> %496, i32 15
  %497 = tail call double @_Z3expd(double %extract965) nounwind
  %498 = tail call double @_Z3expd(double %extract966) nounwind
  %499 = tail call double @_Z3expd(double %extract967) nounwind
  %500 = tail call double @_Z3expd(double %extract968) nounwind
  %501 = tail call double @_Z3expd(double %extract969) nounwind
  %502 = tail call double @_Z3expd(double %extract970) nounwind
  %503 = tail call double @_Z3expd(double %extract971) nounwind
  %504 = tail call double @_Z3expd(double %extract972) nounwind
  %505 = tail call double @_Z3expd(double %extract973) nounwind
  %506 = tail call double @_Z3expd(double %extract974) nounwind
  %507 = tail call double @_Z3expd(double %extract975) nounwind
  %508 = tail call double @_Z3expd(double %extract976) nounwind
  %509 = tail call double @_Z3expd(double %extract977) nounwind
  %510 = tail call double @_Z3expd(double %extract978) nounwind
  %511 = tail call double @_Z3expd(double %extract979) nounwind
  %512 = tail call double @_Z3expd(double %extract980) nounwind
  %temp.vect1000 = insertelement <16 x double> undef, double %497, i32 0
  %temp.vect1001 = insertelement <16 x double> %temp.vect1000, double %498, i32 1
  %temp.vect1002 = insertelement <16 x double> %temp.vect1001, double %499, i32 2
  %temp.vect1003 = insertelement <16 x double> %temp.vect1002, double %500, i32 3
  %temp.vect1004 = insertelement <16 x double> %temp.vect1003, double %501, i32 4
  %temp.vect1005 = insertelement <16 x double> %temp.vect1004, double %502, i32 5
  %temp.vect1006 = insertelement <16 x double> %temp.vect1005, double %503, i32 6
  %temp.vect1007 = insertelement <16 x double> %temp.vect1006, double %504, i32 7
  %temp.vect1008 = insertelement <16 x double> %temp.vect1007, double %505, i32 8
  %temp.vect1009 = insertelement <16 x double> %temp.vect1008, double %506, i32 9
  %temp.vect1010 = insertelement <16 x double> %temp.vect1009, double %507, i32 10
  %temp.vect1011 = insertelement <16 x double> %temp.vect1010, double %508, i32 11
  %temp.vect1012 = insertelement <16 x double> %temp.vect1011, double %509, i32 12
  %temp.vect1013 = insertelement <16 x double> %temp.vect1012, double %510, i32 13
  %temp.vect1014 = insertelement <16 x double> %temp.vect1013, double %511, i32 14
  %temp.vect1015 = insertelement <16 x double> %temp.vect1014, double %512, i32 15
  %513 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %514 = load i64* %513, align 8
  %515 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %516 = load i64* %515, align 8
  %517 = add i64 %514, %516
  %extract983 = add i64 %517, 1990656
  %518 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %extract983
  %ptrTypeCast999 = bitcast double addrspace(1)* %518 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect1015, <16 x double> addrspace(1)* %ptrTypeCast999, align 8
  %519 = fmul <16 x double> %temp.vect46, <double 1.200000e+01, double 1.200000e+01, double 1.200000e+01, double 1.200000e+01, double 1.200000e+01, double 1.200000e+01, double 1.200000e+01, double 1.200000e+01, double 1.200000e+01, double 1.200000e+01, double 1.200000e+01, double 1.200000e+01, double 1.200000e+01, double 1.200000e+01, double 1.200000e+01, double 1.200000e+01>
  %520 = fsub <16 x double> <double 0x40614E16D0917D6B, double 0x40614E16D0917D6B, double 0x40614E16D0917D6B, double 0x40614E16D0917D6B, double 0x40614E16D0917D6B, double 0x40614E16D0917D6B, double 0x40614E16D0917D6B, double 0x40614E16D0917D6B, double 0x40614E16D0917D6B, double 0x40614E16D0917D6B, double 0x40614E16D0917D6B, double 0x40614E16D0917D6B, double 0x40614E16D0917D6B, double 0x40614E16D0917D6B, double 0x40614E16D0917D6B, double 0x40614E16D0917D6B>, %519
  %521 = fmul <16 x double> %26, <double 0x40A776315F45E0B5, double 0x40A776315F45E0B5, double 0x40A776315F45E0B5, double 0x40A776315F45E0B5, double 0x40A776315F45E0B5, double 0x40A776315F45E0B5, double 0x40A776315F45E0B5, double 0x40A776315F45E0B5, double 0x40A776315F45E0B5, double 0x40A776315F45E0B5, double 0x40A776315F45E0B5, double 0x40A776315F45E0B5, double 0x40A776315F45E0B5, double 0x40A776315F45E0B5, double 0x40A776315F45E0B5, double 0x40A776315F45E0B5>
  %522 = fsub <16 x double> %520, %521
  %extract1016 = extractelement <16 x double> %522, i32 0
  %extract1017 = extractelement <16 x double> %522, i32 1
  %extract1018 = extractelement <16 x double> %522, i32 2
  %extract1019 = extractelement <16 x double> %522, i32 3
  %extract1020 = extractelement <16 x double> %522, i32 4
  %extract1021 = extractelement <16 x double> %522, i32 5
  %extract1022 = extractelement <16 x double> %522, i32 6
  %extract1023 = extractelement <16 x double> %522, i32 7
  %extract1024 = extractelement <16 x double> %522, i32 8
  %extract1025 = extractelement <16 x double> %522, i32 9
  %extract1026 = extractelement <16 x double> %522, i32 10
  %extract1027 = extractelement <16 x double> %522, i32 11
  %extract1028 = extractelement <16 x double> %522, i32 12
  %extract1029 = extractelement <16 x double> %522, i32 13
  %extract1030 = extractelement <16 x double> %522, i32 14
  %extract1031 = extractelement <16 x double> %522, i32 15
  %523 = tail call double @_Z3expd(double %extract1016) nounwind
  %524 = tail call double @_Z3expd(double %extract1017) nounwind
  %525 = tail call double @_Z3expd(double %extract1018) nounwind
  %526 = tail call double @_Z3expd(double %extract1019) nounwind
  %527 = tail call double @_Z3expd(double %extract1020) nounwind
  %528 = tail call double @_Z3expd(double %extract1021) nounwind
  %529 = tail call double @_Z3expd(double %extract1022) nounwind
  %530 = tail call double @_Z3expd(double %extract1023) nounwind
  %531 = tail call double @_Z3expd(double %extract1024) nounwind
  %532 = tail call double @_Z3expd(double %extract1025) nounwind
  %533 = tail call double @_Z3expd(double %extract1026) nounwind
  %534 = tail call double @_Z3expd(double %extract1027) nounwind
  %535 = tail call double @_Z3expd(double %extract1028) nounwind
  %536 = tail call double @_Z3expd(double %extract1029) nounwind
  %537 = tail call double @_Z3expd(double %extract1030) nounwind
  %538 = tail call double @_Z3expd(double %extract1031) nounwind
  %temp.vect1051 = insertelement <16 x double> undef, double %523, i32 0
  %temp.vect1052 = insertelement <16 x double> %temp.vect1051, double %524, i32 1
  %temp.vect1053 = insertelement <16 x double> %temp.vect1052, double %525, i32 2
  %temp.vect1054 = insertelement <16 x double> %temp.vect1053, double %526, i32 3
  %temp.vect1055 = insertelement <16 x double> %temp.vect1054, double %527, i32 4
  %temp.vect1056 = insertelement <16 x double> %temp.vect1055, double %528, i32 5
  %temp.vect1057 = insertelement <16 x double> %temp.vect1056, double %529, i32 6
  %temp.vect1058 = insertelement <16 x double> %temp.vect1057, double %530, i32 7
  %temp.vect1059 = insertelement <16 x double> %temp.vect1058, double %531, i32 8
  %temp.vect1060 = insertelement <16 x double> %temp.vect1059, double %532, i32 9
  %temp.vect1061 = insertelement <16 x double> %temp.vect1060, double %533, i32 10
  %temp.vect1062 = insertelement <16 x double> %temp.vect1061, double %534, i32 11
  %temp.vect1063 = insertelement <16 x double> %temp.vect1062, double %535, i32 12
  %temp.vect1064 = insertelement <16 x double> %temp.vect1063, double %536, i32 13
  %temp.vect1065 = insertelement <16 x double> %temp.vect1064, double %537, i32 14
  %temp.vect1066 = insertelement <16 x double> %temp.vect1065, double %538, i32 15
  %539 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %540 = load i64* %539, align 8
  %541 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %542 = load i64* %541, align 8
  %543 = add i64 %540, %542
  %extract1034 = add i64 %543, 2101248
  %544 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %extract1034
  %ptrTypeCast1050 = bitcast double addrspace(1)* %544 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect1066, <16 x double> addrspace(1)* %ptrTypeCast1050, align 8
  %545 = fmul <16 x double> %temp.vect46, <double 6.660000e+00, double 6.660000e+00, double 6.660000e+00, double 6.660000e+00, double 6.660000e+00, double 6.660000e+00, double 6.660000e+00, double 6.660000e+00, double 6.660000e+00, double 6.660000e+00, double 6.660000e+00, double 6.660000e+00, double 6.660000e+00, double 6.660000e+00, double 6.660000e+00, double 6.660000e+00>
  %546 = fsub <16 x double> <double 0x40565546441C8F83, double 0x40565546441C8F83, double 0x40565546441C8F83, double 0x40565546441C8F83, double 0x40565546441C8F83, double 0x40565546441C8F83, double 0x40565546441C8F83, double 0x40565546441C8F83, double 0x40565546441C8F83, double 0x40565546441C8F83, double 0x40565546441C8F83, double 0x40565546441C8F83, double 0x40565546441C8F83, double 0x40565546441C8F83, double 0x40565546441C8F83, double 0x40565546441C8F83>, %545
  %547 = fmul <16 x double> %26, <double 0x40AB850888F861A6, double 0x40AB850888F861A6, double 0x40AB850888F861A6, double 0x40AB850888F861A6, double 0x40AB850888F861A6, double 0x40AB850888F861A6, double 0x40AB850888F861A6, double 0x40AB850888F861A6, double 0x40AB850888F861A6, double 0x40AB850888F861A6, double 0x40AB850888F861A6, double 0x40AB850888F861A6, double 0x40AB850888F861A6, double 0x40AB850888F861A6, double 0x40AB850888F861A6, double 0x40AB850888F861A6>
  %548 = fsub <16 x double> %546, %547
  %extract1067 = extractelement <16 x double> %548, i32 0
  %extract1068 = extractelement <16 x double> %548, i32 1
  %extract1069 = extractelement <16 x double> %548, i32 2
  %extract1070 = extractelement <16 x double> %548, i32 3
  %extract1071 = extractelement <16 x double> %548, i32 4
  %extract1072 = extractelement <16 x double> %548, i32 5
  %extract1073 = extractelement <16 x double> %548, i32 6
  %extract1074 = extractelement <16 x double> %548, i32 7
  %extract1075 = extractelement <16 x double> %548, i32 8
  %extract1076 = extractelement <16 x double> %548, i32 9
  %extract1077 = extractelement <16 x double> %548, i32 10
  %extract1078 = extractelement <16 x double> %548, i32 11
  %extract1079 = extractelement <16 x double> %548, i32 12
  %extract1080 = extractelement <16 x double> %548, i32 13
  %extract1081 = extractelement <16 x double> %548, i32 14
  %extract1082 = extractelement <16 x double> %548, i32 15
  %549 = tail call double @_Z3expd(double %extract1067) nounwind
  %550 = tail call double @_Z3expd(double %extract1068) nounwind
  %551 = tail call double @_Z3expd(double %extract1069) nounwind
  %552 = tail call double @_Z3expd(double %extract1070) nounwind
  %553 = tail call double @_Z3expd(double %extract1071) nounwind
  %554 = tail call double @_Z3expd(double %extract1072) nounwind
  %555 = tail call double @_Z3expd(double %extract1073) nounwind
  %556 = tail call double @_Z3expd(double %extract1074) nounwind
  %557 = tail call double @_Z3expd(double %extract1075) nounwind
  %558 = tail call double @_Z3expd(double %extract1076) nounwind
  %559 = tail call double @_Z3expd(double %extract1077) nounwind
  %560 = tail call double @_Z3expd(double %extract1078) nounwind
  %561 = tail call double @_Z3expd(double %extract1079) nounwind
  %562 = tail call double @_Z3expd(double %extract1080) nounwind
  %563 = tail call double @_Z3expd(double %extract1081) nounwind
  %564 = tail call double @_Z3expd(double %extract1082) nounwind
  %temp.vect1102 = insertelement <16 x double> undef, double %549, i32 0
  %temp.vect1103 = insertelement <16 x double> %temp.vect1102, double %550, i32 1
  %temp.vect1104 = insertelement <16 x double> %temp.vect1103, double %551, i32 2
  %temp.vect1105 = insertelement <16 x double> %temp.vect1104, double %552, i32 3
  %temp.vect1106 = insertelement <16 x double> %temp.vect1105, double %553, i32 4
  %temp.vect1107 = insertelement <16 x double> %temp.vect1106, double %554, i32 5
  %temp.vect1108 = insertelement <16 x double> %temp.vect1107, double %555, i32 6
  %temp.vect1109 = insertelement <16 x double> %temp.vect1108, double %556, i32 7
  %temp.vect1110 = insertelement <16 x double> %temp.vect1109, double %557, i32 8
  %temp.vect1111 = insertelement <16 x double> %temp.vect1110, double %558, i32 9
  %temp.vect1112 = insertelement <16 x double> %temp.vect1111, double %559, i32 10
  %temp.vect1113 = insertelement <16 x double> %temp.vect1112, double %560, i32 11
  %temp.vect1114 = insertelement <16 x double> %temp.vect1113, double %561, i32 12
  %temp.vect1115 = insertelement <16 x double> %temp.vect1114, double %562, i32 13
  %temp.vect1116 = insertelement <16 x double> %temp.vect1115, double %563, i32 14
  %temp.vect1117 = insertelement <16 x double> %temp.vect1116, double %564, i32 15
  %565 = getelementptr %struct.PaddedDimId* %pLocalIds, i64 %CurrWI..0, i32 0, i64 0
  %566 = load i64* %565, align 8
  %567 = getelementptr %struct.PaddedDimId* %pBaseGlbId, i64 0, i32 0, i64 0
  %568 = load i64* %567, align 8
  %569 = add i64 %566, %568
  %extract1085 = add i64 %569, 2211840
  %570 = getelementptr inbounds double addrspace(1)* %RKLOW, i64 %extract1085
  %ptrTypeCast1101 = bitcast double addrspace(1)* %570 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect1117, <16 x double> addrspace(1)* %ptrTypeCast1101, align 8
  %check.WI.iter = icmp ult i64 %CurrWI..0, %iterCount
  br i1 %check.WI.iter, label %thenBB, label %SyncBB1118

thenBB:                                           ; preds = %SyncBB
  %"CurrWI++" = add nuw i64 %CurrWI..0, 1
  br label %SyncBB

SyncBB1118:                                       ; preds = %SyncBB
  ret void
}

define void @ratt10_kernel(i8* %pBuffer) {
entry:
  %0 = bitcast i8* %pBuffer to double addrspace(1)**
  %1 = load double addrspace(1)** %0, align 8
  %2 = getelementptr i8* %pBuffer, i64 8
  %3 = bitcast i8* %2 to double addrspace(1)**
  %4 = load double addrspace(1)** %3, align 8
  %5 = getelementptr i8* %pBuffer, i64 16
  %6 = bitcast i8* %5 to double*
  %7 = load double* %6, align 8
  %8 = getelementptr i8* %pBuffer, i64 48
  %9 = bitcast i8* %8 to %struct.PaddedDimId**
  %10 = load %struct.PaddedDimId** %9, align 8
  %11 = getelementptr i8* %pBuffer, i64 56
  %12 = bitcast i8* %11 to %struct.PaddedDimId**
  %13 = load %struct.PaddedDimId** %12, align 8
  %14 = getelementptr i8* %pBuffer, i64 72
  %15 = bitcast i8* %14 to i64*
  %16 = load i64* %15, align 8
  br label %SyncBB1.i

SyncBB1.i:                                        ; preds = %thenBB.i, %entry
  %CurrWI..0.i = phi i64 [ %"CurrWI++.i", %thenBB.i ], [ 0, %entry ]
  %17 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %18 = load i64* %17, align 8
  %19 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %20 = load i64* %19, align 8
  %21 = add i64 %18, %20
  %22 = getelementptr inbounds double addrspace(1)* %1, i64 %21
  %23 = load double addrspace(1)* %22, align 8
  %24 = fmul double %23, %7
  %25 = call double @_Z3logd(double %24) nounwind
  %26 = fmul double %25, 9.000000e-01
  %27 = fsub double 0x404523C4B7549584, %26
  %28 = fdiv double 1.000000e+00, %24
  %29 = fmul double %28, 0x408ABBBF266BA494
  %30 = fadd double %27, %29
  %31 = call double @_Z3expd(double %30) nounwind
  %32 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %33 = load i64* %32, align 8
  %34 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %35 = load i64* %34, align 8
  %36 = add i64 %33, %35
  %37 = getelementptr inbounds double addrspace(1)* %4, i64 %36
  store double %31, double addrspace(1)* %37, align 8
  %38 = fmul double %25, 3.420000e+00
  %39 = fsub double 0x404FE5858E49DA3F, %38
  %40 = fmul double %28, 0x40E4B9CA6DC5D639
  %41 = fsub double %39, %40
  %42 = call double @_Z3expd(double %41) nounwind
  %43 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %44 = load i64* %43, align 8
  %45 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %46 = load i64* %45, align 8
  %47 = add i64 %44, %46
  %48 = add i64 %47, 110592
  %49 = getelementptr inbounds double addrspace(1)* %4, i64 %48
  store double %42, double addrspace(1)* %49, align 8
  %50 = fmul double %25, 3.740000e+00
  %51 = fsub double 0x40505D9028D78F9E, %50
  %52 = fmul double %28, 0x408E71D1DB445ED5
  %53 = fsub double %51, %52
  %54 = call double @_Z3expd(double %53) nounwind
  %55 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %56 = load i64* %55, align 8
  %57 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %58 = load i64* %57, align 8
  %59 = add i64 %56, %58
  %60 = add i64 %59, 221184
  %61 = getelementptr inbounds double addrspace(1)* %4, i64 %60
  store double %54, double addrspace(1)* %61, align 8
  %62 = fmul double %25, 2.570000e+00
  %63 = fsub double 0x404BC7F46D24C689, %62
  %64 = fmul double %28, 0x408668AB85A4F00F
  %65 = fsub double %63, %64
  %66 = call double @_Z3expd(double %65) nounwind
  %67 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %68 = load i64* %67, align 8
  %69 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %70 = load i64* %69, align 8
  %71 = add i64 %68, %70
  %72 = add i64 %71, 331776
  %73 = getelementptr inbounds double addrspace(1)* %4, i64 %72
  store double %66, double addrspace(1)* %73, align 8
  %74 = fmul double %25, 3.140000e+00
  %75 = fsub double 0x404FAA9E0CC5E120, %74
  %76 = fmul double %28, 0x408357A6E9FF0CBB
  %77 = fsub double %75, %76
  %78 = call double @_Z3expd(double %77) nounwind
  %79 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %80 = load i64* %79, align 8
  %81 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %82 = load i64* %81, align 8
  %83 = add i64 %80, %82
  %84 = add i64 %83, 442368
  %85 = getelementptr inbounds double addrspace(1)* %4, i64 %84
  store double %78, double addrspace(1)* %85, align 8
  %86 = fmul double %25, 5.110000e+00
  %87 = fsub double 0x40533E63EE5181D3, %86
  %88 = fmul double %28, 0x40ABE4A4FF43419E
  %89 = fsub double %87, %88
  %90 = call double @_Z3expd(double %89) nounwind
  %91 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %92 = load i64* %91, align 8
  %93 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %94 = load i64* %93, align 8
  %95 = add i64 %92, %94
  %96 = add i64 %95, 552960
  %97 = getelementptr inbounds double addrspace(1)* %4, i64 %96
  store double %90, double addrspace(1)* %97, align 8
  %98 = fmul double %25, 4.800000e+00
  %99 = fsub double 0x4051776CB60BC028, %98
  %100 = fmul double %28, 0x40A5DBC4F3775B81
  %101 = fsub double %99, %100
  %102 = call double @_Z3expd(double %101) nounwind
  %103 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %104 = load i64* %103, align 8
  %105 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %106 = load i64* %105, align 8
  %107 = add i64 %104, %106
  %108 = add i64 %107, 663552
  %109 = getelementptr inbounds double addrspace(1)* %4, i64 %108
  store double %102, double addrspace(1)* %109, align 8
  %110 = fmul double %25, 4.760000e+00
  %111 = fsub double 0x4053391C5D2DD880, %110
  %112 = fmul double %28, 0x40932F6509BF9C63
  %113 = fsub double %111, %112
  %114 = call double @_Z3expd(double %113) nounwind
  %115 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %116 = load i64* %115, align 8
  %117 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %118 = load i64* %117, align 8
  %119 = add i64 %116, %118
  %120 = add i64 %119, 774144
  %121 = getelementptr inbounds double addrspace(1)* %4, i64 %120
  store double %114, double addrspace(1)* %121, align 8
  %122 = fmul double %25, 9.588000e+00
  %123 = fsub double 0x405BD400B0292817, %122
  %124 = fmul double %28, 2.566405e+03
  %125 = fsub double %123, %124
  %126 = call double @_Z3expd(double %125) nounwind
  %127 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %128 = load i64* %127, align 8
  %129 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %130 = load i64* %129, align 8
  %131 = add i64 %128, %130
  %132 = add i64 %131, 884736
  %133 = getelementptr inbounds double addrspace(1)* %4, i64 %132
  store double %126, double addrspace(1)* %133, align 8
  %134 = fmul double %25, 9.670000e+00
  %135 = fsub double 0x405CECD0A2446306, %134
  %136 = fmul double %28, 0x40A87403ED527E52
  %137 = fsub double %135, %136
  %138 = call double @_Z3expd(double %137) nounwind
  %139 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %140 = load i64* %139, align 8
  %141 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %142 = load i64* %141, align 8
  %143 = add i64 %140, %142
  %144 = add i64 %143, 995328
  %145 = getelementptr inbounds double addrspace(1)* %4, i64 %144
  store double %138, double addrspace(1)* %145, align 8
  %146 = fmul double %25, 6.400000e-01
  %147 = fsub double 0x4041B7A9A2FC18EB, %146
  %148 = fmul double %28, 0x40D86C7793DD97F6
  %149 = fsub double %147, %148
  %150 = call double @_Z3expd(double %149) nounwind
  %151 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %152 = load i64* %151, align 8
  %153 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %154 = load i64* %153, align 8
  %155 = add i64 %152, %154
  %156 = add i64 %155, 1105920
  %157 = getelementptr inbounds double addrspace(1)* %4, i64 %156
  store double %150, double addrspace(1)* %157, align 8
  %158 = fmul double %25, 3.400000e+00
  %159 = fsub double 0x404F8E4E054690DE, %158
  %160 = fmul double %28, 0x40D197A0CE703AFB
  %161 = fsub double %159, %160
  %162 = call double @_Z3expd(double %161) nounwind
  %163 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %164 = load i64* %163, align 8
  %165 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %166 = load i64* %165, align 8
  %167 = add i64 %164, %166
  %168 = add i64 %167, 1216512
  %169 = getelementptr inbounds double addrspace(1)* %4, i64 %168
  store double %162, double addrspace(1)* %169, align 8
  %170 = fmul double %25, 7.640000e+00
  %171 = fsub double 0x4057EF6C60E6CAA5, %170
  %172 = fmul double %28, 0x40B76447414A4D2B
  %173 = fsub double %171, %172
  %174 = call double @_Z3expd(double %173) nounwind
  %175 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %176 = load i64* %175, align 8
  %177 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %178 = load i64* %177, align 8
  %179 = add i64 %176, %178
  %180 = add i64 %179, 1327104
  %181 = getelementptr inbounds double addrspace(1)* %4, i64 %180
  store double %174, double addrspace(1)* %181, align 8
  %182 = fmul double %25, 3.860000e+00
  %183 = fsub double 0x40515A7F62B6AE7D, %182
  %184 = fmul double %28, 0x409A1AB7A4E7AB75
  %185 = fsub double %183, %184
  %186 = call double @_Z3expd(double %185) nounwind
  %187 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %188 = load i64* %187, align 8
  %189 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %190 = load i64* %189, align 8
  %191 = add i64 %188, %190
  %192 = add i64 %191, 1437696
  %193 = getelementptr inbounds double addrspace(1)* %4, i64 %192
  store double %186, double addrspace(1)* %193, align 8
  %194 = fmul double %25, 1.194000e+01
  %195 = fsub double 0x4060E00CB07D0AEE, %194
  %196 = fmul double %28, 0x40B3345381D7DBF5
  %197 = fsub double %195, %196
  %198 = call double @_Z3expd(double %197) nounwind
  %199 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %200 = load i64* %199, align 8
  %201 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %202 = load i64* %201, align 8
  %203 = add i64 %200, %202
  %204 = add i64 %203, 1548288
  %205 = getelementptr inbounds double addrspace(1)* %4, i64 %204
  store double %198, double addrspace(1)* %205, align 8
  %206 = fmul double %25, 7.297000e+00
  %207 = fsub double 0x4056DCC43C6FF2D7, %206
  %208 = fmul double %28, 0x40A27A3C970F7B9E
  %209 = fsub double %207, %208
  %210 = call double @_Z3expd(double %209) nounwind
  %211 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %212 = load i64* %211, align 8
  %213 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %214 = load i64* %213, align 8
  %215 = add i64 %212, %214
  %216 = add i64 %215, 1658880
  %217 = getelementptr inbounds double addrspace(1)* %4, i64 %216
  store double %210, double addrspace(1)* %217, align 8
  %218 = fmul double %25, 9.310000e+00
  %219 = fsub double 0x405D44CF80DC3372, %218
  %220 = fmul double %28, 0x40E88966ECBFB15B
  %221 = fsub double %219, %220
  %222 = call double @_Z3expd(double %221) nounwind
  %223 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %224 = load i64* %223, align 8
  %225 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %226 = load i64* %225, align 8
  %227 = add i64 %224, %226
  %228 = add i64 %227, 1769472
  %229 = getelementptr inbounds double addrspace(1)* %4, i64 %228
  store double %222, double addrspace(1)* %229, align 8
  %230 = fmul double %25, 7.620000e+00
  %231 = fsub double 0x405839046E8F29D4, %230
  %232 = fmul double %28, 0x40AB66D72085B185
  %233 = fsub double %231, %232
  %234 = call double @_Z3expd(double %233) nounwind
  %235 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %236 = load i64* %235, align 8
  %237 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %238 = load i64* %237, align 8
  %239 = add i64 %236, %238
  %240 = add i64 %239, 1880064
  %241 = getelementptr inbounds double addrspace(1)* %4, i64 %240
  store double %234, double addrspace(1)* %241, align 8
  %242 = fmul double %25, 7.080000e+00
  %243 = fsub double 0x4057C6061E92923E, %242
  %244 = fmul double %28, 0x40AA4801C044284E
  %245 = fsub double %243, %244
  %246 = call double @_Z3expd(double %245) nounwind
  %247 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %248 = load i64* %247, align 8
  %249 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %250 = load i64* %249, align 8
  %251 = add i64 %248, %250
  %252 = add i64 %251, 1990656
  %253 = getelementptr inbounds double addrspace(1)* %4, i64 %252
  store double %246, double addrspace(1)* %253, align 8
  %254 = fmul double %25, 1.200000e+01
  %255 = fsub double 0x40614E16D0917D6B, %254
  %256 = fmul double %28, 0x40A776315F45E0B5
  %257 = fsub double %255, %256
  %258 = call double @_Z3expd(double %257) nounwind
  %259 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %260 = load i64* %259, align 8
  %261 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %262 = load i64* %261, align 8
  %263 = add i64 %260, %262
  %264 = add i64 %263, 2101248
  %265 = getelementptr inbounds double addrspace(1)* %4, i64 %264
  store double %258, double addrspace(1)* %265, align 8
  %266 = fmul double %25, 6.660000e+00
  %267 = fsub double 0x40565546441C8F83, %266
  %268 = fmul double %28, 0x40AB850888F861A6
  %269 = fsub double %267, %268
  %270 = call double @_Z3expd(double %269) nounwind
  %271 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %272 = load i64* %271, align 8
  %273 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %274 = load i64* %273, align 8
  %275 = add i64 %272, %274
  %276 = add i64 %275, 2211840
  %277 = getelementptr inbounds double addrspace(1)* %4, i64 %276
  store double %270, double addrspace(1)* %277, align 8
  %check.WI.iter.i = icmp ult i64 %CurrWI..0.i, %16
  br i1 %check.WI.iter.i, label %thenBB.i, label %__ratt10_kernel_separated_args.exit

thenBB.i:                                         ; preds = %SyncBB1.i
  %"CurrWI++.i" = add nuw i64 %CurrWI..0.i, 1
  br label %SyncBB1.i

__ratt10_kernel_separated_args.exit:              ; preds = %SyncBB1.i
  ret void
}

define void @__Vectorized_.ratt10_kernel(i8* %pBuffer) {
entry:
  %0 = bitcast i8* %pBuffer to double addrspace(1)**
  %1 = load double addrspace(1)** %0, align 8
  %2 = getelementptr i8* %pBuffer, i64 8
  %3 = bitcast i8* %2 to double addrspace(1)**
  %4 = load double addrspace(1)** %3, align 8
  %5 = getelementptr i8* %pBuffer, i64 16
  %6 = bitcast i8* %5 to double*
  %7 = load double* %6, align 8
  %8 = getelementptr i8* %pBuffer, i64 48
  %9 = bitcast i8* %8 to %struct.PaddedDimId**
  %10 = load %struct.PaddedDimId** %9, align 8
  %11 = getelementptr i8* %pBuffer, i64 56
  %12 = bitcast i8* %11 to %struct.PaddedDimId**
  %13 = load %struct.PaddedDimId** %12, align 8
  %14 = getelementptr i8* %pBuffer, i64 72
  %15 = bitcast i8* %14 to i64*
  %16 = load i64* %15, align 8
  %temp.i = insertelement <16 x double> undef, double %7, i32 0
  %vector.i = shufflevector <16 x double> %temp.i, <16 x double> undef, <16 x i32> zeroinitializer
  br label %SyncBB.i

SyncBB.i:                                         ; preds = %thenBB.i, %entry
  %CurrWI..0.i = phi i64 [ 0, %entry ], [ %"CurrWI++.i", %thenBB.i ]
  %17 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %18 = load i64* %17, align 8
  %19 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %20 = load i64* %19, align 8
  %21 = add i64 %18, %20
  %22 = getelementptr inbounds double addrspace(1)* %1, i64 %21
  %ptrTypeCast.i = bitcast double addrspace(1)* %22 to <16 x double> addrspace(1)*
  %23 = load <16 x double> addrspace(1)* %ptrTypeCast.i, align 8
  %24 = fmul <16 x double> %23, %vector.i
  %extract16.i = extractelement <16 x double> %24, i32 0
  %extract17.i = extractelement <16 x double> %24, i32 1
  %extract18.i = extractelement <16 x double> %24, i32 2
  %extract19.i = extractelement <16 x double> %24, i32 3
  %extract20.i = extractelement <16 x double> %24, i32 4
  %extract21.i = extractelement <16 x double> %24, i32 5
  %extract22.i = extractelement <16 x double> %24, i32 6
  %extract23.i = extractelement <16 x double> %24, i32 7
  %extract24.i = extractelement <16 x double> %24, i32 8
  %extract25.i = extractelement <16 x double> %24, i32 9
  %extract26.i = extractelement <16 x double> %24, i32 10
  %extract27.i = extractelement <16 x double> %24, i32 11
  %extract28.i = extractelement <16 x double> %24, i32 12
  %extract29.i = extractelement <16 x double> %24, i32 13
  %extract30.i = extractelement <16 x double> %24, i32 14
  %extract31.i = extractelement <16 x double> %24, i32 15
  %25 = call double @_Z3logd(double %extract16.i) nounwind
  %26 = call double @_Z3logd(double %extract17.i) nounwind
  %27 = call double @_Z3logd(double %extract18.i) nounwind
  %28 = call double @_Z3logd(double %extract19.i) nounwind
  %29 = call double @_Z3logd(double %extract20.i) nounwind
  %30 = call double @_Z3logd(double %extract21.i) nounwind
  %31 = call double @_Z3logd(double %extract22.i) nounwind
  %32 = call double @_Z3logd(double %extract23.i) nounwind
  %33 = call double @_Z3logd(double %extract24.i) nounwind
  %34 = call double @_Z3logd(double %extract25.i) nounwind
  %35 = call double @_Z3logd(double %extract26.i) nounwind
  %36 = call double @_Z3logd(double %extract27.i) nounwind
  %37 = call double @_Z3logd(double %extract28.i) nounwind
  %38 = call double @_Z3logd(double %extract29.i) nounwind
  %39 = call double @_Z3logd(double %extract30.i) nounwind
  %40 = call double @_Z3logd(double %extract31.i) nounwind
  %temp.vect.i = insertelement <16 x double> undef, double %25, i32 0
  %temp.vect32.i = insertelement <16 x double> %temp.vect.i, double %26, i32 1
  %temp.vect33.i = insertelement <16 x double> %temp.vect32.i, double %27, i32 2
  %temp.vect34.i = insertelement <16 x double> %temp.vect33.i, double %28, i32 3
  %temp.vect35.i = insertelement <16 x double> %temp.vect34.i, double %29, i32 4
  %temp.vect36.i = insertelement <16 x double> %temp.vect35.i, double %30, i32 5
  %temp.vect37.i = insertelement <16 x double> %temp.vect36.i, double %31, i32 6
  %temp.vect38.i = insertelement <16 x double> %temp.vect37.i, double %32, i32 7
  %temp.vect39.i = insertelement <16 x double> %temp.vect38.i, double %33, i32 8
  %temp.vect40.i = insertelement <16 x double> %temp.vect39.i, double %34, i32 9
  %temp.vect41.i = insertelement <16 x double> %temp.vect40.i, double %35, i32 10
  %temp.vect42.i = insertelement <16 x double> %temp.vect41.i, double %36, i32 11
  %temp.vect43.i = insertelement <16 x double> %temp.vect42.i, double %37, i32 12
  %temp.vect44.i = insertelement <16 x double> %temp.vect43.i, double %38, i32 13
  %temp.vect45.i = insertelement <16 x double> %temp.vect44.i, double %39, i32 14
  %temp.vect46.i = insertelement <16 x double> %temp.vect45.i, double %40, i32 15
  %41 = fmul <16 x double> %temp.vect46.i, <double 9.000000e-01, double 9.000000e-01, double 9.000000e-01, double 9.000000e-01, double 9.000000e-01, double 9.000000e-01, double 9.000000e-01, double 9.000000e-01, double 9.000000e-01, double 9.000000e-01, double 9.000000e-01, double 9.000000e-01, double 9.000000e-01, double 9.000000e-01, double 9.000000e-01, double 9.000000e-01>
  %42 = fsub <16 x double> <double 0x404523C4B7549584, double 0x404523C4B7549584, double 0x404523C4B7549584, double 0x404523C4B7549584, double 0x404523C4B7549584, double 0x404523C4B7549584, double 0x404523C4B7549584, double 0x404523C4B7549584, double 0x404523C4B7549584, double 0x404523C4B7549584, double 0x404523C4B7549584, double 0x404523C4B7549584, double 0x404523C4B7549584, double 0x404523C4B7549584, double 0x404523C4B7549584, double 0x404523C4B7549584>, %41
  %43 = fdiv <16 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %24
  %44 = fmul <16 x double> %43, <double 0x408ABBBF266BA494, double 0x408ABBBF266BA494, double 0x408ABBBF266BA494, double 0x408ABBBF266BA494, double 0x408ABBBF266BA494, double 0x408ABBBF266BA494, double 0x408ABBBF266BA494, double 0x408ABBBF266BA494, double 0x408ABBBF266BA494, double 0x408ABBBF266BA494, double 0x408ABBBF266BA494, double 0x408ABBBF266BA494, double 0x408ABBBF266BA494, double 0x408ABBBF266BA494, double 0x408ABBBF266BA494, double 0x408ABBBF266BA494>
  %45 = fadd <16 x double> %42, %44
  %extract47.i = extractelement <16 x double> %45, i32 0
  %extract48.i = extractelement <16 x double> %45, i32 1
  %extract49.i = extractelement <16 x double> %45, i32 2
  %extract50.i = extractelement <16 x double> %45, i32 3
  %extract51.i = extractelement <16 x double> %45, i32 4
  %extract52.i = extractelement <16 x double> %45, i32 5
  %extract53.i = extractelement <16 x double> %45, i32 6
  %extract54.i = extractelement <16 x double> %45, i32 7
  %extract55.i = extractelement <16 x double> %45, i32 8
  %extract56.i = extractelement <16 x double> %45, i32 9
  %extract57.i = extractelement <16 x double> %45, i32 10
  %extract58.i = extractelement <16 x double> %45, i32 11
  %extract59.i = extractelement <16 x double> %45, i32 12
  %extract60.i = extractelement <16 x double> %45, i32 13
  %extract61.i = extractelement <16 x double> %45, i32 14
  %extract62.i = extractelement <16 x double> %45, i32 15
  %46 = call double @_Z3expd(double %extract47.i) nounwind
  %47 = call double @_Z3expd(double %extract48.i) nounwind
  %48 = call double @_Z3expd(double %extract49.i) nounwind
  %49 = call double @_Z3expd(double %extract50.i) nounwind
  %50 = call double @_Z3expd(double %extract51.i) nounwind
  %51 = call double @_Z3expd(double %extract52.i) nounwind
  %52 = call double @_Z3expd(double %extract53.i) nounwind
  %53 = call double @_Z3expd(double %extract54.i) nounwind
  %54 = call double @_Z3expd(double %extract55.i) nounwind
  %55 = call double @_Z3expd(double %extract56.i) nounwind
  %56 = call double @_Z3expd(double %extract57.i) nounwind
  %57 = call double @_Z3expd(double %extract58.i) nounwind
  %58 = call double @_Z3expd(double %extract59.i) nounwind
  %59 = call double @_Z3expd(double %extract60.i) nounwind
  %60 = call double @_Z3expd(double %extract61.i) nounwind
  %61 = call double @_Z3expd(double %extract62.i) nounwind
  %temp.vect82.i = insertelement <16 x double> undef, double %46, i32 0
  %temp.vect83.i = insertelement <16 x double> %temp.vect82.i, double %47, i32 1
  %temp.vect84.i = insertelement <16 x double> %temp.vect83.i, double %48, i32 2
  %temp.vect85.i = insertelement <16 x double> %temp.vect84.i, double %49, i32 3
  %temp.vect86.i = insertelement <16 x double> %temp.vect85.i, double %50, i32 4
  %temp.vect87.i = insertelement <16 x double> %temp.vect86.i, double %51, i32 5
  %temp.vect88.i = insertelement <16 x double> %temp.vect87.i, double %52, i32 6
  %temp.vect89.i = insertelement <16 x double> %temp.vect88.i, double %53, i32 7
  %temp.vect90.i = insertelement <16 x double> %temp.vect89.i, double %54, i32 8
  %temp.vect91.i = insertelement <16 x double> %temp.vect90.i, double %55, i32 9
  %temp.vect92.i = insertelement <16 x double> %temp.vect91.i, double %56, i32 10
  %temp.vect93.i = insertelement <16 x double> %temp.vect92.i, double %57, i32 11
  %temp.vect94.i = insertelement <16 x double> %temp.vect93.i, double %58, i32 12
  %temp.vect95.i = insertelement <16 x double> %temp.vect94.i, double %59, i32 13
  %temp.vect96.i = insertelement <16 x double> %temp.vect95.i, double %60, i32 14
  %temp.vect97.i = insertelement <16 x double> %temp.vect96.i, double %61, i32 15
  %62 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %63 = load i64* %62, align 8
  %64 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %65 = load i64* %64, align 8
  %66 = add i64 %63, %65
  %67 = getelementptr inbounds double addrspace(1)* %4, i64 %66
  %ptrTypeCast81.i = bitcast double addrspace(1)* %67 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect97.i, <16 x double> addrspace(1)* %ptrTypeCast81.i, align 8
  %68 = fmul <16 x double> %temp.vect46.i, <double 3.420000e+00, double 3.420000e+00, double 3.420000e+00, double 3.420000e+00, double 3.420000e+00, double 3.420000e+00, double 3.420000e+00, double 3.420000e+00, double 3.420000e+00, double 3.420000e+00, double 3.420000e+00, double 3.420000e+00, double 3.420000e+00, double 3.420000e+00, double 3.420000e+00, double 3.420000e+00>
  %69 = fsub <16 x double> <double 0x404FE5858E49DA3F, double 0x404FE5858E49DA3F, double 0x404FE5858E49DA3F, double 0x404FE5858E49DA3F, double 0x404FE5858E49DA3F, double 0x404FE5858E49DA3F, double 0x404FE5858E49DA3F, double 0x404FE5858E49DA3F, double 0x404FE5858E49DA3F, double 0x404FE5858E49DA3F, double 0x404FE5858E49DA3F, double 0x404FE5858E49DA3F, double 0x404FE5858E49DA3F, double 0x404FE5858E49DA3F, double 0x404FE5858E49DA3F, double 0x404FE5858E49DA3F>, %68
  %70 = fmul <16 x double> %43, <double 0x40E4B9CA6DC5D639, double 0x40E4B9CA6DC5D639, double 0x40E4B9CA6DC5D639, double 0x40E4B9CA6DC5D639, double 0x40E4B9CA6DC5D639, double 0x40E4B9CA6DC5D639, double 0x40E4B9CA6DC5D639, double 0x40E4B9CA6DC5D639, double 0x40E4B9CA6DC5D639, double 0x40E4B9CA6DC5D639, double 0x40E4B9CA6DC5D639, double 0x40E4B9CA6DC5D639, double 0x40E4B9CA6DC5D639, double 0x40E4B9CA6DC5D639, double 0x40E4B9CA6DC5D639, double 0x40E4B9CA6DC5D639>
  %71 = fsub <16 x double> %69, %70
  %extract98.i = extractelement <16 x double> %71, i32 0
  %extract99.i = extractelement <16 x double> %71, i32 1
  %extract100.i = extractelement <16 x double> %71, i32 2
  %extract101.i = extractelement <16 x double> %71, i32 3
  %extract102.i = extractelement <16 x double> %71, i32 4
  %extract103.i = extractelement <16 x double> %71, i32 5
  %extract104.i = extractelement <16 x double> %71, i32 6
  %extract105.i = extractelement <16 x double> %71, i32 7
  %extract106.i = extractelement <16 x double> %71, i32 8
  %extract107.i = extractelement <16 x double> %71, i32 9
  %extract108.i = extractelement <16 x double> %71, i32 10
  %extract109.i = extractelement <16 x double> %71, i32 11
  %extract110.i = extractelement <16 x double> %71, i32 12
  %extract111.i = extractelement <16 x double> %71, i32 13
  %extract112.i = extractelement <16 x double> %71, i32 14
  %extract113.i = extractelement <16 x double> %71, i32 15
  %72 = call double @_Z3expd(double %extract98.i) nounwind
  %73 = call double @_Z3expd(double %extract99.i) nounwind
  %74 = call double @_Z3expd(double %extract100.i) nounwind
  %75 = call double @_Z3expd(double %extract101.i) nounwind
  %76 = call double @_Z3expd(double %extract102.i) nounwind
  %77 = call double @_Z3expd(double %extract103.i) nounwind
  %78 = call double @_Z3expd(double %extract104.i) nounwind
  %79 = call double @_Z3expd(double %extract105.i) nounwind
  %80 = call double @_Z3expd(double %extract106.i) nounwind
  %81 = call double @_Z3expd(double %extract107.i) nounwind
  %82 = call double @_Z3expd(double %extract108.i) nounwind
  %83 = call double @_Z3expd(double %extract109.i) nounwind
  %84 = call double @_Z3expd(double %extract110.i) nounwind
  %85 = call double @_Z3expd(double %extract111.i) nounwind
  %86 = call double @_Z3expd(double %extract112.i) nounwind
  %87 = call double @_Z3expd(double %extract113.i) nounwind
  %temp.vect133.i = insertelement <16 x double> undef, double %72, i32 0
  %temp.vect134.i = insertelement <16 x double> %temp.vect133.i, double %73, i32 1
  %temp.vect135.i = insertelement <16 x double> %temp.vect134.i, double %74, i32 2
  %temp.vect136.i = insertelement <16 x double> %temp.vect135.i, double %75, i32 3
  %temp.vect137.i = insertelement <16 x double> %temp.vect136.i, double %76, i32 4
  %temp.vect138.i = insertelement <16 x double> %temp.vect137.i, double %77, i32 5
  %temp.vect139.i = insertelement <16 x double> %temp.vect138.i, double %78, i32 6
  %temp.vect140.i = insertelement <16 x double> %temp.vect139.i, double %79, i32 7
  %temp.vect141.i = insertelement <16 x double> %temp.vect140.i, double %80, i32 8
  %temp.vect142.i = insertelement <16 x double> %temp.vect141.i, double %81, i32 9
  %temp.vect143.i = insertelement <16 x double> %temp.vect142.i, double %82, i32 10
  %temp.vect144.i = insertelement <16 x double> %temp.vect143.i, double %83, i32 11
  %temp.vect145.i = insertelement <16 x double> %temp.vect144.i, double %84, i32 12
  %temp.vect146.i = insertelement <16 x double> %temp.vect145.i, double %85, i32 13
  %temp.vect147.i = insertelement <16 x double> %temp.vect146.i, double %86, i32 14
  %temp.vect148.i = insertelement <16 x double> %temp.vect147.i, double %87, i32 15
  %88 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %89 = load i64* %88, align 8
  %90 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %91 = load i64* %90, align 8
  %92 = add i64 %89, %91
  %extract116.i = add i64 %92, 110592
  %93 = getelementptr inbounds double addrspace(1)* %4, i64 %extract116.i
  %ptrTypeCast132.i = bitcast double addrspace(1)* %93 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect148.i, <16 x double> addrspace(1)* %ptrTypeCast132.i, align 8
  %94 = fmul <16 x double> %temp.vect46.i, <double 3.740000e+00, double 3.740000e+00, double 3.740000e+00, double 3.740000e+00, double 3.740000e+00, double 3.740000e+00, double 3.740000e+00, double 3.740000e+00, double 3.740000e+00, double 3.740000e+00, double 3.740000e+00, double 3.740000e+00, double 3.740000e+00, double 3.740000e+00, double 3.740000e+00, double 3.740000e+00>
  %95 = fsub <16 x double> <double 0x40505D9028D78F9E, double 0x40505D9028D78F9E, double 0x40505D9028D78F9E, double 0x40505D9028D78F9E, double 0x40505D9028D78F9E, double 0x40505D9028D78F9E, double 0x40505D9028D78F9E, double 0x40505D9028D78F9E, double 0x40505D9028D78F9E, double 0x40505D9028D78F9E, double 0x40505D9028D78F9E, double 0x40505D9028D78F9E, double 0x40505D9028D78F9E, double 0x40505D9028D78F9E, double 0x40505D9028D78F9E, double 0x40505D9028D78F9E>, %94
  %96 = fmul <16 x double> %43, <double 0x408E71D1DB445ED5, double 0x408E71D1DB445ED5, double 0x408E71D1DB445ED5, double 0x408E71D1DB445ED5, double 0x408E71D1DB445ED5, double 0x408E71D1DB445ED5, double 0x408E71D1DB445ED5, double 0x408E71D1DB445ED5, double 0x408E71D1DB445ED5, double 0x408E71D1DB445ED5, double 0x408E71D1DB445ED5, double 0x408E71D1DB445ED5, double 0x408E71D1DB445ED5, double 0x408E71D1DB445ED5, double 0x408E71D1DB445ED5, double 0x408E71D1DB445ED5>
  %97 = fsub <16 x double> %95, %96
  %extract149.i = extractelement <16 x double> %97, i32 0
  %extract150.i = extractelement <16 x double> %97, i32 1
  %extract151.i = extractelement <16 x double> %97, i32 2
  %extract152.i = extractelement <16 x double> %97, i32 3
  %extract153.i = extractelement <16 x double> %97, i32 4
  %extract154.i = extractelement <16 x double> %97, i32 5
  %extract155.i = extractelement <16 x double> %97, i32 6
  %extract156.i = extractelement <16 x double> %97, i32 7
  %extract157.i = extractelement <16 x double> %97, i32 8
  %extract158.i = extractelement <16 x double> %97, i32 9
  %extract159.i = extractelement <16 x double> %97, i32 10
  %extract160.i = extractelement <16 x double> %97, i32 11
  %extract161.i = extractelement <16 x double> %97, i32 12
  %extract162.i = extractelement <16 x double> %97, i32 13
  %extract163.i = extractelement <16 x double> %97, i32 14
  %extract164.i = extractelement <16 x double> %97, i32 15
  %98 = call double @_Z3expd(double %extract149.i) nounwind
  %99 = call double @_Z3expd(double %extract150.i) nounwind
  %100 = call double @_Z3expd(double %extract151.i) nounwind
  %101 = call double @_Z3expd(double %extract152.i) nounwind
  %102 = call double @_Z3expd(double %extract153.i) nounwind
  %103 = call double @_Z3expd(double %extract154.i) nounwind
  %104 = call double @_Z3expd(double %extract155.i) nounwind
  %105 = call double @_Z3expd(double %extract156.i) nounwind
  %106 = call double @_Z3expd(double %extract157.i) nounwind
  %107 = call double @_Z3expd(double %extract158.i) nounwind
  %108 = call double @_Z3expd(double %extract159.i) nounwind
  %109 = call double @_Z3expd(double %extract160.i) nounwind
  %110 = call double @_Z3expd(double %extract161.i) nounwind
  %111 = call double @_Z3expd(double %extract162.i) nounwind
  %112 = call double @_Z3expd(double %extract163.i) nounwind
  %113 = call double @_Z3expd(double %extract164.i) nounwind
  %temp.vect184.i = insertelement <16 x double> undef, double %98, i32 0
  %temp.vect185.i = insertelement <16 x double> %temp.vect184.i, double %99, i32 1
  %temp.vect186.i = insertelement <16 x double> %temp.vect185.i, double %100, i32 2
  %temp.vect187.i = insertelement <16 x double> %temp.vect186.i, double %101, i32 3
  %temp.vect188.i = insertelement <16 x double> %temp.vect187.i, double %102, i32 4
  %temp.vect189.i = insertelement <16 x double> %temp.vect188.i, double %103, i32 5
  %temp.vect190.i = insertelement <16 x double> %temp.vect189.i, double %104, i32 6
  %temp.vect191.i = insertelement <16 x double> %temp.vect190.i, double %105, i32 7
  %temp.vect192.i = insertelement <16 x double> %temp.vect191.i, double %106, i32 8
  %temp.vect193.i = insertelement <16 x double> %temp.vect192.i, double %107, i32 9
  %temp.vect194.i = insertelement <16 x double> %temp.vect193.i, double %108, i32 10
  %temp.vect195.i = insertelement <16 x double> %temp.vect194.i, double %109, i32 11
  %temp.vect196.i = insertelement <16 x double> %temp.vect195.i, double %110, i32 12
  %temp.vect197.i = insertelement <16 x double> %temp.vect196.i, double %111, i32 13
  %temp.vect198.i = insertelement <16 x double> %temp.vect197.i, double %112, i32 14
  %temp.vect199.i = insertelement <16 x double> %temp.vect198.i, double %113, i32 15
  %114 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %115 = load i64* %114, align 8
  %116 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %117 = load i64* %116, align 8
  %118 = add i64 %115, %117
  %extract167.i = add i64 %118, 221184
  %119 = getelementptr inbounds double addrspace(1)* %4, i64 %extract167.i
  %ptrTypeCast183.i = bitcast double addrspace(1)* %119 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect199.i, <16 x double> addrspace(1)* %ptrTypeCast183.i, align 8
  %120 = fmul <16 x double> %temp.vect46.i, <double 2.570000e+00, double 2.570000e+00, double 2.570000e+00, double 2.570000e+00, double 2.570000e+00, double 2.570000e+00, double 2.570000e+00, double 2.570000e+00, double 2.570000e+00, double 2.570000e+00, double 2.570000e+00, double 2.570000e+00, double 2.570000e+00, double 2.570000e+00, double 2.570000e+00, double 2.570000e+00>
  %121 = fsub <16 x double> <double 0x404BC7F46D24C689, double 0x404BC7F46D24C689, double 0x404BC7F46D24C689, double 0x404BC7F46D24C689, double 0x404BC7F46D24C689, double 0x404BC7F46D24C689, double 0x404BC7F46D24C689, double 0x404BC7F46D24C689, double 0x404BC7F46D24C689, double 0x404BC7F46D24C689, double 0x404BC7F46D24C689, double 0x404BC7F46D24C689, double 0x404BC7F46D24C689, double 0x404BC7F46D24C689, double 0x404BC7F46D24C689, double 0x404BC7F46D24C689>, %120
  %122 = fmul <16 x double> %43, <double 0x408668AB85A4F00F, double 0x408668AB85A4F00F, double 0x408668AB85A4F00F, double 0x408668AB85A4F00F, double 0x408668AB85A4F00F, double 0x408668AB85A4F00F, double 0x408668AB85A4F00F, double 0x408668AB85A4F00F, double 0x408668AB85A4F00F, double 0x408668AB85A4F00F, double 0x408668AB85A4F00F, double 0x408668AB85A4F00F, double 0x408668AB85A4F00F, double 0x408668AB85A4F00F, double 0x408668AB85A4F00F, double 0x408668AB85A4F00F>
  %123 = fsub <16 x double> %121, %122
  %extract200.i = extractelement <16 x double> %123, i32 0
  %extract201.i = extractelement <16 x double> %123, i32 1
  %extract202.i = extractelement <16 x double> %123, i32 2
  %extract203.i = extractelement <16 x double> %123, i32 3
  %extract204.i = extractelement <16 x double> %123, i32 4
  %extract205.i = extractelement <16 x double> %123, i32 5
  %extract206.i = extractelement <16 x double> %123, i32 6
  %extract207.i = extractelement <16 x double> %123, i32 7
  %extract208.i = extractelement <16 x double> %123, i32 8
  %extract209.i = extractelement <16 x double> %123, i32 9
  %extract210.i = extractelement <16 x double> %123, i32 10
  %extract211.i = extractelement <16 x double> %123, i32 11
  %extract212.i = extractelement <16 x double> %123, i32 12
  %extract213.i = extractelement <16 x double> %123, i32 13
  %extract214.i = extractelement <16 x double> %123, i32 14
  %extract215.i = extractelement <16 x double> %123, i32 15
  %124 = call double @_Z3expd(double %extract200.i) nounwind
  %125 = call double @_Z3expd(double %extract201.i) nounwind
  %126 = call double @_Z3expd(double %extract202.i) nounwind
  %127 = call double @_Z3expd(double %extract203.i) nounwind
  %128 = call double @_Z3expd(double %extract204.i) nounwind
  %129 = call double @_Z3expd(double %extract205.i) nounwind
  %130 = call double @_Z3expd(double %extract206.i) nounwind
  %131 = call double @_Z3expd(double %extract207.i) nounwind
  %132 = call double @_Z3expd(double %extract208.i) nounwind
  %133 = call double @_Z3expd(double %extract209.i) nounwind
  %134 = call double @_Z3expd(double %extract210.i) nounwind
  %135 = call double @_Z3expd(double %extract211.i) nounwind
  %136 = call double @_Z3expd(double %extract212.i) nounwind
  %137 = call double @_Z3expd(double %extract213.i) nounwind
  %138 = call double @_Z3expd(double %extract214.i) nounwind
  %139 = call double @_Z3expd(double %extract215.i) nounwind
  %temp.vect235.i = insertelement <16 x double> undef, double %124, i32 0
  %temp.vect236.i = insertelement <16 x double> %temp.vect235.i, double %125, i32 1
  %temp.vect237.i = insertelement <16 x double> %temp.vect236.i, double %126, i32 2
  %temp.vect238.i = insertelement <16 x double> %temp.vect237.i, double %127, i32 3
  %temp.vect239.i = insertelement <16 x double> %temp.vect238.i, double %128, i32 4
  %temp.vect240.i = insertelement <16 x double> %temp.vect239.i, double %129, i32 5
  %temp.vect241.i = insertelement <16 x double> %temp.vect240.i, double %130, i32 6
  %temp.vect242.i = insertelement <16 x double> %temp.vect241.i, double %131, i32 7
  %temp.vect243.i = insertelement <16 x double> %temp.vect242.i, double %132, i32 8
  %temp.vect244.i = insertelement <16 x double> %temp.vect243.i, double %133, i32 9
  %temp.vect245.i = insertelement <16 x double> %temp.vect244.i, double %134, i32 10
  %temp.vect246.i = insertelement <16 x double> %temp.vect245.i, double %135, i32 11
  %temp.vect247.i = insertelement <16 x double> %temp.vect246.i, double %136, i32 12
  %temp.vect248.i = insertelement <16 x double> %temp.vect247.i, double %137, i32 13
  %temp.vect249.i = insertelement <16 x double> %temp.vect248.i, double %138, i32 14
  %temp.vect250.i = insertelement <16 x double> %temp.vect249.i, double %139, i32 15
  %140 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %141 = load i64* %140, align 8
  %142 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %143 = load i64* %142, align 8
  %144 = add i64 %141, %143
  %extract218.i = add i64 %144, 331776
  %145 = getelementptr inbounds double addrspace(1)* %4, i64 %extract218.i
  %ptrTypeCast234.i = bitcast double addrspace(1)* %145 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect250.i, <16 x double> addrspace(1)* %ptrTypeCast234.i, align 8
  %146 = fmul <16 x double> %temp.vect46.i, <double 3.140000e+00, double 3.140000e+00, double 3.140000e+00, double 3.140000e+00, double 3.140000e+00, double 3.140000e+00, double 3.140000e+00, double 3.140000e+00, double 3.140000e+00, double 3.140000e+00, double 3.140000e+00, double 3.140000e+00, double 3.140000e+00, double 3.140000e+00, double 3.140000e+00, double 3.140000e+00>
  %147 = fsub <16 x double> <double 0x404FAA9E0CC5E120, double 0x404FAA9E0CC5E120, double 0x404FAA9E0CC5E120, double 0x404FAA9E0CC5E120, double 0x404FAA9E0CC5E120, double 0x404FAA9E0CC5E120, double 0x404FAA9E0CC5E120, double 0x404FAA9E0CC5E120, double 0x404FAA9E0CC5E120, double 0x404FAA9E0CC5E120, double 0x404FAA9E0CC5E120, double 0x404FAA9E0CC5E120, double 0x404FAA9E0CC5E120, double 0x404FAA9E0CC5E120, double 0x404FAA9E0CC5E120, double 0x404FAA9E0CC5E120>, %146
  %148 = fmul <16 x double> %43, <double 0x408357A6E9FF0CBB, double 0x408357A6E9FF0CBB, double 0x408357A6E9FF0CBB, double 0x408357A6E9FF0CBB, double 0x408357A6E9FF0CBB, double 0x408357A6E9FF0CBB, double 0x408357A6E9FF0CBB, double 0x408357A6E9FF0CBB, double 0x408357A6E9FF0CBB, double 0x408357A6E9FF0CBB, double 0x408357A6E9FF0CBB, double 0x408357A6E9FF0CBB, double 0x408357A6E9FF0CBB, double 0x408357A6E9FF0CBB, double 0x408357A6E9FF0CBB, double 0x408357A6E9FF0CBB>
  %149 = fsub <16 x double> %147, %148
  %extract251.i = extractelement <16 x double> %149, i32 0
  %extract252.i = extractelement <16 x double> %149, i32 1
  %extract253.i = extractelement <16 x double> %149, i32 2
  %extract254.i = extractelement <16 x double> %149, i32 3
  %extract255.i = extractelement <16 x double> %149, i32 4
  %extract256.i = extractelement <16 x double> %149, i32 5
  %extract257.i = extractelement <16 x double> %149, i32 6
  %extract258.i = extractelement <16 x double> %149, i32 7
  %extract259.i = extractelement <16 x double> %149, i32 8
  %extract260.i = extractelement <16 x double> %149, i32 9
  %extract261.i = extractelement <16 x double> %149, i32 10
  %extract262.i = extractelement <16 x double> %149, i32 11
  %extract263.i = extractelement <16 x double> %149, i32 12
  %extract264.i = extractelement <16 x double> %149, i32 13
  %extract265.i = extractelement <16 x double> %149, i32 14
  %extract266.i = extractelement <16 x double> %149, i32 15
  %150 = call double @_Z3expd(double %extract251.i) nounwind
  %151 = call double @_Z3expd(double %extract252.i) nounwind
  %152 = call double @_Z3expd(double %extract253.i) nounwind
  %153 = call double @_Z3expd(double %extract254.i) nounwind
  %154 = call double @_Z3expd(double %extract255.i) nounwind
  %155 = call double @_Z3expd(double %extract256.i) nounwind
  %156 = call double @_Z3expd(double %extract257.i) nounwind
  %157 = call double @_Z3expd(double %extract258.i) nounwind
  %158 = call double @_Z3expd(double %extract259.i) nounwind
  %159 = call double @_Z3expd(double %extract260.i) nounwind
  %160 = call double @_Z3expd(double %extract261.i) nounwind
  %161 = call double @_Z3expd(double %extract262.i) nounwind
  %162 = call double @_Z3expd(double %extract263.i) nounwind
  %163 = call double @_Z3expd(double %extract264.i) nounwind
  %164 = call double @_Z3expd(double %extract265.i) nounwind
  %165 = call double @_Z3expd(double %extract266.i) nounwind
  %temp.vect286.i = insertelement <16 x double> undef, double %150, i32 0
  %temp.vect287.i = insertelement <16 x double> %temp.vect286.i, double %151, i32 1
  %temp.vect288.i = insertelement <16 x double> %temp.vect287.i, double %152, i32 2
  %temp.vect289.i = insertelement <16 x double> %temp.vect288.i, double %153, i32 3
  %temp.vect290.i = insertelement <16 x double> %temp.vect289.i, double %154, i32 4
  %temp.vect291.i = insertelement <16 x double> %temp.vect290.i, double %155, i32 5
  %temp.vect292.i = insertelement <16 x double> %temp.vect291.i, double %156, i32 6
  %temp.vect293.i = insertelement <16 x double> %temp.vect292.i, double %157, i32 7
  %temp.vect294.i = insertelement <16 x double> %temp.vect293.i, double %158, i32 8
  %temp.vect295.i = insertelement <16 x double> %temp.vect294.i, double %159, i32 9
  %temp.vect296.i = insertelement <16 x double> %temp.vect295.i, double %160, i32 10
  %temp.vect297.i = insertelement <16 x double> %temp.vect296.i, double %161, i32 11
  %temp.vect298.i = insertelement <16 x double> %temp.vect297.i, double %162, i32 12
  %temp.vect299.i = insertelement <16 x double> %temp.vect298.i, double %163, i32 13
  %temp.vect300.i = insertelement <16 x double> %temp.vect299.i, double %164, i32 14
  %temp.vect301.i = insertelement <16 x double> %temp.vect300.i, double %165, i32 15
  %166 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %167 = load i64* %166, align 8
  %168 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %169 = load i64* %168, align 8
  %170 = add i64 %167, %169
  %extract269.i = add i64 %170, 442368
  %171 = getelementptr inbounds double addrspace(1)* %4, i64 %extract269.i
  %ptrTypeCast285.i = bitcast double addrspace(1)* %171 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect301.i, <16 x double> addrspace(1)* %ptrTypeCast285.i, align 8
  %172 = fmul <16 x double> %temp.vect46.i, <double 5.110000e+00, double 5.110000e+00, double 5.110000e+00, double 5.110000e+00, double 5.110000e+00, double 5.110000e+00, double 5.110000e+00, double 5.110000e+00, double 5.110000e+00, double 5.110000e+00, double 5.110000e+00, double 5.110000e+00, double 5.110000e+00, double 5.110000e+00, double 5.110000e+00, double 5.110000e+00>
  %173 = fsub <16 x double> <double 0x40533E63EE5181D3, double 0x40533E63EE5181D3, double 0x40533E63EE5181D3, double 0x40533E63EE5181D3, double 0x40533E63EE5181D3, double 0x40533E63EE5181D3, double 0x40533E63EE5181D3, double 0x40533E63EE5181D3, double 0x40533E63EE5181D3, double 0x40533E63EE5181D3, double 0x40533E63EE5181D3, double 0x40533E63EE5181D3, double 0x40533E63EE5181D3, double 0x40533E63EE5181D3, double 0x40533E63EE5181D3, double 0x40533E63EE5181D3>, %172
  %174 = fmul <16 x double> %43, <double 0x40ABE4A4FF43419E, double 0x40ABE4A4FF43419E, double 0x40ABE4A4FF43419E, double 0x40ABE4A4FF43419E, double 0x40ABE4A4FF43419E, double 0x40ABE4A4FF43419E, double 0x40ABE4A4FF43419E, double 0x40ABE4A4FF43419E, double 0x40ABE4A4FF43419E, double 0x40ABE4A4FF43419E, double 0x40ABE4A4FF43419E, double 0x40ABE4A4FF43419E, double 0x40ABE4A4FF43419E, double 0x40ABE4A4FF43419E, double 0x40ABE4A4FF43419E, double 0x40ABE4A4FF43419E>
  %175 = fsub <16 x double> %173, %174
  %extract302.i = extractelement <16 x double> %175, i32 0
  %extract303.i = extractelement <16 x double> %175, i32 1
  %extract304.i = extractelement <16 x double> %175, i32 2
  %extract305.i = extractelement <16 x double> %175, i32 3
  %extract306.i = extractelement <16 x double> %175, i32 4
  %extract307.i = extractelement <16 x double> %175, i32 5
  %extract308.i = extractelement <16 x double> %175, i32 6
  %extract309.i = extractelement <16 x double> %175, i32 7
  %extract310.i = extractelement <16 x double> %175, i32 8
  %extract311.i = extractelement <16 x double> %175, i32 9
  %extract312.i = extractelement <16 x double> %175, i32 10
  %extract313.i = extractelement <16 x double> %175, i32 11
  %extract314.i = extractelement <16 x double> %175, i32 12
  %extract315.i = extractelement <16 x double> %175, i32 13
  %extract316.i = extractelement <16 x double> %175, i32 14
  %extract317.i = extractelement <16 x double> %175, i32 15
  %176 = call double @_Z3expd(double %extract302.i) nounwind
  %177 = call double @_Z3expd(double %extract303.i) nounwind
  %178 = call double @_Z3expd(double %extract304.i) nounwind
  %179 = call double @_Z3expd(double %extract305.i) nounwind
  %180 = call double @_Z3expd(double %extract306.i) nounwind
  %181 = call double @_Z3expd(double %extract307.i) nounwind
  %182 = call double @_Z3expd(double %extract308.i) nounwind
  %183 = call double @_Z3expd(double %extract309.i) nounwind
  %184 = call double @_Z3expd(double %extract310.i) nounwind
  %185 = call double @_Z3expd(double %extract311.i) nounwind
  %186 = call double @_Z3expd(double %extract312.i) nounwind
  %187 = call double @_Z3expd(double %extract313.i) nounwind
  %188 = call double @_Z3expd(double %extract314.i) nounwind
  %189 = call double @_Z3expd(double %extract315.i) nounwind
  %190 = call double @_Z3expd(double %extract316.i) nounwind
  %191 = call double @_Z3expd(double %extract317.i) nounwind
  %temp.vect337.i = insertelement <16 x double> undef, double %176, i32 0
  %temp.vect338.i = insertelement <16 x double> %temp.vect337.i, double %177, i32 1
  %temp.vect339.i = insertelement <16 x double> %temp.vect338.i, double %178, i32 2
  %temp.vect340.i = insertelement <16 x double> %temp.vect339.i, double %179, i32 3
  %temp.vect341.i = insertelement <16 x double> %temp.vect340.i, double %180, i32 4
  %temp.vect342.i = insertelement <16 x double> %temp.vect341.i, double %181, i32 5
  %temp.vect343.i = insertelement <16 x double> %temp.vect342.i, double %182, i32 6
  %temp.vect344.i = insertelement <16 x double> %temp.vect343.i, double %183, i32 7
  %temp.vect345.i = insertelement <16 x double> %temp.vect344.i, double %184, i32 8
  %temp.vect346.i = insertelement <16 x double> %temp.vect345.i, double %185, i32 9
  %temp.vect347.i = insertelement <16 x double> %temp.vect346.i, double %186, i32 10
  %temp.vect348.i = insertelement <16 x double> %temp.vect347.i, double %187, i32 11
  %temp.vect349.i = insertelement <16 x double> %temp.vect348.i, double %188, i32 12
  %temp.vect350.i = insertelement <16 x double> %temp.vect349.i, double %189, i32 13
  %temp.vect351.i = insertelement <16 x double> %temp.vect350.i, double %190, i32 14
  %temp.vect352.i = insertelement <16 x double> %temp.vect351.i, double %191, i32 15
  %192 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %193 = load i64* %192, align 8
  %194 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %195 = load i64* %194, align 8
  %196 = add i64 %193, %195
  %extract320.i = add i64 %196, 552960
  %197 = getelementptr inbounds double addrspace(1)* %4, i64 %extract320.i
  %ptrTypeCast336.i = bitcast double addrspace(1)* %197 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect352.i, <16 x double> addrspace(1)* %ptrTypeCast336.i, align 8
  %198 = fmul <16 x double> %temp.vect46.i, <double 4.800000e+00, double 4.800000e+00, double 4.800000e+00, double 4.800000e+00, double 4.800000e+00, double 4.800000e+00, double 4.800000e+00, double 4.800000e+00, double 4.800000e+00, double 4.800000e+00, double 4.800000e+00, double 4.800000e+00, double 4.800000e+00, double 4.800000e+00, double 4.800000e+00, double 4.800000e+00>
  %199 = fsub <16 x double> <double 0x4051776CB60BC028, double 0x4051776CB60BC028, double 0x4051776CB60BC028, double 0x4051776CB60BC028, double 0x4051776CB60BC028, double 0x4051776CB60BC028, double 0x4051776CB60BC028, double 0x4051776CB60BC028, double 0x4051776CB60BC028, double 0x4051776CB60BC028, double 0x4051776CB60BC028, double 0x4051776CB60BC028, double 0x4051776CB60BC028, double 0x4051776CB60BC028, double 0x4051776CB60BC028, double 0x4051776CB60BC028>, %198
  %200 = fmul <16 x double> %43, <double 0x40A5DBC4F3775B81, double 0x40A5DBC4F3775B81, double 0x40A5DBC4F3775B81, double 0x40A5DBC4F3775B81, double 0x40A5DBC4F3775B81, double 0x40A5DBC4F3775B81, double 0x40A5DBC4F3775B81, double 0x40A5DBC4F3775B81, double 0x40A5DBC4F3775B81, double 0x40A5DBC4F3775B81, double 0x40A5DBC4F3775B81, double 0x40A5DBC4F3775B81, double 0x40A5DBC4F3775B81, double 0x40A5DBC4F3775B81, double 0x40A5DBC4F3775B81, double 0x40A5DBC4F3775B81>
  %201 = fsub <16 x double> %199, %200
  %extract353.i = extractelement <16 x double> %201, i32 0
  %extract354.i = extractelement <16 x double> %201, i32 1
  %extract355.i = extractelement <16 x double> %201, i32 2
  %extract356.i = extractelement <16 x double> %201, i32 3
  %extract357.i = extractelement <16 x double> %201, i32 4
  %extract358.i = extractelement <16 x double> %201, i32 5
  %extract359.i = extractelement <16 x double> %201, i32 6
  %extract360.i = extractelement <16 x double> %201, i32 7
  %extract361.i = extractelement <16 x double> %201, i32 8
  %extract362.i = extractelement <16 x double> %201, i32 9
  %extract363.i = extractelement <16 x double> %201, i32 10
  %extract364.i = extractelement <16 x double> %201, i32 11
  %extract365.i = extractelement <16 x double> %201, i32 12
  %extract366.i = extractelement <16 x double> %201, i32 13
  %extract367.i = extractelement <16 x double> %201, i32 14
  %extract368.i = extractelement <16 x double> %201, i32 15
  %202 = call double @_Z3expd(double %extract353.i) nounwind
  %203 = call double @_Z3expd(double %extract354.i) nounwind
  %204 = call double @_Z3expd(double %extract355.i) nounwind
  %205 = call double @_Z3expd(double %extract356.i) nounwind
  %206 = call double @_Z3expd(double %extract357.i) nounwind
  %207 = call double @_Z3expd(double %extract358.i) nounwind
  %208 = call double @_Z3expd(double %extract359.i) nounwind
  %209 = call double @_Z3expd(double %extract360.i) nounwind
  %210 = call double @_Z3expd(double %extract361.i) nounwind
  %211 = call double @_Z3expd(double %extract362.i) nounwind
  %212 = call double @_Z3expd(double %extract363.i) nounwind
  %213 = call double @_Z3expd(double %extract364.i) nounwind
  %214 = call double @_Z3expd(double %extract365.i) nounwind
  %215 = call double @_Z3expd(double %extract366.i) nounwind
  %216 = call double @_Z3expd(double %extract367.i) nounwind
  %217 = call double @_Z3expd(double %extract368.i) nounwind
  %temp.vect388.i = insertelement <16 x double> undef, double %202, i32 0
  %temp.vect389.i = insertelement <16 x double> %temp.vect388.i, double %203, i32 1
  %temp.vect390.i = insertelement <16 x double> %temp.vect389.i, double %204, i32 2
  %temp.vect391.i = insertelement <16 x double> %temp.vect390.i, double %205, i32 3
  %temp.vect392.i = insertelement <16 x double> %temp.vect391.i, double %206, i32 4
  %temp.vect393.i = insertelement <16 x double> %temp.vect392.i, double %207, i32 5
  %temp.vect394.i = insertelement <16 x double> %temp.vect393.i, double %208, i32 6
  %temp.vect395.i = insertelement <16 x double> %temp.vect394.i, double %209, i32 7
  %temp.vect396.i = insertelement <16 x double> %temp.vect395.i, double %210, i32 8
  %temp.vect397.i = insertelement <16 x double> %temp.vect396.i, double %211, i32 9
  %temp.vect398.i = insertelement <16 x double> %temp.vect397.i, double %212, i32 10
  %temp.vect399.i = insertelement <16 x double> %temp.vect398.i, double %213, i32 11
  %temp.vect400.i = insertelement <16 x double> %temp.vect399.i, double %214, i32 12
  %temp.vect401.i = insertelement <16 x double> %temp.vect400.i, double %215, i32 13
  %temp.vect402.i = insertelement <16 x double> %temp.vect401.i, double %216, i32 14
  %temp.vect403.i = insertelement <16 x double> %temp.vect402.i, double %217, i32 15
  %218 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %219 = load i64* %218, align 8
  %220 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %221 = load i64* %220, align 8
  %222 = add i64 %219, %221
  %extract371.i = add i64 %222, 663552
  %223 = getelementptr inbounds double addrspace(1)* %4, i64 %extract371.i
  %ptrTypeCast387.i = bitcast double addrspace(1)* %223 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect403.i, <16 x double> addrspace(1)* %ptrTypeCast387.i, align 8
  %224 = fmul <16 x double> %temp.vect46.i, <double 4.760000e+00, double 4.760000e+00, double 4.760000e+00, double 4.760000e+00, double 4.760000e+00, double 4.760000e+00, double 4.760000e+00, double 4.760000e+00, double 4.760000e+00, double 4.760000e+00, double 4.760000e+00, double 4.760000e+00, double 4.760000e+00, double 4.760000e+00, double 4.760000e+00, double 4.760000e+00>
  %225 = fsub <16 x double> <double 0x4053391C5D2DD880, double 0x4053391C5D2DD880, double 0x4053391C5D2DD880, double 0x4053391C5D2DD880, double 0x4053391C5D2DD880, double 0x4053391C5D2DD880, double 0x4053391C5D2DD880, double 0x4053391C5D2DD880, double 0x4053391C5D2DD880, double 0x4053391C5D2DD880, double 0x4053391C5D2DD880, double 0x4053391C5D2DD880, double 0x4053391C5D2DD880, double 0x4053391C5D2DD880, double 0x4053391C5D2DD880, double 0x4053391C5D2DD880>, %224
  %226 = fmul <16 x double> %43, <double 0x40932F6509BF9C63, double 0x40932F6509BF9C63, double 0x40932F6509BF9C63, double 0x40932F6509BF9C63, double 0x40932F6509BF9C63, double 0x40932F6509BF9C63, double 0x40932F6509BF9C63, double 0x40932F6509BF9C63, double 0x40932F6509BF9C63, double 0x40932F6509BF9C63, double 0x40932F6509BF9C63, double 0x40932F6509BF9C63, double 0x40932F6509BF9C63, double 0x40932F6509BF9C63, double 0x40932F6509BF9C63, double 0x40932F6509BF9C63>
  %227 = fsub <16 x double> %225, %226
  %extract404.i = extractelement <16 x double> %227, i32 0
  %extract405.i = extractelement <16 x double> %227, i32 1
  %extract406.i = extractelement <16 x double> %227, i32 2
  %extract407.i = extractelement <16 x double> %227, i32 3
  %extract408.i = extractelement <16 x double> %227, i32 4
  %extract409.i = extractelement <16 x double> %227, i32 5
  %extract410.i = extractelement <16 x double> %227, i32 6
  %extract411.i = extractelement <16 x double> %227, i32 7
  %extract412.i = extractelement <16 x double> %227, i32 8
  %extract413.i = extractelement <16 x double> %227, i32 9
  %extract414.i = extractelement <16 x double> %227, i32 10
  %extract415.i = extractelement <16 x double> %227, i32 11
  %extract416.i = extractelement <16 x double> %227, i32 12
  %extract417.i = extractelement <16 x double> %227, i32 13
  %extract418.i = extractelement <16 x double> %227, i32 14
  %extract419.i = extractelement <16 x double> %227, i32 15
  %228 = call double @_Z3expd(double %extract404.i) nounwind
  %229 = call double @_Z3expd(double %extract405.i) nounwind
  %230 = call double @_Z3expd(double %extract406.i) nounwind
  %231 = call double @_Z3expd(double %extract407.i) nounwind
  %232 = call double @_Z3expd(double %extract408.i) nounwind
  %233 = call double @_Z3expd(double %extract409.i) nounwind
  %234 = call double @_Z3expd(double %extract410.i) nounwind
  %235 = call double @_Z3expd(double %extract411.i) nounwind
  %236 = call double @_Z3expd(double %extract412.i) nounwind
  %237 = call double @_Z3expd(double %extract413.i) nounwind
  %238 = call double @_Z3expd(double %extract414.i) nounwind
  %239 = call double @_Z3expd(double %extract415.i) nounwind
  %240 = call double @_Z3expd(double %extract416.i) nounwind
  %241 = call double @_Z3expd(double %extract417.i) nounwind
  %242 = call double @_Z3expd(double %extract418.i) nounwind
  %243 = call double @_Z3expd(double %extract419.i) nounwind
  %temp.vect439.i = insertelement <16 x double> undef, double %228, i32 0
  %temp.vect440.i = insertelement <16 x double> %temp.vect439.i, double %229, i32 1
  %temp.vect441.i = insertelement <16 x double> %temp.vect440.i, double %230, i32 2
  %temp.vect442.i = insertelement <16 x double> %temp.vect441.i, double %231, i32 3
  %temp.vect443.i = insertelement <16 x double> %temp.vect442.i, double %232, i32 4
  %temp.vect444.i = insertelement <16 x double> %temp.vect443.i, double %233, i32 5
  %temp.vect445.i = insertelement <16 x double> %temp.vect444.i, double %234, i32 6
  %temp.vect446.i = insertelement <16 x double> %temp.vect445.i, double %235, i32 7
  %temp.vect447.i = insertelement <16 x double> %temp.vect446.i, double %236, i32 8
  %temp.vect448.i = insertelement <16 x double> %temp.vect447.i, double %237, i32 9
  %temp.vect449.i = insertelement <16 x double> %temp.vect448.i, double %238, i32 10
  %temp.vect450.i = insertelement <16 x double> %temp.vect449.i, double %239, i32 11
  %temp.vect451.i = insertelement <16 x double> %temp.vect450.i, double %240, i32 12
  %temp.vect452.i = insertelement <16 x double> %temp.vect451.i, double %241, i32 13
  %temp.vect453.i = insertelement <16 x double> %temp.vect452.i, double %242, i32 14
  %temp.vect454.i = insertelement <16 x double> %temp.vect453.i, double %243, i32 15
  %244 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %245 = load i64* %244, align 8
  %246 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %247 = load i64* %246, align 8
  %248 = add i64 %245, %247
  %extract422.i = add i64 %248, 774144
  %249 = getelementptr inbounds double addrspace(1)* %4, i64 %extract422.i
  %ptrTypeCast438.i = bitcast double addrspace(1)* %249 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect454.i, <16 x double> addrspace(1)* %ptrTypeCast438.i, align 8
  %250 = fmul <16 x double> %temp.vect46.i, <double 9.588000e+00, double 9.588000e+00, double 9.588000e+00, double 9.588000e+00, double 9.588000e+00, double 9.588000e+00, double 9.588000e+00, double 9.588000e+00, double 9.588000e+00, double 9.588000e+00, double 9.588000e+00, double 9.588000e+00, double 9.588000e+00, double 9.588000e+00, double 9.588000e+00, double 9.588000e+00>
  %251 = fsub <16 x double> <double 0x405BD400B0292817, double 0x405BD400B0292817, double 0x405BD400B0292817, double 0x405BD400B0292817, double 0x405BD400B0292817, double 0x405BD400B0292817, double 0x405BD400B0292817, double 0x405BD400B0292817, double 0x405BD400B0292817, double 0x405BD400B0292817, double 0x405BD400B0292817, double 0x405BD400B0292817, double 0x405BD400B0292817, double 0x405BD400B0292817, double 0x405BD400B0292817, double 0x405BD400B0292817>, %250
  %252 = fmul <16 x double> %43, <double 2.566405e+03, double 2.566405e+03, double 2.566405e+03, double 2.566405e+03, double 2.566405e+03, double 2.566405e+03, double 2.566405e+03, double 2.566405e+03, double 2.566405e+03, double 2.566405e+03, double 2.566405e+03, double 2.566405e+03, double 2.566405e+03, double 2.566405e+03, double 2.566405e+03, double 2.566405e+03>
  %253 = fsub <16 x double> %251, %252
  %extract455.i = extractelement <16 x double> %253, i32 0
  %extract456.i = extractelement <16 x double> %253, i32 1
  %extract457.i = extractelement <16 x double> %253, i32 2
  %extract458.i = extractelement <16 x double> %253, i32 3
  %extract459.i = extractelement <16 x double> %253, i32 4
  %extract460.i = extractelement <16 x double> %253, i32 5
  %extract461.i = extractelement <16 x double> %253, i32 6
  %extract462.i = extractelement <16 x double> %253, i32 7
  %extract463.i = extractelement <16 x double> %253, i32 8
  %extract464.i = extractelement <16 x double> %253, i32 9
  %extract465.i = extractelement <16 x double> %253, i32 10
  %extract466.i = extractelement <16 x double> %253, i32 11
  %extract467.i = extractelement <16 x double> %253, i32 12
  %extract468.i = extractelement <16 x double> %253, i32 13
  %extract469.i = extractelement <16 x double> %253, i32 14
  %extract470.i = extractelement <16 x double> %253, i32 15
  %254 = call double @_Z3expd(double %extract455.i) nounwind
  %255 = call double @_Z3expd(double %extract456.i) nounwind
  %256 = call double @_Z3expd(double %extract457.i) nounwind
  %257 = call double @_Z3expd(double %extract458.i) nounwind
  %258 = call double @_Z3expd(double %extract459.i) nounwind
  %259 = call double @_Z3expd(double %extract460.i) nounwind
  %260 = call double @_Z3expd(double %extract461.i) nounwind
  %261 = call double @_Z3expd(double %extract462.i) nounwind
  %262 = call double @_Z3expd(double %extract463.i) nounwind
  %263 = call double @_Z3expd(double %extract464.i) nounwind
  %264 = call double @_Z3expd(double %extract465.i) nounwind
  %265 = call double @_Z3expd(double %extract466.i) nounwind
  %266 = call double @_Z3expd(double %extract467.i) nounwind
  %267 = call double @_Z3expd(double %extract468.i) nounwind
  %268 = call double @_Z3expd(double %extract469.i) nounwind
  %269 = call double @_Z3expd(double %extract470.i) nounwind
  %temp.vect490.i = insertelement <16 x double> undef, double %254, i32 0
  %temp.vect491.i = insertelement <16 x double> %temp.vect490.i, double %255, i32 1
  %temp.vect492.i = insertelement <16 x double> %temp.vect491.i, double %256, i32 2
  %temp.vect493.i = insertelement <16 x double> %temp.vect492.i, double %257, i32 3
  %temp.vect494.i = insertelement <16 x double> %temp.vect493.i, double %258, i32 4
  %temp.vect495.i = insertelement <16 x double> %temp.vect494.i, double %259, i32 5
  %temp.vect496.i = insertelement <16 x double> %temp.vect495.i, double %260, i32 6
  %temp.vect497.i = insertelement <16 x double> %temp.vect496.i, double %261, i32 7
  %temp.vect498.i = insertelement <16 x double> %temp.vect497.i, double %262, i32 8
  %temp.vect499.i = insertelement <16 x double> %temp.vect498.i, double %263, i32 9
  %temp.vect500.i = insertelement <16 x double> %temp.vect499.i, double %264, i32 10
  %temp.vect501.i = insertelement <16 x double> %temp.vect500.i, double %265, i32 11
  %temp.vect502.i = insertelement <16 x double> %temp.vect501.i, double %266, i32 12
  %temp.vect503.i = insertelement <16 x double> %temp.vect502.i, double %267, i32 13
  %temp.vect504.i = insertelement <16 x double> %temp.vect503.i, double %268, i32 14
  %temp.vect505.i = insertelement <16 x double> %temp.vect504.i, double %269, i32 15
  %270 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %271 = load i64* %270, align 8
  %272 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %273 = load i64* %272, align 8
  %274 = add i64 %271, %273
  %extract473.i = add i64 %274, 884736
  %275 = getelementptr inbounds double addrspace(1)* %4, i64 %extract473.i
  %ptrTypeCast489.i = bitcast double addrspace(1)* %275 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect505.i, <16 x double> addrspace(1)* %ptrTypeCast489.i, align 8
  %276 = fmul <16 x double> %temp.vect46.i, <double 9.670000e+00, double 9.670000e+00, double 9.670000e+00, double 9.670000e+00, double 9.670000e+00, double 9.670000e+00, double 9.670000e+00, double 9.670000e+00, double 9.670000e+00, double 9.670000e+00, double 9.670000e+00, double 9.670000e+00, double 9.670000e+00, double 9.670000e+00, double 9.670000e+00, double 9.670000e+00>
  %277 = fsub <16 x double> <double 0x405CECD0A2446306, double 0x405CECD0A2446306, double 0x405CECD0A2446306, double 0x405CECD0A2446306, double 0x405CECD0A2446306, double 0x405CECD0A2446306, double 0x405CECD0A2446306, double 0x405CECD0A2446306, double 0x405CECD0A2446306, double 0x405CECD0A2446306, double 0x405CECD0A2446306, double 0x405CECD0A2446306, double 0x405CECD0A2446306, double 0x405CECD0A2446306, double 0x405CECD0A2446306, double 0x405CECD0A2446306>, %276
  %278 = fmul <16 x double> %43, <double 0x40A87403ED527E52, double 0x40A87403ED527E52, double 0x40A87403ED527E52, double 0x40A87403ED527E52, double 0x40A87403ED527E52, double 0x40A87403ED527E52, double 0x40A87403ED527E52, double 0x40A87403ED527E52, double 0x40A87403ED527E52, double 0x40A87403ED527E52, double 0x40A87403ED527E52, double 0x40A87403ED527E52, double 0x40A87403ED527E52, double 0x40A87403ED527E52, double 0x40A87403ED527E52, double 0x40A87403ED527E52>
  %279 = fsub <16 x double> %277, %278
  %extract506.i = extractelement <16 x double> %279, i32 0
  %extract507.i = extractelement <16 x double> %279, i32 1
  %extract508.i = extractelement <16 x double> %279, i32 2
  %extract509.i = extractelement <16 x double> %279, i32 3
  %extract510.i = extractelement <16 x double> %279, i32 4
  %extract511.i = extractelement <16 x double> %279, i32 5
  %extract512.i = extractelement <16 x double> %279, i32 6
  %extract513.i = extractelement <16 x double> %279, i32 7
  %extract514.i = extractelement <16 x double> %279, i32 8
  %extract515.i = extractelement <16 x double> %279, i32 9
  %extract516.i = extractelement <16 x double> %279, i32 10
  %extract517.i = extractelement <16 x double> %279, i32 11
  %extract518.i = extractelement <16 x double> %279, i32 12
  %extract519.i = extractelement <16 x double> %279, i32 13
  %extract520.i = extractelement <16 x double> %279, i32 14
  %extract521.i = extractelement <16 x double> %279, i32 15
  %280 = call double @_Z3expd(double %extract506.i) nounwind
  %281 = call double @_Z3expd(double %extract507.i) nounwind
  %282 = call double @_Z3expd(double %extract508.i) nounwind
  %283 = call double @_Z3expd(double %extract509.i) nounwind
  %284 = call double @_Z3expd(double %extract510.i) nounwind
  %285 = call double @_Z3expd(double %extract511.i) nounwind
  %286 = call double @_Z3expd(double %extract512.i) nounwind
  %287 = call double @_Z3expd(double %extract513.i) nounwind
  %288 = call double @_Z3expd(double %extract514.i) nounwind
  %289 = call double @_Z3expd(double %extract515.i) nounwind
  %290 = call double @_Z3expd(double %extract516.i) nounwind
  %291 = call double @_Z3expd(double %extract517.i) nounwind
  %292 = call double @_Z3expd(double %extract518.i) nounwind
  %293 = call double @_Z3expd(double %extract519.i) nounwind
  %294 = call double @_Z3expd(double %extract520.i) nounwind
  %295 = call double @_Z3expd(double %extract521.i) nounwind
  %temp.vect541.i = insertelement <16 x double> undef, double %280, i32 0
  %temp.vect542.i = insertelement <16 x double> %temp.vect541.i, double %281, i32 1
  %temp.vect543.i = insertelement <16 x double> %temp.vect542.i, double %282, i32 2
  %temp.vect544.i = insertelement <16 x double> %temp.vect543.i, double %283, i32 3
  %temp.vect545.i = insertelement <16 x double> %temp.vect544.i, double %284, i32 4
  %temp.vect546.i = insertelement <16 x double> %temp.vect545.i, double %285, i32 5
  %temp.vect547.i = insertelement <16 x double> %temp.vect546.i, double %286, i32 6
  %temp.vect548.i = insertelement <16 x double> %temp.vect547.i, double %287, i32 7
  %temp.vect549.i = insertelement <16 x double> %temp.vect548.i, double %288, i32 8
  %temp.vect550.i = insertelement <16 x double> %temp.vect549.i, double %289, i32 9
  %temp.vect551.i = insertelement <16 x double> %temp.vect550.i, double %290, i32 10
  %temp.vect552.i = insertelement <16 x double> %temp.vect551.i, double %291, i32 11
  %temp.vect553.i = insertelement <16 x double> %temp.vect552.i, double %292, i32 12
  %temp.vect554.i = insertelement <16 x double> %temp.vect553.i, double %293, i32 13
  %temp.vect555.i = insertelement <16 x double> %temp.vect554.i, double %294, i32 14
  %temp.vect556.i = insertelement <16 x double> %temp.vect555.i, double %295, i32 15
  %296 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %297 = load i64* %296, align 8
  %298 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %299 = load i64* %298, align 8
  %300 = add i64 %297, %299
  %extract524.i = add i64 %300, 995328
  %301 = getelementptr inbounds double addrspace(1)* %4, i64 %extract524.i
  %ptrTypeCast540.i = bitcast double addrspace(1)* %301 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect556.i, <16 x double> addrspace(1)* %ptrTypeCast540.i, align 8
  %302 = fmul <16 x double> %temp.vect46.i, <double 6.400000e-01, double 6.400000e-01, double 6.400000e-01, double 6.400000e-01, double 6.400000e-01, double 6.400000e-01, double 6.400000e-01, double 6.400000e-01, double 6.400000e-01, double 6.400000e-01, double 6.400000e-01, double 6.400000e-01, double 6.400000e-01, double 6.400000e-01, double 6.400000e-01, double 6.400000e-01>
  %303 = fsub <16 x double> <double 0x4041B7A9A2FC18EB, double 0x4041B7A9A2FC18EB, double 0x4041B7A9A2FC18EB, double 0x4041B7A9A2FC18EB, double 0x4041B7A9A2FC18EB, double 0x4041B7A9A2FC18EB, double 0x4041B7A9A2FC18EB, double 0x4041B7A9A2FC18EB, double 0x4041B7A9A2FC18EB, double 0x4041B7A9A2FC18EB, double 0x4041B7A9A2FC18EB, double 0x4041B7A9A2FC18EB, double 0x4041B7A9A2FC18EB, double 0x4041B7A9A2FC18EB, double 0x4041B7A9A2FC18EB, double 0x4041B7A9A2FC18EB>, %302
  %304 = fmul <16 x double> %43, <double 0x40D86C7793DD97F6, double 0x40D86C7793DD97F6, double 0x40D86C7793DD97F6, double 0x40D86C7793DD97F6, double 0x40D86C7793DD97F6, double 0x40D86C7793DD97F6, double 0x40D86C7793DD97F6, double 0x40D86C7793DD97F6, double 0x40D86C7793DD97F6, double 0x40D86C7793DD97F6, double 0x40D86C7793DD97F6, double 0x40D86C7793DD97F6, double 0x40D86C7793DD97F6, double 0x40D86C7793DD97F6, double 0x40D86C7793DD97F6, double 0x40D86C7793DD97F6>
  %305 = fsub <16 x double> %303, %304
  %extract557.i = extractelement <16 x double> %305, i32 0
  %extract558.i = extractelement <16 x double> %305, i32 1
  %extract559.i = extractelement <16 x double> %305, i32 2
  %extract560.i = extractelement <16 x double> %305, i32 3
  %extract561.i = extractelement <16 x double> %305, i32 4
  %extract562.i = extractelement <16 x double> %305, i32 5
  %extract563.i = extractelement <16 x double> %305, i32 6
  %extract564.i = extractelement <16 x double> %305, i32 7
  %extract565.i = extractelement <16 x double> %305, i32 8
  %extract566.i = extractelement <16 x double> %305, i32 9
  %extract567.i = extractelement <16 x double> %305, i32 10
  %extract568.i = extractelement <16 x double> %305, i32 11
  %extract569.i = extractelement <16 x double> %305, i32 12
  %extract570.i = extractelement <16 x double> %305, i32 13
  %extract571.i = extractelement <16 x double> %305, i32 14
  %extract572.i = extractelement <16 x double> %305, i32 15
  %306 = call double @_Z3expd(double %extract557.i) nounwind
  %307 = call double @_Z3expd(double %extract558.i) nounwind
  %308 = call double @_Z3expd(double %extract559.i) nounwind
  %309 = call double @_Z3expd(double %extract560.i) nounwind
  %310 = call double @_Z3expd(double %extract561.i) nounwind
  %311 = call double @_Z3expd(double %extract562.i) nounwind
  %312 = call double @_Z3expd(double %extract563.i) nounwind
  %313 = call double @_Z3expd(double %extract564.i) nounwind
  %314 = call double @_Z3expd(double %extract565.i) nounwind
  %315 = call double @_Z3expd(double %extract566.i) nounwind
  %316 = call double @_Z3expd(double %extract567.i) nounwind
  %317 = call double @_Z3expd(double %extract568.i) nounwind
  %318 = call double @_Z3expd(double %extract569.i) nounwind
  %319 = call double @_Z3expd(double %extract570.i) nounwind
  %320 = call double @_Z3expd(double %extract571.i) nounwind
  %321 = call double @_Z3expd(double %extract572.i) nounwind
  %temp.vect592.i = insertelement <16 x double> undef, double %306, i32 0
  %temp.vect593.i = insertelement <16 x double> %temp.vect592.i, double %307, i32 1
  %temp.vect594.i = insertelement <16 x double> %temp.vect593.i, double %308, i32 2
  %temp.vect595.i = insertelement <16 x double> %temp.vect594.i, double %309, i32 3
  %temp.vect596.i = insertelement <16 x double> %temp.vect595.i, double %310, i32 4
  %temp.vect597.i = insertelement <16 x double> %temp.vect596.i, double %311, i32 5
  %temp.vect598.i = insertelement <16 x double> %temp.vect597.i, double %312, i32 6
  %temp.vect599.i = insertelement <16 x double> %temp.vect598.i, double %313, i32 7
  %temp.vect600.i = insertelement <16 x double> %temp.vect599.i, double %314, i32 8
  %temp.vect601.i = insertelement <16 x double> %temp.vect600.i, double %315, i32 9
  %temp.vect602.i = insertelement <16 x double> %temp.vect601.i, double %316, i32 10
  %temp.vect603.i = insertelement <16 x double> %temp.vect602.i, double %317, i32 11
  %temp.vect604.i = insertelement <16 x double> %temp.vect603.i, double %318, i32 12
  %temp.vect605.i = insertelement <16 x double> %temp.vect604.i, double %319, i32 13
  %temp.vect606.i = insertelement <16 x double> %temp.vect605.i, double %320, i32 14
  %temp.vect607.i = insertelement <16 x double> %temp.vect606.i, double %321, i32 15
  %322 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %323 = load i64* %322, align 8
  %324 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %325 = load i64* %324, align 8
  %326 = add i64 %323, %325
  %extract575.i = add i64 %326, 1105920
  %327 = getelementptr inbounds double addrspace(1)* %4, i64 %extract575.i
  %ptrTypeCast591.i = bitcast double addrspace(1)* %327 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect607.i, <16 x double> addrspace(1)* %ptrTypeCast591.i, align 8
  %328 = fmul <16 x double> %temp.vect46.i, <double 3.400000e+00, double 3.400000e+00, double 3.400000e+00, double 3.400000e+00, double 3.400000e+00, double 3.400000e+00, double 3.400000e+00, double 3.400000e+00, double 3.400000e+00, double 3.400000e+00, double 3.400000e+00, double 3.400000e+00, double 3.400000e+00, double 3.400000e+00, double 3.400000e+00, double 3.400000e+00>
  %329 = fsub <16 x double> <double 0x404F8E4E054690DE, double 0x404F8E4E054690DE, double 0x404F8E4E054690DE, double 0x404F8E4E054690DE, double 0x404F8E4E054690DE, double 0x404F8E4E054690DE, double 0x404F8E4E054690DE, double 0x404F8E4E054690DE, double 0x404F8E4E054690DE, double 0x404F8E4E054690DE, double 0x404F8E4E054690DE, double 0x404F8E4E054690DE, double 0x404F8E4E054690DE, double 0x404F8E4E054690DE, double 0x404F8E4E054690DE, double 0x404F8E4E054690DE>, %328
  %330 = fmul <16 x double> %43, <double 0x40D197A0CE703AFB, double 0x40D197A0CE703AFB, double 0x40D197A0CE703AFB, double 0x40D197A0CE703AFB, double 0x40D197A0CE703AFB, double 0x40D197A0CE703AFB, double 0x40D197A0CE703AFB, double 0x40D197A0CE703AFB, double 0x40D197A0CE703AFB, double 0x40D197A0CE703AFB, double 0x40D197A0CE703AFB, double 0x40D197A0CE703AFB, double 0x40D197A0CE703AFB, double 0x40D197A0CE703AFB, double 0x40D197A0CE703AFB, double 0x40D197A0CE703AFB>
  %331 = fsub <16 x double> %329, %330
  %extract608.i = extractelement <16 x double> %331, i32 0
  %extract609.i = extractelement <16 x double> %331, i32 1
  %extract610.i = extractelement <16 x double> %331, i32 2
  %extract611.i = extractelement <16 x double> %331, i32 3
  %extract612.i = extractelement <16 x double> %331, i32 4
  %extract613.i = extractelement <16 x double> %331, i32 5
  %extract614.i = extractelement <16 x double> %331, i32 6
  %extract615.i = extractelement <16 x double> %331, i32 7
  %extract616.i = extractelement <16 x double> %331, i32 8
  %extract617.i = extractelement <16 x double> %331, i32 9
  %extract618.i = extractelement <16 x double> %331, i32 10
  %extract619.i = extractelement <16 x double> %331, i32 11
  %extract620.i = extractelement <16 x double> %331, i32 12
  %extract621.i = extractelement <16 x double> %331, i32 13
  %extract622.i = extractelement <16 x double> %331, i32 14
  %extract623.i = extractelement <16 x double> %331, i32 15
  %332 = call double @_Z3expd(double %extract608.i) nounwind
  %333 = call double @_Z3expd(double %extract609.i) nounwind
  %334 = call double @_Z3expd(double %extract610.i) nounwind
  %335 = call double @_Z3expd(double %extract611.i) nounwind
  %336 = call double @_Z3expd(double %extract612.i) nounwind
  %337 = call double @_Z3expd(double %extract613.i) nounwind
  %338 = call double @_Z3expd(double %extract614.i) nounwind
  %339 = call double @_Z3expd(double %extract615.i) nounwind
  %340 = call double @_Z3expd(double %extract616.i) nounwind
  %341 = call double @_Z3expd(double %extract617.i) nounwind
  %342 = call double @_Z3expd(double %extract618.i) nounwind
  %343 = call double @_Z3expd(double %extract619.i) nounwind
  %344 = call double @_Z3expd(double %extract620.i) nounwind
  %345 = call double @_Z3expd(double %extract621.i) nounwind
  %346 = call double @_Z3expd(double %extract622.i) nounwind
  %347 = call double @_Z3expd(double %extract623.i) nounwind
  %temp.vect643.i = insertelement <16 x double> undef, double %332, i32 0
  %temp.vect644.i = insertelement <16 x double> %temp.vect643.i, double %333, i32 1
  %temp.vect645.i = insertelement <16 x double> %temp.vect644.i, double %334, i32 2
  %temp.vect646.i = insertelement <16 x double> %temp.vect645.i, double %335, i32 3
  %temp.vect647.i = insertelement <16 x double> %temp.vect646.i, double %336, i32 4
  %temp.vect648.i = insertelement <16 x double> %temp.vect647.i, double %337, i32 5
  %temp.vect649.i = insertelement <16 x double> %temp.vect648.i, double %338, i32 6
  %temp.vect650.i = insertelement <16 x double> %temp.vect649.i, double %339, i32 7
  %temp.vect651.i = insertelement <16 x double> %temp.vect650.i, double %340, i32 8
  %temp.vect652.i = insertelement <16 x double> %temp.vect651.i, double %341, i32 9
  %temp.vect653.i = insertelement <16 x double> %temp.vect652.i, double %342, i32 10
  %temp.vect654.i = insertelement <16 x double> %temp.vect653.i, double %343, i32 11
  %temp.vect655.i = insertelement <16 x double> %temp.vect654.i, double %344, i32 12
  %temp.vect656.i = insertelement <16 x double> %temp.vect655.i, double %345, i32 13
  %temp.vect657.i = insertelement <16 x double> %temp.vect656.i, double %346, i32 14
  %temp.vect658.i = insertelement <16 x double> %temp.vect657.i, double %347, i32 15
  %348 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %349 = load i64* %348, align 8
  %350 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %351 = load i64* %350, align 8
  %352 = add i64 %349, %351
  %extract626.i = add i64 %352, 1216512
  %353 = getelementptr inbounds double addrspace(1)* %4, i64 %extract626.i
  %ptrTypeCast642.i = bitcast double addrspace(1)* %353 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect658.i, <16 x double> addrspace(1)* %ptrTypeCast642.i, align 8
  %354 = fmul <16 x double> %temp.vect46.i, <double 7.640000e+00, double 7.640000e+00, double 7.640000e+00, double 7.640000e+00, double 7.640000e+00, double 7.640000e+00, double 7.640000e+00, double 7.640000e+00, double 7.640000e+00, double 7.640000e+00, double 7.640000e+00, double 7.640000e+00, double 7.640000e+00, double 7.640000e+00, double 7.640000e+00, double 7.640000e+00>
  %355 = fsub <16 x double> <double 0x4057EF6C60E6CAA5, double 0x4057EF6C60E6CAA5, double 0x4057EF6C60E6CAA5, double 0x4057EF6C60E6CAA5, double 0x4057EF6C60E6CAA5, double 0x4057EF6C60E6CAA5, double 0x4057EF6C60E6CAA5, double 0x4057EF6C60E6CAA5, double 0x4057EF6C60E6CAA5, double 0x4057EF6C60E6CAA5, double 0x4057EF6C60E6CAA5, double 0x4057EF6C60E6CAA5, double 0x4057EF6C60E6CAA5, double 0x4057EF6C60E6CAA5, double 0x4057EF6C60E6CAA5, double 0x4057EF6C60E6CAA5>, %354
  %356 = fmul <16 x double> %43, <double 0x40B76447414A4D2B, double 0x40B76447414A4D2B, double 0x40B76447414A4D2B, double 0x40B76447414A4D2B, double 0x40B76447414A4D2B, double 0x40B76447414A4D2B, double 0x40B76447414A4D2B, double 0x40B76447414A4D2B, double 0x40B76447414A4D2B, double 0x40B76447414A4D2B, double 0x40B76447414A4D2B, double 0x40B76447414A4D2B, double 0x40B76447414A4D2B, double 0x40B76447414A4D2B, double 0x40B76447414A4D2B, double 0x40B76447414A4D2B>
  %357 = fsub <16 x double> %355, %356
  %extract659.i = extractelement <16 x double> %357, i32 0
  %extract660.i = extractelement <16 x double> %357, i32 1
  %extract661.i = extractelement <16 x double> %357, i32 2
  %extract662.i = extractelement <16 x double> %357, i32 3
  %extract663.i = extractelement <16 x double> %357, i32 4
  %extract664.i = extractelement <16 x double> %357, i32 5
  %extract665.i = extractelement <16 x double> %357, i32 6
  %extract666.i = extractelement <16 x double> %357, i32 7
  %extract667.i = extractelement <16 x double> %357, i32 8
  %extract668.i = extractelement <16 x double> %357, i32 9
  %extract669.i = extractelement <16 x double> %357, i32 10
  %extract670.i = extractelement <16 x double> %357, i32 11
  %extract671.i = extractelement <16 x double> %357, i32 12
  %extract672.i = extractelement <16 x double> %357, i32 13
  %extract673.i = extractelement <16 x double> %357, i32 14
  %extract674.i = extractelement <16 x double> %357, i32 15
  %358 = call double @_Z3expd(double %extract659.i) nounwind
  %359 = call double @_Z3expd(double %extract660.i) nounwind
  %360 = call double @_Z3expd(double %extract661.i) nounwind
  %361 = call double @_Z3expd(double %extract662.i) nounwind
  %362 = call double @_Z3expd(double %extract663.i) nounwind
  %363 = call double @_Z3expd(double %extract664.i) nounwind
  %364 = call double @_Z3expd(double %extract665.i) nounwind
  %365 = call double @_Z3expd(double %extract666.i) nounwind
  %366 = call double @_Z3expd(double %extract667.i) nounwind
  %367 = call double @_Z3expd(double %extract668.i) nounwind
  %368 = call double @_Z3expd(double %extract669.i) nounwind
  %369 = call double @_Z3expd(double %extract670.i) nounwind
  %370 = call double @_Z3expd(double %extract671.i) nounwind
  %371 = call double @_Z3expd(double %extract672.i) nounwind
  %372 = call double @_Z3expd(double %extract673.i) nounwind
  %373 = call double @_Z3expd(double %extract674.i) nounwind
  %temp.vect694.i = insertelement <16 x double> undef, double %358, i32 0
  %temp.vect695.i = insertelement <16 x double> %temp.vect694.i, double %359, i32 1
  %temp.vect696.i = insertelement <16 x double> %temp.vect695.i, double %360, i32 2
  %temp.vect697.i = insertelement <16 x double> %temp.vect696.i, double %361, i32 3
  %temp.vect698.i = insertelement <16 x double> %temp.vect697.i, double %362, i32 4
  %temp.vect699.i = insertelement <16 x double> %temp.vect698.i, double %363, i32 5
  %temp.vect700.i = insertelement <16 x double> %temp.vect699.i, double %364, i32 6
  %temp.vect701.i = insertelement <16 x double> %temp.vect700.i, double %365, i32 7
  %temp.vect702.i = insertelement <16 x double> %temp.vect701.i, double %366, i32 8
  %temp.vect703.i = insertelement <16 x double> %temp.vect702.i, double %367, i32 9
  %temp.vect704.i = insertelement <16 x double> %temp.vect703.i, double %368, i32 10
  %temp.vect705.i = insertelement <16 x double> %temp.vect704.i, double %369, i32 11
  %temp.vect706.i = insertelement <16 x double> %temp.vect705.i, double %370, i32 12
  %temp.vect707.i = insertelement <16 x double> %temp.vect706.i, double %371, i32 13
  %temp.vect708.i = insertelement <16 x double> %temp.vect707.i, double %372, i32 14
  %temp.vect709.i = insertelement <16 x double> %temp.vect708.i, double %373, i32 15
  %374 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %375 = load i64* %374, align 8
  %376 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %377 = load i64* %376, align 8
  %378 = add i64 %375, %377
  %extract677.i = add i64 %378, 1327104
  %379 = getelementptr inbounds double addrspace(1)* %4, i64 %extract677.i
  %ptrTypeCast693.i = bitcast double addrspace(1)* %379 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect709.i, <16 x double> addrspace(1)* %ptrTypeCast693.i, align 8
  %380 = fmul <16 x double> %temp.vect46.i, <double 3.860000e+00, double 3.860000e+00, double 3.860000e+00, double 3.860000e+00, double 3.860000e+00, double 3.860000e+00, double 3.860000e+00, double 3.860000e+00, double 3.860000e+00, double 3.860000e+00, double 3.860000e+00, double 3.860000e+00, double 3.860000e+00, double 3.860000e+00, double 3.860000e+00, double 3.860000e+00>
  %381 = fsub <16 x double> <double 0x40515A7F62B6AE7D, double 0x40515A7F62B6AE7D, double 0x40515A7F62B6AE7D, double 0x40515A7F62B6AE7D, double 0x40515A7F62B6AE7D, double 0x40515A7F62B6AE7D, double 0x40515A7F62B6AE7D, double 0x40515A7F62B6AE7D, double 0x40515A7F62B6AE7D, double 0x40515A7F62B6AE7D, double 0x40515A7F62B6AE7D, double 0x40515A7F62B6AE7D, double 0x40515A7F62B6AE7D, double 0x40515A7F62B6AE7D, double 0x40515A7F62B6AE7D, double 0x40515A7F62B6AE7D>, %380
  %382 = fmul <16 x double> %43, <double 0x409A1AB7A4E7AB75, double 0x409A1AB7A4E7AB75, double 0x409A1AB7A4E7AB75, double 0x409A1AB7A4E7AB75, double 0x409A1AB7A4E7AB75, double 0x409A1AB7A4E7AB75, double 0x409A1AB7A4E7AB75, double 0x409A1AB7A4E7AB75, double 0x409A1AB7A4E7AB75, double 0x409A1AB7A4E7AB75, double 0x409A1AB7A4E7AB75, double 0x409A1AB7A4E7AB75, double 0x409A1AB7A4E7AB75, double 0x409A1AB7A4E7AB75, double 0x409A1AB7A4E7AB75, double 0x409A1AB7A4E7AB75>
  %383 = fsub <16 x double> %381, %382
  %extract710.i = extractelement <16 x double> %383, i32 0
  %extract711.i = extractelement <16 x double> %383, i32 1
  %extract712.i = extractelement <16 x double> %383, i32 2
  %extract713.i = extractelement <16 x double> %383, i32 3
  %extract714.i = extractelement <16 x double> %383, i32 4
  %extract715.i = extractelement <16 x double> %383, i32 5
  %extract716.i = extractelement <16 x double> %383, i32 6
  %extract717.i = extractelement <16 x double> %383, i32 7
  %extract718.i = extractelement <16 x double> %383, i32 8
  %extract719.i = extractelement <16 x double> %383, i32 9
  %extract720.i = extractelement <16 x double> %383, i32 10
  %extract721.i = extractelement <16 x double> %383, i32 11
  %extract722.i = extractelement <16 x double> %383, i32 12
  %extract723.i = extractelement <16 x double> %383, i32 13
  %extract724.i = extractelement <16 x double> %383, i32 14
  %extract725.i = extractelement <16 x double> %383, i32 15
  %384 = call double @_Z3expd(double %extract710.i) nounwind
  %385 = call double @_Z3expd(double %extract711.i) nounwind
  %386 = call double @_Z3expd(double %extract712.i) nounwind
  %387 = call double @_Z3expd(double %extract713.i) nounwind
  %388 = call double @_Z3expd(double %extract714.i) nounwind
  %389 = call double @_Z3expd(double %extract715.i) nounwind
  %390 = call double @_Z3expd(double %extract716.i) nounwind
  %391 = call double @_Z3expd(double %extract717.i) nounwind
  %392 = call double @_Z3expd(double %extract718.i) nounwind
  %393 = call double @_Z3expd(double %extract719.i) nounwind
  %394 = call double @_Z3expd(double %extract720.i) nounwind
  %395 = call double @_Z3expd(double %extract721.i) nounwind
  %396 = call double @_Z3expd(double %extract722.i) nounwind
  %397 = call double @_Z3expd(double %extract723.i) nounwind
  %398 = call double @_Z3expd(double %extract724.i) nounwind
  %399 = call double @_Z3expd(double %extract725.i) nounwind
  %temp.vect745.i = insertelement <16 x double> undef, double %384, i32 0
  %temp.vect746.i = insertelement <16 x double> %temp.vect745.i, double %385, i32 1
  %temp.vect747.i = insertelement <16 x double> %temp.vect746.i, double %386, i32 2
  %temp.vect748.i = insertelement <16 x double> %temp.vect747.i, double %387, i32 3
  %temp.vect749.i = insertelement <16 x double> %temp.vect748.i, double %388, i32 4
  %temp.vect750.i = insertelement <16 x double> %temp.vect749.i, double %389, i32 5
  %temp.vect751.i = insertelement <16 x double> %temp.vect750.i, double %390, i32 6
  %temp.vect752.i = insertelement <16 x double> %temp.vect751.i, double %391, i32 7
  %temp.vect753.i = insertelement <16 x double> %temp.vect752.i, double %392, i32 8
  %temp.vect754.i = insertelement <16 x double> %temp.vect753.i, double %393, i32 9
  %temp.vect755.i = insertelement <16 x double> %temp.vect754.i, double %394, i32 10
  %temp.vect756.i = insertelement <16 x double> %temp.vect755.i, double %395, i32 11
  %temp.vect757.i = insertelement <16 x double> %temp.vect756.i, double %396, i32 12
  %temp.vect758.i = insertelement <16 x double> %temp.vect757.i, double %397, i32 13
  %temp.vect759.i = insertelement <16 x double> %temp.vect758.i, double %398, i32 14
  %temp.vect760.i = insertelement <16 x double> %temp.vect759.i, double %399, i32 15
  %400 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %401 = load i64* %400, align 8
  %402 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %403 = load i64* %402, align 8
  %404 = add i64 %401, %403
  %extract728.i = add i64 %404, 1437696
  %405 = getelementptr inbounds double addrspace(1)* %4, i64 %extract728.i
  %ptrTypeCast744.i = bitcast double addrspace(1)* %405 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect760.i, <16 x double> addrspace(1)* %ptrTypeCast744.i, align 8
  %406 = fmul <16 x double> %temp.vect46.i, <double 1.194000e+01, double 1.194000e+01, double 1.194000e+01, double 1.194000e+01, double 1.194000e+01, double 1.194000e+01, double 1.194000e+01, double 1.194000e+01, double 1.194000e+01, double 1.194000e+01, double 1.194000e+01, double 1.194000e+01, double 1.194000e+01, double 1.194000e+01, double 1.194000e+01, double 1.194000e+01>
  %407 = fsub <16 x double> <double 0x4060E00CB07D0AEE, double 0x4060E00CB07D0AEE, double 0x4060E00CB07D0AEE, double 0x4060E00CB07D0AEE, double 0x4060E00CB07D0AEE, double 0x4060E00CB07D0AEE, double 0x4060E00CB07D0AEE, double 0x4060E00CB07D0AEE, double 0x4060E00CB07D0AEE, double 0x4060E00CB07D0AEE, double 0x4060E00CB07D0AEE, double 0x4060E00CB07D0AEE, double 0x4060E00CB07D0AEE, double 0x4060E00CB07D0AEE, double 0x4060E00CB07D0AEE, double 0x4060E00CB07D0AEE>, %406
  %408 = fmul <16 x double> %43, <double 0x40B3345381D7DBF5, double 0x40B3345381D7DBF5, double 0x40B3345381D7DBF5, double 0x40B3345381D7DBF5, double 0x40B3345381D7DBF5, double 0x40B3345381D7DBF5, double 0x40B3345381D7DBF5, double 0x40B3345381D7DBF5, double 0x40B3345381D7DBF5, double 0x40B3345381D7DBF5, double 0x40B3345381D7DBF5, double 0x40B3345381D7DBF5, double 0x40B3345381D7DBF5, double 0x40B3345381D7DBF5, double 0x40B3345381D7DBF5, double 0x40B3345381D7DBF5>
  %409 = fsub <16 x double> %407, %408
  %extract761.i = extractelement <16 x double> %409, i32 0
  %extract762.i = extractelement <16 x double> %409, i32 1
  %extract763.i = extractelement <16 x double> %409, i32 2
  %extract764.i = extractelement <16 x double> %409, i32 3
  %extract765.i = extractelement <16 x double> %409, i32 4
  %extract766.i = extractelement <16 x double> %409, i32 5
  %extract767.i = extractelement <16 x double> %409, i32 6
  %extract768.i = extractelement <16 x double> %409, i32 7
  %extract769.i = extractelement <16 x double> %409, i32 8
  %extract770.i = extractelement <16 x double> %409, i32 9
  %extract771.i = extractelement <16 x double> %409, i32 10
  %extract772.i = extractelement <16 x double> %409, i32 11
  %extract773.i = extractelement <16 x double> %409, i32 12
  %extract774.i = extractelement <16 x double> %409, i32 13
  %extract775.i = extractelement <16 x double> %409, i32 14
  %extract776.i = extractelement <16 x double> %409, i32 15
  %410 = call double @_Z3expd(double %extract761.i) nounwind
  %411 = call double @_Z3expd(double %extract762.i) nounwind
  %412 = call double @_Z3expd(double %extract763.i) nounwind
  %413 = call double @_Z3expd(double %extract764.i) nounwind
  %414 = call double @_Z3expd(double %extract765.i) nounwind
  %415 = call double @_Z3expd(double %extract766.i) nounwind
  %416 = call double @_Z3expd(double %extract767.i) nounwind
  %417 = call double @_Z3expd(double %extract768.i) nounwind
  %418 = call double @_Z3expd(double %extract769.i) nounwind
  %419 = call double @_Z3expd(double %extract770.i) nounwind
  %420 = call double @_Z3expd(double %extract771.i) nounwind
  %421 = call double @_Z3expd(double %extract772.i) nounwind
  %422 = call double @_Z3expd(double %extract773.i) nounwind
  %423 = call double @_Z3expd(double %extract774.i) nounwind
  %424 = call double @_Z3expd(double %extract775.i) nounwind
  %425 = call double @_Z3expd(double %extract776.i) nounwind
  %temp.vect796.i = insertelement <16 x double> undef, double %410, i32 0
  %temp.vect797.i = insertelement <16 x double> %temp.vect796.i, double %411, i32 1
  %temp.vect798.i = insertelement <16 x double> %temp.vect797.i, double %412, i32 2
  %temp.vect799.i = insertelement <16 x double> %temp.vect798.i, double %413, i32 3
  %temp.vect800.i = insertelement <16 x double> %temp.vect799.i, double %414, i32 4
  %temp.vect801.i = insertelement <16 x double> %temp.vect800.i, double %415, i32 5
  %temp.vect802.i = insertelement <16 x double> %temp.vect801.i, double %416, i32 6
  %temp.vect803.i = insertelement <16 x double> %temp.vect802.i, double %417, i32 7
  %temp.vect804.i = insertelement <16 x double> %temp.vect803.i, double %418, i32 8
  %temp.vect805.i = insertelement <16 x double> %temp.vect804.i, double %419, i32 9
  %temp.vect806.i = insertelement <16 x double> %temp.vect805.i, double %420, i32 10
  %temp.vect807.i = insertelement <16 x double> %temp.vect806.i, double %421, i32 11
  %temp.vect808.i = insertelement <16 x double> %temp.vect807.i, double %422, i32 12
  %temp.vect809.i = insertelement <16 x double> %temp.vect808.i, double %423, i32 13
  %temp.vect810.i = insertelement <16 x double> %temp.vect809.i, double %424, i32 14
  %temp.vect811.i = insertelement <16 x double> %temp.vect810.i, double %425, i32 15
  %426 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %427 = load i64* %426, align 8
  %428 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %429 = load i64* %428, align 8
  %430 = add i64 %427, %429
  %extract779.i = add i64 %430, 1548288
  %431 = getelementptr inbounds double addrspace(1)* %4, i64 %extract779.i
  %ptrTypeCast795.i = bitcast double addrspace(1)* %431 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect811.i, <16 x double> addrspace(1)* %ptrTypeCast795.i, align 8
  %432 = fmul <16 x double> %temp.vect46.i, <double 7.297000e+00, double 7.297000e+00, double 7.297000e+00, double 7.297000e+00, double 7.297000e+00, double 7.297000e+00, double 7.297000e+00, double 7.297000e+00, double 7.297000e+00, double 7.297000e+00, double 7.297000e+00, double 7.297000e+00, double 7.297000e+00, double 7.297000e+00, double 7.297000e+00, double 7.297000e+00>
  %433 = fsub <16 x double> <double 0x4056DCC43C6FF2D7, double 0x4056DCC43C6FF2D7, double 0x4056DCC43C6FF2D7, double 0x4056DCC43C6FF2D7, double 0x4056DCC43C6FF2D7, double 0x4056DCC43C6FF2D7, double 0x4056DCC43C6FF2D7, double 0x4056DCC43C6FF2D7, double 0x4056DCC43C6FF2D7, double 0x4056DCC43C6FF2D7, double 0x4056DCC43C6FF2D7, double 0x4056DCC43C6FF2D7, double 0x4056DCC43C6FF2D7, double 0x4056DCC43C6FF2D7, double 0x4056DCC43C6FF2D7, double 0x4056DCC43C6FF2D7>, %432
  %434 = fmul <16 x double> %43, <double 0x40A27A3C970F7B9E, double 0x40A27A3C970F7B9E, double 0x40A27A3C970F7B9E, double 0x40A27A3C970F7B9E, double 0x40A27A3C970F7B9E, double 0x40A27A3C970F7B9E, double 0x40A27A3C970F7B9E, double 0x40A27A3C970F7B9E, double 0x40A27A3C970F7B9E, double 0x40A27A3C970F7B9E, double 0x40A27A3C970F7B9E, double 0x40A27A3C970F7B9E, double 0x40A27A3C970F7B9E, double 0x40A27A3C970F7B9E, double 0x40A27A3C970F7B9E, double 0x40A27A3C970F7B9E>
  %435 = fsub <16 x double> %433, %434
  %extract812.i = extractelement <16 x double> %435, i32 0
  %extract813.i = extractelement <16 x double> %435, i32 1
  %extract814.i = extractelement <16 x double> %435, i32 2
  %extract815.i = extractelement <16 x double> %435, i32 3
  %extract816.i = extractelement <16 x double> %435, i32 4
  %extract817.i = extractelement <16 x double> %435, i32 5
  %extract818.i = extractelement <16 x double> %435, i32 6
  %extract819.i = extractelement <16 x double> %435, i32 7
  %extract820.i = extractelement <16 x double> %435, i32 8
  %extract821.i = extractelement <16 x double> %435, i32 9
  %extract822.i = extractelement <16 x double> %435, i32 10
  %extract823.i = extractelement <16 x double> %435, i32 11
  %extract824.i = extractelement <16 x double> %435, i32 12
  %extract825.i = extractelement <16 x double> %435, i32 13
  %extract826.i = extractelement <16 x double> %435, i32 14
  %extract827.i = extractelement <16 x double> %435, i32 15
  %436 = call double @_Z3expd(double %extract812.i) nounwind
  %437 = call double @_Z3expd(double %extract813.i) nounwind
  %438 = call double @_Z3expd(double %extract814.i) nounwind
  %439 = call double @_Z3expd(double %extract815.i) nounwind
  %440 = call double @_Z3expd(double %extract816.i) nounwind
  %441 = call double @_Z3expd(double %extract817.i) nounwind
  %442 = call double @_Z3expd(double %extract818.i) nounwind
  %443 = call double @_Z3expd(double %extract819.i) nounwind
  %444 = call double @_Z3expd(double %extract820.i) nounwind
  %445 = call double @_Z3expd(double %extract821.i) nounwind
  %446 = call double @_Z3expd(double %extract822.i) nounwind
  %447 = call double @_Z3expd(double %extract823.i) nounwind
  %448 = call double @_Z3expd(double %extract824.i) nounwind
  %449 = call double @_Z3expd(double %extract825.i) nounwind
  %450 = call double @_Z3expd(double %extract826.i) nounwind
  %451 = call double @_Z3expd(double %extract827.i) nounwind
  %temp.vect847.i = insertelement <16 x double> undef, double %436, i32 0
  %temp.vect848.i = insertelement <16 x double> %temp.vect847.i, double %437, i32 1
  %temp.vect849.i = insertelement <16 x double> %temp.vect848.i, double %438, i32 2
  %temp.vect850.i = insertelement <16 x double> %temp.vect849.i, double %439, i32 3
  %temp.vect851.i = insertelement <16 x double> %temp.vect850.i, double %440, i32 4
  %temp.vect852.i = insertelement <16 x double> %temp.vect851.i, double %441, i32 5
  %temp.vect853.i = insertelement <16 x double> %temp.vect852.i, double %442, i32 6
  %temp.vect854.i = insertelement <16 x double> %temp.vect853.i, double %443, i32 7
  %temp.vect855.i = insertelement <16 x double> %temp.vect854.i, double %444, i32 8
  %temp.vect856.i = insertelement <16 x double> %temp.vect855.i, double %445, i32 9
  %temp.vect857.i = insertelement <16 x double> %temp.vect856.i, double %446, i32 10
  %temp.vect858.i = insertelement <16 x double> %temp.vect857.i, double %447, i32 11
  %temp.vect859.i = insertelement <16 x double> %temp.vect858.i, double %448, i32 12
  %temp.vect860.i = insertelement <16 x double> %temp.vect859.i, double %449, i32 13
  %temp.vect861.i = insertelement <16 x double> %temp.vect860.i, double %450, i32 14
  %temp.vect862.i = insertelement <16 x double> %temp.vect861.i, double %451, i32 15
  %452 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %453 = load i64* %452, align 8
  %454 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %455 = load i64* %454, align 8
  %456 = add i64 %453, %455
  %extract830.i = add i64 %456, 1658880
  %457 = getelementptr inbounds double addrspace(1)* %4, i64 %extract830.i
  %ptrTypeCast846.i = bitcast double addrspace(1)* %457 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect862.i, <16 x double> addrspace(1)* %ptrTypeCast846.i, align 8
  %458 = fmul <16 x double> %temp.vect46.i, <double 9.310000e+00, double 9.310000e+00, double 9.310000e+00, double 9.310000e+00, double 9.310000e+00, double 9.310000e+00, double 9.310000e+00, double 9.310000e+00, double 9.310000e+00, double 9.310000e+00, double 9.310000e+00, double 9.310000e+00, double 9.310000e+00, double 9.310000e+00, double 9.310000e+00, double 9.310000e+00>
  %459 = fsub <16 x double> <double 0x405D44CF80DC3372, double 0x405D44CF80DC3372, double 0x405D44CF80DC3372, double 0x405D44CF80DC3372, double 0x405D44CF80DC3372, double 0x405D44CF80DC3372, double 0x405D44CF80DC3372, double 0x405D44CF80DC3372, double 0x405D44CF80DC3372, double 0x405D44CF80DC3372, double 0x405D44CF80DC3372, double 0x405D44CF80DC3372, double 0x405D44CF80DC3372, double 0x405D44CF80DC3372, double 0x405D44CF80DC3372, double 0x405D44CF80DC3372>, %458
  %460 = fmul <16 x double> %43, <double 0x40E88966ECBFB15B, double 0x40E88966ECBFB15B, double 0x40E88966ECBFB15B, double 0x40E88966ECBFB15B, double 0x40E88966ECBFB15B, double 0x40E88966ECBFB15B, double 0x40E88966ECBFB15B, double 0x40E88966ECBFB15B, double 0x40E88966ECBFB15B, double 0x40E88966ECBFB15B, double 0x40E88966ECBFB15B, double 0x40E88966ECBFB15B, double 0x40E88966ECBFB15B, double 0x40E88966ECBFB15B, double 0x40E88966ECBFB15B, double 0x40E88966ECBFB15B>
  %461 = fsub <16 x double> %459, %460
  %extract863.i = extractelement <16 x double> %461, i32 0
  %extract864.i = extractelement <16 x double> %461, i32 1
  %extract865.i = extractelement <16 x double> %461, i32 2
  %extract866.i = extractelement <16 x double> %461, i32 3
  %extract867.i = extractelement <16 x double> %461, i32 4
  %extract868.i = extractelement <16 x double> %461, i32 5
  %extract869.i = extractelement <16 x double> %461, i32 6
  %extract870.i = extractelement <16 x double> %461, i32 7
  %extract871.i = extractelement <16 x double> %461, i32 8
  %extract872.i = extractelement <16 x double> %461, i32 9
  %extract873.i = extractelement <16 x double> %461, i32 10
  %extract874.i = extractelement <16 x double> %461, i32 11
  %extract875.i = extractelement <16 x double> %461, i32 12
  %extract876.i = extractelement <16 x double> %461, i32 13
  %extract877.i = extractelement <16 x double> %461, i32 14
  %extract878.i = extractelement <16 x double> %461, i32 15
  %462 = call double @_Z3expd(double %extract863.i) nounwind
  %463 = call double @_Z3expd(double %extract864.i) nounwind
  %464 = call double @_Z3expd(double %extract865.i) nounwind
  %465 = call double @_Z3expd(double %extract866.i) nounwind
  %466 = call double @_Z3expd(double %extract867.i) nounwind
  %467 = call double @_Z3expd(double %extract868.i) nounwind
  %468 = call double @_Z3expd(double %extract869.i) nounwind
  %469 = call double @_Z3expd(double %extract870.i) nounwind
  %470 = call double @_Z3expd(double %extract871.i) nounwind
  %471 = call double @_Z3expd(double %extract872.i) nounwind
  %472 = call double @_Z3expd(double %extract873.i) nounwind
  %473 = call double @_Z3expd(double %extract874.i) nounwind
  %474 = call double @_Z3expd(double %extract875.i) nounwind
  %475 = call double @_Z3expd(double %extract876.i) nounwind
  %476 = call double @_Z3expd(double %extract877.i) nounwind
  %477 = call double @_Z3expd(double %extract878.i) nounwind
  %temp.vect898.i = insertelement <16 x double> undef, double %462, i32 0
  %temp.vect899.i = insertelement <16 x double> %temp.vect898.i, double %463, i32 1
  %temp.vect900.i = insertelement <16 x double> %temp.vect899.i, double %464, i32 2
  %temp.vect901.i = insertelement <16 x double> %temp.vect900.i, double %465, i32 3
  %temp.vect902.i = insertelement <16 x double> %temp.vect901.i, double %466, i32 4
  %temp.vect903.i = insertelement <16 x double> %temp.vect902.i, double %467, i32 5
  %temp.vect904.i = insertelement <16 x double> %temp.vect903.i, double %468, i32 6
  %temp.vect905.i = insertelement <16 x double> %temp.vect904.i, double %469, i32 7
  %temp.vect906.i = insertelement <16 x double> %temp.vect905.i, double %470, i32 8
  %temp.vect907.i = insertelement <16 x double> %temp.vect906.i, double %471, i32 9
  %temp.vect908.i = insertelement <16 x double> %temp.vect907.i, double %472, i32 10
  %temp.vect909.i = insertelement <16 x double> %temp.vect908.i, double %473, i32 11
  %temp.vect910.i = insertelement <16 x double> %temp.vect909.i, double %474, i32 12
  %temp.vect911.i = insertelement <16 x double> %temp.vect910.i, double %475, i32 13
  %temp.vect912.i = insertelement <16 x double> %temp.vect911.i, double %476, i32 14
  %temp.vect913.i = insertelement <16 x double> %temp.vect912.i, double %477, i32 15
  %478 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %479 = load i64* %478, align 8
  %480 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %481 = load i64* %480, align 8
  %482 = add i64 %479, %481
  %extract881.i = add i64 %482, 1769472
  %483 = getelementptr inbounds double addrspace(1)* %4, i64 %extract881.i
  %ptrTypeCast897.i = bitcast double addrspace(1)* %483 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect913.i, <16 x double> addrspace(1)* %ptrTypeCast897.i, align 8
  %484 = fmul <16 x double> %temp.vect46.i, <double 7.620000e+00, double 7.620000e+00, double 7.620000e+00, double 7.620000e+00, double 7.620000e+00, double 7.620000e+00, double 7.620000e+00, double 7.620000e+00, double 7.620000e+00, double 7.620000e+00, double 7.620000e+00, double 7.620000e+00, double 7.620000e+00, double 7.620000e+00, double 7.620000e+00, double 7.620000e+00>
  %485 = fsub <16 x double> <double 0x405839046E8F29D4, double 0x405839046E8F29D4, double 0x405839046E8F29D4, double 0x405839046E8F29D4, double 0x405839046E8F29D4, double 0x405839046E8F29D4, double 0x405839046E8F29D4, double 0x405839046E8F29D4, double 0x405839046E8F29D4, double 0x405839046E8F29D4, double 0x405839046E8F29D4, double 0x405839046E8F29D4, double 0x405839046E8F29D4, double 0x405839046E8F29D4, double 0x405839046E8F29D4, double 0x405839046E8F29D4>, %484
  %486 = fmul <16 x double> %43, <double 0x40AB66D72085B185, double 0x40AB66D72085B185, double 0x40AB66D72085B185, double 0x40AB66D72085B185, double 0x40AB66D72085B185, double 0x40AB66D72085B185, double 0x40AB66D72085B185, double 0x40AB66D72085B185, double 0x40AB66D72085B185, double 0x40AB66D72085B185, double 0x40AB66D72085B185, double 0x40AB66D72085B185, double 0x40AB66D72085B185, double 0x40AB66D72085B185, double 0x40AB66D72085B185, double 0x40AB66D72085B185>
  %487 = fsub <16 x double> %485, %486
  %extract914.i = extractelement <16 x double> %487, i32 0
  %extract915.i = extractelement <16 x double> %487, i32 1
  %extract916.i = extractelement <16 x double> %487, i32 2
  %extract917.i = extractelement <16 x double> %487, i32 3
  %extract918.i = extractelement <16 x double> %487, i32 4
  %extract919.i = extractelement <16 x double> %487, i32 5
  %extract920.i = extractelement <16 x double> %487, i32 6
  %extract921.i = extractelement <16 x double> %487, i32 7
  %extract922.i = extractelement <16 x double> %487, i32 8
  %extract923.i = extractelement <16 x double> %487, i32 9
  %extract924.i = extractelement <16 x double> %487, i32 10
  %extract925.i = extractelement <16 x double> %487, i32 11
  %extract926.i = extractelement <16 x double> %487, i32 12
  %extract927.i = extractelement <16 x double> %487, i32 13
  %extract928.i = extractelement <16 x double> %487, i32 14
  %extract929.i = extractelement <16 x double> %487, i32 15
  %488 = call double @_Z3expd(double %extract914.i) nounwind
  %489 = call double @_Z3expd(double %extract915.i) nounwind
  %490 = call double @_Z3expd(double %extract916.i) nounwind
  %491 = call double @_Z3expd(double %extract917.i) nounwind
  %492 = call double @_Z3expd(double %extract918.i) nounwind
  %493 = call double @_Z3expd(double %extract919.i) nounwind
  %494 = call double @_Z3expd(double %extract920.i) nounwind
  %495 = call double @_Z3expd(double %extract921.i) nounwind
  %496 = call double @_Z3expd(double %extract922.i) nounwind
  %497 = call double @_Z3expd(double %extract923.i) nounwind
  %498 = call double @_Z3expd(double %extract924.i) nounwind
  %499 = call double @_Z3expd(double %extract925.i) nounwind
  %500 = call double @_Z3expd(double %extract926.i) nounwind
  %501 = call double @_Z3expd(double %extract927.i) nounwind
  %502 = call double @_Z3expd(double %extract928.i) nounwind
  %503 = call double @_Z3expd(double %extract929.i) nounwind
  %temp.vect949.i = insertelement <16 x double> undef, double %488, i32 0
  %temp.vect950.i = insertelement <16 x double> %temp.vect949.i, double %489, i32 1
  %temp.vect951.i = insertelement <16 x double> %temp.vect950.i, double %490, i32 2
  %temp.vect952.i = insertelement <16 x double> %temp.vect951.i, double %491, i32 3
  %temp.vect953.i = insertelement <16 x double> %temp.vect952.i, double %492, i32 4
  %temp.vect954.i = insertelement <16 x double> %temp.vect953.i, double %493, i32 5
  %temp.vect955.i = insertelement <16 x double> %temp.vect954.i, double %494, i32 6
  %temp.vect956.i = insertelement <16 x double> %temp.vect955.i, double %495, i32 7
  %temp.vect957.i = insertelement <16 x double> %temp.vect956.i, double %496, i32 8
  %temp.vect958.i = insertelement <16 x double> %temp.vect957.i, double %497, i32 9
  %temp.vect959.i = insertelement <16 x double> %temp.vect958.i, double %498, i32 10
  %temp.vect960.i = insertelement <16 x double> %temp.vect959.i, double %499, i32 11
  %temp.vect961.i = insertelement <16 x double> %temp.vect960.i, double %500, i32 12
  %temp.vect962.i = insertelement <16 x double> %temp.vect961.i, double %501, i32 13
  %temp.vect963.i = insertelement <16 x double> %temp.vect962.i, double %502, i32 14
  %temp.vect964.i = insertelement <16 x double> %temp.vect963.i, double %503, i32 15
  %504 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %505 = load i64* %504, align 8
  %506 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %507 = load i64* %506, align 8
  %508 = add i64 %505, %507
  %extract932.i = add i64 %508, 1880064
  %509 = getelementptr inbounds double addrspace(1)* %4, i64 %extract932.i
  %ptrTypeCast948.i = bitcast double addrspace(1)* %509 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect964.i, <16 x double> addrspace(1)* %ptrTypeCast948.i, align 8
  %510 = fmul <16 x double> %temp.vect46.i, <double 7.080000e+00, double 7.080000e+00, double 7.080000e+00, double 7.080000e+00, double 7.080000e+00, double 7.080000e+00, double 7.080000e+00, double 7.080000e+00, double 7.080000e+00, double 7.080000e+00, double 7.080000e+00, double 7.080000e+00, double 7.080000e+00, double 7.080000e+00, double 7.080000e+00, double 7.080000e+00>
  %511 = fsub <16 x double> <double 0x4057C6061E92923E, double 0x4057C6061E92923E, double 0x4057C6061E92923E, double 0x4057C6061E92923E, double 0x4057C6061E92923E, double 0x4057C6061E92923E, double 0x4057C6061E92923E, double 0x4057C6061E92923E, double 0x4057C6061E92923E, double 0x4057C6061E92923E, double 0x4057C6061E92923E, double 0x4057C6061E92923E, double 0x4057C6061E92923E, double 0x4057C6061E92923E, double 0x4057C6061E92923E, double 0x4057C6061E92923E>, %510
  %512 = fmul <16 x double> %43, <double 0x40AA4801C044284E, double 0x40AA4801C044284E, double 0x40AA4801C044284E, double 0x40AA4801C044284E, double 0x40AA4801C044284E, double 0x40AA4801C044284E, double 0x40AA4801C044284E, double 0x40AA4801C044284E, double 0x40AA4801C044284E, double 0x40AA4801C044284E, double 0x40AA4801C044284E, double 0x40AA4801C044284E, double 0x40AA4801C044284E, double 0x40AA4801C044284E, double 0x40AA4801C044284E, double 0x40AA4801C044284E>
  %513 = fsub <16 x double> %511, %512
  %extract965.i = extractelement <16 x double> %513, i32 0
  %extract966.i = extractelement <16 x double> %513, i32 1
  %extract967.i = extractelement <16 x double> %513, i32 2
  %extract968.i = extractelement <16 x double> %513, i32 3
  %extract969.i = extractelement <16 x double> %513, i32 4
  %extract970.i = extractelement <16 x double> %513, i32 5
  %extract971.i = extractelement <16 x double> %513, i32 6
  %extract972.i = extractelement <16 x double> %513, i32 7
  %extract973.i = extractelement <16 x double> %513, i32 8
  %extract974.i = extractelement <16 x double> %513, i32 9
  %extract975.i = extractelement <16 x double> %513, i32 10
  %extract976.i = extractelement <16 x double> %513, i32 11
  %extract977.i = extractelement <16 x double> %513, i32 12
  %extract978.i = extractelement <16 x double> %513, i32 13
  %extract979.i = extractelement <16 x double> %513, i32 14
  %extract980.i = extractelement <16 x double> %513, i32 15
  %514 = call double @_Z3expd(double %extract965.i) nounwind
  %515 = call double @_Z3expd(double %extract966.i) nounwind
  %516 = call double @_Z3expd(double %extract967.i) nounwind
  %517 = call double @_Z3expd(double %extract968.i) nounwind
  %518 = call double @_Z3expd(double %extract969.i) nounwind
  %519 = call double @_Z3expd(double %extract970.i) nounwind
  %520 = call double @_Z3expd(double %extract971.i) nounwind
  %521 = call double @_Z3expd(double %extract972.i) nounwind
  %522 = call double @_Z3expd(double %extract973.i) nounwind
  %523 = call double @_Z3expd(double %extract974.i) nounwind
  %524 = call double @_Z3expd(double %extract975.i) nounwind
  %525 = call double @_Z3expd(double %extract976.i) nounwind
  %526 = call double @_Z3expd(double %extract977.i) nounwind
  %527 = call double @_Z3expd(double %extract978.i) nounwind
  %528 = call double @_Z3expd(double %extract979.i) nounwind
  %529 = call double @_Z3expd(double %extract980.i) nounwind
  %temp.vect1000.i = insertelement <16 x double> undef, double %514, i32 0
  %temp.vect1001.i = insertelement <16 x double> %temp.vect1000.i, double %515, i32 1
  %temp.vect1002.i = insertelement <16 x double> %temp.vect1001.i, double %516, i32 2
  %temp.vect1003.i = insertelement <16 x double> %temp.vect1002.i, double %517, i32 3
  %temp.vect1004.i = insertelement <16 x double> %temp.vect1003.i, double %518, i32 4
  %temp.vect1005.i = insertelement <16 x double> %temp.vect1004.i, double %519, i32 5
  %temp.vect1006.i = insertelement <16 x double> %temp.vect1005.i, double %520, i32 6
  %temp.vect1007.i = insertelement <16 x double> %temp.vect1006.i, double %521, i32 7
  %temp.vect1008.i = insertelement <16 x double> %temp.vect1007.i, double %522, i32 8
  %temp.vect1009.i = insertelement <16 x double> %temp.vect1008.i, double %523, i32 9
  %temp.vect1010.i = insertelement <16 x double> %temp.vect1009.i, double %524, i32 10
  %temp.vect1011.i = insertelement <16 x double> %temp.vect1010.i, double %525, i32 11
  %temp.vect1012.i = insertelement <16 x double> %temp.vect1011.i, double %526, i32 12
  %temp.vect1013.i = insertelement <16 x double> %temp.vect1012.i, double %527, i32 13
  %temp.vect1014.i = insertelement <16 x double> %temp.vect1013.i, double %528, i32 14
  %temp.vect1015.i = insertelement <16 x double> %temp.vect1014.i, double %529, i32 15
  %530 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %531 = load i64* %530, align 8
  %532 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %533 = load i64* %532, align 8
  %534 = add i64 %531, %533
  %extract983.i = add i64 %534, 1990656
  %535 = getelementptr inbounds double addrspace(1)* %4, i64 %extract983.i
  %ptrTypeCast999.i = bitcast double addrspace(1)* %535 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect1015.i, <16 x double> addrspace(1)* %ptrTypeCast999.i, align 8
  %536 = fmul <16 x double> %temp.vect46.i, <double 1.200000e+01, double 1.200000e+01, double 1.200000e+01, double 1.200000e+01, double 1.200000e+01, double 1.200000e+01, double 1.200000e+01, double 1.200000e+01, double 1.200000e+01, double 1.200000e+01, double 1.200000e+01, double 1.200000e+01, double 1.200000e+01, double 1.200000e+01, double 1.200000e+01, double 1.200000e+01>
  %537 = fsub <16 x double> <double 0x40614E16D0917D6B, double 0x40614E16D0917D6B, double 0x40614E16D0917D6B, double 0x40614E16D0917D6B, double 0x40614E16D0917D6B, double 0x40614E16D0917D6B, double 0x40614E16D0917D6B, double 0x40614E16D0917D6B, double 0x40614E16D0917D6B, double 0x40614E16D0917D6B, double 0x40614E16D0917D6B, double 0x40614E16D0917D6B, double 0x40614E16D0917D6B, double 0x40614E16D0917D6B, double 0x40614E16D0917D6B, double 0x40614E16D0917D6B>, %536
  %538 = fmul <16 x double> %43, <double 0x40A776315F45E0B5, double 0x40A776315F45E0B5, double 0x40A776315F45E0B5, double 0x40A776315F45E0B5, double 0x40A776315F45E0B5, double 0x40A776315F45E0B5, double 0x40A776315F45E0B5, double 0x40A776315F45E0B5, double 0x40A776315F45E0B5, double 0x40A776315F45E0B5, double 0x40A776315F45E0B5, double 0x40A776315F45E0B5, double 0x40A776315F45E0B5, double 0x40A776315F45E0B5, double 0x40A776315F45E0B5, double 0x40A776315F45E0B5>
  %539 = fsub <16 x double> %537, %538
  %extract1016.i = extractelement <16 x double> %539, i32 0
  %extract1017.i = extractelement <16 x double> %539, i32 1
  %extract1018.i = extractelement <16 x double> %539, i32 2
  %extract1019.i = extractelement <16 x double> %539, i32 3
  %extract1020.i = extractelement <16 x double> %539, i32 4
  %extract1021.i = extractelement <16 x double> %539, i32 5
  %extract1022.i = extractelement <16 x double> %539, i32 6
  %extract1023.i = extractelement <16 x double> %539, i32 7
  %extract1024.i = extractelement <16 x double> %539, i32 8
  %extract1025.i = extractelement <16 x double> %539, i32 9
  %extract1026.i = extractelement <16 x double> %539, i32 10
  %extract1027.i = extractelement <16 x double> %539, i32 11
  %extract1028.i = extractelement <16 x double> %539, i32 12
  %extract1029.i = extractelement <16 x double> %539, i32 13
  %extract1030.i = extractelement <16 x double> %539, i32 14
  %extract1031.i = extractelement <16 x double> %539, i32 15
  %540 = call double @_Z3expd(double %extract1016.i) nounwind
  %541 = call double @_Z3expd(double %extract1017.i) nounwind
  %542 = call double @_Z3expd(double %extract1018.i) nounwind
  %543 = call double @_Z3expd(double %extract1019.i) nounwind
  %544 = call double @_Z3expd(double %extract1020.i) nounwind
  %545 = call double @_Z3expd(double %extract1021.i) nounwind
  %546 = call double @_Z3expd(double %extract1022.i) nounwind
  %547 = call double @_Z3expd(double %extract1023.i) nounwind
  %548 = call double @_Z3expd(double %extract1024.i) nounwind
  %549 = call double @_Z3expd(double %extract1025.i) nounwind
  %550 = call double @_Z3expd(double %extract1026.i) nounwind
  %551 = call double @_Z3expd(double %extract1027.i) nounwind
  %552 = call double @_Z3expd(double %extract1028.i) nounwind
  %553 = call double @_Z3expd(double %extract1029.i) nounwind
  %554 = call double @_Z3expd(double %extract1030.i) nounwind
  %555 = call double @_Z3expd(double %extract1031.i) nounwind
  %temp.vect1051.i = insertelement <16 x double> undef, double %540, i32 0
  %temp.vect1052.i = insertelement <16 x double> %temp.vect1051.i, double %541, i32 1
  %temp.vect1053.i = insertelement <16 x double> %temp.vect1052.i, double %542, i32 2
  %temp.vect1054.i = insertelement <16 x double> %temp.vect1053.i, double %543, i32 3
  %temp.vect1055.i = insertelement <16 x double> %temp.vect1054.i, double %544, i32 4
  %temp.vect1056.i = insertelement <16 x double> %temp.vect1055.i, double %545, i32 5
  %temp.vect1057.i = insertelement <16 x double> %temp.vect1056.i, double %546, i32 6
  %temp.vect1058.i = insertelement <16 x double> %temp.vect1057.i, double %547, i32 7
  %temp.vect1059.i = insertelement <16 x double> %temp.vect1058.i, double %548, i32 8
  %temp.vect1060.i = insertelement <16 x double> %temp.vect1059.i, double %549, i32 9
  %temp.vect1061.i = insertelement <16 x double> %temp.vect1060.i, double %550, i32 10
  %temp.vect1062.i = insertelement <16 x double> %temp.vect1061.i, double %551, i32 11
  %temp.vect1063.i = insertelement <16 x double> %temp.vect1062.i, double %552, i32 12
  %temp.vect1064.i = insertelement <16 x double> %temp.vect1063.i, double %553, i32 13
  %temp.vect1065.i = insertelement <16 x double> %temp.vect1064.i, double %554, i32 14
  %temp.vect1066.i = insertelement <16 x double> %temp.vect1065.i, double %555, i32 15
  %556 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %557 = load i64* %556, align 8
  %558 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %559 = load i64* %558, align 8
  %560 = add i64 %557, %559
  %extract1034.i = add i64 %560, 2101248
  %561 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1034.i
  %ptrTypeCast1050.i = bitcast double addrspace(1)* %561 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect1066.i, <16 x double> addrspace(1)* %ptrTypeCast1050.i, align 8
  %562 = fmul <16 x double> %temp.vect46.i, <double 6.660000e+00, double 6.660000e+00, double 6.660000e+00, double 6.660000e+00, double 6.660000e+00, double 6.660000e+00, double 6.660000e+00, double 6.660000e+00, double 6.660000e+00, double 6.660000e+00, double 6.660000e+00, double 6.660000e+00, double 6.660000e+00, double 6.660000e+00, double 6.660000e+00, double 6.660000e+00>
  %563 = fsub <16 x double> <double 0x40565546441C8F83, double 0x40565546441C8F83, double 0x40565546441C8F83, double 0x40565546441C8F83, double 0x40565546441C8F83, double 0x40565546441C8F83, double 0x40565546441C8F83, double 0x40565546441C8F83, double 0x40565546441C8F83, double 0x40565546441C8F83, double 0x40565546441C8F83, double 0x40565546441C8F83, double 0x40565546441C8F83, double 0x40565546441C8F83, double 0x40565546441C8F83, double 0x40565546441C8F83>, %562
  %564 = fmul <16 x double> %43, <double 0x40AB850888F861A6, double 0x40AB850888F861A6, double 0x40AB850888F861A6, double 0x40AB850888F861A6, double 0x40AB850888F861A6, double 0x40AB850888F861A6, double 0x40AB850888F861A6, double 0x40AB850888F861A6, double 0x40AB850888F861A6, double 0x40AB850888F861A6, double 0x40AB850888F861A6, double 0x40AB850888F861A6, double 0x40AB850888F861A6, double 0x40AB850888F861A6, double 0x40AB850888F861A6, double 0x40AB850888F861A6>
  %565 = fsub <16 x double> %563, %564
  %extract1067.i = extractelement <16 x double> %565, i32 0
  %extract1068.i = extractelement <16 x double> %565, i32 1
  %extract1069.i = extractelement <16 x double> %565, i32 2
  %extract1070.i = extractelement <16 x double> %565, i32 3
  %extract1071.i = extractelement <16 x double> %565, i32 4
  %extract1072.i = extractelement <16 x double> %565, i32 5
  %extract1073.i = extractelement <16 x double> %565, i32 6
  %extract1074.i = extractelement <16 x double> %565, i32 7
  %extract1075.i = extractelement <16 x double> %565, i32 8
  %extract1076.i = extractelement <16 x double> %565, i32 9
  %extract1077.i = extractelement <16 x double> %565, i32 10
  %extract1078.i = extractelement <16 x double> %565, i32 11
  %extract1079.i = extractelement <16 x double> %565, i32 12
  %extract1080.i = extractelement <16 x double> %565, i32 13
  %extract1081.i = extractelement <16 x double> %565, i32 14
  %extract1082.i = extractelement <16 x double> %565, i32 15
  %566 = call double @_Z3expd(double %extract1067.i) nounwind
  %567 = call double @_Z3expd(double %extract1068.i) nounwind
  %568 = call double @_Z3expd(double %extract1069.i) nounwind
  %569 = call double @_Z3expd(double %extract1070.i) nounwind
  %570 = call double @_Z3expd(double %extract1071.i) nounwind
  %571 = call double @_Z3expd(double %extract1072.i) nounwind
  %572 = call double @_Z3expd(double %extract1073.i) nounwind
  %573 = call double @_Z3expd(double %extract1074.i) nounwind
  %574 = call double @_Z3expd(double %extract1075.i) nounwind
  %575 = call double @_Z3expd(double %extract1076.i) nounwind
  %576 = call double @_Z3expd(double %extract1077.i) nounwind
  %577 = call double @_Z3expd(double %extract1078.i) nounwind
  %578 = call double @_Z3expd(double %extract1079.i) nounwind
  %579 = call double @_Z3expd(double %extract1080.i) nounwind
  %580 = call double @_Z3expd(double %extract1081.i) nounwind
  %581 = call double @_Z3expd(double %extract1082.i) nounwind
  %temp.vect1102.i = insertelement <16 x double> undef, double %566, i32 0
  %temp.vect1103.i = insertelement <16 x double> %temp.vect1102.i, double %567, i32 1
  %temp.vect1104.i = insertelement <16 x double> %temp.vect1103.i, double %568, i32 2
  %temp.vect1105.i = insertelement <16 x double> %temp.vect1104.i, double %569, i32 3
  %temp.vect1106.i = insertelement <16 x double> %temp.vect1105.i, double %570, i32 4
  %temp.vect1107.i = insertelement <16 x double> %temp.vect1106.i, double %571, i32 5
  %temp.vect1108.i = insertelement <16 x double> %temp.vect1107.i, double %572, i32 6
  %temp.vect1109.i = insertelement <16 x double> %temp.vect1108.i, double %573, i32 7
  %temp.vect1110.i = insertelement <16 x double> %temp.vect1109.i, double %574, i32 8
  %temp.vect1111.i = insertelement <16 x double> %temp.vect1110.i, double %575, i32 9
  %temp.vect1112.i = insertelement <16 x double> %temp.vect1111.i, double %576, i32 10
  %temp.vect1113.i = insertelement <16 x double> %temp.vect1112.i, double %577, i32 11
  %temp.vect1114.i = insertelement <16 x double> %temp.vect1113.i, double %578, i32 12
  %temp.vect1115.i = insertelement <16 x double> %temp.vect1114.i, double %579, i32 13
  %temp.vect1116.i = insertelement <16 x double> %temp.vect1115.i, double %580, i32 14
  %temp.vect1117.i = insertelement <16 x double> %temp.vect1116.i, double %581, i32 15
  %582 = getelementptr %struct.PaddedDimId* %13, i64 %CurrWI..0.i, i32 0, i64 0
  %583 = load i64* %582, align 8
  %584 = getelementptr %struct.PaddedDimId* %10, i64 0, i32 0, i64 0
  %585 = load i64* %584, align 8
  %586 = add i64 %583, %585
  %extract1085.i = add i64 %586, 2211840
  %587 = getelementptr inbounds double addrspace(1)* %4, i64 %extract1085.i
  %ptrTypeCast1101.i = bitcast double addrspace(1)* %587 to <16 x double> addrspace(1)*
  store <16 x double> %temp.vect1117.i, <16 x double> addrspace(1)* %ptrTypeCast1101.i, align 8
  %check.WI.iter.i = icmp ult i64 %CurrWI..0.i, %16
  br i1 %check.WI.iter.i, label %thenBB.i, label %____Vectorized_.ratt10_kernel_separated_args.exit

thenBB.i:                                         ; preds = %SyncBB.i
  %"CurrWI++.i" = add nuw i64 %CurrWI..0.i, 1
  br label %SyncBB.i

____Vectorized_.ratt10_kernel_separated_args.exit: ; preds = %SyncBB.i
  ret void
}

!opencl.kernels = !{!0}

!0 = metadata !{void (double addrspace(1)*, double addrspace(1)*, double, i8 addrspace(3)*, %struct.WorkDim*, i64*, %struct.PaddedDimId*, %struct.PaddedDimId*, i64*, i64, i8*, i64*)* @__ratt10_kernel_separated_args, metadata !1, metadata !1, metadata !"", metadata !"double const __attribute__((address_space(1))) *, double __attribute__((address_space(1))) *, double", metadata !"opencl_ratt10_kernel_locals_anchor", void (i8*)* @ratt10_kernel}
!1 = metadata !{i32 0, i32 0, i32 0}
