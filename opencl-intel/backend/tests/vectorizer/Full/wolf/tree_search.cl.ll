; RUN: llvm-as %s -o %t.bc
; RUN: opt  -runtimelib %p/../runtime.bc -std-compile-opts -inline-threshold=4096 -inline -lowerswitch -scalarize -mergereturn -loopsimplify -phicanon -predicate -mem2reg -dce -packetize -packet-size=4 -resolve -verify %t.bc -S -o %t1.ll
; RUN: FileCheck %s --input-file=%t1.ll
; ModuleID = '.\cl_files\tree_search.cl'
target datalayout = "e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-f80:128:128-v64:64:64-v128:128:128-a0:0:64-f80:32:32-n8:16:32"
target triple = "i686-pc-win32"

%opencl_metadata_type = type <{ i8*, i8*, [4 x i32], [4 x i32], i8*, i8* }>

@opencl_TreeSearch_locals = appending global [1 x i8*] zeroinitializer, section "llvm.metadata" ; <[1 x i8*]*> [#uses=1]
@opencl_TreeSearch_parameters = appending global [391 x i8] c"unsigned int __attribute__((address_space(1))) *, unsigned int __attribute__((address_space(1))) *, unsigned int __attribute__((address_space(1))) *, unsigned int __attribute__((address_space(1))) *, int __attribute__((address_space(1))) *, int __attribute__((address_space(1))) *, int __attribute__((address_space(1))) *, int __attribute__((address_space(1))) *, unsigned int, unsigned int\00", section "llvm.metadata" ; <[391 x i8]*> [#uses=1]
@opencl_metadata = appending global [1 x %opencl_metadata_type] [%opencl_metadata_type <{ i8* bitcast (void (i32 addrspace(1)*, i32 addrspace(1)*, i32 addrspace(1)*, i32 addrspace(1)*, i32 addrspace(1)*, i32 addrspace(1)*, i32 addrspace(1)*, i32 addrspace(1)*, i32, i32)* @TreeSearch to i8*), i8* null, [4 x i32] zeroinitializer, [4 x i32] zeroinitializer, i8* bitcast ([1 x i8*]* @opencl_TreeSearch_locals to i8*), i8* getelementptr inbounds ([391 x i8]* @opencl_TreeSearch_parameters, i32 0, i32 0) }>], section "llvm.metadata" ; <[1 x %opencl_metadata_type]*> [#uses=0]

; CHECK: ret
define void @TreeSearch(i32 addrspace(1)* %Input2, i32 addrspace(1)* %KeyValue, i32 addrspace(1)* %output_size, i32 addrspace(1)* %Queries, i32 addrspace(1)* %LookUp1, i32 addrspace(1)* %LookUp2, i32 addrspace(1)* %LookUp3, i32 addrspace(1)* %LookUp4, i32 %global_number_of_elements, i32 %global_number_of_queries) nounwind {
entry:
  %Input2.addr = alloca i32 addrspace(1)*, align 4 ; <i32 addrspace(1)**> [#uses=145]
  %KeyValue.addr = alloca i32 addrspace(1)*, align 4 ; <i32 addrspace(1)**> [#uses=17]
  %output_size.addr = alloca i32 addrspace(1)*, align 4 ; <i32 addrspace(1)**> [#uses=2]
  %Queries.addr = alloca i32 addrspace(1)*, align 4 ; <i32 addrspace(1)**> [#uses=41]
  %LookUp1.addr = alloca i32 addrspace(1)*, align 4 ; <i32 addrspace(1)**> [#uses=1]
  %LookUp2.addr = alloca i32 addrspace(1)*, align 4 ; <i32 addrspace(1)**> [#uses=17]
  %LookUp3.addr = alloca i32 addrspace(1)*, align 4 ; <i32 addrspace(1)**> [#uses=81]
  %LookUp4.addr = alloca i32 addrspace(1)*, align 4 ; <i32 addrspace(1)**> [#uses=41]
  %global_number_of_elements.addr = alloca i32, align 4 ; <i32*> [#uses=1]
  %global_number_of_queries.addr = alloca i32, align 4 ; <i32*> [#uses=6]
  %i = alloca i32, align 4                        ; <i32*> [#uses=0]
  %j = alloca i32, align 4                        ; <i32*> [#uses=44]
  %id = alloca i32, align 4                       ; <i32*> [#uses=3]
  %local_output_size = alloca i32, align 4        ; <i32*> [#uses=18]
  %ntasks = alloca i32, align 4                   ; <i32*> [#uses=4]
  %global_elements_per_task = alloca i32, align 4 ; <i32*> [#uses=3]
  %starting_index = alloca i32, align 4           ; <i32*> [#uses=3]
  %ending_index = alloca i32, align 4             ; <i32*> [#uses=4]
  %tmp24 = alloca <4 x i32>, align 16             ; <<4 x i32>*> [#uses=97]
  %.compoundliteral = alloca <4 x i32>, align 16  ; <<4 x i32>*> [#uses=2]
  %base_index_0 = alloca i32, align 4             ; <i32*> [#uses=23]
  %delta_0 = alloca i32, align 4                  ; <i32*> [#uses=16]
  %block_base_index_0 = alloca i32, align 4       ; <i32*> [#uses=11]
  %base_index2_0 = alloca i32, align 4            ; <i32*> [#uses=4]
  %base_index_1 = alloca i32, align 4             ; <i32*> [#uses=23]
  %delta_1 = alloca i32, align 4                  ; <i32*> [#uses=16]
  %block_base_index_1 = alloca i32, align 4       ; <i32*> [#uses=11]
  %base_index2_1 = alloca i32, align 4            ; <i32*> [#uses=4]
  %base_index_2 = alloca i32, align 4             ; <i32*> [#uses=23]
  %delta_2 = alloca i32, align 4                  ; <i32*> [#uses=16]
  %block_base_index_2 = alloca i32, align 4       ; <i32*> [#uses=11]
  %base_index2_2 = alloca i32, align 4            ; <i32*> [#uses=4]
  %base_index_3 = alloca i32, align 4             ; <i32*> [#uses=23]
  %delta_3 = alloca i32, align 4                  ; <i32*> [#uses=16]
  %block_base_index_3 = alloca i32, align 4       ; <i32*> [#uses=11]
  %base_index2_3 = alloca i32, align 4            ; <i32*> [#uses=4]
  %base_index_4 = alloca i32, align 4             ; <i32*> [#uses=23]
  %delta_4 = alloca i32, align 4                  ; <i32*> [#uses=16]
  %block_base_index_4 = alloca i32, align 4       ; <i32*> [#uses=11]
  %base_index2_4 = alloca i32, align 4            ; <i32*> [#uses=4]
  %base_index_5 = alloca i32, align 4             ; <i32*> [#uses=23]
  %delta_5 = alloca i32, align 4                  ; <i32*> [#uses=16]
  %block_base_index_5 = alloca i32, align 4       ; <i32*> [#uses=11]
  %base_index2_5 = alloca i32, align 4            ; <i32*> [#uses=4]
  %base_index_6 = alloca i32, align 4             ; <i32*> [#uses=23]
  %delta_6 = alloca i32, align 4                  ; <i32*> [#uses=16]
  %block_base_index_6 = alloca i32, align 4       ; <i32*> [#uses=11]
  %base_index2_6 = alloca i32, align 4            ; <i32*> [#uses=4]
  %base_index_7 = alloca i32, align 4             ; <i32*> [#uses=23]
  %delta_7 = alloca i32, align 4                  ; <i32*> [#uses=16]
  %block_base_index_7 = alloca i32, align 4       ; <i32*> [#uses=11]
  %base_index2_7 = alloca i32, align 4            ; <i32*> [#uses=4]
  %offset1_0 = alloca i32, align 4                ; <i32*> [#uses=11]
  %offset2_0 = alloca i32, align 4                ; <i32*> [#uses=24]
  %offset3_0 = alloca i32, align 4                ; <i32*> [#uses=25]
  %offset1_1 = alloca i32, align 4                ; <i32*> [#uses=11]
  %offset2_1 = alloca i32, align 4                ; <i32*> [#uses=24]
  %offset3_1 = alloca i32, align 4                ; <i32*> [#uses=25]
  %offset1_2 = alloca i32, align 4                ; <i32*> [#uses=11]
  %offset2_2 = alloca i32, align 4                ; <i32*> [#uses=24]
  %offset3_2 = alloca i32, align 4                ; <i32*> [#uses=25]
  %offset1_3 = alloca i32, align 4                ; <i32*> [#uses=11]
  %offset2_3 = alloca i32, align 4                ; <i32*> [#uses=24]
  %offset3_3 = alloca i32, align 4                ; <i32*> [#uses=25]
  %offset1_4 = alloca i32, align 4                ; <i32*> [#uses=11]
  %offset2_4 = alloca i32, align 4                ; <i32*> [#uses=24]
  %offset3_4 = alloca i32, align 4                ; <i32*> [#uses=25]
  %offset1_5 = alloca i32, align 4                ; <i32*> [#uses=11]
  %offset2_5 = alloca i32, align 4                ; <i32*> [#uses=24]
  %offset3_5 = alloca i32, align 4                ; <i32*> [#uses=25]
  %offset1_6 = alloca i32, align 4                ; <i32*> [#uses=11]
  %offset2_6 = alloca i32, align 4                ; <i32*> [#uses=24]
  %offset3_6 = alloca i32, align 4                ; <i32*> [#uses=25]
  %offset1_7 = alloca i32, align 4                ; <i32*> [#uses=11]
  %offset2_7 = alloca i32, align 4                ; <i32*> [#uses=24]
  %offset3_7 = alloca i32, align 4                ; <i32*> [#uses=25]
  %xmm_tree_0_3_0 = alloca <4 x i32>, align 16    ; <<4 x i32>*> [#uses=24]
  %xmm_tree_0_3_1 = alloca <4 x i32>, align 16    ; <<4 x i32>*> [#uses=24]
  %xmm_tree_0_3_2 = alloca <4 x i32>, align 16    ; <<4 x i32>*> [#uses=24]
  %xmm_tree_0_3_3 = alloca <4 x i32>, align 16    ; <<4 x i32>*> [#uses=24]
  %xmm_tree_0_3_4 = alloca <4 x i32>, align 16    ; <<4 x i32>*> [#uses=24]
  %xmm_tree_0_3_5 = alloca <4 x i32>, align 16    ; <<4 x i32>*> [#uses=24]
  %xmm_tree_0_3_6 = alloca <4 x i32>, align 16    ; <<4 x i32>*> [#uses=24]
  %xmm_tree_0_3_7 = alloca <4 x i32>, align 16    ; <<4 x i32>*> [#uses=24]
  %temp_index_0 = alloca i32, align 4             ; <i32*> [#uses=29]
  %temp_index_1 = alloca i32, align 4             ; <i32*> [#uses=29]
  %temp_index_2 = alloca i32, align 4             ; <i32*> [#uses=29]
  %temp_index_3 = alloca i32, align 4             ; <i32*> [#uses=29]
  %temp_index_4 = alloca i32, align 4             ; <i32*> [#uses=29]
  %temp_index_5 = alloca i32, align 4             ; <i32*> [#uses=29]
  %temp_index_6 = alloca i32, align 4             ; <i32*> [#uses=29]
  %temp_index_7 = alloca i32, align 4             ; <i32*> [#uses=29]
  %temp_index_v_0 = alloca <4 x i32>, align 16    ; <<4 x i32>*> [#uses=48]
  %temp_index_v_1 = alloca <4 x i32>, align 16    ; <<4 x i32>*> [#uses=48]
  %temp_index_v_2 = alloca <4 x i32>, align 16    ; <<4 x i32>*> [#uses=48]
  %temp_index_v_3 = alloca <4 x i32>, align 16    ; <<4 x i32>*> [#uses=48]
  %temp_index_v_4 = alloca <4 x i32>, align 16    ; <<4 x i32>*> [#uses=48]
  %temp_index_v_5 = alloca <4 x i32>, align 16    ; <<4 x i32>*> [#uses=48]
  %temp_index_v_6 = alloca <4 x i32>, align 16    ; <<4 x i32>*> [#uses=48]
  %temp_index_v_7 = alloca <4 x i32>, align 16    ; <<4 x i32>*> [#uses=48]
  %query_element_0 = alloca i32, align 4          ; <i32*> [#uses=2]
  %query_element_1 = alloca i32, align 4          ; <i32*> [#uses=2]
  %query_element_2 = alloca i32, align 4          ; <i32*> [#uses=2]
  %query_element_3 = alloca i32, align 4          ; <i32*> [#uses=2]
  %query_element_4 = alloca i32, align 4          ; <i32*> [#uses=2]
  %query_element_5 = alloca i32, align 4          ; <i32*> [#uses=2]
  %query_element_6 = alloca i32, align 4          ; <i32*> [#uses=2]
  %query_element_7 = alloca i32, align 4          ; <i32*> [#uses=2]
  %xmm_query_element_0 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=13]
  %.compoundliteral158 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %xmm_query_element_1 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=13]
  %.compoundliteral184 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %xmm_query_element_2 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=13]
  %.compoundliteral211 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %xmm_query_element_3 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=13]
  %.compoundliteral238 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %xmm_query_element_4 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=13]
  %.compoundliteral265 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %xmm_query_element_5 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=13]
  %.compoundliteral292 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %xmm_query_element_6 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=13]
  %.compoundliteral319 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %xmm_query_element_7 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=13]
  %.compoundliteral346 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %addr_0_3_0 = alloca i32 addrspace(1)*, align 4 ; <i32 addrspace(1)**> [#uses=60]
  %addr_0_3_1 = alloca i32 addrspace(1)*, align 4 ; <i32 addrspace(1)**> [#uses=60]
  %addr_0_3_2 = alloca i32 addrspace(1)*, align 4 ; <i32 addrspace(1)**> [#uses=60]
  %addr_0_3_3 = alloca i32 addrspace(1)*, align 4 ; <i32 addrspace(1)**> [#uses=60]
  %addr_0_3_4 = alloca i32 addrspace(1)*, align 4 ; <i32 addrspace(1)**> [#uses=60]
  %addr_0_3_5 = alloca i32 addrspace(1)*, align 4 ; <i32 addrspace(1)**> [#uses=60]
  %addr_0_3_6 = alloca i32 addrspace(1)*, align 4 ; <i32 addrspace(1)**> [#uses=60]
  %addr_0_3_7 = alloca i32 addrspace(1)*, align 4 ; <i32 addrspace(1)**> [#uses=60]
  %.compoundliteral382 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral425 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral478 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral522 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral576 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral620 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral674 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral718 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral772 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral816 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral870 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral914 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral968 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral1012 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral1066 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral1110 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral1164 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral1208 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral1262 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral1306 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral1360 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral1404 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral1458 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral1502 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral1556 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral1600 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral1654 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral1698 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral1752 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral1796 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral1850 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral1894 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral1953 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral2017 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral2082 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral2147 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral2212 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral2277 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral2342 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral2407 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral2467 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral2511 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral2565 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral2609 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral2663 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral2707 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral2761 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral2805 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral2859 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral2903 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral2957 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral3001 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral3055 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral3099 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral3153 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral3197 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral3251 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral3295 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral3349 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral3393 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral3447 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral3491 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral3545 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral3589 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral3643 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral3687 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral3741 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral3785 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral3839 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral3883 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral3937 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral3981 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral4040 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral4105 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral4170 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral4235 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral4300 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral4365 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral4430 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral4495 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral4555 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral4599 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral4653 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral4697 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral4751 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral4795 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral4849 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral4893 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral4947 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral4991 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral5045 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral5089 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral5143 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral5187 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral5241 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  %.compoundliteral5285 = alloca <4 x i32>, align 16 ; <<4 x i32>*> [#uses=2]
  store i32 addrspace(1)* %Input2, i32 addrspace(1)** %Input2.addr
  store i32 addrspace(1)* %KeyValue, i32 addrspace(1)** %KeyValue.addr
  store i32 addrspace(1)* %output_size, i32 addrspace(1)** %output_size.addr
  store i32 addrspace(1)* %Queries, i32 addrspace(1)** %Queries.addr
  store i32 addrspace(1)* %LookUp1, i32 addrspace(1)** %LookUp1.addr
  store i32 addrspace(1)* %LookUp2, i32 addrspace(1)** %LookUp2.addr
  store i32 addrspace(1)* %LookUp3, i32 addrspace(1)** %LookUp3.addr
  store i32 addrspace(1)* %LookUp4, i32 addrspace(1)** %LookUp4.addr
  store i32 %global_number_of_elements, i32* %global_number_of_elements.addr
  store i32 %global_number_of_queries, i32* %global_number_of_queries.addr
  %call = call i32 @get_global_id(i32 0)          ; <i32> [#uses=1]
  store i32 %call, i32* %id
  store i32 0, i32* %local_output_size
  %call1 = call i32 @get_global_size(i32 0)       ; <i32> [#uses=1]
  store i32 %call1, i32* %ntasks
  %tmp = load i32* %global_number_of_queries.addr ; <i32> [#uses=1]
  %tmp2 = load i32* %ntasks                       ; <i32> [#uses=2]
  %cmp = icmp eq i32 0, %tmp2                     ; <i1> [#uses=1]
  %sel = select i1 %cmp, i32 1, i32 %tmp2         ; <i32> [#uses=1]
  %rem = urem i32 %tmp, %sel                      ; <i32> [#uses=1]
  %tobool = icmp ne i32 %rem, 0                   ; <i1> [#uses=1]
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %tmp3 = load i32* %global_number_of_queries.addr ; <i32> [#uses=1]
  %tmp4 = load i32* %ntasks                       ; <i32> [#uses=2]
  %cmp5 = icmp eq i32 0, %tmp4                    ; <i1> [#uses=1]
  %sel6 = select i1 %cmp5, i32 1, i32 %tmp4       ; <i32> [#uses=1]
  %div = udiv i32 %tmp3, %sel6                    ; <i32> [#uses=1]
  %add = add i32 %div, 1                          ; <i32> [#uses=1]
  br label %cond.end

cond.false:                                       ; preds = %entry
  %tmp7 = load i32* %global_number_of_queries.addr ; <i32> [#uses=1]
  %tmp8 = load i32* %ntasks                       ; <i32> [#uses=2]
  %cmp9 = icmp eq i32 0, %tmp8                    ; <i1> [#uses=1]
  %sel10 = select i1 %cmp9, i32 1, i32 %tmp8      ; <i32> [#uses=1]
  %div11 = udiv i32 %tmp7, %sel10                 ; <i32> [#uses=1]
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add, %cond.true ], [ %div11, %cond.false ] ; <i32> [#uses=1]
  store i32 %cond, i32* %global_elements_per_task
  %tmp13 = load i32* %id                          ; <i32> [#uses=1]
  %tmp14 = load i32* %global_elements_per_task    ; <i32> [#uses=1]
  %mul = mul i32 %tmp13, %tmp14                   ; <i32> [#uses=1]
  store i32 %mul, i32* %starting_index
  %tmp16 = load i32* %starting_index              ; <i32> [#uses=1]
  %tmp17 = load i32* %global_elements_per_task    ; <i32> [#uses=1]
  %add18 = add nsw i32 %tmp16, %tmp17             ; <i32> [#uses=1]
  store i32 %add18, i32* %ending_index
  %tmp19 = load i32* %ending_index                ; <i32> [#uses=1]
  %tmp20 = load i32* %global_number_of_queries.addr ; <i32> [#uses=1]
  %cmp21 = icmp ugt i32 %tmp19, %tmp20            ; <i1> [#uses=1]
  br i1 %cmp21, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  %tmp22 = load i32* %global_number_of_queries.addr ; <i32> [#uses=1]
  store i32 %tmp22, i32* %ending_index
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.end
  store <4 x i32> <i32 -1, i32 -2, i32 -4, i32 -8>, <4 x i32>* %.compoundliteral
  %tmp25 = load <4 x i32>* %.compoundliteral      ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp25, <4 x i32>* %tmp24
  %tmp26 = load i32* %starting_index              ; <i32> [#uses=1]
  store i32 %tmp26, i32* %j
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %tmp27 = load i32* %j                           ; <i32> [#uses=1]
  %tmp28 = load i32* %ending_index                ; <i32> [#uses=1]
  %cmp29 = icmp slt i32 %tmp27, %tmp28            ; <i1> [#uses=1]
  br i1 %cmp29, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %base_index_0
  store i32 0, i32* %block_base_index_0
  store i32 0, i32* %base_index_1
  store i32 0, i32* %block_base_index_1
  store i32 0, i32* %base_index_2
  store i32 0, i32* %block_base_index_2
  store i32 0, i32* %base_index_3
  store i32 0, i32* %block_base_index_3
  store i32 0, i32* %base_index_4
  store i32 0, i32* %block_base_index_4
  store i32 0, i32* %base_index_5
  store i32 0, i32* %block_base_index_5
  store i32 0, i32* %base_index_6
  store i32 0, i32* %block_base_index_6
  store i32 0, i32* %base_index_7
  store i32 0, i32* %block_base_index_7
  store i32 0, i32* %offset1_0
  store i32 0, i32* %offset2_0
  store i32 0, i32* %offset1_1
  store i32 0, i32* %offset2_1
  store i32 0, i32* %offset1_2
  store i32 0, i32* %offset2_2
  store i32 0, i32* %offset1_3
  store i32 0, i32* %offset2_3
  store i32 0, i32* %offset1_4
  store i32 0, i32* %offset2_4
  store i32 0, i32* %offset1_5
  store i32 0, i32* %offset2_5
  store i32 0, i32* %offset1_6
  store i32 0, i32* %offset2_6
  store i32 0, i32* %offset1_7
  store i32 0, i32* %offset2_7
  %tmp111 = load i32* %j                          ; <i32> [#uses=1]
  %add112 = add nsw i32 %tmp111, 0                ; <i32> [#uses=1]
  %tmp113 = load i32 addrspace(1)** %Queries.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx = getelementptr inbounds i32 addrspace(1)* %tmp113, i32 %add112 ; <i32 addrspace(1)*> [#uses=1]
  %tmp114 = load i32 addrspace(1)* %arrayidx      ; <i32> [#uses=1]
  store i32 %tmp114, i32* %query_element_0
  %tmp116 = load i32* %j                          ; <i32> [#uses=1]
  %add117 = add nsw i32 %tmp116, 1                ; <i32> [#uses=1]
  %tmp118 = load i32 addrspace(1)** %Queries.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx119 = getelementptr inbounds i32 addrspace(1)* %tmp118, i32 %add117 ; <i32 addrspace(1)*> [#uses=1]
  %tmp120 = load i32 addrspace(1)* %arrayidx119   ; <i32> [#uses=1]
  store i32 %tmp120, i32* %query_element_1
  %tmp122 = load i32* %j                          ; <i32> [#uses=1]
  %add123 = add nsw i32 %tmp122, 2                ; <i32> [#uses=1]
  %tmp124 = load i32 addrspace(1)** %Queries.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx125 = getelementptr inbounds i32 addrspace(1)* %tmp124, i32 %add123 ; <i32 addrspace(1)*> [#uses=1]
  %tmp126 = load i32 addrspace(1)* %arrayidx125   ; <i32> [#uses=1]
  store i32 %tmp126, i32* %query_element_2
  %tmp128 = load i32* %j                          ; <i32> [#uses=1]
  %add129 = add nsw i32 %tmp128, 3                ; <i32> [#uses=1]
  %tmp130 = load i32 addrspace(1)** %Queries.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx131 = getelementptr inbounds i32 addrspace(1)* %tmp130, i32 %add129 ; <i32 addrspace(1)*> [#uses=1]
  %tmp132 = load i32 addrspace(1)* %arrayidx131   ; <i32> [#uses=1]
  store i32 %tmp132, i32* %query_element_3
  %tmp134 = load i32* %j                          ; <i32> [#uses=1]
  %add135 = add nsw i32 %tmp134, 4                ; <i32> [#uses=1]
  %tmp136 = load i32 addrspace(1)** %Queries.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx137 = getelementptr inbounds i32 addrspace(1)* %tmp136, i32 %add135 ; <i32 addrspace(1)*> [#uses=1]
  %tmp138 = load i32 addrspace(1)* %arrayidx137   ; <i32> [#uses=1]
  store i32 %tmp138, i32* %query_element_4
  %tmp140 = load i32* %j                          ; <i32> [#uses=1]
  %add141 = add nsw i32 %tmp140, 5                ; <i32> [#uses=1]
  %tmp142 = load i32 addrspace(1)** %Queries.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx143 = getelementptr inbounds i32 addrspace(1)* %tmp142, i32 %add141 ; <i32 addrspace(1)*> [#uses=1]
  %tmp144 = load i32 addrspace(1)* %arrayidx143   ; <i32> [#uses=1]
  store i32 %tmp144, i32* %query_element_5
  %tmp146 = load i32* %j                          ; <i32> [#uses=1]
  %add147 = add nsw i32 %tmp146, 6                ; <i32> [#uses=1]
  %tmp148 = load i32 addrspace(1)** %Queries.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx149 = getelementptr inbounds i32 addrspace(1)* %tmp148, i32 %add147 ; <i32 addrspace(1)*> [#uses=1]
  %tmp150 = load i32 addrspace(1)* %arrayidx149   ; <i32> [#uses=1]
  store i32 %tmp150, i32* %query_element_6
  %tmp152 = load i32* %j                          ; <i32> [#uses=1]
  %add153 = add nsw i32 %tmp152, 7                ; <i32> [#uses=1]
  %tmp154 = load i32 addrspace(1)** %Queries.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx155 = getelementptr inbounds i32 addrspace(1)* %tmp154, i32 %add153 ; <i32 addrspace(1)*> [#uses=1]
  %tmp156 = load i32 addrspace(1)* %arrayidx155   ; <i32> [#uses=1]
  store i32 %tmp156, i32* %query_element_7
  %tmp159 = load i32* %j                          ; <i32> [#uses=1]
  %add160 = add nsw i32 %tmp159, 0                ; <i32> [#uses=1]
  %tmp161 = load i32 addrspace(1)** %Queries.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx162 = getelementptr inbounds i32 addrspace(1)* %tmp161, i32 %add160 ; <i32 addrspace(1)*> [#uses=1]
  %tmp163 = load i32 addrspace(1)* %arrayidx162   ; <i32> [#uses=1]
  %vecinit = insertelement <4 x i32> undef, i32 %tmp163, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp164 = load i32* %j                          ; <i32> [#uses=1]
  %add165 = add nsw i32 %tmp164, 0                ; <i32> [#uses=1]
  %tmp166 = load i32 addrspace(1)** %Queries.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx167 = getelementptr inbounds i32 addrspace(1)* %tmp166, i32 %add165 ; <i32 addrspace(1)*> [#uses=1]
  %tmp168 = load i32 addrspace(1)* %arrayidx167   ; <i32> [#uses=1]
  %vecinit169 = insertelement <4 x i32> %vecinit, i32 %tmp168, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp170 = load i32* %j                          ; <i32> [#uses=1]
  %add171 = add nsw i32 %tmp170, 0                ; <i32> [#uses=1]
  %tmp172 = load i32 addrspace(1)** %Queries.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx173 = getelementptr inbounds i32 addrspace(1)* %tmp172, i32 %add171 ; <i32 addrspace(1)*> [#uses=1]
  %tmp174 = load i32 addrspace(1)* %arrayidx173   ; <i32> [#uses=1]
  %vecinit175 = insertelement <4 x i32> %vecinit169, i32 %tmp174, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp176 = load i32* %j                          ; <i32> [#uses=1]
  %add177 = add nsw i32 %tmp176, 0                ; <i32> [#uses=1]
  %tmp178 = load i32 addrspace(1)** %Queries.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx179 = getelementptr inbounds i32 addrspace(1)* %tmp178, i32 %add177 ; <i32 addrspace(1)*> [#uses=1]
  %tmp180 = load i32 addrspace(1)* %arrayidx179   ; <i32> [#uses=1]
  %vecinit181 = insertelement <4 x i32> %vecinit175, i32 %tmp180, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit181, <4 x i32>* %.compoundliteral158
  %tmp182 = load <4 x i32>* %.compoundliteral158  ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp182, <4 x i32>* %xmm_query_element_0
  %tmp185 = load i32* %j                          ; <i32> [#uses=1]
  %add186 = add nsw i32 %tmp185, 1                ; <i32> [#uses=1]
  %tmp187 = load i32 addrspace(1)** %Queries.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx188 = getelementptr inbounds i32 addrspace(1)* %tmp187, i32 %add186 ; <i32 addrspace(1)*> [#uses=1]
  %tmp189 = load i32 addrspace(1)* %arrayidx188   ; <i32> [#uses=1]
  %vecinit190 = insertelement <4 x i32> undef, i32 %tmp189, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp191 = load i32* %j                          ; <i32> [#uses=1]
  %add192 = add nsw i32 %tmp191, 1                ; <i32> [#uses=1]
  %tmp193 = load i32 addrspace(1)** %Queries.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx194 = getelementptr inbounds i32 addrspace(1)* %tmp193, i32 %add192 ; <i32 addrspace(1)*> [#uses=1]
  %tmp195 = load i32 addrspace(1)* %arrayidx194   ; <i32> [#uses=1]
  %vecinit196 = insertelement <4 x i32> %vecinit190, i32 %tmp195, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp197 = load i32* %j                          ; <i32> [#uses=1]
  %add198 = add nsw i32 %tmp197, 1                ; <i32> [#uses=1]
  %tmp199 = load i32 addrspace(1)** %Queries.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx200 = getelementptr inbounds i32 addrspace(1)* %tmp199, i32 %add198 ; <i32 addrspace(1)*> [#uses=1]
  %tmp201 = load i32 addrspace(1)* %arrayidx200   ; <i32> [#uses=1]
  %vecinit202 = insertelement <4 x i32> %vecinit196, i32 %tmp201, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp203 = load i32* %j                          ; <i32> [#uses=1]
  %add204 = add nsw i32 %tmp203, 1                ; <i32> [#uses=1]
  %tmp205 = load i32 addrspace(1)** %Queries.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx206 = getelementptr inbounds i32 addrspace(1)* %tmp205, i32 %add204 ; <i32 addrspace(1)*> [#uses=1]
  %tmp207 = load i32 addrspace(1)* %arrayidx206   ; <i32> [#uses=1]
  %vecinit208 = insertelement <4 x i32> %vecinit202, i32 %tmp207, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit208, <4 x i32>* %.compoundliteral184
  %tmp209 = load <4 x i32>* %.compoundliteral184  ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp209, <4 x i32>* %xmm_query_element_1
  %tmp212 = load i32* %j                          ; <i32> [#uses=1]
  %add213 = add nsw i32 %tmp212, 2                ; <i32> [#uses=1]
  %tmp214 = load i32 addrspace(1)** %Queries.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx215 = getelementptr inbounds i32 addrspace(1)* %tmp214, i32 %add213 ; <i32 addrspace(1)*> [#uses=1]
  %tmp216 = load i32 addrspace(1)* %arrayidx215   ; <i32> [#uses=1]
  %vecinit217 = insertelement <4 x i32> undef, i32 %tmp216, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp218 = load i32* %j                          ; <i32> [#uses=1]
  %add219 = add nsw i32 %tmp218, 2                ; <i32> [#uses=1]
  %tmp220 = load i32 addrspace(1)** %Queries.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx221 = getelementptr inbounds i32 addrspace(1)* %tmp220, i32 %add219 ; <i32 addrspace(1)*> [#uses=1]
  %tmp222 = load i32 addrspace(1)* %arrayidx221   ; <i32> [#uses=1]
  %vecinit223 = insertelement <4 x i32> %vecinit217, i32 %tmp222, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp224 = load i32* %j                          ; <i32> [#uses=1]
  %add225 = add nsw i32 %tmp224, 2                ; <i32> [#uses=1]
  %tmp226 = load i32 addrspace(1)** %Queries.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx227 = getelementptr inbounds i32 addrspace(1)* %tmp226, i32 %add225 ; <i32 addrspace(1)*> [#uses=1]
  %tmp228 = load i32 addrspace(1)* %arrayidx227   ; <i32> [#uses=1]
  %vecinit229 = insertelement <4 x i32> %vecinit223, i32 %tmp228, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp230 = load i32* %j                          ; <i32> [#uses=1]
  %add231 = add nsw i32 %tmp230, 2                ; <i32> [#uses=1]
  %tmp232 = load i32 addrspace(1)** %Queries.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx233 = getelementptr inbounds i32 addrspace(1)* %tmp232, i32 %add231 ; <i32 addrspace(1)*> [#uses=1]
  %tmp234 = load i32 addrspace(1)* %arrayidx233   ; <i32> [#uses=1]
  %vecinit235 = insertelement <4 x i32> %vecinit229, i32 %tmp234, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit235, <4 x i32>* %.compoundliteral211
  %tmp236 = load <4 x i32>* %.compoundliteral211  ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp236, <4 x i32>* %xmm_query_element_2
  %tmp239 = load i32* %j                          ; <i32> [#uses=1]
  %add240 = add nsw i32 %tmp239, 3                ; <i32> [#uses=1]
  %tmp241 = load i32 addrspace(1)** %Queries.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx242 = getelementptr inbounds i32 addrspace(1)* %tmp241, i32 %add240 ; <i32 addrspace(1)*> [#uses=1]
  %tmp243 = load i32 addrspace(1)* %arrayidx242   ; <i32> [#uses=1]
  %vecinit244 = insertelement <4 x i32> undef, i32 %tmp243, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp245 = load i32* %j                          ; <i32> [#uses=1]
  %add246 = add nsw i32 %tmp245, 3                ; <i32> [#uses=1]
  %tmp247 = load i32 addrspace(1)** %Queries.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx248 = getelementptr inbounds i32 addrspace(1)* %tmp247, i32 %add246 ; <i32 addrspace(1)*> [#uses=1]
  %tmp249 = load i32 addrspace(1)* %arrayidx248   ; <i32> [#uses=1]
  %vecinit250 = insertelement <4 x i32> %vecinit244, i32 %tmp249, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp251 = load i32* %j                          ; <i32> [#uses=1]
  %add252 = add nsw i32 %tmp251, 3                ; <i32> [#uses=1]
  %tmp253 = load i32 addrspace(1)** %Queries.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx254 = getelementptr inbounds i32 addrspace(1)* %tmp253, i32 %add252 ; <i32 addrspace(1)*> [#uses=1]
  %tmp255 = load i32 addrspace(1)* %arrayidx254   ; <i32> [#uses=1]
  %vecinit256 = insertelement <4 x i32> %vecinit250, i32 %tmp255, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp257 = load i32* %j                          ; <i32> [#uses=1]
  %add258 = add nsw i32 %tmp257, 3                ; <i32> [#uses=1]
  %tmp259 = load i32 addrspace(1)** %Queries.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx260 = getelementptr inbounds i32 addrspace(1)* %tmp259, i32 %add258 ; <i32 addrspace(1)*> [#uses=1]
  %tmp261 = load i32 addrspace(1)* %arrayidx260   ; <i32> [#uses=1]
  %vecinit262 = insertelement <4 x i32> %vecinit256, i32 %tmp261, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit262, <4 x i32>* %.compoundliteral238
  %tmp263 = load <4 x i32>* %.compoundliteral238  ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp263, <4 x i32>* %xmm_query_element_3
  %tmp266 = load i32* %j                          ; <i32> [#uses=1]
  %add267 = add nsw i32 %tmp266, 4                ; <i32> [#uses=1]
  %tmp268 = load i32 addrspace(1)** %Queries.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx269 = getelementptr inbounds i32 addrspace(1)* %tmp268, i32 %add267 ; <i32 addrspace(1)*> [#uses=1]
  %tmp270 = load i32 addrspace(1)* %arrayidx269   ; <i32> [#uses=1]
  %vecinit271 = insertelement <4 x i32> undef, i32 %tmp270, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp272 = load i32* %j                          ; <i32> [#uses=1]
  %add273 = add nsw i32 %tmp272, 4                ; <i32> [#uses=1]
  %tmp274 = load i32 addrspace(1)** %Queries.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx275 = getelementptr inbounds i32 addrspace(1)* %tmp274, i32 %add273 ; <i32 addrspace(1)*> [#uses=1]
  %tmp276 = load i32 addrspace(1)* %arrayidx275   ; <i32> [#uses=1]
  %vecinit277 = insertelement <4 x i32> %vecinit271, i32 %tmp276, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp278 = load i32* %j                          ; <i32> [#uses=1]
  %add279 = add nsw i32 %tmp278, 4                ; <i32> [#uses=1]
  %tmp280 = load i32 addrspace(1)** %Queries.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx281 = getelementptr inbounds i32 addrspace(1)* %tmp280, i32 %add279 ; <i32 addrspace(1)*> [#uses=1]
  %tmp282 = load i32 addrspace(1)* %arrayidx281   ; <i32> [#uses=1]
  %vecinit283 = insertelement <4 x i32> %vecinit277, i32 %tmp282, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp284 = load i32* %j                          ; <i32> [#uses=1]
  %add285 = add nsw i32 %tmp284, 4                ; <i32> [#uses=1]
  %tmp286 = load i32 addrspace(1)** %Queries.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx287 = getelementptr inbounds i32 addrspace(1)* %tmp286, i32 %add285 ; <i32 addrspace(1)*> [#uses=1]
  %tmp288 = load i32 addrspace(1)* %arrayidx287   ; <i32> [#uses=1]
  %vecinit289 = insertelement <4 x i32> %vecinit283, i32 %tmp288, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit289, <4 x i32>* %.compoundliteral265
  %tmp290 = load <4 x i32>* %.compoundliteral265  ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp290, <4 x i32>* %xmm_query_element_4
  %tmp293 = load i32* %j                          ; <i32> [#uses=1]
  %add294 = add nsw i32 %tmp293, 5                ; <i32> [#uses=1]
  %tmp295 = load i32 addrspace(1)** %Queries.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx296 = getelementptr inbounds i32 addrspace(1)* %tmp295, i32 %add294 ; <i32 addrspace(1)*> [#uses=1]
  %tmp297 = load i32 addrspace(1)* %arrayidx296   ; <i32> [#uses=1]
  %vecinit298 = insertelement <4 x i32> undef, i32 %tmp297, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp299 = load i32* %j                          ; <i32> [#uses=1]
  %add300 = add nsw i32 %tmp299, 5                ; <i32> [#uses=1]
  %tmp301 = load i32 addrspace(1)** %Queries.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx302 = getelementptr inbounds i32 addrspace(1)* %tmp301, i32 %add300 ; <i32 addrspace(1)*> [#uses=1]
  %tmp303 = load i32 addrspace(1)* %arrayidx302   ; <i32> [#uses=1]
  %vecinit304 = insertelement <4 x i32> %vecinit298, i32 %tmp303, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp305 = load i32* %j                          ; <i32> [#uses=1]
  %add306 = add nsw i32 %tmp305, 5                ; <i32> [#uses=1]
  %tmp307 = load i32 addrspace(1)** %Queries.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx308 = getelementptr inbounds i32 addrspace(1)* %tmp307, i32 %add306 ; <i32 addrspace(1)*> [#uses=1]
  %tmp309 = load i32 addrspace(1)* %arrayidx308   ; <i32> [#uses=1]
  %vecinit310 = insertelement <4 x i32> %vecinit304, i32 %tmp309, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp311 = load i32* %j                          ; <i32> [#uses=1]
  %add312 = add nsw i32 %tmp311, 5                ; <i32> [#uses=1]
  %tmp313 = load i32 addrspace(1)** %Queries.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx314 = getelementptr inbounds i32 addrspace(1)* %tmp313, i32 %add312 ; <i32 addrspace(1)*> [#uses=1]
  %tmp315 = load i32 addrspace(1)* %arrayidx314   ; <i32> [#uses=1]
  %vecinit316 = insertelement <4 x i32> %vecinit310, i32 %tmp315, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit316, <4 x i32>* %.compoundliteral292
  %tmp317 = load <4 x i32>* %.compoundliteral292  ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp317, <4 x i32>* %xmm_query_element_5
  %tmp320 = load i32* %j                          ; <i32> [#uses=1]
  %add321 = add nsw i32 %tmp320, 6                ; <i32> [#uses=1]
  %tmp322 = load i32 addrspace(1)** %Queries.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx323 = getelementptr inbounds i32 addrspace(1)* %tmp322, i32 %add321 ; <i32 addrspace(1)*> [#uses=1]
  %tmp324 = load i32 addrspace(1)* %arrayidx323   ; <i32> [#uses=1]
  %vecinit325 = insertelement <4 x i32> undef, i32 %tmp324, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp326 = load i32* %j                          ; <i32> [#uses=1]
  %add327 = add nsw i32 %tmp326, 6                ; <i32> [#uses=1]
  %tmp328 = load i32 addrspace(1)** %Queries.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx329 = getelementptr inbounds i32 addrspace(1)* %tmp328, i32 %add327 ; <i32 addrspace(1)*> [#uses=1]
  %tmp330 = load i32 addrspace(1)* %arrayidx329   ; <i32> [#uses=1]
  %vecinit331 = insertelement <4 x i32> %vecinit325, i32 %tmp330, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp332 = load i32* %j                          ; <i32> [#uses=1]
  %add333 = add nsw i32 %tmp332, 6                ; <i32> [#uses=1]
  %tmp334 = load i32 addrspace(1)** %Queries.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx335 = getelementptr inbounds i32 addrspace(1)* %tmp334, i32 %add333 ; <i32 addrspace(1)*> [#uses=1]
  %tmp336 = load i32 addrspace(1)* %arrayidx335   ; <i32> [#uses=1]
  %vecinit337 = insertelement <4 x i32> %vecinit331, i32 %tmp336, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp338 = load i32* %j                          ; <i32> [#uses=1]
  %add339 = add nsw i32 %tmp338, 6                ; <i32> [#uses=1]
  %tmp340 = load i32 addrspace(1)** %Queries.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx341 = getelementptr inbounds i32 addrspace(1)* %tmp340, i32 %add339 ; <i32 addrspace(1)*> [#uses=1]
  %tmp342 = load i32 addrspace(1)* %arrayidx341   ; <i32> [#uses=1]
  %vecinit343 = insertelement <4 x i32> %vecinit337, i32 %tmp342, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit343, <4 x i32>* %.compoundliteral319
  %tmp344 = load <4 x i32>* %.compoundliteral319  ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp344, <4 x i32>* %xmm_query_element_6
  %tmp347 = load i32* %j                          ; <i32> [#uses=1]
  %add348 = add nsw i32 %tmp347, 7                ; <i32> [#uses=1]
  %tmp349 = load i32 addrspace(1)** %Queries.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx350 = getelementptr inbounds i32 addrspace(1)* %tmp349, i32 %add348 ; <i32 addrspace(1)*> [#uses=1]
  %tmp351 = load i32 addrspace(1)* %arrayidx350   ; <i32> [#uses=1]
  %vecinit352 = insertelement <4 x i32> undef, i32 %tmp351, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp353 = load i32* %j                          ; <i32> [#uses=1]
  %add354 = add nsw i32 %tmp353, 7                ; <i32> [#uses=1]
  %tmp355 = load i32 addrspace(1)** %Queries.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx356 = getelementptr inbounds i32 addrspace(1)* %tmp355, i32 %add354 ; <i32 addrspace(1)*> [#uses=1]
  %tmp357 = load i32 addrspace(1)* %arrayidx356   ; <i32> [#uses=1]
  %vecinit358 = insertelement <4 x i32> %vecinit352, i32 %tmp357, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp359 = load i32* %j                          ; <i32> [#uses=1]
  %add360 = add nsw i32 %tmp359, 7                ; <i32> [#uses=1]
  %tmp361 = load i32 addrspace(1)** %Queries.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx362 = getelementptr inbounds i32 addrspace(1)* %tmp361, i32 %add360 ; <i32 addrspace(1)*> [#uses=1]
  %tmp363 = load i32 addrspace(1)* %arrayidx362   ; <i32> [#uses=1]
  %vecinit364 = insertelement <4 x i32> %vecinit358, i32 %tmp363, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp365 = load i32* %j                          ; <i32> [#uses=1]
  %add366 = add nsw i32 %tmp365, 7                ; <i32> [#uses=1]
  %tmp367 = load i32 addrspace(1)** %Queries.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx368 = getelementptr inbounds i32 addrspace(1)* %tmp367, i32 %add366 ; <i32 addrspace(1)*> [#uses=1]
  %tmp369 = load i32 addrspace(1)* %arrayidx368   ; <i32> [#uses=1]
  %vecinit370 = insertelement <4 x i32> %vecinit364, i32 %tmp369, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit370, <4 x i32>* %.compoundliteral346
  %tmp371 = load <4 x i32>* %.compoundliteral346  ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp371, <4 x i32>* %xmm_query_element_7
  store i32 0, i32* %offset3_0
  store i32 0, i32* %offset3_1
  store i32 0, i32* %offset3_2
  store i32 0, i32* %offset3_3
  store i32 0, i32* %offset3_4
  store i32 0, i32* %offset3_5
  store i32 0, i32* %offset3_6
  store i32 0, i32* %offset3_7
  %tmp380 = load i32 addrspace(1)** %Input2.addr  ; <i32 addrspace(1)*> [#uses=1]
  %tmp381 = load i32* %base_index_0               ; <i32> [#uses=1]
  %add.ptr = getelementptr inbounds i32 addrspace(1)* %tmp380, i32 %tmp381 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr, i32 addrspace(1)** %addr_0_3_0
  %tmp383 = load i32 addrspace(1)** %addr_0_3_0   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx384 = getelementptr inbounds i32 addrspace(1)* %tmp383, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp385 = load i32 addrspace(1)* %arrayidx384   ; <i32> [#uses=1]
  %vecinit386 = insertelement <4 x i32> undef, i32 %tmp385, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp387 = load i32 addrspace(1)** %addr_0_3_0   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx388 = getelementptr inbounds i32 addrspace(1)* %tmp387, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp389 = load i32 addrspace(1)* %arrayidx388   ; <i32> [#uses=1]
  %vecinit390 = insertelement <4 x i32> %vecinit386, i32 %tmp389, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp391 = load i32 addrspace(1)** %addr_0_3_0   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx392 = getelementptr inbounds i32 addrspace(1)* %tmp391, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp393 = load i32 addrspace(1)* %arrayidx392   ; <i32> [#uses=1]
  %vecinit394 = insertelement <4 x i32> %vecinit390, i32 %tmp393, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp395 = load i32 addrspace(1)** %addr_0_3_0   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx396 = getelementptr inbounds i32 addrspace(1)* %tmp395, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp397 = load i32 addrspace(1)* %arrayidx396   ; <i32> [#uses=1]
  %vecinit398 = insertelement <4 x i32> %vecinit394, i32 %tmp397, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit398, <4 x i32>* %.compoundliteral382
  %tmp399 = load <4 x i32>* %.compoundliteral382  ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp399, <4 x i32>* %xmm_tree_0_3_0
  %tmp400 = load <4 x i32>* %tmp24                ; <<4 x i32>> [#uses=1]
  %tmp401 = load <4 x i32>* %xmm_query_element_0  ; <<4 x i32>> [#uses=1]
  %tmp402 = load <4 x i32>* %xmm_tree_0_3_0       ; <<4 x i32>> [#uses=1]
  %cmp403 = icmp sgt <4 x i32> %tmp401, %tmp402   ; <<4 x i1>> [#uses=1]
  %sext = sext <4 x i1> %cmp403 to <4 x i32>      ; <<4 x i32>> [#uses=1]
  %mul404 = mul <4 x i32> %tmp400, %sext          ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul404, <4 x i32>* %temp_index_v_0
  %tmp405 = load <4 x i32>* %temp_index_v_0       ; <<4 x i32>> [#uses=1]
  %tmp406 = extractelement <4 x i32> %tmp405, i32 0 ; <i32> [#uses=1]
  %tmp407 = load <4 x i32>* %temp_index_v_0       ; <<4 x i32>> [#uses=1]
  %tmp408 = extractelement <4 x i32> %tmp407, i32 1 ; <i32> [#uses=1]
  %add409 = add nsw i32 %tmp406, %tmp408          ; <i32> [#uses=1]
  %tmp410 = load <4 x i32>* %temp_index_v_0       ; <<4 x i32>> [#uses=1]
  %tmp411 = extractelement <4 x i32> %tmp410, i32 2 ; <i32> [#uses=1]
  %add412 = add nsw i32 %add409, %tmp411          ; <i32> [#uses=1]
  store i32 %add412, i32* %temp_index_0
  %tmp413 = load i32* %temp_index_0               ; <i32> [#uses=1]
  %tmp414 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx415 = getelementptr inbounds i32 addrspace(1)* %tmp414, i32 %tmp413 ; <i32 addrspace(1)*> [#uses=1]
  %tmp416 = load i32 addrspace(1)* %arrayidx415   ; <i32> [#uses=1]
  store i32 %tmp416, i32* %delta_0
  %tmp417 = load i32 addrspace(1)** %Input2.addr  ; <i32 addrspace(1)*> [#uses=1]
  %tmp418 = load i32* %base_index_0               ; <i32> [#uses=1]
  %add.ptr419 = getelementptr inbounds i32 addrspace(1)* %tmp417, i32 %tmp418 ; <i32 addrspace(1)*> [#uses=1]
  %tmp420 = load i32* %temp_index_0               ; <i32> [#uses=1]
  %tmp421 = load i32 addrspace(1)** %LookUp4.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx422 = getelementptr inbounds i32 addrspace(1)* %tmp421, i32 %tmp420 ; <i32 addrspace(1)*> [#uses=1]
  %tmp423 = load i32 addrspace(1)* %arrayidx422   ; <i32> [#uses=1]
  %add.ptr424 = getelementptr inbounds i32 addrspace(1)* %add.ptr419, i32 %tmp423 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr424, i32 addrspace(1)** %addr_0_3_0
  %tmp426 = load i32 addrspace(1)** %addr_0_3_0   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx427 = getelementptr inbounds i32 addrspace(1)* %tmp426, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp428 = load i32 addrspace(1)* %arrayidx427   ; <i32> [#uses=1]
  %vecinit429 = insertelement <4 x i32> undef, i32 %tmp428, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp430 = load i32 addrspace(1)** %addr_0_3_0   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx431 = getelementptr inbounds i32 addrspace(1)* %tmp430, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp432 = load i32 addrspace(1)* %arrayidx431   ; <i32> [#uses=1]
  %vecinit433 = insertelement <4 x i32> %vecinit429, i32 %tmp432, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp434 = load i32 addrspace(1)** %addr_0_3_0   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx435 = getelementptr inbounds i32 addrspace(1)* %tmp434, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp436 = load i32 addrspace(1)* %arrayidx435   ; <i32> [#uses=1]
  %vecinit437 = insertelement <4 x i32> %vecinit433, i32 %tmp436, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp438 = load i32 addrspace(1)** %addr_0_3_0   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx439 = getelementptr inbounds i32 addrspace(1)* %tmp438, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp440 = load i32 addrspace(1)* %arrayidx439   ; <i32> [#uses=1]
  %vecinit441 = insertelement <4 x i32> %vecinit437, i32 %tmp440, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit441, <4 x i32>* %.compoundliteral425
  %tmp442 = load <4 x i32>* %.compoundliteral425  ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp442, <4 x i32>* %xmm_tree_0_3_0
  %tmp443 = load <4 x i32>* %tmp24                ; <<4 x i32>> [#uses=1]
  %tmp444 = load <4 x i32>* %xmm_query_element_0  ; <<4 x i32>> [#uses=1]
  %tmp445 = load <4 x i32>* %xmm_tree_0_3_0       ; <<4 x i32>> [#uses=1]
  %cmp446 = icmp sgt <4 x i32> %tmp444, %tmp445   ; <<4 x i1>> [#uses=1]
  %sext447 = sext <4 x i1> %cmp446 to <4 x i32>   ; <<4 x i32>> [#uses=1]
  %mul448 = mul <4 x i32> %tmp443, %sext447       ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul448, <4 x i32>* %temp_index_v_0
  %tmp449 = load <4 x i32>* %temp_index_v_0       ; <<4 x i32>> [#uses=1]
  %tmp450 = extractelement <4 x i32> %tmp449, i32 0 ; <i32> [#uses=1]
  %tmp451 = load <4 x i32>* %temp_index_v_0       ; <<4 x i32>> [#uses=1]
  %tmp452 = extractelement <4 x i32> %tmp451, i32 1 ; <i32> [#uses=1]
  %add453 = add nsw i32 %tmp450, %tmp452          ; <i32> [#uses=1]
  %tmp454 = load <4 x i32>* %temp_index_v_0       ; <<4 x i32>> [#uses=1]
  %tmp455 = extractelement <4 x i32> %tmp454, i32 2 ; <i32> [#uses=1]
  %add456 = add nsw i32 %add453, %tmp455          ; <i32> [#uses=1]
  store i32 %add456, i32* %temp_index_0
  %tmp457 = load i32* %delta_0                    ; <i32> [#uses=1]
  %shl = shl i32 %tmp457, 2                       ; <i32> [#uses=1]
  %tmp458 = load i32* %temp_index_0               ; <i32> [#uses=1]
  %tmp459 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx460 = getelementptr inbounds i32 addrspace(1)* %tmp459, i32 %tmp458 ; <i32 addrspace(1)*> [#uses=1]
  %tmp461 = load i32 addrspace(1)* %arrayidx460   ; <i32> [#uses=1]
  %add462 = add nsw i32 %shl, %tmp461             ; <i32> [#uses=1]
  store i32 %add462, i32* %offset3_0
  %tmp463 = load i32* %offset2_0                  ; <i32> [#uses=1]
  %mul464 = mul i32 %tmp463, 16                   ; <i32> [#uses=1]
  %tmp465 = load i32* %offset3_0                  ; <i32> [#uses=1]
  %add466 = add nsw i32 %mul464, %tmp465          ; <i32> [#uses=1]
  store i32 %add466, i32* %offset2_0
  %tmp467 = load i32* %block_base_index_0         ; <i32> [#uses=1]
  %add468 = add nsw i32 %tmp467, 15               ; <i32> [#uses=1]
  %tmp469 = load i32* %offset2_0                  ; <i32> [#uses=1]
  %mul470 = mul i32 %tmp469, 15                   ; <i32> [#uses=1]
  %add471 = add nsw i32 %add468, %mul470          ; <i32> [#uses=1]
  store i32 %add471, i32* %base_index_0
  %tmp472 = load i32 addrspace(1)** %Input2.addr  ; <i32 addrspace(1)*> [#uses=1]
  %tmp473 = load i32* %base_index_0               ; <i32> [#uses=1]
  %add.ptr474 = getelementptr inbounds i32 addrspace(1)* %tmp472, i32 %tmp473 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr474, i32 16)
  store i32 0, i32* %offset3_0
  %tmp475 = load i32 addrspace(1)** %Input2.addr  ; <i32 addrspace(1)*> [#uses=1]
  %tmp476 = load i32* %base_index_1               ; <i32> [#uses=1]
  %add.ptr477 = getelementptr inbounds i32 addrspace(1)* %tmp475, i32 %tmp476 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr477, i32 addrspace(1)** %addr_0_3_1
  %tmp479 = load i32 addrspace(1)** %addr_0_3_1   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx480 = getelementptr inbounds i32 addrspace(1)* %tmp479, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp481 = load i32 addrspace(1)* %arrayidx480   ; <i32> [#uses=1]
  %vecinit482 = insertelement <4 x i32> undef, i32 %tmp481, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp483 = load i32 addrspace(1)** %addr_0_3_1   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx484 = getelementptr inbounds i32 addrspace(1)* %tmp483, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp485 = load i32 addrspace(1)* %arrayidx484   ; <i32> [#uses=1]
  %vecinit486 = insertelement <4 x i32> %vecinit482, i32 %tmp485, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp487 = load i32 addrspace(1)** %addr_0_3_1   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx488 = getelementptr inbounds i32 addrspace(1)* %tmp487, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp489 = load i32 addrspace(1)* %arrayidx488   ; <i32> [#uses=1]
  %vecinit490 = insertelement <4 x i32> %vecinit486, i32 %tmp489, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp491 = load i32 addrspace(1)** %addr_0_3_1   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx492 = getelementptr inbounds i32 addrspace(1)* %tmp491, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp493 = load i32 addrspace(1)* %arrayidx492   ; <i32> [#uses=1]
  %vecinit494 = insertelement <4 x i32> %vecinit490, i32 %tmp493, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit494, <4 x i32>* %.compoundliteral478
  %tmp495 = load <4 x i32>* %.compoundliteral478  ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp495, <4 x i32>* %xmm_tree_0_3_1
  %tmp496 = load <4 x i32>* %tmp24                ; <<4 x i32>> [#uses=1]
  %tmp497 = load <4 x i32>* %xmm_query_element_1  ; <<4 x i32>> [#uses=1]
  %tmp498 = load <4 x i32>* %xmm_tree_0_3_1       ; <<4 x i32>> [#uses=1]
  %cmp499 = icmp sgt <4 x i32> %tmp497, %tmp498   ; <<4 x i1>> [#uses=1]
  %sext500 = sext <4 x i1> %cmp499 to <4 x i32>   ; <<4 x i32>> [#uses=1]
  %mul501 = mul <4 x i32> %tmp496, %sext500       ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul501, <4 x i32>* %temp_index_v_1
  %tmp502 = load <4 x i32>* %temp_index_v_1       ; <<4 x i32>> [#uses=1]
  %tmp503 = extractelement <4 x i32> %tmp502, i32 0 ; <i32> [#uses=1]
  %tmp504 = load <4 x i32>* %temp_index_v_1       ; <<4 x i32>> [#uses=1]
  %tmp505 = extractelement <4 x i32> %tmp504, i32 1 ; <i32> [#uses=1]
  %add506 = add nsw i32 %tmp503, %tmp505          ; <i32> [#uses=1]
  %tmp507 = load <4 x i32>* %temp_index_v_1       ; <<4 x i32>> [#uses=1]
  %tmp508 = extractelement <4 x i32> %tmp507, i32 2 ; <i32> [#uses=1]
  %add509 = add nsw i32 %add506, %tmp508          ; <i32> [#uses=1]
  store i32 %add509, i32* %temp_index_1
  %tmp510 = load i32* %temp_index_1               ; <i32> [#uses=1]
  %tmp511 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx512 = getelementptr inbounds i32 addrspace(1)* %tmp511, i32 %tmp510 ; <i32 addrspace(1)*> [#uses=1]
  %tmp513 = load i32 addrspace(1)* %arrayidx512   ; <i32> [#uses=1]
  store i32 %tmp513, i32* %delta_1
  %tmp514 = load i32 addrspace(1)** %Input2.addr  ; <i32 addrspace(1)*> [#uses=1]
  %tmp515 = load i32* %base_index_1               ; <i32> [#uses=1]
  %add.ptr516 = getelementptr inbounds i32 addrspace(1)* %tmp514, i32 %tmp515 ; <i32 addrspace(1)*> [#uses=1]
  %tmp517 = load i32* %temp_index_1               ; <i32> [#uses=1]
  %tmp518 = load i32 addrspace(1)** %LookUp4.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx519 = getelementptr inbounds i32 addrspace(1)* %tmp518, i32 %tmp517 ; <i32 addrspace(1)*> [#uses=1]
  %tmp520 = load i32 addrspace(1)* %arrayidx519   ; <i32> [#uses=1]
  %add.ptr521 = getelementptr inbounds i32 addrspace(1)* %add.ptr516, i32 %tmp520 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr521, i32 addrspace(1)** %addr_0_3_1
  %tmp523 = load i32 addrspace(1)** %addr_0_3_1   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx524 = getelementptr inbounds i32 addrspace(1)* %tmp523, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp525 = load i32 addrspace(1)* %arrayidx524   ; <i32> [#uses=1]
  %vecinit526 = insertelement <4 x i32> undef, i32 %tmp525, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp527 = load i32 addrspace(1)** %addr_0_3_1   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx528 = getelementptr inbounds i32 addrspace(1)* %tmp527, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp529 = load i32 addrspace(1)* %arrayidx528   ; <i32> [#uses=1]
  %vecinit530 = insertelement <4 x i32> %vecinit526, i32 %tmp529, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp531 = load i32 addrspace(1)** %addr_0_3_1   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx532 = getelementptr inbounds i32 addrspace(1)* %tmp531, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp533 = load i32 addrspace(1)* %arrayidx532   ; <i32> [#uses=1]
  %vecinit534 = insertelement <4 x i32> %vecinit530, i32 %tmp533, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp535 = load i32 addrspace(1)** %addr_0_3_1   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx536 = getelementptr inbounds i32 addrspace(1)* %tmp535, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp537 = load i32 addrspace(1)* %arrayidx536   ; <i32> [#uses=1]
  %vecinit538 = insertelement <4 x i32> %vecinit534, i32 %tmp537, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit538, <4 x i32>* %.compoundliteral522
  %tmp539 = load <4 x i32>* %.compoundliteral522  ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp539, <4 x i32>* %xmm_tree_0_3_1
  %tmp540 = load <4 x i32>* %tmp24                ; <<4 x i32>> [#uses=1]
  %tmp541 = load <4 x i32>* %xmm_query_element_1  ; <<4 x i32>> [#uses=1]
  %tmp542 = load <4 x i32>* %xmm_tree_0_3_1       ; <<4 x i32>> [#uses=1]
  %cmp543 = icmp sgt <4 x i32> %tmp541, %tmp542   ; <<4 x i1>> [#uses=1]
  %sext544 = sext <4 x i1> %cmp543 to <4 x i32>   ; <<4 x i32>> [#uses=1]
  %mul545 = mul <4 x i32> %tmp540, %sext544       ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul545, <4 x i32>* %temp_index_v_1
  %tmp546 = load <4 x i32>* %temp_index_v_1       ; <<4 x i32>> [#uses=1]
  %tmp547 = extractelement <4 x i32> %tmp546, i32 0 ; <i32> [#uses=1]
  %tmp548 = load <4 x i32>* %temp_index_v_1       ; <<4 x i32>> [#uses=1]
  %tmp549 = extractelement <4 x i32> %tmp548, i32 1 ; <i32> [#uses=1]
  %add550 = add nsw i32 %tmp547, %tmp549          ; <i32> [#uses=1]
  %tmp551 = load <4 x i32>* %temp_index_v_1       ; <<4 x i32>> [#uses=1]
  %tmp552 = extractelement <4 x i32> %tmp551, i32 2 ; <i32> [#uses=1]
  %add553 = add nsw i32 %add550, %tmp552          ; <i32> [#uses=1]
  store i32 %add553, i32* %temp_index_1
  %tmp554 = load i32* %delta_1                    ; <i32> [#uses=1]
  %shl555 = shl i32 %tmp554, 2                    ; <i32> [#uses=1]
  %tmp556 = load i32* %temp_index_1               ; <i32> [#uses=1]
  %tmp557 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx558 = getelementptr inbounds i32 addrspace(1)* %tmp557, i32 %tmp556 ; <i32 addrspace(1)*> [#uses=1]
  %tmp559 = load i32 addrspace(1)* %arrayidx558   ; <i32> [#uses=1]
  %add560 = add nsw i32 %shl555, %tmp559          ; <i32> [#uses=1]
  store i32 %add560, i32* %offset3_1
  %tmp561 = load i32* %offset2_1                  ; <i32> [#uses=1]
  %mul562 = mul i32 %tmp561, 16                   ; <i32> [#uses=1]
  %tmp563 = load i32* %offset3_1                  ; <i32> [#uses=1]
  %add564 = add nsw i32 %mul562, %tmp563          ; <i32> [#uses=1]
  store i32 %add564, i32* %offset2_1
  %tmp565 = load i32* %block_base_index_1         ; <i32> [#uses=1]
  %add566 = add nsw i32 %tmp565, 15               ; <i32> [#uses=1]
  %tmp567 = load i32* %offset2_1                  ; <i32> [#uses=1]
  %mul568 = mul i32 %tmp567, 15                   ; <i32> [#uses=1]
  %add569 = add nsw i32 %add566, %mul568          ; <i32> [#uses=1]
  store i32 %add569, i32* %base_index_1
  %tmp570 = load i32 addrspace(1)** %Input2.addr  ; <i32 addrspace(1)*> [#uses=1]
  %tmp571 = load i32* %base_index_1               ; <i32> [#uses=1]
  %add.ptr572 = getelementptr inbounds i32 addrspace(1)* %tmp570, i32 %tmp571 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr572, i32 16)
  store i32 0, i32* %offset3_1
  %tmp573 = load i32 addrspace(1)** %Input2.addr  ; <i32 addrspace(1)*> [#uses=1]
  %tmp574 = load i32* %base_index_2               ; <i32> [#uses=1]
  %add.ptr575 = getelementptr inbounds i32 addrspace(1)* %tmp573, i32 %tmp574 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr575, i32 addrspace(1)** %addr_0_3_2
  %tmp577 = load i32 addrspace(1)** %addr_0_3_2   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx578 = getelementptr inbounds i32 addrspace(1)* %tmp577, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp579 = load i32 addrspace(1)* %arrayidx578   ; <i32> [#uses=1]
  %vecinit580 = insertelement <4 x i32> undef, i32 %tmp579, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp581 = load i32 addrspace(1)** %addr_0_3_2   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx582 = getelementptr inbounds i32 addrspace(1)* %tmp581, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp583 = load i32 addrspace(1)* %arrayidx582   ; <i32> [#uses=1]
  %vecinit584 = insertelement <4 x i32> %vecinit580, i32 %tmp583, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp585 = load i32 addrspace(1)** %addr_0_3_2   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx586 = getelementptr inbounds i32 addrspace(1)* %tmp585, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp587 = load i32 addrspace(1)* %arrayidx586   ; <i32> [#uses=1]
  %vecinit588 = insertelement <4 x i32> %vecinit584, i32 %tmp587, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp589 = load i32 addrspace(1)** %addr_0_3_2   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx590 = getelementptr inbounds i32 addrspace(1)* %tmp589, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp591 = load i32 addrspace(1)* %arrayidx590   ; <i32> [#uses=1]
  %vecinit592 = insertelement <4 x i32> %vecinit588, i32 %tmp591, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit592, <4 x i32>* %.compoundliteral576
  %tmp593 = load <4 x i32>* %.compoundliteral576  ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp593, <4 x i32>* %xmm_tree_0_3_2
  %tmp594 = load <4 x i32>* %tmp24                ; <<4 x i32>> [#uses=1]
  %tmp595 = load <4 x i32>* %xmm_query_element_2  ; <<4 x i32>> [#uses=1]
  %tmp596 = load <4 x i32>* %xmm_tree_0_3_2       ; <<4 x i32>> [#uses=1]
  %cmp597 = icmp sgt <4 x i32> %tmp595, %tmp596   ; <<4 x i1>> [#uses=1]
  %sext598 = sext <4 x i1> %cmp597 to <4 x i32>   ; <<4 x i32>> [#uses=1]
  %mul599 = mul <4 x i32> %tmp594, %sext598       ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul599, <4 x i32>* %temp_index_v_2
  %tmp600 = load <4 x i32>* %temp_index_v_2       ; <<4 x i32>> [#uses=1]
  %tmp601 = extractelement <4 x i32> %tmp600, i32 0 ; <i32> [#uses=1]
  %tmp602 = load <4 x i32>* %temp_index_v_2       ; <<4 x i32>> [#uses=1]
  %tmp603 = extractelement <4 x i32> %tmp602, i32 1 ; <i32> [#uses=1]
  %add604 = add nsw i32 %tmp601, %tmp603          ; <i32> [#uses=1]
  %tmp605 = load <4 x i32>* %temp_index_v_2       ; <<4 x i32>> [#uses=1]
  %tmp606 = extractelement <4 x i32> %tmp605, i32 2 ; <i32> [#uses=1]
  %add607 = add nsw i32 %add604, %tmp606          ; <i32> [#uses=1]
  store i32 %add607, i32* %temp_index_2
  %tmp608 = load i32* %temp_index_2               ; <i32> [#uses=1]
  %tmp609 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx610 = getelementptr inbounds i32 addrspace(1)* %tmp609, i32 %tmp608 ; <i32 addrspace(1)*> [#uses=1]
  %tmp611 = load i32 addrspace(1)* %arrayidx610   ; <i32> [#uses=1]
  store i32 %tmp611, i32* %delta_2
  %tmp612 = load i32 addrspace(1)** %Input2.addr  ; <i32 addrspace(1)*> [#uses=1]
  %tmp613 = load i32* %base_index_2               ; <i32> [#uses=1]
  %add.ptr614 = getelementptr inbounds i32 addrspace(1)* %tmp612, i32 %tmp613 ; <i32 addrspace(1)*> [#uses=1]
  %tmp615 = load i32* %temp_index_2               ; <i32> [#uses=1]
  %tmp616 = load i32 addrspace(1)** %LookUp4.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx617 = getelementptr inbounds i32 addrspace(1)* %tmp616, i32 %tmp615 ; <i32 addrspace(1)*> [#uses=1]
  %tmp618 = load i32 addrspace(1)* %arrayidx617   ; <i32> [#uses=1]
  %add.ptr619 = getelementptr inbounds i32 addrspace(1)* %add.ptr614, i32 %tmp618 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr619, i32 addrspace(1)** %addr_0_3_2
  %tmp621 = load i32 addrspace(1)** %addr_0_3_2   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx622 = getelementptr inbounds i32 addrspace(1)* %tmp621, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp623 = load i32 addrspace(1)* %arrayidx622   ; <i32> [#uses=1]
  %vecinit624 = insertelement <4 x i32> undef, i32 %tmp623, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp625 = load i32 addrspace(1)** %addr_0_3_2   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx626 = getelementptr inbounds i32 addrspace(1)* %tmp625, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp627 = load i32 addrspace(1)* %arrayidx626   ; <i32> [#uses=1]
  %vecinit628 = insertelement <4 x i32> %vecinit624, i32 %tmp627, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp629 = load i32 addrspace(1)** %addr_0_3_2   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx630 = getelementptr inbounds i32 addrspace(1)* %tmp629, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp631 = load i32 addrspace(1)* %arrayidx630   ; <i32> [#uses=1]
  %vecinit632 = insertelement <4 x i32> %vecinit628, i32 %tmp631, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp633 = load i32 addrspace(1)** %addr_0_3_2   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx634 = getelementptr inbounds i32 addrspace(1)* %tmp633, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp635 = load i32 addrspace(1)* %arrayidx634   ; <i32> [#uses=1]
  %vecinit636 = insertelement <4 x i32> %vecinit632, i32 %tmp635, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit636, <4 x i32>* %.compoundliteral620
  %tmp637 = load <4 x i32>* %.compoundliteral620  ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp637, <4 x i32>* %xmm_tree_0_3_2
  %tmp638 = load <4 x i32>* %tmp24                ; <<4 x i32>> [#uses=1]
  %tmp639 = load <4 x i32>* %xmm_query_element_2  ; <<4 x i32>> [#uses=1]
  %tmp640 = load <4 x i32>* %xmm_tree_0_3_2       ; <<4 x i32>> [#uses=1]
  %cmp641 = icmp sgt <4 x i32> %tmp639, %tmp640   ; <<4 x i1>> [#uses=1]
  %sext642 = sext <4 x i1> %cmp641 to <4 x i32>   ; <<4 x i32>> [#uses=1]
  %mul643 = mul <4 x i32> %tmp638, %sext642       ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul643, <4 x i32>* %temp_index_v_2
  %tmp644 = load <4 x i32>* %temp_index_v_2       ; <<4 x i32>> [#uses=1]
  %tmp645 = extractelement <4 x i32> %tmp644, i32 0 ; <i32> [#uses=1]
  %tmp646 = load <4 x i32>* %temp_index_v_2       ; <<4 x i32>> [#uses=1]
  %tmp647 = extractelement <4 x i32> %tmp646, i32 1 ; <i32> [#uses=1]
  %add648 = add nsw i32 %tmp645, %tmp647          ; <i32> [#uses=1]
  %tmp649 = load <4 x i32>* %temp_index_v_2       ; <<4 x i32>> [#uses=1]
  %tmp650 = extractelement <4 x i32> %tmp649, i32 2 ; <i32> [#uses=1]
  %add651 = add nsw i32 %add648, %tmp650          ; <i32> [#uses=1]
  store i32 %add651, i32* %temp_index_2
  %tmp652 = load i32* %delta_2                    ; <i32> [#uses=1]
  %shl653 = shl i32 %tmp652, 2                    ; <i32> [#uses=1]
  %tmp654 = load i32* %temp_index_2               ; <i32> [#uses=1]
  %tmp655 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx656 = getelementptr inbounds i32 addrspace(1)* %tmp655, i32 %tmp654 ; <i32 addrspace(1)*> [#uses=1]
  %tmp657 = load i32 addrspace(1)* %arrayidx656   ; <i32> [#uses=1]
  %add658 = add nsw i32 %shl653, %tmp657          ; <i32> [#uses=1]
  store i32 %add658, i32* %offset3_2
  %tmp659 = load i32* %offset2_2                  ; <i32> [#uses=1]
  %mul660 = mul i32 %tmp659, 16                   ; <i32> [#uses=1]
  %tmp661 = load i32* %offset3_2                  ; <i32> [#uses=1]
  %add662 = add nsw i32 %mul660, %tmp661          ; <i32> [#uses=1]
  store i32 %add662, i32* %offset2_2
  %tmp663 = load i32* %block_base_index_2         ; <i32> [#uses=1]
  %add664 = add nsw i32 %tmp663, 15               ; <i32> [#uses=1]
  %tmp665 = load i32* %offset2_2                  ; <i32> [#uses=1]
  %mul666 = mul i32 %tmp665, 15                   ; <i32> [#uses=1]
  %add667 = add nsw i32 %add664, %mul666          ; <i32> [#uses=1]
  store i32 %add667, i32* %base_index_2
  %tmp668 = load i32 addrspace(1)** %Input2.addr  ; <i32 addrspace(1)*> [#uses=1]
  %tmp669 = load i32* %base_index_2               ; <i32> [#uses=1]
  %add.ptr670 = getelementptr inbounds i32 addrspace(1)* %tmp668, i32 %tmp669 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr670, i32 16)
  store i32 0, i32* %offset3_2
  %tmp671 = load i32 addrspace(1)** %Input2.addr  ; <i32 addrspace(1)*> [#uses=1]
  %tmp672 = load i32* %base_index_3               ; <i32> [#uses=1]
  %add.ptr673 = getelementptr inbounds i32 addrspace(1)* %tmp671, i32 %tmp672 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr673, i32 addrspace(1)** %addr_0_3_3
  %tmp675 = load i32 addrspace(1)** %addr_0_3_3   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx676 = getelementptr inbounds i32 addrspace(1)* %tmp675, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp677 = load i32 addrspace(1)* %arrayidx676   ; <i32> [#uses=1]
  %vecinit678 = insertelement <4 x i32> undef, i32 %tmp677, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp679 = load i32 addrspace(1)** %addr_0_3_3   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx680 = getelementptr inbounds i32 addrspace(1)* %tmp679, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp681 = load i32 addrspace(1)* %arrayidx680   ; <i32> [#uses=1]
  %vecinit682 = insertelement <4 x i32> %vecinit678, i32 %tmp681, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp683 = load i32 addrspace(1)** %addr_0_3_3   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx684 = getelementptr inbounds i32 addrspace(1)* %tmp683, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp685 = load i32 addrspace(1)* %arrayidx684   ; <i32> [#uses=1]
  %vecinit686 = insertelement <4 x i32> %vecinit682, i32 %tmp685, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp687 = load i32 addrspace(1)** %addr_0_3_3   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx688 = getelementptr inbounds i32 addrspace(1)* %tmp687, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp689 = load i32 addrspace(1)* %arrayidx688   ; <i32> [#uses=1]
  %vecinit690 = insertelement <4 x i32> %vecinit686, i32 %tmp689, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit690, <4 x i32>* %.compoundliteral674
  %tmp691 = load <4 x i32>* %.compoundliteral674  ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp691, <4 x i32>* %xmm_tree_0_3_3
  %tmp692 = load <4 x i32>* %tmp24                ; <<4 x i32>> [#uses=1]
  %tmp693 = load <4 x i32>* %xmm_query_element_3  ; <<4 x i32>> [#uses=1]
  %tmp694 = load <4 x i32>* %xmm_tree_0_3_3       ; <<4 x i32>> [#uses=1]
  %cmp695 = icmp sgt <4 x i32> %tmp693, %tmp694   ; <<4 x i1>> [#uses=1]
  %sext696 = sext <4 x i1> %cmp695 to <4 x i32>   ; <<4 x i32>> [#uses=1]
  %mul697 = mul <4 x i32> %tmp692, %sext696       ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul697, <4 x i32>* %temp_index_v_3
  %tmp698 = load <4 x i32>* %temp_index_v_3       ; <<4 x i32>> [#uses=1]
  %tmp699 = extractelement <4 x i32> %tmp698, i32 0 ; <i32> [#uses=1]
  %tmp700 = load <4 x i32>* %temp_index_v_3       ; <<4 x i32>> [#uses=1]
  %tmp701 = extractelement <4 x i32> %tmp700, i32 1 ; <i32> [#uses=1]
  %add702 = add nsw i32 %tmp699, %tmp701          ; <i32> [#uses=1]
  %tmp703 = load <4 x i32>* %temp_index_v_3       ; <<4 x i32>> [#uses=1]
  %tmp704 = extractelement <4 x i32> %tmp703, i32 2 ; <i32> [#uses=1]
  %add705 = add nsw i32 %add702, %tmp704          ; <i32> [#uses=1]
  store i32 %add705, i32* %temp_index_3
  %tmp706 = load i32* %temp_index_3               ; <i32> [#uses=1]
  %tmp707 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx708 = getelementptr inbounds i32 addrspace(1)* %tmp707, i32 %tmp706 ; <i32 addrspace(1)*> [#uses=1]
  %tmp709 = load i32 addrspace(1)* %arrayidx708   ; <i32> [#uses=1]
  store i32 %tmp709, i32* %delta_3
  %tmp710 = load i32 addrspace(1)** %Input2.addr  ; <i32 addrspace(1)*> [#uses=1]
  %tmp711 = load i32* %base_index_3               ; <i32> [#uses=1]
  %add.ptr712 = getelementptr inbounds i32 addrspace(1)* %tmp710, i32 %tmp711 ; <i32 addrspace(1)*> [#uses=1]
  %tmp713 = load i32* %temp_index_3               ; <i32> [#uses=1]
  %tmp714 = load i32 addrspace(1)** %LookUp4.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx715 = getelementptr inbounds i32 addrspace(1)* %tmp714, i32 %tmp713 ; <i32 addrspace(1)*> [#uses=1]
  %tmp716 = load i32 addrspace(1)* %arrayidx715   ; <i32> [#uses=1]
  %add.ptr717 = getelementptr inbounds i32 addrspace(1)* %add.ptr712, i32 %tmp716 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr717, i32 addrspace(1)** %addr_0_3_3
  %tmp719 = load i32 addrspace(1)** %addr_0_3_3   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx720 = getelementptr inbounds i32 addrspace(1)* %tmp719, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp721 = load i32 addrspace(1)* %arrayidx720   ; <i32> [#uses=1]
  %vecinit722 = insertelement <4 x i32> undef, i32 %tmp721, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp723 = load i32 addrspace(1)** %addr_0_3_3   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx724 = getelementptr inbounds i32 addrspace(1)* %tmp723, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp725 = load i32 addrspace(1)* %arrayidx724   ; <i32> [#uses=1]
  %vecinit726 = insertelement <4 x i32> %vecinit722, i32 %tmp725, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp727 = load i32 addrspace(1)** %addr_0_3_3   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx728 = getelementptr inbounds i32 addrspace(1)* %tmp727, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp729 = load i32 addrspace(1)* %arrayidx728   ; <i32> [#uses=1]
  %vecinit730 = insertelement <4 x i32> %vecinit726, i32 %tmp729, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp731 = load i32 addrspace(1)** %addr_0_3_3   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx732 = getelementptr inbounds i32 addrspace(1)* %tmp731, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp733 = load i32 addrspace(1)* %arrayidx732   ; <i32> [#uses=1]
  %vecinit734 = insertelement <4 x i32> %vecinit730, i32 %tmp733, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit734, <4 x i32>* %.compoundliteral718
  %tmp735 = load <4 x i32>* %.compoundliteral718  ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp735, <4 x i32>* %xmm_tree_0_3_3
  %tmp736 = load <4 x i32>* %tmp24                ; <<4 x i32>> [#uses=1]
  %tmp737 = load <4 x i32>* %xmm_query_element_3  ; <<4 x i32>> [#uses=1]
  %tmp738 = load <4 x i32>* %xmm_tree_0_3_3       ; <<4 x i32>> [#uses=1]
  %cmp739 = icmp sgt <4 x i32> %tmp737, %tmp738   ; <<4 x i1>> [#uses=1]
  %sext740 = sext <4 x i1> %cmp739 to <4 x i32>   ; <<4 x i32>> [#uses=1]
  %mul741 = mul <4 x i32> %tmp736, %sext740       ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul741, <4 x i32>* %temp_index_v_3
  %tmp742 = load <4 x i32>* %temp_index_v_3       ; <<4 x i32>> [#uses=1]
  %tmp743 = extractelement <4 x i32> %tmp742, i32 0 ; <i32> [#uses=1]
  %tmp744 = load <4 x i32>* %temp_index_v_3       ; <<4 x i32>> [#uses=1]
  %tmp745 = extractelement <4 x i32> %tmp744, i32 1 ; <i32> [#uses=1]
  %add746 = add nsw i32 %tmp743, %tmp745          ; <i32> [#uses=1]
  %tmp747 = load <4 x i32>* %temp_index_v_3       ; <<4 x i32>> [#uses=1]
  %tmp748 = extractelement <4 x i32> %tmp747, i32 2 ; <i32> [#uses=1]
  %add749 = add nsw i32 %add746, %tmp748          ; <i32> [#uses=1]
  store i32 %add749, i32* %temp_index_3
  %tmp750 = load i32* %delta_3                    ; <i32> [#uses=1]
  %shl751 = shl i32 %tmp750, 2                    ; <i32> [#uses=1]
  %tmp752 = load i32* %temp_index_3               ; <i32> [#uses=1]
  %tmp753 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx754 = getelementptr inbounds i32 addrspace(1)* %tmp753, i32 %tmp752 ; <i32 addrspace(1)*> [#uses=1]
  %tmp755 = load i32 addrspace(1)* %arrayidx754   ; <i32> [#uses=1]
  %add756 = add nsw i32 %shl751, %tmp755          ; <i32> [#uses=1]
  store i32 %add756, i32* %offset3_3
  %tmp757 = load i32* %offset2_3                  ; <i32> [#uses=1]
  %mul758 = mul i32 %tmp757, 16                   ; <i32> [#uses=1]
  %tmp759 = load i32* %offset3_3                  ; <i32> [#uses=1]
  %add760 = add nsw i32 %mul758, %tmp759          ; <i32> [#uses=1]
  store i32 %add760, i32* %offset2_3
  %tmp761 = load i32* %block_base_index_3         ; <i32> [#uses=1]
  %add762 = add nsw i32 %tmp761, 15               ; <i32> [#uses=1]
  %tmp763 = load i32* %offset2_3                  ; <i32> [#uses=1]
  %mul764 = mul i32 %tmp763, 15                   ; <i32> [#uses=1]
  %add765 = add nsw i32 %add762, %mul764          ; <i32> [#uses=1]
  store i32 %add765, i32* %base_index_3
  %tmp766 = load i32 addrspace(1)** %Input2.addr  ; <i32 addrspace(1)*> [#uses=1]
  %tmp767 = load i32* %base_index_3               ; <i32> [#uses=1]
  %add.ptr768 = getelementptr inbounds i32 addrspace(1)* %tmp766, i32 %tmp767 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr768, i32 16)
  store i32 0, i32* %offset3_3
  %tmp769 = load i32 addrspace(1)** %Input2.addr  ; <i32 addrspace(1)*> [#uses=1]
  %tmp770 = load i32* %base_index_4               ; <i32> [#uses=1]
  %add.ptr771 = getelementptr inbounds i32 addrspace(1)* %tmp769, i32 %tmp770 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr771, i32 addrspace(1)** %addr_0_3_4
  %tmp773 = load i32 addrspace(1)** %addr_0_3_4   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx774 = getelementptr inbounds i32 addrspace(1)* %tmp773, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp775 = load i32 addrspace(1)* %arrayidx774   ; <i32> [#uses=1]
  %vecinit776 = insertelement <4 x i32> undef, i32 %tmp775, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp777 = load i32 addrspace(1)** %addr_0_3_4   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx778 = getelementptr inbounds i32 addrspace(1)* %tmp777, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp779 = load i32 addrspace(1)* %arrayidx778   ; <i32> [#uses=1]
  %vecinit780 = insertelement <4 x i32> %vecinit776, i32 %tmp779, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp781 = load i32 addrspace(1)** %addr_0_3_4   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx782 = getelementptr inbounds i32 addrspace(1)* %tmp781, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp783 = load i32 addrspace(1)* %arrayidx782   ; <i32> [#uses=1]
  %vecinit784 = insertelement <4 x i32> %vecinit780, i32 %tmp783, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp785 = load i32 addrspace(1)** %addr_0_3_4   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx786 = getelementptr inbounds i32 addrspace(1)* %tmp785, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp787 = load i32 addrspace(1)* %arrayidx786   ; <i32> [#uses=1]
  %vecinit788 = insertelement <4 x i32> %vecinit784, i32 %tmp787, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit788, <4 x i32>* %.compoundliteral772
  %tmp789 = load <4 x i32>* %.compoundliteral772  ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp789, <4 x i32>* %xmm_tree_0_3_4
  %tmp790 = load <4 x i32>* %tmp24                ; <<4 x i32>> [#uses=1]
  %tmp791 = load <4 x i32>* %xmm_query_element_4  ; <<4 x i32>> [#uses=1]
  %tmp792 = load <4 x i32>* %xmm_tree_0_3_4       ; <<4 x i32>> [#uses=1]
  %cmp793 = icmp sgt <4 x i32> %tmp791, %tmp792   ; <<4 x i1>> [#uses=1]
  %sext794 = sext <4 x i1> %cmp793 to <4 x i32>   ; <<4 x i32>> [#uses=1]
  %mul795 = mul <4 x i32> %tmp790, %sext794       ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul795, <4 x i32>* %temp_index_v_4
  %tmp796 = load <4 x i32>* %temp_index_v_4       ; <<4 x i32>> [#uses=1]
  %tmp797 = extractelement <4 x i32> %tmp796, i32 0 ; <i32> [#uses=1]
  %tmp798 = load <4 x i32>* %temp_index_v_4       ; <<4 x i32>> [#uses=1]
  %tmp799 = extractelement <4 x i32> %tmp798, i32 1 ; <i32> [#uses=1]
  %add800 = add nsw i32 %tmp797, %tmp799          ; <i32> [#uses=1]
  %tmp801 = load <4 x i32>* %temp_index_v_4       ; <<4 x i32>> [#uses=1]
  %tmp802 = extractelement <4 x i32> %tmp801, i32 2 ; <i32> [#uses=1]
  %add803 = add nsw i32 %add800, %tmp802          ; <i32> [#uses=1]
  store i32 %add803, i32* %temp_index_4
  %tmp804 = load i32* %temp_index_4               ; <i32> [#uses=1]
  %tmp805 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx806 = getelementptr inbounds i32 addrspace(1)* %tmp805, i32 %tmp804 ; <i32 addrspace(1)*> [#uses=1]
  %tmp807 = load i32 addrspace(1)* %arrayidx806   ; <i32> [#uses=1]
  store i32 %tmp807, i32* %delta_4
  %tmp808 = load i32 addrspace(1)** %Input2.addr  ; <i32 addrspace(1)*> [#uses=1]
  %tmp809 = load i32* %base_index_4               ; <i32> [#uses=1]
  %add.ptr810 = getelementptr inbounds i32 addrspace(1)* %tmp808, i32 %tmp809 ; <i32 addrspace(1)*> [#uses=1]
  %tmp811 = load i32* %temp_index_4               ; <i32> [#uses=1]
  %tmp812 = load i32 addrspace(1)** %LookUp4.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx813 = getelementptr inbounds i32 addrspace(1)* %tmp812, i32 %tmp811 ; <i32 addrspace(1)*> [#uses=1]
  %tmp814 = load i32 addrspace(1)* %arrayidx813   ; <i32> [#uses=1]
  %add.ptr815 = getelementptr inbounds i32 addrspace(1)* %add.ptr810, i32 %tmp814 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr815, i32 addrspace(1)** %addr_0_3_4
  %tmp817 = load i32 addrspace(1)** %addr_0_3_4   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx818 = getelementptr inbounds i32 addrspace(1)* %tmp817, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp819 = load i32 addrspace(1)* %arrayidx818   ; <i32> [#uses=1]
  %vecinit820 = insertelement <4 x i32> undef, i32 %tmp819, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp821 = load i32 addrspace(1)** %addr_0_3_4   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx822 = getelementptr inbounds i32 addrspace(1)* %tmp821, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp823 = load i32 addrspace(1)* %arrayidx822   ; <i32> [#uses=1]
  %vecinit824 = insertelement <4 x i32> %vecinit820, i32 %tmp823, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp825 = load i32 addrspace(1)** %addr_0_3_4   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx826 = getelementptr inbounds i32 addrspace(1)* %tmp825, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp827 = load i32 addrspace(1)* %arrayidx826   ; <i32> [#uses=1]
  %vecinit828 = insertelement <4 x i32> %vecinit824, i32 %tmp827, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp829 = load i32 addrspace(1)** %addr_0_3_4   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx830 = getelementptr inbounds i32 addrspace(1)* %tmp829, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp831 = load i32 addrspace(1)* %arrayidx830   ; <i32> [#uses=1]
  %vecinit832 = insertelement <4 x i32> %vecinit828, i32 %tmp831, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit832, <4 x i32>* %.compoundliteral816
  %tmp833 = load <4 x i32>* %.compoundliteral816  ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp833, <4 x i32>* %xmm_tree_0_3_4
  %tmp834 = load <4 x i32>* %tmp24                ; <<4 x i32>> [#uses=1]
  %tmp835 = load <4 x i32>* %xmm_query_element_4  ; <<4 x i32>> [#uses=1]
  %tmp836 = load <4 x i32>* %xmm_tree_0_3_4       ; <<4 x i32>> [#uses=1]
  %cmp837 = icmp sgt <4 x i32> %tmp835, %tmp836   ; <<4 x i1>> [#uses=1]
  %sext838 = sext <4 x i1> %cmp837 to <4 x i32>   ; <<4 x i32>> [#uses=1]
  %mul839 = mul <4 x i32> %tmp834, %sext838       ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul839, <4 x i32>* %temp_index_v_4
  %tmp840 = load <4 x i32>* %temp_index_v_4       ; <<4 x i32>> [#uses=1]
  %tmp841 = extractelement <4 x i32> %tmp840, i32 0 ; <i32> [#uses=1]
  %tmp842 = load <4 x i32>* %temp_index_v_4       ; <<4 x i32>> [#uses=1]
  %tmp843 = extractelement <4 x i32> %tmp842, i32 1 ; <i32> [#uses=1]
  %add844 = add nsw i32 %tmp841, %tmp843          ; <i32> [#uses=1]
  %tmp845 = load <4 x i32>* %temp_index_v_4       ; <<4 x i32>> [#uses=1]
  %tmp846 = extractelement <4 x i32> %tmp845, i32 2 ; <i32> [#uses=1]
  %add847 = add nsw i32 %add844, %tmp846          ; <i32> [#uses=1]
  store i32 %add847, i32* %temp_index_4
  %tmp848 = load i32* %delta_4                    ; <i32> [#uses=1]
  %shl849 = shl i32 %tmp848, 2                    ; <i32> [#uses=1]
  %tmp850 = load i32* %temp_index_4               ; <i32> [#uses=1]
  %tmp851 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx852 = getelementptr inbounds i32 addrspace(1)* %tmp851, i32 %tmp850 ; <i32 addrspace(1)*> [#uses=1]
  %tmp853 = load i32 addrspace(1)* %arrayidx852   ; <i32> [#uses=1]
  %add854 = add nsw i32 %shl849, %tmp853          ; <i32> [#uses=1]
  store i32 %add854, i32* %offset3_4
  %tmp855 = load i32* %offset2_4                  ; <i32> [#uses=1]
  %mul856 = mul i32 %tmp855, 16                   ; <i32> [#uses=1]
  %tmp857 = load i32* %offset3_4                  ; <i32> [#uses=1]
  %add858 = add nsw i32 %mul856, %tmp857          ; <i32> [#uses=1]
  store i32 %add858, i32* %offset2_4
  %tmp859 = load i32* %block_base_index_4         ; <i32> [#uses=1]
  %add860 = add nsw i32 %tmp859, 15               ; <i32> [#uses=1]
  %tmp861 = load i32* %offset2_4                  ; <i32> [#uses=1]
  %mul862 = mul i32 %tmp861, 15                   ; <i32> [#uses=1]
  %add863 = add nsw i32 %add860, %mul862          ; <i32> [#uses=1]
  store i32 %add863, i32* %base_index_4
  %tmp864 = load i32 addrspace(1)** %Input2.addr  ; <i32 addrspace(1)*> [#uses=1]
  %tmp865 = load i32* %base_index_4               ; <i32> [#uses=1]
  %add.ptr866 = getelementptr inbounds i32 addrspace(1)* %tmp864, i32 %tmp865 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr866, i32 16)
  store i32 0, i32* %offset3_4
  %tmp867 = load i32 addrspace(1)** %Input2.addr  ; <i32 addrspace(1)*> [#uses=1]
  %tmp868 = load i32* %base_index_5               ; <i32> [#uses=1]
  %add.ptr869 = getelementptr inbounds i32 addrspace(1)* %tmp867, i32 %tmp868 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr869, i32 addrspace(1)** %addr_0_3_5
  %tmp871 = load i32 addrspace(1)** %addr_0_3_5   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx872 = getelementptr inbounds i32 addrspace(1)* %tmp871, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp873 = load i32 addrspace(1)* %arrayidx872   ; <i32> [#uses=1]
  %vecinit874 = insertelement <4 x i32> undef, i32 %tmp873, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp875 = load i32 addrspace(1)** %addr_0_3_5   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx876 = getelementptr inbounds i32 addrspace(1)* %tmp875, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp877 = load i32 addrspace(1)* %arrayidx876   ; <i32> [#uses=1]
  %vecinit878 = insertelement <4 x i32> %vecinit874, i32 %tmp877, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp879 = load i32 addrspace(1)** %addr_0_3_5   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx880 = getelementptr inbounds i32 addrspace(1)* %tmp879, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp881 = load i32 addrspace(1)* %arrayidx880   ; <i32> [#uses=1]
  %vecinit882 = insertelement <4 x i32> %vecinit878, i32 %tmp881, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp883 = load i32 addrspace(1)** %addr_0_3_5   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx884 = getelementptr inbounds i32 addrspace(1)* %tmp883, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp885 = load i32 addrspace(1)* %arrayidx884   ; <i32> [#uses=1]
  %vecinit886 = insertelement <4 x i32> %vecinit882, i32 %tmp885, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit886, <4 x i32>* %.compoundliteral870
  %tmp887 = load <4 x i32>* %.compoundliteral870  ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp887, <4 x i32>* %xmm_tree_0_3_5
  %tmp888 = load <4 x i32>* %tmp24                ; <<4 x i32>> [#uses=1]
  %tmp889 = load <4 x i32>* %xmm_query_element_5  ; <<4 x i32>> [#uses=1]
  %tmp890 = load <4 x i32>* %xmm_tree_0_3_5       ; <<4 x i32>> [#uses=1]
  %cmp891 = icmp sgt <4 x i32> %tmp889, %tmp890   ; <<4 x i1>> [#uses=1]
  %sext892 = sext <4 x i1> %cmp891 to <4 x i32>   ; <<4 x i32>> [#uses=1]
  %mul893 = mul <4 x i32> %tmp888, %sext892       ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul893, <4 x i32>* %temp_index_v_5
  %tmp894 = load <4 x i32>* %temp_index_v_5       ; <<4 x i32>> [#uses=1]
  %tmp895 = extractelement <4 x i32> %tmp894, i32 0 ; <i32> [#uses=1]
  %tmp896 = load <4 x i32>* %temp_index_v_5       ; <<4 x i32>> [#uses=1]
  %tmp897 = extractelement <4 x i32> %tmp896, i32 1 ; <i32> [#uses=1]
  %add898 = add nsw i32 %tmp895, %tmp897          ; <i32> [#uses=1]
  %tmp899 = load <4 x i32>* %temp_index_v_5       ; <<4 x i32>> [#uses=1]
  %tmp900 = extractelement <4 x i32> %tmp899, i32 2 ; <i32> [#uses=1]
  %add901 = add nsw i32 %add898, %tmp900          ; <i32> [#uses=1]
  store i32 %add901, i32* %temp_index_5
  %tmp902 = load i32* %temp_index_5               ; <i32> [#uses=1]
  %tmp903 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx904 = getelementptr inbounds i32 addrspace(1)* %tmp903, i32 %tmp902 ; <i32 addrspace(1)*> [#uses=1]
  %tmp905 = load i32 addrspace(1)* %arrayidx904   ; <i32> [#uses=1]
  store i32 %tmp905, i32* %delta_5
  %tmp906 = load i32 addrspace(1)** %Input2.addr  ; <i32 addrspace(1)*> [#uses=1]
  %tmp907 = load i32* %base_index_5               ; <i32> [#uses=1]
  %add.ptr908 = getelementptr inbounds i32 addrspace(1)* %tmp906, i32 %tmp907 ; <i32 addrspace(1)*> [#uses=1]
  %tmp909 = load i32* %temp_index_5               ; <i32> [#uses=1]
  %tmp910 = load i32 addrspace(1)** %LookUp4.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx911 = getelementptr inbounds i32 addrspace(1)* %tmp910, i32 %tmp909 ; <i32 addrspace(1)*> [#uses=1]
  %tmp912 = load i32 addrspace(1)* %arrayidx911   ; <i32> [#uses=1]
  %add.ptr913 = getelementptr inbounds i32 addrspace(1)* %add.ptr908, i32 %tmp912 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr913, i32 addrspace(1)** %addr_0_3_5
  %tmp915 = load i32 addrspace(1)** %addr_0_3_5   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx916 = getelementptr inbounds i32 addrspace(1)* %tmp915, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp917 = load i32 addrspace(1)* %arrayidx916   ; <i32> [#uses=1]
  %vecinit918 = insertelement <4 x i32> undef, i32 %tmp917, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp919 = load i32 addrspace(1)** %addr_0_3_5   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx920 = getelementptr inbounds i32 addrspace(1)* %tmp919, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp921 = load i32 addrspace(1)* %arrayidx920   ; <i32> [#uses=1]
  %vecinit922 = insertelement <4 x i32> %vecinit918, i32 %tmp921, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp923 = load i32 addrspace(1)** %addr_0_3_5   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx924 = getelementptr inbounds i32 addrspace(1)* %tmp923, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp925 = load i32 addrspace(1)* %arrayidx924   ; <i32> [#uses=1]
  %vecinit926 = insertelement <4 x i32> %vecinit922, i32 %tmp925, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp927 = load i32 addrspace(1)** %addr_0_3_5   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx928 = getelementptr inbounds i32 addrspace(1)* %tmp927, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp929 = load i32 addrspace(1)* %arrayidx928   ; <i32> [#uses=1]
  %vecinit930 = insertelement <4 x i32> %vecinit926, i32 %tmp929, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit930, <4 x i32>* %.compoundliteral914
  %tmp931 = load <4 x i32>* %.compoundliteral914  ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp931, <4 x i32>* %xmm_tree_0_3_5
  %tmp932 = load <4 x i32>* %tmp24                ; <<4 x i32>> [#uses=1]
  %tmp933 = load <4 x i32>* %xmm_query_element_5  ; <<4 x i32>> [#uses=1]
  %tmp934 = load <4 x i32>* %xmm_tree_0_3_5       ; <<4 x i32>> [#uses=1]
  %cmp935 = icmp sgt <4 x i32> %tmp933, %tmp934   ; <<4 x i1>> [#uses=1]
  %sext936 = sext <4 x i1> %cmp935 to <4 x i32>   ; <<4 x i32>> [#uses=1]
  %mul937 = mul <4 x i32> %tmp932, %sext936       ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul937, <4 x i32>* %temp_index_v_5
  %tmp938 = load <4 x i32>* %temp_index_v_5       ; <<4 x i32>> [#uses=1]
  %tmp939 = extractelement <4 x i32> %tmp938, i32 0 ; <i32> [#uses=1]
  %tmp940 = load <4 x i32>* %temp_index_v_5       ; <<4 x i32>> [#uses=1]
  %tmp941 = extractelement <4 x i32> %tmp940, i32 1 ; <i32> [#uses=1]
  %add942 = add nsw i32 %tmp939, %tmp941          ; <i32> [#uses=1]
  %tmp943 = load <4 x i32>* %temp_index_v_5       ; <<4 x i32>> [#uses=1]
  %tmp944 = extractelement <4 x i32> %tmp943, i32 2 ; <i32> [#uses=1]
  %add945 = add nsw i32 %add942, %tmp944          ; <i32> [#uses=1]
  store i32 %add945, i32* %temp_index_5
  %tmp946 = load i32* %delta_5                    ; <i32> [#uses=1]
  %shl947 = shl i32 %tmp946, 2                    ; <i32> [#uses=1]
  %tmp948 = load i32* %temp_index_5               ; <i32> [#uses=1]
  %tmp949 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx950 = getelementptr inbounds i32 addrspace(1)* %tmp949, i32 %tmp948 ; <i32 addrspace(1)*> [#uses=1]
  %tmp951 = load i32 addrspace(1)* %arrayidx950   ; <i32> [#uses=1]
  %add952 = add nsw i32 %shl947, %tmp951          ; <i32> [#uses=1]
  store i32 %add952, i32* %offset3_5
  %tmp953 = load i32* %offset2_5                  ; <i32> [#uses=1]
  %mul954 = mul i32 %tmp953, 16                   ; <i32> [#uses=1]
  %tmp955 = load i32* %offset3_5                  ; <i32> [#uses=1]
  %add956 = add nsw i32 %mul954, %tmp955          ; <i32> [#uses=1]
  store i32 %add956, i32* %offset2_5
  %tmp957 = load i32* %block_base_index_5         ; <i32> [#uses=1]
  %add958 = add nsw i32 %tmp957, 15               ; <i32> [#uses=1]
  %tmp959 = load i32* %offset2_5                  ; <i32> [#uses=1]
  %mul960 = mul i32 %tmp959, 15                   ; <i32> [#uses=1]
  %add961 = add nsw i32 %add958, %mul960          ; <i32> [#uses=1]
  store i32 %add961, i32* %base_index_5
  %tmp962 = load i32 addrspace(1)** %Input2.addr  ; <i32 addrspace(1)*> [#uses=1]
  %tmp963 = load i32* %base_index_5               ; <i32> [#uses=1]
  %add.ptr964 = getelementptr inbounds i32 addrspace(1)* %tmp962, i32 %tmp963 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr964, i32 16)
  store i32 0, i32* %offset3_5
  %tmp965 = load i32 addrspace(1)** %Input2.addr  ; <i32 addrspace(1)*> [#uses=1]
  %tmp966 = load i32* %base_index_6               ; <i32> [#uses=1]
  %add.ptr967 = getelementptr inbounds i32 addrspace(1)* %tmp965, i32 %tmp966 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr967, i32 addrspace(1)** %addr_0_3_6
  %tmp969 = load i32 addrspace(1)** %addr_0_3_6   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx970 = getelementptr inbounds i32 addrspace(1)* %tmp969, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp971 = load i32 addrspace(1)* %arrayidx970   ; <i32> [#uses=1]
  %vecinit972 = insertelement <4 x i32> undef, i32 %tmp971, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp973 = load i32 addrspace(1)** %addr_0_3_6   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx974 = getelementptr inbounds i32 addrspace(1)* %tmp973, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp975 = load i32 addrspace(1)* %arrayidx974   ; <i32> [#uses=1]
  %vecinit976 = insertelement <4 x i32> %vecinit972, i32 %tmp975, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp977 = load i32 addrspace(1)** %addr_0_3_6   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx978 = getelementptr inbounds i32 addrspace(1)* %tmp977, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp979 = load i32 addrspace(1)* %arrayidx978   ; <i32> [#uses=1]
  %vecinit980 = insertelement <4 x i32> %vecinit976, i32 %tmp979, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp981 = load i32 addrspace(1)** %addr_0_3_6   ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx982 = getelementptr inbounds i32 addrspace(1)* %tmp981, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp983 = load i32 addrspace(1)* %arrayidx982   ; <i32> [#uses=1]
  %vecinit984 = insertelement <4 x i32> %vecinit980, i32 %tmp983, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit984, <4 x i32>* %.compoundliteral968
  %tmp985 = load <4 x i32>* %.compoundliteral968  ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp985, <4 x i32>* %xmm_tree_0_3_6
  %tmp986 = load <4 x i32>* %tmp24                ; <<4 x i32>> [#uses=1]
  %tmp987 = load <4 x i32>* %xmm_query_element_6  ; <<4 x i32>> [#uses=1]
  %tmp988 = load <4 x i32>* %xmm_tree_0_3_6       ; <<4 x i32>> [#uses=1]
  %cmp989 = icmp sgt <4 x i32> %tmp987, %tmp988   ; <<4 x i1>> [#uses=1]
  %sext990 = sext <4 x i1> %cmp989 to <4 x i32>   ; <<4 x i32>> [#uses=1]
  %mul991 = mul <4 x i32> %tmp986, %sext990       ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul991, <4 x i32>* %temp_index_v_6
  %tmp992 = load <4 x i32>* %temp_index_v_6       ; <<4 x i32>> [#uses=1]
  %tmp993 = extractelement <4 x i32> %tmp992, i32 0 ; <i32> [#uses=1]
  %tmp994 = load <4 x i32>* %temp_index_v_6       ; <<4 x i32>> [#uses=1]
  %tmp995 = extractelement <4 x i32> %tmp994, i32 1 ; <i32> [#uses=1]
  %add996 = add nsw i32 %tmp993, %tmp995          ; <i32> [#uses=1]
  %tmp997 = load <4 x i32>* %temp_index_v_6       ; <<4 x i32>> [#uses=1]
  %tmp998 = extractelement <4 x i32> %tmp997, i32 2 ; <i32> [#uses=1]
  %add999 = add nsw i32 %add996, %tmp998          ; <i32> [#uses=1]
  store i32 %add999, i32* %temp_index_6
  %tmp1000 = load i32* %temp_index_6              ; <i32> [#uses=1]
  %tmp1001 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1002 = getelementptr inbounds i32 addrspace(1)* %tmp1001, i32 %tmp1000 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1003 = load i32 addrspace(1)* %arrayidx1002 ; <i32> [#uses=1]
  store i32 %tmp1003, i32* %delta_6
  %tmp1004 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp1005 = load i32* %base_index_6              ; <i32> [#uses=1]
  %add.ptr1006 = getelementptr inbounds i32 addrspace(1)* %tmp1004, i32 %tmp1005 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1007 = load i32* %temp_index_6              ; <i32> [#uses=1]
  %tmp1008 = load i32 addrspace(1)** %LookUp4.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1009 = getelementptr inbounds i32 addrspace(1)* %tmp1008, i32 %tmp1007 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1010 = load i32 addrspace(1)* %arrayidx1009 ; <i32> [#uses=1]
  %add.ptr1011 = getelementptr inbounds i32 addrspace(1)* %add.ptr1006, i32 %tmp1010 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr1011, i32 addrspace(1)** %addr_0_3_6
  %tmp1013 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1014 = getelementptr inbounds i32 addrspace(1)* %tmp1013, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1015 = load i32 addrspace(1)* %arrayidx1014 ; <i32> [#uses=1]
  %vecinit1016 = insertelement <4 x i32> undef, i32 %tmp1015, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp1017 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1018 = getelementptr inbounds i32 addrspace(1)* %tmp1017, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1019 = load i32 addrspace(1)* %arrayidx1018 ; <i32> [#uses=1]
  %vecinit1020 = insertelement <4 x i32> %vecinit1016, i32 %tmp1019, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp1021 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1022 = getelementptr inbounds i32 addrspace(1)* %tmp1021, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1023 = load i32 addrspace(1)* %arrayidx1022 ; <i32> [#uses=1]
  %vecinit1024 = insertelement <4 x i32> %vecinit1020, i32 %tmp1023, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp1025 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1026 = getelementptr inbounds i32 addrspace(1)* %tmp1025, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1027 = load i32 addrspace(1)* %arrayidx1026 ; <i32> [#uses=1]
  %vecinit1028 = insertelement <4 x i32> %vecinit1024, i32 %tmp1027, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit1028, <4 x i32>* %.compoundliteral1012
  %tmp1029 = load <4 x i32>* %.compoundliteral1012 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp1029, <4 x i32>* %xmm_tree_0_3_6
  %tmp1030 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp1031 = load <4 x i32>* %xmm_query_element_6 ; <<4 x i32>> [#uses=1]
  %tmp1032 = load <4 x i32>* %xmm_tree_0_3_6      ; <<4 x i32>> [#uses=1]
  %cmp1033 = icmp sgt <4 x i32> %tmp1031, %tmp1032 ; <<4 x i1>> [#uses=1]
  %sext1034 = sext <4 x i1> %cmp1033 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul1035 = mul <4 x i32> %tmp1030, %sext1034    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul1035, <4 x i32>* %temp_index_v_6
  %tmp1036 = load <4 x i32>* %temp_index_v_6      ; <<4 x i32>> [#uses=1]
  %tmp1037 = extractelement <4 x i32> %tmp1036, i32 0 ; <i32> [#uses=1]
  %tmp1038 = load <4 x i32>* %temp_index_v_6      ; <<4 x i32>> [#uses=1]
  %tmp1039 = extractelement <4 x i32> %tmp1038, i32 1 ; <i32> [#uses=1]
  %add1040 = add nsw i32 %tmp1037, %tmp1039       ; <i32> [#uses=1]
  %tmp1041 = load <4 x i32>* %temp_index_v_6      ; <<4 x i32>> [#uses=1]
  %tmp1042 = extractelement <4 x i32> %tmp1041, i32 2 ; <i32> [#uses=1]
  %add1043 = add nsw i32 %add1040, %tmp1042       ; <i32> [#uses=1]
  store i32 %add1043, i32* %temp_index_6
  %tmp1044 = load i32* %delta_6                   ; <i32> [#uses=1]
  %shl1045 = shl i32 %tmp1044, 2                  ; <i32> [#uses=1]
  %tmp1046 = load i32* %temp_index_6              ; <i32> [#uses=1]
  %tmp1047 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1048 = getelementptr inbounds i32 addrspace(1)* %tmp1047, i32 %tmp1046 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1049 = load i32 addrspace(1)* %arrayidx1048 ; <i32> [#uses=1]
  %add1050 = add nsw i32 %shl1045, %tmp1049       ; <i32> [#uses=1]
  store i32 %add1050, i32* %offset3_6
  %tmp1051 = load i32* %offset2_6                 ; <i32> [#uses=1]
  %mul1052 = mul i32 %tmp1051, 16                 ; <i32> [#uses=1]
  %tmp1053 = load i32* %offset3_6                 ; <i32> [#uses=1]
  %add1054 = add nsw i32 %mul1052, %tmp1053       ; <i32> [#uses=1]
  store i32 %add1054, i32* %offset2_6
  %tmp1055 = load i32* %block_base_index_6        ; <i32> [#uses=1]
  %add1056 = add nsw i32 %tmp1055, 15             ; <i32> [#uses=1]
  %tmp1057 = load i32* %offset2_6                 ; <i32> [#uses=1]
  %mul1058 = mul i32 %tmp1057, 15                 ; <i32> [#uses=1]
  %add1059 = add nsw i32 %add1056, %mul1058       ; <i32> [#uses=1]
  store i32 %add1059, i32* %base_index_6
  %tmp1060 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp1061 = load i32* %base_index_6              ; <i32> [#uses=1]
  %add.ptr1062 = getelementptr inbounds i32 addrspace(1)* %tmp1060, i32 %tmp1061 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr1062, i32 16)
  store i32 0, i32* %offset3_6
  %tmp1063 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp1064 = load i32* %base_index_7              ; <i32> [#uses=1]
  %add.ptr1065 = getelementptr inbounds i32 addrspace(1)* %tmp1063, i32 %tmp1064 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr1065, i32 addrspace(1)** %addr_0_3_7
  %tmp1067 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1068 = getelementptr inbounds i32 addrspace(1)* %tmp1067, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1069 = load i32 addrspace(1)* %arrayidx1068 ; <i32> [#uses=1]
  %vecinit1070 = insertelement <4 x i32> undef, i32 %tmp1069, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp1071 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1072 = getelementptr inbounds i32 addrspace(1)* %tmp1071, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1073 = load i32 addrspace(1)* %arrayidx1072 ; <i32> [#uses=1]
  %vecinit1074 = insertelement <4 x i32> %vecinit1070, i32 %tmp1073, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp1075 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1076 = getelementptr inbounds i32 addrspace(1)* %tmp1075, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1077 = load i32 addrspace(1)* %arrayidx1076 ; <i32> [#uses=1]
  %vecinit1078 = insertelement <4 x i32> %vecinit1074, i32 %tmp1077, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp1079 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1080 = getelementptr inbounds i32 addrspace(1)* %tmp1079, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1081 = load i32 addrspace(1)* %arrayidx1080 ; <i32> [#uses=1]
  %vecinit1082 = insertelement <4 x i32> %vecinit1078, i32 %tmp1081, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit1082, <4 x i32>* %.compoundliteral1066
  %tmp1083 = load <4 x i32>* %.compoundliteral1066 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp1083, <4 x i32>* %xmm_tree_0_3_7
  %tmp1084 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp1085 = load <4 x i32>* %xmm_query_element_7 ; <<4 x i32>> [#uses=1]
  %tmp1086 = load <4 x i32>* %xmm_tree_0_3_7      ; <<4 x i32>> [#uses=1]
  %cmp1087 = icmp sgt <4 x i32> %tmp1085, %tmp1086 ; <<4 x i1>> [#uses=1]
  %sext1088 = sext <4 x i1> %cmp1087 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul1089 = mul <4 x i32> %tmp1084, %sext1088    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul1089, <4 x i32>* %temp_index_v_7
  %tmp1090 = load <4 x i32>* %temp_index_v_7      ; <<4 x i32>> [#uses=1]
  %tmp1091 = extractelement <4 x i32> %tmp1090, i32 0 ; <i32> [#uses=1]
  %tmp1092 = load <4 x i32>* %temp_index_v_7      ; <<4 x i32>> [#uses=1]
  %tmp1093 = extractelement <4 x i32> %tmp1092, i32 1 ; <i32> [#uses=1]
  %add1094 = add nsw i32 %tmp1091, %tmp1093       ; <i32> [#uses=1]
  %tmp1095 = load <4 x i32>* %temp_index_v_7      ; <<4 x i32>> [#uses=1]
  %tmp1096 = extractelement <4 x i32> %tmp1095, i32 2 ; <i32> [#uses=1]
  %add1097 = add nsw i32 %add1094, %tmp1096       ; <i32> [#uses=1]
  store i32 %add1097, i32* %temp_index_7
  %tmp1098 = load i32* %temp_index_7              ; <i32> [#uses=1]
  %tmp1099 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1100 = getelementptr inbounds i32 addrspace(1)* %tmp1099, i32 %tmp1098 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1101 = load i32 addrspace(1)* %arrayidx1100 ; <i32> [#uses=1]
  store i32 %tmp1101, i32* %delta_7
  %tmp1102 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp1103 = load i32* %base_index_7              ; <i32> [#uses=1]
  %add.ptr1104 = getelementptr inbounds i32 addrspace(1)* %tmp1102, i32 %tmp1103 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1105 = load i32* %temp_index_7              ; <i32> [#uses=1]
  %tmp1106 = load i32 addrspace(1)** %LookUp4.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1107 = getelementptr inbounds i32 addrspace(1)* %tmp1106, i32 %tmp1105 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1108 = load i32 addrspace(1)* %arrayidx1107 ; <i32> [#uses=1]
  %add.ptr1109 = getelementptr inbounds i32 addrspace(1)* %add.ptr1104, i32 %tmp1108 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr1109, i32 addrspace(1)** %addr_0_3_7
  %tmp1111 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1112 = getelementptr inbounds i32 addrspace(1)* %tmp1111, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1113 = load i32 addrspace(1)* %arrayidx1112 ; <i32> [#uses=1]
  %vecinit1114 = insertelement <4 x i32> undef, i32 %tmp1113, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp1115 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1116 = getelementptr inbounds i32 addrspace(1)* %tmp1115, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1117 = load i32 addrspace(1)* %arrayidx1116 ; <i32> [#uses=1]
  %vecinit1118 = insertelement <4 x i32> %vecinit1114, i32 %tmp1117, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp1119 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1120 = getelementptr inbounds i32 addrspace(1)* %tmp1119, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1121 = load i32 addrspace(1)* %arrayidx1120 ; <i32> [#uses=1]
  %vecinit1122 = insertelement <4 x i32> %vecinit1118, i32 %tmp1121, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp1123 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1124 = getelementptr inbounds i32 addrspace(1)* %tmp1123, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1125 = load i32 addrspace(1)* %arrayidx1124 ; <i32> [#uses=1]
  %vecinit1126 = insertelement <4 x i32> %vecinit1122, i32 %tmp1125, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit1126, <4 x i32>* %.compoundliteral1110
  %tmp1127 = load <4 x i32>* %.compoundliteral1110 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp1127, <4 x i32>* %xmm_tree_0_3_7
  %tmp1128 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp1129 = load <4 x i32>* %xmm_query_element_7 ; <<4 x i32>> [#uses=1]
  %tmp1130 = load <4 x i32>* %xmm_tree_0_3_7      ; <<4 x i32>> [#uses=1]
  %cmp1131 = icmp sgt <4 x i32> %tmp1129, %tmp1130 ; <<4 x i1>> [#uses=1]
  %sext1132 = sext <4 x i1> %cmp1131 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul1133 = mul <4 x i32> %tmp1128, %sext1132    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul1133, <4 x i32>* %temp_index_v_7
  %tmp1134 = load <4 x i32>* %temp_index_v_7      ; <<4 x i32>> [#uses=1]
  %tmp1135 = extractelement <4 x i32> %tmp1134, i32 0 ; <i32> [#uses=1]
  %tmp1136 = load <4 x i32>* %temp_index_v_7      ; <<4 x i32>> [#uses=1]
  %tmp1137 = extractelement <4 x i32> %tmp1136, i32 1 ; <i32> [#uses=1]
  %add1138 = add nsw i32 %tmp1135, %tmp1137       ; <i32> [#uses=1]
  %tmp1139 = load <4 x i32>* %temp_index_v_7      ; <<4 x i32>> [#uses=1]
  %tmp1140 = extractelement <4 x i32> %tmp1139, i32 2 ; <i32> [#uses=1]
  %add1141 = add nsw i32 %add1138, %tmp1140       ; <i32> [#uses=1]
  store i32 %add1141, i32* %temp_index_7
  %tmp1142 = load i32* %delta_7                   ; <i32> [#uses=1]
  %shl1143 = shl i32 %tmp1142, 2                  ; <i32> [#uses=1]
  %tmp1144 = load i32* %temp_index_7              ; <i32> [#uses=1]
  %tmp1145 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1146 = getelementptr inbounds i32 addrspace(1)* %tmp1145, i32 %tmp1144 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1147 = load i32 addrspace(1)* %arrayidx1146 ; <i32> [#uses=1]
  %add1148 = add nsw i32 %shl1143, %tmp1147       ; <i32> [#uses=1]
  store i32 %add1148, i32* %offset3_7
  %tmp1149 = load i32* %offset2_7                 ; <i32> [#uses=1]
  %mul1150 = mul i32 %tmp1149, 16                 ; <i32> [#uses=1]
  %tmp1151 = load i32* %offset3_7                 ; <i32> [#uses=1]
  %add1152 = add nsw i32 %mul1150, %tmp1151       ; <i32> [#uses=1]
  store i32 %add1152, i32* %offset2_7
  %tmp1153 = load i32* %block_base_index_7        ; <i32> [#uses=1]
  %add1154 = add nsw i32 %tmp1153, 15             ; <i32> [#uses=1]
  %tmp1155 = load i32* %offset2_7                 ; <i32> [#uses=1]
  %mul1156 = mul i32 %tmp1155, 15                 ; <i32> [#uses=1]
  %add1157 = add nsw i32 %add1154, %mul1156       ; <i32> [#uses=1]
  store i32 %add1157, i32* %base_index_7
  %tmp1158 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp1159 = load i32* %base_index_7              ; <i32> [#uses=1]
  %add.ptr1160 = getelementptr inbounds i32 addrspace(1)* %tmp1158, i32 %tmp1159 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr1160, i32 16)
  store i32 0, i32* %offset3_7
  %tmp1161 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp1162 = load i32* %base_index_0              ; <i32> [#uses=1]
  %add.ptr1163 = getelementptr inbounds i32 addrspace(1)* %tmp1161, i32 %tmp1162 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr1163, i32 addrspace(1)** %addr_0_3_0
  %tmp1165 = load i32 addrspace(1)** %addr_0_3_0  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1166 = getelementptr inbounds i32 addrspace(1)* %tmp1165, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1167 = load i32 addrspace(1)* %arrayidx1166 ; <i32> [#uses=1]
  %vecinit1168 = insertelement <4 x i32> undef, i32 %tmp1167, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp1169 = load i32 addrspace(1)** %addr_0_3_0  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1170 = getelementptr inbounds i32 addrspace(1)* %tmp1169, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1171 = load i32 addrspace(1)* %arrayidx1170 ; <i32> [#uses=1]
  %vecinit1172 = insertelement <4 x i32> %vecinit1168, i32 %tmp1171, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp1173 = load i32 addrspace(1)** %addr_0_3_0  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1174 = getelementptr inbounds i32 addrspace(1)* %tmp1173, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1175 = load i32 addrspace(1)* %arrayidx1174 ; <i32> [#uses=1]
  %vecinit1176 = insertelement <4 x i32> %vecinit1172, i32 %tmp1175, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp1177 = load i32 addrspace(1)** %addr_0_3_0  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1178 = getelementptr inbounds i32 addrspace(1)* %tmp1177, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1179 = load i32 addrspace(1)* %arrayidx1178 ; <i32> [#uses=1]
  %vecinit1180 = insertelement <4 x i32> %vecinit1176, i32 %tmp1179, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit1180, <4 x i32>* %.compoundliteral1164
  %tmp1181 = load <4 x i32>* %.compoundliteral1164 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp1181, <4 x i32>* %xmm_tree_0_3_0
  %tmp1182 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp1183 = load <4 x i32>* %xmm_query_element_0 ; <<4 x i32>> [#uses=1]
  %tmp1184 = load <4 x i32>* %xmm_tree_0_3_0      ; <<4 x i32>> [#uses=1]
  %cmp1185 = icmp sgt <4 x i32> %tmp1183, %tmp1184 ; <<4 x i1>> [#uses=1]
  %sext1186 = sext <4 x i1> %cmp1185 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul1187 = mul <4 x i32> %tmp1182, %sext1186    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul1187, <4 x i32>* %temp_index_v_0
  %tmp1188 = load <4 x i32>* %temp_index_v_0      ; <<4 x i32>> [#uses=1]
  %tmp1189 = extractelement <4 x i32> %tmp1188, i32 0 ; <i32> [#uses=1]
  %tmp1190 = load <4 x i32>* %temp_index_v_0      ; <<4 x i32>> [#uses=1]
  %tmp1191 = extractelement <4 x i32> %tmp1190, i32 1 ; <i32> [#uses=1]
  %add1192 = add nsw i32 %tmp1189, %tmp1191       ; <i32> [#uses=1]
  %tmp1193 = load <4 x i32>* %temp_index_v_0      ; <<4 x i32>> [#uses=1]
  %tmp1194 = extractelement <4 x i32> %tmp1193, i32 2 ; <i32> [#uses=1]
  %add1195 = add nsw i32 %add1192, %tmp1194       ; <i32> [#uses=1]
  store i32 %add1195, i32* %temp_index_0
  %tmp1196 = load i32* %temp_index_0              ; <i32> [#uses=1]
  %tmp1197 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1198 = getelementptr inbounds i32 addrspace(1)* %tmp1197, i32 %tmp1196 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1199 = load i32 addrspace(1)* %arrayidx1198 ; <i32> [#uses=1]
  store i32 %tmp1199, i32* %delta_0
  %tmp1200 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp1201 = load i32* %base_index_0              ; <i32> [#uses=1]
  %add.ptr1202 = getelementptr inbounds i32 addrspace(1)* %tmp1200, i32 %tmp1201 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1203 = load i32* %temp_index_0              ; <i32> [#uses=1]
  %tmp1204 = load i32 addrspace(1)** %LookUp4.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1205 = getelementptr inbounds i32 addrspace(1)* %tmp1204, i32 %tmp1203 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1206 = load i32 addrspace(1)* %arrayidx1205 ; <i32> [#uses=1]
  %add.ptr1207 = getelementptr inbounds i32 addrspace(1)* %add.ptr1202, i32 %tmp1206 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr1207, i32 addrspace(1)** %addr_0_3_0
  %tmp1209 = load i32 addrspace(1)** %addr_0_3_0  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1210 = getelementptr inbounds i32 addrspace(1)* %tmp1209, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1211 = load i32 addrspace(1)* %arrayidx1210 ; <i32> [#uses=1]
  %vecinit1212 = insertelement <4 x i32> undef, i32 %tmp1211, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp1213 = load i32 addrspace(1)** %addr_0_3_0  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1214 = getelementptr inbounds i32 addrspace(1)* %tmp1213, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1215 = load i32 addrspace(1)* %arrayidx1214 ; <i32> [#uses=1]
  %vecinit1216 = insertelement <4 x i32> %vecinit1212, i32 %tmp1215, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp1217 = load i32 addrspace(1)** %addr_0_3_0  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1218 = getelementptr inbounds i32 addrspace(1)* %tmp1217, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1219 = load i32 addrspace(1)* %arrayidx1218 ; <i32> [#uses=1]
  %vecinit1220 = insertelement <4 x i32> %vecinit1216, i32 %tmp1219, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp1221 = load i32 addrspace(1)** %addr_0_3_0  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1222 = getelementptr inbounds i32 addrspace(1)* %tmp1221, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1223 = load i32 addrspace(1)* %arrayidx1222 ; <i32> [#uses=1]
  %vecinit1224 = insertelement <4 x i32> %vecinit1220, i32 %tmp1223, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit1224, <4 x i32>* %.compoundliteral1208
  %tmp1225 = load <4 x i32>* %.compoundliteral1208 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp1225, <4 x i32>* %xmm_tree_0_3_0
  %tmp1226 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp1227 = load <4 x i32>* %xmm_query_element_0 ; <<4 x i32>> [#uses=1]
  %tmp1228 = load <4 x i32>* %xmm_tree_0_3_0      ; <<4 x i32>> [#uses=1]
  %cmp1229 = icmp sgt <4 x i32> %tmp1227, %tmp1228 ; <<4 x i1>> [#uses=1]
  %sext1230 = sext <4 x i1> %cmp1229 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul1231 = mul <4 x i32> %tmp1226, %sext1230    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul1231, <4 x i32>* %temp_index_v_0
  %tmp1232 = load <4 x i32>* %temp_index_v_0      ; <<4 x i32>> [#uses=1]
  %tmp1233 = extractelement <4 x i32> %tmp1232, i32 0 ; <i32> [#uses=1]
  %tmp1234 = load <4 x i32>* %temp_index_v_0      ; <<4 x i32>> [#uses=1]
  %tmp1235 = extractelement <4 x i32> %tmp1234, i32 1 ; <i32> [#uses=1]
  %add1236 = add nsw i32 %tmp1233, %tmp1235       ; <i32> [#uses=1]
  %tmp1237 = load <4 x i32>* %temp_index_v_0      ; <<4 x i32>> [#uses=1]
  %tmp1238 = extractelement <4 x i32> %tmp1237, i32 2 ; <i32> [#uses=1]
  %add1239 = add nsw i32 %add1236, %tmp1238       ; <i32> [#uses=1]
  store i32 %add1239, i32* %temp_index_0
  %tmp1240 = load i32* %delta_0                   ; <i32> [#uses=1]
  %shl1241 = shl i32 %tmp1240, 2                  ; <i32> [#uses=1]
  %tmp1242 = load i32* %temp_index_0              ; <i32> [#uses=1]
  %tmp1243 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1244 = getelementptr inbounds i32 addrspace(1)* %tmp1243, i32 %tmp1242 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1245 = load i32 addrspace(1)* %arrayidx1244 ; <i32> [#uses=1]
  %add1246 = add nsw i32 %shl1241, %tmp1245       ; <i32> [#uses=1]
  store i32 %add1246, i32* %offset3_0
  %tmp1247 = load i32* %offset2_0                 ; <i32> [#uses=1]
  %mul1248 = mul i32 %tmp1247, 16                 ; <i32> [#uses=1]
  %tmp1249 = load i32* %offset3_0                 ; <i32> [#uses=1]
  %add1250 = add nsw i32 %mul1248, %tmp1249       ; <i32> [#uses=1]
  store i32 %add1250, i32* %offset2_0
  %tmp1251 = load i32* %block_base_index_0        ; <i32> [#uses=1]
  %add1252 = add nsw i32 %tmp1251, 255            ; <i32> [#uses=1]
  %tmp1253 = load i32* %offset2_0                 ; <i32> [#uses=1]
  %mul1254 = mul i32 %tmp1253, 3                  ; <i32> [#uses=1]
  %add1255 = add nsw i32 %add1252, %mul1254       ; <i32> [#uses=1]
  store i32 %add1255, i32* %base_index_0
  %tmp1256 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp1257 = load i32* %base_index_0              ; <i32> [#uses=1]
  %add.ptr1258 = getelementptr inbounds i32 addrspace(1)* %tmp1256, i32 %tmp1257 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr1258, i32 16)
  store i32 0, i32* %offset3_0
  %tmp1259 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp1260 = load i32* %base_index_1              ; <i32> [#uses=1]
  %add.ptr1261 = getelementptr inbounds i32 addrspace(1)* %tmp1259, i32 %tmp1260 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr1261, i32 addrspace(1)** %addr_0_3_1
  %tmp1263 = load i32 addrspace(1)** %addr_0_3_1  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1264 = getelementptr inbounds i32 addrspace(1)* %tmp1263, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1265 = load i32 addrspace(1)* %arrayidx1264 ; <i32> [#uses=1]
  %vecinit1266 = insertelement <4 x i32> undef, i32 %tmp1265, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp1267 = load i32 addrspace(1)** %addr_0_3_1  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1268 = getelementptr inbounds i32 addrspace(1)* %tmp1267, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1269 = load i32 addrspace(1)* %arrayidx1268 ; <i32> [#uses=1]
  %vecinit1270 = insertelement <4 x i32> %vecinit1266, i32 %tmp1269, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp1271 = load i32 addrspace(1)** %addr_0_3_1  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1272 = getelementptr inbounds i32 addrspace(1)* %tmp1271, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1273 = load i32 addrspace(1)* %arrayidx1272 ; <i32> [#uses=1]
  %vecinit1274 = insertelement <4 x i32> %vecinit1270, i32 %tmp1273, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp1275 = load i32 addrspace(1)** %addr_0_3_1  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1276 = getelementptr inbounds i32 addrspace(1)* %tmp1275, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1277 = load i32 addrspace(1)* %arrayidx1276 ; <i32> [#uses=1]
  %vecinit1278 = insertelement <4 x i32> %vecinit1274, i32 %tmp1277, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit1278, <4 x i32>* %.compoundliteral1262
  %tmp1279 = load <4 x i32>* %.compoundliteral1262 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp1279, <4 x i32>* %xmm_tree_0_3_1
  %tmp1280 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp1281 = load <4 x i32>* %xmm_query_element_1 ; <<4 x i32>> [#uses=1]
  %tmp1282 = load <4 x i32>* %xmm_tree_0_3_1      ; <<4 x i32>> [#uses=1]
  %cmp1283 = icmp sgt <4 x i32> %tmp1281, %tmp1282 ; <<4 x i1>> [#uses=1]
  %sext1284 = sext <4 x i1> %cmp1283 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul1285 = mul <4 x i32> %tmp1280, %sext1284    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul1285, <4 x i32>* %temp_index_v_1
  %tmp1286 = load <4 x i32>* %temp_index_v_1      ; <<4 x i32>> [#uses=1]
  %tmp1287 = extractelement <4 x i32> %tmp1286, i32 0 ; <i32> [#uses=1]
  %tmp1288 = load <4 x i32>* %temp_index_v_1      ; <<4 x i32>> [#uses=1]
  %tmp1289 = extractelement <4 x i32> %tmp1288, i32 1 ; <i32> [#uses=1]
  %add1290 = add nsw i32 %tmp1287, %tmp1289       ; <i32> [#uses=1]
  %tmp1291 = load <4 x i32>* %temp_index_v_1      ; <<4 x i32>> [#uses=1]
  %tmp1292 = extractelement <4 x i32> %tmp1291, i32 2 ; <i32> [#uses=1]
  %add1293 = add nsw i32 %add1290, %tmp1292       ; <i32> [#uses=1]
  store i32 %add1293, i32* %temp_index_1
  %tmp1294 = load i32* %temp_index_1              ; <i32> [#uses=1]
  %tmp1295 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1296 = getelementptr inbounds i32 addrspace(1)* %tmp1295, i32 %tmp1294 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1297 = load i32 addrspace(1)* %arrayidx1296 ; <i32> [#uses=1]
  store i32 %tmp1297, i32* %delta_1
  %tmp1298 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp1299 = load i32* %base_index_1              ; <i32> [#uses=1]
  %add.ptr1300 = getelementptr inbounds i32 addrspace(1)* %tmp1298, i32 %tmp1299 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1301 = load i32* %temp_index_1              ; <i32> [#uses=1]
  %tmp1302 = load i32 addrspace(1)** %LookUp4.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1303 = getelementptr inbounds i32 addrspace(1)* %tmp1302, i32 %tmp1301 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1304 = load i32 addrspace(1)* %arrayidx1303 ; <i32> [#uses=1]
  %add.ptr1305 = getelementptr inbounds i32 addrspace(1)* %add.ptr1300, i32 %tmp1304 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr1305, i32 addrspace(1)** %addr_0_3_1
  %tmp1307 = load i32 addrspace(1)** %addr_0_3_1  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1308 = getelementptr inbounds i32 addrspace(1)* %tmp1307, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1309 = load i32 addrspace(1)* %arrayidx1308 ; <i32> [#uses=1]
  %vecinit1310 = insertelement <4 x i32> undef, i32 %tmp1309, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp1311 = load i32 addrspace(1)** %addr_0_3_1  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1312 = getelementptr inbounds i32 addrspace(1)* %tmp1311, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1313 = load i32 addrspace(1)* %arrayidx1312 ; <i32> [#uses=1]
  %vecinit1314 = insertelement <4 x i32> %vecinit1310, i32 %tmp1313, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp1315 = load i32 addrspace(1)** %addr_0_3_1  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1316 = getelementptr inbounds i32 addrspace(1)* %tmp1315, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1317 = load i32 addrspace(1)* %arrayidx1316 ; <i32> [#uses=1]
  %vecinit1318 = insertelement <4 x i32> %vecinit1314, i32 %tmp1317, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp1319 = load i32 addrspace(1)** %addr_0_3_1  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1320 = getelementptr inbounds i32 addrspace(1)* %tmp1319, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1321 = load i32 addrspace(1)* %arrayidx1320 ; <i32> [#uses=1]
  %vecinit1322 = insertelement <4 x i32> %vecinit1318, i32 %tmp1321, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit1322, <4 x i32>* %.compoundliteral1306
  %tmp1323 = load <4 x i32>* %.compoundliteral1306 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp1323, <4 x i32>* %xmm_tree_0_3_1
  %tmp1324 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp1325 = load <4 x i32>* %xmm_query_element_1 ; <<4 x i32>> [#uses=1]
  %tmp1326 = load <4 x i32>* %xmm_tree_0_3_1      ; <<4 x i32>> [#uses=1]
  %cmp1327 = icmp sgt <4 x i32> %tmp1325, %tmp1326 ; <<4 x i1>> [#uses=1]
  %sext1328 = sext <4 x i1> %cmp1327 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul1329 = mul <4 x i32> %tmp1324, %sext1328    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul1329, <4 x i32>* %temp_index_v_1
  %tmp1330 = load <4 x i32>* %temp_index_v_1      ; <<4 x i32>> [#uses=1]
  %tmp1331 = extractelement <4 x i32> %tmp1330, i32 0 ; <i32> [#uses=1]
  %tmp1332 = load <4 x i32>* %temp_index_v_1      ; <<4 x i32>> [#uses=1]
  %tmp1333 = extractelement <4 x i32> %tmp1332, i32 1 ; <i32> [#uses=1]
  %add1334 = add nsw i32 %tmp1331, %tmp1333       ; <i32> [#uses=1]
  %tmp1335 = load <4 x i32>* %temp_index_v_1      ; <<4 x i32>> [#uses=1]
  %tmp1336 = extractelement <4 x i32> %tmp1335, i32 2 ; <i32> [#uses=1]
  %add1337 = add nsw i32 %add1334, %tmp1336       ; <i32> [#uses=1]
  store i32 %add1337, i32* %temp_index_1
  %tmp1338 = load i32* %delta_1                   ; <i32> [#uses=1]
  %shl1339 = shl i32 %tmp1338, 2                  ; <i32> [#uses=1]
  %tmp1340 = load i32* %temp_index_1              ; <i32> [#uses=1]
  %tmp1341 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1342 = getelementptr inbounds i32 addrspace(1)* %tmp1341, i32 %tmp1340 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1343 = load i32 addrspace(1)* %arrayidx1342 ; <i32> [#uses=1]
  %add1344 = add nsw i32 %shl1339, %tmp1343       ; <i32> [#uses=1]
  store i32 %add1344, i32* %offset3_1
  %tmp1345 = load i32* %offset2_1                 ; <i32> [#uses=1]
  %mul1346 = mul i32 %tmp1345, 16                 ; <i32> [#uses=1]
  %tmp1347 = load i32* %offset3_1                 ; <i32> [#uses=1]
  %add1348 = add nsw i32 %mul1346, %tmp1347       ; <i32> [#uses=1]
  store i32 %add1348, i32* %offset2_1
  %tmp1349 = load i32* %block_base_index_1        ; <i32> [#uses=1]
  %add1350 = add nsw i32 %tmp1349, 255            ; <i32> [#uses=1]
  %tmp1351 = load i32* %offset2_1                 ; <i32> [#uses=1]
  %mul1352 = mul i32 %tmp1351, 3                  ; <i32> [#uses=1]
  %add1353 = add nsw i32 %add1350, %mul1352       ; <i32> [#uses=1]
  store i32 %add1353, i32* %base_index_1
  %tmp1354 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp1355 = load i32* %base_index_1              ; <i32> [#uses=1]
  %add.ptr1356 = getelementptr inbounds i32 addrspace(1)* %tmp1354, i32 %tmp1355 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr1356, i32 16)
  store i32 0, i32* %offset3_1
  %tmp1357 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp1358 = load i32* %base_index_2              ; <i32> [#uses=1]
  %add.ptr1359 = getelementptr inbounds i32 addrspace(1)* %tmp1357, i32 %tmp1358 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr1359, i32 addrspace(1)** %addr_0_3_2
  %tmp1361 = load i32 addrspace(1)** %addr_0_3_2  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1362 = getelementptr inbounds i32 addrspace(1)* %tmp1361, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1363 = load i32 addrspace(1)* %arrayidx1362 ; <i32> [#uses=1]
  %vecinit1364 = insertelement <4 x i32> undef, i32 %tmp1363, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp1365 = load i32 addrspace(1)** %addr_0_3_2  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1366 = getelementptr inbounds i32 addrspace(1)* %tmp1365, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1367 = load i32 addrspace(1)* %arrayidx1366 ; <i32> [#uses=1]
  %vecinit1368 = insertelement <4 x i32> %vecinit1364, i32 %tmp1367, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp1369 = load i32 addrspace(1)** %addr_0_3_2  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1370 = getelementptr inbounds i32 addrspace(1)* %tmp1369, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1371 = load i32 addrspace(1)* %arrayidx1370 ; <i32> [#uses=1]
  %vecinit1372 = insertelement <4 x i32> %vecinit1368, i32 %tmp1371, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp1373 = load i32 addrspace(1)** %addr_0_3_2  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1374 = getelementptr inbounds i32 addrspace(1)* %tmp1373, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1375 = load i32 addrspace(1)* %arrayidx1374 ; <i32> [#uses=1]
  %vecinit1376 = insertelement <4 x i32> %vecinit1372, i32 %tmp1375, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit1376, <4 x i32>* %.compoundliteral1360
  %tmp1377 = load <4 x i32>* %.compoundliteral1360 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp1377, <4 x i32>* %xmm_tree_0_3_2
  %tmp1378 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp1379 = load <4 x i32>* %xmm_query_element_2 ; <<4 x i32>> [#uses=1]
  %tmp1380 = load <4 x i32>* %xmm_tree_0_3_2      ; <<4 x i32>> [#uses=1]
  %cmp1381 = icmp sgt <4 x i32> %tmp1379, %tmp1380 ; <<4 x i1>> [#uses=1]
  %sext1382 = sext <4 x i1> %cmp1381 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul1383 = mul <4 x i32> %tmp1378, %sext1382    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul1383, <4 x i32>* %temp_index_v_2
  %tmp1384 = load <4 x i32>* %temp_index_v_2      ; <<4 x i32>> [#uses=1]
  %tmp1385 = extractelement <4 x i32> %tmp1384, i32 0 ; <i32> [#uses=1]
  %tmp1386 = load <4 x i32>* %temp_index_v_2      ; <<4 x i32>> [#uses=1]
  %tmp1387 = extractelement <4 x i32> %tmp1386, i32 1 ; <i32> [#uses=1]
  %add1388 = add nsw i32 %tmp1385, %tmp1387       ; <i32> [#uses=1]
  %tmp1389 = load <4 x i32>* %temp_index_v_2      ; <<4 x i32>> [#uses=1]
  %tmp1390 = extractelement <4 x i32> %tmp1389, i32 2 ; <i32> [#uses=1]
  %add1391 = add nsw i32 %add1388, %tmp1390       ; <i32> [#uses=1]
  store i32 %add1391, i32* %temp_index_2
  %tmp1392 = load i32* %temp_index_2              ; <i32> [#uses=1]
  %tmp1393 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1394 = getelementptr inbounds i32 addrspace(1)* %tmp1393, i32 %tmp1392 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1395 = load i32 addrspace(1)* %arrayidx1394 ; <i32> [#uses=1]
  store i32 %tmp1395, i32* %delta_2
  %tmp1396 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp1397 = load i32* %base_index_2              ; <i32> [#uses=1]
  %add.ptr1398 = getelementptr inbounds i32 addrspace(1)* %tmp1396, i32 %tmp1397 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1399 = load i32* %temp_index_2              ; <i32> [#uses=1]
  %tmp1400 = load i32 addrspace(1)** %LookUp4.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1401 = getelementptr inbounds i32 addrspace(1)* %tmp1400, i32 %tmp1399 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1402 = load i32 addrspace(1)* %arrayidx1401 ; <i32> [#uses=1]
  %add.ptr1403 = getelementptr inbounds i32 addrspace(1)* %add.ptr1398, i32 %tmp1402 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr1403, i32 addrspace(1)** %addr_0_3_2
  %tmp1405 = load i32 addrspace(1)** %addr_0_3_2  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1406 = getelementptr inbounds i32 addrspace(1)* %tmp1405, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1407 = load i32 addrspace(1)* %arrayidx1406 ; <i32> [#uses=1]
  %vecinit1408 = insertelement <4 x i32> undef, i32 %tmp1407, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp1409 = load i32 addrspace(1)** %addr_0_3_2  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1410 = getelementptr inbounds i32 addrspace(1)* %tmp1409, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1411 = load i32 addrspace(1)* %arrayidx1410 ; <i32> [#uses=1]
  %vecinit1412 = insertelement <4 x i32> %vecinit1408, i32 %tmp1411, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp1413 = load i32 addrspace(1)** %addr_0_3_2  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1414 = getelementptr inbounds i32 addrspace(1)* %tmp1413, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1415 = load i32 addrspace(1)* %arrayidx1414 ; <i32> [#uses=1]
  %vecinit1416 = insertelement <4 x i32> %vecinit1412, i32 %tmp1415, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp1417 = load i32 addrspace(1)** %addr_0_3_2  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1418 = getelementptr inbounds i32 addrspace(1)* %tmp1417, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1419 = load i32 addrspace(1)* %arrayidx1418 ; <i32> [#uses=1]
  %vecinit1420 = insertelement <4 x i32> %vecinit1416, i32 %tmp1419, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit1420, <4 x i32>* %.compoundliteral1404
  %tmp1421 = load <4 x i32>* %.compoundliteral1404 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp1421, <4 x i32>* %xmm_tree_0_3_2
  %tmp1422 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp1423 = load <4 x i32>* %xmm_query_element_2 ; <<4 x i32>> [#uses=1]
  %tmp1424 = load <4 x i32>* %xmm_tree_0_3_2      ; <<4 x i32>> [#uses=1]
  %cmp1425 = icmp sgt <4 x i32> %tmp1423, %tmp1424 ; <<4 x i1>> [#uses=1]
  %sext1426 = sext <4 x i1> %cmp1425 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul1427 = mul <4 x i32> %tmp1422, %sext1426    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul1427, <4 x i32>* %temp_index_v_2
  %tmp1428 = load <4 x i32>* %temp_index_v_2      ; <<4 x i32>> [#uses=1]
  %tmp1429 = extractelement <4 x i32> %tmp1428, i32 0 ; <i32> [#uses=1]
  %tmp1430 = load <4 x i32>* %temp_index_v_2      ; <<4 x i32>> [#uses=1]
  %tmp1431 = extractelement <4 x i32> %tmp1430, i32 1 ; <i32> [#uses=1]
  %add1432 = add nsw i32 %tmp1429, %tmp1431       ; <i32> [#uses=1]
  %tmp1433 = load <4 x i32>* %temp_index_v_2      ; <<4 x i32>> [#uses=1]
  %tmp1434 = extractelement <4 x i32> %tmp1433, i32 2 ; <i32> [#uses=1]
  %add1435 = add nsw i32 %add1432, %tmp1434       ; <i32> [#uses=1]
  store i32 %add1435, i32* %temp_index_2
  %tmp1436 = load i32* %delta_2                   ; <i32> [#uses=1]
  %shl1437 = shl i32 %tmp1436, 2                  ; <i32> [#uses=1]
  %tmp1438 = load i32* %temp_index_2              ; <i32> [#uses=1]
  %tmp1439 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1440 = getelementptr inbounds i32 addrspace(1)* %tmp1439, i32 %tmp1438 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1441 = load i32 addrspace(1)* %arrayidx1440 ; <i32> [#uses=1]
  %add1442 = add nsw i32 %shl1437, %tmp1441       ; <i32> [#uses=1]
  store i32 %add1442, i32* %offset3_2
  %tmp1443 = load i32* %offset2_2                 ; <i32> [#uses=1]
  %mul1444 = mul i32 %tmp1443, 16                 ; <i32> [#uses=1]
  %tmp1445 = load i32* %offset3_2                 ; <i32> [#uses=1]
  %add1446 = add nsw i32 %mul1444, %tmp1445       ; <i32> [#uses=1]
  store i32 %add1446, i32* %offset2_2
  %tmp1447 = load i32* %block_base_index_2        ; <i32> [#uses=1]
  %add1448 = add nsw i32 %tmp1447, 255            ; <i32> [#uses=1]
  %tmp1449 = load i32* %offset2_2                 ; <i32> [#uses=1]
  %mul1450 = mul i32 %tmp1449, 3                  ; <i32> [#uses=1]
  %add1451 = add nsw i32 %add1448, %mul1450       ; <i32> [#uses=1]
  store i32 %add1451, i32* %base_index_2
  %tmp1452 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp1453 = load i32* %base_index_2              ; <i32> [#uses=1]
  %add.ptr1454 = getelementptr inbounds i32 addrspace(1)* %tmp1452, i32 %tmp1453 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr1454, i32 16)
  store i32 0, i32* %offset3_2
  %tmp1455 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp1456 = load i32* %base_index_3              ; <i32> [#uses=1]
  %add.ptr1457 = getelementptr inbounds i32 addrspace(1)* %tmp1455, i32 %tmp1456 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr1457, i32 addrspace(1)** %addr_0_3_3
  %tmp1459 = load i32 addrspace(1)** %addr_0_3_3  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1460 = getelementptr inbounds i32 addrspace(1)* %tmp1459, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1461 = load i32 addrspace(1)* %arrayidx1460 ; <i32> [#uses=1]
  %vecinit1462 = insertelement <4 x i32> undef, i32 %tmp1461, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp1463 = load i32 addrspace(1)** %addr_0_3_3  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1464 = getelementptr inbounds i32 addrspace(1)* %tmp1463, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1465 = load i32 addrspace(1)* %arrayidx1464 ; <i32> [#uses=1]
  %vecinit1466 = insertelement <4 x i32> %vecinit1462, i32 %tmp1465, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp1467 = load i32 addrspace(1)** %addr_0_3_3  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1468 = getelementptr inbounds i32 addrspace(1)* %tmp1467, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1469 = load i32 addrspace(1)* %arrayidx1468 ; <i32> [#uses=1]
  %vecinit1470 = insertelement <4 x i32> %vecinit1466, i32 %tmp1469, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp1471 = load i32 addrspace(1)** %addr_0_3_3  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1472 = getelementptr inbounds i32 addrspace(1)* %tmp1471, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1473 = load i32 addrspace(1)* %arrayidx1472 ; <i32> [#uses=1]
  %vecinit1474 = insertelement <4 x i32> %vecinit1470, i32 %tmp1473, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit1474, <4 x i32>* %.compoundliteral1458
  %tmp1475 = load <4 x i32>* %.compoundliteral1458 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp1475, <4 x i32>* %xmm_tree_0_3_3
  %tmp1476 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp1477 = load <4 x i32>* %xmm_query_element_3 ; <<4 x i32>> [#uses=1]
  %tmp1478 = load <4 x i32>* %xmm_tree_0_3_3      ; <<4 x i32>> [#uses=1]
  %cmp1479 = icmp sgt <4 x i32> %tmp1477, %tmp1478 ; <<4 x i1>> [#uses=1]
  %sext1480 = sext <4 x i1> %cmp1479 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul1481 = mul <4 x i32> %tmp1476, %sext1480    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul1481, <4 x i32>* %temp_index_v_3
  %tmp1482 = load <4 x i32>* %temp_index_v_3      ; <<4 x i32>> [#uses=1]
  %tmp1483 = extractelement <4 x i32> %tmp1482, i32 0 ; <i32> [#uses=1]
  %tmp1484 = load <4 x i32>* %temp_index_v_3      ; <<4 x i32>> [#uses=1]
  %tmp1485 = extractelement <4 x i32> %tmp1484, i32 1 ; <i32> [#uses=1]
  %add1486 = add nsw i32 %tmp1483, %tmp1485       ; <i32> [#uses=1]
  %tmp1487 = load <4 x i32>* %temp_index_v_3      ; <<4 x i32>> [#uses=1]
  %tmp1488 = extractelement <4 x i32> %tmp1487, i32 2 ; <i32> [#uses=1]
  %add1489 = add nsw i32 %add1486, %tmp1488       ; <i32> [#uses=1]
  store i32 %add1489, i32* %temp_index_3
  %tmp1490 = load i32* %temp_index_3              ; <i32> [#uses=1]
  %tmp1491 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1492 = getelementptr inbounds i32 addrspace(1)* %tmp1491, i32 %tmp1490 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1493 = load i32 addrspace(1)* %arrayidx1492 ; <i32> [#uses=1]
  store i32 %tmp1493, i32* %delta_3
  %tmp1494 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp1495 = load i32* %base_index_3              ; <i32> [#uses=1]
  %add.ptr1496 = getelementptr inbounds i32 addrspace(1)* %tmp1494, i32 %tmp1495 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1497 = load i32* %temp_index_3              ; <i32> [#uses=1]
  %tmp1498 = load i32 addrspace(1)** %LookUp4.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1499 = getelementptr inbounds i32 addrspace(1)* %tmp1498, i32 %tmp1497 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1500 = load i32 addrspace(1)* %arrayidx1499 ; <i32> [#uses=1]
  %add.ptr1501 = getelementptr inbounds i32 addrspace(1)* %add.ptr1496, i32 %tmp1500 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr1501, i32 addrspace(1)** %addr_0_3_3
  %tmp1503 = load i32 addrspace(1)** %addr_0_3_3  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1504 = getelementptr inbounds i32 addrspace(1)* %tmp1503, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1505 = load i32 addrspace(1)* %arrayidx1504 ; <i32> [#uses=1]
  %vecinit1506 = insertelement <4 x i32> undef, i32 %tmp1505, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp1507 = load i32 addrspace(1)** %addr_0_3_3  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1508 = getelementptr inbounds i32 addrspace(1)* %tmp1507, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1509 = load i32 addrspace(1)* %arrayidx1508 ; <i32> [#uses=1]
  %vecinit1510 = insertelement <4 x i32> %vecinit1506, i32 %tmp1509, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp1511 = load i32 addrspace(1)** %addr_0_3_3  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1512 = getelementptr inbounds i32 addrspace(1)* %tmp1511, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1513 = load i32 addrspace(1)* %arrayidx1512 ; <i32> [#uses=1]
  %vecinit1514 = insertelement <4 x i32> %vecinit1510, i32 %tmp1513, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp1515 = load i32 addrspace(1)** %addr_0_3_3  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1516 = getelementptr inbounds i32 addrspace(1)* %tmp1515, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1517 = load i32 addrspace(1)* %arrayidx1516 ; <i32> [#uses=1]
  %vecinit1518 = insertelement <4 x i32> %vecinit1514, i32 %tmp1517, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit1518, <4 x i32>* %.compoundliteral1502
  %tmp1519 = load <4 x i32>* %.compoundliteral1502 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp1519, <4 x i32>* %xmm_tree_0_3_3
  %tmp1520 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp1521 = load <4 x i32>* %xmm_query_element_3 ; <<4 x i32>> [#uses=1]
  %tmp1522 = load <4 x i32>* %xmm_tree_0_3_3      ; <<4 x i32>> [#uses=1]
  %cmp1523 = icmp sgt <4 x i32> %tmp1521, %tmp1522 ; <<4 x i1>> [#uses=1]
  %sext1524 = sext <4 x i1> %cmp1523 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul1525 = mul <4 x i32> %tmp1520, %sext1524    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul1525, <4 x i32>* %temp_index_v_3
  %tmp1526 = load <4 x i32>* %temp_index_v_3      ; <<4 x i32>> [#uses=1]
  %tmp1527 = extractelement <4 x i32> %tmp1526, i32 0 ; <i32> [#uses=1]
  %tmp1528 = load <4 x i32>* %temp_index_v_3      ; <<4 x i32>> [#uses=1]
  %tmp1529 = extractelement <4 x i32> %tmp1528, i32 1 ; <i32> [#uses=1]
  %add1530 = add nsw i32 %tmp1527, %tmp1529       ; <i32> [#uses=1]
  %tmp1531 = load <4 x i32>* %temp_index_v_3      ; <<4 x i32>> [#uses=1]
  %tmp1532 = extractelement <4 x i32> %tmp1531, i32 2 ; <i32> [#uses=1]
  %add1533 = add nsw i32 %add1530, %tmp1532       ; <i32> [#uses=1]
  store i32 %add1533, i32* %temp_index_3
  %tmp1534 = load i32* %delta_3                   ; <i32> [#uses=1]
  %shl1535 = shl i32 %tmp1534, 2                  ; <i32> [#uses=1]
  %tmp1536 = load i32* %temp_index_3              ; <i32> [#uses=1]
  %tmp1537 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1538 = getelementptr inbounds i32 addrspace(1)* %tmp1537, i32 %tmp1536 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1539 = load i32 addrspace(1)* %arrayidx1538 ; <i32> [#uses=1]
  %add1540 = add nsw i32 %shl1535, %tmp1539       ; <i32> [#uses=1]
  store i32 %add1540, i32* %offset3_3
  %tmp1541 = load i32* %offset2_3                 ; <i32> [#uses=1]
  %mul1542 = mul i32 %tmp1541, 16                 ; <i32> [#uses=1]
  %tmp1543 = load i32* %offset3_3                 ; <i32> [#uses=1]
  %add1544 = add nsw i32 %mul1542, %tmp1543       ; <i32> [#uses=1]
  store i32 %add1544, i32* %offset2_3
  %tmp1545 = load i32* %block_base_index_3        ; <i32> [#uses=1]
  %add1546 = add nsw i32 %tmp1545, 255            ; <i32> [#uses=1]
  %tmp1547 = load i32* %offset2_3                 ; <i32> [#uses=1]
  %mul1548 = mul i32 %tmp1547, 3                  ; <i32> [#uses=1]
  %add1549 = add nsw i32 %add1546, %mul1548       ; <i32> [#uses=1]
  store i32 %add1549, i32* %base_index_3
  %tmp1550 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp1551 = load i32* %base_index_3              ; <i32> [#uses=1]
  %add.ptr1552 = getelementptr inbounds i32 addrspace(1)* %tmp1550, i32 %tmp1551 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr1552, i32 16)
  store i32 0, i32* %offset3_3
  %tmp1553 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp1554 = load i32* %base_index_4              ; <i32> [#uses=1]
  %add.ptr1555 = getelementptr inbounds i32 addrspace(1)* %tmp1553, i32 %tmp1554 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr1555, i32 addrspace(1)** %addr_0_3_4
  %tmp1557 = load i32 addrspace(1)** %addr_0_3_4  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1558 = getelementptr inbounds i32 addrspace(1)* %tmp1557, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1559 = load i32 addrspace(1)* %arrayidx1558 ; <i32> [#uses=1]
  %vecinit1560 = insertelement <4 x i32> undef, i32 %tmp1559, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp1561 = load i32 addrspace(1)** %addr_0_3_4  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1562 = getelementptr inbounds i32 addrspace(1)* %tmp1561, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1563 = load i32 addrspace(1)* %arrayidx1562 ; <i32> [#uses=1]
  %vecinit1564 = insertelement <4 x i32> %vecinit1560, i32 %tmp1563, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp1565 = load i32 addrspace(1)** %addr_0_3_4  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1566 = getelementptr inbounds i32 addrspace(1)* %tmp1565, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1567 = load i32 addrspace(1)* %arrayidx1566 ; <i32> [#uses=1]
  %vecinit1568 = insertelement <4 x i32> %vecinit1564, i32 %tmp1567, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp1569 = load i32 addrspace(1)** %addr_0_3_4  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1570 = getelementptr inbounds i32 addrspace(1)* %tmp1569, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1571 = load i32 addrspace(1)* %arrayidx1570 ; <i32> [#uses=1]
  %vecinit1572 = insertelement <4 x i32> %vecinit1568, i32 %tmp1571, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit1572, <4 x i32>* %.compoundliteral1556
  %tmp1573 = load <4 x i32>* %.compoundliteral1556 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp1573, <4 x i32>* %xmm_tree_0_3_4
  %tmp1574 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp1575 = load <4 x i32>* %xmm_query_element_4 ; <<4 x i32>> [#uses=1]
  %tmp1576 = load <4 x i32>* %xmm_tree_0_3_4      ; <<4 x i32>> [#uses=1]
  %cmp1577 = icmp sgt <4 x i32> %tmp1575, %tmp1576 ; <<4 x i1>> [#uses=1]
  %sext1578 = sext <4 x i1> %cmp1577 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul1579 = mul <4 x i32> %tmp1574, %sext1578    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul1579, <4 x i32>* %temp_index_v_4
  %tmp1580 = load <4 x i32>* %temp_index_v_4      ; <<4 x i32>> [#uses=1]
  %tmp1581 = extractelement <4 x i32> %tmp1580, i32 0 ; <i32> [#uses=1]
  %tmp1582 = load <4 x i32>* %temp_index_v_4      ; <<4 x i32>> [#uses=1]
  %tmp1583 = extractelement <4 x i32> %tmp1582, i32 1 ; <i32> [#uses=1]
  %add1584 = add nsw i32 %tmp1581, %tmp1583       ; <i32> [#uses=1]
  %tmp1585 = load <4 x i32>* %temp_index_v_4      ; <<4 x i32>> [#uses=1]
  %tmp1586 = extractelement <4 x i32> %tmp1585, i32 2 ; <i32> [#uses=1]
  %add1587 = add nsw i32 %add1584, %tmp1586       ; <i32> [#uses=1]
  store i32 %add1587, i32* %temp_index_4
  %tmp1588 = load i32* %temp_index_4              ; <i32> [#uses=1]
  %tmp1589 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1590 = getelementptr inbounds i32 addrspace(1)* %tmp1589, i32 %tmp1588 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1591 = load i32 addrspace(1)* %arrayidx1590 ; <i32> [#uses=1]
  store i32 %tmp1591, i32* %delta_4
  %tmp1592 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp1593 = load i32* %base_index_4              ; <i32> [#uses=1]
  %add.ptr1594 = getelementptr inbounds i32 addrspace(1)* %tmp1592, i32 %tmp1593 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1595 = load i32* %temp_index_4              ; <i32> [#uses=1]
  %tmp1596 = load i32 addrspace(1)** %LookUp4.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1597 = getelementptr inbounds i32 addrspace(1)* %tmp1596, i32 %tmp1595 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1598 = load i32 addrspace(1)* %arrayidx1597 ; <i32> [#uses=1]
  %add.ptr1599 = getelementptr inbounds i32 addrspace(1)* %add.ptr1594, i32 %tmp1598 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr1599, i32 addrspace(1)** %addr_0_3_4
  %tmp1601 = load i32 addrspace(1)** %addr_0_3_4  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1602 = getelementptr inbounds i32 addrspace(1)* %tmp1601, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1603 = load i32 addrspace(1)* %arrayidx1602 ; <i32> [#uses=1]
  %vecinit1604 = insertelement <4 x i32> undef, i32 %tmp1603, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp1605 = load i32 addrspace(1)** %addr_0_3_4  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1606 = getelementptr inbounds i32 addrspace(1)* %tmp1605, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1607 = load i32 addrspace(1)* %arrayidx1606 ; <i32> [#uses=1]
  %vecinit1608 = insertelement <4 x i32> %vecinit1604, i32 %tmp1607, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp1609 = load i32 addrspace(1)** %addr_0_3_4  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1610 = getelementptr inbounds i32 addrspace(1)* %tmp1609, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1611 = load i32 addrspace(1)* %arrayidx1610 ; <i32> [#uses=1]
  %vecinit1612 = insertelement <4 x i32> %vecinit1608, i32 %tmp1611, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp1613 = load i32 addrspace(1)** %addr_0_3_4  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1614 = getelementptr inbounds i32 addrspace(1)* %tmp1613, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1615 = load i32 addrspace(1)* %arrayidx1614 ; <i32> [#uses=1]
  %vecinit1616 = insertelement <4 x i32> %vecinit1612, i32 %tmp1615, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit1616, <4 x i32>* %.compoundliteral1600
  %tmp1617 = load <4 x i32>* %.compoundliteral1600 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp1617, <4 x i32>* %xmm_tree_0_3_4
  %tmp1618 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp1619 = load <4 x i32>* %xmm_query_element_4 ; <<4 x i32>> [#uses=1]
  %tmp1620 = load <4 x i32>* %xmm_tree_0_3_4      ; <<4 x i32>> [#uses=1]
  %cmp1621 = icmp sgt <4 x i32> %tmp1619, %tmp1620 ; <<4 x i1>> [#uses=1]
  %sext1622 = sext <4 x i1> %cmp1621 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul1623 = mul <4 x i32> %tmp1618, %sext1622    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul1623, <4 x i32>* %temp_index_v_4
  %tmp1624 = load <4 x i32>* %temp_index_v_4      ; <<4 x i32>> [#uses=1]
  %tmp1625 = extractelement <4 x i32> %tmp1624, i32 0 ; <i32> [#uses=1]
  %tmp1626 = load <4 x i32>* %temp_index_v_4      ; <<4 x i32>> [#uses=1]
  %tmp1627 = extractelement <4 x i32> %tmp1626, i32 1 ; <i32> [#uses=1]
  %add1628 = add nsw i32 %tmp1625, %tmp1627       ; <i32> [#uses=1]
  %tmp1629 = load <4 x i32>* %temp_index_v_4      ; <<4 x i32>> [#uses=1]
  %tmp1630 = extractelement <4 x i32> %tmp1629, i32 2 ; <i32> [#uses=1]
  %add1631 = add nsw i32 %add1628, %tmp1630       ; <i32> [#uses=1]
  store i32 %add1631, i32* %temp_index_4
  %tmp1632 = load i32* %delta_4                   ; <i32> [#uses=1]
  %shl1633 = shl i32 %tmp1632, 2                  ; <i32> [#uses=1]
  %tmp1634 = load i32* %temp_index_4              ; <i32> [#uses=1]
  %tmp1635 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1636 = getelementptr inbounds i32 addrspace(1)* %tmp1635, i32 %tmp1634 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1637 = load i32 addrspace(1)* %arrayidx1636 ; <i32> [#uses=1]
  %add1638 = add nsw i32 %shl1633, %tmp1637       ; <i32> [#uses=1]
  store i32 %add1638, i32* %offset3_4
  %tmp1639 = load i32* %offset2_4                 ; <i32> [#uses=1]
  %mul1640 = mul i32 %tmp1639, 16                 ; <i32> [#uses=1]
  %tmp1641 = load i32* %offset3_4                 ; <i32> [#uses=1]
  %add1642 = add nsw i32 %mul1640, %tmp1641       ; <i32> [#uses=1]
  store i32 %add1642, i32* %offset2_4
  %tmp1643 = load i32* %block_base_index_4        ; <i32> [#uses=1]
  %add1644 = add nsw i32 %tmp1643, 255            ; <i32> [#uses=1]
  %tmp1645 = load i32* %offset2_4                 ; <i32> [#uses=1]
  %mul1646 = mul i32 %tmp1645, 3                  ; <i32> [#uses=1]
  %add1647 = add nsw i32 %add1644, %mul1646       ; <i32> [#uses=1]
  store i32 %add1647, i32* %base_index_4
  %tmp1648 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp1649 = load i32* %base_index_4              ; <i32> [#uses=1]
  %add.ptr1650 = getelementptr inbounds i32 addrspace(1)* %tmp1648, i32 %tmp1649 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr1650, i32 16)
  store i32 0, i32* %offset3_4
  %tmp1651 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp1652 = load i32* %base_index_5              ; <i32> [#uses=1]
  %add.ptr1653 = getelementptr inbounds i32 addrspace(1)* %tmp1651, i32 %tmp1652 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr1653, i32 addrspace(1)** %addr_0_3_5
  %tmp1655 = load i32 addrspace(1)** %addr_0_3_5  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1656 = getelementptr inbounds i32 addrspace(1)* %tmp1655, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1657 = load i32 addrspace(1)* %arrayidx1656 ; <i32> [#uses=1]
  %vecinit1658 = insertelement <4 x i32> undef, i32 %tmp1657, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp1659 = load i32 addrspace(1)** %addr_0_3_5  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1660 = getelementptr inbounds i32 addrspace(1)* %tmp1659, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1661 = load i32 addrspace(1)* %arrayidx1660 ; <i32> [#uses=1]
  %vecinit1662 = insertelement <4 x i32> %vecinit1658, i32 %tmp1661, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp1663 = load i32 addrspace(1)** %addr_0_3_5  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1664 = getelementptr inbounds i32 addrspace(1)* %tmp1663, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1665 = load i32 addrspace(1)* %arrayidx1664 ; <i32> [#uses=1]
  %vecinit1666 = insertelement <4 x i32> %vecinit1662, i32 %tmp1665, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp1667 = load i32 addrspace(1)** %addr_0_3_5  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1668 = getelementptr inbounds i32 addrspace(1)* %tmp1667, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1669 = load i32 addrspace(1)* %arrayidx1668 ; <i32> [#uses=1]
  %vecinit1670 = insertelement <4 x i32> %vecinit1666, i32 %tmp1669, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit1670, <4 x i32>* %.compoundliteral1654
  %tmp1671 = load <4 x i32>* %.compoundliteral1654 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp1671, <4 x i32>* %xmm_tree_0_3_5
  %tmp1672 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp1673 = load <4 x i32>* %xmm_query_element_5 ; <<4 x i32>> [#uses=1]
  %tmp1674 = load <4 x i32>* %xmm_tree_0_3_5      ; <<4 x i32>> [#uses=1]
  %cmp1675 = icmp sgt <4 x i32> %tmp1673, %tmp1674 ; <<4 x i1>> [#uses=1]
  %sext1676 = sext <4 x i1> %cmp1675 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul1677 = mul <4 x i32> %tmp1672, %sext1676    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul1677, <4 x i32>* %temp_index_v_5
  %tmp1678 = load <4 x i32>* %temp_index_v_5      ; <<4 x i32>> [#uses=1]
  %tmp1679 = extractelement <4 x i32> %tmp1678, i32 0 ; <i32> [#uses=1]
  %tmp1680 = load <4 x i32>* %temp_index_v_5      ; <<4 x i32>> [#uses=1]
  %tmp1681 = extractelement <4 x i32> %tmp1680, i32 1 ; <i32> [#uses=1]
  %add1682 = add nsw i32 %tmp1679, %tmp1681       ; <i32> [#uses=1]
  %tmp1683 = load <4 x i32>* %temp_index_v_5      ; <<4 x i32>> [#uses=1]
  %tmp1684 = extractelement <4 x i32> %tmp1683, i32 2 ; <i32> [#uses=1]
  %add1685 = add nsw i32 %add1682, %tmp1684       ; <i32> [#uses=1]
  store i32 %add1685, i32* %temp_index_5
  %tmp1686 = load i32* %temp_index_5              ; <i32> [#uses=1]
  %tmp1687 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1688 = getelementptr inbounds i32 addrspace(1)* %tmp1687, i32 %tmp1686 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1689 = load i32 addrspace(1)* %arrayidx1688 ; <i32> [#uses=1]
  store i32 %tmp1689, i32* %delta_5
  %tmp1690 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp1691 = load i32* %base_index_5              ; <i32> [#uses=1]
  %add.ptr1692 = getelementptr inbounds i32 addrspace(1)* %tmp1690, i32 %tmp1691 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1693 = load i32* %temp_index_5              ; <i32> [#uses=1]
  %tmp1694 = load i32 addrspace(1)** %LookUp4.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1695 = getelementptr inbounds i32 addrspace(1)* %tmp1694, i32 %tmp1693 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1696 = load i32 addrspace(1)* %arrayidx1695 ; <i32> [#uses=1]
  %add.ptr1697 = getelementptr inbounds i32 addrspace(1)* %add.ptr1692, i32 %tmp1696 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr1697, i32 addrspace(1)** %addr_0_3_5
  %tmp1699 = load i32 addrspace(1)** %addr_0_3_5  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1700 = getelementptr inbounds i32 addrspace(1)* %tmp1699, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1701 = load i32 addrspace(1)* %arrayidx1700 ; <i32> [#uses=1]
  %vecinit1702 = insertelement <4 x i32> undef, i32 %tmp1701, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp1703 = load i32 addrspace(1)** %addr_0_3_5  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1704 = getelementptr inbounds i32 addrspace(1)* %tmp1703, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1705 = load i32 addrspace(1)* %arrayidx1704 ; <i32> [#uses=1]
  %vecinit1706 = insertelement <4 x i32> %vecinit1702, i32 %tmp1705, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp1707 = load i32 addrspace(1)** %addr_0_3_5  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1708 = getelementptr inbounds i32 addrspace(1)* %tmp1707, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1709 = load i32 addrspace(1)* %arrayidx1708 ; <i32> [#uses=1]
  %vecinit1710 = insertelement <4 x i32> %vecinit1706, i32 %tmp1709, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp1711 = load i32 addrspace(1)** %addr_0_3_5  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1712 = getelementptr inbounds i32 addrspace(1)* %tmp1711, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1713 = load i32 addrspace(1)* %arrayidx1712 ; <i32> [#uses=1]
  %vecinit1714 = insertelement <4 x i32> %vecinit1710, i32 %tmp1713, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit1714, <4 x i32>* %.compoundliteral1698
  %tmp1715 = load <4 x i32>* %.compoundliteral1698 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp1715, <4 x i32>* %xmm_tree_0_3_5
  %tmp1716 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp1717 = load <4 x i32>* %xmm_query_element_5 ; <<4 x i32>> [#uses=1]
  %tmp1718 = load <4 x i32>* %xmm_tree_0_3_5      ; <<4 x i32>> [#uses=1]
  %cmp1719 = icmp sgt <4 x i32> %tmp1717, %tmp1718 ; <<4 x i1>> [#uses=1]
  %sext1720 = sext <4 x i1> %cmp1719 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul1721 = mul <4 x i32> %tmp1716, %sext1720    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul1721, <4 x i32>* %temp_index_v_5
  %tmp1722 = load <4 x i32>* %temp_index_v_5      ; <<4 x i32>> [#uses=1]
  %tmp1723 = extractelement <4 x i32> %tmp1722, i32 0 ; <i32> [#uses=1]
  %tmp1724 = load <4 x i32>* %temp_index_v_5      ; <<4 x i32>> [#uses=1]
  %tmp1725 = extractelement <4 x i32> %tmp1724, i32 1 ; <i32> [#uses=1]
  %add1726 = add nsw i32 %tmp1723, %tmp1725       ; <i32> [#uses=1]
  %tmp1727 = load <4 x i32>* %temp_index_v_5      ; <<4 x i32>> [#uses=1]
  %tmp1728 = extractelement <4 x i32> %tmp1727, i32 2 ; <i32> [#uses=1]
  %add1729 = add nsw i32 %add1726, %tmp1728       ; <i32> [#uses=1]
  store i32 %add1729, i32* %temp_index_5
  %tmp1730 = load i32* %delta_5                   ; <i32> [#uses=1]
  %shl1731 = shl i32 %tmp1730, 2                  ; <i32> [#uses=1]
  %tmp1732 = load i32* %temp_index_5              ; <i32> [#uses=1]
  %tmp1733 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1734 = getelementptr inbounds i32 addrspace(1)* %tmp1733, i32 %tmp1732 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1735 = load i32 addrspace(1)* %arrayidx1734 ; <i32> [#uses=1]
  %add1736 = add nsw i32 %shl1731, %tmp1735       ; <i32> [#uses=1]
  store i32 %add1736, i32* %offset3_5
  %tmp1737 = load i32* %offset2_5                 ; <i32> [#uses=1]
  %mul1738 = mul i32 %tmp1737, 16                 ; <i32> [#uses=1]
  %tmp1739 = load i32* %offset3_5                 ; <i32> [#uses=1]
  %add1740 = add nsw i32 %mul1738, %tmp1739       ; <i32> [#uses=1]
  store i32 %add1740, i32* %offset2_5
  %tmp1741 = load i32* %block_base_index_5        ; <i32> [#uses=1]
  %add1742 = add nsw i32 %tmp1741, 255            ; <i32> [#uses=1]
  %tmp1743 = load i32* %offset2_5                 ; <i32> [#uses=1]
  %mul1744 = mul i32 %tmp1743, 3                  ; <i32> [#uses=1]
  %add1745 = add nsw i32 %add1742, %mul1744       ; <i32> [#uses=1]
  store i32 %add1745, i32* %base_index_5
  %tmp1746 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp1747 = load i32* %base_index_5              ; <i32> [#uses=1]
  %add.ptr1748 = getelementptr inbounds i32 addrspace(1)* %tmp1746, i32 %tmp1747 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr1748, i32 16)
  store i32 0, i32* %offset3_5
  %tmp1749 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp1750 = load i32* %base_index_6              ; <i32> [#uses=1]
  %add.ptr1751 = getelementptr inbounds i32 addrspace(1)* %tmp1749, i32 %tmp1750 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr1751, i32 addrspace(1)** %addr_0_3_6
  %tmp1753 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1754 = getelementptr inbounds i32 addrspace(1)* %tmp1753, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1755 = load i32 addrspace(1)* %arrayidx1754 ; <i32> [#uses=1]
  %vecinit1756 = insertelement <4 x i32> undef, i32 %tmp1755, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp1757 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1758 = getelementptr inbounds i32 addrspace(1)* %tmp1757, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1759 = load i32 addrspace(1)* %arrayidx1758 ; <i32> [#uses=1]
  %vecinit1760 = insertelement <4 x i32> %vecinit1756, i32 %tmp1759, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp1761 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1762 = getelementptr inbounds i32 addrspace(1)* %tmp1761, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1763 = load i32 addrspace(1)* %arrayidx1762 ; <i32> [#uses=1]
  %vecinit1764 = insertelement <4 x i32> %vecinit1760, i32 %tmp1763, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp1765 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1766 = getelementptr inbounds i32 addrspace(1)* %tmp1765, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1767 = load i32 addrspace(1)* %arrayidx1766 ; <i32> [#uses=1]
  %vecinit1768 = insertelement <4 x i32> %vecinit1764, i32 %tmp1767, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit1768, <4 x i32>* %.compoundliteral1752
  %tmp1769 = load <4 x i32>* %.compoundliteral1752 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp1769, <4 x i32>* %xmm_tree_0_3_6
  %tmp1770 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp1771 = load <4 x i32>* %xmm_query_element_6 ; <<4 x i32>> [#uses=1]
  %tmp1772 = load <4 x i32>* %xmm_tree_0_3_6      ; <<4 x i32>> [#uses=1]
  %cmp1773 = icmp sgt <4 x i32> %tmp1771, %tmp1772 ; <<4 x i1>> [#uses=1]
  %sext1774 = sext <4 x i1> %cmp1773 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul1775 = mul <4 x i32> %tmp1770, %sext1774    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul1775, <4 x i32>* %temp_index_v_6
  %tmp1776 = load <4 x i32>* %temp_index_v_6      ; <<4 x i32>> [#uses=1]
  %tmp1777 = extractelement <4 x i32> %tmp1776, i32 0 ; <i32> [#uses=1]
  %tmp1778 = load <4 x i32>* %temp_index_v_6      ; <<4 x i32>> [#uses=1]
  %tmp1779 = extractelement <4 x i32> %tmp1778, i32 1 ; <i32> [#uses=1]
  %add1780 = add nsw i32 %tmp1777, %tmp1779       ; <i32> [#uses=1]
  %tmp1781 = load <4 x i32>* %temp_index_v_6      ; <<4 x i32>> [#uses=1]
  %tmp1782 = extractelement <4 x i32> %tmp1781, i32 2 ; <i32> [#uses=1]
  %add1783 = add nsw i32 %add1780, %tmp1782       ; <i32> [#uses=1]
  store i32 %add1783, i32* %temp_index_6
  %tmp1784 = load i32* %temp_index_6              ; <i32> [#uses=1]
  %tmp1785 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1786 = getelementptr inbounds i32 addrspace(1)* %tmp1785, i32 %tmp1784 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1787 = load i32 addrspace(1)* %arrayidx1786 ; <i32> [#uses=1]
  store i32 %tmp1787, i32* %delta_6
  %tmp1788 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp1789 = load i32* %base_index_6              ; <i32> [#uses=1]
  %add.ptr1790 = getelementptr inbounds i32 addrspace(1)* %tmp1788, i32 %tmp1789 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1791 = load i32* %temp_index_6              ; <i32> [#uses=1]
  %tmp1792 = load i32 addrspace(1)** %LookUp4.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1793 = getelementptr inbounds i32 addrspace(1)* %tmp1792, i32 %tmp1791 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1794 = load i32 addrspace(1)* %arrayidx1793 ; <i32> [#uses=1]
  %add.ptr1795 = getelementptr inbounds i32 addrspace(1)* %add.ptr1790, i32 %tmp1794 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr1795, i32 addrspace(1)** %addr_0_3_6
  %tmp1797 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1798 = getelementptr inbounds i32 addrspace(1)* %tmp1797, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1799 = load i32 addrspace(1)* %arrayidx1798 ; <i32> [#uses=1]
  %vecinit1800 = insertelement <4 x i32> undef, i32 %tmp1799, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp1801 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1802 = getelementptr inbounds i32 addrspace(1)* %tmp1801, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1803 = load i32 addrspace(1)* %arrayidx1802 ; <i32> [#uses=1]
  %vecinit1804 = insertelement <4 x i32> %vecinit1800, i32 %tmp1803, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp1805 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1806 = getelementptr inbounds i32 addrspace(1)* %tmp1805, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1807 = load i32 addrspace(1)* %arrayidx1806 ; <i32> [#uses=1]
  %vecinit1808 = insertelement <4 x i32> %vecinit1804, i32 %tmp1807, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp1809 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1810 = getelementptr inbounds i32 addrspace(1)* %tmp1809, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1811 = load i32 addrspace(1)* %arrayidx1810 ; <i32> [#uses=1]
  %vecinit1812 = insertelement <4 x i32> %vecinit1808, i32 %tmp1811, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit1812, <4 x i32>* %.compoundliteral1796
  %tmp1813 = load <4 x i32>* %.compoundliteral1796 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp1813, <4 x i32>* %xmm_tree_0_3_6
  %tmp1814 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp1815 = load <4 x i32>* %xmm_query_element_6 ; <<4 x i32>> [#uses=1]
  %tmp1816 = load <4 x i32>* %xmm_tree_0_3_6      ; <<4 x i32>> [#uses=1]
  %cmp1817 = icmp sgt <4 x i32> %tmp1815, %tmp1816 ; <<4 x i1>> [#uses=1]
  %sext1818 = sext <4 x i1> %cmp1817 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul1819 = mul <4 x i32> %tmp1814, %sext1818    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul1819, <4 x i32>* %temp_index_v_6
  %tmp1820 = load <4 x i32>* %temp_index_v_6      ; <<4 x i32>> [#uses=1]
  %tmp1821 = extractelement <4 x i32> %tmp1820, i32 0 ; <i32> [#uses=1]
  %tmp1822 = load <4 x i32>* %temp_index_v_6      ; <<4 x i32>> [#uses=1]
  %tmp1823 = extractelement <4 x i32> %tmp1822, i32 1 ; <i32> [#uses=1]
  %add1824 = add nsw i32 %tmp1821, %tmp1823       ; <i32> [#uses=1]
  %tmp1825 = load <4 x i32>* %temp_index_v_6      ; <<4 x i32>> [#uses=1]
  %tmp1826 = extractelement <4 x i32> %tmp1825, i32 2 ; <i32> [#uses=1]
  %add1827 = add nsw i32 %add1824, %tmp1826       ; <i32> [#uses=1]
  store i32 %add1827, i32* %temp_index_6
  %tmp1828 = load i32* %delta_6                   ; <i32> [#uses=1]
  %shl1829 = shl i32 %tmp1828, 2                  ; <i32> [#uses=1]
  %tmp1830 = load i32* %temp_index_6              ; <i32> [#uses=1]
  %tmp1831 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1832 = getelementptr inbounds i32 addrspace(1)* %tmp1831, i32 %tmp1830 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1833 = load i32 addrspace(1)* %arrayidx1832 ; <i32> [#uses=1]
  %add1834 = add nsw i32 %shl1829, %tmp1833       ; <i32> [#uses=1]
  store i32 %add1834, i32* %offset3_6
  %tmp1835 = load i32* %offset2_6                 ; <i32> [#uses=1]
  %mul1836 = mul i32 %tmp1835, 16                 ; <i32> [#uses=1]
  %tmp1837 = load i32* %offset3_6                 ; <i32> [#uses=1]
  %add1838 = add nsw i32 %mul1836, %tmp1837       ; <i32> [#uses=1]
  store i32 %add1838, i32* %offset2_6
  %tmp1839 = load i32* %block_base_index_6        ; <i32> [#uses=1]
  %add1840 = add nsw i32 %tmp1839, 255            ; <i32> [#uses=1]
  %tmp1841 = load i32* %offset2_6                 ; <i32> [#uses=1]
  %mul1842 = mul i32 %tmp1841, 3                  ; <i32> [#uses=1]
  %add1843 = add nsw i32 %add1840, %mul1842       ; <i32> [#uses=1]
  store i32 %add1843, i32* %base_index_6
  %tmp1844 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp1845 = load i32* %base_index_6              ; <i32> [#uses=1]
  %add.ptr1846 = getelementptr inbounds i32 addrspace(1)* %tmp1844, i32 %tmp1845 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr1846, i32 16)
  store i32 0, i32* %offset3_6
  %tmp1847 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp1848 = load i32* %base_index_7              ; <i32> [#uses=1]
  %add.ptr1849 = getelementptr inbounds i32 addrspace(1)* %tmp1847, i32 %tmp1848 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr1849, i32 addrspace(1)** %addr_0_3_7
  %tmp1851 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1852 = getelementptr inbounds i32 addrspace(1)* %tmp1851, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1853 = load i32 addrspace(1)* %arrayidx1852 ; <i32> [#uses=1]
  %vecinit1854 = insertelement <4 x i32> undef, i32 %tmp1853, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp1855 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1856 = getelementptr inbounds i32 addrspace(1)* %tmp1855, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1857 = load i32 addrspace(1)* %arrayidx1856 ; <i32> [#uses=1]
  %vecinit1858 = insertelement <4 x i32> %vecinit1854, i32 %tmp1857, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp1859 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1860 = getelementptr inbounds i32 addrspace(1)* %tmp1859, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1861 = load i32 addrspace(1)* %arrayidx1860 ; <i32> [#uses=1]
  %vecinit1862 = insertelement <4 x i32> %vecinit1858, i32 %tmp1861, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp1863 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1864 = getelementptr inbounds i32 addrspace(1)* %tmp1863, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1865 = load i32 addrspace(1)* %arrayidx1864 ; <i32> [#uses=1]
  %vecinit1866 = insertelement <4 x i32> %vecinit1862, i32 %tmp1865, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit1866, <4 x i32>* %.compoundliteral1850
  %tmp1867 = load <4 x i32>* %.compoundliteral1850 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp1867, <4 x i32>* %xmm_tree_0_3_7
  %tmp1868 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp1869 = load <4 x i32>* %xmm_query_element_7 ; <<4 x i32>> [#uses=1]
  %tmp1870 = load <4 x i32>* %xmm_tree_0_3_7      ; <<4 x i32>> [#uses=1]
  %cmp1871 = icmp sgt <4 x i32> %tmp1869, %tmp1870 ; <<4 x i1>> [#uses=1]
  %sext1872 = sext <4 x i1> %cmp1871 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul1873 = mul <4 x i32> %tmp1868, %sext1872    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul1873, <4 x i32>* %temp_index_v_7
  %tmp1874 = load <4 x i32>* %temp_index_v_7      ; <<4 x i32>> [#uses=1]
  %tmp1875 = extractelement <4 x i32> %tmp1874, i32 0 ; <i32> [#uses=1]
  %tmp1876 = load <4 x i32>* %temp_index_v_7      ; <<4 x i32>> [#uses=1]
  %tmp1877 = extractelement <4 x i32> %tmp1876, i32 1 ; <i32> [#uses=1]
  %add1878 = add nsw i32 %tmp1875, %tmp1877       ; <i32> [#uses=1]
  %tmp1879 = load <4 x i32>* %temp_index_v_7      ; <<4 x i32>> [#uses=1]
  %tmp1880 = extractelement <4 x i32> %tmp1879, i32 2 ; <i32> [#uses=1]
  %add1881 = add nsw i32 %add1878, %tmp1880       ; <i32> [#uses=1]
  store i32 %add1881, i32* %temp_index_7
  %tmp1882 = load i32* %temp_index_7              ; <i32> [#uses=1]
  %tmp1883 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1884 = getelementptr inbounds i32 addrspace(1)* %tmp1883, i32 %tmp1882 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1885 = load i32 addrspace(1)* %arrayidx1884 ; <i32> [#uses=1]
  store i32 %tmp1885, i32* %delta_7
  %tmp1886 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp1887 = load i32* %base_index_7              ; <i32> [#uses=1]
  %add.ptr1888 = getelementptr inbounds i32 addrspace(1)* %tmp1886, i32 %tmp1887 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1889 = load i32* %temp_index_7              ; <i32> [#uses=1]
  %tmp1890 = load i32 addrspace(1)** %LookUp4.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1891 = getelementptr inbounds i32 addrspace(1)* %tmp1890, i32 %tmp1889 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1892 = load i32 addrspace(1)* %arrayidx1891 ; <i32> [#uses=1]
  %add.ptr1893 = getelementptr inbounds i32 addrspace(1)* %add.ptr1888, i32 %tmp1892 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr1893, i32 addrspace(1)** %addr_0_3_7
  %tmp1895 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1896 = getelementptr inbounds i32 addrspace(1)* %tmp1895, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1897 = load i32 addrspace(1)* %arrayidx1896 ; <i32> [#uses=1]
  %vecinit1898 = insertelement <4 x i32> undef, i32 %tmp1897, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp1899 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1900 = getelementptr inbounds i32 addrspace(1)* %tmp1899, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1901 = load i32 addrspace(1)* %arrayidx1900 ; <i32> [#uses=1]
  %vecinit1902 = insertelement <4 x i32> %vecinit1898, i32 %tmp1901, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp1903 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1904 = getelementptr inbounds i32 addrspace(1)* %tmp1903, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1905 = load i32 addrspace(1)* %arrayidx1904 ; <i32> [#uses=1]
  %vecinit1906 = insertelement <4 x i32> %vecinit1902, i32 %tmp1905, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp1907 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1908 = getelementptr inbounds i32 addrspace(1)* %tmp1907, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1909 = load i32 addrspace(1)* %arrayidx1908 ; <i32> [#uses=1]
  %vecinit1910 = insertelement <4 x i32> %vecinit1906, i32 %tmp1909, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit1910, <4 x i32>* %.compoundliteral1894
  %tmp1911 = load <4 x i32>* %.compoundliteral1894 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp1911, <4 x i32>* %xmm_tree_0_3_7
  %tmp1912 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp1913 = load <4 x i32>* %xmm_query_element_7 ; <<4 x i32>> [#uses=1]
  %tmp1914 = load <4 x i32>* %xmm_tree_0_3_7      ; <<4 x i32>> [#uses=1]
  %cmp1915 = icmp sgt <4 x i32> %tmp1913, %tmp1914 ; <<4 x i1>> [#uses=1]
  %sext1916 = sext <4 x i1> %cmp1915 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul1917 = mul <4 x i32> %tmp1912, %sext1916    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul1917, <4 x i32>* %temp_index_v_7
  %tmp1918 = load <4 x i32>* %temp_index_v_7      ; <<4 x i32>> [#uses=1]
  %tmp1919 = extractelement <4 x i32> %tmp1918, i32 0 ; <i32> [#uses=1]
  %tmp1920 = load <4 x i32>* %temp_index_v_7      ; <<4 x i32>> [#uses=1]
  %tmp1921 = extractelement <4 x i32> %tmp1920, i32 1 ; <i32> [#uses=1]
  %add1922 = add nsw i32 %tmp1919, %tmp1921       ; <i32> [#uses=1]
  %tmp1923 = load <4 x i32>* %temp_index_v_7      ; <<4 x i32>> [#uses=1]
  %tmp1924 = extractelement <4 x i32> %tmp1923, i32 2 ; <i32> [#uses=1]
  %add1925 = add nsw i32 %add1922, %tmp1924       ; <i32> [#uses=1]
  store i32 %add1925, i32* %temp_index_7
  %tmp1926 = load i32* %delta_7                   ; <i32> [#uses=1]
  %shl1927 = shl i32 %tmp1926, 2                  ; <i32> [#uses=1]
  %tmp1928 = load i32* %temp_index_7              ; <i32> [#uses=1]
  %tmp1929 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1930 = getelementptr inbounds i32 addrspace(1)* %tmp1929, i32 %tmp1928 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1931 = load i32 addrspace(1)* %arrayidx1930 ; <i32> [#uses=1]
  %add1932 = add nsw i32 %shl1927, %tmp1931       ; <i32> [#uses=1]
  store i32 %add1932, i32* %offset3_7
  %tmp1933 = load i32* %offset2_7                 ; <i32> [#uses=1]
  %mul1934 = mul i32 %tmp1933, 16                 ; <i32> [#uses=1]
  %tmp1935 = load i32* %offset3_7                 ; <i32> [#uses=1]
  %add1936 = add nsw i32 %mul1934, %tmp1935       ; <i32> [#uses=1]
  store i32 %add1936, i32* %offset2_7
  %tmp1937 = load i32* %block_base_index_7        ; <i32> [#uses=1]
  %add1938 = add nsw i32 %tmp1937, 255            ; <i32> [#uses=1]
  %tmp1939 = load i32* %offset2_7                 ; <i32> [#uses=1]
  %mul1940 = mul i32 %tmp1939, 3                  ; <i32> [#uses=1]
  %add1941 = add nsw i32 %add1938, %mul1940       ; <i32> [#uses=1]
  store i32 %add1941, i32* %base_index_7
  %tmp1942 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp1943 = load i32* %base_index_7              ; <i32> [#uses=1]
  %add.ptr1944 = getelementptr inbounds i32 addrspace(1)* %tmp1942, i32 %tmp1943 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr1944, i32 16)
  store i32 0, i32* %offset3_7
  store i32 0, i32* %delta_0
  %tmp1945 = load i32* %base_index_0              ; <i32> [#uses=1]
  %add1946 = add nsw i32 %tmp1945, 0              ; <i32> [#uses=1]
  %tmp1947 = load i32* %offset3_0                 ; <i32> [#uses=1]
  %mul1948 = mul i32 %tmp1947, 3                  ; <i32> [#uses=1]
  %add1949 = add nsw i32 %add1946, %mul1948       ; <i32> [#uses=1]
  store i32 %add1949, i32* %base_index2_0
  %tmp1950 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp1951 = load i32* %base_index2_0             ; <i32> [#uses=1]
  %add.ptr1952 = getelementptr inbounds i32 addrspace(1)* %tmp1950, i32 %tmp1951 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr1952, i32 addrspace(1)** %addr_0_3_0
  %tmp1954 = load i32 addrspace(1)** %addr_0_3_0  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1955 = getelementptr inbounds i32 addrspace(1)* %tmp1954, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1956 = load i32 addrspace(1)* %arrayidx1955 ; <i32> [#uses=1]
  %vecinit1957 = insertelement <4 x i32> undef, i32 %tmp1956, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp1958 = load i32 addrspace(1)** %addr_0_3_0  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1959 = getelementptr inbounds i32 addrspace(1)* %tmp1958, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1960 = load i32 addrspace(1)* %arrayidx1959 ; <i32> [#uses=1]
  %vecinit1961 = insertelement <4 x i32> %vecinit1957, i32 %tmp1960, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp1962 = load i32 addrspace(1)** %addr_0_3_0  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1963 = getelementptr inbounds i32 addrspace(1)* %tmp1962, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1964 = load i32 addrspace(1)* %arrayidx1963 ; <i32> [#uses=1]
  %vecinit1965 = insertelement <4 x i32> %vecinit1961, i32 %tmp1964, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp1966 = load i32 addrspace(1)** %addr_0_3_0  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1967 = getelementptr inbounds i32 addrspace(1)* %tmp1966, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1968 = load i32 addrspace(1)* %arrayidx1967 ; <i32> [#uses=1]
  %vecinit1969 = insertelement <4 x i32> %vecinit1965, i32 %tmp1968, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit1969, <4 x i32>* %.compoundliteral1953
  %tmp1970 = load <4 x i32>* %.compoundliteral1953 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp1970, <4 x i32>* %xmm_tree_0_3_0
  %tmp1971 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp1972 = load <4 x i32>* %xmm_query_element_0 ; <<4 x i32>> [#uses=1]
  %tmp1973 = load <4 x i32>* %xmm_tree_0_3_0      ; <<4 x i32>> [#uses=1]
  %cmp1974 = icmp sgt <4 x i32> %tmp1972, %tmp1973 ; <<4 x i1>> [#uses=1]
  %sext1975 = sext <4 x i1> %cmp1974 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul1976 = mul <4 x i32> %tmp1971, %sext1975    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul1976, <4 x i32>* %temp_index_v_0
  %tmp1977 = load <4 x i32>* %temp_index_v_0      ; <<4 x i32>> [#uses=1]
  %tmp1978 = extractelement <4 x i32> %tmp1977, i32 0 ; <i32> [#uses=1]
  %tmp1979 = load <4 x i32>* %temp_index_v_0      ; <<4 x i32>> [#uses=1]
  %tmp1980 = extractelement <4 x i32> %tmp1979, i32 1 ; <i32> [#uses=1]
  %add1981 = add nsw i32 %tmp1978, %tmp1980       ; <i32> [#uses=1]
  %tmp1982 = load <4 x i32>* %temp_index_v_0      ; <<4 x i32>> [#uses=1]
  %tmp1983 = extractelement <4 x i32> %tmp1982, i32 2 ; <i32> [#uses=1]
  %add1984 = add nsw i32 %add1981, %tmp1983       ; <i32> [#uses=1]
  store i32 %add1984, i32* %temp_index_0
  %tmp1985 = load i32* %temp_index_0              ; <i32> [#uses=1]
  %tmp1986 = load i32 addrspace(1)** %LookUp2.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx1987 = getelementptr inbounds i32 addrspace(1)* %tmp1986, i32 %tmp1985 ; <i32 addrspace(1)*> [#uses=1]
  %tmp1988 = load i32 addrspace(1)* %arrayidx1987 ; <i32> [#uses=1]
  store i32 %tmp1988, i32* %delta_0
  %tmp1989 = load i32* %offset3_0                 ; <i32> [#uses=1]
  %mul1990 = mul i32 %tmp1989, 4                  ; <i32> [#uses=1]
  %tmp1991 = load i32* %delta_0                   ; <i32> [#uses=1]
  %sub = sub i32 %tmp1991, 3                      ; <i32> [#uses=1]
  %add1992 = add nsw i32 %mul1990, %sub           ; <i32> [#uses=1]
  store i32 %add1992, i32* %offset3_0
  %tmp1993 = load i32* %offset2_0                 ; <i32> [#uses=1]
  %mul1994 = mul i32 %tmp1993, 4                  ; <i32> [#uses=1]
  %tmp1995 = load i32* %offset3_0                 ; <i32> [#uses=1]
  %add1996 = add nsw i32 %mul1994, %tmp1995       ; <i32> [#uses=1]
  store i32 %add1996, i32* %offset2_0
  %tmp1997 = load i32* %offset1_0                 ; <i32> [#uses=1]
  %mul1998 = mul i32 %tmp1997, 1024               ; <i32> [#uses=1]
  %tmp1999 = load i32* %offset2_0                 ; <i32> [#uses=1]
  %add2000 = add nsw i32 %mul1998, %tmp1999       ; <i32> [#uses=1]
  store i32 %add2000, i32* %offset1_0
  store i32 0, i32* %offset2_0
  %tmp2001 = load i32* %offset1_0                 ; <i32> [#uses=1]
  %mul2002 = mul i32 %tmp2001, 1024               ; <i32> [#uses=1]
  %add2003 = add nsw i32 1024, %mul2002           ; <i32> [#uses=1]
  store i32 %add2003, i32* %block_base_index_0
  %tmp2004 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp2005 = load i32* %block_base_index_0        ; <i32> [#uses=1]
  %add.ptr2006 = getelementptr inbounds i32 addrspace(1)* %tmp2004, i32 %tmp2005 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr2006, i32 16)
  %tmp2007 = load i32* %block_base_index_0        ; <i32> [#uses=1]
  %add2008 = add nsw i32 %tmp2007, 0              ; <i32> [#uses=1]
  store i32 %add2008, i32* %base_index_0
  store i32 0, i32* %offset3_0
  store i32 0, i32* %delta_1
  %tmp2009 = load i32* %base_index_1              ; <i32> [#uses=1]
  %add2010 = add nsw i32 %tmp2009, 0              ; <i32> [#uses=1]
  %tmp2011 = load i32* %offset3_1                 ; <i32> [#uses=1]
  %mul2012 = mul i32 %tmp2011, 3                  ; <i32> [#uses=1]
  %add2013 = add nsw i32 %add2010, %mul2012       ; <i32> [#uses=1]
  store i32 %add2013, i32* %base_index2_1
  %tmp2014 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp2015 = load i32* %base_index2_1             ; <i32> [#uses=1]
  %add.ptr2016 = getelementptr inbounds i32 addrspace(1)* %tmp2014, i32 %tmp2015 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr2016, i32 addrspace(1)** %addr_0_3_1
  %tmp2018 = load i32 addrspace(1)** %addr_0_3_1  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2019 = getelementptr inbounds i32 addrspace(1)* %tmp2018, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2020 = load i32 addrspace(1)* %arrayidx2019 ; <i32> [#uses=1]
  %vecinit2021 = insertelement <4 x i32> undef, i32 %tmp2020, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp2022 = load i32 addrspace(1)** %addr_0_3_1  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2023 = getelementptr inbounds i32 addrspace(1)* %tmp2022, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2024 = load i32 addrspace(1)* %arrayidx2023 ; <i32> [#uses=1]
  %vecinit2025 = insertelement <4 x i32> %vecinit2021, i32 %tmp2024, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp2026 = load i32 addrspace(1)** %addr_0_3_1  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2027 = getelementptr inbounds i32 addrspace(1)* %tmp2026, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2028 = load i32 addrspace(1)* %arrayidx2027 ; <i32> [#uses=1]
  %vecinit2029 = insertelement <4 x i32> %vecinit2025, i32 %tmp2028, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp2030 = load i32 addrspace(1)** %addr_0_3_1  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2031 = getelementptr inbounds i32 addrspace(1)* %tmp2030, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2032 = load i32 addrspace(1)* %arrayidx2031 ; <i32> [#uses=1]
  %vecinit2033 = insertelement <4 x i32> %vecinit2029, i32 %tmp2032, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit2033, <4 x i32>* %.compoundliteral2017
  %tmp2034 = load <4 x i32>* %.compoundliteral2017 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp2034, <4 x i32>* %xmm_tree_0_3_1
  %tmp2035 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp2036 = load <4 x i32>* %xmm_query_element_1 ; <<4 x i32>> [#uses=1]
  %tmp2037 = load <4 x i32>* %xmm_tree_0_3_1      ; <<4 x i32>> [#uses=1]
  %cmp2038 = icmp sgt <4 x i32> %tmp2036, %tmp2037 ; <<4 x i1>> [#uses=1]
  %sext2039 = sext <4 x i1> %cmp2038 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul2040 = mul <4 x i32> %tmp2035, %sext2039    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul2040, <4 x i32>* %temp_index_v_1
  %tmp2041 = load <4 x i32>* %temp_index_v_1      ; <<4 x i32>> [#uses=1]
  %tmp2042 = extractelement <4 x i32> %tmp2041, i32 0 ; <i32> [#uses=1]
  %tmp2043 = load <4 x i32>* %temp_index_v_1      ; <<4 x i32>> [#uses=1]
  %tmp2044 = extractelement <4 x i32> %tmp2043, i32 1 ; <i32> [#uses=1]
  %add2045 = add nsw i32 %tmp2042, %tmp2044       ; <i32> [#uses=1]
  %tmp2046 = load <4 x i32>* %temp_index_v_1      ; <<4 x i32>> [#uses=1]
  %tmp2047 = extractelement <4 x i32> %tmp2046, i32 2 ; <i32> [#uses=1]
  %add2048 = add nsw i32 %add2045, %tmp2047       ; <i32> [#uses=1]
  store i32 %add2048, i32* %temp_index_1
  %tmp2049 = load i32* %temp_index_1              ; <i32> [#uses=1]
  %tmp2050 = load i32 addrspace(1)** %LookUp2.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2051 = getelementptr inbounds i32 addrspace(1)* %tmp2050, i32 %tmp2049 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2052 = load i32 addrspace(1)* %arrayidx2051 ; <i32> [#uses=1]
  store i32 %tmp2052, i32* %delta_1
  %tmp2053 = load i32* %offset3_1                 ; <i32> [#uses=1]
  %mul2054 = mul i32 %tmp2053, 4                  ; <i32> [#uses=1]
  %tmp2055 = load i32* %delta_1                   ; <i32> [#uses=1]
  %sub2056 = sub i32 %tmp2055, 3                  ; <i32> [#uses=1]
  %add2057 = add nsw i32 %mul2054, %sub2056       ; <i32> [#uses=1]
  store i32 %add2057, i32* %offset3_1
  %tmp2058 = load i32* %offset2_1                 ; <i32> [#uses=1]
  %mul2059 = mul i32 %tmp2058, 4                  ; <i32> [#uses=1]
  %tmp2060 = load i32* %offset3_1                 ; <i32> [#uses=1]
  %add2061 = add nsw i32 %mul2059, %tmp2060       ; <i32> [#uses=1]
  store i32 %add2061, i32* %offset2_1
  %tmp2062 = load i32* %offset1_1                 ; <i32> [#uses=1]
  %mul2063 = mul i32 %tmp2062, 1024               ; <i32> [#uses=1]
  %tmp2064 = load i32* %offset2_1                 ; <i32> [#uses=1]
  %add2065 = add nsw i32 %mul2063, %tmp2064       ; <i32> [#uses=1]
  store i32 %add2065, i32* %offset1_1
  store i32 0, i32* %offset2_1
  %tmp2066 = load i32* %offset1_1                 ; <i32> [#uses=1]
  %mul2067 = mul i32 %tmp2066, 1024               ; <i32> [#uses=1]
  %add2068 = add nsw i32 1024, %mul2067           ; <i32> [#uses=1]
  store i32 %add2068, i32* %block_base_index_1
  %tmp2069 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp2070 = load i32* %block_base_index_1        ; <i32> [#uses=1]
  %add.ptr2071 = getelementptr inbounds i32 addrspace(1)* %tmp2069, i32 %tmp2070 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr2071, i32 16)
  %tmp2072 = load i32* %block_base_index_1        ; <i32> [#uses=1]
  %add2073 = add nsw i32 %tmp2072, 0              ; <i32> [#uses=1]
  store i32 %add2073, i32* %base_index_1
  store i32 0, i32* %offset3_1
  store i32 0, i32* %delta_2
  %tmp2074 = load i32* %base_index_2              ; <i32> [#uses=1]
  %add2075 = add nsw i32 %tmp2074, 0              ; <i32> [#uses=1]
  %tmp2076 = load i32* %offset3_2                 ; <i32> [#uses=1]
  %mul2077 = mul i32 %tmp2076, 3                  ; <i32> [#uses=1]
  %add2078 = add nsw i32 %add2075, %mul2077       ; <i32> [#uses=1]
  store i32 %add2078, i32* %base_index2_2
  %tmp2079 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp2080 = load i32* %base_index2_2             ; <i32> [#uses=1]
  %add.ptr2081 = getelementptr inbounds i32 addrspace(1)* %tmp2079, i32 %tmp2080 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr2081, i32 addrspace(1)** %addr_0_3_2
  %tmp2083 = load i32 addrspace(1)** %addr_0_3_2  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2084 = getelementptr inbounds i32 addrspace(1)* %tmp2083, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2085 = load i32 addrspace(1)* %arrayidx2084 ; <i32> [#uses=1]
  %vecinit2086 = insertelement <4 x i32> undef, i32 %tmp2085, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp2087 = load i32 addrspace(1)** %addr_0_3_2  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2088 = getelementptr inbounds i32 addrspace(1)* %tmp2087, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2089 = load i32 addrspace(1)* %arrayidx2088 ; <i32> [#uses=1]
  %vecinit2090 = insertelement <4 x i32> %vecinit2086, i32 %tmp2089, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp2091 = load i32 addrspace(1)** %addr_0_3_2  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2092 = getelementptr inbounds i32 addrspace(1)* %tmp2091, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2093 = load i32 addrspace(1)* %arrayidx2092 ; <i32> [#uses=1]
  %vecinit2094 = insertelement <4 x i32> %vecinit2090, i32 %tmp2093, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp2095 = load i32 addrspace(1)** %addr_0_3_2  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2096 = getelementptr inbounds i32 addrspace(1)* %tmp2095, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2097 = load i32 addrspace(1)* %arrayidx2096 ; <i32> [#uses=1]
  %vecinit2098 = insertelement <4 x i32> %vecinit2094, i32 %tmp2097, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit2098, <4 x i32>* %.compoundliteral2082
  %tmp2099 = load <4 x i32>* %.compoundliteral2082 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp2099, <4 x i32>* %xmm_tree_0_3_2
  %tmp2100 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp2101 = load <4 x i32>* %xmm_query_element_2 ; <<4 x i32>> [#uses=1]
  %tmp2102 = load <4 x i32>* %xmm_tree_0_3_2      ; <<4 x i32>> [#uses=1]
  %cmp2103 = icmp sgt <4 x i32> %tmp2101, %tmp2102 ; <<4 x i1>> [#uses=1]
  %sext2104 = sext <4 x i1> %cmp2103 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul2105 = mul <4 x i32> %tmp2100, %sext2104    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul2105, <4 x i32>* %temp_index_v_2
  %tmp2106 = load <4 x i32>* %temp_index_v_2      ; <<4 x i32>> [#uses=1]
  %tmp2107 = extractelement <4 x i32> %tmp2106, i32 0 ; <i32> [#uses=1]
  %tmp2108 = load <4 x i32>* %temp_index_v_2      ; <<4 x i32>> [#uses=1]
  %tmp2109 = extractelement <4 x i32> %tmp2108, i32 1 ; <i32> [#uses=1]
  %add2110 = add nsw i32 %tmp2107, %tmp2109       ; <i32> [#uses=1]
  %tmp2111 = load <4 x i32>* %temp_index_v_2      ; <<4 x i32>> [#uses=1]
  %tmp2112 = extractelement <4 x i32> %tmp2111, i32 2 ; <i32> [#uses=1]
  %add2113 = add nsw i32 %add2110, %tmp2112       ; <i32> [#uses=1]
  store i32 %add2113, i32* %temp_index_2
  %tmp2114 = load i32* %temp_index_2              ; <i32> [#uses=1]
  %tmp2115 = load i32 addrspace(1)** %LookUp2.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2116 = getelementptr inbounds i32 addrspace(1)* %tmp2115, i32 %tmp2114 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2117 = load i32 addrspace(1)* %arrayidx2116 ; <i32> [#uses=1]
  store i32 %tmp2117, i32* %delta_2
  %tmp2118 = load i32* %offset3_2                 ; <i32> [#uses=1]
  %mul2119 = mul i32 %tmp2118, 4                  ; <i32> [#uses=1]
  %tmp2120 = load i32* %delta_2                   ; <i32> [#uses=1]
  %sub2121 = sub i32 %tmp2120, 3                  ; <i32> [#uses=1]
  %add2122 = add nsw i32 %mul2119, %sub2121       ; <i32> [#uses=1]
  store i32 %add2122, i32* %offset3_2
  %tmp2123 = load i32* %offset2_2                 ; <i32> [#uses=1]
  %mul2124 = mul i32 %tmp2123, 4                  ; <i32> [#uses=1]
  %tmp2125 = load i32* %offset3_2                 ; <i32> [#uses=1]
  %add2126 = add nsw i32 %mul2124, %tmp2125       ; <i32> [#uses=1]
  store i32 %add2126, i32* %offset2_2
  %tmp2127 = load i32* %offset1_2                 ; <i32> [#uses=1]
  %mul2128 = mul i32 %tmp2127, 1024               ; <i32> [#uses=1]
  %tmp2129 = load i32* %offset2_2                 ; <i32> [#uses=1]
  %add2130 = add nsw i32 %mul2128, %tmp2129       ; <i32> [#uses=1]
  store i32 %add2130, i32* %offset1_2
  store i32 0, i32* %offset2_2
  %tmp2131 = load i32* %offset1_2                 ; <i32> [#uses=1]
  %mul2132 = mul i32 %tmp2131, 1024               ; <i32> [#uses=1]
  %add2133 = add nsw i32 1024, %mul2132           ; <i32> [#uses=1]
  store i32 %add2133, i32* %block_base_index_2
  %tmp2134 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp2135 = load i32* %block_base_index_2        ; <i32> [#uses=1]
  %add.ptr2136 = getelementptr inbounds i32 addrspace(1)* %tmp2134, i32 %tmp2135 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr2136, i32 16)
  %tmp2137 = load i32* %block_base_index_2        ; <i32> [#uses=1]
  %add2138 = add nsw i32 %tmp2137, 0              ; <i32> [#uses=1]
  store i32 %add2138, i32* %base_index_2
  store i32 0, i32* %offset3_2
  store i32 0, i32* %delta_3
  %tmp2139 = load i32* %base_index_3              ; <i32> [#uses=1]
  %add2140 = add nsw i32 %tmp2139, 0              ; <i32> [#uses=1]
  %tmp2141 = load i32* %offset3_3                 ; <i32> [#uses=1]
  %mul2142 = mul i32 %tmp2141, 3                  ; <i32> [#uses=1]
  %add2143 = add nsw i32 %add2140, %mul2142       ; <i32> [#uses=1]
  store i32 %add2143, i32* %base_index2_3
  %tmp2144 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp2145 = load i32* %base_index2_3             ; <i32> [#uses=1]
  %add.ptr2146 = getelementptr inbounds i32 addrspace(1)* %tmp2144, i32 %tmp2145 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr2146, i32 addrspace(1)** %addr_0_3_3
  %tmp2148 = load i32 addrspace(1)** %addr_0_3_3  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2149 = getelementptr inbounds i32 addrspace(1)* %tmp2148, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2150 = load i32 addrspace(1)* %arrayidx2149 ; <i32> [#uses=1]
  %vecinit2151 = insertelement <4 x i32> undef, i32 %tmp2150, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp2152 = load i32 addrspace(1)** %addr_0_3_3  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2153 = getelementptr inbounds i32 addrspace(1)* %tmp2152, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2154 = load i32 addrspace(1)* %arrayidx2153 ; <i32> [#uses=1]
  %vecinit2155 = insertelement <4 x i32> %vecinit2151, i32 %tmp2154, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp2156 = load i32 addrspace(1)** %addr_0_3_3  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2157 = getelementptr inbounds i32 addrspace(1)* %tmp2156, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2158 = load i32 addrspace(1)* %arrayidx2157 ; <i32> [#uses=1]
  %vecinit2159 = insertelement <4 x i32> %vecinit2155, i32 %tmp2158, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp2160 = load i32 addrspace(1)** %addr_0_3_3  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2161 = getelementptr inbounds i32 addrspace(1)* %tmp2160, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2162 = load i32 addrspace(1)* %arrayidx2161 ; <i32> [#uses=1]
  %vecinit2163 = insertelement <4 x i32> %vecinit2159, i32 %tmp2162, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit2163, <4 x i32>* %.compoundliteral2147
  %tmp2164 = load <4 x i32>* %.compoundliteral2147 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp2164, <4 x i32>* %xmm_tree_0_3_3
  %tmp2165 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp2166 = load <4 x i32>* %xmm_query_element_3 ; <<4 x i32>> [#uses=1]
  %tmp2167 = load <4 x i32>* %xmm_tree_0_3_3      ; <<4 x i32>> [#uses=1]
  %cmp2168 = icmp sgt <4 x i32> %tmp2166, %tmp2167 ; <<4 x i1>> [#uses=1]
  %sext2169 = sext <4 x i1> %cmp2168 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul2170 = mul <4 x i32> %tmp2165, %sext2169    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul2170, <4 x i32>* %temp_index_v_3
  %tmp2171 = load <4 x i32>* %temp_index_v_3      ; <<4 x i32>> [#uses=1]
  %tmp2172 = extractelement <4 x i32> %tmp2171, i32 0 ; <i32> [#uses=1]
  %tmp2173 = load <4 x i32>* %temp_index_v_3      ; <<4 x i32>> [#uses=1]
  %tmp2174 = extractelement <4 x i32> %tmp2173, i32 1 ; <i32> [#uses=1]
  %add2175 = add nsw i32 %tmp2172, %tmp2174       ; <i32> [#uses=1]
  %tmp2176 = load <4 x i32>* %temp_index_v_3      ; <<4 x i32>> [#uses=1]
  %tmp2177 = extractelement <4 x i32> %tmp2176, i32 2 ; <i32> [#uses=1]
  %add2178 = add nsw i32 %add2175, %tmp2177       ; <i32> [#uses=1]
  store i32 %add2178, i32* %temp_index_3
  %tmp2179 = load i32* %temp_index_3              ; <i32> [#uses=1]
  %tmp2180 = load i32 addrspace(1)** %LookUp2.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2181 = getelementptr inbounds i32 addrspace(1)* %tmp2180, i32 %tmp2179 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2182 = load i32 addrspace(1)* %arrayidx2181 ; <i32> [#uses=1]
  store i32 %tmp2182, i32* %delta_3
  %tmp2183 = load i32* %offset3_3                 ; <i32> [#uses=1]
  %mul2184 = mul i32 %tmp2183, 4                  ; <i32> [#uses=1]
  %tmp2185 = load i32* %delta_3                   ; <i32> [#uses=1]
  %sub2186 = sub i32 %tmp2185, 3                  ; <i32> [#uses=1]
  %add2187 = add nsw i32 %mul2184, %sub2186       ; <i32> [#uses=1]
  store i32 %add2187, i32* %offset3_3
  %tmp2188 = load i32* %offset2_3                 ; <i32> [#uses=1]
  %mul2189 = mul i32 %tmp2188, 4                  ; <i32> [#uses=1]
  %tmp2190 = load i32* %offset3_3                 ; <i32> [#uses=1]
  %add2191 = add nsw i32 %mul2189, %tmp2190       ; <i32> [#uses=1]
  store i32 %add2191, i32* %offset2_3
  %tmp2192 = load i32* %offset1_3                 ; <i32> [#uses=1]
  %mul2193 = mul i32 %tmp2192, 1024               ; <i32> [#uses=1]
  %tmp2194 = load i32* %offset2_3                 ; <i32> [#uses=1]
  %add2195 = add nsw i32 %mul2193, %tmp2194       ; <i32> [#uses=1]
  store i32 %add2195, i32* %offset1_3
  store i32 0, i32* %offset2_3
  %tmp2196 = load i32* %offset1_3                 ; <i32> [#uses=1]
  %mul2197 = mul i32 %tmp2196, 1024               ; <i32> [#uses=1]
  %add2198 = add nsw i32 1024, %mul2197           ; <i32> [#uses=1]
  store i32 %add2198, i32* %block_base_index_3
  %tmp2199 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp2200 = load i32* %block_base_index_3        ; <i32> [#uses=1]
  %add.ptr2201 = getelementptr inbounds i32 addrspace(1)* %tmp2199, i32 %tmp2200 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr2201, i32 16)
  %tmp2202 = load i32* %block_base_index_3        ; <i32> [#uses=1]
  %add2203 = add nsw i32 %tmp2202, 0              ; <i32> [#uses=1]
  store i32 %add2203, i32* %base_index_3
  store i32 0, i32* %offset3_3
  store i32 0, i32* %delta_4
  %tmp2204 = load i32* %base_index_4              ; <i32> [#uses=1]
  %add2205 = add nsw i32 %tmp2204, 0              ; <i32> [#uses=1]
  %tmp2206 = load i32* %offset3_4                 ; <i32> [#uses=1]
  %mul2207 = mul i32 %tmp2206, 3                  ; <i32> [#uses=1]
  %add2208 = add nsw i32 %add2205, %mul2207       ; <i32> [#uses=1]
  store i32 %add2208, i32* %base_index2_4
  %tmp2209 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp2210 = load i32* %base_index2_4             ; <i32> [#uses=1]
  %add.ptr2211 = getelementptr inbounds i32 addrspace(1)* %tmp2209, i32 %tmp2210 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr2211, i32 addrspace(1)** %addr_0_3_4
  %tmp2213 = load i32 addrspace(1)** %addr_0_3_4  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2214 = getelementptr inbounds i32 addrspace(1)* %tmp2213, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2215 = load i32 addrspace(1)* %arrayidx2214 ; <i32> [#uses=1]
  %vecinit2216 = insertelement <4 x i32> undef, i32 %tmp2215, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp2217 = load i32 addrspace(1)** %addr_0_3_4  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2218 = getelementptr inbounds i32 addrspace(1)* %tmp2217, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2219 = load i32 addrspace(1)* %arrayidx2218 ; <i32> [#uses=1]
  %vecinit2220 = insertelement <4 x i32> %vecinit2216, i32 %tmp2219, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp2221 = load i32 addrspace(1)** %addr_0_3_4  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2222 = getelementptr inbounds i32 addrspace(1)* %tmp2221, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2223 = load i32 addrspace(1)* %arrayidx2222 ; <i32> [#uses=1]
  %vecinit2224 = insertelement <4 x i32> %vecinit2220, i32 %tmp2223, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp2225 = load i32 addrspace(1)** %addr_0_3_4  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2226 = getelementptr inbounds i32 addrspace(1)* %tmp2225, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2227 = load i32 addrspace(1)* %arrayidx2226 ; <i32> [#uses=1]
  %vecinit2228 = insertelement <4 x i32> %vecinit2224, i32 %tmp2227, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit2228, <4 x i32>* %.compoundliteral2212
  %tmp2229 = load <4 x i32>* %.compoundliteral2212 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp2229, <4 x i32>* %xmm_tree_0_3_4
  %tmp2230 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp2231 = load <4 x i32>* %xmm_query_element_4 ; <<4 x i32>> [#uses=1]
  %tmp2232 = load <4 x i32>* %xmm_tree_0_3_4      ; <<4 x i32>> [#uses=1]
  %cmp2233 = icmp sgt <4 x i32> %tmp2231, %tmp2232 ; <<4 x i1>> [#uses=1]
  %sext2234 = sext <4 x i1> %cmp2233 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul2235 = mul <4 x i32> %tmp2230, %sext2234    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul2235, <4 x i32>* %temp_index_v_4
  %tmp2236 = load <4 x i32>* %temp_index_v_4      ; <<4 x i32>> [#uses=1]
  %tmp2237 = extractelement <4 x i32> %tmp2236, i32 0 ; <i32> [#uses=1]
  %tmp2238 = load <4 x i32>* %temp_index_v_4      ; <<4 x i32>> [#uses=1]
  %tmp2239 = extractelement <4 x i32> %tmp2238, i32 1 ; <i32> [#uses=1]
  %add2240 = add nsw i32 %tmp2237, %tmp2239       ; <i32> [#uses=1]
  %tmp2241 = load <4 x i32>* %temp_index_v_4      ; <<4 x i32>> [#uses=1]
  %tmp2242 = extractelement <4 x i32> %tmp2241, i32 2 ; <i32> [#uses=1]
  %add2243 = add nsw i32 %add2240, %tmp2242       ; <i32> [#uses=1]
  store i32 %add2243, i32* %temp_index_4
  %tmp2244 = load i32* %temp_index_4              ; <i32> [#uses=1]
  %tmp2245 = load i32 addrspace(1)** %LookUp2.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2246 = getelementptr inbounds i32 addrspace(1)* %tmp2245, i32 %tmp2244 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2247 = load i32 addrspace(1)* %arrayidx2246 ; <i32> [#uses=1]
  store i32 %tmp2247, i32* %delta_4
  %tmp2248 = load i32* %offset3_4                 ; <i32> [#uses=1]
  %mul2249 = mul i32 %tmp2248, 4                  ; <i32> [#uses=1]
  %tmp2250 = load i32* %delta_4                   ; <i32> [#uses=1]
  %sub2251 = sub i32 %tmp2250, 3                  ; <i32> [#uses=1]
  %add2252 = add nsw i32 %mul2249, %sub2251       ; <i32> [#uses=1]
  store i32 %add2252, i32* %offset3_4
  %tmp2253 = load i32* %offset2_4                 ; <i32> [#uses=1]
  %mul2254 = mul i32 %tmp2253, 4                  ; <i32> [#uses=1]
  %tmp2255 = load i32* %offset3_4                 ; <i32> [#uses=1]
  %add2256 = add nsw i32 %mul2254, %tmp2255       ; <i32> [#uses=1]
  store i32 %add2256, i32* %offset2_4
  %tmp2257 = load i32* %offset1_4                 ; <i32> [#uses=1]
  %mul2258 = mul i32 %tmp2257, 1024               ; <i32> [#uses=1]
  %tmp2259 = load i32* %offset2_4                 ; <i32> [#uses=1]
  %add2260 = add nsw i32 %mul2258, %tmp2259       ; <i32> [#uses=1]
  store i32 %add2260, i32* %offset1_4
  store i32 0, i32* %offset2_4
  %tmp2261 = load i32* %offset1_4                 ; <i32> [#uses=1]
  %mul2262 = mul i32 %tmp2261, 1024               ; <i32> [#uses=1]
  %add2263 = add nsw i32 1024, %mul2262           ; <i32> [#uses=1]
  store i32 %add2263, i32* %block_base_index_4
  %tmp2264 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp2265 = load i32* %block_base_index_4        ; <i32> [#uses=1]
  %add.ptr2266 = getelementptr inbounds i32 addrspace(1)* %tmp2264, i32 %tmp2265 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr2266, i32 16)
  %tmp2267 = load i32* %block_base_index_4        ; <i32> [#uses=1]
  %add2268 = add nsw i32 %tmp2267, 0              ; <i32> [#uses=1]
  store i32 %add2268, i32* %base_index_4
  store i32 0, i32* %offset3_4
  store i32 0, i32* %delta_5
  %tmp2269 = load i32* %base_index_5              ; <i32> [#uses=1]
  %add2270 = add nsw i32 %tmp2269, 0              ; <i32> [#uses=1]
  %tmp2271 = load i32* %offset3_5                 ; <i32> [#uses=1]
  %mul2272 = mul i32 %tmp2271, 3                  ; <i32> [#uses=1]
  %add2273 = add nsw i32 %add2270, %mul2272       ; <i32> [#uses=1]
  store i32 %add2273, i32* %base_index2_5
  %tmp2274 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp2275 = load i32* %base_index2_5             ; <i32> [#uses=1]
  %add.ptr2276 = getelementptr inbounds i32 addrspace(1)* %tmp2274, i32 %tmp2275 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr2276, i32 addrspace(1)** %addr_0_3_5
  %tmp2278 = load i32 addrspace(1)** %addr_0_3_5  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2279 = getelementptr inbounds i32 addrspace(1)* %tmp2278, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2280 = load i32 addrspace(1)* %arrayidx2279 ; <i32> [#uses=1]
  %vecinit2281 = insertelement <4 x i32> undef, i32 %tmp2280, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp2282 = load i32 addrspace(1)** %addr_0_3_5  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2283 = getelementptr inbounds i32 addrspace(1)* %tmp2282, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2284 = load i32 addrspace(1)* %arrayidx2283 ; <i32> [#uses=1]
  %vecinit2285 = insertelement <4 x i32> %vecinit2281, i32 %tmp2284, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp2286 = load i32 addrspace(1)** %addr_0_3_5  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2287 = getelementptr inbounds i32 addrspace(1)* %tmp2286, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2288 = load i32 addrspace(1)* %arrayidx2287 ; <i32> [#uses=1]
  %vecinit2289 = insertelement <4 x i32> %vecinit2285, i32 %tmp2288, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp2290 = load i32 addrspace(1)** %addr_0_3_5  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2291 = getelementptr inbounds i32 addrspace(1)* %tmp2290, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2292 = load i32 addrspace(1)* %arrayidx2291 ; <i32> [#uses=1]
  %vecinit2293 = insertelement <4 x i32> %vecinit2289, i32 %tmp2292, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit2293, <4 x i32>* %.compoundliteral2277
  %tmp2294 = load <4 x i32>* %.compoundliteral2277 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp2294, <4 x i32>* %xmm_tree_0_3_5
  %tmp2295 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp2296 = load <4 x i32>* %xmm_query_element_5 ; <<4 x i32>> [#uses=1]
  %tmp2297 = load <4 x i32>* %xmm_tree_0_3_5      ; <<4 x i32>> [#uses=1]
  %cmp2298 = icmp sgt <4 x i32> %tmp2296, %tmp2297 ; <<4 x i1>> [#uses=1]
  %sext2299 = sext <4 x i1> %cmp2298 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul2300 = mul <4 x i32> %tmp2295, %sext2299    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul2300, <4 x i32>* %temp_index_v_5
  %tmp2301 = load <4 x i32>* %temp_index_v_5      ; <<4 x i32>> [#uses=1]
  %tmp2302 = extractelement <4 x i32> %tmp2301, i32 0 ; <i32> [#uses=1]
  %tmp2303 = load <4 x i32>* %temp_index_v_5      ; <<4 x i32>> [#uses=1]
  %tmp2304 = extractelement <4 x i32> %tmp2303, i32 1 ; <i32> [#uses=1]
  %add2305 = add nsw i32 %tmp2302, %tmp2304       ; <i32> [#uses=1]
  %tmp2306 = load <4 x i32>* %temp_index_v_5      ; <<4 x i32>> [#uses=1]
  %tmp2307 = extractelement <4 x i32> %tmp2306, i32 2 ; <i32> [#uses=1]
  %add2308 = add nsw i32 %add2305, %tmp2307       ; <i32> [#uses=1]
  store i32 %add2308, i32* %temp_index_5
  %tmp2309 = load i32* %temp_index_5              ; <i32> [#uses=1]
  %tmp2310 = load i32 addrspace(1)** %LookUp2.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2311 = getelementptr inbounds i32 addrspace(1)* %tmp2310, i32 %tmp2309 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2312 = load i32 addrspace(1)* %arrayidx2311 ; <i32> [#uses=1]
  store i32 %tmp2312, i32* %delta_5
  %tmp2313 = load i32* %offset3_5                 ; <i32> [#uses=1]
  %mul2314 = mul i32 %tmp2313, 4                  ; <i32> [#uses=1]
  %tmp2315 = load i32* %delta_5                   ; <i32> [#uses=1]
  %sub2316 = sub i32 %tmp2315, 3                  ; <i32> [#uses=1]
  %add2317 = add nsw i32 %mul2314, %sub2316       ; <i32> [#uses=1]
  store i32 %add2317, i32* %offset3_5
  %tmp2318 = load i32* %offset2_5                 ; <i32> [#uses=1]
  %mul2319 = mul i32 %tmp2318, 4                  ; <i32> [#uses=1]
  %tmp2320 = load i32* %offset3_5                 ; <i32> [#uses=1]
  %add2321 = add nsw i32 %mul2319, %tmp2320       ; <i32> [#uses=1]
  store i32 %add2321, i32* %offset2_5
  %tmp2322 = load i32* %offset1_5                 ; <i32> [#uses=1]
  %mul2323 = mul i32 %tmp2322, 1024               ; <i32> [#uses=1]
  %tmp2324 = load i32* %offset2_5                 ; <i32> [#uses=1]
  %add2325 = add nsw i32 %mul2323, %tmp2324       ; <i32> [#uses=1]
  store i32 %add2325, i32* %offset1_5
  store i32 0, i32* %offset2_5
  %tmp2326 = load i32* %offset1_5                 ; <i32> [#uses=1]
  %mul2327 = mul i32 %tmp2326, 1024               ; <i32> [#uses=1]
  %add2328 = add nsw i32 1024, %mul2327           ; <i32> [#uses=1]
  store i32 %add2328, i32* %block_base_index_5
  %tmp2329 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp2330 = load i32* %block_base_index_5        ; <i32> [#uses=1]
  %add.ptr2331 = getelementptr inbounds i32 addrspace(1)* %tmp2329, i32 %tmp2330 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr2331, i32 16)
  %tmp2332 = load i32* %block_base_index_5        ; <i32> [#uses=1]
  %add2333 = add nsw i32 %tmp2332, 0              ; <i32> [#uses=1]
  store i32 %add2333, i32* %base_index_5
  store i32 0, i32* %offset3_5
  store i32 0, i32* %delta_6
  %tmp2334 = load i32* %base_index_6              ; <i32> [#uses=1]
  %add2335 = add nsw i32 %tmp2334, 0              ; <i32> [#uses=1]
  %tmp2336 = load i32* %offset3_6                 ; <i32> [#uses=1]
  %mul2337 = mul i32 %tmp2336, 3                  ; <i32> [#uses=1]
  %add2338 = add nsw i32 %add2335, %mul2337       ; <i32> [#uses=1]
  store i32 %add2338, i32* %base_index2_6
  %tmp2339 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp2340 = load i32* %base_index2_6             ; <i32> [#uses=1]
  %add.ptr2341 = getelementptr inbounds i32 addrspace(1)* %tmp2339, i32 %tmp2340 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr2341, i32 addrspace(1)** %addr_0_3_6
  %tmp2343 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2344 = getelementptr inbounds i32 addrspace(1)* %tmp2343, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2345 = load i32 addrspace(1)* %arrayidx2344 ; <i32> [#uses=1]
  %vecinit2346 = insertelement <4 x i32> undef, i32 %tmp2345, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp2347 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2348 = getelementptr inbounds i32 addrspace(1)* %tmp2347, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2349 = load i32 addrspace(1)* %arrayidx2348 ; <i32> [#uses=1]
  %vecinit2350 = insertelement <4 x i32> %vecinit2346, i32 %tmp2349, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp2351 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2352 = getelementptr inbounds i32 addrspace(1)* %tmp2351, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2353 = load i32 addrspace(1)* %arrayidx2352 ; <i32> [#uses=1]
  %vecinit2354 = insertelement <4 x i32> %vecinit2350, i32 %tmp2353, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp2355 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2356 = getelementptr inbounds i32 addrspace(1)* %tmp2355, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2357 = load i32 addrspace(1)* %arrayidx2356 ; <i32> [#uses=1]
  %vecinit2358 = insertelement <4 x i32> %vecinit2354, i32 %tmp2357, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit2358, <4 x i32>* %.compoundliteral2342
  %tmp2359 = load <4 x i32>* %.compoundliteral2342 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp2359, <4 x i32>* %xmm_tree_0_3_6
  %tmp2360 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp2361 = load <4 x i32>* %xmm_query_element_6 ; <<4 x i32>> [#uses=1]
  %tmp2362 = load <4 x i32>* %xmm_tree_0_3_6      ; <<4 x i32>> [#uses=1]
  %cmp2363 = icmp sgt <4 x i32> %tmp2361, %tmp2362 ; <<4 x i1>> [#uses=1]
  %sext2364 = sext <4 x i1> %cmp2363 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul2365 = mul <4 x i32> %tmp2360, %sext2364    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul2365, <4 x i32>* %temp_index_v_6
  %tmp2366 = load <4 x i32>* %temp_index_v_6      ; <<4 x i32>> [#uses=1]
  %tmp2367 = extractelement <4 x i32> %tmp2366, i32 0 ; <i32> [#uses=1]
  %tmp2368 = load <4 x i32>* %temp_index_v_6      ; <<4 x i32>> [#uses=1]
  %tmp2369 = extractelement <4 x i32> %tmp2368, i32 1 ; <i32> [#uses=1]
  %add2370 = add nsw i32 %tmp2367, %tmp2369       ; <i32> [#uses=1]
  %tmp2371 = load <4 x i32>* %temp_index_v_6      ; <<4 x i32>> [#uses=1]
  %tmp2372 = extractelement <4 x i32> %tmp2371, i32 2 ; <i32> [#uses=1]
  %add2373 = add nsw i32 %add2370, %tmp2372       ; <i32> [#uses=1]
  store i32 %add2373, i32* %temp_index_6
  %tmp2374 = load i32* %temp_index_6              ; <i32> [#uses=1]
  %tmp2375 = load i32 addrspace(1)** %LookUp2.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2376 = getelementptr inbounds i32 addrspace(1)* %tmp2375, i32 %tmp2374 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2377 = load i32 addrspace(1)* %arrayidx2376 ; <i32> [#uses=1]
  store i32 %tmp2377, i32* %delta_6
  %tmp2378 = load i32* %offset3_6                 ; <i32> [#uses=1]
  %mul2379 = mul i32 %tmp2378, 4                  ; <i32> [#uses=1]
  %tmp2380 = load i32* %delta_6                   ; <i32> [#uses=1]
  %sub2381 = sub i32 %tmp2380, 3                  ; <i32> [#uses=1]
  %add2382 = add nsw i32 %mul2379, %sub2381       ; <i32> [#uses=1]
  store i32 %add2382, i32* %offset3_6
  %tmp2383 = load i32* %offset2_6                 ; <i32> [#uses=1]
  %mul2384 = mul i32 %tmp2383, 4                  ; <i32> [#uses=1]
  %tmp2385 = load i32* %offset3_6                 ; <i32> [#uses=1]
  %add2386 = add nsw i32 %mul2384, %tmp2385       ; <i32> [#uses=1]
  store i32 %add2386, i32* %offset2_6
  %tmp2387 = load i32* %offset1_6                 ; <i32> [#uses=1]
  %mul2388 = mul i32 %tmp2387, 1024               ; <i32> [#uses=1]
  %tmp2389 = load i32* %offset2_6                 ; <i32> [#uses=1]
  %add2390 = add nsw i32 %mul2388, %tmp2389       ; <i32> [#uses=1]
  store i32 %add2390, i32* %offset1_6
  store i32 0, i32* %offset2_6
  %tmp2391 = load i32* %offset1_6                 ; <i32> [#uses=1]
  %mul2392 = mul i32 %tmp2391, 1024               ; <i32> [#uses=1]
  %add2393 = add nsw i32 1024, %mul2392           ; <i32> [#uses=1]
  store i32 %add2393, i32* %block_base_index_6
  %tmp2394 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp2395 = load i32* %block_base_index_6        ; <i32> [#uses=1]
  %add.ptr2396 = getelementptr inbounds i32 addrspace(1)* %tmp2394, i32 %tmp2395 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr2396, i32 16)
  %tmp2397 = load i32* %block_base_index_6        ; <i32> [#uses=1]
  %add2398 = add nsw i32 %tmp2397, 0              ; <i32> [#uses=1]
  store i32 %add2398, i32* %base_index_6
  store i32 0, i32* %offset3_6
  store i32 0, i32* %delta_7
  %tmp2399 = load i32* %base_index_7              ; <i32> [#uses=1]
  %add2400 = add nsw i32 %tmp2399, 0              ; <i32> [#uses=1]
  %tmp2401 = load i32* %offset3_7                 ; <i32> [#uses=1]
  %mul2402 = mul i32 %tmp2401, 3                  ; <i32> [#uses=1]
  %add2403 = add nsw i32 %add2400, %mul2402       ; <i32> [#uses=1]
  store i32 %add2403, i32* %base_index2_7
  %tmp2404 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp2405 = load i32* %base_index2_7             ; <i32> [#uses=1]
  %add.ptr2406 = getelementptr inbounds i32 addrspace(1)* %tmp2404, i32 %tmp2405 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr2406, i32 addrspace(1)** %addr_0_3_7
  %tmp2408 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2409 = getelementptr inbounds i32 addrspace(1)* %tmp2408, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2410 = load i32 addrspace(1)* %arrayidx2409 ; <i32> [#uses=1]
  %vecinit2411 = insertelement <4 x i32> undef, i32 %tmp2410, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp2412 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2413 = getelementptr inbounds i32 addrspace(1)* %tmp2412, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2414 = load i32 addrspace(1)* %arrayidx2413 ; <i32> [#uses=1]
  %vecinit2415 = insertelement <4 x i32> %vecinit2411, i32 %tmp2414, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp2416 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2417 = getelementptr inbounds i32 addrspace(1)* %tmp2416, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2418 = load i32 addrspace(1)* %arrayidx2417 ; <i32> [#uses=1]
  %vecinit2419 = insertelement <4 x i32> %vecinit2415, i32 %tmp2418, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp2420 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2421 = getelementptr inbounds i32 addrspace(1)* %tmp2420, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2422 = load i32 addrspace(1)* %arrayidx2421 ; <i32> [#uses=1]
  %vecinit2423 = insertelement <4 x i32> %vecinit2419, i32 %tmp2422, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit2423, <4 x i32>* %.compoundliteral2407
  %tmp2424 = load <4 x i32>* %.compoundliteral2407 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp2424, <4 x i32>* %xmm_tree_0_3_7
  %tmp2425 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp2426 = load <4 x i32>* %xmm_query_element_7 ; <<4 x i32>> [#uses=1]
  %tmp2427 = load <4 x i32>* %xmm_tree_0_3_7      ; <<4 x i32>> [#uses=1]
  %cmp2428 = icmp sgt <4 x i32> %tmp2426, %tmp2427 ; <<4 x i1>> [#uses=1]
  %sext2429 = sext <4 x i1> %cmp2428 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul2430 = mul <4 x i32> %tmp2425, %sext2429    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul2430, <4 x i32>* %temp_index_v_7
  %tmp2431 = load <4 x i32>* %temp_index_v_7      ; <<4 x i32>> [#uses=1]
  %tmp2432 = extractelement <4 x i32> %tmp2431, i32 0 ; <i32> [#uses=1]
  %tmp2433 = load <4 x i32>* %temp_index_v_7      ; <<4 x i32>> [#uses=1]
  %tmp2434 = extractelement <4 x i32> %tmp2433, i32 1 ; <i32> [#uses=1]
  %add2435 = add nsw i32 %tmp2432, %tmp2434       ; <i32> [#uses=1]
  %tmp2436 = load <4 x i32>* %temp_index_v_7      ; <<4 x i32>> [#uses=1]
  %tmp2437 = extractelement <4 x i32> %tmp2436, i32 2 ; <i32> [#uses=1]
  %add2438 = add nsw i32 %add2435, %tmp2437       ; <i32> [#uses=1]
  store i32 %add2438, i32* %temp_index_7
  %tmp2439 = load i32* %temp_index_7              ; <i32> [#uses=1]
  %tmp2440 = load i32 addrspace(1)** %LookUp2.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2441 = getelementptr inbounds i32 addrspace(1)* %tmp2440, i32 %tmp2439 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2442 = load i32 addrspace(1)* %arrayidx2441 ; <i32> [#uses=1]
  store i32 %tmp2442, i32* %delta_7
  %tmp2443 = load i32* %offset3_7                 ; <i32> [#uses=1]
  %mul2444 = mul i32 %tmp2443, 4                  ; <i32> [#uses=1]
  %tmp2445 = load i32* %delta_7                   ; <i32> [#uses=1]
  %sub2446 = sub i32 %tmp2445, 3                  ; <i32> [#uses=1]
  %add2447 = add nsw i32 %mul2444, %sub2446       ; <i32> [#uses=1]
  store i32 %add2447, i32* %offset3_7
  %tmp2448 = load i32* %offset2_7                 ; <i32> [#uses=1]
  %mul2449 = mul i32 %tmp2448, 4                  ; <i32> [#uses=1]
  %tmp2450 = load i32* %offset3_7                 ; <i32> [#uses=1]
  %add2451 = add nsw i32 %mul2449, %tmp2450       ; <i32> [#uses=1]
  store i32 %add2451, i32* %offset2_7
  %tmp2452 = load i32* %offset1_7                 ; <i32> [#uses=1]
  %mul2453 = mul i32 %tmp2452, 1024               ; <i32> [#uses=1]
  %tmp2454 = load i32* %offset2_7                 ; <i32> [#uses=1]
  %add2455 = add nsw i32 %mul2453, %tmp2454       ; <i32> [#uses=1]
  store i32 %add2455, i32* %offset1_7
  store i32 0, i32* %offset2_7
  %tmp2456 = load i32* %offset1_7                 ; <i32> [#uses=1]
  %mul2457 = mul i32 %tmp2456, 1024               ; <i32> [#uses=1]
  %add2458 = add nsw i32 1024, %mul2457           ; <i32> [#uses=1]
  store i32 %add2458, i32* %block_base_index_7
  %tmp2459 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp2460 = load i32* %block_base_index_7        ; <i32> [#uses=1]
  %add.ptr2461 = getelementptr inbounds i32 addrspace(1)* %tmp2459, i32 %tmp2460 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr2461, i32 16)
  %tmp2462 = load i32* %block_base_index_7        ; <i32> [#uses=1]
  %add2463 = add nsw i32 %tmp2462, 0              ; <i32> [#uses=1]
  store i32 %add2463, i32* %base_index_7
  store i32 0, i32* %offset3_7
  %tmp2464 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp2465 = load i32* %base_index_0              ; <i32> [#uses=1]
  %add.ptr2466 = getelementptr inbounds i32 addrspace(1)* %tmp2464, i32 %tmp2465 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr2466, i32 addrspace(1)** %addr_0_3_0
  %tmp2468 = load i32 addrspace(1)** %addr_0_3_0  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2469 = getelementptr inbounds i32 addrspace(1)* %tmp2468, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2470 = load i32 addrspace(1)* %arrayidx2469 ; <i32> [#uses=1]
  %vecinit2471 = insertelement <4 x i32> undef, i32 %tmp2470, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp2472 = load i32 addrspace(1)** %addr_0_3_0  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2473 = getelementptr inbounds i32 addrspace(1)* %tmp2472, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2474 = load i32 addrspace(1)* %arrayidx2473 ; <i32> [#uses=1]
  %vecinit2475 = insertelement <4 x i32> %vecinit2471, i32 %tmp2474, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp2476 = load i32 addrspace(1)** %addr_0_3_0  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2477 = getelementptr inbounds i32 addrspace(1)* %tmp2476, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2478 = load i32 addrspace(1)* %arrayidx2477 ; <i32> [#uses=1]
  %vecinit2479 = insertelement <4 x i32> %vecinit2475, i32 %tmp2478, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp2480 = load i32 addrspace(1)** %addr_0_3_0  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2481 = getelementptr inbounds i32 addrspace(1)* %tmp2480, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2482 = load i32 addrspace(1)* %arrayidx2481 ; <i32> [#uses=1]
  %vecinit2483 = insertelement <4 x i32> %vecinit2479, i32 %tmp2482, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit2483, <4 x i32>* %.compoundliteral2467
  %tmp2484 = load <4 x i32>* %.compoundliteral2467 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp2484, <4 x i32>* %xmm_tree_0_3_0
  %tmp2485 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp2486 = load <4 x i32>* %xmm_query_element_0 ; <<4 x i32>> [#uses=1]
  %tmp2487 = load <4 x i32>* %xmm_tree_0_3_0      ; <<4 x i32>> [#uses=1]
  %cmp2488 = icmp sgt <4 x i32> %tmp2486, %tmp2487 ; <<4 x i1>> [#uses=1]
  %sext2489 = sext <4 x i1> %cmp2488 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul2490 = mul <4 x i32> %tmp2485, %sext2489    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul2490, <4 x i32>* %temp_index_v_0
  %tmp2491 = load <4 x i32>* %temp_index_v_0      ; <<4 x i32>> [#uses=1]
  %tmp2492 = extractelement <4 x i32> %tmp2491, i32 0 ; <i32> [#uses=1]
  %tmp2493 = load <4 x i32>* %temp_index_v_0      ; <<4 x i32>> [#uses=1]
  %tmp2494 = extractelement <4 x i32> %tmp2493, i32 1 ; <i32> [#uses=1]
  %add2495 = add nsw i32 %tmp2492, %tmp2494       ; <i32> [#uses=1]
  %tmp2496 = load <4 x i32>* %temp_index_v_0      ; <<4 x i32>> [#uses=1]
  %tmp2497 = extractelement <4 x i32> %tmp2496, i32 2 ; <i32> [#uses=1]
  %add2498 = add nsw i32 %add2495, %tmp2497       ; <i32> [#uses=1]
  store i32 %add2498, i32* %temp_index_0
  %tmp2499 = load i32* %temp_index_0              ; <i32> [#uses=1]
  %tmp2500 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2501 = getelementptr inbounds i32 addrspace(1)* %tmp2500, i32 %tmp2499 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2502 = load i32 addrspace(1)* %arrayidx2501 ; <i32> [#uses=1]
  store i32 %tmp2502, i32* %delta_0
  %tmp2503 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp2504 = load i32* %base_index_0              ; <i32> [#uses=1]
  %add.ptr2505 = getelementptr inbounds i32 addrspace(1)* %tmp2503, i32 %tmp2504 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2506 = load i32* %temp_index_0              ; <i32> [#uses=1]
  %tmp2507 = load i32 addrspace(1)** %LookUp4.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2508 = getelementptr inbounds i32 addrspace(1)* %tmp2507, i32 %tmp2506 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2509 = load i32 addrspace(1)* %arrayidx2508 ; <i32> [#uses=1]
  %add.ptr2510 = getelementptr inbounds i32 addrspace(1)* %add.ptr2505, i32 %tmp2509 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr2510, i32 addrspace(1)** %addr_0_3_0
  %tmp2512 = load i32 addrspace(1)** %addr_0_3_0  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2513 = getelementptr inbounds i32 addrspace(1)* %tmp2512, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2514 = load i32 addrspace(1)* %arrayidx2513 ; <i32> [#uses=1]
  %vecinit2515 = insertelement <4 x i32> undef, i32 %tmp2514, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp2516 = load i32 addrspace(1)** %addr_0_3_0  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2517 = getelementptr inbounds i32 addrspace(1)* %tmp2516, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2518 = load i32 addrspace(1)* %arrayidx2517 ; <i32> [#uses=1]
  %vecinit2519 = insertelement <4 x i32> %vecinit2515, i32 %tmp2518, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp2520 = load i32 addrspace(1)** %addr_0_3_0  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2521 = getelementptr inbounds i32 addrspace(1)* %tmp2520, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2522 = load i32 addrspace(1)* %arrayidx2521 ; <i32> [#uses=1]
  %vecinit2523 = insertelement <4 x i32> %vecinit2519, i32 %tmp2522, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp2524 = load i32 addrspace(1)** %addr_0_3_0  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2525 = getelementptr inbounds i32 addrspace(1)* %tmp2524, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2526 = load i32 addrspace(1)* %arrayidx2525 ; <i32> [#uses=1]
  %vecinit2527 = insertelement <4 x i32> %vecinit2523, i32 %tmp2526, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit2527, <4 x i32>* %.compoundliteral2511
  %tmp2528 = load <4 x i32>* %.compoundliteral2511 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp2528, <4 x i32>* %xmm_tree_0_3_0
  %tmp2529 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp2530 = load <4 x i32>* %xmm_query_element_0 ; <<4 x i32>> [#uses=1]
  %tmp2531 = load <4 x i32>* %xmm_tree_0_3_0      ; <<4 x i32>> [#uses=1]
  %cmp2532 = icmp sgt <4 x i32> %tmp2530, %tmp2531 ; <<4 x i1>> [#uses=1]
  %sext2533 = sext <4 x i1> %cmp2532 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul2534 = mul <4 x i32> %tmp2529, %sext2533    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul2534, <4 x i32>* %temp_index_v_0
  %tmp2535 = load <4 x i32>* %temp_index_v_0      ; <<4 x i32>> [#uses=1]
  %tmp2536 = extractelement <4 x i32> %tmp2535, i32 0 ; <i32> [#uses=1]
  %tmp2537 = load <4 x i32>* %temp_index_v_0      ; <<4 x i32>> [#uses=1]
  %tmp2538 = extractelement <4 x i32> %tmp2537, i32 1 ; <i32> [#uses=1]
  %add2539 = add nsw i32 %tmp2536, %tmp2538       ; <i32> [#uses=1]
  %tmp2540 = load <4 x i32>* %temp_index_v_0      ; <<4 x i32>> [#uses=1]
  %tmp2541 = extractelement <4 x i32> %tmp2540, i32 2 ; <i32> [#uses=1]
  %add2542 = add nsw i32 %add2539, %tmp2541       ; <i32> [#uses=1]
  store i32 %add2542, i32* %temp_index_0
  %tmp2543 = load i32* %delta_0                   ; <i32> [#uses=1]
  %shl2544 = shl i32 %tmp2543, 2                  ; <i32> [#uses=1]
  %tmp2545 = load i32* %temp_index_0              ; <i32> [#uses=1]
  %tmp2546 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2547 = getelementptr inbounds i32 addrspace(1)* %tmp2546, i32 %tmp2545 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2548 = load i32 addrspace(1)* %arrayidx2547 ; <i32> [#uses=1]
  %add2549 = add nsw i32 %shl2544, %tmp2548       ; <i32> [#uses=1]
  store i32 %add2549, i32* %offset3_0
  %tmp2550 = load i32* %offset2_0                 ; <i32> [#uses=1]
  %mul2551 = mul i32 %tmp2550, 16                 ; <i32> [#uses=1]
  %tmp2552 = load i32* %offset3_0                 ; <i32> [#uses=1]
  %add2553 = add nsw i32 %mul2551, %tmp2552       ; <i32> [#uses=1]
  store i32 %add2553, i32* %offset2_0
  %tmp2554 = load i32* %block_base_index_0        ; <i32> [#uses=1]
  %add2555 = add nsw i32 %tmp2554, 15             ; <i32> [#uses=1]
  %tmp2556 = load i32* %offset2_0                 ; <i32> [#uses=1]
  %mul2557 = mul i32 %tmp2556, 15                 ; <i32> [#uses=1]
  %add2558 = add nsw i32 %add2555, %mul2557       ; <i32> [#uses=1]
  store i32 %add2558, i32* %base_index_0
  %tmp2559 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp2560 = load i32* %base_index_0              ; <i32> [#uses=1]
  %add.ptr2561 = getelementptr inbounds i32 addrspace(1)* %tmp2559, i32 %tmp2560 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr2561, i32 16)
  store i32 0, i32* %offset3_0
  %tmp2562 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp2563 = load i32* %base_index_1              ; <i32> [#uses=1]
  %add.ptr2564 = getelementptr inbounds i32 addrspace(1)* %tmp2562, i32 %tmp2563 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr2564, i32 addrspace(1)** %addr_0_3_1
  %tmp2566 = load i32 addrspace(1)** %addr_0_3_1  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2567 = getelementptr inbounds i32 addrspace(1)* %tmp2566, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2568 = load i32 addrspace(1)* %arrayidx2567 ; <i32> [#uses=1]
  %vecinit2569 = insertelement <4 x i32> undef, i32 %tmp2568, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp2570 = load i32 addrspace(1)** %addr_0_3_1  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2571 = getelementptr inbounds i32 addrspace(1)* %tmp2570, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2572 = load i32 addrspace(1)* %arrayidx2571 ; <i32> [#uses=1]
  %vecinit2573 = insertelement <4 x i32> %vecinit2569, i32 %tmp2572, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp2574 = load i32 addrspace(1)** %addr_0_3_1  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2575 = getelementptr inbounds i32 addrspace(1)* %tmp2574, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2576 = load i32 addrspace(1)* %arrayidx2575 ; <i32> [#uses=1]
  %vecinit2577 = insertelement <4 x i32> %vecinit2573, i32 %tmp2576, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp2578 = load i32 addrspace(1)** %addr_0_3_1  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2579 = getelementptr inbounds i32 addrspace(1)* %tmp2578, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2580 = load i32 addrspace(1)* %arrayidx2579 ; <i32> [#uses=1]
  %vecinit2581 = insertelement <4 x i32> %vecinit2577, i32 %tmp2580, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit2581, <4 x i32>* %.compoundliteral2565
  %tmp2582 = load <4 x i32>* %.compoundliteral2565 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp2582, <4 x i32>* %xmm_tree_0_3_1
  %tmp2583 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp2584 = load <4 x i32>* %xmm_query_element_1 ; <<4 x i32>> [#uses=1]
  %tmp2585 = load <4 x i32>* %xmm_tree_0_3_1      ; <<4 x i32>> [#uses=1]
  %cmp2586 = icmp sgt <4 x i32> %tmp2584, %tmp2585 ; <<4 x i1>> [#uses=1]
  %sext2587 = sext <4 x i1> %cmp2586 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul2588 = mul <4 x i32> %tmp2583, %sext2587    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul2588, <4 x i32>* %temp_index_v_1
  %tmp2589 = load <4 x i32>* %temp_index_v_1      ; <<4 x i32>> [#uses=1]
  %tmp2590 = extractelement <4 x i32> %tmp2589, i32 0 ; <i32> [#uses=1]
  %tmp2591 = load <4 x i32>* %temp_index_v_1      ; <<4 x i32>> [#uses=1]
  %tmp2592 = extractelement <4 x i32> %tmp2591, i32 1 ; <i32> [#uses=1]
  %add2593 = add nsw i32 %tmp2590, %tmp2592       ; <i32> [#uses=1]
  %tmp2594 = load <4 x i32>* %temp_index_v_1      ; <<4 x i32>> [#uses=1]
  %tmp2595 = extractelement <4 x i32> %tmp2594, i32 2 ; <i32> [#uses=1]
  %add2596 = add nsw i32 %add2593, %tmp2595       ; <i32> [#uses=1]
  store i32 %add2596, i32* %temp_index_1
  %tmp2597 = load i32* %temp_index_1              ; <i32> [#uses=1]
  %tmp2598 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2599 = getelementptr inbounds i32 addrspace(1)* %tmp2598, i32 %tmp2597 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2600 = load i32 addrspace(1)* %arrayidx2599 ; <i32> [#uses=1]
  store i32 %tmp2600, i32* %delta_1
  %tmp2601 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp2602 = load i32* %base_index_1              ; <i32> [#uses=1]
  %add.ptr2603 = getelementptr inbounds i32 addrspace(1)* %tmp2601, i32 %tmp2602 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2604 = load i32* %temp_index_1              ; <i32> [#uses=1]
  %tmp2605 = load i32 addrspace(1)** %LookUp4.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2606 = getelementptr inbounds i32 addrspace(1)* %tmp2605, i32 %tmp2604 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2607 = load i32 addrspace(1)* %arrayidx2606 ; <i32> [#uses=1]
  %add.ptr2608 = getelementptr inbounds i32 addrspace(1)* %add.ptr2603, i32 %tmp2607 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr2608, i32 addrspace(1)** %addr_0_3_1
  %tmp2610 = load i32 addrspace(1)** %addr_0_3_1  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2611 = getelementptr inbounds i32 addrspace(1)* %tmp2610, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2612 = load i32 addrspace(1)* %arrayidx2611 ; <i32> [#uses=1]
  %vecinit2613 = insertelement <4 x i32> undef, i32 %tmp2612, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp2614 = load i32 addrspace(1)** %addr_0_3_1  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2615 = getelementptr inbounds i32 addrspace(1)* %tmp2614, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2616 = load i32 addrspace(1)* %arrayidx2615 ; <i32> [#uses=1]
  %vecinit2617 = insertelement <4 x i32> %vecinit2613, i32 %tmp2616, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp2618 = load i32 addrspace(1)** %addr_0_3_1  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2619 = getelementptr inbounds i32 addrspace(1)* %tmp2618, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2620 = load i32 addrspace(1)* %arrayidx2619 ; <i32> [#uses=1]
  %vecinit2621 = insertelement <4 x i32> %vecinit2617, i32 %tmp2620, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp2622 = load i32 addrspace(1)** %addr_0_3_1  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2623 = getelementptr inbounds i32 addrspace(1)* %tmp2622, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2624 = load i32 addrspace(1)* %arrayidx2623 ; <i32> [#uses=1]
  %vecinit2625 = insertelement <4 x i32> %vecinit2621, i32 %tmp2624, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit2625, <4 x i32>* %.compoundliteral2609
  %tmp2626 = load <4 x i32>* %.compoundliteral2609 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp2626, <4 x i32>* %xmm_tree_0_3_1
  %tmp2627 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp2628 = load <4 x i32>* %xmm_query_element_1 ; <<4 x i32>> [#uses=1]
  %tmp2629 = load <4 x i32>* %xmm_tree_0_3_1      ; <<4 x i32>> [#uses=1]
  %cmp2630 = icmp sgt <4 x i32> %tmp2628, %tmp2629 ; <<4 x i1>> [#uses=1]
  %sext2631 = sext <4 x i1> %cmp2630 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul2632 = mul <4 x i32> %tmp2627, %sext2631    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul2632, <4 x i32>* %temp_index_v_1
  %tmp2633 = load <4 x i32>* %temp_index_v_1      ; <<4 x i32>> [#uses=1]
  %tmp2634 = extractelement <4 x i32> %tmp2633, i32 0 ; <i32> [#uses=1]
  %tmp2635 = load <4 x i32>* %temp_index_v_1      ; <<4 x i32>> [#uses=1]
  %tmp2636 = extractelement <4 x i32> %tmp2635, i32 1 ; <i32> [#uses=1]
  %add2637 = add nsw i32 %tmp2634, %tmp2636       ; <i32> [#uses=1]
  %tmp2638 = load <4 x i32>* %temp_index_v_1      ; <<4 x i32>> [#uses=1]
  %tmp2639 = extractelement <4 x i32> %tmp2638, i32 2 ; <i32> [#uses=1]
  %add2640 = add nsw i32 %add2637, %tmp2639       ; <i32> [#uses=1]
  store i32 %add2640, i32* %temp_index_1
  %tmp2641 = load i32* %delta_1                   ; <i32> [#uses=1]
  %shl2642 = shl i32 %tmp2641, 2                  ; <i32> [#uses=1]
  %tmp2643 = load i32* %temp_index_1              ; <i32> [#uses=1]
  %tmp2644 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2645 = getelementptr inbounds i32 addrspace(1)* %tmp2644, i32 %tmp2643 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2646 = load i32 addrspace(1)* %arrayidx2645 ; <i32> [#uses=1]
  %add2647 = add nsw i32 %shl2642, %tmp2646       ; <i32> [#uses=1]
  store i32 %add2647, i32* %offset3_1
  %tmp2648 = load i32* %offset2_1                 ; <i32> [#uses=1]
  %mul2649 = mul i32 %tmp2648, 16                 ; <i32> [#uses=1]
  %tmp2650 = load i32* %offset3_1                 ; <i32> [#uses=1]
  %add2651 = add nsw i32 %mul2649, %tmp2650       ; <i32> [#uses=1]
  store i32 %add2651, i32* %offset2_1
  %tmp2652 = load i32* %block_base_index_1        ; <i32> [#uses=1]
  %add2653 = add nsw i32 %tmp2652, 15             ; <i32> [#uses=1]
  %tmp2654 = load i32* %offset2_1                 ; <i32> [#uses=1]
  %mul2655 = mul i32 %tmp2654, 15                 ; <i32> [#uses=1]
  %add2656 = add nsw i32 %add2653, %mul2655       ; <i32> [#uses=1]
  store i32 %add2656, i32* %base_index_1
  %tmp2657 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp2658 = load i32* %base_index_1              ; <i32> [#uses=1]
  %add.ptr2659 = getelementptr inbounds i32 addrspace(1)* %tmp2657, i32 %tmp2658 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr2659, i32 16)
  store i32 0, i32* %offset3_1
  %tmp2660 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp2661 = load i32* %base_index_2              ; <i32> [#uses=1]
  %add.ptr2662 = getelementptr inbounds i32 addrspace(1)* %tmp2660, i32 %tmp2661 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr2662, i32 addrspace(1)** %addr_0_3_2
  %tmp2664 = load i32 addrspace(1)** %addr_0_3_2  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2665 = getelementptr inbounds i32 addrspace(1)* %tmp2664, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2666 = load i32 addrspace(1)* %arrayidx2665 ; <i32> [#uses=1]
  %vecinit2667 = insertelement <4 x i32> undef, i32 %tmp2666, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp2668 = load i32 addrspace(1)** %addr_0_3_2  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2669 = getelementptr inbounds i32 addrspace(1)* %tmp2668, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2670 = load i32 addrspace(1)* %arrayidx2669 ; <i32> [#uses=1]
  %vecinit2671 = insertelement <4 x i32> %vecinit2667, i32 %tmp2670, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp2672 = load i32 addrspace(1)** %addr_0_3_2  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2673 = getelementptr inbounds i32 addrspace(1)* %tmp2672, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2674 = load i32 addrspace(1)* %arrayidx2673 ; <i32> [#uses=1]
  %vecinit2675 = insertelement <4 x i32> %vecinit2671, i32 %tmp2674, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp2676 = load i32 addrspace(1)** %addr_0_3_2  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2677 = getelementptr inbounds i32 addrspace(1)* %tmp2676, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2678 = load i32 addrspace(1)* %arrayidx2677 ; <i32> [#uses=1]
  %vecinit2679 = insertelement <4 x i32> %vecinit2675, i32 %tmp2678, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit2679, <4 x i32>* %.compoundliteral2663
  %tmp2680 = load <4 x i32>* %.compoundliteral2663 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp2680, <4 x i32>* %xmm_tree_0_3_2
  %tmp2681 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp2682 = load <4 x i32>* %xmm_query_element_2 ; <<4 x i32>> [#uses=1]
  %tmp2683 = load <4 x i32>* %xmm_tree_0_3_2      ; <<4 x i32>> [#uses=1]
  %cmp2684 = icmp sgt <4 x i32> %tmp2682, %tmp2683 ; <<4 x i1>> [#uses=1]
  %sext2685 = sext <4 x i1> %cmp2684 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul2686 = mul <4 x i32> %tmp2681, %sext2685    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul2686, <4 x i32>* %temp_index_v_2
  %tmp2687 = load <4 x i32>* %temp_index_v_2      ; <<4 x i32>> [#uses=1]
  %tmp2688 = extractelement <4 x i32> %tmp2687, i32 0 ; <i32> [#uses=1]
  %tmp2689 = load <4 x i32>* %temp_index_v_2      ; <<4 x i32>> [#uses=1]
  %tmp2690 = extractelement <4 x i32> %tmp2689, i32 1 ; <i32> [#uses=1]
  %add2691 = add nsw i32 %tmp2688, %tmp2690       ; <i32> [#uses=1]
  %tmp2692 = load <4 x i32>* %temp_index_v_2      ; <<4 x i32>> [#uses=1]
  %tmp2693 = extractelement <4 x i32> %tmp2692, i32 2 ; <i32> [#uses=1]
  %add2694 = add nsw i32 %add2691, %tmp2693       ; <i32> [#uses=1]
  store i32 %add2694, i32* %temp_index_2
  %tmp2695 = load i32* %temp_index_2              ; <i32> [#uses=1]
  %tmp2696 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2697 = getelementptr inbounds i32 addrspace(1)* %tmp2696, i32 %tmp2695 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2698 = load i32 addrspace(1)* %arrayidx2697 ; <i32> [#uses=1]
  store i32 %tmp2698, i32* %delta_2
  %tmp2699 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp2700 = load i32* %base_index_2              ; <i32> [#uses=1]
  %add.ptr2701 = getelementptr inbounds i32 addrspace(1)* %tmp2699, i32 %tmp2700 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2702 = load i32* %temp_index_2              ; <i32> [#uses=1]
  %tmp2703 = load i32 addrspace(1)** %LookUp4.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2704 = getelementptr inbounds i32 addrspace(1)* %tmp2703, i32 %tmp2702 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2705 = load i32 addrspace(1)* %arrayidx2704 ; <i32> [#uses=1]
  %add.ptr2706 = getelementptr inbounds i32 addrspace(1)* %add.ptr2701, i32 %tmp2705 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr2706, i32 addrspace(1)** %addr_0_3_2
  %tmp2708 = load i32 addrspace(1)** %addr_0_3_2  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2709 = getelementptr inbounds i32 addrspace(1)* %tmp2708, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2710 = load i32 addrspace(1)* %arrayidx2709 ; <i32> [#uses=1]
  %vecinit2711 = insertelement <4 x i32> undef, i32 %tmp2710, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp2712 = load i32 addrspace(1)** %addr_0_3_2  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2713 = getelementptr inbounds i32 addrspace(1)* %tmp2712, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2714 = load i32 addrspace(1)* %arrayidx2713 ; <i32> [#uses=1]
  %vecinit2715 = insertelement <4 x i32> %vecinit2711, i32 %tmp2714, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp2716 = load i32 addrspace(1)** %addr_0_3_2  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2717 = getelementptr inbounds i32 addrspace(1)* %tmp2716, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2718 = load i32 addrspace(1)* %arrayidx2717 ; <i32> [#uses=1]
  %vecinit2719 = insertelement <4 x i32> %vecinit2715, i32 %tmp2718, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp2720 = load i32 addrspace(1)** %addr_0_3_2  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2721 = getelementptr inbounds i32 addrspace(1)* %tmp2720, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2722 = load i32 addrspace(1)* %arrayidx2721 ; <i32> [#uses=1]
  %vecinit2723 = insertelement <4 x i32> %vecinit2719, i32 %tmp2722, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit2723, <4 x i32>* %.compoundliteral2707
  %tmp2724 = load <4 x i32>* %.compoundliteral2707 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp2724, <4 x i32>* %xmm_tree_0_3_2
  %tmp2725 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp2726 = load <4 x i32>* %xmm_query_element_2 ; <<4 x i32>> [#uses=1]
  %tmp2727 = load <4 x i32>* %xmm_tree_0_3_2      ; <<4 x i32>> [#uses=1]
  %cmp2728 = icmp sgt <4 x i32> %tmp2726, %tmp2727 ; <<4 x i1>> [#uses=1]
  %sext2729 = sext <4 x i1> %cmp2728 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul2730 = mul <4 x i32> %tmp2725, %sext2729    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul2730, <4 x i32>* %temp_index_v_2
  %tmp2731 = load <4 x i32>* %temp_index_v_2      ; <<4 x i32>> [#uses=1]
  %tmp2732 = extractelement <4 x i32> %tmp2731, i32 0 ; <i32> [#uses=1]
  %tmp2733 = load <4 x i32>* %temp_index_v_2      ; <<4 x i32>> [#uses=1]
  %tmp2734 = extractelement <4 x i32> %tmp2733, i32 1 ; <i32> [#uses=1]
  %add2735 = add nsw i32 %tmp2732, %tmp2734       ; <i32> [#uses=1]
  %tmp2736 = load <4 x i32>* %temp_index_v_2      ; <<4 x i32>> [#uses=1]
  %tmp2737 = extractelement <4 x i32> %tmp2736, i32 2 ; <i32> [#uses=1]
  %add2738 = add nsw i32 %add2735, %tmp2737       ; <i32> [#uses=1]
  store i32 %add2738, i32* %temp_index_2
  %tmp2739 = load i32* %delta_2                   ; <i32> [#uses=1]
  %shl2740 = shl i32 %tmp2739, 2                  ; <i32> [#uses=1]
  %tmp2741 = load i32* %temp_index_2              ; <i32> [#uses=1]
  %tmp2742 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2743 = getelementptr inbounds i32 addrspace(1)* %tmp2742, i32 %tmp2741 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2744 = load i32 addrspace(1)* %arrayidx2743 ; <i32> [#uses=1]
  %add2745 = add nsw i32 %shl2740, %tmp2744       ; <i32> [#uses=1]
  store i32 %add2745, i32* %offset3_2
  %tmp2746 = load i32* %offset2_2                 ; <i32> [#uses=1]
  %mul2747 = mul i32 %tmp2746, 16                 ; <i32> [#uses=1]
  %tmp2748 = load i32* %offset3_2                 ; <i32> [#uses=1]
  %add2749 = add nsw i32 %mul2747, %tmp2748       ; <i32> [#uses=1]
  store i32 %add2749, i32* %offset2_2
  %tmp2750 = load i32* %block_base_index_2        ; <i32> [#uses=1]
  %add2751 = add nsw i32 %tmp2750, 15             ; <i32> [#uses=1]
  %tmp2752 = load i32* %offset2_2                 ; <i32> [#uses=1]
  %mul2753 = mul i32 %tmp2752, 15                 ; <i32> [#uses=1]
  %add2754 = add nsw i32 %add2751, %mul2753       ; <i32> [#uses=1]
  store i32 %add2754, i32* %base_index_2
  %tmp2755 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp2756 = load i32* %base_index_2              ; <i32> [#uses=1]
  %add.ptr2757 = getelementptr inbounds i32 addrspace(1)* %tmp2755, i32 %tmp2756 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr2757, i32 16)
  store i32 0, i32* %offset3_2
  %tmp2758 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp2759 = load i32* %base_index_3              ; <i32> [#uses=1]
  %add.ptr2760 = getelementptr inbounds i32 addrspace(1)* %tmp2758, i32 %tmp2759 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr2760, i32 addrspace(1)** %addr_0_3_3
  %tmp2762 = load i32 addrspace(1)** %addr_0_3_3  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2763 = getelementptr inbounds i32 addrspace(1)* %tmp2762, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2764 = load i32 addrspace(1)* %arrayidx2763 ; <i32> [#uses=1]
  %vecinit2765 = insertelement <4 x i32> undef, i32 %tmp2764, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp2766 = load i32 addrspace(1)** %addr_0_3_3  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2767 = getelementptr inbounds i32 addrspace(1)* %tmp2766, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2768 = load i32 addrspace(1)* %arrayidx2767 ; <i32> [#uses=1]
  %vecinit2769 = insertelement <4 x i32> %vecinit2765, i32 %tmp2768, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp2770 = load i32 addrspace(1)** %addr_0_3_3  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2771 = getelementptr inbounds i32 addrspace(1)* %tmp2770, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2772 = load i32 addrspace(1)* %arrayidx2771 ; <i32> [#uses=1]
  %vecinit2773 = insertelement <4 x i32> %vecinit2769, i32 %tmp2772, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp2774 = load i32 addrspace(1)** %addr_0_3_3  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2775 = getelementptr inbounds i32 addrspace(1)* %tmp2774, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2776 = load i32 addrspace(1)* %arrayidx2775 ; <i32> [#uses=1]
  %vecinit2777 = insertelement <4 x i32> %vecinit2773, i32 %tmp2776, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit2777, <4 x i32>* %.compoundliteral2761
  %tmp2778 = load <4 x i32>* %.compoundliteral2761 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp2778, <4 x i32>* %xmm_tree_0_3_3
  %tmp2779 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp2780 = load <4 x i32>* %xmm_query_element_3 ; <<4 x i32>> [#uses=1]
  %tmp2781 = load <4 x i32>* %xmm_tree_0_3_3      ; <<4 x i32>> [#uses=1]
  %cmp2782 = icmp sgt <4 x i32> %tmp2780, %tmp2781 ; <<4 x i1>> [#uses=1]
  %sext2783 = sext <4 x i1> %cmp2782 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul2784 = mul <4 x i32> %tmp2779, %sext2783    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul2784, <4 x i32>* %temp_index_v_3
  %tmp2785 = load <4 x i32>* %temp_index_v_3      ; <<4 x i32>> [#uses=1]
  %tmp2786 = extractelement <4 x i32> %tmp2785, i32 0 ; <i32> [#uses=1]
  %tmp2787 = load <4 x i32>* %temp_index_v_3      ; <<4 x i32>> [#uses=1]
  %tmp2788 = extractelement <4 x i32> %tmp2787, i32 1 ; <i32> [#uses=1]
  %add2789 = add nsw i32 %tmp2786, %tmp2788       ; <i32> [#uses=1]
  %tmp2790 = load <4 x i32>* %temp_index_v_3      ; <<4 x i32>> [#uses=1]
  %tmp2791 = extractelement <4 x i32> %tmp2790, i32 2 ; <i32> [#uses=1]
  %add2792 = add nsw i32 %add2789, %tmp2791       ; <i32> [#uses=1]
  store i32 %add2792, i32* %temp_index_3
  %tmp2793 = load i32* %temp_index_3              ; <i32> [#uses=1]
  %tmp2794 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2795 = getelementptr inbounds i32 addrspace(1)* %tmp2794, i32 %tmp2793 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2796 = load i32 addrspace(1)* %arrayidx2795 ; <i32> [#uses=1]
  store i32 %tmp2796, i32* %delta_3
  %tmp2797 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp2798 = load i32* %base_index_3              ; <i32> [#uses=1]
  %add.ptr2799 = getelementptr inbounds i32 addrspace(1)* %tmp2797, i32 %tmp2798 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2800 = load i32* %temp_index_3              ; <i32> [#uses=1]
  %tmp2801 = load i32 addrspace(1)** %LookUp4.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2802 = getelementptr inbounds i32 addrspace(1)* %tmp2801, i32 %tmp2800 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2803 = load i32 addrspace(1)* %arrayidx2802 ; <i32> [#uses=1]
  %add.ptr2804 = getelementptr inbounds i32 addrspace(1)* %add.ptr2799, i32 %tmp2803 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr2804, i32 addrspace(1)** %addr_0_3_3
  %tmp2806 = load i32 addrspace(1)** %addr_0_3_3  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2807 = getelementptr inbounds i32 addrspace(1)* %tmp2806, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2808 = load i32 addrspace(1)* %arrayidx2807 ; <i32> [#uses=1]
  %vecinit2809 = insertelement <4 x i32> undef, i32 %tmp2808, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp2810 = load i32 addrspace(1)** %addr_0_3_3  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2811 = getelementptr inbounds i32 addrspace(1)* %tmp2810, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2812 = load i32 addrspace(1)* %arrayidx2811 ; <i32> [#uses=1]
  %vecinit2813 = insertelement <4 x i32> %vecinit2809, i32 %tmp2812, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp2814 = load i32 addrspace(1)** %addr_0_3_3  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2815 = getelementptr inbounds i32 addrspace(1)* %tmp2814, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2816 = load i32 addrspace(1)* %arrayidx2815 ; <i32> [#uses=1]
  %vecinit2817 = insertelement <4 x i32> %vecinit2813, i32 %tmp2816, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp2818 = load i32 addrspace(1)** %addr_0_3_3  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2819 = getelementptr inbounds i32 addrspace(1)* %tmp2818, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2820 = load i32 addrspace(1)* %arrayidx2819 ; <i32> [#uses=1]
  %vecinit2821 = insertelement <4 x i32> %vecinit2817, i32 %tmp2820, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit2821, <4 x i32>* %.compoundliteral2805
  %tmp2822 = load <4 x i32>* %.compoundliteral2805 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp2822, <4 x i32>* %xmm_tree_0_3_3
  %tmp2823 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp2824 = load <4 x i32>* %xmm_query_element_3 ; <<4 x i32>> [#uses=1]
  %tmp2825 = load <4 x i32>* %xmm_tree_0_3_3      ; <<4 x i32>> [#uses=1]
  %cmp2826 = icmp sgt <4 x i32> %tmp2824, %tmp2825 ; <<4 x i1>> [#uses=1]
  %sext2827 = sext <4 x i1> %cmp2826 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul2828 = mul <4 x i32> %tmp2823, %sext2827    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul2828, <4 x i32>* %temp_index_v_3
  %tmp2829 = load <4 x i32>* %temp_index_v_3      ; <<4 x i32>> [#uses=1]
  %tmp2830 = extractelement <4 x i32> %tmp2829, i32 0 ; <i32> [#uses=1]
  %tmp2831 = load <4 x i32>* %temp_index_v_3      ; <<4 x i32>> [#uses=1]
  %tmp2832 = extractelement <4 x i32> %tmp2831, i32 1 ; <i32> [#uses=1]
  %add2833 = add nsw i32 %tmp2830, %tmp2832       ; <i32> [#uses=1]
  %tmp2834 = load <4 x i32>* %temp_index_v_3      ; <<4 x i32>> [#uses=1]
  %tmp2835 = extractelement <4 x i32> %tmp2834, i32 2 ; <i32> [#uses=1]
  %add2836 = add nsw i32 %add2833, %tmp2835       ; <i32> [#uses=1]
  store i32 %add2836, i32* %temp_index_3
  %tmp2837 = load i32* %delta_3                   ; <i32> [#uses=1]
  %shl2838 = shl i32 %tmp2837, 2                  ; <i32> [#uses=1]
  %tmp2839 = load i32* %temp_index_3              ; <i32> [#uses=1]
  %tmp2840 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2841 = getelementptr inbounds i32 addrspace(1)* %tmp2840, i32 %tmp2839 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2842 = load i32 addrspace(1)* %arrayidx2841 ; <i32> [#uses=1]
  %add2843 = add nsw i32 %shl2838, %tmp2842       ; <i32> [#uses=1]
  store i32 %add2843, i32* %offset3_3
  %tmp2844 = load i32* %offset2_3                 ; <i32> [#uses=1]
  %mul2845 = mul i32 %tmp2844, 16                 ; <i32> [#uses=1]
  %tmp2846 = load i32* %offset3_3                 ; <i32> [#uses=1]
  %add2847 = add nsw i32 %mul2845, %tmp2846       ; <i32> [#uses=1]
  store i32 %add2847, i32* %offset2_3
  %tmp2848 = load i32* %block_base_index_3        ; <i32> [#uses=1]
  %add2849 = add nsw i32 %tmp2848, 15             ; <i32> [#uses=1]
  %tmp2850 = load i32* %offset2_3                 ; <i32> [#uses=1]
  %mul2851 = mul i32 %tmp2850, 15                 ; <i32> [#uses=1]
  %add2852 = add nsw i32 %add2849, %mul2851       ; <i32> [#uses=1]
  store i32 %add2852, i32* %base_index_3
  %tmp2853 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp2854 = load i32* %base_index_3              ; <i32> [#uses=1]
  %add.ptr2855 = getelementptr inbounds i32 addrspace(1)* %tmp2853, i32 %tmp2854 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr2855, i32 16)
  store i32 0, i32* %offset3_3
  %tmp2856 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp2857 = load i32* %base_index_4              ; <i32> [#uses=1]
  %add.ptr2858 = getelementptr inbounds i32 addrspace(1)* %tmp2856, i32 %tmp2857 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr2858, i32 addrspace(1)** %addr_0_3_4
  %tmp2860 = load i32 addrspace(1)** %addr_0_3_4  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2861 = getelementptr inbounds i32 addrspace(1)* %tmp2860, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2862 = load i32 addrspace(1)* %arrayidx2861 ; <i32> [#uses=1]
  %vecinit2863 = insertelement <4 x i32> undef, i32 %tmp2862, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp2864 = load i32 addrspace(1)** %addr_0_3_4  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2865 = getelementptr inbounds i32 addrspace(1)* %tmp2864, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2866 = load i32 addrspace(1)* %arrayidx2865 ; <i32> [#uses=1]
  %vecinit2867 = insertelement <4 x i32> %vecinit2863, i32 %tmp2866, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp2868 = load i32 addrspace(1)** %addr_0_3_4  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2869 = getelementptr inbounds i32 addrspace(1)* %tmp2868, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2870 = load i32 addrspace(1)* %arrayidx2869 ; <i32> [#uses=1]
  %vecinit2871 = insertelement <4 x i32> %vecinit2867, i32 %tmp2870, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp2872 = load i32 addrspace(1)** %addr_0_3_4  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2873 = getelementptr inbounds i32 addrspace(1)* %tmp2872, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2874 = load i32 addrspace(1)* %arrayidx2873 ; <i32> [#uses=1]
  %vecinit2875 = insertelement <4 x i32> %vecinit2871, i32 %tmp2874, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit2875, <4 x i32>* %.compoundliteral2859
  %tmp2876 = load <4 x i32>* %.compoundliteral2859 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp2876, <4 x i32>* %xmm_tree_0_3_4
  %tmp2877 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp2878 = load <4 x i32>* %xmm_query_element_4 ; <<4 x i32>> [#uses=1]
  %tmp2879 = load <4 x i32>* %xmm_tree_0_3_4      ; <<4 x i32>> [#uses=1]
  %cmp2880 = icmp sgt <4 x i32> %tmp2878, %tmp2879 ; <<4 x i1>> [#uses=1]
  %sext2881 = sext <4 x i1> %cmp2880 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul2882 = mul <4 x i32> %tmp2877, %sext2881    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul2882, <4 x i32>* %temp_index_v_4
  %tmp2883 = load <4 x i32>* %temp_index_v_4      ; <<4 x i32>> [#uses=1]
  %tmp2884 = extractelement <4 x i32> %tmp2883, i32 0 ; <i32> [#uses=1]
  %tmp2885 = load <4 x i32>* %temp_index_v_4      ; <<4 x i32>> [#uses=1]
  %tmp2886 = extractelement <4 x i32> %tmp2885, i32 1 ; <i32> [#uses=1]
  %add2887 = add nsw i32 %tmp2884, %tmp2886       ; <i32> [#uses=1]
  %tmp2888 = load <4 x i32>* %temp_index_v_4      ; <<4 x i32>> [#uses=1]
  %tmp2889 = extractelement <4 x i32> %tmp2888, i32 2 ; <i32> [#uses=1]
  %add2890 = add nsw i32 %add2887, %tmp2889       ; <i32> [#uses=1]
  store i32 %add2890, i32* %temp_index_4
  %tmp2891 = load i32* %temp_index_4              ; <i32> [#uses=1]
  %tmp2892 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2893 = getelementptr inbounds i32 addrspace(1)* %tmp2892, i32 %tmp2891 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2894 = load i32 addrspace(1)* %arrayidx2893 ; <i32> [#uses=1]
  store i32 %tmp2894, i32* %delta_4
  %tmp2895 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp2896 = load i32* %base_index_4              ; <i32> [#uses=1]
  %add.ptr2897 = getelementptr inbounds i32 addrspace(1)* %tmp2895, i32 %tmp2896 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2898 = load i32* %temp_index_4              ; <i32> [#uses=1]
  %tmp2899 = load i32 addrspace(1)** %LookUp4.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2900 = getelementptr inbounds i32 addrspace(1)* %tmp2899, i32 %tmp2898 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2901 = load i32 addrspace(1)* %arrayidx2900 ; <i32> [#uses=1]
  %add.ptr2902 = getelementptr inbounds i32 addrspace(1)* %add.ptr2897, i32 %tmp2901 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr2902, i32 addrspace(1)** %addr_0_3_4
  %tmp2904 = load i32 addrspace(1)** %addr_0_3_4  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2905 = getelementptr inbounds i32 addrspace(1)* %tmp2904, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2906 = load i32 addrspace(1)* %arrayidx2905 ; <i32> [#uses=1]
  %vecinit2907 = insertelement <4 x i32> undef, i32 %tmp2906, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp2908 = load i32 addrspace(1)** %addr_0_3_4  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2909 = getelementptr inbounds i32 addrspace(1)* %tmp2908, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2910 = load i32 addrspace(1)* %arrayidx2909 ; <i32> [#uses=1]
  %vecinit2911 = insertelement <4 x i32> %vecinit2907, i32 %tmp2910, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp2912 = load i32 addrspace(1)** %addr_0_3_4  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2913 = getelementptr inbounds i32 addrspace(1)* %tmp2912, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2914 = load i32 addrspace(1)* %arrayidx2913 ; <i32> [#uses=1]
  %vecinit2915 = insertelement <4 x i32> %vecinit2911, i32 %tmp2914, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp2916 = load i32 addrspace(1)** %addr_0_3_4  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2917 = getelementptr inbounds i32 addrspace(1)* %tmp2916, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2918 = load i32 addrspace(1)* %arrayidx2917 ; <i32> [#uses=1]
  %vecinit2919 = insertelement <4 x i32> %vecinit2915, i32 %tmp2918, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit2919, <4 x i32>* %.compoundliteral2903
  %tmp2920 = load <4 x i32>* %.compoundliteral2903 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp2920, <4 x i32>* %xmm_tree_0_3_4
  %tmp2921 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp2922 = load <4 x i32>* %xmm_query_element_4 ; <<4 x i32>> [#uses=1]
  %tmp2923 = load <4 x i32>* %xmm_tree_0_3_4      ; <<4 x i32>> [#uses=1]
  %cmp2924 = icmp sgt <4 x i32> %tmp2922, %tmp2923 ; <<4 x i1>> [#uses=1]
  %sext2925 = sext <4 x i1> %cmp2924 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul2926 = mul <4 x i32> %tmp2921, %sext2925    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul2926, <4 x i32>* %temp_index_v_4
  %tmp2927 = load <4 x i32>* %temp_index_v_4      ; <<4 x i32>> [#uses=1]
  %tmp2928 = extractelement <4 x i32> %tmp2927, i32 0 ; <i32> [#uses=1]
  %tmp2929 = load <4 x i32>* %temp_index_v_4      ; <<4 x i32>> [#uses=1]
  %tmp2930 = extractelement <4 x i32> %tmp2929, i32 1 ; <i32> [#uses=1]
  %add2931 = add nsw i32 %tmp2928, %tmp2930       ; <i32> [#uses=1]
  %tmp2932 = load <4 x i32>* %temp_index_v_4      ; <<4 x i32>> [#uses=1]
  %tmp2933 = extractelement <4 x i32> %tmp2932, i32 2 ; <i32> [#uses=1]
  %add2934 = add nsw i32 %add2931, %tmp2933       ; <i32> [#uses=1]
  store i32 %add2934, i32* %temp_index_4
  %tmp2935 = load i32* %delta_4                   ; <i32> [#uses=1]
  %shl2936 = shl i32 %tmp2935, 2                  ; <i32> [#uses=1]
  %tmp2937 = load i32* %temp_index_4              ; <i32> [#uses=1]
  %tmp2938 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2939 = getelementptr inbounds i32 addrspace(1)* %tmp2938, i32 %tmp2937 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2940 = load i32 addrspace(1)* %arrayidx2939 ; <i32> [#uses=1]
  %add2941 = add nsw i32 %shl2936, %tmp2940       ; <i32> [#uses=1]
  store i32 %add2941, i32* %offset3_4
  %tmp2942 = load i32* %offset2_4                 ; <i32> [#uses=1]
  %mul2943 = mul i32 %tmp2942, 16                 ; <i32> [#uses=1]
  %tmp2944 = load i32* %offset3_4                 ; <i32> [#uses=1]
  %add2945 = add nsw i32 %mul2943, %tmp2944       ; <i32> [#uses=1]
  store i32 %add2945, i32* %offset2_4
  %tmp2946 = load i32* %block_base_index_4        ; <i32> [#uses=1]
  %add2947 = add nsw i32 %tmp2946, 15             ; <i32> [#uses=1]
  %tmp2948 = load i32* %offset2_4                 ; <i32> [#uses=1]
  %mul2949 = mul i32 %tmp2948, 15                 ; <i32> [#uses=1]
  %add2950 = add nsw i32 %add2947, %mul2949       ; <i32> [#uses=1]
  store i32 %add2950, i32* %base_index_4
  %tmp2951 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp2952 = load i32* %base_index_4              ; <i32> [#uses=1]
  %add.ptr2953 = getelementptr inbounds i32 addrspace(1)* %tmp2951, i32 %tmp2952 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr2953, i32 16)
  store i32 0, i32* %offset3_4
  %tmp2954 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp2955 = load i32* %base_index_5              ; <i32> [#uses=1]
  %add.ptr2956 = getelementptr inbounds i32 addrspace(1)* %tmp2954, i32 %tmp2955 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr2956, i32 addrspace(1)** %addr_0_3_5
  %tmp2958 = load i32 addrspace(1)** %addr_0_3_5  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2959 = getelementptr inbounds i32 addrspace(1)* %tmp2958, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2960 = load i32 addrspace(1)* %arrayidx2959 ; <i32> [#uses=1]
  %vecinit2961 = insertelement <4 x i32> undef, i32 %tmp2960, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp2962 = load i32 addrspace(1)** %addr_0_3_5  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2963 = getelementptr inbounds i32 addrspace(1)* %tmp2962, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2964 = load i32 addrspace(1)* %arrayidx2963 ; <i32> [#uses=1]
  %vecinit2965 = insertelement <4 x i32> %vecinit2961, i32 %tmp2964, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp2966 = load i32 addrspace(1)** %addr_0_3_5  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2967 = getelementptr inbounds i32 addrspace(1)* %tmp2966, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2968 = load i32 addrspace(1)* %arrayidx2967 ; <i32> [#uses=1]
  %vecinit2969 = insertelement <4 x i32> %vecinit2965, i32 %tmp2968, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp2970 = load i32 addrspace(1)** %addr_0_3_5  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2971 = getelementptr inbounds i32 addrspace(1)* %tmp2970, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2972 = load i32 addrspace(1)* %arrayidx2971 ; <i32> [#uses=1]
  %vecinit2973 = insertelement <4 x i32> %vecinit2969, i32 %tmp2972, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit2973, <4 x i32>* %.compoundliteral2957
  %tmp2974 = load <4 x i32>* %.compoundliteral2957 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp2974, <4 x i32>* %xmm_tree_0_3_5
  %tmp2975 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp2976 = load <4 x i32>* %xmm_query_element_5 ; <<4 x i32>> [#uses=1]
  %tmp2977 = load <4 x i32>* %xmm_tree_0_3_5      ; <<4 x i32>> [#uses=1]
  %cmp2978 = icmp sgt <4 x i32> %tmp2976, %tmp2977 ; <<4 x i1>> [#uses=1]
  %sext2979 = sext <4 x i1> %cmp2978 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul2980 = mul <4 x i32> %tmp2975, %sext2979    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul2980, <4 x i32>* %temp_index_v_5
  %tmp2981 = load <4 x i32>* %temp_index_v_5      ; <<4 x i32>> [#uses=1]
  %tmp2982 = extractelement <4 x i32> %tmp2981, i32 0 ; <i32> [#uses=1]
  %tmp2983 = load <4 x i32>* %temp_index_v_5      ; <<4 x i32>> [#uses=1]
  %tmp2984 = extractelement <4 x i32> %tmp2983, i32 1 ; <i32> [#uses=1]
  %add2985 = add nsw i32 %tmp2982, %tmp2984       ; <i32> [#uses=1]
  %tmp2986 = load <4 x i32>* %temp_index_v_5      ; <<4 x i32>> [#uses=1]
  %tmp2987 = extractelement <4 x i32> %tmp2986, i32 2 ; <i32> [#uses=1]
  %add2988 = add nsw i32 %add2985, %tmp2987       ; <i32> [#uses=1]
  store i32 %add2988, i32* %temp_index_5
  %tmp2989 = load i32* %temp_index_5              ; <i32> [#uses=1]
  %tmp2990 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2991 = getelementptr inbounds i32 addrspace(1)* %tmp2990, i32 %tmp2989 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2992 = load i32 addrspace(1)* %arrayidx2991 ; <i32> [#uses=1]
  store i32 %tmp2992, i32* %delta_5
  %tmp2993 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp2994 = load i32* %base_index_5              ; <i32> [#uses=1]
  %add.ptr2995 = getelementptr inbounds i32 addrspace(1)* %tmp2993, i32 %tmp2994 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2996 = load i32* %temp_index_5              ; <i32> [#uses=1]
  %tmp2997 = load i32 addrspace(1)** %LookUp4.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx2998 = getelementptr inbounds i32 addrspace(1)* %tmp2997, i32 %tmp2996 ; <i32 addrspace(1)*> [#uses=1]
  %tmp2999 = load i32 addrspace(1)* %arrayidx2998 ; <i32> [#uses=1]
  %add.ptr3000 = getelementptr inbounds i32 addrspace(1)* %add.ptr2995, i32 %tmp2999 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr3000, i32 addrspace(1)** %addr_0_3_5
  %tmp3002 = load i32 addrspace(1)** %addr_0_3_5  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3003 = getelementptr inbounds i32 addrspace(1)* %tmp3002, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3004 = load i32 addrspace(1)* %arrayidx3003 ; <i32> [#uses=1]
  %vecinit3005 = insertelement <4 x i32> undef, i32 %tmp3004, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp3006 = load i32 addrspace(1)** %addr_0_3_5  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3007 = getelementptr inbounds i32 addrspace(1)* %tmp3006, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3008 = load i32 addrspace(1)* %arrayidx3007 ; <i32> [#uses=1]
  %vecinit3009 = insertelement <4 x i32> %vecinit3005, i32 %tmp3008, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp3010 = load i32 addrspace(1)** %addr_0_3_5  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3011 = getelementptr inbounds i32 addrspace(1)* %tmp3010, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3012 = load i32 addrspace(1)* %arrayidx3011 ; <i32> [#uses=1]
  %vecinit3013 = insertelement <4 x i32> %vecinit3009, i32 %tmp3012, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp3014 = load i32 addrspace(1)** %addr_0_3_5  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3015 = getelementptr inbounds i32 addrspace(1)* %tmp3014, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3016 = load i32 addrspace(1)* %arrayidx3015 ; <i32> [#uses=1]
  %vecinit3017 = insertelement <4 x i32> %vecinit3013, i32 %tmp3016, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit3017, <4 x i32>* %.compoundliteral3001
  %tmp3018 = load <4 x i32>* %.compoundliteral3001 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp3018, <4 x i32>* %xmm_tree_0_3_5
  %tmp3019 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp3020 = load <4 x i32>* %xmm_query_element_5 ; <<4 x i32>> [#uses=1]
  %tmp3021 = load <4 x i32>* %xmm_tree_0_3_5      ; <<4 x i32>> [#uses=1]
  %cmp3022 = icmp sgt <4 x i32> %tmp3020, %tmp3021 ; <<4 x i1>> [#uses=1]
  %sext3023 = sext <4 x i1> %cmp3022 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul3024 = mul <4 x i32> %tmp3019, %sext3023    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul3024, <4 x i32>* %temp_index_v_5
  %tmp3025 = load <4 x i32>* %temp_index_v_5      ; <<4 x i32>> [#uses=1]
  %tmp3026 = extractelement <4 x i32> %tmp3025, i32 0 ; <i32> [#uses=1]
  %tmp3027 = load <4 x i32>* %temp_index_v_5      ; <<4 x i32>> [#uses=1]
  %tmp3028 = extractelement <4 x i32> %tmp3027, i32 1 ; <i32> [#uses=1]
  %add3029 = add nsw i32 %tmp3026, %tmp3028       ; <i32> [#uses=1]
  %tmp3030 = load <4 x i32>* %temp_index_v_5      ; <<4 x i32>> [#uses=1]
  %tmp3031 = extractelement <4 x i32> %tmp3030, i32 2 ; <i32> [#uses=1]
  %add3032 = add nsw i32 %add3029, %tmp3031       ; <i32> [#uses=1]
  store i32 %add3032, i32* %temp_index_5
  %tmp3033 = load i32* %delta_5                   ; <i32> [#uses=1]
  %shl3034 = shl i32 %tmp3033, 2                  ; <i32> [#uses=1]
  %tmp3035 = load i32* %temp_index_5              ; <i32> [#uses=1]
  %tmp3036 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3037 = getelementptr inbounds i32 addrspace(1)* %tmp3036, i32 %tmp3035 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3038 = load i32 addrspace(1)* %arrayidx3037 ; <i32> [#uses=1]
  %add3039 = add nsw i32 %shl3034, %tmp3038       ; <i32> [#uses=1]
  store i32 %add3039, i32* %offset3_5
  %tmp3040 = load i32* %offset2_5                 ; <i32> [#uses=1]
  %mul3041 = mul i32 %tmp3040, 16                 ; <i32> [#uses=1]
  %tmp3042 = load i32* %offset3_5                 ; <i32> [#uses=1]
  %add3043 = add nsw i32 %mul3041, %tmp3042       ; <i32> [#uses=1]
  store i32 %add3043, i32* %offset2_5
  %tmp3044 = load i32* %block_base_index_5        ; <i32> [#uses=1]
  %add3045 = add nsw i32 %tmp3044, 15             ; <i32> [#uses=1]
  %tmp3046 = load i32* %offset2_5                 ; <i32> [#uses=1]
  %mul3047 = mul i32 %tmp3046, 15                 ; <i32> [#uses=1]
  %add3048 = add nsw i32 %add3045, %mul3047       ; <i32> [#uses=1]
  store i32 %add3048, i32* %base_index_5
  %tmp3049 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp3050 = load i32* %base_index_5              ; <i32> [#uses=1]
  %add.ptr3051 = getelementptr inbounds i32 addrspace(1)* %tmp3049, i32 %tmp3050 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr3051, i32 16)
  store i32 0, i32* %offset3_5
  %tmp3052 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp3053 = load i32* %base_index_6              ; <i32> [#uses=1]
  %add.ptr3054 = getelementptr inbounds i32 addrspace(1)* %tmp3052, i32 %tmp3053 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr3054, i32 addrspace(1)** %addr_0_3_6
  %tmp3056 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3057 = getelementptr inbounds i32 addrspace(1)* %tmp3056, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3058 = load i32 addrspace(1)* %arrayidx3057 ; <i32> [#uses=1]
  %vecinit3059 = insertelement <4 x i32> undef, i32 %tmp3058, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp3060 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3061 = getelementptr inbounds i32 addrspace(1)* %tmp3060, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3062 = load i32 addrspace(1)* %arrayidx3061 ; <i32> [#uses=1]
  %vecinit3063 = insertelement <4 x i32> %vecinit3059, i32 %tmp3062, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp3064 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3065 = getelementptr inbounds i32 addrspace(1)* %tmp3064, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3066 = load i32 addrspace(1)* %arrayidx3065 ; <i32> [#uses=1]
  %vecinit3067 = insertelement <4 x i32> %vecinit3063, i32 %tmp3066, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp3068 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3069 = getelementptr inbounds i32 addrspace(1)* %tmp3068, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3070 = load i32 addrspace(1)* %arrayidx3069 ; <i32> [#uses=1]
  %vecinit3071 = insertelement <4 x i32> %vecinit3067, i32 %tmp3070, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit3071, <4 x i32>* %.compoundliteral3055
  %tmp3072 = load <4 x i32>* %.compoundliteral3055 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp3072, <4 x i32>* %xmm_tree_0_3_6
  %tmp3073 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp3074 = load <4 x i32>* %xmm_query_element_6 ; <<4 x i32>> [#uses=1]
  %tmp3075 = load <4 x i32>* %xmm_tree_0_3_6      ; <<4 x i32>> [#uses=1]
  %cmp3076 = icmp sgt <4 x i32> %tmp3074, %tmp3075 ; <<4 x i1>> [#uses=1]
  %sext3077 = sext <4 x i1> %cmp3076 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul3078 = mul <4 x i32> %tmp3073, %sext3077    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul3078, <4 x i32>* %temp_index_v_6
  %tmp3079 = load <4 x i32>* %temp_index_v_6      ; <<4 x i32>> [#uses=1]
  %tmp3080 = extractelement <4 x i32> %tmp3079, i32 0 ; <i32> [#uses=1]
  %tmp3081 = load <4 x i32>* %temp_index_v_6      ; <<4 x i32>> [#uses=1]
  %tmp3082 = extractelement <4 x i32> %tmp3081, i32 1 ; <i32> [#uses=1]
  %add3083 = add nsw i32 %tmp3080, %tmp3082       ; <i32> [#uses=1]
  %tmp3084 = load <4 x i32>* %temp_index_v_6      ; <<4 x i32>> [#uses=1]
  %tmp3085 = extractelement <4 x i32> %tmp3084, i32 2 ; <i32> [#uses=1]
  %add3086 = add nsw i32 %add3083, %tmp3085       ; <i32> [#uses=1]
  store i32 %add3086, i32* %temp_index_6
  %tmp3087 = load i32* %temp_index_6              ; <i32> [#uses=1]
  %tmp3088 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3089 = getelementptr inbounds i32 addrspace(1)* %tmp3088, i32 %tmp3087 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3090 = load i32 addrspace(1)* %arrayidx3089 ; <i32> [#uses=1]
  store i32 %tmp3090, i32* %delta_6
  %tmp3091 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp3092 = load i32* %base_index_6              ; <i32> [#uses=1]
  %add.ptr3093 = getelementptr inbounds i32 addrspace(1)* %tmp3091, i32 %tmp3092 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3094 = load i32* %temp_index_6              ; <i32> [#uses=1]
  %tmp3095 = load i32 addrspace(1)** %LookUp4.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3096 = getelementptr inbounds i32 addrspace(1)* %tmp3095, i32 %tmp3094 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3097 = load i32 addrspace(1)* %arrayidx3096 ; <i32> [#uses=1]
  %add.ptr3098 = getelementptr inbounds i32 addrspace(1)* %add.ptr3093, i32 %tmp3097 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr3098, i32 addrspace(1)** %addr_0_3_6
  %tmp3100 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3101 = getelementptr inbounds i32 addrspace(1)* %tmp3100, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3102 = load i32 addrspace(1)* %arrayidx3101 ; <i32> [#uses=1]
  %vecinit3103 = insertelement <4 x i32> undef, i32 %tmp3102, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp3104 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3105 = getelementptr inbounds i32 addrspace(1)* %tmp3104, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3106 = load i32 addrspace(1)* %arrayidx3105 ; <i32> [#uses=1]
  %vecinit3107 = insertelement <4 x i32> %vecinit3103, i32 %tmp3106, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp3108 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3109 = getelementptr inbounds i32 addrspace(1)* %tmp3108, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3110 = load i32 addrspace(1)* %arrayidx3109 ; <i32> [#uses=1]
  %vecinit3111 = insertelement <4 x i32> %vecinit3107, i32 %tmp3110, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp3112 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3113 = getelementptr inbounds i32 addrspace(1)* %tmp3112, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3114 = load i32 addrspace(1)* %arrayidx3113 ; <i32> [#uses=1]
  %vecinit3115 = insertelement <4 x i32> %vecinit3111, i32 %tmp3114, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit3115, <4 x i32>* %.compoundliteral3099
  %tmp3116 = load <4 x i32>* %.compoundliteral3099 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp3116, <4 x i32>* %xmm_tree_0_3_6
  %tmp3117 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp3118 = load <4 x i32>* %xmm_query_element_6 ; <<4 x i32>> [#uses=1]
  %tmp3119 = load <4 x i32>* %xmm_tree_0_3_6      ; <<4 x i32>> [#uses=1]
  %cmp3120 = icmp sgt <4 x i32> %tmp3118, %tmp3119 ; <<4 x i1>> [#uses=1]
  %sext3121 = sext <4 x i1> %cmp3120 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul3122 = mul <4 x i32> %tmp3117, %sext3121    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul3122, <4 x i32>* %temp_index_v_6
  %tmp3123 = load <4 x i32>* %temp_index_v_6      ; <<4 x i32>> [#uses=1]
  %tmp3124 = extractelement <4 x i32> %tmp3123, i32 0 ; <i32> [#uses=1]
  %tmp3125 = load <4 x i32>* %temp_index_v_6      ; <<4 x i32>> [#uses=1]
  %tmp3126 = extractelement <4 x i32> %tmp3125, i32 1 ; <i32> [#uses=1]
  %add3127 = add nsw i32 %tmp3124, %tmp3126       ; <i32> [#uses=1]
  %tmp3128 = load <4 x i32>* %temp_index_v_6      ; <<4 x i32>> [#uses=1]
  %tmp3129 = extractelement <4 x i32> %tmp3128, i32 2 ; <i32> [#uses=1]
  %add3130 = add nsw i32 %add3127, %tmp3129       ; <i32> [#uses=1]
  store i32 %add3130, i32* %temp_index_6
  %tmp3131 = load i32* %delta_6                   ; <i32> [#uses=1]
  %shl3132 = shl i32 %tmp3131, 2                  ; <i32> [#uses=1]
  %tmp3133 = load i32* %temp_index_6              ; <i32> [#uses=1]
  %tmp3134 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3135 = getelementptr inbounds i32 addrspace(1)* %tmp3134, i32 %tmp3133 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3136 = load i32 addrspace(1)* %arrayidx3135 ; <i32> [#uses=1]
  %add3137 = add nsw i32 %shl3132, %tmp3136       ; <i32> [#uses=1]
  store i32 %add3137, i32* %offset3_6
  %tmp3138 = load i32* %offset2_6                 ; <i32> [#uses=1]
  %mul3139 = mul i32 %tmp3138, 16                 ; <i32> [#uses=1]
  %tmp3140 = load i32* %offset3_6                 ; <i32> [#uses=1]
  %add3141 = add nsw i32 %mul3139, %tmp3140       ; <i32> [#uses=1]
  store i32 %add3141, i32* %offset2_6
  %tmp3142 = load i32* %block_base_index_6        ; <i32> [#uses=1]
  %add3143 = add nsw i32 %tmp3142, 15             ; <i32> [#uses=1]
  %tmp3144 = load i32* %offset2_6                 ; <i32> [#uses=1]
  %mul3145 = mul i32 %tmp3144, 15                 ; <i32> [#uses=1]
  %add3146 = add nsw i32 %add3143, %mul3145       ; <i32> [#uses=1]
  store i32 %add3146, i32* %base_index_6
  %tmp3147 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp3148 = load i32* %base_index_6              ; <i32> [#uses=1]
  %add.ptr3149 = getelementptr inbounds i32 addrspace(1)* %tmp3147, i32 %tmp3148 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr3149, i32 16)
  store i32 0, i32* %offset3_6
  %tmp3150 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp3151 = load i32* %base_index_7              ; <i32> [#uses=1]
  %add.ptr3152 = getelementptr inbounds i32 addrspace(1)* %tmp3150, i32 %tmp3151 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr3152, i32 addrspace(1)** %addr_0_3_7
  %tmp3154 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3155 = getelementptr inbounds i32 addrspace(1)* %tmp3154, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3156 = load i32 addrspace(1)* %arrayidx3155 ; <i32> [#uses=1]
  %vecinit3157 = insertelement <4 x i32> undef, i32 %tmp3156, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp3158 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3159 = getelementptr inbounds i32 addrspace(1)* %tmp3158, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3160 = load i32 addrspace(1)* %arrayidx3159 ; <i32> [#uses=1]
  %vecinit3161 = insertelement <4 x i32> %vecinit3157, i32 %tmp3160, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp3162 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3163 = getelementptr inbounds i32 addrspace(1)* %tmp3162, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3164 = load i32 addrspace(1)* %arrayidx3163 ; <i32> [#uses=1]
  %vecinit3165 = insertelement <4 x i32> %vecinit3161, i32 %tmp3164, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp3166 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3167 = getelementptr inbounds i32 addrspace(1)* %tmp3166, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3168 = load i32 addrspace(1)* %arrayidx3167 ; <i32> [#uses=1]
  %vecinit3169 = insertelement <4 x i32> %vecinit3165, i32 %tmp3168, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit3169, <4 x i32>* %.compoundliteral3153
  %tmp3170 = load <4 x i32>* %.compoundliteral3153 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp3170, <4 x i32>* %xmm_tree_0_3_7
  %tmp3171 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp3172 = load <4 x i32>* %xmm_query_element_7 ; <<4 x i32>> [#uses=1]
  %tmp3173 = load <4 x i32>* %xmm_tree_0_3_7      ; <<4 x i32>> [#uses=1]
  %cmp3174 = icmp sgt <4 x i32> %tmp3172, %tmp3173 ; <<4 x i1>> [#uses=1]
  %sext3175 = sext <4 x i1> %cmp3174 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul3176 = mul <4 x i32> %tmp3171, %sext3175    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul3176, <4 x i32>* %temp_index_v_7
  %tmp3177 = load <4 x i32>* %temp_index_v_7      ; <<4 x i32>> [#uses=1]
  %tmp3178 = extractelement <4 x i32> %tmp3177, i32 0 ; <i32> [#uses=1]
  %tmp3179 = load <4 x i32>* %temp_index_v_7      ; <<4 x i32>> [#uses=1]
  %tmp3180 = extractelement <4 x i32> %tmp3179, i32 1 ; <i32> [#uses=1]
  %add3181 = add nsw i32 %tmp3178, %tmp3180       ; <i32> [#uses=1]
  %tmp3182 = load <4 x i32>* %temp_index_v_7      ; <<4 x i32>> [#uses=1]
  %tmp3183 = extractelement <4 x i32> %tmp3182, i32 2 ; <i32> [#uses=1]
  %add3184 = add nsw i32 %add3181, %tmp3183       ; <i32> [#uses=1]
  store i32 %add3184, i32* %temp_index_7
  %tmp3185 = load i32* %temp_index_7              ; <i32> [#uses=1]
  %tmp3186 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3187 = getelementptr inbounds i32 addrspace(1)* %tmp3186, i32 %tmp3185 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3188 = load i32 addrspace(1)* %arrayidx3187 ; <i32> [#uses=1]
  store i32 %tmp3188, i32* %delta_7
  %tmp3189 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp3190 = load i32* %base_index_7              ; <i32> [#uses=1]
  %add.ptr3191 = getelementptr inbounds i32 addrspace(1)* %tmp3189, i32 %tmp3190 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3192 = load i32* %temp_index_7              ; <i32> [#uses=1]
  %tmp3193 = load i32 addrspace(1)** %LookUp4.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3194 = getelementptr inbounds i32 addrspace(1)* %tmp3193, i32 %tmp3192 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3195 = load i32 addrspace(1)* %arrayidx3194 ; <i32> [#uses=1]
  %add.ptr3196 = getelementptr inbounds i32 addrspace(1)* %add.ptr3191, i32 %tmp3195 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr3196, i32 addrspace(1)** %addr_0_3_7
  %tmp3198 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3199 = getelementptr inbounds i32 addrspace(1)* %tmp3198, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3200 = load i32 addrspace(1)* %arrayidx3199 ; <i32> [#uses=1]
  %vecinit3201 = insertelement <4 x i32> undef, i32 %tmp3200, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp3202 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3203 = getelementptr inbounds i32 addrspace(1)* %tmp3202, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3204 = load i32 addrspace(1)* %arrayidx3203 ; <i32> [#uses=1]
  %vecinit3205 = insertelement <4 x i32> %vecinit3201, i32 %tmp3204, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp3206 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3207 = getelementptr inbounds i32 addrspace(1)* %tmp3206, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3208 = load i32 addrspace(1)* %arrayidx3207 ; <i32> [#uses=1]
  %vecinit3209 = insertelement <4 x i32> %vecinit3205, i32 %tmp3208, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp3210 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3211 = getelementptr inbounds i32 addrspace(1)* %tmp3210, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3212 = load i32 addrspace(1)* %arrayidx3211 ; <i32> [#uses=1]
  %vecinit3213 = insertelement <4 x i32> %vecinit3209, i32 %tmp3212, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit3213, <4 x i32>* %.compoundliteral3197
  %tmp3214 = load <4 x i32>* %.compoundliteral3197 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp3214, <4 x i32>* %xmm_tree_0_3_7
  %tmp3215 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp3216 = load <4 x i32>* %xmm_query_element_7 ; <<4 x i32>> [#uses=1]
  %tmp3217 = load <4 x i32>* %xmm_tree_0_3_7      ; <<4 x i32>> [#uses=1]
  %cmp3218 = icmp sgt <4 x i32> %tmp3216, %tmp3217 ; <<4 x i1>> [#uses=1]
  %sext3219 = sext <4 x i1> %cmp3218 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul3220 = mul <4 x i32> %tmp3215, %sext3219    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul3220, <4 x i32>* %temp_index_v_7
  %tmp3221 = load <4 x i32>* %temp_index_v_7      ; <<4 x i32>> [#uses=1]
  %tmp3222 = extractelement <4 x i32> %tmp3221, i32 0 ; <i32> [#uses=1]
  %tmp3223 = load <4 x i32>* %temp_index_v_7      ; <<4 x i32>> [#uses=1]
  %tmp3224 = extractelement <4 x i32> %tmp3223, i32 1 ; <i32> [#uses=1]
  %add3225 = add nsw i32 %tmp3222, %tmp3224       ; <i32> [#uses=1]
  %tmp3226 = load <4 x i32>* %temp_index_v_7      ; <<4 x i32>> [#uses=1]
  %tmp3227 = extractelement <4 x i32> %tmp3226, i32 2 ; <i32> [#uses=1]
  %add3228 = add nsw i32 %add3225, %tmp3227       ; <i32> [#uses=1]
  store i32 %add3228, i32* %temp_index_7
  %tmp3229 = load i32* %delta_7                   ; <i32> [#uses=1]
  %shl3230 = shl i32 %tmp3229, 2                  ; <i32> [#uses=1]
  %tmp3231 = load i32* %temp_index_7              ; <i32> [#uses=1]
  %tmp3232 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3233 = getelementptr inbounds i32 addrspace(1)* %tmp3232, i32 %tmp3231 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3234 = load i32 addrspace(1)* %arrayidx3233 ; <i32> [#uses=1]
  %add3235 = add nsw i32 %shl3230, %tmp3234       ; <i32> [#uses=1]
  store i32 %add3235, i32* %offset3_7
  %tmp3236 = load i32* %offset2_7                 ; <i32> [#uses=1]
  %mul3237 = mul i32 %tmp3236, 16                 ; <i32> [#uses=1]
  %tmp3238 = load i32* %offset3_7                 ; <i32> [#uses=1]
  %add3239 = add nsw i32 %mul3237, %tmp3238       ; <i32> [#uses=1]
  store i32 %add3239, i32* %offset2_7
  %tmp3240 = load i32* %block_base_index_7        ; <i32> [#uses=1]
  %add3241 = add nsw i32 %tmp3240, 15             ; <i32> [#uses=1]
  %tmp3242 = load i32* %offset2_7                 ; <i32> [#uses=1]
  %mul3243 = mul i32 %tmp3242, 15                 ; <i32> [#uses=1]
  %add3244 = add nsw i32 %add3241, %mul3243       ; <i32> [#uses=1]
  store i32 %add3244, i32* %base_index_7
  %tmp3245 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp3246 = load i32* %base_index_7              ; <i32> [#uses=1]
  %add.ptr3247 = getelementptr inbounds i32 addrspace(1)* %tmp3245, i32 %tmp3246 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr3247, i32 16)
  store i32 0, i32* %offset3_7
  %tmp3248 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp3249 = load i32* %base_index_0              ; <i32> [#uses=1]
  %add.ptr3250 = getelementptr inbounds i32 addrspace(1)* %tmp3248, i32 %tmp3249 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr3250, i32 addrspace(1)** %addr_0_3_0
  %tmp3252 = load i32 addrspace(1)** %addr_0_3_0  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3253 = getelementptr inbounds i32 addrspace(1)* %tmp3252, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3254 = load i32 addrspace(1)* %arrayidx3253 ; <i32> [#uses=1]
  %vecinit3255 = insertelement <4 x i32> undef, i32 %tmp3254, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp3256 = load i32 addrspace(1)** %addr_0_3_0  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3257 = getelementptr inbounds i32 addrspace(1)* %tmp3256, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3258 = load i32 addrspace(1)* %arrayidx3257 ; <i32> [#uses=1]
  %vecinit3259 = insertelement <4 x i32> %vecinit3255, i32 %tmp3258, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp3260 = load i32 addrspace(1)** %addr_0_3_0  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3261 = getelementptr inbounds i32 addrspace(1)* %tmp3260, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3262 = load i32 addrspace(1)* %arrayidx3261 ; <i32> [#uses=1]
  %vecinit3263 = insertelement <4 x i32> %vecinit3259, i32 %tmp3262, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp3264 = load i32 addrspace(1)** %addr_0_3_0  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3265 = getelementptr inbounds i32 addrspace(1)* %tmp3264, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3266 = load i32 addrspace(1)* %arrayidx3265 ; <i32> [#uses=1]
  %vecinit3267 = insertelement <4 x i32> %vecinit3263, i32 %tmp3266, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit3267, <4 x i32>* %.compoundliteral3251
  %tmp3268 = load <4 x i32>* %.compoundliteral3251 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp3268, <4 x i32>* %xmm_tree_0_3_0
  %tmp3269 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp3270 = load <4 x i32>* %xmm_query_element_0 ; <<4 x i32>> [#uses=1]
  %tmp3271 = load <4 x i32>* %xmm_tree_0_3_0      ; <<4 x i32>> [#uses=1]
  %cmp3272 = icmp sgt <4 x i32> %tmp3270, %tmp3271 ; <<4 x i1>> [#uses=1]
  %sext3273 = sext <4 x i1> %cmp3272 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul3274 = mul <4 x i32> %tmp3269, %sext3273    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul3274, <4 x i32>* %temp_index_v_0
  %tmp3275 = load <4 x i32>* %temp_index_v_0      ; <<4 x i32>> [#uses=1]
  %tmp3276 = extractelement <4 x i32> %tmp3275, i32 0 ; <i32> [#uses=1]
  %tmp3277 = load <4 x i32>* %temp_index_v_0      ; <<4 x i32>> [#uses=1]
  %tmp3278 = extractelement <4 x i32> %tmp3277, i32 1 ; <i32> [#uses=1]
  %add3279 = add nsw i32 %tmp3276, %tmp3278       ; <i32> [#uses=1]
  %tmp3280 = load <4 x i32>* %temp_index_v_0      ; <<4 x i32>> [#uses=1]
  %tmp3281 = extractelement <4 x i32> %tmp3280, i32 2 ; <i32> [#uses=1]
  %add3282 = add nsw i32 %add3279, %tmp3281       ; <i32> [#uses=1]
  store i32 %add3282, i32* %temp_index_0
  %tmp3283 = load i32* %temp_index_0              ; <i32> [#uses=1]
  %tmp3284 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3285 = getelementptr inbounds i32 addrspace(1)* %tmp3284, i32 %tmp3283 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3286 = load i32 addrspace(1)* %arrayidx3285 ; <i32> [#uses=1]
  store i32 %tmp3286, i32* %delta_0
  %tmp3287 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp3288 = load i32* %base_index_0              ; <i32> [#uses=1]
  %add.ptr3289 = getelementptr inbounds i32 addrspace(1)* %tmp3287, i32 %tmp3288 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3290 = load i32* %temp_index_0              ; <i32> [#uses=1]
  %tmp3291 = load i32 addrspace(1)** %LookUp4.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3292 = getelementptr inbounds i32 addrspace(1)* %tmp3291, i32 %tmp3290 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3293 = load i32 addrspace(1)* %arrayidx3292 ; <i32> [#uses=1]
  %add.ptr3294 = getelementptr inbounds i32 addrspace(1)* %add.ptr3289, i32 %tmp3293 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr3294, i32 addrspace(1)** %addr_0_3_0
  %tmp3296 = load i32 addrspace(1)** %addr_0_3_0  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3297 = getelementptr inbounds i32 addrspace(1)* %tmp3296, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3298 = load i32 addrspace(1)* %arrayidx3297 ; <i32> [#uses=1]
  %vecinit3299 = insertelement <4 x i32> undef, i32 %tmp3298, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp3300 = load i32 addrspace(1)** %addr_0_3_0  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3301 = getelementptr inbounds i32 addrspace(1)* %tmp3300, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3302 = load i32 addrspace(1)* %arrayidx3301 ; <i32> [#uses=1]
  %vecinit3303 = insertelement <4 x i32> %vecinit3299, i32 %tmp3302, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp3304 = load i32 addrspace(1)** %addr_0_3_0  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3305 = getelementptr inbounds i32 addrspace(1)* %tmp3304, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3306 = load i32 addrspace(1)* %arrayidx3305 ; <i32> [#uses=1]
  %vecinit3307 = insertelement <4 x i32> %vecinit3303, i32 %tmp3306, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp3308 = load i32 addrspace(1)** %addr_0_3_0  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3309 = getelementptr inbounds i32 addrspace(1)* %tmp3308, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3310 = load i32 addrspace(1)* %arrayidx3309 ; <i32> [#uses=1]
  %vecinit3311 = insertelement <4 x i32> %vecinit3307, i32 %tmp3310, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit3311, <4 x i32>* %.compoundliteral3295
  %tmp3312 = load <4 x i32>* %.compoundliteral3295 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp3312, <4 x i32>* %xmm_tree_0_3_0
  %tmp3313 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp3314 = load <4 x i32>* %xmm_query_element_0 ; <<4 x i32>> [#uses=1]
  %tmp3315 = load <4 x i32>* %xmm_tree_0_3_0      ; <<4 x i32>> [#uses=1]
  %cmp3316 = icmp sgt <4 x i32> %tmp3314, %tmp3315 ; <<4 x i1>> [#uses=1]
  %sext3317 = sext <4 x i1> %cmp3316 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul3318 = mul <4 x i32> %tmp3313, %sext3317    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul3318, <4 x i32>* %temp_index_v_0
  %tmp3319 = load <4 x i32>* %temp_index_v_0      ; <<4 x i32>> [#uses=1]
  %tmp3320 = extractelement <4 x i32> %tmp3319, i32 0 ; <i32> [#uses=1]
  %tmp3321 = load <4 x i32>* %temp_index_v_0      ; <<4 x i32>> [#uses=1]
  %tmp3322 = extractelement <4 x i32> %tmp3321, i32 1 ; <i32> [#uses=1]
  %add3323 = add nsw i32 %tmp3320, %tmp3322       ; <i32> [#uses=1]
  %tmp3324 = load <4 x i32>* %temp_index_v_0      ; <<4 x i32>> [#uses=1]
  %tmp3325 = extractelement <4 x i32> %tmp3324, i32 2 ; <i32> [#uses=1]
  %add3326 = add nsw i32 %add3323, %tmp3325       ; <i32> [#uses=1]
  store i32 %add3326, i32* %temp_index_0
  %tmp3327 = load i32* %delta_0                   ; <i32> [#uses=1]
  %shl3328 = shl i32 %tmp3327, 2                  ; <i32> [#uses=1]
  %tmp3329 = load i32* %temp_index_0              ; <i32> [#uses=1]
  %tmp3330 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3331 = getelementptr inbounds i32 addrspace(1)* %tmp3330, i32 %tmp3329 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3332 = load i32 addrspace(1)* %arrayidx3331 ; <i32> [#uses=1]
  %add3333 = add nsw i32 %shl3328, %tmp3332       ; <i32> [#uses=1]
  store i32 %add3333, i32* %offset3_0
  %tmp3334 = load i32* %offset2_0                 ; <i32> [#uses=1]
  %mul3335 = mul i32 %tmp3334, 16                 ; <i32> [#uses=1]
  %tmp3336 = load i32* %offset3_0                 ; <i32> [#uses=1]
  %add3337 = add nsw i32 %mul3335, %tmp3336       ; <i32> [#uses=1]
  store i32 %add3337, i32* %offset2_0
  %tmp3338 = load i32* %block_base_index_0        ; <i32> [#uses=1]
  %add3339 = add nsw i32 %tmp3338, 255            ; <i32> [#uses=1]
  %tmp3340 = load i32* %offset2_0                 ; <i32> [#uses=1]
  %mul3341 = mul i32 %tmp3340, 3                  ; <i32> [#uses=1]
  %add3342 = add nsw i32 %add3339, %mul3341       ; <i32> [#uses=1]
  store i32 %add3342, i32* %base_index_0
  %tmp3343 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp3344 = load i32* %base_index_0              ; <i32> [#uses=1]
  %add.ptr3345 = getelementptr inbounds i32 addrspace(1)* %tmp3343, i32 %tmp3344 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr3345, i32 16)
  store i32 0, i32* %offset3_0
  %tmp3346 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp3347 = load i32* %base_index_1              ; <i32> [#uses=1]
  %add.ptr3348 = getelementptr inbounds i32 addrspace(1)* %tmp3346, i32 %tmp3347 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr3348, i32 addrspace(1)** %addr_0_3_1
  %tmp3350 = load i32 addrspace(1)** %addr_0_3_1  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3351 = getelementptr inbounds i32 addrspace(1)* %tmp3350, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3352 = load i32 addrspace(1)* %arrayidx3351 ; <i32> [#uses=1]
  %vecinit3353 = insertelement <4 x i32> undef, i32 %tmp3352, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp3354 = load i32 addrspace(1)** %addr_0_3_1  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3355 = getelementptr inbounds i32 addrspace(1)* %tmp3354, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3356 = load i32 addrspace(1)* %arrayidx3355 ; <i32> [#uses=1]
  %vecinit3357 = insertelement <4 x i32> %vecinit3353, i32 %tmp3356, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp3358 = load i32 addrspace(1)** %addr_0_3_1  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3359 = getelementptr inbounds i32 addrspace(1)* %tmp3358, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3360 = load i32 addrspace(1)* %arrayidx3359 ; <i32> [#uses=1]
  %vecinit3361 = insertelement <4 x i32> %vecinit3357, i32 %tmp3360, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp3362 = load i32 addrspace(1)** %addr_0_3_1  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3363 = getelementptr inbounds i32 addrspace(1)* %tmp3362, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3364 = load i32 addrspace(1)* %arrayidx3363 ; <i32> [#uses=1]
  %vecinit3365 = insertelement <4 x i32> %vecinit3361, i32 %tmp3364, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit3365, <4 x i32>* %.compoundliteral3349
  %tmp3366 = load <4 x i32>* %.compoundliteral3349 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp3366, <4 x i32>* %xmm_tree_0_3_1
  %tmp3367 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp3368 = load <4 x i32>* %xmm_query_element_1 ; <<4 x i32>> [#uses=1]
  %tmp3369 = load <4 x i32>* %xmm_tree_0_3_1      ; <<4 x i32>> [#uses=1]
  %cmp3370 = icmp sgt <4 x i32> %tmp3368, %tmp3369 ; <<4 x i1>> [#uses=1]
  %sext3371 = sext <4 x i1> %cmp3370 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul3372 = mul <4 x i32> %tmp3367, %sext3371    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul3372, <4 x i32>* %temp_index_v_1
  %tmp3373 = load <4 x i32>* %temp_index_v_1      ; <<4 x i32>> [#uses=1]
  %tmp3374 = extractelement <4 x i32> %tmp3373, i32 0 ; <i32> [#uses=1]
  %tmp3375 = load <4 x i32>* %temp_index_v_1      ; <<4 x i32>> [#uses=1]
  %tmp3376 = extractelement <4 x i32> %tmp3375, i32 1 ; <i32> [#uses=1]
  %add3377 = add nsw i32 %tmp3374, %tmp3376       ; <i32> [#uses=1]
  %tmp3378 = load <4 x i32>* %temp_index_v_1      ; <<4 x i32>> [#uses=1]
  %tmp3379 = extractelement <4 x i32> %tmp3378, i32 2 ; <i32> [#uses=1]
  %add3380 = add nsw i32 %add3377, %tmp3379       ; <i32> [#uses=1]
  store i32 %add3380, i32* %temp_index_1
  %tmp3381 = load i32* %temp_index_1              ; <i32> [#uses=1]
  %tmp3382 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3383 = getelementptr inbounds i32 addrspace(1)* %tmp3382, i32 %tmp3381 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3384 = load i32 addrspace(1)* %arrayidx3383 ; <i32> [#uses=1]
  store i32 %tmp3384, i32* %delta_1
  %tmp3385 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp3386 = load i32* %base_index_1              ; <i32> [#uses=1]
  %add.ptr3387 = getelementptr inbounds i32 addrspace(1)* %tmp3385, i32 %tmp3386 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3388 = load i32* %temp_index_1              ; <i32> [#uses=1]
  %tmp3389 = load i32 addrspace(1)** %LookUp4.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3390 = getelementptr inbounds i32 addrspace(1)* %tmp3389, i32 %tmp3388 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3391 = load i32 addrspace(1)* %arrayidx3390 ; <i32> [#uses=1]
  %add.ptr3392 = getelementptr inbounds i32 addrspace(1)* %add.ptr3387, i32 %tmp3391 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr3392, i32 addrspace(1)** %addr_0_3_1
  %tmp3394 = load i32 addrspace(1)** %addr_0_3_1  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3395 = getelementptr inbounds i32 addrspace(1)* %tmp3394, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3396 = load i32 addrspace(1)* %arrayidx3395 ; <i32> [#uses=1]
  %vecinit3397 = insertelement <4 x i32> undef, i32 %tmp3396, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp3398 = load i32 addrspace(1)** %addr_0_3_1  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3399 = getelementptr inbounds i32 addrspace(1)* %tmp3398, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3400 = load i32 addrspace(1)* %arrayidx3399 ; <i32> [#uses=1]
  %vecinit3401 = insertelement <4 x i32> %vecinit3397, i32 %tmp3400, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp3402 = load i32 addrspace(1)** %addr_0_3_1  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3403 = getelementptr inbounds i32 addrspace(1)* %tmp3402, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3404 = load i32 addrspace(1)* %arrayidx3403 ; <i32> [#uses=1]
  %vecinit3405 = insertelement <4 x i32> %vecinit3401, i32 %tmp3404, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp3406 = load i32 addrspace(1)** %addr_0_3_1  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3407 = getelementptr inbounds i32 addrspace(1)* %tmp3406, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3408 = load i32 addrspace(1)* %arrayidx3407 ; <i32> [#uses=1]
  %vecinit3409 = insertelement <4 x i32> %vecinit3405, i32 %tmp3408, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit3409, <4 x i32>* %.compoundliteral3393
  %tmp3410 = load <4 x i32>* %.compoundliteral3393 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp3410, <4 x i32>* %xmm_tree_0_3_1
  %tmp3411 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp3412 = load <4 x i32>* %xmm_query_element_1 ; <<4 x i32>> [#uses=1]
  %tmp3413 = load <4 x i32>* %xmm_tree_0_3_1      ; <<4 x i32>> [#uses=1]
  %cmp3414 = icmp sgt <4 x i32> %tmp3412, %tmp3413 ; <<4 x i1>> [#uses=1]
  %sext3415 = sext <4 x i1> %cmp3414 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul3416 = mul <4 x i32> %tmp3411, %sext3415    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul3416, <4 x i32>* %temp_index_v_1
  %tmp3417 = load <4 x i32>* %temp_index_v_1      ; <<4 x i32>> [#uses=1]
  %tmp3418 = extractelement <4 x i32> %tmp3417, i32 0 ; <i32> [#uses=1]
  %tmp3419 = load <4 x i32>* %temp_index_v_1      ; <<4 x i32>> [#uses=1]
  %tmp3420 = extractelement <4 x i32> %tmp3419, i32 1 ; <i32> [#uses=1]
  %add3421 = add nsw i32 %tmp3418, %tmp3420       ; <i32> [#uses=1]
  %tmp3422 = load <4 x i32>* %temp_index_v_1      ; <<4 x i32>> [#uses=1]
  %tmp3423 = extractelement <4 x i32> %tmp3422, i32 2 ; <i32> [#uses=1]
  %add3424 = add nsw i32 %add3421, %tmp3423       ; <i32> [#uses=1]
  store i32 %add3424, i32* %temp_index_1
  %tmp3425 = load i32* %delta_1                   ; <i32> [#uses=1]
  %shl3426 = shl i32 %tmp3425, 2                  ; <i32> [#uses=1]
  %tmp3427 = load i32* %temp_index_1              ; <i32> [#uses=1]
  %tmp3428 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3429 = getelementptr inbounds i32 addrspace(1)* %tmp3428, i32 %tmp3427 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3430 = load i32 addrspace(1)* %arrayidx3429 ; <i32> [#uses=1]
  %add3431 = add nsw i32 %shl3426, %tmp3430       ; <i32> [#uses=1]
  store i32 %add3431, i32* %offset3_1
  %tmp3432 = load i32* %offset2_1                 ; <i32> [#uses=1]
  %mul3433 = mul i32 %tmp3432, 16                 ; <i32> [#uses=1]
  %tmp3434 = load i32* %offset3_1                 ; <i32> [#uses=1]
  %add3435 = add nsw i32 %mul3433, %tmp3434       ; <i32> [#uses=1]
  store i32 %add3435, i32* %offset2_1
  %tmp3436 = load i32* %block_base_index_1        ; <i32> [#uses=1]
  %add3437 = add nsw i32 %tmp3436, 255            ; <i32> [#uses=1]
  %tmp3438 = load i32* %offset2_1                 ; <i32> [#uses=1]
  %mul3439 = mul i32 %tmp3438, 3                  ; <i32> [#uses=1]
  %add3440 = add nsw i32 %add3437, %mul3439       ; <i32> [#uses=1]
  store i32 %add3440, i32* %base_index_1
  %tmp3441 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp3442 = load i32* %base_index_1              ; <i32> [#uses=1]
  %add.ptr3443 = getelementptr inbounds i32 addrspace(1)* %tmp3441, i32 %tmp3442 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr3443, i32 16)
  store i32 0, i32* %offset3_1
  %tmp3444 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp3445 = load i32* %base_index_2              ; <i32> [#uses=1]
  %add.ptr3446 = getelementptr inbounds i32 addrspace(1)* %tmp3444, i32 %tmp3445 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr3446, i32 addrspace(1)** %addr_0_3_2
  %tmp3448 = load i32 addrspace(1)** %addr_0_3_2  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3449 = getelementptr inbounds i32 addrspace(1)* %tmp3448, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3450 = load i32 addrspace(1)* %arrayidx3449 ; <i32> [#uses=1]
  %vecinit3451 = insertelement <4 x i32> undef, i32 %tmp3450, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp3452 = load i32 addrspace(1)** %addr_0_3_2  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3453 = getelementptr inbounds i32 addrspace(1)* %tmp3452, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3454 = load i32 addrspace(1)* %arrayidx3453 ; <i32> [#uses=1]
  %vecinit3455 = insertelement <4 x i32> %vecinit3451, i32 %tmp3454, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp3456 = load i32 addrspace(1)** %addr_0_3_2  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3457 = getelementptr inbounds i32 addrspace(1)* %tmp3456, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3458 = load i32 addrspace(1)* %arrayidx3457 ; <i32> [#uses=1]
  %vecinit3459 = insertelement <4 x i32> %vecinit3455, i32 %tmp3458, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp3460 = load i32 addrspace(1)** %addr_0_3_2  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3461 = getelementptr inbounds i32 addrspace(1)* %tmp3460, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3462 = load i32 addrspace(1)* %arrayidx3461 ; <i32> [#uses=1]
  %vecinit3463 = insertelement <4 x i32> %vecinit3459, i32 %tmp3462, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit3463, <4 x i32>* %.compoundliteral3447
  %tmp3464 = load <4 x i32>* %.compoundliteral3447 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp3464, <4 x i32>* %xmm_tree_0_3_2
  %tmp3465 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp3466 = load <4 x i32>* %xmm_query_element_2 ; <<4 x i32>> [#uses=1]
  %tmp3467 = load <4 x i32>* %xmm_tree_0_3_2      ; <<4 x i32>> [#uses=1]
  %cmp3468 = icmp sgt <4 x i32> %tmp3466, %tmp3467 ; <<4 x i1>> [#uses=1]
  %sext3469 = sext <4 x i1> %cmp3468 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul3470 = mul <4 x i32> %tmp3465, %sext3469    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul3470, <4 x i32>* %temp_index_v_2
  %tmp3471 = load <4 x i32>* %temp_index_v_2      ; <<4 x i32>> [#uses=1]
  %tmp3472 = extractelement <4 x i32> %tmp3471, i32 0 ; <i32> [#uses=1]
  %tmp3473 = load <4 x i32>* %temp_index_v_2      ; <<4 x i32>> [#uses=1]
  %tmp3474 = extractelement <4 x i32> %tmp3473, i32 1 ; <i32> [#uses=1]
  %add3475 = add nsw i32 %tmp3472, %tmp3474       ; <i32> [#uses=1]
  %tmp3476 = load <4 x i32>* %temp_index_v_2      ; <<4 x i32>> [#uses=1]
  %tmp3477 = extractelement <4 x i32> %tmp3476, i32 2 ; <i32> [#uses=1]
  %add3478 = add nsw i32 %add3475, %tmp3477       ; <i32> [#uses=1]
  store i32 %add3478, i32* %temp_index_2
  %tmp3479 = load i32* %temp_index_2              ; <i32> [#uses=1]
  %tmp3480 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3481 = getelementptr inbounds i32 addrspace(1)* %tmp3480, i32 %tmp3479 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3482 = load i32 addrspace(1)* %arrayidx3481 ; <i32> [#uses=1]
  store i32 %tmp3482, i32* %delta_2
  %tmp3483 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp3484 = load i32* %base_index_2              ; <i32> [#uses=1]
  %add.ptr3485 = getelementptr inbounds i32 addrspace(1)* %tmp3483, i32 %tmp3484 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3486 = load i32* %temp_index_2              ; <i32> [#uses=1]
  %tmp3487 = load i32 addrspace(1)** %LookUp4.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3488 = getelementptr inbounds i32 addrspace(1)* %tmp3487, i32 %tmp3486 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3489 = load i32 addrspace(1)* %arrayidx3488 ; <i32> [#uses=1]
  %add.ptr3490 = getelementptr inbounds i32 addrspace(1)* %add.ptr3485, i32 %tmp3489 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr3490, i32 addrspace(1)** %addr_0_3_2
  %tmp3492 = load i32 addrspace(1)** %addr_0_3_2  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3493 = getelementptr inbounds i32 addrspace(1)* %tmp3492, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3494 = load i32 addrspace(1)* %arrayidx3493 ; <i32> [#uses=1]
  %vecinit3495 = insertelement <4 x i32> undef, i32 %tmp3494, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp3496 = load i32 addrspace(1)** %addr_0_3_2  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3497 = getelementptr inbounds i32 addrspace(1)* %tmp3496, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3498 = load i32 addrspace(1)* %arrayidx3497 ; <i32> [#uses=1]
  %vecinit3499 = insertelement <4 x i32> %vecinit3495, i32 %tmp3498, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp3500 = load i32 addrspace(1)** %addr_0_3_2  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3501 = getelementptr inbounds i32 addrspace(1)* %tmp3500, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3502 = load i32 addrspace(1)* %arrayidx3501 ; <i32> [#uses=1]
  %vecinit3503 = insertelement <4 x i32> %vecinit3499, i32 %tmp3502, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp3504 = load i32 addrspace(1)** %addr_0_3_2  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3505 = getelementptr inbounds i32 addrspace(1)* %tmp3504, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3506 = load i32 addrspace(1)* %arrayidx3505 ; <i32> [#uses=1]
  %vecinit3507 = insertelement <4 x i32> %vecinit3503, i32 %tmp3506, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit3507, <4 x i32>* %.compoundliteral3491
  %tmp3508 = load <4 x i32>* %.compoundliteral3491 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp3508, <4 x i32>* %xmm_tree_0_3_2
  %tmp3509 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp3510 = load <4 x i32>* %xmm_query_element_2 ; <<4 x i32>> [#uses=1]
  %tmp3511 = load <4 x i32>* %xmm_tree_0_3_2      ; <<4 x i32>> [#uses=1]
  %cmp3512 = icmp sgt <4 x i32> %tmp3510, %tmp3511 ; <<4 x i1>> [#uses=1]
  %sext3513 = sext <4 x i1> %cmp3512 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul3514 = mul <4 x i32> %tmp3509, %sext3513    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul3514, <4 x i32>* %temp_index_v_2
  %tmp3515 = load <4 x i32>* %temp_index_v_2      ; <<4 x i32>> [#uses=1]
  %tmp3516 = extractelement <4 x i32> %tmp3515, i32 0 ; <i32> [#uses=1]
  %tmp3517 = load <4 x i32>* %temp_index_v_2      ; <<4 x i32>> [#uses=1]
  %tmp3518 = extractelement <4 x i32> %tmp3517, i32 1 ; <i32> [#uses=1]
  %add3519 = add nsw i32 %tmp3516, %tmp3518       ; <i32> [#uses=1]
  %tmp3520 = load <4 x i32>* %temp_index_v_2      ; <<4 x i32>> [#uses=1]
  %tmp3521 = extractelement <4 x i32> %tmp3520, i32 2 ; <i32> [#uses=1]
  %add3522 = add nsw i32 %add3519, %tmp3521       ; <i32> [#uses=1]
  store i32 %add3522, i32* %temp_index_2
  %tmp3523 = load i32* %delta_2                   ; <i32> [#uses=1]
  %shl3524 = shl i32 %tmp3523, 2                  ; <i32> [#uses=1]
  %tmp3525 = load i32* %temp_index_2              ; <i32> [#uses=1]
  %tmp3526 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3527 = getelementptr inbounds i32 addrspace(1)* %tmp3526, i32 %tmp3525 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3528 = load i32 addrspace(1)* %arrayidx3527 ; <i32> [#uses=1]
  %add3529 = add nsw i32 %shl3524, %tmp3528       ; <i32> [#uses=1]
  store i32 %add3529, i32* %offset3_2
  %tmp3530 = load i32* %offset2_2                 ; <i32> [#uses=1]
  %mul3531 = mul i32 %tmp3530, 16                 ; <i32> [#uses=1]
  %tmp3532 = load i32* %offset3_2                 ; <i32> [#uses=1]
  %add3533 = add nsw i32 %mul3531, %tmp3532       ; <i32> [#uses=1]
  store i32 %add3533, i32* %offset2_2
  %tmp3534 = load i32* %block_base_index_2        ; <i32> [#uses=1]
  %add3535 = add nsw i32 %tmp3534, 255            ; <i32> [#uses=1]
  %tmp3536 = load i32* %offset2_2                 ; <i32> [#uses=1]
  %mul3537 = mul i32 %tmp3536, 3                  ; <i32> [#uses=1]
  %add3538 = add nsw i32 %add3535, %mul3537       ; <i32> [#uses=1]
  store i32 %add3538, i32* %base_index_2
  %tmp3539 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp3540 = load i32* %base_index_2              ; <i32> [#uses=1]
  %add.ptr3541 = getelementptr inbounds i32 addrspace(1)* %tmp3539, i32 %tmp3540 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr3541, i32 16)
  store i32 0, i32* %offset3_2
  %tmp3542 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp3543 = load i32* %base_index_3              ; <i32> [#uses=1]
  %add.ptr3544 = getelementptr inbounds i32 addrspace(1)* %tmp3542, i32 %tmp3543 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr3544, i32 addrspace(1)** %addr_0_3_3
  %tmp3546 = load i32 addrspace(1)** %addr_0_3_3  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3547 = getelementptr inbounds i32 addrspace(1)* %tmp3546, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3548 = load i32 addrspace(1)* %arrayidx3547 ; <i32> [#uses=1]
  %vecinit3549 = insertelement <4 x i32> undef, i32 %tmp3548, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp3550 = load i32 addrspace(1)** %addr_0_3_3  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3551 = getelementptr inbounds i32 addrspace(1)* %tmp3550, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3552 = load i32 addrspace(1)* %arrayidx3551 ; <i32> [#uses=1]
  %vecinit3553 = insertelement <4 x i32> %vecinit3549, i32 %tmp3552, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp3554 = load i32 addrspace(1)** %addr_0_3_3  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3555 = getelementptr inbounds i32 addrspace(1)* %tmp3554, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3556 = load i32 addrspace(1)* %arrayidx3555 ; <i32> [#uses=1]
  %vecinit3557 = insertelement <4 x i32> %vecinit3553, i32 %tmp3556, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp3558 = load i32 addrspace(1)** %addr_0_3_3  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3559 = getelementptr inbounds i32 addrspace(1)* %tmp3558, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3560 = load i32 addrspace(1)* %arrayidx3559 ; <i32> [#uses=1]
  %vecinit3561 = insertelement <4 x i32> %vecinit3557, i32 %tmp3560, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit3561, <4 x i32>* %.compoundliteral3545
  %tmp3562 = load <4 x i32>* %.compoundliteral3545 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp3562, <4 x i32>* %xmm_tree_0_3_3
  %tmp3563 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp3564 = load <4 x i32>* %xmm_query_element_3 ; <<4 x i32>> [#uses=1]
  %tmp3565 = load <4 x i32>* %xmm_tree_0_3_3      ; <<4 x i32>> [#uses=1]
  %cmp3566 = icmp sgt <4 x i32> %tmp3564, %tmp3565 ; <<4 x i1>> [#uses=1]
  %sext3567 = sext <4 x i1> %cmp3566 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul3568 = mul <4 x i32> %tmp3563, %sext3567    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul3568, <4 x i32>* %temp_index_v_3
  %tmp3569 = load <4 x i32>* %temp_index_v_3      ; <<4 x i32>> [#uses=1]
  %tmp3570 = extractelement <4 x i32> %tmp3569, i32 0 ; <i32> [#uses=1]
  %tmp3571 = load <4 x i32>* %temp_index_v_3      ; <<4 x i32>> [#uses=1]
  %tmp3572 = extractelement <4 x i32> %tmp3571, i32 1 ; <i32> [#uses=1]
  %add3573 = add nsw i32 %tmp3570, %tmp3572       ; <i32> [#uses=1]
  %tmp3574 = load <4 x i32>* %temp_index_v_3      ; <<4 x i32>> [#uses=1]
  %tmp3575 = extractelement <4 x i32> %tmp3574, i32 2 ; <i32> [#uses=1]
  %add3576 = add nsw i32 %add3573, %tmp3575       ; <i32> [#uses=1]
  store i32 %add3576, i32* %temp_index_3
  %tmp3577 = load i32* %temp_index_3              ; <i32> [#uses=1]
  %tmp3578 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3579 = getelementptr inbounds i32 addrspace(1)* %tmp3578, i32 %tmp3577 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3580 = load i32 addrspace(1)* %arrayidx3579 ; <i32> [#uses=1]
  store i32 %tmp3580, i32* %delta_3
  %tmp3581 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp3582 = load i32* %base_index_3              ; <i32> [#uses=1]
  %add.ptr3583 = getelementptr inbounds i32 addrspace(1)* %tmp3581, i32 %tmp3582 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3584 = load i32* %temp_index_3              ; <i32> [#uses=1]
  %tmp3585 = load i32 addrspace(1)** %LookUp4.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3586 = getelementptr inbounds i32 addrspace(1)* %tmp3585, i32 %tmp3584 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3587 = load i32 addrspace(1)* %arrayidx3586 ; <i32> [#uses=1]
  %add.ptr3588 = getelementptr inbounds i32 addrspace(1)* %add.ptr3583, i32 %tmp3587 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr3588, i32 addrspace(1)** %addr_0_3_3
  %tmp3590 = load i32 addrspace(1)** %addr_0_3_3  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3591 = getelementptr inbounds i32 addrspace(1)* %tmp3590, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3592 = load i32 addrspace(1)* %arrayidx3591 ; <i32> [#uses=1]
  %vecinit3593 = insertelement <4 x i32> undef, i32 %tmp3592, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp3594 = load i32 addrspace(1)** %addr_0_3_3  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3595 = getelementptr inbounds i32 addrspace(1)* %tmp3594, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3596 = load i32 addrspace(1)* %arrayidx3595 ; <i32> [#uses=1]
  %vecinit3597 = insertelement <4 x i32> %vecinit3593, i32 %tmp3596, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp3598 = load i32 addrspace(1)** %addr_0_3_3  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3599 = getelementptr inbounds i32 addrspace(1)* %tmp3598, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3600 = load i32 addrspace(1)* %arrayidx3599 ; <i32> [#uses=1]
  %vecinit3601 = insertelement <4 x i32> %vecinit3597, i32 %tmp3600, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp3602 = load i32 addrspace(1)** %addr_0_3_3  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3603 = getelementptr inbounds i32 addrspace(1)* %tmp3602, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3604 = load i32 addrspace(1)* %arrayidx3603 ; <i32> [#uses=1]
  %vecinit3605 = insertelement <4 x i32> %vecinit3601, i32 %tmp3604, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit3605, <4 x i32>* %.compoundliteral3589
  %tmp3606 = load <4 x i32>* %.compoundliteral3589 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp3606, <4 x i32>* %xmm_tree_0_3_3
  %tmp3607 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp3608 = load <4 x i32>* %xmm_query_element_3 ; <<4 x i32>> [#uses=1]
  %tmp3609 = load <4 x i32>* %xmm_tree_0_3_3      ; <<4 x i32>> [#uses=1]
  %cmp3610 = icmp sgt <4 x i32> %tmp3608, %tmp3609 ; <<4 x i1>> [#uses=1]
  %sext3611 = sext <4 x i1> %cmp3610 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul3612 = mul <4 x i32> %tmp3607, %sext3611    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul3612, <4 x i32>* %temp_index_v_3
  %tmp3613 = load <4 x i32>* %temp_index_v_3      ; <<4 x i32>> [#uses=1]
  %tmp3614 = extractelement <4 x i32> %tmp3613, i32 0 ; <i32> [#uses=1]
  %tmp3615 = load <4 x i32>* %temp_index_v_3      ; <<4 x i32>> [#uses=1]
  %tmp3616 = extractelement <4 x i32> %tmp3615, i32 1 ; <i32> [#uses=1]
  %add3617 = add nsw i32 %tmp3614, %tmp3616       ; <i32> [#uses=1]
  %tmp3618 = load <4 x i32>* %temp_index_v_3      ; <<4 x i32>> [#uses=1]
  %tmp3619 = extractelement <4 x i32> %tmp3618, i32 2 ; <i32> [#uses=1]
  %add3620 = add nsw i32 %add3617, %tmp3619       ; <i32> [#uses=1]
  store i32 %add3620, i32* %temp_index_3
  %tmp3621 = load i32* %delta_3                   ; <i32> [#uses=1]
  %shl3622 = shl i32 %tmp3621, 2                  ; <i32> [#uses=1]
  %tmp3623 = load i32* %temp_index_3              ; <i32> [#uses=1]
  %tmp3624 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3625 = getelementptr inbounds i32 addrspace(1)* %tmp3624, i32 %tmp3623 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3626 = load i32 addrspace(1)* %arrayidx3625 ; <i32> [#uses=1]
  %add3627 = add nsw i32 %shl3622, %tmp3626       ; <i32> [#uses=1]
  store i32 %add3627, i32* %offset3_3
  %tmp3628 = load i32* %offset2_3                 ; <i32> [#uses=1]
  %mul3629 = mul i32 %tmp3628, 16                 ; <i32> [#uses=1]
  %tmp3630 = load i32* %offset3_3                 ; <i32> [#uses=1]
  %add3631 = add nsw i32 %mul3629, %tmp3630       ; <i32> [#uses=1]
  store i32 %add3631, i32* %offset2_3
  %tmp3632 = load i32* %block_base_index_3        ; <i32> [#uses=1]
  %add3633 = add nsw i32 %tmp3632, 255            ; <i32> [#uses=1]
  %tmp3634 = load i32* %offset2_3                 ; <i32> [#uses=1]
  %mul3635 = mul i32 %tmp3634, 3                  ; <i32> [#uses=1]
  %add3636 = add nsw i32 %add3633, %mul3635       ; <i32> [#uses=1]
  store i32 %add3636, i32* %base_index_3
  %tmp3637 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp3638 = load i32* %base_index_3              ; <i32> [#uses=1]
  %add.ptr3639 = getelementptr inbounds i32 addrspace(1)* %tmp3637, i32 %tmp3638 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr3639, i32 16)
  store i32 0, i32* %offset3_3
  %tmp3640 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp3641 = load i32* %base_index_4              ; <i32> [#uses=1]
  %add.ptr3642 = getelementptr inbounds i32 addrspace(1)* %tmp3640, i32 %tmp3641 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr3642, i32 addrspace(1)** %addr_0_3_4
  %tmp3644 = load i32 addrspace(1)** %addr_0_3_4  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3645 = getelementptr inbounds i32 addrspace(1)* %tmp3644, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3646 = load i32 addrspace(1)* %arrayidx3645 ; <i32> [#uses=1]
  %vecinit3647 = insertelement <4 x i32> undef, i32 %tmp3646, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp3648 = load i32 addrspace(1)** %addr_0_3_4  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3649 = getelementptr inbounds i32 addrspace(1)* %tmp3648, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3650 = load i32 addrspace(1)* %arrayidx3649 ; <i32> [#uses=1]
  %vecinit3651 = insertelement <4 x i32> %vecinit3647, i32 %tmp3650, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp3652 = load i32 addrspace(1)** %addr_0_3_4  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3653 = getelementptr inbounds i32 addrspace(1)* %tmp3652, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3654 = load i32 addrspace(1)* %arrayidx3653 ; <i32> [#uses=1]
  %vecinit3655 = insertelement <4 x i32> %vecinit3651, i32 %tmp3654, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp3656 = load i32 addrspace(1)** %addr_0_3_4  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3657 = getelementptr inbounds i32 addrspace(1)* %tmp3656, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3658 = load i32 addrspace(1)* %arrayidx3657 ; <i32> [#uses=1]
  %vecinit3659 = insertelement <4 x i32> %vecinit3655, i32 %tmp3658, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit3659, <4 x i32>* %.compoundliteral3643
  %tmp3660 = load <4 x i32>* %.compoundliteral3643 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp3660, <4 x i32>* %xmm_tree_0_3_4
  %tmp3661 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp3662 = load <4 x i32>* %xmm_query_element_4 ; <<4 x i32>> [#uses=1]
  %tmp3663 = load <4 x i32>* %xmm_tree_0_3_4      ; <<4 x i32>> [#uses=1]
  %cmp3664 = icmp sgt <4 x i32> %tmp3662, %tmp3663 ; <<4 x i1>> [#uses=1]
  %sext3665 = sext <4 x i1> %cmp3664 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul3666 = mul <4 x i32> %tmp3661, %sext3665    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul3666, <4 x i32>* %temp_index_v_4
  %tmp3667 = load <4 x i32>* %temp_index_v_4      ; <<4 x i32>> [#uses=1]
  %tmp3668 = extractelement <4 x i32> %tmp3667, i32 0 ; <i32> [#uses=1]
  %tmp3669 = load <4 x i32>* %temp_index_v_4      ; <<4 x i32>> [#uses=1]
  %tmp3670 = extractelement <4 x i32> %tmp3669, i32 1 ; <i32> [#uses=1]
  %add3671 = add nsw i32 %tmp3668, %tmp3670       ; <i32> [#uses=1]
  %tmp3672 = load <4 x i32>* %temp_index_v_4      ; <<4 x i32>> [#uses=1]
  %tmp3673 = extractelement <4 x i32> %tmp3672, i32 2 ; <i32> [#uses=1]
  %add3674 = add nsw i32 %add3671, %tmp3673       ; <i32> [#uses=1]
  store i32 %add3674, i32* %temp_index_4
  %tmp3675 = load i32* %temp_index_4              ; <i32> [#uses=1]
  %tmp3676 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3677 = getelementptr inbounds i32 addrspace(1)* %tmp3676, i32 %tmp3675 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3678 = load i32 addrspace(1)* %arrayidx3677 ; <i32> [#uses=1]
  store i32 %tmp3678, i32* %delta_4
  %tmp3679 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp3680 = load i32* %base_index_4              ; <i32> [#uses=1]
  %add.ptr3681 = getelementptr inbounds i32 addrspace(1)* %tmp3679, i32 %tmp3680 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3682 = load i32* %temp_index_4              ; <i32> [#uses=1]
  %tmp3683 = load i32 addrspace(1)** %LookUp4.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3684 = getelementptr inbounds i32 addrspace(1)* %tmp3683, i32 %tmp3682 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3685 = load i32 addrspace(1)* %arrayidx3684 ; <i32> [#uses=1]
  %add.ptr3686 = getelementptr inbounds i32 addrspace(1)* %add.ptr3681, i32 %tmp3685 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr3686, i32 addrspace(1)** %addr_0_3_4
  %tmp3688 = load i32 addrspace(1)** %addr_0_3_4  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3689 = getelementptr inbounds i32 addrspace(1)* %tmp3688, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3690 = load i32 addrspace(1)* %arrayidx3689 ; <i32> [#uses=1]
  %vecinit3691 = insertelement <4 x i32> undef, i32 %tmp3690, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp3692 = load i32 addrspace(1)** %addr_0_3_4  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3693 = getelementptr inbounds i32 addrspace(1)* %tmp3692, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3694 = load i32 addrspace(1)* %arrayidx3693 ; <i32> [#uses=1]
  %vecinit3695 = insertelement <4 x i32> %vecinit3691, i32 %tmp3694, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp3696 = load i32 addrspace(1)** %addr_0_3_4  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3697 = getelementptr inbounds i32 addrspace(1)* %tmp3696, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3698 = load i32 addrspace(1)* %arrayidx3697 ; <i32> [#uses=1]
  %vecinit3699 = insertelement <4 x i32> %vecinit3695, i32 %tmp3698, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp3700 = load i32 addrspace(1)** %addr_0_3_4  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3701 = getelementptr inbounds i32 addrspace(1)* %tmp3700, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3702 = load i32 addrspace(1)* %arrayidx3701 ; <i32> [#uses=1]
  %vecinit3703 = insertelement <4 x i32> %vecinit3699, i32 %tmp3702, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit3703, <4 x i32>* %.compoundliteral3687
  %tmp3704 = load <4 x i32>* %.compoundliteral3687 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp3704, <4 x i32>* %xmm_tree_0_3_4
  %tmp3705 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp3706 = load <4 x i32>* %xmm_query_element_4 ; <<4 x i32>> [#uses=1]
  %tmp3707 = load <4 x i32>* %xmm_tree_0_3_4      ; <<4 x i32>> [#uses=1]
  %cmp3708 = icmp sgt <4 x i32> %tmp3706, %tmp3707 ; <<4 x i1>> [#uses=1]
  %sext3709 = sext <4 x i1> %cmp3708 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul3710 = mul <4 x i32> %tmp3705, %sext3709    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul3710, <4 x i32>* %temp_index_v_4
  %tmp3711 = load <4 x i32>* %temp_index_v_4      ; <<4 x i32>> [#uses=1]
  %tmp3712 = extractelement <4 x i32> %tmp3711, i32 0 ; <i32> [#uses=1]
  %tmp3713 = load <4 x i32>* %temp_index_v_4      ; <<4 x i32>> [#uses=1]
  %tmp3714 = extractelement <4 x i32> %tmp3713, i32 1 ; <i32> [#uses=1]
  %add3715 = add nsw i32 %tmp3712, %tmp3714       ; <i32> [#uses=1]
  %tmp3716 = load <4 x i32>* %temp_index_v_4      ; <<4 x i32>> [#uses=1]
  %tmp3717 = extractelement <4 x i32> %tmp3716, i32 2 ; <i32> [#uses=1]
  %add3718 = add nsw i32 %add3715, %tmp3717       ; <i32> [#uses=1]
  store i32 %add3718, i32* %temp_index_4
  %tmp3719 = load i32* %delta_4                   ; <i32> [#uses=1]
  %shl3720 = shl i32 %tmp3719, 2                  ; <i32> [#uses=1]
  %tmp3721 = load i32* %temp_index_4              ; <i32> [#uses=1]
  %tmp3722 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3723 = getelementptr inbounds i32 addrspace(1)* %tmp3722, i32 %tmp3721 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3724 = load i32 addrspace(1)* %arrayidx3723 ; <i32> [#uses=1]
  %add3725 = add nsw i32 %shl3720, %tmp3724       ; <i32> [#uses=1]
  store i32 %add3725, i32* %offset3_4
  %tmp3726 = load i32* %offset2_4                 ; <i32> [#uses=1]
  %mul3727 = mul i32 %tmp3726, 16                 ; <i32> [#uses=1]
  %tmp3728 = load i32* %offset3_4                 ; <i32> [#uses=1]
  %add3729 = add nsw i32 %mul3727, %tmp3728       ; <i32> [#uses=1]
  store i32 %add3729, i32* %offset2_4
  %tmp3730 = load i32* %block_base_index_4        ; <i32> [#uses=1]
  %add3731 = add nsw i32 %tmp3730, 255            ; <i32> [#uses=1]
  %tmp3732 = load i32* %offset2_4                 ; <i32> [#uses=1]
  %mul3733 = mul i32 %tmp3732, 3                  ; <i32> [#uses=1]
  %add3734 = add nsw i32 %add3731, %mul3733       ; <i32> [#uses=1]
  store i32 %add3734, i32* %base_index_4
  %tmp3735 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp3736 = load i32* %base_index_4              ; <i32> [#uses=1]
  %add.ptr3737 = getelementptr inbounds i32 addrspace(1)* %tmp3735, i32 %tmp3736 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr3737, i32 16)
  store i32 0, i32* %offset3_4
  %tmp3738 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp3739 = load i32* %base_index_5              ; <i32> [#uses=1]
  %add.ptr3740 = getelementptr inbounds i32 addrspace(1)* %tmp3738, i32 %tmp3739 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr3740, i32 addrspace(1)** %addr_0_3_5
  %tmp3742 = load i32 addrspace(1)** %addr_0_3_5  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3743 = getelementptr inbounds i32 addrspace(1)* %tmp3742, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3744 = load i32 addrspace(1)* %arrayidx3743 ; <i32> [#uses=1]
  %vecinit3745 = insertelement <4 x i32> undef, i32 %tmp3744, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp3746 = load i32 addrspace(1)** %addr_0_3_5  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3747 = getelementptr inbounds i32 addrspace(1)* %tmp3746, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3748 = load i32 addrspace(1)* %arrayidx3747 ; <i32> [#uses=1]
  %vecinit3749 = insertelement <4 x i32> %vecinit3745, i32 %tmp3748, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp3750 = load i32 addrspace(1)** %addr_0_3_5  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3751 = getelementptr inbounds i32 addrspace(1)* %tmp3750, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3752 = load i32 addrspace(1)* %arrayidx3751 ; <i32> [#uses=1]
  %vecinit3753 = insertelement <4 x i32> %vecinit3749, i32 %tmp3752, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp3754 = load i32 addrspace(1)** %addr_0_3_5  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3755 = getelementptr inbounds i32 addrspace(1)* %tmp3754, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3756 = load i32 addrspace(1)* %arrayidx3755 ; <i32> [#uses=1]
  %vecinit3757 = insertelement <4 x i32> %vecinit3753, i32 %tmp3756, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit3757, <4 x i32>* %.compoundliteral3741
  %tmp3758 = load <4 x i32>* %.compoundliteral3741 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp3758, <4 x i32>* %xmm_tree_0_3_5
  %tmp3759 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp3760 = load <4 x i32>* %xmm_query_element_5 ; <<4 x i32>> [#uses=1]
  %tmp3761 = load <4 x i32>* %xmm_tree_0_3_5      ; <<4 x i32>> [#uses=1]
  %cmp3762 = icmp sgt <4 x i32> %tmp3760, %tmp3761 ; <<4 x i1>> [#uses=1]
  %sext3763 = sext <4 x i1> %cmp3762 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul3764 = mul <4 x i32> %tmp3759, %sext3763    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul3764, <4 x i32>* %temp_index_v_5
  %tmp3765 = load <4 x i32>* %temp_index_v_5      ; <<4 x i32>> [#uses=1]
  %tmp3766 = extractelement <4 x i32> %tmp3765, i32 0 ; <i32> [#uses=1]
  %tmp3767 = load <4 x i32>* %temp_index_v_5      ; <<4 x i32>> [#uses=1]
  %tmp3768 = extractelement <4 x i32> %tmp3767, i32 1 ; <i32> [#uses=1]
  %add3769 = add nsw i32 %tmp3766, %tmp3768       ; <i32> [#uses=1]
  %tmp3770 = load <4 x i32>* %temp_index_v_5      ; <<4 x i32>> [#uses=1]
  %tmp3771 = extractelement <4 x i32> %tmp3770, i32 2 ; <i32> [#uses=1]
  %add3772 = add nsw i32 %add3769, %tmp3771       ; <i32> [#uses=1]
  store i32 %add3772, i32* %temp_index_5
  %tmp3773 = load i32* %temp_index_5              ; <i32> [#uses=1]
  %tmp3774 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3775 = getelementptr inbounds i32 addrspace(1)* %tmp3774, i32 %tmp3773 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3776 = load i32 addrspace(1)* %arrayidx3775 ; <i32> [#uses=1]
  store i32 %tmp3776, i32* %delta_5
  %tmp3777 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp3778 = load i32* %base_index_5              ; <i32> [#uses=1]
  %add.ptr3779 = getelementptr inbounds i32 addrspace(1)* %tmp3777, i32 %tmp3778 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3780 = load i32* %temp_index_5              ; <i32> [#uses=1]
  %tmp3781 = load i32 addrspace(1)** %LookUp4.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3782 = getelementptr inbounds i32 addrspace(1)* %tmp3781, i32 %tmp3780 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3783 = load i32 addrspace(1)* %arrayidx3782 ; <i32> [#uses=1]
  %add.ptr3784 = getelementptr inbounds i32 addrspace(1)* %add.ptr3779, i32 %tmp3783 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr3784, i32 addrspace(1)** %addr_0_3_5
  %tmp3786 = load i32 addrspace(1)** %addr_0_3_5  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3787 = getelementptr inbounds i32 addrspace(1)* %tmp3786, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3788 = load i32 addrspace(1)* %arrayidx3787 ; <i32> [#uses=1]
  %vecinit3789 = insertelement <4 x i32> undef, i32 %tmp3788, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp3790 = load i32 addrspace(1)** %addr_0_3_5  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3791 = getelementptr inbounds i32 addrspace(1)* %tmp3790, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3792 = load i32 addrspace(1)* %arrayidx3791 ; <i32> [#uses=1]
  %vecinit3793 = insertelement <4 x i32> %vecinit3789, i32 %tmp3792, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp3794 = load i32 addrspace(1)** %addr_0_3_5  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3795 = getelementptr inbounds i32 addrspace(1)* %tmp3794, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3796 = load i32 addrspace(1)* %arrayidx3795 ; <i32> [#uses=1]
  %vecinit3797 = insertelement <4 x i32> %vecinit3793, i32 %tmp3796, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp3798 = load i32 addrspace(1)** %addr_0_3_5  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3799 = getelementptr inbounds i32 addrspace(1)* %tmp3798, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3800 = load i32 addrspace(1)* %arrayidx3799 ; <i32> [#uses=1]
  %vecinit3801 = insertelement <4 x i32> %vecinit3797, i32 %tmp3800, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit3801, <4 x i32>* %.compoundliteral3785
  %tmp3802 = load <4 x i32>* %.compoundliteral3785 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp3802, <4 x i32>* %xmm_tree_0_3_5
  %tmp3803 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp3804 = load <4 x i32>* %xmm_query_element_5 ; <<4 x i32>> [#uses=1]
  %tmp3805 = load <4 x i32>* %xmm_tree_0_3_5      ; <<4 x i32>> [#uses=1]
  %cmp3806 = icmp sgt <4 x i32> %tmp3804, %tmp3805 ; <<4 x i1>> [#uses=1]
  %sext3807 = sext <4 x i1> %cmp3806 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul3808 = mul <4 x i32> %tmp3803, %sext3807    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul3808, <4 x i32>* %temp_index_v_5
  %tmp3809 = load <4 x i32>* %temp_index_v_5      ; <<4 x i32>> [#uses=1]
  %tmp3810 = extractelement <4 x i32> %tmp3809, i32 0 ; <i32> [#uses=1]
  %tmp3811 = load <4 x i32>* %temp_index_v_5      ; <<4 x i32>> [#uses=1]
  %tmp3812 = extractelement <4 x i32> %tmp3811, i32 1 ; <i32> [#uses=1]
  %add3813 = add nsw i32 %tmp3810, %tmp3812       ; <i32> [#uses=1]
  %tmp3814 = load <4 x i32>* %temp_index_v_5      ; <<4 x i32>> [#uses=1]
  %tmp3815 = extractelement <4 x i32> %tmp3814, i32 2 ; <i32> [#uses=1]
  %add3816 = add nsw i32 %add3813, %tmp3815       ; <i32> [#uses=1]
  store i32 %add3816, i32* %temp_index_5
  %tmp3817 = load i32* %delta_5                   ; <i32> [#uses=1]
  %shl3818 = shl i32 %tmp3817, 2                  ; <i32> [#uses=1]
  %tmp3819 = load i32* %temp_index_5              ; <i32> [#uses=1]
  %tmp3820 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3821 = getelementptr inbounds i32 addrspace(1)* %tmp3820, i32 %tmp3819 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3822 = load i32 addrspace(1)* %arrayidx3821 ; <i32> [#uses=1]
  %add3823 = add nsw i32 %shl3818, %tmp3822       ; <i32> [#uses=1]
  store i32 %add3823, i32* %offset3_5
  %tmp3824 = load i32* %offset2_5                 ; <i32> [#uses=1]
  %mul3825 = mul i32 %tmp3824, 16                 ; <i32> [#uses=1]
  %tmp3826 = load i32* %offset3_5                 ; <i32> [#uses=1]
  %add3827 = add nsw i32 %mul3825, %tmp3826       ; <i32> [#uses=1]
  store i32 %add3827, i32* %offset2_5
  %tmp3828 = load i32* %block_base_index_5        ; <i32> [#uses=1]
  %add3829 = add nsw i32 %tmp3828, 255            ; <i32> [#uses=1]
  %tmp3830 = load i32* %offset2_5                 ; <i32> [#uses=1]
  %mul3831 = mul i32 %tmp3830, 3                  ; <i32> [#uses=1]
  %add3832 = add nsw i32 %add3829, %mul3831       ; <i32> [#uses=1]
  store i32 %add3832, i32* %base_index_5
  %tmp3833 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp3834 = load i32* %base_index_5              ; <i32> [#uses=1]
  %add.ptr3835 = getelementptr inbounds i32 addrspace(1)* %tmp3833, i32 %tmp3834 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr3835, i32 16)
  store i32 0, i32* %offset3_5
  %tmp3836 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp3837 = load i32* %base_index_6              ; <i32> [#uses=1]
  %add.ptr3838 = getelementptr inbounds i32 addrspace(1)* %tmp3836, i32 %tmp3837 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr3838, i32 addrspace(1)** %addr_0_3_6
  %tmp3840 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3841 = getelementptr inbounds i32 addrspace(1)* %tmp3840, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3842 = load i32 addrspace(1)* %arrayidx3841 ; <i32> [#uses=1]
  %vecinit3843 = insertelement <4 x i32> undef, i32 %tmp3842, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp3844 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3845 = getelementptr inbounds i32 addrspace(1)* %tmp3844, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3846 = load i32 addrspace(1)* %arrayidx3845 ; <i32> [#uses=1]
  %vecinit3847 = insertelement <4 x i32> %vecinit3843, i32 %tmp3846, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp3848 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3849 = getelementptr inbounds i32 addrspace(1)* %tmp3848, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3850 = load i32 addrspace(1)* %arrayidx3849 ; <i32> [#uses=1]
  %vecinit3851 = insertelement <4 x i32> %vecinit3847, i32 %tmp3850, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp3852 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3853 = getelementptr inbounds i32 addrspace(1)* %tmp3852, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3854 = load i32 addrspace(1)* %arrayidx3853 ; <i32> [#uses=1]
  %vecinit3855 = insertelement <4 x i32> %vecinit3851, i32 %tmp3854, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit3855, <4 x i32>* %.compoundliteral3839
  %tmp3856 = load <4 x i32>* %.compoundliteral3839 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp3856, <4 x i32>* %xmm_tree_0_3_6
  %tmp3857 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp3858 = load <4 x i32>* %xmm_query_element_6 ; <<4 x i32>> [#uses=1]
  %tmp3859 = load <4 x i32>* %xmm_tree_0_3_6      ; <<4 x i32>> [#uses=1]
  %cmp3860 = icmp sgt <4 x i32> %tmp3858, %tmp3859 ; <<4 x i1>> [#uses=1]
  %sext3861 = sext <4 x i1> %cmp3860 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul3862 = mul <4 x i32> %tmp3857, %sext3861    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul3862, <4 x i32>* %temp_index_v_6
  %tmp3863 = load <4 x i32>* %temp_index_v_6      ; <<4 x i32>> [#uses=1]
  %tmp3864 = extractelement <4 x i32> %tmp3863, i32 0 ; <i32> [#uses=1]
  %tmp3865 = load <4 x i32>* %temp_index_v_6      ; <<4 x i32>> [#uses=1]
  %tmp3866 = extractelement <4 x i32> %tmp3865, i32 1 ; <i32> [#uses=1]
  %add3867 = add nsw i32 %tmp3864, %tmp3866       ; <i32> [#uses=1]
  %tmp3868 = load <4 x i32>* %temp_index_v_6      ; <<4 x i32>> [#uses=1]
  %tmp3869 = extractelement <4 x i32> %tmp3868, i32 2 ; <i32> [#uses=1]
  %add3870 = add nsw i32 %add3867, %tmp3869       ; <i32> [#uses=1]
  store i32 %add3870, i32* %temp_index_6
  %tmp3871 = load i32* %temp_index_6              ; <i32> [#uses=1]
  %tmp3872 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3873 = getelementptr inbounds i32 addrspace(1)* %tmp3872, i32 %tmp3871 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3874 = load i32 addrspace(1)* %arrayidx3873 ; <i32> [#uses=1]
  store i32 %tmp3874, i32* %delta_6
  %tmp3875 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp3876 = load i32* %base_index_6              ; <i32> [#uses=1]
  %add.ptr3877 = getelementptr inbounds i32 addrspace(1)* %tmp3875, i32 %tmp3876 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3878 = load i32* %temp_index_6              ; <i32> [#uses=1]
  %tmp3879 = load i32 addrspace(1)** %LookUp4.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3880 = getelementptr inbounds i32 addrspace(1)* %tmp3879, i32 %tmp3878 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3881 = load i32 addrspace(1)* %arrayidx3880 ; <i32> [#uses=1]
  %add.ptr3882 = getelementptr inbounds i32 addrspace(1)* %add.ptr3877, i32 %tmp3881 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr3882, i32 addrspace(1)** %addr_0_3_6
  %tmp3884 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3885 = getelementptr inbounds i32 addrspace(1)* %tmp3884, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3886 = load i32 addrspace(1)* %arrayidx3885 ; <i32> [#uses=1]
  %vecinit3887 = insertelement <4 x i32> undef, i32 %tmp3886, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp3888 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3889 = getelementptr inbounds i32 addrspace(1)* %tmp3888, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3890 = load i32 addrspace(1)* %arrayidx3889 ; <i32> [#uses=1]
  %vecinit3891 = insertelement <4 x i32> %vecinit3887, i32 %tmp3890, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp3892 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3893 = getelementptr inbounds i32 addrspace(1)* %tmp3892, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3894 = load i32 addrspace(1)* %arrayidx3893 ; <i32> [#uses=1]
  %vecinit3895 = insertelement <4 x i32> %vecinit3891, i32 %tmp3894, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp3896 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3897 = getelementptr inbounds i32 addrspace(1)* %tmp3896, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3898 = load i32 addrspace(1)* %arrayidx3897 ; <i32> [#uses=1]
  %vecinit3899 = insertelement <4 x i32> %vecinit3895, i32 %tmp3898, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit3899, <4 x i32>* %.compoundliteral3883
  %tmp3900 = load <4 x i32>* %.compoundliteral3883 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp3900, <4 x i32>* %xmm_tree_0_3_6
  %tmp3901 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp3902 = load <4 x i32>* %xmm_query_element_6 ; <<4 x i32>> [#uses=1]
  %tmp3903 = load <4 x i32>* %xmm_tree_0_3_6      ; <<4 x i32>> [#uses=1]
  %cmp3904 = icmp sgt <4 x i32> %tmp3902, %tmp3903 ; <<4 x i1>> [#uses=1]
  %sext3905 = sext <4 x i1> %cmp3904 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul3906 = mul <4 x i32> %tmp3901, %sext3905    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul3906, <4 x i32>* %temp_index_v_6
  %tmp3907 = load <4 x i32>* %temp_index_v_6      ; <<4 x i32>> [#uses=1]
  %tmp3908 = extractelement <4 x i32> %tmp3907, i32 0 ; <i32> [#uses=1]
  %tmp3909 = load <4 x i32>* %temp_index_v_6      ; <<4 x i32>> [#uses=1]
  %tmp3910 = extractelement <4 x i32> %tmp3909, i32 1 ; <i32> [#uses=1]
  %add3911 = add nsw i32 %tmp3908, %tmp3910       ; <i32> [#uses=1]
  %tmp3912 = load <4 x i32>* %temp_index_v_6      ; <<4 x i32>> [#uses=1]
  %tmp3913 = extractelement <4 x i32> %tmp3912, i32 2 ; <i32> [#uses=1]
  %add3914 = add nsw i32 %add3911, %tmp3913       ; <i32> [#uses=1]
  store i32 %add3914, i32* %temp_index_6
  %tmp3915 = load i32* %delta_6                   ; <i32> [#uses=1]
  %shl3916 = shl i32 %tmp3915, 2                  ; <i32> [#uses=1]
  %tmp3917 = load i32* %temp_index_6              ; <i32> [#uses=1]
  %tmp3918 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3919 = getelementptr inbounds i32 addrspace(1)* %tmp3918, i32 %tmp3917 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3920 = load i32 addrspace(1)* %arrayidx3919 ; <i32> [#uses=1]
  %add3921 = add nsw i32 %shl3916, %tmp3920       ; <i32> [#uses=1]
  store i32 %add3921, i32* %offset3_6
  %tmp3922 = load i32* %offset2_6                 ; <i32> [#uses=1]
  %mul3923 = mul i32 %tmp3922, 16                 ; <i32> [#uses=1]
  %tmp3924 = load i32* %offset3_6                 ; <i32> [#uses=1]
  %add3925 = add nsw i32 %mul3923, %tmp3924       ; <i32> [#uses=1]
  store i32 %add3925, i32* %offset2_6
  %tmp3926 = load i32* %block_base_index_6        ; <i32> [#uses=1]
  %add3927 = add nsw i32 %tmp3926, 255            ; <i32> [#uses=1]
  %tmp3928 = load i32* %offset2_6                 ; <i32> [#uses=1]
  %mul3929 = mul i32 %tmp3928, 3                  ; <i32> [#uses=1]
  %add3930 = add nsw i32 %add3927, %mul3929       ; <i32> [#uses=1]
  store i32 %add3930, i32* %base_index_6
  %tmp3931 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp3932 = load i32* %base_index_6              ; <i32> [#uses=1]
  %add.ptr3933 = getelementptr inbounds i32 addrspace(1)* %tmp3931, i32 %tmp3932 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr3933, i32 16)
  store i32 0, i32* %offset3_6
  %tmp3934 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp3935 = load i32* %base_index_7              ; <i32> [#uses=1]
  %add.ptr3936 = getelementptr inbounds i32 addrspace(1)* %tmp3934, i32 %tmp3935 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr3936, i32 addrspace(1)** %addr_0_3_7
  %tmp3938 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3939 = getelementptr inbounds i32 addrspace(1)* %tmp3938, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3940 = load i32 addrspace(1)* %arrayidx3939 ; <i32> [#uses=1]
  %vecinit3941 = insertelement <4 x i32> undef, i32 %tmp3940, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp3942 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3943 = getelementptr inbounds i32 addrspace(1)* %tmp3942, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3944 = load i32 addrspace(1)* %arrayidx3943 ; <i32> [#uses=1]
  %vecinit3945 = insertelement <4 x i32> %vecinit3941, i32 %tmp3944, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp3946 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3947 = getelementptr inbounds i32 addrspace(1)* %tmp3946, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3948 = load i32 addrspace(1)* %arrayidx3947 ; <i32> [#uses=1]
  %vecinit3949 = insertelement <4 x i32> %vecinit3945, i32 %tmp3948, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp3950 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3951 = getelementptr inbounds i32 addrspace(1)* %tmp3950, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3952 = load i32 addrspace(1)* %arrayidx3951 ; <i32> [#uses=1]
  %vecinit3953 = insertelement <4 x i32> %vecinit3949, i32 %tmp3952, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit3953, <4 x i32>* %.compoundliteral3937
  %tmp3954 = load <4 x i32>* %.compoundliteral3937 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp3954, <4 x i32>* %xmm_tree_0_3_7
  %tmp3955 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp3956 = load <4 x i32>* %xmm_query_element_7 ; <<4 x i32>> [#uses=1]
  %tmp3957 = load <4 x i32>* %xmm_tree_0_3_7      ; <<4 x i32>> [#uses=1]
  %cmp3958 = icmp sgt <4 x i32> %tmp3956, %tmp3957 ; <<4 x i1>> [#uses=1]
  %sext3959 = sext <4 x i1> %cmp3958 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul3960 = mul <4 x i32> %tmp3955, %sext3959    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul3960, <4 x i32>* %temp_index_v_7
  %tmp3961 = load <4 x i32>* %temp_index_v_7      ; <<4 x i32>> [#uses=1]
  %tmp3962 = extractelement <4 x i32> %tmp3961, i32 0 ; <i32> [#uses=1]
  %tmp3963 = load <4 x i32>* %temp_index_v_7      ; <<4 x i32>> [#uses=1]
  %tmp3964 = extractelement <4 x i32> %tmp3963, i32 1 ; <i32> [#uses=1]
  %add3965 = add nsw i32 %tmp3962, %tmp3964       ; <i32> [#uses=1]
  %tmp3966 = load <4 x i32>* %temp_index_v_7      ; <<4 x i32>> [#uses=1]
  %tmp3967 = extractelement <4 x i32> %tmp3966, i32 2 ; <i32> [#uses=1]
  %add3968 = add nsw i32 %add3965, %tmp3967       ; <i32> [#uses=1]
  store i32 %add3968, i32* %temp_index_7
  %tmp3969 = load i32* %temp_index_7              ; <i32> [#uses=1]
  %tmp3970 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3971 = getelementptr inbounds i32 addrspace(1)* %tmp3970, i32 %tmp3969 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3972 = load i32 addrspace(1)* %arrayidx3971 ; <i32> [#uses=1]
  store i32 %tmp3972, i32* %delta_7
  %tmp3973 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp3974 = load i32* %base_index_7              ; <i32> [#uses=1]
  %add.ptr3975 = getelementptr inbounds i32 addrspace(1)* %tmp3973, i32 %tmp3974 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3976 = load i32* %temp_index_7              ; <i32> [#uses=1]
  %tmp3977 = load i32 addrspace(1)** %LookUp4.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3978 = getelementptr inbounds i32 addrspace(1)* %tmp3977, i32 %tmp3976 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3979 = load i32 addrspace(1)* %arrayidx3978 ; <i32> [#uses=1]
  %add.ptr3980 = getelementptr inbounds i32 addrspace(1)* %add.ptr3975, i32 %tmp3979 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr3980, i32 addrspace(1)** %addr_0_3_7
  %tmp3982 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3983 = getelementptr inbounds i32 addrspace(1)* %tmp3982, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3984 = load i32 addrspace(1)* %arrayidx3983 ; <i32> [#uses=1]
  %vecinit3985 = insertelement <4 x i32> undef, i32 %tmp3984, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp3986 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3987 = getelementptr inbounds i32 addrspace(1)* %tmp3986, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3988 = load i32 addrspace(1)* %arrayidx3987 ; <i32> [#uses=1]
  %vecinit3989 = insertelement <4 x i32> %vecinit3985, i32 %tmp3988, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp3990 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3991 = getelementptr inbounds i32 addrspace(1)* %tmp3990, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3992 = load i32 addrspace(1)* %arrayidx3991 ; <i32> [#uses=1]
  %vecinit3993 = insertelement <4 x i32> %vecinit3989, i32 %tmp3992, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp3994 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx3995 = getelementptr inbounds i32 addrspace(1)* %tmp3994, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp3996 = load i32 addrspace(1)* %arrayidx3995 ; <i32> [#uses=1]
  %vecinit3997 = insertelement <4 x i32> %vecinit3993, i32 %tmp3996, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit3997, <4 x i32>* %.compoundliteral3981
  %tmp3998 = load <4 x i32>* %.compoundliteral3981 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp3998, <4 x i32>* %xmm_tree_0_3_7
  %tmp3999 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp4000 = load <4 x i32>* %xmm_query_element_7 ; <<4 x i32>> [#uses=1]
  %tmp4001 = load <4 x i32>* %xmm_tree_0_3_7      ; <<4 x i32>> [#uses=1]
  %cmp4002 = icmp sgt <4 x i32> %tmp4000, %tmp4001 ; <<4 x i1>> [#uses=1]
  %sext4003 = sext <4 x i1> %cmp4002 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul4004 = mul <4 x i32> %tmp3999, %sext4003    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul4004, <4 x i32>* %temp_index_v_7
  %tmp4005 = load <4 x i32>* %temp_index_v_7      ; <<4 x i32>> [#uses=1]
  %tmp4006 = extractelement <4 x i32> %tmp4005, i32 0 ; <i32> [#uses=1]
  %tmp4007 = load <4 x i32>* %temp_index_v_7      ; <<4 x i32>> [#uses=1]
  %tmp4008 = extractelement <4 x i32> %tmp4007, i32 1 ; <i32> [#uses=1]
  %add4009 = add nsw i32 %tmp4006, %tmp4008       ; <i32> [#uses=1]
  %tmp4010 = load <4 x i32>* %temp_index_v_7      ; <<4 x i32>> [#uses=1]
  %tmp4011 = extractelement <4 x i32> %tmp4010, i32 2 ; <i32> [#uses=1]
  %add4012 = add nsw i32 %add4009, %tmp4011       ; <i32> [#uses=1]
  store i32 %add4012, i32* %temp_index_7
  %tmp4013 = load i32* %delta_7                   ; <i32> [#uses=1]
  %shl4014 = shl i32 %tmp4013, 2                  ; <i32> [#uses=1]
  %tmp4015 = load i32* %temp_index_7              ; <i32> [#uses=1]
  %tmp4016 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4017 = getelementptr inbounds i32 addrspace(1)* %tmp4016, i32 %tmp4015 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4018 = load i32 addrspace(1)* %arrayidx4017 ; <i32> [#uses=1]
  %add4019 = add nsw i32 %shl4014, %tmp4018       ; <i32> [#uses=1]
  store i32 %add4019, i32* %offset3_7
  %tmp4020 = load i32* %offset2_7                 ; <i32> [#uses=1]
  %mul4021 = mul i32 %tmp4020, 16                 ; <i32> [#uses=1]
  %tmp4022 = load i32* %offset3_7                 ; <i32> [#uses=1]
  %add4023 = add nsw i32 %mul4021, %tmp4022       ; <i32> [#uses=1]
  store i32 %add4023, i32* %offset2_7
  %tmp4024 = load i32* %block_base_index_7        ; <i32> [#uses=1]
  %add4025 = add nsw i32 %tmp4024, 255            ; <i32> [#uses=1]
  %tmp4026 = load i32* %offset2_7                 ; <i32> [#uses=1]
  %mul4027 = mul i32 %tmp4026, 3                  ; <i32> [#uses=1]
  %add4028 = add nsw i32 %add4025, %mul4027       ; <i32> [#uses=1]
  store i32 %add4028, i32* %base_index_7
  %tmp4029 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp4030 = load i32* %base_index_7              ; <i32> [#uses=1]
  %add.ptr4031 = getelementptr inbounds i32 addrspace(1)* %tmp4029, i32 %tmp4030 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr4031, i32 16)
  store i32 0, i32* %offset3_7
  store i32 0, i32* %delta_0
  %tmp4032 = load i32* %base_index_0              ; <i32> [#uses=1]
  %add4033 = add nsw i32 %tmp4032, 0              ; <i32> [#uses=1]
  %tmp4034 = load i32* %offset3_0                 ; <i32> [#uses=1]
  %mul4035 = mul i32 %tmp4034, 3                  ; <i32> [#uses=1]
  %add4036 = add nsw i32 %add4033, %mul4035       ; <i32> [#uses=1]
  store i32 %add4036, i32* %base_index2_0
  %tmp4037 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp4038 = load i32* %base_index2_0             ; <i32> [#uses=1]
  %add.ptr4039 = getelementptr inbounds i32 addrspace(1)* %tmp4037, i32 %tmp4038 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr4039, i32 addrspace(1)** %addr_0_3_0
  %tmp4041 = load i32 addrspace(1)** %addr_0_3_0  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4042 = getelementptr inbounds i32 addrspace(1)* %tmp4041, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4043 = load i32 addrspace(1)* %arrayidx4042 ; <i32> [#uses=1]
  %vecinit4044 = insertelement <4 x i32> undef, i32 %tmp4043, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp4045 = load i32 addrspace(1)** %addr_0_3_0  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4046 = getelementptr inbounds i32 addrspace(1)* %tmp4045, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4047 = load i32 addrspace(1)* %arrayidx4046 ; <i32> [#uses=1]
  %vecinit4048 = insertelement <4 x i32> %vecinit4044, i32 %tmp4047, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp4049 = load i32 addrspace(1)** %addr_0_3_0  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4050 = getelementptr inbounds i32 addrspace(1)* %tmp4049, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4051 = load i32 addrspace(1)* %arrayidx4050 ; <i32> [#uses=1]
  %vecinit4052 = insertelement <4 x i32> %vecinit4048, i32 %tmp4051, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp4053 = load i32 addrspace(1)** %addr_0_3_0  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4054 = getelementptr inbounds i32 addrspace(1)* %tmp4053, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4055 = load i32 addrspace(1)* %arrayidx4054 ; <i32> [#uses=1]
  %vecinit4056 = insertelement <4 x i32> %vecinit4052, i32 %tmp4055, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit4056, <4 x i32>* %.compoundliteral4040
  %tmp4057 = load <4 x i32>* %.compoundliteral4040 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp4057, <4 x i32>* %xmm_tree_0_3_0
  %tmp4058 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp4059 = load <4 x i32>* %xmm_query_element_0 ; <<4 x i32>> [#uses=1]
  %tmp4060 = load <4 x i32>* %xmm_tree_0_3_0      ; <<4 x i32>> [#uses=1]
  %cmp4061 = icmp sgt <4 x i32> %tmp4059, %tmp4060 ; <<4 x i1>> [#uses=1]
  %sext4062 = sext <4 x i1> %cmp4061 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul4063 = mul <4 x i32> %tmp4058, %sext4062    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul4063, <4 x i32>* %temp_index_v_0
  %tmp4064 = load <4 x i32>* %temp_index_v_0      ; <<4 x i32>> [#uses=1]
  %tmp4065 = extractelement <4 x i32> %tmp4064, i32 0 ; <i32> [#uses=1]
  %tmp4066 = load <4 x i32>* %temp_index_v_0      ; <<4 x i32>> [#uses=1]
  %tmp4067 = extractelement <4 x i32> %tmp4066, i32 1 ; <i32> [#uses=1]
  %add4068 = add nsw i32 %tmp4065, %tmp4067       ; <i32> [#uses=1]
  %tmp4069 = load <4 x i32>* %temp_index_v_0      ; <<4 x i32>> [#uses=1]
  %tmp4070 = extractelement <4 x i32> %tmp4069, i32 2 ; <i32> [#uses=1]
  %add4071 = add nsw i32 %add4068, %tmp4070       ; <i32> [#uses=1]
  store i32 %add4071, i32* %temp_index_0
  %tmp4072 = load i32* %temp_index_0              ; <i32> [#uses=1]
  %tmp4073 = load i32 addrspace(1)** %LookUp2.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4074 = getelementptr inbounds i32 addrspace(1)* %tmp4073, i32 %tmp4072 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4075 = load i32 addrspace(1)* %arrayidx4074 ; <i32> [#uses=1]
  store i32 %tmp4075, i32* %delta_0
  %tmp4076 = load i32* %offset3_0                 ; <i32> [#uses=1]
  %mul4077 = mul i32 %tmp4076, 4                  ; <i32> [#uses=1]
  %tmp4078 = load i32* %delta_0                   ; <i32> [#uses=1]
  %sub4079 = sub i32 %tmp4078, 3                  ; <i32> [#uses=1]
  %add4080 = add nsw i32 %mul4077, %sub4079       ; <i32> [#uses=1]
  store i32 %add4080, i32* %offset3_0
  %tmp4081 = load i32* %offset2_0                 ; <i32> [#uses=1]
  %mul4082 = mul i32 %tmp4081, 4                  ; <i32> [#uses=1]
  %tmp4083 = load i32* %offset3_0                 ; <i32> [#uses=1]
  %add4084 = add nsw i32 %mul4082, %tmp4083       ; <i32> [#uses=1]
  store i32 %add4084, i32* %offset2_0
  %tmp4085 = load i32* %offset1_0                 ; <i32> [#uses=1]
  %mul4086 = mul i32 %tmp4085, 1024               ; <i32> [#uses=1]
  %tmp4087 = load i32* %offset2_0                 ; <i32> [#uses=1]
  %add4088 = add nsw i32 %mul4086, %tmp4087       ; <i32> [#uses=1]
  store i32 %add4088, i32* %offset1_0
  store i32 0, i32* %offset2_0
  %tmp4089 = load i32* %offset1_0                 ; <i32> [#uses=1]
  %mul4090 = mul i32 %tmp4089, 15                 ; <i32> [#uses=1]
  %add4091 = add nsw i32 1049600, %mul4090        ; <i32> [#uses=1]
  store i32 %add4091, i32* %block_base_index_0
  %tmp4092 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp4093 = load i32* %block_base_index_0        ; <i32> [#uses=1]
  %add.ptr4094 = getelementptr inbounds i32 addrspace(1)* %tmp4092, i32 %tmp4093 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr4094, i32 16)
  %tmp4095 = load i32* %block_base_index_0        ; <i32> [#uses=1]
  %add4096 = add nsw i32 %tmp4095, 0              ; <i32> [#uses=1]
  store i32 %add4096, i32* %base_index_0
  store i32 0, i32* %offset3_0
  store i32 0, i32* %delta_1
  %tmp4097 = load i32* %base_index_1              ; <i32> [#uses=1]
  %add4098 = add nsw i32 %tmp4097, 0              ; <i32> [#uses=1]
  %tmp4099 = load i32* %offset3_1                 ; <i32> [#uses=1]
  %mul4100 = mul i32 %tmp4099, 3                  ; <i32> [#uses=1]
  %add4101 = add nsw i32 %add4098, %mul4100       ; <i32> [#uses=1]
  store i32 %add4101, i32* %base_index2_1
  %tmp4102 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp4103 = load i32* %base_index2_1             ; <i32> [#uses=1]
  %add.ptr4104 = getelementptr inbounds i32 addrspace(1)* %tmp4102, i32 %tmp4103 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr4104, i32 addrspace(1)** %addr_0_3_1
  %tmp4106 = load i32 addrspace(1)** %addr_0_3_1  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4107 = getelementptr inbounds i32 addrspace(1)* %tmp4106, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4108 = load i32 addrspace(1)* %arrayidx4107 ; <i32> [#uses=1]
  %vecinit4109 = insertelement <4 x i32> undef, i32 %tmp4108, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp4110 = load i32 addrspace(1)** %addr_0_3_1  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4111 = getelementptr inbounds i32 addrspace(1)* %tmp4110, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4112 = load i32 addrspace(1)* %arrayidx4111 ; <i32> [#uses=1]
  %vecinit4113 = insertelement <4 x i32> %vecinit4109, i32 %tmp4112, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp4114 = load i32 addrspace(1)** %addr_0_3_1  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4115 = getelementptr inbounds i32 addrspace(1)* %tmp4114, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4116 = load i32 addrspace(1)* %arrayidx4115 ; <i32> [#uses=1]
  %vecinit4117 = insertelement <4 x i32> %vecinit4113, i32 %tmp4116, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp4118 = load i32 addrspace(1)** %addr_0_3_1  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4119 = getelementptr inbounds i32 addrspace(1)* %tmp4118, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4120 = load i32 addrspace(1)* %arrayidx4119 ; <i32> [#uses=1]
  %vecinit4121 = insertelement <4 x i32> %vecinit4117, i32 %tmp4120, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit4121, <4 x i32>* %.compoundliteral4105
  %tmp4122 = load <4 x i32>* %.compoundliteral4105 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp4122, <4 x i32>* %xmm_tree_0_3_1
  %tmp4123 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp4124 = load <4 x i32>* %xmm_query_element_1 ; <<4 x i32>> [#uses=1]
  %tmp4125 = load <4 x i32>* %xmm_tree_0_3_1      ; <<4 x i32>> [#uses=1]
  %cmp4126 = icmp sgt <4 x i32> %tmp4124, %tmp4125 ; <<4 x i1>> [#uses=1]
  %sext4127 = sext <4 x i1> %cmp4126 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul4128 = mul <4 x i32> %tmp4123, %sext4127    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul4128, <4 x i32>* %temp_index_v_1
  %tmp4129 = load <4 x i32>* %temp_index_v_1      ; <<4 x i32>> [#uses=1]
  %tmp4130 = extractelement <4 x i32> %tmp4129, i32 0 ; <i32> [#uses=1]
  %tmp4131 = load <4 x i32>* %temp_index_v_1      ; <<4 x i32>> [#uses=1]
  %tmp4132 = extractelement <4 x i32> %tmp4131, i32 1 ; <i32> [#uses=1]
  %add4133 = add nsw i32 %tmp4130, %tmp4132       ; <i32> [#uses=1]
  %tmp4134 = load <4 x i32>* %temp_index_v_1      ; <<4 x i32>> [#uses=1]
  %tmp4135 = extractelement <4 x i32> %tmp4134, i32 2 ; <i32> [#uses=1]
  %add4136 = add nsw i32 %add4133, %tmp4135       ; <i32> [#uses=1]
  store i32 %add4136, i32* %temp_index_1
  %tmp4137 = load i32* %temp_index_1              ; <i32> [#uses=1]
  %tmp4138 = load i32 addrspace(1)** %LookUp2.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4139 = getelementptr inbounds i32 addrspace(1)* %tmp4138, i32 %tmp4137 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4140 = load i32 addrspace(1)* %arrayidx4139 ; <i32> [#uses=1]
  store i32 %tmp4140, i32* %delta_1
  %tmp4141 = load i32* %offset3_1                 ; <i32> [#uses=1]
  %mul4142 = mul i32 %tmp4141, 4                  ; <i32> [#uses=1]
  %tmp4143 = load i32* %delta_1                   ; <i32> [#uses=1]
  %sub4144 = sub i32 %tmp4143, 3                  ; <i32> [#uses=1]
  %add4145 = add nsw i32 %mul4142, %sub4144       ; <i32> [#uses=1]
  store i32 %add4145, i32* %offset3_1
  %tmp4146 = load i32* %offset2_1                 ; <i32> [#uses=1]
  %mul4147 = mul i32 %tmp4146, 4                  ; <i32> [#uses=1]
  %tmp4148 = load i32* %offset3_1                 ; <i32> [#uses=1]
  %add4149 = add nsw i32 %mul4147, %tmp4148       ; <i32> [#uses=1]
  store i32 %add4149, i32* %offset2_1
  %tmp4150 = load i32* %offset1_1                 ; <i32> [#uses=1]
  %mul4151 = mul i32 %tmp4150, 1024               ; <i32> [#uses=1]
  %tmp4152 = load i32* %offset2_1                 ; <i32> [#uses=1]
  %add4153 = add nsw i32 %mul4151, %tmp4152       ; <i32> [#uses=1]
  store i32 %add4153, i32* %offset1_1
  store i32 0, i32* %offset2_1
  %tmp4154 = load i32* %offset1_1                 ; <i32> [#uses=1]
  %mul4155 = mul i32 %tmp4154, 15                 ; <i32> [#uses=1]
  %add4156 = add nsw i32 1049600, %mul4155        ; <i32> [#uses=1]
  store i32 %add4156, i32* %block_base_index_1
  %tmp4157 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp4158 = load i32* %block_base_index_1        ; <i32> [#uses=1]
  %add.ptr4159 = getelementptr inbounds i32 addrspace(1)* %tmp4157, i32 %tmp4158 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr4159, i32 16)
  %tmp4160 = load i32* %block_base_index_1        ; <i32> [#uses=1]
  %add4161 = add nsw i32 %tmp4160, 0              ; <i32> [#uses=1]
  store i32 %add4161, i32* %base_index_1
  store i32 0, i32* %offset3_1
  store i32 0, i32* %delta_2
  %tmp4162 = load i32* %base_index_2              ; <i32> [#uses=1]
  %add4163 = add nsw i32 %tmp4162, 0              ; <i32> [#uses=1]
  %tmp4164 = load i32* %offset3_2                 ; <i32> [#uses=1]
  %mul4165 = mul i32 %tmp4164, 3                  ; <i32> [#uses=1]
  %add4166 = add nsw i32 %add4163, %mul4165       ; <i32> [#uses=1]
  store i32 %add4166, i32* %base_index2_2
  %tmp4167 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp4168 = load i32* %base_index2_2             ; <i32> [#uses=1]
  %add.ptr4169 = getelementptr inbounds i32 addrspace(1)* %tmp4167, i32 %tmp4168 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr4169, i32 addrspace(1)** %addr_0_3_2
  %tmp4171 = load i32 addrspace(1)** %addr_0_3_2  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4172 = getelementptr inbounds i32 addrspace(1)* %tmp4171, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4173 = load i32 addrspace(1)* %arrayidx4172 ; <i32> [#uses=1]
  %vecinit4174 = insertelement <4 x i32> undef, i32 %tmp4173, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp4175 = load i32 addrspace(1)** %addr_0_3_2  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4176 = getelementptr inbounds i32 addrspace(1)* %tmp4175, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4177 = load i32 addrspace(1)* %arrayidx4176 ; <i32> [#uses=1]
  %vecinit4178 = insertelement <4 x i32> %vecinit4174, i32 %tmp4177, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp4179 = load i32 addrspace(1)** %addr_0_3_2  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4180 = getelementptr inbounds i32 addrspace(1)* %tmp4179, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4181 = load i32 addrspace(1)* %arrayidx4180 ; <i32> [#uses=1]
  %vecinit4182 = insertelement <4 x i32> %vecinit4178, i32 %tmp4181, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp4183 = load i32 addrspace(1)** %addr_0_3_2  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4184 = getelementptr inbounds i32 addrspace(1)* %tmp4183, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4185 = load i32 addrspace(1)* %arrayidx4184 ; <i32> [#uses=1]
  %vecinit4186 = insertelement <4 x i32> %vecinit4182, i32 %tmp4185, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit4186, <4 x i32>* %.compoundliteral4170
  %tmp4187 = load <4 x i32>* %.compoundliteral4170 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp4187, <4 x i32>* %xmm_tree_0_3_2
  %tmp4188 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp4189 = load <4 x i32>* %xmm_query_element_2 ; <<4 x i32>> [#uses=1]
  %tmp4190 = load <4 x i32>* %xmm_tree_0_3_2      ; <<4 x i32>> [#uses=1]
  %cmp4191 = icmp sgt <4 x i32> %tmp4189, %tmp4190 ; <<4 x i1>> [#uses=1]
  %sext4192 = sext <4 x i1> %cmp4191 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul4193 = mul <4 x i32> %tmp4188, %sext4192    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul4193, <4 x i32>* %temp_index_v_2
  %tmp4194 = load <4 x i32>* %temp_index_v_2      ; <<4 x i32>> [#uses=1]
  %tmp4195 = extractelement <4 x i32> %tmp4194, i32 0 ; <i32> [#uses=1]
  %tmp4196 = load <4 x i32>* %temp_index_v_2      ; <<4 x i32>> [#uses=1]
  %tmp4197 = extractelement <4 x i32> %tmp4196, i32 1 ; <i32> [#uses=1]
  %add4198 = add nsw i32 %tmp4195, %tmp4197       ; <i32> [#uses=1]
  %tmp4199 = load <4 x i32>* %temp_index_v_2      ; <<4 x i32>> [#uses=1]
  %tmp4200 = extractelement <4 x i32> %tmp4199, i32 2 ; <i32> [#uses=1]
  %add4201 = add nsw i32 %add4198, %tmp4200       ; <i32> [#uses=1]
  store i32 %add4201, i32* %temp_index_2
  %tmp4202 = load i32* %temp_index_2              ; <i32> [#uses=1]
  %tmp4203 = load i32 addrspace(1)** %LookUp2.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4204 = getelementptr inbounds i32 addrspace(1)* %tmp4203, i32 %tmp4202 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4205 = load i32 addrspace(1)* %arrayidx4204 ; <i32> [#uses=1]
  store i32 %tmp4205, i32* %delta_2
  %tmp4206 = load i32* %offset3_2                 ; <i32> [#uses=1]
  %mul4207 = mul i32 %tmp4206, 4                  ; <i32> [#uses=1]
  %tmp4208 = load i32* %delta_2                   ; <i32> [#uses=1]
  %sub4209 = sub i32 %tmp4208, 3                  ; <i32> [#uses=1]
  %add4210 = add nsw i32 %mul4207, %sub4209       ; <i32> [#uses=1]
  store i32 %add4210, i32* %offset3_2
  %tmp4211 = load i32* %offset2_2                 ; <i32> [#uses=1]
  %mul4212 = mul i32 %tmp4211, 4                  ; <i32> [#uses=1]
  %tmp4213 = load i32* %offset3_2                 ; <i32> [#uses=1]
  %add4214 = add nsw i32 %mul4212, %tmp4213       ; <i32> [#uses=1]
  store i32 %add4214, i32* %offset2_2
  %tmp4215 = load i32* %offset1_2                 ; <i32> [#uses=1]
  %mul4216 = mul i32 %tmp4215, 1024               ; <i32> [#uses=1]
  %tmp4217 = load i32* %offset2_2                 ; <i32> [#uses=1]
  %add4218 = add nsw i32 %mul4216, %tmp4217       ; <i32> [#uses=1]
  store i32 %add4218, i32* %offset1_2
  store i32 0, i32* %offset2_2
  %tmp4219 = load i32* %offset1_2                 ; <i32> [#uses=1]
  %mul4220 = mul i32 %tmp4219, 15                 ; <i32> [#uses=1]
  %add4221 = add nsw i32 1049600, %mul4220        ; <i32> [#uses=1]
  store i32 %add4221, i32* %block_base_index_2
  %tmp4222 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp4223 = load i32* %block_base_index_2        ; <i32> [#uses=1]
  %add.ptr4224 = getelementptr inbounds i32 addrspace(1)* %tmp4222, i32 %tmp4223 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr4224, i32 16)
  %tmp4225 = load i32* %block_base_index_2        ; <i32> [#uses=1]
  %add4226 = add nsw i32 %tmp4225, 0              ; <i32> [#uses=1]
  store i32 %add4226, i32* %base_index_2
  store i32 0, i32* %offset3_2
  store i32 0, i32* %delta_3
  %tmp4227 = load i32* %base_index_3              ; <i32> [#uses=1]
  %add4228 = add nsw i32 %tmp4227, 0              ; <i32> [#uses=1]
  %tmp4229 = load i32* %offset3_3                 ; <i32> [#uses=1]
  %mul4230 = mul i32 %tmp4229, 3                  ; <i32> [#uses=1]
  %add4231 = add nsw i32 %add4228, %mul4230       ; <i32> [#uses=1]
  store i32 %add4231, i32* %base_index2_3
  %tmp4232 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp4233 = load i32* %base_index2_3             ; <i32> [#uses=1]
  %add.ptr4234 = getelementptr inbounds i32 addrspace(1)* %tmp4232, i32 %tmp4233 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr4234, i32 addrspace(1)** %addr_0_3_3
  %tmp4236 = load i32 addrspace(1)** %addr_0_3_3  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4237 = getelementptr inbounds i32 addrspace(1)* %tmp4236, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4238 = load i32 addrspace(1)* %arrayidx4237 ; <i32> [#uses=1]
  %vecinit4239 = insertelement <4 x i32> undef, i32 %tmp4238, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp4240 = load i32 addrspace(1)** %addr_0_3_3  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4241 = getelementptr inbounds i32 addrspace(1)* %tmp4240, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4242 = load i32 addrspace(1)* %arrayidx4241 ; <i32> [#uses=1]
  %vecinit4243 = insertelement <4 x i32> %vecinit4239, i32 %tmp4242, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp4244 = load i32 addrspace(1)** %addr_0_3_3  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4245 = getelementptr inbounds i32 addrspace(1)* %tmp4244, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4246 = load i32 addrspace(1)* %arrayidx4245 ; <i32> [#uses=1]
  %vecinit4247 = insertelement <4 x i32> %vecinit4243, i32 %tmp4246, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp4248 = load i32 addrspace(1)** %addr_0_3_3  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4249 = getelementptr inbounds i32 addrspace(1)* %tmp4248, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4250 = load i32 addrspace(1)* %arrayidx4249 ; <i32> [#uses=1]
  %vecinit4251 = insertelement <4 x i32> %vecinit4247, i32 %tmp4250, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit4251, <4 x i32>* %.compoundliteral4235
  %tmp4252 = load <4 x i32>* %.compoundliteral4235 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp4252, <4 x i32>* %xmm_tree_0_3_3
  %tmp4253 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp4254 = load <4 x i32>* %xmm_query_element_3 ; <<4 x i32>> [#uses=1]
  %tmp4255 = load <4 x i32>* %xmm_tree_0_3_3      ; <<4 x i32>> [#uses=1]
  %cmp4256 = icmp sgt <4 x i32> %tmp4254, %tmp4255 ; <<4 x i1>> [#uses=1]
  %sext4257 = sext <4 x i1> %cmp4256 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul4258 = mul <4 x i32> %tmp4253, %sext4257    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul4258, <4 x i32>* %temp_index_v_3
  %tmp4259 = load <4 x i32>* %temp_index_v_3      ; <<4 x i32>> [#uses=1]
  %tmp4260 = extractelement <4 x i32> %tmp4259, i32 0 ; <i32> [#uses=1]
  %tmp4261 = load <4 x i32>* %temp_index_v_3      ; <<4 x i32>> [#uses=1]
  %tmp4262 = extractelement <4 x i32> %tmp4261, i32 1 ; <i32> [#uses=1]
  %add4263 = add nsw i32 %tmp4260, %tmp4262       ; <i32> [#uses=1]
  %tmp4264 = load <4 x i32>* %temp_index_v_3      ; <<4 x i32>> [#uses=1]
  %tmp4265 = extractelement <4 x i32> %tmp4264, i32 2 ; <i32> [#uses=1]
  %add4266 = add nsw i32 %add4263, %tmp4265       ; <i32> [#uses=1]
  store i32 %add4266, i32* %temp_index_3
  %tmp4267 = load i32* %temp_index_3              ; <i32> [#uses=1]
  %tmp4268 = load i32 addrspace(1)** %LookUp2.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4269 = getelementptr inbounds i32 addrspace(1)* %tmp4268, i32 %tmp4267 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4270 = load i32 addrspace(1)* %arrayidx4269 ; <i32> [#uses=1]
  store i32 %tmp4270, i32* %delta_3
  %tmp4271 = load i32* %offset3_3                 ; <i32> [#uses=1]
  %mul4272 = mul i32 %tmp4271, 4                  ; <i32> [#uses=1]
  %tmp4273 = load i32* %delta_3                   ; <i32> [#uses=1]
  %sub4274 = sub i32 %tmp4273, 3                  ; <i32> [#uses=1]
  %add4275 = add nsw i32 %mul4272, %sub4274       ; <i32> [#uses=1]
  store i32 %add4275, i32* %offset3_3
  %tmp4276 = load i32* %offset2_3                 ; <i32> [#uses=1]
  %mul4277 = mul i32 %tmp4276, 4                  ; <i32> [#uses=1]
  %tmp4278 = load i32* %offset3_3                 ; <i32> [#uses=1]
  %add4279 = add nsw i32 %mul4277, %tmp4278       ; <i32> [#uses=1]
  store i32 %add4279, i32* %offset2_3
  %tmp4280 = load i32* %offset1_3                 ; <i32> [#uses=1]
  %mul4281 = mul i32 %tmp4280, 1024               ; <i32> [#uses=1]
  %tmp4282 = load i32* %offset2_3                 ; <i32> [#uses=1]
  %add4283 = add nsw i32 %mul4281, %tmp4282       ; <i32> [#uses=1]
  store i32 %add4283, i32* %offset1_3
  store i32 0, i32* %offset2_3
  %tmp4284 = load i32* %offset1_3                 ; <i32> [#uses=1]
  %mul4285 = mul i32 %tmp4284, 15                 ; <i32> [#uses=1]
  %add4286 = add nsw i32 1049600, %mul4285        ; <i32> [#uses=1]
  store i32 %add4286, i32* %block_base_index_3
  %tmp4287 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp4288 = load i32* %block_base_index_3        ; <i32> [#uses=1]
  %add.ptr4289 = getelementptr inbounds i32 addrspace(1)* %tmp4287, i32 %tmp4288 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr4289, i32 16)
  %tmp4290 = load i32* %block_base_index_3        ; <i32> [#uses=1]
  %add4291 = add nsw i32 %tmp4290, 0              ; <i32> [#uses=1]
  store i32 %add4291, i32* %base_index_3
  store i32 0, i32* %offset3_3
  store i32 0, i32* %delta_4
  %tmp4292 = load i32* %base_index_4              ; <i32> [#uses=1]
  %add4293 = add nsw i32 %tmp4292, 0              ; <i32> [#uses=1]
  %tmp4294 = load i32* %offset3_4                 ; <i32> [#uses=1]
  %mul4295 = mul i32 %tmp4294, 3                  ; <i32> [#uses=1]
  %add4296 = add nsw i32 %add4293, %mul4295       ; <i32> [#uses=1]
  store i32 %add4296, i32* %base_index2_4
  %tmp4297 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp4298 = load i32* %base_index2_4             ; <i32> [#uses=1]
  %add.ptr4299 = getelementptr inbounds i32 addrspace(1)* %tmp4297, i32 %tmp4298 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr4299, i32 addrspace(1)** %addr_0_3_4
  %tmp4301 = load i32 addrspace(1)** %addr_0_3_4  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4302 = getelementptr inbounds i32 addrspace(1)* %tmp4301, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4303 = load i32 addrspace(1)* %arrayidx4302 ; <i32> [#uses=1]
  %vecinit4304 = insertelement <4 x i32> undef, i32 %tmp4303, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp4305 = load i32 addrspace(1)** %addr_0_3_4  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4306 = getelementptr inbounds i32 addrspace(1)* %tmp4305, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4307 = load i32 addrspace(1)* %arrayidx4306 ; <i32> [#uses=1]
  %vecinit4308 = insertelement <4 x i32> %vecinit4304, i32 %tmp4307, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp4309 = load i32 addrspace(1)** %addr_0_3_4  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4310 = getelementptr inbounds i32 addrspace(1)* %tmp4309, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4311 = load i32 addrspace(1)* %arrayidx4310 ; <i32> [#uses=1]
  %vecinit4312 = insertelement <4 x i32> %vecinit4308, i32 %tmp4311, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp4313 = load i32 addrspace(1)** %addr_0_3_4  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4314 = getelementptr inbounds i32 addrspace(1)* %tmp4313, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4315 = load i32 addrspace(1)* %arrayidx4314 ; <i32> [#uses=1]
  %vecinit4316 = insertelement <4 x i32> %vecinit4312, i32 %tmp4315, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit4316, <4 x i32>* %.compoundliteral4300
  %tmp4317 = load <4 x i32>* %.compoundliteral4300 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp4317, <4 x i32>* %xmm_tree_0_3_4
  %tmp4318 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp4319 = load <4 x i32>* %xmm_query_element_4 ; <<4 x i32>> [#uses=1]
  %tmp4320 = load <4 x i32>* %xmm_tree_0_3_4      ; <<4 x i32>> [#uses=1]
  %cmp4321 = icmp sgt <4 x i32> %tmp4319, %tmp4320 ; <<4 x i1>> [#uses=1]
  %sext4322 = sext <4 x i1> %cmp4321 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul4323 = mul <4 x i32> %tmp4318, %sext4322    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul4323, <4 x i32>* %temp_index_v_4
  %tmp4324 = load <4 x i32>* %temp_index_v_4      ; <<4 x i32>> [#uses=1]
  %tmp4325 = extractelement <4 x i32> %tmp4324, i32 0 ; <i32> [#uses=1]
  %tmp4326 = load <4 x i32>* %temp_index_v_4      ; <<4 x i32>> [#uses=1]
  %tmp4327 = extractelement <4 x i32> %tmp4326, i32 1 ; <i32> [#uses=1]
  %add4328 = add nsw i32 %tmp4325, %tmp4327       ; <i32> [#uses=1]
  %tmp4329 = load <4 x i32>* %temp_index_v_4      ; <<4 x i32>> [#uses=1]
  %tmp4330 = extractelement <4 x i32> %tmp4329, i32 2 ; <i32> [#uses=1]
  %add4331 = add nsw i32 %add4328, %tmp4330       ; <i32> [#uses=1]
  store i32 %add4331, i32* %temp_index_4
  %tmp4332 = load i32* %temp_index_4              ; <i32> [#uses=1]
  %tmp4333 = load i32 addrspace(1)** %LookUp2.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4334 = getelementptr inbounds i32 addrspace(1)* %tmp4333, i32 %tmp4332 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4335 = load i32 addrspace(1)* %arrayidx4334 ; <i32> [#uses=1]
  store i32 %tmp4335, i32* %delta_4
  %tmp4336 = load i32* %offset3_4                 ; <i32> [#uses=1]
  %mul4337 = mul i32 %tmp4336, 4                  ; <i32> [#uses=1]
  %tmp4338 = load i32* %delta_4                   ; <i32> [#uses=1]
  %sub4339 = sub i32 %tmp4338, 3                  ; <i32> [#uses=1]
  %add4340 = add nsw i32 %mul4337, %sub4339       ; <i32> [#uses=1]
  store i32 %add4340, i32* %offset3_4
  %tmp4341 = load i32* %offset2_4                 ; <i32> [#uses=1]
  %mul4342 = mul i32 %tmp4341, 4                  ; <i32> [#uses=1]
  %tmp4343 = load i32* %offset3_4                 ; <i32> [#uses=1]
  %add4344 = add nsw i32 %mul4342, %tmp4343       ; <i32> [#uses=1]
  store i32 %add4344, i32* %offset2_4
  %tmp4345 = load i32* %offset1_4                 ; <i32> [#uses=1]
  %mul4346 = mul i32 %tmp4345, 1024               ; <i32> [#uses=1]
  %tmp4347 = load i32* %offset2_4                 ; <i32> [#uses=1]
  %add4348 = add nsw i32 %mul4346, %tmp4347       ; <i32> [#uses=1]
  store i32 %add4348, i32* %offset1_4
  store i32 0, i32* %offset2_4
  %tmp4349 = load i32* %offset1_4                 ; <i32> [#uses=1]
  %mul4350 = mul i32 %tmp4349, 15                 ; <i32> [#uses=1]
  %add4351 = add nsw i32 1049600, %mul4350        ; <i32> [#uses=1]
  store i32 %add4351, i32* %block_base_index_4
  %tmp4352 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp4353 = load i32* %block_base_index_4        ; <i32> [#uses=1]
  %add.ptr4354 = getelementptr inbounds i32 addrspace(1)* %tmp4352, i32 %tmp4353 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr4354, i32 16)
  %tmp4355 = load i32* %block_base_index_4        ; <i32> [#uses=1]
  %add4356 = add nsw i32 %tmp4355, 0              ; <i32> [#uses=1]
  store i32 %add4356, i32* %base_index_4
  store i32 0, i32* %offset3_4
  store i32 0, i32* %delta_5
  %tmp4357 = load i32* %base_index_5              ; <i32> [#uses=1]
  %add4358 = add nsw i32 %tmp4357, 0              ; <i32> [#uses=1]
  %tmp4359 = load i32* %offset3_5                 ; <i32> [#uses=1]
  %mul4360 = mul i32 %tmp4359, 3                  ; <i32> [#uses=1]
  %add4361 = add nsw i32 %add4358, %mul4360       ; <i32> [#uses=1]
  store i32 %add4361, i32* %base_index2_5
  %tmp4362 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp4363 = load i32* %base_index2_5             ; <i32> [#uses=1]
  %add.ptr4364 = getelementptr inbounds i32 addrspace(1)* %tmp4362, i32 %tmp4363 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr4364, i32 addrspace(1)** %addr_0_3_5
  %tmp4366 = load i32 addrspace(1)** %addr_0_3_5  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4367 = getelementptr inbounds i32 addrspace(1)* %tmp4366, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4368 = load i32 addrspace(1)* %arrayidx4367 ; <i32> [#uses=1]
  %vecinit4369 = insertelement <4 x i32> undef, i32 %tmp4368, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp4370 = load i32 addrspace(1)** %addr_0_3_5  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4371 = getelementptr inbounds i32 addrspace(1)* %tmp4370, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4372 = load i32 addrspace(1)* %arrayidx4371 ; <i32> [#uses=1]
  %vecinit4373 = insertelement <4 x i32> %vecinit4369, i32 %tmp4372, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp4374 = load i32 addrspace(1)** %addr_0_3_5  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4375 = getelementptr inbounds i32 addrspace(1)* %tmp4374, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4376 = load i32 addrspace(1)* %arrayidx4375 ; <i32> [#uses=1]
  %vecinit4377 = insertelement <4 x i32> %vecinit4373, i32 %tmp4376, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp4378 = load i32 addrspace(1)** %addr_0_3_5  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4379 = getelementptr inbounds i32 addrspace(1)* %tmp4378, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4380 = load i32 addrspace(1)* %arrayidx4379 ; <i32> [#uses=1]
  %vecinit4381 = insertelement <4 x i32> %vecinit4377, i32 %tmp4380, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit4381, <4 x i32>* %.compoundliteral4365
  %tmp4382 = load <4 x i32>* %.compoundliteral4365 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp4382, <4 x i32>* %xmm_tree_0_3_5
  %tmp4383 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp4384 = load <4 x i32>* %xmm_query_element_5 ; <<4 x i32>> [#uses=1]
  %tmp4385 = load <4 x i32>* %xmm_tree_0_3_5      ; <<4 x i32>> [#uses=1]
  %cmp4386 = icmp sgt <4 x i32> %tmp4384, %tmp4385 ; <<4 x i1>> [#uses=1]
  %sext4387 = sext <4 x i1> %cmp4386 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul4388 = mul <4 x i32> %tmp4383, %sext4387    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul4388, <4 x i32>* %temp_index_v_5
  %tmp4389 = load <4 x i32>* %temp_index_v_5      ; <<4 x i32>> [#uses=1]
  %tmp4390 = extractelement <4 x i32> %tmp4389, i32 0 ; <i32> [#uses=1]
  %tmp4391 = load <4 x i32>* %temp_index_v_5      ; <<4 x i32>> [#uses=1]
  %tmp4392 = extractelement <4 x i32> %tmp4391, i32 1 ; <i32> [#uses=1]
  %add4393 = add nsw i32 %tmp4390, %tmp4392       ; <i32> [#uses=1]
  %tmp4394 = load <4 x i32>* %temp_index_v_5      ; <<4 x i32>> [#uses=1]
  %tmp4395 = extractelement <4 x i32> %tmp4394, i32 2 ; <i32> [#uses=1]
  %add4396 = add nsw i32 %add4393, %tmp4395       ; <i32> [#uses=1]
  store i32 %add4396, i32* %temp_index_5
  %tmp4397 = load i32* %temp_index_5              ; <i32> [#uses=1]
  %tmp4398 = load i32 addrspace(1)** %LookUp2.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4399 = getelementptr inbounds i32 addrspace(1)* %tmp4398, i32 %tmp4397 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4400 = load i32 addrspace(1)* %arrayidx4399 ; <i32> [#uses=1]
  store i32 %tmp4400, i32* %delta_5
  %tmp4401 = load i32* %offset3_5                 ; <i32> [#uses=1]
  %mul4402 = mul i32 %tmp4401, 4                  ; <i32> [#uses=1]
  %tmp4403 = load i32* %delta_5                   ; <i32> [#uses=1]
  %sub4404 = sub i32 %tmp4403, 3                  ; <i32> [#uses=1]
  %add4405 = add nsw i32 %mul4402, %sub4404       ; <i32> [#uses=1]
  store i32 %add4405, i32* %offset3_5
  %tmp4406 = load i32* %offset2_5                 ; <i32> [#uses=1]
  %mul4407 = mul i32 %tmp4406, 4                  ; <i32> [#uses=1]
  %tmp4408 = load i32* %offset3_5                 ; <i32> [#uses=1]
  %add4409 = add nsw i32 %mul4407, %tmp4408       ; <i32> [#uses=1]
  store i32 %add4409, i32* %offset2_5
  %tmp4410 = load i32* %offset1_5                 ; <i32> [#uses=1]
  %mul4411 = mul i32 %tmp4410, 1024               ; <i32> [#uses=1]
  %tmp4412 = load i32* %offset2_5                 ; <i32> [#uses=1]
  %add4413 = add nsw i32 %mul4411, %tmp4412       ; <i32> [#uses=1]
  store i32 %add4413, i32* %offset1_5
  store i32 0, i32* %offset2_5
  %tmp4414 = load i32* %offset1_5                 ; <i32> [#uses=1]
  %mul4415 = mul i32 %tmp4414, 15                 ; <i32> [#uses=1]
  %add4416 = add nsw i32 1049600, %mul4415        ; <i32> [#uses=1]
  store i32 %add4416, i32* %block_base_index_5
  %tmp4417 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp4418 = load i32* %block_base_index_5        ; <i32> [#uses=1]
  %add.ptr4419 = getelementptr inbounds i32 addrspace(1)* %tmp4417, i32 %tmp4418 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr4419, i32 16)
  %tmp4420 = load i32* %block_base_index_5        ; <i32> [#uses=1]
  %add4421 = add nsw i32 %tmp4420, 0              ; <i32> [#uses=1]
  store i32 %add4421, i32* %base_index_5
  store i32 0, i32* %offset3_5
  store i32 0, i32* %delta_6
  %tmp4422 = load i32* %base_index_6              ; <i32> [#uses=1]
  %add4423 = add nsw i32 %tmp4422, 0              ; <i32> [#uses=1]
  %tmp4424 = load i32* %offset3_6                 ; <i32> [#uses=1]
  %mul4425 = mul i32 %tmp4424, 3                  ; <i32> [#uses=1]
  %add4426 = add nsw i32 %add4423, %mul4425       ; <i32> [#uses=1]
  store i32 %add4426, i32* %base_index2_6
  %tmp4427 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp4428 = load i32* %base_index2_6             ; <i32> [#uses=1]
  %add.ptr4429 = getelementptr inbounds i32 addrspace(1)* %tmp4427, i32 %tmp4428 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr4429, i32 addrspace(1)** %addr_0_3_6
  %tmp4431 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4432 = getelementptr inbounds i32 addrspace(1)* %tmp4431, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4433 = load i32 addrspace(1)* %arrayidx4432 ; <i32> [#uses=1]
  %vecinit4434 = insertelement <4 x i32> undef, i32 %tmp4433, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp4435 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4436 = getelementptr inbounds i32 addrspace(1)* %tmp4435, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4437 = load i32 addrspace(1)* %arrayidx4436 ; <i32> [#uses=1]
  %vecinit4438 = insertelement <4 x i32> %vecinit4434, i32 %tmp4437, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp4439 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4440 = getelementptr inbounds i32 addrspace(1)* %tmp4439, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4441 = load i32 addrspace(1)* %arrayidx4440 ; <i32> [#uses=1]
  %vecinit4442 = insertelement <4 x i32> %vecinit4438, i32 %tmp4441, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp4443 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4444 = getelementptr inbounds i32 addrspace(1)* %tmp4443, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4445 = load i32 addrspace(1)* %arrayidx4444 ; <i32> [#uses=1]
  %vecinit4446 = insertelement <4 x i32> %vecinit4442, i32 %tmp4445, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit4446, <4 x i32>* %.compoundliteral4430
  %tmp4447 = load <4 x i32>* %.compoundliteral4430 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp4447, <4 x i32>* %xmm_tree_0_3_6
  %tmp4448 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp4449 = load <4 x i32>* %xmm_query_element_6 ; <<4 x i32>> [#uses=1]
  %tmp4450 = load <4 x i32>* %xmm_tree_0_3_6      ; <<4 x i32>> [#uses=1]
  %cmp4451 = icmp sgt <4 x i32> %tmp4449, %tmp4450 ; <<4 x i1>> [#uses=1]
  %sext4452 = sext <4 x i1> %cmp4451 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul4453 = mul <4 x i32> %tmp4448, %sext4452    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul4453, <4 x i32>* %temp_index_v_6
  %tmp4454 = load <4 x i32>* %temp_index_v_6      ; <<4 x i32>> [#uses=1]
  %tmp4455 = extractelement <4 x i32> %tmp4454, i32 0 ; <i32> [#uses=1]
  %tmp4456 = load <4 x i32>* %temp_index_v_6      ; <<4 x i32>> [#uses=1]
  %tmp4457 = extractelement <4 x i32> %tmp4456, i32 1 ; <i32> [#uses=1]
  %add4458 = add nsw i32 %tmp4455, %tmp4457       ; <i32> [#uses=1]
  %tmp4459 = load <4 x i32>* %temp_index_v_6      ; <<4 x i32>> [#uses=1]
  %tmp4460 = extractelement <4 x i32> %tmp4459, i32 2 ; <i32> [#uses=1]
  %add4461 = add nsw i32 %add4458, %tmp4460       ; <i32> [#uses=1]
  store i32 %add4461, i32* %temp_index_6
  %tmp4462 = load i32* %temp_index_6              ; <i32> [#uses=1]
  %tmp4463 = load i32 addrspace(1)** %LookUp2.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4464 = getelementptr inbounds i32 addrspace(1)* %tmp4463, i32 %tmp4462 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4465 = load i32 addrspace(1)* %arrayidx4464 ; <i32> [#uses=1]
  store i32 %tmp4465, i32* %delta_6
  %tmp4466 = load i32* %offset3_6                 ; <i32> [#uses=1]
  %mul4467 = mul i32 %tmp4466, 4                  ; <i32> [#uses=1]
  %tmp4468 = load i32* %delta_6                   ; <i32> [#uses=1]
  %sub4469 = sub i32 %tmp4468, 3                  ; <i32> [#uses=1]
  %add4470 = add nsw i32 %mul4467, %sub4469       ; <i32> [#uses=1]
  store i32 %add4470, i32* %offset3_6
  %tmp4471 = load i32* %offset2_6                 ; <i32> [#uses=1]
  %mul4472 = mul i32 %tmp4471, 4                  ; <i32> [#uses=1]
  %tmp4473 = load i32* %offset3_6                 ; <i32> [#uses=1]
  %add4474 = add nsw i32 %mul4472, %tmp4473       ; <i32> [#uses=1]
  store i32 %add4474, i32* %offset2_6
  %tmp4475 = load i32* %offset1_6                 ; <i32> [#uses=1]
  %mul4476 = mul i32 %tmp4475, 1024               ; <i32> [#uses=1]
  %tmp4477 = load i32* %offset2_6                 ; <i32> [#uses=1]
  %add4478 = add nsw i32 %mul4476, %tmp4477       ; <i32> [#uses=1]
  store i32 %add4478, i32* %offset1_6
  store i32 0, i32* %offset2_6
  %tmp4479 = load i32* %offset1_6                 ; <i32> [#uses=1]
  %mul4480 = mul i32 %tmp4479, 15                 ; <i32> [#uses=1]
  %add4481 = add nsw i32 1049600, %mul4480        ; <i32> [#uses=1]
  store i32 %add4481, i32* %block_base_index_6
  %tmp4482 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp4483 = load i32* %block_base_index_6        ; <i32> [#uses=1]
  %add.ptr4484 = getelementptr inbounds i32 addrspace(1)* %tmp4482, i32 %tmp4483 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr4484, i32 16)
  %tmp4485 = load i32* %block_base_index_6        ; <i32> [#uses=1]
  %add4486 = add nsw i32 %tmp4485, 0              ; <i32> [#uses=1]
  store i32 %add4486, i32* %base_index_6
  store i32 0, i32* %offset3_6
  store i32 0, i32* %delta_7
  %tmp4487 = load i32* %base_index_7              ; <i32> [#uses=1]
  %add4488 = add nsw i32 %tmp4487, 0              ; <i32> [#uses=1]
  %tmp4489 = load i32* %offset3_7                 ; <i32> [#uses=1]
  %mul4490 = mul i32 %tmp4489, 3                  ; <i32> [#uses=1]
  %add4491 = add nsw i32 %add4488, %mul4490       ; <i32> [#uses=1]
  store i32 %add4491, i32* %base_index2_7
  %tmp4492 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp4493 = load i32* %base_index2_7             ; <i32> [#uses=1]
  %add.ptr4494 = getelementptr inbounds i32 addrspace(1)* %tmp4492, i32 %tmp4493 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr4494, i32 addrspace(1)** %addr_0_3_7
  %tmp4496 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4497 = getelementptr inbounds i32 addrspace(1)* %tmp4496, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4498 = load i32 addrspace(1)* %arrayidx4497 ; <i32> [#uses=1]
  %vecinit4499 = insertelement <4 x i32> undef, i32 %tmp4498, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp4500 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4501 = getelementptr inbounds i32 addrspace(1)* %tmp4500, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4502 = load i32 addrspace(1)* %arrayidx4501 ; <i32> [#uses=1]
  %vecinit4503 = insertelement <4 x i32> %vecinit4499, i32 %tmp4502, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp4504 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4505 = getelementptr inbounds i32 addrspace(1)* %tmp4504, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4506 = load i32 addrspace(1)* %arrayidx4505 ; <i32> [#uses=1]
  %vecinit4507 = insertelement <4 x i32> %vecinit4503, i32 %tmp4506, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp4508 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4509 = getelementptr inbounds i32 addrspace(1)* %tmp4508, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4510 = load i32 addrspace(1)* %arrayidx4509 ; <i32> [#uses=1]
  %vecinit4511 = insertelement <4 x i32> %vecinit4507, i32 %tmp4510, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit4511, <4 x i32>* %.compoundliteral4495
  %tmp4512 = load <4 x i32>* %.compoundliteral4495 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp4512, <4 x i32>* %xmm_tree_0_3_7
  %tmp4513 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp4514 = load <4 x i32>* %xmm_query_element_7 ; <<4 x i32>> [#uses=1]
  %tmp4515 = load <4 x i32>* %xmm_tree_0_3_7      ; <<4 x i32>> [#uses=1]
  %cmp4516 = icmp sgt <4 x i32> %tmp4514, %tmp4515 ; <<4 x i1>> [#uses=1]
  %sext4517 = sext <4 x i1> %cmp4516 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul4518 = mul <4 x i32> %tmp4513, %sext4517    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul4518, <4 x i32>* %temp_index_v_7
  %tmp4519 = load <4 x i32>* %temp_index_v_7      ; <<4 x i32>> [#uses=1]
  %tmp4520 = extractelement <4 x i32> %tmp4519, i32 0 ; <i32> [#uses=1]
  %tmp4521 = load <4 x i32>* %temp_index_v_7      ; <<4 x i32>> [#uses=1]
  %tmp4522 = extractelement <4 x i32> %tmp4521, i32 1 ; <i32> [#uses=1]
  %add4523 = add nsw i32 %tmp4520, %tmp4522       ; <i32> [#uses=1]
  %tmp4524 = load <4 x i32>* %temp_index_v_7      ; <<4 x i32>> [#uses=1]
  %tmp4525 = extractelement <4 x i32> %tmp4524, i32 2 ; <i32> [#uses=1]
  %add4526 = add nsw i32 %add4523, %tmp4525       ; <i32> [#uses=1]
  store i32 %add4526, i32* %temp_index_7
  %tmp4527 = load i32* %temp_index_7              ; <i32> [#uses=1]
  %tmp4528 = load i32 addrspace(1)** %LookUp2.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4529 = getelementptr inbounds i32 addrspace(1)* %tmp4528, i32 %tmp4527 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4530 = load i32 addrspace(1)* %arrayidx4529 ; <i32> [#uses=1]
  store i32 %tmp4530, i32* %delta_7
  %tmp4531 = load i32* %offset3_7                 ; <i32> [#uses=1]
  %mul4532 = mul i32 %tmp4531, 4                  ; <i32> [#uses=1]
  %tmp4533 = load i32* %delta_7                   ; <i32> [#uses=1]
  %sub4534 = sub i32 %tmp4533, 3                  ; <i32> [#uses=1]
  %add4535 = add nsw i32 %mul4532, %sub4534       ; <i32> [#uses=1]
  store i32 %add4535, i32* %offset3_7
  %tmp4536 = load i32* %offset2_7                 ; <i32> [#uses=1]
  %mul4537 = mul i32 %tmp4536, 4                  ; <i32> [#uses=1]
  %tmp4538 = load i32* %offset3_7                 ; <i32> [#uses=1]
  %add4539 = add nsw i32 %mul4537, %tmp4538       ; <i32> [#uses=1]
  store i32 %add4539, i32* %offset2_7
  %tmp4540 = load i32* %offset1_7                 ; <i32> [#uses=1]
  %mul4541 = mul i32 %tmp4540, 1024               ; <i32> [#uses=1]
  %tmp4542 = load i32* %offset2_7                 ; <i32> [#uses=1]
  %add4543 = add nsw i32 %mul4541, %tmp4542       ; <i32> [#uses=1]
  store i32 %add4543, i32* %offset1_7
  store i32 0, i32* %offset2_7
  %tmp4544 = load i32* %offset1_7                 ; <i32> [#uses=1]
  %mul4545 = mul i32 %tmp4544, 15                 ; <i32> [#uses=1]
  %add4546 = add nsw i32 1049600, %mul4545        ; <i32> [#uses=1]
  store i32 %add4546, i32* %block_base_index_7
  %tmp4547 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp4548 = load i32* %block_base_index_7        ; <i32> [#uses=1]
  %add.ptr4549 = getelementptr inbounds i32 addrspace(1)* %tmp4547, i32 %tmp4548 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr4549, i32 16)
  %tmp4550 = load i32* %block_base_index_7        ; <i32> [#uses=1]
  %add4551 = add nsw i32 %tmp4550, 0              ; <i32> [#uses=1]
  store i32 %add4551, i32* %base_index_7
  store i32 0, i32* %offset3_7
  %tmp4552 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp4553 = load i32* %base_index_0              ; <i32> [#uses=1]
  %add.ptr4554 = getelementptr inbounds i32 addrspace(1)* %tmp4552, i32 %tmp4553 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr4554, i32 addrspace(1)** %addr_0_3_0
  %tmp4556 = load i32 addrspace(1)** %addr_0_3_0  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4557 = getelementptr inbounds i32 addrspace(1)* %tmp4556, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4558 = load i32 addrspace(1)* %arrayidx4557 ; <i32> [#uses=1]
  %vecinit4559 = insertelement <4 x i32> undef, i32 %tmp4558, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp4560 = load i32 addrspace(1)** %addr_0_3_0  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4561 = getelementptr inbounds i32 addrspace(1)* %tmp4560, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4562 = load i32 addrspace(1)* %arrayidx4561 ; <i32> [#uses=1]
  %vecinit4563 = insertelement <4 x i32> %vecinit4559, i32 %tmp4562, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp4564 = load i32 addrspace(1)** %addr_0_3_0  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4565 = getelementptr inbounds i32 addrspace(1)* %tmp4564, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4566 = load i32 addrspace(1)* %arrayidx4565 ; <i32> [#uses=1]
  %vecinit4567 = insertelement <4 x i32> %vecinit4563, i32 %tmp4566, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp4568 = load i32 addrspace(1)** %addr_0_3_0  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4569 = getelementptr inbounds i32 addrspace(1)* %tmp4568, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4570 = load i32 addrspace(1)* %arrayidx4569 ; <i32> [#uses=1]
  %vecinit4571 = insertelement <4 x i32> %vecinit4567, i32 %tmp4570, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit4571, <4 x i32>* %.compoundliteral4555
  %tmp4572 = load <4 x i32>* %.compoundliteral4555 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp4572, <4 x i32>* %xmm_tree_0_3_0
  %tmp4573 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp4574 = load <4 x i32>* %xmm_query_element_0 ; <<4 x i32>> [#uses=1]
  %tmp4575 = load <4 x i32>* %xmm_tree_0_3_0      ; <<4 x i32>> [#uses=1]
  %cmp4576 = icmp sgt <4 x i32> %tmp4574, %tmp4575 ; <<4 x i1>> [#uses=1]
  %sext4577 = sext <4 x i1> %cmp4576 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul4578 = mul <4 x i32> %tmp4573, %sext4577    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul4578, <4 x i32>* %temp_index_v_0
  %tmp4579 = load <4 x i32>* %temp_index_v_0      ; <<4 x i32>> [#uses=1]
  %tmp4580 = extractelement <4 x i32> %tmp4579, i32 0 ; <i32> [#uses=1]
  %tmp4581 = load <4 x i32>* %temp_index_v_0      ; <<4 x i32>> [#uses=1]
  %tmp4582 = extractelement <4 x i32> %tmp4581, i32 1 ; <i32> [#uses=1]
  %add4583 = add nsw i32 %tmp4580, %tmp4582       ; <i32> [#uses=1]
  %tmp4584 = load <4 x i32>* %temp_index_v_0      ; <<4 x i32>> [#uses=1]
  %tmp4585 = extractelement <4 x i32> %tmp4584, i32 2 ; <i32> [#uses=1]
  %add4586 = add nsw i32 %add4583, %tmp4585       ; <i32> [#uses=1]
  store i32 %add4586, i32* %temp_index_0
  %tmp4587 = load i32* %temp_index_0              ; <i32> [#uses=1]
  %tmp4588 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4589 = getelementptr inbounds i32 addrspace(1)* %tmp4588, i32 %tmp4587 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4590 = load i32 addrspace(1)* %arrayidx4589 ; <i32> [#uses=1]
  store i32 %tmp4590, i32* %delta_0
  %tmp4591 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp4592 = load i32* %base_index_0              ; <i32> [#uses=1]
  %add.ptr4593 = getelementptr inbounds i32 addrspace(1)* %tmp4591, i32 %tmp4592 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4594 = load i32* %temp_index_0              ; <i32> [#uses=1]
  %tmp4595 = load i32 addrspace(1)** %LookUp4.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4596 = getelementptr inbounds i32 addrspace(1)* %tmp4595, i32 %tmp4594 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4597 = load i32 addrspace(1)* %arrayidx4596 ; <i32> [#uses=1]
  %add.ptr4598 = getelementptr inbounds i32 addrspace(1)* %add.ptr4593, i32 %tmp4597 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr4598, i32 addrspace(1)** %addr_0_3_0
  %tmp4600 = load i32 addrspace(1)** %addr_0_3_0  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4601 = getelementptr inbounds i32 addrspace(1)* %tmp4600, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4602 = load i32 addrspace(1)* %arrayidx4601 ; <i32> [#uses=1]
  %vecinit4603 = insertelement <4 x i32> undef, i32 %tmp4602, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp4604 = load i32 addrspace(1)** %addr_0_3_0  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4605 = getelementptr inbounds i32 addrspace(1)* %tmp4604, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4606 = load i32 addrspace(1)* %arrayidx4605 ; <i32> [#uses=1]
  %vecinit4607 = insertelement <4 x i32> %vecinit4603, i32 %tmp4606, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp4608 = load i32 addrspace(1)** %addr_0_3_0  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4609 = getelementptr inbounds i32 addrspace(1)* %tmp4608, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4610 = load i32 addrspace(1)* %arrayidx4609 ; <i32> [#uses=1]
  %vecinit4611 = insertelement <4 x i32> %vecinit4607, i32 %tmp4610, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp4612 = load i32 addrspace(1)** %addr_0_3_0  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4613 = getelementptr inbounds i32 addrspace(1)* %tmp4612, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4614 = load i32 addrspace(1)* %arrayidx4613 ; <i32> [#uses=1]
  %vecinit4615 = insertelement <4 x i32> %vecinit4611, i32 %tmp4614, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit4615, <4 x i32>* %.compoundliteral4599
  %tmp4616 = load <4 x i32>* %.compoundliteral4599 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp4616, <4 x i32>* %xmm_tree_0_3_0
  %tmp4617 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp4618 = load <4 x i32>* %xmm_query_element_0 ; <<4 x i32>> [#uses=1]
  %tmp4619 = load <4 x i32>* %xmm_tree_0_3_0      ; <<4 x i32>> [#uses=1]
  %cmp4620 = icmp sgt <4 x i32> %tmp4618, %tmp4619 ; <<4 x i1>> [#uses=1]
  %sext4621 = sext <4 x i1> %cmp4620 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul4622 = mul <4 x i32> %tmp4617, %sext4621    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul4622, <4 x i32>* %temp_index_v_0
  %tmp4623 = load <4 x i32>* %temp_index_v_0      ; <<4 x i32>> [#uses=1]
  %tmp4624 = extractelement <4 x i32> %tmp4623, i32 0 ; <i32> [#uses=1]
  %tmp4625 = load <4 x i32>* %temp_index_v_0      ; <<4 x i32>> [#uses=1]
  %tmp4626 = extractelement <4 x i32> %tmp4625, i32 1 ; <i32> [#uses=1]
  %add4627 = add nsw i32 %tmp4624, %tmp4626       ; <i32> [#uses=1]
  %tmp4628 = load <4 x i32>* %temp_index_v_0      ; <<4 x i32>> [#uses=1]
  %tmp4629 = extractelement <4 x i32> %tmp4628, i32 2 ; <i32> [#uses=1]
  %add4630 = add nsw i32 %add4627, %tmp4629       ; <i32> [#uses=1]
  store i32 %add4630, i32* %temp_index_0
  %tmp4631 = load i32* %delta_0                   ; <i32> [#uses=1]
  %shl4632 = shl i32 %tmp4631, 2                  ; <i32> [#uses=1]
  %tmp4633 = load i32* %temp_index_0              ; <i32> [#uses=1]
  %tmp4634 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4635 = getelementptr inbounds i32 addrspace(1)* %tmp4634, i32 %tmp4633 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4636 = load i32 addrspace(1)* %arrayidx4635 ; <i32> [#uses=1]
  %add4637 = add nsw i32 %shl4632, %tmp4636       ; <i32> [#uses=1]
  store i32 %add4637, i32* %offset3_0
  %tmp4638 = load i32* %offset2_0                 ; <i32> [#uses=1]
  %mul4639 = mul i32 %tmp4638, 16                 ; <i32> [#uses=1]
  %tmp4640 = load i32* %offset3_0                 ; <i32> [#uses=1]
  %add4641 = add nsw i32 %mul4639, %tmp4640       ; <i32> [#uses=1]
  store i32 %add4641, i32* %offset2_0
  %tmp4642 = load i32* %offset1_0                 ; <i32> [#uses=1]
  %mul4643 = mul i32 %tmp4642, 16                 ; <i32> [#uses=1]
  %tmp4644 = load i32* %offset2_0                 ; <i32> [#uses=1]
  %add4645 = add nsw i32 %mul4643, %tmp4644       ; <i32> [#uses=1]
  store i32 %add4645, i32* %offset1_0
  %tmp4646 = load i32 addrspace(1)** %KeyValue.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp4647 = load i32* %offset1_0                 ; <i32> [#uses=1]
  %mul4648 = mul i32 2, %tmp4647                  ; <i32> [#uses=1]
  %add.ptr4649 = getelementptr inbounds i32 addrspace(1)* %tmp4646, i32 %mul4648 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr4649, i32 16)
  %tmp4650 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp4651 = load i32* %base_index_1              ; <i32> [#uses=1]
  %add.ptr4652 = getelementptr inbounds i32 addrspace(1)* %tmp4650, i32 %tmp4651 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr4652, i32 addrspace(1)** %addr_0_3_1
  %tmp4654 = load i32 addrspace(1)** %addr_0_3_1  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4655 = getelementptr inbounds i32 addrspace(1)* %tmp4654, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4656 = load i32 addrspace(1)* %arrayidx4655 ; <i32> [#uses=1]
  %vecinit4657 = insertelement <4 x i32> undef, i32 %tmp4656, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp4658 = load i32 addrspace(1)** %addr_0_3_1  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4659 = getelementptr inbounds i32 addrspace(1)* %tmp4658, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4660 = load i32 addrspace(1)* %arrayidx4659 ; <i32> [#uses=1]
  %vecinit4661 = insertelement <4 x i32> %vecinit4657, i32 %tmp4660, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp4662 = load i32 addrspace(1)** %addr_0_3_1  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4663 = getelementptr inbounds i32 addrspace(1)* %tmp4662, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4664 = load i32 addrspace(1)* %arrayidx4663 ; <i32> [#uses=1]
  %vecinit4665 = insertelement <4 x i32> %vecinit4661, i32 %tmp4664, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp4666 = load i32 addrspace(1)** %addr_0_3_1  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4667 = getelementptr inbounds i32 addrspace(1)* %tmp4666, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4668 = load i32 addrspace(1)* %arrayidx4667 ; <i32> [#uses=1]
  %vecinit4669 = insertelement <4 x i32> %vecinit4665, i32 %tmp4668, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit4669, <4 x i32>* %.compoundliteral4653
  %tmp4670 = load <4 x i32>* %.compoundliteral4653 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp4670, <4 x i32>* %xmm_tree_0_3_1
  %tmp4671 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp4672 = load <4 x i32>* %xmm_query_element_1 ; <<4 x i32>> [#uses=1]
  %tmp4673 = load <4 x i32>* %xmm_tree_0_3_1      ; <<4 x i32>> [#uses=1]
  %cmp4674 = icmp sgt <4 x i32> %tmp4672, %tmp4673 ; <<4 x i1>> [#uses=1]
  %sext4675 = sext <4 x i1> %cmp4674 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul4676 = mul <4 x i32> %tmp4671, %sext4675    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul4676, <4 x i32>* %temp_index_v_1
  %tmp4677 = load <4 x i32>* %temp_index_v_1      ; <<4 x i32>> [#uses=1]
  %tmp4678 = extractelement <4 x i32> %tmp4677, i32 0 ; <i32> [#uses=1]
  %tmp4679 = load <4 x i32>* %temp_index_v_1      ; <<4 x i32>> [#uses=1]
  %tmp4680 = extractelement <4 x i32> %tmp4679, i32 1 ; <i32> [#uses=1]
  %add4681 = add nsw i32 %tmp4678, %tmp4680       ; <i32> [#uses=1]
  %tmp4682 = load <4 x i32>* %temp_index_v_1      ; <<4 x i32>> [#uses=1]
  %tmp4683 = extractelement <4 x i32> %tmp4682, i32 2 ; <i32> [#uses=1]
  %add4684 = add nsw i32 %add4681, %tmp4683       ; <i32> [#uses=1]
  store i32 %add4684, i32* %temp_index_1
  %tmp4685 = load i32* %temp_index_1              ; <i32> [#uses=1]
  %tmp4686 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4687 = getelementptr inbounds i32 addrspace(1)* %tmp4686, i32 %tmp4685 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4688 = load i32 addrspace(1)* %arrayidx4687 ; <i32> [#uses=1]
  store i32 %tmp4688, i32* %delta_1
  %tmp4689 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp4690 = load i32* %base_index_1              ; <i32> [#uses=1]
  %add.ptr4691 = getelementptr inbounds i32 addrspace(1)* %tmp4689, i32 %tmp4690 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4692 = load i32* %temp_index_1              ; <i32> [#uses=1]
  %tmp4693 = load i32 addrspace(1)** %LookUp4.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4694 = getelementptr inbounds i32 addrspace(1)* %tmp4693, i32 %tmp4692 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4695 = load i32 addrspace(1)* %arrayidx4694 ; <i32> [#uses=1]
  %add.ptr4696 = getelementptr inbounds i32 addrspace(1)* %add.ptr4691, i32 %tmp4695 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr4696, i32 addrspace(1)** %addr_0_3_1
  %tmp4698 = load i32 addrspace(1)** %addr_0_3_1  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4699 = getelementptr inbounds i32 addrspace(1)* %tmp4698, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4700 = load i32 addrspace(1)* %arrayidx4699 ; <i32> [#uses=1]
  %vecinit4701 = insertelement <4 x i32> undef, i32 %tmp4700, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp4702 = load i32 addrspace(1)** %addr_0_3_1  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4703 = getelementptr inbounds i32 addrspace(1)* %tmp4702, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4704 = load i32 addrspace(1)* %arrayidx4703 ; <i32> [#uses=1]
  %vecinit4705 = insertelement <4 x i32> %vecinit4701, i32 %tmp4704, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp4706 = load i32 addrspace(1)** %addr_0_3_1  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4707 = getelementptr inbounds i32 addrspace(1)* %tmp4706, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4708 = load i32 addrspace(1)* %arrayidx4707 ; <i32> [#uses=1]
  %vecinit4709 = insertelement <4 x i32> %vecinit4705, i32 %tmp4708, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp4710 = load i32 addrspace(1)** %addr_0_3_1  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4711 = getelementptr inbounds i32 addrspace(1)* %tmp4710, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4712 = load i32 addrspace(1)* %arrayidx4711 ; <i32> [#uses=1]
  %vecinit4713 = insertelement <4 x i32> %vecinit4709, i32 %tmp4712, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit4713, <4 x i32>* %.compoundliteral4697
  %tmp4714 = load <4 x i32>* %.compoundliteral4697 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp4714, <4 x i32>* %xmm_tree_0_3_1
  %tmp4715 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp4716 = load <4 x i32>* %xmm_query_element_1 ; <<4 x i32>> [#uses=1]
  %tmp4717 = load <4 x i32>* %xmm_tree_0_3_1      ; <<4 x i32>> [#uses=1]
  %cmp4718 = icmp sgt <4 x i32> %tmp4716, %tmp4717 ; <<4 x i1>> [#uses=1]
  %sext4719 = sext <4 x i1> %cmp4718 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul4720 = mul <4 x i32> %tmp4715, %sext4719    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul4720, <4 x i32>* %temp_index_v_1
  %tmp4721 = load <4 x i32>* %temp_index_v_1      ; <<4 x i32>> [#uses=1]
  %tmp4722 = extractelement <4 x i32> %tmp4721, i32 0 ; <i32> [#uses=1]
  %tmp4723 = load <4 x i32>* %temp_index_v_1      ; <<4 x i32>> [#uses=1]
  %tmp4724 = extractelement <4 x i32> %tmp4723, i32 1 ; <i32> [#uses=1]
  %add4725 = add nsw i32 %tmp4722, %tmp4724       ; <i32> [#uses=1]
  %tmp4726 = load <4 x i32>* %temp_index_v_1      ; <<4 x i32>> [#uses=1]
  %tmp4727 = extractelement <4 x i32> %tmp4726, i32 2 ; <i32> [#uses=1]
  %add4728 = add nsw i32 %add4725, %tmp4727       ; <i32> [#uses=1]
  store i32 %add4728, i32* %temp_index_1
  %tmp4729 = load i32* %delta_1                   ; <i32> [#uses=1]
  %shl4730 = shl i32 %tmp4729, 2                  ; <i32> [#uses=1]
  %tmp4731 = load i32* %temp_index_1              ; <i32> [#uses=1]
  %tmp4732 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4733 = getelementptr inbounds i32 addrspace(1)* %tmp4732, i32 %tmp4731 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4734 = load i32 addrspace(1)* %arrayidx4733 ; <i32> [#uses=1]
  %add4735 = add nsw i32 %shl4730, %tmp4734       ; <i32> [#uses=1]
  store i32 %add4735, i32* %offset3_1
  %tmp4736 = load i32* %offset2_1                 ; <i32> [#uses=1]
  %mul4737 = mul i32 %tmp4736, 16                 ; <i32> [#uses=1]
  %tmp4738 = load i32* %offset3_1                 ; <i32> [#uses=1]
  %add4739 = add nsw i32 %mul4737, %tmp4738       ; <i32> [#uses=1]
  store i32 %add4739, i32* %offset2_1
  %tmp4740 = load i32* %offset1_1                 ; <i32> [#uses=1]
  %mul4741 = mul i32 %tmp4740, 16                 ; <i32> [#uses=1]
  %tmp4742 = load i32* %offset2_1                 ; <i32> [#uses=1]
  %add4743 = add nsw i32 %mul4741, %tmp4742       ; <i32> [#uses=1]
  store i32 %add4743, i32* %offset1_1
  %tmp4744 = load i32 addrspace(1)** %KeyValue.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp4745 = load i32* %offset1_1                 ; <i32> [#uses=1]
  %mul4746 = mul i32 2, %tmp4745                  ; <i32> [#uses=1]
  %add.ptr4747 = getelementptr inbounds i32 addrspace(1)* %tmp4744, i32 %mul4746 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr4747, i32 16)
  %tmp4748 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp4749 = load i32* %base_index_2              ; <i32> [#uses=1]
  %add.ptr4750 = getelementptr inbounds i32 addrspace(1)* %tmp4748, i32 %tmp4749 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr4750, i32 addrspace(1)** %addr_0_3_2
  %tmp4752 = load i32 addrspace(1)** %addr_0_3_2  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4753 = getelementptr inbounds i32 addrspace(1)* %tmp4752, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4754 = load i32 addrspace(1)* %arrayidx4753 ; <i32> [#uses=1]
  %vecinit4755 = insertelement <4 x i32> undef, i32 %tmp4754, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp4756 = load i32 addrspace(1)** %addr_0_3_2  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4757 = getelementptr inbounds i32 addrspace(1)* %tmp4756, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4758 = load i32 addrspace(1)* %arrayidx4757 ; <i32> [#uses=1]
  %vecinit4759 = insertelement <4 x i32> %vecinit4755, i32 %tmp4758, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp4760 = load i32 addrspace(1)** %addr_0_3_2  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4761 = getelementptr inbounds i32 addrspace(1)* %tmp4760, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4762 = load i32 addrspace(1)* %arrayidx4761 ; <i32> [#uses=1]
  %vecinit4763 = insertelement <4 x i32> %vecinit4759, i32 %tmp4762, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp4764 = load i32 addrspace(1)** %addr_0_3_2  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4765 = getelementptr inbounds i32 addrspace(1)* %tmp4764, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4766 = load i32 addrspace(1)* %arrayidx4765 ; <i32> [#uses=1]
  %vecinit4767 = insertelement <4 x i32> %vecinit4763, i32 %tmp4766, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit4767, <4 x i32>* %.compoundliteral4751
  %tmp4768 = load <4 x i32>* %.compoundliteral4751 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp4768, <4 x i32>* %xmm_tree_0_3_2
  %tmp4769 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp4770 = load <4 x i32>* %xmm_query_element_2 ; <<4 x i32>> [#uses=1]
  %tmp4771 = load <4 x i32>* %xmm_tree_0_3_2      ; <<4 x i32>> [#uses=1]
  %cmp4772 = icmp sgt <4 x i32> %tmp4770, %tmp4771 ; <<4 x i1>> [#uses=1]
  %sext4773 = sext <4 x i1> %cmp4772 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul4774 = mul <4 x i32> %tmp4769, %sext4773    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul4774, <4 x i32>* %temp_index_v_2
  %tmp4775 = load <4 x i32>* %temp_index_v_2      ; <<4 x i32>> [#uses=1]
  %tmp4776 = extractelement <4 x i32> %tmp4775, i32 0 ; <i32> [#uses=1]
  %tmp4777 = load <4 x i32>* %temp_index_v_2      ; <<4 x i32>> [#uses=1]
  %tmp4778 = extractelement <4 x i32> %tmp4777, i32 1 ; <i32> [#uses=1]
  %add4779 = add nsw i32 %tmp4776, %tmp4778       ; <i32> [#uses=1]
  %tmp4780 = load <4 x i32>* %temp_index_v_2      ; <<4 x i32>> [#uses=1]
  %tmp4781 = extractelement <4 x i32> %tmp4780, i32 2 ; <i32> [#uses=1]
  %add4782 = add nsw i32 %add4779, %tmp4781       ; <i32> [#uses=1]
  store i32 %add4782, i32* %temp_index_2
  %tmp4783 = load i32* %temp_index_2              ; <i32> [#uses=1]
  %tmp4784 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4785 = getelementptr inbounds i32 addrspace(1)* %tmp4784, i32 %tmp4783 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4786 = load i32 addrspace(1)* %arrayidx4785 ; <i32> [#uses=1]
  store i32 %tmp4786, i32* %delta_2
  %tmp4787 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp4788 = load i32* %base_index_2              ; <i32> [#uses=1]
  %add.ptr4789 = getelementptr inbounds i32 addrspace(1)* %tmp4787, i32 %tmp4788 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4790 = load i32* %temp_index_2              ; <i32> [#uses=1]
  %tmp4791 = load i32 addrspace(1)** %LookUp4.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4792 = getelementptr inbounds i32 addrspace(1)* %tmp4791, i32 %tmp4790 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4793 = load i32 addrspace(1)* %arrayidx4792 ; <i32> [#uses=1]
  %add.ptr4794 = getelementptr inbounds i32 addrspace(1)* %add.ptr4789, i32 %tmp4793 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr4794, i32 addrspace(1)** %addr_0_3_2
  %tmp4796 = load i32 addrspace(1)** %addr_0_3_2  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4797 = getelementptr inbounds i32 addrspace(1)* %tmp4796, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4798 = load i32 addrspace(1)* %arrayidx4797 ; <i32> [#uses=1]
  %vecinit4799 = insertelement <4 x i32> undef, i32 %tmp4798, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp4800 = load i32 addrspace(1)** %addr_0_3_2  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4801 = getelementptr inbounds i32 addrspace(1)* %tmp4800, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4802 = load i32 addrspace(1)* %arrayidx4801 ; <i32> [#uses=1]
  %vecinit4803 = insertelement <4 x i32> %vecinit4799, i32 %tmp4802, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp4804 = load i32 addrspace(1)** %addr_0_3_2  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4805 = getelementptr inbounds i32 addrspace(1)* %tmp4804, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4806 = load i32 addrspace(1)* %arrayidx4805 ; <i32> [#uses=1]
  %vecinit4807 = insertelement <4 x i32> %vecinit4803, i32 %tmp4806, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp4808 = load i32 addrspace(1)** %addr_0_3_2  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4809 = getelementptr inbounds i32 addrspace(1)* %tmp4808, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4810 = load i32 addrspace(1)* %arrayidx4809 ; <i32> [#uses=1]
  %vecinit4811 = insertelement <4 x i32> %vecinit4807, i32 %tmp4810, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit4811, <4 x i32>* %.compoundliteral4795
  %tmp4812 = load <4 x i32>* %.compoundliteral4795 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp4812, <4 x i32>* %xmm_tree_0_3_2
  %tmp4813 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp4814 = load <4 x i32>* %xmm_query_element_2 ; <<4 x i32>> [#uses=1]
  %tmp4815 = load <4 x i32>* %xmm_tree_0_3_2      ; <<4 x i32>> [#uses=1]
  %cmp4816 = icmp sgt <4 x i32> %tmp4814, %tmp4815 ; <<4 x i1>> [#uses=1]
  %sext4817 = sext <4 x i1> %cmp4816 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul4818 = mul <4 x i32> %tmp4813, %sext4817    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul4818, <4 x i32>* %temp_index_v_2
  %tmp4819 = load <4 x i32>* %temp_index_v_2      ; <<4 x i32>> [#uses=1]
  %tmp4820 = extractelement <4 x i32> %tmp4819, i32 0 ; <i32> [#uses=1]
  %tmp4821 = load <4 x i32>* %temp_index_v_2      ; <<4 x i32>> [#uses=1]
  %tmp4822 = extractelement <4 x i32> %tmp4821, i32 1 ; <i32> [#uses=1]
  %add4823 = add nsw i32 %tmp4820, %tmp4822       ; <i32> [#uses=1]
  %tmp4824 = load <4 x i32>* %temp_index_v_2      ; <<4 x i32>> [#uses=1]
  %tmp4825 = extractelement <4 x i32> %tmp4824, i32 2 ; <i32> [#uses=1]
  %add4826 = add nsw i32 %add4823, %tmp4825       ; <i32> [#uses=1]
  store i32 %add4826, i32* %temp_index_2
  %tmp4827 = load i32* %delta_2                   ; <i32> [#uses=1]
  %shl4828 = shl i32 %tmp4827, 2                  ; <i32> [#uses=1]
  %tmp4829 = load i32* %temp_index_2              ; <i32> [#uses=1]
  %tmp4830 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4831 = getelementptr inbounds i32 addrspace(1)* %tmp4830, i32 %tmp4829 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4832 = load i32 addrspace(1)* %arrayidx4831 ; <i32> [#uses=1]
  %add4833 = add nsw i32 %shl4828, %tmp4832       ; <i32> [#uses=1]
  store i32 %add4833, i32* %offset3_2
  %tmp4834 = load i32* %offset2_2                 ; <i32> [#uses=1]
  %mul4835 = mul i32 %tmp4834, 16                 ; <i32> [#uses=1]
  %tmp4836 = load i32* %offset3_2                 ; <i32> [#uses=1]
  %add4837 = add nsw i32 %mul4835, %tmp4836       ; <i32> [#uses=1]
  store i32 %add4837, i32* %offset2_2
  %tmp4838 = load i32* %offset1_2                 ; <i32> [#uses=1]
  %mul4839 = mul i32 %tmp4838, 16                 ; <i32> [#uses=1]
  %tmp4840 = load i32* %offset2_2                 ; <i32> [#uses=1]
  %add4841 = add nsw i32 %mul4839, %tmp4840       ; <i32> [#uses=1]
  store i32 %add4841, i32* %offset1_2
  %tmp4842 = load i32 addrspace(1)** %KeyValue.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp4843 = load i32* %offset1_2                 ; <i32> [#uses=1]
  %mul4844 = mul i32 2, %tmp4843                  ; <i32> [#uses=1]
  %add.ptr4845 = getelementptr inbounds i32 addrspace(1)* %tmp4842, i32 %mul4844 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr4845, i32 16)
  %tmp4846 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp4847 = load i32* %base_index_3              ; <i32> [#uses=1]
  %add.ptr4848 = getelementptr inbounds i32 addrspace(1)* %tmp4846, i32 %tmp4847 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr4848, i32 addrspace(1)** %addr_0_3_3
  %tmp4850 = load i32 addrspace(1)** %addr_0_3_3  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4851 = getelementptr inbounds i32 addrspace(1)* %tmp4850, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4852 = load i32 addrspace(1)* %arrayidx4851 ; <i32> [#uses=1]
  %vecinit4853 = insertelement <4 x i32> undef, i32 %tmp4852, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp4854 = load i32 addrspace(1)** %addr_0_3_3  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4855 = getelementptr inbounds i32 addrspace(1)* %tmp4854, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4856 = load i32 addrspace(1)* %arrayidx4855 ; <i32> [#uses=1]
  %vecinit4857 = insertelement <4 x i32> %vecinit4853, i32 %tmp4856, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp4858 = load i32 addrspace(1)** %addr_0_3_3  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4859 = getelementptr inbounds i32 addrspace(1)* %tmp4858, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4860 = load i32 addrspace(1)* %arrayidx4859 ; <i32> [#uses=1]
  %vecinit4861 = insertelement <4 x i32> %vecinit4857, i32 %tmp4860, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp4862 = load i32 addrspace(1)** %addr_0_3_3  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4863 = getelementptr inbounds i32 addrspace(1)* %tmp4862, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4864 = load i32 addrspace(1)* %arrayidx4863 ; <i32> [#uses=1]
  %vecinit4865 = insertelement <4 x i32> %vecinit4861, i32 %tmp4864, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit4865, <4 x i32>* %.compoundliteral4849
  %tmp4866 = load <4 x i32>* %.compoundliteral4849 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp4866, <4 x i32>* %xmm_tree_0_3_3
  %tmp4867 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp4868 = load <4 x i32>* %xmm_query_element_3 ; <<4 x i32>> [#uses=1]
  %tmp4869 = load <4 x i32>* %xmm_tree_0_3_3      ; <<4 x i32>> [#uses=1]
  %cmp4870 = icmp sgt <4 x i32> %tmp4868, %tmp4869 ; <<4 x i1>> [#uses=1]
  %sext4871 = sext <4 x i1> %cmp4870 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul4872 = mul <4 x i32> %tmp4867, %sext4871    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul4872, <4 x i32>* %temp_index_v_3
  %tmp4873 = load <4 x i32>* %temp_index_v_3      ; <<4 x i32>> [#uses=1]
  %tmp4874 = extractelement <4 x i32> %tmp4873, i32 0 ; <i32> [#uses=1]
  %tmp4875 = load <4 x i32>* %temp_index_v_3      ; <<4 x i32>> [#uses=1]
  %tmp4876 = extractelement <4 x i32> %tmp4875, i32 1 ; <i32> [#uses=1]
  %add4877 = add nsw i32 %tmp4874, %tmp4876       ; <i32> [#uses=1]
  %tmp4878 = load <4 x i32>* %temp_index_v_3      ; <<4 x i32>> [#uses=1]
  %tmp4879 = extractelement <4 x i32> %tmp4878, i32 2 ; <i32> [#uses=1]
  %add4880 = add nsw i32 %add4877, %tmp4879       ; <i32> [#uses=1]
  store i32 %add4880, i32* %temp_index_3
  %tmp4881 = load i32* %temp_index_3              ; <i32> [#uses=1]
  %tmp4882 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4883 = getelementptr inbounds i32 addrspace(1)* %tmp4882, i32 %tmp4881 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4884 = load i32 addrspace(1)* %arrayidx4883 ; <i32> [#uses=1]
  store i32 %tmp4884, i32* %delta_3
  %tmp4885 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp4886 = load i32* %base_index_3              ; <i32> [#uses=1]
  %add.ptr4887 = getelementptr inbounds i32 addrspace(1)* %tmp4885, i32 %tmp4886 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4888 = load i32* %temp_index_3              ; <i32> [#uses=1]
  %tmp4889 = load i32 addrspace(1)** %LookUp4.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4890 = getelementptr inbounds i32 addrspace(1)* %tmp4889, i32 %tmp4888 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4891 = load i32 addrspace(1)* %arrayidx4890 ; <i32> [#uses=1]
  %add.ptr4892 = getelementptr inbounds i32 addrspace(1)* %add.ptr4887, i32 %tmp4891 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr4892, i32 addrspace(1)** %addr_0_3_3
  %tmp4894 = load i32 addrspace(1)** %addr_0_3_3  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4895 = getelementptr inbounds i32 addrspace(1)* %tmp4894, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4896 = load i32 addrspace(1)* %arrayidx4895 ; <i32> [#uses=1]
  %vecinit4897 = insertelement <4 x i32> undef, i32 %tmp4896, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp4898 = load i32 addrspace(1)** %addr_0_3_3  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4899 = getelementptr inbounds i32 addrspace(1)* %tmp4898, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4900 = load i32 addrspace(1)* %arrayidx4899 ; <i32> [#uses=1]
  %vecinit4901 = insertelement <4 x i32> %vecinit4897, i32 %tmp4900, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp4902 = load i32 addrspace(1)** %addr_0_3_3  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4903 = getelementptr inbounds i32 addrspace(1)* %tmp4902, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4904 = load i32 addrspace(1)* %arrayidx4903 ; <i32> [#uses=1]
  %vecinit4905 = insertelement <4 x i32> %vecinit4901, i32 %tmp4904, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp4906 = load i32 addrspace(1)** %addr_0_3_3  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4907 = getelementptr inbounds i32 addrspace(1)* %tmp4906, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4908 = load i32 addrspace(1)* %arrayidx4907 ; <i32> [#uses=1]
  %vecinit4909 = insertelement <4 x i32> %vecinit4905, i32 %tmp4908, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit4909, <4 x i32>* %.compoundliteral4893
  %tmp4910 = load <4 x i32>* %.compoundliteral4893 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp4910, <4 x i32>* %xmm_tree_0_3_3
  %tmp4911 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp4912 = load <4 x i32>* %xmm_query_element_3 ; <<4 x i32>> [#uses=1]
  %tmp4913 = load <4 x i32>* %xmm_tree_0_3_3      ; <<4 x i32>> [#uses=1]
  %cmp4914 = icmp sgt <4 x i32> %tmp4912, %tmp4913 ; <<4 x i1>> [#uses=1]
  %sext4915 = sext <4 x i1> %cmp4914 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul4916 = mul <4 x i32> %tmp4911, %sext4915    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul4916, <4 x i32>* %temp_index_v_3
  %tmp4917 = load <4 x i32>* %temp_index_v_3      ; <<4 x i32>> [#uses=1]
  %tmp4918 = extractelement <4 x i32> %tmp4917, i32 0 ; <i32> [#uses=1]
  %tmp4919 = load <4 x i32>* %temp_index_v_3      ; <<4 x i32>> [#uses=1]
  %tmp4920 = extractelement <4 x i32> %tmp4919, i32 1 ; <i32> [#uses=1]
  %add4921 = add nsw i32 %tmp4918, %tmp4920       ; <i32> [#uses=1]
  %tmp4922 = load <4 x i32>* %temp_index_v_3      ; <<4 x i32>> [#uses=1]
  %tmp4923 = extractelement <4 x i32> %tmp4922, i32 2 ; <i32> [#uses=1]
  %add4924 = add nsw i32 %add4921, %tmp4923       ; <i32> [#uses=1]
  store i32 %add4924, i32* %temp_index_3
  %tmp4925 = load i32* %delta_3                   ; <i32> [#uses=1]
  %shl4926 = shl i32 %tmp4925, 2                  ; <i32> [#uses=1]
  %tmp4927 = load i32* %temp_index_3              ; <i32> [#uses=1]
  %tmp4928 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4929 = getelementptr inbounds i32 addrspace(1)* %tmp4928, i32 %tmp4927 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4930 = load i32 addrspace(1)* %arrayidx4929 ; <i32> [#uses=1]
  %add4931 = add nsw i32 %shl4926, %tmp4930       ; <i32> [#uses=1]
  store i32 %add4931, i32* %offset3_3
  %tmp4932 = load i32* %offset2_3                 ; <i32> [#uses=1]
  %mul4933 = mul i32 %tmp4932, 16                 ; <i32> [#uses=1]
  %tmp4934 = load i32* %offset3_3                 ; <i32> [#uses=1]
  %add4935 = add nsw i32 %mul4933, %tmp4934       ; <i32> [#uses=1]
  store i32 %add4935, i32* %offset2_3
  %tmp4936 = load i32* %offset1_3                 ; <i32> [#uses=1]
  %mul4937 = mul i32 %tmp4936, 16                 ; <i32> [#uses=1]
  %tmp4938 = load i32* %offset2_3                 ; <i32> [#uses=1]
  %add4939 = add nsw i32 %mul4937, %tmp4938       ; <i32> [#uses=1]
  store i32 %add4939, i32* %offset1_3
  %tmp4940 = load i32 addrspace(1)** %KeyValue.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp4941 = load i32* %offset1_3                 ; <i32> [#uses=1]
  %mul4942 = mul i32 2, %tmp4941                  ; <i32> [#uses=1]
  %add.ptr4943 = getelementptr inbounds i32 addrspace(1)* %tmp4940, i32 %mul4942 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr4943, i32 16)
  %tmp4944 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp4945 = load i32* %base_index_4              ; <i32> [#uses=1]
  %add.ptr4946 = getelementptr inbounds i32 addrspace(1)* %tmp4944, i32 %tmp4945 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr4946, i32 addrspace(1)** %addr_0_3_4
  %tmp4948 = load i32 addrspace(1)** %addr_0_3_4  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4949 = getelementptr inbounds i32 addrspace(1)* %tmp4948, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4950 = load i32 addrspace(1)* %arrayidx4949 ; <i32> [#uses=1]
  %vecinit4951 = insertelement <4 x i32> undef, i32 %tmp4950, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp4952 = load i32 addrspace(1)** %addr_0_3_4  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4953 = getelementptr inbounds i32 addrspace(1)* %tmp4952, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4954 = load i32 addrspace(1)* %arrayidx4953 ; <i32> [#uses=1]
  %vecinit4955 = insertelement <4 x i32> %vecinit4951, i32 %tmp4954, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp4956 = load i32 addrspace(1)** %addr_0_3_4  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4957 = getelementptr inbounds i32 addrspace(1)* %tmp4956, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4958 = load i32 addrspace(1)* %arrayidx4957 ; <i32> [#uses=1]
  %vecinit4959 = insertelement <4 x i32> %vecinit4955, i32 %tmp4958, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp4960 = load i32 addrspace(1)** %addr_0_3_4  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4961 = getelementptr inbounds i32 addrspace(1)* %tmp4960, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4962 = load i32 addrspace(1)* %arrayidx4961 ; <i32> [#uses=1]
  %vecinit4963 = insertelement <4 x i32> %vecinit4959, i32 %tmp4962, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit4963, <4 x i32>* %.compoundliteral4947
  %tmp4964 = load <4 x i32>* %.compoundliteral4947 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp4964, <4 x i32>* %xmm_tree_0_3_4
  %tmp4965 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp4966 = load <4 x i32>* %xmm_query_element_4 ; <<4 x i32>> [#uses=1]
  %tmp4967 = load <4 x i32>* %xmm_tree_0_3_4      ; <<4 x i32>> [#uses=1]
  %cmp4968 = icmp sgt <4 x i32> %tmp4966, %tmp4967 ; <<4 x i1>> [#uses=1]
  %sext4969 = sext <4 x i1> %cmp4968 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul4970 = mul <4 x i32> %tmp4965, %sext4969    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul4970, <4 x i32>* %temp_index_v_4
  %tmp4971 = load <4 x i32>* %temp_index_v_4      ; <<4 x i32>> [#uses=1]
  %tmp4972 = extractelement <4 x i32> %tmp4971, i32 0 ; <i32> [#uses=1]
  %tmp4973 = load <4 x i32>* %temp_index_v_4      ; <<4 x i32>> [#uses=1]
  %tmp4974 = extractelement <4 x i32> %tmp4973, i32 1 ; <i32> [#uses=1]
  %add4975 = add nsw i32 %tmp4972, %tmp4974       ; <i32> [#uses=1]
  %tmp4976 = load <4 x i32>* %temp_index_v_4      ; <<4 x i32>> [#uses=1]
  %tmp4977 = extractelement <4 x i32> %tmp4976, i32 2 ; <i32> [#uses=1]
  %add4978 = add nsw i32 %add4975, %tmp4977       ; <i32> [#uses=1]
  store i32 %add4978, i32* %temp_index_4
  %tmp4979 = load i32* %temp_index_4              ; <i32> [#uses=1]
  %tmp4980 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4981 = getelementptr inbounds i32 addrspace(1)* %tmp4980, i32 %tmp4979 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4982 = load i32 addrspace(1)* %arrayidx4981 ; <i32> [#uses=1]
  store i32 %tmp4982, i32* %delta_4
  %tmp4983 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp4984 = load i32* %base_index_4              ; <i32> [#uses=1]
  %add.ptr4985 = getelementptr inbounds i32 addrspace(1)* %tmp4983, i32 %tmp4984 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4986 = load i32* %temp_index_4              ; <i32> [#uses=1]
  %tmp4987 = load i32 addrspace(1)** %LookUp4.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4988 = getelementptr inbounds i32 addrspace(1)* %tmp4987, i32 %tmp4986 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4989 = load i32 addrspace(1)* %arrayidx4988 ; <i32> [#uses=1]
  %add.ptr4990 = getelementptr inbounds i32 addrspace(1)* %add.ptr4985, i32 %tmp4989 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr4990, i32 addrspace(1)** %addr_0_3_4
  %tmp4992 = load i32 addrspace(1)** %addr_0_3_4  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4993 = getelementptr inbounds i32 addrspace(1)* %tmp4992, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4994 = load i32 addrspace(1)* %arrayidx4993 ; <i32> [#uses=1]
  %vecinit4995 = insertelement <4 x i32> undef, i32 %tmp4994, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp4996 = load i32 addrspace(1)** %addr_0_3_4  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx4997 = getelementptr inbounds i32 addrspace(1)* %tmp4996, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp4998 = load i32 addrspace(1)* %arrayidx4997 ; <i32> [#uses=1]
  %vecinit4999 = insertelement <4 x i32> %vecinit4995, i32 %tmp4998, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp5000 = load i32 addrspace(1)** %addr_0_3_4  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5001 = getelementptr inbounds i32 addrspace(1)* %tmp5000, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5002 = load i32 addrspace(1)* %arrayidx5001 ; <i32> [#uses=1]
  %vecinit5003 = insertelement <4 x i32> %vecinit4999, i32 %tmp5002, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp5004 = load i32 addrspace(1)** %addr_0_3_4  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5005 = getelementptr inbounds i32 addrspace(1)* %tmp5004, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5006 = load i32 addrspace(1)* %arrayidx5005 ; <i32> [#uses=1]
  %vecinit5007 = insertelement <4 x i32> %vecinit5003, i32 %tmp5006, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit5007, <4 x i32>* %.compoundliteral4991
  %tmp5008 = load <4 x i32>* %.compoundliteral4991 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp5008, <4 x i32>* %xmm_tree_0_3_4
  %tmp5009 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp5010 = load <4 x i32>* %xmm_query_element_4 ; <<4 x i32>> [#uses=1]
  %tmp5011 = load <4 x i32>* %xmm_tree_0_3_4      ; <<4 x i32>> [#uses=1]
  %cmp5012 = icmp sgt <4 x i32> %tmp5010, %tmp5011 ; <<4 x i1>> [#uses=1]
  %sext5013 = sext <4 x i1> %cmp5012 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul5014 = mul <4 x i32> %tmp5009, %sext5013    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul5014, <4 x i32>* %temp_index_v_4
  %tmp5015 = load <4 x i32>* %temp_index_v_4      ; <<4 x i32>> [#uses=1]
  %tmp5016 = extractelement <4 x i32> %tmp5015, i32 0 ; <i32> [#uses=1]
  %tmp5017 = load <4 x i32>* %temp_index_v_4      ; <<4 x i32>> [#uses=1]
  %tmp5018 = extractelement <4 x i32> %tmp5017, i32 1 ; <i32> [#uses=1]
  %add5019 = add nsw i32 %tmp5016, %tmp5018       ; <i32> [#uses=1]
  %tmp5020 = load <4 x i32>* %temp_index_v_4      ; <<4 x i32>> [#uses=1]
  %tmp5021 = extractelement <4 x i32> %tmp5020, i32 2 ; <i32> [#uses=1]
  %add5022 = add nsw i32 %add5019, %tmp5021       ; <i32> [#uses=1]
  store i32 %add5022, i32* %temp_index_4
  %tmp5023 = load i32* %delta_4                   ; <i32> [#uses=1]
  %shl5024 = shl i32 %tmp5023, 2                  ; <i32> [#uses=1]
  %tmp5025 = load i32* %temp_index_4              ; <i32> [#uses=1]
  %tmp5026 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5027 = getelementptr inbounds i32 addrspace(1)* %tmp5026, i32 %tmp5025 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5028 = load i32 addrspace(1)* %arrayidx5027 ; <i32> [#uses=1]
  %add5029 = add nsw i32 %shl5024, %tmp5028       ; <i32> [#uses=1]
  store i32 %add5029, i32* %offset3_4
  %tmp5030 = load i32* %offset2_4                 ; <i32> [#uses=1]
  %mul5031 = mul i32 %tmp5030, 16                 ; <i32> [#uses=1]
  %tmp5032 = load i32* %offset3_4                 ; <i32> [#uses=1]
  %add5033 = add nsw i32 %mul5031, %tmp5032       ; <i32> [#uses=1]
  store i32 %add5033, i32* %offset2_4
  %tmp5034 = load i32* %offset1_4                 ; <i32> [#uses=1]
  %mul5035 = mul i32 %tmp5034, 16                 ; <i32> [#uses=1]
  %tmp5036 = load i32* %offset2_4                 ; <i32> [#uses=1]
  %add5037 = add nsw i32 %mul5035, %tmp5036       ; <i32> [#uses=1]
  store i32 %add5037, i32* %offset1_4
  %tmp5038 = load i32 addrspace(1)** %KeyValue.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp5039 = load i32* %offset1_4                 ; <i32> [#uses=1]
  %mul5040 = mul i32 2, %tmp5039                  ; <i32> [#uses=1]
  %add.ptr5041 = getelementptr inbounds i32 addrspace(1)* %tmp5038, i32 %mul5040 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr5041, i32 16)
  %tmp5042 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp5043 = load i32* %base_index_5              ; <i32> [#uses=1]
  %add.ptr5044 = getelementptr inbounds i32 addrspace(1)* %tmp5042, i32 %tmp5043 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr5044, i32 addrspace(1)** %addr_0_3_5
  %tmp5046 = load i32 addrspace(1)** %addr_0_3_5  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5047 = getelementptr inbounds i32 addrspace(1)* %tmp5046, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5048 = load i32 addrspace(1)* %arrayidx5047 ; <i32> [#uses=1]
  %vecinit5049 = insertelement <4 x i32> undef, i32 %tmp5048, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp5050 = load i32 addrspace(1)** %addr_0_3_5  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5051 = getelementptr inbounds i32 addrspace(1)* %tmp5050, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5052 = load i32 addrspace(1)* %arrayidx5051 ; <i32> [#uses=1]
  %vecinit5053 = insertelement <4 x i32> %vecinit5049, i32 %tmp5052, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp5054 = load i32 addrspace(1)** %addr_0_3_5  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5055 = getelementptr inbounds i32 addrspace(1)* %tmp5054, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5056 = load i32 addrspace(1)* %arrayidx5055 ; <i32> [#uses=1]
  %vecinit5057 = insertelement <4 x i32> %vecinit5053, i32 %tmp5056, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp5058 = load i32 addrspace(1)** %addr_0_3_5  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5059 = getelementptr inbounds i32 addrspace(1)* %tmp5058, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5060 = load i32 addrspace(1)* %arrayidx5059 ; <i32> [#uses=1]
  %vecinit5061 = insertelement <4 x i32> %vecinit5057, i32 %tmp5060, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit5061, <4 x i32>* %.compoundliteral5045
  %tmp5062 = load <4 x i32>* %.compoundliteral5045 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp5062, <4 x i32>* %xmm_tree_0_3_5
  %tmp5063 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp5064 = load <4 x i32>* %xmm_query_element_5 ; <<4 x i32>> [#uses=1]
  %tmp5065 = load <4 x i32>* %xmm_tree_0_3_5      ; <<4 x i32>> [#uses=1]
  %cmp5066 = icmp sgt <4 x i32> %tmp5064, %tmp5065 ; <<4 x i1>> [#uses=1]
  %sext5067 = sext <4 x i1> %cmp5066 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul5068 = mul <4 x i32> %tmp5063, %sext5067    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul5068, <4 x i32>* %temp_index_v_5
  %tmp5069 = load <4 x i32>* %temp_index_v_5      ; <<4 x i32>> [#uses=1]
  %tmp5070 = extractelement <4 x i32> %tmp5069, i32 0 ; <i32> [#uses=1]
  %tmp5071 = load <4 x i32>* %temp_index_v_5      ; <<4 x i32>> [#uses=1]
  %tmp5072 = extractelement <4 x i32> %tmp5071, i32 1 ; <i32> [#uses=1]
  %add5073 = add nsw i32 %tmp5070, %tmp5072       ; <i32> [#uses=1]
  %tmp5074 = load <4 x i32>* %temp_index_v_5      ; <<4 x i32>> [#uses=1]
  %tmp5075 = extractelement <4 x i32> %tmp5074, i32 2 ; <i32> [#uses=1]
  %add5076 = add nsw i32 %add5073, %tmp5075       ; <i32> [#uses=1]
  store i32 %add5076, i32* %temp_index_5
  %tmp5077 = load i32* %temp_index_5              ; <i32> [#uses=1]
  %tmp5078 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5079 = getelementptr inbounds i32 addrspace(1)* %tmp5078, i32 %tmp5077 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5080 = load i32 addrspace(1)* %arrayidx5079 ; <i32> [#uses=1]
  store i32 %tmp5080, i32* %delta_5
  %tmp5081 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp5082 = load i32* %base_index_5              ; <i32> [#uses=1]
  %add.ptr5083 = getelementptr inbounds i32 addrspace(1)* %tmp5081, i32 %tmp5082 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5084 = load i32* %temp_index_5              ; <i32> [#uses=1]
  %tmp5085 = load i32 addrspace(1)** %LookUp4.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5086 = getelementptr inbounds i32 addrspace(1)* %tmp5085, i32 %tmp5084 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5087 = load i32 addrspace(1)* %arrayidx5086 ; <i32> [#uses=1]
  %add.ptr5088 = getelementptr inbounds i32 addrspace(1)* %add.ptr5083, i32 %tmp5087 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr5088, i32 addrspace(1)** %addr_0_3_5
  %tmp5090 = load i32 addrspace(1)** %addr_0_3_5  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5091 = getelementptr inbounds i32 addrspace(1)* %tmp5090, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5092 = load i32 addrspace(1)* %arrayidx5091 ; <i32> [#uses=1]
  %vecinit5093 = insertelement <4 x i32> undef, i32 %tmp5092, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp5094 = load i32 addrspace(1)** %addr_0_3_5  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5095 = getelementptr inbounds i32 addrspace(1)* %tmp5094, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5096 = load i32 addrspace(1)* %arrayidx5095 ; <i32> [#uses=1]
  %vecinit5097 = insertelement <4 x i32> %vecinit5093, i32 %tmp5096, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp5098 = load i32 addrspace(1)** %addr_0_3_5  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5099 = getelementptr inbounds i32 addrspace(1)* %tmp5098, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5100 = load i32 addrspace(1)* %arrayidx5099 ; <i32> [#uses=1]
  %vecinit5101 = insertelement <4 x i32> %vecinit5097, i32 %tmp5100, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp5102 = load i32 addrspace(1)** %addr_0_3_5  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5103 = getelementptr inbounds i32 addrspace(1)* %tmp5102, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5104 = load i32 addrspace(1)* %arrayidx5103 ; <i32> [#uses=1]
  %vecinit5105 = insertelement <4 x i32> %vecinit5101, i32 %tmp5104, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit5105, <4 x i32>* %.compoundliteral5089
  %tmp5106 = load <4 x i32>* %.compoundliteral5089 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp5106, <4 x i32>* %xmm_tree_0_3_5
  %tmp5107 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp5108 = load <4 x i32>* %xmm_query_element_5 ; <<4 x i32>> [#uses=1]
  %tmp5109 = load <4 x i32>* %xmm_tree_0_3_5      ; <<4 x i32>> [#uses=1]
  %cmp5110 = icmp sgt <4 x i32> %tmp5108, %tmp5109 ; <<4 x i1>> [#uses=1]
  %sext5111 = sext <4 x i1> %cmp5110 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul5112 = mul <4 x i32> %tmp5107, %sext5111    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul5112, <4 x i32>* %temp_index_v_5
  %tmp5113 = load <4 x i32>* %temp_index_v_5      ; <<4 x i32>> [#uses=1]
  %tmp5114 = extractelement <4 x i32> %tmp5113, i32 0 ; <i32> [#uses=1]
  %tmp5115 = load <4 x i32>* %temp_index_v_5      ; <<4 x i32>> [#uses=1]
  %tmp5116 = extractelement <4 x i32> %tmp5115, i32 1 ; <i32> [#uses=1]
  %add5117 = add nsw i32 %tmp5114, %tmp5116       ; <i32> [#uses=1]
  %tmp5118 = load <4 x i32>* %temp_index_v_5      ; <<4 x i32>> [#uses=1]
  %tmp5119 = extractelement <4 x i32> %tmp5118, i32 2 ; <i32> [#uses=1]
  %add5120 = add nsw i32 %add5117, %tmp5119       ; <i32> [#uses=1]
  store i32 %add5120, i32* %temp_index_5
  %tmp5121 = load i32* %delta_5                   ; <i32> [#uses=1]
  %shl5122 = shl i32 %tmp5121, 2                  ; <i32> [#uses=1]
  %tmp5123 = load i32* %temp_index_5              ; <i32> [#uses=1]
  %tmp5124 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5125 = getelementptr inbounds i32 addrspace(1)* %tmp5124, i32 %tmp5123 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5126 = load i32 addrspace(1)* %arrayidx5125 ; <i32> [#uses=1]
  %add5127 = add nsw i32 %shl5122, %tmp5126       ; <i32> [#uses=1]
  store i32 %add5127, i32* %offset3_5
  %tmp5128 = load i32* %offset2_5                 ; <i32> [#uses=1]
  %mul5129 = mul i32 %tmp5128, 16                 ; <i32> [#uses=1]
  %tmp5130 = load i32* %offset3_5                 ; <i32> [#uses=1]
  %add5131 = add nsw i32 %mul5129, %tmp5130       ; <i32> [#uses=1]
  store i32 %add5131, i32* %offset2_5
  %tmp5132 = load i32* %offset1_5                 ; <i32> [#uses=1]
  %mul5133 = mul i32 %tmp5132, 16                 ; <i32> [#uses=1]
  %tmp5134 = load i32* %offset2_5                 ; <i32> [#uses=1]
  %add5135 = add nsw i32 %mul5133, %tmp5134       ; <i32> [#uses=1]
  store i32 %add5135, i32* %offset1_5
  %tmp5136 = load i32 addrspace(1)** %KeyValue.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp5137 = load i32* %offset1_5                 ; <i32> [#uses=1]
  %mul5138 = mul i32 2, %tmp5137                  ; <i32> [#uses=1]
  %add.ptr5139 = getelementptr inbounds i32 addrspace(1)* %tmp5136, i32 %mul5138 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr5139, i32 16)
  %tmp5140 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp5141 = load i32* %base_index_6              ; <i32> [#uses=1]
  %add.ptr5142 = getelementptr inbounds i32 addrspace(1)* %tmp5140, i32 %tmp5141 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr5142, i32 addrspace(1)** %addr_0_3_6
  %tmp5144 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5145 = getelementptr inbounds i32 addrspace(1)* %tmp5144, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5146 = load i32 addrspace(1)* %arrayidx5145 ; <i32> [#uses=1]
  %vecinit5147 = insertelement <4 x i32> undef, i32 %tmp5146, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp5148 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5149 = getelementptr inbounds i32 addrspace(1)* %tmp5148, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5150 = load i32 addrspace(1)* %arrayidx5149 ; <i32> [#uses=1]
  %vecinit5151 = insertelement <4 x i32> %vecinit5147, i32 %tmp5150, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp5152 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5153 = getelementptr inbounds i32 addrspace(1)* %tmp5152, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5154 = load i32 addrspace(1)* %arrayidx5153 ; <i32> [#uses=1]
  %vecinit5155 = insertelement <4 x i32> %vecinit5151, i32 %tmp5154, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp5156 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5157 = getelementptr inbounds i32 addrspace(1)* %tmp5156, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5158 = load i32 addrspace(1)* %arrayidx5157 ; <i32> [#uses=1]
  %vecinit5159 = insertelement <4 x i32> %vecinit5155, i32 %tmp5158, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit5159, <4 x i32>* %.compoundliteral5143
  %tmp5160 = load <4 x i32>* %.compoundliteral5143 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp5160, <4 x i32>* %xmm_tree_0_3_6
  %tmp5161 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp5162 = load <4 x i32>* %xmm_query_element_6 ; <<4 x i32>> [#uses=1]
  %tmp5163 = load <4 x i32>* %xmm_tree_0_3_6      ; <<4 x i32>> [#uses=1]
  %cmp5164 = icmp sgt <4 x i32> %tmp5162, %tmp5163 ; <<4 x i1>> [#uses=1]
  %sext5165 = sext <4 x i1> %cmp5164 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul5166 = mul <4 x i32> %tmp5161, %sext5165    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul5166, <4 x i32>* %temp_index_v_6
  %tmp5167 = load <4 x i32>* %temp_index_v_6      ; <<4 x i32>> [#uses=1]
  %tmp5168 = extractelement <4 x i32> %tmp5167, i32 0 ; <i32> [#uses=1]
  %tmp5169 = load <4 x i32>* %temp_index_v_6      ; <<4 x i32>> [#uses=1]
  %tmp5170 = extractelement <4 x i32> %tmp5169, i32 1 ; <i32> [#uses=1]
  %add5171 = add nsw i32 %tmp5168, %tmp5170       ; <i32> [#uses=1]
  %tmp5172 = load <4 x i32>* %temp_index_v_6      ; <<4 x i32>> [#uses=1]
  %tmp5173 = extractelement <4 x i32> %tmp5172, i32 2 ; <i32> [#uses=1]
  %add5174 = add nsw i32 %add5171, %tmp5173       ; <i32> [#uses=1]
  store i32 %add5174, i32* %temp_index_6
  %tmp5175 = load i32* %temp_index_6              ; <i32> [#uses=1]
  %tmp5176 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5177 = getelementptr inbounds i32 addrspace(1)* %tmp5176, i32 %tmp5175 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5178 = load i32 addrspace(1)* %arrayidx5177 ; <i32> [#uses=1]
  store i32 %tmp5178, i32* %delta_6
  %tmp5179 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp5180 = load i32* %base_index_6              ; <i32> [#uses=1]
  %add.ptr5181 = getelementptr inbounds i32 addrspace(1)* %tmp5179, i32 %tmp5180 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5182 = load i32* %temp_index_6              ; <i32> [#uses=1]
  %tmp5183 = load i32 addrspace(1)** %LookUp4.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5184 = getelementptr inbounds i32 addrspace(1)* %tmp5183, i32 %tmp5182 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5185 = load i32 addrspace(1)* %arrayidx5184 ; <i32> [#uses=1]
  %add.ptr5186 = getelementptr inbounds i32 addrspace(1)* %add.ptr5181, i32 %tmp5185 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr5186, i32 addrspace(1)** %addr_0_3_6
  %tmp5188 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5189 = getelementptr inbounds i32 addrspace(1)* %tmp5188, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5190 = load i32 addrspace(1)* %arrayidx5189 ; <i32> [#uses=1]
  %vecinit5191 = insertelement <4 x i32> undef, i32 %tmp5190, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp5192 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5193 = getelementptr inbounds i32 addrspace(1)* %tmp5192, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5194 = load i32 addrspace(1)* %arrayidx5193 ; <i32> [#uses=1]
  %vecinit5195 = insertelement <4 x i32> %vecinit5191, i32 %tmp5194, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp5196 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5197 = getelementptr inbounds i32 addrspace(1)* %tmp5196, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5198 = load i32 addrspace(1)* %arrayidx5197 ; <i32> [#uses=1]
  %vecinit5199 = insertelement <4 x i32> %vecinit5195, i32 %tmp5198, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp5200 = load i32 addrspace(1)** %addr_0_3_6  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5201 = getelementptr inbounds i32 addrspace(1)* %tmp5200, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5202 = load i32 addrspace(1)* %arrayidx5201 ; <i32> [#uses=1]
  %vecinit5203 = insertelement <4 x i32> %vecinit5199, i32 %tmp5202, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit5203, <4 x i32>* %.compoundliteral5187
  %tmp5204 = load <4 x i32>* %.compoundliteral5187 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp5204, <4 x i32>* %xmm_tree_0_3_6
  %tmp5205 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp5206 = load <4 x i32>* %xmm_query_element_6 ; <<4 x i32>> [#uses=1]
  %tmp5207 = load <4 x i32>* %xmm_tree_0_3_6      ; <<4 x i32>> [#uses=1]
  %cmp5208 = icmp sgt <4 x i32> %tmp5206, %tmp5207 ; <<4 x i1>> [#uses=1]
  %sext5209 = sext <4 x i1> %cmp5208 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul5210 = mul <4 x i32> %tmp5205, %sext5209    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul5210, <4 x i32>* %temp_index_v_6
  %tmp5211 = load <4 x i32>* %temp_index_v_6      ; <<4 x i32>> [#uses=1]
  %tmp5212 = extractelement <4 x i32> %tmp5211, i32 0 ; <i32> [#uses=1]
  %tmp5213 = load <4 x i32>* %temp_index_v_6      ; <<4 x i32>> [#uses=1]
  %tmp5214 = extractelement <4 x i32> %tmp5213, i32 1 ; <i32> [#uses=1]
  %add5215 = add nsw i32 %tmp5212, %tmp5214       ; <i32> [#uses=1]
  %tmp5216 = load <4 x i32>* %temp_index_v_6      ; <<4 x i32>> [#uses=1]
  %tmp5217 = extractelement <4 x i32> %tmp5216, i32 2 ; <i32> [#uses=1]
  %add5218 = add nsw i32 %add5215, %tmp5217       ; <i32> [#uses=1]
  store i32 %add5218, i32* %temp_index_6
  %tmp5219 = load i32* %delta_6                   ; <i32> [#uses=1]
  %shl5220 = shl i32 %tmp5219, 2                  ; <i32> [#uses=1]
  %tmp5221 = load i32* %temp_index_6              ; <i32> [#uses=1]
  %tmp5222 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5223 = getelementptr inbounds i32 addrspace(1)* %tmp5222, i32 %tmp5221 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5224 = load i32 addrspace(1)* %arrayidx5223 ; <i32> [#uses=1]
  %add5225 = add nsw i32 %shl5220, %tmp5224       ; <i32> [#uses=1]
  store i32 %add5225, i32* %offset3_6
  %tmp5226 = load i32* %offset2_6                 ; <i32> [#uses=1]
  %mul5227 = mul i32 %tmp5226, 16                 ; <i32> [#uses=1]
  %tmp5228 = load i32* %offset3_6                 ; <i32> [#uses=1]
  %add5229 = add nsw i32 %mul5227, %tmp5228       ; <i32> [#uses=1]
  store i32 %add5229, i32* %offset2_6
  %tmp5230 = load i32* %offset1_6                 ; <i32> [#uses=1]
  %mul5231 = mul i32 %tmp5230, 16                 ; <i32> [#uses=1]
  %tmp5232 = load i32* %offset2_6                 ; <i32> [#uses=1]
  %add5233 = add nsw i32 %mul5231, %tmp5232       ; <i32> [#uses=1]
  store i32 %add5233, i32* %offset1_6
  %tmp5234 = load i32 addrspace(1)** %KeyValue.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp5235 = load i32* %offset1_6                 ; <i32> [#uses=1]
  %mul5236 = mul i32 2, %tmp5235                  ; <i32> [#uses=1]
  %add.ptr5237 = getelementptr inbounds i32 addrspace(1)* %tmp5234, i32 %mul5236 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr5237, i32 16)
  %tmp5238 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp5239 = load i32* %base_index_7              ; <i32> [#uses=1]
  %add.ptr5240 = getelementptr inbounds i32 addrspace(1)* %tmp5238, i32 %tmp5239 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr5240, i32 addrspace(1)** %addr_0_3_7
  %tmp5242 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5243 = getelementptr inbounds i32 addrspace(1)* %tmp5242, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5244 = load i32 addrspace(1)* %arrayidx5243 ; <i32> [#uses=1]
  %vecinit5245 = insertelement <4 x i32> undef, i32 %tmp5244, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp5246 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5247 = getelementptr inbounds i32 addrspace(1)* %tmp5246, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5248 = load i32 addrspace(1)* %arrayidx5247 ; <i32> [#uses=1]
  %vecinit5249 = insertelement <4 x i32> %vecinit5245, i32 %tmp5248, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp5250 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5251 = getelementptr inbounds i32 addrspace(1)* %tmp5250, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5252 = load i32 addrspace(1)* %arrayidx5251 ; <i32> [#uses=1]
  %vecinit5253 = insertelement <4 x i32> %vecinit5249, i32 %tmp5252, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp5254 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5255 = getelementptr inbounds i32 addrspace(1)* %tmp5254, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5256 = load i32 addrspace(1)* %arrayidx5255 ; <i32> [#uses=1]
  %vecinit5257 = insertelement <4 x i32> %vecinit5253, i32 %tmp5256, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit5257, <4 x i32>* %.compoundliteral5241
  %tmp5258 = load <4 x i32>* %.compoundliteral5241 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp5258, <4 x i32>* %xmm_tree_0_3_7
  %tmp5259 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp5260 = load <4 x i32>* %xmm_query_element_7 ; <<4 x i32>> [#uses=1]
  %tmp5261 = load <4 x i32>* %xmm_tree_0_3_7      ; <<4 x i32>> [#uses=1]
  %cmp5262 = icmp sgt <4 x i32> %tmp5260, %tmp5261 ; <<4 x i1>> [#uses=1]
  %sext5263 = sext <4 x i1> %cmp5262 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul5264 = mul <4 x i32> %tmp5259, %sext5263    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul5264, <4 x i32>* %temp_index_v_7
  %tmp5265 = load <4 x i32>* %temp_index_v_7      ; <<4 x i32>> [#uses=1]
  %tmp5266 = extractelement <4 x i32> %tmp5265, i32 0 ; <i32> [#uses=1]
  %tmp5267 = load <4 x i32>* %temp_index_v_7      ; <<4 x i32>> [#uses=1]
  %tmp5268 = extractelement <4 x i32> %tmp5267, i32 1 ; <i32> [#uses=1]
  %add5269 = add nsw i32 %tmp5266, %tmp5268       ; <i32> [#uses=1]
  %tmp5270 = load <4 x i32>* %temp_index_v_7      ; <<4 x i32>> [#uses=1]
  %tmp5271 = extractelement <4 x i32> %tmp5270, i32 2 ; <i32> [#uses=1]
  %add5272 = add nsw i32 %add5269, %tmp5271       ; <i32> [#uses=1]
  store i32 %add5272, i32* %temp_index_7
  %tmp5273 = load i32* %temp_index_7              ; <i32> [#uses=1]
  %tmp5274 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5275 = getelementptr inbounds i32 addrspace(1)* %tmp5274, i32 %tmp5273 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5276 = load i32 addrspace(1)* %arrayidx5275 ; <i32> [#uses=1]
  store i32 %tmp5276, i32* %delta_7
  %tmp5277 = load i32 addrspace(1)** %Input2.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp5278 = load i32* %base_index_7              ; <i32> [#uses=1]
  %add.ptr5279 = getelementptr inbounds i32 addrspace(1)* %tmp5277, i32 %tmp5278 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5280 = load i32* %temp_index_7              ; <i32> [#uses=1]
  %tmp5281 = load i32 addrspace(1)** %LookUp4.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5282 = getelementptr inbounds i32 addrspace(1)* %tmp5281, i32 %tmp5280 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5283 = load i32 addrspace(1)* %arrayidx5282 ; <i32> [#uses=1]
  %add.ptr5284 = getelementptr inbounds i32 addrspace(1)* %add.ptr5279, i32 %tmp5283 ; <i32 addrspace(1)*> [#uses=1]
  store i32 addrspace(1)* %add.ptr5284, i32 addrspace(1)** %addr_0_3_7
  %tmp5286 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5287 = getelementptr inbounds i32 addrspace(1)* %tmp5286, i32 0 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5288 = load i32 addrspace(1)* %arrayidx5287 ; <i32> [#uses=1]
  %vecinit5289 = insertelement <4 x i32> undef, i32 %tmp5288, i32 0 ; <<4 x i32>> [#uses=1]
  %tmp5290 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5291 = getelementptr inbounds i32 addrspace(1)* %tmp5290, i32 1 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5292 = load i32 addrspace(1)* %arrayidx5291 ; <i32> [#uses=1]
  %vecinit5293 = insertelement <4 x i32> %vecinit5289, i32 %tmp5292, i32 1 ; <<4 x i32>> [#uses=1]
  %tmp5294 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5295 = getelementptr inbounds i32 addrspace(1)* %tmp5294, i32 2 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5296 = load i32 addrspace(1)* %arrayidx5295 ; <i32> [#uses=1]
  %vecinit5297 = insertelement <4 x i32> %vecinit5293, i32 %tmp5296, i32 2 ; <<4 x i32>> [#uses=1]
  %tmp5298 = load i32 addrspace(1)** %addr_0_3_7  ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5299 = getelementptr inbounds i32 addrspace(1)* %tmp5298, i32 3 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5300 = load i32 addrspace(1)* %arrayidx5299 ; <i32> [#uses=1]
  %vecinit5301 = insertelement <4 x i32> %vecinit5297, i32 %tmp5300, i32 3 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %vecinit5301, <4 x i32>* %.compoundliteral5285
  %tmp5302 = load <4 x i32>* %.compoundliteral5285 ; <<4 x i32>> [#uses=1]
  store <4 x i32> %tmp5302, <4 x i32>* %xmm_tree_0_3_7
  %tmp5303 = load <4 x i32>* %tmp24               ; <<4 x i32>> [#uses=1]
  %tmp5304 = load <4 x i32>* %xmm_query_element_7 ; <<4 x i32>> [#uses=1]
  %tmp5305 = load <4 x i32>* %xmm_tree_0_3_7      ; <<4 x i32>> [#uses=1]
  %cmp5306 = icmp sgt <4 x i32> %tmp5304, %tmp5305 ; <<4 x i1>> [#uses=1]
  %sext5307 = sext <4 x i1> %cmp5306 to <4 x i32> ; <<4 x i32>> [#uses=1]
  %mul5308 = mul <4 x i32> %tmp5303, %sext5307    ; <<4 x i32>> [#uses=1]
  store <4 x i32> %mul5308, <4 x i32>* %temp_index_v_7
  %tmp5309 = load <4 x i32>* %temp_index_v_7      ; <<4 x i32>> [#uses=1]
  %tmp5310 = extractelement <4 x i32> %tmp5309, i32 0 ; <i32> [#uses=1]
  %tmp5311 = load <4 x i32>* %temp_index_v_7      ; <<4 x i32>> [#uses=1]
  %tmp5312 = extractelement <4 x i32> %tmp5311, i32 1 ; <i32> [#uses=1]
  %add5313 = add nsw i32 %tmp5310, %tmp5312       ; <i32> [#uses=1]
  %tmp5314 = load <4 x i32>* %temp_index_v_7      ; <<4 x i32>> [#uses=1]
  %tmp5315 = extractelement <4 x i32> %tmp5314, i32 2 ; <i32> [#uses=1]
  %add5316 = add nsw i32 %add5313, %tmp5315       ; <i32> [#uses=1]
  store i32 %add5316, i32* %temp_index_7
  %tmp5317 = load i32* %delta_7                   ; <i32> [#uses=1]
  %shl5318 = shl i32 %tmp5317, 2                  ; <i32> [#uses=1]
  %tmp5319 = load i32* %temp_index_7              ; <i32> [#uses=1]
  %tmp5320 = load i32 addrspace(1)** %LookUp3.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5321 = getelementptr inbounds i32 addrspace(1)* %tmp5320, i32 %tmp5319 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5322 = load i32 addrspace(1)* %arrayidx5321 ; <i32> [#uses=1]
  %add5323 = add nsw i32 %shl5318, %tmp5322       ; <i32> [#uses=1]
  store i32 %add5323, i32* %offset3_7
  %tmp5324 = load i32* %offset2_7                 ; <i32> [#uses=1]
  %mul5325 = mul i32 %tmp5324, 16                 ; <i32> [#uses=1]
  %tmp5326 = load i32* %offset3_7                 ; <i32> [#uses=1]
  %add5327 = add nsw i32 %mul5325, %tmp5326       ; <i32> [#uses=1]
  store i32 %add5327, i32* %offset2_7
  %tmp5328 = load i32* %offset1_7                 ; <i32> [#uses=1]
  %mul5329 = mul i32 %tmp5328, 16                 ; <i32> [#uses=1]
  %tmp5330 = load i32* %offset2_7                 ; <i32> [#uses=1]
  %add5331 = add nsw i32 %mul5329, %tmp5330       ; <i32> [#uses=1]
  store i32 %add5331, i32* %offset1_7
  %tmp5332 = load i32 addrspace(1)** %KeyValue.addr ; <i32 addrspace(1)*> [#uses=1]
  %tmp5333 = load i32* %offset1_7                 ; <i32> [#uses=1]
  %mul5334 = mul i32 2, %tmp5333                  ; <i32> [#uses=1]
  %add.ptr5335 = getelementptr inbounds i32 addrspace(1)* %tmp5332, i32 %mul5334 ; <i32 addrspace(1)*> [#uses=1]
  call void @_Z8prefetchPKo1jj(i32 addrspace(1)* %add.ptr5335, i32 16)
  %tmp5336 = load i32* %offset1_0                 ; <i32> [#uses=1]
  %mul5337 = mul i32 2, %tmp5336                  ; <i32> [#uses=1]
  %tmp5338 = load i32 addrspace(1)** %KeyValue.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5339 = getelementptr inbounds i32 addrspace(1)* %tmp5338, i32 %mul5337 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5340 = load i32 addrspace(1)* %arrayidx5339 ; <i32> [#uses=1]
  %tmp5341 = load i32* %query_element_0           ; <i32> [#uses=1]
  %cmp5342 = icmp eq i32 %tmp5340, %tmp5341       ; <i1> [#uses=1]
  br i1 %cmp5342, label %if.then5343, label %if.end5345

if.then5343:                                      ; preds = %for.body
  %tmp5344 = load i32* %local_output_size         ; <i32> [#uses=1]
  %inc = add nsw i32 %tmp5344, 1                  ; <i32> [#uses=1]
  store i32 %inc, i32* %local_output_size
  br label %if.end5345

if.end5345:                                       ; preds = %if.then5343, %for.body
  %tmp5346 = load i32* %offset1_1                 ; <i32> [#uses=1]
  %mul5347 = mul i32 2, %tmp5346                  ; <i32> [#uses=1]
  %tmp5348 = load i32 addrspace(1)** %KeyValue.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5349 = getelementptr inbounds i32 addrspace(1)* %tmp5348, i32 %mul5347 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5350 = load i32 addrspace(1)* %arrayidx5349 ; <i32> [#uses=1]
  %tmp5351 = load i32* %query_element_1           ; <i32> [#uses=1]
  %cmp5352 = icmp eq i32 %tmp5350, %tmp5351       ; <i1> [#uses=1]
  br i1 %cmp5352, label %if.then5353, label %if.end5356

if.then5353:                                      ; preds = %if.end5345
  %tmp5354 = load i32* %local_output_size         ; <i32> [#uses=1]
  %inc5355 = add nsw i32 %tmp5354, 1              ; <i32> [#uses=1]
  store i32 %inc5355, i32* %local_output_size
  br label %if.end5356

if.end5356:                                       ; preds = %if.then5353, %if.end5345
  %tmp5357 = load i32* %offset1_2                 ; <i32> [#uses=1]
  %mul5358 = mul i32 2, %tmp5357                  ; <i32> [#uses=1]
  %tmp5359 = load i32 addrspace(1)** %KeyValue.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5360 = getelementptr inbounds i32 addrspace(1)* %tmp5359, i32 %mul5358 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5361 = load i32 addrspace(1)* %arrayidx5360 ; <i32> [#uses=1]
  %tmp5362 = load i32* %query_element_2           ; <i32> [#uses=1]
  %cmp5363 = icmp eq i32 %tmp5361, %tmp5362       ; <i1> [#uses=1]
  br i1 %cmp5363, label %if.then5364, label %if.end5367

if.then5364:                                      ; preds = %if.end5356
  %tmp5365 = load i32* %local_output_size         ; <i32> [#uses=1]
  %inc5366 = add nsw i32 %tmp5365, 1              ; <i32> [#uses=1]
  store i32 %inc5366, i32* %local_output_size
  br label %if.end5367

if.end5367:                                       ; preds = %if.then5364, %if.end5356
  %tmp5368 = load i32* %offset1_3                 ; <i32> [#uses=1]
  %mul5369 = mul i32 2, %tmp5368                  ; <i32> [#uses=1]
  %tmp5370 = load i32 addrspace(1)** %KeyValue.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5371 = getelementptr inbounds i32 addrspace(1)* %tmp5370, i32 %mul5369 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5372 = load i32 addrspace(1)* %arrayidx5371 ; <i32> [#uses=1]
  %tmp5373 = load i32* %query_element_3           ; <i32> [#uses=1]
  %cmp5374 = icmp eq i32 %tmp5372, %tmp5373       ; <i1> [#uses=1]
  br i1 %cmp5374, label %if.then5375, label %if.end5378

if.then5375:                                      ; preds = %if.end5367
  %tmp5376 = load i32* %local_output_size         ; <i32> [#uses=1]
  %inc5377 = add nsw i32 %tmp5376, 1              ; <i32> [#uses=1]
  store i32 %inc5377, i32* %local_output_size
  br label %if.end5378

if.end5378:                                       ; preds = %if.then5375, %if.end5367
  %tmp5379 = load i32* %offset1_4                 ; <i32> [#uses=1]
  %mul5380 = mul i32 2, %tmp5379                  ; <i32> [#uses=1]
  %tmp5381 = load i32 addrspace(1)** %KeyValue.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5382 = getelementptr inbounds i32 addrspace(1)* %tmp5381, i32 %mul5380 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5383 = load i32 addrspace(1)* %arrayidx5382 ; <i32> [#uses=1]
  %tmp5384 = load i32* %query_element_4           ; <i32> [#uses=1]
  %cmp5385 = icmp eq i32 %tmp5383, %tmp5384       ; <i1> [#uses=1]
  br i1 %cmp5385, label %if.then5386, label %if.end5389

if.then5386:                                      ; preds = %if.end5378
  %tmp5387 = load i32* %local_output_size         ; <i32> [#uses=1]
  %inc5388 = add nsw i32 %tmp5387, 1              ; <i32> [#uses=1]
  store i32 %inc5388, i32* %local_output_size
  br label %if.end5389

if.end5389:                                       ; preds = %if.then5386, %if.end5378
  %tmp5390 = load i32* %offset1_5                 ; <i32> [#uses=1]
  %mul5391 = mul i32 2, %tmp5390                  ; <i32> [#uses=1]
  %tmp5392 = load i32 addrspace(1)** %KeyValue.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5393 = getelementptr inbounds i32 addrspace(1)* %tmp5392, i32 %mul5391 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5394 = load i32 addrspace(1)* %arrayidx5393 ; <i32> [#uses=1]
  %tmp5395 = load i32* %query_element_5           ; <i32> [#uses=1]
  %cmp5396 = icmp eq i32 %tmp5394, %tmp5395       ; <i1> [#uses=1]
  br i1 %cmp5396, label %if.then5397, label %if.end5400

if.then5397:                                      ; preds = %if.end5389
  %tmp5398 = load i32* %local_output_size         ; <i32> [#uses=1]
  %inc5399 = add nsw i32 %tmp5398, 1              ; <i32> [#uses=1]
  store i32 %inc5399, i32* %local_output_size
  br label %if.end5400

if.end5400:                                       ; preds = %if.then5397, %if.end5389
  %tmp5401 = load i32* %offset1_6                 ; <i32> [#uses=1]
  %mul5402 = mul i32 2, %tmp5401                  ; <i32> [#uses=1]
  %tmp5403 = load i32 addrspace(1)** %KeyValue.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5404 = getelementptr inbounds i32 addrspace(1)* %tmp5403, i32 %mul5402 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5405 = load i32 addrspace(1)* %arrayidx5404 ; <i32> [#uses=1]
  %tmp5406 = load i32* %query_element_6           ; <i32> [#uses=1]
  %cmp5407 = icmp eq i32 %tmp5405, %tmp5406       ; <i1> [#uses=1]
  br i1 %cmp5407, label %if.then5408, label %if.end5411

if.then5408:                                      ; preds = %if.end5400
  %tmp5409 = load i32* %local_output_size         ; <i32> [#uses=1]
  %inc5410 = add nsw i32 %tmp5409, 1              ; <i32> [#uses=1]
  store i32 %inc5410, i32* %local_output_size
  br label %if.end5411

if.end5411:                                       ; preds = %if.then5408, %if.end5400
  %tmp5412 = load i32* %offset1_7                 ; <i32> [#uses=1]
  %mul5413 = mul i32 2, %tmp5412                  ; <i32> [#uses=1]
  %tmp5414 = load i32 addrspace(1)** %KeyValue.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5415 = getelementptr inbounds i32 addrspace(1)* %tmp5414, i32 %mul5413 ; <i32 addrspace(1)*> [#uses=1]
  %tmp5416 = load i32 addrspace(1)* %arrayidx5415 ; <i32> [#uses=1]
  %tmp5417 = load i32* %query_element_7           ; <i32> [#uses=1]
  %cmp5418 = icmp eq i32 %tmp5416, %tmp5417       ; <i1> [#uses=1]
  br i1 %cmp5418, label %if.then5419, label %if.end5422

if.then5419:                                      ; preds = %if.end5411
  %tmp5420 = load i32* %local_output_size         ; <i32> [#uses=1]
  %inc5421 = add nsw i32 %tmp5420, 1              ; <i32> [#uses=1]
  store i32 %inc5421, i32* %local_output_size
  br label %if.end5422

if.end5422:                                       ; preds = %if.then5419, %if.end5411
  br label %for.inc

for.inc:                                          ; preds = %if.end5422
  %tmp5423 = load i32* %j                         ; <i32> [#uses=1]
  %add5424 = add nsw i32 %tmp5423, 8              ; <i32> [#uses=1]
  store i32 %add5424, i32* %j
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %tmp5425 = load i32* %local_output_size         ; <i32> [#uses=1]
  %tmp5426 = load i32* %id                        ; <i32> [#uses=1]
  %tmp5427 = load i32 addrspace(1)** %output_size.addr ; <i32 addrspace(1)*> [#uses=1]
  %arrayidx5428 = getelementptr inbounds i32 addrspace(1)* %tmp5427, i32 %tmp5426 ; <i32 addrspace(1)*> [#uses=1]
  store i32 %tmp5425, i32 addrspace(1)* %arrayidx5428
  ret void
}

declare i32 @get_global_id(i32)

declare i32 @get_global_size(i32)

declare void @_Z8prefetchPKo1jj(i32 addrspace(1)*, i32)
