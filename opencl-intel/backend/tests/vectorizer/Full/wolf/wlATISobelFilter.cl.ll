; RUN: llvm-as %s -o %t.bc
; RUN: %oclopt  -runtimelib %p/../runtime.bc -O3 -inline-threshold=4096 -inline -lowerswitch -scalarize -mergereturn -loop-simplify -phicanon -predicate -mem2reg -dce -packetize -packet-size=4 -resolve -verify %t.bc -S -o %t1.ll
; RUN: FileCheck %s --input-file=%t1.ll
; ModuleID = '.\cl_files\wlATISobelFilter.cl'
target datalayout = "e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-f80:128:128-v64:64:64-v128:128:128-a0:0:64-f80:32:32-n8:16:32"
target triple = "i686-pc-win32"

%opencl_metadata_type = type <{ i8*, i8*, [4 x i32], [4 x i32], i8*, i8* }>

@opencl_sobel_filter_locals = appending global [1 x i8*] zeroinitializer, section "llvm.metadata" ; <[1 x i8*]*> [#uses=1]
@opencl_sobel_filter_parameters = appending global [85 x i8] c"uchar __attribute__((address_space(2))) *, uchar __attribute__((address_space(1))) *\00", section "llvm.metadata" ; <[85 x i8]*> [#uses=1]
@opencl_metadata = appending global [1 x %opencl_metadata_type] [%opencl_metadata_type <{ i8* bitcast (void (i8 addrspace(2)*, i8 addrspace(1)*)* @sobel_filter to i8*), i8* null, [4 x i32] zeroinitializer, [4 x i32] zeroinitializer, i8* bitcast ([1 x i8*]* @opencl_sobel_filter_locals to i8*), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @opencl_sobel_filter_parameters, i32 0, i32 0) }>], section "llvm.metadata" ; <[1 x %opencl_metadata_type]*> [#uses=0]

; CHECK: ret
define void @sobel_filter(i8 addrspace(2)* %inputImage, i8 addrspace(1)* %outputImage) nounwind {
entry:
  %inputImage.addr = alloca i8 addrspace(2)*, align 4 ; <i8 addrspace(2)**> [#uses=16]
  %outputImage.addr = alloca i8 addrspace(1)*, align 4 ; <i8 addrspace(1)**> [#uses=2]
  %x = alloca i32, align 4                        ; <i32*> [#uses=19]
  %y = alloca i32, align 4                        ; <i32*> [#uses=19]
  %width = alloca i32, align 4                    ; <i32*> [#uses=18]
  %height = alloca i32, align 4                   ; <i32*> [#uses=2]
  %Gx = alloca i32, align 4                       ; <i32*> [#uses=2]
  %Gy = alloca i32, align 4                       ; <i32*> [#uses=2]
  store i8 addrspace(2)* %inputImage, i8 addrspace(2)** %inputImage.addr
  store i8 addrspace(1)* %outputImage, i8 addrspace(1)** %outputImage.addr
  %call = call i32 @_Z13get_global_idj(i32 0)          ; <i32> [#uses=1]
  store i32 %call, i32* %x
  %call1 = call i32 @_Z13get_global_idj(i32 1)         ; <i32> [#uses=1]
  store i32 %call1, i32* %y
  %call2 = call i32 @get_global_size(i32 0)       ; <i32> [#uses=1]
  store i32 %call2, i32* %width
  %call3 = call i32 @get_global_size(i32 1)       ; <i32> [#uses=1]
  store i32 %call3, i32* %height
  %tmp = load i32, i32* %x                             ; <i32> [#uses=1]
  %cmp = icmp uge i32 %tmp, 4                     ; <i1> [#uses=1]
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %tmp4 = load i32, i32* %x                            ; <i32> [#uses=1]
  %tmp5 = load i32, i32* %width                        ; <i32> [#uses=1]
  %sub = sub i32 %tmp5, 4                         ; <i32> [#uses=1]
  %cmp6 = icmp ult i32 %tmp4, %sub                ; <i1> [#uses=1]
  br i1 %cmp6, label %land.lhs.true7, label %if.end

land.lhs.true7:                                   ; preds = %land.lhs.true
  %tmp8 = load i32, i32* %y                            ; <i32> [#uses=1]
  %cmp9 = icmp uge i32 %tmp8, 1                   ; <i1> [#uses=1]
  br i1 %cmp9, label %land.lhs.true10, label %if.end

land.lhs.true10:                                  ; preds = %land.lhs.true7
  %tmp11 = load i32, i32* %y                           ; <i32> [#uses=1]
  %tmp12 = load i32, i32* %height                      ; <i32> [#uses=1]
  %sub13 = sub i32 %tmp12, 1                      ; <i32> [#uses=1]
  %cmp14 = icmp ult i32 %tmp11, %sub13            ; <i1> [#uses=1]
  br i1 %cmp14, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true10
  %tmp15 = load i32, i32* %x                           ; <i32> [#uses=1]
  %sub16 = sub i32 %tmp15, 4                      ; <i32> [#uses=1]
  %tmp17 = load i32, i32* %width                       ; <i32> [#uses=1]
  %tmp18 = load i32, i32* %y                           ; <i32> [#uses=1]
  %sub19 = sub i32 %tmp18, 1                      ; <i32> [#uses=1]
  %mul = mul i32 %tmp17, %sub19                   ; <i32> [#uses=1]
  %add = add i32 %sub16, %mul                     ; <i32> [#uses=1]
  %tmp20 = load i8 addrspace(2)*, i8 addrspace(2)** %inputImage.addr ; <i8 addrspace(2)*> [#uses=1]
  %arrayidx = getelementptr inbounds i8, i8 addrspace(2)* %tmp20, i32 %add ; <i8 addrspace(2)*> [#uses=1]
  %tmp21 = load i8, i8 addrspace(2)* %arrayidx        ; <i8> [#uses=1]
  %conv = zext i8 %tmp21 to i32                   ; <i32> [#uses=1]
  %tmp22 = load i32, i32* %x                           ; <i32> [#uses=1]
  %tmp23 = load i32, i32* %width                       ; <i32> [#uses=1]
  %tmp24 = load i32, i32* %y                           ; <i32> [#uses=1]
  %sub25 = sub i32 %tmp24, 1                      ; <i32> [#uses=1]
  %mul26 = mul i32 %tmp23, %sub25                 ; <i32> [#uses=1]
  %add27 = add i32 %tmp22, %mul26                 ; <i32> [#uses=1]
  %tmp28 = load i8 addrspace(2)*, i8 addrspace(2)** %inputImage.addr ; <i8 addrspace(2)*> [#uses=1]
  %arrayidx29 = getelementptr inbounds i8, i8 addrspace(2)* %tmp28, i32 %add27 ; <i8 addrspace(2)*> [#uses=1]
  %tmp30 = load i8, i8 addrspace(2)* %arrayidx29      ; <i8> [#uses=1]
  %conv31 = zext i8 %tmp30 to i32                 ; <i32> [#uses=1]
  %mul32 = mul i32 2, %conv31                     ; <i32> [#uses=1]
  %add33 = add nsw i32 %conv, %mul32              ; <i32> [#uses=1]
  %tmp34 = load i32, i32* %x                           ; <i32> [#uses=1]
  %add35 = add i32 %tmp34, 4                      ; <i32> [#uses=1]
  %tmp36 = load i32, i32* %width                       ; <i32> [#uses=1]
  %tmp37 = load i32, i32* %y                           ; <i32> [#uses=1]
  %sub38 = sub i32 %tmp37, 1                      ; <i32> [#uses=1]
  %mul39 = mul i32 %tmp36, %sub38                 ; <i32> [#uses=1]
  %add40 = add i32 %add35, %mul39                 ; <i32> [#uses=1]
  %tmp41 = load i8 addrspace(2)*, i8 addrspace(2)** %inputImage.addr ; <i8 addrspace(2)*> [#uses=1]
  %arrayidx42 = getelementptr inbounds i8, i8 addrspace(2)* %tmp41, i32 %add40 ; <i8 addrspace(2)*> [#uses=1]
  %tmp43 = load i8, i8 addrspace(2)* %arrayidx42      ; <i8> [#uses=1]
  %conv44 = zext i8 %tmp43 to i32                 ; <i32> [#uses=1]
  %add45 = add nsw i32 %add33, %conv44            ; <i32> [#uses=1]
  %tmp46 = load i32, i32* %x                           ; <i32> [#uses=1]
  %sub47 = sub i32 %tmp46, 4                      ; <i32> [#uses=1]
  %tmp48 = load i32, i32* %width                       ; <i32> [#uses=1]
  %tmp49 = load i32, i32* %y                           ; <i32> [#uses=1]
  %add50 = add i32 %tmp49, 1                      ; <i32> [#uses=1]
  %mul51 = mul i32 %tmp48, %add50                 ; <i32> [#uses=1]
  %add52 = add i32 %sub47, %mul51                 ; <i32> [#uses=1]
  %tmp53 = load i8 addrspace(2)*, i8 addrspace(2)** %inputImage.addr ; <i8 addrspace(2)*> [#uses=1]
  %arrayidx54 = getelementptr inbounds i8, i8 addrspace(2)* %tmp53, i32 %add52 ; <i8 addrspace(2)*> [#uses=1]
  %tmp55 = load i8, i8 addrspace(2)* %arrayidx54      ; <i8> [#uses=1]
  %conv56 = zext i8 %tmp55 to i32                 ; <i32> [#uses=1]
  %sub57 = sub i32 %add45, %conv56                ; <i32> [#uses=1]
  %tmp58 = load i32, i32* %x                           ; <i32> [#uses=1]
  %tmp59 = load i32, i32* %width                       ; <i32> [#uses=1]
  %tmp60 = load i32, i32* %y                           ; <i32> [#uses=1]
  %add61 = add i32 %tmp60, 1                      ; <i32> [#uses=1]
  %mul62 = mul i32 %tmp59, %add61                 ; <i32> [#uses=1]
  %add63 = add i32 %tmp58, %mul62                 ; <i32> [#uses=1]
  %tmp64 = load i8 addrspace(2)*, i8 addrspace(2)** %inputImage.addr ; <i8 addrspace(2)*> [#uses=1]
  %arrayidx65 = getelementptr inbounds i8, i8 addrspace(2)* %tmp64, i32 %add63 ; <i8 addrspace(2)*> [#uses=1]
  %tmp66 = load i8, i8 addrspace(2)* %arrayidx65      ; <i8> [#uses=1]
  %conv67 = zext i8 %tmp66 to i32                 ; <i32> [#uses=1]
  %mul68 = mul i32 2, %conv67                     ; <i32> [#uses=1]
  %sub69 = sub i32 %sub57, %mul68                 ; <i32> [#uses=1]
  %tmp70 = load i32, i32* %x                           ; <i32> [#uses=1]
  %add71 = add i32 %tmp70, 4                      ; <i32> [#uses=1]
  %tmp72 = load i32, i32* %width                       ; <i32> [#uses=1]
  %tmp73 = load i32, i32* %y                           ; <i32> [#uses=1]
  %add74 = add i32 %tmp73, 1                      ; <i32> [#uses=1]
  %mul75 = mul i32 %tmp72, %add74                 ; <i32> [#uses=1]
  %add76 = add i32 %add71, %mul75                 ; <i32> [#uses=1]
  %tmp77 = load i8 addrspace(2)*, i8 addrspace(2)** %inputImage.addr ; <i8 addrspace(2)*> [#uses=1]
  %arrayidx78 = getelementptr inbounds i8, i8 addrspace(2)* %tmp77, i32 %add76 ; <i8 addrspace(2)*> [#uses=1]
  %tmp79 = load i8, i8 addrspace(2)* %arrayidx78      ; <i8> [#uses=1]
  %conv80 = zext i8 %tmp79 to i32                 ; <i32> [#uses=1]
  %sub81 = sub i32 %sub69, %conv80                ; <i32> [#uses=1]
  store i32 %sub81, i32* %Gx
  %tmp82 = load i32, i32* %x                           ; <i32> [#uses=1]
  %sub83 = sub i32 %tmp82, 4                      ; <i32> [#uses=1]
  %tmp84 = load i32, i32* %width                       ; <i32> [#uses=1]
  %tmp85 = load i32, i32* %y                           ; <i32> [#uses=1]
  %sub86 = sub i32 %tmp85, 1                      ; <i32> [#uses=1]
  %mul87 = mul i32 %tmp84, %sub86                 ; <i32> [#uses=1]
  %add88 = add i32 %sub83, %mul87                 ; <i32> [#uses=1]
  %tmp89 = load i8 addrspace(2)*, i8 addrspace(2)** %inputImage.addr ; <i8 addrspace(2)*> [#uses=1]
  %arrayidx90 = getelementptr inbounds i8, i8 addrspace(2)* %tmp89, i32 %add88 ; <i8 addrspace(2)*> [#uses=1]
  %tmp91 = load i8, i8 addrspace(2)* %arrayidx90      ; <i8> [#uses=1]
  %conv92 = zext i8 %tmp91 to i32                 ; <i32> [#uses=1]
  %tmp93 = load i32, i32* %x                           ; <i32> [#uses=1]
  %tmp94 = load i32, i32* %width                       ; <i32> [#uses=1]
  %tmp95 = load i32, i32* %y                           ; <i32> [#uses=1]
  %sub96 = sub i32 %tmp95, 1                      ; <i32> [#uses=1]
  %mul97 = mul i32 %tmp94, %sub96                 ; <i32> [#uses=1]
  %add98 = add i32 %tmp93, %mul97                 ; <i32> [#uses=1]
  %tmp99 = load i8 addrspace(2)*, i8 addrspace(2)** %inputImage.addr ; <i8 addrspace(2)*> [#uses=1]
  %arrayidx100 = getelementptr inbounds i8, i8 addrspace(2)* %tmp99, i32 %add98 ; <i8 addrspace(2)*> [#uses=1]
  %tmp101 = load i8, i8 addrspace(2)* %arrayidx100    ; <i8> [#uses=1]
  %conv102 = zext i8 %tmp101 to i32               ; <i32> [#uses=1]
  %mul103 = mul i32 0, %conv102                   ; <i32> [#uses=1]
  %add104 = add nsw i32 %conv92, %mul103          ; <i32> [#uses=1]
  %tmp105 = load i32, i32* %x                          ; <i32> [#uses=1]
  %add106 = add i32 %tmp105, 4                    ; <i32> [#uses=1]
  %tmp107 = load i32, i32* %width                      ; <i32> [#uses=1]
  %tmp108 = load i32, i32* %y                          ; <i32> [#uses=1]
  %sub109 = sub i32 %tmp108, 1                    ; <i32> [#uses=1]
  %mul110 = mul i32 %tmp107, %sub109              ; <i32> [#uses=1]
  %add111 = add i32 %add106, %mul110              ; <i32> [#uses=1]
  %tmp112 = load i8 addrspace(2)*, i8 addrspace(2)** %inputImage.addr ; <i8 addrspace(2)*> [#uses=1]
  %arrayidx113 = getelementptr inbounds i8, i8 addrspace(2)* %tmp112, i32 %add111 ; <i8 addrspace(2)*> [#uses=1]
  %tmp114 = load i8, i8 addrspace(2)* %arrayidx113    ; <i8> [#uses=1]
  %conv115 = zext i8 %tmp114 to i32               ; <i32> [#uses=1]
  %sub116 = sub i32 %add104, %conv115             ; <i32> [#uses=1]
  %tmp117 = load i32, i32* %x                          ; <i32> [#uses=1]
  %sub118 = sub i32 %tmp117, 4                    ; <i32> [#uses=1]
  %tmp119 = load i32, i32* %width                      ; <i32> [#uses=1]
  %tmp120 = load i32, i32* %y                          ; <i32> [#uses=1]
  %sub121 = sub i32 %tmp120, 0                    ; <i32> [#uses=1]
  %mul122 = mul i32 %tmp119, %sub121              ; <i32> [#uses=1]
  %add123 = add i32 %sub118, %mul122              ; <i32> [#uses=1]
  %tmp124 = load i8 addrspace(2)*, i8 addrspace(2)** %inputImage.addr ; <i8 addrspace(2)*> [#uses=1]
  %arrayidx125 = getelementptr inbounds i8, i8 addrspace(2)* %tmp124, i32 %add123 ; <i8 addrspace(2)*> [#uses=1]
  %tmp126 = load i8, i8 addrspace(2)* %arrayidx125    ; <i8> [#uses=1]
  %conv127 = zext i8 %tmp126 to i32               ; <i32> [#uses=1]
  %mul128 = mul i32 2, %conv127                   ; <i32> [#uses=1]
  %add129 = add nsw i32 %sub116, %mul128          ; <i32> [#uses=1]
  %tmp130 = load i32, i32* %x                          ; <i32> [#uses=1]
  %tmp131 = load i32, i32* %width                      ; <i32> [#uses=1]
  %tmp132 = load i32, i32* %y                          ; <i32> [#uses=1]
  %sub133 = sub i32 %tmp132, 0                    ; <i32> [#uses=1]
  %mul134 = mul i32 %tmp131, %sub133              ; <i32> [#uses=1]
  %add135 = add i32 %tmp130, %mul134              ; <i32> [#uses=1]
  %tmp136 = load i8 addrspace(2)*, i8 addrspace(2)** %inputImage.addr ; <i8 addrspace(2)*> [#uses=1]
  %arrayidx137 = getelementptr inbounds i8, i8 addrspace(2)* %tmp136, i32 %add135 ; <i8 addrspace(2)*> [#uses=1]
  %tmp138 = load i8, i8 addrspace(2)* %arrayidx137    ; <i8> [#uses=1]
  %conv139 = zext i8 %tmp138 to i32               ; <i32> [#uses=1]
  %mul140 = mul i32 0, %conv139                   ; <i32> [#uses=1]
  %add141 = add nsw i32 %add129, %mul140          ; <i32> [#uses=1]
  %tmp142 = load i32, i32* %x                          ; <i32> [#uses=1]
  %add143 = add i32 %tmp142, 4                    ; <i32> [#uses=1]
  %tmp144 = load i32, i32* %width                      ; <i32> [#uses=1]
  %tmp145 = load i32, i32* %y                          ; <i32> [#uses=1]
  %sub146 = sub i32 %tmp145, 0                    ; <i32> [#uses=1]
  %mul147 = mul i32 %tmp144, %sub146              ; <i32> [#uses=1]
  %add148 = add i32 %add143, %mul147              ; <i32> [#uses=1]
  %tmp149 = load i8 addrspace(2)*, i8 addrspace(2)** %inputImage.addr ; <i8 addrspace(2)*> [#uses=1]
  %arrayidx150 = getelementptr inbounds i8, i8 addrspace(2)* %tmp149, i32 %add148 ; <i8 addrspace(2)*> [#uses=1]
  %tmp151 = load i8, i8 addrspace(2)* %arrayidx150    ; <i8> [#uses=1]
  %conv152 = zext i8 %tmp151 to i32               ; <i32> [#uses=1]
  %mul153 = mul i32 2, %conv152                   ; <i32> [#uses=1]
  %sub154 = sub i32 %add141, %mul153              ; <i32> [#uses=1]
  %tmp155 = load i32, i32* %x                          ; <i32> [#uses=1]
  %sub156 = sub i32 %tmp155, 4                    ; <i32> [#uses=1]
  %tmp157 = load i32, i32* %width                      ; <i32> [#uses=1]
  %tmp158 = load i32, i32* %y                          ; <i32> [#uses=1]
  %add159 = add i32 %tmp158, 1                    ; <i32> [#uses=1]
  %mul160 = mul i32 %tmp157, %add159              ; <i32> [#uses=1]
  %add161 = add i32 %sub156, %mul160              ; <i32> [#uses=1]
  %tmp162 = load i8 addrspace(2)*, i8 addrspace(2)** %inputImage.addr ; <i8 addrspace(2)*> [#uses=1]
  %arrayidx163 = getelementptr inbounds i8, i8 addrspace(2)* %tmp162, i32 %add161 ; <i8 addrspace(2)*> [#uses=1]
  %tmp164 = load i8, i8 addrspace(2)* %arrayidx163    ; <i8> [#uses=1]
  %conv165 = zext i8 %tmp164 to i32               ; <i32> [#uses=1]
  %add166 = add nsw i32 %sub154, %conv165         ; <i32> [#uses=1]
  %tmp167 = load i32, i32* %x                          ; <i32> [#uses=1]
  %tmp168 = load i32, i32* %width                      ; <i32> [#uses=1]
  %tmp169 = load i32, i32* %y                          ; <i32> [#uses=1]
  %add170 = add i32 %tmp169, 1                    ; <i32> [#uses=1]
  %mul171 = mul i32 %tmp168, %add170              ; <i32> [#uses=1]
  %add172 = add i32 %tmp167, %mul171              ; <i32> [#uses=1]
  %tmp173 = load i8 addrspace(2)*, i8 addrspace(2)** %inputImage.addr ; <i8 addrspace(2)*> [#uses=1]
  %arrayidx174 = getelementptr inbounds i8, i8 addrspace(2)* %tmp173, i32 %add172 ; <i8 addrspace(2)*> [#uses=1]
  %tmp175 = load i8, i8 addrspace(2)* %arrayidx174    ; <i8> [#uses=1]
  %conv176 = zext i8 %tmp175 to i32               ; <i32> [#uses=1]
  %mul177 = mul i32 0, %conv176                   ; <i32> [#uses=1]
  %add178 = add nsw i32 %add166, %mul177          ; <i32> [#uses=1]
  %tmp179 = load i32, i32* %x                          ; <i32> [#uses=1]
  %add180 = add i32 %tmp179, 4                    ; <i32> [#uses=1]
  %tmp181 = load i32, i32* %width                      ; <i32> [#uses=1]
  %tmp182 = load i32, i32* %y                          ; <i32> [#uses=1]
  %add183 = add i32 %tmp182, 1                    ; <i32> [#uses=1]
  %mul184 = mul i32 %tmp181, %add183              ; <i32> [#uses=1]
  %add185 = add i32 %add180, %mul184              ; <i32> [#uses=1]
  %tmp186 = load i8 addrspace(2)*, i8 addrspace(2)** %inputImage.addr ; <i8 addrspace(2)*> [#uses=1]
  %arrayidx187 = getelementptr inbounds i8, i8 addrspace(2)* %tmp186, i32 %add185 ; <i8 addrspace(2)*> [#uses=1]
  %tmp188 = load i8, i8 addrspace(2)* %arrayidx187    ; <i8> [#uses=1]
  %conv189 = zext i8 %tmp188 to i32               ; <i32> [#uses=1]
  %sub190 = sub i32 %add178, %conv189             ; <i32> [#uses=1]
  store i32 %sub190, i32* %Gy
  %tmp191 = load i32, i32* %Gx                         ; <i32> [#uses=1]
  %conv192 = sitofp i32 %tmp191 to float          ; <float> [#uses=1]
  %tmp193 = load i32, i32* %Gy                         ; <i32> [#uses=1]
  %conv194 = sitofp i32 %tmp193 to float          ; <float> [#uses=1]
  %call195 = call float @_Z5hypotff(float %conv192, float %conv194) ; <float> [#uses=1]
  %div = fdiv float %call195, 2.000000e+000       ; <float> [#uses=1]
  %conv196 = fptoui float %div to i8              ; <i8> [#uses=1]
  %tmp197 = load i32, i32* %x                          ; <i32> [#uses=1]
  %tmp198 = load i32, i32* %y                          ; <i32> [#uses=1]
  %tmp199 = load i32, i32* %width                      ; <i32> [#uses=1]
  %mul200 = mul i32 %tmp198, %tmp199              ; <i32> [#uses=1]
  %add201 = add i32 %tmp197, %mul200              ; <i32> [#uses=1]
  %tmp202 = load i8 addrspace(1)*, i8 addrspace(1)** %outputImage.addr ; <i8 addrspace(1)*> [#uses=1]
  %arrayidx203 = getelementptr inbounds i8, i8 addrspace(1)* %tmp202, i32 %add201 ; <i8 addrspace(1)*> [#uses=1]
  store i8 %conv196, i8 addrspace(1)* %arrayidx203
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true10, %land.lhs.true7, %land.lhs.true, %entry
  ret void
}

declare i32 @_Z13get_global_idj(i32)

declare i32 @get_global_size(i32)

declare float @_Z5hypotff(float, float)
