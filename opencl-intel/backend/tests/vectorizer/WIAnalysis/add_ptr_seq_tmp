; RUN: llvm-as %s -o %t.bc
; RUN: opt  -runtimelib %p/../Full/runtime.bc -print-wia-check -inline-threshold=4096 -inline -lowerswitch -scalarize -mergereturn -phicanon -predicate -mem2reg -dce -packetize -packet-size=4 -resolve -verify %t.bc -S -o %t1.ll >1.txt

; ModuleID = 'add_ptr_seq.cl'
target datalayout = "e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-f80:128:128-v64:64:64-v128:128:128-a0:0:64-f80:32:32-n8:16:32"
target triple = "i686-pc-win32"

define void @store_float(i32 addrspace(1)* %in, i32 addrspace(1)* nocapture %out, i32 addrspace(1)* nocapture %p) nounwind {
  %1 = tail call i32 @get_global_id(i32 0) nounwind
  %.sum = add i32 %1, 1
  %2 = getelementptr inbounds i32, i32 addrspace(1)* %in, i32 %.sum
  %3 = icmp ugt i32 addrspace(1)* %2, inttoptr (i32 10 to i32 addrspace(1)*)
  %.sum2.pn.v = select i1 %3, i32 633, i32 111
  %.sum2.pn = add i32 %.sum2.pn.v, %.sum
  %.0 = getelementptr inbounds i32, i32 addrspace(1)* %in, i32 %.sum2.pn
  %4 = load i32, i32 addrspace(1)* %.0, align 4
  %5 = getelementptr inbounds i32, i32 addrspace(1)* %out, i32 %1
  store i32 %4, i32 addrspace(1)* %5, align 4
  ret void
}

declare i32 @get_global_id(i32)

!opencl.kernels = !{!0}

!0 = !{void (i32 addrspace(1)*, i32 addrspace(1)*, i32 addrspace(1)*)* @store_float, !1, !1, !"", !"int __attribute__((address_space(1))) *, int __attribute__((address_space(1))) *, int __attribute__((address_space(1))) *", !"opencl_store_float_locals_anchor"}
!1 = !{i32 0, i32 0, i32 0}
