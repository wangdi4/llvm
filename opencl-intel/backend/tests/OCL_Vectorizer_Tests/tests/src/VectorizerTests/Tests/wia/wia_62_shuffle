/*
 * Part of the control flow tests that check vectorization of control flow statements.
 *

 * @param in
 * 		The input array.
 * @param out
 * 		The output array.
 *
 */




__kernel void
wia_62_shuffle
( __global  float *in,
		__global float8 *out)
{
	
	int gid = get_global_id(0);

	int i;
	
	float4 x=gid;                           //stride

	float4 y=(float4) (1,2,3,4);            //uniform
	

	float8 z=(float8) (x.s0,y.s1,x.s0,y.s1,y.s0,y.s1,x.s2,y.s3);
	float8 rez1=0,rez2=0;
	
	
	//printf("\n gid=%d z= %d %d %d %d %d %d %d %d \n",gid,z.s0,z.s1,z.s2,z.s3,z.s4,z.s5,z.s6,z.s7);
	//printf("\n gid=%d rez1= %d %d %d %d %d %d %d %d \n",gid,rez1.s0,rez1.s1,rez1.s2,rez1.s3,rez1.s4,rez1.s5,rez1.s6,rez1.s7);
	//printf("\n gid=%d rez2= %d %d %d %d %d %d %d %d \n",gid,rez2.s0,rez2.s1,rez2.s2,rez2.s3,rez2.s4,rez2.s5,rez2.s6,rez2.s7);
	
	for (i=1;i<100;i++) {
		if (i>50) 
		{
			rez1=rez1 +(float8) (x.s0,y.s1,x.s0,y.s1,rez1.s0,y.s1,x.s2,rez1.s3) ;// random
		}
		else
		{
		    rez2-=(float8) (y.s0,y.s1,y.s0,y.s1,y.s0,y.s1,y.s2,y.s3); // random
		}

	}
	
out[gid] =rez1+rez2;
}
