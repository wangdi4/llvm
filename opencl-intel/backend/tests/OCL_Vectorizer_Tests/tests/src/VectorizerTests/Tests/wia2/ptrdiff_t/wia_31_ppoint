// Tests inttoptr and bitselect instructions during wia execution
// The 'inttoptr' instruction converts an integer value to a pointer type, ty2.





__kernel void wia_31_ppoint(__global float *in,__global float *out,const ptrdiff_t intPtrArg1)
{
	int gid=get_global_id(0);	
	int i=2,j,k,l;
	out[gid] = 0;    //UNIFORM
	
	int4 i_value1_u=1,i_value2_u=in[1];
	int2 i2_value1_u=1,i2_value2_u=in[1];
	
	int4 i_value1_c=1+gid,i_value2_c=in[1]+gid;  //cons
	int2 i2_value1_c=1+gid,i2_value2_c=in[1]+gid;
	
	int i_value1_s=(1+gid)*2,i_value2_s=(in[1]+gid)*4;  //str
	int2 i2_value1_s=(1+gid)*i+1,i2_value2_s=(in[1]+gid)*i; //str
	
	float4 f_value1_u=1.,f_value2_u=in[1];
	float2 f2_value1_u=1,f2_value2_u=in[1];
	
	float4 f_value1_c=1.+gid,f_value2_c=in[1]+gid;  //cons
	float2 f2_value1_c=1+gid,f2_value2_c=in[1]+gid;
	
	float4 f_value1_s=(1+gid)*2,f_value2_s=(in[1]+gid)*4;  //str
	float2 f2_value1_s=(1+gid)*i+1,f2_value2_s=(in[1]+gid)*i; //str
	
	double4 d_value1_u=1.,d_value2_u=in[1];
	double2 d2_value1_u=1,d2_value2_u=in[1];
	
	double4 d_value1_c=1.+gid,d_value2_c=in[1]+gid;  //cons
	double2 d2_value1_c=1+gid,d2_value2_c=in[1]+gid;
	
	double4 d_value1_s=(1+gid)*2,d_value2_s=(in[1]+gid)*4;  //str
	double2 d2_value1_s=(1+gid)*i+1,d2_value2_s=(in[1]+gid)*i; //str
	
	int * c = (int*) intPtrArg1;  //uniform adress
	// this add is done to make sure that inttoptr will be used (on c)
	c = c + 2;
	out[gid] = as_float((int) c);
	
	//printf ("\n gid=%d p_val=%f  p_adr=%p\n",gid,&p,p);
	
	
	
	//out[gid].s0 =f_value1_u.s1;  //uniform
	
	for (i=1;i<256;i++) 
	{
		

		
		
			for (j=1;j<3;j++)
			{
			
				for (k=1;j<14;j+=2) 
				{
					c = (int*) intPtrArg1;
					c=c+i;
					out[gid]+=as_float((int) c);
				}
			}
		
	}
	
	

}