/*
 * Part of the tests that check different LLVM instructions on different argument
 * types and different argument sources.
 *
 * Tests the LLVM vectorizable modf function when it receives as input float8 and int8*
 * arguments produced by previous (NON vectorizable) sincos function that receives
 * constants and function arguments as input and therfore will have scalar value.
 *
 * @param in
 * 		The input array.
 * @param out
 * 		The output array.
 *
 */
__kernel void
func_sincos_func_modf ( __global const float *in,
		__global float8 *out,  const float8 float8Arg1)
{
	int gid = get_global_id(0);
	float8 arg1 = sincos(float8Arg1, &(out[gid]));
	float8 arg2 = (float8)(0, 0, 0, 0, 0, 0, 0, 0);
	float8 arg3 = modf(arg1, &arg2);
	out[gid].s0 = arg1.s0 + arg2.s0 + out[gid].s0;
	out[gid].s1 = arg1.s1 + arg2.s1 + out[gid].s1;
	out[gid].s2 = arg1.s2 + arg2.s2 + out[gid].s2;
	out[gid].s3 = arg1.s3 + arg2.s3 + out[gid].s3;
	out[gid].s4 = arg1.s4 + arg2.s4 + out[gid].s4;
	out[gid].s5 = arg1.s5 + arg2.s5 + out[gid].s5;
	out[gid].s6 = arg1.s6 + arg2.s6 + out[gid].s6;
	out[gid].s7 = arg1.s7 + arg2.s7 + out[gid].s7;
}

