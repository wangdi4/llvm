/*
 * Part of the tests that check different LLVM instructions on different argument
 * types and different argument sources.
 *
 * General purpose of this test is test WIA phase as part of whole vectorizer.
 * Main purpose of test is to check corectness for efecctivness need to add performance mesuarement
 * Test FADD and FSUB
 * may be used for performance
 * @param in
 * 		The input array.
 * @param out
 * 		The output array.
 *  
 *
 */
__kernel void
wia_87mul_fmul(	__global  int *in,
		__global float4 *out)
{
	int gid = get_global_id(0);   		//id is consecutive
	int i=1, j=gid; 							// i is uniform
	int new_gid=gid+i; 					//gid is strided
	int new_in[100]={1};
	int* p_con=new_in;                  //p* is ptr consecuntive
	int const_prod=0;                   //const + uniform
	long3 un_prod=(1 ,1,1);						// uniform
	double2 d_prod=gid+1;                //cons
	float2  f_prod=gid*2;				//stride
	double2 rez=0+gid+12;
	
	
	//printf("\n in[gid*2]=%d new_in_val=%d &p_non_con=%p&p_non_con=%d \n",in[gid*2],new_in[0],p_non_con,*p_non_con);
	
	for (i=1;i<200;i++)
		{
			if (i%30 ==0)
			{
				un_prod.x*=i;  //uniform
				un_prod.y+=i;  //uniform
			}	
		for (j=1;j<2*i;j++)
		{
			const_prod*=i;	//const uniform
			d_prod.x=d_prod.x*1+1;
			for (int k=1;k<100;k++)
			{
				if (i%156==0 && j%73==0)
				{
				 f_prod.x=f_prod.x*i;   // stride
				}
				rez.y=rez.y+f_prod.y+gid*2+i+j+1/2.3;		//random
				
			}	
		}
	}	        
	//printf("\n gid=%d in[gid]=%d p_con=%d  _valueof_p_con=%d  i=%d strided_gid=%d new_inp[0]=%d \n",gid,in[gid],p_con,&p_con,i,strided_gid,new_in[0]);
	
	
	out[gid].x = un_prod.x+un_prod.y;   ///uniform
	out[gid].y = const_prod+d_prod.x+d_prod.y;
	out[gid].z = j+i+gid-rez.y;
}
