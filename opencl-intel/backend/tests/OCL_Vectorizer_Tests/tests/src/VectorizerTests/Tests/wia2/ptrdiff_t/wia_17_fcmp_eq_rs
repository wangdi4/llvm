// Tests icmp instruction via WIA.
// The The 'fcmp' instruction returns a boolean value or a vector of boolean values based on comparison of its two integer, 
// less  equal is tests
// integer vector, or pointer operands.
// un*un

__kernel void wia_17_fcmp_eq_rs(__global float *in,__global int4 *out,const ptrdiff_t intPtrArg1)
{
	
int gid = get_global_id(0);
	
int4 float4Arg1= (in[gid],1,2,gid*3); //rnd
	
int4 float4Arg2= (gid*5,gid*2,gid*3,gid*4);//st

int4 float4Tmp=float4Arg1+float4Arg2;
	
int i,j;

//need to enforce fcmp execution
for (i=1;i<1000;i++) 
{
	float4Arg2+=0.1;
	float4Arg1*=1.0001;
}

int4 flag  = ( float4Arg1>= float4Arg2);  //un*un

for (i=1;i<32767;i+=8)   
{
			if (flag.s0>0)
			{
				//printf("\n gid=%d i=%d\n",gid,i);
				float4Tmp= (float4Arg1<=float4Arg2)*4;

				out[gid]+= float4Tmp+1+gid; //rnd
			}
			else
			{
				for (j=109;j>2;j-=8)   
				{
					//printf("\n gid=%d i=%d\n",gid,i);
					float4Tmp= (float4Arg1>=float4Arg2)*4;
			
					out[gid]+= float4Tmp+1+in[gid];
				}	
			}
}
		
	
		
	
		
		
		
	

}