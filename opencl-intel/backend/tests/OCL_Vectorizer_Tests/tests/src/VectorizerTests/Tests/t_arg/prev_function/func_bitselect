/*
 * Part of the tests that check different LLVM instructions on different argument
 * types and different argument sources.
 *
 * Tests the LLVM bitselect function when it recieves as input int8 produced by
 * previous instruction.
 * This instruction is NOT vectorizable.
 *
 * @param in
 * 		The input array.
 * @param out
 * 		The output array.
 *
 */
__kernel void
func_bitselect ( __global const float *in,
		__global float *out)
{
	int gid = get_global_id(0);
	int8 tmp1 = (int8) ( (int)(in[gid]), 8, convert_int(floor(gid + in[gid])), (int)distance(gid, in[gid]), get_local_id(0), 2 * gid, 0, -6 * (isfinite(in[gid])) + 17);
	int8 tmp2 = tmp1;
	tmp2.s6 = tmp1.s4 + tmp1.s1 * abs(tmp1.s6);
	tmp2.s0 = tmp2.s6 * 4;
	tmp2.s3 = tmp2.s3 - tmp2.s5 + tmp2.s2;
	int8 tmp3 = tmp1;
	tmp3.s2 = tmp2.s1 / (-(abs(tmp2.s4) + 1));
	tmp3.s5 = tmp2.s2 + tmp1.s7;
	int8 res = bitselect(tmp1, tmp2, tmp3);
	out[gid] = res.s0 + res.s1 +  res.s2 + res.s3 + res.s4 + res.s5 + res.s6 + res.s7;
}
