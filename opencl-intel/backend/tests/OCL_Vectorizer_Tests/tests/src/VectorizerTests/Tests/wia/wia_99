/*
 * Part of the tests that check different LLVM instructions on different argument
 * types and different argument sources.
 *
 * General purpose of this test is test WIA phase as part of whole vectorizer.
 * Main purpose of test is to check corectness for efecctivness need to add performance mesuarement
 * @param in
 * 		The input array.
 * @param out
 * 		The output array.
 *
 */
__kernel void
wia_99(	__global  int *in,
		__global float4 *out)
{
	int gid = get_global_id(0);   		//id is consecutive
	int i=1; 							// i is uniform
	int new_gid=gid+i; 					//gid is strided
	int new_in[100]={1};
	int* p_con=new_in;                //p* is ptr consecuntive
	global int* p_non_con=&in[gid*2];          //p* is random
	//printf("\n in[gid*2]=%d new_in_val=%d &p_non_con=%p&p_non_con=%d \n",in[gid*2],new_in[0],p_non_con,*p_non_con);
	
	int strided_gid=gid*10;       	    // strided               
	
	//printf("\n gid=%d in[gid]=%d p_con=%d  _valueof_p_con=%d  i=%d strided_gid=%d new_inp[0]=%d \n",gid,in[gid],p_con,&p_con,i,strided_gid,new_in[0]);
	
	
	out[gid].x =gid+i+new_gid+strided_gid+((int) (*p_con));
	out[gid].y =gid+i+new_gid+strided_gid+((int) (*p_non_con));
}
