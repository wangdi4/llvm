__kernel void unstructed_cf3( __global const float2 *in,
		__global float2 *out)
{
	int gid = get_global_id(0);
	long i,k,m;
	long sum=0;
	float fk=0;
	int flag=0;
	int f1=1,f2=0;
	int counter=0;
	while	(f1*f2 == 0)
	{
		i=i+1;
		sum=sum+gid+(int) in[gid].x;
		for (k=0;k<77;k++)
		{
			sum+=k;
			if (f1==1) 
			{
				i=i+3;
				fk=fk*1.01;
				if (k>3)
				{
					f1=0;
					f2=1;
					k=1026;
				}
				else 
				{
					i=i+1;
					out[gid].x=out[gid].y;
					out[gid].y=out[gid].y+2;
					if (f1==0 && counter <5)
					{
						f2=1;
						f1=1;
						counter+=1;
					}
				}
			}	
		}
		if (f2==1 || i<100) 
		{
			for (m=1;m<257;m+=2)
			{
				i=i+2;
				sum=sum-i;
				out[gid].x=out[gid].y+gid;
				if (m>30 && k>1000)
				{
					f1=1;
					f2=0;
					m=257;
					counter+=1;
				}
				else 
				{
					counter+=3;
					m+=1;
				}	
			}
			if (counter>1000)
			{
				//printf("\n counter=%d \n",counter);
				f1=1;
				f2=1;
				k=10000;
				m=100000;
			}
		}	
	}
	while	(f1*f2 == 0)
	{
		i=i+1;
		sum=sum+gid+(int) in[gid].x;
		for (k=0;k<77;k++)
		{
			sum+=k;
			if (f1==1) 
			{
				i=i+3;
				fk=fk*1.01;
				if (k>3)
				{
					f1=0;
					f2=1;
					k=1026;
				}
				else 
				{
					i=i+1;
					out[gid].x=out[gid].y;
					out[gid].y=out[gid].y+2;
					if (f1==0 && counter <5)
					{
						f2=1;
						f1=1;
						counter+=1;
					}
				}
			}	
		}
		if (f2==1 || i<100) 
		{
			for (m=1;m<257;m+=2)
			{
				i=i+2;
				sum=sum-i;
				out[gid].x=out[gid].y+gid;
				if (m>30 && k>1000)
				{
					f1=1;
					f2=0;
					m=257;
					counter+=1;
				}
				else 
				{
					counter+=3;
					m+=1;
				}	
			}
			if (counter>1000)
			{
				//printf("\n counter=%d \n",counter);
				f1=1;
				f2=1;
				k=10000;
				m=100000;
			}
		}	
	}while	(f1*f2 == 0)
	{
		i=i+1;
		sum=sum+gid+(int) in[gid].x;
		for (k=0;k<77;k++)
		{
			sum+=k;
			if (f1==1) 
			{
				i=i+3;
				fk=fk*1.01;
				if (k>3)
				{
					f1=0;
					f2=1;
					k=1026;
				}
				else 
				{
					i=i+1;
					out[gid].x=out[gid].y;
					out[gid].y=out[gid].y+2;
					if (f1==0 && counter <5)
					{
						f2=1;
						f1=1;
						counter+=1;
					}
				}
			}	
		}
		if (f2==1 || i<100) 
		{
			for (m=1;m<257;m+=2)
			{
				i=i+2;
				sum=sum-i;
				out[gid].x=out[gid].y+gid;
				if (m>30 && k>1000)
				{
					f1=1;
					f2=0;
					m=257;
					counter+=1;
				}
				else 
				{
					counter+=3;
					m+=1;
				}	
			}
			if (counter>1000)
			{
				//printf("\n counter=%d \n",counter);
				f1=1;
				f2=1;
				k=10000;
				m=100000;
			}
		}	
	}while	(f1*f2 == 0)
	{
		i=i+1;
		sum=sum+gid+(int) in[gid].x;
		for (k=0;k<77;k++)
		{
			sum+=k;
			if (f1==1) 
			{
				i=i+3;
				fk=fk*1.01;
				if (k>3)
				{
					f1=0;
					f2=1;
					k=1026;
				}
				else 
				{
					i=i+1;
					out[gid].x=out[gid].y;
					out[gid].y=out[gid].y+2;
					if (f1==0 && counter <5)
					{
						f2=1;
						f1=1;
						counter+=1;
					}
				}
			}	
		}
		if (f2==1 || i<100) 
		{
			for (m=1;m<257;m+=2)
			{
				i=i+2;
				sum=sum-i;
				out[gid].x=out[gid].y+gid;
				if (m>30 && k>1000)
				{
					f1=1;
					f2=0;
					m=257;
					counter+=1;
				}
				else 
				{
					counter+=3;
					m+=1;
				}	
			}
			if (counter>1000)
			{
				//printf("\n counter=%d \n",counter);
				f1=1;
				f2=1;
				k=10000;
				m=100000;
			}
		}	
	}while	(f1*f2 == 0)
	{
		i=i+1;
		sum=sum+gid+(int) in[gid].x;
		for (k=0;k<77;k++)
		{
			sum+=k;
			if (f1==1) 
			{
				i=i+3;
				fk=fk*1.01;
				if (k>3)
				{
					f1=0;
					f2=1;
					k=1026;
				}
				else 
				{
					i=i+1;
					out[gid].x=out[gid].y;
					out[gid].y=out[gid].y+2;
					if (f1==0 && counter <5)
					{
						f2=1;
						f1=1;
						counter+=1;
					}
				}
			}	
		}
		if (f2==1 || i<100) 
		{
			for (m=1;m<257;m+=2)
			{
				i=i+2;
				sum=sum-i;
				out[gid].x=out[gid].y+gid;
				if (m>30 && k>1000)
				{
					f1=1;
					f2=0;
					m=257;
					counter+=1;
				}
				else 
				{
					counter+=3;
					m+=1;
				}	
			}
			if (counter>1000)
			{
				//printf("\n counter=%d \n",counter);
				f1=1;
				f2=1;
				k=10000;
				m=100000;
			}
		}	
	}while	(f1*f2 == 0)
	{
		i=i+1;
		sum=sum+gid+(int) in[gid].x;
		for (k=0;k<77;k++)
		{
			sum+=k;
			if (f1==1) 
			{
				i=i+3;
				fk=fk*1.01;
				if (k>3)
				{
					f1=0;
					f2=1;
					k=1026;
				}
				else 
				{
					i=i+1;
					out[gid].x=out[gid].y;
					out[gid].y=out[gid].y+2;
					if (f1==0 && counter <5)
					{
						f2=1;
						f1=1;
						counter+=1;
					}
				}
			}	
		}
		if (f2==1 || i<100) 
		{
			for (m=1;m<257;m+=2)
			{
				i=i+2;
				sum=sum-i;
				out[gid].x=out[gid].y+gid;
				if (m>30 && k>1000)
				{
					f1=1;
					f2=0;
					m=257;
					counter+=1;
				}
				else 
				{
					counter+=3;
					m+=1;
				}	
			}
			if (counter>1000)
			{
				//printf("\n counter=%d \n",counter);
				f1=1;
				f2=1;
				k=10000;
				m=100000;
			}
		}	
	}while	(f1*f2 == 0)
	{
		i=i+1;
		sum=sum+gid+(int) in[gid].x;
		for (k=0;k<77;k++)
		{
			sum+=k;
			if (f1==1) 
			{
				i=i+3;
				fk=fk*1.01;
				if (k>3)
				{
					f1=0;
					f2=1;
					k=1026;
				}
				else 
				{
					i=i+1;
					out[gid].x=out[gid].y;
					out[gid].y=out[gid].y+2;
					if (f1==0 && counter <5)
					{
						f2=1;
						f1=1;
						counter+=1;
					}
				}
			}	
		}
		if (f2==1 || i<100) 
		{
			for (m=1;m<257;m+=2)
			{
				i=i+2;
				sum=sum-i;
				out[gid].x=out[gid].y+gid;
				if (m>30 && k>1000)
				{
					f1=1;
					f2=0;
					m=257;
					counter+=1;
				}
				else 
				{
					counter+=3;
					m+=1;
				}	
			}
			if (counter>1000)
			{
				//printf("\n counter=%d \n",counter);
				f1=1;
				f2=1;
				k=10000;
				m=100000;
			}
		}	
	}while	(f1*f2 == 0)
	{
		i=i+1;
		sum=sum+gid+(int) in[gid].x;
		for (k=0;k<77;k++)
		{
			sum+=k;
			if (f1==1) 
			{
				i=i+3;
				fk=fk*1.01;
				if (k>3)
				{
					f1=0;
					f2=1;
					k=1026;
				}
				else 
				{
					i=i+1;
					out[gid].x=out[gid].y;
					out[gid].y=out[gid].y+2;
					if (f1==0 && counter <5)
					{
						f2=1;
						f1=1;
						counter+=1;
					}
				}
			}	
		}
		if (f2==1 || i<100) 
		{
			for (m=1;m<257;m+=2)
			{
				i=i+2;
				sum=sum-i;
				out[gid].x=out[gid].y+gid;
				if (m>30 && k>1000)
				{
					f1=1;
					f2=0;
					m=257;
					counter+=1;
				}
				else 
				{
					counter+=3;
					m+=1;
				}	
			}
			if (counter>1000)
			{
				//printf("\n counter=%d \n",counter);
				f1=1;
				f2=1;
				k=10000;
				m=100000;
			}
		}	
	}while	(f1*f2 == 0)
	{
		i=i+1;
		sum=sum+gid+(int) in[gid].x;
		for (k=0;k<77;k++)
		{
			sum+=k;
			if (f1==1) 
			{
				i=i+3;
				fk=fk*1.01;
				if (k>3)
				{
					f1=0;
					f2=1;
					k=1026;
				}
				else 
				{
					i=i+1;
					out[gid].x=out[gid].y;
					out[gid].y=out[gid].y+2;
					if (f1==0 && counter <5)
					{
						f2=1;
						f1=1;
						counter+=1;
					}
				}
			}	
		}
		if (f2==1 || i<100) 
		{
			for (m=1;m<257;m+=2)
			{
				i=i+2;
				sum=sum-i;
				out[gid].x=out[gid].y+gid;
				if (m>30 && k>1000)
				{
					f1=1;
					f2=0;
					m=257;
					counter+=1;
				}
				else 
				{
					counter+=3;
					m+=1;
				}	
			}
			if (counter>1000)
			{
				//printf("\n counter=%d \n",counter);
				f1=1;
				f2=1;
				k=10000;
				m=100000;
			}
		}	
	}while	(f1*f2 == 0)
	{
		i=i+1;
		sum=sum+gid+(int) in[gid].x;
		for (k=0;k<77;k++)
		{
			sum+=k;
			if (f1==1) 
			{
				i=i+3;
				fk=fk*1.01;
				if (k>3)
				{
					f1=0;
					f2=1;
					k=1026;
				}
				else 
				{
					i=i+1;
					out[gid].x=out[gid].y;
					out[gid].y=out[gid].y+2;
					if (f1==0 && counter <5)
					{
						f2=1;
						f1=1;
						counter+=1;
					}
				}
			}	
		}
		if (f2==1 || i<100) 
		{
			for (m=1;m<257;m+=2)
			{
				i=i+2;
				sum=sum-i;
				out[gid].x=out[gid].y+gid;
				if (m>30 && k>1000)
				{
					f1=1;
					f2=0;
					m=257;
					counter+=1;
				}
				else 
				{
					counter+=3;
					m+=1;
				}	
			}
			if (counter>1000)
			{
				//printf("\n counter=%d \n",counter);
				f1=1;
				f2=1;
				k=10000;
				m=100000;
			}
		}	
	}while	(f1*f2 == 0)
	{
		i=i+1;
		sum=sum+gid+(int) in[gid].x;
		for (k=0;k<77;k++)
		{
			sum+=k;
			if (f1==1) 
			{
				i=i+3;
				fk=fk*1.01;
				if (k>3)
				{
					f1=0;
					f2=1;
					k=1026;
				}
				else 
				{
					i=i+1;
					out[gid].x=out[gid].y;
					out[gid].y=out[gid].y+2;
					if (f1==0 && counter <5)
					{
						f2=1;
						f1=1;
						counter+=1;
					}
				}
			}	
		}
		if (f2==1 || i<100) 
		{
			for (m=1;m<257;m+=2)
			{
				i=i+2;
				sum=sum-i;
				out[gid].x=out[gid].y+gid;
				if (m>30 && k>1000)
				{
					f1=1;
					f2=0;
					m=257;
					counter+=1;
				}
				else 
				{
					counter+=3;
					m+=1;
				}	
			}
			if (counter>1000)
			{
				//printf("\n counter=%d \n",counter);
				f1=1;
				f2=1;
				k=10000;
				m=100000;
			}
		}	
	}while	(f1*f2 == 0)
	{
		i=i+1;
		sum=sum+gid+(int) in[gid].x;
		for (k=0;k<77;k++)
		{
			sum+=k;
			if (f1==1) 
			{
				i=i+3;
				fk=fk*1.01;
				if (k>3)
				{
					f1=0;
					f2=1;
					k=1026;
				}
				else 
				{
					i=i+1;
					out[gid].x=out[gid].y;
					out[gid].y=out[gid].y+2;
					if (f1==0 && counter <5)
					{
						f2=1;
						f1=1;
						counter+=1;
					}
				}
			}	
		}
		if (f2==1 || i<100) 
		{
			for (m=1;m<257;m+=2)
			{
				i=i+2;
				sum=sum-i;
				out[gid].x=out[gid].y+gid;
				if (m>30 && k>1000)
				{
					f1=1;
					f2=0;
					m=257;
					counter+=1;
				}
				else 
				{
					counter+=3;
					m+=1;
				}	
			}
			if (counter>1000)
			{
				//printf("\n counter=%d \n",counter);
				f1=1;
				f2=1;
				k=10000;
				m=100000;
			}
		}	
	}while	(f1*f2 == 0)
	{
		i=i+1;
		sum=sum+gid+(int) in[gid].x;
		for (k=0;k<77;k++)
		{
			sum+=k;
			if (f1==1) 
			{
				i=i+3;
				fk=fk*1.01;
				if (k>3)
				{
					f1=0;
					f2=1;
					k=1026;
				}
				else 
				{
					i=i+1;
					out[gid].x=out[gid].y;
					out[gid].y=out[gid].y+2;
					if (f1==0 && counter <5)
					{
						f2=1;
						f1=1;
						counter+=1;
					}
				}
			}	
		}
		if (f2==1 || i<100) 
		{
			for (m=1;m<257;m+=2)
			{
				i=i+2;
				sum=sum-i;
				out[gid].x=out[gid].y+gid;
				if (m>30 && k>1000)
				{
					f1=1;
					f2=0;
					m=257;
					counter+=1;
				}
				else 
				{
					counter+=3;
					m+=1;
				}	
			}
			if (counter>1000)
			{
				//printf("\n counter=%d \n",counter);
				f1=1;
				f2=1;
				k=10000;
				m=100000;
			}
		}	
	}while	(f1*f2 == 0)
	{
		i=i+1;
		sum=sum+gid+(int) in[gid].x;
		for (k=0;k<77;k++)
		{
			sum+=k;
			if (f1==1) 
			{
				i=i+3;
				fk=fk*1.01;
				if (k>3)
				{
					f1=0;
					f2=1;
					k=1026;
				}
				else 
				{
					i=i+1;
					out[gid].x=out[gid].y;
					out[gid].y=out[gid].y+2;
					if (f1==0 && counter <5)
					{
						f2=1;
						f1=1;
						counter+=1;
					}
				}
			}	
		}
		if (f2==1 || i<100) 
		{
			for (m=1;m<257;m+=2)
			{
				i=i+2;
				sum=sum-i;
				out[gid].x=out[gid].y+gid;
				if (m>30 && k>1000)
				{
					f1=1;
					f2=0;
					m=257;
					counter+=1;
				}
				else 
				{
					counter+=3;
					m+=1;
				}	
			}
			if (counter>1000)
			{
				//printf("\n counter=%d \n",counter);
				f1=1;
				f2=1;
				k=10000;
				m=100000;
			}
		}	
	}while	(f1*f2 == 0)
	{
		i=i+1;
		sum=sum+gid+(int) in[gid].x;
		for (k=0;k<77;k++)
		{
			sum+=k;
			if (f1==1) 
			{
				i=i+3;
				fk=fk*1.01;
				if (k>3)
				{
					f1=0;
					f2=1;
					k=1026;
				}
				else 
				{
					i=i+1;
					out[gid].x=out[gid].y;
					out[gid].y=out[gid].y+2;
					if (f1==0 && counter <5)
					{
						f2=1;
						f1=1;
						counter+=1;
					}
				}
			}	
		}
		if (f2==1 || i<100) 
		{
			for (m=1;m<257;m+=2)
			{
				i=i+2;
				sum=sum-i;
				out[gid].x=out[gid].y+gid;
				if (m>30 && k>1000)
				{
					f1=1;
					f2=0;
					m=257;
					counter+=1;
				}
				else 
				{
					counter+=3;
					m+=1;
				}	
			}
			if (counter>1000)
			{
				//printf("\n counter=%d \n",counter);
				f1=1;
				f2=1;
				k=10000;
				m=100000;
			}
		}	
	}while	(f1*f2 == 0)
	{
		i=i+1;
		sum=sum+gid+(int) in[gid].x;
		for (k=0;k<77;k++)
		{
			sum+=k;
			if (f1==1) 
			{
				i=i+3;
				fk=fk*1.01;
				if (k>3)
				{
					f1=0;
					f2=1;
					k=1026;
				}
				else 
				{
					i=i+1;
					out[gid].x=out[gid].y;
					out[gid].y=out[gid].y+2;
					if (f1==0 && counter <5)
					{
						f2=1;
						f1=1;
						counter+=1;
					}
				}
			}	
		}
		if (f2==1 || i<100) 
		{
			for (m=1;m<257;m+=2)
			{
				i=i+2;
				sum=sum-i;
				out[gid].x=out[gid].y+gid;
				if (m>30 && k>1000)
				{
					f1=1;
					f2=0;
					m=257;
					counter+=1;
				}
				else 
				{
					counter+=3;
					m+=1;
				}	
			}
			if (counter>1000)
			{
				//printf("\n counter=%d \n",counter);
				f1=1;
				f2=1;
				k=10000;
				m=100000;
			}
		}	
	}while	(f1*f2 == 0)
	{
		i=i+1;
		sum=sum+gid+(int) in[gid].x;
		for (k=0;k<77;k++)
		{
			sum+=k;
			if (f1==1) 
			{
				i=i+3;
				fk=fk*1.01;
				if (k>3)
				{
					f1=0;
					f2=1;
					k=1026;
				}
				else 
				{
					i=i+1;
					out[gid].x=out[gid].y;
					out[gid].y=out[gid].y+2;
					if (f1==0 && counter <5)
					{
						f2=1;
						f1=1;
						counter+=1;
					}
				}
			}	
		}
		if (f2==1 || i<100) 
		{
			for (m=1;m<257;m+=2)
			{
				i=i+2;
				sum=sum-i;
				out[gid].x=out[gid].y+gid;
				if (m>30 && k>1000)
				{
					f1=1;
					f2=0;
					m=257;
					counter+=1;
				}
				else 
				{
					counter+=3;
					m+=1;
				}	
			}
			if (counter>1000)
			{
				//printf("\n counter=%d \n",counter);
				f1=1;
				f2=1;
				k=10000;
				m=100000;
			}
		}	
	}while	(f1*f2 == 0)
	{
		i=i+1;
		sum=sum+gid+(int) in[gid].x;
		for (k=0;k<77;k++)
		{
			sum+=k;
			if (f1==1) 
			{
				i=i+3;
				fk=fk*1.01;
				if (k>3)
				{
					f1=0;
					f2=1;
					k=1026;
				}
				else 
				{
					i=i+1;
					out[gid].x=out[gid].y;
					out[gid].y=out[gid].y+2;
					if (f1==0 && counter <5)
					{
						f2=1;
						f1=1;
						counter+=1;
					}
				}
			}	
		}
		if (f2==1 || i<100) 
		{
			for (m=1;m<257;m+=2)
			{
				i=i+2;
				sum=sum-i;
				out[gid].x=out[gid].y+gid;
				if (m>30 && k>1000)
				{
					f1=1;
					f2=0;
					m=257;
					counter+=1;
				}
				else 
				{
					counter+=3;
					m+=1;
				}	
			}
			if (counter>1000)
			{
				//printf("\n counter=%d \n",counter);
				f1=1;
				f2=1;
				k=10000;
				m=100000;
			}
		}	
	}while	(f1*f2 == 0)
	{
		i=i+1;
		sum=sum+gid+(int) in[gid].x;
		for (k=0;k<77;k++)
		{
			sum+=k;
			if (f1==1) 
			{
				i=i+3;
				fk=fk*1.01;
				if (k>3)
				{
					f1=0;
					f2=1;
					k=1026;
				}
				else 
				{
					i=i+1;
					out[gid].x=out[gid].y;
					out[gid].y=out[gid].y+2;
					if (f1==0 && counter <5)
					{
						f2=1;
						f1=1;
						counter+=1;
					}
				}
			}	
		}
		if (f2==1 || i<100) 
		{
			for (m=1;m<257;m+=2)
			{
				i=i+2;
				sum=sum-i;
				out[gid].x=out[gid].y+gid;
				if (m>30 && k>1000)
				{
					f1=1;
					f2=0;
					m=257;
					counter+=1;
				}
				else 
				{
					counter+=3;
					m+=1;
				}	
			}
			if (counter>1000)
			{
				//printf("\n counter=%d \n",counter);
				f1=1;
				f2=1;
				k=10000;
				m=100000;
			}
		}	
	}while	(f1*f2 == 0)
	{
		i=i+1;
		sum=sum+gid+(int) in[gid].x;
		for (k=0;k<77;k++)
		{
			sum+=k;
			if (f1==1) 
			{
				i=i+3;
				fk=fk*1.01;
				if (k>3)
				{
					f1=0;
					f2=1;
					k=1026;
				}
				else 
				{
					i=i+1;
					out[gid].x=out[gid].y;
					out[gid].y=out[gid].y+2;
					if (f1==0 && counter <5)
					{
						f2=1;
						f1=1;
						counter+=1;
					}
				}
			}	
		}
		if (f2==1 || i<100) 
		{
			for (m=1;m<257;m+=2)
			{
				i=i+2;
				sum=sum-i;
				out[gid].x=out[gid].y+gid;
				if (m>30 && k>1000)
				{
					f1=1;
					f2=0;
					m=257;
					counter+=1;
				}
				else 
				{
					counter+=3;
					m+=1;
				}	
			}
			if (counter>1000)
			{
				//printf("\n counter=%d \n",counter);
				f1=1;
				f2=1;
				k=10000;
				m=100000;
			}
		}	
	}while	(f1*f2 == 0)
	{
		i=i+1;
		sum=sum+gid+(int) in[gid].x;
		for (k=0;k<77;k++)
		{
			sum+=k;
			if (f1==1) 
			{
				i=i+3;
				fk=fk*1.01;
				if (k>3)
				{
					f1=0;
					f2=1;
					k=1026;
				}
				else 
				{
					i=i+1;
					out[gid].x=out[gid].y;
					out[gid].y=out[gid].y+2;
					if (f1==0 && counter <5)
					{
						f2=1;
						f1=1;
						counter+=1;
					}
				}
			}	
		}
		if (f2==1 || i<100) 
		{
			for (m=1;m<257;m+=2)
			{
				i=i+2;
				sum=sum-i;
				out[gid].x=out[gid].y+gid;
				if (m>30 && k>1000)
				{
					f1=1;
					f2=0;
					m=257;
					counter+=1;
				}
				else 
				{
					counter+=3;
					m+=1;
				}	
			}
			if (counter>1000)
			{
				//printf("\n counter=%d \n",counter);
				f1=1;
				f2=1;
				k=10000;
				m=100000;
			}
		}	
	}
	out[gid]=out[gid]+gid+flag;
}	