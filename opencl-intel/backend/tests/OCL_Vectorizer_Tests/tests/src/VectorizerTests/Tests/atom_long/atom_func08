/*
 * Part of the control flow tests that check vectorization of control flow statements.
 *
 * use both local and global pointers
 * @param in
 * 		The input array.
 * @param out
 * 		The output array.
 *
 */



__kernel void
atom_func08
( __global unsigned long *in,
		__global float *out)
{
	int gid = get_global_id(0);
	local int temp_arr[100];
	int count=0;
	int rez1,rez2,rez3,rez4,rez5,rez6;

	
	label1:
	rez1=atom_add(&in[gid],gid)+atom_add(&in[gid+33],gid);
	rez2=atom_add(&in[gid],1)+atom_add(&in[gid+33],2);
	rez3=atom_sub(&in[gid],gid)+atom_sub(&in[gid+33],gid);
	rez4=atom_sub(&in[gid],1)+atom_sub(&in[gid+33],3);
	rez5=atom_xchg(&in[gid],gid)+atom_xchg(&in[gid+33],gid);
	rez6=atom_xchg(&in[gid],23)+atom_xchg(&in[gid+33],2);
	//printf ("\n gid=%d r1=%d r2=%d r3=%d r4=%d r5=%d r6=%d\n",gid,rez1,rez2,rez3,rez4,rez5,rez6);
	
	if (count<100)
	{  
		count+=12;
		goto label1;
	}
	
	else if((rez6=atom_xchg(&in[gid],23)) >count)
	{
		rez6=atom_xchg(&in[gid],23)+atom_xchg(&in[gid+33],2);
	}	
		
	
	
	
	out[gid] =	rez1+rez2+rez3-rez4-rez5-rez6;
}
