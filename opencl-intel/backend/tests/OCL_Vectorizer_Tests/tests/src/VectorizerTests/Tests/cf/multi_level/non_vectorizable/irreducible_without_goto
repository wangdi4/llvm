__kernel void irreducible_without_goto ( __global const float *in,
		__global int2 *out)
{
   int f1=0, f2=0;   
   int gid = get_global_id(0);
   int i=0;
   long j=1;
   
   //printf ("\n  gid=%d in[gid]=%f\n",gid,in[gid]);
   
   while ( f1*f2!=1) {
		i=i+2+ in[gid];
		//printf ("\n i=%d\n",i);
	
		if (i>1000 || i<200)
		{
			f1=1;
			f2=0;
		}
		else
		{
			f1=0;
			f2=1;
		}
	
		if (f1>f2)
		{
			i=i+1;
			j=j+12+i;
			f1=0;
			f2=1;
		}
		else if (f2==1 && f1==0)
		{
			i=i*2;
			j=j-12;
			f1=1;
			f2=0;
		}
		if (i>400 || j>(int) in[gid]+500)
		{
			f1=1;
			f2=1;
		}
		}	

		
		out[gid]=3+gid+i+j;
		//printf("\n the i befor return =%d j=%ld in[gid]=%d\n",i,j,(int) in[gid] + 500);

}