#!/usr/bin/env python3

"""A script to generate VectInfo_64bit tests."""

import argparse
import os

def main():
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument('--include-dir', help='The VectInfo.gen directory')
    parser.add_argument('--output-dir', default=os.path.dirname(
        os.path.realpath(__file__)), help='The output directory to generate tests')
    args = parser.parse_args()
    generate(os.path.join(args.include_dir, 'VectInfo.gen'),
             os.path.join(args.output_dir, 'VectInfo_64bit.ll'))

def generate(input_filename, output_filename, requires_64bit=True):
    with open(input_filename, 'r') as in_f:
        content = in_f.readlines()

    count = 0
    list = []
    check_prefix = '; CHECK:'
    for line in content:
        list.append(check_prefix + line);
        check_prefix = '; CHECK-NEXT:'
        count += 1
    
    with open(output_filename, 'w') as out_f:
        out_f.write(
            """; NOTE: This file is auto-generated by update_VectInfo_checks.py.\n"""
            """; NOTE: Do NOT modify this test manually!\n\n""")
        if requires_64bit:
            out_f.write("; REQUIRES: 64bit\n")
        out_f.write("; RUN: FileCheck --input-file={shortpath} %s\n\n".format(shortpath='%includedir/VectInfo.gen'))
        out_f.writelines(list)
        out_f.close()

    assert(count > 0)
    print("Generated {count} checks in {file}".format(
        count=count, file=output_filename))

if __name__ == '__main__':
    main()
