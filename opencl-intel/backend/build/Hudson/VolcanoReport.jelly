<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define">

<STYLE>
BODY, TABLE, TD, TH, P {
  font-family:Verdana,Helvetica,sans serif;
  font-size:11px;
  color:black;
}
h1 { color:black; }
h2 { color:black; }
h3 { color:black; }
TD.bg1 { color:white; background-color:#0000C0; font-size:120% }
TD.bg2 { color:white; background-color:#4040FF; font-size:110% }
TD.bg3 { color:white; background-color:#8080FF; }
TD.test_passed { color:blue; }
TD.test_failed { color:red; }
TD.console { font-family:Courier New; }
</STYLE>
<BODY>
<j:set var="spc" value="&amp;nbsp;&amp;nbsp;" />


<!-- GENERAL INFO -->

<j:invokeStatic var="causeActionClass" method="forName" className="java.lang.Class">
	<j:arg value="hudson.model.CauseAction"/>
</j:invokeStatic>

<j:set var="hasCauseProject" value="false" />
<j:set var="causeProject" value="${null}" />
<j:set var="causeAction" value="${build.getAction(causeActionClass)}"/>
<j:if test="${causeAction!=null}">
	<j:invokeStatic var="upstreamCauseClass" method="forName" className="java.lang.Class">
		<j:arg value="hudson.model.Cause$UpstreamCause" />
	</j:invokeStatic>
	<j:forEach var="cause" items="${causeAction.causes}">
		<j:invoke on="${upstreamCauseClass}" var="isCauseInstance" method="isInstance">
			<j:arg type="hudson.model.Cause" value="${cause}" />
		</j:invoke>
		<j:if test="${isCauseInstance}">
			<j:set var="hasCauseProject" value="true" />
			
			<j:invokeStatic className="hudson.model.Hudson" method="getInstance" var="instance" />
			<j:invoke on="${instance}" method="getItem" var="causeProject" >
				<j:arg value="${cause.upstreamProject}" />
			</j:invoke>
			<j:break/>		
		</j:if>
	</j:forEach>
</j:if>

<TABLE>
  <TR><TD align="right">
    <j:choose>
      <j:when test="${build.result=='SUCCESS'}">
        <IMG SRC="${rooturl}static/e59dfe28/images/32x32/blue.gif" />
      </j:when>
	  <j:when test="${build.result=='FAILURE'}">
        <IMG SRC="${rooturl}static/e59dfe28/images/32x32/red.gif" />
      </j:when>
      <j:otherwise>
        <IMG SRC="${rooturl}static/e59dfe28/images/32x32/yellow.gif" />
      </j:otherwise>
    </j:choose>
  </TD><TD valign="center"><B style="font-size: 200%;">BUILD (rev.${build.getEnvVars().get("SVN_REVISION")}) ${build.result}</B></TD></TR>
  <j:if test="${hasCauseProject == true}">
	<TR><TD>Project:</TD><TD><a  style="color:green" href="${rooturl}${causeProject.getUrl()}">${causeProject.name}</a></TD></TR>
  </j:if>
  <j:if test="${hasCauseProject != true}">
	<TR><TD>Project:</TD><TD>Manual Run of Report Job</TD></TR>
  </j:if>
  <TR><TD>Date of build:</TD><TD>${it.timestampString}</TD></TR>
</TABLE>
<BR/>

<!-- CHANGE SET -->

<j:set var="changeSet" value="${build.changeSet}" />
<j:if test="${changeSet!=null}">
  <j:set var="hadChanges" value="false" />
  <TABLE width="100%">
    <TR><TD class="bg1" colspan="2"><B>CHANGES</B></TD></TR>
    <j:forEach var="cs" items="${changeSet.logs}" varStatus="loop">
      <j:set var="hadChanges" value="true" />
      <j:set var="aUser" value="${cs.hudsonUser}"/>
      <TR>
        <TD colspan="2" class="bg2">${spc}Revision <B>${cs.revision}</B> by
          <B><j:choose>
            <j:when test="${aUser!=null}">${aUser.displayName}: </j:when>
            <j:otherwise>${cs.user}: </j:otherwise>
          </j:choose></B>
          <B>(${cs.msgAnnotated})</B>
         </TD>
      </TR>
      <j:forEach var="p" items="${cs.paths}">
        <TR>
          <TD width="10%">${spc}${p.editType.name}</TD>
          <TD>${p.value}</TD>
        </TR>
      </j:forEach>
    </j:forEach>
    <j:if test="${!hadChanges}">
      <TR><TD colspan="2">No Changes</TD></TR>
    </j:if>
  </TABLE>
<BR/>
</j:if>


<!-- ARTIFACTS -->

<j:set var="artifacts" value="${build.artifacts}" />
<j:if test="${artifacts!=null and artifacts.size()&gt;0}">
  <TABLE width="100%">
    <TR><TD class="bg1"><B>BUILD ATRIFACTS</B></TD></TR>
    <TR>
      <TD>
        <j:forEach var="f" items="${artifacts}">
      	  <li>
      	    <a href="${rooturl}${build.url}artifact/${f}">${f}</a>
      	  </li>
      	</j:forEach>
      </TD>
    </TR>
  </TABLE>
<BR/>  
</j:if>

<!-- JUnit TEMPLATE -->
<j:new   var="configList" className="java.util.ArrayList"/>
<j:invoke var="dontCare" method="add" on="${configList}"><j:arg value="Win32_Release"/></j:invoke>
<j:invoke var="dontCare" method="add" on="${configList}"><j:arg value="Win32_Debug"/></j:invoke>
<j:invoke var="dontCare" method="add" on="${configList}"><j:arg value="Win64_Release"/></j:invoke>
<j:invoke var="dontCare" method="add" on="${configList}"><j:arg value="Win64_Debug"/></j:invoke>
<j:invoke var="dontCare" method="add" on="${configList}"><j:arg value="Linux64_Release"/></j:invoke>
<j:invoke var="dontCare" method="add" on="${configList}"><j:arg value="Linux64_Debug"/></j:invoke>

<j:set var="junitResultList" value="${it.JUnitTestResult}" />
<j:if test="${junitResultList.isEmpty()!=true}">
	<j:forEach var="junitResult" items="${it.JUnitTestResult}">
		<j:forEach var="packageResult" items="${junitResult.getChildren()}">
			<TABLE width="100%">
			<TR><TD class="bg1" colspan="7"><B>${packageResult.getName()}</B></TD></TR>
			<!-- Show the header line -->
			<tr>
				<td/>
				<j:forEach var="config" items="${configList}" >
					<td class="bg2">${config}</td>
				</j:forEach>
			</tr>
			<j:forEach var="classResult" items="${packageResult.getChildren()}">
				<TR bgcolor="white"><TD class="bg2">${classResult.getClassName()}</TD>
				<j:forEach var="config" items="${configList}">
					<j:invoke var="caseResult" method="getCaseResult" on="${classResult}">
						<j:arg value="${config}"/>
					</j:invoke>
					<j:if test="${caseResult == null}">
						<TD><B><span style="color:lightGrey">NotRun</span></B></TD>
					</j:if>
					<j:if test="${caseResult != null and caseResult.isPassed() == true}" >
						<TD><B><span><a  style="color:green" href="${caseResult.getStdout()}">Passed</a></span></B></TD>
					</j:if>
					<j:if test="${caseResult != null and caseResult.isSkipped() == true}" >
						<TD><B><span style="color:lightGrey">Skipped</span></B></TD>
					</j:if>
					<j:if test="${caseResult != null and caseResult.isSkipped() != true and caseResult.isPassed() != true}" >
						<TD><B><span><a style="color:red" href="${caseResult.getErrorDetails()}">Failed</a></span></B></TD>
					</j:if>
				</j:forEach>
				</TR>
			</j:forEach>
			<TR><TD class="bg2" colspan="7"> Summary:  Failed: ${packageResult.getFailCount()} test(s), Passed: ${packageResult.getPassCount()} test(s), Skipped: ${packageResult.getSkipCount()} test(s), Total: ${packageResult.getPassCount()+packageResult.getFailCount()+packageResult.getSkipCount()} test(s)</TD></TR>
			</TABLE>	
			<BR/>
		</j:forEach>
	</j:forEach>  
</j:if>

<!-- CONSOLE OUTPUT 

<j:getStatic var="resultFailure" field="FAILURE" className="hudson.model.Result"/>
<j:if test="${build.result==resultFailure}">
<TABLE width="100%" cellpadding="0" cellspacing="0">
<TR><TD class="bg1"><B>CONSOLE OUTPUT</B></TD></TR>
<j:forEach var="line" items="${build.getLog(100)}"><TR><TD class="console">${line}</TD></TR></j:forEach>
</TABLE>
<BR/>
</j:if>
-->

</BODY>
</j:jelly>
