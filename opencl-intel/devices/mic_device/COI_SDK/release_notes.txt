
                    Coprocessor Offload Infrastructure 
                 for Intel(r) MIC Platform Software Stack
                             Release Notes



I. Introduction

  This file describes what's new in this release, system requirements
  and known issues.

  This release provides developers with all of the necessary binaries,
  libraries and include files to develop applications using the
  Coprocessor Offload Infrastructure (COI) for the Intel(r) MIC 
  platform.

  Additionally, this release includes a set of tutorial applications
  that are intended to be instructional and/or a starting point for
  developers who are interested in writing programs using COI.

  For more information, please refer to the Additional Information 
  section below.

II. What's New

  COI APIs supported in this release
    The following APIs are supported in this release. Note that some
    parameter combinations may not yet bet supported. Please see the
    list below for additional details.

    COIBarrierWait
    COIBarrierSignalUserBarrier
    COIBarrierRegisterUserBarrier
    COIBarrierUnregisterUserBarrier
    COIBufferCreate
    COIBufferCreateFromMemory
    COIBufferDestroy
    COIBufferMap
    COIBufferUnmap
    COIBufferGetSinkAddress
    COIBufferRead
    COIBufferWrite
    COIBufferCopy
    COIBufferAddRef
    COIBufferReleaseRef
    COIEngineGetCount
    COIEngineGetHandle
    COIEngineGetInfo
    COIPerfGetCycleFrequency
    COIPerfGetCycleCounter
    COIPipelineCreate
    COIPipelineSetCPUMask
    COIPipelineClearCPUMask
    COIPipelineDestroy
    COIPipelineGetEngine
    COIPipelineRunFunction
    COIPipelineStartExecutingRunFunctions
    COIProcessCreateFromFile
    COIProcessCreateFromMemory
    COIProcessGetFunctionHandles
    COIProcessDestroy
    COIProcessLoadLibraryFromFile
    COIProcessLoadLibraryFromMemory
    COIProcessUnloadLibrary
    COIProcessWaitForShutdown
    COIResultGetName
    COISysGetAPICID
    COISysGetHardwareThreadCount
    COISysGetHardwareThreadIndex
    COISysGetCoreIndex
    COISysGetL2CacheCount
    COISysGetL2CacheIndex


  COI APIs and features not supported in this release

    The following APIs and parameter combinations 
    return COI_NOT_SUPPORTED:

    COIProcessCreate*
        The user must specify the amount of memory to reserve for
        COIBuffers. COI can not automatically grow this
        allocation yet.

    COIBufferCreate
        Types: COI_BUFFER_STREAMING_TO_SINK, 
               COI_BUFFER_STREAMING_TO_SOURCE
        Flags: COI_SAME_ADDRESS_SINKS,  
               COI_SAME_ADDRESS_SINKS_AND_SOURCE,
               COI_SPU_TXS_MEMORY

    COIBufferCreateFromMemory
        Types: COI_BUFFER_STREAMING_TO_SINK, 
               COI_BUFFER_STREAMING_TO_SOURCE, 
        Flags: COI_SAME_ADDRESS_SINKS, 
               COI_SAME_ADDRESS_SINKS_AND_SOURCE,
               COI_SPU_TXS_MEMORY

    COIBufferSetState

    COIPipelineFlush
        Timeout != 0

  Reverse acceleration not yet supported
    This release only supports forward acceleration where the host
    offloads work to the MIC device. In future release it will be
    possible to offload work from the MIC device back to the host.


  COI Tutorials

    The following tutorials are included to help new COI application
    developers get started with COI. These can be found in
    /opt/intel/mic/coi/tutorials

    hello_world
        This tutorial shows how to launch a remote process which doesn't
        do any additional COI processing. This can be useful to launch
        a remote application on the MIC device.

    coi_simple
        A small tutorials which demonstrates how to use run functions
        to invokde work on the sink and using miscellaneous data and
        the result pointer to exchange data.

    buffers_with_pipeline_function
        This tutorial shows a simple usage of run functions using
        buffers to transfer data between the source and sink.

    multiple_pipeline_explicit
        Demonstrates how to use explicitly declared dependencies to
        control program flow between two COI pipelines.

    multiple_pipeline_implicit
        Demonstrates how implicit dependencies are tracked by COI
        when sharing buffers across COI pipelines.

    user_barrier
        This tutorial shows how user barriers can be used to synchronize
        execution between the source and sink.

    buffer_references
        Demonstrates how to use COIBufferAddRef and COIBufferReleaseRef
        to maintain ownership of a buffer using the buffer reference
        counts.

    xn_to_coi
        This tutorial is intended for users who are familiar with the
        XN APIs used in the original MPSS stack. 
 
III. System Requirements

  Hardware Requirements
  
    1 GB of RAM
    2 GB of disk space
    Intel(R) Core(TM) i7 processor Software Development Platform
    KNF C0 or D0 hardware
  
  Supported Operating Systems
  
    RedHat Enterprise Linux 6.0
  
  Software Requirements (Documentation)
  
    The documentation in this release comes in multiple forms:
        * Documentation is available in PDF form, which requires
          Adobe* Acrobat*, ghostscript, Evince (GNOME), Okular (KDE),
          or other PDF reader to view.

IV. Known Issues in This Release

  User must specify buffer space in COIProcessCreate
    The parameter to specify the amount of memory to reserve for 
    COIBuffers must be set when calling COIProcessCreate. If the
    parameter is left as 0 then no buffer memory will be reserved
    and COI will not automaticall increase the buffer pool on demand.

  Pinned buffer memory limitation
    Currently COI only supports up to ~256MB of pinned buffer memory
    per KNF device. That is the total amount available for all
    buffers in all COI processes for each device.

  DMA operations limited to 4k alignment and page size granularity
    The COI APIs which expose access to the DMA hardware (COIBufferCopy,
    COIBufferRead, COIBufferWrite) are restricted to pointer offsets
    which are page (4096-byte) aligned and that are a multiple of a
    page in length.
  
V. Additional Information

  For information related to building COI programs, see the COI
  Getting Started Guide:
  
    /opt/intel/mic/coi/docs/coi_getting_started.pdf
  
  For information related to the COI API and programming 
  model, see the COI API Reference Manual:
  
    /opt/intel/mic/coi/docs/MIC_COI_API_Reference_Manual_0_65.pdf
  
VI. Customer Support

  Please forward distribution requests, suggestions, questions or issues
  via email to leora.j.gregory@intel.com using a subject of: 
  COI SDK Release Feedback
  
  
VII. Other Intel Products

  You can find out about other Intel software development products by
  visiting http://www.intel.com/software/products/
  
  
  
VIII. Disclaimer and Legal Information

INFORMATION IN THIS DOCUMENT IS PROVIDED IN CONNECTION WITH INTEL(R)
PRODUCTS. NO LICENSE, EXPRESS OR IMPLIED, BY ESTOPPEL OR OTHERWISE, TO 
ANY INTELLECTUAL PROPERTY RIGHTS IS GRANTED BY THIS DOCUMENT. EXCEPT AS 
PROVIDED IN INTEL'S TERMS AND CONDITIONS OF SALE FOR SUCH PRODUCTS, INTEL
ASSUMES NO LIABILITY WHATSOEVER, AND INTEL DISCLAIMS ANY EXPRESS OR 
IMPLIED WARRANTY, RELATING TO SALE AND/OR USE OF INTEL PRODUCTS INCLUDING
LIABILITY OR WARRANTIES RELATING TO FITNESS FOR A PARTICULAR PURPOSE, 
MERCHANTABILITY, OR INFRINGEMENT OF ANY PATENT, COPYRIGHT OR OTHER 
INTELLECTUAL PROPERTY RIGHT. Intel products are not intended for use in 
medical, life saving, life sustaining, critical control or safety 
systems, or in nuclear facility applications. 

Intel may make changes to specifications and product descriptions at any 
time, without notice.

Designers must not rely on the absence or characteristics of any features
or instructions marked "reserved" or "undefined." Intel reserves these 
for future definition and shall have no responsibility whatsoever for 
conflicts or incompatibilities arising from future changes to them. 

The software described in this document may contain software defects 
which may cause the product to deviate from published specifications. 
Current characterized software defects are available on request. 

This document as well as the software described in it is furnished under 
license and may only be used or copied in accordance with the terms of 
the license. The information in this manual is furnished for 
informational use only, is subject to change without notice, and should 
not be construed as a commitment by Intel Corporation. Intel Corporation 
assumes no responsibility or liability for any errors or inaccuracies 
that may appear in this document or any software that may 
be provided in association with this document. 

Except as permitted by such license, no part of this document may be 
reproduced, stored in a retrieval system, or transmitted in any form or 
by any means without the express written consent of Intel Corporation.

Developers must not rely on the absence or characteristics of any 
features or instructions marked "reserved" or "undefined." Improper use 
of reserved or undefined features or instructions may cause unpredictable
behavior or failure in developer's software code when running on an Intel
processor. Intel reserves these features or instructions for future 
definition and shall have no responsibility whatsoever for conflicts or 
incompatibilities arising from their unauthorized use.

BunnyPeople, Celeron, Celeron Inside, Centrino, Centrino logo, Chips, 
Core Inside, Dialogic, EtherExpress, ETOX, FlashFile, i386, i486, i960, 
iCOMP, InstantIP, Intel, Intel logo, Intel386, Intel486, Intel740, 
IntelDX2, IntelDX4, IntelSX2, Intel Core, Intel Inside, Intel Inside
logo, Intel. Leap ahead., Intel. Leap ahead. logo, Intel NetBurst, Intel 
NetMerge, Intel NetStructure, Intel SingleDriver, Intel SpeedStep, Intel 
StrataFlash, Intel Viiv, Intel vPro, Intel XScale, IPLink, Itanium, 
Itanium Inside, MCS, MMX, MMX logo, Optimizer logo, OverDrive, Paragon, 
PDCharm, Pentium, Pentium II Xeon, Pentium III Xeon, Performance at Your 
Command, Pentium Inside, skoool, Sound Mark, The Computer Inside., The 
Journey Inside, VTune, Xeon, Xeon Inside and Xircom are trademarks or 
registered trademarks of Intel Corporation or its subsidiaries in the 
United States and other countries.

* Other names and brands may be claimed as the property of others.

Copyright (c)  2005-2011, Intel Corporation.

