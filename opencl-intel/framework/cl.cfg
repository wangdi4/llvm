# Copyright (c) 2010-2011 Intel Corporation
# All rights reserved.
# 
# WARRANTY DISCLAIMER
# 
# THESE MATERIALS ARE PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL INTEL OR ITS
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
# OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THESE
# MATERIALS, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# 
# Intel Corporation is the author of the Materials, and requests that all
# problem reports or change requests be submitted to it directly
#
# Intel(R) OpenCL(TM) Configuration File
# =======================================================================
#
# Typical usage
# -------------
# 
# Given a configuration file "cl.cfg":
#   items  = 25
#   length = 8.0  # nanometers
#   name = Uri Levy
# 
# Named values are read in various ways, with or without default values:
#   ConfigFile config( "settings.cfg" );
#   int items = config.read<int>( "atoms" );
#   double length = config.read( "length", 10.0 );
#   string author, title;
#   config.readInto( author, "name" );
#   config.readInto( title, "title", string("Untitled") );
#
# Parameters:
# -----------
# CL_CONFIG_LOG_FILE [string] - set the full path of the log file
# CL_CONFIG_USE_LOGGER [bool] - determaine if the logger is active or not
# CL_CONFIG_DEVICES [string1; string2, string3 | string4 ...] - list of available devices
# CL_CONFIG_DEFAULT_DEVICE [string] - name of default device
# CL_CONFIG_FE_COMPILERS [string1; string2, string3 | string4 ...] - list of available front-end compilers
# CL_CONFIG_DEFAULT_FE_COMPILER [string] - name of defaul fe compiler

CL_CONFIG_LOG_FILE = C:\cl.log

CL_CONFIG_USE_LOGGER = False

CL_CONFIG_DEVICES = cpu_device

CL_CONFIG_DEFAULT_DEVICE = cpu_device

#CL_CONFIG_DEVICES = CPUDevice.dll; CudaDevice.dll

CL_CONFIG_FE_COMPILERS = clang_compiler

CL_CONFIG_DEFAULT_FE_COMPILER = clang_compiler

#--------------------------------------------------------------------------------------------------------
# CPU Device parameters
#--------------------------------------------------------------------------------------------------------
#
# Parameters:
# -----------
# CL_CONFIG_USE_GPA [bool] - determine whether GPA traces collection is active or not

CL_CONFIG_USE_GPA = False
CL_CONFIG_USE_VECTORIZER = True
CL_CONFIG_USE_VTUNE = False

CL_GPA_CONFIG_ENABLE_API_TRACING = False
CL_GPA_CONFIG_SHOW_QUEUED_MARKER = True
CL_GPA_CONFIG_SHOW_SUBMITTED_MARKER = False
CL_GPA_CONFIG_SHOW_RUNNING_MARKER = False
CL_GPA_CONFIG_SHOW_COMPLETED_MARKER = True