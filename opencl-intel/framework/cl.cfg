# OpenCL configuration file
# -------------------------
#
# Typical usage
# -------------
# 
# Given a configuration file "cl.cfg":
#   items  = 25
#   length = 8.0  # nanometers
#   name = Uri Levy
# 
# Named values are read in various ways, with or without default values:
#   ConfigFile config( "settings.cfg" );
#   int items = config.read<int>( "atoms" );
#   double length = config.read( "length", 10.0 );
#   string author, title;
#   config.readInto( author, "name" );
#   config.readInto( title, "title", string("Untitled") );
#
# Parameters:
# -----------
# CL_CONFIG_LOG_FILE [string] - set the full path of the log file
# CL_CONFIG_USE_LOGGER [bool] - determaine if the logger is active or not
# CL_CONFIG_DEVICES [string1; string2, string3 | string4 ...] - list of available devices
# CL_CONFIG_DEFAULT_DEVICE [string] - name of default device
# CL_CONFIG_FE_COMPILERS [string1; string2, string3 | string4 ...] - list of available front-end compilers
# CL_CONFIG_DEFAULT_FE_COMPILER [string] - name of defaul fe compiler

CL_CONFIG_LOG_FILE = C:\cl.log

CL_CONFIG_USE_LOGGER = False

CL_CONFIG_DEVICES = cpu_device.dll

CL_CONFIG_DEFAULT_DEVICE = cpu_device.dll

#CL_CONFIG_DEVICES = CPUDevice.dll; CudaDevice.dll

CL_CONFIG_FE_COMPILERS = clang_compiler.dll

CL_CONFIG_DEFAULT_FE_COMPILER = clang_compiler.dll

#--------------------------------------------------------------------------------------------------------
# CPU Device parameters
#--------------------------------------------------------------------------------------------------------
#
# Parameters:
# -----------
# CL_CONFIG_USE_TASKALYZER [bool] - determine wether TaskAnalizer traces collection is active or not

CL_CONFIG_USE_TASKALYZER = False
CL_CONFIG_USE_VECTORIZER = False
