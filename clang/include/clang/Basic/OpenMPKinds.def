//===--- OpenMPKinds.def - OpenMP directives and clauses list ---*- C++ -*-===//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//
/// \file
/// This file defines the list of supported OpenMP directives and
/// clauses.
///
//===----------------------------------------------------------------------===//

#ifndef OPENMP_SCHEDULE_KIND
#define OPENMP_SCHEDULE_KIND(Name)
#endif
#ifndef OPENMP_SCHEDULE_MODIFIER
#define OPENMP_SCHEDULE_MODIFIER(Name)
#endif
#if INTEL_CUSTOMIZATION
#if INTEL_FEATURE_CSA
#ifndef OPENMP_DATAFLOW_MODIFIER
#define OPENMP_DATAFLOW_MODIFIER(Name)
#endif
#endif // INTEL_FEATURE_CSA
#endif // INTEL_CUSTOMIZATION
#ifndef OPENMP_DEPEND_KIND
#define OPENMP_DEPEND_KIND(Name)
#endif
#ifndef OPENMP_LINEAR_KIND
#define OPENMP_LINEAR_KIND(Name)
#endif
#ifndef OPENMP_MAP_KIND
#define OPENMP_MAP_KIND(Name)
#endif
#ifndef OPENMP_MAP_MODIFIER_KIND
#define OPENMP_MAP_MODIFIER_KIND(Name)
#endif
#ifndef OPENMP_MOTION_MODIFIER_KIND
#define OPENMP_MOTION_MODIFIER_KIND(Name)
#endif
#ifndef OPENMP_DIST_SCHEDULE_KIND
#define OPENMP_DIST_SCHEDULE_KIND(Name)
#endif
#ifndef OPENMP_DEFAULTMAP_KIND
#define OPENMP_DEFAULTMAP_KIND(Name)
#endif
#ifndef OPENMP_ATOMIC_DEFAULT_MEM_ORDER_KIND
#define OPENMP_ATOMIC_DEFAULT_MEM_ORDER_KIND(Name)
#endif
#ifndef OPENMP_DEFAULTMAP_MODIFIER
#define OPENMP_DEFAULTMAP_MODIFIER(Name)
#endif
#ifndef OPENMP_DEVICE_TYPE_KIND
#define OPENMP_DEVICE_TYPE_KIND(Name)
#endif
#ifndef OPENMP_LASTPRIVATE_KIND
#define OPENMP_LASTPRIVATE_KIND(Name)
#endif
#ifndef OPENMP_ORDER_KIND
#define OPENMP_ORDER_KIND(Name)
#endif
#ifndef OPENMP_DEVICE_MODIFIER
#define OPENMP_DEVICE_MODIFIER(Name)
#endif
#ifndef OPENMP_REDUCTION_MODIFIER
#define OPENMP_REDUCTION_MODIFIER(Name)
#endif


#if INTEL_CUSTOMIZATION
// OpenMP directives in the -qopenmp-simd subset
#ifndef OPENMP_DIRECTIVE_SIMD_SUBSET
#define OPENMP_DIRECTIVE_SIMD_SUBSET(Name)
#endif
OPENMP_DIRECTIVE_SIMD_SUBSET(simd)
OPENMP_DIRECTIVE_SIMD_SUBSET(declare_simd)

// OpenMP directives in the -qopenmp-tbb subset
#ifndef OPENMP_DIRECTIVE_TBB_SUBSET
#define OPENMP_DIRECTIVE_TBB_SUBSET(Name)
#endif
OPENMP_DIRECTIVE_TBB_SUBSET(simd)
OPENMP_DIRECTIVE_TBB_SUBSET(declare_simd)
OPENMP_DIRECTIVE_TBB_SUBSET(taskloop)

// OpenMP directives in the Spir subset
#ifndef OPENMP_DIRECTIVE_SPIR_SUBSET
#define OPENMP_DIRECTIVE_SPIR_SUBSET(Name)
#endif
OPENMP_DIRECTIVE_SPIR_SUBSET(critical)
OPENMP_DIRECTIVE_SPIR_SUBSET(declare_target)
OPENMP_DIRECTIVE_SPIR_SUBSET(declare_simd)
OPENMP_DIRECTIVE_SPIR_SUBSET(declare_reduction)
OPENMP_DIRECTIVE_SPIR_SUBSET(target)
OPENMP_DIRECTIVE_SPIR_SUBSET(target_teams)
OPENMP_DIRECTIVE_SPIR_SUBSET(target_teams_distribute)
OPENMP_DIRECTIVE_SPIR_SUBSET(target_teams_distribute_simd)
OPENMP_DIRECTIVE_SPIR_SUBSET(target_parallel)
OPENMP_DIRECTIVE_SPIR_SUBSET(target_parallel_for)
OPENMP_DIRECTIVE_SPIR_SUBSET(target_parallel_for_simd)
OPENMP_DIRECTIVE_SPIR_SUBSET(target_teams_distribute_parallel_for)
OPENMP_DIRECTIVE_SPIR_SUBSET(target_teams_distribute_parallel_for_simd)
OPENMP_DIRECTIVE_SPIR_SUBSET(target_variant_dispatch)
OPENMP_DIRECTIVE_SPIR_SUBSET(simd)
OPENMP_DIRECTIVE_SPIR_SUBSET(master)
OPENMP_DIRECTIVE_SPIR_SUBSET(atomic)
OPENMP_DIRECTIVE_SPIR_SUBSET(barrier)
OPENMP_DIRECTIVE_SPIR_SUBSET(parallel_for)
OPENMP_DIRECTIVE_SPIR_SUBSET(teams)
OPENMP_DIRECTIVE_SPIR_SUBSET(teams_distribute)
OPENMP_DIRECTIVE_SPIR_SUBSET(teams_distribute_parallel_for)
OPENMP_DIRECTIVE_SPIR_SUBSET(teams_distribute_parallel_for_simd)
OPENMP_DIRECTIVE_SPIR_SUBSET(teams_distribute_simd)
OPENMP_DIRECTIVE_SPIR_SUBSET(target_data)
OPENMP_DIRECTIVE_SPIR_SUBSET(target_update)
OPENMP_DIRECTIVE_SPIR_SUBSET(target_enter_data)
OPENMP_DIRECTIVE_SPIR_SUBSET(target_exit_data)
OPENMP_DIRECTIVE_SPIR_SUBSET(parallel)
OPENMP_DIRECTIVE_SPIR_SUBSET(single)
OPENMP_DIRECTIVE_SPIR_SUBSET(for)
OPENMP_DIRECTIVE_SPIR_SUBSET(for_simd)
OPENMP_DIRECTIVE_SPIR_SUBSET(parallel_for_simd)
OPENMP_DIRECTIVE_SPIR_SUBSET(distribute_parallel_for)
OPENMP_DIRECTIVE_SPIR_SUBSET(parallel_sections)
OPENMP_DIRECTIVE_SPIR_SUBSET(sections)
OPENMP_DIRECTIVE_SPIR_SUBSET(section)
OPENMP_DIRECTIVE_SPIR_SUBSET(target_simd)
OPENMP_DIRECTIVE_SPIR_SUBSET(distribute)
OPENMP_DIRECTIVE_SPIR_SUBSET(distribute_simd)
OPENMP_DIRECTIVE_SPIR_SUBSET(loop)
OPENMP_DIRECTIVE_SPIR_SUBSET(teams_loop)
OPENMP_DIRECTIVE_SPIR_SUBSET(target_teams_loop)
OPENMP_DIRECTIVE_SPIR_SUBSET(parallel_loop)
OPENMP_DIRECTIVE_SPIR_SUBSET(target_parallel_loop)
#endif // INTEL_CUSTOMIZATION

// Static attributes for 'schedule' clause.
OPENMP_SCHEDULE_KIND(static)
OPENMP_SCHEDULE_KIND(dynamic)
OPENMP_SCHEDULE_KIND(guided)
OPENMP_SCHEDULE_KIND(auto)
OPENMP_SCHEDULE_KIND(runtime)

// Modifiers for 'schedule' clause.
OPENMP_SCHEDULE_MODIFIER(monotonic)
OPENMP_SCHEDULE_MODIFIER(nonmonotonic)
OPENMP_SCHEDULE_MODIFIER(simd)

#if INTEL_CUSTOMIZATION
#if INTEL_FEATURE_CSA
// Modifiers for 'dataflow' clause.
OPENMP_DATAFLOW_MODIFIER(num_workers)
OPENMP_DATAFLOW_MODIFIER(static)
OPENMP_DATAFLOW_MODIFIER(pipeline)
#endif // INTEL_FEATURE_CSA
#endif // INTEL_CUSTOMIZATION

// Modifiers for 'device' clause.
OPENMP_DEVICE_MODIFIER(ancestor)
OPENMP_DEVICE_MODIFIER(device_num)

// Static attributes for 'defaultmap' clause.
OPENMP_DEFAULTMAP_KIND(scalar)
OPENMP_DEFAULTMAP_KIND(aggregate)
OPENMP_DEFAULTMAP_KIND(pointer)

// Modifiers for 'defaultmap' clause.
OPENMP_DEFAULTMAP_MODIFIER(alloc)
OPENMP_DEFAULTMAP_MODIFIER(to)
OPENMP_DEFAULTMAP_MODIFIER(from)
OPENMP_DEFAULTMAP_MODIFIER(tofrom)
OPENMP_DEFAULTMAP_MODIFIER(firstprivate)
OPENMP_DEFAULTMAP_MODIFIER(none)
OPENMP_DEFAULTMAP_MODIFIER(default)
OPENMP_DEFAULTMAP_MODIFIER(present)

// Static attributes for 'depend' clause.
OPENMP_DEPEND_KIND(in)
OPENMP_DEPEND_KIND(out)
OPENMP_DEPEND_KIND(inout)
OPENMP_DEPEND_KIND(mutexinoutset)
OPENMP_DEPEND_KIND(depobj)
OPENMP_DEPEND_KIND(source)
OPENMP_DEPEND_KIND(sink)

// Modifiers for 'linear' clause.
OPENMP_LINEAR_KIND(val)
OPENMP_LINEAR_KIND(ref)
OPENMP_LINEAR_KIND(uval)

// Modifiers for 'atomic_default_mem_order' clause.
OPENMP_ATOMIC_DEFAULT_MEM_ORDER_KIND(seq_cst)
OPENMP_ATOMIC_DEFAULT_MEM_ORDER_KIND(acq_rel)
OPENMP_ATOMIC_DEFAULT_MEM_ORDER_KIND(relaxed)

// Map types for 'map' clause.
OPENMP_MAP_KIND(alloc)
OPENMP_MAP_KIND(to)
OPENMP_MAP_KIND(from)
OPENMP_MAP_KIND(tofrom)
OPENMP_MAP_KIND(delete)
OPENMP_MAP_KIND(release)

// Map-type-modifiers for 'map' clause.
OPENMP_MAP_MODIFIER_KIND(always)
OPENMP_MAP_MODIFIER_KIND(close)
OPENMP_MAP_MODIFIER_KIND(mapper)
OPENMP_MAP_MODIFIER_KIND(present)

// Modifiers for 'to' or 'from' clause.
OPENMP_MOTION_MODIFIER_KIND(mapper)
OPENMP_MOTION_MODIFIER_KIND(present)

// Static attributes for 'dist_schedule' clause.
OPENMP_DIST_SCHEDULE_KIND(static)

// Device types for 'device_type' clause.
OPENMP_DEVICE_TYPE_KIND(host)
OPENMP_DEVICE_TYPE_KIND(nohost)
OPENMP_DEVICE_TYPE_KIND(any)

// Type of the 'lastprivate' clause.
OPENMP_LASTPRIVATE_KIND(conditional)

// Type of the 'order' clause.
OPENMP_ORDER_KIND(concurrent)

// Modifiers for 'reduction' clause.
OPENMP_REDUCTION_MODIFIER(default)
OPENMP_REDUCTION_MODIFIER(inscan)
OPENMP_REDUCTION_MODIFIER(task)

#undef OPENMP_REDUCTION_MODIFIER
#undef OPENMP_DEVICE_MODIFIER
#undef OPENMP_ORDER_KIND
#undef OPENMP_LASTPRIVATE_KIND
#undef OPENMP_DEVICE_TYPE_KIND
#undef OPENMP_LINEAR_KIND
#undef OPENMP_DEPEND_KIND
#undef OPENMP_SCHEDULE_MODIFIER
#if INTEL_CUSTOMIZATION
#if INTEL_FEATURE_CSA
#undef OPENMP_DATAFLOW_MODIFIER
#endif // INTEL_FEATURE_CSA
#endif // INTEL_CUSTOMIZATION
#undef OPENMP_SCHEDULE_KIND
#if INTEL_CUSTOMIZATION
#undef OPENMP_DIRECTIVE_SIMD_SUBSET
#undef OPENMP_DIRECTIVE_TBB_SUBSET
#undef OPENMP_DIRECTIVE_SPIR_SUBSET
#endif // INTEL_CUSTOMIZATION
#undef OPENMP_ATOMIC_DEFAULT_MEM_ORDER_KIND
#undef OPENMP_MAP_KIND
#undef OPENMP_MAP_MODIFIER_KIND
#undef OPENMP_MOTION_MODIFIER_KIND
#undef OPENMP_DIST_SCHEDULE_KIND
#undef OPENMP_DEFAULTMAP_KIND
#undef OPENMP_DEFAULTMAP_MODIFIER

