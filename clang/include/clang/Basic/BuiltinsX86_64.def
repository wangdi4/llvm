//===--- BuiltinsX86_64.def - X86-64 Builtin function database --*- C++ -*-===//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//
//
// This file defines the X86-64-specific builtin function database. Users of
// this file must define the BUILTIN macro to make use of this information.
//
//===----------------------------------------------------------------------===//

// The format of this database matches clang/Basic/Builtins.def.
#if INTEL_CUSTOMIZATION
#if defined(BUILTIN) && !defined(LANGBUILTIN)
#  define LANGBUILTIN(ID, TYPE, ATTRS, BUILTIN_LANG) BUILTIN(ID, TYPE, ATTRS)
#endif
#endif // INTEL_CUSTOMIZATION

#if defined(BUILTIN) && !defined(TARGET_BUILTIN)
#   define TARGET_BUILTIN(ID, TYPE, ATTRS, FEATURE) BUILTIN(ID, TYPE, ATTRS)
#endif

#if defined(BUILTIN) && !defined(TARGET_HEADER_BUILTIN)
#  define TARGET_HEADER_BUILTIN(ID, TYPE, ATTRS, HEADER, LANG, FEATURE) BUILTIN(ID, TYPE, ATTRS)
#endif

TARGET_HEADER_BUILTIN(_BitScanForward64, "UcUNi*ULLi", "nh", "intrin.h", ALL_MS_LANGUAGES, "")
TARGET_HEADER_BUILTIN(_BitScanReverse64, "UcUNi*ULLi", "nh", "intrin.h", ALL_MS_LANGUAGES, "")

TARGET_HEADER_BUILTIN(__mulh,  "LLiLLiLLi",    "nch", "intrin.h", ALL_MS_LANGUAGES, "")
TARGET_HEADER_BUILTIN(__umulh, "ULLiULLiULLi", "nch", "intrin.h", ALL_MS_LANGUAGES, "")
TARGET_HEADER_BUILTIN(_mul128, "LLiLLiLLiLLi*",      "nch",   "intrin.h", ALL_MS_LANGUAGES, "")
TARGET_HEADER_BUILTIN(_umul128, "ULLiULLiULLiULLi*", "nch",   "intrin.h", ALL_MS_LANGUAGES, "")

TARGET_HEADER_BUILTIN(__faststorefence, "v", "nh", "intrin.h", ALL_MS_LANGUAGES, "")
TARGET_HEADER_BUILTIN(__shiftleft128, "ULLiULLiULLiUc", "nch", "intrin.h", ALL_MS_LANGUAGES, "")
TARGET_HEADER_BUILTIN(__shiftright128, "ULLiULLiULLiUc", "nch", "intrin.h", ALL_MS_LANGUAGES, "")

TARGET_HEADER_BUILTIN(_InterlockedCompareExchange128, "UcLLiD*LLiLLiLLi*", "nh", "intrin.h", ALL_MS_LANGUAGES, "cx16")

TARGET_BUILTIN(__builtin_ia32_readeflags_u64, "UOi", "n", "")
TARGET_BUILTIN(__builtin_ia32_writeeflags_u64, "vUOi", "n", "")
TARGET_BUILTIN(__builtin_ia32_cvtss2si64, "OiV4f", "ncV:128:", "sse")
TARGET_BUILTIN(__builtin_ia32_cvttss2si64, "OiV4f", "ncV:128:", "sse")
TARGET_BUILTIN(__builtin_ia32_cvtsd2si64, "OiV2d", "ncV:128:", "sse2")
TARGET_BUILTIN(__builtin_ia32_cvttsd2si64, "OiV2d", "ncV:128:", "sse2")
TARGET_BUILTIN(__builtin_ia32_movnti64, "vOi*Oi", "n", "sse2")
TARGET_BUILTIN(__builtin_ia32_vec_ext_v2di, "OiV2OiIi", "ncV:128:", "sse2")
TARGET_BUILTIN(__builtin_ia32_vec_set_v2di, "V2OiV2OiOiIi", "ncV:128:", "sse4.1")
TARGET_BUILTIN(__builtin_ia32_crc32di, "UOiUOiUOi", "nc", "sse4.2")
TARGET_BUILTIN(__builtin_ia32_vec_ext_v4di, "OiV4OiIi", "ncV:256:", "avx")
TARGET_BUILTIN(__builtin_ia32_vec_set_v4di, "V4OiV4OiOiIi", "ncV:256:", "avx")
TARGET_BUILTIN(__builtin_ia32_rdfsbase32, "Ui", "n", "fsgsbase")
TARGET_BUILTIN(__builtin_ia32_rdfsbase64, "UOi", "n", "fsgsbase")
TARGET_BUILTIN(__builtin_ia32_rdgsbase32, "Ui", "n", "fsgsbase")
TARGET_BUILTIN(__builtin_ia32_rdgsbase64, "UOi", "n", "fsgsbase")
TARGET_BUILTIN(__builtin_ia32_wrfsbase32, "vUi", "n", "fsgsbase")
TARGET_BUILTIN(__builtin_ia32_wrfsbase64, "vUOi", "n", "fsgsbase")
TARGET_BUILTIN(__builtin_ia32_wrgsbase32, "vUi", "n", "fsgsbase")
TARGET_BUILTIN(__builtin_ia32_wrgsbase64, "vUOi", "n", "fsgsbase")
TARGET_BUILTIN(__builtin_ia32_fxrstor64, "vv*", "n", "fxsr")
TARGET_BUILTIN(__builtin_ia32_fxsave64, "vv*", "n", "fxsr")
TARGET_BUILTIN(__builtin_ia32_xsave64, "vv*UOi", "n", "xsave")
TARGET_BUILTIN(__builtin_ia32_xrstor64, "vv*UOi", "n", "xsave")
TARGET_BUILTIN(__builtin_ia32_xsaveopt64, "vv*UOi", "n", "xsaveopt")
TARGET_BUILTIN(__builtin_ia32_xrstors64, "vv*UOi", "n", "xsaves")
TARGET_BUILTIN(__builtin_ia32_xsavec64, "vv*UOi", "n", "xsavec")
TARGET_BUILTIN(__builtin_ia32_xsaves64, "vv*UOi", "n", "xsaves")
TARGET_BUILTIN(__builtin_ia32_incsspq, "vUOi", "n", "shstk")
TARGET_BUILTIN(__builtin_ia32_rdsspq, "UOiUOi", "n", "shstk")
TARGET_BUILTIN(__builtin_ia32_wrssq, "vUOiv*", "n", "shstk")
TARGET_BUILTIN(__builtin_ia32_wrussq, "vUOiv*", "n", "shstk")
TARGET_BUILTIN(__builtin_ia32_addcarryx_u64, "UcUcUOiUOiUOi*", "n", "")
TARGET_BUILTIN(__builtin_ia32_subborrow_u64, "UcUcUOiUOiUOi*", "n", "")
TARGET_BUILTIN(__builtin_ia32_rdrand64_step, "UiUOi*", "n", "rdrnd")
TARGET_BUILTIN(__builtin_ia32_rdseed64_step, "UiUOi*", "n", "rdseed")
TARGET_BUILTIN(__builtin_ia32_lzcnt_u64, "UOiUOi", "nc", "lzcnt")
TARGET_BUILTIN(__builtin_ia32_bextr_u64, "UOiUOiUOi", "nc", "bmi")
TARGET_BUILTIN(__builtin_ia32_tzcnt_u64, "UOiUOi", "nc", "")
TARGET_BUILTIN(__builtin_ia32_bzhi_di, "UOiUOiUOi", "nc", "bmi2")
TARGET_BUILTIN(__builtin_ia32_pdep_di, "UOiUOiUOi", "nc", "bmi2")
TARGET_BUILTIN(__builtin_ia32_pext_di, "UOiUOiUOi", "nc", "bmi2")
TARGET_BUILTIN(__builtin_ia32_bextri_u64, "UOiUOiIUOi", "nc", "tbm")
TARGET_BUILTIN(__builtin_ia32_lwpins64, "UcUOiUiIUi", "n", "lwp")
TARGET_BUILTIN(__builtin_ia32_lwpval64, "vUOiUiIUi", "n", "lwp")
TARGET_BUILTIN(__builtin_ia32_vcvtsd2si64, "OiV2dIi", "ncV:128:", "avx512f")
TARGET_BUILTIN(__builtin_ia32_vcvtsd2usi64, "UOiV2dIi", "ncV:128:", "avx512f")
TARGET_BUILTIN(__builtin_ia32_vcvtss2si64, "OiV4fIi", "ncV:128:", "avx512f")
TARGET_BUILTIN(__builtin_ia32_vcvtss2usi64, "UOiV4fIi", "ncV:128:", "avx512f")
TARGET_BUILTIN(__builtin_ia32_vcvttsd2si64, "OiV2dIi", "ncV:128:", "avx512f")
TARGET_BUILTIN(__builtin_ia32_vcvttsd2usi64, "UOiV2dIi", "ncV:128:", "avx512f")
TARGET_BUILTIN(__builtin_ia32_vcvttss2si64, "OiV4fIi", "ncV:128:", "avx512f")
TARGET_BUILTIN(__builtin_ia32_vcvttss2usi64, "UOiV4fIi", "ncV:128:", "avx512f")
TARGET_BUILTIN(__builtin_ia32_cvtsi2sd64, "V2dV2dOiIi", "ncV:128:", "avx512f")
TARGET_BUILTIN(__builtin_ia32_cvtsi2ss64, "V4fV4fOiIi", "ncV:128:", "avx512f")
TARGET_BUILTIN(__builtin_ia32_cvtusi2sd64, "V2dV2dUOiIi", "ncV:128:", "avx512f")
TARGET_BUILTIN(__builtin_ia32_cvtusi2ss64, "V4fV4fUOiIi", "ncV:128:", "avx512f")
#if INTEL_CUSTOMIZATION
#if INTEL_FEATURE_ISA_FP16
TARGET_BUILTIN(__builtin_ia32_vcvtsh2si64, "OiV8gIi", "ncV:128:", "avx512fp16")
TARGET_BUILTIN(__builtin_ia32_vcvtsh2usi64, "UOiV8gIi", "ncV:128:", "avx512fp16")
TARGET_BUILTIN(__builtin_ia32_vcvtusi642sh, "V8gV8gUOiIi", "ncV:128:", "avx512fp16")
TARGET_BUILTIN(__builtin_ia32_vcvtsi642sh, "V8gV8gOiIi", "ncV:128:", "avx512fp16")
TARGET_BUILTIN(__builtin_ia32_vcvttsh2si64, "OiV8gIi", "ncV:128:", "avx512fp16")
TARGET_BUILTIN(__builtin_ia32_vcvttsh2usi64, "UOiV8gIi", "ncV:128:", "avx512fp16")
#endif // INTEL_FEATURE_ISA_FP16

#if INTEL_FEATURE_ISA_AVX_MEMADVISE
// FIXME: Remove the undisclosed target feature if needed.
TARGET_BUILTIN(__builtin_ia32_vmovadvisew_load_128, "V4iV4iC*Ic", "nV:128:", "avx512memadvise,avx512vl|avxmemadvise")
TARGET_BUILTIN(__builtin_ia32_vmovadvisew_store_128, "vV4i*V4iIc", "nV:128:", "avx512memadvise,avx512vl|avxmemadvise")
TARGET_BUILTIN(__builtin_ia32_vmovadvisew_load_256, "V8iV8iC*Ic", "nV:256:", "avx512memadvise,avx512vl|avxmemadvise")
TARGET_BUILTIN(__builtin_ia32_vmovadvisew_store_256, "vV8i*V8iIc", "nV:256:", "avx512memadvise,avx512vl|avxmemadvise")
TARGET_BUILTIN(__builtin_ia32_vmovadvisew_load_512, "V16iV16iC*Ic", "nV:512:", "avx512memadvise")
TARGET_BUILTIN(__builtin_ia32_vmovadvisew_store_512, "vV16i*V16iIc", "nV:512:", "avx512memadvise")

TARGET_BUILTIN(__builtin_ia32_vmemadvise_128, "vV16cC*Ic", "nc", "avx512memadvise,avx512vl|avxmemadvise")
TARGET_BUILTIN(__builtin_ia32_vmemadvise_256, "vV32cC*Ic", "nc", "avx512memadvise,avx512vl|avxmemadvise")
TARGET_BUILTIN(__builtin_ia32_vmemadvise_512, "vV64cC*Ic", "nc", "avx512memadvise")
#endif // INTEL_FEATURE_ISA_AVX_MEMADVISE
#endif // INTEL_CUSTOMIZATION
TARGET_BUILTIN(__builtin_ia32_directstore_u64, "vULi*ULi", "n", "movdiri")

// UINTR
TARGET_BUILTIN(__builtin_ia32_clui, "v", "n", "uintr")
TARGET_BUILTIN(__builtin_ia32_stui, "v", "n", "uintr")
TARGET_BUILTIN(__builtin_ia32_testui, "Uc", "n", "uintr")
TARGET_BUILTIN(__builtin_ia32_senduipi, "vUWi", "n", "uintr")

// AMX internal builtin
TARGET_BUILTIN(__builtin_ia32_tileloadd64_internal, "V256iUsUsvC*z", "n", "amx-tile")
TARGET_BUILTIN(__builtin_ia32_tdpbssd_internal, "V256iUsUsUsV256iV256iV256i", "n", "amx-int8")
TARGET_BUILTIN(__builtin_ia32_tilestored64_internal, "vUsUsv*zV256i", "n", "amx-tile")
// AMX
TARGET_BUILTIN(__builtin_ia32_tile_loadconfig, "vvC*", "n", "amx-tile")
TARGET_BUILTIN(__builtin_ia32_tile_storeconfig, "vvC*", "n", "amx-tile")
TARGET_BUILTIN(__builtin_ia32_tilerelease, "v", "n", "amx-tile")
TARGET_BUILTIN(__builtin_ia32_tilezero, "vUc", "n", "amx-tile")

TARGET_BUILTIN(__builtin_ia32_tileloadd64, "vIUcvC*z", "n", "amx-tile")
TARGET_BUILTIN(__builtin_ia32_tileloaddt164, "vIUcvC*z", "n", "amx-tile")
TARGET_BUILTIN(__builtin_ia32_tilestored64, "vIUcv*z", "n", "amx-tile")

TARGET_BUILTIN(__builtin_ia32_tdpbssd, "vIUcIUcIUc", "n", "amx-int8")
TARGET_BUILTIN(__builtin_ia32_tdpbsud, "vIUcIUcIUc", "n", "amx-int8")
TARGET_BUILTIN(__builtin_ia32_tdpbusd, "vIUcIUcIUc", "n", "amx-int8")
TARGET_BUILTIN(__builtin_ia32_tdpbuud, "vIUcIUcIUc", "n", "amx-int8")
TARGET_BUILTIN(__builtin_ia32_tdpbf16ps, "vIUcIUcIUc", "n", "amx-bf16")
TARGET_BUILTIN(__builtin_ia32_ptwrite64, "vUOi", "n", "ptwrite")

#if INTEL_CUSTOMIZATION
#if INTEL_FEATURE_ISA_AMX_BF8
TARGET_BUILTIN(__builtin_ia32_tdpbf8ps, "vIUcIUcIUc", "n", "amx-bf8")
#endif // INTEL_FEATURE_ISA_AMX_BF8

#if INTEL_FEATURE_ISA_AMX_MEMADVISE
TARGET_BUILTIN(__builtin_ia32_tmovadvise_load, "vIUcvC*zIc", "n", "amx-memadvise")
TARGET_BUILTIN(__builtin_ia32_tmovadvise_store, "vv*zIUcIc", "n", "amx-memadvise")
TARGET_BUILTIN(__builtin_ia32_t2rpntlvwz0advise, "vIUcvC*zIUi", "n", "amx-memadvise")
TARGET_BUILTIN(__builtin_ia32_t2rpntlvwz1advise, "vIUcvC*zIUi", "n", "amx-memadvise")
#endif // INTEL_FEATURE_ISA_AMX_MEMADVISE

#if INTEL_FEATURE_ISA_AMX_MEMADVISE_EVEX
TARGET_BUILTIN(__builtin_ia32_t2rpntlvwz0advisee, "vIUcvC*zIUi", "n", "amx-memadvise-evex")
TARGET_BUILTIN(__builtin_ia32_t2rpntlvwz1advisee, "vIUcvC*zIUi", "n", "amx-memadvise-evex")
#endif // INTEL_FEATURE_ISA_AMX_MEMADVISE_EVEX

#if INTEL_FEATURE_ISA_AMX_FUTURE
// AMX_FUTURE Reduce
TARGET_BUILTIN(__builtin_ia32_tcoladdbcastps, "vIUcIUc", "n", "amx-reduce")
TARGET_BUILTIN(__builtin_ia32_tcoladdps, "vv*IUc", "n", "amx-reduce")
// AMX_FUTURE Memory
TARGET_BUILTIN(__builtin_ia32_tgatherrowd, "vIUcvC*vC*", "n", "amx-memory")
TARGET_BUILTIN(__builtin_ia32_tgatherrowdt1, "vIUcvC*vC*", "n", "amx-memory")
TARGET_BUILTIN(__builtin_ia32_tgatherrowq, "vIUcvC*vC*", "n", "amx-memory")
TARGET_BUILTIN(__builtin_ia32_tgatherrowqt1, "vIUcvC*vC*", "n", "amx-memory")
TARGET_BUILTIN(__builtin_ia32_tscatterrowd, "vv*v*IUc", "n", "amx-memory")
TARGET_BUILTIN(__builtin_ia32_tscatterrowdt1, "vv*v*IUc", "n", "amx-memory")
TARGET_BUILTIN(__builtin_ia32_tscatterrowq, "vv*v*IUc", "n", "amx-memory")
TARGET_BUILTIN(__builtin_ia32_tscatterrowqt1, "vv*v*IUc", "n", "amx-memory")
// AMX_FUTURE Format
TARGET_BUILTIN(__builtin_ia32_tblendvd, "vIUcIUcIUc", "n", "amx-format")
TARGET_BUILTIN(__builtin_ia32_tinterleaveeb, "vIUcIUcIUc", "n", "amx-format")
TARGET_BUILTIN(__builtin_ia32_tinterleaveew, "vIUcIUcIUc", "n", "amx-format")
TARGET_BUILTIN(__builtin_ia32_tinterleaveob, "vIUcIUcIUc", "n", "amx-format")
TARGET_BUILTIN(__builtin_ia32_tinterleaveow, "vIUcIUcIUc", "n", "amx-format")
TARGET_BUILTIN(__builtin_ia32_tnarrowb, "vIUcIUcIc", "n", "amx-format")
TARGET_BUILTIN(__builtin_ia32_tnarroww, "vIUcIUcIc", "n", "amx-format")
TARGET_BUILTIN(__builtin_ia32_tpermb_reg, "vIUcIUcIUc", "n", "amx-format")
TARGET_BUILTIN(__builtin_ia32_tpermb_mem, "vIUcIUcvC*", "n", "amx-format")
TARGET_BUILTIN(__builtin_ia32_tpermd_reg, "vIUcIUcIUc", "n", "amx-format")
TARGET_BUILTIN(__builtin_ia32_tpermd_mem, "vIUcIUcvC*", "n", "amx-format")
TARGET_BUILTIN(__builtin_ia32_tpermw_reg, "vIUcIUcIUc", "n", "amx-format")
TARGET_BUILTIN(__builtin_ia32_tpermw_mem, "vIUcIUcvC*", "n", "amx-format")
TARGET_BUILTIN(__builtin_ia32_twidenb, "vIUcIUcIc", "n", "amx-format")
TARGET_BUILTIN(__builtin_ia32_twidenw, "vIUcIUcIc", "n", "amx-format")
// AMX_FUTURE Element
TARGET_BUILTIN(__builtin_ia32_taddps_reg, "vIUcIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_taddps_mem, "vIUcIUcvC*", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tandd_reg, "vIUcIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tandd_mem, "vIUcIUcvC*", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tandnd_reg, "vIUcIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tandnd_mem, "vIUcIUcvC*", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tcmpps_reg, "vIUcIUcIUcIc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tcmpps_mem, "vIUcIUcvC*Ic", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tcvtb2ps, "vIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tcvtbf162ps, "vIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tcvtd2ps, "vIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tcvtps2bf16, "vIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tcvtps2bs, "vIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tcvtps2ubs, "vIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tcvtub2ps, "vIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tfmaddps_reg, "vIUcIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tfmaddps_mem, "vIUcIUcvC*", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tfmsubps_reg, "vIUcIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tfmsubps_mem, "vIUcIUcvC*", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tfnmaddps_reg, "vIUcIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tfnmaddps_mem, "vIUcIUcvC*", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tfnmsubps_reg, "vIUcIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tfnmsubps_mem, "vIUcIUcvC*", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tmaxps_reg, "vIUcIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tmaxps_mem, "vIUcIUcvC*", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tminps_reg, "vIUcIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tminps_mem, "vIUcIUcvC*", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tmulps_reg, "vIUcIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tmulps_mem, "vIUcIUcvC*", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tord_reg, "vIUcIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tord_mem, "vIUcIUcvC*", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_trcp14ps, "vIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_treduceps, "vIUcIUcIc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tscalefps_reg, "vIUcIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tscalefps_mem, "vIUcIUcvC*", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tslld, "vIUcIUcIc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tsrld, "vIUcIUcIc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tsrlvd_reg, "vIUcIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tsrlvd_mem, "vIUcIUcvC*", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tsubps_reg, "vIUcIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tsubps_mem, "vIUcIUcvC*", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_txord_reg, "vIUcIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_txord_mem, "vIUcIUcvC*", "n", "amx-element")
#endif // INTEL_FEATURE_ISA_AMX_FUTURE

#if INTEL_FEATURE_ISA_AMX_LNC
// AMX_LNC Transpose
TARGET_BUILTIN(__builtin_ia32_t2rpntlvw, "vIUcvC*zULLi", "n",
               "amx-transpose")
TARGET_BUILTIN(__builtin_ia32_t2rpntlvwt1, "vIUcvC*zULLi", "n",
               "amx-transpose")
TARGET_BUILTIN(__builtin_ia32_t2rpntlvwz0, "vIUcvC*z", "n", "amx-transpose")
TARGET_BUILTIN(__builtin_ia32_t2rpntlvwz0t1, "vIUcvC*z", "n","amx-transpose")
TARGET_BUILTIN(__builtin_ia32_t2rpntlvwz1, "vIUcvC*z", "n", "amx-transpose")
TARGET_BUILTIN(__builtin_ia32_t2rpntlvwz1t1, "vIUcvC*z", "n","amx-transpose")
TARGET_BUILTIN(__builtin_ia32_ttdpbf16ps, "vIUcIUcIUc", "n", "amx-transpose")
TARGET_BUILTIN(__builtin_ia32_ttdpfp16ps, "vIUcIUcIUc", "n", "amx-transpose")
TARGET_BUILTIN(__builtin_ia32_ttransposed, "vIUcIUc", "n", "amx-transpose")

// AMX_LNC AVX512
TARGET_BUILTIN(__builtin_ia32_tile16move, "vIUcV16fV16fV16fV16fV16fV16fV16fV16fV16fV16fV16fV16fV16fV16fV16fV16f", "n", "amx-avx512")
TARGET_BUILTIN(__builtin_ia32_tilemovei, "V16fIUcIUc", "n", "amx-avx512")
TARGET_BUILTIN(__builtin_ia32_tilemovee, "V16fIUcUi", "n", "amx-avx512")
TARGET_BUILTIN(__builtin_ia32_tilemovex, "V16fIUcV4f", "n", "amx-avx512")
TARGET_BUILTIN(__builtin_ia32_tcvtrowd2psei, "V16fIUcIi", "n", "amx-avx512")
TARGET_BUILTIN(__builtin_ia32_tcvtrowd2psee, "V16fIUcUi", "n", "amx-avx512")
TARGET_BUILTIN(__builtin_ia32_tcvtrowps2bf16ei, "V16iIUcIi", "n", "amx-avx512")
TARGET_BUILTIN(__builtin_ia32_tcvtrowps2bf16ee, "V16iIUcUi", "n", "amx-avx512")
TARGET_BUILTIN(__builtin_ia32_tcvtrowps2phei, "V16fIUcIi", "n", "amx-avx512")
TARGET_BUILTIN(__builtin_ia32_tcvtrowps2phee, "V16fIUcUi", "n", "amx-avx512")

#endif // INTEL_FEATURE_ISA_AMX_LNC

#if INTEL_FEATURE_ISA_AMX_FP16
// AMX_FP16 FP16
TARGET_BUILTIN(__builtin_ia32_tdpfp16ps, "vIUcIUcIUc", "n", "amx-fp16")
#endif // INTEL_FEATURE_ISA_AMX_FP16

#if INTEL_FEATURE_ISA_AMX_MEMORY2
TARGET_BUILTIN(__builtin_ia32_tbroadcastrowd, "vIUcvC*", "n", "amx-memory2")
TARGET_BUILTIN(__builtin_ia32_tstorehd, "vv*zIUc", "n", "amx-memory2")
TARGET_BUILTIN(__builtin_ia32_tstorehdt1, "vv*zIUc", "n", "amx-memory2")
TARGET_BUILTIN(__builtin_ia32_tstorentd, "vv*zIUc", "n", "amx-memory2")
TARGET_BUILTIN(__builtin_ia32_tstoreqd, "vv*zIUc", "n", "amx-memory2")
TARGET_BUILTIN(__builtin_ia32_tstoreqdt1, "vv*zIUc", "n", "amx-memory2")
TARGET_BUILTIN(__builtin_ia32_tstorerowd, "vv*IUc", "n", "amx-memory2")
#endif // INTEL_FEATURE_ISA_AMX_MEMORY2

#if INTEL_FEATURE_ISA_AMX_BF16_EVEX
// AMX BF16-EVEX
TARGET_BUILTIN(__builtin_ia32_tdpbf16pse, "vIUcIUcIUc", "n", "amx-bf16-evex")
#endif // INTEL_FEATURE_ISA_AMX_BF16_EVEX

#if INTEL_FEATURE_ISA_AMX_ELEMENT_EVEX
// AMX_ELEMENT-EVEX
TARGET_BUILTIN(__builtin_ia32_tcvtd2pse, "vv*zIUc", "n", "amx-element-evex")
#endif // INTEL_FEATURE_ISA_AMX_ELEMENT_EVEX

#if INTEL_FEATURE_ISA_AMX_INT8_EVEX
// AMX INT8-EVEX
TARGET_BUILTIN(__builtin_ia32_tdpbssde, "vIUcIUcIUc", "n", "amx-int8-evex")
TARGET_BUILTIN(__builtin_ia32_tdpbsude, "vIUcIUcIUc", "n", "amx-int8-evex")
TARGET_BUILTIN(__builtin_ia32_tdpbusde, "vIUcIUcIUc", "n", "amx-int8-evex")
TARGET_BUILTIN(__builtin_ia32_tdpbuude, "vIUcIUcIUc", "n", "amx-int8-evex")
#endif // INTEL_FEATURE_ISA_AMX_INT8_EVEX

#if INTEL_FEATURE_ISA_AMX_TILE_EVEX
// AMX TILE-EVEX
TARGET_BUILTIN(__builtin_ia32_tileloadde64, "vIUcvC*z", "n", "amx-tile-evex")
TARGET_BUILTIN(__builtin_ia32_tileloaddt1e64, "vIUcvC*z", "n", "amx-tile-evex")
TARGET_BUILTIN(__builtin_ia32_tilemove, "vIUcIUc", "n", "amx-tile-evex")
TARGET_BUILTIN(__builtin_ia32_tilestorede64, "vIUcv*z", "n", "amx-tile-evex")
TARGET_BUILTIN(__builtin_ia32_tilezeroe, "vUc", "n", "amx-tile-evex")
#endif // INTEL_FEATURE_ISA_AMX_TILE_EVEX

#if INTEL_FEATURE_ISA_AMX_TRANSPOSE2
// AMX_TRANSPOSE2 Transpose
TARGET_BUILTIN(__builtin_ia32_t2transposew, "vIUcvC*zULLi", "n",
               "amx-transpose2")
TARGET_BUILTIN(__builtin_ia32_t2transposewt1, "vIUcvC*zULLi", "n",
               "amx-transpose2")
TARGET_BUILTIN(__builtin_ia32_t4rqntlvbz0, "vIUcvC*z", "n",
               "amx-transpose2")
TARGET_BUILTIN(__builtin_ia32_t4rqntlvbz0t1, "vIUcvC*z", "n",
               "amx-transpose2")
TARGET_BUILTIN(__builtin_ia32_t4rqntlvbz1, "vIUcvC*z", "n",
               "amx-transpose2")
TARGET_BUILTIN(__builtin_ia32_t4rqntlvbz1t1, "vIUcvC*z", "n",
               "amx-transpose2")
TARGET_BUILTIN(__builtin_ia32_t4rqntlvbz2, "vIUcvC*z", "n",
               "amx-transpose2")
TARGET_BUILTIN(__builtin_ia32_t4rqntlvbz2t1, "vIUcvC*z", "n",
               "amx-transpose2")
TARGET_BUILTIN(__builtin_ia32_t4rqntlvbz3, "vIUcvC*z", "n",
               "amx-transpose2")
TARGET_BUILTIN(__builtin_ia32_t4rqntlvbz3t1, "vIUcvC*z", "n",
               "amx-transpose2")
TARGET_BUILTIN(__builtin_ia32_ttdpbssd, "vIUcIUcIUc", "n", "amx-transpose2")
TARGET_BUILTIN(__builtin_ia32_ttdpbsud, "vIUcIUcIUc", "n", "amx-transpose2")
TARGET_BUILTIN(__builtin_ia32_ttdpbusd, "vIUcIUcIUc", "n", "amx-transpose2")
TARGET_BUILTIN(__builtin_ia32_ttdpbuud, "vIUcIUcIUc", "n", "amx-transpose2")
#endif // INTEL_FEATURE_ISA_AMX_TRANSPOSE2

#if INTEL_FEATURE_ISA_AMX_CONVERT
// AMX_CONVERT
TARGET_BUILTIN(__builtin_ia32_tcvt2ps2bf16, "vv*zIUcIUc", "n", "amx-convert")
TARGET_BUILTIN(__builtin_ia32_tcvt2ps2ph, "vv*zIUcIUc", "n", "amx-convert")
TARGET_BUILTIN(__builtin_ia32_amxconvert_tcvtd2ps, "vv*zIUc", "n", "amx-convert")
TARGET_BUILTIN(__builtin_ia32_amxconvert_tcvtps2bf16, "vv*zIUc", "n", "amx-convert")
TARGET_BUILTIN(__builtin_ia32_tcvtps2ph, "vv*zIUc", "n", "amx-convert")
#endif // INTEL_FEATURE_ISA_AMX_CONVERT

#if INTEL_FEATURE_ISA_AMX_TILE2
// AMX_TILE2
TARGET_BUILTIN(__builtin_ia32_tilemov, "vIUcIUc", "n", "amx-tile2")
#endif // INTEL_FEATURE_ISA_AMX_TILE2
#if INTEL_FEATURE_ISA_AMX_COMPLEX
TARGET_BUILTIN(__builtin_ia32_tcmmimfp16ps, "vIUcIUcIUc", "n", "amx-complex")
TARGET_BUILTIN(__builtin_ia32_tcmmrlfp16ps, "vIUcIUcIUc", "n", "amx-complex")
TARGET_BUILTIN(__builtin_ia32_tconjcmmimfp16ps, "vIUcIUcIUc", "n", "amx-complex")
TARGET_BUILTIN(__builtin_ia32_tconjfp16, "vIUcIUc", "n", "amx-complex")
TARGET_BUILTIN(__builtin_ia32_ttcmmimfp16ps, "vIUcIUcIUc", "n", "amx-complex")
TARGET_BUILTIN(__builtin_ia32_ttcmmrlfp16ps, "vIUcIUcIUc", "n", "amx-complex")
#endif // INTEL_FEATURE_ISA_AMX_COMPLEX
#if INTEL_FEATURE_ISA_AMX_COMPLEX_EVEX
TARGET_BUILTIN(__builtin_ia32_tcvtrowps2phiee, "V32gV32gIUcUi", "n", "amx-complex-evex")
TARGET_BUILTIN(__builtin_ia32_tcvtrowps2phiei, "V32gV32gIUcIUi", "n", "amx-complex-evex")
#endif // INTEL_FEATURE_ISA_AMX_COMPLEX_EVEX

#if INTEL_FEATURE_ISA_AMX_FP19
TARGET_BUILTIN(__builtin_ia32_tmmulfp19ps, "vIUcIUcIUc", "n", "amx-fp19")
TARGET_BUILTIN(__builtin_ia32_ttmmulfp19ps, "vIUcIUcIUc", "n", "amx-fp19")
#endif // INTEL_FEATURE_ISA_AMX_FP19
#endif // INTEL_CUSTOMIZATION

#if INTEL_CUSTOMIZATION
#if INTEL_FEATURE_ICECODE
TARGET_BUILTIN(__builtin_ia32_icecode_loadseg, "vvC*Ii", "n", "icecode-mode")
TARGET_BUILTIN(__builtin_ia32_icecode_storeseg, "vvC*Ii", "n", "icecode-mode")
TARGET_BUILTIN(__builtin_ia32_icecode_loadpphys_16, "UsULLi", "n", "icecode-mode")
TARGET_BUILTIN(__builtin_ia32_icecode_loadpphys_32, "UiULLi", "n", "icecode-mode")
TARGET_BUILTIN(__builtin_ia32_icecode_loadpphys_64, "ULLiULLi", "n", "icecode-mode")
TARGET_BUILTIN(__builtin_ia32_icecode_storepphys_16, "vUsULLi", "n", "icecode-mode")
TARGET_BUILTIN(__builtin_ia32_icecode_storepphys_32, "vUiULLi", "n", "icecode-mode")
TARGET_BUILTIN(__builtin_ia32_icecode_storepphys_64, "vULLiULLi", "n", "icecode-mode")

TARGET_BUILTIN(__builtin_ia32_icecode_creg_xchg_32, "UiUiUi", "n", "icecode-mode")
TARGET_BUILTIN(__builtin_ia32_icecode_creg_xchg_64, "ULLiUiULLi", "n", "icecode-mode")
TARGET_BUILTIN(__builtin_ia32_icecode_fscp_xchg_32, "UiUiUi", "n", "icecode-mode")
TARGET_BUILTIN(__builtin_ia32_icecode_fscp_xchg_64, "ULLiUiULLi", "n", "icecode-mode")

TARGET_BUILTIN(__builtin_ia32_icecode_creg_read_32, "UiUi", "n", "icecode-mode")
TARGET_BUILTIN(__builtin_ia32_icecode_creg_read_64, "ULLiUi", "n", "icecode-mode")
TARGET_BUILTIN(__builtin_ia32_icecode_fscp_read_32, "UiUi", "n", "icecode-mode")
TARGET_BUILTIN(__builtin_ia32_icecode_fscp_read_64, "ULLiUi", "n", "icecode-mode")

TARGET_BUILTIN(__builtin_ia32_icecode_creg_xchg_mt_32, "UiUiUi", "n", "icecode-mode")
TARGET_BUILTIN(__builtin_ia32_icecode_creg_xchg_mt_64, "ULLiUiULLi", "n", "icecode-mode")
TARGET_BUILTIN(__builtin_ia32_icecode_creg_read_mt_32, "UiUi", "n", "icecode-mode")
TARGET_BUILTIN(__builtin_ia32_icecode_creg_read_mt_64, "ULLiUi", "n", "icecode-mode")

TARGET_BUILTIN(__builtin_ia32_icecode_portin_8, "UcULLi", "n", "icecode-mode")
TARGET_BUILTIN(__builtin_ia32_icecode_portin_16, "UsULLi", "n", "icecode-mode")
TARGET_BUILTIN(__builtin_ia32_icecode_portin_32, "UiULLi", "n", "icecode-mode")
TARGET_BUILTIN(__builtin_ia32_icecode_portin_64, "ULLiULLi", "n", "icecode-mode")

TARGET_BUILTIN(__builtin_ia32_icecode_portout_8, "vUcULLi", "n", "icecode-mode")
TARGET_BUILTIN(__builtin_ia32_icecode_portout_16, "vUsULLi", "n", "icecode-mode")
TARGET_BUILTIN(__builtin_ia32_icecode_portout_32, "vUiULLi", "n", "icecode-mode")
TARGET_BUILTIN(__builtin_ia32_icecode_portout_64, "vULLiULLi", "n", "icecode-mode")

TARGET_BUILTIN(__builtin_ia32_icecode_sta_special, "vULLi", "n", "icecode-mode")
TARGET_BUILTIN(__builtin_ia32_icecode_nr_read, "UiIUi", "n", "icecode-mode")
TARGET_BUILTIN(__builtin_ia32_icecode_ucodecall, "vUi", "n", "icecode-mode")
TARGET_BUILTIN(__builtin_ia32_icecode_cmodemov, "ULLiULLiULLiIUi", "n", "icecode-mode")
TARGET_BUILTIN(__builtin_ia32_icecode_set_tracker, "vIUi", "n", "icecode-mode")
#endif // INTEL_FEATURE_ICECODE

#if INTEL_FEATURE_ISA_GPR_MOVGET
TARGET_BUILTIN(__builtin_ia32_movget64, "ULLiULLiC*", "n", "gprmovget")
#endif // INTEL_FEATURE_ISA_GPR_MOVGET

#if INTEL_FEATURE_ISA_MOVGET64B
TARGET_BUILTIN(__builtin_ia32_movget64b64, "ULLiV16UiC*", "nV:512:", "movget64b")
#endif // INTEL_FEATURE_ISA_MOVGET64B

#if INTEL_FEATURE_ISA_RAO_INT
TARGET_BUILTIN(__builtin_ia32_aadd64, "vv*SLLi", "n", "raoint")
TARGET_BUILTIN(__builtin_ia32_aand64, "vv*SLLi", "n", "raoint")
TARGET_BUILTIN(__builtin_ia32_aor64, "vv*SLLi", "n", "raoint")
TARGET_BUILTIN(__builtin_ia32_axor64, "vv*SLLi", "n", "raoint")
#endif // INTEL_FEATURE_ISA_RAO_INT
#endif // INTEL_CUSTOMIZATION

#if INTEL_CUSTOMIZATION
LANGBUILTIN(get_compute_id, "zi", "i", OCLC1X_LANG)
LANGBUILTIN(read_pipe, "i.", "tn", OCLC1X_LANG)
LANGBUILTIN(write_pipe, "i.", "tn", OCLC1X_LANG)
#undef LANGBUILTIN
#endif // INTEL_CUSTOMIZATION

#undef BUILTIN
#undef TARGET_BUILTIN
#undef TARGET_HEADER_BUILTIN
