//===--- BuiltinsX86_64.def - X86-64 Builtin function database --*- C++ -*-===//
// INTEL_CUSTOMIZATION
//
// INTEL CONFIDENTIAL
//
// Modifications, Copyright (C) 2021 Intel Corporation
//
// This software and the related documents are Intel copyrighted materials, and
// your use of them is governed by the express license under which they were
// provided to you ("License"). Unless the License provides otherwise, you may not
// use, modify, copy, publish, distribute, disclose or transmit this software or
// the related documents without Intel's prior written permission.
//
// This software and the related documents are provided as is, with no express
// or implied warranties, other than those that are expressly stated in the
// License.
//
// end INTEL_CUSTOMIZATION
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//
//
// This file defines the X86-64-specific builtin function database. Users of
// this file must define the BUILTIN macro to make use of this information.
//
//===----------------------------------------------------------------------===//

// The format of this database matches clang/Basic/Builtins.def.
#if INTEL_CUSTOMIZATION
#if defined(BUILTIN) && !defined(LANGBUILTIN)
#  define LANGBUILTIN(ID, TYPE, ATTRS, BUILTIN_LANG) BUILTIN(ID, TYPE, ATTRS)
#endif
#endif // INTEL_CUSTOMIZATION

#if defined(BUILTIN) && !defined(TARGET_BUILTIN)
#   define TARGET_BUILTIN(ID, TYPE, ATTRS, FEATURE) BUILTIN(ID, TYPE, ATTRS)
#endif

#if defined(BUILTIN) && !defined(TARGET_HEADER_BUILTIN)
#  define TARGET_HEADER_BUILTIN(ID, TYPE, ATTRS, HEADER, LANG, FEATURE) BUILTIN(ID, TYPE, ATTRS)
#endif

#if INTEL_CUSTOMIZATION
#if INTEL_FEATURE_ISA_AVX256P
#define EXT_FEATURES "|avx256p"
#else // INTEL_FEATURE_ISA_AVX256P
#define EXT_FEATURES ""
#endif // INTEL_FEATURE_ISA_AVX256P

TARGET_HEADER_BUILTIN(_BitScanForward64, "UcUNi*ULLi", "nh", INTRIN_H, ALL_MS_LANGUAGES, "")
TARGET_HEADER_BUILTIN(_BitScanReverse64, "UcUNi*ULLi", "nh", INTRIN_H, ALL_MS_LANGUAGES, "")

TARGET_HEADER_BUILTIN(__mulh,  "LLiLLiLLi",    "nch", INTRIN_H, ALL_MS_LANGUAGES, "")
TARGET_HEADER_BUILTIN(__umulh, "ULLiULLiULLi", "nch", INTRIN_H, ALL_MS_LANGUAGES, "")
TARGET_HEADER_BUILTIN(_mul128, "LLiLLiLLiLLi*",      "nch",   INTRIN_H, ALL_MS_LANGUAGES, "")
TARGET_HEADER_BUILTIN(_umul128, "ULLiULLiULLiULLi*", "nch",   INTRIN_H, ALL_MS_LANGUAGES, "")

TARGET_HEADER_BUILTIN(__faststorefence, "v", "nh", INTRIN_H, ALL_MS_LANGUAGES, "")
TARGET_HEADER_BUILTIN(__shiftleft128, "ULLiULLiULLiUc", "nch", INTRIN_H, ALL_MS_LANGUAGES, "")
TARGET_HEADER_BUILTIN(__shiftright128, "ULLiULLiULLiUc", "nch", INTRIN_H, ALL_MS_LANGUAGES, "")

TARGET_HEADER_BUILTIN(_InterlockedCompareExchange128, "UcLLiD*LLiLLiLLi*", "nh", INTRIN_H, ALL_MS_LANGUAGES, "cx16")

TARGET_BUILTIN(__builtin_ia32_readeflags_u64, "UOi", "n", "")
TARGET_BUILTIN(__builtin_ia32_writeeflags_u64, "vUOi", "n", "")
TARGET_BUILTIN(__builtin_ia32_cvtss2si64, "OiV4f", "ncV:128:", "sse")
TARGET_BUILTIN(__builtin_ia32_cvttss2si64, "OiV4f", "ncV:128:", "sse")
TARGET_BUILTIN(__builtin_ia32_cvtsd2si64, "OiV2d", "ncV:128:", "sse2")
TARGET_BUILTIN(__builtin_ia32_cvttsd2si64, "OiV2d", "ncV:128:", "sse2")
TARGET_BUILTIN(__builtin_ia32_movnti64, "vOi*Oi", "n", "sse2")
TARGET_BUILTIN(__builtin_ia32_vec_set_v2di, "V2OiV2OiOiIi", "ncV:128:", "sse4.1")
TARGET_BUILTIN(__builtin_ia32_crc32di, "UOiUOiUOi", "nc", "crc32")
TARGET_BUILTIN(__builtin_ia32_vec_ext_v4di, "OiV4OiIi", "ncV:256:", "avx")
TARGET_BUILTIN(__builtin_ia32_vec_set_v4di, "V4OiV4OiOiIi", "ncV:256:", "avx")
TARGET_BUILTIN(__builtin_ia32_rdfsbase32, "Ui", "n", "fsgsbase")
TARGET_BUILTIN(__builtin_ia32_rdfsbase64, "UOi", "n", "fsgsbase")
TARGET_BUILTIN(__builtin_ia32_rdgsbase32, "Ui", "n", "fsgsbase")
TARGET_BUILTIN(__builtin_ia32_rdgsbase64, "UOi", "n", "fsgsbase")
TARGET_BUILTIN(__builtin_ia32_wrfsbase32, "vUi", "n", "fsgsbase")
TARGET_BUILTIN(__builtin_ia32_wrfsbase64, "vUOi", "n", "fsgsbase")
TARGET_BUILTIN(__builtin_ia32_wrgsbase32, "vUi", "n", "fsgsbase")
TARGET_BUILTIN(__builtin_ia32_wrgsbase64, "vUOi", "n", "fsgsbase")
TARGET_BUILTIN(__builtin_ia32_fxrstor64, "vv*", "n", "fxsr")
TARGET_BUILTIN(__builtin_ia32_fxsave64, "vv*", "n", "fxsr")
TARGET_BUILTIN(__builtin_ia32_xsave64, "vv*UOi", "n", "xsave")
TARGET_BUILTIN(__builtin_ia32_xrstor64, "vv*UOi", "n", "xsave")
TARGET_BUILTIN(__builtin_ia32_xsaveopt64, "vv*UOi", "n", "xsaveopt")
TARGET_BUILTIN(__builtin_ia32_xrstors64, "vv*UOi", "n", "xsaves")
TARGET_BUILTIN(__builtin_ia32_xsavec64, "vv*UOi", "n", "xsavec")
TARGET_BUILTIN(__builtin_ia32_xsaves64, "vv*UOi", "n", "xsaves")
TARGET_BUILTIN(__builtin_ia32_incsspq, "vUOi", "n", "shstk")
TARGET_BUILTIN(__builtin_ia32_rdsspq, "UOiUOi", "n", "shstk")
TARGET_BUILTIN(__builtin_ia32_wrssq, "vUOiv*", "n", "shstk")
TARGET_BUILTIN(__builtin_ia32_wrussq, "vUOiv*", "n", "shstk")
TARGET_BUILTIN(__builtin_ia32_addcarryx_u64, "UcUcUOiUOiUOi*", "n", "")
TARGET_BUILTIN(__builtin_ia32_subborrow_u64, "UcUcUOiUOiUOi*", "n", "")
TARGET_BUILTIN(__builtin_ia32_rdrand64_step, "UiUOi*", "n", "rdrnd")
TARGET_BUILTIN(__builtin_ia32_rdseed64_step, "UiUOi*", "n", "rdseed")
TARGET_BUILTIN(__builtin_ia32_lzcnt_u64, "UOiUOi", "nc", "lzcnt")
TARGET_BUILTIN(__builtin_ia32_bextr_u64, "UOiUOiUOi", "nc", "bmi")
TARGET_BUILTIN(__builtin_ia32_tzcnt_u64, "UOiUOi", "nc", "")
TARGET_BUILTIN(__builtin_ia32_bzhi_di, "UOiUOiUOi", "nc", "bmi2")
TARGET_BUILTIN(__builtin_ia32_pdep_di, "UOiUOiUOi", "nc", "bmi2")
TARGET_BUILTIN(__builtin_ia32_pext_di, "UOiUOiUOi", "nc", "bmi2")
TARGET_BUILTIN(__builtin_ia32_bextri_u64, "UOiUOiIUOi", "nc", "tbm")
TARGET_BUILTIN(__builtin_ia32_lwpins64, "UcUOiUiIUi", "n", "lwp")
TARGET_BUILTIN(__builtin_ia32_lwpval64, "vUOiUiIUi", "n", "lwp")
TARGET_BUILTIN(__builtin_ia32_vcvtsd2si64, "OiV2dIi", "ncV:128:", "avx512f" EXT_FEATURES)
TARGET_BUILTIN(__builtin_ia32_vcvtsd2usi64, "UOiV2dIi", "ncV:128:", "avx512f" EXT_FEATURES)
TARGET_BUILTIN(__builtin_ia32_vcvtss2si64, "OiV4fIi", "ncV:128:", "avx512f" EXT_FEATURES)
TARGET_BUILTIN(__builtin_ia32_vcvtss2usi64, "UOiV4fIi", "ncV:128:", "avx512f" EXT_FEATURES)
TARGET_BUILTIN(__builtin_ia32_vcvttsd2si64, "OiV2dIi", "ncV:128:", "avx512f" EXT_FEATURES)
TARGET_BUILTIN(__builtin_ia32_vcvttsd2usi64, "UOiV2dIi", "ncV:128:", "avx512f" EXT_FEATURES)
TARGET_BUILTIN(__builtin_ia32_vcvttss2si64, "OiV4fIi", "ncV:128:", "avx512f" EXT_FEATURES)
TARGET_BUILTIN(__builtin_ia32_vcvttss2usi64, "UOiV4fIi", "ncV:128:", "avx512f" EXT_FEATURES)
TARGET_BUILTIN(__builtin_ia32_cvtsi2sd64, "V2dV2dOiIi", "ncV:128:", "avx512f" EXT_FEATURES)
TARGET_BUILTIN(__builtin_ia32_cvtsi2ss64, "V4fV4fOiIi", "ncV:128:", "avx512f" EXT_FEATURES)
TARGET_BUILTIN(__builtin_ia32_cvtusi2sd64, "V2dV2dUOiIi", "ncV:128:", "avx512f" EXT_FEATURES)
TARGET_BUILTIN(__builtin_ia32_cvtusi2ss64, "V4fV4fUOiIi", "ncV:128:", "avx512f" EXT_FEATURES)
TARGET_BUILTIN(__builtin_ia32_vcvtsh2si64, "OiV8xIi", "ncV:128:", "avx512fp16" EXT_FEATURES)
TARGET_BUILTIN(__builtin_ia32_vcvtsh2usi64, "UOiV8xIi", "ncV:128:", "avx512fp16" EXT_FEATURES)
TARGET_BUILTIN(__builtin_ia32_vcvtusi642sh, "V8xV8xUOiIi", "ncV:128:", "avx512fp16" EXT_FEATURES)
TARGET_BUILTIN(__builtin_ia32_vcvtsi642sh, "V8xV8xOiIi", "ncV:128:", "avx512fp16" EXT_FEATURES)
TARGET_BUILTIN(__builtin_ia32_vcvttsh2si64, "OiV8xIi", "ncV:128:", "avx512fp16" EXT_FEATURES)
TARGET_BUILTIN(__builtin_ia32_vcvttsh2usi64, "UOiV8xIi", "ncV:128:", "avx512fp16" EXT_FEATURES)
#endif // INTEL_CUSTOMIZATION
#if INTEL_CUSTOMIZATION
#if INTEL_FEATURE_ISA_AVX512_MOVRS
// FIXME: Remove the undisclosed target feature if needed.
TARGET_BUILTIN(__builtin_ia32_vmovadvisew_load_128, "V4iV4iC*Ic", "nV:128:", "avx512movrs,avx512vl|avxmovrs")
TARGET_BUILTIN(__builtin_ia32_vmovadvisew_store_128, "vV4i*V4iIc", "nV:128:", "avx512movrs,avx512vl|avxmovrs")
TARGET_BUILTIN(__builtin_ia32_vmovadvisew_load_256, "V8iV8iC*Ic", "nV:256:", "avx512movrs,avx512vl|avxmovrs")
TARGET_BUILTIN(__builtin_ia32_vmovadvisew_store_256, "vV8i*V8iIc", "nV:256:", "avx512movrs,avx512vl|avxmovrs")
TARGET_BUILTIN(__builtin_ia32_vmovadvisew_load_512, "V16iV16iC*Ic", "nV:512:", "avx512movrs")
TARGET_BUILTIN(__builtin_ia32_vmovadvisew_store_512, "vV16i*V16iIc", "nV:512:", "avx512movrs")

TARGET_BUILTIN(__builtin_ia32_vmemadvise_128, "vV16cC*Ic", "nc", "avx512movrs,avx512vl|avxmovrs")
TARGET_BUILTIN(__builtin_ia32_vmemadvise_256, "vV32cC*Ic", "nc", "avx512movrs,avx512vl|avxmovrs")
TARGET_BUILTIN(__builtin_ia32_vmemadvise_512, "vV64cC*Ic", "nc", "avx512movrs")
#endif // INTEL_FEATURE_ISA_AVX512_MOVRS

#if INTEL_FEATURE_ISA_AVX512_VPMM_FUTURE
TARGET_BUILTIN(__builtin_ia32_vmmxf16ps_128, "vV4f*V4f*V8xV8xV4fV4f", "nV:128:", "avx512vpmm,avx512vl")
TARGET_BUILTIN(__builtin_ia32_vmmxf16ps_256, "vV8f*V8f*V16xV16xV8fV8f", "nV:256:", "avx512vpmm,avx512vl")
TARGET_BUILTIN(__builtin_ia32_vmmxf16ps_512, "vV16f*V16f*V32xV32xV16fV16f", "nV:512:", "avx512vpmm")
TARGET_BUILTIN(__builtin_ia32_vmmif16ps_128, "V4fV4fV8xV8xIi", "nV:128:", "avx512vpmm,avx512vl")
TARGET_BUILTIN(__builtin_ia32_vmmif16ps_256, "V8fV8fV16xV16xIi", "nV:256:", "avx512vpmm,avx512vl")
TARGET_BUILTIN(__builtin_ia32_vmmif16ps_512, "V16fV16fV32xV32xIi", "nV:512:", "avx512vpmm,avx512vl")
#endif // INTEL_FEATURE_ISA_AVX512_VPMM_FUTURE

#if INTEL_FEATURE_ISA_AVX512_VPMM
TARGET_BUILTIN(__builtin_ia32_vmmf16ps_128, "V4fV4fV8xV8x", "nV:128:", "avx512vpmm,avx512vl")
TARGET_BUILTIN(__builtin_ia32_vmmf16ps_256, "V8fV8fV16xV16x", "nV:256:", "avx512vpmm,avx512vl")
TARGET_BUILTIN(__builtin_ia32_vmmf16ps_512, "V16fV16fV32xV32x", "nV:512:", "avx512vpmm,avx512vl")
TARGET_BUILTIN(__builtin_ia32_vmmbf16ps_512, "V16fV16fV32yV32y", "nV:512:", "avx512vpmm")
TARGET_BUILTIN(__builtin_ia32_vmmbf8ps_512, "V16fV16fV64cV64c", "nV:512:", "avx512vpmm")
TARGET_BUILTIN(__builtin_ia32_vmmbhf8ps_512, "V16fV16fV64cV64c", "nV:512:", "avx512vpmm")
TARGET_BUILTIN(__builtin_ia32_vmmhbf8ps_512, "V16fV16fV64cV64c", "nV:512:", "avx512vpmm")
TARGET_BUILTIN(__builtin_ia32_vmmhf8ps_512, "V16fV16fV64cV64c", "nV:512:", "avx512vpmm")
TARGET_BUILTIN(__builtin_ia32_vmmtf32ps_512, "V16fV16fV16iV16i", "nV:512:", "avx512vpmm")
TARGET_BUILTIN(__builtin_ia32_vpmmssbd_512, "V16iV16iV64cV64c", "nV:512:", "avx512vpmm")
TARGET_BUILTIN(__builtin_ia32_vpmmsubd_512, "V16iV16iV64cV64Uc", "nV:512:", "avx512vpmm")
TARGET_BUILTIN(__builtin_ia32_vpmmusbd_512, "V16iV16iV64UcV64c", "nV:512:", "avx512vpmm")
TARGET_BUILTIN(__builtin_ia32_vpmmuubd_512, "V16iV16iV64UcV64Uc", "nV:512:", "avx512vpmm")
TARGET_BUILTIN(__builtin_ia32_vmmbf16ps_256, "V8fV8fV16yV16y", "nV:256:", "avx512vpmm,avx512vl")
TARGET_BUILTIN(__builtin_ia32_vmmbf8ps_256, "V8fV8fV32cV32c", "nV:256:", "avx512vpmm,avx512vl")
TARGET_BUILTIN(__builtin_ia32_vmmbhf8ps_256, "V8fV8fV32cV32c", "nV:256:", "avx512vpmm,avx512vl")
TARGET_BUILTIN(__builtin_ia32_vmmhbf8ps_256, "V8fV8fV32cV32c", "nV:256:", "avx512vpmm,avx512vl")
TARGET_BUILTIN(__builtin_ia32_vmmhf8ps_256, "V8fV8fV32cV32c", "nV:256:", "avx512vpmm,avx512vl")
TARGET_BUILTIN(__builtin_ia32_vmmtf32ps_256, "V8fV8fV8iV8i", "nV:256:", "avx512vpmm,avx512vl")
TARGET_BUILTIN(__builtin_ia32_vpmmssbd_256, "V8iV8iV32cV32c", "nV:256:", "avx512vpmm,avx512vl")
TARGET_BUILTIN(__builtin_ia32_vpmmsubd_256, "V8iV8iV32cV32Uc", "nV:256:", "avx512vpmm,avx512vl")
TARGET_BUILTIN(__builtin_ia32_vpmmusbd_256, "V8iV8iV32UcV32c", "nV:256:", "avx512vpmm,avx512vl")
TARGET_BUILTIN(__builtin_ia32_vpmmuubd_256, "V8iV8iV32UcV32Uc", "nV:256:", "avx512vpmm,avx512vl")
TARGET_BUILTIN(__builtin_ia32_vmmbf16ps_128, "V4fV4fV8yV8y", "nV:128:", "avx512vpmm,avx512vl")
TARGET_BUILTIN(__builtin_ia32_vmmbf8ps_128, "V4fV4fV16cV16c", "nV:128:", "avx512vpmm,avx512vl")
TARGET_BUILTIN(__builtin_ia32_vmmbhf8ps_128, "V4fV4fV16cV16c", "nV:128:", "avx512vpmm,avx512vl")
TARGET_BUILTIN(__builtin_ia32_vmmhbf8ps_128, "V4fV4fV16cV16c", "nV:128:", "avx512vpmm,avx512vl")
TARGET_BUILTIN(__builtin_ia32_vmmhf8ps_128, "V4fV4fV16cV16c", "nV:128:", "avx512vpmm,avx512vl")
TARGET_BUILTIN(__builtin_ia32_vmmtf32ps_128, "V4fV4fV4iV4i", "nV:128:", "avx512vpmm,avx512vl")
TARGET_BUILTIN(__builtin_ia32_vpmmssbd_128, "V4iV4iV16cV16c", "nV:128:", "avx512vpmm,avx512vl")
TARGET_BUILTIN(__builtin_ia32_vpmmsubd_128, "V4iV4iV16cV16Uc", "nV:128:", "avx512vpmm,avx512vl")
TARGET_BUILTIN(__builtin_ia32_vpmmusbd_128, "V4iV4iV16UcV16c", "nV:128:", "avx512vpmm,avx512vl")
TARGET_BUILTIN(__builtin_ia32_vpmmuubd_128, "V4iV4iV16UcV16Uc", "nV:128:", "avx512vpmm,avx512vl")
#endif // INTEL_FEATURE_ISA_AVX512_VPMM

#endif // INTEL_CUSTOMIZATION
TARGET_BUILTIN(__builtin_ia32_directstore_u64, "vULi*ULi", "n", "movdiri")

// UINTR
TARGET_BUILTIN(__builtin_ia32_clui, "v", "n", "uintr")
TARGET_BUILTIN(__builtin_ia32_stui, "v", "n", "uintr")
TARGET_BUILTIN(__builtin_ia32_testui, "Uc", "n", "uintr")
TARGET_BUILTIN(__builtin_ia32_senduipi, "vUWi", "n", "uintr")
// USERMSR
TARGET_BUILTIN(__builtin_ia32_urdmsr, "ULLiULLi", "n", "usermsr")
TARGET_BUILTIN(__builtin_ia32_uwrmsr, "vULLiULLi", "n", "usermsr")

// AMX internal builtin
TARGET_BUILTIN(__builtin_ia32_tile_loadconfig_internal, "vvC*", "n", "amx-tile")
TARGET_BUILTIN(__builtin_ia32_tileloadd64_internal, "V256iUsUsvC*z", "n", "amx-tile")
TARGET_BUILTIN(__builtin_ia32_tileloaddt164_internal, "V256iUsUsvC*z", "n", "amx-tile")
TARGET_BUILTIN(__builtin_ia32_tdpbssd_internal, "V256iUsUsUsV256iV256iV256i", "n", "amx-int8")
TARGET_BUILTIN(__builtin_ia32_tdpbsud_internal, "V256iUsUsUsV256iV256iV256i", "n", "amx-int8")
TARGET_BUILTIN(__builtin_ia32_tdpbusd_internal, "V256iUsUsUsV256iV256iV256i", "n", "amx-int8")
TARGET_BUILTIN(__builtin_ia32_tdpbuud_internal, "V256iUsUsUsV256iV256iV256i", "n", "amx-int8")
TARGET_BUILTIN(__builtin_ia32_tilestored64_internal, "vUsUsv*zV256i", "n", "amx-tile")
TARGET_BUILTIN(__builtin_ia32_tilezero_internal, "V256iUsUs", "n", "amx-tile")
TARGET_BUILTIN(__builtin_ia32_tdpbf16ps_internal, "V256iUsUsUsV256iV256iV256i", "n", "amx-bf16")
TARGET_BUILTIN(__builtin_ia32_tdpfp16ps_internal, "V256iUsUsUsV256iV256iV256i", "n", "amx-fp16")
TARGET_BUILTIN(__builtin_ia32_tcmmimfp16ps_internal, "V256iUsUsUsV256iV256iV256i", "n", "amx-complex")
TARGET_BUILTIN(__builtin_ia32_tcmmrlfp16ps_internal, "V256iUsUsUsV256iV256iV256i", "n", "amx-complex")
// AMX
TARGET_BUILTIN(__builtin_ia32_tile_loadconfig, "vvC*", "n", "amx-tile")
TARGET_BUILTIN(__builtin_ia32_tile_storeconfig, "vvC*", "n", "amx-tile")
TARGET_BUILTIN(__builtin_ia32_tilerelease, "v", "n", "amx-tile")
TARGET_BUILTIN(__builtin_ia32_tilezero, "vUc", "n", "amx-tile")

TARGET_BUILTIN(__builtin_ia32_tileloadd64, "vIUcvC*z", "n", "amx-tile")
TARGET_BUILTIN(__builtin_ia32_tileloaddt164, "vIUcvC*z", "n", "amx-tile")
TARGET_BUILTIN(__builtin_ia32_tilestored64, "vIUcv*z", "n", "amx-tile")

TARGET_BUILTIN(__builtin_ia32_tdpbssd, "vIUcIUcIUc", "n", "amx-int8")
TARGET_BUILTIN(__builtin_ia32_tdpbsud, "vIUcIUcIUc", "n", "amx-int8")
TARGET_BUILTIN(__builtin_ia32_tdpbusd, "vIUcIUcIUc", "n", "amx-int8")
TARGET_BUILTIN(__builtin_ia32_tdpbuud, "vIUcIUcIUc", "n", "amx-int8")
TARGET_BUILTIN(__builtin_ia32_tdpbf16ps, "vIUcIUcIUc", "n", "amx-bf16")
TARGET_BUILTIN(__builtin_ia32_ptwrite64, "vUOi", "n", "ptwrite")

#if INTEL_CUSTOMIZATION
#if INTEL_FEATURE_ISA_AMX_FP8
TARGET_BUILTIN(__builtin_ia32_tdpbf8ps, "vIUcIUcIUc", "n", "amx-fp8")
TARGET_BUILTIN(__builtin_ia32_tdpbhf8ps, "vIUcIUcIUc", "n", "amx-fp8")
TARGET_BUILTIN(__builtin_ia32_tdphbf8ps, "vIUcIUcIUc", "n", "amx-fp8")
TARGET_BUILTIN(__builtin_ia32_tdphf8ps, "vIUcIUcIUc", "n", "amx-fp8")
#endif // INTEL_FEATURE_ISA_AMX_FP8

#if INTEL_FEATURE_ISA_AMX_FP8_FUTURE
TARGET_BUILTIN(__builtin_ia32_ttdpbf8ps, "vIUcIUcIUc", "n", "amx-fp8")
TARGET_BUILTIN(__builtin_ia32_ttdpbhf8ps, "vIUcIUcIUc", "n", "amx-fp8")
TARGET_BUILTIN(__builtin_ia32_ttdphbf8ps, "vIUcIUcIUc", "n", "amx-fp8")
TARGET_BUILTIN(__builtin_ia32_ttdphf8ps, "vIUcIUcIUc", "n", "amx-fp8")
#endif // INTEL_FEATURE_ISA_AMX_FP8_FUTURE

#if INTEL_FEATURE_ISA_AMX_MOVRS
TARGET_BUILTIN(__builtin_ia32_tmovadvise_load, "vIUcvC*zIc", "n", "amx-movrs")
TARGET_BUILTIN(__builtin_ia32_tmovadvise_store, "vv*zIUcIc", "n", "amx-movrs")
TARGET_BUILTIN(__builtin_ia32_t2rpntlvwz0advise, "vIUcvC*zIUi", "n", "amx-movrs")
TARGET_BUILTIN(__builtin_ia32_t2rpntlvwz1advise, "vIUcvC*zIUi", "n", "amx-movrs")
#endif // INTEL_FEATURE_ISA_AMX_MOVRS

#if INTEL_FEATURE_ISA_AMX_MEMADVISE_EVEX
TARGET_BUILTIN(__builtin_ia32_t2rpntlvwz0advisee, "vIUcvC*zIUi", "n", "amx-memadvise-evex")
TARGET_BUILTIN(__builtin_ia32_t2rpntlvwz1advisee, "vIUcvC*zIUi", "n", "amx-memadvise-evex")
#endif // INTEL_FEATURE_ISA_AMX_MEMADVISE_EVEX

#if INTEL_FEATURE_ISA_AMX_FUTURE
// AMX_FUTURE Reduce
TARGET_BUILTIN(__builtin_ia32_tcoladdbcastps, "vIUcIUc", "n", "amx-reduce")
TARGET_BUILTIN(__builtin_ia32_tcoladdps, "vv*IUc", "n", "amx-reduce")
// AMX_FUTURE Memory
TARGET_BUILTIN(__builtin_ia32_tgatherrowd, "vIUcvC*vC*", "n", "amx-memory")
TARGET_BUILTIN(__builtin_ia32_tgatherrowdt1, "vIUcvC*vC*", "n", "amx-memory")
TARGET_BUILTIN(__builtin_ia32_tgatherrowq, "vIUcvC*vC*", "n", "amx-memory")
TARGET_BUILTIN(__builtin_ia32_tgatherrowqt1, "vIUcvC*vC*", "n", "amx-memory")
TARGET_BUILTIN(__builtin_ia32_tscatterrowd, "vv*v*IUc", "n", "amx-memory")
TARGET_BUILTIN(__builtin_ia32_tscatterrowdt1, "vv*v*IUc", "n", "amx-memory")
TARGET_BUILTIN(__builtin_ia32_tscatterrowq, "vv*v*IUc", "n", "amx-memory")
TARGET_BUILTIN(__builtin_ia32_tscatterrowqt1, "vv*v*IUc", "n", "amx-memory")
// AMX_FUTURE Format
TARGET_BUILTIN(__builtin_ia32_tblendvd, "vIUcIUcIUc", "n", "amx-format")
TARGET_BUILTIN(__builtin_ia32_tinterleaveeb, "vIUcIUcIUc", "n", "amx-format")
TARGET_BUILTIN(__builtin_ia32_tinterleaveew, "vIUcIUcIUc", "n", "amx-format")
TARGET_BUILTIN(__builtin_ia32_tinterleaveob, "vIUcIUcIUc", "n", "amx-format")
TARGET_BUILTIN(__builtin_ia32_tinterleaveow, "vIUcIUcIUc", "n", "amx-format")
TARGET_BUILTIN(__builtin_ia32_tnarrowb, "vIUcIUcIc", "n", "amx-format")
TARGET_BUILTIN(__builtin_ia32_tnarroww, "vIUcIUcIc", "n", "amx-format")
TARGET_BUILTIN(__builtin_ia32_tpermb_reg, "vIUcIUcIUc", "n", "amx-format")
TARGET_BUILTIN(__builtin_ia32_tpermb_mem, "vIUcIUcvC*", "n", "amx-format")
TARGET_BUILTIN(__builtin_ia32_tpermd_reg, "vIUcIUcIUc", "n", "amx-format")
TARGET_BUILTIN(__builtin_ia32_tpermd_mem, "vIUcIUcvC*", "n", "amx-format")
TARGET_BUILTIN(__builtin_ia32_tpermw_reg, "vIUcIUcIUc", "n", "amx-format")
TARGET_BUILTIN(__builtin_ia32_tpermw_mem, "vIUcIUcvC*", "n", "amx-format")
TARGET_BUILTIN(__builtin_ia32_twidenb, "vIUcIUcIc", "n", "amx-format")
TARGET_BUILTIN(__builtin_ia32_twidenw, "vIUcIUcIc", "n", "amx-format")
// AMX_FUTURE Element
TARGET_BUILTIN(__builtin_ia32_taddps_reg, "vIUcIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_taddps_mem, "vIUcIUcvC*", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tandd_reg, "vIUcIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tandd_mem, "vIUcIUcvC*", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tandnd_reg, "vIUcIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tandnd_mem, "vIUcIUcvC*", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tcmpps_reg, "vIUcIUcIUcIc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tcmpps_mem, "vIUcIUcvC*Ic", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tcvtb2ps, "vIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tcvtbf162ps, "vIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tcvtd2ps, "vIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tcvtps2bf16, "vIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tcvtps2bs, "vIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tcvtps2ubs, "vIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tcvtub2ps, "vIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tfmaddps_reg, "vIUcIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tfmaddps_mem, "vIUcIUcvC*", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tfmsubps_reg, "vIUcIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tfmsubps_mem, "vIUcIUcvC*", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tfnmaddps_reg, "vIUcIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tfnmaddps_mem, "vIUcIUcvC*", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tfnmsubps_reg, "vIUcIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tfnmsubps_mem, "vIUcIUcvC*", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tmaxps_reg, "vIUcIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tmaxps_mem, "vIUcIUcvC*", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tminps_reg, "vIUcIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tminps_mem, "vIUcIUcvC*", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tmulps_reg, "vIUcIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tmulps_mem, "vIUcIUcvC*", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tord_reg, "vIUcIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tord_mem, "vIUcIUcvC*", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_trcp14ps, "vIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_treduceps, "vIUcIUcIc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tscalefps_reg, "vIUcIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tscalefps_mem, "vIUcIUcvC*", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tslld, "vIUcIUcIc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tsrld, "vIUcIUcIc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tsrlvd_reg, "vIUcIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tsrlvd_mem, "vIUcIUcvC*", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tsubps_reg, "vIUcIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_tsubps_mem, "vIUcIUcvC*", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_txord_reg, "vIUcIUcIUc", "n", "amx-element")
TARGET_BUILTIN(__builtin_ia32_txord_mem, "vIUcIUcvC*", "n", "amx-element")
#endif // INTEL_FEATURE_ISA_AMX_FUTURE

#if INTEL_FEATURE_ISA_AMX_TRANSPOSE
// AMX_TRANSPOSE Transpose
TARGET_BUILTIN(__builtin_ia32_ttransposed_internal, "V256iUsUsV256i", "n", "amx-transpose")
TARGET_BUILTIN(__builtin_ia32_ttdpbf16ps_internal, "V256iUsUsUsV256iV256iV256i", "n", "amx-transpose")
TARGET_BUILTIN(__builtin_ia32_ttdpfp16ps_internal, "V256iUsUsUsV256iV256iV256i", "n", "amx-transpose")

TARGET_BUILTIN(__builtin_ia32_tilemovrowe_internal, "V16fUsUsV256iUi", "n", "amx-avx512")
TARGET_BUILTIN(__builtin_ia32_tilemovrowi_internal, "V16fUsUsV256iIUi", "n", "amx-avx512")

TARGET_BUILTIN(__builtin_ia32_tconjtcmmimfp16ps_internal, "V256iUsUsUsV256iV256iV256i", "n", "amx-transpose")
TARGET_BUILTIN(__builtin_ia32_ttcmmimfp16ps_internal, "V256iUsUsUsV256iV256iV256i", "n", "amx-transpose")
TARGET_BUILTIN(__builtin_ia32_ttcmmrlfp16ps_internal, "V256iUsUsUsV256iV256iV256i", "n", "amx-transpose")
TARGET_BUILTIN(__builtin_ia32_tconjtfp16_internal, "V256iUsUsV256i", "n", "amx-transpose")

// TODO: Use 2048-bytes output type for tile-pair output builtin.
TARGET_BUILTIN(__builtin_ia32_t2rpntlvwz0_internal, "vUsUsUsV256i*V256i*vC*z", "n", "amx-transpose")
TARGET_BUILTIN(__builtin_ia32_t2rpntlvwz0t1_internal, "vUsUsUsV256i*V256i*vC*z", "n", "amx-transpose")
TARGET_BUILTIN(__builtin_ia32_t2rpntlvwz1_internal, "vUsUsUsV256i*V256i*vC*z", "n", "amx-transpose")
TARGET_BUILTIN(__builtin_ia32_t2rpntlvwz1t1_internal, "vUsUsUsV256i*V256i*vC*z", "n", "amx-transpose")

TARGET_BUILTIN(__builtin_ia32_tconjtcmmimfp16ps, "vIUcIUcIUc", "n", "amx-transpose")
TARGET_BUILTIN(__builtin_ia32_tconjtfp16, "vIUcIUc", "n", "amx-transpose")
TARGET_BUILTIN(__builtin_ia32_ttcmmimfp16ps, "vIUcIUcIUc", "n", "amx-transpose")
TARGET_BUILTIN(__builtin_ia32_ttcmmrlfp16ps, "vIUcIUcIUc", "n", "amx-transpose")

TARGET_BUILTIN(__builtin_ia32_t2rpntlvw, "vIUcvC*zULLi", "n",
               "amx-transpose")
TARGET_BUILTIN(__builtin_ia32_t2rpntlvwt1, "vIUcvC*zULLi", "n",
               "amx-transpose")
TARGET_BUILTIN(__builtin_ia32_t2rpntlvwz0, "vIUcvC*z", "n", "amx-transpose")
TARGET_BUILTIN(__builtin_ia32_t2rpntlvwz0t1, "vIUcvC*z", "n","amx-transpose")
TARGET_BUILTIN(__builtin_ia32_t2rpntlvwz1, "vIUcvC*z", "n", "amx-transpose")
TARGET_BUILTIN(__builtin_ia32_t2rpntlvwz1t1, "vIUcvC*z", "n","amx-transpose")
TARGET_BUILTIN(__builtin_ia32_ttdpbf16ps, "vIUcIUcIUc", "n", "amx-transpose")
TARGET_BUILTIN(__builtin_ia32_ttdpfp16ps, "vIUcIUcIUc", "n", "amx-transpose")
TARGET_BUILTIN(__builtin_ia32_ttransposed, "vIUcIUc", "n", "amx-transpose")

// AMX_TRANSPOSE AVX512
TARGET_BUILTIN(__builtin_ia32_tilemovei, "V16fIUcIUc", "n", "amx-avx512")
TARGET_BUILTIN(__builtin_ia32_tilemovee, "V16fIUcUi", "n", "amx-avx512")
TARGET_BUILTIN(__builtin_ia32_tilemovex, "V16fIUcV4f", "n", "amx-avx512")

#endif // INTEL_FEATURE_ISA_AMX_TRANSPOSE

#if INTEL_FEATURE_ISA_AMX_AVX512_TILE16MOV
// AMX-AVX512-TILE16MOV
TARGET_BUILTIN(__builtin_ia32_tile16move, "vIUcV16fV16fV16fV16fV16fV16fV16fV16fV16fV16fV16fV16fV16fV16fV16fV16f", "n", "amx-avx512-tile16mov")
#endif // INTEL_FEATURE_ISA_AMX_AVX512_TILE16MOV

#if INTEL_FEATURE_ISA_AMX_MEMORY2
TARGET_BUILTIN(__builtin_ia32_tbroadcastrowd, "vIUcvC*", "n", "amx-memory2")
TARGET_BUILTIN(__builtin_ia32_tstorehd, "vv*zIUc", "n", "amx-memory2")
TARGET_BUILTIN(__builtin_ia32_tstorehdt1, "vv*zIUc", "n", "amx-memory2")
TARGET_BUILTIN(__builtin_ia32_tstorentd, "vv*zIUc", "n", "amx-memory2")
TARGET_BUILTIN(__builtin_ia32_tstoreqd, "vv*zIUc", "n", "amx-memory2")
TARGET_BUILTIN(__builtin_ia32_tstoreqdt1, "vv*zIUc", "n", "amx-memory2")
TARGET_BUILTIN(__builtin_ia32_tstorerowd, "vv*IUc", "n", "amx-memory2")
#endif // INTEL_FEATURE_ISA_AMX_MEMORY2

#if INTEL_FEATURE_ISA_AMX_BF16_EVEX
// AMX BF16-EVEX
TARGET_BUILTIN(__builtin_ia32_tdpbf16pse, "vIUcIUcIUc", "n", "amx-bf16-evex")
#endif // INTEL_FEATURE_ISA_AMX_BF16_EVEX

#if INTEL_FEATURE_ISA_AMX_ELEMENT_EVEX
// AMX_ELEMENT-EVEX
TARGET_BUILTIN(__builtin_ia32_tcvtd2pse, "vv*zIUc", "n", "amx-element-evex")
#endif // INTEL_FEATURE_ISA_AMX_ELEMENT_EVEX

#if INTEL_FEATURE_ISA_AMX_INT8_EVEX
// AMX INT8-EVEX
TARGET_BUILTIN(__builtin_ia32_tdpbssde, "vIUcIUcIUc", "n", "amx-int8-evex")
TARGET_BUILTIN(__builtin_ia32_tdpbsude, "vIUcIUcIUc", "n", "amx-int8-evex")
TARGET_BUILTIN(__builtin_ia32_tdpbusde, "vIUcIUcIUc", "n", "amx-int8-evex")
TARGET_BUILTIN(__builtin_ia32_tdpbuude, "vIUcIUcIUc", "n", "amx-int8-evex")
#endif // INTEL_FEATURE_ISA_AMX_INT8_EVEX

#if INTEL_FEATURE_ISA_AMX_TILE_EVEX
// AMX TILE-EVEX
TARGET_BUILTIN(__builtin_ia32_tileloadde64, "vIUcvC*z", "n", "amx-tile-evex")
TARGET_BUILTIN(__builtin_ia32_tileloaddt1e64, "vIUcvC*z", "n", "amx-tile-evex")
TARGET_BUILTIN(__builtin_ia32_tilemove, "vIUcIUc", "n", "amx-tile-evex")
TARGET_BUILTIN(__builtin_ia32_tilestorede64, "vIUcv*z", "n", "amx-tile-evex")
TARGET_BUILTIN(__builtin_ia32_tilezeroe, "vUc", "n", "amx-tile-evex")
#endif // INTEL_FEATURE_ISA_AMX_TILE_EVEX

#if INTEL_FEATURE_ISA_AMX_TRANSPOSE2
// AMX_TRANSPOSE2 Transpose
TARGET_BUILTIN(__builtin_ia32_t2transposew, "vIUcvC*zULLi", "n",
               "amx-transpose2")
TARGET_BUILTIN(__builtin_ia32_t2transposewt1, "vIUcvC*zULLi", "n",
               "amx-transpose2")
TARGET_BUILTIN(__builtin_ia32_t4rqntlvbz0, "vIUcvC*z", "n",
               "amx-transpose2")
TARGET_BUILTIN(__builtin_ia32_t4rqntlvbz0t1, "vIUcvC*z", "n",
               "amx-transpose2")
TARGET_BUILTIN(__builtin_ia32_t4rqntlvbz1, "vIUcvC*z", "n",
               "amx-transpose2")
TARGET_BUILTIN(__builtin_ia32_t4rqntlvbz1t1, "vIUcvC*z", "n",
               "amx-transpose2")
TARGET_BUILTIN(__builtin_ia32_t4rqntlvbz2, "vIUcvC*z", "n",
               "amx-transpose2")
TARGET_BUILTIN(__builtin_ia32_t4rqntlvbz2t1, "vIUcvC*z", "n",
               "amx-transpose2")
TARGET_BUILTIN(__builtin_ia32_t4rqntlvbz3, "vIUcvC*z", "n",
               "amx-transpose2")
TARGET_BUILTIN(__builtin_ia32_t4rqntlvbz3t1, "vIUcvC*z", "n",
               "amx-transpose2")
TARGET_BUILTIN(__builtin_ia32_ttdpbssd, "vIUcIUcIUc", "n", "amx-transpose2")
TARGET_BUILTIN(__builtin_ia32_ttdpbsud, "vIUcIUcIUc", "n", "amx-transpose2")
TARGET_BUILTIN(__builtin_ia32_ttdpbusd, "vIUcIUcIUc", "n", "amx-transpose2")
TARGET_BUILTIN(__builtin_ia32_ttdpbuud, "vIUcIUcIUc", "n", "amx-transpose2")
#endif // INTEL_FEATURE_ISA_AMX_TRANSPOSE2

#if INTEL_FEATURE_ISA_AMX_CONVERT
// AMX_CONVERT
TARGET_BUILTIN(__builtin_ia32_tcvt2ps2bf16, "vv*zIUcIUc", "n", "amx-convert")
TARGET_BUILTIN(__builtin_ia32_tcvt2ps2ph, "vv*zIUcIUc", "n", "amx-convert")
TARGET_BUILTIN(__builtin_ia32_amxconvert_tcvtd2ps, "vv*zIUc", "n", "amx-convert")
TARGET_BUILTIN(__builtin_ia32_amxconvert_tcvtps2bf16, "vv*zIUc", "n", "amx-convert")
TARGET_BUILTIN(__builtin_ia32_tcvtps2ph, "vv*zIUc", "n", "amx-convert")
#endif // INTEL_FEATURE_ISA_AMX_CONVERT

#if INTEL_FEATURE_ISA_AMX_TILE2
// AMX_TILE2
TARGET_BUILTIN(__builtin_ia32_tilemov, "vIUcIUc", "n", "amx-tile2")
#endif // INTEL_FEATURE_ISA_AMX_TILE2

#if INTEL_FEATURE_ISA_AMX_TF32
TARGET_BUILTIN(__builtin_ia32_tmmultf32ps_internal, "V256iUsUsUsV256iV256iV256i", "n", "amx-tf32")
TARGET_BUILTIN(__builtin_ia32_ttmmultf32ps_internal, "V256iUsUsUsV256iV256iV256i", "n", "amx-tf32")

TARGET_BUILTIN(__builtin_ia32_tmmultf32ps, "vIUcIUcIUc", "n", "amx-tf32")
TARGET_BUILTIN(__builtin_ia32_ttmmultf32ps, "vIUcIUcIUc", "n", "amx-tf32")
#endif // INTEL_FEATURE_ISA_AMX_TF32
#endif // INTEL_CUSTOMIZATION

#if INTEL_CUSTOMIZATION
#if INTEL_FEATURE_ISA_GPR_MOVGET
TARGET_BUILTIN(__builtin_ia32_movget64, "ULLiULLiC*", "n", "gprmovget")
#endif // INTEL_FEATURE_ISA_GPR_MOVGET

#if INTEL_FEATURE_ISA_MOVGET64B
TARGET_BUILTIN(__builtin_ia32_movget64b64, "ULLiV16UiC*", "nV:512:", "movget64b")
#endif // INTEL_FEATURE_ISA_MOVGET64B

#if INTEL_FEATURE_ISA_AMX_AVX512
TARGET_BUILTIN(__builtin_ia32_tcvtrowd2pse_internal, "V16fUsUsV256iUi", "n", "amx-avx512")
TARGET_BUILTIN(__builtin_ia32_tcvtrowd2psi_internal, "V16fUsUsV256iIUi", "n", "amx-avx512")

// TODO update ret type v32i16 to v32bf16 according to LNC-EAS-06-29-2021-SPEC.
TARGET_BUILTIN(__builtin_ia32_tcvtrowps2pbf16he_internal, "V32yUsUsV256iUi", "n", "amx-avx512")
TARGET_BUILTIN(__builtin_ia32_tcvtrowps2pbf16hi_internal, "V32yUsUsV256iIUi", "n", "amx-avx512")
TARGET_BUILTIN(__builtin_ia32_tcvtrowps2pbf16le_internal, "V32yUsUsV256iUi", "n", "amx-avx512")
TARGET_BUILTIN(__builtin_ia32_tcvtrowps2pbf16li_internal, "V32yUsUsV256iIUi", "n", "amx-avx512")

TARGET_BUILTIN(__builtin_ia32_tcvtrowps2phhe_internal, "V32xUsUsV256iUi", "n", "amx-avx512")
TARGET_BUILTIN(__builtin_ia32_tcvtrowps2phhi_internal, "V32xUsUsV256iIUi", "n", "amx-avx512")
TARGET_BUILTIN(__builtin_ia32_tcvtrowps2phle_internal, "V32xUsUsV256iUi", "n", "amx-avx512")
TARGET_BUILTIN(__builtin_ia32_tcvtrowps2phli_internal, "V32xUsUsV256iIUi", "n", "amx-avx512")

// AUTO GENERATED BY TOOL
TARGET_BUILTIN(__builtin_ia32_tcvtrowd2pse, "V16fIUcUi", "n", "amx-avx512")
TARGET_BUILTIN(__builtin_ia32_tcvtrowd2psi, "V16fIUcIUi", "n", "amx-avx512")
TARGET_BUILTIN(__builtin_ia32_tcvtrowps2pbf16he, "V32yIUcUi", "n", "amx-avx512")
TARGET_BUILTIN(__builtin_ia32_tcvtrowps2pbf16hi, "V32yIUcIUi", "n", "amx-avx512")
TARGET_BUILTIN(__builtin_ia32_tcvtrowps2pbf16le, "V32yIUcUi", "n", "amx-avx512")
TARGET_BUILTIN(__builtin_ia32_tcvtrowps2pbf16li, "V32yIUcIUi", "n", "amx-avx512")
TARGET_BUILTIN(__builtin_ia32_tcvtrowps2phhe, "V32xIUcUi", "n", "amx-avx512")
TARGET_BUILTIN(__builtin_ia32_tcvtrowps2phhi, "V32xIUcIUi", "n", "amx-avx512")
TARGET_BUILTIN(__builtin_ia32_tcvtrowps2phle, "V32xIUcUi", "n", "amx-avx512")
TARGET_BUILTIN(__builtin_ia32_tcvtrowps2phli, "V32xIUcIUi", "n", "amx-avx512")
// end AUTO GENERATED BY TOOL
#endif // INTEL_FEATURE_ISA_AMX_AVX512

#if INTEL_FEATURE_ISA_AMX_SPARSE
// AUTO GENERATED BY TOOL
TARGET_BUILTIN(__builtin_ia32_tdpsbssd, "vIUcIUcIUc", "n", "amx-sparse")
TARGET_BUILTIN(__builtin_ia32_tdpsbsud, "vIUcIUcIUc", "n", "amx-sparse")
TARGET_BUILTIN(__builtin_ia32_tdpsbusd, "vIUcIUcIUc", "n", "amx-sparse")
TARGET_BUILTIN(__builtin_ia32_tdpsbuud, "vIUcIUcIUc", "n", "amx-sparse")
TARGET_BUILTIN(__builtin_ia32_tdpsbf16ps, "vIUcIUcIUc", "n", "amx-sparse")
TARGET_BUILTIN(__builtin_ia32_tdpsfp16ps, "vIUcIUcIUc", "n", "amx-sparse")
TARGET_BUILTIN(__builtin_ia32_tldexpandb, "vIUcvC*zUi", "n", "amx-sparse")
TARGET_BUILTIN(__builtin_ia32_tldexpandbt1, "vIUcvC*zUi", "n", "amx-sparse")
TARGET_BUILTIN(__builtin_ia32_tldexpandw, "vIUcvC*zUi", "n", "amx-sparse")
TARGET_BUILTIN(__builtin_ia32_tldexpandwt1, "vIUcvC*zUi", "n", "amx-sparse")
// end AUTO GENERATED BY TOOL
#endif // INTEL_FEATURE_ISA_AMX_SPARSE

#if INTEL_FEATURE_ISA_AMX_V3
// AUTO GENERATED BY TOOL
TARGET_BUILTIN(__builtin_ia32_tloadtransposed, "vIUcvC*z", "n", "amx-v3")
TARGET_BUILTIN(__builtin_ia32_tloadtransposedt1, "vIUcvC*z", "n", "amx-v3")
TARGET_BUILTIN(__builtin_ia32_trpntlvwz0, "vIUcvC*z", "n", "amx-v3")
TARGET_BUILTIN(__builtin_ia32_trpntlvwz0t1, "vIUcvC*z", "n", "amx-v3")
TARGET_BUILTIN(__builtin_ia32_trpntlvwz1, "vIUcvC*z", "n", "amx-v3")
TARGET_BUILTIN(__builtin_ia32_trpntlvwz1t1, "vIUcvC*z", "n", "amx-v3")
TARGET_BUILTIN(__builtin_ia32_tstoretransposed, "vv*zIUc", "n", "amx-v3")
// end AUTO GENERATED BY TOOL
#endif // INTEL_FEATURE_ISA_AMX_V3
#endif // INTEL_CUSTOMIZATION

#if INTEL_CUSTOMIZATION
LANGBUILTIN(get_compute_id, "zi", "i", ALL_OCL_LANGUAGES)
LANGBUILTIN(read_pipe, "i.", "tn", INTEL_FPGA_PIPE1X)
LANGBUILTIN(write_pipe, "i.", "tn", INTEL_FPGA_PIPE1X)
#undef LANGBUILTIN
#endif // INTEL_CUSTOMIZATION
TARGET_BUILTIN(__builtin_ia32_tcmmimfp16ps, "vIUcIUcIUc", "n", "amx-complex")
TARGET_BUILTIN(__builtin_ia32_tcmmrlfp16ps, "vIUcIUcIUc", "n", "amx-complex")

TARGET_BUILTIN(__builtin_ia32_prefetchi, "vvC*Ui", "nc", "prefetchi")
TARGET_BUILTIN(__builtin_ia32_cmpccxadd32, "Siv*SiSiIi", "n", "cmpccxadd")
TARGET_BUILTIN(__builtin_ia32_cmpccxadd64, "SLLiv*SLLiSLLiIi", "n", "cmpccxadd")

// AMX_FP16 FP16
TARGET_BUILTIN(__builtin_ia32_tdpfp16ps, "vIUcIUcIUc", "n", "amx-fp16")

// RAO-INT
TARGET_BUILTIN(__builtin_ia32_aadd64, "vv*SOi", "n", "raoint")
TARGET_BUILTIN(__builtin_ia32_aand64, "vv*SOi", "n", "raoint")
TARGET_BUILTIN(__builtin_ia32_aor64, "vv*SOi", "n", "raoint")
TARGET_BUILTIN(__builtin_ia32_axor64, "vv*SOi", "n", "raoint")

#undef BUILTIN
#undef TARGET_BUILTIN
#undef TARGET_HEADER_BUILTIN
